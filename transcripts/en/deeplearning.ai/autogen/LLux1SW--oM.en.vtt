WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.780 align:start position:0%
 
so<00:00:01.020><c> far</c><00:00:01.319><c> the</c><00:00:01.589><c> classification</c><00:00:02.159><c> examples</c><00:00:02.669><c> we've</c>

00:00:02.780 --> 00:00:02.790 align:start position:0%
so far the classification examples we've
 

00:00:02.790 --> 00:00:04.400 align:start position:0%
so far the classification examples we've
talked<00:00:03.000><c> about</c><00:00:03.120><c> have</c><00:00:03.449><c> used</c><00:00:03.720><c> binary</c>

00:00:04.400 --> 00:00:04.410 align:start position:0%
talked about have used binary
 

00:00:04.410 --> 00:00:06.019 align:start position:0%
talked about have used binary
classification<00:00:04.799><c> where</c><00:00:05.490><c> you</c><00:00:05.580><c> had</c><00:00:05.759><c> two</c>

00:00:06.019 --> 00:00:06.029 align:start position:0%
classification where you had two
 

00:00:06.029 --> 00:00:08.930 align:start position:0%
classification where you had two
possible<00:00:06.480><c> labels</c><00:00:06.870><c> zero</c><00:00:07.680><c> or</c><00:00:07.890><c> one</c><00:00:08.099><c> is</c><00:00:08.340><c> in</c><00:00:08.550><c> a</c><00:00:08.639><c> cat</c>

00:00:08.930 --> 00:00:08.940 align:start position:0%
possible labels zero or one is in a cat
 

00:00:08.940 --> 00:00:10.879 align:start position:0%
possible labels zero or one is in a cat
as<00:00:09.150><c> an</c><00:00:09.330><c> alley</c><00:00:09.510><c> cat</c><00:00:09.750><c> what</c><00:00:10.530><c> if</c><00:00:10.650><c> you</c><00:00:10.710><c> have</c>

00:00:10.879 --> 00:00:10.889 align:start position:0%
as an alley cat what if you have
 

00:00:10.889 --> 00:00:13.280 align:start position:0%
as an alley cat what if you have
multiple<00:00:11.460><c> possible</c><00:00:11.700><c> classes</c><00:00:12.150><c> there's</c><00:00:13.139><c> a</c>

00:00:13.280 --> 00:00:13.290 align:start position:0%
multiple possible classes there's a
 

00:00:13.290 --> 00:00:15.350 align:start position:0%
multiple possible classes there's a
generalization<00:00:14.070><c> of</c><00:00:14.099><c> logistic</c><00:00:14.910><c> regression</c>

00:00:15.350 --> 00:00:15.360 align:start position:0%
generalization of logistic regression
 

00:00:15.360 --> 00:00:17.599 align:start position:0%
generalization of logistic regression
called<00:00:15.690><c> softmax</c><00:00:16.139><c> regression</c><00:00:16.710><c> that</c><00:00:17.160><c> lets</c><00:00:17.400><c> you</c>

00:00:17.599 --> 00:00:17.609 align:start position:0%
called softmax regression that lets you
 

00:00:17.609 --> 00:00:19.220 align:start position:0%
called softmax regression that lets you
make<00:00:18.000><c> predictions</c><00:00:18.600><c> where</c><00:00:18.869><c> you're</c><00:00:18.990><c> trying</c><00:00:19.140><c> to</c>

00:00:19.220 --> 00:00:19.230 align:start position:0%
make predictions where you're trying to
 

00:00:19.230 --> 00:00:22.460 align:start position:0%
make predictions where you're trying to
recognize<00:00:19.740><c> one</c><00:00:20.340><c> of</c><00:00:20.609><c> c</c><00:00:21.119><c> or</c><00:00:21.390><c> one</c><00:00:21.539><c> of</c><00:00:21.720><c> multiple</c>

00:00:22.460 --> 00:00:22.470 align:start position:0%
recognize one of c or one of multiple
 

00:00:22.470 --> 00:00:25.250 align:start position:0%
recognize one of c or one of multiple
classes<00:00:23.189><c> rather</c><00:00:23.519><c> than</c><00:00:23.820><c> just</c><00:00:24.180><c> recognize</c><00:00:24.779><c> two</c>

00:00:25.250 --> 00:00:25.260 align:start position:0%
classes rather than just recognize two
 

00:00:25.260 --> 00:00:27.710 align:start position:0%
classes rather than just recognize two
classes<00:00:25.710><c> let's</c><00:00:26.310><c> take</c><00:00:26.460><c> a</c><00:00:26.490><c> look</c><00:00:26.670><c> let's</c><00:00:26.910><c> say</c><00:00:27.539><c> that</c>

00:00:27.710 --> 00:00:27.720 align:start position:0%
classes let's take a look let's say that
 

00:00:27.720 --> 00:00:29.689 align:start position:0%
classes let's take a look let's say that
instead<00:00:28.019><c> of</c><00:00:28.109><c> just</c><00:00:28.230><c> recognizing</c><00:00:29.099><c> cats</c><00:00:29.400><c> you</c>

00:00:29.689 --> 00:00:29.699 align:start position:0%
instead of just recognizing cats you
 

00:00:29.699 --> 00:00:31.880 align:start position:0%
instead of just recognizing cats you
want<00:00:29.880><c> to</c><00:00:30.000><c> recognize</c><00:00:30.390><c> cats</c><00:00:30.840><c> dogs</c><00:00:31.289><c> and</c><00:00:31.590><c> big</c>

00:00:31.880 --> 00:00:31.890 align:start position:0%
want to recognize cats dogs and big
 

00:00:31.890 --> 00:00:34.610 align:start position:0%
want to recognize cats dogs and big
kicks<00:00:32.189><c> so</c><00:00:32.640><c> I'm</c><00:00:33.059><c> going</c><00:00:33.360><c> to</c><00:00:33.390><c> call</c><00:00:33.600><c> cuts</c><00:00:34.260><c> across</c>

00:00:34.610 --> 00:00:34.620 align:start position:0%
kicks so I'm going to call cuts across
 

00:00:34.620 --> 00:00:38.180 align:start position:0%
kicks so I'm going to call cuts across
$1<00:00:35.430><c> class</c><00:00:35.640><c> to</c><00:00:36.000><c> baby</c><00:00:36.809><c> chicks</c><00:00:37.200><c> cost</c><00:00:37.559><c> three</c><00:00:37.890><c> and</c>

00:00:38.180 --> 00:00:38.190 align:start position:0%
$1 class to baby chicks cost three and
 

00:00:38.190 --> 00:00:40.250 align:start position:0%
$1 class to baby chicks cost three and
there's<00:00:38.760><c> none</c><00:00:39.030><c> of</c><00:00:39.059><c> the</c><00:00:39.300><c> above</c><00:00:39.390><c> then</c><00:00:39.960><c> there's</c>

00:00:40.250 --> 00:00:40.260 align:start position:0%
there's none of the above then there's
 

00:00:40.260 --> 00:00:42.500 align:start position:0%
there's none of the above then there's
an<00:00:40.410><c> other</c><00:00:40.770><c> or</c><00:00:41.399><c> none</c><00:00:41.700><c> of</c><00:00:41.730><c> the</c><00:00:41.969><c> above</c><00:00:42.000><c> calls</c>

00:00:42.500 --> 00:00:42.510 align:start position:0%
an other or none of the above calls
 

00:00:42.510 --> 00:00:45.560 align:start position:0%
an other or none of the above calls
which<00:00:43.140><c> I'm</c><00:00:43.320><c> going</c><00:00:43.410><c> to</c><00:00:43.469><c> call</c><00:00:43.559><c> cost</c><00:00:44.040><c> of</c><00:00:44.250><c> zero</c><00:00:44.570><c> so</c>

00:00:45.560 --> 00:00:45.570 align:start position:0%
which I'm going to call cost of zero so
 

00:00:45.570 --> 00:00:47.869 align:start position:0%
which I'm going to call cost of zero so
here's<00:00:45.870><c> an</c><00:00:45.960><c> example</c><00:00:46.050><c> of</c><00:00:46.649><c> the</c><00:00:46.890><c> images</c><00:00:47.370><c> and</c><00:00:47.399><c> the</c>

00:00:47.869 --> 00:00:47.879 align:start position:0%
here's an example of the images and the
 

00:00:47.879 --> 00:00:50.330 align:start position:0%
here's an example of the images and the
classes<00:00:48.420><c> they</c><00:00:48.629><c> belong</c><00:00:48.989><c> to</c><00:00:49.289><c> that's</c><00:00:49.980><c> a</c><00:00:50.129><c> picture</c>

00:00:50.330 --> 00:00:50.340 align:start position:0%
classes they belong to that's a picture
 

00:00:50.340 --> 00:00:52.130 align:start position:0%
classes they belong to that's a picture
of<00:00:50.460><c> a</c><00:00:50.550><c> baby</c><00:00:50.760><c> chick</c><00:00:51.000><c> so</c><00:00:51.329><c> the</c><00:00:51.480><c> cost</c><00:00:51.719><c> is</c><00:00:51.870><c> three</c>

00:00:52.130 --> 00:00:52.140 align:start position:0%
of a baby chick so the cost is three
 

00:00:52.140 --> 00:00:55.910 align:start position:0%
of a baby chick so the cost is three
chances<00:00:52.860><c> cross</c><00:00:53.100><c> one</c><00:00:53.399><c> a</c><00:00:53.610><c> dog</c><00:00:54.420><c> is</c><00:00:54.660><c> cost</c><00:00:54.930><c> -</c><00:00:55.199><c> that's</c>

00:00:55.910 --> 00:00:55.920 align:start position:0%
chances cross one a dog is cost - that's
 

00:00:55.920 --> 00:00:58.369 align:start position:0%
chances cross one a dog is cost - that's
a<00:00:56.160><c> guess</c><00:00:56.640><c> that's</c><00:00:56.850><c> a</c><00:00:56.940><c> koala</c><00:00:57.300><c> so</c><00:00:57.809><c> that's</c><00:00:58.020><c> a</c><00:00:58.170><c> none</c>

00:00:58.369 --> 00:00:58.379 align:start position:0%
a guess that's a koala so that's a none
 

00:00:58.379 --> 00:01:00.619 align:start position:0%
a guess that's a koala so that's a none
of<00:00:58.530><c> the</c><00:00:58.649><c> above</c><00:00:58.739><c> so</c><00:00:59.219><c> that's</c><00:00:59.399><c> called</c><00:00:59.579><c> zero</c><00:01:00.000><c> cost</c>

00:01:00.619 --> 00:01:00.629 align:start position:0%
of the above so that's called zero cost
 

00:01:00.629 --> 00:01:04.729 align:start position:0%
of the above so that's called zero cost
three<00:01:00.930><c> and</c><00:01:01.199><c> so</c><00:01:01.710><c> on</c><00:01:02.539><c> so</c><00:01:03.539><c> the</c><00:01:03.750><c> notation</c><00:01:04.080><c> we're</c>

00:01:04.729 --> 00:01:04.739 align:start position:0%
three and so on so the notation we're
 

00:01:04.739 --> 00:01:06.890 align:start position:0%
three and so on so the notation we're
going<00:01:04.920><c> to</c><00:01:05.010><c> use</c><00:01:05.159><c> is</c><00:01:05.519><c> I'm</c><00:01:05.700><c> going</c><00:01:05.970><c> to</c><00:01:06.060><c> use</c><00:01:06.180><c> capital</c>

00:01:06.890 --> 00:01:06.900 align:start position:0%
going to use is I'm going to use capital
 

00:01:06.900 --> 00:01:11.210 align:start position:0%
going to use is I'm going to use capital
C<00:01:07.170><c> to</c><00:01:07.799><c> denote</c><00:01:07.920><c> the</c><00:01:08.880><c> number</c><00:01:08.909><c> of</c><00:01:09.479><c> classes</c><00:01:10.220><c> you're</c>

00:01:11.210 --> 00:01:11.220 align:start position:0%
C to denote the number of classes you're
 

00:01:11.220 --> 00:01:13.429 align:start position:0%
C to denote the number of classes you're
trying<00:01:11.490><c> to</c><00:01:11.610><c> categorize</c><00:01:12.030><c> your</c><00:01:12.810><c> inputs</c><00:01:13.229><c> into</c>

00:01:13.429 --> 00:01:13.439 align:start position:0%
trying to categorize your inputs into
 

00:01:13.439 --> 00:01:16.160 align:start position:0%
trying to categorize your inputs into
and<00:01:13.830><c> in</c><00:01:14.100><c> this</c><00:01:14.250><c> case</c><00:01:14.520><c> you</c><00:01:15.119><c> have</c><00:01:15.330><c> four</c><00:01:15.659><c> possible</c>

00:01:16.160 --> 00:01:16.170 align:start position:0%
and in this case you have four possible
 

00:01:16.170 --> 00:01:18.499 align:start position:0%
and in this case you have four possible
classes<00:01:16.680><c> including</c><00:01:17.340><c> the</c><00:01:17.520><c> other</c><00:01:17.759><c> ordinality</c>

00:01:18.499 --> 00:01:18.509 align:start position:0%
classes including the other ordinality
 

00:01:18.509 --> 00:01:21.200 align:start position:0%
classes including the other ordinality
above<00:01:19.049><c> costs</c><00:01:19.500><c> so</c><00:01:20.340><c> when</c><00:01:20.520><c> you're</c><00:01:20.670><c> four</c><00:01:20.850><c> courses</c>

00:01:21.200 --> 00:01:21.210 align:start position:0%
above costs so when you're four courses
 

00:01:21.210 --> 00:01:24.320 align:start position:0%
above costs so when you're four courses
the<00:01:21.799><c> numbers</c><00:01:22.799><c> indexing</c><00:01:23.520><c> your</c><00:01:23.640><c> classes</c><00:01:24.119><c> would</c>

00:01:24.320 --> 00:01:24.330 align:start position:0%
the numbers indexing your classes would
 

00:01:24.330 --> 00:01:28.850 align:start position:0%
the numbers indexing your classes would
be<00:01:24.390><c> 0</c><00:01:24.930><c> to</c><00:01:25.619><c> C</c><00:01:26.130><c> minus</c><00:01:26.159><c> 1</c><00:01:26.759><c> to</c><00:01:27.479><c> capital</c><00:01:27.869><c> C</c><00:01:28.290><c> minus</c><00:01:28.680><c> 1</c>

00:01:28.850 --> 00:01:28.860 align:start position:0%
be 0 to C minus 1 to capital C minus 1
 

00:01:28.860 --> 00:01:31.429 align:start position:0%
be 0 to C minus 1 to capital C minus 1
so<00:01:29.100><c> in</c><00:01:29.220><c> other</c><00:01:29.340><c> words</c><00:01:29.579><c> would</c><00:01:29.670><c> be</c><00:01:29.790><c> 0</c><00:01:30.090><c> 1</c><00:01:30.329><c> 2</c><00:01:30.360><c> or</c><00:01:30.720><c> 3</c><00:01:30.900><c> in</c>

00:01:31.429 --> 00:01:31.439 align:start position:0%
so in other words would be 0 1 2 or 3 in
 

00:01:31.439 --> 00:01:32.690 align:start position:0%
so in other words would be 0 1 2 or 3 in
this<00:01:31.770><c> case</c><00:01:31.979><c> we're</c><00:01:32.189><c> going</c><00:01:32.280><c> to</c><00:01:32.340><c> build</c><00:01:32.490><c> a</c><00:01:32.549><c> new</c>

00:01:32.690 --> 00:01:32.700 align:start position:0%
this case we're going to build a new
 

00:01:32.700 --> 00:01:36.770 align:start position:0%
this case we're going to build a new
network<00:01:32.939><c> where</c><00:01:33.509><c> the</c><00:01:33.689><c> output</c><00:01:34.200><c> Slayer</c><00:01:34.470><c> has</c><00:01:35.479><c> 4</c><00:01:36.479><c> or</c>

00:01:36.770 --> 00:01:36.780 align:start position:0%
network where the output Slayer has 4 or
 

00:01:36.780 --> 00:01:39.950 align:start position:0%
network where the output Slayer has 4 or
in<00:01:37.020><c> this</c><00:01:37.140><c> case</c><00:01:37.759><c> the</c><00:01:38.759><c> variable</c><00:01:39.030><c> capital</c>

00:01:39.950 --> 00:01:39.960 align:start position:0%
in this case the variable capital
 

00:01:39.960 --> 00:01:45.080 align:start position:0%
in this case the variable capital
alphabet<00:01:40.049><c> C</c><00:01:40.590><c> output</c><00:01:41.340><c> units</c><00:01:42.170><c> so</c><00:01:43.170><c> n</c><00:01:43.909><c> the</c><00:01:44.909><c> number</c>

00:01:45.080 --> 00:01:45.090 align:start position:0%
alphabet C output units so n the number
 

00:01:45.090 --> 00:01:47.330 align:start position:0%
alphabet C output units so n the number
of<00:01:45.270><c> units</c><00:01:45.810><c> in</c><00:01:46.020><c> the</c><00:01:46.140><c> output</c><00:01:46.290><c> layer</c><00:01:46.860><c> which</c><00:01:47.310><c> is</c>

00:01:47.330 --> 00:01:47.340 align:start position:0%
of units in the output layer which is
 

00:01:47.340 --> 00:01:50.480 align:start position:0%
of units in the output layer which is
where<00:01:48.180><c> L</c><00:01:48.390><c> is</c><00:01:48.990><c> going</c><00:01:49.229><c> to</c><00:01:49.350><c> be</c><00:01:49.439><c> equal</c><00:01:49.799><c> to</c><00:01:49.950><c> 4</c><00:01:50.280><c> or</c>

00:01:50.480 --> 00:01:50.490 align:start position:0%
where L is going to be equal to 4 or
 

00:01:50.490 --> 00:01:52.550 align:start position:0%
where L is going to be equal to 4 or
more<00:01:50.970><c> generally</c><00:01:51.479><c> is</c><00:01:51.540><c> going</c><00:01:51.600><c> to</c><00:01:51.780><c> be</c><00:01:51.840><c> equal</c><00:01:52.140><c> to</c><00:01:52.170><c> C</c>

00:01:52.550 --> 00:01:52.560 align:start position:0%
more generally is going to be equal to C
 

00:01:52.560 --> 00:01:55.639 align:start position:0%
more generally is going to be equal to C
and<00:01:52.970><c> what</c><00:01:53.970><c> we</c><00:01:54.090><c> want</c><00:01:54.299><c> is</c><00:01:54.600><c> for</c><00:01:54.630><c> the</c><00:01:55.140><c> number</c><00:01:55.409><c> of</c>

00:01:55.639 --> 00:01:55.649 align:start position:0%
and what we want is for the number of
 

00:01:55.649 --> 00:01:58.069 align:start position:0%
and what we want is for the number of
units<00:01:56.040><c> and</c><00:01:56.159><c> alquiler</c><00:01:56.640><c> to</c><00:01:57.060><c> tell</c><00:01:57.329><c> us</c><00:01:57.540><c> once</c><00:01:57.899><c> the</c>

00:01:58.069 --> 00:01:58.079 align:start position:0%
units and alquiler to tell us once the
 

00:01:58.079 --> 00:01:59.690 align:start position:0%
units and alquiler to tell us once the
probability<00:01:58.740><c> of</c><00:01:58.979><c> each</c><00:01:59.130><c> of</c><00:01:59.159><c> these</c><00:01:59.430><c> core</c>

00:01:59.690 --> 00:01:59.700 align:start position:0%
probability of each of these core
 

00:01:59.700 --> 00:02:03.080 align:start position:0%
probability of each of these core
classes<00:02:00.020><c> so</c><00:02:01.020><c> the</c><00:02:01.590><c> first</c><00:02:01.920><c> node</c><00:02:02.369><c> here</c><00:02:02.729><c> is</c>

00:02:03.080 --> 00:02:03.090 align:start position:0%
classes so the first node here is
 

00:02:03.090 --> 00:02:04.880 align:start position:0%
classes so the first node here is
supposed<00:02:03.570><c> to</c><00:02:03.689><c> output</c><00:02:04.110><c> or</c><00:02:04.259><c> we</c><00:02:04.380><c> wanted</c><00:02:04.799><c> to</c>

00:02:04.880 --> 00:02:04.890 align:start position:0%
supposed to output or we wanted to
 

00:02:04.890 --> 00:02:07.219 align:start position:0%
supposed to output or we wanted to
output<00:02:05.250><c> the</c><00:02:05.729><c> probability</c><00:02:06.420><c> that</c><00:02:06.450><c> is</c><00:02:06.899><c> the</c><00:02:06.930><c> other</c>

00:02:07.219 --> 00:02:07.229 align:start position:0%
output the probability that is the other
 

00:02:07.229 --> 00:02:09.660 align:start position:0%
output the probability that is the other
class<00:02:07.619><c> given</c><00:02:08.280><c> G</c><00:02:08.399><c> and</c><00:02:08.610><c> collects</c>

00:02:09.660 --> 00:02:09.670 align:start position:0%
class given G and collects
 

00:02:09.670 --> 00:02:12.089 align:start position:0%
class given G and collects
so<00:02:09.819><c> output</c><00:02:10.030><c> probability</c><00:02:11.020><c> there's</c><00:02:11.650><c> a</c><00:02:11.860><c> cat</c>

00:02:12.089 --> 00:02:12.099 align:start position:0%
so output probability there's a cat
 

00:02:12.099 --> 00:02:15.240 align:start position:0%
so output probability there's a cat
given<00:02:13.000><c> X</c><00:02:13.180><c> this</c><00:02:13.930><c> will</c><00:02:14.080><c> output</c><00:02:14.470><c> probability</c>

00:02:15.240 --> 00:02:15.250 align:start position:0%
given X this will output probability
 

00:02:15.250 --> 00:02:18.570 align:start position:0%
given X this will output probability
that<00:02:15.580><c> is</c><00:02:15.730><c> a</c><00:02:15.760><c> dog</c><00:02:16.140><c> given</c><00:02:17.140><c> X</c><00:02:17.349><c> that</c><00:02:18.160><c> will</c><00:02:18.400><c> output</c>

00:02:18.570 --> 00:02:18.580 align:start position:0%
that is a dog given X that will output
 

00:02:18.580 --> 00:02:20.550 align:start position:0%
that is a dog given X that will output
the<00:02:18.910><c> probability</c><00:02:19.060><c> I'm</c><00:02:19.989><c> just</c><00:02:20.349><c> going</c><00:02:20.530><c> to</c>

00:02:20.550 --> 00:02:20.560 align:start position:0%
the probability I'm just going to
 

00:02:20.560 --> 00:02:22.260 align:start position:0%
the probability I'm just going to
abbreviate<00:02:20.940><c> baby-shaped</c>

00:02:22.260 --> 00:02:22.270 align:start position:0%
abbreviate baby-shaped
 

00:02:22.270 --> 00:02:24.800 align:start position:0%
abbreviate baby-shaped
to<00:02:22.420><c> BBC</c><00:02:22.810><c> so</c><00:02:23.410><c> probably</c><00:02:23.770><c> on</c><00:02:23.830><c> a</c><00:02:23.890><c> baby</c><00:02:24.130><c> chick</c>

00:02:24.800 --> 00:02:24.810 align:start position:0%
to BBC so probably on a baby chick
 

00:02:24.810 --> 00:02:29.220 align:start position:0%
to BBC so probably on a baby chick
abbreviated<00:02:25.810><c> BC</c><00:02:26.200><c> given</c><00:02:27.069><c> the</c><00:02:27.190><c> inferred</c><00:02:27.489><c> X</c><00:02:28.230><c> so</c>

00:02:29.220 --> 00:02:29.230 align:start position:0%
abbreviated BC given the inferred X so
 

00:02:29.230 --> 00:02:32.970 align:start position:0%
abbreviated BC given the inferred X so
here<00:02:29.790><c> the</c><00:02:30.790><c> output</c><00:02:30.819><c> labels</c><00:02:31.540><c> my</c><00:02:31.750><c> hat</c><00:02:32.050><c> is</c><00:02:32.620><c> going</c>

00:02:32.970 --> 00:02:32.980 align:start position:0%
here the output labels my hat is going
 

00:02:32.980 --> 00:02:35.880 align:start position:0%
here the output labels my hat is going
to<00:02:33.100><c> be</c><00:02:33.190><c> a</c><00:02:33.360><c> four</c><00:02:34.360><c> by</c><00:02:34.989><c> one</c><00:02:35.290><c> dimensional</c><00:02:35.830><c> vector</c>

00:02:35.880 --> 00:02:35.890 align:start position:0%
to be a four by one dimensional vector
 

00:02:35.890 --> 00:02:38.220 align:start position:0%
to be a four by one dimensional vector
because<00:02:36.819><c> it</c><00:02:37.000><c> now</c><00:02:37.150><c> has</c><00:02:37.180><c> two</c><00:02:37.569><c> output</c><00:02:38.019><c> for</c>

00:02:38.220 --> 00:02:38.230 align:start position:0%
because it now has two output for
 

00:02:38.230 --> 00:02:40.740 align:start position:0%
because it now has two output for
numbers<00:02:38.730><c> giving</c><00:02:39.730><c> you</c><00:02:39.910><c> these</c><00:02:40.450><c> four</c>

00:02:40.740 --> 00:02:40.750 align:start position:0%
numbers giving you these four
 

00:02:40.750 --> 00:02:43.350 align:start position:0%
numbers giving you these four
probabilities<00:02:41.530><c> and</c><00:02:42.150><c> because</c><00:02:43.150><c> probably</c>

00:02:43.350 --> 00:02:43.360 align:start position:0%
probabilities and because probably
 

00:02:43.360 --> 00:02:46.350 align:start position:0%
probabilities and because probably
should<00:02:43.930><c> sum</c><00:02:44.200><c> to</c><00:02:44.230><c> one</c><00:02:44.680><c> the</c><00:02:45.280><c> phone</c><00:02:45.550><c> numbers</c><00:02:46.000><c> in</c>

00:02:46.350 --> 00:02:46.360 align:start position:0%
should sum to one the phone numbers in
 

00:02:46.360 --> 00:02:49.610 align:start position:0%
should sum to one the phone numbers in
the<00:02:46.600><c> output</c><00:02:47.019><c> Y</c><00:02:47.170><c> hat</c><00:02:47.470><c> they</c><00:02:47.980><c> should</c><00:02:48.220><c> sum</c><00:02:48.459><c> to</c><00:02:48.489><c> one</c>

00:02:49.610 --> 00:02:49.620 align:start position:0%
the output Y hat they should sum to one
 

00:02:49.620 --> 00:02:52.470 align:start position:0%
the output Y hat they should sum to one
the<00:02:50.620><c> standard</c><00:02:51.069><c> model</c><00:02:51.549><c> for</c><00:02:51.819><c> getting</c><00:02:52.000><c> a</c><00:02:52.209><c> neural</c>

00:02:52.470 --> 00:02:52.480 align:start position:0%
the standard model for getting a neural
 

00:02:52.480 --> 00:02:55.380 align:start position:0%
the standard model for getting a neural
network<00:02:52.660><c> to</c><00:02:53.019><c> do</c><00:02:53.200><c> this</c><00:02:53.519><c> uses</c><00:02:54.519><c> what's</c><00:02:54.970><c> called</c><00:02:55.060><c> a</c>

00:02:55.380 --> 00:02:55.390 align:start position:0%
network to do this uses what's called a
 

00:02:55.390 --> 00:02:58.020 align:start position:0%
network to do this uses what's called a
Softbank<00:02:56.019><c> layer</c><00:02:56.380><c> in</c><00:02:56.920><c> the</c><00:02:57.190><c> output</c><00:02:57.580><c> layer</c><00:02:57.700><c> in</c>

00:02:58.020 --> 00:02:58.030 align:start position:0%
Softbank layer in the output layer in
 

00:02:58.030 --> 00:03:00.270 align:start position:0%
Softbank layer in the output layer in
order<00:02:58.360><c> to</c><00:02:58.510><c> generate</c><00:02:58.720><c> these</c><00:02:59.049><c> outputs</c><00:02:59.650><c> let</c><00:03:00.190><c> me</c>

00:03:00.270 --> 00:03:00.280 align:start position:0%
order to generate these outputs let me
 

00:03:00.280 --> 00:03:01.620 align:start position:0%
order to generate these outputs let me
write<00:03:00.430><c> down</c><00:03:00.459><c> the</c><00:03:00.760><c> map</c><00:03:00.970><c> and</c><00:03:01.239><c> then</c><00:03:01.330><c> come</c><00:03:01.600><c> back</c>

00:03:01.620 --> 00:03:01.630 align:start position:0%
write down the map and then come back
 

00:03:01.630 --> 00:03:03.449 align:start position:0%
write down the map and then come back
and<00:03:02.019><c> do</c><00:03:02.110><c> some</c><00:03:02.319><c> intuition</c><00:03:02.709><c> about</c><00:03:03.010><c> what</c><00:03:03.340><c> the</c>

00:03:03.449 --> 00:03:03.459 align:start position:0%
and do some intuition about what the
 

00:03:03.459 --> 00:03:07.080 align:start position:0%
and do some intuition about what the
soft<00:03:03.700><c> Maclin</c><00:03:04.090><c> air</c><00:03:04.209><c> is</c><00:03:04.330><c> doing</c><00:03:05.670><c> so</c><00:03:06.670><c> in</c><00:03:06.850><c> the</c><00:03:06.910><c> final</c>

00:03:07.080 --> 00:03:07.090 align:start position:0%
soft Maclin air is doing so in the final
 

00:03:07.090 --> 00:03:09.479 align:start position:0%
soft Maclin air is doing so in the final
layer<00:03:07.480><c> in</c><00:03:07.720><c> your</c><00:03:07.900><c> network</c><00:03:08.290><c> you</c><00:03:08.530><c> are</c><00:03:08.950><c> going</c><00:03:09.370><c> to</c>

00:03:09.479 --> 00:03:09.489 align:start position:0%
layer in your network you are going to
 

00:03:09.489 --> 00:03:12.509 align:start position:0%
layer in your network you are going to
compute<00:03:09.940><c> as</c><00:03:10.090><c> usual</c><00:03:10.510><c> the</c><00:03:10.810><c> linear</c><00:03:11.230><c> part</c><00:03:11.470><c> of</c><00:03:11.860><c> the</c>

00:03:12.509 --> 00:03:12.519 align:start position:0%
compute as usual the linear part of the
 

00:03:12.519 --> 00:03:15.840 align:start position:0%
compute as usual the linear part of the
layer<00:03:12.850><c> so</c><00:03:13.239><c> the</c><00:03:13.569><c> capital</c><00:03:14.260><c> L</c><00:03:14.440><c> that's</c><00:03:14.890><c> the</c><00:03:15.100><c> Z</c>

00:03:15.840 --> 00:03:15.850 align:start position:0%
layer so the capital L that's the Z
 

00:03:15.850 --> 00:03:18.330 align:start position:0%
layer so the capital L that's the Z
variable<00:03:16.060><c> for</c><00:03:16.630><c> the</c><00:03:16.690><c> final</c><00:03:17.140><c> layer</c><00:03:17.320><c> so</c><00:03:17.859><c> remember</c>

00:03:18.330 --> 00:03:18.340 align:start position:0%
variable for the final layer so remember
 

00:03:18.340 --> 00:03:22.650 align:start position:0%
variable for the final layer so remember
this<00:03:18.519><c> is</c><00:03:18.579><c> layer</c><00:03:20.010><c> capital</c><00:03:21.010><c> L</c><00:03:21.190><c> so</c><00:03:22.030><c> as</c><00:03:22.150><c> usual</c><00:03:22.359><c> you</c>

00:03:22.650 --> 00:03:22.660 align:start position:0%
this is layer capital L so as usual you
 

00:03:22.660 --> 00:03:26.039 align:start position:0%
this is layer capital L so as usual you
compute<00:03:23.079><c> that</c><00:03:23.200><c> as</c><00:03:23.500><c> WL</c><00:03:24.340><c> times</c><00:03:25.180><c> the</c><00:03:25.390><c> activation</c>

00:03:26.039 --> 00:03:26.049 align:start position:0%
compute that as WL times the activation
 

00:03:26.049 --> 00:03:30.509 align:start position:0%
compute that as WL times the activation
the<00:03:26.620><c> previous</c><00:03:27.100><c> layer</c><00:03:27.280><c> plus</c><00:03:28.180><c> the</c><00:03:28.870><c> biases</c><00:03:29.519><c> for</c>

00:03:30.509 --> 00:03:30.519 align:start position:0%
the previous layer plus the biases for
 

00:03:30.519 --> 00:03:33.240 align:start position:0%
the previous layer plus the biases for
that<00:03:30.640><c> final</c><00:03:31.060><c> layer</c><00:03:31.239><c> now</c><00:03:32.170><c> having</c><00:03:32.560><c> computed</c><00:03:33.010><c> Z's</c>

00:03:33.240 --> 00:03:33.250 align:start position:0%
that final layer now having computed Z's
 

00:03:33.250 --> 00:03:35.370 align:start position:0%
that final layer now having computed Z's
you<00:03:33.430><c> now</c><00:03:33.549><c> need</c><00:03:33.730><c> to</c><00:03:33.790><c> apply</c><00:03:34.209><c> what's</c><00:03:34.900><c> called</c><00:03:35.170><c> the</c>

00:03:35.370 --> 00:03:35.380 align:start position:0%
you now need to apply what's called the
 

00:03:35.380 --> 00:03:39.060 align:start position:0%
you now need to apply what's called the
softmax<00:03:35.980><c> activation</c><00:03:36.630><c> function</c><00:03:37.920><c> so</c><00:03:38.920><c> the</c>

00:03:39.060 --> 00:03:39.070 align:start position:0%
softmax activation function so the
 

00:03:39.070 --> 00:03:41.880 align:start position:0%
softmax activation function so the
activation<00:03:39.430><c> function</c><00:03:39.609><c> is</c><00:03:40.209><c> a</c><00:03:40.840><c> bit</c><00:03:41.200><c> unusual</c><00:03:41.380><c> for</c>

00:03:41.880 --> 00:03:41.890 align:start position:0%
activation function is a bit unusual for
 

00:03:41.890 --> 00:03:43.740 align:start position:0%
activation function is a bit unusual for
the<00:03:42.220><c> soft</c><00:03:42.459><c> mask</c><00:03:42.700><c> layer</c><00:03:42.940><c> but</c><00:03:43.239><c> this</c><00:03:43.359><c> is</c><00:03:43.480><c> what</c><00:03:43.630><c> it</c>

00:03:43.740 --> 00:03:43.750 align:start position:0%
the soft mask layer but this is what it
 

00:03:43.750 --> 00:03:47.539 align:start position:0%
the soft mask layer but this is what it
does<00:03:44.400><c> first</c><00:03:45.400><c> we're</c><00:03:45.730><c> going</c><00:03:45.880><c> to</c><00:03:45.970><c> compute</c><00:03:46.750><c> a</c>

00:03:47.539 --> 00:03:47.549 align:start position:0%
does first we're going to compute a
 

00:03:47.549 --> 00:03:51.120 align:start position:0%
does first we're going to compute a
temporary<00:03:48.549><c> variable</c><00:03:48.880><c> which</c><00:03:49.570><c> we</c><00:03:49.810><c> call</c><00:03:50.049><c> T</c><00:03:50.380><c> which</c>

00:03:51.120 --> 00:03:51.130 align:start position:0%
temporary variable which we call T which
 

00:03:51.130 --> 00:03:55.319 align:start position:0%
temporary variable which we call T which
is<00:03:51.160><c> e</c><00:03:51.579><c> to</c><00:03:52.299><c> the</c><00:03:52.480><c> Z</c><00:03:53.069><c> L</c><00:03:54.069><c> so</c><00:03:54.670><c> this</c><00:03:54.910><c> is</c><00:03:55.060><c> a</c><00:03:55.090><c> plot</c>

00:03:55.319 --> 00:03:55.329 align:start position:0%
is e to the Z L so this is a plot
 

00:03:55.329 --> 00:03:58.530 align:start position:0%
is e to the Z L so this is a plot
element<00:03:55.510><c> wise</c><00:03:56.019><c> so</c><00:03:56.519><c> VL</c><00:03:57.519><c> here</c><00:03:57.819><c> in</c><00:03:58.150><c> our</c><00:03:58.450><c> example</c>

00:03:58.530 --> 00:03:58.540 align:start position:0%
element wise so VL here in our example
 

00:03:58.540 --> 00:04:01.259 align:start position:0%
element wise so VL here in our example
ZL<00:03:59.350><c> is</c><00:03:59.380><c> going</c><00:03:59.739><c> to</c><00:03:59.829><c> be</c><00:03:59.920><c> four</c><00:04:00.640><c> point</c><00:04:00.790><c> one</c><00:04:01.030><c> is</c><00:04:01.239><c> a</c>

00:04:01.259 --> 00:04:01.269 align:start position:0%
ZL is going to be four point one is a
 

00:04:01.269 --> 00:04:05.430 align:start position:0%
ZL is going to be four point one is a
four<00:04:01.510><c> dimensional</c><00:04:01.630><c> vector</c><00:04:02.519><c> so</c><00:04:03.519><c> T</c><00:04:04.049><c> itself</c><00:04:05.049><c> e</c><00:04:05.319><c> to</c>

00:04:05.430 --> 00:04:05.440 align:start position:0%
four dimensional vector so T itself e to
 

00:04:05.440 --> 00:04:06.930 align:start position:0%
four dimensional vector so T itself e to
the<00:04:05.680><c> GL</c><00:04:06.040><c> does</c><00:04:06.310><c> an</c><00:04:06.489><c> element-wise</c>

00:04:06.930 --> 00:04:06.940 align:start position:0%
the GL does an element-wise
 

00:04:06.940 --> 00:04:11.099 align:start position:0%
the GL does an element-wise
exponentiation<00:04:07.780><c> T</c><00:04:08.769><c> will</c><00:04:09.160><c> also</c><00:04:09.579><c> be</c><00:04:09.880><c> a</c><00:04:09.959><c> four</c><00:04:10.959><c> by</c>

00:04:11.099 --> 00:04:11.109 align:start position:0%
exponentiation T will also be a four by
 

00:04:11.109 --> 00:04:14.150 align:start position:0%
exponentiation T will also be a four by
one<00:04:11.319><c> dimensional</c><00:04:11.769><c> vector</c><00:04:12.150><c> then</c><00:04:13.150><c> the</c><00:04:13.269><c> output</c>

00:04:14.150 --> 00:04:14.160 align:start position:0%
one dimensional vector then the output
 

00:04:14.160 --> 00:04:18.810 align:start position:0%
one dimensional vector then the output
al<00:04:15.160><c> is</c><00:04:15.430><c> going</c><00:04:16.269><c> to</c><00:04:16.389><c> be</c><00:04:16.830><c> basically</c><00:04:17.830><c> the</c><00:04:17.950><c> vector</c><00:04:18.519><c> T</c>

00:04:18.810 --> 00:04:18.820 align:start position:0%
al is going to be basically the vector T
 

00:04:18.820 --> 00:04:21.570 align:start position:0%
al is going to be basically the vector T
but<00:04:19.209><c> normalized</c><00:04:19.750><c> to</c><00:04:19.959><c> sum</c><00:04:20.200><c> to</c><00:04:20.229><c> 1</c><00:04:20.650><c> so</c><00:04:20.950><c> al</c><00:04:21.310><c> s</c><00:04:21.400><c> going</c>

00:04:21.570 --> 00:04:21.580 align:start position:0%
but normalized to sum to 1 so al s going
 

00:04:21.580 --> 00:04:22.860 align:start position:0%
but normalized to sum to 1 so al s going
to<00:04:21.640><c> e</c><00:04:21.940><c> to</c><00:04:22.210><c> the</c><00:04:22.360><c> Z</c>

00:04:22.860 --> 00:04:22.870 align:start position:0%
to e to the Z
 

00:04:22.870 --> 00:04:29.909 align:start position:0%
to e to the Z
l<00:04:24.180><c> /</c><00:04:25.710><c> sum</c><00:04:26.710><c> from</c><00:04:27.360><c> J</c><00:04:28.360><c> equals</c><00:04:28.389><c> one</c><00:04:29.110><c> through</c><00:04:29.470><c> four</c>

00:04:29.909 --> 00:04:29.919 align:start position:0%
l / sum from J equals one through four
 

00:04:29.919 --> 00:04:32.670 align:start position:0%
l / sum from J equals one through four
because<00:04:30.610><c> there</c><00:04:30.760><c> are</c><00:04:30.820><c> four</c><00:04:30.880><c> classes</c><00:04:31.449><c> of</c><00:04:31.680><c> T</c>

00:04:32.670 --> 00:04:32.680 align:start position:0%
because there are four classes of T
 

00:04:32.680 --> 00:04:35.250 align:start position:0%
because there are four classes of T
subscript<00:04:33.190><c> I</c><00:04:33.630><c> so</c><00:04:34.630><c> another</c><00:04:34.870><c> way</c><00:04:35.050><c> of</c><00:04:35.080><c> saying</c>

00:04:35.250 --> 00:04:35.260 align:start position:0%
subscript I so another way of saying
 

00:04:35.260 --> 00:04:40.260 align:start position:0%
subscript I so another way of saying
this<00:04:35.500><c> is</c><00:04:35.560><c> that</c><00:04:36.180><c> al</c><00:04:37.180><c> is</c><00:04:37.479><c> also</c><00:04:38.350><c> a</c><00:04:38.880><c> four</c><00:04:39.880><c> point</c><00:04:40.090><c> one</c>

00:04:40.260 --> 00:04:40.270 align:start position:0%
this is that al is also a four point one
 

00:04:40.270 --> 00:04:43.379 align:start position:0%
this is that al is also a four point one
vector<00:04:40.479><c> and</c><00:04:40.930><c> the</c><00:04:41.800><c> I've</c><00:04:42.100><c> elements</c><00:04:43.000><c> of</c><00:04:43.150><c> this</c>

00:04:43.379 --> 00:04:43.389 align:start position:0%
vector and the I've elements of this
 

00:04:43.389 --> 00:04:45.240 align:start position:0%
vector and the I've elements of this
four<00:04:43.810><c> dimensional</c><00:04:43.900><c> vector</c><00:04:44.260><c> let's</c><00:04:44.919><c> vary</c><00:04:45.130><c> that</c>

00:04:45.240 --> 00:04:45.250 align:start position:0%
four dimensional vector let's vary that
 

00:04:45.250 --> 00:04:48.950 align:start position:0%
four dimensional vector let's vary that
al<00:04:45.669><c> subscript</c><00:04:46.660><c> I</c><00:04:46.780><c> this</c><00:04:47.229><c> can</c><00:04:47.440><c> be</c><00:04:47.590><c> equal</c><00:04:47.800><c> to</c><00:04:47.919><c> GI</c>

00:04:48.950 --> 00:04:48.960 align:start position:0%
al subscript I this can be equal to GI
 

00:04:48.960 --> 00:04:56.040 align:start position:0%
al subscript I this can be equal to GI
over<00:04:50.310><c> some</c><00:04:52.020><c> of</c><00:04:53.020><c> GI</c><00:04:54.900><c> okay</c>

00:04:56.040 --> 00:04:56.050 align:start position:0%
over some of GI okay
 

00:04:56.050 --> 00:04:59.010 align:start position:0%
over some of GI okay
in<00:04:56.590><c> case</c><00:04:56.800><c> this</c><00:04:56.949><c> map</c><00:04:57.160><c> isn't</c><00:04:57.400><c> clear</c><00:04:57.970><c> we'll</c><00:04:58.690><c> do</c><00:04:58.900><c> an</c>

00:04:59.010 --> 00:04:59.020 align:start position:0%
in case this map isn't clear we'll do an
 

00:04:59.020 --> 00:05:00.930 align:start position:0%
in case this map isn't clear we'll do an
example<00:04:59.110><c> in</c><00:04:59.650><c> a</c><00:04:59.800><c> minute</c><00:05:00.160><c> that</c><00:05:00.639><c> make</c><00:05:00.789><c> this</c>

00:05:00.930 --> 00:05:00.940 align:start position:0%
example in a minute that make this
 

00:05:00.940 --> 00:05:03.659 align:start position:0%
example in a minute that make this
clearer<00:05:01.560><c> so</c><00:05:02.560><c> in</c><00:05:02.740><c> cases</c><00:05:03.039><c> map</c><00:05:03.190><c> isn't</c><00:05:03.430><c> clear</c>

00:05:03.659 --> 00:05:03.669 align:start position:0%
clearer so in cases map isn't clear
 

00:05:03.669 --> 00:05:05.790 align:start position:0%
clearer so in cases map isn't clear
let's<00:05:03.970><c> go</c><00:05:04.150><c> through</c><00:05:04.419><c> a</c><00:05:04.449><c> specific</c><00:05:04.750><c> example</c><00:05:05.050><c> that</c>

00:05:05.790 --> 00:05:05.800 align:start position:0%
let's go through a specific example that
 

00:05:05.800 --> 00:05:08.189 align:start position:0%
let's go through a specific example that
will<00:05:05.919><c> make</c><00:05:06.039><c> this</c><00:05:06.190><c> clearer</c><00:05:06.780><c> let's</c><00:05:07.780><c> say</c><00:05:08.020><c> then</c>

00:05:08.189 --> 00:05:08.199 align:start position:0%
will make this clearer let's say then
 

00:05:08.199 --> 00:05:12.420 align:start position:0%
will make this clearer let's say then
your<00:05:08.380><c> computer's</c><00:05:08.889><c> VL</c><00:05:09.310><c> +</c><00:05:09.780><c> ZL</c><00:05:10.780><c> is</c><00:05:11.050><c> a</c><00:05:12.010><c> four</c>

00:05:12.420 --> 00:05:12.430 align:start position:0%
your computer's VL + ZL is a four
 

00:05:12.430 --> 00:05:16.350 align:start position:0%
your computer's VL + ZL is a four
dimensional<00:05:12.550><c> vector</c><00:05:13.350><c> let's</c><00:05:14.350><c> say</c><00:05:14.440><c> is</c><00:05:14.650><c> 5</c><00:05:15.360><c> to</c>

00:05:16.350 --> 00:05:16.360 align:start position:0%
dimensional vector let's say is 5 to
 

00:05:16.360 --> 00:05:19.800 align:start position:0%
dimensional vector let's say is 5 to
negative<00:05:17.010><c> 1/3</c><00:05:18.010><c> what</c><00:05:19.000><c> we're</c><00:05:19.120><c> going</c><00:05:19.240><c> to</c><00:05:19.300><c> do</c><00:05:19.510><c> is</c>

00:05:19.800 --> 00:05:19.810 align:start position:0%
negative 1/3 what we're going to do is
 

00:05:19.810 --> 00:05:22.230 align:start position:0%
negative 1/3 what we're going to do is
use<00:05:20.169><c> this</c><00:05:20.410><c> element</c><00:05:20.979><c> wise</c><00:05:21.190><c> exponentiation</c><00:05:21.910><c> to</c>

00:05:22.230 --> 00:05:22.240 align:start position:0%
use this element wise exponentiation to
 

00:05:22.240 --> 00:05:24.510 align:start position:0%
use this element wise exponentiation to
compute<00:05:22.630><c> this</c><00:05:22.750><c> vector</c><00:05:22.930><c> team</c><00:05:23.380><c> so</c><00:05:23.740><c> T</c><00:05:24.070><c> is</c><00:05:24.250><c> going</c>

00:05:24.510 --> 00:05:24.520 align:start position:0%
compute this vector team so T is going
 

00:05:24.520 --> 00:05:28.170 align:start position:0%
compute this vector team so T is going
to<00:05:24.610><c> be</c><00:05:24.729><c> e</c><00:05:24.940><c> to</c><00:05:25.810><c> the</c><00:05:25.840><c> 5</c><00:05:26.110><c> e</c><00:05:26.440><c> to</c><00:05:26.590><c> the</c><00:05:26.889><c> 2</c><00:05:27.280><c> e</c><00:05:27.580><c> 2</c><00:05:27.729><c> negative</c>

00:05:28.170 --> 00:05:28.180 align:start position:0%
to be e to the 5 e to the 2 e 2 negative
 

00:05:28.180 --> 00:05:30.900 align:start position:0%
to be e to the 5 e to the 2 e 2 negative
1<00:05:28.210><c> e</c><00:05:28.660><c> to</c><00:05:29.020><c> the</c><00:05:29.139><c> 3</c><00:05:29.470><c> and</c><00:05:29.740><c> if</c><00:05:30.250><c> you</c><00:05:30.370><c> present</c><00:05:30.610><c> a</c>

00:05:30.900 --> 00:05:30.910 align:start position:0%
1 e to the 3 and if you present a
 

00:05:30.910 --> 00:05:32.730 align:start position:0%
1 e to the 3 and if you present a
calculator<00:05:31.419><c> these</c><00:05:31.840><c> are</c><00:05:32.020><c> the</c><00:05:32.080><c> values</c><00:05:32.440><c> you</c><00:05:32.470><c> get</c>

00:05:32.730 --> 00:05:32.740 align:start position:0%
calculator these are the values you get
 

00:05:32.740 --> 00:05:37.740 align:start position:0%
calculator these are the values you get
e<00:05:32.950><c> to</c><00:05:33.220><c> the</c><00:05:33.310><c> 5</c><00:05:33.550><c> is</c><00:05:33.690><c> 1</c><00:05:34.690><c> 4</c><00:05:34.960><c> 8</c><00:05:35.400><c> 4</c><00:05:36.400><c> e</c><00:05:36.639><c> squared</c><00:05:37.150><c> is</c><00:05:37.389><c> about</c>

00:05:37.740 --> 00:05:37.750 align:start position:0%
e to the 5 is 1 4 8 4 e squared is about
 

00:05:37.750 --> 00:05:41.520 align:start position:0%
e to the 5 is 1 4 8 4 e squared is about
7<00:05:38.169><c> point</c><00:05:38.380><c> 4</c><00:05:38.590><c> e</c><00:05:38.860><c> to</c><00:05:39.430><c> the</c><00:05:39.700><c> negative</c><00:05:39.849><c> 1</c><00:05:40.330><c> is</c><00:05:40.510><c> 0.4</c><00:05:41.229><c> and</c>

00:05:41.520 --> 00:05:41.530 align:start position:0%
7 point 4 e to the negative 1 is 0.4 and
 

00:05:41.530 --> 00:05:45.750 align:start position:0%
7 point 4 e to the negative 1 is 0.4 and
études<00:05:42.310><c> is</c><00:05:42.930><c> 20</c><00:05:43.930><c> point</c><00:05:44.440><c> 1</c><00:05:44.620><c> and</c><00:05:44.800><c> so</c><00:05:45.460><c> the</c><00:05:45.610><c> way</c><00:05:45.729><c> we</c>

00:05:45.750 --> 00:05:45.760 align:start position:0%
études is 20 point 1 and so the way we
 

00:05:45.760 --> 00:05:48.930 align:start position:0%
études is 20 point 1 and so the way we
go<00:05:46.120><c> from</c><00:05:46.360><c> the</c><00:05:46.570><c> vector</c><00:05:46.720><c> T</c><00:05:47.080><c> to</c><00:05:47.349><c> the</c><00:05:47.440><c> vector</c><00:05:47.639><c> al</c><00:05:48.639><c> is</c>

00:05:48.930 --> 00:05:48.940 align:start position:0%
go from the vector T to the vector al is
 

00:05:48.940 --> 00:05:51.510 align:start position:0%
go from the vector T to the vector al is
to<00:05:49.240><c> just</c><00:05:49.539><c> normalize</c><00:05:50.050><c> these</c><00:05:50.590><c> entries</c><00:05:51.130><c> to</c><00:05:51.310><c> sum</c>

00:05:51.510 --> 00:05:51.520 align:start position:0%
to just normalize these entries to sum
 

00:05:51.520 --> 00:05:55.939 align:start position:0%
to just normalize these entries to sum
to<00:05:51.550><c> 1</c><00:05:51.880><c> so</c><00:05:52.720><c> if</c><00:05:52.930><c> you</c><00:05:53.080><c> sum</c><00:05:53.320><c> up</c><00:05:53.500><c> the</c><00:05:53.830><c> elements</c><00:05:54.400><c> of</c><00:05:54.750><c> T</c>

00:05:55.939 --> 00:05:55.949 align:start position:0%
to 1 so if you sum up the elements of T
 

00:05:55.949 --> 00:05:58.320 align:start position:0%
to 1 so if you sum up the elements of T
if<00:05:56.949><c> you</c><00:05:57.130><c> just</c><00:05:57.280><c> add</c><00:05:57.430><c> up</c><00:05:57.460><c> those</c><00:05:57.760><c> whole</c><00:05:57.970><c> numbers</c>

00:05:58.320 --> 00:05:58.330 align:start position:0%
if you just add up those whole numbers
 

00:05:58.330 --> 00:06:06.960 align:start position:0%
if you just add up those whole numbers
you<00:05:58.570><c> get</c><00:05:58.750><c> 1</c><00:05:59.169><c> 7</c><00:06:00.539><c> 6</c><00:06:01.770><c> points</c><00:06:02.770><c> 3</c><00:06:03.690><c> so</c><00:06:04.690><c> finally</c><00:06:05.260><c> a</c><00:06:05.970><c> ll</c>

00:06:06.960 --> 00:06:06.970 align:start position:0%
you get 1 7 6 points 3 so finally a ll
 

00:06:06.970 --> 00:06:09.779 align:start position:0%
you get 1 7 6 points 3 so finally a ll
is<00:06:07.690><c> just</c><00:06:08.020><c> going</c><00:06:08.199><c> to</c><00:06:08.349><c> be</c><00:06:08.470><c> this</c><00:06:08.680><c> vector</c><00:06:08.949><c> T</c><00:06:09.460><c> as</c><00:06:09.729><c> a</c>

00:06:09.779 --> 00:06:09.789 align:start position:0%
is just going to be this vector T as a
 

00:06:09.789 --> 00:06:15.810 align:start position:0%
is just going to be this vector T as a
vector<00:06:10.479><c> divided</c><00:06:11.440><c> by</c><00:06:11.699><c> 1</c><00:06:12.699><c> 7</c><00:06:13.180><c> 6</c><00:06:13.479><c> on</c><00:06:13.930><c> 3</c><00:06:14.639><c> so</c><00:06:15.639><c> for</c>

00:06:15.810 --> 00:06:15.820 align:start position:0%
vector divided by 1 7 6 on 3 so for
 

00:06:15.820 --> 00:06:19.020 align:start position:0%
vector divided by 1 7 6 on 3 so for
example<00:06:16.240><c> this</c><00:06:16.810><c> first</c><00:06:17.080><c> node</c><00:06:17.410><c> here</c><00:06:17.830><c> this</c><00:06:18.580><c> will</c>

00:06:19.020 --> 00:06:19.030 align:start position:0%
example this first node here this will
 

00:06:19.030 --> 00:06:23.850 align:start position:0%
example this first node here this will
output<00:06:19.539><c> e</c><00:06:19.780><c> to</c><00:06:20.139><c> the</c><00:06:20.260><c> 5</c><00:06:20.639><c> divided</c><00:06:21.639><c> by</c><00:06:21.669><c> 1</c><00:06:22.169><c> 7</c><00:06:23.169><c> 6</c><00:06:23.590><c> point</c>

00:06:23.850 --> 00:06:23.860 align:start position:0%
output e to the 5 divided by 1 7 6 point
 

00:06:23.860 --> 00:06:27.000 align:start position:0%
output e to the 5 divided by 1 7 6 point
3<00:06:23.949><c> and</c><00:06:24.370><c> that</c><00:06:24.820><c> turns</c><00:06:25.120><c> out</c><00:06:25.360><c> to</c><00:06:25.389><c> be</c><00:06:25.630><c> a</c><00:06:25.810><c> zero</c><00:06:26.680><c> point</c>

00:06:27.000 --> 00:06:27.010 align:start position:0%
3 and that turns out to be a zero point
 

00:06:27.010 --> 00:06:30.510 align:start position:0%
3 and that turns out to be a zero point
8<00:06:27.280><c> 4</c><00:06:27.610><c> 2</c><00:06:27.880><c> so</c><00:06:28.660><c> saying</c><00:06:28.960><c> that</c><00:06:29.289><c> for</c><00:06:29.620><c> this</c><00:06:29.710><c> image</c><00:06:30.039><c> if</c>

00:06:30.510 --> 00:06:30.520 align:start position:0%
8 4 2 so saying that for this image if
 

00:06:30.520 --> 00:06:32.370 align:start position:0%
8 4 2 so saying that for this image if
this<00:06:30.880><c> is</c><00:06:31.030><c> the</c><00:06:31.120><c> value</c><00:06:31.450><c> of</c><00:06:31.479><c> V</c><00:06:31.719><c> you</c><00:06:31.750><c> get</c><00:06:32.050><c> the</c>

00:06:32.370 --> 00:06:32.380 align:start position:0%
this is the value of V you get the
 

00:06:32.380 --> 00:06:35.870 align:start position:0%
this is the value of V you get the
chance<00:06:32.620><c> of</c><00:06:32.950><c> it</c><00:06:33.370><c> being</c><00:06:33.760><c> called</c><00:06:34.060><c> 0</c><00:06:34.510><c> is</c><00:06:34.780><c> 84</c>

00:06:35.870 --> 00:06:35.880 align:start position:0%
chance of it being called 0 is 84
 

00:06:35.880 --> 00:06:38.300 align:start position:0%
chance of it being called 0 is 84
two<00:06:36.180><c> percent</c><00:06:36.630><c> and</c><00:06:36.900><c> then</c><00:06:37.650><c> the</c><00:06:37.680><c> next</c><00:06:38.100><c> node</c>

00:06:38.300 --> 00:06:38.310 align:start position:0%
two percent and then the next node
 

00:06:38.310 --> 00:06:41.870 align:start position:0%
two percent and then the next node
outputs<00:06:39.200><c> B</c><00:06:40.200><c> squared</c><00:06:40.710><c> over</c><00:06:40.920><c> one</c><00:06:41.340><c> seven</c><00:06:41.730><c> six</c>

00:06:41.870 --> 00:06:41.880 align:start position:0%
outputs B squared over one seven six
 

00:06:41.880 --> 00:06:44.390 align:start position:0%
outputs B squared over one seven six
point<00:06:42.180><c> three</c><00:06:42.240><c> that</c><00:06:43.230><c> turns</c><00:06:43.770><c> out</c><00:06:43.920><c> to</c><00:06:44.070><c> be</c><00:06:44.100><c> zero</c>

00:06:44.390 --> 00:06:44.400 align:start position:0%
point three that turns out to be zero
 

00:06:44.400 --> 00:06:46.760 align:start position:0%
point three that turns out to be zero
point<00:06:44.670><c> zero</c><00:06:44.790><c> four</c><00:06:45.480><c> two</c><00:06:45.510><c> six</c><00:06:46.200><c> four</c><00:06:46.410><c> point</c><00:06:46.650><c> two</c>

00:06:46.760 --> 00:06:46.770 align:start position:0%
point zero four two six four point two
 

00:06:46.770 --> 00:06:48.980 align:start position:0%
point zero four two six four point two
percent<00:06:46.950><c> chance</c><00:06:47.160><c> the</c><00:06:48.060><c> next</c><00:06:48.330><c> one</c><00:06:48.510><c> is</c><00:06:48.720><c> e</c><00:06:48.930><c> to</c>

00:06:48.980 --> 00:06:48.990 align:start position:0%
percent chance the next one is e to
 

00:06:48.990 --> 00:06:55.940 align:start position:0%
percent chance the next one is e to
negative<00:06:49.500><c> one</c><00:06:49.770><c> over</c><00:06:50.660><c> that</c><00:06:51.660><c> which</c><00:06:52.380><c> is</c><00:06:54.650><c> 0.02</c><00:06:55.650><c> and</c>

00:06:55.940 --> 00:06:55.950 align:start position:0%
negative one over that which is 0.02 and
 

00:06:55.950 --> 00:07:02.480 align:start position:0%
negative one over that which is 0.02 and
the<00:06:56.760><c> final</c><00:06:57.180><c> one</c><00:06:57.390><c> is</c><00:06:58.820><c> etude</c><00:06:59.820><c> over</c><00:07:00.630><c> that</c><00:07:01.490><c> which</c>

00:07:02.480 --> 00:07:02.490 align:start position:0%
the final one is etude over that which
 

00:07:02.490 --> 00:07:05.450 align:start position:0%
the final one is etude over that which
is<00:07:02.760><c> zero</c><00:07:03.600><c> point</c><00:07:03.840><c> one</c><00:07:04.020><c> 1/4</c><00:07:04.410><c> so</c><00:07:04.770><c> brother</c><00:07:05.190><c> another</c>

00:07:05.450 --> 00:07:05.460 align:start position:0%
is zero point one 1/4 so brother another
 

00:07:05.460 --> 00:07:07.280 align:start position:0%
is zero point one 1/4 so brother another
point<00:07:05.670><c> four</c><00:07:05.910><c> percent</c><00:07:06.030><c> challenge</c><00:07:06.510><c> that</c><00:07:06.720><c> this</c>

00:07:07.280 --> 00:07:07.290 align:start position:0%
point four percent challenge that this
 

00:07:07.290 --> 00:07:09.440 align:start position:0%
point four percent challenge that this
is<00:07:07.500><c> cost</c><00:07:07.830><c> number</c><00:07:08.250><c> three</c><00:07:08.550><c> which</c><00:07:08.910><c> I</c><00:07:09.060><c> guess</c><00:07:09.240><c> is</c>

00:07:09.440 --> 00:07:09.450 align:start position:0%
is cost number three which I guess is
 

00:07:09.450 --> 00:07:11.150 align:start position:0%
is cost number three which I guess is
the<00:07:09.630><c> baby</c><00:07:09.900><c> chick</c><00:07:10.170><c> cost</c><00:07:10.380><c> right</c><00:07:10.710><c> so</c><00:07:10.890><c> there's</c><00:07:11.070><c> a</c>

00:07:11.150 --> 00:07:11.160 align:start position:0%
the baby chick cost right so there's a
 

00:07:11.160 --> 00:07:13.430 align:start position:0%
the baby chick cost right so there's a
chance<00:07:11.370><c> of</c><00:07:11.490><c> it</c><00:07:11.610><c> being</c><00:07:11.820><c> called</c><00:07:12.060><c> zero</c><00:07:12.540><c> cause</c><00:07:13.140><c> 1</c>

00:07:13.430 --> 00:07:13.440 align:start position:0%
chance of it being called zero cause 1
 

00:07:13.440 --> 00:07:17.180 align:start position:0%
chance of it being called zero cause 1
plus<00:07:13.740><c> 2</c><00:07:14.070><c> Plus</c><00:07:15.030><c> 3</c><00:07:15.060><c> so</c><00:07:15.720><c> the</c><00:07:16.440><c> output</c><00:07:16.830><c> of</c><00:07:16.890><c> in</c><00:07:17.040><c> your</c>

00:07:17.180 --> 00:07:17.190 align:start position:0%
plus 2 Plus 3 so the output of in your
 

00:07:17.190 --> 00:07:22.340 align:start position:0%
plus 2 Plus 3 so the output of in your
network<00:07:17.610><c> a</c><00:07:17.850><c> L</c><00:07:18.720><c> this</c><00:07:19.710><c> is</c><00:07:19.770><c> also</c><00:07:20.250><c> Y</c><00:07:21.180><c> hat</c><00:07:21.480><c> this</c><00:07:22.020><c> is</c><00:07:22.170><c> a</c>

00:07:22.340 --> 00:07:22.350 align:start position:0%
network a L this is also Y hat this is a
 

00:07:22.350 --> 00:07:25.010 align:start position:0%
network a L this is also Y hat this is a
four<00:07:23.040><c> by</c><00:07:23.070><c> one</c><00:07:23.370><c> vector</c><00:07:23.580><c> where</c><00:07:24.300><c> the</c><00:07:24.390><c> elements</c><00:07:24.900><c> of</c>

00:07:25.010 --> 00:07:25.020 align:start position:0%
four by one vector where the elements of
 

00:07:25.020 --> 00:07:27.260 align:start position:0%
four by one vector where the elements of
this<00:07:25.170><c> for</c><00:07:25.440><c> ball</c><00:07:25.650><c> one</c><00:07:25.800><c> vector</c><00:07:26.010><c> are</c><00:07:26.490><c> going</c><00:07:26.940><c> to</c><00:07:27.090><c> be</c>

00:07:27.260 --> 00:07:27.270 align:start position:0%
this for ball one vector are going to be
 

00:07:27.270 --> 00:07:30.590 align:start position:0%
this for ball one vector are going to be
these<00:07:27.900><c> four</c><00:07:28.260><c> numbers</c><00:07:28.820><c> that</c><00:07:29.820><c> we</c><00:07:29.940><c> just</c><00:07:30.120><c> computed</c>

00:07:30.590 --> 00:07:30.600 align:start position:0%
these four numbers that we just computed
 

00:07:30.600 --> 00:07:35.150 align:start position:0%
these four numbers that we just computed
so<00:07:31.140><c> this</c><00:07:31.590><c> algorithm</c><00:07:31.920><c> takes</c><00:07:32.760><c> the</c><00:07:33.270><c> vector</c><00:07:34.140><c> Z</c><00:07:34.980><c> L</c>

00:07:35.150 --> 00:07:35.160 align:start position:0%
so this algorithm takes the vector Z L
 

00:07:35.160 --> 00:07:37.280 align:start position:0%
so this algorithm takes the vector Z L
and<00:07:35.460><c> AB</c><00:07:35.730><c> set</c><00:07:36.060><c> to</c><00:07:36.270><c> four</c><00:07:36.510><c> probabilities</c><00:07:37.260><c> that</c>

00:07:37.280 --> 00:07:37.290 align:start position:0%
and AB set to four probabilities that
 

00:07:37.290 --> 00:07:41.330 align:start position:0%
and AB set to four probabilities that
sum<00:07:37.950><c> to</c><00:07:37.980><c> one</c><00:07:38.370><c> and</c><00:07:38.640><c> if</c><00:07:39.180><c> we</c><00:07:39.510><c> summarize</c><00:07:39.980><c> what</c><00:07:40.980><c> we</c>

00:07:41.330 --> 00:07:41.340 align:start position:0%
sum to one and if we summarize what we
 

00:07:41.340 --> 00:07:45.320 align:start position:0%
sum to one and if we summarize what we
just<00:07:41.370><c> did</c><00:07:41.790><c> to</c><00:07:42.090><c> map</c><00:07:42.270><c> from</c><00:07:42.540><c> ZL</c><00:07:43.050><c> to</c><00:07:43.890><c> Al</c><00:07:44.400><c> this</c><00:07:45.030><c> whole</c>

00:07:45.320 --> 00:07:45.330 align:start position:0%
just did to map from ZL to Al this whole
 

00:07:45.330 --> 00:07:47.390 align:start position:0%
just did to map from ZL to Al this whole
computation<00:07:45.690><c> confusing</c><00:07:46.650><c> the</c><00:07:46.770><c> exponentiation</c>

00:07:47.390 --> 00:07:47.400 align:start position:0%
computation confusing the exponentiation
 

00:07:47.400 --> 00:07:49.430 align:start position:0%
computation confusing the exponentiation
to<00:07:47.880><c> get</c><00:07:48.090><c> this</c><00:07:48.240><c> temporary</c><00:07:48.690><c> variable</c><00:07:48.780><c> T</c><00:07:49.410><c> and</c>

00:07:49.430 --> 00:07:49.440 align:start position:0%
to get this temporary variable T and
 

00:07:49.440 --> 00:07:53.030 align:start position:0%
to get this temporary variable T and
then<00:07:50.180><c> normalizing</c><00:07:51.180><c> we</c><00:07:51.810><c> can</c><00:07:52.020><c> summarize</c><00:07:52.410><c> this</c>

00:07:53.030 --> 00:07:53.040 align:start position:0%
then normalizing we can summarize this
 

00:07:53.040 --> 00:07:56.180 align:start position:0%
then normalizing we can summarize this
into<00:07:53.790><c> a</c><00:07:53.820><c> softmax</c><00:07:54.810><c> activation</c><00:07:55.050><c> function</c><00:07:55.950><c> and</c>

00:07:56.180 --> 00:07:56.190 align:start position:0%
into a softmax activation function and
 

00:07:56.190 --> 00:08:00.110 align:start position:0%
into a softmax activation function and
say<00:07:56.600><c> Al</c><00:07:57.600><c> equals</c><00:07:58.590><c> the</c><00:07:58.890><c> activation</c><00:07:59.460><c> function</c><00:07:59.490><c> G</c>

00:08:00.110 --> 00:08:00.120 align:start position:0%
say Al equals the activation function G
 

00:08:00.120 --> 00:08:04.460 align:start position:0%
say Al equals the activation function G
applied<00:08:00.810><c> to</c><00:08:01.200><c> the</c><00:08:01.950><c> vector</c><00:08:02.160><c> ZL</c><00:08:03.150><c> the</c><00:08:03.750><c> unusual</c>

00:08:04.460 --> 00:08:04.470 align:start position:0%
applied to the vector ZL the unusual
 

00:08:04.470 --> 00:08:05.930 align:start position:0%
applied to the vector ZL the unusual
thing<00:08:04.650><c> about</c><00:08:04.680><c> this</c><00:08:05.040><c> book</c><00:08:05.310><c> activation</c>

00:08:05.930 --> 00:08:05.940 align:start position:0%
thing about this book activation
 

00:08:05.940 --> 00:08:08.150 align:start position:0%
thing about this book activation
function<00:08:06.300><c> is</c><00:08:06.510><c> done</c><00:08:06.780><c> this</c><00:08:07.530><c> activation</c>

00:08:08.150 --> 00:08:08.160 align:start position:0%
function is done this activation
 

00:08:08.160 --> 00:08:11.150 align:start position:0%
function is done this activation
function<00:08:08.520><c> G</c><00:08:08.790><c> it</c><00:08:09.030><c> takes</c><00:08:09.300><c> as</c><00:08:09.450><c> input</c><00:08:09.870><c> a</c><00:08:10.140><c> 4</c><00:08:10.800><c> by</c><00:08:10.950><c> 1</c>

00:08:11.150 --> 00:08:11.160 align:start position:0%
function G it takes as input a 4 by 1
 

00:08:11.160 --> 00:08:15.050 align:start position:0%
function G it takes as input a 4 by 1
vector<00:08:11.190><c> and</c><00:08:11.850><c> it</c><00:08:12.090><c> opens</c><00:08:12.570><c> a</c><00:08:12.780><c> 4</c><00:08:13.680><c> by</c><00:08:13.830><c> 1</c><00:08:13.860><c> vector</c><00:08:14.060><c> so</c>

00:08:15.050 --> 00:08:15.060 align:start position:0%
vector and it opens a 4 by 1 vector so
 

00:08:15.060 --> 00:08:17.150 align:start position:0%
vector and it opens a 4 by 1 vector so
previously<00:08:15.660><c> our</c><00:08:15.960><c> activation</c><00:08:16.530><c> functions</c><00:08:16.920><c> used</c>

00:08:17.150 --> 00:08:17.160 align:start position:0%
previously our activation functions used
 

00:08:17.160 --> 00:08:19.340 align:start position:0%
previously our activation functions used
to<00:08:17.250><c> take</c><00:08:17.460><c> in</c><00:08:17.580><c> a</c><00:08:17.640><c> single</c><00:08:18.060><c> real</c><00:08:18.330><c> value</c><00:08:18.720><c> input</c><00:08:18.900><c> so</c>

00:08:19.340 --> 00:08:19.350 align:start position:0%
to take in a single real value input so
 

00:08:19.350 --> 00:08:21.650 align:start position:0%
to take in a single real value input so
for<00:08:19.500><c> example</c><00:08:19.890><c> the</c><00:08:20.070><c> sigmoid</c><00:08:20.490><c> and</c><00:08:20.730><c> the</c><00:08:20.850><c> value</c>

00:08:21.650 --> 00:08:21.660 align:start position:0%
for example the sigmoid and the value
 

00:08:21.660 --> 00:08:23.990 align:start position:0%
for example the sigmoid and the value
activation<00:08:22.260><c> functions</c><00:08:22.680><c> input</c><00:08:23.460><c> a</c><00:08:23.490><c> real</c><00:08:23.820><c> number</c>

00:08:23.990 --> 00:08:24.000 align:start position:0%
activation functions input a real number
 

00:08:24.000 --> 00:08:25.280 align:start position:0%
activation functions input a real number
and<00:08:24.300><c> output</c><00:08:24.630><c> a</c><00:08:24.660><c> real</c><00:08:24.870><c> number</c>

00:08:25.280 --> 00:08:25.290 align:start position:0%
and output a real number
 

00:08:25.290 --> 00:08:27.260 align:start position:0%
and output a real number
the<00:08:25.890><c> unusual</c><00:08:26.460><c> thing</c><00:08:26.490><c> about</c><00:08:26.670><c> the</c><00:08:26.910><c> softmax</c>

00:08:27.260 --> 00:08:27.270 align:start position:0%
the unusual thing about the softmax
 

00:08:27.270 --> 00:08:29.360 align:start position:0%
the unusual thing about the softmax
activation<00:08:27.510><c> function</c><00:08:28.260><c> is</c><00:08:28.470><c> because</c><00:08:29.040><c> we</c><00:08:29.250><c> need</c>

00:08:29.360 --> 00:08:29.370 align:start position:0%
activation function is because we need
 

00:08:29.370 --> 00:08:31.640 align:start position:0%
activation function is because we need
to<00:08:29.520><c> normalize</c><00:08:29.700><c> across</c><00:08:30.600><c> the</c><00:08:31.230><c> different</c>

00:08:31.640 --> 00:08:31.650 align:start position:0%
to normalize across the different
 

00:08:31.650 --> 00:08:33.830 align:start position:0%
to normalize across the different
possible<00:08:32.010><c> prism</c><00:08:32.490><c> used</c><00:08:32.669><c> to</c><00:08:32.820><c> take</c><00:08:33.060><c> in</c><00:08:33.240><c> a</c><00:08:33.390><c> vector</c>

00:08:33.830 --> 00:08:33.840 align:start position:0%
possible prism used to take in a vector
 

00:08:33.840 --> 00:08:36.589 align:start position:0%
possible prism used to take in a vector
of<00:08:33.960><c> inputs</c><00:08:34.349><c> and</c><00:08:34.530><c> an</c><00:08:34.650><c> opposite</c><00:08:35.190><c> vector</c><00:08:35.310><c> so</c><00:08:36.240><c> one</c>

00:08:36.589 --> 00:08:36.599 align:start position:0%
of inputs and an opposite vector so one
 

00:08:36.599 --> 00:08:38.630 align:start position:0%
of inputs and an opposite vector so one
of<00:08:36.630><c> the</c><00:08:36.810><c> things</c><00:08:37.020><c> that</c><00:08:37.320><c> a</c><00:08:37.349><c> softmax</c><00:08:38.039><c> crossbar</c>

00:08:38.630 --> 00:08:38.640 align:start position:0%
of the things that a softmax crossbar
 

00:08:38.640 --> 00:08:40.310 align:start position:0%
of the things that a softmax crossbar
can<00:08:38.880><c> represent</c><00:08:39.060><c> I'm</c><00:08:39.539><c> going</c><00:08:39.750><c> to</c><00:08:39.810><c> show</c><00:08:40.020><c> you</c><00:08:40.050><c> some</c>

00:08:40.310 --> 00:08:40.320 align:start position:0%
can represent I'm going to show you some
 

00:08:40.320 --> 00:08:43.940 align:start position:0%
can represent I'm going to show you some
examples<00:08:40.830><c> where</c><00:08:41.130><c> you</c><00:08:41.160><c> have</c><00:08:41.450><c> inputs</c><00:08:42.450><c> x1</c><00:08:42.810><c> x2</c><00:08:43.530><c> and</c>

00:08:43.940 --> 00:08:43.950 align:start position:0%
examples where you have inputs x1 x2 and
 

00:08:43.950 --> 00:08:47.450 align:start position:0%
examples where you have inputs x1 x2 and
these<00:08:44.700><c> feed</c><00:08:45.060><c> directly</c><00:08:45.660><c> to</c><00:08:46.260><c> a</c><00:08:46.290><c> softmax</c><00:08:47.100><c> layer</c>

00:08:47.450 --> 00:08:47.460 align:start position:0%
these feed directly to a softmax layer
 

00:08:47.460 --> 00:08:49.430 align:start position:0%
these feed directly to a softmax layer
that<00:08:48.300><c> has</c><00:08:48.600><c> 3</c>

00:08:49.430 --> 00:08:49.440 align:start position:0%
that has 3
 

00:08:49.440 --> 00:08:51.920 align:start position:0%
that has 3
or<00:08:49.680><c> four</c><00:08:49.980><c> or</c><00:08:50.250><c> more</c><00:08:50.430><c> aqua</c><00:08:51.240><c> notes</c><00:08:51.480><c> that</c><00:08:51.780><c> then</c>

00:08:51.920 --> 00:08:51.930 align:start position:0%
or four or more aqua notes that then
 

00:08:51.930 --> 00:08:54.440 align:start position:0%
or four or more aqua notes that then
opens<00:08:52.110><c> why</c><00:08:52.530><c> hat</c><00:08:52.800><c> so</c><00:08:53.550><c> going</c><00:08:54.090><c> to</c><00:08:54.150><c> show</c><00:08:54.270><c> you</c><00:08:54.330><c> a</c>

00:08:54.440 --> 00:08:54.450 align:start position:0%
opens why hat so going to show you a
 

00:08:54.450 --> 00:08:56.990 align:start position:0%
opens why hat so going to show you a
neural<00:08:54.660><c> network</c><00:08:55.050><c> with</c><00:08:55.350><c> no</c><00:08:56.100><c> hidden</c><00:08:56.340><c> layer</c><00:08:56.670><c> and</c>

00:08:56.990 --> 00:08:57.000 align:start position:0%
neural network with no hidden layer and
 

00:08:57.000 --> 00:09:02.210 align:start position:0%
neural network with no hidden layer and
all<00:08:57.450><c> it</c><00:08:57.570><c> does</c><00:08:57.780><c> is</c><00:08:58.110><c> compute</c><00:08:58.650><c> z1</c><00:08:59.930><c> equals</c><00:09:01.220><c> w1</c>

00:09:02.210 --> 00:09:02.220 align:start position:0%
all it does is compute z1 equals w1
 

00:09:02.220 --> 00:09:06.260 align:start position:0%
all it does is compute z1 equals w1
times<00:09:02.730><c> the</c><00:09:03.000><c> input</c><00:09:03.180><c> X</c><00:09:03.600><c> plus</c><00:09:04.470><c> B</c><00:09:04.710><c> and</c><00:09:05.090><c> then</c><00:09:06.090><c> the</c>

00:09:06.260 --> 00:09:06.270 align:start position:0%
times the input X plus B and then the
 

00:09:06.270 --> 00:09:10.520 align:start position:0%
times the input X plus B and then the
output<00:09:06.720><c> a</c><00:09:06.960><c> 1</c><00:09:07.200><c> or</c><00:09:08.130><c> Y</c><00:09:09.030><c> hat</c><00:09:09.270><c> is</c><00:09:09.600><c> just</c><00:09:09.690><c> the</c><00:09:10.170><c> softmax</c>

00:09:10.520 --> 00:09:10.530 align:start position:0%
output a 1 or Y hat is just the softmax
 

00:09:10.530 --> 00:09:13.550 align:start position:0%
output a 1 or Y hat is just the softmax
activation<00:09:10.800><c> function</c><00:09:11.670><c> applied</c><00:09:11.850><c> to</c><00:09:12.600><c> z1</c>

00:09:13.550 --> 00:09:13.560 align:start position:0%
activation function applied to z1
 

00:09:13.560 --> 00:09:15.950 align:start position:0%
activation function applied to z1
so<00:09:13.890><c> in</c><00:09:14.370><c> this</c><00:09:14.670><c> neural</c><00:09:15.030><c> network</c><00:09:15.060><c> with</c><00:09:15.540><c> no</c><00:09:15.720><c> hidden</c>

00:09:15.950 --> 00:09:15.960 align:start position:0%
so in this neural network with no hidden
 

00:09:15.960 --> 00:09:17.360 align:start position:0%
so in this neural network with no hidden
there<00:09:16.200><c> should</c><00:09:16.530><c> give</c><00:09:16.650><c> you</c><00:09:16.740><c> a</c><00:09:16.770><c> sense</c><00:09:17.010><c> of</c><00:09:17.250><c> the</c>

00:09:17.360 --> 00:09:17.370 align:start position:0%
there should give you a sense of the
 

00:09:17.370 --> 00:09:19.250 align:start position:0%
there should give you a sense of the
types<00:09:17.730><c> of</c><00:09:17.850><c> things</c><00:09:18.030><c> a</c><00:09:18.150><c> softmax</c><00:09:18.540><c> function</c><00:09:18.720><c> can</c>

00:09:19.250 --> 00:09:19.260 align:start position:0%
types of things a softmax function can
 

00:09:19.260 --> 00:09:21.680 align:start position:0%
types of things a softmax function can
represent<00:09:19.410><c> so</c><00:09:20.250><c> here's</c><00:09:20.610><c> one</c><00:09:20.790><c> example</c><00:09:20.910><c> with</c>

00:09:21.680 --> 00:09:21.690 align:start position:0%
represent so here's one example with
 

00:09:21.690 --> 00:09:25.310 align:start position:0%
represent so here's one example with
just<00:09:22.230><c> raw</c><00:09:22.410><c> inputs</c><00:09:22.800><c> x1</c><00:09:23.190><c> and</c><00:09:23.460><c> x2</c><00:09:23.700><c> a</c><00:09:24.320><c> softmax</c>

00:09:25.310 --> 00:09:25.320 align:start position:0%
just raw inputs x1 and x2 a softmax
 

00:09:25.320 --> 00:09:30.410 align:start position:0%
just raw inputs x1 and x2 a softmax
layer<00:09:25.950><c> with</c><00:09:27.050><c> C</c><00:09:28.050><c> equals</c><00:09:28.560><c> V</c><00:09:28.950><c> output</c><00:09:29.280><c> causes</c><00:09:30.060><c> can</c>

00:09:30.410 --> 00:09:30.420 align:start position:0%
layer with C equals V output causes can
 

00:09:30.420 --> 00:09:31.910 align:start position:0%
layer with C equals V output causes can
represent<00:09:30.570><c> this</c><00:09:30.990><c> type</c><00:09:31.170><c> of</c><00:09:31.200><c> decision</c><00:09:31.620><c> boundary</c>

00:09:31.910 --> 00:09:31.920 align:start position:0%
represent this type of decision boundary
 

00:09:31.920 --> 00:09:34.490 align:start position:0%
represent this type of decision boundary
now<00:09:32.220><c> this</c><00:09:32.430><c> is</c><00:09:32.580><c> kind</c><00:09:32.940><c> of</c><00:09:33.030><c> a</c><00:09:33.150><c> several</c><00:09:34.110><c> linear</c>

00:09:34.490 --> 00:09:34.500 align:start position:0%
now this is kind of a several linear
 

00:09:34.500 --> 00:09:36.860 align:start position:0%
now this is kind of a several linear
decision<00:09:34.890><c> boundaries</c><00:09:35.250><c> but</c><00:09:36.000><c> this</c><00:09:36.270><c> allows</c><00:09:36.600><c> it</c>

00:09:36.860 --> 00:09:36.870 align:start position:0%
decision boundaries but this allows it
 

00:09:36.870 --> 00:09:38.960 align:start position:0%
decision boundaries but this allows it
to<00:09:36.900><c> separate</c><00:09:37.770><c> out</c><00:09:37.920><c> the</c><00:09:38.130><c> data</c><00:09:38.370><c> into</c><00:09:38.730><c> three</c>

00:09:38.960 --> 00:09:38.970 align:start position:0%
to separate out the data into three
 

00:09:38.970 --> 00:09:43.310 align:start position:0%
to separate out the data into three
classes<00:09:39.240><c> and</c><00:09:39.830><c> in</c><00:09:40.830><c> this</c><00:09:41.130><c> diagram</c><00:09:42.050><c> what</c><00:09:43.050><c> we</c><00:09:43.080><c> did</c>

00:09:43.310 --> 00:09:43.320 align:start position:0%
classes and in this diagram what we did
 

00:09:43.320 --> 00:09:45.320 align:start position:0%
classes and in this diagram what we did
was<00:09:43.500><c> we</c><00:09:43.680><c> actually</c><00:09:43.770><c> took</c><00:09:44.160><c> the</c><00:09:44.400><c> training</c><00:09:44.820><c> set</c><00:09:45.090><c> is</c>

00:09:45.320 --> 00:09:45.330 align:start position:0%
was we actually took the training set is
 

00:09:45.330 --> 00:09:47.510 align:start position:0%
was we actually took the training set is
kind<00:09:45.810><c> of</c><00:09:45.900><c> shown</c><00:09:46.110><c> in</c><00:09:46.290><c> this</c><00:09:46.380><c> figure</c><00:09:46.620><c> and</c><00:09:46.920><c> train</c><00:09:47.490><c> a</c>

00:09:47.510 --> 00:09:47.520 align:start position:0%
kind of shown in this figure and train a
 

00:09:47.520 --> 00:09:49.370 align:start position:0%
kind of shown in this figure and train a
cost<00:09:47.850><c> function</c><00:09:48.060><c> and</c><00:09:48.450><c> train</c><00:09:48.930><c> the</c><00:09:49.050><c> softmax</c>

00:09:49.370 --> 00:09:49.380 align:start position:0%
cost function and train the softmax
 

00:09:49.380 --> 00:09:51.920 align:start position:0%
cost function and train the softmax
classifier<00:09:49.980><c> with</c><00:09:50.460><c> three</c><00:09:50.760><c> upper</c><00:09:51.150><c> labels</c><00:09:51.600><c> on</c>

00:09:51.920 --> 00:09:51.930 align:start position:0%
classifier with three upper labels on
 

00:09:51.930 --> 00:09:54.560 align:start position:0%
classifier with three upper labels on
the<00:09:52.080><c> data</c><00:09:52.290><c> and</c><00:09:52.650><c> then</c><00:09:53.310><c> the</c><00:09:53.550><c> color</c><00:09:53.910><c> on</c><00:09:54.090><c> this</c><00:09:54.240><c> plot</c>

00:09:54.560 --> 00:09:54.570 align:start position:0%
the data and then the color on this plot
 

00:09:54.570 --> 00:09:56.720 align:start position:0%
the data and then the color on this plot
shows<00:09:54.600><c> fresh</c><00:09:55.590><c> holding</c><00:09:56.040><c> the</c><00:09:56.130><c> outputs</c><00:09:56.550><c> in</c><00:09:56.610><c> the</c>

00:09:56.720 --> 00:09:56.730 align:start position:0%
shows fresh holding the outputs in the
 

00:09:56.730 --> 00:09:59.120 align:start position:0%
shows fresh holding the outputs in the
salt<00:09:56.940><c> bags</c><00:09:57.120><c> crossfire</c><00:09:57.660><c> and</c><00:09:58.230><c> coloring</c><00:09:58.800><c> in</c><00:09:58.980><c> the</c>

00:09:59.120 --> 00:09:59.130 align:start position:0%
salt bags crossfire and coloring in the
 

00:09:59.130 --> 00:10:01.040 align:start position:0%
salt bags crossfire and coloring in the
input<00:09:59.490><c> based</c><00:09:59.700><c> on</c><00:09:59.940><c> which</c><00:10:00.390><c> one</c><00:10:00.660><c> of</c><00:10:00.690><c> the</c><00:10:01.020><c> three</c>

00:10:01.040 --> 00:10:01.050 align:start position:0%
input based on which one of the three
 

00:10:01.050 --> 00:10:03.770 align:start position:0%
input based on which one of the three
outputs<00:10:01.830><c> had</c><00:10:02.010><c> the</c><00:10:02.100><c> highest</c><00:10:02.490><c> probability</c><00:10:02.780><c> so</c>

00:10:03.770 --> 00:10:03.780 align:start position:0%
outputs had the highest probability so
 

00:10:03.780 --> 00:10:05.390 align:start position:0%
outputs had the highest probability so
you<00:10:03.870><c> can</c><00:10:04.050><c> maybe</c><00:10:04.320><c> kind</c><00:10:04.620><c> of</c><00:10:04.710><c> see</c><00:10:04.860><c> that</c><00:10:05.040><c> this</c><00:10:05.220><c> is</c>

00:10:05.390 --> 00:10:05.400 align:start position:0%
you can maybe kind of see that this is
 

00:10:05.400 --> 00:10:07.280 align:start position:0%
you can maybe kind of see that this is
like<00:10:05.430><c> a</c><00:10:05.580><c> generalization</c><00:10:06.450><c> of</c><00:10:06.810><c> logistic</c>

00:10:07.280 --> 00:10:07.290 align:start position:0%
like a generalization of logistic
 

00:10:07.290 --> 00:10:09.710 align:start position:0%
like a generalization of logistic
regression<00:10:07.770><c> with</c><00:10:08.550><c> sort</c><00:10:08.940><c> of</c><00:10:09.060><c> linear</c><00:10:09.420><c> decision</c>

00:10:09.710 --> 00:10:09.720 align:start position:0%
regression with sort of linear decision
 

00:10:09.720 --> 00:10:12.200 align:start position:0%
regression with sort of linear decision
boundaries<00:10:10.170><c> but</c><00:10:10.620><c> with</c><00:10:11.100><c> more</c><00:10:11.820><c> than</c><00:10:11.880><c> two</c>

00:10:12.200 --> 00:10:12.210 align:start position:0%
boundaries but with more than two
 

00:10:12.210 --> 00:10:14.330 align:start position:0%
boundaries but with more than two
classes<00:10:12.720><c> but</c><00:10:12.900><c> mostafa</c><00:10:13.470><c> call</c><00:10:13.710><c> has</c><00:10:13.860><c> been</c><00:10:13.890><c> just</c><00:10:14.160><c> 0</c>

00:10:14.330 --> 00:10:14.340 align:start position:0%
classes but mostafa call has been just 0
 

00:10:14.340 --> 00:10:17.420 align:start position:0%
classes but mostafa call has been just 0
1<00:10:14.580><c> the</c><00:10:14.790><c> cost</c><00:10:15.000><c> can</c><00:10:15.180><c> be</c><00:10:15.360><c> 0</c><00:10:15.660><c> 1</c><00:10:15.690><c> or</c><00:10:15.900><c> 2</c><00:10:16.430><c> here's</c>

00:10:17.420 --> 00:10:17.430 align:start position:0%
1 the cost can be 0 1 or 2 here's
 

00:10:17.430 --> 00:10:19.010 align:start position:0%
1 the cost can be 0 1 or 2 here's
another<00:10:17.670><c> example</c><00:10:17.850><c> of</c><00:10:18.240><c> decision</c><00:10:18.690><c> boundary</c>

00:10:19.010 --> 00:10:19.020 align:start position:0%
another example of decision boundary
 

00:10:19.020 --> 00:10:21.350 align:start position:0%
another example of decision boundary
that<00:10:19.290><c> a</c><00:10:19.320><c> Sakai's</c><00:10:19.800><c> classifier</c><00:10:20.360><c> represents</c>

00:10:21.350 --> 00:10:21.360 align:start position:0%
that a Sakai's classifier represents
 

00:10:21.360 --> 00:10:22.850 align:start position:0%
that a Sakai's classifier represents
when<00:10:21.630><c> Turing</c><00:10:21.840><c> on</c><00:10:21.990><c> a</c><00:10:22.020><c> data</c><00:10:22.290><c> set</c><00:10:22.560><c> with</c><00:10:22.590><c> three</c>

00:10:22.850 --> 00:10:22.860 align:start position:0%
when Turing on a data set with three
 

00:10:22.860 --> 00:10:26.720 align:start position:0%
when Turing on a data set with three
classes<00:10:23.430><c> and</c><00:10:24.080><c> here's</c><00:10:25.080><c> another</c><00:10:25.260><c> one</c><00:10:25.680><c> right</c><00:10:26.490><c> so</c>

00:10:26.720 --> 00:10:26.730 align:start position:0%
classes and here's another one right so
 

00:10:26.730 --> 00:10:29.630 align:start position:0%
classes and here's another one right so
this<00:10:26.940><c> is</c><00:10:27.120><c> up</c><00:10:27.440><c> but</c><00:10:28.440><c> one</c><00:10:28.650><c> intuition</c><00:10:29.280><c> is</c><00:10:29.460><c> that</c>

00:10:29.630 --> 00:10:29.640 align:start position:0%
this is up but one intuition is that
 

00:10:29.640 --> 00:10:31.610 align:start position:0%
this is up but one intuition is that
decision<00:10:30.210><c> boundary</c><00:10:30.600><c> between</c><00:10:30.900><c> any</c><00:10:31.320><c> two</c>

00:10:31.610 --> 00:10:31.620 align:start position:0%
decision boundary between any two
 

00:10:31.620 --> 00:10:36.079 align:start position:0%
decision boundary between any two
classes<00:10:32.130><c> well</c><00:10:32.790><c> it</c><00:10:33.000><c> will</c><00:10:33.540><c> be</c><00:10:33.720><c> linear</c><00:10:35.089><c> that's</c>

00:10:36.079 --> 00:10:36.089 align:start position:0%
classes well it will be linear that's
 

00:10:36.089 --> 00:10:38.300 align:start position:0%
classes well it will be linear that's
why<00:10:36.240><c> you</c><00:10:36.300><c> see</c><00:10:36.630><c> for</c><00:10:36.870><c> example</c><00:10:37.040><c> the</c><00:10:38.040><c> decision</c>

00:10:38.300 --> 00:10:38.310 align:start position:0%
why you see for example the decision
 

00:10:38.310 --> 00:10:39.860 align:start position:0%
why you see for example the decision
boundary<00:10:38.760><c> between</c><00:10:39.000><c> the</c><00:10:39.240><c> yellow</c><00:10:39.450><c> and</c><00:10:39.570><c> the</c><00:10:39.720><c> gray</c>

00:10:39.860 --> 00:10:39.870 align:start position:0%
boundary between the yellow and the gray
 

00:10:39.870 --> 00:10:41.720 align:start position:0%
boundary between the yellow and the gray
classes<00:10:40.380><c> that's</c><00:10:40.740><c> or</c><00:10:40.920><c> the</c><00:10:41.070><c> linear</c><00:10:41.280><c> boundary</c>

00:10:41.720 --> 00:10:41.730 align:start position:0%
classes that's or the linear boundary
 

00:10:41.730 --> 00:10:44.030 align:start position:0%
classes that's or the linear boundary
region<00:10:42.600><c> purple</c><00:10:42.990><c> bird</c><00:10:43.200><c> is</c><00:10:43.380><c> not</c><00:10:43.500><c> lineage</c><00:10:43.920><c> and</c>

00:10:44.030 --> 00:10:44.040 align:start position:0%
region purple bird is not lineage and
 

00:10:44.040 --> 00:10:45.950 align:start position:0%
region purple bird is not lineage and
boundary<00:10:44.400><c> to</c><00:10:44.790><c> the</c><00:10:44.880><c> purple</c><00:10:45.240><c> yellow</c><00:10:45.420><c> is</c><00:10:45.600><c> another</c>

00:10:45.950 --> 00:10:45.960 align:start position:0%
boundary to the purple yellow is another
 

00:10:45.960 --> 00:10:48.350 align:start position:0%
boundary to the purple yellow is another
limitation<00:10:46.470><c> boundary</c><00:10:47.040><c> but</c><00:10:47.640><c> you</c><00:10:47.880><c> know</c><00:10:47.970><c> is</c><00:10:48.060><c> able</c>

00:10:48.350 --> 00:10:48.360 align:start position:0%
limitation boundary but you know is able
 

00:10:48.360 --> 00:10:50.120 align:start position:0%
limitation boundary but you know is able
to<00:10:48.510><c> use</c><00:10:48.660><c> the</c><00:10:48.839><c> different</c><00:10:49.200><c> linear</c><00:10:49.470><c> functions</c><00:10:49.920><c> in</c>

00:10:50.120 --> 00:10:50.130 align:start position:0%
to use the different linear functions in
 

00:10:50.130 --> 00:10:52.400 align:start position:0%
to use the different linear functions in
order<00:10:50.430><c> to</c><00:10:50.610><c> separate</c><00:10:51.030><c> the</c><00:10:51.089><c> space</c><00:10:51.330><c> into</c><00:10:51.810><c> three</c>

00:10:52.400 --> 00:10:52.410 align:start position:0%
order to separate the space into three
 

00:10:52.410 --> 00:10:53.990 align:start position:0%
order to separate the space into three
classes

00:10:53.990 --> 00:10:54.000 align:start position:0%
classes
 

00:10:54.000 --> 00:10:56.150 align:start position:0%
classes
some<00:10:54.390><c> examples</c><00:10:54.870><c> with</c><00:10:55.080><c> more</c><00:10:55.290><c> classes</c><00:10:55.740><c> so</c><00:10:56.010><c> this</c>

00:10:56.150 --> 00:10:56.160 align:start position:0%
some examples with more classes so this
 

00:10:56.160 --> 00:11:00.170 align:start position:0%
some examples with more classes so this
is<00:10:56.280><c> example</c><00:10:56.550><c> with</c><00:10:57.000><c> C</c><00:10:57.750><c> equals</c><00:10:58.170><c> 4</c><00:10:58.850><c> so</c><00:10:59.850><c> that</c><00:11:00.030><c> the</c>

00:11:00.170 --> 00:11:00.180 align:start position:0%
is example with C equals 4 so that the
 

00:11:00.180 --> 00:11:03.140 align:start position:0%
is example with C equals 4 so that the
dream<00:11:00.450><c> class</c><00:11:00.690><c> and</c><00:11:01.080><c> softmax</c><00:11:01.590><c> can</c><00:11:02.160><c> continue</c><00:11:03.030><c> to</c>

00:11:03.140 --> 00:11:03.150 align:start position:0%
dream class and softmax can continue to
 

00:11:03.150 --> 00:11:04.580 align:start position:0%
dream class and softmax can continue to
represent<00:11:03.510><c> these</c><00:11:03.630><c> types</c><00:11:03.900><c> of</c><00:11:04.020><c> lineages</c><00:11:04.530><c> and</c>

00:11:04.580 --> 00:11:04.590 align:start position:0%
represent these types of lineages and
 

00:11:04.590 --> 00:11:07.310 align:start position:0%
represent these types of lineages and
boundaries<00:11:05.070><c> between</c><00:11:05.430><c> multiple</c><00:11:05.940><c> classes</c><00:11:06.360><c> so</c>

00:11:07.310 --> 00:11:07.320 align:start position:0%
boundaries between multiple classes so
 

00:11:07.320 --> 00:11:10.370 align:start position:0%
boundaries between multiple classes so
here's<00:11:07.740><c> one</c><00:11:07.950><c> more</c><00:11:08.040><c> example</c><00:11:08.100><c> with</c><00:11:08.880><c> C</c><00:11:09.600><c> equals</c><00:11:09.990><c> 5</c>

00:11:10.370 --> 00:11:10.380 align:start position:0%
here's one more example with C equals 5
 

00:11:10.380 --> 00:11:13.880 align:start position:0%
here's one more example with C equals 5
classes<00:11:10.740><c> and</c><00:11:11.630><c> here's</c><00:11:12.630><c> one</c><00:11:12.900><c> last</c><00:11:13.020><c> example</c><00:11:13.200><c> with</c>

00:11:13.880 --> 00:11:13.890 align:start position:0%
classes and here's one last example with
 

00:11:13.890 --> 00:11:14.900 align:start position:0%
classes and here's one last example with
C<00:11:14.280><c> equals</c><00:11:14.520><c> 6</c>

00:11:14.900 --> 00:11:14.910 align:start position:0%
C equals 6
 

00:11:14.910 --> 00:11:17.090 align:start position:0%
C equals 6
so<00:11:15.420><c> this</c><00:11:15.630><c> shows</c><00:11:15.810><c> the</c><00:11:16.050><c> type</c><00:11:16.320><c> of</c><00:11:16.350><c> things</c><00:11:16.980><c> that</c>

00:11:17.090 --> 00:11:17.100 align:start position:0%
so this shows the type of things that
 

00:11:17.100 --> 00:11:20.120 align:start position:0%
so this shows the type of things that
softmax<00:11:17.550><c> also</c><00:11:18.000><c> I</c><00:11:18.030><c> can</c><00:11:18.210><c> do</c><00:11:18.390><c> when</c><00:11:19.020><c> there</c><00:11:19.560><c> is</c><00:11:19.770><c> no</c>

00:11:20.120 --> 00:11:20.130 align:start position:0%
softmax also I can do when there is no
 

00:11:20.130 --> 00:11:21.830 align:start position:0%
softmax also I can do when there is no
hidden<00:11:20.370><c> there</c><00:11:20.640><c> of</c><00:11:20.970><c> course</c><00:11:21.300><c> you</c><00:11:21.510><c> have</c><00:11:21.600><c> a</c><00:11:21.660><c> much</c>

00:11:21.830 --> 00:11:21.840 align:start position:0%
hidden there of course you have a much
 

00:11:21.840 --> 00:11:24.740 align:start position:0%
hidden there of course you have a much
deeper<00:11:22.080><c> inner</c><00:11:22.470><c> network</c><00:11:22.860><c> with</c><00:11:23.490><c> X</c><00:11:23.730><c> and</c><00:11:24.090><c> then</c><00:11:24.210><c> you</c>

00:11:24.740 --> 00:11:24.750 align:start position:0%
deeper inner network with X and then you
 

00:11:24.750 --> 00:11:27.110 align:start position:0%
deeper inner network with X and then you
know<00:11:24.900><c> some</c><00:11:25.230><c> picking</c><00:11:25.530><c> unions</c><00:11:25.920><c> and</c><00:11:26.190><c> more</c><00:11:26.940><c> hidden</c>

00:11:27.110 --> 00:11:27.120 align:start position:0%
know some picking unions and more hidden
 

00:11:27.120 --> 00:11:29.450 align:start position:0%
know some picking unions and more hidden
unions<00:11:27.570><c> and</c><00:11:27.810><c> so</c><00:11:27.960><c> on</c><00:11:28.170><c> then</c><00:11:28.920><c> you</c><00:11:28.950><c> could</c><00:11:29.310><c> learn</c>

00:11:29.450 --> 00:11:29.460 align:start position:0%
unions and so on then you could learn
 

00:11:29.460 --> 00:11:31.550 align:start position:0%
unions and so on then you could learn
even<00:11:29.790><c> more</c><00:11:30.000><c> complex</c><00:11:30.630><c> nonlinear</c><00:11:31.350><c> decision</c>

00:11:31.550 --> 00:11:31.560 align:start position:0%
even more complex nonlinear decision
 

00:11:31.560 --> 00:11:33.230 align:start position:0%
even more complex nonlinear decision
boundaries<00:11:32.010><c> to</c><00:11:32.340><c> separate</c><00:11:32.730><c> out</c><00:11:32.850><c> multiple</c>

00:11:33.230 --> 00:11:33.240 align:start position:0%
boundaries to separate out multiple
 

00:11:33.240 --> 00:11:35.810 align:start position:0%
boundaries to separate out multiple
different<00:11:33.450><c> classes</c><00:11:33.960><c> so</c><00:11:34.280><c> I</c><00:11:35.280><c> hope</c><00:11:35.490><c> this</c><00:11:35.670><c> gives</c>

00:11:35.810 --> 00:11:35.820 align:start position:0%
different classes so I hope this gives
 

00:11:35.820 --> 00:11:37.610 align:start position:0%
different classes so I hope this gives
you<00:11:35.940><c> a</c><00:11:36.000><c> sense</c><00:11:36.210><c> of</c><00:11:36.420><c> what</c><00:11:36.630><c> a</c><00:11:36.660><c> softmax</c><00:11:37.290><c> player</c>

00:11:37.610 --> 00:11:37.620 align:start position:0%
you a sense of what a softmax player
 

00:11:37.620 --> 00:11:39.740 align:start position:0%
you a sense of what a softmax player
what<00:11:37.920><c> a</c><00:11:37.950><c> softmax</c><00:11:38.400><c> activation</c><00:11:38.640><c> function</c><00:11:39.540><c> in</c><00:11:39.690><c> a</c>

00:11:39.740 --> 00:11:39.750 align:start position:0%
what a softmax activation function in a
 

00:11:39.750 --> 00:11:42.590 align:start position:0%
what a softmax activation function in a
neural<00:11:40.200><c> network</c><00:11:40.440><c> can</c><00:11:40.950><c> do</c><00:11:41.130><c> in</c><00:11:41.370><c> the</c><00:11:42.060><c> next</c><00:11:42.090><c> video</c>

00:11:42.590 --> 00:11:42.600 align:start position:0%
neural network can do in the next video
 

00:11:42.600 --> 00:11:44.090 align:start position:0%
neural network can do in the next video
let's<00:11:42.870><c> take</c><00:11:42.990><c> a</c><00:11:43.050><c> look</c><00:11:43.230><c> at</c><00:11:43.350><c> how</c><00:11:43.470><c> you</c><00:11:43.530><c> can</c><00:11:43.650><c> train</c>

00:11:44.090 --> 00:11:44.100 align:start position:0%
let's take a look at how you can train
 

00:11:44.100 --> 00:11:46.370 align:start position:0%
let's take a look at how you can train
in<00:11:44.340><c> your</c><00:11:44.700><c> network</c><00:11:45.120><c> that</c><00:11:45.570><c> uses</c><00:11:45.780><c> a</c><00:11:46.110><c> software</c>

00:11:46.370 --> 00:11:46.380 align:start position:0%
in your network that uses a software
 

00:11:46.380 --> 00:11:48.890 align:start position:0%
in your network that uses a software
layer

