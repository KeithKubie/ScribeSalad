WEBVTT
Kind: captions
Language: en

00:00:08.892 --> 00:00:11.470
MALE SPEAKER: In this tutorial,
we're going to show

00:00:11.470 --> 00:00:14.330
you how to obtain a refresh
token for testing your code

00:00:14.330 --> 00:00:16.079
without having to write
the code to handle the

00:00:16.079 --> 00:00:18.410
authorization flow yourself.

00:00:18.410 --> 00:00:20.270
The first thing you'll want to
do is [? browse to the ?]

00:00:20.270 --> 00:00:21.620
OAuth Playground.

00:00:21.620 --> 00:00:24.530
The OAuth Playground is a tool
hosted on Google Developers

00:00:24.530 --> 00:00:27.970
site that lets developers
see authorization flow

00:00:27.970 --> 00:00:30.700
step-by-step and see
how API calls are

00:00:30.700 --> 00:00:32.710
made at the HTTP layer.

00:00:32.710 --> 00:00:35.130
You can find the OAuth
Playground at developers.googl

00:00:35.130 --> 00:00:40.130
e.com/oauthplayground or by
searching for OAuth Playground

00:00:40.130 --> 00:00:43.110
in your favorite
search engine.

00:00:43.110 --> 00:00:45.120
For today's tutorial, we're only
going to show the steps

00:00:45.120 --> 00:00:48.210
required to obtain a long-lived
refresh token that

00:00:48.210 --> 00:00:51.210
we can exchange for access
tokens to make YouTube Data

00:00:51.210 --> 00:00:54.590
API and YouTube Analytics
API calls.

00:00:54.590 --> 00:00:56.750
The first thing we need to
do is configure the OAuth

00:00:56.750 --> 00:01:00.600
Playground to use our client
secret and client ID.

00:01:00.600 --> 00:01:03.150
Let's find our client ID and
client secret from the Google

00:01:03.150 --> 00:01:04.090
API Console.

00:01:04.090 --> 00:01:05.430
We're going to need
these in a second.

00:01:12.250 --> 00:01:13.830
Browse back through OAuth
Playground and click the

00:01:13.830 --> 00:01:16.170
Settings button.

00:01:16.170 --> 00:01:19.250
Let's check the box using Use
Your Own OAuth Credentials.

00:01:19.250 --> 00:01:22.400
And let's make sure the access
type is set to Offline,

00:01:22.400 --> 00:01:25.360
because this is what we need
to ensure that we receive a

00:01:25.360 --> 00:01:27.070
long-lived refresh
token and not a

00:01:27.070 --> 00:01:29.590
short-lived access token.

00:01:29.590 --> 00:01:33.220
You'll be presented with two
fields, one for client ID and

00:01:33.220 --> 00:01:35.890
one for client secret.

00:01:35.890 --> 00:01:38.315
Let's copy-paste the values
over from the API console.

00:01:53.150 --> 00:01:55.720
There's one more thing
we need to set up.

00:01:55.720 --> 00:01:58.390
Note that we have a redirect
URI set up that points to

00:01:58.390 --> 00:02:02.430
developers.googl
e.com/oauthplayground.

00:02:02.430 --> 00:02:05.970
This is important because the
OAuth Playground requires us

00:02:05.970 --> 00:02:08.250
to redirect back through
Playground after an

00:02:08.250 --> 00:02:10.000
authorization step.

00:02:10.000 --> 00:02:12.720
Let's click on Edit Settings.

00:02:12.720 --> 00:02:16.220
If we haven't set this yet,
let's enter this into the

00:02:16.220 --> 00:02:19.140
Authorized Redirect URIs
box and click Update.

00:02:24.650 --> 00:02:28.120
Now let's go back through
OAuth 2.0 Playground.

00:02:28.120 --> 00:02:30.390
Let's select the APIs
to authorize.

00:02:30.390 --> 00:02:33.860
Scrolling down, we're going to
select the YouTube Analytics

00:02:33.860 --> 00:02:38.920
API, a read-only scope, and
the YouTube Data API v3.

00:02:46.890 --> 00:02:48.160
Now let's click Authorize
APIs.

00:02:51.600 --> 00:02:53.050
We'll be forwarded to
a page where we'll

00:02:53.050 --> 00:02:54.300
need to grant access.

00:02:56.730 --> 00:02:58.930
If we're in charge of multiple
channels, we'll first be

00:02:58.930 --> 00:03:00.850
presented with an
account picker.

00:03:00.850 --> 00:03:02.470
Let's click Accept
and continue.

00:03:06.030 --> 00:03:08.580
We now have an authorization
code, which we can use to

00:03:08.580 --> 00:03:12.430
exchange for a refresh token
and access token.

00:03:12.430 --> 00:03:15.300
Let's click Exchange
Authorization Code for Tokens.

00:03:19.450 --> 00:03:23.320
The OAuth 2.0 Playground will
populate the refresh token and

00:03:23.320 --> 00:03:25.720
access token fields after
making the API call.

00:03:28.590 --> 00:03:30.700
We can start using these
immediately.

00:03:30.700 --> 00:03:31.950
But the value we want
[? to save for our ?]

00:03:31.950 --> 00:03:35.490
scripts is in the refresh
token field.

00:03:35.490 --> 00:03:38.440
As we can see, the access
token will expire

00:03:38.440 --> 00:03:41.220
in about one hour.

00:03:41.220 --> 00:03:43.480
The official Google API clients
will all handle

00:03:43.480 --> 00:03:46.600
obtaining an access token for
us as long as we supply a

00:03:46.600 --> 00:03:50.670
client ID, client secrets,
and refresh token.

00:03:50.670 --> 00:03:53.480
And that's how we generate a
refresh token using the OAuth

00:03:53.480 --> 00:03:54.730
Playground.

