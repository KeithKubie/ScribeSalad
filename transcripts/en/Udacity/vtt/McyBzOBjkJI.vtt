WEBVTT
Kind: captions
Language: en

00:00:00.070 --> 00:00:04.550
A formal explanation of Virtualization
is given in an old paper by Povek and

00:00:04.550 --> 00:00:05.750
Goldberg from 1974.

00:00:05.750 --> 00:00:10.200
There is a link to that paper
in the instructor's notes.

00:00:10.200 --> 00:00:13.820
We'll go through the ideas that
are presented in that paper and

00:00:13.820 --> 00:00:17.110
we will explain how to
define Virtualization.

00:00:17.110 --> 00:00:21.790
The definition states that a virtual
machine is taken to be an efficient

00:00:21.790 --> 00:00:24.770
isolated duplicate of the real machine.

00:00:24.770 --> 00:00:29.500
Virtualization is enabled through
a virtual machine monitor, or VMM.

00:00:29.500 --> 00:00:33.750
This is the layer that enables
virtual machines to exist.

00:00:33.750 --> 00:00:35.030
As a piece of software,

00:00:35.030 --> 00:00:38.700
the virtual machine monitor has
three essential characteristics.

00:00:38.700 --> 00:00:41.540
The virtual machine monitor
provides an environment for

00:00:41.540 --> 00:00:45.900
programs that's essentially
identical with the original machine.

00:00:45.900 --> 00:00:48.370
As I said the capacity may differ,

00:00:48.370 --> 00:00:53.260
however it would be the same kind of CPU
that the virtual machine thinks it has.

00:00:53.260 --> 00:00:56.310
The same types of devices, etc.

00:00:56.310 --> 00:01:01.510
What this means is that as the, one of
the goals of the virtual machine monitor

00:01:01.510 --> 00:01:04.920
is that it must provide some fidelity

00:01:04.920 --> 00:01:08.790
that the representation of the hardware
that's visible to the, in the virtual

00:01:08.790 --> 00:01:14.230
machine matches the hardware that's
available on the physical platform.

00:01:14.230 --> 00:01:18.230
Second, programs that run in
this environment show at worst

00:01:18.230 --> 00:01:20.690
only minor decrease in speed.

00:01:20.690 --> 00:01:23.910
Now, clearly we have a situation
where the operating system and

00:01:23.910 --> 00:01:27.540
its processes in the virtual
machine are given only

00:01:27.540 --> 00:01:32.230
two CPUs as opposed to the four that
are available on the physical machine.

00:01:32.230 --> 00:01:36.510
This won't execute exactly at the same
level, it wouldn't be able to complete

00:01:36.510 --> 00:01:39.990
the programs as fast as
if they were in natively.

00:01:39.990 --> 00:01:45.090
However the goal of the virtual machine
monitor is that if the virtual machine

00:01:45.090 --> 00:01:50.530
were given the exact amount of
resources as the physical machine,

00:01:50.530 --> 00:01:52.030
then the operating system, and

00:01:52.030 --> 00:01:57.140
the processes, would be able
to perform at the same speeds.

00:01:57.140 --> 00:02:01.280
So another goal of the virtual machine
monitor, is to deliver performance

00:02:01.280 --> 00:02:05.870
to the VMs that's as close to
the need of performance as possible.

00:02:05.870 --> 00:02:10.360
And last, the VMM is in complete
control of the system resources.

00:02:10.360 --> 00:02:13.890
This means that the virtual machine
monitor has full control to make

00:02:13.890 --> 00:02:18.820
decisions, who accesses which
resources and when, and

00:02:18.820 --> 00:02:23.830
it can be relied upon to ensure
safety and isolation among the VMs.

00:02:23.830 --> 00:02:28.600
This doesn't mean that every single
hardware access has to be inspected

00:02:28.600 --> 00:02:30.080
by the VMM layer.

00:02:30.080 --> 00:02:35.020
Instead, what this means is that
the virtual machine monitor determines

00:02:35.020 --> 00:02:39.080
if a particular VM is to be
given direct hardware access.

00:02:39.080 --> 00:02:44.040
And also that, once those decisions
are put in place, a virtual machine can

00:02:44.040 --> 00:02:49.630
not just change those policies, and
potentially hurt other collocated VMs.

00:02:49.630 --> 00:02:52.842
So one of the goals for
the virtual machine monitor is

00:02:52.842 --> 00:02:56.577
that it has to provide for
safety and isolation guarantees.

