WEBVTT
Kind: captions
Language: en

00:00:00.310 --> 00:00:03.270
Now I did say that we need to look at what happens at the edges of the image.

00:00:03.270 --> 00:00:05.340
So let's look at that specific example.

00:00:05.340 --> 00:00:09.220
Again, the same image except that this time around I've replaced the zeros with

00:00:09.220 --> 00:00:11.180
some numeric values.

00:00:11.180 --> 00:00:13.610
Again just to help us see what would happen.

00:00:13.610 --> 00:00:16.030
Again, my output.

00:00:16.030 --> 00:00:17.450
And I've filled it out again,

00:00:17.450 --> 00:00:19.680
the middle part as we've done in the previous frame.

00:00:19.680 --> 00:00:23.590
So now we have to start thinking about how do we fill the edge cases out?

00:00:23.590 --> 00:00:29.020
Again, doing my filtering using a three by three, which we will rub over.

00:00:29.020 --> 00:00:29.740
And we did that.

00:00:29.740 --> 00:00:32.369
Now, of course I still don't have any values here.

00:00:32.369 --> 00:00:36.340
To achieve that what I need to do is basically pad this image with

00:00:36.340 --> 00:00:37.248
additional information.

00:00:37.248 --> 00:00:40.590
So to achieve that basically what I would do in this instance, as long as I

00:00:40.590 --> 00:00:45.360
am actually looking at a three by three neighborhood, I need to add one

00:00:45.360 --> 00:00:50.500
neighborhood pixel, or one column or one row, and make this image bigger by one.

00:00:50.500 --> 00:00:55.160
Of course, if my kernel or my size of the filter that I'm looking at is bigger

00:00:55.160 --> 00:00:59.130
that 3, let's say five by five, then I will have to add three different rows and

00:00:59.130 --> 00:01:02.150
columns to be able to give it more information so I can fill this out.

00:01:03.250 --> 00:01:06.990
So once I put this up, I need to also fill it out with values.

00:01:06.990 --> 00:01:11.690
One thing we can do is basically take these values and copy them over.

00:01:11.690 --> 00:01:15.770
So, basically, just copying them over actually gives us more information here.

00:01:15.770 --> 00:01:19.810
This one can also be then copied over, or some sort of simple numerical method,

00:01:19.810 --> 00:01:24.170
like an average of this could be used to do replace this value here.

00:01:24.170 --> 00:01:27.250
So now I've actually basically created a new image that's a little

00:01:27.250 --> 00:01:29.740
bigger than my original image.

00:01:29.740 --> 00:01:31.830
Now I just mirroring and copying this over.

00:01:31.830 --> 00:01:32.640
And once I do this,

00:01:32.640 --> 00:01:36.730
I can now run the process which allows me to fill in values here.

00:01:36.730 --> 00:01:40.830
So now basically suggests is that I can take this three by three and

00:01:40.830 --> 00:01:44.690
when I apply it here, the value would be filling out here.

00:01:44.690 --> 00:01:49.370
And similarly, this way all of this, this, and this would also be filled out.

00:01:49.370 --> 00:01:52.460
Of course, there will be degradation of information.

00:01:52.460 --> 00:01:56.190
Most of the pixel values here would not, of course, be completely correct.

00:01:56.190 --> 00:01:57.570
Because we're kind of synthet,

00:01:57.570 --> 00:02:00.890
synthesizing a buffer to be able to do this type of filtering.

00:02:00.890 --> 00:02:03.850
There are many strategies usually available how we

00:02:03.850 --> 00:02:06.010
can actually add this information.

00:02:06.010 --> 00:02:10.280
So some of the options of doing this is we can wrap the information around,

00:02:10.280 --> 00:02:14.100
as we kind of did, or we can just copy it from one to the other.

00:02:14.100 --> 00:02:17.770
Or we can reflect information across making this be the axes and

00:02:17.770 --> 00:02:19.250
take these values and move them around.

00:02:19.250 --> 00:02:21.380
Again many different methods can be used.

00:02:21.380 --> 00:02:24.420
What we're really trying to do is figure out how to increase the edge size so

00:02:24.420 --> 00:02:29.135
we can basically do computation of this and create a newer image from it.

00:02:29.135 --> 00:02:33.180
Of course there is significant error accumulated in doing this because

00:02:33.180 --> 00:02:36.520
the edges will start loosing information as you can start making bigger and

00:02:36.520 --> 00:02:37.920
bigger filter kernels.

00:02:37.920 --> 00:02:41.150
Of course remember again if I were to do five by five what will have to

00:02:41.150 --> 00:02:44.080
add two layer, two rows and two columns, and

00:02:44.080 --> 00:02:46.020
make a bigger image to be able to then fill in values.

00:02:46.020 --> 00:02:50.460
We will see examples of that as we do start doing image processing.

00:02:50.460 --> 00:02:53.140
That some of the information at the edges does start getting to

00:02:53.140 --> 00:02:54.970
be suspicious and lost.

