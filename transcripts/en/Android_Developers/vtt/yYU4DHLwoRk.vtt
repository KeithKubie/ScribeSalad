WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.374
RICH HYNDMAN:
Android Marshmallow

00:00:01.374 --> 00:00:02.780
is coming to devices soon.

00:00:02.780 --> 00:00:05.060
And just like every
new Android release,

00:00:05.060 --> 00:00:07.520
it's important to make sure
that your app is up to date

00:00:07.520 --> 00:00:10.739
and ready to be installed as
soon as the upgrade rolls out.

00:00:10.739 --> 00:00:12.280
My name is Rich
Hyndman, and I'm here

00:00:12.280 --> 00:00:15.270
with a quick update to using the
developer preview to get ready

00:00:15.270 --> 00:00:16.650
for launch.

00:00:16.650 --> 00:00:17.660
Let's jump right in.

00:00:17.660 --> 00:00:19.920
The Android M
developer preview three

00:00:19.920 --> 00:00:22.750
consists of the
final Android 6 SDK.

00:00:22.750 --> 00:00:26.200
It's got documentation, sample
code, and near-final emulator

00:00:26.200 --> 00:00:27.930
and device images.

00:00:27.930 --> 00:00:30.330
We've incremented the
API level to 23 now,

00:00:30.330 --> 00:00:32.430
so you can upload your
Marshmallow targeted apps

00:00:32.430 --> 00:00:35.995
to the Play Store and make use
of the alpha and beta channels.

00:00:35.995 --> 00:00:38.120
If you've been following
along through dev previews

00:00:38.120 --> 00:00:41.010
one and two, then this
update is pretty incremental.

00:00:41.010 --> 00:00:44.070
We've enhanced the permissions,
user interface and behavior

00:00:44.070 --> 00:00:47.200
and also updated the fingerprint
API to give a better enrollment

00:00:47.200 --> 00:00:50.725
experience, enumeration support,
and improved error reporting.

00:00:50.725 --> 00:00:52.100
You can check the
API differences

00:00:52.100 --> 00:00:54.259
doc for full details.

00:00:54.259 --> 00:00:56.550
If you've not already flashed
a device to the developer

00:00:56.550 --> 00:00:58.320
preview, then it's
worth pointing out

00:00:58.320 --> 00:01:01.970
that you should grab
the latest SDK first.

00:01:01.970 --> 00:01:03.530
Open up Android Studio.

00:01:03.530 --> 00:01:05.980
There's no need for preview
or Canary channels this time

00:01:05.980 --> 00:01:09.630
as we're on the final SDK so
head straight into your SDK

00:01:09.630 --> 00:01:10.520
manager.

00:01:10.520 --> 00:01:13.770
You have access to the final
Android 6 APIs and the latest

00:01:13.770 --> 00:01:16.825
build tools so you
can target API 23.

00:01:16.825 --> 00:01:19.200
Whilst you're there, you should
update to the new Android

00:01:19.200 --> 00:01:20.490
support library as well.

00:01:20.490 --> 00:01:22.700
It contains a number of
new support libraries,

00:01:22.700 --> 00:01:25.850
including custom tabs,
percentage-based measurements,

00:01:25.850 --> 00:01:28.280
recommendation, and preferences.

00:01:28.280 --> 00:01:29.445
And you're all ready to go.

00:01:29.445 --> 00:01:30.820
If you're starting
a new project,

00:01:30.820 --> 00:01:33.850
you can choose target
SDK API 23 and ignore

00:01:33.850 --> 00:01:35.930
the fact it says Android 5.x.

00:01:35.930 --> 00:01:38.390
We'll fix that before
the actual release.

00:01:38.390 --> 00:01:40.860
If you're updating an existing
developer preview project,

00:01:40.860 --> 00:01:42.943
you're now switching your
build from using Android

00:01:42.943 --> 00:01:46.440
MNC as your SDK version to 23.

00:01:46.440 --> 00:01:48.060
You can also head
to the AVD manager

00:01:48.060 --> 00:01:49.810
if you want to set
up an emulator.

00:01:49.810 --> 00:01:53.530
Select a device of your choice
and use the API 23 x86 images

00:01:53.530 --> 00:01:55.160
for best performance.

00:01:55.160 --> 00:01:57.630
OK, back to the device images.

00:01:57.630 --> 00:02:00.640
So ensure your data's backed
up and follow the steps

00:02:00.640 --> 00:02:01.732
in the preview guide.

00:02:01.732 --> 00:02:03.440
If your Bootloader is
locked, then you'll

00:02:03.440 --> 00:02:04.500
have to unlock it first.

00:02:04.500 --> 00:02:06.830
So ensure, if you're on
a Nexus 6 or a Nexus 9,

00:02:06.830 --> 00:02:10.470
that OEM unlocking is enabled
in the developer options.

00:02:10.470 --> 00:02:13.220
Then ADB to reboot
into Bootloader,

00:02:13.220 --> 00:02:15.390
run fastboot OEM
Unlock, which is also

00:02:15.390 --> 00:02:17.037
going to wipe your data.

00:02:17.037 --> 00:02:18.870
Then you're going to
go to the system images

00:02:18.870 --> 00:02:20.530
and execute the
flash-all script.

00:02:20.530 --> 00:02:22.890
It's going to update your
device's Bootloader, baseband,

00:02:22.890 --> 00:02:24.640
firmware, and OS.

00:02:24.640 --> 00:02:26.450
Then to be secure,
it's recommended

00:02:26.450 --> 00:02:29.680
to lock your Bootloader
again with fastboot OEM lock.

00:02:29.680 --> 00:02:31.040
It should be smooth sailing.

00:02:31.040 --> 00:02:33.790
And if you do hit a
missing system.image error,

00:02:33.790 --> 00:02:37.450
then you're probably not
using the latest SDK tools.

00:02:37.450 --> 00:02:40.940
Now you have an Android M
device for testing and a preview

00:02:40.940 --> 00:02:42.260
emulator.

00:02:42.260 --> 00:02:45.410
As always with new releases, we
have some changes in behavior

00:02:45.410 --> 00:02:46.810
that you'll need to test out.

00:02:46.810 --> 00:02:48.720
You can find them all
on the Behavior Changes

00:02:48.720 --> 00:02:50.740
page on the preview site.

00:02:50.740 --> 00:02:54.630
First up, a deprecated
API that's been removed.

00:02:54.630 --> 00:02:56.900
If your app or any of
the libraries you use

00:02:56.900 --> 00:02:59.467
rely on the Apache
HTTP client, you're

00:02:59.467 --> 00:03:01.550
going to need to make a
small update to include it

00:03:01.550 --> 00:03:04.820
in your build and declare it
as a compile time dependency

00:03:04.820 --> 00:03:06.820
in your build.gradle file.

00:03:06.820 --> 00:03:08.800
If your app targets
Android 2.3 or higher,

00:03:08.800 --> 00:03:10.340
I would highly
recommend switching

00:03:10.340 --> 00:03:14.790
to the more efficient HTTP
URL connection class instead.

00:03:14.790 --> 00:03:16.430
Next up, we have Doze.

00:03:16.430 --> 00:03:19.530
If a user leaves a device
unplugged and stationary

00:03:19.530 --> 00:03:21.690
for a short period of
time with the screen off,

00:03:21.690 --> 00:03:23.690
the device is going
to enter Doze mode.

00:03:23.690 --> 00:03:25.070
It's going to try
and stay asleep

00:03:25.070 --> 00:03:27.310
until the device is disturbed.

00:03:27.310 --> 00:03:29.510
Restrictions will apply
to your app in this mode.

00:03:29.510 --> 00:03:32.130
Wake locks are ignored,
sync adapters can't sync,

00:03:32.130 --> 00:03:36.090
scheduled alarms are deferred,
and network access is disabled.

00:03:36.090 --> 00:03:38.640
You can enable some of these,
so check the documentation

00:03:38.640 --> 00:03:41.860
on power-saving optimizations
for more details.

00:03:41.860 --> 00:03:45.550
To test Doze mode, we
have ADB commands here.

00:03:45.550 --> 00:03:49.230
There's also App Standby mode,
which can detect and affect

00:03:49.230 --> 00:03:50.510
inactive apps.

00:03:50.510 --> 00:03:52.420
So check that out as well.

00:03:52.420 --> 00:03:54.740
Excitingly, runtime
permissions are here.

00:03:54.740 --> 00:03:57.261
They provide less friction
on install and automatic app

00:03:57.261 --> 00:03:57.760
updates.

00:03:57.760 --> 00:04:00.410
But you can no longer assume
that just because your app is

00:04:00.410 --> 00:04:03.670
installed all its stated
permissions have been granted.

00:04:03.670 --> 00:04:05.170
Permissions are
granted at runtime,

00:04:05.170 --> 00:04:09.360
and users can revoke permissions
on a per-app basis at any time,

00:04:09.360 --> 00:04:12.680
even for legacy apps that
aren't targeting Android M.

00:04:12.680 --> 00:04:15.670
For testing, we have
more all-new ADB commands

00:04:15.670 --> 00:04:17.920
for parameters for granting
permissions, revoking

00:04:17.920 --> 00:04:19.570
permissions, installing
apps with all

00:04:19.570 --> 00:04:20.774
the permissions granted.

00:04:20.774 --> 00:04:22.690
Check out the Permissions
Guide on the preview

00:04:22.690 --> 00:04:24.620
site for details.

00:04:24.620 --> 00:04:27.280
Always check that you have a
permission before trying to use

00:04:27.280 --> 00:04:30.431
it and request it if you don't.

00:04:30.431 --> 00:04:32.700
If there's a set of permissions
that your app needs,

00:04:32.700 --> 00:04:34.580
like camera access
for a camera app,

00:04:34.580 --> 00:04:38.530
it can be worth requesting
them in a warm welcome upfront.

00:04:38.530 --> 00:04:40.790
Next, Android Auto Backup.

00:04:40.790 --> 00:04:43.710
It's a new service designed to
simplify building a robust data

00:04:43.710 --> 00:04:47.490
backup service for developers
and improve the lives of users.

00:04:47.490 --> 00:04:50.610
Up to 25 megabytes of
data is backed up per app.

00:04:50.610 --> 00:04:53.170
Watch Matthew's video
for full details.

00:04:53.170 --> 00:04:55.244
If your project
targets them, backup

00:04:55.244 --> 00:04:56.910
will be automatically
enabled, and there

00:04:56.910 --> 00:04:59.170
were a couple of things
you should be aware of.

00:04:59.170 --> 00:05:01.210
If you have any data you
don't want backed up,

00:05:01.210 --> 00:05:03.610
like device-specific
or encrypted data,

00:05:03.610 --> 00:05:05.410
then the easiest
thing to do is move it

00:05:05.410 --> 00:05:08.230
into the Get No Backup
Files directory.

00:05:08.230 --> 00:05:10.680
You can also specify an
inclusive or exclusive

00:05:10.680 --> 00:05:14.070
backup scheme or
opt out altogether.

00:05:14.070 --> 00:05:17.020
For testing, there are new ADB
Shell backup manager commands.

00:05:17.020 --> 00:05:19.390
And as I say in the
M preview build,

00:05:19.390 --> 00:05:22.300
Auto Backup is
enabled for all apps.

00:05:22.300 --> 00:05:24.100
For the M release,
we will only do it

00:05:24.100 --> 00:05:26.980
for apps that are
targeted M or higher.

00:05:26.980 --> 00:05:28.910
It's also worth mentioning
that for testing we

00:05:28.910 --> 00:05:31.860
have new fingerprint APIs
and the new ADB Finger Touch

00:05:31.860 --> 00:05:35.366
command to go along for
simulating fingerprint input.

00:05:35.366 --> 00:05:37.240
Check the preview site
and [? Maya's ?] video

00:05:37.240 --> 00:05:38.780
for full details.

00:05:38.780 --> 00:05:40.535
So, we're on preview three.

00:05:40.535 --> 00:05:42.760
We're on the home straight
to the final release.

00:05:42.760 --> 00:05:45.460
So please ensure
your apps are ready.

00:05:45.460 --> 00:05:47.160
Check out the preview
for other features

00:05:47.160 --> 00:05:49.950
like app standby, adoptable
storage, data binding, text

00:05:49.950 --> 00:05:52.810
selection, and the very
powerful app linking.

00:05:52.810 --> 00:05:55.750
Test now while you have time,
and you can give us feedback

00:05:55.750 --> 00:05:59.416
in the Android M developer
community on Google+.

00:05:59.416 --> 00:06:02.020
So that's Android Marshmallow,
something harmless

00:06:02.020 --> 00:06:05.270
and lovable that could never
possibly run amok in New York

00:06:05.270 --> 00:06:07.360
and destroy us.

