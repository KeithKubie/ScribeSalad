WEBVTT
Kind: captions
Language: en

00:00:00.080 --> 00:00:03.200
Okay so
we already talked about system calls.

00:00:03.200 --> 00:00:04.200
In fact,

00:00:04.200 --> 00:00:09.450
I said think about the cost of a system
call compared to a regular call.

00:00:09.450 --> 00:00:15.460
So system calls allow you to go from
user mode to OS or the system mode.

00:00:15.460 --> 00:00:18.700
So let's talk a little bit
more about system calls.

00:00:18.700 --> 00:00:23.600
First of all, they're used to transfer
control between user and system code.

00:00:23.600 --> 00:00:27.750
Or execution that must happen
in user mode and system mode.

00:00:27.750 --> 00:00:32.320
The interesting thing about these calls
is that they cannot be arbitrary.

00:00:32.320 --> 00:00:38.110
These are a set of calls that user
level code is allowed to make.

00:00:38.110 --> 00:00:41.990
Okay, this is defined by the application
programming interface, or

00:00:41.990 --> 00:00:44.910
the API that your
operating system provides.

00:00:44.910 --> 00:00:48.680
So, you have these calls, and
these calls have to come into

00:00:48.680 --> 00:00:51.700
the operating system in
a control fashion, okay.

00:00:51.700 --> 00:00:54.280
So we said these calls
are different than regular calls.

00:00:54.280 --> 00:00:57.870
They have to come through what
used to be called call gates,

00:00:57.870 --> 00:01:02.710
which is special ways in which
you can enter from user to,

00:01:02.710 --> 00:01:05.770
it's a defined way,
transition from user to system level.

00:01:05.770 --> 00:01:08.170
You come through these call gates.

00:01:08.170 --> 00:01:12.260
And what happens as a result of that is,
well we know that it's a call,

00:01:12.260 --> 00:01:14.010
so we going to return at some point.

00:01:14.010 --> 00:01:16.620
So we have to keep track of
where we going to return and

00:01:16.620 --> 00:01:19.090
the user code once
the system call completes.

00:01:19.090 --> 00:01:23.630
But the processor execution mode
has to change as a result of that.

00:01:23.630 --> 00:01:27.730
We went from user mode to system mode so
the privilege ring or

00:01:27.730 --> 00:01:29.250
the mode is going to change.

00:01:29.250 --> 00:01:32.210
And we actually going to be able to,
we'll have to change some memory

00:01:32.210 --> 00:01:35.430
mappings, data structures that keep
track of those, because we going to

00:01:35.430 --> 00:01:38.430
be able to access memory now
that we couldn't access before.

00:01:38.430 --> 00:01:40.670
So some registers have to be saved.

00:01:40.670 --> 00:01:42.360
Others have to be loaded.

00:01:42.360 --> 00:01:43.510
And things like that.

00:01:43.510 --> 00:01:45.090
So all that work has to be done.

00:01:45.090 --> 00:01:48.290
So now we are executing in
a different protection domain.

00:01:48.290 --> 00:01:52.020
In fact, this used to happen through,
sort of an interrupt or

00:01:52.020 --> 00:01:55.360
a trap into the system from user mode.

00:01:55.360 --> 00:01:59.470
But in x86,
we actually have explicit instructions.

00:01:59.470 --> 00:02:02.660
This is different from
your regular call return.

00:02:02.660 --> 00:02:05.180
These are execute a system call.

00:02:05.180 --> 00:02:08.770
That Sysenter enter the system or

00:02:08.770 --> 00:02:12.520
the operating system and
when you're done you return by doing

00:02:12.520 --> 00:02:16.170
another special instruction called
sysexit so there are these instruction

00:02:16.170 --> 00:02:20.930
that help you implement this system
calls that we're talking about.

00:02:20.930 --> 00:02:24.860
Keep in mind that they are more
expensive because now we're using,

00:02:24.860 --> 00:02:27.790
we're doing this work
that we didn't have to.

00:02:27.790 --> 00:02:31.940
We have to check what kind of call it
is, arguments that are being passed.

00:02:31.940 --> 00:02:34.330
Same information when we come back.

00:02:34.330 --> 00:02:38.460
We change memory mapping so we can
access things that we couldn't before,

00:02:38.460 --> 00:02:41.960
use the special instructions rather
than the regular ones and so on.

00:02:41.960 --> 00:02:44.830
So that's what makes it costlier or
more expensive.

