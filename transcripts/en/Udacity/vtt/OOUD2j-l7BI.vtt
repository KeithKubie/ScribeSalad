WEBVTT
Kind: captions
Language: en

00:00:08.000 --> 00:00:11.000
Talked about tests. &gt;&gt;Yeah. Hello?

00:00:15.000 --> 00:00:18.000
Hi. Can you try again? We couldn't quite hear.

00:00:26.000 --> 00:00:29.000
You may want to try typing your question.

00:00:42.000 --> 00:00:44.000
Let's see.

00:00:56.000 --> 00:01:01.000
I do see that a lot. What kind of math are we talking about when we talk cryptography.

00:01:01.000 --> 00:01:06.000
Oh, so what are the actual math background is expected for the cryptography class.

00:01:06.000 --> 00:01:08.000
Or also what kind of math is related to computer science.

00:01:08.000 --> 00:01:10.000
Okay, so two different questions.

00:01:10.000 --> 00:01:16.000
So in general for computer science most of the math that we use is discrete math,

00:01:16.000 --> 00:01:24.000
and what "discrete" means is values that are in a well-defined set so the integers are discrete.

00:01:24.000 --> 00:01:27.000
There's an infinite number-- &gt;&gt;Countable. There's an infinite number. 

00:01:27.000 --> 00:01:31.000
There's a countable number as opposed to the real numbers where 

00:01:31.000 --> 00:01:34.000
there's an uncountable number of real numbers.

00:01:34.000 --> 00:01:39.000
And so discrete things are things that are countable. You can count how many there are.

00:01:39.000 --> 00:01:44.000
Continuous math like calculus comes up in some areas of computer science

00:01:44.000 --> 00:01:46.000
but not nearly as often as discrete math.

00:01:46.000 --> 00:01:49.000
The reason discrete math comes up is because in computers

00:01:49.000 --> 00:01:53.000
 we're representing things using the digital abstraction.

00:01:53.000 --> 00:01:58.000
We're representing things at the level in the computer as 0s or 1s where 

00:01:58.000 --> 00:02:03.000
although there is physical things that are analog that are storing the values,

00:02:03.000 --> 00:02:08.000
we're doing all the processing on them as discrete values.

00:02:08.000 --> 00:02:12.000
Most of the math that is most fundamental to computer science is discrete math.

00:02:12.000 --> 00:02:14.000
Logic is a big part of that. 

00:02:14.000 --> 00:02:19.000
You've been doing logic. You've been using If and predicate tests.

00:02:19.000 --> 00:02:21.000
You've really been doing logic. 

00:02:21.000 --> 00:02:25.000
There's a lot of formalism behind the logic that we haven't covered in CS 101,

00:02:25.000 --> 00:02:30.000
and we will have a discrete math course that will be one of the courses that starts in June.

00:02:30.000 --> 00:02:33.000
The other kinds of math that are important--

00:02:33.000 --> 00:02:37.000
for cryptography we use probability a lot.

00:02:37.000 --> 00:02:42.000
That's probably the most important background to have for the cryptography course.

00:02:42.000 --> 00:02:49.000
Number theory is used a lot in cryptography, so things like modular arithmetic is used a lot.

00:02:49.000 --> 00:02:56.000
That's used in all of computing but becomes especially important in cryptography. What else?

00:02:56.000 --> 00:02:58.000
Sebastian's class uses a lot of linear algebra.

00:02:58.000 --> 00:03:05.000
Yes. Linear algebra is definitely the--Sebastian's class, robotics, AI, graphics, all use linear algebra a lot.

00:03:05.000 --> 00:03:10.000
Cryptography does use linear algebra but not the cryptography 

00:03:10.000 --> 00:03:13.000
that I'm going to focus on in the course that I'm going to teach,

00:03:13.000 --> 00:03:16.000
but there are parts of cryptography that are based heavily on using lattices,

00:03:16.000 --> 00:03:20.000
and that's all building on linear algebra.

00:03:29.000 --> 00:03:31.000
We did talk about homework 2.5 earlier.

00:03:31.000 --> 00:03:34.000
Ah, the Collatz conjecture question.

00:03:34.000 --> 00:03:36.000
When we post this video on the website--

00:03:36.000 --> 00:03:41.000
I'm surprised we haven't had more questions about that yet, but hopefully people saw  the discussion earlier.

00:03:44.000 --> 00:03:46.000
We'll post it on the website. &gt;&gt;Yes.

00:03:50.000 --> 00:03:52.000
Why numbers are immutable?

00:03:52.000 --> 00:03:58.000
What was that? Oh, the question where you assign x plus 1 to x.

00:03:58.000 --> 00:04:00.000
Why does that create a new number?

00:04:00.000 --> 00:04:03.000
Does that create a new number?

00:04:03.000 --> 00:04:06.000
It's a good question to think about.

00:04:06.000 --> 00:04:12.000
When we think about what programs mean, we have an abstract model saying, 

00:04:12.000 --> 00:04:16.000
we're not modifying a number. We're creating a new number.

00:04:16.000 --> 00:04:19.000
We're not actually creating something new to build that number.

00:04:19.000 --> 00:04:21.000
We just need to store that number.

00:04:21.000 --> 00:04:27.000
So often the way we think about programs executing as  model doesn't correspond

00:04:27.000 --> 00:04:31.000
very closely to actual the actual resources that are used to execute the program.

00:04:31.000 --> 00:04:35.000
Another example, depending on how far you've seen the lectures, 

00:04:35.000 --> 00:04:39.000
the range takes in two numbers.

00:04:39.000 --> 00:04:43.000
We think of that as producing a list between the two numbers, and that's what it does,

00:04:43.000 --> 00:04:46.000
but when it's used in a for loop, the Python interpreter is much smarter 

00:04:46.000 --> 00:04:48.000
and doesn't actually have to build that list.

00:04:48.000 --> 00:04:54.000
That's why it's faster to use the for with the range than to use the while loop with adding 1.

00:04:54.000 --> 00:04:59.000
These are things where it's helpful to have a simple model that shows how the program executes

00:04:59.000 --> 00:05:02.000
and is correct in terms of the semantics and the meaning of the program.

00:05:02.000 --> 00:05:05.000
In terms of what's actually implemented, there are lots of ways

00:05:05.000 --> 00:05:10.000
 that things might be implemented that don't actually involve doing everything that our model says.

00:05:23.000 --> 00:05:25.000
Accessing the Python interpretor.

00:05:25.000 --> 00:05:31.000
Okay. The question is being able to access the interpreter at any time.

00:05:31.000 --> 00:05:35.000
We hope the sight will soon have a button that makes it easy

00:05:35.000 --> 00:05:39.000
 to pop up the interpreter and try things on your own.

00:05:39.000 --> 00:05:44.000
There are other ways to run Python, and depending on what kind of machine you have,

00:05:44.000 --> 00:05:46.000
that could be quite easy.

00:05:46.000 --> 00:05:52.000
If you have Mac and open a Mac shell and type "python," you get a Python interpreter.

00:05:52.000 --> 00:05:54.000
You can try things yourself that way.

00:05:54.000 --> 00:05:59.000
If you don't have a Mac, you can go to Python.org and download the Python distribution,

00:05:59.000 --> 00:06:04.000
and that includes a way to run Python that works on almost all platforms.

00:06:04.000 --> 00:06:10.000
There are lots of ways to run Python separately from the way we run it in class.

00:06:10.000 --> 00:06:15.000
We think have the embedded interpreter that you can run right in the browser is helpful,

00:06:15.000 --> 00:06:18.000
and you don't need to install any software to do the class.

00:06:18.000 --> 00:06:20.000
We hope to make it easier to access that, 

00:06:20.000 --> 00:06:24.000
but for now it's only when you have a quiz or homework problem that uses it.

00:06:24.000 --> 00:06:28.000
The next question is "am I your student?"

00:06:28.000 --> 00:06:31.000
Do I answer that or do you answer it?

00:06:31.000 --> 00:06:37.000
I don't know. Well, I'm not taking the Udacity course right now. That's true.

00:06:37.000 --> 00:06:44.000
I am a student in Dave's security research group back at the University of Virginia.

00:06:44.000 --> 00:06:50.000
Peter was a TA for me back at the University of Virginia and a student in my research group.

00:06:50.000 --> 00:06:56.000
He has done a lot of very exciting research on security, which is what my group does work on.

00:06:56.000 --> 00:07:00.000
Since he managed to finish all his course requirements a semester early

00:07:00.000 --> 00:07:06.000
is able to come out here to be a TA for this class, which is much more than a full time job.

00:07:06.000 --> 00:07:08.000
Yes. This is true.

00:07:08.000 --> 00:07:13.000
I guess he's still sort of a student. &gt;&gt;Well, it's 9 o'clock and we're still here.

00:07:13.000 --> 00:07:18.000
Yes. &gt;&gt;It's kind of a 9-to-5-to-9 job.

00:07:18.000 --> 00:07:21.000
They do say like once a student, always a student.

00:07:21.000 --> 00:07:24.000
It's all about the mindset.

00:07:24.000 --> 00:07:28.000
We talked about the Udacity name earlier.

00:07:28.000 --> 00:07:30.000
I think we should take one last question from a live person.

00:07:30.000 --> 00:07:32.000
Does anyone have a last question?

00:07:32.000 --> 00:07:36.000
If anyone has a last question-- &gt;&gt;My battery is about to die anyway.

00:07:36.000 --> 00:07:38.000
I've got one question. &gt;&gt;Great. &gt;&gt;Sure. Go for it.

00:07:38.000 --> 00:07:42.000
Do you plan on offering graduate level classes 

00:07:42.000 --> 00:07:48.000
or classes that would involve research and more interaction with students?

00:07:48.000 --> 00:07:50.000
We definitely plan to offer more advanced courses, 

00:07:50.000 --> 00:07:56.000
and the course Sebastian is teaching now is fairly graduate level, I think.

00:07:56.000 --> 00:08:03.000
Yeah, it's pretty hard. &gt;&gt;I think it's definitely much beyond what most undergraduate courses would be.

00:08:03.000 --> 00:08:08.000
The planned courses that we'll have in June are probably

00:08:08.000 --> 00:08:13.000
the 200 level courses and then some more advanced undergraduate-level courses.

00:08:13.000 --> 00:08:19.000
We'll definitely have a mix of more introductory and more advanced courses as we go forward.

00:08:19.000 --> 00:08:26.000
A lot of the experience of doing a PhD is really an individual focused on a research problem,

00:08:26.000 --> 00:08:28.000
working very closely with a professor. &gt;&gt;For years.

00:08:28.000 --> 00:08:32.000
That's something that involves a lot of one-on-one interaction 

00:08:32.000 --> 00:08:36.000
and working to define a problem to work on. It's a very unique experience.

00:08:36.000 --> 00:08:42.000
It's not something that you can scale or offer without having many in-person meetings.

00:08:42.000 --> 00:08:49.000
Really to do a PhD is a very different kind of teaching than the classes would be.

00:08:49.000 --> 00:08:53.000
But we think we can definitely offer and do plan to offer high-level graduate courses

00:08:53.000 --> 00:08:57.000
that will probably be a little bit later before we have many graduate courses,

00:08:57.000 --> 00:09:02.000
but we will have them.

00:09:02.000 --> 00:09:05.000
Well, thanks everyone for joining the Hangout.

00:09:05.000 --> 00:09:10.000
This was an experiment it was good, more or less. We had some glitches getting started.

00:09:10.000 --> 00:09:14.000
We realize the people are in different timezones, so if we do this again,

00:09:14.000 --> 00:09:18.000
we'll schedule it at a time that more convenient for Africa and Europe,

00:09:18.000 --> 00:09:21.000
and we'll move the time around to work well for different students.

00:09:21.000 --> 00:09:24.000
But thanks everyone who joined us, and thanks for the questions.

00:09:24.000 --> 00:09:29.000
And we'll post them on the website if you came in late and want to see them.

00:09:29.000 --> 00:09:32.000
Okay. Good night. Thank you.

