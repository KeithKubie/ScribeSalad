WEBVTT
Kind: captions
Language: en

00:00:09.310 --> 00:00:11.930
Hello, and welcome to this
episode of Google Developers

00:00:11.930 --> 00:00:13.240
Live.

00:00:13.240 --> 00:00:16.870
I'm Sarah Maddox from the Google
Maps Developer Relations team,

00:00:16.870 --> 00:00:18.830
and I'm going to show
you how to use a map

00:00:18.830 --> 00:00:22.670
padding with the Google
Maps Android API.

00:00:22.670 --> 00:00:25.550
Let's say you have an
application that has a map

00:00:25.550 --> 00:00:27.940
and you want to add
a sidebar to the map,

00:00:27.940 --> 00:00:32.790
but you don't want to hide the
map UI controls or the Google

00:00:32.790 --> 00:00:34.300
logo.

00:00:34.300 --> 00:00:35.770
Let's see what
happens if you add

00:00:35.770 --> 00:00:41.200
a sidebar without
adding map padding.

00:00:41.200 --> 00:00:45.060
This little demo app has
a sidebar on the right.

00:00:45.060 --> 00:00:49.770
And as you can see the
find my location control

00:00:49.770 --> 00:00:52.890
is at the top right, but
it's obscured by the sidebar.

00:00:52.890 --> 00:00:55.020
And similarly the
map zoom controls

00:00:55.020 --> 00:00:57.746
are at the bottom right, and
they're completely hidden.

00:00:57.746 --> 00:00:59.370
So what I've done
with this application

00:00:59.370 --> 00:01:01.590
is add a button called padded.

00:01:01.590 --> 00:01:03.690
And if I touch
the padded button,

00:01:03.690 --> 00:01:06.540
the application
calls a method which

00:01:06.540 --> 00:01:10.860
adds 30 pixels of map padding on
the right hand side of the map.

00:01:10.860 --> 00:01:13.500
So you can see that the
UI controls are now nicely

00:01:13.500 --> 00:01:16.450
displayed slightly to
the left of my sidebar.

00:01:16.450 --> 00:01:20.050
The map still takes
up the entire view

00:01:20.050 --> 00:01:24.190
but the user controls
and the gestures

00:01:24.190 --> 00:01:26.450
behave as if they're
only using up

00:01:26.450 --> 00:01:28.720
the smaller, visible
portion of the map.

00:01:28.720 --> 00:01:32.050
So I'm going to tap the
find my location control.

00:01:34.920 --> 00:01:38.030
And you can see that
the little blue location

00:01:38.030 --> 00:01:41.030
indicator is nicely positioned
in the center of the map.

00:01:41.030 --> 00:01:43.680
It's taken map
padding into account.

00:01:43.680 --> 00:01:46.020
Now if I touch the
normal button-- which

00:01:46.020 --> 00:01:48.782
removes map padding from
my map-- and then touch the

00:01:48.782 --> 00:01:51.467
find my location
button again, you'll

00:01:51.467 --> 00:01:53.550
see that the location
indicator has moved slightly

00:01:53.550 --> 00:01:55.880
to the right, and it
seems to be off center.

00:01:55.880 --> 00:01:59.145
And that's because it's taking
the whole map into account

00:01:59.145 --> 00:02:02.010
instead of just the
visible portion.

00:02:02.010 --> 00:02:05.130
OK, I'm going to touch
Sydney and position

00:02:05.130 --> 00:02:06.750
the center of the
math in Australia

00:02:06.750 --> 00:02:09.021
so that there's a nice
lot of blue sea around.

00:02:09.021 --> 00:02:10.979
And that means that you
can see the Google logo

00:02:10.979 --> 00:02:13.230
at the bottom left
of the screen.

00:02:13.230 --> 00:02:16.950
Now it's worth noting that
your application needs

00:02:16.950 --> 00:02:18.830
to show the Google logo.

00:02:18.830 --> 00:02:21.190
If it hides the
Google logo then it's

00:02:21.190 --> 00:02:24.990
not in compliance with the terms
of services of the Google Maps

00:02:24.990 --> 00:02:25.870
APIs.

00:02:25.870 --> 00:02:28.490
So if you need to add UI
controls at the bottom left

00:02:28.490 --> 00:02:30.710
of your map, map
padding is a good way

00:02:30.710 --> 00:02:33.460
to make sure that the
Google logo appears.

00:02:33.460 --> 00:02:35.240
OK, let's take a
look at the code.

00:02:38.680 --> 00:02:42.290
It's very simple, use the
Google Map set padding

00:02:42.290 --> 00:02:45.360
method to add padding
around the edges of the map.

00:02:45.360 --> 00:02:48.140
The method takes four parameters
to determine the padding

00:02:48.140 --> 00:02:50.710
on the left, top,
right, and bottom edges.

00:02:50.710 --> 00:02:53.990
And the parameter names are easy
to remember-- left, top, right,

00:02:53.990 --> 00:02:55.100
and bottom.

00:02:55.100 --> 00:02:57.520
Camera updates, such as
re-centering the map,

00:02:57.520 --> 00:03:00.100
will automatically take
care of the padding,

00:03:00.100 --> 00:03:03.330
so you don't need to
calculate the offset yourself.

00:03:03.330 --> 00:03:06.530
And you can dynamically change
map padding at any time,

00:03:06.530 --> 00:03:09.080
the details are in
the documentation.

00:03:09.080 --> 00:03:11.840
Also, take a look at the
Google Maps API Demo App

00:03:11.840 --> 00:03:14.250
that's shipped with the
Google Play services.

00:03:14.250 --> 00:03:16.310
Here's a link to the
documentation about the demo

00:03:16.310 --> 00:03:16.980
app.

00:03:16.980 --> 00:03:20.180
It has a more complex example
than the one I've shown you.

00:03:20.180 --> 00:03:25.070
For example, it allows
you to add some animation

00:03:25.070 --> 00:03:27.090
to slide you sidebar in and out.

00:03:27.090 --> 00:03:30.370
The padding demo is called
Visible Regions in the demo app

00:03:30.370 --> 00:03:31.510
menu.

00:03:31.510 --> 00:03:34.380
Thank you, and I hope you've
enjoyed this video from Google

00:03:34.380 --> 00:03:36.530
Developers Live.

