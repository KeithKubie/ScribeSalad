WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:02.440
IAN LAKE: For many, how
you use and navigate

00:00:02.440 --> 00:00:04.560
your app can be classified
in one of two ways,

00:00:04.560 --> 00:00:07.420
either browsing through
content, or by directed search

00:00:07.420 --> 00:00:09.020
for specific content.

00:00:09.020 --> 00:00:12.250
If your app isn't delivering a
good in-app search experience,

00:00:12.250 --> 00:00:14.592
you're only serving
part of your user base.

00:00:14.592 --> 00:00:16.290
Hi, I'm Ian Lake, and
I want to show you

00:00:16.290 --> 00:00:19.400
what goes into building a great
in-app search experience using

00:00:19.400 --> 00:00:22.650
SearchView, to help your
users get to exactly what they

00:00:22.650 --> 00:00:25.412
want as easily as possible.

00:00:25.412 --> 00:00:27.620
The basic building blocks
of a good search experience

00:00:27.620 --> 00:00:30.860
start with perhaps the
hardest one, good content.

00:00:30.860 --> 00:00:34.380
We're talking about searching
using a single query string.

00:00:34.380 --> 00:00:36.290
But how that maps
onto your data--

00:00:36.290 --> 00:00:39.610
be it a list of users or a
full text search of posts--

00:00:39.610 --> 00:00:42.350
and how you store that
data is all in your hands.

00:00:42.350 --> 00:00:45.590
Well, it may be helpful to
have a special Full Text

00:00:45.590 --> 00:00:49.270
Search, or FTS, Table
locally on the device,

00:00:49.270 --> 00:00:52.560
if your data set is small enough
and query speed is critical.

00:00:52.560 --> 00:00:57.480
For now, let's focus on
the search process itself.

00:00:57.480 --> 00:01:00.155
With search being such a
core navigation pattern,

00:01:00.155 --> 00:01:03.190
it makes sense to standardize
on a single pattern

00:01:03.190 --> 00:01:04.769
for providing search.

00:01:04.769 --> 00:01:08.310
For Android, that involves
an aptly-named SearchView.

00:01:08.310 --> 00:01:11.450
Usually, the SearchView is seen
as an action in the main app

00:01:11.450 --> 00:01:13.410
bar, or an appropriate toolbar.

00:01:13.410 --> 00:01:15.720
By tapping on the
SearchView icon,

00:01:15.720 --> 00:01:18.370
the SearchView expands
inline, allowing users

00:01:18.370 --> 00:01:20.150
to immediately search.

00:01:20.150 --> 00:01:23.190
Through AppCompat, part of
the Android Support Library,

00:01:23.190 --> 00:01:28.130
SearchView is available on all
Android 2.1 and higher devices.

00:01:28.130 --> 00:01:30.070
Adding a SearchView
to your app bar

00:01:30.070 --> 00:01:33.400
involves just adding another
item to the menu you inflate.

00:01:33.400 --> 00:01:36.170
Besides the more
obvious title and icon,

00:01:36.170 --> 00:01:40.700
you'll note the showAsAction
contains collapseActionView.

00:01:40.700 --> 00:01:43.920
This is what tells the menu that
this item should be collapsed

00:01:43.920 --> 00:01:48.410
by default, but can be expanded
into the full actionViewClass

00:01:48.410 --> 00:01:49.910
that's defined.

00:01:49.910 --> 00:01:53.530
We also need ifRoom-- or
alternatively, always--

00:01:53.530 --> 00:01:55.010
for showAsAction.

00:01:55.010 --> 00:01:58.200
Without this, our icon will
only appear in the overflow menu

00:01:58.200 --> 00:02:01.180
and we won't be able to expand
it into the full SearchView.

00:02:01.180 --> 00:02:03.250
Not what we want.

00:02:03.250 --> 00:02:05.790
With just this addition,
we get a nice search icon

00:02:05.790 --> 00:02:07.350
that expands into
the SearchView,

00:02:07.350 --> 00:02:10.508
but the search doesn't really
go anywhere or do anything.

00:02:10.508 --> 00:02:12.970
We can get a reference to
it when we inflate our menu,

00:02:12.970 --> 00:02:15.480
but where do we go from there?

00:02:15.480 --> 00:02:18.210
Firstly, there's
full manual mode,

00:02:18.210 --> 00:02:20.780
using setOnQueryTextListener.

00:02:20.780 --> 00:02:24.210
Here, you'll get a callback for
when the search text changes

00:02:24.210 --> 00:02:26.740
and when the user submits
their search, giving you

00:02:26.740 --> 00:02:30.540
full control over exactly
what happens when.

00:02:30.540 --> 00:02:33.860
You can take advantage of a lot
more when you instead provide

00:02:33.860 --> 00:02:36.170
a searchable configuration.

00:02:36.170 --> 00:02:38.460
This is an XML
file, specifically

00:02:38.460 --> 00:02:41.740
for all the various
options relating to search.

00:02:41.740 --> 00:02:45.860
So many options that we have
a full documentation page just

00:02:45.860 --> 00:02:49.700
on all the various options,
all nine pages of the detailed

00:02:49.700 --> 00:02:51.110
explanations.

00:02:51.110 --> 00:02:54.484
Thankfully, it can also
be super short and easy.

00:02:54.484 --> 00:02:55.900
Just a label--
which would usually

00:02:55.900 --> 00:02:59.430
be your app name-- and a hint
in the form of search posts

00:02:59.430 --> 00:03:01.150
or search your app name.

00:03:01.150 --> 00:03:04.140
Guess what it takes to add
voice search to your SearchView?

00:03:04.140 --> 00:03:08.180
Just a single additional line to
your searchable configuration.

00:03:08.180 --> 00:03:11.050
That's a pretty powerful line,
but remember that voice search

00:03:11.050 --> 00:03:13.360
directly submits what is said.

00:03:13.360 --> 00:03:16.580
There's no opportunity to
change things before submitting,

00:03:16.580 --> 00:03:18.600
so make sure your
searches lend themselves

00:03:18.600 --> 00:03:21.410
to voice before enabling it.

00:03:21.410 --> 00:03:24.940
Then you'll associate that
searchable configuration

00:03:24.940 --> 00:03:26.450
with an activity.

00:03:26.450 --> 00:03:29.160
This is the activity
you want to go to when

00:03:29.160 --> 00:03:30.976
the user submits a query.

00:03:30.976 --> 00:03:34.410
You'll note we use
singleTop launch mode.

00:03:34.410 --> 00:03:36.460
This is important if
you have a SearchView

00:03:36.460 --> 00:03:40.370
on your searchable activity--
say, to do a second search.

00:03:40.370 --> 00:03:43.620
And this launch mode prevents
a potential giant back

00:03:43.620 --> 00:03:46.040
stack of search result screens.

00:03:46.040 --> 00:03:49.480
Hooking up your SearchView
to a searchable configuration

00:03:49.480 --> 00:03:52.330
uses SearchManager,
the system service

00:03:52.330 --> 00:03:54.390
which parses that
metadata element you've

00:03:54.390 --> 00:03:56.500
added to one of your
activities and creates

00:03:56.500 --> 00:04:00.370
a searchable info you can
pass to your SearchView.

00:04:00.370 --> 00:04:02.570
This launches our
searchable activity.

00:04:02.570 --> 00:04:06.520
But to extract the actual search
text, we look for action search

00:04:06.520 --> 00:04:09.600
and then extract the query
from the intent's extra.

00:04:09.600 --> 00:04:12.030
You call this from
onCreate, and if you

00:04:12.030 --> 00:04:13.880
are using that
singleTop launch mode,

00:04:13.880 --> 00:04:17.190
call it from
onNewIntent, as well.

00:04:17.190 --> 00:04:18.870
So you have a
great-looking SearchView

00:04:18.870 --> 00:04:21.990
that directly searches to
the activity of our choice.

00:04:21.990 --> 00:04:25.820
What we haven't talked about yet
are recent query suggestions,

00:04:25.820 --> 00:04:28.300
or custom suggestions,
which make

00:04:28.300 --> 00:04:31.730
things even easier for users
to find what they want.

00:04:31.730 --> 00:04:35.440
Check out the developer
site for more information.

00:04:35.440 --> 00:04:37.890
I can't wait to see
what awesome experiences

00:04:37.890 --> 00:04:41.270
you come up with using
in-app search on your quest

00:04:41.270 --> 00:04:42.960
to build better apps.

00:04:42.960 --> 00:04:46.310
[MUSIC PLAYING]

