WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:25.239
[MUSIC PLAYING]

00:00:25.239 --> 00:00:26.225
[WHOOSH]

00:00:26.225 --> 00:00:27.211
[CLICK]

00:00:27.211 --> 00:00:28.690
[WHOOSH]

00:00:28.690 --> 00:00:30.169
[WHOOSH]

00:00:30.169 --> 00:00:31.648
[CLICK]

00:00:34.160 --> 00:00:35.740
Hi, I'm Mano Marks.

00:00:35.740 --> 00:00:39.780
And welcome to another Google
Maps Developer Shortcut.

00:00:39.780 --> 00:00:41.810
Today, we're going to be talking
about earthquakes.

00:00:41.810 --> 00:00:44.060
Earthquakes are something that
happens constantly around the

00:00:44.060 --> 00:00:45.550
world, obviously.

00:00:45.550 --> 00:00:53.080
And the US Geological Survey
gives out a JSON feed that

00:00:53.080 --> 00:00:56.310
allows you to parse that data
and put it into your

00:00:56.310 --> 00:00:58.610
applications so that you can
get notifications of

00:00:58.610 --> 00:01:01.170
earthquakes as they're happening
around the world.

00:01:01.170 --> 00:01:06.450
So I'm going to take you, first,
through a demo of this

00:01:06.450 --> 00:01:10.240
application that I built, quick
app that I built using

00:01:10.240 --> 00:01:14.020
Storyboards and
NSJSONSerialization, and then

00:01:14.020 --> 00:01:16.580
walk you through a little
bit of the code.

00:01:16.580 --> 00:01:21.270
So this is my app, here,
in the iOS Simulator.

00:01:21.270 --> 00:01:23.430
You'll see here that I
have a Table View.

00:01:23.430 --> 00:01:28.110
And I click on the Table View,
and it loads up the Google

00:01:28.110 --> 00:01:32.020
Maps SDK for iOS and shows
you the location.

00:01:32.020 --> 00:01:36.060
And if you click on the marker,
it'll actually show

00:01:36.060 --> 00:01:42.980
you the title, which is the
location in plain text.

00:01:42.980 --> 00:01:45.780
And there's a little
snippet under there

00:01:45.780 --> 00:01:48.880
that says the magnitude.

00:01:48.880 --> 00:01:52.610
All right, so what does this
look like in code?

00:01:52.610 --> 00:01:55.520
Well, first, let's take a
look at the JSON feeds.

00:01:58.140 --> 00:02:01.050
This is what it looks
like in the browser.

00:02:01.050 --> 00:02:05.130
So this is just a data
serialization format.

00:02:05.130 --> 00:02:07.220
But that's not really
easy to look at.

00:02:07.220 --> 00:02:08.979
So let's just take a look
at what it looks

00:02:08.979 --> 00:02:11.560
like in Sublime Text.

00:02:11.560 --> 00:02:17.870
So you see here, each line
is an object in JSON.

00:02:17.870 --> 00:02:21.870
Now, JSON is a format that's
very familiar to JavaScript

00:02:21.870 --> 00:02:27.040
developers, and is becoming a
common data format for people

00:02:27.040 --> 00:02:29.560
working in mobile applications,
as well, because

00:02:29.560 --> 00:02:33.720
it's nice and compact
and easy to parse.

00:02:33.720 --> 00:02:37.920
And a lot of operating systems,
including Android and

00:02:37.920 --> 00:02:42.270
iOS, have developed native
libraries for parsing it out.

00:02:42.270 --> 00:02:48.600
So basically, you're seeing here
a dictionary of objects.

00:02:48.600 --> 00:02:54.090
This key-value pair is very
easy to sort through.

00:02:54.090 --> 00:02:57.280
So let's just take a look
here in my code.

00:03:03.560 --> 00:03:10.140
I defined an NSURL for
the URL for the feed.

00:03:10.140 --> 00:03:11.390
So that's this
earthquakesusgsds.gov.

00:03:14.550 --> 00:03:17.070
I'm choosing All Earthquakes
in the Last Hour.

00:03:19.710 --> 00:03:25.070
And then, when the view does
load, it fetches the data.

00:03:25.070 --> 00:03:30.500
So there's a fetchData
method here.

00:03:30.500 --> 00:03:34.860
And I create two arrays,
quakeArray and markerArray.

00:03:34.860 --> 00:03:39.670
And then, I do a dispatch_async,
which is just

00:03:39.670 --> 00:03:44.250
a way to fetch data
from a URL.

00:03:44.250 --> 00:03:51.140
And I assign it to a queue and
then say, create this NSData

00:03:51.140 --> 00:03:55.090
object at the URL that
I've specified.

00:03:55.090 --> 00:03:58.150
And then, when you're
done, go and run

00:03:58.150 --> 00:04:01.110
the fetchedData method.

00:04:01.110 --> 00:04:03.040
And so, in here, I've got
fetchedData method, which I've

00:04:03.040 --> 00:04:06.260
passed in NSData.

00:04:06.260 --> 00:04:11.040
And so what I do is I make
this quakeArray.

00:04:11.040 --> 00:04:17.160
It initializes it with an
initial capacity of 100,

00:04:17.160 --> 00:04:20.350
because I figure, hopefully,
not over 100 earthquakes in

00:04:20.350 --> 00:04:23.030
the last hour all around
the planet.

00:04:23.030 --> 00:04:26.140
And then, here's the
key piece here.

00:04:26.140 --> 00:04:30.610
I created a JSON object using
NSJSONSerialization.

00:04:33.420 --> 00:04:36.550
And then, I just say,
JSONObjectWithObect and

00:04:36.550 --> 00:04:38.790
responseData, which
is the data that I

00:04:38.790 --> 00:04:43.200
passed in to the method.

00:04:43.200 --> 00:04:47.440
And that returns to me an object
that I can then just

00:04:47.440 --> 00:04:50.540
parse through, looking
for keys.

00:04:50.540 --> 00:04:54.640
It's a dictionary, basically,
that I can then parse through

00:04:54.640 --> 00:04:59.270
and create other dictionaries
out of the different objects,

00:04:59.270 --> 00:05:05.280
and then use that data
in my application.

00:05:05.280 --> 00:05:12.060
So here you see, I'm just
going through the latest

00:05:12.060 --> 00:05:16.640
Earthquakes object, which is
in this array, and then

00:05:16.640 --> 00:05:23.590
creating dictionaries or parsing
out strings for each

00:05:23.590 --> 00:05:24.990
of the different objects.

00:05:24.990 --> 00:05:38.730
And then, what I do is I then
assign the array to the

00:05:38.730 --> 00:05:40.740
tableView as the data source.

00:05:40.740 --> 00:05:44.040
And I reload the table.

00:05:44.040 --> 00:05:47.090
And then, because I'm
using a Storyboard--

00:05:47.090 --> 00:05:50.510
and you can see my last
Shortcut on doing

00:05:50.510 --> 00:05:51.270
storyboards--

00:05:51.270 --> 00:05:59.220
I prepare for the Segue by
basically passing in an object

00:05:59.220 --> 00:06:06.140
that then gets passed to the
next view controller, which is

00:06:06.140 --> 00:06:07.390
EQViewController.

00:06:09.160 --> 00:06:17.200
And that then parses out the
GMSCameraPosition from the

00:06:17.200 --> 00:06:20.160
object and creates a marker
at that location.

00:06:20.160 --> 00:06:27.230
So you can see that working with
JSON in Objective-C is

00:06:27.230 --> 00:06:30.350
actually a very simple
process.

00:06:30.350 --> 00:06:34.440
The key thing here is
NSJSONSerialization, which

00:06:34.440 --> 00:06:36.750
provides you with some
native support.

00:06:36.750 --> 00:06:41.800
And that allows you to use web
services in your application

00:06:41.800 --> 00:06:46.060
and publish them like I did.

00:06:46.060 --> 00:06:51.950
So that's all I've
got for today.

00:06:51.950 --> 00:06:54.800
Thank you for coming
to our Shortcut.

00:06:54.800 --> 00:06:56.050
And we'll see you next week.

00:07:00.150 --> 00:07:00.750
[WHOOSH]

00:07:00.750 --> 00:07:01.650
[CLICK]

00:07:01.650 --> 00:07:03.750
[WHOOSH]

00:07:03.750 --> 00:07:04.350
[WHOOSH]

00:07:04.350 --> 00:07:05.850
[CLICK]

00:07:05.850 --> 00:08:04.350
[MUSIC PLAYING]

