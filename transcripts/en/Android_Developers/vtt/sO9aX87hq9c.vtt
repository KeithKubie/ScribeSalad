WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.880
NICOLAS ROARD: My name is
Nicolas, and this is John.

00:00:01.880 --> 00:00:04.540
And we're going to talk to you
today about ContraintLayout,

00:00:04.540 --> 00:00:06.240
a new layout for Android.

00:00:06.240 --> 00:00:08.510
JOHN HOFORD: What's
Layout all about?

00:00:08.510 --> 00:00:11.000
Basically, you need
to position widgets

00:00:11.000 --> 00:00:16.379
on the screen based on something
that a UI designer might

00:00:16.379 --> 00:00:17.835
have given you, for example.

00:00:20.640 --> 00:00:23.000
So you have to lay them out
in some particular fashion

00:00:23.000 --> 00:00:24.144
on a screen.

00:00:24.144 --> 00:00:26.310
But what happens if you
have another screen that you

00:00:26.310 --> 00:00:27.980
have to lay out?

00:00:27.980 --> 00:00:31.620
If they're fixed position
on the new screen,

00:00:31.620 --> 00:00:33.010
it's not going to look right.

00:00:33.010 --> 00:00:38.430
Things are too far away from
the edges, things like that.

00:00:38.430 --> 00:00:40.630
Now how many screens
would you actually have

00:00:40.630 --> 00:00:45.450
to do if you had to do
every screen out there?

00:00:45.450 --> 00:00:49.540
5,400 is a rough number.

00:00:49.540 --> 00:00:55.120
That's 90 common screen sizes,
30 languages, landscape,

00:00:55.120 --> 00:00:59.310
portrait, many, many devices.

00:00:59.310 --> 00:01:02.400
And it'll take you
a really long time.

00:01:02.400 --> 00:01:07.990
That's why from the very
beginning Android had Layouts.

00:01:07.990 --> 00:01:13.680
They're able to adjust sizes
and position things dynamically

00:01:13.680 --> 00:01:14.403
for you.

00:01:17.910 --> 00:01:22.140
There are a bunch of different
layouts we can talk about.

00:01:22.140 --> 00:01:25.620
And you could divide them up
into two basic categories,

00:01:25.620 --> 00:01:30.080
simple layouts and
complex layouts.

00:01:30.080 --> 00:01:33.430
The classic simple
layout is LinearLayout.

00:01:33.430 --> 00:01:35.910
Essentially put your
widgets inside of it

00:01:35.910 --> 00:01:44.240
and you have a rule, or
column, of buttons or widgets.

00:01:44.240 --> 00:01:46.800
Now you can build
very complex layouts

00:01:46.800 --> 00:01:51.020
with just using LinearLayout
by doing deep nesting.

00:01:51.020 --> 00:01:53.840
But deep nesting it has
its performance problems.

00:01:57.420 --> 00:02:01.920
On the other hand, if
you use a ComplexLayout

00:02:01.920 --> 00:02:05.480
like RelativeLayout
or GridLayout,

00:02:05.480 --> 00:02:08.949
it'll create
shallow hierarchies.

00:02:08.949 --> 00:02:12.010
But without a good UI
builder to use them,

00:02:12.010 --> 00:02:16.390
it's actually very difficult
to keep them stable.

00:02:16.390 --> 00:02:19.560
We need something new to
help us with that stuff.

00:02:23.950 --> 00:02:28.670
NICOLAS ROARD: And so
that's why we are presenting

00:02:28.670 --> 00:02:30.210
you ConstraintLayouts.

00:02:30.210 --> 00:02:33.060
So it's available on
the new 100 Studio 2.2

00:02:33.060 --> 00:02:35.960
Preview in the canary build.

00:02:35.960 --> 00:02:39.570
And basically it's a
small unbundled library.

00:02:39.570 --> 00:02:42.690
It's actually backward
compatible back to Gingerbread,

00:02:42.690 --> 00:02:43.580
to API level 9.

00:02:43.580 --> 00:02:46.960
That means nearly
everything out there.

00:02:46.960 --> 00:02:50.660
And it's designed to
reduce deep hierarchies.

00:02:50.660 --> 00:02:52.820
And it's designed from
the very beginning

00:02:52.820 --> 00:02:55.160
to work within Studio.

00:02:55.160 --> 00:02:58.480
And if you have started to look
a little bit at ContraintLayout

00:02:58.480 --> 00:03:02.350
already, it might look a
little bit like RelativeLayout.

00:03:02.350 --> 00:03:06.530
You set traditions
between different widgets,

00:03:06.530 --> 00:03:09.000
and that seems pretty
similar to what

00:03:09.000 --> 00:03:10.360
ContraintLayout regular does.

00:03:10.360 --> 00:03:12.300
Well sure, but actually
ContraintLayout

00:03:12.300 --> 00:03:16.530
does what RelativeLayout
does, but more.

00:03:16.530 --> 00:03:20.230
And as it is more
expressive, you

00:03:20.230 --> 00:03:21.750
should be able to
reduce nesting.

00:03:21.750 --> 00:03:23.630
And as John said,
nesting in general

00:03:23.630 --> 00:03:27.850
would not be a great thing
for your performances.

00:03:27.850 --> 00:03:30.070
It's also packaged as
an unbundled library.

00:03:30.070 --> 00:03:34.590
Which means that not only
can you use it from day one,

00:03:34.590 --> 00:03:38.600
but we will also be able to
regularly curate on it and push

00:03:38.600 --> 00:03:41.110
newer versions,
add new features,

00:03:41.110 --> 00:03:43.930
and you'll be able to
get them instantly.

00:03:43.930 --> 00:03:46.780
It's also extensible
in its design, which

00:03:46.780 --> 00:03:49.130
you don't care too much
about, apart that from

00:03:49.130 --> 00:03:52.370
that it allows us to
easily add new features.

00:03:52.370 --> 00:03:55.120
And finally it comes
with a great UI builder.

00:03:55.120 --> 00:04:00.130
As I said it was really created
as the same team actually.

00:04:00.130 --> 00:04:02.840
The same team worked on both
the ContraintLayout and the UI

00:04:02.840 --> 00:04:03.410
builder.

00:04:03.410 --> 00:04:05.284
And we really tried to
make a UI builder that

00:04:05.284 --> 00:04:10.150
is flexible and easy to use,
and really try to help you.

00:04:10.150 --> 00:04:12.800
So when we started to think
about creating a new Layout

00:04:12.800 --> 00:04:14.720
system, because
we were not super

00:04:14.720 --> 00:04:19.000
happy with the current
design, we just

00:04:19.000 --> 00:04:20.500
started with something
very generic.

00:04:20.500 --> 00:04:22.630
OK, we needed an
equation solver.

00:04:22.630 --> 00:04:26.530
And on top of that
we had equations.

00:04:26.530 --> 00:04:30.744
But the problem with that
is-- with the equations--

00:04:30.744 --> 00:04:31.910
we could have stopped there.

00:04:31.910 --> 00:04:34.290
We could have said, you have
equations, that's great.

00:04:34.290 --> 00:04:37.580
Just draw equation, put
your Layouts, and that's it.

00:04:37.580 --> 00:04:39.950
But the issue with that is,
it's actually very easy,

00:04:39.950 --> 00:04:43.750
we found out, to create systems
that are not only complex,

00:04:43.750 --> 00:04:45.940
may not perform
really well, and also

00:04:45.940 --> 00:04:50.090
can even be unpredictable
in the way they react.

00:04:50.090 --> 00:04:53.730
So that's why we built, on
top of the equation system,

00:04:53.730 --> 00:04:56.860
a very simple but
pretty expressive

00:04:56.860 --> 00:04:58.860
system of constraints.

00:04:58.860 --> 00:05:04.450
And that allows us to control
the type of constraints

00:05:04.450 --> 00:05:06.210
and the type of
equation that runs,

00:05:06.210 --> 00:05:08.200
and I'm sure better
performances.

00:05:10.930 --> 00:05:15.600
On top of that we then built the
UI builder plus inference tools

00:05:15.600 --> 00:05:18.690
to create the constraint for
you, and a bunch of other tools

00:05:18.690 --> 00:05:21.740
that we will demo later.

00:05:21.740 --> 00:05:24.812
So very quick overview
of the concert model.

00:05:24.812 --> 00:05:26.270
If you want to
create a connection,

00:05:26.270 --> 00:05:29.330
you just drag from an
encore to a target.

00:05:29.330 --> 00:05:31.170
And the other
thing you can do is

00:05:31.170 --> 00:05:32.750
if you simply drag
that widget, you

00:05:32.750 --> 00:05:34.350
can actually specify a margin.

00:05:34.350 --> 00:05:36.560
And that's all a connection is.

00:05:36.560 --> 00:05:41.320
It's saying take one
side, move it to a target,

00:05:41.320 --> 00:05:45.350
and possibly keep
a specific gap.

00:05:45.350 --> 00:05:46.920
And you can apply
those connections

00:05:46.920 --> 00:05:49.950
on of course top, bottom, left,
right, or start on the end

00:05:49.950 --> 00:05:52.280
for right to left languages.

00:05:52.280 --> 00:05:55.040
We also support baseline.

00:05:55.040 --> 00:05:58.460
And at first glance, that it's.

00:05:58.460 --> 00:06:01.800
The other thing that is
different and particularly

00:06:01.800 --> 00:06:04.760
relative to
RelativeLayout is what

00:06:04.760 --> 00:06:07.534
happens if you actually set
the connection on both ends,

00:06:07.534 --> 00:06:08.950
both on the left
and on the right.

00:06:08.950 --> 00:06:13.140
And if you have a widget that
actually is fixed size that

00:06:13.140 --> 00:06:14.320
sounds impossible, right?

00:06:14.320 --> 00:06:19.860
The left side cannot be matching
its constraint at the same time

00:06:19.860 --> 00:06:22.440
as the right side of the
constraint if the widget does

00:06:22.440 --> 00:06:23.420
not resize.

00:06:23.420 --> 00:06:28.120
So what we do in that case
is that we just center it.

00:06:28.120 --> 00:06:32.360
And because it's centered
and we can tweak the result,

00:06:32.360 --> 00:06:35.050
we'll let you decide
how much bias you

00:06:35.050 --> 00:06:37.950
want on one side or the other.

00:06:37.950 --> 00:06:40.260
And you can also do that
directly into the UI builder,

00:06:40.260 --> 00:06:43.930
just drag in and out,
or use the Inspector.

00:06:43.930 --> 00:06:46.370
Another option
that we provide is,

00:06:46.370 --> 00:06:48.190
what if you want
to resize widget?

00:06:48.190 --> 00:06:51.640
And in that case think
about it like match_parent.

00:06:51.640 --> 00:06:53.670
And actually we do not
support match_parent.

00:06:53.670 --> 00:06:55.710
But what we do support
is something that's

00:06:55.710 --> 00:06:56.920
more like match constraint.

00:06:56.920 --> 00:06:59.510
And what that will do
is resize the widget so

00:06:59.510 --> 00:07:05.640
that the constraint that you
define the size of the widget.

00:07:05.640 --> 00:07:10.090
And those are
important aspects that

00:07:10.090 --> 00:07:13.700
often comes when you try to do
complex behavior in your UI.

00:07:13.700 --> 00:07:17.120
Because what happens when you
want the widget to be gone?

00:07:17.120 --> 00:07:19.380
The first case is the
widget is invisible.

00:07:19.380 --> 00:07:21.470
If you do that nothing changes.

00:07:21.470 --> 00:07:23.580
That's easy, just
not drawn on screen.

00:07:23.580 --> 00:07:27.380
But for gone what we do
is we collapse the widget

00:07:27.380 --> 00:07:30.130
that you marked as
gone as a single point,

00:07:30.130 --> 00:07:32.090
and we discard its margins.

00:07:32.090 --> 00:07:35.190
So it completely disappears,
but the actual hierarchy

00:07:35.190 --> 00:07:37.470
of constraint still applies.

00:07:37.470 --> 00:07:41.500
And so that allows you to
have a lot more reactive user

00:07:41.500 --> 00:07:44.320
interface behaviors.

00:07:44.320 --> 00:07:47.840
All right, some of you
might have one other,

00:07:47.840 --> 00:07:49.390
but what are the attributes?

00:07:49.390 --> 00:07:52.820
And yes we did build
a great UI builder,

00:07:52.820 --> 00:07:55.030
and we do think that
UI builder will really

00:07:55.030 --> 00:07:59.190
help you create those UIs and
really make your life easy.

00:07:59.190 --> 00:08:03.860
But if you do want to use
the XML, or the programming,

00:08:03.860 --> 00:08:06.580
or do the UI programmatically,
you can still do it.

00:08:06.580 --> 00:08:08.270
It's a normal view group.

00:08:08.270 --> 00:08:09.990
You still have
access to everything.

00:08:09.990 --> 00:08:12.073
So if you look at those
attributes it sounds like,

00:08:12.073 --> 00:08:13.280
wow there is a lot.

00:08:13.280 --> 00:08:15.120
But actually not so much.

00:08:15.120 --> 00:08:18.330
If you look at the those,
those fonts are the usual ones.

00:08:18.330 --> 00:08:20.840
Justifying the way of the
size, the text size, and stuff

00:08:20.840 --> 00:08:21.530
like that.

00:08:21.530 --> 00:08:22.977
Nothing to do with us really.

00:08:22.977 --> 00:08:24.560
Then you've got a
bunch of attributes,

00:08:24.560 --> 00:08:25.850
and so we can discard those.

00:08:25.850 --> 00:08:27.350
Then we've got a
bunch of attributes

00:08:27.350 --> 00:08:30.882
that actually, as the prefix
indicates, for the tool.

00:08:30.882 --> 00:08:32.090
It's just for Android Studio.

00:08:32.090 --> 00:08:33.610
If you do things
problematically you

00:08:33.610 --> 00:08:35.900
don't care about that at all.

00:08:35.900 --> 00:08:37.880
And in fact, when
you push to a device,

00:08:37.880 --> 00:08:39.480
those attributes
get stripped out.

00:08:39.480 --> 00:08:43.220
So really the one we care about
are those four in the middle.

00:08:43.220 --> 00:08:45.320
And really on those
four in the middle

00:08:45.320 --> 00:08:46.690
the margins start on top.

00:08:46.690 --> 00:08:48.100
You probably know them already.

00:08:48.100 --> 00:08:50.216
So we only have two
more attributes.

00:08:50.216 --> 00:08:52.090
So just say you have a
constraint on the left

00:08:52.090 --> 00:08:53.780
and a constraint on the top.

00:08:53.780 --> 00:08:55.510
So it's actually
pretty tractable.

00:08:55.510 --> 00:08:57.950
That said, we really think
that the UA builder is great.

00:08:57.950 --> 00:09:00.610
And in fact if you have
issues with the UA builder,

00:09:00.610 --> 00:09:03.619
if it doesn't work for
your workflow, tell us.

00:09:03.619 --> 00:09:05.660
We really want to hear
from you because we really

00:09:05.660 --> 00:09:08.990
want to make your life easy.

00:09:08.990 --> 00:09:12.240
All right, let's talk about
the Layout editor itself.

00:09:12.240 --> 00:09:16.190
So it's 2-way editing.

00:09:16.190 --> 00:09:20.770
We can edit XML and see
the results directly live.

00:09:20.770 --> 00:09:24.550
In this version you can edit
UI and that will directly

00:09:24.550 --> 00:09:25.494
translate to the XML.

00:09:25.494 --> 00:09:27.160
You can have both
views at the same time

00:09:27.160 --> 00:09:28.870
or you can stay
in the design mode

00:09:28.870 --> 00:09:30.950
if you're going to
edit into Studio.

00:09:30.950 --> 00:09:33.270
And we really try to
make it so that there

00:09:33.270 --> 00:09:35.660
is an immediate feedback.

00:09:35.660 --> 00:09:37.480
And so it's really easy to use.

00:09:37.480 --> 00:09:39.280
Things get predictable
and you're not

00:09:39.280 --> 00:09:41.320
surprised like you might
have been in the past

00:09:41.320 --> 00:09:45.840
with RelativeLayout, with
whatever the Layout decided--

00:09:45.840 --> 00:09:48.570
wherever it decided
to put the widgets.

00:09:48.570 --> 00:09:50.140
And it's in active development.

00:09:50.140 --> 00:09:52.210
We just released
it in 2.2 Preview.

00:09:52.210 --> 00:09:53.530
It's not far.

00:09:53.530 --> 00:09:57.180
We definitely
welcome back reports.

00:09:57.180 --> 00:10:00.030
All right, do you
want to talk about it?

00:10:00.030 --> 00:10:02.960
JOHN HOFORD: OK, one of the
nice things that the new Layout

00:10:02.960 --> 00:10:05.150
editor has is the inspector.

00:10:05.150 --> 00:10:11.060
This gives you iconified
view of a single widget

00:10:11.060 --> 00:10:13.450
that you have selected.

00:10:13.450 --> 00:10:16.650
The arrows on the left and
right, the lines on the left

00:10:16.650 --> 00:10:19.360
and right and up
and down show you

00:10:19.360 --> 00:10:22.580
which sides have
been constrained.

00:10:22.580 --> 00:10:27.586
The numbers show you the
margins that have been set.

00:10:27.586 --> 00:10:29.710
And you can actually just
move your mouse over them

00:10:29.710 --> 00:10:32.230
and edit the margins directly.

00:10:32.230 --> 00:10:35.280
The sliders allow
you to adjust bias

00:10:35.280 --> 00:10:38.940
if you're connected on both
sides so you have a bias.

00:10:38.940 --> 00:10:44.580
The little arrows inside show
the wrap content, or spread,

00:10:44.580 --> 00:10:47.100
or fixed width.

00:10:47.100 --> 00:10:53.900
OK, let's go to the demo
now and on the laptop.

00:10:53.900 --> 00:10:56.640
NICOLAS ROARD: All right, so
you can see the-- that's Studio,

00:10:56.640 --> 00:10:58.223
and if you have
played with it already

00:10:58.223 --> 00:10:59.460
that should be familiar.

00:10:59.460 --> 00:11:04.450
And you can see here it just
shows the ContraintLayout.

00:11:04.450 --> 00:11:06.384
And I can switch
the design mode.

00:11:06.384 --> 00:11:07.550
And we have those two modes.

00:11:07.550 --> 00:11:10.590
We have the design mode
where it shows what

00:11:10.590 --> 00:11:12.670
things look like on the device.

00:11:12.670 --> 00:11:14.740
and you have the blueprint mode.

00:11:14.740 --> 00:11:17.090
And you can also have both
of them at the same time

00:11:17.090 --> 00:11:18.360
if you prefer.

00:11:18.360 --> 00:11:20.670
So why did we do
the blueprint mode?

00:11:20.670 --> 00:11:23.310
Well simply because
sometimes what you show,

00:11:23.310 --> 00:11:25.170
in terms of Layout,
doesn't actually

00:11:25.170 --> 00:11:26.740
appear in the design surface.

00:11:26.740 --> 00:11:29.260
Like for example, if
you look at a button,

00:11:29.260 --> 00:11:34.060
the button shows smaller than
what its actually bonds are.

00:11:34.060 --> 00:11:35.750
So the blueprint
mode, think about it

00:11:35.750 --> 00:11:38.050
as an x-ray of your
current Layout,

00:11:38.050 --> 00:11:39.670
and only shows you
the information

00:11:39.670 --> 00:11:41.640
that pertains to the Layout.

00:11:41.640 --> 00:11:44.990
So with ContraintLayout
you can just go and drag

00:11:44.990 --> 00:11:46.850
wherever you want.

00:11:46.850 --> 00:11:51.630
And you do have some guidelines
to help you position amounts.

00:11:51.630 --> 00:11:55.460
We followed the material
design guideline for instance.

00:11:55.460 --> 00:11:56.580
And it's very easy to use.

00:11:56.580 --> 00:11:59.650
You can, without doing
any constraint so far,

00:11:59.650 --> 00:12:01.379
you can still move
it wherever you want.

00:12:01.379 --> 00:12:02.920
That's really good
when you're simply

00:12:02.920 --> 00:12:06.110
playing around or trying to
design your UI testing to see

00:12:06.110 --> 00:12:07.860
how things really fit.

00:12:07.860 --> 00:12:12.082
So if you create a connection
we just animate directly.

00:12:12.082 --> 00:12:14.290
And you can see that if I
don't create the connection

00:12:14.290 --> 00:12:17.640
we still show you what
will happen if you release

00:12:17.640 --> 00:12:19.700
and create the connection.

00:12:19.700 --> 00:12:23.110
And it actually works
with the entire system.

00:12:23.110 --> 00:12:28.130
So if I drag a button and I
then touch this button here

00:12:28.130 --> 00:12:32.560
and I kill this connection
everything moves together.

00:12:32.560 --> 00:12:37.390
So, and you can see here, it's
only constraint or is untidy

00:12:37.390 --> 00:12:40.700
so vertically nothing changes
and I can create a connection

00:12:40.700 --> 00:12:42.040
manually like that.

00:12:42.040 --> 00:12:45.590
You can destroy all the
connection by clicking this

00:12:45.590 --> 00:12:48.870
and just align your things
and create this connection.

00:12:48.870 --> 00:12:53.890
There are two different
modes to create connections.

00:12:53.890 --> 00:12:56.160
One is this manual
one, and I think

00:12:56.160 --> 00:12:58.400
it's very important
because we want

00:12:58.400 --> 00:13:02.730
you to be able to easily
tweak the resulting UI.

00:13:02.730 --> 00:13:05.770
But there is another one
that's a little bit more

00:13:05.770 --> 00:13:10.000
easy to use in some cases,
which is the Auto Alignments.

00:13:10.000 --> 00:13:12.600
And if we go on
Auto Alignments--

00:13:12.600 --> 00:13:14.490
let me go back on that.

00:13:14.490 --> 00:13:19.670
So Auto Alignment works with
this icon here, this little U

00:13:19.670 --> 00:13:22.070
shaped magnet.

00:13:22.070 --> 00:13:24.230
And what happens
now, if that is on,

00:13:24.230 --> 00:13:27.150
is that if I put my
widget on a guideline

00:13:27.150 --> 00:13:28.720
it will create this connection.

00:13:28.720 --> 00:13:31.270
And you can see that there
is this small animation.

00:13:31.270 --> 00:13:32.990
As long as the animation
is not finished

00:13:32.990 --> 00:13:34.690
I can still move things around.

00:13:34.690 --> 00:13:36.870
But if I let it go
then the widgets

00:13:36.870 --> 00:13:39.210
will actually be constrained.

00:13:39.210 --> 00:13:42.810
So if I actually resize--
oops there is a bug.

00:13:42.810 --> 00:13:46.050
If I resize that,
yeah we bring back,

00:13:46.050 --> 00:13:50.460
but you can see that the
constraints are applied.

00:13:50.460 --> 00:13:54.860
And I think we talk
about the tools now.

00:13:54.860 --> 00:13:58.370
JOHN HOFORD: One more
piece of Auto Alignment

00:13:58.370 --> 00:14:00.310
that you might have forgotten.

00:14:00.310 --> 00:14:02.600
One of the nice things
about Auto Alignment

00:14:02.600 --> 00:14:06.440
is that when you put an
object like this, the fact

00:14:06.440 --> 00:14:10.940
that you see the guidelines
allows it to connect.

00:14:10.940 --> 00:14:14.020
So as long as you can
see the guidelines,

00:14:14.020 --> 00:14:17.850
you'll be able to let it go
and it will connect for you.

00:14:17.850 --> 00:14:21.770
So it can be a quick way,
especially for a very simple

00:14:21.770 --> 00:14:24.710
UIs, to be built.

00:14:24.710 --> 00:14:33.690
The next thing I want to show
you is what we call UI Tools.

00:14:33.690 --> 00:14:38.990
So because we are so much a
rich UI Layout type environment,

00:14:38.990 --> 00:14:41.740
we wanted to add tools that
were a lot like the stuff

00:14:41.740 --> 00:14:47.830
that you would see in
PowerPoint or any of the Visio

00:14:47.830 --> 00:14:49.600
or any of the graphical tools.

00:14:49.600 --> 00:14:53.440
So at the top you'll see
a collection of widgets,

00:14:53.440 --> 00:14:57.420
and they work in
sort of standard ways

00:14:57.420 --> 00:15:04.650
where-- let me undo
the-- they would

00:15:04.650 --> 00:15:08.930
align left, right, middle,
that kind of thing.

00:15:08.930 --> 00:15:14.490
There's a special mode if you
have the magnet turned on.

00:15:14.490 --> 00:15:16.710
When you issue
those it'll actually

00:15:16.710 --> 00:15:19.290
create constraints for you.

00:15:19.290 --> 00:15:23.650
So if you care about having the
constraints very specifically

00:15:23.650 --> 00:15:29.900
left align, you can use this to
tell you how would that happen.

00:15:29.900 --> 00:15:31.760
NICOLAS ROARD: And in
fact it's kind of how

00:15:31.760 --> 00:15:33.630
we want the tool to be used.

00:15:33.630 --> 00:15:35.750
We want it to be using
a very flexible way.

00:15:35.750 --> 00:15:38.320
Some people might just,
as they go along, just

00:15:38.320 --> 00:15:39.450
create the constraint.

00:15:39.450 --> 00:15:41.900
Or some people might
just prefer to layout

00:15:41.900 --> 00:15:46.260
the widget in a nice place and
then build the constraints.

00:15:46.260 --> 00:15:48.640
It's really up to you.

00:15:48.640 --> 00:15:52.130
JOHN HOFORD: So it helps
in a lot of situations

00:15:52.130 --> 00:15:55.390
like this, where you're just
aligning things, putting things

00:15:55.390 --> 00:15:59.180
together like this, setting up.

00:15:59.180 --> 00:16:01.340
And you can see fairly
quickly I can come up

00:16:01.340 --> 00:16:10.110
with a reasonable amount of
alignment and packing of things

00:16:10.110 --> 00:16:13.810
in ways that we
would like to use it.

00:16:13.810 --> 00:16:20.200
OK, for the next piece I want
to-- let's go to the next one.

00:16:20.200 --> 00:16:25.490
For the next piece, I want to
talk to you about inference.

00:16:25.490 --> 00:16:30.970
Now inference is a fairly
complicated system.

00:16:30.970 --> 00:16:33.360
NICOLAS ROARD: One second.

00:16:33.360 --> 00:16:35.010
JOHN HOFORD: You're
scaring me there.

00:16:35.010 --> 00:16:40.230
What we're doing, it's just one
button, the little light bulb

00:16:40.230 --> 00:16:40.850
button.

00:16:40.850 --> 00:16:43.210
Don't press it yet.

00:16:43.210 --> 00:16:45.770
What we do-- where do
you press that button?

00:16:45.770 --> 00:16:51.470
We calculate the probability
of all possible connections.

00:16:51.470 --> 00:16:53.380
And then we walk
through a series

00:16:53.380 --> 00:16:56.250
of heuristically
divined algorithms

00:16:56.250 --> 00:17:00.680
which will make
connections for you.

00:17:00.680 --> 00:17:06.589
By the end of it, all things
will be properly constrained.

00:17:06.589 --> 00:17:09.880
There are a couple of
things-- it's a bit magical.

00:17:09.880 --> 00:17:12.380
But there are a couple of
things to remember about it.

00:17:12.380 --> 00:17:16.240
Three things to
remember, it'll never

00:17:16.240 --> 00:17:17.890
really move a widget on you.

00:17:17.890 --> 00:17:20.230
It will apply constraints
wherever you've

00:17:20.230 --> 00:17:22.859
left your widgets beforehand.

00:17:22.859 --> 00:17:26.990
So it's not going to suddenly
push a widget off the screen

00:17:26.990 --> 00:17:28.160
or something like that.

00:17:34.510 --> 00:17:37.780
It will do some small
changes whenever

00:17:37.780 --> 00:17:43.460
there is-- trying to do
an alignment of things,

00:17:43.460 --> 00:17:44.790
but that's OK.

00:17:44.790 --> 00:17:47.090
By the end of the
pass, all of the things

00:17:47.090 --> 00:17:50.230
are guaranteed to
be constrained.

00:17:50.230 --> 00:17:54.030
If you have a
constraint beforehand,

00:17:54.030 --> 00:17:55.500
it will honor those constraints.

00:17:55.500 --> 00:17:58.760
So it will never destroy
an existing constraint

00:17:58.760 --> 00:18:00.170
that you have created.

00:18:00.170 --> 00:18:01.840
So you can create
constraints and then

00:18:01.840 --> 00:18:04.780
let it finish the job for you.

00:18:04.780 --> 00:18:07.620
And in fact, in the demos
you saw, a lot of them

00:18:07.620 --> 00:18:11.100
were some manually
created constraints.

00:18:11.100 --> 00:18:15.330
Sometimes it will
do auto constraint.

00:18:15.330 --> 00:18:17.060
Go ahead, Nicholas,
press the button.

00:18:17.060 --> 00:18:18.018
Let's see what happens.

00:18:20.560 --> 00:18:22.080
So there you see it.

00:18:22.080 --> 00:18:25.160
It made a bunch of constraints.

00:18:25.160 --> 00:18:26.380
Its aligned everything.

00:18:26.380 --> 00:18:28.740
Now resize the widget.

00:18:28.740 --> 00:18:29.715
Resize the screen.

00:18:32.510 --> 00:18:34.780
So that was done
just by drawing out

00:18:34.780 --> 00:18:39.070
the widgets in the right
space and it can align them.

00:18:39.070 --> 00:18:42.040
If you didn't like a
particular constraint it made,

00:18:42.040 --> 00:18:45.030
you could change it yourself or
you could add a new constraint.

00:18:45.030 --> 00:18:45.546
Add one.

00:18:45.546 --> 00:18:46.920
NICOLAS ROARD:
So, for example, I

00:18:46.920 --> 00:18:50.020
can still go and just
destroy those connections.

00:18:50.020 --> 00:18:52.390
And actually I really
wanted that one

00:18:52.390 --> 00:18:54.150
to be connected on the top.

00:18:54.150 --> 00:18:57.127
And actually here you can see
that we have a couple of mods

00:18:57.127 --> 00:18:58.210
to create this connection.

00:18:58.210 --> 00:19:01.230
So by default, it
creates, with the margin

00:19:01.230 --> 00:19:05.280
you indicate, in
the toolbar on top.

00:19:05.280 --> 00:19:07.460
But if I press
Control it actually

00:19:07.460 --> 00:19:10.566
will create a margin with
the current distance.

00:19:10.566 --> 00:19:11.940
And sometimes
that's kind of nice

00:19:11.940 --> 00:19:14.561
because if you just want
to create the constraint

00:19:14.561 --> 00:19:17.185
but you are actually happy with
the current way the widgets are

00:19:17.185 --> 00:19:20.490
positioned, that's a time saver.

00:19:20.490 --> 00:19:22.160
JOHN HOFORD: So another
thing you can do

00:19:22.160 --> 00:19:24.120
is if you have already
laid out and you

00:19:24.120 --> 00:19:25.750
added a bunch of
constraints to stuff

00:19:25.750 --> 00:19:28.990
but you needed one more
piece of UI on the system.

00:19:28.990 --> 00:19:30.850
Add some new piece
of UI in there.

00:19:33.980 --> 00:19:35.740
NICOLAS ROARD: It's OK.

00:19:35.740 --> 00:19:39.170
JOHN HOFORD: Now you can
just press the button again.

00:19:39.170 --> 00:19:41.420
NICOLAS ROARD: Yeah, and as
you saw when I dragged it,

00:19:41.420 --> 00:19:45.190
because the auto connect was
on, it automatically tried

00:19:45.190 --> 00:19:46.720
to create those connections.

00:19:46.720 --> 00:19:49.275
But you can also do
it with auto infer.

00:19:49.275 --> 00:19:50.650
JOHN HOFORD: And
you see it added

00:19:50.650 --> 00:19:53.554
all the constraints needed
to fill in that other widget.

00:19:53.554 --> 00:19:55.970
NICOLAS ROARD: And you can see
that the constraint that it

00:19:55.970 --> 00:19:59.130
created was not exactly the
same as the auto connection one.

00:19:59.130 --> 00:20:02.830
And that's actually
because auto connect only

00:20:02.830 --> 00:20:06.510
look at the amounts
that are close to you.

00:20:06.510 --> 00:20:08.730
So that's why it shows
you those guidelines.

00:20:08.730 --> 00:20:11.820
And those guidelines, if you
drop the widget at this moment,

00:20:11.820 --> 00:20:15.820
will create a constraint where
the guidelines originate from.

00:20:15.820 --> 00:20:20.350
The auto inference, on the other
hand, look at the big picture.

00:20:20.350 --> 00:20:24.240
JOHN HOFORD: So it might pick
things based on alignments.

00:20:24.240 --> 00:20:28.550
The probabilities are fairly
complicated and in the future

00:20:28.550 --> 00:20:34.060
we are trying to do more
advanced algorithms in there.

00:20:34.060 --> 00:20:35.480
OK, go.

00:20:35.480 --> 00:20:37.730
NICOLAS ROARD: I want to
repeat what John said earlier

00:20:37.730 --> 00:20:39.110
and it's very important.

00:20:39.110 --> 00:20:42.000
The auto inference is not
going to move things around,

00:20:42.000 --> 00:20:45.680
it will actually very hard
try to keep the widget

00:20:45.680 --> 00:20:47.140
where you put them.

00:20:47.140 --> 00:20:49.540
So that means that if you're
not happy with the result

00:20:49.540 --> 00:20:51.740
you can still go
back and edit it.

00:20:51.740 --> 00:20:55.700
And it also tries to make the
connection that makes sense.

00:20:55.700 --> 00:20:58.442
That might not be the
connection you had in mind,

00:20:58.442 --> 00:21:00.400
but that's the connection
that makes sense when

00:21:00.400 --> 00:21:02.050
you look at the entire system.

00:21:02.050 --> 00:21:04.720
It doesn't go crazy, that's
what I'm trying to say.

00:21:04.720 --> 00:21:07.550
And that's why also
it's important to have

00:21:07.550 --> 00:21:10.670
those manual capabilities
to aid the constraint.

00:21:10.670 --> 00:21:14.560
Because we see it more
as a symbiotic relation

00:21:14.560 --> 00:21:16.160
between you and a tool.

00:21:16.160 --> 00:21:18.540
The tool will help you,
might get you there

00:21:18.540 --> 00:21:22.150
like 90% of the way,
saves you a ton of time,

00:21:22.150 --> 00:21:26.540
and you can just
focus on what's left.

00:21:26.540 --> 00:21:29.270
JOHN HOFORD: Even if it doesn't
work out, you can always undo.

00:21:29.270 --> 00:21:31.360
NICOLAS ROARD: Yeah.

00:21:31.360 --> 00:21:38.430
All right, so let's simply build
something common like a row.

00:21:38.430 --> 00:21:40.400
So if I want to create
a row like that,

00:21:40.400 --> 00:21:43.720
I can start with-- I can
use the tools as well.

00:21:43.720 --> 00:21:46.860
If I just want to center,
I can just do that.

00:21:46.860 --> 00:21:55.350
And if I look at the recycle
view now it appears here.

00:21:55.350 --> 00:21:58.340
But of course it's
taking all the space.

00:21:58.340 --> 00:22:04.560
So if I mark now the construct
layouts to be wrap content,

00:22:04.560 --> 00:22:08.380
you can see-- whoops,
there is a refresh--

00:22:08.380 --> 00:22:12.060
how it's just integrated like
that into a recycle view.

00:22:12.060 --> 00:22:15.380
And you can just continue
and add more stuff.

00:22:15.380 --> 00:22:17.140
And that's it.

00:22:17.140 --> 00:22:19.310
You can easily to
build your rows.

00:22:19.310 --> 00:22:23.380
So it doesn't automatically
have to work with the entire UI.

00:22:23.380 --> 00:22:25.180
You can use it of
course for your main UI,

00:22:25.180 --> 00:22:28.990
but you can use it for something
as simple as a row like that.

00:22:28.990 --> 00:22:32.400
It is just a normal view group.

00:22:32.400 --> 00:22:36.630
And you can see the result.

00:22:36.630 --> 00:22:41.700
And let me just create--
just show you quickly how you

00:22:41.700 --> 00:22:43.380
create a new Layout file.

00:22:43.380 --> 00:22:48.540
So you can in Studio Preview
2.2, let's see, demo.

00:22:48.540 --> 00:22:51.240
You just go here and
type ContraintLayout.

00:22:51.240 --> 00:22:54.510
And what that will do--
it will create the file.

00:22:54.510 --> 00:22:58.120
It actually will automatically
add, if that was not the case,

00:22:58.120 --> 00:23:01.340
the dependency to
the support library

00:23:01.340 --> 00:23:04.380
that contains ContraintLayout.

00:23:04.380 --> 00:23:06.650
And you can then
build something.

00:23:06.650 --> 00:23:08.590
And you can still be
used to design mode,

00:23:08.590 --> 00:23:10.120
if you actually
prefer the design

00:23:10.120 --> 00:23:12.430
mode that still works fine.

00:23:12.430 --> 00:23:14.880
We just, in that case, show
the different constraint

00:23:14.880 --> 00:23:17.040
as an overlay on
top of the system.

00:23:19.680 --> 00:23:21.560
Or you can just
switch to Blueprint.

00:23:21.560 --> 00:23:23.580
I tend to prefer
Blueprint because it just

00:23:23.580 --> 00:23:25.840
makes things easier for me
when I'm working on Layout.

00:23:25.840 --> 00:23:28.550
But the design mode is
really useful to show you

00:23:28.550 --> 00:23:30.190
how things look.

00:23:30.190 --> 00:23:35.460
So if you want to just build
the typical dialogue like that,

00:23:35.460 --> 00:23:40.180
you could have something
up just like that,

00:23:40.180 --> 00:23:46.710
and let's say a couple of--
let's actually use e-mail.

00:23:46.710 --> 00:23:52.800
And just plain text
here, up, and then you

00:23:52.800 --> 00:24:00.580
can see that, up, the connection
box here, up like that.

00:24:00.580 --> 00:24:02.470
And that's it.

00:24:02.470 --> 00:24:05.380
And if we were doing anything
else I've got my dialogue here.

00:24:05.380 --> 00:24:10.000
And you can see it resize, up,
if the repaint want to repaint.

00:24:10.000 --> 00:24:12.740
No it doesn't want to repaint.

00:24:12.740 --> 00:24:14.140
JOHN HOFORD: Sorry.

00:24:14.140 --> 00:24:16.000
You might want to--

00:24:16.000 --> 00:24:17.510
NICOLAS ROARD: So,
and you can still

00:24:17.510 --> 00:24:20.124
go back, kill all the
constraints, do the inference.

00:24:20.124 --> 00:24:21.540
And you can see
that the inference

00:24:21.540 --> 00:24:23.460
does a pretty good job as well.

00:24:23.460 --> 00:24:25.757
And you can not here
that we constrain

00:24:25.757 --> 00:24:26.965
on the baseline for instance.

00:24:29.790 --> 00:24:32.340
And I think that's
about it for the demo.

00:24:32.340 --> 00:24:34.310
So we can go back to the slides.

00:24:34.310 --> 00:24:38.540
JOHN HOFORD: Yeah, go ahead.

00:24:38.540 --> 00:24:40.516
You talk about this stuff.

00:24:40.516 --> 00:24:41.890
NICOLAS ROARD:
All right, so just

00:24:41.890 --> 00:24:44.452
to summarize a little
bit what we showed you.

00:24:44.452 --> 00:24:46.910
So there is a new constraint--
there is a new Layout called

00:24:46.910 --> 00:24:48.190
ContraintLayout.

00:24:48.190 --> 00:24:49.510
It's a small unbundled library.

00:24:49.510 --> 00:24:51.470
It's about 100 kilobytes.

00:24:51.470 --> 00:24:54.670
Because it's unbundled we think
we'll be able to move fast

00:24:54.670 --> 00:24:57.420
and that new features--
it's really built

00:24:57.420 --> 00:24:59.470
on top of a very flexible base.

00:24:59.470 --> 00:25:05.370
And what's good for us is that
we can control how fast we

00:25:05.370 --> 00:25:07.330
can move on the developments
and to make sure

00:25:07.330 --> 00:25:10.420
that the performances
will sustain.

00:25:10.420 --> 00:25:12.815
It's compatible with
most everything out there

00:25:12.815 --> 00:25:14.600
and it is active
development mode.

00:25:14.600 --> 00:25:16.510
I want to emphasize this point.

00:25:16.510 --> 00:25:19.200
We just released it this week.

00:25:19.200 --> 00:25:21.987
It's coming just as
an alpha preview.

00:25:21.987 --> 00:25:23.820
We definitely encourage
you to check it out.

00:25:23.820 --> 00:25:28.700
Check to UI builder, and
there's certainly some bugs.

00:25:28.700 --> 00:25:30.560
We will fix them.

00:25:30.560 --> 00:25:33.920
But the reason we actually
announced it at I/O

00:25:33.920 --> 00:25:38.269
was because we think it's ready
enough to gather some feedback.

00:25:38.269 --> 00:25:40.060
And that's really
something we are keen on.

00:25:40.060 --> 00:25:41.700
We want to hear from you.

00:25:41.700 --> 00:25:43.480
Our job is to make
your life easier.

00:25:46.070 --> 00:25:50.080
Under UI Builder-- as you saw
the UI Builder is kind of live.

00:25:50.080 --> 00:25:54.190
Try to automatically react
to your actions to help you,

00:25:54.190 --> 00:25:58.250
to give you some
guidance, and you

00:25:58.250 --> 00:26:00.820
can use inference to
create connections.

00:26:00.820 --> 00:26:02.269
It really save you time.

00:26:02.269 --> 00:26:03.810
But you still have
to manual edition.

00:26:03.810 --> 00:26:08.630
You can still go back
and just edit things.

00:26:08.630 --> 00:26:11.380
And same as the
ContraintLayout itself, it's

00:26:11.380 --> 00:26:13.010
a active development.

00:26:13.010 --> 00:26:14.790
It's the same thing
that works on both,

00:26:14.790 --> 00:26:17.680
which is why they are really
well integrated together.

00:26:17.680 --> 00:26:20.230
So all of that I said
for ContraintLayout

00:26:20.230 --> 00:26:22.650
out also definitively
for the UI Builder.

00:26:22.650 --> 00:26:26.200
And, by the way, in
Studio 2.2 Preview

00:26:26.200 --> 00:26:29.110
there is this new UI
Builder for ContraintLayout,

00:26:29.110 --> 00:26:32.660
but there is also a new UI
Builder for the older Layout

00:26:32.660 --> 00:26:34.930
that you already use
in your applications.

00:26:34.930 --> 00:26:38.510
And if you used the UI
Builder that was there

00:26:38.510 --> 00:26:40.640
in previous version of
Studio, that new UI Builder

00:26:40.640 --> 00:26:42.370
is definitely a step up.

00:26:42.370 --> 00:26:49.710
And for it as well it
will get better over time.

00:26:49.710 --> 00:26:53.110
All right, let me talk
briefly about what we have

00:26:53.110 --> 00:26:57.000
in mind for the next versions.

00:26:57.000 --> 00:27:00.530
So if you remember the slide
from earlier about the solver

00:27:00.530 --> 00:27:04.560
and the equation
and the constraints,

00:27:04.560 --> 00:27:06.310
clearly we're going
to focus on-- probably

00:27:06.310 --> 00:27:08.476
in the short term that's
mostly what we'd be working

00:27:08.476 --> 00:27:09.810
on-- improving the performance.

00:27:09.810 --> 00:27:13.010
We have a ton of optimization
that we haven't, obvious ones,

00:27:13.010 --> 00:27:15.090
that we haven't yet done.

00:27:15.090 --> 00:27:18.040
So we really want
to focus on that.

00:27:18.040 --> 00:27:20.004
For the equation themselves
that will generate

00:27:20.004 --> 00:27:22.170
from the constraints, we
have some interesting ideas

00:27:22.170 --> 00:27:24.870
on how to automatically
take them and simplify

00:27:24.870 --> 00:27:28.490
them and optimize them.

00:27:28.490 --> 00:27:32.060
But for the constraints,
there is a couple of things

00:27:32.060 --> 00:27:37.270
that we can do and-- actually
we could have demoed it,

00:27:37.270 --> 00:27:40.520
but in addition to
those basic constraints

00:27:40.520 --> 00:27:44.706
that we demonstrated, we
have the concept of helpers.

00:27:44.706 --> 00:27:48.890
And one of the helpers that we
have in the preview actually

00:27:48.890 --> 00:27:50.670
is a guideline object.

00:27:50.670 --> 00:27:53.684
So you can create a guideline--
think of Photoshop guideline,

00:27:53.684 --> 00:27:56.100
something like that, something
that your designer probably

00:27:56.100 --> 00:27:57.110
work with.

00:27:57.110 --> 00:27:58.550
And you can just
set a guideline,

00:27:58.550 --> 00:28:00.390
make it related to
one side or the other,

00:28:00.390 --> 00:28:04.180
or percentage of the
dimension of the container,

00:28:04.180 --> 00:28:08.650
and simply constrain your
widget to that guideline.

00:28:08.650 --> 00:28:11.750
The interesting thing though
is that this guideline is not

00:28:11.750 --> 00:28:13.910
a new layout.

00:28:13.910 --> 00:28:16.380
This is just an object
that we use to generate

00:28:16.380 --> 00:28:17.930
the right equations.

00:28:17.930 --> 00:28:22.070
And we have a ton of ideas of
all the type of virtual object

00:28:22.070 --> 00:28:27.220
like that-- that will help you
create more advanced Layouts.

00:28:27.220 --> 00:28:29.830
Another thing that did
not make the cut for I/O

00:28:29.830 --> 00:28:33.815
but that we know is important,
is that all we've talked so far

00:28:33.815 --> 00:28:38.080
and that we demoed lets you
creates constraints, position

00:28:38.080 --> 00:28:40.720
constraints, from one to one.

00:28:40.720 --> 00:28:42.210
Of course it can
be from one widget

00:28:42.210 --> 00:28:44.680
to many widgets
for the two axes.

00:28:44.680 --> 00:28:49.030
But its going to be from one
widget to do something else.

00:28:49.030 --> 00:28:52.490
And often you want to
actually consider position

00:28:52.490 --> 00:28:53.810
in terms of grouping.

00:28:53.810 --> 00:28:57.230
You want to say, yeah, sure,
but I want this group of stuff

00:28:57.230 --> 00:28:59.440
to be vertically positioned.

00:28:59.440 --> 00:29:03.090
And we have a concept
of virtual containers.

00:29:03.090 --> 00:29:05.300
And similarly to the
guidelines, those things

00:29:05.300 --> 00:29:07.530
don't have to end up
in the view hierarchy.

00:29:07.530 --> 00:29:10.440
So once we create them
they will actually

00:29:10.440 --> 00:29:12.560
appear in the XML
as normal tags.

00:29:12.560 --> 00:29:14.850
So you"ll see them.

00:29:14.850 --> 00:29:18.510
But when we inflate the XML we
can then drop them on the floor

00:29:18.510 --> 00:29:21.060
and simply use them to
generate the right equations.

00:29:21.060 --> 00:29:25.290
So you still have the
power of using groups.

00:29:25.290 --> 00:29:28.540
We've got the implication in
terms of the view hierarchy.

00:29:28.540 --> 00:29:31.090
You can think of this
one system as a way

00:29:31.090 --> 00:29:34.280
of decoupling the layout
from the view hierarchy.

00:29:34.280 --> 00:29:36.370
And the shallower
the view hierarchy

00:29:36.370 --> 00:29:38.040
the better in terms
of performances.

00:29:38.040 --> 00:29:41.300
But there are also other things.

00:29:41.300 --> 00:29:44.010
One particular thing that
I'm really keen on exploring

00:29:44.010 --> 00:29:46.660
is if you have a very
shallow view hierarchy, that

00:29:46.660 --> 00:29:50.980
should make your life a ton
easier dealing with animations.

00:29:50.980 --> 00:29:53.190
I think if you try
to do animation

00:29:53.190 --> 00:29:55.400
with very deep
nested hierarchies it

00:29:55.400 --> 00:29:59.410
can be very annoying,
because something that

00:29:59.410 --> 00:30:02.530
is down in the hierarchy
you want it to maybe move

00:30:02.530 --> 00:30:03.710
somewhere else.

00:30:03.710 --> 00:30:06.360
And it's very difficult
to do right now.

00:30:06.360 --> 00:30:09.030
But if you actually do not
have an actual view hierarchy

00:30:09.030 --> 00:30:13.190
and everything is kind
of flat, it's much nicer.

00:30:13.190 --> 00:30:16.360
And of course for the inference
and tooling we have some

00:30:16.360 --> 00:30:19.770
interesting ideas on how to
let you import a setting in 200

00:30:19.770 --> 00:30:21.000
Studio .

00:30:21.000 --> 00:30:25.010
And the concept is simply we
want to give you a step up.

00:30:25.010 --> 00:30:26.510
Don't start from scratch.

00:30:26.510 --> 00:30:28.030
If your designer
gives you something

00:30:28.030 --> 00:30:29.946
maybe there is something
in what it gives you,

00:30:29.946 --> 00:30:32.920
or she gives you,
that we can use.

00:30:32.920 --> 00:30:36.220
And finally, John might have
something to say about that.

00:30:36.220 --> 00:30:39.710
JOHN HOFORD: So the inference
and the tools combination

00:30:39.710 --> 00:30:45.274
that we see a lot of future
of making your life very easy.

00:30:45.274 --> 00:30:46.690
So one of the
things we want to do

00:30:46.690 --> 00:30:52.380
is back the probability
by machine learning.

00:30:52.380 --> 00:30:55.230
So look at what
layouts are out there.

00:30:55.230 --> 00:30:58.370
What are all the Google
Layouts that they've created?

00:30:58.370 --> 00:31:00.210
And see how they are working.

00:31:00.210 --> 00:31:03.140
And try to learn from them.

00:31:03.140 --> 00:31:06.945
Tools to help you
more easily beautify

00:31:06.945 --> 00:31:11.620
and organize and arrange
your widgets on the screen.

00:31:11.620 --> 00:31:14.330
More dynamics
associated with where

00:31:14.330 --> 00:31:16.870
I put things on the screen.

00:31:16.870 --> 00:31:19.980
It will automatically infer
containers, virtual containers,

00:31:19.980 --> 00:31:22.690
and guidelines, and
things like that as well.

00:31:22.690 --> 00:31:28.729
So there's a lot of room to
grow in that area as well.

00:31:28.729 --> 00:31:29.770
NICOLAS ROARD: All right.

00:31:29.770 --> 00:31:31.892
Thank you for you attendance.

00:31:31.892 --> 00:31:32.850
Check out the code lab.

00:31:32.850 --> 00:31:34.670
There's a great
code lab that lets

00:31:34.670 --> 00:31:38.340
you-- walk you through the first
steps in using ContraintLayout.

00:31:38.340 --> 00:31:39.960
Download the preview.

00:31:39.960 --> 00:31:42.159
Beyond the ContraintLayout
there's a new UA Builder.

00:31:42.159 --> 00:31:44.700
There's a ton of things, as you
saw in the previous sessions,

00:31:44.700 --> 00:31:46.380
are supposed to do.

00:31:46.380 --> 00:31:49.940
File bugs, you can use
Tool Studio, a tag.

00:31:49.940 --> 00:31:54.636
And we can take some Q&amp;A now
and also mikes that you can

00:31:54.636 --> 00:31:55.760
[INAUDIBLE] to if you want.

00:31:55.760 --> 00:31:58.180
JOHN HOFORD: OK, thank you.

