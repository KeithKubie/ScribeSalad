WEBVTT
Kind: captions
Language: en

00:00:00.460 --> 00:00:05.600
As we've seen so far, motion can be
a powerful tool to direct attention, and

00:00:05.600 --> 00:00:08.780
provide cues about how something works.

00:00:08.780 --> 00:00:10.915
But as all [LAUGH] Spiderman fans know,

00:00:10.915 --> 00:00:14.330
with great power comes
great responsibility.

00:00:14.330 --> 00:00:18.090
Motion needs to be used purposefully and
judiciously.

00:00:18.090 --> 00:00:19.900
Here are some practical tips for

00:00:19.900 --> 00:00:25.230
designing motion that enhances the
experience, rather than detract from it.

00:00:25.230 --> 00:00:27.020
&gt;&gt; Let's start off with some basics.

00:00:27.020 --> 00:00:29.360
How long should your animations run for?

00:00:29.360 --> 00:00:30.440
Here's some examples.

00:00:30.440 --> 00:00:32.540
The first one here is too slow.

00:00:32.540 --> 00:00:35.320
The animation feels gratuitous.

00:00:35.320 --> 00:00:36.930
The second one is too fast.

00:00:36.930 --> 00:00:39.600
It feels almost accidental.

00:00:39.600 --> 00:00:41.840
The third is just right.

00:00:41.840 --> 00:00:44.900
Animations should be slow enough
to convey their meaning, but

00:00:44.900 --> 00:00:49.390
as fast possible, so that they don't
get in the way and become annoying.

00:00:49.390 --> 00:00:54.960
A good rule of thumb is to use
animations that are around 300ms long.

00:00:54.960 --> 00:00:58.460
And tweak from there if they
feel too slow or too fast.

00:00:58.460 --> 00:01:00.630
Remember that in general, designers and

00:01:00.630 --> 00:01:06.300
developers alike, tend to use animations
that are longer than users would prefer.

00:01:06.300 --> 00:01:08.710
So if you think you need
one full second for

00:01:08.710 --> 00:01:13.600
an animation, you probably actually
need a lot less to get the point across.

00:01:13.600 --> 00:01:17.400
And another tip, where possible,
use the size of the object and

00:01:17.400 --> 00:01:21.270
the distance it needs to move,
to help you time the animation.

00:01:21.270 --> 00:01:24.570
This will make sure that animations
that can have varying start and

00:01:24.570 --> 00:01:28.910
stop states,
feel right in every situation.

00:01:28.910 --> 00:01:31.650
Now that we know how long
animation should run for,

00:01:31.650 --> 00:01:33.990
let's talk about interpolation.

00:01:33.990 --> 00:01:38.010
In the real world, objects don't
start or stop moving instantaneously,

00:01:38.010 --> 00:01:39.930
like in this red circle.

00:01:39.930 --> 00:01:45.460
They accelerate and decelerate
to get from point a to point b.

00:01:45.460 --> 00:01:48.460
Now, material design takes
this a step further.

00:01:48.460 --> 00:01:51.640
Motion curves in
material are asymmetric.

00:01:51.640 --> 00:01:54.390
Meaning as objects move,
their acceleration and

00:01:54.390 --> 00:01:55.830
deceleration aren't equal.

00:01:56.940 --> 00:02:00.652
For objects that move across the screen,
you can use a fast-out,

00:02:00.652 --> 00:02:02.740
slow-in transition.

00:02:02.740 --> 00:02:05.900
Because most of the movement
happens early on,

00:02:05.900 --> 00:02:09.430
items spend more of the transition
near their final position.

00:02:10.690 --> 00:02:14.350
The effect is that animations
feel fast and precise.

00:02:14.350 --> 00:02:17.250
This also reduces a lot of
the negative effect that

00:02:17.250 --> 00:02:19.920
can come from too much motion.

00:02:19.920 --> 00:02:23.830
And when elements are entering or
exiting the scene, do so

00:02:23.830 --> 00:02:25.640
at full velocity.

00:02:25.640 --> 00:02:26.770
For objects entering,

00:02:26.770 --> 00:02:30.660
the linear-out slow-in
interpolator works well for this.

00:02:30.660 --> 00:02:36.060
For objects exiting, you can use
the fast-out, linear-in interpolators.

00:02:36.060 --> 00:02:40.070
Finally, let's talk about the notion
of user-initiated change.

00:02:40.070 --> 00:02:43.910
This is really,
really important in material design.

00:02:43.910 --> 00:02:47.690
Almost all state changes start
with something the user does.

00:02:47.690 --> 00:02:49.670
User input, such as touch and

00:02:49.670 --> 00:02:54.960
keyboard focus, is thus at the very
center of motion story material design.

00:02:54.960 --> 00:02:58.320
Here's an example similar to
what we saw in lesson two.

00:02:58.320 --> 00:03:02.050
Notice how the surfaces respond
to touch by lifting up and

00:03:02.050 --> 00:03:04.790
showing temporary ink ripples.

00:03:04.790 --> 00:03:09.210
Coordinating motion around the user's
touchpoint makes complex state changes

00:03:09.210 --> 00:03:12.020
easier to visually process and
understand.

00:03:12.020 --> 00:03:16.300
In this example, when transitioning
between two states, animations across

00:03:16.300 --> 00:03:20.540
the screen are staggered based on
their distance from the touch point.

00:03:20.540 --> 00:03:24.280
The result is that the motion feels
more intentional and connected to you.

00:03:24.280 --> 00:03:26.020
It makes you feel powerful and
in control.

