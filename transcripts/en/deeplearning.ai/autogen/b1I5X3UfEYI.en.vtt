WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:02.119
 
the cost function of the nearest our

00:00:02.119 --> 00:00:02.129
the cost function of the nearest our
 

00:00:02.129 --> 00:00:04.460
the cost function of the nearest our
transfer algorithm have a Content cost

00:00:04.460 --> 00:00:04.470
transfer algorithm have a Content cost
 

00:00:04.470 --> 00:00:07.550
transfer algorithm have a Content cost
component and a style cost component

00:00:07.550 --> 00:00:07.560
component and a style cost component
 

00:00:07.560 --> 00:00:10.430
component and a style cost component
let's start by defining the content cost

00:00:10.430 --> 00:00:10.440
let's start by defining the content cost
 

00:00:10.440 --> 00:00:12.650
let's start by defining the content cost
component remember that this is the

00:00:12.650 --> 00:00:12.660
component remember that this is the
 

00:00:12.660 --> 00:00:15.560
component remember that this is the
overall cost function of the neural

00:00:15.560 --> 00:00:15.570
overall cost function of the neural
 

00:00:15.570 --> 00:00:18.470
overall cost function of the neural
style transfer algorithm so let's figure

00:00:18.470 --> 00:00:18.480
style transfer algorithm so let's figure
 

00:00:18.480 --> 00:00:20.660
style transfer algorithm so let's figure
out what should the content cost

00:00:20.660 --> 00:00:20.670
out what should the content cost
 

00:00:20.670 --> 00:00:22.970
out what should the content cost
function be let's say that you use

00:00:22.970 --> 00:00:22.980
function be let's say that you use
 

00:00:22.980 --> 00:00:25.550
function be let's say that you use
hidden layer L to compute the content

00:00:25.550 --> 00:00:25.560
hidden layer L to compute the content
 

00:00:25.560 --> 00:00:29.089
hidden layer L to compute the content
cost if L is a very small number if you

00:00:29.089 --> 00:00:29.099
cost if L is a very small number if you
 

00:00:29.099 --> 00:00:32.900
cost if L is a very small number if you
use a layer 1 then it would really force

00:00:32.900 --> 00:00:32.910
use a layer 1 then it would really force
 

00:00:32.910 --> 00:00:35.420
use a layer 1 then it would really force
your generate the image to pixel values

00:00:35.420 --> 00:00:35.430
your generate the image to pixel values
 

00:00:35.430 --> 00:00:37.549
your generate the image to pixel values
very similar up to your content image

00:00:37.549 --> 00:00:37.559
very similar up to your content image
 

00:00:37.559 --> 00:00:39.470
very similar up to your content image
whereas if you use a very deep layer

00:00:39.470 --> 00:00:39.480
whereas if you use a very deep layer
 

00:00:39.480 --> 00:00:41.600
whereas if you use a very deep layer
then it's just asking well if there's a

00:00:41.600 --> 00:00:41.610
then it's just asking well if there's a
 

00:00:41.610 --> 00:00:43.459
then it's just asking well if there's a
dump in your content image then make

00:00:43.459 --> 00:00:43.469
dump in your content image then make
 

00:00:43.469 --> 00:00:44.869
dump in your content image then make
sure there's a dog somewhere and you

00:00:44.869 --> 00:00:44.879
sure there's a dog somewhere and you
 

00:00:44.879 --> 00:00:47.569
sure there's a dog somewhere and you
generate an image so in practice the

00:00:47.569 --> 00:00:47.579
generate an image so in practice the
 

00:00:47.579 --> 00:00:49.940
generate an image so in practice the
layer L chosen is somewhere in between

00:00:49.940 --> 00:00:49.950
layer L chosen is somewhere in between
 

00:00:49.950 --> 00:00:52.610
layer L chosen is somewhere in between
is neither too shallow nor too deep in

00:00:52.610 --> 00:00:52.620
is neither too shallow nor too deep in
 

00:00:52.620 --> 00:00:54.860
is neither too shallow nor too deep in
the neural network and because you play

00:00:54.860 --> 00:00:54.870
the neural network and because you play
 

00:00:54.870 --> 00:00:56.720
the neural network and because you play
this yourself in the programming

00:00:56.720 --> 00:00:56.730
this yourself in the programming
 

00:00:56.730 --> 00:00:58.189
this yourself in the programming
exercise that you didn't end it this

00:00:58.189 --> 00:00:58.199
exercise that you didn't end it this
 

00:00:58.199 --> 00:01:00.319
exercise that you didn't end it this
week I'll leave you to gain some

00:01:00.319 --> 00:01:00.329
week I'll leave you to gain some
 

00:01:00.329 --> 00:01:02.660
week I'll leave you to gain some
intuitions with the concrete examples in

00:01:02.660 --> 00:01:02.670
intuitions with the concrete examples in
 

00:01:02.670 --> 00:01:04.759
intuitions with the concrete examples in
the programming exercise as well but

00:01:04.759 --> 00:01:04.769
the programming exercise as well but
 

00:01:04.769 --> 00:01:06.770
the programming exercise as well but
usually L is chosen to be somewhere in

00:01:06.770 --> 00:01:06.780
usually L is chosen to be somewhere in
 

00:01:06.780 --> 00:01:08.870
usually L is chosen to be somewhere in
the middle of the layers of the neural

00:01:08.870 --> 00:01:08.880
the middle of the layers of the neural
 

00:01:08.880 --> 00:01:11.469
the middle of the layers of the neural
network neither too shallow nor too deep

00:01:11.469 --> 00:01:11.479
network neither too shallow nor too deep
 

00:01:11.479 --> 00:01:13.969
network neither too shallow nor too deep
what you can do is then use a pre

00:01:13.969 --> 00:01:13.979
what you can do is then use a pre
 

00:01:13.979 --> 00:01:17.330
what you can do is then use a pre
trained confident maybe AVG network or

00:01:17.330 --> 00:01:17.340
trained confident maybe AVG network or
 

00:01:17.340 --> 00:01:19.280
trained confident maybe AVG network or
it could be some other neural network as

00:01:19.280 --> 00:01:19.290
it could be some other neural network as
 

00:01:19.290 --> 00:01:22.820
it could be some other neural network as
well and now you want to measure given a

00:01:22.820 --> 00:01:22.830
well and now you want to measure given a
 

00:01:22.830 --> 00:01:25.609
well and now you want to measure given a
content image and given a generated

00:01:25.609 --> 00:01:25.619
content image and given a generated
 

00:01:25.619 --> 00:01:29.960
content image and given a generated
image how similar are they in content so

00:01:29.960 --> 00:01:29.970
image how similar are they in content so
 

00:01:29.970 --> 00:01:33.050
image how similar are they in content so
let's let this a supersuit square

00:01:33.050 --> 00:01:33.060
let's let this a supersuit square
 

00:01:33.060 --> 00:01:36.800
let's let this a supersuit square
bracket around racket c and this be the

00:01:36.800 --> 00:01:36.810
bracket around racket c and this be the
 

00:01:36.810 --> 00:01:39.319
bracket around racket c and this be the
activations of layer L on these two

00:01:39.319 --> 00:01:39.329
activations of layer L on these two
 

00:01:39.329 --> 00:01:43.969
activations of layer L on these two
images on the images C and G so if these

00:01:43.969 --> 00:01:43.979
images on the images C and G so if these
 

00:01:43.979 --> 00:01:47.690
images on the images C and G so if these
two activations are similar then that

00:01:47.690 --> 00:01:47.700
two activations are similar then that
 

00:01:47.700 --> 00:01:49.940
two activations are similar then that
would seem to imply that both images

00:01:49.940 --> 00:01:49.950
would seem to imply that both images
 

00:01:49.950 --> 00:01:53.870
would seem to imply that both images
have similar content so what we'll do is

00:01:53.870 --> 00:01:53.880
have similar content so what we'll do is
 

00:01:53.880 --> 00:02:00.560
have similar content so what we'll do is
define J content C comma G as just how

00:02:00.560 --> 00:02:00.570
define J content C comma G as just how
 

00:02:00.570 --> 00:02:02.749
define J content C comma G as just how
different how sooner how different are

00:02:02.749 --> 00:02:02.759
different how sooner how different are
 

00:02:02.759 --> 00:02:06.139
different how sooner how different are
these two activations so we'll take the

00:02:06.139 --> 00:02:06.149
these two activations so we'll take the
 

00:02:06.149 --> 00:02:08.540
these two activations so we'll take the
element wise difference between these

00:02:08.540 --> 00:02:08.550
element wise difference between these
 

00:02:08.550 --> 00:02:11.220
element wise difference between these
hidden unit activations in layer

00:02:11.220 --> 00:02:11.230
hidden unit activations in layer
 

00:02:11.230 --> 00:02:13.920
hidden unit activations in layer
between when you pass in the content

00:02:13.920 --> 00:02:13.930
between when you pass in the content
 

00:02:13.930 --> 00:02:16.350
between when you pass in the content
image compared to when you pass in the

00:02:16.350 --> 00:02:16.360
image compared to when you pass in the
 

00:02:16.360 --> 00:02:19.620
image compared to when you pass in the
generated image and take that squared

00:02:19.620 --> 00:02:19.630
generated image and take that squared
 

00:02:19.630 --> 00:02:21.510
generated image and take that squared
and you can have our normalization

00:02:21.510 --> 00:02:21.520
and you can have our normalization
 

00:02:21.520 --> 00:02:24.540
and you can have our normalization
constant in front or not such as 1 over

00:02:24.540 --> 00:02:24.550
constant in front or not such as 1 over
 

00:02:24.550 --> 00:02:26.010
constant in front or not such as 1 over
2 or something else it doesn't really

00:02:26.010 --> 00:02:26.020
2 or something else it doesn't really
 

00:02:26.020 --> 00:02:30.270
2 or something else it doesn't really
matter since this will be can be

00:02:30.270 --> 00:02:30.280
matter since this will be can be
 

00:02:30.280 --> 00:02:32.340
matter since this will be can be
adjusted as well by this hybrid

00:02:32.340 --> 00:02:32.350
adjusted as well by this hybrid
 

00:02:32.350 --> 00:02:37.080
adjusted as well by this hybrid
parameter alpha so just be clear I'm

00:02:37.080 --> 00:02:37.090
parameter alpha so just be clear I'm
 

00:02:37.090 --> 00:02:40.200
parameter alpha so just be clear I'm
using this notation as if both of these

00:02:40.200 --> 00:02:40.210
using this notation as if both of these
 

00:02:40.210 --> 00:02:43.020
using this notation as if both of these
have been unrolled into vectors so then

00:02:43.020 --> 00:02:43.030
have been unrolled into vectors so then
 

00:02:43.030 --> 00:02:45.900
have been unrolled into vectors so then
this becomes the squared of the l2 norm

00:02:45.900 --> 00:02:45.910
this becomes the squared of the l2 norm
 

00:02:45.910 --> 00:02:47.970
this becomes the squared of the l2 norm
between this and this

00:02:47.970 --> 00:02:47.980
between this and this
 

00:02:47.980 --> 00:02:50.220
between this and this
after you've unrolled down both in two

00:02:50.220 --> 00:02:50.230
after you've unrolled down both in two
 

00:02:50.230 --> 00:02:53.100
after you've unrolled down both in two
vectors but it's really just the

00:02:53.100 --> 00:02:53.110
vectors but it's really just the
 

00:02:53.110 --> 00:02:55.200
vectors but it's really just the
element-wise sum of squared differences

00:02:55.200 --> 00:02:55.210
element-wise sum of squared differences
 

00:02:55.210 --> 00:03:00.480
element-wise sum of squared differences
between these two activation but it's

00:03:00.480 --> 00:03:00.490
between these two activation but it's
 

00:03:00.490 --> 00:03:03.030
between these two activation but it's
really just the element-wise sum of

00:03:03.030 --> 00:03:03.040
really just the element-wise sum of
 

00:03:03.040 --> 00:03:05.250
really just the element-wise sum of
squares of differences between the

00:03:05.250 --> 00:03:05.260
squares of differences between the
 

00:03:05.260 --> 00:03:07.500
squares of differences between the
activations in layer l between the

00:03:07.500 --> 00:03:07.510
activations in layer l between the
 

00:03:07.510 --> 00:03:12.660
activations in layer l between the
images C and G and so when later you

00:03:12.660 --> 00:03:12.670
images C and G and so when later you
 

00:03:12.670 --> 00:03:15.150
images C and G and so when later you
perform gradient descents on J of G to

00:03:15.150 --> 00:03:15.160
perform gradient descents on J of G to
 

00:03:15.160 --> 00:03:17.730
perform gradient descents on J of G to
try to find a value of G so that the

00:03:17.730 --> 00:03:17.740
try to find a value of G so that the
 

00:03:17.740 --> 00:03:20.250
try to find a value of G so that the
overall cost is low this will

00:03:20.250 --> 00:03:20.260
overall cost is low this will
 

00:03:20.260 --> 00:03:22.200
overall cost is low this will
incentivize the algorithm to find an

00:03:22.200 --> 00:03:22.210
incentivize the algorithm to find an
 

00:03:22.210 --> 00:03:24.420
incentivize the algorithm to find an
image G so that these hidden their

00:03:24.420 --> 00:03:24.430
image G so that these hidden their
 

00:03:24.430 --> 00:03:27.150
image G so that these hidden their
activations are similar to what you got

00:03:27.150 --> 00:03:27.160
activations are similar to what you got
 

00:03:27.160 --> 00:03:30.000
activations are similar to what you got
for the content image so that's how you

00:03:30.000 --> 00:03:30.010
for the content image so that's how you
 

00:03:30.010 --> 00:03:32.400
for the content image so that's how you
define the content cost function for

00:03:32.400 --> 00:03:32.410
define the content cost function for
 

00:03:32.410 --> 00:03:34.320
define the content cost function for
neuro style transfer Nick's

00:03:34.320 --> 00:03:34.330
neuro style transfer Nick's
 

00:03:34.330 --> 00:03:38.940
neuro style transfer Nick's
let's move on to the style cost function

