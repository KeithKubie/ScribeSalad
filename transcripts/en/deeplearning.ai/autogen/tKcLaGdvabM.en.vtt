WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:01.810 align:start position:0%
 
in<00:00:00.179><c> the</c><00:00:00.299><c> previous</c><00:00:00.630><c> video</c><00:00:00.989><c> I</c><00:00:01.199><c> mentioned</c><00:00:01.319><c> that</c>

00:00:01.810 --> 00:00:01.820 align:start position:0%
in the previous video I mentioned that
 

00:00:01.820 --> 00:00:04.039 align:start position:0%
in the previous video I mentioned that
broadcasting<00:00:02.820><c> is</c><00:00:03.000><c> another</c><00:00:03.570><c> technique</c><00:00:03.990><c> that</c>

00:00:04.039 --> 00:00:04.049 align:start position:0%
broadcasting is another technique that
 

00:00:04.049 --> 00:00:05.930 align:start position:0%
broadcasting is another technique that
you<00:00:04.259><c> can</c><00:00:04.410><c> use</c><00:00:04.620><c> to</c><00:00:04.859><c> make</c><00:00:05.009><c> your</c><00:00:05.040><c> Python</c><00:00:05.520><c> code</c><00:00:05.730><c> run</c>

00:00:05.930 --> 00:00:05.940 align:start position:0%
you can use to make your Python code run
 

00:00:05.940 --> 00:00:08.570 align:start position:0%
you can use to make your Python code run
faster<00:00:06.420><c> in</c><00:00:06.839><c> this</c><00:00:07.259><c> video</c><00:00:07.560><c> let's</c><00:00:08.069><c> delve</c><00:00:08.280><c> into</c>

00:00:08.570 --> 00:00:08.580 align:start position:0%
faster in this video let's delve into
 

00:00:08.580 --> 00:00:10.669 align:start position:0%
faster in this video let's delve into
how<00:00:08.849><c> broadcasting</c><00:00:09.690><c> in</c><00:00:09.900><c> Python</c><00:00:10.530><c> actually</c>

00:00:10.669 --> 00:00:10.679 align:start position:0%
how broadcasting in Python actually
 

00:00:10.679 --> 00:00:13.310 align:start position:0%
how broadcasting in Python actually
works<00:00:11.099><c> let's</c><00:00:11.940><c> motivate</c><00:00:12.179><c> broadcasting</c><00:00:13.170><c> with</c>

00:00:13.310 --> 00:00:13.320 align:start position:0%
works let's motivate broadcasting with
 

00:00:13.320 --> 00:00:15.680 align:start position:0%
works let's motivate broadcasting with
an<00:00:13.440><c> example</c><00:00:13.920><c> in</c><00:00:14.160><c> this</c><00:00:14.429><c> matrix</c><00:00:14.700><c> I've</c><00:00:15.120><c> shown</c><00:00:15.389><c> the</c>

00:00:15.680 --> 00:00:15.690 align:start position:0%
an example in this matrix I've shown the
 

00:00:15.690 --> 00:00:18.529 align:start position:0%
an example in this matrix I've shown the
number<00:00:16.080><c> of</c><00:00:16.199><c> calories</c><00:00:16.859><c> from</c><00:00:17.539><c> carbohydrates</c>

00:00:18.529 --> 00:00:18.539 align:start position:0%
number of calories from carbohydrates
 

00:00:18.539 --> 00:00:20.900 align:start position:0%
number of calories from carbohydrates
proteins<00:00:19.080><c> and</c><00:00:19.260><c> fats</c><00:00:19.529><c> in</c><00:00:19.800><c> hundred</c><00:00:20.400><c> grams</c><00:00:20.609><c> of</c>

00:00:20.900 --> 00:00:20.910 align:start position:0%
proteins and fats in hundred grams of
 

00:00:20.910 --> 00:00:22.910 align:start position:0%
proteins and fats in hundred grams of
four<00:00:21.359><c> different</c><00:00:21.750><c> foods</c><00:00:21.990><c> so</c><00:00:22.230><c> for</c><00:00:22.529><c> example</c>

00:00:22.910 --> 00:00:22.920 align:start position:0%
four different foods so for example
 

00:00:22.920 --> 00:00:26.450 align:start position:0%
four different foods so for example
under<00:00:23.310><c> grams</c><00:00:23.789><c> of</c><00:00:24.000><c> apples</c><00:00:24.390><c> turns</c><00:00:24.750><c> out</c><00:00:24.869><c> has</c><00:00:25.460><c> 56</c>

00:00:26.450 --> 00:00:26.460 align:start position:0%
under grams of apples turns out has 56
 

00:00:26.460 --> 00:00:28.580 align:start position:0%
under grams of apples turns out has 56
calories<00:00:27.000><c> from</c><00:00:27.150><c> carbs</c><00:00:27.660><c> and</c><00:00:27.810><c> much</c><00:00:28.170><c> less</c><00:00:28.380><c> from</c>

00:00:28.580 --> 00:00:28.590 align:start position:0%
calories from carbs and much less from
 

00:00:28.590 --> 00:00:30.080 align:start position:0%
calories from carbs and much less from
proteins<00:00:29.010><c> and</c><00:00:29.130><c> fats</c><00:00:29.369><c> whereas</c><00:00:29.849><c> in</c><00:00:29.970><c> contrast</c>

00:00:30.080 --> 00:00:30.090 align:start position:0%
proteins and fats whereas in contrast
 

00:00:30.090 --> 00:00:34.250 align:start position:0%
proteins and fats whereas in contrast
100<00:00:30.840><c> grams</c><00:00:31.080><c> of</c><00:00:31.349><c> beef</c><00:00:31.920><c> has</c><00:00:32.600><c> 104</c><00:00:33.600><c> calories</c><00:00:34.050><c> from</c>

00:00:34.250 --> 00:00:34.260 align:start position:0%
100 grams of beef has 104 calories from
 

00:00:34.260 --> 00:00:38.030 align:start position:0%
100 grams of beef has 104 calories from
protein<00:00:34.640><c> 135</c><00:00:35.640><c> calories</c><00:00:35.910><c> from</c><00:00:36.510><c> that</c><00:00:36.750><c> now</c><00:00:37.649><c> let's</c>

00:00:38.030 --> 00:00:38.040 align:start position:0%
protein 135 calories from that now let's
 

00:00:38.040 --> 00:00:40.940 align:start position:0%
protein 135 calories from that now let's
say<00:00:38.309><c> your</c><00:00:38.550><c> goal</c><00:00:38.790><c> is</c><00:00:39.120><c> to</c><00:00:39.390><c> calculate</c><00:00:39.950><c> the</c>

00:00:40.940 --> 00:00:40.950 align:start position:0%
say your goal is to calculate the
 

00:00:40.950 --> 00:00:44.479 align:start position:0%
say your goal is to calculate the
percentage<00:00:41.550><c> of</c><00:00:41.879><c> calories</c><00:00:42.510><c> from</c><00:00:43.489><c> carbs</c>

00:00:44.479 --> 00:00:44.489 align:start position:0%
percentage of calories from carbs
 

00:00:44.489 --> 00:00:47.720 align:start position:0%
percentage of calories from carbs
proteins<00:00:45.149><c> and</c><00:00:45.450><c> fats</c><00:00:46.320><c> for</c><00:00:46.950><c> each</c><00:00:47.219><c> of</c><00:00:47.399><c> the</c><00:00:47.520><c> four</c>

00:00:47.720 --> 00:00:47.730 align:start position:0%
proteins and fats for each of the four
 

00:00:47.730 --> 00:00:50.119 align:start position:0%
proteins and fats for each of the four
foods<00:00:48.000><c> so</c><00:00:48.510><c> for</c><00:00:48.690><c> example</c><00:00:49.110><c> if</c><00:00:49.410><c> you</c><00:00:49.680><c> look</c><00:00:49.829><c> at</c><00:00:50.010><c> this</c>

00:00:50.119 --> 00:00:50.129 align:start position:0%
foods so for example if you look at this
 

00:00:50.129 --> 00:00:52.549 align:start position:0%
foods so for example if you look at this
column<00:00:50.460><c> and</c><00:00:50.820><c> add</c><00:00:51.629><c> up</c><00:00:51.930><c> the</c><00:00:51.960><c> numbers</c><00:00:52.410><c> in</c><00:00:52.440><c> that</c>

00:00:52.549 --> 00:00:52.559 align:start position:0%
column and add up the numbers in that
 

00:00:52.559 --> 00:00:55.340 align:start position:0%
column and add up the numbers in that
column<00:00:52.739><c> you</c><00:00:53.309><c> get</c><00:00:53.550><c> that</c><00:00:53.760><c> 100</c><00:00:54.570><c> grams</c><00:00:54.750><c> of</c><00:00:54.899><c> apple</c>

00:00:55.340 --> 00:00:55.350 align:start position:0%
column you get that 100 grams of apple
 

00:00:55.350 --> 00:00:57.889 align:start position:0%
column you get that 100 grams of apple
has<00:00:55.730><c> 26</c><00:00:56.730><c> plus</c><00:00:56.910><c> one</c><00:00:57.090><c> point</c><00:00:57.210><c> two</c><00:00:57.390><c> plus</c><00:00:57.629><c> one</c><00:00:57.660><c> point</c>

00:00:57.889 --> 00:00:57.899 align:start position:0%
has 26 plus one point two plus one point
 

00:00:57.899 --> 00:01:03.410 align:start position:0%
has 26 plus one point two plus one point
eight<00:00:58.109><c> so</c><00:00:58.890><c> that's</c><00:00:59.510><c> 59</c><00:01:00.890><c> calories</c><00:01:01.890><c> and</c><00:01:02.160><c> so</c><00:01:03.030><c> as</c><00:01:03.329><c> a</c>

00:01:03.410 --> 00:01:03.420 align:start position:0%
eight so that's 59 calories and so as a
 

00:01:03.420 --> 00:01:06.140 align:start position:0%
eight so that's 59 calories and so as a
percentage<00:01:04.280><c> the</c><00:01:05.280><c> percentage</c><00:01:05.309><c> of</c><00:01:06.000><c> calories</c>

00:01:06.140 --> 00:01:06.150 align:start position:0%
percentage the percentage of calories
 

00:01:06.150 --> 00:01:10.000 align:start position:0%
percentage the percentage of calories
from<00:01:07.189><c> carbohydrates</c><00:01:08.189><c> in</c><00:01:08.430><c> an</c><00:01:08.549><c> apple</c><00:01:08.970><c> would</c><00:01:09.270><c> be</c>

00:01:10.000 --> 00:01:10.010 align:start position:0%
from carbohydrates in an apple would be
 

00:01:10.010 --> 00:01:17.660 align:start position:0%
from carbohydrates in an apple would be
56,000<00:01:11.180><c> 59s</c><00:01:12.180><c> Delta</c><00:01:14.689><c> 94.9%</c><00:01:16.130><c> so</c><00:01:17.130><c> most</c><00:01:17.400><c> of</c><00:01:17.580><c> the</c>

00:01:17.660 --> 00:01:17.670 align:start position:0%
56,000 59s Delta 94.9% so most of the
 

00:01:17.670 --> 00:01:21.020 align:start position:0%
56,000 59s Delta 94.9% so most of the
calories<00:01:18.659><c> in</c><00:01:18.930><c> an</c><00:01:19.170><c> apple</c><00:01:19.530><c> on</c><00:01:19.740><c> come</c><00:01:20.400><c> from</c><00:01:20.610><c> comps</c>

00:01:21.020 --> 00:01:21.030 align:start position:0%
calories in an apple on come from comps
 

00:01:21.030 --> 00:01:23.450 align:start position:0%
calories in an apple on come from comps
whereas<00:01:21.330><c> in</c><00:01:21.450><c> contrast</c><00:01:21.740><c> mostly</c><00:01:22.740><c> calories</c><00:01:23.220><c> of</c>

00:01:23.450 --> 00:01:23.460 align:start position:0%
whereas in contrast mostly calories of
 

00:01:23.460 --> 00:01:27.020 align:start position:0%
whereas in contrast mostly calories of
eve<00:01:23.909><c> come</c><00:01:24.689><c> from</c><00:01:24.930><c> protein</c><00:01:25.500><c> and</c><00:01:25.710><c> fat</c><00:01:25.890><c> and</c><00:01:26.189><c> so</c><00:01:26.850><c> on</c>

00:01:27.020 --> 00:01:27.030 align:start position:0%
eve come from protein and fat and so on
 

00:01:27.030 --> 00:01:29.749 align:start position:0%
eve come from protein and fat and so on
so<00:01:27.689><c> the</c><00:01:27.930><c> calculation</c><00:01:28.530><c> you</c><00:01:28.680><c> want</c><00:01:28.950><c> is</c><00:01:29.189><c> really</c><00:01:29.520><c> to</c>

00:01:29.749 --> 00:01:29.759 align:start position:0%
so the calculation you want is really to
 

00:01:29.759 --> 00:01:33.740 align:start position:0%
so the calculation you want is really to
sum<00:01:30.540><c> up</c><00:01:30.750><c> each</c><00:01:31.020><c> of</c><00:01:31.680><c> the</c><00:01:31.770><c> four</c><00:01:32.009><c> columns</c><00:01:32.820><c> of</c><00:01:33.390><c> this</c>

00:01:33.740 --> 00:01:33.750 align:start position:0%
sum up each of the four columns of this
 

00:01:33.750 --> 00:01:35.719 align:start position:0%
sum up each of the four columns of this
matrix<00:01:33.810><c> to</c><00:01:34.530><c> get</c><00:01:34.680><c> the</c><00:01:34.920><c> total</c><00:01:35.430><c> number</c><00:01:35.460><c> of</c>

00:01:35.719 --> 00:01:35.729 align:start position:0%
matrix to get the total number of
 

00:01:35.729 --> 00:01:39.140 align:start position:0%
matrix to get the total number of
calories<00:01:36.030><c> in</c><00:01:36.770><c> 100</c><00:01:37.770><c> grams</c><00:01:37.799><c> of</c><00:01:38.130><c> apple</c><00:01:38.549><c> beef</c><00:01:38.820><c> eggs</c>

00:01:39.140 --> 00:01:39.150 align:start position:0%
calories in 100 grams of apple beef eggs
 

00:01:39.150 --> 00:01:43.249 align:start position:0%
calories in 100 grams of apple beef eggs
or<00:01:39.329><c> potatoes</c><00:01:39.780><c> and</c><00:01:40.189><c> then</c><00:01:41.189><c> to</c><00:01:42.259><c> divide</c>

00:01:43.249 --> 00:01:43.259 align:start position:0%
or potatoes and then to divide
 

00:01:43.259 --> 00:01:47.870 align:start position:0%
or potatoes and then to divide
throughout<00:01:43.979><c> the</c><00:01:44.250><c> matrix</c><00:01:46.310><c> so</c><00:01:47.310><c> as</c><00:01:47.460><c> to</c><00:01:47.640><c> get</c><00:01:47.820><c> the</c>

00:01:47.870 --> 00:01:47.880 align:start position:0%
throughout the matrix so as to get the
 

00:01:47.880 --> 00:01:50.569 align:start position:0%
throughout the matrix so as to get the
percentage<00:01:48.630><c> of</c><00:01:48.780><c> calories</c><00:01:48.960><c> from</c><00:01:49.579><c> carbs</c>

00:01:50.569 --> 00:01:50.579 align:start position:0%
percentage of calories from carbs
 

00:01:50.579 --> 00:01:53.120 align:start position:0%
percentage of calories from carbs
proteins<00:01:50.970><c> and</c><00:01:51.119><c> fats</c><00:01:51.360><c> for</c><00:01:51.630><c> each</c><00:01:51.899><c> of</c><00:01:52.079><c> the</c><00:01:52.259><c> four</c>

00:01:53.120 --> 00:01:53.130 align:start position:0%
proteins and fats for each of the four
 

00:01:53.130 --> 00:01:57.380 align:start position:0%
proteins and fats for each of the four
foods<00:01:53.930><c> so</c><00:01:54.930><c> the</c><00:01:55.049><c> question</c><00:01:55.500><c> is</c><00:01:55.850><c> can</c><00:01:56.850><c> you</c><00:01:56.909><c> do</c><00:01:57.210><c> this</c>

00:01:57.380 --> 00:01:57.390 align:start position:0%
foods so the question is can you do this
 

00:01:57.390 --> 00:02:01.580 align:start position:0%
foods so the question is can you do this
without<00:01:58.259><c> an</c><00:01:58.680><c> explicit</c><00:01:59.009><c> for</c><00:01:59.460><c> loop</c><00:02:00.409><c> let's</c><00:02:01.409><c> take</c>

00:02:01.580 --> 00:02:01.590 align:start position:0%
without an explicit for loop let's take
 

00:02:01.590 --> 00:02:04.550 align:start position:0%
without an explicit for loop let's take
a<00:02:01.619><c> look</c><00:02:01.860><c> at</c><00:02:02.009><c> how</c><00:02:02.159><c> you</c><00:02:02.579><c> could</c><00:02:02.700><c> do</c><00:02:02.850><c> that</c><00:02:03.469><c> what</c><00:02:04.469><c> I'm</c>

00:02:04.550 --> 00:02:04.560 align:start position:0%
a look at how you could do that what I'm
 

00:02:04.560 --> 00:02:07.260 align:start position:0%
a look at how you could do that what I'm
going<00:02:04.710><c> to</c><00:02:04.740><c> do</c><00:02:04.920><c> is</c><00:02:05.100><c> show</c><00:02:05.310><c> you</c><00:02:05.340><c> how</c><00:02:05.520><c> you</c><00:02:05.790><c> can</c><00:02:06.210><c> set</c>

00:02:07.260 --> 00:02:07.270 align:start position:0%
going to do is show you how you can set
 

00:02:07.270 --> 00:02:10.970 align:start position:0%
going to do is show you how you can set
say<00:02:08.259><c> this</c><00:02:08.410><c> matrix</c><00:02:08.920><c> equal</c><00:02:09.280><c> to</c><00:02:09.459><c> a</c><00:02:09.489><c> 3</c><00:02:10.000><c> by</c><00:02:10.330><c> 4</c><00:02:10.360><c> matrix</c>

00:02:10.970 --> 00:02:10.980 align:start position:0%
say this matrix equal to a 3 by 4 matrix
 

00:02:10.980 --> 00:02:15.120 align:start position:0%
say this matrix equal to a 3 by 4 matrix
a<00:02:11.980><c> and</c><00:02:12.420><c> then</c><00:02:13.420><c> with</c><00:02:13.750><c> one</c><00:02:14.200><c> buying</c><00:02:14.440><c> a</c><00:02:14.530><c> Python</c><00:02:14.950><c> code</c>

00:02:15.120 --> 00:02:15.130 align:start position:0%
a and then with one buying a Python code
 

00:02:15.130 --> 00:02:18.540 align:start position:0%
a and then with one buying a Python code
we're<00:02:15.520><c> going</c><00:02:15.700><c> to</c><00:02:15.790><c> sum</c><00:02:16.720><c> down</c><00:02:17.319><c> the</c><00:02:17.380><c> columns</c><00:02:18.099><c> so</c>

00:02:18.540 --> 00:02:18.550 align:start position:0%
we're going to sum down the columns so
 

00:02:18.550 --> 00:02:19.620 align:start position:0%
we're going to sum down the columns so
we're<00:02:18.670><c> going</c><00:02:18.760><c> to</c><00:02:18.819><c> get</c><00:02:19.000><c> four</c><00:02:19.270><c> numbers</c>

00:02:19.620 --> 00:02:19.630 align:start position:0%
we're going to get four numbers
 

00:02:19.630 --> 00:02:22.589 align:start position:0%
we're going to get four numbers
corresponding<00:02:20.410><c> to</c><00:02:20.680><c> the</c><00:02:21.280><c> total</c><00:02:22.120><c> number</c><00:02:22.569><c> of</c>

00:02:22.589 --> 00:02:22.599 align:start position:0%
corresponding to the total number of
 

00:02:22.599 --> 00:02:24.990 align:start position:0%
corresponding to the total number of
calories<00:02:22.870><c> in</c><00:02:23.380><c> these</c><00:02:24.280><c> four</c><00:02:24.519><c> different</c><00:02:24.849><c> types</c>

00:02:24.990 --> 00:02:25.000 align:start position:0%
calories in these four different types
 

00:02:25.000 --> 00:02:27.089 align:start position:0%
calories in these four different types
of<00:02:25.120><c> food</c><00:02:25.300><c> 100</c><00:02:26.110><c> grams</c><00:02:26.319><c> of</c><00:02:26.440><c> these</c><00:02:26.620><c> 4</c><00:02:26.980><c> different</c>

00:02:27.089 --> 00:02:27.099 align:start position:0%
of food 100 grams of these 4 different
 

00:02:27.099 --> 00:02:28.890 align:start position:0%
of food 100 grams of these 4 different
types<00:02:27.370><c> of</c><00:02:27.489><c> food</c><00:02:27.640><c> and</c><00:02:27.880><c> I'm</c><00:02:28.420><c> going</c><00:02:28.569><c> to</c><00:02:28.599><c> use</c><00:02:28.750><c> a</c>

00:02:28.890 --> 00:02:28.900 align:start position:0%
types of food and I'm going to use a
 

00:02:28.900 --> 00:02:31.800 align:start position:0%
types of food and I'm going to use a
second<00:02:29.500><c> line</c><00:02:29.980><c> of</c><00:02:30.010><c> Python</c><00:02:30.550><c> code</c><00:02:30.580><c> to</c><00:02:31.330><c> divide</c>

00:02:31.800 --> 00:02:31.810 align:start position:0%
second line of Python code to divide
 

00:02:31.810 --> 00:02:34.020 align:start position:0%
second line of Python code to divide
each<00:02:32.170><c> of</c><00:02:32.739><c> the</c><00:02:32.860><c> 4</c><00:02:33.069><c> columns</c><00:02:33.580><c> by</c><00:02:33.819><c> their</c>

00:02:34.020 --> 00:02:34.030 align:start position:0%
each of the 4 columns by their
 

00:02:34.030 --> 00:02:36.030 align:start position:0%
each of the 4 columns by their
corresponding<00:02:34.780><c> sum</c><00:02:35.019><c> if</c><00:02:35.410><c> that</c><00:02:35.590><c> verbal</c>

00:02:36.030 --> 00:02:36.040 align:start position:0%
corresponding sum if that verbal
 

00:02:36.040 --> 00:02:37.620 align:start position:0%
corresponding sum if that verbal
description<00:02:36.489><c> wasn't</c><00:02:36.700><c> very</c><00:02:36.940><c> clear</c><00:02:37.209><c> hopefully</c>

00:02:37.620 --> 00:02:37.630 align:start position:0%
description wasn't very clear hopefully
 

00:02:37.630 --> 00:02:39.150 align:start position:0%
description wasn't very clear hopefully
you'll<00:02:37.720><c> be</c><00:02:37.750><c> clearer</c><00:02:38.410><c> in</c><00:02:38.560><c> a</c><00:02:38.650><c> second</c><00:02:39.010><c> when</c><00:02:39.130><c> we</c>

00:02:39.150 --> 00:02:39.160 align:start position:0%
you'll be clearer in a second when we
 

00:02:39.160 --> 00:02:41.220 align:start position:0%
you'll be clearer in a second when we
look<00:02:39.370><c> at</c><00:02:39.489><c> the</c><00:02:39.549><c> Python</c><00:02:39.880><c> code</c><00:02:40.060><c> so</c><00:02:40.750><c> here</c><00:02:41.080><c> we</c><00:02:41.200><c> are</c>

00:02:41.220 --> 00:02:41.230 align:start position:0%
look at the Python code so here we are
 

00:02:41.230 --> 00:02:42.630 align:start position:0%
look at the Python code so here we are
in<00:02:41.440><c> the</c><00:02:41.530><c> jupiter</c><00:02:41.920><c> notebook</c><00:02:42.310><c> i've</c><00:02:42.459><c> already</c>

00:02:42.630 --> 00:02:42.640 align:start position:0%
in the jupiter notebook i've already
 

00:02:42.640 --> 00:02:44.729 align:start position:0%
in the jupiter notebook i've already
written<00:02:43.000><c> this</c><00:02:43.480><c> first</c><00:02:43.930><c> piece</c><00:02:44.200><c> of</c><00:02:44.319><c> code</c><00:02:44.500><c> to</c>

00:02:44.729 --> 00:02:44.739 align:start position:0%
written this first piece of code to
 

00:02:44.739 --> 00:02:47.340 align:start position:0%
written this first piece of code to
pre-populate<00:02:45.190><c> the</c><00:02:46.180><c> matrix</c><00:02:46.690><c> a</c><00:02:46.930><c> with</c><00:02:47.230><c> the</c>

00:02:47.340 --> 00:02:47.350 align:start position:0%
pre-populate the matrix a with the
 

00:02:47.350 --> 00:02:48.990 align:start position:0%
pre-populate the matrix a with the
numbers<00:02:47.709><c> we</c><00:02:47.860><c> had</c><00:02:48.010><c> just</c><00:02:48.160><c> now</c><00:02:48.280><c> so</c><00:02:48.670><c> let</c><00:02:48.850><c> me</c><00:02:48.910><c> hit</c>

00:02:48.990 --> 00:02:49.000 align:start position:0%
numbers we had just now so let me hit
 

00:02:49.000 --> 00:02:50.729 align:start position:0%
numbers we had just now so let me hit
shift<00:02:49.330><c> enter</c><00:02:49.450><c> and</c><00:02:49.780><c> just</c><00:02:49.930><c> run</c><00:02:50.080><c> that</c><00:02:50.230><c> so</c><00:02:50.500><c> let</c><00:02:50.650><c> the</c>

00:02:50.729 --> 00:02:50.739 align:start position:0%
shift enter and just run that so let the
 

00:02:50.739 --> 00:02:53.039 align:start position:0%
shift enter and just run that so let the
meter<00:02:50.920><c> gray</c><00:02:51.160><c> and</c><00:02:51.700><c> now</c><00:02:52.239><c> here</c><00:02:52.600><c> are</c><00:02:52.630><c> the</c><00:02:52.720><c> two</c>

00:02:53.039 --> 00:02:53.049 align:start position:0%
meter gray and now here are the two
 

00:02:53.049 --> 00:02:55.680 align:start position:0%
meter gray and now here are the two
lines<00:02:53.590><c> of</c><00:02:53.860><c> Python</c><00:02:54.760><c> code</c><00:02:54.790><c> first</c><00:02:55.239><c> we</c><00:02:55.510><c> compute</c>

00:02:55.680 --> 00:02:55.690 align:start position:0%
lines of Python code first we compute
 

00:02:55.690 --> 00:03:01.050 align:start position:0%
lines of Python code first we compute
Cal<00:02:56.140><c> equals</c><00:02:56.769><c> a</c><00:02:57.030><c> dot</c><00:02:58.030><c> sum</c><00:02:58.420><c> and</c><00:02:58.980><c> X</c><00:02:59.980><c> is</c><00:03:00.220><c> equal</c><00:03:00.430><c> zero</c>

00:03:01.050 --> 00:03:01.060 align:start position:0%
Cal equals a dot sum and X is equal zero
 

00:03:01.060 --> 00:03:02.670 align:start position:0%
Cal equals a dot sum and X is equal zero
means<00:03:01.209><c> the</c><00:03:01.510><c> Sun</c><00:03:01.750><c> vertical</c><00:03:02.230><c> you</c><00:03:02.290><c> say</c><00:03:02.500><c> more</c>

00:03:02.670 --> 00:03:02.680 align:start position:0%
means the Sun vertical you say more
 

00:03:02.680 --> 00:03:04.949 align:start position:0%
means the Sun vertical you say more
about<00:03:02.739><c> that</c><00:03:03.130><c> a</c><00:03:03.370><c> little</c><00:03:03.519><c> bit</c><00:03:03.850><c> and</c><00:03:04.750><c> then</c><00:03:04.930><c> just</c>

00:03:04.949 --> 00:03:04.959 align:start position:0%
about that a little bit and then just
 

00:03:04.959 --> 00:03:08.160 align:start position:0%
about that a little bit and then just
print<00:03:05.349><c> Cal</c><00:03:05.830><c> so</c><00:03:06.580><c> so</c><00:03:07.330><c> if</c><00:03:07.480><c> some</c><00:03:07.690><c> vertically</c>

00:03:08.160 --> 00:03:08.170 align:start position:0%
print Cal so so if some vertically
 

00:03:08.170 --> 00:03:11.370 align:start position:0%
print Cal so so if some vertically
serves<00:03:08.500><c> we</c><00:03:08.680><c> say</c><00:03:09.069><c> just</c><00:03:09.280><c> now</c><00:03:09.400><c> 59</c><00:03:09.970><c> is</c><00:03:10.269><c> the</c><00:03:10.510><c> total</c>

00:03:11.370 --> 00:03:11.380 align:start position:0%
serves we say just now 59 is the total
 

00:03:11.380 --> 00:03:14.580 align:start position:0%
serves we say just now 59 is the total
number<00:03:11.410><c> of</c><00:03:11.620><c> calories</c><00:03:11.799><c> in</c><00:03:12.400><c> the</c><00:03:12.640><c> apple</c><00:03:13.320><c> 239</c><00:03:14.320><c> with</c>

00:03:14.580 --> 00:03:14.590 align:start position:0%
number of calories in the apple 239 with
 

00:03:14.590 --> 00:03:16.199 align:start position:0%
number of calories in the apple 239 with
the<00:03:14.739><c> toe</c><00:03:14.980><c> number</c><00:03:15.250><c> calorie</c><00:03:15.579><c> to</c><00:03:15.700><c> the</c><00:03:15.790><c> beef</c><00:03:16.000><c> and</c>

00:03:16.199 --> 00:03:16.209 align:start position:0%
the toe number calorie to the beef and
 

00:03:16.209 --> 00:03:20.009 align:start position:0%
the toe number calorie to the beef and
eggs<00:03:16.630><c> and</c><00:03:16.989><c> potato</c><00:03:17.290><c> and</c><00:03:17.650><c> so</c><00:03:18.220><c> on</c><00:03:18.450><c> and</c><00:03:19.450><c> then</c><00:03:19.780><c> going</c>

00:03:20.009 --> 00:03:20.019 align:start position:0%
eggs and potato and so on and then going
 

00:03:20.019 --> 00:03:25.250 align:start position:0%
eggs and potato and so on and then going
to<00:03:20.079><c> compute</c><00:03:20.410><c> percentage</c><00:03:21.060><c> equals</c><00:03:22.060><c> a</c><00:03:22.530><c> over</c><00:03:24.120><c> Rho</c>

00:03:25.250 --> 00:03:25.260 align:start position:0%
to compute percentage equals a over Rho
 

00:03:25.260 --> 00:03:31.440 align:start position:0%
to compute percentage equals a over Rho
cow<00:03:26.260><c> dot</c><00:03:26.850><c> reshape</c><00:03:28.109><c> 1</c><00:03:29.109><c> by</c><00:03:29.380><c> 4</c><00:03:30.120><c> actually</c><00:03:31.120><c> we</c><00:03:31.269><c> want</c>

00:03:31.440 --> 00:03:31.450 align:start position:0%
cow dot reshape 1 by 4 actually we want
 

00:03:31.450 --> 00:03:35.390 align:start position:0%
cow dot reshape 1 by 4 actually we want
percentages<00:03:32.019><c> multiply</c><00:03:32.890><c> by</c><00:03:33.100><c> 100</c><00:03:33.489><c> year</c><00:03:34.350><c> and</c>

00:03:35.390 --> 00:03:35.400 align:start position:0%
percentages multiply by 100 year and
 

00:03:35.400 --> 00:03:40.979 align:start position:0%
percentages multiply by 100 year and
then<00:03:36.400><c> let's</c><00:03:37.030><c> print</c><00:03:37.769><c> percentage</c><00:03:39.810><c> let's</c><00:03:40.810><c> run</c>

00:03:40.979 --> 00:03:40.989 align:start position:0%
then let's print percentage let's run
 

00:03:40.989 --> 00:03:42.870 align:start position:0%
then let's print percentage let's run
that<00:03:41.140><c> and</c><00:03:41.440><c> so</c><00:03:42.100><c> that</c><00:03:42.340><c> command</c>

00:03:42.870 --> 00:03:42.880 align:start position:0%
that and so that command
 

00:03:42.880 --> 00:03:46.949 align:start position:0%
that and so that command
we've<00:03:43.390><c> taken</c><00:03:43.750><c> the</c><00:03:44.590><c> matrix</c><00:03:45.040><c> a</c><00:03:45.220><c> and</c><00:03:45.840><c> divided</c><00:03:46.840><c> it</c>

00:03:46.949 --> 00:03:46.959 align:start position:0%
we've taken the matrix a and divided it
 

00:03:46.959 --> 00:03:51.390 align:start position:0%
we've taken the matrix a and divided it
by<00:03:47.650><c> this</c><00:03:47.709><c> 1</c><00:03:48.519><c> by</c><00:03:48.730><c> 4</c><00:03:49.090><c> matrix</c><00:03:49.859><c> and</c><00:03:50.859><c> this</c><00:03:50.980><c> gives</c><00:03:51.280><c> us</c>

00:03:51.390 --> 00:03:51.400 align:start position:0%
by this 1 by 4 matrix and this gives us
 

00:03:51.400 --> 00:03:53.280 align:start position:0%
by this 1 by 4 matrix and this gives us
the<00:03:51.459><c> matrix</c><00:03:52.030><c> of</c><00:03:52.120><c> percentages</c><00:03:52.630><c> so</c><00:03:52.930><c> as</c><00:03:53.139><c> we</c>

00:03:53.280 --> 00:03:53.290 align:start position:0%
the matrix of percentages so as we
 

00:03:53.290 --> 00:03:55.830 align:start position:0%
the matrix of percentages so as we
worked<00:03:53.530><c> out</c><00:03:53.739><c> kind</c><00:03:54.519><c> of</c><00:03:54.579><c> by</c><00:03:54.700><c> hand</c><00:03:54.970><c> just</c><00:03:55.030><c> now</c><00:03:55.269><c> you</c>

00:03:55.830 --> 00:03:55.840 align:start position:0%
worked out kind of by hand just now you
 

00:03:55.840 --> 00:03:57.809 align:start position:0%
worked out kind of by hand just now you
know<00:03:55.959><c> in</c><00:03:56.200><c> the</c><00:03:56.470><c> in</c><00:03:56.829><c> the</c><00:03:56.980><c> Apple</c><00:03:57.400><c> that</c><00:03:57.609><c> was</c><00:03:57.730><c> the</c>

00:03:57.809 --> 00:03:57.819 align:start position:0%
know in the in the Apple that was the
 

00:03:57.819 --> 00:03:59.819 align:start position:0%
know in the in the Apple that was the
first<00:03:58.030><c> column</c><00:03:58.480><c> ninety</c><00:03:59.139><c> four</c><00:03:59.380><c> point</c><00:03:59.650><c> nine</c>

00:03:59.819 --> 00:03:59.829 align:start position:0%
first column ninety four point nine
 

00:03:59.829 --> 00:04:02.039 align:start position:0%
first column ninety four point nine
percent<00:04:00.280><c> of</c><00:04:00.519><c> the</c><00:04:00.639><c> calories</c><00:04:01.030><c> off</c><00:04:01.389><c> from</c><00:04:01.600><c> carbs</c>

00:04:02.039 --> 00:04:02.049 align:start position:0%
percent of the calories off from carbs
 

00:04:02.049 --> 00:04:03.539 align:start position:0%
percent of the calories off from carbs
let's<00:04:02.530><c> go</c><00:04:02.650><c> back</c><00:04:02.829><c> to</c><00:04:02.980><c> the</c><00:04:03.040><c> slice</c>

00:04:03.539 --> 00:04:03.549 align:start position:0%
let's go back to the slice
 

00:04:03.549 --> 00:04:05.729 align:start position:0%
let's go back to the slice
so<00:04:04.030><c> just</c><00:04:04.480><c> to</c><00:04:04.630><c> repeat</c><00:04:04.810><c> the</c><00:04:05.079><c> two</c><00:04:05.260><c> lines</c><00:04:05.470><c> of</c><00:04:05.590><c> code</c>

00:04:05.729 --> 00:04:05.739 align:start position:0%
so just to repeat the two lines of code
 

00:04:05.739 --> 00:04:07.440 align:start position:0%
so just to repeat the two lines of code
we<00:04:05.920><c> had</c><00:04:06.130><c> this</c><00:04:06.340><c> is</c><00:04:06.519><c> what</c><00:04:06.700><c> we</c><00:04:06.819><c> have</c><00:04:07.000><c> written</c><00:04:07.120><c> out</c>

00:04:07.440 --> 00:04:07.450 align:start position:0%
we had this is what we have written out
 

00:04:07.450 --> 00:04:10.620 align:start position:0%
we had this is what we have written out
in<00:04:07.480><c> the</c><00:04:07.780><c> Jupiter</c><00:04:08.410><c> notebook</c><00:04:09.069><c> so</c><00:04:09.910><c> as</c><00:04:10.209><c> a</c><00:04:10.269><c> bit</c><00:04:10.510><c> of</c>

00:04:10.620 --> 00:04:10.630 align:start position:0%
in the Jupiter notebook so as a bit of
 

00:04:10.630 --> 00:04:14.729 align:start position:0%
in the Jupiter notebook so as a bit of
detail<00:04:11.019><c> this</c><00:04:12.480><c> parameter</c><00:04:13.480><c> axis</c><00:04:13.690><c> equal</c><00:04:14.139><c> zero</c>

00:04:14.729 --> 00:04:14.739 align:start position:0%
detail this parameter axis equal zero
 

00:04:14.739 --> 00:04:17.759 align:start position:0%
detail this parameter axis equal zero
means<00:04:15.430><c> that</c><00:04:15.609><c> you</c><00:04:16.389><c> want</c><00:04:16.600><c> Python</c><00:04:17.350><c> to</c><00:04:17.500><c> some</c>

00:04:17.759 --> 00:04:17.769 align:start position:0%
means that you want Python to some
 

00:04:17.769 --> 00:04:20.470 align:start position:0%
means that you want Python to some
vertically<00:04:18.310><c> so</c><00:04:18.549><c> this</c><00:04:18.760><c> is</c><00:04:18.880><c> x</c><00:04:19.090><c> is</c><00:04:19.299><c> zero</c>

00:04:20.470 --> 00:04:20.480 align:start position:0%
vertically so this is x is zero
 

00:04:20.480 --> 00:04:23.140 align:start position:0%
vertically so this is x is zero
vertically<00:04:21.320><c> whereas</c><00:04:22.100><c> the</c><00:04:22.220><c> horizontal</c><00:04:22.790><c> axis</c>

00:04:23.140 --> 00:04:23.150 align:start position:0%
vertically whereas the horizontal axis
 

00:04:23.150 --> 00:04:25.360 align:start position:0%
vertically whereas the horizontal axis
is<00:04:23.270><c> X</c><00:04:23.420><c> this</c><00:04:23.600><c> one</c><00:04:23.840><c> saluton</c><00:04:24.440><c> right</c><00:04:24.590><c> axis</c><00:04:24.950><c> one</c><00:04:25.160><c> or</c>

00:04:25.360 --> 00:04:25.370 align:start position:0%
is X this one saluton right axis one or
 

00:04:25.370 --> 00:04:27.400 align:start position:0%
is X this one saluton right axis one or
some<00:04:25.550><c> horizontal</c><00:04:25.880><c> uses</c><00:04:26.480><c> on</c><00:04:26.630><c> birth</c><00:04:26.810><c> degree</c><00:04:27.110><c> and</c>

00:04:27.400 --> 00:04:27.410 align:start position:0%
some horizontal uses on birth degree and
 

00:04:27.410 --> 00:04:31.030 align:start position:0%
some horizontal uses on birth degree and
then<00:04:28.370><c> this</c><00:04:28.790><c> command</c><00:04:29.210><c> here</c><00:04:29.740><c> this</c><00:04:30.740><c> is</c><00:04:30.920><c> an</c>

00:04:31.030 --> 00:04:31.040 align:start position:0%
then this command here this is an
 

00:04:31.040 --> 00:04:33.490 align:start position:0%
then this command here this is an
example<00:04:31.340><c> of</c><00:04:31.790><c> pipes</c><00:04:32.330><c> and</c><00:04:32.510><c> broadcasting</c><00:04:33.320><c> where</c>

00:04:33.490 --> 00:04:33.500 align:start position:0%
example of pipes and broadcasting where
 

00:04:33.500 --> 00:04:36.580 align:start position:0%
example of pipes and broadcasting where
you<00:04:33.620><c> take</c><00:04:33.830><c> a</c><00:04:33.860><c> matrix</c><00:04:34.130><c> a</c><00:04:34.490><c> so</c><00:04:35.210><c> this</c><00:04:35.420><c> is</c><00:04:35.540><c> a</c><00:04:35.690><c> 3</c><00:04:36.350><c> by</c><00:04:36.380><c> 4</c>

00:04:36.580 --> 00:04:36.590 align:start position:0%
you take a matrix a so this is a 3 by 4
 

00:04:36.590 --> 00:04:41.220 align:start position:0%
you take a matrix a so this is a 3 by 4
matrix<00:04:36.950><c> and</c><00:04:37.880><c> you</c><00:04:38.690><c> divide</c><00:04:39.110><c> it</c><00:04:39.140><c> by</c><00:04:39.380><c> a</c><00:04:40.370><c> 1</c><00:04:40.730><c> by</c><00:04:40.760><c> 4</c>

00:04:41.220 --> 00:04:41.230 align:start position:0%
matrix and you divide it by a 1 by 4
 

00:04:41.230 --> 00:04:44.710 align:start position:0%
matrix and you divide it by a 1 by 4
matrix<00:04:42.230><c> and</c><00:04:42.910><c> technically</c><00:04:43.910><c> after</c><00:04:44.210><c> this</c><00:04:44.570><c> first</c>

00:04:44.710 --> 00:04:44.720 align:start position:0%
matrix and technically after this first
 

00:04:44.720 --> 00:04:47.380 align:start position:0%
matrix and technically after this first
line<00:04:44.960><c> of</c><00:04:45.020><c> code</c><00:04:45.380><c> Cal</c><00:04:46.250><c> the</c><00:04:46.610><c> variable</c><00:04:46.940><c> count</c><00:04:47.150><c> is</c>

00:04:47.380 --> 00:04:47.390 align:start position:0%
line of code Cal the variable count is
 

00:04:47.390 --> 00:04:50.020 align:start position:0%
line of code Cal the variable count is
already<00:04:47.720><c> a</c><00:04:48.230><c> 1</c><00:04:48.530><c> by</c><00:04:48.710><c> 4</c><00:04:48.740><c> matrix</c><00:04:49.430><c> so</c><00:04:49.610><c> technically</c>

00:04:50.020 --> 00:04:50.030 align:start position:0%
already a 1 by 4 matrix so technically
 

00:04:50.030 --> 00:04:52.540 align:start position:0%
already a 1 by 4 matrix so technically
you<00:04:50.660><c> don't</c><00:04:50.810><c> need</c><00:04:51.020><c> to</c><00:04:51.140><c> call</c><00:04:51.350><c> reshape</c><00:04:52.310><c> here</c>

00:04:52.540 --> 00:04:52.550 align:start position:0%
you don't need to call reshape here
 

00:04:52.550 --> 00:04:54.280 align:start position:0%
you don't need to call reshape here
again<00:04:52.850><c> so</c><00:04:53.120><c> that's</c><00:04:53.240><c> a</c><00:04:53.390><c> little</c><00:04:53.690><c> bit</c><00:04:53.810><c> redundant</c>

00:04:54.280 --> 00:04:54.290 align:start position:0%
again so that's a little bit redundant
 

00:04:54.290 --> 00:04:58.000 align:start position:0%
again so that's a little bit redundant
but<00:04:54.850><c> when</c><00:04:55.850><c> I'm</c><00:04:56.000><c> writing</c><00:04:56.240><c> typing</c><00:04:56.960><c> codes</c><00:04:57.230><c> if</c><00:04:57.890><c> I'm</c>

00:04:58.000 --> 00:04:58.010 align:start position:0%
but when I'm writing typing codes if I'm
 

00:04:58.010 --> 00:05:00.670 align:start position:0%
but when I'm writing typing codes if I'm
not<00:04:58.160><c> entirely</c><00:04:58.790><c> sure</c><00:04:58.910><c> what</c><00:04:59.270><c> matrix</c><00:04:59.780><c> what</c><00:05:00.560><c> are</c>

00:05:00.670 --> 00:05:00.680 align:start position:0%
not entirely sure what matrix what are
 

00:05:00.680 --> 00:05:02.830 align:start position:0%
not entirely sure what matrix what are
the<00:05:00.770><c> dimensions</c><00:05:01.040><c> of</c><00:05:01.310><c> a</c><00:05:01.400><c> matrix</c><00:05:01.610><c> I</c><00:05:01.910><c> often</c><00:05:02.690><c> will</c>

00:05:02.830 --> 00:05:02.840 align:start position:0%
the dimensions of a matrix I often will
 

00:05:02.840 --> 00:05:04.510 align:start position:0%
the dimensions of a matrix I often will
just<00:05:02.870><c> call</c><00:05:03.290><c> a</c><00:05:03.320><c> reshape</c><00:05:03.830><c> come</c><00:05:04.010><c> on</c><00:05:04.130><c> just</c><00:05:04.400><c> to</c><00:05:04.490><c> make</c>

00:05:04.510 --> 00:05:04.520 align:start position:0%
just call a reshape come on just to make
 

00:05:04.520 --> 00:05:07.150 align:start position:0%
just call a reshape come on just to make
sure<00:05:04.670><c> that</c><00:05:05.030><c> is</c><00:05:05.990><c> you</c><00:05:06.290><c> know</c><00:05:06.380><c> the</c><00:05:06.530><c> right</c><00:05:06.710><c> column</c>

00:05:07.150 --> 00:05:07.160 align:start position:0%
sure that is you know the right column
 

00:05:07.160 --> 00:05:08.560 align:start position:0%
sure that is you know the right column
vector<00:05:07.430><c> with</c><00:05:07.520><c> a</c><00:05:07.580><c> row</c><00:05:07.730><c> vector</c><00:05:07.760><c> or</c><00:05:08.210><c> whatever</c><00:05:08.480><c> you</c>

00:05:08.560 --> 00:05:08.570 align:start position:0%
vector with a row vector or whatever you
 

00:05:08.570 --> 00:05:10.840 align:start position:0%
vector with a row vector or whatever you
want<00:05:08.750><c> it</c><00:05:08.810><c> to</c><00:05:08.840><c> be</c><00:05:09.080><c> the</c><00:05:09.830><c> reshape</c><00:05:10.250><c> command</c><00:05:10.580><c> is</c><00:05:10.820><c> a</c>

00:05:10.840 --> 00:05:10.850 align:start position:0%
want it to be the reshape command is a
 

00:05:10.850 --> 00:05:13.090 align:start position:0%
want it to be the reshape command is a
constant<00:05:11.540><c> times</c><00:05:11.750><c> order</c><00:05:12.260><c> one</c><00:05:12.470><c> operation</c><00:05:12.920><c> this</c>

00:05:13.090 --> 00:05:13.100 align:start position:0%
constant times order one operation this
 

00:05:13.100 --> 00:05:15.700 align:start position:0%
constant times order one operation this
is<00:05:13.280><c> very</c><00:05:13.550><c> cheap</c><00:05:13.880><c> at</c><00:05:14.030><c> all</c><00:05:14.210><c> so</c><00:05:15.170><c> don't</c><00:05:15.380><c> be</c><00:05:15.530><c> shy</c>

00:05:15.700 --> 00:05:15.710 align:start position:0%
is very cheap at all so don't be shy
 

00:05:15.710 --> 00:05:17.470 align:start position:0%
is very cheap at all so don't be shy
about<00:05:15.740><c> using</c><00:05:16.190><c> the</c><00:05:16.490><c> reshape</c><00:05:16.880><c> c'mon</c><00:05:17.150><c> to</c><00:05:17.330><c> make</c>

00:05:17.470 --> 00:05:17.480 align:start position:0%
about using the reshape c'mon to make
 

00:05:17.480 --> 00:05:20.140 align:start position:0%
about using the reshape c'mon to make
sure<00:05:17.600><c> that</c><00:05:17.750><c> your</c><00:05:17.870><c> matrices</c><00:05:18.290><c> are</c><00:05:18.700><c> the</c><00:05:19.700><c> size</c><00:05:19.910><c> you</c>

00:05:20.140 --> 00:05:20.150 align:start position:0%
sure that your matrices are the size you
 

00:05:20.150 --> 00:05:23.170 align:start position:0%
sure that your matrices are the size you
needed<00:05:20.450><c> to</c><00:05:20.540><c> be</c><00:05:20.890><c> now</c><00:05:21.890><c> let's</c><00:05:22.520><c> explain</c><00:05:23.000><c> in</c>

00:05:23.170 --> 00:05:23.180 align:start position:0%
needed to be now let's explain in
 

00:05:23.180 --> 00:05:25.930 align:start position:0%
needed to be now let's explain in
greater<00:05:23.420><c> detail</c><00:05:23.960><c> how</c><00:05:24.610><c> this</c><00:05:25.610><c> type</c><00:05:25.910><c> of</c>

00:05:25.930 --> 00:05:25.940 align:start position:0%
greater detail how this type of
 

00:05:25.940 --> 00:05:28.420 align:start position:0%
greater detail how this type of
operation<00:05:26.480><c> works</c><00:05:26.900><c> right</c><00:05:27.260><c> we</c><00:05:27.410><c> have</c><00:05:27.650><c> a</c><00:05:27.680><c> 3</c><00:05:28.160><c> by</c><00:05:28.400><c> 4</c>

00:05:28.420 --> 00:05:28.430 align:start position:0%
operation works right we have a 3 by 4
 

00:05:28.430 --> 00:05:32.830 align:start position:0%
operation works right we have a 3 by 4
matrix<00:05:28.900><c> and</c><00:05:29.900><c> we</c><00:05:29.990><c> divided</c><00:05:30.440><c> it</c><00:05:30.710><c> by</c><00:05:30.920><c> a</c><00:05:31.570><c> 1</c><00:05:32.570><c> by</c><00:05:32.810><c> 4</c>

00:05:32.830 --> 00:05:32.840 align:start position:0%
matrix and we divided it by a 1 by 4
 

00:05:32.840 --> 00:05:35.380 align:start position:0%
matrix and we divided it by a 1 by 4
matrix<00:05:33.590><c> so</c><00:05:33.860><c> how</c><00:05:34.070><c> can</c><00:05:34.250><c> you</c><00:05:34.310><c> divide</c><00:05:34.610><c> a</c><00:05:34.880><c> 3</c><00:05:35.090><c> by</c><00:05:35.360><c> 4</c>

00:05:35.380 --> 00:05:35.390 align:start position:0%
matrix so how can you divide a 3 by 4
 

00:05:35.390 --> 00:05:37.990 align:start position:0%
matrix so how can you divide a 3 by 4
matrix<00:05:35.600><c> by</c><00:05:36.140><c> ax</c><00:05:36.170><c> by</c><00:05:36.560><c> a</c><00:05:36.590><c> 1</c><00:05:36.800><c> by</c><00:05:36.830><c> 4</c><00:05:36.980><c> matrix</c><00:05:37.550><c> about</c><00:05:37.850><c> 1</c>

00:05:37.990 --> 00:05:38.000 align:start position:0%
matrix by ax by a 1 by 4 matrix about 1
 

00:05:38.000 --> 00:05:40.990 align:start position:0%
matrix by ax by a 1 by 4 matrix about 1
by<00:05:38.150><c> 4</c><00:05:38.360><c> vector</c><00:05:39.190><c> let's</c><00:05:40.190><c> go</c><00:05:40.370><c> through</c><00:05:40.670><c> a</c><00:05:40.700><c> few</c><00:05:40.970><c> more</c>

00:05:40.990 --> 00:05:41.000 align:start position:0%
by 4 vector let's go through a few more
 

00:05:41.000 --> 00:05:43.900 align:start position:0%
by 4 vector let's go through a few more
examples<00:05:41.660><c> of</c><00:05:41.840><c> Broadcasting</c><00:05:42.590><c> if</c><00:05:43.010><c> you</c><00:05:43.340><c> take</c><00:05:43.550><c> a</c><00:05:43.580><c> 4</c>

00:05:43.900 --> 00:05:43.910 align:start position:0%
examples of Broadcasting if you take a 4
 

00:05:43.910 --> 00:05:47.140 align:start position:0%
examples of Broadcasting if you take a 4
by<00:05:44.030><c> 1</c><00:05:44.060><c> vector</c><00:05:44.300><c> and</c><00:05:44.900><c> add</c><00:05:45.230><c> it</c><00:05:45.470><c> to</c><00:05:45.500><c> number</c><00:05:46.150><c> what</c>

00:05:47.140 --> 00:05:47.150 align:start position:0%
by 1 vector and add it to number what
 

00:05:47.150 --> 00:05:50.140 align:start position:0%
by 1 vector and add it to number what
Python<00:05:48.020><c> will</c><00:05:48.170><c> do</c><00:05:48.350><c> is</c><00:05:48.980><c> take</c><00:05:49.220><c> this</c><00:05:49.400><c> number</c><00:05:49.640><c> and</c>

00:05:50.140 --> 00:05:50.150 align:start position:0%
Python will do is take this number and
 

00:05:50.150 --> 00:05:55.870 align:start position:0%
Python will do is take this number and
also<00:05:50.990><c> expand</c><00:05:51.500><c> it</c><00:05:51.910><c> into</c><00:05:52.910><c> a</c><00:05:53.500><c> 4</c><00:05:54.500><c> by</c><00:05:54.680><c> 1</c><00:05:54.710><c> vector</c><00:05:55.220><c> as</c>

00:05:55.870 --> 00:05:55.880 align:start position:0%
also expand it into a 4 by 1 vector as
 

00:05:55.880 --> 00:05:59.320 align:start position:0%
also expand it into a 4 by 1 vector as
well<00:05:56.120><c> as</c><00:05:56.960><c> follows</c><00:05:57.440><c> and</c><00:05:57.710><c> so</c><00:05:58.370><c> the</c><00:05:58.610><c> vector</c><00:05:58.760><c> 1</c><00:05:59.030><c> 2</c><00:05:59.060><c> 3</c>

00:05:59.320 --> 00:05:59.330 align:start position:0%
well as follows and so the vector 1 2 3
 

00:05:59.330 --> 00:06:01.780 align:start position:0%
well as follows and so the vector 1 2 3
4<00:05:59.570><c> plus</c><00:05:59.840><c> the</c><00:05:59.990><c> number</c><00:06:00.290><c> 100</c><00:06:00.920><c> and</c><00:06:01.040><c> ends</c><00:06:01.460><c> up</c><00:06:01.760><c> with</c>

00:06:01.780 --> 00:06:01.790 align:start position:0%
4 plus the number 100 and ends up with
 

00:06:01.790 --> 00:06:04.840 align:start position:0%
4 plus the number 100 and ends up with
that<00:06:02.780><c> vector</c><00:06:03.080><c> on</c><00:06:03.530><c> the</c><00:06:03.920><c> right</c><00:06:03.950><c> you're</c><00:06:04.520><c> adding</c>

00:06:04.840 --> 00:06:04.850 align:start position:0%
that vector on the right you're adding
 

00:06:04.850 --> 00:06:07.240 align:start position:0%
that vector on the right you're adding
100<00:06:05.270><c> to</c><00:06:05.390><c> every</c><00:06:05.600><c> element</c><00:06:05.930><c> so</c><00:06:06.110><c> in</c><00:06:06.170><c> fact</c><00:06:06.440><c> we</c><00:06:07.010><c> use</c>

00:06:07.240 --> 00:06:07.250 align:start position:0%
100 to every element so in fact we use
 

00:06:07.250 --> 00:06:09.190 align:start position:0%
100 to every element so in fact we use
this<00:06:07.460><c> form</c><00:06:07.730><c> of</c><00:06:07.820><c> broadcasting</c><00:06:08.510><c> where</c><00:06:09.050><c> that</c>

00:06:09.190 --> 00:06:09.200 align:start position:0%
this form of broadcasting where that
 

00:06:09.200 --> 00:06:12.490 align:start position:0%
this form of broadcasting where that
constants<00:06:09.800><c> was</c><00:06:10.190><c> on</c><00:06:10.460><c> the</c><00:06:11.090><c> parameter</c><00:06:11.690><c> B</c><00:06:11.960><c> in</c><00:06:12.260><c> an</c>

00:06:12.490 --> 00:06:12.500 align:start position:0%
constants was on the parameter B in an
 

00:06:12.500 --> 00:06:15.300 align:start position:0%
constants was on the parameter B in an
earlier<00:06:12.860><c> video</c><00:06:13.010><c> and</c><00:06:13.690><c> this</c><00:06:14.690><c> type</c><00:06:14.900><c> of</c>

00:06:15.300 --> 00:06:15.310 align:start position:0%
earlier video and this type of
 

00:06:15.310 --> 00:06:17.770 align:start position:0%
earlier video and this type of
Broadcasting<00:06:16.310><c> were</c><00:06:16.460><c> also</c><00:06:16.760><c> both</c><00:06:16.970><c> column</c>

00:06:17.770 --> 00:06:17.780 align:start position:0%
Broadcasting were also both column
 

00:06:17.780 --> 00:06:20.200 align:start position:0%
Broadcasting were also both column
vectors<00:06:18.170><c> and</c><00:06:18.410><c> row</c><00:06:18.890><c> vectors</c><00:06:19.370><c> and</c><00:06:19.700><c> in</c><00:06:19.880><c> fact</c><00:06:20.030><c> we</c>

00:06:20.200 --> 00:06:20.210 align:start position:0%
vectors and row vectors and in fact we
 

00:06:20.210 --> 00:06:21.700 align:start position:0%
vectors and row vectors and in fact we
use<00:06:20.390><c> a</c><00:06:20.420><c> similar</c><00:06:20.840><c> form</c><00:06:21.050><c> of</c><00:06:21.170><c> broadcasting</c>

00:06:21.700 --> 00:06:21.710 align:start position:0%
use a similar form of broadcasting
 

00:06:21.710 --> 00:06:24.790 align:start position:0%
use a similar form of broadcasting
earlier<00:06:22.070><c> with</c><00:06:22.940><c> the</c><00:06:23.810><c> constant</c><00:06:24.320><c> we're</c><00:06:24.410><c> adding</c>

00:06:24.790 --> 00:06:24.800 align:start position:0%
earlier with the constant we're adding
 

00:06:24.800 --> 00:06:27.370 align:start position:0%
earlier with the constant we're adding
to<00:06:24.980><c> a</c><00:06:25.010><c> vector</c><00:06:25.400><c> being</c><00:06:25.790><c> the</c><00:06:26.000><c> parameter</c><00:06:26.840><c> B</c><00:06:27.080><c> in</c>

00:06:27.370 --> 00:06:27.380 align:start position:0%
to a vector being the parameter B in
 

00:06:27.380 --> 00:06:29.720 align:start position:0%
to a vector being the parameter B in
logistic<00:06:28.340><c> regression</c>

00:06:29.720 --> 00:06:29.730 align:start position:0%
logistic regression
 

00:06:29.730 --> 00:06:31.910 align:start position:0%
logistic regression
here's<00:06:29.910><c> another</c><00:06:30.120><c> example</c><00:06:30.680><c> let's</c><00:06:31.680><c> say</c><00:06:31.860><c> you</c>

00:06:31.910 --> 00:06:31.920 align:start position:0%
here's another example let's say you
 

00:06:31.920 --> 00:06:36.650 align:start position:0%
here's another example let's say you
have<00:06:32.040><c> a</c><00:06:33.080><c> 2</c><00:06:34.080><c> by</c><00:06:34.260><c> 3</c><00:06:34.290><c> matrix</c><00:06:34.530><c> and</c><00:06:35.220><c> you</c><00:06:35.910><c> add</c><00:06:36.120><c> it</c><00:06:36.390><c> to</c>

00:06:36.650 --> 00:06:36.660 align:start position:0%
have a 2 by 3 matrix and you add it to
 

00:06:36.660 --> 00:06:41.660 align:start position:0%
have a 2 by 3 matrix and you add it to
this<00:06:37.080><c> 1</c><00:06:37.890><c> by</c><00:06:38.160><c> n</c><00:06:38.490><c> matrix</c><00:06:39.330><c> so</c><00:06:40.130><c> the</c><00:06:41.130><c> general</c><00:06:41.490><c> case</c>

00:06:41.660 --> 00:06:41.670 align:start position:0%
this 1 by n matrix so the general case
 

00:06:41.670 --> 00:06:46.250 align:start position:0%
this 1 by n matrix so the general case
would<00:06:41.880><c> be</c><00:06:41.910><c> if</c><00:06:42.120><c> you</c><00:06:42.210><c> have</c><00:06:42.420><c> some</c><00:06:42.750><c> m</c><00:06:43.550><c> by</c><00:06:44.550><c> n</c><00:06:45.260><c> matrix</c>

00:06:46.250 --> 00:06:46.260 align:start position:0%
would be if you have some m by n matrix
 

00:06:46.260 --> 00:06:54.370 align:start position:0%
would be if you have some m by n matrix
here<00:06:46.500><c> and</c><00:06:47.150><c> you</c><00:06:48.150><c> add</c><00:06:48.360><c> it</c><00:06:48.600><c> to</c><00:06:48.630><c> a</c><00:06:49.910><c> 1</c><00:06:51.380><c> by</c><00:06:52.380><c> n</c><00:06:52.790><c> matrix</c>

00:06:54.370 --> 00:06:54.380 align:start position:0%
here and you add it to a 1 by n matrix
 

00:06:54.380 --> 00:06:58.280 align:start position:0%
here and you add it to a 1 by n matrix
what<00:06:55.380><c> python</c><00:06:55.830><c> will</c><00:06:55.980><c> do</c><00:06:56.100><c> is</c><00:06:56.400><c> copy</c><00:06:57.120><c> the</c><00:06:57.540><c> matrix</c><00:06:58.020><c> M</c>

00:06:58.280 --> 00:06:58.290 align:start position:0%
what python will do is copy the matrix M
 

00:06:58.290 --> 00:07:00.770 align:start position:0%
what python will do is copy the matrix M
times<00:06:58.800><c> to</c><00:06:59.160><c> turn</c><00:06:59.370><c> this</c><00:06:59.610><c> into</c><00:06:59.820><c> an</c><00:07:00.000><c> M</c><00:07:00.180><c> by</c><00:07:00.480><c> n</c><00:07:00.510><c> matrix</c>

00:07:00.770 --> 00:07:00.780 align:start position:0%
times to turn this into an M by n matrix
 

00:07:00.780 --> 00:07:05.780 align:start position:0%
times to turn this into an M by n matrix
so<00:07:01.500><c> instead</c><00:07:01.770><c> of</c><00:07:01.970><c> this</c><00:07:03.740><c> 1</c><00:07:04.740><c> by</c><00:07:04.890><c> 3</c><00:07:05.100><c> matrix</c><00:07:05.550><c> will</c>

00:07:05.780 --> 00:07:05.790 align:start position:0%
so instead of this 1 by 3 matrix will
 

00:07:05.790 --> 00:07:08.570 align:start position:0%
so instead of this 1 by 3 matrix will
copy<00:07:06.090><c> it</c><00:07:06.270><c> twice</c><00:07:06.630><c> in</c><00:07:06.840><c> this</c><00:07:06.960><c> example</c><00:07:07.320><c> to</c><00:07:08.190><c> turn</c><00:07:08.430><c> it</c>

00:07:08.570 --> 00:07:08.580 align:start position:0%
copy it twice in this example to turn it
 

00:07:08.580 --> 00:07:14.210 align:start position:0%
copy it twice in this example to turn it
into<00:07:08.700><c> this</c><00:07:09.120><c> also</c><00:07:11.150><c> 2</c><00:07:12.150><c> by</c><00:07:12.330><c> 3</c><00:07:12.630><c> matrix</c><00:07:13.110><c> and</c><00:07:13.350><c> they'll</c>

00:07:14.210 --> 00:07:14.220 align:start position:0%
into this also 2 by 3 matrix and they'll
 

00:07:14.220 --> 00:07:16.730 align:start position:0%
into this also 2 by 3 matrix and they'll
add<00:07:14.430><c> these</c><00:07:14.640><c> so</c><00:07:15.120><c> you</c><00:07:15.180><c> end</c><00:07:15.390><c> up</c><00:07:15.540><c> with</c><00:07:15.750><c> this</c><00:07:16.320><c> sum</c><00:07:16.590><c> on</c>

00:07:16.730 --> 00:07:16.740 align:start position:0%
add these so you end up with this sum on
 

00:07:16.740 --> 00:07:19.910 align:start position:0%
add these so you end up with this sum on
the<00:07:16.830><c> right</c><00:07:17.010><c> ok</c><00:07:18.000><c> so</c><00:07:18.150><c> you've</c><00:07:18.450><c> taken</c><00:07:18.720><c> your</c><00:07:19.500><c> added</c>

00:07:19.910 --> 00:07:19.920 align:start position:0%
the right ok so you've taken your added
 

00:07:19.920 --> 00:07:21.680 align:start position:0%
the right ok so you've taken your added
100<00:07:20.460><c> to</c><00:07:20.550><c> the</c><00:07:20.640><c> first</c><00:07:20.880><c> column</c><00:07:21.090><c> and</c><00:07:21.420><c> the</c><00:07:21.510><c> two</c>

00:07:21.680 --> 00:07:21.690 align:start position:0%
100 to the first column and the two
 

00:07:21.690 --> 00:07:24.350 align:start position:0%
100 to the first column and the two
inches<00:07:21.900><c> to</c><00:07:22.050><c> the</c><00:07:22.080><c> second</c><00:07:22.410><c> column</c><00:07:22.710><c> added</c><00:07:23.220><c> 300</c><00:07:24.030><c> to</c>

00:07:24.350 --> 00:07:24.360 align:start position:0%
inches to the second column added 300 to
 

00:07:24.360 --> 00:07:26.630 align:start position:0%
inches to the second column added 300 to
the<00:07:24.480><c> third</c><00:07:24.690><c> column</c><00:07:24.930><c> and</c><00:07:25.380><c> this</c><00:07:26.310><c> is</c><00:07:26.430><c> basically</c>

00:07:26.630 --> 00:07:26.640 align:start position:0%
the third column and this is basically
 

00:07:26.640 --> 00:07:28.910 align:start position:0%
the third column and this is basically
what<00:07:26.970><c> we</c><00:07:27.090><c> did</c><00:07:27.300><c> on</c><00:07:27.510><c> the</c><00:07:27.720><c> previous</c><00:07:27.750><c> slide</c><00:07:28.350><c> except</c>

00:07:28.910 --> 00:07:28.920 align:start position:0%
what we did on the previous slide except
 

00:07:28.920 --> 00:07:31.520 align:start position:0%
what we did on the previous slide except
that<00:07:29.070><c> we</c><00:07:29.280><c> use</c><00:07:29.520><c> a</c><00:07:29.570><c> division</c><00:07:30.570><c> operation</c><00:07:30.750><c> instead</c>

00:07:31.520 --> 00:07:31.530 align:start position:0%
that we use a division operation instead
 

00:07:31.530 --> 00:07:34.460 align:start position:0%
that we use a division operation instead
of<00:07:31.620><c> an</c><00:07:31.740><c> addition</c><00:07:32.160><c> operation</c><00:07:33.170><c> just</c><00:07:34.170><c> one</c><00:07:34.320><c> last</c>

00:07:34.460 --> 00:07:34.470 align:start position:0%
of an addition operation just one last
 

00:07:34.470 --> 00:07:39.860 align:start position:0%
of an addition operation just one last
example<00:07:35.150><c> one</c><00:07:36.150><c> of</c><00:07:36.300><c> you</c><00:07:36.450><c> have</c><00:07:36.720><c> a</c><00:07:37.050><c> M</c><00:07:37.500><c> by</c><00:07:38.250><c> n</c><00:07:38.870><c> matrix</c>

00:07:39.860 --> 00:07:39.870 align:start position:0%
example one of you have a M by n matrix
 

00:07:39.870 --> 00:07:44.750 align:start position:0%
example one of you have a M by n matrix
and<00:07:40.200><c> your</c><00:07:40.380><c> hand</c><00:07:40.620><c> is</c><00:07:40.800><c> to</c><00:07:41.130><c> an</c><00:07:41.220><c> M</c><00:07:41.430><c> by</c><00:07:42.330><c> 1</c><00:07:42.930><c> vector</c><00:07:43.760><c> an</c>

00:07:44.750 --> 00:07:44.760 align:start position:0%
and your hand is to an M by 1 vector an
 

00:07:44.760 --> 00:07:48.500 align:start position:0%
and your hand is to an M by 1 vector an
M<00:07:44.940><c> by</c><00:07:45.090><c> 1</c><00:07:45.120><c> matrix</c><00:07:46.340><c> then</c><00:07:47.340><c> just</c><00:07:47.580><c> copy</c><00:07:47.940><c> this</c><00:07:48.240><c> n</c>

00:07:48.500 --> 00:07:48.510 align:start position:0%
M by 1 matrix then just copy this n
 

00:07:48.510 --> 00:07:51.380 align:start position:0%
M by 1 matrix then just copy this n
times<00:07:49.640><c> horizontally</c><00:07:50.640><c> so</c><00:07:50.700><c> you</c><00:07:50.880><c> end</c><00:07:51.000><c> up</c><00:07:51.150><c> with</c><00:07:51.270><c> an</c>

00:07:51.380 --> 00:07:51.390 align:start position:0%
times horizontally so you end up with an
 

00:07:51.390 --> 00:07:54.320 align:start position:0%
times horizontally so you end up with an
M<00:07:51.570><c> by</c><00:07:51.750><c> n</c><00:07:51.780><c> matrix</c><00:07:52.550><c> so</c><00:07:53.550><c> as</c><00:07:53.610><c> you</c><00:07:53.700><c> can</c><00:07:53.760><c> imagine</c><00:07:53.820><c> the</c>

00:07:54.320 --> 00:07:54.330 align:start position:0%
M by n matrix so as you can imagine the
 

00:07:54.330 --> 00:07:56.870 align:start position:0%
M by n matrix so as you can imagine the
copy<00:07:54.660><c> and</c><00:07:54.900><c> horizontally</c><00:07:55.650><c> three</c><00:07:56.310><c> times</c><00:07:56.550><c> and</c>

00:07:56.870 --> 00:07:56.880 align:start position:0%
copy and horizontally three times and
 

00:07:56.880 --> 00:08:00.080 align:start position:0%
copy and horizontally three times and
nando's<00:07:57.710><c> so</c><00:07:58.710><c> we</c><00:07:58.890><c> add</c><00:07:59.130><c> them</c><00:07:59.310><c> you</c><00:07:59.550><c> end</c><00:07:59.670><c> up</c><00:07:59.850><c> with</c>

00:08:00.080 --> 00:08:00.090 align:start position:0%
nando's so we add them you end up with
 

00:08:00.090 --> 00:08:03.590 align:start position:0%
nando's so we add them you end up with
this<00:08:00.270><c> so</c><00:08:01.080><c> we've</c><00:08:01.260><c> added</c><00:08:01.820><c> 100</c><00:08:02.820><c> to</c><00:08:03.000><c> the</c><00:08:03.120><c> first</c><00:08:03.360><c> row</c>

00:08:03.590 --> 00:08:03.600 align:start position:0%
this so we've added 100 to the first row
 

00:08:03.600 --> 00:08:08.330 align:start position:0%
this so we've added 100 to the first row
and<00:08:03.840><c> add</c><00:08:04.080><c> it</c><00:08:04.460><c> 200</c><00:08:05.460><c> to</c><00:08:06.120><c> the</c><00:08:06.150><c> second</c><00:08:06.630><c> row</c><00:08:07.340><c> here's</c>

00:08:08.330 --> 00:08:08.340 align:start position:0%
and add it 200 to the second row here's
 

00:08:08.340 --> 00:08:09.860 align:start position:0%
and add it 200 to the second row here's
the<00:08:08.550><c> more</c><00:08:08.730><c> general</c><00:08:09.180><c> principle</c><00:08:09.720><c> of</c>

00:08:09.860 --> 00:08:09.870 align:start position:0%
the more general principle of
 

00:08:09.870 --> 00:08:13.360 align:start position:0%
the more general principle of
broadcasting<00:08:10.620><c> in</c><00:08:10.830><c> Eisen</c><00:08:11.700><c> if</c><00:08:12.120><c> you</c><00:08:12.420><c> have</c><00:08:12.660><c> an</c><00:08:12.870><c> M</c>

00:08:13.360 --> 00:08:13.370 align:start position:0%
broadcasting in Eisen if you have an M
 

00:08:13.370 --> 00:08:18.350 align:start position:0%
broadcasting in Eisen if you have an M
by<00:08:14.370><c> n</c><00:08:14.930><c> matrix</c><00:08:15.930><c> and</c><00:08:16.290><c> you</c><00:08:17.010><c> add</c><00:08:17.190><c> or</c><00:08:17.550><c> subtract</c><00:08:18.150><c> or</c>

00:08:18.350 --> 00:08:18.360 align:start position:0%
by n matrix and you add or subtract or
 

00:08:18.360 --> 00:08:23.570 align:start position:0%
by n matrix and you add or subtract or
multiply<00:08:18.420><c> or</c><00:08:19.290><c> divide</c><00:08:19.350><c> or</c><00:08:20.130><c> they</c><00:08:20.960><c> 1</c><00:08:21.960><c> by</c><00:08:22.260><c> n</c><00:08:22.580><c> matrix</c>

00:08:23.570 --> 00:08:23.580 align:start position:0%
multiply or divide or they 1 by n matrix
 

00:08:23.580 --> 00:08:28.840 align:start position:0%
multiply or divide or they 1 by n matrix
then<00:08:24.570><c> this</c><00:08:24.780><c> will</c><00:08:25.020><c> copy</c><00:08:25.320><c> it</c><00:08:25.530><c> n</c><00:08:25.890><c> times</c><00:08:27.500><c> into</c><00:08:28.500><c> an</c><00:08:28.620><c> M</c>

00:08:28.840 --> 00:08:28.850 align:start position:0%
then this will copy it n times into an M
 

00:08:28.850 --> 00:08:33.020 align:start position:0%
then this will copy it n times into an M
by<00:08:29.850><c> n</c><00:08:30.090><c> matrix</c><00:08:30.570><c> and</c><00:08:30.840><c> then</c><00:08:31.440><c> apply</c><00:08:31.770><c> the</c><00:08:32.430><c> addition</c>

00:08:33.020 --> 00:08:33.030 align:start position:0%
by n matrix and then apply the addition
 

00:08:33.030 --> 00:08:34.750 align:start position:0%
by n matrix and then apply the addition
subtraction<00:08:33.570><c> multiplication</c><00:08:33.599><c> or</c><00:08:34.320><c> division</c>

00:08:34.750 --> 00:08:34.760 align:start position:0%
subtraction multiplication or division
 

00:08:34.760 --> 00:08:37.390 align:start position:0%
subtraction multiplication or division
element-wise

00:08:37.390 --> 00:08:37.400 align:start position:0%
element-wise
 

00:08:37.400 --> 00:08:40.150 align:start position:0%
element-wise
conversely<00:08:37.870><c> you</c><00:08:38.870><c> were</c><00:08:39.020><c> to</c><00:08:39.260><c> take</c><00:08:39.470><c> the</c><00:08:39.620><c> n</c><00:08:39.770><c> by</c><00:08:39.980><c> n</c>

00:08:40.150 --> 00:08:40.160 align:start position:0%
conversely you were to take the n by n
 

00:08:40.160 --> 00:08:42.130 align:start position:0%
conversely you were to take the n by n
matrix<00:08:40.640><c> and</c><00:08:40.880><c> add</c><00:08:41.270><c> subtract</c><00:08:41.780><c> multiply</c><00:08:41.810><c> divide</c>

00:08:42.130 --> 00:08:42.140 align:start position:0%
matrix and add subtract multiply divide
 

00:08:42.140 --> 00:08:46.540 align:start position:0%
matrix and add subtract multiply divide
by<00:08:42.800><c> an</c><00:08:42.860><c> M</c><00:08:43.070><c> by</c><00:08:44.030><c> 1</c><00:08:44.060><c> matrix</c><00:08:44.510><c> then</c><00:08:45.500><c> also</c><00:08:45.860><c> this</c><00:08:46.400><c> will</c>

00:08:46.540 --> 00:08:46.550 align:start position:0%
by an M by 1 matrix then also this will
 

00:08:46.550 --> 00:08:49.690 align:start position:0%
by an M by 1 matrix then also this will
copy<00:08:46.790><c> it</c><00:08:47.000><c> now</c><00:08:47.330><c> n</c><00:08:47.780><c> times</c><00:08:48.230><c> and</c><00:08:48.590><c> turn</c><00:08:49.310><c> that</c><00:08:49.460><c> into</c>

00:08:49.690 --> 00:08:49.700 align:start position:0%
copy it now n times and turn that into
 

00:08:49.700 --> 00:08:52.390 align:start position:0%
copy it now n times and turn that into
an<00:08:49.880><c> M</c><00:08:50.090><c> by</c><00:08:50.360><c> n</c><00:08:50.390><c> matrix</c><00:08:50.630><c> and</c><00:08:51.560><c> then</c><00:08:52.070><c> apply</c><00:08:52.340><c> the</c>

00:08:52.390 --> 00:08:52.400 align:start position:0%
an M by n matrix and then apply the
 

00:08:52.400 --> 00:08:55.180 align:start position:0%
an M by n matrix and then apply the
operation<00:08:53.230><c> element-wise</c><00:08:54.230><c> just</c><00:08:54.830><c> 1</c><00:08:54.980><c> on</c><00:08:55.130><c> the</c>

00:08:55.180 --> 00:08:55.190 align:start position:0%
operation element-wise just 1 on the
 

00:08:55.190 --> 00:08:56.740 align:start position:0%
operation element-wise just 1 on the
phone<00:08:55.340><c> forecasting</c><00:08:56.030><c> which</c><00:08:56.240><c> is</c><00:08:56.420><c> if</c><00:08:56.600><c> you</c><00:08:56.720><c> have</c>

00:08:56.740 --> 00:08:56.750 align:start position:0%
phone forecasting which is if you have
 

00:08:56.750 --> 00:09:00.340 align:start position:0%
phone forecasting which is if you have
an<00:08:57.020><c> M</c><00:08:57.260><c> by</c><00:08:57.680><c> 1</c><00:08:58.270><c> matrix</c><00:08:59.270><c> so</c><00:08:59.870><c> that's</c><00:09:00.080><c> really</c><00:09:00.230><c> a</c>

00:09:00.340 --> 00:09:00.350 align:start position:0%
an M by 1 matrix so that's really a
 

00:09:00.350 --> 00:09:04.380 align:start position:0%
an M by 1 matrix so that's really a
column<00:09:00.770><c> vector</c><00:09:00.800><c> like</c><00:09:01.670><c> 1</c><00:09:01.970><c> 2</c><00:09:02.390><c> 3</c><00:09:02.420><c> and</c><00:09:03.080><c> you</c><00:09:03.920><c> add</c>

00:09:04.380 --> 00:09:04.390 align:start position:0%
column vector like 1 2 3 and you add
 

00:09:04.390 --> 00:09:07.600 align:start position:0%
column vector like 1 2 3 and you add
subtract<00:09:05.390><c> multiply</c><00:09:05.420><c> or</c><00:09:05.900><c> divide</c><00:09:06.220><c> by</c><00:09:07.220><c> a</c><00:09:07.250><c> real</c>

00:09:07.600 --> 00:09:07.610 align:start position:0%
subtract multiply or divide by a real
 

00:09:07.610 --> 00:09:11.350 align:start position:0%
subtract multiply or divide by a real
number<00:09:08.170><c> so</c><00:09:09.170><c> we</c><00:09:09.350><c> get</c><00:09:09.530><c> 1</c><00:09:09.800><c> by</c><00:09:09.950><c> 1</c><00:09:10.130><c> matrix</c><00:09:10.310><c> so</c><00:09:11.090><c> such</c>

00:09:11.350 --> 00:09:11.360 align:start position:0%
number so we get 1 by 1 matrix so such
 

00:09:11.360 --> 00:09:15.610 align:start position:0%
number so we get 1 by 1 matrix so such
that<00:09:11.570><c> was</c><00:09:11.870><c> 100</c><00:09:12.440><c> then</c><00:09:13.190><c> you</c><00:09:13.220><c> end</c><00:09:13.520><c> up</c><00:09:14.620><c> copying</c>

00:09:15.610 --> 00:09:15.620 align:start position:0%
that was 100 then you end up copying
 

00:09:15.620 --> 00:09:20.680 align:start position:0%
that was 100 then you end up copying
this<00:09:16.010><c> real</c><00:09:16.310><c> number</c><00:09:16.490><c> n</c><00:09:17.170><c> times</c><00:09:18.940><c> until</c><00:09:19.940><c> you</c><00:09:20.570><c> also</c>

00:09:20.680 --> 00:09:20.690 align:start position:0%
this real number n times until you also
 

00:09:20.690 --> 00:09:24.490 align:start position:0%
this real number n times until you also
get<00:09:21.110><c> another</c><00:09:21.350><c> n</c><00:09:21.620><c> by</c><00:09:21.830><c> 1</c><00:09:22.100><c> matrix</c><00:09:22.850><c> and</c><00:09:23.360><c> then</c><00:09:23.870><c> you</c>

00:09:24.490 --> 00:09:24.500 align:start position:0%
get another n by 1 matrix and then you
 

00:09:24.500 --> 00:09:26.920 align:start position:0%
get another n by 1 matrix and then you
perform<00:09:25.040><c> the</c><00:09:25.280><c> operation</c><00:09:25.880><c> which</c><00:09:26.360><c> is</c><00:09:26.390><c> addition</c>

00:09:26.920 --> 00:09:26.930 align:start position:0%
perform the operation which is addition
 

00:09:26.930 --> 00:09:29.200 align:start position:0%
perform the operation which is addition
on<00:09:27.050><c> this</c><00:09:27.170><c> example</c><00:09:27.550><c> element</c><00:09:28.550><c> twice</c><00:09:28.790><c> and</c>

00:09:29.200 --> 00:09:29.210 align:start position:0%
on this example element twice and
 

00:09:29.210 --> 00:09:34.900 align:start position:0%
on this example element twice and
something<00:09:30.110><c> similar</c><00:09:30.700><c> also</c><00:09:31.700><c> works</c><00:09:32.410><c> for</c><00:09:33.910><c> row</c>

00:09:34.900 --> 00:09:34.910 align:start position:0%
something similar also works for row
 

00:09:34.910 --> 00:09:39.820 align:start position:0%
something similar also works for row
vectors<00:09:37.510><c> the</c><00:09:38.510><c> fully</c><00:09:38.900><c> general</c><00:09:39.380><c> version</c><00:09:39.590><c> of</c>

00:09:39.820 --> 00:09:39.830 align:start position:0%
vectors the fully general version of
 

00:09:39.830 --> 00:09:42.310 align:start position:0%
vectors the fully general version of
Broadcasting<00:09:40.790><c> can</c><00:09:41.090><c> do</c><00:09:41.330><c> even</c><00:09:41.570><c> a</c><00:09:41.960><c> little</c><00:09:42.230><c> bit</c>

00:09:42.310 --> 00:09:42.320 align:start position:0%
Broadcasting can do even a little bit
 

00:09:42.320 --> 00:09:44.560 align:start position:0%
Broadcasting can do even a little bit
more<00:09:42.500><c> than</c><00:09:42.650><c> this</c><00:09:42.830><c> if</c><00:09:43.610><c> you're</c><00:09:43.880><c> interested</c><00:09:44.360><c> you</c>

00:09:44.560 --> 00:09:44.570 align:start position:0%
more than this if you're interested you
 

00:09:44.570 --> 00:09:49.360 align:start position:0%
more than this if you're interested you
can<00:09:44.720><c> read</c><00:09:44.990><c> the</c><00:09:46.540><c> documentation</c><00:09:47.540><c> of</c><00:09:48.080><c> a</c><00:09:48.920><c> numpy</c>

00:09:49.360 --> 00:09:49.370 align:start position:0%
can read the documentation of a numpy
 

00:09:49.370 --> 00:09:50.950 align:start position:0%
can read the documentation of a numpy
and<00:09:49.730><c> look</c><00:09:49.850><c> at</c><00:09:50.030><c> broadcasting</c><00:09:50.750><c> that</c>

00:09:50.950 --> 00:09:50.960 align:start position:0%
and look at broadcasting that
 

00:09:50.960 --> 00:09:53.380 align:start position:0%
and look at broadcasting that
documentation<00:09:51.530><c> that</c><00:09:51.890><c> gives</c><00:09:52.520><c> an</c><00:09:52.640><c> even</c><00:09:52.940><c> funny</c>

00:09:53.380 --> 00:09:53.390 align:start position:0%
documentation that gives an even funny
 

00:09:53.390 --> 00:09:55.750 align:start position:0%
documentation that gives an even funny
more<00:09:53.660><c> general</c><00:09:54.500><c> definition</c><00:09:54.650><c> of</c><00:09:55.100><c> broadcasting</c>

00:09:55.750 --> 00:09:55.760 align:start position:0%
more general definition of broadcasting
 

00:09:55.760 --> 00:09:58.180 align:start position:0%
more general definition of broadcasting
but<00:09:56.450><c> the</c><00:09:56.780><c> ones</c><00:09:56.990><c> on</c><00:09:57.230><c> this</c><00:09:57.410><c> slide</c><00:09:57.620><c> are</c><00:09:57.830><c> the</c><00:09:57.980><c> main</c>

00:09:58.180 --> 00:09:58.190 align:start position:0%
but the ones on this slide are the main
 

00:09:58.190 --> 00:09:59.890 align:start position:0%
but the ones on this slide are the main
forms<00:09:58.550><c> of</c><00:09:58.610><c> broadcasting</c><00:09:59.240><c> being</c><00:09:59.480><c> ended</c><00:09:59.720><c> up</c>

00:09:59.890 --> 00:09:59.900 align:start position:0%
forms of broadcasting being ended up
 

00:09:59.900 --> 00:10:01.870 align:start position:0%
forms of broadcasting being ended up
needing<00:10:00.170><c> to</c><00:10:00.320><c> use</c><00:10:00.620><c> when</c><00:10:01.220><c> you</c><00:10:01.340><c> implement</c><00:10:01.580><c> in</c>

00:10:01.870 --> 00:10:01.880 align:start position:0%
needing to use when you implement in
 

00:10:01.880 --> 00:10:05.170 align:start position:0%
needing to use when you implement in
your<00:10:01.910><c> network</c><00:10:02.860><c> before</c><00:10:03.860><c> we</c><00:10:04.160><c> wrap</c><00:10:04.340><c> up</c><00:10:04.580><c> just</c><00:10:04.730><c> one</c>

00:10:05.170 --> 00:10:05.180 align:start position:0%
your network before we wrap up just one
 

00:10:05.180 --> 00:10:07.210 align:start position:0%
your network before we wrap up just one
last<00:10:05.690><c> comment</c><00:10:06.020><c> which</c><00:10:06.440><c> is</c><00:10:06.620><c> for</c><00:10:06.800><c> those</c><00:10:06.890><c> of</c><00:10:06.950><c> you</c>

00:10:07.210 --> 00:10:07.220 align:start position:0%
last comment which is for those of you
 

00:10:07.220 --> 00:10:08.830 align:start position:0%
last comment which is for those of you
that<00:10:07.370><c> are</c><00:10:07.520><c> used</c><00:10:07.790><c> to</c><00:10:08.000><c> programming</c><00:10:08.510><c> in</c><00:10:08.660><c> either</c>

00:10:08.830 --> 00:10:08.840 align:start position:0%
that are used to programming in either
 

00:10:08.840 --> 00:10:12.100 align:start position:0%
that are used to programming in either
MATLAB<00:10:09.830><c> or</c><00:10:10.010><c> octave</c><00:10:10.070><c> if</c><00:10:11.000><c> you've</c><00:10:11.270><c> ever</c><00:10:11.450><c> used</c><00:10:11.570><c> the</c>

00:10:12.100 --> 00:10:12.110 align:start position:0%
MATLAB or octave if you've ever used the
 

00:10:12.110 --> 00:10:15.400 align:start position:0%
MATLAB or octave if you've ever used the
malleable<00:10:12.980><c> octave</c><00:10:13.340><c> function</c><00:10:13.820><c> bsx</c><00:10:14.510><c> fun</c><00:10:14.900><c> in</c>

00:10:15.400 --> 00:10:15.410 align:start position:0%
malleable octave function bsx fun in
 

00:10:15.410 --> 00:10:18.820 align:start position:0%
malleable octave function bsx fun in
neonatal<00:10:16.370><c> programing</c><00:10:16.940><c> bsx</c><00:10:17.810><c> fun</c><00:10:18.200><c> does</c>

00:10:18.820 --> 00:10:18.830 align:start position:0%
neonatal programing bsx fun does
 

00:10:18.830 --> 00:10:20.560 align:start position:0%
neonatal programing bsx fun does
something<00:10:19.190><c> similar</c><00:10:19.670><c> not</c><00:10:19.910><c> quite</c><00:10:20.150><c> the</c><00:10:20.240><c> same</c><00:10:20.450><c> but</c>

00:10:20.560 --> 00:10:20.570 align:start position:0%
something similar not quite the same but
 

00:10:20.570 --> 00:10:22.930 align:start position:0%
something similar not quite the same but
is<00:10:20.690><c> often</c><00:10:20.870><c> use</c><00:10:21.290><c> for</c><00:10:21.920><c> a</c><00:10:21.950><c> similar</c><00:10:22.280><c> purpose</c><00:10:22.550><c> as</c>

00:10:22.930 --> 00:10:22.940 align:start position:0%
is often use for a similar purpose as
 

00:10:22.940 --> 00:10:24.810 align:start position:0%
is often use for a similar purpose as
what<00:10:23.120><c> we</c><00:10:23.210><c> use</c><00:10:23.360><c> broadcasting</c><00:10:24.110><c> in</c><00:10:24.260><c> Python</c><00:10:24.740><c> for</c>

00:10:24.810 --> 00:10:24.820 align:start position:0%
what we use broadcasting in Python for
 

00:10:24.820 --> 00:10:27.460 align:start position:0%
what we use broadcasting in Python for
but<00:10:25.820><c> this</c><00:10:25.970><c> is</c><00:10:26.090><c> really</c><00:10:26.300><c> only</c><00:10:26.540><c> for</c><00:10:26.750><c> very</c>

00:10:27.460 --> 00:10:27.470 align:start position:0%
but this is really only for very
 

00:10:27.470 --> 00:10:28.030 align:start position:0%
but this is really only for very
advanced

00:10:28.030 --> 00:10:28.040 align:start position:0%
advanced
 

00:10:28.040 --> 00:10:29.830 align:start position:0%
advanced
malim<00:10:28.520><c> in</c><00:10:28.640><c> octave</c><00:10:28.940><c> users</c><00:10:29.300><c> if</c><00:10:29.480><c> you've</c><00:10:29.600><c> not</c>

00:10:29.830 --> 00:10:29.840 align:start position:0%
malim in octave users if you've not
 

00:10:29.840 --> 00:10:31.810 align:start position:0%
malim in octave users if you've not
heard<00:10:30.050><c> of</c><00:10:30.170><c> this</c><00:10:30.350><c> don't</c><00:10:30.710><c> worry</c><00:10:30.860><c> about</c><00:10:30.950><c> it</c><00:10:31.280><c> you</c>

00:10:31.810 --> 00:10:31.820 align:start position:0%
heard of this don't worry about it you
 

00:10:31.820 --> 00:10:33.310 align:start position:0%
heard of this don't worry about it you
don't<00:10:32.000><c> need</c><00:10:32.120><c> to</c><00:10:32.240><c> know</c><00:10:32.390><c> it</c><00:10:32.570><c> when</c><00:10:33.020><c> you're</c><00:10:33.140><c> coding</c>

00:10:33.310 --> 00:10:33.320 align:start position:0%
don't need to know it when you're coding
 

00:10:33.320 --> 00:10:36.670 align:start position:0%
don't need to know it when you're coding
up<00:10:33.590><c> neural</c><00:10:33.890><c> networks</c><00:10:34.250><c> in</c><00:10:34.490><c> Python</c><00:10:35.200><c> so</c><00:10:36.200><c> that</c><00:10:36.530><c> was</c>

00:10:36.670 --> 00:10:36.680 align:start position:0%
up neural networks in Python so that was
 

00:10:36.680 --> 00:10:39.280 align:start position:0%
up neural networks in Python so that was
broadcasting<00:10:37.430><c> in</c><00:10:37.640><c> Tison</c><00:10:38.120><c> I</c><00:10:38.300><c> hope</c><00:10:38.870><c> that</c><00:10:39.080><c> when</c>

00:10:39.280 --> 00:10:39.290 align:start position:0%
broadcasting in Tison I hope that when
 

00:10:39.290 --> 00:10:40.930 align:start position:0%
broadcasting in Tison I hope that when
you<00:10:39.440><c> do</c><00:10:39.710><c> the</c><00:10:39.920><c> program</c><00:10:40.160><c> homework</c><00:10:40.640><c> there</c>

00:10:40.930 --> 00:10:40.940 align:start position:0%
you do the program homework there
 

00:10:40.940 --> 00:10:43.030 align:start position:0%
you do the program homework there
broadcasting<00:10:41.630><c> will</c><00:10:41.780><c> allow</c><00:10:41.960><c> you</c><00:10:42.020><c> to</c><00:10:42.470><c> not</c><00:10:42.980><c> only</c>

00:10:43.030 --> 00:10:43.040 align:start position:0%
broadcasting will allow you to not only
 

00:10:43.040 --> 00:10:45.670 align:start position:0%
broadcasting will allow you to not only
make<00:10:43.430><c> your</c><00:10:43.550><c> code</c><00:10:43.790><c> run</c><00:10:43.970><c> faster</c><00:10:44.450><c> but</c><00:10:45.080><c> also</c><00:10:45.140><c> help</c>

00:10:45.670 --> 00:10:45.680 align:start position:0%
make your code run faster but also help
 

00:10:45.680 --> 00:10:48.040 align:start position:0%
make your code run faster but also help
you<00:10:45.860><c> get</c><00:10:46.520><c> what</c><00:10:46.730><c> you</c><00:10:46.850><c> want</c><00:10:47.030><c> done</c><00:10:47.270><c> with</c><00:10:47.300><c> fewer</c>

00:10:48.040 --> 00:10:48.050 align:start position:0%
you get what you want done with fewer
 

00:10:48.050 --> 00:10:49.600 align:start position:0%
you get what you want done with fewer
lines<00:10:48.290><c> of</c><00:10:48.500><c> code</c>

00:10:49.600 --> 00:10:49.610 align:start position:0%
lines of code
 

00:10:49.610 --> 00:10:52.340 align:start position:0%
lines of code
before<00:10:50.610><c> you</c><00:10:50.790><c> dive</c><00:10:51.000><c> into</c><00:10:51.030><c> the</c><00:10:51.630><c> pro--</c><00:10:51.900><c> exercise</c>

00:10:52.340 --> 00:10:52.350 align:start position:0%
before you dive into the pro-- exercise
 

00:10:52.350 --> 00:10:53.840 align:start position:0%
before you dive into the pro-- exercise
I<00:10:52.590><c> want</c><00:10:52.740><c> to</c><00:10:52.800><c> share</c><00:10:52.980><c> with</c><00:10:53.100><c> you</c><00:10:53.220><c> just</c><00:10:53.400><c> one</c><00:10:53.670><c> more</c>

00:10:53.840 --> 00:10:53.850 align:start position:0%
I want to share with you just one more
 

00:10:53.850 --> 00:10:55.580 align:start position:0%
I want to share with you just one more
set<00:10:54.060><c> of</c><00:10:54.090><c> ideas</c><00:10:54.510><c> which</c><00:10:54.810><c> is</c><00:10:54.840><c> that</c><00:10:55.140><c> there</c><00:10:55.530><c> are</c>

00:10:55.580 --> 00:10:55.590 align:start position:0%
set of ideas which is that there are
 

00:10:55.590 --> 00:10:57.800 align:start position:0%
set of ideas which is that there are
some<00:10:55.800><c> tips</c><00:10:56.010><c> and</c><00:10:56.160><c> tricks</c><00:10:56.340><c> that</c><00:10:56.610><c> are</c><00:10:57.030><c> found</c><00:10:57.630><c> and</c>

00:10:57.800 --> 00:10:57.810 align:start position:0%
some tips and tricks that are found and
 

00:10:57.810 --> 00:10:59.870 align:start position:0%
some tips and tricks that are found and
reduces<00:10:58.290><c> the</c><00:10:58.560><c> number</c><00:10:58.710><c> of</c><00:10:58.890><c> bugs</c><00:10:59.040><c> in</c><00:10:59.280><c> my</c><00:10:59.430><c> Python</c>

00:10:59.870 --> 00:10:59.880 align:start position:0%
reduces the number of bugs in my Python
 

00:10:59.880 --> 00:11:02.030 align:start position:0%
reduces the number of bugs in my Python
code<00:11:00.060><c> and</c><00:11:00.330><c> then</c><00:11:00.750><c> I</c><00:11:00.870><c> hope</c><00:11:01.080><c> will</c><00:11:01.530><c> help</c><00:11:01.650><c> you</c><00:11:01.830><c> too</c>

00:11:02.030 --> 00:11:02.040 align:start position:0%
code and then I hope will help you too
 

00:11:02.040 --> 00:11:04.910 align:start position:0%
code and then I hope will help you too
so<00:11:02.670><c> that</c><00:11:03.000><c> let's</c><00:11:03.600><c> talk</c><00:11:04.050><c> about</c><00:11:04.110><c> that</c><00:11:04.320><c> in</c><00:11:04.740><c> the</c>

00:11:04.910 --> 00:11:04.920 align:start position:0%
so that let's talk about that in the
 

00:11:04.920 --> 00:11:07.250 align:start position:0%
so that let's talk about that in the
next<00:11:05.130><c> video</c>

