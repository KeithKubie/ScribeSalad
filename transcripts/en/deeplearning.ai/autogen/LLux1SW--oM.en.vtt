WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.780
so far the classification examples we've

00:00:02.780 --> 00:00:02.790
so far the classification examples we've
 

00:00:02.790 --> 00:00:04.400
so far the classification examples we've
talked about have used binary

00:00:04.400 --> 00:00:04.410
talked about have used binary
 

00:00:04.410 --> 00:00:06.019
talked about have used binary
classification where you had two

00:00:06.019 --> 00:00:06.029
classification where you had two
 

00:00:06.029 --> 00:00:08.930
classification where you had two
possible labels zero or one is in a cat

00:00:08.930 --> 00:00:08.940
possible labels zero or one is in a cat
 

00:00:08.940 --> 00:00:10.879
possible labels zero or one is in a cat
as an alley cat what if you have

00:00:10.879 --> 00:00:10.889
as an alley cat what if you have
 

00:00:10.889 --> 00:00:13.280
as an alley cat what if you have
multiple possible classes there's a

00:00:13.280 --> 00:00:13.290
multiple possible classes there's a
 

00:00:13.290 --> 00:00:15.350
multiple possible classes there's a
generalization of logistic regression

00:00:15.350 --> 00:00:15.360
generalization of logistic regression
 

00:00:15.360 --> 00:00:17.599
generalization of logistic regression
called softmax regression that lets you

00:00:17.599 --> 00:00:17.609
called softmax regression that lets you
 

00:00:17.609 --> 00:00:19.220
called softmax regression that lets you
make predictions where you're trying to

00:00:19.220 --> 00:00:19.230
make predictions where you're trying to
 

00:00:19.230 --> 00:00:22.460
make predictions where you're trying to
recognize one of c or one of multiple

00:00:22.460 --> 00:00:22.470
recognize one of c or one of multiple
 

00:00:22.470 --> 00:00:25.250
recognize one of c or one of multiple
classes rather than just recognize two

00:00:25.250 --> 00:00:25.260
classes rather than just recognize two
 

00:00:25.260 --> 00:00:27.710
classes rather than just recognize two
classes let's take a look let's say that

00:00:27.710 --> 00:00:27.720
classes let's take a look let's say that
 

00:00:27.720 --> 00:00:29.689
classes let's take a look let's say that
instead of just recognizing cats you

00:00:29.689 --> 00:00:29.699
instead of just recognizing cats you
 

00:00:29.699 --> 00:00:31.880
instead of just recognizing cats you
want to recognize cats dogs and big

00:00:31.880 --> 00:00:31.890
want to recognize cats dogs and big
 

00:00:31.890 --> 00:00:34.610
want to recognize cats dogs and big
kicks so I'm going to call cuts across

00:00:34.610 --> 00:00:34.620
kicks so I'm going to call cuts across
 

00:00:34.620 --> 00:00:38.180
kicks so I'm going to call cuts across
$1 class to baby chicks cost three and

00:00:38.180 --> 00:00:38.190
$1 class to baby chicks cost three and
 

00:00:38.190 --> 00:00:40.250
$1 class to baby chicks cost three and
there's none of the above then there's

00:00:40.250 --> 00:00:40.260
there's none of the above then there's
 

00:00:40.260 --> 00:00:42.500
there's none of the above then there's
an other or none of the above calls

00:00:42.500 --> 00:00:42.510
an other or none of the above calls
 

00:00:42.510 --> 00:00:45.560
an other or none of the above calls
which I'm going to call cost of zero so

00:00:45.560 --> 00:00:45.570
which I'm going to call cost of zero so
 

00:00:45.570 --> 00:00:47.869
which I'm going to call cost of zero so
here's an example of the images and the

00:00:47.869 --> 00:00:47.879
here's an example of the images and the
 

00:00:47.879 --> 00:00:50.330
here's an example of the images and the
classes they belong to that's a picture

00:00:50.330 --> 00:00:50.340
classes they belong to that's a picture
 

00:00:50.340 --> 00:00:52.130
classes they belong to that's a picture
of a baby chick so the cost is three

00:00:52.130 --> 00:00:52.140
of a baby chick so the cost is three
 

00:00:52.140 --> 00:00:55.910
of a baby chick so the cost is three
chances cross one a dog is cost - that's

00:00:55.910 --> 00:00:55.920
chances cross one a dog is cost - that's
 

00:00:55.920 --> 00:00:58.369
chances cross one a dog is cost - that's
a guess that's a koala so that's a none

00:00:58.369 --> 00:00:58.379
a guess that's a koala so that's a none
 

00:00:58.379 --> 00:01:00.619
a guess that's a koala so that's a none
of the above so that's called zero cost

00:01:00.619 --> 00:01:00.629
of the above so that's called zero cost
 

00:01:00.629 --> 00:01:04.729
of the above so that's called zero cost
three and so on so the notation we're

00:01:04.729 --> 00:01:04.739
three and so on so the notation we're
 

00:01:04.739 --> 00:01:06.890
three and so on so the notation we're
going to use is I'm going to use capital

00:01:06.890 --> 00:01:06.900
going to use is I'm going to use capital
 

00:01:06.900 --> 00:01:11.210
going to use is I'm going to use capital
C to denote the number of classes you're

00:01:11.210 --> 00:01:11.220
C to denote the number of classes you're
 

00:01:11.220 --> 00:01:13.429
C to denote the number of classes you're
trying to categorize your inputs into

00:01:13.429 --> 00:01:13.439
trying to categorize your inputs into
 

00:01:13.439 --> 00:01:16.160
trying to categorize your inputs into
and in this case you have four possible

00:01:16.160 --> 00:01:16.170
and in this case you have four possible
 

00:01:16.170 --> 00:01:18.499
and in this case you have four possible
classes including the other ordinality

00:01:18.499 --> 00:01:18.509
classes including the other ordinality
 

00:01:18.509 --> 00:01:21.200
classes including the other ordinality
above costs so when you're four courses

00:01:21.200 --> 00:01:21.210
above costs so when you're four courses
 

00:01:21.210 --> 00:01:24.320
above costs so when you're four courses
the numbers indexing your classes would

00:01:24.320 --> 00:01:24.330
the numbers indexing your classes would
 

00:01:24.330 --> 00:01:28.850
the numbers indexing your classes would
be 0 to C minus 1 to capital C minus 1

00:01:28.850 --> 00:01:28.860
be 0 to C minus 1 to capital C minus 1
 

00:01:28.860 --> 00:01:31.429
be 0 to C minus 1 to capital C minus 1
so in other words would be 0 1 2 or 3 in

00:01:31.429 --> 00:01:31.439
so in other words would be 0 1 2 or 3 in
 

00:01:31.439 --> 00:01:32.690
so in other words would be 0 1 2 or 3 in
this case we're going to build a new

00:01:32.690 --> 00:01:32.700
this case we're going to build a new
 

00:01:32.700 --> 00:01:36.770
this case we're going to build a new
network where the output Slayer has 4 or

00:01:36.770 --> 00:01:36.780
network where the output Slayer has 4 or
 

00:01:36.780 --> 00:01:39.950
network where the output Slayer has 4 or
in this case the variable capital

00:01:39.950 --> 00:01:39.960
in this case the variable capital
 

00:01:39.960 --> 00:01:45.080
in this case the variable capital
alphabet C output units so n the number

00:01:45.080 --> 00:01:45.090
alphabet C output units so n the number
 

00:01:45.090 --> 00:01:47.330
alphabet C output units so n the number
of units in the output layer which is

00:01:47.330 --> 00:01:47.340
of units in the output layer which is
 

00:01:47.340 --> 00:01:50.480
of units in the output layer which is
where L is going to be equal to 4 or

00:01:50.480 --> 00:01:50.490
where L is going to be equal to 4 or
 

00:01:50.490 --> 00:01:52.550
where L is going to be equal to 4 or
more generally is going to be equal to C

00:01:52.550 --> 00:01:52.560
more generally is going to be equal to C
 

00:01:52.560 --> 00:01:55.639
more generally is going to be equal to C
and what we want is for the number of

00:01:55.639 --> 00:01:55.649
and what we want is for the number of
 

00:01:55.649 --> 00:01:58.069
and what we want is for the number of
units and alquiler to tell us once the

00:01:58.069 --> 00:01:58.079
units and alquiler to tell us once the
 

00:01:58.079 --> 00:01:59.690
units and alquiler to tell us once the
probability of each of these core

00:01:59.690 --> 00:01:59.700
probability of each of these core
 

00:01:59.700 --> 00:02:03.080
probability of each of these core
classes so the first node here is

00:02:03.080 --> 00:02:03.090
classes so the first node here is
 

00:02:03.090 --> 00:02:04.880
classes so the first node here is
supposed to output or we wanted to

00:02:04.880 --> 00:02:04.890
supposed to output or we wanted to
 

00:02:04.890 --> 00:02:07.219
supposed to output or we wanted to
output the probability that is the other

00:02:07.219 --> 00:02:07.229
output the probability that is the other
 

00:02:07.229 --> 00:02:09.660
output the probability that is the other
class given G and collects

00:02:09.660 --> 00:02:09.670
class given G and collects
 

00:02:09.670 --> 00:02:12.089
class given G and collects
so output probability there's a cat

00:02:12.089 --> 00:02:12.099
so output probability there's a cat
 

00:02:12.099 --> 00:02:15.240
so output probability there's a cat
given X this will output probability

00:02:15.240 --> 00:02:15.250
given X this will output probability
 

00:02:15.250 --> 00:02:18.570
given X this will output probability
that is a dog given X that will output

00:02:18.570 --> 00:02:18.580
that is a dog given X that will output
 

00:02:18.580 --> 00:02:20.550
that is a dog given X that will output
the probability I'm just going to

00:02:20.550 --> 00:02:20.560
the probability I'm just going to
 

00:02:20.560 --> 00:02:22.260
the probability I'm just going to
abbreviate baby-shaped

00:02:22.260 --> 00:02:22.270
abbreviate baby-shaped
 

00:02:22.270 --> 00:02:24.800
abbreviate baby-shaped
to BBC so probably on a baby chick

00:02:24.800 --> 00:02:24.810
to BBC so probably on a baby chick
 

00:02:24.810 --> 00:02:29.220
to BBC so probably on a baby chick
abbreviated BC given the inferred X so

00:02:29.220 --> 00:02:29.230
abbreviated BC given the inferred X so
 

00:02:29.230 --> 00:02:32.970
abbreviated BC given the inferred X so
here the output labels my hat is going

00:02:32.970 --> 00:02:32.980
here the output labels my hat is going
 

00:02:32.980 --> 00:02:35.880
here the output labels my hat is going
to be a four by one dimensional vector

00:02:35.880 --> 00:02:35.890
to be a four by one dimensional vector
 

00:02:35.890 --> 00:02:38.220
to be a four by one dimensional vector
because it now has two output for

00:02:38.220 --> 00:02:38.230
because it now has two output for
 

00:02:38.230 --> 00:02:40.740
because it now has two output for
numbers giving you these four

00:02:40.740 --> 00:02:40.750
numbers giving you these four
 

00:02:40.750 --> 00:02:43.350
numbers giving you these four
probabilities and because probably

00:02:43.350 --> 00:02:43.360
probabilities and because probably
 

00:02:43.360 --> 00:02:46.350
probabilities and because probably
should sum to one the phone numbers in

00:02:46.350 --> 00:02:46.360
should sum to one the phone numbers in
 

00:02:46.360 --> 00:02:49.610
should sum to one the phone numbers in
the output Y hat they should sum to one

00:02:49.610 --> 00:02:49.620
the output Y hat they should sum to one
 

00:02:49.620 --> 00:02:52.470
the output Y hat they should sum to one
the standard model for getting a neural

00:02:52.470 --> 00:02:52.480
the standard model for getting a neural
 

00:02:52.480 --> 00:02:55.380
the standard model for getting a neural
network to do this uses what's called a

00:02:55.380 --> 00:02:55.390
network to do this uses what's called a
 

00:02:55.390 --> 00:02:58.020
network to do this uses what's called a
Softbank layer in the output layer in

00:02:58.020 --> 00:02:58.030
Softbank layer in the output layer in
 

00:02:58.030 --> 00:03:00.270
Softbank layer in the output layer in
order to generate these outputs let me

00:03:00.270 --> 00:03:00.280
order to generate these outputs let me
 

00:03:00.280 --> 00:03:01.620
order to generate these outputs let me
write down the map and then come back

00:03:01.620 --> 00:03:01.630
write down the map and then come back
 

00:03:01.630 --> 00:03:03.449
write down the map and then come back
and do some intuition about what the

00:03:03.449 --> 00:03:03.459
and do some intuition about what the
 

00:03:03.459 --> 00:03:07.080
and do some intuition about what the
soft Maclin air is doing so in the final

00:03:07.080 --> 00:03:07.090
soft Maclin air is doing so in the final
 

00:03:07.090 --> 00:03:09.479
soft Maclin air is doing so in the final
layer in your network you are going to

00:03:09.479 --> 00:03:09.489
layer in your network you are going to
 

00:03:09.489 --> 00:03:12.509
layer in your network you are going to
compute as usual the linear part of the

00:03:12.509 --> 00:03:12.519
compute as usual the linear part of the
 

00:03:12.519 --> 00:03:15.840
compute as usual the linear part of the
layer so the capital L that's the Z

00:03:15.840 --> 00:03:15.850
layer so the capital L that's the Z
 

00:03:15.850 --> 00:03:18.330
layer so the capital L that's the Z
variable for the final layer so remember

00:03:18.330 --> 00:03:18.340
variable for the final layer so remember
 

00:03:18.340 --> 00:03:22.650
variable for the final layer so remember
this is layer capital L so as usual you

00:03:22.650 --> 00:03:22.660
this is layer capital L so as usual you
 

00:03:22.660 --> 00:03:26.039
this is layer capital L so as usual you
compute that as WL times the activation

00:03:26.039 --> 00:03:26.049
compute that as WL times the activation
 

00:03:26.049 --> 00:03:30.509
compute that as WL times the activation
the previous layer plus the biases for

00:03:30.509 --> 00:03:30.519
the previous layer plus the biases for
 

00:03:30.519 --> 00:03:33.240
the previous layer plus the biases for
that final layer now having computed Z's

00:03:33.240 --> 00:03:33.250
that final layer now having computed Z's
 

00:03:33.250 --> 00:03:35.370
that final layer now having computed Z's
you now need to apply what's called the

00:03:35.370 --> 00:03:35.380
you now need to apply what's called the
 

00:03:35.380 --> 00:03:39.060
you now need to apply what's called the
softmax activation function so the

00:03:39.060 --> 00:03:39.070
softmax activation function so the
 

00:03:39.070 --> 00:03:41.880
softmax activation function so the
activation function is a bit unusual for

00:03:41.880 --> 00:03:41.890
activation function is a bit unusual for
 

00:03:41.890 --> 00:03:43.740
activation function is a bit unusual for
the soft mask layer but this is what it

00:03:43.740 --> 00:03:43.750
the soft mask layer but this is what it
 

00:03:43.750 --> 00:03:47.539
the soft mask layer but this is what it
does first we're going to compute a

00:03:47.539 --> 00:03:47.549
does first we're going to compute a
 

00:03:47.549 --> 00:03:51.120
does first we're going to compute a
temporary variable which we call T which

00:03:51.120 --> 00:03:51.130
temporary variable which we call T which
 

00:03:51.130 --> 00:03:55.319
temporary variable which we call T which
is e to the Z L so this is a plot

00:03:55.319 --> 00:03:55.329
is e to the Z L so this is a plot
 

00:03:55.329 --> 00:03:58.530
is e to the Z L so this is a plot
element wise so VL here in our example

00:03:58.530 --> 00:03:58.540
element wise so VL here in our example
 

00:03:58.540 --> 00:04:01.259
element wise so VL here in our example
ZL is going to be four point one is a

00:04:01.259 --> 00:04:01.269
ZL is going to be four point one is a
 

00:04:01.269 --> 00:04:05.430
ZL is going to be four point one is a
four dimensional vector so T itself e to

00:04:05.430 --> 00:04:05.440
four dimensional vector so T itself e to
 

00:04:05.440 --> 00:04:06.930
four dimensional vector so T itself e to
the GL does an element-wise

00:04:06.930 --> 00:04:06.940
the GL does an element-wise
 

00:04:06.940 --> 00:04:11.099
the GL does an element-wise
exponentiation T will also be a four by

00:04:11.099 --> 00:04:11.109
exponentiation T will also be a four by
 

00:04:11.109 --> 00:04:14.150
exponentiation T will also be a four by
one dimensional vector then the output

00:04:14.150 --> 00:04:14.160
one dimensional vector then the output
 

00:04:14.160 --> 00:04:18.810
one dimensional vector then the output
al is going to be basically the vector T

00:04:18.810 --> 00:04:18.820
al is going to be basically the vector T
 

00:04:18.820 --> 00:04:21.570
al is going to be basically the vector T
but normalized to sum to 1 so al s going

00:04:21.570 --> 00:04:21.580
but normalized to sum to 1 so al s going
 

00:04:21.580 --> 00:04:22.860
but normalized to sum to 1 so al s going
to e to the Z

00:04:22.860 --> 00:04:22.870
to e to the Z
 

00:04:22.870 --> 00:04:29.909
to e to the Z
l / sum from J equals one through four

00:04:29.909 --> 00:04:29.919
l / sum from J equals one through four
 

00:04:29.919 --> 00:04:32.670
l / sum from J equals one through four
because there are four classes of T

00:04:32.670 --> 00:04:32.680
because there are four classes of T
 

00:04:32.680 --> 00:04:35.250
because there are four classes of T
subscript I so another way of saying

00:04:35.250 --> 00:04:35.260
subscript I so another way of saying
 

00:04:35.260 --> 00:04:40.260
subscript I so another way of saying
this is that al is also a four point one

00:04:40.260 --> 00:04:40.270
this is that al is also a four point one
 

00:04:40.270 --> 00:04:43.379
this is that al is also a four point one
vector and the I've elements of this

00:04:43.379 --> 00:04:43.389
vector and the I've elements of this
 

00:04:43.389 --> 00:04:45.240
vector and the I've elements of this
four dimensional vector let's vary that

00:04:45.240 --> 00:04:45.250
four dimensional vector let's vary that
 

00:04:45.250 --> 00:04:48.950
four dimensional vector let's vary that
al subscript I this can be equal to GI

00:04:48.950 --> 00:04:48.960
al subscript I this can be equal to GI
 

00:04:48.960 --> 00:04:56.040
al subscript I this can be equal to GI
over some of GI okay

00:04:56.040 --> 00:04:56.050
over some of GI okay
 

00:04:56.050 --> 00:04:59.010
over some of GI okay
in case this map isn't clear we'll do an

00:04:59.010 --> 00:04:59.020
in case this map isn't clear we'll do an
 

00:04:59.020 --> 00:05:00.930
in case this map isn't clear we'll do an
example in a minute that make this

00:05:00.930 --> 00:05:00.940
example in a minute that make this
 

00:05:00.940 --> 00:05:03.659
example in a minute that make this
clearer so in cases map isn't clear

00:05:03.659 --> 00:05:03.669
clearer so in cases map isn't clear
 

00:05:03.669 --> 00:05:05.790
clearer so in cases map isn't clear
let's go through a specific example that

00:05:05.790 --> 00:05:05.800
let's go through a specific example that
 

00:05:05.800 --> 00:05:08.189
let's go through a specific example that
will make this clearer let's say then

00:05:08.189 --> 00:05:08.199
will make this clearer let's say then
 

00:05:08.199 --> 00:05:12.420
will make this clearer let's say then
your computer's VL + ZL is a four

00:05:12.420 --> 00:05:12.430
your computer's VL + ZL is a four
 

00:05:12.430 --> 00:05:16.350
your computer's VL + ZL is a four
dimensional vector let's say is 5 to

00:05:16.350 --> 00:05:16.360
dimensional vector let's say is 5 to
 

00:05:16.360 --> 00:05:19.800
dimensional vector let's say is 5 to
negative 1/3 what we're going to do is

00:05:19.800 --> 00:05:19.810
negative 1/3 what we're going to do is
 

00:05:19.810 --> 00:05:22.230
negative 1/3 what we're going to do is
use this element wise exponentiation to

00:05:22.230 --> 00:05:22.240
use this element wise exponentiation to
 

00:05:22.240 --> 00:05:24.510
use this element wise exponentiation to
compute this vector team so T is going

00:05:24.510 --> 00:05:24.520
compute this vector team so T is going
 

00:05:24.520 --> 00:05:28.170
compute this vector team so T is going
to be e to the 5 e to the 2 e 2 negative

00:05:28.170 --> 00:05:28.180
to be e to the 5 e to the 2 e 2 negative
 

00:05:28.180 --> 00:05:30.900
to be e to the 5 e to the 2 e 2 negative
1 e to the 3 and if you present a

00:05:30.900 --> 00:05:30.910
1 e to the 3 and if you present a
 

00:05:30.910 --> 00:05:32.730
1 e to the 3 and if you present a
calculator these are the values you get

00:05:32.730 --> 00:05:32.740
calculator these are the values you get
 

00:05:32.740 --> 00:05:37.740
calculator these are the values you get
e to the 5 is 1 4 8 4 e squared is about

00:05:37.740 --> 00:05:37.750
e to the 5 is 1 4 8 4 e squared is about
 

00:05:37.750 --> 00:05:41.520
e to the 5 is 1 4 8 4 e squared is about
7 point 4 e to the negative 1 is 0.4 and

00:05:41.520 --> 00:05:41.530
7 point 4 e to the negative 1 is 0.4 and
 

00:05:41.530 --> 00:05:45.750
7 point 4 e to the negative 1 is 0.4 and
études is 20 point 1 and so the way we

00:05:45.750 --> 00:05:45.760
études is 20 point 1 and so the way we
 

00:05:45.760 --> 00:05:48.930
études is 20 point 1 and so the way we
go from the vector T to the vector al is

00:05:48.930 --> 00:05:48.940
go from the vector T to the vector al is
 

00:05:48.940 --> 00:05:51.510
go from the vector T to the vector al is
to just normalize these entries to sum

00:05:51.510 --> 00:05:51.520
to just normalize these entries to sum
 

00:05:51.520 --> 00:05:55.939
to just normalize these entries to sum
to 1 so if you sum up the elements of T

00:05:55.939 --> 00:05:55.949
to 1 so if you sum up the elements of T
 

00:05:55.949 --> 00:05:58.320
to 1 so if you sum up the elements of T
if you just add up those whole numbers

00:05:58.320 --> 00:05:58.330
if you just add up those whole numbers
 

00:05:58.330 --> 00:06:06.960
if you just add up those whole numbers
you get 1 7 6 points 3 so finally a ll

00:06:06.960 --> 00:06:06.970
you get 1 7 6 points 3 so finally a ll
 

00:06:06.970 --> 00:06:09.779
you get 1 7 6 points 3 so finally a ll
is just going to be this vector T as a

00:06:09.779 --> 00:06:09.789
is just going to be this vector T as a
 

00:06:09.789 --> 00:06:15.810
is just going to be this vector T as a
vector divided by 1 7 6 on 3 so for

00:06:15.810 --> 00:06:15.820
vector divided by 1 7 6 on 3 so for
 

00:06:15.820 --> 00:06:19.020
vector divided by 1 7 6 on 3 so for
example this first node here this will

00:06:19.020 --> 00:06:19.030
example this first node here this will
 

00:06:19.030 --> 00:06:23.850
example this first node here this will
output e to the 5 divided by 1 7 6 point

00:06:23.850 --> 00:06:23.860
output e to the 5 divided by 1 7 6 point
 

00:06:23.860 --> 00:06:27.000
output e to the 5 divided by 1 7 6 point
3 and that turns out to be a zero point

00:06:27.000 --> 00:06:27.010
3 and that turns out to be a zero point
 

00:06:27.010 --> 00:06:30.510
3 and that turns out to be a zero point
8 4 2 so saying that for this image if

00:06:30.510 --> 00:06:30.520
8 4 2 so saying that for this image if
 

00:06:30.520 --> 00:06:32.370
8 4 2 so saying that for this image if
this is the value of V you get the

00:06:32.370 --> 00:06:32.380
this is the value of V you get the
 

00:06:32.380 --> 00:06:35.870
this is the value of V you get the
chance of it being called 0 is 84

00:06:35.870 --> 00:06:35.880
chance of it being called 0 is 84
 

00:06:35.880 --> 00:06:38.300
chance of it being called 0 is 84
two percent and then the next node

00:06:38.300 --> 00:06:38.310
two percent and then the next node
 

00:06:38.310 --> 00:06:41.870
two percent and then the next node
outputs B squared over one seven six

00:06:41.870 --> 00:06:41.880
outputs B squared over one seven six
 

00:06:41.880 --> 00:06:44.390
outputs B squared over one seven six
point three that turns out to be zero

00:06:44.390 --> 00:06:44.400
point three that turns out to be zero
 

00:06:44.400 --> 00:06:46.760
point three that turns out to be zero
point zero four two six four point two

00:06:46.760 --> 00:06:46.770
point zero four two six four point two
 

00:06:46.770 --> 00:06:48.980
point zero four two six four point two
percent chance the next one is e to

00:06:48.980 --> 00:06:48.990
percent chance the next one is e to
 

00:06:48.990 --> 00:06:55.940
percent chance the next one is e to
negative one over that which is 0.02 and

00:06:55.940 --> 00:06:55.950
negative one over that which is 0.02 and
 

00:06:55.950 --> 00:07:02.480
negative one over that which is 0.02 and
the final one is etude over that which

00:07:02.480 --> 00:07:02.490
the final one is etude over that which
 

00:07:02.490 --> 00:07:05.450
the final one is etude over that which
is zero point one 1/4 so brother another

00:07:05.450 --> 00:07:05.460
is zero point one 1/4 so brother another
 

00:07:05.460 --> 00:07:07.280
is zero point one 1/4 so brother another
point four percent challenge that this

00:07:07.280 --> 00:07:07.290
point four percent challenge that this
 

00:07:07.290 --> 00:07:09.440
point four percent challenge that this
is cost number three which I guess is

00:07:09.440 --> 00:07:09.450
is cost number three which I guess is
 

00:07:09.450 --> 00:07:11.150
is cost number three which I guess is
the baby chick cost right so there's a

00:07:11.150 --> 00:07:11.160
the baby chick cost right so there's a
 

00:07:11.160 --> 00:07:13.430
the baby chick cost right so there's a
chance of it being called zero cause 1

00:07:13.430 --> 00:07:13.440
chance of it being called zero cause 1
 

00:07:13.440 --> 00:07:17.180
chance of it being called zero cause 1
plus 2 Plus 3 so the output of in your

00:07:17.180 --> 00:07:17.190
plus 2 Plus 3 so the output of in your
 

00:07:17.190 --> 00:07:22.340
plus 2 Plus 3 so the output of in your
network a L this is also Y hat this is a

00:07:22.340 --> 00:07:22.350
network a L this is also Y hat this is a
 

00:07:22.350 --> 00:07:25.010
network a L this is also Y hat this is a
four by one vector where the elements of

00:07:25.010 --> 00:07:25.020
four by one vector where the elements of
 

00:07:25.020 --> 00:07:27.260
four by one vector where the elements of
this for ball one vector are going to be

00:07:27.260 --> 00:07:27.270
this for ball one vector are going to be
 

00:07:27.270 --> 00:07:30.590
this for ball one vector are going to be
these four numbers that we just computed

00:07:30.590 --> 00:07:30.600
these four numbers that we just computed
 

00:07:30.600 --> 00:07:35.150
these four numbers that we just computed
so this algorithm takes the vector Z L

00:07:35.150 --> 00:07:35.160
so this algorithm takes the vector Z L
 

00:07:35.160 --> 00:07:37.280
so this algorithm takes the vector Z L
and AB set to four probabilities that

00:07:37.280 --> 00:07:37.290
and AB set to four probabilities that
 

00:07:37.290 --> 00:07:41.330
and AB set to four probabilities that
sum to one and if we summarize what we

00:07:41.330 --> 00:07:41.340
sum to one and if we summarize what we
 

00:07:41.340 --> 00:07:45.320
sum to one and if we summarize what we
just did to map from ZL to Al this whole

00:07:45.320 --> 00:07:45.330
just did to map from ZL to Al this whole
 

00:07:45.330 --> 00:07:47.390
just did to map from ZL to Al this whole
computation confusing the exponentiation

00:07:47.390 --> 00:07:47.400
computation confusing the exponentiation
 

00:07:47.400 --> 00:07:49.430
computation confusing the exponentiation
to get this temporary variable T and

00:07:49.430 --> 00:07:49.440
to get this temporary variable T and
 

00:07:49.440 --> 00:07:53.030
to get this temporary variable T and
then normalizing we can summarize this

00:07:53.030 --> 00:07:53.040
then normalizing we can summarize this
 

00:07:53.040 --> 00:07:56.180
then normalizing we can summarize this
into a softmax activation function and

00:07:56.180 --> 00:07:56.190
into a softmax activation function and
 

00:07:56.190 --> 00:08:00.110
into a softmax activation function and
say Al equals the activation function G

00:08:00.110 --> 00:08:00.120
say Al equals the activation function G
 

00:08:00.120 --> 00:08:04.460
say Al equals the activation function G
applied to the vector ZL the unusual

00:08:04.460 --> 00:08:04.470
applied to the vector ZL the unusual
 

00:08:04.470 --> 00:08:05.930
applied to the vector ZL the unusual
thing about this book activation

00:08:05.930 --> 00:08:05.940
thing about this book activation
 

00:08:05.940 --> 00:08:08.150
thing about this book activation
function is done this activation

00:08:08.150 --> 00:08:08.160
function is done this activation
 

00:08:08.160 --> 00:08:11.150
function is done this activation
function G it takes as input a 4 by 1

00:08:11.150 --> 00:08:11.160
function G it takes as input a 4 by 1
 

00:08:11.160 --> 00:08:15.050
function G it takes as input a 4 by 1
vector and it opens a 4 by 1 vector so

00:08:15.050 --> 00:08:15.060
vector and it opens a 4 by 1 vector so
 

00:08:15.060 --> 00:08:17.150
vector and it opens a 4 by 1 vector so
previously our activation functions used

00:08:17.150 --> 00:08:17.160
previously our activation functions used
 

00:08:17.160 --> 00:08:19.340
previously our activation functions used
to take in a single real value input so

00:08:19.340 --> 00:08:19.350
to take in a single real value input so
 

00:08:19.350 --> 00:08:21.650
to take in a single real value input so
for example the sigmoid and the value

00:08:21.650 --> 00:08:21.660
for example the sigmoid and the value
 

00:08:21.660 --> 00:08:23.990
for example the sigmoid and the value
activation functions input a real number

00:08:23.990 --> 00:08:24.000
activation functions input a real number
 

00:08:24.000 --> 00:08:25.280
activation functions input a real number
and output a real number

00:08:25.280 --> 00:08:25.290
and output a real number
 

00:08:25.290 --> 00:08:27.260
and output a real number
the unusual thing about the softmax

00:08:27.260 --> 00:08:27.270
the unusual thing about the softmax
 

00:08:27.270 --> 00:08:29.360
the unusual thing about the softmax
activation function is because we need

00:08:29.360 --> 00:08:29.370
activation function is because we need
 

00:08:29.370 --> 00:08:31.640
activation function is because we need
to normalize across the different

00:08:31.640 --> 00:08:31.650
to normalize across the different
 

00:08:31.650 --> 00:08:33.830
to normalize across the different
possible prism used to take in a vector

00:08:33.830 --> 00:08:33.840
possible prism used to take in a vector
 

00:08:33.840 --> 00:08:36.589
possible prism used to take in a vector
of inputs and an opposite vector so one

00:08:36.589 --> 00:08:36.599
of inputs and an opposite vector so one
 

00:08:36.599 --> 00:08:38.630
of inputs and an opposite vector so one
of the things that a softmax crossbar

00:08:38.630 --> 00:08:38.640
of the things that a softmax crossbar
 

00:08:38.640 --> 00:08:40.310
of the things that a softmax crossbar
can represent I'm going to show you some

00:08:40.310 --> 00:08:40.320
can represent I'm going to show you some
 

00:08:40.320 --> 00:08:43.940
can represent I'm going to show you some
examples where you have inputs x1 x2 and

00:08:43.940 --> 00:08:43.950
examples where you have inputs x1 x2 and
 

00:08:43.950 --> 00:08:47.450
examples where you have inputs x1 x2 and
these feed directly to a softmax layer

00:08:47.450 --> 00:08:47.460
these feed directly to a softmax layer
 

00:08:47.460 --> 00:08:49.430
these feed directly to a softmax layer
that has 3

00:08:49.430 --> 00:08:49.440
that has 3
 

00:08:49.440 --> 00:08:51.920
that has 3
or four or more aqua notes that then

00:08:51.920 --> 00:08:51.930
or four or more aqua notes that then
 

00:08:51.930 --> 00:08:54.440
or four or more aqua notes that then
opens why hat so going to show you a

00:08:54.440 --> 00:08:54.450
opens why hat so going to show you a
 

00:08:54.450 --> 00:08:56.990
opens why hat so going to show you a
neural network with no hidden layer and

00:08:56.990 --> 00:08:57.000
neural network with no hidden layer and
 

00:08:57.000 --> 00:09:02.210
neural network with no hidden layer and
all it does is compute z1 equals w1

00:09:02.210 --> 00:09:02.220
all it does is compute z1 equals w1
 

00:09:02.220 --> 00:09:06.260
all it does is compute z1 equals w1
times the input X plus B and then the

00:09:06.260 --> 00:09:06.270
times the input X plus B and then the
 

00:09:06.270 --> 00:09:10.520
times the input X plus B and then the
output a 1 or Y hat is just the softmax

00:09:10.520 --> 00:09:10.530
output a 1 or Y hat is just the softmax
 

00:09:10.530 --> 00:09:13.550
output a 1 or Y hat is just the softmax
activation function applied to z1

00:09:13.550 --> 00:09:13.560
activation function applied to z1
 

00:09:13.560 --> 00:09:15.950
activation function applied to z1
so in this neural network with no hidden

00:09:15.950 --> 00:09:15.960
so in this neural network with no hidden
 

00:09:15.960 --> 00:09:17.360
so in this neural network with no hidden
there should give you a sense of the

00:09:17.360 --> 00:09:17.370
there should give you a sense of the
 

00:09:17.370 --> 00:09:19.250
there should give you a sense of the
types of things a softmax function can

00:09:19.250 --> 00:09:19.260
types of things a softmax function can
 

00:09:19.260 --> 00:09:21.680
types of things a softmax function can
represent so here's one example with

00:09:21.680 --> 00:09:21.690
represent so here's one example with
 

00:09:21.690 --> 00:09:25.310
represent so here's one example with
just raw inputs x1 and x2 a softmax

00:09:25.310 --> 00:09:25.320
just raw inputs x1 and x2 a softmax
 

00:09:25.320 --> 00:09:30.410
just raw inputs x1 and x2 a softmax
layer with C equals V output causes can

00:09:30.410 --> 00:09:30.420
layer with C equals V output causes can
 

00:09:30.420 --> 00:09:31.910
layer with C equals V output causes can
represent this type of decision boundary

00:09:31.910 --> 00:09:31.920
represent this type of decision boundary
 

00:09:31.920 --> 00:09:34.490
represent this type of decision boundary
now this is kind of a several linear

00:09:34.490 --> 00:09:34.500
now this is kind of a several linear
 

00:09:34.500 --> 00:09:36.860
now this is kind of a several linear
decision boundaries but this allows it

00:09:36.860 --> 00:09:36.870
decision boundaries but this allows it
 

00:09:36.870 --> 00:09:38.960
decision boundaries but this allows it
to separate out the data into three

00:09:38.960 --> 00:09:38.970
to separate out the data into three
 

00:09:38.970 --> 00:09:43.310
to separate out the data into three
classes and in this diagram what we did

00:09:43.310 --> 00:09:43.320
classes and in this diagram what we did
 

00:09:43.320 --> 00:09:45.320
classes and in this diagram what we did
was we actually took the training set is

00:09:45.320 --> 00:09:45.330
was we actually took the training set is
 

00:09:45.330 --> 00:09:47.510
was we actually took the training set is
kind of shown in this figure and train a

00:09:47.510 --> 00:09:47.520
kind of shown in this figure and train a
 

00:09:47.520 --> 00:09:49.370
kind of shown in this figure and train a
cost function and train the softmax

00:09:49.370 --> 00:09:49.380
cost function and train the softmax
 

00:09:49.380 --> 00:09:51.920
cost function and train the softmax
classifier with three upper labels on

00:09:51.920 --> 00:09:51.930
classifier with three upper labels on
 

00:09:51.930 --> 00:09:54.560
classifier with three upper labels on
the data and then the color on this plot

00:09:54.560 --> 00:09:54.570
the data and then the color on this plot
 

00:09:54.570 --> 00:09:56.720
the data and then the color on this plot
shows fresh holding the outputs in the

00:09:56.720 --> 00:09:56.730
shows fresh holding the outputs in the
 

00:09:56.730 --> 00:09:59.120
shows fresh holding the outputs in the
salt bags crossfire and coloring in the

00:09:59.120 --> 00:09:59.130
salt bags crossfire and coloring in the
 

00:09:59.130 --> 00:10:01.040
salt bags crossfire and coloring in the
input based on which one of the three

00:10:01.040 --> 00:10:01.050
input based on which one of the three
 

00:10:01.050 --> 00:10:03.770
input based on which one of the three
outputs had the highest probability so

00:10:03.770 --> 00:10:03.780
outputs had the highest probability so
 

00:10:03.780 --> 00:10:05.390
outputs had the highest probability so
you can maybe kind of see that this is

00:10:05.390 --> 00:10:05.400
you can maybe kind of see that this is
 

00:10:05.400 --> 00:10:07.280
you can maybe kind of see that this is
like a generalization of logistic

00:10:07.280 --> 00:10:07.290
like a generalization of logistic
 

00:10:07.290 --> 00:10:09.710
like a generalization of logistic
regression with sort of linear decision

00:10:09.710 --> 00:10:09.720
regression with sort of linear decision
 

00:10:09.720 --> 00:10:12.200
regression with sort of linear decision
boundaries but with more than two

00:10:12.200 --> 00:10:12.210
boundaries but with more than two
 

00:10:12.210 --> 00:10:14.330
boundaries but with more than two
classes but mostafa call has been just 0

00:10:14.330 --> 00:10:14.340
classes but mostafa call has been just 0
 

00:10:14.340 --> 00:10:17.420
classes but mostafa call has been just 0
1 the cost can be 0 1 or 2 here's

00:10:17.420 --> 00:10:17.430
1 the cost can be 0 1 or 2 here's
 

00:10:17.430 --> 00:10:19.010
1 the cost can be 0 1 or 2 here's
another example of decision boundary

00:10:19.010 --> 00:10:19.020
another example of decision boundary
 

00:10:19.020 --> 00:10:21.350
another example of decision boundary
that a Sakai's classifier represents

00:10:21.350 --> 00:10:21.360
that a Sakai's classifier represents
 

00:10:21.360 --> 00:10:22.850
that a Sakai's classifier represents
when Turing on a data set with three

00:10:22.850 --> 00:10:22.860
when Turing on a data set with three
 

00:10:22.860 --> 00:10:26.720
when Turing on a data set with three
classes and here's another one right so

00:10:26.720 --> 00:10:26.730
classes and here's another one right so
 

00:10:26.730 --> 00:10:29.630
classes and here's another one right so
this is up but one intuition is that

00:10:29.630 --> 00:10:29.640
this is up but one intuition is that
 

00:10:29.640 --> 00:10:31.610
this is up but one intuition is that
decision boundary between any two

00:10:31.610 --> 00:10:31.620
decision boundary between any two
 

00:10:31.620 --> 00:10:36.079
decision boundary between any two
classes well it will be linear that's

00:10:36.079 --> 00:10:36.089
classes well it will be linear that's
 

00:10:36.089 --> 00:10:38.300
classes well it will be linear that's
why you see for example the decision

00:10:38.300 --> 00:10:38.310
why you see for example the decision
 

00:10:38.310 --> 00:10:39.860
why you see for example the decision
boundary between the yellow and the gray

00:10:39.860 --> 00:10:39.870
boundary between the yellow and the gray
 

00:10:39.870 --> 00:10:41.720
boundary between the yellow and the gray
classes that's or the linear boundary

00:10:41.720 --> 00:10:41.730
classes that's or the linear boundary
 

00:10:41.730 --> 00:10:44.030
classes that's or the linear boundary
region purple bird is not lineage and

00:10:44.030 --> 00:10:44.040
region purple bird is not lineage and
 

00:10:44.040 --> 00:10:45.950
region purple bird is not lineage and
boundary to the purple yellow is another

00:10:45.950 --> 00:10:45.960
boundary to the purple yellow is another
 

00:10:45.960 --> 00:10:48.350
boundary to the purple yellow is another
limitation boundary but you know is able

00:10:48.350 --> 00:10:48.360
limitation boundary but you know is able
 

00:10:48.360 --> 00:10:50.120
limitation boundary but you know is able
to use the different linear functions in

00:10:50.120 --> 00:10:50.130
to use the different linear functions in
 

00:10:50.130 --> 00:10:52.400
to use the different linear functions in
order to separate the space into three

00:10:52.400 --> 00:10:52.410
order to separate the space into three
 

00:10:52.410 --> 00:10:53.990
order to separate the space into three
classes

00:10:53.990 --> 00:10:54.000
classes
 

00:10:54.000 --> 00:10:56.150
classes
some examples with more classes so this

00:10:56.150 --> 00:10:56.160
some examples with more classes so this
 

00:10:56.160 --> 00:11:00.170
some examples with more classes so this
is example with C equals 4 so that the

00:11:00.170 --> 00:11:00.180
is example with C equals 4 so that the
 

00:11:00.180 --> 00:11:03.140
is example with C equals 4 so that the
dream class and softmax can continue to

00:11:03.140 --> 00:11:03.150
dream class and softmax can continue to
 

00:11:03.150 --> 00:11:04.580
dream class and softmax can continue to
represent these types of lineages and

00:11:04.580 --> 00:11:04.590
represent these types of lineages and
 

00:11:04.590 --> 00:11:07.310
represent these types of lineages and
boundaries between multiple classes so

00:11:07.310 --> 00:11:07.320
boundaries between multiple classes so
 

00:11:07.320 --> 00:11:10.370
boundaries between multiple classes so
here's one more example with C equals 5

00:11:10.370 --> 00:11:10.380
here's one more example with C equals 5
 

00:11:10.380 --> 00:11:13.880
here's one more example with C equals 5
classes and here's one last example with

00:11:13.880 --> 00:11:13.890
classes and here's one last example with
 

00:11:13.890 --> 00:11:14.900
classes and here's one last example with
C equals 6

00:11:14.900 --> 00:11:14.910
C equals 6
 

00:11:14.910 --> 00:11:17.090
C equals 6
so this shows the type of things that

00:11:17.090 --> 00:11:17.100
so this shows the type of things that
 

00:11:17.100 --> 00:11:20.120
so this shows the type of things that
softmax also I can do when there is no

00:11:20.120 --> 00:11:20.130
softmax also I can do when there is no
 

00:11:20.130 --> 00:11:21.830
softmax also I can do when there is no
hidden there of course you have a much

00:11:21.830 --> 00:11:21.840
hidden there of course you have a much
 

00:11:21.840 --> 00:11:24.740
hidden there of course you have a much
deeper inner network with X and then you

00:11:24.740 --> 00:11:24.750
deeper inner network with X and then you
 

00:11:24.750 --> 00:11:27.110
deeper inner network with X and then you
know some picking unions and more hidden

00:11:27.110 --> 00:11:27.120
know some picking unions and more hidden
 

00:11:27.120 --> 00:11:29.450
know some picking unions and more hidden
unions and so on then you could learn

00:11:29.450 --> 00:11:29.460
unions and so on then you could learn
 

00:11:29.460 --> 00:11:31.550
unions and so on then you could learn
even more complex nonlinear decision

00:11:31.550 --> 00:11:31.560
even more complex nonlinear decision
 

00:11:31.560 --> 00:11:33.230
even more complex nonlinear decision
boundaries to separate out multiple

00:11:33.230 --> 00:11:33.240
boundaries to separate out multiple
 

00:11:33.240 --> 00:11:35.810
boundaries to separate out multiple
different classes so I hope this gives

00:11:35.810 --> 00:11:35.820
different classes so I hope this gives
 

00:11:35.820 --> 00:11:37.610
different classes so I hope this gives
you a sense of what a softmax player

00:11:37.610 --> 00:11:37.620
you a sense of what a softmax player
 

00:11:37.620 --> 00:11:39.740
you a sense of what a softmax player
what a softmax activation function in a

00:11:39.740 --> 00:11:39.750
what a softmax activation function in a
 

00:11:39.750 --> 00:11:42.590
what a softmax activation function in a
neural network can do in the next video

00:11:42.590 --> 00:11:42.600
neural network can do in the next video
 

00:11:42.600 --> 00:11:44.090
neural network can do in the next video
let's take a look at how you can train

00:11:44.090 --> 00:11:44.100
let's take a look at how you can train
 

00:11:44.100 --> 00:11:46.370
let's take a look at how you can train
in your network that uses a software

00:11:46.370 --> 00:11:46.380
in your network that uses a software
 

00:11:46.380 --> 00:11:48.890
in your network that uses a software
layer

