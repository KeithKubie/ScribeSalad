WEBVTT
Kind: captions
Language: en

00:00:02.880 --> 00:00:06.760 align:start position:0%
 
[Music]

00:00:06.760 --> 00:00:06.770 align:start position:0%
[Music]
 

00:00:06.770 --> 00:00:09.440 align:start position:0%
[Music]
my<00:00:07.770><c> name</c><00:00:07.950><c> is</c><00:00:08.040><c> Jonathan</c><00:00:08.550><c> and</c><00:00:08.790><c> I</c><00:00:09.059><c> work</c><00:00:09.240><c> on</c><00:00:09.389><c> the</c>

00:00:09.440 --> 00:00:09.450 align:start position:0%
my name is Jonathan and I work on the
 

00:00:09.450 --> 00:00:12.049 align:start position:0%
my name is Jonathan and I work on the
mobile<00:00:09.809><c> ninjas</c><00:00:10.290><c> we're</c><00:00:11.099><c> a</c><00:00:11.130><c> team</c><00:00:11.400><c> within</c><00:00:11.670><c> Google</c>

00:00:12.049 --> 00:00:12.059 align:start position:0%
mobile ninjas we're a team within Google
 

00:00:12.059 --> 00:00:16.240 align:start position:0%
mobile ninjas we're a team within Google
passionate<00:00:12.780><c> about</c><00:00:12.870><c> testing</c><00:00:13.469><c> and</c><00:00:13.650><c> testability</c>

00:00:16.240 --> 00:00:16.250 align:start position:0%
passionate about testing and testability
 

00:00:16.250 --> 00:00:18.710 align:start position:0%
passionate about testing and testability
if<00:00:17.250><c> you've</c><00:00:17.430><c> ever</c><00:00:17.580><c> written</c><00:00:17.820><c> test</c><00:00:18.150><c> for</c><00:00:18.330><c> Android</c>

00:00:18.710 --> 00:00:18.720 align:start position:0%
if you've ever written test for Android
 

00:00:18.720 --> 00:00:20.540 align:start position:0%
if you've ever written test for Android
before<00:00:19.080><c> it's</c><00:00:19.410><c> likely</c><00:00:19.830><c> you've</c><00:00:20.010><c> used</c><00:00:20.220><c> some</c><00:00:20.430><c> of</c>

00:00:20.540 --> 00:00:20.550 align:start position:0%
before it's likely you've used some of
 

00:00:20.550 --> 00:00:24.170 align:start position:0%
before it's likely you've used some of
our<00:00:20.640><c> products</c><00:00:21.230><c> espresso</c><00:00:22.230><c> Robo</c><00:00:23.130><c> electric</c><00:00:23.580><c> or</c>

00:00:24.170 --> 00:00:24.180 align:start position:0%
our products espresso Robo electric or
 

00:00:24.180 --> 00:00:26.120 align:start position:0%
our products espresso Robo electric or
the<00:00:24.240><c> Android</c><00:00:24.600><c> testing</c><00:00:25.140><c> support</c><00:00:25.439><c> library</c><00:00:25.920><c> and</c>

00:00:26.120 --> 00:00:26.130 align:start position:0%
the Android testing support library and
 

00:00:26.130 --> 00:00:28.460 align:start position:0%
the Android testing support library and
together<00:00:26.939><c> these</c><00:00:27.480><c> tools</c><00:00:27.779><c> combine</c><00:00:28.230><c> for</c>

00:00:28.460 --> 00:00:28.470 align:start position:0%
together these tools combine for
 

00:00:28.470 --> 00:00:30.740 align:start position:0%
together these tools combine for
billions<00:00:28.859><c> of</c><00:00:29.039><c> testing</c><00:00:29.460><c> vocations</c><00:00:30.060><c> both</c>

00:00:30.740 --> 00:00:30.750 align:start position:0%
billions of testing vocations both
 

00:00:30.750 --> 00:00:36.229 align:start position:0%
billions of testing vocations both
within<00:00:30.990><c> and</c><00:00:31.320><c> outside</c><00:00:31.740><c> of</c><00:00:32.040><c> Google</c><00:00:34.910><c> so</c><00:00:35.910><c> today</c>

00:00:36.229 --> 00:00:36.239 align:start position:0%
within and outside of Google so today
 

00:00:36.239 --> 00:00:37.940 align:start position:0%
within and outside of Google so today
there's<00:00:36.510><c> a</c><00:00:36.570><c> general</c><00:00:36.930><c> consensus</c><00:00:37.559><c> within</c><00:00:37.770><c> the</c>

00:00:37.940 --> 00:00:37.950 align:start position:0%
there's a general consensus within the
 

00:00:37.950 --> 00:00:39.709 align:start position:0%
there's a general consensus within the
software<00:00:38.129><c> development</c><00:00:38.760><c> community</c><00:00:39.180><c> are</c><00:00:39.450><c> the</c>

00:00:39.709 --> 00:00:39.719 align:start position:0%
software development community are the
 

00:00:39.719 --> 00:00:42.920 align:start position:0%
software development community are the
virtues<00:00:40.200><c> of</c><00:00:40.230><c> writing</c><00:00:40.739><c> tests</c><00:00:41.450><c> sure</c><00:00:42.450><c> there's</c><00:00:42.870><c> a</c>

00:00:42.920 --> 00:00:42.930 align:start position:0%
virtues of writing tests sure there's a
 

00:00:42.930 --> 00:00:45.350 align:start position:0%
virtues of writing tests sure there's a
cost<00:00:43.170><c> to</c><00:00:43.320><c> writing</c><00:00:43.469><c> tests</c><00:00:44.010><c> but</c><00:00:44.579><c> it's</c><00:00:44.730><c> accepted</c>

00:00:45.350 --> 00:00:45.360 align:start position:0%
cost to writing tests but it's accepted
 

00:00:45.360 --> 00:00:47.119 align:start position:0%
cost to writing tests but it's accepted
one<00:00:45.539><c> and</c><00:00:45.809><c> is</c><00:00:46.230><c> one</c><00:00:46.379><c> that</c><00:00:46.410><c> quickly</c><00:00:46.800><c> pays</c>

00:00:47.119 --> 00:00:47.129 align:start position:0%
one and is one that quickly pays
 

00:00:47.129 --> 00:00:48.920 align:start position:0%
one and is one that quickly pays
dividends<00:00:47.700><c> throughout</c><00:00:47.910><c> the</c><00:00:48.329><c> lifecycle</c><00:00:48.719><c> of</c>

00:00:48.920 --> 00:00:48.930 align:start position:0%
dividends throughout the lifecycle of
 

00:00:48.930 --> 00:00:53.000 align:start position:0%
dividends throughout the lifecycle of
your<00:00:48.989><c> project</c><00:00:50.870><c> tests</c><00:00:51.870><c> provide</c><00:00:52.199><c> fast</c><00:00:52.559><c> feedback</c>

00:00:53.000 --> 00:00:53.010 align:start position:0%
your project tests provide fast feedback
 

00:00:53.010 --> 00:00:55.850 align:start position:0%
your project tests provide fast feedback
on<00:00:53.219><c> failures</c><00:00:53.670><c> like</c><00:00:54.570><c> a</c><00:00:54.629><c> bug</c><00:00:54.930><c> caught</c><00:00:55.440><c> early</c><00:00:55.770><c> on</c>

00:00:55.850 --> 00:00:55.860 align:start position:0%
on failures like a bug caught early on
 

00:00:55.860 --> 00:00:57.709 align:start position:0%
on failures like a bug caught early on
in<00:00:55.980><c> development</c><00:00:56.010><c> is</c><00:00:56.670><c> far</c><00:00:56.910><c> cheaper</c><00:00:57.149><c> to</c><00:00:57.449><c> fix</c>

00:00:57.709 --> 00:00:57.719 align:start position:0%
in development is far cheaper to fix
 

00:00:57.719 --> 00:00:58.760 align:start position:0%
in development is far cheaper to fix
than<00:00:58.020><c> after</c><00:00:58.199><c> you've</c><00:00:58.350><c> deployed</c><00:00:58.620><c> your</c>

00:00:58.760 --> 00:00:58.770 align:start position:0%
than after you've deployed your
 

00:00:58.770 --> 00:01:02.090 align:start position:0%
than after you've deployed your
application<00:01:00.140><c> they</c><00:01:01.140><c> give</c><00:01:01.320><c> you</c><00:01:01.410><c> a</c><00:01:01.440><c> safety</c><00:01:01.770><c> net</c>

00:01:02.090 --> 00:01:02.100 align:start position:0%
application they give you a safety net
 

00:01:02.100 --> 00:01:04.579 align:start position:0%
application they give you a safety net
for<00:01:02.309><c> making</c><00:01:02.730><c> changes</c><00:01:03.120><c> to</c><00:01:03.239><c> your</c><00:01:03.329><c> code</c><00:01:03.589><c> you're</c>

00:01:04.579 --> 00:01:04.589 align:start position:0%
for making changes to your code you're
 

00:01:04.589 --> 00:01:06.710 align:start position:0%
for making changes to your code you're
free<00:01:04.769><c> to</c><00:01:04.920><c> refactor</c><00:01:05.280><c> cleanup</c><00:01:06.119><c> and</c><00:01:06.270><c> optimize</c>

00:01:06.710 --> 00:01:06.720 align:start position:0%
free to refactor cleanup and optimize
 

00:01:06.720 --> 00:01:09.080 align:start position:0%
free to refactor cleanup and optimize
safe<00:01:07.590><c> in</c><00:01:07.770><c> the</c><00:01:07.860><c> knowledge</c><00:01:08.010><c> that</c><00:01:08.549><c> you're</c><00:01:08.939><c> not</c>

00:01:09.080 --> 00:01:09.090 align:start position:0%
safe in the knowledge that you're not
 

00:01:09.090 --> 00:01:10.460 align:start position:0%
safe in the knowledge that you're not
going<00:01:09.299><c> to</c><00:01:09.390><c> break</c><00:01:09.689><c> any</c><00:01:10.049><c> of</c><00:01:10.110><c> the</c><00:01:10.229><c> existing</c>

00:01:10.460 --> 00:01:10.470 align:start position:0%
going to break any of the existing
 

00:01:10.470 --> 00:01:14.480 align:start position:0%
going to break any of the existing
functionality<00:01:11.189><c> and</c><00:01:12.110><c> what's</c><00:01:13.110><c> more</c><00:01:13.380><c> a</c><00:01:13.680><c> suite</c><00:01:14.250><c> of</c>

00:01:14.480 --> 00:01:14.490 align:start position:0%
functionality and what's more a suite of
 

00:01:14.490 --> 00:01:16.550 align:start position:0%
functionality and what's more a suite of
readable<00:01:14.909><c> tests</c><00:01:15.390><c> provides</c><00:01:16.049><c> the</c><00:01:16.200><c> living</c>

00:01:16.550 --> 00:01:16.560 align:start position:0%
readable tests provides the living
 

00:01:16.560 --> 00:01:18.920 align:start position:0%
readable tests provides the living
breathing<00:01:17.540><c> specification</c><00:01:18.540><c> of</c><00:01:18.750><c> your</c>

00:01:18.920 --> 00:01:18.930 align:start position:0%
breathing specification of your
 

00:01:18.930 --> 00:01:24.770 align:start position:0%
breathing specification of your
applications<00:01:19.590><c> behavior</c><00:01:23.360><c> now</c><00:01:24.360><c> in</c><00:01:24.479><c> software</c>

00:01:24.770 --> 00:01:24.780 align:start position:0%
applications behavior now in software
 

00:01:24.780 --> 00:01:26.749 align:start position:0%
applications behavior now in software
development<00:01:24.990><c> there</c><00:01:25.799><c> exists</c><00:01:26.070><c> the</c><00:01:26.159><c> concept</c><00:01:26.640><c> of</c>

00:01:26.749 --> 00:01:26.759 align:start position:0%
development there exists the concept of
 

00:01:26.759 --> 00:01:28.819 align:start position:0%
development there exists the concept of
the<00:01:26.850><c> testing</c><00:01:27.240><c> pyramid</c><00:01:27.720><c> it's</c><00:01:28.409><c> made</c><00:01:28.619><c> up</c><00:01:28.740><c> of</c>

00:01:28.819 --> 00:01:28.829 align:start position:0%
the testing pyramid it's made up of
 

00:01:28.829 --> 00:01:31.910 align:start position:0%
the testing pyramid it's made up of
three<00:01:28.890><c> layers</c><00:01:29.600><c> unit</c><00:01:30.680><c> integration</c><00:01:31.680><c> and</c>

00:01:31.910 --> 00:01:31.920 align:start position:0%
three layers unit integration and
 

00:01:31.920 --> 00:01:34.100 align:start position:0%
three layers unit integration and
end-to-end<00:01:32.280><c> tests</c><00:01:33.000><c> and</c><00:01:33.180><c> as</c><00:01:33.750><c> you</c><00:01:33.840><c> go</c><00:01:33.960><c> up</c><00:01:33.990><c> the</c>

00:01:34.100 --> 00:01:34.110 align:start position:0%
end-to-end tests and as you go up the
 

00:01:34.110 --> 00:01:37.100 align:start position:0%
end-to-end tests and as you go up the
pyramid<00:01:34.680><c> you're</c><00:01:35.369><c> gaining</c><00:01:35.610><c> fidelity</c><00:01:36.240><c> but</c><00:01:36.990><c> this</c>

00:01:37.100 --> 00:01:37.110 align:start position:0%
pyramid you're gaining fidelity but this
 

00:01:37.110 --> 00:01:39.109 align:start position:0%
pyramid you're gaining fidelity but this
comes<00:01:37.380><c> at</c><00:01:37.530><c> the</c><00:01:37.590><c> expense</c><00:01:38.009><c> of</c><00:01:38.189><c> test</c><00:01:38.460><c> execution</c>

00:01:39.109 --> 00:01:39.119 align:start position:0%
comes at the expense of test execution
 

00:01:39.119 --> 00:01:42.020 align:start position:0%
comes at the expense of test execution
time<00:01:39.470><c> it</c><00:01:40.470><c> also</c><00:01:40.680><c> gets</c><00:01:40.950><c> harder</c><00:01:41.280><c> to</c><00:01:41.369><c> maintain</c><00:01:41.520><c> and</c>

00:01:42.020 --> 00:01:42.030 align:start position:0%
time it also gets harder to maintain and
 

00:01:42.030 --> 00:01:46.039 align:start position:0%
time it also gets harder to maintain and
debug<00:01:42.360><c> these</c><00:01:42.540><c> kinds</c><00:01:42.930><c> of</c><00:01:42.990><c> tests</c><00:01:44.090><c> but</c><00:01:45.090><c> just</c><00:01:45.930><c> like</c>

00:01:46.039 --> 00:01:46.049 align:start position:0%
debug these kinds of tests but just like
 

00:01:46.049 --> 00:01:47.899 align:start position:0%
debug these kinds of tests but just like
a<00:01:46.079><c> rock</c><00:01:46.350><c> band</c><00:01:46.590><c> where</c><00:01:47.130><c> you</c><00:01:47.220><c> need</c><00:01:47.340><c> a</c><00:01:47.369><c> perfect</c>

00:01:47.899 --> 00:01:47.909 align:start position:0%
a rock band where you need a perfect
 

00:01:47.909 --> 00:01:49.670 align:start position:0%
a rock band where you need a perfect
blend<00:01:48.180><c> of</c><00:01:48.360><c> musicians</c><00:01:48.899><c> to</c><00:01:48.990><c> create</c><00:01:49.290><c> that</c><00:01:49.409><c> great</c>

00:01:49.670 --> 00:01:49.680 align:start position:0%
blend of musicians to create that great
 

00:01:49.680 --> 00:01:52.249 align:start position:0%
blend of musicians to create that great
track<00:01:50.030><c> each</c><00:01:51.030><c> layer</c><00:01:51.390><c> in</c><00:01:51.540><c> the</c><00:01:51.630><c> pyramid</c><00:01:52.079><c> is</c>

00:01:52.249 --> 00:01:52.259 align:start position:0%
track each layer in the pyramid is
 

00:01:52.259 --> 00:01:55.480 align:start position:0%
track each layer in the pyramid is
equally<00:01:52.860><c> important</c><00:01:53.579><c> you're</c><00:01:54.450><c> leveraging</c><00:01:54.930><c> the</c>

00:01:55.480 --> 00:01:55.490 align:start position:0%
equally important you're leveraging the
 

00:01:55.490 --> 00:01:58.609 align:start position:0%
equally important you're leveraging the
Vantage's<00:01:56.490><c> of</c><00:01:56.640><c> one</c><00:01:56.820><c> layer</c><00:01:57.060><c> to</c><00:01:57.810><c> compensate</c><00:01:58.380><c> for</c>

00:01:58.609 --> 00:01:58.619 align:start position:0%
Vantage's of one layer to compensate for
 

00:01:58.619 --> 00:02:00.859 align:start position:0%
Vantage's of one layer to compensate for
trade-offs<00:01:59.070><c> in</c><00:01:59.219><c> others</c><00:01:59.549><c> to</c><00:01:59.820><c> produce</c><00:02:00.390><c> a</c>

00:02:00.859 --> 00:02:00.869 align:start position:0%
trade-offs in others to produce a
 

00:02:00.869 --> 00:02:04.480 align:start position:0%
trade-offs in others to produce a
holistic<00:02:01.500><c> automated</c><00:02:02.159><c> testing</c><00:02:02.610><c> environment</c>

00:02:04.480 --> 00:02:04.490 align:start position:0%
holistic automated testing environment
 

00:02:04.490 --> 00:02:08.869 align:start position:0%
holistic automated testing environment
we<00:02:05.490><c> recommend</c><00:02:06.000><c> a</c><00:02:06.380><c> 70-20-10</c><00:02:07.489><c> split</c><00:02:08.489><c> as</c><00:02:08.759><c> a</c>

00:02:08.869 --> 00:02:08.879 align:start position:0%
we recommend a 70-20-10 split as a
 

00:02:08.879 --> 00:02:11.550 align:start position:0%
we recommend a 70-20-10 split as a
general<00:02:09.420><c> healthy</c><00:02:09.810><c> guideline</c>

00:02:11.550 --> 00:02:11.560 align:start position:0%
general healthy guideline
 

00:02:11.560 --> 00:02:13.500 align:start position:0%
general healthy guideline
and<00:02:11.709><c> now</c><00:02:12.310><c> while</c><00:02:12.940><c> the</c><00:02:13.030><c> rules</c><00:02:13.240><c> of</c><00:02:13.390><c> these</c>

00:02:13.500 --> 00:02:13.510 align:start position:0%
and now while the rules of these
 

00:02:13.510 --> 00:02:16.350 align:start position:0%
and now while the rules of these
pyramids<00:02:14.050><c> still</c><00:02:14.470><c> apply</c><00:02:14.940><c> some</c><00:02:15.940><c> of</c><00:02:16.030><c> the</c><00:02:16.090><c> unique</c>

00:02:16.350 --> 00:02:16.360 align:start position:0%
pyramids still apply some of the unique
 

00:02:16.360 --> 00:02:17.970 align:start position:0%
pyramids still apply some of the unique
characteristics<00:02:17.110><c> of</c><00:02:17.200><c> Android</c><00:02:17.590><c> development</c>

00:02:17.970 --> 00:02:17.980 align:start position:0%
characteristics of Android development
 

00:02:17.980 --> 00:02:19.920 align:start position:0%
characteristics of Android development
have<00:02:18.550><c> introduced</c><00:02:19.000><c> some</c><00:02:19.060><c> difficulties</c><00:02:19.720><c> along</c>

00:02:19.920 --> 00:02:19.930 align:start position:0%
have introduced some difficulties along
 

00:02:19.930 --> 00:02:26.309 align:start position:0%
have introduced some difficulties along
the<00:02:20.080><c> way</c><00:02:23.220><c> so</c><00:02:24.220><c> unit</c><00:02:24.640><c> tests</c><00:02:25.060><c> due</c><00:02:25.900><c> to</c><00:02:25.959><c> their</c><00:02:26.140><c> need</c>

00:02:26.309 --> 00:02:26.319 align:start position:0%
the way so unit tests due to their need
 

00:02:26.319 --> 00:02:28.050 align:start position:0%
the way so unit tests due to their need
to<00:02:26.440><c> be</c><00:02:26.530><c> fast</c><00:02:26.860><c> will</c><00:02:27.580><c> run</c><00:02:27.790><c> on</c><00:02:27.940><c> the</c><00:02:28.030><c> local</c>

00:02:28.050 --> 00:02:28.060 align:start position:0%
to be fast will run on the local
 

00:02:28.060 --> 00:02:32.820 align:start position:0%
to be fast will run on the local
workstation<00:02:29.430><c> an</c><00:02:31.620><c> integration</c><00:02:32.620><c> and</c>

00:02:32.820 --> 00:02:32.830 align:start position:0%
workstation an integration and
 

00:02:32.830 --> 00:02:34.890 align:start position:0%
workstation an integration and
end-to-end<00:02:32.980><c> tests</c><00:02:33.640><c> due</c><00:02:34.330><c> to</c><00:02:34.390><c> their</c><00:02:34.569><c> need</c><00:02:34.720><c> to</c>

00:02:34.890 --> 00:02:34.900 align:start position:0%
end-to-end tests due to their need to
 

00:02:34.900 --> 00:02:36.690 align:start position:0%
end-to-end tests due to their need to
run<00:02:35.110><c> in</c><00:02:35.230><c> a</c><00:02:35.319><c> really</c><00:02:35.680><c> faithful</c><00:02:35.890><c> environment</c>

00:02:36.690 --> 00:02:36.700 align:start position:0%
run in a really faithful environment
 

00:02:36.700 --> 00:02:38.970 align:start position:0%
run in a really faithful environment
tend<00:02:37.360><c> to</c><00:02:37.510><c> run</c><00:02:37.720><c> on</c><00:02:37.930><c> a</c><00:02:37.959><c> rail</c><00:02:38.230><c> or</c><00:02:38.440><c> a</c><00:02:38.470><c> virtual</c>

00:02:38.970 --> 00:02:38.980 align:start position:0%
tend to run on a rail or a virtual
 

00:02:38.980 --> 00:02:43.199 align:start position:0%
tend to run on a rail or a virtual
device<00:02:39.340><c> and</c><00:02:40.770><c> so</c><00:02:41.770><c> separate</c><00:02:42.340><c> tools</c><00:02:42.580><c> are</c><00:02:42.790><c> evolved</c>

00:02:43.199 --> 00:02:43.209 align:start position:0%
device and so separate tools are evolved
 

00:02:43.209 --> 00:02:47.430 align:start position:0%
device and so separate tools are evolved
at<00:02:43.330><c> each</c><00:02:43.480><c> layer</c><00:02:43.780><c> of</c><00:02:43.810><c> the</c><00:02:44.019><c> pyramid</c><00:02:46.140><c> robolectric</c>

00:02:47.430 --> 00:02:47.440 align:start position:0%
at each layer of the pyramid robolectric
 

00:02:47.440 --> 00:02:49.740 align:start position:0%
at each layer of the pyramid robolectric
or<00:02:47.739><c> the</c><00:02:48.250><c> mockable</c><00:02:48.550><c> android</c><00:02:48.940><c> framework</c><00:02:49.150><c> for</c>

00:02:49.740 --> 00:02:49.750 align:start position:0%
or the mockable android framework for
 

00:02:49.750 --> 00:02:54.570 align:start position:0%
or the mockable android framework for
your<00:02:49.840><c> off</c><00:02:49.959><c> device</c><00:02:50.260><c> unit</c><00:02:50.890><c> tests</c><00:02:53.100><c> espresso</c><00:02:54.100><c> and</c>

00:02:54.570 --> 00:02:54.580 align:start position:0%
your off device unit tests espresso and
 

00:02:54.580 --> 00:02:56.550 align:start position:0%
your off device unit tests espresso and
the<00:02:54.670><c> Android</c><00:02:54.940><c> testing</c><00:02:55.060><c> support</c><00:02:55.540><c> library</c><00:02:56.050><c> for</c>

00:02:56.550 --> 00:02:56.560 align:start position:0%
the Android testing support library for
 

00:02:56.560 --> 00:03:00.270 align:start position:0%
the Android testing support library for
those<00:02:56.680><c> on</c><00:02:56.830><c> device</c><00:02:57.130><c> tests</c><00:02:58.170><c> now</c><00:02:59.170><c> androids</c><00:03:00.100><c> got</c>

00:03:00.270 --> 00:03:00.280 align:start position:0%
those on device tests now androids got
 

00:03:00.280 --> 00:03:02.250 align:start position:0%
those on device tests now androids got
some<00:03:00.459><c> really</c><00:03:00.730><c> familiar</c><00:03:00.910><c> core</c><00:03:01.420><c> concepts</c><00:03:01.989><c> such</c>

00:03:02.250 --> 00:03:02.260 align:start position:0%
some really familiar core concepts such
 

00:03:02.260 --> 00:03:04.800 align:start position:0%
some really familiar core concepts such
as<00:03:02.470><c> getting</c><00:03:02.709><c> a</c><00:03:02.860><c> handle</c><00:03:03.250><c> to</c><00:03:03.580><c> your</c><00:03:03.850><c> application</c>

00:03:04.800 --> 00:03:04.810 align:start position:0%
as getting a handle to your application
 

00:03:04.810 --> 00:03:06.870 align:start position:0%
as getting a handle to your application
context<00:03:05.380><c> or</c><00:03:05.500><c> maybe</c><00:03:05.739><c> driving</c><00:03:06.250><c> your</c><00:03:06.370><c> activity</c>

00:03:06.870 --> 00:03:06.880 align:start position:0%
context or maybe driving your activity
 

00:03:06.880 --> 00:03:09.930 align:start position:0%
context or maybe driving your activity
lifecycle<00:03:07.150><c> and</c><00:03:08.040><c> each</c><00:03:09.040><c> of</c><00:03:09.310><c> these</c><00:03:09.400><c> tools</c><00:03:09.670><c> has</c>

00:03:09.930 --> 00:03:09.940 align:start position:0%
lifecycle and each of these tools has
 

00:03:09.940 --> 00:03:12.240 align:start position:0%
lifecycle and each of these tools has
its<00:03:10.090><c> own</c><00:03:10.239><c> distinct</c><00:03:10.750><c> api's</c><00:03:11.290><c> and</c><00:03:11.709><c> ways</c><00:03:11.890><c> of</c><00:03:12.130><c> doing</c>

00:03:12.240 --> 00:03:12.250 align:start position:0%
its own distinct api's and ways of doing
 

00:03:12.250 --> 00:03:12.900 align:start position:0%
its own distinct api's and ways of doing
things

00:03:12.900 --> 00:03:12.910 align:start position:0%
things
 

00:03:12.910 --> 00:03:18.870 align:start position:0%
things
for<00:03:13.300><c> achieving</c><00:03:13.569><c> these</c><00:03:14.019><c> exact</c><00:03:14.440><c> same</c><00:03:14.650><c> tasks</c><00:03:17.880><c> now</c>

00:03:18.870 --> 00:03:18.880 align:start position:0%
for achieving these exact same tasks now
 

00:03:18.880 --> 00:03:20.640 align:start position:0%
for achieving these exact same tasks now
this<00:03:19.360><c> has</c><00:03:19.510><c> led</c><00:03:19.690><c> to</c><00:03:19.720><c> something</c><00:03:20.200><c> of</c><00:03:20.320><c> a</c><00:03:20.380><c> test</c>

00:03:20.640 --> 00:03:20.650 align:start position:0%
this has led to something of a test
 

00:03:20.650 --> 00:03:24.810 align:start position:0%
this has led to something of a test
writing<00:03:21.070><c> crisis</c><00:03:21.810><c> as</c><00:03:22.810><c> a</c><00:03:22.900><c> developer</c><00:03:23.440><c> it's</c><00:03:23.820><c> hard</c>

00:03:24.810 --> 00:03:24.820 align:start position:0%
writing crisis as a developer it's hard
 

00:03:24.820 --> 00:03:26.340 align:start position:0%
writing crisis as a developer it's hard
sometimes<00:03:25.090><c> to</c><00:03:25.360><c> know</c><00:03:25.570><c> what</c><00:03:25.780><c> tools</c><00:03:26.079><c> are</c>

00:03:26.340 --> 00:03:26.350 align:start position:0%
sometimes to know what tools are
 

00:03:26.350 --> 00:03:29.190 align:start position:0%
sometimes to know what tools are
available<00:03:26.500><c> for</c><00:03:26.950><c> use</c><00:03:27.130><c> and</c><00:03:27.450><c> which</c><00:03:28.450><c> of</c><00:03:28.480><c> those</c><00:03:28.810><c> are</c>

00:03:29.190 --> 00:03:29.200 align:start position:0%
available for use and which of those are
 

00:03:29.200 --> 00:03:32.970 align:start position:0%
available for use and which of those are
recommended<00:03:31.110><c> having</c><00:03:32.110><c> multiple</c><00:03:32.470><c> tools</c><00:03:32.739><c> at</c>

00:03:32.970 --> 00:03:32.980 align:start position:0%
recommended having multiple tools at
 

00:03:32.980 --> 00:03:35.250 align:start position:0%
recommended having multiple tools at
each<00:03:33.100><c> level</c><00:03:33.370><c> has</c><00:03:34.239><c> led</c><00:03:34.450><c> to</c><00:03:34.570><c> an</c><00:03:34.660><c> explosion</c><00:03:35.170><c> of</c>

00:03:35.250 --> 00:03:35.260 align:start position:0%
each level has led to an explosion of
 

00:03:35.260 --> 00:03:37.350 align:start position:0%
each level has led to an explosion of
styles<00:03:35.709><c> each</c><00:03:36.430><c> with</c><00:03:36.730><c> their</c><00:03:36.820><c> own</c><00:03:36.880><c> distinct</c>

00:03:37.350 --> 00:03:37.360 align:start position:0%
styles each with their own distinct
 

00:03:37.360 --> 00:03:41.789 align:start position:0%
styles each with their own distinct
patterns<00:03:37.780><c> and</c><00:03:38.110><c> api's</c><00:03:38.500><c> and</c><00:03:40.590><c> this</c><00:03:41.590><c> in</c><00:03:41.769><c> turn</c>

00:03:41.789 --> 00:03:41.799 align:start position:0%
patterns and api's and this in turn
 

00:03:41.799 --> 00:03:43.740 align:start position:0%
patterns and api's and this in turn
leads<00:03:42.400><c> to</c><00:03:42.459><c> a</c><00:03:42.549><c> lack</c><00:03:42.670><c> of</c><00:03:42.730><c> mobility</c><00:03:42.970><c> between</c>

00:03:43.740 --> 00:03:43.750 align:start position:0%
leads to a lack of mobility between
 

00:03:43.750 --> 00:03:47.069 align:start position:0%
leads to a lack of mobility between
layers<00:03:45.030><c> tests</c><00:03:46.030><c> can't</c><00:03:46.269><c> easily</c><00:03:46.480><c> be</c><00:03:46.630><c> refracted</c>

00:03:47.069 --> 00:03:47.079 align:start position:0%
layers tests can't easily be refracted
 

00:03:47.079 --> 00:03:49.229 align:start position:0%
layers tests can't easily be refracted
or<00:03:47.560><c> reused</c><00:03:47.980><c> between</c><00:03:48.400><c> layers</c><00:03:48.609><c> in</c><00:03:48.760><c> a</c><00:03:48.820><c> pyramid</c>

00:03:49.229 --> 00:03:49.239 align:start position:0%
or reused between layers in a pyramid
 

00:03:49.239 --> 00:03:51.449 align:start position:0%
or reused between layers in a pyramid
without<00:03:49.420><c> being</c><00:03:49.870><c> completely</c><00:03:50.350><c> rewritten</c><00:03:50.709><c> for</c><00:03:51.400><c> a</c>

00:03:51.449 --> 00:03:51.459 align:start position:0%
without being completely rewritten for a
 

00:03:51.459 --> 00:03:55.590 align:start position:0%
without being completely rewritten for a
new<00:03:51.640><c> tour</c><00:03:53.070><c> to</c><00:03:54.070><c> discuss</c><00:03:54.400><c> this</c><00:03:54.549><c> further</c><00:03:54.820><c> let's</c>

00:03:55.590 --> 00:03:55.600 align:start position:0%
new tour to discuss this further let's
 

00:03:55.600 --> 00:03:56.940 align:start position:0%
new tour to discuss this further let's
orientate<00:03:56.049><c> ourselves</c><00:03:56.109><c> with</c><00:03:56.769><c> what</c>

00:03:56.940 --> 00:03:56.950 align:start position:0%
orientate ourselves with what
 

00:03:56.950 --> 00:04:02.970 align:start position:0%
orientate ourselves with what
constitutes<00:03:57.220><c> a</c><00:03:57.820><c> well-structured</c><00:03:58.390><c> test</c><00:04:01.980><c> so</c>

00:04:02.970 --> 00:04:02.980 align:start position:0%
constitutes a well-structured test so
 

00:04:02.980 --> 00:04:05.250 align:start position:0%
constitutes a well-structured test so
there's<00:04:03.579><c> some</c><00:04:03.730><c> following</c><00:04:04.239><c> common</c><00:04:04.840><c> patterns</c>

00:04:05.250 --> 00:04:05.260 align:start position:0%
there's some following common patterns
 

00:04:05.260 --> 00:04:08.460 align:start position:0%
there's some following common patterns
that<00:04:05.500><c> define</c><00:04:05.920><c> a</c><00:04:06.190><c> well-structured</c><00:04:06.940><c> test</c><00:04:07.470><c> and</c>

00:04:08.460 --> 00:04:08.470 align:start position:0%
that define a well-structured test and
 

00:04:08.470 --> 00:04:10.199 align:start position:0%
that define a well-structured test and
so<00:04:08.650><c> we</c><00:04:08.739><c> generally</c><00:04:09.040><c> break</c><00:04:09.280><c> tests</c><00:04:09.670><c> down</c><00:04:09.910><c> into</c>

00:04:10.199 --> 00:04:10.209 align:start position:0%
so we generally break tests down into
 

00:04:10.209 --> 00:04:14.099 align:start position:0%
so we generally break tests down into
three<00:04:10.450><c> clear</c><00:04:10.720><c> sections</c><00:04:11.370><c> given</c><00:04:12.370><c> when</c><00:04:13.180><c> and</c><00:04:13.540><c> then</c>

00:04:14.099 --> 00:04:14.109 align:start position:0%
three clear sections given when and then
 

00:04:14.109 --> 00:04:16.590 align:start position:0%
three clear sections given when and then
and<00:04:14.410><c> I</c><00:04:15.280><c> like</c><00:04:15.609><c> to</c><00:04:15.730><c> separate</c><00:04:16.060><c> them</c><00:04:16.239><c> with</c><00:04:16.329><c> a</c><00:04:16.359><c> blank</c>

00:04:16.590 --> 00:04:16.600 align:start position:0%
and I like to separate them with a blank
 

00:04:16.600 --> 00:04:21.360 align:start position:0%
and I like to separate them with a blank
line<00:04:16.780><c> to</c><00:04:17.049><c> clearly</c><00:04:17.500><c> demarcate</c><00:04:18.010><c> them</c><00:04:19.950><c> so</c><00:04:20.950><c> given</c>

00:04:21.360 --> 00:04:21.370 align:start position:0%
line to clearly demarcate them so given
 

00:04:21.370 --> 00:04:25.190 align:start position:0%
line to clearly demarcate them so given
some<00:04:21.400><c> predetermined</c><00:04:22.210><c> state</c><00:04:22.780><c> of</c><00:04:22.930><c> the</c><00:04:23.050><c> system</c>

00:04:25.190 --> 00:04:25.200 align:start position:0%
some predetermined state of the system
 

00:04:25.200 --> 00:04:27.930 align:start position:0%
some predetermined state of the system
when<00:04:26.200><c> you</c><00:04:26.380><c> execute</c><00:04:26.710><c> an</c><00:04:27.160><c> action</c><00:04:27.280><c> that</c><00:04:27.610><c> you</c><00:04:27.670><c> wish</c>

00:04:27.930 --> 00:04:27.940 align:start position:0%
when you execute an action that you wish
 

00:04:27.940 --> 00:04:31.920 align:start position:0%
when you execute an action that you wish
to<00:04:27.970><c> test</c><00:04:29.550><c> then</c><00:04:30.550><c> verify</c><00:04:31.060><c> the</c><00:04:31.120><c> new</c><00:04:31.480><c> state</c><00:04:31.720><c> of</c><00:04:31.750><c> the</c>

00:04:31.920 --> 00:04:31.930 align:start position:0%
to test then verify the new state of the
 

00:04:31.930 --> 00:04:34.580 align:start position:0%
to test then verify the new state of the
system<00:04:32.320><c> or</c><00:04:32.530><c> some</c><00:04:32.710><c> behavior</c><00:04:33.160><c> has</c><00:04:33.310><c> occurred</c>

00:04:34.580 --> 00:04:34.590 align:start position:0%
system or some behavior has occurred
 

00:04:34.590 --> 00:04:37.110 align:start position:0%
system or some behavior has occurred
be<00:04:35.590><c> sure</c><00:04:35.770><c> to</c><00:04:35.800><c> name</c><00:04:36.130><c> the</c><00:04:36.280><c> test</c><00:04:36.520><c> after</c><00:04:36.910><c> both</c><00:04:37.090><c> the</c>

00:04:37.110 --> 00:04:37.120 align:start position:0%
be sure to name the test after both the
 

00:04:37.120 --> 00:04:39.420 align:start position:0%
be sure to name the test after both the
condition<00:04:37.840><c> you're</c><00:04:37.960><c> testing</c><00:04:38.410><c> and</c><00:04:38.620><c> the</c>

00:04:39.420 --> 00:04:39.430 align:start position:0%
condition you're testing and the
 

00:04:39.430 --> 00:04:43.050 align:start position:0%
condition you're testing and the
expected<00:04:39.730><c> outcome</c><00:04:41.190><c> keep</c><00:04:42.190><c> the</c><00:04:42.310><c> test</c><00:04:42.550><c> focused</c>

00:04:43.050 --> 00:04:43.060 align:start position:0%
expected outcome keep the test focused
 

00:04:43.060 --> 00:04:45.990 align:start position:0%
expected outcome keep the test focused
on<00:04:43.270><c> very</c><00:04:43.540><c> specific</c><00:04:43.780><c> behavior</c><00:04:44.710><c> and</c><00:04:44.950><c> then</c><00:04:45.700><c> test</c>

00:04:45.990 --> 00:04:46.000 align:start position:0%
on very specific behavior and then test
 

00:04:46.000 --> 00:04:50.250 align:start position:0%
on very specific behavior and then test
all<00:04:46.240><c> your</c><00:04:46.530><c> behaviors</c><00:04:47.530><c> independently</c><00:04:49.260><c> unless</c>

00:04:50.250 --> 00:04:50.260 align:start position:0%
all your behaviors independently unless
 

00:04:50.260 --> 00:04:52.320 align:start position:0%
all your behaviors independently unless
it's<00:04:50.470><c> always</c><00:04:50.650><c> more</c><00:04:50.860><c> with</c><00:04:51.040><c> tests</c><00:04:51.490><c> these</c>

00:04:52.320 --> 00:04:52.330 align:start position:0%
it's always more with tests these
 

00:04:52.330 --> 00:04:54.150 align:start position:0%
it's always more with tests these
guidelines<00:04:52.630><c> will</c><00:04:53.020><c> help</c><00:04:53.050><c> you</c><00:04:53.290><c> keep</c><00:04:53.470><c> each</c><00:04:53.740><c> test</c>

00:04:54.150 --> 00:04:54.160 align:start position:0%
guidelines will help you keep each test
 

00:04:54.160 --> 00:04:58.410 align:start position:0%
guidelines will help you keep each test
understandable<00:04:55.120><c> in</c><00:04:55.240><c> isolation</c><00:04:57.000><c> use</c><00:04:58.000><c> common</c>

00:04:58.410 --> 00:04:58.420 align:start position:0%
understandable in isolation use common
 

00:04:58.420 --> 00:05:01.470 align:start position:0%
understandable in isolation use common
setup<00:04:58.630><c> methods</c><00:04:59.110><c> only</c><00:04:59.560><c> for</c><00:05:00.100><c> scaffolding</c><00:05:00.480><c> this</c>

00:05:01.470 --> 00:05:01.480 align:start position:0%
setup methods only for scaffolding this
 

00:05:01.480 --> 00:05:03.930 align:start position:0%
setup methods only for scaffolding this
is<00:05:01.630><c> maybe</c><00:05:02.070><c> creating</c><00:05:03.070><c> the</c><00:05:03.280><c> object</c><00:05:03.670><c> that's</c>

00:05:03.930 --> 00:05:03.940 align:start position:0%
is maybe creating the object that's
 

00:05:03.940 --> 00:05:05.730 align:start position:0%
is maybe creating the object that's
under<00:05:04.180><c> test</c><00:05:04.450><c> and</c><00:05:04.660><c> wiring</c><00:05:05.260><c> up</c><00:05:05.380><c> some</c><00:05:05.530><c> of</c><00:05:05.620><c> its</c>

00:05:05.730 --> 00:05:05.740 align:start position:0%
under test and wiring up some of its
 

00:05:05.740 --> 00:05:09.450 align:start position:0%
under test and wiring up some of its
dependences<00:05:07.860><c> let's</c><00:05:08.860><c> take</c><00:05:09.040><c> a</c><00:05:09.070><c> look</c><00:05:09.310><c> at</c><00:05:09.370><c> the</c>

00:05:09.450 --> 00:05:09.460 align:start position:0%
dependences let's take a look at the
 

00:05:09.460 --> 00:05:11.700 align:start position:0%
dependences let's take a look at the
problem<00:05:09.880><c> of</c><00:05:10.030><c> the</c><00:05:10.120><c> explosion</c><00:05:10.870><c> of</c><00:05:10.990><c> styles</c><00:05:11.470><c> and</c>

00:05:11.700 --> 00:05:11.710 align:start position:0%
problem of the explosion of styles and
 

00:05:11.710 --> 00:05:13.710 align:start position:0%
problem of the explosion of styles and
we'll<00:05:11.980><c> highlight</c><00:05:12.340><c> this</c><00:05:12.520><c> using</c><00:05:13.000><c> a</c><00:05:13.060><c> simple</c><00:05:13.420><c> test</c>

00:05:13.710 --> 00:05:13.720 align:start position:0%
we'll highlight this using a simple test
 

00:05:13.720 --> 00:05:17.880 align:start position:0%
we'll highlight this using a simple test
case<00:05:14.970><c> we'll</c><00:05:15.970><c> have</c><00:05:16.180><c> a</c><00:05:16.510><c> single</c><00:05:16.960><c> activity</c><00:05:17.230><c> with</c>

00:05:17.880 --> 00:05:17.890 align:start position:0%
case we'll have a single activity with
 

00:05:17.890 --> 00:05:20.460 align:start position:0%
case we'll have a single activity with
one<00:05:18.100><c> button</c><00:05:18.490><c> that</c><00:05:19.020><c> responds</c><00:05:20.020><c> to</c><00:05:20.080><c> a</c><00:05:20.200><c> click</c>

00:05:20.460 --> 00:05:20.470 align:start position:0%
one button that responds to a click
 

00:05:20.470 --> 00:05:22.380 align:start position:0%
one button that responds to a click
sending<00:05:21.070><c> an</c><00:05:21.160><c> intent</c><00:05:21.490><c> to</c><00:05:21.700><c> the</c><00:05:21.790><c> Android</c><00:05:22.180><c> system</c>

00:05:22.380 --> 00:05:22.390 align:start position:0%
sending an intent to the Android system
 

00:05:22.390 --> 00:05:25.290 align:start position:0%
sending an intent to the Android system
and<00:05:23.020><c> I'm</c><00:05:24.010><c> going</c><00:05:24.190><c> to</c><00:05:24.220><c> walk</c><00:05:24.400><c> you</c><00:05:24.580><c> through</c><00:05:24.610><c> at</c>

00:05:25.290 --> 00:05:25.300 align:start position:0%
and I'm going to walk you through at
 

00:05:25.300 --> 00:05:27.390 align:start position:0%
and I'm going to walk you through at
this<00:05:25.690><c> test</c><00:05:25.960><c> case</c><00:05:26.200><c> comparing</c><00:05:26.890><c> the</c><00:05:26.980><c> different</c>

00:05:27.390 --> 00:05:27.400 align:start position:0%
this test case comparing the different
 

00:05:27.400 --> 00:05:29.010 align:start position:0%
this test case comparing the different
styles<00:05:27.880><c> of</c><00:05:28.150><c> mockito</c>

00:05:29.010 --> 00:05:29.020 align:start position:0%
styles of mockito
 

00:05:29.020 --> 00:05:36.360 align:start position:0%
styles of mockito
Robo<00:05:29.770><c> electric</c><00:05:30.250><c> or</c><00:05:30.570><c> espresso</c><00:05:34.920><c> so</c><00:05:35.920><c> first</c><00:05:36.160><c> up</c>

00:05:36.360 --> 00:05:36.370 align:start position:0%
Robo electric or espresso so first up
 

00:05:36.370 --> 00:05:39.330 align:start position:0%
Robo electric or espresso so first up
let's<00:05:36.520><c> consider</c><00:05:36.970><c> mojito</c><00:05:37.860><c> now</c><00:05:38.860><c> mocking</c><00:05:39.040><c> is</c><00:05:39.280><c> a</c>

00:05:39.330 --> 00:05:39.340 align:start position:0%
let's consider mojito now mocking is a
 

00:05:39.340 --> 00:05:41.670 align:start position:0%
let's consider mojito now mocking is a
really<00:05:39.700><c> powerful</c><00:05:39.880><c> tool</c><00:05:40.260><c> but</c><00:05:41.260><c> is</c><00:05:41.410><c> one</c><00:05:41.560><c> that's</c>

00:05:41.670 --> 00:05:41.680 align:start position:0%
really powerful tool but is one that's
 

00:05:41.680 --> 00:05:43.770 align:start position:0%
really powerful tool but is one that's
often<00:05:41.920><c> overused</c><00:05:42.340><c> and</c><00:05:42.940><c> sometimes</c><00:05:43.570><c> used</c>

00:05:43.770 --> 00:05:43.780 align:start position:0%
often overused and sometimes used
 

00:05:43.780 --> 00:05:47.010 align:start position:0%
often overused and sometimes used
inappropriately<00:05:45.330><c> mocking</c><00:05:46.330><c> your</c><00:05:46.480><c> own</c><00:05:46.570><c> classes</c>

00:05:47.010 --> 00:05:47.020 align:start position:0%
inappropriately mocking your own classes
 

00:05:47.020 --> 00:05:49.470 align:start position:0%
inappropriately mocking your own classes
is<00:05:47.170><c> great</c><00:05:47.580><c> but</c><00:05:48.580><c> while</c><00:05:48.730><c> mocking</c><00:05:49.090><c> the</c><00:05:49.180><c> android</c>

00:05:49.470 --> 00:05:49.480 align:start position:0%
is great but while mocking the android
 

00:05:49.480 --> 00:05:51.600 align:start position:0%
is great but while mocking the android
framework<00:05:49.750><c> may</c><00:05:50.410><c> seem</c><00:05:50.620><c> like</c><00:05:50.770><c> a</c><00:05:50.830><c> great</c><00:05:51.040><c> idea</c><00:05:51.160><c> at</c>

00:05:51.600 --> 00:05:51.610 align:start position:0%
framework may seem like a great idea at
 

00:05:51.610 --> 00:05:53.880 align:start position:0%
framework may seem like a great idea at
first<00:05:51.640><c> it</c><00:05:52.210><c> consumed</c><00:05:52.900><c> lead</c><00:05:53.140><c> down</c><00:05:53.320><c> a</c><00:05:53.350><c> path</c><00:05:53.680><c> of</c>

00:05:53.880 --> 00:05:53.890 align:start position:0%
first it consumed lead down a path of
 

00:05:53.890 --> 00:05:57.780 align:start position:0%
first it consumed lead down a path of
difficult<00:05:54.340><c> problems</c><00:05:55.950><c> many</c><00:05:56.950><c> Android</c><00:05:57.310><c> classes</c>

00:05:57.780 --> 00:05:57.790 align:start position:0%
difficult problems many Android classes
 

00:05:57.790 --> 00:05:59.490 align:start position:0%
difficult problems many Android classes
are<00:05:57.910><c> stateful</c><00:05:58.390><c> or</c><00:05:58.750><c> they</c><00:05:58.960><c> have</c><00:05:59.110><c> complex</c>

00:05:59.490 --> 00:05:59.500 align:start position:0%
are stateful or they have complex
 

00:05:59.500 --> 00:06:01.290 align:start position:0%
are stateful or they have complex
contracts<00:06:00.100><c> and</c><00:06:00.370><c> these</c><00:06:00.760><c> are</c><00:06:00.910><c> really</c><00:06:01.120><c> difficult</c>

00:06:01.290 --> 00:06:01.300 align:start position:0%
contracts and these are really difficult
 

00:06:01.300 --> 00:06:04.010 align:start position:0%
contracts and these are really difficult
or<00:06:01.810><c> even</c><00:06:01.930><c> impossible</c><00:06:02.080><c> to</c><00:06:02.620><c> satisfy</c><00:06:02.770><c> with</c><00:06:03.280><c> marks</c>

00:06:04.010 --> 00:06:04.020 align:start position:0%
or even impossible to satisfy with marks
 

00:06:04.020 --> 00:06:06.600 align:start position:0%
or even impossible to satisfy with marks
so<00:06:05.020><c> even</c><00:06:05.650><c> though</c><00:06:05.740><c> we</c><00:06:05.830><c> don't</c><00:06:05.980><c> recommend</c><00:06:06.310><c> it</c>

00:06:06.600 --> 00:06:06.610 align:start position:0%
so even though we don't recommend it
 

00:06:06.610 --> 00:06:08.880 align:start position:0%
so even though we don't recommend it
let's<00:06:07.510><c> just</c><00:06:07.600><c> start</c><00:06:07.930><c> by</c><00:06:08.020><c> taking</c><00:06:08.320><c> a</c><00:06:08.500><c> look</c><00:06:08.620><c> at</c><00:06:08.770><c> one</c>

00:06:08.880 --> 00:06:08.890 align:start position:0%
let's just start by taking a look at one
 

00:06:08.890 --> 00:06:10.950 align:start position:0%
let's just start by taking a look at one
of<00:06:08.920><c> these</c><00:06:09.100><c> tests</c><00:06:09.610><c> and</c><00:06:09.820><c> walk</c><00:06:10.090><c> through</c><00:06:10.360><c> it</c><00:06:10.510><c> using</c>

00:06:10.950 --> 00:06:10.960 align:start position:0%
of these tests and walk through it using
 

00:06:10.960 --> 00:06:14.310 align:start position:0%
of these tests and walk through it using
the<00:06:11.050><c> mojito</c><00:06:11.410><c> framework</c><00:06:12.340><c> to</c><00:06:12.750><c> mock</c><00:06:13.750><c> the</c><00:06:13.930><c> android</c>

00:06:14.310 --> 00:06:14.320 align:start position:0%
the mojito framework to mock the android
 

00:06:14.320 --> 00:06:20.430 align:start position:0%
the mojito framework to mock the android
framework<00:06:17.370><c> so</c><00:06:18.370><c> in</c><00:06:18.490><c> the</c><00:06:18.580><c> given</c><00:06:18.880><c> section</c><00:06:19.230><c> we</c><00:06:20.230><c> can</c>

00:06:20.430 --> 00:06:20.440 align:start position:0%
framework so in the given section we can
 

00:06:20.440 --> 00:06:23.880 align:start position:0%
framework so in the given section we can
you<00:06:20.590><c> a</c><00:06:20.620><c> power</c><00:06:21.300><c> activity</c><00:06:22.300><c> under</c><00:06:22.600><c> tests</c><00:06:22.890><c> but</c>

00:06:23.880 --> 00:06:23.890 align:start position:0%
you a power activity under tests but
 

00:06:23.890 --> 00:06:26.100 align:start position:0%
you a power activity under tests but
look<00:06:24.070><c> we</c><00:06:24.730><c> first</c><00:06:25.000><c> of</c><00:06:25.090><c> all</c><00:06:25.150><c> have</c><00:06:25.390><c> to</c><00:06:25.420><c> stub</c><00:06:26.020><c> out</c>

00:06:26.100 --> 00:06:26.110 align:start position:0%
look we first of all have to stub out
 

00:06:26.110 --> 00:06:28.650 align:start position:0%
look we first of all have to stub out
some<00:06:26.440><c> of</c><00:06:26.530><c> the</c><00:06:26.680><c> android</c><00:06:27.430><c> framework</c><00:06:27.660><c> behavior</c>

00:06:28.650 --> 00:06:28.660 align:start position:0%
some of the android framework behavior
 

00:06:28.660 --> 00:06:32.340 align:start position:0%
some of the android framework behavior
in<00:06:28.810><c> the</c><00:06:28.900><c> superclass</c><00:06:29.320><c> activity</c><00:06:30.930><c> so</c><00:06:31.930><c> that</c><00:06:31.960><c> it</c>

00:06:32.340 --> 00:06:32.350 align:start position:0%
in the superclass activity so that it
 

00:06:32.350 --> 00:06:35.460 align:start position:0%
in the superclass activity so that it
responds<00:06:32.890><c> as</c><00:06:33.100><c> we</c><00:06:33.280><c> expect</c><00:06:33.669><c> in</c><00:06:34.030><c> our</c><00:06:34.270><c> tests</c>

00:06:35.460 --> 00:06:35.470 align:start position:0%
responds as we expect in our tests
 

00:06:35.470 --> 00:06:38.880 align:start position:0%
responds as we expect in our tests
now<00:06:36.160><c> this</c><00:06:36.310><c> introduces</c><00:06:36.880><c> some</c><00:06:37.090><c> problems</c><00:06:37.890><c> first</c>

00:06:38.880 --> 00:06:38.890 align:start position:0%
now this introduces some problems first
 

00:06:38.890 --> 00:06:41.160 align:start position:0%
now this introduces some problems first
of<00:06:39.010><c> all</c><00:06:39.130><c> were</c><00:06:39.970><c> partially</c><00:06:40.390><c> stubbing</c><00:06:40.810><c> the</c><00:06:40.960><c> class</c>

00:06:41.160 --> 00:06:41.170 align:start position:0%
of all were partially stubbing the class
 

00:06:41.170 --> 00:06:43.260 align:start position:0%
of all were partially stubbing the class
under<00:06:41.440><c> test</c><00:06:41.470><c> and</c><00:06:42.160><c> this</c><00:06:42.640><c> means</c><00:06:42.850><c> we're</c><00:06:43.240><c> not</c>

00:06:43.260 --> 00:06:43.270 align:start position:0%
under test and this means we're not
 

00:06:43.270 --> 00:06:45.600 align:start position:0%
under test and this means we're not
testing<00:06:43.930><c> the</c><00:06:43.960><c> true</c><00:06:44.290><c> behavior</c><00:06:44.920><c> of</c><00:06:45.160><c> that</c><00:06:45.340><c> object</c>

00:06:45.600 --> 00:06:45.610 align:start position:0%
testing the true behavior of that object
 

00:06:45.610 --> 00:06:49.080 align:start position:0%
testing the true behavior of that object
on<00:06:46.030><c> the</c><00:06:46.180><c> test</c><00:06:46.450><c> and</c><00:06:47.610><c> furthermore</c><00:06:48.610><c> it</c><00:06:48.850><c> brings</c>

00:06:49.080 --> 00:06:49.090 align:start position:0%
on the test and furthermore it brings
 

00:06:49.090 --> 00:06:51.570 align:start position:0%
on the test and furthermore it brings
with<00:06:49.270><c> it</c><00:06:49.500><c> excessive</c><00:06:50.500><c> stubbing</c><00:06:50.950><c> which</c>

00:06:51.570 --> 00:06:51.580 align:start position:0%
with it excessive stubbing which
 

00:06:51.580 --> 00:06:52.950 align:start position:0%
with it excessive stubbing which
introduces<00:06:52.210><c> all</c><00:06:52.540><c> this</c><00:06:52.630><c> undesirable</c>

00:06:52.950 --> 00:06:52.960 align:start position:0%
introduces all this undesirable
 

00:06:52.960 --> 00:06:55.320 align:start position:0%
introduces all this undesirable
boilerplate<00:06:53.890><c> and</c><00:06:54.190><c> that</c><00:06:54.640><c> quickly</c><00:06:54.940><c> becomes</c>

00:06:55.320 --> 00:06:55.330 align:start position:0%
boilerplate and that quickly becomes
 

00:06:55.330 --> 00:06:57.390 align:start position:0%
boilerplate and that quickly becomes
distracting<00:06:56.230><c> from</c><00:06:56.380><c> the</c><00:06:56.470><c> true</c><00:06:56.770><c> intention</c><00:06:57.310><c> of</c>

00:06:57.390 --> 00:06:57.400 align:start position:0%
distracting from the true intention of
 

00:06:57.400 --> 00:07:02.760 align:start position:0%
distracting from the true intention of
your<00:06:57.550><c> test</c><00:07:00.870><c> for</c><00:07:01.870><c> the</c><00:07:01.960><c> when</c><00:07:02.110><c> section</c><00:07:02.560><c> of</c><00:07:02.680><c> the</c>

00:07:02.760 --> 00:07:02.770 align:start position:0%
your test for the when section of the
 

00:07:02.770 --> 00:07:05.340 align:start position:0%
your test for the when section of the
test<00:07:02.980><c> to</c><00:07:03.760><c> execute</c><00:07:04.240><c> your</c><00:07:04.360><c> code</c><00:07:04.390><c> under</c><00:07:04.870><c> test</c>

00:07:05.340 --> 00:07:05.350 align:start position:0%
test to execute your code under test
 

00:07:05.350 --> 00:07:07.200 align:start position:0%
test to execute your code under test
you'd<00:07:05.650><c> have</c><00:07:05.770><c> first</c><00:07:06.010><c> had</c><00:07:06.250><c> to</c><00:07:06.370><c> need</c><00:07:06.550><c> to</c><00:07:06.790><c> register</c>

00:07:07.200 --> 00:07:07.210 align:start position:0%
you'd have first had to need to register
 

00:07:07.210 --> 00:07:09.180 align:start position:0%
you'd have first had to need to register
an<00:07:07.360><c> argument</c><00:07:07.750><c> captor</c><00:07:08.080><c> earlier</c><00:07:08.440><c> to</c><00:07:09.040><c> get</c><00:07:09.160><c> a</c>

00:07:09.180 --> 00:07:09.190 align:start position:0%
an argument captor earlier to get a
 

00:07:09.190 --> 00:07:11.310 align:start position:0%
an argument captor earlier to get a
handle<00:07:09.640><c> on</c><00:07:09.700><c> that</c><00:07:10.150><c> click</c><00:07:10.360><c> listener</c><00:07:10.780><c> which</c><00:07:11.200><c> you</c>

00:07:11.310 --> 00:07:11.320 align:start position:0%
handle on that click listener which you
 

00:07:11.320 --> 00:07:14.310 align:start position:0%
handle on that click listener which you
will<00:07:11.440><c> then</c><00:07:11.560><c> vote</c><00:07:11.590><c> manually</c><00:07:12.400><c> to</c><00:07:12.960><c> to</c><00:07:13.960><c> call</c><00:07:14.200><c> the</c>

00:07:14.310 --> 00:07:14.320 align:start position:0%
will then vote manually to to call the
 

00:07:14.320 --> 00:07:17.190 align:start position:0%
will then vote manually to to call the
code<00:07:14.530><c> that</c><00:07:14.800><c> you're</c><00:07:14.920><c> wishing</c><00:07:15.160><c> to</c><00:07:15.280><c> test</c><00:07:16.200><c> now</c>

00:07:17.190 --> 00:07:17.200 align:start position:0%
code that you're wishing to test now
 

00:07:17.200 --> 00:07:19.050 align:start position:0%
code that you're wishing to test now
with<00:07:17.380><c> this</c><00:07:17.470><c> approach</c><00:07:17.830><c> you</c><00:07:18.220><c> can</c><00:07:18.400><c> soon</c><00:07:18.640><c> descend</c>

00:07:19.050 --> 00:07:19.060 align:start position:0%
with this approach you can soon descend
 

00:07:19.060 --> 00:07:21.480 align:start position:0%
with this approach you can soon descend
into<00:07:19.270><c> a</c><00:07:19.450><c> undesirable</c><00:07:20.290><c> mess</c><00:07:20.530><c> of</c><00:07:20.890><c> argument</c>

00:07:21.480 --> 00:07:21.490 align:start position:0%
into a undesirable mess of argument
 

00:07:21.490 --> 00:07:24.180 align:start position:0%
into a undesirable mess of argument
captors<00:07:22.050><c> stubbing</c><00:07:23.050><c> calls</c><00:07:23.380><c> and</c><00:07:23.800><c> answer</c>

00:07:24.180 --> 00:07:24.190 align:start position:0%
captors stubbing calls and answer
 

00:07:24.190 --> 00:07:30.540 align:start position:0%
captors stubbing calls and answer
invocations<00:07:27.960><c> finally</c><00:07:28.960><c> in</c><00:07:29.140><c> the</c><00:07:29.740><c> then</c><00:07:30.070><c> section</c>

00:07:30.540 --> 00:07:30.550 align:start position:0%
invocations finally in the then section
 

00:07:30.550 --> 00:07:33.060 align:start position:0%
invocations finally in the then section
to<00:07:31.210><c> obtain</c><00:07:31.540><c> ten</c><00:07:31.840><c> intent</c><00:07:32.260><c> sent</c><00:07:32.590><c> to</c><00:07:32.680><c> the</c><00:07:32.740><c> Android</c>

00:07:33.060 --> 00:07:33.070 align:start position:0%
to obtain ten intent sent to the Android
 

00:07:33.070 --> 00:07:34.740 align:start position:0%
to obtain ten intent sent to the Android
system<00:07:33.250><c> you</c><00:07:34.090><c> can</c><00:07:34.210><c> have</c><00:07:34.390><c> to</c><00:07:34.480><c> use</c><00:07:34.630><c> another</c>

00:07:34.740 --> 00:07:34.750 align:start position:0%
system you can have to use another
 

00:07:34.750 --> 00:07:37.950 align:start position:0%
system you can have to use another
argument<00:07:35.110><c> captor</c><00:07:36.330><c> in</c><00:07:37.330><c> mocking</c><00:07:37.600><c> the</c><00:07:37.660><c> Android</c>

00:07:37.950 --> 00:07:37.960 align:start position:0%
argument captor in mocking the Android
 

00:07:37.960 --> 00:07:39.900 align:start position:0%
argument captor in mocking the Android
frameworks<00:07:38.380><c> in</c><00:07:38.560><c> this</c><00:07:38.710><c> way</c><00:07:38.920><c> tends</c><00:07:39.520><c> to</c><00:07:39.669><c> force</c>

00:07:39.900 --> 00:07:39.910 align:start position:0%
frameworks in this way tends to force
 

00:07:39.910 --> 00:07:42.270 align:start position:0%
frameworks in this way tends to force
you<00:07:40.120><c> into</c><00:07:40.450><c> a</c><00:07:40.600><c> testing</c><00:07:41.350><c> implementation</c>

00:07:42.270 --> 00:07:42.280 align:start position:0%
you into a testing implementation
 

00:07:42.280 --> 00:07:44.460 align:start position:0%
you into a testing implementation
details<00:07:42.700><c> when</c><00:07:43.390><c> you</c><00:07:43.660><c> want</c><00:07:43.960><c> to</c><00:07:44.020><c> be</c><00:07:44.080><c> testing</c>

00:07:44.460 --> 00:07:44.470 align:start position:0%
details when you want to be testing
 

00:07:44.470 --> 00:07:48.390 align:start position:0%
details when you want to be testing
behavior<00:07:44.590><c> instead</c><00:07:46.650><c> and</c><00:07:47.650><c> furthermore</c><00:07:48.040><c> these</c>

00:07:48.390 --> 00:07:48.400 align:start position:0%
behavior instead and furthermore these
 

00:07:48.400 --> 00:07:50.159 align:start position:0%
behavior instead and furthermore these
drawbacks<00:07:48.730><c> have</c><00:07:49.150><c> tended</c><00:07:49.600><c> to</c><00:07:49.750><c> lead</c><00:07:49.900><c> to</c>

00:07:50.159 --> 00:07:50.169 align:start position:0%
drawbacks have tended to lead to
 

00:07:50.169 --> 00:07:51.390 align:start position:0%
drawbacks have tended to lead to
developers<00:07:50.800><c> to</c><00:07:51.010><c> build</c><00:07:51.190><c> their</c><00:07:51.370><c> own</c>

00:07:51.390 --> 00:07:51.400 align:start position:0%
developers to build their own
 

00:07:51.400 --> 00:07:54.750 align:start position:0%
developers to build their own
abstractions<00:07:52.210><c> to</c><00:07:52.300><c> isolate</c><00:07:52.960><c> Android</c><00:07:53.760><c> this</c>

00:07:54.750 --> 00:07:54.760 align:start position:0%
abstractions to isolate Android this
 

00:07:54.760 --> 00:07:56.040 align:start position:0%
abstractions to isolate Android this
little<00:07:54.940><c> turn</c><00:07:55.120><c> leads</c><00:07:55.419><c> to</c><00:07:55.510><c> its</c><00:07:55.660><c> own</c><00:07:55.780><c> set</c><00:07:56.020><c> of</c>

00:07:56.040 --> 00:07:56.050 align:start position:0%
little turn leads to its own set of
 

00:07:56.050 --> 00:07:59.310 align:start position:0%
little turn leads to its own set of
problems<00:07:57.419><c> firstly</c><00:07:58.419><c> you're</c><00:07:58.720><c> introducing</c>

00:07:59.310 --> 00:07:59.320 align:start position:0%
problems firstly you're introducing
 

00:07:59.320 --> 00:08:01.140 align:start position:0%
problems firstly you're introducing
another<00:07:59.950><c> layer</c><00:08:00.220><c> of</c><00:08:00.370><c> Krofft</c><00:08:00.700><c> into</c><00:08:01.030><c> your</c>

00:08:01.140 --> 00:08:01.150 align:start position:0%
another layer of Krofft into your
 

00:08:01.150 --> 00:08:04.170 align:start position:0%
another layer of Krofft into your
application<00:08:01.780><c> and</c><00:08:02.340><c> secondly</c><00:08:03.340><c> you're</c>

00:08:04.170 --> 00:08:04.180 align:start position:0%
application and secondly you're
 

00:08:04.180 --> 00:08:06.420 align:start position:0%
application and secondly you're
introducing<00:08:04.690><c> text</c><00:08:05.110><c> in</c><00:08:05.230><c> gaps</c><00:08:05.440><c> where</c><00:08:05.919><c> bugs</c><00:08:06.190><c> can</c>

00:08:06.420 --> 00:08:06.430 align:start position:0%
introducing text in gaps where bugs can
 

00:08:06.430 --> 00:08:10.680 align:start position:0%
introducing text in gaps where bugs can
hide<00:08:08.580><c> and</c><00:08:09.580><c> we</c><00:08:09.910><c> believe</c><00:08:10.240><c> that</c><00:08:10.390><c> while</c><00:08:10.570><c> you</c>

00:08:10.680 --> 00:08:10.690 align:start position:0%
hide and we believe that while you
 

00:08:10.690 --> 00:08:12.810 align:start position:0%
hide and we believe that while you
should<00:08:10.930><c> architect</c><00:08:11.530><c> your</c><00:08:11.740><c> application</c><00:08:12.610><c> very</c>

00:08:12.810 --> 00:08:12.820 align:start position:0%
should architect your application very
 

00:08:12.820 --> 00:08:15.030 align:start position:0%
should architect your application very
thoughtfully<00:08:13.480><c> the</c><00:08:14.200><c> limitations</c><00:08:14.830><c> of</c><00:08:14.919><c> the</c>

00:08:15.030 --> 00:08:15.040 align:start position:0%
thoughtfully the limitations of the
 

00:08:15.040 --> 00:08:17.460 align:start position:0%
thoughtfully the limitations of the
tools<00:08:15.310><c> shouldn't</c><00:08:16.120><c> dictate</c><00:08:16.300><c> your</c><00:08:16.930><c> application</c>

00:08:17.460 --> 00:08:17.470 align:start position:0%
tools shouldn't dictate your application
 

00:08:17.470 --> 00:08:23.580 align:start position:0%
tools shouldn't dictate your application
architecture<00:08:18.070><c> either</c><00:08:22.110><c> so</c><00:08:23.110><c> let's</c><00:08:23.290><c> see</c><00:08:23.440><c> how</c>

00:08:23.580 --> 00:08:23.590 align:start position:0%
architecture either so let's see how
 

00:08:23.590 --> 00:08:25.640 align:start position:0%
architecture either so let's see how
this<00:08:23.740><c> looks</c><00:08:23.980><c> like</c><00:08:24.160><c> with</c><00:08:24.400><c> robolectric</c>

00:08:25.640 --> 00:08:25.650 align:start position:0%
this looks like with robolectric
 

00:08:25.650 --> 00:08:28.020 align:start position:0%
this looks like with robolectric
robolectric<00:08:26.650><c> is</c><00:08:26.980><c> the</c><00:08:27.100><c> popular</c><00:08:27.550><c> open</c><00:08:28.000><c> source</c>

00:08:28.020 --> 00:08:28.030 align:start position:0%
robolectric is the popular open source
 

00:08:28.030 --> 00:08:30.390 align:start position:0%
robolectric is the popular open source
testing<00:08:28.780><c> framework</c><00:08:29.200><c> it</c><00:08:29.980><c> allows</c><00:08:30.160><c> you</c><00:08:30.310><c> to</c>

00:08:30.390 --> 00:08:30.400 align:start position:0%
testing framework it allows you to
 

00:08:30.400 --> 00:08:31.950 align:start position:0%
testing framework it allows you to
follow<00:08:30.610><c> the</c><00:08:30.760><c> best</c><00:08:30.940><c> practices</c><00:08:31.450><c> surrounding</c>

00:08:31.950 --> 00:08:31.960 align:start position:0%
follow the best practices surrounding
 

00:08:31.960 --> 00:08:34.620 align:start position:0%
follow the best practices surrounding
marks<00:08:32.289><c> as</c><00:08:33.099><c> you're</c><00:08:33.339><c> able</c><00:08:33.610><c> to</c><00:08:33.640><c> use</c><00:08:33.880><c> real</c><00:08:34.210><c> Android</c>

00:08:34.620 --> 00:08:34.630 align:start position:0%
marks as you're able to use real Android
 

00:08:34.630 --> 00:08:36.570 align:start position:0%
marks as you're able to use real Android
objects<00:08:35.020><c> in</c><00:08:35.110><c> your</c><00:08:35.229><c> tests</c><00:08:35.650><c> rather</c><00:08:36.070><c> than</c><00:08:36.250><c> having</c>

00:08:36.570 --> 00:08:36.580 align:start position:0%
objects in your tests rather than having
 

00:08:36.580 --> 00:08:39.300 align:start position:0%
objects in your tests rather than having
to<00:08:36.760><c> program</c><00:08:37.210><c> your</c><00:08:38.050><c> own</c><00:08:38.110><c> stubbing</c><00:08:38.589><c> behavior</c><00:08:39.070><c> in</c>

00:08:39.300 --> 00:08:39.310 align:start position:0%
to program your own stubbing behavior in
 

00:08:39.310 --> 00:08:42.300 align:start position:0%
to program your own stubbing behavior in
each<00:08:39.460><c> test</c><00:08:40.289><c> it</c><00:08:41.289><c> runs</c><00:08:41.530><c> on</c><00:08:41.680><c> your</c><00:08:41.710><c> local</c><00:08:41.979><c> host</c>

00:08:42.300 --> 00:08:42.310 align:start position:0%
each test it runs on your local host
 

00:08:42.310 --> 00:08:44.640 align:start position:0%
each test it runs on your local host
which<00:08:42.669><c> means</c><00:08:42.909><c> it's</c><00:08:43.089><c> very</c><00:08:43.150><c> fast</c><00:08:43.599><c> making</c><00:08:44.500><c> it</c>

00:08:44.640 --> 00:08:44.650 align:start position:0%
which means it's very fast making it
 

00:08:44.650 --> 00:08:47.880 align:start position:0%
which means it's very fast making it
ideal<00:08:44.800><c> for</c><00:08:45.010><c> unit</c><00:08:45.490><c> tests</c><00:08:46.440><c> robolectric</c><00:08:47.440><c> tends</c>

00:08:47.880 --> 00:08:47.890 align:start position:0%
ideal for unit tests robolectric tends
 

00:08:47.890 --> 00:08:48.960 align:start position:0%
ideal for unit tests robolectric tends
to<00:08:47.980><c> create</c><00:08:48.190><c> tests</c><00:08:48.580><c> that</c>

00:08:48.960 --> 00:08:48.970 align:start position:0%
to create tests that
 

00:08:48.970 --> 00:08:51.540 align:start position:0%
to create tests that
a<00:08:49.000><c> lot</c><00:08:49.389><c> cleaner</c><00:08:49.949><c> so</c><00:08:50.949><c> let's</c><00:08:51.129><c> walk</c><00:08:51.279><c> through</c><00:08:51.339><c> each</c>

00:08:51.540 --> 00:08:51.550 align:start position:0%
a lot cleaner so let's walk through each
 

00:08:51.550 --> 00:08:57.509 align:start position:0%
a lot cleaner so let's walk through each
section<00:08:52.060><c> in</c><00:08:52.180><c> turn</c><00:08:54.060><c> in</c><00:08:55.259><c> the</c><00:08:56.259><c> given</c><00:08:56.560><c> section</c><00:08:56.769><c> we</c>

00:08:57.509 --> 00:08:57.519 align:start position:0%
section in turn in the given section we
 

00:08:57.519 --> 00:08:59.189 align:start position:0%
section in turn in the given section we
can<00:08:57.699><c> simply</c><00:08:58.060><c> bring</c><00:08:58.300><c> an</c><00:08:58.420><c> activity</c><00:08:58.899><c> into</c><00:08:59.139><c> the</c>

00:08:59.189 --> 00:08:59.199 align:start position:0%
can simply bring an activity into the
 

00:08:59.199 --> 00:09:01.290 align:start position:0%
can simply bring an activity into the
resume<00:08:59.529><c> state</c><00:08:59.860><c> for</c><00:09:00.129><c> our</c><00:09:00.160><c> test</c><00:09:00.490><c> just</c><00:09:01.209><c> by</c>

00:09:01.290 --> 00:09:01.300 align:start position:0%
resume state for our test just by
 

00:09:01.300 --> 00:09:03.300 align:start position:0%
resume state for our test just by
calling<00:09:01.480><c> robe</c><00:09:01.810><c> electrics</c><00:09:02.259><c> setup</c><00:09:02.800><c> activity</c>

00:09:03.300 --> 00:09:03.310 align:start position:0%
calling robe electrics setup activity
 

00:09:03.310 --> 00:09:10.170 align:start position:0%
calling robe electrics setup activity
API<00:09:06.509><c> in</c><00:09:07.620><c> the</c><00:09:08.620><c> when</c><00:09:08.829><c> section</c><00:09:09.370><c> we're</c><00:09:09.819><c> able</c><00:09:09.939><c> to</c>

00:09:10.170 --> 00:09:10.180 align:start position:0%
API in the when section we're able to
 

00:09:10.180 --> 00:09:12.929 align:start position:0%
API in the when section we're able to
use<00:09:10.420><c> real</c><00:09:10.750><c> Android</c><00:09:11.139><c> SDK</c><00:09:11.589><c> api's</c><00:09:12.009><c> such</c><00:09:12.430><c> as</c><00:09:12.639><c> fine</c>

00:09:12.929 --> 00:09:12.939 align:start position:0%
use real Android SDK api's such as fine
 

00:09:12.939 --> 00:09:15.420 align:start position:0%
use real Android SDK api's such as fine
view<00:09:13.180><c> by</c><00:09:13.329><c> ID</c><00:09:13.540><c> to</c><00:09:14.350><c> get</c><00:09:14.439><c> ahold</c><00:09:14.680><c> of</c><00:09:14.829><c> the</c><00:09:14.980><c> view</c><00:09:15.220><c> and</c>

00:09:15.420 --> 00:09:15.430 align:start position:0%
view by ID to get ahold of the view and
 

00:09:15.430 --> 00:09:18.569 align:start position:0%
view by ID to get ahold of the view and
then<00:09:15.970><c> robolectric</c><00:09:16.420><c> s--</c><00:09:16.660><c> click</c><00:09:16.959><c> on</c><00:09:17.110><c> api</c><00:09:17.579><c> safely</c>

00:09:18.569 --> 00:09:18.579 align:start position:0%
then robolectric s-- click on api safely
 

00:09:18.579 --> 00:09:20.069 align:start position:0%
then robolectric s-- click on api safely
click<00:09:18.790><c> on</c><00:09:18.910><c> that</c><00:09:19.029><c> view</c><00:09:19.209><c> and</c><00:09:19.420><c> invoke</c><00:09:19.660><c> the</c><00:09:19.870><c> code</c>

00:09:20.069 --> 00:09:20.079 align:start position:0%
click on that view and invoke the code
 

00:09:20.079 --> 00:09:25.350 align:start position:0%
click on that view and invoke the code
that<00:09:20.230><c> we</c><00:09:20.319><c> wish</c><00:09:20.470><c> to</c><00:09:20.500><c> test</c><00:09:21.959><c> and</c><00:09:23.730><c> finally</c><00:09:24.730><c> in</c><00:09:24.939><c> the</c>

00:09:25.350 --> 00:09:25.360 align:start position:0%
that we wish to test and finally in the
 

00:09:25.360 --> 00:09:27.749 align:start position:0%
that we wish to test and finally in the
vent<00:09:25.540><c> section</c><00:09:26.019><c> we</c><00:09:26.680><c> again</c><00:09:26.920><c> use</c><00:09:26.949><c> robe</c><00:09:27.370><c> electrics</c>

00:09:27.749 --> 00:09:27.759 align:start position:0%
vent section we again use robe electrics
 

00:09:27.759 --> 00:09:30.119 align:start position:0%
vent section we again use robe electrics
own<00:09:27.970><c> testing</c><00:09:28.540><c> api's</c><00:09:28.930><c> to</c><00:09:29.620><c> check</c><00:09:29.829><c> that</c><00:09:30.009><c> the</c>

00:09:30.119 --> 00:09:30.129 align:start position:0%
own testing api's to check that the
 

00:09:30.129 --> 00:09:33.179 align:start position:0%
own testing api's to check that the
intent<00:09:30.430><c> was</c><00:09:30.579><c> sent</c><00:09:30.850><c> to</c><00:09:30.910><c> the</c><00:09:31.060><c> system</c><00:09:32.009><c> see</c><00:09:33.009><c> how</c>

00:09:33.179 --> 00:09:33.189 align:start position:0%
intent was sent to the system see how
 

00:09:33.189 --> 00:09:34.980 align:start position:0%
intent was sent to the system see how
much<00:09:33.339><c> cleaner</c><00:09:33.610><c> this</c><00:09:33.790><c> version</c><00:09:34.060><c> is</c><00:09:34.360><c> we're</c>

00:09:34.980 --> 00:09:34.990 align:start position:0%
much cleaner this version is we're
 

00:09:34.990 --> 00:09:36.749 align:start position:0%
much cleaner this version is we're
focusing<00:09:35.350><c> on</c><00:09:35.470><c> the</c><00:09:35.560><c> items</c><00:09:35.980><c> that</c><00:09:36.129><c> really</c><00:09:36.550><c> matter</c>

00:09:36.749 --> 00:09:36.759 align:start position:0%
focusing on the items that really matter
 

00:09:36.759 --> 00:09:38.790 align:start position:0%
focusing on the items that really matter
in<00:09:37.000><c> the</c><00:09:37.120><c> test</c><00:09:37.389><c> and</c><00:09:37.689><c> were</c><00:09:38.019><c> free</c><00:09:38.319><c> of</c><00:09:38.500><c> all</c><00:09:38.620><c> those</c>

00:09:38.790 --> 00:09:38.800 align:start position:0%
in the test and were free of all those
 

00:09:38.800 --> 00:09:45.540 align:start position:0%
in the test and were free of all those
extra<00:09:39.160><c> pieces</c><00:09:39.579><c> of</c><00:09:39.819><c> distraction</c><00:09:43.980><c> now</c><00:09:44.980><c> espresso</c>

00:09:45.540 --> 00:09:45.550 align:start position:0%
extra pieces of distraction now espresso
 

00:09:45.550 --> 00:09:47.939 align:start position:0%
extra pieces of distraction now espresso
is<00:09:45.759><c> a</c><00:09:45.790><c> UI</c><00:09:46.029><c> testing</c><00:09:46.509><c> framework</c><00:09:47.019><c> and</c><00:09:47.259><c> it</c><00:09:47.620><c> runs</c><00:09:47.800><c> on</c>

00:09:47.939 --> 00:09:47.949 align:start position:0%
is a UI testing framework and it runs on
 

00:09:47.949 --> 00:09:50.790 align:start position:0%
is a UI testing framework and it runs on
a<00:09:48.009><c> real</c><00:09:48.279><c> or</c><00:09:48.610><c> a</c><00:09:48.670><c> virtual</c><00:09:49.120><c> device</c><00:09:49.420><c> it</c><00:09:50.379><c> provides</c>

00:09:50.790 --> 00:09:50.800 align:start position:0%
a real or a virtual device it provides
 

00:09:50.800 --> 00:09:52.679 align:start position:0%
a real or a virtual device it provides
you<00:09:51.009><c> with</c><00:09:51.129><c> a</c><00:09:51.189><c> really</c><00:09:51.519><c> realistic</c><00:09:51.879><c> environment</c>

00:09:52.679 --> 00:09:52.689 align:start position:0%
you with a really realistic environment
 

00:09:52.689 --> 00:09:55.230 align:start position:0%
you with a really realistic environment
the<00:09:53.410><c> trade-off</c><00:09:53.800><c> here</c><00:09:54.069><c> is</c><00:09:54.339><c> a</c><00:09:54.759><c> much</c><00:09:55.029><c> slower</c>

00:09:55.230 --> 00:09:55.240 align:start position:0%
the trade-off here is a much slower
 

00:09:55.240 --> 00:09:57.869 align:start position:0%
the trade-off here is a much slower
execution<00:09:55.990><c> speed</c><00:09:56.490><c> you're</c><00:09:57.490><c> building</c><00:09:57.759><c> up</c><00:09:57.819><c> your</c>

00:09:57.869 --> 00:09:57.879 align:start position:0%
execution speed you're building up your
 

00:09:57.879 --> 00:10:00.389 align:start position:0%
execution speed you're building up your
entire<00:09:58.300><c> apk</c><00:09:58.930><c> deploying</c><00:09:59.860><c> it</c><00:10:00.009><c> to</c><00:10:00.100><c> the</c><00:10:00.160><c> device</c>

00:10:00.389 --> 00:10:00.399 align:start position:0%
entire apk deploying it to the device
 

00:10:00.399 --> 00:10:03.449 align:start position:0%
entire apk deploying it to the device
and<00:10:01.050><c> instantiating</c><00:10:02.050><c> the</c><00:10:02.230><c> test</c><00:10:02.559><c> run</c><00:10:02.800><c> waiting</c>

00:10:03.449 --> 00:10:03.459 align:start position:0%
and instantiating the test run waiting
 

00:10:03.459 --> 00:10:04.679 align:start position:0%
and instantiating the test run waiting
for<00:10:03.610><c> the</c><00:10:03.670><c> results</c><00:10:04.029><c> and</c><00:10:04.149><c> then</c><00:10:04.240><c> collecting</c>

00:10:04.679 --> 00:10:04.689 align:start position:0%
for the results and then collecting
 

00:10:04.689 --> 00:10:07.230 align:start position:0%
for the results and then collecting
those<00:10:05.110><c> back</c><00:10:05.410><c> on</c><00:10:05.439><c> your</c><00:10:05.680><c> local</c><00:10:05.949><c> workstation</c><00:10:06.240><c> all</c>

00:10:07.230 --> 00:10:07.240 align:start position:0%
those back on your local workstation all
 

00:10:07.240 --> 00:10:09.150 align:start position:0%
those back on your local workstation all
of<00:10:07.569><c> this</c><00:10:07.629><c> is</c><00:10:07.779><c> adding</c><00:10:08.019><c> valuable</c><00:10:08.439><c> development</c>

00:10:09.150 --> 00:10:09.160 align:start position:0%
of this is adding valuable development
 

00:10:09.160 --> 00:10:13.439 align:start position:0%
of this is adding valuable development
cycles<00:10:10.829><c> now</c><00:10:11.829><c> the</c><00:10:12.250><c> exact</c><00:10:12.519><c> same</c><00:10:12.730><c> android</c>

00:10:13.439 --> 00:10:13.449 align:start position:0%
cycles now the exact same android
 

00:10:13.449 --> 00:10:15.929 align:start position:0%
cycles now the exact same android
concepts<00:10:13.959><c> exist</c><00:10:14.259><c> here</c><00:10:14.670><c> we're</c><00:10:15.670><c> just</c><00:10:15.699><c> getting</c>

00:10:15.929 --> 00:10:15.939 align:start position:0%
concepts exist here we're just getting
 

00:10:15.939 --> 00:10:17.759 align:start position:0%
concepts exist here we're just getting
hold<00:10:16.269><c> of</c><00:10:16.300><c> an</c><00:10:16.389><c> activity</c><00:10:16.680><c> clicking</c><00:10:17.680><c> a</c><00:10:17.740><c> button</c>

00:10:17.759 --> 00:10:17.769 align:start position:0%
hold of an activity clicking a button
 

00:10:17.769 --> 00:10:20.100 align:start position:0%
hold of an activity clicking a button
and<00:10:18.309><c> then</c><00:10:18.730><c> verifying</c><00:10:19.300><c> an</c><00:10:19.449><c> intent</c><00:10:19.750><c> was</c><00:10:19.930><c> sent</c>

00:10:20.100 --> 00:10:20.110 align:start position:0%
and then verifying an intent was sent
 

00:10:20.110 --> 00:10:23.160 align:start position:0%
and then verifying an intent was sent
the<00:10:20.290><c> Android</c><00:10:20.589><c> system</c><00:10:21.720><c> here</c><00:10:22.720><c> though</c><00:10:22.870><c> as</c><00:10:23.019><c> you'll</c>

00:10:23.160 --> 00:10:23.170 align:start position:0%
the Android system here though as you'll
 

00:10:23.170 --> 00:10:26.850 align:start position:0%
the Android system here though as you'll
see<00:10:23.410><c> the</c><00:10:23.860><c> api's</c><00:10:24.250><c> are</c><00:10:24.610><c> very</c><00:10:24.939><c> different</c><00:10:25.860><c> let's</c>

00:10:26.850 --> 00:10:26.860 align:start position:0%
see the api's are very different let's
 

00:10:26.860 --> 00:10:31.319 align:start position:0%
see the api's are very different let's
step<00:10:27.040><c> through</c><00:10:27.189><c> this</c><00:10:27.339><c> one</c><00:10:27.550><c> together</c><00:10:30.120><c> so</c><00:10:31.120><c> in</c><00:10:31.240><c> the</c>

00:10:31.319 --> 00:10:31.329 align:start position:0%
step through this one together so in the
 

00:10:31.329 --> 00:10:33.299 align:start position:0%
step through this one together so in the
given<00:10:31.600><c> section</c><00:10:31.839><c> we'll</c><00:10:32.589><c> use</c><00:10:32.800><c> the</c><00:10:33.009><c> activity</c>

00:10:33.299 --> 00:10:33.309 align:start position:0%
given section we'll use the activity
 

00:10:33.309 --> 00:10:35.490 align:start position:0%
given section we'll use the activity
test<00:10:33.730><c> role</c><00:10:34.000><c> which</c><00:10:34.629><c> comes</c><00:10:34.870><c> from</c><00:10:34.990><c> the</c><00:10:35.139><c> Android</c>

00:10:35.490 --> 00:10:35.500 align:start position:0%
test role which comes from the Android
 

00:10:35.500 --> 00:10:38.369 align:start position:0%
test role which comes from the Android
testing<00:10:35.769><c> support</c><00:10:36.339><c> library</c><00:10:36.959><c> this</c><00:10:37.959><c> can</c><00:10:38.170><c> be</c><00:10:38.230><c> used</c>

00:10:38.369 --> 00:10:38.379 align:start position:0%
testing support library this can be used
 

00:10:38.379 --> 00:10:40.379 align:start position:0%
testing support library this can be used
to<00:10:38.500><c> start</c><00:10:38.740><c> an</c><00:10:38.920><c> activity</c><00:10:39.120><c> bring</c><00:10:40.120><c> it</c><00:10:40.209><c> to</c><00:10:40.300><c> the</c>

00:10:40.379 --> 00:10:40.389 align:start position:0%
to start an activity bring it to the
 

00:10:40.389 --> 00:10:41.999 align:start position:0%
to start an activity bring it to the
resume<00:10:40.629><c> state</c><00:10:41.019><c> and</c><00:10:41.259><c> provide</c><00:10:41.680><c> us</c><00:10:41.829><c> with</c><00:10:41.860><c> a</c>

00:10:41.999 --> 00:10:42.009 align:start position:0%
resume state and provide us with a
 

00:10:42.009 --> 00:10:47.530 align:start position:0%
resume state and provide us with a
handle<00:10:42.399><c> to</c><00:10:42.639><c> it</c><00:10:42.670><c> in</c><00:10:42.879><c> our</c><00:10:42.970><c> tests</c>

00:10:47.530 --> 00:10:47.540 align:start position:0%
 
 

00:10:47.540 --> 00:10:50.260 align:start position:0%
 
for<00:10:48.440><c> the</c><00:10:48.500><c> when</c><00:10:48.680><c> section</c><00:10:49.220><c> we</c><00:10:49.850><c> can</c><00:10:49.970><c> use</c><00:10:50.120><c> the</c>

00:10:50.260 --> 00:10:50.270 align:start position:0%
for the when section we can use the
 

00:10:50.270 --> 00:10:52.660 align:start position:0%
for the when section we can use the
espresso<00:10:50.720><c> view</c><00:10:50.930><c> matcher</c><00:10:51.140><c> api's</c><00:10:51.620><c> they'll</c><00:10:52.400><c> find</c>

00:10:52.660 --> 00:10:52.670 align:start position:0%
espresso view matcher api's they'll find
 

00:10:52.670 --> 00:10:54.310 align:start position:0%
espresso view matcher api's they'll find
the<00:10:52.790><c> view</c><00:10:52.910><c> in</c><00:10:53.030><c> question</c><00:10:53.540><c> and</c><00:10:53.780><c> then</c><00:10:54.110><c> safely</c>

00:10:54.310 --> 00:10:54.320 align:start position:0%
the view in question and then safely
 

00:10:54.320 --> 00:10:56.110 align:start position:0%
the view in question and then safely
click<00:10:54.740><c> on</c><00:10:54.890><c> it</c><00:10:55.010><c> to</c><00:10:55.160><c> invoke</c><00:10:55.370><c> the</c><00:10:55.610><c> code</c><00:10:55.790><c> that</c><00:10:56.060><c> we</c>

00:10:56.110 --> 00:10:56.120 align:start position:0%
click on it to invoke the code that we
 

00:10:56.120 --> 00:11:02.050 align:start position:0%
click on it to invoke the code that we
wish<00:10:56.300><c> to</c><00:10:56.480><c> test</c><00:10:58.480><c> and</c><00:11:00.160><c> finally</c><00:11:01.160><c> in</c><00:11:01.370><c> the</c><00:11:01.850><c> vent</c>

00:11:02.050 --> 00:11:02.060 align:start position:0%
wish to test and finally in the vent
 

00:11:02.060 --> 00:11:04.510 align:start position:0%
wish to test and finally in the vent
section<00:11:02.540><c> we</c><00:11:03.440><c> use</c><00:11:03.590><c> the</c><00:11:03.710><c> espresso</c><00:11:04.100><c> intents</c>

00:11:04.510 --> 00:11:04.520 align:start position:0%
section we use the espresso intents
 

00:11:04.520 --> 00:11:07.060 align:start position:0%
section we use the espresso intents
library<00:11:04.970><c> to</c><00:11:05.150><c> capture</c><00:11:05.630><c> that</c><00:11:05.810><c> tent</c><00:11:06.140><c> and</c><00:11:06.320><c> verify</c>

00:11:07.060 --> 00:11:07.070 align:start position:0%
library to capture that tent and verify
 

00:11:07.070 --> 00:11:08.500 align:start position:0%
library to capture that tent and verify
that<00:11:07.220><c> it</c><00:11:07.340><c> was</c><00:11:07.460><c> the</c><00:11:07.550><c> one</c><00:11:07.670><c> that</c><00:11:07.850><c> we</c><00:11:07.940><c> wanted</c><00:11:08.240><c> sent</c>

00:11:08.500 --> 00:11:08.510 align:start position:0%
that it was the one that we wanted sent
 

00:11:08.510 --> 00:11:12.670 align:start position:0%
that it was the one that we wanted sent
to<00:11:08.600><c> the</c><00:11:08.690><c> system</c><00:11:10.750><c> notice</c><00:11:11.750><c> here</c><00:11:12.020><c> but</c><00:11:12.440><c> a</c><00:11:12.500><c> Twila</c>

00:11:12.670 --> 00:11:12.680 align:start position:0%
to the system notice here but a Twila
 

00:11:12.680 --> 00:11:14.800 align:start position:0%
to the system notice here but a Twila
test<00:11:13.010><c> has</c><00:11:13.190><c> many</c><00:11:13.460><c> similar</c><00:11:14.030><c> structures</c><00:11:14.540><c> to</c>

00:11:14.800 --> 00:11:14.810 align:start position:0%
test has many similar structures to
 

00:11:14.810 --> 00:11:17.110 align:start position:0%
test has many similar structures to
robolectric<00:11:15.470><c> test</c><00:11:15.920><c> the</c><00:11:16.400><c> example</c><00:11:16.790><c> that</c><00:11:16.880><c> we</c><00:11:16.940><c> saw</c>

00:11:17.110 --> 00:11:17.120 align:start position:0%
robolectric test the example that we saw
 

00:11:17.120 --> 00:11:19.600 align:start position:0%
robolectric test the example that we saw
earlier<00:11:17.510><c> the</c><00:11:18.200><c> syntax</c><00:11:18.650><c> is</c><00:11:18.950><c> very</c><00:11:19.010><c> very</c>

00:11:19.600 --> 00:11:19.610 align:start position:0%
earlier the syntax is very very
 

00:11:19.610 --> 00:11:25.810 align:start position:0%
earlier the syntax is very very
different<00:11:22.420><c> so</c><00:11:24.010><c> while</c><00:11:25.010><c> each</c><00:11:25.040><c> of</c><00:11:25.190><c> these</c><00:11:25.430><c> testing</c>

00:11:25.810 --> 00:11:25.820 align:start position:0%
different so while each of these testing
 

00:11:25.820 --> 00:11:27.970 align:start position:0%
different so while each of these testing
frameworks<00:11:26.240><c> have</c><00:11:26.450><c> contrasting</c><00:11:27.350><c> strengths</c>

00:11:27.970 --> 00:11:27.980 align:start position:0%
frameworks have contrasting strengths
 

00:11:27.980 --> 00:11:30.490 align:start position:0%
frameworks have contrasting strengths
and<00:11:28.190><c> weaknesses</c><00:11:29.090><c> it's</c><00:11:29.720><c> this</c><00:11:29.870><c> explosion</c><00:11:30.290><c> of</c>

00:11:30.490 --> 00:11:30.500 align:start position:0%
and weaknesses it's this explosion of
 

00:11:30.500 --> 00:11:31.900 align:start position:0%
and weaknesses it's this explosion of
styles<00:11:30.920><c> that's</c><00:11:31.100><c> really</c><00:11:31.370><c> become</c><00:11:31.610><c> the</c><00:11:31.730><c> big</c>

00:11:31.900 --> 00:11:31.910 align:start position:0%
styles that's really become the big
 

00:11:31.910 --> 00:11:35.410 align:start position:0%
styles that's really become the big
problem<00:11:32.360><c> for</c><00:11:32.390><c> writing</c><00:11:32.810><c> tests</c><00:11:34.210><c> who</c><00:11:35.210><c> in</c><00:11:35.330><c> the</c>

00:11:35.410 --> 00:11:35.420 align:start position:0%
problem for writing tests who in the
 

00:11:35.420 --> 00:11:37.300 align:start position:0%
problem for writing tests who in the
audience<00:11:35.540><c> has</c><00:11:36.050><c> been</c><00:11:36.230><c> using</c><00:11:36.440><c> robolectric</c><00:11:36.950><c> to</c>

00:11:37.300 --> 00:11:37.310 align:start position:0%
audience has been using robolectric to
 

00:11:37.310 --> 00:11:37.870 align:start position:0%
audience has been using robolectric to
write<00:11:37.490><c> tests</c>

00:11:37.870 --> 00:11:37.880 align:start position:0%
write tests
 

00:11:37.880 --> 00:11:41.820 align:start position:0%
write tests
raise<00:11:38.030><c> your</c><00:11:38.150><c> hands</c><00:11:38.690><c> and</c><00:11:40.240><c> what</c><00:11:41.240><c> about</c><00:11:41.450><c> espresso</c>

00:11:41.820 --> 00:11:41.830 align:start position:0%
raise your hands and what about espresso
 

00:11:41.830 --> 00:11:49.630 align:start position:0%
raise your hands and what about espresso
and<00:11:44.050><c> who's</c><00:11:45.050><c> using</c><00:11:45.410><c> both</c><00:11:48.160><c> we</c><00:11:49.160><c> often</c><00:11:49.460><c> hear</c>

00:11:49.630 --> 00:11:49.640 align:start position:0%
and who's using both we often hear
 

00:11:49.640 --> 00:11:51.880 align:start position:0%
and who's using both we often hear
developers<00:11:50.060><c> talking</c><00:11:50.480><c> about</c><00:11:50.810><c> I</c><00:11:51.050><c> need</c><00:11:51.470><c> to</c><00:11:51.710><c> write</c>

00:11:51.880 --> 00:11:51.890 align:start position:0%
developers talking about I need to write
 

00:11:51.890 --> 00:11:54.340 align:start position:0%
developers talking about I need to write
a<00:11:51.920><c> robolectric</c><00:11:52.400><c> test</c><00:11:52.880><c> or</c><00:11:53.120><c> I</c><00:11:53.180><c> need</c><00:11:53.930><c> an</c><00:11:54.050><c> espresso</c>

00:11:54.340 --> 00:11:54.350 align:start position:0%
a robolectric test or I need an espresso
 

00:11:54.350 --> 00:11:56.950 align:start position:0%
a robolectric test or I need an espresso
test<00:11:54.880><c> but</c><00:11:55.880><c> we'd</c><00:11:56.060><c> much</c><00:11:56.090><c> rather</c><00:11:56.360><c> you</c><00:11:56.840><c> be</c>

00:11:56.950 --> 00:11:56.960 align:start position:0%
test but we'd much rather you be
 

00:11:56.960 --> 00:11:58.750 align:start position:0%
test but we'd much rather you be
thinking<00:11:57.320><c> about</c><00:11:57.440><c> writing</c><00:11:57.950><c> an</c><00:11:58.040><c> Android</c><00:11:58.220><c> test</c>

00:11:58.750 --> 00:11:58.760 align:start position:0%
thinking about writing an Android test
 

00:11:58.760 --> 00:12:02.590 align:start position:0%
thinking about writing an Android test
instead<00:12:00.280><c> we</c><00:12:01.280><c> feel</c><00:12:01.490><c> as</c><00:12:01.610><c> a</c><00:12:01.640><c> developer</c><00:12:02.210><c> that</c><00:12:02.420><c> no</c>

00:12:02.590 --> 00:12:02.600 align:start position:0%
instead we feel as a developer that no
 

00:12:02.600 --> 00:12:04.150 align:start position:0%
instead we feel as a developer that no
matter<00:12:02.780><c> what</c><00:12:03.020><c> kind</c><00:12:03.200><c> of</c><00:12:03.350><c> test</c><00:12:03.590><c> you're</c><00:12:03.770><c> writing</c>

00:12:04.150 --> 00:12:04.160 align:start position:0%
matter what kind of test you're writing
 

00:12:04.160 --> 00:12:05.710 align:start position:0%
matter what kind of test you're writing
you<00:12:04.610><c> shouldn't</c><00:12:04.910><c> first</c><00:12:05.120><c> have</c><00:12:05.300><c> to</c><00:12:05.330><c> think</c><00:12:05.630><c> about</c>

00:12:05.710 --> 00:12:05.720 align:start position:0%
you shouldn't first have to think about
 

00:12:05.720 --> 00:12:07.930 align:start position:0%
you shouldn't first have to think about
environments<00:12:06.650><c> and</c><00:12:06.800><c> tools</c><00:12:07.340><c> and</c><00:12:07.760><c> libraries</c>

00:12:07.930 --> 00:12:07.940 align:start position:0%
environments and tools and libraries
 

00:12:07.940 --> 00:12:10.690 align:start position:0%
environments and tools and libraries
that<00:12:08.330><c> you'll</c><00:12:08.450><c> need</c><00:12:09.160><c> we</c><00:12:10.160><c> believe</c><00:12:10.430><c> that</c><00:12:10.610><c> you</c>

00:12:10.690 --> 00:12:10.700 align:start position:0%
that you'll need we believe that you
 

00:12:10.700 --> 00:12:12.370 align:start position:0%
that you'll need we believe that you
shouldn't<00:12:10.910><c> have</c><00:12:11.120><c> to</c><00:12:11.240><c> suffer</c><00:12:11.570><c> the</c><00:12:11.690><c> mental</c><00:12:12.140><c> load</c>

00:12:12.370 --> 00:12:12.380 align:start position:0%
shouldn't have to suffer the mental load
 

00:12:12.380 --> 00:12:14.560 align:start position:0%
shouldn't have to suffer the mental load
of<00:12:12.710><c> having</c><00:12:13.280><c> to</c><00:12:13.400><c> learn</c><00:12:13.580><c> multiple</c><00:12:14.180><c> sets</c><00:12:14.420><c> of</c>

00:12:14.560 --> 00:12:14.570 align:start position:0%
of having to learn multiple sets of
 

00:12:14.570 --> 00:12:19.140 align:start position:0%
of having to learn multiple sets of
api's<00:12:14.990><c> for</c><00:12:15.410><c> doing</c><00:12:15.620><c> exactly</c><00:12:15.740><c> the</c><00:12:16.340><c> same</c><00:12:16.580><c> thing</c>

00:12:19.140 --> 00:12:19.150 align:start position:0%
 
 

00:12:19.150 --> 00:12:23.200 align:start position:0%
 
so<00:12:20.860><c> and</c><00:12:21.860><c> of</c><00:12:22.190><c> course</c><00:12:22.430><c> you</c><00:12:22.910><c> should</c><00:12:23.030><c> have</c><00:12:23.120><c> the</c>

00:12:23.200 --> 00:12:23.210 align:start position:0%
so and of course you should have the
 

00:12:23.210 --> 00:12:25.390 align:start position:0%
so and of course you should have the
freedom<00:12:23.360><c> to</c><00:12:23.630><c> refactor</c><00:12:24.410><c> and</c><00:12:24.530><c> reuse</c><00:12:25.160><c> your</c><00:12:25.340><c> code</c>

00:12:25.390 --> 00:12:25.400 align:start position:0%
freedom to refactor and reuse your code
 

00:12:25.400 --> 00:12:30.160 align:start position:0%
freedom to refactor and reuse your code
no<00:12:26.270><c> matter</c><00:12:26.330><c> where</c><00:12:26.720><c> you</c><00:12:26.990><c> choose</c><00:12:27.260><c> to</c><00:12:27.410><c> run</c><00:12:27.560><c> it</c><00:12:29.170><c> so</c>

00:12:30.160 --> 00:12:30.170 align:start position:0%
no matter where you choose to run it so
 

00:12:30.170 --> 00:12:32.620 align:start position:0%
no matter where you choose to run it so
what<00:12:30.320><c> if</c><00:12:30.410><c> there</c><00:12:30.590><c> was</c><00:12:30.650><c> only</c><00:12:30.800><c> one</c><00:12:31.280><c> set</c><00:12:31.940><c> of</c><00:12:31.970><c> API</c><00:12:32.480><c> is</c>

00:12:32.620 --> 00:12:32.630 align:start position:0%
what if there was only one set of API is
 

00:12:32.630 --> 00:12:35.740 align:start position:0%
what if there was only one set of API is
that<00:12:32.900><c> you</c><00:12:32.990><c> needed</c><00:12:33.290><c> to</c><00:12:33.440><c> learn</c><00:12:33.590><c> and</c><00:12:34.240><c> now</c><00:12:35.240><c> imagine</c>

00:12:35.740 --> 00:12:35.750 align:start position:0%
that you needed to learn and now imagine
 

00:12:35.750 --> 00:12:37.960 align:start position:0%
that you needed to learn and now imagine
also<00:12:35.870><c> being</c><00:12:36.380><c> freedom</c><00:12:36.890><c> to</c><00:12:37.220><c> focus</c><00:12:37.610><c> on</c><00:12:37.760><c> writing</c>

00:12:37.960 --> 00:12:37.970 align:start position:0%
also being freedom to focus on writing
 

00:12:37.970 --> 00:12:40.000 align:start position:0%
also being freedom to focus on writing
your<00:12:38.210><c> tests</c><00:12:38.480><c> rather</c><00:12:39.200><c> than</c><00:12:39.380><c> considering</c><00:12:39.920><c> those</c>

00:12:40.000 --> 00:12:40.010 align:start position:0%
your tests rather than considering those
 

00:12:40.010 --> 00:12:46.660 align:start position:0%
your tests rather than considering those
tools<00:12:40.370><c> and</c><00:12:40.760><c> libraries</c><00:12:41.600><c> and</c><00:12:41.630><c> environments</c>

00:12:46.660 --> 00:12:46.670 align:start position:0%
 
 

00:12:46.670 --> 00:12:50.140 align:start position:0%
 
well<00:12:47.480><c> to</c><00:12:48.140><c> make</c><00:12:48.290><c> this</c><00:12:48.410><c> a</c><00:12:48.470><c> reality</c><00:12:48.940><c> today</c><00:12:49.940><c> we're</c>

00:12:50.140 --> 00:12:50.150 align:start position:0%
well to make this a reality today we're
 

00:12:50.150 --> 00:12:53.470 align:start position:0%
well to make this a reality today we're
launching<00:12:50.470><c> android</c><00:12:51.470><c> test</c><00:12:52.090><c> it's</c><00:12:53.090><c> part</c><00:12:53.360><c> of</c>

00:12:53.470 --> 00:12:53.480 align:start position:0%
launching android test it's part of
 

00:12:53.480 --> 00:12:57.250 align:start position:0%
launching android test it's part of
jetpack<00:12:54.580><c> with</c><00:12:55.580><c> jetpack</c><00:12:56.120><c> testing</c><00:12:57.050><c> is</c><00:12:57.140><c> now</c><00:12:57.230><c> a</c>

00:12:57.250 --> 00:12:57.260 align:start position:0%
jetpack with jetpack testing is now a
 

00:12:57.260 --> 00:12:58.960 align:start position:0%
jetpack with jetpack testing is now a
first-class<00:12:57.800><c> citizen</c><00:12:58.250><c> of</c><00:12:58.340><c> the</c><00:12:58.430><c> Android</c><00:12:58.760><c> tool</c>

00:12:58.960 --> 00:12:58.970 align:start position:0%
first-class citizen of the Android tool
 

00:12:58.970 --> 00:13:01.990 align:start position:0%
first-class citizen of the Android tool
chain<00:12:59.830><c> will</c><00:13:00.830><c> unifying</c><00:13:01.400><c> the</c><00:13:01.550><c> development</c>

00:13:01.990 --> 00:13:02.000 align:start position:0%
chain will unifying the development
 

00:13:02.000 --> 00:13:04.210 align:start position:0%
chain will unifying the development
experience<00:13:02.840><c> around</c><00:13:03.110><c> a</c><00:13:03.200><c> canonical</c><00:13:03.500><c> high</c>

00:13:04.210 --> 00:13:04.220 align:start position:0%
experience around a canonical high
 

00:13:04.220 --> 00:13:06.520 align:start position:0%
experience around a canonical high
quality<00:13:04.730><c> set</c><00:13:04.940><c> of</c><00:13:05.060><c> api's</c><00:13:05.510><c> that</c><00:13:06.260><c> will</c><00:13:06.380><c> reduce</c>

00:13:06.520 --> 00:13:06.530 align:start position:0%
quality set of api's that will reduce
 

00:13:06.530 --> 00:13:08.980 align:start position:0%
quality set of api's that will reduce
the<00:13:06.770><c> boilerplate</c><00:13:07.250><c> and</c><00:13:07.760><c> eliminate</c><00:13:08.720><c> the</c><00:13:08.840><c> number</c>

00:13:08.980 --> 00:13:08.990 align:start position:0%
the boilerplate and eliminate the number
 

00:13:08.990 --> 00:13:10.890 align:start position:0%
the boilerplate and eliminate the number
of<00:13:09.200><c> tools</c><00:13:09.440><c> that</c><00:13:09.560><c> you</c><00:13:09.830><c> need</c><00:13:09.860><c> to</c><00:13:10.160><c> learn</c>

00:13:10.890 --> 00:13:10.900 align:start position:0%
of tools that you need to learn
 

00:13:10.900 --> 00:13:14.260 align:start position:0%
of tools that you need to learn
naturally<00:13:11.980><c> Kotlin</c><00:13:12.980><c> in</c><00:13:13.100><c> support</c><00:13:13.490><c> is</c><00:13:13.700><c> included</c>

00:13:14.260 --> 00:13:14.270 align:start position:0%
naturally Kotlin in support is included
 

00:13:14.270 --> 00:13:15.610 align:start position:0%
naturally Kotlin in support is included
allowing<00:13:14.720><c> you</c><00:13:14.900><c> to</c><00:13:15.020><c> write</c><00:13:15.140><c> beautifully</c>

00:13:15.610 --> 00:13:15.620 align:start position:0%
allowing you to write beautifully
 

00:13:15.620 --> 00:13:19.120 align:start position:0%
allowing you to write beautifully
concise<00:13:16.100><c> tests</c><00:13:16.730><c> and</c><00:13:17.270><c> of</c><00:13:17.900><c> course</c><00:13:18.170><c> all</c><00:13:18.590><c> of</c><00:13:18.650><c> this</c>

00:13:19.120 --> 00:13:19.130 align:start position:0%
concise tests and of course all of this
 

00:13:19.130 --> 00:13:20.320 align:start position:0%
concise tests and of course all of this
will<00:13:19.400><c> be</c><00:13:19.490><c> open</c><00:13:19.760><c> sourced</c>

00:13:20.320 --> 00:13:20.330 align:start position:0%
will be open sourced
 

00:13:20.330 --> 00:13:22.330 align:start position:0%
will be open sourced
we<00:13:20.660><c> love</c><00:13:20.900><c> contributions</c><00:13:21.620><c> from</c><00:13:21.710><c> our</c><00:13:21.860><c> community</c>

00:13:22.330 --> 00:13:22.340 align:start position:0%
we love contributions from our community
 

00:13:22.340 --> 00:13:27.160 align:start position:0%
we love contributions from our community
members<00:13:25.690><c> we're</c><00:13:26.690><c> going</c><00:13:26.870><c> to</c><00:13:26.960><c> satisfy</c>

00:13:27.160 --> 00:13:27.170 align:start position:0%
members we're going to satisfy
 

00:13:27.170 --> 00:13:29.410 align:start position:0%
members we're going to satisfy
developers<00:13:28.010><c> needs</c><00:13:28.250><c> in</c><00:13:28.610><c> each</c><00:13:28.790><c> of</c><00:13:28.970><c> the</c><00:13:29.030><c> four</c><00:13:29.240><c> key</c>

00:13:29.410 --> 00:13:29.420 align:start position:0%
developers needs in each of the four key
 

00:13:29.420 --> 00:13:30.610 align:start position:0%
developers needs in each of the four key
sections<00:13:29.840><c> of</c><00:13:30.020><c> a</c><00:13:30.080><c> test</c>

00:13:30.610 --> 00:13:30.620 align:start position:0%
sections of a test
 

00:13:30.620 --> 00:13:36.150 align:start position:0%
sections of a test
remember<00:13:31.660><c> scaffolding</c><00:13:32.680><c> given</c><00:13:33.680><c> when</c><00:13:34.610><c> and</c><00:13:34.940><c> then</c>

00:13:36.150 --> 00:13:36.160 align:start position:0%
remember scaffolding given when and then
 

00:13:36.160 --> 00:13:38.020 align:start position:0%
remember scaffolding given when and then
scaffolding<00:13:37.160><c> encompasses</c><00:13:37.910><c> the</c>

00:13:38.020 --> 00:13:38.030 align:start position:0%
scaffolding encompasses the
 

00:13:38.030 --> 00:13:40.690 align:start position:0%
scaffolding encompasses the
configuration<00:13:38.810><c> and</c><00:13:39.020><c> control</c><00:13:39.350><c> api's</c><00:13:39.830><c> think</c>

00:13:40.690 --> 00:13:40.700 align:start position:0%
configuration and control api's think
 

00:13:40.700 --> 00:13:41.940 align:start position:0%
configuration and control api's think
getting<00:13:41.060><c> a</c><00:13:41.210><c> hold</c><00:13:41.450><c> of</c><00:13:41.540><c> that</c><00:13:41.720><c> application</c>

00:13:41.940 --> 00:13:41.950 align:start position:0%
getting a hold of that application
 

00:13:41.950 --> 00:13:46.480 align:start position:0%
getting a hold of that application
context<00:13:44.620><c> for</c><00:13:45.620><c> your</c><00:13:45.710><c> test</c><00:13:45.980><c> scaffolding</c>

00:13:46.480 --> 00:13:46.490 align:start position:0%
context for your test scaffolding
 

00:13:46.490 --> 00:13:48.520 align:start position:0%
context for your test scaffolding
Android<00:13:47.120><c> j-unit</c><00:13:47.540><c> foreigners</c><00:13:48.080><c> used</c><00:13:48.410><c> to</c>

00:13:48.520 --> 00:13:48.530 align:start position:0%
Android j-unit foreigners used to
 

00:13:48.530 --> 00:13:50.830 align:start position:0%
Android j-unit foreigners used to
execute<00:13:48.860><c> your</c><00:13:49.190><c> tests</c><00:13:49.610><c> you</c><00:13:50.420><c> can</c><00:13:50.570><c> use</c><00:13:50.720><c> the</c>

00:13:50.830 --> 00:13:50.840 align:start position:0%
execute your tests you can use the
 

00:13:50.840 --> 00:13:52.600 align:start position:0%
execute your tests you can use the
instrumentation<00:13:51.320><c> registry</c><00:13:51.950><c> to</c><00:13:52.100><c> get</c><00:13:52.220><c> a</c><00:13:52.250><c> handle</c>

00:13:52.600 --> 00:13:52.610 align:start position:0%
instrumentation registry to get a handle
 

00:13:52.610 --> 00:13:55.720 align:start position:0%
instrumentation registry to get a handle
to<00:13:52.730><c> that</c><00:13:52.760><c> application</c><00:13:52.970><c> context</c><00:13:54.400><c> well</c><00:13:55.400><c> today</c>

00:13:55.720 --> 00:13:55.730 align:start position:0%
to that application context well today
 

00:13:55.730 --> 00:13:57.700 align:start position:0%
to that application context well today
we're<00:13:56.150><c> excited</c><00:13:56.510><c> to</c><00:13:56.690><c> announce</c><00:13:56.900><c> for</c><00:13:57.410><c> the</c><00:13:57.440><c> very</c>

00:13:57.700 --> 00:13:57.710 align:start position:0%
we're excited to announce for the very
 

00:13:57.710 --> 00:14:00.070 align:start position:0%
we're excited to announce for the very
first<00:13:57.980><c> time</c><00:13:58.310><c> you</c><00:13:58.910><c> can</c><00:13:59.060><c> now</c><00:13:59.180><c> use</c><00:13:59.420><c> these</c><00:13:59.600><c> api's</c>

00:14:00.070 --> 00:14:00.080 align:start position:0%
first time you can now use these api's
 

00:14:00.080 --> 00:14:06.630 align:start position:0%
first time you can now use these api's
for<00:14:00.470><c> both</c><00:14:00.620><c> your</c><00:14:00.800><c> on</c><00:14:01.040><c> and</c><00:14:01.280><c> off</c><00:14:01.760><c> device</c><00:14:02.300><c> tests</c>

00:14:06.630 --> 00:14:06.640 align:start position:0%
 
 

00:14:06.640 --> 00:14:09.520 align:start position:0%
 
the<00:14:07.640><c> next</c><00:14:07.910><c> section</c><00:14:08.240><c> of</c><00:14:08.300><c> a</c><00:14:08.390><c> test</c><00:14:08.630><c> is</c><00:14:09.050><c> the</c><00:14:09.230><c> given</c>

00:14:09.520 --> 00:14:09.530 align:start position:0%
the next section of a test is the given
 

00:14:09.530 --> 00:14:11.440 align:start position:0%
the next section of a test is the given
section<00:14:09.800><c> and</c><00:14:10.220><c> here</c><00:14:10.850><c> we're</c><00:14:10.940><c> going</c><00:14:11.030><c> to</c><00:14:11.090><c> provide</c>

00:14:11.440 --> 00:14:11.450 align:start position:0%
section and here we're going to provide
 

00:14:11.450 --> 00:14:14.520 align:start position:0%
section and here we're going to provide
two<00:14:12.020><c> key</c><00:14:12.560><c> categories</c><00:14:13.070><c> of</c><00:14:13.370><c> api's</c><00:14:13.820><c> for</c><00:14:14.120><c> you</c>

00:14:14.520 --> 00:14:14.530 align:start position:0%
two key categories of api's for you
 

00:14:14.530 --> 00:14:17.800 align:start position:0%
two key categories of api's for you
firstly<00:14:15.530><c> the</c><00:14:16.310><c> under</c><00:14:16.550><c> Jamiat</c><00:14:17.000><c> rules</c><00:14:17.240><c> from</c><00:14:17.630><c> the</c>

00:14:17.800 --> 00:14:17.810 align:start position:0%
firstly the under Jamiat rules from the
 

00:14:17.810 --> 00:14:19.480 align:start position:0%
firstly the under Jamiat rules from the
Android<00:14:18.140><c> testing</c><00:14:18.410><c> support</c><00:14:18.710><c> library</c><00:14:19.190><c> will</c>

00:14:19.480 --> 00:14:19.490 align:start position:0%
Android testing support library will
 

00:14:19.490 --> 00:14:21.700 align:start position:0%
Android testing support library will
become<00:14:19.820><c> part</c><00:14:20.120><c> of</c><00:14:20.180><c> jetpack</c><00:14:20.600><c> and</c><00:14:20.900><c> will</c><00:14:21.470><c> soon</c>

00:14:21.700 --> 00:14:21.710 align:start position:0%
become part of jetpack and will soon
 

00:14:21.710 --> 00:14:23.680 align:start position:0%
become part of jetpack and will soon
adding<00:14:22.040><c> more</c><00:14:22.190><c> api's</c><00:14:22.670><c> to</c><00:14:23.000><c> help</c><00:14:23.210><c> drive</c><00:14:23.480><c> the</c>

00:14:23.680 --> 00:14:23.690 align:start position:0%
adding more api's to help drive the
 

00:14:23.690 --> 00:14:27.240 align:start position:0%
adding more api's to help drive the
component<00:14:24.140><c> life</c><00:14:24.320><c> cycles</c><00:14:24.770><c> for</c><00:14:24.950><c> you</c><00:14:25.130><c> in</c><00:14:25.310><c> tests</c>

00:14:27.240 --> 00:14:27.250 align:start position:0%
component life cycles for you in tests
 

00:14:27.250 --> 00:14:30.370 align:start position:0%
component life cycles for you in tests
as<00:14:28.250><c> you've</c><00:14:28.610><c> seen</c><00:14:28.760><c> previously</c><00:14:29.210><c> the</c><00:14:29.930><c> activity</c>

00:14:30.370 --> 00:14:30.380 align:start position:0%
as you've seen previously the activity
 

00:14:30.380 --> 00:14:32.050 align:start position:0%
as you've seen previously the activity
tests<00:14:30.650><c> for</c><00:14:30.830><c> all</c><00:14:30.890><c> is</c><00:14:31.100><c> used</c><00:14:31.460><c> to</c><00:14:31.610><c> start</c><00:14:31.850><c> up</c><00:14:31.940><c> your</c>

00:14:32.050 --> 00:14:32.060 align:start position:0%
tests for all is used to start up your
 

00:14:32.060 --> 00:14:33.640 align:start position:0%
tests for all is used to start up your
activity<00:14:32.510><c> and</c><00:14:32.750><c> make</c><00:14:32.870><c> it</c><00:14:32.990><c> available</c><00:14:33.080><c> to</c><00:14:33.590><c> your</c>

00:14:33.640 --> 00:14:33.650 align:start position:0%
activity and make it available to your
 

00:14:33.650 --> 00:14:35.710 align:start position:0%
activity and make it available to your
tests<00:14:33.950><c> in</c><00:14:34.100><c> the</c><00:14:34.160><c> resume</c><00:14:34.400><c> state</c><00:14:34.760><c> you</c><00:14:35.690><c> probably</c>

00:14:35.710 --> 00:14:35.720 align:start position:0%
tests in the resume state you probably
 

00:14:35.720 --> 00:14:38.590 align:start position:0%
tests in the resume state you probably
use<00:14:36.440><c> this</c><00:14:36.620><c> API</c><00:14:36.830><c> running</c><00:14:37.760><c> on</c><00:14:37.850><c> a</c><00:14:37.880><c> device</c><00:14:38.210><c> many</c>

00:14:38.590 --> 00:14:38.600 align:start position:0%
use this API running on a device many
 

00:14:38.600 --> 00:14:41.620 align:start position:0%
use this API running on a device many
times<00:14:38.900><c> before</c><00:14:39.110><c> well</c><00:14:40.100><c> today</c><00:14:40.460><c> this</c><00:14:41.030><c> API</c><00:14:41.510><c> too</c>

00:14:41.620 --> 00:14:41.630 align:start position:0%
times before well today this API too
 

00:14:41.630 --> 00:14:43.810 align:start position:0%
times before well today this API too
will<00:14:42.200><c> be</c><00:14:42.320><c> available</c><00:14:42.740><c> for</c><00:14:42.890><c> tests</c><00:14:43.250><c> that</c><00:14:43.430><c> run</c><00:14:43.610><c> off</c>

00:14:43.810 --> 00:14:43.820 align:start position:0%
will be available for tests that run off
 

00:14:43.820 --> 00:14:50.170 align:start position:0%
will be available for tests that run off
device<00:14:44.300><c> as</c><00:14:44.540><c> well</c><00:14:48.190><c> secondly</c><00:14:49.190><c> we'll</c><00:14:50.030><c> be</c>

00:14:50.170 --> 00:14:50.180 align:start position:0%
device as well secondly we'll be
 

00:14:50.180 --> 00:14:52.090 align:start position:0%
device as well secondly we'll be
providing<00:14:50.330><c> you</c><00:14:50.750><c> with</c><00:14:50.780><c> a</c><00:14:50.930><c> set</c><00:14:51.170><c> of</c><00:14:51.200><c> Android</c><00:14:51.680><c> test</c>

00:14:52.090 --> 00:14:52.100 align:start position:0%
providing you with a set of Android test
 

00:14:52.100 --> 00:14:54.550 align:start position:0%
providing you with a set of Android test
data<00:14:52.460><c> builders</c><00:14:53.080><c> these</c><00:14:54.080><c> will</c><00:14:54.230><c> help</c><00:14:54.440><c> you</c>

00:14:54.550 --> 00:14:54.560 align:start position:0%
data builders these will help you
 

00:14:54.560 --> 00:14:56.560 align:start position:0%
data builders these will help you
construct<00:14:54.740><c> Android</c><00:14:55.340><c> objects</c><00:14:55.760><c> that</c><00:14:56.180><c> your</c><00:14:56.300><c> code</c>

00:14:56.560 --> 00:14:56.570 align:start position:0%
construct Android objects that your code
 

00:14:56.570 --> 00:15:00.130 align:start position:0%
construct Android objects that your code
on<00:14:56.780><c> the</c><00:14:56.960><c> test</c><00:14:57.230><c> will</c><00:14:57.410><c> interact</c><00:14:57.710><c> with</c>

00:15:00.130 --> 00:15:00.140 align:start position:0%
 
 

00:15:00.140 --> 00:15:02.210 align:start position:0%
 
many<00:15:01.140><c> of</c><00:15:01.260><c> the</c><00:15:01.350><c> android</c><00:15:01.680><c> framework</c><00:15:01.710><c> classes</c>

00:15:02.210 --> 00:15:02.220 align:start position:0%
many of the android framework classes
 

00:15:02.220 --> 00:15:04.070 align:start position:0%
many of the android framework classes
that<00:15:02.670><c> you</c><00:15:02.760><c> need</c><00:15:02.940><c> to</c><00:15:03.150><c> have</c><00:15:03.300><c> for</c><00:15:03.630><c> setting</c><00:15:03.930><c> up</c>

00:15:04.070 --> 00:15:04.080 align:start position:0%
that you need to have for setting up
 

00:15:04.080 --> 00:15:06.880 align:start position:0%
that you need to have for setting up
your<00:15:04.350><c> test</c><00:15:05.100><c> date</c><00:15:05.340><c> are</c><00:15:05.550><c> difficult</c><00:15:05.970><c> to</c><00:15:06.060><c> create</c>

00:15:06.880 --> 00:15:06.890 align:start position:0%
your test date are difficult to create
 

00:15:06.890 --> 00:15:09.530 align:start position:0%
your test date are difficult to create
often<00:15:07.890><c> there's</c><00:15:08.130><c> no</c><00:15:08.250><c> public</c><00:15:08.460><c> constructor</c><00:15:09.270><c> so</c>

00:15:09.530 --> 00:15:09.540 align:start position:0%
often there's no public constructor so
 

00:15:09.540 --> 00:15:11.120 align:start position:0%
often there's no public constructor so
they<00:15:09.660><c> can't</c><00:15:09.840><c> be</c><00:15:09.900><c> instantiated</c><00:15:10.200><c> for</c><00:15:10.770><c> tests</c>

00:15:11.120 --> 00:15:11.130 align:start position:0%
they can't be instantiated for tests
 

00:15:11.130 --> 00:15:13.490 align:start position:0%
they can't be instantiated for tests
perhaps<00:15:12.000><c> their</c><00:15:12.240><c> final</c><00:15:12.660><c> so</c><00:15:12.930><c> mocking</c><00:15:13.290><c> is</c><00:15:13.380><c> out</c><00:15:13.470><c> of</c>

00:15:13.490 --> 00:15:13.500 align:start position:0%
perhaps their final so mocking is out of
 

00:15:13.500 --> 00:15:15.560 align:start position:0%
perhaps their final so mocking is out of
the<00:15:13.650><c> question</c><00:15:13.740><c> either</c><00:15:14.130><c> and</c><00:15:14.490><c> sometimes</c><00:15:15.450><c> they</c>

00:15:15.560 --> 00:15:15.570 align:start position:0%
the question either and sometimes they
 

00:15:15.570 --> 00:15:17.480 align:start position:0%
the question either and sometimes they
just<00:15:15.720><c> plain</c><00:15:15.960><c> clumsy</c><00:15:16.530><c> to</c><00:15:16.740><c> instantiate</c><00:15:17.010><c> with</c>

00:15:17.480 --> 00:15:17.490 align:start position:0%
just plain clumsy to instantiate with
 

00:15:17.490 --> 00:15:20.390 align:start position:0%
just plain clumsy to instantiate with
any<00:15:17.700><c> degree</c><00:15:17.940><c> of</c><00:15:18.090><c> brevity</c><00:15:18.570><c> at</c><00:15:18.660><c> all</c><00:15:19.280><c> so</c><00:15:20.280><c> we're</c>

00:15:20.390 --> 00:15:20.400 align:start position:0%
any degree of brevity at all so we're
 

00:15:20.400 --> 00:15:22.490 align:start position:0%
any degree of brevity at all so we're
including<00:15:20.640><c> Android</c><00:15:21.300><c> test</c><00:15:21.540><c> builders</c><00:15:22.020><c> within</c>

00:15:22.490 --> 00:15:22.500 align:start position:0%
including Android test builders within
 

00:15:22.500 --> 00:15:24.740 align:start position:0%
including Android test builders within
jetpack<00:15:22.920><c> to</c><00:15:23.520><c> give</c><00:15:23.640><c> you</c><00:15:23.730><c> a</c><00:15:23.760><c> concise</c><00:15:24.120><c> way</c><00:15:24.330><c> to</c><00:15:24.390><c> set</c>

00:15:24.740 --> 00:15:24.750 align:start position:0%
jetpack to give you a concise way to set
 

00:15:24.750 --> 00:15:27.500 align:start position:0%
jetpack to give you a concise way to set
up<00:15:24.870><c> your</c><00:15:25.080><c> test</c><00:15:25.350><c> environment</c><00:15:26.330><c> they</c><00:15:27.330><c> produce</c>

00:15:27.500 --> 00:15:27.510 align:start position:0%
up your test environment they produce
 

00:15:27.510 --> 00:15:29.720 align:start position:0%
up your test environment they produce
readable<00:15:28.050><c> code</c><00:15:28.290><c> they're</c><00:15:29.160><c> fluent</c><00:15:29.400><c> way</c><00:15:29.670><c> to</c>

00:15:29.720 --> 00:15:29.730 align:start position:0%
readable code they're fluent way to
 

00:15:29.730 --> 00:15:31.160 align:start position:0%
readable code they're fluent way to
create<00:15:30.060><c> the</c><00:15:30.150><c> Android</c><00:15:30.270><c> components</c><00:15:30.990><c> that</c><00:15:31.080><c> you</c>

00:15:31.160 --> 00:15:31.170 align:start position:0%
create the Android components that you
 

00:15:31.170 --> 00:15:33.620 align:start position:0%
create the Android components that you
need<00:15:31.350><c> to</c><00:15:31.500><c> interact</c><00:15:31.770><c> with</c><00:15:32.130><c> and</c><00:15:32.520><c> of</c><00:15:33.390><c> course</c>

00:15:33.620 --> 00:15:33.630 align:start position:0%
need to interact with and of course
 

00:15:33.630 --> 00:15:35.960 align:start position:0%
need to interact with and of course
they're<00:15:33.810><c> portable</c><00:15:34.520><c> Android</c><00:15:35.520><c> test</c><00:15:35.760><c> data</c>

00:15:35.960 --> 00:15:35.970 align:start position:0%
they're portable Android test data
 

00:15:35.970 --> 00:15:38.120 align:start position:0%
they're portable Android test data
builders<00:15:36.390><c> work</c><00:15:36.630><c> for</c><00:15:36.900><c> both</c><00:15:37.020><c> your</c><00:15:37.200><c> on</c><00:15:37.440><c> and</c><00:15:37.680><c> off</c>

00:15:38.120 --> 00:15:38.130 align:start position:0%
builders work for both your on and off
 

00:15:38.130 --> 00:15:44.180 align:start position:0%
builders work for both your on and off
device<00:15:38.670><c> use</c><00:15:39.060><c> cases</c><00:15:42.380><c> the</c><00:15:43.380><c> third</c><00:15:43.620><c> section</c><00:15:43.890><c> of</c><00:15:44.100><c> a</c>

00:15:44.180 --> 00:15:44.190 align:start position:0%
device use cases the third section of a
 

00:15:44.190 --> 00:15:46.280 align:start position:0%
device use cases the third section of a
well-structured<00:15:44.670><c> test</c><00:15:45.090><c> is</c><00:15:45.300><c> the</c><00:15:45.540><c> when</c><00:15:45.720><c> section</c>

00:15:46.280 --> 00:15:46.290 align:start position:0%
well-structured test is the when section
 

00:15:46.290 --> 00:15:49.340 align:start position:0%
well-structured test is the when section
exercising<00:15:47.250><c> the</c><00:15:47.340><c> code</c><00:15:47.550><c> under</c><00:15:47.700><c> tests</c><00:15:48.350><c> usually</c>

00:15:49.340 --> 00:15:49.350 align:start position:0%
exercising the code under tests usually
 

00:15:49.350 --> 00:15:51.290 align:start position:0%
exercising the code under tests usually
this<00:15:49.800><c> is</c><00:15:49.920><c> just</c><00:15:50.160><c> simply</c><00:15:50.370><c> a</c><00:15:50.460><c> case</c><00:15:50.670><c> of</c><00:15:50.730><c> calling</c>

00:15:51.290 --> 00:15:51.300 align:start position:0%
this is just simply a case of calling
 

00:15:51.300 --> 00:15:53.390 align:start position:0%
this is just simply a case of calling
your<00:15:51.420><c> own</c><00:15:51.570><c> code</c><00:15:51.840><c> directly</c><00:15:52.410><c> but</c><00:15:53.130><c> when</c><00:15:53.280><c> you're</c>

00:15:53.390 --> 00:15:53.400 align:start position:0%
your own code directly but when you're
 

00:15:53.400 --> 00:15:55.670 align:start position:0%
your own code directly but when you're
writing<00:15:53.550><c> a</c><00:15:53.700><c> UI</c><00:15:53.910><c> test</c><00:15:54.420><c> it's</c><00:15:54.900><c> likely</c><00:15:55.350><c> that</c><00:15:55.380><c> you'd</c>

00:15:55.670 --> 00:15:55.680 align:start position:0%
writing a UI test it's likely that you'd
 

00:15:55.680 --> 00:15:57.650 align:start position:0%
writing a UI test it's likely that you'd
write<00:15:55.920><c> for</c><00:15:56.160><c> the</c><00:15:56.280><c> reach</c><00:15:57.060><c> for</c><00:15:57.300><c> the</c><00:15:57.360><c> espresso</c>

00:15:57.650 --> 00:15:57.660 align:start position:0%
write for the reach for the espresso
 

00:15:57.660 --> 00:16:01.550 align:start position:0%
write for the reach for the espresso
view<00:15:58.260><c> match</c><00:15:58.440><c> your</c><00:15:58.650><c> api's</c><00:15:59.810><c> today</c><00:16:00.810><c> we're</c><00:16:01.260><c> happy</c>

00:16:01.550 --> 00:16:01.560 align:start position:0%
view match your api's today we're happy
 

00:16:01.560 --> 00:16:03.890 align:start position:0%
view match your api's today we're happy
to<00:16:01.710><c> announce</c><00:16:01.740><c> that</c><00:16:02.310><c> espresso</c><00:16:02.760><c> 2</c><00:16:03.240><c> is</c><00:16:03.510><c> joining</c>

00:16:03.890 --> 00:16:03.900 align:start position:0%
to announce that espresso 2 is joining
 

00:16:03.900 --> 00:16:09.530 align:start position:0%
to announce that espresso 2 is joining
Android<00:16:04.620><c> test</c><00:16:05.070><c> jetpack</c><00:16:08.210><c> espresso</c><00:16:09.210><c> view</c><00:16:09.390><c> API</c>

00:16:09.530 --> 00:16:09.540 align:start position:0%
Android test jetpack espresso view API
 

00:16:09.540 --> 00:16:11.329 align:start position:0%
Android test jetpack espresso view API
is<00:16:09.839><c> a</c><00:16:10.080><c> fluent</c><00:16:10.470><c> and</c><00:16:10.650><c> they</c><00:16:10.740><c> read</c><00:16:10.950><c> beautifully</c>

00:16:11.329 --> 00:16:11.339 align:start position:0%
is a fluent and they read beautifully
 

00:16:11.339 --> 00:16:13.579 align:start position:0%
is a fluent and they read beautifully
you've<00:16:12.240><c> used</c><00:16:12.510><c> them</c><00:16:12.690><c> for</c><00:16:12.900><c> you're</c><00:16:13.200><c> off</c><00:16:13.320><c> on</c>

00:16:13.579 --> 00:16:13.589 align:start position:0%
you've used them for you're off on
 

00:16:13.589 --> 00:16:16.370 align:start position:0%
you've used them for you're off on
device<00:16:14.010><c> tests</c><00:16:14.580><c> for</c><00:16:14.790><c> a</c><00:16:14.820><c> while</c><00:16:15.000><c> now</c><00:16:15.270><c> and</c><00:16:15.570><c> today</c>

00:16:16.370 --> 00:16:16.380 align:start position:0%
device tests for a while now and today
 

00:16:16.380 --> 00:16:18.800 align:start position:0%
device tests for a while now and today
we're<00:16:17.100><c> providing</c><00:16:17.490><c> preliminary</c><00:16:18.300><c> support</c><00:16:18.660><c> for</c>

00:16:18.800 --> 00:16:18.810 align:start position:0%
we're providing preliminary support for
 

00:16:18.810 --> 00:16:20.630 align:start position:0%
we're providing preliminary support for
these<00:16:18.900><c> tests</c><00:16:19.380><c> in</c><00:16:19.530><c> the</c><00:16:19.680><c> off</c><00:16:19.800><c> device</c><00:16:20.100><c> use</c><00:16:20.370><c> case</c>

00:16:20.630 --> 00:16:20.640 align:start position:0%
these tests in the off device use case
 

00:16:20.640 --> 00:16:26.360 align:start position:0%
these tests in the off device use case
also<00:16:23.930><c> the</c><00:16:24.930><c> final</c><00:16:25.320><c> part</c><00:16:25.560><c> of</c><00:16:25.710><c> a</c><00:16:25.770><c> well</c><00:16:25.950><c> structured</c>

00:16:26.360 --> 00:16:26.370 align:start position:0%
also the final part of a well structured
 

00:16:26.370 --> 00:16:29.420 align:start position:0%
also the final part of a well structured
test<00:16:26.610><c> is</c><00:16:26.910><c> a</c><00:16:27.089><c> Ven</c><00:16:27.390><c> section</c><00:16:28.040><c> this</c><00:16:29.040><c> is</c><00:16:29.100><c> where</c><00:16:29.250><c> you</c>

00:16:29.420 --> 00:16:29.430 align:start position:0%
test is a Ven section this is where you
 

00:16:29.430 --> 00:16:30.800 align:start position:0%
test is a Ven section this is where you
make<00:16:29.580><c> assertions</c><00:16:29.880><c> on</c><00:16:30.270><c> the</c><00:16:30.360><c> state</c><00:16:30.570><c> of</c><00:16:30.720><c> the</c>

00:16:30.800 --> 00:16:30.810 align:start position:0%
make assertions on the state of the
 

00:16:30.810 --> 00:16:34.460 align:start position:0%
make assertions on the state of the
system<00:16:31.020><c> in</c><00:16:31.410><c> response</c><00:16:31.830><c> to</c><00:16:32.220><c> an</c><00:16:32.310><c> action</c><00:16:33.470><c> so</c>

00:16:34.460 --> 00:16:34.470 align:start position:0%
system in response to an action so
 

00:16:34.470 --> 00:16:36.800 align:start position:0%
system in response to an action so
firstly<00:16:34.830><c> espresso</c><00:16:35.430><c> intense</c><00:16:35.850><c> two</c><00:16:36.120><c> is</c><00:16:36.390><c> going</c><00:16:36.720><c> to</c>

00:16:36.800 --> 00:16:36.810 align:start position:0%
firstly espresso intense two is going to
 

00:16:36.810 --> 00:16:40.040 align:start position:0%
firstly espresso intense two is going to
be<00:16:36.870><c> joining</c><00:16:37.110><c> jetpack</c><00:16:37.950><c> as</c><00:16:38.750><c> Android</c><00:16:39.750><c> test</c>

00:16:40.040 --> 00:16:40.050 align:start position:0%
be joining jetpack as Android test
 

00:16:40.050 --> 00:16:45.290 align:start position:0%
be joining jetpack as Android test
intense<00:16:42.980><c> those</c><00:16:43.980><c> intense</c><00:16:44.400><c> ap</c><00:16:44.790><c> is</c><00:16:44.940><c> that</c><00:16:45.180><c> you've</c>

00:16:45.290 --> 00:16:45.300 align:start position:0%
intense those intense ap is that you've
 

00:16:45.300 --> 00:16:46.910 align:start position:0%
intense those intense ap is that you've
been<00:16:45.480><c> using</c><00:16:45.660><c> for</c><00:16:45.930><c> your</c><00:16:46.020><c> on</c><00:16:46.170><c> device</c><00:16:46.440><c> testing</c>

00:16:46.910 --> 00:16:46.920 align:start position:0%
been using for your on device testing
 

00:16:46.920 --> 00:16:50.300 align:start position:0%
been using for your on device testing
great<00:16:47.670><c> news</c><00:16:47.940><c> today</c><00:16:48.690><c> they</c><00:16:49.080><c> too</c><00:16:49.140><c> will</c><00:16:49.830><c> run</c><00:16:50.100><c> in</c>

00:16:50.300 --> 00:16:50.310 align:start position:0%
great news today they too will run in
 

00:16:50.310 --> 00:16:56.600 align:start position:0%
great news today they too will run in
your<00:16:50.460><c> off</c><00:16:50.640><c> device</c><00:16:51.000><c> tests</c><00:16:52.790><c> and</c><00:16:54.800><c> finally</c><00:16:55.800><c> we're</c>

00:16:56.600 --> 00:16:56.610 align:start position:0%
your off device tests and finally we're
 

00:16:56.610 --> 00:16:59.000 align:start position:0%
your off device tests and finally we're
also<00:16:56.790><c> releasing</c><00:16:57.089><c> an</c><00:16:57.450><c> assertions</c><00:16:57.960><c> library</c><00:16:58.380><c> to</c>

00:16:59.000 --> 00:16:59.010 align:start position:0%
also releasing an assertions library to
 

00:16:59.010 --> 00:17:00.560 align:start position:0%
also releasing an assertions library to
help<00:16:59.250><c> reduce</c><00:16:59.430><c> the</c><00:16:59.730><c> boilerplate</c><00:17:00.060><c> in</c><00:17:00.390><c> your</c>

00:17:00.560 --> 00:17:00.570 align:start position:0%
help reduce the boilerplate in your
 

00:17:00.570 --> 00:17:03.380 align:start position:0%
help reduce the boilerplate in your
tests

00:17:03.380 --> 00:17:03.390 align:start position:0%
 
 

00:17:03.390 --> 00:17:05.569 align:start position:0%
 
using<00:17:04.140><c> traditional</c><00:17:04.260><c> Jay</c><00:17:04.829><c> Manette</c><00:17:05.069><c> assertions</c>

00:17:05.569 --> 00:17:05.579 align:start position:0%
using traditional Jay Manette assertions
 

00:17:05.579 --> 00:17:06.829 align:start position:0%
using traditional Jay Manette assertions
can<00:17:05.699><c> lead</c><00:17:05.970><c> to</c><00:17:06.089><c> tests</c><00:17:06.360><c> that</c><00:17:06.569><c> are</c><00:17:06.720><c> not</c>

00:17:06.829 --> 00:17:06.839 align:start position:0%
can lead to tests that are not
 

00:17:06.839 --> 00:17:09.289 align:start position:0%
can lead to tests that are not
immediately<00:17:07.230><c> readable</c><00:17:07.819><c> see</c><00:17:08.819><c> here</c><00:17:09.059><c> how</c><00:17:09.270><c> easy</c>

00:17:09.289 --> 00:17:09.299 align:start position:0%
immediately readable see here how easy
 

00:17:09.299 --> 00:17:11.329 align:start position:0%
immediately readable see here how easy
it<00:17:09.660><c> is</c><00:17:09.750><c> to</c><00:17:10.020><c> get</c><00:17:10.140><c> the</c><00:17:10.290><c> actual</c><00:17:10.650><c> in</c><00:17:10.770><c> the</c><00:17:10.829><c> expected</c>

00:17:11.329 --> 00:17:11.339 align:start position:0%
it is to get the actual in the expected
 

00:17:11.339 --> 00:17:15.140 align:start position:0%
it is to get the actual in the expected
arguments<00:17:11.850><c> mixed</c><00:17:12.120><c> up</c><00:17:12.270><c> an</c><00:17:13.400><c> Android</c><00:17:14.400><c> uses</c><00:17:14.910><c> a</c><00:17:14.939><c> lot</c>

00:17:15.140 --> 00:17:15.150 align:start position:0%
arguments mixed up an Android uses a lot
 

00:17:15.150 --> 00:17:18.710 align:start position:0%
arguments mixed up an Android uses a lot
of<00:17:15.179><c> integer</c><00:17:15.660><c> constants</c><00:17:16.199><c> for</c><00:17:16.470><c> efficiency</c><00:17:17.720><c> but</c>

00:17:18.710 --> 00:17:18.720 align:start position:0%
of integer constants for efficiency but
 

00:17:18.720 --> 00:17:20.329 align:start position:0%
of integer constants for efficiency but
this<00:17:18.780><c> makes</c><00:17:19.079><c> it</c><00:17:19.230><c> difficult</c><00:17:19.410><c> to</c><00:17:19.709><c> comprehend</c>

00:17:20.329 --> 00:17:20.339 align:start position:0%
this makes it difficult to comprehend
 

00:17:20.339 --> 00:17:25.039 align:start position:0%
this makes it difficult to comprehend
the<00:17:20.640><c> error</c><00:17:21.059><c> messages</c><00:17:21.600><c> in</c><00:17:21.780><c> tests</c><00:17:23.059><c> at</c><00:17:24.059><c> Google</c><00:17:24.630><c> we</c>

00:17:25.039 --> 00:17:25.049 align:start position:0%
the error messages in tests at Google we
 

00:17:25.049 --> 00:17:27.439 align:start position:0%
the error messages in tests at Google we
love<00:17:25.230><c> to</c><00:17:25.350><c> use</c><00:17:25.380><c> truth</c><00:17:25.890><c> it's</c><00:17:26.760><c> our</c><00:17:26.939><c> own</c><00:17:27.120><c> open</c>

00:17:27.439 --> 00:17:27.449 align:start position:0%
love to use truth it's our own open
 

00:17:27.449 --> 00:17:31.150 align:start position:0%
love to use truth it's our own open
source<00:17:27.830><c> fluent</c><00:17:28.830><c> testing</c><00:17:29.460><c> assertions</c><00:17:30.059><c> library</c>

00:17:31.150 --> 00:17:31.160 align:start position:0%
source fluent testing assertions library
 

00:17:31.160 --> 00:17:33.530 align:start position:0%
source fluent testing assertions library
using<00:17:32.160><c> a</c><00:17:32.220><c> fluent</c><00:17:32.580><c> assertions</c><00:17:33.090><c> library</c><00:17:33.420><c> is</c><00:17:33.480><c> a</c>

00:17:33.530 --> 00:17:33.540 align:start position:0%
using a fluent assertions library is a
 

00:17:33.540 --> 00:17:35.180 align:start position:0%
using a fluent assertions library is a
great<00:17:33.780><c> step</c><00:17:34.110><c> to</c><00:17:34.290><c> producing</c><00:17:34.710><c> more</c><00:17:34.830><c> readable</c>

00:17:35.180 --> 00:17:35.190 align:start position:0%
great step to producing more readable
 

00:17:35.190 --> 00:17:37.789 align:start position:0%
great step to producing more readable
code<00:17:35.460><c> and</c><00:17:35.870><c> writing</c><00:17:36.870><c> the</c><00:17:37.080><c> tests</c><00:17:37.320><c> become</c><00:17:37.620><c> much</c>

00:17:37.789 --> 00:17:37.799 align:start position:0%
code and writing the tests become much
 

00:17:37.799 --> 00:17:39.680 align:start position:0%
code and writing the tests become much
more<00:17:37.950><c> easy</c><00:17:38.160><c> too</c><00:17:38.460><c> because</c><00:17:39.179><c> you</c><00:17:39.299><c> can</c><00:17:39.450><c> lean</c><00:17:39.660><c> on</c>

00:17:39.680 --> 00:17:39.690 align:start position:0%
more easy too because you can lean on
 

00:17:39.690 --> 00:17:42.200 align:start position:0%
more easy too because you can lean on
the<00:17:40.110><c> built-in</c><00:17:40.620><c> support</c><00:17:41.190><c> of</c><00:17:41.309><c> your</c><00:17:41.429><c> ideas</c><00:17:41.910><c> Auto</c>

00:17:42.200 --> 00:17:42.210 align:start position:0%
the built-in support of your ideas Auto
 

00:17:42.210 --> 00:17:46.430 align:start position:0%
the built-in support of your ideas Auto
completion<00:17:42.809><c> feature</c><00:17:44.780><c> so</c><00:17:45.780><c> to</c><00:17:45.840><c> help</c><00:17:46.140><c> you</c><00:17:46.260><c> write</c>

00:17:46.430 --> 00:17:46.440 align:start position:0%
completion feature so to help you write
 

00:17:46.440 --> 00:17:49.640 align:start position:0%
completion feature so to help you write
concise<00:17:46.919><c> tests</c><00:17:47.730><c> against</c><00:17:48.059><c> Android</c><00:17:48.450><c> code</c><00:17:48.720><c> we'll</c>

00:17:49.640 --> 00:17:49.650 align:start position:0%
concise tests against Android code we'll
 

00:17:49.650 --> 00:17:51.260 align:start position:0%
concise tests against Android code we'll
be<00:17:49.740><c> releasing</c><00:17:49.950><c> a</c><00:17:50.130><c> set</c><00:17:50.309><c> of</c><00:17:50.400><c> truth</c><00:17:50.640><c> extensions</c>

00:17:51.260 --> 00:17:51.270 align:start position:0%
be releasing a set of truth extensions
 

00:17:51.270 --> 00:17:52.760 align:start position:0%
be releasing a set of truth extensions
for<00:17:51.419><c> Android</c><00:17:51.750><c> which</c><00:17:52.169><c> reduces</c><00:17:52.650><c> the</c>

00:17:52.760 --> 00:17:52.770 align:start position:0%
for Android which reduces the
 

00:17:52.770 --> 00:17:55.549 align:start position:0%
for Android which reduces the
boilerplate<00:17:53.270><c> read</c><00:17:54.270><c> beautifully</c><00:17:54.690><c> and</c><00:17:55.110><c> gives</c>

00:17:55.549 --> 00:17:55.559 align:start position:0%
boilerplate read beautifully and gives
 

00:17:55.559 --> 00:17:58.270 align:start position:0%
boilerplate read beautifully and gives
immediately<00:17:56.160><c> meaningful</c><00:17:56.730><c> error</c><00:17:56.940><c> messages</c><00:17:57.540><c> of</c>

00:17:58.270 --> 00:17:58.280 align:start position:0%
immediately meaningful error messages of
 

00:17:58.280 --> 00:18:01.280 align:start position:0%
immediately meaningful error messages of
course<00:17:59.280><c> these</c><00:18:00.120><c> assertions</c><00:18:00.540><c> will</c><00:18:00.900><c> work</c><00:18:01.049><c> across</c>

00:18:01.280 --> 00:18:01.290 align:start position:0%
course these assertions will work across
 

00:18:01.290 --> 00:18:04.039 align:start position:0%
course these assertions will work across
all<00:18:01.590><c> environments</c><00:18:01.950><c> both</c><00:18:02.820><c> neon</c><00:18:03.299><c> and</c><00:18:03.600><c> off</c>

00:18:04.039 --> 00:18:04.049 align:start position:0%
all environments both neon and off
 

00:18:04.049 --> 00:18:11.630 align:start position:0%
all environments both neon and off
device<00:18:04.440><c> tests</c><00:18:08.570><c> so</c><00:18:09.570><c> with</c><00:18:10.470><c> jetpack</c><00:18:10.950><c> Android</c>

00:18:11.630 --> 00:18:11.640 align:start position:0%
device tests so with jetpack Android
 

00:18:11.640 --> 00:18:13.820 align:start position:0%
device tests so with jetpack Android
tests<00:18:11.970><c> we'll</c><00:18:12.870><c> be</c><00:18:12.960><c> bringing</c><00:18:13.169><c> you</c><00:18:13.350><c> the</c><00:18:13.470><c> tools</c>

00:18:13.820 --> 00:18:13.830 align:start position:0%
tests we'll be bringing you the tools
 

00:18:13.830 --> 00:18:15.260 align:start position:0%
tests we'll be bringing you the tools
that<00:18:13.919><c> you</c><00:18:14.130><c> need</c><00:18:14.160><c> so</c><00:18:14.910><c> that</c><00:18:14.940><c> you</c><00:18:15.120><c> can</c>

00:18:15.260 --> 00:18:15.270 align:start position:0%
that you need so that you can
 

00:18:15.270 --> 00:18:16.909 align:start position:0%
that you need so that you can
concentrate<00:18:15.540><c> on</c><00:18:16.049><c> writing</c><00:18:16.260><c> beautifully</c>

00:18:16.909 --> 00:18:16.919 align:start position:0%
concentrate on writing beautifully
 

00:18:16.919 --> 00:18:20.030 align:start position:0%
concentrate on writing beautifully
concise<00:18:17.340><c> easy</c><00:18:18.030><c> to</c><00:18:18.390><c> read</c><00:18:18.600><c> tests</c><00:18:19.110><c> without</c><00:18:19.620><c> first</c>

00:18:20.030 --> 00:18:20.040 align:start position:0%
concise easy to read tests without first
 

00:18:20.040 --> 00:18:22.310 align:start position:0%
concise easy to read tests without first
worrying<00:18:20.490><c> about</c><00:18:20.669><c> libraries</c><00:18:21.450><c> or</c><00:18:21.690><c> tools</c><00:18:22.080><c> or</c>

00:18:22.310 --> 00:18:22.320 align:start position:0%
worrying about libraries or tools or
 

00:18:22.320 --> 00:18:25.220 align:start position:0%
worrying about libraries or tools or
environments<00:18:23.040><c> a</c><00:18:23.540><c> single</c><00:18:24.540><c> set</c><00:18:24.750><c> of</c><00:18:24.780><c> canonical</c>

00:18:25.220 --> 00:18:25.230 align:start position:0%
environments a single set of canonical
 

00:18:25.230 --> 00:18:28.340 align:start position:0%
environments a single set of canonical
api's<00:18:25.919><c> for</c><00:18:26.250><c> common</c><00:18:26.610><c> tasks</c><00:18:27.090><c> that</c><00:18:28.080><c> will</c><00:18:28.200><c> reduce</c>

00:18:28.340 --> 00:18:28.350 align:start position:0%
api's for common tasks that will reduce
 

00:18:28.350 --> 00:18:30.620 align:start position:0%
api's for common tasks that will reduce
the<00:18:28.590><c> boilerplate</c><00:18:29.040><c> leaving</c><00:18:29.910><c> your</c><00:18:30.030><c> test</c><00:18:30.270><c> clear</c>

00:18:30.620 --> 00:18:30.630 align:start position:0%
the boilerplate leaving your test clear
 

00:18:30.630 --> 00:18:33.049 align:start position:0%
the boilerplate leaving your test clear
and<00:18:31.020><c> readable</c><00:18:31.200><c> and</c><00:18:31.799><c> a</c><00:18:32.429><c> very</c><00:18:32.580><c> environmentally</c>

00:18:33.049 --> 00:18:33.059 align:start position:0%
and readable and a very environmentally
 

00:18:33.059 --> 00:18:35.299 align:start position:0%
and readable and a very environmentally
agnostic<00:18:33.870><c> allowing</c><00:18:34.650><c> you</c><00:18:34.740><c> to</c><00:18:34.860><c> run</c><00:18:34.980><c> the</c><00:18:35.100><c> test</c>

00:18:35.299 --> 00:18:35.309 align:start position:0%
agnostic allowing you to run the test
 

00:18:35.309 --> 00:18:37.159 align:start position:0%
agnostic allowing you to run the test
either<00:18:35.490><c> on</c><00:18:35.790><c> device</c><00:18:36.150><c> on</c><00:18:36.450><c> your</c><00:18:36.990><c> local</c>

00:18:37.159 --> 00:18:37.169 align:start position:0%
either on device on your local
 

00:18:37.169 --> 00:18:39.650 align:start position:0%
either on device on your local
workstation<00:18:37.320><c> or</c><00:18:38.100><c> perhaps</c><00:18:38.549><c> in</c><00:18:39.000><c> a</c><00:18:39.090><c> cloud</c><00:18:39.299><c> test</c>

00:18:39.650 --> 00:18:39.660 align:start position:0%
workstation or perhaps in a cloud test
 

00:18:39.660 --> 00:18:43.010 align:start position:0%
workstation or perhaps in a cloud test
lab<00:18:39.750><c> and</c><00:18:40.850><c> now</c><00:18:41.850><c> that</c><00:18:42.390><c> I've</c><00:18:42.480><c> shown</c><00:18:42.720><c> you</c><00:18:42.809><c> how</c><00:18:42.960><c> to</c>

00:18:43.010 --> 00:18:43.020 align:start position:0%
lab and now that I've shown you how to
 

00:18:43.020 --> 00:18:45.500 align:start position:0%
lab and now that I've shown you how to
use<00:18:43.410><c> this</c><00:18:43.590><c> unified</c><00:18:44.100><c> set</c><00:18:44.340><c> of</c><00:18:44.429><c> api's</c><00:18:44.880><c> that</c>

00:18:45.500 --> 00:18:45.510 align:start position:0%
use this unified set of api's that
 

00:18:45.510 --> 00:18:47.419 align:start position:0%
use this unified set of api's that
decouple<00:18:45.960><c> the</c><00:18:46.230><c> act</c><00:18:46.380><c> of</c><00:18:46.590><c> actually</c><00:18:46.740><c> writing</c><00:18:47.130><c> a</c>

00:18:47.419 --> 00:18:47.429 align:start position:0%
decouple the act of actually writing a
 

00:18:47.429 --> 00:18:49.760 align:start position:0%
decouple the act of actually writing a
test<00:18:47.669><c> from</c><00:18:48.390><c> where</c><00:18:48.570><c> it's</c><00:18:48.750><c> going</c><00:18:48.960><c> to</c><00:18:49.049><c> run</c><00:18:49.290><c> I'll</c>

00:18:49.760 --> 00:18:49.770 align:start position:0%
test from where it's going to run I'll
 

00:18:49.770 --> 00:18:51.560 align:start position:0%
test from where it's going to run I'll
hand<00:18:50.340><c> you</c><00:18:50.400><c> over</c><00:18:50.490><c> to</c><00:18:50.640><c> my</c><00:18:50.790><c> colleague</c><00:18:51.150><c> Stefan</c>

00:18:51.560 --> 00:18:51.570 align:start position:0%
hand you over to my colleague Stefan
 

00:18:51.570 --> 00:18:53.870 align:start position:0%
hand you over to my colleague Stefan
who's<00:18:52.169><c> going</c><00:18:52.410><c> to</c><00:18:52.500><c> show</c><00:18:52.710><c> you</c><00:18:52.770><c> how</c><00:18:53.370><c> you</c><00:18:53.429><c> can</c><00:18:53.669><c> run</c>

00:18:53.870 --> 00:18:53.880 align:start position:0%
who's going to show you how you can run
 

00:18:53.880 --> 00:18:56.200 align:start position:0%
who's going to show you how you can run
these<00:18:54.000><c> tests</c><00:18:54.510><c> in</c><00:18:54.690><c> the</c><00:18:54.780><c> new</c><00:18:54.990><c> simplified</c><00:18:55.530><c> world</c>

00:18:56.200 --> 00:18:56.210 align:start position:0%
these tests in the new simplified world
 

00:18:56.210 --> 00:18:58.390 align:start position:0%
these tests in the new simplified world
Stefan

00:18:58.390 --> 00:18:58.400 align:start position:0%
Stefan
 

00:18:58.400 --> 00:19:07.230 align:start position:0%
Stefan
[Applause]

00:19:07.230 --> 00:19:07.240 align:start position:0%
[Applause]
 

00:19:07.240 --> 00:19:13.120 align:start position:0%
[Applause]
Thank<00:19:08.240><c> You</c><00:19:08.300><c> Jonathan</c><00:19:09.730><c> welcome</c><00:19:10.730><c> everyone</c><00:19:12.130><c> ten</c>

00:19:13.120 --> 00:19:13.130 align:start position:0%
Thank You Jonathan welcome everyone ten
 

00:19:13.130 --> 00:19:16.660 align:start position:0%
Thank You Jonathan welcome everyone ten
years<00:19:13.430><c> entered</c><00:19:13.850><c> quite</c><00:19:14.660><c> amazing</c><00:19:15.140><c> I</c><00:19:15.430><c> also</c><00:19:16.430><c> want</c>

00:19:16.660 --> 00:19:16.670 align:start position:0%
years entered quite amazing I also want
 

00:19:16.670 --> 00:19:19.450 align:start position:0%
years entered quite amazing I also want
to<00:19:16.730><c> say</c><00:19:16.880><c> a</c><00:19:16.910><c> big</c><00:19:17.270><c> welcome</c><00:19:17.750><c> to</c><00:19:18.010><c> everybody</c><00:19:19.010><c> who</c><00:19:19.340><c> is</c>

00:19:19.450 --> 00:19:19.460 align:start position:0%
to say a big welcome to everybody who is
 

00:19:19.460 --> 00:19:22.330 align:start position:0%
to say a big welcome to everybody who is
joining<00:19:19.760><c> us</c><00:19:20.000><c> at</c><00:19:20.240><c> the</c><00:19:20.360><c> livestream</c><00:19:20.840><c> today</c><00:19:21.340><c> at</c>

00:19:22.330 --> 00:19:22.340 align:start position:0%
joining us at the livestream today at
 

00:19:22.340 --> 00:19:27.190 align:start position:0%
joining us at the livestream today at
Google<00:19:22.960><c> we</c><00:19:23.960><c> believe</c><00:19:24.760><c> that</c><00:19:25.760><c> testing</c><00:19:26.360><c> should</c><00:19:27.050><c> be</c>

00:19:27.190 --> 00:19:27.200 align:start position:0%
Google we believe that testing should be
 

00:19:27.200 --> 00:19:28.840 align:start position:0%
Google we believe that testing should be
a<00:19:27.230><c> fundamental</c><00:19:27.500><c> part</c><00:19:28.160><c> of</c><00:19:28.370><c> your</c><00:19:28.700><c> app</c>

00:19:28.840 --> 00:19:28.850 align:start position:0%
a fundamental part of your app
 

00:19:28.850 --> 00:19:32.230 align:start position:0%
a fundamental part of your app
development<00:19:29.450><c> strategy</c><00:19:30.880><c> let's</c><00:19:31.880><c> bring</c><00:19:32.090><c> back</c>

00:19:32.230 --> 00:19:32.240 align:start position:0%
development strategy let's bring back
 

00:19:32.240 --> 00:19:36.850 align:start position:0%
development strategy let's bring back
the<00:19:32.300><c> pyramid</c><00:19:32.810><c> as</c><00:19:34.540><c> we</c><00:19:35.540><c> can</c><00:19:35.690><c> see</c><00:19:35.960><c> our</c><00:19:36.260><c> friend</c>

00:19:36.850 --> 00:19:36.860 align:start position:0%
the pyramid as we can see our friend
 

00:19:36.860 --> 00:19:39.400 align:start position:0%
the pyramid as we can see our friend
with<00:19:37.160><c> the</c><00:19:37.250><c> chat</c><00:19:37.430><c> pack</c><00:19:37.670><c> has</c><00:19:38.330><c> solved</c><00:19:38.780><c> the</c><00:19:39.080><c> API</c>

00:19:39.400 --> 00:19:39.410 align:start position:0%
with the chat pack has solved the API
 

00:19:39.410 --> 00:19:44.290 align:start position:0%
with the chat pack has solved the API
dilemma<00:19:40.450><c> now</c><00:19:41.450><c> that</c><00:19:42.050><c> we</c><00:19:42.260><c> got</c><00:19:42.440><c> one</c><00:19:42.980><c> API</c><00:19:43.400><c> to</c><00:19:44.120><c> rule</c>

00:19:44.290 --> 00:19:44.300 align:start position:0%
dilemma now that we got one API to rule
 

00:19:44.300 --> 00:19:47.500 align:start position:0%
dilemma now that we got one API to rule
them<00:19:44.480><c> all</c><00:19:44.680><c> it's</c><00:19:45.680><c> really</c><00:19:46.190><c> easy</c><00:19:46.430><c> to</c><00:19:46.820><c> start</c>

00:19:47.500 --> 00:19:47.510 align:start position:0%
them all it's really easy to start
 

00:19:47.510 --> 00:19:49.960 align:start position:0%
them all it's really easy to start
writing<00:19:47.720><c> tests</c><00:19:48.080><c> for</c><00:19:48.320><c> Android</c><00:19:48.670><c> no</c><00:19:49.670><c> more</c>

00:19:49.960 --> 00:19:49.970 align:start position:0%
writing tests for Android no more
 

00:19:49.970 --> 00:19:53.890 align:start position:0%
writing tests for Android no more
excuses<00:19:51.190><c> we</c><00:19:52.190><c> can</c><00:19:52.370><c> start</c><00:19:52.700><c> with</c><00:19:53.240><c> a</c><00:19:53.270><c> simple</c><00:19:53.690><c> test</c>

00:19:53.890 --> 00:19:53.900 align:start position:0%
excuses we can start with a simple test
 

00:19:53.900 --> 00:19:57.250 align:start position:0%
excuses we can start with a simple test
for<00:19:54.260><c> our</c><00:19:54.800><c> business</c><00:19:55.280><c> logic</c><00:19:55.720><c> usually</c><00:19:56.720><c> a</c><00:19:56.900><c> unit</c>

00:19:57.250 --> 00:19:57.260 align:start position:0%
for our business logic usually a unit
 

00:19:57.260 --> 00:20:00.190 align:start position:0%
for our business logic usually a unit
test<00:19:57.470><c> and</c><00:19:57.850><c> over</c><00:19:58.850><c> time</c><00:19:59.090><c> we</c><00:19:59.510><c> can</c><00:19:59.690><c> add</c><00:19:59.870><c> more</c><00:20:00.140><c> and</c>

00:20:00.190 --> 00:20:00.200 align:start position:0%
test and over time we can add more and
 

00:20:00.200 --> 00:20:03.220 align:start position:0%
test and over time we can add more and
more<00:20:00.380><c> tests</c><00:20:01.210><c> once</c><00:20:02.210><c> we</c><00:20:02.480><c> start</c><00:20:02.720><c> implementing</c>

00:20:03.220 --> 00:20:03.230 align:start position:0%
more tests once we start implementing
 

00:20:03.230 --> 00:20:06.790 align:start position:0%
more tests once we start implementing
the<00:20:03.560><c> UI</c><00:20:03.710><c> for</c><00:20:03.890><c> our</c><00:20:04.280><c> application</c><00:20:04.970><c> it</c><00:20:05.840><c> might</c><00:20:06.650><c> be</c>

00:20:06.790 --> 00:20:06.800 align:start position:0%
the UI for our application it might be
 

00:20:06.800 --> 00:20:10.480 align:start position:0%
the UI for our application it might be
worth<00:20:07.010><c> adding</c><00:20:07.400><c> an</c><00:20:07.670><c> integration</c><00:20:08.210><c> test</c><00:20:09.490><c> this</c>

00:20:10.480 --> 00:20:10.490 align:start position:0%
worth adding an integration test this
 

00:20:10.490 --> 00:20:14.200 align:start position:0%
worth adding an integration test this
chest<00:20:11.000><c> became</c><00:20:11.450><c> a</c><00:20:11.660><c> fluent</c><00:20:12.110><c> experience</c><00:20:13.210><c> since</c>

00:20:14.200 --> 00:20:14.210 align:start position:0%
chest became a fluent experience since
 

00:20:14.210 --> 00:20:19.150 align:start position:0%
chest became a fluent experience since
both<00:20:14.450><c> layers</c><00:20:15.340><c> support</c><00:20:16.340><c> the</c><00:20:16.580><c> same</c><00:20:16.820><c> api's</c><00:20:18.160><c> no</c>

00:20:19.150 --> 00:20:19.160 align:start position:0%
both layers support the same api's no
 

00:20:19.160 --> 00:20:23.680 align:start position:0%
both layers support the same api's no
more<00:20:19.460><c> context</c><00:20:20.000><c> switching</c><00:20:20.360><c> great</c><00:20:22.540><c> but</c><00:20:23.540><c> that's</c>

00:20:23.680 --> 00:20:23.690 align:start position:0%
more context switching great but that's
 

00:20:23.690 --> 00:20:26.500 align:start position:0%
more context switching great but that's
not<00:20:23.900><c> the</c><00:20:24.050><c> only</c><00:20:24.350><c> use</c><00:20:24.470><c> case</c><00:20:24.850><c> where</c><00:20:25.850><c> the</c><00:20:25.970><c> new</c><00:20:26.120><c> API</c>

00:20:26.500 --> 00:20:26.510 align:start position:0%
not the only use case where the new API
 

00:20:26.510 --> 00:20:30.130 align:start position:0%
not the only use case where the new API
became<00:20:27.170><c> really</c><00:20:27.410><c> handy</c><00:20:27.770><c> let's</c><00:20:28.670><c> imagine</c><00:20:29.140><c> we</c>

00:20:30.130 --> 00:20:30.140 align:start position:0%
became really handy let's imagine we
 

00:20:30.140 --> 00:20:32.710 align:start position:0%
became really handy let's imagine we
have<00:20:30.260><c> an</c><00:20:30.410><c> integration</c><00:20:30.860><c> test</c><00:20:31.040><c> I</c><00:20:31.520><c> got</c><00:20:32.090><c> two</c><00:20:32.390><c> large</c>

00:20:32.710 --> 00:20:32.720 align:start position:0%
have an integration test I got two large
 

00:20:32.720 --> 00:20:37.120 align:start position:0%
have an integration test I got two large
and<00:20:33.050><c> complicated</c><00:20:33.890><c> I</c><00:20:35.200><c> have</c><00:20:36.200><c> seen</c><00:20:36.470><c> many</c><00:20:37.010><c> of</c>

00:20:37.120 --> 00:20:37.130 align:start position:0%
and complicated I have seen many of
 

00:20:37.130 --> 00:20:40.840 align:start position:0%
and complicated I have seen many of
those<00:20:37.430><c> tests</c><00:20:38.170><c> it's</c><00:20:39.170><c> just</c><00:20:39.470><c> too</c><00:20:39.590><c> convenient</c><00:20:40.040><c> to</c>

00:20:40.840 --> 00:20:40.850 align:start position:0%
those tests it's just too convenient to
 

00:20:40.850 --> 00:20:44.320 align:start position:0%
those tests it's just too convenient to
test<00:20:41.090><c> business</c><00:20:41.630><c> logic</c><00:20:41.840><c> and</c><00:20:42.320><c> UI</c><00:20:42.890><c> flow</c><00:20:43.370><c> in</c><00:20:43.670><c> one</c>

00:20:44.320 --> 00:20:44.330 align:start position:0%
test business logic and UI flow in one
 

00:20:44.330 --> 00:20:48.400 align:start position:0%
test business logic and UI flow in one
single<00:20:44.690><c> test</c><00:20:44.930><c> at</c><00:20:46.240><c> Google</c><00:20:47.240><c> we</c><00:20:48.080><c> don't</c><00:20:48.110><c> like</c>

00:20:48.400 --> 00:20:48.410 align:start position:0%
single test at Google we don't like
 

00:20:48.410 --> 00:20:51.400 align:start position:0%
single test at Google we don't like
those<00:20:48.650><c> tests</c><00:20:49.010><c> they</c><00:20:49.450><c> are</c><00:20:50.450><c> hard</c><00:20:50.690><c> to</c><00:20:50.900><c> read</c><00:20:51.110><c> and</c>

00:20:51.400 --> 00:20:51.410 align:start position:0%
those tests they are hard to read and
 

00:20:51.410 --> 00:20:57.070 align:start position:0%
those tests they are hard to read and
they<00:20:52.250><c> tend</c><00:20:52.550><c> to</c><00:20:52.700><c> become</c><00:20:52.940><c> flaky</c><00:20:55.120><c> small</c><00:20:56.120><c> well</c>

00:20:57.070 --> 00:20:57.080 align:start position:0%
they tend to become flaky small well
 

00:20:57.080 --> 00:21:00.060 align:start position:0%
they tend to become flaky small well
focused<00:20:57.620><c> tests</c><00:20:58.070><c> are</c><00:20:58.280><c> much</c><00:20:58.880><c> better</c>

00:21:00.060 --> 00:21:00.070 align:start position:0%
focused tests are much better
 

00:21:00.070 --> 00:21:03.250 align:start position:0%
focused tests are much better
so<00:21:01.070><c> let's</c><00:21:01.610><c> refactor</c><00:21:01.970><c> this</c><00:21:02.510><c> large</c><00:21:02.840><c> complicated</c>

00:21:03.250 --> 00:21:03.260 align:start position:0%
so let's refactor this large complicated
 

00:21:03.260 --> 00:21:07.930 align:start position:0%
so let's refactor this large complicated
test<00:21:05.320><c> refactoring</c><00:21:06.320><c> a</c><00:21:06.410><c> large</c><00:21:06.650><c> test</c><00:21:07.010><c> can</c><00:21:07.760><c> be</c><00:21:07.910><c> a</c>

00:21:07.930 --> 00:21:07.940 align:start position:0%
test refactoring a large test can be a
 

00:21:07.940 --> 00:21:10.890 align:start position:0%
test refactoring a large test can be a
very<00:21:08.450><c> painful</c><00:21:08.870><c> task</c>

00:21:10.890 --> 00:21:10.900 align:start position:0%
very painful task
 

00:21:10.900 --> 00:21:13.600 align:start position:0%
very painful task
Queeny<00:21:11.900><c> audience</c><00:21:12.380><c> has</c><00:21:12.890><c> experienced</c><00:21:13.490><c> this</c>

00:21:13.600 --> 00:21:13.610 align:start position:0%
Queeny audience has experienced this
 

00:21:13.610 --> 00:21:16.840 align:start position:0%
Queeny audience has experienced this
recently<00:21:14.000><c> raise</c><00:21:14.540><c> your</c><00:21:14.690><c> hand</c>

00:21:16.840 --> 00:21:16.850 align:start position:0%
recently raise your hand
 

00:21:16.850 --> 00:21:19.640 align:start position:0%
recently raise your hand
here's<00:21:17.850><c> some</c><00:21:18.030><c> good</c><00:21:18.180><c> news</c><00:21:18.330><c> for</c><00:21:18.510><c> you</c><00:21:18.660><c> if</c><00:21:18.870><c> the</c>

00:21:19.640 --> 00:21:19.650 align:start position:0%
here's some good news for you if the
 

00:21:19.650 --> 00:21:22.490 align:start position:0%
here's some good news for you if the
original<00:21:19.860><c> test</c><00:21:20.460><c> was</c><00:21:21.330><c> written</c><00:21:21.780><c> with</c><00:21:22.200><c> the</c><00:21:22.350><c> new</c>

00:21:22.490 --> 00:21:22.500 align:start position:0%
original test was written with the new
 

00:21:22.500 --> 00:21:27.260 align:start position:0%
original test was written with the new
API<00:21:23.000><c> this</c><00:21:24.000><c> test</c><00:21:24.360><c> become</c><00:21:24.990><c> much</c><00:21:25.290><c> simpler</c><00:21:26.270><c> we</c>

00:21:27.260 --> 00:21:27.270 align:start position:0%
API this test become much simpler we
 

00:21:27.270 --> 00:21:30.560 align:start position:0%
API this test become much simpler we
still<00:21:27.540><c> have</c><00:21:27.720><c> to</c><00:21:27.900><c> test</c><00:21:28.110><c> our</c><00:21:28.380><c> UI</c><00:21:28.620><c> and</c><00:21:29.360><c> we'll</c><00:21:30.360><c> keep</c>

00:21:30.560 --> 00:21:30.570 align:start position:0%
still have to test our UI and we'll keep
 

00:21:30.570 --> 00:21:34.790 align:start position:0%
still have to test our UI and we'll keep
this<00:21:30.870><c> part</c><00:21:31.230><c> in</c><00:21:31.500><c> the</c><00:21:32.070><c> integration</c><00:21:32.460><c> test</c><00:21:33.800><c> this</c>

00:21:34.790 --> 00:21:34.800 align:start position:0%
this part in the integration test this
 

00:21:34.800 --> 00:21:37.820 align:start position:0%
this part in the integration test this
layer<00:21:35.100><c> provides</c><00:21:35.580><c> high</c><00:21:35.970><c> fidelity</c><00:21:36.150><c> and</c><00:21:36.830><c> we</c>

00:21:37.820 --> 00:21:37.830 align:start position:0%
layer provides high fidelity and we
 

00:21:37.830 --> 00:21:40.810 align:start position:0%
layer provides high fidelity and we
don't<00:21:38.040><c> want</c><00:21:38.250><c> to</c><00:21:38.370><c> lose</c><00:21:38.550><c> that</c><00:21:38.610><c> for</c><00:21:39.600><c> our</c><00:21:39.720><c> UI</c><00:21:39.960><c> test</c>

00:21:40.810 --> 00:21:40.820 align:start position:0%
don't want to lose that for our UI test
 

00:21:40.820 --> 00:21:44.450 align:start position:0%
don't want to lose that for our UI test
the<00:21:41.820><c> rest</c><00:21:42.200><c> mainly</c><00:21:43.200><c> business</c><00:21:43.500><c> logic</c><00:21:43.710><c> can</c>

00:21:44.450 --> 00:21:44.460 align:start position:0%
the rest mainly business logic can
 

00:21:44.460 --> 00:21:46.810 align:start position:0%
the rest mainly business logic can
directly<00:21:44.880><c> go</c><00:21:45.180><c> into</c><00:21:45.210><c> the</c><00:21:45.750><c> unit</c><00:21:46.020><c> test</c><00:21:46.230><c> layer</c>

00:21:46.810 --> 00:21:46.820 align:start position:0%
directly go into the unit test layer
 

00:21:46.820 --> 00:21:52.070 align:start position:0%
directly go into the unit test layer
here<00:21:48.290><c> we</c><00:21:49.290><c> gain</c><00:21:49.470><c> speed</c><00:21:50.270><c> since</c><00:21:51.270><c> we</c><00:21:51.450><c> can</c><00:21:51.600><c> run</c><00:21:51.870><c> off</c>

00:21:52.070 --> 00:21:52.080 align:start position:0%
here we gain speed since we can run off
 

00:21:52.080 --> 00:21:56.390 align:start position:0%
here we gain speed since we can run off
device<00:21:52.710><c> on</c><00:21:53.010><c> the</c><00:21:53.670><c> local</c><00:21:53.970><c> java</c><00:21:54.210><c> vm</c><00:21:54.920><c> so</c><00:21:55.920><c> let's</c>

00:21:56.390 --> 00:21:56.400 align:start position:0%
device on the local java vm so let's
 

00:21:56.400 --> 00:21:59.240 align:start position:0%
device on the local java vm so let's
verify<00:21:56.610><c> the</c><00:21:56.850><c> refactoring</c><00:21:57.180><c> together</c><00:21:57.980><c> we</c><00:21:58.980><c> still</c>

00:21:59.240 --> 00:21:59.250 align:start position:0%
verify the refactoring together we still
 

00:21:59.250 --> 00:22:01.820 align:start position:0%
verify the refactoring together we still
have<00:21:59.490><c> high</c><00:21:59.760><c> fidelity</c><00:22:00.350><c> for</c><00:22:01.350><c> the</c><00:22:01.440><c> UI</c><00:22:01.590><c> test</c>

00:22:01.820 --> 00:22:01.830 align:start position:0%
have high fidelity for the UI test
 

00:22:01.830 --> 00:22:06.020 align:start position:0%
have high fidelity for the UI test
that's<00:22:02.160><c> good</c><00:22:03.500><c> we</c><00:22:04.500><c> gain</c><00:22:04.710><c> speed</c><00:22:05.070><c> even</c><00:22:05.670><c> better</c>

00:22:06.020 --> 00:22:06.030 align:start position:0%
that's good we gain speed even better
 

00:22:06.030 --> 00:22:10.370 align:start position:0%
that's good we gain speed even better
and<00:22:07.100><c> the</c><00:22:08.100><c> tests</c><00:22:08.460><c> are</c><00:22:08.550><c> decoupled</c><00:22:09.000><c> and</c><00:22:09.510><c> less</c>

00:22:10.370 --> 00:22:10.380 align:start position:0%
and the tests are decoupled and less
 

00:22:10.380 --> 00:22:12.860 align:start position:0%
and the tests are decoupled and less
complex<00:22:11.270><c> nice</c><00:22:12.270><c> job</c>

00:22:12.860 --> 00:22:12.870 align:start position:0%
complex nice job
 

00:22:12.870 --> 00:22:15.860 align:start position:0%
complex nice job
your<00:22:13.350><c> co-workers</c><00:22:13.530><c> will</c><00:22:14.070><c> thank</c><00:22:14.310><c> you</c><00:22:14.520><c> so</c><00:22:14.870><c> let's</c>

00:22:15.860 --> 00:22:15.870 align:start position:0%
your co-workers will thank you so let's
 

00:22:15.870 --> 00:22:19.910 align:start position:0%
your co-workers will thank you so let's
run<00:22:16.020><c> those</c><00:22:16.200><c> tests</c><00:22:16.550><c> but</c><00:22:17.550><c> wait</c><00:22:18.410><c> we</c><00:22:19.410><c> still</c><00:22:19.680><c> have</c>

00:22:19.910 --> 00:22:19.920 align:start position:0%
run those tests but wait we still have
 

00:22:19.920 --> 00:22:23.510 align:start position:0%
run those tests but wait we still have
to<00:22:20.130><c> choose</c><00:22:20.400><c> a</c><00:22:20.430><c> random</c><00:22:20.760><c> environment</c><00:22:22.280><c> it's</c><00:22:23.280><c> not</c>

00:22:23.510 --> 00:22:23.520 align:start position:0%
to choose a random environment it's not
 

00:22:23.520 --> 00:22:27.800 align:start position:0%
to choose a random environment it's not
obvious<00:22:23.910><c> trivial</c><00:22:24.390><c> to</c><00:22:24.870><c> pick</c><00:22:25.080><c> the</c><00:22:25.230><c> right</c><00:22:25.380><c> one</c><00:22:26.810><c> we</c>

00:22:27.800 --> 00:22:27.810 align:start position:0%
obvious trivial to pick the right one we
 

00:22:27.810 --> 00:22:29.570 align:start position:0%
obvious trivial to pick the right one we
also<00:22:27.960><c> have</c><00:22:28.230><c> to</c><00:22:28.440><c> work</c><00:22:28.620><c> in</c><00:22:28.860><c> multiple</c><00:22:29.010><c> source</c>

00:22:29.570 --> 00:22:29.580 align:start position:0%
also have to work in multiple source
 

00:22:29.580 --> 00:22:32.960 align:start position:0%
also have to work in multiple source
sets<00:22:30.680><c> the</c><00:22:31.680><c> combination</c><00:22:32.370><c> of</c><00:22:32.490><c> runtime</c>

00:22:32.960 --> 00:22:32.970 align:start position:0%
sets the combination of runtime
 

00:22:32.970 --> 00:22:36.560 align:start position:0%
sets the combination of runtime
environments<00:22:33.590><c> plus</c><00:22:34.590><c> source</c><00:22:34.950><c> sets</c><00:22:35.390><c> full</c><00:22:36.390><c> lead</c>

00:22:36.560 --> 00:22:36.570 align:start position:0%
environments plus source sets full lead
 

00:22:36.570 --> 00:22:38.950 align:start position:0%
environments plus source sets full lead
to<00:22:36.750><c> an</c><00:22:36.840><c> explosion</c><00:22:37.200><c> of</c><00:22:37.500><c> test</c><00:22:37.770><c> configurations</c>

00:22:38.950 --> 00:22:38.960 align:start position:0%
to an explosion of test configurations
 

00:22:38.960 --> 00:22:43.430 align:start position:0%
to an explosion of test configurations
just<00:22:39.960><c> imagine</c><00:22:40.740><c> how</c><00:22:41.670><c> hard</c><00:22:41.940><c> it</c><00:22:42.060><c> will</c><00:22:42.180><c> get</c><00:22:42.510><c> to</c>

00:22:43.430 --> 00:22:43.440 align:start position:0%
just imagine how hard it will get to
 

00:22:43.440 --> 00:22:46.850 align:start position:0%
just imagine how hard it will get to
choose<00:22:43.770><c> the</c><00:22:44.100><c> right</c><00:22:44.220><c> configuration</c><00:22:45.740><c> should</c><00:22:46.740><c> I</c>

00:22:46.850 --> 00:22:46.860 align:start position:0%
choose the right configuration should I
 

00:22:46.860 --> 00:22:49.720 align:start position:0%
choose the right configuration should I
run<00:22:47.040><c> on</c><00:22:47.280><c> a</c><00:22:47.340><c> device</c><00:22:47.760><c> or</c><00:22:48.420><c> offer</c><00:22:48.720><c> device</c><00:22:49.140><c> and</c>

00:22:49.720 --> 00:22:49.730 align:start position:0%
run on a device or offer device and
 

00:22:49.730 --> 00:22:52.550 align:start position:0%
run on a device or offer device and
don't<00:22:50.730><c> we</c><00:22:50.910><c> need</c><00:22:51.150><c> to</c><00:22:51.600><c> run</c><00:22:51.810><c> the</c><00:22:51.960><c> entire</c><00:22:52.200><c> test</c>

00:22:52.550 --> 00:22:52.560 align:start position:0%
don't we need to run the entire test
 

00:22:52.560 --> 00:22:54.200 align:start position:0%
don't we need to run the entire test
suite<00:22:52.710><c> on</c><00:22:53.070><c> our</c><00:22:53.610><c> continuous</c><00:22:54.150><c> integration</c>

00:22:54.200 --> 00:22:54.210 align:start position:0%
suite on our continuous integration
 

00:22:54.210 --> 00:22:58.670 align:start position:0%
suite on our continuous integration
server<00:22:54.930><c> before</c><00:22:55.680><c> we</c><00:22:55.980><c> submit</c><00:22:56.510><c> and</c><00:22:57.510><c> you</c><00:22:58.350><c> all</c><00:22:58.500><c> know</c>

00:22:58.670 --> 00:22:58.680 align:start position:0%
server before we submit and you all know
 

00:22:58.680 --> 00:23:01.550 align:start position:0%
server before we submit and you all know
the<00:22:58.830><c> feeling</c><00:22:59.010><c> I</c><00:22:59.750><c> have</c><00:23:00.750><c> to</c><00:23:00.900><c> be</c><00:23:01.020><c> kicked</c><00:23:01.260><c> off</c><00:23:01.410><c> the</c>

00:23:01.550 --> 00:23:01.560 align:start position:0%
the feeling I have to be kicked off the
 

00:23:01.560 --> 00:23:05.600 align:start position:0%
the feeling I have to be kicked off the
test<00:23:01.770><c> run</c><00:23:02.540><c> waiting</c><00:23:03.540><c> eagerly</c><00:23:04.470><c> for</c><00:23:05.040><c> the</c><00:23:05.070><c> results</c>

00:23:05.600 --> 00:23:05.610 align:start position:0%
test run waiting eagerly for the results
 

00:23:05.610 --> 00:23:08.630 align:start position:0%
test run waiting eagerly for the results
Oh<00:23:07.370><c> No</c>

00:23:08.630 --> 00:23:08.640 align:start position:0%
Oh No
 

00:23:08.640 --> 00:23:11.240 align:start position:0%
Oh No
how<00:23:09.150><c> to</c><00:23:09.210><c> submit</c><00:23:09.540><c> one</c><00:23:10.290><c> of</c><00:23:10.320><c> the</c><00:23:10.530><c> test</c><00:23:10.740><c> is</c><00:23:10.890><c> flaky</c>

00:23:11.240 --> 00:23:11.250 align:start position:0%
how to submit one of the test is flaky
 

00:23:11.250 --> 00:23:14.840 align:start position:0%
how to submit one of the test is flaky
i'm<00:23:11.600><c> pretty</c><00:23:12.600><c> sure</c><00:23:12.720><c> many</c><00:23:13.380><c> of</c><00:23:13.620><c> you</c><00:23:13.860><c> have</c><00:23:14.100><c> been</c><00:23:14.640><c> in</c>

00:23:14.840 --> 00:23:14.850 align:start position:0%
i'm pretty sure many of you have been in
 

00:23:14.850 --> 00:23:19.220 align:start position:0%
i'm pretty sure many of you have been in
this<00:23:14.970><c> situation</c><00:23:16.550><c> flakiness</c><00:23:17.550><c> is</c><00:23:18.030><c> one</c><00:23:18.870><c> of</c><00:23:19.080><c> the</c>

00:23:19.220 --> 00:23:19.230 align:start position:0%
this situation flakiness is one of the
 

00:23:19.230 --> 00:23:21.710 align:start position:0%
this situation flakiness is one of the
biggest<00:23:19.620><c> pain</c><00:23:19.860><c> points</c><00:23:20.340><c> for</c><00:23:21.180><c> developer</c>

00:23:21.710 --> 00:23:21.720 align:start position:0%
biggest pain points for developer
 

00:23:21.720 --> 00:23:27.290 align:start position:0%
biggest pain points for developer
productivity<00:23:23.150><c> so</c><00:23:24.200><c> what</c><00:23:25.200><c> if</c><00:23:26.120><c> there</c><00:23:27.120><c> was</c><00:23:27.270><c> a</c>

00:23:27.290 --> 00:23:27.300 align:start position:0%
productivity so what if there was a
 

00:23:27.300 --> 00:23:28.580 align:start position:0%
productivity so what if there was a
better<00:23:27.600><c> way</c>

00:23:28.580 --> 00:23:28.590 align:start position:0%
better way
 

00:23:28.590 --> 00:23:34.190 align:start position:0%
better way
to<00:23:29.690><c> set</c><00:23:30.690><c> up</c><00:23:30.840><c> your</c><00:23:31.080><c> test</c><00:23:31.320><c> harness</c><00:23:33.020><c> execute</c><00:23:34.020><c> your</c>

00:23:34.190 --> 00:23:34.200 align:start position:0%
to set up your test harness execute your
 

00:23:34.200 --> 00:23:37.549 align:start position:0%
to set up your test harness execute your
tests<00:23:34.710><c> in</c><00:23:34.860><c> a</c><00:23:35.070><c> reliable</c><00:23:35.580><c> environment</c><00:23:36.559><c> with</c>

00:23:37.549 --> 00:23:37.559 align:start position:0%
tests in a reliable environment with
 

00:23:37.559 --> 00:23:43.940 align:start position:0%
tests in a reliable environment with
unified<00:23:38.190><c> test</c><00:23:38.880><c> results</c><00:23:41.720><c> today</c><00:23:42.720><c> we</c><00:23:43.590><c> are</c><00:23:43.710><c> proud</c>

00:23:43.940 --> 00:23:43.950 align:start position:0%
unified test results today we are proud
 

00:23:43.950 --> 00:23:47.149 align:start position:0%
unified test results today we are proud
to<00:23:43.980><c> announce</c><00:23:44.460><c> project</c><00:23:45.059><c> nitrogen</c><00:23:45.860><c> the</c><00:23:46.860><c> new</c>

00:23:47.149 --> 00:23:47.159 align:start position:0%
to announce project nitrogen the new
 

00:23:47.159 --> 00:23:51.100 align:start position:0%
to announce project nitrogen the new
single<00:23:47.880><c> entry</c><00:23:48.270><c> point</c><00:23:48.539><c> for</c><00:23:48.750><c> all</c><00:23:49.140><c> Android</c><00:23:49.740><c> tests</c>

00:23:51.100 --> 00:23:51.110 align:start position:0%
single entry point for all Android tests
 

00:23:51.110 --> 00:24:00.320 align:start position:0%
single entry point for all Android tests
nitrogen<00:23:52.110><c> is</c><00:23:52.500><c> fuel</c><00:23:52.980><c> for</c><00:23:53.490><c> your</c><00:23:53.580><c> jetpacks</c><00:23:59.330><c> with</c>

00:24:00.320 --> 00:24:00.330 align:start position:0%
nitrogen is fuel for your jetpacks with
 

00:24:00.330 --> 00:24:03.500 align:start position:0%
nitrogen is fuel for your jetpacks with
our<00:24:00.480><c> expertise</c><00:24:01.260><c> of</c><00:24:01.700><c> running</c><00:24:02.700><c> billions</c><00:24:03.360><c> of</c>

00:24:03.500 --> 00:24:03.510 align:start position:0%
our expertise of running billions of
 

00:24:03.510 --> 00:24:07.010 align:start position:0%
our expertise of running billions of
tests<00:24:04.020><c> a</c><00:24:04.080><c> year</c><00:24:04.350><c> we</c><00:24:05.309><c> had</c><00:24:05.549><c> to</c><00:24:05.820><c> build</c><00:24:06.000><c> the</c><00:24:06.360><c> fastest</c>

00:24:07.010 --> 00:24:07.020 align:start position:0%
tests a year we had to build the fastest
 

00:24:07.020 --> 00:24:11.480 align:start position:0%
tests a year we had to build the fastest
and<00:24:07.380><c> most</c><00:24:07.409><c> reliable</c><00:24:08.250><c> test</c><00:24:09.000><c> executor</c><00:24:10.490><c> nitrogen</c>

00:24:11.480 --> 00:24:11.490 align:start position:0%
and most reliable test executor nitrogen
 

00:24:11.490 --> 00:24:14.120 align:start position:0%
and most reliable test executor nitrogen
covers<00:24:12.360><c> the</c><00:24:12.510><c> entire</c><00:24:12.720><c> testing</c><00:24:13.230><c> lifecycle</c><00:24:13.740><c> from</c>

00:24:14.120 --> 00:24:14.130 align:start position:0%
covers the entire testing lifecycle from
 

00:24:14.130 --> 00:24:18.250 align:start position:0%
covers the entire testing lifecycle from
set<00:24:14.370><c> up</c><00:24:14.520><c> to</c><00:24:15.390><c> test</c><00:24:15.570><c> execution</c><00:24:15.899><c> and</c><00:24:16.529><c> reporting</c>

00:24:18.250 --> 00:24:18.260 align:start position:0%
set up to test execution and reporting
 

00:24:18.260 --> 00:24:20.840 align:start position:0%
set up to test execution and reporting
nitrogen<00:24:19.260><c> provides</c><00:24:19.919><c> deterministic</c><00:24:20.520><c> behavior</c>

00:24:20.840 --> 00:24:20.850 align:start position:0%
nitrogen provides deterministic behavior
 

00:24:20.850 --> 00:24:25.610 align:start position:0%
nitrogen provides deterministic behavior
across<00:24:21.779><c> different</c><00:24:22.320><c> pool</c><00:24:22.470><c> systems</c><00:24:24.169><c> it</c><00:24:25.169><c> will</c><00:24:25.440><c> be</c>

00:24:25.610 --> 00:24:25.620 align:start position:0%
across different pool systems it will be
 

00:24:25.620 --> 00:24:28.930 align:start position:0%
across different pool systems it will be
fully<00:24:25.980><c> integrated</c><00:24:26.279><c> in</c><00:24:27.059><c> Android</c><00:24:27.450><c> studio</c><00:24:27.529><c> at</c>

00:24:28.930 --> 00:24:28.940 align:start position:0%
fully integrated in Android studio at
 

00:24:28.940 --> 00:24:32.120 align:start position:0%
fully integrated in Android studio at
Google<00:24:29.940><c> we</c><00:24:30.539><c> already</c><00:24:30.899><c> used</c><00:24:31.080><c> nitrogen</c><00:24:31.649><c> to</c><00:24:31.919><c> test</c>

00:24:32.120 --> 00:24:32.130 align:start position:0%
Google we already used nitrogen to test
 

00:24:32.130 --> 00:24:37.240 align:start position:0%
Google we already used nitrogen to test
our<00:24:32.279><c> own</c><00:24:32.520><c> apps</c><00:24:32.960><c> such</c><00:24:33.960><c> as</c><00:24:34.010><c> Gmail</c><00:24:35.120><c> google</c><00:24:36.120><c> maps</c>

00:24:37.240 --> 00:24:37.250 align:start position:0%
our own apps such as Gmail google maps
 

00:24:37.250 --> 00:24:43.610 align:start position:0%
our own apps such as Gmail google maps
photos<00:24:38.480><c> YouTube</c><00:24:39.480><c> and</c><00:24:39.690><c> many</c><00:24:40.140><c> more</c><00:24:41.899><c> nitrogen</c><00:24:42.899><c> is</c>

00:24:43.610 --> 00:24:43.620 align:start position:0%
photos YouTube and many more nitrogen is
 

00:24:43.620 --> 00:24:47.510 align:start position:0%
photos YouTube and many more nitrogen is
highly<00:24:44.190><c> extensible</c><00:24:45.049><c> it</c><00:24:46.049><c> provides</c><00:24:46.500><c> api's</c><00:24:47.070><c> for</c>

00:24:47.510 --> 00:24:47.520 align:start position:0%
highly extensible it provides api's for
 

00:24:47.520 --> 00:24:51.320 align:start position:0%
highly extensible it provides api's for
test<00:24:47.730><c> authors</c><00:24:47.940><c> to</c><00:24:48.899><c> customize</c><00:24:50.029><c> the</c><00:24:51.029><c> test</c>

00:24:51.320 --> 00:24:51.330 align:start position:0%
test authors to customize the test
 

00:24:51.330 --> 00:24:57.440 align:start position:0%
test authors to customize the test
invocation<00:24:52.080><c> at</c><00:24:52.320><c> any</c><00:24:52.980><c> point</c><00:24:55.940><c> nitrogen</c><00:24:56.940><c> will</c><00:24:57.299><c> be</c>

00:24:57.440 --> 00:24:57.450 align:start position:0%
invocation at any point nitrogen will be
 

00:24:57.450 --> 00:25:00.740 align:start position:0%
invocation at any point nitrogen will be
fully<00:24:57.720><c> open</c><00:24:58.110><c> sourced</c><00:24:58.470><c> later</c><00:24:58.860><c> this</c><00:24:59.039><c> year</c><00:24:59.750><c> but</c>

00:25:00.740 --> 00:25:00.750 align:start position:0%
fully open sourced later this year but
 

00:25:00.750 --> 00:25:03.070 align:start position:0%
fully open sourced later this year but
let<00:25:00.929><c> me</c><00:25:01.020><c> give</c><00:25:01.169><c> you</c><00:25:01.289><c> an</c><00:25:01.350><c> overview</c>

00:25:03.070 --> 00:25:03.080 align:start position:0%
let me give you an overview
 

00:25:03.080 --> 00:25:06.139 align:start position:0%
let me give you an overview
starting<00:25:04.080><c> with</c><00:25:04.169><c> setup</c><00:25:04.940><c> natural</c><00:25:05.940><c> chain</c>

00:25:06.139 --> 00:25:06.149 align:start position:0%
starting with setup natural chain
 

00:25:06.149 --> 00:25:08.269 align:start position:0%
starting with setup natural chain
connects<00:25:06.570><c> your</c><00:25:06.659><c> test</c><00:25:06.929><c> to</c><00:25:07.320><c> any</c><00:25:07.559><c> execution</c>

00:25:08.269 --> 00:25:08.279 align:start position:0%
connects your test to any execution
 

00:25:08.279 --> 00:25:12.080 align:start position:0%
connects your test to any execution
environment<00:25:08.880><c> on</c><00:25:09.419><c> device</c><00:25:10.080><c> of</c><00:25:10.470><c> device</c><00:25:11.340><c> or</c><00:25:11.700><c> in</c>

00:25:12.080 --> 00:25:12.090 align:start position:0%
environment on device of device or in
 

00:25:12.090 --> 00:25:15.919 align:start position:0%
environment on device of device or in
the<00:25:12.120><c> cloud</c><00:25:13.250><c> it</c><00:25:14.250><c> installs</c><00:25:14.760><c> required</c><00:25:15.600><c> test</c>

00:25:15.919 --> 00:25:15.929 align:start position:0%
the cloud it installs required test
 

00:25:15.929 --> 00:25:19.700 align:start position:0%
the cloud it installs required test
artifacts<00:25:16.380><c> and</c><00:25:16.760><c> if</c><00:25:17.760><c> necessary</c><00:25:18.200><c> it</c><00:25:19.200><c> can</c><00:25:19.260><c> run</c>

00:25:19.700 --> 00:25:19.710 align:start position:0%
artifacts and if necessary it can run
 

00:25:19.710 --> 00:25:24.350 align:start position:0%
artifacts and if necessary it can run
custom<00:25:20.250><c> fixture</c><00:25:20.640><c> scripts</c><00:25:21.000><c> for</c><00:25:21.299><c> you</c><00:25:23.270><c> let</c><00:25:24.270><c> me</c>

00:25:24.350 --> 00:25:24.360 align:start position:0%
custom fixture scripts for you let me
 

00:25:24.360 --> 00:25:26.930 align:start position:0%
custom fixture scripts for you let me
show<00:25:24.510><c> you</c><00:25:24.600><c> how</c><00:25:24.690><c> this</c><00:25:24.809><c> works</c><00:25:25.049><c> first</c><00:25:26.039><c> natural</c>

00:25:26.930 --> 00:25:26.940 align:start position:0%
show you how this works first natural
 

00:25:26.940 --> 00:25:31.250 align:start position:0%
show you how this works first natural
chain<00:25:27.120><c> finds</c><00:25:27.570><c> and</c><00:25:28.010><c> provisions</c><00:25:29.010><c> a</c><00:25:29.190><c> device</c><00:25:30.260><c> this</c>

00:25:31.250 --> 00:25:31.260 align:start position:0%
chain finds and provisions a device this
 

00:25:31.260 --> 00:25:33.200 align:start position:0%
chain finds and provisions a device this
can<00:25:31.529><c> either</c><00:25:31.679><c> be</c><00:25:31.830><c> a</c><00:25:31.950><c> simulated</c><00:25:32.549><c> device</c><00:25:32.909><c> a</c>

00:25:33.200 --> 00:25:33.210 align:start position:0%
can either be a simulated device a
 

00:25:33.210 --> 00:25:35.899 align:start position:0%
can either be a simulated device a
virtual<00:25:33.539><c> device</c><00:25:33.809><c> or</c><00:25:34.080><c> real</c><00:25:34.289><c> device</c><00:25:34.700><c> once</c><00:25:35.700><c> the</c>

00:25:35.899 --> 00:25:35.909 align:start position:0%
virtual device or real device once the
 

00:25:35.909 --> 00:25:38.870 align:start position:0%
virtual device or real device once the
device<00:25:36.149><c> is</c><00:25:36.179><c> ready</c><00:25:36.830><c> nitrogen</c><00:25:37.830><c> installs</c><00:25:38.580><c> the</c>

00:25:38.870 --> 00:25:38.880 align:start position:0%
device is ready nitrogen installs the
 

00:25:38.880 --> 00:25:40.190 align:start position:0%
device is ready nitrogen installs the
application

00:25:40.190 --> 00:25:40.200 align:start position:0%
application
 

00:25:40.200 --> 00:25:44.779 align:start position:0%
application
under<00:25:40.559><c> test</c><00:25:40.830><c> and</c><00:25:41.039><c> the</c><00:25:41.519><c> test</c><00:25:42.919><c> matrix</c><00:25:43.919><c> n</c><00:25:44.130><c> stages</c>

00:25:44.779 --> 00:25:44.789 align:start position:0%
under test and the test matrix n stages
 

00:25:44.789 --> 00:25:47.750 align:start position:0%
under test and the test matrix n stages
any<00:25:45.299><c> test</c><00:25:45.779><c> data</c><00:25:45.990><c> dependencies</c><00:25:46.590><c> and</c><00:25:46.889><c> sets</c>

00:25:47.750 --> 00:25:47.760 align:start position:0%
any test data dependencies and sets
 

00:25:47.760 --> 00:25:53.330 align:start position:0%
any test data dependencies and sets
device<00:25:48.090><c> properties</c><00:25:50.990><c> if</c><00:25:51.990><c> additional</c><00:25:52.799><c> setup</c><00:25:53.070><c> is</c>

00:25:53.330 --> 00:25:53.340 align:start position:0%
device properties if additional setup is
 

00:25:53.340 --> 00:25:57.620 align:start position:0%
device properties if additional setup is
necessary<00:25:53.909><c> it</c><00:25:54.659><c> can</c><00:25:54.960><c> all</c><00:25:55.200><c> be</c><00:25:55.470><c> done</c><00:25:55.679><c> here</c><00:25:56.600><c> let</c><00:25:57.600><c> me</c>

00:25:57.620 --> 00:25:57.630 align:start position:0%
necessary it can all be done here let me
 

00:25:57.630 --> 00:26:00.139 align:start position:0%
necessary it can all be done here let me
give<00:25:57.840><c> you</c><00:25:57.960><c> examples</c><00:25:58.730><c> setting</c><00:25:59.730><c> up</c><00:25:59.850><c> a</c><00:25:59.970><c> network</c>

00:26:00.139 --> 00:26:00.149 align:start position:0%
give you examples setting up a network
 

00:26:00.149 --> 00:26:03.110 align:start position:0%
give you examples setting up a network
tunnel<00:26:00.570><c> starting</c><00:26:01.320><c> an</c><00:26:01.409><c> emetic</c><00:26:01.649><c> server</c><00:26:02.120><c> caning</c>

00:26:03.110 --> 00:26:03.120 align:start position:0%
tunnel starting an emetic server caning
 

00:26:03.120 --> 00:26:06.730 align:start position:0%
tunnel starting an emetic server caning
granting<00:26:03.870><c> permissions</c><00:26:04.350><c> and</c><00:26:04.500><c> much</c><00:26:04.919><c> more</c><00:26:05.190><c> and</c>

00:26:06.730 --> 00:26:06.740 align:start position:0%
granting permissions and much more and
 

00:26:06.740 --> 00:26:10.190 align:start position:0%
granting permissions and much more and
finally<00:26:07.740><c> it</c><00:26:08.549><c> prepares</c><00:26:09.389><c> the</c><00:26:09.600><c> device</c><00:26:09.870><c> for</c><00:26:10.139><c> the</c>

00:26:10.190 --> 00:26:10.200 align:start position:0%
finally it prepares the device for the
 

00:26:10.200 --> 00:26:15.710 align:start position:0%
finally it prepares the device for the
next<00:26:10.470><c> step</c><00:26:10.649><c> test</c><00:26:11.490><c> execution</c><00:26:14.360><c> there</c><00:26:15.360><c> are</c><00:26:15.480><c> many</c>

00:26:15.710 --> 00:26:15.720 align:start position:0%
next step test execution there are many
 

00:26:15.720 --> 00:26:19.940 align:start position:0%
next step test execution there are many
ways<00:26:16.100><c> how</c><00:26:17.100><c> we</c><00:26:17.130><c> can</c><00:26:17.279><c> run</c><00:26:17.610><c> an</c><00:26:17.730><c> Android</c><00:26:18.059><c> test</c><00:26:18.950><c> it's</c>

00:26:19.940 --> 00:26:19.950 align:start position:0%
ways how we can run an Android test it's
 

00:26:19.950 --> 00:26:21.409 align:start position:0%
ways how we can run an Android test it's
a<00:26:20.070><c> little</c><00:26:20.309><c> bit</c><00:26:20.460><c> like</c><00:26:20.639><c> running</c><00:26:21.029><c> in</c><00:26:21.120><c> the</c><00:26:21.240><c> real</c>

00:26:21.409 --> 00:26:21.419 align:start position:0%
a little bit like running in the real
 

00:26:21.419 --> 00:26:26.330 align:start position:0%
a little bit like running in the real
world<00:26:22.399><c> here</c><00:26:23.399><c> we</c><00:26:23.519><c> have</c><00:26:23.730><c> Sprint's</c><00:26:25.340><c> with</c>

00:26:26.330 --> 00:26:26.340 align:start position:0%
world here we have Sprint's with
 

00:26:26.340 --> 00:26:29.269 align:start position:0%
world here we have Sprint's with
distance<00:26:26.880><c> and</c><00:26:27.120><c> long</c><00:26:27.330><c> distance</c><00:26:27.720><c> runs</c><00:26:28.130><c> we</c><00:26:29.130><c> also</c>

00:26:29.269 --> 00:26:29.279 align:start position:0%
distance and long distance runs we also
 

00:26:29.279 --> 00:26:31.549 align:start position:0%
distance and long distance runs we also
have<00:26:29.490><c> different</c><00:26:29.909><c> environments</c><00:26:30.559><c> direct</c>

00:26:31.549 --> 00:26:31.559 align:start position:0%
have different environments direct
 

00:26:31.559 --> 00:26:35.149 align:start position:0%
have different environments direct
running<00:26:32.809><c> Road</c><00:26:33.809><c> running</c><00:26:34.230><c> cross-country</c>

00:26:35.149 --> 00:26:35.159 align:start position:0%
running Road running cross-country
 

00:26:35.159 --> 00:26:39.850 align:start position:0%
running Road running cross-country
running<00:26:35.730><c> and</c><00:26:36.169><c> mountain</c><00:26:37.169><c> running</c><00:26:37.440><c> a</c><00:26:38.600><c> unit</c><00:26:39.600><c> test</c>

00:26:39.850 --> 00:26:39.860 align:start position:0%
running and mountain running a unit test
 

00:26:39.860 --> 00:26:42.620 align:start position:0%
running and mountain running a unit test
on<00:26:40.860><c> your</c><00:26:41.370><c> local</c><00:26:41.669><c> workstation</c><00:26:41.880><c> is</c><00:26:42.450><c> like</c><00:26:42.600><c> a</c>

00:26:42.620 --> 00:26:42.630 align:start position:0%
on your local workstation is like a
 

00:26:42.630 --> 00:26:46.879 align:start position:0%
on your local workstation is like a
sprint<00:26:43.049><c> as</c><00:26:43.610><c> fast</c><00:26:44.610><c> as</c><00:26:45.330><c> possible</c><00:26:46.200><c> to</c><00:26:46.529><c> the</c><00:26:46.620><c> finish</c>

00:26:46.879 --> 00:26:46.889 align:start position:0%
sprint as fast as possible to the finish
 

00:26:46.889 --> 00:26:50.810 align:start position:0%
sprint as fast as possible to the finish
line<00:26:48.080><c> the</c><00:26:49.080><c> tests</c><00:26:49.559><c> read</c><00:26:49.769><c> on</c><00:26:50.039><c> your</c><00:26:50.340><c> continuous</c>

00:26:50.810 --> 00:26:50.820 align:start position:0%
line the tests read on your continuous
 

00:26:50.820 --> 00:26:54.169 align:start position:0%
line the tests read on your continuous
integration<00:26:51.029><c> server</c><00:26:51.570><c> is</c><00:26:52.289><c> the</c><00:26:52.350><c> marathon</c><00:26:53.179><c> the</c>

00:26:54.169 --> 00:26:54.179 align:start position:0%
integration server is the marathon the
 

00:26:54.179 --> 00:26:57.460 align:start position:0%
integration server is the marathon the
goal<00:26:54.450><c> is</c><00:26:54.779><c> to</c><00:26:55.100><c> get</c><00:26:56.100><c> to</c><00:26:56.519><c> the</c><00:26:56.639><c> finish</c><00:26:57.000><c> line</c><00:26:57.240><c> and</c>

00:26:57.460 --> 00:26:57.470 align:start position:0%
goal is to get to the finish line and
 

00:26:57.470 --> 00:27:04.879 align:start position:0%
goal is to get to the finish line and
not<00:26:58.470><c> to</c><00:26:58.710><c> fail</c><00:26:58.950><c> along</c><00:26:59.429><c> the</c><00:26:59.639><c> way</c><00:27:02.690><c> today</c><00:27:03.889><c> these</c>

00:27:04.879 --> 00:27:04.889 align:start position:0%
not to fail along the way today these
 

00:27:04.889 --> 00:27:07.419 align:start position:0%
not to fail along the way today these
tests<00:27:05.370><c> are</c><00:27:05.429><c> executed</c><00:27:06.029><c> in</c><00:27:06.090><c> different</c><00:27:06.480><c> ways</c>

00:27:07.419 --> 00:27:07.429 align:start position:0%
tests are executed in different ways
 

00:27:07.429 --> 00:27:10.129 align:start position:0%
tests are executed in different ways
from<00:27:08.429><c> the</c><00:27:08.610><c> command</c><00:27:08.909><c> line</c><00:27:09.000><c> from</c><00:27:09.840><c> Android</c>

00:27:10.129 --> 00:27:10.139 align:start position:0%
from the command line from Android
 

00:27:10.139 --> 00:27:13.340 align:start position:0%
from the command line from Android
studio<00:27:10.320><c> or</c><00:27:11.179><c> triggered</c><00:27:12.179><c> automatically</c><00:27:12.779><c> when</c>

00:27:13.340 --> 00:27:13.350 align:start position:0%
studio or triggered automatically when
 

00:27:13.350 --> 00:27:17.899 align:start position:0%
studio or triggered automatically when
you<00:27:13.470><c> submit</c><00:27:14.809><c> with</c><00:27:15.809><c> project</c><00:27:16.289><c> nitrogen</c><00:27:16.909><c> this</c>

00:27:17.899 --> 00:27:17.909 align:start position:0%
you submit with project nitrogen this
 

00:27:17.909 --> 00:27:22.610 align:start position:0%
you submit with project nitrogen this
will<00:27:18.299><c> become</c><00:27:18.630><c> consistent</c><00:27:20.840><c> we</c><00:27:21.840><c> provide</c><00:27:22.320><c> a</c>

00:27:22.610 --> 00:27:22.620 align:start position:0%
will become consistent we provide a
 

00:27:22.620 --> 00:27:26.180 align:start position:0%
will become consistent we provide a
valid<00:27:22.950><c> affiant</c><00:27:23.370><c> protocol</c><00:27:23.850><c> and</c><00:27:24.559><c> our</c><00:27:25.559><c> unifying</c>

00:27:26.180 --> 00:27:26.190 align:start position:0%
valid affiant protocol and our unifying
 

00:27:26.190 --> 00:27:31.250 align:start position:0%
valid affiant protocol and our unifying
all<00:27:26.490><c> the</c><00:27:27.029><c> Android</c><00:27:27.360><c> test</c><00:27:27.570><c> offerings</c><00:27:30.260><c> natural</c>

00:27:31.250 --> 00:27:31.260 align:start position:0%
all the Android test offerings natural
 

00:27:31.260 --> 00:27:33.860 align:start position:0%
all the Android test offerings natural
chain<00:27:31.440><c> uses</c><00:27:32.100><c> our</c><00:27:32.279><c> own</c><00:27:32.580><c> device</c><00:27:33.029><c> infrastructure</c>

00:27:33.860 --> 00:27:33.870 align:start position:0%
chain uses our own device infrastructure
 

00:27:33.870 --> 00:27:39.620 align:start position:0%
chain uses our own device infrastructure
to<00:27:34.350><c> run</c><00:27:34.529><c> your</c><00:27:34.740><c> tests</c><00:27:36.950><c> Android</c><00:27:38.630><c> Orchestrator</c>

00:27:39.620 --> 00:27:39.630 align:start position:0%
to run your tests Android Orchestrator
 

00:27:39.630 --> 00:27:45.769 align:start position:0%
to run your tests Android Orchestrator
and<00:27:40.580><c> enrich</c><00:27:41.580><c> a</c><00:27:41.730><c> unit</c><00:27:41.970><c> runner</c><00:27:44.269><c> you</c><00:27:45.269><c> can</c><00:27:45.419><c> already</c>

00:27:45.769 --> 00:27:45.779 align:start position:0%
and enrich a unit runner you can already
 

00:27:45.779 --> 00:27:48.590 align:start position:0%
and enrich a unit runner you can already
enable<00:27:46.549><c> the</c><00:27:47.549><c> own</c><00:27:47.669><c> device</c><00:27:47.940><c> infrastructure</c>

00:27:48.590 --> 00:27:48.600 align:start position:0%
enable the own device infrastructure
 

00:27:48.600 --> 00:27:51.259 align:start position:0%
enable the own device infrastructure
today<00:27:48.980><c> it</c><00:27:49.980><c> has</c><00:27:50.279><c> been</c><00:27:50.610><c> available</c><00:27:50.940><c> since</c>

00:27:51.259 --> 00:27:51.269 align:start position:0%
today it has been available since
 

00:27:51.269 --> 00:27:54.830 align:start position:0%
today it has been available since
Android<00:27:51.779><c> studio</c><00:27:51.990><c> 3.0</c>

00:27:54.830 --> 00:27:54.840 align:start position:0%
 
 

00:27:54.840 --> 00:27:58.850 align:start position:0%
 
the<00:27:55.840><c> orchestrator</c><00:27:56.670><c> collects</c><00:27:57.670><c> your</c><00:27:57.790><c> tests</c><00:27:58.210><c> and</c>

00:27:58.850 --> 00:27:58.860 align:start position:0%
the orchestrator collects your tests and
 

00:27:58.860 --> 00:28:03.780 align:start position:0%
the orchestrator collects your tests and
kicks<00:27:59.860><c> off</c><00:28:00.070><c> test</c><00:28:00.580><c> execution</c><00:28:02.100><c> by</c><00:28:03.100><c> running</c><00:28:03.400><c> each</c>

00:28:03.780 --> 00:28:03.790 align:start position:0%
kicks off test execution by running each
 

00:28:03.790 --> 00:28:07.770 align:start position:0%
kicks off test execution by running each
test<00:28:04.360><c> in</c><00:28:04.930><c> a</c><00:28:05.110><c> separate</c><00:28:05.560><c> process</c><00:28:06.420><c> shared</c><00:28:07.420><c> state</c>

00:28:07.770 --> 00:28:07.780 align:start position:0%
test in a separate process shared state
 

00:28:07.780 --> 00:28:13.040 align:start position:0%
test in a separate process shared state
is<00:28:08.080><c> minimized</c><00:28:08.590><c> and</c><00:28:09.450><c> crashes</c><00:28:10.450><c> are</c><00:28:10.630><c> isolated</c>

00:28:13.040 --> 00:28:13.050 align:start position:0%
is minimized and crashes are isolated
 

00:28:13.050 --> 00:28:16.920 align:start position:0%
is minimized and crashes are isolated
moreover<00:28:14.370><c> your</c><00:28:15.370><c> tests</c><00:28:15.730><c> are</c><00:28:15.790><c> executed</c><00:28:16.630><c> in</c><00:28:16.810><c> a</c>

00:28:16.920 --> 00:28:16.930 align:start position:0%
moreover your tests are executed in a
 

00:28:16.930 --> 00:28:20.370 align:start position:0%
moreover your tests are executed in a
familiar<00:28:17.200><c> j-unit</c><00:28:18.100><c> environment</c><00:28:19.260><c> provided</c><00:28:20.260><c> by</c>

00:28:20.370 --> 00:28:20.380 align:start position:0%
familiar j-unit environment provided by
 

00:28:20.380 --> 00:28:25.070 align:start position:0%
familiar j-unit environment provided by
an<00:28:20.530><c> original</c><00:28:20.650><c> runner</c><00:28:23.400><c> the</c><00:28:24.400><c> orchestrator</c>

00:28:25.070 --> 00:28:25.080 align:start position:0%
an original runner the orchestrator
 

00:28:25.080 --> 00:28:28.290 align:start position:0%
an original runner the orchestrator
collects<00:28:26.080><c> all</c><00:28:26.320><c> test</c><00:28:26.620><c> results</c><00:28:27.300><c> additional</c>

00:28:28.290 --> 00:28:28.300 align:start position:0%
collects all test results additional
 

00:28:28.300 --> 00:28:30.480 align:start position:0%
collects all test results additional
artifacts<00:28:28.780><c> and</c><00:28:29.020><c> streams</c><00:28:29.920><c> it</c><00:28:30.100><c> back</c><00:28:30.280><c> to</c>

00:28:30.480 --> 00:28:30.490 align:start position:0%
artifacts and streams it back to
 

00:28:30.490 --> 00:28:38.640 align:start position:0%
artifacts and streams it back to
nitrogen-nitrogen<00:28:36.870><c> provides</c><00:28:37.870><c> a</c><00:28:38.050><c> unified</c>

00:28:38.640 --> 00:28:38.650 align:start position:0%
nitrogen-nitrogen provides a unified
 

00:28:38.650 --> 00:28:40.760 align:start position:0%
nitrogen-nitrogen provides a unified
reporting<00:28:39.250><c> format</c><00:28:39.580><c> for</c><00:28:39.910><c> these</c><00:28:40.090><c> test</c><00:28:40.420><c> results</c>

00:28:40.760 --> 00:28:40.770 align:start position:0%
reporting format for these test results
 

00:28:40.770 --> 00:28:45.300 align:start position:0%
reporting format for these test results
in<00:28:41.790><c> addition</c><00:28:42.840><c> it</c><00:28:43.840><c> provides</c><00:28:43.900><c> a</c><00:28:44.440><c> huge</c><00:28:44.860><c> selection</c>

00:28:45.300 --> 00:28:45.310 align:start position:0%
in addition it provides a huge selection
 

00:28:45.310 --> 00:28:49.040 align:start position:0%
in addition it provides a huge selection
of<00:28:45.610><c> test</c><00:28:46.330><c> output</c><00:28:46.540><c> data</c><00:28:46.920><c> such</c><00:28:47.920><c> as</c><00:28:47.970><c> logcat</c>

00:28:49.040 --> 00:28:49.050 align:start position:0%
of test output data such as logcat
 

00:28:49.050 --> 00:28:53.250 align:start position:0%
of test output data such as logcat
screenshots<00:28:50.050><c> video</c><00:28:50.880><c> profiling</c><00:28:51.880><c> data</c><00:28:52.260><c> battery</c>

00:28:53.250 --> 00:28:53.260 align:start position:0%
screenshots video profiling data battery
 

00:28:53.260 --> 00:28:57.240 align:start position:0%
screenshots video profiling data battery
performance<00:28:53.530><c> and</c><00:28:54.010><c> much</c><00:28:54.280><c> more</c><00:28:55.350><c> all</c><00:28:56.350><c> artifacts</c>

00:28:57.240 --> 00:28:57.250 align:start position:0%
performance and much more all artifacts
 

00:28:57.250 --> 00:29:01.230 align:start position:0%
performance and much more all artifacts
are<00:28:57.460><c> scoped</c><00:28:57.820><c> per</c><00:28:58.240><c> test</c><00:28:58.570><c> this</c><00:28:59.470><c> means</c><00:28:59.770><c> that</c><00:29:00.240><c> for</c>

00:29:01.230 --> 00:29:01.240 align:start position:0%
are scoped per test this means that for
 

00:29:01.240 --> 00:29:05.460 align:start position:0%
are scoped per test this means that for
example<00:29:01.300><c> a</c><00:29:02.050><c> Lockett</c><00:29:02.860><c> snippet</c><00:29:03.280><c> is</c><00:29:04.110><c> reduced</c><00:29:05.110><c> to</c>

00:29:05.460 --> 00:29:05.470 align:start position:0%
example a Lockett snippet is reduced to
 

00:29:05.470 --> 00:29:09.570 align:start position:0%
example a Lockett snippet is reduced to
the<00:29:05.830><c> test</c><00:29:06.160><c> method</c><00:29:07.590><c> no</c><00:29:08.590><c> more</c><00:29:08.830><c> digging</c><00:29:09.040><c> through</c>

00:29:09.570 --> 00:29:09.580 align:start position:0%
the test method no more digging through
 

00:29:09.580 --> 00:29:14.340 align:start position:0%
the test method no more digging through
hundreds<00:29:09.970><c> of</c><00:29:10.090><c> lines</c><00:29:10.300><c> of</c><00:29:10.540><c> Lockett</c><00:29:13.110><c> so</c><00:29:14.110><c> let</c><00:29:14.260><c> me</c>

00:29:14.340 --> 00:29:14.350 align:start position:0%
hundreds of lines of Lockett so let me
 

00:29:14.350 --> 00:29:16.740 align:start position:0%
hundreds of lines of Lockett so let me
show<00:29:14.530><c> you</c><00:29:14.590><c> how</c><00:29:15.040><c> nitrogen</c><00:29:15.610><c> improves</c><00:29:16.450><c> the</c>

00:29:16.740 --> 00:29:16.750 align:start position:0%
show you how nitrogen improves the
 

00:29:16.750 --> 00:29:20.720 align:start position:0%
show you how nitrogen improves the
entire<00:29:17.490><c> testing</c><00:29:18.490><c> flow</c><00:29:18.700><c> on</c><00:29:18.910><c> Android</c><00:29:19.470><c> first</c>

00:29:20.720 --> 00:29:20.730 align:start position:0%
entire testing flow on Android first
 

00:29:20.730 --> 00:29:23.850 align:start position:0%
entire testing flow on Android first
nitrogen<00:29:21.730><c> finds</c><00:29:22.090><c> the</c><00:29:22.300><c> device</c><00:29:22.570><c> and</c><00:29:22.900><c> configures</c>

00:29:23.850 --> 00:29:23.860 align:start position:0%
nitrogen finds the device and configures
 

00:29:23.860 --> 00:29:28.410 align:start position:0%
nitrogen finds the device and configures
it<00:29:23.980><c> for</c><00:29:24.220><c> the</c><00:29:24.310><c> test</c><00:29:24.550><c> run</c><00:29:25.920><c> second</c><00:29:26.920><c> it</c><00:29:27.460><c> runs</c><00:29:27.910><c> tests</c>

00:29:28.410 --> 00:29:28.420 align:start position:0%
it for the test run second it runs tests
 

00:29:28.420 --> 00:29:32.360 align:start position:0%
it for the test run second it runs tests
in<00:29:28.540><c> isolation</c><00:29:29.370><c> using</c><00:29:30.370><c> the</c><00:29:30.670><c> orchestrator</c><00:29:31.180><c> and</c>

00:29:32.360 --> 00:29:32.370 align:start position:0%
in isolation using the orchestrator and
 

00:29:32.370 --> 00:29:37.650 align:start position:0%
in isolation using the orchestrator and
finally<00:29:33.870><c> while</c><00:29:34.870><c> tests</c><00:29:35.380><c> are</c><00:29:35.470><c> running</c><00:29:36.660><c> nitrogen</c>

00:29:37.650 --> 00:29:37.660 align:start position:0%
finally while tests are running nitrogen
 

00:29:37.660 --> 00:29:40.110 align:start position:0%
finally while tests are running nitrogen
host-side<00:29:38.500><c> infrastructure</c><00:29:39.310><c> will</c><00:29:40.090><c> be</c>

00:29:40.110 --> 00:29:40.120 align:start position:0%
host-side infrastructure will be
 

00:29:40.120 --> 00:29:42.390 align:start position:0%
host-side infrastructure will be
streaming<00:29:40.780><c> the</c><00:29:41.200><c> test</c><00:29:41.530><c> results</c><00:29:42.010><c> from</c><00:29:42.280><c> the</c>

00:29:42.390 --> 00:29:42.400 align:start position:0%
streaming the test results from the
 

00:29:42.400 --> 00:29:45.870 align:start position:0%
streaming the test results from the
device<00:29:43.500><c> pulling</c><00:29:44.500><c> down</c><00:29:44.680><c> all</c><00:29:44.980><c> test</c><00:29:45.370><c> output</c><00:29:45.550><c> data</c>

00:29:45.870 --> 00:29:45.880 align:start position:0%
device pulling down all test output data
 

00:29:45.880 --> 00:29:51.420 align:start position:0%
device pulling down all test output data
and<00:29:46.210><c> feeding</c><00:29:47.020><c> it</c><00:29:47.260><c> back</c><00:29:47.410><c> to</c><00:29:47.680><c> you</c><00:29:49.800><c> with</c><00:29:50.800><c> nitrogen</c>

00:29:51.420 --> 00:29:51.430 align:start position:0%
and feeding it back to you with nitrogen
 

00:29:51.430 --> 00:29:56.600 align:start position:0%
and feeding it back to you with nitrogen
all<00:29:51.700><c> this</c><00:29:52.270><c> complexity</c><00:29:52.840><c> is</c><00:29:53.250><c> hidden</c><00:29:54.250><c> from</c><00:29:54.430><c> you</c>

00:29:56.600 --> 00:29:56.610 align:start position:0%
all this complexity is hidden from you
 

00:29:56.610 --> 00:29:58.890 align:start position:0%
all this complexity is hidden from you
whether<00:29:57.610><c> you</c><00:29:57.910><c> are</c><00:29:57.970><c> running</c><00:29:58.210><c> a</c><00:29:58.480><c> test</c><00:29:58.720><c> on</c>

00:29:58.890 --> 00:29:58.900 align:start position:0%
whether you are running a test on
 

00:29:58.900 --> 00:30:04.750 align:start position:0%
whether you are running a test on
Android<00:29:59.410><c> studio</c><00:30:00.120><c> or</c><00:30:01.120><c> on</c><00:30:01.620><c> a</c><00:30:02.620><c> CI</c><00:30:02.920><c> server</c>

00:30:04.750 --> 00:30:04.760 align:start position:0%
Android studio or on a CI server
 

00:30:04.760 --> 00:30:09.050 align:start position:0%
Android studio or on a CI server
nitrogen<00:30:05.760><c> is</c><00:30:06.410><c> the</c><00:30:07.410><c> single</c><00:30:08.070><c> entry</c><00:30:08.340><c> point</c><00:30:08.430><c> for</c>

00:30:09.050 --> 00:30:09.060 align:start position:0%
nitrogen is the single entry point for
 

00:30:09.060 --> 00:30:13.850 align:start position:0%
nitrogen is the single entry point for
all<00:30:09.270><c> Android</c><00:30:10.050><c> tests</c><00:30:11.990><c> it</c><00:30:12.990><c> works</c><00:30:13.260><c> from</c><00:30:13.410><c> a</c><00:30:13.560><c> sprint</c>

00:30:13.850 --> 00:30:13.860 align:start position:0%
all Android tests it works from a sprint
 

00:30:13.860 --> 00:30:18.740 align:start position:0%
all Android tests it works from a sprint
to<00:30:14.160><c> a</c><00:30:14.610><c> marathon</c><00:30:16.910><c> natural</c><00:30:17.910><c> Chen</c><00:30:18.120><c> can</c><00:30:18.420><c> regress</c>

00:30:18.740 --> 00:30:18.750 align:start position:0%
to a marathon natural Chen can regress
 

00:30:18.750 --> 00:30:22.090 align:start position:0%
to a marathon natural Chen can regress
the<00:30:18.930><c> device</c><00:30:19.230><c> in</c><00:30:19.590><c> a</c><00:30:19.830><c> fire</c><00:30:20.010><c> base</c><00:30:20.220><c> test</c><00:30:20.520><c> lab</c>

00:30:22.090 --> 00:30:22.100 align:start position:0%
the device in a fire base test lab
 

00:30:22.100 --> 00:30:26.450 align:start position:0%
the device in a fire base test lab
reliably<00:30:23.100><c> running</c><00:30:23.640><c> your</c><00:30:23.790><c> tests</c><00:30:25.460><c> returning</c>

00:30:26.450 --> 00:30:26.460 align:start position:0%
reliably running your tests returning
 

00:30:26.460 --> 00:30:30.770 align:start position:0%
reliably running your tests returning
unified<00:30:26.880><c> test</c><00:30:27.090><c> results</c><00:30:29.180><c> nitrogen</c><00:30:30.180><c> supports</c>

00:30:30.770 --> 00:30:30.780 align:start position:0%
unified test results nitrogen supports
 

00:30:30.780 --> 00:30:35.450 align:start position:0%
unified test results nitrogen supports
Google<00:30:31.140><c> Cloud</c><00:30:33.290><c> from</c><00:30:34.290><c> your</c><00:30:34.440><c> workstation</c><00:30:34.740><c> you</c>

00:30:35.450 --> 00:30:35.460 align:start position:0%
Google Cloud from your workstation you
 

00:30:35.460 --> 00:30:38.060 align:start position:0%
Google Cloud from your workstation you
can<00:30:35.640><c> deploy</c><00:30:35.940><c> and</c><00:30:36.360><c> run</c><00:30:36.540><c> tests</c><00:30:37.110><c> on</c><00:30:37.320><c> the</c><00:30:37.830><c> real</c>

00:30:38.060 --> 00:30:38.070 align:start position:0%
can deploy and run tests on the real
 

00:30:38.070 --> 00:30:43.520 align:start position:0%
can deploy and run tests on the real
device<00:30:38.400><c> or</c><00:30:39.240><c> on</c><00:30:39.450><c> a</c><00:30:39.480><c> virtual</c><00:30:39.870><c> device</c><00:30:42.530><c> nitrogen</c>

00:30:43.520 --> 00:30:43.530 align:start position:0%
device or on a virtual device nitrogen
 

00:30:43.530 --> 00:30:47.150 align:start position:0%
device or on a virtual device nitrogen
works<00:30:44.100><c> seamlessly</c><00:30:44.430><c> with</c><00:30:44.880><c> Rob</c><00:30:45.180><c> Electric</c><00:30:46.160><c> now</c>

00:30:47.150 --> 00:30:47.160 align:start position:0%
works seamlessly with Rob Electric now
 

00:30:47.160 --> 00:30:50.060 align:start position:0%
works seamlessly with Rob Electric now
we<00:30:48.030><c> can</c><00:30:48.270><c> treat</c><00:30:49.050><c> Rove</c><00:30:49.350><c> electric</c><00:30:49.860><c> as</c><00:30:50.010><c> a</c>

00:30:50.060 --> 00:30:50.070 align:start position:0%
we can treat Rove electric as a
 

00:30:50.070 --> 00:30:55.960 align:start position:0%
we can treat Rove electric as a
simulated<00:30:51.030><c> device</c><00:30:53.210><c> with</c><00:30:54.210><c> raw</c><00:30:54.450><c> electric</c><00:30:54.900><c> 4.0</c>

00:30:55.960 --> 00:30:55.970 align:start position:0%
simulated device with raw electric 4.0
 

00:30:55.970 --> 00:30:58.970 align:start position:0%
simulated device with raw electric 4.0
we<00:30:56.970><c> have</c><00:30:57.180><c> made</c><00:30:57.450><c> big</c><00:30:57.960><c> improvements</c><00:30:58.200><c> in</c>

00:30:58.970 --> 00:30:58.980 align:start position:0%
we have made big improvements in
 

00:30:58.980 --> 00:31:03.560 align:start position:0%
we have made big improvements in
start-up<00:30:59.640><c> time</c><00:30:59.880><c> and</c><00:31:00.180><c> memory</c><00:31:01.110><c> consumption</c><00:31:02.570><c> raw</c>

00:31:03.560 --> 00:31:03.570 align:start position:0%
start-up time and memory consumption raw
 

00:31:03.570 --> 00:31:12.180 align:start position:0%
start-up time and memory consumption raw
electric<00:31:03.960><c> for</c><00:31:04.140><c> bond</c><00:31:04.320><c> oil</c><00:31:04.620><c> is</c><00:31:04.770><c> released</c><00:31:05.760><c> today</c>

00:31:12.180 --> 00:31:12.190 align:start position:0%
 
 

00:31:12.190 --> 00:31:16.290 align:start position:0%
 
and<00:31:13.180><c> if</c><00:31:13.840><c> this</c><00:31:14.020><c> is</c><00:31:14.260><c> not</c><00:31:14.440><c> enough</c><00:31:15.300><c> nitrogen</c>

00:31:16.290 --> 00:31:16.300 align:start position:0%
and if this is not enough nitrogen
 

00:31:16.300 --> 00:31:19.170 align:start position:0%
and if this is not enough nitrogen
supports<00:31:17.290><c> your</c><00:31:17.380><c> custom</c><00:31:17.740><c> needs</c><00:31:18.060><c> for</c><00:31:19.060><c> example</c>

00:31:19.170 --> 00:31:19.180 align:start position:0%
supports your custom needs for example
 

00:31:19.180 --> 00:31:26.580 align:start position:0%
supports your custom needs for example
if<00:31:20.040><c> you</c><00:31:21.040><c> have</c><00:31:21.220><c> an</c><00:31:21.400><c> in-house</c><00:31:21.850><c> device</c><00:31:22.630><c> let</c><00:31:25.590><c> allow</c>

00:31:26.580 --> 00:31:26.590 align:start position:0%
if you have an in-house device let allow
 

00:31:26.590 --> 00:31:31.440 align:start position:0%
if you have an in-house device let allow
me<00:31:26.740><c> to</c><00:31:26.890><c> summarize</c><00:31:29.160><c> previously</c><00:31:30.160><c> you</c><00:31:30.940><c> had</c><00:31:31.240><c> to</c>

00:31:31.440 --> 00:31:31.450 align:start position:0%
me to summarize previously you had to
 

00:31:31.450 --> 00:31:34.020 align:start position:0%
me to summarize previously you had to
learn<00:31:31.600><c> multiple</c><00:31:32.380><c> approaches</c><00:31:32.920><c> for</c><00:31:33.550><c> doing</c><00:31:33.880><c> the</c>

00:31:34.020 --> 00:31:34.030 align:start position:0%
learn multiple approaches for doing the
 

00:31:34.030 --> 00:31:39.600 align:start position:0%
learn multiple approaches for doing the
same<00:31:34.300><c> thing</c><00:31:36.120><c> tools</c><00:31:37.230><c> like</c><00:31:38.230><c> the</c><00:31:38.380><c> mobility</c><00:31:38.950><c> to</c>

00:31:39.600 --> 00:31:39.610 align:start position:0%
same thing tools like the mobility to
 

00:31:39.610 --> 00:31:41.880 align:start position:0%
same thing tools like the mobility to
move<00:31:39.850><c> between</c><00:31:40.150><c> the</c><00:31:40.660><c> layers</c><00:31:40.900><c> of</c><00:31:41.290><c> the</c><00:31:41.530><c> pyramid</c>

00:31:41.880 --> 00:31:41.890 align:start position:0%
move between the layers of the pyramid
 

00:31:41.890 --> 00:31:51.240 align:start position:0%
move between the layers of the pyramid
you<00:31:44.460><c> had</c><00:31:45.460><c> to</c><00:31:45.640><c> choose</c><00:31:45.880><c> wisely</c><00:31:49.620><c> we</c><00:31:50.620><c> have</c><00:31:50.800><c> reduced</c>

00:31:51.240 --> 00:31:51.250 align:start position:0%
you had to choose wisely we have reduced
 

00:31:51.250 --> 00:31:54.590 align:start position:0%
you had to choose wisely we have reduced
the<00:31:51.370><c> cognitive</c><00:31:51.820><c> load</c><00:31:52.260><c> by</c><00:31:53.260><c> providing</c><00:31:53.650><c> you</c><00:31:53.980><c> a</c>

00:31:54.590 --> 00:31:54.600 align:start position:0%
the cognitive load by providing you a
 

00:31:54.600 --> 00:31:58.620 align:start position:0%
the cognitive load by providing you a
single<00:31:55.600><c> set</c><00:31:55.840><c> of</c><00:31:56.220><c> api's</c><00:31:57.250><c> that</c><00:31:58.060><c> work</c><00:31:58.300><c> across</c>

00:31:58.620 --> 00:31:58.630 align:start position:0%
single set of api's that work across
 

00:31:58.630 --> 00:32:02.340 align:start position:0%
single set of api's that work across
environments<00:31:59.070><c> for</c><00:32:00.070><c> both</c><00:32:00.420><c> on</c><00:32:01.420><c> and</c><00:32:01.900><c> off</c>

00:32:02.340 --> 00:32:02.350 align:start position:0%
environments for both on and off
 

00:32:02.350 --> 00:32:07.550 align:start position:0%
environments for both on and off
scenarios<00:32:03.010><c> and</c><00:32:04.170><c> a</c><00:32:05.460><c> single</c><00:32:06.460><c> entry</c><00:32:06.790><c> point</c><00:32:06.820><c> for</c>

00:32:07.550 --> 00:32:07.560 align:start position:0%
scenarios and a single entry point for
 

00:32:07.560 --> 00:32:11.150 align:start position:0%
scenarios and a single entry point for
Android<00:32:08.560><c> tests</c><00:32:08.980><c> with</c><00:32:09.820><c> the</c><00:32:09.970><c> flexibility</c><00:32:10.630><c> to</c>

00:32:11.150 --> 00:32:11.160 align:start position:0%
Android tests with the flexibility to
 

00:32:11.160 --> 00:32:13.680 align:start position:0%
Android tests with the flexibility to
customize<00:32:12.160><c> any</c><00:32:12.400><c> point</c><00:32:13.090><c> in</c><00:32:13.360><c> the</c><00:32:13.480><c> test</c>

00:32:13.680 --> 00:32:13.690 align:start position:0%
customize any point in the test
 

00:32:13.690 --> 00:32:20.610 align:start position:0%
customize any point in the test
invocation<00:32:17.790><c> jetpack</c><00:32:18.790><c> with</c><00:32:19.480><c> nitrogen</c><00:32:19.900><c> is</c><00:32:20.560><c> a</c>

00:32:20.610 --> 00:32:20.620 align:start position:0%
invocation jetpack with nitrogen is a
 

00:32:20.620 --> 00:32:22.890 align:start position:0%
invocation jetpack with nitrogen is a
child<00:32:21.040><c> leap</c><00:32:21.280><c> forward</c><00:32:21.730><c> in</c><00:32:21.940><c> test</c><00:32:22.450><c> automation</c>

00:32:22.890 --> 00:32:22.900 align:start position:0%
child leap forward in test automation
 

00:32:22.900 --> 00:32:30.720 align:start position:0%
child leap forward in test automation
for<00:32:23.320><c> Android</c><00:32:26.880><c> write</c><00:32:27.880><c> your</c><00:32:28.060><c> test</c><00:32:28.300><c> once</c><00:32:29.550><c> run</c><00:32:30.550><c> it</c>

00:32:30.720 --> 00:32:30.730 align:start position:0%
for Android write your test once run it
 

00:32:30.730 --> 00:32:34.760 align:start position:0%
for Android write your test once run it
everywhere

00:32:34.760 --> 00:32:34.770 align:start position:0%
 
 

00:32:34.770 --> 00:32:41.920 align:start position:0%
 
[Applause]

00:32:41.920 --> 00:32:41.930 align:start position:0%
[Applause]
 

00:32:41.930 --> 00:32:46.520 align:start position:0%
[Applause]
this<00:32:42.930><c> is</c><00:32:43.080><c> just</c><00:32:43.320><c> the</c><00:32:43.410><c> beginning</c><00:32:44.780><c> now</c><00:32:45.780><c> you</c><00:32:46.230><c> have</c>

00:32:46.520 --> 00:32:46.530 align:start position:0%
this is just the beginning now you have
 

00:32:46.530 --> 00:32:50.920 align:start position:0%
this is just the beginning now you have
both<00:32:46.860><c> the</c><00:32:47.730><c> tools</c><00:32:48.060><c> and</c><00:32:48.620><c> the</c><00:32:49.620><c> knowledge</c><00:32:49.830><c> to</c>

00:32:50.920 --> 00:32:50.930 align:start position:0%
both the tools and the knowledge to
 

00:32:50.930 --> 00:32:55.390 align:start position:0%
both the tools and the knowledge to
accelerate<00:32:51.930><c> your</c><00:32:52.080><c> testing</c><00:32:52.560><c> experience</c><00:32:53.070><c> I</c>

00:32:55.390 --> 00:32:55.400 align:start position:0%
 
 

00:32:55.400 --> 00:32:58.490 align:start position:0%
 
strongly<00:32:56.400><c> encourage</c><00:32:56.880><c> you</c><00:32:57.600><c> to</c><00:32:57.660><c> check</c><00:32:58.230><c> out</c><00:32:58.260><c> our</c>

00:32:58.490 --> 00:32:58.500 align:start position:0%
strongly encourage you to check out our
 

00:32:58.500 --> 00:33:02.980 align:start position:0%
strongly encourage you to check out our
collabs<00:33:00.440><c> especially</c><00:33:01.440><c> our</c><00:33:01.710><c> latest</c><00:33:02.130><c> edition</c>

00:33:02.980 --> 00:33:02.990 align:start position:0%
collabs especially our latest edition
 

00:33:02.990 --> 00:33:08.720 align:start position:0%
collabs especially our latest edition
building<00:33:03.990><c> Android</c><00:33:04.500><c> apps</c><00:33:04.860><c> with</c><00:33:05.280><c> basil</c><00:33:07.730><c> basil</c>

00:33:08.720 --> 00:33:08.730 align:start position:0%
building Android apps with basil basil
 

00:33:08.730 --> 00:33:10.820 align:start position:0%
building Android apps with basil basil
is<00:33:09.180><c> the</c><00:33:09.450><c> open</c><00:33:09.690><c> source</c><00:33:09.840><c> version</c><00:33:09.960><c> of</c><00:33:10.500><c> our</c>

00:33:10.820 --> 00:33:10.830 align:start position:0%
is the open source version of our
 

00:33:10.830 --> 00:33:15.170 align:start position:0%
is the open source version of our
internal<00:33:11.400><c> build</c><00:33:11.670><c> system</c><00:33:12.920><c> allowing</c><00:33:13.920><c> you</c><00:33:14.430><c> to</c>

00:33:15.170 --> 00:33:15.180 align:start position:0%
internal build system allowing you to
 

00:33:15.180 --> 00:33:19.930 align:start position:0%
internal build system allowing you to
build<00:33:15.480><c> large</c><00:33:15.840><c> Android</c><00:33:16.290><c> apps</c><00:33:16.530><c> at</c><00:33:16.830><c> Google</c><00:33:17.100><c> scale</c>

00:33:19.930 --> 00:33:19.940 align:start position:0%
 
 

00:33:19.940 --> 00:33:23.630 align:start position:0%
 
if<00:33:20.940><c> you</c><00:33:21.390><c> have</c><00:33:21.660><c> further</c><00:33:21.870><c> questions</c><00:33:22.020><c> or</c><00:33:22.830><c> if</c><00:33:23.550><c> you</c>

00:33:23.630 --> 00:33:23.640 align:start position:0%
if you have further questions or if you
 

00:33:23.640 --> 00:33:25.280 align:start position:0%
if you have further questions or if you
would<00:33:23.760><c> like</c><00:33:24.030><c> to</c><00:33:24.240><c> discuss</c><00:33:24.690><c> your</c><00:33:24.930><c> testing</c>

00:33:25.280 --> 00:33:25.290 align:start position:0%
would like to discuss your testing
 

00:33:25.290 --> 00:33:29.600 align:start position:0%
would like to discuss your testing
strategy<00:33:26.570><c> come</c><00:33:27.570><c> find</c><00:33:27.900><c> us</c><00:33:28.190><c> tomorrow</c><00:33:29.190><c> morning</c>

00:33:29.600 --> 00:33:29.610 align:start position:0%
strategy come find us tomorrow morning
 

00:33:29.610 --> 00:33:34.160 align:start position:0%
strategy come find us tomorrow morning
at<00:33:30.330><c> 11</c><00:33:30.900><c> a.m.</c><00:33:32.030><c> in</c><00:33:33.030><c> the</c><00:33:33.090><c> office</c><00:33:33.480><c> our</c><00:33:33.630><c> stand</c><00:33:33.960><c> in</c>

00:33:34.160 --> 00:33:34.170 align:start position:0%
at 11 a.m. in the office our stand in
 

00:33:34.170 --> 00:33:40.970 align:start position:0%
at 11 a.m. in the office our stand in
section<00:33:34.680><c> 8</c><00:33:38.000><c> we</c><00:33:39.000><c> hope</c><00:33:39.470><c> you</c><00:33:40.470><c> enjoyed</c><00:33:40.830><c> our</c>

00:33:40.970 --> 00:33:40.980 align:start position:0%
section 8 we hope you enjoyed our
 

00:33:40.980 --> 00:33:44.210 align:start position:0%
section 8 we hope you enjoyed our
session<00:33:41.280><c> and</c><00:33:41.750><c> we</c><00:33:42.750><c> will</c><00:33:42.900><c> love</c><00:33:43.140><c> to</c><00:33:43.920><c> hear</c><00:33:44.070><c> from</c>

00:33:44.210 --> 00:33:44.220 align:start position:0%
session and we will love to hear from
 

00:33:44.220 --> 00:33:47.810 align:start position:0%
session and we will love to hear from
you<00:33:44.540><c> so</c><00:33:45.540><c> please</c><00:33:45.570><c> take</c><00:33:46.200><c> a</c><00:33:46.230><c> moment</c><00:33:46.470><c> to</c><00:33:46.830><c> submit</c>

00:33:47.810 --> 00:33:47.820 align:start position:0%
you so please take a moment to submit
 

00:33:47.820 --> 00:33:51.950 align:start position:0%
you so please take a moment to submit
your<00:33:47.970><c> feedback</c><00:33:48.090><c> and</c><00:33:49.070><c> with</c><00:33:50.070><c> that</c><00:33:50.960><c> happy</c>

00:33:51.950 --> 00:33:51.960 align:start position:0%
your feedback and with that happy
 

00:33:51.960 --> 00:33:52.780 align:start position:0%
your feedback and with that happy
testing

00:33:52.780 --> 00:33:52.790 align:start position:0%
testing
 

00:33:52.790 --> 00:33:54.260 align:start position:0%
testing
[Applause]

00:33:54.260 --> 00:33:54.270 align:start position:0%
[Applause]
 

00:33:54.270 --> 00:34:15.569 align:start position:0%
[Applause]
[Music]

