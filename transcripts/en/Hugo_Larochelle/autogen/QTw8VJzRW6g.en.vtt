WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:06.330
 in this capsule we will see 

00:00:01.890 --> 00:00:08.220
 the max mini algorithm then the notation 

00:00:06.330 --> 00:00:10.260
 we're going to use is we're going 

00:00:08.220 --> 00:00:12.150
 firstly refer to 

00:00:10.260 --> 00:00:14.880
 first players as the player 

00:00:12.150 --> 00:00:17.039
 max is the second player so on 

00:00:14.880 --> 00:00:19.590
 the opponent as being the player mines 

00:00:17.039 --> 00:00:21.570
 we will also interpret the result 

00:00:19.590 --> 00:00:23.730
 of a party as being the like 

00:00:21.570 --> 00:00:27.750
 result the distribution of a 

00:00:23.730 --> 00:00:29.310
 reward to max players so the 

00:00:27.750 --> 00:00:31.230
 reward it could be the result 

00:00:29.310 --> 00:00:33.420
 of a bet or a maxi mines would have 

00:00:31.230 --> 00:00:37.739
 contributed money then the winner gets 

00:00:33.420 --> 00:00:40.410
 would get the amount amassed by 

00:00:37.739 --> 00:00:43.530
 so money contributes by max and by 

00:00:40.410 --> 00:00:45.120
 mean so max have chosen the word max 

00:00:43.530 --> 00:00:47.789
 because mac is obviously want 

00:00:45.120 --> 00:00:49.710
 maximize his reward and midnight to 

00:00:47.789 --> 00:00:52.649
 the reverse will want to minimize the 

00:00:49.710 --> 00:00:55.649
 reward of max and that's because 

00:00:52.649 --> 00:00:57.899
 that we are a context of a sum game 

00:00:55.649 --> 00:01:00.480
 no, therefore, since mines will receive 

00:00:57.899 --> 00:01:03.539
 the opposite of the max reward he's going 

00:01:00.480 --> 00:01:06.900
 want and obviously minimize the 

00:01:03.539 --> 00:01:09.270
 reward of max so more so 

00:01:06.900 --> 00:01:11.520
 concrete maybe the reward for 

00:01:09.270 --> 00:01:14.939
 mac that to be money 

00:01:11.520 --> 00:01:16.830
 5 dollars and so so what was 

00:01:14.939 --> 00:01:19.530
 returned as reward a max of 

00:01:16.830 --> 00:01:21.299
 secondary 5 is that max would get 5 

00:01:19.530 --> 00:01:23.640
 dollars after the party because we 

00:01:21.299 --> 00:01:25.229
 can have a negative reward of 5 

00:01:23.640 --> 00:01:27.869
 $ in this case it would mean that 

00:01:25.229 --> 00:01:30.979
 does mine would get $ 5 so max 

00:01:27.869 --> 00:01:30.979
 lose 5 dollars 

00:01:32.220 --> 00:01:38.340
 so as for the problems that we have 

00:01:34.770 --> 00:01:40.710
 tried to solve with to star we're going 

00:01:38.340 --> 00:01:43.170
 to start by determining what is the 

00:01:40.710 --> 00:01:46.560
 structure of the research space we 

00:01:43.170 --> 00:01:48.710
 will explore to get a solution to 

00:01:46.560 --> 00:01:51.930
 our problem and is able to 

00:01:48.710 --> 00:01:52.670
 design is a player in a two-game 

00:01:51.930 --> 00:01:55.620
 opponents 

00:01:52.670 --> 00:01:57.210
 so we will see again as 

00:01:55.620 --> 00:01:59.310
 in the star is not it that's going 

00:01:57.210 --> 00:02:01.050
 to match a graph that we are going to explore 

00:01:59.310 --> 00:02:04.470
 but in what if we do kirov in 

00:02:01.050 --> 00:02:06.360
 question will match a tree on 

00:02:04.470 --> 00:02:09.240
 does not match the initials that correspond 

00:02:06.360 --> 00:02:10.619
 at the initial configuration of the game as 

00:02:09.240 --> 00:02:12.540
 in the story will also have a 

00:02:10.619 --> 00:02:14.570
 transition function that will us 

00:02:12.540 --> 00:02:19.260
 return a list of our successors 

00:02:14.570 --> 00:02:21.180
 and there in the context of dangerous 

00:02:19.260 --> 00:02:23.280
 opponents will make explicit the 

00:02:21.180 --> 00:02:24.450
 concept of an action associates onu 

00:02:23.280 --> 00:02:26.640
 successor 

00:02:24.450 --> 00:02:29.160
 the relationship between the two is that the 

00:02:26.640 --> 00:02:30.930
 successor nephew this is the knot that is 

00:02:29.160 --> 00:02:33.240
 done on all roofs that results from 

00:02:30.930 --> 00:02:37.110
 the execution of the action that is given 

00:02:33.240 --> 00:02:38.790
 with the naked successor see also a 

00:02:37.110 --> 00:02:40.500
 termination test that allows 

00:02:38.790 --> 00:02:42.959
 to identify his hyper v at the end of a 

00:02:40.500 --> 00:02:46.560
 part so today a role similar to 

00:02:42.959 --> 00:02:48.959
 the goal function of to stars but in 

00:02:46.560 --> 00:02:50.519
 more about a utility function for them 

00:02:48.959 --> 00:02:53.250
 final states that will give us the 

00:02:50.519 --> 00:02:56.160
 reward received by the player so has 

00:02:53.250 --> 00:02:57.630
 that the quantity that is maximized by 

00:02:56.160 --> 00:03:03.269
 max players and that is minimized by 

00:02:57.630 --> 00:03:07.980
 the player then mines our space from 

00:03:03.269 --> 00:03:11.160
 search will bring together those here in a 

00:03:07.980 --> 00:03:13.230
 example of tick-to-toe we will see in 

00:03:11.160 --> 00:03:15.209
 what we actually observe is for 

00:03:13.230 --> 00:03:17.040
 each one we have a grid of 

00:03:15.209 --> 00:03:20.459
 tic-tac-toe 

00:03:17.040 --> 00:03:22.709
 with some configuration so at 

00:03:20.459 --> 00:03:26.340
 the initial state we will see a grid that 

00:03:22.709 --> 00:03:28.140
 is completely empty and the others 

00:03:26.340 --> 00:03:28.950
 have to match a kerry with 

00:03:28.140 --> 00:03:32.069
 x and waters 

00:03:28.950 --> 00:03:35.489
 so for the initial state will be associated 

00:03:32.069 --> 00:03:37.319
 max turn since it's max that play 

00:03:35.489 --> 00:03:39.120
 first and then the next step 

00:03:37.319 --> 00:03:41.040
 associated with mine players when if one 

00:03:39.120 --> 00:03:44.099
 used x for max and waters 

00:03:41.040 --> 00:03:46.590
 for mym now the function of 

00:03:44.099 --> 00:03:48.420
 transition she will determine what are 

00:03:46.590 --> 00:03:50.519
 the successor nodes we see a 

00:03:48.420 --> 00:03:52.349
 successor by possible action so 

00:03:50.519 --> 00:03:53.970
 following the initial state max can do 

00:03:52.349 --> 00:03:58.650
 one of the different factions going to see 

00:03:53.970 --> 00:03:59.489
 nine actions nine successor states 

00:03:58.650 --> 00:04:01.799
 possible 

00:03:59.489 --> 00:04:06.510
 each partner with a position of x 

00:04:01.799 --> 00:04:08.310
 different and and recurrently 

00:04:06.510 --> 00:04:10.680
 we will be able to apply the function of 

00:04:08.310 --> 00:04:13.620
 transition on these states where the ca goes 

00:04:10.680 --> 00:04:16.500
 match the node to the mym player who 

00:04:13.620 --> 00:04:17.880
 will he place a bone in the grid and 

00:04:16.500 --> 00:04:21.299
 so more 

00:04:17.880 --> 00:04:26.280
 for example this state there too we would have 

00:04:21.299 --> 00:04:28.770
 in fact 8 draws successor possible so 

00:04:26.280 --> 00:04:34.199
 eight different positions for the round 

00:04:28.770 --> 00:04:37.320
 be here here here and instituted and 

00:04:34.199 --> 00:04:38.940
 notice that for the second the 

00:04:37.320 --> 00:04:40.470
 successor to the initial state 

00:04:38.940 --> 00:04:42.659
 we would also have eight others 

00:04:40.470 --> 00:04:46.260
 transition possible so growth 

00:04:42.659 --> 00:04:49.470
 exponential of the number of possible states 

00:04:46.260 --> 00:04:50.820
 of the game and if we continue like that in 

00:04:49.470 --> 00:04:52.800
 applying the transition function of 

00:04:50.820 --> 00:04:55.740
 recurring way we eventually go 

00:04:52.800 --> 00:05:01.050
 arrive at final states that are going 

00:04:55.740 --> 00:05:02.479
 have associated utility so what is 

00:05:01.050 --> 00:05:06.330
 returned by our utility function 

00:05:02.479 --> 00:05:07.260
 have a negative value if these mines 

00:05:06.330 --> 00:05:09.900
 who gang 

00:05:07.260 --> 00:05:12.479
 because if they chose - 1 pass 

00:05:09.900 --> 00:05:15.270
 as if the max player was losing indolent 

00:05:12.479 --> 00:05:17.940
 6000 win we'll see possibly 

00:05:15.270 --> 00:05:20.970
 value of 0.6 on equal our code of 

00:05:17.940 --> 00:05:25.229
 tact game one can have equality is 

00:05:20.970 --> 00:05:27.080
 besides positive +1 6 and the player x 

00:05:25.229 --> 00:05:30.300
 who wins the game 

00:05:27.080 --> 00:05:32.039
 so notice that this structure there one 

00:05:30.300 --> 00:05:33.870
 recursively apply the function 

00:05:32.039 --> 00:05:38.000
 transition that corresponds to a tree so 

00:05:33.870 --> 00:05:40.740
 each name is associated with only one parent 

00:05:38.000 --> 00:05:43.340
 he also notices that the nodes 

00:05:40.740 --> 00:05:46.529
 final are at depths 

00:05:43.340 --> 00:05:48.930
 possibly different so in this 

00:05:46.529 --> 00:05:52.680
 case also the depth of that 

00:05:48.930 --> 00:05:55.830
 corresponds to a depth of 1 2 3 4 5 

00:05:52.680 --> 00:05:57.150
 6 since six actions that was played 

00:05:55.830 --> 00:06:00.630
 is being discussed in depth 

00:05:57.150 --> 00:06:07.979
 9 so this draw was nine transition 

00:06:00.630 --> 00:06:09.719
 from the final state the initial state forgiveness in 

00:06:07.979 --> 00:06:11.969
 emitting ready to watch the algorithm 

00:06:09.719 --> 00:06:13.710
 minimax so the main idea behind 

00:06:11.969 --> 00:06:17.130
 the mini max algorithm knows we're going 

00:06:13.710 --> 00:06:19.650
 to assume that the most profitable action 

00:06:17.130 --> 00:06:22.800
 is always taken by the max player or 

00:06:19.650 --> 00:06:24.240
 the player mines when his rate is at 

00:06:22.800 --> 00:06:28.080
 to say that the player maxou the player mines 

00:06:24.240 --> 00:06:30.469
 will take the value mines max the most 

00:06:28.080 --> 00:06:30.469
 profitable 

00:06:30.710 --> 00:06:36.890
 so we will define this notion of 

00:06:33.770 --> 00:06:39.830
 minimax value the max min value in 

00:06:36.890 --> 00:06:43.760
 the hand will correspond to three cases of 

00:06:39.830 --> 00:06:45.260
 figure the first is the body or n 

00:06:43.760 --> 00:06:46.790
 is an endless 

00:06:45.260 --> 00:06:49.910
 when if the max mini speech is going to be 

00:06:46.790 --> 00:06:53.240
 simply the utility associated with this 

00:06:49.910 --> 00:06:55.880
 terminal 2nd final so it's the collar the 

00:06:53.240 --> 00:06:57.440
 simpler than initial now seems 

00:06:55.880 --> 00:07:01.250
 that's how recursively we're going 

00:06:57.440 --> 00:07:04.580
 set the min max value of one in 

00:07:01.250 --> 00:07:08.270
 for the case where it is an axis like 

00:07:04.580 --> 00:07:11.930
 being the max min value of a premium em 

00:07:08.270 --> 00:07:15.470
 or a premium and a successor who 

00:07:11.930 --> 00:07:18.350
 maximizes this minimax value there so that 

00:07:15.470 --> 00:07:21.310
 it translates a little more formal way 

00:07:18.350 --> 00:07:24.920
 the fact that the max player wants to maximize 

00:07:21.310 --> 00:07:27.800
 the minimum value what will be obtained 

00:07:24.920 --> 00:07:32.180
 after doing the action that 

00:07:27.800 --> 00:07:35.150
 corresponds to our successors between and 

00:07:32.180 --> 00:07:37.970
 the same way if n matches 

00:07:35.150 --> 00:07:39.010
 players mines the player mine earns him 

00:07:37.970 --> 00:07:40.850
 crohn 

00:07:39.010 --> 00:07:42.410
 the action that corresponds to our 

00:07:40.850 --> 00:07:44.470
 successors a bonus whose value 

00:07:42.410 --> 00:07:47.420
 mini max is minimal 

00:07:44.470 --> 00:07:49.880
 so these equations the federation end up 

00:07:47.420 --> 00:07:52.550
 finally a recursive program that goes 

00:07:49.880 --> 00:07:55.520
 allow us to calculate the value 

00:07:52.550 --> 00:07:57.650
 mini max up to the root ie 

00:07:55.520 --> 00:08:01.010
 we will apply until 

00:07:57.650 --> 00:08:03.350
 reach 1 the finally so our programs 

00:08:01.010 --> 00:08:05.840
 recursively implicitly behind there 

00:08:03.350 --> 00:08:06.920
 the tree and when will we go tears 

00:08:05.840 --> 00:08:09.470
 we will begin by reaching 

00:08:06.920 --> 00:08:11.480
 eventually the kids and then we go 

00:08:09.470 --> 00:08:12.980
 can make up the minimum value 

00:08:11.480 --> 00:08:20.180
 upward axes 

00:08:12.980 --> 00:08:22.490
 via these recursion equations there so 

00:08:20.180 --> 00:08:24.950
 we have here the minimax algorithm 

00:08:22.490 --> 00:08:28.970
 that is to say the algorithm that chooses 

00:08:24.950 --> 00:08:31.790
 the action that allows to get for the 

00:08:28.970 --> 00:08:34.790
 max player the action who have the best 

00:08:31.790 --> 00:08:38.310
 max min value then when calling 

00:08:34.790 --> 00:08:40.400
 mini max we give the initial name 

00:08:38.310 --> 00:08:42.570
 where the max player has to take an action 

00:08:40.400 --> 00:08:45.000
 and what a mini max is going to return 

00:08:42.570 --> 00:08:48.990
 it's the action will turn by a 

00:08:45.000 --> 00:08:50.580
 mute tomax what toro max does 

00:08:48.990 --> 00:08:54.420
 this correspondence formerly 

00:08:50.580 --> 00:08:58.279
 the action taken by the max player when 

00:08:54.420 --> 00:09:01.770
 this is its rate in the state n 

00:08:58.279 --> 00:09:04.080
 so firstly if it corresponds to 

00:09:01.770 --> 00:09:06.360
 an end of the game makes the player max 

00:09:04.080 --> 00:09:10.500
 can not play it just goes 

00:09:06.360 --> 00:09:12.470
 return the utility m to those of that we will 

00:09:10.500 --> 00:09:14.670
 initialize the value of uts units 

00:09:12.470 --> 00:09:17.370
 Russia we are not at the end of the game at 

00:09:14.670 --> 00:09:20.640
 less defined I am in association a 

00:09:17.370 --> 00:09:24.210
 action that is a null pointer and we're going 

00:09:20.640 --> 00:09:26.640
 hyper and on all actions and their 

00:09:24.210 --> 00:09:28.740
 associated successor states that so 

00:09:26.640 --> 00:09:31.230
 all the actions that can take the 

00:09:28.740 --> 00:09:33.330
 max player is what we will do is 

00:09:31.230 --> 00:09:37.589
 what are we going to call what is the value 

00:09:33.330 --> 00:09:39.720
 max max associated with the successor state in 

00:09:37.589 --> 00:09:42.750
 premium and specifically to greens goes 

00:09:39.720 --> 00:09:47.190
 call what is the result of the turn 

00:09:42.750 --> 00:09:49.310
 following mine player mines and if 

00:09:47.190 --> 00:09:53.839
 this value there is greater than 

00:09:49.310 --> 00:09:56.820
 current utility in our iteration 

00:09:53.839 --> 00:10:00.450
 well we will affect the action that will be 

00:09:56.820 --> 00:10:03.660
 taken by max like and at action to 

00:10:00.450 --> 00:10:04.950
 so let's pray in initialized in utah - is 

00:10:03.660 --> 00:10:08.880
 over it that's for sure we're going at least 

00:10:04.950 --> 00:10:10.290
 choose an action since the values 

00:10:08.880 --> 00:10:13.920
 go back here go will necessarily 

00:10:10.290 --> 00:10:15.570
 bigger than less than a movie and we're going 

00:10:13.920 --> 00:10:17.580
 obviously affect there after having 

00:10:15.570 --> 00:10:19.890
 assigned the action if it was an action 

00:10:17.580 --> 00:10:24.600
 who got better utility 

00:10:19.890 --> 00:10:27.150
 we will remember this utility there and 

00:10:24.600 --> 00:10:28.530
 once we max that will reconsider 

00:10:27.150 --> 00:10:30.000
 all possible actions that can 

00:10:28.530 --> 00:10:32.820
 to take that will find the one that has 

00:10:30.000 --> 00:10:35.520
 a value a mini max so one that he 

00:10:32.820 --> 00:10:37.260
 will swallow returned by mine turn that has 

00:10:35.520 --> 00:10:39.060
 found the action he allowed max the 

00:10:37.260 --> 00:10:41.610
 higher we will return this 

00:10:39.060 --> 00:10:44.459
 laakso utility therefore befits the bar 

00:10:41.610 --> 00:10:47.889
 max associates then the action 

00:10:44.459 --> 00:10:51.250
 which corresponds to this obtaining this 

00:10:47.889 --> 00:10:55.029
 minimax value there and so we saw that 

00:10:51.250 --> 00:10:56.860
 the mute ends we have just 

00:10:55.029 --> 00:10:59.980
 here in fact it's exactly the same 

00:10:56.860 --> 00:11:02.379
 thing that for max towers the only 

00:10:59.980 --> 00:11:04.810
 difference is that as we saw before 

00:11:02.379 --> 00:11:05.589
 mines will try to minimize the value 

00:11:04.810 --> 00:11:07.959
 minimum 

00:11:05.589 --> 00:11:11.529
 so it's minimizing the reward 

00:11:07.959 --> 00:11:17.410
 obtained by max so in this loop 

00:11:11.529 --> 00:11:19.120
 here rather than maximizing we want 

00:11:17.410 --> 00:11:21.819
 minimize that is to say that we will call 

00:11:19.120 --> 00:11:23.230
 the minimum value is associated with the turn 

00:11:21.819 --> 00:11:25.060
 next ie the player's turn 

00:11:23.230 --> 00:11:27.610
 max we'll see is it's a 

00:11:25.060 --> 00:11:30.639
 value smaller than the current utility 

00:11:27.610 --> 00:11:32.920
 and if so, we will update 

00:11:30.639 --> 00:11:36.009
 our gold action that will be considered 

00:11:32.920 --> 00:11:39.189
 by the player mine this turn the pair on 

00:11:36.009 --> 00:11:42.339
 will update it to value at premium 

00:11:39.189 --> 00:11:44.740
 than generate that in bonus the then we go 

00:11:42.339 --> 00:11:47.259
 associate as utility the utility that 

00:11:44.740 --> 00:11:49.949
 we were returned the father the turn 

00:11:47.259 --> 00:11:53.920
 next which is the turn of the max players 

00:11:49.949 --> 00:11:56.980
 and realizing it had infinite value 

00:11:53.920 --> 00:12:00.069
 we have this loop here 

00:11:56.980 --> 00:12:03.069
 calculates the action that has the min max value 

00:12:00.069 --> 00:12:06.069
 the smallest and finally the mute 

00:12:03.069 --> 00:12:08.610
 ends going back as max utility 

00:12:06.069 --> 00:12:11.589
 so the mini max value find and 

00:12:08.610 --> 00:12:17.410
 action associated with getting this 

00:12:11.589 --> 00:12:19.329
 minimax value here are some 

00:12:17.410 --> 00:12:21.880
 properties of the imax algorithm 

00:12:19.329 --> 00:12:23.350
 firstly it's an algorithm that is 

00:12:21.880 --> 00:12:25.620
 complete that is to say they return 

00:12:23.350 --> 00:12:28.329
 always a solution 

00:12:25.620 --> 00:12:30.130
 is there always a solution under the 

00:12:28.329 --> 00:12:34.240
 condition that the tree is finished so 

00:12:30.130 --> 00:12:37.509
 that it is not possible to first a 

00:12:34.240 --> 00:12:39.490
 part that never stops that does not 

00:12:37.509 --> 00:12:41.670
 never ends 

00:12:39.490 --> 00:12:44.139
 it is a magritte that is optimal but 

00:12:41.670 --> 00:12:46.959
 according to two conditions that makes it very 

00:12:44.139 --> 00:12:49.750
 important to know that it's a 

00:12:46.959 --> 00:12:52.540
 algorithm that will turn the action 

00:12:49.750 --> 00:12:53.810
 optimal to take part the max player if 

00:12:52.540 --> 00:12:56.810
 the adversary 

00:12:53.810 --> 00:12:59.240
 also play optimally so that 

00:12:56.810 --> 00:13:01.220
 means that the great mini max is not going 

00:12:59.240 --> 00:13:01.970
 to exploit weaknesses in 

00:13:01.220 --> 00:13:05.690
 his opponent 

00:13:01.970 --> 00:13:09.050
 the example of airlock and chess there is a 

00:13:05.690 --> 00:13:12.589
 quite well known technique or if 

00:13:09.050 --> 00:13:14.210
 the opponent but is placed in a 

00:13:12.589 --> 00:13:16.250
 vulnerability situation it's 

00:13:14.210 --> 00:13:18.380
 possible for the opponent to win the 

00:13:16.250 --> 00:13:20.779
 part in capital however it's 

00:13:18.380 --> 00:13:22.190
 possible for the opponent to avoid that 

00:13:20.779 --> 00:13:23.920
 that happen it just does not take them 

00:13:22.190 --> 00:13:27.680
 place themselves in this position of a 

00:13:23.920 --> 00:13:29.300
 empowered there and since the great minimax 

00:13:27.680 --> 00:13:32.690
 suppose the pair add up way 

00:13:29.300 --> 00:13:35.270
 optimal in the code of the chess game he 

00:13:32.690 --> 00:13:36.650
 will assume that the opponent never gets 

00:13:35.270 --> 00:13:40.310
 place in a position of 

00:13:36.650 --> 00:13:43.640
 vulnerability like that so the flu 

00:13:40.310 --> 00:13:45.440
 mini max actually makes the one guess 

00:13:43.640 --> 00:13:47.029
 worst case know that our opponent 

00:13:45.440 --> 00:13:49.850
 is the best possible 

00:13:47.029 --> 00:13:53.390
 and that's when making this solution there 

00:13:49.850 --> 00:13:54.740
 who chooses you his action the action that 

00:13:53.390 --> 00:13:57.470
 will take and his strategy 

00:13:54.740 --> 00:13:59.990
 so that's a benefit to where 

00:13:57.470 --> 00:14:01.960
 it's really the worst case though 

00:13:59.990 --> 00:14:04.040
 if we knew that our opponent 

00:14:01.960 --> 00:14:06.080
 did not know for example in case of 

00:14:04.040 --> 00:14:08.780
 fail that strategy there to win in 

00:14:06.080 --> 00:14:10.520
 four shots maybe that in reality we 

00:14:08.780 --> 00:14:12.080
 would like an algorithm that exploits sure 

00:14:10.520 --> 00:14:14.630
 but it's not with mini max that we 

00:14:12.080 --> 00:14:16.070
 would see happen for that it would take in 

00:14:14.630 --> 00:14:18.140
 make a certain pattern and then some 

00:14:16.070 --> 00:14:20.050
 knowledge a priori richer on 

00:14:18.140 --> 00:14:22.780
 what our opponent 

00:14:20.050 --> 00:14:24.860
 the quality of our opponent's game 

00:14:22.780 --> 00:14:27.230
 now for what complexity in 

00:14:24.860 --> 00:14:31.520
 execution time of mini max it goes 

00:14:27.230 --> 00:14:34.580
 run in b water to hate 

00:14:31.520 --> 00:14:37.010
 so in what cbc lawyer this bridge or 

00:14:34.580 --> 00:14:40.339
 no maximum legal costs at each 

00:14:37.010 --> 00:14:43.070
 step and like that will match the 

00:14:40.339 --> 00:14:46.100
 maximum number of moves in a game 

00:14:43.070 --> 00:14:48.140
 so basically corresponds to the 

00:14:46.100 --> 00:14:50.420
 maximum depth of cube tears and 

00:14:48.140 --> 00:14:51.709
 corresponds to the connection factors 

00:14:50.420 --> 00:14:54.770
 in notable the number of children 

00:14:51.709 --> 00:14:57.320
 maximum maximum that can be generated 

00:14:54.770 --> 00:14:59.510
 when searching is a way of 

00:14:57.320 --> 00:15:03.260
 see how is it 

00:14:59.510 --> 00:15:06.500
 exponential finally 1 m 

00:15:03.260 --> 00:15:10.760
 so that's another beal complexity to m 

00:15:06.500 --> 00:15:13.520
 is that each turn can generate 

00:15:10.760 --> 00:15:16.130
 a number of children that corresponds to b 

00:15:13.520 --> 00:15:17.480
 and the maximum number of shots that can 

00:15:16.130 --> 00:15:21.610
 be executed cm 

00:15:17.480 --> 00:15:24.530
 so we will see b cost possible times 

00:15:21.610 --> 00:15:26.510
 possible beccu possible shots 

00:15:24.530 --> 00:15:28.730
 1 located just so on until that 

00:15:26.510 --> 00:15:31.700
 we arrive at 

00:15:28.730 --> 00:15:35.110
 cost so at the end of the game so it's me 

00:15:31.700 --> 00:15:37.790
 does indeed give b to the m 

00:15:35.110 --> 00:15:40.510
 complexity in space is a lot 

00:15:37.790 --> 00:15:42.920
 less worst is linear in bi am 

00:15:40.510 --> 00:15:44.420
 that's because in fact the course 

00:15:42.920 --> 00:15:45.500
 that we do is basically 

00:15:44.420 --> 00:15:48.650
 in-depth research 

00:15:45.500 --> 00:15:49.880
 so at some point when we talk 

00:15:48.650 --> 00:15:52.700
 from the root we will arrive 

00:15:49.880 --> 00:15:54.500
 possibly at the end of the game 

00:15:52.700 --> 00:15:56.750
 so this way and their vote is of 

00:15:54.500 --> 00:15:59.450
 size m then at each our 

00:15:56.750 --> 00:16:02.630
 intermediaries we will have possibly 

00:15:59.450 --> 00:16:04.640
 generate all possible children and this 

00:16:02.630 --> 00:16:07.600
 there are some so that gives a total of one 

00:16:04.640 --> 00:16:09.980
 number of nodes in memory b times m 

00:16:07.600 --> 00:16:13.700
 it's possible to finally have an hour 

00:16:09.980 --> 00:16:16.310
 complexity or at the same time generates at 

00:16:13.700 --> 00:16:18.410
 need each of the nine so in that 

00:16:16.310 --> 00:16:21.640
 if the number of draws we would have in 

00:16:18.410 --> 00:16:24.740
 memory at all times would be at most 

00:16:21.640 --> 00:16:26.630
 but oh really the worst worse scenery for 

00:16:24.740 --> 00:16:30.110
 a deep search like that 

00:16:26.630 --> 00:16:32.860
 would be at 2 bis times m what we notice 

00:16:30.110 --> 00:16:35.530
 is that for a chess game 

00:16:32.860 --> 00:16:38.740
 reasonable not too long 

00:16:35.530 --> 00:16:41.720
 we did a branching factor b 

00:16:38.740 --> 00:16:44.120
 who's going is roughly equal to 35 then a 

00:16:41.720 --> 00:16:45.350
 maximum number of rates for a 

00:16:44.120 --> 00:16:49.130
 particle not too long 

00:16:45.350 --> 00:16:50.930
 around st and if you do the math 

00:16:49.130 --> 00:16:55.700
 of 

00:16:50.930 --> 00:16:57.670
 from 35 to the assembly see that it's a 

00:16:55.700 --> 00:17:00.110
 pretty astronomical man 

00:16:57.670 --> 00:17:02.120
 so that will match a quantity 

00:17:00.110 --> 00:17:04.540
 calculation that we can not really 

00:17:02.120 --> 00:17:06.770
 hope to do in a reasonable time 

00:17:04.540 --> 00:17:09.260
 so the mini max flu is a 

00:17:06.770 --> 00:17:11.480
 algorithm that is relatively naive 

00:17:09.260 --> 00:17:13.339
 as far as it fits a 

00:17:11.480 --> 00:17:13.880
 amount calculation that is way too much 

00:17:13.339 --> 00:17:16.569
 serious 

00:17:13.880 --> 00:17:18.589
 is what we sell in capsules 

00:17:16.569 --> 00:17:22.640
 next is to comment on what we can 

00:17:18.589 --> 00:17:25.760
 actually decrease that number of this 

00:17:22.640 --> 00:17:27.110
 amount of calculation there is actually in 

00:17:25.760 --> 00:17:30.470
 the next capture we'll see 

00:17:27.110 --> 00:17:32.000
 pruning pruning alfa beta we will get 

00:17:30.470 --> 00:17:35.510
 ask the question to see commented this 

00:17:32.000 --> 00:17:40.540
 that we can eliminate paths in the 

00:17:35.510 --> 00:17:40.540
 language they are useless to explore 

