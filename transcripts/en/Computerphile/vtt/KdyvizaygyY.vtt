WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.250
we find everywhere actually that the

00:00:02.250 --> 00:00:04.589
best option is always to divide into

00:00:04.589 --> 00:00:07.919
triangles because any 3d surface in the

00:00:07.919 --> 00:00:12.690
universe is able to be approximated by

00:00:12.690 --> 00:00:18.900
fitting together triangles

00:00:18.900 --> 00:00:21.390
in taking about how 3D computer generated images

00:00:21.390 --> 00:00:24.029
are created and how they work there are

00:00:24.029 --> 00:00:26.490
a number of different questions that we

00:00:26.490 --> 00:00:28.289
need to address and problems that we

00:00:28.289 --> 00:00:30.890
need to solve and the first of those is

00:00:30.890 --> 00:00:34.890
how do we take a 3d object and represent

00:00:34.890 --> 00:00:40.020
it in the computer and so the way we do

00:00:40.020 --> 00:00:45.090
this is by using a coordinate system

00:00:45.090 --> 00:00:48.780
with every day we maps and graphs and

00:00:48.780 --> 00:00:50.640
things that all use this coordinate

00:00:50.640 --> 00:00:52.230
systems got the Cartesian coordinate system

00:00:52.230 --> 00:00:54.930
generally we have two axes one

00:00:54.930 --> 00:00:57.090
collects won't go why if we want to

00:00:57.090 --> 00:01:00.000
specify a point any point anywhere on

00:01:00.000 --> 00:01:02.670
the graph we have two numbers which

00:01:02.670 --> 00:01:04.979
represent the distances that we travel

00:01:04.979 --> 00:01:07.470
along each axis so if we have point "2"

00:01:07.470 --> 00:01:11.700
one we go on to "1" that's point two

00:01:11.700 --> 00:01:15.060
one simple enough using this system we

00:01:15.060 --> 00:01:17.430
can represent any unique point anywhere

00:01:17.430 --> 00:01:20.250
on the plane described by these axes and

00:01:20.250 --> 00:01:22.110
we can also you know go this way and

00:01:22.110 --> 00:01:24.299
this way to have negative points as well

00:01:24.299 --> 00:01:28.439
so that's plus X plus y minus X minus y

00:01:28.439 --> 00:01:32.460
and this way we can have minus two minus

00:01:32.460 --> 00:01:36.509
one here so that's two dimensions but

00:01:36.509 --> 00:01:40.320
Sir if we want to specify points in

00:01:40.320 --> 00:01:43.229
three dimensions we simply add another

00:01:43.229 --> 00:01:46.770
axis going through the middle like this

00:01:46.770 --> 00:01:49.470
it's perpendicular to X and Y but

00:01:49.470 --> 00:01:51.990
obviously is a 2d piece of papers and

00:01:51.990 --> 00:01:54.270
this is called Z so we'll go plus

00:01:54.270 --> 00:01:57.780
Z and this minus said so now we can

00:01:57.780 --> 00:02:00.869
have point to one and this is on plane

00:02:00.869 --> 00:02:04.469
zero in Z so that's (2,1,0) and this

00:02:04.469 --> 00:02:08.160
becomes minus 2 minus 1 is 0 using this

00:02:08.160 --> 00:02:11.310
system and three number coordinates we

00:02:11.310 --> 00:02:13.680
can specify any unique point

00:02:13.680 --> 00:02:17.040
relative to the origin here and the axes

00:02:17.040 --> 00:02:19.560
that we've specified what uses this when

00:02:19.560 --> 00:02:22.680
we want to describe something like a

00:02:22.680 --> 00:02:26.040
pyramid well typically what we want to

00:02:26.040 --> 00:02:29.219
do is use our coordinate system to

00:02:29.219 --> 00:02:31.620
specify the corners of the objects which

00:02:31.620 --> 00:02:35.609
we call vertices let's get another piece

00:02:35.609 --> 00:02:38.340
of paper let's describe the points of

00:02:38.340 --> 00:02:41.430
our pyramid using our 3d coordinate

00:02:41.430 --> 00:02:46.560
system it's called them a,b,c,d and then

00:02:46.560 --> 00:02:51.810
round the back e using our coordinates a

00:02:51.810 --> 00:02:58.310
will be at zero to zero say B will be at

00:02:58.310 --> 00:03:03.090
minus 1 in X 0 and Y minus 1 in Z

00:03:03.090 --> 00:03:08.069
C will be at plus 1 in X 0 in Y minus 1

00:03:08.069 --> 00:03:10.439
n's head and so on for the other two

00:03:10.439 --> 00:03:12.750
using these coordinates we can specify

00:03:12.750 --> 00:03:15.209
the corners or the vertices of our

00:03:15.209 --> 00:03:17.459
objects but that's not quite enough

00:03:17.459 --> 00:03:22.349
because all we're doing is specifying

00:03:22.349 --> 00:03:25.680
the corners and our representation says

00:03:25.680 --> 00:03:29.519
nothing at all about the faces of the

00:03:29.519 --> 00:03:32.599
pyramid so how do we go about

00:03:32.599 --> 00:03:36.150
representing the faces well one way of

00:03:36.150 --> 00:03:37.760
doing it the simple way would be to

00:03:37.760 --> 00:03:40.949
specify a new set of vertices three

00:03:40.949 --> 00:03:43.349
vertices three coordinates for every

00:03:43.349 --> 00:03:45.780
face so we'll have one here one here one

00:03:45.780 --> 00:03:48.870
here one here one here one here one here

00:03:48.870 --> 00:03:51.840
one here one here etc the problem is

00:03:51.840 --> 00:03:54.689
this incurs a lot of duplication of

00:03:54.689 --> 00:03:58.169
vertices so for example this vertex at

00:03:58.169 --> 00:04:00.949
the top point a on the diagram is

00:04:00.949 --> 00:04:04.349
required by all four of these faces so

00:04:04.349 --> 00:04:07.379
if we're specifying three coordinates

00:04:07.379 --> 00:04:09.359
for every face we're duplicating the top

00:04:09.359 --> 00:04:12.840
one 4 times for a simple object like

00:04:12.840 --> 00:04:14.870
pyramid that's not too much of a problem

00:04:14.870 --> 00:04:17.220
but if we have a model with a hundred

00:04:17.220 --> 00:04:21.479
thousand vertices in then the wastage

00:04:21.479 --> 00:04:24.270
can be quite considerable so there is a

00:04:24.270 --> 00:04:27.680
better system for specifying the faces

00:04:27.680 --> 00:04:31.669
of any geometry and to do that we use a

00:04:31.669 --> 00:04:34.220
separate data structure to represent the

00:04:34.220 --> 00:04:36.740
faces which references the vertices that

00:04:36.740 --> 00:04:39.889
we've described using our Cartesian

00:04:39.889 --> 00:04:42.560
coordinates so if we name them as we

00:04:42.560 --> 00:04:46.039
have done on the diagram A B C we can

00:04:46.040 --> 00:04:48.830
then say that this face is represented

00:04:48.830 --> 00:04:53.900
by vertices A B C and this faces A C D

00:04:53.900 --> 00:05:01.000
and then this phase A D E and then this

00:05:01.009 --> 00:05:04.550
place is A C B and then we have a problem

00:05:04.550 --> 00:05:07.550
because when we come to represent the

00:05:07.550 --> 00:05:11.110
base of the pyramid it's a square and

00:05:11.110 --> 00:05:13.699
that doesn't really fit into our system

00:05:13.699 --> 00:05:18.440
of three vertices / face so what we

00:05:18.440 --> 00:05:21.199
could do is find some way of specifying

00:05:21.199 --> 00:05:24.380
that these faces all have three vertices

00:05:24.380 --> 00:05:27.530
each and this one has four and for

00:05:27.530 --> 00:05:29.360
another shape it might have five

00:05:29.360 --> 00:05:32.510
vertices or something like that but in

00:05:32.510 --> 00:05:38.120
practice it's better just to split the

00:05:38.120 --> 00:05:40.039
base into two triangles we find

00:05:40.039 --> 00:05:42.770
everywhere actually that the best option

00:05:42.770 --> 00:05:44.780
is always to divide into triangles

00:05:44.780 --> 00:05:48.020
because any 3d surface in the universe

00:05:48.020 --> 00:05:52.789
is able to be approximated by fitting

00:05:52.789 --> 00:05:57.320
together triangles why triangles so good

00:05:57.320 --> 00:06:02.270
for this purpose but first of all it's

00:06:02.270 --> 00:06:04.669
the simplest polygon there's only three

00:06:04.669 --> 00:06:07.430
vertices in a in a triangle second of

00:06:07.430 --> 00:06:08.599
all and more importantly any

00:06:08.599 --> 00:06:12.289
arrangements of three vertices in 3d

00:06:12.289 --> 00:06:15.889
space will always be coplanar which

00:06:15.889 --> 00:06:18.380
means that no matter how you arrange the

00:06:18.380 --> 00:06:21.020
three vertices of a triangle they will

00:06:21.020 --> 00:06:23.870
always lie on the same plane in space

00:06:23.870 --> 00:06:26.180
which is a crucial property if you want

00:06:26.180 --> 00:06:28.370
to approximate a surface with a simple

00:06:28.370 --> 00:06:30.289
two-dimensional polygon or set of them

00:06:30.289 --> 00:06:35.889
and it doesn't work for other types of

00:06:35.889 --> 00:06:39.050
polygons so a rectangle for example

00:06:39.050 --> 00:06:42.000
in this case it's okay because the

00:06:42.000 --> 00:06:44.730
vertices are all coplanar they're nice

00:06:44.730 --> 00:06:49.080
and flat but if i were to lift one of

00:06:49.080 --> 00:06:51.330
them let's go with this one out of the

00:06:51.330 --> 00:06:53.550
plane of the other three we no longer

00:06:53.550 --> 00:06:57.930
have a valid rectangle because these

00:06:57.930 --> 00:07:00.330
three or a coplanar but this isn't I

00:07:00.330 --> 00:07:02.850
mean there's got a curved surface to it

00:07:02.850 --> 00:07:04.710
so it's not a proper rectangle anymore

00:07:04.710 --> 00:07:08.250
so for that reason using rectangles or

00:07:08.250 --> 00:07:10.740
higher order shapes other than triangles

00:07:10.740 --> 00:07:12.890
are surfaces that we are approximating

00:07:12.890 --> 00:07:15.950
might be in danger of having degenerate

00:07:15.950 --> 00:07:18.270
faces faces that aren't properly

00:07:18.270 --> 00:07:19.800
represented because we might have one

00:07:19.800 --> 00:07:22.140
vertex that's raised out of the plane of

00:07:22.140 --> 00:07:23.970
the face but triangles don't suffer from

00:07:23.970 --> 00:07:25.800
this problem sean has asked me now to

00:07:25.800 --> 00:07:28.620
demonstrate how a cylinder might be

00:07:28.620 --> 00:07:31.590
represented by triangles so let's draw

00:07:31.590 --> 00:07:35.880
some triangles on to it so let's start

00:07:35.880 --> 00:07:38.280
the circle at the top generally it's

00:07:38.280 --> 00:07:40.170
quite easy to subdivide into triangles

00:07:40.170 --> 00:07:43.020
but what we find is that this curved

00:07:43.020 --> 00:07:45.000
edge here will start to look a little

00:07:45.000 --> 00:07:48.060
bit jaggi with these straight edges not

00:07:48.060 --> 00:07:50.760
drawn on very well but of course the

00:07:50.760 --> 00:07:53.220
more triangles we use the better the

00:07:53.220 --> 00:07:56.100
approximation to the circle so as we add

00:07:56.100 --> 00:07:58.100
more and more these straight lines

00:07:58.100 --> 00:08:00.720
approximate a curve better and better on

00:08:00.720 --> 00:08:02.820
the side of the cylinder we just use

00:08:02.820 --> 00:08:05.580
almost exactly the same principle we can

00:08:05.580 --> 00:08:09.390
create triangles like this I mean there

00:08:09.390 --> 00:08:16.500
are millions of ways to do and it's the

00:08:16.500 --> 00:08:20.880
same situation is on the top whereby the

00:08:20.880 --> 00:08:22.890
more triangles we have the denser the

00:08:22.890 --> 00:08:25.200
tessellation the better approximation to

00:08:25.200 --> 00:08:29.970
the curved surface will get so as you

00:08:29.970 --> 00:08:31.620
say I mean any surface pretty much this

00:08:31.620 --> 00:08:34.950
a sphere anything can be represented by

00:08:34.950 --> 00:08:37.289
triangles and need conceivable surface

00:08:37.289 --> 00:08:39.630
in the universe in three dimensions at

00:08:39.630 --> 00:08:42.570
any rate so there's a further problem in

00:08:42.570 --> 00:08:45.920
that when we specify a triangle

00:08:45.920 --> 00:08:50.930
a big city we're really specifying two

00:08:50.930 --> 00:08:53.360
triangles one on the front and one on

00:08:53.360 --> 00:08:55.100
the back in the pyramid we have the

00:08:55.100 --> 00:08:57.139
triangles facing out in the triangles

00:08:57.139 --> 00:08:59.810
facing in and sometimes we might want to

00:08:59.810 --> 00:09:02.690
be able to differentiate between which

00:09:02.690 --> 00:09:04.699
way a triangle is facing is it facing

00:09:04.699 --> 00:09:07.790
out or is it facing in and the way that

00:09:07.790 --> 00:09:11.510
is achieved is by being very careful

00:09:11.510 --> 00:09:14.360
about the order in which the vertex

00:09:14.360 --> 00:09:17.120
coordinates is specified it's called

00:09:17.120 --> 00:09:20.470
winding when you basically decide

00:09:20.470 --> 00:09:24.529
yes because your wind.. the winding the

00:09:24.529 --> 00:09:27.260
indices the trick is we always go in one

00:09:27.260 --> 00:09:29.420
direction clockwise or anti-clockwise it

00:09:29.420 --> 00:09:30.529
doesn't matter which as long as we're

00:09:30.529 --> 00:09:32.750
consistent so let's say and in fact I'll

00:09:32.750 --> 00:09:35.360
actually done that here that going

00:09:35.360 --> 00:09:37.399
anti-clockwise means the face is going

00:09:37.399 --> 00:09:39.740
outwards clockwise means of face is

00:09:39.740 --> 00:09:42.230
pointing inwards so let's have a look on

00:09:42.230 --> 00:09:45.740
this pyramid here we can see that ABC

00:09:45.740 --> 00:09:47.630
that's going anti-clockwise this face is

00:09:47.630 --> 00:09:50.839
facing out a CD yep they're going it

00:09:50.839 --> 00:09:53.240
anti-clockwise this face is facing and

00:09:53.240 --> 00:09:55.670
now the back face which is facing away

00:09:55.670 --> 00:09:59.480
from us it's A D E which is going

00:09:59.480 --> 00:10:02.029
clockwise so that's facing away from us

00:10:02.029 --> 00:10:04.870
so this way we can differentiate between

00:10:04.870 --> 00:10:07.399
triangles that are facing out or facing

00:10:07.399 --> 00:10:10.250
in which becomes very useful for example

00:10:10.250 --> 00:10:12.230
when we're drawing a triangle we might

00:10:12.230 --> 00:10:14.510
want to say well don't render the faces

00:10:14.510 --> 00:10:16.790
that are facing away from us we want to

00:10:16.790 --> 00:10:18.199
call those and not bother having to

00:10:18.199 --> 00:10:21.170
shade the pixels for those back to faces

00:10:21.170 --> 00:10:23.510
or we might want to say well we don't

00:10:23.510 --> 00:10:24.980
want to draw the faces that are looking

00:10:24.980 --> 00:10:26.060
towards us because we want to see the

00:10:26.060 --> 00:10:27.949
inside of an objective when rendering go

00:10:27.949 --> 00:10:31.610
cut away or something like that and so

00:10:31.610 --> 00:10:34.100
that's how winding works in a nutshell

00:10:34.100 --> 00:10:36.050
it doesn't matter whether you go

00:10:36.050 --> 00:10:38.810
clockwise for forward front faces and

00:10:38.810 --> 00:10:40.610
anti-clockwise for back faces or the

00:10:40.610 --> 00:10:41.899
other way around as long as you're

00:10:41.899 --> 00:10:44.240
consistent because further down the

00:10:44.240 --> 00:10:46.579
pipeline when we come to turn these

00:10:46.579 --> 00:10:49.130
triangles into pixels it might become

00:10:49.130 --> 00:10:52.699
important to know whether it's facing

00:10:52.699 --> 00:10:55.959
away or towards us

00:10:57.839 --> 00:11:01.509
we've probably now covered enough to

00:11:01.509 --> 00:11:05.220
know roughly how geometry is represented

00:11:05.220 --> 00:11:09.539
inside the computer we can represent

00:11:09.539 --> 00:11:14.699
vertices and faces made up of vertices

00:11:14.699 --> 00:11:18.489
the next step is to take our description

00:11:18.489 --> 00:11:25.559
of an object and move it around in 3D space

