WEBVTT
Kind: captions
Language: en

00:00:02.760 --> 00:00:04.019
ANKUR KOTWAL: Good afternoon
everyone.

00:00:04.019 --> 00:00:05.480
Thanks for joining us.

00:00:05.480 --> 00:00:07.960
My name is Ankur Kotwal, and
I'm an Android Developer

00:00:07.960 --> 00:00:09.660
Advocate from Sydney,
Australia.

00:00:09.660 --> 00:00:09.780
CHRIS BROADFOOT: Hi.

00:00:09.780 --> 00:00:10.590
I'm Chris Broadfoot.

00:00:10.590 --> 00:00:13.790
I work on the Google Maps API
team, also in Sydney.

00:00:13.790 --> 00:00:16.360
And today we're going to talk
to you about the Google Maps

00:00:16.360 --> 00:00:20.350
Android API v2, which to some
of you may be quite new.

00:00:20.350 --> 00:00:23.700
It was really since last year's
Google I/O. And it was

00:00:23.700 --> 00:00:27.036
released late last year, 2012.

00:00:27.036 --> 00:00:30.540
ANKUR KOTWAL: So what we really
want to show you today

00:00:30.540 --> 00:00:36.440
is cool ways that you can use
the API to really not just

00:00:36.440 --> 00:00:37.760
build basic maps--

00:00:37.760 --> 00:00:41.300
or include basic maps, but
really rich, detailed maps.

00:00:41.300 --> 00:00:44.090
So we're going to show you some
of the capabilities of

00:00:44.090 --> 00:00:47.880
the library itself, but then
also show you how you can mix

00:00:47.880 --> 00:00:52.680
in Android sensors and Google
Maps web services.

00:00:52.680 --> 00:00:52.920
CHRIS BROADFOOT: Yes.

00:00:52.920 --> 00:00:55.410
So the format of this talk is
three demos, and then we'll

00:00:55.410 --> 00:00:57.635
take a deep dive into each demo
and show you how they

00:00:57.635 --> 00:01:00.360
were built and the interesting
aspects of each demo.

00:01:00.360 --> 00:01:02.420
ANKUR KOTWAL: So why don't we
start with the first demo.

00:01:02.420 --> 00:01:05.019
CHRIS BROADFOOT: Yeah.

00:01:05.019 --> 00:01:05.450
ANKUR KOTWAL: All right.

00:01:05.450 --> 00:01:10.140
So you'll see on this app,
we have two maps on here.

00:01:10.140 --> 00:01:11.850
CHRIS BROADFOOT: Wait,
Ankur, two maps?

00:01:11.850 --> 00:01:12.470
ANKUR KOTWAL: Oh, yes.

00:01:12.470 --> 00:01:13.930
Sorry I should explain that.

00:01:13.930 --> 00:01:17.070
We said maps for
Android API v2.

00:01:17.070 --> 00:01:19.680
The 2 actually means you
can have two maps.

00:01:19.680 --> 00:01:21.130
CHRIS BROADFOOT: Dude,
we went through this.

00:01:21.130 --> 00:01:22.000
ANKUR KOTWAL: Oh,
sorry, sorry.

00:01:22.000 --> 00:01:22.570
No, no, no.

00:01:22.570 --> 00:01:25.510
What it means is that you can
have as many maps as you want.

00:01:25.510 --> 00:01:28.270
This is something developers
have been asking for a while,

00:01:28.270 --> 00:01:31.270
because with the old API, you
could only have one map at a

00:01:31.270 --> 00:01:31.950
time, right.

00:01:31.950 --> 00:01:34.210
Well, now you can have
as many as you want.

00:01:34.210 --> 00:01:37.060
Obviously, you want to tailor
you user experience

00:01:37.060 --> 00:01:37.700
accordingly.

00:01:37.700 --> 00:01:40.130
So having 15 on there, probably

00:01:40.130 --> 00:01:41.010
not such a good thing.

00:01:41.010 --> 00:01:42.490
CHRIS BROADFOOT: OK, so before
we get into it, do you want to

00:01:42.490 --> 00:01:45.320
explain what we're getting
at here with the demo.

00:01:45.320 --> 00:01:46.450
ANKUR KOTWAL: Yeah, sure.

00:01:46.450 --> 00:01:50.170
So have you ever wondered how
long it takes you to get from

00:01:50.170 --> 00:01:53.650
the airport when you arrived to
take a flight to the point

00:01:53.650 --> 00:01:55.860
where you get to your
destination?

00:01:55.860 --> 00:01:58.660
Well, it turns out that if you
live in Sydney, anywhere you

00:01:58.660 --> 00:02:00.570
go is a long, long time--

00:02:00.570 --> 00:02:02.240
mainly because of the flight.

00:02:02.240 --> 00:02:04.410
But what we did is we were
curious about this

00:02:04.410 --> 00:02:10.910
information, and we built an
app, which kind of shows us

00:02:10.910 --> 00:02:12.720
our journey through
the airport.

00:02:12.720 --> 00:02:17.040
And we wanted to tell this
story using maps.

00:02:17.040 --> 00:02:20.110
So going back to it, you
see two maps here.

00:02:20.110 --> 00:02:21.800
On the left hand side is me.

00:02:21.800 --> 00:02:23.580
On the right hand
side is Chris.

00:02:23.580 --> 00:02:27.360
We've actually both arrived at
Sydney airport, but we got

00:02:27.360 --> 00:02:29.565
dropped off by cabs
at opposite ends.

00:02:29.565 --> 00:02:31.575
So I was at the northern
end, and Chris was at

00:02:31.575 --> 00:02:32.760
the southern end.

00:02:32.760 --> 00:02:34.870
So let's start the story.

00:02:34.870 --> 00:02:37.640
The best way to start a story,
actually, is to move the

00:02:37.640 --> 00:02:38.780
distractions out of the way.

00:02:38.780 --> 00:02:40.090
So Chris we're going
to get rid of you.

00:02:40.090 --> 00:02:41.340
CHRIS BROADFOOT: Excuse me.

00:02:43.520 --> 00:02:44.960
ANKUR KOTWAL: We're going to
focus on me for a minute.

00:02:44.960 --> 00:02:48.180
This is me walking through
Sydney airport, and I've just

00:02:48.180 --> 00:02:50.880
walked inside Sydney airport,
and the first thing I've done

00:02:50.880 --> 00:02:53.210
is stopped to see the screens
to see where I can

00:02:53.210 --> 00:02:54.140
go and check in.

00:02:54.140 --> 00:02:55.990
CHRIS BROADFOOT: Can you explain
this green trail

00:02:55.990 --> 00:02:56.730
that's behind you?

00:02:56.730 --> 00:02:59.010
Is that a realistic
representation of what

00:02:59.010 --> 00:02:59.960
actually happened?

00:02:59.960 --> 00:03:02.230
ANKUR KOTWAL: No, I can promise
you I wasn't leaving a

00:03:02.230 --> 00:03:04.990
green trail behind me as I
walked through the airport.

00:03:04.990 --> 00:03:06.150
That's a polyline.

00:03:06.150 --> 00:03:09.620
And what I'm doing is using the
polyline to visualize my

00:03:09.620 --> 00:03:10.950
path through Sydney airport.

00:03:10.950 --> 00:03:11.280
CHRIS BROADFOOT: OK.

00:03:11.280 --> 00:03:12.910
Good to know.

00:03:12.910 --> 00:03:14.370
ANKUR KOTWAL: Do you have
any more questions?

00:03:14.370 --> 00:03:16.250
CHRIS BROADFOOT: Yeah,
I will, I will.

00:03:16.250 --> 00:03:18.230
ANKUR KOTWAL: All right, so this
is me walking to counter

00:03:18.230 --> 00:03:19.700
D, and oop--

00:03:19.700 --> 00:03:20.620
CHRIS BROADFOOT: There's
me, there's me.

00:03:20.620 --> 00:03:23.355
ANKUR KOTWAL: Just as I arrived
at counter D, Chris

00:03:23.355 --> 00:03:26.020
and I ran into one another,
where we pretty much checked

00:03:26.020 --> 00:03:27.920
in at the same time.

00:03:27.920 --> 00:03:29.320
CHRIS BROADFOOT: And
what happened next?

00:03:29.320 --> 00:03:30.900
ANKUR KOTWAL: We then started
to make our way through

00:03:30.900 --> 00:03:32.740
security and immigration.

00:03:32.740 --> 00:03:33.770
CHRIS BROADFOOT: Well,
we've merged.

00:03:33.770 --> 00:03:34.830
ANKUR KOTWAL: We have.

00:03:34.830 --> 00:03:36.070
We're now one.

00:03:36.070 --> 00:03:38.660
CHRIS BROADFOOT: So this is a
new feature that we released

00:03:38.660 --> 00:03:41.570
in the latest version of Google
Play services, and

00:03:41.570 --> 00:03:42.530
that's set icon.

00:03:42.530 --> 00:03:44.980
Now that might not sound
like very much.

00:03:44.980 --> 00:03:47.730
But it means that you don't have
to swap out your marker

00:03:47.730 --> 00:03:50.460
objects just to change
the icon.

00:03:50.460 --> 00:03:51.830
ANKUR KOTWAL: Yeah,
set icon, whoo.

00:03:54.640 --> 00:03:57.490
If you've ever been through
Sydney airport on a weekend,

00:03:57.490 --> 00:03:59.590
through immigration and
security, you probably know

00:03:59.590 --> 00:04:01.640
how horrendously
slow it can be.

00:04:01.640 --> 00:04:03.690
CHRIS BROADFOOT: Almost as
bad as LA, or so I hear.

00:04:03.690 --> 00:04:05.030
ANKUR KOTWAL: Actually,
not as bad as LA.

00:04:05.030 --> 00:04:07.560
Nothing's as bad as LA.

00:04:07.560 --> 00:04:10.980
Anyways, we went through
security and we're going to

00:04:10.980 --> 00:04:11.620
make our way through.

00:04:11.620 --> 00:04:13.990
And you'll notice on the bottom
right there's a little

00:04:13.990 --> 00:04:15.890
icon that shows us walking.

00:04:15.890 --> 00:04:18.769
CHRIS BROADFOOT: So is this new
activity recognition API?

00:04:18.769 --> 00:04:19.540
ANKUR KOTWAL: That's right.

00:04:19.540 --> 00:04:23.570
So as you notice here, every
time we move on the map, we're

00:04:23.570 --> 00:04:26.240
showing a little icon
to represent

00:04:26.240 --> 00:04:27.440
that we were walking.

00:04:27.440 --> 00:04:30.950
That information was actually
gathered through the Activity

00:04:30.950 --> 00:04:34.740
Recognition API that was also
launched in Google Play

00:04:34.740 --> 00:04:36.220
services 3.1.

00:04:36.220 --> 00:04:39.070
CHRIS BROADFOOT: So speaking
of walking along the map, I

00:04:39.070 --> 00:04:41.110
notice that we're animating
these markers on the map, and

00:04:41.110 --> 00:04:43.500
that's not exactly a
feature of the API.

00:04:43.500 --> 00:04:45.130
There's no walking of markers.

00:04:45.130 --> 00:04:46.400
ANKUR KOTWAL: Yes,
that's right.

00:04:46.400 --> 00:04:50.030
We are actually moving the
marker without creating a new

00:04:50.030 --> 00:04:51.180
marker every time.

00:04:51.180 --> 00:04:52.930
We're going to show you
some code on how we

00:04:52.930 --> 00:04:54.130
animate these markers.

00:04:54.130 --> 00:04:56.560
But for now what we'll do
is continue the story.

00:04:56.560 --> 00:04:59.220
Sydney airport, once you get
through security, they force

00:04:59.220 --> 00:05:00.780
you to go through Duty Free.

00:05:00.780 --> 00:05:02.210
CHRIS BROADFOOT: It's
very confusing.

00:05:02.210 --> 00:05:04.180
I feel like I'm in an Ikea or
something, but there's just

00:05:04.180 --> 00:05:05.980
perfume everywhere.

00:05:05.980 --> 00:05:08.180
ANKUR KOTWAL: And frankly, even
though we were doing some

00:05:08.180 --> 00:05:10.980
shopping, there's only so much
perfume you can buy.

00:05:10.980 --> 00:05:14.080
So we finally got through
the stores and got out.

00:05:14.080 --> 00:05:17.370
And at this point, we realized
that bah, we actually have

00:05:17.370 --> 00:05:21.310
more time for our flights
than we first expected.

00:05:21.310 --> 00:05:24.305
So we thought, well, what should
we do to kill the time?

00:05:24.305 --> 00:05:26.210
CHRIS BROADFOOT: Well, there's
really only one option.

00:05:26.210 --> 00:05:27.990
ANKUR KOTWAL: Yeah, I mean
it's the Australian way.

00:05:27.990 --> 00:05:28.720
CHRIS BROADFOOT: Yeah,
just drink beer.

00:05:28.720 --> 00:05:29.000
All the time.

00:05:29.000 --> 00:05:31.200
ANKUR KOTWAL: We went
to the lounge.

00:05:31.200 --> 00:05:32.680
And there's that icon
on the bottom

00:05:32.680 --> 00:05:33.520
right-hand corner again.

00:05:33.520 --> 00:05:35.670
But this is us traveling
to the lounge.

00:05:35.670 --> 00:05:39.030
We sat down at the lounge, had
a good chat, and although we

00:05:39.030 --> 00:05:41.840
were only going to stay for one
drink, we stayed for a few

00:05:41.840 --> 00:05:44.170
more, and a few more
after that.

00:05:44.170 --> 00:05:46.010
And then we heard
an announcement.

00:05:46.010 --> 00:05:47.050
CHRIS BROADFOOT: It
was our names.

00:05:47.050 --> 00:05:48.200
I heard our names many times.

00:05:48.200 --> 00:05:49.730
ANKUR KOTWAL: Yeah, it was our
names and they were telling us

00:05:49.730 --> 00:05:52.480
that they were going to throw
our luggage off of the flight,

00:05:52.480 --> 00:05:54.830
if we didn't get to
the gate quickly.

00:05:54.830 --> 00:05:56.750
So we panicked.

00:05:56.750 --> 00:05:58.450
And we started running
to the gate.

00:05:58.450 --> 00:05:58.510
CHRIS BROADFOOT: You panicked.

00:05:58.510 --> 00:05:59.560
I just followed.

00:05:59.560 --> 00:06:02.550
ANKUR KOTWAL: You can see us now
running and moving along

00:06:02.550 --> 00:06:04.680
with the map a lot faster.

00:06:04.680 --> 00:06:06.510
You can see the animations
have sped up here.

00:06:06.510 --> 00:06:10.410
And we've also added this
yellow glow to kind of

00:06:10.410 --> 00:06:12.915
accentuate the sort of stress
that we were feeling.

00:06:12.915 --> 00:06:14.780
CHRIS BROADFOOT: And so that's
just a view on top of the map.

00:06:14.780 --> 00:06:16.110
ANKUR KOTWAL: It's just
an image view.

00:06:16.110 --> 00:06:18.320
The other thing that
that yellow glow--

00:06:18.320 --> 00:06:20.870
the purpose that it serves is
that it sort of adds a bit of

00:06:20.870 --> 00:06:23.320
a haze over the map, and
frankly, that's what we were

00:06:23.320 --> 00:06:27.040
seeing after our time
at the lounge.

00:06:27.040 --> 00:06:30.820
Anyways, the good news is,
we got on our flight.

00:06:30.820 --> 00:06:33.720
We took off, and we were able
to make it here on time to

00:06:33.720 --> 00:06:35.300
give you this presentation.

00:06:35.300 --> 00:06:37.550
And we got to San Francisco.

00:06:37.550 --> 00:06:38.610
CHRIS BROADFOOT: I think
next year, we

00:06:38.610 --> 00:06:40.480
should stop at Hawaii.

00:06:40.480 --> 00:06:41.730
ANKUR KOTWAL: I've never seen
a lounge in Hawaii.

00:06:41.730 --> 00:06:43.200
CHRIS BROADFOOT: We're just
going straight past there.

00:06:43.200 --> 00:06:44.340
ANKUR KOTWAL: Absolutely.

00:06:44.340 --> 00:06:45.110
So here we are.

00:06:45.110 --> 00:06:46.270
San Francisco airport.

00:06:46.270 --> 00:06:47.740
Landed safe and sound.

00:06:47.740 --> 00:06:51.270
And I just want to point out
here, it's a beautiful map.

00:06:51.270 --> 00:06:53.830
It's an indoor map of San
Francisco airport, and even in

00:06:53.830 --> 00:06:56.690
Sydney airport, there was an
indoor map that was showing us

00:06:56.690 --> 00:06:59.200
as we were traversing through
the various sections.

00:06:59.200 --> 00:07:00.230
CHRIS BROADFOOT: So this
is a new feature in

00:07:00.230 --> 00:07:02.270
the Google Maps API.

00:07:02.270 --> 00:07:04.960
And it's on by default.

00:07:04.960 --> 00:07:07.300
ANKUR KOTWAL: All right, well,
why don't we talk about how we

00:07:07.300 --> 00:07:09.130
put this together.

00:07:09.130 --> 00:07:11.310
And really we can't talk about
it without talking about

00:07:11.310 --> 00:07:13.180
Google Play services.

00:07:13.180 --> 00:07:16.400
For many of you that have been
in presence at I/O, you

00:07:16.400 --> 00:07:18.600
probably have heard a bit about
Google Play services,

00:07:18.600 --> 00:07:21.680
but for those of you watching
on YouTube, Google Play

00:07:21.680 --> 00:07:27.020
services is a way the APIs are
delivered to users devices.

00:07:27.020 --> 00:07:29.960
So it's an APK that gets
installed alongside with the

00:07:29.960 --> 00:07:32.760
Google Play store and
automatically updated.

00:07:32.760 --> 00:07:35.710
So the fantastic news for
everyone in this room is all

00:07:35.710 --> 00:07:39.540
of the demos we're showing you
today, they're using APIs that

00:07:39.540 --> 00:07:42.610
are already available
for all your users.

00:07:42.610 --> 00:07:45.970
Android 2.2 and up,
o or Froyo and up.

00:07:45.970 --> 00:07:47.820
CHRIS BROADFOOT: Yeah, I mean
the other great thing is as

00:07:47.820 --> 00:07:51.190
the Google Maps API team keeps
making improvements like bug

00:07:51.190 --> 00:07:55.570
fixes, enhancements, and new
features, your users

00:07:55.570 --> 00:07:58.130
automatically get that
functionality, and your app

00:07:58.130 --> 00:08:00.600
automatically gets better.

00:08:00.600 --> 00:08:02.680
So you don't have to
redeploy your app.

00:08:02.680 --> 00:08:04.000
Your users don't have
to upgrade.

00:08:04.000 --> 00:08:06.560
Everything just gets better.

00:08:06.560 --> 00:08:07.910
ANKUR KOTWAL: And the good thing
is you don't actually

00:08:07.910 --> 00:08:10.140
have to-- well, you mentioned
you don't have to redeploy

00:08:10.140 --> 00:08:13.450
your app, but in terms of new
features that get rolled out,

00:08:13.450 --> 00:08:15.440
you can incorporate them
straight away.

00:08:15.440 --> 00:08:19.100
As soon as we talk about it
publicly, they're available.

00:08:19.100 --> 00:08:22.780
All right, MapFragment.

00:08:22.780 --> 00:08:25.840
I think there's probably many of
you in this room that have

00:08:25.840 --> 00:08:31.210
had angry blog posts about us
releasing MapFragments.

00:08:31.210 --> 00:08:33.448
We could only have one
map at a time.

00:08:33.448 --> 00:08:36.350
So I'm hoping we don't have the
same angry mob this time

00:08:36.350 --> 00:08:39.480
that we had in previous I/Os.

00:08:39.480 --> 00:08:43.130
The good news is once you've
incorporated the Maps API

00:08:43.130 --> 00:08:44.800
library in your app--

00:08:44.800 --> 00:08:47.520
and that's just by including the
static lib for Google Play

00:08:47.520 --> 00:08:50.710
services, the thin wrapper--

00:08:50.710 --> 00:08:53.430
you just need an API key, and
then you can use MapFragments

00:08:53.430 --> 00:08:54.100
straight away.

00:08:54.100 --> 00:08:55.480
So here is a layout.

00:08:55.480 --> 00:08:58.700
And all we've done is dropped
two MapFragments in, and we're

00:08:58.700 --> 00:08:59.650
good to go.

00:08:59.650 --> 00:09:01.500
CHRIS BROADFOOT: There's also a
support MapFragment, if you

00:09:01.500 --> 00:09:03.490
need to support ICS
and below--

00:09:03.490 --> 00:09:05.160
oh, sorry, no, below ICS.

00:09:05.160 --> 00:09:07.725
Of course ICS you can use
MapFragment directly.

00:09:07.725 --> 00:09:11.340
ANKUR KOTWAL: So by default
MapFragments give you the full

00:09:11.340 --> 00:09:12.430
capability of maps.

00:09:12.430 --> 00:09:14.940
So you get outdoor mapping,
indoor mapping.

00:09:14.940 --> 00:09:16.340
You get all the gestures.

00:09:16.340 --> 00:09:16.600
CHRIS BROADFOOT: Yeah.

00:09:16.600 --> 00:09:18.710
So by default the map
is fully featured.

00:09:18.710 --> 00:09:20.210
You don't need to
enable gestures

00:09:20.210 --> 00:09:21.650
or any other features.

00:09:21.650 --> 00:09:23.720
You get the default controls.

00:09:23.720 --> 00:09:26.000
You can easily enable the
my-location layer, which we'll

00:09:26.000 --> 00:09:28.160
show you a little
bit later on.

00:09:28.160 --> 00:09:30.130
ANKUR KOTWAL: Obviously, as
developers, you can turn those

00:09:30.130 --> 00:09:32.860
features off, if you want to
have a very fine-grain control

00:09:32.860 --> 00:09:33.880
for your users.

00:09:33.880 --> 00:09:36.040
Or if you want to provide
your own zoom buttons or

00:09:36.040 --> 00:09:37.430
my-location buttons.

00:09:37.430 --> 00:09:40.100
So we give you capabilities
to do that.

00:09:40.100 --> 00:09:43.110
Let's talk about markers
and animating makers.

00:09:43.110 --> 00:09:44.540
So let's look at some code.

00:09:44.540 --> 00:09:47.370
Chris was asking how we moved
those markers around.

00:09:47.370 --> 00:09:49.990
Basically, what we're doing is
periodically setting the

00:09:49.990 --> 00:09:51.810
position on our markers.

00:09:51.810 --> 00:09:54.150
So we're using a Handler
to do that.

00:09:54.150 --> 00:09:56.790
And what we do is we grab the
start time when we want to

00:09:56.790 --> 00:09:59.360
kick off a marker animation.

00:09:59.360 --> 00:10:02.390
And then when our Handler
executes, we work out how much

00:10:02.390 --> 00:10:05.590
time has elapsed and adjust
the position of the marker

00:10:05.590 --> 00:10:06.780
accordingly.

00:10:06.780 --> 00:10:08.770
I want to make a special call
out to this thing that we're

00:10:08.770 --> 00:10:10.890
using called an interpolater.

00:10:10.890 --> 00:10:13.900
We're using a linear
interpolator, so in effect

00:10:13.900 --> 00:10:16.440
we're moving the marker linearly
across that time.

00:10:16.440 --> 00:10:19.140
But you could use a different
interpolator, something like

00:10:19.140 --> 00:10:23.410
an accelerate-decelerate
interpolator, which allows the

00:10:23.410 --> 00:10:27.050
marker to start very slowly
and speed up and then slow

00:10:27.050 --> 00:10:28.720
down once again.

00:10:28.720 --> 00:10:29.370
CHRIS BROADFOOT: Yeah, sorry.

00:10:29.370 --> 00:10:32.650
So this is particularly useful
for camera transitions, but

00:10:32.650 --> 00:10:34.060
also for animating markers.

00:10:34.060 --> 00:10:34.450
ANKUR KOTWAL: Yeah.

00:10:34.450 --> 00:10:37.010
So if you wanted to use a
different interpolator--

00:10:37.010 --> 00:10:40.140
you might have a car moving
along a map that speeds up and

00:10:40.140 --> 00:10:43.050
has to break really hard, and
you could do that with an

00:10:43.050 --> 00:10:45.500
interpolator.

00:10:45.500 --> 00:10:49.130
All right, so once we've
calculated the values we want

00:10:49.130 --> 00:10:50.520
to set, we just go
ahead and set the

00:10:50.520 --> 00:10:52.310
position off that marker.

00:10:52.310 --> 00:10:54.830
And just before we
reinitialize--

00:10:54.830 --> 00:10:57.690
or we tell the Handler that you
need to run again in 16

00:10:57.690 --> 00:10:58.930
milliseconds.

00:10:58.930 --> 00:11:02.040
Now, you may be thinking that
16 milliseconds seems like a

00:11:02.040 --> 00:11:03.320
magic number.

00:11:03.320 --> 00:11:04.600
Well, it's actually not.

00:11:04.600 --> 00:11:07.230
It's a number that you'll see
time and time again, because

00:11:07.230 --> 00:11:09.970
Android devices typically
render at 60 frames per

00:11:09.970 --> 00:11:13.000
second, which means you
get 16 milliseconds

00:11:13.000 --> 00:11:14.570
to render each frame.

00:11:14.570 --> 00:11:17.770
So the reason that number 16
milliseconds is here is

00:11:17.770 --> 00:11:20.510
because we're asking the Handler
to run again for the

00:11:20.510 --> 00:11:21.760
next frame.

00:11:23.690 --> 00:11:26.450
Now, Chris you mentioned the
line that was following me--

00:11:26.450 --> 00:11:27.410
that was a polyline--

00:11:27.410 --> 00:11:29.280
but we have other types
of shape that we

00:11:29.280 --> 00:11:30.360
can draw, as well.

00:11:30.360 --> 00:11:31.850
CHRIS BROADFOOT: So for those
of you not familiar with

00:11:31.850 --> 00:11:34.470
polylines, they're essentially
a list of latitude and

00:11:34.470 --> 00:11:36.140
longitude points.

00:11:36.140 --> 00:11:37.980
And polygons are very similar.

00:11:37.980 --> 00:11:40.890
They're a list of latitude and
longitude points once again,

00:11:40.890 --> 00:11:42.080
but enclosed.

00:11:42.080 --> 00:11:43.590
So polygons can actually
have a fill,

00:11:43.590 --> 00:11:44.800
because they're enclosed.

00:11:44.800 --> 00:11:47.120
And they can also have holes.

00:11:47.120 --> 00:11:48.320
I haven't seen this
slide before.

00:11:48.320 --> 00:11:51.685
Ankur, that's a very strange
geographic feature.

00:11:51.685 --> 00:11:52.990
ANKUR KOTWAL: That's
just a Bugdroid.

00:11:52.990 --> 00:11:53.790
You should know this.

00:11:53.790 --> 00:11:54.300
CHRIS BROADFOOT: OK.

00:11:54.300 --> 00:11:59.670
So the holes you can see here
represented with the eyes and

00:11:59.670 --> 00:12:02.250
obviously can have different
styling.

00:12:02.250 --> 00:12:04.450
So you can see here, the
Bugdroid's body has a black

00:12:04.450 --> 00:12:06.870
stroke, and his antennae--

00:12:06.870 --> 00:12:08.810
I think that's what they're
called, or ears--

00:12:08.810 --> 00:12:10.315
don't have a stroke.

00:12:10.315 --> 00:12:12.450
ANKUR KOTWAL: So for the eyes,
they're actually truly holes.

00:12:12.450 --> 00:12:14.810
We haven't put another
polygon on top

00:12:14.810 --> 00:12:15.960
that's a different color.

00:12:15.960 --> 00:12:18.070
It's actually a cut out of
a hole, and you can do

00:12:18.070 --> 00:12:19.190
that with the API.

00:12:19.190 --> 00:12:19.640
CHRIS BROADFOOT: Exactly.

00:12:19.640 --> 00:12:22.710
So we also have circles, which
are a special case of polygon,

00:12:22.710 --> 00:12:26.150
where each point is an equal
distance from the center.

00:12:26.150 --> 00:12:29.610
So you just specify center and
a radius, but remember this

00:12:29.610 --> 00:12:31.670
radius is specified in meters.

00:12:31.670 --> 00:12:34.310
So this is a feature on the
surface of the earth, it's not

00:12:34.310 --> 00:12:36.900
specified in screen space.

00:12:36.900 --> 00:12:37.620
ANKUR KOTWAL: All right.

00:12:37.620 --> 00:12:41.030
Now, I want to make another
mention of indoor maps,

00:12:41.030 --> 00:12:45.870
because really they allowed us
to have such a rich story to

00:12:45.870 --> 00:12:49.080
tell in an indoor location
like Sydney airport.

00:12:49.080 --> 00:12:51.930
Without indoor maps, Sydney
airport and San Francisco

00:12:51.930 --> 00:12:55.750
airport would have just been
gray or brown boxes.

00:12:55.750 --> 00:12:58.680
So indoor maps are great, and as
we mentioned, you get them

00:12:58.680 --> 00:12:59.880
by default.

00:12:59.880 --> 00:13:02.440
As developers, of course, you
have an API that allows you to

00:13:02.440 --> 00:13:05.320
turn off indoor maps, if for
whatever reason you don't want

00:13:05.320 --> 00:13:09.030
to show indoor map locations
on your map.

00:13:09.030 --> 00:13:11.850
And the other thing to keep in
mind is that if you have

00:13:11.850 --> 00:13:15.530
multiple MapFragments, we're
only showing indoor maps today

00:13:15.530 --> 00:13:18.910
on one of the fragments
at a time.

00:13:18.910 --> 00:13:22.480
It is based on the first map
that gets drawn, but that's

00:13:22.480 --> 00:13:24.790
OK, because we have a
nice API that allows

00:13:24.790 --> 00:13:25.940
you to control that.

00:13:25.940 --> 00:13:28.710
So all you do is tell all of
your MapFragments to turn off

00:13:28.710 --> 00:13:32.440
indoor, and turn it on for the
one fragment that you do you

00:13:32.440 --> 00:13:33.970
really want to show it on.

00:13:33.970 --> 00:13:35.510
CHRIS BROADFOOT: And the other
thing you may have noticed in

00:13:35.510 --> 00:13:39.360
Sydney airport there were two
levels, so the user can change

00:13:39.360 --> 00:13:40.300
between the levels.

00:13:40.300 --> 00:13:42.460
That's there by default
as well.

00:13:42.460 --> 00:13:43.090
ANKUR KOTWAL: All right.

00:13:43.090 --> 00:13:44.060
Activity recognition.

00:13:44.060 --> 00:13:47.570
This is one of my favorite new
features of Google Play

00:13:47.570 --> 00:13:51.540
Services 3.1, because it allows
developers to register

00:13:51.540 --> 00:13:54.400
for call backs when the activity
that the user is

00:13:54.400 --> 00:13:55.770
taking changes.

00:13:55.770 --> 00:13:58.900
So you can find out whether the
user is still, whether the

00:13:58.900 --> 00:14:02.100
device is tilting, or you can
find out directly whether

00:14:02.100 --> 00:14:05.550
they're on foot, they're on a
bike, or they're driving.

00:14:05.550 --> 00:14:08.830
Now this is really, really
useful information, because it

00:14:08.830 --> 00:14:10.940
can affect the way you
might want to present

00:14:10.940 --> 00:14:12.730
your app to the user.

00:14:12.730 --> 00:14:16.026
If you're showing a map and you
can tell that they're in a

00:14:16.026 --> 00:14:18.540
car that's moving faster,
so they're driving--

00:14:18.540 --> 00:14:21.900
well, hopefully not driving, but
a passenger in the car--

00:14:21.900 --> 00:14:24.260
you can zoom out your
map so that it's not

00:14:24.260 --> 00:14:25.940
animating too quickly.

00:14:25.940 --> 00:14:27.090
And you can do that passively.

00:14:27.090 --> 00:14:29.830
These are the types of
delightful experiences that

00:14:29.830 --> 00:14:33.730
your users will maybe
consciously notice, but

00:14:33.730 --> 00:14:35.580
definitely subconsciously
it'll be a better

00:14:35.580 --> 00:14:37.190
experience for them.

00:14:37.190 --> 00:14:41.240
So in Google Now, at the end of
the month, you actually--

00:14:41.240 --> 00:14:43.760
many of you have probably seen
this card that tells you this

00:14:43.760 --> 00:14:47.130
is the activity that you
undertook over the month.

00:14:47.130 --> 00:14:50.040
We are actually using
the same APIs--

00:14:50.040 --> 00:14:52.590
the activity recognition APIs--
that you all have

00:14:52.590 --> 00:14:55.210
access to now as well.

00:14:55.210 --> 00:14:57.840
So the other thing I want to
mention is that there's a

00:14:57.840 --> 00:15:00.420
great talk on activity
recognition called,

00:15:00.420 --> 00:15:01.610
Behind the Blue Dot.

00:15:01.610 --> 00:15:03.990
And for those of you in this
room, it's already happened

00:15:03.990 --> 00:15:07.630
this morning, but you can go
and watch it on YouTube.

00:15:07.630 --> 00:15:10.480
So for everyone, if you haven't
seen it, it's a really

00:15:10.480 --> 00:15:12.525
great talk on how to use
the API as well as

00:15:12.525 --> 00:15:13.920
how they built it.

00:15:13.920 --> 00:15:17.430
And finally, we also have a code
lab tomorrow that shows

00:15:17.430 --> 00:15:20.240
you how to implement activity
recognition in your apps, and

00:15:20.240 --> 00:15:23.730
we can't wait to see what
you can do with it.

00:15:23.730 --> 00:15:25.375
All right, let's do
one more demo.

00:15:28.710 --> 00:15:32.790
This one is called a tour of San
Francisco, and the reason

00:15:32.790 --> 00:15:36.480
I want to show it off is because
this showcases my

00:15:36.480 --> 00:15:39.470
favorite feature of
the Maps API.

00:15:39.470 --> 00:15:40.720
And that's the camera.

00:15:43.670 --> 00:15:45.320
CHRIS BROADFOOT: So this demo's
demonstrating that you

00:15:45.320 --> 00:15:47.890
have full programmatic
access to the camera.

00:15:47.890 --> 00:15:50.900
You can see that there's
beautiful 3D buildings, and

00:15:50.900 --> 00:15:53.080
we're just transitioning between
these different camera

00:15:53.080 --> 00:15:55.610
viewpoints very smoothly.

00:15:55.610 --> 00:15:57.570
ANKUR KOTWAL: So all we do here
is we animate the camera,

00:15:57.570 --> 00:16:01.550
and we randomly assign
a tilt and a bearing.

00:16:01.550 --> 00:16:04.150
Where you'll notice that when
we move from location to

00:16:04.150 --> 00:16:06.105
location, we get this
beautiful zoom out

00:16:06.105 --> 00:16:07.650
and zoom back in.

00:16:07.650 --> 00:16:10.650
The 3D buildings just
look marvelous.

00:16:10.650 --> 00:16:13.650
The maps themselves are
vector maps, so

00:16:13.650 --> 00:16:15.760
they always stay sharp.

00:16:15.760 --> 00:16:18.240
And it just generally provides
such a nice cinematic

00:16:18.240 --> 00:16:18.580
experience.

00:16:18.580 --> 00:16:22.060
It's like doing those kind of
flyover through San Francisco.

00:16:22.060 --> 00:16:23.540
CHRIS BROADFOOT: So it's worth
noting that this demo is just

00:16:23.540 --> 00:16:26.470
showing the programmatic access
to the camera, but your

00:16:26.470 --> 00:16:30.130
users have full access to these
changes in cameras as

00:16:30.130 --> 00:16:33.210
well through the use
of gestures.

00:16:33.210 --> 00:16:35.585
ANKUR KOTWAL: All right,
switch back to slides.

00:16:38.580 --> 00:16:42.430
In general, camera on
Maps API, awesome.

00:16:42.430 --> 00:16:43.710
Make full use of it.

00:16:43.710 --> 00:16:46.220
As you include it in your maps,
don't think of your map

00:16:46.220 --> 00:16:49.150
as just something flat.

00:16:49.150 --> 00:16:51.170
Think of how you can make
it more tactile.

00:16:51.170 --> 00:16:52.820
Let me show you some
code on how we are

00:16:52.820 --> 00:16:54.160
animating the camera.

00:16:54.160 --> 00:17:01.270
We first create a CameraPosition
object.

00:17:01.270 --> 00:17:03.390
And this is basically saying,
where do I want

00:17:03.390 --> 00:17:04.990
the camera to be.

00:17:04.990 --> 00:17:10.510
We're able to specify a
location, tilt, bearing, and

00:17:10.510 --> 00:17:11.730
zoom level as well.

00:17:11.730 --> 00:17:14.890
CHRIS BROADFOOT: Now, be aware
that you can specify the zoom

00:17:14.890 --> 00:17:16.450
level as a float.

00:17:16.450 --> 00:17:18.589
So you can actually have
a fractional zoom.

00:17:18.589 --> 00:17:22.050
So you're not limited to
discreet zoom levels.

00:17:22.050 --> 00:17:23.990
ANKUR KOTWAL: Yeah,
it's continuous.

00:17:23.990 --> 00:17:26.359
Now, the other thing we can do
is actually chain animation.

00:17:26.359 --> 00:17:30.610
So in our demo just then, what
we were doing was once we got

00:17:30.610 --> 00:17:33.090
to a destination, we were moving
it to the next one.

00:17:33.090 --> 00:17:35.790
So you can do it with a listener
like we have here.

00:17:35.790 --> 00:17:38.640
When we pass it in, it lets us
know when the animation is

00:17:38.640 --> 00:17:40.940
complete, so it can trigger
the next one.

00:17:40.940 --> 00:17:42.790
CHRIS BROADFOOT: So there's also
a onCancel call back, and

00:17:42.790 --> 00:17:45.400
this will be triggered, for
example, if the user has

00:17:45.400 --> 00:17:47.800
panned away while the
animation's in progress.

00:17:47.800 --> 00:17:50.140
So if you were expecting to do
something when the animation

00:17:50.140 --> 00:17:52.490
is finished, maybe you could
do something else, if it's

00:17:52.490 --> 00:17:54.110
been canceled.

00:17:54.110 --> 00:17:55.400
ANKUR KOTWAL: All right.

00:17:55.400 --> 00:17:58.990
Let's have a look at
one more demo.

00:17:58.990 --> 00:18:00.700
CHRIS BROADFOOT: So, Ankur, have
you ever traveled to a

00:18:00.700 --> 00:18:03.320
city and had absolutely
no idea what to do?

00:18:03.320 --> 00:18:05.720
Maybe you've woken up
in the hotel and

00:18:05.720 --> 00:18:07.750
you've got a day off.

00:18:07.750 --> 00:18:08.890
ANKUR KOTWAL: That's actually
the type of

00:18:08.890 --> 00:18:10.640
traveler that I am, Chris.

00:18:10.640 --> 00:18:11.470
CHRIS BROADFOOT: Disorganized.

00:18:11.470 --> 00:18:12.330
ANKUR KOTWAL: No, no, no.

00:18:12.330 --> 00:18:13.070
Spontaneous.

00:18:13.070 --> 00:18:14.990
CHRIS BROADFOOT: OK.

00:18:14.990 --> 00:18:17.640
So Ankur and I thought it would
be cool to build a demo

00:18:17.640 --> 00:18:20.880
to address this use case.

00:18:20.880 --> 00:18:23.570
So once again this
is just a demo.

00:18:23.570 --> 00:18:25.815
It's not app quality.

00:18:29.280 --> 00:18:32.970
ANKUR KOTWAL: And so here
we are in Moscone.

00:18:32.970 --> 00:18:36.320
And, oh, bummer, there we go.

00:18:36.320 --> 00:18:39.530
CHRIS BROADFOOT: So we had an
interesting location there.

00:18:39.530 --> 00:18:40.880
ANKUR KOTWAL: So the first thing
we did was actually ask

00:18:40.880 --> 00:18:42.340
for location.

00:18:42.340 --> 00:18:44.970
And the map started off
with our location.

00:18:44.970 --> 00:18:48.800
It took a moment to get that,
but now that we have it.

00:18:48.800 --> 00:18:49.490
CHRIS BROADFOOT: Yeah,
so we're using

00:18:49.490 --> 00:18:50.820
the my-location layout.

00:18:50.820 --> 00:18:53.260
Now this is just one flag that
you set, and you get the

00:18:53.260 --> 00:18:56.090
my-location button, which you
can see in the top right, and

00:18:56.090 --> 00:18:58.450
when the user presses that,
the map is panned over to

00:18:58.450 --> 00:19:01.570
their current location, and a
blue dot is displayed on the

00:19:01.570 --> 00:19:03.030
map directly.

00:19:03.030 --> 00:19:04.540
ANKUR KOTWAL: Now, I noticed,
Chris, that we have some red

00:19:04.540 --> 00:19:05.640
markers on here.

00:19:05.640 --> 00:19:08.310
CHRIS BROADFOOT: Yes, so these
points are coming through the

00:19:08.310 --> 00:19:10.880
Places API, which is
a web service.

00:19:10.880 --> 00:19:13.600
So you just fire off a HTTP
request, and you get back all

00:19:13.600 --> 00:19:15.570
this interesting
location data.

00:19:15.570 --> 00:19:19.020
So if I just click on one of
these, and see that we're

00:19:19.020 --> 00:19:22.020
getting some interesting
places around here.

00:19:22.020 --> 00:19:23.270
A lot of hotels.

00:19:26.630 --> 00:19:27.410
All hotels.

00:19:27.410 --> 00:19:29.110
OK, good.

00:19:29.110 --> 00:19:32.940
And in the info window, which is
displayed about the market

00:19:32.940 --> 00:19:34.890
we're just showing
the placement.

00:19:34.890 --> 00:19:36.350
Now info window is fully
customizable.

00:19:36.350 --> 00:19:41.510
You can have your own custom
views through an info window

00:19:41.510 --> 00:19:43.530
adapter, but here we're just
showing the place name.

00:19:43.530 --> 00:19:44.900
Very simple.

00:19:44.900 --> 00:19:47.100
ANKUR KOTWAL: I also noticed
that there's this blue circle

00:19:47.100 --> 00:19:49.040
that's growing out
from the center.

00:19:49.040 --> 00:19:49.630
CHRIS BROADFOOT:
Yeah, exactly.

00:19:49.630 --> 00:19:52.380
So we're just using a circle,
which we talked about a little

00:19:52.380 --> 00:19:54.700
bit earlier, and we're
animating the

00:19:54.700 --> 00:19:56.850
radius of that circle.

00:19:56.850 --> 00:19:59.490
ANKUR KOTWAL: And this is a
neat visualization trick,

00:19:59.490 --> 00:20:02.930
because it's actually showing
us how far out from our

00:20:02.930 --> 00:20:05.110
location we're searching.

00:20:05.110 --> 00:20:07.570
CHRIS BROADFOOT: Yes, so this
showing to the user that the

00:20:07.570 --> 00:20:12.480
Places search is contained
within that radius.

00:20:12.480 --> 00:20:14.100
Just a nice visual indicator.

00:20:14.100 --> 00:20:17.790
And in fact, I've added
a long press listener.

00:20:17.790 --> 00:20:22.640
So if I long press over here,
the Places search then moves

00:20:22.640 --> 00:20:26.610
over to that new location, and
the user can see that they've

00:20:26.610 --> 00:20:31.320
got some feedback that this is
the new center of the search.

00:20:31.320 --> 00:20:32.690
ANKUR KOTWAL: So why don't we
pick a place that we might

00:20:32.690 --> 00:20:34.150
want to add to our itinerary?

00:20:34.150 --> 00:20:39.390
CHRIS BROADFOOT: OK, so I'm a
big fan of the Marina, so

00:20:39.390 --> 00:20:41.440
let's go over to Fisherman's
Wharf.

00:20:41.440 --> 00:20:44.920
You can see here that we've
painted a line from our

00:20:44.920 --> 00:20:48.440
location, which was provided
through the location API to

00:20:48.440 --> 00:20:51.100
the location that I've
just pressed.

00:20:51.100 --> 00:20:52.420
ANKUR KOTWAL: Now this is
a polyline, but there's

00:20:52.420 --> 00:20:54.100
something interesting about
it, because it's not a

00:20:54.100 --> 00:20:55.900
straight line from
where we started.

00:20:55.900 --> 00:20:56.440
CHRIS BROADFOOT: Exactly.

00:20:56.440 --> 00:21:00.510
It's actually the recommend
path for walking.

00:21:00.510 --> 00:21:04.100
And this data came from the
Directions API, which again is

00:21:04.100 --> 00:21:05.400
a web service.

00:21:05.400 --> 00:21:07.300
ANKUR KOTWAL: Now, I'm also
noticing that we have some

00:21:07.300 --> 00:21:10.310
extra information here on
the left-hand side.

00:21:10.310 --> 00:21:13.175
Not just the name, but we have
the distance and the time that

00:21:13.175 --> 00:21:14.540
it would take us to do this.

00:21:14.540 --> 00:21:15.060
CHRIS BROADFOOT: Precisely.

00:21:15.060 --> 00:21:18.020
So this information also came
through the Directions API.

00:21:18.020 --> 00:21:20.720
And you'll notice that
the sidebar says

00:21:20.720 --> 00:21:23.730
2.1 miles, 43 minutes.

00:21:23.730 --> 00:21:26.700
These values are localized from
the API, so you don't

00:21:26.700 --> 00:21:30.080
have to worry about localizing
inside your app,

00:21:30.080 --> 00:21:32.590
which is very handy.

00:21:32.590 --> 00:21:33.230
ANKUR KOTWAL: OK.

00:21:33.230 --> 00:21:35.270
Now there's this button
here, Magic Camera.

00:21:35.270 --> 00:21:36.650
You want to show us what
that is, Chris?

00:21:36.650 --> 00:21:40.080
CHRIS BROADFOOT: Oh, Magic
Camera's my favorite.

00:21:40.080 --> 00:21:40.710
OK.

00:21:40.710 --> 00:21:44.160
So you'll notice that the map is
moving around a little bit

00:21:44.160 --> 00:21:45.820
as I'm holding the device.

00:21:45.820 --> 00:21:46.930
ANKUR KOTWAL: I thought that's
just because you're nervous.

00:21:46.930 --> 00:21:49.680
CHRIS BROADFOOT: I am a little
nervous, yes, that's true.

00:21:49.680 --> 00:21:54.750
OK, so as I hold the device up,
you'll see the map it's

00:21:54.750 --> 00:21:58.050
tilting and zooming
at the same time.

00:21:58.050 --> 00:22:01.230
Now, once again, I'll just put
the tablet down and you can

00:22:01.230 --> 00:22:06.590
see that it's zoomed out, and
it's flat once again.

00:22:06.590 --> 00:22:08.860
So let's go back up.

00:22:08.860 --> 00:22:11.890
And you can say that the 3D
buildings start to to appear

00:22:11.890 --> 00:22:13.500
as I've brought the device up.

00:22:13.500 --> 00:22:19.010
Now you can imagine that your
user's picked up their device,

00:22:19.010 --> 00:22:21.830
and they're looking out to the
world in front of them.

00:22:21.830 --> 00:22:24.030
ANKUR KOTWAL: So if you're
thinking about it from the use

00:22:24.030 --> 00:22:27.010
case that we started with, an
itinerary app, this is a nice

00:22:27.010 --> 00:22:27.920
third person view.

00:22:27.920 --> 00:22:29.580
We can see what's
in front of us.

00:22:29.580 --> 00:22:31.650
If we were to visit
this location,

00:22:31.650 --> 00:22:33.170
what's in this direction?

00:22:33.170 --> 00:22:33.820
CHRIS BROADFOOT: Exactly.

00:22:33.820 --> 00:22:34.800
ANKUR KOTWAL: So speaking
of direction,

00:22:34.800 --> 00:22:36.020
what's in that direction?

00:22:36.020 --> 00:22:36.290
CHRIS BROADFOOT: OK.

00:22:36.290 --> 00:22:39.680
So let's move the tablet over
there a little bit.

00:22:39.680 --> 00:22:43.000
So once again we're using the
senses in the device to detect

00:22:43.000 --> 00:22:45.920
the position, the orientation
of the device in the real

00:22:45.920 --> 00:22:50.370
world and using these values
to alter the Maps camera.

00:22:50.370 --> 00:22:54.110
So it's a little awkward if it
was turning here, that's

00:22:54.110 --> 00:22:54.970
turning my back to you.

00:22:54.970 --> 00:22:57.630
But you can see the
city behind us.

00:22:57.630 --> 00:23:00.320
And as I keep panning around.

00:23:00.320 --> 00:23:01.730
Let's put the tablet down.

00:23:01.730 --> 00:23:03.870
So this is almost as though
the user's going

00:23:03.870 --> 00:23:05.400
into planning mode.

00:23:05.400 --> 00:23:08.410
You can imagine someone laying
down a paper map and spreading

00:23:08.410 --> 00:23:10.600
it out all in front of them.

00:23:10.600 --> 00:23:12.680
Once again, I'm going
to long press.

00:23:12.680 --> 00:23:15.900
Let's head over to Alcatraz.

00:23:15.900 --> 00:23:19.350
So we're going to get walking
directions over there, Ankur.

00:23:19.350 --> 00:23:20.340
ANKUR KOTWAL: Well, hold on.

00:23:20.340 --> 00:23:22.750
That was interesting, because
we asked for walking

00:23:22.750 --> 00:23:26.020
directions, but out from our
blue marker, we went right and

00:23:26.020 --> 00:23:27.500
then up towards it.

00:23:27.500 --> 00:23:28.670
What's up with that?

00:23:28.670 --> 00:23:30.000
CHRIS BROADFOOT: So this
is actually us

00:23:30.000 --> 00:23:31.870
getting onto a ferry.

00:23:31.870 --> 00:23:35.120
Because there's no way of
directly walking over there,

00:23:35.120 --> 00:23:39.840
the Directions API has added a
step for the ferry itself.

00:23:39.840 --> 00:23:41.740
This is also reflected
in the time.

00:23:41.740 --> 00:23:45.690
You can see that it takes 29
minutes over 2.7 miles to get

00:23:45.690 --> 00:23:46.340
over there.

00:23:46.340 --> 00:23:47.950
ANKUR KOTWAL: So you're telling
me the Directions API

00:23:47.950 --> 00:23:50.020
not just does walking and
driving, but we get public

00:23:50.020 --> 00:23:51.390
transport information,
as well?

00:23:51.390 --> 00:23:52.140
CHRIS BROADFOOT: Exactly.

00:23:52.140 --> 00:23:54.990
So let's hop into magic camera
on Alcatraz, because I think

00:23:54.990 --> 00:23:56.510
that's pretty cool.

00:23:56.510 --> 00:23:59.840
And you can see Alcatraz there
and the path that you used to

00:23:59.840 --> 00:24:01.600
walk up to the top.

00:24:01.600 --> 00:24:03.080
ANKUR KOTWAL: It even has the
path from where we got to the

00:24:03.080 --> 00:24:06.250
ferry terminal up to the actual
entrance of the island.

00:24:06.250 --> 00:24:08.360
CHRIS BROADFOOT:
Yeah, exactly.

00:24:08.360 --> 00:24:08.530
ANKUR KOTWAL: Awesome.

00:24:08.530 --> 00:24:09.890
Let's see how we put
this together.

00:24:09.890 --> 00:24:11.140
CHRIS BROADFOOT: OK.

00:24:13.650 --> 00:24:16.130
So let's talk about Magic
Camera, because that's one of

00:24:16.130 --> 00:24:17.570
my favorite things
about this demo.

00:24:21.800 --> 00:24:24.350
So first of all, let's talk
about this sensor data.

00:24:24.350 --> 00:24:26.810
We're using the rotation
vector sensor.

00:24:26.810 --> 00:24:30.270
Now, Ankur, you did a talk at
last year's Google I/O about

00:24:30.270 --> 00:24:31.050
Android sensors.

00:24:31.050 --> 00:24:32.870
Can you tell us a bit more
about this sensor?

00:24:32.870 --> 00:24:34.630
ANKUR KOTWAL: Yeah, so the
rotation vector sensor is an

00:24:34.630 --> 00:24:36.980
interesting one, because it
doesn't map directly to a

00:24:36.980 --> 00:24:38.330
hardware sensor.

00:24:38.330 --> 00:24:40.520
It actually aggregates
multiple sensors.

00:24:40.520 --> 00:24:42.760
It uses the accelerometer,
the gyroscope, and the

00:24:42.760 --> 00:24:44.110
magnetometer.

00:24:44.110 --> 00:24:46.910
So the nice thing about it is
that you get some very nice

00:24:46.910 --> 00:24:50.330
data, because its
algorithmically putting that

00:24:50.330 --> 00:24:52.600
together and presenting
it you in a nice way.

00:24:52.600 --> 00:24:55.390
But even better than that, you
don't actually have to check

00:24:55.390 --> 00:24:58.740
whether that particular sensor
exists, because if the

00:24:58.740 --> 00:25:01.950
gyroscope isn't on that
particular Android device,

00:25:01.950 --> 00:25:04.860
this sensor will-- because it's
a fuse sensor-- it'll

00:25:04.860 --> 00:25:06.540
still give you back data.

00:25:06.540 --> 00:25:09.490
It'll do the best that it can
do with the sensors that it

00:25:09.490 --> 00:25:11.060
has access to.

00:25:11.060 --> 00:25:16.690
So the rotation vector was
introduced in Android 2.3, or

00:25:16.690 --> 00:25:17.830
Gingerbread.

00:25:17.830 --> 00:25:20.115
But it's really cool
from that sense.

00:25:20.115 --> 00:25:22.040
CHRIS BROADFOOT: I've also
noticed that the data that

00:25:22.040 --> 00:25:24.680
comes back from the sensor is
quite clean, so you only have

00:25:24.680 --> 00:25:28.620
to do very small amounts
of data cleaning on it.

00:25:28.620 --> 00:25:30.410
So reading from it
is very simple.

00:25:30.410 --> 00:25:32.230
We just simply register
a listener

00:25:32.230 --> 00:25:34.160
with our update interval.

00:25:34.160 --> 00:25:37.070
So here again, we're using 16
milliseconds to get an update

00:25:37.070 --> 00:25:38.850
for every frame.

00:25:38.850 --> 00:25:41.220
And the listener's
just very simple.

00:25:41.220 --> 00:25:45.140
To avoid allocations for every
frame, we just preallocate an

00:25:45.140 --> 00:25:48.340
array and keep them as fields.

00:25:48.340 --> 00:25:50.660
And then for each update, we
just populate those fields

00:25:50.660 --> 00:25:52.240
with the relevant data.

00:25:52.240 --> 00:25:56.230
So we read the rotation matrix
from the sensor's event

00:25:56.230 --> 00:26:00.520
values, and then convert that
rotation matrix into three

00:26:00.520 --> 00:26:03.610
values that are more
applicable for most

00:26:03.610 --> 00:26:07.880
applications, and that's
azimuth, tilt and roll.

00:26:07.880 --> 00:26:10.970
We're ignoring roll for this
demo and just using azimuth,

00:26:10.970 --> 00:26:14.230
which you can essentially
consider to be the direction

00:26:14.230 --> 00:26:17.400
that north is in, and
tilt, which is just

00:26:17.400 --> 00:26:18.870
the device's tilt.

00:26:18.870 --> 00:26:19.190
ANKUR KOTWAL: Yeah.

00:26:19.190 --> 00:26:22.120
So if you're hearing us talk
about the rotation vector and

00:26:22.120 --> 00:26:24.640
you're hearing words like
matrices, and they're scaring

00:26:24.640 --> 00:26:28.180
you, the nice thing is we have
some utility functions that

00:26:28.180 --> 00:26:30.600
handle it for you, and that's
all the code that you need to

00:26:30.600 --> 00:26:33.920
transform it into usable
information on maps.

00:26:33.920 --> 00:26:34.360
CHRIS BROADFOOT: Exactly.

00:26:34.360 --> 00:26:35.190
ANKUR KOTWAL: Let's
see how we use it.

00:26:35.190 --> 00:26:35.450
CHRIS BROADFOOT: OK.

00:26:35.450 --> 00:26:39.940
So it's actually a very simple
mapping between those azimuth

00:26:39.940 --> 00:26:43.430
and tilt and all of the
camera's properties.

00:26:43.430 --> 00:26:45.920
So we need to clamp the
tilt between zero

00:26:45.920 --> 00:26:48.130
and 67 and 1/2 degrees.

00:26:48.130 --> 00:26:51.080
Those are the acceptable values
for the Maps API.

00:26:51.080 --> 00:26:53.140
We can just pass the Azimuth
straight through to the

00:26:53.140 --> 00:26:54.540
bearing property.

00:26:54.540 --> 00:26:58.470
We don't need to do any mod by
360 or anything like that.

00:26:58.470 --> 00:27:00.420
The API handles that for you.

00:27:00.420 --> 00:27:03.840
And the more interesting thing
is the mapping between tilt of

00:27:03.840 --> 00:27:07.630
the device and the map's zoom.

00:27:07.630 --> 00:27:10.840
So we just essentially need to
zoom in as the map is brought

00:27:10.840 --> 00:27:14.840
out toward you, and zoom out
when the map is put down.

00:27:14.840 --> 00:27:18.550
So we start at a minimum of 13,
which is zoomed out, and

00:27:18.550 --> 00:27:19.840
they go up to 18,
which is where

00:27:19.840 --> 00:27:21.340
buildings start to appear.

00:27:21.340 --> 00:27:23.080
ANKUR KOTWAL: Now, I notice
also in this code, Chris,

00:27:23.080 --> 00:27:27.060
you're doing moveCamera, whereas
then in the demo that

00:27:27.060 --> 00:27:28.980
I did I was doing
animateCamera.

00:27:28.980 --> 00:27:30.670
So can you just tell us
a little bit about the

00:27:30.670 --> 00:27:32.150
differences between those two?

00:27:32.150 --> 00:27:35.240
CHRIS BROADFOOT: Yes, so
essentially I used moveCamera,

00:27:35.240 --> 00:27:37.340
which just snaps the
camera into place.

00:27:37.340 --> 00:27:41.070
AnimateCamera will animate
transitions smoothly into the

00:27:41.070 --> 00:27:42.480
new camera position.

00:27:42.480 --> 00:27:45.130
Whereas moveCamera just
goes straight there.

00:27:45.130 --> 00:27:47.670
And so that was useful in this
demo, because we're updating

00:27:47.670 --> 00:27:50.360
the camera every frame, so
there's no point animating

00:27:50.360 --> 00:27:52.170
between them.

00:27:52.170 --> 00:27:57.210
ANKUR KOTWAL: Now one of the
recurring themes at I/O 2013

00:27:57.210 --> 00:27:59.460
has been about how you
can delight users.

00:27:59.460 --> 00:28:03.110
And sometimes delighting users
means putting in functionality

00:28:03.110 --> 00:28:06.070
that they may not actually
notice, but is actually

00:28:06.070 --> 00:28:08.500
significantly improving
the experience.

00:28:08.500 --> 00:28:13.310
So Chris had something in his
demo that I think really

00:28:13.310 --> 00:28:16.090
delights the user but isn't
necessarily obvious.

00:28:16.090 --> 00:28:18.210
And we want to show that now.

00:28:18.210 --> 00:28:19.630
CHRIS BROADFOOT: And, yeah,
excuse me if this explain

00:28:19.630 --> 00:28:22.270
explanation's a little bit
convoluted, but I'm going to

00:28:22.270 --> 00:28:25.100
talk about this offset
camera target.

00:28:25.100 --> 00:28:29.010
Now you may have noticed, if
you just look on the left,

00:28:29.010 --> 00:28:32.430
this is what happens if we
continually animate the

00:28:32.430 --> 00:28:34.480
bearing around a
certain point.

00:28:34.480 --> 00:28:38.850
So we're pivoting the map
around the blue point.

00:28:38.850 --> 00:28:39.140
OK.

00:28:39.140 --> 00:28:42.910
So if you thought about the
itinerary demo, if you brought

00:28:42.910 --> 00:28:46.160
the tablet up, and you're
looking around, it's not a

00:28:46.160 --> 00:28:48.100
very good experience, because
you're seeing all of these

00:28:48.100 --> 00:28:49.980
markers that are essentially
behind you,

00:28:49.980 --> 00:28:52.680
behind the pivot point.

00:28:52.680 --> 00:28:57.480
So in the demo, we actually
offset the pivot point by a

00:28:57.480 --> 00:28:59.060
certain number of meters.

00:28:59.060 --> 00:29:02.020
Now this is just a bit of magic
so that as you put the

00:29:02.020 --> 00:29:05.000
map down, the pivot point is in
the center of the map and

00:29:05.000 --> 00:29:08.310
not at the bottom of the map,
but you can experiment with

00:29:08.310 --> 00:29:09.560
this a little bit.

00:29:09.560 --> 00:29:11.150
ANKUR KOTWAL: So as you're
holding it up from a third

00:29:11.150 --> 00:29:13.780
person point of view, the
right-hand side is actually a

00:29:13.780 --> 00:29:16.200
much nicer experience, because
you're seeing what's in front

00:29:16.200 --> 00:29:18.300
of you, and it's really
truly providing you a

00:29:18.300 --> 00:29:19.780
third person view.

00:29:19.780 --> 00:29:21.430
But when it's flat,
you do want to

00:29:21.430 --> 00:29:23.050
see as much as possible.

00:29:23.050 --> 00:29:27.070
So this is just a subtle tweak,
but one that really

00:29:27.070 --> 00:29:28.720
makes a difference
to the experience

00:29:28.720 --> 00:29:30.360
that the users have.

00:29:30.360 --> 00:29:32.230
CHRIS BROADFOOT: So if you look
at the right-hand side

00:29:32.230 --> 00:29:36.430
map, the blue marker is still
the center of the map, but

00:29:36.430 --> 00:29:37.590
you'll notice that
it's actually

00:29:37.590 --> 00:29:39.210
moving across the world.

00:29:39.210 --> 00:29:42.800
It's actually moving across
on that blue circle.

00:29:42.800 --> 00:29:45.710
The red point is the pivot point
and that's essentially

00:29:45.710 --> 00:29:49.760
what we're animating
our bearing around.

00:29:49.760 --> 00:29:53.250
So this is achieved through a
function called computeOffset,

00:29:53.250 --> 00:29:56.010
which is just a way of getting
another point on the surface

00:29:56.010 --> 00:29:58.410
of the earth a certain number
of meters and with a certain

00:29:58.410 --> 00:30:00.980
bearing away from
another point.

00:30:00.980 --> 00:30:06.510
So here the mLatLng variable is
the pivot point, and we're

00:30:06.510 --> 00:30:09.040
just offsetting that by a
certain number of meters.

00:30:09.040 --> 00:30:10.300
It's magic.

00:30:10.300 --> 00:30:13.230
And we're just passing through
that azimuth once again, which

00:30:13.230 --> 00:30:14.380
we used for the bearing.

00:30:14.380 --> 00:30:17.420
And that's why that point
essentially doesn't move as

00:30:17.420 --> 00:30:19.090
the camera's moving,
because those two

00:30:19.090 --> 00:30:21.520
properties are bound together.

00:30:21.520 --> 00:30:24.270
So this spherical util
is available at

00:30:24.270 --> 00:30:27.230
github.com/googlemaps.

00:30:27.230 --> 00:30:30.180
And it's in the Android Maps
utils library, and there's a

00:30:30.180 --> 00:30:32.620
whole bunch of really great
functions in there.

00:30:32.620 --> 00:30:34.940
If you're familiar with our
JavaScript API, it's all of

00:30:34.940 --> 00:30:35.950
those functions.

00:30:35.950 --> 00:30:39.290
Things like computing the length
of the path or the area

00:30:39.290 --> 00:30:40.540
of a polygon.

00:30:42.550 --> 00:30:43.470
OK.

00:30:43.470 --> 00:30:45.060
Let's move on.

00:30:45.060 --> 00:30:47.440
So let's talk about
the Places API.

00:30:47.440 --> 00:30:49.300
We mentioned that it's
a web service.

00:30:49.300 --> 00:30:52.590
This means that you have to send
an HTTP web request to

00:30:52.590 --> 00:30:53.990
get back the data.

00:30:53.990 --> 00:30:57.170
So here send it to
maps.googeapis.com.

00:30:57.170 --> 00:31:00.420
You do need an API
key once again.

00:31:00.420 --> 00:31:01.930
And you just pass through
the center of the

00:31:01.930 --> 00:31:04.090
search and the radius.

00:31:04.090 --> 00:31:05.940
We're also specifying
a types filter.

00:31:05.940 --> 00:31:08.500
You can filter over 100 types.

00:31:08.500 --> 00:31:11.330
For example, restaurants,
lodging.

00:31:11.330 --> 00:31:13.500
We saw a lot of hotels, so maybe
you want to filter out

00:31:13.500 --> 00:31:14.850
the lodging.

00:31:14.850 --> 00:31:19.150
And also art galleries,
and things like that.

00:31:19.150 --> 00:31:20.330
ANKUR KOTWAL: So let's
look at their JSON

00:31:20.330 --> 00:31:21.590
response that we get back.

00:31:21.590 --> 00:31:23.010
CHRIS BROADFOOT: Yes, so you
get back a whole bunch of

00:31:23.010 --> 00:31:24.510
interesting information.

00:31:24.510 --> 00:31:29.170
In this demo, we use the lat,
long parts of the geometry.

00:31:29.170 --> 00:31:32.400
And we just pass those straight
through to the marker

00:31:32.400 --> 00:31:34.680
to display that information
on the map.

00:31:34.680 --> 00:31:36.740
We also use the title.

00:31:36.740 --> 00:31:39.550
And, we didn't use the rating
or the reference.

00:31:39.550 --> 00:31:41.780
The reference is great if you
need to go and fetch more data

00:31:41.780 --> 00:31:43.915
about that place or show
some business photos.

00:31:49.480 --> 00:31:51.360
ANKUR KOTWAL: We've already
talked about animating one or

00:31:51.360 --> 00:31:52.400
two markers.

00:31:52.400 --> 00:31:54.640
But when you have lots of
markers, like we did in that

00:31:54.640 --> 00:31:57.800
demo when we moved from location
to location, we

00:31:57.800 --> 00:31:58.970
cleared one set of markers.

00:31:58.970 --> 00:32:00.890
We added new markers.

00:32:00.890 --> 00:32:02.450
You have to do a little bit
of marker management.

00:32:02.450 --> 00:32:06.050
So this is a topic we get asked
about from time to time,

00:32:06.050 --> 00:32:08.510
so we thought it'd be good
to shed some light on it.

00:32:08.510 --> 00:32:10.250
CHRIS BROADFOOT: Yeah, so
because we only had two

00:32:10.250 --> 00:32:14.170
classes of markers, the best way
to store that was in two

00:32:14.170 --> 00:32:16.010
different hash maps.

00:32:16.010 --> 00:32:18.030
We are using for the place
results, just a

00:32:18.030 --> 00:32:19.560
regular hash map.

00:32:19.560 --> 00:32:22.730
And it's a mapping between the
marker and the relevant place

00:32:22.730 --> 00:32:24.040
result data.

00:32:24.040 --> 00:32:26.620
That object could be anything
that you like.

00:32:26.620 --> 00:32:29.510
We're using a linked hash map
for the destinations.

00:32:29.510 --> 00:32:31.870
And this is just because a
linked hash map provides a

00:32:31.870 --> 00:32:34.680
consistent ordering as you
iterate over them, so that's

00:32:34.680 --> 00:32:39.040
great if you need, for
example, a list.

00:32:39.040 --> 00:32:41.880
So here we can see that the
blue markers are the

00:32:41.880 --> 00:32:45.640
destinations, and the red
markers are the place results.

00:32:45.640 --> 00:32:48.970
So this is useful, as Ankur
said, when you need to perform

00:32:48.970 --> 00:32:52.030
a clearing of a particular
sort of maker.

00:32:52.030 --> 00:32:55.200
So here we're just iterating
over the place result markers

00:32:55.200 --> 00:32:58.240
and just clearing them before
we clear that map, before we

00:32:58.240 --> 00:33:01.010
re-add the results from
the new array.

00:33:03.530 --> 00:33:07.520
You can also do great things
like in the info window, click

00:33:07.520 --> 00:33:10.790
listener, or all on market,
click listener, go and

00:33:10.790 --> 00:33:12.520
look up that data.

00:33:12.520 --> 00:33:15.910
So here, we're actually just
ignoring the clicks for the

00:33:15.910 --> 00:33:17.350
destination markers.

00:33:17.350 --> 00:33:20.660
But you could imagine switching
behavior based on

00:33:20.660 --> 00:33:24.330
whether a look up to that map
was successful or not.

00:33:24.330 --> 00:33:27.940
So using markers as keys for
maps is really good.

00:33:27.940 --> 00:33:30.200
ANKUR KOTWAL: Let's look at how
we did the visualization

00:33:30.200 --> 00:33:32.350
of the search radius.

00:33:32.350 --> 00:33:35.710
CHRIS BROADFOOT: So it's just
a very simple animation,

00:33:35.710 --> 00:33:39.330
animating the radius and some
of the visual properties, so

00:33:39.330 --> 00:33:42.390
in this case just the stroke
of the circle.

00:33:42.390 --> 00:33:43.500
ANKUR KOTWAL: And we're
using what's called a

00:33:43.500 --> 00:33:44.890
value animator here.

00:33:44.890 --> 00:33:48.220
So this is a really neat set
of utility classes that we

00:33:48.220 --> 00:33:50.610
added to Ice Cream Sandwich,
called a

00:33:50.610 --> 00:33:52.380
property animation framework.

00:33:52.380 --> 00:33:56.570
And what it allows you to do is
in really trivial amounts

00:33:56.570 --> 00:34:01.470
of code, you can animate values
on your class from a

00:34:01.470 --> 00:34:04.530
start to an end point and
provide a duration.

00:34:04.530 --> 00:34:07.475
You can also provide
an interpolator.

00:34:07.475 --> 00:34:10.219
In shorthand, it's really nice
to be able to use it.

00:34:10.219 --> 00:34:13.730
So if you're targeting Ice Cream
Sandwich or later, the

00:34:13.730 --> 00:34:17.130
property animation framework
is a great thing to use.

00:34:17.130 --> 00:34:19.690
If you are targeting older
versions, you can use a

00:34:19.690 --> 00:34:22.420
Handler to achieve
a similar effect.

00:34:22.420 --> 00:34:23.739
CHRIS BROADFOOT: And I believe
you could use an Object

00:34:23.739 --> 00:34:26.340
Animator, if you're only
animating one property.

00:34:26.340 --> 00:34:28.830
So if it's just radius,
you do that much more

00:34:28.830 --> 00:34:31.989
easily than this even.

00:34:31.989 --> 00:34:32.210
OK.

00:34:32.210 --> 00:34:34.120
So let's talk about the
Directions API.

00:34:34.120 --> 00:34:37.119
This was the other web service
that we use in this example.

00:34:37.119 --> 00:34:40.949
So this is one of a suite of
Google Maps web services.

00:34:40.949 --> 00:34:43.580
You're just passing the origin
and destination.

00:34:43.580 --> 00:34:45.810
Here we're using the latitude
and longitude values for

00:34:45.810 --> 00:34:48.679
accuracy, but you could also
pass through an address, and

00:34:48.679 --> 00:34:52.389
the Directions API will go and
geocode that to these same

00:34:52.389 --> 00:34:54.199
latitude and longitude.

00:34:54.199 --> 00:34:56.380
You get back very detailed
information, actually

00:34:56.380 --> 00:34:58.110
turn-by-turn directions
and all of the

00:34:58.110 --> 00:35:00.830
points for those steps.

00:35:00.830 --> 00:35:04.450
In this demo, we didn't
use any of that stuff.

00:35:04.450 --> 00:35:06.980
We used the distance,
the duration,

00:35:06.980 --> 00:35:09.020
and an overview polyline.

00:35:09.020 --> 00:35:11.800
As we said, the distance and
duration are localized, but of

00:35:11.800 --> 00:35:14.330
course, because it's an API, you
get back structured data,

00:35:14.330 --> 00:35:16.870
so you get back meters
and seconds as well.

00:35:16.870 --> 00:35:20.320
And this is great for example,
if we wanted to display the

00:35:20.320 --> 00:35:24.120
total time, total walking
time, or total distance.

00:35:24.120 --> 00:35:24.800
ANKUR KOTWAL: And you
mentioned that

00:35:24.800 --> 00:35:25.620
the values are localized.

00:35:25.620 --> 00:35:29.035
So obviously, in the States,
we get it as miles.

00:35:29.035 --> 00:35:30.360
CHRIS BROADFOOT: Or
feet as well.

00:35:30.360 --> 00:35:31.990
ANKUR KOTWAL: Most of the rest
of the world uses the metric

00:35:31.990 --> 00:35:34.070
system, so it'll be nicely
converted to

00:35:34.070 --> 00:35:36.300
kilometers for you.

00:35:36.300 --> 00:35:38.920
CHRIS BROADFOOT: Yeah, so this
overview polyline may look

00:35:38.920 --> 00:35:41.210
like a whole bunch
of gibberish.

00:35:41.210 --> 00:35:43.860
I personally can decode
it on the fly.

00:35:43.860 --> 00:35:45.980
I don't know about you guys.

00:35:45.980 --> 00:35:49.080
But I have released some code
in the same utility library

00:35:49.080 --> 00:35:51.420
that will help you decode this
into a list of latitude and

00:35:51.420 --> 00:35:53.280
longitude points.

00:35:53.280 --> 00:35:56.620
And you pass that straight
through to a polyline.

00:35:56.620 --> 00:35:59.540
And you can see here this is the
line that's represented by

00:35:59.540 --> 00:36:02.350
this interesting string.

00:36:02.350 --> 00:36:04.190
ANKUR KOTWAL: So we're not using
any of the levels there,

00:36:04.190 --> 00:36:05.600
we're just using the
points, right?

00:36:05.600 --> 00:36:07.220
CHRIS BROADFOOT:
Yeah, exactly.

00:36:07.220 --> 00:36:10.390
So it's a much more compact
format than sending down all

00:36:10.390 --> 00:36:13.870
of those numbers.

00:36:13.870 --> 00:36:14.610
ANKUR KOTWAL: All right.

00:36:14.610 --> 00:36:18.790
Well, to summarize, today we've
talked about the maps

00:36:18.790 --> 00:36:24.440
API and just how much control
you have over it.

00:36:24.440 --> 00:36:26.100
Things like the camera.

00:36:26.100 --> 00:36:28.440
Things like indoor maps.

00:36:28.440 --> 00:36:31.660
We've also talked about how
we can add other bits of

00:36:31.660 --> 00:36:33.050
information to provide a better

00:36:33.050 --> 00:36:34.460
experience for our users.

00:36:34.460 --> 00:36:35.490
Sensors.

00:36:35.490 --> 00:36:38.510
Or even the Google Maps
web services.

00:36:38.510 --> 00:36:42.060
So we hope that this is the type
of talk that you can take

00:36:42.060 --> 00:36:44.740
back and build some apps that
really delight us, because

00:36:44.740 --> 00:36:46.280
we'd love to hear about them.

00:36:46.280 --> 00:36:46.970
CHRIS BROADFOOT:
Yeah, exactly.

00:36:46.970 --> 00:36:48.880
And so the other one
thing that I'd like

00:36:48.880 --> 00:36:49.760
to leave you with.

00:36:49.760 --> 00:36:52.980
If you guys out there have a map
that's using the v1 Maps

00:36:52.980 --> 00:36:56.640
API, or MapView, I strongly
encourage you to upgrade to

00:36:56.640 --> 00:36:57.700
the new API.

00:36:57.700 --> 00:37:01.750
It's very easy to get going and
will delight your users.

00:37:01.750 --> 00:37:05.390
It's a massive improvement
in UI and API over

00:37:05.390 --> 00:37:07.350
the existing MapView.

00:37:07.350 --> 00:37:08.680
ANKUR KOTWAL: And continuously
updated.

00:37:08.680 --> 00:37:09.540
CHRIS BROADFOOT:
Yeah, exactly.

00:37:09.540 --> 00:37:11.500
ANKUR KOTWAL: Thanks to
Google Play Services.

00:37:11.500 --> 00:37:13.180
CHRIS BROADFOOT: So for those of
you here in person, we are

00:37:13.180 --> 00:37:16.330
running a code lab tomorrow
afternoon.

00:37:16.330 --> 00:37:19.210
And for those of you that can't
attend in person, please

00:37:19.210 --> 00:37:23.040
do go and check out the online
resources on both the Android

00:37:23.040 --> 00:37:24.590
developer resources
and the Google

00:37:24.590 --> 00:37:26.810
Maps developer resources.

00:37:26.810 --> 00:37:28.520
ANKUR KOTWAL: Thank you very
much for your time today.

00:37:28.520 --> 00:37:31.732
[APPLAUSE]

