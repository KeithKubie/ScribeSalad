WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:01.760
you've learned a lot about confidence

00:00:01.760 --> 00:00:01.770
you've learned a lot about confidence
 

00:00:01.770 --> 00:00:04.640
you've learned a lot about confidence
everything ranging from the architecture

00:00:04.640 --> 00:00:04.650
everything ranging from the architecture
 

00:00:04.650 --> 00:00:07.130
everything ranging from the architecture
of a continent to how to use it for

00:00:07.130 --> 00:00:07.140
of a continent to how to use it for
 

00:00:07.140 --> 00:00:10.400
of a continent to how to use it for
image recognition to object detection to

00:00:10.400 --> 00:00:10.410
image recognition to object detection to
 

00:00:10.410 --> 00:00:12.470
image recognition to object detection to
face recognition and neuro style

00:00:12.470 --> 00:00:12.480
face recognition and neuro style
 

00:00:12.480 --> 00:00:15.110
face recognition and neuro style
transfer and even though most of our

00:00:15.110 --> 00:00:15.120
transfer and even though most of our
 

00:00:15.120 --> 00:00:17.840
transfer and even though most of our
discussion has focus on images on sort

00:00:17.840 --> 00:00:17.850
discussion has focus on images on sort
 

00:00:17.850 --> 00:00:20.420
discussion has focus on images on sort
of 2d data because images are so

00:00:20.420 --> 00:00:20.430
of 2d data because images are so
 

00:00:20.430 --> 00:00:22.609
of 2d data because images are so
pervasive it turns out that many of the

00:00:22.609 --> 00:00:22.619
pervasive it turns out that many of the
 

00:00:22.619 --> 00:00:24.529
pervasive it turns out that many of the
ideas you've learned about also apply

00:00:24.529 --> 00:00:24.539
ideas you've learned about also apply
 

00:00:24.539 --> 00:00:28.550
ideas you've learned about also apply
not just to 2d images but also to 1d

00:00:28.550 --> 00:00:28.560
not just to 2d images but also to 1d
 

00:00:28.560 --> 00:00:32.420
not just to 2d images but also to 1d
data as well as to 3d data let's take a

00:00:32.420 --> 00:00:32.430
data as well as to 3d data let's take a
 

00:00:32.430 --> 00:00:34.610
data as well as to 3d data let's take a
look in the first week of this course

00:00:34.610 --> 00:00:34.620
look in the first week of this course
 

00:00:34.620 --> 00:00:37.430
look in the first week of this course
you learn about the 2d convolution where

00:00:37.430 --> 00:00:37.440
you learn about the 2d convolution where
 

00:00:37.440 --> 00:00:40.910
you learn about the 2d convolution where
you might input a 14 by 14 image and

00:00:40.910 --> 00:00:40.920
you might input a 14 by 14 image and
 

00:00:40.920 --> 00:00:43.729
you might input a 14 by 14 image and
convolve that with a five by five filter

00:00:43.729 --> 00:00:43.739
convolve that with a five by five filter
 

00:00:43.739 --> 00:00:47.979
convolve that with a five by five filter
and you saw how 14 by 14 convolved with

00:00:47.979 --> 00:00:47.989
and you saw how 14 by 14 convolved with
 

00:00:47.989 --> 00:00:52.700
and you saw how 14 by 14 convolved with
five by five this gives you a 10 by 10

00:00:52.700 --> 00:00:52.710
five by five this gives you a 10 by 10
 

00:00:52.710 --> 00:00:55.910
five by five this gives you a 10 by 10
output and if you had multiple channels

00:00:55.910 --> 00:00:55.920
output and if you had multiple channels
 

00:00:55.920 --> 00:00:59.209
output and if you had multiple channels
maybe there was 14 by 14 by 3 then it

00:00:59.209 --> 00:00:59.219
maybe there was 14 by 14 by 3 then it
 

00:00:59.219 --> 00:01:02.630
maybe there was 14 by 14 by 3 then it
would be 5 by 5 that matches the same

00:01:02.630 --> 00:01:02.640
would be 5 by 5 that matches the same
 

00:01:02.640 --> 00:01:04.250
would be 5 by 5 that matches the same
three and then if you have multiple

00:01:04.250 --> 00:01:04.260
three and then if you have multiple
 

00:01:04.260 --> 00:01:06.800
three and then if you have multiple
filters say 16 filters you end up with

00:01:06.800 --> 00:01:06.810
filters say 16 filters you end up with
 

00:01:06.810 --> 00:01:10.250
filters say 16 filters you end up with
10 by 10 by 16 it turns out that the

00:01:10.250 --> 00:01:10.260
10 by 10 by 16 it turns out that the
 

00:01:10.260 --> 00:01:13.370
10 by 10 by 16 it turns out that the
sooner idea can be applied to 1d data as

00:01:13.370 --> 00:01:13.380
sooner idea can be applied to 1d data as
 

00:01:13.380 --> 00:01:17.359
sooner idea can be applied to 1d data as
well for example on the left is an EKG

00:01:17.359 --> 00:01:17.369
well for example on the left is an EKG
 

00:01:17.369 --> 00:01:21.020
well for example on the left is an EKG
signal also called an electrocardiogram

00:01:21.020 --> 00:01:21.030
signal also called an electrocardiogram
 

00:01:21.030 --> 00:01:23.120
signal also called an electrocardiogram
it's basically if you place an electrode

00:01:23.120 --> 00:01:23.130
it's basically if you place an electrode
 

00:01:23.130 --> 00:01:25.760
it's basically if you place an electrode
over your chest this measures the little

00:01:25.760 --> 00:01:25.770
over your chest this measures the little
 

00:01:25.770 --> 00:01:28.969
over your chest this measures the little
voltages that vary across your chest as

00:01:28.969 --> 00:01:28.979
voltages that vary across your chest as
 

00:01:28.979 --> 00:01:31.340
voltages that vary across your chest as
your heart beats because the little

00:01:31.340 --> 00:01:31.350
your heart beats because the little
 

00:01:31.350 --> 00:01:33.530
your heart beats because the little
electric waves generated by your hearts

00:01:33.530 --> 00:01:33.540
electric waves generated by your hearts
 

00:01:33.540 --> 00:01:35.990
electric waves generated by your hearts
beating can be measured with a pair of

00:01:35.990 --> 00:01:36.000
beating can be measured with a pair of
 

00:01:36.000 --> 00:01:38.960
beating can be measured with a pair of
electrodes and so this is an EKG of

00:01:38.960 --> 00:01:38.970
electrodes and so this is an EKG of
 

00:01:38.970 --> 00:01:41.390
electrodes and so this is an EKG of
someone's heart beating and so each of

00:01:41.390 --> 00:01:41.400
someone's heart beating and so each of
 

00:01:41.400 --> 00:01:42.490
someone's heart beating and so each of
these Peaks

00:01:42.490 --> 00:01:42.500
these Peaks
 

00:01:42.500 --> 00:01:46.370
these Peaks
corresponds to one heartbeat so if you

00:01:46.370 --> 00:01:46.380
corresponds to one heartbeat so if you
 

00:01:46.380 --> 00:01:49.039
corresponds to one heartbeat so if you
want to use EKG signals to make medical

00:01:49.039 --> 00:01:49.049
want to use EKG signals to make medical
 

00:01:49.049 --> 00:01:51.289
want to use EKG signals to make medical
diagnosis for example then you would

00:01:51.289 --> 00:01:51.299
diagnosis for example then you would
 

00:01:51.299 --> 00:01:55.280
diagnosis for example then you would
have 1d data because what EKG data as is

00:01:55.280 --> 00:01:55.290
have 1d data because what EKG data as is
 

00:01:55.290 --> 00:01:58.280
have 1d data because what EKG data as is
this video time series showing the

00:01:58.280 --> 00:01:58.290
this video time series showing the
 

00:01:58.290 --> 00:02:01.730
this video time series showing the
voltage at each instant in time so

00:02:01.730 --> 00:02:01.740
voltage at each instant in time so
 

00:02:01.740 --> 00:02:04.010
voltage at each instant in time so
rather than a 14 by 14 dimensional input

00:02:04.010 --> 00:02:04.020
rather than a 14 by 14 dimensional input
 

00:02:04.020 --> 00:02:07.160
rather than a 14 by 14 dimensional input
maybe you just have a 14 dimensional

00:02:07.160 --> 00:02:07.170
maybe you just have a 14 dimensional
 

00:02:07.170 --> 00:02:09.589
maybe you just have a 14 dimensional
input and in that case you might want to

00:02:09.589 --> 00:02:09.599
input and in that case you might want to
 

00:02:09.599 --> 00:02:11.490
input and in that case you might want to
converse with a 1

00:02:11.490 --> 00:02:11.500
converse with a 1
 

00:02:11.500 --> 00:02:13.980
converse with a 1
filter surrounded in the 5.5 you just

00:02:13.980 --> 00:02:13.990
filter surrounded in the 5.5 you just
 

00:02:13.990 --> 00:02:16.680
filter surrounded in the 5.5 you just
have a five-dimensional filter so with

00:02:16.680 --> 00:02:16.690
have a five-dimensional filter so with
 

00:02:16.690 --> 00:02:18.840
have a five-dimensional filter so with
2d data when the convolution allows you

00:02:18.840 --> 00:02:18.850
2d data when the convolution allows you
 

00:02:18.850 --> 00:02:21.000
2d data when the convolution allows you
to do was to take the same five by five

00:02:21.000 --> 00:02:21.010
to do was to take the same five by five
 

00:02:21.010 --> 00:02:23.910
to do was to take the same five by five
feature detector and apply it and lots

00:02:23.910 --> 00:02:23.920
feature detector and apply it and lots
 

00:02:23.920 --> 00:02:26.520
feature detector and apply it and lots
of different positions throughout the

00:02:26.520 --> 00:02:26.530
of different positions throughout the
 

00:02:26.530 --> 00:02:28.860
of different positions throughout the
image and that's how you wound up with

00:02:28.860 --> 00:02:28.870
image and that's how you wound up with
 

00:02:28.870 --> 00:02:32.790
image and that's how you wound up with
your ten by ten output what a 1d filter

00:02:32.790 --> 00:02:32.800
your ten by ten output what a 1d filter
 

00:02:32.800 --> 00:02:34.920
your ten by ten output what a 1d filter
allows you to do is take your five

00:02:34.920 --> 00:02:34.930
allows you to do is take your five
 

00:02:34.930 --> 00:02:37.650
allows you to do is take your five
dimensional filter and similarly apply

00:02:37.650 --> 00:02:37.660
dimensional filter and similarly apply
 

00:02:37.660 --> 00:02:39.800
dimensional filter and similarly apply
that at lots of different positions

00:02:39.800 --> 00:02:39.810
that at lots of different positions
 

00:02:39.810 --> 00:02:43.650
that at lots of different positions
throughout this 1d signal and so if you

00:02:43.650 --> 00:02:43.660
throughout this 1d signal and so if you
 

00:02:43.660 --> 00:02:46.260
throughout this 1d signal and so if you
apply this convolution what you find is

00:02:46.260 --> 00:02:46.270
apply this convolution what you find is
 

00:02:46.270 --> 00:02:49.229
apply this convolution what you find is
that a 14 dimensional thing convolve

00:02:49.229 --> 00:02:49.239
that a 14 dimensional thing convolve
 

00:02:49.239 --> 00:02:52.229
that a 14 dimensional thing convolve
with this five dimensional thing this

00:02:52.229 --> 00:02:52.239
with this five dimensional thing this
 

00:02:52.239 --> 00:02:54.810
with this five dimensional thing this
will give you a 10 dimensional output

00:02:54.810 --> 00:02:54.820
will give you a 10 dimensional output
 

00:02:54.820 --> 00:02:57.420
will give you a 10 dimensional output
and again if you have multiple channels

00:02:57.420 --> 00:02:57.430
and again if you have multiple channels
 

00:02:57.430 --> 00:02:59.790
and again if you have multiple channels
you might have a 14 by in this case and

00:02:59.790 --> 00:02:59.800
you might have a 14 by in this case and
 

00:02:59.800 --> 00:03:02.010
you might have a 14 by in this case and
you gauge is just one channel if you

00:03:02.010 --> 00:03:02.020
you gauge is just one channel if you
 

00:03:02.020 --> 00:03:05.430
you gauge is just one channel if you
have one lead or one electro / EKG so

00:03:05.430 --> 00:03:05.440
have one lead or one electro / EKG so
 

00:03:05.440 --> 00:03:07.979
have one lead or one electro / EKG so
times pi by one and if you have 16

00:03:07.979 --> 00:03:07.989
times pi by one and if you have 16
 

00:03:07.989 --> 00:03:11.610
times pi by one and if you have 16
filters maybe you end up with 10 by 16

00:03:11.610 --> 00:03:11.620
filters maybe you end up with 10 by 16
 

00:03:11.620 --> 00:03:14.130
filters maybe you end up with 10 by 16
over there and this could be one layer

00:03:14.130 --> 00:03:14.140
over there and this could be one layer
 

00:03:14.140 --> 00:03:17.039
over there and this could be one layer
of your confident and then for the next

00:03:17.039 --> 00:03:17.049
of your confident and then for the next
 

00:03:17.049 --> 00:03:19.500
of your confident and then for the next
day of your confident if you input a 10

00:03:19.500 --> 00:03:19.510
day of your confident if you input a 10
 

00:03:19.510 --> 00:03:22.170
day of your confident if you input a 10
by 16 dimensional input and you might

00:03:22.170 --> 00:03:22.180
by 16 dimensional input and you might
 

00:03:22.180 --> 00:03:24.060
by 16 dimensional input and you might
convolve that with a 5 dimensional

00:03:24.060 --> 00:03:24.070
convolve that with a 5 dimensional
 

00:03:24.070 --> 00:03:28.350
convolve that with a 5 dimensional
filter again then this needs to have 16

00:03:28.350 --> 00:03:28.360
filter again then this needs to have 16
 

00:03:28.360 --> 00:03:30.390
filter again then this needs to have 16
channels so that has to match and if you

00:03:30.390 --> 00:03:30.400
channels so that has to match and if you
 

00:03:30.400 --> 00:03:33.390
channels so that has to match and if you
have 32 filters then the output of the

00:03:33.390 --> 00:03:33.400
have 32 filters then the output of the
 

00:03:33.400 --> 00:03:37.110
have 32 filters then the output of the
another layer would be 6 5 32 if you

00:03:37.110 --> 00:03:37.120
another layer would be 6 5 32 if you
 

00:03:37.120 --> 00:03:41.009
another layer would be 6 5 32 if you
have 32 filters right and the analogy to

00:03:41.009 --> 00:03:41.019
have 32 filters right and the analogy to
 

00:03:41.019 --> 00:03:43.380
have 32 filters right and the analogy to
the 2d data is this is similar to how if

00:03:43.380 --> 00:03:43.390
the 2d data is this is similar to how if
 

00:03:43.390 --> 00:03:46.289
the 2d data is this is similar to how if
you have 10 by 10 by 16 data and you

00:03:46.289 --> 00:03:46.299
you have 10 by 10 by 16 data and you
 

00:03:46.299 --> 00:03:50.699
you have 10 by 10 by 16 data and you
convolve it with a 5 by 5 by 16 and that

00:03:50.699 --> 00:03:50.709
convolve it with a 5 by 5 by 16 and that
 

00:03:50.709 --> 00:03:53.819
convolve it with a 5 by 5 by 16 and that
has to match that will give you a 6 by 6

00:03:53.819 --> 00:03:53.829
has to match that will give you a 6 by 6
 

00:03:53.829 --> 00:03:56.370
has to match that will give you a 6 by 6
dimensional output and if you have 32

00:03:56.370 --> 00:03:56.380
dimensional output and if you have 32
 

00:03:56.380 --> 00:03:58.770
dimensional output and if you have 32
filters that's where the 32 comes from

00:03:58.770 --> 00:03:58.780
filters that's where the 32 comes from
 

00:03:58.780 --> 00:04:02.280
filters that's where the 32 comes from
so all of these ideas apply also to 1d

00:04:02.280 --> 00:04:02.290
so all of these ideas apply also to 1d
 

00:04:02.290 --> 00:04:04.680
so all of these ideas apply also to 1d
data where you can have the same feature

00:04:04.680 --> 00:04:04.690
data where you can have the same feature
 

00:04:04.690 --> 00:04:07.620
data where you can have the same feature
detector such as this applied to a

00:04:07.620 --> 00:04:07.630
detector such as this applied to a
 

00:04:07.630 --> 00:04:09.930
detector such as this applied to a
variety of positions for example to

00:04:09.930 --> 00:04:09.940
variety of positions for example to
 

00:04:09.940 --> 00:04:11.729
variety of positions for example to
detect the different heartbeats in an

00:04:11.729 --> 00:04:11.739
detect the different heartbeats in an
 

00:04:11.739 --> 00:04:14.670
detect the different heartbeats in an
EKG signal but to use the same set of

00:04:14.670 --> 00:04:14.680
EKG signal but to use the same set of
 

00:04:14.680 --> 00:04:17.370
EKG signal but to use the same set of
features to detect the heartbeats even

00:04:17.370 --> 00:04:17.380
features to detect the heartbeats even
 

00:04:17.380 --> 00:04:19.060
features to detect the heartbeats even
at different positions

00:04:19.060 --> 00:04:19.070
at different positions
 

00:04:19.070 --> 00:04:21.640
at different positions
all these time series and so confidence

00:04:21.640 --> 00:04:21.650
all these time series and so confidence
 

00:04:21.650 --> 00:04:25.060
all these time series and so confidence
can be used even on 1d data for a long

00:04:25.060 --> 00:04:25.070
can be used even on 1d data for a long
 

00:04:25.070 --> 00:04:27.010
can be used even on 1d data for a long
upon T data applications you actually

00:04:27.010 --> 00:04:27.020
upon T data applications you actually
 

00:04:27.020 --> 00:04:29.500
upon T data applications you actually
use a recurrent neural network we should

00:04:29.500 --> 00:04:29.510
use a recurrent neural network we should
 

00:04:29.510 --> 00:04:31.870
use a recurrent neural network we should
learn about in the next course but some

00:04:31.870 --> 00:04:31.880
learn about in the next course but some
 

00:04:31.880 --> 00:04:35.170
learn about in the next course but some
people also can try using confidence in

00:04:35.170 --> 00:04:35.180
people also can try using confidence in
 

00:04:35.180 --> 00:04:37.660
people also can try using confidence in
these problems and the next course on

00:04:37.660 --> 00:04:37.670
these problems and the next course on
 

00:04:37.670 --> 00:04:39.360
these problems and the next course on
sequence models which will talk about

00:04:39.360 --> 00:04:39.370
sequence models which will talk about
 

00:04:39.370 --> 00:04:41.980
sequence models which will talk about
recurrent neural networks and LCM and

00:04:41.980 --> 00:04:41.990
recurrent neural networks and LCM and
 

00:04:41.990 --> 00:04:43.810
recurrent neural networks and LCM and
other models like that will talk about

00:04:43.810 --> 00:04:43.820
other models like that will talk about
 

00:04:43.820 --> 00:04:46.060
other models like that will talk about
the pros and cons of using 1d confidence

00:04:46.060 --> 00:04:46.070
the pros and cons of using 1d confidence
 

00:04:46.070 --> 00:04:47.920
the pros and cons of using 1d confidence
versus some of those other models

00:04:47.920 --> 00:04:47.930
versus some of those other models
 

00:04:47.930 --> 00:04:49.660
versus some of those other models
they're explicitly designed for sequence

00:04:49.660 --> 00:04:49.670
they're explicitly designed for sequence
 

00:04:49.670 --> 00:04:54.340
they're explicitly designed for sequence
data so that's the generation from 2d to

00:04:54.340 --> 00:04:54.350
data so that's the generation from 2d to
 

00:04:54.350 --> 00:04:57.430
data so that's the generation from 2d to
1d how about VD data well what is three

00:04:57.430 --> 00:04:57.440
1d how about VD data well what is three
 

00:04:57.440 --> 00:04:59.710
1d how about VD data well what is three
dimensional data it is that instead of

00:04:59.710 --> 00:04:59.720
dimensional data it is that instead of
 

00:04:59.720 --> 00:05:03.370
dimensional data it is that instead of
having a 1d list of numbers or to the

00:05:03.370 --> 00:05:03.380
having a 1d list of numbers or to the
 

00:05:03.380 --> 00:05:06.070
having a 1d list of numbers or to the
matrix of numbers you now have a 3d

00:05:06.070 --> 00:05:06.080
matrix of numbers you now have a 3d
 

00:05:06.080 --> 00:05:09.160
matrix of numbers you now have a 3d
block a three dimensional input volume

00:05:09.160 --> 00:05:09.170
block a three dimensional input volume
 

00:05:09.170 --> 00:05:12.460
block a three dimensional input volume
of numbers so here's the example of that

00:05:12.460 --> 00:05:12.470
of numbers so here's the example of that
 

00:05:12.470 --> 00:05:16.180
of numbers so here's the example of that
which is if you take a CT scan this is a

00:05:16.180 --> 00:05:16.190
which is if you take a CT scan this is a
 

00:05:16.190 --> 00:05:18.060
which is if you take a CT scan this is a
type of x-ray scan that gives a

00:05:18.060 --> 00:05:18.070
type of x-ray scan that gives a
 

00:05:18.070 --> 00:05:21.070
type of x-ray scan that gives a
three-dimensional model of your body but

00:05:21.070 --> 00:05:21.080
three-dimensional model of your body but
 

00:05:21.080 --> 00:05:23.200
three-dimensional model of your body but
whether CT scan does is it takes

00:05:23.200 --> 00:05:23.210
whether CT scan does is it takes
 

00:05:23.210 --> 00:05:25.300
whether CT scan does is it takes
different slices through your body so as

00:05:25.300 --> 00:05:25.310
different slices through your body so as
 

00:05:25.310 --> 00:05:27.670
different slices through your body so as
you scan through a CT scan which I'm

00:05:27.670 --> 00:05:27.680
you scan through a CT scan which I'm
 

00:05:27.680 --> 00:05:29.470
you scan through a CT scan which I'm
doing here you can look at different

00:05:29.470 --> 00:05:29.480
doing here you can look at different
 

00:05:29.480 --> 00:05:32.110
doing here you can look at different
slices of the human torso to see how

00:05:32.110 --> 00:05:32.120
slices of the human torso to see how
 

00:05:32.120 --> 00:05:34.690
slices of the human torso to see how
they look and so this data is

00:05:34.690 --> 00:05:34.700
they look and so this data is
 

00:05:34.700 --> 00:05:37.450
they look and so this data is
fundamentally three-dimensional and one

00:05:37.450 --> 00:05:37.460
fundamentally three-dimensional and one
 

00:05:37.460 --> 00:05:39.850
fundamentally three-dimensional and one
way to think of this data is if your

00:05:39.850 --> 00:05:39.860
way to think of this data is if your
 

00:05:39.860 --> 00:05:43.750
way to think of this data is if your
data now has some height some width and

00:05:43.750 --> 00:05:43.760
data now has some height some width and
 

00:05:43.760 --> 00:05:48.220
data now has some height some width and
then also some depth where this is where

00:05:48.220 --> 00:05:48.230
then also some depth where this is where
 

00:05:48.230 --> 00:05:50.140
then also some depth where this is where
the different slices through this volume

00:05:50.140 --> 00:05:50.150
the different slices through this volume
 

00:05:50.150 --> 00:05:52.360
the different slices through this volume
are the different slices through the

00:05:52.360 --> 00:05:52.370
are the different slices through the
 

00:05:52.370 --> 00:05:55.090
are the different slices through the
torso so if you want to apply a

00:05:55.090 --> 00:05:55.100
torso so if you want to apply a
 

00:05:55.100 --> 00:05:57.310
torso so if you want to apply a
confident to detect features in this

00:05:57.310 --> 00:05:57.320
confident to detect features in this
 

00:05:57.320 --> 00:05:59.890
confident to detect features in this
three-dimensional cat scan or CT scan

00:05:59.890 --> 00:05:59.900
three-dimensional cat scan or CT scan
 

00:05:59.900 --> 00:06:02.320
three-dimensional cat scan or CT scan
then you can generalize the ideas from

00:06:02.320 --> 00:06:02.330
then you can generalize the ideas from
 

00:06:02.330 --> 00:06:05.230
then you can generalize the ideas from
the first line to three-dimensional

00:06:05.230 --> 00:06:05.240
the first line to three-dimensional
 

00:06:05.240 --> 00:06:08.530
the first line to three-dimensional
convolutions as well so if you have a 3d

00:06:08.530 --> 00:06:08.540
convolutions as well so if you have a 3d
 

00:06:08.540 --> 00:06:10.290
convolutions as well so if you have a 3d
volume and for the sake of simplicity

00:06:10.290 --> 00:06:10.300
volume and for the sake of simplicity
 

00:06:10.300 --> 00:06:16.850
volume and for the sake of simplicity
let's say is 14 by 14 by 14

00:06:16.850 --> 00:06:16.860
 

00:06:16.860 --> 00:06:19.309
and so this is the height width and

00:06:19.309 --> 00:06:19.319
and so this is the height width and
 

00:06:19.319 --> 00:06:22.730
and so this is the height width and
depth of the input CT scan and again

00:06:22.730 --> 00:06:22.740
depth of the input CT scan and again
 

00:06:22.740 --> 00:06:24.679
depth of the input CT scan and again
just like images don't all have to be

00:06:24.679 --> 00:06:24.689
just like images don't all have to be
 

00:06:24.689 --> 00:06:27.679
just like images don't all have to be
square 3d volume doesn't have to be a

00:06:27.679 --> 00:06:27.689
square 3d volume doesn't have to be a
 

00:06:27.689 --> 00:06:30.080
square 3d volume doesn't have to be a
perfect cube as well so the height and

00:06:30.080 --> 00:06:30.090
perfect cube as well so the height and
 

00:06:30.090 --> 00:06:32.059
perfect cube as well so the height and
width image can be different and in the

00:06:32.059 --> 00:06:32.069
width image can be different and in the
 

00:06:32.069 --> 00:06:33.740
width image can be different and in the
same way the height and width and the

00:06:33.740 --> 00:06:33.750
same way the height and width and the
 

00:06:33.750 --> 00:06:36.320
same way the height and width and the
death of a CT scan can be different but

00:06:36.320 --> 00:06:36.330
death of a CT scan can be different but
 

00:06:36.330 --> 00:06:39.050
death of a CT scan can be different but
I'm just using 14 by 14 by 14 here to

00:06:39.050 --> 00:06:39.060
I'm just using 14 by 14 by 14 here to
 

00:06:39.060 --> 00:06:41.510
I'm just using 14 by 14 by 14 here to
simplify the discussion and if you

00:06:41.510 --> 00:06:41.520
simplify the discussion and if you
 

00:06:41.520 --> 00:06:44.869
simplify the discussion and if you
convolve this with a now a 5 by 5 by 5

00:06:44.869 --> 00:06:44.879
convolve this with a now a 5 by 5 by 5
 

00:06:44.879 --> 00:06:48.040
convolve this with a now a 5 by 5 by 5
filter so your filters now are also

00:06:48.040 --> 00:06:48.050
filter so your filters now are also
 

00:06:48.050 --> 00:06:51.459
filter so your filters now are also
3-dimensional then this would give you a

00:06:51.459 --> 00:06:51.469
3-dimensional then this would give you a
 

00:06:51.469 --> 00:06:56.809
3-dimensional then this would give you a
10 by 10 by 10 volume and technically

00:06:56.809 --> 00:06:56.819
10 by 10 by 10 volume and technically
 

00:06:56.819 --> 00:07:00.260
10 by 10 by 10 volume and technically
you could also have by 1 if this is the

00:07:00.260 --> 00:07:00.270
you could also have by 1 if this is the
 

00:07:00.270 --> 00:07:02.809
you could also have by 1 if this is the
number of channels so this is just a 3d

00:07:02.809 --> 00:07:02.819
number of channels so this is just a 3d
 

00:07:02.819 --> 00:07:04.640
number of channels so this is just a 3d
volume but your data can also have

00:07:04.640 --> 00:07:04.650
volume but your data can also have
 

00:07:04.650 --> 00:07:06.800
volume but your data can also have
different numbers of channels then this

00:07:06.800 --> 00:07:06.810
different numbers of channels then this
 

00:07:06.810 --> 00:07:09.050
different numbers of channels then this
would be x 1 as well because the number

00:07:09.050 --> 00:07:09.060
would be x 1 as well because the number
 

00:07:09.060 --> 00:07:10.670
would be x 1 as well because the number
of channels here and the number of

00:07:10.670 --> 00:07:10.680
of channels here and the number of
 

00:07:10.680 --> 00:07:13.850
of channels here and the number of
channels here has to match then and if

00:07:13.850 --> 00:07:13.860
channels here has to match then and if
 

00:07:13.860 --> 00:07:17.480
channels here has to match then and if
you have 16 filters there that 5 by 5 by

00:07:17.480 --> 00:07:17.490
you have 16 filters there that 5 by 5 by
 

00:07:17.490 --> 00:07:20.749
you have 16 filters there that 5 by 5 by
5 by 1 then the next outputs will be 10

00:07:20.749 --> 00:07:20.759
5 by 1 then the next outputs will be 10
 

00:07:20.759 --> 00:07:25.070
5 by 1 then the next outputs will be 10
by 10 by 10 by 16 and then if so this

00:07:25.070 --> 00:07:25.080
by 10 by 10 by 16 and then if so this
 

00:07:25.080 --> 00:07:27.200
by 10 by 10 by 16 and then if so this
could be one layer of your confidence

00:07:27.200 --> 00:07:27.210
could be one layer of your confidence
 

00:07:27.210 --> 00:07:30.589
could be one layer of your confidence
over 3d data and if the next layer of

00:07:30.589 --> 00:07:30.599
over 3d data and if the next layer of
 

00:07:30.599 --> 00:07:32.420
over 3d data and if the next layer of
the confident convolved this again with

00:07:32.420 --> 00:07:32.430
the confident convolved this again with
 

00:07:32.430 --> 00:07:36.649
the confident convolved this again with
a 5 by 5 by 5 by 16 dimensional filter

00:07:36.649 --> 00:07:36.659
a 5 by 5 by 5 by 16 dimensional filter
 

00:07:36.659 --> 00:07:38.959
a 5 by 5 by 5 by 16 dimensional filter
so this number of channels has to match

00:07:38.959 --> 00:07:38.969
so this number of channels has to match
 

00:07:38.969 --> 00:07:42.369
so this number of channels has to match
that as usual and if you have 32 filters

00:07:42.369 --> 00:07:42.379
that as usual and if you have 32 filters
 

00:07:42.379 --> 00:07:45.230
that as usual and if you have 32 filters
then similar to what you saw with

00:07:45.230 --> 00:07:45.240
then similar to what you saw with
 

00:07:45.240 --> 00:07:47.480
then similar to what you saw with
confident over images now you end up

00:07:47.480 --> 00:07:47.490
confident over images now you end up
 

00:07:47.490 --> 00:07:53.029
confident over images now you end up
with a 6 5 6 by 6 volume across 32

00:07:53.029 --> 00:07:53.039
with a 6 5 6 by 6 volume across 32
 

00:07:53.039 --> 00:07:57.559
with a 6 5 6 by 6 volume across 32
channels so 3d data can also be learned

00:07:57.559 --> 00:07:57.569
channels so 3d data can also be learned
 

00:07:57.569 --> 00:08:00.140
channels so 3d data can also be learned
on sort of directly using a three

00:08:00.140 --> 00:08:00.150
on sort of directly using a three
 

00:08:00.150 --> 00:08:02.990
on sort of directly using a three
dimensional confident and what these

00:08:02.990 --> 00:08:03.000
dimensional confident and what these
 

00:08:03.000 --> 00:08:05.809
dimensional confident and what these
filters do is really detect features

00:08:05.809 --> 00:08:05.819
filters do is really detect features
 

00:08:05.819 --> 00:08:10.040
filters do is really detect features
across your 3d data cat-scans medical

00:08:10.040 --> 00:08:10.050
across your 3d data cat-scans medical
 

00:08:10.050 --> 00:08:13.279
across your 3d data cat-scans medical
scans is one example of 3d volumes but

00:08:13.279 --> 00:08:13.289
scans is one example of 3d volumes but
 

00:08:13.289 --> 00:08:15.439
scans is one example of 3d volumes but
another example of data you could treat

00:08:15.439 --> 00:08:15.449
another example of data you could treat
 

00:08:15.449 --> 00:08:18.559
another example of data you could treat
as a 3d volume would be movie data where

00:08:18.559 --> 00:08:18.569
as a 3d volume would be movie data where
 

00:08:18.569 --> 00:08:21.019
as a 3d volume would be movie data where
the different slices could be different

00:08:21.019 --> 00:08:21.029
the different slices could be different
 

00:08:21.029 --> 00:08:23.540
the different slices could be different
slices in time through a movie and you

00:08:23.540 --> 00:08:23.550
slices in time through a movie and you
 

00:08:23.550 --> 00:08:25.309
slices in time through a movie and you
could use this to detect motion or

00:08:25.309 --> 00:08:25.319
could use this to detect motion or
 

00:08:25.319 --> 00:08:27.650
could use this to detect motion or
people taking actions in

00:08:27.650 --> 00:08:27.660
people taking actions in
 

00:08:27.660 --> 00:08:30.320
people taking actions in
so that's it on generalization of

00:08:30.320 --> 00:08:30.330
so that's it on generalization of
 

00:08:30.330 --> 00:08:33.409
so that's it on generalization of
confidence from 2d data so also 1d as

00:08:33.409 --> 00:08:33.419
confidence from 2d data so also 1d as
 

00:08:33.419 --> 00:08:36.469
confidence from 2d data so also 1d as
well as 3d data image data is so

00:08:36.469 --> 00:08:36.479
well as 3d data image data is so
 

00:08:36.479 --> 00:08:38.300
well as 3d data image data is so
pervasive that the vast majority of

00:08:38.300 --> 00:08:38.310
pervasive that the vast majority of
 

00:08:38.310 --> 00:08:41.269
pervasive that the vast majority of
confidence are on 2d data on image data

00:08:41.269 --> 00:08:41.279
confidence are on 2d data on image data
 

00:08:41.279 --> 00:08:43.459
confidence are on 2d data on image data
but I hope that these other models would

00:08:43.459 --> 00:08:43.469
but I hope that these other models would
 

00:08:43.469 --> 00:08:46.850
but I hope that these other models would
be helpful to you as well so this is it

00:08:46.850 --> 00:08:46.860
be helpful to you as well so this is it
 

00:08:46.860 --> 00:08:48.740
be helpful to you as well so this is it
this is the last video of this week and

00:08:48.740 --> 00:08:48.750
this is the last video of this week and
 

00:08:48.750 --> 00:08:50.420
this is the last video of this week and
the last video of this course on

00:08:50.420 --> 00:08:50.430
the last video of this course on
 

00:08:50.430 --> 00:08:52.280
the last video of this course on
confidence you've learned a lot about

00:08:52.280 --> 00:08:52.290
confidence you've learned a lot about
 

00:08:52.290 --> 00:08:55.310
confidence you've learned a lot about
confidence and I hope you find many of

00:08:55.310 --> 00:08:55.320
confidence and I hope you find many of
 

00:08:55.320 --> 00:08:57.680
confidence and I hope you find many of
these ideas useful for your future work

00:08:57.680 --> 00:08:57.690
these ideas useful for your future work
 

00:08:57.690 --> 00:09:00.650
these ideas useful for your future work
so congratulations on finishing these

00:09:00.650 --> 00:09:00.660
so congratulations on finishing these
 

00:09:00.660 --> 00:09:02.630
so congratulations on finishing these
videos I hope you enjoyed this week's

00:09:02.630 --> 00:09:02.640
videos I hope you enjoyed this week's
 

00:09:02.640 --> 00:09:04.640
videos I hope you enjoyed this week's
perm exercise and then look forward

00:09:04.640 --> 00:09:04.650
perm exercise and then look forward
 

00:09:04.650 --> 00:09:06.680
perm exercise and then look forward
also to see you in the next course on

00:09:06.680 --> 00:09:06.690
also to see you in the next course on
 

00:09:06.690 --> 00:09:09.620
also to see you in the next course on
secrets models

