WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.929
Android studio 3.1 is now available for

00:00:02.929 --> 00:00:02.939
Android studio 3.1 is now available for
 

00:00:02.939 --> 00:00:05.090
Android studio 3.1 is now available for
download or update in the stable channel

00:00:05.090 --> 00:00:05.100
download or update in the stable channel
 

00:00:05.100 --> 00:00:07.550
download or update in the stable channel
along with version 3.1 of the android

00:00:07.550 --> 00:00:07.560
along with version 3.1 of the android
 

00:00:07.560 --> 00:00:09.980
along with version 3.1 of the android
plug-in for Gradle with it we've

00:00:09.980 --> 00:00:09.990
plug-in for Gradle with it we've
 

00:00:09.990 --> 00:00:11.720
plug-in for Gradle with it we've
switched to using our brand-new dax-ur

00:00:11.720 --> 00:00:11.730
switched to using our brand-new dax-ur
 

00:00:11.730 --> 00:00:14.870
switched to using our brand-new dax-ur
d8 for all your builds it produces on

00:00:14.870 --> 00:00:14.880
d8 for all your builds it produces on
 

00:00:14.880 --> 00:00:17.599
d8 for all your builds it produces on
average 10 to 15% smaller and more

00:00:17.599 --> 00:00:17.609
average 10 to 15% smaller and more
 

00:00:17.609 --> 00:00:20.390
average 10 to 15% smaller and more
optimized Dex bytecode without requiring

00:00:20.390 --> 00:00:20.400
optimized Dex bytecode without requiring
 

00:00:20.400 --> 00:00:23.779
optimized Dex bytecode without requiring
any changes in application code d8 also

00:00:23.779 --> 00:00:23.789
any changes in application code d8 also
 

00:00:23.789 --> 00:00:25.970
any changes in application code d8 also
offers faster dexing now works for

00:00:25.970 --> 00:00:25.980
offers faster dexing now works for
 

00:00:25.980 --> 00:00:27.710
offers faster dexing now works for
incremental builds with the sugar and

00:00:27.710 --> 00:00:27.720
incremental builds with the sugar and
 

00:00:27.720 --> 00:00:29.390
incremental builds with the sugar and
even provides a better debugging

00:00:29.390 --> 00:00:29.400
even provides a better debugging
 

00:00:29.400 --> 00:00:31.659
even provides a better debugging
experience when stepping through code

00:00:31.659 --> 00:00:31.669
experience when stepping through code
 

00:00:31.669 --> 00:00:34.040
experience when stepping through code
one thing to remember if he had

00:00:34.040 --> 00:00:34.050
one thing to remember if he had
 

00:00:34.050 --> 00:00:35.990
one thing to remember if he had
previously disabled the experimental

00:00:35.990 --> 00:00:36.000
previously disabled the experimental
 

00:00:36.000 --> 00:00:37.970
previously disabled the experimental
version of the 8 in your project by

00:00:37.970 --> 00:00:37.980
version of the 8 in your project by
 

00:00:37.980 --> 00:00:40.160
version of the 8 in your project by
setting the Android enabled d8 flag to

00:00:40.160 --> 00:00:40.170
setting the Android enabled d8 flag to
 

00:00:40.170 --> 00:00:42.170
setting the Android enabled d8 flag to
false it's time to remove this from

00:00:42.170 --> 00:00:42.180
false it's time to remove this from
 

00:00:42.180 --> 00:00:45.319
false it's time to remove this from
Gradle properties the sugaring of Java 8

00:00:45.319 --> 00:00:45.329
Gradle properties the sugaring of Java 8
 

00:00:45.329 --> 00:00:47.360
Gradle properties the sugaring of Java 8
language features is still done in a

00:00:47.360 --> 00:00:47.370
language features is still done in a
 

00:00:47.370 --> 00:00:49.520
language features is still done in a
separate step in this release however

00:00:49.520 --> 00:00:49.530
separate step in this release however
 

00:00:49.530 --> 00:00:52.040
separate step in this release however
you can try the experimental integrated

00:00:52.040 --> 00:00:52.050
you can try the experimental integrated
 

00:00:52.050 --> 00:00:54.229
you can try the experimental integrated
the sugar by setting the enable d8 the

00:00:54.229 --> 00:00:54.239
the sugar by setting the enable d8 the
 

00:00:54.239 --> 00:00:57.950
the sugar by setting the enable d8 the
sugar ink flag to true the core IDE is

00:00:57.950 --> 00:00:57.960
sugar ink flag to true the core IDE is
 

00:00:57.960 --> 00:00:59.720
sugar ink flag to true the core IDE is
now updated with improvements from

00:00:59.720 --> 00:00:59.730
now updated with improvements from
 

00:00:59.730 --> 00:01:00.770
now updated with improvements from
IntelliJ IDEA

00:01:00.770 --> 00:01:00.780
IntelliJ IDEA
 

00:01:00.780 --> 00:01:04.039
IntelliJ IDEA
up to the 2017 dot 3 release which

00:01:04.039 --> 00:01:04.049
up to the 2017 dot 3 release which
 

00:01:04.049 --> 00:01:05.929
up to the 2017 dot 3 release which
includes better control flow analysis

00:01:05.929 --> 00:01:05.939
includes better control flow analysis
 

00:01:05.939 --> 00:01:08.240
includes better control flow analysis
for collections and strings improved

00:01:08.240 --> 00:01:08.250
for collections and strings improved
 

00:01:08.250 --> 00:01:10.580
for collections and strings improved
null ability inference new quick fixes

00:01:10.580 --> 00:01:10.590
null ability inference new quick fixes
 

00:01:10.590 --> 00:01:13.910
null ability inference new quick fixes
and more we also simplified the build

00:01:13.910 --> 00:01:13.920
and more we also simplified the build
 

00:01:13.920 --> 00:01:16.370
and more we also simplified the build
output window when you trigger a sync or

00:01:16.370 --> 00:01:16.380
output window when you trigger a sync or
 

00:01:16.380 --> 00:01:18.350
output window when you trigger a sync or
build we now show a task 3 with

00:01:18.350 --> 00:01:18.360
build we now show a task 3 with
 

00:01:18.360 --> 00:01:20.840
build we now show a task 3 with
execution times and toggle an error

00:01:20.840 --> 00:01:20.850
execution times and toggle an error
 

00:01:20.850 --> 00:01:23.929
execution times and toggle an error
window in case of a failure you can

00:01:23.929 --> 00:01:23.939
window in case of a failure you can
 

00:01:23.939 --> 00:01:25.219
window in case of a failure you can
switch between the tree view and a

00:01:25.219 --> 00:01:25.229
switch between the tree view and a
 

00:01:25.229 --> 00:01:28.280
switch between the tree view and a
textural log here on the cotton in front

00:01:28.280 --> 00:01:28.290
textural log here on the cotton in front
 

00:01:28.290 --> 00:01:31.460
textural log here on the cotton in front
Android studio 3.1 no bundles the latest

00:01:31.460 --> 00:01:31.470
Android studio 3.1 no bundles the latest
 

00:01:31.470 --> 00:01:33.560
Android studio 3.1 no bundles the latest
plugin and supports running lint checks

00:01:33.560 --> 00:01:33.570
plugin and supports running lint checks
 

00:01:33.570 --> 00:01:36.380
plugin and supports running lint checks
for Cortland code on the command line we

00:01:36.380 --> 00:01:36.390
for Cortland code on the command line we
 

00:01:36.390 --> 00:01:38.270
for Cortland code on the command line we
plan to continue our work to make sure

00:01:38.270 --> 00:01:38.280
plan to continue our work to make sure
 

00:01:38.280 --> 00:01:40.190
plan to continue our work to make sure
we're providing first-class support for

00:01:40.190 --> 00:01:40.200
we're providing first-class support for
 

00:01:40.200 --> 00:01:43.249
we're providing first-class support for
Kotlin in our developer tools we

00:01:43.249 --> 00:01:43.259
Kotlin in our developer tools we
 

00:01:43.259 --> 00:01:45.380
Kotlin in our developer tools we
received a lot of feature requests for

00:01:45.380 --> 00:01:45.390
received a lot of feature requests for
 

00:01:45.390 --> 00:01:46.969
received a lot of feature requests for
the Android profilers that were released

00:01:46.969 --> 00:01:46.979
the Android profilers that were released
 

00:01:46.979 --> 00:01:49.819
the Android profilers that were released
in the last version of studio I'm happy

00:01:49.819 --> 00:01:49.829
in the last version of studio I'm happy
 

00:01:49.829 --> 00:01:52.010
in the last version of studio I'm happy
to say that based on your feedback we've

00:01:52.010 --> 00:01:52.020
to say that based on your feedback we've
 

00:01:52.020 --> 00:01:54.770
to say that based on your feedback we've
added native CPU profiling for C++ code

00:01:54.770 --> 00:01:54.780
added native CPU profiling for C++ code
 

00:01:54.780 --> 00:01:57.080
added native CPU profiling for C++ code
and the network profiler can now show

00:01:57.080 --> 00:01:57.090
and the network profiler can now show
 

00:01:57.090 --> 00:01:59.359
and the network profiler can now show
request data and has a threads timeline

00:01:59.359 --> 00:01:59.369
request data and has a threads timeline
 

00:01:59.369 --> 00:02:01.520
request data and has a threads timeline
and to make it easier to find the

00:02:01.520 --> 00:02:01.530
and to make it easier to find the
 

00:02:01.530 --> 00:02:03.920
and to make it easier to find the
information you need the CPU and memory

00:02:03.920 --> 00:02:03.930
information you need the CPU and memory
 

00:02:03.930 --> 00:02:06.499
information you need the CPU and memory
profilers now offer filtering by class

00:02:06.499 --> 00:02:06.509
profilers now offer filtering by class
 

00:02:06.509 --> 00:02:09.350
profilers now offer filtering by class
or method name if you're using the layer

00:02:09.350 --> 00:02:09.360
or method name if you're using the layer
 

00:02:09.360 --> 00:02:11.540
or method name if you're using the layer
inspector it's now possible to use

00:02:11.540 --> 00:02:11.550
inspector it's now possible to use
 

00:02:11.550 --> 00:02:13.550
inspector it's now possible to use
reference image overlays

00:02:13.550 --> 00:02:13.560
reference image overlays
 

00:02:13.560 --> 00:02:15.850
reference image overlays
isolate subtrees from the view hierarchy

00:02:15.850 --> 00:02:15.860
isolate subtrees from the view hierarchy
 

00:02:15.860 --> 00:02:18.920
isolate subtrees from the view hierarchy
the layer editor also got some UX polish

00:02:18.920 --> 00:02:18.930
the layer editor also got some UX polish
 

00:02:18.930 --> 00:02:21.229
the layer editor also got some UX polish
with new keyboard shortcuts a way to

00:02:21.229 --> 00:02:21.239
with new keyboard shortcuts a way to
 

00:02:21.239 --> 00:02:23.449
with new keyboard shortcuts a way to
quickly launch documentation and the new

00:02:23.449 --> 00:02:23.459
quickly launch documentation and the new
 

00:02:23.459 --> 00:02:25.550
quickly launch documentation and the new
command that lets you convert a view to

00:02:25.550 --> 00:02:25.560
command that lets you convert a view to
 

00:02:25.560 --> 00:02:28.430
command that lets you convert a view to
another type and just like we developed

00:02:28.430 --> 00:02:28.440
another type and just like we developed
 

00:02:28.440 --> 00:02:30.680
another type and just like we developed
Android Studios layout editor in step

00:02:30.680 --> 00:02:30.690
Android Studios layout editor in step
 

00:02:30.690 --> 00:02:32.360
Android Studios layout editor in step
with the constraint layout library in

00:02:32.360 --> 00:02:32.370
with the constraint layout library in
 

00:02:32.370 --> 00:02:34.970
with the constraint layout library in
this release we've taken additional care

00:02:34.970 --> 00:02:34.980
this release we've taken additional care
 

00:02:34.980 --> 00:02:37.550
this release we've taken additional care
to make the code editor work great when

00:02:37.550 --> 00:02:37.560
to make the code editor work great when
 

00:02:37.560 --> 00:02:40.430
to make the code editor work great when
you're using room databases you will now

00:02:40.430 --> 00:02:40.440
you're using room databases you will now
 

00:02:40.440 --> 00:02:43.009
you're using room databases you will now
get SQL code completion and common

00:02:43.009 --> 00:02:43.019
get SQL code completion and common
 

00:02:43.019 --> 00:02:45.199
get SQL code completion and common
actions such as renaming and find usages

00:02:45.199 --> 00:02:45.209
actions such as renaming and find usages
 

00:02:45.209 --> 00:02:49.420
actions such as renaming and find usages
work across SQL and Java or Kotlin code

00:02:49.420 --> 00:02:49.430
work across SQL and Java or Kotlin code
 

00:02:49.430 --> 00:02:52.490
work across SQL and Java or Kotlin code
the Android emulator received a lot of

00:02:52.490 --> 00:02:52.500
the Android emulator received a lot of
 

00:02:52.500 --> 00:02:54.080
the Android emulator received a lot of
updates since the last studio release

00:02:54.080 --> 00:02:54.090
updates since the last studio release
 

00:02:54.090 --> 00:02:57.530
updates since the last studio release
focusing on speed and stability we offer

00:02:57.530 --> 00:02:57.540
focusing on speed and stability we offer
 

00:02:57.540 --> 00:02:59.780
focusing on speed and stability we offer
the latest system images for API levels

00:02:59.780 --> 00:02:59.790
the latest system images for API levels
 

00:02:59.790 --> 00:03:03.110
the latest system images for API levels
26 and 27 which passed CTS tests and

00:03:03.110 --> 00:03:03.120
26 and 27 which passed CTS tests and
 

00:03:03.120 --> 00:03:06.020
26 and 27 which passed CTS tests and
include the full Play Store on the

00:03:06.020 --> 00:03:06.030
include the full Play Store on the
 

00:03:06.030 --> 00:03:08.030
include the full Play Store on the
features side the largest and my

00:03:08.030 --> 00:03:08.040
features side the largest and my
 

00:03:08.040 --> 00:03:10.250
features side the largest and my
favorite improvement is quick boot which

00:03:10.250 --> 00:03:10.260
favorite improvement is quick boot which
 

00:03:10.260 --> 00:03:12.170
favorite improvement is quick boot which
allows you to resume a safe emulator

00:03:12.170 --> 00:03:12.180
allows you to resume a safe emulator
 

00:03:12.180 --> 00:03:14.420
allows you to resume a safe emulator
session in under 6 seconds it's

00:03:14.420 --> 00:03:14.430
session in under 6 seconds it's
 

00:03:14.430 --> 00:03:16.430
session in under 6 seconds it's
completely automatic after the first

00:03:16.430 --> 00:03:16.440
completely automatic after the first
 

00:03:16.440 --> 00:03:18.440
completely automatic after the first
boot whenever you close the emulator a

00:03:18.440 --> 00:03:18.450
boot whenever you close the emulator a
 

00:03:18.450 --> 00:03:20.660
boot whenever you close the emulator a
snapshot is saved and used for

00:03:20.660 --> 00:03:20.670
snapshot is saved and used for
 

00:03:20.670 --> 00:03:23.599
snapshot is saved and used for
subsequent launches but in case you want

00:03:23.599 --> 00:03:23.609
subsequent launches but in case you want
 

00:03:23.609 --> 00:03:26.060
subsequent launches but in case you want
more control you can change snapshotting

00:03:26.060 --> 00:03:26.070
more control you can change snapshotting
 

00:03:26.070 --> 00:03:28.160
more control you can change snapshotting
behavior in the settings and even

00:03:28.160 --> 00:03:28.170
behavior in the settings and even
 

00:03:28.170 --> 00:03:30.289
behavior in the settings and even
initiate a state save at any given

00:03:30.289 --> 00:03:30.299
initiate a state save at any given
 

00:03:30.299 --> 00:03:32.930
initiate a state save at any given
moment please update to Android studio

00:03:32.930 --> 00:03:32.940
moment please update to Android studio
 

00:03:32.940 --> 00:03:35.780
moment please update to Android studio
3.1 and give it a spin and if you're

00:03:35.780 --> 00:03:35.790
3.1 and give it a spin and if you're
 

00:03:35.790 --> 00:03:37.580
3.1 and give it a spin and if you're
feeling adventurous I'd also like to

00:03:37.580 --> 00:03:37.590
feeling adventurous I'd also like to
 

00:03:37.590 --> 00:03:40.099
feeling adventurous I'd also like to
point out that you can try our early 3.2

00:03:40.099 --> 00:03:40.109
point out that you can try our early 3.2
 

00:03:40.109 --> 00:03:42.920
point out that you can try our early 3.2
canneries as always we'd love to get

00:03:42.920 --> 00:03:42.930
canneries as always we'd love to get
 

00:03:42.930 --> 00:03:45.610
canneries as always we'd love to get
your feedback on the bug tracker thanks

00:03:45.610 --> 00:03:45.620
your feedback on the bug tracker thanks
 

00:03:45.620 --> 00:03:55.349
your feedback on the bug tracker thanks
[Music]

