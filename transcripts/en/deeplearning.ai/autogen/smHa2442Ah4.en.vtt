WEBVTT
Kind: captions
Language: en

00:00:01.490 --> 00:00:04.100 align:start position:0%
 
in<00:00:02.490><c> order</c><00:00:02.790><c> to</c><00:00:02.939><c> build</c><00:00:03.090><c> deep</c><00:00:03.419><c> neural</c><00:00:03.600><c> networks</c>

00:00:04.100 --> 00:00:04.110 align:start position:0%
in order to build deep neural networks
 

00:00:04.110 --> 00:00:06.320 align:start position:0%
in order to build deep neural networks
one<00:00:04.710><c> modification</c><00:00:05.609><c> to</c><00:00:05.819><c> the</c><00:00:05.940><c> basic</c>

00:00:06.320 --> 00:00:06.330 align:start position:0%
one modification to the basic
 

00:00:06.330 --> 00:00:08.660 align:start position:0%
one modification to the basic
convolutional<00:00:07.170><c> operation</c><00:00:07.710><c> that</c><00:00:08.189><c> you</c><00:00:08.340><c> need</c><00:00:08.550><c> to</c>

00:00:08.660 --> 00:00:08.670 align:start position:0%
convolutional operation that you need to
 

00:00:08.670 --> 00:00:11.360 align:start position:0%
convolutional operation that you need to
really<00:00:08.849><c> use</c><00:00:09.120><c> is</c><00:00:09.330><c> padding</c><00:00:10.230><c> let's</c><00:00:10.980><c> see</c><00:00:11.099><c> how</c><00:00:11.250><c> it</c>

00:00:11.360 --> 00:00:11.370 align:start position:0%
really use is padding let's see how it
 

00:00:11.370 --> 00:00:14.299 align:start position:0%
really use is padding let's see how it
works<00:00:11.809><c> what</c><00:00:12.809><c> we</c><00:00:12.840><c> saw</c><00:00:13.170><c> in</c><00:00:13.320><c> earlier</c><00:00:13.679><c> videos</c><00:00:14.070><c> is</c>

00:00:14.299 --> 00:00:14.309 align:start position:0%
works what we saw in earlier videos is
 

00:00:14.309 --> 00:00:16.550 align:start position:0%
works what we saw in earlier videos is
that<00:00:14.460><c> if</c><00:00:14.820><c> you</c><00:00:14.940><c> take</c><00:00:15.120><c> a</c><00:00:15.179><c> 6x6</c><00:00:15.660><c> image</c><00:00:16.260><c> and</c>

00:00:16.550 --> 00:00:16.560 align:start position:0%
that if you take a 6x6 image and
 

00:00:16.560 --> 00:00:20.029 align:start position:0%
that if you take a 6x6 image and
convolve<00:00:17.369><c> it</c><00:00:17.550><c> with</c><00:00:17.789><c> a</c><00:00:17.820><c> 3x3</c><00:00:18.539><c> filter</c><00:00:19.080><c> you</c><00:00:19.619><c> end</c><00:00:19.859><c> up</c>

00:00:20.029 --> 00:00:20.039 align:start position:0%
convolve it with a 3x3 filter you end up
 

00:00:20.039 --> 00:00:23.810 align:start position:0%
convolve it with a 3x3 filter you end up
with<00:00:20.250><c> a</c><00:00:20.689><c> 4x4</c><00:00:21.689><c> output</c><00:00:22.289><c> with</c><00:00:22.470><c> a</c><00:00:22.500><c> 4x4</c><00:00:23.039><c> matrix</c><00:00:23.519><c> and</c>

00:00:23.810 --> 00:00:23.820 align:start position:0%
with a 4x4 output with a 4x4 matrix and
 

00:00:23.820 --> 00:00:25.939 align:start position:0%
with a 4x4 output with a 4x4 matrix and
that's<00:00:24.180><c> because</c><00:00:24.570><c> the</c><00:00:25.230><c> number</c><00:00:25.619><c> of</c><00:00:25.650><c> possible</c>

00:00:25.939 --> 00:00:25.949 align:start position:0%
that's because the number of possible
 

00:00:25.949 --> 00:00:28.429 align:start position:0%
that's because the number of possible
positions<00:00:26.789><c> for</c><00:00:27.000><c> your</c><00:00:27.090><c> 3x3</c><00:00:27.689><c> filter</c><00:00:28.170><c> they're</c>

00:00:28.429 --> 00:00:28.439 align:start position:0%
positions for your 3x3 filter they're
 

00:00:28.439 --> 00:00:30.650 align:start position:0%
positions for your 3x3 filter they're
only<00:00:28.650><c> sort</c><00:00:29.400><c> of</c><00:00:29.460><c> four</c><00:00:29.699><c> by</c><00:00:29.849><c> four</c><00:00:30.119><c> possible</c>

00:00:30.650 --> 00:00:30.660 align:start position:0%
only sort of four by four possible
 

00:00:30.660 --> 00:00:34.100 align:start position:0%
only sort of four by four possible
positions<00:00:31.230><c> for</c><00:00:32.219><c> the</c><00:00:32.340><c> 3x3</c><00:00:32.730><c> filter</c><00:00:33.300><c> to</c><00:00:33.510><c> fit</c><00:00:33.840><c> in</c>

00:00:34.100 --> 00:00:34.110 align:start position:0%
positions for the 3x3 filter to fit in
 

00:00:34.110 --> 00:00:38.569 align:start position:0%
positions for the 3x3 filter to fit in
your<00:00:34.469><c> 6x6</c><00:00:35.309><c> matrix</c><00:00:35.809><c> and</c><00:00:37.010><c> the</c><00:00:38.010><c> math</c><00:00:38.250><c> for</c><00:00:38.489><c> this</c>

00:00:38.569 --> 00:00:38.579 align:start position:0%
your 6x6 matrix and the math for this
 

00:00:38.579 --> 00:00:41.840 align:start position:0%
your 6x6 matrix and the math for this
turns<00:00:39.030><c> out</c><00:00:39.149><c> to</c><00:00:39.300><c> be</c><00:00:39.329><c> that</c><00:00:39.600><c> if</c><00:00:39.840><c> you</c><00:00:39.930><c> have</c><00:00:40.170><c> a</c><00:00:40.489><c> n</c><00:00:41.489><c> by</c>

00:00:41.840 --> 00:00:41.850 align:start position:0%
turns out to be that if you have a n by
 

00:00:41.850 --> 00:00:44.779 align:start position:0%
turns out to be that if you have a n by
n<00:00:42.059><c> image</c><00:00:42.329><c> and</c><00:00:42.780><c> to</c><00:00:43.170><c> involve</c><00:00:43.440><c> that</c><00:00:43.710><c> with</c><00:00:44.040><c> an</c><00:00:44.190><c> FF</c>

00:00:44.779 --> 00:00:44.789 align:start position:0%
n image and to involve that with an FF
 

00:00:44.789 --> 00:00:47.779 align:start position:0%
n image and to involve that with an FF
filter<00:00:45.600><c> then</c><00:00:46.379><c> the</c><00:00:46.410><c> dimension</c><00:00:47.100><c> of</c><00:00:47.190><c> the</c><00:00:47.309><c> output</c>

00:00:47.779 --> 00:00:47.789 align:start position:0%
filter then the dimension of the output
 

00:00:47.789 --> 00:00:54.740 align:start position:0%
filter then the dimension of the output
will<00:00:48.180><c> be</c><00:00:48.360><c> n</c><00:00:48.870><c> minus</c><00:00:49.219><c> F</c><00:00:51.170><c> plus</c><00:00:52.170><c> 1</c><00:00:52.440><c> by</c><00:00:53.250><c> n</c><00:00:53.550><c> minus</c><00:00:54.149><c> F</c>

00:00:54.740 --> 00:00:54.750 align:start position:0%
will be n minus F plus 1 by n minus F
 

00:00:54.750 --> 00:01:01.270 align:start position:0%
will be n minus F plus 1 by n minus F
plus<00:00:55.500><c> 1</c><00:00:56.180><c> and</c><00:00:57.710><c> in</c><00:00:58.710><c> this</c><00:00:58.800><c> example</c><00:00:59.719><c> 6</c><00:01:00.719><c> minus</c><00:01:01.230><c> 3</c>

00:01:01.270 --> 00:01:01.280 align:start position:0%
plus 1 and in this example 6 minus 3
 

00:01:01.280 --> 00:01:03.950 align:start position:0%
plus 1 and in this example 6 minus 3
plus<00:01:02.280><c> 1</c><00:01:02.489><c> is</c><00:01:02.760><c> equal</c><00:01:02.879><c> to</c><00:01:03.120><c> 4</c><00:01:03.359><c> which</c><00:01:03.629><c> is</c><00:01:03.750><c> why</c><00:01:03.899><c> you</c>

00:01:03.950 --> 00:01:03.960 align:start position:0%
plus 1 is equal to 4 which is why you
 

00:01:03.960 --> 00:01:07.969 align:start position:0%
plus 1 is equal to 4 which is why you
want<00:01:04.260><c> up</c><00:01:04.439><c> with</c><00:01:04.559><c> a</c><00:01:04.710><c> 4</c><00:01:05.220><c> by</c><00:01:05.339><c> 4</c><00:01:05.369><c> output</c><00:01:06.650><c> so</c><00:01:07.650><c> the</c><00:01:07.799><c> two</c>

00:01:07.969 --> 00:01:07.979 align:start position:0%
want up with a 4 by 4 output so the two
 

00:01:07.979 --> 00:01:11.270 align:start position:0%
want up with a 4 by 4 output so the two
downsides<00:01:08.460><c> to</c><00:01:08.640><c> this</c><00:01:08.790><c> one</c><00:01:09.570><c> is</c><00:01:09.960><c> that</c><00:01:10.290><c> if</c><00:01:10.560><c> every</c>

00:01:11.270 --> 00:01:11.280 align:start position:0%
downsides to this one is that if every
 

00:01:11.280 --> 00:01:13.219 align:start position:0%
downsides to this one is that if every
time<00:01:11.460><c> you</c><00:01:11.729><c> apply</c><00:01:12.000><c> a</c><00:01:12.090><c> convolutional</c><00:01:12.750><c> operator</c>

00:01:13.219 --> 00:01:13.229 align:start position:0%
time you apply a convolutional operator
 

00:01:13.229 --> 00:01:15.620 align:start position:0%
time you apply a convolutional operator
your<00:01:13.979><c> image</c><00:01:14.340><c> shrink</c><00:01:14.729><c> so</c><00:01:14.939><c> we've</c><00:01:15.060><c> gone</c><00:01:15.180><c> from</c><00:01:15.240><c> 6</c>

00:01:15.620 --> 00:01:15.630 align:start position:0%
your image shrink so we've gone from 6
 

00:01:15.630 --> 00:01:17.929 align:start position:0%
your image shrink so we've gone from 6
by<00:01:15.750><c> 6</c><00:01:15.990><c> down</c><00:01:16.110><c> to</c><00:01:16.170><c> 4</c><00:01:16.530><c> by</c><00:01:16.650><c> 4</c><00:01:16.920><c> then</c><00:01:17.490><c> you</c><00:01:17.670><c> know</c><00:01:17.820><c> you</c>

00:01:17.929 --> 00:01:17.939 align:start position:0%
by 6 down to 4 by 4 then you know you
 

00:01:17.939 --> 00:01:19.730 align:start position:0%
by 6 down to 4 by 4 then you know you
can<00:01:18.060><c> only</c><00:01:18.150><c> do</c><00:01:18.479><c> this</c><00:01:18.659><c> a</c><00:01:18.689><c> few</c><00:01:18.960><c> times</c><00:01:18.990><c> before</c><00:01:19.380><c> your</c>

00:01:19.730 --> 00:01:19.740 align:start position:0%
can only do this a few times before your
 

00:01:19.740 --> 00:01:21.890 align:start position:0%
can only do this a few times before your
image<00:01:20.070><c> starts</c><00:01:20.729><c> getting</c><00:01:21.060><c> really</c><00:01:21.090><c> small</c><00:01:21.420><c> maybe</c>

00:01:21.890 --> 00:01:21.900 align:start position:0%
image starts getting really small maybe
 

00:01:21.900 --> 00:01:23.420 align:start position:0%
image starts getting really small maybe
it<00:01:22.049><c> strings</c><00:01:22.290><c> down</c><00:01:22.470><c> to</c><00:01:22.680><c> one</c><00:01:22.890><c> by</c><00:01:23.040><c> one</c><00:01:23.280><c> or</c>

00:01:23.420 --> 00:01:23.430 align:start position:0%
it strings down to one by one or
 

00:01:23.430 --> 00:01:25.789 align:start position:0%
it strings down to one by one or
something<00:01:23.610><c> so</c><00:01:24.150><c> maybe</c><00:01:24.990><c> you</c><00:01:25.170><c> don't</c><00:01:25.380><c> want</c><00:01:25.650><c> your</c>

00:01:25.789 --> 00:01:25.799 align:start position:0%
something so maybe you don't want your
 

00:01:25.799 --> 00:01:27.950 align:start position:0%
something so maybe you don't want your
image<00:01:26.130><c> to</c><00:01:26.159><c> shrink</c><00:01:26.670><c> every</c><00:01:27.000><c> time</c><00:01:27.210><c> you</c><00:01:27.450><c> two</c>

00:01:27.950 --> 00:01:27.960 align:start position:0%
image to shrink every time you two
 

00:01:27.960 --> 00:01:30.050 align:start position:0%
image to shrink every time you two
changes<00:01:28.500><c> or</c><00:01:28.710><c> to</c><00:01:28.920><c> other</c><00:01:29.130><c> features</c><00:01:29.520><c> on</c><00:01:29.640><c> it</c><00:01:29.820><c> so</c>

00:01:30.050 --> 00:01:30.060 align:start position:0%
changes or to other features on it so
 

00:01:30.060 --> 00:01:32.359 align:start position:0%
changes or to other features on it so
that's<00:01:30.240><c> one</c><00:01:30.450><c> downside</c><00:01:30.750><c> and</c><00:01:31.320><c> the</c><00:01:31.920><c> second</c>

00:01:32.359 --> 00:01:32.369 align:start position:0%
that's one downside and the second
 

00:01:32.369 --> 00:01:34.340 align:start position:0%
that's one downside and the second
downside<00:01:32.820><c> is</c><00:01:33.090><c> that</c><00:01:33.329><c> if</c><00:01:33.659><c> you</c><00:01:33.960><c> look</c><00:01:34.170><c> at</c><00:01:34.290><c> the</c>

00:01:34.340 --> 00:01:34.350 align:start position:0%
downside is that if you look at the
 

00:01:34.350 --> 00:01:36.980 align:start position:0%
downside is that if you look at the
pixel<00:01:34.829><c> at</c><00:01:35.250><c> the</c><00:01:35.369><c> corner</c><00:01:35.790><c> of</c><00:01:35.939><c> the</c><00:01:36.030><c> page</c><00:01:36.329><c> this</c>

00:01:36.980 --> 00:01:36.990 align:start position:0%
pixel at the corner of the page this
 

00:01:36.990 --> 00:01:39.530 align:start position:0%
pixel at the corner of the page this
little<00:01:37.290><c> pixel</c><00:01:37.680><c> is</c><00:01:37.860><c> touchless</c><00:01:38.610><c> used</c><00:01:38.970><c> only</c><00:01:39.240><c> in</c>

00:01:39.530 --> 00:01:39.540 align:start position:0%
little pixel is touchless used only in
 

00:01:39.540 --> 00:01:41.630 align:start position:0%
little pixel is touchless used only in
one<00:01:39.780><c> of</c><00:01:39.930><c> the</c><00:01:40.020><c> outputs</c><00:01:40.439><c> because</c><00:01:41.130><c> it</c><00:01:41.280><c> touches</c>

00:01:41.630 --> 00:01:41.640 align:start position:0%
one of the outputs because it touches
 

00:01:41.640 --> 00:01:44.480 align:start position:0%
one of the outputs because it touches
that<00:01:41.939><c> feed</c><00:01:42.180><c> by</c><00:01:42.299><c> the</c><00:01:42.360><c> region</c><00:01:43.220><c> whereas</c><00:01:44.220><c> if</c><00:01:44.399><c> you</c>

00:01:44.480 --> 00:01:44.490 align:start position:0%
that feed by the region whereas if you
 

00:01:44.490 --> 00:01:47.810 align:start position:0%
that feed by the region whereas if you
take<00:01:44.700><c> a</c><00:01:44.729><c> pixel</c><00:01:45.299><c> in</c><00:01:46.170><c> the</c><00:01:46.320><c> middle</c><00:01:46.680><c> say</c><00:01:47.460><c> this</c>

00:01:47.810 --> 00:01:47.820 align:start position:0%
take a pixel in the middle say this
 

00:01:47.820 --> 00:01:50.660 align:start position:0%
take a pixel in the middle say this
pixel<00:01:48.560><c> then</c><00:01:49.560><c> there</c><00:01:49.829><c> are</c><00:01:49.920><c> lot</c><00:01:50.159><c> of</c><00:01:50.340><c> feed</c><00:01:50.549><c> by</c>

00:01:50.660 --> 00:01:50.670 align:start position:0%
pixel then there are lot of feed by
 

00:01:50.670 --> 00:01:53.870 align:start position:0%
pixel then there are lot of feed by
three<00:01:50.909><c> regions</c><00:01:51.420><c> that</c><00:01:52.020><c> overlap</c><00:01:52.560><c> that</c><00:01:53.340><c> pixel</c>

00:01:53.870 --> 00:01:53.880 align:start position:0%
three regions that overlap that pixel
 

00:01:53.880 --> 00:01:58.249 align:start position:0%
three regions that overlap that pixel
and<00:01:54.090><c> so</c><00:01:54.920><c> it's</c><00:01:55.920><c> as</c><00:01:56.130><c> if</c><00:01:56.159><c> pixels</c><00:01:56.939><c> on</c><00:01:57.210><c> the</c><00:01:57.479><c> corners</c>

00:01:58.249 --> 00:01:58.259 align:start position:0%
and so it's as if pixels on the corners
 

00:01:58.259 --> 00:02:00.889 align:start position:0%
and so it's as if pixels on the corners
around<00:01:58.530><c> the</c><00:01:58.649><c> edges</c><00:01:59.100><c> are</c><00:01:59.610><c> used</c><00:02:00.030><c> much</c><00:02:00.329><c> less</c><00:02:00.360><c> in</c>

00:02:00.889 --> 00:02:00.899 align:start position:0%
around the edges are used much less in
 

00:02:00.899 --> 00:02:02.719 align:start position:0%
around the edges are used much less in
the<00:02:00.930><c> output</c><00:02:01.439><c> so</c><00:02:01.619><c> you're</c><00:02:01.770><c> throwing</c><00:02:02.100><c> away</c><00:02:02.340><c> a</c><00:02:02.490><c> lot</c>

00:02:02.719 --> 00:02:02.729 align:start position:0%
the output so you're throwing away a lot
 

00:02:02.729 --> 00:02:04.969 align:start position:0%
the output so you're throwing away a lot
of<00:02:02.759><c> the</c><00:02:02.880><c> information</c><00:02:03.149><c> near</c><00:02:04.140><c> the</c><00:02:04.290><c> edge</c><00:02:04.500><c> of</c><00:02:04.530><c> the</c>

00:02:04.969 --> 00:02:04.979 align:start position:0%
of the information near the edge of the
 

00:02:04.979 --> 00:02:07.880 align:start position:0%
of the information near the edge of the
image<00:02:05.719><c> so</c><00:02:06.719><c> to</c><00:02:06.750><c> solve</c><00:02:07.259><c> both</c><00:02:07.530><c> of</c><00:02:07.590><c> these</c><00:02:07.740><c> problems</c>

00:02:07.880 --> 00:02:07.890 align:start position:0%
image so to solve both of these problems
 

00:02:07.890 --> 00:02:12.840 align:start position:0%
image so to solve both of these problems
you<00:02:08.789><c> know</c><00:02:09.000><c> both</c><00:02:09.270><c> the</c><00:02:09.560><c> shrinking</c><00:02:10.560><c> output</c>

00:02:12.840 --> 00:02:12.850 align:start position:0%
you know both the shrinking output
 

00:02:12.850 --> 00:02:14.700 align:start position:0%
you know both the shrinking output
and<00:02:12.940><c> when</c><00:02:13.690><c> we</c><00:02:13.780><c> put</c><00:02:13.990><c> really</c><00:02:14.260><c> deep</c><00:02:14.530><c> neural</c>

00:02:14.700 --> 00:02:14.710 align:start position:0%
and when we put really deep neural
 

00:02:14.710 --> 00:02:16.950 align:start position:0%
and when we put really deep neural
networks<00:02:15.010><c> you</c><00:02:15.640><c> see</c><00:02:15.910><c> why</c><00:02:16.120><c> you</c><00:02:16.180><c> don't</c><00:02:16.510><c> want</c><00:02:16.810><c> the</c>

00:02:16.950 --> 00:02:16.960 align:start position:0%
networks you see why you don't want the
 

00:02:16.960 --> 00:02:19.080 align:start position:0%
networks you see why you don't want the
image<00:02:17.290><c> to</c><00:02:17.320><c> shrink</c><00:02:17.800><c> on</c><00:02:17.920><c> every</c><00:02:18.190><c> step</c><00:02:18.490><c> because</c><00:02:18.880><c> if</c>

00:02:19.080 --> 00:02:19.090 align:start position:0%
image to shrink on every step because if
 

00:02:19.090 --> 00:02:22.050 align:start position:0%
image to shrink on every step because if
you<00:02:19.180><c> have</c><00:02:19.390><c> maybe</c><00:02:20.020><c> a</c><00:02:20.110><c> hundred</c><00:02:20.380><c> layer</c><00:02:21.250><c> deep</c><00:02:21.760><c> net</c>

00:02:22.050 --> 00:02:22.060 align:start position:0%
you have maybe a hundred layer deep net
 

00:02:22.060 --> 00:02:23.910 align:start position:0%
you have maybe a hundred layer deep net
then<00:02:22.390><c> if</c><00:02:22.540><c> it</c><00:02:22.660><c> strings</c><00:02:22.930><c> a</c><00:02:23.050><c> bit</c><00:02:23.230><c> on</c><00:02:23.380><c> every</c><00:02:23.710><c> layer</c>

00:02:23.910 --> 00:02:23.920 align:start position:0%
then if it strings a bit on every layer
 

00:02:23.920 --> 00:02:26.130 align:start position:0%
then if it strings a bit on every layer
then<00:02:24.370><c> after</c><00:02:24.790><c> 100</c><00:02:25.150><c> years</c><00:02:25.330><c> you</c><00:02:25.420><c> end</c><00:02:25.570><c> up</c><00:02:25.930><c> with</c><00:02:26.050><c> a</c>

00:02:26.130 --> 00:02:26.140 align:start position:0%
then after 100 years you end up with a
 

00:02:26.140 --> 00:02:28.770 align:start position:0%
then after 100 years you end up with a
very<00:02:26.350><c> small</c><00:02:26.710><c> image</c><00:02:27.180><c> so</c><00:02:28.180><c> that</c><00:02:28.330><c> was</c><00:02:28.450><c> one</c><00:02:28.630><c> problem</c>

00:02:28.770 --> 00:02:28.780 align:start position:0%
very small image so that was one problem
 

00:02:28.780 --> 00:02:32.580 align:start position:0%
very small image so that was one problem
the<00:02:29.230><c> other</c><00:02:29.260><c> is</c><00:02:29.710><c> you</c><00:02:30.280><c> know</c><00:02:30.370><c> throwing</c><00:02:30.760><c> away</c><00:02:31.590><c> of</c>

00:02:32.580 --> 00:02:32.590 align:start position:0%
the other is you know throwing away of
 

00:02:32.590 --> 00:02:36.480 align:start position:0%
the other is you know throwing away of
all<00:02:32.770><c> of</c><00:02:32.920><c> the</c><00:02:33.010><c> information</c><00:02:34.680><c> from</c><00:02:35.680><c> the</c><00:02:35.860><c> edges</c><00:02:36.310><c> of</c>

00:02:36.480 --> 00:02:36.490 align:start position:0%
all of the information from the edges of
 

00:02:36.490 --> 00:02:39.660 align:start position:0%
all of the information from the edges of
the<00:02:36.610><c> image</c><00:02:37.530><c> so</c><00:02:38.530><c> in</c><00:02:38.620><c> order</c><00:02:38.770><c> to</c><00:02:38.950><c> fix</c><00:02:39.400><c> both</c><00:02:39.610><c> of</c>

00:02:39.660 --> 00:02:39.670 align:start position:0%
the image so in order to fix both of
 

00:02:39.670 --> 00:02:42.810 align:start position:0%
the image so in order to fix both of
these<00:02:39.910><c> problems</c><00:02:40.240><c> what</c><00:02:41.020><c> you</c><00:02:41.140><c> can</c><00:02:41.320><c> do</c><00:02:41.560><c> is</c><00:02:41.920><c> before</c>

00:02:42.810 --> 00:02:42.820 align:start position:0%
these problems what you can do is before
 

00:02:42.820 --> 00:02:44.970 align:start position:0%
these problems what you can do is before
applying<00:02:43.150><c> the</c><00:02:43.270><c> convolutional</c><00:02:43.870><c> operation</c><00:02:44.470><c> you</c>

00:02:44.970 --> 00:02:44.980 align:start position:0%
applying the convolutional operation you
 

00:02:44.980 --> 00:02:48.240 align:start position:0%
applying the convolutional operation you
can<00:02:45.190><c> add</c><00:02:45.550><c> the</c><00:02:45.970><c> image</c><00:02:46.110><c> so</c><00:02:47.110><c> in</c><00:02:47.200><c> this</c><00:02:47.320><c> case</c><00:02:47.620><c> let's</c>

00:02:48.240 --> 00:02:48.250 align:start position:0%
can add the image so in this case let's
 

00:02:48.250 --> 00:02:52.130 align:start position:0%
can add the image so in this case let's
say<00:02:48.370><c> you</c><00:02:48.490><c> pad</c><00:02:48.970><c> the</c><00:02:49.270><c> image</c><00:02:49.650><c> with</c><00:02:50.650><c> an</c><00:02:50.800><c> additional</c>

00:02:52.130 --> 00:02:52.140 align:start position:0%
say you pad the image with an additional
 

00:02:52.140 --> 00:02:57.540 align:start position:0%
say you pad the image with an additional
one<00:02:55.050><c> border</c><00:02:56.050><c> with</c><00:02:56.350><c> an</c><00:02:56.500><c> additional</c><00:02:57.040><c> border</c><00:02:57.430><c> of</c>

00:02:57.540 --> 00:02:57.550 align:start position:0%
one border with an additional border of
 

00:02:57.550 --> 00:03:01.230 align:start position:0%
one border with an additional border of
one<00:02:57.820><c> pixel</c><00:02:58.300><c> or</c><00:02:58.540><c> around</c><00:02:59.320><c> the</c><00:02:59.500><c> edges</c><00:03:00.030><c> so</c><00:03:01.030><c> if</c><00:03:01.150><c> you</c>

00:03:01.230 --> 00:03:01.240 align:start position:0%
one pixel or around the edges so if you
 

00:03:01.240 --> 00:03:04.650 align:start position:0%
one pixel or around the edges so if you
do<00:03:01.420><c> that</c><00:03:02.490><c> then</c><00:03:03.490><c> instead</c><00:03:03.880><c> of</c><00:03:03.940><c> a</c><00:03:03.970><c> six</c><00:03:04.210><c> by</c><00:03:04.330><c> six</c>

00:03:04.650 --> 00:03:04.660 align:start position:0%
do that then instead of a six by six
 

00:03:04.660 --> 00:03:07.260 align:start position:0%
do that then instead of a six by six
image<00:03:05.020><c> you've</c><00:03:05.260><c> now</c><00:03:05.470><c> padded</c><00:03:05.950><c> this</c><00:03:06.130><c> to</c><00:03:06.790><c> an</c><00:03:06.850><c> 8</c><00:03:07.060><c> by</c>

00:03:07.260 --> 00:03:07.270 align:start position:0%
image you've now padded this to an 8 by
 

00:03:07.270 --> 00:03:10.320 align:start position:0%
image you've now padded this to an 8 by
8<00:03:07.510><c> image</c><00:03:08.080><c> and</c><00:03:09.070><c> if</c><00:03:09.370><c> you</c><00:03:09.460><c> convolve</c><00:03:09.820><c> an</c><00:03:09.970><c> eight</c><00:03:10.180><c> by</c>

00:03:10.320 --> 00:03:10.330 align:start position:0%
8 image and if you convolve an eight by
 

00:03:10.330 --> 00:03:11.910 align:start position:0%
8 image and if you convolve an eight by
eight<00:03:10.540><c> image</c><00:03:10.840><c> of</c><00:03:10.990><c> a</c><00:03:11.080><c> three</c><00:03:11.230><c> by</c><00:03:11.410><c> three</c><00:03:11.440><c> image</c>

00:03:11.910 --> 00:03:11.920 align:start position:0%
eight image of a three by three image
 

00:03:11.920 --> 00:03:14.820 align:start position:0%
eight image of a three by three image
you<00:03:12.520><c> now</c><00:03:12.670><c> get</c><00:03:13.000><c> back</c><00:03:13.180><c> out</c><00:03:13.420><c> now</c><00:03:14.290><c> the</c><00:03:14.350><c> four</c><00:03:14.680><c> by</c>

00:03:14.820 --> 00:03:14.830 align:start position:0%
you now get back out now the four by
 

00:03:14.830 --> 00:03:17.130 align:start position:0%
you now get back out now the four by
four<00:03:15.100><c> by</c><00:03:15.340><c> the</c><00:03:15.640><c> six</c><00:03:15.940><c> by</c><00:03:16.120><c> six</c><00:03:16.480><c> image</c><00:03:16.810><c> and</c><00:03:16.960><c> so</c>

00:03:17.130 --> 00:03:17.140 align:start position:0%
four by the six by six image and so
 

00:03:17.140 --> 00:03:19.530 align:start position:0%
four by the six by six image and so
you've<00:03:17.320><c> managed</c><00:03:18.310><c> to</c><00:03:18.340><c> preserve</c><00:03:18.760><c> the</c><00:03:19.330><c> original</c>

00:03:19.530 --> 00:03:19.540 align:start position:0%
you've managed to preserve the original
 

00:03:19.540 --> 00:03:24.000 align:start position:0%
you've managed to preserve the original
input<00:03:20.260><c> size</c><00:03:20.470><c> of</c><00:03:20.740><c> six</c><00:03:21.190><c> point</c><00:03:21.400><c> six</c><00:03:22.860><c> so</c><00:03:23.860><c> by</c>

00:03:24.000 --> 00:03:24.010 align:start position:0%
input size of six point six so by
 

00:03:24.010 --> 00:03:25.950 align:start position:0%
input size of six point six so by
convention<00:03:24.310><c> when</c><00:03:24.730><c> you've</c><00:03:24.850><c> had</c><00:03:25.060><c> you</c><00:03:25.540><c> padded</c>

00:03:25.950 --> 00:03:25.960 align:start position:0%
convention when you've had you padded
 

00:03:25.960 --> 00:03:31.680 align:start position:0%
convention when you've had you padded
with<00:03:26.080><c> zeros</c><00:03:26.140><c> and</c><00:03:27.420><c> if</c><00:03:28.420><c> P</c><00:03:28.900><c> is</c><00:03:29.230><c> the</c><00:03:30.690><c> padding</c>

00:03:31.680 --> 00:03:31.690 align:start position:0%
with zeros and if P is the padding
 

00:03:31.690 --> 00:03:36.500 align:start position:0%
with zeros and if P is the padding
amount<00:03:32.640><c> so</c><00:03:33.640><c> in</c><00:03:33.760><c> this</c><00:03:33.880><c> case</c><00:03:34.150><c> P</c><00:03:34.930><c> is</c><00:03:35.050><c> equal</c><00:03:35.320><c> to</c><00:03:35.410><c> one</c>

00:03:36.500 --> 00:03:36.510 align:start position:0%
amount so in this case P is equal to one
 

00:03:36.510 --> 00:03:39.210 align:start position:0%
amount so in this case P is equal to one
because<00:03:37.510><c> we're</c><00:03:37.900><c> padding</c><00:03:38.410><c> all</c><00:03:38.590><c> around</c><00:03:38.620><c> with</c><00:03:39.100><c> an</c>

00:03:39.210 --> 00:03:39.220 align:start position:0%
because we're padding all around with an
 

00:03:39.220 --> 00:03:41.610 align:start position:0%
because we're padding all around with an
extra<00:03:39.580><c> border</c><00:03:40.000><c> of</c><00:03:40.090><c> one</c><00:03:40.330><c> pixels</c><00:03:40.870><c> then</c><00:03:41.500><c> the</c>

00:03:41.610 --> 00:03:41.620 align:start position:0%
extra border of one pixels then the
 

00:03:41.620 --> 00:03:48.750 align:start position:0%
extra border of one pixels then the
output<00:03:42.070><c> becomes</c><00:03:42.490><c> n</c><00:03:43.030><c> might</c><00:03:43.450><c> and</c><00:03:44.070><c> plus</c><00:03:46.890><c> 2p</c><00:03:47.890><c> minus</c>

00:03:48.750 --> 00:03:48.760 align:start position:0%
output becomes n might and plus 2p minus
 

00:03:48.760 --> 00:03:54.600 align:start position:0%
output becomes n might and plus 2p minus
f<00:03:49.240><c> plus</c><00:03:49.780><c> 1</c><00:03:50.050><c> by</c><00:03:51.010><c> n</c><00:03:51.280><c> plus</c><00:03:51.850><c> 2p</c><00:03:52.450><c> minus</c><00:03:52.810><c> F</c><00:03:53.230><c> by</c><00:03:53.500><c> one</c><00:03:54.250><c> so</c>

00:03:54.600 --> 00:03:54.610 align:start position:0%
f plus 1 by n plus 2p minus F by one so
 

00:03:54.610 --> 00:03:58.620 align:start position:0%
f plus 1 by n plus 2p minus F by one so
this<00:03:55.360><c> becomes</c><00:03:55.810><c> 6</c><00:03:56.110><c> plus</c><00:03:56.530><c> 2</c><00:03:56.860><c> times</c><00:03:57.130><c> 1</c><00:03:57.400><c> minus</c><00:03:58.360><c> 3</c>

00:03:58.620 --> 00:03:58.630 align:start position:0%
this becomes 6 plus 2 times 1 minus 3
 

00:03:58.630 --> 00:04:03.120 align:start position:0%
this becomes 6 plus 2 times 1 minus 3
plus<00:03:59.050><c> 1</c><00:03:59.790><c> by</c><00:04:00.790><c> the</c><00:04:00.850><c> same</c><00:04:01.120><c> thing</c><00:04:01.390><c> and</c><00:04:01.930><c> that</c><00:04:02.170><c> so</c><00:04:02.710><c> 6</c>

00:04:03.120 --> 00:04:03.130 align:start position:0%
plus 1 by the same thing and that so 6
 

00:04:03.130 --> 00:04:06.210 align:start position:0%
plus 1 by the same thing and that so 6
plus<00:04:03.310><c> 2</c><00:04:03.550><c> minus</c><00:04:03.850><c> 3</c><00:04:04.150><c> plus</c><00:04:04.330><c> 1</c><00:04:04.900><c> that's</c><00:04:05.440><c> equal</c><00:04:05.830><c> to</c><00:04:05.920><c> 6</c>

00:04:06.210 --> 00:04:06.220 align:start position:0%
plus 2 minus 3 plus 1 that's equal to 6
 

00:04:06.220 --> 00:04:08.730 align:start position:0%
plus 2 minus 3 plus 1 that's equal to 6
so<00:04:06.670><c> you</c><00:04:06.730><c> end</c><00:04:06.970><c> up</c><00:04:07.090><c> with</c><00:04:07.180><c> a</c><00:04:07.360><c> six</c><00:04:08.050><c> by</c><00:04:08.200><c> six</c><00:04:08.440><c> image</c>

00:04:08.730 --> 00:04:08.740 align:start position:0%
so you end up with a six by six image
 

00:04:08.740 --> 00:04:10.200 align:start position:0%
so you end up with a six by six image
that's<00:04:09.010><c> preserving</c><00:04:09.580><c> the</c><00:04:09.700><c> size</c><00:04:09.910><c> of</c><00:04:10.090><c> the</c>

00:04:10.200 --> 00:04:10.210 align:start position:0%
that's preserving the size of the
 

00:04:10.210 --> 00:04:14.040 align:start position:0%
that's preserving the size of the
Arsenal<00:04:10.540><c> input</c><00:04:12.180><c> so</c><00:04:13.180><c> this</c><00:04:13.360><c> being</c><00:04:13.600><c> pixel</c>

00:04:14.040 --> 00:04:14.050 align:start position:0%
Arsenal input so this being pixel
 

00:04:14.050 --> 00:04:17.960 align:start position:0%
Arsenal input so this being pixel
actually<00:04:14.500><c> influences</c><00:04:15.280><c> all</c><00:04:15.580><c> of</c><00:04:15.970><c> these</c><00:04:16.470><c> cells</c>

00:04:17.960 --> 00:04:17.970 align:start position:0%
actually influences all of these cells
 

00:04:17.970 --> 00:04:22.670 align:start position:0%
actually influences all of these cells
of<00:04:18.970><c> the</c><00:04:19.630><c> output</c><00:04:20.020><c> and</c><00:04:20.760><c> so</c><00:04:21.760><c> this</c><00:04:22.060><c> effect</c>

00:04:22.670 --> 00:04:22.680 align:start position:0%
of the output and so this effect
 

00:04:22.680 --> 00:04:24.920 align:start position:0%
of the output and so this effect
you<00:04:23.400><c> know</c><00:04:23.520><c> maybe</c><00:04:23.880><c> not</c><00:04:24.120><c> quite</c><00:04:24.270><c> thering</c><00:04:24.690><c> away</c>

00:04:24.920 --> 00:04:24.930 align:start position:0%
you know maybe not quite thering away
 

00:04:24.930 --> 00:04:27.590 align:start position:0%
you know maybe not quite thering away
but<00:04:25.280><c> counting</c><00:04:26.280><c> less</c><00:04:26.580><c> the</c><00:04:26.820><c> information</c><00:04:27.360><c> from</c>

00:04:27.590 --> 00:04:27.600 align:start position:0%
but counting less the information from
 

00:04:27.600 --> 00:04:29.900 align:start position:0%
but counting less the information from
the<00:04:27.750><c> edge</c><00:04:27.960><c> of</c><00:04:28.320><c> a</c><00:04:28.860><c> corner</c><00:04:29.310><c> or</c><00:04:29.400><c> the</c><00:04:29.430><c> edge</c><00:04:29.520><c> of</c><00:04:29.699><c> the</c>

00:04:29.900 --> 00:04:29.910 align:start position:0%
the edge of a corner or the edge of the
 

00:04:29.910 --> 00:04:34.400 align:start position:0%
the edge of a corner or the edge of the
image<00:04:30.090><c> is</c><00:04:30.419><c> reduced</c><00:04:31.280><c> and</c><00:04:32.419><c> I've</c><00:04:33.419><c> shown</c><00:04:33.750><c> here</c><00:04:34.110><c> the</c>

00:04:34.400 --> 00:04:34.410 align:start position:0%
image is reduced and I've shown here the
 

00:04:34.410 --> 00:04:37.310 align:start position:0%
image is reduced and I've shown here the
effect<00:04:34.740><c> of</c><00:04:34.919><c> having</c><00:04:35.270><c> the</c><00:04:36.270><c> border</c><00:04:36.780><c> with</c><00:04:37.020><c> just</c>

00:04:37.310 --> 00:04:37.320 align:start position:0%
effect of having the border with just
 

00:04:37.320 --> 00:04:39.680 align:start position:0%
effect of having the border with just
one<00:04:37.560><c> pixel</c><00:04:38.009><c> if</c><00:04:38.310><c> you</c><00:04:38.490><c> want</c><00:04:38.729><c> you</c><00:04:38.880><c> can</c><00:04:39.000><c> also</c><00:04:39.180><c> pad</c>

00:04:39.680 --> 00:04:39.690 align:start position:0%
one pixel if you want you can also pad
 

00:04:39.690 --> 00:04:42.200 align:start position:0%
one pixel if you want you can also pad
the<00:04:40.020><c> border</c><00:04:40.470><c> with</c><00:04:41.009><c> two</c><00:04:41.280><c> pixels</c><00:04:41.759><c> in</c><00:04:41.850><c> which</c><00:04:41.970><c> case</c>

00:04:42.200 --> 00:04:42.210 align:start position:0%
the border with two pixels in which case
 

00:04:42.210 --> 00:04:44.810 align:start position:0%
the border with two pixels in which case
I<00:04:42.240><c> guess</c><00:04:42.509><c> you</c><00:04:42.660><c> know</c><00:04:42.930><c> add</c><00:04:43.139><c> on</c><00:04:43.380><c> another</c><00:04:43.820><c> border</c>

00:04:44.810 --> 00:04:44.820 align:start position:0%
I guess you know add on another border
 

00:04:44.820 --> 00:04:47.360 align:start position:0%
I guess you know add on another border
here<00:04:45.210><c> and</c><00:04:46.020><c> that</c><00:04:46.320><c> you</c><00:04:46.410><c> can</c><00:04:46.530><c> pattern</c><00:04:46.919><c> with</c><00:04:47.039><c> even</c>

00:04:47.360 --> 00:04:47.370 align:start position:0%
here and that you can pattern with even
 

00:04:47.370 --> 00:04:51.950 align:start position:0%
here and that you can pattern with even
more<00:04:47.520><c> pixels</c><00:04:47.850><c> if</c><00:04:48.120><c> you</c><00:04:48.240><c> choose</c><00:04:50.720><c> so</c><00:04:51.720><c> I</c><00:04:51.750><c> guess</c>

00:04:51.950 --> 00:04:51.960 align:start position:0%
more pixels if you choose so I guess
 

00:04:51.960 --> 00:04:53.360 align:start position:0%
more pixels if you choose so I guess
what<00:04:52.139><c> I'm</c><00:04:52.259><c> drawing</c><00:04:52.440><c> here</c><00:04:52.560><c> this</c><00:04:53.039><c> would</c><00:04:53.220><c> be</c><00:04:53.250><c> a</c>

00:04:53.360 --> 00:04:53.370 align:start position:0%
what I'm drawing here this would be a
 

00:04:53.370 --> 00:04:59.600 align:start position:0%
what I'm drawing here this would be a
pad<00:04:53.820><c> of</c><00:04:53.850><c> equal</c><00:04:54.509><c> to</c><00:04:54.840><c> or</c><00:04:55.050><c> equals</c><00:04:55.560><c> to</c><00:04:58.099><c> in</c><00:04:59.099><c> terms</c><00:04:59.430><c> of</c>

00:04:59.600 --> 00:04:59.610 align:start position:0%
pad of equal to or equals to in terms of
 

00:04:59.610 --> 00:05:01.430 align:start position:0%
pad of equal to or equals to in terms of
how<00:04:59.820><c> much</c><00:04:59.970><c> to</c><00:05:00.240><c> pad</c><00:05:00.539><c> it</c><00:05:00.810><c> turns</c><00:05:01.020><c> out</c><00:05:01.169><c> there</c><00:05:01.380><c> are</c>

00:05:01.430 --> 00:05:01.440 align:start position:0%
how much to pad it turns out there are
 

00:05:01.440 --> 00:05:03.850 align:start position:0%
how much to pad it turns out there are
two<00:05:01.500><c> common</c><00:05:02.310><c> choices</c><00:05:02.729><c> that</c><00:05:03.300><c> are</c><00:05:03.419><c> called</c>

00:05:03.850 --> 00:05:03.860 align:start position:0%
two common choices that are called
 

00:05:03.860 --> 00:05:06.260 align:start position:0%
two common choices that are called
valid<00:05:04.860><c> convolutions</c><00:05:05.520><c> and</c><00:05:05.849><c> saying</c>

00:05:06.260 --> 00:05:06.270 align:start position:0%
valid convolutions and saying
 

00:05:06.270 --> 00:05:08.240 align:start position:0%
valid convolutions and saying
convolutions<00:05:07.080><c> not</c><00:05:07.620><c> sure</c><00:05:07.770><c> these</c><00:05:07.889><c> are</c><00:05:08.070><c> great</c>

00:05:08.240 --> 00:05:08.250 align:start position:0%
convolutions not sure these are great
 

00:05:08.250 --> 00:05:11.150 align:start position:0%
convolutions not sure these are great
names<00:05:08.490><c> but</c><00:05:08.820><c> in</c><00:05:09.030><c> a</c><00:05:09.449><c> valid</c><00:05:09.900><c> convolution</c><00:05:10.590><c> this</c>

00:05:11.150 --> 00:05:11.160 align:start position:0%
names but in a valid convolution this
 

00:05:11.160 --> 00:05:16.730 align:start position:0%
names but in a valid convolution this
basically<00:05:11.639><c> means</c><00:05:12.000><c> no</c><00:05:12.300><c> padding</c><00:05:13.259><c> and</c><00:05:15.080><c> so</c><00:05:16.080><c> in</c>

00:05:16.730 --> 00:05:16.740 align:start position:0%
basically means no padding and so in
 

00:05:16.740 --> 00:05:19.180 align:start position:0%
basically means no padding and so in
this<00:05:16.919><c> case</c><00:05:17.190><c> you</c><00:05:17.520><c> might</c><00:05:17.669><c> have</c><00:05:17.820><c> an</c><00:05:17.940><c> N</c><00:05:18.090><c> by</c><00:05:18.240><c> n</c><00:05:18.270><c> image</c>

00:05:19.180 --> 00:05:19.190 align:start position:0%
this case you might have an N by n image
 

00:05:19.190 --> 00:05:23.270 align:start position:0%
this case you might have an N by n image
convolve<00:05:20.190><c> moving</c><00:05:20.729><c> F</c><00:05:20.970><c> by</c><00:05:21.210><c> F</c><00:05:21.449><c> filter</c><00:05:22.050><c> and</c><00:05:22.320><c> this</c>

00:05:23.270 --> 00:05:23.280 align:start position:0%
convolve moving F by F filter and this
 

00:05:23.280 --> 00:05:27.230 align:start position:0%
convolve moving F by F filter and this
will<00:05:23.490><c> give</c><00:05:23.669><c> you</c><00:05:23.820><c> an</c><00:05:24.000><c> N</c><00:05:24.210><c> minus</c><00:05:24.660><c> F</c><00:05:25.110><c> plus</c><00:05:25.860><c> 1</c><00:05:26.190><c> by</c><00:05:26.970><c> n</c>

00:05:27.230 --> 00:05:27.240 align:start position:0%
will give you an N minus F plus 1 by n
 

00:05:27.240 --> 00:05:30.350 align:start position:0%
will give you an N minus F plus 1 by n
minus<00:05:27.270><c> F</c><00:05:27.900><c> plus</c><00:05:28.650><c> 1</c><00:05:28.919><c> dimensional</c><00:05:29.610><c> output</c><00:05:30.060><c> so</c>

00:05:30.350 --> 00:05:30.360 align:start position:0%
minus F plus 1 dimensional output so
 

00:05:30.360 --> 00:05:32.540 align:start position:0%
minus F plus 1 dimensional output so
this<00:05:30.539><c> is</c><00:05:30.750><c> a</c><00:05:30.780><c> like</c><00:05:31.680><c> the</c><00:05:31.830><c> example</c><00:05:32.250><c> we</c><00:05:32.370><c> had</c>

00:05:32.540 --> 00:05:32.550 align:start position:0%
this is a like the example we had
 

00:05:32.550 --> 00:05:34.219 align:start position:0%
this is a like the example we had
previously<00:05:32.760><c> from</c><00:05:33.419><c> the</c><00:05:33.539><c> previous</c><00:05:33.900><c> videos</c>

00:05:34.219 --> 00:05:34.229 align:start position:0%
previously from the previous videos
 

00:05:34.229 --> 00:05:37.040 align:start position:0%
previously from the previous videos
where<00:05:34.650><c> we</c><00:05:34.860><c> had</c><00:05:35.430><c> an</c><00:05:35.550><c> N</c><00:05:35.699><c> by</c><00:05:35.880><c> n</c><00:05:35.909><c> image</c><00:05:36.330><c> to</c><00:05:36.780><c> involve</c>

00:05:37.040 --> 00:05:37.050 align:start position:0%
where we had an N by n image to involve
 

00:05:37.050 --> 00:05:39.830 align:start position:0%
where we had an N by n image to involve
with<00:05:37.229><c> a</c><00:05:37.320><c> 3</c><00:05:37.500><c> by</c><00:05:37.680><c> 3</c><00:05:37.740><c> filter</c><00:05:38.430><c> and</c><00:05:38.760><c> that</c><00:05:38.789><c> gave</c><00:05:39.570><c> you</c><00:05:39.810><c> a</c>

00:05:39.830 --> 00:05:39.840 align:start position:0%
with a 3 by 3 filter and that gave you a
 

00:05:39.840 --> 00:05:45.920 align:start position:0%
with a 3 by 3 filter and that gave you a
4<00:05:40.440><c> by</c><00:05:40.650><c> 4</c><00:05:40.979><c> output</c><00:05:43.699><c> the</c><00:05:44.699><c> other</c><00:05:45.000><c> most</c><00:05:45.389><c> common</c>

00:05:45.920 --> 00:05:45.930 align:start position:0%
4 by 4 output the other most common
 

00:05:45.930 --> 00:05:48.950 align:start position:0%
4 by 4 output the other most common
choice<00:05:46.710><c> of</c><00:05:47.070><c> padding</c><00:05:47.610><c> is</c><00:05:47.880><c> called</c><00:05:48.510><c> the</c><00:05:48.659><c> same</c>

00:05:48.950 --> 00:05:48.960 align:start position:0%
choice of padding is called the same
 

00:05:48.960 --> 00:05:52.610 align:start position:0%
choice of padding is called the same
convolution<00:05:49.770><c> and</c><00:05:50.330><c> that</c><00:05:51.330><c> means</c><00:05:51.750><c> when</c><00:05:52.080><c> you</c><00:05:52.259><c> pad</c>

00:05:52.610 --> 00:05:52.620 align:start position:0%
convolution and that means when you pad
 

00:05:52.620 --> 00:05:56.089 align:start position:0%
convolution and that means when you pad
so<00:05:52.949><c> the</c><00:05:53.099><c> output</c><00:05:53.610><c> size</c><00:05:53.849><c> is</c><00:05:54.180><c> the</c><00:05:54.690><c> same</c><00:05:55.020><c> as</c><00:05:55.409><c> the</c>

00:05:56.089 --> 00:05:56.099 align:start position:0%
so the output size is the same as the
 

00:05:56.099 --> 00:06:01.070 align:start position:0%
so the output size is the same as the
input<00:05:56.550><c> size</c><00:05:59.240><c> so</c><00:06:00.240><c> if</c><00:06:00.539><c> we</c><00:06:00.630><c> actually</c><00:06:00.690><c> look</c><00:06:00.870><c> at</c>

00:06:01.070 --> 00:06:01.080 align:start position:0%
input size so if we actually look at
 

00:06:01.080 --> 00:06:03.890 align:start position:0%
input size so if we actually look at
this<00:06:01.199><c> formula</c><00:06:01.590><c> when</c><00:06:02.310><c> you</c><00:06:02.430><c> pad</c><00:06:02.729><c> by</c><00:06:03.000><c> P</c><00:06:03.060><c> pixels</c>

00:06:03.890 --> 00:06:03.900 align:start position:0%
this formula when you pad by P pixels
 

00:06:03.900 --> 00:06:07.969 align:start position:0%
this formula when you pad by P pixels
then<00:06:04.380><c> this</c><00:06:04.830><c> as</c><00:06:05.099><c> if</c><00:06:05.280><c> n</c><00:06:05.550><c> goes</c><00:06:05.970><c> to</c><00:06:06.000><c> n</c><00:06:06.330><c> plus</c><00:06:06.960><c> 2</c><00:06:07.380><c> P</c><00:06:07.710><c> and</c>

00:06:07.969 --> 00:06:07.979 align:start position:0%
then this as if n goes to n plus 2 P and
 

00:06:07.979 --> 00:06:10.820 align:start position:0%
then this as if n goes to n plus 2 P and
then<00:06:08.940><c> you</c><00:06:09.060><c> have</c><00:06:09.270><c> a</c><00:06:09.300><c> from</c><00:06:10.199><c> the</c><00:06:10.289><c> rest</c><00:06:10.500><c> of</c><00:06:10.650><c> this</c>

00:06:10.820 --> 00:06:10.830 align:start position:0%
then you have a from the rest of this
 

00:06:10.830 --> 00:06:16.730 align:start position:0%
then you have a from the rest of this
right<00:06:11.310><c> minus</c><00:06:12.090><c> F</c><00:06:12.270><c> plus</c><00:06:12.570><c> 1</c><00:06:15.020><c> so</c><00:06:16.020><c> we</c><00:06:16.169><c> have</c><00:06:16.199><c> an</c><00:06:16.409><c> N</c><00:06:16.590><c> by</c>

00:06:16.730 --> 00:06:16.740 align:start position:0%
right minus F plus 1 so we have an N by
 

00:06:16.740 --> 00:06:20.330 align:start position:0%
right minus F plus 1 so we have an N by
n<00:06:16.770><c> image</c><00:06:17.190><c> and</c><00:06:17.639><c> the</c><00:06:18.210><c> padding</c><00:06:18.690><c> of</c><00:06:18.930><c> a</c><00:06:19.139><c> border</c><00:06:19.770><c> of</c><00:06:20.009><c> P</c>

00:06:20.330 --> 00:06:20.340 align:start position:0%
n image and the padding of a border of P
 

00:06:20.340 --> 00:06:23.120 align:start position:0%
n image and the padding of a border of P
pick<00:06:20.610><c> holes</c><00:06:20.849><c> all</c><00:06:21.150><c> around</c><00:06:21.650><c> then</c><00:06:22.650><c> the</c><00:06:22.770><c> output</c>

00:06:23.120 --> 00:06:23.130 align:start position:0%
pick holes all around then the output
 

00:06:23.130 --> 00:06:25.430 align:start position:0%
pick holes all around then the output
size<00:06:23.310><c> ends</c><00:06:23.610><c> up</c><00:06:23.729><c> being</c><00:06:23.880><c> this</c><00:06:24.060><c> dimension</c><00:06:24.630><c> n</c><00:06:24.870><c> plus</c>

00:06:25.430 --> 00:06:25.440 align:start position:0%
size ends up being this dimension n plus
 

00:06:25.440 --> 00:06:31.030 align:start position:0%
size ends up being this dimension n plus
2<00:06:25.680><c> P</c><00:06:25.949><c> minus</c><00:06:26.460><c> F</c><00:06:26.669><c> plus</c><00:06:26.940><c> 1</c><00:06:28.220><c> and</c><00:06:29.870><c> so</c>

00:06:31.030 --> 00:06:31.040 align:start position:0%
2 P minus F plus 1 and so
 

00:06:31.040 --> 00:06:35.110 align:start position:0%
2 P minus F plus 1 and so
if<00:06:31.130><c> you</c><00:06:31.400><c> want</c><00:06:31.640><c> n</c><00:06:31.940><c> plus</c><00:06:32.330><c> 2p</c><00:06:33.170><c> minus</c><00:06:33.410><c> f</c><00:06:33.860><c> plus</c><00:06:34.160><c> 1</c><00:06:34.460><c> to</c>

00:06:35.110 --> 00:06:35.120 align:start position:0%
if you want n plus 2p minus f plus 1 to
 

00:06:35.120 --> 00:06:37.120 align:start position:0%
if you want n plus 2p minus f plus 1 to
be<00:06:35.240><c> equal</c><00:06:35.270><c> to</c><00:06:35.720><c> one</c><00:06:35.960><c> so</c><00:06:36.290><c> that</c><00:06:36.440><c> the</c><00:06:36.530><c> output</c><00:06:36.920><c> size</c>

00:06:37.120 --> 00:06:37.130 align:start position:0%
be equal to one so that the output size
 

00:06:37.130 --> 00:06:39.600 align:start position:0%
be equal to one so that the output size
is<00:06:37.310><c> the</c><00:06:37.370><c> same</c><00:06:37.580><c> as</c><00:06:37.700><c> the</c><00:06:37.790><c> input</c><00:06:37.970><c> size</c><00:06:38.330><c> if</c><00:06:38.960><c> you</c>

00:06:39.600 --> 00:06:39.610 align:start position:0%
is the same as the input size if you
 

00:06:39.610 --> 00:06:43.060 align:start position:0%
is the same as the input size if you
take<00:06:40.610><c> this</c><00:06:40.790><c> and</c><00:06:41.120><c> solve</c><00:06:41.540><c> for</c><00:06:42.080><c> I</c><00:06:42.350><c> guess</c><00:06:42.830><c> n</c>

00:06:43.060 --> 00:06:43.070 align:start position:0%
take this and solve for I guess n
 

00:06:43.070 --> 00:06:45.400 align:start position:0%
take this and solve for I guess n
cancels<00:06:43.400><c> out</c><00:06:43.760><c> on</c><00:06:43.940><c> both</c><00:06:44.150><c> sides</c><00:06:44.180><c> and</c><00:06:44.750><c> if</c><00:06:45.320><c> you</c>

00:06:45.400 --> 00:06:45.410 align:start position:0%
cancels out on both sides and if you
 

00:06:45.410 --> 00:06:48.790 align:start position:0%
cancels out on both sides and if you
solve<00:06:45.680><c> for</c><00:06:45.830><c> P</c><00:06:46.370><c> this</c><00:06:47.060><c> implies</c><00:06:47.480><c> that</c><00:06:47.510><c> P</c><00:06:48.170><c> is</c><00:06:48.380><c> equal</c>

00:06:48.790 --> 00:06:48.800 align:start position:0%
solve for P this implies that P is equal
 

00:06:48.800 --> 00:06:56.260 align:start position:0%
solve for P this implies that P is equal
to<00:06:48.830><c> F</c><00:06:49.280><c> minus</c><00:06:49.880><c> 1</c><00:06:50.330><c> over</c><00:06:50.840><c> 2</c><00:06:53.560><c> so</c><00:06:54.560><c> when</c><00:06:54.800><c> F</c><00:06:55.070><c> is</c><00:06:55.250><c> odd</c><00:06:55.550><c> by</c>

00:06:56.260 --> 00:06:56.270 align:start position:0%
to F minus 1 over 2 so when F is odd by
 

00:06:56.270 --> 00:06:58.450 align:start position:0%
to F minus 1 over 2 so when F is odd by
choosing<00:06:56.660><c> the</c><00:06:57.290><c> padding</c><00:06:57.770><c> size</c><00:06:57.980><c> to</c><00:06:58.220><c> be</c><00:06:58.340><c> as</c>

00:06:58.450 --> 00:06:58.460 align:start position:0%
choosing the padding size to be as
 

00:06:58.460 --> 00:07:00.790 align:start position:0%
choosing the padding size to be as
follows<00:06:58.910><c> you</c><00:06:59.120><c> can</c><00:06:59.270><c> make</c><00:06:59.420><c> sure</c><00:06:59.450><c> that</c><00:06:59.930><c> the</c><00:07:00.410><c> upper</c>

00:07:00.790 --> 00:07:00.800 align:start position:0%
follows you can make sure that the upper
 

00:07:00.800 --> 00:07:04.290 align:start position:0%
follows you can make sure that the upper
size<00:07:01.040><c> is</c><00:07:01.280><c> the</c><00:07:01.370><c> same</c><00:07:01.610><c> as</c><00:07:01.850><c> the</c><00:07:02.060><c> input</c><00:07:02.360><c> size</c><00:07:02.890><c> and</c>

00:07:04.290 --> 00:07:04.300 align:start position:0%
size is the same as the input size and
 

00:07:04.300 --> 00:07:07.510 align:start position:0%
size is the same as the input size and
that's<00:07:05.300><c> why</c><00:07:05.510><c> for</c><00:07:05.720><c> example</c><00:07:06.170><c> when</c><00:07:06.500><c> the</c><00:07:07.010><c> filter</c>

00:07:07.510 --> 00:07:07.520 align:start position:0%
that's why for example when the filter
 

00:07:07.520 --> 00:07:09.760 align:start position:0%
that's why for example when the filter
was<00:07:07.760><c> 3</c><00:07:08.060><c> by</c><00:07:08.270><c> 3</c><00:07:08.570><c> as</c><00:07:08.930><c> in</c><00:07:09.170><c> the</c><00:07:09.290><c> example</c><00:07:09.650><c> on</c><00:07:09.680><c> the</c>

00:07:09.760 --> 00:07:09.770 align:start position:0%
was 3 by 3 as in the example on the
 

00:07:09.770 --> 00:07:12.100 align:start position:0%
was 3 by 3 as in the example on the
previous<00:07:09.800><c> slide</c><00:07:10.400><c> the</c><00:07:11.120><c> padding</c><00:07:11.660><c> that</c><00:07:11.930><c> would</c>

00:07:12.100 --> 00:07:12.110 align:start position:0%
previous slide the padding that would
 

00:07:12.110 --> 00:07:13.660 align:start position:0%
previous slide the padding that would
make<00:07:12.290><c> the</c><00:07:12.440><c> upper</c><00:07:12.800><c> size</c><00:07:13.010><c> the</c><00:07:13.220><c> same</c><00:07:13.400><c> as</c><00:07:13.580><c> the</c>

00:07:13.660 --> 00:07:13.670 align:start position:0%
make the upper size the same as the
 

00:07:13.670 --> 00:07:17.710 align:start position:0%
make the upper size the same as the
input<00:07:14.000><c> size</c><00:07:14.240><c> was</c><00:07:14.630><c> V</c><00:07:15.410><c> minus</c><00:07:15.950><c> 1</c><00:07:16.190><c> over</c><00:07:16.460><c> 2</c><00:07:16.880><c> which</c><00:07:17.180><c> is</c>

00:07:17.710 --> 00:07:17.720 align:start position:0%
input size was V minus 1 over 2 which is
 

00:07:17.720 --> 00:07:25.950 align:start position:0%
input size was V minus 1 over 2 which is
1<00:07:21.100><c> and</c><00:07:22.100><c> as</c><00:07:22.430><c> another</c><00:07:22.760><c> example</c><00:07:23.330><c> if</c><00:07:24.160><c> your</c><00:07:25.160><c> filter</c>

00:07:25.950 --> 00:07:25.960 align:start position:0%
1 and as another example if your filter
 

00:07:25.960 --> 00:07:30.640 align:start position:0%
1 and as another example if your filter
was<00:07:26.960><c> 5</c><00:07:27.440><c> by</c><00:07:27.650><c> 5</c><00:07:27.890><c> so</c><00:07:28.430><c> if</c><00:07:28.520><c> F</c><00:07:28.700><c> is</c><00:07:28.850><c> equal</c><00:07:29.090><c> to</c><00:07:29.150><c> 5</c><00:07:29.420><c> then</c><00:07:30.170><c> if</c>

00:07:30.640 --> 00:07:30.650 align:start position:0%
was 5 by 5 so if F is equal to 5 then if
 

00:07:30.650 --> 00:07:32.350 align:start position:0%
was 5 by 5 so if F is equal to 5 then if
you<00:07:30.740><c> plug</c><00:07:30.980><c> it</c><00:07:31.100><c> into</c><00:07:31.220><c> that</c><00:07:31.460><c> equation</c><00:07:31.670><c> you</c><00:07:31.940><c> find</c>

00:07:32.350 --> 00:07:32.360 align:start position:0%
you plug it into that equation you find
 

00:07:32.360 --> 00:07:35.440 align:start position:0%
you plug it into that equation you find
it<00:07:32.510><c> a</c><00:07:32.600><c> padding</c><00:07:33.020><c> of</c><00:07:33.170><c> 2</c><00:07:33.530><c> is</c><00:07:34.130><c> required</c><00:07:34.670><c> to</c><00:07:35.210><c> keep</c>

00:07:35.440 --> 00:07:35.450 align:start position:0%
it a padding of 2 is required to keep
 

00:07:35.450 --> 00:07:38.620 align:start position:0%
it a padding of 2 is required to keep
the<00:07:35.750><c> output</c><00:07:36.650><c> size</c><00:07:37.100><c> the</c><00:07:38.000><c> same</c><00:07:38.180><c> as</c><00:07:38.360><c> the</c><00:07:38.450><c> input</c>

00:07:38.620 --> 00:07:38.630 align:start position:0%
the output size the same as the input
 

00:07:38.630 --> 00:07:43.920 align:start position:0%
the output size the same as the input
size<00:07:38.990><c> when</c><00:07:39.320><c> when</c><00:07:39.620><c> the</c><00:07:39.710><c> filter</c><00:07:39.980><c> is</c><00:07:40.370><c> 5</c><00:07:40.820><c> by</c><00:07:40.970><c> 5</c><00:07:42.430><c> and</c>

00:07:43.920 --> 00:07:43.930 align:start position:0%
size when when the filter is 5 by 5 and
 

00:07:43.930 --> 00:07:48.810 align:start position:0%
size when when the filter is 5 by 5 and
by<00:07:44.930><c> convention</c><00:07:45.260><c> in</c><00:07:45.980><c> computer</c><00:07:46.580><c> vision</c><00:07:47.050><c> F</c><00:07:48.050><c> is</c>

00:07:48.810 --> 00:07:48.820 align:start position:0%
by convention in computer vision F is
 

00:07:48.820 --> 00:07:53.430 align:start position:0%
by convention in computer vision F is
usually<00:07:49.820><c> odd</c><00:07:50.060><c> is</c><00:07:50.330><c> that</c><00:07:50.360><c> he</c><00:07:50.570><c> almost</c><00:07:50.780><c> always</c><00:07:51.200><c> odd</c>

00:07:53.430 --> 00:07:53.440 align:start position:0%
usually odd is that he almost always odd
 

00:07:53.440 --> 00:07:58.710 align:start position:0%
usually odd is that he almost always odd
and<00:07:54.440><c> you</c><00:07:55.180><c> rarely</c><00:07:56.180><c> see</c><00:07:56.530><c> even</c><00:07:57.530><c> number</c><00:07:57.890><c> filters</c>

00:07:58.710 --> 00:07:58.720 align:start position:0%
and you rarely see even number filters
 

00:07:58.720 --> 00:08:03.490 align:start position:0%
and you rarely see even number filters
filter<00:07:59.720><c> webs</c><00:07:59.960><c> using</c><00:08:00.440><c> computer</c><00:08:00.830><c> vision</c><00:08:01.390><c> and</c><00:08:02.500><c> I</c>

00:08:03.490 --> 00:08:03.500 align:start position:0%
filter webs using computer vision and I
 

00:08:03.500 --> 00:08:04.780 align:start position:0%
filter webs using computer vision and I
think<00:08:03.530><c> the</c><00:08:03.800><c> two</c><00:08:04.010><c> reasons</c><00:08:04.280><c> for</c><00:08:04.580><c> that</c>

00:08:04.780 --> 00:08:04.790 align:start position:0%
think the two reasons for that
 

00:08:04.790 --> 00:08:07.990 align:start position:0%
think the two reasons for that
one<00:08:05.480><c> is</c><00:08:05.660><c> that</c><00:08:05.840><c> if</c><00:08:06.110><c> F</c><00:08:06.380><c> was</c><00:08:06.590><c> even</c><00:08:07.040><c> you</c><00:08:07.610><c> know</c><00:08:07.760><c> then</c>

00:08:07.990 --> 00:08:08.000 align:start position:0%
one is that if F was even you know then
 

00:08:08.000 --> 00:08:10.660 align:start position:0%
one is that if F was even you know then
you<00:08:08.150><c> need</c><00:08:08.330><c> some</c><00:08:08.570><c> a</c><00:08:08.780><c> summation</c><00:08:09.140><c> adding</c><00:08:09.800><c> it's</c>

00:08:10.660 --> 00:08:10.670 align:start position:0%
you need some a summation adding it's
 

00:08:10.670 --> 00:08:12.670 align:start position:0%
you need some a summation adding it's
only<00:08:10.880><c> if</c><00:08:11.060><c> F</c><00:08:11.270><c> isn't</c><00:08:11.660><c> that</c><00:08:11.900><c> this</c><00:08:12.020><c> type</c><00:08:12.290><c> of</c><00:08:12.320><c> same</c>

00:08:12.670 --> 00:08:12.680 align:start position:0%
only if F isn't that this type of same
 

00:08:12.680 --> 00:08:14.920 align:start position:0%
only if F isn't that this type of same
convolution<00:08:13.430><c> use</c><00:08:13.730><c> the</c><00:08:13.880><c> natural</c><00:08:14.150><c> padding</c><00:08:14.780><c> we</c>

00:08:14.920 --> 00:08:14.930 align:start position:0%
convolution use the natural padding we
 

00:08:14.930 --> 00:08:16.840 align:start position:0%
convolution use the natural padding we
can<00:08:15.140><c> add</c><00:08:15.410><c> the</c><00:08:15.590><c> same</c><00:08:15.800><c> dimension</c><00:08:16.310><c> all</c><00:08:16.520><c> around</c>

00:08:16.840 --> 00:08:16.850 align:start position:0%
can add the same dimension all around
 

00:08:16.850 --> 00:08:19.150 align:start position:0%
can add the same dimension all around
other<00:08:17.120><c> than</c><00:08:17.360><c> you</c><00:08:17.960><c> know</c><00:08:18.110><c> had</c><00:08:18.470><c> more</c><00:08:18.740><c> on</c><00:08:18.800><c> the</c><00:08:18.920><c> left</c>

00:08:19.150 --> 00:08:19.160 align:start position:0%
other than you know had more on the left
 

00:08:19.160 --> 00:08:20.680 align:start position:0%
other than you know had more on the left
and<00:08:19.400><c> pad</c><00:08:19.610><c> less</c><00:08:19.820><c> on</c><00:08:19.970><c> the</c><00:08:20.060><c> right</c><00:08:20.270><c> or</c><00:08:20.450><c> something</c>

00:08:20.680 --> 00:08:20.690 align:start position:0%
and pad less on the right or something
 

00:08:20.690 --> 00:08:25.600 align:start position:0%
and pad less on the right or something
asymmetric<00:08:21.350><c> and</c><00:08:21.590><c> then</c><00:08:22.310><c> second</c><00:08:24.280><c> when</c><00:08:25.280><c> you</c><00:08:25.400><c> have</c>

00:08:25.600 --> 00:08:25.610 align:start position:0%
asymmetric and then second when you have
 

00:08:25.610 --> 00:08:28.780 align:start position:0%
asymmetric and then second when you have
an<00:08:25.790><c> odd</c><00:08:25.970><c> dimension</c><00:08:26.600><c> filter</c><00:08:27.160><c> such</c><00:08:28.160><c> as</c><00:08:28.310><c> 3</c><00:08:28.460><c> by</c><00:08:28.610><c> 3</c>

00:08:28.780 --> 00:08:28.790 align:start position:0%
an odd dimension filter such as 3 by 3
 

00:08:28.790 --> 00:08:31.600 align:start position:0%
an odd dimension filter such as 3 by 3
or<00:08:28.940><c> 5</c><00:08:29.090><c> by</c><00:08:29.240><c> 5</c><00:08:29.450><c> then</c><00:08:30.080><c> it</c><00:08:30.290><c> has</c><00:08:30.470><c> a</c><00:08:30.500><c> central</c><00:08:31.340><c> position</c>

00:08:31.600 --> 00:08:31.610 align:start position:0%
or 5 by 5 then it has a central position
 

00:08:31.610 --> 00:08:33.760 align:start position:0%
or 5 by 5 then it has a central position
and<00:08:32.180><c> sometimes</c><00:08:32.419><c> in</c><00:08:32.780><c> computer</c><00:08:33.110><c> vision</c><00:08:33.410><c> is</c><00:08:33.560><c> nice</c>

00:08:33.760 --> 00:08:33.770 align:start position:0%
and sometimes in computer vision is nice
 

00:08:33.770 --> 00:08:35.150 align:start position:0%
and sometimes in computer vision is nice
to<00:08:33.979><c> have</c><00:08:34.130><c> a</c>

00:08:35.150 --> 00:08:35.160 align:start position:0%
to have a
 

00:08:35.160 --> 00:08:37.460 align:start position:0%
to have a
distinguished<00:08:35.789><c> it's</c><00:08:36.690><c> nice</c><00:08:36.900><c> to</c><00:08:37.080><c> have</c><00:08:37.200><c> a</c><00:08:37.260><c> pixel</c>

00:08:37.460 --> 00:08:37.470 align:start position:0%
distinguished it's nice to have a pixel
 

00:08:37.470 --> 00:08:39.710 align:start position:0%
distinguished it's nice to have a pixel
you<00:08:37.800><c> can</c><00:08:37.919><c> call</c><00:08:38.130><c> the</c><00:08:38.250><c> central</c><00:08:38.729><c> pixel</c><00:08:38.910><c> so</c><00:08:39.630><c> you</c>

00:08:39.710 --> 00:08:39.720 align:start position:0%
you can call the central pixel so you
 

00:08:39.720 --> 00:08:41.659 align:start position:0%
you can call the central pixel so you
can<00:08:39.840><c> talk</c><00:08:40.020><c> about</c><00:08:40.349><c> you</c><00:08:40.800><c> know</c><00:08:40.890><c> the</c><00:08:41.039><c> position</c><00:08:41.220><c> of</c>

00:08:41.659 --> 00:08:41.669 align:start position:0%
can talk about you know the position of
 

00:08:41.669 --> 00:08:44.540 align:start position:0%
can talk about you know the position of
the<00:08:41.760><c> filter</c><00:08:42.830><c> maybe</c><00:08:43.830><c> none</c><00:08:44.070><c> of</c><00:08:44.099><c> these</c><00:08:44.310><c> is</c><00:08:44.520><c> a</c>

00:08:44.540 --> 00:08:44.550 align:start position:0%
the filter maybe none of these is a
 

00:08:44.550 --> 00:08:47.330 align:start position:0%
the filter maybe none of these is a
great<00:08:44.790><c> reason</c><00:08:44.940><c> for</c><00:08:45.150><c> using</c><00:08:45.480><c> f</c><00:08:46.080><c> to</c><00:08:46.560><c> be</c><00:08:46.680><c> pretty</c>

00:08:47.330 --> 00:08:47.340 align:start position:0%
great reason for using f to be pretty
 

00:08:47.340 --> 00:08:49.220 align:start position:0%
great reason for using f to be pretty
much<00:08:47.370><c> always</c><00:08:47.730><c> odds</c><00:08:48.210><c> that</c><00:08:48.630><c> you</c><00:08:48.990><c> look</c><00:08:49.110><c> the</c>

00:08:49.220 --> 00:08:49.230 align:start position:0%
much always odds that you look the
 

00:08:49.230 --> 00:08:51.920 align:start position:0%
much always odds that you look the
communication<00:08:49.770><c> literature</c><00:08:50.130><c> you</c><00:08:50.400><c> see</c><00:08:50.930><c> 3x3</c>

00:08:51.920 --> 00:08:51.930 align:start position:0%
communication literature you see 3x3
 

00:08:51.930 --> 00:08:54.650 align:start position:0%
communication literature you see 3x3
filters<00:08:52.380><c> are</c><00:08:52.530><c> very</c><00:08:52.740><c> common</c><00:08:53.250><c> you</c><00:08:53.760><c> see</c><00:08:53.970><c> some</c><00:08:54.180><c> 5x5</c>

00:08:54.650 --> 00:08:54.660 align:start position:0%
filters are very common you see some 5x5
 

00:08:54.660 --> 00:08:57.320 align:start position:0%
filters are very common you see some 5x5
seven<00:08:55.200><c> by</c><00:08:55.320><c> sevens</c><00:08:55.770><c> you</c><00:08:56.460><c> know</c><00:08:56.610><c> and</c><00:08:56.820><c> actually</c>

00:08:57.320 --> 00:08:57.330 align:start position:0%
seven by sevens you know and actually
 

00:08:57.330 --> 00:08:59.120 align:start position:0%
seven by sevens you know and actually
sometimes<00:08:57.570><c> well</c><00:08:57.930><c> later</c><00:08:58.260><c> we'll</c><00:08:58.620><c> also</c><00:08:58.800><c> talk</c>

00:08:59.120 --> 00:08:59.130 align:start position:0%
sometimes well later we'll also talk
 

00:08:59.130 --> 00:09:00.890 align:start position:0%
sometimes well later we'll also talk
about<00:08:59.190><c> one-by-one</c><00:09:00.000><c> filters</c><00:09:00.450><c> and</c><00:09:00.630><c> when</c><00:09:00.750><c> that</c>

00:09:00.890 --> 00:09:00.900 align:start position:0%
about one-by-one filters and when that
 

00:09:00.900 --> 00:09:04.280 align:start position:0%
about one-by-one filters and when that
makes<00:09:01.110><c> sense</c><00:09:01.370><c> but</c><00:09:02.370><c> just</c><00:09:02.580><c> by</c><00:09:02.940><c> convention</c><00:09:03.330><c> I</c>

00:09:04.280 --> 00:09:04.290 align:start position:0%
makes sense but just by convention I
 

00:09:04.290 --> 00:09:06.770 align:start position:0%
makes sense but just by convention I
recommend<00:09:05.190><c> you</c><00:09:05.430><c> just</c><00:09:05.670><c> use</c><00:09:05.940><c> odd</c><00:09:06.180><c> numbered</c>

00:09:06.770 --> 00:09:06.780 align:start position:0%
recommend you just use odd numbered
 

00:09:06.780 --> 00:09:09.590 align:start position:0%
recommend you just use odd numbered
filters<00:09:07.170><c> as</c><00:09:07.320><c> well</c><00:09:07.350><c> I</c><00:09:07.800><c> think</c><00:09:08.610><c> that</c><00:09:09.120><c> you</c><00:09:09.390><c> can</c>

00:09:09.590 --> 00:09:09.600 align:start position:0%
filters as well I think that you can
 

00:09:09.600 --> 00:09:11.840 align:start position:0%
filters as well I think that you can
probably<00:09:09.870><c> get</c><00:09:10.260><c> just</c><00:09:10.650><c> fine</c><00:09:10.920><c> performance</c><00:09:11.550><c> even</c>

00:09:11.840 --> 00:09:11.850 align:start position:0%
probably get just fine performance even
 

00:09:11.850 --> 00:09:13.820 align:start position:0%
probably get just fine performance even
if<00:09:11.940><c> you</c><00:09:12.030><c> were</c><00:09:12.180><c> to</c><00:09:12.240><c> use</c><00:09:12.480><c> an</c><00:09:12.630><c> even</c><00:09:12.840><c> number</c><00:09:13.350><c> value</c>

00:09:13.820 --> 00:09:13.830 align:start position:0%
if you were to use an even number value
 

00:09:13.830 --> 00:09:16.100 align:start position:0%
if you were to use an even number value
for<00:09:14.040><c> F</c><00:09:14.190><c> but</c><00:09:14.550><c> if</c><00:09:14.970><c> you</c><00:09:15.210><c> stick</c><00:09:15.450><c> to</c><00:09:15.480><c> the</c><00:09:15.690><c> common</c>

00:09:16.100 --> 00:09:16.110 align:start position:0%
for F but if you stick to the common
 

00:09:16.110 --> 00:09:18.620 align:start position:0%
for F but if you stick to the common
computer<00:09:16.740><c> vision</c><00:09:17.010><c> convention</c><00:09:17.610><c> you</c><00:09:18.360><c> know</c><00:09:18.390><c> I</c>

00:09:18.620 --> 00:09:18.630 align:start position:0%
computer vision convention you know I
 

00:09:18.630 --> 00:09:22.940 align:start position:0%
computer vision convention you know I
usually<00:09:19.080><c> just</c><00:09:19.500><c> use</c><00:09:19.680><c> odd-numbered</c><00:09:20.550><c> F</c><00:09:21.950><c> so</c>

00:09:22.940 --> 00:09:22.950 align:start position:0%
usually just use odd-numbered F so
 

00:09:22.950 --> 00:09:24.770 align:start position:0%
usually just use odd-numbered F so
you've<00:09:23.250><c> now</c><00:09:23.430><c> seen</c><00:09:23.670><c> how</c><00:09:23.730><c> to</c><00:09:23.970><c> use</c><00:09:24.060><c> pattern</c>

00:09:24.770 --> 00:09:24.780 align:start position:0%
you've now seen how to use pattern
 

00:09:24.780 --> 00:09:27.470 align:start position:0%
you've now seen how to use pattern
convolutions<00:09:25.530><c> to</c><00:09:26.130><c> specify</c><00:09:26.550><c> the</c><00:09:26.610><c> padding</c><00:09:27.240><c> for</c>

00:09:27.470 --> 00:09:27.480 align:start position:0%
convolutions to specify the padding for
 

00:09:27.480 --> 00:09:29.510 align:start position:0%
convolutions to specify the padding for
a<00:09:27.540><c> convolutional</c><00:09:28.080><c> operation</c><00:09:28.560><c> you</c><00:09:29.010><c> can</c><00:09:29.220><c> either</c>

00:09:29.510 --> 00:09:29.520 align:start position:0%
a convolutional operation you can either
 

00:09:29.520 --> 00:09:32.690 align:start position:0%
a convolutional operation you can either
specify<00:09:29.940><c> the</c><00:09:30.630><c> value</c><00:09:31.020><c> for</c><00:09:31.200><c> P</c><00:09:31.470><c> or</c><00:09:31.740><c> you</c><00:09:32.340><c> can</c><00:09:32.520><c> just</c>

00:09:32.690 --> 00:09:32.700 align:start position:0%
specify the value for P or you can just
 

00:09:32.700 --> 00:09:34.760 align:start position:0%
specify the value for P or you can just
say<00:09:32.880><c> that</c><00:09:33.120><c> this</c><00:09:33.330><c> is</c><00:09:33.510><c> a</c><00:09:33.540><c> valid</c><00:09:34.050><c> convolution</c>

00:09:34.760 --> 00:09:34.770 align:start position:0%
say that this is a valid convolution
 

00:09:34.770 --> 00:09:37.130 align:start position:0%
say that this is a valid convolution
which<00:09:35.010><c> means</c><00:09:35.280><c> P</c><00:09:35.790><c> equals</c><00:09:36.030><c> zero</c><00:09:36.300><c> or</c><00:09:36.600><c> you</c><00:09:36.660><c> can</c><00:09:36.990><c> say</c>

00:09:37.130 --> 00:09:37.140 align:start position:0%
which means P equals zero or you can say
 

00:09:37.140 --> 00:09:38.990 align:start position:0%
which means P equals zero or you can say
this<00:09:37.320><c> is</c><00:09:37.500><c> a</c><00:09:37.620><c> same</c><00:09:37.890><c> convolution</c><00:09:38.520><c> which</c><00:09:38.760><c> means</c>

00:09:38.990 --> 00:09:39.000 align:start position:0%
this is a same convolution which means
 

00:09:39.000 --> 00:09:40.700 align:start position:0%
this is a same convolution which means
add<00:09:39.540><c> as</c><00:09:39.720><c> much</c><00:09:39.870><c> as</c><00:09:40.020><c> you</c><00:09:40.080><c> need</c><00:09:40.320><c> to</c><00:09:40.350><c> make</c><00:09:40.680><c> sure</c>

00:09:40.700 --> 00:09:40.710 align:start position:0%
add as much as you need to make sure
 

00:09:40.710 --> 00:09:42.380 align:start position:0%
add as much as you need to make sure
that<00:09:40.830><c> the</c><00:09:41.070><c> output</c><00:09:41.250><c> has</c><00:09:41.550><c> the</c><00:09:41.730><c> same</c><00:09:41.880><c> dimension</c>

00:09:42.380 --> 00:09:42.390 align:start position:0%
that the output has the same dimension
 

00:09:42.390 --> 00:09:45.200 align:start position:0%
that the output has the same dimension
as<00:09:42.510><c> the</c><00:09:42.840><c> input</c><00:09:43.380><c> so</c><00:09:44.070><c> that's</c><00:09:44.280><c> it</c><00:09:44.430><c> for</c><00:09:44.520><c> padding</c><00:09:45.000><c> in</c>

00:09:45.200 --> 00:09:45.210 align:start position:0%
as the input so that's it for padding in
 

00:09:45.210 --> 00:09:46.880 align:start position:0%
as the input so that's it for padding in
the<00:09:45.390><c> next</c><00:09:45.630><c> video</c><00:09:45.870><c> let's</c><00:09:46.140><c> talk</c><00:09:46.290><c> about</c><00:09:46.350><c> how</c><00:09:46.590><c> you</c>

00:09:46.880 --> 00:09:46.890 align:start position:0%
the next video let's talk about how you
 

00:09:46.890 --> 00:09:51.050 align:start position:0%
the next video let's talk about how you
can<00:09:47.100><c> implement</c><00:09:47.330><c> strided</c><00:09:48.330><c> convolutions</c>

