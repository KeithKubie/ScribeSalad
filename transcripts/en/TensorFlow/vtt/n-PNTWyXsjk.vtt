WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.346
[MUSIC PLAYING]

00:00:08.837 --> 00:00:09.920
SPEAKER 1: Hey, everybody.

00:00:09.920 --> 00:00:14.200
Welcome to the ML &amp; AI
sandbox here at I/O 2019.

00:00:14.200 --> 00:00:16.390
So in the keynote, we
saw some amazing stuff

00:00:16.390 --> 00:00:18.820
that you can accomplish
with on-device ML.

00:00:18.820 --> 00:00:20.620
And I'm here with
TensorFlow Lite,

00:00:20.620 --> 00:00:22.900
showing developers how they
can build that same stuff

00:00:22.900 --> 00:00:23.780
themselves.

00:00:23.780 --> 00:00:25.990
So you've got everything
from object detection

00:00:25.990 --> 00:00:28.748
to image classification
and voice recognition.

00:00:28.748 --> 00:00:30.790
And we're showing people
how they can deploy that

00:00:30.790 --> 00:00:33.010
down to devices
that are really tiny

00:00:33.010 --> 00:00:36.010
and run for weeks
on a single battery.

00:00:36.010 --> 00:00:39.190
So to really show you what's
possible with TensorFlow Lite

00:00:39.190 --> 00:00:43.107
on-device, we built this amazing
experience called Dance Like.

00:00:43.107 --> 00:00:43.690
SPEAKER 2: OK.

00:00:43.690 --> 00:00:44.770
Behind me is Dance Like.

00:00:44.770 --> 00:00:47.890
It's super fun application
using TensorFlow Lite, which

00:00:47.890 --> 00:00:50.822
is TensorFlow's mobile and
embedded systems framework

00:00:50.822 --> 00:00:52.030
for running machine learning.

00:00:52.030 --> 00:00:53.960
It basically teaches
people how to dance.

00:00:53.960 --> 00:00:58.420
And so it does this by running
pose segmentation on the GPU.

00:00:58.420 --> 00:01:00.940
We have a bunch
of GPU-related ops

00:01:00.940 --> 00:01:02.740
that we just released
for TensorFlow Lite,

00:01:02.740 --> 00:01:04.239
so you should check those out.

00:01:04.239 --> 00:01:06.190
It enables you to run
super fast models.

00:01:06.190 --> 00:01:09.010
We're running two in real
time and giving the user

00:01:09.010 --> 00:01:12.110
a heap of feedback, which
helps them dance better.

00:01:12.110 --> 00:01:14.290
So to go and build really
interesting applications

00:01:14.290 --> 00:01:16.780
on mobile phones,
embedded systems,

00:01:16.780 --> 00:01:19.940
and executing this
all on-device,

00:01:19.940 --> 00:01:22.360
you can go to
TensorFlow.org/Lite.

00:01:22.360 --> 00:01:23.950
There's heaps of sample code.

00:01:23.950 --> 00:01:26.620
There's lots of
documentation and tutorials.

00:01:26.620 --> 00:01:29.470
And you can go and build an
amazing application like Dance

00:01:29.470 --> 00:01:32.980
Like and release
it to the world.

00:01:32.980 --> 00:01:35.920
SPEAKER 3: What we're looking at
here is a model called PoseNet.

00:01:35.920 --> 00:01:37.600
PoseNet is a model
that's trained

00:01:37.600 --> 00:01:39.970
on images of human
beings, and is trained

00:01:39.970 --> 00:01:42.550
to predict their skeletal pose.

00:01:42.550 --> 00:01:45.040
This model here is
actually running entirely

00:01:45.040 --> 00:01:49.150
in the browser with a
library called TensorFlow.js.

00:01:49.150 --> 00:01:52.840
TensorFlow.js is a machine
learning library for JavaScript

00:01:52.840 --> 00:01:54.860
that can run entirely
in the browser

00:01:54.860 --> 00:01:57.110
and use your GPU through WebGL.

00:01:57.110 --> 00:02:00.880
Now, TensorFlow.js also runs
in Node.js using the entire

00:02:00.880 --> 00:02:04.180
TensorFlow C++ binary and all
of its hardware acceleration

00:02:04.180 --> 00:02:05.710
storage behind it.

00:02:05.710 --> 00:02:09.669
Piano Genie is a model that
runs in TensorFlow.js, entirely

00:02:09.669 --> 00:02:12.310
in the browser as well,
that generates MIDI notes

00:02:12.310 --> 00:02:13.902
as part of a piano performance.

00:02:13.902 --> 00:02:15.610
Now, this model is
interesting because it

00:02:15.610 --> 00:02:17.590
brings a human in
the loop and lets

00:02:17.590 --> 00:02:20.410
the human condition where the
model is actually going to go.

00:02:23.420 --> 00:02:27.120
TensorFlow.js is open source
and is available online

00:02:27.120 --> 00:02:31.210
on TensorFlow.org/js, as
are multiple more examples

00:02:31.210 --> 00:02:32.837
and demos of how to use it.

00:02:32.837 --> 00:02:35.170
Head over there today to start
building machine learning

00:02:35.170 --> 00:02:36.990
for the browser.

