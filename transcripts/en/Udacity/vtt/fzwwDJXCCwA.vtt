WEBVTT
Kind: captions
Language: en

00:00:00.320 --> 00:00:03.100
There's two more things you need
to know about before you start

00:00:03.100 --> 00:00:04.790
optimizing portfolios.

00:00:04.790 --> 00:00:08.760
One of them will help your
optimization run faster.

00:00:08.760 --> 00:00:12.790
And the other is essential for
you to get the right answer.

00:00:12.790 --> 00:00:15.820
We'll start with the faster thing first.

00:00:15.820 --> 00:00:19.320
The first thing you can do is
you can tell the optimizer

00:00:19.320 --> 00:00:22.090
that it should only look
at certain ranges for X.

00:00:22.090 --> 00:00:28.310
In other words, for this problem,
for each of the various allocations,

00:00:28.310 --> 00:00:31.790
it's only worth looking at
values between 0 and 1.

00:00:31.790 --> 00:00:35.820
In other words, the value of
2 would indicate 200% of your

00:00:35.820 --> 00:00:39.050
fund is in a particular asset and
that's not possible.

00:00:39.050 --> 00:00:44.304
It's only feasible to have 0% to 100% or

00:00:44.304 --> 00:00:48.450
0 to 1 in each of these assets.

00:00:48.450 --> 00:00:53.890
So, you can tell the optimizer
only focus on values between 0 and

00:00:53.890 --> 00:00:57.270
1 for each of the dimensions of X.

00:00:57.270 --> 00:01:01.220
And if you do that,
the optimizer can run much more

00:01:01.220 --> 00:01:06.240
quickly because it knows not to look at
other values of X outside those bounds.

00:01:06.240 --> 00:01:09.070
It limits the search area significantly.

00:01:09.070 --> 00:01:13.747
Another thing you can do with
the optimizers in numbpie are provide

00:01:13.747 --> 00:01:15.470
constraints.

00:01:15.470 --> 00:01:20.400
Constraints are properties of
the values of X that must be true.

00:01:20.400 --> 00:01:26.170
As an example we want the sum of
our allocations to add up to one.

00:01:26.170 --> 00:01:30.508
So let's say for example we're for
portfolio of four holdings.

00:01:30.508 --> 00:01:33.758
So we have X0, X1, X2, X3.

00:01:33.758 --> 00:01:39.026
We want the sum of the absolute
values of those to be equal to 1.0.

00:01:39.026 --> 00:01:43.370
In other words, our total
allocation should add up to 100%.

00:01:43.370 --> 00:01:49.050
The optimizers we use in this class have
the ability for you to express that and

00:01:49.050 --> 00:01:52.730
that guarantees that at the end
when it finds out the values for X,

00:01:52.730 --> 00:01:58.340
you end up with a total of 100%
allocated to the various assets.

00:01:58.340 --> 00:02:02.310
Now we're going to show you how to do
these two things in the assignment text

00:02:02.310 --> 00:02:07.140
itself, because the syntax
is a little bit tricky and

00:02:07.140 --> 00:02:09.310
we want to convey to you
exactly how to do that.

00:02:09.310 --> 00:02:14.430
So we look forward to seeing
you solve this problem and

00:02:14.430 --> 00:02:15.890
good luck on your final project.

