WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:01:01.030
[MUSIC PLAYING]

00:01:01.030 --> 00:01:02.160
KALYAN REDDY: My name
is Kalyan Reddy.

00:01:02.160 --> 00:01:04.160
ERIC KOLEDA: And we're here
again with another episode of

00:01:04.160 --> 00:01:06.200
Google Apps Unscripted.

00:01:06.200 --> 00:01:10.460
This is our once a month show
where we talk about Google

00:01:10.460 --> 00:01:12.990
Apps Script in kind of
a free form way.

00:01:12.990 --> 00:01:16.620
So we do a little bit of news,
events, some updates, and then

00:01:16.620 --> 00:01:19.500
basically are here to answer
your questions.

00:01:19.500 --> 00:01:21.440
If you have questions about
Google Apps Script, there's a

00:01:21.440 --> 00:01:23.250
couple ways you can get in touch
with us and join into

00:01:23.250 --> 00:01:24.500
the show today.

00:01:24.500 --> 00:01:26.490
The first is we have a
live Hangout going.

00:01:26.490 --> 00:01:29.910
There's a link in the page for
this event, the + page as well

00:01:29.910 --> 00:01:31.130
as a page on
developers.google.com.

00:01:31.130 --> 00:01:33.100
So you can join the Hangout.

00:01:33.100 --> 00:01:35.990
If you have a camera and mic,
ask us a question live.

00:01:35.990 --> 00:01:37.800
If you don't have that equipment
or you're a little

00:01:37.800 --> 00:01:41.010
shy, you can, of course, click
on the link to the Google

00:01:41.010 --> 00:01:43.600
Moderator, which is a place
where you can post questions.

00:01:43.600 --> 00:01:47.270
And we'll be getting to those
later in the show.

00:01:47.270 --> 00:01:47.680
So, yeah.

00:01:47.680 --> 00:01:48.620
Let's kick things off.

00:01:48.620 --> 00:01:51.260
We have-- it's been a couple
weeks since we had our last

00:01:51.260 --> 00:01:55.260
episode and there's been
some news since then.

00:01:55.260 --> 00:01:58.260
So one of the big things that
we've done in Apps Script in

00:01:58.260 --> 00:02:00.030
the past couple weeks is launch

00:02:00.030 --> 00:02:01.740
Data Validation support.

00:02:01.740 --> 00:02:03.910
So, Kalyan, what is
data validation?

00:02:03.910 --> 00:02:06.670
KALYAN REDDY: So, Data
Validation is actually one of

00:02:06.670 --> 00:02:09.070
our top feature requests.

00:02:09.070 --> 00:02:10.190
It's been there for a while.

00:02:10.190 --> 00:02:13.130
Here, I'll go to our
blog post here.

00:02:13.130 --> 00:02:15.990
Data Validation is actually a
Spreadsheets feature where you

00:02:15.990 --> 00:02:19.120
can apply validation rules
to certain cells.

00:02:19.120 --> 00:02:21.260
And say that when someone enters
a value, you either

00:02:21.260 --> 00:02:24.880
flag it with a little red
triangle at the end, saying

00:02:24.880 --> 00:02:28.120
this is not in a particular
range, or it's not in the list

00:02:28.120 --> 00:02:29.760
of values that you want.

00:02:29.760 --> 00:02:33.530
Or you could just not allow
certain values that aren't

00:02:33.530 --> 00:02:34.490
what you expect.

00:02:34.490 --> 00:02:34.600
ERIC KOLEDA: Yeah.

00:02:34.600 --> 00:02:36.660
I feel like it's really handy
when you have a spreadsheet

00:02:36.660 --> 00:02:40.180
that many people are editing,
and you want to make sure that

00:02:40.180 --> 00:02:42.390
the content that they're putting
into the spreadsheet

00:02:42.390 --> 00:02:44.940
is valid, it's not like a bad
value, or something that's

00:02:44.940 --> 00:02:45.610
going to mess up.

00:02:45.610 --> 00:02:48.140
You want to limit their choices
down to either a

00:02:48.140 --> 00:02:50.865
number in a certain range
or something on a list.

00:02:50.865 --> 00:02:51.770
Right.

00:02:51.770 --> 00:02:53.980
KALYAN REDDY: Or, for example,
if you're just collecting what

00:02:53.980 --> 00:02:56.806
cities to go on a road trip, you
can put the cities in the

00:02:56.806 --> 00:02:58.230
US on the list or something.

00:02:58.230 --> 00:03:00.858
ERIC KOLEDA: Yeah, limit the
data to the valid data instead

00:03:00.858 --> 00:03:02.070
of everything.

00:03:02.070 --> 00:03:07.070
And so Apps Script is really
being used, I think primarily

00:03:07.070 --> 00:03:10.210
historically, and still probably
the most today, in

00:03:10.210 --> 00:03:11.580
Google Spreadsheets.

00:03:11.580 --> 00:03:14.590
It's a really great tool for
adding extra functionality to

00:03:14.590 --> 00:03:16.550
a Google spreadsheet.

00:03:16.550 --> 00:03:19.870
And so, although we've had the
ability to change values, set

00:03:19.870 --> 00:03:23.640
background colors, it wasn't
until this past month that we

00:03:23.640 --> 00:03:26.740
added the ability to
programmatically create, edit,

00:03:26.740 --> 00:03:30.140
remove this kind of data
validation logic in a

00:03:30.140 --> 00:03:32.394
spreadsheet.

00:03:32.394 --> 00:03:33.910
KALYAN REDDY: Yeah, why don't
we take a look at the blog

00:03:33.910 --> 00:03:35.590
post and then maybe we
could run through the

00:03:35.590 --> 00:03:37.230
quick example in there.

00:03:37.230 --> 00:03:40.340
If you want to check this out
yourself it's in our developer

00:03:40.340 --> 00:03:41.590
blog, googleappsdevelo
per.blogspot.com.

00:03:43.722 --> 00:03:44.658
Here it is.

00:03:44.658 --> 00:03:46.170
Let's see.

00:03:46.170 --> 00:03:47.940
You want to run through this
example here, Eric?

00:03:47.940 --> 00:03:48.370
ERIC KOLEDA: Yeah.

00:03:48.370 --> 00:03:49.380
So we can kind of show
you a little bit

00:03:49.380 --> 00:03:49.860
about what we're doing.

00:03:49.860 --> 00:03:51.110
So we have two short
examples here.

00:03:51.110 --> 00:03:54.710
One is showing you how you can
just very quickly add data

00:03:54.710 --> 00:03:57.260
validation to a cell that didn't
have it before, or

00:03:57.260 --> 00:03:59.380
rather, to overwrite the data
validation regardless of

00:03:59.380 --> 00:04:00.530
what's there.

00:04:00.530 --> 00:04:02.660
So this one is very simple where
it's doing one of the

00:04:02.660 --> 00:04:05.690
most popular forms of data
validation, limit the options

00:04:05.690 --> 00:04:08.870
in the cell to only the
values in this range.

00:04:08.870 --> 00:04:11.510
So we're taking the range B1:B10
that has our values we

00:04:11.510 --> 00:04:12.560
want to use.

00:04:12.560 --> 00:04:14.760
And then we're grabbing the
range A1, which is where we

00:04:14.760 --> 00:04:16.709
want to apply this new
data validation.

00:04:16.709 --> 00:04:18.410
And then we have a small builder
pattern that you can

00:04:18.410 --> 00:04:21.149
see there that allows you to
create these data validations.

00:04:21.149 --> 00:04:24.020
So you say SpreadsheetApp,
newDataValidation.

00:04:24.020 --> 00:04:26.100
And then this data validation
should require a

00:04:26.100 --> 00:04:27.860
value in the range.

00:04:27.860 --> 00:04:30.200
And then there's the range
there, B1 to B10.

00:04:30.200 --> 00:04:31.280
And then dot build.

00:04:31.280 --> 00:04:33.820
And then now we have a new
data validation object.

00:04:33.820 --> 00:04:36.410
KALYAN REDDY: And so just a
background on the builder

00:04:36.410 --> 00:04:37.190
pattern real quick.

00:04:37.190 --> 00:04:40.600
Every method that you call
here, it returns the data

00:04:40.600 --> 00:04:43.290
validation object so you can
chain these successive calls

00:04:43.290 --> 00:04:45.340
and say, require values
in this range, do it

00:04:45.340 --> 00:04:46.240
for this, et cetera.

00:04:46.240 --> 00:04:47.490
ERIC KOLEDA: Yeah, if you're
new to Apps Script, this

00:04:47.490 --> 00:04:49.660
chaining looks a little
strange sometimes, but

00:04:49.660 --> 00:04:53.410
essentially, every method you
apply returns the original

00:04:53.410 --> 00:04:55.110
object back to you again.

00:04:55.110 --> 00:04:57.560
And there that allows you to
keep, well, I guess the

00:04:57.560 --> 00:04:59.380
modified object back to you
again so you can keep

00:04:59.380 --> 00:05:00.150
operating on it.

00:05:00.150 --> 00:05:01.700
KALYAN REDDY: And when you
call build at the end, it

00:05:01.700 --> 00:05:05.360
changes from the builder object
to the actual final

00:05:05.360 --> 00:05:07.650
built object that you can pass
to your other functions.

00:05:07.650 --> 00:05:09.420
ERIC KOLEDA: So then you take
that built data validation and

00:05:09.420 --> 00:05:12.250
just call set data validation,
passing it in.

00:05:12.250 --> 00:05:14.810
And now that cell will have the
data validation applied.

00:05:14.810 --> 00:05:17.010
Now, you know, that's great to
add one time data validations,

00:05:17.010 --> 00:05:19.160
but really the power of
scripting is to do something

00:05:19.160 --> 00:05:21.860
complex that you wouldn't want
to do yourself by hand, right?

00:05:21.860 --> 00:05:24.410
By hand I could easily add
that data validation.

00:05:24.410 --> 00:05:26.780
And so this second example here,
it shows you something

00:05:26.780 --> 00:05:28.730
where really having
the ability to

00:05:28.730 --> 00:05:30.330
script comes in handy.

00:05:30.330 --> 00:05:32.700
So the situation here is,
let's say you had a

00:05:32.700 --> 00:05:35.020
spreadsheet where all your data
validations were based

00:05:35.020 --> 00:05:38.020
upon I want to limit the person
to only taking a date

00:05:38.020 --> 00:05:39.773
in this current calendar year.

00:05:39.773 --> 00:05:40.620
All right.

00:05:40.620 --> 00:05:44.280
So you have all these cells with
the data validation on

00:05:44.280 --> 00:05:46.990
these cells is set to only
a date within 2013.

00:05:46.990 --> 00:05:49.770
Well now suddenly year's
over, 2014 is here.

00:05:49.770 --> 00:05:51.400
I want to make a copy
of that spreadsheet.

00:05:51.400 --> 00:05:53.710
I want to keep, you know, I want
to allow people to now

00:05:53.710 --> 00:05:55.680
focus of the year of 2014.

00:05:55.680 --> 00:05:58.360
Well, to go through and find all
the 2013's and swap them

00:05:58.360 --> 00:06:00.330
with 2014's could
be a nightmare.

00:06:00.330 --> 00:06:03.930
So what we're doing here is
automatically crawling over

00:06:03.930 --> 00:06:08.420
all the sheets, all the ranges
within the current sheet-- but

00:06:08.420 --> 00:06:09.820
you could easily extend this
to be all sheets within a

00:06:09.820 --> 00:06:10.610
spreadsheet--

00:06:10.610 --> 00:06:12.930
finding all of the ranges that
have data validation.

00:06:12.930 --> 00:06:16.140
And if they were previously set
up to be with this kind of

00:06:16.140 --> 00:06:20.180
data validation between January
1, 2013 and December

00:06:20.180 --> 00:06:23.050
31, 2013, to swap it
out, to be that

00:06:23.050 --> 00:06:25.060
equivalent data in 2014.

00:06:25.060 --> 00:06:27.490
KALYAN REDDY: And it's kind of
a more involved example, but

00:06:27.490 --> 00:06:31.020
basically this is how you get
all the data validation rules

00:06:31.020 --> 00:06:32.450
within the particular range.

00:06:32.450 --> 00:06:35.950
And you get the range up here
when you get the active sheet.

00:06:35.950 --> 00:06:39.250
And you get the range
for all of it.

00:06:39.250 --> 00:06:39.710
ERIC KOLEDA: Yeah.

00:06:39.710 --> 00:06:41.330
So, yeah.

00:06:41.330 --> 00:06:44.590
It's really nice that we kind
of treat data validation

00:06:44.590 --> 00:06:46.850
objects the same way we treated
values or background

00:06:46.850 --> 00:06:50.810
colors, where you can take an
entire range, gather up all

00:06:50.810 --> 00:06:53.630
the data validation settings
for that entire range, make

00:06:53.630 --> 00:06:56.170
modifications, and then save
it all back again.

00:06:56.170 --> 00:06:58.240
So that's what you can see at
the very bottom here is that

00:06:58.240 --> 00:07:01.580
we built up this array of our
new data validations.

00:07:01.580 --> 00:07:04.260
And then at the end, one call,
set data validations, takes

00:07:04.260 --> 00:07:07.320
all of the settings we built
up and saves them into the

00:07:07.320 --> 00:07:08.640
spreadsheet in one go.

00:07:08.640 --> 00:07:11.640
Doing it like this instead of
saving cell by cell by cell,

00:07:11.640 --> 00:07:12.620
much faster.

00:07:12.620 --> 00:07:13.440
KALYAN REDDY: Definitely.

00:07:13.440 --> 00:07:14.490
ERIC KOLEDA: Yeah.

00:07:14.490 --> 00:07:16.120
KALYAN REDDY: And this is like
a general paradigm for

00:07:16.120 --> 00:07:16.600
spreadsheets.

00:07:16.600 --> 00:07:20.110
You don't ever want to do, I'm
going to get this value, then

00:07:20.110 --> 00:07:22.080
the cell next to it, then the
cell next to it, and then keep

00:07:22.080 --> 00:07:24.870
changing it and writing it back
because that actually

00:07:24.870 --> 00:07:27.950
creates a ton of calls to the
spreadsheet, which make your

00:07:27.950 --> 00:07:29.990
script run over the maximum
execution time.

00:07:29.990 --> 00:07:33.680
Much better ways to get all the
values as a batch, process

00:07:33.680 --> 00:07:35.370
them within your script, and
then write them all.

00:07:35.370 --> 00:07:36.270
ERIC KOLEDA: Yeah, definitely.

00:07:36.270 --> 00:07:39.630
I've seen dramatic increases in
speed when you just change

00:07:39.630 --> 00:07:41.600
that one little paradigm,
so definitely worth

00:07:41.600 --> 00:07:43.084
doing from the start.

00:07:43.084 --> 00:07:43.880
All right, great.

00:07:43.880 --> 00:07:44.920
So that's Data Validation.

00:07:44.920 --> 00:07:46.170
We hope people enjoy it.

00:07:46.170 --> 00:07:48.160
It was one of our most popular
feature requests

00:07:48.160 --> 00:07:49.910
on the issue tracker.

00:07:49.910 --> 00:07:52.980
If you're not aware, we do
maintain a issue tracker

00:07:52.980 --> 00:07:55.410
that's linked off of our
documentation where you can

00:07:55.410 --> 00:07:57.030
file feature requests or bugs.

00:07:57.030 --> 00:07:58.820
And one of the feature requests
we had for a long

00:07:58.820 --> 00:08:00.340
time was add this feature.

00:08:00.340 --> 00:08:02.510
And so we got around to it and
we hope everybody's enjoying

00:08:02.510 --> 00:08:03.820
it and happy.

00:08:03.820 --> 00:08:05.860
KALYAN REDDY: And this is a good
example of how you can

00:08:05.860 --> 00:08:08.390
let us know what the priority
of certain features is.

00:08:08.390 --> 00:08:11.150
The Data Validation, for
example, had a ton of people

00:08:11.150 --> 00:08:13.720
that were starring the issue
on the issue tracker.

00:08:13.720 --> 00:08:16.210
And so that was a signal to us,
basically, that this is

00:08:16.210 --> 00:08:16.950
important to you.

00:08:16.950 --> 00:08:19.150
And we tried hardest to
get it out there.

00:08:19.150 --> 00:08:19.250
ERIC KOLEDA: Yeah.

00:08:19.250 --> 00:08:21.700
The team really relies on people
starring issues as a

00:08:21.700 --> 00:08:23.400
way to get a sense of their
relative importance.

00:08:23.400 --> 00:08:26.200
So if there's an issue that you
really want to see fixed,

00:08:26.200 --> 00:08:27.760
either a bug, or implemented
if it's

00:08:27.760 --> 00:08:29.170
something new, star it.

00:08:29.170 --> 00:08:30.950
You'll get updates on that
whenever we comment.

00:08:30.950 --> 00:08:33.260
And as well, you also indicate
to us that this is something

00:08:33.260 --> 00:08:34.748
you really care about.

00:08:34.748 --> 00:08:35.177
All right.

00:08:35.177 --> 00:08:36.039
Great.

00:08:36.039 --> 00:08:38.940
So going from things that we
have added, I'm going to talk

00:08:38.940 --> 00:08:40.669
a little bit now on the
other side of things

00:08:40.669 --> 00:08:41.900
that are going away.

00:08:41.900 --> 00:08:44.490
So we're doing a little bit
of cleaning up of house.

00:08:44.490 --> 00:08:48.610
And a while back, we posted how
some of our features are

00:08:48.610 --> 00:08:50.870
going to be sunset and
it's going to be

00:08:50.870 --> 00:08:52.420
coming up next month.

00:08:52.420 --> 00:08:54.100
So we want to make sure people,
if you missed that

00:08:54.100 --> 00:08:56.250
original announcement,
are aware.

00:08:56.250 --> 00:08:59.880
So the two things that we're
sunsetting, I think it's on

00:08:59.880 --> 00:09:05.150
the 16th, is GUI Builder,
as well as four Ui App

00:09:05.150 --> 00:09:06.410
components.

00:09:06.410 --> 00:09:09.860
So Ui App is one of the two ways
right now you can build

00:09:09.860 --> 00:09:11.600
user interfaces in
Apps Script.

00:09:11.600 --> 00:09:15.110
It's one where you use, kind of
like layout, some different

00:09:15.110 --> 00:09:17.300
components programmatically,
kind of like add a button

00:09:17.300 --> 00:09:20.020
here, add a textbox there.

00:09:20.020 --> 00:09:22.080
And there are some components
that just never

00:09:22.080 --> 00:09:24.080
quite worked right.

00:09:24.080 --> 00:09:27.390
And we realized that there's
now, with the HTML service,

00:09:27.390 --> 00:09:29.670
other better ways to accomplish
the same goal.

00:09:29.670 --> 00:09:31.990
So those four at the top there--
hyperlink, inline

00:09:31.990 --> 00:09:34.230
hyperlink, layout panel,
and rich text area--

00:09:34.230 --> 00:09:36.540
those are going to be shut
down on September 16.

00:09:36.540 --> 00:09:37.990
KALYAN REDDY: And by the way,
the page that you're looking

00:09:37.990 --> 00:09:42.118
at here is our sunset schedule
page that you can get in the

00:09:42.118 --> 00:09:43.790
App Script page by
going to Support

00:09:43.790 --> 00:09:45.098
and then Sunset Schedule.

00:09:45.098 --> 00:09:45.534
ERIC KOLEDA: Yeah.

00:09:45.534 --> 00:09:48.010
So because those never really
worked correctly to begin

00:09:48.010 --> 00:09:49.400
with, we hope that this
will have a very

00:09:49.400 --> 00:09:51.030
low impact on people.

00:09:51.030 --> 00:09:53.253
But if it is in your code, you
may start getting an error if

00:09:53.253 --> 00:09:54.790
you try to, if you're
still creating one.

00:09:54.790 --> 00:09:56.837
So, you might want to go through
some of your code that

00:09:56.837 --> 00:09:59.250
you know could have this
and maybe clean it up.

00:09:59.250 --> 00:10:03.800
And then GUI Builder is a drag
and drop tool for building Ui

00:10:03.800 --> 00:10:05.040
App interfaces.

00:10:05.040 --> 00:10:08.040
So in Ui App, you can use a
code to add all of these

00:10:08.040 --> 00:10:08.810
components.

00:10:08.810 --> 00:10:11.470
And GUI Builder was a way that
without code you could drag a

00:10:11.470 --> 00:10:13.810
button here, drag
a textbox there.

00:10:13.810 --> 00:10:17.010
We found that it really wasn't
getting the use that we were

00:10:17.010 --> 00:10:18.750
hoping it was going to get.

00:10:18.750 --> 00:10:20.390
And for other technical
reasons we've

00:10:20.390 --> 00:10:22.360
decided to turn it off.

00:10:22.360 --> 00:10:26.830
So we've had the word deprecated
in the menu item

00:10:26.830 --> 00:10:29.460
for GUI Builder for a little
while now, but come September

00:10:29.460 --> 00:10:30.610
16 we're actually going
to shut down the

00:10:30.610 --> 00:10:31.940
GUI Builder as well.

00:10:31.940 --> 00:10:34.870
Now what that means is that if
you have built in GUI in the

00:10:34.870 --> 00:10:38.240
past using GUI Builder, you
won't be able to edit it and

00:10:38.240 --> 00:10:40.330
you won't be able to create
any new ones.

00:10:40.330 --> 00:10:43.170
But, for at least for the time
being, if you have built a GUI

00:10:43.170 --> 00:10:46.220
Builder and you're using it
in the serving of your

00:10:46.220 --> 00:10:48.270
application, we'll continue
to serve up that

00:10:48.270 --> 00:10:50.030
old GUI Builder interface.

00:10:50.030 --> 00:10:53.130
So if you already built a GUI
Builder, I think now's a good

00:10:53.130 --> 00:10:54.930
time to start thinking
about how you want to

00:10:54.930 --> 00:10:55.900
migrate off of that.

00:10:55.900 --> 00:10:59.110
And I think you'll want to look
into using HTML service,

00:10:59.110 --> 00:11:00.430
would be our best
recommendation, but you can

00:11:00.430 --> 00:11:04.150
also just use regular Ui App.

00:11:04.150 --> 00:11:06.880
And now's a good time to get
off of that because once we

00:11:06.880 --> 00:11:08.113
take away the GUI Builder
interface, you're not going to

00:11:08.113 --> 00:11:10.370
be able to make any more
changes to that Ui.

00:11:10.370 --> 00:11:12.162
KALYAN REDDY: Yup.

00:11:12.162 --> 00:11:14.720
ERIC KOLEDA: All right.

00:11:14.720 --> 00:11:17.725
I think now we're to talk about
release notes, right?

00:11:17.725 --> 00:11:18.400
KALYAN REDDY: Do you want
to talk about AdSense?

00:11:18.400 --> 00:11:19.930
ERIC KOLEDA: Right, AdSense.

00:11:19.930 --> 00:11:20.930
Good thought.

00:11:20.930 --> 00:11:26.670
So this is not exactly an Apps
Script specific thing, but in

00:11:26.670 --> 00:11:29.660
Apps Script we have a section
of our documentation called

00:11:29.660 --> 00:11:31.120
advanced services.

00:11:31.120 --> 00:11:35.770
These are a way that you can use
regular Google APIs, the

00:11:35.770 --> 00:11:38.400
ones that are available to the
whole world, and kind of very

00:11:38.400 --> 00:11:41.870
easily make requests to
them in Apps Script.

00:11:41.870 --> 00:11:44.460
And so what we're doing here is
just, very much, is taking

00:11:44.460 --> 00:11:46.540
the APIs everyone else uses
and just giving it to you.

00:11:46.540 --> 00:11:49.370
What that means is that when
those APIs decide to change--

00:11:49.370 --> 00:11:51.040
get rid of versions,
add new versions--

00:11:51.040 --> 00:11:52.360
you have to be a little
bit aware.

00:11:52.360 --> 00:11:54.590
And so, for instance, the
AdSense API which we've had

00:11:54.590 --> 00:11:57.270
available now for a while,
they've shut down, I believe,

00:11:57.270 --> 00:12:00.515
Version 1 and Version 2 and you
can only use Version 3.

00:12:00.515 --> 00:12:03.500
I think it might be 1.1 and
1.2, and you can use 1.3.

00:12:03.500 --> 00:12:06.640
But regardless, they have
already done that.

00:12:06.640 --> 00:12:08.960
That happened in this week--

00:12:08.960 --> 00:12:10.130
earlier in August.

00:12:10.130 --> 00:12:12.700
But so, if you run into that,
if you realize that you got

00:12:12.700 --> 00:12:14.890
caught up in that, it is
important that if you use one

00:12:14.890 --> 00:12:18.460
of these advanced services to
know that you are using

00:12:18.460 --> 00:12:22.760
another Google product's API,
and they may have decisions

00:12:22.760 --> 00:12:25.120
about when they do sunsets,
how long they support a

00:12:25.120 --> 00:12:27.060
version for, and you just kind
of need to stay on top of that

00:12:27.060 --> 00:12:28.570
a little bit.

00:12:28.570 --> 00:12:30.830
KALYAN REDDY: So you can easily
see what these services

00:12:30.830 --> 00:12:34.260
are in our developer page under
the Reference It's under

00:12:34.260 --> 00:12:36.450
these Advanced Google
Services tab.

00:12:36.450 --> 00:12:40.660
So these are the ones that are
kind of packaged external APIs

00:12:40.660 --> 00:12:42.725
that we just don't have
easier access to.

00:12:42.725 --> 00:12:43.060
ERIC KOLEDA: Yeah.

00:12:43.060 --> 00:12:45.630
And so if you went to the
AdSense API homepage, I think

00:12:45.630 --> 00:12:47.570
they'd have some messages there
about these versions

00:12:47.570 --> 00:12:48.040
going away.

00:12:48.040 --> 00:12:51.910
And so we just honored that same
sunset schedule that they

00:12:51.910 --> 00:12:54.210
had in Apps Script.

00:12:54.210 --> 00:12:54.890
KALYAN REDDY: All right.

00:12:54.890 --> 00:12:56.220
So let's talk about
release notes.

00:12:56.220 --> 00:12:57.360
ERIC KOLEDA: All right.

00:12:57.360 --> 00:13:00.440
KALYAN REDDY: So we've had a
couple releases since our last

00:13:00.440 --> 00:13:03.060
Unscripted at the end of July.

00:13:03.060 --> 00:13:06.380
So here I'll start with
the August 5 one.

00:13:06.380 --> 00:13:10.790
We added the message,
getPlainBody to the Gmail

00:13:10.790 --> 00:13:11.680
message class.

00:13:11.680 --> 00:13:14.940
And what this basically does is
returns the content of the

00:13:14.940 --> 00:13:17.160
message if you don't care
about any of the HTML

00:13:17.160 --> 00:13:21.840
formatting, you just want to get
what is the text here so I

00:13:21.840 --> 00:13:22.630
can operate on it.

00:13:22.630 --> 00:13:25.400
Then you can easily do this
without writing your own regex

00:13:25.400 --> 00:13:27.615
script to HTML, which is
a nightmare, and you

00:13:27.615 --> 00:13:29.660
should not do it.

00:13:29.660 --> 00:13:31.130
ERIC KOLEDA: That really can be
a-- there's a couple times

00:13:31.130 --> 00:13:33.140
when I needed to parse
in a message.

00:13:33.140 --> 00:13:35.420
I really just wanted the bare
minimum of the text.

00:13:35.420 --> 00:13:38.080
I really didn't care about the
markup they had, tables, so

00:13:38.080 --> 00:13:39.290
that was really nice to add.

00:13:39.290 --> 00:13:40.915
KALYAN REDDY: It's kind of a
handy utility method where

00:13:40.915 --> 00:13:42.160
it's just like skimming
the text.

00:13:42.160 --> 00:13:44.466
ERIC KOLEDA: Yeah, give
it to me straight.

00:13:44.466 --> 00:13:46.310
KALYAN REDDY: Let's see.

00:13:46.310 --> 00:13:47.440
There's a couple deprecations.

00:13:47.440 --> 00:13:51.090
So as, we've announced before,
we've added the Drive App

00:13:51.090 --> 00:13:54.215
service, which is
a replacement to

00:13:54.215 --> 00:13:55.850
the DocsList service.

00:13:55.850 --> 00:13:59.800
And what we're showing here is
that some of the methods that

00:13:59.800 --> 00:14:02.850
used to be in the DocsList we
deprecated because they're

00:14:02.850 --> 00:14:05.680
already equivalent with
Drive App as well.

00:14:05.680 --> 00:14:10.990
So for example, find, get all
files, get all folders--

00:14:10.990 --> 00:14:15.020
these are methods that take a
start value and then a maximum

00:14:15.020 --> 00:14:17.130
number of results the
returned value.

00:14:17.130 --> 00:14:23.080
We're deprecating those in favor
of the Drive App or the

00:14:23.080 --> 00:14:25.620
paging methods within the
DocsList, which actually

00:14:25.620 --> 00:14:28.900
return you a token, which you
can use for, it's called

00:14:28.900 --> 00:14:31.500
continuation, which is basically
I've processed

00:14:31.500 --> 00:14:32.690
everything up until
this token.

00:14:32.690 --> 00:14:34.390
I'm going to give you this
token, give me some more

00:14:34.390 --> 00:14:35.985
results starting
at this token.

00:14:35.985 --> 00:14:36.410
ERIC KOLEDA: Yeah.

00:14:36.410 --> 00:14:38.960
So the key here is that although
Drive App is the

00:14:38.960 --> 00:14:41.090
future, you can still continue
to use DocsList right now.

00:14:41.090 --> 00:14:43.760
It has not been deprecated
as of yet.

00:14:43.760 --> 00:14:46.660
But we had these certain
methods that--

00:14:46.660 --> 00:14:49.770
there's just different back
end reasons were not very

00:14:49.770 --> 00:14:53.210
efficient and there's better
paging methods out there in

00:14:53.210 --> 00:14:55.650
DocsList like to get something
for paging method.

00:14:55.650 --> 00:14:58.300
So we encourage you,
if you're using the

00:14:58.300 --> 00:15:00.800
DocsList, try using Drive.

00:15:00.800 --> 00:15:03.000
But if you need to use DocsList,
use these paging

00:15:03.000 --> 00:15:04.900
methods instead for getting a
larger numbers of results.

00:15:04.900 --> 00:15:06.550
If you just need to get-- if you
just need to get the first

00:15:06.550 --> 00:15:07.770
10 files, you'll be fine.

00:15:07.770 --> 00:15:09.640
But a lot of times people
want all the files.

00:15:09.640 --> 00:15:11.480
And all the files can
be a lot of files.

00:15:11.480 --> 00:15:13.440
Some Drive people power
users out there.

00:15:13.440 --> 00:15:15.429
They have quite a number of
files in their Drive.

00:15:15.429 --> 00:15:18.630
KALYAN REDDY: Right
OK, let's see.

00:15:18.630 --> 00:15:20.490
A couple of issues were fixed.

00:15:20.490 --> 00:15:22.350
One is the feature request
we talked about, the data

00:15:22.350 --> 00:15:24.070
validation rules.

00:15:24.070 --> 00:15:29.540
If we talked in a previous
episode about the Google Drive

00:15:29.540 --> 00:15:32.710
SDK that allows you to download
your Apps Script

00:15:32.710 --> 00:15:35.410
source files onto your computer
so that you can

00:15:35.410 --> 00:15:39.250
upload them to a source control
repository or write a

00:15:39.250 --> 00:15:42.080
plugin But, like we mentioned
before, someone wrote a plugin

00:15:42.080 --> 00:15:44.870
for the Sublime Text editor that
allows them to edit Apps

00:15:44.870 --> 00:15:47.250
Script files and
re-upload them.

00:15:47.250 --> 00:15:50.690
There was a bug in it where HTML
files were being uploaded

00:15:50.690 --> 00:15:52.590
under the server JS
type, which is

00:15:52.590 --> 00:15:53.770
usually for code files.

00:15:53.770 --> 00:15:55.220
And that has since
been resolved.

00:15:55.220 --> 00:15:59.840
So now they should be
uploaded as HTML.

00:15:59.840 --> 00:16:00.880
Let's see, special characters
don't need

00:16:00.880 --> 00:16:02.440
to hit escape twice.

00:16:02.440 --> 00:16:07.010
So if you did have a script
where you were double escaping

00:16:07.010 --> 00:16:10.920
special characters, you no
longer need to do that.

00:16:10.920 --> 00:16:13.420
And when-- and this
is a key thing.

00:16:13.420 --> 00:16:17.860
So if you disabled Drive App in
the domain administration

00:16:17.860 --> 00:16:20.730
panel, this only applies when
you're using Drive App within

00:16:20.730 --> 00:16:23.370
a domain, when your script
is in a domain account.

00:16:23.370 --> 00:16:27.330
If your administrator has
disabled Drive Apps, then

00:16:27.330 --> 00:16:29.450
Drive App now throws an
appropriate error message.

00:16:29.450 --> 00:16:32.880
It's not going to function, but
before it used a generic

00:16:32.880 --> 00:16:35.410
server error, and now it clearly
says you don't have

00:16:35.410 --> 00:16:37.920
permission to do this, you're
not allowed to do this.

00:16:37.920 --> 00:16:39.950
And then you can contact your
administrator to find out why,

00:16:39.950 --> 00:16:42.130
because Apps Scripts
are awesome.

00:16:42.130 --> 00:16:43.620
ERIC KOLEDA: Yeah.

00:16:43.620 --> 00:16:45.350
You know, there's a lot of times
in Apps Script where

00:16:45.350 --> 00:16:46.510
we'll give you an error
message and

00:16:46.510 --> 00:16:47.740
sometimes you're like what?

00:16:47.740 --> 00:16:48.210
What was that?

00:16:48.210 --> 00:16:50.410
I don't know what
to do with this.

00:16:50.410 --> 00:16:51.670
So if that does happen,
let us know.

00:16:51.670 --> 00:16:53.460
I think this is a case where
someone reported it.

00:16:53.460 --> 00:16:55.900
Let us know and we can go in
there and come up with a more

00:16:55.900 --> 00:16:58.530
appropriate error message that
allows you to better determine

00:16:58.530 --> 00:17:01.470
what went wrong, maybe how you
work around it, or fix your

00:17:01.470 --> 00:17:02.860
code to not run into
that error.

00:17:02.860 --> 00:17:04.089
KALYAN REDDY: Yup.

00:17:04.089 --> 00:17:07.099
We added a convenience method
spreadsheet.deleteSheet where

00:17:07.099 --> 00:17:08.550
you can specify the
actual sheet.

00:17:08.550 --> 00:17:12.020
So before what we had was you
can delete the active sheet,

00:17:12.020 --> 00:17:14.060
so you have to make the sheet
an active sheet and then you

00:17:14.060 --> 00:17:16.079
called delete sheet and it
would get rid of it.

00:17:16.079 --> 00:17:18.470
But this is if you don't want
to switch what the active

00:17:18.470 --> 00:17:20.386
sheet is, you can just
provide a name.

00:17:20.386 --> 00:17:21.099
ERIC KOLEDA: That's great.

00:17:21.099 --> 00:17:24.670
KALYAN REDDY: Let's see, and the
last release on August 19,

00:17:24.670 --> 00:17:27.319
we added more convenience
methods to

00:17:27.319 --> 00:17:28.830
the Drive App service.

00:17:28.830 --> 00:17:33.630
One is a make copy where you can
provide the destination.

00:17:33.630 --> 00:17:36.980
The old make copy method, you
call it on the file itself and

00:17:36.980 --> 00:17:39.460
it would make the copy within
the same directory of where

00:17:39.460 --> 00:17:43.540
the original was, or
the route, I think.

00:17:43.540 --> 00:17:47.370
But this one, in any case,
allows you to specify a folder

00:17:47.370 --> 00:17:48.800
where the copy should go.

00:17:48.800 --> 00:17:51.680
ERIC KOLEDA: Yeah, I think it
was in the same directory as

00:17:51.680 --> 00:17:52.600
the file you're copying.

00:17:52.600 --> 00:17:54.890
And the problem there was that
if someone shared with you a

00:17:54.890 --> 00:17:58.140
folder in read-only mode, if
you tried to make a copy of

00:17:58.140 --> 00:18:00.990
that file, which you should be
able to do, it would make that

00:18:00.990 --> 00:18:03.840
copy right in the folder you
had read-only access to.

00:18:03.840 --> 00:18:04.940
And so it failed.

00:18:04.940 --> 00:18:08.540
So now you can make a copy of
a file in a read-only folder

00:18:08.540 --> 00:18:11.200
and make it into a folder that
you do have write access to.

00:18:11.200 --> 00:18:13.160
So, we'll book it after that.

00:18:13.160 --> 00:18:14.960
KALYAN REDDY: And the last thing
here, well there was a

00:18:14.960 --> 00:18:17.650
performance issue that affected
certain scripts that

00:18:17.650 --> 00:18:19.350
no longer occurs.

00:18:19.350 --> 00:18:21.420
Kind of cryptic,
but most people

00:18:21.420 --> 00:18:23.590
weren't affected by this.

00:18:23.590 --> 00:18:26.950
And if you were, we apologize
for that and we've since

00:18:26.950 --> 00:18:29.120
applied a fix that should
relieve that.

00:18:29.120 --> 00:18:32.470
ERIC KOLEDA: Yeah, now, App
Script isn't necessarily ultra

00:18:32.470 --> 00:18:34.020
fast in all scenarios.

00:18:34.020 --> 00:18:36.010
But if you do see something
where something that used to

00:18:36.010 --> 00:18:39.380
only take a second or two is now
taking 10, 20, 30, if you

00:18:39.380 --> 00:18:41.610
actually have-- if you can point
to us, here's the code

00:18:41.610 --> 00:18:43.820
that's running really slow, do
let us know because we do want

00:18:43.820 --> 00:18:47.620
to make sure that if there's any
sort of performance change

00:18:47.620 --> 00:18:49.946
that's coming about that
we can look into that.

00:18:49.946 --> 00:18:50.380
KALYAN REDDY: Right.

00:18:50.380 --> 00:18:53.060
And just the fact that
everything runs on the cloud,

00:18:53.060 --> 00:18:56.210
you can't guarantee exactly
the same performance every

00:18:56.210 --> 00:18:59.870
single iteration of every loop,
but you can using the

00:18:59.870 --> 00:19:02.530
execution transcript, which is
a feature we recently added,

00:19:02.530 --> 00:19:05.160
you can get timings for
this and then you can

00:19:05.160 --> 00:19:06.100
use your best judgment.

00:19:06.100 --> 00:19:08.280
If something used to take five
seconds total and is now

00:19:08.280 --> 00:19:10.970
taking five minutes, then
there's clearly something

00:19:10.970 --> 00:19:11.450
wrong there.

00:19:11.450 --> 00:19:14.780
So that's something worth
discussing, whereas if it was

00:19:14.780 --> 00:19:17.610
taking five seconds and now
it's taking seven seconds,

00:19:17.610 --> 00:19:21.010
that could be like a transient
thing, or it could just be the

00:19:21.010 --> 00:19:23.800
fact that it's running
on a lot of stuff

00:19:23.800 --> 00:19:26.140
servers in the back end.

00:19:26.140 --> 00:19:28.860
ERIC KOLEDA: There's so many
different reasons that those

00:19:28.860 --> 00:19:31.870
things can change, but if
there's patterns, if we see

00:19:31.870 --> 00:19:34.740
that, hey, all the time, or 9
times out of 10, this thing is

00:19:34.740 --> 00:19:37.294
running way slow, that's
important for us to know.

00:19:37.294 --> 00:19:38.270
KALYAN REDDY: All right.

00:19:38.270 --> 00:19:38.820
ERIC KOLEDA: All right.

00:19:38.820 --> 00:19:41.000
KALYAN REDDY: So for release
notes, you want

00:19:41.000 --> 00:19:41.720
to jump to the Hangout?

00:19:41.720 --> 00:19:43.020
ERIC KOLEDA: Yeah, I think our
producers says we have a few

00:19:43.020 --> 00:19:44.660
people in the Hangout.

00:19:44.660 --> 00:19:47.420
And I also saw here, Luca, you
mentioned that you can't see

00:19:47.420 --> 00:19:48.630
the screen we're sharing
on the Hangout,

00:19:48.630 --> 00:19:50.130
I'm sorry about that.

00:19:50.130 --> 00:19:52.100
Yeah, that is a limitation, but
you get to be here live,

00:19:52.100 --> 00:19:55.264
so that's the plus side.

00:19:55.264 --> 00:19:56.130
LUCA: All right, thanks guys.

00:19:56.130 --> 00:19:59.340
ERIC KOLEDA: Do you have any
questions for us today?

00:19:59.340 --> 00:20:02.160
LUCA: Well actually I
posted some on the

00:20:02.160 --> 00:20:04.250
moderator, that's it.

00:20:04.250 --> 00:20:07.500
But specifically, actually,
there's one where I haven't

00:20:07.500 --> 00:20:10.860
posted, but I uploaded, which
is kind of interesting.

00:20:10.860 --> 00:20:15.130
The idea is that so you can kind
of publish versions, but

00:20:15.130 --> 00:20:19.400
you can not reverse your code
to a specific version, so I

00:20:19.400 --> 00:20:21.905
was wondering if maybe that's
in the pipeline

00:20:21.905 --> 00:20:24.012
of things to address?

00:20:24.012 --> 00:20:26.050
ERIC KOLEDA: Yeah, people have
been asking for that since we

00:20:26.050 --> 00:20:26.830
introduced versions.

00:20:26.830 --> 00:20:29.200
I think, when we put out
versions, it was about the

00:20:29.200 --> 00:20:33.930
time that we were launching, I
think, libraries and web apps.

00:20:33.930 --> 00:20:36.500
And I think the main goal there
was that we're giving

00:20:36.500 --> 00:20:38.450
your code to someone else, you
want to make sure there's

00:20:38.450 --> 00:20:41.240
stability so you can keep
developing, but that someone

00:20:41.240 --> 00:20:44.270
who's utilizing it either as a
web app or in a library, gets

00:20:44.270 --> 00:20:47.240
the concrete, fixed version
that you know worked.

00:20:47.240 --> 00:20:49.470
The natural extension of that
though is to say, hey, what

00:20:49.470 --> 00:20:51.180
about reverting my
code, right?

00:20:51.180 --> 00:20:54.070
If I make a version that works
and I totally mess it up in my

00:20:54.070 --> 00:20:56.420
development process, I want to
go back to the version that

00:20:56.420 --> 00:20:57.520
worked myself.

00:20:57.520 --> 00:21:00.030
And that's not there today, and
we have talked about that.

00:21:00.030 --> 00:21:02.890
There is in the script editor
a way for you to see your

00:21:02.890 --> 00:21:04.060
revision history.

00:21:04.060 --> 00:21:07.290
However, that isn't really
version aware.

00:21:07.290 --> 00:21:10.390
It's kind of every time you, I
think, hit save you'll get

00:21:10.390 --> 00:21:11.160
another entry in there.

00:21:11.160 --> 00:21:14.190
And we only save so many, so
it's not quite the same as

00:21:14.190 --> 00:21:15.370
having reverting to versions.

00:21:15.370 --> 00:21:19.010
KALYAN REDDY: It is kind of
noisy and not fully useful in

00:21:19.010 --> 00:21:22.800
that sense but, unfortunately
this isn't completely

00:21:22.800 --> 00:21:24.830
packaged, but the way to do
this now, the work around,

00:21:24.830 --> 00:21:29.320
would be to use the Drive SDK
and you can snapshot your

00:21:29.320 --> 00:21:33.330
files at any point, and then you
can use your own version

00:21:33.330 --> 00:21:35.410
control in that way.

00:21:35.410 --> 00:21:37.770
Yeah, unfortunately it isn't
like a package solution.

00:21:37.770 --> 00:21:39.870
ERIC KOLEDA: Yeah, one of the
things we're trying to, I

00:21:39.870 --> 00:21:42.290
think we always try to work
out in Apps Script, is how

00:21:42.290 --> 00:21:45.470
much do we want to create a tool
and how much we want to

00:21:45.470 --> 00:21:48.010
allow you to use a tool that
you may already be using.

00:21:48.010 --> 00:21:50.330
So a lot of people love using
GitHub for instance, to manage

00:21:50.330 --> 00:21:51.950
that code and version it.

00:21:51.950 --> 00:21:54.710
So we're trying to figure out
how much should we build our

00:21:54.710 --> 00:21:58.090
own thing and how much we
utilize kind of the developer

00:21:58.090 --> 00:21:59.500
tools that are already
out there.

00:21:59.500 --> 00:22:01.330
So I think we'll continue to
look into it, specifically in

00:22:01.330 --> 00:22:03.420
the versioning case.

00:22:03.420 --> 00:22:06.046
And we'll see how things
turn out there.

00:22:06.046 --> 00:22:07.205
LUCA: All right, thanks.

00:22:07.205 --> 00:22:07.730
ERIC KOLEDA: Thank you.

00:22:07.730 --> 00:22:08.980
KALYAN REDDY: Any more questions
in the Hangout?

00:22:12.060 --> 00:22:14.050
All right, let's jump to
the moderator here.

00:22:14.050 --> 00:22:15.360
ERIC KOLEDA: Yeah, we'll leave
the mics running so if you

00:22:15.360 --> 00:22:17.120
guys have questions in between,

00:22:17.120 --> 00:22:18.540
feel free to ask away.

00:22:18.540 --> 00:22:20.040
KALYAN REDDY: We got some
great questions here.

00:22:20.040 --> 00:22:22.870
Let's see.

00:22:22.870 --> 00:22:26.640
So Eric, for a file in Google
Drive, getEditors() or

00:22:26.640 --> 00:22:29.600
getViewers() is not available
in DriveApp,

00:22:29.600 --> 00:22:31.600
it's only in DocsList.

00:22:31.600 --> 00:22:34.120
Is this supported in the future
in DriveApp class, or

00:22:34.120 --> 00:22:35.290
do we still need to DocsList?

00:22:35.290 --> 00:22:36.840
ERIC KOLEDA: It's a very
good question.

00:22:36.840 --> 00:22:40.760
So the reason it's not in
DiveApp today is because the

00:22:40.760 --> 00:22:42.250
Drive product--

00:22:42.250 --> 00:22:44.670
I think Google in general has
kind of shifted away from

00:22:44.670 --> 00:22:48.140
making your email address a
piece of public information.

00:22:48.140 --> 00:22:51.110
So for instance, if you're in
a doc and someone joins and

00:22:51.110 --> 00:22:51.950
starts editing.

00:22:51.950 --> 00:22:55.170
Or if you look in the sharing
dialogue inside Google Drive,

00:22:55.170 --> 00:22:56.730
you'll actually see someone's
name, their

00:22:56.730 --> 00:22:58.055
face, but you won't--

00:22:58.055 --> 00:22:58.360
LUCIANO PANEPUCCI:
Hello, hello.

00:22:58.360 --> 00:23:00.660
ERIC KOLEDA: --have to see
their email address.

00:23:00.660 --> 00:23:04.065
And so I think what we're trying
to do here is in Drive

00:23:04.065 --> 00:23:07.480
App reflect that same paradigm,
where someone's

00:23:07.480 --> 00:23:10.320
email address won't be
necessarily available to just

00:23:10.320 --> 00:23:12.670
because you have access
to their document.

00:23:12.670 --> 00:23:15.050
So we know this is a problem
for people who are building

00:23:15.050 --> 00:23:18.560
apps that do things, like making
sure that someone has

00:23:18.560 --> 00:23:20.510
access or doesn't have
access, you know,

00:23:20.510 --> 00:23:22.570
monitoring who has access.

00:23:22.570 --> 00:23:27.180
So we are working on adding some
more features to Drive

00:23:27.180 --> 00:23:31.035
App that allows you to get
closer to the same information

00:23:31.035 --> 00:23:34.770
you have in DocsList but it may
be that we come up with a

00:23:34.770 --> 00:23:36.430
different solution for Drive
App than there was in

00:23:36.430 --> 00:23:38.090
DocsList, rather than
just return to

00:23:38.090 --> 00:23:39.530
people's email addresses.

00:23:39.530 --> 00:23:41.470
So stay tuned for that hopefully
we'll have more news

00:23:41.470 --> 00:23:42.580
for you in the future.

00:23:42.580 --> 00:23:46.200
I think long term, though,
DocsList is not there to be

00:23:46.200 --> 00:23:49.150
kind of like in addition to
Drive App DocsList is an older

00:23:49.150 --> 00:23:51.806
technology and I think we're
encouraging people to move to

00:23:51.806 --> 00:23:53.070
Drive App when possible.

00:23:53.070 --> 00:23:54.840
And if there are things like
this that prevent you from

00:23:54.840 --> 00:23:57.000
moving to Drive App, thank you
so much for bringing them up

00:23:57.000 --> 00:24:00.780
because we do want to make sure
that you have the ability

00:24:00.780 --> 00:24:05.700
to move your functionality
off the DocsList.

00:24:05.700 --> 00:24:07.190
I think I heard someone
new join the Hangout.

00:24:07.190 --> 00:24:08.440
Do you have a question?

00:24:10.716 --> 00:24:11.182
LUCIANO PANEPUCCI: Hello.

00:24:11.182 --> 00:24:12.580
ERIC KOLEDA: Yes, hello.

00:24:12.580 --> 00:24:13.050
LUCIANO PANEPUCCI:
Can you hear me?

00:24:13.050 --> 00:24:15.190
ERIC KOLEDA: I can.

00:24:15.190 --> 00:24:16.440
LUCIANO PANEPUCCI: OK, thanks.

00:24:18.750 --> 00:24:21.660
I'm Luciano from Brazil.

00:24:21.660 --> 00:24:29.530
I want to ask is there any plan
to add download as HTML

00:24:29.530 --> 00:24:35.030
at the zip it folder
into Apps Script.

00:24:35.030 --> 00:24:41.980
Currently we can only download
it as a PDF and since we can

00:24:41.980 --> 00:24:47.370
turn interface download it as
HTML, zip it folder it would

00:24:47.370 --> 00:24:51.540
be sure nice to be able to do
it from the Apps Script.

00:24:51.540 --> 00:24:55.280
ERIC KOLEDA: Are you referring
to a Google Docs file?

00:24:55.280 --> 00:24:55.830
LUCIANO PANEPUCCI: Yes.

00:24:55.830 --> 00:25:01.150
A Google Docs file in a native
document in Drive.

00:25:01.150 --> 00:25:02.290
ERIC KOLEDA: Right, yeah.

00:25:02.290 --> 00:25:03.700
So yeah, there is
that ability.

00:25:03.700 --> 00:25:04.440
There are actually, yeah.

00:25:04.440 --> 00:25:07.050
If you go to Google Docs or even
Google Sheets, there are

00:25:07.050 --> 00:25:11.230
a lot more options under the
download menu bar than there

00:25:11.230 --> 00:25:12.940
are inside of App
Script today.

00:25:12.940 --> 00:25:15.290
All right, I think we just as
you mentioned PDFs today

00:25:15.290 --> 00:25:16.650
inside Apps Script.

00:25:16.650 --> 00:25:19.720
We are aware that people kind of
really want to have access

00:25:19.720 --> 00:25:23.980
to more file types, whether it
be exporting to an Open Office

00:25:23.980 --> 00:25:28.110
file type or to like you
mentioned, to HTML.

00:25:28.110 --> 00:25:30.220
We want to make more of those
available in Apps Script.

00:25:30.220 --> 00:25:32.500
It's been something we've talked
about for a while, and

00:25:32.500 --> 00:25:35.220
I'll bring it back up with the
team again and make sure that

00:25:35.220 --> 00:25:38.790
they're aware that people are
still asking for this.

00:25:38.790 --> 00:25:40.040
LUCIANO PANEPUCCI:
OK, thank you.

00:25:42.540 --> 00:25:45.170
KALYAN REDDY: Anyone else
in the Hangout?

00:25:45.170 --> 00:25:47.380
All right, let's continue
with these questions.

00:25:47.380 --> 00:25:50.640
This save versions, we already
answered this question.

00:25:50.640 --> 00:25:53.150
Just now from Santy.

00:25:53.150 --> 00:25:55.820
It'd be great if we could
develop a full blown website

00:25:55.820 --> 00:25:59.000
using Apps Script, but currently
cannot map a script

00:25:59.000 --> 00:26:00.010
to a domain.

00:26:00.010 --> 00:26:01.300
Is there a way I can do it?

00:26:01.300 --> 00:26:02.410
ERIC KOLEDA: Hm, yes.

00:26:02.410 --> 00:26:04.150
SANTY: You asked me,
be straight.

00:26:06.670 --> 00:26:08.560
ERIC KOLEDA: Yes,
good question.

00:26:08.560 --> 00:26:10.330
Unfortunately it's not
possible today.

00:26:10.330 --> 00:26:14.120
So one of the things we wanted
to do with the Apps Script web

00:26:14.120 --> 00:26:16.510
apps was make it very
easy to deploy.

00:26:16.510 --> 00:26:17.070
Right.

00:26:17.070 --> 00:26:19.680
It's actually just one small
dialogue, you say what

00:26:19.680 --> 00:26:21.590
version, you say the access,
you hit deploy,

00:26:21.590 --> 00:26:22.240
you're done, right?

00:26:22.240 --> 00:26:24.380
You compare that to launching
a website under almost any

00:26:24.380 --> 00:26:27.530
other platform and it's many,
many steps quicker.

00:26:27.530 --> 00:26:29.710
I think one of the downsides of
that is that it's also less

00:26:29.710 --> 00:26:30.890
configurable, right?

00:26:30.890 --> 00:26:32.380
So I think--

00:26:32.380 --> 00:26:34.460
if you think about Apps Script
web apps sometimes it would be

00:26:34.460 --> 00:26:36.800
nice to launch something
full-blown, but I think we're

00:26:36.800 --> 00:26:38.440
not trying to solve
that problem.

00:26:38.440 --> 00:26:40.420
There's a lot of great products
at Google and outside

00:26:40.420 --> 00:26:43.900
Google that allow you to build
websites and web apps.

00:26:43.900 --> 00:26:48.460
And I think, to actually, to
do that right requires some

00:26:48.460 --> 00:26:50.670
tools and some features
that just aren't

00:26:50.670 --> 00:26:52.330
in Apps Script today.

00:26:52.330 --> 00:26:54.660
And so I think when you think
about Apps Script web apps,

00:26:54.660 --> 00:26:58.620
it's probably best to think
about small tools, things to

00:26:58.620 --> 00:27:03.000
use within an organization,
utilities, you know, something

00:27:03.000 --> 00:27:04.080
that's kind of small in scope.

00:27:04.080 --> 00:27:07.640
And for those we hope that run
them off script.google.com

00:27:07.640 --> 00:27:11.370
would be enough, but do let us
know, I guess, if that won't

00:27:11.370 --> 00:27:13.000
work for those kind
of use cases.

00:27:13.000 --> 00:27:14.690
But we definitely want, we're
definitely trying to encourage

00:27:14.690 --> 00:27:17.550
people to think of web apps in
Apps Script as meant for

00:27:17.550 --> 00:27:20.700
solving smaller problems, not
launching a business or

00:27:20.700 --> 00:27:21.370
something of that nature.

00:27:21.370 --> 00:27:21.870
KALYAN REDDY: Right.

00:27:21.870 --> 00:27:24.960
And if you do want to make a
full-blown website, that's one

00:27:24.960 --> 00:27:27.700
of the indications that you
should move on to something

00:27:27.700 --> 00:27:32.240
like App Engine, which lets you
have more control over the

00:27:32.240 --> 00:27:33.880
configuration and deployment
aspect.

00:27:33.880 --> 00:27:34.120
ERIC KOLEDA: Yeah.

00:27:34.120 --> 00:27:36.550
And some people, what they do is
they'll prototype something

00:27:36.550 --> 00:27:38.340
in App Script because, like I
mentioned, you can get it

00:27:38.340 --> 00:27:40.690
running really quickly, we have
all these integrations

00:27:40.690 --> 00:27:41.970
into Google services.

00:27:41.970 --> 00:27:44.760
So you can make a kind of like
prototype version of an App

00:27:44.760 --> 00:27:46.830
you want to build really
quickly, show it around to

00:27:46.830 --> 00:27:48.100
people, get feedback.

00:27:48.100 --> 00:27:49.910
And then when you're time to
really like make the final

00:27:49.910 --> 00:27:52.330
production version then maybe
you look into another platform

00:27:52.330 --> 00:27:53.470
like App Engine.

00:27:53.470 --> 00:27:54.940
I'd say that would probably be
our answer for right now.

00:27:54.940 --> 00:27:57.740
KALYAN REDDY: OK, next question
here is can I pull a

00:27:57.740 --> 00:28:00.500
list of values from a
spreadsheet into my form so

00:28:00.500 --> 00:28:02.880
that each time the form is
opened it will update with the

00:28:02.880 --> 00:28:04.870
most current list of values.

00:28:04.870 --> 00:28:05.260
Yes.

00:28:05.260 --> 00:28:06.920
ERIC KOLEDA: And the
answer is yes.

00:28:06.920 --> 00:28:10.150
So not only can you do this
yourself with the Form App,

00:28:10.150 --> 00:28:13.090
which is another integration
into Google Forms that we

00:28:13.090 --> 00:28:16.470
launched for I/O this year, and
I gave a presentation on.

00:28:16.470 --> 00:28:18.360
If you want to see it, I think
it's a really good I/O

00:28:18.360 --> 00:28:20.640
presentation, I'm
a little biased.

00:28:20.640 --> 00:28:23.200
But not only can you build it
yourself and actually Form App

00:28:23.200 --> 00:28:24.330
is very easy to use.

00:28:24.330 --> 00:28:27.720
But, one of the kind of like
top contributors and most

00:28:27.720 --> 00:28:30.190
popular scripters out there
for Apps Script Andrew

00:28:30.190 --> 00:28:32.930
Stillman who works in the
education space, he built a

00:28:32.930 --> 00:28:35.910
script I believe it's called
Form Ranger that does exactly

00:28:35.910 --> 00:28:38.650
this-- allows you to take a
range within your spreadsheet

00:28:38.650 --> 00:28:41.240
and tie it into a form field
so that whenever the range

00:28:41.240 --> 00:28:43.800
changes, the form
gets updated.

00:28:43.800 --> 00:28:44.140
So, yeah.

00:28:44.140 --> 00:28:45.830
Certainly possible and
you may not even have

00:28:45.830 --> 00:28:46.500
to write any code.

00:28:46.500 --> 00:28:49.615
Although, if you like to write
code, it wouldn't be hard and

00:28:49.615 --> 00:28:50.865
I think you'd actually
learn a lot too.

00:28:53.942 --> 00:28:54.860
All right.

00:28:54.860 --> 00:28:59.190
KALYAN REDDY: All right, any
questions on the Hangout?

00:28:59.190 --> 00:28:59.950
Feel free to jump in.

00:28:59.950 --> 00:29:04.980
We'll leave your mics up and
we can hear you there.

00:29:04.980 --> 00:29:05.970
OK.

00:29:05.970 --> 00:29:06.970
You want to continue
with the moderator?

00:29:06.970 --> 00:29:08.010
ERIC KOLEDA: Yeah, yeah.

00:29:08.010 --> 00:29:08.186
KALYAN REDDY: All right.

00:29:08.186 --> 00:29:10.820
Apps Script deployed as a web
app to run in the context of

00:29:10.820 --> 00:29:14.730
the user who runs it, targeted
for more than 10,000 users.

00:29:14.730 --> 00:29:15.210
ERIC KOLEDA: Woah.

00:29:15.210 --> 00:29:16.770
KALYAN REDDY: Is there a limit
on the number of concurrent

00:29:16.770 --> 00:29:20.300
hits for web app or any other
limit not listed in the App

00:29:20.300 --> 00:29:22.890
Script dashboard that should
be of potential concern?

00:29:22.890 --> 00:29:25.120
ERIC KOLEDA: So, we haven't
got this question before,

00:29:25.120 --> 00:29:29.050
which is like what are the
limits of how much, is there

00:29:29.050 --> 00:29:31.840
bandwidth limits on upload or
download from a web app or

00:29:31.840 --> 00:29:33.750
concurrent request
to a web app.

00:29:33.750 --> 00:29:36.780
We don't have anything
published, but I do want to

00:29:36.780 --> 00:29:39.580
echo back to what I had said
to the previous question

00:29:39.580 --> 00:29:42.250
there, that we really don't
think that Apps Script is the

00:29:42.250 --> 00:29:46.980
right tool if you're going to
have 10K concurrent users, I

00:29:46.980 --> 00:29:47.770
get technically users
in general.

00:29:47.770 --> 00:29:49.580
But when you're really looking
at something that needs to

00:29:49.580 --> 00:29:52.120
scale to a lot of people, really
like a production level

00:29:52.120 --> 00:29:54.750
web application, we think that
Apps Script may not be the

00:29:54.750 --> 00:29:55.880
best choice.

00:29:55.880 --> 00:29:56.950
If we just--

00:29:56.950 --> 00:29:58.440
if you see what's there, we
don't really have the

00:29:58.440 --> 00:30:01.060
information about those kind
of details right now.

00:30:01.060 --> 00:30:02.680
Although, we can look
into getting it.

00:30:02.680 --> 00:30:04.960
But we also have some of the
tooling around, like

00:30:04.960 --> 00:30:07.670
monitoring, that you'd want to
see if you're building a large

00:30:07.670 --> 00:30:08.740
scale web application.

00:30:08.740 --> 00:30:09.810
KALYAN REDDY: Logging,
et cetera.

00:30:09.810 --> 00:30:10.910
ERIC KOLEDA: Yeah.

00:30:10.910 --> 00:30:14.330
So I would recommend against
launching that on Apps Script,

00:30:14.330 --> 00:30:16.060
but you're certainly
welcome to try.

00:30:16.060 --> 00:30:18.780
We have had someone in the
past who launched a very

00:30:18.780 --> 00:30:21.250
popular web app for their
organization that used

00:30:21.250 --> 00:30:23.030
ScriptDb and they did run
into some quotas.

00:30:23.030 --> 00:30:26.690
So maybe there's not going to
be a limit on the web app

00:30:26.690 --> 00:30:30.870
serving side, but the pieces
of Apps Script that you're

00:30:30.870 --> 00:30:34.060
using, whether it be Gmail app
for sending emails, or the

00:30:34.060 --> 00:30:36.870
spreadsheet app for sending
spreadsheets, or ScriptDb for

00:30:36.870 --> 00:30:39.820
storing data, those all have
their own individual quotas

00:30:39.820 --> 00:30:44.940
that are more targeted at an
individual use case kind of

00:30:44.940 --> 00:30:49.730
level of quotas and not really
geared up for a full scale

00:30:49.730 --> 00:30:50.870
large application.

00:30:50.870 --> 00:30:54.160
KALYAN REDDY: And the poster
mentioned in the question that

00:30:54.160 --> 00:30:56.620
is deployed to run in the
context of the user, which

00:30:56.620 --> 00:30:58.100
definitely helps
in that regard.

00:30:58.100 --> 00:30:59.570
ERIC KOLEDA: It helps with the
quotas a little bit and

00:30:59.570 --> 00:31:01.090
running in the context of the
user, but something like

00:31:01.090 --> 00:31:04.270
ScriptDb, for instance, has
limits that are tied to the

00:31:04.270 --> 00:31:06.380
developer, so you do want
to be careful there.

00:31:06.380 --> 00:31:06.953
KALYAN REDDY: Yup.

00:31:06.953 --> 00:31:08.460
All right, next question.

00:31:08.460 --> 00:31:12.410
Any news on access to custom
properties on Google Docs from

00:31:12.410 --> 00:31:13.050
Apps Script.

00:31:13.050 --> 00:31:13.390
ERIC KOLEDA: Yes.

00:31:13.390 --> 00:31:15.290
KALYAN REDDY: Are ther
workarounds in the meantime?

00:31:15.290 --> 00:31:18.570
ERIC KOLEDA: So, I think this is
that the Google Drive SDK,

00:31:18.570 --> 00:31:21.610
they allow you to read and write
small properties to the

00:31:21.610 --> 00:31:22.590
document itself.

00:31:22.590 --> 00:31:24.690
In Apps Script you can set
properties on your script or

00:31:24.690 --> 00:31:27.560
on the user but not
on the document.

00:31:27.560 --> 00:31:31.120
So although that exists in the
Drive SDK, it hasn't yet made

00:31:31.120 --> 00:31:33.570
it into Drive App we're still
talking about whether that

00:31:33.570 --> 00:31:35.660
makes sense.

00:31:35.660 --> 00:31:38.840
And I think it should be
possible to call a Drive App--

00:31:38.840 --> 00:31:42.010
the Drive SDK from Apps Script
using URL fetch, but you'll

00:31:42.010 --> 00:31:43.530
have to do a lot of the plumbing
yourself when it

00:31:43.530 --> 00:31:47.120
comes to authorization, in
building the requests.

00:31:47.120 --> 00:31:49.490
So it could be a good
deal of work there.

00:31:49.490 --> 00:31:51.430
I do know that some of our top
contributors have built

00:31:51.430 --> 00:31:54.900
wrapper libraries that allow you
to call into services and

00:31:54.900 --> 00:31:56.140
features that we
don't support.

00:31:56.140 --> 00:31:58.360
So you may want to investigate
if they've already solved this

00:31:58.360 --> 00:31:59.980
problem or if they'd be
willing to add it in.

00:31:59.980 --> 00:32:01.680
KALYAN REDDY: And a great place
to look that up is in

00:32:01.680 --> 00:32:03.420
the Apps Script community
on +.

00:32:03.420 --> 00:32:04.510
ERIC KOLEDA: On Google+,
we have a very

00:32:04.510 --> 00:32:06.135
active community there.

00:32:06.135 --> 00:32:07.070
KALYAN REDDY: All right,
final question.

00:32:07.070 --> 00:32:07.740
ERIC KOLEDA: Yeah, just about
out of time, yeah.

00:32:07.740 --> 00:32:08.305
Let's wrap it up.

00:32:08.305 --> 00:32:10.670
KALYAN REDDY: All right, final
question is since App Script

00:32:10.670 --> 00:32:13.390
web apps are served from a non
Google domain, Google user

00:32:13.390 --> 00:32:15.960
content, why can't there be less
restrictions, evaluating

00:32:15.960 --> 00:32:18.010
HTML strips, many things,
and cannot

00:32:18.010 --> 00:32:20.110
freely set HTTP headers?

00:32:20.110 --> 00:32:21.550
ERIC KOLEDA: So I think
Luca's here with us.

00:32:21.550 --> 00:32:24.770
I looked into this earlier today
I'm pretty sure it's not

00:32:24.770 --> 00:32:26.020
served off Google
user content.

00:32:26.020 --> 00:32:29.210
Now, if you're using the HTML
service, it's served off of

00:32:29.210 --> 00:32:32.390
scriptgoogle.com If you're using
the content service, it

00:32:32.390 --> 00:32:36.620
does do a redirect from
scriptgoogle.com to Google

00:32:36.620 --> 00:32:37.880
user content.

00:32:37.880 --> 00:32:40.810
But when you're serving HTML
service HTML it is served off

00:32:40.810 --> 00:32:44.200
scriptgoogle.com and that allows
you to do some things

00:32:44.200 --> 00:32:46.900
like easily integrate other
Google services because you're

00:32:46.900 --> 00:32:48.810
already past your Google
information, your login

00:32:48.810 --> 00:32:50.460
information to the web page.

00:32:50.460 --> 00:32:52.210
Because of that, we do need
to be restrictive.

00:32:52.210 --> 00:32:55.860
We don't want someone's
JavaScript code messing with

00:32:55.860 --> 00:32:58.850
your session, or doing things
on your behalf other than

00:32:58.850 --> 00:33:00.662
they've been authorized to do.

00:33:00.662 --> 00:33:02.610
LUCA: OK.

00:33:02.610 --> 00:33:06.250
I guess the final thing is, in
my use case was that I needed

00:33:06.250 --> 00:33:09.860
to use specific [INAUDIBLE],
like I had to return different

00:33:09.860 --> 00:33:11.680
concept types, like
there's one called

00:33:11.680 --> 00:33:15.350
application/rdf+xml, something
like that.

00:33:15.350 --> 00:33:18.220
And I couldn't do that so I was
just wondering if it's a

00:33:18.220 --> 00:33:18.875
little more flexible.

00:33:18.875 --> 00:33:22.380
But now that I guess it's like
one of those things that isn't

00:33:22.380 --> 00:33:25.220
meant for it to be
used in that way.

00:33:25.220 --> 00:33:26.130
ERIC KOLEDA: Ah, got you.

00:33:26.130 --> 00:33:29.400
Well so the content service
does allow you to serve

00:33:29.400 --> 00:33:31.420
arbitrary file types,
however-- well, not

00:33:31.420 --> 00:33:31.990
arbitrary--

00:33:31.990 --> 00:33:33.780
serve various file types.

00:33:33.780 --> 00:33:35.880
But ones we limit to
a certain enum.

00:33:35.880 --> 00:33:37.880
So if there's something that's
missing in there that you

00:33:37.880 --> 00:33:39.900
think you'd like to see you can
file a feature request for

00:33:39.900 --> 00:33:42.710
that and it's not too much work
for us to add that in.

00:33:42.710 --> 00:33:43.200
LUCIANO PANEPUCCI: All right.

00:33:43.200 --> 00:33:44.670
ERIC KOLEDA: Great.

00:33:44.670 --> 00:33:45.160
All right.

00:33:45.160 --> 00:33:47.410
Well I think that does it for
today's episode of Google Apps

00:33:47.410 --> 00:33:48.850
Unscripted.

00:33:48.850 --> 00:33:51.130
If you have any questions in the
meantime before our next

00:33:51.130 --> 00:33:53.680
episode, which is probably going
to be a month from now,

00:33:53.680 --> 00:33:55.690
feel free to reach us on
Stack Overflow, or

00:33:55.690 --> 00:33:58.080
talk to us on Google+.

00:33:58.080 --> 00:34:01.070
And yes, stay tuned to the blog
for more announcements.

00:34:01.070 --> 00:34:06.130
Our release notes are updated
weekly by our very own Kalyan.

00:34:06.130 --> 00:34:08.620
So yeah, plenty of ways
you can stay in touch

00:34:08.620 --> 00:34:09.370
outside of the show.

00:34:09.370 --> 00:34:12.139
But if not, we'll see you
again next month.

00:34:12.139 --> 00:34:12.630
KALYAN REDDY: Thanks
for joining us.

00:34:12.630 --> 00:34:14.064
ERIC KOLEDA: Thanks, everyone.

00:34:14.064 --> 00:34:15.020
LUCA: See you guys.

00:34:15.020 --> 00:35:13.943
[MUSIC PLAYING]

