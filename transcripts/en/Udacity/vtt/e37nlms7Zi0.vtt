WEBVTT
Kind: captions
Language: en

00:00:00.075 --> 00:00:02.620
Alright, with just a couple more definitions we'll be able

00:00:02.620 --> 00:00:06.890
to nail down what PAC Learning is. So let's consider a,

00:00:06.890 --> 00:00:09.610
concept class C. That is to say that the set

00:00:09.610 --> 00:00:12.510
from which the concept that we're trying to learn comes from.

00:00:12.510 --> 00:00:15.510
L is our learner. H is the hypothesis space, so

00:00:15.510 --> 00:00:19.400
it's the set of, of mappings that the learner is going to

00:00:19.400 --> 00:00:22.820
consider. N is going to be the size of that space.

00:00:22.820 --> 00:00:25.650
So kind of the space of the hypotheses that are being considered.

00:00:25.650 --> 00:00:27.580
D is that distribution of inputs like we looked at

00:00:27.580 --> 00:00:31.640
before. Then we got Greek letters epsilon and delta, where epsilon

00:00:31.640 --> 00:00:33.880
is our error goal. Which is to say we would

00:00:33.880 --> 00:00:38.230
like the error in the hypothesis that we. Produce to be

00:00:38.230 --> 00:00:40.330
no bigger than epsilon. It could be smaller, that'd be

00:00:40.330 --> 00:00:43.110
great. It could be zero, that'd be awesome. But it can't

00:00:43.110 --> 00:00:46.590
be bigger than epsilon. But, we could get really unlucky and

00:00:46.590 --> 00:00:50.770
actually not meet our error goal. And so delta is what

00:00:50.770 --> 00:00:54.940
allows us to set a, a kind of uncertainty goal or certainty goal, which

00:00:54.940 --> 00:00:59.330
is to say, that with probability one minus delta, the algorithm has to work.

00:00:59.330 --> 00:01:01.910
&gt;&gt; And by work, you mean has to. Be able

00:01:01.910 --> 00:01:04.930
to produce a true error, less than or equal to epsilon.

00:01:04.930 --> 00:01:05.960
&gt;&gt; Exactly.

00:01:05.960 --> 00:01:08.320
&gt;&gt; So why can't we always force epsilon to

00:01:08.320 --> 00:01:11.050
be zero, and, you know, delta to be zero?

00:01:11.050 --> 00:01:13.610
&gt;&gt; Right, to be absolutely sure that we get zero

00:01:13.610 --> 00:01:16.110
error. So the, part of it is because we are sampling

00:01:16.110 --> 00:01:19.290
training examples from this distribution D. and it's always

00:01:19.290 --> 00:01:22.370
possible that we, for example, unless well, as long as

00:01:22.370 --> 00:01:27.320
there's probability mass on more than one example, there's always

00:01:27.320 --> 00:01:30.760
a probability that we draw a fine sample that only

00:01:30.760 --> 00:01:33.690
ever gives up one example over and over again. That's

00:01:33.690 --> 00:01:36.320
fair. So we just have to be really careful about

00:01:36.320 --> 00:01:38.930
that. So, so if we're that unlucky it's very unlikely

00:01:38.930 --> 00:01:41.130
to happen but when that happens our error is going to

00:01:41.130 --> 00:01:43.900
be very high. But that's okay because it won't happen very often.

00:01:43.900 --> 00:01:46.740
&gt;&gt; Okay sure,sure. So basically you can't force it

00:01:46.740 --> 00:01:49.600
to be zero under all circumstances either epsilon or

00:01:49.600 --> 00:01:51.180
delta you can't force them to be zero under

00:01:51.180 --> 00:01:54.550
all circumstances. So you have to allow somewhere to. Exactly,

00:01:54.550 --> 00:01:56.410
it gives us the wiggle room we need. Thats

00:01:56.410 --> 00:01:58.930
actually where this name PAC comes from. It stands

00:01:58.930 --> 00:02:04.330
for probably appoximatly correct. I see. So we would

00:02:04.330 --> 00:02:06.190
like to be correct, but then we are just going

00:02:06.190 --> 00:02:08.940
to keep adding weasel words until we can actually achieve it.

00:02:08.940 --> 00:02:11.320
We would like to be correct, but we cant be exactly

00:02:11.320 --> 00:02:14.180
correct, so let's be approxiiamtly correct. But we can't be approximately

00:02:14.180 --> 00:02:17.540
correct all the time, so let's only probably be approximately correct.

00:02:17.540 --> 00:02:21.210
&gt;&gt; So using your, your, your words here you

00:02:21.210 --> 00:02:24.150
could have called that one minus delta epsilon correct.

00:02:24.150 --> 00:02:27.770
&gt;&gt; Yes, right. That's exactly right. That's what the Greek

00:02:27.770 --> 00:02:31.010
letters are playing, and correct is the, this you know,

00:02:31.010 --> 00:02:35.200
error Sub D of H equals 0.

00:02:35.200 --> 00:02:38.160
&gt;&gt; Yeah, so 1 9 is delta upsilon error sub D of H

00:02:38.160 --> 00:02:39.630
equals 0 doesn't roll off the tongue

00:02:39.630 --> 00:02:41.590
quite as well as probably approximately correct.

00:02:41.590 --> 00:02:42.600
&gt;&gt; I would agree with that.

00:02:42.600 --> 00:02:43.500
&gt;&gt; Okay fair enough.

