WEBVTT
Kind: captions
Language: en

00:00:01.437 --> 00:00:04.311
[MUSIC PLAYING]

00:00:30.000 --> 00:00:33.500
[MUSIC PLAYING]

00:00:35.170 --> 00:00:37.420
WESLEY CHUN: What we just
saw was bot power in action,

00:00:37.420 --> 00:00:39.130
the ability to query
for information

00:00:39.130 --> 00:00:41.950
from one or more sources and
have it summarize succinctly

00:00:41.950 --> 00:00:43.360
for all in a chat room.

00:00:43.360 --> 00:00:44.330
Hi, everyone.

00:00:44.330 --> 00:00:46.780
Welcome to another episode
of the G Suite Dev show.

00:00:46.780 --> 00:00:48.760
I'm your host, Wesley Chun.

00:00:48.760 --> 00:00:51.460
I'm excited to introduce you
to the Hangouts Chat developer

00:00:51.460 --> 00:00:53.110
platform in API.

00:00:53.110 --> 00:00:55.630
Of course we can converse
with colleagues in chat rooms,

00:00:55.630 --> 00:00:57.850
but making data requests
or automating work

00:00:57.850 --> 00:01:00.100
at the same time is
much more powerful.

00:01:00.100 --> 00:01:02.470
In today's intro video,
I'll show you not one,

00:01:02.470 --> 00:01:05.080
but two ways of
building chat bots.

00:01:05.080 --> 00:01:07.480
Let's start with the Hello
World for Hangouts Chat,

00:01:07.480 --> 00:01:08.620
the echo bot.

00:01:08.620 --> 00:01:12.430
Here you can see it's a full
one-line JavaScript glory.

00:01:12.430 --> 00:01:14.770
As you can see, the function
name is called onMessage.

00:01:14.770 --> 00:01:17.440
And it takes an event object,
as a result of the message that

00:01:17.440 --> 00:01:19.870
was posted in the chat
room, and all our bot

00:01:19.870 --> 00:01:22.870
does is greet the user and
echoes back what they wrote.

00:01:22.870 --> 00:01:25.120
Can't get any easier than this.

00:01:25.120 --> 00:01:27.190
Check the docs for a
slightly longer quickstart

00:01:27.190 --> 00:01:28.330
for more info.

00:01:28.330 --> 00:01:30.950
However, your bot will
likely be more complex.

00:01:30.950 --> 00:01:33.460
So we need to investigate
writing bots a little further

00:01:33.460 --> 00:01:36.110
before diving into more code.

00:01:36.110 --> 00:01:39.160
The next step is to discuss some
basics on how to build a bot

00:01:39.160 --> 00:01:40.420
and how they work.

00:01:40.420 --> 00:01:42.640
We do this by
recognizing what happens

00:01:42.640 --> 00:01:47.050
to bots, or in other words,
what events are sent to bots.

00:01:47.050 --> 00:01:48.940
Once a bot is added
to a chat room,

00:01:48.940 --> 00:01:50.650
users can interact with it.

00:01:50.650 --> 00:01:53.050
When users message
a bot, Hangouts Chat

00:01:53.050 --> 00:01:55.000
sends the message
to your bot, along

00:01:55.000 --> 00:01:56.980
with a message type
and other data.

00:01:56.980 --> 00:01:58.810
There are four message types.

00:01:58.810 --> 00:02:00.670
ADDED_TO_SPACE is
the first message

00:02:00.670 --> 00:02:04.530
a bot gets when it's added to a
room or a Direct Message or DM.

00:02:04.530 --> 00:02:07.060
Your bot would typically
send back a message like,

00:02:07.060 --> 00:02:09.490
thanks for adding
me to this room.

00:02:09.490 --> 00:02:12.067
The second message type
is REMOVED_FROM_SPACE.

00:02:12.067 --> 00:02:13.900
This is a message that's
received by the bot

00:02:13.900 --> 00:02:16.670
after it has been removed
from a room, or a DM.

00:02:16.670 --> 00:02:20.170
Since your bot's been
removed, there's no response.

00:02:20.170 --> 00:02:23.410
MESSAGE is a normal message
that's sent by a user to a bot,

00:02:23.410 --> 00:02:25.660
and these are the most
common, as you can imagine.

00:02:25.660 --> 00:02:27.400
Your bot has to
service the request

00:02:27.400 --> 00:02:30.160
and send back an
appropriate response.

00:02:30.160 --> 00:02:32.530
The last message
type is CARD_CLICKED.

00:02:32.530 --> 00:02:35.380
This means a user clicked on
an interactive card in Hangouts

00:02:35.380 --> 00:02:37.320
Chat instead of
sending a message.

00:02:37.320 --> 00:02:40.230
Your bot either sends an
appropriate response or updates

00:02:40.230 --> 00:02:42.550
the UI card or maybe both.

00:02:42.550 --> 00:02:44.840
JavaScript and Python are
two popular platforms,

00:02:44.840 --> 00:02:46.930
so we'll demo bots
in each one for you.

00:02:46.930 --> 00:02:48.970
The JavaScript runs
on Google Apps Script,

00:02:48.970 --> 00:02:51.910
while its Python equivalent
runs on Google App Engine.

00:02:51.910 --> 00:02:54.370
Apps Script has basic event
handling for developers

00:02:54.370 --> 00:02:56.304
and calls the
appropriately-named function.

00:02:56.304 --> 00:02:57.970
One of the reasons
why using Apps Script

00:02:57.970 --> 00:03:00.142
is easier than other
platforms, you just

00:03:00.142 --> 00:03:02.350
have to name your functions
with the exact names that

00:03:02.350 --> 00:03:04.750
are supported for
each message type.

00:03:04.750 --> 00:03:06.520
App Engine is a bit
lower level, so you

00:03:06.520 --> 00:03:09.520
need to grab the request
body, parse a JSON payload,

00:03:09.520 --> 00:03:11.445
and determine the message
type and contents.

00:03:11.445 --> 00:03:12.820
In other words,
you need to check

00:03:12.820 --> 00:03:16.180
all the events that come in and
see what message type it is.

00:03:16.180 --> 00:03:18.340
Then take the
appropriate action.

00:03:18.340 --> 00:03:21.490
Now it's time to talk
about our sample bot today.

00:03:21.490 --> 00:03:23.290
Asking your colleagues
to vote on something

00:03:23.290 --> 00:03:26.080
is fairly common, whether it
be who's going out to lunch

00:03:26.080 --> 00:03:28.510
or who's in for the
basketball game after work.

00:03:28.510 --> 00:03:30.820
Let's build a simple vote
bot by which participants

00:03:30.820 --> 00:03:34.390
can issue an up or down vote,
as well as create a new vote.

00:03:34.390 --> 00:03:37.210
Let's go to a computer so
I can show you this example

00:03:37.210 --> 00:03:39.610
in both JavaScript and Python.

00:03:39.610 --> 00:03:42.310
The samples we're looking at
in this Dev Bot video are both

00:03:42.310 --> 00:03:44.920
available on GitHub, so
feel free to follow along

00:03:44.920 --> 00:03:46.370
at
GitHub.com/gsuitedevs/hangouts

00:03:46.370 --> 00:03:50.030
chat samples.

00:03:50.030 --> 00:03:52.510
The bot we're implementing
is a text-only version

00:03:52.510 --> 00:03:53.710
of the vote bot.

00:03:53.710 --> 00:03:56.110
Let's look at it in
Apps Script first.

00:03:56.110 --> 00:03:57.980
Here's what the vote
card looks like.

00:03:57.980 --> 00:04:01.210
You'll see plus 1 and minus 1
buttons for up and down votes,

00:04:01.210 --> 00:04:03.610
as well as a new button for
starting new votes, which

00:04:03.610 --> 00:04:05.690
is the default action.

00:04:05.690 --> 00:04:06.220
OK.

00:04:06.220 --> 00:04:09.190
Now we can look at the
votetextbot.js script.

00:04:09.190 --> 00:04:10.720
Scrolling down to
the bottom, you'll

00:04:10.720 --> 00:04:13.010
see how Apps Script
processes the message types,

00:04:13.010 --> 00:04:15.340
you know, ADDED_TO_SPACE,
REMOVED_FROM_SPACE,

00:04:15.340 --> 00:04:16.819
MESSAGE, and CARD_CLICKED.

00:04:16.819 --> 00:04:19.360
Well, it does so by calling the
corresponding similarly-named

00:04:19.360 --> 00:04:21.670
On function we
looked at earlier.

00:04:21.670 --> 00:04:23.530
In the vote bot,
we're only processing

00:04:23.530 --> 00:04:25.450
MESSAGE and
CARD_CLICKED messages

00:04:25.450 --> 00:04:28.030
and not taking any action
when the bot is added to

00:04:28.030 --> 00:04:30.130
or removed from the space.

00:04:30.130 --> 00:04:32.260
onMessage ignores
whatever message the user

00:04:32.260 --> 00:04:35.800
has sent, creates a new
vote card, and returns it.

00:04:35.800 --> 00:04:38.350
onCardClick is where
the real magic happens.

00:04:38.350 --> 00:04:41.050
If new vote is selected, it
does the exact same thing

00:04:41.050 --> 00:04:43.330
as when a user sends
any message to the bot.

00:04:43.330 --> 00:04:45.080
It creates a new vote.

00:04:45.080 --> 00:04:46.720
When up or down
vote are clicked,

00:04:46.720 --> 00:04:49.270
those actions are passed as a
string parameter in the event

00:04:49.270 --> 00:04:51.580
object along with the
current vote count, which

00:04:51.580 --> 00:04:53.530
was converted to a string.

00:04:53.530 --> 00:04:55.390
When the vote count
variable is created,

00:04:55.390 --> 00:04:58.360
that value must first be
converted back to an integer

00:04:58.360 --> 00:05:00.370
so that it can be
incremented on an up vote

00:05:00.370 --> 00:05:02.590
or decremented on a down vote.

00:05:02.590 --> 00:05:05.500
Now when the card payload is
created using createMessage,

00:05:05.500 --> 00:05:09.070
the command to update the
current card only if a new vote

00:05:09.070 --> 00:05:12.460
was not selected, meaning
an up or down vote.

00:05:12.460 --> 00:05:14.020
Scrolling up to
createMessage, you'll

00:05:14.020 --> 00:05:16.300
see that it converts that
vote count to a string,

00:05:16.300 --> 00:05:19.060
as mentioned before, then
uses the shouldUpdate flag

00:05:19.060 --> 00:05:21.490
to indicate a new
vote card, if true,

00:05:21.490 --> 00:05:23.560
or update the existing
card otherwise,

00:05:23.560 --> 00:05:25.580
meaning an up vote or down vote.

00:05:25.580 --> 00:05:27.880
Then it pieces the card
together section by section

00:05:27.880 --> 00:05:29.210
as JSON markup.

00:05:29.210 --> 00:05:32.140
This gets returned to Hangouts
Chat, which then renders a card

00:05:32.140 --> 00:05:35.160
to users in the chat room.

00:05:35.160 --> 00:05:37.900
There are no surprises
when you run this example.

00:05:37.900 --> 00:05:41.300
Clicking on plus 1 ups
the count, while minus 1

00:05:41.300 --> 00:05:42.380
brings it down.

00:05:42.380 --> 00:05:44.750
And NEW starts a new vote.

00:05:44.750 --> 00:05:47.990
Now, if we hop up and over to
the Python App Engine version,

00:05:47.990 --> 00:05:52.280
the core functionality is
also in a single file, bot.py,

00:05:52.280 --> 00:05:55.490
plus the App Engine
app.yaml config file.

00:05:55.490 --> 00:05:57.380
Scrolling down to
the bottom again,

00:05:57.380 --> 00:05:59.780
you'll see that it's slightly
more lower level than Apps

00:05:59.780 --> 00:06:02.690
Script version, because you have
to introspect the payload that

00:06:02.690 --> 00:06:05.640
comes from the
HTTP post request.

00:06:05.640 --> 00:06:08.450
There's an if, else
if, else that takes

00:06:08.450 --> 00:06:10.490
the same actions as the
Apps Script version,

00:06:10.490 --> 00:06:12.410
depending on the message type.

00:06:12.410 --> 00:06:14.960
Similarly, there's an
analog to create message

00:06:14.960 --> 00:06:17.180
that puts together the
corresponding JSON payload

00:06:17.180 --> 00:06:19.310
returned to Hangouts Chat.

00:06:19.310 --> 00:06:20.610
We won't run this version.

00:06:20.610 --> 00:06:22.970
But trust me, it's
the same thing.

00:06:22.970 --> 00:06:25.340
Overall, I find this
bot useful, because it's

00:06:25.340 --> 00:06:28.100
a bit more useful than what
you get from the quickstarts,

00:06:28.100 --> 00:06:31.320
and you get to learn
about interactive cards.

00:06:31.320 --> 00:06:32.450
Not bad, right?

00:06:32.450 --> 00:06:35.130
We picked Apps Script and
Python App Engine for a reason.

00:06:35.130 --> 00:06:37.640
They require few lines
of code and are portable.

00:06:37.640 --> 00:06:39.470
For example, the
Apps Script sample

00:06:39.470 --> 00:06:41.750
can be ported to Cloud
functions or node.js

00:06:41.750 --> 00:06:43.160
in a straightforward way.

00:06:43.160 --> 00:06:46.434
Similarly, the Python example
can be ported to Flask.

00:06:46.434 --> 00:06:48.350
Then you can run that
app on either App Engine

00:06:48.350 --> 00:06:49.922
or your own stack.

00:06:49.922 --> 00:06:51.380
You may have noticed
that bots work

00:06:51.380 --> 00:06:53.425
a bit differently from
standard APIs, you know,

00:06:53.425 --> 00:06:55.550
where your app gets some
input, say, from a website

00:06:55.550 --> 00:06:56.622
or other form of input.

00:06:56.622 --> 00:06:58.580
And then you're up with
the proper credentials.

00:06:58.580 --> 00:07:01.187
We'll make a call to the API,
which processes the requests,

00:07:01.187 --> 00:07:03.020
and then sends back a
response, to which you

00:07:03.020 --> 00:07:06.782
respond to your user-- you know,
typical client server stuff.

00:07:06.782 --> 00:07:08.240
But bots are a
little bit different

00:07:08.240 --> 00:07:09.740
in that the original
request comes

00:07:09.740 --> 00:07:11.390
from a user in a
chat room, which

00:07:11.390 --> 00:07:14.480
means Hangouts Chat is
what gets the message,

00:07:14.480 --> 00:07:17.040
and its servers
contact your apps.

00:07:17.040 --> 00:07:19.070
You service the request
and respond back

00:07:19.070 --> 00:07:21.440
to Hangouts Chat, which then
renders your response back

00:07:21.440 --> 00:07:22.801
into the chat room.

00:07:22.801 --> 00:07:23.300
All right.

00:07:23.300 --> 00:07:24.890
The roles are almost
reversed, meaning

00:07:24.890 --> 00:07:27.410
your bot is kind of
like the API, servicing

00:07:27.410 --> 00:07:28.760
requests made in chat rooms.

00:07:28.760 --> 00:07:30.260
Does that makes sense?

00:07:30.260 --> 00:07:31.130
All right.

00:07:31.130 --> 00:07:33.800
So that means that bots
generally live on some server

00:07:33.800 --> 00:07:34.700
somewhere.

00:07:34.700 --> 00:07:36.530
Now let's talk where.

00:07:36.530 --> 00:07:40.279
A wide variety of platforms
that host bots are supported.

00:07:40.279 --> 00:07:42.320
I'll argue that Google
Apps Script is the easiest

00:07:42.320 --> 00:07:43.160
to get started with.

00:07:43.160 --> 00:07:45.790
You code in JavaScript, but
more importantly, Apps Script,

00:07:45.790 --> 00:07:48.350
gives you and your data
and your bot access

00:07:48.350 --> 00:07:51.530
to data and functionality from
Gmail, Google Drive, Calendar,

00:07:51.530 --> 00:07:53.880
Docs, Sheets, Slides, and more.

00:07:53.880 --> 00:07:55.610
Best of all, Apps
Script is serverless,

00:07:55.610 --> 00:07:57.270
meaning that Google
hosts your app.

00:07:57.270 --> 00:07:59.645
So you don't need to submit
up your own VM or other stack

00:07:59.645 --> 00:08:00.771
components.

00:08:00.771 --> 00:08:03.020
If you want to code in
JavaScript, but more like Node,

00:08:03.020 --> 00:08:05.727
but also stay serverless,
you have two options.

00:08:05.727 --> 00:08:08.060
Want tighter integration with
the Google Cloud Platform,

00:08:08.060 --> 00:08:10.880
or GCP for short,
instead of G Suite?

00:08:10.880 --> 00:08:13.100
Well, then choose
Google Cloud Functions.

00:08:13.100 --> 00:08:15.670
Building a mobile app or a
mobile web app with Firebase?

00:08:15.670 --> 00:08:18.027
Well, then choose Cloud
Functions for Firebase.

00:08:18.027 --> 00:08:19.610
Want to read more
about these choices?

00:08:19.610 --> 00:08:20.984
Well, check this
page in the docs

00:08:20.984 --> 00:08:23.750
and realize they're both
the same product, but tuned

00:08:23.750 --> 00:08:26.015
for either the
cloud or Firebase.

00:08:26.015 --> 00:08:27.890
Still want to live in
the land of serverless,

00:08:27.890 --> 00:08:29.630
but want more choices
and languages?

00:08:29.630 --> 00:08:32.130
Then consider Google App
Engine, platform as a service,

00:08:32.130 --> 00:08:33.770
or app hosting in the cloud.

00:08:33.770 --> 00:08:35.929
We showed you Python
earlier, but App Engine also

00:08:35.929 --> 00:08:39.110
supports Java,
PHP, Go, and more.

00:08:39.110 --> 00:08:40.100
Need more control?

00:08:40.100 --> 00:08:41.850
Well, then you're going
to have to spin up

00:08:41.850 --> 00:08:43.100
a VM to host your bot.

00:08:43.100 --> 00:08:45.800
You can use Google Compute
Engine or any public or private

00:08:45.800 --> 00:08:47.807
cloud provider.

00:08:47.807 --> 00:08:50.390
Now that you may have noticed,
we didn't do any authorization,

00:08:50.390 --> 00:08:52.910
nor did we use the
Hangouts Chat API.

00:08:52.910 --> 00:08:55.130
That's because we created
a synchronous bot,

00:08:55.130 --> 00:08:57.320
meaning it was able to
pull in those sales numbers

00:08:57.320 --> 00:08:59.630
and respond back to
the user immediately.

00:08:59.630 --> 00:09:03.050
Some queries may take longer or
have to talk to more systems.

00:09:03.050 --> 00:09:04.550
In those cases,
you can build a bot

00:09:04.550 --> 00:09:07.490
that responds asynchronously
when results are ready.

00:09:07.490 --> 00:09:10.070
In these cases, you would use
the API or other technique

00:09:10.070 --> 00:09:11.840
for responding back
to the chat room.

00:09:11.840 --> 00:09:14.310
We'll take a look at
those in another video.

00:09:14.310 --> 00:09:16.740
For now, we want you to
have enough to get started.

00:09:16.740 --> 00:09:20.270
Check out the first link to
learn more about bot concepts.

00:09:20.270 --> 00:09:22.460
The next link is for those
who want to learn more

00:09:22.460 --> 00:09:24.590
about actually building bots.

00:09:24.590 --> 00:09:26.870
Finally, if you're not
ready to build bots yet

00:09:26.870 --> 00:09:28.370
but want to see
more examples, we've

00:09:28.370 --> 00:09:30.650
got a page in the
docs for you too.

00:09:30.650 --> 00:09:33.500
Got your vote bot working and
want to break out to the box?

00:09:33.500 --> 00:09:34.880
Well, here's a
challenge for you.

00:09:34.880 --> 00:09:37.900
Make any or all of these
five additional upgrades.

00:09:37.900 --> 00:09:39.950
One, add images.

00:09:39.950 --> 00:09:43.420
Two, keep track of who
has voted and who hasn't.

00:09:43.420 --> 00:09:45.950
Three, don't let the
vote count go below zero.

00:09:45.950 --> 00:09:50.060
Four, only allow down votes
from users who have at least one

00:09:50.060 --> 00:09:51.020
up vote.

00:09:51.020 --> 00:09:53.120
And five, the user
who starts a new vote

00:09:53.120 --> 00:09:54.590
should be able to
choose a topic,

00:09:54.590 --> 00:09:57.757
you know, like lunch,
after-work game, and so on.

00:09:57.757 --> 00:10:00.090
By the way, the first one has
already been done for you.

00:10:00.090 --> 00:10:03.320
So check it out in the docs
page on interactive cards.

00:10:03.320 --> 00:10:05.120
Hope you're ready
to build some bots.

00:10:05.120 --> 00:10:07.880
No longer are chat rooms
just for conversations.

00:10:07.880 --> 00:10:09.500
With feature-rich,
intelligent bots,

00:10:09.500 --> 00:10:12.560
users can automate tasks,
get critical information,

00:10:12.560 --> 00:10:15.375
or do other heavy lifting
with just a simple message.

00:10:15.375 --> 00:10:17.000
We're excited at the
possibilities that

00:10:17.000 --> 00:10:19.730
await both developers and G
Suite users on the new Hangouts

00:10:19.730 --> 00:10:21.111
Chat developer platform.

00:10:21.111 --> 00:10:22.610
Be sure to subscribe
to our channel,

00:10:22.610 --> 00:10:24.140
and tune in again next time.

00:10:24.140 --> 00:10:26.690
This is Wesley Chun from Google,
and we'll see you next time

00:10:26.690 --> 00:10:28.350
upstairs in the G Suite.

00:10:28.350 --> 00:10:31.700
[MUSIC PLAYING]

