WEBVTT
Kind: captions
Language: en

00:00:01.420 --> 00:00:03.720
 
[Music]

00:00:03.720 --> 00:00:03.730
[Music]
 

00:00:03.730 --> 00:00:06.610
[Music]
hell I'm Jeffrey Franco I'm a tech lead

00:00:06.610 --> 00:00:06.620
hell I'm Jeffrey Franco I'm a tech lead
 

00:00:06.620 --> 00:00:08.380
hell I'm Jeffrey Franco I'm a tech lead
on Android studio and I'm they're

00:00:08.380 --> 00:00:08.390
on Android studio and I'm they're
 

00:00:08.390 --> 00:00:10.060
on Android studio and I'm they're
responsible for programming languages

00:00:10.060 --> 00:00:10.070
responsible for programming languages
 

00:00:10.070 --> 00:00:13.150
responsible for programming languages
and compilers and I'm Hadi developer

00:00:13.150 --> 00:00:13.160
and compilers and I'm Hadi developer
 

00:00:13.160 --> 00:00:19.780
and compilers and I'm Hadi developer
advocate at Jeb brains okay so it's been

00:00:19.780 --> 00:00:19.790
advocate at Jeb brains okay so it's been
 

00:00:19.790 --> 00:00:21.400
advocate at Jeb brains okay so it's been
two years since Google announced

00:00:21.400 --> 00:00:21.410
two years since Google announced
 

00:00:21.410 --> 00:00:23.020
two years since Google announced
Copeland support for Android and

00:00:23.020 --> 00:00:23.030
Copeland support for Android and
 

00:00:23.030 --> 00:00:24.820
Copeland support for Android and
yesterday we announced that it was going

00:00:24.820 --> 00:00:24.830
yesterday we announced that it was going
 

00:00:24.830 --> 00:00:27.160
yesterday we announced that it was going
: first so we figured we give you some

00:00:27.160 --> 00:00:27.170
: first so we figured we give you some
 

00:00:27.170 --> 00:00:31.330
: first so we figured we give you some
background on this and so of course we

00:00:31.330 --> 00:00:31.340
background on this and so of course we
 

00:00:31.340 --> 00:00:34.090
background on this and so of course we
didn't start two years ago we took quite

00:00:34.090 --> 00:00:34.100
didn't start two years ago we took quite
 

00:00:34.100 --> 00:00:36.580
didn't start two years ago we took quite
some time to get things ready for

00:00:36.580 --> 00:00:36.590
some time to get things ready for
 

00:00:36.590 --> 00:00:38.740
some time to get things ready for
Copeland on Android and really started

00:00:38.740 --> 00:00:38.750
Copeland on Android and really started
 

00:00:38.750 --> 00:00:40.650
Copeland on Android and really started
about three three and a half years ago

00:00:40.650 --> 00:00:40.660
about three three and a half years ago
 

00:00:40.660 --> 00:00:43.120
about three three and a half years ago
it was a bunch of us language geeks at

00:00:43.120 --> 00:00:43.130
it was a bunch of us language geeks at
 

00:00:43.130 --> 00:00:45.720
it was a bunch of us language geeks at
Google Tourneur beaver monkey me

00:00:45.720 --> 00:00:45.730
Google Tourneur beaver monkey me
 

00:00:45.730 --> 00:00:47.950
Google Tourneur beaver monkey me
starting to play with Copeland and like

00:00:47.950 --> 00:00:47.960
starting to play with Copeland and like
 

00:00:47.960 --> 00:00:50.530
starting to play with Copeland and like
hey this is actually quite nice and of

00:00:50.530 --> 00:00:50.540
hey this is actually quite nice and of
 

00:00:50.540 --> 00:00:52.510
hey this is actually quite nice and of
course Android studio is based on

00:00:52.510 --> 00:00:52.520
course Android studio is based on
 

00:00:52.520 --> 00:00:54.970
course Android studio is based on
IntelliJ and intelligence arted using

00:00:54.970 --> 00:00:54.980
IntelliJ and intelligence arted using
 

00:00:54.980 --> 00:00:57.130
IntelliJ and intelligence arted using
Copeland in its own code base so we

00:00:57.130 --> 00:00:57.140
Copeland in its own code base so we
 

00:00:57.140 --> 00:00:58.990
Copeland in its own code base so we
start to see more and more code and

00:00:58.990 --> 00:00:59.000
start to see more and more code and
 

00:00:59.000 --> 00:01:01.510
start to see more and more code and
being used in Android studio and at the

00:01:01.510 --> 00:01:01.520
being used in Android studio and at the
 

00:01:01.520 --> 00:01:03.010
being used in Android studio and at the
same time we were getting a lot of

00:01:03.010 --> 00:01:03.020
same time we were getting a lot of
 

00:01:03.020 --> 00:01:04.869
same time we were getting a lot of
customer feedback from our customers

00:01:04.869 --> 00:01:04.879
customer feedback from our customers
 

00:01:04.879 --> 00:01:07.440
customer feedback from our customers
Rhys rewards surveys and ad-hoc

00:01:07.440 --> 00:01:07.450
Rhys rewards surveys and ad-hoc
 

00:01:07.450 --> 00:01:09.699
Rhys rewards surveys and ad-hoc
discussions at conferences like these

00:01:09.699 --> 00:01:09.709
discussions at conferences like these
 

00:01:09.709 --> 00:01:12.190
discussions at conferences like these
that people really like Kotlin and they

00:01:12.190 --> 00:01:12.200
that people really like Kotlin and they
 

00:01:12.200 --> 00:01:13.929
that people really like Kotlin and they
really would like Google to support it

00:01:13.929 --> 00:01:13.939
really would like Google to support it
 

00:01:13.939 --> 00:01:16.239
really would like Google to support it
because their companies would not adopt

00:01:16.239 --> 00:01:16.249
because their companies would not adopt
 

00:01:16.249 --> 00:01:20.050
because their companies would not adopt
Collin otherwise of course taking on a

00:01:20.050 --> 00:01:20.060
Collin otherwise of course taking on a
 

00:01:20.060 --> 00:01:21.910
Collin otherwise of course taking on a
new language like that is a big task so

00:01:21.910 --> 00:01:21.920
new language like that is a big task so
 

00:01:21.920 --> 00:01:25.239
new language like that is a big task so
we had to convince our directors that

00:01:25.239 --> 00:01:25.249
we had to convince our directors that
 

00:01:25.249 --> 00:01:27.760
we had to convince our directors that
this was something worth investing in

00:01:27.760 --> 00:01:27.770
this was something worth investing in
 

00:01:27.770 --> 00:01:30.190
this was something worth investing in
the best way we found to do this was to

00:01:30.190 --> 00:01:30.200
the best way we found to do this was to
 

00:01:30.200 --> 00:01:31.870
the best way we found to do this was to
just gather the vectors to code for a

00:01:31.870 --> 00:01:31.880
just gather the vectors to code for a
 

00:01:31.880 --> 00:01:33.969
just gather the vectors to code for a
couple days in Cortland and after that

00:01:33.969 --> 00:01:33.979
couple days in Cortland and after that
 

00:01:33.979 --> 00:01:36.519
couple days in Cortland and after that
they were sold so a couple months before

00:01:36.519 --> 00:01:36.529
they were sold so a couple months before
 

00:01:36.529 --> 00:01:39.370
they were sold so a couple months before
i/o 2017 we decided to go for it and

00:01:39.370 --> 00:01:39.380
i/o 2017 we decided to go for it and
 

00:01:39.380 --> 00:01:42.370
i/o 2017 we decided to go for it and
this meant so many meetings to set this

00:01:42.370 --> 00:01:42.380
this meant so many meetings to set this
 

00:01:42.380 --> 00:01:45.159
this meant so many meetings to set this
all up if you think as a tech leader or

00:01:45.159 --> 00:01:45.169
all up if you think as a tech leader or
 

00:01:45.169 --> 00:01:46.899
all up if you think as a tech leader or
manager you don't have enough time for

00:01:46.899 --> 00:01:46.909
manager you don't have enough time for
 

00:01:46.909 --> 00:01:48.550
manager you don't have enough time for
coding anymore try setting up a

00:01:48.550 --> 00:01:48.560
coding anymore try setting up a
 

00:01:48.560 --> 00:01:53.440
coding anymore try setting up a
foundation so we got this already one

00:01:53.440 --> 00:01:53.450
foundation so we got this already one
 

00:01:53.450 --> 00:01:55.599
foundation so we got this already one
day before coupling about before Google

00:01:55.599 --> 00:01:55.609
day before coupling about before Google
 

00:01:55.609 --> 00:01:58.239
day before coupling about before Google
i/o 2017 there was this big threat on

00:01:58.239 --> 00:01:58.249
i/o 2017 there was this big threat on
 

00:01:58.249 --> 00:02:00.459
i/o 2017 there was this big threat on
Android dev subreddit how Google is

00:02:00.459 --> 00:02:00.469
Android dev subreddit how Google is
 

00:02:00.469 --> 00:02:03.940
Android dev subreddit how Google is
never gonna embrace Scotland of course

00:02:03.940 --> 00:02:03.950
never gonna embrace Scotland of course
 

00:02:03.950 --> 00:02:05.800
never gonna embrace Scotland of course
we knew what was gonna happen with it

00:02:05.800 --> 00:02:05.810
we knew what was gonna happen with it
 

00:02:05.810 --> 00:02:09.999
we knew what was gonna happen with it
was so hard to not reply to that threat

00:02:09.999 --> 00:02:10.009
 
 

00:02:10.009 --> 00:02:13.000
 
so yeah two years ago Steph was on stage

00:02:13.000 --> 00:02:13.010
so yeah two years ago Steph was on stage
 

00:02:13.010 --> 00:02:15.130
so yeah two years ago Steph was on stage
announcing coupling support I think it

00:02:15.130 --> 00:02:15.140
announcing coupling support I think it
 

00:02:15.140 --> 00:02:16.300
announcing coupling support I think it
was the largest applause of the

00:02:16.300 --> 00:02:16.310
was the largest applause of the
 

00:02:16.310 --> 00:02:19.660
was the largest applause of the
developer keynote it was amazing of

00:02:19.660 --> 00:02:19.670
developer keynote it was amazing of
 

00:02:19.670 --> 00:02:22.030
developer keynote it was amazing of
course we all knew at both jetbrains and

00:02:22.030 --> 00:02:22.040
course we all knew at both jetbrains and
 

00:02:22.040 --> 00:02:24.490
course we all knew at both jetbrains and
Google that that meant that we had a lot

00:02:24.490 --> 00:02:24.500
Google that that meant that we had a lot
 

00:02:24.500 --> 00:02:25.929
Google that that meant that we had a lot
of work ahead of us to make sure that

00:02:25.929 --> 00:02:25.939
of work ahead of us to make sure that
 

00:02:25.939 --> 00:02:29.349
of work ahead of us to make sure that
Koplin worked well for Android and in

00:02:29.349 --> 00:02:29.359
Koplin worked well for Android and in
 

00:02:29.359 --> 00:02:31.569
Koplin worked well for Android and in
general and so today we want to show

00:02:31.569 --> 00:02:31.579
general and so today we want to show
 

00:02:31.579 --> 00:02:32.949
general and so today we want to show
some of the work we've done over the

00:02:32.949 --> 00:02:32.959
some of the work we've done over the
 

00:02:32.959 --> 00:02:34.780
some of the work we've done over the
last two years

00:02:34.780 --> 00:02:34.790
last two years
 

00:02:34.790 --> 00:02:36.759
last two years
Hoddy will talk about what happened to

00:02:36.759 --> 00:02:36.769
Hoddy will talk about what happened to
 

00:02:36.769 --> 00:02:38.199
Hoddy will talk about what happened to
Copeland in the last few years and then

00:02:38.199 --> 00:02:38.209
Copeland in the last few years and then
 

00:02:38.209 --> 00:02:39.490
Copeland in the last few years and then
I'll take it back and I'll talk about

00:02:39.490 --> 00:02:39.500
I'll take it back and I'll talk about
 

00:02:39.500 --> 00:02:41.910
I'll take it back and I'll talk about
what we did on the Android side

00:02:41.910 --> 00:02:41.920
what we did on the Android side
 

00:02:41.920 --> 00:02:47.349
what we did on the Android side
thank you so to start I want to just

00:02:47.349 --> 00:02:47.359
thank you so to start I want to just
 

00:02:47.359 --> 00:02:48.759
thank you so to start I want to just
mention about the Kotlin Foundation

00:02:48.759 --> 00:02:48.769
mention about the Kotlin Foundation
 

00:02:48.769 --> 00:02:51.069
mention about the Kotlin Foundation
which if you remember when Google

00:02:51.069 --> 00:02:51.079
which if you remember when Google
 

00:02:51.079 --> 00:02:52.839
which if you remember when Google
announced official supports two years

00:02:52.839 --> 00:02:52.849
announced official supports two years
 

00:02:52.849 --> 00:02:55.089
announced official supports two years
ago for Cortland we also briefly

00:02:55.089 --> 00:02:55.099
ago for Cortland we also briefly
 

00:02:55.099 --> 00:02:56.319
ago for Cortland we also briefly
mentioned that will be forming a

00:02:56.319 --> 00:02:56.329
mentioned that will be forming a
 

00:02:56.329 --> 00:02:59.679
mentioned that will be forming a
foundation which was created by gerunds

00:02:59.679 --> 00:02:59.689
foundation which was created by gerunds
 

00:02:59.689 --> 00:03:02.199
foundation which was created by gerunds
in Google to protect promote and advance

00:03:02.199 --> 00:03:02.209
in Google to protect promote and advance
 

00:03:02.209 --> 00:03:06.399
in Google to protect promote and advance
the language Carl in the foundation is

00:03:06.399 --> 00:03:06.409
the language Carl in the foundation is
 

00:03:06.409 --> 00:03:08.949
the language Carl in the foundation is
governed by Board of Directors which are

00:03:08.949 --> 00:03:08.959
governed by Board of Directors which are
 

00:03:08.959 --> 00:03:11.679
governed by Board of Directors which are
two representative Gibran's two of

00:03:11.679 --> 00:03:11.689
two representative Gibran's two of
 

00:03:11.689 --> 00:03:15.069
two representative Gibran's two of
Google and one independent member and to

00:03:15.069 --> 00:03:15.079
Google and one independent member and to
 

00:03:15.079 --> 00:03:16.599
Google and one independent member and to
give you a little bit of idea on what

00:03:16.599 --> 00:03:16.609
give you a little bit of idea on what
 

00:03:16.609 --> 00:03:19.270
give you a little bit of idea on what
the scope of the foundation is there's

00:03:19.270 --> 00:03:19.280
the scope of the foundation is there's
 

00:03:19.280 --> 00:03:22.330
the scope of the foundation is there's
one of the jobs is to appoint a language

00:03:22.330 --> 00:03:22.340
one of the jobs is to appoint a language
 

00:03:22.340 --> 00:03:24.430
one of the jobs is to appoint a language
lead designer which currently of courses

00:03:24.430 --> 00:03:24.440
lead designer which currently of courses
 

00:03:24.440 --> 00:03:27.640
lead designer which currently of courses
are Andre breslov and there's a language

00:03:27.640 --> 00:03:27.650
are Andre breslov and there's a language
 

00:03:27.650 --> 00:03:29.770
are Andre breslov and there's a language
committee that controls breaking changes

00:03:29.770 --> 00:03:29.780
committee that controls breaking changes
 

00:03:29.780 --> 00:03:31.599
committee that controls breaking changes
and and it's very important here to

00:03:31.599 --> 00:03:31.609
and and it's very important here to
 

00:03:31.609 --> 00:03:33.490
and and it's very important here to
understand that this is limited in terms

00:03:33.490 --> 00:03:33.500
understand that this is limited in terms
 

00:03:33.500 --> 00:03:36.099
understand that this is limited in terms
of scope so it is only about breaking

00:03:36.099 --> 00:03:36.109
of scope so it is only about breaking
 

00:03:36.109 --> 00:03:37.659
of scope so it is only about breaking
changes calling continues to be

00:03:37.659 --> 00:03:37.669
changes calling continues to be
 

00:03:37.669 --> 00:03:40.449
changes calling continues to be
developed as it is now in the open on

00:03:40.449 --> 00:03:40.459
developed as it is now in the open on
 

00:03:40.459 --> 00:03:42.309
developed as it is now in the open on
github we still have the keep which is a

00:03:42.309 --> 00:03:42.319
github we still have the keep which is a
 

00:03:42.319 --> 00:03:44.619
github we still have the keep which is a
Kotlin evolution enhancement process but

00:03:44.619 --> 00:03:44.629
Kotlin evolution enhancement process but
 

00:03:44.629 --> 00:03:46.449
Kotlin evolution enhancement process but
the language committee is mostly around

00:03:46.449 --> 00:03:46.459
the language committee is mostly around
 

00:03:46.459 --> 00:03:49.569
the language committee is mostly around
controlling the breaking changes that

00:03:49.569 --> 00:03:49.579
controlling the breaking changes that
 

00:03:49.579 --> 00:03:52.149
controlling the breaking changes that
might happen into the language and also

00:03:52.149 --> 00:03:52.159
might happen into the language and also
 

00:03:52.159 --> 00:03:54.819
might happen into the language and also
there's a trademark subcommittee that is

00:03:54.819 --> 00:03:54.829
there's a trademark subcommittee that is
 

00:03:54.829 --> 00:03:56.379
there's a trademark subcommittee that is
about protecting the trademark of

00:03:56.379 --> 00:03:56.389
about protecting the trademark of
 

00:03:56.389 --> 00:03:58.119
about protecting the trademark of
Colleen and working with the community

00:03:58.119 --> 00:03:58.129
Colleen and working with the community
 

00:03:58.129 --> 00:04:00.879
Colleen and working with the community
to help promote Kotlin and use Kotlin in

00:04:00.879 --> 00:04:00.889
to help promote Kotlin and use Kotlin in
 

00:04:00.889 --> 00:04:03.039
to help promote Kotlin and use Kotlin in
a fair way if you want to find out more

00:04:03.039 --> 00:04:03.049
a fair way if you want to find out more
 

00:04:03.049 --> 00:04:05.349
a fair way if you want to find out more
about the foundation you can go to the

00:04:05.349 --> 00:04:05.359
about the foundation you can go to the
 

00:04:05.359 --> 00:04:06.969
about the foundation you can go to the
cart landline website where you'll have

00:04:06.969 --> 00:04:06.979
cart landline website where you'll have
 

00:04:06.979 --> 00:04:09.189
cart landline website where you'll have
more information as well as details

00:04:09.189 --> 00:04:09.199
more information as well as details
 

00:04:09.199 --> 00:04:10.960
more information as well as details
about how you can use Kotlin and

00:04:10.960 --> 00:04:10.970
about how you can use Kotlin and
 

00:04:10.970 --> 00:04:13.899
about how you can use Kotlin and
trademarks etc and with that let's

00:04:13.899 --> 00:04:13.909
trademarks etc and with that let's
 

00:04:13.909 --> 00:04:15.490
trademarks etc and with that let's
switch over to the demo and I'm going to

00:04:15.490 --> 00:04:15.500
switch over to the demo and I'm going to
 

00:04:15.500 --> 00:04:18.840
switch over to the demo and I'm going to
show you some things with the language

00:04:18.840 --> 00:04:18.850
 
 

00:04:18.850 --> 00:04:26.000
 
[Applause]

00:04:26.000 --> 00:04:26.010
[Applause]
 

00:04:26.010 --> 00:04:28.080
[Applause]
this is where I'm using someone else's

00:04:28.080 --> 00:04:28.090
this is where I'm using someone else's
 

00:04:28.090 --> 00:04:30.540
this is where I'm using someone else's
machine see how this goes

00:04:30.540 --> 00:04:30.550
machine see how this goes
 

00:04:30.550 --> 00:04:34.470
machine see how this goes
I think the IDS correct yes

00:04:34.470 --> 00:04:34.480
I think the IDS correct yes
 

00:04:34.480 --> 00:04:40.170
I think the IDS correct yes
okay so I'll show you some things around

00:04:40.170 --> 00:04:40.180
okay so I'll show you some things around
 

00:04:40.180 --> 00:04:42.000
okay so I'll show you some things around
the language so probably the most

00:04:42.000 --> 00:04:42.010
the language so probably the most
 

00:04:42.010 --> 00:04:44.580
the language so probably the most
fundamental most important thing that we

00:04:44.580 --> 00:04:44.590
fundamental most important thing that we
 

00:04:44.590 --> 00:04:47.550
fundamental most important thing that we
have done which has taken a very very

00:04:47.550 --> 00:04:47.560
have done which has taken a very very
 

00:04:47.560 --> 00:04:49.740
have done which has taken a very very
long time if you're familiar with

00:04:49.740 --> 00:04:49.750
long time if you're familiar with
 

00:04:49.750 --> 00:04:52.650
long time if you're familiar with
writing a call an application you have

00:04:52.650 --> 00:04:52.660
writing a call an application you have
 

00:04:52.660 --> 00:04:56.580
writing a call an application you have
your main entry point so we've actually

00:04:56.580 --> 00:04:56.590
your main entry point so we've actually
 

00:04:56.590 --> 00:04:58.800
your main entry point so we've actually
now made that so you don't have

00:04:58.800 --> 00:04:58.810
now made that so you don't have
 

00:04:58.810 --> 00:05:01.560
now made that so you don't have
parameters okay so that's it thank you

00:05:01.560 --> 00:05:01.570
parameters okay so that's it thank you
 

00:05:01.570 --> 00:05:09.900
parameters okay so that's it thank you
Jeffrey want um we took two years now so

00:05:09.900 --> 00:05:09.910
Jeffrey want um we took two years now so
 

00:05:09.910 --> 00:05:11.430
Jeffrey want um we took two years now so
we'll start with some small things we've

00:05:11.430 --> 00:05:11.440
we'll start with some small things we've
 

00:05:11.440 --> 00:05:12.720
we'll start with some small things we've
done with the language itself so for

00:05:12.720 --> 00:05:12.730
done with the language itself so for
 

00:05:12.730 --> 00:05:15.750
done with the language itself so for
instance you know one of the things with

00:05:15.750 --> 00:05:15.760
instance you know one of the things with
 

00:05:15.760 --> 00:05:17.550
instance you know one of the things with
the when statements is that often you

00:05:17.550 --> 00:05:17.560
the when statements is that often you
 

00:05:17.560 --> 00:05:18.750
the when statements is that often you
have to capture the value of a variable

00:05:18.750 --> 00:05:18.760
have to capture the value of a variable
 

00:05:18.760 --> 00:05:20.880
have to capture the value of a variable
and then you have to examine that

00:05:20.880 --> 00:05:20.890
and then you have to examine that
 

00:05:20.890 --> 00:05:23.280
and then you have to examine that
variable and you only using that inside

00:05:23.280 --> 00:05:23.290
variable and you only using that inside
 

00:05:23.290 --> 00:05:25.440
variable and you only using that inside
your actual when statement so we've made

00:05:25.440 --> 00:05:25.450
your actual when statement so we've made
 

00:05:25.450 --> 00:05:27.030
your actual when statement so we've made
this a little bit nicer in that you can

00:05:27.030 --> 00:05:27.040
this a little bit nicer in that you can
 

00:05:27.040 --> 00:05:29.040
this a little bit nicer in that you can
essentially declare the variable inside

00:05:29.040 --> 00:05:29.050
essentially declare the variable inside
 

00:05:29.050 --> 00:05:30.960
essentially declare the variable inside
the when statement itself so you don't

00:05:30.960 --> 00:05:30.970
the when statement itself so you don't
 

00:05:30.970 --> 00:05:32.940
the when statement itself so you don't
have to have it reference outside of the

00:05:32.940 --> 00:05:32.950
have to have it reference outside of the
 

00:05:32.950 --> 00:05:35.300
have to have it reference outside of the
scope and this gives you the the

00:05:35.300 --> 00:05:35.310
scope and this gives you the the
 

00:05:35.310 --> 00:05:37.290
scope and this gives you the the
semantic Ness in your language so that

00:05:37.290 --> 00:05:37.300
semantic Ness in your language so that
 

00:05:37.300 --> 00:05:39.060
semantic Ness in your language so that
people understand that this is actually

00:05:39.060 --> 00:05:39.070
people understand that this is actually
 

00:05:39.070 --> 00:05:42.510
people understand that this is actually
limited to just the conditional but

00:05:42.510 --> 00:05:42.520
limited to just the conditional but
 

00:05:42.520 --> 00:05:44.340
limited to just the conditional but
let's talk about a little bit more some

00:05:44.340 --> 00:05:44.350
let's talk about a little bit more some
 

00:05:44.350 --> 00:05:46.080
let's talk about a little bit more some
nice features that we've introduced not

00:05:46.080 --> 00:05:46.090
nice features that we've introduced not
 

00:05:46.090 --> 00:05:47.850
nice features that we've introduced not
that those weren't nice I'm just saying

00:05:47.850 --> 00:05:47.860
that those weren't nice I'm just saying
 

00:05:47.860 --> 00:05:50.400
that those weren't nice I'm just saying
nicer features that we've introduced so

00:05:50.400 --> 00:05:50.410
nicer features that we've introduced so
 

00:05:50.410 --> 00:05:52.260
nicer features that we've introduced so
let's say that I have for instance an

00:05:52.260 --> 00:05:52.270
let's say that I have for instance an
 

00:05:52.270 --> 00:05:55.020
let's say that I have for instance an
application and I want to create a class

00:05:55.020 --> 00:05:55.030
application and I want to create a class
 

00:05:55.030 --> 00:05:57.030
application and I want to create a class
okay and I'm gonna create my class and

00:05:57.030 --> 00:05:57.040
okay and I'm gonna create my class and
 

00:05:57.040 --> 00:05:58.080
okay and I'm gonna create my class and
it's gonna quote we call the

00:05:58.080 --> 00:05:58.090
it's gonna quote we call the
 

00:05:58.090 --> 00:06:02.490
it's gonna quote we call the
microservice API now I can create an

00:06:02.490 --> 00:06:02.500
microservice API now I can create an
 

00:06:02.500 --> 00:06:04.980
microservice API now I can create an
instance of my microservice API and I'll

00:06:04.980 --> 00:06:04.990
instance of my microservice API and I'll
 

00:06:04.990 --> 00:06:08.640
instance of my microservice API and I'll
say microservice API there we go now the

00:06:08.640 --> 00:06:08.650
say microservice API there we go now the
 

00:06:08.650 --> 00:06:09.840
say microservice API there we go now the
thing is I don't know if this

00:06:09.840 --> 00:06:09.850
thing is I don't know if this
 

00:06:09.850 --> 00:06:11.490
thing is I don't know if this
microservice thing is gonna last it

00:06:11.490 --> 00:06:11.500
microservice thing is gonna last it
 

00:06:11.500 --> 00:06:15.270
microservice thing is gonna last it
might just be a fad so what I want to do

00:06:15.270 --> 00:06:15.280
might just be a fad so what I want to do
 

00:06:15.280 --> 00:06:17.100
might just be a fad so what I want to do
is tell people that are using this that

00:06:17.100 --> 00:06:17.110
is tell people that are using this that
 

00:06:17.110 --> 00:06:19.140
is tell people that are using this that
this is kind of like an experimental

00:06:19.140 --> 00:06:19.150
this is kind of like an experimental
 

00:06:19.150 --> 00:06:21.690
this is kind of like an experimental
feature so what we can do is we can

00:06:21.690 --> 00:06:21.700
feature so what we can do is we can
 

00:06:21.700 --> 00:06:23.490
feature so what we can do is we can
actually create an annotation class and

00:06:23.490 --> 00:06:23.500
actually create an annotation class and
 

00:06:23.500 --> 00:06:25.470
actually create an annotation class and
I can say for example this is a new API

00:06:25.470 --> 00:06:25.480
I can say for example this is a new API
 

00:06:25.480 --> 00:06:29.010
I can say for example this is a new API
and then annotate that annotation class

00:06:29.010 --> 00:06:29.020
and then annotate that annotation class
 

00:06:29.020 --> 00:06:30.690
and then annotate that annotation class
with this other class called

00:06:30.690 --> 00:06:30.700
with this other class called
 

00:06:30.700 --> 00:06:33.840
with this other class called
experimental and now I can use that new

00:06:33.840 --> 00:06:33.850
experimental and now I can use that new
 

00:06:33.850 --> 00:06:36.839
experimental and now I can use that new
experimental annotation

00:06:36.839 --> 00:06:36.849
experimental annotation
 

00:06:36.849 --> 00:06:39.149
experimental annotation
that I have created on anything that I

00:06:39.149 --> 00:06:39.159
that I have created on anything that I
 

00:06:39.159 --> 00:06:41.969
that I have created on anything that I
consider experimental in my API so I

00:06:41.969 --> 00:06:41.979
consider experimental in my API so I
 

00:06:41.979 --> 00:06:44.519
consider experimental in my API so I
could add this new API here and as soon

00:06:44.519 --> 00:06:44.529
could add this new API here and as soon
 

00:06:44.529 --> 00:06:46.469
could add this new API here and as soon
as I do that notice that this is going

00:06:46.469 --> 00:06:46.479
as I do that notice that this is going
 

00:06:46.479 --> 00:06:48.389
as I do that notice that this is going
red so it's giving me a compiler error

00:06:48.389 --> 00:06:48.399
red so it's giving me a compiler error
 

00:06:48.399 --> 00:06:50.609
red so it's giving me a compiler error
right it's saying that you cannot use

00:06:50.609 --> 00:06:50.619
right it's saying that you cannot use
 

00:06:50.619 --> 00:06:52.769
right it's saying that you cannot use
this because this is an experimental

00:06:52.769 --> 00:06:52.779
this because this is an experimental
 

00:06:52.779 --> 00:06:54.659
this because this is an experimental
feature if we hover over is saying that

00:06:54.659 --> 00:06:54.669
feature if we hover over is saying that
 

00:06:54.669 --> 00:06:56.850
feature if we hover over is saying that
it's experimental and in fact we can

00:06:56.850 --> 00:06:56.860
it's experimental and in fact we can
 

00:06:56.860 --> 00:06:58.649
it's experimental and in fact we can
change that we can say that instead of

00:06:58.649 --> 00:06:58.659
change that we can say that instead of
 

00:06:58.659 --> 00:07:00.989
change that we can say that instead of
being it being an error we can actually

00:07:00.989 --> 00:07:00.999
being it being an error we can actually
 

00:07:00.999 --> 00:07:05.609
being it being an error we can actually
define it as the warning right so here

00:07:05.609 --> 00:07:05.619
define it as the warning right so here
 

00:07:05.619 --> 00:07:06.929
define it as the warning right so here
it could be a warning and it's just now

00:07:06.929 --> 00:07:06.939
it could be a warning and it's just now
 

00:07:06.939 --> 00:07:09.449
it could be a warning and it's just now
going to show up as a warning so in

00:07:09.449 --> 00:07:09.459
going to show up as a warning so in
 

00:07:09.459 --> 00:07:11.669
going to show up as a warning so in
order to use this the developer has to

00:07:11.669 --> 00:07:11.679
order to use this the developer has to
 

00:07:11.679 --> 00:07:14.429
order to use this the developer has to
essentially opt in to this feature so

00:07:14.429 --> 00:07:14.439
essentially opt in to this feature so
 

00:07:14.439 --> 00:07:17.459
essentially opt in to this feature so
what I could do is hit alt enter and now

00:07:17.459 --> 00:07:17.469
what I could do is hit alt enter and now
 

00:07:17.469 --> 00:07:19.859
what I could do is hit alt enter and now
that adds the new API to my function

00:07:19.859 --> 00:07:19.869
that adds the new API to my function
 

00:07:19.869 --> 00:07:21.779
that adds the new API to my function
calls so anywhere where I'm using this

00:07:21.779 --> 00:07:21.789
calls so anywhere where I'm using this
 

00:07:21.789 --> 00:07:23.399
calls so anywhere where I'm using this
it is saying that this is an

00:07:23.399 --> 00:07:23.409
it is saying that this is an
 

00:07:23.409 --> 00:07:26.119
it is saying that this is an
experimental feature this gives people

00:07:26.119 --> 00:07:26.129
experimental feature this gives people
 

00:07:26.129 --> 00:07:29.969
experimental feature this gives people
idea into you can now create api's that

00:07:29.969 --> 00:07:29.979
idea into you can now create api's that
 

00:07:29.979 --> 00:07:33.239
idea into you can now create api's that
could be experimental and you know kind

00:07:33.239 --> 00:07:33.249
could be experimental and you know kind
 

00:07:33.249 --> 00:07:35.730
could be experimental and you know kind
of like I'm not gonna guarantee anything

00:07:35.730 --> 00:07:35.740
of like I'm not gonna guarantee anything
 

00:07:35.740 --> 00:07:36.809
of like I'm not gonna guarantee anything
if tomorrow we want to change something

00:07:36.809 --> 00:07:36.819
if tomorrow we want to change something
 

00:07:36.819 --> 00:07:38.790
if tomorrow we want to change something
it's okay you had the warning you did

00:07:38.790 --> 00:07:38.800
it's okay you had the warning you did
 

00:07:38.800 --> 00:07:40.679
it's okay you had the warning you did
hit alt enter I saw you hit alt enter

00:07:40.679 --> 00:07:40.689
hit alt enter I saw you hit alt enter
 

00:07:40.689 --> 00:07:42.619
hit alt enter I saw you hit alt enter
it's okay it's your own fault

00:07:42.619 --> 00:07:42.629
it's okay it's your own fault
 

00:07:42.629 --> 00:07:44.519
it's okay it's your own fault
and one of the things that we've

00:07:44.519 --> 00:07:44.529
and one of the things that we've
 

00:07:44.529 --> 00:07:45.989
and one of the things that we've
actually done with this is we've

00:07:45.989 --> 00:07:45.999
actually done with this is we've
 

00:07:45.999 --> 00:07:47.759
actually done with this is we've
introduced this concept of contract so

00:07:47.759 --> 00:07:47.769
introduced this concept of contract so
 

00:07:47.769 --> 00:07:49.019
introduced this concept of contract so
if you're familiar with a little bit our

00:07:49.019 --> 00:07:49.029
if you're familiar with a little bit our
 

00:07:49.029 --> 00:07:51.629
if you're familiar with a little bit our
code contracts we've introduced this as

00:07:51.629 --> 00:07:51.639
code contracts we've introduced this as
 

00:07:51.639 --> 00:07:53.249
code contracts we've introduced this as
an experimental feature in Kotlin as

00:07:53.249 --> 00:07:53.259
an experimental feature in Kotlin as
 

00:07:53.259 --> 00:07:55.109
an experimental feature in Kotlin as
well so let's say that I have some

00:07:55.109 --> 00:07:55.119
well so let's say that I have some
 

00:07:55.119 --> 00:07:57.480
well so let's say that I have some
function and that is like for example

00:07:57.480 --> 00:07:57.490
function and that is like for example
 

00:07:57.490 --> 00:07:59.909
function and that is like for example
print length and this is going to take a

00:07:59.909 --> 00:07:59.919
print length and this is going to take a
 

00:07:59.919 --> 00:08:02.939
print length and this is going to take a
string that is not able and then it's

00:08:02.939 --> 00:08:02.949
string that is not able and then it's
 

00:08:02.949 --> 00:08:07.230
string that is not able and then it's
going to do if string is not null I'm

00:08:07.230 --> 00:08:07.240
going to do if string is not null I'm
 

00:08:07.240 --> 00:08:12.749
going to do if string is not null I'm
going to do print line length now this

00:08:12.749 --> 00:08:12.759
going to do print line length now this
 

00:08:12.759 --> 00:08:15.299
going to do print line length now this
works and it's done a smart cast to a

00:08:15.299 --> 00:08:15.309
works and it's done a smart cast to a
 

00:08:15.309 --> 00:08:18.299
works and it's done a smart cast to a
string a non audible string because it

00:08:18.299 --> 00:08:18.309
string a non audible string because it
 

00:08:18.309 --> 00:08:20.339
string a non audible string because it
detects that I've already found out that

00:08:20.339 --> 00:08:20.349
detects that I've already found out that
 

00:08:20.349 --> 00:08:22.230
detects that I've already found out that
this is not inaudible so I can do this

00:08:22.230 --> 00:08:22.240
this is not inaudible so I can do this
 

00:08:22.240 --> 00:08:24.959
this is not inaudible so I can do this
smart house but if I were to take this

00:08:24.959 --> 00:08:24.969
smart house but if I were to take this
 

00:08:24.969 --> 00:08:26.279
smart house but if I were to take this
and instead of doing not null I do

00:08:26.279 --> 00:08:26.289
and instead of doing not null I do
 

00:08:26.289 --> 00:08:30.419
and instead of doing not null I do
something like not now and I go ahead

00:08:30.419 --> 00:08:30.429
something like not now and I go ahead
 

00:08:30.429 --> 00:08:33.240
something like not now and I go ahead
and create my function so let's say I

00:08:33.240 --> 00:08:33.250
and create my function so let's say I
 

00:08:33.250 --> 00:08:36.230
and create my function so let's say I
create my function that is a string and

00:08:36.230 --> 00:08:36.240
create my function that is a string and
 

00:08:36.240 --> 00:08:41.490
create my function that is a string and
not now that's going to return a boolean

00:08:41.490 --> 00:08:41.500
not now that's going to return a boolean
 

00:08:41.500 --> 00:08:45.600
not now that's going to return a boolean
and then I say return this is not null

00:08:45.600 --> 00:08:45.610
and then I say return this is not null
 

00:08:45.610 --> 00:08:50.640
and then I say return this is not null
you see that it doesn't have that effect

00:08:50.640 --> 00:08:50.650
you see that it doesn't have that effect
 

00:08:50.650 --> 00:08:52.230
you see that it doesn't have that effect
because the compiler doesn't guarantee

00:08:52.230 --> 00:08:52.240
because the compiler doesn't guarantee
 

00:08:52.240 --> 00:08:55.350
because the compiler doesn't guarantee
that that is actually not not able so it

00:08:55.350 --> 00:08:55.360
that that is actually not not able so it
 

00:08:55.360 --> 00:08:58.200
that that is actually not not able so it
would really nice to kind of tell the

00:08:58.200 --> 00:08:58.210
would really nice to kind of tell the
 

00:08:58.210 --> 00:09:02.700
would really nice to kind of tell the
compiler that this function complies

00:09:02.700 --> 00:09:02.710
compiler that this function complies
 

00:09:02.710 --> 00:09:05.220
compiler that this function complies
with a certain contract and you could do

00:09:05.220 --> 00:09:05.230
with a certain contract and you could do
 

00:09:05.230 --> 00:09:07.019
with a certain contract and you could do
this in column by defining using the

00:09:07.019 --> 00:09:07.029
this in column by defining using the
 

00:09:07.029 --> 00:09:09.150
this in column by defining using the
contract lambda the contract function

00:09:09.150 --> 00:09:09.160
contract lambda the contract function
 

00:09:09.160 --> 00:09:11.490
contract lambda the contract function
which is contract and I can say that

00:09:11.490 --> 00:09:11.500
which is contract and I can say that
 

00:09:11.500 --> 00:09:14.750
which is contract and I can say that
that's imported and I can say return

00:09:14.750 --> 00:09:14.760
that's imported and I can say return
 

00:09:14.760 --> 00:09:22.680
that's imported and I can say return
true implies that this not null is not

00:09:22.680 --> 00:09:22.690
true implies that this not null is not
 

00:09:22.690 --> 00:09:26.070
true implies that this not null is not
no okay now this gives an error ignore

00:09:26.070 --> 00:09:26.080
no okay now this gives an error ignore
 

00:09:26.080 --> 00:09:27.180
no okay now this gives an error ignore
it no I'm joking

00:09:27.180 --> 00:09:27.190
it no I'm joking
 

00:09:27.190 --> 00:09:29.070
it no I'm joking
the reason that this gives an error is

00:09:29.070 --> 00:09:29.080
the reason that this gives an error is
 

00:09:29.080 --> 00:09:31.050
the reason that this gives an error is
because this as I mentioned is an

00:09:31.050 --> 00:09:31.060
because this as I mentioned is an
 

00:09:31.060 --> 00:09:33.030
because this as I mentioned is an
experimental feature and there's two

00:09:33.030 --> 00:09:33.040
experimental feature and there's two
 

00:09:33.040 --> 00:09:34.680
experimental feature and there's two
ways I showed you the first one you

00:09:34.680 --> 00:09:34.690
ways I showed you the first one you
 

00:09:34.690 --> 00:09:36.360
ways I showed you the first one you
could add the annotation but if you add

00:09:36.360 --> 00:09:36.370
could add the annotation but if you add
 

00:09:36.370 --> 00:09:38.640
could add the annotation but if you add
the annotation that doesn't propagate so

00:09:38.640 --> 00:09:38.650
the annotation that doesn't propagate so
 

00:09:38.650 --> 00:09:41.940
the annotation that doesn't propagate so
if something is using that API that also

00:09:41.940 --> 00:09:41.950
if something is using that API that also
 

00:09:41.950 --> 00:09:44.070
if something is using that API that also
has to add the annotation you can add

00:09:44.070 --> 00:09:44.080
has to add the annotation you can add
 

00:09:44.080 --> 00:09:46.650
has to add the annotation you can add
the propagating annotation to this which

00:09:46.650 --> 00:09:46.660
the propagating annotation to this which
 

00:09:46.660 --> 00:09:49.950
the propagating annotation to this which
is this format and now I don't have to

00:09:49.950 --> 00:09:49.960
is this format and now I don't have to
 

00:09:49.960 --> 00:09:52.230
is this format and now I don't have to
do that and as soon as I add that notice

00:09:52.230 --> 00:09:52.240
do that and as soon as I add that notice
 

00:09:52.240 --> 00:09:54.240
do that and as soon as I add that notice
that this now automatically against

00:09:54.240 --> 00:09:54.250
that this now automatically against
 

00:09:54.250 --> 00:09:57.600
that this now automatically against
costs to string that is not not able

00:09:57.600 --> 00:09:57.610
costs to string that is not not able
 

00:09:57.610 --> 00:09:59.850
costs to string that is not not able
okay so this allows you to actually

00:09:59.850 --> 00:09:59.860
okay so this allows you to actually
 

00:09:59.860 --> 00:10:02.940
okay so this allows you to actually
create contracts and say that your

00:10:02.940 --> 00:10:02.950
create contracts and say that your
 

00:10:02.950 --> 00:10:05.760
create contracts and say that your
function matches your the arguments to a

00:10:05.760 --> 00:10:05.770
function matches your the arguments to a
 

00:10:05.770 --> 00:10:08.100
function matches your the arguments to a
function match certain conditions and

00:10:08.100 --> 00:10:08.110
function match certain conditions and
 

00:10:08.110 --> 00:10:10.440
function match certain conditions and
that basically is guaranteeing you a

00:10:10.440 --> 00:10:10.450
that basically is guaranteeing you a
 

00:10:10.450 --> 00:10:12.690
that basically is guaranteeing you a
certain level of code correctness in

00:10:12.690 --> 00:10:12.700
certain level of code correctness in
 

00:10:12.700 --> 00:10:16.170
certain level of code correctness in
your actual code so what else have we

00:10:16.170 --> 00:10:16.180
your actual code so what else have we
 

00:10:16.180 --> 00:10:17.910
your actual code so what else have we
been working on well we've done this

00:10:17.910 --> 00:10:17.920
been working on well we've done this
 

00:10:17.920 --> 00:10:20.370
been working on well we've done this
thing called serialization which is a

00:10:20.370 --> 00:10:20.380
thing called serialization which is a
 

00:10:20.380 --> 00:10:21.720
thing called serialization which is a
serialization library which is

00:10:21.720 --> 00:10:21.730
serialization library which is
 

00:10:21.730 --> 00:10:24.630
serialization library which is
multi-platform and in that is targeting

00:10:24.630 --> 00:10:24.640
multi-platform and in that is targeting
 

00:10:24.640 --> 00:10:28.199
multi-platform and in that is targeting
JVM JavaScript called the native iOS Mac

00:10:28.199 --> 00:10:28.209
JVM JavaScript called the native iOS Mac
 

00:10:28.209 --> 00:10:30.870
JVM JavaScript called the native iOS Mac
OS Linux Windows Embedded I think I

00:10:30.870 --> 00:10:30.880
OS Linux Windows Embedded I think I
 

00:10:30.880 --> 00:10:32.990
OS Linux Windows Embedded I think I
mentioned everything under the Sun and

00:10:32.990 --> 00:10:33.000
mentioned everything under the Sun and
 

00:10:33.000 --> 00:10:35.640
mentioned everything under the Sun and
this is a multi-platform library that

00:10:35.640 --> 00:10:35.650
this is a multi-platform library that
 

00:10:35.650 --> 00:10:37.260
this is a multi-platform library that
doesn't require any kind of reflection

00:10:37.260 --> 00:10:37.270
doesn't require any kind of reflection
 

00:10:37.270 --> 00:10:39.780
doesn't require any kind of reflection
and it's part of some of the offerings

00:10:39.780 --> 00:10:39.790
and it's part of some of the offerings
 

00:10:39.790 --> 00:10:41.699
and it's part of some of the offerings
that we're doing as part of like the

00:10:41.699 --> 00:10:41.709
that we're doing as part of like the
 

00:10:41.709 --> 00:10:44.430
that we're doing as part of like the
language and the ecosystem around it so

00:10:44.430 --> 00:10:44.440
language and the ecosystem around it so
 

00:10:44.440 --> 00:10:46.610
language and the ecosystem around it so
here you can see that I have a class a

00:10:46.610 --> 00:10:46.620
here you can see that I have a class a
 

00:10:46.620 --> 00:10:48.900
here you can see that I have a class a
typical data class and I have added this

00:10:48.900 --> 00:10:48.910
typical data class and I have added this
 

00:10:48.910 --> 00:10:52.380
typical data class and I have added this
serializable annotation to it which is

00:10:52.380 --> 00:10:52.390
serializable annotation to it which is
 

00:10:52.390 --> 00:10:54.900
serializable annotation to it which is
part of the callin serialization library

00:10:54.900 --> 00:10:54.910
part of the callin serialization library
 

00:10:54.910 --> 00:10:57.060
part of the callin serialization library
and then I have a bunch of I have a

00:10:57.060 --> 00:10:57.070
and then I have a bunch of I have a
 

00:10:57.070 --> 00:10:58.829
and then I have a bunch of I have a
customer and I have a customer a list of

00:10:58.829 --> 00:10:58.839
customer and I have a customer a list of
 

00:10:58.839 --> 00:11:00.360
customer and I have a customer a list of
customers so I could do something like

00:11:00.360 --> 00:11:00.370
customers so I could do something like
 

00:11:00.370 --> 00:11:02.790
customers so I could do something like
print line and then here I'm going to do

00:11:02.790 --> 00:11:02.800
print line and then here I'm going to do
 

00:11:02.800 --> 00:11:05.180
print line and then here I'm going to do
json stringify

00:11:05.180 --> 00:11:05.190
json stringify
 

00:11:05.190 --> 00:11:09.600
json stringify
customers and indicate the serializer i

00:11:09.600 --> 00:11:09.610
customers and indicate the serializer i
 

00:11:09.610 --> 00:11:11.520
customers and indicate the serializer i
want to use and then pass in the actual

00:11:11.520 --> 00:11:11.530
want to use and then pass in the actual
 

00:11:11.530 --> 00:11:13.560
want to use and then pass in the actual
customer and i could do exactly the same

00:11:13.560 --> 00:11:13.570
customer and i could do exactly the same
 

00:11:13.570 --> 00:11:16.350
customer and i could do exactly the same
thing for a list of customers so I could

00:11:16.350 --> 00:11:16.360
thing for a list of customers so I could
 

00:11:16.360 --> 00:11:18.780
thing for a list of customers so I could
do lists here and then pass in the list

00:11:18.780 --> 00:11:18.790
do lists here and then pass in the list
 

00:11:18.790 --> 00:11:20.850
do lists here and then pass in the list
of customers and if I were to run this

00:11:20.850 --> 00:11:20.860
of customers and if I were to run this
 

00:11:20.860 --> 00:11:23.330
of customers and if I were to run this
well this is basically going to do is

00:11:23.330 --> 00:11:23.340
well this is basically going to do is
 

00:11:23.340 --> 00:11:27.270
well this is basically going to do is
output that data class in JSON and we

00:11:27.270 --> 00:11:27.280
output that data class in JSON and we
 

00:11:27.280 --> 00:11:28.710
output that data class in JSON and we
have support for JSON we have support

00:11:28.710 --> 00:11:28.720
have support for JSON we have support
 

00:11:28.720 --> 00:11:30.450
have support for JSON we have support
for protobuf and other things are coming

00:11:30.450 --> 00:11:30.460
for protobuf and other things are coming
 

00:11:30.460 --> 00:11:33.450
for protobuf and other things are coming
are in the works and we can obviously do

00:11:33.450 --> 00:11:33.460
are in the works and we can obviously do
 

00:11:33.460 --> 00:11:35.790
are in the works and we can obviously do
the reverse as well so I could say for

00:11:35.790 --> 00:11:35.800
the reverse as well so I could say for
 

00:11:35.800 --> 00:11:37.980
the reverse as well so I could say for
example let's say that I have some JSON

00:11:37.980 --> 00:11:37.990
example let's say that I have some JSON
 

00:11:37.990 --> 00:11:41.760
example let's say that I have some JSON
here so let's go ahead and create some

00:11:41.760 --> 00:11:41.770
here so let's go ahead and create some
 

00:11:41.770 --> 00:11:48.630
here so let's go ahead and create some
JSON and edit so we'll do ID equals 1

00:11:48.630 --> 00:11:48.640
JSON and edit so we'll do ID equals 1
 

00:11:48.640 --> 00:11:53.180
JSON and edit so we'll do ID equals 1
and then name eCos me and then email

00:11:53.180 --> 00:11:53.190
and then name eCos me and then email
 

00:11:53.190 --> 00:11:56.610
and then name eCos me and then email
equals you at me calm I'm so creative

00:11:56.610 --> 00:11:56.620
equals you at me calm I'm so creative
 

00:11:56.620 --> 00:12:02.280
equals you at me calm I'm so creative
and now I can do print line and in this

00:12:02.280 --> 00:12:02.290
and now I can do print line and in this
 

00:12:02.290 --> 00:12:05.730
and now I can do print line and in this
case I'm going to do json.parse passing

00:12:05.730 --> 00:12:05.740
case I'm going to do json.parse passing
 

00:12:05.740 --> 00:12:09.900
case I'm going to do json.parse passing
again the serializer and then the actual

00:12:09.900 --> 00:12:09.910
again the serializer and then the actual
 

00:12:09.910 --> 00:12:11.880
again the serializer and then the actual
JSON that I want to pass in and what

00:12:11.880 --> 00:12:11.890
JSON that I want to pass in and what
 

00:12:11.890 --> 00:12:13.590
JSON that I want to pass in and what
this will do is essentially create the

00:12:13.590 --> 00:12:13.600
this will do is essentially create the
 

00:12:13.600 --> 00:12:15.690
this will do is essentially create the
actual data class object for me in

00:12:15.690 --> 00:12:15.700
actual data class object for me in
 

00:12:15.700 --> 00:12:17.400
actual data class object for me in
rivers and you can see that it also has

00:12:17.400 --> 00:12:17.410
rivers and you can see that it also has
 

00:12:17.410 --> 00:12:21.060
rivers and you can see that it also has
support for it creates the data object

00:12:21.060 --> 00:12:21.070
support for it creates the data object
 

00:12:21.070 --> 00:12:23.190
support for it creates the data object
for me in Reverse what did I do email

00:12:23.190 --> 00:12:23.200
for me in Reverse what did I do email
 

00:12:23.200 --> 00:12:30.450
for me in Reverse what did I do email
name email field source is required no

00:12:30.450 --> 00:12:30.460
name email field source is required no
 

00:12:30.460 --> 00:12:35.450
name email field source is required no
it's not

00:12:35.450 --> 00:12:35.460
 
 

00:12:35.460 --> 00:12:39.590
 
No that should actually write anyway so

00:12:39.590 --> 00:12:39.600
No that should actually write anyway so
 

00:12:39.600 --> 00:12:41.829
No that should actually write anyway so
that was working

00:12:41.829 --> 00:12:41.839
that was working
 

00:12:41.839 --> 00:12:48.950
that was working
that's Jeffrey he did something I really

00:12:48.950 --> 00:12:48.960
that's Jeffrey he did something I really
 

00:12:48.960 --> 00:12:53.480
that's Jeffrey he did something I really
like when people clap so I don't know

00:12:53.480 --> 00:12:53.490
like when people clap so I don't know
 

00:12:53.490 --> 00:12:55.220
like when people clap so I don't know
what's happening there but that's the

00:12:55.220 --> 00:12:55.230
what's happening there but that's the
 

00:12:55.230 --> 00:12:56.690
what's happening there but that's the
good thing about live demos I wanna I

00:12:56.690 --> 00:12:56.700
good thing about live demos I wanna I
 

00:12:56.700 --> 00:12:57.829
good thing about live demos I wanna I
want to make sure that something goes

00:12:57.829 --> 00:12:57.839
want to make sure that something goes
 

00:12:57.839 --> 00:12:59.690
want to make sure that something goes
wrong I actually did that on purpose so

00:12:59.690 --> 00:12:59.700
wrong I actually did that on purpose so
 

00:12:59.700 --> 00:13:01.460
wrong I actually did that on purpose so
I've done that as an exercise so that

00:13:01.460 --> 00:13:01.470
I've done that as an exercise so that
 

00:13:01.470 --> 00:13:03.380
I've done that as an exercise so that
later you come to me in office hours and

00:13:03.380 --> 00:13:03.390
later you come to me in office hours and
 

00:13:03.390 --> 00:13:06.220
later you come to me in office hours and
you tell me what's wrong with that okay

00:13:06.220 --> 00:13:06.230
you tell me what's wrong with that okay
 

00:13:06.230 --> 00:13:09.320
you tell me what's wrong with that okay
let's move on the next thing I want to

00:13:09.320 --> 00:13:09.330
let's move on the next thing I want to
 

00:13:09.330 --> 00:13:12.050
let's move on the next thing I want to
show you is a quick overview also on

00:13:12.050 --> 00:13:12.060
show you is a quick overview also on
 

00:13:12.060 --> 00:13:14.329
show you is a quick overview also on
terms of annotation classes here we've

00:13:14.329 --> 00:13:14.339
terms of annotation classes here we've
 

00:13:14.339 --> 00:13:16.490
terms of annotation classes here we've
added some additional things for support

00:13:16.490 --> 00:13:16.500
added some additional things for support
 

00:13:16.500 --> 00:13:19.220
added some additional things for support
for enums for example I can get the have

00:13:19.220 --> 00:13:19.230
for enums for example I can get the have
 

00:13:19.230 --> 00:13:21.019
for enums for example I can get the have
enums in my annotation I can have nested

00:13:21.019 --> 00:13:21.029
enums in my annotation I can have nested
 

00:13:21.029 --> 00:13:23.300
enums in my annotation I can have nested
annotations I can have properties as

00:13:23.300 --> 00:13:23.310
annotations I can have properties as
 

00:13:23.310 --> 00:13:25.850
annotations I can have properties as
part of my companion object so again

00:13:25.850 --> 00:13:25.860
part of my companion object so again
 

00:13:25.860 --> 00:13:27.590
part of my companion object so again
this gives me more expressiveness in

00:13:27.590 --> 00:13:27.600
this gives me more expressiveness in
 

00:13:27.600 --> 00:13:30.490
this gives me more expressiveness in
when I'm using the actual annotations

00:13:30.490 --> 00:13:30.500
when I'm using the actual annotations
 

00:13:30.500 --> 00:13:32.900
when I'm using the actual annotations
now there's one other thing that we've

00:13:32.900 --> 00:13:32.910
now there's one other thing that we've
 

00:13:32.910 --> 00:13:34.699
now there's one other thing that we've
been working on which you may have heard

00:13:34.699 --> 00:13:34.709
been working on which you may have heard
 

00:13:34.709 --> 00:13:36.980
been working on which you may have heard
about which is Multi multi platform

00:13:36.980 --> 00:13:36.990
about which is Multi multi platform
 

00:13:36.990 --> 00:13:39.380
about which is Multi multi platform
programming and the idea behind multi

00:13:39.380 --> 00:13:39.390
programming and the idea behind multi
 

00:13:39.390 --> 00:13:41.600
programming and the idea behind multi
platform programming which is a mouthful

00:13:41.600 --> 00:13:41.610
platform programming which is a mouthful
 

00:13:41.610 --> 00:13:44.990
platform programming which is a mouthful
is the idea that right now Colin allows

00:13:44.990 --> 00:13:45.000
is the idea that right now Colin allows
 

00:13:45.000 --> 00:13:47.590
is the idea that right now Colin allows
you to target different types of

00:13:47.590 --> 00:13:47.600
you to target different types of
 

00:13:47.600 --> 00:13:51.019
you to target different types of
platforms so I can target the JVM I can

00:13:51.019 --> 00:13:51.029
platforms so I can target the JVM I can
 

00:13:51.029 --> 00:13:56.360
platforms so I can target the JVM I can
target JavaScript I can target native

00:13:56.360 --> 00:13:56.370
target JavaScript I can target native
 

00:13:56.370 --> 00:13:58.670
target JavaScript I can target native
etc now one of the great things about

00:13:58.670 --> 00:13:58.680
etc now one of the great things about
 

00:13:58.680 --> 00:14:00.860
etc now one of the great things about
this is the ability to be able to share

00:14:00.860 --> 00:14:00.870
this is the ability to be able to share
 

00:14:00.870 --> 00:14:02.720
this is the ability to be able to share
code because there's a lot of code that

00:14:02.720 --> 00:14:02.730
code because there's a lot of code that
 

00:14:02.730 --> 00:14:04.490
code because there's a lot of code that
I want to end up sharing right there's

00:14:04.490 --> 00:14:04.500
I want to end up sharing right there's
 

00:14:04.500 --> 00:14:06.019
I want to end up sharing right there's
business logic there's validation logic

00:14:06.019 --> 00:14:06.029
business logic there's validation logic
 

00:14:06.029 --> 00:14:09.560
business logic there's validation logic
etc that I want to end up sharing so how

00:14:09.560 --> 00:14:09.570
etc that I want to end up sharing so how
 

00:14:09.570 --> 00:14:11.269
etc that I want to end up sharing so how
do we kind of do this this is where

00:14:11.269 --> 00:14:11.279
do we kind of do this this is where
 

00:14:11.279 --> 00:14:12.410
do we kind of do this this is where
we've introduced the concept of

00:14:12.410 --> 00:14:12.420
we've introduced the concept of
 

00:14:12.420 --> 00:14:14.990
we've introduced the concept of
multi-platform programming and as a

00:14:14.990 --> 00:14:15.000
multi-platform programming and as a
 

00:14:15.000 --> 00:14:16.490
multi-platform programming and as a
consequence of that you now have the

00:14:16.490 --> 00:14:16.500
consequence of that you now have the
 

00:14:16.500 --> 00:14:18.500
consequence of that you now have the
idea of having this multi-platform

00:14:18.500 --> 00:14:18.510
idea of having this multi-platform
 

00:14:18.510 --> 00:14:20.510
idea of having this multi-platform
project so you can see here that I've

00:14:20.510 --> 00:14:20.520
project so you can see here that I've
 

00:14:20.520 --> 00:14:22.940
project so you can see here that I've
got this project in my IDE and I'm

00:14:22.940 --> 00:14:22.950
got this project in my IDE and I'm
 

00:14:22.950 --> 00:14:26.300
got this project in my IDE and I'm
targeting different kinds of platforms

00:14:26.300 --> 00:14:26.310
targeting different kinds of platforms
 

00:14:26.310 --> 00:14:29.840
targeting different kinds of platforms
so I have Mac OS I have JVM and I have

00:14:29.840 --> 00:14:29.850
so I have Mac OS I have JVM and I have
 

00:14:29.850 --> 00:14:32.360
so I have Mac OS I have JVM and I have
JavaScript and then I have a series of

00:14:32.360 --> 00:14:32.370
JavaScript and then I have a series of
 

00:14:32.370 --> 00:14:35.170
JavaScript and then I have a series of
common code which is called common and

00:14:35.170 --> 00:14:35.180
common code which is called common and
 

00:14:35.180 --> 00:14:39.319
common code which is called common and
inside here I have some code so here I

00:14:39.319 --> 00:14:39.329
inside here I have some code so here I
 

00:14:39.329 --> 00:14:41.540
inside here I have some code so here I
have this function called hello that is

00:14:41.540 --> 00:14:41.550
have this function called hello that is
 

00:14:41.550 --> 00:14:43.760
have this function called hello that is
saying hello from platform dot name and

00:14:43.760 --> 00:14:43.770
saying hello from platform dot name and
 

00:14:43.770 --> 00:14:45.440
saying hello from platform dot name and
platform Dom name is a property of

00:14:45.440 --> 00:14:45.450
platform Dom name is a property of
 

00:14:45.450 --> 00:14:47.190
platform Dom name is a property of
objects

00:14:47.190 --> 00:14:47.200
objects
 

00:14:47.200 --> 00:14:49.079
objects
but the difference is that this object

00:14:49.079 --> 00:14:49.089
but the difference is that this object
 

00:14:49.089 --> 00:14:50.970
but the difference is that this object
has this word in front of it which is

00:14:50.970 --> 00:14:50.980
has this word in front of it which is
 

00:14:50.980 --> 00:14:54.420
has this word in front of it which is
called expect so what this is saying is

00:14:54.420 --> 00:14:54.430
called expect so what this is saying is
 

00:14:54.430 --> 00:14:57.000
called expect so what this is saying is
that this is some code that I can

00:14:57.000 --> 00:14:57.010
that this is some code that I can
 

00:14:57.010 --> 00:14:59.069
that this is some code that I can
reference in my common code but the

00:14:59.069 --> 00:14:59.079
reference in my common code but the
 

00:14:59.079 --> 00:15:01.199
reference in my common code but the
implementation is not actually provided

00:15:01.199 --> 00:15:01.209
implementation is not actually provided
 

00:15:01.209 --> 00:15:03.060
implementation is not actually provided
here the implementation is going to

00:15:03.060 --> 00:15:03.070
here the implementation is going to
 

00:15:03.070 --> 00:15:05.370
here the implementation is going to
provided on different types of platforms

00:15:05.370 --> 00:15:05.380
provided on different types of platforms
 

00:15:05.380 --> 00:15:08.220
provided on different types of platforms
in a different way because it can vary

00:15:08.220 --> 00:15:08.230
in a different way because it can vary
 

00:15:08.230 --> 00:15:10.710
in a different way because it can vary
based on the platform so you can see

00:15:10.710 --> 00:15:10.720
based on the platform so you can see
 

00:15:10.720 --> 00:15:12.389
based on the platform so you can see
that it's got this cute little a in the

00:15:12.389 --> 00:15:12.399
that it's got this cute little a in the
 

00:15:12.399 --> 00:15:15.210
that it's got this cute little a in the
corner here and if we hit alt enter when

00:15:15.210 --> 00:15:15.220
corner here and if we hit alt enter when
 

00:15:15.220 --> 00:15:17.519
corner here and if we hit alt enter when
we say go to declaration it asks me

00:15:17.519 --> 00:15:17.529
we say go to declaration it asks me
 

00:15:17.529 --> 00:15:20.069
we say go to declaration it asks me
which platform declaration do I want to

00:15:20.069 --> 00:15:20.079
which platform declaration do I want to
 

00:15:20.079 --> 00:15:23.040
which platform declaration do I want to
go to so if I say JVM it will take me to

00:15:23.040 --> 00:15:23.050
go to so if I say JVM it will take me to
 

00:15:23.050 --> 00:15:25.829
go to so if I say JVM it will take me to
the JVM 1 if I go back and I say go to

00:15:25.829 --> 00:15:25.839
the JVM 1 if I go back and I say go to
 

00:15:25.839 --> 00:15:28.139
the JVM 1 if I go back and I say go to
actual declaration on Mac OS it will

00:15:28.139 --> 00:15:28.149
actual declaration on Mac OS it will
 

00:15:28.149 --> 00:15:31.500
actual declaration on Mac OS it will
take me to the Mac OS 1 right so for

00:15:31.500 --> 00:15:31.510
take me to the Mac OS 1 right so for
 

00:15:31.510 --> 00:15:33.750
take me to the Mac OS 1 right so for
different platforms I can have different

00:15:33.750 --> 00:15:33.760
different platforms I can have different
 

00:15:33.760 --> 00:15:36.660
different platforms I can have different
implementations and yet I can reference

00:15:36.660 --> 00:15:36.670
implementations and yet I can reference
 

00:15:36.670 --> 00:15:39.960
implementations and yet I can reference
that code in my common code and use it

00:15:39.960 --> 00:15:39.970
that code in my common code and use it
 

00:15:39.970 --> 00:15:42.870
that code in my common code and use it
as part of my shared codebase and a cool

00:15:42.870 --> 00:15:42.880
as part of my shared codebase and a cool
 

00:15:42.880 --> 00:15:44.460
as part of my shared codebase and a cool
thing so kind of like think about as a

00:15:44.460 --> 00:15:44.470
thing so kind of like think about as a
 

00:15:44.470 --> 00:15:46.199
thing so kind of like think about as a
little bit like interfaces and then the

00:15:46.199 --> 00:15:46.209
little bit like interfaces and then the
 

00:15:46.209 --> 00:15:47.850
little bit like interfaces and then the
implementation of those interfaces and

00:15:47.850 --> 00:15:47.860
implementation of those interfaces and
 

00:15:47.860 --> 00:15:49.350
implementation of those interfaces and
the cool thing is that you get the

00:15:49.350 --> 00:15:49.360
the cool thing is that you get the
 

00:15:49.360 --> 00:15:51.449
the cool thing is that you get the
static compile time checking so to speak

00:15:51.449 --> 00:15:51.459
static compile time checking so to speak
 

00:15:51.459 --> 00:15:53.519
static compile time checking so to speak
so if I were to comment this out and I

00:15:53.519 --> 00:15:53.529
so if I were to comment this out and I
 

00:15:53.529 --> 00:15:55.620
so if I were to comment this out and I
go back here you can see that it's

00:15:55.620 --> 00:15:55.630
go back here you can see that it's
 

00:15:55.630 --> 00:15:57.810
go back here you can see that it's
giving me an error saying that one of

00:15:57.810 --> 00:15:57.820
giving me an error saying that one of
 

00:15:57.820 --> 00:15:59.759
giving me an error saying that one of
the actual platforms is missing an

00:15:59.759 --> 00:15:59.769
the actual platforms is missing an
 

00:15:59.769 --> 00:16:03.180
the actual platforms is missing an
implementation so this is allowing you

00:16:03.180 --> 00:16:03.190
implementation so this is allowing you
 

00:16:03.190 --> 00:16:07.199
implementation so this is allowing you
to now create multi-platform projects

00:16:07.199 --> 00:16:07.209
to now create multi-platform projects
 

00:16:07.209 --> 00:16:09.689
to now create multi-platform projects
that allow you to share common code base

00:16:09.689 --> 00:16:09.699
that allow you to share common code base
 

00:16:09.699 --> 00:16:12.689
that allow you to share common code base
and then have specific implementations

00:16:12.689 --> 00:16:12.699
and then have specific implementations
 

00:16:12.699 --> 00:16:15.660
and then have specific implementations
based on the actual target a little bit

00:16:15.660 --> 00:16:15.670
based on the actual target a little bit
 

00:16:15.670 --> 00:16:16.980
based on the actual target a little bit
differently okay

00:16:16.980 --> 00:16:16.990
differently okay
 

00:16:16.990 --> 00:16:18.329
differently okay
and that's part of the multi platform

00:16:18.329 --> 00:16:18.339
and that's part of the multi platform
 

00:16:18.339 --> 00:16:21.120
and that's part of the multi platform
project that we are offering moving

00:16:21.120 --> 00:16:21.130
project that we are offering moving
 

00:16:21.130 --> 00:16:22.980
project that we are offering moving
forward with Colin allowing you to for

00:16:22.980 --> 00:16:22.990
forward with Colin allowing you to for
 

00:16:22.990 --> 00:16:24.990
forward with Colin allowing you to for
example create Android applications that

00:16:24.990 --> 00:16:25.000
example create Android applications that
 

00:16:25.000 --> 00:16:28.680
example create Android applications that
share common code base with Android iOS

00:16:28.680 --> 00:16:28.690
share common code base with Android iOS
 

00:16:28.690 --> 00:16:30.870
share common code base with Android iOS
etc and if we can switch back to slides

00:16:30.870 --> 00:16:30.880
etc and if we can switch back to slides
 

00:16:30.880 --> 00:16:33.630
etc and if we can switch back to slides
I will talk to you a little bit about

00:16:33.630 --> 00:16:33.640
I will talk to you a little bit about
 

00:16:33.640 --> 00:16:34.980
I will talk to you a little bit about
some of the other things that we've been

00:16:34.980 --> 00:16:34.990
some of the other things that we've been
 

00:16:34.990 --> 00:16:37.980
some of the other things that we've been
bringing to call in the language we have

00:16:37.980 --> 00:16:37.990
bringing to call in the language we have
 

00:16:37.990 --> 00:16:40.050
bringing to call in the language we have
more standard library api's we're still

00:16:40.050 --> 00:16:40.060
more standard library api's we're still
 

00:16:40.060 --> 00:16:42.960
more standard library api's we're still
keeping the API numbers of method calls

00:16:42.960 --> 00:16:42.970
keeping the API numbers of method calls
 

00:16:42.970 --> 00:16:45.000
keeping the API numbers of method calls
kind of low but we're adding a lot more

00:16:45.000 --> 00:16:45.010
kind of low but we're adding a lot more
 

00:16:45.010 --> 00:16:46.650
kind of low but we're adding a lot more
functionality in that area

00:16:46.650 --> 00:16:46.660
functionality in that area
 

00:16:46.660 --> 00:16:49.530
functionality in that area
support for unsigned integers anybody

00:16:49.530 --> 00:16:49.540
support for unsigned integers anybody
 

00:16:49.540 --> 00:16:51.740
support for unsigned integers anybody
know yes

00:16:51.740 --> 00:16:51.750
know yes
 

00:16:51.750 --> 00:16:55.370
know yes
I just added that because I know someone

00:16:55.370 --> 00:16:55.380
I just added that because I know someone
 

00:16:55.380 --> 00:16:58.670
I just added that because I know someone
always claps about that obviously we

00:16:58.670 --> 00:16:58.680
always claps about that obviously we
 

00:16:58.680 --> 00:17:01.420
always claps about that obviously we
announce packet : Kampf in 2018 that

00:17:01.420 --> 00:17:01.430
announce packet : Kampf in 2018 that
 

00:17:01.430 --> 00:17:05.000
announce packet : Kampf in 2018 that
Carlin native has hit beta in terms of

00:17:05.000 --> 00:17:05.010
Carlin native has hit beta in terms of
 

00:17:05.010 --> 00:17:07.040
Carlin native has hit beta in terms of
tooling we've provided improved

00:17:07.040 --> 00:17:07.050
tooling we've provided improved
 

00:17:07.050 --> 00:17:08.809
tooling we've provided improved
performance speed parallel builds for

00:17:08.809 --> 00:17:08.819
performance speed parallel builds for
 

00:17:08.819 --> 00:17:11.120
performance speed parallel builds for
greater projects incremental annotation

00:17:11.120 --> 00:17:11.130
greater projects incremental annotation
 

00:17:11.130 --> 00:17:13.490
greater projects incremental annotation
processing with capped and a shout-out

00:17:13.490 --> 00:17:13.500
processing with capped and a shout-out
 

00:17:13.500 --> 00:17:16.160
processing with capped and a shout-out
to avant-garde relic from Google for

00:17:16.160 --> 00:17:16.170
to avant-garde relic from Google for
 

00:17:16.170 --> 00:17:18.860
to avant-garde relic from Google for
helping us with that new type inference

00:17:18.860 --> 00:17:18.870
helping us with that new type inference
 

00:17:18.870 --> 00:17:21.110
helping us with that new type inference
engine which helps in a lot of cases in

00:17:21.110 --> 00:17:21.120
engine which helps in a lot of cases in
 

00:17:21.120 --> 00:17:22.670
engine which helps in a lot of cases in
interoperability especially if you're

00:17:22.670 --> 00:17:22.680
interoperability especially if you're
 

00:17:22.680 --> 00:17:25.309
interoperability especially if you're
doing things around rx as well as making

00:17:25.309 --> 00:17:25.319
doing things around rx as well as making
 

00:17:25.319 --> 00:17:26.990
doing things around rx as well as making
the language a little bit more concise

00:17:26.990 --> 00:17:27.000
the language a little bit more concise
 

00:17:27.000 --> 00:17:30.110
the language a little bit more concise
when you're using builders etc and we've

00:17:30.110 --> 00:17:30.120
when you're using builders etc and we've
 

00:17:30.120 --> 00:17:32.180
when you're using builders etc and we've
introduced this progressive mode which

00:17:32.180 --> 00:17:32.190
introduced this progressive mode which
 

00:17:32.190 --> 00:17:35.510
introduced this progressive mode which
is essentially allowing you to try out

00:17:35.510 --> 00:17:35.520
is essentially allowing you to try out
 

00:17:35.520 --> 00:17:38.060
is essentially allowing you to try out
call and try out new features even if

00:17:38.060 --> 00:17:38.070
call and try out new features even if
 

00:17:38.070 --> 00:17:40.400
call and try out new features even if
those features will actually break some

00:17:40.400 --> 00:17:40.410
those features will actually break some
 

00:17:40.410 --> 00:17:42.440
those features will actually break some
code so that's a flag that you can now

00:17:42.440 --> 00:17:42.450
code so that's a flag that you can now
 

00:17:42.450 --> 00:17:44.840
code so that's a flag that you can now
enable with call in to kind of live a

00:17:44.840 --> 00:17:44.850
enable with call in to kind of live a
 

00:17:44.850 --> 00:17:47.150
enable with call in to kind of live a
little bit more on the edge and with

00:17:47.150 --> 00:17:47.160
little bit more on the edge and with
 

00:17:47.160 --> 00:17:48.770
little bit more on the edge and with
that I'll hand it off to Geoffrey that's

00:17:48.770 --> 00:17:48.780
that I'll hand it off to Geoffrey that's
 

00:17:48.780 --> 00:17:50.330
that I'll hand it off to Geoffrey that's
going to show you some other things that

00:17:50.330 --> 00:17:50.340
going to show you some other things that
 

00:17:50.340 --> 00:17:52.790
going to show you some other things that
we've been doing in Android specifically

00:17:52.790 --> 00:17:52.800
we've been doing in Android specifically
 

00:17:52.800 --> 00:17:54.350
we've been doing in Android specifically
thanks Ari I think there is one feature

00:17:54.350 --> 00:17:54.360
thanks Ari I think there is one feature
 

00:17:54.360 --> 00:17:58.400
thanks Ari I think there is one feature
that you forgot to demo I I have no idea

00:17:58.400 --> 00:17:58.410
that you forgot to demo I I have no idea
 

00:17:58.410 --> 00:17:59.750
that you forgot to demo I I have no idea
what you're talking about okay I'll show

00:17:59.750 --> 00:17:59.760
what you're talking about okay I'll show
 

00:17:59.760 --> 00:18:03.680
what you're talking about okay I'll show
it in my demo you probably broke it okay

00:18:03.680 --> 00:18:03.690
it in my demo you probably broke it okay
 

00:18:03.690 --> 00:18:05.600
it in my demo you probably broke it okay
so let's take a look at what we have

00:18:05.600 --> 00:18:05.610
so let's take a look at what we have
 

00:18:05.610 --> 00:18:08.090
so let's take a look at what we have
done in the Android side to support : so

00:18:08.090 --> 00:18:08.100
done in the Android side to support : so
 

00:18:08.100 --> 00:18:10.100
done in the Android side to support : so
let's first start with the OS of course

00:18:10.100 --> 00:18:10.110
let's first start with the OS of course
 

00:18:10.110 --> 00:18:11.930
let's first start with the OS of course
the OS works on bytecode so there's not

00:18:11.930 --> 00:18:11.940
the OS works on bytecode so there's not
 

00:18:11.940 --> 00:18:14.300
the OS works on bytecode so there's not
a lot we need to do to support Coplin

00:18:14.300 --> 00:18:14.310
a lot we need to do to support Coplin
 

00:18:14.310 --> 00:18:15.500
a lot we need to do to support Coplin
but we did make sure that we added

00:18:15.500 --> 00:18:15.510
but we did make sure that we added
 

00:18:15.510 --> 00:18:17.030
but we did make sure that we added
correctness and performance tests so

00:18:17.030 --> 00:18:17.040
correctness and performance tests so
 

00:18:17.040 --> 00:18:19.670
correctness and performance tests so
that we don't break Copland patterns we

00:18:19.670 --> 00:18:19.680
that we don't break Copland patterns we
 

00:18:19.680 --> 00:18:20.780
that we don't break Copland patterns we
implemented a couple specific

00:18:20.780 --> 00:18:20.790
implemented a couple specific
 

00:18:20.790 --> 00:18:22.670
implemented a couple specific
performance optimizations based on those

00:18:22.670 --> 00:18:22.680
performance optimizations based on those
 

00:18:22.680 --> 00:18:24.830
performance optimizations based on those
tests specifically for loop or

00:18:24.830 --> 00:18:24.840
tests specifically for loop or
 

00:18:24.840 --> 00:18:26.990
tests specifically for loop or
optimizations and then the big thing we

00:18:26.990 --> 00:18:27.000
optimizations and then the big thing we
 

00:18:27.000 --> 00:18:28.760
optimizations and then the big thing we
did on the OS site is improve debugging

00:18:28.760 --> 00:18:28.770
did on the OS site is improve debugging
 

00:18:28.770 --> 00:18:30.560
did on the OS site is improve debugging
support Copelan has a couple of

00:18:30.560 --> 00:18:30.570
support Copelan has a couple of
 

00:18:30.570 --> 00:18:32.180
support Copelan has a couple of
constructs like inline functions that

00:18:32.180 --> 00:18:32.190
constructs like inline functions that
 

00:18:32.190 --> 00:18:34.370
constructs like inline functions that
you don't have in other languages and so

00:18:34.370 --> 00:18:34.380
you don't have in other languages and so
 

00:18:34.380 --> 00:18:36.740
you don't have in other languages and so
the new version of Android now support

00:18:36.740 --> 00:18:36.750
the new version of Android now support
 

00:18:36.750 --> 00:18:40.280
the new version of Android now support
debugging that better then next step the

00:18:40.280 --> 00:18:40.290
debugging that better then next step the
 

00:18:40.290 --> 00:18:41.120
debugging that better then next step the
Android frameworks

00:18:41.120 --> 00:18:41.130
Android frameworks
 

00:18:41.130 --> 00:18:42.170
Android frameworks
there's a lot of things that happen

00:18:42.170 --> 00:18:42.180
there's a lot of things that happen
 

00:18:42.180 --> 00:18:44.720
there's a lot of things that happen
there the big thing is that we added API

00:18:44.720 --> 00:18:44.730
there the big thing is that we added API
 

00:18:44.730 --> 00:18:48.350
there the big thing is that we added API
annotations so that's not complete yet

00:18:48.350 --> 00:18:48.360
annotations so that's not complete yet
 

00:18:48.360 --> 00:18:50.780
annotations so that's not complete yet
but any new API we now have no mass and

00:18:50.780 --> 00:18:50.790
but any new API we now have no mass and
 

00:18:50.790 --> 00:18:52.900
but any new API we now have no mass and
default parameter default value

00:18:52.900 --> 00:18:52.910
default parameter default value
 

00:18:52.910 --> 00:18:54.920
default parameter default value
annotations so you can use those from

00:18:54.920 --> 00:18:54.930
annotations so you can use those from
 

00:18:54.930 --> 00:18:56.630
annotations so you can use those from
Coppin and we're working through the

00:18:56.630 --> 00:18:56.640
Coppin and we're working through the
 

00:18:56.640 --> 00:18:59.570
Coppin and we're working through the
existing API to annotate it as well then

00:18:59.570 --> 00:18:59.580
existing API to annotate it as well then
 

00:18:59.580 --> 00:19:01.940
existing API to annotate it as well then
we added this cotton extension api's so

00:19:01.940 --> 00:19:01.950
we added this cotton extension api's so
 

00:19:01.950 --> 00:19:03.000
we added this cotton extension api's so
these are ex

00:19:03.000 --> 00:19:03.010
these are ex
 

00:19:03.010 --> 00:19:04.169
these are ex
libraries that you include in your

00:19:04.169 --> 00:19:04.179
libraries that you include in your
 

00:19:04.179 --> 00:19:07.260
libraries that you include in your
project that provide extra api's through

00:19:07.260 --> 00:19:07.270
project that provide extra api's through
 

00:19:07.270 --> 00:19:09.049
project that provide extra api's through
extension methods that make your cotton

00:19:09.049 --> 00:19:09.059
extension methods that make your cotton
 

00:19:09.059 --> 00:19:13.080
extension methods that make your cotton
code more automatic then we added

00:19:13.080 --> 00:19:13.090
code more automatic then we added
 

00:19:13.090 --> 00:19:15.090
code more automatic then we added
co-routine support for a whole bunch of

00:19:15.090 --> 00:19:15.100
co-routine support for a whole bunch of
 

00:19:15.100 --> 00:19:18.930
co-routine support for a whole bunch of
the jetpack libraries so this allows you

00:19:18.930 --> 00:19:18.940
the jetpack libraries so this allows you
 

00:19:18.940 --> 00:19:20.970
the jetpack libraries so this allows you
to write asynchronous code in a more

00:19:20.970 --> 00:19:20.980
to write asynchronous code in a more
 

00:19:20.980 --> 00:19:23.610
to write asynchronous code in a more
procedural way and of course yesterday

00:19:23.610 --> 00:19:23.620
procedural way and of course yesterday
 

00:19:23.620 --> 00:19:25.950
procedural way and of course yesterday
we announced jetpack compose which is

00:19:25.950 --> 00:19:25.960
we announced jetpack compose which is
 

00:19:25.960 --> 00:19:29.039
we announced jetpack compose which is
all Kotlin so let's take a look at the

00:19:29.039 --> 00:19:29.049
all Kotlin so let's take a look at the
 

00:19:29.049 --> 00:19:32.510
all Kotlin so let's take a look at the
demo okay so I've built a small app here

00:19:32.510 --> 00:19:32.520
demo okay so I've built a small app here
 

00:19:32.520 --> 00:19:35.940
demo okay so I've built a small app here
it downloads a list of shows that are

00:19:35.940 --> 00:19:35.950
it downloads a list of shows that are
 

00:19:35.950 --> 00:19:38.789
it downloads a list of shows that are
available from a server using retrofit

00:19:38.789 --> 00:19:38.799
available from a server using retrofit
 

00:19:38.799 --> 00:19:41.190
available from a server using retrofit
and then it checks against the local

00:19:41.190 --> 00:19:41.200
and then it checks against the local
 

00:19:41.200 --> 00:19:43.080
and then it checks against the local
sequel database if I have watch these

00:19:43.080 --> 00:19:43.090
sequel database if I have watch these
 

00:19:43.090 --> 00:19:46.799
sequel database if I have watch these
shows using the room api's so here you

00:19:46.799 --> 00:19:46.809
shows using the room api's so here you
 

00:19:46.809 --> 00:19:49.049
shows using the room api's so here you
see that I have defined the API to get a

00:19:49.049 --> 00:19:49.059
see that I have defined the API to get a
 

00:19:49.059 --> 00:19:51.630
see that I have defined the API to get a
list of shows in both using rx Java as

00:19:51.630 --> 00:19:51.640
list of shows in both using rx Java as
 

00:19:51.640 --> 00:19:54.720
list of shows in both using rx Java as
well as using the Kotlin poverty the

00:19:54.720 --> 00:19:54.730
well as using the Kotlin poverty the
 

00:19:54.730 --> 00:19:56.549
well as using the Kotlin poverty the
async feature and you see that the api's

00:19:56.549 --> 00:19:56.559
async feature and you see that the api's
 

00:19:56.559 --> 00:19:58.799
async feature and you see that the api's
are pretty much the same with like just

00:19:58.799 --> 00:19:58.809
are pretty much the same with like just
 

00:19:58.809 --> 00:20:01.380
are pretty much the same with like just
a little different return type and the

00:20:01.380 --> 00:20:01.390
a little different return type and the
 

00:20:01.390 --> 00:20:10.440
a little different return type and the
room side sorry

00:20:10.440 --> 00:20:10.450
 
 

00:20:10.450 --> 00:20:13.690
 
where I could go

00:20:13.690 --> 00:20:13.700
 
 

00:20:13.700 --> 00:20:16.100
 
okay we'll skip the okay it's pretty

00:20:16.100 --> 00:20:16.110
okay we'll skip the okay it's pretty
 

00:20:16.110 --> 00:20:18.410
okay we'll skip the okay it's pretty
much hear this story so you see the same

00:20:18.410 --> 00:20:18.420
much hear this story so you see the same
 

00:20:18.420 --> 00:20:20.630
much hear this story so you see the same
thing have I watched the show Rx and

00:20:20.630 --> 00:20:20.640
thing have I watched the show Rx and
 

00:20:20.640 --> 00:20:22.460
thing have I watched the show Rx and
Java it's very similar here's the

00:20:22.460 --> 00:20:22.470
Java it's very similar here's the
 

00:20:22.470 --> 00:20:26.300
Java it's very similar here's the
flowable there says to spend so the API

00:20:26.300 --> 00:20:26.310
flowable there says to spend so the API
 

00:20:26.310 --> 00:20:27.770
flowable there says to spend so the API
is pretty similar now let's look at the

00:20:27.770 --> 00:20:27.780
is pretty similar now let's look at the
 

00:20:27.780 --> 00:20:29.900
is pretty similar now let's look at the
K if you call that code between Rx and

00:20:29.900 --> 00:20:29.910
K if you call that code between Rx and
 

00:20:29.910 --> 00:20:33.710
K if you call that code between Rx and
Java Rx and co-routines so in our X we

00:20:33.710 --> 00:20:33.720
Java Rx and co-routines so in our X we
 

00:20:33.720 --> 00:20:37.790
Java Rx and co-routines so in our X we
use a lot of operators to view our show

00:20:37.790 --> 00:20:37.800
use a lot of operators to view our show
 

00:20:37.800 --> 00:20:39.380
use a lot of operators to view our show
at the RF flow with all the asynchronous

00:20:39.380 --> 00:20:39.390
at the RF flow with all the asynchronous
 

00:20:39.390 --> 00:20:42.230
at the RF flow with all the asynchronous
calls and this can become pretty complex

00:20:42.230 --> 00:20:42.240
calls and this can become pretty complex
 

00:20:42.240 --> 00:20:43.700
calls and this can become pretty complex
and you see that this code is

00:20:43.700 --> 00:20:43.710
and you see that this code is
 

00:20:43.710 --> 00:20:45.680
and you see that this code is
highlighted yellow it means that there's

00:20:45.680 --> 00:20:45.690
highlighted yellow it means that there's
 

00:20:45.690 --> 00:20:46.580
highlighted yellow it means that there's
something I know I'm doing with the

00:20:46.580 --> 00:20:46.590
something I know I'm doing with the
 

00:20:46.590 --> 00:20:48.410
something I know I'm doing with the
return type so you need to make sure

00:20:48.410 --> 00:20:48.420
return type so you need to make sure
 

00:20:48.420 --> 00:20:50.320
return type so you need to make sure
that when you subscribe he deal with the

00:20:50.320 --> 00:20:50.330
that when you subscribe he deal with the
 

00:20:50.330 --> 00:20:54.290
that when you subscribe he deal with the
the subscription of course Rx brought

00:20:54.290 --> 00:20:54.300
the subscription of course Rx brought
 

00:20:54.300 --> 00:20:57.470
the subscription of course Rx brought
great express ability to Java and the

00:20:57.470 --> 00:20:57.480
great express ability to Java and the
 

00:20:57.480 --> 00:20:59.000
great express ability to Java and the
inventors of rx they were they were

00:20:59.000 --> 00:20:59.010
inventors of rx they were they were
 

00:20:59.010 --> 00:21:00.940
inventors of rx they were they were
smart they'd been what they're building

00:21:00.940 --> 00:21:00.950
smart they'd been what they're building
 

00:21:00.950 --> 00:21:03.080
smart they'd been what they're building
but they were limited by the language

00:21:03.080 --> 00:21:03.090
but they were limited by the language
 

00:21:03.090 --> 00:21:05.600
but they were limited by the language
and Kotlin we now have co-routines

00:21:05.600 --> 00:21:05.610
and Kotlin we now have co-routines
 

00:21:05.610 --> 00:21:08.300
and Kotlin we now have co-routines
and we can actually do this much nicer

00:21:08.300 --> 00:21:08.310
and we can actually do this much nicer
 

00:21:08.310 --> 00:21:10.730
and we can actually do this much nicer
so here of the same code using

00:21:10.730 --> 00:21:10.740
so here of the same code using
 

00:21:10.740 --> 00:21:11.300
so here of the same code using
co-routines

00:21:11.300 --> 00:21:11.310
co-routines
 

00:21:11.310 --> 00:21:13.640
co-routines
we first get the list of shows from the

00:21:13.640 --> 00:21:13.650
we first get the list of shows from the
 

00:21:13.650 --> 00:21:16.100
we first get the list of shows from the
server and then we call this a weight

00:21:16.100 --> 00:21:16.110
server and then we call this a weight
 

00:21:16.110 --> 00:21:18.290
server and then we call this a weight
function and the ID tells you hey

00:21:18.290 --> 00:21:18.300
function and the ID tells you hey
 

00:21:18.300 --> 00:21:19.670
function and the ID tells you hey
there's something asynchronous going on

00:21:19.670 --> 00:21:19.680
there's something asynchronous going on
 

00:21:19.680 --> 00:21:22.250
there's something asynchronous going on
here then we can use regular for loops

00:21:22.250 --> 00:21:22.260
here then we can use regular for loops
 

00:21:22.260 --> 00:21:25.640
here then we can use regular for loops
it's right over return shows and then we

00:21:25.640 --> 00:21:25.650
it's right over return shows and then we
 

00:21:25.650 --> 00:21:27.620
it's right over return shows and then we
make our asynchronous call to see if I

00:21:27.620 --> 00:21:27.630
make our asynchronous call to see if I
 

00:21:27.630 --> 00:21:29.000
make our asynchronous call to see if I
ever watch this show in the local

00:21:29.000 --> 00:21:29.010
ever watch this show in the local
 

00:21:29.010 --> 00:21:31.580
ever watch this show in the local
database and then we continue from there

00:21:31.580 --> 00:21:31.590
database and then we continue from there
 

00:21:31.590 --> 00:21:33.950
database and then we continue from there
and then here you see this large call

00:21:33.950 --> 00:21:33.960
and then here you see this large call
 

00:21:33.960 --> 00:21:35.720
and then here you see this large call
which will tell you hey make this call

00:21:35.720 --> 00:21:35.730
which will tell you hey make this call
 

00:21:35.730 --> 00:21:37.910
which will tell you hey make this call
to make sure that we notified that the

00:21:37.910 --> 00:21:37.920
to make sure that we notified that the
 

00:21:37.920 --> 00:21:40.880
to make sure that we notified that the
data set is changed on the UI thread and

00:21:40.880 --> 00:21:40.890
data set is changed on the UI thread and
 

00:21:40.890 --> 00:21:42.980
data set is changed on the UI thread and
so nice thing here is that it looks more

00:21:42.980 --> 00:21:42.990
so nice thing here is that it looks more
 

00:21:42.990 --> 00:21:48.470
so nice thing here is that it looks more
procedural and when I do my debugging so

00:21:48.470 --> 00:21:48.480
procedural and when I do my debugging so
 

00:21:48.480 --> 00:21:54.530
procedural and when I do my debugging so
launch now

00:21:54.530 --> 00:21:54.540
 
 

00:21:54.540 --> 00:21:58.390
 
there we go

00:21:58.390 --> 00:21:58.400
 
 

00:21:58.400 --> 00:22:02.950
 
and that's not working of course every

00:22:02.950 --> 00:22:02.960
and that's not working of course every
 

00:22:02.960 --> 00:22:05.230
and that's not working of course every
right so doing so you see that I can

00:22:05.230 --> 00:22:05.240
right so doing so you see that I can
 

00:22:05.240 --> 00:22:06.610
right so doing so you see that I can
actually look at variables from the

00:22:06.610 --> 00:22:06.620
actually look at variables from the
 

00:22:06.620 --> 00:22:08.680
actually look at variables from the
whole method not just from the specific

00:22:08.680 --> 00:22:08.690
whole method not just from the specific
 

00:22:08.690 --> 00:22:11.799
whole method not just from the specific
operator and so it makes your life much

00:22:11.799 --> 00:22:11.809
operator and so it makes your life much
 

00:22:11.809 --> 00:22:12.730
operator and so it makes your life much
easier when you're debugging your

00:22:12.730 --> 00:22:12.740
easier when you're debugging your
 

00:22:12.740 --> 00:22:14.560
easier when you're debugging your
asynchronous code so let's switch back

00:22:14.560 --> 00:22:14.570
asynchronous code so let's switch back
 

00:22:14.570 --> 00:22:18.900
asynchronous code so let's switch back
to the slides

00:22:18.900 --> 00:22:18.910
 
 

00:22:18.910 --> 00:22:22.540
 
okay so next Android tooling we've done

00:22:22.540 --> 00:22:22.550
okay so next Android tooling we've done
 

00:22:22.550 --> 00:22:24.010
okay so next Android tooling we've done
a lot of stuff in Android studio to make

00:22:24.010 --> 00:22:24.020
a lot of stuff in Android studio to make
 

00:22:24.020 --> 00:22:25.900
a lot of stuff in Android studio to make
sure that coupling is supported well the

00:22:25.900 --> 00:22:25.910
sure that coupling is supported well the
 

00:22:25.910 --> 00:22:27.160
sure that coupling is supported well the
first thing I did is we made sure that

00:22:27.160 --> 00:22:27.170
first thing I did is we made sure that
 

00:22:27.170 --> 00:22:29.020
first thing I did is we made sure that
the cotton plugin is part of Android

00:22:29.020 --> 00:22:29.030
the cotton plugin is part of Android
 

00:22:29.030 --> 00:22:31.240
the cotton plugin is part of Android
studio so that we can test it well

00:22:31.240 --> 00:22:31.250
studio so that we can test it well
 

00:22:31.250 --> 00:22:33.310
studio so that we can test it well
before release it and we also work

00:22:33.310 --> 00:22:33.320
before release it and we also work
 

00:22:33.320 --> 00:22:35.350
before release it and we also work
closely with JetBrains anytime they

00:22:35.350 --> 00:22:35.360
closely with JetBrains anytime they
 

00:22:35.360 --> 00:22:37.810
closely with JetBrains anytime they
applied update the cotton plugin we test

00:22:37.810 --> 00:22:37.820
applied update the cotton plugin we test
 

00:22:37.820 --> 00:22:39.760
applied update the cotton plugin we test
it before they go public to make sure

00:22:39.760 --> 00:22:39.770
it before they go public to make sure
 

00:22:39.770 --> 00:22:41.290
it before they go public to make sure
that Android studio and Coplin work well

00:22:41.290 --> 00:22:41.300
that Android studio and Coplin work well
 

00:22:41.300 --> 00:22:42.090
that Android studio and Coplin work well
together

00:22:42.090 --> 00:22:42.100
together
 

00:22:42.100 --> 00:22:45.070
together
next we added Android specific

00:22:45.070 --> 00:22:45.080
next we added Android specific
 

00:22:45.080 --> 00:22:46.780
next we added Android specific
refactoring support there's a lot of

00:22:46.780 --> 00:22:46.790
refactoring support there's a lot of
 

00:22:46.790 --> 00:22:49.000
refactoring support there's a lot of
actions in the IDE that are Android

00:22:49.000 --> 00:22:49.010
actions in the IDE that are Android
 

00:22:49.010 --> 00:22:51.190
actions in the IDE that are Android
specific refactorings and we're working

00:22:51.190 --> 00:22:51.200
specific refactorings and we're working
 

00:22:51.200 --> 00:22:53.169
specific refactorings and we're working
on adding support for those all of those

00:22:53.169 --> 00:22:53.179
on adding support for those all of those
 

00:22:53.179 --> 00:22:56.770
on adding support for those all of those
in cotton on the lint side Lind has

00:22:56.770 --> 00:22:56.780
in cotton on the lint side Lind has
 

00:22:56.780 --> 00:22:58.290
in cotton on the lint side Lind has
pretty much completely rewritten

00:22:58.290 --> 00:22:58.300
pretty much completely rewritten
 

00:22:58.300 --> 00:23:00.880
pretty much completely rewritten
its used to write second Alice which

00:23:00.880 --> 00:23:00.890
its used to write second Alice which
 

00:23:00.890 --> 00:23:03.640
its used to write second Alice which
checks for Java language now it uses

00:23:03.640 --> 00:23:03.650
checks for Java language now it uses
 

00:23:03.650 --> 00:23:05.290
checks for Java language now it uses
this thing called you ast which allows

00:23:05.290 --> 00:23:05.300
this thing called you ast which allows
 

00:23:05.300 --> 00:23:08.410
this thing called you ast which allows
you to write the same Lin check once and

00:23:08.410 --> 00:23:08.420
you to write the same Lin check once and
 

00:23:08.420 --> 00:23:10.330
you to write the same Lin check once and
then it can analyze both Kotlin and Java

00:23:10.330 --> 00:23:10.340
then it can analyze both Kotlin and Java
 

00:23:10.340 --> 00:23:11.130
then it can analyze both Kotlin and Java
code

00:23:11.130 --> 00:23:11.140
code
 

00:23:11.140 --> 00:23:13.630
code
we added project templates so that when

00:23:13.630 --> 00:23:13.640
we added project templates so that when
 

00:23:13.640 --> 00:23:15.580
we added project templates so that when
you creating a new fragment or a new

00:23:15.580 --> 00:23:15.590
you creating a new fragment or a new
 

00:23:15.590 --> 00:23:18.340
you creating a new fragment or a new
activity you have Kotlin code Bryden

00:23:18.340 --> 00:23:18.350
activity you have Kotlin code Bryden
 

00:23:18.350 --> 00:23:19.770
activity you have Kotlin code Bryden
starts you don't have to convert that

00:23:19.770 --> 00:23:19.780
starts you don't have to convert that
 

00:23:19.780 --> 00:23:22.540
starts you don't have to convert that
then on the compiler side our new

00:23:22.540 --> 00:23:22.550
then on the compiler side our new
 

00:23:22.550 --> 00:23:24.490
then on the compiler side our new
shrinker array has a lot of colon

00:23:24.490 --> 00:23:24.500
shrinker array has a lot of colon
 

00:23:24.500 --> 00:23:27.220
shrinker array has a lot of colon
specific optimization it's so that you

00:23:27.220 --> 00:23:27.230
specific optimization it's so that you
 

00:23:27.230 --> 00:23:29.049
specific optimization it's so that you
get the benefit of making your code as

00:23:29.049 --> 00:23:29.059
get the benefit of making your code as
 

00:23:29.059 --> 00:23:29.740
get the benefit of making your code as
small as possible

00:23:29.740 --> 00:23:29.750
small as possible
 

00:23:29.750 --> 00:23:33.340
small as possible
and of course the IDE has now support

00:23:33.340 --> 00:23:33.350
and of course the IDE has now support
 

00:23:33.350 --> 00:23:38.380
and of course the IDE has now support
for the jetpack compose a framework own

00:23:38.380 --> 00:23:38.390
for the jetpack compose a framework own
 

00:23:38.390 --> 00:23:41.169
for the jetpack compose a framework own
documentation and sample sites if you

00:23:41.169 --> 00:23:41.179
documentation and sample sites if you
 

00:23:41.179 --> 00:23:42.660
documentation and sample sites if you
look at developers anyway they've come

00:23:42.660 --> 00:23:42.670
look at developers anyway they've come
 

00:23:42.670 --> 00:23:46.690
look at developers anyway they've come
all api references now have both cotton

00:23:46.690 --> 00:23:46.700
all api references now have both cotton
 

00:23:46.700 --> 00:23:49.180
all api references now have both cotton
and Java syntax available there is a

00:23:49.180 --> 00:23:49.190
and Java syntax available there is a
 

00:23:49.190 --> 00:23:51.250
and Java syntax available there is a
content specific documentation portal

00:23:51.250 --> 00:23:51.260
content specific documentation portal
 

00:23:51.260 --> 00:23:52.660
content specific documentation portal
which will tell you how to get started

00:23:52.660 --> 00:23:52.670
which will tell you how to get started
 

00:23:52.670 --> 00:23:56.460
which will tell you how to get started
on Cortland how to use call routines etc

00:23:56.460 --> 00:23:56.470
on Cortland how to use call routines etc
 

00:23:56.470 --> 00:23:58.870
on Cortland how to use call routines etc
you also see that a lot of the samples

00:23:58.870 --> 00:23:58.880
you also see that a lot of the samples
 

00:23:58.880 --> 00:24:01.299
you also see that a lot of the samples
and snippets now have Copeland available

00:24:01.299 --> 00:24:01.309
and snippets now have Copeland available
 

00:24:01.309 --> 00:24:03.100
and snippets now have Copeland available
that's both on the sides on our github

00:24:03.100 --> 00:24:03.110
that's both on the sides on our github
 

00:24:03.110 --> 00:24:05.950
that's both on the sides on our github
samples as well as if you look on Google

00:24:05.950 --> 00:24:05.960
samples as well as if you look on Google
 

00:24:05.960 --> 00:24:07.990
samples as well as if you look on Google
i/o this year you'll see that most of

00:24:07.990 --> 00:24:08.000
i/o this year you'll see that most of
 

00:24:08.000 --> 00:24:09.820
i/o this year you'll see that most of
the presentations from Android clear

00:24:09.820 --> 00:24:09.830
the presentations from Android clear
 

00:24:09.830 --> 00:24:12.070
the presentations from Android clear
samples in Copeland

00:24:12.070 --> 00:24:12.080
samples in Copeland
 

00:24:12.080 --> 00:24:13.899
samples in Copeland
there's a couple of apps that you can

00:24:13.899 --> 00:24:13.909
there's a couple of apps that you can
 

00:24:13.909 --> 00:24:15.940
there's a couple of apps that you can
take a look at as well the Google i/o

00:24:15.940 --> 00:24:15.950
take a look at as well the Google i/o
 

00:24:15.950 --> 00:24:17.590
take a look at as well the Google i/o
app as well as this new Android

00:24:17.590 --> 00:24:17.600
app as well as this new Android
 

00:24:17.600 --> 00:24:20.110
app as well as this new Android
sunflower app have been build up from

00:24:20.110 --> 00:24:20.120
sunflower app have been build up from
 

00:24:20.120 --> 00:24:24.430
sunflower app have been build up from
the ground up using Copelan we often get

00:24:24.430 --> 00:24:24.440
the ground up using Copelan we often get
 

00:24:24.440 --> 00:24:26.350
the ground up using Copelan we often get
asked hey it's great if you guys are

00:24:26.350 --> 00:24:26.360
asked hey it's great if you guys are
 

00:24:26.360 --> 00:24:30.399
asked hey it's great if you guys are
recommending Kotlin but are you using it

00:24:30.399 --> 00:24:30.409
recommending Kotlin but are you using it
 

00:24:30.409 --> 00:24:32.289
recommending Kotlin but are you using it
yourself and of course that's a very

00:24:32.289 --> 00:24:32.299
yourself and of course that's a very
 

00:24:32.299 --> 00:24:35.230
yourself and of course that's a very
fair question and now at Google we have

00:24:35.230 --> 00:24:35.240
fair question and now at Google we have
 

00:24:35.240 --> 00:24:38.320
fair question and now at Google we have
a lot of in-house developer tools and so

00:24:38.320 --> 00:24:38.330
a lot of in-house developer tools and so
 

00:24:38.330 --> 00:24:40.060
a lot of in-house developer tools and so
it took us some time to add Copland

00:24:40.060 --> 00:24:40.070
it took us some time to add Copland
 

00:24:40.070 --> 00:24:42.820
it took us some time to add Copland
support to those we started out with

00:24:42.820 --> 00:24:42.830
support to those we started out with
 

00:24:42.830 --> 00:24:44.289
support to those we started out with
internal apps for Googlers

00:24:44.289 --> 00:24:44.299
internal apps for Googlers
 

00:24:44.299 --> 00:24:45.940
internal apps for Googlers
for instance there is an internal app

00:24:45.940 --> 00:24:45.950
for instance there is an internal app
 

00:24:45.950 --> 00:24:49.029
for instance there is an internal app
that shows you maps and office locations

00:24:49.029 --> 00:24:49.039
that shows you maps and office locations
 

00:24:49.039 --> 00:24:50.799
that shows you maps and office locations
and so we learned a lot from that and

00:24:50.799 --> 00:24:50.809
and so we learned a lot from that and
 

00:24:50.809 --> 00:24:52.869
and so we learned a lot from that and
then since then we have actually started

00:24:52.869 --> 00:24:52.879
then since then we have actually started
 

00:24:52.879 --> 00:24:54.669
then since then we have actually started
using Kotlin in some of the public

00:24:54.669 --> 00:24:54.679
using Kotlin in some of the public
 

00:24:54.679 --> 00:24:57.249
using Kotlin in some of the public
Google apps and so here are some of the

00:24:57.249 --> 00:24:57.259
Google apps and so here are some of the
 

00:24:57.259 --> 00:24:59.590
Google apps and so here are some of the
apps are shipping content code on your

00:24:59.590 --> 00:24:59.600
apps are shipping content code on your
 

00:24:59.600 --> 00:25:03.009
apps are shipping content code on your
phones today and you can expect many

00:25:03.009 --> 00:25:03.019
phones today and you can expect many
 

00:25:03.019 --> 00:25:07.180
phones today and you can expect many
more to follow talking about adopting

00:25:07.180 --> 00:25:07.190
more to follow talking about adopting
 

00:25:07.190 --> 00:25:09.820
more to follow talking about adopting
Cortland if you look at the whole

00:25:09.820 --> 00:25:09.830
Cortland if you look at the whole
 

00:25:09.830 --> 00:25:13.539
Cortland if you look at the whole
ecosystem we've seen that in active

00:25:13.539 --> 00:25:13.549
ecosystem we've seen that in active
 

00:25:13.549 --> 00:25:15.090
ecosystem we've seen that in active
development an active element is

00:25:15.090 --> 00:25:15.100
development an active element is
 

00:25:15.100 --> 00:25:17.259
development an active element is
absolute have had an upload to the Play

00:25:17.259 --> 00:25:17.269
absolute have had an upload to the Play
 

00:25:17.269 --> 00:25:19.180
absolute have had an upload to the Play
Store in the last six months we see that

00:25:19.180 --> 00:25:19.190
Store in the last six months we see that
 

00:25:19.190 --> 00:25:22.180
Store in the last six months we see that
16% of the apps are now using Kotlin and

00:25:22.180 --> 00:25:22.190
16% of the apps are now using Kotlin and
 

00:25:22.190 --> 00:25:24.940
16% of the apps are now using Kotlin and
keep in mind an app can be updated it

00:25:24.940 --> 00:25:24.950
keep in mind an app can be updated it
 

00:25:24.950 --> 00:25:26.619
keep in mind an app can be updated it
just because there's one bug fix or one

00:25:26.619 --> 00:25:26.629
just because there's one bug fix or one
 

00:25:26.629 --> 00:25:28.899
just because there's one bug fix or one
asset chains so 16% is pretty impressive

00:25:28.899 --> 00:25:28.909
asset chains so 16% is pretty impressive
 

00:25:28.909 --> 00:25:30.759
asset chains so 16% is pretty impressive
that's five times growth since last i/o

00:25:30.759 --> 00:25:30.769
that's five times growth since last i/o
 

00:25:30.769 --> 00:25:33.009
that's five times growth since last i/o
and if you look at the top thousand apps

00:25:33.009 --> 00:25:33.019
and if you look at the top thousand apps
 

00:25:33.019 --> 00:25:35.680
and if you look at the top thousand apps
that's actually already a lot bigger 44%

00:25:35.680 --> 00:25:35.690
that's actually already a lot bigger 44%
 

00:25:35.690 --> 00:25:40.359
that's actually already a lot bigger 44%
of the apps there we see using cotton so

00:25:40.359 --> 00:25:40.369
of the apps there we see using cotton so
 

00:25:40.369 --> 00:25:42.669
of the apps there we see using cotton so
that brings us to Kotlin first you now

00:25:42.669 --> 00:25:42.679
that brings us to Kotlin first you now
 

00:25:42.679 --> 00:25:44.499
that brings us to Kotlin first you now
said yesterday and so I wanted to give

00:25:44.499 --> 00:25:44.509
said yesterday and so I wanted to give
 

00:25:44.509 --> 00:25:46.299
said yesterday and so I wanted to give
you a bit more of a few of why we did it

00:25:46.299 --> 00:25:46.309
you a bit more of a few of why we did it
 

00:25:46.309 --> 00:25:49.389
you a bit more of a few of why we did it
and what it's going to mean so why would

00:25:49.389 --> 00:25:49.399
and what it's going to mean so why would
 

00:25:49.399 --> 00:25:52.659
and what it's going to mean so why would
we announce Scotland first we see strong

00:25:52.659 --> 00:25:52.669
we announce Scotland first we see strong
 

00:25:52.669 --> 00:25:54.909
we announce Scotland first we see strong
adoption of people using Kotlin and we

00:25:54.909 --> 00:25:54.919
adoption of people using Kotlin and we
 

00:25:54.919 --> 00:25:57.009
adoption of people using Kotlin and we
see a big excitement in the community

00:25:57.009 --> 00:25:57.019
see a big excitement in the community
 

00:25:57.019 --> 00:25:59.379
see a big excitement in the community
when people start using cotton in fact

00:25:59.379 --> 00:25:59.389
when people start using cotton in fact
 

00:25:59.389 --> 00:26:02.200
when people start using cotton in fact
when people are asked in our surveys on

00:26:02.200 --> 00:26:02.210
when people are asked in our surveys on
 

00:26:02.210 --> 00:26:03.999
when people are asked in our surveys on
how much happier using call in they

00:26:03.999 --> 00:26:04.009
how much happier using call in they
 

00:26:04.009 --> 00:26:05.980
how much happier using call in they
actually scored 25% higher than people

00:26:05.980 --> 00:26:05.990
actually scored 25% higher than people
 

00:26:05.990 --> 00:26:09.159
actually scored 25% higher than people
are not using Coplin many occur apps

00:26:09.159 --> 00:26:09.169
are not using Coplin many occur apps
 

00:26:09.169 --> 00:26:10.899
are not using Coplin many occur apps
across the industry and inside Google

00:26:10.899 --> 00:26:10.909
across the industry and inside Google
 

00:26:10.909 --> 00:26:13.720
across the industry and inside Google
are now using Kotlin we've reached out

00:26:13.720 --> 00:26:13.730
are now using Kotlin we've reached out
 

00:26:13.730 --> 00:26:15.970
are now using Kotlin we've reached out
to many of our customers including our

00:26:15.970 --> 00:26:15.980
to many of our customers including our
 

00:26:15.980 --> 00:26:18.399
to many of our customers including our
customers Rhys reward any like keep

00:26:18.399 --> 00:26:18.409
customers Rhys reward any like keep
 

00:26:18.409 --> 00:26:21.840
customers Rhys reward any like keep
focused on an investment in Courtland

00:26:21.840 --> 00:26:21.850
focused on an investment in Courtland
 

00:26:21.850 --> 00:26:25.149
focused on an investment in Courtland
so what does that mean of course we're

00:26:25.149 --> 00:26:25.159
so what does that mean of course we're
 

00:26:25.159 --> 00:26:26.289
so what does that mean of course we're
going to keep supporting the Java

00:26:26.289 --> 00:26:26.299
going to keep supporting the Java
 

00:26:26.299 --> 00:26:28.570
going to keep supporting the Java
programming language in many aspects

00:26:28.570 --> 00:26:28.580
programming language in many aspects
 

00:26:28.580 --> 00:26:30.460
programming language in many aspects
right platform Android studio support

00:26:30.460 --> 00:26:30.470
right platform Android studio support
 

00:26:30.470 --> 00:26:34.509
right platform Android studio support
leans back talks and relax that's not

00:26:34.509 --> 00:26:34.519
leans back talks and relax that's not
 

00:26:34.519 --> 00:26:36.820
leans back talks and relax that's not
going away but if you look at some other

00:26:36.820 --> 00:26:36.830
going away but if you look at some other
 

00:26:36.830 --> 00:26:39.580
going away but if you look at some other
efforts like our online training samples

00:26:39.580 --> 00:26:39.590
efforts like our online training samples
 

00:26:39.590 --> 00:26:42.279
efforts like our online training samples
will first do Kotlin and then Java

00:26:42.279 --> 00:26:42.289
will first do Kotlin and then Java
 

00:26:42.289 --> 00:26:44.200
will first do Kotlin and then Java
foreign language will be best effort and

00:26:44.200 --> 00:26:44.210
foreign language will be best effort and
 

00:26:44.210 --> 00:26:45.489
foreign language will be best effort and
then of course there are some features

00:26:45.489 --> 00:26:45.499
then of course there are some features
 

00:26:45.499 --> 00:26:47.379
then of course there are some features
like the multi-platform projects and

00:26:47.379 --> 00:26:47.389
like the multi-platform projects and
 

00:26:47.389 --> 00:26:49.930
like the multi-platform projects and
jetpack compose that are only going to

00:26:49.930 --> 00:26:49.940
jetpack compose that are only going to
 

00:26:49.940 --> 00:26:52.680
jetpack compose that are only going to
be offered in content

00:26:52.680 --> 00:26:52.690
be offered in content
 

00:26:52.690 --> 00:26:55.539
be offered in content
now of course the next question that we

00:26:55.539 --> 00:26:55.549
now of course the next question that we
 

00:26:55.549 --> 00:26:57.099
now of course the next question that we
hear from people is well does it mean I

00:26:57.099 --> 00:26:57.109
hear from people is well does it mean I
 

00:26:57.109 --> 00:26:59.769
hear from people is well does it mean I
should switch please don't take Copeland

00:26:59.769 --> 00:26:59.779
should switch please don't take Copeland
 

00:26:59.779 --> 00:27:02.710
should switch please don't take Copeland
first as I need to go take all my Java

00:27:02.710 --> 00:27:02.720
first as I need to go take all my Java
 

00:27:02.720 --> 00:27:06.009
first as I need to go take all my Java
code and rewrite it and call them that's

00:27:06.009 --> 00:27:06.019
code and rewrite it and call them that's
 

00:27:06.019 --> 00:27:08.080
code and rewrite it and call them that's
not what we want you to do like look at

00:27:08.080 --> 00:27:08.090
not what we want you to do like look at
 

00:27:08.090 --> 00:27:11.080
not what we want you to do like look at
the Android studio that is many many

00:27:11.080 --> 00:27:11.090
the Android studio that is many many
 

00:27:11.090 --> 00:27:13.210
the Android studio that is many many
hundred thousand lines of code right now

00:27:13.210 --> 00:27:13.220
hundred thousand lines of code right now
 

00:27:13.220 --> 00:27:15.430
hundred thousand lines of code right now
we're about 10 percent Cullen of the

00:27:15.430 --> 00:27:15.440
we're about 10 percent Cullen of the
 

00:27:15.440 --> 00:27:18.220
we're about 10 percent Cullen of the
Android studio specific code and so what

00:27:18.220 --> 00:27:18.230
Android studio specific code and so what
 

00:27:18.230 --> 00:27:20.440
Android studio specific code and so what
we do is we only take new functionality

00:27:20.440 --> 00:27:20.450
we do is we only take new functionality
 

00:27:20.450 --> 00:27:23.019
we do is we only take new functionality
right at hand : and it is possible

00:27:23.019 --> 00:27:23.029
right at hand : and it is possible
 

00:27:23.029 --> 00:27:24.190
right at hand : and it is possible
because Coughlin has great

00:27:24.190 --> 00:27:24.200
because Coughlin has great
 

00:27:24.200 --> 00:27:26.619
because Coughlin has great
interoperability with Java you can write

00:27:26.619 --> 00:27:26.629
interoperability with Java you can write
 

00:27:26.629 --> 00:27:27.940
interoperability with Java you can write
a single class in Copeland and keep the

00:27:27.940 --> 00:27:27.950
a single class in Copeland and keep the
 

00:27:27.950 --> 00:27:30.070
a single class in Copeland and keep the
rest in Java or keep have 99% of your

00:27:30.070 --> 00:27:30.080
rest in Java or keep have 99% of your
 

00:27:30.080 --> 00:27:32.259
rest in Java or keep have 99% of your
coding cotton and have only some

00:27:32.259 --> 00:27:32.269
coding cotton and have only some
 

00:27:32.269 --> 00:27:34.960
coding cotton and have only some
leftovers in Java of course it matters

00:27:34.960 --> 00:27:34.970
leftovers in Java of course it matters
 

00:27:34.970 --> 00:27:36.789
leftovers in Java of course it matters
what is your current state of your

00:27:36.789 --> 00:27:36.799
what is your current state of your
 

00:27:36.799 --> 00:27:39.190
what is your current state of your
project and team if you want a week away

00:27:39.190 --> 00:27:39.200
project and team if you want a week away
 

00:27:39.200 --> 00:27:41.440
project and team if you want a week away
from shipping your release app orient

00:27:41.440 --> 00:27:41.450
from shipping your release app orient
 

00:27:41.450 --> 00:27:42.879
from shipping your release app orient
the rest and best time to switch the

00:27:42.879 --> 00:27:42.889
the rest and best time to switch the
 

00:27:42.889 --> 00:27:44.859
the rest and best time to switch the
clock line but if you're starting a new

00:27:44.859 --> 00:27:44.869
clock line but if you're starting a new
 

00:27:44.869 --> 00:27:47.049
clock line but if you're starting a new
development cycle and you're like hey I

00:27:47.049 --> 00:27:47.059
development cycle and you're like hey I
 

00:27:47.059 --> 00:27:49.210
development cycle and you're like hey I
could for you take on call them and of

00:27:49.210 --> 00:27:49.220
could for you take on call them and of
 

00:27:49.220 --> 00:27:50.440
could for you take on call them and of
course it depends on your team as well

00:27:50.440 --> 00:27:50.450
course it depends on your team as well
 

00:27:50.450 --> 00:27:55.470
course it depends on your team as well
are they interested in Cortland are they

00:27:55.470 --> 00:27:55.480
are they interested in Cortland are they
 

00:27:55.480 --> 00:27:58.779
are they interested in Cortland are they
do they feel secure taking this on we

00:27:58.779 --> 00:27:58.789
do they feel secure taking this on we
 

00:27:58.789 --> 00:28:00.190
do they feel secure taking this on we
have also found that a lot of people

00:28:00.190 --> 00:28:00.200
have also found that a lot of people
 

00:28:00.200 --> 00:28:03.190
have also found that a lot of people
actually use mentioning cotton in their

00:28:03.190 --> 00:28:03.200
actually use mentioning cotton in their
 

00:28:03.200 --> 00:28:05.470
actually use mentioning cotton in their
recruitment that they can get a lot more

00:28:05.470 --> 00:28:05.480
recruitment that they can get a lot more
 

00:28:05.480 --> 00:28:08.560
recruitment that they can get a lot more
candidates so things to consider of

00:28:08.560 --> 00:28:08.570
candidates so things to consider of
 

00:28:08.570 --> 00:28:09.940
candidates so things to consider of
course on the technical side is also

00:28:09.940 --> 00:28:09.950
course on the technical side is also
 

00:28:09.950 --> 00:28:11.919
course on the technical side is also
trade-offs to consider Kotlin brings

00:28:11.919 --> 00:28:11.929
trade-offs to consider Kotlin brings
 

00:28:11.929 --> 00:28:13.749
trade-offs to consider Kotlin brings
great features lower productivity and

00:28:13.749 --> 00:28:13.759
great features lower productivity and
 

00:28:13.759 --> 00:28:16.539
great features lower productivity and
satisfaction but you have to think about

00:28:16.539 --> 00:28:16.549
satisfaction but you have to think about
 

00:28:16.549 --> 00:28:18.519
satisfaction but you have to think about
learning curve it takes time for people

00:28:18.519 --> 00:28:18.529
learning curve it takes time for people
 

00:28:18.529 --> 00:28:21.430
learning curve it takes time for people
to learn to write idea Matic kopplin we

00:28:21.430 --> 00:28:21.440
to learn to write idea Matic kopplin we
 

00:28:21.440 --> 00:28:22.930
to learn to write idea Matic kopplin we
see that most people who start writing

00:28:22.930 --> 00:28:22.940
see that most people who start writing
 

00:28:22.940 --> 00:28:24.729
see that most people who start writing
Coplin the first week they're really

00:28:24.729 --> 00:28:24.739
Coplin the first week they're really
 

00:28:24.739 --> 00:28:26.889
Coplin the first week they're really
writing Java in cotton and it takes them

00:28:26.889 --> 00:28:26.899
writing Java in cotton and it takes them
 

00:28:26.899 --> 00:28:28.419
writing Java in cotton and it takes them
three to six months to to really start

00:28:28.419 --> 00:28:28.429
three to six months to to really start
 

00:28:28.429 --> 00:28:30.609
three to six months to to really start
writing item at a coupling that's fine I

00:28:30.609 --> 00:28:30.619
writing item at a coupling that's fine I
 

00:28:30.619 --> 00:28:32.190
writing item at a coupling that's fine I
mean you still get all the benefits of

00:28:32.190 --> 00:28:32.200
mean you still get all the benefits of
 

00:28:32.200 --> 00:28:34.950
mean you still get all the benefits of
Copelan warning you about known as etc

00:28:34.950 --> 00:28:34.960
Copelan warning you about known as etc
 

00:28:34.960 --> 00:28:38.460
Copelan warning you about known as etc
then there's the build speed Koplin is

00:28:38.460 --> 00:28:38.470
then there's the build speed Koplin is
 

00:28:38.470 --> 00:28:40.950
then there's the build speed Koplin is
slower than the Java compiler it's doing

00:28:40.950 --> 00:28:40.960
slower than the Java compiler it's doing
 

00:28:40.960 --> 00:28:43.620
slower than the Java compiler it's doing
more work for you and it's a younger

00:28:43.620 --> 00:28:43.630
more work for you and it's a younger
 

00:28:43.630 --> 00:28:45.960
more work for you and it's a younger
compiler we are working hard on making

00:28:45.960 --> 00:28:45.970
compiler we are working hard on making
 

00:28:45.970 --> 00:28:49.530
compiler we are working hard on making
it faster and of course keep in mind yes

00:28:49.530 --> 00:28:49.540
it faster and of course keep in mind yes
 

00:28:49.540 --> 00:28:51.720
it faster and of course keep in mind yes
it's slower but you have to do fewer

00:28:51.720 --> 00:28:51.730
it's slower but you have to do fewer
 

00:28:51.730 --> 00:28:53.010
it's slower but you have to do fewer
builds because your app will most likely

00:28:53.010 --> 00:28:53.020
builds because your app will most likely
 

00:28:53.020 --> 00:28:55.440
builds because your app will most likely
be correct there and there's also apk

00:28:55.440 --> 00:28:55.450
be correct there and there's also apk
 

00:28:55.450 --> 00:28:58.230
be correct there and there's also apk
size the app uses standard library and

00:28:58.230 --> 00:28:58.240
size the app uses standard library and
 

00:28:58.240 --> 00:29:00.300
size the app uses standard library and
it takes some space but things like our

00:29:00.300 --> 00:29:00.310
it takes some space but things like our
 

00:29:00.310 --> 00:29:04.350
it takes some space but things like our
rate can help you reduce that there's a

00:29:04.350 --> 00:29:04.360
rate can help you reduce that there's a
 

00:29:04.360 --> 00:29:05.610
rate can help you reduce that there's a
whole bunch of ongoing cut line we're

00:29:05.610 --> 00:29:05.620
whole bunch of ongoing cut line we're
 

00:29:05.620 --> 00:29:07.860
whole bunch of ongoing cut line we're
going on at Google of course jetpack

00:29:07.860 --> 00:29:07.870
going on at Google of course jetpack
 

00:29:07.870 --> 00:29:09.810
going on at Google of course jetpack
compose is the biggest thing there we

00:29:09.810 --> 00:29:09.820
compose is the biggest thing there we
 

00:29:09.820 --> 00:29:12.360
compose is the biggest thing there we
always keep adding new KTX api's all the

00:29:12.360 --> 00:29:12.370
always keep adding new KTX api's all the
 

00:29:12.370 --> 00:29:14.580
always keep adding new KTX api's all the
time and then on the compiler side we

00:29:14.580 --> 00:29:14.590
time and then on the compiler side we
 

00:29:14.590 --> 00:29:16.740
time and then on the compiler side we
doing a lot of work to make it faster

00:29:16.740 --> 00:29:16.750
doing a lot of work to make it faster
 

00:29:16.750 --> 00:29:20.910
doing a lot of work to make it faster
and like with : 3 103 30 we added in

00:29:20.910 --> 00:29:20.920
and like with : 3 103 30 we added in
 

00:29:20.920 --> 00:29:21.960
and like with : 3 103 30 we added in
communication and it eight processors

00:29:21.960 --> 00:29:21.970
communication and it eight processors
 

00:29:21.970 --> 00:29:24.480
communication and it eight processors
and there's much more to come you'll see

00:29:24.480 --> 00:29:24.490
and there's much more to come you'll see
 

00:29:24.490 --> 00:29:27.150
and there's much more to come you'll see
more improved tooling and more Docs and

00:29:27.150 --> 00:29:27.160
more improved tooling and more Docs and
 

00:29:27.160 --> 00:29:30.720
more improved tooling and more Docs and
samples using content if you're

00:29:30.720 --> 00:29:30.730
samples using content if you're
 

00:29:30.730 --> 00:29:31.950
samples using content if you're
interested in using Cortland but you're

00:29:31.950 --> 00:29:31.960
interested in using Cortland but you're
 

00:29:31.960 --> 00:29:33.480
interested in using Cortland but you're
not sure where to start we are

00:29:33.480 --> 00:29:33.490
not sure where to start we are
 

00:29:33.490 --> 00:29:35.400
not sure where to start we are
announcing Kotlin everywhere which is a

00:29:35.400 --> 00:29:35.410
announcing Kotlin everywhere which is a
 

00:29:35.410 --> 00:29:38.610
announcing Kotlin everywhere which is a
set of trainings hosted by both Google

00:29:38.610 --> 00:29:38.620
set of trainings hosted by both Google
 

00:29:38.620 --> 00:29:41.880
set of trainings hosted by both Google
and JetBrains and it's happening between

00:29:41.880 --> 00:29:41.890
and JetBrains and it's happening between
 

00:29:41.890 --> 00:29:43.950
and JetBrains and it's happening between
now and Cortland profit December at the

00:29:43.950 --> 00:29:43.960
now and Cortland profit December at the
 

00:29:43.960 --> 00:29:45.900
now and Cortland profit December at the
end of the year if you're interested in

00:29:45.900 --> 00:29:45.910
end of the year if you're interested in
 

00:29:45.910 --> 00:29:48.270
end of the year if you're interested in
that either participating or helping

00:29:48.270 --> 00:29:48.280
that either participating or helping
 

00:29:48.280 --> 00:29:53.390
that either participating or helping
hosting it go to this link and sign up

00:29:53.390 --> 00:29:53.400
hosting it go to this link and sign up
 

00:29:53.400 --> 00:29:57.060
hosting it go to this link and sign up
so with our new Copeland first web map

00:29:57.060 --> 00:29:57.070
so with our new Copeland first web map
 

00:29:57.070 --> 00:29:59.400
so with our new Copeland first web map
the investments in Copeland for Android

00:29:59.400 --> 00:29:59.410
the investments in Copeland for Android
 

00:29:59.410 --> 00:30:01.740
the investments in Copeland for Android
is only going to become larger I'd like

00:30:01.740 --> 00:30:01.750
is only going to become larger I'd like
 

00:30:01.750 --> 00:30:03.270
is only going to become larger I'd like
to invite all of you who haven't tried

00:30:03.270 --> 00:30:03.280
to invite all of you who haven't tried
 

00:30:03.280 --> 00:30:04.860
to invite all of you who haven't tried
popped in yet or haven't recently used

00:30:04.860 --> 00:30:04.870
popped in yet or haven't recently used
 

00:30:04.870 --> 00:30:07.260
popped in yet or haven't recently used
it to try it in your app today I hope

00:30:07.260 --> 00:30:07.270
it to try it in your app today I hope
 

00:30:07.270 --> 00:30:08.940
it to try it in your app today I hope
you'll have a similar experience like me

00:30:08.940 --> 00:30:08.950
you'll have a similar experience like me
 

00:30:08.950 --> 00:30:11.370
you'll have a similar experience like me
with Cortland you'll be more predictive

00:30:11.370 --> 00:30:11.380
with Cortland you'll be more predictive
 

00:30:11.380 --> 00:30:14.160
with Cortland you'll be more predictive
and have more fun coding thank you very

00:30:14.160 --> 00:30:14.170
and have more fun coding thank you very
 

00:30:14.170 --> 00:30:14.650
and have more fun coding thank you very
much

00:30:14.650 --> 00:30:14.660
much
 

00:30:14.660 --> 00:30:36.539
much
[Music]

