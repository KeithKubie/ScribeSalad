WEBVTT
Kind: captions
Language: en

00:00:02.833 --> 00:00:05.433
Black: So welcome all.
Thank you for coming.

00:00:05.433 --> 00:00:06.800
My name is Naomi Black,

00:00:06.800 --> 00:00:08.800
and I'm a member of the
Accessibility Engineering Group

00:00:08.800 --> 00:00:09.966
here at Google.

00:00:09.966 --> 00:00:11.566
And today,
I'm very pleased to invite

00:00:11.566 --> 00:00:13.700
our speaker,
Dr. Silvia Pfeiffer.

00:00:13.700 --> 00:00:17.033
Silvia is a member
and an invited expert

00:00:17.033 --> 00:00:20.633
on the W3C HTML
Accessibility Task Force.

00:00:20.633 --> 00:00:22.500
And she's also
the author of

00:00:22.500 --> 00:00:25.133
"The Definitive Guide
to HTML5 Video."

00:00:25.133 --> 00:00:26.800
So Silvia's here
to talk to us--

00:00:26.800 --> 00:00:28.133
come on up.

00:00:28.133 --> 00:00:30.766
Silvia's here to talk to us
today about WebVTT,

00:00:30.766 --> 00:00:32.733
which is one of the standards
for timed text

00:00:32.733 --> 00:00:34.833
which is under consideration
by the W3C.

00:00:34.833 --> 00:00:35.966
Thank you, Silvia.

00:00:35.966 --> 00:00:38.133
Pfeiffer: Thank you.

00:00:38.133 --> 00:00:40.200
Thanks for inviting me
to come and speak

00:00:40.200 --> 00:00:42.566
about this
important topic today.

00:00:42.566 --> 00:00:44.866
We know there are a lot
of discussions going on

00:00:44.866 --> 00:00:48.300
about formats
for captions,

00:00:48.300 --> 00:00:50.666
and we want to standardize them
for the web.

00:00:50.666 --> 00:00:52.733
But standardizing it
for the web

00:00:52.733 --> 00:00:54.333
has a much larger
impact these days

00:00:54.333 --> 00:00:56.000
than just on web browsers,

00:00:56.000 --> 00:00:57.200
just on the web itself.

00:00:57.200 --> 00:00:58.933
It goes into many
different devices.

00:00:58.933 --> 00:01:01.600
So we're very interested
and very keen

00:01:01.600 --> 00:01:05.100
to give a broad coverage
of available technology,

00:01:05.100 --> 00:01:07.266
and this is what we're trying
to do here today.

00:01:07.266 --> 00:01:13.833
So I'll be talking mostly about
WebVTT, the file format.

00:01:13.833 --> 00:01:16.100
But I'll also be talking
a little bit about

00:01:16.100 --> 00:01:20.433
how to plug that into
the web browser into HTML

00:01:20.433 --> 00:01:22.100
so that in the future,

00:01:22.100 --> 00:01:25.566
we have a very simple way
of displaying captions

00:01:25.566 --> 00:01:28.300
in web browsers on videos

00:01:28.300 --> 00:01:31.200
without having to do
much more than authoring a file

00:01:31.200 --> 00:01:35.433
and giving a link to
the web browser for that file.

00:01:35.433 --> 00:01:37.866
So it will be very simple
for people in the future

00:01:37.866 --> 00:01:41.500
to create more captions.

00:01:41.500 --> 00:01:43.033
All right, let's dig right in.

00:01:43.033 --> 00:01:45.933
As we were looking
at requirements

00:01:45.933 --> 00:01:47.866
of such a text format,

00:01:47.866 --> 00:01:50.566
a web text format
for video,

00:01:50.566 --> 00:01:54.633
we looked at the different
types of content

00:01:54.633 --> 00:01:57.833
that can be time-aligned
with video.

00:01:57.833 --> 00:02:00.533
And captions and subtitles
are the obvious ones,

00:02:00.533 --> 00:02:04.633
but text video descriptions
are also an important use.

00:02:04.633 --> 00:02:06.633
These are for blind users

00:02:06.633 --> 00:02:09.266
and can be read out
by screen readers

00:02:09.266 --> 00:02:12.900
in parallel to the playback
of the video.

00:02:12.900 --> 00:02:17.033
This may well not be
the most usable way

00:02:17.033 --> 00:02:18.633
of doing
audio descriptions,

00:02:18.633 --> 00:02:20.700
but it is a much easier
way to publish

00:02:20.700 --> 00:02:24.533
audio descriptions
for blind users.

00:02:24.533 --> 00:02:26.233
And, in fact,
for a lot of blind users,

00:02:26.233 --> 00:02:28.400
it may well be
all they need,

00:02:28.400 --> 00:02:30.900
because they already have
their screen readers set up,

00:02:30.900 --> 00:02:34.300
and it works really well
for some people.

00:02:34.300 --> 00:02:35.666
Further to that,

00:02:35.666 --> 00:02:38.600
we're also talking about
navigation or chapters,

00:02:38.600 --> 00:02:40.766
which is also
very important

00:02:40.766 --> 00:02:44.466
for blind and,
in fact, any user.

00:02:44.466 --> 00:02:46.733
If you want to go through
a video quickly

00:02:46.733 --> 00:02:48.166
and find out
what's in there,

00:02:48.166 --> 00:02:53.200
you want to jump to what we now
know as chapter markers.

00:02:53.200 --> 00:02:54.800
We can call them
navigation markers.

00:02:54.800 --> 00:02:59.000
This can be also covered
with the same kind of format.

00:02:59.000 --> 00:03:02.133
And more generally,
metadata.

00:03:02.133 --> 00:03:03.866
This is something
that archives

00:03:03.866 --> 00:03:05.866
are particularly
interested in,

00:03:05.866 --> 00:03:09.433
to attach metadata
to sections in the video.

00:03:09.433 --> 00:03:12.766
It can also be done with such
a time-aligned text format.

00:03:12.766 --> 00:03:16.566
So what we have
discussed for browsers

00:03:16.566 --> 00:03:18.133
is a very simple format.

00:03:18.133 --> 00:03:21.733
It's called WebVTT,
Video Text Tracks.

00:03:21.733 --> 00:03:23.866
WebVTT.

00:03:23.866 --> 00:03:26.266
This is one
of the very simple files

00:03:26.266 --> 00:03:27.566
that we can think about.

00:03:27.566 --> 00:03:30.466
Just a marker
at the beginning of the file

00:03:30.466 --> 00:03:33.000
that identifies
the file format.

00:03:33.000 --> 00:03:37.900
The captions or subtitles--
let's call them cues--

00:03:37.900 --> 00:03:41.033
then have an individual
identifier.

00:03:41.033 --> 00:03:43.966
In this case, it's
the number one and number two.

00:03:43.966 --> 00:03:46.200
Could be any string, however.

00:03:46.200 --> 00:03:48.966
And then we've got start times
and end times

00:03:48.966 --> 00:03:50.333
on each one of these cues,

00:03:50.333 --> 00:03:52.833
and a piece of text
in there.

00:03:52.833 --> 00:03:55.100
It turns out in--

00:03:55.100 --> 00:03:58.500
as we all know how captions
are displayed on screen

00:03:58.500 --> 00:04:01.000
in something like this

00:04:01.000 --> 00:04:05.933
if it's automatically
created by the browser.

00:04:05.933 --> 00:04:10.566
That was the very simplest way
of doing subtitles.

00:04:10.566 --> 00:04:12.866
Now, we want to do more
than just the simple captions.

00:04:12.866 --> 00:04:16.300
In particular,
if we want to achieve

00:04:16.300 --> 00:04:17.500
all the functionality

00:04:17.500 --> 00:04:20.666
of, for example,
the CEA-608 captions,

00:04:20.666 --> 00:04:23.400
then we need to do a bit more
than just text.

00:04:23.400 --> 00:04:25.500
We also want to have
some formatting in there.

00:04:25.500 --> 00:04:31.066
Here is an example
on how to do bold.

00:04:31.066 --> 00:04:32.533
I'll point to it.

00:04:32.533 --> 00:04:36.766
There's a bold tag in here,
so that will be bold text.

00:04:36.766 --> 00:04:39.000
Here is some italic text.

00:04:39.000 --> 00:04:41.600
And up here
we've got a general way

00:04:41.600 --> 00:04:47.600
to associate style or a class
to a piece of text

00:04:47.600 --> 00:04:48.966
and give it a meaning.

00:04:48.966 --> 00:04:50.233
In this situation,

00:04:50.233 --> 00:04:53.933
we've turned a piece of text
into red text

00:04:53.933 --> 00:04:56.266
and capitalized it.

00:04:58.566 --> 00:05:03.633
Of course, if we're using
this format also for subtitles,

00:05:03.633 --> 00:05:07.233
we need to be careful to cover
internationalization issues.

00:05:07.233 --> 00:05:09.766
WebVTT is very clear here.

00:05:09.766 --> 00:05:13.566
It requires UTF-8
character encoding.

00:05:13.566 --> 00:05:15.466
It has a ruby tag,

00:05:15.466 --> 00:05:19.866
which supports
Asian languages in particular.

00:05:19.866 --> 00:05:25.233
It also does vertical and
horizontal rendering of text.

00:05:25.233 --> 00:05:29.200
Again, possibly one of the most
important ones

00:05:29.200 --> 00:05:30.633
are Asian languages,

00:05:30.633 --> 00:05:31.800
and I think there are
a few other languages

00:05:31.800 --> 00:05:35.100
that are also
rendered vertically.

00:05:35.100 --> 00:05:38.100
And we need to make sure
we get the alignment right.

00:05:38.100 --> 00:05:43.033
Sometimes text is read
from the right to the left,

00:05:43.033 --> 00:05:45.266
so therefore it needs
to be aligned on the right

00:05:45.266 --> 00:05:47.766
rather than on the left.

00:05:50.833 --> 00:05:54.100
Now, positioning
is another requirement

00:05:54.100 --> 00:05:57.633
and, again, something
that traditional captions,

00:05:57.633 --> 00:06:00.233
TV captions,
are able to do.

00:06:00.233 --> 00:06:06.100
It's possible to position cues
anywhere in WebVTT.

00:06:06.100 --> 00:06:09.033
There are basically
three important ways

00:06:09.033 --> 00:06:10.700
to position text.

00:06:10.700 --> 00:06:12.500
There are line positions.

00:06:12.500 --> 00:06:18.900
So the concept of display lines
exists in WebVTT.

00:06:18.900 --> 00:06:21.233
So the line position
allows people

00:06:21.233 --> 00:06:24.300
to directly address
a specific line.

00:06:24.300 --> 00:06:30.600
It can be done with
a line number or a percentage.

00:06:30.600 --> 00:06:34.266
Then we have
the text position.

00:06:34.266 --> 00:06:37.900
This means we're placing
the text either on the left,

00:06:37.900 --> 00:06:41.933
in the middle,
or on the right.

00:06:41.933 --> 00:06:44.100
No, hold on.
That's the alignment, sorry.

00:06:44.100 --> 00:06:46.366
Alignment is
left, middle, and right.

00:06:46.366 --> 00:06:50.666
And the text position is...

00:06:50.666 --> 00:06:52.800
so when we have text
like this,

00:06:52.800 --> 00:06:57.100
it's in the middle,
and it's centered.

00:06:57.100 --> 00:06:58.666
So we can also do a centering,

00:06:58.666 --> 00:07:04.233
and we can do
a left alignment

00:07:04.233 --> 00:07:05.533
and a right alignment.

00:07:05.533 --> 00:07:08.933
But we can also move
that whole text elsewhere.

00:07:08.933 --> 00:07:11.300
So the text position
is where we move the text

00:07:11.300 --> 00:07:14.266
and the alignment is
where we align it at.

00:07:14.266 --> 00:07:16.433
Sorry for the confusion.

00:07:16.433 --> 00:07:21.266
We also have speaker semantics
included into WebVTT,

00:07:21.266 --> 00:07:24.266
which is interesting
because it allows us

00:07:24.266 --> 00:07:27.266
to put some semantic information
into our markup.

00:07:27.266 --> 00:07:30.366
Here, for example,
we have two people speaking.

00:07:30.366 --> 00:07:34.533
We know their position
on the left and on the right.

00:07:34.533 --> 00:07:39.200
And the speaker markup

00:07:39.200 --> 00:07:41.233
can tell us where we want
to position it

00:07:41.233 --> 00:07:44.400
and can also, for example,
help us always use

00:07:44.400 --> 00:07:47.466
the same styling
for the same speaker.

00:07:47.466 --> 00:07:49.866
So, for example, we want
to use the same font,

00:07:49.866 --> 00:07:51.300
the same font color,

00:07:51.300 --> 00:07:54.566
maybe a specific outline
or something for a speaker.

00:07:54.566 --> 00:07:55.833
We can define that

00:07:55.833 --> 00:08:01.200
and then apply that always
for that speaker.

00:08:01.200 --> 00:08:03.766
Now, so much for captions.

00:08:03.766 --> 00:08:07.066
Now we move on
to a little example

00:08:07.066 --> 00:08:09.000
on text descriptions.

00:08:09.000 --> 00:08:13.733
Here is one
that I've used previously,

00:08:13.733 --> 00:08:19.800
and we've got that
as an example on the site.

00:08:19.800 --> 00:08:21.166
I'm not gonna go there;

00:08:21.166 --> 00:08:22.666
I just want to mention it,

00:08:22.666 --> 00:08:25.066
because we want to focus
on captions today.

00:08:25.066 --> 00:08:29.700
But what happens here is,
we've got text that's aligned

00:08:29.700 --> 00:08:32.900
with a start and end time
as well.

00:08:32.900 --> 00:08:36.933
And for a typical word rate
of a screen reader,

00:08:36.933 --> 00:08:40.300
it will fit into that space,

00:08:40.300 --> 00:08:43.233
and it will be read back
by the screen reader

00:08:43.233 --> 00:08:44.533
during that time.

00:08:47.866 --> 00:08:51.566
And here is
the navigation example.

00:08:51.566 --> 00:08:56.200
As I mentioned, WebVTT can also
be used for navigation.

00:08:56.200 --> 00:08:58.166
Here we have three chapters,

00:08:58.166 --> 00:09:02.366
and we can directly jump
from chapter to chapter.

00:09:02.366 --> 00:09:07.166
There needs to be extra controls
on videos to support this,

00:09:07.166 --> 00:09:10.800
but this is something
we're working towards.

00:09:10.800 --> 00:09:12.700
Now, of course,
as I'm saying,

00:09:12.700 --> 00:09:15.133
controls and input
into web pages

00:09:15.133 --> 00:09:16.466
and automatic rendering,

00:09:16.466 --> 00:09:18.766
we need to know
how we're going to do that.

00:09:18.766 --> 00:09:21.366
And there is markup
in HTML5

00:09:21.366 --> 00:09:26.466
for associating captions
and formats like this

00:09:26.466 --> 00:09:28.566
with videos.

00:09:28.566 --> 00:09:34.000
In this example,
I've got all of the VTT files

00:09:34.000 --> 00:09:35.600
that we've used before.

00:09:35.600 --> 00:09:37.466
I've included them here.

00:09:37.466 --> 00:09:41.366
And what we're using for it
is called a track element,

00:09:41.366 --> 00:09:43.100
and this track element
is included

00:09:43.100 --> 00:09:47.166
underneath the video element
in the HTML5 markup.

00:09:47.166 --> 00:09:50.666
It links through
the VTT file.

00:09:50.666 --> 00:09:53.500
And there is some description
possible

00:09:53.500 --> 00:09:57.266
for the type of file it is,
so we have a label.

00:09:57.266 --> 00:10:00.033
In this case,
it's an English caption.

00:10:00.033 --> 00:10:02.433
We have a kind,
which gives us a means

00:10:02.433 --> 00:10:10.100
to group all the tracks
of the same type together.

00:10:10.100 --> 00:10:12.300
And we identify
the language.

00:10:12.300 --> 00:10:15.433
Because, of course, when we have
user settings in browsers,

00:10:15.433 --> 00:10:20.366
we want to automatically
make certain tracks

00:10:20.366 --> 00:10:21.700
available to the user

00:10:21.700 --> 00:10:23.400
if the user has,
for example,

00:10:23.400 --> 00:10:25.166
said that they always
want captions

00:10:25.166 --> 00:10:28.966
or they always want subtitles
in their language being shown.

00:10:28.966 --> 00:10:32.433
So the browser can
look through this markup

00:10:32.433 --> 00:10:36.833
and identify which ones
it has to turn on by default.

00:10:37.900 --> 00:10:42.033
Now, in this case,
I've used only WebVTT files.

00:10:42.033 --> 00:10:48.566
The track layout, the way that
we've defined track in HTML5,

00:10:48.566 --> 00:10:50.333
is actually generic.

00:10:50.333 --> 00:10:53.533
It can be used for other types
of files as well,

00:10:53.533 --> 00:10:58.900
TTML or SRT
or any other formats

00:10:58.900 --> 00:11:01.166
that will be implemented.

00:11:01.166 --> 00:11:08.400
But the generic way that track
works is in this way.

00:11:10.600 --> 00:11:13.566
Now, once we've got it
in the browser,

00:11:13.566 --> 00:11:16.466
we can actually support more
than what is directly possible

00:11:16.466 --> 00:11:19.200
as markup
in the WebVTT file,

00:11:19.200 --> 00:11:22.000
because now we've got the text
in the browser,

00:11:22.000 --> 00:11:23.033
and we can make use

00:11:23.033 --> 00:11:25.166
of all the functionality
of the browser,

00:11:25.166 --> 00:11:28.000
which has styling

00:11:28.000 --> 00:11:30.400
and the concurrent style sheet
functionality

00:11:30.400 --> 00:11:31.666
available to it.

00:11:31.666 --> 00:11:34.400
So this kind of styling
is also available

00:11:34.400 --> 00:11:40.300
if used in a browser,
to these cues.

00:11:40.300 --> 00:11:45.366
And the way in which
this is being done

00:11:45.366 --> 00:11:48.366
is that there's
a pseudo-element in CSS

00:11:48.366 --> 00:11:50.766
called ::cue.

00:11:50.766 --> 00:11:52.666
And with that pseudo-element,

00:11:52.666 --> 00:11:55.433
you can address,
for example,

00:11:55.433 --> 00:11:59.766
classes in the cue markup.

00:11:59.766 --> 00:12:03.200
And you can override
the formatting

00:12:03.200 --> 00:12:06.066
that by default
would be given.

00:12:06.066 --> 00:12:07.400
You can, for example--

00:12:07.400 --> 00:12:09.933
well, in this case,
it's been turned red,

00:12:09.933 --> 00:12:12.966
uppercase,
a different font family,

00:12:12.966 --> 00:12:14.466
and a lighter weight.

00:12:18.833 --> 00:12:20.366
Now, we've spoken a lot.

00:12:20.366 --> 00:12:22.300
We want to see a little bit
of a demo here,

00:12:22.300 --> 00:12:24.733
and I've made a little bit
of a demo

00:12:24.733 --> 00:12:28.466
which shows that we can
do more than what's typically

00:12:28.466 --> 00:12:30.033
being used for captions
right now.

00:12:30.033 --> 00:12:33.966
Most captions that are
being used are pop-on captions,

00:12:33.966 --> 00:12:36.566
which are captions
that don't overlap in time.

00:12:36.566 --> 00:12:38.000
There's one piece of caption,

00:12:38.000 --> 00:12:39.700
one cue shown;

00:12:39.700 --> 00:12:41.666
it disappears, and the next cue
is brought up.

00:12:41.666 --> 00:12:42.966
That's pop-on.

00:12:42.966 --> 00:12:47.433
And that is the default way
of rendering it.

00:12:47.433 --> 00:12:50.600
But we may have
a very different style

00:12:50.600 --> 00:12:53.466
of providing captions
as well,

00:12:53.466 --> 00:12:55.566
which has traditionally
been used

00:12:55.566 --> 00:12:58.500
mostly in live captioning.

00:12:58.500 --> 00:13:00.266
It's called roll-up.

00:13:00.266 --> 00:13:03.433
So the cues will actually
be added at the bottom

00:13:03.433 --> 00:13:06.066
and roll up as the--

00:13:06.066 --> 00:13:07.833
and the old ones
will disappear.

00:13:07.833 --> 00:13:09.433
So I've made a little example

00:13:09.433 --> 00:13:12.466
that shows how that
can be done as well.

00:13:12.466 --> 00:13:14.033
Let's hope this works.

00:13:14.033 --> 00:13:15.233
Man: I heard about
this Arduino Project,

00:13:15.233 --> 00:13:17.733
and I saw it online,
and I said, "Wow,

00:13:17.733 --> 00:13:19.666
"a lot of people are starting
to talk about this.

00:13:19.666 --> 00:13:21.100
I should check it out."

00:13:21.100 --> 00:13:23.766
Second Man: 'Cause we wanted
to make a tool

00:13:23.766 --> 00:13:26.633
for our student
that was more modern

00:13:26.633 --> 00:13:29.333
than what was available
on the market at the moment.

00:13:31.233 --> 00:13:32.666
Third Man: For me,
it was a case

00:13:32.666 --> 00:13:35.133
that this is a tool
that I could see using myself,

00:13:35.133 --> 00:13:36.500
and therefore
I could believe

00:13:36.500 --> 00:13:38.900
in actually helping to get it
out to a wider world.

00:13:38.900 --> 00:13:41.166
Fourth Man:
[speaking foreign language]

00:13:46.033 --> 00:13:48.100
Pfeiffer: So you could see

00:13:48.100 --> 00:13:51.233
that the captions
were being pushed up

00:13:51.233 --> 00:13:54.233
as they were being displayed.

00:13:54.233 --> 00:13:58.033
This is a very simple way

00:13:58.033 --> 00:14:05.866
of doing
this kind of roll-up.

00:14:05.866 --> 00:14:07.766
So as we're moving on,

00:14:07.766 --> 00:14:09.866
the next caption
gets added to the bottom.

00:14:09.866 --> 00:14:13.333
This can be improved.

00:14:13.333 --> 00:14:14.900
This is just
a very crude demo.

00:14:14.900 --> 00:14:16.100
But this can be improved

00:14:16.100 --> 00:14:18.333
with a bit more CSS
in the browser.

00:14:18.333 --> 00:14:23.333
We can, for example, transition
the text more slowly,

00:14:23.333 --> 00:14:25.333
and then it would be
more readable,

00:14:25.333 --> 00:14:27.700
rather than it
jumping there directly.

00:14:27.700 --> 00:14:30.833
There's a whole swag
of CSS functionality

00:14:30.833 --> 00:14:32.300
available to us
in the browser

00:14:32.300 --> 00:14:34.266
to make this look very nice.

00:14:34.266 --> 00:14:42.000
And the functionality is there
and possible to be used.

00:14:42.000 --> 00:14:46.800
I've mentioned
paint-on and roll-up captions.

00:14:46.800 --> 00:14:50.100
I've mentioned pop-on
and roll-up captions.

00:14:50.100 --> 00:14:53.000
I want to briefly also mention
paint-on captions,

00:14:53.000 --> 00:14:55.900
even though that's a bit more
of an exotic use case.

00:14:55.900 --> 00:15:00.666
But it's possible to be used
in CEA-608 captions,

00:15:00.666 --> 00:15:03.800
so we need to make sure
that it's also possible

00:15:03.800 --> 00:15:06.233
to be represented in WebVTT.

00:15:06.233 --> 00:15:09.166
And what we've introduced
for this kind of application

00:15:09.166 --> 00:15:12.400
is cue timestamps.

00:15:12.400 --> 00:15:16.766
These cue timestamps
are basically just a timestamp

00:15:16.766 --> 00:15:20.833
that is being included
into the text

00:15:20.833 --> 00:15:24.300
and says when the text
that comes afterwards

00:15:24.300 --> 00:15:26.366
will be activated.

00:15:26.366 --> 00:15:28.066
Here I've done it--

00:15:28.066 --> 00:15:29.700
[coughs]
pardon me--

00:15:29.700 --> 00:15:31.400
at the word level.

00:15:31.400 --> 00:15:36.033
I've put cue timestamps in
for every word,

00:15:36.033 --> 00:15:38.400
so every word would come up
one after the other

00:15:38.400 --> 00:15:40.100
on the screen.

00:15:40.100 --> 00:15:42.433
However, the resolution
is arbitrary.

00:15:42.433 --> 00:15:46.733
We could do that
on every character if necessary.

00:15:46.733 --> 00:15:48.500
Interestingly enough,

00:15:48.500 --> 00:15:53.100
that can also be used
for styling through CSS.

00:15:53.100 --> 00:16:00.200
There are the past and future
pseudo-selectors.

00:16:00.200 --> 00:16:03.466
And these selectors allow us,
for example,

00:16:03.466 --> 00:16:07.900
to do something like
paint the old text in yellow,

00:16:07.900 --> 00:16:10.066
the new text in white,

00:16:10.066 --> 00:16:11.966
with a text shadow,

00:16:11.966 --> 00:16:14.833
and as it goes over,
everything goes yellow.

00:16:14.833 --> 00:16:16.533
And we know this kind
of application, obviously,

00:16:16.533 --> 00:16:18.066
from karaoke,

00:16:18.066 --> 00:16:23.633
which bridges into
these applications as well,

00:16:23.633 --> 00:16:26.733
into more modern
time-aligned text applications.

00:16:26.733 --> 00:16:29.666
We can cover
all of these use cases

00:16:29.666 --> 00:16:32.100
with the same approach.

00:16:34.133 --> 00:16:37.766
So that brings me
to the end of the presentation.

00:16:37.766 --> 00:16:42.300
We regard WebVTT as a bridge
between broadcast

00:16:42.300 --> 00:16:44.433
and the web of the future.

00:16:44.433 --> 00:16:50.233
We can support
all of the CEA-608 captions,

00:16:50.233 --> 00:16:52.133
all of the features,

00:16:52.133 --> 00:16:55.533
possibly also
some of the 708 features--

00:16:55.533 --> 00:16:59.900
I think most of them;
I haven't analyzed in detail.

00:16:59.900 --> 00:17:03.333
But most of the 708 features
will be supported as well.

00:17:03.333 --> 00:17:05.666
It's a simplicity
of editing,

00:17:05.666 --> 00:17:08.400
which we like
about the WebVTT format.

00:17:08.400 --> 00:17:10.500
It's readable.
You can read it here on screen.

00:17:10.500 --> 00:17:15.666
There's not too much busyness
as you're looking at it.

00:17:15.666 --> 00:17:17.833
And that means also
that it's easy to edit

00:17:17.833 --> 00:17:19.366
and to create.

00:17:19.366 --> 00:17:22.400
We have the ability
to apply web styling

00:17:22.400 --> 00:17:24.200
through the track mechanism

00:17:24.200 --> 00:17:27.533
that has been included
into HTML5.

00:17:27.533 --> 00:17:31.166
And this is an open
and freely available format.

00:17:31.166 --> 00:17:33.133
If you're looking
for references,

00:17:33.133 --> 00:17:35.766
I've put the references
on this last slide

00:17:35.766 --> 00:17:36.900
to all the specs.

00:17:36.900 --> 00:17:38.200
They're available for free.

00:17:38.200 --> 00:17:40.266
Thank you very much.

00:17:40.266 --> 00:17:44.933
[applause]

00:17:44.933 --> 00:17:46.300
Black: So thank you, Silvia.

00:17:46.300 --> 00:17:50.133
We have a mic up if people
want to ask any questions.

00:17:50.133 --> 00:17:51.700
Maybe you could introduce
yourself briefly.

00:17:51.700 --> 00:17:52.933
We're recording this,

00:17:52.933 --> 00:17:54.200
and we're gonna be
posting it to YouTube,

00:17:54.200 --> 00:17:55.766
so hopefully
you won't be shy.

00:17:55.766 --> 00:17:57.266
But please, if you have
any questions for Silvia

00:17:57.266 --> 00:18:01.433
about WebVTT,
please step up to the mic.

00:18:01.433 --> 00:18:03.266
Pfeiffer: I was going
very quickly,

00:18:03.266 --> 00:18:04.766
so if somebody wants
to go back

00:18:04.766 --> 00:18:07.566
and explore any of the features
in more detail,

00:18:07.566 --> 00:18:10.333
this is probably
the opportunity.

00:18:10.333 --> 00:18:12.133
Steinberg: Hi,
I'm Daniel Steinberg at Google.

00:18:12.133 --> 00:18:14.000
A couple questions.

00:18:14.000 --> 00:18:17.700
When you had the line number
specification,

00:18:17.700 --> 00:18:22.433
how does that apply
when you have vertical text?

00:18:22.433 --> 00:18:25.133
Pfeiffer:
Let me just find that.

00:18:25.133 --> 00:18:26.166
Here, this one?

00:18:26.166 --> 00:18:27.433
Steinberg: Yeah.

00:18:27.433 --> 00:18:32.266
Pfeiffer: So the line numbers
are basically done in--

00:18:32.266 --> 00:18:33.333
for horizontal text,

00:18:33.333 --> 00:18:35.433
obviously from the top
to the bottom.

00:18:35.433 --> 00:18:39.000
And for vertical text,
they are turned around.

00:18:39.000 --> 00:18:41.666
So they apply in the same way.

00:18:41.666 --> 00:18:47.166
Steinberg: Okay, and you have
a lot of the underpinnings

00:18:47.166 --> 00:18:50.400
for interactive text,
but not the actual--

00:18:50.400 --> 00:18:52.033
I didn't see anything
actually there.

00:18:52.033 --> 00:18:55.433
So the ability to say
this particular tag is live,

00:18:55.433 --> 00:18:58.266
and clicking on it might give
a link or something like that.

00:18:58.266 --> 00:19:01.133
Have you considered
interactivity?

00:19:01.133 --> 00:19:02.833
Pfeiffer: Interactivity--

00:19:02.833 --> 00:19:06.700
you particularly talking
about hyperlinks in this case?

00:19:06.700 --> 00:19:07.900
Steinberg:
In this case, yes.

00:19:07.900 --> 00:19:08.900
Pfeiffer: Yes, so hyperlinks

00:19:08.900 --> 00:19:11.933
is something of a bit
of a controversial issue.

00:19:11.933 --> 00:19:13.666
We've discussed this.

00:19:13.666 --> 00:19:17.066
It is obviously something
that can easily be added.

00:19:17.066 --> 00:19:18.966
We've got the markup
in HTML5.

00:19:18.966 --> 00:19:24.633
We could easily put a "a" tag
in there and a hyperlink.

00:19:24.633 --> 00:19:27.566
It's not something
that's currently part

00:19:27.566 --> 00:19:32.700
of the specification simply
because people don't believe

00:19:32.700 --> 00:19:34.266
that it's a very good
experience.

00:19:34.266 --> 00:19:36.666
When you're watching captions,
they stay on the screen

00:19:36.666 --> 00:19:38.200
only for a very short
amount of time.

00:19:38.200 --> 00:19:40.700
By the time you've decided
that you want to follow a link,

00:19:40.700 --> 00:19:41.966
it's already gone.

00:19:41.966 --> 00:19:43.733
That's the reason.

00:19:43.733 --> 00:19:47.300
So I'm obviously not fully
subscribed to that reason.

00:19:47.300 --> 00:19:50.500
I would actually like to have
hyperlinks in it as well.

00:19:50.500 --> 00:19:54.700
What I look at in this format
is that it's easy to extend it,

00:19:54.700 --> 00:19:57.166
and if somebody
was to support it,

00:19:57.166 --> 00:20:01.133
then it is not a problem
to put that in as well.

00:20:01.133 --> 00:20:03.366
Steinberg: Yeah, something
to consider with the hyperlinks

00:20:03.366 --> 00:20:05.566
is that, because
you have the ability

00:20:05.566 --> 00:20:08.766
to author
different kinds of files,

00:20:08.766 --> 00:20:11.233
you could have a description
that had a longer time

00:20:11.233 --> 00:20:12.566
and had a longer duration.

00:20:12.566 --> 00:20:14.333
It wouldn't
have to disappear

00:20:14.333 --> 00:20:16.866
when a caption line
disappeared.

00:20:16.866 --> 00:20:19.166
Pfeiffer: In fact,
I should actually add something.

00:20:19.166 --> 00:20:23.933
We've got, as I mentioned,
we've got kinds of text

00:20:23.933 --> 00:20:27.733
that we're expecting
in a WebVTT file.

00:20:27.733 --> 00:20:30.000
I've talked about
captions and subtitles,

00:20:30.000 --> 00:20:31.866
I've talked about
text descriptions,

00:20:31.866 --> 00:20:33.266
and I've talked about
navigation.

00:20:33.266 --> 00:20:35.000
I've only mentioned metadata,

00:20:35.000 --> 00:20:37.200
but metadata actually
solves that problem.

00:20:37.200 --> 00:20:39.966
Metadata means that

00:20:39.966 --> 00:20:42.633
you're allowed to put anything
into a cue:

00:20:42.633 --> 00:20:44.266
any markup you want,

00:20:44.266 --> 00:20:45.766
any non-markup you want,

00:20:45.766 --> 00:20:47.533
any text, anything at all.

00:20:47.533 --> 00:20:50.633
It just means that the browser
can't do anything with it.

00:20:50.633 --> 00:20:54.233
It decides--it sees that
it's of the kind "metadata"

00:20:54.233 --> 00:20:55.733
and goes,
"I'm being hands-off.

00:20:55.733 --> 00:20:58.600
"I'm just gonna hand it on
to the JavaScript,

00:20:58.600 --> 00:21:01.066
and the JavaScript can do
with it whatever it likes."

00:21:01.066 --> 00:21:03.400
So this would be one way
to have interactivity in it.

00:21:03.400 --> 00:21:06.100
You could just
grab it through JavaScript

00:21:06.100 --> 00:21:10.600
and then put it into a div
on your page,

00:21:10.600 --> 00:21:13.933
and then there would be
a hyperlink.

00:21:13.933 --> 00:21:16.333
And anything else
that you can come up with

00:21:16.333 --> 00:21:20.300
that's time-aligned would
work in a similar way as well.

00:21:20.300 --> 00:21:21.333
Steinberg:
And one last question.

00:21:21.333 --> 00:21:23.166
You showed
the different formats--

00:21:23.166 --> 00:21:25.666
captions and descriptions
and whatnot--

00:21:25.666 --> 00:21:29.066
as essentially the same
VTT format,

00:21:29.066 --> 00:21:33.066
distinguished only
by the track tag.

00:21:33.066 --> 00:21:37.433
And I wonder if there's
enough semantic difference

00:21:37.433 --> 00:21:41.300
that you'd want to be able to
distinguish it in another way.

00:21:41.300 --> 00:21:42.633
Like, for instance,
would you build a--

00:21:42.633 --> 00:21:43.833
could you build a file

00:21:43.833 --> 00:21:46.766
that had captions
and descriptions in it?

00:21:46.766 --> 00:21:52.833
Or might you want to have
some identifier in the file say,

00:21:52.833 --> 00:21:54.366
"This is a description file,"

00:21:54.366 --> 00:21:58.100
rather than count on
the track tag?

00:21:58.100 --> 00:22:02.400
Pfeiffer: Mixing content
in one track

00:22:02.400 --> 00:22:04.966
is of course possible.

00:22:04.966 --> 00:22:09.033
Like, you could concatenate,
for example,

00:22:09.033 --> 00:22:15.166
a caption file with
an audio description file.

00:22:15.166 --> 00:22:18.200
Then you would basically
have two tracks available

00:22:18.200 --> 00:22:19.700
through one file.

00:22:19.700 --> 00:22:24.066
It's not a very easy way
to deal with,

00:22:24.066 --> 00:22:27.700
and it would require a lot
of additional implementation.

00:22:27.700 --> 00:22:29.166
So, for example,

00:22:29.166 --> 00:22:33.700
if that concatenated case
was to be handled,

00:22:33.700 --> 00:22:35.566
the browsers
would need to find out

00:22:35.566 --> 00:22:37.733
where the second file starts
and so on.

00:22:37.733 --> 00:22:41.700
We actually like to keep
the semantics separate.

00:22:41.700 --> 00:22:46.066
And HTML markup is built
on keeping semantics separate.

00:22:46.066 --> 00:22:48.766
So this is why we introduced
the "kind" attribute.

00:22:48.766 --> 00:22:51.133
And so therefore,
in one file,

00:22:51.133 --> 00:22:53.933
you will only find captions
of one type.

00:22:56.466 --> 00:22:59.000
Thank you.

00:22:59.000 --> 00:23:00.166
Foliot: Hi, Silvia.

00:23:00.166 --> 00:23:02.233
John Foliot
from Stanford University.

00:23:02.233 --> 00:23:05.433
When you gave
the code example of the CSS,

00:23:05.433 --> 00:23:07.433
it's not clear where
the CSS actually lives.

00:23:07.433 --> 00:23:10.233
Is it embedded
in the WebVTT file?

00:23:10.233 --> 00:23:12.866
Can you have an external file
and link it?

00:23:12.866 --> 00:23:16.333
Can you just maybe get into that
a little bit further?

00:23:16.333 --> 00:23:18.700
Pfeiffer: Yeah, let me
just find it. Sorry.

00:23:18.700 --> 00:23:23.900
So I've deliberately just
put that there as a snippet,

00:23:23.900 --> 00:23:26.300
because it actually
doesn't matter where it lives.

00:23:26.300 --> 00:23:30.300
At the moment,
because we're doing the CSS

00:23:30.300 --> 00:23:32.800
through the HTML page,

00:23:32.800 --> 00:23:36.333
that includes
this file up there...

00:23:36.333 --> 00:23:40.300
that HTML page could
either have this CSS piece

00:23:40.300 --> 00:23:43.800
directly in the HTML page
and address it--

00:23:43.800 --> 00:23:45.533
so an in-band CSS.

00:23:45.533 --> 00:23:48.000
Or it could be in
an external CSS file

00:23:48.000 --> 00:23:51.800
and be pulled into
the HTML page

00:23:51.800 --> 00:23:54.500
together with
the WebVTT file.

00:23:54.500 --> 00:23:56.333
Foliot: So it always sits
outside of the VTT file.

00:23:56.333 --> 00:23:57.766
Pfeiffer: It can.
Yeah, well...

00:23:57.766 --> 00:24:00.433
So we're currently
under discussion

00:24:00.433 --> 00:24:01.666
whether this
is a functionality

00:24:01.666 --> 00:24:04.400
that we'd want to add
to WebVTT as well.

00:24:04.400 --> 00:24:08.400
So whether you want
a WebVTT file

00:24:08.400 --> 00:24:10.966
that links
to a style sheet.

00:24:10.966 --> 00:24:15.166
We're careful about that
because we--

00:24:15.166 --> 00:24:19.166
this comes from
a very web point of view.

00:24:19.166 --> 00:24:21.933
We don't really want to pollute
the WebVTT file

00:24:21.933 --> 00:24:24.300
with this web functionality,

00:24:24.300 --> 00:24:27.533
because there are applications
outside the web browser

00:24:27.533 --> 00:24:29.733
that do not want to have
to implement,

00:24:29.733 --> 00:24:31.733
for example,
all of CSS style sheets

00:24:31.733 --> 00:24:33.833
in order to display
captions properly.

00:24:33.833 --> 00:24:35.400
So it probably
makes more sense

00:24:35.400 --> 00:24:37.300
to have this
as a separate file.

00:24:37.300 --> 00:24:40.233
And if people do want to have
this additional functionality,

00:24:40.233 --> 00:24:42.400
they can use
the WebVTT file

00:24:42.400 --> 00:24:44.533
and the CSS file together

00:24:44.533 --> 00:24:49.933
and parse them, and use them
in their style sheet engine

00:24:49.933 --> 00:24:54.933
to come up
with the proper display.

00:24:54.933 --> 00:24:57.166
Black: I actually,
I have a practical example

00:24:57.166 --> 00:24:58.633
of why you would want
the CSS.

00:24:58.633 --> 00:24:59.666
Is this on?
Can you hear me?

00:24:59.666 --> 00:25:00.766
Pfeiffer: Yes.

00:25:00.766 --> 00:25:02.133
Black: I have
a practical example

00:25:02.133 --> 00:25:04.333
of why you would want
the CSS to be outside the VTT.

00:25:04.333 --> 00:25:06.933
I work currently with people
who are producing caption files

00:25:06.933 --> 00:25:08.500
for the UK market

00:25:08.500 --> 00:25:11.366
and who are then redistributing
that same video here in the US,

00:25:11.366 --> 00:25:14.000
and they have to basically
redo the entire caption file

00:25:14.000 --> 00:25:16.566
because UK audiences
are expecting, for instance,

00:25:16.566 --> 00:25:19.933
to see a particular speaker
marked up in a particular color.

00:25:19.933 --> 00:25:21.833
Here in the US,
we're not expecting that.

00:25:21.833 --> 00:25:24.066
So you could imagine
if you had one format

00:25:24.066 --> 00:25:26.400
where you marked up
the content semantically

00:25:26.400 --> 00:25:29.100
that, depending on whether
you showed it in a player

00:25:29.100 --> 00:25:31.533
here for the US
or there for the UK

00:25:31.533 --> 00:25:32.866
with the same caption file,

00:25:32.866 --> 00:25:34.400
you could display it
differently

00:25:34.400 --> 00:25:36.700
according to different users'
regional preferences.

00:25:36.700 --> 00:25:39.166
Foliot: I would also add
that user style sheets,

00:25:39.166 --> 00:25:41.566
the user could actually
increase the font size

00:25:41.566 --> 00:25:44.133
to their
specific requirements.

00:25:44.133 --> 00:25:45.266
Pfeiffer: Yes.

00:25:45.266 --> 00:25:46.666
Foliot: A second,
really minor question.

00:25:46.666 --> 00:25:47.900
On the alignment,

00:25:47.900 --> 00:25:51.166
you said it could be
left, right, or--

00:25:51.166 --> 00:25:52.466
was it
middle or center?

00:25:52.466 --> 00:25:55.200
Can you actually
have it justified as well?

00:25:58.133 --> 00:25:59.533
Pfeiffer: No.

00:25:59.533 --> 00:26:03.100
I don't think we have
a means to justify the text.

00:26:03.100 --> 00:26:06.166
But I also think that,
actually--

00:26:06.166 --> 00:26:11.866
so from all the quality captions
literature that I've read,

00:26:11.866 --> 00:26:13.166
how to do quality captions,

00:26:13.166 --> 00:26:17.700
I think justification
has never been proposed

00:26:17.700 --> 00:26:19.966
as a readable way
of doing it

00:26:19.966 --> 00:26:23.966
because it changes
the spacing between characters

00:26:23.966 --> 00:26:26.133
and so therefore makes the text
actually harder to read.

00:26:26.133 --> 00:26:27.566
Foliot: I agree.

00:26:27.566 --> 00:26:29.466
Pfeiffer: I don't think we
actually need that feature.

00:26:29.466 --> 00:26:31.533
But it is
a good point, yeah.

00:26:31.533 --> 00:26:33.200
Foliot: Well, it just wasn't
specifically declared

00:26:33.200 --> 00:26:34.200
one way or the other.

00:26:34.200 --> 00:26:35.200
I agree with you.

00:26:35.200 --> 00:26:36.500
Pfeiffer: Yeah, okay, fine.

00:26:36.500 --> 00:26:38.900
Excellent.

00:26:38.900 --> 00:26:41.733
Have we got
any more questions?

00:26:41.733 --> 00:26:45.133
Well, thank you very much.

00:26:45.133 --> 00:26:47.733
I suppose if anyone
has any more questions,

00:26:47.733 --> 00:26:50.133
we're always here
to answer more questions.

00:26:50.133 --> 00:26:53.166
There's the Accessibility Group
at Google,

00:26:53.166 --> 00:26:56.433
through which Naomi
can be reached.

00:26:56.433 --> 00:27:00.100
And I'm very active
at the W3C.

00:27:00.100 --> 00:27:02.700
Feedback can be sent also
to the WHAT Working Group.

00:27:02.700 --> 00:27:06.400
There's plenty of ways
to get to us.

00:27:06.400 --> 00:27:07.733
I should have probably put

00:27:07.733 --> 00:27:10.100
a contact slide in there
as well.

00:27:10.100 --> 00:27:12.300
I'm also on Twitter
and Facebook and so on.

00:27:12.300 --> 00:27:14.333
But just Google my name,
Silvia Pfeiffer.

00:27:14.333 --> 00:27:15.400
You'll find me.

00:27:15.400 --> 00:27:17.000
Thank you very much.

00:27:17.000 --> 00:27:20.300
[applause]

