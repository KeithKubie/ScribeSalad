WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:07.330
 
[Music]

00:00:07.330 --> 00:00:07.340
[Music]
 

00:00:07.340 --> 00:00:09.980
[Music]
hello everyone it's great to be here

00:00:09.980 --> 00:00:09.990
hello everyone it's great to be here
 

00:00:09.990 --> 00:00:12.410
hello everyone it's great to be here
with you all today my name is Phil Adams

00:00:12.410 --> 00:00:12.420
with you all today my name is Phil Adams
 

00:00:12.420 --> 00:00:14.360
with you all today my name is Phil Adams
and I'm a researcher here at Google and

00:00:14.360 --> 00:00:14.370
and I'm a researcher here at Google and
 

00:00:14.370 --> 00:00:16.400
and I'm a researcher here at Google and
I'm P Allison software engineer at

00:00:16.400 --> 00:00:16.410
I'm P Allison software engineer at
 

00:00:16.410 --> 00:00:18.560
I'm P Allison software engineer at
Google we are here to talk to you today

00:00:18.560 --> 00:00:18.570
Google we are here to talk to you today
 

00:00:18.570 --> 00:00:20.120
Google we are here to talk to you today
about how we're rethinking app

00:00:20.120 --> 00:00:20.130
about how we're rethinking app
 

00:00:20.130 --> 00:00:22.730
about how we're rethinking app
distribution on Google Play we'll talk

00:00:22.730 --> 00:00:22.740
distribution on Google Play we'll talk
 

00:00:22.740 --> 00:00:24.380
distribution on Google Play we'll talk
about the new app publishing format that

00:00:24.380 --> 00:00:24.390
about the new app publishing format that
 

00:00:24.390 --> 00:00:26.630
about the new app publishing format that
we announced at i/o and share some new

00:00:26.630 --> 00:00:26.640
we announced at i/o and share some new
 

00:00:26.640 --> 00:00:27.800
we announced at i/o and share some new
features that we've been working on

00:00:27.800 --> 00:00:27.810
features that we've been working on
 

00:00:27.810 --> 00:00:30.109
features that we've been working on
digging deeper into some of the topics

00:00:30.109 --> 00:00:30.119
digging deeper into some of the topics
 

00:00:30.119 --> 00:00:31.479
digging deeper into some of the topics
that you saw covered during the keynote

00:00:31.479 --> 00:00:31.489
that you saw covered during the keynote
 

00:00:31.489 --> 00:00:34.459
that you saw covered during the keynote
to start with let's talk about app size

00:00:34.459 --> 00:00:34.469
to start with let's talk about app size
 

00:00:34.469 --> 00:00:36.110
to start with let's talk about app size
and the impact that it's having on your

00:00:36.110 --> 00:00:36.120
and the impact that it's having on your
 

00:00:36.120 --> 00:00:41.060
and the impact that it's having on your
app why does app size even matter we

00:00:41.060 --> 00:00:41.070
app why does app size even matter we
 

00:00:41.070 --> 00:00:42.560
app why does app size even matter we
shared this chart at Google i/o and you

00:00:42.560 --> 00:00:42.570
shared this chart at Google i/o and you
 

00:00:42.570 --> 00:00:44.720
shared this chart at Google i/o and you
saw it earlier today play store data

00:00:44.720 --> 00:00:44.730
saw it earlier today play store data
 

00:00:44.730 --> 00:00:46.660
saw it earlier today play store data
does show that when the app gets bigger

00:00:46.660 --> 00:00:46.670
does show that when the app gets bigger
 

00:00:46.670 --> 00:00:51.139
does show that when the app gets bigger
install success rate goes down many uses

00:00:51.139 --> 00:00:51.149
install success rate goes down many uses
 

00:00:51.149 --> 00:00:52.459
install success rate goes down many uses
don't have enough space left on their

00:00:52.459 --> 00:00:52.469
don't have enough space left on their
 

00:00:52.469 --> 00:00:54.410
don't have enough space left on their
device and especially in emerging

00:00:54.410 --> 00:00:54.420
device and especially in emerging
 

00:00:54.420 --> 00:00:56.630
device and especially in emerging
markets data can be expensive and

00:00:56.630 --> 00:00:56.640
markets data can be expensive and
 

00:00:56.640 --> 00:01:00.020
markets data can be expensive and
connection speeds slow I want you to

00:01:00.020 --> 00:01:00.030
connection speeds slow I want you to
 

00:01:00.030 --> 00:01:02.330
connection speeds slow I want you to
think about your own experience too how

00:01:02.330 --> 00:01:02.340
think about your own experience too how
 

00:01:02.340 --> 00:01:03.709
think about your own experience too how
many of you have seen a warning from

00:01:03.709 --> 00:01:03.719
many of you have seen a warning from
 

00:01:03.719 --> 00:01:07.340
many of you have seen a warning from
play to uninstall apps millions of

00:01:07.340 --> 00:01:07.350
play to uninstall apps millions of
 

00:01:07.350 --> 00:01:09.850
play to uninstall apps millions of
people see things like this every day

00:01:09.850 --> 00:01:09.860
people see things like this every day
 

00:01:09.860 --> 00:01:11.960
people see things like this every day
we've started looking into this area

00:01:11.960 --> 00:01:11.970
we've started looking into this area
 

00:01:11.970 --> 00:01:13.940
we've started looking into this area
more closely and we have found that

00:01:13.940 --> 00:01:13.950
more closely and we have found that
 

00:01:13.950 --> 00:01:16.039
more closely and we have found that
freeing up space is a major driver of

00:01:16.039 --> 00:01:16.049
freeing up space is a major driver of
 

00:01:16.049 --> 00:01:17.560
freeing up space is a major driver of
uninstalls

00:01:17.560 --> 00:01:17.570
uninstalls
 

00:01:17.570 --> 00:01:20.450
uninstalls
this is obviously a problem for people

00:01:20.450 --> 00:01:20.460
this is obviously a problem for people
 

00:01:20.460 --> 00:01:23.240
this is obviously a problem for people
with low storage devices but it's also a

00:01:23.240 --> 00:01:23.250
with low storage devices but it's also a
 

00:01:23.250 --> 00:01:25.010
with low storage devices but it's also a
problem for people with high end devices

00:01:25.010 --> 00:01:25.020
problem for people with high end devices
 

00:01:25.020 --> 00:01:27.170
problem for people with high end devices
who fill up their devices with HD

00:01:27.170 --> 00:01:27.180
who fill up their devices with HD
 

00:01:27.180 --> 00:01:29.679
who fill up their devices with HD
content check the US and the UK

00:01:29.679 --> 00:01:29.689
content check the US and the UK
 

00:01:29.689 --> 00:01:32.539
content check the US and the UK
one in five example one in five devices

00:01:32.539 --> 00:01:32.549
one in five example one in five devices
 

00:01:32.549 --> 00:01:35.420
one in five example one in five devices
have very low storage and are reaching

00:01:35.420 --> 00:01:35.430
have very low storage and are reaching
 

00:01:35.430 --> 00:01:37.520
have very low storage and are reaching
the limit where they can't install or

00:01:37.520 --> 00:01:37.530
the limit where they can't install or
 

00:01:37.530 --> 00:01:41.090
the limit where they can't install or
update a key request we hear from

00:01:41.090 --> 00:01:41.100
update a key request we hear from
 

00:01:41.100 --> 00:01:42.740
update a key request we hear from
developers is also for help

00:01:42.740 --> 00:01:42.750
developers is also for help
 

00:01:42.750 --> 00:01:45.770
developers is also for help
understanding and reducing and installs

00:01:45.770 --> 00:01:45.780
understanding and reducing and installs
 

00:01:45.780 --> 00:01:48.530
understanding and reducing and installs
we run a user research study last year

00:01:48.530 --> 00:01:48.540
we run a user research study last year
 

00:01:48.540 --> 00:01:51.530
we run a user research study last year
to look into wide users in the US and

00:01:51.530 --> 00:01:51.540
to look into wide users in the US and
 

00:01:51.540 --> 00:01:54.679
to look into wide users in the US and
install apps the leading reason ads were

00:01:54.679 --> 00:01:54.689
install apps the leading reason ads were
 

00:01:54.689 --> 00:01:56.300
install apps the leading reason ads were
uninstalled straight away within a day

00:01:56.300 --> 00:01:56.310
uninstalled straight away within a day
 

00:01:56.310 --> 00:01:59.810
uninstalled straight away within a day
was quality however the leading reason

00:01:59.810 --> 00:01:59.820
was quality however the leading reason
 

00:01:59.820 --> 00:02:01.550
was quality however the leading reason
absol gebbs were earning installed after

00:02:01.550 --> 00:02:01.560
absol gebbs were earning installed after
 

00:02:01.560 --> 00:02:05.630
absol gebbs were earning installed after
a month was to free up space absent

00:02:05.630 --> 00:02:05.640
a month was to free up space absent
 

00:02:05.640 --> 00:02:08.570
a month was to free up space absent
games keep getting bigger since 2012

00:02:08.570 --> 00:02:08.580
games keep getting bigger since 2012
 

00:02:08.580 --> 00:02:10.430
games keep getting bigger since 2012
absent games have grown over five times

00:02:10.430 --> 00:02:10.440
absent games have grown over five times
 

00:02:10.440 --> 00:02:13.309
absent games have grown over five times
on average newer devices have more

00:02:13.309 --> 00:02:13.319
on average newer devices have more
 

00:02:13.319 --> 00:02:13.940
on average newer devices have more
storage

00:02:13.940 --> 00:02:13.950
storage
 

00:02:13.950 --> 00:02:17.089
storage
but the apps games Harry's photos and HD

00:02:17.089 --> 00:02:17.099
but the apps games Harry's photos and HD
 

00:02:17.099 --> 00:02:21.290
but the apps games Harry's photos and HD
videos keep getting bigger - making you

00:02:21.290 --> 00:02:21.300
videos keep getting bigger - making you
 

00:02:21.300 --> 00:02:23.960
videos keep getting bigger - making you
a big puts it at risk to suffer from all

00:02:23.960 --> 00:02:23.970
a big puts it at risk to suffer from all
 

00:02:23.970 --> 00:02:26.360
a big puts it at risk to suffer from all
these downsides bigger app lose

00:02:26.360 --> 00:02:26.370
these downsides bigger app lose
 

00:02:26.370 --> 00:02:28.820
these downsides bigger app lose
acquisitions and bigger apps also get

00:02:28.820 --> 00:02:28.830
acquisitions and bigger apps also get
 

00:02:28.830 --> 00:02:31.160
acquisitions and bigger apps also get
uninstalled to free up space I'm sure

00:02:31.160 --> 00:02:31.170
uninstalled to free up space I'm sure
 

00:02:31.170 --> 00:02:32.839
uninstalled to free up space I'm sure
you already know that and you've

00:02:32.839 --> 00:02:32.849
you already know that and you've
 

00:02:32.849 --> 00:02:34.759
you already know that and you've
probably just considered it a trade-off

00:02:34.759 --> 00:02:34.769
probably just considered it a trade-off
 

00:02:34.769 --> 00:02:37.670
probably just considered it a trade-off
do you add new features and support more

00:02:37.670 --> 00:02:37.680
do you add new features and support more
 

00:02:37.680 --> 00:02:40.430
do you add new features and support more
device configurations but lose installs

00:02:40.430 --> 00:02:40.440
device configurations but lose installs
 

00:02:40.440 --> 00:02:43.160
device configurations but lose installs
and drive more and installs we don't

00:02:43.160 --> 00:02:43.170
and drive more and installs we don't
 

00:02:43.170 --> 00:02:44.390
and drive more and installs we don't
want you to have to worry about these

00:02:44.390 --> 00:02:44.400
want you to have to worry about these
 

00:02:44.400 --> 00:02:48.289
want you to have to worry about these
trade-offs for a few years there has

00:02:48.289 --> 00:02:48.299
trade-offs for a few years there has
 

00:02:48.299 --> 00:02:49.789
trade-offs for a few years there has
been a way to optimize for device

00:02:49.789 --> 00:02:49.799
been a way to optimize for device
 

00:02:49.799 --> 00:02:52.550
been a way to optimize for device
configurations you can use multiple apks

00:02:52.550 --> 00:02:52.560
configurations you can use multiple apks
 

00:02:52.560 --> 00:02:55.580
configurations you can use multiple apks
but it's incredibly inefficient and it's

00:02:55.580 --> 00:02:55.590
but it's incredibly inefficient and it's
 

00:02:55.590 --> 00:02:58.309
but it's incredibly inefficient and it's
a painful process this is what it looks

00:02:58.309 --> 00:02:58.319
a painful process this is what it looks
 

00:02:58.319 --> 00:02:59.839
a painful process this is what it looks
like in the Play console when you have

00:02:59.839 --> 00:02:59.849
like in the Play console when you have
 

00:02:59.849 --> 00:03:02.210
like in the Play console when you have
to upload dozens of apks for single

00:03:02.210 --> 00:03:02.220
to upload dozens of apks for single
 

00:03:02.220 --> 00:03:05.210
to upload dozens of apks for single
release the number of apks grows quickly

00:03:05.210 --> 00:03:05.220
release the number of apks grows quickly
 

00:03:05.220 --> 00:03:08.300
release the number of apks grows quickly
across dimensions for example 64-bit 32

00:03:08.300 --> 00:03:08.310
across dimensions for example 64-bit 32
 

00:03:08.310 --> 00:03:10.550
across dimensions for example 64-bit 32
bits and all the screen densities and

00:03:10.550 --> 00:03:10.560
bits and all the screen densities and
 

00:03:10.560 --> 00:03:13.100
bits and all the screen densities and
you have to version every APK for each

00:03:13.100 --> 00:03:13.110
you have to version every APK for each
 

00:03:13.110 --> 00:03:16.460
you have to version every APK for each
release it also doesn't help with some

00:03:16.460 --> 00:03:16.470
release it also doesn't help with some
 

00:03:16.470 --> 00:03:18.710
release it also doesn't help with some
of the dimensions for example all the

00:03:18.710 --> 00:03:18.720
of the dimensions for example all the
 

00:03:18.720 --> 00:03:21.319
of the dimensions for example all the
languages are still in all apk in every

00:03:21.319 --> 00:03:21.329
languages are still in all apk in every
 

00:03:21.329 --> 00:03:25.250
languages are still in all apk in every
apk we can do better let us show you the

00:03:25.250 --> 00:03:25.260
apk we can do better let us show you the
 

00:03:25.260 --> 00:03:26.840
apk we can do better let us show you the
solution that we have built for this and

00:03:26.840 --> 00:03:26.850
solution that we have built for this and
 

00:03:26.850 --> 00:03:29.090
solution that we have built for this and
see how the new app model helps make

00:03:29.090 --> 00:03:29.100
see how the new app model helps make
 

00:03:29.100 --> 00:03:33.440
see how the new app model helps make
your life easier so the new app model is

00:03:33.440 --> 00:03:33.450
your life easier so the new app model is
 

00:03:33.450 --> 00:03:35.360
your life easier so the new app model is
focused on improving the whole user

00:03:35.360 --> 00:03:35.370
focused on improving the whole user
 

00:03:35.370 --> 00:03:37.250
focused on improving the whole user
acquisition journey from discovery

00:03:37.250 --> 00:03:37.260
acquisition journey from discovery
 

00:03:37.260 --> 00:03:38.569
acquisition journey from discovery
through to retention

00:03:38.569 --> 00:03:38.579
through to retention
 

00:03:38.579 --> 00:03:40.490
through to retention
it helps by making your app smaller

00:03:40.490 --> 00:03:40.500
it helps by making your app smaller
 

00:03:40.500 --> 00:03:42.710
it helps by making your app smaller
directly improving install and uninstall

00:03:42.710 --> 00:03:42.720
directly improving install and uninstall
 

00:03:42.720 --> 00:03:45.920
directly improving install and uninstall
rates and in addition to that it makes

00:03:45.920 --> 00:03:45.930
rates and in addition to that it makes
 

00:03:45.930 --> 00:03:49.160
rates and in addition to that it makes
your releases more manageable in that

00:03:49.160 --> 00:03:49.170
your releases more manageable in that
 

00:03:49.170 --> 00:03:51.170
your releases more manageable in that
context for the rest of today's session

00:03:51.170 --> 00:03:51.180
context for the rest of today's session
 

00:03:51.180 --> 00:03:52.670
context for the rest of today's session
we'll talk about three important steps

00:03:52.670 --> 00:03:52.680
we'll talk about three important steps
 

00:03:52.680 --> 00:03:55.670
we'll talk about three important steps
that we want to help you with first we

00:03:55.670 --> 00:03:55.680
that we want to help you with first we
 

00:03:55.680 --> 00:03:57.229
that we want to help you with first we
want to help you convert more installers

00:03:57.229 --> 00:03:57.239
want to help you convert more installers
 

00:03:57.239 --> 00:03:58.849
want to help you convert more installers
and minimize uninstalls

00:03:58.849 --> 00:03:58.859
and minimize uninstalls
 

00:03:58.859 --> 00:04:02.930
and minimize uninstalls
by building smaller apps then we want to

00:04:02.930 --> 00:04:02.940
by building smaller apps then we want to
 

00:04:02.940 --> 00:04:04.789
by building smaller apps then we want to
make it possible for you to deliver

00:04:04.789 --> 00:04:04.799
make it possible for you to deliver
 

00:04:04.799 --> 00:04:06.379
make it possible for you to deliver
different features to different

00:04:06.379 --> 00:04:06.389
different features to different
 

00:04:06.389 --> 00:04:09.110
different features to different
audiences on demand only for those users

00:04:09.110 --> 00:04:09.120
audiences on demand only for those users
 

00:04:09.120 --> 00:04:12.379
audiences on demand only for those users
who need them and finally we want to

00:04:12.379 --> 00:04:12.389
who need them and finally we want to
 

00:04:12.389 --> 00:04:14.270
who need them and finally we want to
help you keep your users up to date on

00:04:14.270 --> 00:04:14.280
help you keep your users up to date on
 

00:04:14.280 --> 00:04:16.129
help you keep your users up to date on
the latest and greatest versions of your

00:04:16.129 --> 00:04:16.139
the latest and greatest versions of your
 

00:04:16.139 --> 00:04:18.949
the latest and greatest versions of your
app let's start with how to make your

00:04:18.949 --> 00:04:18.959
app let's start with how to make your
 

00:04:18.959 --> 00:04:21.020
app let's start with how to make your
app smaller this is where we began with

00:04:21.020 --> 00:04:21.030
app smaller this is where we began with
 

00:04:21.030 --> 00:04:23.060
app smaller this is where we began with
our major announcement at i/o about the

00:04:23.060 --> 00:04:23.070
our major announcement at i/o about the
 

00:04:23.070 --> 00:04:27.260
our major announcement at i/o about the
Android app bundle that bundle is the

00:04:27.260 --> 00:04:27.270
Android app bundle that bundle is the
 

00:04:27.270 --> 00:04:27.740
Android app bundle that bundle is the
official

00:04:27.740 --> 00:04:27.750
official
 

00:04:27.750 --> 00:04:30.800
official
Android app publishing format apps that

00:04:30.800 --> 00:04:30.810
Android app publishing format apps that
 

00:04:30.810 --> 00:04:32.630
Android app publishing format apps that
have already adopted the bundle are

00:04:32.630 --> 00:04:32.640
have already adopted the bundle are
 

00:04:32.640 --> 00:04:34.820
have already adopted the bundle are
seeing an average-size saving of 35

00:04:34.820 --> 00:04:34.830
seeing an average-size saving of 35
 

00:04:34.830 --> 00:04:37.760
seeing an average-size saving of 35
percent that's compared to a universal

00:04:37.760 --> 00:04:37.770
percent that's compared to a universal
 

00:04:37.770 --> 00:04:39.700
percent that's compared to a universal
apk and that's quite a lot

00:04:39.700 --> 00:04:39.710
apk and that's quite a lot
 

00:04:39.710 --> 00:04:42.170
apk and that's quite a lot
how does adopting a bundle lead to such

00:04:42.170 --> 00:04:42.180
how does adopting a bundle lead to such
 

00:04:42.180 --> 00:04:46.790
how does adopting a bundle lead to such
savings here's the big idea Google Play

00:04:46.790 --> 00:04:46.800
savings here's the big idea Google Play
 

00:04:46.800 --> 00:04:48.770
savings here's the big idea Google Play
can assist and take care of delivering

00:04:48.770 --> 00:04:48.780
can assist and take care of delivering
 

00:04:48.780 --> 00:04:50.750
can assist and take care of delivering
just what's needed to each device on

00:04:50.750 --> 00:04:50.760
just what's needed to each device on
 

00:04:50.760 --> 00:04:53.660
just what's needed to each device on
your behalf there's no need to send a

00:04:53.660 --> 00:04:53.670
your behalf there's no need to send a
 

00:04:53.670 --> 00:04:55.370
your behalf there's no need to send a
bunch of languages and device resources

00:04:55.370 --> 00:04:55.380
bunch of languages and device resources
 

00:04:55.380 --> 00:04:59.150
bunch of languages and device resources
which are not necessary we support three

00:04:59.150 --> 00:04:59.160
which are not necessary we support three
 

00:04:59.160 --> 00:05:01.000
which are not necessary we support three
slicing dimensions out of the box

00:05:01.000 --> 00:05:01.010
slicing dimensions out of the box
 

00:05:01.010 --> 00:05:04.130
slicing dimensions out of the box
languages screen densities and CPU

00:05:04.130 --> 00:05:04.140
languages screen densities and CPU
 

00:05:04.140 --> 00:05:07.850
languages screen densities and CPU
architecture all of this is made

00:05:07.850 --> 00:05:07.860
architecture all of this is made
 

00:05:07.860 --> 00:05:10.760
architecture all of this is made
possible by split apks a feature we

00:05:10.760 --> 00:05:10.770
possible by split apks a feature we
 

00:05:10.770 --> 00:05:12.800
possible by split apks a feature we
added to the android platform in android

00:05:12.800 --> 00:05:12.810
added to the android platform in android
 

00:05:12.810 --> 00:05:14.110
added to the android platform in android
lollipop

00:05:14.110 --> 00:05:14.120
lollipop
 

00:05:14.120 --> 00:05:17.120
lollipop
split apks allow multiple apks to be

00:05:17.120 --> 00:05:17.130
split apks allow multiple apks to be
 

00:05:17.130 --> 00:05:19.220
split apks allow multiple apks to be
installed on a device and behave as if

00:05:19.220 --> 00:05:19.230
installed on a device and behave as if
 

00:05:19.230 --> 00:05:21.710
installed on a device and behave as if
they're part of the same app these split

00:05:21.710 --> 00:05:21.720
they're part of the same app these split
 

00:05:21.720 --> 00:05:23.420
they're part of the same app these split
apks can be installed in different

00:05:23.420 --> 00:05:23.430
apks can be installed in different
 

00:05:23.430 --> 00:05:25.460
apks can be installed in different
combinations on different devices and

00:05:25.460 --> 00:05:25.470
combinations on different devices and
 

00:05:25.470 --> 00:05:27.970
combinations on different devices and
can be installed all at once upfront or

00:05:27.970 --> 00:05:27.980
can be installed all at once upfront or
 

00:05:27.980 --> 00:05:32.080
can be installed all at once upfront or
overtime piece-by-piece

00:05:32.080 --> 00:05:32.090
 
 

00:05:32.090 --> 00:05:35.150
 
given a bundle Google Play starts by

00:05:35.150 --> 00:05:35.160
given a bundle Google Play starts by
 

00:05:35.160 --> 00:05:36.800
given a bundle Google Play starts by
putting everything that is common to all

00:05:36.800 --> 00:05:36.810
putting everything that is common to all
 

00:05:36.810 --> 00:05:40.490
putting everything that is common to all
devices in the base apk this includes

00:05:40.490 --> 00:05:40.500
devices in the base apk this includes
 

00:05:40.500 --> 00:05:42.500
devices in the base apk this includes
the Android manifest and the Dex files

00:05:42.500 --> 00:05:42.510
the Android manifest and the Dex files
 

00:05:42.510 --> 00:05:46.159
the Android manifest and the Dex files
for instance we then generate a

00:05:46.159 --> 00:05:46.169
for instance we then generate a
 

00:05:46.169 --> 00:05:48.409
for instance we then generate a
different split apk for each screen

00:05:48.409 --> 00:05:48.419
different split apk for each screen
 

00:05:48.419 --> 00:05:51.680
different split apk for each screen
density each split will contain all the

00:05:51.680 --> 00:05:51.690
density each split will contain all the
 

00:05:51.690 --> 00:05:53.300
density each split will contain all the
durables that would have been selected

00:05:53.300 --> 00:05:53.310
durables that would have been selected
 

00:05:53.310 --> 00:05:55.190
durables that would have been selected
by the android framework on that device

00:05:55.190 --> 00:05:55.200
by the android framework on that device
 

00:05:55.200 --> 00:05:59.840
by the android framework on that device
with that density we then also generate

00:05:59.840 --> 00:05:59.850
with that density we then also generate
 

00:05:59.850 --> 00:06:01.610
with that density we then also generate
different split apks for each in native

00:06:01.610 --> 00:06:01.620
different split apks for each in native
 

00:06:01.620 --> 00:06:04.670
different split apks for each in native
architecture and we can generate a

00:06:04.670 --> 00:06:04.680
architecture and we can generate a
 

00:06:04.680 --> 00:06:06.050
architecture and we can generate a
separate split for each language

00:06:06.050 --> 00:06:06.060
separate split for each language
 

00:06:06.060 --> 00:06:08.060
separate split for each language
supported by your app putting each

00:06:08.060 --> 00:06:08.070
supported by your app putting each
 

00:06:08.070 --> 00:06:10.330
supported by your app putting each
languages strings in a different apk

00:06:10.330 --> 00:06:10.340
languages strings in a different apk
 

00:06:10.340 --> 00:06:12.830
languages strings in a different apk
together we call these splits

00:06:12.830 --> 00:06:12.840
together we call these splits
 

00:06:12.840 --> 00:06:16.659
together we call these splits
configuration splits or config splits

00:06:16.659 --> 00:06:16.669
configuration splits or config splits
 

00:06:16.669 --> 00:06:19.310
configuration splits or config splits
now when we go to serve an app to a

00:06:19.310 --> 00:06:19.320
now when we go to serve an app to a
 

00:06:19.320 --> 00:06:21.560
now when we go to serve an app to a
device we only need to serve a subset of

00:06:21.560 --> 00:06:21.570
device we only need to serve a subset of
 

00:06:21.570 --> 00:06:24.200
device we only need to serve a subset of
this place so if Phil for example has a

00:06:24.200 --> 00:06:24.210
this place so if Phil for example has a
 

00:06:24.210 --> 00:06:26.570
this place so if Phil for example has a
Samsung Galaxy j5 we will install the

00:06:26.570 --> 00:06:26.580
Samsung Galaxy j5 we will install the
 

00:06:26.580 --> 00:06:29.300
Samsung Galaxy j5 we will install the
base apks as well as the xhdpi density

00:06:29.300 --> 00:06:29.310
base apks as well as the xhdpi density
 

00:06:29.310 --> 00:06:31.700
base apks as well as the xhdpi density
split the armor cubes architecture it

00:06:31.700 --> 00:06:31.710
split the armor cubes architecture it
 

00:06:31.710 --> 00:06:33.790
split the armor cubes architecture it
splits and the English language split

00:06:33.790 --> 00:06:33.800
splits and the English language split
 

00:06:33.800 --> 00:06:36.170
splits and the English language split
but it can get a bit trickier than that

00:06:36.170 --> 00:06:36.180
but it can get a bit trickier than that
 

00:06:36.180 --> 00:06:38.600
but it can get a bit trickier than that
I speak both French and English and I

00:06:38.600 --> 00:06:38.610
I speak both French and English and I
 

00:06:38.610 --> 00:06:40.490
I speak both French and English and I
have specified both languages in my

00:06:40.490 --> 00:06:40.500
have specified both languages in my
 

00:06:40.500 --> 00:06:41.690
have specified both languages in my
device settings

00:06:41.690 --> 00:06:41.700
device settings
 

00:06:41.700 --> 00:06:43.880
device settings
so my pixel to excel will not only

00:06:43.880 --> 00:06:43.890
so my pixel to excel will not only
 

00:06:43.890 --> 00:06:45.440
so my pixel to excel will not only
receive the correct density and

00:06:45.440 --> 00:06:45.450
receive the correct density and
 

00:06:45.450 --> 00:06:47.540
receive the correct density and
architecture split but also the French

00:06:47.540 --> 00:06:47.550
architecture split but also the French
 

00:06:47.550 --> 00:06:50.210
architecture split but also the French
and the English language splits and if

00:06:50.210 --> 00:06:50.220
and the English language splits and if
 

00:06:50.220 --> 00:06:52.100
and the English language splits and if
the if I then move to Brazil and learn

00:06:52.100 --> 00:06:52.110
the if I then move to Brazil and learn
 

00:06:52.110 --> 00:06:54.170
the if I then move to Brazil and learn
Portuguese I might add Portuguese as a

00:06:54.170 --> 00:06:54.180
Portuguese I might add Portuguese as a
 

00:06:54.180 --> 00:06:56.300
Portuguese I might add Portuguese as a
language on my device when I do this the

00:06:56.300 --> 00:06:56.310
language on my device when I do this the
 

00:06:56.310 --> 00:06:58.190
language on my device when I do this the
Playstore will attempt to download the

00:06:58.190 --> 00:06:58.200
Playstore will attempt to download the
 

00:06:58.200 --> 00:06:59.750
Playstore will attempt to download the
Portuguese language splits for all the

00:06:59.750 --> 00:06:59.760
Portuguese language splits for all the
 

00:06:59.760 --> 00:07:04.220
Portuguese language splits for all the
apps on my phone for devices pre L which

00:07:04.220 --> 00:07:04.230
apps on my phone for devices pre L which
 

00:07:04.230 --> 00:07:06.350
apps on my phone for devices pre L which
don't support split apks play will

00:07:06.350 --> 00:07:06.360
don't support split apks play will
 

00:07:06.360 --> 00:07:08.390
don't support split apks play will
generate a matrix of stand-alone apks

00:07:08.390 --> 00:07:08.400
generate a matrix of stand-alone apks
 

00:07:08.400 --> 00:07:10.910
generate a matrix of stand-alone apks
for each combination of ABI and screen

00:07:10.910 --> 00:07:10.920
for each combination of ABI and screen
 

00:07:10.920 --> 00:07:12.800
for each combination of ABI and screen
density density that your app supports

00:07:12.800 --> 00:07:12.810
density density that your app supports
 

00:07:12.810 --> 00:07:15.500
density density that your app supports
each of this apk contains all the files

00:07:15.500 --> 00:07:15.510
each of this apk contains all the files
 

00:07:15.510 --> 00:07:17.870
each of this apk contains all the files
necessary for the device so my old

00:07:17.870 --> 00:07:17.880
necessary for the device so my old
 

00:07:17.880 --> 00:07:19.820
necessary for the device so my old
Galaxy Nexus still running Android

00:07:19.820 --> 00:07:19.830
Galaxy Nexus still running Android
 

00:07:19.830 --> 00:07:22.340
Galaxy Nexus still running Android
KitKat would receive the hdpi and arm

00:07:22.340 --> 00:07:22.350
KitKat would receive the hdpi and arm
 

00:07:22.350 --> 00:07:25.190
KitKat would receive the hdpi and arm
apk note that all the languages are

00:07:25.190 --> 00:07:25.200
apk note that all the languages are
 

00:07:25.200 --> 00:07:29.390
apk note that all the languages are
included in those apks putting it all

00:07:29.390 --> 00:07:29.400
included in those apks putting it all
 

00:07:29.400 --> 00:07:31.940
included in those apks putting it all
together the picture looks like this you

00:07:31.940 --> 00:07:31.950
together the picture looks like this you
 

00:07:31.950 --> 00:07:33.620
together the picture looks like this you
actually don't need to worry about all

00:07:33.620 --> 00:07:33.630
actually don't need to worry about all
 

00:07:33.630 --> 00:07:35.330
actually don't need to worry about all
the details of how these ATK's are

00:07:35.330 --> 00:07:35.340
the details of how these ATK's are
 

00:07:35.340 --> 00:07:37.910
the details of how these ATK's are
generated all you have to do is upload a

00:07:37.910 --> 00:07:37.920
generated all you have to do is upload a
 

00:07:37.920 --> 00:07:40.160
generated all you have to do is upload a
single app bundle and play generates and

00:07:40.160 --> 00:07:40.170
single app bundle and play generates and
 

00:07:40.170 --> 00:07:41.780
single app bundle and play generates and
select the right things to serve for

00:07:41.780 --> 00:07:41.790
select the right things to serve for
 

00:07:41.790 --> 00:07:45.710
select the right things to serve for
each device to summarize the app bundle

00:07:45.710 --> 00:07:45.720
each device to summarize the app bundle
 

00:07:45.720 --> 00:07:48.650
each device to summarize the app bundle
contains everything Play processes the

00:07:48.650 --> 00:07:48.660
contains everything Play processes the
 

00:07:48.660 --> 00:07:51.320
contains everything Play processes the
bundle generates optimized apks and then

00:07:51.320 --> 00:07:51.330
bundle generates optimized apks and then
 

00:07:51.330 --> 00:07:53.390
bundle generates optimized apks and then
signs each apk to deliver to user

00:07:53.390 --> 00:07:53.400
signs each apk to deliver to user
 

00:07:53.400 --> 00:07:56.540
signs each apk to deliver to user
devices note that because play is now

00:07:56.540 --> 00:07:56.550
devices note that because play is now
 

00:07:56.550 --> 00:07:59.030
devices note that because play is now
signing the apks this means that you

00:07:59.030 --> 00:07:59.040
signing the apks this means that you
 

00:07:59.040 --> 00:08:00.740
signing the apks this means that you
need to upload your signing key to

00:08:00.740 --> 00:08:00.750
need to upload your signing key to
 

00:08:00.750 --> 00:08:02.990
need to upload your signing key to
Google Play this is part of the program

00:08:02.990 --> 00:08:03.000
Google Play this is part of the program
 

00:08:03.000 --> 00:08:05.830
Google Play this is part of the program
called app signing by play in

00:08:05.830 --> 00:08:05.840
called app signing by play in
 

00:08:05.840 --> 00:08:08.000
called app signing by play in
conversations we've had with developers

00:08:08.000 --> 00:08:08.010
conversations we've had with developers
 

00:08:08.010 --> 00:08:10.040
conversations we've had with developers
they've asked a reasonable question is

00:08:10.040 --> 00:08:10.050
they've asked a reasonable question is
 

00:08:10.050 --> 00:08:13.460
they've asked a reasonable question is
this secure the answer is absolutely as

00:08:13.460 --> 00:08:13.470
this secure the answer is absolutely as
 

00:08:13.470 --> 00:08:15.800
this secure the answer is absolutely as
you can imagine Google takes this very

00:08:15.800 --> 00:08:15.810
you can imagine Google takes this very
 

00:08:15.810 --> 00:08:16.430
you can imagine Google takes this very
seriously

00:08:16.430 --> 00:08:16.440
seriously
 

00:08:16.440 --> 00:08:18.710
seriously
we protect your key in the same storage

00:08:18.710 --> 00:08:18.720
we protect your key in the same storage
 

00:08:18.720 --> 00:08:22.040
we protect your key in the same storage
we protect Google's own keys we have

00:08:22.040 --> 00:08:22.050
we protect Google's own keys we have
 

00:08:22.050 --> 00:08:24.770
we protect Google's own keys we have
engineers for custom security and you'll

00:08:24.770 --> 00:08:24.780
engineers for custom security and you'll
 

00:08:24.780 --> 00:08:28.510
engineers for custom security and you'll
benefit from our ongoing investments

00:08:28.510 --> 00:08:28.520
benefit from our ongoing investments
 

00:08:28.520 --> 00:08:30.740
benefit from our ongoing investments
we've been chatting to developers who

00:08:30.740 --> 00:08:30.750
we've been chatting to developers who
 

00:08:30.750 --> 00:08:33.320
we've been chatting to developers who
are already using the app bundle about

00:08:33.320 --> 00:08:33.330
are already using the app bundle about
 

00:08:33.330 --> 00:08:36.020
are already using the app bundle about
what they like recently we've conducted

00:08:36.020 --> 00:08:36.030
what they like recently we've conducted
 

00:08:36.030 --> 00:08:37.550
what they like recently we've conducted
a workshop with some developers from

00:08:37.550 --> 00:08:37.560
a workshop with some developers from
 

00:08:37.560 --> 00:08:40.100
a workshop with some developers from
India who make really popular apps these

00:08:40.100 --> 00:08:40.110
India who make really popular apps these
 

00:08:40.110 --> 00:08:41.570
India who make really popular apps these
developers have millions of active

00:08:41.570 --> 00:08:41.580
developers have millions of active
 

00:08:41.580 --> 00:08:43.219
developers have millions of active
installs and they're very sophisticated

00:08:43.219 --> 00:08:43.229
installs and they're very sophisticated
 

00:08:43.229 --> 00:08:45.200
installs and they're very sophisticated
about keeping their app size small

00:08:45.200 --> 00:08:45.210
about keeping their app size small
 

00:08:45.210 --> 00:08:47.060
about keeping their app size small
because their users are very sensitive

00:08:47.060 --> 00:08:47.070
because their users are very sensitive
 

00:08:47.070 --> 00:08:49.220
because their users are very sensitive
to it so this is a useful group for us

00:08:49.220 --> 00:08:49.230
to it so this is a useful group for us
 

00:08:49.230 --> 00:08:52.460
to it so this is a useful group for us
to learn from rio5 found that smaller

00:08:52.460 --> 00:08:52.470
to learn from rio5 found that smaller
 

00:08:52.470 --> 00:08:55.010
to learn from rio5 found that smaller
installs improve their conversion rates

00:08:55.010 --> 00:08:55.020
installs improve their conversion rates
 

00:08:55.020 --> 00:08:57.230
installs improve their conversion rates
Redbus speaks to their release process

00:08:57.230 --> 00:08:57.240
Redbus speaks to their release process
 

00:08:57.240 --> 00:08:59.120
Redbus speaks to their release process
being most streamlined and easier to

00:08:59.120 --> 00:08:59.130
being most streamlined and easier to
 

00:08:59.130 --> 00:09:02.389
being most streamlined and easier to
manage and swiggy reports that switching

00:09:02.389 --> 00:09:02.399
manage and swiggy reports that switching
 

00:09:02.399 --> 00:09:03.889
manage and swiggy reports that switching
was a simple process and they were

00:09:03.889 --> 00:09:03.899
was a simple process and they were
 

00:09:03.899 --> 00:09:06.100
was a simple process and they were
testing using a bundle within an hour

00:09:06.100 --> 00:09:06.110
testing using a bundle within an hour
 

00:09:06.110 --> 00:09:09.380
testing using a bundle within an hour
and it's not just developers in India of

00:09:09.380 --> 00:09:09.390
and it's not just developers in India of
 

00:09:09.390 --> 00:09:11.420
and it's not just developers in India of
course all these developers around the

00:09:11.420 --> 00:09:11.430
course all these developers around the
 

00:09:11.430 --> 00:09:12.980
course all these developers around the
world have switched and are seeing

00:09:12.980 --> 00:09:12.990
world have switched and are seeing
 

00:09:12.990 --> 00:09:15.710
world have switched and are seeing
fantastic size savings duolingo for

00:09:15.710 --> 00:09:15.720
fantastic size savings duolingo for
 

00:09:15.720 --> 00:09:18.350
fantastic size savings duolingo for
example so our 56 percent size saving

00:09:18.350 --> 00:09:18.360
example so our 56 percent size saving
 

00:09:18.360 --> 00:09:20.720
example so our 56 percent size saving
compared to a universal apk and it's

00:09:20.720 --> 00:09:20.730
compared to a universal apk and it's
 

00:09:20.730 --> 00:09:23.060
compared to a universal apk and it's
really hard to get such big savings from

00:09:23.060 --> 00:09:23.070
really hard to get such big savings from
 

00:09:23.070 --> 00:09:26.389
really hard to get such big savings from
incremental optimizations switching to

00:09:26.389 --> 00:09:26.399
incremental optimizations switching to
 

00:09:26.399 --> 00:09:28.730
incremental optimizations switching to
the bundle is the simplest and highest

00:09:28.730 --> 00:09:28.740
the bundle is the simplest and highest
 

00:09:28.740 --> 00:09:30.680
the bundle is the simplest and highest
impact thing that most developers can do

00:09:30.680 --> 00:09:30.690
impact thing that most developers can do
 

00:09:30.690 --> 00:09:36.050
impact thing that most developers can do
to reduce app size Google apps are also

00:09:36.050 --> 00:09:36.060
to reduce app size Google apps are also
 

00:09:36.060 --> 00:09:37.970
to reduce app size Google apps are also
adopting the bundle in production and

00:09:37.970 --> 00:09:37.980
adopting the bundle in production and
 

00:09:37.980 --> 00:09:39.460
adopting the bundle in production and
they're seeing strong savings as well

00:09:39.460 --> 00:09:39.470
they're seeing strong savings as well
 

00:09:39.470 --> 00:09:42.620
they're seeing strong savings as well
Google Maps is saving about 15% in size

00:09:42.620 --> 00:09:42.630
Google Maps is saving about 15% in size
 

00:09:42.630 --> 00:09:46.550
Google Maps is saving about 15% in size
YouTube 20 for Google News 27 they also

00:09:46.550 --> 00:09:46.560
YouTube 20 for Google News 27 they also
 

00:09:46.560 --> 00:09:48.260
YouTube 20 for Google News 27 they also
report some streamlining of their

00:09:48.260 --> 00:09:48.270
report some streamlining of their
 

00:09:48.270 --> 00:09:49.940
report some streamlining of their
release process and have even noticed a

00:09:49.940 --> 00:09:49.950
release process and have even noticed a
 

00:09:49.950 --> 00:09:54.500
release process and have even noticed a
lift in update rates so you can see this

00:09:54.500 --> 00:09:54.510
lift in update rates so you can see this
 

00:09:54.510 --> 00:09:57.230
lift in update rates so you can see this
isn't experimental this is ready there

00:09:57.230 --> 00:09:57.240
isn't experimental this is ready there
 

00:09:57.240 --> 00:09:59.510
isn't experimental this is ready there
are thousands of apps thousands of app

00:09:59.510 --> 00:09:59.520
are thousands of apps thousands of app
 

00:09:59.520 --> 00:10:01.850
are thousands of apps thousands of app
bundles in production and it's time for

00:10:01.850 --> 00:10:01.860
bundles in production and it's time for
 

00:10:01.860 --> 00:10:03.500
bundles in production and it's time for
all developers to start moving towards

00:10:03.500 --> 00:10:03.510
all developers to start moving towards
 

00:10:03.510 --> 00:10:07.250
all developers to start moving towards
this new publishing format so when you

00:10:07.250 --> 00:10:07.260
this new publishing format so when you
 

00:10:07.260 --> 00:10:08.540
this new publishing format so when you
adopt the app bundle

00:10:08.540 --> 00:10:08.550
adopt the app bundle
 

00:10:08.550 --> 00:10:10.819
adopt the app bundle
you're not only gaining size savings

00:10:10.819 --> 00:10:10.829
you're not only gaining size savings
 

00:10:10.829 --> 00:10:12.769
you're not only gaining size savings
today you will also be benefiting from

00:10:12.769 --> 00:10:12.779
today you will also be benefiting from
 

00:10:12.779 --> 00:10:15.380
today you will also be benefiting from
optimal Optum attic optimizations in the

00:10:15.380 --> 00:10:15.390
optimal Optum attic optimizations in the
 

00:10:15.390 --> 00:10:18.710
optimal Optum attic optimizations in the
future as Play introduces them here is a

00:10:18.710 --> 00:10:18.720
future as Play introduces them here is a
 

00:10:18.720 --> 00:10:20.510
future as Play introduces them here is a
cool example of another optimizations

00:10:20.510 --> 00:10:20.520
cool example of another optimizations
 

00:10:20.520 --> 00:10:23.090
cool example of another optimizations
we're just introducing we've added a new

00:10:23.090 --> 00:10:23.100
we're just introducing we've added a new
 

00:10:23.100 --> 00:10:25.010
we're just introducing we've added a new
Android platform optimization to the

00:10:25.010 --> 00:10:25.020
Android platform optimization to the
 

00:10:25.020 --> 00:10:27.740
Android platform optimization to the
bundle called uncompressed native

00:10:27.740 --> 00:10:27.750
bundle called uncompressed native
 

00:10:27.750 --> 00:10:31.040
bundle called uncompressed native
libraries his already work on Android L

00:10:31.040 --> 00:10:31.050
libraries his already work on Android L
 

00:10:31.050 --> 00:10:32.810
libraries his already work on Android L
and below native libraries have to be

00:10:32.810 --> 00:10:32.820
and below native libraries have to be
 

00:10:32.820 --> 00:10:34.639
and below native libraries have to be
uncompressed from the apk before the

00:10:34.639 --> 00:10:34.649
uncompressed from the apk before the
 

00:10:34.649 --> 00:10:36.650
uncompressed from the apk before the
platform can use them meaning the user

00:10:36.650 --> 00:10:36.660
platform can use them meaning the user
 

00:10:36.660 --> 00:10:39.010
platform can use them meaning the user
ends up with two copies of the library

00:10:39.010 --> 00:10:39.020
ends up with two copies of the library
 

00:10:39.020 --> 00:10:42.560
ends up with two copies of the library
after Android M the platform can read

00:10:42.560 --> 00:10:42.570
after Android M the platform can read
 

00:10:42.570 --> 00:10:44.360
after Android M the platform can read
the library directly from the apk if

00:10:44.360 --> 00:10:44.370
the library directly from the apk if
 

00:10:44.370 --> 00:10:46.730
the library directly from the apk if
it's left uncompressed thus saving a

00:10:46.730 --> 00:10:46.740
it's left uncompressed thus saving a
 

00:10:46.740 --> 00:10:49.430
it's left uncompressed thus saving a
copy on the device to do it yourself you

00:10:49.430 --> 00:10:49.440
copy on the device to do it yourself you
 

00:10:49.440 --> 00:10:51.410
copy on the device to do it yourself you
will need to need to avoid two versions

00:10:51.410 --> 00:10:51.420
will need to need to avoid two versions
 

00:10:51.420 --> 00:10:54.199
will need to need to avoid two versions
of your app and create multi apk for pre

00:10:54.199 --> 00:10:54.209
of your app and create multi apk for pre
 

00:10:54.209 --> 00:10:56.360
of your app and create multi apk for pre
and post M if you're using the app

00:10:56.360 --> 00:10:56.370
and post M if you're using the app
 

00:10:56.370 --> 00:10:58.220
and post M if you're using the app
bundle you just give us your libraries

00:10:58.220 --> 00:10:58.230
bundle you just give us your libraries
 

00:10:58.230 --> 00:11:00.800
bundle you just give us your libraries
and we and we create the required flavor

00:11:00.800 --> 00:11:00.810
and we and we create the required flavor
 

00:11:00.810 --> 00:11:03.079
and we and we create the required flavor
for pre and post m and serve the right

00:11:03.079 --> 00:11:03.089
for pre and post m and serve the right
 

00:11:03.089 --> 00:11:06.439
for pre and post m and serve the right
apk to the right user the size savings

00:11:06.439 --> 00:11:06.449
apk to the right user the size savings
 

00:11:06.449 --> 00:11:08.130
apk to the right user the size savings
were seeing on average are sick

00:11:08.130 --> 00:11:08.140
were seeing on average are sick
 

00:11:08.140 --> 00:11:10.680
were seeing on average are sick
Americans around 16% reduction in size

00:11:10.680 --> 00:11:10.690
Americans around 16% reduction in size
 

00:11:10.690 --> 00:11:13.080
Americans around 16% reduction in size
on disk and 8 percent reduction in

00:11:13.080 --> 00:11:13.090
on disk and 8 percent reduction in
 

00:11:13.090 --> 00:11:16.110
on disk and 8 percent reduction in
download size as I explained the app is

00:11:16.110 --> 00:11:16.120
download size as I explained the app is
 

00:11:16.120 --> 00:11:17.700
download size as I explained the app is
smaller on disk because the platform

00:11:17.700 --> 00:11:17.710
smaller on disk because the platform
 

00:11:17.710 --> 00:11:19.350
smaller on disk because the platform
does not need to make a copy of the

00:11:19.350 --> 00:11:19.360
does not need to make a copy of the
 

00:11:19.360 --> 00:11:21.870
does not need to make a copy of the
library but the download size is also

00:11:21.870 --> 00:11:21.880
library but the download size is also
 

00:11:21.880 --> 00:11:23.820
library but the download size is also
smaller because our compression

00:11:23.820 --> 00:11:23.830
smaller because our compression
 

00:11:23.830 --> 00:11:26.190
smaller because our compression
algorithms perform much better on data

00:11:26.190 --> 00:11:26.200
algorithms perform much better on data
 

00:11:26.200 --> 00:11:29.160
algorithms perform much better on data
that is not already compressed our

00:11:29.160 --> 00:11:29.170
that is not already compressed our
 

00:11:29.170 --> 00:11:31.890
that is not already compressed our
partner Gameloft so size savings on disk

00:11:31.890 --> 00:11:31.900
partner Gameloft so size savings on disk
 

00:11:31.900 --> 00:11:34.590
partner Gameloft so size savings on disk
of 22 percent and 16 percent on the

00:11:34.590 --> 00:11:34.600
of 22 percent and 16 percent on the
 

00:11:34.600 --> 00:11:36.540
of 22 percent and 16 percent on the
download size for the game My Little

00:11:36.540 --> 00:11:36.550
download size for the game My Little
 

00:11:36.550 --> 00:11:38.730
download size for the game My Little
Pony using this optimisation in the app

00:11:38.730 --> 00:11:38.740
Pony using this optimisation in the app
 

00:11:38.740 --> 00:11:41.610
Pony using this optimisation in the app
bundle and these savings are in addition

00:11:41.610 --> 00:11:41.620
bundle and these savings are in addition
 

00:11:41.620 --> 00:11:44.130
bundle and these savings are in addition
to the size saving they already sing for

00:11:44.130 --> 00:11:44.140
to the size saving they already sing for
 

00:11:44.140 --> 00:11:46.830
to the size saving they already sing for
from switching to the app bundle with

00:11:46.830 --> 00:11:46.840
from switching to the app bundle with
 

00:11:46.840 --> 00:11:49.080
from switching to the app bundle with
this optimization the downloaded size is

00:11:49.080 --> 00:11:49.090
this optimization the downloaded size is
 

00:11:49.090 --> 00:11:51.360
this optimization the downloaded size is
smaller it's faster to install and takes

00:11:51.360 --> 00:11:51.370
smaller it's faster to install and takes
 

00:11:51.370 --> 00:11:53.190
smaller it's faster to install and takes
up less space on disk if you're using

00:11:53.190 --> 00:11:53.200
up less space on disk if you're using
 

00:11:53.200 --> 00:11:54.720
up less space on disk if you're using
the app bundle you get this new

00:11:54.720 --> 00:11:54.730
the app bundle you get this new
 

00:11:54.730 --> 00:11:58.040
the app bundle you get this new
optimization without any extra effort

00:11:58.040 --> 00:11:58.050
optimization without any extra effort
 

00:11:58.050 --> 00:12:01.050
optimization without any extra effort
now we still want you to remain in

00:12:01.050 --> 00:12:01.060
now we still want you to remain in
 

00:12:01.060 --> 00:12:03.090
now we still want you to remain in
control to when these optimizations

00:12:03.090 --> 00:12:03.100
control to when these optimizations
 

00:12:03.100 --> 00:12:05.580
control to when these optimizations
should be pushed to your users for that

00:12:05.580 --> 00:12:05.590
should be pushed to your users for that
 

00:12:05.590 --> 00:12:07.550
should be pushed to your users for that
reason Play will only apply

00:12:07.550 --> 00:12:07.560
reason Play will only apply
 

00:12:07.560 --> 00:12:09.780
reason Play will only apply
optimizations on app bundle that have

00:12:09.780 --> 00:12:09.790
optimizations on app bundle that have
 

00:12:09.790 --> 00:12:11.550
optimizations on app bundle that have
been built with the version of Gradle

00:12:11.550 --> 00:12:11.560
been built with the version of Gradle
 

00:12:11.560 --> 00:12:14.730
been built with the version of Gradle
that introduces the optimization for

00:12:14.730 --> 00:12:14.740
that introduces the optimization for
 

00:12:14.740 --> 00:12:16.560
that introduces the optimization for
example the uncompressed native

00:12:16.560 --> 00:12:16.570
example the uncompressed native
 

00:12:16.570 --> 00:12:18.810
example the uncompressed native
libraries optimization will only be

00:12:18.810 --> 00:12:18.820
libraries optimization will only be
 

00:12:18.820 --> 00:12:20.970
libraries optimization will only be
applied to your app if you build it with

00:12:20.970 --> 00:12:20.980
applied to your app if you build it with
 

00:12:20.980 --> 00:12:23.820
applied to your app if you build it with
the latest Gradle 3.3 which is already

00:12:23.820 --> 00:12:23.830
the latest Gradle 3.3 which is already
 

00:12:23.830 --> 00:12:29.310
the latest Gradle 3.3 which is already
available for download in beta now let's

00:12:29.310 --> 00:12:29.320
available for download in beta now let's
 

00:12:29.320 --> 00:12:31.590
available for download in beta now let's
take a look at how you can build test

00:12:31.590 --> 00:12:31.600
take a look at how you can build test
 

00:12:31.600 --> 00:12:36.630
take a look at how you can build test
and publish Android app bundles you can

00:12:36.630 --> 00:12:36.640
and publish Android app bundles you can
 

00:12:36.640 --> 00:12:38.760
and publish Android app bundles you can
build that bundles in a 3.2 stable

00:12:38.760 --> 00:12:38.770
build that bundles in a 3.2 stable
 

00:12:38.770 --> 00:12:41.010
build that bundles in a 3.2 stable
release of Android studio the build

00:12:41.010 --> 00:12:41.020
release of Android studio the build
 

00:12:41.020 --> 00:12:43.050
release of Android studio the build
process is very similar to building an

00:12:43.050 --> 00:12:43.060
process is very similar to building an
 

00:12:43.060 --> 00:12:45.300
process is very similar to building an
apk for most developers so it's easy to

00:12:45.300 --> 00:12:45.310
apk for most developers so it's easy to
 

00:12:45.310 --> 00:12:48.060
apk for most developers so it's easy to
switch for those who prefer the command

00:12:48.060 --> 00:12:48.070
switch for those who prefer the command
 

00:12:48.070 --> 00:12:50.250
switch for those who prefer the command
line or wish to integrate with automated

00:12:50.250 --> 00:12:50.260
line or wish to integrate with automated
 

00:12:50.260 --> 00:12:52.620
line or wish to integrate with automated
build systems the new Gradle android

00:12:52.620 --> 00:12:52.630
build systems the new Gradle android
 

00:12:52.630 --> 00:12:54.720
build systems the new Gradle android
plug-in provides a new set of tasks to

00:12:54.720 --> 00:12:54.730
plug-in provides a new set of tasks to
 

00:12:54.730 --> 00:12:57.900
plug-in provides a new set of tasks to
build Android app bundles as you'll

00:12:57.900 --> 00:12:57.910
build Android app bundles as you'll
 

00:12:57.910 --> 00:12:59.700
build Android app bundles as you'll
remember you would use the assemble

00:12:59.700 --> 00:12:59.710
remember you would use the assemble
 

00:12:59.710 --> 00:13:01.530
remember you would use the assemble
tasks on the command line for building

00:13:01.530 --> 00:13:01.540
tasks on the command line for building
 

00:13:01.540 --> 00:13:04.410
tasks on the command line for building
apks and now with the Android app bundle

00:13:04.410 --> 00:13:04.420
apks and now with the Android app bundle
 

00:13:04.420 --> 00:13:07.770
apks and now with the Android app bundle
you use the new bundle task similar to

00:13:07.770 --> 00:13:07.780
you use the new bundle task similar to
 

00:13:07.780 --> 00:13:10.260
you use the new bundle task similar to
assemble tasks bundle tasks also allow

00:13:10.260 --> 00:13:10.270
assemble tasks bundle tasks also allow
 

00:13:10.270 --> 00:13:15.390
assemble tasks bundle tasks also allow
you to build specific flavors the bundle

00:13:15.390 --> 00:13:15.400
you to build specific flavors the bundle
 

00:13:15.400 --> 00:13:16.890
you to build specific flavors the bundle
task will generate an android app bundle

00:13:16.890 --> 00:13:16.900
task will generate an android app bundle
 

00:13:16.900 --> 00:13:19.290
task will generate an android app bundle
and place it in the outputs folder with

00:13:19.290 --> 00:13:19.300
and place it in the outputs folder with
 

00:13:19.300 --> 00:13:21.780
and place it in the outputs folder with
the flavor and build type chosen

00:13:21.780 --> 00:13:21.790
the flavor and build type chosen
 

00:13:21.790 --> 00:13:23.160
the flavor and build type chosen
the build artifact is simply called

00:13:23.160 --> 00:13:23.170
the build artifact is simply called
 

00:13:23.170 --> 00:13:27.870
the build artifact is simply called
bundle AAB we do want developers to

00:13:27.870 --> 00:13:27.880
bundle AAB we do want developers to
 

00:13:27.880 --> 00:13:30.180
bundle AAB we do want developers to
retain control over their splits and so

00:13:30.180 --> 00:13:30.190
retain control over their splits and so
 

00:13:30.190 --> 00:13:32.160
retain control over their splits and so
for if any reason you need to disable

00:13:32.160 --> 00:13:32.170
for if any reason you need to disable
 

00:13:32.170 --> 00:13:34.470
for if any reason you need to disable
splitting by a particular dimension you

00:13:34.470 --> 00:13:34.480
splitting by a particular dimension you
 

00:13:34.480 --> 00:13:36.449
splitting by a particular dimension you
can do so using the new bundle block as

00:13:36.449 --> 00:13:36.459
can do so using the new bundle block as
 

00:13:36.459 --> 00:13:42.569
can do so using the new bundle block as
shown here Android studio and Gradle are

00:13:42.569 --> 00:13:42.579
shown here Android studio and Gradle are
 

00:13:42.579 --> 00:13:44.129
shown here Android studio and Gradle are
not the only ways that you can build

00:13:44.129 --> 00:13:44.139
not the only ways that you can build
 

00:13:44.139 --> 00:13:46.350
not the only ways that you can build
bundles today because the format and

00:13:46.350 --> 00:13:46.360
bundles today because the format and
 

00:13:46.360 --> 00:13:49.139
bundles today because the format and
bundle tool are open-source others are

00:13:49.139 --> 00:13:49.149
bundle tool are open-source others are
 

00:13:49.149 --> 00:13:51.990
bundle tool are open-source others are
already adopting them for example we're

00:13:51.990 --> 00:13:52.000
already adopting them for example we're
 

00:13:52.000 --> 00:13:53.939
already adopting them for example we're
excited to share that games using unity

00:13:53.939 --> 00:13:53.949
excited to share that games using unity
 

00:13:53.949 --> 00:13:55.889
excited to share that games using unity
can now boy it build Android app bundles

00:13:55.889 --> 00:13:55.899
can now boy it build Android app bundles
 

00:13:55.899 --> 00:13:59.490
can now boy it build Android app bundles
to unity added support in the 2018 point

00:13:59.490 --> 00:13:59.500
to unity added support in the 2018 point
 

00:13:59.500 --> 00:14:01.860
to unity added support in the 2018 point
3 beta release and you can join the beta

00:14:01.860 --> 00:14:01.870
3 beta release and you can join the beta
 

00:14:01.870 --> 00:14:06.420
3 beta release and you can join the beta
program now so now let's see how you can

00:14:06.420 --> 00:14:06.430
program now so now let's see how you can
 

00:14:06.430 --> 00:14:09.740
program now so now let's see how you can
adapt your testing with the app bundle

00:14:09.740 --> 00:14:09.750
adapt your testing with the app bundle
 

00:14:09.750 --> 00:14:12.389
adapt your testing with the app bundle
during the development phase when you

00:14:12.389 --> 00:14:12.399
during the development phase when you
 

00:14:12.399 --> 00:14:13.379
during the development phase when you
need to iterate quickly

00:14:13.379 --> 00:14:13.389
need to iterate quickly
 

00:14:13.389 --> 00:14:14.759
need to iterate quickly
you don't need to go through the app

00:14:14.759 --> 00:14:14.769
you don't need to go through the app
 

00:14:14.769 --> 00:14:16.710
you don't need to go through the app
bundle you can keep building apks

00:14:16.710 --> 00:14:16.720
bundle you can keep building apks
 

00:14:16.720 --> 00:14:20.939
bundle you can keep building apks
directly from studio much faster before

00:14:20.939 --> 00:14:20.949
directly from studio much faster before
 

00:14:20.949 --> 00:14:23.400
directly from studio much faster before
a release you may want to test the AP

00:14:23.400 --> 00:14:23.410
a release you may want to test the AP
 

00:14:23.410 --> 00:14:24.810
a release you may want to test the AP
case that would be generated from the

00:14:24.810 --> 00:14:24.820
case that would be generated from the
 

00:14:24.820 --> 00:14:26.910
case that would be generated from the
app bundle from studio this is as easy

00:14:26.910 --> 00:14:26.920
app bundle from studio this is as easy
 

00:14:26.920 --> 00:14:29.220
app bundle from studio this is as easy
as creating a new run configuration and

00:14:29.220 --> 00:14:29.230
as creating a new run configuration and
 

00:14:29.230 --> 00:14:31.500
as creating a new run configuration and
selecting apk from app bundle in the

00:14:31.500 --> 00:14:31.510
selecting apk from app bundle in the
 

00:14:31.510 --> 00:14:34.710
selecting apk from app bundle in the
deploy menu studio under the hood uses

00:14:34.710 --> 00:14:34.720
deploy menu studio under the hood uses
 

00:14:34.720 --> 00:14:36.689
deploy menu studio under the hood uses
the same tool platers to generate the AP

00:14:36.689 --> 00:14:36.699
the same tool platers to generate the AP
 

00:14:36.699 --> 00:14:41.129
the same tool platers to generate the AP
case so you will get high fidelity when

00:14:41.129 --> 00:14:41.139
case so you will get high fidelity when
 

00:14:41.139 --> 00:14:42.870
case so you will get high fidelity when
you want to share the AP case generated

00:14:42.870 --> 00:14:42.880
you want to share the AP case generated
 

00:14:42.880 --> 00:14:44.790
you want to share the AP case generated
from the app bundle say with your QA

00:14:44.790 --> 00:14:44.800
from the app bundle say with your QA
 

00:14:44.800 --> 00:14:47.100
from the app bundle say with your QA
team you can use the bottle to a common

00:14:47.100 --> 00:14:47.110
team you can use the bottle to a common
 

00:14:47.110 --> 00:14:49.439
team you can use the bottle to a common
line this tool is what play and Gradle

00:14:49.439 --> 00:14:49.449
line this tool is what play and Gradle
 

00:14:49.449 --> 00:14:52.019
line this tool is what play and Gradle
use under the hood to generate ATK's we

00:14:52.019 --> 00:14:52.029
use under the hood to generate ATK's we
 

00:14:52.029 --> 00:14:53.550
use under the hood to generate ATK's we
have open source panel tool to be

00:14:53.550 --> 00:14:53.560
have open source panel tool to be
 

00:14:53.560 --> 00:14:55.439
have open source panel tool to be
transparent about how we generate ATK's

00:14:55.439 --> 00:14:55.449
transparent about how we generate ATK's
 

00:14:55.449 --> 00:14:57.360
transparent about how we generate ATK's
and you can download the bono to library

00:14:57.360 --> 00:14:57.370
and you can download the bono to library
 

00:14:57.370 --> 00:15:01.980
and you can download the bono to library
on the github repo you see here Buono

00:15:01.980 --> 00:15:01.990
on the github repo you see here Buono
 

00:15:01.990 --> 00:15:04.530
on the github repo you see here Buono
tool generates what we call an APK set

00:15:04.530 --> 00:15:04.540
tool generates what we call an APK set
 

00:15:04.540 --> 00:15:07.350
tool generates what we call an APK set
archive which will contain all the APK s

00:15:07.350 --> 00:15:07.360
archive which will contain all the APK s
 

00:15:07.360 --> 00:15:09.449
archive which will contain all the APK s
for all the device devices that your app

00:15:09.449 --> 00:15:09.459
for all the device devices that your app
 

00:15:09.459 --> 00:15:12.059
for all the device devices that your app
supports we can share this archive and

00:15:12.059 --> 00:15:12.069
supports we can share this archive and
 

00:15:12.069 --> 00:15:14.220
supports we can share this archive and
still using bono tool you can install it

00:15:14.220 --> 00:15:14.230
still using bono tool you can install it
 

00:15:14.230 --> 00:15:16.139
still using bono tool you can install it
on a connected device which will

00:15:16.139 --> 00:15:16.149
on a connected device which will
 

00:15:16.149 --> 00:15:17.939
on a connected device which will
simulate what playe does when serving

00:15:17.939 --> 00:15:17.949
simulate what playe does when serving
 

00:15:17.949 --> 00:15:22.079
simulate what playe does when serving
ATK's to that device as you can imagine

00:15:22.079 --> 00:15:22.089
ATK's to that device as you can imagine
 

00:15:22.089 --> 00:15:24.600
ATK's to that device as you can imagine
an APK said can become quite big so if

00:15:24.600 --> 00:15:24.610
an APK said can become quite big so if
 

00:15:24.610 --> 00:15:26.340
an APK said can become quite big so if
you want to build the APK is only for a

00:15:26.340 --> 00:15:26.350
you want to build the APK is only for a
 

00:15:26.350 --> 00:15:28.620
you want to build the APK is only for a
given device configuration you can do so

00:15:28.620 --> 00:15:28.630
given device configuration you can do so
 

00:15:28.630 --> 00:15:30.389
given device configuration you can do so
by passing to bonnet all a device

00:15:30.389 --> 00:15:30.399
by passing to bonnet all a device
 

00:15:30.399 --> 00:15:33.240
by passing to bonnet all a device
specification in a JSON format we can

00:15:33.240 --> 00:15:33.250
specification in a JSON format we can
 

00:15:33.250 --> 00:15:35.100
specification in a JSON format we can
share that archive around which can then

00:15:35.100 --> 00:15:35.110
share that archive around which can then
 

00:15:35.110 --> 00:15:35.400
share that archive around which can then
be

00:15:35.400 --> 00:15:35.410
be
 

00:15:35.410 --> 00:15:38.629
be
stalled on the devices matching the spec

00:15:38.629 --> 00:15:38.639
stalled on the devices matching the spec
 

00:15:38.639 --> 00:15:40.740
stalled on the devices matching the spec
this is what the common line looks like

00:15:40.740 --> 00:15:40.750
this is what the common line looks like
 

00:15:40.750 --> 00:15:42.809
this is what the common line looks like
to build the apk said archived from the

00:15:42.809 --> 00:15:42.819
to build the apk said archived from the
 

00:15:42.819 --> 00:15:44.790
to build the apk said archived from the
app bundle in this case we're

00:15:44.790 --> 00:15:44.800
app bundle in this case we're
 

00:15:44.800 --> 00:15:46.680
app bundle in this case we're
instructing Bonnell tool to build apks

00:15:46.680 --> 00:15:46.690
instructing Bonnell tool to build apks
 

00:15:46.690 --> 00:15:51.090
instructing Bonnell tool to build apks
only for the connected device if you

00:15:51.090 --> 00:15:51.100
only for the connected device if you
 

00:15:51.100 --> 00:15:53.249
only for the connected device if you
don't have a device at hand if you're

00:15:53.249 --> 00:15:53.259
don't have a device at hand if you're
 

00:15:53.259 --> 00:15:54.990
don't have a device at hand if you're
generating the archive from a CI system

00:15:54.990 --> 00:15:55.000
generating the archive from a CI system
 

00:15:55.000 --> 00:15:57.240
generating the archive from a CI system
for example you can pass instead a

00:15:57.240 --> 00:15:57.250
for example you can pass instead a
 

00:15:57.250 --> 00:16:01.309
for example you can pass instead a
device specification in this JSON format

00:16:01.309 --> 00:16:01.319
device specification in this JSON format
 

00:16:01.319 --> 00:16:03.900
device specification in this JSON format
finally if you want a unique easily

00:16:03.900 --> 00:16:03.910
finally if you want a unique easily
 

00:16:03.910 --> 00:16:06.329
finally if you want a unique easily
shareable apk you can also choose to

00:16:06.329 --> 00:16:06.339
shareable apk you can also choose to
 

00:16:06.339 --> 00:16:09.569
shareable apk you can also choose to
build a universal apk this apk does not

00:16:09.569 --> 00:16:09.579
build a universal apk this apk does not
 

00:16:09.579 --> 00:16:11.639
build a universal apk this apk does not
use splits but it can be installed on

00:16:11.639 --> 00:16:11.649
use splits but it can be installed on
 

00:16:11.649 --> 00:16:13.769
use splits but it can be installed on
any device so it's very convenient for

00:16:13.769 --> 00:16:13.779
any device so it's very convenient for
 

00:16:13.779 --> 00:16:18.150
any device so it's very convenient for
sharing but the best way to test exactly

00:16:18.150 --> 00:16:18.160
sharing but the best way to test exactly
 

00:16:18.160 --> 00:16:20.040
sharing but the best way to test exactly
what your users will get is still to go

00:16:20.040 --> 00:16:20.050
what your users will get is still to go
 

00:16:20.050 --> 00:16:21.600
what your users will get is still to go
through the internal test track on the

00:16:21.600 --> 00:16:21.610
through the internal test track on the
 

00:16:21.610 --> 00:16:23.970
through the internal test track on the
Play console this way you are guaranteed

00:16:23.970 --> 00:16:23.980
Play console this way you are guaranteed
 

00:16:23.980 --> 00:16:26.160
Play console this way you are guaranteed
to get byte 4 bytes what your users will

00:16:26.160 --> 00:16:26.170
to get byte 4 bytes what your users will
 

00:16:26.170 --> 00:16:30.150
to get byte 4 bytes what your users will
get the internal test track is similar

00:16:30.150 --> 00:16:30.160
get the internal test track is similar
 

00:16:30.160 --> 00:16:32.069
get the internal test track is similar
to the alpha and beta tracks that you

00:16:32.069 --> 00:16:32.079
to the alpha and beta tracks that you
 

00:16:32.079 --> 00:16:33.990
to the alpha and beta tracks that you
then you may already be familiar with

00:16:33.990 --> 00:16:34.000
then you may already be familiar with
 

00:16:34.000 --> 00:16:36.660
then you may already be familiar with
but it differs from these tracks in that

00:16:36.660 --> 00:16:36.670
but it differs from these tracks in that
 

00:16:36.670 --> 00:16:38.369
but it differs from these tracks in that
there is almost no delay between the

00:16:38.369 --> 00:16:38.379
there is almost no delay between the
 

00:16:38.379 --> 00:16:40.439
there is almost no delay between the
uploads of the bundle and the update

00:16:40.439 --> 00:16:40.449
uploads of the bundle and the update
 

00:16:40.449 --> 00:16:44.879
uploads of the bundle and the update
being available on the testis device you

00:16:44.879 --> 00:16:44.889
being available on the testis device you
 

00:16:44.889 --> 00:16:46.110
being available on the testis device you
can see here how it looks in the Play

00:16:46.110 --> 00:16:46.120
can see here how it looks in the Play
 

00:16:46.120 --> 00:16:48.090
can see here how it looks in the Play
console you can create a list of emails

00:16:48.090 --> 00:16:48.100
console you can create a list of emails
 

00:16:48.100 --> 00:16:50.970
console you can create a list of emails
for up to 100 QA testers the QA testers

00:16:50.970 --> 00:16:50.980
for up to 100 QA testers the QA testers
 

00:16:50.980 --> 00:16:52.620
for up to 100 QA testers the QA testers
can then follow the opt-in link and

00:16:52.620 --> 00:16:52.630
can then follow the opt-in link and
 

00:16:52.630 --> 00:16:54.720
can then follow the opt-in link and
they'll receive automatically the latest

00:16:54.720 --> 00:16:54.730
they'll receive automatically the latest
 

00:16:54.730 --> 00:16:57.749
they'll receive automatically the latest
version we know that for some of you

00:16:57.749 --> 00:16:57.759
version we know that for some of you
 

00:16:57.759 --> 00:16:59.879
version we know that for some of you
these testing options are not ideal and

00:16:59.879 --> 00:16:59.889
these testing options are not ideal and
 

00:16:59.889 --> 00:17:01.679
these testing options are not ideal and
we see a gap in particular between

00:17:01.679 --> 00:17:01.689
we see a gap in particular between
 

00:17:01.689 --> 00:17:04.199
we see a gap in particular between
testing in Android studio and place test

00:17:04.199 --> 00:17:04.209
testing in Android studio and place test
 

00:17:04.209 --> 00:17:06.449
testing in Android studio and place test
tracks so I just want you to know that

00:17:06.449 --> 00:17:06.459
tracks so I just want you to know that
 

00:17:06.459 --> 00:17:08.250
tracks so I just want you to know that
we're thinking really hard about how to

00:17:08.250 --> 00:17:08.260
we're thinking really hard about how to
 

00:17:08.260 --> 00:17:13.049
we're thinking really hard about how to
close this gap so now you've built and

00:17:13.049 --> 00:17:13.059
close this gap so now you've built and
 

00:17:13.059 --> 00:17:15.179
close this gap so now you've built and
test bundles let's discuss publishing

00:17:15.179 --> 00:17:15.189
test bundles let's discuss publishing
 

00:17:15.189 --> 00:17:17.130
test bundles let's discuss publishing
bundles and also a new view that we've

00:17:17.130 --> 00:17:17.140
bundles and also a new view that we've
 

00:17:17.140 --> 00:17:21.240
bundles and also a new view that we've
added to the releases section in the

00:17:21.240 --> 00:17:21.250
added to the releases section in the
 

00:17:21.250 --> 00:17:22.770
added to the releases section in the
Play console we're starting to show an

00:17:22.770 --> 00:17:22.780
Play console we're starting to show an
 

00:17:22.780 --> 00:17:24.689
Play console we're starting to show an
estimate when we think that an app could

00:17:24.689 --> 00:17:24.699
estimate when we think that an app could
 

00:17:24.699 --> 00:17:26.149
estimate when we think that an app could
really benefit from using the app bundle

00:17:26.149 --> 00:17:26.159
really benefit from using the app bundle
 

00:17:26.159 --> 00:17:28.649
really benefit from using the app bundle
we'll take a common reference device and

00:17:28.649 --> 00:17:28.659
we'll take a common reference device and
 

00:17:28.659 --> 00:17:30.720
we'll take a common reference device and
calculate what you could save were you

00:17:30.720 --> 00:17:30.730
calculate what you could save were you
 

00:17:30.730 --> 00:17:34.080
calculate what you could save were you
to switch to the bundle once you choose

00:17:34.080 --> 00:17:34.090
to switch to the bundle once you choose
 

00:17:34.090 --> 00:17:36.090
to switch to the bundle once you choose
to switch you manage your release just

00:17:36.090 --> 00:17:36.100
to switch you manage your release just
 

00:17:36.100 --> 00:17:38.669
to switch you manage your release just
like you did with apks simply create a

00:17:38.669 --> 00:17:38.679
like you did with apks simply create a
 

00:17:38.679 --> 00:17:40.770
like you did with apks simply create a
new release and drop the app bundle in

00:17:40.770 --> 00:17:40.780
new release and drop the app bundle in
 

00:17:40.780 --> 00:17:42.149
new release and drop the app bundle in
the same location where you currently

00:17:42.149 --> 00:17:42.159
the same location where you currently
 

00:17:42.159 --> 00:17:46.919
the same location where you currently
draw your apks do note in order to a Joe

00:17:46.919 --> 00:17:46.929
draw your apks do note in order to a Joe
 

00:17:46.929 --> 00:17:49.170
draw your apks do note in order to a Joe
migration you can keep uploading apk

00:17:49.170 --> 00:17:49.180
migration you can keep uploading apk
 

00:17:49.180 --> 00:17:51.420
migration you can keep uploading apk
on your production track while you test

00:17:51.420 --> 00:17:51.430
on your production track while you test
 

00:17:51.430 --> 00:17:53.760
on your production track while you test
the bundle in a test track and when you

00:17:53.760 --> 00:17:53.770
the bundle in a test track and when you
 

00:17:53.770 --> 00:17:55.710
the bundle in a test track and when you
do this play is not going to re-sign the

00:17:55.710 --> 00:17:55.720
do this play is not going to re-sign the
 

00:17:55.720 --> 00:17:59.280
do this play is not going to re-sign the
apk we did this so that you can feel

00:17:59.280 --> 00:17:59.290
apk we did this so that you can feel
 

00:17:59.290 --> 00:18:01.380
apk we did this so that you can feel
confident trying out the app bundle with

00:18:01.380 --> 00:18:01.390
confident trying out the app bundle with
 

00:18:01.390 --> 00:18:03.150
confident trying out the app bundle with
a smaller number of users first without

00:18:03.150 --> 00:18:03.160
a smaller number of users first without
 

00:18:03.160 --> 00:18:04.740
a smaller number of users first without
affecting your current production user

00:18:04.740 --> 00:18:04.750
affecting your current production user
 

00:18:04.750 --> 00:18:09.930
affecting your current production user
base once you've uploaded it you review

00:18:09.930 --> 00:18:09.940
base once you've uploaded it you review
 

00:18:09.940 --> 00:18:11.970
base once you've uploaded it you review
your release you roll it out and that's

00:18:11.970 --> 00:18:11.980
your release you roll it out and that's
 

00:18:11.980 --> 00:18:15.120
your release you roll it out and that's
it I can't stress this enough as Pierre

00:18:15.120 --> 00:18:15.130
it I can't stress this enough as Pierre
 

00:18:15.130 --> 00:18:16.680
it I can't stress this enough as Pierre
mentioned there's no more multi apk to

00:18:16.680 --> 00:18:16.690
mentioned there's no more multi apk to
 

00:18:16.690 --> 00:18:18.900
mentioned there's no more multi apk to
deal with play console has created in

00:18:18.900 --> 00:18:18.910
deal with play console has created in
 

00:18:18.910 --> 00:18:20.970
deal with play console has created in
the background all the apks for the

00:18:20.970 --> 00:18:20.980
the background all the apks for the
 

00:18:20.980 --> 00:18:25.290
the background all the apks for the
devices supported for you now that

00:18:25.290 --> 00:18:25.300
devices supported for you now that
 

00:18:25.300 --> 00:18:26.520
devices supported for you now that
you've uploaded your app bundle and

00:18:26.520 --> 00:18:26.530
you've uploaded your app bundle and
 

00:18:26.530 --> 00:18:29.220
you've uploaded your app bundle and
players done this heavy lifting it would

00:18:29.220 --> 00:18:29.230
players done this heavy lifting it would
 

00:18:29.230 --> 00:18:30.570
players done this heavy lifting it would
be really nice to have an overview of

00:18:30.570 --> 00:18:30.580
be really nice to have an overview of
 

00:18:30.580 --> 00:18:34.170
be really nice to have an overview of
what play has generated for you to give

00:18:34.170 --> 00:18:34.180
what play has generated for you to give
 

00:18:34.180 --> 00:18:35.910
what play has generated for you to give
you this transparency we've built a new

00:18:35.910 --> 00:18:35.920
you this transparency we've built a new
 

00:18:35.920 --> 00:18:37.890
you this transparency we've built a new
tool in the Play console called bundle

00:18:37.890 --> 00:18:37.900
tool in the Play console called bundle
 

00:18:37.900 --> 00:18:39.870
tool in the Play console called bundle
Explorer which lets you navigate your

00:18:39.870 --> 00:18:39.880
Explorer which lets you navigate your
 

00:18:39.880 --> 00:18:41.490
Explorer which lets you navigate your
uploaded bundles and the generated

00:18:41.490 --> 00:18:41.500
uploaded bundles and the generated
 

00:18:41.500 --> 00:18:45.570
uploaded bundles and the generated
artifacts on the first screen a bundle

00:18:45.570 --> 00:18:45.580
artifacts on the first screen a bundle
 

00:18:45.580 --> 00:18:47.400
artifacts on the first screen a bundle
Explorer you'll see how much of a size

00:18:47.400 --> 00:18:47.410
Explorer you'll see how much of a size
 

00:18:47.410 --> 00:18:48.960
Explorer you'll see how much of a size
savings you've gained by publishing a

00:18:48.960 --> 00:18:48.970
savings you've gained by publishing a
 

00:18:48.970 --> 00:18:50.760
savings you've gained by publishing a
bundle of course this is going to be

00:18:50.760 --> 00:18:50.770
bundle of course this is going to be
 

00:18:50.770 --> 00:18:52.650
bundle of course this is going to be
different device by device and so we

00:18:52.650 --> 00:18:52.660
different device by device and so we
 

00:18:52.660 --> 00:18:54.180
different device by device and so we
calculate this using a popular device

00:18:54.180 --> 00:18:54.190
calculate this using a popular device
 

00:18:54.190 --> 00:18:56.940
calculate this using a popular device
configuration you can also see below a

00:18:56.940 --> 00:18:56.950
configuration you can also see below a
 

00:18:56.950 --> 00:18:58.830
configuration you can also see below a
list of device configurations and the

00:18:58.830 --> 00:18:58.840
list of device configurations and the
 

00:18:58.840 --> 00:19:01.200
list of device configurations and the
total size of the apk is served to those

00:19:01.200 --> 00:19:01.210
total size of the apk is served to those
 

00:19:01.210 --> 00:19:04.110
total size of the apk is served to those
devices if you click on View devices you

00:19:04.110 --> 00:19:04.120
devices if you click on View devices you
 

00:19:04.120 --> 00:19:07.130
devices if you click on View devices you
can see which devices are in each bucket

00:19:07.130 --> 00:19:07.140
can see which devices are in each bucket
 

00:19:07.140 --> 00:19:10.200
can see which devices are in each bucket
alternatively you can search by cell for

00:19:10.200 --> 00:19:10.210
alternatively you can search by cell for
 

00:19:10.210 --> 00:19:12.630
alternatively you can search by cell for
supported device by name to download the

00:19:12.630 --> 00:19:12.640
supported device by name to download the
 

00:19:12.640 --> 00:19:14.490
supported device by name to download the
set of generated apks that gets served

00:19:14.490 --> 00:19:14.500
set of generated apks that gets served
 

00:19:14.500 --> 00:19:16.680
set of generated apks that gets served
to that specific device and this is

00:19:16.680 --> 00:19:16.690
to that specific device and this is
 

00:19:16.690 --> 00:19:18.210
to that specific device and this is
particularly helpful for example when

00:19:18.210 --> 00:19:18.220
particularly helpful for example when
 

00:19:18.220 --> 00:19:19.770
particularly helpful for example when
you get a bug report for a particular

00:19:19.770 --> 00:19:19.780
you get a bug report for a particular
 

00:19:19.780 --> 00:19:21.750
you get a bug report for a particular
device so you can get the exact same

00:19:21.750 --> 00:19:21.760
device so you can get the exact same
 

00:19:21.760 --> 00:19:26.850
device so you can get the exact same
apks the play has served to it of course

00:19:26.850 --> 00:19:26.860
apks the play has served to it of course
 

00:19:26.860 --> 00:19:28.170
apks the play has served to it of course
we haven't forgotten about everyone who

00:19:28.170 --> 00:19:28.180
we haven't forgotten about everyone who
 

00:19:28.180 --> 00:19:30.810
we haven't forgotten about everyone who
uses our publishing api uploading

00:19:30.810 --> 00:19:30.820
uses our publishing api uploading
 

00:19:30.820 --> 00:19:32.910
uses our publishing api uploading
bundles is also available via the api

00:19:32.910 --> 00:19:32.920
bundles is also available via the api
 

00:19:32.920 --> 00:19:35.670
bundles is also available via the api
and automation and CI tools are already

00:19:35.670 --> 00:19:35.680
and automation and CI tools are already
 

00:19:35.680 --> 00:19:38.450
and automation and CI tools are already
adopting the bundle for example Fastlane

00:19:38.450 --> 00:19:38.460
adopting the bundle for example Fastlane
 

00:19:38.460 --> 00:19:40.860
adopting the bundle for example Fastlane
you'll find all the documentation at

00:19:40.860 --> 00:19:40.870
you'll find all the documentation at
 

00:19:40.870 --> 00:19:46.380
you'll find all the documentation at
these URLs to recap that's the latest on

00:19:46.380 --> 00:19:46.390
these URLs to recap that's the latest on
 

00:19:46.390 --> 00:19:48.060
these URLs to recap that's the latest on
the Android app bundle and how we're

00:19:48.060 --> 00:19:48.070
the Android app bundle and how we're
 

00:19:48.070 --> 00:19:49.740
the Android app bundle and how we're
making your apps smaller and release

00:19:49.740 --> 00:19:49.750
making your apps smaller and release
 

00:19:49.750 --> 00:19:51.990
making your apps smaller and release
simple and release is simpler the next

00:19:51.990 --> 00:19:52.000
simple and release is simpler the next
 

00:19:52.000 --> 00:19:54.060
simple and release is simpler the next
big change the app bundle introduces is

00:19:54.060 --> 00:19:54.070
big change the app bundle introduces is
 

00:19:54.070 --> 00:19:56.790
big change the app bundle introduces is
modularization and dynamic code loading

00:19:56.790 --> 00:19:56.800
modularization and dynamic code loading
 

00:19:56.800 --> 00:19:59.490
modularization and dynamic code loading
this is an approved safe way to load

00:19:59.490 --> 00:19:59.500
this is an approved safe way to load
 

00:19:59.500 --> 00:20:01.890
this is an approved safe way to load
features and functionality dynamically

00:20:01.890 --> 00:20:01.900
features and functionality dynamically
 

00:20:01.900 --> 00:20:03.120
features and functionality dynamically
making your app

00:20:03.120 --> 00:20:03.130
making your app
 

00:20:03.130 --> 00:20:05.790
making your app
even smaller at install time okay let me

00:20:05.790 --> 00:20:05.800
even smaller at install time okay let me
 

00:20:05.800 --> 00:20:07.370
even smaller at install time okay let me
tell you how it works

00:20:07.370 --> 00:20:07.380
tell you how it works
 

00:20:07.380 --> 00:20:09.930
tell you how it works
dynamic features offer yet another way

00:20:09.930 --> 00:20:09.940
dynamic features offer yet another way
 

00:20:09.940 --> 00:20:11.970
dynamic features offer yet another way
you can reduce the size of your app some

00:20:11.970 --> 00:20:11.980
you can reduce the size of your app some
 

00:20:11.980 --> 00:20:13.710
you can reduce the size of your app some
big features in your app may be used by

00:20:13.710 --> 00:20:13.720
big features in your app may be used by
 

00:20:13.720 --> 00:20:16.230
big features in your app may be used by
only 10% of your users so to avoid

00:20:16.230 --> 00:20:16.240
only 10% of your users so to avoid
 

00:20:16.240 --> 00:20:18.090
only 10% of your users so to avoid
having the 90 other percent pay the

00:20:18.090 --> 00:20:18.100
having the 90 other percent pay the
 

00:20:18.100 --> 00:20:20.430
having the 90 other percent pay the
price of disk space for a feature they

00:20:20.430 --> 00:20:20.440
price of disk space for a feature they
 

00:20:20.440 --> 00:20:22.500
price of disk space for a feature they
don't use you can choose to extract it

00:20:22.500 --> 00:20:22.510
don't use you can choose to extract it
 

00:20:22.510 --> 00:20:25.100
don't use you can choose to extract it
in what we call a dynamic feature

00:20:25.100 --> 00:20:25.110
in what we call a dynamic feature
 

00:20:25.110 --> 00:20:27.540
in what we call a dynamic feature
dynamic features can be installed on

00:20:27.540 --> 00:20:27.550
dynamic features can be installed on
 

00:20:27.550 --> 00:20:30.660
dynamic features can be installed on
demand when user requests them or you

00:20:30.660 --> 00:20:30.670
demand when user requests them or you
 

00:20:30.670 --> 00:20:32.760
demand when user requests them or you
can choose to defer installing them to a

00:20:32.760 --> 00:20:32.770
can choose to defer installing them to a
 

00:20:32.770 --> 00:20:34.470
can choose to defer installing them to a
later time when the app goes to the

00:20:34.470 --> 00:20:34.480
later time when the app goes to the
 

00:20:34.480 --> 00:20:38.160
later time when the app goes to the
background for pre L devices which don't

00:20:38.160 --> 00:20:38.170
background for pre L devices which don't
 

00:20:38.170 --> 00:20:40.320
background for pre L devices which don't
support on demand features we can fuse

00:20:40.320 --> 00:20:40.330
support on demand features we can fuse
 

00:20:40.330 --> 00:20:42.660
support on demand features we can fuse
the modules into the main app so they

00:20:42.660 --> 00:20:42.670
the modules into the main app so they
 

00:20:42.670 --> 00:20:45.480
the modules into the main app so they
delivered at install time all of these

00:20:45.480 --> 00:20:45.490
delivered at install time all of these
 

00:20:45.490 --> 00:20:47.490
delivered at install time all of these
use cases are supported in production

00:20:47.490 --> 00:20:47.500
use cases are supported in production
 

00:20:47.500 --> 00:20:49.590
use cases are supported in production
today with millions of users benefiting

00:20:49.590 --> 00:20:49.600
today with millions of users benefiting
 

00:20:49.600 --> 00:20:52.350
today with millions of users benefiting
already Facebook was actually one of our

00:20:52.350 --> 00:20:52.360
already Facebook was actually one of our
 

00:20:52.360 --> 00:20:53.850
already Facebook was actually one of our
launch partners and they are using

00:20:53.850 --> 00:20:53.860
launch partners and they are using
 

00:20:53.860 --> 00:20:55.620
launch partners and they are using
dynamic features in production across

00:20:55.620 --> 00:20:55.630
dynamic features in production across
 

00:20:55.630 --> 00:20:58.200
dynamic features in production across
their app portfolio let's take a let's

00:20:58.200 --> 00:20:58.210
their app portfolio let's take a let's
 

00:20:58.210 --> 00:21:01.440
their app portfolio let's take a let's
take a look at the story app size is

00:21:01.440 --> 00:21:01.450
take a look at the story app size is
 

00:21:01.450 --> 00:21:03.210
take a look at the story app size is
really important to Facebook they

00:21:03.210 --> 00:21:03.220
really important to Facebook they
 

00:21:03.220 --> 00:21:05.070
really important to Facebook they
evaluate the app size impacts of each

00:21:05.070 --> 00:21:05.080
evaluate the app size impacts of each
 

00:21:05.080 --> 00:21:07.380
evaluate the app size impacts of each
new feature carefully to ensure that the

00:21:07.380 --> 00:21:07.390
new feature carefully to ensure that the
 

00:21:07.390 --> 00:21:09.510
new feature carefully to ensure that the
benefit of the feature is worth the size

00:21:09.510 --> 00:21:09.520
benefit of the feature is worth the size
 

00:21:09.520 --> 00:21:11.970
benefit of the feature is worth the size
increase dynamic features means that

00:21:11.970 --> 00:21:11.980
increase dynamic features means that
 

00:21:11.980 --> 00:21:13.500
increase dynamic features means that
they can build new features without

00:21:13.500 --> 00:21:13.510
they can build new features without
 

00:21:13.510 --> 00:21:14.760
they can build new features without
increasing the size of apps like

00:21:14.760 --> 00:21:14.770
increasing the size of apps like
 

00:21:14.770 --> 00:21:17.130
increasing the size of apps like
Facebook and Facebook Lite at install

00:21:17.130 --> 00:21:17.140
Facebook and Facebook Lite at install
 

00:21:17.140 --> 00:21:21.570
Facebook and Facebook Lite at install
time dynamic features also help Facebook

00:21:21.570 --> 00:21:21.580
time dynamic features also help Facebook
 

00:21:21.580 --> 00:21:23.540
time dynamic features also help Facebook
with their high end device strategy

00:21:23.540 --> 00:21:23.550
with their high end device strategy
 

00:21:23.550 --> 00:21:25.770
with their high end device strategy
Facebook is able to deliver advanced

00:21:25.770 --> 00:21:25.780
Facebook is able to deliver advanced
 

00:21:25.780 --> 00:21:28.440
Facebook is able to deliver advanced
features to just supported devices and

00:21:28.440 --> 00:21:28.450
features to just supported devices and
 

00:21:28.450 --> 00:21:30.990
features to just supported devices and
they can also remove large features that

00:21:30.990 --> 00:21:31.000
they can also remove large features that
 

00:21:31.000 --> 00:21:33.330
they can also remove large features that
are not used often to avoid taking up

00:21:33.330 --> 00:21:33.340
are not used often to avoid taking up
 

00:21:33.340 --> 00:21:38.040
are not used often to avoid taking up
space on that device forever Facebook

00:21:38.040 --> 00:21:38.050
space on that device forever Facebook
 

00:21:38.050 --> 00:21:39.840
space on that device forever Facebook
has told us that dynamic features work

00:21:39.840 --> 00:21:39.850
has told us that dynamic features work
 

00:21:39.850 --> 00:21:41.280
has told us that dynamic features work
well when they're working on a new

00:21:41.280 --> 00:21:41.290
well when they're working on a new
 

00:21:41.290 --> 00:21:42.780
well when they're working on a new
feature that is separate from the main

00:21:42.780 --> 00:21:42.790
feature that is separate from the main
 

00:21:42.790 --> 00:21:44.580
feature that is separate from the main
app they can have a separate team of

00:21:44.580 --> 00:21:44.590
app they can have a separate team of
 

00:21:44.590 --> 00:21:47.190
app they can have a separate team of
engineers working on it we can then add

00:21:47.190 --> 00:21:47.200
engineers working on it we can then add
 

00:21:47.200 --> 00:21:49.440
engineers working on it we can then add
the app and they can then add it to the

00:21:49.440 --> 00:21:49.450
the app and they can then add it to the
 

00:21:49.450 --> 00:21:51.390
the app and they can then add it to the
app without increasing the base app size

00:21:51.390 --> 00:21:51.400
app without increasing the base app size
 

00:21:51.400 --> 00:21:56.520
app without increasing the base app size
at install time here are some of the

00:21:56.520 --> 00:21:56.530
at install time here are some of the
 

00:21:56.530 --> 00:21:58.050
at install time here are some of the
examples of dynamic features that

00:21:58.050 --> 00:21:58.060
examples of dynamic features that
 

00:21:58.060 --> 00:22:00.360
examples of dynamic features that
Facebook is added to their apps these

00:22:00.360 --> 00:22:00.370
Facebook is added to their apps these
 

00:22:00.370 --> 00:22:02.000
Facebook is added to their apps these
are all features that are in production

00:22:02.000 --> 00:22:02.010
are all features that are in production
 

00:22:02.010 --> 00:22:05.100
are all features that are in production
for example card scanning is a feature

00:22:05.100 --> 00:22:05.110
for example card scanning is a feature
 

00:22:05.110 --> 00:22:06.750
for example card scanning is a feature
that only a small percentage of

00:22:06.750 --> 00:22:06.760
that only a small percentage of
 

00:22:06.760 --> 00:22:09.900
that only a small percentage of
Facebook's users are using so moving it

00:22:09.900 --> 00:22:09.910
Facebook's users are using so moving it
 

00:22:09.910 --> 00:22:11.940
Facebook's users are using so moving it
to a dynamic feature avoids it taking up

00:22:11.940 --> 00:22:11.950
to a dynamic feature avoids it taking up
 

00:22:11.950 --> 00:22:14.160
to a dynamic feature avoids it taking up
two megabytes on every users device for

00:22:14.160 --> 00:22:14.170
two megabytes on every users device for
 

00:22:14.170 --> 00:22:16.470
two megabytes on every users device for
the lifetime of that app

00:22:16.470 --> 00:22:16.480
the lifetime of that app
 

00:22:16.480 --> 00:22:18.360
the lifetime of that app
another example is real-time

00:22:18.360 --> 00:22:18.370
another example is real-time
 

00:22:18.370 --> 00:22:21.570
another example is real-time
communication by moving voice and video

00:22:21.570 --> 00:22:21.580
communication by moving voice and video
 

00:22:21.580 --> 00:22:24.060
communication by moving voice and video
chat to a dynamic feature only users

00:22:24.060 --> 00:22:24.070
chat to a dynamic feature only users
 

00:22:24.070 --> 00:22:25.710
chat to a dynamic feature only users
with devices that can support them and

00:22:25.710 --> 00:22:25.720
with devices that can support them and
 

00:22:25.720 --> 00:22:28.260
with devices that can support them and
who actually want to use them need to

00:22:28.260 --> 00:22:28.270
who actually want to use them need to
 

00:22:28.270 --> 00:22:32.700
who actually want to use them need to
download it what might that experience

00:22:32.700 --> 00:22:32.710
download it what might that experience
 

00:22:32.710 --> 00:22:35.190
download it what might that experience
look like for a user let's take a simple

00:22:35.190 --> 00:22:35.200
look like for a user let's take a simple
 

00:22:35.200 --> 00:22:37.860
look like for a user let's take a simple
example imagine that you have a recipe

00:22:37.860 --> 00:22:37.870
example imagine that you have a recipe
 

00:22:37.870 --> 00:22:39.840
example imagine that you have a recipe
app and you want to keep the initial

00:22:39.840 --> 00:22:39.850
app and you want to keep the initial
 

00:22:39.850 --> 00:22:42.360
app and you want to keep the initial
download size small you observe that

00:22:42.360 --> 00:22:42.370
download size small you observe that
 

00:22:42.370 --> 00:22:44.190
download size small you observe that
while all of your users like to browse

00:22:44.190 --> 00:22:44.200
while all of your users like to browse
 

00:22:44.200 --> 00:22:46.470
while all of your users like to browse
for recipes only a small fraction of

00:22:46.470 --> 00:22:46.480
for recipes only a small fraction of
 

00:22:46.480 --> 00:22:48.750
for recipes only a small fraction of
them like to add recipes and you notice

00:22:48.750 --> 00:22:48.760
them like to add recipes and you notice
 

00:22:48.760 --> 00:22:50.070
them like to add recipes and you notice
that this functionality takes up

00:22:50.070 --> 00:22:50.080
that this functionality takes up
 

00:22:50.080 --> 00:22:52.980
that this functionality takes up
significant size in your app you can

00:22:52.980 --> 00:22:52.990
significant size in your app you can
 

00:22:52.990 --> 00:22:54.510
significant size in your app you can
choose therefore to break this feat this

00:22:54.510 --> 00:22:54.520
choose therefore to break this feat this
 

00:22:54.520 --> 00:22:56.070
choose therefore to break this feat this
feature out into its own module and

00:22:56.070 --> 00:22:56.080
feature out into its own module and
 

00:22:56.080 --> 00:22:59.700
feature out into its own module and
serve it only when needed we can see

00:22:59.700 --> 00:22:59.710
serve it only when needed we can see
 

00:22:59.710 --> 00:23:01.110
serve it only when needed we can see
what it looks like for the user or what

00:23:01.110 --> 00:23:01.120
what it looks like for the user or what
 

00:23:01.120 --> 00:23:03.270
what it looks like for the user or what
it might look like for the user here the

00:23:03.270 --> 00:23:03.280
it might look like for the user here the
 

00:23:03.280 --> 00:23:05.670
it might look like for the user here the
app opens and then the user goes to add

00:23:05.670 --> 00:23:05.680
app opens and then the user goes to add
 

00:23:05.680 --> 00:23:09.000
app opens and then the user goes to add
a recipe the app then requests that the

00:23:09.000 --> 00:23:09.010
a recipe the app then requests that the
 

00:23:09.010 --> 00:23:11.430
a recipe the app then requests that the
module be installed it's downloaded and

00:23:11.430 --> 00:23:11.440
module be installed it's downloaded and
 

00:23:11.440 --> 00:23:13.590
module be installed it's downloaded and
installed with progress visible to the

00:23:13.590 --> 00:23:13.600
installed with progress visible to the
 

00:23:13.600 --> 00:23:15.720
installed with progress visible to the
user and the new feature is ready to be

00:23:15.720 --> 00:23:15.730
user and the new feature is ready to be
 

00:23:15.730 --> 00:23:22.200
user and the new feature is ready to be
used after just a few seconds wait which

00:23:22.200 --> 00:23:22.210
used after just a few seconds wait which
 

00:23:22.210 --> 00:23:24.390
used after just a few seconds wait which
parts of your app might make good

00:23:24.390 --> 00:23:24.400
parts of your app might make good
 

00:23:24.400 --> 00:23:26.130
parts of your app might make good
candidates to be broken out as separate

00:23:26.130 --> 00:23:26.140
candidates to be broken out as separate
 

00:23:26.140 --> 00:23:28.470
candidates to be broken out as separate
features we think about it using this

00:23:28.470 --> 00:23:28.480
features we think about it using this
 

00:23:28.480 --> 00:23:31.140
features we think about it using this
Venn diagram if only a smaller fraction

00:23:31.140 --> 00:23:31.150
Venn diagram if only a smaller fraction
 

00:23:31.150 --> 00:23:33.150
Venn diagram if only a smaller fraction
of your users use this feature it could

00:23:33.150 --> 00:23:33.160
of your users use this feature it could
 

00:23:33.160 --> 00:23:35.400
of your users use this feature it could
be a good candidate especially if that

00:23:35.400 --> 00:23:35.410
be a good candidate especially if that
 

00:23:35.410 --> 00:23:37.200
be a good candidate especially if that
feature takes up significant amounts of

00:23:37.200 --> 00:23:37.210
feature takes up significant amounts of
 

00:23:37.210 --> 00:23:40.020
feature takes up significant amounts of
space and finally consider of users can

00:23:40.020 --> 00:23:40.030
space and finally consider of users can
 

00:23:40.030 --> 00:23:42.240
space and finally consider of users can
wait a few seconds before downloading

00:23:42.240 --> 00:23:42.250
wait a few seconds before downloading
 

00:23:42.250 --> 00:23:45.960
wait a few seconds before downloading
and using that feature if you're

00:23:45.960 --> 00:23:45.970
and using that feature if you're
 

00:23:45.970 --> 00:23:47.640
and using that feature if you're
interested in module arise in your app I

00:23:47.640 --> 00:23:47.650
interested in module arise in your app I
 

00:23:47.650 --> 00:23:49.980
interested in module arise in your app I
invite you to check out the plad 2.0

00:23:49.980 --> 00:23:49.990
invite you to check out the plad 2.0
 

00:23:49.990 --> 00:23:51.420
invite you to check out the plad 2.0
project so that some of our dev roles

00:23:51.420 --> 00:23:51.430
project so that some of our dev roles
 

00:23:51.430 --> 00:23:53.130
project so that some of our dev roles
have been working on and the associated

00:23:53.130 --> 00:23:53.140
have been working on and the associated
 

00:23:53.140 --> 00:23:54.630
have been working on and the associated
articles that they published the

00:23:54.630 --> 00:23:54.640
articles that they published the
 

00:23:54.640 --> 00:23:56.730
articles that they published the
describe how modularization was achieved

00:23:56.730 --> 00:23:56.740
describe how modularization was achieved
 

00:23:56.740 --> 00:24:02.250
describe how modularization was achieved
for the app now that we have covered how

00:24:02.250 --> 00:24:02.260
for the app now that we have covered how
 

00:24:02.260 --> 00:24:04.050
for the app now that we have covered how
dynamic features work let's see how to

00:24:04.050 --> 00:24:04.060
dynamic features work let's see how to
 

00:24:04.060 --> 00:24:07.230
dynamic features work let's see how to
create them to create a dynamic module

00:24:07.230 --> 00:24:07.240
create them to create a dynamic module
 

00:24:07.240 --> 00:24:10.560
create them to create a dynamic module
in Android studio 3.2 all you need to do

00:24:10.560 --> 00:24:10.570
in Android studio 3.2 all you need to do
 

00:24:10.570 --> 00:24:12.330
in Android studio 3.2 all you need to do
is use the new dynamic feature wizard

00:24:12.330 --> 00:24:12.340
is use the new dynamic feature wizard
 

00:24:12.340 --> 00:24:14.880
is use the new dynamic feature wizard
click on file new module then choose

00:24:14.880 --> 00:24:14.890
click on file new module then choose
 

00:24:14.890 --> 00:24:18.090
click on file new module then choose
dynamic feature module just type in your

00:24:18.090 --> 00:24:18.100
dynamic feature module just type in your
 

00:24:18.100 --> 00:24:19.770
dynamic feature module just type in your
modules name and Android studio will

00:24:19.770 --> 00:24:19.780
modules name and Android studio will
 

00:24:19.780 --> 00:24:22.040
modules name and Android studio will
generate a new dynamic feature for you

00:24:22.040 --> 00:24:22.050
generate a new dynamic feature for you
 

00:24:22.050 --> 00:24:24.540
generate a new dynamic feature for you
under the hood this is what studio does

00:24:24.540 --> 00:24:24.550
under the hood this is what studio does
 

00:24:24.550 --> 00:24:26.970
under the hood this is what studio does
in the manifest of your new module a

00:24:26.970 --> 00:24:26.980
in the manifest of your new module a
 

00:24:26.980 --> 00:24:29.370
in the manifest of your new module a
split identifier is added in this case

00:24:29.370 --> 00:24:29.380
split identifier is added in this case
 

00:24:29.380 --> 00:24:30.390
split identifier is added in this case
we'll call it add

00:24:30.390 --> 00:24:30.400
we'll call it add
 

00:24:30.400 --> 00:24:32.370
we'll call it add
Sippi this is how the Android platform

00:24:32.370 --> 00:24:32.380
Sippi this is how the Android platform
 

00:24:32.380 --> 00:24:34.830
Sippi this is how the Android platform
recognizes that although this apk has

00:24:34.830 --> 00:24:34.840
recognizes that although this apk has
 

00:24:34.840 --> 00:24:36.390
recognizes that although this apk has
the same package name it's still a

00:24:36.390 --> 00:24:36.400
the same package name it's still a
 

00:24:36.400 --> 00:24:39.960
the same package name it's still a
different module then a new module tag

00:24:39.960 --> 00:24:39.970
different module then a new module tag
 

00:24:39.970 --> 00:24:41.730
different module then a new module tag
element is added which allows us to

00:24:41.730 --> 00:24:41.740
element is added which allows us to
 

00:24:41.740 --> 00:24:43.470
element is added which allows us to
configure distribution aspects of the

00:24:43.470 --> 00:24:43.480
configure distribution aspects of the
 

00:24:43.480 --> 00:24:45.660
configure distribution aspects of the
module this tag is used by the Play

00:24:45.660 --> 00:24:45.670
module this tag is used by the Play
 

00:24:45.670 --> 00:24:47.640
module this tag is used by the Play
Store to read properties of the modules

00:24:47.640 --> 00:24:47.650
Store to read properties of the modules
 

00:24:47.650 --> 00:24:51.780
Store to read properties of the modules
of your app next you declare that this

00:24:51.780 --> 00:24:51.790
of your app next you declare that this
 

00:24:51.790 --> 00:24:53.940
of your app next you declare that this
module is an on-demand module by adding

00:24:53.940 --> 00:24:53.950
module is an on-demand module by adding
 

00:24:53.950 --> 00:24:56.340
module is an on-demand module by adding
the on-demand attribute meaning that it

00:24:56.340 --> 00:24:56.350
the on-demand attribute meaning that it
 

00:24:56.350 --> 00:24:58.500
the on-demand attribute meaning that it
will be only delivered to users devices

00:24:58.500 --> 00:24:58.510
will be only delivered to users devices
 

00:24:58.510 --> 00:25:00.390
will be only delivered to users devices
when you request it instead of at

00:25:00.390 --> 00:25:00.400
when you request it instead of at
 

00:25:00.400 --> 00:25:03.990
when you request it instead of at
install time note that on demand modules

00:25:03.990 --> 00:25:04.000
install time note that on demand modules
 

00:25:04.000 --> 00:25:06.540
install time note that on demand modules
are only supported since Android L so

00:25:06.540 --> 00:25:06.550
are only supported since Android L so
 

00:25:06.550 --> 00:25:08.250
are only supported since Android L so
you have to specify as well what place

00:25:08.250 --> 00:25:08.260
you have to specify as well what place
 

00:25:08.260 --> 00:25:09.690
you have to specify as well what place
should do with this module when it

00:25:09.690 --> 00:25:09.700
should do with this module when it
 

00:25:09.700 --> 00:25:12.360
should do with this module when it
generates the pre L AP case you can

00:25:12.360 --> 00:25:12.370
generates the pre L AP case you can
 

00:25:12.370 --> 00:25:14.070
generates the pre L AP case you can
choose to fuse that module in the base

00:25:14.070 --> 00:25:14.080
choose to fuse that module in the base
 

00:25:14.080 --> 00:25:16.980
choose to fuse that module in the base
apk or excluded completely and this is

00:25:16.980 --> 00:25:16.990
apk or excluded completely and this is
 

00:25:16.990 --> 00:25:21.450
apk or excluded completely and this is
configured using the fusing tag here's

00:25:21.450 --> 00:25:21.460
configured using the fusing tag here's
 

00:25:21.460 --> 00:25:24.270
configured using the fusing tag here's
an example with our recipe at in

00:25:24.270 --> 00:25:24.280
an example with our recipe at in
 

00:25:24.280 --> 00:25:26.070
an example with our recipe at in
addition to the base module we have two

00:25:26.070 --> 00:25:26.080
addition to the base module we have two
 

00:25:26.080 --> 00:25:28.440
addition to the base module we have two
dynamic features the ad recipe module is

00:25:28.440 --> 00:25:28.450
dynamic features the ad recipe module is
 

00:25:28.450 --> 00:25:30.720
dynamic features the ad recipe module is
marked with fuse equal true while the

00:25:30.720 --> 00:25:30.730
marked with fuse equal true while the
 

00:25:30.730 --> 00:25:32.700
marked with fuse equal true while the
other VR module is marked with fuse

00:25:32.700 --> 00:25:32.710
other VR module is marked with fuse
 

00:25:32.710 --> 00:25:33.480
other VR module is marked with fuse
equals false

00:25:33.480 --> 00:25:33.490
equals false
 

00:25:33.490 --> 00:25:36.060
equals false
and you can see that that play will only

00:25:36.060 --> 00:25:36.070
and you can see that that play will only
 

00:25:36.070 --> 00:25:37.740
and you can see that that play will only
include the address city module in the

00:25:37.740 --> 00:25:37.750
include the address city module in the
 

00:25:37.750 --> 00:25:42.180
include the address city module in the
pre L apk now let's look at the build of

00:25:42.180 --> 00:25:42.190
pre L apk now let's look at the build of
 

00:25:42.190 --> 00:25:45.450
pre L apk now let's look at the build of
Gradle files in the dynamic module you

00:25:45.450 --> 00:25:45.460
Gradle files in the dynamic module you
 

00:25:45.460 --> 00:25:47.580
Gradle files in the dynamic module you
can see a new Gradle plugin being used

00:25:47.580 --> 00:25:47.590
can see a new Gradle plugin being used
 

00:25:47.590 --> 00:25:50.370
can see a new Gradle plugin being used
called come and read dynamic feature you

00:25:50.370 --> 00:25:50.380
called come and read dynamic feature you
 

00:25:50.380 --> 00:25:51.930
called come and read dynamic feature you
also have to add the base module as a

00:25:51.930 --> 00:25:51.940
also have to add the base module as a
 

00:25:51.940 --> 00:25:53.640
also have to add the base module as a
dependency of this dynamic module to

00:25:53.640 --> 00:25:53.650
dependency of this dynamic module to
 

00:25:53.650 --> 00:25:55.410
dependency of this dynamic module to
access functionality from the base

00:25:55.410 --> 00:25:55.420
access functionality from the base
 

00:25:55.420 --> 00:25:58.110
access functionality from the base
module looking at the build Gradle from

00:25:58.110 --> 00:25:58.120
module looking at the build Gradle from
 

00:25:58.120 --> 00:26:00.660
module looking at the build Gradle from
the base module the only change is to

00:26:00.660 --> 00:26:00.670
the base module the only change is to
 

00:26:00.670 --> 00:26:02.760
the base module the only change is to
declare all dynamic modules this is to

00:26:02.760 --> 00:26:02.770
declare all dynamic modules this is to
 

00:26:02.770 --> 00:26:04.740
declare all dynamic modules this is to
instruct Gradle to make the resources

00:26:04.740 --> 00:26:04.750
instruct Gradle to make the resources
 

00:26:04.750 --> 00:26:06.510
instruct Gradle to make the resources
stored in the base module available to

00:26:06.510 --> 00:26:06.520
stored in the base module available to
 

00:26:06.520 --> 00:26:10.350
stored in the base module available to
them now that we've created our

00:26:10.350 --> 00:26:10.360
them now that we've created our
 

00:26:10.360 --> 00:26:12.240
them now that we've created our
on-demand modules let's write the code

00:26:12.240 --> 00:26:12.250
on-demand modules let's write the code
 

00:26:12.250 --> 00:26:14.910
on-demand modules let's write the code
to download them in order to interact

00:26:14.910 --> 00:26:14.920
to download them in order to interact
 

00:26:14.920 --> 00:26:16.530
to download them in order to interact
with the Play Store to request these

00:26:16.530 --> 00:26:16.540
with the Play Store to request these
 

00:26:16.540 --> 00:26:18.660
with the Play Store to request these
on-demand modules we have to use the

00:26:18.660 --> 00:26:18.670
on-demand modules we have to use the
 

00:26:18.670 --> 00:26:21.420
on-demand modules we have to use the
split install API which is part of the

00:26:21.420 --> 00:26:21.430
split install API which is part of the
 

00:26:21.430 --> 00:26:24.270
split install API which is part of the
play core library this is a Java client

00:26:24.270 --> 00:26:24.280
play core library this is a Java client
 

00:26:24.280 --> 00:26:26.100
play core library this is a Java client
library that communicates with the Play

00:26:26.100 --> 00:26:26.110
library that communicates with the Play
 

00:26:26.110 --> 00:26:30.420
library that communicates with the Play
Store via IPC the Play Store IPC then

00:26:30.420 --> 00:26:30.430
Store via IPC the Play Store IPC then
 

00:26:30.430 --> 00:26:33.360
Store via IPC the Play Store IPC then
communicates with Play servers the API

00:26:33.360 --> 00:26:33.370
communicates with Play servers the API
 

00:26:33.370 --> 00:26:35.040
communicates with Play servers the API
is structured using the same task

00:26:35.040 --> 00:26:35.050
is structured using the same task
 

00:26:35.050 --> 00:26:36.570
is structured using the same task
framework that you may be familiar with

00:26:36.570 --> 00:26:36.580
framework that you may be familiar with
 

00:26:36.580 --> 00:26:38.640
framework that you may be familiar with
from Google Play services and firebase

00:26:38.640 --> 00:26:38.650
from Google Play services and firebase
 

00:26:38.650 --> 00:26:41.370
from Google Play services and firebase
api's installation of splits is

00:26:41.370 --> 00:26:41.380
api's installation of splits is
 

00:26:41.380 --> 00:26:43.970
api's installation of splits is
coordinated by the split install manager

00:26:43.970 --> 00:26:43.980
coordinated by the split install manager
 

00:26:43.980 --> 00:26:45.890
coordinated by the split install manager
you construct a request with all the

00:26:45.890 --> 00:26:45.900
you construct a request with all the
 

00:26:45.900 --> 00:26:47.210
you construct a request with all the
modules that you wish to download and

00:26:47.210 --> 00:26:47.220
modules that you wish to download and
 

00:26:47.220 --> 00:26:49.760
modules that you wish to download and
then invoke start install to trigger the

00:26:49.760 --> 00:26:49.770
then invoke start install to trigger the
 

00:26:49.770 --> 00:26:51.590
then invoke start install to trigger the
Play Store to download and install the

00:26:51.590 --> 00:26:51.600
Play Store to download and install the
 

00:26:51.600 --> 00:26:53.150
Play Store to download and install the
splits required for the requested

00:26:53.150 --> 00:26:53.160
splits required for the requested
 

00:26:53.160 --> 00:26:57.230
splits required for the requested
modules for large modules you'll need to

00:26:57.230 --> 00:26:57.240
modules for large modules you'll need to
 

00:26:57.240 --> 00:26:59.600
modules for large modules you'll need to
obtain the user confirmation prior to

00:26:59.600 --> 00:26:59.610
obtain the user confirmation prior to
 

00:26:59.610 --> 00:27:02.659
obtain the user confirmation prior to
the download via their split install API

00:27:02.659 --> 00:27:02.669
the download via their split install API
 

00:27:02.669 --> 00:27:05.000
the download via their split install API
you'll need to do this whenever an app

00:27:05.000 --> 00:27:05.010
you'll need to do this whenever an app
 

00:27:05.010 --> 00:27:06.860
you'll need to do this whenever an app
requests more than 10 megabytes of

00:27:06.860 --> 00:27:06.870
requests more than 10 megabytes of
 

00:27:06.870 --> 00:27:10.340
requests more than 10 megabytes of
on-demand modules to be downloaded the

00:27:10.340 --> 00:27:10.350
on-demand modules to be downloaded the
 

00:27:10.350 --> 00:27:12.230
on-demand modules to be downloaded the
API allows you to listen for updates

00:27:12.230 --> 00:27:12.240
API allows you to listen for updates
 

00:27:12.240 --> 00:27:14.000
API allows you to listen for updates
throughout the download and install

00:27:14.000 --> 00:27:14.010
throughout the download and install
 

00:27:14.010 --> 00:27:17.270
throughout the download and install
process and display this progress to

00:27:17.270 --> 00:27:17.280
process and display this progress to
 

00:27:17.280 --> 00:27:18.850
process and display this progress to
allow to display this progress to users

00:27:18.850 --> 00:27:18.860
allow to display this progress to users
 

00:27:18.860 --> 00:27:22.060
allow to display this progress to users
here we show the download progress bar

00:27:22.060 --> 00:27:22.070
here we show the download progress bar
 

00:27:22.070 --> 00:27:25.580
here we show the download progress bar
an alternative option for installing

00:27:25.580 --> 00:27:25.590
an alternative option for installing
 

00:27:25.590 --> 00:27:27.560
an alternative option for installing
modules that aren't required immediately

00:27:27.560 --> 00:27:27.570
modules that aren't required immediately
 

00:27:27.570 --> 00:27:30.460
modules that aren't required immediately
is to use the deferred installation API

00:27:30.460 --> 00:27:30.470
is to use the deferred installation API
 

00:27:30.470 --> 00:27:32.990
is to use the deferred installation API
these will be installed at a convenient

00:27:32.990 --> 00:27:33.000
these will be installed at a convenient
 

00:27:33.000 --> 00:27:35.270
these will be installed at a convenient
convenient time for the user generally

00:27:35.270 --> 00:27:35.280
convenient time for the user generally
 

00:27:35.280 --> 00:27:36.860
convenient time for the user generally
when they aren't using the device and

00:27:36.860 --> 00:27:36.870
when they aren't using the device and
 

00:27:36.870 --> 00:27:40.010
when they aren't using the device and
are on Wi-Fi and charging and because of

00:27:40.010 --> 00:27:40.020
are on Wi-Fi and charging and because of
 

00:27:40.020 --> 00:27:41.810
are on Wi-Fi and charging and because of
this we allow you to install larger

00:27:41.810 --> 00:27:41.820
this we allow you to install larger
 

00:27:41.820 --> 00:27:44.690
this we allow you to install larger
modules up to 100 megabytes without

00:27:44.690 --> 00:27:44.700
modules up to 100 megabytes without
 

00:27:44.700 --> 00:27:48.740
modules up to 100 megabytes without
requiring user confirmation the split

00:27:48.740 --> 00:27:48.750
requiring user confirmation the split
 

00:27:48.750 --> 00:27:50.480
requiring user confirmation the split
install API also allows you to manage

00:27:50.480 --> 00:27:50.490
install API also allows you to manage
 

00:27:50.490 --> 00:27:52.880
install API also allows you to manage
your on demand modules you can see which

00:27:52.880 --> 00:27:52.890
your on demand modules you can see which
 

00:27:52.890 --> 00:27:54.860
your on demand modules you can see which
modules are installed and you can choose

00:27:54.860 --> 00:27:54.870
modules are installed and you can choose
 

00:27:54.870 --> 00:27:56.750
modules are installed and you can choose
to uninstall modules that are no longer

00:27:56.750 --> 00:27:56.760
to uninstall modules that are no longer
 

00:27:56.760 --> 00:27:59.090
to uninstall modules that are no longer
required by the app this will free up

00:27:59.090 --> 00:27:59.100
required by the app this will free up
 

00:27:59.100 --> 00:28:03.919
required by the app this will free up
reaches disk space for your users so

00:28:03.919 --> 00:28:03.929
reaches disk space for your users so
 

00:28:03.929 --> 00:28:05.960
reaches disk space for your users so
when installing an on-demand module on

00:28:05.960 --> 00:28:05.970
when installing an on-demand module on
 

00:28:05.970 --> 00:28:08.810
when installing an on-demand module on
N+ devices the app does not need to be

00:28:08.810 --> 00:28:08.820
N+ devices the app does not need to be
 

00:28:08.820 --> 00:28:11.060
N+ devices the app does not need to be
restarted code is available immediately

00:28:11.060 --> 00:28:11.070
restarted code is available immediately
 

00:28:11.070 --> 00:28:13.159
restarted code is available immediately
and new resources and assets are

00:28:13.159 --> 00:28:13.169
and new resources and assets are
 

00:28:13.169 --> 00:28:14.990
and new resources and assets are
available once you refresh the context

00:28:14.990 --> 00:28:15.000
available once you refresh the context
 

00:28:15.000 --> 00:28:19.430
available once you refresh the context
object however on Android L&amp;M installing

00:28:19.430 --> 00:28:19.440
object however on Android L&amp;M installing
 

00:28:19.440 --> 00:28:21.560
object however on Android L&amp;M installing
splits requires the app to fully restart

00:28:21.560 --> 00:28:21.570
splits requires the app to fully restart
 

00:28:21.570 --> 00:28:25.070
splits requires the app to fully restart
to avoid this we include a split compact

00:28:25.070 --> 00:28:25.080
to avoid this we include a split compact
 

00:28:25.080 --> 00:28:27.740
to avoid this we include a split compact
library which emulates the installation

00:28:27.740 --> 00:28:27.750
library which emulates the installation
 

00:28:27.750 --> 00:28:30.650
library which emulates the installation
of splits on L and M until the app goes

00:28:30.650 --> 00:28:30.660
of splits on L and M until the app goes
 

00:28:30.660 --> 00:28:32.360
of splits on L and M until the app goes
into the background and we can properly

00:28:32.360 --> 00:28:32.370
into the background and we can properly
 

00:28:32.370 --> 00:28:34.909
into the background and we can properly
install it if you are familiar with the

00:28:34.909 --> 00:28:34.919
install it if you are familiar with the
 

00:28:34.919 --> 00:28:36.980
install it if you are familiar with the
multi decks support library you will set

00:28:36.980 --> 00:28:36.990
multi decks support library you will set
 

00:28:36.990 --> 00:28:38.720
multi decks support library you will set
up split compact in a very very similar

00:28:38.720 --> 00:28:38.730
up split compact in a very very similar
 

00:28:38.730 --> 00:28:42.200
up split compact in a very very similar
way let's have a look you have three

00:28:42.200 --> 00:28:42.210
way let's have a look you have three
 

00:28:42.210 --> 00:28:44.450
way let's have a look you have three
options to install split compacts you

00:28:44.450 --> 00:28:44.460
options to install split compacts you
 

00:28:44.460 --> 00:28:46.400
options to install split compacts you
can use the split compat application as

00:28:46.400 --> 00:28:46.410
can use the split compat application as
 

00:28:46.410 --> 00:28:48.710
can use the split compat application as
your default application or if you

00:28:48.710 --> 00:28:48.720
your default application or if you
 

00:28:48.720 --> 00:28:50.000
your default application or if you
already have an application you can

00:28:50.000 --> 00:28:50.010
already have an application you can
 

00:28:50.010 --> 00:28:52.669
already have an application you can
simply extend it and if none of these

00:28:52.669 --> 00:28:52.679
simply extend it and if none of these
 

00:28:52.679 --> 00:28:55.159
simply extend it and if none of these
options suits you then you can still

00:28:55.159 --> 00:28:55.169
options suits you then you can still
 

00:28:55.169 --> 00:28:56.930
options suits you then you can still
also choose to override the attached

00:28:56.930 --> 00:28:56.940
also choose to override the attached
 

00:28:56.940 --> 00:28:57.930
also choose to override the attached
based context in you

00:28:57.930 --> 00:28:57.940
based context in you
 

00:28:57.940 --> 00:29:00.119
based context in you
application and invoke split competitor

00:29:00.119 --> 00:29:00.129
application and invoke split competitor
 

00:29:00.129 --> 00:29:04.220
application and invoke split competitor
install now let's talk about versioning

00:29:04.220 --> 00:29:04.230
install now let's talk about versioning
 

00:29:04.230 --> 00:29:06.749
install now let's talk about versioning
when you release an update to your app

00:29:06.749 --> 00:29:06.759
when you release an update to your app
 

00:29:06.759 --> 00:29:09.480
when you release an update to your app
play will automatically update both the

00:29:09.480 --> 00:29:09.490
play will automatically update both the
 

00:29:09.490 --> 00:29:11.340
play will automatically update both the
base module and any unda main mode

00:29:11.340 --> 00:29:11.350
base module and any unda main mode
 

00:29:11.350 --> 00:29:13.649
base module and any unda main mode
jewels that are already installed so the

00:29:13.649 --> 00:29:13.659
jewels that are already installed so the
 

00:29:13.659 --> 00:29:16.080
jewels that are already installed so the
version of your modules are always in

00:29:16.080 --> 00:29:16.090
version of your modules are always in
 

00:29:16.090 --> 00:29:19.110
version of your modules are always in
sync partners tell us this is something

00:29:19.110 --> 00:29:19.120
sync partners tell us this is something
 

00:29:19.120 --> 00:29:24.149
sync partners tell us this is something
they really like about this model let's

00:29:24.149 --> 00:29:24.159
they really like about this model let's
 

00:29:24.159 --> 00:29:25.889
they really like about this model let's
now talk about the final step here

00:29:25.889 --> 00:29:25.899
now talk about the final step here
 

00:29:25.899 --> 00:29:28.169
now talk about the final step here
helping users update to the latest and

00:29:28.169 --> 00:29:28.179
helping users update to the latest and
 

00:29:28.179 --> 00:29:30.749
helping users update to the latest and
greatest version of your app you know

00:29:30.749 --> 00:29:30.759
greatest version of your app you know
 

00:29:30.759 --> 00:29:32.310
greatest version of your app you know
that play offers also update

00:29:32.310 --> 00:29:32.320
that play offers also update
 

00:29:32.320 --> 00:29:34.470
that play offers also update
functionality and many users do have

00:29:34.470 --> 00:29:34.480
functionality and many users do have
 

00:29:34.480 --> 00:29:36.749
functionality and many users do have
auto update turned on but not all of

00:29:36.749 --> 00:29:36.759
auto update turned on but not all of
 

00:29:36.759 --> 00:29:39.810
auto update turned on but not all of
them and in some markets it's not

00:29:39.810 --> 00:29:39.820
them and in some markets it's not
 

00:29:39.820 --> 00:29:41.519
them and in some markets it's not
uncommon for users to have Auto updates

00:29:41.519 --> 00:29:41.529
uncommon for users to have Auto updates
 

00:29:41.529 --> 00:29:44.100
uncommon for users to have Auto updates
turned on but for their device not so

00:29:44.100 --> 00:29:44.110
turned on but for their device not so
 

00:29:44.110 --> 00:29:45.570
turned on but for their device not so
you meet the requirements for the auto

00:29:45.570 --> 00:29:45.580
you meet the requirements for the auto
 

00:29:45.580 --> 00:29:47.340
you meet the requirements for the auto
update to take place for example they

00:29:47.340 --> 00:29:47.350
update to take place for example they
 

00:29:47.350 --> 00:29:51.779
update to take place for example they
may not connect to Wi-Fi I'm happy to

00:29:51.779 --> 00:29:51.789
may not connect to Wi-Fi I'm happy to
 

00:29:51.789 --> 00:29:53.310
may not connect to Wi-Fi I'm happy to
share that we're launching a new API

00:29:53.310 --> 00:29:53.320
share that we're launching a new API
 

00:29:53.320 --> 00:29:55.379
share that we're launching a new API
that helps you prompt users to update

00:29:55.379 --> 00:29:55.389
that helps you prompt users to update
 

00:29:55.389 --> 00:29:59.970
that helps you prompt users to update
without ever leaving your app you can

00:29:59.970 --> 00:29:59.980
without ever leaving your app you can
 

00:29:59.980 --> 00:30:02.129
without ever leaving your app you can
call this API to determine first if

00:30:02.129 --> 00:30:02.139
call this API to determine first if
 

00:30:02.139 --> 00:30:03.960
call this API to determine first if
there's an update available and then if

00:30:03.960 --> 00:30:03.970
there's an update available and then if
 

00:30:03.970 --> 00:30:06.299
there's an update available and then if
so you can show a prompt to your users

00:30:06.299 --> 00:30:06.309
so you can show a prompt to your users
 

00:30:06.309 --> 00:30:09.659
so you can show a prompt to your users
so that they can update the app in this

00:30:09.659 --> 00:30:09.669
so that they can update the app in this
 

00:30:09.669 --> 00:30:11.639
so that they can update the app in this
example the flow is designed for

00:30:11.639 --> 00:30:11.649
example the flow is designed for
 

00:30:11.649 --> 00:30:13.830
example the flow is designed for
immediate critical use cases such as

00:30:13.830 --> 00:30:13.840
immediate critical use cases such as
 

00:30:13.840 --> 00:30:16.519
immediate critical use cases such as
user privacy or revenue affecting bugs

00:30:16.519 --> 00:30:16.529
user privacy or revenue affecting bugs
 

00:30:16.529 --> 00:30:19.590
user privacy or revenue affecting bugs
it's a full screen experience where the

00:30:19.590 --> 00:30:19.600
it's a full screen experience where the
 

00:30:19.600 --> 00:30:21.029
it's a full screen experience where the
user is expected to wait for the update

00:30:21.029 --> 00:30:21.039
user is expected to wait for the update
 

00:30:21.039 --> 00:30:23.940
user is expected to wait for the update
to be applied it's an easy one for you

00:30:23.940 --> 00:30:23.950
to be applied it's an easy one for you
 

00:30:23.950 --> 00:30:26.100
to be applied it's an easy one for you
the developer to implement because we

00:30:26.100 --> 00:30:26.110
the developer to implement because we
 

00:30:26.110 --> 00:30:28.820
the developer to implement because we
take care of restarting the app for you

00:30:28.820 --> 00:30:28.830
take care of restarting the app for you
 

00:30:28.830 --> 00:30:31.710
take care of restarting the app for you
some of you have built similar flows for

00:30:31.710 --> 00:30:31.720
some of you have built similar flows for
 

00:30:31.720 --> 00:30:33.629
some of you have built similar flows for
yourselves but this is a standardized

00:30:33.629 --> 00:30:33.639
yourselves but this is a standardized
 

00:30:33.639 --> 00:30:35.159
yourselves but this is a standardized
method that you can use with very little

00:30:35.159 --> 00:30:35.169
method that you can use with very little
 

00:30:35.169 --> 00:30:40.110
method that you can use with very little
effort instead of that immediate update

00:30:40.110 --> 00:30:40.120
effort instead of that immediate update
 

00:30:40.120 --> 00:30:42.419
effort instead of that immediate update
you can also put together a flexible

00:30:42.419 --> 00:30:42.429
you can also put together a flexible
 

00:30:42.429 --> 00:30:44.519
you can also put together a flexible
update which does not have to be applied

00:30:44.519 --> 00:30:44.529
update which does not have to be applied
 

00:30:44.529 --> 00:30:47.100
update which does not have to be applied
straight away the really cool thing

00:30:47.100 --> 00:30:47.110
straight away the really cool thing
 

00:30:47.110 --> 00:30:48.749
straight away the really cool thing
about this API is that you can

00:30:48.749 --> 00:30:48.759
about this API is that you can
 

00:30:48.759 --> 00:30:51.389
about this API is that you can
completely customize the update flow so

00:30:51.389 --> 00:30:51.399
completely customize the update flow so
 

00:30:51.399 --> 00:30:53.360
completely customize the update flow so
that it feels part like part of your app

00:30:53.360 --> 00:30:53.370
that it feels part like part of your app
 

00:30:53.370 --> 00:30:56.279
that it feels part like part of your app
for example you may choose to nudge

00:30:56.279 --> 00:30:56.289
for example you may choose to nudge
 

00:30:56.289 --> 00:30:58.710
for example you may choose to nudge
users to update with an inline flow like

00:30:58.710 --> 00:30:58.720
users to update with an inline flow like
 

00:30:58.720 --> 00:31:01.310
users to update with an inline flow like
Google Chrome is doing in this example

00:31:01.310 --> 00:31:01.320
Google Chrome is doing in this example
 

00:31:01.320 --> 00:31:04.110
Google Chrome is doing in this example
once the user accepts the update the

00:31:04.110 --> 00:31:04.120
once the user accepts the update the
 

00:31:04.120 --> 00:31:05.820
once the user accepts the update the
download happens in the background so

00:31:05.820 --> 00:31:05.830
download happens in the background so
 

00:31:05.830 --> 00:31:08.639
download happens in the background so
the user can keep using the app and once

00:31:08.639 --> 00:31:08.649
the user can keep using the app and once
 

00:31:08.649 --> 00:31:10.859
the user can keep using the app and once
the update is complete it's up to you

00:31:10.859 --> 00:31:10.869
the update is complete it's up to you
 

00:31:10.869 --> 00:31:11.640
the update is complete it's up to you
and your app

00:31:11.640 --> 00:31:11.650
and your app
 

00:31:11.650 --> 00:31:13.410
and your app
to decide how to prompt the user to

00:31:13.410 --> 00:31:13.420
to decide how to prompt the user to
 

00:31:13.420 --> 00:31:15.720
to decide how to prompt the user to
restart or you can simply wait until the

00:31:15.720 --> 00:31:15.730
restart or you can simply wait until the
 

00:31:15.730 --> 00:31:17.250
restart or you can simply wait until the
app goes into the background always

00:31:17.250 --> 00:31:17.260
app goes into the background always
 

00:31:17.260 --> 00:31:19.860
app goes into the background always
closed by the user Google Chrome is

00:31:19.860 --> 00:31:19.870
closed by the user Google Chrome is
 

00:31:19.870 --> 00:31:22.200
closed by the user Google Chrome is
testing this now and we're inviting

00:31:22.200 --> 00:31:22.210
testing this now and we're inviting
 

00:31:22.210 --> 00:31:24.090
testing this now and we're inviting
early access partners to start testing

00:31:24.090 --> 00:31:24.100
early access partners to start testing
 

00:31:24.100 --> 00:31:25.920
early access partners to start testing
thus from testing this with us as well

00:31:25.920 --> 00:31:25.930
thus from testing this with us as well
 

00:31:25.930 --> 00:31:27.930
thus from testing this with us as well
talk to your BD manager if you're

00:31:27.930 --> 00:31:27.940
talk to your BD manager if you're
 

00:31:27.940 --> 00:31:30.960
talk to your BD manager if you're
interested let's take a look at the code

00:31:30.960 --> 00:31:30.970
interested let's take a look at the code
 

00:31:30.970 --> 00:31:33.090
interested let's take a look at the code
that allows that flexible you know in

00:31:33.090 --> 00:31:33.100
that allows that flexible you know in
 

00:31:33.100 --> 00:31:36.090
that allows that flexible you know in
app update to work first you can request

00:31:36.090 --> 00:31:36.100
app update to work first you can request
 

00:31:36.100 --> 00:31:38.270
app update to work first you can request
an instance of app update manager and

00:31:38.270 --> 00:31:38.280
an instance of app update manager and
 

00:31:38.280 --> 00:31:42.180
an instance of app update manager and
then request the app update info this

00:31:42.180 --> 00:31:42.190
then request the app update info this
 

00:31:42.190 --> 00:31:44.040
then request the app update info this
result is going to contain the update

00:31:44.040 --> 00:31:44.050
result is going to contain the update
 

00:31:44.050 --> 00:31:46.590
result is going to contain the update
availability status if an update is

00:31:46.590 --> 00:31:46.600
availability status if an update is
 

00:31:46.600 --> 00:31:49.530
availability status if an update is
available and the update is allowed the

00:31:49.530 --> 00:31:49.540
available and the update is allowed the
 

00:31:49.540 --> 00:31:52.200
available and the update is allowed the
return up app update info objects also

00:31:52.200 --> 00:31:52.210
return up app update info objects also
 

00:31:52.210 --> 00:31:56.760
return up app update info objects also
contains an intent to start the flow if

00:31:56.760 --> 00:31:56.770
contains an intent to start the flow if
 

00:31:56.770 --> 00:31:58.470
contains an intent to start the flow if
the app is allowed to start then you

00:31:58.470 --> 00:31:58.480
the app is allowed to start then you
 

00:31:58.480 --> 00:32:00.270
the app is allowed to start then you
extract this pending intent and you

00:32:00.270 --> 00:32:00.280
extract this pending intent and you
 

00:32:00.280 --> 00:32:01.890
extract this pending intent and you
start it this will start the download

00:32:01.890 --> 00:32:01.900
start it this will start the download
 

00:32:01.900 --> 00:32:06.570
start it this will start the download
and installation you can monitor the

00:32:06.570 --> 00:32:06.580
and installation you can monitor the
 

00:32:06.580 --> 00:32:09.120
and installation you can monitor the
state of an update by registering a

00:32:09.120 --> 00:32:09.130
state of an update by registering a
 

00:32:09.130 --> 00:32:12.480
state of an update by registering a
listener for status updates when the

00:32:12.480 --> 00:32:12.490
listener for status updates when the
 

00:32:12.490 --> 00:32:14.280
listener for status updates when the
download is complete you can in choose

00:32:14.280 --> 00:32:14.290
download is complete you can in choose
 

00:32:14.290 --> 00:32:16.380
download is complete you can in choose
again to install it directly or defer

00:32:16.380 --> 00:32:16.390
again to install it directly or defer
 

00:32:16.390 --> 00:32:17.880
again to install it directly or defer
the installation to a more convenient

00:32:17.880 --> 00:32:17.890
the installation to a more convenient
 

00:32:17.890 --> 00:32:21.570
the installation to a more convenient
time for example using a snack bar the

00:32:21.570 --> 00:32:21.580
time for example using a snack bar the
 

00:32:21.580 --> 00:32:23.880
time for example using a snack bar the
restart happens when complete update is

00:32:23.880 --> 00:32:23.890
restart happens when complete update is
 

00:32:23.890 --> 00:32:29.790
restart happens when complete update is
called so to recap this new API ensuring

00:32:29.790 --> 00:32:29.800
called so to recap this new API ensuring
 

00:32:29.800 --> 00:32:31.620
called so to recap this new API ensuring
your users get the latest update is

00:32:31.620 --> 00:32:31.630
your users get the latest update is
 

00:32:31.630 --> 00:32:33.330
your users get the latest update is
important and you can make that happen

00:32:33.330 --> 00:32:33.340
important and you can make that happen
 

00:32:33.340 --> 00:32:34.770
important and you can make that happen
by following some of these best

00:32:34.770 --> 00:32:34.780
by following some of these best
 

00:32:34.780 --> 00:32:37.200
by following some of these best
practices up here on the screen and also

00:32:37.200 --> 00:32:37.210
practices up here on the screen and also
 

00:32:37.210 --> 00:32:38.910
practices up here on the screen and also
by integrating with our brand new in app

00:32:38.910 --> 00:32:38.920
by integrating with our brand new in app
 

00:32:38.920 --> 00:32:42.300
by integrating with our brand new in app
updates API the API is available for any

00:32:42.300 --> 00:32:42.310
updates API the API is available for any
 

00:32:42.310 --> 00:32:44.040
updates API the API is available for any
app and so you can get started with it

00:32:44.040 --> 00:32:44.050
app and so you can get started with it
 

00:32:44.050 --> 00:32:45.870
app and so you can get started with it
in parallel to switching to the Android

00:32:45.870 --> 00:32:45.880
in parallel to switching to the Android
 

00:32:45.880 --> 00:32:50.130
in parallel to switching to the Android
app bundle and that's it we've now

00:32:50.130 --> 00:32:50.140
app bundle and that's it we've now
 

00:32:50.140 --> 00:32:52.170
app bundle and that's it we've now
covered how to make your app smaller and

00:32:52.170 --> 00:32:52.180
covered how to make your app smaller and
 

00:32:52.180 --> 00:32:53.700
covered how to make your app smaller and
create dynamic features using the

00:32:53.700 --> 00:32:53.710
create dynamic features using the
 

00:32:53.710 --> 00:32:55.740
create dynamic features using the
Android app bundle and how you can

00:32:55.740 --> 00:32:55.750
Android app bundle and how you can
 

00:32:55.750 --> 00:32:57.330
Android app bundle and how you can
ensure that your users stay on the

00:32:57.330 --> 00:32:57.340
ensure that your users stay on the
 

00:32:57.340 --> 00:32:59.010
ensure that your users stay on the
latest version of your app using the new

00:32:59.010 --> 00:32:59.020
latest version of your app using the new
 

00:32:59.020 --> 00:33:01.890
latest version of your app using the new
in-app update API if you want to come

00:33:01.890 --> 00:33:01.900
in-app update API if you want to come
 

00:33:01.900 --> 00:33:03.630
in-app update API if you want to come
and chat about any of this you can find

00:33:03.630 --> 00:33:03.640
and chat about any of this you can find
 

00:33:03.640 --> 00:33:05.520
and chat about any of this you can find
us at the office hours or the demos on

00:33:05.520 --> 00:33:05.530
us at the office hours or the demos on
 

00:33:05.530 --> 00:33:07.290
us at the office hours or the demos on
the Google Play stand today and tomorrow

00:33:07.290 --> 00:33:07.300
the Google Play stand today and tomorrow
 

00:33:07.300 --> 00:33:09.300
the Google Play stand today and tomorrow
also if you want to share about what

00:33:09.300 --> 00:33:09.310
also if you want to share about what
 

00:33:09.310 --> 00:33:11.130
also if you want to share about what
we've talked today with your team the

00:33:11.130 --> 00:33:11.140
we've talked today with your team the
 

00:33:11.140 --> 00:33:12.720
we've talked today with your team the
medium post at this link is a great

00:33:12.720 --> 00:33:12.730
medium post at this link is a great
 

00:33:12.730 --> 00:33:13.530
medium post at this link is a great
place to start

00:33:13.530 --> 00:33:13.540
place to start
 

00:33:13.540 --> 00:33:16.870
place to start
enjoy the rest of your day thank you

00:33:16.870 --> 00:33:16.880
enjoy the rest of your day thank you
 

00:33:16.880 --> 00:33:32.949
enjoy the rest of your day thank you
[Music]

