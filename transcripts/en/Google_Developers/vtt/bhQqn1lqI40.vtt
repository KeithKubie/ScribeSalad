WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:03:00.890
[MUSIC PLAYING]

00:03:10.314 --> 00:03:11.760
TIM BRAY: Hello, there.

00:03:11.760 --> 00:03:13.740
Happy Valentine's
Day, everybody.

00:03:13.740 --> 00:03:16.730
Welcome to Identity
Hoodoo Voodoo on

00:03:16.730 --> 00:03:18.320
Google Developers Live.

00:03:18.320 --> 00:03:18.940
I'm Tim Bray.

00:03:18.940 --> 00:03:20.630
I'm with the identity group
here at Google.

00:03:20.630 --> 00:03:23.840
And today with me, I have Naveen
Agarwal, who's a tech

00:03:23.840 --> 00:03:26.040
lead, manager, something
important here in the group.

00:03:26.040 --> 00:03:28.760
And he's been doing identity
stuff for at least 100 years.

00:03:28.760 --> 00:03:30.445
Naveen, give us some
highlights.

00:03:30.445 --> 00:03:32.560
NAVEEN AGARWAL: 100 years.

00:03:32.560 --> 00:03:35.690
Well, if you include all the
team members and so on,

00:03:35.690 --> 00:03:38.780
definitely we've been doing
this for 100 years.

00:03:38.780 --> 00:03:40.810
So I've been at Google
for two years.

00:03:40.810 --> 00:03:46.640
Before that, roughly for nine
years, I was managing the

00:03:46.640 --> 00:03:52.310
identity team at Yahoo!, where
we did OpenID launch, a lot of

00:03:52.310 --> 00:03:55.300
things which were completely
unknown, browser-based auth

00:03:55.300 --> 00:03:59.500
and OAuth 1.0 extension, for
example, which was Yahoo's

00:03:59.500 --> 00:04:02.750
extension, which essentially
became OAuth 2.0 for the

00:04:02.750 --> 00:04:05.270
bearer flows, and so on.

00:04:05.270 --> 00:04:09.610
On Google side, in the last two
years, we've been making

00:04:09.610 --> 00:04:12.260
things much, much easier, trying
to integrate seamlessly

00:04:12.260 --> 00:04:17.160
into different platforms and
making the experience overall

00:04:17.160 --> 00:04:21.470
much easier, and make things
better for our users and allow

00:04:21.470 --> 00:04:24.165
them to share and do what
they want to do.

00:04:24.165 --> 00:04:27.250
TIM BRAY: So increasingly,
a lot of our users

00:04:27.250 --> 00:04:28.160
are on mobile devices.

00:04:28.160 --> 00:04:31.000
And that's what I want us
to talk about today.

00:04:31.000 --> 00:04:33.320
Mobile devices are super
important, because in lots of

00:04:33.320 --> 00:04:35.220
parts of the world, that's the
only way onto the internet.

00:04:35.220 --> 00:04:37.530
And even in this part of the
world, an increasing

00:04:37.530 --> 00:04:39.290
proportion of time is
on mobile devices.

00:04:39.290 --> 00:04:41.090
And passwords already suck.

00:04:41.090 --> 00:04:44.050
And on mobile devices, the whole
identity thing can be

00:04:44.050 --> 00:04:45.330
very painful.

00:04:45.330 --> 00:04:48.042
So what can we tell developers
right now today?

00:04:48.042 --> 00:04:51.520
NAVEEN AGARWAL: I think
you're right.

00:04:51.520 --> 00:04:56.740
We understand the identity
issues are not that easy on

00:04:56.740 --> 00:04:58.300
the mobile devices.

00:04:58.300 --> 00:05:01.190
Almost all the flows which have
been developed, they were

00:05:01.190 --> 00:05:02.160
based on the browser.

00:05:02.160 --> 00:05:05.280
They were assuming that the
user was in a browser, the

00:05:05.280 --> 00:05:08.060
bigger approval pages,
and so on.

00:05:08.060 --> 00:05:10.350
So we are trying to make the
experience much, much better.

00:05:10.350 --> 00:05:12.580
And we have actually been
able to do a lot

00:05:12.580 --> 00:05:14.370
on the Android side.

00:05:14.370 --> 00:05:16.240
And you actually log in once.

00:05:16.240 --> 00:05:19.290
And you don't really have to
enter password a second time.

00:05:19.290 --> 00:05:23.700
It's very rare, even, that you
have to enter a password.

00:05:23.700 --> 00:05:27.020
And we have found it's much
easier to do all these,

00:05:27.020 --> 00:05:29.670
because there are different
security properties.

00:05:29.670 --> 00:05:32.840
Users hold their phones
next to them.

00:05:32.840 --> 00:05:34.780
You're not sharing
a phone a lot.

00:05:34.780 --> 00:05:37.250
And so there are some nicer
things which come with the

00:05:37.250 --> 00:05:38.800
phone, so you can actually
log the user.

00:05:38.800 --> 00:05:40.810
And they have an expectation.

00:05:40.810 --> 00:05:42.550
And they don't want
to sign out.

00:05:42.550 --> 00:05:44.840
In the desktop, people
do sign out.

00:05:44.840 --> 00:05:47.950
And again, the protocols were
written assuming the browser.

00:05:47.950 --> 00:05:52.975
So they do not really fall
nicely into the Android and

00:05:52.975 --> 00:05:55.150
the iOS operating systems.

00:05:55.150 --> 00:05:58.250
But we have been making
nicer changes.

00:05:58.250 --> 00:06:01.420
And in Android, if you look at
the OAuth 2.0 implementation

00:06:01.420 --> 00:06:03.870
we have, it has nothing
about OAuth 2.0.

00:06:03.870 --> 00:06:05.490
Developer doesn't have to
understand OAuth 2.0.

00:06:05.490 --> 00:06:08.300
You just make a call to the
[INAUDIBLE], say, give me a

00:06:08.300 --> 00:06:11.480
token for these codes,
and you get a token.

00:06:11.480 --> 00:06:12.460
And you can use it.

00:06:12.460 --> 00:06:13.910
TIM BRAY: So that's
the good news.

00:06:13.910 --> 00:06:16.020
But there's the other
operating system.

00:06:16.020 --> 00:06:17.490
And you mentioned it.

00:06:17.490 --> 00:06:21.015
Many of our folks use Apples,
use iPhones, and

00:06:21.015 --> 00:06:22.250
iPads, and so on.

00:06:22.250 --> 00:06:24.520
And we're still struggling a
little bit harder on there.

00:06:24.520 --> 00:06:28.500
In fact, I know people who have
iOS devices complain at

00:06:28.500 --> 00:06:31.590
me about, specifically, the
Google apps and having to sign

00:06:31.590 --> 00:06:32.490
in all the time.

00:06:32.490 --> 00:06:34.820
So what are we doing
about that?

00:06:34.820 --> 00:06:41.910
NAVEEN AGARWAL: I think it
is hard given that we--

00:06:41.910 --> 00:06:45.280
it requires support from
the operating system.

00:06:45.280 --> 00:06:49.630
All of our apps require user to
sign in, if you basically

00:06:49.630 --> 00:06:51.070
have personalized experience.

00:06:51.070 --> 00:06:53.490
And essentially, you have to
enter ID and password each and

00:06:53.490 --> 00:06:55.820
every app, which is really
painful for a user.

00:06:55.820 --> 00:06:59.460
And imagine if you are
a two-factor user.

00:06:59.460 --> 00:07:01.700
You have to enter ID,
password, and an

00:07:01.700 --> 00:07:03.200
OTP in every app.

00:07:03.200 --> 00:07:05.060
TIM BRAY: And you should
be a two-factor user.

00:07:05.060 --> 00:07:06.170
If you're not, get on that.

00:07:06.170 --> 00:07:06.430
Sorry, go on.

00:07:06.430 --> 00:07:09.490
NAVEEN AGARWAL: Yes, I think
that's a very good point.

00:07:09.490 --> 00:07:11.720
There is no reason-- if you have
anything valuable in your

00:07:11.720 --> 00:07:14.930
account, any email coming in,
you should actually sign up

00:07:14.930 --> 00:07:16.770
for two-factor.

00:07:16.770 --> 00:07:19.290
But given that, that's
basically very hard.

00:07:19.290 --> 00:07:21.660
We definitely want to have the
single sign-on work fairly

00:07:21.660 --> 00:07:23.240
easily between all the apps.

00:07:23.240 --> 00:07:24.540
And we are working
on that part.

00:07:24.540 --> 00:07:27.540
So stayed tuned.

00:07:27.540 --> 00:07:30.450
But I think that developers have
even a harder time, even

00:07:30.450 --> 00:07:31.630
on the iOS.

00:07:31.630 --> 00:07:34.520
So we have been actually looking
at some of the options

00:07:34.520 --> 00:07:37.120
to make life easier for
developers to get OAuth token,

00:07:37.120 --> 00:07:40.720
given that on iOS, you don't
have background apps.

00:07:40.720 --> 00:07:42.650
You cannot talk to them
in the background.

00:07:42.650 --> 00:07:45.310
So it's much, much harder,
basically, to do.

00:07:45.310 --> 00:07:47.770
TIM BRAY: So have we got
anything specific we can talk

00:07:47.770 --> 00:07:48.390
about right now?

00:07:48.390 --> 00:07:49.700
NAVEEN AGARWAL: Right.

00:07:49.700 --> 00:07:54.490
So on the iOS, currently, there
are a couple of options

00:07:54.490 --> 00:07:57.320
if you want to get an OAuth
token for Google APIs.

00:07:57.320 --> 00:08:04.930
One, which is the Google+
SDK, and which is

00:08:04.930 --> 00:08:06.200
actually very easy--

00:08:06.200 --> 00:08:08.960
one of the best parts is if the
user is signed into the

00:08:08.960 --> 00:08:11.220
Google+ App, you ask
for a token.

00:08:11.220 --> 00:08:14.530
He's going to see an approval
page, no password entry.

00:08:14.530 --> 00:08:17.440
And user says yes, you
get a code back.

00:08:17.440 --> 00:08:18.960
And basically, it's
a permanent code.

00:08:18.960 --> 00:08:19.940
You can store it.

00:08:19.940 --> 00:08:21.970
TIM BRAY: But lots of people
don't have that app.

00:08:21.970 --> 00:08:24.030
NAVEEN AGARWAL: Right.

00:08:24.030 --> 00:08:27.570
But the good part is G+ SDK
actually will default back to

00:08:27.570 --> 00:08:30.040
the native browser,
Safari browser.

00:08:30.040 --> 00:08:33.750
And so if the app doesn't exist,
it'll actually send the

00:08:33.750 --> 00:08:35.250
user to the browser.

00:08:35.250 --> 00:08:39.320
And again, if the user has to
just sign in once into Google

00:08:39.320 --> 00:08:43.169
in the browser, and they will
see an approval page, and

00:08:43.169 --> 00:08:45.740
they'll click on the approval
page and basically go back to

00:08:45.740 --> 00:08:50.190
the app, which is a very nice,
smooth experience.

00:08:50.190 --> 00:08:52.230
You could actually do this.

00:08:52.230 --> 00:08:54.170
Now we have recently enabled--

00:08:54.170 --> 00:08:56.950
you could actually make a call
directly sent to the browser

00:08:56.950 --> 00:09:00.670
without using the G+ SDK if
there are certain things which

00:09:00.670 --> 00:09:04.915
you may need which is not there
through the G+ SDK.

00:09:04.915 --> 00:09:05.940
TIM BRAY: So this has
been working.

00:09:05.940 --> 00:09:07.970
But we haven't been talking
about it very much yet.

00:09:07.970 --> 00:09:09.650
NAVEEN AGARWAL: Right.

00:09:09.650 --> 00:09:11.010
We haven't talked about this.

00:09:11.010 --> 00:09:12.540
But it is actually now live.

00:09:12.540 --> 00:09:14.060
You could actually try it out.

00:09:14.060 --> 00:09:18.610
And I do have an app if you
want to see the experience

00:09:18.610 --> 00:09:20.750
where you could actually
send the user

00:09:20.750 --> 00:09:21.750
to the Safari browser.

00:09:21.750 --> 00:09:24.220
If they're signed into Google,
they would just see an

00:09:24.220 --> 00:09:25.350
approval page.

00:09:25.350 --> 00:09:26.806
User says yes.

00:09:26.806 --> 00:09:28.630
And they will get the code
back to your app.

00:09:28.630 --> 00:09:29.560
And you're signed in.

00:09:29.560 --> 00:09:31.450
TIM BRAY: Should we be brave
and try for a live demo?

00:09:31.450 --> 00:09:32.660
NAVEEN AGARWAL: We could try.

00:09:32.660 --> 00:09:34.280
We could give it a try
and see how it works.

00:09:34.280 --> 00:09:36.426
TIM BRAY: Switch over
to the iPad there.

00:09:40.890 --> 00:09:46.900
So I have an app here
which actually

00:09:46.900 --> 00:09:48.420
has signed into Google.

00:09:48.420 --> 00:09:53.470
If I click on it, you can see
it goes to the Safari.

00:09:53.470 --> 00:09:54.760
I will sign into Safari.

00:09:54.760 --> 00:09:56.450
I see an approval page.

00:09:56.450 --> 00:10:01.530
And if I say allow access,
smoothly it

00:10:01.530 --> 00:10:02.650
goes back to the app.

00:10:02.650 --> 00:10:04.750
And app has access
to the data.

00:10:04.750 --> 00:10:08.845
And it actually can fetch
whatever it needs, basically.

00:10:08.845 --> 00:10:10.580
AUDIENCE: Can you do
that one more time?

00:10:10.580 --> 00:10:12.020
We were not set yet.

00:10:12.020 --> 00:10:12.960
NAVEEN AGARWAL: Sure

00:10:12.960 --> 00:10:14.210
AUDIENCE: One second.

00:10:17.659 --> 00:10:18.601
All right.

00:10:18.601 --> 00:10:19.543
Do it again.

00:10:19.543 --> 00:10:22.810
NAVEEN AGARWAL: So here we have
the app, which basically

00:10:22.810 --> 00:10:25.900
has signed into Google.

00:10:25.900 --> 00:10:27.730
You click on Sign In.

00:10:27.730 --> 00:10:30.975
It sends you back to the
browser, where I'm signed into

00:10:30.975 --> 00:10:32.020
the browser.

00:10:32.020 --> 00:10:34.110
I see an approval page.

00:10:34.110 --> 00:10:36.780
It's asking for some of the
basic information about my

00:10:36.780 --> 00:10:39.140
Google account.

00:10:39.140 --> 00:10:42.060
I say Allow Access.

00:10:42.060 --> 00:10:44.040
The code is sent back
to the app.

00:10:44.040 --> 00:10:47.150
And app can use that
access token to

00:10:47.150 --> 00:10:48.700
actually fetch the data.

00:10:48.700 --> 00:10:50.140
So it's a pretty smooth
experience,

00:10:50.140 --> 00:10:52.945
actually, to make it work.

00:10:52.945 --> 00:10:54.195
So you could--

00:10:56.667 --> 00:10:58.952
I dropped the mic.

00:10:58.952 --> 00:11:01.090
TIM BRAY: That happened last
time I did this, too.

00:11:01.090 --> 00:11:02.340
AUDIENCE: Leave it on.

00:11:07.782 --> 00:11:11.380
NAVEEN AGARWAL: So the other
options are-- which actually,

00:11:11.380 --> 00:11:13.210
currently, people use--

00:11:13.210 --> 00:11:15.170
are using embedded web view.

00:11:15.170 --> 00:11:20.020
And there was no easier option
for our developers on iOS.

00:11:20.020 --> 00:11:24.000
And embedded web views work
nicely from a user experience.

00:11:24.000 --> 00:11:27.630
But actually, one of the biggest
drawbacks is user has

00:11:27.630 --> 00:11:31.060
to enter ID and password in each
and every app, which is

00:11:31.060 --> 00:11:32.340
really painful.

00:11:32.340 --> 00:11:35.890
I hate entering passwords on my
mobile devices, even though

00:11:35.890 --> 00:11:37.070
it's easier to type them in.

00:11:37.070 --> 00:11:40.030
But depending on how many
characters and numbers I have,

00:11:40.030 --> 00:11:41.450
it's very hard.

00:11:41.450 --> 00:11:45.460
So generally, embedded
view might look good.

00:11:45.460 --> 00:11:48.290
People generally like
them using our

00:11:48.290 --> 00:11:49.460
GTM OAuth 2.0 library.

00:11:49.460 --> 00:11:52.300
But they definitely are not
the best experience from a

00:11:52.300 --> 00:11:54.360
user point of view, because they
have to keep entering the

00:11:54.360 --> 00:11:55.910
ID and password again
and again.

00:11:55.910 --> 00:11:59.190
TIM BRAY: So after we decided
to do this talk--

00:11:59.190 --> 00:12:01.270
Naveen actually published
a few slides on what you

00:12:01.270 --> 00:12:05.280
actually have to do as an iOS
developer to make this happen.

00:12:05.280 --> 00:12:06.805
Could we switch to the
Chromebook just for a sec

00:12:06.805 --> 00:12:08.840
there, Dylan?

00:12:08.840 --> 00:12:13.730
And they're linked from Naveen's
Google+ page and my

00:12:13.730 --> 00:12:14.250
Google+ page.

00:12:14.250 --> 00:12:16.590
So if you just go to Google+
and type Tim Bray or Naveen

00:12:16.590 --> 00:12:19.430
Agarwal, you'll find a
link to this thing.

00:12:19.430 --> 00:12:22.660
And there's this trick where
you actually register a

00:12:22.660 --> 00:12:28.170
callback URI where the scheme
identifies your app by either

00:12:28.170 --> 00:12:29.670
bundle or client ID.

00:12:29.670 --> 00:12:30.000
NAVEEN AGARWAL: Right.

00:12:30.000 --> 00:12:32.900
So in order to support the--
so essentially, what we did

00:12:32.900 --> 00:12:38.570
not have a way from a browser
to get back to the app.

00:12:38.570 --> 00:12:41.800
And by the way, this works not
just in Safari or iOS.

00:12:41.800 --> 00:12:44.610
It works in other operating
system for the native apps.

00:12:44.610 --> 00:12:49.220
What we are supporting now is
that we will redirect back.

00:12:49.220 --> 00:12:53.000
If your app is a native app,
or installed app, we would

00:12:53.000 --> 00:12:56.620
redirect back to one of the
custom URL which you provide.

00:12:56.620 --> 00:13:00.300
Custom URL could be a
bundle ID on iOS.

00:13:00.300 --> 00:13:03.440
So for example, you can
see com.example.myapp.

00:13:03.440 --> 00:13:06.320
And you need to provide that
bundle ID to us when you

00:13:06.320 --> 00:13:08.270
register that client ID.

00:13:08.270 --> 00:13:11.410
Or in cases on some operating
system where you don't have

00:13:11.410 --> 00:13:14.410
bundle ID or anything else, you
could just use the reverse

00:13:14.410 --> 00:13:19.261
of your client ID as
the custom URL.

00:13:19.261 --> 00:13:22.585
So you can see in this one,
client ID is 1234-abc.apps.go

00:13:22.585 --> 00:13:23.835
ogleusercontent.com.

00:13:27.420 --> 00:13:30.570
We would basically select
one of them.

00:13:30.570 --> 00:13:34.140
You can pass that as a redirect
URI in the call to

00:13:34.140 --> 00:13:35.200
the browser.

00:13:35.200 --> 00:13:38.150
And if all this matches
out, we'll redirect

00:13:38.150 --> 00:13:39.780
back after the approval.

00:13:39.780 --> 00:13:41.300
TIM BRAY: So that's
up there now.

00:13:41.300 --> 00:13:43.210
We eventually will roll this
out into the regular

00:13:43.210 --> 00:13:44.240
documentation suite.

00:13:44.240 --> 00:13:45.320
But it's there, and
it's working.

00:13:45.320 --> 00:13:48.560
And you're encouraged to go
ahead and give it a try.

00:13:48.560 --> 00:13:50.850
So let's go back to Android
for a second, where

00:13:50.850 --> 00:13:52.790
everything's built in
and easy for us.

00:13:52.790 --> 00:13:56.700
We've been working on basically

00:13:56.700 --> 00:13:57.910
minimizing the approvals.

00:13:57.910 --> 00:13:59.510
NAVEEN AGARWAL: Yes.

00:13:59.510 --> 00:14:02.910
I think one of the things, when
we started with OAuth, or

00:14:02.910 --> 00:14:09.370
even with OpenID, we were very
approval page trigger-happy,

00:14:09.370 --> 00:14:11.750
what I would call it, basically,
putting lots of

00:14:11.750 --> 00:14:16.020
stuff on the approval pages,
trying to make sure that user

00:14:16.020 --> 00:14:17.490
is very well-aware of.

00:14:17.490 --> 00:14:20.540
What it basically has created
is that user may click on

00:14:20.540 --> 00:14:23.050
approval page without even
thinking about it, or they're

00:14:23.050 --> 00:14:24.750
seeing the approval
pages very often.

00:14:24.750 --> 00:14:27.580
And they don't understand
what's going on.

00:14:27.580 --> 00:14:31.570
So we are trying to minimize
the number of times we show

00:14:31.570 --> 00:14:37.830
user approval pages, or where
it's not really needed, and we

00:14:37.830 --> 00:14:41.200
can actually infer that user is
actually trying to do the

00:14:41.200 --> 00:14:41.950
right thing.

00:14:41.950 --> 00:14:44.840
And one of the things which we
did recently on Android was

00:14:44.840 --> 00:14:49.200
where the user is trying to get
an ID token to log into

00:14:49.200 --> 00:14:52.820
their own web server,
essentially, if the user has

00:14:52.820 --> 00:14:56.490
selected an email address from
the account manager, then he

00:14:56.490 --> 00:14:57.190
is saying yes.

00:14:57.190 --> 00:15:00.150
I want to actually use this
account to log in.

00:15:00.150 --> 00:15:01.420
There is no approval page.

00:15:01.420 --> 00:15:04.660
And we give out an ID token,
which essentially gets you

00:15:04.660 --> 00:15:09.640
access to an ID token and also
their public Google profile

00:15:09.640 --> 00:15:11.140
information to that user.

00:15:11.140 --> 00:15:14.010
TIM BRAY: Basically, what we're
trying to do is to ask

00:15:14.010 --> 00:15:17.460
the user for permission only
when it's reasonable and it's

00:15:17.460 --> 00:15:18.500
worthy of their attention.

00:15:18.500 --> 00:15:22.170
So if I'm using some developer's
Android app, if I

00:15:22.170 --> 00:15:25.300
also want to identify myself to
their back end, I shouldn't

00:15:25.300 --> 00:15:26.610
have to ask for permission
again.

00:15:26.610 --> 00:15:27.340
They should do that.

00:15:27.340 --> 00:15:28.030
So we've been making some--

00:15:28.030 --> 00:15:30.760
NAVEEN AGARWAL: So I think we--
just to also clarify, we

00:15:30.760 --> 00:15:33.520
have also done this
on the web.

00:15:33.520 --> 00:15:37.930
So in certain flows, if you know
the user's email address,

00:15:37.930 --> 00:15:41.480
and if you pass that email
address to an auth end point,

00:15:41.480 --> 00:15:44.880
and if you are only requesting
an email scope, we would

00:15:44.880 --> 00:15:47.910
actually not show an approval
page if the user is signed in.

00:15:47.910 --> 00:15:50.825
And we'll send you back an ID
token which you can verify

00:15:50.825 --> 00:15:52.390
that the user is signed in.

00:15:52.390 --> 00:15:54.650
So you could use that
to actually verify

00:15:54.650 --> 00:15:55.550
user's email address.

00:15:55.550 --> 00:15:57.700
Without sending them an email,
you could actually do that

00:15:57.700 --> 00:16:00.285
fairly easily, because the user
had entered the email

00:16:00.285 --> 00:16:01.500
address on your side.

00:16:01.500 --> 00:16:02.600
And you redirect back.

00:16:02.600 --> 00:16:05.830
And so there are lots of good
use cases you will see in the

00:16:05.830 --> 00:16:08.190
future we may be enabling.

00:16:08.190 --> 00:16:10.370
TIM BRAY: So identity
on the internet is--

00:16:10.370 --> 00:16:11.340
the internet's huge.

00:16:11.340 --> 00:16:13.000
And the identity problem on
the internet is huge.

00:16:13.000 --> 00:16:16.270
It feels, sometimes, like we're
facing this incredibly

00:16:16.270 --> 00:16:17.760
tall mountain in
the Himalayas.

00:16:17.760 --> 00:16:19.220
But we are inching up.

00:16:19.220 --> 00:16:24.810
And the idea is to keep people
safe and secure and not pester

00:16:24.810 --> 00:16:26.900
them all the time, because
that's part of

00:16:26.900 --> 00:16:28.710
security, as well.

00:16:28.710 --> 00:16:30.770
So we're running a little
bit long here.

00:16:30.770 --> 00:16:32.850
Dylan, unless there's somebody
online with a question, I

00:16:32.850 --> 00:16:35.600
think we should maybe
call it a day.

00:16:35.600 --> 00:16:38.280
And we're good.

00:16:38.280 --> 00:16:38.630
Fair enough.

00:16:38.630 --> 00:16:40.910
So thanks for dropping
in and listening.

00:16:40.910 --> 00:16:44.270
And we'll be doing these on a
regular basis, so come back

00:16:44.270 --> 00:16:48.000
for more identity good news
and nastiness, as well, on

00:16:48.000 --> 00:16:48.960
Google Developers Live.

00:16:48.960 --> 00:16:49.905
Thank you kindly.

00:16:49.905 --> 00:16:51.155
NAVEEN AGARWAL: Thank you.

00:16:56.710 --> 00:17:13.752
[MUSIC PLAYING]

