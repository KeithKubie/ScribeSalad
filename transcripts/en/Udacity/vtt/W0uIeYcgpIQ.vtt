WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
Okay. Here's the code for the compiler.

00:00:03.000 --> 00:00:08.000
Now, remember the way the compiler works is the constructor for each of the patterns

00:00:08.000 --> 00:00:11.000
takes some arguments--a string, and x and y pattern, or whatever--

00:00:11.000 --> 00:00:16.000
and it's going to return a function that matches the protocol that we've defined for the compiler.

00:00:16.000 --> 00:00:21.000
The protocol is that each pattern function will take a set of numbers

00:00:21.000 --> 00:00:25.000
where the set of numbers is a list of possible lengths that we're looking for.

00:00:25.000 --> 00:00:27.000
Then it will return a set of strings.

00:00:27.000 --> 00:00:30.000
What have I done for lit(s)?

00:00:30.000 --> 00:00:34.000
I've said we return the function which takes a set of numbers as input,

00:00:34.000 --> 00:00:38.000
and if the length of the string is in that set of number--

00:00:38.000 --> 00:00:43.000
if the literal string was "hello" and if hello has five letters

00:00:43.000 --> 00:00:47.000
and if 5 is one of the numbers we're trying to look for--

00:00:47.000 --> 00:00:51.000
then return the set consisting of a single element--the string itself.

00:00:51.000 --> 00:00:54.000
Otherwise, return the null set.

00:00:54.000 --> 00:00:56.000
Star I can define in terms of other things.

00:00:56.000 --> 00:01:01.000
Plus I've defined in terms of a function sequence that we'll get to in a minute.

00:01:01.000 --> 00:01:05.000
It's a little bit complicated. It's really the only complicated one here.

00:01:05.000 --> 00:01:10.000
We can reduce all the other complications down to calling plus, which calls genseq.

00:01:10.000 --> 00:01:12.000
Sequence does that too.

00:01:12.000 --> 00:01:17.000
I've introduced epsilon, which is the standard name in language theory for the empty string.

00:01:17.000 --> 00:01:19.000
So it's the empty string.

00:01:19.000 --> 00:01:21.000
It's the same as just the literal of the empty string,

00:01:21.000 --> 00:01:26.000
which matches just itself if we're looking for strings of length 0.

00:01:26.000 --> 00:01:29.000
For dot--dot matches any character.

00:01:29.000 --> 00:01:32.000
I've decided to just return a question mark to indicate that.

00:01:32.000 --> 00:01:38.000
You could return all 256 characters or whatever you want.

00:01:38.000 --> 00:01:43.000
Your results would start to get bigger and bigger. You can change that if you want to.

00:01:43.000 --> 00:01:45.000
I levt space for you to do some work.

00:01:45.000 --> 00:01:49.000
Give me the definitions for oneof(chars).

00:01:49.000 --> 00:01:53.000
If we ask for oneof the characters abc, what should that match?

00:01:53.000 --> 00:02:00.000
What it should match is if 1 is an element of Ns then it should be abc.

00:02:00.000 --> 00:02:02.000
Otherwise, it shouldn't be anything.

00:02:02.000 --> 99:59:59.000
Similarly for alt. Give me the code for that.

