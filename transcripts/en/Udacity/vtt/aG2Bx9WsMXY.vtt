WEBVTT
Kind: captions
Language: en

00:00:00.180 --> 00:00:02.790
&gt;&gt; Last time, we talked about some cases where you'd want to use branches for

00:00:02.790 --> 00:00:04.290
your solo projects.

00:00:04.290 --> 00:00:07.180
You might also want to use branches to keep things organized when

00:00:07.180 --> 00:00:08.450
working with others.

00:00:08.450 --> 00:00:11.850
If you and your collaborators all make changes on the same branch,

00:00:11.850 --> 00:00:15.010
you can't easily work on separate features simultaneously.

00:00:15.010 --> 00:00:17.500
A common workflow for people working on projects together,

00:00:17.500 --> 00:00:20.880
includes making a new branch for every feature or bug-fix.

00:00:20.880 --> 00:00:24.160
This way, if multiple people are working on changes at the same time.

00:00:24.160 --> 00:00:27.480
They can each check out their branch to continue work after taking a break.

00:00:27.480 --> 00:00:30.160
Without worrying about things changing up from under them.

00:00:30.160 --> 00:00:32.910
Then once a feature or bug-fix is complete,

00:00:32.910 --> 00:00:37.180
the author can either update master to also point to the tip of the new branch.

00:00:37.180 --> 00:00:39.550
Or if there have been changes to master in the mean time.

00:00:39.550 --> 00:00:43.035
Combine it with the current master, using git's merge feature.

00:00:43.035 --> 00:00:45.272
We'll talk about merging in detail later.

00:00:45.272 --> 00:00:47.291
I've actually been working on a new feature for

00:00:47.291 --> 00:00:49.900
the asteroids game, that adds a new game mechanic.

00:00:49.900 --> 00:00:52.150
In addition to getting points for destroying asteroids and

00:00:52.150 --> 00:00:56.210
spaceships, you can also collect coins by touching them with your ship.

00:00:56.210 --> 00:00:59.080
This adds a new challenge, since there are now somethings that you want to hit

00:00:59.080 --> 00:01:00.310
and others that you want to avoid.

00:01:00.310 --> 00:01:03.250
I'm finally ready to share this branch with Caroline.

00:01:03.250 --> 00:01:05.610
So I tell her that she can check out the branch and play test it,

00:01:05.610 --> 00:01:08.310
so that I can get some feedback before adding it into the main branch.

00:01:09.450 --> 00:01:10.030
&gt;&gt; Thanks.

00:01:10.030 --> 00:01:13.000
Now Sarah told me that her branch is named coins.

00:01:13.000 --> 00:01:16.640
So I'll check it out using git checkout coins.

00:01:16.640 --> 00:01:19.830
Now, I get this message saying that branch coins is set up to

00:01:19.830 --> 00:01:21.980
track remote branch coins from origin.

00:01:23.280 --> 00:01:23.960
Whoa.

00:01:23.960 --> 00:01:25.760
That's a few words that you haven't heard before.

00:01:26.850 --> 00:01:30.210
The fact that it's a remote branch means that I didn't create it myself.

00:01:30.210 --> 00:01:34.270
Instead, Sarah created it and so I'm looking at her branch.

00:01:34.270 --> 00:01:36.920
You'll learn more about remotes in lesson three.

00:01:36.920 --> 00:01:39.600
But for now, once I've checked out the branch,

00:01:39.600 --> 00:01:42.970
it behaves just like the branches that I created myself.

00:01:42.970 --> 00:01:46.760
Now I'll open the index.html file and try the game out.

00:01:46.760 --> 00:01:49.650
Now this is a coin right here that Sarah added.

00:01:49.650 --> 00:01:52.650
And when I run into it, then my score goes up.

00:01:52.650 --> 00:01:53.580
Cool.

00:01:53.580 --> 00:01:57.210
Now you might be wondering why Sarah's version of the game doesn't have color.

00:01:57.210 --> 00:02:00.210
That's because Sarah started working on this branch before color was

00:02:00.210 --> 00:02:01.820
added to master.

00:02:01.820 --> 00:02:04.200
To see this, I'll do a git log.

00:02:04.200 --> 00:02:07.390
So I can see that these recent commits are all by Sarah.

00:02:07.390 --> 00:02:11.840
If I scroll down to get to the most recent commit that wasn't from Sarah,

00:02:11.840 --> 00:02:15.150
I see that it's this one where I reverted the controls back from my

00:02:15.150 --> 00:02:17.080
experiment in lesson one.

00:02:17.080 --> 00:02:19.769
That's because this was the latest commit on master at

00:02:19.769 --> 00:02:21.937
the time when Sarah checked out her branch.

00:02:21.937 --> 00:02:26.072
By contrast, if I check out master and run git log there.

00:02:26.072 --> 00:02:29.819
I can see many newer commits that are more recent than the commit that

00:02:29.819 --> 00:02:32.250
Sarah started working on.

00:02:32.250 --> 00:02:34.420
The color commit is right here.

00:02:34.420 --> 00:02:38.580
Git can also help you visualize the branch structure via the command git

00:02:38.580 --> 00:02:40.700
log dash dash graph.

00:02:40.700 --> 00:02:44.830
I'll also add the flag dash dash oneline to make the output shorter and

00:02:44.830 --> 00:02:46.510
easier to see.

00:02:46.510 --> 00:02:49.950
And I'll need to tell git which branches I want to visualize.

00:02:49.950 --> 00:02:53.690
So, I'd like to see master and coins at this point.

00:02:53.690 --> 00:02:57.210
These commits existed before the coins branch was created.

00:02:57.210 --> 00:02:59.662
These are commits that Sarah added to the coins branch.

00:02:59.662 --> 00:03:02.571
And these are commits that were added to master after

00:03:02.571 --> 00:03:04.297
the coins branch was created.

00:03:04.297 --> 00:03:07.818
Now that you've seen what commits are in each branch, grab a pencil and

00:03:07.818 --> 00:03:11.910
paper and draw a diagram of the commit history in the asteroids repository.

00:03:11.910 --> 00:03:15.500
Including the easy-mode, master and coins branches.

00:03:15.500 --> 00:03:18.160
You don't have to include all the old commits just,

00:03:18.160 --> 00:03:21.470
however many of the recent commits you think will be informative.

00:03:21.470 --> 00:03:22.830
When you're finished, check this box.

00:03:24.080 --> 00:03:25.025
If you're having trouble,

00:03:25.025 --> 00:03:28.480
try using git log to see what commits are on each branch.

00:03:28.480 --> 00:03:32.020
And make sure you watch the solution video to compare your diagram to Sarah's.

