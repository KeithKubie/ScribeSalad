WEBVTT
Kind: captions
Language: en

00:00:00.630 --> 00:00:03.340
That's why we have talked about
some of the uses of metacognition.

00:00:03.340 --> 00:00:07.190
We can use it to fix errors in
knowledge or reasoning or learning.

00:00:07.190 --> 00:00:11.600
We can use it to fix gaps in knowledge,
reasoning, or learning.

00:00:11.600 --> 00:00:13.572
We can use it for strategy integration.

00:00:13.572 --> 00:00:15.434
One that we have not yet

00:00:15.434 --> 00:00:19.540
talked about is what is the processes
that metacognition uses?

00:00:19.540 --> 00:00:21.350
What is it's strategy?

00:00:21.350 --> 00:00:25.700
Well, metacognition can use these
same kinds of reasoning processes

00:00:25.700 --> 00:00:27.310
that is the surface reasoning goal.

00:00:27.310 --> 00:00:31.010
That is, case-based reasoning is
a potential strategy for metacognition.

00:00:31.010 --> 00:00:35.140
Constraint propagation is a potential
strategy for metacognition, and so on.

00:00:35.140 --> 00:00:39.020
Let us take an example, supposedly if
metacognition comes across a problem and

00:00:39.020 --> 00:00:41.600
it must select among these strategies.

00:00:41.600 --> 00:00:43.260
Metacognition might ask itself,

00:00:43.260 --> 00:00:47.570
what strategy did I pick the last
time I came across a similar problem?

00:00:47.570 --> 00:00:49.630
This is case-based
reasoning at a meta level.

00:00:51.020 --> 00:00:54.690
To complete this example, metacognition
might say the last time I used

00:00:54.690 --> 00:00:57.550
constraint propagation as a technique
with this particular problem,

00:00:57.550 --> 00:00:59.610
this time I'll use constraint
propagation again.

00:01:00.760 --> 00:01:03.390
As another example,
given a second problem,

00:01:03.390 --> 00:01:08.570
metacognition may use planning to set up
a plan for using the various strategies,

00:01:08.570 --> 00:01:11.080
thinking of each of
the strategies as an operator.

00:01:12.240 --> 00:01:15.190
&gt;&gt; As a third example, metacognition
might get a new problem and decide to

00:01:15.190 --> 00:01:18.798
use every single method at it's disposal
to generate a possible solution.

00:01:18.798 --> 00:01:21.940
It then might have some heuristics
to test each one of those possible

00:01:21.940 --> 00:01:23.790
solutions and
figure out which one is best.

00:01:23.790 --> 00:01:28.650
So then it's using Generate &amp; Test to
select between it's multiple strategies.

00:01:28.650 --> 00:01:32.510
&gt;&gt; To summarize this part then,
metacognition can use the same reasoning

00:01:32.510 --> 00:01:35.943
strategies that we have been
studying at the deliberative level.

