WEBVTT
Kind: captions
Language: en

00:00:00.410 --> 00:00:04.650
Th desire to apply the trick of using
positive and negative pairs recursively,

00:00:04.650 --> 00:00:08.930
leads us to a very special set of
points, called the Roots of Unity.

00:00:08.930 --> 00:00:12.570
Recall that our goal is to compute
two values of a polynomial for

00:00:12.570 --> 00:00:18.040
the price of one, by dividing
the terms up into even and odd powers.

00:00:18.040 --> 00:00:18.540
&gt;From here on,

00:00:18.540 --> 00:00:23.080
we will assume that the number of points
is equal to the order of the polynomial.

00:00:23.080 --> 00:00:24.903
And that this number is a power of 2.

00:00:24.903 --> 00:00:27.844
In the context of
polynomial multiplication,

00:00:27.844 --> 00:00:31.810
N will be the power of 2, that is
at least as great as the number of

00:00:31.810 --> 00:00:35.132
coefficients of the product
of the two polynomials.

00:00:35.132 --> 00:00:38.666
And we will pad the coefficients of
the polynomials being multiplied with

00:00:38.666 --> 00:00:42.190
the zeros, as needed to make
their number equal to N as well.

00:00:42.190 --> 00:00:45.380
In order to be able to do
this computation recursively,

00:00:45.380 --> 00:00:49.190
we need the sequence X to have
the following proprieties.

00:00:49.190 --> 00:00:53.310
First, they should all be distinct,
otherwise our efforts will be wasted,

00:00:53.310 --> 00:00:56.060
and we wont have enough points
to interpolate back to find

00:00:56.060 --> 00:00:57.400
the coefficients.

00:00:57.400 --> 00:00:59.992
We also need the points
to be symmetric or

00:00:59.992 --> 00:01:02.420
anti symmetric,
depending on how you look at it.

00:01:02.420 --> 00:01:06.630
That is to say,
we want the point with index J

00:01:06.630 --> 00:01:11.680
plus N over 2 to the negative of X of J,
and lastly,

00:01:11.680 --> 00:01:15.630
we want all these properties to apply
to the squares of these numbers, so

00:01:15.630 --> 00:01:19.220
that we can use this trick
recursively again and again.

00:01:19.220 --> 00:01:22.120
If your polynomials are over
some unusual field,

00:01:22.120 --> 00:01:25.860
then it may make sense to choose
an unusual set of values for X.

00:01:25.860 --> 00:01:29.560
For most applications however,
the coefficients will be integers or

00:01:29.560 --> 00:01:31.880
reals or complex numbers.

00:01:31.880 --> 00:01:35.460
And the choice of X will be
the complex roots of unity.

00:01:35.460 --> 00:01:41.640
We define omega N to be e
to the 2 pi i divided by N,

00:01:41.640 --> 00:01:46.870
and we let Xj be omega of
N raised to the jth power.

00:01:46.870 --> 00:01:49.830
Let's visualize these points
in the complex plane.

00:01:49.830 --> 00:01:52.040
I'll do this for N equal to 8.

00:01:52.040 --> 00:01:53.870
All the points have magnitude 1,

00:01:53.870 --> 00:01:57.520
so they'll be arranged
around the unit circle, and

00:01:57.520 --> 00:02:02.730
the angle from the positive real axis,
is given by the exponent here.

00:02:02.730 --> 00:02:08.169
Thus, omega to the j,
will be j Nths around the circle.

00:02:08.169 --> 00:02:10.259
Let's confirm that all
the desired properties hold.

00:02:11.320 --> 00:02:13.300
Indeed, the points are unique.

00:02:13.300 --> 00:02:18.060
j here is always less than N, so
there's no wrap around the circle.

00:02:18.060 --> 00:02:23.060
The symmetric property holds,
because adding N over 2 to j has

00:02:23.060 --> 00:02:28.620
the effect of increasing this
angle by pi, or half the circle.

00:02:28.620 --> 00:02:33.220
And so that's equivalent to negating and
flipping over both axes as well.

00:02:33.220 --> 00:02:36.290
The recursive property is
the hardest to confirm.

00:02:36.290 --> 00:02:40.080
Notice however, that for
all the points that have odd powers

00:02:40.080 --> 00:02:44.750
in the exponent here, squaring these
numbers makes the exponent even.

00:02:44.750 --> 00:02:48.724
Thus omega 3 when squared,
becomes omega to the 6th.

00:02:49.880 --> 00:02:53.820
Omega fifth when squared,
will become omega to the 10th,

00:02:53.820 --> 00:02:57.450
which wraps around and
then becomes omega to the 2nd.

00:02:57.450 --> 00:03:00.540
Moreover, each of the even powers here

00:03:00.540 --> 00:03:03.750
is the square of exactly
two other points.

00:03:03.750 --> 00:03:05.140
Which points?

00:03:05.140 --> 00:03:07.690
Well, just divide the exponent by 2.

00:03:07.690 --> 00:03:09.340
That gives you one of them.

00:03:09.340 --> 00:03:15.150
For example, omega to the 4th,
well his square root is omega to the 2.

00:03:15.150 --> 00:03:16.890
What's the other point?

00:03:16.890 --> 00:03:19.790
Well it's on the opposite side
of the circle, of course.

00:03:19.790 --> 00:03:24.630
The additional N over 2 in the exponent,
comes an additional N when we square it,

00:03:24.630 --> 00:03:28.220
so it's just an extra trip around
the circle, and it's the same place.

00:03:28.220 --> 00:03:33.051
For, omega squared,
half is omega to the 1st power, and

00:03:33.051 --> 00:03:36.712
then the opposite side
is omega to the 5th.

00:03:36.712 --> 00:03:40.147
The result of all this,
is that when we square these numbers,

00:03:40.147 --> 00:03:43.180
the odd powers of omega go away,
like so.

00:03:43.180 --> 00:03:46.750
Once we're left with, only the even
powers however, It doesn't make sense to

00:03:46.750 --> 00:03:51.030
express these points in terms
of omega sub eight anymore.

00:03:51.030 --> 00:03:56.310
The factors of two in the numerator
j and the denominator N cancel.

00:03:56.310 --> 00:03:59.140
So we can just divide both by two.

00:03:59.140 --> 00:04:00.450
And voila,

00:04:00.450 --> 00:04:04.320
we end up with the fourth roots of
unity, instead of the eighth roots.

00:04:05.450 --> 00:04:09.480
And the same logic applies to all N,
where N is a power of 2.

00:04:09.480 --> 00:04:14.190
And that then, shows that all these
key properties that we wanted for

00:04:14.190 --> 00:04:15.830
X are true,

00:04:15.830 --> 00:04:20.329
when we choose them to be the Nth roots
of unity, where N is a power of 2.

00:04:21.560 --> 00:04:25.000
It's worth noting here, how few of
the properties of complex numbers

00:04:25.000 --> 00:04:27.540
were necessary for
the recursion we used.

00:04:27.540 --> 00:04:31.730
In fact, there are a number of theoretic
algorithms that use modular arithmetic,

00:04:31.730 --> 00:04:34.600
and avoid the precision difficulties
associated with working with

00:04:34.600 --> 00:04:35.280
complex numbers.

00:04:36.640 --> 00:04:37.590
At the end of the lesson,

00:04:37.590 --> 00:04:39.380
you'll get a chance to implement
one of those yourself.

