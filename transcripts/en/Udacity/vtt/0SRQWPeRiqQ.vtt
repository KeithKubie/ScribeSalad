WEBVTT
Kind: captions
Language: en

00:00:00.240 --> 00:00:02.900
Let's now talk about an application of software

00:00:02.900 --> 00:00:06.420
defined networking. Which is network virtualization. So we'll

00:00:06.420 --> 00:00:09.190
talk first about what network virtualization is, then

00:00:09.190 --> 00:00:11.870
we'll talk about how it's implemented. And then

00:00:11.870 --> 00:00:14.800
we'll talk about some examples and applications, such

00:00:14.800 --> 00:00:18.510
as Mininet. So network virtualization is simply an

00:00:18.510 --> 00:00:21.970
abstraction of the physical network. Where multiple logical

00:00:21.970 --> 00:00:25.420
networks can be run on the same underlying

00:00:25.420 --> 00:00:28.750
shared physical substrate. For example, a logical network

00:00:28.750 --> 00:00:32.369
might map a particular network topology onto the

00:00:32.369 --> 00:00:35.260
underlying physical topology. And there might be multiple

00:00:35.260 --> 00:00:37.790
logical networks, that map onto the same physical

00:00:37.790 --> 00:00:41.870
topology. And these logical networks might actually share

00:00:41.870 --> 00:00:45.220
nodes and links in the underlying physical typology.

00:00:45.220 --> 00:00:48.290
But each logical network has its own view

00:00:48.290 --> 00:00:50.590
as if it were running its own private version

00:00:50.590 --> 00:00:52.360
of the network. Now you can see from

00:00:52.360 --> 00:00:56.090
this picture, that the nodes in the physical network

00:00:56.090 --> 00:00:58.430
need to be shared or sliced. So the

00:00:58.430 --> 00:01:01.490
nodes in the physical typology might be virtual machines.

00:01:01.490 --> 00:01:05.670
Similarly, a single link in the logical topology

00:01:05.670 --> 00:01:09.410
might map to multiple links in the physical topology.

00:01:09.410 --> 00:01:12.510
The mechanism to achieve these virtual links is

00:01:12.510 --> 00:01:15.720
typically through tunneling. So a packet that's destined from

00:01:15.720 --> 00:01:18.370
A to B in the logical topology, might

00:01:18.370 --> 00:01:21.540
be encapsulated, in a packet that's destined for

00:01:21.540 --> 00:01:25.180
node X first, before the packet is decapsulated

00:01:25.180 --> 00:01:27.770
and ultimately sent to B. It may also

00:01:27.770 --> 00:01:31.560
be easy to understand virtual networking as an

00:01:31.560 --> 00:01:34.238
analogy to virtual machines, which you may be

00:01:34.238 --> 00:01:37.140
familiar with already. So in a virtual machine

00:01:37.140 --> 00:01:40.850
environment, we have virtual machines where a hypervisor,

00:01:40.850 --> 00:01:43.510
arbitrates access to the underlying physical

00:01:43.510 --> 00:01:46.520
resources. Providing to each virtual machine the

00:01:46.520 --> 00:01:48.250
illusion that it's operating on its

00:01:48.250 --> 00:01:53.040
own dedicated version of the hardware. Similarly,

00:01:53.040 --> 00:01:56.200
with virtual networking, a network hypervisor

00:01:56.200 --> 00:01:59.550
of sorts arbitrates access to the underlying

00:01:59.550 --> 00:02:03.350
physical network, to multiple virtual networks. Providing

00:02:03.350 --> 00:02:06.040
the illusion that each virtual network actually

00:02:06.040 --> 00:02:08.180
has its own dedicated physical network.

