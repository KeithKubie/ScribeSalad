WEBVTT
Kind: captions
Language: en

00:00:00.350 --> 00:00:03.589
You've initialized your scene with lights, objects and a camera. Naturally, the

00:00:03.589 --> 00:00:06.895
next step is to render. If you look through an entire Three.js program you've

00:00:06.895 --> 00:00:11.998
seen this line, telling the renderer class to render the scene. It's possible

00:00:11.998 --> 00:00:14.770
to call the renderer once during initialization and be done, but usually we

00:00:14.770 --> 00:00:19.664
want to have the scene be updated as needed. Once the scene is set up, calling

00:00:19.664 --> 00:00:22.938
the animate function gets things rolling. The key bit of magic is the

00:00:22.938 --> 00:00:26.650
window.requestAnimationFrame call, which in turn uses the animate method

00:00:26.650 --> 00:00:32.170
itself. This method will start up a rendering whenever it makes sense to do so.

00:00:32.170 --> 00:00:34.650
The other thing that requestAnimationFrame does for you is help lower the

00:00:34.650 --> 00:00:38.832
temperature of your computer. No, really. Say you have a webGL program running

00:00:38.832 --> 00:00:42.272
in a browser window. If you switch to another tab, the browser will know that

00:00:42.272 --> 00:00:46.350
the program is no longer visible and it will not keep it running. The animate

00:00:46.350 --> 00:00:50.104
method calls the render method to well, render the scene. Actually, it can do

00:00:50.104 --> 00:00:53.750
much more than that. I like to separate out the render method itself just to

00:00:53.750 --> 00:00:57.350
keep track of what's doing what. This method is where you want to put code that

00:00:57.350 --> 00:01:01.506
performs changes before rendering the scene. For example, if the user modifies

00:01:01.506 --> 00:01:05.330
the slider, the slider's value is used here to modify the scene. We've seen

00:01:05.330 --> 00:01:08.339
that in previous programs. If you have a bouncing ball animation, you change

00:01:08.339 --> 00:01:12.140
the position of the ball here. This is where animation gets going.

