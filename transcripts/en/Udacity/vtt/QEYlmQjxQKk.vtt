WEBVTT
Kind: captions
Language: en

00:00:00.300 --> 00:00:03.270
Hello, everyone. It's my pleasure to introduce

00:00:03.270 --> 00:00:07.250
to you Doctor Yousef Khalidi. Yousef, as I

00:00:07.250 --> 00:00:10.230
call him graduated from Georgia Tech in

00:00:10.230 --> 00:00:14.590
1989. And and then after he graduated from

00:00:14.590 --> 00:00:18.970
Georgia Tech with a PhD in computer science, and I'm very proud to say that he

00:00:18.970 --> 00:00:25.420
was my first PhD student. He went to work for Sun Microsystems where he was

00:00:25.420 --> 00:00:30.000
developing multiprocessor operating systems and then at

00:00:30.000 --> 00:00:33.360
some point of time Microsoft found him.

00:00:33.360 --> 00:00:39.150
And he moved to Microsoft and while he was at Sun he was the CTO

00:00:39.150 --> 00:00:45.580
of the Solaris MC product. And some of which we saw in our own discussion of

00:00:45.580 --> 00:00:51.610
structure of operating systems early on. And and then he moved to Microsoft and

00:00:51.610 --> 00:00:57.810
in Microsoft he developed the current he developed the cloud platform which is

00:00:57.810 --> 00:01:01.430
called the Microsoft Azure cloud platform, and

00:01:01.430 --> 00:01:03.660
that's the one that he'd been leading.

00:01:03.660 --> 00:01:07.130
He was a distinguished engineer at Sun Microsystems and then, now he is

00:01:07.130 --> 00:01:11.610
a distinguished engineer at Microsoft. And so, it's a great pleasure to have you

00:01:11.610 --> 00:01:13.573
&gt;&gt; Thank you Kishore for having me, and I just want

00:01:13.573 --> 00:01:19.180
to say that Kishore was a great professor. But a tough professor.

00:01:19.180 --> 00:01:23.020
&gt;&gt; [LAUGH] And I want him to tell, tell that to my students even now. [LAUGH]

00:01:23.020 --> 00:01:25.033
&gt;&gt; I'm sorry, but that's the truth.

00:01:25.033 --> 00:01:28.290
&gt;&gt; So Yousef, it's a pleasure always to meet you and, and see

00:01:28.290 --> 00:01:33.790
you. And, and, and the thing that is really exciting for me is

00:01:33.790 --> 00:01:38.858
being able to bring you back to this interview because this is, interview's

00:01:38.858 --> 00:01:40.540
going to be part of the course

00:01:40.540 --> 00:01:44.070
that I'm developing in advanced operating systems,

00:01:44.070 --> 00:01:47.800
and and, and you contributed a lot to that. And

00:01:47.800 --> 00:01:53.510
so what I want to do is first sort of rewind.

00:01:53.510 --> 00:01:54.180
&gt;&gt; 'Kay.

00:01:54.180 --> 00:02:02.680
&gt;&gt; Back to the the mid to late 80s. When you were a PhD student and

00:02:02.680 --> 00:02:04.970
and you developed, as part of your dissertation

00:02:04.970 --> 00:02:09.080
work, the cloud's distributed operating system. And then

00:02:09.080 --> 00:02:15.197
fast forward to 2013. You're heading the cloud Azure platform at

00:02:15.197 --> 00:02:20.810
Microsoft. Talk to us about your journey and, and if you

00:02:20.810 --> 00:02:25.930
can, connect the dots from what you did back then, to what you're doing now.

00:02:25.930 --> 00:02:30.950
&gt;&gt; You know, in many way, things have changed. In many other

00:02:30.950 --> 00:02:35.140
ways things have not changed at all. So the fundamentals are the same.

00:02:35.140 --> 00:02:37.750
The structure of an OS, the way you

00:02:37.750 --> 00:02:42.250
layer the system, the basic concepts of security, isolation.

00:02:44.390 --> 00:02:47.430
All these high separation policy of mechanisms, simplicity of

00:02:47.430 --> 00:02:50.020
design, recovery from failures and the like, all these

00:02:50.020 --> 00:02:53.480
concepts still apply. But at the same time, things

00:02:53.480 --> 00:02:55.860
have changed quite a bit. Give you an example.

00:02:56.910 --> 00:02:59.640
The product you mentioned that you and I worked

00:02:59.640 --> 00:03:02.440
on, clouds and, for 85, 86, to 89, it

00:03:02.440 --> 00:03:05.520
was a distributed system, true, but we had exactly

00:03:05.520 --> 00:03:09.510
three machines. Growing, it grew to four or five machines

00:03:09.510 --> 00:03:12.410
later on. That was it. I mean we had

00:03:12.410 --> 00:03:15.360
to manage three, four, five machines. Lots of algorithms that

00:03:15.360 --> 00:03:17.380
are very similar today but the SK wasn't the

00:03:17.380 --> 00:03:21.690
same. Fast forward to today. I can't even tell you

00:03:21.690 --> 00:03:23.730
how many machines, how many VMs run in a

00:03:23.730 --> 00:03:27.170
public lot. Millions, millions of VMs run all over the

00:03:27.170 --> 00:03:32.070
place. So the scale have been going up by orders

00:03:32.070 --> 00:03:35.410
and orders of magnitude. So the fundamentals are the same,

00:03:35.410 --> 00:03:38.480
but the problem at hand has changed, and of course, the physics and the

00:03:38.480 --> 00:03:44.460
how the industry moved. before, a given machine was what? A vax 11 750.

00:03:44.460 --> 00:03:45.985
&gt;&gt; Mm-hm.

00:03:45.985 --> 00:03:47.760
&gt;&gt; This is an old machine now of course.

00:03:47.760 --> 00:03:47.940
&gt;&gt; Mm-hm.

00:03:47.940 --> 00:03:50.316
&gt;&gt; Well, I mean, there many, many students

00:03:50.316 --> 00:03:52.570
may not even know about vax 11 750.

00:03:52.570 --> 00:03:56.157
&gt;&gt; You find them in the, in the history museum now. It used to be as big as a

00:03:56.157 --> 00:03:57.980
&gt;&gt; And the company doesn't exist. That we.

00:03:57.980 --> 00:04:00.516
&gt;&gt; Company's gone. The machine is gone but it was the best machine

00:04:00.516 --> 00:04:04.010
there was for awhile. As big as this. And probably my

00:04:04.010 --> 00:04:07.000
watch or my phone has order of magnitude more power than

00:04:07.000 --> 00:04:09.366
this. So, you know, again this is just how the industry

00:04:09.366 --> 00:04:12.360
moved. So again, the, the concepts are the same, the fundamentals

00:04:12.360 --> 00:04:16.670
are the same. Some of the papers that we now teach

00:04:16.670 --> 00:04:19.300
and learn from, are the same ones that were written back

00:04:19.300 --> 00:04:22.610
then, even before. But their application now has been applied to

00:04:22.610 --> 00:04:26.020
a much, much bigger scale. So, so my short answer here.

00:04:26.020 --> 00:04:28.800
And this scale, of course, you see everywhere. All

00:04:28.800 --> 00:04:31.560
of us have some devices, some smart phone, or some

00:04:31.560 --> 00:04:33.380
machine, or a PC and the like. And all these

00:04:33.380 --> 00:04:37.050
services out there are using the the, the, the connectivity,

00:04:37.050 --> 00:04:39.830
the computing, the power of the collective if you

00:04:39.830 --> 00:04:42.850
will. That's new as well. Before we used to apply

00:04:42.850 --> 00:04:46.700
all these concepts in the small. To a given machine.

00:04:46.700 --> 00:04:49.930
To a server. Now we apply them to a collective.

00:04:49.930 --> 00:04:51.270
&gt;&gt; So, is it fair to say

00:04:51.270 --> 00:04:57.240
that some of the techniques that were invented in the 80s,

00:04:57.240 --> 00:05:02.250
and the 90s are still applicable today? It is just that the scale has gone up.

00:05:02.250 --> 00:05:04.620
&gt;&gt; Very much so. I mean, the fundamentals of

00:05:04.620 --> 00:05:06.970
distributed computing, replication algorithms,

00:05:06.970 --> 00:05:11.510
consistence, leader election, synchronization, all

00:05:11.510 --> 00:05:16.300
these are of course the bread and butter of what we do. It's a given. But at the

00:05:16.300 --> 00:05:18.290
same time since things have changed, when we

00:05:18.290 --> 00:05:21.750
scale changes by one, two, three orders of

00:05:21.750 --> 00:05:24.950
magnitude some other things break. So we have

00:05:24.950 --> 00:05:27.470
to think in terms of maybe loose consistency instead

00:05:27.470 --> 00:05:29.950
of very absolute consistency. You would need to

00:05:29.950 --> 00:05:33.538
think of handling failures in a different way.

00:05:33.538 --> 00:05:36.520
Optimized for mean time to recovery versus making

00:05:36.520 --> 00:05:41.490
it perfect the first time through. So, as you

00:05:41.490 --> 00:05:44.910
know, in computer science, when change by this much, some

00:05:44.910 --> 00:05:47.260
things have to move, but the fundamentals are the same.

00:05:47.260 --> 00:05:51.530
&gt;&gt; That's a very comforting piece of news for

00:05:51.530 --> 00:05:53.880
the students because some of the papers that we

00:05:53.880 --> 00:05:56.950
read are from the 90s and the 80s and

00:05:56.950 --> 00:05:58.970
the classic papers and I tell them why they are.

00:05:58.970 --> 00:06:00.940
&gt;&gt; The classic even goes before that as you know.

00:06:00.940 --> 00:06:01.528
&gt;&gt; Right. Exactly.

00:06:01.528 --> 00:06:04.190
&gt;&gt; It, somebody said that was, wasn't me that nothing has

00:06:04.190 --> 00:06:06.320
been invented in our field for the last 20 years or so.

00:06:06.320 --> 00:06:07.221
&gt;&gt; Mm-hm.

00:06:07.221 --> 00:06:08.740
&gt;&gt; And, again, they're partially right.

00:06:08.740 --> 00:06:09.083
&gt;&gt; Mm-hm.

00:06:09.083 --> 00:06:10.050
&gt;&gt; The fundamentals are the same.

00:06:10.050 --> 00:06:11.390
&gt;&gt; Mm-hm.

00:06:11.390 --> 00:06:12.760
&gt;&gt; So you have to start with the basics.

00:06:12.760 --> 00:06:13.343
&gt;&gt; Mm-hm.

00:06:13.343 --> 00:06:14.150
&gt;&gt; And you build on top of them.

00:06:14.150 --> 00:06:19.120
&gt;&gt; Right, right. So, I, I wanted to ask specifically with respect to

00:06:19.120 --> 00:06:25.780
Microsoft Azure it uses the platform as a service model for the cloud.

00:06:27.710 --> 00:06:32.980
Now discuss why that model is the one that you chose.

00:06:32.980 --> 00:06:33.942
And what are the pros and cons of

00:06:33.942 --> 00:06:35.790
that, that model, vis-a-vis other kinds of models?

00:06:35.790 --> 00:06:39.020
&gt;&gt; Sure. So, I just want to tell you, in Azure we

00:06:39.020 --> 00:06:43.250
have the whole spectrum now. Platform as a service, infrastructure as a service,

00:06:43.250 --> 00:06:45.835
all combined to build, basically, services,

00:06:45.835 --> 00:06:48.920
so-called software as a service. First I

00:06:48.920 --> 00:06:51.050
want to start by telling you I'm not a fan of these terms.

00:06:51.050 --> 00:06:51.450
&gt;&gt; Okay.

00:06:51.450 --> 00:06:54.352
&gt;&gt; They are not technical at all. The industry at

00:06:54.352 --> 00:06:58.290
times wants to put things into separate segments. Separate segments.

00:06:58.290 --> 00:06:58.795
&gt;&gt; Mm-hm.

00:06:58.795 --> 00:06:59.780
&gt;&gt; But by, you know what the definition

00:06:59.780 --> 00:07:01.860
of them are. Platform services you typically have

00:07:01.860 --> 00:07:03.730
APIs and other services out of which you

00:07:03.730 --> 00:07:09.020
compose other services. Whereas infrastructure service is typically just

00:07:09.020 --> 00:07:12.530
comp, built VMs, virtual machines, and instantiate them.

00:07:12.530 --> 00:07:14.310
Real life, of course, is more complex than that.

00:07:14.310 --> 00:07:18.680
It's a combination. And Azure, like other systems

00:07:18.680 --> 00:07:23.388
support both. The long-term direct, direction, though, many applications

00:07:23.388 --> 00:07:27.150
are not written from scratch anymore. You compose existing

00:07:27.150 --> 00:07:30.430
components. There was a time, before I was in

00:07:30.430 --> 00:07:32.460
this field, you know? People used to write machine

00:07:32.460 --> 00:07:35.984
language, then assembly language. You wrote things like maybe in

00:07:35.984 --> 00:07:38.040
C and so forth. And you started with a

00:07:38.040 --> 00:07:40.990
program out of scratch from nothing. Now fast forward to

00:07:40.990 --> 00:07:44.310
today. Everything's composed. So you may have some storage

00:07:44.310 --> 00:07:49.090
services, some database services, some caching services, some identity services.

00:07:49.090 --> 00:07:50.550
And you compose your application out of that.

00:07:50.550 --> 00:07:51.775
&gt;&gt; Mm-hm.

00:07:51.775 --> 00:07:53.250
&gt;&gt; And that's really the way to go from now on.

00:07:53.250 --> 00:07:53.340
&gt;&gt; Right.

00:07:53.340 --> 00:07:55.520
&gt;&gt; And you compose things out those compositions.

00:07:55.520 --> 00:07:56.085
&gt;&gt; Mm-hm.

00:07:56.085 --> 00:07:57.090
&gt;&gt; To restful APIs and the like.

00:07:57.090 --> 00:07:58.520
&gt;&gt; Mm-hm.

00:07:58.520 --> 00:08:00.890
&gt;&gt; So in this spectrum I, that's why I am not a very fan of

00:08:00.890 --> 00:08:04.030
those terms. You know, yes they have a definition. Yes, you can look at them and

00:08:04.030 --> 00:08:06.330
apply them. But what's more interesting is

00:08:06.330 --> 00:08:09.210
to have a very large, scalable, reliable platform

00:08:09.210 --> 00:08:14.090
with rich services that allows you to run, if you want to, VMs, all the way

00:08:14.090 --> 00:08:16.180
to compose apps at a very high level.

00:08:16.180 --> 00:08:19.510
&gt;&gt; So in, in that sense what I'm hearing you

00:08:19.510 --> 00:08:23.080
say is that these distinctions are, are not that important.

00:08:23.080 --> 00:08:25.240
&gt;&gt; Architecturally, scientifically, whatever.

00:08:25.240 --> 00:08:25.670
&gt;&gt; There is no.

00:08:25.670 --> 00:08:26.770
&gt;&gt; I don't think so.

00:08:26.770 --> 00:08:28.220
&gt;&gt; There is more of a marketing.

00:08:28.220 --> 00:08:31.080
&gt;&gt; Marketing or, or a way to simplify concepts.

00:08:31.080 --> 00:08:32.150
&gt;&gt; Okay.

00:08:32.150 --> 00:08:36.130
&gt;&gt; Remember cloud computing is still early on. And

00:08:36.130 --> 00:08:39.330
we feel early sometimes people have to define terms

00:08:39.330 --> 00:08:43.140
just to be able to reason about the concepts. To me speaking

00:08:43.140 --> 00:08:45.690
for myself I really think it's far more important to look at the

00:08:45.690 --> 00:08:50.440
actual services APIs have and what can you do with them to

00:08:50.440 --> 00:08:53.390
make your life easier to develop applications and to run reliably at scale.

00:08:55.380 --> 00:08:59.660
&gt;&gt; Now students get to know about these giant scale

00:08:59.660 --> 00:09:04.350
services and how cloud computing is enabling the giant scale services.

00:09:06.470 --> 00:09:08.940
What do you see as the future evolution of

00:09:08.940 --> 00:09:13.243
system structure for providing distributed services? Is it going

00:09:13.243 --> 00:09:15.253
to be the same, more of the same, or

00:09:15.253 --> 00:09:18.350
is it going to be drastically different in the future?

00:09:18.350 --> 00:09:21.080
&gt;&gt; To be honest if I knew exactly I'd be probably

00:09:21.080 --> 00:09:24.250
lying. We, nobody knows, exactly. But we can look at the trend.

00:09:24.250 --> 00:09:25.271
&gt;&gt; Mm-hm.

00:09:25.271 --> 00:09:27.760
&gt;&gt; And the trend, as I alluded to, shifted from

00:09:27.760 --> 00:09:31.580
the old days where we used to have three machines

00:09:31.580 --> 00:09:32.220
in our data center.

00:09:32.220 --> 00:09:32.401
&gt;&gt; Mm-hm.

00:09:32.401 --> 00:09:33.490
&gt;&gt; You and I used to have three machines.

00:09:33.490 --> 00:09:34.520
&gt;&gt; Yeah.

00:09:34.520 --> 00:09:37.770
&gt;&gt; We used to have mainframes bigger than this room we're in at the

00:09:37.770 --> 00:09:42.860
moment. Is shifting to more of a scale out model. Where it's built out

00:09:42.860 --> 00:09:46.570
of smaller servers, off the shelf components,

00:09:46.570 --> 00:09:50.410
and many, many of them. That's dictating

00:09:50.410 --> 00:09:53.000
a trend in application structure and format

00:09:53.000 --> 00:09:56.948
that's different than before. You are no longer

00:09:56.948 --> 00:10:00.182
looking at big SAP boxes and an app that optimizes a

00:10:00.182 --> 00:10:04.210
big SAP box. Looking at an application that may have multiple

00:10:04.210 --> 00:10:07.860
cores in a box but has to live across boxes, across

00:10:07.860 --> 00:10:09.840
servers, and has to deal with failures, and has to deal with

00:10:12.360 --> 00:10:18.940
the network, as as a, as a reality. Latency is there and so forth. So the shift

00:10:18.940 --> 00:10:23.440
will be more and more towards scale out, horizontal scaling, versus scale up.

00:10:23.440 --> 00:10:26.170
And more trend towards simplicity where failures

00:10:26.170 --> 00:10:28.315
will happen and you have to optimize for

00:10:28.315 --> 00:10:32.000
recovery from failures and to make forward progress.

00:10:32.000 --> 00:10:35.530
Said differently all our apps today are what?

00:10:37.450 --> 00:10:40.589
You know, back end services to your phone, to your

00:10:40.589 --> 00:10:44.043
PC, to your laptop, to your pad, et cetera. They

00:10:44.043 --> 00:10:47.660
expect the network to be always there. They expect the

00:10:47.660 --> 00:10:49.600
servers to be always there. Of course, this is not

00:10:49.600 --> 00:10:52.800
true, but you have to design it as it, to

00:10:52.800 --> 00:10:55.600
make sure it can handle failures, for it to appear

00:10:55.600 --> 00:10:58.668
to be always there. So this disconnected operation of the

00:10:58.668 --> 00:11:02.660
network is important. Caching and, and, the, and the host stack

00:11:02.660 --> 00:11:05.100
is important. And when a component fails,

00:11:05.100 --> 00:11:06.550
you need to have to state somewhere else.

00:11:06.550 --> 00:11:06.870
&gt;&gt; Mm-hm.

00:11:06.870 --> 00:11:08.760
&gt;&gt; The truth has to be in the network, not anywhere else.

00:11:08.760 --> 00:11:09.192
&gt;&gt; Mm-hm. Mm-hm.

00:11:09.192 --> 00:11:11.370
&gt;&gt; So those, I think, trends will only accelerate.

00:11:11.370 --> 00:11:12.636
&gt;&gt; Mm-hm. Mm-hm. Mm-hm.

00:11:12.636 --> 00:11:15.450
&gt;&gt; Exactly where they're going to be in ten years from now, I'm not sure.

00:11:15.450 --> 00:11:15.812
&gt;&gt; Mm-hm.

00:11:15.812 --> 00:11:17.280
&gt;&gt; Five years, probably like I described.

00:11:17.280 --> 00:11:21.220
&gt;&gt; Mm-hm. Now, so I think you started touching on this already in your

00:11:21.220 --> 00:11:27.770
answer. So what do you see changing in the data centers for catering to these

00:11:27.770 --> 00:11:30.148
kinds of future evolution of distributed services?

00:11:30.148 --> 00:11:35.045
&gt;&gt; Uh,a number of things are changing in a data center. First given the

00:11:35.045 --> 00:11:40.230
accounts of scale you have by having the horizontal model, you have a, an

00:11:40.230 --> 00:11:45.810
increasing concentration of computing power in a, effectively in a flat network.

00:11:45.810 --> 00:11:47.830
&gt;&gt; So, when you said horizontal model.

00:11:47.830 --> 00:11:48.130
&gt;&gt; Yes.

00:11:48.130 --> 00:11:50.230
&gt;&gt; Perhaps you may want to elaborate it for the students.

00:11:50.230 --> 00:11:52.930
&gt;&gt; Okay, so on a horizontal model if you want extra

00:11:52.930 --> 00:11:56.650
capacity you end up adding more servers to a

00:11:56.650 --> 00:12:01.470
network. So, you may start with one server with maybe

00:12:01.470 --> 00:12:03.750
one CPU with multiple cores and a fixed amount

00:12:03.750 --> 00:12:06.780
of memory. If you want more capacity, like extra memory

00:12:06.780 --> 00:12:09.200
or extra cores, you don't open up the box

00:12:09.200 --> 00:12:11.660
and add to it. There's nothing to add to it,

00:12:11.660 --> 00:12:14.970
the box is closed. You add more boxes. I'm

00:12:14.970 --> 00:12:17.730
being figurative here, but you know what I mean. So,

00:12:17.730 --> 00:12:20.070
this is as, to contrast how it used to be

00:12:20.070 --> 00:12:22.600
in the past where you bought one big mainframe, one big

00:12:22.600 --> 00:12:25.100
chassis, and you added more stuff inside it to make it

00:12:25.100 --> 00:12:28.375
bigger. So, you have to know networks. You have to know

00:12:28.375 --> 00:12:32.672
distributed systems. It's a fact of life, basically. So the trend

00:12:32.672 --> 00:12:34.790
is basically to go that way. If, if you go to

00:12:34.790 --> 00:12:38.292
a modern data center now, a truly modern one, you're going

00:12:38.292 --> 00:12:42.590
to find a network which is fairly flat network where it,

00:12:42.590 --> 00:12:47.410
it caters both to south, east traffic, and west,

00:12:47.410 --> 00:12:50.300
east, west traffic. Which in different words, it can

00:12:50.300 --> 00:12:52.860
do well to take requests in and send them

00:12:52.860 --> 00:12:56.180
back out, or to do traffic within the network.

00:12:56.180 --> 00:12:57.970
&gt;&gt; Meaning computations that are going inside.

00:12:57.970 --> 00:12:59.330
&gt;&gt; Computation and data replication.

00:12:59.330 --> 00:13:00.650
&gt;&gt; Okay.

00:13:00.650 --> 00:13:02.652
&gt;&gt; So that's a trend that's definitely happening, so,

00:13:02.652 --> 00:13:07.560
scale out model of many, many servers. Typically commodity service,

00:13:07.560 --> 00:13:09.866
which is fairly small. They increase of course

00:13:09.866 --> 00:13:12.240
with Moore's law, but still are fairly small. A

00:13:12.240 --> 00:13:13.770
network which is fairly flat, so you you

00:13:13.770 --> 00:13:16.145
can do a lot of traffic between them. And

00:13:16.145 --> 00:13:18.690
applications that are basically laid over that network.

00:13:19.700 --> 00:13:23.090
And with the app itself is mostly, mostly structured

00:13:23.090 --> 00:13:25.790
in way it can withstand any piece going

00:13:25.790 --> 00:13:30.424
down. And the state, replicated in different data tiers.

