WEBVTT
Kind: captions
Language: en

00:00:00.820 --> 00:00:04.560
Okay, that's a good introduction to indexes, but there is more and

00:00:04.560 --> 00:00:09.430
in the section we will cover composite indexes. Remember the single property

00:00:09.430 --> 00:00:14.790
index we looked at, that had the city as to value. A single property index is

00:00:14.790 --> 00:00:20.440
also called a built-in index. Data store can in many cases combine results

00:00:20.440 --> 00:00:25.830
from different built in indexes to provide a response to a query, but there

00:00:25.830 --> 00:00:30.580
are cases where this is not possible. That's when we need a composite index.

00:00:31.750 --> 00:00:35.740
In fact we have already used composite indexes in conference central for

00:00:35.740 --> 00:00:40.780
this query. Retrieve all conferences, filter by city and topic. And

00:00:40.780 --> 00:00:46.690
sort by name. This is a composite index, because the built in indexes for city,

00:00:46.690 --> 00:00:52.950
topic, and name, cannot be combined to generate the result. For this to work,

00:00:52.950 --> 00:00:57.550
an index table consisting of multiple values and combination must be created.

00:00:57.550 --> 00:01:02.810
This is exactly what a composite index is. So how are composite indexes built?

00:01:02.810 --> 00:01:09.510
There are two different ways. The first way is to add an index to an index file.

00:01:09.510 --> 00:01:12.440
[UNKNOWN] a little bit differently depending on which language you use, so

00:01:12.440 --> 00:01:17.030
you will see how to do this in one of the exercises. The other way is to

00:01:17.030 --> 00:01:21.800
actually run your application locally on your development server. In this case,

00:01:21.800 --> 00:01:25.520
if App Engine encounters a query that requires the composite index,

00:01:25.520 --> 00:01:27.870
it will automatically update the index file.

00:01:27.870 --> 00:01:32.170
When you later deploy App Engine, this index file will be uploaded as well.

00:01:32.170 --> 00:01:36.980
So it will also exist when executing on App Engine. All right, it's time for

00:01:36.980 --> 00:01:39.530
an exercise where you will explore composite indexes

