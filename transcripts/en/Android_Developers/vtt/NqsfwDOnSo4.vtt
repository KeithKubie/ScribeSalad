WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.666
MICHAEL SILISKI: So
I'm Michael Siliski,

00:00:01.666 --> 00:00:04.430
product management for apps
and games on Google Play.

00:00:04.430 --> 00:00:06.247
Along with Ellie
Powers, I'd like

00:00:06.247 --> 00:00:08.330
to talk to you a little
bit about building better,

00:00:08.330 --> 00:00:10.440
about how to create
great quality user

00:00:10.440 --> 00:00:12.125
experiences in your apps.

00:00:14.960 --> 00:00:17.210
So look, as you
guys know, quality

00:00:17.210 --> 00:00:20.560
is the foundation of a
successful mobile app business.

00:00:20.560 --> 00:00:22.950
Users expect quality.

00:00:22.950 --> 00:00:25.312
And it's not enough in
today's mobile app world just

00:00:25.312 --> 00:00:27.020
to get people to
install your app, right?

00:00:27.020 --> 00:00:29.020
You've got to create
features, create

00:00:29.020 --> 00:00:31.020
user experiences that get
them coming back again

00:00:31.020 --> 00:00:32.270
and again and again.

00:00:32.270 --> 00:00:33.672
You've got to get
them to go tell

00:00:33.672 --> 00:00:34.880
their friends about your app.

00:00:34.880 --> 00:00:39.170
You've got to get them to want
to spend money in your app.

00:00:39.170 --> 00:00:42.620
And we know, and we've seen
consistently over the years

00:00:42.620 --> 00:00:48.220
that the higher the quality of
user experience in your app,

00:00:48.220 --> 00:00:50.330
the more money users spend.

00:00:50.330 --> 00:00:54.980
The better your star rating
on the Google Play Store,

00:00:54.980 --> 00:00:56.870
the more money you make.

00:00:56.870 --> 00:01:01.090
So it's really worth you guys
investing your precious time

00:01:01.090 --> 00:01:03.950
and energy in understanding
what users love

00:01:03.950 --> 00:01:07.380
about your apps, what issues
they have in your apps,

00:01:07.380 --> 00:01:11.210
and going out and proactively
managing user feedback.

00:01:11.210 --> 00:01:14.820
And if you do that,
that investment

00:01:14.820 --> 00:01:17.960
will pay off for you guys in
the long term on your business

00:01:17.960 --> 00:01:20.580
bottom line.

00:01:20.580 --> 00:01:23.590
So there's a lot of different
types of app quality, right?

00:01:23.590 --> 00:01:26.040
But what we see is, as
we look at the apps that

00:01:26.040 --> 00:01:28.600
are most successful
in Google Play,

00:01:28.600 --> 00:01:31.027
there are four main
aspects to what

00:01:31.027 --> 00:01:33.027
they do in the quality
of their user experience.

00:01:36.010 --> 00:01:39.680
First, they solve real
user needs with features

00:01:39.680 --> 00:01:42.090
that users love.

00:01:42.090 --> 00:01:46.140
Second, they have not
only a beautiful design,

00:01:46.140 --> 00:01:51.930
but their apps are easy to
use and are a joy to use.

00:01:51.930 --> 00:01:54.920
Third, they're reliable.

00:01:54.920 --> 00:01:57.940
They don't crash.

00:01:57.940 --> 00:01:59.470
But they're not data hogs.

00:01:59.470 --> 00:02:01.520
And they're not
battery hogs, either.

00:02:01.520 --> 00:02:03.910
And fourth, they innovate.

00:02:03.910 --> 00:02:06.930
They stand out from the crowd
by building on top of the latest

00:02:06.930 --> 00:02:08.419
Android futures.

00:02:08.419 --> 00:02:11.350
So we think about applying
these across the entire range

00:02:11.350 --> 00:02:16.300
of an app lifecycle, from design
to development to distribution.

00:02:16.300 --> 00:02:19.910
And to tell you about how
you guys can apply those four

00:02:19.910 --> 00:02:23.050
aspects of app quality across
the lifecycle of your app,

00:02:23.050 --> 00:02:27.200
I'm going to invite up our
product manager for developers,

00:02:27.200 --> 00:02:28.610
the one and only Ellie Powers.

00:02:32.060 --> 00:02:33.710
ELLIE POWERS: Thanks, Michael.

00:02:33.710 --> 00:02:34.970
Thank you, everybody.

00:02:34.970 --> 00:02:37.550
So as Michael
mentioned, we're going

00:02:37.550 --> 00:02:39.710
to go through each of these
three different phases

00:02:39.710 --> 00:02:42.660
and talk all about how
to improve quality.

00:02:42.660 --> 00:02:45.220
So let's get
started with design.

00:02:45.220 --> 00:02:48.560
Does anyone remember last
year's talk about materialism?

00:02:48.560 --> 00:02:52.130
So this year, if you don't
remember it or you weren't here

00:02:52.130 --> 00:02:53.689
we're going to do
a quick refresher.

00:02:53.689 --> 00:02:56.230
Then, we're going to see what
developers like you are already

00:02:56.230 --> 00:02:57.827
doing with material design.

00:02:57.827 --> 00:02:59.660
And we're going to share
a couple of updates

00:02:59.660 --> 00:03:02.140
about what's new in the
material design world.

00:03:02.140 --> 00:03:05.560
So material design
is a design system

00:03:05.560 --> 00:03:09.520
that's about governing
how UI should move, feel,

00:03:09.520 --> 00:03:11.420
and adapt to a user's touch.

00:03:11.420 --> 00:03:13.020
If you want to
learn more check out

00:03:13.020 --> 00:03:15.610
developer.android.com/design.

00:03:15.610 --> 00:03:18.180
It's a great first
starting point.

00:03:18.180 --> 00:03:20.760
And material design
has four principles.

00:03:20.760 --> 00:03:23.430
So the first one is
tangible surfaces.

00:03:23.430 --> 00:03:26.780
The whole idea here is
that the way an app works

00:03:26.780 --> 00:03:29.320
should be basically the same
as if that app was made out

00:03:29.320 --> 00:03:32.200
of real physical objects
in the real world.

00:03:32.200 --> 00:03:34.200
The second one is
print-like design.

00:03:34.200 --> 00:03:38.430
The content should be bold,
graphic, and very intentional.

00:03:38.430 --> 00:03:40.480
You can use the
material design look

00:03:40.480 --> 00:03:44.290
and refine it to fit and
reflect your app's brand.

00:03:44.290 --> 00:03:46.270
And third, meaningful motion.

00:03:46.270 --> 00:03:49.500
You can use motion in your app
to focus the user's attention,

00:03:49.500 --> 00:03:52.340
and to give continuity as a
user moves from one screen

00:03:52.340 --> 00:03:54.090
to another in your app.

00:03:54.090 --> 00:03:56.071
And fourth, adaptive design.

00:03:56.071 --> 00:03:57.570
The whole point
here is that you can

00:03:57.570 --> 00:03:59.660
create a layout that
will feel familiar,

00:03:59.660 --> 00:04:04.470
whether a user accesses your
app on a phone, a tablet, a TV,

00:04:04.470 --> 00:04:08.670
Android wear, or even
an Android Auto car.

00:04:08.670 --> 00:04:11.240
The user shouldn't have to
relearn the design of your app

00:04:11.240 --> 00:04:13.700
every time they move to
a new device category.

00:04:13.700 --> 00:04:15.760
So we're going to watch
a little animation now.

00:04:15.760 --> 00:04:17.959
And see if you can spot
these four principles

00:04:17.959 --> 00:04:20.317
as we go through it.

00:04:20.317 --> 00:04:21.309
[VIDEO PLAYBACK]

00:04:21.309 --> 00:04:24.781
[MUSIC PLAYING]

00:05:16.930 --> 00:05:18.490
So over the past
year and a half,

00:05:18.490 --> 00:05:20.350
we've seen a huge
amount of creativity

00:05:20.350 --> 00:05:22.740
from Android developers
just like you

00:05:22.740 --> 00:05:24.460
as they start using
material design

00:05:24.460 --> 00:05:26.810
to make their apps more
beautiful and also easier

00:05:26.810 --> 00:05:27.780
to use.

00:05:27.780 --> 00:05:30.560
And if you're interested,
you can go to this URL here

00:05:30.560 --> 00:05:33.380
to check out some of the best
apps using material design

00:05:33.380 --> 00:05:36.020
and get inspiration
for your own apps.

00:05:36.020 --> 00:05:37.910
So let's talk about
one app in particular

00:05:37.910 --> 00:05:41.350
that's had some huge success
coming from material design.

00:05:41.350 --> 00:05:42.657
So here's Trello.

00:05:42.657 --> 00:05:44.240
They're an app that
allows you to keep

00:05:44.240 --> 00:05:45.551
track of your biggest projects.

00:05:45.551 --> 00:05:48.050
And they're super-useful when
you're working with a big team

00:05:48.050 --> 00:05:50.370
and you found out that
long e-mail threads

00:05:50.370 --> 00:05:53.080
and out-of-date spreadsheets
are not working for you.

00:05:53.080 --> 00:05:56.650
So Trello used material design
as a big part of an investment

00:05:56.650 --> 00:05:59.090
that they made in revamping
their Android app.

00:05:59.090 --> 00:06:01.990
And their mobile lead said
that the focus on simplicity

00:06:01.990 --> 00:06:06.030
was a big part of this
material design refresh.

00:06:06.030 --> 00:06:07.930
And material design
doesn't just look good.

00:06:07.930 --> 00:06:10.280
It also brought big
results for Trello.

00:06:10.280 --> 00:06:13.180
You can see here that there was
a 10% increase in the number

00:06:13.180 --> 00:06:17.750
of sessions per user per
week, 42% more boards created

00:06:17.750 --> 00:06:21.370
for each user session,
and 63% more people

00:06:21.370 --> 00:06:23.360
added boards in every session.

00:06:23.360 --> 00:06:26.220
So we think this happened
because the material design

00:06:26.220 --> 00:06:29.040
refresh helped simplify
tasks in the app,

00:06:29.040 --> 00:06:32.260
and also improved
feature discoverability.

00:06:32.260 --> 00:06:34.590
And users said that
the UI was a lot more

00:06:34.590 --> 00:06:38.070
fun and engaging
to use, as well.

00:06:38.070 --> 00:06:40.600
So last year, we heard
from developers, hey,

00:06:40.600 --> 00:06:43.410
material design looks really
fun and cool and great.

00:06:43.410 --> 00:06:44.310
But you know what?

00:06:44.310 --> 00:06:46.020
I'm going to need a
lot more resources

00:06:46.020 --> 00:06:49.880
to make it easier for me to make
my design work in the material

00:06:49.880 --> 00:06:50.380
design.

00:06:50.380 --> 00:06:51.500
And we totally heard you.

00:06:51.500 --> 00:06:52.430
We totally get that.

00:06:52.430 --> 00:06:56.300
So this year, we've introduced
some new resources here

00:06:56.300 --> 00:06:58.630
on the left, which I'm
going to go through today.

00:06:58.630 --> 00:07:00.810
And we've also expanded
the material design

00:07:00.810 --> 00:07:04.120
spec to include a whole bunch
of cool new widgets, layouts,

00:07:04.120 --> 00:07:06.390
et cetera, which are
listed on the right.

00:07:06.390 --> 00:07:09.770
I highly recommend that you
go check them out online.

00:07:09.770 --> 00:07:13.130
So if you haven't been
to design.google.com yet,

00:07:13.130 --> 00:07:14.770
you should definitely
check it out.

00:07:14.770 --> 00:07:16.480
This is Google's
first website that's

00:07:16.480 --> 00:07:19.989
completely dedicated to every
aspect of design at Google.

00:07:19.989 --> 00:07:21.780
And you can see everything
that I'm talking

00:07:21.780 --> 00:07:23.620
about today on that website.

00:07:23.620 --> 00:07:25.880
You can see what's new
in material design,

00:07:25.880 --> 00:07:29.830
get detailed guidelines,
and even find sample code.

00:07:29.830 --> 00:07:32.070
We wanted to make
designers' lives easier.

00:07:32.070 --> 00:07:34.780
And generating icons used
to take a lot of time,

00:07:34.780 --> 00:07:38.160
but now we're offering a big
new library of material design

00:07:38.160 --> 00:07:39.320
optimized icons.

00:07:39.320 --> 00:07:41.990
And this is a great place
to get started for your app.

00:07:41.990 --> 00:07:44.730
Another benefit of using
icons from this new library

00:07:44.730 --> 00:07:47.080
is that users may already
recognize these icons

00:07:47.080 --> 00:07:51.800
from other apps, making
discoverability easier for you.

00:07:51.800 --> 00:07:53.570
We also heard from
a lot of developers

00:07:53.570 --> 00:07:55.310
that they wanted to
get detailed design

00:07:55.310 --> 00:07:57.500
specs on the wide range
of Android devices

00:07:57.500 --> 00:07:58.750
that are available.

00:07:58.750 --> 00:08:01.410
So this new Devices tool
gives you a lot of information

00:08:01.410 --> 00:08:03.470
that you've been
missing, even including

00:08:03.470 --> 00:08:07.850
the recommended material design
guidelines for each device.

00:08:07.850 --> 00:08:09.790
Now, I think the
biggest request I

00:08:09.790 --> 00:08:13.050
heard last year was, wouldn't
it be great if you could just

00:08:13.050 --> 00:08:14.920
provide a lot of
reusable libraries

00:08:14.920 --> 00:08:16.810
for these material
design components

00:08:16.810 --> 00:08:18.520
so that each team
building their app

00:08:18.520 --> 00:08:20.270
doesn't have to build
the same stuff again

00:08:20.270 --> 00:08:21.650
and again from scratch?

00:08:21.650 --> 00:08:22.670
And we totally agree.

00:08:22.670 --> 00:08:24.419
We don't want anyone
here to have to build

00:08:24.419 --> 00:08:25.620
the same stuff from scratch.

00:08:25.620 --> 00:08:28.280
So we've created these
new support libraries.

00:08:28.280 --> 00:08:31.800
Easiest way to use them is the
Android Studio STK Manager,

00:08:31.800 --> 00:08:33.684
which we'll talk about
a little bit later.

00:08:33.684 --> 00:08:36.350
And if you want to get a look at
all of the old and new patterns

00:08:36.350 --> 00:08:38.390
available in these
support libraries,

00:08:38.390 --> 00:08:41.159
which are backwards-compatible
with older devices,

00:08:41.159 --> 00:08:44.230
you can go to
google.com/design/spec.

00:08:44.230 --> 00:08:49.634
And this has screenshots, tips,
and a bunch more information.

00:08:49.634 --> 00:08:52.050
And if you're looking for a
whole overview and an easy way

00:08:52.050 --> 00:08:54.960
to get started, we have
a new course on Udacity.

00:08:54.960 --> 00:08:56.989
It's called Android
Design for Developers.

00:08:56.989 --> 00:08:58.530
And it'll walk you
through everything

00:08:58.530 --> 00:09:00.420
you need to know
about material design

00:09:00.420 --> 00:09:03.670
so you're ready to go and write
code effectively and create

00:09:03.670 --> 00:09:06.200
beautiful, beautiful
layouts and get the most out

00:09:06.200 --> 00:09:08.480
of material design.

00:09:08.480 --> 00:09:08.980
OK.

00:09:08.980 --> 00:09:09.950
So that was design.

00:09:09.950 --> 00:09:12.920
Now, we're going to move on
and talk about development.

00:09:12.920 --> 00:09:17.130
So of course, the big news this
year is Android Marshmallow.

00:09:17.130 --> 00:09:17.740
It's cute.

00:09:17.740 --> 00:09:18.390
It's huggable.

00:09:18.390 --> 00:09:19.430
It's sweet.

00:09:19.430 --> 00:09:22.250
This latest Android release
also brings big changes

00:09:22.250 --> 00:09:23.380
to developers.

00:09:23.380 --> 00:09:26.880
And I want to highlight the two
most important changes today.

00:09:26.880 --> 00:09:29.870
The first one is the new
runtime permissions model,

00:09:29.870 --> 00:09:33.050
and, also, the second one is
some new features that help

00:09:33.050 --> 00:09:36.010
save power on users' devices.

00:09:36.010 --> 00:09:38.550
So let's talk about permissions.

00:09:38.550 --> 00:09:41.250
If you want to use any of the
Android Marshmallow APIs--

00:09:41.250 --> 00:09:44.240
that is, API 23-- you'll
need to transition your app

00:09:44.240 --> 00:09:46.780
to use this new runtime
permissions model.

00:09:46.780 --> 00:09:49.560
And runtime permissions are
great because they give users

00:09:49.560 --> 00:09:51.660
more control over their
private information.

00:09:51.660 --> 00:09:54.220
We actually heard some
people wanting this last year

00:09:54.220 --> 00:09:55.480
at Play [INAUDIBLE].

00:09:55.480 --> 00:09:57.480
And they're also
great for developers,

00:09:57.480 --> 00:09:59.630
because they can help
improve your apps' install

00:09:59.630 --> 00:10:02.260
and update rates, too.

00:10:02.260 --> 00:10:05.490
So does everyone
recognize this flow

00:10:05.490 --> 00:10:08.110
from the version of
Android that we use today?

00:10:08.110 --> 00:10:09.910
So when you're
installing an app,

00:10:09.910 --> 00:10:12.930
users have to accept
all the permissions.

00:10:12.930 --> 00:10:14.670
What happens on
screen number 2 can be

00:10:14.670 --> 00:10:16.050
a little scary for some people.

00:10:16.050 --> 00:10:17.500
It's like a big
roadblock, right?

00:10:17.500 --> 00:10:19.662
So this is what a
user on Lollipop sees.

00:10:19.662 --> 00:10:21.370
And you can see in
the second screen they

00:10:21.370 --> 00:10:23.260
have to agree to everything.

00:10:23.260 --> 00:10:25.094
And if there's even one
piece of information

00:10:25.094 --> 00:10:26.843
here that they aren't
comfortable sharing,

00:10:26.843 --> 00:10:29.510
the only thing that they can do
about it is cancel the install

00:10:29.510 --> 00:10:32.710
and go find a different app that
doesn't have that permission.

00:10:32.710 --> 00:10:34.250
Not ideal.

00:10:34.250 --> 00:10:37.460
So with Marshmallow, we
made that scary dialog box

00:10:37.460 --> 00:10:40.260
unnecessary so that the user can
just install the app straight

00:10:40.260 --> 00:10:41.070
away.

00:10:41.070 --> 00:10:42.920
They won't have to
agree to any permissions

00:10:42.920 --> 00:10:44.250
when they install the app.

00:10:44.250 --> 00:10:46.250
And when they launch the
app for the first time,

00:10:46.250 --> 00:10:48.380
they can access
permissions as needed.

00:10:48.380 --> 00:10:50.300
And the app will just
show prompts to them

00:10:50.300 --> 00:10:53.860
which they can
accept as they need.

00:10:53.860 --> 00:10:56.576
So this is what it looks
like when a user runs

00:10:56.576 --> 00:10:57.700
the app for the first time.

00:10:57.700 --> 00:10:59.560
These are what the
prompts look like.

00:10:59.560 --> 00:11:01.450
And then, the user can,
as you would expect,

00:11:01.450 --> 00:11:03.830
click Allow or Deny.

00:11:03.830 --> 00:11:05.829
And here's an important detail.

00:11:05.829 --> 00:11:07.620
The first time the
permission is requested,

00:11:07.620 --> 00:11:08.830
the user might click Deny.

00:11:08.830 --> 00:11:09.330
Right?

00:11:09.330 --> 00:11:10.090
It could happen.

00:11:10.090 --> 00:11:12.340
And that could be because
the user doesn't understand,

00:11:12.340 --> 00:11:14.631
or maybe they're just on the
run and they didn't really

00:11:14.631 --> 00:11:15.640
read the screen.

00:11:15.640 --> 00:11:17.640
And the first time
that Deny happens,

00:11:17.640 --> 00:11:19.290
it's really not a
big deal for you.

00:11:19.290 --> 00:11:21.930
You can just have the app
request that permission

00:11:21.930 --> 00:11:23.210
again later.

00:11:23.210 --> 00:11:27.130
And the second time that Deny
happens, that dialogue happens,

00:11:27.130 --> 00:11:30.380
you'll get that Do Not Ask Again
option that you can see there.

00:11:30.380 --> 00:11:32.550
And you have to be a
little bit careful,

00:11:32.550 --> 00:11:34.702
because if the user
checks this checkbox,

00:11:34.702 --> 00:11:35.910
they won't be prompted again.

00:11:35.910 --> 00:11:37.326
And instead, they're
going to need

00:11:37.326 --> 00:11:39.520
to go to Settings if
they want to enable

00:11:39.520 --> 00:11:41.800
that permission later.

00:11:41.800 --> 00:11:44.960
So speaking of settings, this
is really important here.

00:11:44.960 --> 00:11:48.370
Any user on Android Marshmallow
can go to the Settings page

00:11:48.370 --> 00:11:51.310
to enable or disable
permissions for any app

00:11:51.310 --> 00:11:52.830
on a Marshmallow device.

00:11:52.830 --> 00:11:54.840
And that includes even
apps that have not

00:11:54.840 --> 00:11:57.900
been updated to that new
runtime permissions model.

00:11:57.900 --> 00:12:00.380
So if they go to one of
those non-updated apps

00:12:00.380 --> 00:12:03.390
and they do disable
a certain permission,

00:12:03.390 --> 00:12:04.420
they will see a warning.

00:12:04.420 --> 00:12:06.230
But then, after
that, your app may

00:12:06.230 --> 00:12:08.510
run in some unexpected ways.

00:12:08.510 --> 00:12:10.150
And this can be
confusing to users.

00:12:10.150 --> 00:12:12.000
So we highly recommend
that in order

00:12:12.000 --> 00:12:13.740
to make sure that your
app runs in a very

00:12:13.740 --> 00:12:16.770
predictable and organized
fashion on Marshmallow devices,

00:12:16.770 --> 00:12:19.850
that you go and move to the
runtime permissions model

00:12:19.850 --> 00:12:22.340
as soon as you can.

00:12:22.340 --> 00:12:23.860
And here's another benefit.

00:12:23.860 --> 00:12:25.780
It used to be-- has
anyone run into this?

00:12:25.780 --> 00:12:27.430
You add a new
permission to your app,

00:12:27.430 --> 00:12:29.280
and then the update
rate is just not

00:12:29.280 --> 00:12:31.140
moving as smoothly
as it used to.

00:12:31.140 --> 00:12:33.290
Well, we've definitely
been aware of that,

00:12:33.290 --> 00:12:37.150
too so we've decided that in
the new runtime permissions

00:12:37.150 --> 00:12:38.990
models, once again,
the user has to agree

00:12:38.990 --> 00:12:41.410
to each permission
individually at runtime.

00:12:41.410 --> 00:12:43.610
Those updates will
keep flowing through

00:12:43.610 --> 00:12:46.606
without any sort of block.

00:12:46.606 --> 00:12:47.980
So now, we're
going to talk about

00:12:47.980 --> 00:12:49.980
when you're moving to the
new permissions model,

00:12:49.980 --> 00:12:52.527
how should you think
about the user experience?

00:12:52.527 --> 00:12:54.610
You're going to be seeing
these prompts for users.

00:12:54.610 --> 00:12:57.760
But there's good ways to do it
and not so good ways to do it.

00:12:57.760 --> 00:13:00.490
Users are definitely more
likely to agree to permissions

00:13:00.490 --> 00:13:03.440
when they understand why those
permissions are being used,

00:13:03.440 --> 00:13:06.480
so we're going to walk
through four different ways

00:13:06.480 --> 00:13:08.130
that you can
introduce permissions

00:13:08.130 --> 00:13:13.380
prompts into your app so that
users' expectations are met.

00:13:13.380 --> 00:13:16.880
So the first one, some apps have
a tutorial at the beginning.

00:13:16.880 --> 00:13:19.390
And they'll explain the
major functions of the app.

00:13:19.390 --> 00:13:22.230
And this can be a great
place to include information

00:13:22.230 --> 00:13:25.050
about why important permissions
are going to be requested,

00:13:25.050 --> 00:13:26.550
so that then, later
in the tutorial,

00:13:26.550 --> 00:13:28.990
when you request those
permissions, the user won't be

00:13:28.990 --> 00:13:30.480
surprised, because
they understand

00:13:30.480 --> 00:13:32.670
the context of your
app a bit better,

00:13:32.670 --> 00:13:35.220
even though they
haven't used it before.

00:13:35.220 --> 00:13:38.060
Now, if your app is doing
something so obvious,

00:13:38.060 --> 00:13:40.880
like a messaging app asking
for an SMS permission,

00:13:40.880 --> 00:13:43.390
it might be OK just
to prompt immediately

00:13:43.390 --> 00:13:45.440
on the first run of the app.

00:13:45.440 --> 00:13:46.820
But this can be
a dangerous game,

00:13:46.820 --> 00:13:48.195
because if you
think it's obvious

00:13:48.195 --> 00:13:50.250
and the user doesn't,
now you have a messaging

00:13:50.250 --> 00:13:51.720
app that can't send SMSes.

00:13:51.720 --> 00:13:53.460
And that's probably not great.

00:13:53.460 --> 00:13:57.010
So you have to be very sure that
it's very, very clear to users.

00:13:57.010 --> 00:13:59.840
Otherwise, consider
the tutorial.

00:13:59.840 --> 00:14:01.810
So that was about asking
when the user first

00:14:01.810 --> 00:14:02.890
launches the app.

00:14:02.890 --> 00:14:05.950
But in many cases, apps only
need a certain permission

00:14:05.950 --> 00:14:08.200
when they're using
particular features.

00:14:08.200 --> 00:14:09.750
So now, let's talk about that.

00:14:09.750 --> 00:14:12.670
So the first time that a user
uses one of those features that

00:14:12.670 --> 00:14:15.130
requires a permission--
like in this case,

00:14:15.130 --> 00:14:17.880
requesting the microphone
permission to record a voice

00:14:17.880 --> 00:14:21.690
note-- it makes sense to prompt
the user right when they take

00:14:21.690 --> 00:14:23.360
that action, and not before.

00:14:23.360 --> 00:14:25.010
And so users, for
example, who are not

00:14:25.010 --> 00:14:27.520
taking voice notes never
need to see this dialog,

00:14:27.520 --> 00:14:29.255
never need the
microphone permission.

00:14:29.255 --> 00:14:30.630
But if they are
going to do that,

00:14:30.630 --> 00:14:32.338
then you can just
request it right there.

00:14:32.338 --> 00:14:35.890
And it's very clear to
the user what's happened.

00:14:35.890 --> 00:14:37.560
Now, in other
cases, the user will

00:14:37.560 --> 00:14:39.380
need to understand
a little bit more

00:14:39.380 --> 00:14:41.780
and get more education about
how a feature will work

00:14:41.780 --> 00:14:43.440
before you can prompt them.

00:14:43.440 --> 00:14:45.250
So in this case,
here we're giving

00:14:45.250 --> 00:14:47.920
a little bit more education
about what the feature can do.

00:14:47.920 --> 00:14:50.310
And then, the user can either
say Try It or No, Thanks.

00:14:50.310 --> 00:14:51.910
If they decide to try
it, they would then

00:14:51.910 --> 00:14:54.201
get a permissions prompt
after they get some background

00:14:54.201 --> 00:14:56.800
on what the feature would do.

00:14:56.800 --> 00:14:59.460
So even if you think you've done
a great job of explaining why

00:14:59.460 --> 00:15:00.970
a particular
permission is needed

00:15:00.970 --> 00:15:04.510
and putting it in context, the
user might still click Deny.

00:15:04.510 --> 00:15:05.980
Now, if this is
the case, you want

00:15:05.980 --> 00:15:09.130
to make it clear to your
user inside your app

00:15:09.130 --> 00:15:12.790
why certain parts of the app may
not be functioning correctly,

00:15:12.790 --> 00:15:15.120
and then provide a link
to Settings so that they

00:15:15.120 --> 00:15:17.250
can enable the permission.

00:15:17.250 --> 00:15:19.739
In this case, the app is using
material design snack bar

00:15:19.739 --> 00:15:21.030
to do this right at the bottom.

00:15:21.030 --> 00:15:23.270
And this is a nice metaphor.

00:15:23.270 --> 00:15:24.710
So this can be a
good time, also,

00:15:24.710 --> 00:15:28.590
to reconsider whether Android
Intents might be a better way

00:15:28.590 --> 00:15:30.139
to go about doing it.

00:15:30.139 --> 00:15:32.430
In many cases, you may be
able to use an Intent instead

00:15:32.430 --> 00:15:33.096
of a permission.

00:15:33.096 --> 00:15:35.860
And that can be much
more user-friendly.

00:15:35.860 --> 00:15:37.700
So to summarize,
here all the benefits

00:15:37.700 --> 00:15:40.480
of updating your app to use
Android Marshmallow's runtime

00:15:40.480 --> 00:15:42.345
permissions flow.

00:15:42.345 --> 00:15:43.970
So next, we're going
to talk about some

00:15:43.970 --> 00:15:45.820
of my favorite
Marshmallow features.

00:15:45.820 --> 00:15:47.890
They help save users'
battery life, which we all

00:15:47.890 --> 00:15:49.332
know is really important.

00:15:49.332 --> 00:15:51.040
And as a developer,
you want to make sure

00:15:51.040 --> 00:15:54.080
that your app works really
well with these new features.

00:15:54.080 --> 00:15:56.120
So first, let's talk
about Doze mode.

00:15:56.120 --> 00:15:58.000
Let's say you've left
your phone or tablet

00:15:58.000 --> 00:15:59.777
sitting in the living room.

00:15:59.777 --> 00:16:00.610
It's not plugged in.

00:16:00.610 --> 00:16:01.276
You go to sleep.

00:16:01.276 --> 00:16:02.550
You come back in the morning.

00:16:02.550 --> 00:16:05.020
You want your phone or tablet
to still be live and not

00:16:05.020 --> 00:16:06.140
run out of battery.

00:16:06.140 --> 00:16:07.640
And that will happen
in Marshmallow,

00:16:07.640 --> 00:16:10.056
because Marshmallow detects
that that device has basically

00:16:10.056 --> 00:16:10.850
gone idle.

00:16:10.850 --> 00:16:13.600
And your device
basically takes a nap.

00:16:13.600 --> 00:16:15.760
So when your app
is in Doze mode,

00:16:15.760 --> 00:16:19.000
these are the functions
that are restricted.

00:16:19.000 --> 00:16:22.860
And other times, it may actually
be that the whole device is

00:16:22.860 --> 00:16:25.660
still being used, but
actually just your one app

00:16:25.660 --> 00:16:27.080
that's not in use.

00:16:27.080 --> 00:16:29.470
And in that case,
each app that's unused

00:16:29.470 --> 00:16:31.170
will go into Standby mode.

00:16:31.170 --> 00:16:33.862
And that means that that app
will conserve battery life.

00:16:33.862 --> 00:16:35.320
These are the
criteria that Android

00:16:35.320 --> 00:16:38.820
will use to decide if that
app is not being used.

00:16:38.820 --> 00:16:41.410
And when an app is
in standby mode,

00:16:41.410 --> 00:16:44.457
these are the sorts of
things that get affected.

00:16:44.457 --> 00:16:46.040
So basically, the
most important thing

00:16:46.040 --> 00:16:47.930
that you can do
here as a developer

00:16:47.930 --> 00:16:51.520
is to run certain commands
using ABD to basically

00:16:51.520 --> 00:16:53.760
simulate these
conditions on devices,

00:16:53.760 --> 00:16:57.410
and to test and see if your app
still works as it's intended.

00:16:57.410 --> 00:16:59.500
If you really need to
deliver certain messages

00:16:59.500 --> 00:17:01.360
and get through
with high urgency,

00:17:01.360 --> 00:17:03.960
we offer a special GCM
API that allows you

00:17:03.960 --> 00:17:06.040
to send high-priority messages.

00:17:06.040 --> 00:17:08.839
So definitely give
this one a test.

00:17:08.839 --> 00:17:10.970
Next, we're going to talk
about Android Studio.

00:17:10.970 --> 00:17:13.750
So is anyone here using
any Studio already?

00:17:13.750 --> 00:17:15.000
Yeah, maybe some people.

00:17:15.000 --> 00:17:15.509
Cool.

00:17:15.509 --> 00:17:17.800
So we're going to take a look
at some recently-launched

00:17:17.800 --> 00:17:18.300
features.

00:17:21.130 --> 00:17:21.640
There we go.

00:17:21.640 --> 00:17:24.349
So we announced Android
Studio back in 2013.

00:17:24.349 --> 00:17:27.230
And so this is basically
Google's official IDE.

00:17:27.230 --> 00:17:29.050
And if you're still
on Eclipse, please do

00:17:29.050 --> 00:17:30.802
note that will be
fully deprecated

00:17:30.802 --> 00:17:31.760
by the end of the year.

00:17:31.760 --> 00:17:35.150
So this is a good time to
think about moving over.

00:17:35.150 --> 00:17:37.310
So here's what's new.

00:17:37.310 --> 00:17:39.760
Most apps don't need C++ code.

00:17:39.760 --> 00:17:43.510
But certain apps that have high
requirements for CPU, like game

00:17:43.510 --> 00:17:46.290
engines, signal processing,
and physics simulations

00:17:46.290 --> 00:17:47.750
will need to use it.

00:17:47.750 --> 00:17:50.540
And so if your app does have
one of these special needs,

00:17:50.540 --> 00:17:53.040
you'll be happy to know that
Android Studio now allows you

00:17:53.040 --> 00:17:57.330
to have C++ code and Java code
live happily ever after in one

00:17:57.330 --> 00:17:58.870
project.

00:17:58.870 --> 00:18:00.790
And users love
apps that are fast,

00:18:00.790 --> 00:18:03.010
that are responsive, and
don't waste resources

00:18:03.010 --> 00:18:04.030
on their device.

00:18:04.030 --> 00:18:05.910
So Android Studio
provides three types

00:18:05.910 --> 00:18:08.520
of tools that will help you
get ahead of the curve here.

00:18:08.520 --> 00:18:12.110
First, you can visualize
resource use in your app.

00:18:12.110 --> 00:18:15.020
Second, you can identify
wasteful data structures.

00:18:15.020 --> 00:18:17.010
And then finally, you
can understand the burden

00:18:17.010 --> 00:18:19.100
that your app puts
on users' data plans,

00:18:19.100 --> 00:18:21.800
and pinpoint where
to reduce usage.

00:18:21.800 --> 00:18:23.590
So at the core of
Android strategy

00:18:23.590 --> 00:18:25.210
is our unified build system.

00:18:25.210 --> 00:18:29.060
We've made a lot of performance
improvements to it lately.

00:18:29.060 --> 00:18:30.986
If you like creating
UI in a visual way,

00:18:30.986 --> 00:18:32.360
we have some new
tools that allow

00:18:32.360 --> 00:18:35.500
you to drag and drop components
and manage your assets more

00:18:35.500 --> 00:18:37.530
efficiently.

00:18:37.530 --> 00:18:40.030
And then earlier, we mentioned
how Android Studio can really

00:18:40.030 --> 00:18:41.570
help you with material design.

00:18:41.570 --> 00:18:45.120
This is the best place to use
the design support library.

00:18:45.120 --> 00:18:47.520
And you can just
basically drag and drop

00:18:47.520 --> 00:18:49.790
cool material design
widgets into your app

00:18:49.790 --> 00:18:51.030
using Android Studio.

00:18:51.030 --> 00:18:55.330
And they're backwards-compatible
back to Android 2.2.

00:18:55.330 --> 00:18:57.384
So in addition to the
Android design library,

00:18:57.384 --> 00:18:58.800
we have a bunch
of other libraries

00:18:58.800 --> 00:19:00.560
that you can go learn
more about online.

00:19:00.560 --> 00:19:03.340
They can be super helpful
to speed up development.

00:19:03.340 --> 00:19:05.230
And then finally,
Android Studio also

00:19:05.230 --> 00:19:08.100
makes it easier to bring your
apps to new device types.

00:19:08.100 --> 00:19:10.340
You can create a new
Android Wear face quickly,

00:19:10.340 --> 00:19:13.027
or even simulate an
Android Auto app.

00:19:13.027 --> 00:19:15.110
So finally, we're going
to talk about distributing

00:19:15.110 --> 00:19:17.990
your apps to users and
building your business.

00:19:17.990 --> 00:19:20.480
So Google Play is all
about matching your app

00:19:20.480 --> 00:19:22.640
with the right users
who really want it.

00:19:22.640 --> 00:19:24.210
And we also provide
some great tools

00:19:24.210 --> 00:19:25.390
to help you improve quality.

00:19:25.390 --> 00:19:27.514
But I want to start out
with some really good news.

00:19:27.514 --> 00:19:32.160
So today, maximum APK
size is 50 megs, right?

00:19:32.160 --> 00:19:36.190
So this is 50 megs.

00:19:36.190 --> 00:19:40.700
Anyone have an app almost 50
megs, maybe flirting with 50?

00:19:40.700 --> 00:19:41.840
49?

00:19:41.840 --> 00:19:45.420
So when that happens, if someone
tries to install a larger one,

00:19:45.420 --> 00:19:47.160
you get this warning, right?

00:19:47.160 --> 00:19:48.410
Has anyone seen that warning?

00:19:48.410 --> 00:19:49.785
And you get a
little bit worried,

00:19:49.785 --> 00:19:51.520
and maybe you click back.

00:19:51.520 --> 00:19:53.995
Or you have to set up APK
expansion files, which

00:19:53.995 --> 00:19:55.120
definitely takes some time.

00:19:55.120 --> 00:19:56.960
So we have some good news.

00:19:56.960 --> 00:19:59.355
To be announced later
today, 100 megabytes.

00:20:07.090 --> 00:20:08.280
We're really excited, too.

00:20:08.280 --> 00:20:10.870
We've been working on
this for quite a while.

00:20:10.870 --> 00:20:12.560
It takes us a good
bit of testing,

00:20:12.560 --> 00:20:14.810
because we have to work
with such a range of devices

00:20:14.810 --> 00:20:16.150
and operators.

00:20:16.150 --> 00:20:18.690
But we wanted all of you
to be the first to know.

00:20:18.690 --> 00:20:22.750
We'll have an announcement going
out on our blog later today.

00:20:22.750 --> 00:20:24.560
We just want you
to know one thing.

00:20:24.560 --> 00:20:30.070
Even though we will
allow APKs up to 100,

00:20:30.070 --> 00:20:32.590
users still really do
like the smaller APKs.

00:20:32.590 --> 00:20:36.355
So only go over 50 if
you absolutely must.

00:20:36.355 --> 00:20:38.230
So now, we're going to
talk a little bit more

00:20:38.230 --> 00:20:42.250
about how to use iteration on
Google Play to test new ideas.

00:20:42.250 --> 00:20:44.660
So we offer a whole
bunch of special tools,

00:20:44.660 --> 00:20:47.970
which Mark touched on earlier,
to help you get early feedback.

00:20:47.970 --> 00:20:49.990
And we recommend these
as best practices

00:20:49.990 --> 00:20:51.760
to every single developer.

00:20:51.760 --> 00:20:54.064
Our best developers, most
successful developers,

00:20:54.064 --> 00:20:54.730
use these tools.

00:20:54.730 --> 00:20:56.104
And if you aren't
already, you're

00:20:56.104 --> 00:20:57.950
definitely missing
on a big opportunity

00:20:57.950 --> 00:21:00.290
to have a high-quality app.

00:21:00.290 --> 00:21:03.680
So anyone here
using beta testing?

00:21:03.680 --> 00:21:04.730
Fantastic.

00:21:04.730 --> 00:21:06.000
I love seeing those hands.

00:21:06.000 --> 00:21:08.000
This is a really special
feature on Google Play.

00:21:08.000 --> 00:21:10.630
And you can distribute your
app to a subset of users.

00:21:10.630 --> 00:21:13.259
And you can get feedback
early, rather than releasing it

00:21:13.259 --> 00:21:15.050
to everyone and just
crossing your fingers,

00:21:15.050 --> 00:21:16.470
saying, please work.

00:21:16.470 --> 00:21:19.390
So with beta testing,
users opt in,

00:21:19.390 --> 00:21:21.110
and they can't leave reviews.

00:21:21.110 --> 00:21:22.990
And it's pretty cool.

00:21:22.990 --> 00:21:24.950
You should definitely
try it if you haven't.

00:21:24.950 --> 00:21:28.330
And developers have told
us beta testing is great,

00:21:28.330 --> 00:21:32.050
but we want more ways to be
able to make it easy for users

00:21:32.050 --> 00:21:32.880
to join.

00:21:32.880 --> 00:21:35.020
So this year, we
announced two changes.

00:21:35.020 --> 00:21:37.210
The first one was open betas.

00:21:37.210 --> 00:21:40.060
You can now actually,
if you want, distribute

00:21:40.060 --> 00:21:42.310
a link to your open beta.

00:21:42.310 --> 00:21:44.380
And users can just click
it, go to a page that

00:21:44.380 --> 00:21:46.630
looks just like this, and join.

00:21:46.630 --> 00:21:47.220
And that's it.

00:21:47.220 --> 00:21:49.230
They can join with
just one click.

00:21:49.230 --> 00:21:51.790
And developers have been
able to grow pretty big beta

00:21:51.790 --> 00:21:53.340
communities this way.

00:21:53.340 --> 00:21:54.950
You still, obviously,
have the option

00:21:54.950 --> 00:21:56.960
to create a private,
closed beta.

00:21:56.960 --> 00:21:59.250
But you can also now
manage that with one option

00:21:59.250 --> 00:22:00.610
being email addresses.

00:22:00.610 --> 00:22:03.550
And we've introduced that
option earlier this year.

00:22:03.550 --> 00:22:05.950
So let's see why "The
Guardian" tells us that they're

00:22:05.950 --> 00:22:07.700
big fans of beta testing.

00:22:07.700 --> 00:22:09.250
Over the past six
months, they've

00:22:09.250 --> 00:22:12.800
tried basically every single
feature through beta testing

00:22:12.800 --> 00:22:14.520
first before rolling it out.

00:22:14.520 --> 00:22:18.150
On average, they do three builds
before each production release.

00:22:18.150 --> 00:22:20.060
And they've said
that this really

00:22:20.060 --> 00:22:21.960
helps them move a lot faster.

00:22:21.960 --> 00:22:23.490
It provides a safe
place for them

00:22:23.490 --> 00:22:26.430
to try out crazy new stuff
without risking their brand.

00:22:26.430 --> 00:22:28.490
And it also helps them
gather a bit of data

00:22:28.490 --> 00:22:30.450
so that they can take
it to stakeholders

00:22:30.450 --> 00:22:31.950
to make tough decisions.

00:22:31.950 --> 00:22:34.820
It used to take them over a
month to launch new features.

00:22:34.820 --> 00:22:37.810
Now it's less than
a couple weeks.

00:22:37.810 --> 00:22:38.780
So staged rollouts.

00:22:38.780 --> 00:22:42.010
This is another way of making
sure that your app doesn't

00:22:42.010 --> 00:22:43.560
release any bugs to new users.

00:22:43.560 --> 00:22:45.700
You basically just push
out your new version.

00:22:45.700 --> 00:22:47.210
And rather than
going to every user,

00:22:47.210 --> 00:22:48.540
you go to a certain percentage.

00:22:48.540 --> 00:22:52.080
And you can increase that
percentage over time.

00:22:52.080 --> 00:22:55.490
And this year at Google I/O, we
announced the Cloud Test Lab.

00:22:55.490 --> 00:22:58.389
And we're trialing this with a
small set of developers today.

00:22:58.389 --> 00:23:00.930
And if you're interested, you
can go to the Developer Console

00:23:00.930 --> 00:23:01.870
to sign up.

00:23:01.870 --> 00:23:05.090
And hopefully, we'll add
you to that beta test soon.

00:23:05.090 --> 00:23:07.630
So in Google Play, what's
going to happen with the Cloud

00:23:07.630 --> 00:23:11.120
Test Lab is that we're going
to send all alpha and beta apps

00:23:11.120 --> 00:23:14.380
to be tested on a set of
real physical devices.

00:23:14.380 --> 00:23:17.000
And you'll get results
back pretty quickly.

00:23:17.000 --> 00:23:19.820
So this is yet another reason
to use alpha and beta if you

00:23:19.820 --> 00:23:21.040
aren't already doing that.

00:23:21.040 --> 00:23:23.832
And it helps you detect
any major obvious issues.

00:23:23.832 --> 00:23:25.790
And we've heard from some
of the developers who

00:23:25.790 --> 00:23:27.370
are trying this early version.

00:23:27.370 --> 00:23:29.799
The first thing they want
to do after that is they

00:23:29.799 --> 00:23:30.840
say, well, that was cool.

00:23:30.840 --> 00:23:32.970
But I want to write some
really specific tests

00:23:32.970 --> 00:23:35.580
and run it on this particular
one device that's been really

00:23:35.580 --> 00:23:36.930
hard for me to track down.

00:23:36.930 --> 00:23:39.470
And so we're actually going
to have a way to do that, too.

00:23:39.470 --> 00:23:41.350
You'll be able to write
customized testing,

00:23:41.350 --> 00:23:43.190
and then run it
through Android Studio

00:23:43.190 --> 00:23:45.710
on either virtual
or physical devices,

00:23:45.710 --> 00:23:49.960
specifying the exact set of
devices that you want to use.

00:23:49.960 --> 00:23:52.230
So this is what we've
been through today.

00:23:52.230 --> 00:23:54.810
First, we want you to be
able to build a great app

00:23:54.810 --> 00:23:56.410
and a business on Google Play.

00:23:56.410 --> 00:23:58.890
And so in the design
phase, material design

00:23:58.890 --> 00:24:01.540
can be easier than ever to
use, thanks to a whole bunch

00:24:01.540 --> 00:24:03.150
of new resources.

00:24:03.150 --> 00:24:05.550
In the development phase,
Android Marshmallow's

00:24:05.550 --> 00:24:07.640
brought some serious
changes for developers,

00:24:07.640 --> 00:24:09.780
like permissions and Doze mode.

00:24:09.780 --> 00:24:11.690
And so Android Studio
and other resources

00:24:11.690 --> 00:24:13.700
can help you test that
out and make sure you

00:24:13.700 --> 00:24:15.750
have built a high-quality app.

00:24:15.750 --> 00:24:17.920
And then, finally
distributing quality apps

00:24:17.920 --> 00:24:20.030
is easier than ever,
and because Play

00:24:20.030 --> 00:24:22.540
is offering development-centered
tools that help

00:24:22.540 --> 00:24:24.590
you iterate and
test your new apps.

00:24:24.590 --> 00:24:26.350
Thank you.

