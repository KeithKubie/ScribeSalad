WEBVTT
Kind: captions
Language: en

00:00:02.430 --> 00:00:04.280
FRED SAUER: Can I pre-populate
the data store?

00:00:04.280 --> 00:00:07.970
Is there a front end to add,
remove, or update entries in

00:00:07.970 --> 00:00:08.610
the data store?

00:00:08.610 --> 00:00:10.246
MANDY WAITE: OK, so now I'm
going to punt this one a

00:00:10.246 --> 00:00:12.504
little bit, because we discussed
this one yesterday,

00:00:12.504 --> 00:00:15.301
and we talked about some things,
some articles that

00:00:15.301 --> 00:00:18.690
have been published about
this very thing.

00:00:18.690 --> 00:00:21.614
So I'd like to actually talk
to you about that.

00:00:21.614 --> 00:00:23.596
Bounce the question back to you
and ask what you feel is

00:00:23.596 --> 00:00:25.710
the best way to pre-populate.

00:00:25.710 --> 00:00:31.410
FRED SAUER: So, I think the
answer depends a little bit if

00:00:31.410 --> 00:00:34.970
you have some data on your
client on your desktop-- maybe

00:00:34.970 --> 00:00:38.150
there's some legacy data that
you need to import, some

00:00:38.150 --> 00:00:41.556
configuration data that you want
to do programmatically--

00:00:41.556 --> 00:00:44.490
the development server, the SDK,
does have a little tool

00:00:44.490 --> 00:00:47.500
for uploading data.

00:00:47.500 --> 00:00:51.310
That works fine for kind of
small scale, and that's a tool

00:00:51.310 --> 00:00:53.370
that's been around
for a long time.

00:00:53.370 --> 00:00:56.150
Probably what you want to do
if you're doing anything

00:00:56.150 --> 00:01:00.490
larger than trivial operations
is just create a Cloud

00:01:00.490 --> 00:01:05.190
Endpoints application or
version of your app.

00:01:05.190 --> 00:01:07.430
That doesn't mean you have to
build your entire service

00:01:07.430 --> 00:01:10.690
around it, and maybe this is an
administrative gateway or

00:01:10.690 --> 00:01:12.880
this is a way that mobile
clients kind of upload data to

00:01:12.880 --> 00:01:14.250
your application.

00:01:14.250 --> 00:01:20.030
Cloud Endpoints is a great easy
way to create an API and

00:01:20.030 --> 00:01:23.420
will automatically generate
client libraries for Android,

00:01:23.420 --> 00:01:28.850
for iOS, for HTML5, and from any
of those three clients you

00:01:28.850 --> 00:01:31.170
can make your calls to
the server side.

00:01:31.170 --> 00:01:33.122
If you're doing Python--

00:01:33.122 --> 00:01:36.820
a colleague of ours, Danny
Hermes, has a pretty cool

00:01:36.820 --> 00:01:42.346
project called Cloud Endpoints
Proto Datastore and--

00:01:42.346 --> 00:01:45.200
or maybe it's Endpoints
Proto Datastore--

00:01:45.200 --> 00:01:47.450
but it's an application where
you essentially define your

00:01:47.450 --> 00:01:51.320
Python datastore models, and
then you just swap up the

00:01:51.320 --> 00:01:55.900
class name that you're
inheriting from, and then all

00:01:55.900 --> 00:01:59.960
your classes magically turn
into Cloud Endpoints.

00:01:59.960 --> 00:02:04.080
And so you can make calls, like
insert entities into the

00:02:04.080 --> 00:02:08.160
datastore, remove them, do
queries, all really easy.

00:02:08.160 --> 00:02:11.250
So that's probably the
way that I would go.

00:02:11.250 --> 00:02:14.740
And then there's maybe one more
trick up your sleeve.

00:02:14.740 --> 00:02:17.520
The SDK has a thing called
a remote API, remote_api.

00:02:17.520 --> 00:02:19.150
[INAUDIBLE]

00:02:19.150 --> 00:02:21.680
And it's a way for the
development server to

00:02:21.680 --> 00:02:25.180
essentially proxy its datastore
memcache requests to

00:02:25.180 --> 00:02:27.000
the production environment.

00:02:27.000 --> 00:02:30.730
So what you do is you deploy a
special version of your app

00:02:30.730 --> 00:02:33.915
with just like a one line config
flag that says enable

00:02:33.915 --> 00:02:39.290
the remote API, and then you can
run your code locally as

00:02:39.290 --> 00:02:41.180
if you're connected to the
datastore, but everything's

00:02:41.180 --> 00:02:43.260
being proxied to the
Cloud for you.

00:02:43.260 --> 00:02:46.420
So that's another
neat trick for

00:02:46.420 --> 00:02:47.600
migrating data in the cloud.

00:02:47.600 --> 00:02:50.450
Or it's a great way
to do debugging.

00:02:50.450 --> 00:02:53.580
You connect to your production
or staging environment, and

00:02:53.580 --> 00:02:56.260
you can kind of sort of interact
with it while you're

00:02:56.260 --> 00:02:58.030
in a Python console.

00:02:58.030 --> 00:03:00.356
You have your real data models,
but you're looking at

00:03:00.356 --> 00:03:01.380
your real data.

00:03:01.380 --> 00:03:02.630
MANDY WAITE: Excellent.

