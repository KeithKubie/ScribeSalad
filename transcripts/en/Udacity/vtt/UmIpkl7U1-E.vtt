WEBVTT
Kind: captions
Language: en

00:00:00.470 --> 00:00:02.850
So let's have a deeper
look at CSS sizing.

00:00:02.850 --> 00:00:06.900
I've given this image a fixed size.

00:00:06.900 --> 00:00:09.840
640 by 360 pixels,
which is the natural size of the image.

00:00:09.840 --> 00:00:10.540
It looks great.

00:00:10.540 --> 00:00:13.290
But of course, when I resize the window,

00:00:13.290 --> 00:00:18.120
the image gets cropped and
remember the problem we had earlier?

00:00:18.120 --> 00:00:21.410
On a phone,
the image is larger than the view port.

00:00:21.410 --> 00:00:26.470
Which means that to see the whole image,
you have to scroll horizontally.

00:00:26.470 --> 00:00:28.250
Let's try relative sizing.

00:00:28.250 --> 00:00:30.237
I set the image width to 100%.

00:00:30.237 --> 00:00:35.960
It looks good in the smaller browser
window and looks good on the phone.

00:00:35.960 --> 00:00:41.950
But, when I resize the image larger
by resizing the browser window.

00:00:41.950 --> 00:00:45.830
It starts to get pixelated and blurry.

00:00:45.830 --> 00:00:47.440
Let's do something about that.

00:00:47.440 --> 00:00:53.330
If we set the max-width of the image
to 100%, the image will expand nicely,

00:00:53.330 --> 00:00:57.870
but only ever as wide
as its natural width.

00:00:57.870 --> 00:00:59.900
Two simple things you
can learn from this.

00:00:59.900 --> 00:01:02.930
For devices such as laptops and
desktop monitors,

00:01:02.930 --> 00:01:07.150
don't assume the window size is
the same as the screen size.

00:01:08.350 --> 00:01:13.160
And don't assume the window
size will always stay the same.

00:01:13.160 --> 00:01:17.430
Using max-width can be a good
way to respond gracefully to

00:01:17.430 --> 00:01:19.560
a change to a larger view port.

00:01:19.560 --> 00:01:20.750
When you're thinking responsibly,

00:01:20.750 --> 00:01:23.700
consider large displays
as well as small.

00:01:23.700 --> 00:01:26.240
So what if you want two
images to fit side by side,

00:01:26.240 --> 00:01:28.220
no matter the size of the view port?

00:01:28.220 --> 00:01:29.760
Well, that's easy.

00:01:29.760 --> 00:01:32.646
Just use relative sizing, 50% width.

00:01:32.646 --> 00:01:37.090
But what if you want to add a ten
pixel margin between the images?

00:01:37.090 --> 00:01:41.347
You can just add margin-right,
10 pixels, right?

00:01:41.347 --> 00:01:44.350
You can get around this
with our old friend calc.

00:01:45.870 --> 00:01:49.820
Calc allows you to do simple
calculations in CSS values.

00:01:49.820 --> 00:01:54.380
And that's a great way to combine
absolute and relative values.

00:01:54.380 --> 00:01:59.100
For example, combining a percentage
width with a fixed margin.

00:02:00.120 --> 00:02:02.568
Now the calculation here
looks a little complex.

00:02:02.568 --> 00:02:07.610
But all we're saying is to give each
image a half of the width available.

00:02:09.139 --> 00:02:14.140
I've also used the last-of-type selector
to ensure there's only a margin

00:02:14.140 --> 00:02:19.190
between the images and
none to the right of the second image.

