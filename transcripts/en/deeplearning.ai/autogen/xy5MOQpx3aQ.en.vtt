WEBVTT
Kind: captions
Language: en

00:00:00.089 --> 00:00:02.330 align:start position:0%
 
in<00:00:00.299><c> the</c><00:00:00.480><c> last</c><00:00:00.630><c> video</c><00:00:00.870><c> you</c><00:00:01.110><c> saw</c><00:00:01.439><c> how</c><00:00:01.680><c> to</c><00:00:01.709><c> compute</c>

00:00:02.330 --> 00:00:02.340 align:start position:0%
in the last video you saw how to compute
 

00:00:02.340 --> 00:00:04.730 align:start position:0%
in the last video you saw how to compute
the<00:00:02.520><c> prediction</c><00:00:03.060><c> on</c><00:00:03.300><c> a</c><00:00:03.330><c> new</c><00:00:03.540><c> network</c><00:00:03.840><c> given</c><00:00:04.680><c> a</c>

00:00:04.730 --> 00:00:04.740 align:start position:0%
the prediction on a new network given a
 

00:00:04.740 --> 00:00:07.039 align:start position:0%
the prediction on a new network given a
single<00:00:04.980><c> training</c><00:00:05.430><c> example</c><00:00:05.580><c> in</c><00:00:06.150><c> this</c><00:00:06.870><c> video</c>

00:00:07.039 --> 00:00:07.049 align:start position:0%
single training example in this video
 

00:00:07.049 --> 00:00:09.890 align:start position:0%
single training example in this video
you<00:00:07.290><c> see</c><00:00:07.649><c> how</c><00:00:07.859><c> to</c><00:00:07.919><c> vectorize</c><00:00:08.849><c> across</c><00:00:09.450><c> multiple</c>

00:00:09.890 --> 00:00:09.900 align:start position:0%
you see how to vectorize across multiple
 

00:00:09.900 --> 00:00:12.470 align:start position:0%
you see how to vectorize across multiple
training<00:00:10.410><c> examples</c><00:00:10.889><c> and</c><00:00:11.070><c> the</c><00:00:11.849><c> outcome</c><00:00:12.330><c> will</c>

00:00:12.470 --> 00:00:12.480 align:start position:0%
training examples and the outcome will
 

00:00:12.480 --> 00:00:13.940 align:start position:0%
training examples and the outcome will
be<00:00:12.570><c> quite</c><00:00:12.780><c> similar</c><00:00:13.019><c> to</c><00:00:13.230><c> what</c><00:00:13.349><c> you</c><00:00:13.469><c> saw</c><00:00:13.650><c> for</c>

00:00:13.940 --> 00:00:13.950 align:start position:0%
be quite similar to what you saw for
 

00:00:13.950 --> 00:00:16.490 align:start position:0%
be quite similar to what you saw for
logistic<00:00:14.400><c> regression</c><00:00:14.429><c> where</c><00:00:15.420><c> by</c><00:00:15.660><c> stacking</c><00:00:16.139><c> up</c>

00:00:16.490 --> 00:00:16.500 align:start position:0%
logistic regression where by stacking up
 

00:00:16.500 --> 00:00:18.140 align:start position:0%
logistic regression where by stacking up
different<00:00:16.890><c> training</c><00:00:17.160><c> examples</c><00:00:17.609><c> in</c><00:00:17.820><c> different</c>

00:00:18.140 --> 00:00:18.150 align:start position:0%
different training examples in different
 

00:00:18.150 --> 00:00:20.720 align:start position:0%
different training examples in different
columns<00:00:18.840><c> of</c><00:00:19.020><c> the</c><00:00:19.080><c> matrix</c><00:00:19.109><c> you'll</c><00:00:20.039><c> be</c><00:00:20.220><c> able</c><00:00:20.279><c> to</c>

00:00:20.720 --> 00:00:20.730 align:start position:0%
columns of the matrix you'll be able to
 

00:00:20.730 --> 00:00:22.370 align:start position:0%
columns of the matrix you'll be able to
take<00:00:21.029><c> the</c><00:00:21.180><c> equations</c><00:00:21.689><c> you</c><00:00:21.900><c> have</c><00:00:21.930><c> from</c><00:00:22.320><c> the</c>

00:00:22.370 --> 00:00:22.380 align:start position:0%
take the equations you have from the
 

00:00:22.380 --> 00:00:24.140 align:start position:0%
take the equations you have from the
previous<00:00:22.800><c> video</c><00:00:23.100><c> and</c><00:00:23.279><c> with</c><00:00:23.820><c> very</c><00:00:24.060><c> little</c>

00:00:24.140 --> 00:00:24.150 align:start position:0%
previous video and with very little
 

00:00:24.150 --> 00:00:26.450 align:start position:0%
previous video and with very little
modification<00:00:24.680><c> change</c><00:00:25.680><c> them</c><00:00:25.949><c> to</c><00:00:26.189><c> make</c><00:00:26.340><c> the</c>

00:00:26.450 --> 00:00:26.460 align:start position:0%
modification change them to make the
 

00:00:26.460 --> 00:00:28.519 align:start position:0%
modification change them to make the
neural<00:00:26.730><c> network</c><00:00:27.060><c> compute</c><00:00:27.570><c> the</c><00:00:27.900><c> outputs</c><00:00:28.349><c> on</c>

00:00:28.519 --> 00:00:28.529 align:start position:0%
neural network compute the outputs on
 

00:00:28.529 --> 00:00:31.070 align:start position:0%
neural network compute the outputs on
all<00:00:28.710><c> the</c><00:00:29.039><c> examples</c><00:00:29.609><c> on</c><00:00:29.939><c> pretty</c><00:00:30.510><c> much</c><00:00:30.660><c> all</c><00:00:30.840><c> at</c>

00:00:31.070 --> 00:00:31.080 align:start position:0%
all the examples on pretty much all at
 

00:00:31.080 --> 00:00:33.650 align:start position:0%
all the examples on pretty much all at
the<00:00:31.170><c> same</c><00:00:31.349><c> time</c><00:00:31.560><c> so</c><00:00:32.399><c> let's</c><00:00:32.669><c> see</c><00:00:33.149><c> the</c><00:00:33.270><c> details</c>

00:00:33.650 --> 00:00:33.660 align:start position:0%
the same time so let's see the details
 

00:00:33.660 --> 00:00:36.049 align:start position:0%
the same time so let's see the details
of<00:00:33.840><c> how</c><00:00:33.960><c> to</c><00:00:34.020><c> do</c><00:00:34.230><c> that</c><00:00:34.380><c> these</c><00:00:35.160><c> were</c><00:00:35.430><c> the</c><00:00:35.670><c> four</c>

00:00:36.049 --> 00:00:36.059 align:start position:0%
of how to do that these were the four
 

00:00:36.059 --> 00:00:37.940 align:start position:0%
of how to do that these were the four
equations<00:00:36.420><c> we</c><00:00:36.960><c> have</c><00:00:37.200><c> from</c><00:00:37.469><c> the</c><00:00:37.530><c> previous</c>

00:00:37.940 --> 00:00:37.950 align:start position:0%
equations we have from the previous
 

00:00:37.950 --> 00:00:40.549 align:start position:0%
equations we have from the previous
video<00:00:38.250><c> of</c><00:00:38.309><c> how</c><00:00:38.700><c> you</c><00:00:38.760><c> compute</c><00:00:39.239><c> Z</c><00:00:39.480><c> 1</c><00:00:39.660><c> a</c><00:00:39.840><c> 1</c><00:00:40.079><c> Z</c><00:00:40.320><c> 2</c><00:00:40.350><c> and</c>

00:00:40.549 --> 00:00:40.559 align:start position:0%
video of how you compute Z 1 a 1 Z 2 and
 

00:00:40.559 --> 00:00:44.540 align:start position:0%
video of how you compute Z 1 a 1 Z 2 and
a<00:00:40.829><c> 2</c><00:00:40.860><c> and</c><00:00:41.329><c> they</c><00:00:42.329><c> tell</c><00:00:42.570><c> you</c><00:00:42.750><c> how</c><00:00:43.110><c> given</c><00:00:44.070><c> an</c><00:00:44.280><c> input</c>

00:00:44.540 --> 00:00:44.550 align:start position:0%
a 2 and they tell you how given an input
 

00:00:44.550 --> 00:00:48.650 align:start position:0%
a 2 and they tell you how given an input
feature<00:00:45.480><c> vector</c><00:00:45.899><c> X</c><00:00:45.930><c> you</c><00:00:46.829><c> can</c><00:00:47.210><c> use</c><00:00:48.210><c> them</c><00:00:48.450><c> to</c>

00:00:48.650 --> 00:00:48.660 align:start position:0%
feature vector X you can use them to
 

00:00:48.660 --> 00:00:53.029 align:start position:0%
feature vector X you can use them to
generate<00:00:48.899><c> a</c><00:00:49.379><c> 2</c><00:00:50.329><c> equals</c><00:00:51.329><c> y</c><00:00:52.050><c> hat</c><00:00:52.320><c> for</c><00:00:52.739><c> single</c>

00:00:53.029 --> 00:00:53.039 align:start position:0%
generate a 2 equals y hat for single
 

00:00:53.039 --> 00:00:55.910 align:start position:0%
generate a 2 equals y hat for single
training<00:00:53.250><c> example</c><00:00:53.960><c> now</c><00:00:54.960><c> if</c><00:00:55.320><c> you</c><00:00:55.500><c> have</c><00:00:55.710><c> M</c>

00:00:55.910 --> 00:00:55.920 align:start position:0%
training example now if you have M
 

00:00:55.920 --> 00:00:58.459 align:start position:0%
training example now if you have M
training<00:00:56.550><c> examples</c><00:00:56.840><c> you</c><00:00:57.840><c> need</c><00:00:58.050><c> to</c><00:00:58.170><c> repeat</c>

00:00:58.459 --> 00:00:58.469 align:start position:0%
training examples you need to repeat
 

00:00:58.469 --> 00:01:00.740 align:start position:0%
training examples you need to repeat
this<00:00:58.620><c> process</c><00:00:58.859><c> for</c><00:00:59.399><c> say</c><00:01:00.120><c> the</c><00:01:00.239><c> first</c><00:01:00.510><c> training</c>

00:01:00.740 --> 00:01:00.750 align:start position:0%
this process for say the first training
 

00:01:00.750 --> 00:01:03.670 align:start position:0%
this process for say the first training
example<00:01:01.260><c> X</c><00:01:01.590><c> superscript</c><00:01:02.160><c> round</c><00:01:02.879><c> records</c><00:01:03.329><c> one</c>

00:01:03.670 --> 00:01:03.680 align:start position:0%
example X superscript round records one
 

00:01:03.680 --> 00:01:08.810 align:start position:0%
example X superscript round records one
to<00:01:05.210><c> compute</c><00:01:06.210><c> Y</c><00:01:06.570><c> hat</c><00:01:06.900><c> one</c><00:01:07.860><c> Wester</c><00:01:08.340><c> prediction</c>

00:01:08.810 --> 00:01:08.820 align:start position:0%
to compute Y hat one Wester prediction
 

00:01:08.820 --> 00:01:12.560 align:start position:0%
to compute Y hat one Wester prediction
on<00:01:09.060><c> your</c><00:01:09.390><c> first</c><00:01:09.960><c> training</c><00:01:10.409><c> example</c><00:01:10.729><c> then</c><00:01:11.729><c> X</c><00:01:12.210><c> to</c>

00:01:12.560 --> 00:01:12.570 align:start position:0%
on your first training example then X to
 

00:01:12.570 --> 00:01:15.800 align:start position:0%
on your first training example then X to
use<00:01:13.409><c> that</c><00:01:13.710><c> to</c><00:01:14.130><c> generate</c><00:01:14.700><c> prediction</c><00:01:15.299><c> y</c><00:01:15.570><c> hat</c>

00:01:15.800 --> 00:01:15.810 align:start position:0%
use that to generate prediction y hat
 

00:01:15.810 --> 00:01:20.149 align:start position:0%
use that to generate prediction y hat
two<00:01:16.080><c> and</c><00:01:16.320><c> so</c><00:01:17.040><c> on</c><00:01:17.070><c> down</c><00:01:17.610><c> to</c><00:01:17.810><c> XM</c><00:01:18.810><c> to</c><00:01:19.770><c> generate</c><00:01:20.100><c> a</c>

00:01:20.149 --> 00:01:20.159 align:start position:0%
two and so on down to XM to generate a
 

00:01:20.159 --> 00:01:24.590 align:start position:0%
two and so on down to XM to generate a
prediction<00:01:20.670><c> y</c><00:01:21.450><c> hat</c><00:01:21.720><c> M</c><00:01:21.990><c> and</c><00:01:22.439><c> so</c><00:01:23.340><c> in</c><00:01:23.700><c> order</c><00:01:24.450><c> to</c>

00:01:24.590 --> 00:01:24.600 align:start position:0%
prediction y hat M and so in order to
 

00:01:24.600 --> 00:01:25.850 align:start position:0%
prediction y hat M and so in order to
write<00:01:24.869><c> this</c><00:01:25.049><c> the</c><00:01:25.200><c> activation</c><00:01:25.830><c> function</c>

00:01:25.850 --> 00:01:25.860 align:start position:0%
write this the activation function
 

00:01:25.860 --> 00:01:27.499 align:start position:0%
write this the activation function
notation<00:01:26.640><c> as</c><00:01:26.759><c> well</c><00:01:26.790><c> I'm</c><00:01:27.000><c> going</c><00:01:27.180><c> to</c><00:01:27.270><c> write</c><00:01:27.390><c> this</c>

00:01:27.499 --> 00:01:27.509 align:start position:0%
notation as well I'm going to write this
 

00:01:27.509 --> 00:01:31.280 align:start position:0%
notation as well I'm going to write this
as<00:01:27.720><c> a</c><00:01:27.869><c> two</c><00:01:28.220><c> square</c><00:01:29.220><c> bracket</c><00:01:29.670><c> round</c><00:01:30.450><c> bracket</c><00:01:30.990><c> 1</c>

00:01:31.280 --> 00:01:31.290 align:start position:0%
as a two square bracket round bracket 1
 

00:01:31.290 --> 00:01:40.940 align:start position:0%
as a two square bracket round bracket 1
this<00:01:31.950><c> is</c><00:01:32.130><c> a</c><00:01:32.369><c> 2</c><00:01:33.619><c> 2</c><00:01:34.619><c> and</c><00:01:35.119><c> a</c><00:01:36.119><c> 2</c><00:01:37.159><c> m</c><00:01:39.229><c> so</c><00:01:40.229><c> this</c><00:01:40.560><c> notation</c>

00:01:40.940 --> 00:01:40.950 align:start position:0%
this is a 2 2 and a 2 m so this notation
 

00:01:40.950 --> 00:01:46.850 align:start position:0%
this is a 2 2 and a 2 m so this notation
a<00:01:42.409><c> square</c><00:01:43.409><c> bracket</c><00:01:43.799><c> 2</c><00:01:44.240><c> round</c><00:01:45.240><c> bracket</c><00:01:45.630><c> I</c><00:01:45.860><c> the</c>

00:01:46.850 --> 00:01:46.860 align:start position:0%
a square bracket 2 round bracket I the
 

00:01:46.860 --> 00:01:49.490 align:start position:0%
a square bracket 2 round bracket I the
round<00:01:47.130><c> bracket</c><00:01:47.490><c> I</c><00:01:47.640><c> refers</c><00:01:48.180><c> to</c><00:01:48.500><c> training</c>

00:01:49.490 --> 00:01:49.500 align:start position:0%
round bracket I refers to training
 

00:01:49.500 --> 00:01:54.130 align:start position:0%
round bracket I refers to training
example<00:01:50.130><c> I</c><00:01:50.930><c> and</c><00:01:51.930><c> the</c><00:01:52.829><c> square</c><00:01:53.280><c> bracket</c><00:01:53.640><c> 2</c>

00:01:54.130 --> 00:01:54.140 align:start position:0%
example I and the square bracket 2
 

00:01:54.140 --> 00:01:58.969 align:start position:0%
example I and the square bracket 2
refers<00:01:55.140><c> to</c><00:01:55.549><c> layer</c><00:01:56.549><c> 2</c><00:01:57.380><c> ok</c><00:01:58.380><c> so</c><00:01:58.439><c> that's</c><00:01:58.799><c> how</c><00:01:58.890><c> the</c>

00:01:58.969 --> 00:01:58.979 align:start position:0%
refers to layer 2 ok so that's how the
 

00:01:58.979 --> 00:02:01.039 align:start position:0%
refers to layer 2 ok so that's how the
square<00:01:59.820><c> bracket</c><00:02:00.210><c> and</c><00:02:00.329><c> the</c><00:02:00.420><c> round</c><00:02:00.630><c> bracket</c>

00:02:01.039 --> 00:02:01.049 align:start position:0%
square bracket and the round bracket
 

00:02:01.049 --> 00:02:05.359 align:start position:0%
square bracket and the round bracket
industries<00:02:01.829><c> work</c><00:02:02.340><c> and</c><00:02:03.619><c> so</c><00:02:04.619><c> the</c><00:02:04.770><c> suggest</c><00:02:05.100><c> that</c>

00:02:05.359 --> 00:02:05.369 align:start position:0%
industries work and so the suggest that
 

00:02:05.369 --> 00:02:06.499 align:start position:0%
industries work and so the suggest that
if<00:02:05.579><c> you</c><00:02:05.700><c> have</c><00:02:05.729><c> an</c><00:02:06.060><c> unvectorized</c>

00:02:06.499 --> 00:02:06.509 align:start position:0%
if you have an unvectorized
 

00:02:06.509 --> 00:02:08.510 align:start position:0%
if you have an unvectorized
implementation<00:02:06.860><c> and</c><00:02:07.860><c> want</c><00:02:08.009><c> to</c><00:02:08.069><c> compute</c><00:02:08.459><c> the</c>

00:02:08.510 --> 00:02:08.520 align:start position:0%
implementation and want to compute the
 

00:02:08.520 --> 00:02:10.219 align:start position:0%
implementation and want to compute the
prediction<00:02:08.970><c> for</c><00:02:09.239><c> all</c><00:02:09.479><c> your</c><00:02:09.989><c> training</c>

00:02:10.219 --> 00:02:10.229 align:start position:0%
prediction for all your training
 

00:02:10.229 --> 00:02:13.320 align:start position:0%
prediction for all your training
examples<00:02:10.770><c> you</c><00:02:11.009><c> need</c><00:02:11.190><c> to</c><00:02:11.310><c> do</c><00:02:11.489><c> for</c><00:02:11.760><c> I</c><00:02:11.970><c> equals</c><00:02:12.540><c> 1</c>

00:02:13.320 --> 00:02:13.330 align:start position:0%
examples you need to do for I equals 1
 

00:02:13.330 --> 00:02:16.980 align:start position:0%
examples you need to do for I equals 1
to<00:02:14.140><c> em</c><00:02:14.320><c> on</c><00:02:14.800><c> there</c><00:02:15.730><c> basically</c><00:02:15.910><c> intimate</c><00:02:16.810><c> these</c>

00:02:16.980 --> 00:02:16.990 align:start position:0%
to em on there basically intimate these
 

00:02:16.990 --> 00:02:19.380 align:start position:0%
to em on there basically intimate these
four<00:02:17.290><c> equations</c><00:02:17.800><c> where</c><00:02:18.130><c> you</c><00:02:18.280><c> need</c>

00:02:19.380 --> 00:02:19.390 align:start position:0%
four equations where you need
 

00:02:19.390 --> 00:02:30.320 align:start position:0%
four equations where you need
I<00:02:19.420><c> guess</c><00:02:21.150><c> z1</c><00:02:22.150><c> I</c><00:02:23.070><c> equals</c><00:02:24.070><c> 31</c><00:02:24.930><c> X</c><00:02:25.930><c> I</c><00:02:26.790><c> plus</c><00:02:27.790><c> B</c><00:02:28.060><c> 1</c><00:02:28.360><c> on</c><00:02:29.350><c> a</c>

00:02:30.320 --> 00:02:30.330 align:start position:0%
I guess z1 I equals 31 X I plus B 1 on a
 

00:02:30.330 --> 00:02:43.710 align:start position:0%
I guess z1 I equals 31 X I plus B 1 on a
1<00:02:31.330><c> I</c><00:02:33.180><c> equals</c><00:02:34.180><c> sigmoid</c><00:02:34.810><c> z</c><00:02:36.270><c> 1i</c><00:02:38.550><c> z</c><00:02:39.780><c> 2</c><00:02:40.780><c> I</c><00:02:41.430><c> equals</c><00:02:42.450><c> W</c><00:02:43.450><c> 2</c>

00:02:43.710 --> 00:02:43.720 align:start position:0%
1 I equals sigmoid z 1i z 2 I equals W 2
 

00:02:43.720 --> 00:02:53.760 align:start position:0%
1 I equals sigmoid z 1i z 2 I equals W 2
a<00:02:44.580><c> 1</c><00:02:45.580><c> I</c><00:02:46.050><c> plus</c><00:02:47.050><c> V</c><00:02:47.380><c> 2</c><00:02:47.680><c> and</c><00:02:48.480><c> a</c><00:02:49.480><c> 2</c><00:02:49.990><c> I</c><00:02:51.570><c> equals</c><00:02:52.770><c> sigmoid</c>

00:02:53.760 --> 00:02:53.770 align:start position:0%
a 1 I plus V 2 and a 2 I equals sigmoid
 

00:02:53.770 --> 00:02:58.020 align:start position:0%
a 1 I plus V 2 and a 2 I equals sigmoid
of<00:02:54.150><c> z2</c><00:02:55.150><c> I</c><00:02:55.950><c> right</c><00:02:56.950><c> so</c><00:02:57.160><c> it's</c><00:02:57.280><c> basically</c><00:02:57.490><c> you</c><00:02:57.970><c> know</c>

00:02:58.020 --> 00:02:58.030 align:start position:0%
of z2 I right so it's basically you know
 

00:02:58.030 --> 00:02:59.699 align:start position:0%
of z2 I right so it's basically you know
these<00:02:58.240><c> four</c><00:02:58.450><c> equations</c><00:02:58.660><c> on</c><00:02:59.080><c> top</c><00:02:59.290><c> and</c><00:02:59.530><c> adding</c>

00:02:59.699 --> 00:02:59.709 align:start position:0%
these four equations on top and adding
 

00:02:59.709 --> 00:03:05.820 align:start position:0%
these four equations on top and adding
the<00:03:00.100><c> superscript</c><00:03:01.590><c> round</c><00:03:02.590><c> bracket</c><00:03:03.070><c> I</c><00:03:04.500><c> to</c><00:03:05.500><c> all</c>

00:03:05.820 --> 00:03:05.830 align:start position:0%
the superscript round bracket I to all
 

00:03:05.830 --> 00:03:07.949 align:start position:0%
the superscript round bracket I to all
the<00:03:06.010><c> variables</c><00:03:06.490><c> that</c><00:03:06.760><c> depend</c><00:03:07.480><c> on</c><00:03:07.720><c> the</c>

00:03:07.949 --> 00:03:07.959 align:start position:0%
the variables that depend on the
 

00:03:07.959 --> 00:03:09.480 align:start position:0%
the variables that depend on the
training<00:03:08.380><c> example</c><00:03:08.800><c> so</c><00:03:09.010><c> adding</c><00:03:09.340><c> those</c>

00:03:09.480 --> 00:03:09.490 align:start position:0%
training example so adding those
 

00:03:09.490 --> 00:03:12.960 align:start position:0%
training example so adding those
superstream<00:03:09.940><c> round</c><00:03:10.240><c> bracket</c><00:03:10.570><c> I</c><00:03:10.720><c> to</c><00:03:10.830><c> X</c><00:03:11.830><c> Z</c><00:03:12.430><c> and</c><00:03:12.730><c> a</c>

00:03:12.960 --> 00:03:12.970 align:start position:0%
superstream round bracket I to X Z and a
 

00:03:12.970 --> 00:03:15.900 align:start position:0%
superstream round bracket I to X Z and a
if<00:03:13.930><c> you</c><00:03:14.050><c> want</c><00:03:14.110><c> to</c><00:03:14.290><c> compute</c><00:03:14.650><c> all</c><00:03:14.980><c> the</c><00:03:15.459><c> outputs</c>

00:03:15.900 --> 00:03:15.910 align:start position:0%
if you want to compute all the outputs
 

00:03:15.910 --> 00:03:18.870 align:start position:0%
if you want to compute all the outputs
on<00:03:16.120><c> your</c><00:03:16.300><c> M</c><00:03:16.450><c> training</c><00:03:17.080><c> examples</c><00:03:17.640><c> what</c><00:03:18.640><c> we</c><00:03:18.730><c> like</c>

00:03:18.870 --> 00:03:18.880 align:start position:0%
on your M training examples what we like
 

00:03:18.880 --> 00:03:20.490 align:start position:0%
on your M training examples what we like
to<00:03:18.910><c> do</c><00:03:19.150><c> is</c><00:03:19.420><c> vectorize</c><00:03:19.989><c> this</c><00:03:20.260><c> whole</c>

00:03:20.490 --> 00:03:20.500 align:start position:0%
to do is vectorize this whole
 

00:03:20.500 --> 00:03:22.800 align:start position:0%
to do is vectorize this whole
computation<00:03:20.860><c> so</c><00:03:21.820><c> it's</c><00:03:22.000><c> to</c><00:03:22.150><c> get</c><00:03:22.330><c> rid</c><00:03:22.540><c> of</c><00:03:22.630><c> this</c>

00:03:22.800 --> 00:03:22.810 align:start position:0%
computation so it's to get rid of this
 

00:03:22.810 --> 00:03:25.320 align:start position:0%
computation so it's to get rid of this
volume<00:03:23.140><c> and</c><00:03:23.620><c> by</c><00:03:24.220><c> the</c><00:03:24.280><c> way</c><00:03:24.430><c> in</c><00:03:24.640><c> case</c><00:03:24.820><c> it</c><00:03:25.060><c> seems</c>

00:03:25.320 --> 00:03:25.330 align:start position:0%
volume and by the way in case it seems
 

00:03:25.330 --> 00:03:26.490 align:start position:0%
volume and by the way in case it seems
like<00:03:25.480><c> I'm</c><00:03:25.600><c> getting</c><00:03:25.750><c> a</c><00:03:25.989><c> little</c><00:03:26.110><c> more</c><00:03:26.320><c> of</c>

00:03:26.490 --> 00:03:26.500 align:start position:0%
like I'm getting a little more of
 

00:03:26.500 --> 00:03:29.699 align:start position:0%
like I'm getting a little more of
nitty-gritty<00:03:26.880><c> linear</c><00:03:27.880><c> algebra</c><00:03:28.450><c> it</c><00:03:28.959><c> turns</c><00:03:29.470><c> out</c>

00:03:29.699 --> 00:03:29.709 align:start position:0%
nitty-gritty linear algebra it turns out
 

00:03:29.709 --> 00:03:30.990 align:start position:0%
nitty-gritty linear algebra it turns out
that<00:03:29.950><c> being</c><00:03:30.160><c> able</c><00:03:30.250><c> to</c><00:03:30.340><c> implement</c><00:03:30.700><c> this</c>

00:03:30.990 --> 00:03:31.000 align:start position:0%
that being able to implement this
 

00:03:31.000 --> 00:03:33.120 align:start position:0%
that being able to implement this
correctly<00:03:31.600><c> is</c><00:03:31.900><c> important</c><00:03:32.590><c> in</c><00:03:32.830><c> the</c><00:03:32.920><c> deep</c>

00:03:33.120 --> 00:03:33.130 align:start position:0%
correctly is important in the deep
 

00:03:33.130 --> 00:03:35.880 align:start position:0%
correctly is important in the deep
learning<00:03:33.310><c> error</c><00:03:33.730><c> and</c><00:03:34.120><c> we</c><00:03:35.019><c> actually</c><00:03:35.380><c> chose</c><00:03:35.650><c> the</c>

00:03:35.880 --> 00:03:35.890 align:start position:0%
learning error and we actually chose the
 

00:03:35.890 --> 00:03:37.800 align:start position:0%
learning error and we actually chose the
notation<00:03:36.459><c> very</c><00:03:36.730><c> carefully</c><00:03:37.300><c> for</c><00:03:37.450><c> this</c><00:03:37.600><c> class</c>

00:03:37.800 --> 00:03:37.810 align:start position:0%
notation very carefully for this class
 

00:03:37.810 --> 00:03:39.870 align:start position:0%
notation very carefully for this class
to<00:03:38.050><c> make</c><00:03:38.200><c> these</c><00:03:38.380><c> vectorization</c><00:03:38.860><c> as</c><00:03:39.370><c> as</c><00:03:39.580><c> easy</c>

00:03:39.870 --> 00:03:39.880 align:start position:0%
to make these vectorization as as easy
 

00:03:39.880 --> 00:03:42.509 align:start position:0%
to make these vectorization as as easy
as<00:03:40.120><c> possible</c><00:03:40.500><c> so</c><00:03:41.500><c> I</c><00:03:41.590><c> hope</c><00:03:41.800><c> that</c><00:03:41.830><c> great</c><00:03:42.310><c> through</c>

00:03:42.509 --> 00:03:42.519 align:start position:0%
as possible so I hope that great through
 

00:03:42.519 --> 00:03:44.310 align:start position:0%
as possible so I hope that great through
this<00:03:42.700><c> nitty-gritty</c><00:03:43.269><c> will</c><00:03:43.600><c> actually</c><00:03:43.900><c> help</c><00:03:44.050><c> you</c>

00:03:44.310 --> 00:03:44.320 align:start position:0%
this nitty-gritty will actually help you
 

00:03:44.320 --> 00:03:47.790 align:start position:0%
this nitty-gritty will actually help you
to<00:03:45.209><c> more</c><00:03:46.209><c> quickly</c><00:03:46.480><c> get</c><00:03:46.870><c> your</c><00:03:47.260><c> correct</c>

00:03:47.790 --> 00:03:47.800 align:start position:0%
to more quickly get your correct
 

00:03:47.800 --> 00:03:50.060 align:start position:0%
to more quickly get your correct
implementations<00:03:48.610><c> of</c><00:03:48.730><c> these</c><00:03:48.880><c> advents</c><00:03:49.209><c> working</c>

00:03:50.060 --> 00:03:50.070 align:start position:0%
implementations of these advents working
 

00:03:50.070 --> 00:03:51.390 align:start position:0%
implementations of these advents working
all<00:03:51.070><c> right</c>

00:03:51.390 --> 00:03:51.400 align:start position:0%
all right
 

00:03:51.400 --> 00:03:54.540 align:start position:0%
all right
so<00:03:51.580><c> let</c><00:03:51.760><c> me</c><00:03:51.820><c> just</c><00:03:51.940><c> copy</c><00:03:52.680><c> this</c><00:03:53.680><c> whole</c><00:03:54.190><c> block</c><00:03:54.519><c> of</c>

00:03:54.540 --> 00:03:54.550 align:start position:0%
so let me just copy this whole block of
 

00:03:54.550 --> 00:03:56.460 align:start position:0%
so let me just copy this whole block of
code<00:03:54.970><c> to</c><00:03:55.300><c> the</c><00:03:55.390><c> next</c><00:03:55.660><c> slide</c><00:03:55.840><c> and</c><00:03:56.110><c> then</c><00:03:56.350><c> we'll</c>

00:03:56.460 --> 00:03:56.470 align:start position:0%
code to the next slide and then we'll
 

00:03:56.470 --> 00:03:59.610 align:start position:0%
code to the next slide and then we'll
see<00:03:56.650><c> how</c><00:03:56.800><c> to</c><00:03:56.860><c> vectorize</c><00:03:57.280><c> this</c><00:03:58.140><c> so</c><00:03:59.140><c> here's</c><00:03:59.440><c> we</c>

00:03:59.610 --> 00:03:59.620 align:start position:0%
see how to vectorize this so here's we
 

00:03:59.620 --> 00:04:01.290 align:start position:0%
see how to vectorize this so here's we
had<00:03:59.830><c> from</c><00:04:00.010><c> the</c><00:04:00.070><c> previous</c><00:04:00.160><c> line</c><00:04:00.670><c> with</c><00:04:00.970><c> a</c><00:04:01.000><c> four</c>

00:04:01.290 --> 00:04:01.300 align:start position:0%
had from the previous line with a four
 

00:04:01.300 --> 00:04:03.949 align:start position:0%
had from the previous line with a four
group<00:04:01.480><c> going</c><00:04:01.959><c> over</c><00:04:02.350><c> all</c><00:04:02.590><c> M</c><00:04:02.800><c> training</c><00:04:03.310><c> examples</c>

00:04:03.949 --> 00:04:03.959 align:start position:0%
group going over all M training examples
 

00:04:03.959 --> 00:04:09.479 align:start position:0%
group going over all M training examples
so<00:04:05.459><c> recall</c><00:04:06.459><c> that</c><00:04:06.519><c> we</c><00:04:07.269><c> define</c><00:04:08.050><c> the</c><00:04:08.380><c> matrix</c><00:04:08.860><c> X</c><00:04:09.130><c> to</c>

00:04:09.479 --> 00:04:09.489 align:start position:0%
so recall that we define the matrix X to
 

00:04:09.489 --> 00:04:12.350 align:start position:0%
so recall that we define the matrix X to
be<00:04:09.610><c> equal</c><00:04:09.640><c> to</c><00:04:10.239><c> our</c><00:04:10.720><c> training</c><00:04:11.620><c> examples</c>

00:04:12.350 --> 00:04:12.360 align:start position:0%
be equal to our training examples
 

00:04:12.360 --> 00:04:17.400 align:start position:0%
be equal to our training examples
stacked<00:04:13.360><c> up</c><00:04:13.600><c> on</c><00:04:13.840><c> these</c><00:04:14.739><c> columns</c><00:04:15.340><c> like</c><00:04:15.549><c> so</c><00:04:16.410><c> so</c>

00:04:17.400 --> 00:04:17.410 align:start position:0%
stacked up on these columns like so so
 

00:04:17.410 --> 00:04:19.500 align:start position:0%
stacked up on these columns like so so
take<00:04:17.620><c> the</c><00:04:17.739><c> training</c><00:04:17.979><c> examples</c><00:04:18.760><c> stack</c><00:04:19.239><c> them</c><00:04:19.479><c> in</c>

00:04:19.500 --> 00:04:19.510 align:start position:0%
take the training examples stack them in
 

00:04:19.510 --> 00:04:23.870 align:start position:0%
take the training examples stack them in
columns<00:04:20.019><c> so</c><00:04:20.290><c> this</c><00:04:20.560><c> becomes</c><00:04:21.190><c> a</c><00:04:21.479><c> n</c><00:04:22.479><c> or</c><00:04:22.960><c> maybe</c><00:04:23.229><c> NX</c>

00:04:23.870 --> 00:04:23.880 align:start position:0%
columns so this becomes a n or maybe NX
 

00:04:23.880 --> 00:04:26.290 align:start position:0%
columns so this becomes a n or maybe NX
by

00:04:26.290 --> 00:04:26.300 align:start position:0%
by
 

00:04:26.300 --> 00:04:29.510 align:start position:0%
by
dimensional<00:04:27.300><c> matrix</c><00:04:28.039><c> I'm</c><00:04:29.039><c> just</c><00:04:29.310><c> going</c><00:04:29.460><c> to</c>

00:04:29.510 --> 00:04:29.520 align:start position:0%
dimensional matrix I'm just going to
 

00:04:29.520 --> 00:04:31.159 align:start position:0%
dimensional matrix I'm just going to
give<00:04:29.759><c> away</c><00:04:29.879><c> the</c><00:04:29.999><c> punchline</c><00:04:30.389><c> and</c><00:04:30.719><c> tell</c><00:04:30.960><c> you</c>

00:04:31.159 --> 00:04:31.169 align:start position:0%
give away the punchline and tell you
 

00:04:31.169 --> 00:04:33.080 align:start position:0%
give away the punchline and tell you
what<00:04:31.469><c> you</c><00:04:31.650><c> need</c><00:04:31.830><c> to</c><00:04:31.919><c> implement</c><00:04:32.129><c> in</c><00:04:32.520><c> order</c><00:04:32.849><c> to</c>

00:04:33.080 --> 00:04:33.090 align:start position:0%
what you need to implement in order to
 

00:04:33.090 --> 00:04:35.510 align:start position:0%
what you need to implement in order to
vectorize<00:04:33.949><c> implementation</c><00:04:34.949><c> of</c><00:04:35.129><c> this</c><00:04:35.279><c> for</c>

00:04:35.510 --> 00:04:35.520 align:start position:0%
vectorize implementation of this for
 

00:04:35.520 --> 00:04:37.790 align:start position:0%
vectorize implementation of this for
loop<00:04:35.659><c> turns</c><00:04:36.659><c> out</c><00:04:36.810><c> what</c><00:04:36.990><c> you</c><00:04:37.080><c> need</c><00:04:37.259><c> to</c><00:04:37.379><c> do</c><00:04:37.529><c> is</c>

00:04:37.790 --> 00:04:37.800 align:start position:0%
loop turns out what you need to do is
 

00:04:37.800 --> 00:04:45.050 align:start position:0%
loop turns out what you need to do is
compute<00:04:38.629><c> capital</c><00:04:39.629><c> Z</c><00:04:39.870><c> 1</c><00:04:40.189><c> equals</c><00:04:41.419><c> W</c><00:04:42.419><c> 1</c><00:04:42.680><c> X</c><00:04:43.729><c> plus</c><00:04:44.729><c> B</c>

00:04:45.050 --> 00:04:45.060 align:start position:0%
compute capital Z 1 equals W 1 X plus B
 

00:04:45.060 --> 00:04:52.899 align:start position:0%
compute capital Z 1 equals W 1 X plus B
1<00:04:46.969><c> capital</c><00:04:47.969><c> a1</c><00:04:48.479><c> equals</c><00:04:49.259><c> sigmoid</c><00:04:49.860><c> of</c><00:04:50.210><c> z1</c><00:04:51.889><c> then</c>

00:04:52.899 --> 00:04:52.909 align:start position:0%
1 capital a1 equals sigmoid of z1 then
 

00:04:52.909 --> 00:05:01.129 align:start position:0%
1 capital a1 equals sigmoid of z1 then
tap<00:04:53.909><c> code</c><00:04:54.120><c> Z</c><00:04:54.300><c> 2</c><00:04:54.539><c> equals</c><00:04:55.319><c> W</c><00:04:56.249><c> 2</c><00:04:56.520><c> times</c><00:04:57.270><c> a</c><00:04:58.490><c> 1</c><00:04:59.779><c> plus</c><00:05:00.779><c> B</c>

00:05:01.129 --> 00:05:01.139 align:start position:0%
tap code Z 2 equals W 2 times a 1 plus B
 

00:05:01.139 --> 00:05:10.129 align:start position:0%
tap code Z 2 equals W 2 times a 1 plus B
2<00:05:01.409><c> and</c><00:05:02.039><c> then</c><00:05:03.029><c> a2</c><00:05:04.279><c> equals</c><00:05:05.279><c> sigmoid</c><00:05:05.879><c> of</c><00:05:08.000><c> Z</c><00:05:09.000><c> 2</c><00:05:09.240><c> so</c>

00:05:10.129 --> 00:05:10.139 align:start position:0%
2 and then a2 equals sigmoid of Z 2 so
 

00:05:10.139 --> 00:05:12.830 align:start position:0%
2 and then a2 equals sigmoid of Z 2 so
if<00:05:10.409><c> you</c><00:05:10.500><c> want</c><00:05:10.710><c> the</c><00:05:10.979><c> analogy</c><00:05:11.460><c> is</c><00:05:11.729><c> that</c><00:05:12.000><c> we</c><00:05:12.539><c> went</c>

00:05:12.830 --> 00:05:12.840 align:start position:0%
if you want the analogy is that we went
 

00:05:12.840 --> 00:05:17.269 align:start position:0%
if you want the analogy is that we went
from<00:05:13.439><c> lowercase</c><00:05:14.430><c> vector</c><00:05:15.120><c> X</c><00:05:15.330><c> s</c><00:05:15.599><c> to</c><00:05:16.560><c> this</c>

00:05:17.269 --> 00:05:17.279 align:start position:0%
from lowercase vector X s to this
 

00:05:17.279 --> 00:05:20.600 align:start position:0%
from lowercase vector X s to this
capital<00:05:17.939><c> case</c><00:05:18.150><c> X</c><00:05:18.539><c> matrix</c><00:05:19.409><c> by</c><00:05:19.889><c> stacking</c><00:05:20.430><c> up</c><00:05:20.580><c> the</c>

00:05:20.600 --> 00:05:20.610 align:start position:0%
capital case X matrix by stacking up the
 

00:05:20.610 --> 00:05:23.059 align:start position:0%
capital case X matrix by stacking up the
lower<00:05:21.000><c> case</c><00:05:21.270><c> X's</c><00:05:21.750><c> in</c><00:05:21.990><c> different</c><00:05:22.319><c> columns</c><00:05:22.740><c> if</c>

00:05:23.059 --> 00:05:23.069 align:start position:0%
lower case X's in different columns if
 

00:05:23.069 --> 00:05:25.399 align:start position:0%
lower case X's in different columns if
you<00:05:23.610><c> do</c><00:05:23.759><c> the</c><00:05:23.909><c> same</c><00:05:24.089><c> thing</c><00:05:24.360><c> for</c><00:05:24.539><c> the</c><00:05:24.659><c> Z's</c><00:05:24.900><c> so</c><00:05:25.229><c> for</c>

00:05:25.399 --> 00:05:25.409 align:start position:0%
you do the same thing for the Z's so for
 

00:05:25.409 --> 00:05:33.709 align:start position:0%
you do the same thing for the Z's so for
example<00:05:25.830><c> if</c><00:05:26.099><c> you</c><00:05:26.610><c> take</c><00:05:26.789><c> Z</c><00:05:27.060><c> 1</c><00:05:28.580><c> 1</c><00:05:30.289><c> z</c><00:05:31.289><c> 1</c><00:05:31.319><c> 2</c><00:05:31.860><c> and</c><00:05:32.789><c> so</c>

00:05:33.709 --> 00:05:33.719 align:start position:0%
example if you take Z 1 1 z 1 2 and so
 

00:05:33.719 --> 00:05:36.769 align:start position:0%
example if you take Z 1 1 z 1 2 and so
on<00:05:33.750><c> these</c><00:05:34.199><c> are</c><00:05:34.379><c> all</c><00:05:34.529><c> column</c><00:05:34.979><c> vectors</c><00:05:35.430><c> up</c><00:05:35.639><c> to</c><00:05:36.479><c> Z</c>

00:05:36.769 --> 00:05:36.779 align:start position:0%
on these are all column vectors up to Z
 

00:05:36.779 --> 00:05:42.679 align:start position:0%
on these are all column vectors up to Z
1<00:05:37.669><c> m</c><00:05:39.050><c> right</c><00:05:40.050><c> so</c><00:05:40.379><c> that's</c><00:05:40.589><c> this</c><00:05:41.520><c> first</c><00:05:42.180><c> quantity</c>

00:05:42.679 --> 00:05:42.689 align:start position:0%
1 m right so that's this first quantity
 

00:05:42.689 --> 00:05:44.779 align:start position:0%
1 m right so that's this first quantity
but<00:05:43.020><c> all</c><00:05:43.199><c> M</c><00:05:43.439><c> of</c><00:05:43.469><c> them</c><00:05:43.740><c> and</c><00:05:43.949><c> stack</c><00:05:44.550><c> them</c><00:05:44.759><c> in</c>

00:05:44.779 --> 00:05:44.789 align:start position:0%
but all M of them and stack them in
 

00:05:44.789 --> 00:05:49.519 align:start position:0%
but all M of them and stack them in
columns<00:05:45.379><c> then</c><00:05:46.379><c> this</c><00:05:46.710><c> gives</c><00:05:47.219><c> you</c><00:05:47.430><c> the</c><00:05:48.180><c> matrix</c><00:05:48.529><c> Z</c>

00:05:49.519 --> 00:05:49.529 align:start position:0%
columns then this gives you the matrix Z
 

00:05:49.529 --> 00:05:52.309 align:start position:0%
columns then this gives you the matrix Z
1<00:05:49.770><c> and</c><00:05:49.979><c> similarly</c><00:05:50.669><c> if</c><00:05:50.939><c> you</c><00:05:51.060><c> look</c><00:05:51.210><c> at</c><00:05:51.389><c> say</c><00:05:52.110><c> this</c>

00:05:52.309 --> 00:05:52.319 align:start position:0%
1 and similarly if you look at say this
 

00:05:52.319 --> 00:05:59.420 align:start position:0%
1 and similarly if you look at say this
quantity<00:05:52.860><c> you</c><00:05:52.889><c> take</c><00:05:53.370><c> a</c><00:05:53.839><c> 1</c><00:05:54.839><c> 1</c><00:05:55.620><c> a</c><00:05:55.860><c> 1</c><00:05:56.699><c> 2</c><00:05:57.409><c> and</c><00:05:58.409><c> so</c><00:05:59.219><c> on</c>

00:05:59.420 --> 00:05:59.430 align:start position:0%
quantity you take a 1 1 a 1 2 and so on
 

00:05:59.430 --> 00:06:06.230 align:start position:0%
quantity you take a 1 1 a 1 2 and so on
in<00:05:59.669><c> a</c><00:06:00.110><c> 1m</c><00:06:01.110><c> and</c><00:06:03.229><c> stack</c><00:06:04.229><c> them</c><00:06:04.500><c> up</c><00:06:04.620><c> in</c><00:06:05.240><c> columns</c>

00:06:06.230 --> 00:06:06.240 align:start position:0%
in a 1m and stack them up in columns
 

00:06:06.240 --> 00:06:08.749 align:start position:0%
in a 1m and stack them up in columns
then<00:06:07.050><c> this</c><00:06:07.379><c> just</c><00:06:07.860><c> as</c><00:06:07.979><c> we</c><00:06:08.129><c> went</c><00:06:08.310><c> from</c><00:06:08.430><c> lower</c>

00:06:08.749 --> 00:06:08.759 align:start position:0%
then this just as we went from lower
 

00:06:08.759 --> 00:06:11.959 align:start position:0%
then this just as we went from lower
case<00:06:09.060><c> X</c><00:06:09.300><c> to</c><00:06:09.689><c> capital</c><00:06:10.319><c> case</c><00:06:10.529><c> X</c><00:06:10.800><c> and</c><00:06:11.039><c> lo</c><00:06:11.699><c> que</c><00:06:11.909><c> si</c>

00:06:11.959 --> 00:06:11.969 align:start position:0%
case X to capital case X and lo que si
 

00:06:11.969 --> 00:06:14.719 align:start position:0%
case X to capital case X and lo que si
to<00:06:12.270><c> Catholic</c><00:06:12.659><c> 8z</c><00:06:13.139><c> this</c><00:06:13.379><c> goes</c><00:06:13.620><c> from</c><00:06:13.860><c> the</c><00:06:14.520><c> lower</c>

00:06:14.719 --> 00:06:14.729 align:start position:0%
to Catholic 8z this goes from the lower
 

00:06:14.729 --> 00:06:18.040 align:start position:0%
to Catholic 8z this goes from the lower
case<00:06:14.969><c> a</c><00:06:15.210><c> which</c><00:06:15.599><c> are</c><00:06:15.719><c> vectors</c><00:06:16.139><c> to</c><00:06:16.979><c> do</c><00:06:17.250><c> some</c>

00:06:18.040 --> 00:06:18.050 align:start position:0%
case a which are vectors to do some
 

00:06:18.050 --> 00:06:22.129 align:start position:0%
case a which are vectors to do some
capital<00:06:19.050><c> A</c><00:06:19.520><c> 1</c><00:06:20.520><c> that's</c><00:06:21.060><c> over</c><00:06:21.509><c> there</c><00:06:21.659><c> and</c>

00:06:22.129 --> 00:06:22.139 align:start position:0%
capital A 1 that's over there and
 

00:06:22.139 --> 00:06:27.679 align:start position:0%
capital A 1 that's over there and
similarly<00:06:22.649><c> for</c><00:06:23.189><c> Z</c><00:06:24.319><c> 2</c><00:06:25.319><c> and</c><00:06:25.349><c> a</c><00:06:25.740><c> 2</c><00:06:26.659><c> right</c><00:06:27.659><c> there</c>

00:06:27.679 --> 00:06:27.689 align:start position:0%
similarly for Z 2 and a 2 right there
 

00:06:27.689 --> 00:06:29.719 align:start position:0%
similarly for Z 2 and a 2 right there
also<00:06:28.199><c> attained</c><00:06:28.500><c> by</c><00:06:28.649><c> taking</c><00:06:29.039><c> these</c><00:06:29.219><c> vectors</c>

00:06:29.719 --> 00:06:29.729 align:start position:0%
also attained by taking these vectors
 

00:06:29.729 --> 00:06:32.540 align:start position:0%
also attained by taking these vectors
and<00:06:29.969><c> stacking</c><00:06:30.629><c> them</c><00:06:30.889><c> horizontally</c><00:06:31.889><c> and</c>

00:06:32.540 --> 00:06:32.550 align:start position:0%
and stacking them horizontally and
 

00:06:32.550 --> 00:06:34.159 align:start position:0%
and stacking them horizontally and
taking<00:06:32.879><c> these</c><00:06:33.029><c> vectors</c><00:06:33.479><c> and</c><00:06:33.509><c> stacking</c><00:06:33.899><c> them</c>

00:06:34.159 --> 00:06:34.169 align:start position:0%
taking these vectors and stacking them
 

00:06:34.169 --> 00:06:37.909 align:start position:0%
taking these vectors and stacking them
horizontally<00:06:34.580><c> in</c><00:06:35.580><c> order</c><00:06:35.940><c> to</c><00:06:36.089><c> get</c><00:06:36.300><c> Z</c><00:06:36.889><c> Capital</c><00:06:37.889><c> Z</c>

00:06:37.909 --> 00:06:37.919 align:start position:0%
horizontally in order to get Z Capital Z
 

00:06:37.919 --> 00:06:40.390 align:start position:0%
horizontally in order to get Z Capital Z
2<00:06:38.279><c> and</c><00:06:38.310><c> capital</c><00:06:39.060><c> e</c><00:06:39.120><c> 2</c>

00:06:40.390 --> 00:06:40.400 align:start position:0%
2 and capital e 2
 

00:06:40.400 --> 00:06:42.920 align:start position:0%
2 and capital e 2
one<00:06:41.400><c> of</c><00:06:41.550><c> the</c><00:06:41.639><c> property</c><00:06:42.090><c> of</c><00:06:42.210><c> this</c><00:06:42.330><c> notation</c>

00:06:42.920 --> 00:06:42.930 align:start position:0%
one of the property of this notation
 

00:06:42.930 --> 00:06:44.780 align:start position:0%
one of the property of this notation
that<00:06:43.260><c> might</c><00:06:43.440><c> help</c><00:06:43.740><c> you</c><00:06:43.889><c> to</c><00:06:43.919><c> think</c><00:06:44.040><c> about</c><00:06:44.400><c> it</c><00:06:44.610><c> is</c>

00:06:44.780 --> 00:06:44.790 align:start position:0%
that might help you to think about it is
 

00:06:44.790 --> 00:06:48.129 align:start position:0%
that might help you to think about it is
that<00:06:45.090><c> these</c><00:06:45.720><c> matrices</c><00:06:46.169><c> say</c><00:06:46.740><c> Z</c><00:06:47.070><c> and</c><00:06:47.310><c> a</c>

00:06:48.129 --> 00:06:48.139 align:start position:0%
that these matrices say Z and a
 

00:06:48.139 --> 00:06:50.840 align:start position:0%
that these matrices say Z and a
horizontally<00:06:49.139><c> we're</c><00:06:49.380><c> going</c><00:06:49.560><c> to</c><00:06:49.680><c> index</c><00:06:50.100><c> across</c>

00:06:50.840 --> 00:06:50.850 align:start position:0%
horizontally we're going to index across
 

00:06:50.850 --> 00:06:53.140 align:start position:0%
horizontally we're going to index across
training<00:06:51.240><c> examples</c><00:06:51.660><c> so</c><00:06:51.930><c> that's</c><00:06:52.169><c> why</c><00:06:52.350><c> the</c>

00:06:53.140 --> 00:06:53.150 align:start position:0%
training examples so that's why the
 

00:06:53.150 --> 00:06:55.640 align:start position:0%
training examples so that's why the
horizontal<00:06:54.150><c> index</c><00:06:54.540><c> you</c><00:06:54.900><c> know</c><00:06:54.990><c> corresponds</c><00:06:55.590><c> to</c>

00:06:55.640 --> 00:06:55.650 align:start position:0%
horizontal index you know corresponds to
 

00:06:55.650 --> 00:06:57.170 align:start position:0%
horizontal index you know corresponds to
different<00:06:56.040><c> training</c><00:06:56.280><c> examples</c><00:06:56.699><c> is</c><00:06:56.850><c> sweep</c>

00:06:57.170 --> 00:06:57.180 align:start position:0%
different training examples is sweep
 

00:06:57.180 --> 00:06:58.550 align:start position:0%
different training examples is sweep
from<00:06:57.300><c> left</c><00:06:57.389><c> to</c><00:06:57.630><c> right</c><00:06:57.870><c> you're</c><00:06:58.110><c> scanning</c>

00:06:58.550 --> 00:06:58.560 align:start position:0%
from left to right you're scanning
 

00:06:58.560 --> 00:07:01.090 align:start position:0%
from left to right you're scanning
through<00:06:58.740><c> the</c><00:06:58.770><c> training</c><00:06:59.160><c> set</c><00:06:59.370><c> and</c><00:06:59.870><c> vertically</c>

00:07:01.090 --> 00:07:01.100 align:start position:0%
through the training set and vertically
 

00:07:01.100 --> 00:07:04.010 align:start position:0%
through the training set and vertically
this<00:07:02.100><c> vertical</c><00:07:02.820><c> index</c><00:07:03.240><c> corresponds</c><00:07:03.990><c> to</c>

00:07:04.010 --> 00:07:04.020 align:start position:0%
this vertical index corresponds to
 

00:07:04.020 --> 00:07:06.200 align:start position:0%
this vertical index corresponds to
different<00:07:04.620><c> notes</c><00:07:04.830><c> in</c><00:07:05.010><c> the</c><00:07:05.130><c> neural</c><00:07:05.370><c> network</c><00:07:05.729><c> so</c>

00:07:06.200 --> 00:07:06.210 align:start position:0%
different notes in the neural network so
 

00:07:06.210 --> 00:07:11.900 align:start position:0%
different notes in the neural network so
for<00:07:07.020><c> example</c><00:07:08.780><c> this</c><00:07:09.780><c> note</c><00:07:10.740><c> this</c><00:07:11.130><c> value</c><00:07:11.580><c> at</c><00:07:11.790><c> the</c>

00:07:11.900 --> 00:07:11.910 align:start position:0%
for example this note this value at the
 

00:07:11.910 --> 00:07:14.930 align:start position:0%
for example this note this value at the
topmost<00:07:12.919><c> topmost</c><00:07:13.919><c> corner</c><00:07:14.430><c> of</c><00:07:14.490><c> the</c><00:07:14.550><c> matrix</c>

00:07:14.930 --> 00:07:14.940 align:start position:0%
topmost topmost corner of the matrix
 

00:07:14.940 --> 00:07:17.600 align:start position:0%
topmost topmost corner of the matrix
corresponds<00:07:15.570><c> to</c><00:07:15.630><c> the</c><00:07:15.810><c> activation</c><00:07:16.470><c> of</c><00:07:16.650><c> the</c>

00:07:17.600 --> 00:07:17.610 align:start position:0%
corresponds to the activation of the
 

00:07:17.610 --> 00:07:19.550 align:start position:0%
corresponds to the activation of the
first<00:07:17.910><c> hidden</c><00:07:18.150><c> unit</c><00:07:18.330><c> on</c><00:07:18.840><c> the</c><00:07:19.020><c> first</c><00:07:19.260><c> training</c>

00:07:19.550 --> 00:07:19.560 align:start position:0%
first hidden unit on the first training
 

00:07:19.560 --> 00:07:23.240 align:start position:0%
first hidden unit on the first training
example<00:07:19.680><c> on</c><00:07:20.960><c> one</c><00:07:21.960><c> value</c><00:07:22.320><c> down</c><00:07:22.500><c> corresponds</c><00:07:23.220><c> to</c>

00:07:23.240 --> 00:07:23.250 align:start position:0%
example on one value down corresponds to
 

00:07:23.250 --> 00:07:25.700 align:start position:0%
example on one value down corresponds to
the<00:07:23.370><c> activation</c><00:07:23.729><c> in</c><00:07:24.180><c> the</c><00:07:24.479><c> second</c><00:07:25.410><c> hidden</c><00:07:25.560><c> unit</c>

00:07:25.700 --> 00:07:25.710 align:start position:0%
the activation in the second hidden unit
 

00:07:25.710 --> 00:07:28.490 align:start position:0%
the activation in the second hidden unit
on<00:07:26.160><c> the</c><00:07:26.310><c> first</c><00:07:26.520><c> training</c><00:07:26.760><c> example</c><00:07:27.290><c> then</c><00:07:28.290><c> the</c>

00:07:28.490 --> 00:07:28.500 align:start position:0%
on the first training example then the
 

00:07:28.500 --> 00:07:30.170 align:start position:0%
on the first training example then the
third<00:07:28.889><c> heading</c><00:07:29.250><c> unit</c><00:07:29.490><c> on</c><00:07:29.610><c> the</c><00:07:29.700><c> first</c><00:07:29.940><c> training</c>

00:07:30.170 --> 00:07:30.180 align:start position:0%
third heading unit on the first training
 

00:07:30.180 --> 00:07:32.750 align:start position:0%
third heading unit on the first training
example<00:07:30.270><c> and</c><00:07:30.870><c> so</c><00:07:31.080><c> on</c><00:07:31.289><c> so</c><00:07:31.560><c> as</c><00:07:31.680><c> you</c><00:07:31.860><c> scan</c><00:07:32.490><c> down</c>

00:07:32.750 --> 00:07:32.760 align:start position:0%
example and so on so as you scan down
 

00:07:32.760 --> 00:07:36.440 align:start position:0%
example and so on so as you scan down
this<00:07:33.120><c> is</c><00:07:33.330><c> new</c><00:07:33.630><c> indexing</c><00:07:34.260><c> into</c><00:07:34.440><c> the</c><00:07:35.450><c> hidden</c>

00:07:36.440 --> 00:07:36.450 align:start position:0%
this is new indexing into the hidden
 

00:07:36.450 --> 00:07:40.279 align:start position:0%
this is new indexing into the hidden
units<00:07:36.840><c> number</c><00:07:38.720><c> where</c><00:07:39.720><c> as</c><00:07:39.900><c> you</c><00:07:40.020><c> do</c><00:07:40.139><c> with</c>

00:07:40.279 --> 00:07:40.289 align:start position:0%
units number where as you do with
 

00:07:40.289 --> 00:07:42.260 align:start position:0%
units number where as you do with
horizontally<00:07:40.979><c> then</c><00:07:41.190><c> you're</c><00:07:41.430><c> going</c><00:07:41.580><c> from</c><00:07:41.850><c> the</c>

00:07:42.260 --> 00:07:42.270 align:start position:0%
horizontally then you're going from the
 

00:07:42.270 --> 00:07:43.610 align:start position:0%
horizontally then you're going from the
first<00:07:42.539><c> hidden</c><00:07:42.690><c> unit</c><00:07:42.840><c> in</c><00:07:43.080><c> the</c><00:07:43.169><c> first</c><00:07:43.410><c> training</c>

00:07:43.610 --> 00:07:43.620 align:start position:0%
first hidden unit in the first training
 

00:07:43.620 --> 00:07:45.830 align:start position:0%
first hidden unit in the first training
example<00:07:43.680><c> to</c><00:07:44.340><c> you</c><00:07:44.460><c> now</c><00:07:45.030><c> the</c><00:07:45.090><c> first</c><00:07:45.630><c> in</c><00:07:45.750><c> the</c>

00:07:45.830 --> 00:07:45.840 align:start position:0%
example to you now the first in the
 

00:07:45.840 --> 00:07:47.629 align:start position:0%
example to you now the first in the
human<00:07:46.139><c> second</c><00:07:46.530><c> training</c><00:07:46.710><c> example</c><00:07:46.770><c> the</c><00:07:47.400><c> third</c>

00:07:47.629 --> 00:07:47.639 align:start position:0%
human second training example the third
 

00:07:47.639 --> 00:07:50.600 align:start position:0%
human second training example the third
turn<00:07:47.850><c> example</c><00:07:48.330><c> and</c><00:07:48.510><c> so</c><00:07:48.960><c> on</c><00:07:49.169><c> until</c><00:07:49.620><c> this</c><00:07:50.220><c> note</c>

00:07:50.600 --> 00:07:50.610 align:start position:0%
turn example and so on until this note
 

00:07:50.610 --> 00:07:53.540 align:start position:0%
turn example and so on until this note
here<00:07:50.970><c> corresponds</c><00:07:51.930><c> to</c><00:07:51.990><c> the</c><00:07:52.350><c> activation</c><00:07:53.130><c> of</c>

00:07:53.540 --> 00:07:53.550 align:start position:0%
here corresponds to the activation of
 

00:07:53.550 --> 00:07:55.670 align:start position:0%
here corresponds to the activation of
the<00:07:54.000><c> first</c><00:07:54.360><c> hidden</c><00:07:54.539><c> unit</c><00:07:54.690><c> in</c><00:07:55.139><c> the</c><00:07:55.260><c> final</c>

00:07:55.670 --> 00:07:55.680 align:start position:0%
the first hidden unit in the final
 

00:07:55.680 --> 00:07:58.460 align:start position:0%
the first hidden unit in the final
training<00:07:55.979><c> example</c><00:07:56.460><c> in</c><00:07:56.610><c> the</c><00:07:56.789><c> M</c><00:07:57.470><c> training</c>

00:07:58.460 --> 00:07:58.470 align:start position:0%
training example in the M training
 

00:07:58.470 --> 00:08:04.550 align:start position:0%
training example in the M training
example<00:07:59.780><c> ok</c><00:08:00.780><c> so</c><00:08:01.050><c> the</c><00:08:01.880><c> horizontal</c><00:08:02.880><c> the</c><00:08:03.630><c> the</c>

00:08:04.550 --> 00:08:04.560 align:start position:0%
example ok so the horizontal the the
 

00:08:04.560 --> 00:08:06.950 align:start position:0%
example ok so the horizontal the the
matrix<00:08:04.979><c> a</c><00:08:05.130><c> goes</c><00:08:05.940><c> over</c><00:08:06.330><c> a</c><00:08:06.360><c> different</c><00:08:06.599><c> training</c>

00:08:06.950 --> 00:08:06.960 align:start position:0%
matrix a goes over a different training
 

00:08:06.960 --> 00:08:11.779 align:start position:0%
matrix a goes over a different training
examples<00:08:08.000><c> and</c><00:08:10.280><c> vertically</c><00:08:11.280><c> the</c><00:08:11.490><c> different</c>

00:08:11.779 --> 00:08:11.789 align:start position:0%
examples and vertically the different
 

00:08:11.789 --> 00:08:14.029 align:start position:0%
examples and vertically the different
indices<00:08:12.180><c> in</c><00:08:12.539><c> the</c><00:08:12.810><c> matrix</c><00:08:13.139><c> a</c><00:08:13.320><c> corresponds</c><00:08:13.889><c> to</c>

00:08:14.029 --> 00:08:14.039 align:start position:0%
indices in the matrix a corresponds to
 

00:08:14.039 --> 00:08:22.969 align:start position:0%
indices in the matrix a corresponds to
different<00:08:15.530><c> hidden</c><00:08:16.530><c> units</c><00:08:20.300><c> and</c><00:08:21.710><c> a</c><00:08:22.710><c> similar</c>

00:08:22.969 --> 00:08:22.979 align:start position:0%
different hidden units and a similar
 

00:08:22.979 --> 00:08:26.150 align:start position:0%
different hidden units and a similar
intuition<00:08:23.639><c> holds</c><00:08:24.090><c> true</c><00:08:24.360><c> for</c><00:08:24.599><c> the</c><00:08:25.169><c> matrix</c><00:08:25.530><c> Z</c><00:08:25.860><c> as</c>

00:08:26.150 --> 00:08:26.160 align:start position:0%
intuition holds true for the matrix Z as
 

00:08:26.160 --> 00:08:30.080 align:start position:0%
intuition holds true for the matrix Z as
well<00:08:26.190><c> as</c><00:08:27.200><c> well</c><00:08:28.200><c> as</c><00:08:28.229><c> for</c><00:08:28.440><c> X</c><00:08:28.620><c> where</c><00:08:29.090><c> horizontally</c>

00:08:30.080 --> 00:08:30.090 align:start position:0%
well as well as for X where horizontally
 

00:08:30.090 --> 00:08:31.370 align:start position:0%
well as well as for X where horizontally
it<00:08:30.180><c> corresponds</c><00:08:30.660><c> to</c><00:08:30.780><c> different</c><00:08:31.139><c> training</c>

00:08:31.370 --> 00:08:31.380 align:start position:0%
it corresponds to different training
 

00:08:31.380 --> 00:08:33.709 align:start position:0%
it corresponds to different training
examples<00:08:31.770><c> and</c><00:08:31.940><c> vertically</c><00:08:32.940><c> it</c><00:08:33.089><c> corresponds</c>

00:08:33.709 --> 00:08:33.719 align:start position:0%
examples and vertically it corresponds
 

00:08:33.719 --> 00:08:36.050 align:start position:0%
examples and vertically it corresponds
to<00:08:33.750><c> different</c><00:08:34.500><c> features</c><00:08:35.159><c> different</c><00:08:35.370><c> input</c>

00:08:36.050 --> 00:08:36.060 align:start position:0%
to different features different input
 

00:08:36.060 --> 00:08:38.420 align:start position:0%
to different features different input
features<00:08:36.500><c> which</c><00:08:37.500><c> are</c><00:08:37.740><c> really</c><00:08:37.950><c> different</c>

00:08:38.420 --> 00:08:38.430 align:start position:0%
features which are really different
 

00:08:38.430 --> 00:08:39.620 align:start position:0%
features which are really different
notes<00:08:38.640><c> in</c><00:08:39.000><c> phileo</c>

00:08:39.620 --> 00:08:39.630 align:start position:0%
notes in phileo
 

00:08:39.630 --> 00:08:43.310 align:start position:0%
notes in phileo
of<00:08:40.020><c> the</c><00:08:40.409><c> neural</c><00:08:40.680><c> network</c><00:08:41.870><c> so</c><00:08:42.870><c> with</c><00:08:43.110><c> these</c>

00:08:43.310 --> 00:08:43.320 align:start position:0%
of the neural network so with these
 

00:08:43.320 --> 00:08:45.079 align:start position:0%
of the neural network so with these
equations<00:08:43.560><c> you</c><00:08:43.979><c> now</c><00:08:44.250><c> know</c><00:08:44.490><c> how</c><00:08:44.520><c> to</c><00:08:44.820><c> implement</c>

00:08:45.079 --> 00:08:45.089 align:start position:0%
equations you now know how to implement
 

00:08:45.089 --> 00:08:48.020 align:start position:0%
equations you now know how to implement
a<00:08:45.540><c> neural</c><00:08:45.570><c> network</c><00:08:46.140><c> with</c><00:08:46.650><c> vectorization</c><00:08:47.160><c> that</c>

00:08:48.020 --> 00:08:48.030 align:start position:0%
a neural network with vectorization that
 

00:08:48.030 --> 00:08:49.850 align:start position:0%
a neural network with vectorization that
is<00:08:48.240><c> vectorization</c><00:08:48.660><c> across</c><00:08:49.410><c> multiple</c>

00:08:49.850 --> 00:08:49.860 align:start position:0%
is vectorization across multiple
 

00:08:49.860 --> 00:08:51.260 align:start position:0%
is vectorization across multiple
examples

00:08:51.260 --> 00:08:51.270 align:start position:0%
examples
 

00:08:51.270 --> 00:08:52.820 align:start position:0%
examples
in<00:08:51.330><c> the</c><00:08:51.450><c> next</c><00:08:51.630><c> video</c><00:08:51.990><c> I</c><00:08:52.200><c> want</c><00:08:52.350><c> to</c><00:08:52.440><c> show</c><00:08:52.620><c> you</c><00:08:52.680><c> a</c>

00:08:52.820 --> 00:08:52.830 align:start position:0%
in the next video I want to show you a
 

00:08:52.830 --> 00:08:55.370 align:start position:0%
in the next video I want to show you a
bit<00:08:53.160><c> more</c><00:08:53.190><c> justification</c><00:08:53.730><c> about</c><00:08:54.420><c> why</c><00:08:54.630><c> this</c><00:08:55.170><c> is</c>

00:08:55.370 --> 00:08:55.380 align:start position:0%
bit more justification about why this is
 

00:08:55.380 --> 00:08:57.740 align:start position:0%
bit more justification about why this is
a<00:08:55.500><c> correct</c><00:08:55.950><c> implementation</c><00:08:56.160><c> of</c><00:08:56.880><c> this</c><00:08:57.510><c> type</c><00:08:57.720><c> of</c>

00:08:57.740 --> 00:08:57.750 align:start position:0%
a correct implementation of this type of
 

00:08:57.750 --> 00:08:59.690 align:start position:0%
a correct implementation of this type of
vectorization<00:08:58.140><c> it</c><00:08:59.070><c> turns</c><00:08:59.340><c> out</c><00:08:59.490><c> the</c>

00:08:59.690 --> 00:08:59.700 align:start position:0%
vectorization it turns out the
 

00:08:59.700 --> 00:09:01.640 align:start position:0%
vectorization it turns out the
justification<00:09:00.360><c> will</c><00:09:00.540><c> be</c><00:09:00.630><c> similar</c><00:09:01.050><c> to</c><00:09:01.440><c> whether</c>

00:09:01.640 --> 00:09:01.650 align:start position:0%
justification will be similar to whether
 

00:09:01.650 --> 00:09:03.160 align:start position:0%
justification will be similar to whether
you<00:09:01.800><c> have</c><00:09:01.950><c> seen</c><00:09:02.190><c> for</c><00:09:02.550><c> logistic</c><00:09:02.940><c> regression</c>

00:09:03.160 --> 00:09:03.170 align:start position:0%
you have seen for logistic regression
 

00:09:03.170 --> 00:09:07.130 align:start position:0%
you have seen for logistic regression
let's<00:09:04.170><c> go</c><00:09:04.350><c> on</c><00:09:04.440><c> to</c><00:09:04.560><c> the</c><00:09:04.650><c> next</c><00:09:04.770><c> video</c>

