WEBVTT
Kind: captions
Language: en

00:00:00.590 --> 00:00:03.410
SPEAKER: This is Android Tool
Time, Google AO edition where

00:00:03.410 --> 00:00:06.590
we announced a preview of
the new Android Studio 3.0,

00:00:06.590 --> 00:00:08.800
now available for download
in the Canary channel.

00:00:11.990 --> 00:00:15.140
We decided to bump the
major version to 3.0, thanks

00:00:15.140 --> 00:00:16.910
to the many new features
and some breaking

00:00:16.910 --> 00:00:20.120
changes that we're
introducing in this release.

00:00:20.120 --> 00:00:21.740
We've been listening
to user feedback

00:00:21.740 --> 00:00:24.650
about adding more languages
support to the platform.

00:00:24.650 --> 00:00:28.280
Something fun, concise, and
expressive, like Kotlin.

00:00:28.280 --> 00:00:30.530
So we've decided to
bundle Kotlin support

00:00:30.530 --> 00:00:33.080
with Android Studio
3.0, allowing developers

00:00:33.080 --> 00:00:35.990
to immediately start
using it in their apps.

00:00:35.990 --> 00:00:38.870
You can choose to enable Kotlin
in the new project wizard,

00:00:38.870 --> 00:00:41.870
and the generated activities
will use it by default.

00:00:41.870 --> 00:00:44.510
Or, when adding new
activities to your projects,

00:00:44.510 --> 00:00:46.790
you can use the language
selector at the bottom

00:00:46.790 --> 00:00:48.830
to switch between languages.

00:00:48.830 --> 00:00:52.700
And finally, the convert Java
file to Kotlin file refactoring

00:00:52.700 --> 00:00:55.280
will help when converting
your existing classes.

00:00:55.280 --> 00:01:00.070
Android Studio 3.0 is based on
the 2017.1 branch of IntelliJ

00:01:00.070 --> 00:01:02.450
IDEA, and includes
all the enhancements

00:01:02.450 --> 00:01:04.950
from this, and the
previous stable release,

00:01:04.950 --> 00:01:06.620
including parameter
hints for method

00:01:06.620 --> 00:01:09.800
codes, semantic
highlighting, smart conflict

00:01:09.800 --> 00:01:11.420
resolution and
syntax highlighting

00:01:11.420 --> 00:01:14.000
in version control, and more.

00:01:14.000 --> 00:01:17.090
To help developers bring Android
O features to their apps,

00:01:17.090 --> 00:01:19.280
we're adding support
for front resources,

00:01:19.280 --> 00:01:21.920
and adaptive icons in the IDE.

00:01:21.920 --> 00:01:24.950
You can now create and
preview XML and binary fonts

00:01:24.950 --> 00:01:26.900
in the fonts resource folder.

00:01:26.900 --> 00:01:30.050
The Layout Editor also lets
you pick downloadable fonts

00:01:30.050 --> 00:01:33.980
from the Google fonts
site for text views.

00:01:33.980 --> 00:01:36.650
To create an adaptive
launcher icon for your app,

00:01:36.650 --> 00:01:39.200
open the Asset Studio,
and select the foreground

00:01:39.200 --> 00:01:42.050
and background images
that you'd like to use.

00:01:42.050 --> 00:01:45.320
Of course, we're also including
O system images for the Android

00:01:45.320 --> 00:01:48.080
emulator so you can test
your changes on the current O

00:01:48.080 --> 00:01:49.580
developer preview build.

00:01:49.580 --> 00:01:51.950
Coinciding with
Android Studio 3.0,

00:01:51.950 --> 00:01:54.590
there are also big changes
in the build system.

00:01:54.590 --> 00:01:57.920
We have built bytecode
transformations called Desugar

00:01:57.920 --> 00:02:00.620
into the default toolchain,
enabling developers

00:02:00.620 --> 00:02:04.400
to use Java 8 language features
in their code and libraries.

00:02:04.400 --> 00:02:07.340
We support lambdas,
method references, default

00:02:07.340 --> 00:02:10.669
and static interface methods,
and try-with-resources

00:02:10.669 --> 00:02:12.710
on all API levels.

00:02:12.710 --> 00:02:15.890
If you were previously using
Jack, which is now deprecated,

00:02:15.890 --> 00:02:19.100
or some other bytecode
rewriter such as retrolambda,

00:02:19.100 --> 00:02:21.020
migrating is as simple
as removing them

00:02:21.020 --> 00:02:22.220
from your build files.

00:02:22.220 --> 00:02:24.830
With the new Gradle plugin,
we are bringing performance

00:02:24.830 --> 00:02:26.690
enhancements to
the build process,

00:02:26.690 --> 00:02:29.420
such as dependency
resolution at execution time,

00:02:29.420 --> 00:02:32.750
faster builds for projects
with a large number of modules,

00:02:32.750 --> 00:02:34.610
and incremental dexing.

00:02:34.610 --> 00:02:37.590
To support more fine-grain
dependency configuration,

00:02:37.590 --> 00:02:40.220
including variant awareness
for library modules,

00:02:40.220 --> 00:02:43.400
we had to introduce breaking
changes to our Gradle DSL.

00:02:43.400 --> 00:02:45.110
So please refer to
the documentation

00:02:45.110 --> 00:02:46.880
for migration steps.

00:02:46.880 --> 00:02:49.940
To reduce the burden of setting
up and maintaining CI servers,

00:02:49.940 --> 00:02:52.970
we are also launching
Google's Maven Repo as a place

00:02:52.970 --> 00:02:55.970
where we distribute
Google's build artifacts.

00:02:55.970 --> 00:02:58.610
At launch, we provide the
Android Support libraries,

00:02:58.610 --> 00:03:01.230
and you can start using them
by adding the Maven Repo

00:03:01.230 --> 00:03:03.710
URL to your Gradle files.

00:03:03.710 --> 00:03:07.520
OK, let's talk about some more
updates in the IDE itself.

00:03:07.520 --> 00:03:10.100
For debugging performance
problems with your apps,

00:03:10.100 --> 00:03:13.670
we now ship the unified
Android profiler in-studio.

00:03:13.670 --> 00:03:16.720
It's really a set of three
profilers-- for CPU, memory,

00:03:16.720 --> 00:03:20.120
and network, shown on a single
timeline that also includes

00:03:20.120 --> 00:03:23.450
various app events, such
as user inputs, rotations,

00:03:23.450 --> 00:03:25.490
and activity changes.

00:03:25.490 --> 00:03:27.650
By clicking on any of
the three profilers,

00:03:27.650 --> 00:03:29.300
you can open the detailed view.

00:03:29.300 --> 00:03:31.910
For CPU, this includes
a list of threads,

00:03:31.910 --> 00:03:34.940
and a way to record and
explore method traces.

00:03:34.940 --> 00:03:38.000
The memory view now shows
a more detailed breakdown

00:03:38.000 --> 00:03:39.830
of where the memory
is allocated,

00:03:39.830 --> 00:03:42.020
as well as lets you
track object allocations,

00:03:42.020 --> 00:03:43.970
and dig into heap dumps.

00:03:43.970 --> 00:03:46.580
The network tab, apart from
showing network activity

00:03:46.580 --> 00:03:49.730
on a graph, includes request
and response information,

00:03:49.730 --> 00:03:52.760
such as headers and
payloads for HTTP requests

00:03:52.760 --> 00:03:55.490
that were made using one
of the supported clients.

00:03:55.490 --> 00:03:59.660
For now, we support HTTP URL
connection, and recent versions

00:03:59.660 --> 00:04:02.510
of Volley, and OkHttp.

00:04:02.510 --> 00:04:04.730
Please note that when trying
out the Android profiler

00:04:04.730 --> 00:04:07.280
on pre-O devices
and emulators, you

00:04:07.280 --> 00:04:09.560
have to enable advanced
profiling in the run

00:04:09.560 --> 00:04:13.670
configuration window in order
to see full information.

00:04:13.670 --> 00:04:17.180
If you're writing C or
C++ code in another IDE,

00:04:17.180 --> 00:04:18.839
or perhaps you're
using other tools,

00:04:18.839 --> 00:04:21.980
such as game engine
toolkits, to create your APK,

00:04:21.980 --> 00:04:24.530
you can now use the Android
studio native debugger with

00:04:24.530 --> 00:04:25.640
your app.

00:04:25.640 --> 00:04:27.440
Open the APK for debugging.

00:04:27.440 --> 00:04:29.540
Attach the debug
symbols and sources,

00:04:29.540 --> 00:04:31.640
and you will be able to
step through code just

00:04:31.640 --> 00:04:34.070
as with an app
developed inside Studio.

00:04:34.070 --> 00:04:36.410
Android Studio 3.0
is the first release

00:04:36.410 --> 00:04:38.330
to support creation
of Instant Apps

00:04:38.330 --> 00:04:40.370
from your Android projects.

00:04:40.370 --> 00:04:41.860
There are two new module types--

00:04:41.860 --> 00:04:43.640
Instant App and Feature.

00:04:43.640 --> 00:04:45.740
Together with the new
refactoring system,

00:04:45.740 --> 00:04:48.220
they help modularize your app.

00:04:48.220 --> 00:04:51.080
The App Links Assistant helps
set up the necessary app links

00:04:51.080 --> 00:04:54.320
support, while deploying an
app includes automatic device

00:04:54.320 --> 00:04:57.230
provisioning for
running Instant Apps.

00:04:57.230 --> 00:04:59.330
If you run into any problems
when testing Instant

00:04:59.330 --> 00:05:02.710
App builds, we've
updated the APK analyzer

00:05:02.710 --> 00:05:05.090
to open Instant App zip bundles.

00:05:05.090 --> 00:05:06.020
But that's not all.

00:05:06.020 --> 00:05:09.380
The text viewer now supports
loading ProGuard mapping files

00:05:09.380 --> 00:05:11.770
to show removed
and retain nodes,

00:05:11.770 --> 00:05:14.320
and can generate
ProGuard keep rules.

00:05:14.320 --> 00:05:16.330
It also has an improved
user interface,

00:05:16.330 --> 00:05:20.320
including filtering and search,
lets you explore method usages,

00:05:20.320 --> 00:05:23.440
inspect bytecode
decompiled to smile format,

00:05:23.440 --> 00:05:25.540
and supports multidex.

00:05:25.540 --> 00:05:27.790
The Layout Editor and
the Layout Inspector

00:05:27.790 --> 00:05:31.240
are both getting updates to make
iterating on layouts easier.

00:05:31.240 --> 00:05:34.630
The editor includes better right
to left support, new constraint

00:05:34.630 --> 00:05:37.000
layout features such
as chains and barriers,

00:05:37.000 --> 00:05:38.710
and has a new
error panel showing

00:05:38.710 --> 00:05:40.000
problems in your layouts--

00:05:40.000 --> 00:05:42.720
for example, when you're
missing constraints.

00:05:42.720 --> 00:05:45.430
If you need to pull files
from a device or emulator,

00:05:45.430 --> 00:05:47.860
try out the Device File
Explorer, a much more

00:05:47.860 --> 00:05:50.400
user-friendly way to browse
the remote file system

00:05:50.400 --> 00:05:52.760
than using ADB, for example.

00:05:52.760 --> 00:05:54.430
And finally, we have
exciting updates

00:05:54.430 --> 00:05:55.780
in the Android emulator.

00:05:55.780 --> 00:05:58.780
For the first time, we're
shipping emulator system images

00:05:58.780 --> 00:06:01.180
which contain the full
Play Store, enabling

00:06:01.180 --> 00:06:04.150
you to seamlessly test
integrations with other apps

00:06:04.150 --> 00:06:06.220
without having to sideload APKs.

00:06:06.220 --> 00:06:07.990
Placed around the
emulator also means

00:06:07.990 --> 00:06:10.690
that you no longer have to
deal with outdated Google Play

00:06:10.690 --> 00:06:13.780
services libraries, which will
automatically update, just

00:06:13.780 --> 00:06:16.180
like on a real Android device.

00:06:16.180 --> 00:06:17.770
Please note that
the Play emulator

00:06:17.770 --> 00:06:20.110
images are signed
with release keys,

00:06:20.110 --> 00:06:22.870
so you won't be able to
get elevated privileges.

00:06:22.870 --> 00:06:26.260
If you require root access,
you can use the standard AOSP

00:06:26.260 --> 00:06:28.420
emulator builds.

00:06:28.420 --> 00:06:30.400
Other important
changes in the emulator

00:06:30.400 --> 00:06:33.550
include OpenGL ES
3.0 compatibility,

00:06:33.550 --> 00:06:37.330
a new bug reporting tool under
Emulator Help, Wi-Fi network

00:06:37.330 --> 00:06:40.090
emulation, and a
proxy settings page.

00:06:40.090 --> 00:06:44.000
For ware developers, we
added rotary input controls.

00:06:44.000 --> 00:06:44.500
Whew.

00:06:44.500 --> 00:06:46.375
As you can see, there
are a lot of new things

00:06:46.375 --> 00:06:48.700
to play with in this
release of Android Studio.

00:06:48.700 --> 00:06:51.730
Remember that we're doing these
previews to get your feedback,

00:06:51.730 --> 00:06:54.612
and fix bugs that you
find in your projects.

00:06:54.612 --> 00:06:56.320
You can use the new
Android issue tracker

00:06:56.320 --> 00:06:57.700
to get in touch with us.

00:06:57.700 --> 00:07:01.570
And be sure to follow Android
Studio on Twitter for updates.

00:07:01.570 --> 00:07:05.820
[MUSIC PLAYING]

