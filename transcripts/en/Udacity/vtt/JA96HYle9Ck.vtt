WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
Let me ask you a localization question.

00:00:02.000 --> 00:00:06.000
You remember a robot operating in a plane environment has usually 3 coordinates.

00:00:06.000 --> 00:00:15.000
It has an x-coordinate, a y-coordinate, and a heading direction--often called orientation.

00:00:15.000 --> 00:00:18.000
Now, flying robots have more coordinates.

00:00:18.000 --> 00:00:23.000
If you can orient the robot fully in free space then you have an x, y, and z,

00:00:23.000 --> 00:00:26.000
and you also happen to have 3 rotation angles--

00:00:26.000 --> 00:00:31.000
often called roll, pitch, and yaw.

00:00:31.000 --> 00:00:37.000
If you built a localization system for robots with higher dimensional state spaces,

00:00:37.000 --> 00:00:40.000
I wonder how the memory used will scale

00:00:40.000 --> 00:00:44.000
for our histogram-based localization method.

00:00:44.000 --> 00:00:52.000
Does memory scale linearly, quadratically, exponentially, or none of the above

00:00:52.000 --> 00:00:57.000
in the number of state variables used in localization?

00:00:57.000 --> 00:01:02.000
Again, for a robot operating on a plane, there will be three of them.

00:01:02.000 --> 00:01:04.000
So the number of state variables will be three.

00:01:04.000 --> 00:01:10.000
If you were to look at a flying robot where you have x, y, z, roll, pitch, and yaw,

00:01:10.000 --> 00:01:12.000
You would get six such variables,

00:01:12.000 --> 00:01:17.000
and I wonder how the memory use of the basic histogram localization scales.

00:01:17.000 --> 09:59:59.000
Please check exactly one of those four boxes over here.

