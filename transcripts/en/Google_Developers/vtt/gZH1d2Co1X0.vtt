WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.620
PAUL IRISH: I want to take
a few minutes of your time

00:00:02.620 --> 00:00:04.380
to tell you about
some of the new things

00:00:04.380 --> 00:00:07.100
that we're doing in the Chrome
DevTools specifically focused

00:00:07.100 --> 00:00:08.680
on mobile.

00:00:08.680 --> 00:00:11.320
But to do that, I
really want to take back

00:00:11.320 --> 00:00:14.800
the clock like two years,
back before remote debugging.

00:00:14.800 --> 00:00:16.600
Two years ago,
development for mobile

00:00:16.600 --> 00:00:18.330
was something along
the lines of, OK.

00:00:18.330 --> 00:00:19.454
Let's do it on desktop.

00:00:19.454 --> 00:00:21.870
And then I'll come over, and
I'll kind of drag the window.

00:00:21.870 --> 00:00:22.150
Yeah.

00:00:22.150 --> 00:00:22.650
OK.

00:00:22.650 --> 00:00:27.330
And then I'll pick up my device
and I'll type it in there.

00:00:27.330 --> 00:00:27.921
OK.

00:00:27.921 --> 00:00:28.920
I need to make a change.

00:00:28.920 --> 00:00:30.270
I'll come back here.

00:00:30.270 --> 00:00:33.490
And that, it's a very
slow iteration cycle,

00:00:33.490 --> 00:00:35.690
and that just slows
you down and makes

00:00:35.690 --> 00:00:37.850
it much harder to create
compelling content.

00:00:37.850 --> 00:00:38.810
So we've been
thinking about this,

00:00:38.810 --> 00:00:40.351
and we want to make
that much better.

00:00:40.351 --> 00:00:42.480
We want those iteration
cycles to be really fast.

00:00:42.480 --> 00:00:45.710
We want it to be as easy
to debug and develop

00:00:45.710 --> 00:00:48.450
for mobile as it is on desktop.

00:00:48.450 --> 00:00:50.930
And so I'm going to talk
about three things today.

00:00:50.930 --> 00:00:53.315
First up, remote debugging.

00:00:53.315 --> 00:00:56.180
We'll talk about the browser on
the device, the real experience

00:00:56.180 --> 00:00:57.870
over there, and then
talk about bringing

00:00:57.870 --> 00:00:59.369
some of those mobile
characteristics

00:00:59.369 --> 00:01:01.860
onto the desktop,
and then bringing it

00:01:01.860 --> 00:01:05.319
all into a development workflow
and making it fast and fluid.

00:01:05.319 --> 00:01:07.190
So first up, remote debugging.

00:01:09.827 --> 00:01:11.160
So I've got my phone right here.

00:01:11.160 --> 00:01:13.590
And I want to remote debug it.

00:01:13.590 --> 00:01:17.570
So what I'm going to do
is come up to the top

00:01:17.570 --> 00:01:21.580
here, click on Chrome's Hot Dog
Menu, that's the official name.

00:01:21.580 --> 00:01:24.760
And we'll go down to Tools, and
then down at the bottom down

00:01:24.760 --> 00:01:27.220
here is Inspect Devices.

00:01:27.220 --> 00:01:29.170
So that's what
we're going to do.

00:01:29.170 --> 00:01:33.020
Now you see here that there's
a check box on Discover USB

00:01:33.020 --> 00:01:33.910
Devices.

00:01:33.910 --> 00:01:38.440
This is because the discovery
and communication for devices

00:01:38.440 --> 00:01:41.250
to remote debug is now
inside Chrome completely.

00:01:41.250 --> 00:01:43.480
You used to have to
download the Android SDK,

00:01:43.480 --> 00:01:46.280
get the 80 to binary or
get a Chrome extension.

00:01:46.280 --> 00:01:47.480
Forget all that.

00:01:47.480 --> 00:01:49.150
You just plug in the device.

00:01:49.150 --> 00:01:54.210
So I'll plug in mine now,
and [POPPING NOISES].

00:01:54.210 --> 00:01:54.710
All right.

00:01:54.710 --> 00:01:56.420
Cool.

00:01:56.420 --> 00:01:59.190
It looks like on my phone I
have two different Chromes.

00:01:59.190 --> 00:02:01.580
We have Chrome 32, Chrome 31.

00:02:01.580 --> 00:02:04.790
I have two tabs open here.

00:02:04.790 --> 00:02:07.090
I can do an inspection.

00:02:07.090 --> 00:02:09.800
I can change which
tab is my active tab.

00:02:09.800 --> 00:02:10.800
Reload and close.

00:02:10.800 --> 00:02:12.091
I have a little bit of control.

00:02:12.091 --> 00:02:14.770
And I want to actually
just open up a new tab.

00:02:14.770 --> 00:02:17.060
So I'm going to just type
in a new URL right here,

00:02:17.060 --> 00:02:18.685
and I'm going to go
to news.google.com.

00:02:20.860 --> 00:02:21.360
OK.

00:02:21.360 --> 00:02:25.690
So it opened up on my device,
and you can see it here.

00:02:25.690 --> 00:02:27.620
And I have the DevTools.

00:02:27.620 --> 00:02:28.120
Cool.

00:02:28.120 --> 00:02:30.730
So I'm just going to-- this
is the actual DevTools.

00:02:30.730 --> 00:02:31.340
It's working.

00:02:31.340 --> 00:02:32.030
It's cool.

00:02:32.030 --> 00:02:34.190
It's awesome.

00:02:34.190 --> 00:02:38.450
And when I highlight you
can see-- can you see?

00:02:38.450 --> 00:02:38.950
OK.

00:02:38.950 --> 00:02:39.500
Probably not.

00:02:39.500 --> 00:02:41.580
But I'd love to be
able to show you this.

00:02:41.580 --> 00:02:44.860
And in fact, when we think
about remote debugging,

00:02:44.860 --> 00:02:47.770
it's a lot of-- I
have my DevTools here

00:02:47.770 --> 00:02:50.010
and my device down
here, and it's

00:02:50.010 --> 00:02:51.940
a lot of switching
back and forth.

00:02:51.940 --> 00:02:54.770
And we thought that there's
probably a better way

00:02:54.770 --> 00:02:57.180
to bring what you're
looking at down here

00:02:57.180 --> 00:03:00.670
and have it visible on the
screen where your tools are.

00:03:00.670 --> 00:03:03.320
So we have right here
this little icon.

00:03:03.320 --> 00:03:05.630
And this is a new feature
that we're unveiling today,

00:03:05.630 --> 00:03:07.000
and it's called Screencast.

00:03:07.000 --> 00:03:10.271
And we're able to bring the
screen onto the device right

00:03:10.271 --> 00:03:10.770
here.

00:03:10.770 --> 00:03:17.010
[APPLAUSE]

00:03:17.010 --> 00:03:20.610
PAUL IRISH: So this
is a really cool.

00:03:20.610 --> 00:03:21.110
All right.

00:03:21.110 --> 00:03:22.880
So let's interact
with this page.

00:03:22.880 --> 00:03:23.720
Let's search.

00:03:23.720 --> 00:03:24.220
OK.

00:03:24.220 --> 00:03:25.636
I'm going to just
click in Search,

00:03:25.636 --> 00:03:27.466
and I'm going to
type Google Chrome.

00:03:27.466 --> 00:03:28.140
You know what?

00:03:28.140 --> 00:03:30.490
Typing with my thumbs
is really slow.

00:03:30.490 --> 00:03:32.030
Keyboards are way faster.

00:03:32.030 --> 00:03:33.570
Let's just switch
over to my keyword

00:03:33.570 --> 00:03:36.360
here and finish this off.

00:03:36.360 --> 00:03:36.860
Nice.

00:03:36.860 --> 00:03:38.724
[APPLAUSE]

00:03:38.724 --> 00:03:39.640
PAUL IRISH: All right.

00:03:39.640 --> 00:03:41.050
So I can type.

00:03:41.050 --> 00:03:41.640
I can click.

00:03:41.640 --> 00:03:42.340
I can scroll.

00:03:42.340 --> 00:03:44.270
I can scroll on my trackpad.

00:03:44.270 --> 00:03:45.860
No problem.

00:03:45.860 --> 00:03:48.060
I'm going to go over
to Images and do

00:03:48.060 --> 00:03:52.490
my real favorite
feature, inspect element.

00:03:52.490 --> 00:03:54.032
It works the way you want it to.

00:03:54.032 --> 00:03:55.240
Just pick it with your mouse.

00:03:55.240 --> 00:03:57.660
It works flawlessly.

00:03:57.660 --> 00:03:59.240
Really nice.

00:03:59.240 --> 00:04:00.980
So this is really cool stuff.

00:04:00.980 --> 00:04:06.080
I also have full control here
of the back forward reload.

00:04:06.080 --> 00:04:10.250
And I'm actually just going
to go to a different site.

00:04:10.250 --> 00:04:10.750
Let's see.

00:04:10.750 --> 00:04:14.290
I'm going to come back
here, focus this other tab,

00:04:14.290 --> 00:04:17.680
and we'll bring that up.

00:04:17.680 --> 00:04:18.731
So this is a cool site.

00:04:18.731 --> 00:04:19.980
You might have seen it before.

00:04:19.980 --> 00:04:22.650
It's a Beer Camp kind
of advertisement.

00:04:22.650 --> 00:04:26.002
I'm going to go landscape to
make this a little bit better.

00:04:26.002 --> 00:04:27.710
And one of the things
that I want to show

00:04:27.710 --> 00:04:30.500
is that this is a
really cool site where

00:04:30.500 --> 00:04:33.130
they have this flip-book effect.

00:04:33.130 --> 00:04:35.440
The guys at nclud did
a great job on this.

00:04:35.440 --> 00:04:37.790
But I imagine that it
was very hard to develop,

00:04:37.790 --> 00:04:41.290
because what they're doing is
they're manipulating these CSS

00:04:41.290 --> 00:04:46.210
3D transforms in 3D space and
kind of changing all this.

00:04:46.210 --> 00:04:49.290
I want to show a new kind
of experimental feature

00:04:49.290 --> 00:04:50.820
that we're still working on.

00:04:50.820 --> 00:04:53.090
It's the Layers Panel.

00:04:53.090 --> 00:04:58.690
So here now I'm able to identify
in 3D space what this is like.

00:04:58.690 --> 00:05:00.840
So I get a live preview
of these layers.

00:05:00.840 --> 00:05:03.536
You heard [? Tommy ?] talking
yesterday about layers,

00:05:03.536 --> 00:05:04.910
and now I'm able
to see what they

00:05:04.910 --> 00:05:07.650
look like in a 3D
representation.

00:05:07.650 --> 00:05:08.590
Nice.

00:05:08.590 --> 00:05:09.370
Yeah.

00:05:09.370 --> 00:05:10.070
You like it?

00:05:14.450 --> 00:05:14.950
[APPLAUSE]

00:05:14.950 --> 00:05:16.491
PAUL IRISH: Now they
said to look out

00:05:16.491 --> 00:05:18.640
for the extra information,
and it tells you

00:05:18.640 --> 00:05:20.290
quite a bit of stuff.

00:05:20.290 --> 00:05:22.280
So right now we're
showing the position,

00:05:22.280 --> 00:05:24.720
the size, why it was
composited, which is often

00:05:24.720 --> 00:05:27.480
a really key piece
of information.

00:05:27.480 --> 00:05:29.360
Also an estimate
on how much memory

00:05:29.360 --> 00:05:30.970
it has, how many
paints have gone in.

00:05:30.970 --> 00:05:32.386
So we're getting
a lot of insight,

00:05:32.386 --> 00:05:35.050
especially into
something like the GPU

00:05:35.050 --> 00:05:37.330
behavior on a device,
which thus far has

00:05:37.330 --> 00:05:38.800
been kind of a black box.

00:05:38.800 --> 00:05:40.760
All right.

00:05:40.760 --> 00:05:43.280
So we come out of this.

00:05:43.280 --> 00:05:45.960
So for USB debugging,
just plug it in.

00:05:45.960 --> 00:05:47.390
Don't worry about ADB.

00:05:47.390 --> 00:05:49.090
Don't worry about
Chrome extensions.

00:05:49.090 --> 00:05:49.974
You're good.

00:05:49.974 --> 00:05:52.140
The feature set that's
available on remote debugging

00:05:52.140 --> 00:05:53.740
is the same very
powerful feature

00:05:53.740 --> 00:05:56.185
set they use, too, on
desktop, all that stuff.

00:05:56.185 --> 00:05:58.840
Timeline, memory, debugging,
all of it's there.

00:05:58.840 --> 00:06:01.480
You can Screencast your
screen, interact with it,

00:06:01.480 --> 00:06:03.750
inspect, type, click.

00:06:03.750 --> 00:06:05.400
The clicks are
translated to touches.

00:06:05.400 --> 00:06:07.664
It's exactly what
you would expect.

00:06:07.664 --> 00:06:09.330
And port forwarding
is one more, but I'm

00:06:09.330 --> 00:06:12.400
going to show that
a little bit later.

00:06:12.400 --> 00:06:13.860
I wanted to ask, though-- OK.

00:06:13.860 --> 00:06:17.455
So raise your hands if you
test your stuff on two devices.

00:06:17.455 --> 00:06:18.320
Two devices.

00:06:18.320 --> 00:06:22.540
Keep your hands raised if you
test yourself on 10 devices.

00:06:22.540 --> 00:06:23.630
That's kind of a lot.

00:06:23.630 --> 00:06:24.280
I understand.

00:06:24.280 --> 00:06:27.072
But I imagine that for
everyone-- and congratulations

00:06:27.072 --> 00:06:28.280
for all you 10 device people.

00:06:28.280 --> 00:06:29.130
You guys are heroes.

00:06:29.130 --> 00:06:31.080
That is serious work.

00:06:31.080 --> 00:06:33.680
But I imagine that
everyone that-- there

00:06:33.680 --> 00:06:36.190
are more than 10 devices
that come to your site.

00:06:36.190 --> 00:06:37.370
Right?

00:06:37.370 --> 00:06:39.710
It's hard for us to
evaluate compatibility

00:06:39.710 --> 00:06:40.460
with all of those.

00:06:40.460 --> 00:06:43.379
So remote debugging is very
powerful for understanding

00:06:43.379 --> 00:06:45.670
performance characteristics,
network conditions, things

00:06:45.670 --> 00:06:46.170
like that.

00:06:46.170 --> 00:06:48.800
But we can't do that for
every possible device

00:06:48.800 --> 00:06:50.690
that we need to check
compatibility against.

00:06:50.690 --> 00:06:52.860
So on Chrome DevTools
we've thought about this

00:06:52.860 --> 00:06:55.390
and thought about
what we can do.

00:06:55.390 --> 00:06:58.580
And so today I'm going to
show a new feature called

00:06:58.580 --> 00:07:00.540
Mobile Emulation.

00:07:00.540 --> 00:07:04.980
So this is some cool stuff,
and let me just show it to you.

00:07:04.980 --> 00:07:06.480
I'm going to come
over here, and I'm

00:07:06.480 --> 00:07:13.120
going to open up Wikipedia,
the article for the emulator.

00:07:13.120 --> 00:07:16.550
And I'm interested in
doing some mobile--

00:07:16.550 --> 00:07:19.730
I want to change how this is
represented on mobile devices

00:07:19.730 --> 00:07:23.720
And so I'm just going to try
changing the screen size.

00:07:23.720 --> 00:07:26.070
OK.

00:07:26.070 --> 00:07:30.090
Unfortunately, this is not your
responsive kind of experience

00:07:30.090 --> 00:07:32.654
that you want.

00:07:32.654 --> 00:07:33.690
All right.

00:07:33.690 --> 00:07:36.560
Let's open up DevTools.

00:07:36.560 --> 00:07:39.700
Now down on the
bottom is a drawer.

00:07:39.700 --> 00:07:41.660
You can access it
with this icon,

00:07:41.660 --> 00:07:45.360
or you can just hit
escape to do that.

00:07:45.360 --> 00:07:47.610
And you might be used to
seeing the console down here,

00:07:47.610 --> 00:07:50.590
but there's a new
tab called Emulation.

00:07:50.590 --> 00:07:53.040
Inside Emulation
there's a lot of stuff.

00:07:53.040 --> 00:07:55.730
There's characteristics
for the screen resolution,

00:07:55.730 --> 00:07:58.160
the devicePixelRatio,
autosizing, viewport,

00:07:58.160 --> 00:08:00.112
user agent, Geolocation.

00:08:00.112 --> 00:08:00.820
Good, good stuff.

00:08:00.820 --> 00:08:01.819
There's a lot of things.

00:08:01.819 --> 00:08:06.260
And so there's a few
device presets in here

00:08:06.260 --> 00:08:08.500
that'll help set
all these at once.

00:08:08.500 --> 00:08:13.180
So I'm actually just going
to choose this Nexus 4 here.

00:08:13.180 --> 00:08:15.966
And it has a few viewport
settings of its own,

00:08:15.966 --> 00:08:17.590
a devicePixelRatio
of 2 , a user agent,

00:08:17.590 --> 00:08:20.250
and I'm just going
to turn on Emulation.

00:08:20.250 --> 00:08:23.780
Now Wikipedia serves different
markup to mobile devices,

00:08:23.780 --> 00:08:27.290
so I just need to
do a refresh first.

00:08:27.290 --> 00:08:27.950
But yeah.

00:08:27.950 --> 00:08:31.650
This is a little bit more
like what I'm expecting.

00:08:31.650 --> 00:08:34.929
So a standard user
agent [INAUDIBLE]

00:08:34.929 --> 00:08:38.030
would probably be able to
at least get the mark up

00:08:38.030 --> 00:08:39.409
in CSS for this.

00:08:39.409 --> 00:08:41.890
But we're doing a lot
more than just them.

00:08:41.890 --> 00:08:43.700
First up, I can
scroll, and you can

00:08:43.700 --> 00:08:46.810
see as I scroll the
contents for the pages,

00:08:46.810 --> 00:08:50.620
I see it sliding
out of the viewport.

00:08:50.620 --> 00:08:52.560
My cursor is changed
to this to indicate

00:08:52.560 --> 00:08:54.410
that it is now a touch cursor.

00:08:54.410 --> 00:08:58.570
And in fact, as I touch,
touch events are firing.

00:08:58.570 --> 00:09:00.920
I can hold down Shift and
actually do a pinch, too.

00:09:00.920 --> 00:09:03.810
So I can zoom just like you
would do with your fingers.

00:09:03.810 --> 00:09:06.580
And this is the
exact same viewport

00:09:06.580 --> 00:09:09.410
zooming that you
would see on a phone.

00:09:12.410 --> 00:09:14.560
We put a lot of effort
into making sure

00:09:14.560 --> 00:09:19.450
that the view here that
you see is as close as you

00:09:19.450 --> 00:09:20.590
would see on a real device.

00:09:20.590 --> 00:09:24.359
And so I'm going to try
to bring this over here

00:09:24.359 --> 00:09:25.400
and just remote debug it.

00:09:25.400 --> 00:09:29.130
I'll bring it up on my phone,
since I have one of these.

00:09:29.130 --> 00:09:29.630
Screencast.

00:09:29.630 --> 00:09:31.690
Hello.

00:09:31.690 --> 00:09:35.650
And we'll come back to this.

00:09:35.650 --> 00:09:38.220
And we're looking pretty good.

00:09:38.220 --> 00:09:39.860
So there's a lot going in here.

00:09:39.860 --> 00:09:41.960
And one of the things
that I want to point out

00:09:41.960 --> 00:09:46.400
is that there are,
in some cases--

00:09:46.400 --> 00:09:49.370
so you can see we're
enabling text autosizing

00:09:49.370 --> 00:09:51.630
and also Android font metrics.

00:09:51.630 --> 00:09:55.100
These font metrics are
something us developers are not

00:09:55.100 --> 00:09:56.570
normally exposed to.

00:09:56.570 --> 00:10:00.090
It turns out that
on Android WebKit--

00:10:00.090 --> 00:10:03.300
and devices can actually
set a little fudge factor

00:10:03.300 --> 00:10:05.630
to change the size of
how fonts are rendered.

00:10:05.630 --> 00:10:08.240
This is never exposed to
us in CSS or JavaScript

00:10:08.240 --> 00:10:10.620
or anything else like that,
but devices have this.

00:10:10.620 --> 00:10:12.730
It mostly affects
sites that do not

00:10:12.730 --> 00:10:15.485
have a meta viewport applied,
so kind of desktop sites

00:10:15.485 --> 00:10:16.820
that are viewed.

00:10:16.820 --> 00:10:19.420
But luckily, inside
Blink and WebKit,

00:10:19.420 --> 00:10:20.960
we kind of know
what all these are.

00:10:20.960 --> 00:10:22.900
So we just baked them
into the emulation

00:10:22.900 --> 00:10:26.070
to make sure that the text that
you see inside Emulation mode

00:10:26.070 --> 00:10:27.720
is as close as
possible as to what

00:10:27.720 --> 00:10:30.790
you would see on
the actual device.

00:10:30.790 --> 00:10:31.420
All right.

00:10:31.420 --> 00:10:34.500
I'm going to come back here.

00:10:34.500 --> 00:10:37.160
And I want to talk about
another feature that's in there.

00:10:37.160 --> 00:10:39.820
It's devicePixelRatio.

00:10:39.820 --> 00:10:46.350
So my MacBook Air is
not a retina machine.

00:10:46.350 --> 00:10:48.500
It has a devicePixelRatio of 1.

00:10:48.500 --> 00:10:51.140
In fact, we can see that here.

00:10:51.140 --> 00:10:53.030
This page is just a
really basic demo.

00:10:53.030 --> 00:10:56.710
It uses image set, and we
choose the kind of asset

00:10:56.710 --> 00:11:00.460
based on the devicePixelRatio
of the device.

00:11:00.460 --> 00:11:02.670
And so when I view
it on my machine,

00:11:02.670 --> 00:11:05.630
it's just the 1x image
that's coming in.

00:11:05.630 --> 00:11:08.530
I'm going to open up DevTools
and turn on the Emulation,

00:11:08.530 --> 00:11:10.460
and we're seeing 2x.

00:11:10.460 --> 00:11:16.830
So the devicePixelRatio
emulation captures all of this.

00:11:16.830 --> 00:11:20.010
In fact, things
like image set act

00:11:20.010 --> 00:11:21.460
exactly the way
you would expect.

00:11:21.460 --> 00:11:25.700
Window.devicePixelRatio, any
devicePixelRatio meta queries,

00:11:25.700 --> 00:11:30.190
all of that code that
everything goes through

00:11:30.190 --> 00:11:31.970
on mobile browsers,
it's now going

00:11:31.970 --> 00:11:33.900
through all of that
in the emulation

00:11:33.900 --> 00:11:37.720
feature inside the
Chrome DevTools.

00:11:37.720 --> 00:11:39.450
I took a look at a
few more other sites.

00:11:39.450 --> 00:11:44.850
This is me with the Nexus S
emulating "The Boston Globe."

00:11:44.850 --> 00:11:48.700
And I have an old Nexus S,
so I just brought that up,

00:11:48.700 --> 00:11:50.430
looking pretty
sharp side by side.

00:11:50.430 --> 00:11:56.030
And then I went flower shopping
for my mom for Thanksgiving.

00:11:56.030 --> 00:11:59.130
Again, we're looking
very close now.

00:11:59.130 --> 00:12:01.010
So that's the thing,
is that we really

00:12:01.010 --> 00:12:03.370
think that having the
ability to emulate many

00:12:03.370 --> 00:12:05.980
of the characteristics
of these mobile devices

00:12:05.980 --> 00:12:08.010
saves you a lot of time.

00:12:08.010 --> 00:12:12.340
And so you don't always have to
go down to your actual devices.

00:12:12.340 --> 00:12:15.650
One more thing, this is kind
of an interesting situation.

00:12:15.650 --> 00:12:20.830
This is the Chromium bug
tracker, as you can see.

00:12:20.830 --> 00:12:26.200
And when I resize, it
just kind of sticks there.

00:12:26.200 --> 00:12:30.510
But interestingly, you spend
a lot of time in your browser,

00:12:30.510 --> 00:12:34.290
and you've experienced
desktop pages, especially

00:12:34.290 --> 00:12:35.710
with fixed positioning.

00:12:35.710 --> 00:12:36.670
And you zoom in.

00:12:36.670 --> 00:12:39.190
I'm just doing a shift
pinch right here.

00:12:39.190 --> 00:12:41.550
You'll notice this kind
of a thing happens.

00:12:41.550 --> 00:12:45.340
This is a behavior that you
cannot really emulate normally

00:12:45.340 --> 00:12:47.660
just by resizing the window.

00:12:47.660 --> 00:12:52.390
And because we have
viewport emulation inside

00:12:52.390 --> 00:12:56.630
of this feature, we can
really mimic the behavior

00:12:56.630 --> 00:12:59.440
that you get on a phone.

00:12:59.440 --> 00:13:02.010
So mobile emulation captures
your standard screen

00:13:02.010 --> 00:13:04.850
resolution, the
devicePixelRatio, the text

00:13:04.850 --> 00:13:05.745
autosizing behavior.

00:13:05.745 --> 00:13:08.710
It happens mostly with
pages that they do not

00:13:08.710 --> 00:13:10.785
have a meta viewport set.

00:13:10.785 --> 00:13:13.870
The viewports, though,
this the viewport width

00:13:13.870 --> 00:13:15.710
equals device width,
or you're setting up

00:13:15.710 --> 00:13:17.789
something else, all of
that is now baked in here.

00:13:17.789 --> 00:13:20.330
That's something that we haven't
been able to do on a desktop

00:13:20.330 --> 00:13:21.874
before.

00:13:21.874 --> 00:13:23.290
Touch events, of
course, including

00:13:23.290 --> 00:13:26.850
synthetic gestures like
pinch, zoom, and pan,

00:13:26.850 --> 00:13:29.530
and then your standard
user agent string, device,

00:13:29.530 --> 00:13:31.850
geolocation, orientation
and that stuff.

00:13:31.850 --> 00:13:33.360
I'm going to show one more here.

00:13:33.360 --> 00:13:35.530
This is forecast.io.

00:13:35.530 --> 00:13:39.080
Many people have probably
seen this site before.

00:13:39.080 --> 00:13:41.860
Really nice,
well-developed site.

00:13:41.860 --> 00:13:48.580
But it doesn't really-- my
standard approach would not

00:13:48.580 --> 00:13:49.410
probably work here.

00:13:49.410 --> 00:13:52.335
And even clicking
these menus and map,

00:13:52.335 --> 00:13:54.460
it looks like they're only
bound with touch events.

00:13:54.460 --> 00:13:57.330
So it's a little bit challenging
to approach this completely

00:13:57.330 --> 00:13:59.620
on desktop.

00:13:59.620 --> 00:14:02.905
So I'm going to go into
DevTools, turn on Emulation,

00:14:02.905 --> 00:14:04.280
and just give it
a quick refresh.

00:14:08.820 --> 00:14:13.800
And this is looking a lot
more like what I would expect.

00:14:13.800 --> 00:14:15.300
I can swipe this out.

00:14:15.300 --> 00:14:17.640
I can go into the menu.

00:14:17.640 --> 00:14:20.800
Even go into the map,
and my touch move events

00:14:20.800 --> 00:14:22.520
are behaving just
like I would expect.

00:14:25.260 --> 00:14:26.010
All right.

00:14:26.010 --> 00:14:28.750
So mobile emulation, it
can do a lot of things.

00:14:28.750 --> 00:14:31.020
Emulate the rendering and
mobile characteristics

00:14:31.020 --> 00:14:33.140
that you would get
on many devices

00:14:33.140 --> 00:14:35.060
and have it right
here on desktop.

00:14:35.060 --> 00:14:37.180
You can also see
what a retina would

00:14:37.180 --> 00:14:38.790
look like on a
non-retina machine

00:14:38.790 --> 00:14:41.610
and the vice versa,
and identify if you

00:14:41.610 --> 00:14:45.180
have different assets coming
in for different pixel ratios.

00:14:45.180 --> 00:14:47.730
Emulate that all right here.

00:14:47.730 --> 00:14:48.230
All right.

00:14:48.230 --> 00:14:52.120
Lastly, iterating quickly,
especially on mobile.

00:14:52.120 --> 00:14:55.332
And to do this, I'm
going to launch a demo

00:14:55.332 --> 00:14:57.040
and show a feature
called the Workspaces.

00:14:57.040 --> 00:14:59.390
This is something that
we launched at Google I/O

00:14:59.390 --> 00:15:01.710
earlier this year.

00:15:01.710 --> 00:15:03.640
So I have a site coming up.

00:15:03.640 --> 00:15:04.140
OK.

00:15:04.140 --> 00:15:04.640
Cool.

00:15:04.640 --> 00:15:07.280
HTML5 Please is the site.

00:15:07.280 --> 00:15:09.870
But you can see I'm hosting
it off of a local host.

00:15:09.870 --> 00:15:16.040
But I really want to do some
development on my phone.

00:15:16.040 --> 00:15:20.160
So I can take this over and
go over to about inspect

00:15:20.160 --> 00:15:21.665
and open up my tab.

00:15:24.220 --> 00:15:29.040
And it's not-- come on.

00:15:29.040 --> 00:15:30.730
Oh.

00:15:30.730 --> 00:15:32.490
Oh.

00:15:32.490 --> 00:15:34.720
Right.

00:15:34.720 --> 00:15:39.430
Local host 8000 on the
phone is the phone.

00:15:39.430 --> 00:15:41.470
And the phone doesn't
have a web server on it.

00:15:41.470 --> 00:15:43.300
So right.

00:15:43.300 --> 00:15:43.870
OK.

00:15:43.870 --> 00:15:44.210
Cool.

00:15:44.210 --> 00:15:45.110
We'll come back here.

00:15:45.110 --> 00:15:45.258
Yes.

00:15:45.258 --> 00:15:45.758
Yes.

00:15:45.758 --> 00:15:46.450
Yes.

00:15:46.450 --> 00:15:47.201
Port forwarding.

00:15:47.201 --> 00:15:47.700
OK.

00:15:47.700 --> 00:15:48.500
Cool.

00:15:48.500 --> 00:15:50.460
So let's forward the port.

00:15:50.460 --> 00:15:53.470
So right here we're going to
forward my machine's local host

00:15:53.470 --> 00:15:57.460
8000, send it over to
the device on its 8000.

00:15:57.460 --> 00:15:59.260
We'll turn that guy on.

00:15:59.260 --> 00:16:00.230
Done.

00:16:00.230 --> 00:16:03.090
His green lights light up and
say, you're all good to go,

00:16:03.090 --> 00:16:05.430
and let's try this again.

00:16:05.430 --> 00:16:07.490
Refresh.

00:16:07.490 --> 00:16:07.990
Nice.

00:16:07.990 --> 00:16:08.489
All right.

00:16:08.489 --> 00:16:12.534
[APPLAUSE]

00:16:12.534 --> 00:16:13.450
PAUL IRISH: All right.

00:16:13.450 --> 00:16:13.950
Cool.

00:16:13.950 --> 00:16:18.000
So I have my local project, and
I want to make some changes.

00:16:18.000 --> 00:16:23.480
I'm just going to inspect
element on my phone.

00:16:23.480 --> 00:16:25.530
And we're going
to come down here.

00:16:25.530 --> 00:16:27.622
And it looks like,
actually, these styles

00:16:27.622 --> 00:16:29.080
are coming in from
Sass right here.

00:16:31.790 --> 00:16:34.980
And with Sass we have
source map support.

00:16:34.980 --> 00:16:36.980
So actually if I just
hold down Command,

00:16:36.980 --> 00:16:39.130
I can click on this
property, and we'll

00:16:39.130 --> 00:16:42.360
go to the original location
in the authored source

00:16:42.360 --> 00:16:44.220
where that background
was defined.

00:16:44.220 --> 00:16:46.330
So it's actually in a mixin.

00:16:46.330 --> 00:16:49.860
The color looks like it's
coming in as a variable.

00:16:49.860 --> 00:16:53.680
Let's jump out and Command
click on the color this time.

00:16:53.680 --> 00:16:54.180
OK.

00:16:54.180 --> 00:16:54.800
Cool.

00:16:54.800 --> 00:16:55.550
Cool.

00:16:55.550 --> 00:16:57.750
This is the variable file.

00:16:57.750 --> 00:17:00.620
And the color is
defined right down here.

00:17:00.620 --> 00:17:03.060
And I want to change
it a little bit,

00:17:03.060 --> 00:17:06.670
so let's lighten
it up just a touch.

00:17:06.670 --> 00:17:09.200
I'll type "lighten,"
and we'll go for 20%.

00:17:09.200 --> 00:17:13.240
And I'll just hit Save.

00:17:13.240 --> 00:17:14.270
Nice.

00:17:14.270 --> 00:17:16.810
Cool.

00:17:16.810 --> 00:17:17.660
What do you think?

00:17:17.660 --> 00:17:18.190
50%?

00:17:18.190 --> 00:17:21.819
A little bit more?

00:17:21.819 --> 00:17:26.560
Or we could darken it back up.

00:17:29.750 --> 00:17:30.250
Yeah.

00:17:30.250 --> 00:17:30.760
That's good.

00:17:30.760 --> 00:17:31.680
Nice.

00:17:31.680 --> 00:17:34.760
So what we're doing here
is that I'm typing Sass.

00:17:34.760 --> 00:17:36.620
I'm hitting save
inside the DevTools,

00:17:36.620 --> 00:17:38.890
because I just navigated
right over from style pane

00:17:38.890 --> 00:17:40.120
to my original author code.

00:17:40.120 --> 00:17:41.550
I'm hitting Save.

00:17:41.550 --> 00:17:44.392
I'm getting a recompilation
of that Sass into the CSS.

00:17:44.392 --> 00:17:46.600
And DevTools is like, hey,
you just changed your CSS.

00:17:46.600 --> 00:17:47.550
Let me show it to you.

00:17:47.550 --> 00:17:48.050
OK.

00:17:48.050 --> 00:17:49.880
Cool.

00:17:49.880 --> 00:17:50.950
So that's pretty good.

00:17:50.950 --> 00:17:52.820
And this looks good to me.

00:17:52.820 --> 00:17:55.070
I'm going to change one more
thing about this behavior

00:17:55.070 --> 00:17:58.520
while I'm here on my phone.

00:17:58.520 --> 00:18:02.210
This text box, it's
cool, but it needs

00:18:02.210 --> 00:18:04.070
a little bit of spicing up.

00:18:04.070 --> 00:18:07.210
So I'm going to improve
things a little bit.

00:18:07.210 --> 00:18:10.570
I'm going to jump into the
script file and hit Command O

00:18:10.570 --> 00:18:11.880
and jump into script.js.

00:18:11.880 --> 00:18:14.550
And I know the function that
I want to take a look at,

00:18:14.550 --> 00:18:18.000
so I'm going to hit Command
Shift O and dive into update

00:18:18.000 --> 00:18:19.651
search.

00:18:19.651 --> 00:18:22.150
I'm going to add in one little,
small piece of functionality

00:18:22.150 --> 00:18:23.990
here.

00:18:23.990 --> 00:18:26.520
I'm just going to tweak
things every time I

00:18:26.520 --> 00:18:29.770
type into the search box.

00:18:29.770 --> 00:18:30.500
Wow.

00:18:30.500 --> 00:18:31.166
WebKitTransform.

00:18:34.600 --> 00:18:40.680
The prefixes are on their way.

00:18:40.680 --> 00:18:42.090
We're working on it.

00:18:42.090 --> 00:18:42.740
All right.

00:18:42.740 --> 00:18:45.740
So this looks good to me.

00:18:45.740 --> 00:18:49.360
Math.random()360.

00:18:49.360 --> 00:18:52.920
I think it's going to be great.

00:18:52.920 --> 00:18:54.560
So what I'm doing
is I just finished

00:18:54.560 --> 00:18:56.380
typing that script out.

00:18:56.380 --> 00:18:58.020
I'm just going to hit Save.

00:18:58.020 --> 00:19:00.280
And when I hit Save, the
new function definition

00:19:00.280 --> 00:19:03.091
gets sent to V8,
and V8's like, Oh.

00:19:03.091 --> 00:19:03.590
New.

00:19:03.590 --> 00:19:04.150
Got it.

00:19:04.150 --> 00:19:04.843
Cool.

00:19:04.843 --> 00:19:06.343
I'm not refreshing
the page, but I'm

00:19:06.343 --> 00:19:09.190
going to just come over
here and start typing.

00:19:09.190 --> 00:19:10.280
And all right.

00:19:10.280 --> 00:19:11.710
Nice.

00:19:11.710 --> 00:19:12.440
An improvement.

00:19:12.440 --> 00:19:13.010
Right?

00:19:13.010 --> 00:19:14.140
Right?

00:19:14.140 --> 00:19:15.270
I think so.

00:19:15.270 --> 00:19:16.760
But this is really nice.

00:19:16.760 --> 00:19:20.380
I just updated the Sass,
had it show up live.

00:19:20.380 --> 00:19:21.710
I just undid the JavaScript.

00:19:21.710 --> 00:19:22.730
It evaluated live.

00:19:22.730 --> 00:19:25.300
I didn't refresh the page at
all, and I'm going really fast.

00:19:25.300 --> 00:19:27.230
I'm liking what I'm
doing so much that I'm

00:19:27.230 --> 00:19:29.710
going to come over here.

00:19:29.710 --> 00:19:30.756
Let's get diff.

00:19:30.756 --> 00:19:32.620
Yeah.

00:19:32.620 --> 00:19:35.530
I just remote debugged my
phone, made these changes over

00:19:35.530 --> 00:19:36.220
on my phone.

00:19:36.220 --> 00:19:37.850
I mean I'm seeing it
here on my screen,

00:19:37.850 --> 00:19:42.790
but the changes are
also saved to disk.

00:19:42.790 --> 00:19:47.240
Over in variables.CSS,
I have my change here.

00:19:47.240 --> 00:19:50.490
My big CSS was recompiled, and
then, of course, my JavaScript

00:19:50.490 --> 00:19:51.635
change here, too.

00:19:51.635 --> 00:19:53.010
So all this is
persisted to disk,

00:19:53.010 --> 00:19:56.050
and I'm pretty happy with it.

00:19:56.050 --> 00:19:59.710
So I'm just going to get commit.

00:19:59.710 --> 00:20:01.266
So good.

00:20:01.266 --> 00:20:01.765
OK.

00:20:01.765 --> 00:20:04.780
I'm not going-- because who
wants that thing to happen?

00:20:04.780 --> 00:20:06.512
That's just crazy.

00:20:06.512 --> 00:20:07.012
All right.

00:20:07.012 --> 00:20:07.710
Cool.

00:20:07.710 --> 00:20:09.776
Let's come on back now.

00:20:09.776 --> 00:20:10.276
All right.

00:20:10.276 --> 00:20:11.260
All right.

00:20:11.260 --> 00:20:13.400
So the DevTools
support for Sass that I

00:20:13.400 --> 00:20:15.500
showed you is not Sass-specific.

00:20:15.500 --> 00:20:17.290
It's generalized
for anything that

00:20:17.290 --> 00:20:19.540
outputs source maps in CSS.

00:20:19.540 --> 00:20:22.540
Less, just added
this in Less 1.5.

00:20:22.540 --> 00:20:27.800
In fact, here's a quick
video of this in action.

00:20:27.800 --> 00:20:33.650
This is a little
bootstrap page coming in.

00:20:36.390 --> 00:20:41.800
And what we do is we just
select the well in bootstrap.

00:20:41.800 --> 00:20:43.800
And when you see
it's a Less file,

00:20:43.800 --> 00:20:46.720
we're going to Command click
just like we did before,

00:20:46.720 --> 00:20:52.240
apply a little darken
function and hit Save.

00:20:52.240 --> 00:20:53.350
The recompile happens.

00:20:53.350 --> 00:20:56.160
We bring in the new CSS, and
you get to go really fast.

00:20:58.970 --> 00:21:02.810
I also know that
work is happening

00:21:02.810 --> 00:21:06.310
to bring source maps to
Autoprefixer, to Compass,

00:21:06.310 --> 00:21:10.210
and I hear rumors about
Stylus considering it as well.

00:21:10.210 --> 00:21:12.880
So all this paints a really
nice picture of DevTools

00:21:12.880 --> 00:21:15.330
giving me a lot of
powerful features

00:21:15.330 --> 00:21:18.670
when it comes to editing and
authoring and iterating fast.

00:21:18.670 --> 00:21:20.927
All my changes can
be saved to disk.

00:21:20.927 --> 00:21:23.260
I can be editing Sass and
Less and getting those updates

00:21:23.260 --> 00:21:23.760
directly.

00:21:23.760 --> 00:21:27.110
I can be editing anything,
really, in this project-- C++,

00:21:27.110 --> 00:21:30.810
Markdown, the whole thing.

00:21:30.810 --> 00:21:34.089
This also means that
if I'm authoring here

00:21:34.089 --> 00:21:36.380
inside the DevTools, I can
also be placing breakpoints.

00:21:36.380 --> 00:21:37.213
This is really nice.

00:21:37.213 --> 00:21:38.530
I hit breakpoints.

00:21:38.530 --> 00:21:39.880
I find my bug.

00:21:39.880 --> 00:21:40.690
I fix it.

00:21:40.690 --> 00:21:43.330
I hit Command S,
and V8 immediately

00:21:43.330 --> 00:21:44.880
gets that new thing.

00:21:44.880 --> 00:21:47.200
I then see that the bug
is gone, and I'm all good.

00:21:47.200 --> 00:21:49.300
I never had to refresh
the page at all.

00:21:49.300 --> 00:21:53.780
So I get the nice live edit
revaluation right on the fly.

00:21:53.780 --> 00:21:56.430
If you make a mistake and
you don't want that change,

00:21:56.430 --> 00:21:57.810
Command Z all your way back.

00:21:57.810 --> 00:22:00.550
It works everywhere.

00:22:00.550 --> 00:22:03.250
And I can do all this
while I'm remote debugging.

00:22:03.250 --> 00:22:07.940
It's the same powerful
feature set on the phone.

00:22:07.940 --> 00:22:11.900
So a lot of what I
showed today is new-ish.

00:22:11.900 --> 00:22:14.450
And, in fact, there's
a brand new beta

00:22:14.450 --> 00:22:18.600
for Chrome and Android,
Version 32, shipping today.

00:22:18.600 --> 00:22:20.230
So I encourage you
to grab that if you

00:22:20.230 --> 00:22:22.500
want to be able to replicate
everything that I showed.

00:22:22.500 --> 00:22:25.800
And, of course, everything is
moving very fast on desktop.

00:22:25.800 --> 00:22:28.110
The mobile emulation
features that I

00:22:28.110 --> 00:22:30.697
showed have been landing
over the past few weeks.

00:22:30.697 --> 00:22:33.280
And there's some great stuff,
so definitely grab Chrome Canary

00:22:33.280 --> 00:22:36.160
and check out the latest
and greatest there.

00:22:36.160 --> 00:22:39.000
And I was putting together
this presentation,

00:22:39.000 --> 00:22:42.280
and I took a step back, and
I just had this Keanu moment.

00:22:42.280 --> 00:22:44.050
And I was just like, whoa.

00:22:44.050 --> 00:22:46.910
Because I was like, I
now have this insight

00:22:46.910 --> 00:22:50.140
as to what are the actual GPU
characteristics on the phone,

00:22:50.140 --> 00:22:52.287
and I can see that happening.

00:22:52.287 --> 00:22:53.870
These things I didn't
even show-- this

00:22:53.870 --> 00:22:56.570
is a flame chart of the
JavaScript evaluation

00:22:56.570 --> 00:22:58.260
of a WebGL experience.

00:22:58.260 --> 00:23:01.290
And I can see what my most
expensive functions are

00:23:01.290 --> 00:23:03.320
and quickly drill into
that, very quickly,

00:23:03.320 --> 00:23:06.130
or do a canvas or WebGL
profile and gain insight

00:23:06.130 --> 00:23:08.830
into the characteristics
of how that's executing.

00:23:08.830 --> 00:23:09.860
It's a lot going on.

00:23:09.860 --> 00:23:10.960
This is moving fast.

00:23:10.960 --> 00:23:12.560
But all in all, it's
giving you a lot

00:23:12.560 --> 00:23:15.020
of insight in how to
make user experiences

00:23:15.020 --> 00:23:19.730
across multiple devices that
are fluid, fast, and awesome.

00:23:19.730 --> 00:23:23.490
So a lot of this is documented
at devtools.chrome.com.

00:23:23.490 --> 00:23:25.760
I encourage you
to check that out.

00:23:25.760 --> 00:23:27.960
And, please, if
you have any bugs,

00:23:27.960 --> 00:23:30.600
feature requests, anything for
the DevTools, holler at me.

00:23:30.600 --> 00:23:31.308
Just let me know.

00:23:31.308 --> 00:23:32.630
I'll make it happen.

00:23:32.630 --> 00:23:34.079
I'll do my best.

00:23:34.079 --> 00:23:35.370
And thank you, guys, very much.

00:23:35.370 --> 00:23:40.526
[APPLAUSE]

