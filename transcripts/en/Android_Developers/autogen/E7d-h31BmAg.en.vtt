WEBVTT
Kind: captions
Language: en

00:00:07.970 --> 00:00:10.790
hi my name is Alan Shinsky I'm an intern

00:00:10.790 --> 00:00:10.800
hi my name is Alan Shinsky I'm an intern
 

00:00:10.800 --> 00:00:12.049
hi my name is Alan Shinsky I'm an intern
the Android team and today I'll be

00:00:12.049 --> 00:00:12.059
the Android team and today I'll be
 

00:00:12.059 --> 00:00:14.390
the Android team and today I'll be
talking about image pixelization I'll

00:00:14.390 --> 00:00:14.400
talking about image pixelization I'll
 

00:00:14.400 --> 00:00:15.890
talking about image pixelization I'll
discuss a couple different variations of

00:00:15.890 --> 00:00:15.900
discuss a couple different variations of
 

00:00:15.900 --> 00:00:17.000
discuss a couple different variations of
how you can achieve an image

00:00:17.000 --> 00:00:17.010
how you can achieve an image
 

00:00:17.010 --> 00:00:19.310
how you can achieve an image
pixelization effect using some built-in

00:00:19.310 --> 00:00:19.320
pixelization effect using some built-in
 

00:00:19.320 --> 00:00:20.720
pixelization effect using some built-in
operations and using some custom

00:00:20.720 --> 00:00:20.730
operations and using some custom
 

00:00:20.730 --> 00:00:22.820
operations and using some custom
operations as well furthermore I'll

00:00:22.820 --> 00:00:22.830
operations as well furthermore I'll
 

00:00:22.830 --> 00:00:24.859
operations as well furthermore I'll
discuss the use of async task which is

00:00:24.859 --> 00:00:24.869
discuss the use of async task which is
 

00:00:24.869 --> 00:00:27.259
discuss the use of async task which is
an object in used to offload work off of

00:00:27.259 --> 00:00:27.269
an object in used to offload work off of
 

00:00:27.269 --> 00:00:29.480
an object in used to offload work off of
the UI thread onto a background thread

00:00:29.480 --> 00:00:29.490
the UI thread onto a background thread
 

00:00:29.490 --> 00:00:31.849
the UI thread onto a background thread
and then you can keep your UI completely

00:00:31.849 --> 00:00:31.859
and then you can keep your UI completely
 

00:00:31.859 --> 00:00:34.310
and then you can keep your UI completely
responsive while doing some one of the

00:00:34.310 --> 00:00:34.320
responsive while doing some one of the
 

00:00:34.320 --> 00:00:36.049
responsive while doing some one of the
tricks that you'll see while you're

00:00:36.049 --> 00:00:36.059
tricks that you'll see while you're
 

00:00:36.059 --> 00:00:39.020
tricks that you'll see while you're
doing the image pixilation effect is the

00:00:39.020 --> 00:00:39.030
doing the image pixilation effect is the
 

00:00:39.030 --> 00:00:40.190
doing the image pixilation effect is the
fact that one we want to use some

00:00:40.190 --> 00:00:40.200
fact that one we want to use some
 

00:00:40.200 --> 00:00:41.660
fact that one we want to use some
built-in operations where you can

00:00:41.660 --> 00:00:41.670
built-in operations where you can
 

00:00:41.670 --> 00:00:43.520
built-in operations where you can
actually do is downscale bitmap an

00:00:43.520 --> 00:00:43.530
actually do is downscale bitmap an
 

00:00:43.530 --> 00:00:45.500
actually do is downscale bitmap an
upscale it back up and you'll see the

00:00:45.500 --> 00:00:45.510
upscale it back up and you'll see the
 

00:00:45.510 --> 00:00:48.380
upscale it back up and you'll see the
use of a flag called filter which we can

00:00:48.380 --> 00:00:48.390
use of a flag called filter which we can
 

00:00:48.390 --> 00:00:52.130
use of a flag called filter which we can
use to vary between Bai Ling violating

00:00:52.130 --> 00:00:52.140
use to vary between Bai Ling violating
 

00:00:52.140 --> 00:00:53.900
use to vary between Bai Ling violating
your filtering and point sampling when

00:00:53.900 --> 00:00:53.910
your filtering and point sampling when
 

00:00:53.910 --> 00:00:54.860
your filtering and point sampling when
we're actually doing the pixelization

00:00:54.860 --> 00:00:54.870
we're actually doing the pixelization
 

00:00:54.870 --> 00:00:57.229
we're actually doing the pixelization
effect so let's jump straight to the

00:00:57.229 --> 00:00:57.239
effect so let's jump straight to the
 

00:00:57.239 --> 00:00:59.450
effect so let's jump straight to the
demo right here and we just have an

00:00:59.450 --> 00:00:59.460
demo right here and we just have an
 

00:00:59.460 --> 00:01:01.580
demo right here and we just have an
image of a couple jellyfish and moving

00:01:01.580 --> 00:01:01.590
image of a couple jellyfish and moving
 

00:01:01.590 --> 00:01:04.820
image of a couple jellyfish and moving
this as we move the sea border from left

00:01:04.820 --> 00:01:04.830
this as we move the sea border from left
 

00:01:04.830 --> 00:01:06.830
this as we move the sea border from left
to right you can see that the image get

00:01:06.830 --> 00:01:06.840
to right you can see that the image get
 

00:01:06.840 --> 00:01:09.410
to right you can see that the image get
is getting pick size more or less but

00:01:09.410 --> 00:01:09.420
is getting pick size more or less but
 

00:01:09.420 --> 00:01:10.910
is getting pick size more or less but
you can also tell that as my fingers

00:01:10.910 --> 00:01:10.920
you can also tell that as my fingers
 

00:01:10.920 --> 00:01:14.840
you can also tell that as my fingers
moving the zebra gets is behind where my

00:01:14.840 --> 00:01:14.850
moving the zebra gets is behind where my
 

00:01:14.850 --> 00:01:16.429
moving the zebra gets is behind where my
actual finger is so there's a

00:01:16.429 --> 00:01:16.439
actual finger is so there's a
 

00:01:16.439 --> 00:01:20.060
actual finger is so there's a
significant lack here if we use async

00:01:20.060 --> 00:01:20.070
significant lack here if we use async
 

00:01:20.070 --> 00:01:22.749
significant lack here if we use async
task you can see that the image

00:01:22.749 --> 00:01:22.759
task you can see that the image
 

00:01:22.759 --> 00:01:25.130
task you can see that the image
pixelization exactly the same as it was

00:01:25.130 --> 00:01:25.140
pixelization exactly the same as it was
 

00:01:25.140 --> 00:01:26.630
pixelization exactly the same as it was
before it takes the same amount of time

00:01:26.630 --> 00:01:26.640
before it takes the same amount of time
 

00:01:26.640 --> 00:01:29.330
before it takes the same amount of time
but the UI remains completely responsive

00:01:29.330 --> 00:01:29.340
but the UI remains completely responsive
 

00:01:29.340 --> 00:01:33.530
but the UI remains completely responsive
and the seekbar never lags behind if you

00:01:33.530 --> 00:01:33.540
and the seekbar never lags behind if you
 

00:01:33.540 --> 00:01:35.840
and the seekbar never lags behind if you
look here we can also use the built-in

00:01:35.840 --> 00:01:35.850
look here we can also use the built-in
 

00:01:35.850 --> 00:01:37.850
look here we can also use the built-in
pixelization effect which is

00:01:37.850 --> 00:01:37.860
pixelization effect which is
 

00:01:37.860 --> 00:01:39.710
pixelization effect which is
significantly faster and even though

00:01:39.710 --> 00:01:39.720
significantly faster and even though
 

00:01:39.720 --> 00:01:41.390
significantly faster and even though
it's still on the UI thread not on

00:01:41.390 --> 00:01:41.400
it's still on the UI thread not on
 

00:01:41.400 --> 00:01:42.620
it's still on the UI thread not on
background thread you can tell that it's

00:01:42.620 --> 00:01:42.630
background thread you can tell that it's
 

00:01:42.630 --> 00:01:44.300
background thread you can tell that it's
so keeping up to my finger exactly where

00:01:44.300 --> 00:01:44.310
so keeping up to my finger exactly where
 

00:01:44.310 --> 00:01:47.149
so keeping up to my finger exactly where
it needs to be so then jumping straight

00:01:47.149 --> 00:01:47.159
it needs to be so then jumping straight
 

00:01:47.159 --> 00:01:50.990
it needs to be so then jumping straight
to the code and going down there is some

00:01:50.990 --> 00:01:51.000
to the code and going down there is some
 

00:01:51.000 --> 00:01:52.999
to the code and going down there is some
boilerplate code which you can look over

00:01:52.999 --> 00:01:53.009
boilerplate code which you can look over
 

00:01:53.009 --> 00:01:56.899
boilerplate code which you can look over
later and you know a simple seaward

00:01:56.899 --> 00:01:56.909
later and you know a simple seaward
 

00:01:56.909 --> 00:01:58.700
later and you know a simple seaward
listener to make sure that every single

00:01:58.700 --> 00:01:58.710
listener to make sure that every single
 

00:01:58.710 --> 00:02:00.740
listener to make sure that every single
time that the value changes we pick size

00:02:00.740 --> 00:02:00.750
time that the value changes we pick size
 

00:02:00.750 --> 00:02:04.030
time that the value changes we pick size
the image to get a new pic pixelized

00:02:04.030 --> 00:02:04.040
the image to get a new pic pixelized
 

00:02:04.040 --> 00:02:06.950
the image to get a new pic pixelized
image on the screen scrolling down

00:02:06.950 --> 00:02:06.960
image on the screen scrolling down
 

00:02:06.960 --> 00:02:10.300
image on the screen scrolling down
farther the more we

00:02:10.300 --> 00:02:10.310
farther the more we
 

00:02:10.310 --> 00:02:13.490
farther the more we
we get to where the actual custom

00:02:13.490 --> 00:02:13.500
we get to where the actual custom
 

00:02:13.500 --> 00:02:15.770
we get to where the actual custom
pixelization begins so for custom

00:02:15.770 --> 00:02:15.780
pixelization begins so for custom
 

00:02:15.780 --> 00:02:17.839
pixelization begins so for custom
pixelization all we're going to do is I

00:02:17.839 --> 00:02:17.849
pixelization all we're going to do is I
 

00:02:17.849 --> 00:02:19.520
pixelization all we're going to do is I
implements algorithm where you're going

00:02:19.520 --> 00:02:19.530
implements algorithm where you're going
 

00:02:19.530 --> 00:02:20.570
implements algorithm where you're going
to loop through all the pixels in the

00:02:20.570 --> 00:02:20.580
to loop through all the pixels in the
 

00:02:20.580 --> 00:02:22.339
to loop through all the pixels in the
image you're going to average the values

00:02:22.339 --> 00:02:22.349
image you're going to average the values
 

00:02:22.349 --> 00:02:23.390
image you're going to average the values
of the red green and blue channels

00:02:23.390 --> 00:02:23.400
of the red green and blue channels
 

00:02:23.400 --> 00:02:26.720
of the red green and blue channels
within every single pixel to some value

00:02:26.720 --> 00:02:26.730
within every single pixel to some value
 

00:02:26.730 --> 00:02:28.220
within every single pixel to some value
and then you're going to set that same

00:02:28.220 --> 00:02:28.230
and then you're going to set that same
 

00:02:28.230 --> 00:02:30.410
and then you're going to set that same
pixel value to all the pixels within

00:02:30.410 --> 00:02:30.420
pixel value to all the pixels within
 

00:02:30.420 --> 00:02:33.050
pixel value to all the pixels within
that region the key thing to note here

00:02:33.050 --> 00:02:33.060
that region the key thing to note here
 

00:02:33.060 --> 00:02:34.880
that region the key thing to note here
is the fact that when you're retrieving

00:02:34.880 --> 00:02:34.890
is the fact that when you're retrieving
 

00:02:34.890 --> 00:02:38.300
is the fact that when you're retrieving
we're setting pixel values you never

00:02:38.300 --> 00:02:38.310
we're setting pixel values you never
 

00:02:38.310 --> 00:02:40.430
we're setting pixel values you never
want to use set pixel or get pixel if

00:02:40.430 --> 00:02:40.440
want to use set pixel or get pixel if
 

00:02:40.440 --> 00:02:41.630
want to use set pixel or get pixel if
you're going to if you know they're

00:02:41.630 --> 00:02:41.640
you're going to if you know they're
 

00:02:41.640 --> 00:02:43.460
you're going to if you know they're
going to use more than those there's a

00:02:43.460 --> 00:02:43.470
going to use more than those there's a
 

00:02:43.470 --> 00:02:45.710
going to use more than those there's a
few methods available in the bitmap

00:02:45.710 --> 00:02:45.720
few methods available in the bitmap
 

00:02:45.720 --> 00:02:47.720
few methods available in the bitmap
class such as get pixels or set pixels

00:02:47.720 --> 00:02:47.730
class such as get pixels or set pixels
 

00:02:47.730 --> 00:02:49.789
class such as get pixels or set pixels
where you can immediately set in rave

00:02:49.789 --> 00:02:49.799
where you can immediately set in rave
 

00:02:49.799 --> 00:02:51.410
where you can immediately set in rave
pixels as we get an array of pixels and

00:02:51.410 --> 00:02:51.420
pixels as we get an array of pixels and
 

00:02:51.420 --> 00:02:54.050
pixels as we get an array of pixels and
it'll be significantly faster so here

00:02:54.050 --> 00:02:54.060
it'll be significantly faster so here
 

00:02:54.060 --> 00:02:55.460
it'll be significantly faster so here
we're getting the pixels we're averaging

00:02:55.460 --> 00:02:55.470
we're getting the pixels we're averaging
 

00:02:55.470 --> 00:02:58.850
we're getting the pixels we're averaging
everything out and at the end we set the

00:02:58.850 --> 00:02:58.860
everything out and at the end we set the
 

00:02:58.860 --> 00:03:01.309
everything out and at the end we set the
pixels in that bitmap we then return in

00:03:01.309 --> 00:03:01.319
pixels in that bitmap we then return in
 

00:03:01.319 --> 00:03:02.809
pixels in that bitmap we then return in
a bitmap drawable and then this bitmap

00:03:02.809 --> 00:03:02.819
a bitmap drawable and then this bitmap
 

00:03:02.819 --> 00:03:04.210
a bitmap drawable and then this bitmap
drawable is applied to the image you

00:03:04.210 --> 00:03:04.220
drawable is applied to the image you
 

00:03:04.220 --> 00:03:06.970
drawable is applied to the image you
which you see on the screen afterwards

00:03:06.970 --> 00:03:06.980
which you see on the screen afterwards
 

00:03:06.980 --> 00:03:09.620
which you see on the screen afterwards
now scrolling down further more we move

00:03:09.620 --> 00:03:09.630
now scrolling down further more we move
 

00:03:09.630 --> 00:03:11.240
now scrolling down further more we move
into the built-in pixelization effect

00:03:11.240 --> 00:03:11.250
into the built-in pixelization effect
 

00:03:11.250 --> 00:03:13.610
into the built-in pixelization effect
and like i said before all this does

00:03:13.610 --> 00:03:13.620
and like i said before all this does
 

00:03:13.620 --> 00:03:16.280
and like i said before all this does
here is we do a few simple calculations

00:03:16.280 --> 00:03:16.290
here is we do a few simple calculations
 

00:03:16.290 --> 00:03:17.660
here is we do a few simple calculations
to determine where the downscaled width

00:03:17.660 --> 00:03:17.670
to determine where the downscaled width
 

00:03:17.670 --> 00:03:19.430
to determine where the downscaled width
and height should be in order to achieve

00:03:19.430 --> 00:03:19.440
and height should be in order to achieve
 

00:03:19.440 --> 00:03:22.309
and height should be in order to achieve
that pixelization effect but the

00:03:22.309 --> 00:03:22.319
that pixelization effect but the
 

00:03:22.319 --> 00:03:24.229
that pixelization effect but the
important thing is here when we create a

00:03:24.229 --> 00:03:24.239
important thing is here when we create a
 

00:03:24.239 --> 00:03:25.940
important thing is here when we create a
downscale bitmap we have to set the

00:03:25.940 --> 00:03:25.950
downscale bitmap we have to set the
 

00:03:25.950 --> 00:03:28.940
downscale bitmap we have to set the
filter value to false so what what what

00:03:28.940 --> 00:03:28.950
filter value to false so what what what
 

00:03:28.950 --> 00:03:31.220
filter value to false so what what what
this does is use point sampling instead

00:03:31.220 --> 00:03:31.230
this does is use point sampling instead
 

00:03:31.230 --> 00:03:33.349
this does is use point sampling instead
of battling your filtering so it doesn't

00:03:33.349 --> 00:03:33.359
of battling your filtering so it doesn't
 

00:03:33.359 --> 00:03:35.030
of battling your filtering so it doesn't
actually averaged out the values of the

00:03:35.030 --> 00:03:35.040
actually averaged out the values of the
 

00:03:35.040 --> 00:03:36.890
actually averaged out the values of the
pics of ice around it but it achieves

00:03:36.890 --> 00:03:36.900
pics of ice around it but it achieves
 

00:03:36.900 --> 00:03:38.809
pics of ice around it but it achieves
this very blocky pixel in fact that

00:03:38.809 --> 00:03:38.819
this very blocky pixel in fact that
 

00:03:38.819 --> 00:03:41.870
this very blocky pixel in fact that
we're looking for going down here so

00:03:41.870 --> 00:03:41.880
we're looking for going down here so
 

00:03:41.880 --> 00:03:44.240
we're looking for going down here so
after we downscaled we got when we we

00:03:44.240 --> 00:03:44.250
after we downscaled we got when we we
 

00:03:44.250 --> 00:03:45.379
after we downscaled we got when we we
know that we need to downscale it back

00:03:45.379 --> 00:03:45.389
know that we need to downscale it back
 

00:03:45.389 --> 00:03:48.830
know that we need to downscale it back
up scale it back up so before jellybean

00:03:48.830 --> 00:03:48.840
up scale it back up so before jellybean
 

00:03:48.840 --> 00:03:50.840
up scale it back up so before jellybean
mr1 the way we do this is simply create

00:03:50.840 --> 00:03:50.850
mr1 the way we do this is simply create
 

00:03:50.850 --> 00:03:53.539
mr1 the way we do this is simply create
a scale bitmap and upscale back to the

00:03:53.539 --> 00:03:53.549
a scale bitmap and upscale back to the
 

00:03:53.549 --> 00:03:54.949
a scale bitmap and upscale back to the
original width and height with that

00:03:54.949 --> 00:03:54.959
original width and height with that
 

00:03:54.959 --> 00:03:57.289
original width and height with that
filter value to false however after

00:03:57.289 --> 00:03:57.299
filter value to false however after
 

00:03:57.299 --> 00:03:59.690
filter value to false however after
jellybean mr one where you can actually

00:03:59.690 --> 00:03:59.700
jellybean mr one where you can actually
 

00:03:59.700 --> 00:04:02.360
jellybean mr one where you can actually
do is create a bitmap drawable and with

00:04:02.360 --> 00:04:02.370
do is create a bitmap drawable and with
 

00:04:02.370 --> 00:04:03.860
do is create a bitmap drawable and with
that image and set the filter break up

00:04:03.860 --> 00:04:03.870
that image and set the filter break up
 

00:04:03.870 --> 00:04:06.860
that image and set the filter break up
to false the thing is that before jbm

00:04:06.860 --> 00:04:06.870
to false the thing is that before jbm
 

00:04:06.870 --> 00:04:09.170
to false the thing is that before jbm
are one we always had the filter bitmap

00:04:09.170 --> 00:04:09.180
are one we always had the filter bitmap
 

00:04:09.180 --> 00:04:11.059
are one we always had the filter bitmap
set to true for some optimization

00:04:11.059 --> 00:04:11.069
set to true for some optimization
 

00:04:11.069 --> 00:04:13.099
set to true for some optimization
purposes but what this lets you do here

00:04:13.099 --> 00:04:13.109
purposes but what this lets you do here
 

00:04:13.109 --> 00:04:14.300
purposes but what this lets you do here
is not actually upscale the bitmap

00:04:14.300 --> 00:04:14.310
is not actually upscale the bitmap
 

00:04:14.310 --> 00:04:16.610
is not actually upscale the bitmap
simply set the filter and then given

00:04:16.610 --> 00:04:16.620
simply set the filter and then given
 

00:04:16.620 --> 00:04:19.370
simply set the filter and then given
that the image use scale type is fit X Y

00:04:19.370 --> 00:04:19.380
that the image use scale type is fit X Y
 

00:04:19.380 --> 00:04:21.890
that the image use scale type is fit X Y
when we applied this bit of trouble to

00:04:21.890 --> 00:04:21.900
when we applied this bit of trouble to
 

00:04:21.900 --> 00:04:23.410
when we applied this bit of trouble to
the image you what will happen

00:04:23.410 --> 00:04:23.420
the image you what will happen
 

00:04:23.420 --> 00:04:26.080
the image you what will happen
upscale it in a much more efficient

00:04:26.080 --> 00:04:26.090
upscale it in a much more efficient
 

00:04:26.090 --> 00:04:29.650
upscale it in a much more efficient
matter to fit the whole screen so here

00:04:29.650 --> 00:04:29.660
matter to fit the whole screen so here
 

00:04:29.660 --> 00:04:31.210
matter to fit the whole screen so here
and invoke pixelization this is the

00:04:31.210 --> 00:04:31.220
and invoke pixelization this is the
 

00:04:31.220 --> 00:04:32.830
and invoke pixelization this is the
method that gets invoked every single

00:04:32.830 --> 00:04:32.840
method that gets invoked every single
 

00:04:32.840 --> 00:04:35.140
method that gets invoked every single
time the Ziegler's moved and there's two

00:04:35.140 --> 00:04:35.150
time the Ziegler's moved and there's two
 

00:04:35.150 --> 00:04:36.910
time the Ziegler's moved and there's two
different things you can do if the

00:04:36.910 --> 00:04:36.920
different things you can do if the
 

00:04:36.920 --> 00:04:39.000
different things you can do if the
checkbox is checked to use async task

00:04:39.000 --> 00:04:39.010
checkbox is checked to use async task
 

00:04:39.010 --> 00:04:41.170
checkbox is checked to use async task
what we're going to do is initialize

00:04:41.170 --> 00:04:41.180
what we're going to do is initialize
 

00:04:41.180 --> 00:04:43.480
what we're going to do is initialize
this pixel size image async task object

00:04:43.480 --> 00:04:43.490
this pixel size image async task object
 

00:04:43.490 --> 00:04:45.550
this pixel size image async task object
and call execute with the appropriate

00:04:45.550 --> 00:04:45.560
and call execute with the appropriate
 

00:04:45.560 --> 00:04:48.730
and call execute with the appropriate
parameters which is the the value of the

00:04:48.730 --> 00:04:48.740
parameters which is the the value of the
 

00:04:48.740 --> 00:04:50.110
parameters which is the the value of the
seekbar and the bit mother will pick

00:04:50.110 --> 00:04:50.120
seekbar and the bit mother will pick
 

00:04:50.120 --> 00:04:52.300
seekbar and the bit mother will pick
slicing moving in to pick sides

00:04:52.300 --> 00:04:52.310
slicing moving in to pick sides
 

00:04:52.310 --> 00:04:53.980
slicing moving in to pick sides
imitating task we can see that there's

00:04:53.980 --> 00:04:53.990
imitating task we can see that there's
 

00:04:53.990 --> 00:04:56.380
imitating task we can see that there's
two main methods you always want to two

00:04:56.380 --> 00:04:56.390
two main methods you always want to two
 

00:04:56.390 --> 00:04:58.390
two main methods you always want to two
key methods you want to note there's do

00:04:58.390 --> 00:04:58.400
key methods you want to note there's do
 

00:04:58.400 --> 00:04:59.790
key methods you want to note there's do
in background and there's onpostexecute

00:04:59.790 --> 00:04:59.800
in background and there's onpostexecute
 

00:04:59.800 --> 00:05:02.620
in background and there's onpostexecute
so what happens when you call eggs when

00:05:02.620 --> 00:05:02.630
so what happens when you call eggs when
 

00:05:02.630 --> 00:05:04.570
so what happens when you call eggs when
you call execute with the appropriate

00:05:04.570 --> 00:05:04.580
you call execute with the appropriate
 

00:05:04.580 --> 00:05:06.820
you call execute with the appropriate
parameters do in background is called on

00:05:06.820 --> 00:05:06.830
parameters do in background is called on
 

00:05:06.830 --> 00:05:09.190
parameters do in background is called on
the background thread it does the

00:05:09.190 --> 00:05:09.200
the background thread it does the
 

00:05:09.200 --> 00:05:11.650
the background thread it does the
operations you can see perform here and

00:05:11.650 --> 00:05:11.660
operations you can see perform here and
 

00:05:11.660 --> 00:05:13.360
operations you can see perform here and
when this operation completes on the

00:05:13.360 --> 00:05:13.370
when this operation completes on the
 

00:05:13.370 --> 00:05:15.610
when this operation completes on the
background thread it calls on post eggs

00:05:15.610 --> 00:05:15.620
background thread it calls on post eggs
 

00:05:15.620 --> 00:05:17.230
background thread it calls on post eggs
you back on the UI thread where we

00:05:17.230 --> 00:05:17.240
you back on the UI thread where we
 

00:05:17.240 --> 00:05:19.720
you back on the UI thread where we
simply set the drawable to what we want

00:05:19.720 --> 00:05:19.730
simply set the drawable to what we want
 

00:05:19.730 --> 00:05:23.890
simply set the drawable to what we want
on the other hand when you if the check

00:05:23.890 --> 00:05:23.900
on the other hand when you if the check
 

00:05:23.900 --> 00:05:25.630
on the other hand when you if the check
box is not checked then we simply set

00:05:25.630 --> 00:05:25.640
box is not checked then we simply set
 

00:05:25.640 --> 00:05:27.670
box is not checked then we simply set
the image drawable and this is done

00:05:27.670 --> 00:05:27.680
the image drawable and this is done
 

00:05:27.680 --> 00:05:29.110
the image drawable and this is done
directly on the UI thread which is why

00:05:29.110 --> 00:05:29.120
directly on the UI thread which is why
 

00:05:29.120 --> 00:05:31.500
directly on the UI thread which is why
we were seeing the laggy experience

00:05:31.500 --> 00:05:31.510
we were seeing the laggy experience
 

00:05:31.510 --> 00:05:34.080
we were seeing the laggy experience
what's crawling the sikh whereas before

00:05:34.080 --> 00:05:34.090
what's crawling the sikh whereas before
 

00:05:34.090 --> 00:05:36.280
what's crawling the sikh whereas before
so that's pretty much it and that's how

00:05:36.280 --> 00:05:36.290
so that's pretty much it and that's how
 

00:05:36.290 --> 00:05:38.440
so that's pretty much it and that's how
you can do image pixelization and move

00:05:38.440 --> 00:05:38.450
you can do image pixelization and move
 

00:05:38.450 --> 00:05:39.580
you can do image pixelization and move
things onto background thread when you

00:05:39.580 --> 00:05:39.590
things onto background thread when you
 

00:05:39.590 --> 00:05:42.460
things onto background thread when you
need to thanks

