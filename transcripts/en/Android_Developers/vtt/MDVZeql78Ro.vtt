WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.435
[MUSIC PLAYING]

00:00:09.260 --> 00:00:11.820
RACHEL PETTERSON: Steve is an
interactive art installation.

00:00:11.820 --> 00:00:14.250
He is a giant
Joshua tree that is

00:00:14.250 --> 00:00:16.220
covered with LEDs and sensors.

00:00:16.220 --> 00:00:17.970
CARSON HOLGATE: So I
had this general idea

00:00:17.970 --> 00:00:19.650
for an interactive tree.

00:00:19.650 --> 00:00:21.750
It needed lights somehow.

00:00:21.750 --> 00:00:23.250
And I realized as
I was designing it

00:00:23.250 --> 00:00:27.419
that it was going to be this
20 foot by 20 foot giant tree.

00:00:27.419 --> 00:00:29.710
RACHEL PETTERSON: I worked
specifically on the sensors.

00:00:29.710 --> 00:00:32.850
And so these were the
force resistive sensors,

00:00:32.850 --> 00:00:36.099
the light sensors,
and the sound sensors.

00:00:36.099 --> 00:00:37.640
And then I also
worked with Aieswarya

00:00:37.640 --> 00:00:40.710
on the gesture sensors

00:00:40.710 --> 00:00:43.460
AIESWARYA MANICKA: Going left,
going right, hovering over it,

00:00:43.460 --> 00:00:44.844
kind of waving motion.

00:00:44.844 --> 00:00:46.260
The idea behind
it was we would be

00:00:46.260 --> 00:00:49.540
able to hide it in knots
in the tree type of thing.

00:00:49.540 --> 00:00:52.500
So if they do something
like this or this,

00:00:52.500 --> 00:00:54.930
then the color
can change and you

00:00:54.930 --> 00:00:56.900
get that interaction feeling.

00:00:56.900 --> 00:00:59.400
RACHEL PETTERSON: So the sensors
are all slightly different.

00:00:59.400 --> 00:01:02.220
The light sensor
takes in the light

00:01:02.220 --> 00:01:04.440
and outputs a digital signal.

00:01:04.440 --> 00:01:06.270
The force resistive
sensor takes in input

00:01:06.270 --> 00:01:08.515
and outputs an analog signal.

00:01:08.515 --> 00:01:10.140
The last one is the
sound sensor, which

00:01:10.140 --> 00:01:11.730
is actually just a microphone.

00:01:11.730 --> 00:01:14.980
And Android Things has
a built-in audio driver,

00:01:14.980 --> 00:01:18.300
which we were able to use, and
then do a calculation for what

00:01:18.300 --> 00:01:19.515
the average volume was.

00:01:19.515 --> 00:01:21.390
So we would take small
snippets and calculate

00:01:21.390 --> 00:01:23.140
the average volume,
and that would give us

00:01:23.140 --> 00:01:25.410
a reading at that
given time for how

00:01:25.410 --> 00:01:27.834
loud everything was around it.

00:01:27.834 --> 00:01:30.000
CARSON HOLGATE: When we
were working out the sensors

00:01:30.000 --> 00:01:31.880
and the tree itself,
we knew that it

00:01:31.880 --> 00:01:34.380
needed to communicate somehow,
because they're all connected

00:01:34.380 --> 00:01:35.710
to separate development boards.

00:01:35.710 --> 00:01:39.510
So the tree is completely
separate from the sensors.

00:01:39.510 --> 00:01:40.969
And instead of
trying to figure out

00:01:40.969 --> 00:01:42.843
Bluetooth or some other
communication method,

00:01:42.843 --> 00:01:45.030
which you usually have
to do on other platforms,

00:01:45.030 --> 00:01:47.540
we could just plug in Firebase.

00:01:47.540 --> 00:01:49.770
There were libraries and
it kind of just worked.

00:01:49.770 --> 00:01:52.350
And the sensors would
write about every second,

00:01:52.350 --> 00:01:55.290
or whatever the refresh rate
was, to part of the Firebase

00:01:55.290 --> 00:01:57.684
database, and then we
used cloud functions

00:01:57.684 --> 00:01:59.350
to turn those into
some aggregate values

00:01:59.350 --> 00:02:02.010
to send to the boards
controlling the light show.

00:02:02.010 --> 00:02:04.680
And that way, we were able
to adjust the tolerances

00:02:04.680 --> 00:02:05.359
during the day.

00:02:05.359 --> 00:02:07.650
And if it was too noisy, we
could change the tolerances

00:02:07.650 --> 00:02:10.229
for the sound
sensors, and we were

00:02:10.229 --> 00:02:15.780
putting AstroTurf over the
pressure sensors in the floor.

00:02:15.780 --> 00:02:17.940
So depending on how that
affected the pressure,

00:02:17.940 --> 00:02:19.755
we could also adjust
that on the fly.

00:02:19.755 --> 00:02:21.630
RACHEL PETTERSON: Working
with Android Things

00:02:21.630 --> 00:02:24.570
was a really good experience,
because, since I already

00:02:24.570 --> 00:02:26.920
had Android
development experience,

00:02:26.920 --> 00:02:30.480
I was able to really focus on
learning all about the sensors.

00:02:30.480 --> 00:02:33.780
So although I had some
experience with wiring up

00:02:33.780 --> 00:02:36.360
an LED here or there,
I hadn't really

00:02:36.360 --> 00:02:39.360
worked with this
variety of sensors

00:02:39.360 --> 00:02:41.620
to gather information
from the environment.

00:02:41.620 --> 00:02:43.710
Android Things let
me really expand

00:02:43.710 --> 00:02:46.320
that knowledge of
sensors, while being

00:02:46.320 --> 00:02:49.200
in the very comfortable Android
environment that I knew well.

00:02:49.200 --> 00:02:52.900
AIESWARYA MANICKA: I would
just say to just get started.

00:02:52.900 --> 00:02:56.040
There's actually so
many resources online

00:02:56.040 --> 00:02:58.440
with tutorials.

00:02:58.440 --> 00:03:00.360
Like Android Things,
the kit points you

00:03:00.360 --> 00:03:02.512
towards so many things
you can do with the kit.

00:03:02.512 --> 00:03:04.470
There are so many sensors
that come in the kit,

00:03:04.470 --> 00:03:07.710
so you don't actually need
to buy additional sensors.

00:03:07.710 --> 00:03:09.960
You can do a lot with
just what's in the kit.

00:03:09.960 --> 00:03:11.520
RACHEL PETTERSON: If you're
interested in getting started

00:03:11.520 --> 00:03:13.560
with Android Things,
I highly recommend

00:03:13.560 --> 00:03:16.230
checking out the codelabs
that they have online.

00:03:16.230 --> 00:03:20.130
Android Things has also set up
a repository of sample drivers,

00:03:20.130 --> 00:03:22.630
and these drivers are
really good examples,

00:03:22.630 --> 00:03:25.640
whether you're looking to write
your own driver for a sensor

00:03:25.640 --> 00:03:29.040
you've picked up, or if you've
picked up a sensor that matches

00:03:29.040 --> 00:03:32.600
one of these drivers, it's a
really easy way to get started.

