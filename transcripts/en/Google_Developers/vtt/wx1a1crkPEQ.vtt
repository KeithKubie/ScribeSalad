WEBVTT
Kind: captions
Language: en

00:00:08.522 --> 00:00:09.730
JEFF POSNICK: Hey, everybody.

00:00:09.730 --> 00:00:11.979
This is Jeff Posnick coming
to you from New York City,

00:00:11.979 --> 00:00:14.430
and welcome to this week's
episode of YouTube Developer's

00:00:14.430 --> 00:00:14.952
Live.

00:00:14.952 --> 00:00:16.410
This week we're
going to be talking

00:00:16.410 --> 00:00:19.940
about how to debug issues
that you might be having when

00:00:19.940 --> 00:00:23.470
trying to craft your YouTube
Analytics API reports.

00:00:23.470 --> 00:00:26.519
This is something that we've
seen a number of developers

00:00:26.519 --> 00:00:28.060
have a little bit
of confusion about,

00:00:28.060 --> 00:00:30.870
and while following
the documentation

00:00:30.870 --> 00:00:32.369
should get you where
you need to go,

00:00:32.369 --> 00:00:35.390
we wanted to provide a little
bit of extra hints and tips

00:00:35.390 --> 00:00:37.250
for folks who might be
running into issues.

00:00:37.250 --> 00:00:42.070
So let's dive in right now by
pulling up a copy of my screen,

00:00:42.070 --> 00:00:43.970
and I'll show you what
we're talking about.

00:00:43.970 --> 00:00:49.400
So right now, we have the
YouTube Analytics API explorer

00:00:49.400 --> 00:00:51.370
open right now, and
this is a great way

00:00:51.370 --> 00:00:53.580
of being able to
run sample queries.

00:00:53.580 --> 00:00:56.057
I highly recommend that
folks try this out,

00:00:56.057 --> 00:00:58.140
and we'll have a little
annotation pointing to it,

00:00:58.140 --> 00:01:00.625
before you actually write
code that uses analytics API.

00:01:00.625 --> 00:01:02.750
Because you can try out
all the different parameter

00:01:02.750 --> 00:01:06.460
combinations, it'll take you
through the OAuth 2.0 flow,

00:01:06.460 --> 00:01:09.520
and it will allow you to just
see which parameters work

00:01:09.520 --> 00:01:12.700
and which don't work
in a real time fashion.

00:01:12.700 --> 00:01:15.620
So we're going to be using this
for all our debugging today.

00:01:15.620 --> 00:01:18.000
And another really
useful resource

00:01:18.000 --> 00:01:19.550
I'm going to pull
open right here

00:01:19.550 --> 00:01:21.880
is something from our
documentation, which

00:01:21.880 --> 00:01:24.840
is a list of all the
supported parameters

00:01:24.840 --> 00:01:26.330
for the different
types of reports.

00:01:26.330 --> 00:01:27.970
And it's kind of
like-- I don't want

00:01:27.970 --> 00:01:29.761
to say it's a matrix
or anything like that,

00:01:29.761 --> 00:01:31.410
but it kind of does
give you the list

00:01:31.410 --> 00:01:34.156
of the different dimensions
that are supported,

00:01:34.156 --> 00:01:35.530
and given those
dimensions, these

00:01:35.530 --> 00:01:37.500
are the metrics
that are supported.

00:01:37.500 --> 00:01:39.100
A real nice break down there.

00:01:39.100 --> 00:01:41.080
So we're going to
walk through how

00:01:41.080 --> 00:01:45.300
to interpret those pieces
of information that

00:01:45.300 --> 00:01:46.780
are in the docs.

00:01:46.780 --> 00:01:49.340
And finally, there's
this other page,

00:01:49.340 --> 00:01:53.070
which has some kind of
pre-defined requests

00:01:53.070 --> 00:01:54.750
that are known to work.

00:01:54.750 --> 00:01:56.390
So these are the
exact combinations

00:01:56.390 --> 00:02:00.680
of parameters that you could
use for specific common queries.

00:02:00.680 --> 00:02:03.230
And kind of think of this
as a cookbook you could

00:02:03.230 --> 00:02:07.180
use with guaranteed things
that work for doing things

00:02:07.180 --> 00:02:09.270
like getting country
specific view counts

00:02:09.270 --> 00:02:13.030
or daily watched time metrics
[? versus ?] channels videos,

00:02:13.030 --> 00:02:14.580
things like that.

00:02:14.580 --> 00:02:17.930
So let's jump back
though, and we're

00:02:17.930 --> 00:02:19.930
going into the API Explorer.

00:02:19.930 --> 00:02:22.860
The first source of confusion
that we see for a lot of folks

00:02:22.860 --> 00:02:25.210
is that they don't
really know how

00:02:25.210 --> 00:02:28.852
to populate the value over
here for the IDs parameter.

00:02:28.852 --> 00:02:30.810
If you're running a
channel level report, which

00:02:30.810 --> 00:02:33.867
most folks will be
doing, you do need

00:02:33.867 --> 00:02:36.450
to know a piece of information
that most people don't know off

00:02:36.450 --> 00:02:37.610
the top their head.

00:02:37.610 --> 00:02:39.850
And that's your
YouTube channel ID.

00:02:39.850 --> 00:02:42.880
There are a couple of different
ways of getting that channel

00:02:42.880 --> 00:02:48.240
ID, and the easiest way and
the way that I'm going to go

00:02:48.240 --> 00:02:50.800
through right now, it's
just using a special page

00:02:50.800 --> 00:02:57.730
on YouTube.com, which is
YouTube.com/accounts_advanced.

00:02:57.730 --> 00:02:59.890
And this page gives you
some advanced information

00:02:59.890 --> 00:03:02.940
about your channel, including
your YouTube channel ID.

00:03:02.940 --> 00:03:05.560
There are definitely
ways of looking this up

00:03:05.560 --> 00:03:08.560
via the API to get the
general idea of the currently

00:03:08.560 --> 00:03:09.990
authenticated user.

00:03:09.990 --> 00:03:13.250
You can do a
YouTube.channels.list API

00:03:13.250 --> 00:03:16.480
call with the mine
equals 2 parameter set.

00:03:16.480 --> 00:03:19.460
We have lots of code samples in
our documentation showing that,

00:03:19.460 --> 00:03:22.470
but this is just a really
easy way using the docs

00:03:22.470 --> 00:03:23.845
to pull it up right here.

00:03:23.845 --> 00:03:25.680
So I'm logged into a
test account right now.

00:03:25.680 --> 00:03:28.170
I'm going to copy
that, and I'm going

00:03:28.170 --> 00:03:34.400
to put in the channel equals
equals and that value.

00:03:34.400 --> 00:03:36.900
There's an extra space right
there, I'm going to get rid of.

00:03:36.900 --> 00:03:38.250
So that part's good.

00:03:38.250 --> 00:03:40.510
The start date and end
date to record parameters--

00:03:40.510 --> 00:03:44.080
that one, fortunately, a
little bit harder to mess up.

00:03:44.080 --> 00:03:47.470
You just need to do the
format of a four digit

00:03:47.470 --> 00:03:51.840
year, a two digit
month, two digit day.

00:03:51.840 --> 00:03:57.010
I'm going to do a report that
spans the entire year of 2012.

00:03:57.010 --> 00:03:58.640
And now, we're
getting into things

00:03:58.640 --> 00:04:01.970
that vary from report to report.

00:04:01.970 --> 00:04:04.830
I'm going to show you how to
do a very simple report, which

00:04:04.830 --> 00:04:08.540
is to get the total
number of views aggregated

00:04:08.540 --> 00:04:11.810
by video for that given year.

00:04:11.810 --> 00:04:14.800
So I'm going to
refer back to this--

00:04:14.800 --> 00:04:16.910
I'm sorry, this
matrix right here.

00:04:16.910 --> 00:04:20.040
And the dimension I'm
interested in is a video.

00:04:20.040 --> 00:04:25.080
So I'm looking up in this
list of supported values,

00:04:25.080 --> 00:04:28.940
and dimension video, I can
get these different metrics.

00:04:28.940 --> 00:04:31.560
So I want views, in
that particular case,

00:04:31.560 --> 00:04:32.830
and that's great.

00:04:32.830 --> 00:04:36.710
And let's just start with that,
let's just say I naively think,

00:04:36.710 --> 00:04:43.400
OK, metrics-- sorry, metrics
views and dimensions video.

00:04:43.400 --> 00:04:44.870
OK, I'm done, right?

00:04:44.870 --> 00:04:48.700
And I'm just going to go
down here, click Execute,

00:04:48.700 --> 00:04:52.370
and I get back the
dreaded 400 bad request.

00:04:52.370 --> 00:04:55.590
So that's actually not
a report that will work.

00:04:55.590 --> 00:04:58.060
And if I go over
here, this pulls up

00:04:58.060 --> 00:04:59.520
that same page I was on.

00:04:59.520 --> 00:05:02.170
We do give you a handy
URL that you could visit.

00:05:02.170 --> 00:05:04.300
So what went wrong?

00:05:04.300 --> 00:05:06.220
The problem is
actually that you need

00:05:06.220 --> 00:05:11.410
to have a sort restriction
and a max results restriction.

00:05:11.410 --> 00:05:16.307
So these two columns over here
are actually quite important.

00:05:16.307 --> 00:05:18.640
It's not just like optional
values that you need to use.

00:05:18.640 --> 00:05:24.460
You actually do-- you need
to put in one of these sort

00:05:24.460 --> 00:05:26.770
restrictions and
you need to request

00:05:26.770 --> 00:05:28.660
10 or fewer videos
in the results.

00:05:28.660 --> 00:05:31.360
And this is just due to
some back end limitations

00:05:31.360 --> 00:05:34.880
on the YouTube Analytics
API infrastructure.

00:05:34.880 --> 00:05:38.370
So we do spell that over
here, but this is something

00:05:38.370 --> 00:05:40.945
that a lot of people
have trouble with.

00:05:40.945 --> 00:05:44.590
So we're going to put in
sort by decreasing views.

00:05:44.590 --> 00:05:47.370
This minus right in front of
the views is really important.

00:05:47.370 --> 00:05:49.830
It means that we're sorting
by decreasing views,

00:05:49.830 --> 00:05:53.360
and we need to put 10 or
fewer for the max results.

00:05:53.360 --> 00:05:56.650
So let's go back up here.

00:05:56.650 --> 00:06:03.020
We have max results within 10
and sorts by decreasing views.

00:06:03.020 --> 00:06:08.280
Click Execute again,
and lo and behold,

00:06:08.280 --> 00:06:13.030
get back some metrics for my
very unpopular test channel.

00:06:13.030 --> 00:06:15.360
So this shows you
that you really

00:06:15.360 --> 00:06:18.810
do need to be careful about
what the required parameters are

00:06:18.810 --> 00:06:22.440
over here, and if
you're not sure,

00:06:22.440 --> 00:06:25.877
go into this cookbook page and
seeing all these combination

00:06:25.877 --> 00:06:27.460
parameters that are
guaranteed to work

00:06:27.460 --> 00:06:33.070
for specific types of reports,
is a really useful thing to do.

00:06:33.070 --> 00:06:35.887
So that's actually all
I wanted to cover today.

00:06:35.887 --> 00:06:37.970
Thanks so much for joining
us, and hopefully, this

00:06:37.970 --> 00:06:41.070
help you get started with
the YouTube Analytics API.

00:06:41.070 --> 00:06:42.920
Bye, everybody.

