WEBVTT
Kind: captions
Language: en

00:00:00.310 --> 00:00:02.969
And that's why I said it's really common to

00:00:02.969 --> 00:00:06.660
have a version string in your manifest file, and you

00:00:06.660 --> 00:00:09.580
keep updating that version string. This can be quite

00:00:09.580 --> 00:00:13.200
a pain, but it isn't too hard. So once we

00:00:13.200 --> 00:00:15.690
have an app cache on the user's machine, on

00:00:15.690 --> 00:00:18.970
every subsequent load, the resources will be loaded from the

00:00:18.970 --> 00:00:21.690
app cache, even when you're online. If it's an

00:00:21.690 --> 00:00:25.390
HTML resource with the manifest For example, that master page

00:00:25.390 --> 00:00:28.890
we started with. Then we'll start an async update of

00:00:28.890 --> 00:00:32.460
that manifest file at the same time. And then continue loading

00:00:32.460 --> 00:00:35.280
the rest of the page. Now, if the manifest has been

00:00:35.280 --> 00:00:39.050
changed, the browser will update the files in a new application

00:00:39.050 --> 00:00:41.980
cache. But remember, it's already loaded the page. It may

00:00:41.980 --> 00:00:44.700
be done loading a page by this point since we do

00:00:44.700 --> 00:00:47.230
want to be offline first and we want to make sure that

00:00:47.230 --> 00:00:50.620
the page gets loaded as quickly as possible. By the time

00:00:50.620 --> 00:00:53.610
the manifest file has been downloaded in the background,

00:00:53.610 --> 00:00:56.410
the user is probably already off looking at cat

00:00:56.410 --> 00:00:59.600
videos out of the application cache. Now, you can

00:00:59.600 --> 00:01:02.190
detect when a new cache has been downloaded and there's

00:01:02.190 --> 00:01:04.840
new content available. You can listen for an update

00:01:04.840 --> 00:01:08.500
ready event on the window application cache object. The

00:01:08.500 --> 00:01:13.010
window application cache represents the application cache system. And

00:01:13.010 --> 00:01:16.110
you can get things like the status and progress and

00:01:16.110 --> 00:01:18.480
tell it specifically to do things like update

00:01:18.480 --> 00:01:21.060
the cache or swap the cache out. So

00:01:21.060 --> 00:01:22.590
you have a lot of control over the

00:01:22.590 --> 00:01:26.440
application cache. This code here checks for an

00:01:26.440 --> 00:01:29.250
update ready event, and if there is actually

00:01:29.250 --> 00:01:32.120
an update ready, then it'll actually ask the

00:01:32.120 --> 00:01:37.110
user, is it okay to reload this. And if so, it swaps the cache out and reloads.

