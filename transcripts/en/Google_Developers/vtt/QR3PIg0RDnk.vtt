WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.125
FLORIAN BERTELE: All right.

00:00:01.125 --> 00:00:02.230
Good morning, everyone.

00:00:02.230 --> 00:00:04.440
Welcome to the second
day of Google I/O.

00:00:04.440 --> 00:00:06.800
I hope you had a
great first day.

00:00:06.800 --> 00:00:09.119
And you're clearly
the most engaged crowd

00:00:09.119 --> 00:00:10.910
because you made it to
the morning session.

00:00:10.910 --> 00:00:13.490
So good job on that.

00:00:13.490 --> 00:00:14.480
My name is Florian.

00:00:14.480 --> 00:00:16.610
I'm the product manager
for the Places API.

00:00:16.610 --> 00:00:18.065
And here on stage
with me is Ravi.

00:00:18.065 --> 00:00:19.190
RAVI PALANKI: Good morning.

00:00:19.190 --> 00:00:20.940
FLORIAN BERTELE: He's
the engineering lead

00:00:20.940 --> 00:00:23.250
for the Android Places API.

00:00:23.250 --> 00:00:25.960
And we would like to talk
to you this morning about

00:00:25.960 --> 00:00:30.240
how you can understand
your place in this world.

00:00:30.240 --> 00:00:33.710
And one of the things I
really like about Google I/O

00:00:33.710 --> 00:00:36.170
is that it brings together
people from all over the world.

00:00:36.170 --> 00:00:36.670
Right?

00:00:36.670 --> 00:00:38.240
So I flew in from Australia.

00:00:38.240 --> 00:00:41.080
And I'm pretty sure a lot
of you have also spent quite

00:00:41.080 --> 00:00:42.746
a bit of time on an airplane.

00:00:42.746 --> 00:00:44.370
And sometimes when
I'm on an airplane--

00:00:44.370 --> 00:00:46.640
and when you fly from
Australia you always

00:00:46.640 --> 00:00:48.020
have a lot of time
on your hands.

00:00:48.020 --> 00:00:49.722
And you kind of relax.

00:00:49.722 --> 00:00:50.430
And you sit back.

00:00:50.430 --> 00:00:51.890
And you look out the window.

00:00:51.890 --> 00:00:54.785
And sometimes, it hits you a
little bit that you say, wow.

00:00:54.785 --> 00:00:56.160
The world is
really, really huge.

00:00:56.160 --> 00:00:56.760
Right?

00:00:56.760 --> 00:01:00.280
And we inhabit
such a vast space.

00:01:00.280 --> 00:01:04.180
And humans have always tried
to structure and understand

00:01:04.180 --> 00:01:06.260
their place in the
world around them.

00:01:06.260 --> 00:01:09.220
And there's many different
ways how you can do that.

00:01:09.220 --> 00:01:12.470
And if you look at this
medieval map here, for example,

00:01:12.470 --> 00:01:14.580
this is one way how you
can structure the world.

00:01:14.580 --> 00:01:15.080
Right?

00:01:15.080 --> 00:01:17.264
So you see the globe--
and by the way,

00:01:17.264 --> 00:01:19.180
that was an important
insight, that we in fact

00:01:19.180 --> 00:01:19.846
live on a globe.

00:01:19.846 --> 00:01:23.100
It took humans a couple of
iterations to get there.

00:01:23.100 --> 00:01:25.140
Once you have that,
then you say, OK.

00:01:25.140 --> 00:01:27.120
Let's put a coordinate
system on that.

00:01:27.120 --> 00:01:29.970
And these coordinates are
called latitudes and longitudes.

00:01:29.970 --> 00:01:32.520
And a set of latitude
and longitude

00:01:32.520 --> 00:01:35.090
can describe a unique
place in the world.

00:01:35.090 --> 00:01:37.440
That's one way of how
you can describe it.

00:01:37.440 --> 00:01:40.770
And that's really useful if
you're navigating the oceans,

00:01:40.770 --> 00:01:42.910
or if you are a geographer.

00:01:42.910 --> 00:01:45.110
But it's not very
humanly feasible.

00:01:45.110 --> 00:01:47.490
It's not very useful
in our daily life.

00:01:47.490 --> 00:01:50.890
I don't think in
latitudes and longitudes.

00:01:50.890 --> 00:01:53.530
Another way how you can
structure the world around you

00:01:53.530 --> 00:01:54.340
is by saying, OK.

00:01:54.340 --> 00:01:55.550
Let's use street addresses.

00:01:55.550 --> 00:01:56.050
Right?

00:01:56.050 --> 00:01:58.620
It works in most
countries quite similarly.

00:01:58.620 --> 00:02:02.200
You say you have some system
of postcodes, a city, street

00:02:02.200 --> 00:02:03.730
address, and a house number.

00:02:03.730 --> 00:02:05.930
And all these things
together lead to a building.

00:02:05.930 --> 00:02:08.110
And if you're getting
your parcel delivered,

00:02:08.110 --> 00:02:09.949
that's really useful.

00:02:09.949 --> 00:02:12.610
But then again, it's not
the most intuitive thing.

00:02:12.610 --> 00:02:15.840
I maybe remember my
personal home address.

00:02:15.840 --> 00:02:17.640
On a good day I remember
my office address.

00:02:17.640 --> 00:02:19.790
But not much more, really.

00:02:19.790 --> 00:02:21.280
So there must be
different ways how

00:02:21.280 --> 00:02:24.280
we perceive the world around
us, how we memorize things

00:02:24.280 --> 00:02:27.190
around us that we care about.

00:02:27.190 --> 00:02:29.680
And that is really much
more of a semantic notion.

00:02:29.680 --> 00:02:31.920
It's more about semantic places.

00:02:31.920 --> 00:02:34.820
And what I mean by semantic is
that we are much more visual.

00:02:34.820 --> 00:02:35.320
Right?

00:02:35.320 --> 00:02:38.330
When we look around ourselves,
like here in Piccadilly Circus

00:02:38.330 --> 00:02:40.520
in London, you see billboards.

00:02:40.520 --> 00:02:43.640
You see storefronts,
signs, colorful things.

00:02:43.640 --> 00:02:45.610
You see a bus at a bus shelter.

00:02:45.610 --> 00:02:48.940
You see a historic facade
of a beautiful old building.

00:02:48.940 --> 00:02:51.400
All these things are
what sticks in our minds.

00:02:51.400 --> 00:02:54.300
So we remember
places by their names

00:02:54.300 --> 00:02:57.740
and by their attributes
and their characteristics.

00:02:57.740 --> 00:03:00.350
And understanding
the world in this way

00:03:00.350 --> 00:03:04.000
is very much related to the
core of what Google does.

00:03:04.000 --> 00:03:06.720
Because people search
for a lot of things.

00:03:06.720 --> 00:03:09.560
And they search for physical
places in the world out there.

00:03:09.560 --> 00:03:11.310
And they want to
understand these things--

00:03:11.310 --> 00:03:14.940
when you search for Shoreline
Amphitheatre, for example.

00:03:14.940 --> 00:03:19.720
So understanding the world in
this way is quite challenging.

00:03:19.720 --> 00:03:22.930
Because first of all, there's a
lot of these places out there.

00:03:22.930 --> 00:03:25.280
There's hundreds of
millions of places.

00:03:25.280 --> 00:03:28.160
And all of these places
change all the time.

00:03:28.160 --> 00:03:31.940
So we estimate that roughly
10% to 20% of places every year

00:03:31.940 --> 00:03:33.760
shut down and open up again.

00:03:33.760 --> 00:03:36.832
So you need to be constantly
updating all that.

00:03:36.832 --> 00:03:38.790
And the third aspect that
makes it quite tricky

00:03:38.790 --> 00:03:41.510
is that these places have
different types, right?

00:03:41.510 --> 00:03:44.349
And you care about
a different type

00:03:44.349 --> 00:03:46.390
of a place-- you care
about different attributes.

00:03:46.390 --> 00:03:48.780
You care about an ATM
in a different way

00:03:48.780 --> 00:03:52.490
than you think about
a hospital or a cafe.

00:03:52.490 --> 00:03:54.690
So all of these things
contribute to the fact

00:03:54.690 --> 00:03:58.500
that, well, doing places
is really, really hard.

00:03:58.500 --> 00:04:02.450
And Google has its very own
unique approach in order

00:04:02.450 --> 00:04:05.110
to get this problem right.

00:04:05.110 --> 00:04:08.220
So what we do is we ingest a
lot of different data sources

00:04:08.220 --> 00:04:11.930
and bring them all together into
one big representation of what

00:04:11.930 --> 00:04:14.570
the places in the
world look like.

00:04:14.570 --> 00:04:17.430
And I'd like to walk you
just through a few of these.

00:04:17.430 --> 00:04:21.050
One of the data sources we
use for places is Streetview.

00:04:21.050 --> 00:04:23.030
And as you can see by
the number of vehicles

00:04:23.030 --> 00:04:25.430
that we drive around the
world, and the kind of vehicles

00:04:25.430 --> 00:04:28.060
that you see there, we don't
just stop at the public roads.

00:04:28.060 --> 00:04:30.260
But we go a little
bit beyond that.

00:04:30.260 --> 00:04:31.910
And that's a tremendous
effort in order

00:04:31.910 --> 00:04:33.860
to understand, what
does the world look

00:04:33.860 --> 00:04:36.406
like from a street-level
perspective, when

00:04:36.406 --> 00:04:38.780
you walk through a street and
you look at the storefronts

00:04:38.780 --> 00:04:41.030
and everything like that?

00:04:41.030 --> 00:04:44.510
Another information source that
we use is satellite imagery.

00:04:44.510 --> 00:04:47.650
So satellite imagery
tells us about the places

00:04:47.650 --> 00:04:49.100
and their building outlines.

00:04:49.100 --> 00:04:52.700
It tells us about how these
buildings are located relative

00:04:52.700 --> 00:04:55.480
to streets and other
points of interest.

00:04:55.480 --> 00:04:57.230
And as you can see
from this example here,

00:04:57.230 --> 00:05:00.280
we use satellite imagery also
for other interesting projects,

00:05:00.280 --> 00:05:03.030
like Project Sunroof,
which tells house owners

00:05:03.030 --> 00:05:06.489
how to calculate the solar
capacity of their building

00:05:06.489 --> 00:05:08.280
and how much money they
can save by putting

00:05:08.280 --> 00:05:11.810
solar panels on their roof.

00:05:11.810 --> 00:05:15.010
Another source of information
are the users themselves.

00:05:15.010 --> 00:05:15.510
Right?

00:05:15.510 --> 00:05:18.010
We have so many people out
there using Google Maps.

00:05:18.010 --> 00:05:20.470
And they all can tell us if
they think something is wrong

00:05:20.470 --> 00:05:22.100
or something needs
to be updated.

00:05:22.100 --> 00:05:26.010
And they say, hey, this place
has changed its location.

00:05:26.010 --> 00:05:27.410
Or it has changed its name.

00:05:27.410 --> 00:05:28.868
Or the opening
hours are not right.

00:05:28.868 --> 00:05:30.530
Or maybe it has shut down.

00:05:30.530 --> 00:05:33.770
So we get a constant stream
of suggestions from our uses

00:05:33.770 --> 00:05:37.750
about what needs to be updated.

00:05:37.750 --> 00:05:39.750
And last but not least,
another important source

00:05:39.750 --> 00:05:42.690
of information for us are the
business owners themselves.

00:05:42.690 --> 00:05:45.410
If you own a business, you
really care about the fact

00:05:45.410 --> 00:05:47.120
that you're being
found if somebody

00:05:47.120 --> 00:05:48.760
searches for you on Google.

00:05:48.760 --> 00:05:52.020
So as a business owner, you can
sign up to Google My Business.

00:05:52.020 --> 00:05:54.774
And when you have this
account, you can claim a place.

00:05:54.774 --> 00:05:56.190
And you can say,
this is my place.

00:05:56.190 --> 00:05:57.490
This is my store.

00:05:57.490 --> 00:05:59.900
And you can make sure that
all this information in there

00:05:59.900 --> 00:06:02.840
is right-- that it has the right
name, the right opening hours,

00:06:02.840 --> 00:06:07.190
and it's in the right
place on the map.

00:06:07.190 --> 00:06:10.500
So these are just a few
examples of information

00:06:10.500 --> 00:06:13.582
that flows into
Places at Google.

00:06:13.582 --> 00:06:15.290
And I'd like to stress
the fact that this

00:06:15.290 --> 00:06:16.960
is a real unique thing.

00:06:16.960 --> 00:06:18.950
This is a differentiator
if you compare us

00:06:18.950 --> 00:06:20.450
to many other
information sources

00:06:20.450 --> 00:06:23.030
that you can have for
places information.

00:06:23.030 --> 00:06:24.240
This is really hard to do.

00:06:24.240 --> 00:06:26.050
This is a lot of
sweat and labor that

00:06:26.050 --> 00:06:29.230
goes into maintaining
this type of database

00:06:29.230 --> 00:06:31.580
and keeping it up to date.

00:06:31.580 --> 00:06:34.360
And so we share this
information with the consumers

00:06:34.360 --> 00:06:39.470
through Google Maps, and with
developers from the Places API.

00:06:39.470 --> 00:06:41.560
And what I'd like
to do now is to just

00:06:41.560 --> 00:06:44.430
walk you through the main
kind of questions and problems

00:06:44.430 --> 00:06:49.160
that you can solve when
you use the Places API.

00:06:49.160 --> 00:06:51.570
The first kind of question
that you can work with

00:06:51.570 --> 00:06:56.560
is to answer the simple-sounding
question of, where am I?

00:06:56.560 --> 00:06:57.460
What's around me?

00:06:57.460 --> 00:06:59.310
Where am I right now?

00:06:59.310 --> 00:07:02.650
And the traditional way
how you deal with that

00:07:02.650 --> 00:07:03.860
is that you use geocoding.

00:07:03.860 --> 00:07:04.360
Right?

00:07:04.360 --> 00:07:07.260
So you have, for example,
a latitude and a longitude.

00:07:07.260 --> 00:07:09.110
And you convert
that with geocoding

00:07:09.110 --> 00:07:10.670
into a street address.

00:07:10.670 --> 00:07:12.780
Or you go the other way around.

00:07:12.780 --> 00:07:15.690
And that's perfectly
fine for what it does.

00:07:15.690 --> 00:07:18.470
But it doesn't really tell you
about the semantic layer on top

00:07:18.470 --> 00:07:20.030
that I just talked about.

00:07:20.030 --> 00:07:22.834
The street level or the
address doesn't tell you

00:07:22.834 --> 00:07:24.750
what kind of place you're
going to find there,

00:07:24.750 --> 00:07:27.090
and what characteristics it has.

00:07:27.090 --> 00:07:29.780
In order to address this
additional layer on top,

00:07:29.780 --> 00:07:31.650
you need some kind
of a descriptor

00:07:31.650 --> 00:07:34.000
or an identifier for that.

00:07:34.000 --> 00:07:37.360
And we use the
place ID for that.

00:07:37.360 --> 00:07:40.360
So the place ID is
this unique identifier

00:07:40.360 --> 00:07:44.070
that gives you access to all
these kind of semantic places.

00:07:44.070 --> 00:07:45.600
And this has a
pretty broad scope.

00:07:45.600 --> 00:07:47.630
So it pretty much
covers most things

00:07:47.630 --> 00:07:50.330
that a user developer would
care about on a Google map.

00:07:50.330 --> 00:07:53.140
We use place IDs to
describe establishments

00:07:53.140 --> 00:07:55.570
such as restaurants
and cafes, points

00:07:55.570 --> 00:07:57.725
of interest such as
a beach or a park,

00:07:57.725 --> 00:08:02.110
and also geopolitical entities
such as a city or a state

00:08:02.110 --> 00:08:03.380
or something like that.

00:08:03.380 --> 00:08:05.380
And there are also a whole
bunch of other places

00:08:05.380 --> 00:08:08.080
that we describe with
place IDs, such as road

00:08:08.080 --> 00:08:11.870
segments, addresses like
your personal home address,

00:08:11.870 --> 00:08:14.840
or also intersections.

00:08:14.840 --> 00:08:16.900
What I'd like you to keep
in mind about the place

00:08:16.900 --> 00:08:19.760
ID is that it is a
unique identifier.

00:08:19.760 --> 00:08:22.740
So no two places have
the same place ID.

00:08:22.740 --> 00:08:25.670
It is stable over time, which
means that you can store it

00:08:25.670 --> 00:08:28.090
indefinitely for your purposes.

00:08:28.090 --> 00:08:29.340
And it is global.

00:08:29.340 --> 00:08:32.740
So that means as far as
Google's geodata goes,

00:08:32.740 --> 00:08:36.169
we use the place ID
all around the world.

00:08:36.169 --> 00:08:38.030
And now that we
have a place ID, we

00:08:38.030 --> 00:08:40.640
can come back to just
answering this question about,

00:08:40.640 --> 00:08:42.110
where am I right now?

00:08:42.110 --> 00:08:45.640
So the Places API has a function
that's called getCurrentPlace.

00:08:45.640 --> 00:08:48.520
And getCurrentPlace will
give you a list of places.

00:08:48.520 --> 00:08:52.410
And each one of these places
is identified by the place ID.

00:08:52.410 --> 00:08:54.920
And it comes with a
likelihood attached to it.

00:08:54.920 --> 00:08:58.430
And this likelihood
expresses the confidence

00:08:58.430 --> 00:09:01.960
that Google has that a
user is at a certain place

00:09:01.960 --> 00:09:03.407
at a certain time.

00:09:03.407 --> 00:09:04.990
And I want you to
keep this likelihood

00:09:04.990 --> 00:09:07.484
here in mind for a little
bit later when Ravi speaks.

00:09:07.484 --> 00:09:09.400
Because he's going to
go into much more detail

00:09:09.400 --> 00:09:12.230
and explain to you what this
likelihood really means.

00:09:12.230 --> 00:09:15.260
It's quite interesting.

00:09:15.260 --> 00:09:18.390
Another way how you can tell
where you are at the moment

00:09:18.390 --> 00:09:20.680
is, well, just ask your user.

00:09:20.680 --> 00:09:22.950
But ask them in a
nice and friendly way.

00:09:22.950 --> 00:09:25.710
So what we offer for that
is called a Place Picker.

00:09:25.710 --> 00:09:27.780
So this is a visual
experience that

00:09:27.780 --> 00:09:30.834
allows the user to drag
and drop a pin on a map.

00:09:30.834 --> 00:09:32.250
And once you've
done that, then it

00:09:32.250 --> 00:09:34.610
shows you a list of
the nearby places.

00:09:34.610 --> 00:09:36.170
That is really,
really convenient.

00:09:36.170 --> 00:09:39.000
For example, if you want
to build user location

00:09:39.000 --> 00:09:41.572
sharing into your
app, and you want

00:09:41.572 --> 00:09:44.030
to get the same experience that
you get, for example, right

00:09:44.030 --> 00:09:47.075
now on Google Hangouts, when
you tap Share My Location.

00:09:51.390 --> 00:09:54.950
Another kind of key question
that you may ask is, well, OK.

00:09:54.950 --> 00:09:56.320
Now I've retrieved the place.

00:09:56.320 --> 00:09:57.440
So what's at this place?

00:09:57.440 --> 00:10:00.690
Tell me more information
about this place.

00:10:00.690 --> 00:10:02.950
And what we give you
for that is something

00:10:02.950 --> 00:10:04.910
called a Place Details request.

00:10:04.910 --> 00:10:07.010
Place Details gives you
a lot of information

00:10:07.010 --> 00:10:09.720
about the semantic
nature of a place.

00:10:09.720 --> 00:10:13.020
It gives you, just like
geocoding, the street address

00:10:13.020 --> 00:10:15.840
and the latitude and longitude,
but much more than that.

00:10:15.840 --> 00:10:18.250
It gives you the
name, which is how

00:10:18.250 --> 00:10:20.070
most people identify places.

00:10:20.070 --> 00:10:21.850
It gives you a place type.

00:10:21.850 --> 00:10:23.850
And the place type is
really, really actionable.

00:10:23.850 --> 00:10:24.791
Think about it.

00:10:24.791 --> 00:10:27.290
If you're building an app that
has a number of notifications

00:10:27.290 --> 00:10:30.280
in it, the notification
behavior of your app

00:10:30.280 --> 00:10:33.490
may be completely different
if you're in a quiet place,

00:10:33.490 --> 00:10:36.050
like a hospital or a
library, as opposed to you're

00:10:36.050 --> 00:10:40.750
in a busy commercial
place, like a mall.

00:10:40.750 --> 00:10:44.420
It also has contact details
that makes your app much more

00:10:44.420 --> 00:10:44.960
actionable.

00:10:44.960 --> 00:10:45.460
Right?

00:10:45.460 --> 00:10:48.229
So if you're adding to the
description of where a user

00:10:48.229 --> 00:10:50.520
right now is, if you're adding
the website or the phone

00:10:50.520 --> 00:10:53.990
number, then they can just
call up and make a reservation,

00:10:53.990 --> 00:10:55.270
for example.

00:10:55.270 --> 00:10:58.480
It has store opening hours in
there, which is really, really

00:10:58.480 --> 00:10:59.580
important for many users.

00:10:59.580 --> 00:11:01.796
Because in many use cases,
you only care about places

00:11:01.796 --> 00:11:02.920
when they're actually open.

00:11:02.920 --> 00:11:05.140
Otherwise, who cares?

00:11:05.140 --> 00:11:07.710
And it has reviews and ratings.

00:11:07.710 --> 00:11:09.460
That is really, really
important if you're

00:11:09.460 --> 00:11:11.140
trying to make a choice
about whether you

00:11:11.140 --> 00:11:12.014
want to go somewhere.

00:11:12.014 --> 00:11:13.770
Many people really
rely on these ratings

00:11:13.770 --> 00:11:15.900
and say, I never go
to a place that has

00:11:15.900 --> 00:11:17.207
less than a four-star rating.

00:11:19.820 --> 00:11:23.060
The second piece of information
that we give you are photos.

00:11:23.060 --> 00:11:26.340
We have millions of
photos in the Places API.

00:11:26.340 --> 00:11:28.400
And we make them all
available to you.

00:11:28.400 --> 00:11:31.160
So you can build a really
visually rich environment

00:11:31.160 --> 00:11:33.360
and experience for your users.

00:11:33.360 --> 00:11:35.030
And again, it
helps the user more

00:11:35.030 --> 00:11:36.920
to understand what
a place is about

00:11:36.920 --> 00:11:39.500
if you're adding more
photos to your application.

00:11:39.500 --> 00:11:41.351
If you're looking
at a restaurant,

00:11:41.351 --> 00:11:43.600
seeing more photos of the
place-- seeing what it looks

00:11:43.600 --> 00:11:46.230
like from the inside, from
the outside, what a menu looks

00:11:46.230 --> 00:11:50.130
like, does the food look
good-- all of these things

00:11:50.130 --> 00:11:53.000
help you understand,
what is this place about

00:11:53.000 --> 00:11:54.370
and do I care about this place?

00:11:57.550 --> 00:11:59.790
Which brings me to
my third point--

00:11:59.790 --> 00:12:01.750
how you can discover
places around you.

00:12:01.750 --> 00:12:05.470
So, tell me more about
interesting places around me.

00:12:05.470 --> 00:12:08.700
One way of doing so
is using Autocomplete.

00:12:08.700 --> 00:12:11.570
This is a really, really popular
feature that a lot of apps

00:12:11.570 --> 00:12:15.990
use these days in order to
help the user discover places.

00:12:15.990 --> 00:12:18.540
If your user knows
the name of a place,

00:12:18.540 --> 00:12:20.600
or they know a part
of the street address,

00:12:20.600 --> 00:12:22.400
they can just start typing.

00:12:22.400 --> 00:12:24.470
And as they type,
Autocomplete gives them

00:12:24.470 --> 00:12:27.250
an interactive experience
where you just, as you type,

00:12:27.250 --> 00:12:30.350
get suggestions of
places that look

00:12:30.350 --> 00:12:32.020
like what you've just typed.

00:12:32.020 --> 00:12:34.930
And then you just select
it from a dropdown box.

00:12:34.930 --> 00:12:38.340
So for example, if you're
building a ride-sharing app,

00:12:38.340 --> 00:12:41.150
and the user wants to enter
the destination of where

00:12:41.150 --> 00:12:44.670
they want to go to, Autocomplete
is a great way of doing that.

00:12:48.250 --> 00:12:50.670
And the other way how
you can discover a place

00:12:50.670 --> 00:12:53.280
is through Search.

00:12:53.280 --> 00:12:55.640
Search is a really,
really interesting one.

00:12:55.640 --> 00:12:58.580
Because a good search
result means something

00:12:58.580 --> 00:13:01.870
very different to everybody
depending on what use case

00:13:01.870 --> 00:13:03.310
you have.

00:13:03.310 --> 00:13:05.310
And if you think
about the factors that

00:13:05.310 --> 00:13:08.470
go into what a good search
result means to you,

00:13:08.470 --> 00:13:09.900
it could be many
different things.

00:13:09.900 --> 00:13:10.400
Right?

00:13:10.400 --> 00:13:12.430
So you search for a
particular string.

00:13:12.430 --> 00:13:14.610
And of course a
good search result

00:13:14.610 --> 00:13:16.610
is a result that
matches your search

00:13:16.610 --> 00:13:18.110
string in a very good way.

00:13:18.110 --> 00:13:20.450
But there's other
factors, as well.

00:13:20.450 --> 00:13:22.320
Proximity is an
important factor in order

00:13:22.320 --> 00:13:25.184
to determine, OK, so
there's a place that

00:13:25.184 --> 00:13:27.350
has a name that looks similar
to what I've searched.

00:13:27.350 --> 00:13:31.280
But is it close to the area
where I wanted to get it from?

00:13:31.280 --> 00:13:33.300
Another factor is the
prominence of a place.

00:13:33.300 --> 00:13:35.790
You may want to
rank places higher

00:13:35.790 --> 00:13:37.320
that have a high prominence.

00:13:37.320 --> 00:13:39.390
By prominence I mean,
are they popular?

00:13:39.390 --> 00:13:41.260
Are many people going there?

00:13:41.260 --> 00:13:44.250
Does it have positive
reviews-- that kind of thing.

00:13:44.250 --> 00:13:48.300
And the last point is that you
may have a personal bias in how

00:13:48.300 --> 00:13:50.000
you want to see places.

00:13:50.000 --> 00:13:53.060
You may care about certain
characteristics of a place

00:13:53.060 --> 00:13:54.600
much more than others do.

00:13:54.600 --> 00:13:58.082
And therefore you want certain
places to be ranked up higher.

00:13:58.082 --> 00:14:00.040
So let me walk you through
a couple of examples

00:14:00.040 --> 00:14:03.040
to illustrate what I
mean by all of that.

00:14:03.040 --> 00:14:04.900
Let's start with a
very simple example.

00:14:04.900 --> 00:14:07.510
Let's say you search
for Sydney Opera.

00:14:07.510 --> 00:14:09.730
Sydney Opera as a
fairly specific string.

00:14:09.730 --> 00:14:12.400
And if you search for that, the
only matching place for that

00:14:12.400 --> 00:14:13.780
is the Sydney Opera House.

00:14:13.780 --> 00:14:15.650
So you just get one
result. And that's

00:14:15.650 --> 00:14:17.770
what you see as a red
dot here on the map.

00:14:17.770 --> 00:14:22.130
That's very simple,
and very feasible.

00:14:22.130 --> 00:14:23.636
Let's make it a
bit more complex.

00:14:23.636 --> 00:14:25.260
Let's say you search
much more generic.

00:14:25.260 --> 00:14:27.570
You search for cafe in Sydney.

00:14:27.570 --> 00:14:31.030
In this case, what happens is
cafe is a very broad terms.

00:14:31.030 --> 00:14:32.650
So you have a lot
of places matching

00:14:32.650 --> 00:14:34.090
this kind of search string.

00:14:34.090 --> 00:14:36.240
And Sydney is a very
broad term, as well.

00:14:36.240 --> 00:14:38.740
Because the city of
Sydney is pretty large.

00:14:38.740 --> 00:14:41.450
So you get a lot
of matching places.

00:14:41.450 --> 00:14:44.220
So what the Places API
here does is it gives you

00:14:44.220 --> 00:14:45.460
a set of search results.

00:14:45.460 --> 00:14:48.660
And you see here
the top 20 results.

00:14:48.660 --> 00:14:51.940
And they're ranked by both
prominence and proximity.

00:14:51.940 --> 00:14:56.080
So it will select places that
have both a high prominence--

00:14:56.080 --> 00:14:59.460
they're really popular--
and they're fairly centrally

00:14:59.460 --> 00:15:02.340
located within Sydney.

00:15:02.340 --> 00:15:04.860
Now let's make the search
a little bit more specific.

00:15:04.860 --> 00:15:08.750
Let's say you care about
expensive cafes in Sydney.

00:15:08.750 --> 00:15:11.330
If you do that, you're going
to see that the search result

00:15:11.330 --> 00:15:13.210
set looks completely different.

00:15:13.210 --> 00:15:16.170
So here the places are
much more spread out.

00:15:16.170 --> 00:15:18.160
It will search for
places only that have

00:15:18.160 --> 00:15:19.890
a certain minimum price.

00:15:19.890 --> 00:15:22.890
And you see that this
affects the prominence

00:15:22.890 --> 00:15:26.770
and the proximity of
these results as well.

00:15:26.770 --> 00:15:28.150
So they're much more spread out.

00:15:28.150 --> 00:15:30.233
And you're going to see
that a lot of these places

00:15:30.233 --> 00:15:32.920
are actually located around
waterfront locations, which

00:15:32.920 --> 00:15:36.565
leads me to understand
what I always suspected,

00:15:36.565 --> 00:15:38.940
which is that you're not just
always paying for the food.

00:15:38.940 --> 00:15:40.314
You're also paying
for the views.

00:15:42.950 --> 00:15:46.370
And another way you can
introduce bias to your search

00:15:46.370 --> 00:15:49.130
is by having proximity bias.

00:15:49.130 --> 00:15:50.770
So you can be very
specific and say,

00:15:50.770 --> 00:15:54.660
I want to search for a cafe
near Circular Quay in Sydney.

00:15:54.660 --> 00:15:56.120
Circular Quay is
a ferry terminal

00:15:56.120 --> 00:15:58.590
that I've highlighted
here with a green arrow.

00:15:58.590 --> 00:16:01.410
So in this case, you will see
that the search results cluster

00:16:01.410 --> 00:16:03.487
around Circular Quay.

00:16:03.487 --> 00:16:05.570
What's quite interesting
here is that there's also

00:16:05.570 --> 00:16:06.850
a couple of search
results which are

00:16:06.850 --> 00:16:09.190
a bit further down and a bit
further away from Circular

00:16:09.190 --> 00:16:09.900
Quay.

00:16:09.900 --> 00:16:12.150
And you may ask,
well, why is that?

00:16:12.150 --> 00:16:14.210
Are there not any
other cafes which

00:16:14.210 --> 00:16:16.270
are closer to Circular Quay?

00:16:16.270 --> 00:16:18.610
And the answer to that
is that, well, prominence

00:16:18.610 --> 00:16:20.050
also plays an important role.

00:16:20.050 --> 00:16:22.120
So these places that
are a bit further away

00:16:22.120 --> 00:16:24.290
may have a higher prominence
than the cafes which

00:16:24.290 --> 00:16:25.750
are directly there.

00:16:25.750 --> 00:16:28.520
So this kind of result is
Google's way of telling you

00:16:28.520 --> 00:16:29.440
that it said, look.

00:16:29.440 --> 00:16:31.398
I found you a couple of
places which are really

00:16:31.398 --> 00:16:32.780
close to where you're looking.

00:16:32.780 --> 00:16:35.404
But there are a couple of other
places that are really popular.

00:16:35.404 --> 00:16:39.120
And maybe it's worth
the walk to go there.

00:16:39.120 --> 00:16:41.610
So this was a brief
overview of the whole set

00:16:41.610 --> 00:16:43.660
of functionalities and
the kind of use cases

00:16:43.660 --> 00:16:47.110
that you can cover
using the Places API.

00:16:47.110 --> 00:16:51.590
And the Places API is available
on a number of platforms.

00:16:51.590 --> 00:16:55.370
We have a mobile native library
for Android and for iOS.

00:16:55.370 --> 00:16:56.770
You can use it as a web service.

00:16:56.770 --> 00:17:00.170
And you can use it also
as a JavaScript library.

00:17:00.170 --> 00:17:03.100
And going forward, we would like
to now focus a little bit more

00:17:03.100 --> 00:17:04.630
on the mobile native APIs.

00:17:04.630 --> 00:17:06.630
Because they have a number
of really interesting

00:17:06.630 --> 00:17:08.391
characteristics and features.

00:17:08.391 --> 00:17:10.557
And that is what Ravi will
tell you much more about.

00:17:14.676 --> 00:17:16.050
RAVI PALANKI:
Thank you, Florian.

00:17:16.050 --> 00:17:18.250
And good morning, everyone.

00:17:18.250 --> 00:17:21.390
I'm Ravi, the engineering lead
for the Android Places API.

00:17:21.390 --> 00:17:23.490
And as Florian
mentioned, I'm here

00:17:23.490 --> 00:17:28.840
to talk about mobile native
APIs on Android and on iOS.

00:17:28.840 --> 00:17:32.020
And I want to explain the
advantages of these APIs,

00:17:32.020 --> 00:17:34.330
and not just give you
a list of advantages.

00:17:34.330 --> 00:17:36.990
I'll go through the technology
behind these advantages.

00:17:36.990 --> 00:17:38.520
And I'll illustrate
with examples

00:17:38.520 --> 00:17:41.560
why these advantages
exist for native APIs.

00:17:41.560 --> 00:17:43.560
In my view, there
are three of them.

00:17:43.560 --> 00:17:46.730
One is that mobile
APIs are easy to use.

00:17:46.730 --> 00:17:49.850
The second one is that
they're battery friendly.

00:17:49.850 --> 00:17:54.187
And the third one is that they
give more accurate results.

00:17:54.187 --> 00:17:56.270
So let me go through each
of them with an example,

00:17:56.270 --> 00:17:59.090
starting with the first
one-- ease of use.

00:17:59.090 --> 00:18:00.990
Let's say you have
an app which wants

00:18:00.990 --> 00:18:02.710
to get the address of a place.

00:18:02.710 --> 00:18:05.150
That's one of the
most basic things

00:18:05.150 --> 00:18:07.830
that you could do
with a place, right?

00:18:07.830 --> 00:18:09.470
Get its address.

00:18:09.470 --> 00:18:12.260
You could use a web
service for that.

00:18:12.260 --> 00:18:13.910
The Places API will
return your data.

00:18:13.910 --> 00:18:17.860
But it returns a big
XML or JSON response

00:18:17.860 --> 00:18:21.010
from which you would have to
extract the address yourself.

00:18:21.010 --> 00:18:24.240
On the other hand, if you
were to use a native API,

00:18:24.240 --> 00:18:27.860
say on Android, you would
get a Place object back.

00:18:27.860 --> 00:18:29.960
And this Place object
is very structured.

00:18:29.960 --> 00:18:31.840
If you want to
extract the address,

00:18:31.840 --> 00:18:33.426
you have a getAddress method.

00:18:33.426 --> 00:18:34.800
You want to get
the phone number?

00:18:34.800 --> 00:18:36.450
There's a getPhoneNumber method.

00:18:36.450 --> 00:18:40.530
So this is much more convenient
than getting an XML response

00:18:40.530 --> 00:18:43.720
or JSON response
and parsing that.

00:18:43.720 --> 00:18:47.670
But it's not just
about avoiding parsing.

00:18:47.670 --> 00:18:50.640
On mobile, we offer
these two Widgets

00:18:50.640 --> 00:18:55.170
which make it extremely easy
for a user to experience

00:18:55.170 --> 00:18:57.720
the power of the Places API.

00:18:57.720 --> 00:19:00.650
On the left, you see the
Place Picker Widget, which

00:19:00.650 --> 00:19:02.720
shows the user's current place.

00:19:02.720 --> 00:19:06.940
And you allow the user to
select either that place

00:19:06.940 --> 00:19:09.520
or any other place on a map.

00:19:09.520 --> 00:19:11.950
On the right, you see
the Autocomplete Widget,

00:19:11.950 --> 00:19:14.810
which allows the user to start
typing in a string-- say,

00:19:14.810 --> 00:19:17.820
in this case, "shore"-- and
that would autocomplete it

00:19:17.820 --> 00:19:20.310
to the place that the user
was looking for-- presumably

00:19:20.310 --> 00:19:23.592
Shoreline Amphitheatre-- as
the string keeps getting typed.

00:19:27.250 --> 00:19:30.560
So these widgets are
easy to use for a user.

00:19:30.560 --> 00:19:33.310
But it's not just about
the end user benefit.

00:19:33.310 --> 00:19:35.250
It's also extremely
easy for a developer

00:19:35.250 --> 00:19:37.140
to integrate them into an app.

00:19:37.140 --> 00:19:40.690
What you see here is a snippet
of code for launching the Place

00:19:40.690 --> 00:19:42.540
Picker from an Android app.

00:19:42.540 --> 00:19:45.140
It's literally just
three lines of code.

00:19:45.140 --> 00:19:48.230
And you get this beautiful
user experience, which

00:19:48.230 --> 00:19:50.990
allows the user to pan
a map, select places,

00:19:50.990 --> 00:19:52.870
shows the current
place-- all of that, just

00:19:52.870 --> 00:19:54.210
for three lines of code.

00:19:54.210 --> 00:19:55.890
So that means that
as a developer,

00:19:55.890 --> 00:19:57.980
you don't have to worry
about these things--

00:19:57.980 --> 00:20:00.010
the user experience and stuff.

00:20:00.010 --> 00:20:01.840
We take care of that for you.

00:20:01.840 --> 00:20:06.060
And you can just focus
on your use cases.

00:20:06.060 --> 00:20:08.750
And it's not only about Android.

00:20:08.750 --> 00:20:10.960
We have the same
Widgets on iOS as well.

00:20:10.960 --> 00:20:14.060
And they're equally
easy to use on iOS.

00:20:14.060 --> 00:20:15.860
And if you want to try
this out yourselves,

00:20:15.860 --> 00:20:17.520
you can always go
to the Codelabs.

00:20:17.520 --> 00:20:18.440
Check it out.

00:20:18.440 --> 00:20:22.530
You'll be able to do
it yourself in no time.

00:20:22.530 --> 00:20:23.530
OK.

00:20:23.530 --> 00:20:27.030
So the fact that we
have structured data

00:20:27.030 --> 00:20:30.170
and you have these Widgets
makes the native APIs

00:20:30.170 --> 00:20:32.260
very attractive from a
developer perspective.

00:20:32.260 --> 00:20:34.860
And with that, I want to move
to the second advantage, which

00:20:34.860 --> 00:20:38.860
is that we have engineered these
native APIs to be very, very,

00:20:38.860 --> 00:20:40.350
very battery friendly.

00:20:40.350 --> 00:20:42.410
And I want to again
explain with examples

00:20:42.410 --> 00:20:44.070
why they're battery friendly.

00:20:47.920 --> 00:20:52.685
So let's go back to the same
example of getting data-- say,

00:20:52.685 --> 00:20:55.350
the address-- from [INAUDIBLE].

00:20:55.350 --> 00:20:58.780
If you use the web
service, by definition

00:20:58.780 --> 00:21:00.520
it would actually
contact the web.

00:21:00.520 --> 00:21:04.340
And on a mobile device, it has
to do that over some radio.

00:21:04.340 --> 00:21:05.480
It could be Wi-Fi.

00:21:05.480 --> 00:21:06.530
It could be cellular.

00:21:06.530 --> 00:21:07.280
It could be something else.

00:21:07.280 --> 00:21:07.780
Right?

00:21:07.780 --> 00:21:09.630
It contacts it over some radio.

00:21:09.630 --> 00:21:12.220
Now network calls
tend to be some

00:21:12.220 --> 00:21:14.490
of the most
power-hungry operations

00:21:14.490 --> 00:21:17.440
that you can do on
a mobile device.

00:21:17.440 --> 00:21:21.410
For instance, a network call
that you make over 3G radio

00:21:21.410 --> 00:21:25.850
costs 1/3 of a milliamp hour.

00:21:25.850 --> 00:21:29.570
Many of you may be familiar
with what a milliamp hour is.

00:21:29.570 --> 00:21:30.810
Some of you may not.

00:21:30.810 --> 00:21:32.560
So a milliamp hour
means that you're

00:21:32.560 --> 00:21:36.080
drawing a current
of one milliamp

00:21:36.080 --> 00:21:37.860
for the duration of one hour.

00:21:37.860 --> 00:21:40.570
And I use this unit because
this is what batteries

00:21:40.570 --> 00:21:42.090
are measured in, as well.

00:21:42.090 --> 00:21:45.040
A typical battery, for
instance, would be something

00:21:45.040 --> 00:21:46.990
like 1600 milliamp hours.

00:21:46.990 --> 00:21:49.270
There are batteries
which are larger.

00:21:49.270 --> 00:21:50.920
There are batteries
which are smaller.

00:21:50.920 --> 00:21:53.540
But this is fairly common value.

00:21:53.540 --> 00:21:54.450
Right?

00:21:54.450 --> 00:21:57.550
Now that 1/3 milliamp hour,
and the 1,600 milliamp hours--

00:21:57.550 --> 00:21:59.220
let's put that in perspective.

00:21:59.220 --> 00:22:01.959
Let's say you had an app
which was only making network

00:22:01.959 --> 00:22:03.250
calls, not doing anything else.

00:22:03.250 --> 00:22:04.700
It's just making network calls.

00:22:04.700 --> 00:22:08.170
If that app were making one
network call every minute,

00:22:08.170 --> 00:22:10.490
it would drain a third of
their battery in a day.

00:22:10.490 --> 00:22:10.990
Right?

00:22:10.990 --> 00:22:12.950
Even though it was not
doing anything else.

00:22:12.950 --> 00:22:16.270
So you can see why this is
a power-hungry operation.

00:22:16.270 --> 00:22:17.050
OK.

00:22:17.050 --> 00:22:17.630
Great.

00:22:17.630 --> 00:22:20.310
So how do we do
things differently

00:22:20.310 --> 00:22:21.940
from the web service
on Native APIs?

00:22:25.060 --> 00:22:27.620
We make use of the
fact that people

00:22:27.620 --> 00:22:31.080
visit the same set of places
over and over and over again.

00:22:31.080 --> 00:22:34.490
That picture here is actually
a very good illustration

00:22:34.490 --> 00:22:35.750
of my life.

00:22:35.750 --> 00:22:36.570
I go to work.

00:22:36.570 --> 00:22:37.490
I go home.

00:22:37.490 --> 00:22:38.430
I go to work.

00:22:38.430 --> 00:22:39.460
I go home.

00:22:39.460 --> 00:22:42.220
If I want to spice things up,
sometimes I work from home.

00:22:42.220 --> 00:22:44.120
[LAUGHTER]

00:22:44.120 --> 00:22:48.550
Now I hope your life is not as
boring as mine, for your sake.

00:22:48.550 --> 00:22:51.360
But it's still true
that, if you imagine it,

00:22:51.360 --> 00:22:55.160
most people end up visiting the
same set of places frequently.

00:22:55.160 --> 00:22:59.140
And only occasionally do
they visit new places.

00:22:59.140 --> 00:23:01.200
And we can make
use of this fact--

00:23:01.200 --> 00:23:03.220
that people are
creatures of habit,

00:23:03.220 --> 00:23:06.560
that they are repetitive
in their patterns.

00:23:06.560 --> 00:23:10.120
And we cache data about
those places on-device.

00:23:10.120 --> 00:23:12.490
And when we cache
this on-device-- let's

00:23:12.490 --> 00:23:16.020
say your app calls, hey, give
me the address for this place.

00:23:16.020 --> 00:23:17.590
We don't have to
make a network call.

00:23:17.590 --> 00:23:19.060
Because that's already
there on-device.

00:23:19.060 --> 00:23:20.935
Maybe some other app
requested the same place

00:23:20.935 --> 00:23:23.310
because the user
was there before.

00:23:23.310 --> 00:23:26.360
And the fact that we can get
this data out of the device

00:23:26.360 --> 00:23:29.830
means that we don't have to make
those expensive network calls.

00:23:29.830 --> 00:23:33.970
And that in turn means that
the app consumes less power.

00:23:33.970 --> 00:23:35.680
And it's good for battery.

00:23:35.680 --> 00:23:37.670
And the fact that an
app is good for battery

00:23:37.670 --> 00:23:39.211
also means that
users are going to be

00:23:39.211 --> 00:23:40.990
happy with that particular app.

00:23:40.990 --> 00:23:43.590
Because you can see which app
is consuming how much power,

00:23:43.590 --> 00:23:44.250
right?

00:23:44.250 --> 00:23:47.170
So the fact that
we're using caching

00:23:47.170 --> 00:23:51.230
means that native APIs
make more battery friendly.

00:23:54.490 --> 00:23:56.640
And that brings me to
advantage number three.

00:23:56.640 --> 00:24:00.270
And this in my view is
actually the coolest advantage.

00:24:00.270 --> 00:24:03.640
It is that you can in fact
get more accurate results

00:24:03.640 --> 00:24:05.230
from native APIs.

00:24:05.230 --> 00:24:08.450
How is that?

00:24:08.450 --> 00:24:11.230
Let's consider an example
app of photo tagging.

00:24:11.230 --> 00:24:14.680
A lot of people-- and I
mean a lot of people--

00:24:14.680 --> 00:24:17.540
end up taking pictures of their
food and posting it online.

00:24:17.540 --> 00:24:18.930
I have no idea why they do that.

00:24:18.930 --> 00:24:21.711
But they do it.

00:24:21.711 --> 00:24:23.560
So one of the most
common things that you

00:24:23.560 --> 00:24:28.230
would want to do to such a photo
is attach the location or place

00:24:28.230 --> 00:24:30.570
where it was taken.

00:24:30.570 --> 00:24:33.270
Now, photos have EXIF
tags where you can

00:24:33.270 --> 00:24:35.840
put in latitude and longitude.

00:24:35.840 --> 00:24:42.150
But what does an EXIF
tag really give you?

00:24:42.150 --> 00:24:44.640
It will give you a pin on a map.

00:24:44.640 --> 00:24:47.410
But that doesn't carry
any semantic meaning

00:24:47.410 --> 00:24:49.130
to me, or to anybody.

00:24:49.130 --> 00:24:51.300
For instance, I would
never say, oh, I

00:24:51.300 --> 00:24:56.310
went yesterday to
37.3861, minus 122.0834,

00:24:56.310 --> 00:24:59.240
and I had great food at
that particular coordinate.

00:24:59.240 --> 00:25:00.795
Nobody says that.

00:25:00.795 --> 00:25:02.170
Well, no normal
person says that.

00:25:02.170 --> 00:25:02.670
Right?

00:25:05.570 --> 00:25:06.070
OK?

00:25:06.070 --> 00:25:07.770
So it has no semantic meaning.

00:25:07.770 --> 00:25:10.900
So as an app developer,
what app developers do

00:25:10.900 --> 00:25:13.930
is try to convert this to
something that's better.

00:25:13.930 --> 00:25:16.050
And using reverse
geocoding, this

00:25:16.050 --> 00:25:18.750
can be converted to an address.

00:25:18.750 --> 00:25:22.780
In this case, this lat-long
maps to 903 Castro Street.

00:25:22.780 --> 00:25:24.730
That's definitely better.

00:25:24.730 --> 00:25:28.630
But it still doesn't carry a
whole lot of semantic meaning.

00:25:28.630 --> 00:25:31.750
Again, I probably don't say,
oh, I had great food yesterday

00:25:31.750 --> 00:25:33.210
at 903 Castro Street.

00:25:33.210 --> 00:25:33.960
We don't say that.

00:25:33.960 --> 00:25:35.240
Right?

00:25:35.240 --> 00:25:36.590
That's one problem.

00:25:36.590 --> 00:25:38.980
There is a second,
potentially bigger problem

00:25:38.980 --> 00:25:42.010
that if you look at the map
you can actually identify.

00:25:42.010 --> 00:25:45.630
903 Castro Street here is the
address of a bicycle shop.

00:25:45.630 --> 00:25:48.380
And again, most people
don't eat at bicycle shops.

00:25:48.380 --> 00:25:50.037
Right?

00:25:50.037 --> 00:25:51.870
So why did reverse
geocoding get this wrong?

00:25:51.870 --> 00:25:55.360
Why did it not actually pick
up the restaurant nearby,

00:25:55.360 --> 00:25:57.910
and map it to a bicycle shop?

00:25:57.910 --> 00:26:00.281
And the answer is
the location that you

00:26:00.281 --> 00:26:02.030
get on your device--
the lat-long that you

00:26:02.030 --> 00:26:06.810
get on your device-- is
inherently not perfect.

00:26:06.810 --> 00:26:11.930
That is because it relies on
sensors such as GPS or Wi-Fi

00:26:11.930 --> 00:26:15.690
and other sensors like
cellular readings, which

00:26:15.690 --> 00:26:18.620
by themselves are also
inherently not perfect.

00:26:18.620 --> 00:26:21.830
And this is especially
true if you're indoors

00:26:21.830 --> 00:26:23.620
where GPS does not work.

00:26:23.620 --> 00:26:27.730
So what are you getting when
you take latitude and longitude

00:26:27.730 --> 00:26:28.830
from your mobile device?

00:26:28.830 --> 00:26:30.960
You're not getting a
single, perfect point.

00:26:30.960 --> 00:26:33.650
You're getting a point,
plus an uncertainty circle

00:26:33.650 --> 00:26:36.770
that is around that point.

00:26:36.770 --> 00:26:39.450
And reverse geocoding,
on the other hand,

00:26:39.450 --> 00:26:40.930
ignores this uncertainty circle.

00:26:40.930 --> 00:26:43.790
It just looks at the
center of that circle.

00:26:43.790 --> 00:26:44.457
And it says, oh.

00:26:44.457 --> 00:26:44.956
Yeah.

00:26:44.956 --> 00:26:46.810
The nearest place is
903 Castro Street.

00:26:46.810 --> 00:26:48.800
I'm going to map it to that.

00:26:48.800 --> 00:26:52.610
So that's the two disadvantages
of using reverse geocoding.

00:26:52.610 --> 00:26:54.110
One is that it gives
you an address.

00:26:54.110 --> 00:26:56.068
And the second is that
it makes this assumption

00:26:56.068 --> 00:26:58.230
that the lat-long is
perfect and just maps it

00:26:58.230 --> 00:27:00.500
to the nearest address.

00:27:00.500 --> 00:27:01.530
OK.

00:27:01.530 --> 00:27:04.705
On the other hand, if
you use the Places API's

00:27:04.705 --> 00:27:07.440
getCurrentPlace method,
it can actually give you--

00:27:07.440 --> 00:27:09.940
and it will actually give
you-- the name of a place.

00:27:09.940 --> 00:27:11.870
And more often than
not, it gives you

00:27:11.870 --> 00:27:14.956
the name of the correct
place-- in this case, Morocco's

00:27:14.956 --> 00:27:15.455
Restaurant.

00:27:18.110 --> 00:27:20.380
And now again we'll go into
a technology deep dive.

00:27:20.380 --> 00:27:22.400
How is getCurrentPlace
able to do

00:27:22.400 --> 00:27:26.820
this when reverse geocoding was
not able to do the same thing?

00:27:26.820 --> 00:27:27.320
Right?

00:27:27.320 --> 00:27:28.710
Reverse geocoding just took
the lat-long [INAUDIBLE]

00:27:28.710 --> 00:27:29.790
the wrong thing.

00:27:29.790 --> 00:27:32.940
And the answer here goes
back to what Florian

00:27:32.940 --> 00:27:34.570
was mentioning initially.

00:27:34.570 --> 00:27:37.660
Google has this vast
database of places

00:27:37.660 --> 00:27:40.100
and a lot of details
about those places.

00:27:40.100 --> 00:27:43.230
And getCurrentPlace makes
use of that information,

00:27:43.230 --> 00:27:44.970
while other systems don't.

00:27:44.970 --> 00:27:46.100
Right?

00:27:46.100 --> 00:27:48.720
So it actually makes use
of all of this information.

00:27:48.720 --> 00:27:51.660
And like with many other
great products at Google,

00:27:51.660 --> 00:27:53.580
we also harness the
power of machine

00:27:53.580 --> 00:27:56.510
learning to make use
of that information.

00:27:56.510 --> 00:27:58.930
Let me give you, again, an
illustration of the technology

00:27:58.930 --> 00:28:00.221
behind this and how that works.

00:28:02.860 --> 00:28:05.220
One of the things
that this database has

00:28:05.220 --> 00:28:07.730
is opening hours of places.

00:28:07.730 --> 00:28:09.930
Let's say it's 8
o'clock at night.

00:28:09.930 --> 00:28:11.960
Most restaurants, or at
least many restaurants,

00:28:11.960 --> 00:28:14.860
including this particular
restaurant, are open.

00:28:14.860 --> 00:28:19.180
Whereas bicycle shops tend to
be closed at 8:00 in the night.

00:28:19.180 --> 00:28:22.640
Now at the time the
photo was taken--

00:28:22.640 --> 00:28:24.070
let's say it's 8 o'clock.

00:28:24.070 --> 00:28:25.820
This machine learning
system would know

00:28:25.820 --> 00:28:27.390
that it's late in the night.

00:28:27.390 --> 00:28:28.760
The restaurant is open.

00:28:28.760 --> 00:28:30.590
The bicycle shop is closed.

00:28:30.590 --> 00:28:34.170
And therefore it can give a
higher rate to the restaurant

00:28:34.170 --> 00:28:35.980
compared to the bicycle shop.

00:28:35.980 --> 00:28:38.340
So that's one indicator that
it makes use of-- the fact

00:28:38.340 --> 00:28:40.090
that some places are
open at certain times

00:28:40.090 --> 00:28:41.490
and others are closed.

00:28:41.490 --> 00:28:45.240
And that's not the
only indicator.

00:28:45.240 --> 00:28:48.170
Popularity of the place is
another great indicator.

00:28:48.170 --> 00:28:51.680
By definition, popularity
of places-- people

00:28:51.680 --> 00:28:53.490
tend to be at more
popular places

00:28:53.490 --> 00:28:55.610
than at less popular places.

00:28:55.610 --> 00:28:57.750
And this is something
this machine learning

00:28:57.750 --> 00:29:01.330
system makes use of.

00:29:01.330 --> 00:29:04.110
Geometry of the place-- the
fact that you have outlines

00:29:04.110 --> 00:29:07.280
of buildings and you have
an uncertainty circle.

00:29:07.280 --> 00:29:11.000
The uncertainty circle you can
correlate with the building

00:29:11.000 --> 00:29:13.660
outlines and see whether you
are likely to be in a building

00:29:13.660 --> 00:29:18.165
or outside of that building.

00:29:18.165 --> 00:29:19.290
And you can again see that.

00:29:19.290 --> 00:29:21.830
If the uncertainty circle is
tiny and you're within that,

00:29:21.830 --> 00:29:24.280
it's very, very likely
the system will say, OK.

00:29:24.280 --> 00:29:27.580
You're within this place.

00:29:27.580 --> 00:29:32.030
And last but not least,
signals on device.

00:29:32.030 --> 00:29:35.370
So signals such as Wi-Fi,
signals such as beacons--

00:29:35.370 --> 00:29:37.060
the system can
process all of that

00:29:37.060 --> 00:29:39.780
and give different weights
to different places based

00:29:39.780 --> 00:29:41.500
on the signals
that it is reading.

00:29:45.200 --> 00:29:45.760
So great.

00:29:45.760 --> 00:29:48.790
It processes all of this
information-- opening hours,

00:29:48.790 --> 00:29:52.390
popularity, geometry,
Wi-Fi signals,

00:29:52.390 --> 00:29:58.420
beacons-- and gives you a list
of places and the likelihood

00:29:58.420 --> 00:30:02.300
that the user is
currently at that place.

00:30:02.300 --> 00:30:05.620
And you can see here that it
was able to predict correctly

00:30:05.620 --> 00:30:09.130
that the top-ranked place
was Morocco's Restaurant.

00:30:09.130 --> 00:30:11.010
And I want to
stress this again--

00:30:11.010 --> 00:30:14.840
it was able to do that
even though the lat-long

00:30:14.840 --> 00:30:17.050
corresponded to a
different place.

00:30:17.050 --> 00:30:20.110
And it was able to do
that only because it

00:30:20.110 --> 00:30:22.180
made use of
additional information

00:30:22.180 --> 00:30:26.110
that the Places API
has about opening hours

00:30:26.110 --> 00:30:27.930
and things like that.

00:30:27.930 --> 00:30:30.300
So this is very, very powerful.

00:30:30.300 --> 00:30:33.040
Not only are you getting
a semantic place,

00:30:33.040 --> 00:30:35.370
like the name of the
restaurant, but you're also

00:30:35.370 --> 00:30:39.400
much more likely to be accurate
using getCurrentPlace compared

00:30:39.400 --> 00:30:42.180
to using reverse geocoding.

00:30:42.180 --> 00:30:45.140
And that gives your users
exactly the experience

00:30:45.140 --> 00:30:47.810
they're looking for, which
is in this case tagging

00:30:47.810 --> 00:30:49.840
the photo with the
name of the restaurant,

00:30:49.840 --> 00:30:53.340
and not a lat-long
or an address.

00:30:53.340 --> 00:30:54.290
Cool.

00:30:54.290 --> 00:30:56.140
OK.

00:30:56.140 --> 00:30:56.780
So good.

00:30:56.780 --> 00:30:58.360
So I showed you
how getCurrentPlace

00:30:58.360 --> 00:31:00.650
can work for this app.

00:31:00.650 --> 00:31:02.910
Now how can it
work for your app?

00:31:02.910 --> 00:31:05.000
And we have two
recommendation that we'd

00:31:05.000 --> 00:31:07.430
like to make here in case you
plan to use getCurrentPlace

00:31:07.430 --> 00:31:08.710
in your app.

00:31:08.710 --> 00:31:13.400
The first thing is to make sure
that the user's location is

00:31:13.400 --> 00:31:14.290
turned on.

00:31:14.290 --> 00:31:16.070
Now obviously if
location is off,

00:31:16.070 --> 00:31:18.840
given that this machine learning
system is relying on location

00:31:18.840 --> 00:31:22.370
as an input-- and Wi-Fi and
other signals as an input--

00:31:22.370 --> 00:31:23.690
it's not going to work.

00:31:23.690 --> 00:31:27.780
So make sure that your users
do have location turned on.

00:31:27.780 --> 00:31:30.175
Otherwise, it wouldn't
work-- and not just location,

00:31:30.175 --> 00:31:32.290
but high accuracy location.

00:31:32.290 --> 00:31:35.072
And this is something that
can be done easily using

00:31:35.072 --> 00:31:36.280
the location settings dialog.

00:31:36.280 --> 00:31:38.290
You can prompt the
user to turn it on.

00:31:38.290 --> 00:31:41.350
So that's recommendation
number one.

00:31:41.350 --> 00:31:43.470
Number two-- if
you're a developer who

00:31:43.470 --> 00:31:47.950
is working with a
store owner and you

00:31:47.950 --> 00:31:51.270
want to build an app, say, that
uses getCurrentPlace and wants

00:31:51.270 --> 00:31:54.100
to verify it's a particular
store or something like that,

00:31:54.100 --> 00:31:56.620
make sure that the data about
that store or that place

00:31:56.620 --> 00:31:58.240
is accurate.

00:31:58.240 --> 00:32:00.140
Again, this should
not be a surprise.

00:32:00.140 --> 00:32:04.330
We are making use of
all of this place data

00:32:04.330 --> 00:32:05.870
in the machine learning system.

00:32:05.870 --> 00:32:08.160
Obviously if the
data is incorrect

00:32:08.160 --> 00:32:11.260
the system also can likely
make incorrect predictions.

00:32:11.260 --> 00:32:12.690
So make sure the
data is accurate.

00:32:12.690 --> 00:32:14.560
And this, for store
owners especially,

00:32:14.560 --> 00:32:21.650
is very easy to do using the
Google My Business interface.

00:32:21.650 --> 00:32:22.150
OK.

00:32:22.150 --> 00:32:27.940
So that actually concludes my
deep dive into native APIs.

00:32:27.940 --> 00:32:30.310
At this point, I want to
hand it back to Florian

00:32:30.310 --> 00:32:34.280
to summarize this talk and leave
you with a few key takeaways.

00:32:34.280 --> 00:32:36.290
Thank you.

00:32:36.290 --> 00:32:37.070
[APPLAUSE]

00:32:37.070 --> 00:32:38.278
FLORIAN BERTELE: Thanks Ravi.

00:32:38.278 --> 00:32:40.010
RAVI PALANKI: Thank you.

00:32:40.010 --> 00:32:41.940
FLORIAN BERTELE:
Thank you, Ravi.

00:32:41.940 --> 00:32:44.900
I hope you really
enjoyed this kind of look

00:32:44.900 --> 00:32:47.879
behind the scenes of what
goes into getCurrentPlace

00:32:47.879 --> 00:32:49.920
and what goes into this
kind of place likelihood.

00:32:49.920 --> 00:32:51.503
To me personally
it's very fascinating

00:32:51.503 --> 00:32:54.550
how you can take a very
simple question like,

00:32:54.550 --> 00:32:56.030
where am I right now?

00:32:56.030 --> 00:32:58.400
And we answer that
with a lot of stuff.

00:32:58.400 --> 00:33:01.000
We answer it with a lot of
data, with machine learning,

00:33:01.000 --> 00:33:03.500
and with sensor data, in order
to give you a really accurate

00:33:03.500 --> 00:33:07.040
result. So that's really cool

00:33:07.040 --> 00:33:07.590
Great.

00:33:07.590 --> 00:33:09.235
So let me round up this talk.

00:33:09.235 --> 00:33:11.610
So you're going to go through
a lot of different sessions

00:33:11.610 --> 00:33:12.110
today.

00:33:12.110 --> 00:33:14.310
And you're going to hear
about many other APIs.

00:33:14.310 --> 00:33:17.540
I want you to take away at least
three things from this session.

00:33:17.540 --> 00:33:20.400
Number one is keep in mind
that places in the world

00:33:20.400 --> 00:33:21.780
are semantic.

00:33:21.780 --> 00:33:24.610
Take advantage of the semantic
nature and all of these things

00:33:24.610 --> 00:33:27.030
in your app to make your
app more user-friendly,

00:33:27.030 --> 00:33:30.600
give your users more context,
and help them make decisions.

00:33:30.600 --> 00:33:34.810
And number two is, if you
face these kind of questions--

00:33:34.810 --> 00:33:36.660
where am I right now?

00:33:36.660 --> 00:33:38.645
Tell me more information
about where I am.

00:33:38.645 --> 00:33:39.520
Give me more details.

00:33:39.520 --> 00:33:40.145
Give me colors.

00:33:40.145 --> 00:33:41.730
Give me pictures.

00:33:41.730 --> 00:33:44.570
That's when the
Places API helps you.

00:33:44.570 --> 00:33:48.070
And number three is what
Ravi has illustrated really

00:33:48.070 --> 00:33:48.890
beautifully.

00:33:48.890 --> 00:33:50.630
If you're building
an app, really

00:33:50.630 --> 00:33:52.980
consider using the
mobile native APIs.

00:33:52.980 --> 00:33:55.670
Because it's going to make
you as a developer happy.

00:33:55.670 --> 00:33:57.970
You save time writing codes.

00:33:57.970 --> 00:34:00.170
The battery is
going to be happier.

00:34:00.170 --> 00:34:01.670
That makes happier users.

00:34:01.670 --> 00:34:06.660
And at the end, you even
get more accurate results.

00:34:06.660 --> 00:34:07.310
Great.

00:34:07.310 --> 00:34:09.460
So what you should
do next-- you can

00:34:09.460 --> 00:34:12.380
get started coding straight
away with the Places API.

00:34:12.380 --> 00:34:15.716
We have two amazing Codelabs
for iOS and Android,

00:34:15.716 --> 00:34:17.090
which help you
get started so you

00:34:17.090 --> 00:34:18.580
can write your
first lines of code

00:34:18.580 --> 00:34:20.681
and try out what it's like.

00:34:20.681 --> 00:34:23.139
If you have questions, we're
going to be after this session

00:34:23.139 --> 00:34:27.020
straight out there and happy
to have a chat with you.

00:34:27.020 --> 00:34:29.110
And we also have a Space
on spaces.google.com.

00:34:29.110 --> 00:34:33.239
So if you have later a question
and you just want to type,

00:34:33.239 --> 00:34:34.699
we're happy to answer that.

00:34:34.699 --> 00:34:37.461
And of course, we have our
developer documentation.

00:34:37.461 --> 00:34:37.960
Great.

00:34:37.960 --> 00:34:39.793
So this is how you can
understand your place

00:34:39.793 --> 00:34:40.460
in this world.

00:34:40.460 --> 00:34:41.860
I hope you have a great
day at Google I/O.

00:34:41.860 --> 00:34:43.984
And thank you very much
for attending this session.

00:34:43.984 --> 00:34:46.350
[MUSIC PLAYING]

