WEBVTT
Kind: captions
Language: en

00:00:03.370 --> 00:00:06.099 align:start position:0%
 
many<00:00:04.370><c> apps</c><00:00:04.609><c> work</c><00:00:04.970><c> with</c><00:00:05.149><c> large</c><00:00:05.540><c> sets</c><00:00:05.930><c> of</c><00:00:06.050><c> data</c>

00:00:06.099 --> 00:00:06.109 align:start position:0%
many apps work with large sets of data
 

00:00:06.109 --> 00:00:08.320 align:start position:0%
many apps work with large sets of data
but<00:00:06.740><c> only</c><00:00:07.130><c> need</c><00:00:07.310><c> to</c><00:00:07.460><c> load</c><00:00:07.700><c> and</c><00:00:07.910><c> display</c><00:00:08.299><c> a</c>

00:00:08.320 --> 00:00:08.330 align:start position:0%
but only need to load and display a
 

00:00:08.330 --> 00:00:11.080 align:start position:0%
but only need to load and display a
small<00:00:08.719><c> portion</c><00:00:09.200><c> at</c><00:00:09.530><c> any</c><00:00:09.920><c> given</c><00:00:10.100><c> time</c><00:00:10.400><c> if</c>

00:00:11.080 --> 00:00:11.090 align:start position:0%
small portion at any given time if
 

00:00:11.090 --> 00:00:12.580 align:start position:0%
small portion at any given time if
you're<00:00:11.330><c> not</c><00:00:11.480><c> careful</c><00:00:11.780><c> you</c><00:00:12.139><c> might</c><00:00:12.289><c> request</c>

00:00:12.580 --> 00:00:12.590 align:start position:0%
you're not careful you might request
 

00:00:12.590 --> 00:00:14.920 align:start position:0%
you're not careful you might request
data<00:00:12.830><c> you</c><00:00:13.100><c> don't</c><00:00:13.549><c> actually</c><00:00:13.789><c> need</c><00:00:14.150><c> wasting</c>

00:00:14.920 --> 00:00:14.930 align:start position:0%
data you don't actually need wasting
 

00:00:14.930 --> 00:00:17.590 align:start position:0%
data you don't actually need wasting
your<00:00:15.080><c> users</c><00:00:15.379><c> battery</c><00:00:15.590><c> and</c><00:00:15.889><c> bandwidth</c><00:00:16.580><c> if</c><00:00:17.390><c> the</c>

00:00:17.590 --> 00:00:17.600 align:start position:0%
your users battery and bandwidth if the
 

00:00:17.600 --> 00:00:19.150 align:start position:0%
your users battery and bandwidth if the
data<00:00:17.779><c> you're</c><00:00:18.050><c> displaying</c><00:00:18.500><c> is</c><00:00:18.650><c> constantly</c>

00:00:19.150 --> 00:00:19.160 align:start position:0%
data you're displaying is constantly
 

00:00:19.160 --> 00:00:21.130 align:start position:0%
data you're displaying is constantly
updating<00:00:19.730><c> it</c><00:00:20.180><c> can</c><00:00:20.360><c> be</c><00:00:20.480><c> difficult</c><00:00:20.690><c> to</c><00:00:21.020><c> keep</c>

00:00:21.130 --> 00:00:21.140 align:start position:0%
updating it can be difficult to keep
 

00:00:21.140 --> 00:00:23.410 align:start position:0%
updating it can be difficult to keep
your<00:00:21.380><c> UI</c><00:00:21.530><c> in</c><00:00:21.800><c> sync</c><00:00:22.130><c> and</c><00:00:22.280><c> still</c><00:00:22.790><c> send</c><00:00:23.090><c> only</c><00:00:23.270><c> a</c>

00:00:23.410 --> 00:00:23.420 align:start position:0%
your UI in sync and still send only a
 

00:00:23.420 --> 00:00:25.300 align:start position:0%
your UI in sync and still send only a
small<00:00:23.810><c> amount</c><00:00:23.990><c> of</c><00:00:24.110><c> information</c><00:00:24.290><c> over</c><00:00:25.220><c> the</c>

00:00:25.300 --> 00:00:25.310 align:start position:0%
small amount of information over the
 

00:00:25.310 --> 00:00:27.940 align:start position:0%
small amount of information over the
network<00:00:25.630><c> the</c><00:00:26.630><c> paging</c><00:00:27.020><c> library</c><00:00:27.380><c> part</c><00:00:27.650><c> of</c><00:00:27.740><c> just</c>

00:00:27.940 --> 00:00:27.950 align:start position:0%
network the paging library part of just
 

00:00:27.950 --> 00:00:30.190 align:start position:0%
network the paging library part of just
packed<00:00:28.130><c> tackles</c><00:00:28.880><c> these</c><00:00:29.060><c> problems</c><00:00:29.570><c> enabling</c>

00:00:30.190 --> 00:00:30.200 align:start position:0%
packed tackles these problems enabling
 

00:00:30.200 --> 00:00:31.630 align:start position:0%
packed tackles these problems enabling
you<00:00:30.320><c> to</c><00:00:30.350><c> load</c><00:00:30.619><c> data</c><00:00:30.800><c> gradually</c><00:00:31.460><c> and</c>

00:00:31.630 --> 00:00:31.640 align:start position:0%
you to load data gradually and
 

00:00:31.640 --> 00:00:34.299 align:start position:0%
you to load data gradually and
gracefully<00:00:32.509><c> the</c><00:00:33.320><c> library</c><00:00:33.649><c> supports</c><00:00:34.100><c> both</c>

00:00:34.299 --> 00:00:34.309 align:start position:0%
gracefully the library supports both
 

00:00:34.309 --> 00:00:37.510 align:start position:0%
gracefully the library supports both
large<00:00:35.090><c> but</c><00:00:35.420><c> bounded</c><00:00:35.900><c> lists</c><00:00:36.230><c> as</c><00:00:36.620><c> well</c><00:00:36.860><c> as</c><00:00:36.980><c> lists</c>

00:00:37.510 --> 00:00:37.520 align:start position:0%
large but bounded lists as well as lists
 

00:00:37.520 --> 00:00:40.030 align:start position:0%
large but bounded lists as well as lists
of<00:00:37.670><c> unbounded</c><00:00:38.420><c> sites</c><00:00:38.720><c> such</c><00:00:39.020><c> as</c><00:00:39.050><c> continuously</c>

00:00:40.030 --> 00:00:40.040 align:start position:0%
of unbounded sites such as continuously
 

00:00:40.040 --> 00:00:43.000 align:start position:0%
of unbounded sites such as continuously
updating<00:00:40.640><c> feeds</c><00:00:41.140><c> it</c><00:00:42.140><c> offers</c><00:00:42.500><c> integration</c>

00:00:43.000 --> 00:00:43.010 align:start position:0%
updating feeds it offers integration
 

00:00:43.010 --> 00:00:44.830 align:start position:0%
updating feeds it offers integration
with<00:00:43.160><c> recyclerview</c><00:00:43.790><c> which</c><00:00:44.120><c> is</c><00:00:44.300><c> typically</c>

00:00:44.830 --> 00:00:44.840 align:start position:0%
with recyclerview which is typically
 

00:00:44.840 --> 00:00:46.780 align:start position:0%
with recyclerview which is typically
used<00:00:45.079><c> to</c><00:00:45.200><c> display</c><00:00:45.530><c> large</c><00:00:45.890><c> data</c><00:00:46.220><c> sets</c><00:00:46.550><c> and</c>

00:00:46.780 --> 00:00:46.790 align:start position:0%
used to display large data sets and
 

00:00:46.790 --> 00:00:49.450 align:start position:0%
used to display large data sets and
place<00:00:47.239><c> nicely</c><00:00:47.600><c> with</c><00:00:47.930><c> either</c><00:00:48.110><c> live</c><00:00:48.500><c> data</c><00:00:48.710><c> or</c><00:00:49.160><c> rx</c>

00:00:49.450 --> 00:00:49.460 align:start position:0%
place nicely with either live data or rx
 

00:00:49.460 --> 00:00:52.290 align:start position:0%
place nicely with either live data or rx
Java<00:00:49.730><c> for</c><00:00:50.420><c> observing</c><00:00:50.780><c> new</c><00:00:51.140><c> data</c><00:00:51.380><c> in</c><00:00:51.680><c> your</c><00:00:51.829><c> UI</c>

00:00:52.290 --> 00:00:52.300 align:start position:0%
Java for observing new data in your UI
 

00:00:52.300 --> 00:00:54.760 align:start position:0%
Java for observing new data in your UI
the<00:00:53.300><c> painting</c><00:00:53.720><c> library</c><00:00:53.989><c> is</c><00:00:54.140><c> based</c><00:00:54.469><c> on</c><00:00:54.649><c> the</c>

00:00:54.760 --> 00:00:54.770 align:start position:0%
the painting library is based on the
 

00:00:54.770 --> 00:00:56.950 align:start position:0%
the painting library is based on the
idea<00:00:55.010><c> of</c><00:00:55.100><c> sending</c><00:00:55.489><c> lists</c><00:00:55.910><c> to</c><00:00:56.149><c> the</c><00:00:56.270><c> UI</c><00:00:56.480><c> with</c><00:00:56.930><c> a</c>

00:00:56.950 --> 00:00:56.960 align:start position:0%
idea of sending lists to the UI with a
 

00:00:56.960 --> 00:00:59.560 align:start position:0%
idea of sending lists to the UI with a
live<00:00:57.350><c> data</c><00:00:57.710><c> of</c><00:00:58.040><c> a</c><00:00:58.130><c> list</c><00:00:58.370><c> that</c><00:00:58.760><c> is</c><00:00:58.910><c> observed</c><00:00:59.420><c> by</c>

00:00:59.560 --> 00:00:59.570 align:start position:0%
live data of a list that is observed by
 

00:00:59.570 --> 00:01:01.930 align:start position:0%
live data of a list that is observed by
the<00:00:59.660><c> recyclerview</c><00:01:00.230><c> adapter</c><00:01:00.770><c> it</c><00:01:01.309><c> then</c><00:01:01.520><c> builds</c>

00:01:01.930 --> 00:01:01.940 align:start position:0%
the recyclerview adapter it then builds
 

00:01:01.940 --> 00:01:04.420 align:start position:0%
the recyclerview adapter it then builds
up<00:01:02.030><c> on</c><00:01:02.149><c> this</c><00:01:02.329><c> idea</c><00:01:02.719><c> by</c><00:01:03.050><c> adding</c><00:01:03.379><c> paging</c><00:01:03.920><c> so</c><00:01:04.369><c> you</c>

00:01:04.420 --> 00:01:04.430 align:start position:0%
up on this idea by adding paging so you
 

00:01:04.430 --> 00:01:07.480 align:start position:0%
up on this idea by adding paging so you
can<00:01:04.670><c> load</c><00:01:04.909><c> content</c><00:01:05.630><c> gradually</c><00:01:06.229><c> let's</c><00:01:07.159><c> go</c><00:01:07.340><c> over</c>

00:01:07.480 --> 00:01:07.490 align:start position:0%
can load content gradually let's go over
 

00:01:07.490 --> 00:01:09.039 align:start position:0%
can load content gradually let's go over
the<00:01:07.639><c> main</c><00:01:07.850><c> components</c><00:01:08.359><c> of</c><00:01:08.420><c> the</c><00:01:08.539><c> library</c><00:01:08.869><c> and</c>

00:01:09.039 --> 00:01:09.049 align:start position:0%
the main components of the library and
 

00:01:09.049 --> 00:01:10.779 align:start position:0%
the main components of the library and
see<00:01:09.289><c> how</c><00:01:09.469><c> they</c><00:01:09.770><c> fit</c><00:01:10.100><c> in</c><00:01:10.280><c> your</c><00:01:10.340><c> apps</c>

00:01:10.779 --> 00:01:10.789 align:start position:0%
see how they fit in your apps
 

00:01:10.789 --> 00:01:14.260 align:start position:0%
see how they fit in your apps
architecture<00:01:12.280><c> the</c><00:01:13.280><c> core</c><00:01:13.579><c> elements</c><00:01:14.090><c> in</c><00:01:14.179><c> the</c>

00:01:14.260 --> 00:01:14.270 align:start position:0%
architecture the core elements in the
 

00:01:14.270 --> 00:01:16.809 align:start position:0%
architecture the core elements in the
paging<00:01:14.630><c> library</c><00:01:14.929><c> are</c><00:01:15.109><c> the</c><00:01:15.380><c> page</c><00:01:15.740><c> list</c><00:01:16.100><c> and</c><00:01:16.340><c> the</c>

00:01:16.809 --> 00:01:16.819 align:start position:0%
paging library are the page list and the
 

00:01:16.819 --> 00:01:19.599 align:start position:0%
paging library are the page list and the
data<00:01:17.060><c> source</c><00:01:17.450><c> a</c><00:01:17.829><c> page</c><00:01:18.829><c> list</c><00:01:19.100><c> is</c><00:01:19.249><c> a</c><00:01:19.310><c> collection</c>

00:01:19.599 --> 00:01:19.609 align:start position:0%
data source a page list is a collection
 

00:01:19.609 --> 00:01:22.889 align:start position:0%
data source a page list is a collection
that<00:01:20.149><c> loads</c><00:01:20.389><c> data</c><00:01:20.659><c> in</c><00:01:20.959><c> chunks</c><00:01:21.529><c> known</c><00:01:22.219><c> as</c><00:01:22.369><c> pages</c>

00:01:22.889 --> 00:01:22.899 align:start position:0%
that loads data in chunks known as pages
 

00:01:22.899 --> 00:01:26.319 align:start position:0%
that loads data in chunks known as pages
asynchronously<00:01:23.899><c> a</c><00:01:24.249><c> data</c><00:01:25.249><c> source</c><00:01:25.579><c> is</c><00:01:25.789><c> the</c><00:01:26.090><c> base</c>

00:01:26.319 --> 00:01:26.329 align:start position:0%
asynchronously a data source is the base
 

00:01:26.329 --> 00:01:29.139 align:start position:0%
asynchronously a data source is the base
class<00:01:26.689><c> for</c><00:01:27.049><c> loading</c><00:01:27.229><c> snapshots</c><00:01:27.950><c> of</c><00:01:28.100><c> data</c><00:01:28.340><c> into</c>

00:01:29.139 --> 00:01:29.149 align:start position:0%
class for loading snapshots of data into
 

00:01:29.149 --> 00:01:32.109 align:start position:0%
class for loading snapshots of data into
a<00:01:29.209><c> given</c><00:01:29.359><c> page</c><00:01:29.779><c> list</c><00:01:30.249><c> data</c><00:01:31.249><c> sources</c><00:01:31.670><c> can</c><00:01:31.999><c> be</c>

00:01:32.109 --> 00:01:32.119 align:start position:0%
a given page list data sources can be
 

00:01:32.119 --> 00:01:34.480 align:start position:0%
a given page list data sources can be
backed<00:01:32.359><c> by</c><00:01:32.539><c> the</c><00:01:32.599><c> network</c><00:01:33.079><c> database</c><00:01:33.590><c> file</c><00:01:34.039><c> orb</c>

00:01:34.480 --> 00:01:34.490 align:start position:0%
backed by the network database file orb
 

00:01:34.490 --> 00:01:36.569 align:start position:0%
backed by the network database file orb
anywhere<00:01:35.029><c> you</c><00:01:35.209><c> want</c><00:01:35.450><c> to</c><00:01:35.569><c> retrieve</c><00:01:35.779><c> data</c><00:01:36.049><c> from</c>

00:01:36.569 --> 00:01:36.579 align:start position:0%
anywhere you want to retrieve data from
 

00:01:36.579 --> 00:01:39.370 align:start position:0%
anywhere you want to retrieve data from
you<00:01:37.579><c> create</c><00:01:37.880><c> a</c><00:01:37.909><c> data</c><00:01:38.270><c> source</c><00:01:38.599><c> using</c><00:01:38.869><c> a</c><00:01:39.109><c> data</c>

00:01:39.370 --> 00:01:39.380 align:start position:0%
you create a data source using a data
 

00:01:39.380 --> 00:01:42.399 align:start position:0%
you create a data source using a data
source<00:01:39.740><c> Factory</c><00:01:40.219><c> object</c><00:01:40.749><c> the</c><00:01:41.749><c> paging</c><00:01:42.109><c> library</c>

00:01:42.399 --> 00:01:42.409 align:start position:0%
source Factory object the paging library
 

00:01:42.409 --> 00:01:44.739 align:start position:0%
source Factory object the paging library
also<00:01:42.619><c> provides</c><00:01:42.770><c> a</c><00:01:43.249><c> page</c><00:01:43.549><c> list</c><00:01:43.909><c> adapter</c><00:01:44.539><c> which</c>

00:01:44.739 --> 00:01:44.749 align:start position:0%
also provides a page list adapter which
 

00:01:44.749 --> 00:01:46.899 align:start position:0%
also provides a page list adapter which
helps<00:01:45.049><c> you</c><00:01:45.139><c> present</c><00:01:45.590><c> data</c><00:01:45.799><c> from</c><00:01:46.249><c> page</c><00:01:46.490><c> lists</c>

00:01:46.899 --> 00:01:46.909 align:start position:0%
helps you present data from page lists
 

00:01:46.909 --> 00:01:50.199 align:start position:0%
helps you present data from page lists
in<00:01:47.359><c> a</c><00:01:47.539><c> recycler</c><00:01:48.020><c> view</c><00:01:48.219><c> the</c><00:01:49.219><c> pages</c><00:01:49.490><c> adapter</c><00:01:50.060><c> is</c>

00:01:50.199 --> 00:01:50.209 align:start position:0%
in a recycler view the pages adapter is
 

00:01:50.209 --> 00:01:52.239 align:start position:0%
in a recycler view the pages adapter is
notified<00:01:50.719><c> when</c><00:01:50.929><c> pages</c><00:01:51.289><c> are</c><00:01:51.409><c> loaded</c><00:01:51.740><c> and</c><00:01:51.889><c> it</c>

00:01:52.239 --> 00:01:52.249 align:start position:0%
notified when pages are loaded and it
 

00:01:52.249 --> 00:01:54.459 align:start position:0%
notified when pages are loaded and it
uses<00:01:52.459><c> the</c><00:01:52.849><c> few</c><00:01:52.999><c> tail</c><00:01:53.240><c> to</c><00:01:53.450><c> compute</c><00:01:53.810><c> fine-grain</c>

00:01:54.459 --> 00:01:54.469 align:start position:0%
uses the few tail to compute fine-grain
 

00:01:54.469 --> 00:01:57.730 align:start position:0%
uses the few tail to compute fine-grain
updates<00:01:54.950><c> as</c><00:01:55.099><c> new</c><00:01:55.490><c> data</c><00:01:55.669><c> is</c><00:01:55.969><c> received</c><00:01:56.740><c> the</c>

00:01:57.730 --> 00:01:57.740 align:start position:0%
updates as new data is received the
 

00:01:57.740 --> 00:01:59.830 align:start position:0%
updates as new data is received the
paging<00:01:58.130><c> library</c><00:01:58.429><c> provides</c><00:01:58.849><c> the</c><00:01:59.119><c> live</c><00:01:59.450><c> page</c>

00:01:59.830 --> 00:01:59.840 align:start position:0%
paging library provides the live page
 

00:01:59.840 --> 00:02:01.989 align:start position:0%
paging library provides the live page
list<00:02:00.169><c> builder</c><00:02:00.560><c> class</c><00:02:00.799><c> for</c><00:02:01.340><c> getting</c><00:02:01.609><c> a</c><00:02:01.700><c> live</c>

00:02:01.989 --> 00:02:01.999 align:start position:0%
list builder class for getting a live
 

00:02:01.999 --> 00:02:05.499 align:start position:0%
list builder class for getting a live
data<00:02:02.270><c> object</c><00:02:02.810><c> of</c><00:02:03.020><c> type</c><00:02:03.380><c> page</c><00:02:03.799><c> list</c><00:02:04.359><c> to</c><00:02:05.359><c> create</c>

00:02:05.499 --> 00:02:05.509 align:start position:0%
data object of type page list to create
 

00:02:05.509 --> 00:02:08.080 align:start position:0%
data object of type page list to create
a<00:02:05.630><c> live</c><00:02:05.959><c> pages</c><00:02:06.469><c> builder</c><00:02:06.889><c> pass</c><00:02:07.310><c> in</c><00:02:07.579><c> the</c><00:02:07.849><c> data</c>

00:02:08.080 --> 00:02:08.090 align:start position:0%
a live pages builder pass in the data
 

00:02:08.090 --> 00:02:10.389 align:start position:0%
a live pages builder pass in the data
source<00:02:08.479><c> Factory</c><00:02:08.899><c> object</c><00:02:09.349><c> and</c><00:02:09.560><c> a</c><00:02:10.069><c> paging</c>

00:02:10.389 --> 00:02:10.399 align:start position:0%
source Factory object and a paging
 

00:02:10.399 --> 00:02:12.700 align:start position:0%
source Factory object and a paging
configuration<00:02:11.120><c> if</c><00:02:11.300><c> you</c><00:02:12.080><c> prefer</c><00:02:12.380><c> working</c><00:02:12.500><c> with</c>

00:02:12.700 --> 00:02:12.710 align:start position:0%
configuration if you prefer working with
 

00:02:12.710 --> 00:02:15.220 align:start position:0%
configuration if you prefer working with
our<00:02:12.920><c> Java</c><00:02:13.310><c> instead</c><00:02:13.820><c> of</c><00:02:13.940><c> live</c><00:02:14.120><c> data</c><00:02:14.300><c> then</c><00:02:14.960><c> just</c>

00:02:15.220 --> 00:02:15.230 align:start position:0%
our Java instead of live data then just
 

00:02:15.230 --> 00:02:15.949 align:start position:0%
our Java instead of live data then just
use<00:02:15.410><c> the</c>

00:02:15.949 --> 00:02:15.959 align:start position:0%
use the
 

00:02:15.959 --> 00:02:18.410 align:start position:0%
use the
page<00:02:16.379><c> two</c><00:02:16.650><c> this</c><00:02:16.769><c> builder</c><00:02:17.250><c> it's</c><00:02:17.819><c> constructed</c>

00:02:18.410 --> 00:02:18.420 align:start position:0%
page two this builder it's constructed
 

00:02:18.420 --> 00:02:20.990 align:start position:0%
page two this builder it's constructed
similarly<00:02:18.810><c> to</c><00:02:19.079><c> life</c><00:02:19.469><c> page</c><00:02:19.799><c> list</c><00:02:20.069><c> builder</c><00:02:20.400><c> but</c>

00:02:20.990 --> 00:02:21.000 align:start position:0%
similarly to life page list builder but
 

00:02:21.000 --> 00:02:22.940 align:start position:0%
similarly to life page list builder but
instead<00:02:21.420><c> of</c><00:02:21.480><c> a</c><00:02:21.659><c> live</c><00:02:21.870><c> data</c><00:02:22.109><c> object</c><00:02:22.560><c> it</c><00:02:22.739><c> will</c>

00:02:22.940 --> 00:02:22.950 align:start position:0%
instead of a live data object it will
 

00:02:22.950 --> 00:02:24.830 align:start position:0%
instead of a live data object it will
return<00:02:23.189><c> an</c><00:02:23.340><c> observable</c><00:02:23.730><c> or</c><00:02:24.030><c> flowable</c>

00:02:24.830 --> 00:02:24.840 align:start position:0%
return an observable or flowable
 

00:02:24.840 --> 00:02:27.410 align:start position:0%
return an observable or flowable
depending<00:02:25.439><c> on</c><00:02:25.530><c> what</c><00:02:25.650><c> you</c><00:02:25.769><c> need</c><00:02:25.920><c> let's</c><00:02:26.390><c> take</c><00:02:27.390><c> a</c>

00:02:27.410 --> 00:02:27.420 align:start position:0%
depending on what you need let's take a
 

00:02:27.420 --> 00:02:29.240 align:start position:0%
depending on what you need let's take a
look<00:02:27.659><c> at</c><00:02:27.719><c> some</c><00:02:27.900><c> common</c><00:02:28.079><c> scenarios</c><00:02:28.709><c> uploading</c>

00:02:29.240 --> 00:02:29.250 align:start position:0%
look at some common scenarios uploading
 

00:02:29.250 --> 00:02:31.910 align:start position:0%
look at some common scenarios uploading
data<00:02:29.430><c> from</c><00:02:29.879><c> a</c><00:02:29.969><c> database</c><00:02:30.299><c> or</c><00:02:30.599><c> a</c><00:02:30.689><c> retrofit</c><00:02:31.680><c> based</c>

00:02:31.910 --> 00:02:31.920 align:start position:0%
data from a database or a retrofit based
 

00:02:31.920 --> 00:02:33.890 align:start position:0%
data from a database or a retrofit based
network<00:02:32.400><c> source</c><00:02:32.639><c> and</c><00:02:32.879><c> see</c><00:02:33.329><c> how</c><00:02:33.480><c> the</c><00:02:33.540><c> paging</c>

00:02:33.890 --> 00:02:33.900 align:start position:0%
network source and see how the paging
 

00:02:33.900 --> 00:02:37.309 align:start position:0%
network source and see how the paging
library<00:02:34.230><c> helps</c><00:02:34.879><c> so</c><00:02:35.879><c> first</c><00:02:36.180><c> case</c><00:02:36.420><c> let's</c><00:02:37.200><c> say</c>

00:02:37.309 --> 00:02:37.319 align:start position:0%
library helps so first case let's say
 

00:02:37.319 --> 00:02:39.319 align:start position:0%
library helps so first case let's say
that<00:02:37.469><c> the</c><00:02:37.650><c> database</c><00:02:38.250><c> is</c><00:02:38.549><c> your</c><00:02:38.760><c> data</c><00:02:38.969><c> source</c>

00:02:39.319 --> 00:02:39.329 align:start position:0%
that the database is your data source
 

00:02:39.329 --> 00:02:41.720 align:start position:0%
that the database is your data source
the<00:02:39.629><c> room</c><00:02:40.439><c> persistence</c><00:02:40.980><c> library</c><00:02:41.310><c> provides</c>

00:02:41.720 --> 00:02:41.730 align:start position:0%
the room persistence library provides
 

00:02:41.730 --> 00:02:43.910 align:start position:0%
the room persistence library provides
native<00:02:42.239><c> support</c><00:02:42.450><c> for</c><00:02:42.689><c> paging</c><00:02:43.290><c> library</c><00:02:43.709><c> data</c>

00:02:43.910 --> 00:02:43.920 align:start position:0%
native support for paging library data
 

00:02:43.920 --> 00:02:46.879 align:start position:0%
native support for paging library data
sources<00:02:44.400><c> for</c><00:02:45.329><c> a</c><00:02:45.389><c> given</c><00:02:45.629><c> query</c><00:02:45.870><c> room</c><00:02:46.469><c> allows</c>

00:02:46.879 --> 00:02:46.889 align:start position:0%
sources for a given query room allows
 

00:02:46.889 --> 00:02:48.740 align:start position:0%
sources for a given query room allows
you<00:02:47.010><c> to</c><00:02:47.129><c> return</c><00:02:47.370><c> any</c><00:02:47.609><c> data</c><00:02:47.879><c> source</c><00:02:48.209><c> factory</c>

00:02:48.740 --> 00:02:48.750 align:start position:0%
you to return any data source factory
 

00:02:48.750 --> 00:02:50.780 align:start position:0%
you to return any data source factory
from<00:02:49.079><c> the</c><00:02:49.230><c> doll</c><00:02:49.470><c> and</c><00:02:49.739><c> handles</c><00:02:50.700><c> the</c>

00:02:50.780 --> 00:02:50.790 align:start position:0%
from the doll and handles the
 

00:02:50.790 --> 00:02:52.369 align:start position:0%
from the doll and handles the
implementation<00:02:51.359><c> of</c><00:02:51.419><c> the</c><00:02:51.540><c> data</c><00:02:51.720><c> source</c><00:02:52.049><c> for</c>

00:02:52.369 --> 00:02:52.379 align:start position:0%
implementation of the data source for
 

00:02:52.379 --> 00:02:55.190 align:start position:0%
implementation of the data source for
you<00:02:52.639><c> second</c><00:02:53.639><c> case</c><00:02:53.790><c> let's</c><00:02:54.659><c> say</c><00:02:54.840><c> that</c><00:02:55.019><c> the</c>

00:02:55.190 --> 00:02:55.200 align:start position:0%
you second case let's say that the
 

00:02:55.200 --> 00:02:57.830 align:start position:0%
you second case let's say that the
database<00:02:55.739><c> is</c><00:02:55.919><c> a</c><00:02:55.980><c> cache</c><00:02:56.459><c> for</c><00:02:56.939><c> data</c><00:02:57.389><c> loaded</c><00:02:57.689><c> from</c>

00:02:57.830 --> 00:02:57.840 align:start position:0%
database is a cache for data loaded from
 

00:02:57.840 --> 00:03:00.409 align:start position:0%
database is a cache for data loaded from
network<00:02:58.230><c> so</c><00:02:59.040><c> here</c><00:02:59.370><c> you</c><00:02:59.579><c> would</c><00:02:59.730><c> still</c><00:03:00.120><c> return</c><00:03:00.389><c> a</c>

00:03:00.409 --> 00:03:00.419 align:start position:0%
network so here you would still return a
 

00:03:00.419 --> 00:03:02.569 align:start position:0%
network so here you would still return a
data<00:03:00.659><c> source</c><00:03:00.930><c> factory</c><00:03:01.349><c> from</c><00:03:01.590><c> the</c><00:03:01.709><c> DAO</c><00:03:01.889><c> but</c><00:03:02.489><c> you</c>

00:03:02.569 --> 00:03:02.579 align:start position:0%
data source factory from the DAO but you
 

00:03:02.579 --> 00:03:04.069 align:start position:0%
data source factory from the DAO but you
would<00:03:02.700><c> also</c><00:03:02.939><c> need</c><00:03:03.180><c> to</c><00:03:03.239><c> implement</c><00:03:03.569><c> another</c>

00:03:04.069 --> 00:03:04.079 align:start position:0%
would also need to implement another
 

00:03:04.079 --> 00:03:06.890 align:start position:0%
would also need to implement another
paging<00:03:04.590><c> component</c><00:03:05.189><c> a</c><00:03:05.340><c> boundary</c><00:03:06.269><c> call</c><00:03:06.659><c> back</c>

00:03:06.890 --> 00:03:06.900 align:start position:0%
paging component a boundary call back
 

00:03:06.900 --> 00:03:09.500 align:start position:0%
paging component a boundary call back
the<00:03:07.829><c> battery</c><00:03:08.040><c> callback</c><00:03:08.609><c> loads</c><00:03:08.849><c> more</c><00:03:09.209><c> data</c>

00:03:09.500 --> 00:03:09.510 align:start position:0%
the battery callback loads more data
 

00:03:09.510 --> 00:03:11.479 align:start position:0%
the battery callback loads more data
when<00:03:09.840><c> the</c><00:03:09.930><c> user</c><00:03:10.109><c> gets</c><00:03:10.379><c> near</c><00:03:10.859><c> the</c><00:03:11.099><c> end</c><00:03:11.219><c> of</c><00:03:11.370><c> the</c>

00:03:11.479 --> 00:03:11.489 align:start position:0%
when the user gets near the end of the
 

00:03:11.489 --> 00:03:14.149 align:start position:0%
when the user gets near the end of the
data<00:03:11.669><c> that's</c><00:03:11.909><c> in</c><00:03:12.120><c> the</c><00:03:12.329><c> local</c><00:03:12.629><c> cache</c><00:03:13.040><c> after</c><00:03:14.040><c> the</c>

00:03:14.149 --> 00:03:14.159 align:start position:0%
data that's in the local cache after the
 

00:03:14.159 --> 00:03:15.920 align:start position:0%
data that's in the local cache after the
data<00:03:14.340><c> is</c><00:03:14.489><c> asserted</c><00:03:14.969><c> the</c><00:03:15.329><c> paging</c><00:03:15.659><c> library</c>

00:03:15.920 --> 00:03:15.930 align:start position:0%
data is asserted the paging library
 

00:03:15.930 --> 00:03:18.679 align:start position:0%
data is asserted the paging library
automatically<00:03:16.590><c> updates</c><00:03:17.010><c> the</c><00:03:17.159><c> UI</c><00:03:17.340><c> but</c><00:03:18.180><c> don't</c>

00:03:18.679 --> 00:03:18.689 align:start position:0%
automatically updates the UI but don't
 

00:03:18.689 --> 00:03:20.240 align:start position:0%
automatically updates the UI but don't
forget<00:03:18.840><c> to</c><00:03:19.109><c> associate</c><00:03:19.500><c> the</c><00:03:19.680><c> boundary</c><00:03:20.010><c> call</c>

00:03:20.240 --> 00:03:20.250 align:start position:0%
forget to associate the boundary call
 

00:03:20.250 --> 00:03:22.159 align:start position:0%
forget to associate the boundary call
back<00:03:20.430><c> with</c><00:03:20.849><c> a</c><00:03:20.879><c> live</c><00:03:21.209><c> page</c><00:03:21.569><c> this</c><00:03:21.780><c> builder</c><00:03:22.049><c> you</c>

00:03:22.159 --> 00:03:22.169 align:start position:0%
back with a live page this builder you
 

00:03:22.169 --> 00:03:24.710 align:start position:0%
back with a live page this builder you
created<00:03:22.590><c> earlier</c><00:03:22.949><c> that</c><00:03:23.760><c> way</c><00:03:23.970><c> it</c><00:03:24.209><c> can</c><00:03:24.449><c> be</c><00:03:24.569><c> used</c>

00:03:24.710 --> 00:03:24.720 align:start position:0%
created earlier that way it can be used
 

00:03:24.720 --> 00:03:28.009 align:start position:0%
created earlier that way it can be used
by<00:03:24.840><c> the</c><00:03:24.900><c> page</c><00:03:25.169><c> list</c><00:03:25.639><c> third</c><00:03:26.639><c> case</c><00:03:26.909><c> having</c><00:03:27.690><c> only</c>

00:03:28.009 --> 00:03:28.019 align:start position:0%
by the page list third case having only
 

00:03:28.019 --> 00:03:30.979 align:start position:0%
by the page list third case having only
the<00:03:28.260><c> network</c><00:03:28.680><c> as</c><00:03:28.829><c> your</c><00:03:28.949><c> data</c><00:03:29.159><c> source</c><00:03:29.549><c> here</c><00:03:29.989><c> you</c>

00:03:30.979 --> 00:03:30.989 align:start position:0%
the network as your data source here you
 

00:03:30.989 --> 00:03:32.330 align:start position:0%
the network as your data source here you
will<00:03:31.109><c> have</c><00:03:31.319><c> to</c><00:03:31.470><c> create</c><00:03:31.709><c> both</c><00:03:31.859><c> your</c><00:03:32.129><c> data</c>

00:03:32.330 --> 00:03:32.340 align:start position:0%
will have to create both your data
 

00:03:32.340 --> 00:03:35.149 align:start position:0%
will have to create both your data
source<00:03:32.729><c> and</c><00:03:32.939><c> your</c><00:03:33.299><c> data</c><00:03:33.510><c> source</c><00:03:33.810><c> factory</c><00:03:34.290><c> but</c>

00:03:35.149 --> 00:03:35.159 align:start position:0%
source and your data source factory but
 

00:03:35.159 --> 00:03:37.099 align:start position:0%
source and your data source factory but
when<00:03:35.459><c> choosing</c><00:03:35.729><c> which</c><00:03:36.120><c> data</c><00:03:36.449><c> source</c><00:03:36.780><c> type</c><00:03:36.930><c> to</c>

00:03:37.099 --> 00:03:37.109 align:start position:0%
when choosing which data source type to
 

00:03:37.109 --> 00:03:39.110 align:start position:0%
when choosing which data source type to
extend<00:03:37.470><c> consider</c><00:03:38.040><c> what</c><00:03:38.310><c> your</c><00:03:38.489><c> back-end</c><00:03:38.909><c> API</c>

00:03:39.110 --> 00:03:39.120 align:start position:0%
extend consider what your back-end API
 

00:03:39.120 --> 00:03:41.629 align:start position:0%
extend consider what your back-end API
looks<00:03:39.479><c> like</c><00:03:39.750><c> if</c><00:03:40.409><c> you</c><00:03:40.739><c> need</c><00:03:40.979><c> to</c><00:03:41.099><c> request</c><00:03:41.400><c> data</c>

00:03:41.629 --> 00:03:41.639 align:start position:0%
looks like if you need to request data
 

00:03:41.639 --> 00:03:43.969 align:start position:0%
looks like if you need to request data
from<00:03:41.819><c> your</c><00:03:42.150><c> back-end</c><00:03:42.359><c> based</c><00:03:42.720><c> on</c><00:03:42.900><c> a</c><00:03:42.930><c> key</c><00:03:43.290><c> you</c>

00:03:43.969 --> 00:03:43.979 align:start position:0%
from your back-end based on a key you
 

00:03:43.979 --> 00:03:46.219 align:start position:0%
from your back-end based on a key you
will<00:03:44.159><c> extend</c><00:03:44.370><c> from</c><00:03:44.609><c> item</c><00:03:45.209><c> keyed</c><00:03:45.479><c> data</c><00:03:45.810><c> source</c>

00:03:46.219 --> 00:03:46.229 align:start position:0%
will extend from item keyed data source
 

00:03:46.229 --> 00:03:48.890 align:start position:0%
will extend from item keyed data source
let's<00:03:47.069><c> take</c><00:03:47.189><c> an</c><00:03:47.280><c> example</c><00:03:47.370><c> you</c><00:03:48.329><c> might</c><00:03:48.540><c> need</c><00:03:48.720><c> to</c>

00:03:48.890 --> 00:03:48.900 align:start position:0%
let's take an example you might need to
 

00:03:48.900 --> 00:03:50.929 align:start position:0%
let's take an example you might need to
get<00:03:49.049><c> the</c><00:03:49.169><c> first</c><00:03:49.470><c> 100</c><00:03:49.979><c> commits</c><00:03:50.370><c> added</c><00:03:50.790><c> to</c><00:03:50.909><c> a</c>

00:03:50.929 --> 00:03:50.939 align:start position:0%
get the first 100 commits added to a
 

00:03:50.939 --> 00:03:53.379 align:start position:0%
get the first 100 commits added to a
github<00:03:51.209><c> repository</c><00:03:51.449><c> after</c><00:03:52.439><c> a</c><00:03:52.470><c> certain</c><00:03:52.829><c> date</c>

00:03:53.379 --> 00:03:53.389 align:start position:0%
github repository after a certain date
 

00:03:53.389 --> 00:03:56.360 align:start position:0%
github repository after a certain date
then<00:03:54.389><c> the</c><00:03:54.810><c> date</c><00:03:55.079><c> will</c><00:03:55.500><c> be</c><00:03:55.620><c> the</c><00:03:55.769><c> key</c><00:03:55.979><c> for</c><00:03:56.250><c> your</c>

00:03:56.360 --> 00:03:56.370 align:start position:0%
then the date will be the key for your
 

00:03:56.370 --> 00:03:59.780 align:start position:0%
then the date will be the key for your
data<00:03:56.609><c> source</c><00:03:57.470><c> item</c><00:03:58.470><c> kids</c><00:03:58.709><c> data</c><00:03:59.040><c> source</c><00:03:59.400><c> allows</c>

00:03:59.780 --> 00:03:59.790 align:start position:0%
data source item kids data source allows
 

00:03:59.790 --> 00:04:01.429 align:start position:0%
data source item kids data source allows
you<00:03:59.909><c> to</c><00:04:00.000><c> define</c><00:04:00.299><c> how</c><00:04:00.569><c> to</c><00:04:00.629><c> load</c><00:04:00.900><c> the</c><00:04:01.049><c> initial</c>

00:04:01.429 --> 00:04:01.439 align:start position:0%
you to define how to load the initial
 

00:04:01.439 --> 00:04:03.559 align:start position:0%
you to define how to load the initial
page<00:04:01.650><c> as</c><00:04:01.829><c> well</c><00:04:02.340><c> as</c><00:04:02.519><c> how</c><00:04:02.669><c> to</c><00:04:02.699><c> load</c><00:04:02.939><c> items</c><00:04:03.150><c> both</c>

00:04:03.559 --> 00:04:03.569 align:start position:0%
page as well as how to load items both
 

00:04:03.569 --> 00:04:07.670 align:start position:0%
page as well as how to load items both
after<00:04:03.840><c> and</c><00:04:04.290><c> before</c><00:04:04.620><c> a</c><00:04:05.099><c> kid</c><00:04:05.430><c> entry</c><00:04:05.939><c> if</c><00:04:06.720><c> you're</c>

00:04:07.670 --> 00:04:07.680 align:start position:0%
after and before a kid entry if you're
 

00:04:07.680 --> 00:04:09.439 align:start position:0%
after and before a kid entry if you're
back<00:04:07.889><c> and</c><00:04:08.040><c> expose</c><00:04:08.340><c> is</c><00:04:08.489><c> api's</c><00:04:08.879><c> that</c><00:04:09.120><c> work</c><00:04:09.299><c> with</c>

00:04:09.439 --> 00:04:09.449 align:start position:0%
back and expose is api's that work with
 

00:04:09.449 --> 00:04:12.409 align:start position:0%
back and expose is api's that work with
pages<00:04:10.079><c> then</c><00:04:10.799><c> you</c><00:04:10.949><c> will</c><00:04:11.099><c> extend</c><00:04:11.370><c> from</c><00:04:11.549><c> page</c><00:04:11.939><c> key</c>

00:04:12.409 --> 00:04:12.419 align:start position:0%
pages then you will extend from page key
 

00:04:12.419 --> 00:04:15.499 align:start position:0%
pages then you will extend from page key
to<00:04:12.629><c> data</c><00:04:12.810><c> source</c><00:04:13.370><c> for</c><00:04:14.370><c> example</c><00:04:14.819><c> the</c><00:04:15.299><c> search</c>

00:04:15.499 --> 00:04:15.509 align:start position:0%
to data source for example the search
 

00:04:15.509 --> 00:04:17.210 align:start position:0%
to data source for example the search
repositories<00:04:16.199><c> github</c><00:04:16.620><c> API</c><00:04:16.979><c> returns</c>

00:04:17.210 --> 00:04:17.220 align:start position:0%
repositories github API returns
 

00:04:17.220 --> 00:04:20.060 align:start position:0%
repositories github API returns
paginated<00:04:18.030><c> items</c><00:04:18.690><c> in</c><00:04:18.930><c> the</c><00:04:19.680><c> github</c><00:04:19.859><c> API</c>

00:04:20.060 --> 00:04:20.070 align:start position:0%
paginated items in the github API
 

00:04:20.070 --> 00:04:21.890 align:start position:0%
paginated items in the github API
request<00:04:20.699><c> you</c><00:04:20.820><c> need</c><00:04:20.970><c> to</c><00:04:21.060><c> specify</c><00:04:21.299><c> the</c><00:04:21.599><c> query</c>

00:04:21.890 --> 00:04:21.900 align:start position:0%
request you need to specify the query
 

00:04:21.900 --> 00:04:24.050 align:start position:0%
request you need to specify the query
which<00:04:22.590><c> page</c><00:04:22.800><c> you</c><00:04:22.949><c> want</c><00:04:23.099><c> and</c><00:04:23.310><c> optionally</c><00:04:24.000><c> the</c>

00:04:24.050 --> 00:04:24.060 align:start position:0%
which page you want and optionally the
 

00:04:24.060 --> 00:04:26.790 align:start position:0%
which page you want and optionally the
number<00:04:24.330><c> of</c><00:04:24.389><c> items</c><00:04:24.510><c> per</c><00:04:24.900><c> page</c>

00:04:26.790 --> 00:04:26.800 align:start position:0%
number of items per page
 

00:04:26.800 --> 00:04:28.390 align:start position:0%
number of items per page
independent<00:04:27.800><c> on</c><00:04:27.860><c> how</c><00:04:27.979><c> you</c><00:04:28.039><c> create</c><00:04:28.370><c> your</c>

00:04:28.390 --> 00:04:28.400 align:start position:0%
independent on how you create your
 

00:04:28.400 --> 00:04:30.430 align:start position:0%
independent on how you create your
network<00:04:28.849><c> data</c><00:04:29.060><c> source</c><00:04:29.419><c> you</c><00:04:30.050><c> will</c><00:04:30.199><c> need</c><00:04:30.349><c> to</c>

00:04:30.430 --> 00:04:30.440 align:start position:0%
network data source you will need to
 

00:04:30.440 --> 00:04:32.589 align:start position:0%
network data source you will need to
implement<00:04:30.830><c> a</c><00:04:30.919><c> data</c><00:04:31.220><c> source</c><00:04:31.550><c> factory</c><00:04:32.150><c> that</c>

00:04:32.589 --> 00:04:32.599 align:start position:0%
implement a data source factory that
 

00:04:32.599 --> 00:04:34.990 align:start position:0%
implement a data source factory that
knows<00:04:32.750><c> how</c><00:04:32.990><c> to</c><00:04:33.020><c> create</c><00:04:33.379><c> your</c><00:04:33.560><c> data</c><00:04:33.830><c> source</c><00:04:34.220><c> for</c>

00:04:34.990 --> 00:04:35.000 align:start position:0%
knows how to create your data source for
 

00:04:35.000 --> 00:04:36.850 align:start position:0%
knows how to create your data source for
full<00:04:35.419><c> examples</c><00:04:35.930><c> of</c><00:04:36.050><c> how</c><00:04:36.199><c> to</c><00:04:36.259><c> implement</c><00:04:36.530><c> all</c><00:04:36.830><c> of</c>

00:04:36.850 --> 00:04:36.860 align:start position:0%
full examples of how to implement all of
 

00:04:36.860 --> 00:04:38.770 align:start position:0%
full examples of how to implement all of
these<00:04:37.099><c> cases</c><00:04:37.340><c> including</c><00:04:38.240><c> how</c><00:04:38.389><c> to</c><00:04:38.449><c> handle</c>

00:04:38.770 --> 00:04:38.780 align:start position:0%
these cases including how to handle
 

00:04:38.780 --> 00:04:41.469 align:start position:0%
these cases including how to handle
error<00:04:39.020><c> cases</c><00:04:39.319><c> or</c><00:04:39.650><c> return</c><00:04:40.159><c> mechanisms</c><00:04:40.729><c> check</c>

00:04:41.469 --> 00:04:41.479 align:start position:0%
error cases or return mechanisms check
 

00:04:41.479 --> 00:04:44.469 align:start position:0%
error cases or return mechanisms check
out<00:04:41.599><c> our</c><00:04:41.750><c> samples</c><00:04:42.169><c> on</c><00:04:42.289><c> github</c><00:04:42.759><c> okay</c><00:04:43.789><c> let's</c><00:04:44.300><c> sum</c>

00:04:44.469 --> 00:04:44.479 align:start position:0%
out our samples on github okay let's sum
 

00:04:44.479 --> 00:04:46.510 align:start position:0%
out our samples on github okay let's sum
it<00:04:44.569><c> up</c><00:04:44.599><c> here's</c><00:04:45.590><c> what</c><00:04:45.800><c> you'll</c><00:04:45.979><c> need</c><00:04:46.039><c> to</c><00:04:46.190><c> do</c><00:04:46.340><c> to</c>

00:04:46.510 --> 00:04:46.520 align:start position:0%
it up here's what you'll need to do to
 

00:04:46.520 --> 00:04:48.430 align:start position:0%
it up here's what you'll need to do to
integrate<00:04:46.699><c> paging</c><00:04:47.330><c> you'll</c><00:04:47.930><c> need</c><00:04:48.080><c> to</c><00:04:48.169><c> define</c>

00:04:48.430 --> 00:04:48.440 align:start position:0%
integrate paging you'll need to define
 

00:04:48.440 --> 00:04:50.710 align:start position:0%
integrate paging you'll need to define
your<00:04:48.500><c> data</c><00:04:48.800><c> source</c><00:04:49.159><c> create</c><00:04:50.090><c> a</c><00:04:50.120><c> boundary</c><00:04:50.479><c> call</c>

00:04:50.710 --> 00:04:50.720 align:start position:0%
your data source create a boundary call
 

00:04:50.720 --> 00:04:52.930 align:start position:0%
your data source create a boundary call
back<00:04:50.900><c> if</c><00:04:51.110><c> it's</c><00:04:51.349><c> needed</c><00:04:51.650><c> create</c><00:04:52.400><c> the</c><00:04:52.490><c> live</c><00:04:52.669><c> data</c>

00:04:52.930 --> 00:04:52.940 align:start position:0%
back if it's needed create the live data
 

00:04:52.940 --> 00:04:55.089 align:start position:0%
back if it's needed create the live data
of<00:04:53.270><c> a</c><00:04:53.360><c> page</c><00:04:53.599><c> this</c><00:04:53.840><c> with</c><00:04:54.169><c> the</c><00:04:54.349><c> help</c><00:04:54.560><c> of</c><00:04:54.680><c> a</c><00:04:54.830><c> live</c>

00:04:55.089 --> 00:04:55.099 align:start position:0%
of a page this with the help of a live
 

00:04:55.099 --> 00:04:58.119 align:start position:0%
of a page this with the help of a live
page<00:04:55.520><c> list</c><00:04:55.849><c> filter</c><00:04:56.319><c> update</c><00:04:57.319><c> your</c><00:04:57.470><c> adapter</c><00:04:57.919><c> to</c>

00:04:58.119 --> 00:04:58.129 align:start position:0%
page list filter update your adapter to
 

00:04:58.129 --> 00:05:00.070 align:start position:0%
page list filter update your adapter to
be<00:04:58.250><c> a</c><00:04:58.280><c> page</c><00:04:58.490><c> this</c><00:04:58.669><c> adapter</c><00:04:59.180><c> and</c><00:04:59.419><c> then</c><00:04:59.599><c> finally</c>

00:05:00.070 --> 00:05:00.080 align:start position:0%
be a page this adapter and then finally
 

00:05:00.080 --> 00:05:02.409 align:start position:0%
be a page this adapter and then finally
observe<00:05:00.680><c> the</c><00:05:00.919><c> live</c><00:05:01.099><c> data</c><00:05:01.340><c> of</c><00:05:01.639><c> a</c><00:05:01.729><c> page</c><00:05:01.940><c> list</c><00:05:02.240><c> in</c>

00:05:02.409 --> 00:05:02.419 align:start position:0%
observe the live data of a page list in
 

00:05:02.419 --> 00:05:04.330 align:start position:0%
observe the live data of a page list in
your<00:05:02.449><c> UI</c><00:05:02.840><c> and</c><00:05:03.110><c> set</c><00:05:03.560><c> the</c><00:05:03.680><c> page</c><00:05:03.860><c> list</c><00:05:04.130><c> to</c><00:05:04.250><c> the</c>

00:05:04.330 --> 00:05:04.340 align:start position:0%
your UI and set the page list to the
 

00:05:04.340 --> 00:05:07.990 align:start position:0%
your UI and set the page list to the
adapter<00:05:05.139><c> that's</c><00:05:06.139><c> it</c><00:05:06.349><c> just</c><00:05:06.800><c> five</c><00:05:06.979><c> steps</c><00:05:07.250><c> check</c>

00:05:07.990 --> 00:05:08.000 align:start position:0%
adapter that's it just five steps check
 

00:05:08.000 --> 00:05:09.969 align:start position:0%
adapter that's it just five steps check
out<00:05:08.090><c> our</c><00:05:08.240><c> documentation</c><00:05:08.360><c> code</c><00:05:09.319><c> samples</c><00:05:09.770><c> and</c>

00:05:09.969 --> 00:05:09.979 align:start position:0%
out our documentation code samples and
 

00:05:09.979 --> 00:05:12.070 align:start position:0%
out our documentation code samples and
call<00:05:10.490><c> up</c><00:05:10.699><c> and</c><00:05:10.909><c> start</c><00:05:11.270><c> using</c><00:05:11.449><c> the</c><00:05:11.690><c> paging</c>

00:05:12.070 --> 00:05:12.080 align:start position:0%
call up and start using the paging
 

00:05:12.080 --> 00:05:14.020 align:start position:0%
call up and start using the paging
library<00:05:12.409><c> to</c><00:05:12.770><c> provide</c><00:05:12.830><c> smooth</c><00:05:13.400><c> performing</c>

00:05:14.020 --> 00:05:14.030 align:start position:0%
library to provide smooth performing
 

00:05:14.030 --> 00:05:15.150 align:start position:0%
library to provide smooth performing
lists<00:05:14.360><c> for</c><00:05:14.539><c> your</c><00:05:14.599><c> users</c>

00:05:15.150 --> 00:05:15.160 align:start position:0%
lists for your users
 

00:05:15.160 --> 00:05:18.279 align:start position:0%
lists for your users
[Applause]

