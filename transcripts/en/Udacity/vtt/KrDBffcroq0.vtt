WEBVTT
Kind: captions
Language: en

00:00:00.710 --> 00:00:02.950
So I'm going to first describe to you a

00:00:02.950 --> 00:00:08.080
more scalable version of the sense reversal algorithm.

00:00:08.080 --> 00:00:10.630
And the basic idea is to use divide

00:00:10.630 --> 00:00:13.280
and conquer. I have a hierarchical solution. That

00:00:13.280 --> 00:00:16.340
is, limit the amount of sharing to a

00:00:16.340 --> 00:00:20.150
small number of processes. Let's say a small

00:00:20.150 --> 00:00:26.310
number K of processes and, and in this example, k is equal to 2. So essentially,

00:00:26.310 --> 00:00:31.510
you know, what we are saying is, if you have n processors that the condition,

00:00:31.510 --> 00:00:33.760
break them up into small groups of

00:00:33.760 --> 00:00:37.160
k processors. And so we build the hierarchical

00:00:37.160 --> 00:00:39.490
solution and the hierarchical solution obviously leads

00:00:39.490 --> 00:00:43.290
to a tree solution. And so, since we

00:00:43.290 --> 00:00:47.220
have K processors competing and accomplishing a

00:00:47.220 --> 00:00:51.150
variable among themselves. If you have N processors,

00:00:51.150 --> 00:00:57.870
then you have a log, and the base K as a number of levels in the tree, in order

00:00:57.870 --> 00:01:00.150
to achieve the value. And in this case, what

00:01:00.150 --> 00:01:02.570
we have done is K is equal to 2. And

00:01:02.570 --> 00:01:05.430
so, the number of levels and with the eight

00:01:05.430 --> 00:01:08.350
processors The number of levels in the tree is going to

00:01:08.350 --> 00:01:12.020
be three. So let's talk about what happens when

00:01:12.020 --> 00:01:16.240
we [UNKNOWN] a value. So, at a micro level algorithm

00:01:16.240 --> 00:01:20.530
works exactly like a sense reversing algorithm. And

00:01:20.530 --> 00:01:23.620
that is, these two processes if they're sharing this

00:01:23.620 --> 00:01:27.240
data structure at count Variable and a locksense variable

00:01:27.240 --> 00:01:29.980
and you see that for every k processes and

00:01:29.980 --> 00:01:32.010
in this case k being two, every two

00:01:32.010 --> 00:01:35.860
processes you have issued two shared variables: account variable

00:01:35.860 --> 00:01:39.030
and a locksense variable. Count variable locksense variable, count

00:01:39.030 --> 00:01:42.090
and locksense. And, so what's going to happen and

00:01:42.090 --> 00:01:45.930
you'll see that you have this count and locksense variable.

00:01:45.930 --> 00:01:48.600
Replicated in every level of the tree, and we'll talk

00:01:48.600 --> 00:01:51.590
about how these going to, are, variables are going to be used

00:01:51.590 --> 00:01:55.610
in the progression of this algorithm. So let's first talk

00:01:55.610 --> 00:01:58.830
about arriving at a barrier. So let's say that P1

00:01:58.830 --> 00:02:01.170
has arrived at the barrier. What it is going to do

00:02:01.170 --> 00:02:04.440
is, it's going to go and decrement this counter. Now, what

00:02:04.440 --> 00:02:07.880
is this counter going to be set to? Well, This counter is,

00:02:07.880 --> 00:02:11.160
is just for the key processes that are value

00:02:11.160 --> 00:02:13.730
syncing here and keeping two this counter is going

00:02:13.730 --> 00:02:15.580
to be two. And so, this guy is going to

00:02:15.580 --> 00:02:19.750
decrement the count and if the count is not zero

00:02:19.750 --> 00:02:24.110
it's going to basically wait for the sense to reverse.

00:02:24.110 --> 00:02:26.240
Just like the sense reversal of algorithms. The same thing

00:02:26.240 --> 00:02:29.690
is going to happen that P1 comes here decrements the

00:02:29.690 --> 00:02:33.010
count and it waits for sense to reverse by spinning

00:02:33.010 --> 00:02:38.740
on this flag. Sometime later, P0 comes to the barrier and

00:02:38.740 --> 00:02:42.010
it decrements the count, count goes to zero, but you're not

00:02:42.010 --> 00:02:44.340
done with the barrier yet, because the barrier is for all

00:02:44.340 --> 00:02:47.360
of the processes. So what P0 is going to say is okay,

00:02:47.360 --> 00:02:49.940
between the two of us I know that we both have

00:02:49.940 --> 00:02:52.320
reached the value because the count is zero. But I have

00:02:52.320 --> 00:02:54.810
to go up, and go to the next level up and

00:02:54.810 --> 00:02:58.240
here I'm going to decrement the count here, to indicate that I've arrived

00:02:58.240 --> 00:03:00.890
at the value. So P0's the one that arrive up

00:03:00.890 --> 00:03:04.690
the tree, P1 is stuck here waiting for sense to diverse,

00:03:04.690 --> 00:03:08.090
P0 moves up. So remember that even though P0's come here

00:03:08.090 --> 00:03:10.880
decremented the count and made it zero, that doesn't flip the

00:03:10.880 --> 00:03:14.900
sense flag yet. Right? Because the value will be done

00:03:14.900 --> 00:03:18.440
only when everybody has arrived, and therefore all that P0 is

00:03:18.440 --> 00:03:21.210
going to do now is decrement the count, see that it is

00:03:21.210 --> 00:03:23.830
0, then it is going to move up in the tree and

00:03:23.830 --> 00:03:25.700
go to the next level of the tree. And this

00:03:25.700 --> 00:03:28.740
data structure, which is now shared among this half of

00:03:28.740 --> 00:03:31.370
the tree this half of the tree is sharing this

00:03:31.370 --> 00:03:35.310
data structure, so P0 decrements this count. And what'll this count

00:03:35.310 --> 00:03:39.170
be resized to? Again, 2, right? Because at every level,

00:03:39.170 --> 00:03:42.770
you have k processors, k being 2 in this case, arriving

00:03:42.770 --> 00:03:45.900
at a barrier. So P0 arrives here, decrements the count,

00:03:45.900 --> 00:03:48.845
count is not 0 yet, and so it waits. So P0

00:03:48.845 --> 00:03:52.440
is going to wait on locksense to reverse here. P1 is waiting

00:03:52.440 --> 00:03:56.390
on locksense deliveries here P0 is not waiting on locksense deliveries

00:03:56.390 --> 00:04:00.990
here because it has arrived at the barrier but his partners

00:04:00.990 --> 00:04:03.520
are still stragglers, they have not arrived at the barrier yet.

