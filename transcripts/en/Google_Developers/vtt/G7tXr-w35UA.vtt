WEBVTT
Kind: captions
Language: en

00:00:04.311 --> 00:00:07.593
TIMOTHY JORDAN: Hello.

00:00:07.593 --> 00:00:09.010
That's right.

00:00:09.010 --> 00:00:11.990
Usually I say hello and
you say, Hi, Timothy.

00:00:11.990 --> 00:00:12.816
Hello.

00:00:12.816 --> 00:00:14.610
AUDIENCE: Hi, Timothy.

00:00:14.610 --> 00:00:16.050
TIMOTHY JORDAN: I love that.

00:00:16.050 --> 00:00:18.450
Welcome to Wearable
Computing with Google.

00:00:23.710 --> 00:00:25.710
I'm going to try that
clicker one more time.

00:00:25.710 --> 00:00:27.085
I'm going to switch
to the other.

00:00:37.140 --> 00:00:40.930
Oh, something wasn't plugged in.

00:00:40.930 --> 00:00:41.540
There we are.

00:00:44.210 --> 00:00:46.270
Woo, when things work.

00:00:46.270 --> 00:00:47.250
I'm Timothy Jordan.

00:00:47.250 --> 00:00:48.950
I'm a developer
advocate at Google.

00:00:48.950 --> 00:00:52.080
You can reach me online,
google.com/+timothyjordan,

00:00:52.080 --> 00:00:55.920
or on Twitter @TimothyJordan.

00:00:55.920 --> 00:00:58.440
I'm going to cover three
topics in this session.

00:00:58.440 --> 00:01:00.410
First, what is
wearable computing?

00:01:00.410 --> 00:01:02.650
And I mean more than just
a device that you wear.

00:01:02.650 --> 00:01:05.090
What is it at its core?

00:01:05.090 --> 00:01:07.310
I'm going to talk about
how we live in a world

00:01:07.310 --> 00:01:09.765
where users have
multiple devices.

00:01:09.765 --> 00:01:11.350
They're using them
at the same time.

00:01:11.350 --> 00:01:13.210
And instead of ignoring
that and letting

00:01:13.210 --> 00:01:15.010
them compete for
each other, how do we

00:01:15.010 --> 00:01:18.540
connect those devices together
into a single, seamless

00:01:18.540 --> 00:01:20.630
experience for the user?

00:01:20.630 --> 00:01:22.380
And I have an announcement
in that section

00:01:22.380 --> 00:01:24.240
I think you're going to like.

00:01:24.240 --> 00:01:26.880
And then third, how
can we use Google

00:01:26.880 --> 00:01:31.690
to make this whole thing a lot
simpler and yet more powerful?

00:01:31.690 --> 00:01:32.948
Sound like fun?

00:01:32.948 --> 00:01:34.620
OK.

00:01:34.620 --> 00:01:38.930
So first off, what is
wearable computing?

00:01:38.930 --> 00:01:40.580
I keep having
these conversations

00:01:40.580 --> 00:01:44.040
with developers about
cool ideas that they

00:01:44.040 --> 00:01:47.120
have for new form factors and
wearable computing and beyond.

00:01:47.120 --> 00:01:50.810
And although cool, they
aren't necessarily great user

00:01:50.810 --> 00:01:55.460
experiences that solve
real user problems.

00:01:55.460 --> 00:01:58.850
Let me give you an example, and
I hear this idea all the time.

00:01:58.850 --> 00:02:01.110
In fact, a few of you probably
have had this as well.

00:02:01.110 --> 00:02:05.370
Wouldn't it be cool if I walked
into a conference and everybody

00:02:05.370 --> 00:02:07.890
I knew had a little
thought bubble above them

00:02:07.890 --> 00:02:12.344
with their name and what
they do and how I know them?

00:02:12.344 --> 00:02:13.510
It's not a great experience.

00:02:13.510 --> 00:02:15.180
And I'm going to tell you why.

00:02:15.180 --> 00:02:17.700
The user problem that
you're trying to solve for

00:02:17.700 --> 00:02:22.870
is how do we connect people more
deeply to those around them.

00:02:22.870 --> 00:02:25.220
And that's a great
problem to solve.

00:02:25.220 --> 00:02:27.470
But in that solution,
what you end up

00:02:27.470 --> 00:02:31.210
doing is distracting
them and distancing them

00:02:31.210 --> 00:02:33.300
from the people around them.

00:02:33.300 --> 00:02:34.940
Now, there's another
way to solve this.

00:02:34.940 --> 00:02:36.810
What if the user
had that information

00:02:36.810 --> 00:02:39.480
before walking into
a business meeting?

00:02:39.480 --> 00:02:41.230
They could have looked
it up on their own.

00:02:41.230 --> 00:02:43.604
What if it was just delivered
to them through their glass

00:02:43.604 --> 00:02:45.942
or through their
Android Wear device?

00:02:45.942 --> 00:02:47.650
That's a completely
different experience.

00:02:47.650 --> 00:02:49.920
In fact, you can already
get it on MyGlass today.

00:02:49.920 --> 00:02:52.100
And what it does is
it prepares that user

00:02:52.100 --> 00:02:55.290
and gives them the opportunity
to connect deeply to the people

00:02:55.290 --> 00:02:56.862
around them.

00:02:56.862 --> 00:02:58.320
But the problem
with the first idea

00:02:58.320 --> 00:03:00.660
is that it was built on
this idea of a device.

00:03:00.660 --> 00:03:03.160
It was built on this idea of
what computing is supposed

00:03:03.160 --> 00:03:05.700
to be in our future, when
instead, what we should

00:03:05.700 --> 00:03:09.170
be focusing on is the user.

00:03:09.170 --> 00:03:13.210
That's the true promise
of wearable computing.

00:03:13.210 --> 00:03:15.660
See, people bring
technology into their lives

00:03:15.660 --> 00:03:18.040
and wear it out into the
world on their adventures.

00:03:18.040 --> 00:03:22.180
And our job is to enable them
to have richer experiences

00:03:22.180 --> 00:03:25.870
and be more connected to the
people and world around them.

00:03:25.870 --> 00:03:27.430
Let's take a step
back and examine

00:03:27.430 --> 00:03:30.120
that idea in a little
bit more detail.

00:03:30.120 --> 00:03:32.400
Computers used to
look like this.

00:03:32.400 --> 00:03:34.770
They filled a whole room.

00:03:34.770 --> 00:03:36.920
Shortly after that,
just on your desk.

00:03:36.920 --> 00:03:38.994
And very soon after that,
the palm of your hands,

00:03:38.994 --> 00:03:41.410
where you could get the full
repository of human knowledge

00:03:41.410 --> 00:03:43.810
and worldwide
communication just right

00:03:43.810 --> 00:03:48.300
there by reaching into your
pocket-- such a cool idea.

00:03:48.300 --> 00:03:51.070
But something that you'll notice
about all of these devices

00:03:51.070 --> 00:03:53.300
is without anything
else in the picture,

00:03:53.300 --> 00:03:56.977
it's hard to see the human.

00:03:56.977 --> 00:03:58.560
One of my favorite
thought experiments

00:03:58.560 --> 00:04:00.640
is by this VR
pioneer Jaron Lanier.

00:04:00.640 --> 00:04:02.540
Some of you have
heard this before.

00:04:02.540 --> 00:04:06.090
Please bear with me if you have.

00:04:06.090 --> 00:04:10.790
What if aliens came to earth--
cute fuzzy aliens-- and people

00:04:10.790 --> 00:04:11.890
were nowhere to be found?

00:04:11.890 --> 00:04:14.120
And they were trying
to figure out us

00:04:14.120 --> 00:04:15.600
by looking at our computers.

00:04:15.600 --> 00:04:17.769
What would they think?

00:04:17.769 --> 00:04:22.160
Do we have 102 fingers
and one big eye?

00:04:22.160 --> 00:04:23.380
No, we don't.

00:04:23.380 --> 00:04:25.980
Now, if you look at a hammer,
it almost makes sense.

00:04:25.980 --> 00:04:27.510
You could kind of
see the arm that

00:04:27.510 --> 00:04:30.162
would wield that hammer
and hammer in nails.

00:04:30.162 --> 00:04:34.240
But this computer-- I
mean, look at the keyboard.

00:04:34.240 --> 00:04:35.510
It's not really built for us.

00:04:35.510 --> 00:04:38.590
It's not even really
built to type fast.

00:04:38.590 --> 00:04:41.070
Back when the keyboard
layout was designed,

00:04:41.070 --> 00:04:43.860
it was designed to keep
us from typing too fast

00:04:43.860 --> 00:04:45.700
so that the type bars
wouldn't get caught

00:04:45.700 --> 00:04:47.860
amongst each other and
screw everything up.

00:04:47.860 --> 00:04:50.590
But this is what evolved
into the modern keyboard.

00:04:53.604 --> 00:04:55.020
This is a very
physical difference

00:04:55.020 --> 00:04:56.250
between the person
and the machine.

00:04:56.250 --> 00:04:58.700
Let's look at something that's
a little less physical but just

00:04:58.700 --> 00:04:59.241
as dangerous.

00:05:01.519 --> 00:05:02.810
What's wrong with this picture?

00:05:06.570 --> 00:05:09.350
In many ways, this is our
relationship with technology.

00:05:09.350 --> 00:05:11.400
It gives us a lot of value.

00:05:11.400 --> 00:05:14.180
However, we are
adapting our lifestyle

00:05:14.180 --> 00:05:17.660
to the technology
that assists us.

00:05:17.660 --> 00:05:20.470
And there's a heavy cost,
and we pay it frequently.

00:05:20.470 --> 00:05:21.720
How does that make sense?

00:05:21.720 --> 00:05:22.940
What if we didn't have to?

00:05:25.900 --> 00:05:28.760
Here's a photo I took a few
months ago of my team playing

00:05:28.760 --> 00:05:30.310
a word guessing game.

00:05:30.310 --> 00:05:32.520
That's Lindsay in the
top center of the photo,

00:05:32.520 --> 00:05:35.130
and she's trying to describe
a word given to her on Glass.

00:05:35.130 --> 00:05:37.784
What I love about this
photo is you can hardly

00:05:37.784 --> 00:05:38.575
see the technology.

00:05:41.160 --> 00:05:42.900
Some people think the
future of computing

00:05:42.900 --> 00:05:45.910
is floating screens and
constant digital overlay,

00:05:45.910 --> 00:05:48.011
constantly looking things
up on the internet.

00:05:48.011 --> 00:05:50.010
They want to keep you
immersed and keep you away

00:05:50.010 --> 00:05:51.650
from your life.

00:05:51.650 --> 00:05:54.230
But as it turns out
with wearable computing,

00:05:54.230 --> 00:05:57.690
less is more.

00:05:57.690 --> 00:06:00.600
It's where we as
developers and designers

00:06:00.600 --> 00:06:03.660
get to put the user
before the technology.

00:06:03.660 --> 00:06:06.206
It's briefly there when you
need it, and not when you don't.

00:06:06.206 --> 00:06:08.580
It gives you what you need,
and you're back to your life.

00:06:08.580 --> 00:06:11.230
Now, this simple core
philosophy to wearable computing

00:06:11.230 --> 00:06:13.282
is what you see over
and over and over again

00:06:13.282 --> 00:06:14.740
in terms you hear
throughout Google

00:06:14.740 --> 00:06:19.270
I/O, such as microinteraction
and glanceable information.

00:06:19.270 --> 00:06:22.360
And it's not new.

00:06:22.360 --> 00:06:24.660
It's the idea that
success isn't measured

00:06:24.660 --> 00:06:27.530
by how long the user is
engaged with the interface

00:06:27.530 --> 00:06:29.700
but how quickly we can
get them what they need

00:06:29.700 --> 00:06:30.854
and get them on their way.

00:06:30.854 --> 00:06:32.520
And there's a website
that's been around

00:06:32.520 --> 00:06:35.640
for 15 years with that
exact philosophy in mind.

00:06:40.480 --> 00:06:42.650
This kind of interaction
is in our DNA.

00:06:42.650 --> 00:06:44.900
Back at the time when the
search engine philosophy was

00:06:44.900 --> 00:06:47.970
keep the user on the
page as long as possible,

00:06:47.970 --> 00:06:50.650
Google went in the
opposite direction.

00:06:50.650 --> 00:06:53.120
And as it turns out, that's
exactly what users wanted.

00:06:53.120 --> 00:06:56.592
It's exactly what they needed.

00:06:56.592 --> 00:06:58.050
And that's why it
made sense for us

00:06:58.050 --> 00:06:59.920
to recognize this
core philosophy

00:06:59.920 --> 00:07:03.380
in wearable computing as well.

00:07:03.380 --> 00:07:06.370
These devices are about
that kind of experience.

00:07:06.370 --> 00:07:08.300
Now, that's not to
say that desktops,

00:07:08.300 --> 00:07:09.290
laptops are going away.

00:07:09.290 --> 00:07:09.830
They're not.

00:07:09.830 --> 00:07:13.056
But those are often
tools for work,

00:07:13.056 --> 00:07:14.430
whereas these are
tools for life.

00:07:18.310 --> 00:07:19.920
That's what wearbale
computing is.

00:07:19.920 --> 00:07:22.946
Now, let's talk about
connecting it all together.

00:07:22.946 --> 00:07:23.820
Remember what I said?

00:07:23.820 --> 00:07:25.320
What if the benefits
of technology

00:07:25.320 --> 00:07:29.560
were available everywhere, no
matter what you were doing?

00:07:29.560 --> 00:07:32.260
And this idea is bigger
than just one or two devices

00:07:32.260 --> 00:07:34.310
that the user might have
on them at the time.

00:07:34.310 --> 00:07:37.750
It's about all the technology
that they keep in their lives.

00:07:37.750 --> 00:07:41.880
And this is what's meant by the
term "ubiquitous computing."

00:07:41.880 --> 00:07:44.420
And it's how we need
to start thinking.

00:07:44.420 --> 00:07:47.990
It's the idea that a user
starts to use a service,

00:07:47.990 --> 00:07:51.040
and it's available to them
everywhere they want it to be.

00:07:51.040 --> 00:07:53.290
Now, maybe it's something
as simple as an alarm clock,

00:07:53.290 --> 00:07:56.020
but it rings in whatever
the context the users

00:07:56.020 --> 00:07:58.130
enter right then.

00:07:58.130 --> 00:08:01.720
And maybe it's in their pocket
or on their wrist or eyewear

00:08:01.720 --> 00:08:05.790
or in the living
room or in their car.

00:08:05.790 --> 00:08:07.640
And if you watch
closely, this is

00:08:07.640 --> 00:08:09.290
where we as an
industry of wearables

00:08:09.290 --> 00:08:11.720
is going-- connecting
all of these devices

00:08:11.720 --> 00:08:15.407
into a single, seamless user
experience across all of them.

00:08:18.030 --> 00:08:21.830
But how do we deal as
developers with the complexity

00:08:21.830 --> 00:08:24.557
across this
constellation of devices?

00:08:24.557 --> 00:08:26.390
Well, we do what any
good engineer would do,

00:08:26.390 --> 00:08:29.050
and we simplify the problem.

00:08:29.050 --> 00:08:31.120
We need two major
things-- that's it.

00:08:31.120 --> 00:08:33.240
Platform components
that make it easy,

00:08:33.240 --> 00:08:34.870
and a design pattern
that simplifies

00:08:34.870 --> 00:08:37.640
the whole thing,
or maybe patterns.

00:08:37.640 --> 00:08:40.490
Let's start with the platform.

00:08:40.490 --> 00:08:42.400
Now, for Glass, you've
got the Mirror API,

00:08:42.400 --> 00:08:45.110
which allows you to
insert timeline items

00:08:45.110 --> 00:08:47.760
and have basic user interaction,
the GDK for full apps

00:08:47.760 --> 00:08:49.510
on the device with
access to the hardware,

00:08:49.510 --> 00:08:51.800
and advanced user interaction.

00:08:51.800 --> 00:08:53.820
On Android Wear, you
can create a single app

00:08:53.820 --> 00:08:55.850
with an APK that
runs on the phone

00:08:55.850 --> 00:09:01.680
and on the watch as
well as notifications

00:09:01.680 --> 00:09:03.960
going from the
phone to the watch,

00:09:03.960 --> 00:09:06.590
including some enhancements.

00:09:06.590 --> 00:09:09.990
Now, I told you I
had an announcement.

00:09:09.990 --> 00:09:12.210
Glass is going to support
Android Wear Notifications.

00:09:12.210 --> 00:09:19.830
[APPLAUSE]

00:09:19.830 --> 00:09:22.620
This includes support for
enhanced notifications

00:09:22.620 --> 00:09:25.430
in Stacks and Pages and Replies.

00:09:25.430 --> 00:09:27.220
And it's going to be
available to users

00:09:27.220 --> 00:09:29.730
on a build in the
next few months.

00:09:29.730 --> 00:09:32.040
This is great news
for developers,

00:09:32.040 --> 00:09:35.530
because it lowers the barrier of
entry into the wearable space.

00:09:35.530 --> 00:09:37.600
You can build rich
notifications on the phone,

00:09:37.600 --> 00:09:40.180
and they're delivered to
the user wherever they are,

00:09:40.180 --> 00:09:42.680
whether that's the phone,
the watch, or Glass.

00:09:42.680 --> 00:09:45.900
And of course, it's
great for these users.

00:09:45.900 --> 00:09:48.450
Notifications will start
showing up on the wearable.

00:09:48.450 --> 00:09:50.940
And as you may know,
to get this done,

00:09:50.940 --> 00:09:52.610
you don't have to do anything.

00:09:52.610 --> 00:09:54.470
They just show up.

00:09:54.470 --> 00:09:57.940
Enhanced notifications will
also show on the wearable.

00:09:57.940 --> 00:10:02.070
And again, to get this done,
you don't have to do anything.

00:10:02.070 --> 00:10:03.712
It just works.

00:10:03.712 --> 00:10:06.170
Now, Android Wear has
a few more features

00:10:06.170 --> 00:10:08.220
for these notifications
that require just a few

00:10:08.220 --> 00:10:11.200
more lines of code.

00:10:11.200 --> 00:10:14.420
And they work on Glass just as
they would work on the watch,

00:10:14.420 --> 00:10:15.540
with a couple differences.

00:10:15.540 --> 00:10:17.580
Here's Stacks on Glass.

00:10:17.580 --> 00:10:19.550
It's Bundles.

00:10:19.550 --> 00:10:20.339
Here's Pages.

00:10:20.339 --> 00:10:21.880
And of course, on
Glass, you're going

00:10:21.880 --> 00:10:25.370
to have the Read More menu
items to get to those pages.

00:10:25.370 --> 00:10:26.860
And of course, Replies.

00:10:26.860 --> 00:10:28.160
They work the way you'd expect.

00:10:32.430 --> 00:10:35.870
So that's platform--
Android wear on Glass,

00:10:35.870 --> 00:10:37.460
bringing components
together to make

00:10:37.460 --> 00:10:42.030
it easy to develop across
all of these devices.

00:10:42.030 --> 00:10:43.790
Now let's talk about
a design platform

00:10:43.790 --> 00:10:45.180
that simplifies the whole thing.

00:10:47.850 --> 00:10:51.094
Let's go easy-- Model
View Controller.

00:10:51.094 --> 00:10:51.760
I'm not kidding.

00:10:51.760 --> 00:10:52.770
This is great.

00:10:52.770 --> 00:10:56.720
Now, this is a simple
example of MVC.

00:10:56.720 --> 00:10:58.670
And you can use any other
design pattern here.

00:10:58.670 --> 00:11:01.450
But I'm going to show you how
to spread it across devices.

00:11:01.450 --> 00:11:03.720
And it's a lot easier than
you might think it is.

00:11:03.720 --> 00:11:06.455
But before I get there, who
here is familiar with Model View

00:11:06.455 --> 00:11:06.955
Controller?

00:11:09.920 --> 00:11:10.910
Interesting.

00:11:10.910 --> 00:11:13.020
About 50%, evenly distributed.

00:11:13.020 --> 00:11:14.400
You don't clump together.

00:11:14.400 --> 00:11:14.980
That's nice.

00:11:17.930 --> 00:11:19.730
So this is the MVC
you know and love.

00:11:19.730 --> 00:11:21.410
Let's throw the user
in there as well.

00:11:21.410 --> 00:11:23.326
For those of you that
didn't raise your hands,

00:11:23.326 --> 00:11:24.750
this is how it works.

00:11:24.750 --> 00:11:27.730
The view is what shows
the user what's going on.

00:11:27.730 --> 00:11:29.320
That's what they see.

00:11:29.320 --> 00:11:31.890
And maybe there's a button, and
the user touches that button.

00:11:31.890 --> 00:11:33.240
That triggers the controller.

00:11:33.240 --> 00:11:35.340
The controller
decides what to do.

00:11:35.340 --> 00:11:37.290
And often this means
mutating some amount

00:11:37.290 --> 00:11:40.830
of data in the model.

00:11:40.830 --> 00:11:43.560
Then as that model updates,
the view gets that message,

00:11:43.560 --> 00:11:46.590
and it updates in response,
so around in this circle.

00:11:50.560 --> 00:11:54.330
Now, the view controller
part of this, that's

00:11:54.330 --> 00:11:56.830
what your device is.

00:11:56.830 --> 00:11:58.580
This is your watch,
or this is your Glass,

00:11:58.580 --> 00:11:59.890
or this is your phone.

00:11:59.890 --> 00:12:02.712
This is any device
in the user's life.

00:12:02.712 --> 00:12:03.920
They're going to have a view.

00:12:03.920 --> 00:12:05.910
We need to adapt
that per device.

00:12:05.910 --> 00:12:08.407
And I'll talk more about that.

00:12:08.407 --> 00:12:09.490
But it's got to be sticky.

00:12:09.490 --> 00:12:11.360
You've got to remember
this part-- what

00:12:11.360 --> 00:12:14.320
you design, the UI you
present to the user,

00:12:14.320 --> 00:12:17.770
has got to make sense for
that piece of technology

00:12:17.770 --> 00:12:19.380
that they're using.

00:12:19.380 --> 00:12:22.420
And the controller, this
will be on the device.

00:12:22.420 --> 00:12:25.665
And it also is sometimes
going to be spread across.

00:12:25.665 --> 00:12:27.290
This might be in the
cloud in something

00:12:27.290 --> 00:12:30.080
like App Engine,
where once they get

00:12:30.080 --> 00:12:32.670
a response from each device,
it can hold on to that context

00:12:32.670 --> 00:12:35.830
and deliver it back to
the user or to the view

00:12:35.830 --> 00:12:38.040
through the model.

00:12:38.040 --> 00:12:42.030
The model is the
required common layer

00:12:42.030 --> 00:12:43.320
across all of these devices.

00:12:43.320 --> 00:12:44.820
In fact, there's
two common layers--

00:12:44.820 --> 00:12:50.280
it's the model and the user,
and they're platform agnostic.

00:12:50.280 --> 00:12:52.050
They can use a number
of different tools

00:12:52.050 --> 00:12:53.250
to accomplish the same task.

00:12:53.250 --> 00:12:55.170
That's our goal here.

00:12:55.170 --> 00:12:57.660
And we can use this
model, and maybe

00:12:57.660 --> 00:12:59.220
the controller in
the cloud as well,

00:12:59.220 --> 00:13:02.140
to keep context across
all of those devices

00:13:02.140 --> 00:13:05.260
and deliver it to the right
device at the right time.

00:13:05.260 --> 00:13:06.490
Does that make sense?

00:13:06.490 --> 00:13:08.840
This is just the MVC
paradigm, except we're

00:13:08.840 --> 00:13:10.300
stretching the
model and sometimes

00:13:10.300 --> 00:13:13.270
the controller across devices.

00:13:13.270 --> 00:13:16.200
So we're building a client for
the phone and for the watch

00:13:16.200 --> 00:13:17.310
and for Glass.

00:13:17.310 --> 00:13:20.070
But then we have
this other component

00:13:20.070 --> 00:13:23.610
that's there to
help all of them.

00:13:23.610 --> 00:13:25.450
Keeping that big
picture in mind is

00:13:25.450 --> 00:13:27.790
what we're going to do
with an example-- building

00:13:27.790 --> 00:13:31.080
all of these things on
top of Google technology.

00:13:31.080 --> 00:13:36.410
We're going to make a reminder
app, because it's simple.

00:13:36.410 --> 00:13:37.727
This is very simple.

00:13:37.727 --> 00:13:39.810
I didn't spend a lot of
time designing these MOXs,

00:13:39.810 --> 00:13:40.540
you'll see.

00:13:40.540 --> 00:13:42.920
But the idea is
just to think about,

00:13:42.920 --> 00:13:44.910
how do we put these
pieces together?

00:13:44.910 --> 00:13:46.410
Because this is the
first time we're

00:13:46.410 --> 00:13:48.450
really doing it at this scale.

00:13:48.450 --> 00:13:50.770
And we're going to do
it on these devices.

00:13:50.770 --> 00:13:53.500
We could, of course, add in the
living room or the user's car,

00:13:53.500 --> 00:13:54.875
but we'll keep it
simple for now.

00:13:57.730 --> 00:13:58.910
And these are our features.

00:13:58.910 --> 00:14:02.800
The user is going to be able to
set a reminder from anywhere.

00:14:02.800 --> 00:14:06.730
They'll be able to receive a
reminder wherever they are.

00:14:06.730 --> 00:14:08.827
And it's going to
be location aware,

00:14:08.827 --> 00:14:10.910
so they can set a place
reminder, not just a time.

00:14:14.787 --> 00:14:16.870
Now, I'm not going to go
into detail here, but let

00:14:16.870 --> 00:14:19.827
me just briefly go
over these items.

00:14:19.827 --> 00:14:21.410
App Engine and Cloud
Endpoints, that's

00:14:21.410 --> 00:14:22.930
what we're going to
use for our cloud.

00:14:22.930 --> 00:14:24.810
There are two components you
need-- some sort of structure

00:14:24.810 --> 00:14:26.684
that you can keep a
controller in if you need

00:14:26.684 --> 00:14:30.542
to and some sort of
access to that model.

00:14:30.542 --> 00:14:31.500
That's Cloud Endpoints.

00:14:31.500 --> 00:14:32.250
I don't know if
you've used them,

00:14:32.250 --> 00:14:34.740
but it's really easy to
deploy Endpoints right away

00:14:34.740 --> 00:14:36.990
and be able to mutate
that model from any device

00:14:36.990 --> 00:14:39.140
that the user might be on.

00:14:39.140 --> 00:14:39.971
And then Android.

00:14:39.971 --> 00:14:41.470
We're going to use
a lot of Android.

00:14:41.470 --> 00:14:42.630
We're going to use
the Android Wear.

00:14:42.630 --> 00:14:43.850
We're going to use the GDK.

00:14:43.850 --> 00:14:45.100
We're going to use Geofencing.

00:14:45.100 --> 00:14:48.170
And we're going to use GCM to
get information from the cloud

00:14:48.170 --> 00:14:50.844
onto the device.

00:14:50.844 --> 00:14:52.870
Now, here's our diagram.

00:14:52.870 --> 00:14:55.830
I went for complex,
as you can see.

00:14:55.830 --> 00:14:57.790
Again, this is a simple example.

00:14:57.790 --> 00:15:01.062
But you can simplify this kind
of service across devices.

00:15:01.062 --> 00:15:02.520
We've got App Engine
up at the top,

00:15:02.520 --> 00:15:04.170
and then the user might
have any of those three

00:15:04.170 --> 00:15:05.086
devices in the middle.

00:15:05.086 --> 00:15:08.620
And of course, there at
the bottom, using them.

00:15:08.620 --> 00:15:11.590
This is pretty much
the same diagram

00:15:11.590 --> 00:15:13.460
that I showed you earlier.

00:15:13.460 --> 00:15:16.220
But App Engine is the model,
and then each of these devices

00:15:16.220 --> 00:15:19.785
has a view/controller pair.

00:15:19.785 --> 00:15:21.910
Let's go through the feature
set, all three of them

00:15:21.910 --> 00:15:23.382
one by one, just
to see how they're

00:15:23.382 --> 00:15:25.090
built, how these pieces
are put together.

00:15:30.220 --> 00:15:34.770
To set a reminder from
anywhere, we need first an app

00:15:34.770 --> 00:15:36.925
on the device to
take the user input.

00:15:36.925 --> 00:15:38.175
So we'll start with the phone.

00:15:38.175 --> 00:15:40.964
And this is just going to
be a basic Android app.

00:15:40.964 --> 00:15:42.630
It'll look a little
something like this.

00:15:42.630 --> 00:15:46.800
I took my inspiration from
the alarm clock, as you see.

00:15:46.800 --> 00:15:49.190
I can add a new
reminder with a name.

00:15:49.190 --> 00:15:51.630
I can add a time for
that to happen at.

00:15:51.630 --> 00:15:55.420
And of course, I save it,
and now it's on the list.

00:15:55.420 --> 00:15:56.800
I forgot one of those items.

00:15:56.800 --> 00:15:59.470
Oh well.

00:15:59.470 --> 00:16:01.300
Now, there's a number
of steps involved

00:16:01.300 --> 00:16:04.380
for that, because this
is a phone interface.

00:16:04.380 --> 00:16:05.740
I can easily browse.

00:16:05.740 --> 00:16:06.320
I can edit.

00:16:06.320 --> 00:16:07.370
I can do lots of things.

00:16:07.370 --> 00:16:09.060
But there's a number
of steps involved

00:16:09.060 --> 00:16:09.895
in each one of those things.

00:16:09.895 --> 00:16:10.561
And that's fine.

00:16:10.561 --> 00:16:11.850
It's on our phone.

00:16:11.850 --> 00:16:14.980
But for the app on the
watch and on Glass,

00:16:14.980 --> 00:16:16.410
it's got to be simpler.

00:16:16.410 --> 00:16:19.720
Remember, it's a device that's
microinteraction, glanceable.

00:16:19.720 --> 00:16:23.670
I should be able to set an
alarm on the go and be done.

00:16:23.670 --> 00:16:27.550
So for the watch, we're
going to use a voice command.

00:16:27.550 --> 00:16:29.920
Just a simple one--
OK Google, remind me.

00:16:29.920 --> 00:16:32.180
And I speak what I
want to be reminded.

00:16:32.180 --> 00:16:36.727
And for Glass, OK Glass, remind
me to bring my speaker notes.

00:16:36.727 --> 00:16:37.310
I did do that.

00:16:41.450 --> 00:16:44.160
And finally, we need a common
place to keep all of this data.

00:16:46.710 --> 00:16:49.310
And that's the App Engine
with Cloud Endpoints.

00:16:49.310 --> 00:16:54.590
So any time the GDK app on
Glass or the Android Wear

00:16:54.590 --> 00:16:58.332
app on the phone or on the
watch gets a new reminder,

00:16:58.332 --> 00:17:00.040
they're going to hit
that Cloud Endpoint,

00:17:00.040 --> 00:17:02.410
and it's going to
update our model.

00:17:02.410 --> 00:17:06.960
And then that model is going to
sync down to the phone via GCM

00:17:06.960 --> 00:17:10.129
so the phone always
has the latest alarms.

00:17:10.129 --> 00:17:11.670
You're going to see
why, in a moment,

00:17:11.670 --> 00:17:13.629
it's the phone that's
keeping the reminders.

00:17:17.800 --> 00:17:23.803
To receive from anywhere, we're
going to use Android Wear.

00:17:23.803 --> 00:17:26.319
This is the simplest part.

00:17:26.319 --> 00:17:28.770
We want to let the user
know of the reminder.

00:17:28.770 --> 00:17:31.270
We're going to send a
notification on the phone.

00:17:31.270 --> 00:17:33.139
That's why it has all
the reminders on it.

00:17:33.139 --> 00:17:35.680
And then it's going to appear
on the watch or Glass, whatever

00:17:35.680 --> 00:17:36.840
the user has on them.

00:17:36.840 --> 00:17:39.394
You dismiss on any
one of those devices,

00:17:39.394 --> 00:17:40.560
and it dismisses everywhere.

00:17:48.480 --> 00:17:50.315
One last step.

00:17:50.315 --> 00:17:52.190
Just so you know that
you can add more pieces

00:17:52.190 --> 00:17:54.160
and build onto this
basic functionality

00:17:54.160 --> 00:17:55.830
is to make it location aware.

00:17:55.830 --> 00:17:57.640
So when the user
sets the reminder,

00:17:57.640 --> 00:18:00.070
we can give them an option
for a particular place.

00:18:00.070 --> 00:18:03.520
Like, remember to get the bacon
salad, because it was awesome,

00:18:03.520 --> 00:18:06.360
next time I'm here.

00:18:06.360 --> 00:18:08.940
When the user sets
that reminder,

00:18:08.940 --> 00:18:10.290
we'll give them that option.

00:18:10.290 --> 00:18:13.220
And then the device is going
to pull GPS from somewhere.

00:18:13.220 --> 00:18:16.140
The watch will pull it from
the phone and from Glass.

00:18:16.140 --> 00:18:18.060
There's a location
service that is actually

00:18:18.060 --> 00:18:19.143
pulling it from the phone.

00:18:19.143 --> 00:18:21.190
So the phone is going
to keep the GPS.

00:18:21.190 --> 00:18:23.790
And then it's also going
to hold the geofence.

00:18:23.790 --> 00:18:26.800
So when the user enters
that geofence again,

00:18:26.800 --> 00:18:28.800
then again it will
send out the reminder,

00:18:28.800 --> 00:18:32.444
and it will propagate
to all the devices.

00:18:32.444 --> 00:18:34.860
What I love about this example
is that each of these steps

00:18:34.860 --> 00:18:37.670
seems like they're going to be
complex, but two slides later,

00:18:37.670 --> 00:18:38.460
it's simple.

00:18:38.460 --> 00:18:40.420
It's easy to do.

00:18:40.420 --> 00:18:43.800
We can set from anywhere
by just having an APK

00:18:43.800 --> 00:18:45.260
on each one of
these devices that

00:18:45.260 --> 00:18:47.230
can accept the
data from the user

00:18:47.230 --> 00:18:48.530
and send it up to the cloud.

00:18:48.530 --> 00:18:49.980
We can receive
that from anywhere

00:18:49.980 --> 00:18:51.771
by just sending a
notification on the phone

00:18:51.771 --> 00:18:54.620
and relying on Android Wear
to get that to the user.

00:18:54.620 --> 00:18:57.770
And it can be location aware
by just attaching some GPS

00:18:57.770 --> 00:19:01.780
when we hit the Cloud
Endpoint with that reminder.

00:19:06.490 --> 00:19:11.150
A few things to remember--
just a couple quick last notes.

00:19:11.150 --> 00:19:15.450
First off-- this
is important, too.

00:19:15.450 --> 00:19:17.260
We just talked about
building something.

00:19:17.260 --> 00:19:19.970
We spent a lot of time thinking
about the design just now.

00:19:19.970 --> 00:19:21.530
We would then go
into development.

00:19:21.530 --> 00:19:24.090
We always kind of
hope that our time

00:19:24.090 --> 00:19:26.727
looks like this-- lots
of time for development,

00:19:26.727 --> 00:19:28.560
little bit of time for
debugging at the end.

00:19:28.560 --> 00:19:30.630
You know as well
as I do, it usually

00:19:30.630 --> 00:19:31.820
actually looks like this.

00:19:31.820 --> 00:19:33.810
We need a lot of
time for debugging.

00:19:33.810 --> 00:19:39.120
But on wearable devices,
you have a new piece

00:19:39.120 --> 00:19:43.310
of that pie, which is
testing or UX iteration.

00:19:43.310 --> 00:19:46.130
Now, you're probably doing
this a lot on your applications

00:19:46.130 --> 00:19:46.890
already.

00:19:46.890 --> 00:19:50.180
But if you're not or you're not
doing it much, for wearables,

00:19:50.180 --> 00:19:54.247
be prepared for this to be a
large portion of your time.

00:19:54.247 --> 00:19:56.330
And the reason is because
when you design the user

00:19:56.330 --> 00:19:58.950
interface or a service that
goes across all these devices,

00:19:58.950 --> 00:20:00.820
you have an idea of
how it will work.

00:20:00.820 --> 00:20:03.367
But you don't know for
sure until you try it

00:20:03.367 --> 00:20:04.950
while you're walking
across the street

00:20:04.950 --> 00:20:07.080
or on the weekend at your
niece's birthday party.

00:20:07.080 --> 00:20:10.449
You can't just test it
sitting down at your desk

00:20:10.449 --> 00:20:11.740
in the middle of the work week.

00:20:15.310 --> 00:20:19.180
And on the same note, or
a similar one at least,

00:20:19.180 --> 00:20:21.390
these devices are
fundamentally different in how

00:20:21.390 --> 00:20:23.140
the user uses them.

00:20:23.140 --> 00:20:24.790
That's why you have to test.

00:20:24.790 --> 00:20:26.965
We should also
think ahead of time,

00:20:26.965 --> 00:20:28.590
know that you're
going to have to build

00:20:28.590 --> 00:20:29.760
a different experience.

00:20:29.760 --> 00:20:33.780
You can't just stamp out a
service from the phone on Glass

00:20:33.780 --> 00:20:36.930
or on a watch and just have it
work the way you want it to.

00:20:36.930 --> 00:20:38.720
You have to rethink
it a little bit.

00:20:38.720 --> 00:20:41.510
What is it about the watch or
the Glass that you couldn't

00:20:41.510 --> 00:20:45.161
do before that now you
can that will come alive

00:20:45.161 --> 00:20:46.035
on these new devices?

00:20:49.100 --> 00:20:51.520
We did not take the launcher
and just put it on the watch,

00:20:51.520 --> 00:20:52.228
a bunch of icons.

00:20:52.228 --> 00:20:55.420
That wouldn't make sense.

00:20:55.420 --> 00:20:59.050
The user can ask for things,
or they can be given things.

00:20:59.050 --> 00:21:02.440
This service should flow
from one device to the other,

00:21:02.440 --> 00:21:06.160
because it's about the user's
experience across devices, not

00:21:06.160 --> 00:21:08.930
just any one device.

00:21:08.930 --> 00:21:10.430
Because at the end
of the day, we're

00:21:10.430 --> 00:21:15.440
building for people, not
for technology-- people

00:21:15.440 --> 00:21:18.240
out living their dreams
or having adventures.

00:21:18.240 --> 00:21:22.020
And our job is to help them
have those adventures, only

00:21:22.020 --> 00:21:23.550
richer, more fun.

00:21:28.280 --> 00:21:29.830
We have some
documentation online.

00:21:29.830 --> 00:21:31.060
Hope you check it out.

00:21:31.060 --> 00:21:33.100
And of course, stay in
this room and stayed

00:21:33.100 --> 00:21:36.820
tuned to this channel
for the next session,

00:21:36.820 --> 00:21:38.260
designing for wearables.

00:21:38.260 --> 00:21:41.040
I talked a lot about a
rather simple example,

00:21:41.040 --> 00:21:43.180
just to describe how
the pieces fit together.

00:21:43.180 --> 00:21:45.150
They're going to talk
more about the design

00:21:45.150 --> 00:21:50.360
of each one of those pieces to
take them to the next level.

00:21:50.360 --> 00:21:52.654
Thank you very much.

00:21:52.654 --> 00:21:56.070
[APPLAUSE]

00:21:59.720 --> 00:22:02.774
So, I do have some
time for questions.

00:22:02.774 --> 00:22:04.940
In case I answered them
all, which would be OK, too.

00:22:04.940 --> 00:22:08.290
But I believe there's
microphones around here.

00:22:08.290 --> 00:22:11.840
There's a microphone stand
there with a droopy microphone,

00:22:11.840 --> 00:22:12.590
but it's on there.

00:22:12.590 --> 00:22:14.450
If you could go up there,
that way the people

00:22:14.450 --> 00:22:16.783
watching the live stream can
hear your question as well.

00:22:16.783 --> 00:22:19.170
That would be great.

00:22:19.170 --> 00:22:20.285
AUDIENCE: Hello.

00:22:20.285 --> 00:22:21.201
TIMOTHY JORDAN: Hello.

00:22:21.201 --> 00:22:23.740
AUDIENCE: If you have Google
Glass and Android Wear

00:22:23.740 --> 00:22:27.470
at the same time,
what authentication

00:22:27.470 --> 00:22:30.330
would behave like?

00:22:30.330 --> 00:22:35.370
So you'll get pinged on
both of them, or on the Wear

00:22:35.370 --> 00:22:37.530
or on the Glass?

00:22:37.530 --> 00:22:39.237
How are we are
expecting to do that?

00:22:39.237 --> 00:22:41.070
TIMOTHY JORDAN: Yeah,
it's a great question.

00:22:41.070 --> 00:22:45.400
I think we are all just
starting to explore this area.

00:22:45.400 --> 00:22:48.090
So it's a rather simple
action right now,

00:22:48.090 --> 00:22:50.480
is that if there's a
notification on the phone,

00:22:50.480 --> 00:22:52.435
it gets sent to the
wearable devices as well.

00:22:52.435 --> 00:22:54.310
And the nice thing about
the wearable devices

00:22:54.310 --> 00:22:55.595
is it's a rather
subtle notification

00:22:55.595 --> 00:22:57.550
that the user can easily
ignore-- just a buzz

00:22:57.550 --> 00:22:59.840
on the wrist or a ding on Glass.

00:22:59.840 --> 00:23:01.847
And when a notification
is dismissed

00:23:01.847 --> 00:23:04.430
on any of those devices, it just
sort of goes away everywhere.

00:23:04.430 --> 00:23:04.985
AUDIENCE: OK.

00:23:04.985 --> 00:23:05.485
Thank you.

00:23:10.241 --> 00:23:12.400
AUDIENCE: Question.

00:23:12.400 --> 00:23:14.700
What about group notifications?

00:23:14.700 --> 00:23:18.440
Say you go out hiking
or biking on a group,

00:23:18.440 --> 00:23:21.890
and you want to notify the
group of a change of plans.

00:23:21.890 --> 00:23:27.300
And they're all wearing
a watch, and some of them

00:23:27.300 --> 00:23:29.660
are ahead of the pack.

00:23:29.660 --> 00:23:33.917
Is there a group
notification functionality?

00:23:33.917 --> 00:23:36.250
TIMOTHY JORDAN: I'm a little
unclear what you're asking.

00:23:36.250 --> 00:23:39.100
So you're saying you have
multiple users, multiple phones

00:23:39.100 --> 00:23:41.913
and wear devices, and you want
a send a notification out to all

00:23:41.913 --> 00:23:42.080
of them.

00:23:42.080 --> 00:23:42.192
AUDIENCE: Right.

00:23:42.192 --> 00:23:43.734
And maybe they're
using the same app.

00:23:43.734 --> 00:23:44.608
TIMOTHY JORDAN: Yeah.

00:23:44.608 --> 00:23:46.530
So this is a great
example of using something

00:23:46.530 --> 00:23:50.000
like that distributed MVC
model, only you're saving data

00:23:50.000 --> 00:23:51.740
for the group,
not just the user.

00:23:51.740 --> 00:23:54.230
So when you sync it back
down to the phone via GCM,

00:23:54.230 --> 00:23:56.250
you're going to sync
data from that group,

00:23:56.250 --> 00:23:58.250
and then all the phones
will be able to push out

00:23:58.250 --> 00:23:59.680
the notification to
that particular user.

00:23:59.680 --> 00:24:01.180
AUDIENCE: And
everybody will get it.

00:24:01.180 --> 00:24:02.420
OK, thank you.

00:24:02.420 --> 00:24:04.610
AUDIENCE: Hi.

00:24:04.610 --> 00:24:10.050
I have a question more towards
the philosophy of wearables.

00:24:10.050 --> 00:24:16.120
We design apps, and we do
design a lot of apps for Android

00:24:16.120 --> 00:24:17.930
and things like that.

00:24:17.930 --> 00:24:20.900
But the problem is,
these apps I don't

00:24:20.900 --> 00:24:24.390
see being used by people who
are physically disabled--

00:24:24.390 --> 00:24:28.350
or for example, a person who
walks in the road who is blind.

00:24:28.350 --> 00:24:31.860
I don't think we are
teaching to that level still.

00:24:31.860 --> 00:24:34.470
Although we have come
along way by building apps,

00:24:34.470 --> 00:24:36.450
by building the app
store, et cetera,

00:24:36.450 --> 00:24:39.070
now since we are just getting
started with variables,

00:24:39.070 --> 00:24:44.010
how do we ensure that
we do build specifically

00:24:44.010 --> 00:24:45.110
for this set of people?

00:24:45.110 --> 00:24:48.100
How we as developers
can contribute,

00:24:48.100 --> 00:24:53.100
and how, from your side, you can
ensure that this thing happens

00:24:53.100 --> 00:24:55.437
and it reaches to people?

00:24:55.437 --> 00:24:57.395
TIMOTHY JORDAN: So I
think what you're asking--

00:24:57.395 --> 00:24:58.800
and stay at the mic
just for a moment

00:24:58.800 --> 00:25:01.070
so I can be sure about this--
is it's really a distribution

00:25:01.070 --> 00:25:01.600
question.

00:25:01.600 --> 00:25:03.330
Once we build a
service-- and you're

00:25:03.330 --> 00:25:07.410
saying in particular services
for disabled people--

00:25:07.410 --> 00:25:09.760
how do we reach that
audience, because you're

00:25:09.760 --> 00:25:11.970
having a challenge
reaching that audience?

00:25:11.970 --> 00:25:14.910
And this isn't
really a new problem.

00:25:14.910 --> 00:25:16.570
And I'm not an expert
on distribution,

00:25:16.570 --> 00:25:18.310
so I don't know how much I'm
going to be able to help you.

00:25:18.310 --> 00:25:20.290
But I would use your
app stores, and I

00:25:20.290 --> 00:25:22.216
would evangelize with
those communities.

00:25:22.216 --> 00:25:25.267
AUDIENCE: Thank you.

00:25:25.267 --> 00:25:27.225
AUDIENCE: Thank you, Tim,
for the presentation.

00:25:27.225 --> 00:25:30.100
TIMOTHY JORDAN: You're welcome.

00:25:30.100 --> 00:25:31.400
AUDIENCE: Question.

00:25:31.400 --> 00:25:35.930
When we use Android Wear, we
send notification to our user,

00:25:35.930 --> 00:25:36.620
right?

00:25:36.620 --> 00:25:38.300
And they will see
that notification,

00:25:38.300 --> 00:25:39.840
or they could see
the notification

00:25:39.840 --> 00:25:41.560
in any device they have.

00:25:41.560 --> 00:25:44.370
What if we want to
target a specific device?

00:25:44.370 --> 00:25:46.880
Like, we have an app in
which it doesn't make sense

00:25:46.880 --> 00:25:50.390
to send a notification to the
phone, but only to the watch.

00:25:50.390 --> 00:25:52.850
And you don't want to send
notification to the Glass

00:25:52.850 --> 00:25:53.410
as well.

00:25:53.410 --> 00:25:53.630
TIMOTHY JORDAN: Yeah.

00:25:53.630 --> 00:25:54.710
That's a great question.

00:25:54.710 --> 00:25:57.690
So right now, Android Wear
sends the notification out

00:25:57.690 --> 00:25:59.946
to whatever wearable
that the user is using.

00:25:59.946 --> 00:26:01.570
So if they're using
multiple wearables,

00:26:01.570 --> 00:26:03.130
it'll go to all of them.

00:26:03.130 --> 00:26:04.740
The nice thing about
the notifications

00:26:04.740 --> 00:26:06.640
is that they're
relatively easy to ignore,

00:26:06.640 --> 00:26:08.181
so you can kind of
just pay attention

00:26:08.181 --> 00:26:09.730
to where your attention is.

00:26:09.730 --> 00:26:13.010
However, there are ways where
you can have a notification

00:26:13.010 --> 00:26:14.510
just on a device
if that's really

00:26:14.510 --> 00:26:17.380
important to your service and
you want to build it today.

00:26:17.380 --> 00:26:19.540
Even in this example,
you've got a GDK app,

00:26:19.540 --> 00:26:22.180
and you've got an APK
on the Android Wear

00:26:22.180 --> 00:26:23.600
app that's on the watch.

00:26:23.600 --> 00:26:26.320
And both of those can
communicate to the phone

00:26:26.320 --> 00:26:28.420
and deliver
notifications to the user

00:26:28.420 --> 00:26:31.890
directly rather than using
the Android Wear Notification

00:26:31.890 --> 00:26:32.610
Service.

00:26:32.610 --> 00:26:35.230
In that case, you'd be able to
choose which device you want

00:26:35.230 --> 00:26:37.080
to have a notification
and which you don't.

00:26:37.080 --> 00:26:38.600
AUDIENCE: Makes sense.

00:26:38.600 --> 00:26:40.460
Second question, very quickly.

00:26:40.460 --> 00:26:40.690
TIMOTHY JORDAN: Second question.

00:26:40.690 --> 00:26:41.550
Yeah, that's fine.

00:26:41.550 --> 00:26:42.216
AUDIENCE: Sorry?

00:26:42.216 --> 00:26:46.780
So for Glass now, we have
initially the Mirror API,

00:26:46.780 --> 00:26:49.700
then we have a GDK,
and now, happily, we're

00:26:49.700 --> 00:26:52.530
going to have the Android Wear.

00:26:52.530 --> 00:26:56.930
So are the three platforms or
the three ways of developing

00:26:56.930 --> 00:26:59.410
apps are going to be available
for Glass in the future?

00:26:59.410 --> 00:27:02.350
Or should we expect
to just focus

00:27:02.350 --> 00:27:05.000
on Android Wear and
neglect the others?

00:27:05.000 --> 00:27:08.152
What's going to be the preferred
way of developing for Glass?

00:27:08.152 --> 00:27:09.610
TIMOTHY JORDAN:
So, I will give you

00:27:09.610 --> 00:27:11.360
a general answer and
a specific answer--

00:27:11.360 --> 00:27:13.574
and a general answer that
applies to this question.

00:27:13.574 --> 00:27:15.990
Any other "what's going to
happen in the future" question,

00:27:15.990 --> 00:27:18.070
as a policy, I don't
comment on anything

00:27:18.070 --> 00:27:20.220
that might happen in the future.

00:27:20.220 --> 00:27:21.470
There's some difficulty there.

00:27:21.470 --> 00:27:24.060
But what I can tell you is
that the engineering and design

00:27:24.060 --> 00:27:25.750
teams for both
Android Wear and Glass

00:27:25.750 --> 00:27:27.810
work very closely
together, and our goal

00:27:27.810 --> 00:27:30.185
is for all of this stuff to
work really well together.

00:27:30.185 --> 00:27:32.888
AUDIENCE: Thank you.

00:27:32.888 --> 00:27:36.410
AUDIENCE: What happens with
persistent notifications

00:27:36.410 --> 00:27:37.450
on Wear?

00:27:37.450 --> 00:27:39.065
Say, for instance,
you have a battery

00:27:39.065 --> 00:27:41.780
notifier in your
notification bar

00:27:41.780 --> 00:27:44.067
or some weather apps have
weather or what have you.

00:27:44.067 --> 00:27:46.400
TIMOTHY JORDAN: I don't know
the answer to that offhand.

00:27:46.400 --> 00:27:48.132
There is a more deeply
technical session

00:27:48.132 --> 00:27:50.590
on Android Wear where you could
ask some specific questions

00:27:50.590 --> 00:27:54.660
like that tomorrow, Android Wear
From A Developer's Perspective.

00:27:54.660 --> 00:27:56.175
Or if you ask me
online later, I'll

00:27:56.175 --> 00:27:57.300
look up the answer for you.

00:27:57.300 --> 00:27:59.530
AUDIENCE: Thanks.

00:27:59.530 --> 00:28:02.320
AUDIENCE: Beyond
the basic interface,

00:28:02.320 --> 00:28:03.930
what kind of
opportunities will there

00:28:03.930 --> 00:28:06.974
be to fully customize
the screen for wearables?

00:28:06.974 --> 00:28:08.640
TIMOTHY JORDAN: That's
a great question.

00:28:08.640 --> 00:28:12.180
So again, in this
example, it was simple.

00:28:12.180 --> 00:28:14.390
However, the GDK
app-- and again,

00:28:14.390 --> 00:28:18.400
the APK on the Android
Wear app for the watch--

00:28:18.400 --> 00:28:21.250
are both code running
on the device.

00:28:21.250 --> 00:28:23.130
And both allow you
to do full screen

00:28:23.130 --> 00:28:24.500
UIs that are fully custom.

00:28:28.901 --> 00:28:32.020
AUDIENCE: The new
devices for Android

00:28:32.020 --> 00:28:37.095
Wear, they introduce new
possibilities of interaction.

00:28:37.095 --> 00:28:41.526
So do you have anything
regarding gesture recognition?

00:28:41.526 --> 00:28:44.980
So let's say, recognizing
the user is looking

00:28:44.980 --> 00:28:47.350
at the watch or
something of that sort.

00:28:47.350 --> 00:28:49.180
Lifting the arm
and looking at it,

00:28:49.180 --> 00:28:52.060
or doing other types of
gestures with the hand.

00:28:52.060 --> 00:28:53.767
Is that something that--

00:28:53.767 --> 00:28:55.850
TIMOTHY JORDAN: So there
is some of that built in.

00:28:55.850 --> 00:28:57.516
And as you heard in
the keynote earlier,

00:28:57.516 --> 00:29:00.460
that most of the APIs on Android
are also available for the app

00:29:00.460 --> 00:29:02.760
that you build that
runs on the wearable.

00:29:02.760 --> 00:29:05.565
So there's a lot of that
stuff that you can do already.

00:29:05.565 --> 00:29:07.490
But stay tuned for some
more examples where

00:29:07.490 --> 00:29:08.948
we can examine that
in more detail.

00:29:12.146 --> 00:29:13.770
AUDIENCE: So, sort
of expanding on that

00:29:13.770 --> 00:29:16.680
point, how do you see
gestures and voice recognition

00:29:16.680 --> 00:29:20.470
working together or comingling
in a unified experience?

00:29:20.470 --> 00:29:22.870
TIMOTHY JORDAN: That's a
great question as well.

00:29:22.870 --> 00:29:25.100
It's interesting that--
and you should definitely

00:29:25.100 --> 00:29:27.470
stay for the designing
section next.

00:29:27.470 --> 00:29:29.890
They'll go into a little
bit more detail about this.

00:29:29.890 --> 00:29:33.937
Different situations work well
for each of those instances.

00:29:33.937 --> 00:29:36.270
Sometimes just being able to
say something really quick,

00:29:36.270 --> 00:29:37.950
like remind me to, makes sense.

00:29:37.950 --> 00:29:40.550
Trying to input that through
a gesture wouldn't make sense.

00:29:40.550 --> 00:29:41.770
But then on the
other hand, you'll

00:29:41.770 --> 00:29:43.190
notice when you
get a phone call,

00:29:43.190 --> 00:29:45.860
just swiping across the screen
is really the right thing

00:29:45.860 --> 00:29:48.730
to do for a watch.

00:29:48.730 --> 00:29:51.440
On Glass you can do it through
gesture or through voice.

00:29:51.440 --> 00:29:53.720
So in many ways, you're
giving the user the option.

00:29:53.720 --> 00:29:56.980
And in other cases, there
is sort of a clear winner.

00:29:56.980 --> 00:29:59.520
There are gotchas in each case.

00:29:59.520 --> 00:30:02.250
So for example, if you're
using head gestures

00:30:02.250 --> 00:30:04.132
and the user happens to
be walking somewhere,

00:30:04.132 --> 00:30:06.590
there's certain head gestures
that work better than others.

00:30:06.590 --> 00:30:09.020
So for example, looking
up and then looking down

00:30:09.020 --> 00:30:10.140
works pretty good.

00:30:10.140 --> 00:30:12.900
Trying to scroll a list
or scroll horizontally

00:30:12.900 --> 00:30:14.080
would be more difficult.

00:30:14.080 --> 00:30:16.900
So those are the kinds of
things you need to think about.

00:30:16.900 --> 00:30:19.520
But all of those will
become apparent as soon

00:30:19.520 --> 00:30:21.470
as you test it in
different situations.

00:30:21.470 --> 00:30:25.060
AUDIENCE: And do you see
any implication or expansion

00:30:25.060 --> 00:30:26.770
to context-aware gestures?

00:30:26.770 --> 00:30:30.190
So you have
essentially a gesture

00:30:30.190 --> 00:30:33.910
set to your specific location
or in your environment

00:30:33.910 --> 00:30:36.720
so that those similar
movements mean different things

00:30:36.720 --> 00:30:38.846
in different
scenarios or spaces?

00:30:38.846 --> 00:30:40.720
TIMOTHY JORDAN: I think
that sounds very cool

00:30:40.720 --> 00:30:43.303
and that you should definitely
explore that with the platform.

00:30:43.303 --> 00:30:46.910
AUDIENCE: Come talk to me after.

00:30:46.910 --> 00:30:47.841
AUDIENCE: Hi, Timothy.

00:30:47.841 --> 00:30:48.340
Great talk.

00:30:48.340 --> 00:30:51.320
Very excited about Android
Wear coming to Glass.

00:30:51.320 --> 00:30:51.820
Question.

00:30:51.820 --> 00:30:55.690
Up to this point, the timeline
has sort of been a chronology.

00:30:55.690 --> 00:30:58.590
And the cards that are to
the left of the home screen

00:30:58.590 --> 00:31:00.790
have sort of been
up-and-coming things.

00:31:00.790 --> 00:31:03.600
So Android Wear
notifications, at least how

00:31:03.600 --> 00:31:05.610
they've been shown
on watches, are

00:31:05.610 --> 00:31:07.750
things that you see
once and then dismiss,

00:31:07.750 --> 00:31:10.670
which is a little different than
the current paradigm for Glass

00:31:10.670 --> 00:31:11.690
timeline cards.

00:31:11.690 --> 00:31:14.730
They don't really get to dismiss
unless you actually go through

00:31:14.730 --> 00:31:15.830
and delete them.

00:31:15.830 --> 00:31:18.530
So I guess I'm wondering,
is this changing

00:31:18.530 --> 00:31:21.620
the purpose of the
timeline in a way,

00:31:21.620 --> 00:31:25.680
or how do you see that changing
or being the same in terms

00:31:25.680 --> 00:31:27.394
of the interaction
with these cards?

00:31:27.394 --> 00:31:29.060
TIMOTHY JORDAN: So
I'm going to give you

00:31:29.060 --> 00:31:30.710
that same general answer before.

00:31:30.710 --> 00:31:32.597
But again, two
more specific ones.

00:31:32.597 --> 00:31:34.180
General, I can't
really talk about how

00:31:34.180 --> 00:31:35.830
this is going to
change in the future.

00:31:35.830 --> 00:31:37.840
The specific one
is the four guys

00:31:37.840 --> 00:31:40.090
that are going to be on the
stage in the next session,

00:31:40.090 --> 00:31:43.510
they're designers from teams
of both Android Wear and Glass.

00:31:43.510 --> 00:31:45.429
They might have
some more insight.

00:31:45.429 --> 00:31:46.970
Another specific
answer I'll give you

00:31:46.970 --> 00:31:48.594
is that when you do
get an Android Wear

00:31:48.594 --> 00:31:50.470
notification on
Glass, we'll always

00:31:50.470 --> 00:31:52.930
include a Dismiss menu item.

00:31:52.930 --> 00:31:53.800
AUDIENCE: OK.

00:31:53.800 --> 00:31:56.815
Great, thanks.

00:31:56.815 --> 00:31:58.625
AUDIENCE: Hi, Timothy.

00:31:58.625 --> 00:31:59.340
I had a question.

00:31:59.340 --> 00:32:01.820
You were talking about
the kind of maintaining

00:32:01.820 --> 00:32:03.700
a similar experience
across different types

00:32:03.700 --> 00:32:06.130
of wearable devices.

00:32:06.130 --> 00:32:08.790
So with Glass and
upcoming with Wear,

00:32:08.790 --> 00:32:11.895
we're working with both
gestures and voice control.

00:32:11.895 --> 00:32:15.030
Do you see in the future
with the new wearable devices

00:32:15.030 --> 00:32:18.460
those remaining the
predominant form of interaction

00:32:18.460 --> 00:32:20.030
with your device,
or do you see maybe

00:32:20.030 --> 00:32:23.370
in the future we might have
different ways of interacting

00:32:23.370 --> 00:32:25.550
or focusing around
the same thing?

00:32:25.550 --> 00:32:27.830
TIMOTHY JORDAN: Yeah, if I'm
doing the hand wavy, what

00:32:27.830 --> 00:32:30.380
do I think wearable
computing is all about,

00:32:30.380 --> 00:32:32.470
I think all those
things are important.

00:32:32.470 --> 00:32:34.760
I also think context
is really important--

00:32:34.760 --> 00:32:36.950
where the user is, what
they're doing right now,

00:32:36.950 --> 00:32:38.530
what they're doing next.

00:32:38.530 --> 00:32:40.680
And sometimes
almost as important

00:32:40.680 --> 00:32:43.265
as when they invoke
a voice command.

00:32:43.265 --> 00:32:44.100
AUDIENCE: All right.

00:32:44.100 --> 00:32:44.933
Thank you very much.

00:32:44.933 --> 00:32:47.290
TIMOTHY JORDAN: You're welcome.

00:32:47.290 --> 00:32:49.630
AUDIENCE: After
Google Wear supports

00:32:49.630 --> 00:32:55.150
Android Wear notification, is
Mirror API still supported?

00:32:55.150 --> 00:32:58.115
And do you think they conflict?

00:32:58.115 --> 00:32:59.572
Or is it still useful?

00:32:59.572 --> 00:33:02.030
TIMOTHY JORDAN: I don't think
any of these things conflict.

00:33:02.030 --> 00:33:05.390
We're one big happy family.

00:33:05.390 --> 00:33:08.197
And Mirror API is
certainly alive and well,

00:33:08.197 --> 00:33:09.780
and there's Glassware
that I'm running

00:33:09.780 --> 00:33:12.260
today that uses it that
I think is great for it.

00:33:12.260 --> 00:33:14.620
For example, New York
Times uses the Mirror API.

00:33:14.620 --> 00:33:15.570
So does CNN.

00:33:15.570 --> 00:33:17.660
And just for sending a
timeline item to Glass,

00:33:17.660 --> 00:33:19.930
it's really a
stellar experience.

00:33:19.930 --> 00:33:22.270
How this stuff
evolves over time,

00:33:22.270 --> 00:33:24.010
I can't really
speak to the future.

00:33:24.010 --> 00:33:27.020
But we're always going to want
to make this stuff work better

00:33:27.020 --> 00:33:28.310
and better with each other.

00:33:28.310 --> 00:33:29.560
AUDIENCE: Thank you very much.

00:33:29.560 --> 00:33:31.145
TIMOTHY JORDAN: Yeah.

00:33:31.145 --> 00:33:32.130
AUDIENCE: Hi, Tim.

00:33:32.130 --> 00:33:33.960
First of all, awesome session.

00:33:33.960 --> 00:33:36.970
TIMOTHY JORDAN: Thank you.

00:33:36.970 --> 00:33:38.940
AUDIENCE: There are two
questions, actually.

00:33:38.940 --> 00:33:44.010
The first one is the app
discovery in the wearable.

00:33:44.010 --> 00:33:47.520
So like right now
in any phone, we

00:33:47.520 --> 00:33:49.290
go and have the grids of apps.

00:33:49.290 --> 00:33:53.120
So would the app discovery
be more context aware,

00:33:53.120 --> 00:33:57.210
or like user can just still
go through maybe smaller

00:33:57.210 --> 00:34:00.455
grids or different stuff or
have discovery in the wearable?

00:34:00.455 --> 00:34:02.830
TIMOTHY JORDAN: You know,
that's a really great question.

00:34:02.830 --> 00:34:05.069
You saw that slide
where I had the Launcher

00:34:05.069 --> 00:34:06.860
on the phone and the
Launcher on the Glass.

00:34:06.860 --> 00:34:08.250
That doesn't make sense.

00:34:08.250 --> 00:34:11.070
And both the Glass UX team
and the Android Wear team

00:34:11.070 --> 00:34:14.980
went away from the Launcher,
like this post-grid philosophy,

00:34:14.980 --> 00:34:15.480
if you will.

00:34:15.480 --> 00:34:17.120
No grid icons.

00:34:17.120 --> 00:34:18.644
When the user wants
to do something,

00:34:18.644 --> 00:34:20.060
when they want to
start an action,

00:34:20.060 --> 00:34:22.639
they use a voice command,
or they select that command

00:34:22.639 --> 00:34:25.040
from the Voice
Command Touch menu.

00:34:25.040 --> 00:34:29.644
And they're sort of given
contextually aware cards

00:34:29.644 --> 00:34:31.060
about information
that makes sense

00:34:31.060 --> 00:34:33.110
to them then and at that moment.

00:34:33.110 --> 00:34:35.489
So you're exactly right that
the Launcher is going away.

00:34:35.489 --> 00:34:39.159
And the base
philosophy in there is,

00:34:39.159 --> 00:34:41.900
what if we could reduce
almost to nothing

00:34:41.900 --> 00:34:44.159
the time between
intent and action?

00:34:44.159 --> 00:34:46.630
A Launcher implies--
I take out something,

00:34:46.630 --> 00:34:48.719
I look through stuff,
and I pick one.

00:34:48.719 --> 00:34:51.610
Whereas when I say, OK
Glass, get directions

00:34:51.610 --> 00:34:55.500
to the Museum of
Modern Art, it's done.

00:34:55.500 --> 00:34:57.340
AUDIENCE: Right.

00:34:57.340 --> 00:35:01.800
The reason of that question
was sometimes even on mobile,

00:35:01.800 --> 00:35:03.640
you have so many apps.

00:35:03.640 --> 00:35:07.490
So at one point, there
would be in Glassware too,

00:35:07.490 --> 00:35:10.420
the user would have too many
things that they think useful

00:35:10.420 --> 00:35:13.525
at times, but they
tend to forget, like,

00:35:13.525 --> 00:35:14.730
was it already there?

00:35:14.730 --> 00:35:19.480
So every time giving a single
command and browsing through,

00:35:19.480 --> 00:35:21.531
it's kind of a pain.

00:35:21.531 --> 00:35:24.031
TIMOTHY JORDAN: And that's of
course against that philosophy

00:35:24.031 --> 00:35:25.655
that I was talking
about earlier, which

00:35:25.655 --> 00:35:27.360
is what if we can
make all this simpler?

00:35:27.360 --> 00:35:30.320
What if we could give the user
all the value from technology

00:35:30.320 --> 00:35:31.800
but with none of the fuss?

00:35:31.800 --> 00:35:34.940
So I don't think our goal is
to fill the watch with lots

00:35:34.940 --> 00:35:37.600
of different things
that they may someday

00:35:37.600 --> 00:35:39.570
want to do, but to give
them the experiences

00:35:39.570 --> 00:35:40.990
that they need to do today.

00:35:40.990 --> 00:35:41.710
AUDIENCE: Cool.

00:35:41.710 --> 00:35:42.210
Thanks.

00:35:42.210 --> 00:35:45.970
And the second question
is-- for now, it's

00:35:45.970 --> 00:35:50.630
more adding to the design
questions previous folks had--

00:35:50.630 --> 00:35:53.940
there are guidelines
for Android app design,

00:35:53.940 --> 00:35:58.060
like nav bar and six-pack
designs and stuff.

00:35:58.060 --> 00:36:01.960
Is Android going to come
up with a suggested design?

00:36:01.960 --> 00:36:05.050
And there are, of course,
anti-design patterns.

00:36:05.050 --> 00:36:10.930
So are there any design
patterns to look forward

00:36:10.930 --> 00:36:11.870
for the wearables?

00:36:11.870 --> 00:36:14.756
Or as of now, developers and
designer have to figure it out?

00:36:14.756 --> 00:36:15.880
TIMOTHY JORDAN: Absolutely.

00:36:15.880 --> 00:36:18.046
There are design guidelines
available for both Glass

00:36:18.046 --> 00:36:20.820
and Android Wear, and you'll
find that they're very similar.

00:36:20.820 --> 00:36:22.500
And they give you a
lot of information--

00:36:22.500 --> 00:36:24.130
in fact, a very clear
road map of where

00:36:24.130 --> 00:36:25.180
to go with your design.

00:36:25.180 --> 00:36:26.930
So I'd look for that
on both the developer

00:36:26.930 --> 00:36:28.263
documentation for each of those.

00:36:28.263 --> 00:36:29.980
In fact, let me
back one slide just

00:36:29.980 --> 00:36:32.100
so you can remember
what those URLs are.

00:36:32.100 --> 00:36:35.032
If you add a slash design, I
think, to either one of these--

00:36:35.032 --> 00:36:37.490
but I know for Glass-- they'll
take you to the design page.

00:36:37.490 --> 00:36:38.896
AUDIENCE: Awesome.

00:36:38.896 --> 00:36:39.580
Thanks a lot.

00:36:39.580 --> 00:36:41.890
TIMOTHY JORDAN: You're welcome.

00:36:41.890 --> 00:36:44.830
AUDIENCE: So I could
imagine many apps wanting

00:36:44.830 --> 00:36:46.920
to implement wearable
notifications.

00:36:46.920 --> 00:36:50.215
Is there going to be a central
place that a user can subscribe

00:36:50.215 --> 00:36:52.880
and unsubscribe
to notifications,

00:36:52.880 --> 00:36:54.510
or is it on a per-app basis?

00:36:54.510 --> 00:36:56.570
And is there any way to
prioritize notifications

00:36:56.570 --> 00:36:58.810
so that they get the most
important ones first?

00:36:58.810 --> 00:37:00.994
TIMOTHY JORDAN: So
what will be available

00:37:00.994 --> 00:37:02.660
when you get your
Android Wear device up

00:37:02.660 --> 00:37:04.618
and running is that when
you have the companion

00:37:04.618 --> 00:37:06.715
app on the phone, you can
choose any application

00:37:06.715 --> 00:37:08.440
that you want to mute.

00:37:08.440 --> 00:37:10.510
Certainly a lot further
we could go with there.

00:37:10.510 --> 00:37:12.385
We'll just have to see
what the future holds.

00:37:12.385 --> 00:37:14.790
AUDIENCE: Thank you.

00:37:14.790 --> 00:37:15.840
AUDIENCE: Hi.

00:37:15.840 --> 00:37:19.820
Based on your example
for the reminder stuff,

00:37:19.820 --> 00:37:21.500
if I don't have
the phone with me,

00:37:21.500 --> 00:37:24.360
will it be able to create
an application that

00:37:24.360 --> 00:37:29.330
uses only the wearable device
that holds information in it

00:37:29.330 --> 00:37:32.255
and present or communicate
even with other devices

00:37:32.255 --> 00:37:32.880
than the phone?

00:37:32.880 --> 00:37:33.810
TIMOTHY JORDAN: That's
a good question.

00:37:33.810 --> 00:37:35.525
For the Android
Wear notifications,

00:37:35.525 --> 00:37:37.150
that requires the
phone, because that's

00:37:37.150 --> 00:37:38.816
where the notifications
are coming from.

00:37:38.816 --> 00:37:41.040
But if you have the
Android Wear app, which

00:37:41.040 --> 00:37:43.700
is an APK on the phone
and an APK on the watch,

00:37:43.700 --> 00:37:46.290
that would work on the watch
even in absence of the phone.

00:37:46.290 --> 00:37:48.779
And you'd want to build
your service in such a way

00:37:48.779 --> 00:37:51.070
that you'd still have that
capability if you wanted it.

00:37:51.070 --> 00:37:53.870
AUDIENCE: And connect the
watch with other devices

00:37:53.870 --> 00:37:55.080
other than the phone?

00:37:55.080 --> 00:37:56.280
TIMOTHY JORDAN: I don't
know that offhand.

00:37:56.280 --> 00:37:57.738
You'll have to stay
tuned for that.

00:38:00.190 --> 00:38:01.870
AUDIENCE: From a
user's perspective,

00:38:01.870 --> 00:38:05.090
it seems like there's a lot
of overlap and redundancy

00:38:05.090 --> 00:38:07.920
in functionality
between Glass devices

00:38:07.920 --> 00:38:13.510
and the Android Wear devices
that we've seen so far.

00:38:13.510 --> 00:38:15.770
Is the expectation that
the user is typically

00:38:15.770 --> 00:38:18.740
going to have one or the other,
or do we expect both of them

00:38:18.740 --> 00:38:21.140
to kind of work together
in a lot of cases?

00:38:21.140 --> 00:38:23.870
TIMOTHY JORDAN:
Gosh, I don't know.

00:38:23.870 --> 00:38:27.790
I mean, we do a lot of building
these things for users,

00:38:27.790 --> 00:38:29.500
but then we get to
learn how they're

00:38:29.500 --> 00:38:31.000
going to use them
when they actually

00:38:31.000 --> 00:38:32.020
get their hands on them.

00:38:32.020 --> 00:38:33.800
So we're going to
have to find out.

00:38:33.800 --> 00:38:35.214
I think with
wearable technology,

00:38:35.214 --> 00:38:36.880
one of the things
that we start to learn

00:38:36.880 --> 00:38:40.360
is once you do put the
human in that picture,

00:38:40.360 --> 00:38:42.950
there's a lot of personal
preferences involved.

00:38:42.950 --> 00:38:45.705
So we're just going to have
to see how that plays out.

00:38:48.664 --> 00:38:50.680
AUDIENCE: Two quick questions.

00:38:50.680 --> 00:38:55.140
The first, you had
talked about apps

00:38:55.140 --> 00:38:57.680
on the wearable
communicating with the phone.

00:38:57.680 --> 00:38:59.570
And there is
apparently structures

00:38:59.570 --> 00:39:01.080
for that in Android Wear.

00:39:01.080 --> 00:39:03.470
There's nothing like that
on Glass at the moment.

00:39:03.470 --> 00:39:06.670
Can we expect or
request that sort

00:39:06.670 --> 00:39:09.310
of data interchange platform?

00:39:09.310 --> 00:39:11.000
TIMOTHY JORDAN:
So there is a way

00:39:11.000 --> 00:39:13.130
for you to exchange
data over Bluetooth

00:39:13.130 --> 00:39:14.640
between Glass and the phone--

00:39:14.640 --> 00:39:15.925
TIMOTHY JORDAN: But you have
to roll your own, basically.

00:39:15.925 --> 00:39:16.799
TIMOTHY JORDAN: Yeah.

00:39:16.799 --> 00:39:18.071
It's not simple.

00:39:18.071 --> 00:39:20.320
As far as the future, what
we'd release in the future,

00:39:20.320 --> 00:39:22.085
of course I can't
comment on that.

00:39:22.085 --> 00:39:22.710
AUDIENCE: Sure.

00:39:22.710 --> 00:39:22.970
Consider it a request, then.

00:39:22.970 --> 00:39:24.000
TIMOTHY JORDAN: But I can say
that I've heard this feedback,

00:39:24.000 --> 00:39:25.950
and I definitely
appreciate the feedback.

00:39:25.950 --> 00:39:26.575
Thank you.

00:39:26.575 --> 00:39:28.140
AUDIENCE: Second
very quick question.

00:39:28.140 --> 00:39:30.890
What happened so your hat?

00:39:30.890 --> 00:39:34.090
TIMOTHY JORDAN: I left it.

00:39:34.090 --> 00:39:36.426
AUDIENCE: I can't be
the only one wondering.

00:39:36.426 --> 00:39:36.925
Thanks.

00:39:36.925 --> 00:39:38.549
TIMOTHY JORDAN: Some
days are hat days,

00:39:38.549 --> 00:39:40.430
and some days are
hatless days, I suppose.

00:39:40.430 --> 00:39:42.314
AUDIENCE: Thank you.

00:39:42.314 --> 00:39:43.250
AUDIENCE: [INAUDIBLE].

00:39:43.250 --> 00:39:45.340
TIMOTHY JORDAN: Thank you.

00:39:45.340 --> 00:39:49.750
AUDIENCE: Notifications with
media style allow you to play

00:39:49.750 --> 00:39:52.431
and pause things through
notifications like an app,

00:39:52.431 --> 00:39:52.930
right?

00:39:52.930 --> 00:39:53.500
TIMOTHY JORDAN: Uh-huh.

00:39:53.500 --> 00:39:54.530
AUDIENCE: I was
curious, is there

00:39:54.530 --> 00:39:56.970
any limitation within the API
or anything that stops you

00:39:56.970 --> 00:39:59.034
from building buttons
that do other things?

00:39:59.034 --> 00:40:00.700
TIMOTHY JORDAN: That's
a great question.

00:40:00.700 --> 00:40:02.033
I don't know the answer offhand.

00:40:02.033 --> 00:40:02.630
I'm sorry.

00:40:02.630 --> 00:40:05.490
What I can tell you is
that when you play or pause

00:40:05.490 --> 00:40:08.660
that notification on your phone,
it automatically just shows up

00:40:08.660 --> 00:40:10.130
that way on the Wear device.

00:40:10.130 --> 00:40:12.862
So if there is a way, then
that likely would as well.

00:40:12.862 --> 00:40:13.570
AUDIENCE: Thanks.

00:40:16.762 --> 00:40:18.750
AUDIENCE: Is there
a left eye version

00:40:18.750 --> 00:40:23.092
of the Google Glass for people
who are weak in the right eye?

00:40:23.092 --> 00:40:25.550
TIMOTHY JORDAN: And this is
the last question that we have.

00:40:25.550 --> 00:40:26.049
No.

00:40:26.049 --> 00:40:29.850
Glass is only available
on the right eye version.

00:40:29.850 --> 00:40:32.080
AUDIENCE: And there
is another question.

00:40:32.080 --> 00:40:34.454
I don't want to carry my
phone around everywhere.

00:40:34.454 --> 00:40:35.620
TIMOTHY JORDAN: What's that?

00:40:35.620 --> 00:40:38.119
AUDIENCE: I don't want to carry
the phone, the Android phone

00:40:38.119 --> 00:40:38.820
everywhere.

00:40:38.820 --> 00:40:43.970
I just want to carry my
watch and probably the Glass.

00:40:43.970 --> 00:40:48.204
Is there a way things can
work with just these two?

00:40:48.204 --> 00:40:50.120
TIMOTHY JORDAN: Well,
both those devices still

00:40:50.120 --> 00:40:51.570
work in absence of a phone.

00:40:51.570 --> 00:40:53.542
What doesn't work is
the notification service

00:40:53.542 --> 00:40:55.625
which is relaying from the
phone to those devices.

00:40:55.625 --> 00:40:58.192
So when the phone is not around,
it of course won't do that.

00:40:58.192 --> 00:41:00.150
But again, remember that
on both these devices,

00:41:00.150 --> 00:41:03.680
you can put APKs on them that
can run code on that device

00:41:03.680 --> 00:41:04.877
and work in on offline mode.

00:41:04.877 --> 00:41:07.210
So for example, with Glass,
one of my favorite Glassware

00:41:07.210 --> 00:41:08.630
is Word Lens.

00:41:08.630 --> 00:41:11.112
And it does translations
right in front of you

00:41:11.112 --> 00:41:12.620
of whatever you're looking at.

00:41:12.620 --> 00:41:14.495
And that works without
an internet connection

00:41:14.495 --> 00:41:16.102
and without the
phone being present.

00:41:16.102 --> 00:41:16.940
AUDIENCE: Thank you.

00:41:16.940 --> 00:41:18.716
TIMOTHY JORDAN: You're welcome.

00:41:18.716 --> 00:41:20.090
Thank you all so
much for coming.

00:41:20.090 --> 00:41:21.990
I really appreciate it.

