WEBVTT
Kind: captions
Language: en

00:00:00.150 --> 00:00:01.910
So, okay, so, how we, how we going to solve this?

00:00:01.910 --> 00:00:05.840
&gt;&gt; Okay, so, I guess the first thing to do is if you look at the

00:00:05.840 --> 00:00:09.400
table you have at the bottom, it tells us what the truth tables are for AND

00:00:09.400 --> 00:00:13.520
and XOR, alright? So, we know that Boolean

00:00:13.520 --> 00:00:18.060
functions, can all be represented as combinations of

00:00:18.060 --> 00:00:24.320
and or N not. So, I'm going to recommend you feel out that empty column with OR.

00:00:27.290 --> 00:00:29.330
&gt;&gt; So, OR is like that.

00:00:29.330 --> 00:00:31.810
&gt;&gt; Right. And you'll notice, if you look at AND OR and

00:00:31.810 --> 00:00:39.600
XOR that, OR looks just like XOR except ,at the very last row.

00:00:39.600 --> 00:00:42.360
&gt;&gt; In the second, okay good, uh-huh, and in that row.

00:00:42.360 --> 00:00:47.430
&gt;&gt; Right, and, AND on the other hand, tells us a one only on the

00:00:47.430 --> 00:00:52.570
last row. So what, I'm going to suggest that we really want that last node

00:00:52.570 --> 00:00:57.340
to do in your drawing, is to compute the or of X1 or X2.

00:00:58.340 --> 00:01:03.600
And produce the right answer, except in the case of the last row,

00:01:04.950 --> 00:01:10.170
which we only want to turn off when and happens to be true.

00:01:10.170 --> 00:01:15.280
So ,really what that node is, is computing or minus and.

00:01:15.280 --> 00:01:17.540
&gt;&gt; Alright, so how do we make this or minus and?

00:01:17.540 --> 00:01:20.470
So the way we did or before Well we did it a couple of different

00:01:20.470 --> 00:01:25.320
ways. But one is we gave weights of one on the two inputs. And then a

00:01:25.320 --> 00:01:28.230
threshold of one. And that made, ignoring

00:01:28.230 --> 00:01:30.180
everything else at the moment, this unit will

00:01:30.180 --> 00:01:33.980
now turn on if either x1 or x2 are on. And otherwise it will stay off.

00:01:33.980 --> 00:01:38.870
&gt;&gt; Right. So what's the worst case? The lowest value that you can

00:01:38.870 --> 00:01:42.460
get. Is when one of those is one and one of those is zero,

00:01:42.460 --> 00:01:46.460
which means that the, sum into those will be, in fact, one.

00:01:46.460 --> 00:01:47.580
&gt;&gt; Yeah.

00:01:47.580 --> 00:01:52.250
&gt;&gt; Right? So, if the AND comes out as being true, it's

00:01:52.250 --> 00:01:56.790
going to give us some positive value. So, if we just simply have

00:01:56.790 --> 00:02:01.990
a negative wait there, that will subtract out. Exactly in the

00:02:01.990 --> 00:02:07.470
case ,when AND is on. It's not going to quite give us the answer we

00:02:07.470 --> 00:02:09.695
want, but it's a good place to start to think about it.

00:02:09.695 --> 00:02:12.150
&gt;&gt; Alright, so like just a negative weight, like negative one.

00:02:12.150 --> 00:02:15.241
&gt;&gt; Mm-hmm.

00:02:15.241 --> 00:02:16.700
&gt;&gt; Alright. So does that work?

00:02:16.700 --> 00:02:18.360
&gt;&gt; Not quite.

00:02:18.360 --> 00:02:21.680
&gt;&gt; Alright, and why doesn't it work? Because if, well certainly when and

00:02:21.680 --> 00:02:24.350
is off then we really are just getting the or, that's all good.

00:02:24.350 --> 00:02:24.660
&gt;&gt; Yeah.

00:02:24.660 --> 00:02:28.330
&gt;&gt; But if both x1 and x2 are both on, then the sum here is

00:02:28.330 --> 00:02:32.440
going to be two minus the one that we get from the AND which is still one.

00:02:32.440 --> 00:02:33.860
&gt;&gt; So,

00:02:33.860 --> 00:02:35.250
minus one isn't enough?

00:02:35.250 --> 00:02:37.310
&gt;&gt; Minus with both, maybe we can do more than that.

00:02:37.310 --> 00:02:39.870
Maybe we can do minus two What happens if we do

00:02:39.870 --> 00:02:43.030
minus two? Then we've got ,X1 and X2 if they're both

00:02:43.030 --> 00:02:47.340
on, then we get a sum of one minus two plus

00:02:47.340 --> 00:02:50.120
one or zero. Which is less than our threshold so it

00:02:50.120 --> 00:02:53.720
will output zero. And in the other two cases, right, when

00:02:53.720 --> 00:02:55.750
and is off than it just acts like or. So this

00:02:55.750 --> 00:02:59.360
actually kind of does the right thing. Its actually OR minus kind of and

00:02:59.360 --> 00:03:00.849
times two. [LAUGH]

00:03:00.849 --> 00:03:02.740
&gt;&gt; Right. And there you go. And of

00:03:02.740 --> 00:03:04.730
course there's an infinite number of solutions to this.

