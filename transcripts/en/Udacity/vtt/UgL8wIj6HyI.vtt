WEBVTT
Kind: captions
Language: en

00:00:00.340 --> 00:00:01.730
And the answer here is the last two.

00:00:02.860 --> 00:00:05.570
The question of is a program a virus

00:00:05.570 --> 00:00:08.247
is a question about the program's
behavior as I've defined it.

00:00:09.330 --> 00:00:12.970
Also, some programs are viruses and
some aren't, so

00:00:12.970 --> 00:00:14.370
this can't be decided in general.

00:00:15.510 --> 00:00:20.080
We can look for specific viruses and we
can monitor the behavior of programs for

00:00:20.080 --> 00:00:21.970
suspicious activity.

00:00:21.970 --> 00:00:24.390
Doing this is a billion dollar industry.

00:00:24.390 --> 00:00:27.760
But we're never going to get
an all purpose virus detector.

00:00:27.760 --> 00:00:30.510
Nor am I ever going to be able
to write the perfect test code

00:00:30.510 --> 00:00:33.490
to see if the Turing machine that
you programmed to decide balance

00:00:33.490 --> 00:00:35.610
strings actually works.

00:00:35.610 --> 00:00:38.670
I can write test cases,
and detect common errors.

00:00:38.670 --> 00:00:41.370
But I could never decide
completely whether your programs

00:00:41.370 --> 00:00:42.770
are right or wrong.

00:00:42.770 --> 00:00:43.700
On the other hand,

00:00:43.700 --> 00:00:47.650
I can write a program to test whether
your reduction of HTM to the language

00:00:47.650 --> 00:00:52.490
of Turing machines that accept
nothing is decidable, I simply reject.

00:00:52.490 --> 00:00:57.700
Remember that no such reduction can
exist, because HTM is recognizable, and

00:00:57.700 --> 00:00:59.170
ETM is corecognizable.

00:01:00.200 --> 00:01:03.360
And lastly, this question about
whether a program will halt

00:01:03.360 --> 00:01:06.700
in 10 to the 200 steps is decidable.

00:01:06.700 --> 00:01:08.960
I just run the program for
up to that many steps.

00:01:10.000 --> 00:01:13.090
Of course that number is so large
that in practice, even on the fastest

00:01:13.090 --> 00:01:17.010
computers, the heat death of
the universe will have occurred by then.

00:01:17.010 --> 00:01:19.760
But nevertheless,
the question is decidable.

00:01:19.760 --> 00:01:23.180
The reason Rice's theorem doesn't
apply here is because this question

00:01:23.180 --> 00:01:26.390
is about machines, not about languages.

00:01:26.390 --> 00:01:29.710
The purpose of this quiz is not
to tell you that undecidability

00:01:29.710 --> 00:01:32.690
is a concept with no
practical implications.

00:01:32.690 --> 00:01:36.440
Rather, it is to help you to see
what it does and does not tell us.

00:01:37.440 --> 00:01:41.740
Just because a problem is decidable
doesn't mean that it's tractable, or

00:01:41.740 --> 00:01:42.790
practical to solve.

00:01:43.790 --> 00:01:47.740
Also, just because a question
is undecidable in general,

00:01:47.740 --> 00:01:51.410
doesn't mean that we can't write
programs to tackle specific cases,

00:01:51.410 --> 00:01:54.630
as we do everyday with malware
detection and software testing.

00:01:55.750 --> 00:02:00.000
It does however say that we should not
expect an all-purpose solution, and

00:02:00.000 --> 00:02:02.460
any attempt to achieve that
end is doomed to fail.

