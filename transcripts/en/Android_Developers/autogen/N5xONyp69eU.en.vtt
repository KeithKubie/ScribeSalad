WEBVTT
Kind: captions
Language: en

00:00:02.880 --> 00:00:09.830
[Music]

00:00:09.830 --> 00:00:09.840
 

00:00:09.840 --> 00:00:12.560
my name is Xavier decoy and my name is

00:00:12.560 --> 00:00:12.570
my name is Xavier decoy and my name is
 

00:00:12.570 --> 00:00:15.350
my name is Xavier decoy and my name is
Jerome do--she so today we're going to

00:00:15.350 --> 00:00:15.360
Jerome do--she so today we're going to
 

00:00:15.360 --> 00:00:17.210
Jerome do--she so today we're going to
talk about what's new in the Android

00:00:17.210 --> 00:00:17.220
talk about what's new in the Android
 

00:00:17.220 --> 00:00:20.179
talk about what's new in the Android
system since last year we're gonna start

00:00:20.179 --> 00:00:20.189
system since last year we're gonna start
 

00:00:20.189 --> 00:00:23.359
system since last year we're gonna start
with Bioware dependency management so

00:00:23.359 --> 00:00:23.369
with Bioware dependency management so
 

00:00:23.369 --> 00:00:26.000
with Bioware dependency management so
it's cheap last year in 300 in the fall

00:00:26.000 --> 00:00:26.010
it's cheap last year in 300 in the fall
 

00:00:26.010 --> 00:00:28.580
it's cheap last year in 300 in the fall
and you know the whole concept is that

00:00:28.580 --> 00:00:28.590
and you know the whole concept is that
 

00:00:28.590 --> 00:00:31.160
and you know the whole concept is that
all the value of a module can depend on

00:00:31.160 --> 00:00:31.170
all the value of a module can depend on
 

00:00:31.170 --> 00:00:33.080
all the value of a module can depend on
matching variants in another module so

00:00:33.080 --> 00:00:33.090
matching variants in another module so
 

00:00:33.090 --> 00:00:35.209
matching variants in another module so
debug depends on debug in a library and

00:00:35.209 --> 00:00:35.219
debug depends on debug in a library and
 

00:00:35.219 --> 00:00:37.639
debug depends on debug in a library and
deeper release the panel release and it

00:00:37.639 --> 00:00:37.649
deeper release the panel release and it
 

00:00:37.649 --> 00:00:39.590
deeper release the panel release and it
works well as long as you have matching

00:00:39.590 --> 00:00:39.600
works well as long as you have matching
 

00:00:39.600 --> 00:00:41.810
works well as long as you have matching
balance on both sides but when it

00:00:41.810 --> 00:00:41.820
balance on both sides but when it
 

00:00:41.820 --> 00:00:44.660
balance on both sides but when it
doesn't happen even though we we have a

00:00:44.660 --> 00:00:44.670
doesn't happen even though we we have a
 

00:00:44.670 --> 00:00:46.790
doesn't happen even though we we have a
DSL to help you fix the frame but we've

00:00:46.790 --> 00:00:46.800
DSL to help you fix the frame but we've
 

00:00:46.800 --> 00:00:48.860
DSL to help you fix the frame but we've
seen a lot of developer over the last

00:00:48.860 --> 00:00:48.870
seen a lot of developer over the last
 

00:00:48.870 --> 00:00:51.319
seen a lot of developer over the last
six nine months who just see you in your

00:00:51.319 --> 00:00:51.329
six nine months who just see you in your
 

00:00:51.329 --> 00:00:53.779
six nine months who just see you in your
message you know like this and just

00:00:53.779 --> 00:00:53.789
message you know like this and just
 

00:00:53.789 --> 00:00:55.520
message you know like this and just
don't know what to do with it so we

00:00:55.520 --> 00:00:55.530
don't know what to do with it so we
 

00:00:55.530 --> 00:00:57.680
don't know what to do with it so we
wanted to take a few minutes to explain

00:00:57.680 --> 00:00:57.690
wanted to take a few minutes to explain
 

00:00:57.690 --> 00:00:59.900
wanted to take a few minutes to explain
exactly what's going on and help you

00:00:59.900 --> 00:00:59.910
exactly what's going on and help you
 

00:00:59.910 --> 00:01:02.420
exactly what's going on and help you
solve such a problem so the first thing

00:01:02.420 --> 00:01:02.430
solve such a problem so the first thing
 

00:01:02.430 --> 00:01:04.160
solve such a problem so the first thing
to look at is does this line that say

00:01:04.160 --> 00:01:04.170
to look at is does this line that say
 

00:01:04.170 --> 00:01:06.620
to look at is does this line that say
could not resolve project library so

00:01:06.620 --> 00:01:06.630
could not resolve project library so
 

00:01:06.630 --> 00:01:08.570
could not resolve project library so
that's the project that publishes

00:01:08.570 --> 00:01:08.580
that's the project that publishes
 

00:01:08.580 --> 00:01:10.070
that's the project that publishes
artifact that you're trying to consume

00:01:10.070 --> 00:01:10.080
artifact that you're trying to consume
 

00:01:10.080 --> 00:01:12.320
artifact that you're trying to consume
and the project that's consuming it is

00:01:12.320 --> 00:01:12.330
and the project that's consuming it is
 

00:01:12.330 --> 00:01:13.850
and the project that's consuming it is
the one that says required by project

00:01:13.850 --> 00:01:13.860
the one that says required by project
 

00:01:13.860 --> 00:01:16.730
the one that says required by project
app and in the top right section you can

00:01:16.730 --> 00:01:16.740
app and in the top right section you can
 

00:01:16.740 --> 00:01:18.410
app and in the top right section you can
see it says you know the name of the

00:01:18.410 --> 00:01:18.420
see it says you know the name of the
 

00:01:18.420 --> 00:01:19.670
see it says you know the name of the
configuration that we are trying to

00:01:19.670 --> 00:01:19.680
configuration that we are trying to
 

00:01:19.680 --> 00:01:21.560
configuration that we are trying to
resolve which is staging runtime class

00:01:21.560 --> 00:01:21.570
resolve which is staging runtime class
 

00:01:21.570 --> 00:01:23.570
resolve which is staging runtime class
pass and it's always the name of the

00:01:23.570 --> 00:01:23.580
pass and it's always the name of the
 

00:01:23.580 --> 00:01:25.640
pass and it's always the name of the
valiant followed by compiler runtime

00:01:25.640 --> 00:01:25.650
valiant followed by compiler runtime
 

00:01:25.650 --> 00:01:27.859
valiant followed by compiler runtime
followed by class pass so here it's the

00:01:27.859 --> 00:01:27.869
followed by class pass so here it's the
 

00:01:27.869 --> 00:01:30.679
followed by class pass so here it's the
runtime class pass and the error is you

00:01:30.679 --> 00:01:30.689
runtime class pass and the error is you
 

00:01:30.689 --> 00:01:31.850
runtime class pass and the error is you
know unable to find a matching

00:01:31.850 --> 00:01:31.860
know unable to find a matching
 

00:01:31.860 --> 00:01:34.670
know unable to find a matching
configuration and so the way it's

00:01:34.670 --> 00:01:34.680
configuration and so the way it's
 

00:01:34.680 --> 00:01:36.410
configuration and so the way it's
working really is that the library

00:01:36.410 --> 00:01:36.420
working really is that the library
 

00:01:36.420 --> 00:01:38.120
working really is that the library
project is publishing a whole bunch of

00:01:38.120 --> 00:01:38.130
project is publishing a whole bunch of
 

00:01:38.130 --> 00:01:39.920
project is publishing a whole bunch of
artifacts for different variants in

00:01:39.920 --> 00:01:39.930
artifacts for different variants in
 

00:01:39.930 --> 00:01:41.929
artifacts for different variants in
different configuration and each of

00:01:41.929 --> 00:01:41.939
different configuration and each of
 

00:01:41.939 --> 00:01:43.399
different configuration and each of
those configuration has attributes

00:01:43.399 --> 00:01:43.409
those configuration has attributes
 

00:01:43.409 --> 00:01:46.190
those configuration has attributes
associated with it so that trader can

00:01:46.190 --> 00:01:46.200
associated with it so that trader can
 

00:01:46.200 --> 00:01:48.710
associated with it so that trader can
match it on the upside the request has

00:01:48.710 --> 00:01:48.720
match it on the upside the request has
 

00:01:48.720 --> 00:01:50.719
match it on the upside the request has
similar attributes and it's trying to do

00:01:50.719 --> 00:01:50.729
similar attributes and it's trying to do
 

00:01:50.729 --> 00:01:52.999
similar attributes and it's trying to do
a mapping and it needs to find one exact

00:01:52.999 --> 00:01:53.009
a mapping and it needs to find one exact
 

00:01:53.009 --> 00:01:54.830
a mapping and it needs to find one exact
match and here it can't find any match

00:01:54.830 --> 00:01:54.840
match and here it can't find any match
 

00:01:54.840 --> 00:01:57.499
match and here it can't find any match
so if we go through those for

00:01:57.499 --> 00:01:57.509
so if we go through those for
 

00:01:57.509 --> 00:01:59.569
so if we go through those for
configuration you know you can look at

00:01:59.569 --> 00:01:59.579
configuration you know you can look at
 

00:01:59.579 --> 00:02:01.370
configuration you know you can look at
all the attributes and basically by

00:02:01.370 --> 00:02:01.380
all the attributes and basically by
 

00:02:01.380 --> 00:02:03.050
all the attributes and basically by
process of elimination find out what the

00:02:03.050 --> 00:02:03.060
process of elimination find out what the
 

00:02:03.060 --> 00:02:04.760
process of elimination find out what the
problem is so here the first thing that

00:02:04.760 --> 00:02:04.770
problem is so here the first thing that
 

00:02:04.770 --> 00:02:06.800
problem is so here the first thing that
we see is two of them have you know an

00:02:06.800 --> 00:02:06.810
we see is two of them have you know an
 

00:02:06.810 --> 00:02:10.880
we see is two of them have you know an
API there the API used by compiled class

00:02:10.880 --> 00:02:10.890
API there the API used by compiled class
 

00:02:10.890 --> 00:02:12.949
API there the API used by compiled class
pass and the other two are

00:02:12.949 --> 00:02:12.959
pass and the other two are
 

00:02:12.959 --> 00:02:14.630
pass and the other two are
and you can see that the attribute name

00:02:14.630 --> 00:02:14.640
and you can see that the attribute name
 

00:02:14.640 --> 00:02:17.509
and you can see that the attribute name
usage we request Java Runtime and some

00:02:17.509 --> 00:02:17.519
usage we request Java Runtime and some
 

00:02:17.519 --> 00:02:19.130
usage we request Java Runtime and some
of them are using Java API so they are

00:02:19.130 --> 00:02:19.140
of them are using Java API so they are
 

00:02:19.140 --> 00:02:20.479
of them are using Java API so they are
not compatible so we can't just ignore

00:02:20.479 --> 00:02:20.489
not compatible so we can't just ignore
 

00:02:20.489 --> 00:02:23.559
not compatible so we can't just ignore
them then we have few more attributes

00:02:23.559 --> 00:02:23.569
them then we have few more attributes
 

00:02:23.569 --> 00:02:25.910
them then we have few more attributes
there's one here Android type attribute

00:02:25.910 --> 00:02:25.920
there's one here Android type attribute
 

00:02:25.920 --> 00:02:28.459
there's one here Android type attribute
that is compatible so on both sides so

00:02:28.459 --> 00:02:28.469
that is compatible so on both sides so
 

00:02:28.469 --> 00:02:29.869
that is compatible so on both sides so
we can't just ignore it it's something

00:02:29.869 --> 00:02:29.879
we can't just ignore it it's something
 

00:02:29.879 --> 00:02:31.309
we can't just ignore it it's something
that we use internally to match

00:02:31.309 --> 00:02:31.319
that we use internally to match
 

00:02:31.319 --> 00:02:32.990
that we use internally to match
different type of plug-in application

00:02:32.990 --> 00:02:33.000
different type of plug-in application
 

00:02:33.000 --> 00:02:35.780
different type of plug-in application
goes to libraries features so you can't

00:02:35.780 --> 00:02:35.790
goes to libraries features so you can't
 

00:02:35.790 --> 00:02:38.420
goes to libraries features so you can't
just ignore it the other one biota

00:02:38.420 --> 00:02:38.430
just ignore it the other one biota
 

00:02:38.430 --> 00:02:40.099
just ignore it the other one biota
attribute is not required it's actually

00:02:40.099 --> 00:02:40.109
attribute is not required it's actually
 

00:02:40.109 --> 00:02:42.319
attribute is not required it's actually
never required and you can just ignore

00:02:42.319 --> 00:02:42.329
never required and you can just ignore
 

00:02:42.329 --> 00:02:44.569
never required and you can just ignore
it always we use that only when we build

00:02:44.569 --> 00:02:44.579
it always we use that only when we build
 

00:02:44.579 --> 00:02:47.720
it always we use that only when we build
the model when we do a studio sync so

00:02:47.720 --> 00:02:47.730
the model when we do a studio sync so
 

00:02:47.730 --> 00:02:49.610
the model when we do a studio sync so
you can always ignore it and then we

00:02:49.610 --> 00:02:49.620
you can always ignore it and then we
 

00:02:49.620 --> 00:02:52.490
you can always ignore it and then we
find the final attributes which you know

00:02:52.490 --> 00:02:52.500
find the final attributes which you know
 

00:02:52.500 --> 00:02:54.500
find the final attributes which you know
is always incompatible we ask for

00:02:54.500 --> 00:02:54.510
is always incompatible we ask for
 

00:02:54.510 --> 00:02:56.119
is always incompatible we ask for
staging and it's finding two other

00:02:56.119 --> 00:02:56.129
staging and it's finding two other
 

00:02:56.129 --> 00:02:59.149
staging and it's finding two other
values and the name or type of the

00:02:59.149 --> 00:02:59.159
values and the name or type of the
 

00:02:59.159 --> 00:03:01.220
values and the name or type of the
attribute here which is package named

00:03:01.220 --> 00:03:01.230
attribute here which is package named
 

00:03:01.230 --> 00:03:04.250
attribute here which is package named
we'll type attribute is you know the key

00:03:04.250 --> 00:03:04.260
we'll type attribute is you know the key
 

00:03:04.260 --> 00:03:06.020
we'll type attribute is you know the key
part it's basically hopefully self

00:03:06.020 --> 00:03:06.030
part it's basically hopefully self
 

00:03:06.030 --> 00:03:07.729
part it's basically hopefully self
explanatory this is the grill type

00:03:07.729 --> 00:03:07.739
explanatory this is the grill type
 

00:03:07.739 --> 00:03:09.709
explanatory this is the grill type
attribute and we are requesting staging

00:03:09.709 --> 00:03:09.719
attribute and we are requesting staging
 

00:03:09.719 --> 00:03:11.569
attribute and we are requesting staging
and it's not finding it so basically it

00:03:11.569 --> 00:03:11.579
and it's not finding it so basically it
 

00:03:11.579 --> 00:03:13.099
and it's not finding it so basically it
means your library does not have the

00:03:13.099 --> 00:03:13.109
means your library does not have the
 

00:03:13.109 --> 00:03:16.369
means your library does not have the
staging will type and that's why it's

00:03:16.369 --> 00:03:16.379
staging will type and that's why it's
 

00:03:16.379 --> 00:03:18.259
staging will type and that's why it's
very so you can trade it there or you

00:03:18.259 --> 00:03:18.269
very so you can trade it there or you
 

00:03:18.269 --> 00:03:20.509
very so you can trade it there or you
can just use the DSL that allows you to

00:03:20.509 --> 00:03:20.519
can just use the DSL that allows you to
 

00:03:20.519 --> 00:03:22.939
can just use the DSL that allows you to
create a fallback so in that case here

00:03:22.939 --> 00:03:22.949
create a fallback so in that case here
 

00:03:22.949 --> 00:03:24.740
create a fallback so in that case here
on the app you're saying if staging is

00:03:24.740 --> 00:03:24.750
on the app you're saying if staging is
 

00:03:24.750 --> 00:03:28.849
on the app you're saying if staging is
not sound just use debug you have the

00:03:28.849 --> 00:03:28.859
not sound just use debug you have the
 

00:03:28.859 --> 00:03:30.379
not sound just use debug you have the
same exact principle if you have a

00:03:30.379 --> 00:03:30.389
same exact principle if you have a
 

00:03:30.389 --> 00:03:33.229
same exact principle if you have a
missing flavor or dimension value here

00:03:33.229 --> 00:03:33.239
missing flavor or dimension value here
 

00:03:33.239 --> 00:03:36.050
missing flavor or dimension value here
the the error message is a little bit

00:03:36.050 --> 00:03:36.060
the the error message is a little bit
 

00:03:36.060 --> 00:03:37.159
the the error message is a little bit
different because there's multiple

00:03:37.159 --> 00:03:37.169
different because there's multiple
 

00:03:37.169 --> 00:03:40.099
different because there's multiple
flavors potentially so they are named TR

00:03:40.099 --> 00:03:40.109
flavors potentially so they are named TR
 

00:03:40.109 --> 00:03:41.749
flavors potentially so they are named TR
being the name of the flavor dimension

00:03:41.749 --> 00:03:41.759
being the name of the flavor dimension
 

00:03:41.759 --> 00:03:44.089
being the name of the flavor dimension
but that's the same problem right it's

00:03:44.089 --> 00:03:44.099
but that's the same problem right it's
 

00:03:44.099 --> 00:03:45.949
but that's the same problem right it's
not finding try or when you're searching

00:03:45.949 --> 00:03:45.959
not finding try or when you're searching
 

00:03:45.959 --> 00:03:48.170
not finding try or when you're searching
for it and so the fix is basically

00:03:48.170 --> 00:03:48.180
for it and so the fix is basically
 

00:03:48.180 --> 00:03:49.670
for it and so the fix is basically
exactly the same one you're just

00:03:49.670 --> 00:03:49.680
exactly the same one you're just
 

00:03:49.680 --> 00:03:53.119
exactly the same one you're just
assigning matching fallback on the try

00:03:53.119 --> 00:03:53.129
assigning matching fallback on the try
 

00:03:53.129 --> 00:03:55.969
assigning matching fallback on the try
one and we do that on the consuming side

00:03:55.969 --> 00:03:55.979
one and we do that on the consuming side
 

00:03:55.979 --> 00:03:57.679
one and we do that on the consuming side
right on the app side of the library or

00:03:57.679 --> 00:03:57.689
right on the app side of the library or
 

00:03:57.689 --> 00:03:59.990
right on the app side of the library or
if it's a library that depend on the

00:03:59.990 --> 00:04:00.000
if it's a library that depend on the
 

00:04:00.000 --> 00:04:01.129
if it's a library that depend on the
library you put it always on the

00:04:01.129 --> 00:04:01.139
library you put it always on the
 

00:04:01.139 --> 00:04:03.920
library you put it always on the
consuming side you can have another type

00:04:03.920 --> 00:04:03.930
consuming side you can have another type
 

00:04:03.930 --> 00:04:06.920
consuming side you can have another type
of problem here it's saying cannot

00:04:06.920 --> 00:04:06.930
of problem here it's saying cannot
 

00:04:06.930 --> 00:04:08.089
of problem here it's saying cannot
choose between the following

00:04:08.089 --> 00:04:08.099
choose between the following
 

00:04:08.099 --> 00:04:09.409
choose between the following
configuration right so instead of

00:04:09.409 --> 00:04:09.419
configuration right so instead of
 

00:04:09.419 --> 00:04:11.439
configuration right so instead of
finding zero matches it finds two

00:04:11.439 --> 00:04:11.449
finding zero matches it finds two
 

00:04:11.449 --> 00:04:15.259
finding zero matches it finds two
compatible matches and so you know it's

00:04:15.259 --> 00:04:15.269
compatible matches and so you know it's
 

00:04:15.269 --> 00:04:16.879
compatible matches and so you know it's
only going to show the two configuration

00:04:16.879 --> 00:04:16.889
only going to show the two configuration
 

00:04:16.889 --> 00:04:18.199
only going to show the two configuration
that aren't matching it's going to hide

00:04:18.199 --> 00:04:18.209
that aren't matching it's going to hide
 

00:04:18.209 --> 00:04:19.550
that aren't matching it's going to hide
all the other ones so that's a little

00:04:19.550 --> 00:04:19.560
all the other ones so that's a little
 

00:04:19.560 --> 00:04:22.009
all the other ones so that's a little
bit easier and if you look at it there's

00:04:22.009 --> 00:04:22.019
bit easier and if you look at it there's
 

00:04:22.019 --> 00:04:24.110
bit easier and if you look at it there's
going to be a lot of attributes that are

00:04:24.110 --> 00:04:24.120
going to be a lot of attributes that are
 

00:04:24.120 --> 00:04:26.330
going to be a lot of attributes that are
compatible so you can just ignore them

00:04:26.330 --> 00:04:26.340
compatible so you can just ignore them
 

00:04:26.340 --> 00:04:27.890
compatible so you can just ignore them
and then you're down to those two here

00:04:27.890 --> 00:04:27.900
and then you're down to those two here
 

00:04:27.900 --> 00:04:31.340
and then you're down to those two here
and it says it found an attribute on the

00:04:31.340 --> 00:04:31.350
and it says it found an attribute on the
 

00:04:31.350 --> 00:04:33.230
and it says it found an attribute on the
producing side on the library but it was

00:04:33.230 --> 00:04:33.240
producing side on the library but it was
 

00:04:33.240 --> 00:04:36.230
producing side on the library but it was
not required by the consumer and so here

00:04:36.230 --> 00:04:36.240
not required by the consumer and so here
 

00:04:36.240 --> 00:04:37.610
not required by the consumer and so here
you know basically what's happening is

00:04:37.610 --> 00:04:37.620
you know basically what's happening is
 

00:04:37.620 --> 00:04:39.710
you know basically what's happening is
that your library has defined a flavor

00:04:39.710 --> 00:04:39.720
that your library has defined a flavor
 

00:04:39.720 --> 00:04:43.070
that your library has defined a flavor
dimension that is not used not defined

00:04:43.070 --> 00:04:43.080
dimension that is not used not defined
 

00:04:43.080 --> 00:04:45.260
dimension that is not used not defined
in the app or the consuming module and

00:04:45.260 --> 00:04:45.270
in the app or the consuming module and
 

00:04:45.270 --> 00:04:46.760
in the app or the consuming module and
therefore it doesn't know how to choose

00:04:46.760 --> 00:04:46.770
therefore it doesn't know how to choose
 

00:04:46.770 --> 00:04:48.500
therefore it doesn't know how to choose
this one so you can again create the

00:04:48.500 --> 00:04:48.510
this one so you can again create the
 

00:04:48.510 --> 00:04:50.659
this one so you can again create the
flavor dimension in your app or in the

00:04:50.659 --> 00:04:50.669
flavor dimension in your app or in the
 

00:04:50.669 --> 00:04:52.610
flavor dimension in your app or in the
consuming model or you can just go and

00:04:52.610 --> 00:04:52.620
consuming model or you can just go and
 

00:04:52.620 --> 00:04:55.790
consuming model or you can just go and
say you know missing dimension strategy

00:04:55.790 --> 00:04:55.800
say you know missing dimension strategy
 

00:04:55.800 --> 00:04:58.129
say you know missing dimension strategy
name of the flavor dimension name of the

00:04:58.129 --> 00:04:58.139
name of the flavor dimension name of the
 

00:04:58.139 --> 00:04:59.930
name of the flavor dimension name of the
value and all it's doing really is just

00:04:59.930 --> 00:04:59.940
value and all it's doing really is just
 

00:04:59.940 --> 00:05:01.730
value and all it's doing really is just
adding that attribute directly to the

00:05:01.730 --> 00:05:01.740
adding that attribute directly to the
 

00:05:01.740 --> 00:05:04.040
adding that attribute directly to the
request so that it's able to match the

00:05:04.040 --> 00:05:04.050
request so that it's able to match the
 

00:05:04.050 --> 00:05:05.810
request so that it's able to match the
other one and you can add these either

00:05:05.810 --> 00:05:05.820
other one and you can add these either
 

00:05:05.820 --> 00:05:08.540
other one and you can add these either
to the different config which applies to

00:05:08.540 --> 00:05:08.550
to the different config which applies to
 

00:05:08.550 --> 00:05:10.520
to the different config which applies to
all your clients you can apply it to a

00:05:10.520 --> 00:05:10.530
all your clients you can apply it to a
 

00:05:10.530 --> 00:05:12.740
all your clients you can apply it to a
specific flavor which will apply only to

00:05:12.740 --> 00:05:12.750
specific flavor which will apply only to
 

00:05:12.750 --> 00:05:14.480
specific flavor which will apply only to
that flavor or you can add it to a

00:05:14.480 --> 00:05:14.490
that flavor or you can add it to a
 

00:05:14.490 --> 00:05:20.570
that flavor or you can add it to a
particular violent thank you all right

00:05:20.570 --> 00:05:20.580
particular violent thank you all right
 

00:05:20.580 --> 00:05:22.219
particular violent thank you all right
so let's talk about some of the notable

00:05:22.219 --> 00:05:22.229
so let's talk about some of the notable
 

00:05:22.229 --> 00:05:24.140
so let's talk about some of the notable
changes that we've introduced in the

00:05:24.140 --> 00:05:24.150
changes that we've introduced in the
 

00:05:24.150 --> 00:05:27.260
changes that we've introduced in the
compilation pipeline the first thing

00:05:27.260 --> 00:05:27.270
compilation pipeline the first thing
 

00:05:27.270 --> 00:05:30.050
compilation pipeline the first thing
that we have changed lately is a apt -

00:05:30.050 --> 00:05:30.060
that we have changed lately is a apt -
 

00:05:30.060 --> 00:05:32.779
that we have changed lately is a apt -
and this is a new incremental resource

00:05:32.779 --> 00:05:32.789
and this is a new incremental resource
 

00:05:32.789 --> 00:05:36.409
and this is a new incremental resource
compiler and compared to a apt one apt -

00:05:36.409 --> 00:05:36.419
compiler and compared to a apt one apt -
 

00:05:36.419 --> 00:05:38.120
compiler and compared to a apt one apt -
is really dividing its work into two

00:05:38.120 --> 00:05:38.130
is really dividing its work into two
 

00:05:38.130 --> 00:05:40.159
is really dividing its work into two
phases there is an incremental capable

00:05:40.159 --> 00:05:40.169
phases there is an incremental capable
 

00:05:40.169 --> 00:05:42.560
phases there is an incremental capable
compilation phase where it's changing

00:05:42.560 --> 00:05:42.570
compilation phase where it's changing
 

00:05:42.570 --> 00:05:44.630
compilation phase where it's changing
your resources into a binary format and

00:05:44.630 --> 00:05:44.640
your resources into a binary format and
 

00:05:44.640 --> 00:05:47.779
your resources into a binary format and
then there is a final linking phase

00:05:47.779 --> 00:05:47.789
then there is a final linking phase
 

00:05:47.789 --> 00:05:48.890
then there is a final linking phase
where it's going to generate the

00:05:48.890 --> 00:05:48.900
where it's going to generate the
 

00:05:48.900 --> 00:05:50.960
where it's going to generate the
resource table and the final IDs

00:05:50.960 --> 00:05:50.970
resource table and the final IDs
 

00:05:50.970 --> 00:05:52.790
resource table and the final IDs
now if you want to use the latest

00:05:52.790 --> 00:05:52.800
now if you want to use the latest
 

00:05:52.800 --> 00:05:55.460
now if you want to use the latest
platform features you need to use apt to

00:05:55.460 --> 00:05:55.470
platform features you need to use apt to
 

00:05:55.470 --> 00:05:58.850
platform features you need to use apt to
and in theory apt - is entirely

00:05:58.850 --> 00:05:58.860
and in theory apt - is entirely
 

00:05:58.860 --> 00:06:01.700
and in theory apt - is entirely
compatible where is apt one however it's

00:06:01.700 --> 00:06:01.710
compatible where is apt one however it's
 

00:06:01.710 --> 00:06:03.680
compatible where is apt one however it's
a lot stricter so you might run into

00:06:03.680 --> 00:06:03.690
a lot stricter so you might run into
 

00:06:03.690 --> 00:06:05.930
a lot stricter so you might run into
issues when you change from a PT one to

00:06:05.930 --> 00:06:05.940
issues when you change from a PT one to
 

00:06:05.940 --> 00:06:08.900
issues when you change from a PT one to
a PT 2 so we have given you a flag so

00:06:08.900 --> 00:06:08.910
a PT 2 so we have given you a flag so
 

00:06:08.910 --> 00:06:10.610
a PT 2 so we have given you a flag so
that we can disable if you have issues

00:06:10.610 --> 00:06:10.620
that we can disable if you have issues
 

00:06:10.620 --> 00:06:12.770
that we can disable if you have issues
but you should be aware that those

00:06:12.770 --> 00:06:12.780
but you should be aware that those
 

00:06:12.780 --> 00:06:16.520
but you should be aware that those
issues may not be in a apt to itself it

00:06:16.520 --> 00:06:16.530
issues may not be in a apt to itself it
 

00:06:16.530 --> 00:06:19.340
issues may not be in a apt to itself it
may be in your project so you should

00:06:19.340 --> 00:06:19.350
may be in your project so you should
 

00:06:19.350 --> 00:06:21.469
may be in your project so you should
fight bugs if you find issues with the

00:06:21.469 --> 00:06:21.479
fight bugs if you find issues with the
 

00:06:21.479 --> 00:06:23.240
fight bugs if you find issues with the
apt - but you should do your homework

00:06:23.240 --> 00:06:23.250
apt - but you should do your homework
 

00:06:23.250 --> 00:06:25.010
apt - but you should do your homework
first you should look into well maybe

00:06:25.010 --> 00:06:25.020
first you should look into well maybe
 

00:06:25.020 --> 00:06:27.260
first you should look into well maybe
the problem is in my project

00:06:27.260 --> 00:06:27.270
the problem is in my project
 

00:06:27.270 --> 00:06:29.600
the problem is in my project
so let's look maybe you have invalid

00:06:29.600 --> 00:06:29.610
so let's look maybe you have invalid
 

00:06:29.610 --> 00:06:33.650
so let's look maybe you have invalid
resources and reference stuff apt to

00:06:33.650 --> 00:06:33.660
resources and reference stuff apt to
 

00:06:33.660 --> 00:06:36.409
resources and reference stuff apt to
we'll catch those so we're going to face

00:06:36.409 --> 00:06:36.419
we'll catch those so we're going to face
 

00:06:36.419 --> 00:06:38.460
we'll catch those so we're going to face
out a PT 1 produced

00:06:38.460 --> 00:06:38.470
out a PT 1 produced
 

00:06:38.470 --> 00:06:40.200
out a PT 1 produced
so it's really important that you switch

00:06:40.200 --> 00:06:40.210
so it's really important that you switch
 

00:06:40.210 --> 00:06:42.270
so it's really important that you switch
and that you fight bugs if you still

00:06:42.270 --> 00:06:42.280
and that you fight bugs if you still
 

00:06:42.280 --> 00:06:46.650
and that you fight bugs if you still
find some next thing is the sugar so

00:06:46.650 --> 00:06:46.660
find some next thing is the sugar so
 

00:06:46.660 --> 00:06:48.600
find some next thing is the sugar so
this is a tool which is used to remove

00:06:48.600 --> 00:06:48.610
this is a tool which is used to remove
 

00:06:48.610 --> 00:06:51.450
this is a tool which is used to remove
all the synthetic sugar that was added

00:06:51.450 --> 00:06:51.460
all the synthetic sugar that was added
 

00:06:51.460 --> 00:06:53.640
all the synthetic sugar that was added
by Java 8 like lambdas and stuff like

00:06:53.640 --> 00:06:53.650
by Java 8 like lambdas and stuff like
 

00:06:53.650 --> 00:06:56.880
by Java 8 like lambdas and stuff like
that we've delivered again into two

00:06:56.880 --> 00:06:56.890
that we've delivered again into two
 

00:06:56.890 --> 00:06:58.560
that we've delivered again into two
different versions so the first version

00:06:58.560 --> 00:06:58.570
different versions so the first version
 

00:06:58.570 --> 00:07:00.540
different versions so the first version
which ship to 3-0 was an external

00:07:00.540 --> 00:07:00.550
which ship to 3-0 was an external
 

00:07:00.550 --> 00:07:03.810
which ship to 3-0 was an external
process it used a lot of resource was

00:07:03.810 --> 00:07:03.820
process it used a lot of resource was
 

00:07:03.820 --> 00:07:06.750
process it used a lot of resource was
pretty slow now with the d8 the new

00:07:06.750 --> 00:07:06.760
pretty slow now with the d8 the new
 

00:07:06.760 --> 00:07:08.460
pretty slow now with the d8 the new
Dexter we've introduced a new version

00:07:08.460 --> 00:07:08.470
Dexter we've introduced a new version
 

00:07:08.470 --> 00:07:10.140
Dexter we've introduced a new version
where it's integrated inside its

00:07:10.140 --> 00:07:10.150
where it's integrated inside its
 

00:07:10.150 --> 00:07:12.930
where it's integrated inside its
pipeline so it's it's better it's faster

00:07:12.930 --> 00:07:12.940
pipeline so it's it's better it's faster
 

00:07:12.940 --> 00:07:15.450
pipeline so it's it's better it's faster
again we're going to phase out the old

00:07:15.450 --> 00:07:15.460
again we're going to phase out the old
 

00:07:15.460 --> 00:07:17.550
again we're going to phase out the old
version in theory you should all be

00:07:17.550 --> 00:07:17.560
version in theory you should all be
 

00:07:17.560 --> 00:07:19.590
version in theory you should all be
switching to the integrated version you

00:07:19.590 --> 00:07:19.600
switching to the integrated version you
 

00:07:19.600 --> 00:07:21.450
switching to the integrated version you
shouldn't be seeing any difference if

00:07:21.450 --> 00:07:21.460
shouldn't be seeing any difference if
 

00:07:21.460 --> 00:07:23.250
shouldn't be seeing any difference if
you do please file a bug it's most

00:07:23.250 --> 00:07:23.260
you do please file a bug it's most
 

00:07:23.260 --> 00:07:24.510
you do please file a bug it's most
likely our fault this time it's probably

00:07:24.510 --> 00:07:24.520
likely our fault this time it's probably
 

00:07:24.520 --> 00:07:27.090
likely our fault this time it's probably
not your fault but file a bug because

00:07:27.090 --> 00:07:27.100
not your fault but file a bug because
 

00:07:27.100 --> 00:07:28.370
not your fault but file a bug because
we're going to phase out the old

00:07:28.370 --> 00:07:28.380
we're going to phase out the old
 

00:07:28.380 --> 00:07:32.600
we're going to phase out the old
external process version very soon

00:07:32.600 --> 00:07:32.610
external process version very soon
 

00:07:32.610 --> 00:07:35.280
external process version very soon
talking about Dexter you should all be

00:07:35.280 --> 00:07:35.290
talking about Dexter you should all be
 

00:07:35.290 --> 00:07:39.300
talking about Dexter you should all be
using the new d8 compiler right now it's

00:07:39.300 --> 00:07:39.310
using the new d8 compiler right now it's
 

00:07:39.310 --> 00:07:42.630
using the new d8 compiler right now it's
was introduced in 3-0 it's now default

00:07:42.630 --> 00:07:42.640
was introduced in 3-0 it's now default
 

00:07:42.640 --> 00:07:47.550
was introduced in 3-0 it's now default
in 3.1 if you use DX if you still use DX

00:07:47.550 --> 00:07:47.560
in 3.1 if you use DX if you still use DX
 

00:07:47.560 --> 00:07:49.830
in 3.1 if you use DX if you still use DX
because you have elbows translation

00:07:49.830 --> 00:07:49.840
because you have elbows translation
 

00:07:49.840 --> 00:07:52.380
because you have elbows translation
errors or runtime errors you should

00:07:52.380 --> 00:07:52.390
errors or runtime errors you should
 

00:07:52.390 --> 00:07:55.020
errors or runtime errors you should
definitely find bugs they are extremely

00:07:55.020 --> 00:07:55.030
definitely find bugs they are extremely
 

00:07:55.030 --> 00:07:57.450
definitely find bugs they are extremely
responsive at fixing those issues and

00:07:57.450 --> 00:07:57.460
responsive at fixing those issues and
 

00:07:57.460 --> 00:08:00.120
responsive at fixing those issues and
again we're going to be facing out DX

00:08:00.120 --> 00:08:00.130
again we're going to be facing out DX
 

00:08:00.130 --> 00:08:03.210
again we're going to be facing out DX
the old DX very soon and we would like

00:08:03.210 --> 00:08:03.220
the old DX very soon and we would like
 

00:08:03.220 --> 00:08:05.520
the old DX very soon and we would like
you to be still capable of building your

00:08:05.520 --> 00:08:05.530
you to be still capable of building your
 

00:08:05.530 --> 00:08:08.070
you to be still capable of building your
applications so please fight bugs now

00:08:08.070 --> 00:08:08.080
applications so please fight bugs now
 

00:08:08.080 --> 00:08:10.770
applications so please fight bugs now
we've just introduced our 8 which is a

00:08:10.770 --> 00:08:10.780
we've just introduced our 8 which is a
 

00:08:10.780 --> 00:08:14.820
we've just introduced our 8 which is a
new shrinker obfuscator but it's a

00:08:14.820 --> 00:08:14.830
new shrinker obfuscator but it's a
 

00:08:14.830 --> 00:08:16.410
new shrinker obfuscator but it's a
slightly different thing that what it

00:08:16.410 --> 00:08:16.420
slightly different thing that what it
 

00:08:16.420 --> 00:08:18.210
slightly different thing that what it
used to be with pagada so PO got used to

00:08:18.210 --> 00:08:18.220
used to be with pagada so PO got used to
 

00:08:18.220 --> 00:08:19.470
used to be with pagada so PO got used to
operate on classifiers it was

00:08:19.470 --> 00:08:19.480
operate on classifiers it was
 

00:08:19.480 --> 00:08:21.450
operate on classifiers it was
transforming class files and making them

00:08:21.450 --> 00:08:21.460
transforming class files and making them
 

00:08:21.460 --> 00:08:24.450
transforming class files and making them
minified to be ready to be dext our 8

00:08:24.450 --> 00:08:24.460
minified to be ready to be dext our 8
 

00:08:24.460 --> 00:08:27.300
minified to be ready to be dext our 8
takes over the entire pipeline from

00:08:27.300 --> 00:08:27.310
takes over the entire pipeline from
 

00:08:27.310 --> 00:08:29.220
takes over the entire pipeline from
class files to text files so that means

00:08:29.220 --> 00:08:29.230
class files to text files so that means
 

00:08:29.230 --> 00:08:31.040
class files to text files so that means
is doing this sugar it's doing

00:08:31.040 --> 00:08:31.050
is doing this sugar it's doing
 

00:08:31.050 --> 00:08:34.080
is doing this sugar it's doing
minification and Xing all in one

00:08:34.080 --> 00:08:34.090
minification and Xing all in one
 

00:08:34.090 --> 00:08:35.460
minification and Xing all in one
operation and it can reuse a lot of

00:08:35.460 --> 00:08:35.470
operation and it can reuse a lot of
 

00:08:35.470 --> 00:08:38.940
operation and it can reuse a lot of
image of the data so it's faster so we

00:08:38.940 --> 00:08:38.950
image of the data so it's faster so we
 

00:08:38.950 --> 00:08:40.530
image of the data so it's faster so we
introduced it you should try it

00:08:40.530 --> 00:08:40.540
introduced it you should try it
 

00:08:40.540 --> 00:08:42.030
introduced it you should try it
and you should see if it works well

00:08:42.030 --> 00:08:42.040
and you should see if it works well
 

00:08:42.040 --> 00:08:44.250
and you should see if it works well
again please fight bugs because at some

00:08:44.250 --> 00:08:44.260
again please fight bugs because at some
 

00:08:44.260 --> 00:08:46.830
again please fight bugs because at some
point we will stop supporting the old

00:08:46.830 --> 00:08:46.840
point we will stop supporting the old
 

00:08:46.840 --> 00:08:50.010
point we will stop supporting the old
thinkers maybe not soon but very meaty

00:08:50.010 --> 00:08:50.020
thinkers maybe not soon but very meaty
 

00:08:50.020 --> 00:08:54.060
thinkers maybe not soon but very meaty
I would say now these are the flags you

00:08:54.060 --> 00:08:54.070
I would say now these are the flags you
 

00:08:54.070 --> 00:08:56.690
I would say now these are the flags you
can use to enable or disable r8 and d8

00:08:56.690 --> 00:08:56.700
can use to enable or disable r8 and d8
 

00:08:56.700 --> 00:08:58.770
can use to enable or disable r8 and d8
so please use this if you run into

00:08:58.770 --> 00:08:58.780
so please use this if you run into
 

00:08:58.780 --> 00:09:01.050
so please use this if you run into
trouble but please also feel five bags

00:09:01.050 --> 00:09:01.060
trouble but please also feel five bags
 

00:09:01.060 --> 00:09:05.100
trouble but please also feel five bags
okay now let's talk a little bit about

00:09:05.100 --> 00:09:05.110
okay now let's talk a little bit about
 

00:09:05.110 --> 00:09:08.100
okay now let's talk a little bit about
performance we know very well that it is

00:09:08.100 --> 00:09:08.110
performance we know very well that it is
 

00:09:08.110 --> 00:09:09.900
performance we know very well that it is
subject that you are extremely

00:09:09.900 --> 00:09:09.910
subject that you are extremely
 

00:09:09.910 --> 00:09:12.810
subject that you are extremely
interested in and so are we one of the

00:09:12.810 --> 00:09:12.820
interested in and so are we one of the
 

00:09:12.820 --> 00:09:15.960
interested in and so are we one of the
one of the problem we have is that we

00:09:15.960 --> 00:09:15.970
one of the problem we have is that we
 

00:09:15.970 --> 00:09:18.090
one of the problem we have is that we
have a lot of trouble reproducing issues

00:09:18.090 --> 00:09:18.100
have a lot of trouble reproducing issues
 

00:09:18.100 --> 00:09:19.440
have a lot of trouble reproducing issues
that may happen in the wild we don't

00:09:19.440 --> 00:09:19.450
that may happen in the wild we don't
 

00:09:19.450 --> 00:09:20.850
that may happen in the wild we don't
have that many implications internally

00:09:20.850 --> 00:09:20.860
have that many implications internally
 

00:09:20.860 --> 00:09:24.270
have that many implications internally
that we can use so however here is an

00:09:24.270 --> 00:09:24.280
that we can use so however here is an
 

00:09:24.280 --> 00:09:26.880
that we can use so however here is an
example using the nest mobile app and

00:09:26.880 --> 00:09:26.890
example using the nest mobile app and
 

00:09:26.890 --> 00:09:29.340
example using the nest mobile app and
you can see that a nest full build has

00:09:29.340 --> 00:09:29.350
you can see that a nest full build has
 

00:09:29.350 --> 00:09:31.890
you can see that a nest full build has
improved about you know 13% from three

00:09:31.890 --> 00:09:31.900
improved about you know 13% from three
 

00:09:31.900 --> 00:09:33.630
improved about you know 13% from three
zero to three one and about eighteen

00:09:33.630 --> 00:09:33.640
zero to three one and about eighteen
 

00:09:33.640 --> 00:09:36.300
zero to three one and about eighteen
percent obviously this is not final with

00:09:36.300 --> 00:09:36.310
percent obviously this is not final with
 

00:09:36.310 --> 00:09:39.870
percent obviously this is not final with
3.2 versus the 301 that if you keep the

00:09:39.870 --> 00:09:39.880
3.2 versus the 301 that if you keep the
 

00:09:39.880 --> 00:09:41.910
3.2 versus the 301 that if you keep the
same set of features in your application

00:09:41.910 --> 00:09:41.920
same set of features in your application
 

00:09:41.920 --> 00:09:42.840
same set of features in your application
obviously you're not changing the

00:09:42.840 --> 00:09:42.850
obviously you're not changing the
 

00:09:42.850 --> 00:09:44.820
obviously you're not changing the
application just changing the plug-in if

00:09:44.820 --> 00:09:44.830
application just changing the plug-in if
 

00:09:44.830 --> 00:09:46.590
application just changing the plug-in if
you start adding features like you know

00:09:46.590 --> 00:09:46.600
you start adding features like you know
 

00:09:46.600 --> 00:09:48.570
you start adding features like you know
Java 8 or Catalan you know things may

00:09:48.570 --> 00:09:48.580
Java 8 or Catalan you know things may
 

00:09:48.580 --> 00:09:54.660
Java 8 or Catalan you know things may
vary obviously now if you literally - if

00:09:54.660 --> 00:09:54.670
vary obviously now if you literally - if
 

00:09:54.670 --> 00:09:56.130
vary obviously now if you literally - if
you look a little deeper at performance

00:09:56.130 --> 00:09:56.140
you look a little deeper at performance
 

00:09:56.140 --> 00:09:57.480
you look a little deeper at performance
things is a little bit more complicated

00:09:57.480 --> 00:09:57.490
things is a little bit more complicated
 

00:09:57.490 --> 00:09:59.850
things is a little bit more complicated
so in particular when you look at

00:09:59.850 --> 00:09:59.860
so in particular when you look at
 

00:09:59.860 --> 00:10:01.740
so in particular when you look at
incremental builds you can see that Java

00:10:01.740 --> 00:10:01.750
incremental builds you can see that Java
 

00:10:01.750 --> 00:10:04.350
incremental builds you can see that Java
see for a full build was about 10 to 15

00:10:04.350 --> 00:10:04.360
see for a full build was about 10 to 15
 

00:10:04.360 --> 00:10:06.300
see for a full build was about 10 to 15
percent of the overall build or when you

00:10:06.300 --> 00:10:06.310
percent of the overall build or when you
 

00:10:06.310 --> 00:10:08.600
percent of the overall build or when you
were an incremental build it jumps to

00:10:08.600 --> 00:10:08.610
were an incremental build it jumps to
 

00:10:08.610 --> 00:10:12.240
were an incremental build it jumps to
really bad 38 percent of the overall

00:10:12.240 --> 00:10:12.250
really bad 38 percent of the overall
 

00:10:12.250 --> 00:10:15.480
really bad 38 percent of the overall
build time so really we can see that in

00:10:15.480 --> 00:10:15.490
build time so really we can see that in
 

00:10:15.490 --> 00:10:18.240
build time so really we can see that in
incremental scenarios Java C compilation

00:10:18.240 --> 00:10:18.250
incremental scenarios Java C compilation
 

00:10:18.250 --> 00:10:20.460
incremental scenarios Java C compilation
is the dominating factor why is that

00:10:20.460 --> 00:10:20.470
is the dominating factor why is that
 

00:10:20.470 --> 00:10:22.740
is the dominating factor why is that
it's because it's not incremental why is

00:10:22.740 --> 00:10:22.750
it's because it's not incremental why is
 

00:10:22.750 --> 00:10:24.720
it's because it's not incremental why is
it not incremental it's because people

00:10:24.720 --> 00:10:24.730
it not incremental it's because people
 

00:10:24.730 --> 00:10:26.640
it not incremental it's because people
are using annotation processors and so

00:10:26.640 --> 00:10:26.650
are using annotation processors and so
 

00:10:26.650 --> 00:10:30.150
are using annotation processors and so
far they are not incremental capable so

00:10:30.150 --> 00:10:30.160
far they are not incremental capable so
 

00:10:30.160 --> 00:10:34.020
far they are not incremental capable so
we started a joint effort with Gradle to

00:10:34.020 --> 00:10:34.030
we started a joint effort with Gradle to
 

00:10:34.030 --> 00:10:36.900
we started a joint effort with Gradle to
have incremental annotation processors

00:10:36.900 --> 00:10:36.910
have incremental annotation processors
 

00:10:36.910 --> 00:10:39.990
have incremental annotation processors
it's called in cap so it's ready it's

00:10:39.990 --> 00:10:40.000
it's called in cap so it's ready it's
 

00:10:40.000 --> 00:10:43.410
it's called in cap so it's ready it's
been shipped in 4.7 and now we are in

00:10:43.410 --> 00:10:43.420
been shipped in 4.7 and now we are in
 

00:10:43.420 --> 00:10:46.020
been shipped in 4.7 and now we are in
the process of trying to move all of

00:10:46.020 --> 00:10:46.030
the process of trying to move all of
 

00:10:46.030 --> 00:10:47.850
the process of trying to move all of
googles annotation processors to be

00:10:47.850 --> 00:10:47.860
googles annotation processors to be
 

00:10:47.860 --> 00:10:51.180
googles annotation processors to be
incremental capable there is an action

00:10:51.180 --> 00:10:51.190
incremental capable there is an action
 

00:10:51.190 --> 00:10:53.160
incremental capable there is an action
required for you from you if you have

00:10:53.160 --> 00:10:53.170
required for you from you if you have
 

00:10:53.170 --> 00:10:55.620
required for you from you if you have
in-house annotation processes then you

00:10:55.620 --> 00:10:55.630
in-house annotation processes then you
 

00:10:55.630 --> 00:10:57.480
in-house annotation processes then you
should move them to be in kept capable

00:10:57.480 --> 00:10:57.490
should move them to be in kept capable
 

00:10:57.490 --> 00:10:59.220
should move them to be in kept capable
to use this library it's not very

00:10:59.220 --> 00:10:59.230
to use this library it's not very
 

00:10:59.230 --> 00:11:01.500
to use this library it's not very
complicated for the simple annotation

00:11:01.500 --> 00:11:01.510
complicated for the simple annotation
 

00:11:01.510 --> 00:11:02.569
complicated for the simple annotation
processors where there

00:11:02.569 --> 00:11:02.579
processors where there
 

00:11:02.579 --> 00:11:04.129
processors where there
like one source file and it generates

00:11:04.129 --> 00:11:04.139
like one source file and it generates
 

00:11:04.139 --> 00:11:06.319
like one source file and it generates
something from one source doesn't need

00:11:06.319 --> 00:11:06.329
something from one source doesn't need
 

00:11:06.329 --> 00:11:08.869
something from one source doesn't need
to see the entire world is just adding a

00:11:08.869 --> 00:11:08.879
to see the entire world is just adding a
 

00:11:08.879 --> 00:11:10.910
to see the entire world is just adding a
few manifest entries so it's very simple

00:11:10.910 --> 00:11:10.920
few manifest entries so it's very simple
 

00:11:10.920 --> 00:11:14.329
few manifest entries so it's very simple
and that will eventually if all of your

00:11:14.329 --> 00:11:14.339
and that will eventually if all of your
 

00:11:14.339 --> 00:11:16.999
and that will eventually if all of your
annotation processors are in cap capable

00:11:16.999 --> 00:11:17.009
annotation processors are in cap capable
 

00:11:17.009 --> 00:11:19.759
annotation processors are in cap capable
will be able to switch the do

00:11:19.759 --> 00:11:19.769
will be able to switch the do
 

00:11:19.769 --> 00:11:21.379
will be able to switch the do
compilation to be incremental and that

00:11:21.379 --> 00:11:21.389
compilation to be incremental and that
 

00:11:21.389 --> 00:11:23.869
compilation to be incremental and that
will have a huge impact on the

00:11:23.869 --> 00:11:23.879
will have a huge impact on the
 

00:11:23.879 --> 00:11:27.579
will have a huge impact on the
performance of your incremental builds

00:11:27.579 --> 00:11:27.589
 

00:11:27.589 --> 00:11:31.450
thank you

00:11:31.450 --> 00:11:31.460
 

00:11:31.460 --> 00:11:33.250
let's talk a little bit about jetpack

00:11:33.250 --> 00:11:33.260
let's talk a little bit about jetpack
 

00:11:33.260 --> 00:11:34.780
let's talk a little bit about jetpack
we've heard about it a lot so how does

00:11:34.780 --> 00:11:34.790
we've heard about it a lot so how does
 

00:11:34.790 --> 00:11:38.770
we've heard about it a lot so how does
it work let's just take the first

00:11:38.770 --> 00:11:38.780
it work let's just take the first
 

00:11:38.780 --> 00:11:41.920
it work let's just take the first
example where we have a pure you won't

00:11:41.920 --> 00:11:41.930
example where we have a pure you won't
 

00:11:41.930 --> 00:11:43.480
example where we have a pure you won't
want to move to a pure Android X project

00:11:43.480 --> 00:11:43.490
want to move to a pure Android X project
 

00:11:43.490 --> 00:11:45.820
want to move to a pure Android X project
so here you've got your old project is

00:11:45.820 --> 00:11:45.830
so here you've got your old project is
 

00:11:45.830 --> 00:11:48.040
so here you've got your old project is
using the auto monoid support what you

00:11:48.040 --> 00:11:48.050
using the auto monoid support what you
 

00:11:48.050 --> 00:11:49.870
using the auto monoid support what you
should do is to use the refactoring tool

00:11:49.870 --> 00:11:49.880
should do is to use the refactoring tool
 

00:11:49.880 --> 00:11:52.510
should do is to use the refactoring tool
in studio to actually move your project

00:11:52.510 --> 00:11:52.520
in studio to actually move your project
 

00:11:52.520 --> 00:11:55.900
in studio to actually move your project
to use the new stuff one of the issue is

00:11:55.900 --> 00:11:55.910
to use the new stuff one of the issue is
 

00:11:55.910 --> 00:11:59.500
to use the new stuff one of the issue is
that we add some dependencies to your

00:11:59.500 --> 00:11:59.510
that we add some dependencies to your
 

00:11:59.510 --> 00:12:01.060
that we add some dependencies to your
project automatically so you use legacy

00:12:01.060 --> 00:12:01.070
project automatically so you use legacy
 

00:12:01.070 --> 00:12:03.130
project automatically so you use legacy
meta decks where you use data binding

00:12:03.130 --> 00:12:03.140
meta decks where you use data binding
 

00:12:03.140 --> 00:12:05.740
meta decks where you use data binding
we're going to add automatically the

00:12:05.740 --> 00:12:05.750
we're going to add automatically the
 

00:12:05.750 --> 00:12:08.980
we're going to add automatically the
multi decks report library now if you

00:12:08.980 --> 00:12:08.990
multi decks report library now if you
 

00:12:08.990 --> 00:12:11.740
multi decks report library now if you
move to a new pure Android world all the

00:12:11.740 --> 00:12:11.750
move to a new pure Android world all the
 

00:12:11.750 --> 00:12:13.510
move to a new pure Android world all the
way the X world sorry where you now

00:12:13.510 --> 00:12:13.520
way the X world sorry where you now
 

00:12:13.520 --> 00:12:16.360
way the X world sorry where you now
suddenly have the Android X constraint

00:12:16.360 --> 00:12:16.370
suddenly have the Android X constraint
 

00:12:16.370 --> 00:12:18.060
suddenly have the Android X constraint
layout instead of the old combat support

00:12:18.060 --> 00:12:18.070
layout instead of the old combat support
 

00:12:18.070 --> 00:12:21.310
layout instead of the old combat support
we need to know that you we must use the

00:12:21.310 --> 00:12:21.320
we need to know that you we must use the
 

00:12:21.320 --> 00:12:23.440
we need to know that you we must use the
other with X multi decks runtime

00:12:23.440 --> 00:12:23.450
other with X multi decks runtime
 

00:12:23.450 --> 00:12:25.060
other with X multi decks runtime
libraries so that the two world do not

00:12:25.060 --> 00:12:25.070
libraries so that the two world do not
 

00:12:25.070 --> 00:12:26.770
libraries so that the two world do not
collide right so we need to have an

00:12:26.770 --> 00:12:26.780
collide right so we need to have an
 

00:12:26.780 --> 00:12:29.260
collide right so we need to have an
indication of which one we want to

00:12:29.260 --> 00:12:29.270
indication of which one we want to
 

00:12:29.270 --> 00:12:31.810
indication of which one we want to
inject and you need to tell to plug in

00:12:31.810 --> 00:12:31.820
inject and you need to tell to plug in
 

00:12:31.820 --> 00:12:34.660
inject and you need to tell to plug in
DC's through this flag which of the two

00:12:34.660 --> 00:12:34.670
DC's through this flag which of the two
 

00:12:34.670 --> 00:12:36.580
DC's through this flag which of the two
version you want us to use okay so if

00:12:36.580 --> 00:12:36.590
version you want us to use okay so if
 

00:12:36.590 --> 00:12:38.020
version you want us to use okay so if
you want to move to another week's world

00:12:38.020 --> 00:12:38.030
you want to move to another week's world
 

00:12:38.030 --> 00:12:42.310
you want to move to another week's world
please use this world this flag if you

00:12:42.310 --> 00:12:42.320
please use this world this flag if you
 

00:12:42.320 --> 00:12:44.290
please use this world this flag if you
are in a hybrid world which is most

00:12:44.290 --> 00:12:44.300
are in a hybrid world which is most
 

00:12:44.300 --> 00:12:45.640
are in a hybrid world which is most
likely what's going to happen to most

00:12:45.640 --> 00:12:45.650
likely what's going to happen to most
 

00:12:45.650 --> 00:12:47.530
likely what's going to happen to most
people so yes you've moved your

00:12:47.530 --> 00:12:47.540
people so yes you've moved your
 

00:12:47.540 --> 00:12:49.420
people so yes you've moved your
application you moved all your projects

00:12:49.420 --> 00:12:49.430
application you moved all your projects
 

00:12:49.430 --> 00:12:52.180
application you moved all your projects
to use the new on Droid X stuff but you

00:12:52.180 --> 00:12:52.190
to use the new on Droid X stuff but you
 

00:12:52.190 --> 00:12:53.830
to use the new on Droid X stuff but you
use some external library that you have

00:12:53.830 --> 00:12:53.840
use some external library that you have
 

00:12:53.840 --> 00:12:56.470
use some external library that you have
no control over that still uses the old

00:12:56.470 --> 00:12:56.480
no control over that still uses the old
 

00:12:56.480 --> 00:12:59.170
no control over that still uses the old
combat support libraries you have no

00:12:59.170 --> 00:12:59.180
combat support libraries you have no
 

00:12:59.180 --> 00:13:01.360
combat support libraries you have no
choice you have no control over the

00:13:01.360 --> 00:13:01.370
choice you have no control over the
 

00:13:01.370 --> 00:13:03.490
choice you have no control over the
sources so what can you do so we're

00:13:03.490 --> 00:13:03.500
sources so what can you do so we're
 

00:13:03.500 --> 00:13:05.020
sources so what can you do so we're
going to provide a real-time translation

00:13:05.020 --> 00:13:05.030
going to provide a real-time translation
 

00:13:05.030 --> 00:13:08.380
going to provide a real-time translation
facility that will just basically change

00:13:08.380 --> 00:13:08.390
facility that will just basically change
 

00:13:08.390 --> 00:13:10.750
facility that will just basically change
automatically the dependency from the

00:13:10.750 --> 00:13:10.760
automatically the dependency from the
 

00:13:10.760 --> 00:13:13.000
automatically the dependency from the
old come down to it support to the new

00:13:13.000 --> 00:13:13.010
old come down to it support to the new
 

00:13:13.010 --> 00:13:16.390
old come down to it support to the new
one and we'll change the glabra itself

00:13:16.390 --> 00:13:16.400
one and we'll change the glabra itself
 

00:13:16.400 --> 00:13:19.690
one and we'll change the glabra itself
but by changing all the import

00:13:19.690 --> 00:13:19.700
but by changing all the import
 

00:13:19.700 --> 00:13:21.130
but by changing all the import
statements to the new ones

00:13:21.130 --> 00:13:21.140
statements to the new ones
 

00:13:21.140 --> 00:13:23.200
statements to the new ones
so this is done locally it's not like

00:13:23.200 --> 00:13:23.210
so this is done locally it's not like
 

00:13:23.210 --> 00:13:25.090
so this is done locally it's not like
we're gonna republish this library but

00:13:25.090 --> 00:13:25.100
we're gonna republish this library but
 

00:13:25.100 --> 00:13:27.430
we're gonna republish this library but
luckily you will be able to have a new

00:13:27.430 --> 00:13:27.440
luckily you will be able to have a new
 

00:13:27.440 --> 00:13:29.860
luckily you will be able to have a new
version of an pure world where everybody

00:13:29.860 --> 00:13:29.870
version of an pure world where everybody
 

00:13:29.870 --> 00:13:31.390
version of an pure world where everybody
is depending on the new Android X

00:13:31.390 --> 00:13:31.400
is depending on the new Android X
 

00:13:31.400 --> 00:13:34.390
is depending on the new Android X
library again there is a flag a table

00:13:34.390 --> 00:13:34.400
library again there is a flag a table
 

00:13:34.400 --> 00:13:39.160
library again there is a flag a table
jetty fire ok so let's talk about the

00:13:39.160 --> 00:13:39.170
jetty fire ok so let's talk about the
 

00:13:39.170 --> 00:13:41.200
jetty fire ok so let's talk about the
app vendor I'm sure you've heard about

00:13:41.200 --> 00:13:41.210
app vendor I'm sure you've heard about
 

00:13:41.210 --> 00:13:42.910
app vendor I'm sure you've heard about
the up under a lot over the last two

00:13:42.910 --> 00:13:42.920
the up under a lot over the last two
 

00:13:42.920 --> 00:13:43.780
the up under a lot over the last two
days

00:13:43.780 --> 00:13:43.790
days
 

00:13:43.790 --> 00:13:45.220
days
so we're gonna tell you a few greater

00:13:45.220 --> 00:13:45.230
so we're gonna tell you a few greater
 

00:13:45.230 --> 00:13:48.640
so we're gonna tell you a few greater
specific things so the first thing is

00:13:48.640 --> 00:13:48.650
specific things so the first thing is
 

00:13:48.650 --> 00:13:51.250
specific things so the first thing is
that on the application plug-in not on

00:13:51.250 --> 00:13:51.260
that on the application plug-in not on
 

00:13:51.260 --> 00:13:53.200
that on the application plug-in not on
the library or the feature plug-in but

00:13:53.200 --> 00:13:53.210
the library or the feature plug-in but
 

00:13:53.210 --> 00:13:55.060
the library or the feature plug-in but
on the application plug-in on top of all

00:13:55.060 --> 00:13:55.070
on the application plug-in on top of all
 

00:13:55.070 --> 00:13:57.130
on the application plug-in on top of all
the assemble tasks that you see here we

00:13:57.130 --> 00:13:57.140
the assemble tasks that you see here we
 

00:13:57.140 --> 00:13:59.230
the assemble tasks that you see here we
have rendered tasks and so you'll be

00:13:59.230 --> 00:13:59.240
have rendered tasks and so you'll be
 

00:13:59.240 --> 00:14:01.540
have rendered tasks and so you'll be
able to very quickly you know without

00:14:01.540 --> 00:14:01.550
able to very quickly you know without
 

00:14:01.550 --> 00:14:03.910
able to very quickly you know without
any change just go and build a bundle

00:14:03.910 --> 00:14:03.920
any change just go and build a bundle
 

00:14:03.920 --> 00:14:05.770
any change just go and build a bundle
right and remember that the bundle is a

00:14:05.770 --> 00:14:05.780
right and remember that the bundle is a
 

00:14:05.780 --> 00:14:08.920
right and remember that the bundle is a
way to upload that to the Play Store and

00:14:08.920 --> 00:14:08.930
way to upload that to the Play Store and
 

00:14:08.930 --> 00:14:11.260
way to upload that to the Play Store and
get out of the box much smaller apk is

00:14:11.260 --> 00:14:11.270
get out of the box much smaller apk is
 

00:14:11.270 --> 00:14:14.860
get out of the box much smaller apk is
targeting ABI density and languages you

00:14:14.860 --> 00:14:14.870
targeting ABI density and languages you
 

00:14:14.870 --> 00:14:17.080
targeting ABI density and languages you
know for a specific device so you'll get

00:14:17.080 --> 00:14:17.090
know for a specific device so you'll get
 

00:14:17.090 --> 00:14:21.190
know for a specific device so you'll get
much smaller instant locally you can

00:14:21.190 --> 00:14:21.200
much smaller instant locally you can
 

00:14:21.200 --> 00:14:25.120
much smaller instant locally you can
also build an apk exactly the same way

00:14:25.120 --> 00:14:25.130
also build an apk exactly the same way
 

00:14:25.130 --> 00:14:27.520
also build an apk exactly the same way
the Play Store does it when it creates

00:14:27.520 --> 00:14:27.530
the Play Store does it when it creates
 

00:14:27.530 --> 00:14:29.440
the Play Store does it when it creates
those apk so if you want to verify

00:14:29.440 --> 00:14:29.450
those apk so if you want to verify
 

00:14:29.450 --> 00:14:31.510
those apk so if you want to verify
something say you know I have a device

00:14:31.510 --> 00:14:31.520
something say you know I have a device
 

00:14:31.520 --> 00:14:33.460
something say you know I have a device
you know I don't want to build an apk

00:14:33.460 --> 00:14:33.470
you know I don't want to build an apk
 

00:14:33.470 --> 00:14:35.920
you know I don't want to build an apk
directly I want to build an apk to where

00:14:35.920 --> 00:14:35.930
directly I want to build an apk to where
 

00:14:35.930 --> 00:14:37.720
directly I want to build an apk to where
the Play Store would create an apk from

00:14:37.720 --> 00:14:37.730
the Play Store would create an apk from
 

00:14:37.730 --> 00:14:40.450
the Play Store would create an apk from
the bundle you can do that you know so

00:14:40.450 --> 00:14:40.460
the bundle you can do that you know so
 

00:14:40.460 --> 00:14:42.160
the bundle you can do that you know so
the step is definitely a little bit more

00:14:42.160 --> 00:14:42.170
the step is definitely a little bit more
 

00:14:42.170 --> 00:14:44.320
the step is definitely a little bit more
involved than directly building the apk

00:14:44.320 --> 00:14:44.330
involved than directly building the apk
 

00:14:44.330 --> 00:14:46.510
involved than directly building the apk
right we first build a bundle then we

00:14:46.510 --> 00:14:46.520
right we first build a bundle then we
 

00:14:46.520 --> 00:14:48.130
right we first build a bundle then we
use a tool called bundle tool which is

00:14:48.130 --> 00:14:48.140
use a tool called bundle tool which is
 

00:14:48.140 --> 00:14:50.470
use a tool called bundle tool which is
also available as a command-line tool to

00:14:50.470 --> 00:14:50.480
also available as a command-line tool to
 

00:14:50.480 --> 00:14:52.600
also available as a command-line tool to
create a zip of all the possibility case

00:14:52.600 --> 00:14:52.610
create a zip of all the possibility case
 

00:14:52.610 --> 00:14:54.850
create a zip of all the possibility case
and then based on a device configuration

00:14:54.850 --> 00:14:54.860
and then based on a device configuration
 

00:14:54.860 --> 00:14:57.580
and then based on a device configuration
we can go and create those apks in

00:14:57.580 --> 00:14:57.590
we can go and create those apks in
 

00:14:57.590 --> 00:14:59.650
we can go and create those apks in
general we don't really necessarily want

00:14:59.650 --> 00:14:59.660
general we don't really necessarily want
 

00:14:59.660 --> 00:15:02.740
general we don't really necessarily want
you to create that you know manually

00:15:02.740 --> 00:15:02.750
you to create that you know manually
 

00:15:02.750 --> 00:15:05.350
you to create that you know manually
using a greater task however you know a

00:15:05.350 --> 00:15:05.360
using a greater task however you know a
 

00:15:05.360 --> 00:15:07.660
using a greater task however you know a
lot of studio and Gradle itself kind of

00:15:07.660 --> 00:15:07.670
lot of studio and Gradle itself kind of
 

00:15:07.670 --> 00:15:10.120
lot of studio and Gradle itself kind of
can use that flow when you need it so

00:15:10.120 --> 00:15:10.130
can use that flow when you need it so
 

00:15:10.130 --> 00:15:13.240
can use that flow when you need it so
for example the install task if you have

00:15:13.240 --> 00:15:13.250
for example the install task if you have
 

00:15:13.250 --> 00:15:15.790
for example the install task if you have
just the basic Android application with

00:15:15.790 --> 00:15:15.800
just the basic Android application with
 

00:15:15.800 --> 00:15:18.100
just the basic Android application with
no dynamic features is gonna directly

00:15:18.100 --> 00:15:18.110
no dynamic features is gonna directly
 

00:15:18.110 --> 00:15:20.500
no dynamic features is gonna directly
build an apk as soon as you create

00:15:20.500 --> 00:15:20.510
build an apk as soon as you create
 

00:15:20.510 --> 00:15:22.210
build an apk as soon as you create
dynamic features which we'll talk about

00:15:22.210 --> 00:15:22.220
dynamic features which we'll talk about
 

00:15:22.220 --> 00:15:24.790
dynamic features which we'll talk about
in a little bit then the install task

00:15:24.790 --> 00:15:24.800
in a little bit then the install task
 

00:15:24.800 --> 00:15:26.830
in a little bit then the install task
will go through the bundle in order to

00:15:26.830 --> 00:15:26.840
will go through the bundle in order to
 

00:15:26.840 --> 00:15:28.900
will go through the bundle in order to
ensure that we can install that on any

00:15:28.900 --> 00:15:28.910
ensure that we can install that on any
 

00:15:28.910 --> 00:15:30.730
ensure that we can install that on any
device because remember if you have a

00:15:30.730 --> 00:15:30.740
device because remember if you have a
 

00:15:30.740 --> 00:15:32.320
device because remember if you have a
dynamic feature and you try to install

00:15:32.320 --> 00:15:32.330
dynamic feature and you try to install
 

00:15:32.330 --> 00:15:35.050
dynamic feature and you try to install
on a pre held device so API less than 21

00:15:35.050 --> 00:15:35.060
on a pre held device so API less than 21
 

00:15:35.060 --> 00:15:38.170
on a pre held device so API less than 21
we need to fuse that in those epic heirs

00:15:38.170 --> 00:15:38.180
we need to fuse that in those epic heirs
 

00:15:38.180 --> 00:15:40.810
we need to fuse that in those epic heirs
together in order to install it and we

00:15:40.810 --> 00:15:40.820
together in order to install it and we
 

00:15:40.820 --> 00:15:41.980
together in order to install it and we
don't want to do it a way that's

00:15:41.980 --> 00:15:41.990
don't want to do it a way that's
 

00:15:41.990 --> 00:15:43.300
don't want to do it a way that's
different from the Play Store we want to

00:15:43.300 --> 00:15:43.310
different from the Play Store we want to
 

00:15:43.310 --> 00:15:44.710
different from the Play Store we want to
do it exactly the same way that placed

00:15:44.710 --> 00:15:44.720
do it exactly the same way that placed
 

00:15:44.720 --> 00:15:48.040
do it exactly the same way that placed
orders if you try to run tests from the

00:15:48.040 --> 00:15:48.050
orders if you try to run tests from the
 

00:15:48.050 --> 00:15:48.880
orders if you try to run tests from the
command line

00:15:48.880 --> 00:15:48.890
command line
 

00:15:48.890 --> 00:15:51.220
command line
calling connected check it's always

00:15:51.220 --> 00:15:51.230
calling connected check it's always
 

00:15:51.230 --> 00:15:53.110
calling connected check it's always
going to go directly to the apks

00:15:53.110 --> 00:15:53.120
going to go directly to the apks
 

00:15:53.120 --> 00:15:55.270
going to go directly to the apks
we're gonna work later on adding support

00:15:55.270 --> 00:15:55.280
we're gonna work later on adding support
 

00:15:55.280 --> 00:15:56.170
we're gonna work later on adding support
to

00:15:56.170 --> 00:15:56.180
to
 

00:15:56.180 --> 00:15:58.360
to
you know run test yeah the bundle in

00:15:58.360 --> 00:15:58.370
you know run test yeah the bundle in
 

00:15:58.370 --> 00:16:00.850
you know run test yeah the bundle in
order to simulate better exactly the

00:16:00.850 --> 00:16:00.860
order to simulate better exactly the
 

00:16:00.860 --> 00:16:03.040
order to simulate better exactly the
type of apks that are created by the

00:16:03.040 --> 00:16:03.050
type of apks that are created by the
 

00:16:03.050 --> 00:16:06.010
type of apks that are created by the
play store deploying from Studio you

00:16:06.010 --> 00:16:06.020
play store deploying from Studio you
 

00:16:06.020 --> 00:16:08.260
play store deploying from Studio you
have a choice right you can either TRC

00:16:08.260 --> 00:16:08.270
have a choice right you can either TRC
 

00:16:08.270 --> 00:16:11.200
have a choice right you can either TRC
deploy apks or you can deploy apks build

00:16:11.200 --> 00:16:11.210
deploy apks or you can deploy apks build
 

00:16:11.210 --> 00:16:13.090
deploy apks or you can deploy apks build
the other bundle and here

00:16:13.090 --> 00:16:13.100
the other bundle and here
 

00:16:13.100 --> 00:16:15.579
the other bundle and here
the config the run configuration inside

00:16:15.579 --> 00:16:15.589
the config the run configuration inside
 

00:16:15.589 --> 00:16:17.260
the config the run configuration inside
studio has a check box that you can

00:16:17.260 --> 00:16:17.270
studio has a check box that you can
 

00:16:17.270 --> 00:16:20.500
studio has a check box that you can
check we recommend to not check it when

00:16:20.500 --> 00:16:20.510
check we recommend to not check it when
 

00:16:20.510 --> 00:16:23.050
check we recommend to not check it when
you do your regular development you know

00:16:23.050 --> 00:16:23.060
you do your regular development you know
 

00:16:23.060 --> 00:16:25.840
you do your regular development you know
as we saw earlier building a apk from

00:16:25.840 --> 00:16:25.850
as we saw earlier building a apk from
 

00:16:25.850 --> 00:16:27.519
as we saw earlier building a apk from
the bundle is much more complicated than

00:16:27.519 --> 00:16:27.529
the bundle is much more complicated than
 

00:16:27.529 --> 00:16:29.470
the bundle is much more complicated than
building it directly and on top of that

00:16:29.470 --> 00:16:29.480
building it directly and on top of that
 

00:16:29.480 --> 00:16:31.900
building it directly and on top of that
when you deploy from Studio we actually

00:16:31.900 --> 00:16:31.910
when you deploy from Studio we actually
 

00:16:31.910 --> 00:16:33.280
when you deploy from Studio we actually
look at the device you want to target

00:16:33.280 --> 00:16:33.290
look at the device you want to target
 

00:16:33.290 --> 00:16:35.470
look at the device you want to target
and then we inject that information

00:16:35.470 --> 00:16:35.480
and then we inject that information
 

00:16:35.480 --> 00:16:37.329
and then we inject that information
integrator and then Gradle take some

00:16:37.329 --> 00:16:37.339
integrator and then Gradle take some
 

00:16:37.339 --> 00:16:39.639
integrator and then Gradle take some
shortcuts so for example if you require

00:16:39.639 --> 00:16:39.649
shortcuts so for example if you require
 

00:16:39.649 --> 00:16:41.380
shortcuts so for example if you require
legacy multi decks which takes a while

00:16:41.380 --> 00:16:41.390
legacy multi decks which takes a while
 

00:16:41.390 --> 00:16:43.269
legacy multi decks which takes a while
to build but you deploy to device that's

00:16:43.269 --> 00:16:43.279
to build but you deploy to device that's
 

00:16:43.279 --> 00:16:45.250
to build but you deploy to device that's
21 or above we're actually going to use

00:16:45.250 --> 00:16:45.260
21 or above we're actually going to use
 

00:16:45.260 --> 00:16:47.019
21 or above we're actually going to use
native mutex which is much faster

00:16:47.019 --> 00:16:47.029
native mutex which is much faster
 

00:16:47.029 --> 00:16:49.090
native mutex which is much faster
we can't take that kind of shortcut when

00:16:49.090 --> 00:16:49.100
we can't take that kind of shortcut when
 

00:16:49.100 --> 00:16:51.250
we can't take that kind of shortcut when
we build a bundle so we recommend you

00:16:51.250 --> 00:16:51.260
we build a bundle so we recommend you
 

00:16:51.260 --> 00:16:52.720
we build a bundle so we recommend you
know to have two different type of run

00:16:52.720 --> 00:16:52.730
know to have two different type of run
 

00:16:52.730 --> 00:16:54.130
know to have two different type of run
configuration just create two of them

00:16:54.130 --> 00:16:54.140
configuration just create two of them
 

00:16:54.140 --> 00:16:56.560
configuration just create two of them
one with and one without the option and

00:16:56.560 --> 00:16:56.570
one with and one without the option and
 

00:16:56.570 --> 00:16:58.810
one with and one without the option and
then use the apk as often as we can and

00:16:58.810 --> 00:16:58.820
then use the apk as often as we can and
 

00:16:58.820 --> 00:17:00.970
then use the apk as often as we can and
only use the other one when you really

00:17:00.970 --> 00:17:00.980
only use the other one when you really
 

00:17:00.980 --> 00:17:02.800
only use the other one when you really
have to when you want to try exactly the

00:17:02.800 --> 00:17:02.810
have to when you want to try exactly the
 

00:17:02.810 --> 00:17:04.600
have to when you want to try exactly the
apk that could be delivered by the Play

00:17:04.600 --> 00:17:04.610
apk that could be delivered by the Play
 

00:17:04.610 --> 00:17:06.880
apk that could be delivered by the Play
Store if you push to a device again

00:17:06.880 --> 00:17:06.890
Store if you push to a device again
 

00:17:06.890 --> 00:17:09.549
Store if you push to a device again
that's 321 then we're going to use that

00:17:09.549 --> 00:17:09.559
that's 321 then we're going to use that
 

00:17:09.559 --> 00:17:11.380
that's 321 then we're going to use that
option anyway and we're always going to

00:17:11.380 --> 00:17:11.390
option anyway and we're always going to
 

00:17:11.390 --> 00:17:13.419
option anyway and we're always going to
go through the bundle as soon as you

00:17:13.419 --> 00:17:13.429
go through the bundle as soon as you
 

00:17:13.429 --> 00:17:17.199
go through the bundle as soon as you
have dynamic features so you may already

00:17:17.199 --> 00:17:17.209
have dynamic features so you may already
 

00:17:17.209 --> 00:17:20.620
have dynamic features so you may already
be doing manual will see apk using that

00:17:20.620 --> 00:17:20.630
be doing manual will see apk using that
 

00:17:20.630 --> 00:17:22.990
be doing manual will see apk using that
DSL and also there's a variant CPI

00:17:22.990 --> 00:17:23.000
DSL and also there's a variant CPI
 

00:17:23.000 --> 00:17:25.689
DSL and also there's a variant CPI
that'll you to compute version code you

00:17:25.689 --> 00:17:25.699
that'll you to compute version code you
 

00:17:25.699 --> 00:17:27.040
that'll you to compute version code you
know dynamically for the different apks

00:17:27.040 --> 00:17:27.050
know dynamically for the different apks
 

00:17:27.050 --> 00:17:28.930
know dynamically for the different apks
that get generated if you're doing that

00:17:28.930 --> 00:17:28.940
that get generated if you're doing that
 

00:17:28.940 --> 00:17:30.040
that get generated if you're doing that
right now and you want to switch to the

00:17:30.040 --> 00:17:30.050
right now and you want to switch to the
 

00:17:30.050 --> 00:17:32.590
right now and you want to switch to the
bundle you can just erase all of that

00:17:32.590 --> 00:17:32.600
bundle you can just erase all of that
 

00:17:32.600 --> 00:17:35.110
bundle you can just erase all of that
DSL it's completely unnecessary right

00:17:35.110 --> 00:17:35.120
DSL it's completely unnecessary right
 

00:17:35.120 --> 00:17:37.000
DSL it's completely unnecessary right
there's nothing to do all you have to do

00:17:37.000 --> 00:17:37.010
there's nothing to do all you have to do
 

00:17:37.010 --> 00:17:38.770
there's nothing to do all you have to do
you call the bundler task get your

00:17:38.770 --> 00:17:38.780
you call the bundler task get your
 

00:17:38.780 --> 00:17:39.310
you call the bundler task get your
vendor

00:17:39.310 --> 00:17:39.320
vendor
 

00:17:39.320 --> 00:17:41.980
vendor
Yoda and on the server side we will do

00:17:41.980 --> 00:17:41.990
Yoda and on the server side we will do
 

00:17:41.990 --> 00:17:44.290
Yoda and on the server side we will do
all the speed by density avi language by

00:17:44.290 --> 00:17:44.300
all the speed by density avi language by
 

00:17:44.300 --> 00:17:47.950
all the speed by density avi language by
default we do have a DSL to allow you to

00:17:47.950 --> 00:17:47.960
default we do have a DSL to allow you to
 

00:17:47.960 --> 00:17:50.320
default we do have a DSL to allow you to
maybe disable it if you're running into

00:17:50.320 --> 00:17:50.330
maybe disable it if you're running into
 

00:17:50.330 --> 00:17:52.419
maybe disable it if you're running into
problem we expect that there will be

00:17:52.419 --> 00:17:52.429
problem we expect that there will be
 

00:17:52.429 --> 00:17:53.950
problem we expect that there will be
very very few case where you actually

00:17:53.950 --> 00:17:53.960
very very few case where you actually
 

00:17:53.960 --> 00:17:56.799
very very few case where you actually
need to do that but you have the ability

00:17:56.799 --> 00:17:56.809
need to do that but you have the ability
 

00:17:56.809 --> 00:17:59.380
need to do that but you have the ability
if you really have to if you have that

00:17:59.380 --> 00:17:59.390
if you really have to if you have that
 

00:17:59.390 --> 00:18:01.419
if you really have to if you have that
also Firebug and talk to the Play Store

00:18:01.419 --> 00:18:01.429
also Firebug and talk to the Play Store
 

00:18:01.429 --> 00:18:03.190
also Firebug and talk to the Play Store
team and you know see if you can

00:18:03.190 --> 00:18:03.200
team and you know see if you can
 

00:18:03.200 --> 00:18:06.630
team and you know see if you can
actually solve the prime with them

00:18:06.630 --> 00:18:06.640
 

00:18:06.640 --> 00:18:08.760
so I mentioned dynamic feature earlier

00:18:08.760 --> 00:18:08.770
so I mentioned dynamic feature earlier
 

00:18:08.770 --> 00:18:11.520
so I mentioned dynamic feature earlier
so what our dynamic features right there

00:18:11.520 --> 00:18:11.530
so what our dynamic features right there
 

00:18:11.530 --> 00:18:13.500
so what our dynamic features right there
small AP kids that are downloaded on

00:18:13.500 --> 00:18:13.510
small AP kids that are downloaded on
 

00:18:13.510 --> 00:18:16.080
small AP kids that are downloaded on
demand side by side with your main apk

00:18:16.080 --> 00:18:16.090
demand side by side with your main apk
 

00:18:16.090 --> 00:18:17.850
demand side by side with your main apk
so if you have a feature that only 10%

00:18:17.850 --> 00:18:17.860
so if you have a feature that only 10%
 

00:18:17.860 --> 00:18:20.550
so if you have a feature that only 10%
of all users need no need to install it

00:18:20.550 --> 00:18:20.560
of all users need no need to install it
 

00:18:20.560 --> 00:18:22.890
of all users need no need to install it
for the other 90% just have it donated

00:18:22.890 --> 00:18:22.900
for the other 90% just have it donated
 

00:18:22.900 --> 00:18:24.630
for the other 90% just have it donated
on demand so the way you're going to

00:18:24.630 --> 00:18:24.640
on demand so the way you're going to
 

00:18:24.640 --> 00:18:26.760
on demand so the way you're going to
organize your code is it's a separate

00:18:26.760 --> 00:18:26.770
organize your code is it's a separate
 

00:18:26.770 --> 00:18:29.670
organize your code is it's a separate
sub project in greater you have a

00:18:29.670 --> 00:18:29.680
sub project in greater you have a
 

00:18:29.680 --> 00:18:31.050
sub project in greater you have a
different plug-in on you plug-in called

00:18:31.050 --> 00:18:31.060
different plug-in on you plug-in called
 

00:18:31.060 --> 00:18:33.630
different plug-in on you plug-in called
dynamic feature and the layout is a

00:18:33.630 --> 00:18:33.640
dynamic feature and the layout is a
 

00:18:33.640 --> 00:18:35.280
dynamic feature and the layout is a
little bit different compared to let's

00:18:35.280 --> 00:18:35.290
little bit different compared to let's
 

00:18:35.290 --> 00:18:37.050
little bit different compared to let's
say your library right normally in your

00:18:37.050 --> 00:18:37.060
say your library right normally in your
 

00:18:37.060 --> 00:18:39.000
say your library right normally in your
library your application depend on your

00:18:39.000 --> 00:18:39.010
library your application depend on your
 

00:18:39.010 --> 00:18:41.250
library your application depend on your
library and can refer the code of the

00:18:41.250 --> 00:18:41.260
library and can refer the code of the
 

00:18:41.260 --> 00:18:43.860
library and can refer the code of the
library here the features are actually

00:18:43.860 --> 00:18:43.870
library here the features are actually
 

00:18:43.870 --> 00:18:46.950
library here the features are actually
sitting on top and depend on the base so

00:18:46.950 --> 00:18:46.960
sitting on top and depend on the base so
 

00:18:46.960 --> 00:18:49.260
sitting on top and depend on the base so
we can see here the to base feature the

00:18:49.260 --> 00:18:49.270
we can see here the to base feature the
 

00:18:49.270 --> 00:18:51.510
we can see here the to base feature the
to dynamic feature in blue applying the

00:18:51.510 --> 00:18:51.520
to dynamic feature in blue applying the
 

00:18:51.520 --> 00:18:53.550
to dynamic feature in blue applying the
plug-in dynamic feature have a

00:18:53.550 --> 00:18:53.560
plug-in dynamic feature have a
 

00:18:53.560 --> 00:18:55.320
plug-in dynamic feature have a
dependency on the project app which is

00:18:55.320 --> 00:18:55.330
dependency on the project app which is
 

00:18:55.330 --> 00:18:58.530
dependency on the project app which is
your base one now the base one also have

00:18:58.530 --> 00:18:58.540
your base one now the base one also have
 

00:18:58.540 --> 00:19:00.600
your base one now the base one also have
to refer to those dynamic feature it

00:19:00.600 --> 00:19:00.610
to refer to those dynamic feature it
 

00:19:00.610 --> 00:19:03.450
to refer to those dynamic feature it
needs to list them because the way we

00:19:03.450 --> 00:19:03.460
needs to list them because the way we
 

00:19:03.460 --> 00:19:06.210
needs to list them because the way we
build the actually layer it's a little

00:19:06.210 --> 00:19:06.220
build the actually layer it's a little
 

00:19:06.220 --> 00:19:08.400
build the actually layer it's a little
bit complicated and unusual but you need

00:19:08.400 --> 00:19:08.410
bit complicated and unusual but you need
 

00:19:08.410 --> 00:19:10.080
bit complicated and unusual but you need
to list those dynamic features and it's

00:19:10.080 --> 00:19:10.090
to list those dynamic features and it's
 

00:19:10.090 --> 00:19:11.760
to list those dynamic features and it's
just a list of strings which are the

00:19:11.760 --> 00:19:11.770
just a list of strings which are the
 

00:19:11.770 --> 00:19:14.280
just a list of strings which are the
cradle paths of your all of your dynamic

00:19:14.280 --> 00:19:14.290
cradle paths of your all of your dynamic
 

00:19:14.290 --> 00:19:17.970
cradle paths of your all of your dynamic
features if you used instant app since

00:19:17.970 --> 00:19:17.980
features if you used instant app since
 

00:19:17.980 --> 00:19:19.980
features if you used instant app since
last year it probably looks somewhat

00:19:19.980 --> 00:19:19.990
last year it probably looks somewhat
 

00:19:19.990 --> 00:19:23.370
last year it probably looks somewhat
similar you know instant app you have

00:19:23.370 --> 00:19:23.380
similar you know instant app you have
 

00:19:23.380 --> 00:19:25.020
similar you know instant app you have
the feature plug-in which is used both

00:19:25.020 --> 00:19:25.030
the feature plug-in which is used both
 

00:19:25.030 --> 00:19:26.640
the feature plug-in which is used both
for your features and for your base

00:19:26.640 --> 00:19:26.650
for your features and for your base
 

00:19:26.650 --> 00:19:28.770
for your features and for your base
feature except you have a small flag

00:19:28.770 --> 00:19:28.780
feature except you have a small flag
 

00:19:28.780 --> 00:19:31.170
feature except you have a small flag
using base feature equal true but the

00:19:31.170 --> 00:19:31.180
using base feature equal true but the
 

00:19:31.180 --> 00:19:33.120
using base feature equal true but the
base feature also have to refer to all

00:19:33.120 --> 00:19:33.130
base feature also have to refer to all
 

00:19:33.130 --> 00:19:35.130
base feature also have to refer to all
of those features using a slightly

00:19:35.130 --> 00:19:35.140
of those features using a slightly
 

00:19:35.140 --> 00:19:37.050
of those features using a slightly
different DSL which is not great and

00:19:37.050 --> 00:19:37.060
different DSL which is not great and
 

00:19:37.060 --> 00:19:38.550
different DSL which is not great and
will probably migrate to the dynamic

00:19:38.550 --> 00:19:38.560
will probably migrate to the dynamic
 

00:19:38.560 --> 00:19:41.160
will probably migrate to the dynamic
feature version soon but right now you

00:19:41.160 --> 00:19:41.170
feature version soon but right now you
 

00:19:41.170 --> 00:19:44.460
feature version soon but right now you
do it using the future configuration and

00:19:44.460 --> 00:19:44.470
do it using the future configuration and
 

00:19:44.470 --> 00:19:45.960
do it using the future configuration and
you know you probably heard about you

00:19:45.960 --> 00:19:45.970
you know you probably heard about you
 

00:19:45.970 --> 00:19:47.730
you know you probably heard about you
know that in the future you'll be able

00:19:47.730 --> 00:19:47.740
know that in the future you'll be able
 

00:19:47.740 --> 00:19:50.190
know that in the future you'll be able
to instant a neighbor your app bundle in

00:19:50.190 --> 00:19:50.200
to instant a neighbor your app bundle in
 

00:19:50.200 --> 00:19:52.230
to instant a neighbor your app bundle in
order to deliver dynamic apps using the

00:19:52.230 --> 00:19:52.240
order to deliver dynamic apps using the
 

00:19:52.240 --> 00:19:54.570
order to deliver dynamic apps using the
app bundle and this is why it's going to

00:19:54.570 --> 00:19:54.580
app bundle and this is why it's going to
 

00:19:54.580 --> 00:19:56.280
app bundle and this is why it's going to
be possible because the feature plug-in

00:19:56.280 --> 00:19:56.290
be possible because the feature plug-in
 

00:19:56.290 --> 00:19:58.260
be possible because the feature plug-in
and the dynamic feature plug-in out very

00:19:58.260 --> 00:19:58.270
and the dynamic feature plug-in out very
 

00:19:58.270 --> 00:20:00.180
and the dynamic feature plug-in out very
very similar in fact the application

00:20:00.180 --> 00:20:00.190
very similar in fact the application
 

00:20:00.190 --> 00:20:01.770
very similar in fact the application
dynamic feature and feature plug-in

00:20:01.770 --> 00:20:01.780
dynamic feature and feature plug-in
 

00:20:01.780 --> 00:20:04.440
dynamic feature and feature plug-in
share probably over 95% of their code

00:20:04.440 --> 00:20:04.450
share probably over 95% of their code
 

00:20:04.450 --> 00:20:06.420
share probably over 95% of their code
they're extremely similar and so if

00:20:06.420 --> 00:20:06.430
they're extremely similar and so if
 

00:20:06.430 --> 00:20:07.860
they're extremely similar and so if
you're already architecture in your app

00:20:07.860 --> 00:20:07.870
you're already architecture in your app
 

00:20:07.870 --> 00:20:09.570
you're already architecture in your app
for instant app switching to the app

00:20:09.570 --> 00:20:09.580
for instant app switching to the app
 

00:20:09.580 --> 00:20:10.950
for instant app switching to the app
model would be exactly the same

00:20:10.950 --> 00:20:10.960
model would be exactly the same
 

00:20:10.960 --> 00:20:12.090
model would be exactly the same
architecture with slightly different

00:20:12.090 --> 00:20:12.100
architecture with slightly different
 

00:20:12.100 --> 00:20:14.130
architecture with slightly different
plugins and if you're doing dynamic

00:20:14.130 --> 00:20:14.140
plugins and if you're doing dynamic
 

00:20:14.140 --> 00:20:16.980
plugins and if you're doing dynamic
feature right now then also enabling

00:20:16.980 --> 00:20:16.990
feature right now then also enabling
 

00:20:16.990 --> 00:20:18.230
feature right now then also enabling
that to be done it instant

00:20:18.230 --> 00:20:18.240
that to be done it instant
 

00:20:18.240 --> 00:20:22.880
that to be done it instant
we'll be very similar in the future okay

00:20:22.880 --> 00:20:22.890
we'll be very similar in the future okay
 

00:20:22.890 --> 00:20:24.230
we'll be very similar in the future okay
so you know I mentioned that

00:20:24.230 --> 00:20:24.240
so you know I mentioned that
 

00:20:24.240 --> 00:20:25.850
so you know I mentioned that
bidirectional dependency where the a

00:20:25.850 --> 00:20:25.860
bidirectional dependency where the a
 

00:20:25.860 --> 00:20:28.700
bidirectional dependency where the a
bundle needs to know about the base app

00:20:28.700 --> 00:20:28.710
bundle needs to know about the base app
 

00:20:28.710 --> 00:20:30.740
bundle needs to know about the base app
need to know about the feature so if you

00:20:30.740 --> 00:20:30.750
need to know about the feature so if you
 

00:20:30.750 --> 00:20:33.080
need to know about the feature so if you
have those two modules that I had before

00:20:33.080 --> 00:20:33.090
have those two modules that I had before
 

00:20:33.090 --> 00:20:34.970
have those two modules that I had before
if you're milling the apk just look

00:20:34.970 --> 00:20:34.980
if you're milling the apk just look
 

00:20:34.980 --> 00:20:36.500
if you're milling the apk just look
normal right you know there's a bunch of

00:20:36.500 --> 00:20:36.510
normal right you know there's a bunch of
 

00:20:36.510 --> 00:20:38.720
normal right you know there's a bunch of
intermediates in each modules and each

00:20:38.720 --> 00:20:38.730
intermediates in each modules and each
 

00:20:38.730 --> 00:20:41.300
intermediates in each modules and each
output an apk what happens is that the

00:20:41.300 --> 00:20:41.310
output an apk what happens is that the
 

00:20:41.310 --> 00:20:43.670
output an apk what happens is that the
bundler task belongs to the app bundle

00:20:43.670 --> 00:20:43.680
bundler task belongs to the app bundle
 

00:20:43.680 --> 00:20:46.640
bundler task belongs to the app bundle
to the app module and so when you

00:20:46.640 --> 00:20:46.650
to the app module and so when you
 

00:20:46.650 --> 00:20:49.250
to the app module and so when you
actually build the bundle we have to

00:20:49.250 --> 00:20:49.260
actually build the bundle we have to
 

00:20:49.260 --> 00:20:51.020
actually build the bundle we have to
publish things from the feature back

00:20:51.020 --> 00:20:51.030
publish things from the feature back
 

00:20:51.030 --> 00:20:54.380
publish things from the feature back
into the base module and that's why we

00:20:54.380 --> 00:20:54.390
into the base module and that's why we
 

00:20:54.390 --> 00:20:56.030
into the base module and that's why we
need to have all of those dependency be

00:20:56.030 --> 00:20:56.040
need to have all of those dependency be
 

00:20:56.040 --> 00:20:58.220
need to have all of those dependency be
available on the base module if you

00:20:58.220 --> 00:20:58.230
available on the base module if you
 

00:20:58.230 --> 00:21:00.170
available on the base module if you
don't add a dynamic feature to your base

00:21:00.170 --> 00:21:00.180
don't add a dynamic feature to your base
 

00:21:00.180 --> 00:21:01.910
don't add a dynamic feature to your base
module it's just not going to happen

00:21:01.910 --> 00:21:01.920
module it's just not going to happen
 

00:21:01.920 --> 00:21:03.380
module it's just not going to happen
it's not going to show up in your bundle

00:21:03.380 --> 00:21:03.390
it's not going to show up in your bundle
 

00:21:03.390 --> 00:21:09.890
it's not going to show up in your bundle
at all so when developing dynamic

00:21:09.890 --> 00:21:09.900
at all so when developing dynamic
 

00:21:09.900 --> 00:21:11.360
at all so when developing dynamic
features it's important to understand

00:21:11.360 --> 00:21:11.370
features it's important to understand
 

00:21:11.370 --> 00:21:13.820
features it's important to understand
there's some differences with

00:21:13.820 --> 00:21:13.830
there's some differences with
 

00:21:13.830 --> 00:21:15.770
there's some differences with
traditional on the application building

00:21:15.770 --> 00:21:15.780
traditional on the application building
 

00:21:15.780 --> 00:21:17.630
traditional on the application building
so in particular there's some attributes

00:21:17.630 --> 00:21:17.640
so in particular there's some attributes
 

00:21:17.640 --> 00:21:19.160
so in particular there's some attributes
of your application which are invariant

00:21:19.160 --> 00:21:19.170
of your application which are invariant
 

00:21:19.170 --> 00:21:20.900
of your application which are invariant
which don't change between the base

00:21:20.900 --> 00:21:20.910
which don't change between the base
 

00:21:20.910 --> 00:21:23.240
which don't change between the base
module and the features application ID

00:21:23.240 --> 00:21:23.250
module and the features application ID
 

00:21:23.250 --> 00:21:25.610
module and the features application ID
version name version code all of those

00:21:25.610 --> 00:21:25.620
version name version code all of those
 

00:21:25.620 --> 00:21:28.820
version name version code all of those
should be set in the base module and we

00:21:28.820 --> 00:21:28.830
should be set in the base module and we
 

00:21:28.830 --> 00:21:32.120
should be set in the base module and we
will then publish them back to the

00:21:32.120 --> 00:21:32.130
will then publish them back to the
 

00:21:32.130 --> 00:21:34.490
will then publish them back to the
features so that they can be used in the

00:21:34.490 --> 00:21:34.500
features so that they can be used in the
 

00:21:34.500 --> 00:21:36.500
features so that they can be used in the
task when for instance generating the

00:21:36.500 --> 00:21:36.510
task when for instance generating the
 

00:21:36.510 --> 00:21:38.540
task when for instance generating the
manifest or whatever so it's important

00:21:38.540 --> 00:21:38.550
manifest or whatever so it's important
 

00:21:38.550 --> 00:21:40.040
manifest or whatever so it's important
to understand that you set them in the

00:21:40.040 --> 00:21:40.050
to understand that you set them in the
 

00:21:40.050 --> 00:21:41.870
to understand that you set them in the
base you do not repeat them in the

00:21:41.870 --> 00:21:41.880
base you do not repeat them in the
 

00:21:41.880 --> 00:21:43.880
base you do not repeat them in the
features we don't automatically transfer

00:21:43.880 --> 00:21:43.890
features we don't automatically transfer
 

00:21:43.890 --> 00:21:48.080
features we don't automatically transfer
them okay let's talk a little bit about

00:21:48.080 --> 00:21:48.090
them okay let's talk a little bit about
 

00:21:48.090 --> 00:21:50.450
them okay let's talk a little bit about
LTI X so let's say you are in a multi

00:21:50.450 --> 00:21:50.460
LTI X so let's say you are in a multi
 

00:21:50.460 --> 00:21:52.190
LTI X so let's say you are in a multi
deck situation and you're not using any

00:21:52.190 --> 00:21:52.200
deck situation and you're not using any
 

00:21:52.200 --> 00:21:54.230
deck situation and you're not using any
features but you're still doing the

00:21:54.230 --> 00:21:54.240
features but you're still doing the
 

00:21:54.240 --> 00:21:56.300
features but you're still doing the
bundle thing in this case there is

00:21:56.300 --> 00:21:56.310
bundle thing in this case there is
 

00:21:56.310 --> 00:21:58.130
bundle thing in this case there is
really not much difference it's the same

00:21:58.130 --> 00:21:58.140
really not much difference it's the same
 

00:21:58.140 --> 00:21:59.510
really not much difference it's the same
behavior the only difference is that

00:21:59.510 --> 00:21:59.520
behavior the only difference is that
 

00:21:59.520 --> 00:22:01.490
behavior the only difference is that
instead of shipping stuff into an apk we

00:22:01.490 --> 00:22:01.500
instead of shipping stuff into an apk we
 

00:22:01.500 --> 00:22:02.750
instead of shipping stuff into an apk we
are not shipping we are now shipping

00:22:02.750 --> 00:22:02.760
are not shipping we are now shipping
 

00:22:02.760 --> 00:22:05.150
are not shipping we are now shipping
into a bundle which eventually gets

00:22:05.150 --> 00:22:05.160
into a bundle which eventually gets
 

00:22:05.160 --> 00:22:08.360
into a bundle which eventually gets
uploaded the dynamic delivery will not

00:22:08.360 --> 00:22:08.370
uploaded the dynamic delivery will not
 

00:22:08.370 --> 00:22:10.070
uploaded the dynamic delivery will not
do much they will just take these Dex

00:22:10.070 --> 00:22:10.080
do much they will just take these Dex
 

00:22:10.080 --> 00:22:12.890
do much they will just take these Dex
files and store them on the on the

00:22:12.890 --> 00:22:12.900
files and store them on the on the
 

00:22:12.900 --> 00:22:16.150
files and store them on the on the
device before execution so same behavior

00:22:16.150 --> 00:22:16.160
device before execution so same behavior
 

00:22:16.160 --> 00:22:19.670
device before execution so same behavior
if you have feature not still not a lot

00:22:19.670 --> 00:22:19.680
if you have feature not still not a lot
 

00:22:19.680 --> 00:22:21.740
if you have feature not still not a lot
of difference basically each feature can

00:22:21.740 --> 00:22:21.750
of difference basically each feature can
 

00:22:21.750 --> 00:22:24.230
of difference basically each feature can
develop and go can become itself

00:22:24.230 --> 00:22:24.240
develop and go can become itself
 

00:22:24.240 --> 00:22:27.620
develop and go can become itself
multiple text files everything gets

00:22:27.620 --> 00:22:27.630
multiple text files everything gets
 

00:22:27.630 --> 00:22:28.570
multiple text files everything gets
merged

00:22:28.570 --> 00:22:28.580
merged
 

00:22:28.580 --> 00:22:31.210
merged
bass module and then you get all

00:22:31.210 --> 00:22:31.220
bass module and then you get all
 

00:22:31.220 --> 00:22:34.240
bass module and then you get all
packaged inside the bundle again and you

00:22:34.240 --> 00:22:34.250
packaged inside the bundle again and you
 

00:22:34.250 --> 00:22:35.890
packaged inside the bundle again and you
know same thing as without feature it

00:22:35.890 --> 00:22:35.900
know same thing as without feature it
 

00:22:35.900 --> 00:22:37.750
know same thing as without feature it
gets delivered on the phone not a big

00:22:37.750 --> 00:22:37.760
gets delivered on the phone not a big
 

00:22:37.760 --> 00:22:40.360
gets delivered on the phone not a big
difference by default to enabled Oh

00:22:40.360 --> 00:22:40.370
difference by default to enabled Oh
 

00:22:40.370 --> 00:22:44.470
difference by default to enabled Oh
native multi taxing now things get a

00:22:44.470 --> 00:22:44.480
native multi taxing now things get a
 

00:22:44.480 --> 00:22:46.120
native multi taxing now things get a
little bit more complicated if your

00:22:46.120 --> 00:22:46.130
little bit more complicated if your
 

00:22:46.130 --> 00:22:48.640
little bit more complicated if your
minions DK is below 21 so if it's below

00:22:48.640 --> 00:22:48.650
minions DK is below 21 so if it's below
 

00:22:48.650 --> 00:22:51.820
minions DK is below 21 so if it's below
21 we need to have flexibility to still

00:22:51.820 --> 00:22:51.830
21 we need to have flexibility to still
 

00:22:51.830 --> 00:22:53.770
21 we need to have flexibility to still
deliver the application in native multi

00:22:53.770 --> 00:22:53.780
deliver the application in native multi
 

00:22:53.780 --> 00:22:56.740
deliver the application in native multi
decks if you are suddenly deploying on a

00:22:56.740 --> 00:22:56.750
decks if you are suddenly deploying on a
 

00:22:56.750 --> 00:23:00.040
decks if you are suddenly deploying on a
device which is 25 but if you're

00:23:00.040 --> 00:23:00.050
device which is 25 but if you're
 

00:23:00.050 --> 00:23:02.740
device which is 25 but if you're
targeting if you're deploying on 15 now

00:23:02.740 --> 00:23:02.750
targeting if you're deploying on 15 now
 

00:23:02.750 --> 00:23:04.600
targeting if you're deploying on 15 now
we need to do something specific for

00:23:04.600 --> 00:23:04.610
we need to do something specific for
 

00:23:04.610 --> 00:23:07.780
we need to do something specific for
that and what will happen is that the

00:23:07.780 --> 00:23:07.790
that and what will happen is that the
 

00:23:07.790 --> 00:23:10.870
that and what will happen is that the
dynamically delivery will fuse all of

00:23:10.870 --> 00:23:10.880
dynamically delivery will fuse all of
 

00:23:10.880 --> 00:23:13.870
dynamically delivery will fuse all of
your text files into a single one that

00:23:13.870 --> 00:23:13.880
your text files into a single one that
 

00:23:13.880 --> 00:23:16.180
your text files into a single one that
will be delivered so this this is

00:23:16.180 --> 00:23:16.190
will be delivered so this this is
 

00:23:16.190 --> 00:23:18.490
will be delivered so this this is
important to realize that even if none

00:23:18.490 --> 00:23:18.500
important to realize that even if none
 

00:23:18.500 --> 00:23:20.620
important to realize that even if none
of your modules including the base

00:23:20.620 --> 00:23:20.630
of your modules including the base
 

00:23:20.630 --> 00:23:23.020
of your modules including the base
module or your future modules if none of

00:23:23.020 --> 00:23:23.030
module or your future modules if none of
 

00:23:23.030 --> 00:23:26.530
module or your future modules if none of
them use multi dexing itself because we

00:23:26.530 --> 00:23:26.540
them use multi dexing itself because we
 

00:23:26.540 --> 00:23:30.130
them use multi dexing itself because we
combine those into a single one this may

00:23:30.130 --> 00:23:30.140
combine those into a single one this may
 

00:23:30.140 --> 00:23:32.080
combine those into a single one this may
actually go over to the x limit and this

00:23:32.080 --> 00:23:32.090
actually go over to the x limit and this
 

00:23:32.090 --> 00:23:35.260
actually go over to the x limit and this
may a requirement indexing okay so you

00:23:35.260 --> 00:23:35.270
may a requirement indexing okay so you
 

00:23:35.270 --> 00:23:37.540
may a requirement indexing okay so you
need to manually enable multi tags in

00:23:37.540 --> 00:23:37.550
need to manually enable multi tags in
 

00:23:37.550 --> 00:23:39.580
need to manually enable multi tags in
the base application and what that will

00:23:39.580 --> 00:23:39.590
the base application and what that will
 

00:23:39.590 --> 00:23:43.360
the base application and what that will
do is basically create demands decklist

00:23:43.360 --> 00:23:43.370
do is basically create demands decklist
 

00:23:43.370 --> 00:23:45.730
do is basically create demands decklist
that it will ship along with all the

00:23:45.730 --> 00:23:45.740
that it will ship along with all the
 

00:23:45.740 --> 00:23:48.100
that it will ship along with all the
text files into the bundle so now the

00:23:48.100 --> 00:23:48.110
text files into the bundle so now the
 

00:23:48.110 --> 00:23:50.380
text files into the bundle so now the
dynamic delivery will take that bundle

00:23:50.380 --> 00:23:50.390
dynamic delivery will take that bundle
 

00:23:50.390 --> 00:23:52.300
dynamic delivery will take that bundle
and it will be capable that if suddenly

00:23:52.300 --> 00:23:52.310
and it will be capable that if suddenly
 

00:23:52.310 --> 00:23:53.920
and it will be capable that if suddenly
you're trying to deploy this bundle on a

00:23:53.920 --> 00:23:53.930
you're trying to deploy this bundle on a
 

00:23:53.930 --> 00:23:56.770
you're trying to deploy this bundle on a
15 device it will use the main text list

00:23:56.770 --> 00:23:56.780
15 device it will use the main text list
 

00:23:56.780 --> 00:23:59.350
15 device it will use the main text list
to do the fusing create the correct

00:23:59.350 --> 00:23:59.360
to do the fusing create the correct
 

00:23:59.360 --> 00:24:02.170
to do the fusing create the correct
method X and then create the the

00:24:02.170 --> 00:24:02.180
method X and then create the the
 

00:24:02.180 --> 00:24:07.200
method X and then create the the
extended text correctly alright

00:24:07.200 --> 00:24:07.210
 

00:24:07.210 --> 00:24:10.630
shrinking and fist acacia so if the same

00:24:10.630 --> 00:24:10.640
shrinking and fist acacia so if the same
 

00:24:10.640 --> 00:24:13.090
shrinking and fist acacia so if the same
as before you set it on the base module

00:24:13.090 --> 00:24:13.100
as before you set it on the base module
 

00:24:13.100 --> 00:24:15.010
as before you set it on the base module
just like the application ID so you say

00:24:15.010 --> 00:24:15.020
just like the application ID so you say
 

00:24:15.020 --> 00:24:16.750
just like the application ID so you say
minify enabled this is not a lot of

00:24:16.750 --> 00:24:16.760
minify enabled this is not a lot of
 

00:24:16.760 --> 00:24:19.600
minify enabled this is not a lot of
changes but how we actually implement it

00:24:19.600 --> 00:24:19.610
changes but how we actually implement it
 

00:24:19.610 --> 00:24:22.450
changes but how we actually implement it
is really really different so let's

00:24:22.450 --> 00:24:22.460
is really really different so let's
 

00:24:22.460 --> 00:24:24.130
is really really different so let's
let's go through the motion here first

00:24:24.130 --> 00:24:24.140
let's go through the motion here first
 

00:24:24.140 --> 00:24:26.320
let's go through the motion here first
of all this is only supported with r8

00:24:26.320 --> 00:24:26.330
of all this is only supported with r8
 

00:24:26.330 --> 00:24:28.210
of all this is only supported with r8
which is our new shrinker I talked about

00:24:28.210 --> 00:24:28.220
which is our new shrinker I talked about
 

00:24:28.220 --> 00:24:30.760
which is our new shrinker I talked about
earlier so what we do is that we take

00:24:30.760 --> 00:24:30.770
earlier so what we do is that we take
 

00:24:30.770 --> 00:24:33.790
earlier so what we do is that we take
all the rules that will be defined close

00:24:33.790 --> 00:24:33.800
all the rules that will be defined close
 

00:24:33.800 --> 00:24:35.890
all the rules that will be defined close
to the classes they apply to so we'll

00:24:35.890 --> 00:24:35.900
to the classes they apply to so we'll
 

00:24:35.900 --> 00:24:37.780
to the classes they apply to so we'll
the rules in the features we will merge

00:24:37.780 --> 00:24:37.790
the rules in the features we will merge
 

00:24:37.790 --> 00:24:39.400
the rules in the features we will merge
all the rules into a

00:24:39.400 --> 00:24:39.410
all the rules into a
 

00:24:39.410 --> 00:24:41.020
all the rules into a
then we'll take all the class files we

00:24:41.020 --> 00:24:41.030
then we'll take all the class files we
 

00:24:41.030 --> 00:24:44.440
then we'll take all the class files we
filled this in 208 our age will create a

00:24:44.440 --> 00:24:44.450
filled this in 208 our age will create a
 

00:24:44.450 --> 00:24:46.960
filled this in 208 our age will create a
combined decks big text files with

00:24:46.960 --> 00:24:46.970
combined decks big text files with
 

00:24:46.970 --> 00:24:49.660
combined decks big text files with
everything and then we're gonna fed that

00:24:49.660 --> 00:24:49.670
everything and then we're gonna fed that
 

00:24:49.670 --> 00:24:52.690
everything and then we're gonna fed that
Dex file into a Texas splitter which

00:24:52.690 --> 00:24:52.700
Dex file into a Texas splitter which
 

00:24:52.700 --> 00:24:56.230
Dex file into a Texas splitter which
will reflect these decks for all of the

00:24:56.230 --> 00:24:56.240
will reflect these decks for all of the
 

00:24:56.240 --> 00:24:59.200
will reflect these decks for all of the
features plus for the base right so it's

00:24:59.200 --> 00:24:59.210
features plus for the base right so it's
 

00:24:59.210 --> 00:25:01.540
features plus for the base right so it's
a very different mechanism as before now

00:25:01.540 --> 00:25:01.550
a very different mechanism as before now
 

00:25:01.550 --> 00:25:04.060
a very different mechanism as before now
we have again these decks is been ranked

00:25:04.060 --> 00:25:04.070
we have again these decks is been ranked
 

00:25:04.070 --> 00:25:06.250
we have again these decks is been ranked
its benefits catered now there's two

00:25:06.250 --> 00:25:06.260
its benefits catered now there's two
 

00:25:06.260 --> 00:25:08.560
its benefits catered now there's two
scenarios possible either you're using

00:25:08.560 --> 00:25:08.570
scenarios possible either you're using
 

00:25:08.570 --> 00:25:10.990
scenarios possible either you're using
the bundle or using the AP case if

00:25:10.990 --> 00:25:11.000
the bundle or using the AP case if
 

00:25:11.000 --> 00:25:12.250
the bundle or using the AP case if
you're using the bundle it's pretty

00:25:12.250 --> 00:25:12.260
you're using the bundle it's pretty
 

00:25:12.260 --> 00:25:14.080
you're using the bundle it's pretty
simple these text files are

00:25:14.080 --> 00:25:14.090
simple these text files are
 

00:25:14.090 --> 00:25:15.550
simple these text files are
automatically transferred into the

00:25:15.550 --> 00:25:15.560
automatically transferred into the
 

00:25:15.560 --> 00:25:18.760
automatically transferred into the
bundle like we saw earlier if you using

00:25:18.760 --> 00:25:18.770
bundle like we saw earlier if you using
 

00:25:18.770 --> 00:25:21.520
bundle like we saw earlier if you using
feature it's slightly different the Dex

00:25:21.520 --> 00:25:21.530
feature it's slightly different the Dex
 

00:25:21.530 --> 00:25:23.590
feature it's slightly different the Dex
files it to be republished back to each

00:25:23.590 --> 00:25:23.600
files it to be republished back to each
 

00:25:23.600 --> 00:25:27.670
files it to be republished back to each
of the feature and then they will be

00:25:27.670 --> 00:25:27.680
of the feature and then they will be
 

00:25:27.680 --> 00:25:31.870
of the feature and then they will be
packaged into the AP case all right so

00:25:31.870 --> 00:25:31.880
packaged into the AP case all right so
 

00:25:31.880 --> 00:25:33.610
packaged into the AP case all right so
it's a slightly different mechanism as

00:25:33.610 --> 00:25:33.620
it's a slightly different mechanism as
 

00:25:33.620 --> 00:25:35.410
it's a slightly different mechanism as
we must have said in the past there's a

00:25:35.410 --> 00:25:35.420
we must have said in the past there's a
 

00:25:35.420 --> 00:25:36.730
we must have said in the past there's a
lot of going back and forth and that's

00:25:36.730 --> 00:25:36.740
lot of going back and forth and that's
 

00:25:36.740 --> 00:25:38.230
lot of going back and forth and that's
why we need to have these dependencies

00:25:38.230 --> 00:25:38.240
why we need to have these dependencies
 

00:25:38.240 --> 00:25:44.800
why we need to have these dependencies
between features and app ok so we wanted

00:25:44.800 --> 00:25:44.810
between features and app ok so we wanted
 

00:25:44.810 --> 00:25:46.480
between features and app ok so we wanted
to talk a little bit about a few things

00:25:46.480 --> 00:25:46.490
to talk a little bit about a few things
 

00:25:46.490 --> 00:25:48.160
to talk a little bit about a few things
that actually not chipping in Twitter -

00:25:48.160 --> 00:25:48.170
that actually not chipping in Twitter -
 

00:25:48.170 --> 00:25:50.650
that actually not chipping in Twitter -
we expect we're working on it we've been

00:25:50.650 --> 00:25:50.660
we expect we're working on it we've been
 

00:25:50.660 --> 00:25:53.230
we expect we're working on it we've been
working on it for a while we expect they

00:25:53.230 --> 00:25:53.240
working on it for a while we expect they
 

00:25:53.240 --> 00:25:56.470
working on it for a while we expect they
will ship soon you know 3.3 canary and

00:25:56.470 --> 00:25:56.480
will ship soon you know 3.3 canary and
 

00:25:56.480 --> 00:25:59.020
will ship soon you know 3.3 canary and
they have a lot of changes and so we

00:25:59.020 --> 00:25:59.030
they have a lot of changes and so we
 

00:25:59.030 --> 00:26:00.340
they have a lot of changes and so we
wanted to kind of like give you a heads

00:26:00.340 --> 00:26:00.350
wanted to kind of like give you a heads
 

00:26:00.350 --> 00:26:03.160
wanted to kind of like give you a heads
up and also we want to feedback as soon

00:26:03.160 --> 00:26:03.170
up and also we want to feedback as soon
 

00:26:03.170 --> 00:26:04.690
up and also we want to feedback as soon
as it's available so I want to talk

00:26:04.690 --> 00:26:04.700
as it's available so I want to talk
 

00:26:04.700 --> 00:26:06.400
as it's available so I want to talk
about the way we process resources right

00:26:06.400 --> 00:26:06.410
about the way we process resources right
 

00:26:06.410 --> 00:26:08.740
about the way we process resources right
now in the build so if you have a first

00:26:08.740 --> 00:26:08.750
now in the build so if you have a first
 

00:26:08.750 --> 00:26:12.370
now in the build so if you have a first
library called library - in the current

00:26:12.370 --> 00:26:12.380
library called library - in the current
 

00:26:12.380 --> 00:26:14.170
library called library - in the current
flow what happens is that we're going to

00:26:14.170 --> 00:26:14.180
flow what happens is that we're going to
 

00:26:14.180 --> 00:26:16.720
flow what happens is that we're going to
process those resources and we're just

00:26:16.720 --> 00:26:16.730
process those resources and we're just
 

00:26:16.730 --> 00:26:18.490
process those resources and we're just
going to generate another Java and

00:26:18.490 --> 00:26:18.500
going to generate another Java and
 

00:26:18.500 --> 00:26:19.090
going to generate another Java and
nothing else

00:26:19.090 --> 00:26:19.100
nothing else
 

00:26:19.100 --> 00:26:23.110
nothing else
so when this gets consumed not by

00:26:23.110 --> 00:26:23.120
so when this gets consumed not by
 

00:26:23.120 --> 00:26:25.660
so when this gets consumed not by
another library everyone this one may be

00:26:25.660 --> 00:26:25.670
another library everyone this one may be
 

00:26:25.670 --> 00:26:27.910
another library everyone this one may be
referencing resources from library - and

00:26:27.910 --> 00:26:27.920
referencing resources from library - and
 

00:26:27.920 --> 00:26:30.760
referencing resources from library - and
so in order to really validate all those

00:26:30.760 --> 00:26:30.770
so in order to really validate all those
 

00:26:30.770 --> 00:26:32.890
so in order to really validate all those
resource references and also these will

00:26:32.890 --> 00:26:32.900
resource references and also these will
 

00:26:32.900 --> 00:26:35.230
resource references and also these will
some overlay mechanism we're going to

00:26:35.230 --> 00:26:35.240
some overlay mechanism we're going to
 

00:26:35.240 --> 00:26:37.180
some overlay mechanism we're going to
merge those two resource folder into a

00:26:37.180 --> 00:26:37.190
merge those two resource folder into a
 

00:26:37.190 --> 00:26:39.490
merge those two resource folder into a
single resource folder and process it

00:26:39.490 --> 00:26:39.500
single resource folder and process it
 

00:26:39.500 --> 00:26:41.710
single resource folder and process it
and then generate an order our class we

00:26:41.710 --> 00:26:41.720
and then generate an order our class we
 

00:26:41.720 --> 00:26:43.300
and then generate an order our class we
actually generate two our classes right

00:26:43.300 --> 00:26:43.310
actually generate two our classes right
 

00:26:43.310 --> 00:26:45.370
actually generate two our classes right
one is for the library itself which

00:26:45.370 --> 00:26:45.380
one is for the library itself which
 

00:26:45.380 --> 00:26:47.200
one is for the library itself which
library one which contain all the

00:26:47.200 --> 00:26:47.210
library one which contain all the
 

00:26:47.210 --> 00:26:48.000
library one which contain all the
resources from

00:26:48.000 --> 00:26:48.010
resources from
 

00:26:48.010 --> 00:26:50.280
resources from
a library too and then we have another

00:26:50.280 --> 00:26:50.290
a library too and then we have another
 

00:26:50.290 --> 00:26:52.020
a library too and then we have another
one which is just a new version of the

00:26:52.020 --> 00:26:52.030
one which is just a new version of the
 

00:26:52.030 --> 00:26:54.120
one which is just a new version of the
our class generated by library 2 that is

00:26:54.120 --> 00:26:54.130
our class generated by library 2 that is
 

00:26:54.130 --> 00:26:55.710
our class generated by library 2 that is
used in case you want to run tests and

00:26:55.710 --> 00:26:55.720
used in case you want to run tests and
 

00:26:55.720 --> 00:26:57.390
used in case you want to run tests and
things like that you need the final ID

00:26:57.390 --> 00:26:57.400
things like that you need the final ID
 

00:26:57.400 --> 00:27:00.770
things like that you need the final ID
version of it so then if that gets

00:27:00.770 --> 00:27:00.780
version of it so then if that gets
 

00:27:00.780 --> 00:27:03.870
version of it so then if that gets
consumed by an application we cannot

00:27:03.870 --> 00:27:03.880
consumed by an application we cannot
 

00:27:03.880 --> 00:27:05.340
consumed by an application we cannot
have to do the same thing again so we're

00:27:05.340 --> 00:27:05.350
have to do the same thing again so we're
 

00:27:05.350 --> 00:27:07.710
have to do the same thing again so we're
gonna re merge the amp and library 1

00:27:07.710 --> 00:27:07.720
gonna re merge the amp and library 1
 

00:27:07.720 --> 00:27:11.160
gonna re merge the amp and library 1
library 2 and process all of that and

00:27:11.160 --> 00:27:11.170
library 2 and process all of that and
 

00:27:11.170 --> 00:27:13.200
library 2 and process all of that and
then we generate the final resource

00:27:13.200 --> 00:27:13.210
then we generate the final resource
 

00:27:13.210 --> 00:27:15.510
then we generate the final resource
binary format as well as all the final

00:27:15.510 --> 00:27:15.520
binary format as well as all the final
 

00:27:15.520 --> 00:27:18.060
binary format as well as all the final
our classes that are needed by the code

00:27:18.060 --> 00:27:18.070
our classes that are needed by the code
 

00:27:18.070 --> 00:27:21.120
our classes that are needed by the code
from the app library 1 and library so as

00:27:21.120 --> 00:27:21.130
from the app library 1 and library so as
 

00:27:21.130 --> 00:27:22.350
from the app library 1 and library so as
you can see this is not exactly

00:27:22.350 --> 00:27:22.360
you can see this is not exactly
 

00:27:22.360 --> 00:27:23.670
you can see this is not exactly
efficient right you know this is

00:27:23.670 --> 00:27:23.680
efficient right you know this is
 

00:27:23.680 --> 00:27:25.650
efficient right you know this is
probably one of the last thing that is

00:27:25.650 --> 00:27:25.660
probably one of the last thing that is
 

00:27:25.660 --> 00:27:27.450
probably one of the last thing that is
very inefficient in the way we build

00:27:27.450 --> 00:27:27.460
very inefficient in the way we build
 

00:27:27.460 --> 00:27:30.120
very inefficient in the way we build
things the resources from library 2 is

00:27:30.120 --> 00:27:30.130
things the resources from library 2 is
 

00:27:30.130 --> 00:27:31.590
things the resources from library 2 is
basically merge and processed three

00:27:31.590 --> 00:27:31.600
basically merge and processed three
 

00:27:31.600 --> 00:27:33.900
basically merge and processed three
times we generate a lot of our classes

00:27:33.900 --> 00:27:33.910
times we generate a lot of our classes
 

00:27:33.910 --> 00:27:36.510
times we generate a lot of our classes
in fact we're seeing some project with a

00:27:36.510 --> 00:27:36.520
in fact we're seeing some project with a
 

00:27:36.520 --> 00:27:38.940
in fact we're seeing some project with a
few hundred modules generating several

00:27:38.940 --> 00:27:38.950
few hundred modules generating several
 

00:27:38.950 --> 00:27:42.170
few hundred modules generating several
thousands our classes which is too many

00:27:42.170 --> 00:27:42.180
thousands our classes which is too many
 

00:27:42.180 --> 00:27:45.090
thousands our classes which is too many
and so we really need to solve this so

00:27:45.090 --> 00:27:45.100
and so we really need to solve this so
 

00:27:45.100 --> 00:27:46.800
and so we really need to solve this so
as I said we've been working on a new

00:27:46.800 --> 00:27:46.810
as I said we've been working on a new
 

00:27:46.810 --> 00:27:48.690
as I said we've been working on a new
flow and this is what the new flow looks

00:27:48.690 --> 00:27:48.700
flow and this is what the new flow looks
 

00:27:48.700 --> 00:27:50.850
flow and this is what the new flow looks
like so first when we compile the

00:27:50.850 --> 00:27:50.860
like so first when we compile the
 

00:27:50.860 --> 00:27:52.500
like so first when we compile the
library to we're going to generate a

00:27:52.500 --> 00:27:52.510
library to we're going to generate a
 

00:27:52.510 --> 00:27:54.930
library to we're going to generate a
binary version of resources and this is

00:27:54.930 --> 00:27:54.940
binary version of resources and this is
 

00:27:54.940 --> 00:27:57.600
binary version of resources and this is
because apt to has that future we can't

00:27:57.600 --> 00:27:57.610
because apt to has that future we can't
 

00:27:57.610 --> 00:27:59.190
because apt to has that future we can't
make that work with apt so that's why

00:27:59.190 --> 00:27:59.200
make that work with apt so that's why
 

00:27:59.200 --> 00:28:00.840
make that work with apt so that's why
you're almost saying apt to is going

00:28:00.840 --> 00:28:00.850
you're almost saying apt to is going
 

00:28:00.850 --> 00:28:04.140
you're almost saying apt to is going
away a p2 is really the future we also

00:28:04.140 --> 00:28:04.150
away a p2 is really the future we also
 

00:28:04.150 --> 00:28:06.150
away a p2 is really the future we also
create the R class and this time we just

00:28:06.150 --> 00:28:06.160
create the R class and this time we just
 

00:28:06.160 --> 00:28:07.620
create the R class and this time we just
generate the R class directly rather

00:28:07.620 --> 00:28:07.630
generate the R class directly rather
 

00:28:07.630 --> 00:28:08.850
generate the R class directly rather
than the source code so that we don't

00:28:08.850 --> 00:28:08.860
than the source code so that we don't
 

00:28:08.860 --> 00:28:10.970
than the source code so that we don't
have to compile it that's more efficient

00:28:10.970 --> 00:28:10.980
have to compile it that's more efficient
 

00:28:10.980 --> 00:28:14.520
have to compile it that's more efficient
when we depend on it and consume it in

00:28:14.520 --> 00:28:14.530
when we depend on it and consume it in
 

00:28:14.530 --> 00:28:17.340
when we depend on it and consume it in
library 1 what we're going to do is that

00:28:17.340 --> 00:28:17.350
library 1 what we're going to do is that
 

00:28:17.350 --> 00:28:18.570
library 1 what we're going to do is that
we're only going to process the

00:28:18.570 --> 00:28:18.580
we're only going to process the
 

00:28:18.580 --> 00:28:20.910
we're only going to process the
resources of that budget and then we'll

00:28:20.910 --> 00:28:20.920
resources of that budget and then we'll
 

00:28:20.920 --> 00:28:23.040
resources of that budget and then we'll
use the output of the previous module

00:28:23.040 --> 00:28:23.050
use the output of the previous module
 

00:28:23.050 --> 00:28:25.140
use the output of the previous module
the same way basically you use a job

00:28:25.140 --> 00:28:25.150
the same way basically you use a job
 

00:28:25.150 --> 00:28:27.090
the same way basically you use a job
during Java C right it's just a compiled

00:28:27.090 --> 00:28:27.100
during Java C right it's just a compiled
 

00:28:27.100 --> 00:28:30.060
during Java C right it's just a compiled
class pass it's mostly there to validate

00:28:30.060 --> 00:28:30.070
class pass it's mostly there to validate
 

00:28:30.070 --> 00:28:32.430
class pass it's mostly there to validate
again resource references and we

00:28:32.430 --> 00:28:32.440
again resource references and we
 

00:28:32.440 --> 00:28:33.930
again resource references and we
generate a new resource package that

00:28:33.930 --> 00:28:33.940
generate a new resource package that
 

00:28:33.940 --> 00:28:35.880
generate a new resource package that
only contains those resources not the

00:28:35.880 --> 00:28:35.890
only contains those resources not the
 

00:28:35.890 --> 00:28:37.440
only contains those resources not the
merge version there's no much anymore

00:28:37.440 --> 00:28:37.450
merge version there's no much anymore
 

00:28:37.450 --> 00:28:39.540
merge version there's no much anymore
and the actor has only of that library

00:28:39.540 --> 00:28:39.550
and the actor has only of that library
 

00:28:39.550 --> 00:28:42.540
and the actor has only of that library
now that library our class only contain

00:28:42.540 --> 00:28:42.550
now that library our class only contain
 

00:28:42.550 --> 00:28:44.700
now that library our class only contain
the resources of that library it does

00:28:44.700 --> 00:28:44.710
the resources of that library it does
 

00:28:44.710 --> 00:28:46.770
the resources of that library it does
not contain the resource IDs of the

00:28:46.770 --> 00:28:46.780
not contain the resource IDs of the
 

00:28:46.780 --> 00:28:48.810
not contain the resource IDs of the
previous library and this one we don't

00:28:48.810 --> 00:28:48.820
previous library and this one we don't
 

00:28:48.820 --> 00:28:50.960
previous library and this one we don't
merge those IDs anymore

00:28:50.960 --> 00:28:50.970
merge those IDs anymore
 

00:28:50.970 --> 00:28:53.810
merge those IDs anymore
when an app

00:28:53.810 --> 00:28:53.820
when an app
 

00:28:53.820 --> 00:28:56.659
when an app
depends on library 1 a library 2

00:28:56.659 --> 00:28:56.669
depends on library 1 a library 2
 

00:28:56.669 --> 00:29:00.019
depends on library 1 a library 2
principal at the end we have an

00:29:00.019 --> 00:29:00.029
principal at the end we have an
 

00:29:00.029 --> 00:29:01.609
principal at the end we have an
additional step because we need to take

00:29:01.609 --> 00:29:01.619
additional step because we need to take
 

00:29:01.619 --> 00:29:04.879
additional step because we need to take
all those binary and the binary format

00:29:04.879 --> 00:29:04.889
all those binary and the binary format
 

00:29:04.889 --> 00:29:06.739
all those binary and the binary format
of the resources and merge it into the

00:29:06.739 --> 00:29:06.749
of the resources and merge it into the
 

00:29:06.749 --> 00:29:09.669
of the resources and merge it into the
final one and create the final our class

00:29:09.669 --> 00:29:09.679
final one and create the final our class
 

00:29:09.679 --> 00:29:11.960
final one and create the final our class
so as you can see we are generating a

00:29:11.960 --> 00:29:11.970
so as you can see we are generating a
 

00:29:11.970 --> 00:29:13.820
so as you can see we are generating a
lot less classes and also it's a lot

00:29:13.820 --> 00:29:13.830
lot less classes and also it's a lot
 

00:29:13.830 --> 00:29:15.649
lot less classes and also it's a lot
more efficient for example if I change a

00:29:15.649 --> 00:29:15.659
more efficient for example if I change a
 

00:29:15.659 --> 00:29:19.039
more efficient for example if I change a
resource in library to by just editing

00:29:19.039 --> 00:29:19.049
resource in library to by just editing
 

00:29:19.049 --> 00:29:22.099
resource in library to by just editing
let's say string there's no reason that

00:29:22.099 --> 00:29:22.109
let's say string there's no reason that
 

00:29:22.109 --> 00:29:24.320
let's say string there's no reason that
I need to compile library 1 again right

00:29:24.320 --> 00:29:24.330
I need to compile library 1 again right
 

00:29:24.330 --> 00:29:27.259
I need to compile library 1 again right
it's just the list of ideas that I need

00:29:27.259 --> 00:29:27.269
it's just the list of ideas that I need
 

00:29:27.269 --> 00:29:28.879
it's just the list of ideas that I need
to check against for reference is

00:29:28.879 --> 00:29:28.889
to check against for reference is
 

00:29:28.889 --> 00:29:31.279
to check against for reference is
exactly the same one there's no changes

00:29:31.279 --> 00:29:31.289
exactly the same one there's no changes
 

00:29:31.289 --> 00:29:32.960
exactly the same one there's no changes
so we can use the same thing like

00:29:32.960 --> 00:29:32.970
so we can use the same thing like
 

00:29:32.970 --> 00:29:34.609
so we can use the same thing like
comparison avoidance that we use for

00:29:34.609 --> 00:29:34.619
comparison avoidance that we use for
 

00:29:34.619 --> 00:29:36.680
comparison avoidance that we use for
Java C and then we don't need you're a

00:29:36.680 --> 00:29:36.690
Java C and then we don't need you're a
 

00:29:36.690 --> 00:29:38.269
Java C and then we don't need you're a
compiler very one we don't need to

00:29:38.269 --> 00:29:38.279
compiler very one we don't need to
 

00:29:38.279 --> 00:29:40.489
compiler very one we don't need to
recompile the app as well all we have to

00:29:40.489 --> 00:29:40.499
recompile the app as well all we have to
 

00:29:40.499 --> 00:29:42.279
recompile the app as well all we have to
do is do the finder link and that's it

00:29:42.279 --> 00:29:42.289
do is do the finder link and that's it
 

00:29:42.289 --> 00:29:45.139
do is do the finder link and that's it
and we can do that also because the our

00:29:45.139 --> 00:29:45.149
and we can do that also because the our
 

00:29:45.149 --> 00:29:48.139
and we can do that also because the our
class for the app does not use final IDs

00:29:48.139 --> 00:29:48.149
class for the app does not use final IDs
 

00:29:48.149 --> 00:29:50.419
class for the app does not use final IDs
anymore so let's look at some of the

00:29:50.419 --> 00:29:50.429
anymore so let's look at some of the
 

00:29:50.429 --> 00:29:53.239
anymore so let's look at some of the
impact of that change so first I said

00:29:53.239 --> 00:29:53.249
impact of that change so first I said
 

00:29:53.249 --> 00:29:55.399
impact of that change so first I said
that the our class of each module only

00:29:55.399 --> 00:29:55.409
that the our class of each module only
 

00:29:55.409 --> 00:29:57.259
that the our class of each module only
contain the resources of that module it

00:29:57.259 --> 00:29:57.269
contain the resources of that module it
 

00:29:57.269 --> 00:29:59.060
contain the resources of that module it
doesn't contain all of them that means

00:29:59.060 --> 00:29:59.070
doesn't contain all of them that means
 

00:29:59.070 --> 00:30:00.379
doesn't contain all of them that means
that if you're inside a module you want

00:30:00.379 --> 00:30:00.389
that if you're inside a module you want
 

00:30:00.389 --> 00:30:02.720
that if you're inside a module you want
to reference another resource from

00:30:02.720 --> 00:30:02.730
to reference another resource from
 

00:30:02.730 --> 00:30:04.430
to reference another resource from
another module you have to use the our

00:30:04.430 --> 00:30:04.440
another module you have to use the our
 

00:30:04.440 --> 00:30:06.590
another module you have to use the our
class from that module instead of the

00:30:06.590 --> 00:30:06.600
class from that module instead of the
 

00:30:06.600 --> 00:30:09.259
class from that module instead of the
our class of your app that means you're

00:30:09.259 --> 00:30:09.269
our class of your app that means you're
 

00:30:09.269 --> 00:30:11.090
our class of your app that means you're
likely to have to import more than one

00:30:11.090 --> 00:30:11.100
likely to have to import more than one
 

00:30:11.100 --> 00:30:13.580
likely to have to import more than one
our class which cut links or easily

00:30:13.580 --> 00:30:13.590
our class which cut links or easily
 

00:30:13.590 --> 00:30:15.769
our class which cut links or easily
which type Aaliyah's we are looking at

00:30:15.769 --> 00:30:15.779
which type Aaliyah's we are looking at
 

00:30:15.779 --> 00:30:17.180
which type Aaliyah's we are looking at
ways to also make that work in Java

00:30:17.180 --> 00:30:17.190
ways to also make that work in Java
 

00:30:17.190 --> 00:30:18.560
ways to also make that work in Java
easily because technically there's no

00:30:18.560 --> 00:30:18.570
easily because technically there's no
 

00:30:18.570 --> 00:30:19.820
easily because technically there's no
reason for the our class to be called

00:30:19.820 --> 00:30:19.830
reason for the our class to be called
 

00:30:19.830 --> 00:30:21.560
reason for the our class to be called
our it could be called whatever else so

00:30:21.560 --> 00:30:21.570
our it could be called whatever else so
 

00:30:21.570 --> 00:30:24.229
our it could be called whatever else so
each library could define its own name

00:30:24.229 --> 00:30:24.239
each library could define its own name
 

00:30:24.239 --> 00:30:25.970
each library could define its own name
to reduce the amount of conflicts and

00:30:25.970 --> 00:30:25.980
to reduce the amount of conflicts and
 

00:30:25.980 --> 00:30:28.159
to reduce the amount of conflicts and
again as I said you know the our class

00:30:28.159 --> 00:30:28.169
again as I said you know the our class
 

00:30:28.169 --> 00:30:29.989
again as I said you know the our class
IDs are not final anymore even in the

00:30:29.989 --> 00:30:29.999
IDs are not final anymore even in the
 

00:30:29.999 --> 00:30:31.460
IDs are not final anymore even in the
app to submit out to inside libraries

00:30:31.460 --> 00:30:31.470
app to submit out to inside libraries
 

00:30:31.470 --> 00:30:33.769
app to submit out to inside libraries
which means that you can to use Java

00:30:33.769 --> 00:30:33.779
which means that you can to use Java
 

00:30:33.779 --> 00:30:34.729
which means that you can to use Java
switch cases anymore

00:30:34.729 --> 00:30:34.739
switch cases anymore
 

00:30:34.739 --> 00:30:39.379
switch cases anymore
I mentioned we are not doing resource

00:30:39.379 --> 00:30:39.389
I mentioned we are not doing resource
 

00:30:39.389 --> 00:30:42.320
I mentioned we are not doing resource
matter anymore so if you have a module

00:30:42.320 --> 00:30:42.330
matter anymore so if you have a module
 

00:30:42.330 --> 00:30:45.139
matter anymore so if you have a module
that redefined our like a resource

00:30:45.139 --> 00:30:45.149
that redefined our like a resource
 

00:30:45.149 --> 00:30:46.789
that redefined our like a resource
already present in a library that's not

00:30:46.789 --> 00:30:46.799
already present in a library that's not
 

00:30:46.799 --> 00:30:49.639
already present in a library that's not
going to work anymore and there's some

00:30:49.639 --> 00:30:49.649
going to work anymore and there's some
 

00:30:49.649 --> 00:30:52.279
going to work anymore and there's some
good reason for that we definitely want

00:30:52.279 --> 00:30:52.289
good reason for that we definitely want
 

00:30:52.289 --> 00:30:54.019
good reason for that we definitely want
to hear from you if you're using that in

00:30:54.019 --> 00:30:54.029
to hear from you if you're using that in
 

00:30:54.029 --> 00:30:56.570
to hear from you if you're using that in
a strange way if what you're doing is

00:30:56.570 --> 00:30:56.580
a strange way if what you're doing is
 

00:30:56.580 --> 00:30:58.489
a strange way if what you're doing is
well in debug in my app I want to

00:30:58.489 --> 00:30:58.499
well in debug in my app I want to
 

00:30:58.499 --> 00:31:00.139
well in debug in my app I want to
override an icon that's coming from one

00:31:00.139 --> 00:31:00.149
override an icon that's coming from one
 

00:31:00.149 --> 00:31:02.149
override an icon that's coming from one
of my library you can just use by

00:31:02.149 --> 00:31:02.159
of my library you can just use by
 

00:31:02.159 --> 00:31:03.680
of my library you can just use by
October dependency management right in

00:31:03.680 --> 00:31:03.690
October dependency management right in
 

00:31:03.690 --> 00:31:06.080
October dependency management right in
that library have a diversion of that

00:31:06.080 --> 00:31:06.090
that library have a diversion of that
 

00:31:06.090 --> 00:31:08.400
that library have a diversion of that
icon and then the

00:31:08.400 --> 00:31:08.410
icon and then the
 

00:31:08.410 --> 00:31:10.230
icon and then the
we consume the debug version anyway

00:31:10.230 --> 00:31:10.240
we consume the debug version anyway
 

00:31:10.240 --> 00:31:12.480
we consume the debug version anyway
which was not the case before 300 so

00:31:12.480 --> 00:31:12.490
which was not the case before 300 so
 

00:31:12.490 --> 00:31:14.370
which was not the case before 300 so
that solves that problem if you have

00:31:14.370 --> 00:31:14.380
that solves that problem if you have
 

00:31:14.380 --> 00:31:16.170
that solves that problem if you have
another use case definitely talk to us

00:31:16.170 --> 00:31:16.180
another use case definitely talk to us
 

00:31:16.180 --> 00:31:19.730
another use case definitely talk to us
because we want to hear about it

00:31:19.730 --> 00:31:19.740
 

00:31:19.740 --> 00:31:22.290
so I mentioned namespace right you know

00:31:22.290 --> 00:31:22.300
so I mentioned namespace right you know
 

00:31:22.300 --> 00:31:24.090
so I mentioned namespace right you know
what I haven't talked about any

00:31:24.090 --> 00:31:24.100
what I haven't talked about any
 

00:31:24.100 --> 00:31:25.950
what I haven't talked about any
namespace so far but when you think

00:31:25.950 --> 00:31:25.960
namespace so far but when you think
 

00:31:25.960 --> 00:31:27.270
namespace so far but when you think
about it you know I just said we don't

00:31:27.270 --> 00:31:27.280
about it you know I just said we don't
 

00:31:27.280 --> 00:31:28.920
about it you know I just said we don't
have any resource manager or resource

00:31:28.920 --> 00:31:28.930
have any resource manager or resource
 

00:31:28.930 --> 00:31:31.320
have any resource manager or resource
for Berlin so what happens is your

00:31:31.320 --> 00:31:31.330
for Berlin so what happens is your
 

00:31:31.330 --> 00:31:32.820
for Berlin so what happens is your
application depend on the third-party

00:31:32.820 --> 00:31:32.830
application depend on the third-party
 

00:31:32.830 --> 00:31:34.500
application depend on the third-party
library here or third-party library here

00:31:34.500 --> 00:31:34.510
library here or third-party library here
 

00:31:34.510 --> 00:31:37.080
library here or third-party library here
and both of them did not declare exactly

00:31:37.080 --> 00:31:37.090
and both of them did not declare exactly
 

00:31:37.090 --> 00:31:38.610
and both of them did not declare exactly
the same resource with the same name but

00:31:38.610 --> 00:31:38.620
the same resource with the same name but
 

00:31:38.620 --> 00:31:40.620
the same resource with the same name but
with a different value you know a string

00:31:40.620 --> 00:31:40.630
with a different value you know a string
 

00:31:40.630 --> 00:31:42.900
with a different value you know a string
maybe or layout or Nikon or something

00:31:42.900 --> 00:31:42.910
maybe or layout or Nikon or something
 

00:31:42.910 --> 00:31:44.490
maybe or layout or Nikon or something
like that in the past the resource

00:31:44.490 --> 00:31:44.500
like that in the past the resource
 

00:31:44.500 --> 00:31:46.380
like that in the past the resource
merger would just pick one of them

00:31:46.380 --> 00:31:46.390
merger would just pick one of them
 

00:31:46.390 --> 00:31:48.660
merger would just pick one of them
basically the first one that you defined

00:31:48.660 --> 00:31:48.670
basically the first one that you defined
 

00:31:48.670 --> 00:31:49.980
basically the first one that you defined
in your dependency would have a higher

00:31:49.980 --> 00:31:49.990
in your dependency would have a higher
 

00:31:49.990 --> 00:31:51.900
in your dependency would have a higher
priority and it will just merge on top

00:31:51.900 --> 00:31:51.910
priority and it will just merge on top
 

00:31:51.910 --> 00:31:53.010
priority and it will just merge on top
of the other one and it would just

00:31:53.010 --> 00:31:53.020
of the other one and it would just
 

00:31:53.020 --> 00:31:54.570
of the other one and it would just
replace the other one which is probably

00:31:54.570 --> 00:31:54.580
replace the other one which is probably
 

00:31:54.580 --> 00:31:57.330
replace the other one which is probably
not what you want and so here what's

00:31:57.330 --> 00:31:57.340
not what you want and so here what's
 

00:31:57.340 --> 00:31:58.680
not what you want and so here what's
happening now is that where if we really

00:31:58.680 --> 00:31:58.690
happening now is that where if we really
 

00:31:58.690 --> 00:31:59.820
happening now is that where if we really
want to do is you want to package both

00:31:59.820 --> 00:31:59.830
want to do is you want to package both
 

00:31:59.830 --> 00:32:01.710
want to do is you want to package both
of them so both of them are going to be

00:32:01.710 --> 00:32:01.720
of them so both of them are going to be
 

00:32:01.720 --> 00:32:04.200
of them so both of them are going to be
compiled in their own namespace and then

00:32:04.200 --> 00:32:04.210
compiled in their own namespace and then
 

00:32:04.210 --> 00:32:06.180
compiled in their own namespace and then
we're going to package that internally

00:32:06.180 --> 00:32:06.190
we're going to package that internally
 

00:32:06.190 --> 00:32:08.490
we're going to package that internally
the are classes from those two libraries

00:32:08.490 --> 00:32:08.500
the are classes from those two libraries
 

00:32:08.500 --> 00:32:10.560
the are classes from those two libraries
will have different we'd have the same

00:32:10.560 --> 00:32:10.570
will have different we'd have the same
 

00:32:10.570 --> 00:32:12.090
will have different we'd have the same
you know our dot string that foo but

00:32:12.090 --> 00:32:12.100
you know our dot string that foo but
 

00:32:12.100 --> 00:32:14.820
you know our dot string that foo but
with different values and internally in

00:32:14.820 --> 00:32:14.830
with different values and internally in
 

00:32:14.830 --> 00:32:16.110
with different values and internally in
the resource table that will really

00:32:16.110 --> 00:32:16.120
the resource table that will really
 

00:32:16.120 --> 00:32:17.730
the resource table that will really
point to two different resources which

00:32:17.730 --> 00:32:17.740
point to two different resources which
 

00:32:17.740 --> 00:32:20.610
point to two different resources which
is much better so now when you refer to

00:32:20.610 --> 00:32:20.620
is much better so now when you refer to
 

00:32:20.620 --> 00:32:22.950
is much better so now when you refer to
a library to a resource from a library

00:32:22.950 --> 00:32:22.960
a library to a resource from a library
 

00:32:22.960 --> 00:32:24.300
a library to a resource from a library
you have to use the namespace of that

00:32:24.300 --> 00:32:24.310
you have to use the namespace of that
 

00:32:24.310 --> 00:32:26.370
you have to use the namespace of that
library and using the our class of that

00:32:26.370 --> 00:32:26.380
library and using the our class of that
 

00:32:26.380 --> 00:32:28.320
library and using the our class of that
library is already a way to access it

00:32:28.320 --> 00:32:28.330
library is already a way to access it
 

00:32:28.330 --> 00:32:30.420
library is already a way to access it
the i'ts namespace right it's like you

00:32:30.420 --> 00:32:30.430
the i'ts namespace right it's like you
 

00:32:30.430 --> 00:32:32.220
the i'ts namespace right it's like you
don't have a single our class with all

00:32:32.220 --> 00:32:32.230
don't have a single our class with all
 

00:32:32.230 --> 00:32:34.320
don't have a single our class with all
the IDS so when you do that from the

00:32:34.320 --> 00:32:34.330
the IDS so when you do that from the
 

00:32:34.330 --> 00:32:37.170
the IDS so when you do that from the
manifest it'll be different you have to

00:32:37.170 --> 00:32:37.180
manifest it'll be different you have to
 

00:32:37.180 --> 00:32:41.010
manifest it'll be different you have to
use the manifest though when you start

00:32:41.010 --> 00:32:41.020
use the manifest though when you start
 

00:32:41.020 --> 00:32:43.260
use the manifest though when you start
from XML you have to use the namespace

00:32:43.260 --> 00:32:43.270
from XML you have to use the namespace
 

00:32:43.270 --> 00:32:46.530
from XML you have to use the namespace
directly in the resources so at from

00:32:46.530 --> 00:32:46.540
directly in the resources so at from
 

00:32:46.540 --> 00:32:48.210
directly in the resources so at from
doctype every one colon string slash

00:32:48.210 --> 00:32:48.220
doctype every one colon string slash
 

00:32:48.220 --> 00:32:50.130
doctype every one colon string slash
text which is very similar to when you

00:32:50.130 --> 00:32:50.140
text which is very similar to when you
 

00:32:50.140 --> 00:32:52.380
text which is very similar to when you
access an android namespace resource

00:32:52.380 --> 00:32:52.390
access an android namespace resource
 

00:32:52.390 --> 00:32:55.470
access an android namespace resource
right at Android colon something if you

00:32:55.470 --> 00:32:55.480
right at Android colon something if you
 

00:32:55.480 --> 00:32:59.550
right at Android colon something if you
do have custom attributes you have to do

00:32:59.550 --> 00:32:59.560
do have custom attributes you have to do
 

00:32:59.560 --> 00:33:00.930
do have custom attributes you have to do
the same thing so you're probably using

00:33:00.930 --> 00:33:00.940
the same thing so you're probably using
 

00:33:00.940 --> 00:33:03.150
the same thing so you're probably using
res Auto everywhere now not really

00:33:03.150 --> 00:33:03.160
res Auto everywhere now not really
 

00:33:03.160 --> 00:33:03.570
res Auto everywhere now not really
bothering

00:33:03.570 --> 00:33:03.580
bothering
 

00:33:03.580 --> 00:33:06.300
bothering
what's your name spaces now you actually

00:33:06.300 --> 00:33:06.310
what's your name spaces now you actually
 

00:33:06.310 --> 00:33:07.920
what's your name spaces now you actually
have to care you can say hey you know

00:33:07.920 --> 00:33:07.930
have to care you can say hey you know
 

00:33:07.930 --> 00:33:10.950
have to care you can say hey you know
this is construct layout these you know

00:33:10.950 --> 00:33:10.960
this is construct layout these you know
 

00:33:10.960 --> 00:33:13.020
this is construct layout these you know
this XML prefix constraint is that

00:33:13.020 --> 00:33:13.030
this XML prefix constraint is that
 

00:33:13.030 --> 00:33:15.540
this XML prefix constraint is that
namespace of that library and then I can

00:33:15.540 --> 00:33:15.550
namespace of that library and then I can
 

00:33:15.550 --> 00:33:19.110
namespace of that library and then I can
use those attributes so we're hoping to

00:33:19.110 --> 00:33:19.120
use those attributes so we're hoping to
 

00:33:19.120 --> 00:33:21.100
use those attributes so we're hoping to
bring that in 3.3 canary it's good

00:33:21.100 --> 00:33:21.110
bring that in 3.3 canary it's good
 

00:33:21.110 --> 00:33:23.760
bring that in 3.3 canary it's good
obtain obviously some breaking changes

00:33:23.760 --> 00:33:23.770
obtain obviously some breaking changes
 

00:33:23.770 --> 00:33:26.039
obtain obviously some breaking changes
we're gonna legal that with the flag

00:33:26.039 --> 00:33:26.049
we're gonna legal that with the flag
 

00:33:26.049 --> 00:33:28.120
we're gonna legal that with the flag
we're going to include refactoring

00:33:28.120 --> 00:33:28.130
we're going to include refactoring
 

00:33:28.130 --> 00:33:30.039
we're going to include refactoring
supporting studio so that you know all

00:33:30.039 --> 00:33:30.049
supporting studio so that you know all
 

00:33:30.049 --> 00:33:31.620
supporting studio so that you know all
those reference will be changed for you

00:33:31.620 --> 00:33:31.630
those reference will be changed for you
 

00:33:31.630 --> 00:33:33.340
those reference will be changed for you
and we're going to want a lot of

00:33:33.340 --> 00:33:33.350
and we're going to want a lot of
 

00:33:33.350 --> 00:33:34.720
and we're going to want a lot of
feedback right it's not going to be

00:33:34.720 --> 00:33:34.730
feedback right it's not going to be
 

00:33:34.730 --> 00:33:37.200
feedback right it's not going to be
turned on in 3.3 final by default either

00:33:37.200 --> 00:33:37.210
turned on in 3.3 final by default either
 

00:33:37.210 --> 00:33:39.250
turned on in 3.3 final by default either
there's going to be several revision

00:33:39.250 --> 00:33:39.260
there's going to be several revision
 

00:33:39.260 --> 00:33:41.590
there's going to be several revision
where there will be you know changes and

00:33:41.590 --> 00:33:41.600
where there will be you know changes and
 

00:33:41.600 --> 00:33:43.450
where there will be you know changes and
improvement but will want a lot of

00:33:43.450 --> 00:33:43.460
improvement but will want a lot of
 

00:33:43.460 --> 00:33:48.669
improvement but will want a lot of
feedback thank you okay let's think we

00:33:48.669 --> 00:33:48.679
feedback thank you okay let's think we
 

00:33:48.679 --> 00:33:50.080
feedback thank you okay let's think we
want to talk about today is our public

00:33:50.080 --> 00:33:50.090
want to talk about today is our public
 

00:33:50.090 --> 00:33:53.860
want to talk about today is our public
API we are painfully aware that the

00:33:53.860 --> 00:33:53.870
API we are painfully aware that the
 

00:33:53.870 --> 00:33:55.900
API we are painfully aware that the
public API that we provide is not very

00:33:55.900 --> 00:33:55.910
public API that we provide is not very
 

00:33:55.910 --> 00:34:00.130
public API that we provide is not very
good it has very poor documentation the

00:34:00.130 --> 00:34:00.140
good it has very poor documentation the
 

00:34:00.140 --> 00:34:02.020
good it has very poor documentation the
puggly the plug-in DSL is pretty bad

00:34:02.020 --> 00:34:02.030
puggly the plug-in DSL is pretty bad
 

00:34:02.030 --> 00:34:04.360
puggly the plug-in DSL is pretty bad
it's not specific to the module type so

00:34:04.360 --> 00:34:04.370
it's not specific to the module type so
 

00:34:04.370 --> 00:34:05.710
it's not specific to the module type so
there's plenty of things you cannot set

00:34:05.710 --> 00:34:05.720
there's plenty of things you cannot set
 

00:34:05.720 --> 00:34:06.669
there's plenty of things you cannot set
in different modules

00:34:06.669 --> 00:34:06.679
in different modules
 

00:34:06.679 --> 00:34:10.330
in different modules
yet the DSL is still there there's no

00:34:10.330 --> 00:34:10.340
yet the DSL is still there there's no
 

00:34:10.340 --> 00:34:11.830
yet the DSL is still there there's no
mechanism to access the intermediate

00:34:11.830 --> 00:34:11.840
mechanism to access the intermediate
 

00:34:11.840 --> 00:34:13.450
mechanism to access the intermediate
files so some people would like to have

00:34:13.450 --> 00:34:13.460
files so some people would like to have
 

00:34:13.460 --> 00:34:15.310
files so some people would like to have
access to the merge manifest class files

00:34:15.310 --> 00:34:15.320
access to the merge manifest class files
 

00:34:15.320 --> 00:34:17.020
access to the merge manifest class files
Dex files you name it you can't really

00:34:17.020 --> 00:34:17.030
Dex files you name it you can't really
 

00:34:17.030 --> 00:34:20.230
Dex files you name it you can't really
do it in a nice way the variant module

00:34:20.230 --> 00:34:20.240
do it in a nice way the variant module
 

00:34:20.240 --> 00:34:22.060
do it in a nice way the variant module
doesn't give access to a lot of

00:34:22.060 --> 00:34:22.070
doesn't give access to a lot of
 

00:34:22.070 --> 00:34:24.520
doesn't give access to a lot of
information coming from the variant

00:34:24.520 --> 00:34:24.530
information coming from the variant
 

00:34:24.530 --> 00:34:26.440
information coming from the variant
properties so you only have access to

00:34:26.440 --> 00:34:26.450
properties so you only have access to
 

00:34:26.450 --> 00:34:28.780
properties so you only have access to
part of the truth and then this is too

00:34:28.780 --> 00:34:28.790
part of the truth and then this is too
 

00:34:28.790 --> 00:34:30.790
part of the truth and then this is too
many things that require internal API is

00:34:30.790 --> 00:34:30.800
many things that require internal API is
 

00:34:30.800 --> 00:34:33.159
many things that require internal API is
hacking tasks the perfect separation

00:34:33.159 --> 00:34:33.169
hacking tasks the perfect separation
 

00:34:33.169 --> 00:34:35.830
hacking tasks the perfect separation
between public and internal API is not

00:34:35.830 --> 00:34:35.840
between public and internal API is not
 

00:34:35.840 --> 00:34:37.270
between public and internal API is not
well defined so you don't know when

00:34:37.270 --> 00:34:37.280
well defined so you don't know when
 

00:34:37.280 --> 00:34:38.710
well defined so you don't know when
you're switching from one to the other

00:34:38.710 --> 00:34:38.720
you're switching from one to the other
 

00:34:38.720 --> 00:34:43.300
you're switching from one to the other
so it's a mess and to give you an

00:34:43.300 --> 00:34:43.310
so it's a mess and to give you an
 

00:34:43.310 --> 00:34:45.099
so it's a mess and to give you an
example this is how the configuration

00:34:45.099 --> 00:34:45.109
example this is how the configuration
 

00:34:45.109 --> 00:34:47.379
example this is how the configuration
works today right so we have the DSL

00:34:47.379 --> 00:34:47.389
works today right so we have the DSL
 

00:34:47.389 --> 00:34:50.050
works today right so we have the DSL
passing first and then we create a

00:34:50.050 --> 00:34:50.060
passing first and then we create a
 

00:34:50.060 --> 00:34:52.899
passing first and then we create a
variant right so that bunch of variants

00:34:52.899 --> 00:34:52.909
variant right so that bunch of variants
 

00:34:52.909 --> 00:34:54.730
variant right so that bunch of variants
are created then we test we create of

00:34:54.730 --> 00:34:54.740
are created then we test we create of
 

00:34:54.740 --> 00:34:56.530
are created then we test we create of
the tasks both of these variants and

00:34:56.530 --> 00:34:56.540
the tasks both of these variants and
 

00:34:56.540 --> 00:34:58.660
the tasks both of these variants and
eventually we call the VAR e on TV I so

00:34:58.660 --> 00:34:58.670
eventually we call the VAR e on TV I so
 

00:34:58.670 --> 00:35:00.240
eventually we call the VAR e on TV I so
that's where a lot of the scripts

00:35:00.240 --> 00:35:00.250
that's where a lot of the scripts
 

00:35:00.250 --> 00:35:02.680
that's where a lot of the scripts
customization scripts are running but

00:35:02.680 --> 00:35:02.690
customization scripts are running but
 

00:35:02.690 --> 00:35:04.300
customization scripts are running but
you can see here the the problem is

00:35:04.300 --> 00:35:04.310
you can see here the the problem is
 

00:35:04.310 --> 00:35:05.590
you can see here the the problem is
right there is right in front of you

00:35:05.590 --> 00:35:05.600
right there is right in front of you
 

00:35:05.600 --> 00:35:08.170
right there is right in front of you
that it's happening after the tasks have

00:35:08.170 --> 00:35:08.180
that it's happening after the tasks have
 

00:35:08.180 --> 00:35:11.170
that it's happening after the tasks have
been created so there's no way you can

00:35:11.170 --> 00:35:11.180
been created so there's no way you can
 

00:35:11.180 --> 00:35:13.320
been created so there's no way you can
change anything that will influence

00:35:13.320 --> 00:35:13.330
change anything that will influence
 

00:35:13.330 --> 00:35:15.550
change anything that will influence
tasks creation say you want to switch

00:35:15.550 --> 00:35:15.560
tasks creation say you want to switch
 

00:35:15.560 --> 00:35:17.710
tasks creation say you want to switch
from legacy multi decks to native multi

00:35:17.710 --> 00:35:17.720
from legacy multi decks to native multi
 

00:35:17.720 --> 00:35:19.150
from legacy multi decks to native multi
decks but you can't do that anymore

00:35:19.150 --> 00:35:19.160
decks but you can't do that anymore
 

00:35:19.160 --> 00:35:20.740
decks but you can't do that anymore
because we've already created the tasks

00:35:20.740 --> 00:35:20.750
because we've already created the tasks
 

00:35:20.750 --> 00:35:24.250
because we've already created the tasks
for legacy multidex say you want to

00:35:24.250 --> 00:35:24.260
for legacy multidex say you want to
 

00:35:24.260 --> 00:35:25.900
for legacy multidex say you want to
change some of the information in the

00:35:25.900 --> 00:35:25.910
change some of the information in the
 

00:35:25.910 --> 00:35:28.090
change some of the information in the
DSL programmatically instead of putting

00:35:28.090 --> 00:35:28.100
DSL programmatically instead of putting
 

00:35:28.100 --> 00:35:29.050
DSL programmatically instead of putting
it in the DSL

00:35:29.050 --> 00:35:29.060
it in the DSL
 

00:35:29.060 --> 00:35:30.160
it in the DSL
why you can't really do that either

00:35:30.160 --> 00:35:30.170
why you can't really do that either
 

00:35:30.170 --> 00:35:32.230
why you can't really do that either
because we already created the tasks

00:35:32.230 --> 00:35:32.240
because we already created the tasks
 

00:35:32.240 --> 00:35:34.420
because we already created the tasks
chances are that the input have already

00:35:34.420 --> 00:35:34.430
chances are that the input have already
 

00:35:34.430 --> 00:35:37.930
chances are that the input have already
been finalized so it's happening too

00:35:37.930 --> 00:35:37.940
been finalized so it's happening too
 

00:35:37.940 --> 00:35:39.820
been finalized so it's happening too
late and then eventually the after

00:35:39.820 --> 00:35:39.830
late and then eventually the after
 

00:35:39.830 --> 00:35:41.980
late and then eventually the after
evaluate scripts the customer wants run

00:35:41.980 --> 00:35:41.990
evaluate scripts the customer wants run
 

00:35:41.990 --> 00:35:43.990
evaluate scripts the customer wants run
even later so there's really no way you

00:35:43.990 --> 00:35:44.000
even later so there's really no way you
 

00:35:44.000 --> 00:35:46.390
even later so there's really no way you
can do a lot of things here and so what

00:35:46.390 --> 00:35:46.400
can do a lot of things here and so what
 

00:35:46.400 --> 00:35:48.250
can do a lot of things here and so what
people do is that they access the tasks

00:35:48.250 --> 00:35:48.260
people do is that they access the tasks
 

00:35:48.260 --> 00:35:49.900
people do is that they access the tasks
and then they try to figure out where

00:35:49.900 --> 00:35:49.910
and then they try to figure out where
 

00:35:49.910 --> 00:35:53.700
and then they try to figure out where
the files are generated and estimates so

00:35:53.700 --> 00:35:53.710
the files are generated and estimates so
 

00:35:53.710 --> 00:35:57.520
the files are generated and estimates so
what we would like to do is to have a

00:35:57.520 --> 00:35:57.530
what we would like to do is to have a
 

00:35:57.530 --> 00:36:00.910
what we would like to do is to have a
simple gradual API interfaces that would

00:36:00.910 --> 00:36:00.920
simple gradual API interfaces that would
 

00:36:00.920 --> 00:36:02.200
simple gradual API interfaces that would
be the only module that you should

00:36:02.200 --> 00:36:02.210
be the only module that you should
 

00:36:02.210 --> 00:36:04.060
be the only module that you should
depend on and if you stop depending on

00:36:04.060 --> 00:36:04.070
depend on and if you stop depending on
 

00:36:04.070 --> 00:36:05.950
depend on and if you stop depending on
some about all the modules like other

00:36:05.950 --> 00:36:05.960
some about all the modules like other
 

00:36:05.960 --> 00:36:07.930
some about all the modules like other
core you should talk to us and you

00:36:07.930 --> 00:36:07.940
core you should talk to us and you
 

00:36:07.940 --> 00:36:10.600
core you should talk to us and you
should tell us what are your needs what

00:36:10.600 --> 00:36:10.610
should tell us what are your needs what
 

00:36:10.610 --> 00:36:13.359
should tell us what are your needs what
are you are you doing this don't think

00:36:13.359 --> 00:36:13.369
are you are you doing this don't think
 

00:36:13.369 --> 00:36:14.740
are you are you doing this don't think
that we are not listening we are

00:36:14.740 --> 00:36:14.750
that we are not listening we are
 

00:36:14.750 --> 00:36:16.900
that we are not listening we are
interested in figuring out why you need

00:36:16.900 --> 00:36:16.910
interested in figuring out why you need
 

00:36:16.910 --> 00:36:18.550
interested in figuring out why you need
to customize things and we are

00:36:18.550 --> 00:36:18.560
to customize things and we are
 

00:36:18.560 --> 00:36:19.840
to customize things and we are
interested in providing you a good

00:36:19.840 --> 00:36:19.850
interested in providing you a good
 

00:36:19.850 --> 00:36:23.080
interested in providing you a good
solution so one of the thing we are

00:36:23.080 --> 00:36:23.090
solution so one of the thing we are
 

00:36:23.090 --> 00:36:24.970
solution so one of the thing we are
looking for for instance is to give you

00:36:24.970 --> 00:36:24.980
looking for for instance is to give you
 

00:36:24.980 --> 00:36:27.240
looking for for instance is to give you
access to all of the intermediate files

00:36:27.240 --> 00:36:27.250
access to all of the intermediate files
 

00:36:27.250 --> 00:36:30.180
access to all of the intermediate files
so each intermediate file really is

00:36:30.180 --> 00:36:30.190
so each intermediate file really is
 

00:36:30.190 --> 00:36:32.109
so each intermediate file really is
associated with the type right you've

00:36:32.109 --> 00:36:32.119
associated with the type right you've
 

00:36:32.119 --> 00:36:34.750
associated with the type right you've
got classes you've got merge manifest

00:36:34.750 --> 00:36:34.760
got classes you've got merge manifest
 

00:36:34.760 --> 00:36:36.700
got classes you've got merge manifest
you've got text files of that resources

00:36:36.700 --> 00:36:36.710
you've got text files of that resources
 

00:36:36.710 --> 00:36:39.310
you've got text files of that resources
all of those should be able to be

00:36:39.310 --> 00:36:39.320
all of those should be able to be
 

00:36:39.320 --> 00:36:41.470
all of those should be able to be
accessed and should be safely capable of

00:36:41.470 --> 00:36:41.480
accessed and should be safely capable of
 

00:36:41.480 --> 00:36:43.510
accessed and should be safely capable of
being replaced so you should be able to

00:36:43.510 --> 00:36:43.520
being replaced so you should be able to
 

00:36:43.520 --> 00:36:46.590
being replaced so you should be able to
say give me the menu the merge manifest

00:36:46.590 --> 00:36:46.600
say give me the menu the merge manifest
 

00:36:46.600 --> 00:36:49.120
say give me the menu the merge manifest
change it a little bit and I'm giving

00:36:49.120 --> 00:36:49.130
change it a little bit and I'm giving
 

00:36:49.130 --> 00:36:50.710
change it a little bit and I'm giving
you back at this new version and that's

00:36:50.710 --> 00:36:50.720
you back at this new version and that's
 

00:36:50.720 --> 00:36:52.630
you back at this new version and that's
the one you should use to continue the

00:36:52.630 --> 00:36:52.640
the one you should use to continue the
 

00:36:52.640 --> 00:36:54.310
the one you should use to continue the
build process so it should be

00:36:54.310 --> 00:36:54.320
build process so it should be
 

00:36:54.320 --> 00:36:55.960
build process so it should be
replaceable it should be a tangible

00:36:55.960 --> 00:36:55.970
replaceable it should be a tangible
 

00:36:55.970 --> 00:36:57.790
replaceable it should be a tangible
maybe you want to add class files

00:36:57.790 --> 00:36:57.800
maybe you want to add class files
 

00:36:57.800 --> 00:37:00.460
maybe you want to add class files
directly and eventually all of this

00:37:00.460 --> 00:37:00.470
directly and eventually all of this
 

00:37:00.470 --> 00:37:02.109
directly and eventually all of this
should be drawn through very

00:37:02.109 --> 00:37:02.119
should be drawn through very
 

00:37:02.119 --> 00:37:04.240
should be drawn through very
well-defined extension points so we

00:37:04.240 --> 00:37:04.250
well-defined extension points so we
 

00:37:04.250 --> 00:37:06.250
well-defined extension points so we
started working on it and we would like

00:37:06.250 --> 00:37:06.260
started working on it and we would like
 

00:37:06.260 --> 00:37:09.280
started working on it and we would like
to have feedbacks on this so the

00:37:09.280 --> 00:37:09.290
to have feedbacks on this so the
 

00:37:09.290 --> 00:37:10.420
to have feedbacks on this so the
proposed phases would be slightly

00:37:10.420 --> 00:37:10.430
proposed phases would be slightly
 

00:37:10.430 --> 00:37:12.370
proposed phases would be slightly
different now you've got the dsm passing

00:37:12.370 --> 00:37:12.380
different now you've got the dsm passing
 

00:37:12.380 --> 00:37:15.310
different now you've got the dsm passing
we would then start invoking new custom

00:37:15.310 --> 00:37:15.320
we would then start invoking new custom
 

00:37:15.320 --> 00:37:16.780
we would then start invoking new custom
code right there so you would have the

00:37:16.780 --> 00:37:16.790
code right there so you would have the
 

00:37:16.790 --> 00:37:19.030
code right there so you would have the
ability to stop changing dsl objects

00:37:19.030 --> 00:37:19.040
ability to stop changing dsl objects
 

00:37:19.040 --> 00:37:21.430
ability to stop changing dsl objects
programmatically even before we start

00:37:21.430 --> 00:37:21.440
programmatically even before we start
 

00:37:21.440 --> 00:37:24.760
programmatically even before we start
creating variants then we would lock

00:37:24.760 --> 00:37:24.770
creating variants then we would lock
 

00:37:24.770 --> 00:37:26.650
creating variants then we would lock
them up that means you can change them

00:37:26.650 --> 00:37:26.660
them up that means you can change them
 

00:37:26.660 --> 00:37:27.070
them up that means you can change them
anymore

00:37:27.070 --> 00:37:27.080
anymore
 

00:37:27.080 --> 00:37:29.890
anymore
once that code has run it's locked up we

00:37:29.890 --> 00:37:29.900
once that code has run it's locked up we
 

00:37:29.900 --> 00:37:32.020
once that code has run it's locked up we
would then create a variance from this

00:37:32.020 --> 00:37:32.030
would then create a variance from this
 

00:37:32.030 --> 00:37:35.200
would then create a variance from this
information from the variant we can then

00:37:35.200 --> 00:37:35.210
information from the variant we can then
 

00:37:35.210 --> 00:37:37.540
information from the variant we can then
call directly the variant API so that's

00:37:37.540 --> 00:37:37.550
call directly the variant API so that's
 

00:37:37.550 --> 00:37:40.960
call directly the variant API so that's
the ability for you to change variant

00:37:40.960 --> 00:37:40.970
the ability for you to change variant
 

00:37:40.970 --> 00:37:42.330
the ability for you to change variant
related information

00:37:42.330 --> 00:37:42.340
related information
 

00:37:42.340 --> 00:37:45.070
related information
now we aware that this is happening

00:37:45.070 --> 00:37:45.080
now we aware that this is happening
 

00:37:45.080 --> 00:37:47.050
now we aware that this is happening
before the tasks creation right there's

00:37:47.050 --> 00:37:47.060
before the tasks creation right there's
 

00:37:47.060 --> 00:37:49.390
before the tasks creation right there's
no task created yet so this is really

00:37:49.390 --> 00:37:49.400
no task created yet so this is really
 

00:37:49.400 --> 00:37:51.700
no task created yet so this is really
the ability to say it was using multi

00:37:51.700 --> 00:37:51.710
the ability to say it was using multi
 

00:37:51.710 --> 00:37:54.250
the ability to say it was using multi
decks no I wanted to use negativity

00:37:54.250 --> 00:37:54.260
decks no I wanted to use negativity
 

00:37:54.260 --> 00:37:57.580
decks no I wanted to use negativity
decks once these very otps scripts have

00:37:57.580 --> 00:37:57.590
decks once these very otps scripts have
 

00:37:57.590 --> 00:38:00.700
decks once these very otps scripts have
run we will lock up the valiant a object

00:38:00.700 --> 00:38:00.710
run we will lock up the valiant a object
 

00:38:00.710 --> 00:38:03.460
run we will lock up the valiant a object
so again if you use crits later on lucky

00:38:03.460 --> 00:38:03.470
so again if you use crits later on lucky
 

00:38:03.470 --> 00:38:05.200
so again if you use crits later on lucky
enough to evaluate that starts to change

00:38:05.200 --> 00:38:05.210
enough to evaluate that starts to change
 

00:38:05.210 --> 00:38:07.720
enough to evaluate that starts to change
the DSL parsing or the variant it's too

00:38:07.720 --> 00:38:07.730
the DSL parsing or the variant it's too
 

00:38:07.730 --> 00:38:09.220
the DSL parsing or the variant it's too
late we will not allow it to will throw

00:38:09.220 --> 00:38:09.230
late we will not allow it to will throw
 

00:38:09.230 --> 00:38:12.130
late we will not allow it to will throw
an exception then eventually we create

00:38:12.130 --> 00:38:12.140
an exception then eventually we create
 

00:38:12.140 --> 00:38:13.870
an exception then eventually we create
the task and we will lock them up

00:38:13.870 --> 00:38:13.880
the task and we will lock them up
 

00:38:13.880 --> 00:38:15.730
the task and we will lock them up
immediately we will not allow you to

00:38:15.730 --> 00:38:15.740
immediately we will not allow you to
 

00:38:15.740 --> 00:38:17.980
immediately we will not allow you to
modify the tasks anymore the way to

00:38:17.980 --> 00:38:17.990
modify the tasks anymore the way to
 

00:38:17.990 --> 00:38:19.690
modify the tasks anymore the way to
modify things will be to go through the

00:38:19.690 --> 00:38:19.700
modify things will be to go through the
 

00:38:19.700 --> 00:38:22.030
modify things will be to go through the
buildable artifact to inject to replace

00:38:22.030 --> 00:38:22.040
buildable artifact to inject to replace
 

00:38:22.040 --> 00:38:25.330
buildable artifact to inject to replace
to a pant but not mocking with the tasks

00:38:25.330 --> 00:38:25.340
to a pant but not mocking with the tasks
 

00:38:25.340 --> 00:38:26.800
to a pant but not mocking with the tasks
because we replace them all the time we

00:38:26.800 --> 00:38:26.810
because we replace them all the time we
 

00:38:26.810 --> 00:38:29.470
because we replace them all the time we
merge them we delete them we split them

00:38:29.470 --> 00:38:29.480
merge them we delete them we split them
 

00:38:29.480 --> 00:38:31.060
merge them we delete them we split them
whatever we need to do to support new

00:38:31.060 --> 00:38:31.070
whatever we need to do to support new
 

00:38:31.070 --> 00:38:32.680
whatever we need to do to support new
features or make things more efficient

00:38:32.680 --> 00:38:32.690
features or make things more efficient
 

00:38:32.690 --> 00:38:35.680
features or make things more efficient
and unable to lead after a very it will

00:38:35.680 --> 00:38:35.690
and unable to lead after a very it will
 

00:38:35.690 --> 00:38:40.180
and unable to lead after a very it will
run so the compatibility will be a

00:38:40.180 --> 00:38:40.190
run so the compatibility will be a
 

00:38:40.190 --> 00:38:42.490
run so the compatibility will be a
painful subject we will try to make

00:38:42.490 --> 00:38:42.500
painful subject we will try to make
 

00:38:42.500 --> 00:38:45.460
painful subject we will try to make
obviously the DSL mostly unchanged we're

00:38:45.460 --> 00:38:45.470
obviously the DSL mostly unchanged we're
 

00:38:45.470 --> 00:38:47.140
obviously the DSL mostly unchanged we're
going to try to make an effort to also

00:38:47.140 --> 00:38:47.150
going to try to make an effort to also
 

00:38:47.150 --> 00:38:49.890
going to try to make an effort to also
becoming more content friendly and

00:38:49.890 --> 00:38:49.900
becoming more content friendly and
 

00:38:49.900 --> 00:38:51.880
becoming more content friendly and
unfortunately we think that the variant

00:38:51.880 --> 00:38:51.890
unfortunately we think that the variant
 

00:38:51.890 --> 00:38:53.830
unfortunately we think that the variant
API will change heavily but since we

00:38:53.830 --> 00:38:53.840
API will change heavily but since we
 

00:38:53.840 --> 00:38:55.530
API will change heavily but since we
already realize that it was not so great

00:38:55.530 --> 00:38:55.540
already realize that it was not so great
 

00:38:55.540 --> 00:38:57.850
already realize that it was not so great
hopefully you'll be sympathetic to the

00:38:57.850 --> 00:38:57.860
hopefully you'll be sympathetic to the
 

00:38:57.860 --> 00:39:00.100
hopefully you'll be sympathetic to the
idea that you will have to change the

00:39:00.100 --> 00:39:00.110
idea that you will have to change the
 

00:39:00.110 --> 00:39:04.720
idea that you will have to change the
script using the variant API so we want

00:39:04.720 --> 00:39:04.730
script using the variant API so we want
 

00:39:04.730 --> 00:39:07.300
script using the variant API so we want
to hear from you it's very important

00:39:07.300 --> 00:39:07.310
to hear from you it's very important
 

00:39:07.310 --> 00:39:08.500
to hear from you it's very important
that we get feedback from the community

00:39:08.500 --> 00:39:08.510
that we get feedback from the community
 

00:39:08.510 --> 00:39:11.110
that we get feedback from the community
for us and I want to thank you for

00:39:11.110 --> 00:39:11.120
for us and I want to thank you for
 

00:39:11.120 --> 00:39:12.670
for us and I want to thank you for
coming tonight I know it's a late

00:39:12.670 --> 00:39:12.680
coming tonight I know it's a late
 

00:39:12.680 --> 00:39:14.590
coming tonight I know it's a late
session it was very nice to see so many

00:39:14.590 --> 00:39:14.600
session it was very nice to see so many
 

00:39:14.600 --> 00:39:16.330
session it was very nice to see so many
people here tonight thank you

00:39:16.330 --> 00:39:16.340
people here tonight thank you
 

00:39:16.340 --> 00:39:17.670
people here tonight thank you
[Applause]

00:39:17.670 --> 00:39:17.680
[Applause]
 

00:39:17.680 --> 00:39:40.159
[Applause]
[Music]

