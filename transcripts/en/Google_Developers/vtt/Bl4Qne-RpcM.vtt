WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.916
TIMOTHY JORDAN: Hi, my
name is Timothy Jordan.

00:00:01.916 --> 00:00:03.620
I'm a developer
advocate here at Google,

00:00:03.620 --> 00:00:07.020
and I'd like to give you a quick
introduction to Android Wear.

00:00:07.020 --> 00:00:09.920
Android Wear is a set of
APIs that extends the Android

00:00:09.920 --> 00:00:12.920
platform to a new
generation of wearables.

00:00:12.920 --> 00:00:14.870
Rich notifications can
appear on the wearable,

00:00:14.870 --> 00:00:17.745
with no modification to
the existing Android app.

00:00:17.745 --> 00:00:20.260
The developer can add just
a few more lines of code

00:00:20.260 --> 00:00:22.120
to extend the
wearable experience

00:00:22.120 --> 00:00:27.180
or go even deeper, by building
an app just for the wearable.

00:00:27.180 --> 00:00:29.640
Before we dive into the
details of the platform,

00:00:29.640 --> 00:00:31.630
let's take a step back.

00:00:31.630 --> 00:00:34.590
What's wrong with this picture?

00:00:34.590 --> 00:00:36.970
We spent some time looking
at technology usage

00:00:36.970 --> 00:00:38.370
and thought deeply
about the ways

00:00:38.370 --> 00:00:41.550
to help you stay more
connected to the digital world.

00:00:41.550 --> 00:00:45.470
But also more engaged with
what's happening around you.

00:00:45.470 --> 00:00:47.220
Android Wear looks
to address this

00:00:47.220 --> 00:00:49.770
by showing you useful
information the moment you

00:00:49.770 --> 00:00:52.850
need it, and just in a glance.

00:00:52.850 --> 00:00:57.110
Let's look at that in
a more technical way.

00:00:57.110 --> 00:00:59.390
This is your day
with your phone.

00:00:59.390 --> 00:01:01.030
Notice the length
of time it takes

00:01:01.030 --> 00:01:03.440
to pull out your phone
from your pocket,

00:01:03.440 --> 00:01:08.390
unlock it, navigate to what you
want, and then engage with it.

00:01:08.390 --> 00:01:10.490
There's a hefty time
and attention cost,

00:01:10.490 --> 00:01:15.110
even for interactions that
should only require a moment.

00:01:15.110 --> 00:01:18.410
This is the same set of
interactions on a wearable.

00:01:18.410 --> 00:01:22.060
Notice the reduced
overhead per interaction.

00:01:22.060 --> 00:01:25.090
Now this is what we mean by
more present in the real world,

00:01:25.090 --> 00:01:28.560
and yet more connected
to the virtual world.

00:01:28.560 --> 00:01:30.300
What does this mean
for your development?

00:01:30.300 --> 00:01:32.960
Well, to start with,
and this is important,

00:01:32.960 --> 00:01:37.540
it's a fundamentally different
user interaction model.

00:01:37.540 --> 00:01:40.740
And you can tell just by
looking at this device.

00:01:40.740 --> 00:01:43.040
It's a fundamentally
different device

00:01:43.040 --> 00:01:45.450
from other mobile devices.

00:01:45.450 --> 00:01:47.340
To really nail the
user experience,

00:01:47.340 --> 00:01:49.400
you've got to
rethink it a little.

00:01:49.400 --> 00:01:51.510
When considering which
features of your service

00:01:51.510 --> 00:01:53.410
you'd like to make
available on the wrist,

00:01:53.410 --> 00:01:54.940
consider this question.

00:01:54.940 --> 00:01:58.290
What couldn't we do on
the phone that we can now

00:01:58.290 --> 00:01:59.000
do on the wrist?

00:01:59.000 --> 00:02:02.310
What now becomes
possible with the user?

00:02:02.310 --> 00:02:04.480
And then focus on that.

00:02:04.480 --> 00:02:07.610
Also, you've got to try it.

00:02:07.610 --> 00:02:10.360
It may sound silly, but once
you get that emulator up

00:02:10.360 --> 00:02:12.340
and running, stand
up at your desk

00:02:12.340 --> 00:02:15.670
and pretend you're
walking between meetings

00:02:15.670 --> 00:02:17.280
or across the street.

00:02:17.280 --> 00:02:19.670
Something to get yourself
in the situation,

00:02:19.670 --> 00:02:25.000
so you know what it feels like
to use the service on the go.

00:02:25.000 --> 00:02:27.280
Here's an example
of what we mean

00:02:27.280 --> 00:02:29.380
by a very basic but
essential difference.

00:02:31.920 --> 00:02:34.700
This is the app
experience on your phone.

00:02:34.700 --> 00:02:37.350
Now we've trained users to
collect these shiny objects,

00:02:37.350 --> 00:02:38.766
and then search
for them when they

00:02:38.766 --> 00:02:40.830
want to do something,
which works OK on a phone.

00:02:40.830 --> 00:02:46.330
But if we put these same shiny
objects on a wearable, well,

00:02:46.330 --> 00:02:47.840
it just doesn't make sense.

00:02:47.840 --> 00:02:49.920
It would be the same
time consuming paradigm,

00:02:49.920 --> 00:02:51.880
but on a device
intended to reduce

00:02:51.880 --> 00:02:53.840
those parts of the interaction.

00:02:53.840 --> 00:02:55.740
It just doesn't make sense.

00:02:55.740 --> 00:02:57.860
How do we get outside
of this paradigm?

00:02:57.860 --> 00:03:00.030
How do we get past
this grid of icons?

00:03:03.430 --> 00:03:05.260
This is the Android
Wear interface.

00:03:05.260 --> 00:03:11.110
It's simple, glanceable, and
built around microinteractions.

00:03:11.110 --> 00:03:15.560
The interface is divided
into two primary behaviors.

00:03:15.560 --> 00:03:18.720
The user can talk
to the wearable.

00:03:18.720 --> 00:03:20.990
You can think of
these as actions.

00:03:20.990 --> 00:03:24.230
The user might say, OK Google,
and then any voice command

00:03:24.230 --> 00:03:25.190
is available to them.

00:03:28.890 --> 00:03:31.510
The wearable can
talk to the user.

00:03:31.510 --> 00:03:33.990
Now think of this
as a context stream.

00:03:37.540 --> 00:03:39.730
It's sort of like
enhanced notifications

00:03:39.730 --> 00:03:41.990
that matter to the
user right now,

00:03:41.990 --> 00:03:45.960
because it's the
right time or place.

00:03:45.960 --> 00:03:46.730
OK.

00:03:46.730 --> 00:03:49.380
Let's talk about developing
with Android Wear.

00:03:49.380 --> 00:03:51.590
First, notifications.

00:03:51.590 --> 00:03:53.790
The notifications on
your phone can also

00:03:53.790 --> 00:03:56.510
be displayed on the wearable.

00:03:56.510 --> 00:03:59.620
And to get this done you
don't have to do anything.

00:03:59.620 --> 00:04:01.300
It just works out of the box.

00:04:01.300 --> 00:04:04.620
Also, notifications that buzz or
sound on the companion device,

00:04:04.620 --> 00:04:09.060
such as your phone, will
also buzz on the wearable.

00:04:09.060 --> 00:04:12.460
Enhanced notifications will
also show up on the wearable.

00:04:12.460 --> 00:04:15.460
And again, to get
this done you still

00:04:15.460 --> 00:04:16.970
don't have to do anything.

00:04:16.970 --> 00:04:20.740
It also already
works out of the box.

00:04:20.740 --> 00:04:23.560
There are a few things that you
can do with your notifications,

00:04:23.560 --> 00:04:25.110
specifically on the wearable.

00:04:25.110 --> 00:04:27.880
And these do require
a few lines of code.

00:04:27.880 --> 00:04:30.641
Stacks allow you to bundle
multiple notifications

00:04:30.641 --> 00:04:31.140
together.

00:04:31.140 --> 00:04:34.420
Think inbox style notifications.

00:04:34.420 --> 00:04:35.390
Pages.

00:04:35.390 --> 00:04:37.850
They give you the ability to
show more than one glanceable

00:04:37.850 --> 00:04:42.410
screen of information to the
user for a single notification.

00:04:42.410 --> 00:04:46.530
And yes, Pages can be
combined with Stacks.

00:04:46.530 --> 00:04:47.690
Replies.

00:04:47.690 --> 00:04:49.996
They allow you to add
actions to notifications

00:04:49.996 --> 00:04:52.110
that the user can
control with their voice,

00:04:52.110 --> 00:04:55.171
via open-ended text input
or through pre-defined text

00:04:55.171 --> 00:04:55.670
responses.

00:04:58.710 --> 00:05:01.120
If you want to have code
running on the wearable,

00:05:01.120 --> 00:05:03.150
you're going to have
to build an app.

00:05:03.150 --> 00:05:05.265
The SDK for apps
isn't available yet.

00:05:05.265 --> 00:05:06.640
But here's a few
notes to get you

00:05:06.640 --> 00:05:08.600
started thinking about them.

00:05:08.600 --> 00:05:11.770
You can create custom card
layouts and run activities

00:05:11.770 --> 00:05:14.080
directly on wearables.

00:05:14.080 --> 00:05:16.590
You can send data and
actions between the phone

00:05:16.590 --> 00:05:18.300
and a wearable with
data replication

00:05:18.300 --> 00:05:21.660
APIs and remote procedure calls.

00:05:21.660 --> 00:05:24.720
You can gather sensor data
and display it in a real-time

00:05:24.720 --> 00:05:27.250
on Android wearables.

00:05:27.250 --> 00:05:28.920
And you can register
your app to handle

00:05:28.920 --> 00:05:33.970
Voice Actions, like OK
Google, take a note.

00:05:33.970 --> 00:05:35.980
And that's the
Android Wear platform.

00:05:35.980 --> 00:05:39.960
Please check out more detail
on our excellent documentation,

00:05:39.960 --> 00:05:43.380
developer.android.com/wear.

00:05:43.380 --> 00:05:46.680
I'm Timothy Jordan, and
I'll see you next time.

