WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
Okay, so here's my answer.

00:00:02.000 --> 00:00:04.000
The SQL is Select * From Links,

00:00:04.000 --> 00:00:06.000
where submitter ID equals 62443,

00:00:06.000 --> 00:00:09.000
order by submitted time

00:00:09.000 --> 00:00:11.000
ASC, for ascending.

00:00:11.000 --> 00:00:16.000
And these are the constraints of the question--62443 and submission time.

00:00:16.000 --> 00:00:19.000
And then what I'm doing is I'm iterating over the results,

00:00:19.000 --> 00:00:22.000
making a link,

00:00:22.000 --> 00:00:25.000
appending the link's ID to the list of results,

00:00:25.000 --> 00:00:28.000
and then I'm returning results.

00:00:28.000 --> 00:00:31.000
Okay, so let's go ahead and give this a run to make sure it works.

00:00:31.000 --> 00:00:33.000
We see our answer is 15, 18, 21.

00:00:33.000 --> 00:00:36.000
Those are the correct link IDs.

00:00:36.000 --> 00:00:38.000
My answer looks the way it does

00:00:38.000 --> 00:00:40.000
because I've been following the form we've been kind of working in--

00:00:40.000 --> 00:00:42.000
the general structure of this function.

00:00:42.000 --> 00:00:44.000
But if I were actually to make a function that does just this--

00:00:44.000 --> 00:00:46.000
just returns the IDs of the links--

00:00:46.000 --> 00:00:48.000
there's a couple things that are wasteful in here

00:00:48.000 --> 00:00:50.000
that I'll go ahead and clean up and show you.

00:00:50.000 --> 00:00:53.000
So the first thing is we don't need to select * from links.

00:00:53.000 --> 00:00:55.000
All we care about is the IDs.

00:00:55.000 --> 00:00:57.000
So we'll just select the IDs.

00:00:57.000 --> 00:01:00.000
Here we're creating a link object

00:01:00.000 --> 00:01:03.000
for every row we get back.

00:01:03.000 --> 00:01:05.000
Well, we don't actually need the link object.

00:01:05.000 --> 00:01:08.000
If we're just going to get the IDs from the results,

00:01:08.000 --> 00:01:10.000
we can just return those nearly directly.

00:01:10.000 --> 00:01:13.000
So let's get rid of this loop

00:01:13.000 --> 00:01:16.000
and instead change it to something like this.

00:01:16.000 --> 00:01:18.000
Okay, so I simplified this quite a bit.

00:01:18.000 --> 00:01:21.000
This syntax here is a list comprehension.

00:01:21.000 --> 00:01:23.000
It's a simple way of making a list.

00:01:23.000 --> 00:01:25.000
So we still run our SQL.

00:01:25.000 --> 00:01:27.000
This time we're selecting ID.

00:01:27.000 --> 00:01:31.000
And since SQLite Library in Python returns tuples of the results,

00:01:31.000 --> 00:01:34.000
and in this case we're only asking for the ID,

00:01:34.000 --> 00:01:38.000
we know the first column is going to be the ID.

00:01:38.000 --> 00:01:43.000
So for t in c--so for the tuple in the cursor--

00:01:43.000 --> 00:01:46.000
make a list of the first element of each of those tuples,

00:01:46.000 --> 00:01:48.000
store that in results, and return it.

00:01:48.000 --> 00:01:50.000
Let's go ahead and print this.

00:01:50.000 --> 00:01:53.000
And the answer is the same--15, 18, 101.

00:01:53.000 --> 00:01:57.000
Okay, so just a little extra Python there for you.

00:01:57.000 --> 00:02:01.000
Let's move along.

