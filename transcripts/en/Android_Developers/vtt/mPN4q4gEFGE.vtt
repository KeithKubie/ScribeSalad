WEBVTT
Kind: captions
Language: en

00:00:45.120 --> 00:00:47.910
TREVOR JOHNS: Hello and welcome
to Android Developer

00:00:47.910 --> 00:00:51.720
Office Hours for Wednesday
October 24, 2012.

00:00:51.720 --> 00:00:55.860
For those of you joining us this
week, or for the first

00:00:55.860 --> 00:00:58.040
time this week, this is the show
where we normally answer

00:00:58.040 --> 00:01:01.320
questions live from developers
via Hangouts.

00:01:01.320 --> 00:01:03.390
And we're still going to do
that at the end, but we're

00:01:03.390 --> 00:01:05.239
going to try something a little
different this week.

00:01:05.239 --> 00:01:09.490
We have a prerecorded set of
questions or a prerecorded

00:01:09.490 --> 00:01:10.680
question that we're going
to answer in depth

00:01:10.680 --> 00:01:11.810
before we get started.

00:01:11.810 --> 00:01:16.600
So sit back, enjoy the show,
and we'll resume the live

00:01:16.600 --> 00:01:18.700
broadcast afterwards and
take any Hangout

00:01:18.700 --> 00:01:19.950
questions at that time.

00:01:19.950 --> 00:01:21.200
Play the video.

00:01:35.220 --> 00:01:38.070
Hello and welcome to Dear
Android, the show previously

00:01:38.070 --> 00:01:40.770
known as Android Developer
Office Hours.

00:01:40.770 --> 00:01:43.470
We got a bit tired of developers
always trying to

00:01:43.470 --> 00:01:45.390
show us up by asking us
questions we couldn't answer

00:01:45.390 --> 00:01:46.110
every week.

00:01:46.110 --> 00:01:49.280
So we decided to try a new
format for a change.

00:01:49.280 --> 00:01:51.700
We'll be selecting the best
Android application

00:01:51.700 --> 00:01:54.640
development questions from
across the internet, including

00:01:54.640 --> 00:01:57.670
Google +, and answering them
for you here on YouTube.

00:01:57.670 --> 00:02:00.075
If you're watching us live,
which is every Wednesday at 2

00:02:00.075 --> 00:02:03.000
PM Pacific, we'll be hanging
around for a few minutes after

00:02:03.000 --> 00:02:05.590
each episode to answer
any questions

00:02:05.590 --> 00:02:07.800
about the current episode.

00:02:07.800 --> 00:02:10.699
So with that out of the way,
let's go ahead and move on to

00:02:10.699 --> 00:02:13.860
this week's question, which
comes from Danco, One Stack

00:02:13.860 --> 00:02:16.230
Overflow, who is a
user from Poland.

00:02:16.230 --> 00:02:21.120
He asks, if I have a custom
service that I am broadcasting

00:02:21.120 --> 00:02:24.960
via Bonjour and that I'd like
to either broadcast or

00:02:24.960 --> 00:02:27.190
discover using Wi-Fi
or Bluetooth, is

00:02:27.190 --> 00:02:29.110
this possible in Android?

00:02:29.110 --> 00:02:31.710
To answer this question we
have Alex Lucas who is a

00:02:31.710 --> 00:02:34.295
member of our Android developer
relations team who

00:02:34.295 --> 00:02:39.335
wrote many of the docs about
both Network Service Discovery

00:02:39.335 --> 00:02:42.720
and Wi-Fi on our
developer site.

00:02:42.720 --> 00:02:45.340
Alex, could you help us
answer this question?

00:02:45.340 --> 00:02:46.560
ALEX LUCAS: Absolutely.

00:02:46.560 --> 00:02:50.630
So to break the question into
two sub-parts, will

00:02:50.630 --> 00:02:53.610
Bonjour-like services work
on Bluetooth and will

00:02:53.610 --> 00:02:55.300
they work on Wi-Fi.

00:02:55.300 --> 00:02:57.380
The answer is yes, on Wi-Fi.

00:02:57.380 --> 00:02:58.720
No, on Bluetooth.

00:02:58.720 --> 00:02:59.660
Thank you for tuning in.

00:02:59.660 --> 00:03:01.300
That's our show.

00:03:01.300 --> 00:03:03.290
TREVOR JOHNS: See ya, Alex.

00:03:03.290 --> 00:03:05.130
ALEX LUCAS: So we should
actually, probably answer this

00:03:05.130 --> 00:03:07.050
question in a little
bit more detail.

00:03:07.050 --> 00:03:09.840
To start with the Bluetooth
part, Bluetooth is a really

00:03:09.840 --> 00:03:13.000
great protocol for lots of
device-to-device applications

00:03:13.000 --> 00:03:16.530
like streaming music
or communicating

00:03:16.530 --> 00:03:18.260
with heart rate monitors.

00:03:18.260 --> 00:03:22.080
But on Android, it does not
actually support TCP.

00:03:22.080 --> 00:03:25.580
So what that means is you cannot
create a TCP socket and

00:03:25.580 --> 00:03:29.130
connect to it over Bluetooth
to other devices.

00:03:29.130 --> 00:03:31.640
Because Network Service
Discovery, or at least the

00:03:31.640 --> 00:03:34.600
Android implementation of
Network Service Discovery run

00:03:34.600 --> 00:03:37.570
over TCP, this creates a
fundamental incompatibility

00:03:37.570 --> 00:03:40.240
between Bluetooth and TCP.

00:03:40.240 --> 00:03:43.452
That said, it does actually
work over Wi-Fi.

00:03:43.452 --> 00:03:45.060
TREVOR JOHNS: All right, so
before we go into a bit more

00:03:45.060 --> 00:03:46.920
detail, let's give a bit
of background about

00:03:46.920 --> 00:03:48.130
what exactly NSD is.

00:03:48.130 --> 00:03:52.420
So NSD is Network Service
Discovery, which is Android's

00:03:52.420 --> 00:03:57.650
implementation of multicast DNS
using the DNSSD, so DNS

00:03:57.650 --> 00:03:59.420
service discovery protocol.

00:03:59.420 --> 00:04:01.610
And what this does is it
allows applications to

00:04:01.610 --> 00:04:05.030
broadcast to their existence
on the local network along

00:04:05.030 --> 00:04:07.870
with connection details for that
application to any other

00:04:07.870 --> 00:04:10.750
devices in the same proximity,
which would

00:04:10.750 --> 00:04:11.720
be any other devices.

00:04:11.720 --> 00:04:13.740
Again, on the same
local network.

00:04:13.740 --> 00:04:16.899
So this is useful for things
like social applications,

00:04:16.899 --> 00:04:20.089
games, or even network services
like printers or web

00:04:20.089 --> 00:04:24.040
servers so that way you can find
what devices are nearby.

00:04:24.040 --> 00:04:26.240
ALEX LUCAS: When NSD broadcasts
this information

00:04:26.240 --> 00:04:28.680
over the network, there's four
fundamental pieces of

00:04:28.680 --> 00:04:30.510
information it's going
to send over.

00:04:30.510 --> 00:04:32.550
One of them is the device
identifier.

00:04:32.550 --> 00:04:35.420
The device identifier is often
going to be either the user's

00:04:35.420 --> 00:04:38.340
name or the device host name.

00:04:38.340 --> 00:04:40.320
Another item is going to
be the service name.

00:04:40.320 --> 00:04:42.420
The service name is often going
to be the name of the

00:04:42.420 --> 00:04:43.480
application.

00:04:43.480 --> 00:04:45.750
For instance, if you have a
game called Replica Island

00:04:45.750 --> 00:04:48.320
that you want to play with other
users over the network

00:04:48.320 --> 00:04:51.790
and Replica Island has Network
Service Discovery built in,

00:04:51.790 --> 00:04:54.080
the service name is probably
going to be something like

00:04:54.080 --> 00:04:55.810
Replica Island.

00:04:55.810 --> 00:04:58.380
Another item is going to be the
host address, which you

00:04:58.380 --> 00:05:01.220
don't actually have to enter
yourself at run time.

00:05:01.220 --> 00:05:03.510
Android will just figure that
out for you and send that

00:05:03.510 --> 00:05:05.720
along in the NSD packets.

00:05:05.720 --> 00:05:07.730
The final item is going
to be the port.

00:05:07.730 --> 00:05:11.990
And I want to make a special
note about the port, which is

00:05:11.990 --> 00:05:18.590
that for mobile applications the
easiest thing to do when

00:05:18.590 --> 00:05:21.460
you're designing the game or
the application is not

00:05:21.460 --> 00:05:24.340
actually to pick your own
port at run time or

00:05:24.340 --> 00:05:26.030
hard code one in.

00:05:26.030 --> 00:05:29.030
What you want to do is get
a server socket and

00:05:29.030 --> 00:05:30.660
set it to port zero.

00:05:30.660 --> 00:05:32.940
And what that's going to do is
it's going to tell the Android

00:05:32.940 --> 00:05:36.490
framework, just give me whatever
port is available on

00:05:36.490 --> 00:05:38.160
the system.

00:05:38.160 --> 00:05:41.250
When the server socket returns
the port number to you, you

00:05:41.250 --> 00:05:43.920
then enter that port number
into the Network Service

00:05:43.920 --> 00:05:45.710
Discovery broadcast.

00:05:45.710 --> 00:05:48.850
The handy thing about this is
that if you, for instance, had

00:05:48.850 --> 00:05:51.250
decided that you wanted port
53 to be the one your

00:05:51.250 --> 00:05:54.510
application runs on, and some
other application developer

00:05:54.510 --> 00:05:56.730
decided that they wanted port
53 is the one that their

00:05:56.730 --> 00:05:59.490
application runs on, there would
never be a conflict.

00:05:59.490 --> 00:06:02.330
And there would never be an
issue where the user had to

00:06:02.330 --> 00:06:04.860
choose between your application
or someone else's

00:06:04.860 --> 00:06:07.950
application running
at any given time.

00:06:07.950 --> 00:06:08.650
TREVOR JOHNS: It's a
nice side affect.

00:06:08.650 --> 00:06:10.780
It means you don't have to
request or reserve to port

00:06:10.780 --> 00:06:11.900
from the IANA.

00:06:11.900 --> 00:06:12.590
ALEX LUCAS: Right.

00:06:12.590 --> 00:06:13.750
TREVOR JOHNS: Now, you do still
have to go and register

00:06:13.750 --> 00:06:15.710
your service name, but it's as
simple as just filling out a

00:06:15.710 --> 00:06:16.770
simple form.

00:06:16.770 --> 00:06:19.750
And the chances of there being
a conflict are pretty much

00:06:19.750 --> 00:06:20.400
nonexistent.

00:06:20.400 --> 00:06:21.646
ALEX LUCAS: Yeah, very small.

00:06:21.646 --> 00:06:25.560
You don't actually need the
IANA reservation for when

00:06:25.560 --> 00:06:27.400
you're doing internal testing.

00:06:27.400 --> 00:06:30.170
But as soon as you let your
application out onto the

00:06:30.170 --> 00:06:32.580
internet to roam free, it's a
really good idea to get it

00:06:32.580 --> 00:06:32.900
registered.

00:06:32.900 --> 00:06:33.220
TREVOR JOHNS: Yeah.

00:06:33.220 --> 00:06:34.609
It's just good practice.

00:06:37.850 --> 00:06:41.070
Now, we talked a bit earlier
about Bluetooth and even

00:06:41.070 --> 00:06:43.550
though you can't use NSD on
Bluetooth, there's another

00:06:43.550 --> 00:06:44.420
answer that we want
to give you.

00:06:44.420 --> 00:06:45.330
A better answer.

00:06:45.330 --> 00:06:47.020
And that's called
Wi-Fi Direct.

00:06:47.020 --> 00:06:49.960
Wi-Fi Direct is a peer-to-peer
version of Wi-Fi.

00:06:49.960 --> 00:06:52.490
So it lets devices communicate
with one another without

00:06:52.490 --> 00:06:54.540
having to go through
an access point.

00:06:54.540 --> 00:06:56.770
This provides many of the same
benefits as Bluetooth

00:06:56.770 --> 00:06:59.390
device-to-device connections
but with the advantages of

00:06:59.390 --> 00:07:03.200
Wi-Fi, which means increased
speed and increased range.

00:07:03.200 --> 00:07:06.140
This is available on devices
running Android 4 or above,

00:07:06.140 --> 00:07:07.390
that's Honeycomb.

00:07:07.390 --> 00:07:10.160
And if you happen to be
running Android 4.1,

00:07:10.160 --> 00:07:13.650
Jellybean, you also get
services discovery.

00:07:13.650 --> 00:07:17.170
Now, unlike the traditional
case of networks service

00:07:17.170 --> 00:07:20.740
discovery, which we just
addressed, Wi-Fi Direct

00:07:20.740 --> 00:07:22.680
discovery will work even
when you're not

00:07:22.680 --> 00:07:23.880
connected to a network.

00:07:23.880 --> 00:07:26.750
So think about that
for a second.

00:07:26.750 --> 00:07:30.080
Devices running your application
nearby can be

00:07:30.080 --> 00:07:32.190
detected even if they're
not connected to the

00:07:32.190 --> 00:07:33.670
same network as you.

00:07:33.670 --> 00:07:36.180
That's pretty cool.

00:07:36.180 --> 00:07:38.490
ALEX LUCAS: What my favorite
thing about that, what that

00:07:38.490 --> 00:07:40.800
basically means is if you're in
a movie theater waiting for

00:07:40.800 --> 00:07:43.450
the previews to start, let's
say you've gone to the

00:07:43.450 --> 00:07:44.910
midnight showing or something
like that, you

00:07:44.910 --> 00:07:46.070
have an hour to kill.

00:07:46.070 --> 00:07:48.370
You can open up the application
and see who else

00:07:48.370 --> 00:07:51.405
in the theater or in line is
playing the same game you are

00:07:51.405 --> 00:07:53.430
and connect to them and
play a game having no

00:07:53.430 --> 00:07:54.850
idea who they are.

00:07:54.850 --> 00:07:56.090
TREVOR JOHNS: It gives you
physical proximity.

00:07:56.090 --> 00:07:58.030
ALEX LUCAS: Right, physical
proximity, which is awesome

00:07:58.030 --> 00:08:01.620
because you know that the movie
theater is not going to

00:08:01.620 --> 00:08:03.750
have a Wi-Fi network there.

00:08:03.750 --> 00:08:06.730
They're probably a lot of them
these days, actually, are

00:08:06.730 --> 00:08:09.990
designed to block incoming calls
and signals and stuff.

00:08:09.990 --> 00:08:11.350
TREVOR JOHNS: Yeah, but please
don't use that as an excuse to

00:08:11.350 --> 00:08:13.265
play the game during
the movie.

00:08:13.265 --> 00:08:13.700
ALEX LUCAS: Right.

00:08:13.700 --> 00:08:14.780
Don't play during the movie.

00:08:14.780 --> 00:08:16.670
There's lots of helpful previews
that tell you that's

00:08:16.670 --> 00:08:17.500
just a bad idea.

00:08:17.500 --> 00:08:21.120
It's rude, and there'd be a
bright screen in front of the

00:08:21.120 --> 00:08:23.090
people behind you, and we're
not suggesting that.

00:08:23.090 --> 00:08:25.750
But when you have time to kill
in line or before the

00:08:25.750 --> 00:08:29.060
previews, knock yourself out.

00:08:29.060 --> 00:08:31.550
Now, we do want to point out
that it's still important to

00:08:31.550 --> 00:08:33.530
implement network service
discovery for when you're

00:08:33.530 --> 00:08:35.049
connected to a network.

00:08:35.049 --> 00:08:36.940
There's a couple reasons
for this.

00:08:36.940 --> 00:08:39.880
One of them is that Wi-Fi Direct
is not going to work at

00:08:39.880 --> 00:08:42.520
all when you're connected to a
network because of the way the

00:08:42.520 --> 00:08:44.000
underlying technology works.

00:08:44.000 --> 00:08:46.750
You're either connected to a
network or your surfing around

00:08:46.750 --> 00:08:48.970
for Wi-Fi Direct devices.

00:08:48.970 --> 00:08:52.170
The other item is that there
are a lot of services and

00:08:52.170 --> 00:08:55.930
hardware that broadcast services
that are designed to

00:08:55.930 --> 00:08:57.790
be discovered on a network.

00:08:57.790 --> 00:09:02.150
Examples of this are network
cameras and network printers.

00:09:02.150 --> 00:09:05.260
Now, most companies will not set
up their network printers

00:09:05.260 --> 00:09:08.660
to be Wi-Fi Direct accessible
because that means anyone who

00:09:08.660 --> 00:09:11.330
is within physical proximity
who didn't necessarily have

00:09:11.330 --> 00:09:13.670
permission to use that printer
could print out

00:09:13.670 --> 00:09:14.760
whatever they wanted.

00:09:14.760 --> 00:09:17.810
So being on the network and
requiring the user to be on

00:09:17.810 --> 00:09:21.730
the network provides a
permission system or just a

00:09:21.730 --> 00:09:24.530
small layer of security.

00:09:24.530 --> 00:09:27.760
So really your best option is to
implement both Wi-Fi Direct

00:09:27.760 --> 00:09:31.380
and NSD, and that way your
application will have the best

00:09:31.380 --> 00:09:34.710
of both worlds and increase
the chances of your users

00:09:34.710 --> 00:09:37.320
being able to connect to each
other no matter what

00:09:37.320 --> 00:09:38.770
circumstance.

00:09:38.770 --> 00:09:42.960
In order to use Wi-Fi Direct
service discovery, the

00:09:42.960 --> 00:09:46.550
necessary class that you want
to use is Wi-Fi P2P Manager

00:09:46.550 --> 00:09:49.210
which provides an implementation
of DNSSD

00:09:49.210 --> 00:09:52.290
similar to the way standard
NSD does.

00:09:52.290 --> 00:09:54.830
For more information about how
to actually implement network

00:09:54.830 --> 00:09:58.670
service discovery and service
discover over Wi-Fi Direct, we

00:09:58.670 --> 00:10:00.620
have a training class available
at developer dot

00:10:00.620 --> 00:10:03.180
android dot com slash training,
and we really

00:10:03.180 --> 00:10:05.630
recommend you go there and read
through the tutorial.

00:10:05.630 --> 00:10:09.870
We also provide some sample
code, and it walks you through

00:10:09.870 --> 00:10:12.920
a real world example of how to
implement this functionality

00:10:12.920 --> 00:10:14.910
in a pre-existing application.

00:10:14.910 --> 00:10:17.130
TREVOR JOHNS: And if you have
any questions about either NSD

00:10:17.130 --> 00:10:19.800
or Wi-Fi Direct, join us via
Hangouts after the live

00:10:19.800 --> 00:10:22.510
broadcast where we'll be able
to help answer those

00:10:22.510 --> 00:10:23.970
questions for you.

00:10:23.970 --> 00:10:26.340
And if you have any questions
for next week's broadcast,

00:10:26.340 --> 00:10:29.710
post them to Stack Overflow or
send them to us via Android

00:10:29.710 --> 00:10:32.890
developers at Google+ and we'll
pick the best of them

00:10:32.890 --> 00:10:34.770
for next week's broadcast.

00:10:34.770 --> 00:10:36.910
And with that, we'll see
you all next week.

00:10:36.910 --> 00:10:37.660
Thanks for joining us.

00:10:37.660 --> 00:10:38.910
ALEX LUCAS: Bye guys.

00:10:43.490 --> 00:10:45.620
TREVOR JOHNS: And we're
back to the live show.

00:10:45.620 --> 00:10:49.710
Hopefully, those of you watching
us live enjoyed that.

00:10:49.710 --> 00:10:53.900
If you are here with us live,
feel free to hop onto our

00:10:53.900 --> 00:10:55.030
Google+ Hangouts.

00:10:55.030 --> 00:10:58.740
You can find the link by going
to developers dot google dot

00:10:58.740 --> 00:11:01.635
com slash live, clicking on
the office hours link, and

00:11:01.635 --> 00:11:04.190
there will be a bright
red Hangout button.

00:11:04.190 --> 00:11:06.620
Feel free to hop on and let
us know what you thought.

00:11:06.620 --> 00:11:09.090
Or if you have any questions
about either network service

00:11:09.090 --> 00:11:12.940
discovery or Wi-Fi Direct we'd
love to take them now, too.

00:11:12.940 --> 00:11:16.290
We have just a few questions in
Moderator this week so if

00:11:16.290 --> 00:11:19.700
you want to join us in
Google+ act quickly.

00:11:19.700 --> 00:11:22.520
We're going to go ahead and go
through the presubmitted

00:11:22.520 --> 00:11:24.610
Moderator questions while we
wait for people to join us.

00:11:24.610 --> 00:11:27.960
So let's go ahead and go to the
first Moderator question,

00:11:27.960 --> 00:11:31.150
which is a little difficult to
read here but oh, so this is a

00:11:31.150 --> 00:11:34.205
question about Android Camp and
CSSI which is the Computer

00:11:34.205 --> 00:11:36.220
of Science Summer Institute.

00:11:36.220 --> 00:11:38.320
It's a video question and when
we tried to play it this

00:11:38.320 --> 00:11:39.840
morning it was actually a
private video so I don't know

00:11:39.840 --> 00:11:40.340
if it will play now.

00:11:40.340 --> 00:11:41.590
Let's give it a shot
just in case.

00:11:46.340 --> 00:11:48.460
Oh, it's playing, I think.

00:11:48.460 --> 00:11:51.100
MALE SPEAKER: Hey, guys, I was
wondering if you could answer

00:11:51.100 --> 00:11:54.550
some questions about
Android Camp.

00:11:54.550 --> 00:11:55.350
[INAUDIBLE]

00:11:55.350 --> 00:11:57.420
taught there this summer
or something.

00:11:57.420 --> 00:12:01.240
But I was wondering if a high
school senior could apply to

00:12:01.240 --> 00:12:02.290
Android Camp.

00:12:02.290 --> 00:12:06.740
I know that sounds a bit strange
but I'm developing in

00:12:06.740 --> 00:12:08.400
Android currently.

00:12:08.400 --> 00:12:11.160
I'm really interested
in learning.

00:12:11.160 --> 00:12:14.280
TREVOR JOHNS: OK, I assume that
was the entirety of the

00:12:14.280 --> 00:12:15.750
question and didn't
get cut off.

00:12:15.750 --> 00:12:20.000
But yeah, so the question is so
for Android Camp, which is

00:12:20.000 --> 00:12:23.200
a program hold I believe once a
year for university students

00:12:23.200 --> 00:12:26.190
to come and learn a little bit
about Android development.

00:12:26.190 --> 00:12:28.150
So the question is can high
school students apply to it?

00:12:28.150 --> 00:12:31.200
So it normally is targeted
towards university students

00:12:31.200 --> 00:12:36.980
because we expect a fairly deep
knowledge of computer

00:12:36.980 --> 00:12:37.810
programming in general.

00:12:37.810 --> 00:12:39.980
It's a pretty fast paced course
so we don't have a lot

00:12:39.980 --> 00:12:41.640
of time to go over the basics.

00:12:41.640 --> 00:12:45.060
But that being said, if you
think you have a pretty solid

00:12:45.060 --> 00:12:46.960
programming background
and could keep up,

00:12:46.960 --> 00:12:48.080
feel free to apply.

00:12:48.080 --> 00:12:52.880
No guarantees of course, but
just be sure to explain in

00:12:52.880 --> 00:12:56.290
detail what your programming
background is and make sure

00:12:56.290 --> 00:12:58.925
the people who are reviewing the
applications know that you

00:12:58.925 --> 00:12:59.830
can keep up.

00:12:59.830 --> 00:13:02.350
Now, that said there's usually,
if you're not in

00:13:02.350 --> 00:13:05.420
college yet, there might be some
additional caveats about

00:13:05.420 --> 00:13:06.290
being under 18.

00:13:06.290 --> 00:13:09.267
But I'm not sure about the
legalities of that since I'm

00:13:09.267 --> 00:13:10.240
one of their programmers.

00:13:10.240 --> 00:13:13.840
Basically, go ahead and submit
your answer, or submit anyway.

00:13:13.840 --> 00:13:15.850
Worst case that happens is you
get turned down and you can

00:13:15.850 --> 00:13:17.740
always apply next year.

00:13:17.740 --> 00:13:22.440
But we certainly love people
to apply so give it a shot.

00:13:22.440 --> 00:13:26.460
Let's move on to the next
Moderator question which asks,

00:13:26.460 --> 00:13:28.370
we are creating a layout
structure consisting of a

00:13:28.370 --> 00:13:30.790
horizontal scroll view that
holds a linear layout that

00:13:30.790 --> 00:13:34.060
will hold any number of
TextView children.

00:13:34.060 --> 00:13:36.520
The number of content is only
known at run time and we want

00:13:36.520 --> 00:13:39.220
all the children to
be of equal width

00:13:39.220 --> 00:13:40.610
matching the widest.

00:13:40.610 --> 00:13:41.450
How?

00:13:41.450 --> 00:13:42.540
Oh boy.

00:13:42.540 --> 00:13:45.450
So this question must have
gotten in there minutes ago,

00:13:45.450 --> 00:13:48.190
literally, because we checked
all the questions before the

00:13:48.190 --> 00:13:49.020
show and this was not there.

00:13:49.020 --> 00:13:50.490
ALEX LUCAS: So is that
a horizontal

00:13:50.490 --> 00:13:52.480
scrolling list view?

00:13:52.480 --> 00:13:54.500
TREVOR JOHNS: Yes, it's
horizontally scrolling list

00:13:54.500 --> 00:13:56.600
view with a linear layout

00:13:56.600 --> 00:13:57.760
containing texts view children.

00:13:57.760 --> 00:13:59.720
So basically, it's
a horizontally

00:13:59.720 --> 00:14:01.520
scrolling list of text.

00:14:01.520 --> 00:14:03.650
ALEX LUCAS: Not list
view but scrolling.

00:14:03.650 --> 00:14:03.930
OK.

00:14:03.930 --> 00:14:05.960
TREVOR JOHNS: Yes.

00:14:05.960 --> 00:14:08.690
So that's a really good question
because you don't

00:14:08.690 --> 00:14:11.870
have any of this
until run time.

00:14:14.560 --> 00:14:21.780
Now, what I'd probably do in
this case is, when pretty much

00:14:21.780 --> 00:14:27.000
any view gets laid out, there's
a measure children

00:14:27.000 --> 00:14:28.000
method call.

00:14:28.000 --> 00:14:31.130
And so if you override that, you
can modify the semantics

00:14:31.130 --> 00:14:33.000
about how everything
is measured.

00:14:33.000 --> 00:14:35.300
And if you need, you can either
go and force that to

00:14:35.300 --> 00:14:41.190
return a specific measurement
or you could go and actually

00:14:41.190 --> 00:14:42.730
fetch your list of children
at that time.

00:14:42.730 --> 00:14:44.280
This will get called over time,
but you can fetch your

00:14:44.280 --> 00:14:46.540
children then and make sure
you know exactly what the

00:14:46.540 --> 00:14:48.470
correct timing with this
for your list view.

00:14:48.470 --> 00:14:50.820
And so that way, if the default
behavior is not giving

00:14:50.820 --> 00:14:54.160
you what you want you have
a chance to modify it.

00:14:54.160 --> 00:14:58.740
So search for measure children
and the argument to that

00:14:58.740 --> 00:15:02.450
should be a height spec and a
width spec, which is also a

00:15:02.450 --> 00:15:06.100
very interesting class because
it's actually an integer.

00:15:06.100 --> 00:15:10.070
There's a create measure spec
method that you'll want to use

00:15:10.070 --> 00:15:12.290
to go and create those.

00:15:12.290 --> 00:15:13.045
Yeah, I said there's a class.

00:15:13.045 --> 00:15:13.660
It's not even a class.

00:15:13.660 --> 00:15:14.550
It's an integer.

00:15:14.550 --> 00:15:19.320
You have height spec and width,
I can't even talk,

00:15:19.320 --> 00:15:22.400
Height spec and width spec both
of which are integers,

00:15:22.400 --> 00:15:23.980
but they're not normal
integers.

00:15:23.980 --> 00:15:26.090
They're actually, there's
a special code with the

00:15:26.090 --> 00:15:26.760
way it's laid out.

00:15:26.760 --> 00:15:30.640
So you always want to use create
view spec whenever you

00:15:30.640 --> 00:15:31.790
aren't finding those.

00:15:31.790 --> 00:15:36.070
But anyway, take a look at the
measure children method and

00:15:36.070 --> 00:15:38.556
that should give you all the
details you need to go and

00:15:38.556 --> 00:15:39.640
override that behavior.

00:15:39.640 --> 00:15:41.510
ALEX LUCAS: That's much better
than my answer, which was just

00:15:41.510 --> 00:15:44.070
going to be add a bunch of white
space to your text until

00:15:44.070 --> 00:15:46.930
it's all the same width.

00:15:46.930 --> 00:15:49.390
Actually, I don't even know that
that would work because

00:15:49.390 --> 00:15:52.670
it would have to be a mono
spaced font and it might trim

00:15:52.670 --> 00:15:55.360
while doing the measuring
anyway.

00:15:55.360 --> 00:15:58.000
TREVOR JOHNS: So let's move
on to the next question.

00:15:58.000 --> 00:16:00.430
Is there a way my app can be
notified when it's uninstalled

00:16:00.430 --> 00:16:03.300
via some type of call back
URL or broadcast?

00:16:03.300 --> 00:16:05.500
I need to be able to delete
or deregister my

00:16:05.500 --> 00:16:07.300
users from the cloud.

00:16:07.300 --> 00:16:09.400
Wow, this one also is a
last minute addition

00:16:09.400 --> 00:16:10.720
to our list of questions.

00:16:10.720 --> 00:16:12.720
Thank you for the question.

00:16:12.720 --> 00:16:13.922
Alex, do you want to
take this one?

00:16:13.922 --> 00:16:14.350
ALEX LUCAS: Sure.

00:16:14.350 --> 00:16:19.220
So there is no flag or there's
no broadcast that's going to

00:16:19.220 --> 00:16:22.180
happen when your app
gets uninstalled.

00:16:22.180 --> 00:16:26.420
The issue there is that there
would be some security

00:16:26.420 --> 00:16:30.680
implications to code running
as soon as it's uninstalled

00:16:30.680 --> 00:16:32.480
especially for malicious apps.

00:16:32.480 --> 00:16:35.630
Obviously, I'm not implying your
app is malicious but it's

00:16:35.630 --> 00:16:38.430
a consideration we have
to take into account.

00:16:38.430 --> 00:16:42.780
However, within the case of
wanting to deregister and

00:16:42.780 --> 00:16:47.240
remove users from your database
in the cloud there's

00:16:47.240 --> 00:16:48.230
a couple different
things there.

00:16:48.230 --> 00:16:51.840
First of all, the person might
be uninstalling on one device

00:16:51.840 --> 00:16:54.640
but not necessarily from
all of their devices.

00:16:54.640 --> 00:16:58.560
So depending on how much space
the individual is taking up,

00:16:58.560 --> 00:17:01.570
this might not be the right
approach to keeping your

00:17:01.570 --> 00:17:03.380
database clean.

00:17:03.380 --> 00:17:08.940
What you can do, other options
would include, automatically

00:17:08.940 --> 00:17:11.079
removing for inactivity
after a year.

00:17:11.079 --> 00:17:14.390
Or one option is actually
to use Google

00:17:14.390 --> 00:17:16.339
Cloud Messaging, GCM.

00:17:16.339 --> 00:17:20.530
And what you could do there is
periodically send still alive

00:17:20.530 --> 00:17:22.290
messages, basically, to devices

00:17:22.290 --> 00:17:23.490
where your app is installed.

00:17:23.490 --> 00:17:25.362
TREVOR JOHNS: Actually, I have
a better idea in that case.

00:17:25.362 --> 00:17:27.234
That's the heartbeat.

00:17:27.234 --> 00:17:29.590
In that case, there's really
no need to use GCM.

00:17:29.590 --> 00:17:32.630
You could just have an alarm
manager that says, OK, once a

00:17:32.630 --> 00:17:34.830
day or once a week just
wake up and send

00:17:34.830 --> 00:17:36.230
this ping to my server.

00:17:36.230 --> 00:17:37.375
I mean, there's no need to
go out of your way to

00:17:37.375 --> 00:17:38.490
use GCM in that case.

00:17:38.490 --> 00:17:41.600
I usually like to say, GCM is
really good when you have

00:17:41.600 --> 00:17:42.400
unplanned events.

00:17:42.400 --> 00:17:46.010
So say NS message comes in or
your device administrator

00:17:46.010 --> 00:17:48.040
telling a device it should
wipe itself.

00:17:48.040 --> 00:17:49.980
I mean, these aren't things
you can account for.

00:17:49.980 --> 00:17:53.130
And so that's where
GCM really shines.

00:17:53.130 --> 00:17:54.640
But if it's just something that
you know should happen

00:17:54.640 --> 00:17:56.696
once a day or once a
week, don't go with

00:17:56.696 --> 00:17:57.490
the overhead of GCM.

00:17:57.490 --> 00:17:59.510
Just use Alarm Manager.

00:17:59.510 --> 00:17:59.720
ALEX LUCAS: Right.

00:17:59.720 --> 00:17:59.900
That's true.

00:17:59.900 --> 00:18:00.710
Yeah.

00:18:00.710 --> 00:18:02.380
TREVOR JOHNS: You have to keep
in mind, too, every time you

00:18:02.380 --> 00:18:05.660
send a push message to a phone
it's additional network

00:18:05.660 --> 00:18:06.570
traffic on our end.

00:18:06.570 --> 00:18:09.910
It's initial server overhead
on your end as a developer,

00:18:09.910 --> 00:18:14.370
and on top of that it uses up
battery unnecessarily perhaps.

00:18:14.370 --> 00:18:14.860
ALEX LUCAS: That's true.

00:18:14.860 --> 00:18:17.660
My mind went to GCM because we
get this question a lot with

00:18:17.660 --> 00:18:21.090
GCM users of I don't want to
be continuously sending

00:18:21.090 --> 00:18:23.260
messages to someone
who doesn't even

00:18:23.260 --> 00:18:24.650
have the app installed.

00:18:24.650 --> 00:18:27.070
TREVOR JOHNS: That brings up
another good question, though.

00:18:27.070 --> 00:18:28.750
And so how does GCM
handle this?

00:18:28.750 --> 00:18:32.740
If you uninstall an app that
uses GCM, how does GCM know

00:18:32.740 --> 00:18:34.740
that that app no
longer exists?

00:18:34.740 --> 00:18:37.910
It's the exact same problem, I
suspect, whoever asked this

00:18:37.910 --> 00:18:39.890
question of this problem
is trying to solve.

00:18:39.890 --> 00:18:42.040
And the answer is actually
that we don't know.

00:18:42.040 --> 00:18:44.160
When you uninstall an app
again, there's no way to

00:18:44.160 --> 00:18:44.770
unregister it.

00:18:44.770 --> 00:18:47.320
So what will happen is the very
next time you send the

00:18:47.320 --> 00:18:50.930
GCM or CTDM message to
the device it will

00:18:50.930 --> 00:18:52.170
try and deliver it.

00:18:52.170 --> 00:18:55.690
The delivery will fail, and at
that point we mark the device

00:18:55.690 --> 00:18:56.960
as unregistered.

00:18:56.960 --> 00:18:59.160
And if you try and send any more
messages after that then

00:18:59.160 --> 00:19:01.920
you'll actually get a failure
on the server end as well.

00:19:01.920 --> 00:19:04.560
So it's very much a lazy
deregistration once we realize

00:19:04.560 --> 00:19:05.920
the device just doesn't
exist and we

00:19:05.920 --> 00:19:08.620
can't address it anymore.

00:19:08.620 --> 00:19:12.700
So even internally we run
into those same security

00:19:12.700 --> 00:19:16.010
considerations and have to
work around them, but the

00:19:16.010 --> 00:19:18.260
integer I don't think is
actually any worse of a user

00:19:18.260 --> 00:19:18.900
experience.

00:19:18.900 --> 00:19:20.780
It still works exactly
as it should.

00:19:20.780 --> 00:19:21.760
ALEX LUCAS: Yeah.

00:19:21.760 --> 00:19:26.370
So I guess the summary would be
there's no way to receive a

00:19:26.370 --> 00:19:28.490
message when the app
is uninstalled.

00:19:28.490 --> 00:19:31.280
You can send a heartbeat from
your app and then assume it's

00:19:31.280 --> 00:19:33.010
been uninstalled as
soon as you stop

00:19:33.010 --> 00:19:34.400
receiving the heartbeat.

00:19:34.400 --> 00:19:37.960
But a single uninstall by
itself depending on the

00:19:37.960 --> 00:19:41.560
context of application, of
course, the uninstalled by

00:19:41.560 --> 00:19:44.900
itself might not be a good
enough reason to deregister

00:19:44.900 --> 00:19:47.680
the user and wipe their data
from your database, as they

00:19:47.680 --> 00:19:51.660
may just be switching devices or
letting someone else borrow

00:19:51.660 --> 00:19:54.020
the device and don't want to
have access to their personal

00:19:54.020 --> 00:19:57.870
data available to the other
person or flashing the device,

00:19:57.870 --> 00:19:59.320
upgrading to a different
device.

00:19:59.320 --> 00:20:02.150
There's all sorts of scenarios
where you might not want to

00:20:02.150 --> 00:20:06.190
wipe their data just because
the app is at least

00:20:06.190 --> 00:20:07.820
temporarily uninstalled.

00:20:07.820 --> 00:20:11.000
So a timeout period like six
months or a year or something

00:20:11.000 --> 00:20:13.540
clearly defined to the user when
they set up an account,

00:20:13.540 --> 00:20:15.120
probably a better way to go.

00:20:15.120 --> 00:20:17.480
TREVOR JOHNS: Now, if you
do decide to implement

00:20:17.480 --> 00:20:19.580
heartbeat, one plea.

00:20:19.580 --> 00:20:21.780
Please, please, please don't
make it more than, I'd say,

00:20:21.780 --> 00:20:23.542
once a day, I think would
be reasonable for

00:20:23.542 --> 00:20:24.710
something like this.

00:20:24.710 --> 00:20:27.240
Even once a week, maybe, once
a day is reasonable.

00:20:27.240 --> 00:20:29.700
The reason I mention that
is, again, battery life.

00:20:29.700 --> 00:20:32.380
Every time you have Alarm
Manager wake the phone up or

00:20:32.380 --> 00:20:36.640
you send a GCM message to the
phone, the CPU has to run, the

00:20:36.640 --> 00:20:37.920
radio has to wake up.

00:20:37.920 --> 00:20:40.810
It actually on the whole
ends up consuming a

00:20:40.810 --> 00:20:42.770
lot of battery life.

00:20:42.770 --> 00:20:44.660
One particular wake
up is not bad.

00:20:44.660 --> 00:20:46.720
If you're waking the phone
up every hour, every five

00:20:46.720 --> 00:20:49.210
minutes, it adds up very fast.

00:20:49.210 --> 00:20:53.040
So every time you wake
the phone up just

00:20:53.040 --> 00:20:54.040
remember, there is a cost.

00:20:54.040 --> 00:20:56.650
Keep it to a minimum for
your own user sake.

00:20:56.650 --> 00:20:58.250
ALEX LUCAS: I would actually
go so far as to say, it's

00:20:58.250 --> 00:21:00.680
possible to design your app such
that, if you're sending

00:21:00.680 --> 00:21:04.680
out other network data, let's
say you're using a web browser

00:21:04.680 --> 00:21:06.410
or something like that,
you know the

00:21:06.410 --> 00:21:07.370
device is already awake.

00:21:07.370 --> 00:21:09.230
You know the radio's
already on.

00:21:09.230 --> 00:21:11.970
Take that opportunity to send
the heartbeat at that point

00:21:11.970 --> 00:21:14.835
even if it's more than once a
day because that way you know

00:21:14.835 --> 00:21:16.140
that you're not waking
the phone up.

00:21:16.140 --> 00:21:19.970
You're not turning on the radio,
and you're basically in

00:21:19.970 --> 00:21:24.340
no way affecting the user's
battery life.

00:21:24.340 --> 00:21:25.690
TREVOR JOHNS: So shall we move
onto the next question?

00:21:25.690 --> 00:21:27.430
ALEX LUCAS: Yeah, shoot.

00:21:27.430 --> 00:21:29.890
TREVOR JOHNS: So the next
question comes from Terrance

00:21:29.890 --> 00:21:30.760
in Vancouver.

00:21:30.760 --> 00:21:33.130
Is there any way to query
information from the LTE cell

00:21:33.130 --> 00:21:34.680
tower the device is
connected to?

00:21:34.680 --> 00:21:38.670
Things like MCC, that's mobile
country code, MNC, mobile

00:21:38.670 --> 00:21:42.515
network code, ECI and TAC, which
actually to be honest, I

00:21:42.515 --> 00:21:45.230
can't remember what they stand
for off the top of my head.

00:21:45.230 --> 00:21:50.700
So there is a telephony manager
class which will tell

00:21:50.700 --> 00:21:53.840
you, I know definitely, will
tell you the MCC and MNC.

00:21:53.840 --> 00:21:55.790
I can't remember about
the other two.

00:21:55.790 --> 00:22:04.180
I can also tell you the things
like the users IMEI and the

00:22:04.180 --> 00:22:04.920
equivalent.

00:22:04.920 --> 00:22:08.450
IMEI is mobile identifier.

00:22:08.450 --> 00:22:09.975
I forgot the app.

00:22:09.975 --> 00:22:11.910
ALEX LUCAS: I think
Verizon's is NEID.

00:22:11.910 --> 00:22:12.410
TREVOR JOHNS: Yes.

00:22:12.410 --> 00:22:13.680
That's what I was thinking of.

00:22:13.680 --> 00:22:16.280
So I think it's still the
same method call.

00:22:16.280 --> 00:22:19.160
It will be like I get IMEI
or get device ID.

00:22:19.160 --> 00:22:21.140
ALEX LUCAS: There are a lot of
three and four letter acronyms

00:22:21.140 --> 00:22:22.090
associated with this thing.

00:22:22.090 --> 00:22:22.830
TREVOR JOHNS: There
really are.

00:22:22.830 --> 00:22:25.550
But yes, it's all inside of this
telephony manager class.

00:22:25.550 --> 00:22:28.895
The one thing I will warn you
is to get access to a lot of

00:22:28.895 --> 00:22:33.250
those values requires the access
phone state permission

00:22:33.250 --> 00:22:36.260
which displays a very scary
warning to users.

00:22:36.260 --> 00:22:38.990
So for that reason, I usually
like to recommend not

00:22:38.990 --> 00:22:40.680
accessing these fields
unless you really,

00:22:40.680 --> 00:22:41.560
really need to do it.

00:22:41.560 --> 00:22:44.710
If you're just looking for a
way to identify the user,

00:22:44.710 --> 00:22:49.180
usually our recommendation is
to just create a random UUID

00:22:49.180 --> 00:22:52.510
on first boot stored inside a
shared preference file and

00:22:52.510 --> 00:22:53.660
then read from that.

00:22:53.660 --> 00:22:55.755
If you really do need something
that's not app

00:22:55.755 --> 00:22:58.840
specific but device specific,
there's also an Android dot

00:22:58.840 --> 00:23:02.570
get secure ID method call that
you can use, which is

00:23:02.570 --> 00:23:03.900
generated the very first
time the user

00:23:03.900 --> 00:23:05.330
starts up their phone.

00:23:05.330 --> 00:23:08.930
Though, there are, I believe,
prior to I want to say Android

00:23:08.930 --> 00:23:11.220
2.0, I think there were some
bugs in it that you have to be

00:23:11.220 --> 00:23:12.420
aware of on certain devices?

00:23:12.420 --> 00:23:14.445
I think it was prior to Froyo.

00:23:14.445 --> 00:23:14.900
TREVOR JOHNS: Yeah.

00:23:14.900 --> 00:23:15.430
It's pretty old.

00:23:15.430 --> 00:23:15.860
Yeah.

00:23:15.860 --> 00:23:19.620
I mean, it's something to keep
in mind, but there are still a

00:23:19.620 --> 00:23:21.800
few devices out there that that
particular method call

00:23:21.800 --> 00:23:23.420
will use, will run into.

00:23:23.420 --> 00:23:27.640
So again, for that reason we
usually like to recommend

00:23:27.640 --> 00:23:30.480
using a per application ID
rather than per device.

00:23:30.480 --> 00:23:32.610
Not only that, it's better
for users' privacy.

00:23:32.610 --> 00:23:34.830
People don't like being
tracked if they

00:23:34.830 --> 00:23:36.910
don't really need to.

00:23:36.910 --> 00:23:37.680
ALEX LUCAS: Right.

00:23:37.680 --> 00:23:40.390
That said, if it's the core
purpose of your application,

00:23:40.390 --> 00:23:44.360
like one that I could think of
that would make use of this,

00:23:44.360 --> 00:23:48.440
is I've seen community generated
reception maps where

00:23:48.440 --> 00:23:51.880
it's on a given carrier, how
good is my reception here

00:23:51.880 --> 00:23:53.070
versus here?

00:23:53.070 --> 00:23:55.580
And that they basically, the
application does that by

00:23:55.580 --> 00:23:58.060
having a few hundred thousand
people download it, and it

00:23:58.060 --> 00:24:01.200
just tracks GPS and signal
strength and nearby cell

00:24:01.200 --> 00:24:02.670
towers for every user
and uploads it

00:24:02.670 --> 00:24:04.190
into a central database.

00:24:04.190 --> 00:24:06.180
So for something like that,
obviously you want to access

00:24:06.180 --> 00:24:06.530
this stuff.

00:24:06.530 --> 00:24:08.240
And it's going to make sense
when a user looks at the

00:24:08.240 --> 00:24:10.280
permission oh, they're
accessing this

00:24:10.280 --> 00:24:11.180
information on my phone.

00:24:11.180 --> 00:24:12.600
How else would it work?

00:24:12.600 --> 00:24:14.280
In which case, it
would be fine.

00:24:14.280 --> 00:24:16.870
If however, you're making a
flashlight app, it's going to

00:24:16.870 --> 00:24:18.340
look really scary and
like you're doing

00:24:18.340 --> 00:24:20.045
something really sketchy.

00:24:20.045 --> 00:24:21.470
TREVOR JOHNS: Yup.

00:24:21.470 --> 00:24:23.720
I guess I think, though, yeah,
that is definitely

00:24:23.720 --> 00:24:24.680
a really good use.

00:24:24.680 --> 00:24:27.830
And again, if you do need to
access that kind of data,

00:24:27.830 --> 00:24:30.110
telephony manager is
the class you want.

00:24:30.110 --> 00:24:32.220
So before we move on, let's take
a look at Hangouts and

00:24:32.220 --> 00:24:34.110
see if anybody's joining
us live here.

00:24:37.060 --> 00:24:39.030
We do have a couple
people live.

00:24:39.030 --> 00:24:42.460
So if anybody does want to speak
live, we're going to go

00:24:42.460 --> 00:24:43.870
ahead and unmute the mic now.

00:24:43.870 --> 00:24:46.720
Feel free to wave and speak
up and you'll be on

00:24:46.720 --> 00:24:48.000
the show with us.

00:24:48.000 --> 00:24:48.350
AUDIENCE: Hello.

00:24:48.350 --> 00:24:49.460
I have a question.

00:24:49.460 --> 00:24:49.640
TREVOR JOHNS: All right.

00:24:49.640 --> 00:24:50.675
We have one person.

00:24:50.675 --> 00:24:52.330
Do we have audio?

00:24:52.330 --> 00:24:53.210
AUDIENCE: Yes.

00:24:53.210 --> 00:24:54.840
TREVOR JOHNS: Your microphone
should be on.

00:24:54.840 --> 00:24:57.280
You might need to
unmute yourself.

00:24:57.280 --> 00:24:58.756
AUDIENCE: OK.

00:24:58.756 --> 00:25:00.860
My microphone is on.

00:25:00.860 --> 00:25:01.400
TREVOR JOHNS: We see you.

00:25:01.400 --> 00:25:04.720
We definitely do see you but
we're not hearing anything.

00:25:04.720 --> 00:25:08.850
Do we have both of the
audio channels here?

00:25:08.850 --> 00:25:09.750
Try talking one more time.

00:25:09.750 --> 00:25:11.340
Any luck?

00:25:11.340 --> 00:25:11.910
Ah, yes.

00:25:11.910 --> 00:25:12.610
We've got you.

00:25:12.610 --> 00:25:12.870
ALEX LUCAS: Yeah.

00:25:12.870 --> 00:25:13.870
We've got you.

00:25:13.870 --> 00:25:16.870
MALE SPEAKER: OK I have
a follow up to the

00:25:16.870 --> 00:25:17.920
Android Camp question.

00:25:17.920 --> 00:25:18.326
TREVOR JOHNS: Yeah.

00:25:18.326 --> 00:25:18.732
Sure.

00:25:18.732 --> 00:25:19.140
Go ahead.

00:25:19.140 --> 00:25:24.501
AUDIENCE: For the CSSI Google
Computer Science Institute, do

00:25:24.501 --> 00:25:27.420
you have any preference for
students with programming

00:25:27.420 --> 00:25:30.070
experience over those without?

00:25:30.070 --> 00:25:32.870
TREVOR JOHNS: Generally
speaking, we do.

00:25:32.870 --> 00:25:35.600
If you have a bit more
background it

00:25:35.600 --> 00:25:37.940
certainly looks better.

00:25:37.940 --> 00:25:40.370
But that being said,
[INAUDIBLE]

00:25:40.370 --> 00:25:41.810
Computer Science Summer
Institute, that ones a little

00:25:41.810 --> 00:25:44.330
bit more basic than
Android Camp.

00:25:44.330 --> 00:25:44.670
Right?

00:25:44.670 --> 00:25:44.910
ALEX LUCAS: Yeah.

00:25:44.910 --> 00:25:47.270
That one, I think, was more
geared toward people with

00:25:47.270 --> 00:25:49.680
little to no programming
experience.

00:25:49.680 --> 00:25:53.060
Whereas Android Camp is geared
more to people with strong

00:25:53.060 --> 00:25:54.510
programming background
already.

00:25:54.510 --> 00:25:54.840
TREVOR JOHNS: Right.

00:25:54.840 --> 00:25:57.230
But I mean, that being said, if
you have something to show

00:25:57.230 --> 00:25:59.380
to demonstrate interest that
always will help your

00:25:59.380 --> 00:26:00.390
application.

00:26:00.390 --> 00:26:03.920
But especially in that case,
we're not expecting as high a

00:26:03.920 --> 00:26:06.260
bar as we would for something
like Android Camp.

00:26:06.260 --> 00:26:07.230
AUDIENCE: OK.

00:26:07.230 --> 00:26:08.040
Thank you.

00:26:08.040 --> 00:26:09.290
ALEX LUCAS: Sure.

00:26:11.890 --> 00:26:12.950
TREVOR JOHNS: Any other
live questions?

00:26:12.950 --> 00:26:14.820
I see at least two more people
on the camera with us.

00:26:17.430 --> 00:26:19.040
Oh, go ahead and hit
the chat button.

00:26:19.040 --> 00:26:20.400
They might be typing to us.

00:26:20.400 --> 00:26:21.650
I just realized.

00:26:25.500 --> 00:26:27.420
Sorry, we're just reading
the chat questions, now.

00:26:27.420 --> 00:26:28.250
You'll have to forgive us.

00:26:28.250 --> 00:26:30.390
We normally have a computer
screen in front of us, but

00:26:30.390 --> 00:26:33.190
Daniel Pham, our usual engineer,
is traveling in

00:26:33.190 --> 00:26:35.800
London right now and took the
studio laptop with him.

00:26:35.800 --> 00:26:37.010
MALE SPEAKER: No additional
questions.

00:26:37.010 --> 00:26:37.760
TREVOR JOHNS: No additional
questions.

00:26:37.760 --> 00:26:38.690
All right.

00:26:38.690 --> 00:26:41.390
So we'll still be around here
if anybody else is watching

00:26:41.390 --> 00:26:42.800
live and wants to join
us via Hangouts.

00:26:42.800 --> 00:26:45.870
Once again, go to google dot
com slash, er sorry,

00:26:45.870 --> 00:26:48.250
developers dot google
dot come slash live.

00:26:48.250 --> 00:26:50.820
Click on the office hours link
and there's a Join Hangout

00:26:50.820 --> 00:26:52.250
button and we'd love to take
questions on the air.

00:26:52.250 --> 00:26:54.150
And we'll be hanging around
until we run out of questions

00:26:54.150 --> 00:26:55.070
on Moderator.

00:26:55.070 --> 00:26:56.791
So let's jump back
to Moderator.

00:27:01.600 --> 00:27:07.170
So the next question comes from
I think that's is that

00:27:07.170 --> 00:27:09.750
Nick B in Amsterdam.

00:27:09.750 --> 00:27:10.440
You have to forgive me if I'm

00:27:10.440 --> 00:27:12.320
mispronouncing these names here.

00:27:12.320 --> 00:27:16.740
My unpopular question below
slightly restated, since 50%

00:27:16.740 --> 00:27:22.170
of the Android devices run API
10 to Google Stats, I assume

00:27:22.170 --> 00:27:25.090
that means the status we
publish on Developer to

00:27:25.090 --> 00:27:28.195
Internet Com, what does it mean
if you encounter a bug

00:27:28.195 --> 00:27:29.760
like the one I cited below?

00:27:29.760 --> 00:27:31.390
Are those bugs still
being fixed?

00:27:31.390 --> 00:27:33.140
What about version numbers?

00:27:33.140 --> 00:27:36.250
And so going down two questions,
I think the

00:27:36.250 --> 00:27:40.320
question he's referring to, the
binding JavaScript code to

00:27:40.320 --> 00:27:43.380
Android code feature is buggy
on Android version 2.3.

00:27:43.380 --> 00:27:46.180
Will this be fixed?

00:27:46.180 --> 00:27:47.080
That's a good question.

00:27:47.080 --> 00:27:49.020
And I think it's one where
actually there's sometimes

00:27:49.020 --> 00:27:50.370
some confusion about.

00:27:50.370 --> 00:27:54.595
So generally speaking, most of
our development effort does go

00:27:54.595 --> 00:27:56.130
into the latest Android
version.

00:27:56.130 --> 00:27:58.745
So it's very rare for us
to go and fix a bug in

00:27:58.745 --> 00:27:59.620
older Android versions.

00:27:59.620 --> 00:28:02.630
It's usually only if there's
a security issue that we'll

00:28:02.630 --> 00:28:03.950
issue an update.

00:28:03.950 --> 00:28:06.490
Even then, it takes more often
those fixes to propagate to

00:28:06.490 --> 00:28:10.615
devices because OEMs have to go
and create a new OS build

00:28:10.615 --> 00:28:12.790
and have to get certified
by carriers.

00:28:12.790 --> 00:28:18.120
So generally speaking, any bug
fixes that aren't absolutely

00:28:18.120 --> 00:28:20.490
critical, which means they're
not security issues.

00:28:20.490 --> 00:28:23.550
They're only going to be
addressed in the latest

00:28:23.550 --> 00:28:25.260
version of Android.

00:28:25.260 --> 00:28:28.930
So I know that's probably not
what you want to hear and I

00:28:28.930 --> 00:28:29.820
apologize for that.

00:28:29.820 --> 00:28:32.470
But that's sort of the
nature of the way

00:28:32.470 --> 00:28:34.290
Android updates work.

00:28:34.290 --> 00:28:36.670
We really don't have a good
way to go and update those

00:28:36.670 --> 00:28:38.150
older devices reliably.

00:28:38.150 --> 00:28:39.650
ALEX LUCAS: Yeah.

00:28:39.650 --> 00:28:43.950
Another factor is whether it's
a carrier managed device

00:28:43.950 --> 00:28:46.050
versus a Nexus device.

00:28:46.050 --> 00:28:51.990
So even if we did go back and
fix the bug in Gingerbread, it

00:28:51.990 --> 00:28:55.030
could be several months
depending on which carrier or

00:28:55.030 --> 00:28:56.920
which manufacturer or--

00:28:56.920 --> 00:28:58.230
TREVOR JOHNS: That's why I was
saying about apps need go

00:28:58.230 --> 00:28:59.060
[INTERPOSING VOICES]

00:28:59.060 --> 00:29:01.180
It needs to get certified
by the carriers.

00:29:01.180 --> 00:29:04.180
There's a lot of moving parts
unlike application development

00:29:04.180 --> 00:29:06.450
where you just push it to Google
Play and it goes live.

00:29:06.450 --> 00:29:09.860
The timeline from when we make
a change in code to the time

00:29:09.860 --> 00:29:11.520
it can actually get
on a handset is

00:29:11.520 --> 00:29:12.340
actually pretty long.

00:29:12.340 --> 00:29:13.980
There's a lot of certifications
that happen.

00:29:13.980 --> 00:29:18.900
There's a lot of Q&amp;A. You
have to get approvals.

00:29:18.900 --> 00:29:21.300
It's quite a process.

00:29:21.300 --> 00:29:23.900
We try and get devices
out to the devices.

00:29:23.900 --> 00:29:26.970
We manage as quickly
as possible.

00:29:26.970 --> 00:29:30.080
Some OEMs and some carriers are
better than others but in

00:29:30.080 --> 00:29:31.540
general, we do try and
get those updates

00:29:31.540 --> 00:29:32.660
to phones as quickly.

00:29:32.660 --> 00:29:34.720
I think everybody in the
ecosystem tries to get those

00:29:34.720 --> 00:29:36.780
updates out as quickly
as possible.

00:29:36.780 --> 00:29:40.190
But again, the older the phone
is the more difficult it is.

00:29:40.190 --> 00:29:43.880
And at least internally in
Google, of all our efforts

00:29:43.880 --> 00:29:45.170
goes to the latest version.

00:29:45.170 --> 00:29:47.580
Now, I will add one
last thing.

00:29:47.580 --> 00:29:49.900
It is possible to go back
port changes to

00:29:49.900 --> 00:29:51.010
older versions of Android.

00:29:51.010 --> 00:29:53.800
And I have seen that happen in
some cases where a device

00:29:53.800 --> 00:29:55.760
manufacturer knows that they're
not going to be able

00:29:55.760 --> 00:29:57.090
to update a phone.

00:29:57.090 --> 00:29:59.030
Or perhaps, they're spending
their engineering time

00:29:59.030 --> 00:30:00.260
somewhere else or the
phone just simply

00:30:00.260 --> 00:30:01.480
doesn't support it anymore.

00:30:01.480 --> 00:30:04.460
I have seen cases where they'll
go and back port that

00:30:04.460 --> 00:30:07.830
one particular change without
doing a complete OS update.

00:30:07.830 --> 00:30:10.830
So it is possible, but I'd
say it's more rare.

00:30:10.830 --> 00:30:12.610
In order for that to happen
also, it has to be a bug

00:30:12.610 --> 00:30:14.960
that's big enough to actually
get the OEMs attention.

00:30:14.960 --> 00:30:16.010
ALEX LUCAS: Right.

00:30:16.010 --> 00:30:18.640
At that point, it also becomes
confusing as a developer

00:30:18.640 --> 00:30:24.660
because then there's no way to
shoehorn in an SDK version

00:30:24.660 --> 00:30:29.480
between, like in this case, it
would be between 10 and 11.

00:30:29.480 --> 00:30:33.910
The SDK version's an integer so
we can't add a 10.5 for the

00:30:33.910 --> 00:30:37.830
version of Gingerbread that
has this thing fixed.

00:30:37.830 --> 00:30:40.360
And then, if you released your
app assuming that this

00:30:40.360 --> 00:30:43.860
particular bug was fixed,
it would go to--

00:30:43.860 --> 00:30:45.732
if half of the Gingerbread
devices it happened on, and

00:30:45.732 --> 00:30:48.040
half it didn't, you wouldn't
really necessarily be able to

00:30:48.040 --> 00:30:50.750
distinguish between devices
where your code worked and

00:30:50.750 --> 00:30:52.180
devices where it didn't.

00:30:52.180 --> 00:30:54.230
So in the long run it wouldn't
actually probably

00:30:54.230 --> 00:30:55.890
help all that much.

00:30:55.890 --> 00:30:56.850
TREVOR JOHNS: All right.

00:30:56.850 --> 00:30:58.640
So hopefully that answered
your question.

00:30:58.640 --> 00:31:01.360
Let's move on to the last
Moderator question.

00:31:01.360 --> 00:31:06.440
This one comes from J. Dixon in
Perth, Australia, who says

00:31:06.440 --> 00:31:09.080
we support a benevolent
organization who wishes to

00:31:09.080 --> 00:31:12.760
donate in app purchase
content to his

00:31:12.760 --> 00:31:15.430
customers, or their users.

00:31:15.430 --> 00:31:18.740
They wish to pay the purchase
price, however, they can't see

00:31:18.740 --> 00:31:21.290
a way do that in Google Play.

00:31:21.290 --> 00:31:22.920
Is there a way to do this?

00:31:22.920 --> 00:31:25.460
So Alex, do you want
to take this one?

00:31:25.460 --> 00:31:25.680
ALEX LUCAS: Sure.

00:31:25.680 --> 00:31:28.880
So there's no fine grain
solution in terms of

00:31:28.880 --> 00:31:32.840
purchasing specific
apps on the behalf

00:31:32.840 --> 00:31:34.520
of a different account.

00:31:34.520 --> 00:31:38.940
What you can do, however, is
buy a Google Play gift card

00:31:38.940 --> 00:31:40.710
and give those to the users.

00:31:40.710 --> 00:31:44.110
But obviously, this isn't ideal
in that it has a certain

00:31:44.110 --> 00:31:48.990
lack of control in that if
said customers are fourth

00:31:48.990 --> 00:31:51.150
graders or something like that,
there's a chance that

00:31:51.150 --> 00:31:53.430
instead of buying the awesome
Notetaking app, they're going

00:31:53.430 --> 00:31:56.830
to spend it on Angry Birds.

00:31:56.830 --> 00:32:00.390
But it's still an option, and
you can get them, I want to

00:32:00.390 --> 00:32:02.340
say, in increments of
like $20, $25 bucks,

00:32:02.340 --> 00:32:04.750
something like that.

00:32:04.750 --> 00:32:06.300
That's the way I would go.

00:32:06.300 --> 00:32:06.910
TREVOR JOHNS: Yeah.

00:32:06.910 --> 00:32:10.940
So not the best solution but
unfortunately it's the only

00:32:10.940 --> 00:32:12.375
one we have available
right now.

00:32:12.375 --> 00:32:12.840
ALEX LUCAS: Yeah.

00:32:12.840 --> 00:32:14.620
It's the current solution.

00:32:14.620 --> 00:32:17.820
TREVOR JOHNS: All right, so
let's switch back to Hangouts

00:32:17.820 --> 00:32:18.670
one more time.

00:32:18.670 --> 00:32:20.270
If there's any other live
questions we'll go ahead and

00:32:20.270 --> 00:32:21.520
take those now.

00:32:25.060 --> 00:32:28.380
Anybody on live question who
wishes to ask us something?

00:32:28.380 --> 00:32:29.670
I see three people there.

00:32:29.670 --> 00:32:31.100
MALE SPEAKER: There's
one question.

00:32:31.100 --> 00:32:34.210
TREVOR JOHNS: OK, so there's a
text question from David Cox.

00:32:34.210 --> 00:32:36.910
It was a little unclear from the
video, but is it possible

00:32:36.910 --> 00:32:40.240
to use NSD and query
services over Wi-Fi

00:32:40.240 --> 00:32:42.030
Direct at the same time?

00:32:42.030 --> 00:32:44.220
So yeah, that's entirely
possible.

00:32:44.220 --> 00:32:49.390
NSD will work over any TCP
connection and Wi-Fi Direct is

00:32:49.390 --> 00:32:50.670
a TCP connection.

00:32:50.670 --> 00:32:54.000
So normally, what you do is
you'd use, actually they work

00:32:54.000 --> 00:32:56.690
pretty well together for that
regroup because of the nature

00:32:56.690 --> 00:32:57.520
of Wi-Fi Direct.

00:32:57.520 --> 00:33:00.560
But Wi-Fi Direct has an
implementation of NSD

00:33:00.560 --> 00:33:02.160
Essentially, that it broadcasts
this service

00:33:02.160 --> 00:33:07.070
information as part of the
Wi-Fi discovery need.

00:33:07.070 --> 00:33:07.270
Right?

00:33:07.270 --> 00:33:08.290
Before you're even connected.

00:33:08.290 --> 00:33:09.910
ALEX LUCAS: We do get
into a bit of

00:33:09.910 --> 00:33:11.220
buzzword collision here.

00:33:11.220 --> 00:33:14.820
There's a bit of confusion in
that there's no work service

00:33:14.820 --> 00:33:16.690
discovery that works
over a network.

00:33:16.690 --> 00:33:19.470
It's find everything that's on
the same network as you are.

00:33:19.470 --> 00:33:22.800
Separately from that, there's
service discovery over Wi-Fi

00:33:22.800 --> 00:33:25.130
Direct, which is find stuff
when you're not

00:33:25.130 --> 00:33:26.680
connected to a network.

00:33:26.680 --> 00:33:31.930
Now, when NSD comes into play is
if you use Wi-Fi Direct and

00:33:31.930 --> 00:33:36.610
you then connect to a network or
use Wi-Fi Direct to create

00:33:36.610 --> 00:33:41.150
an ad hoc network between a
bunch of different devices.

00:33:41.150 --> 00:33:44.210
At that point, NSD, Network
Service Discovery, comes into

00:33:44.210 --> 00:33:46.270
effect because there's a network
for it to work on.

00:33:46.270 --> 00:33:46.690
TREVOR JOHNS: Right.

00:33:46.690 --> 00:33:49.650
So Wi-Fi Direct will help you
find other devices in

00:33:49.650 --> 00:33:54.010
proximity that could say
they support your app.

00:33:54.010 --> 00:33:56.400
They'll connect to them via
Wi-Fi Direct and then you'll

00:33:56.400 --> 00:33:59.660
use NSD, the proper NSD that we
addressed at the beginning

00:33:59.660 --> 00:34:02.630
of the video, to go and find
everything once you're

00:34:02.630 --> 00:34:05.290
connected, which also will work
outside of Wi-Fi Direct.

00:34:05.290 --> 00:34:07.420
If you're on a normal, regular
Wi-Fi network you'd

00:34:07.420 --> 00:34:09.889
use the same NSD.

00:34:09.889 --> 00:34:12.139
So hopefully that answered
your question.

00:34:12.139 --> 00:34:14.520
So if you have any more
questions about

00:34:14.520 --> 00:34:16.139
that, just let us know.

00:34:16.139 --> 00:34:17.420
Next question from Terrance
[INAUDIBLE]

00:34:17.420 --> 00:34:19.820
says, is there any way to query
information about the

00:34:19.820 --> 00:34:22.845
LTE cell tower the device
is connected to?

00:34:22.845 --> 00:34:25.820
So things like MCC, MNC, etc.

00:34:25.820 --> 00:34:27.100
We actually answered
this earlier.

00:34:27.100 --> 00:34:30.389
I don't know if you missed
the answer or not.

00:34:30.389 --> 00:34:33.699
Unless you want to know the
specific cell tower.

00:34:33.699 --> 00:34:34.679
The answer is yes.

00:34:34.679 --> 00:34:36.400
All that should be
contained in the

00:34:36.400 --> 00:34:38.088
telephony manager class.

00:34:38.088 --> 00:34:40.460
Unfortunately, I can't tell you
the exact method names off

00:34:40.460 --> 00:34:41.570
the top of my head.

00:34:41.570 --> 00:34:43.449
But there is a way to go and get
a list of the cell towers

00:34:43.449 --> 00:34:44.320
there in range.

00:34:44.320 --> 00:34:47.370
There's a way to go and query
the active cell tower.

00:34:47.370 --> 00:34:52.280
I will say, the MCC and MNC
are not typically--

00:34:52.280 --> 00:34:52.659
actually no.

00:34:52.659 --> 00:34:53.109
Excuse me.

00:34:53.109 --> 00:34:54.460
There's actually properties
in cell towers.

00:34:54.460 --> 00:34:55.330
What am I thinking?

00:34:55.330 --> 00:34:57.630
But they're also properties of
the Sim Card so you have to

00:34:57.630 --> 00:34:58.480
watch out for that too.

00:34:58.480 --> 00:34:59.570
ALEX LUCAS: I'm really impressed
you know all of this

00:34:59.570 --> 00:35:01.260
off the top of your head.

00:35:01.260 --> 00:35:03.360
TREVOR JOHNS: But there's ways
to go and query all of that.

00:35:03.360 --> 00:35:05.510
You can get it for this current
SIM card, you can get

00:35:05.510 --> 00:35:06.940
for the current tower.

00:35:06.940 --> 00:35:08.770
All of that should be contained
inside the telephony

00:35:08.770 --> 00:35:09.410
manager class.

00:35:09.410 --> 00:35:11.780
If you dig around in there
you'll find all the data

00:35:11.780 --> 00:35:14.570
you're looking for.

00:35:14.570 --> 00:35:18.270
Any other live questions either
via chat or via if you

00:35:18.270 --> 00:35:23.050
have a webcam and microphone
you can hop on live to?

00:35:23.050 --> 00:35:26.890
I'm taking the silence as a lack
of questions so at this

00:35:26.890 --> 00:35:30.130
point I'm going to say that's
it for this week.

00:35:30.130 --> 00:35:32.395
If you do have, actually
I'll add one last

00:35:32.395 --> 00:35:33.740
thing before we close.

00:35:33.740 --> 00:35:35.870
Let us know what you thought
about the new format earlier,

00:35:35.870 --> 00:35:37.600
The Dear Android Show.

00:35:37.600 --> 00:35:40.800
I think it worked pretty well,
but of course we care a lot

00:35:40.800 --> 00:35:42.300
about what our viewers
think too.

00:35:42.300 --> 00:35:45.200
So if you thought you
liked us, let us

00:35:45.200 --> 00:35:46.190
know in YouTube comments.

00:35:46.190 --> 00:35:48.610
If you hated it let us know
in the YouTube comments.

00:35:48.610 --> 00:35:51.290
And assuming people like it,
I think we might keep doing

00:35:51.290 --> 00:35:52.700
something like that
in the future.

00:35:52.700 --> 00:35:55.260
ALEX LUCAS: And if they hate it
we just assume because it's

00:35:55.260 --> 00:35:56.920
YouTube comments.

00:35:56.920 --> 00:35:57.510
TREVOR JOHNS: It's true.

00:35:57.510 --> 00:35:57.830
It's true.

00:35:57.830 --> 00:35:58.530
ALEX LUCAS: And then we'll
keep on doing it anyway.

00:35:58.530 --> 00:35:59.780
TREVOR JOHNS: YouTube comments
are a bit painful.

00:36:02.030 --> 00:36:03.915
Anyway, it was awesome
chatting with

00:36:03.915 --> 00:36:05.590
you all this week.

00:36:05.590 --> 00:36:09.680
Be sure to send in your Android
development questions

00:36:09.680 --> 00:36:13.730
either via Moderator or also
just go ahead and plus us on

00:36:13.730 --> 00:36:15.300
Android Developers too.

00:36:15.300 --> 00:36:17.340
We'll be taking a look over the
next couple of days for

00:36:17.340 --> 00:36:19.200
the next question to
answer for the next

00:36:19.200 --> 00:36:20.490
Dear Android segment.

00:36:20.490 --> 00:36:23.840
We'll pick the best ones, and
we'll join you again next

00:36:23.840 --> 00:36:27.060
week, Wednesday, 2 PM Pacific.

00:36:27.060 --> 00:36:30.800
And one last thing, thanks to
Lewis Gray who is our producer

00:36:30.800 --> 00:36:33.530
this week for valiantly stepping
in and keeping the

00:36:33.530 --> 00:36:34.050
show running.

00:36:34.050 --> 00:36:36.560
So thank you so much.

00:36:36.560 --> 00:36:37.810
See you all next week.

