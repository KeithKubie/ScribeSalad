WEBVTT
Kind: captions
Language: en

00:00:01.500 --> 00:00:05.050 align:start position:0%
 
[Music]

00:00:05.050 --> 00:00:05.060 align:start position:0%
[Music]
 

00:00:05.060 --> 00:00:08.059 align:start position:0%
[Music]
hello<00:00:06.060><c> everyone</c><00:00:06.450><c> welcome</c><00:00:07.350><c> to</c><00:00:07.589><c> this</c><00:00:07.680><c> morning's</c>

00:00:08.059 --> 00:00:08.069 align:start position:0%
hello everyone welcome to this morning's
 

00:00:08.069 --> 00:00:10.009 align:start position:0%
hello everyone welcome to this morning's
session<00:00:08.280><c> on</c><00:00:08.639><c> test-driven</c><00:00:09.269><c> development</c><00:00:09.510><c> for</c>

00:00:10.009 --> 00:00:10.019 align:start position:0%
session on test-driven development for
 

00:00:10.019 --> 00:00:12.320 align:start position:0%
session on test-driven development for
the<00:00:10.080><c> Android</c><00:00:10.410><c> platform</c><00:00:10.670><c> my</c><00:00:11.670><c> name</c><00:00:11.849><c> is</c><00:00:11.940><c> Jonathan</c>

00:00:12.320 --> 00:00:12.330 align:start position:0%
the Android platform my name is Jonathan
 

00:00:12.330 --> 00:00:14.799 align:start position:0%
the Android platform my name is Jonathan
garish<00:00:12.630><c> and</c><00:00:12.809><c> I'm</c><00:00:13.049><c> part</c><00:00:13.320><c> of</c><00:00:13.440><c> the</c><00:00:13.559><c> mobile</c><00:00:13.710><c> ninjas</c>

00:00:14.799 --> 00:00:14.809 align:start position:0%
garish and I'm part of the mobile ninjas
 

00:00:14.809 --> 00:00:17.180 align:start position:0%
garish and I'm part of the mobile ninjas
we're<00:00:15.809><c> a</c><00:00:15.839><c> small</c><00:00:16.080><c> team</c><00:00:16.289><c> within</c><00:00:16.529><c> Google</c><00:00:16.949><c> who</c><00:00:17.070><c> are</c>

00:00:17.180 --> 00:00:17.190 align:start position:0%
we're a small team within Google who are
 

00:00:17.190 --> 00:00:19.240 align:start position:0%
we're a small team within Google who are
passionate<00:00:17.640><c> about</c><00:00:17.670><c> software</c><00:00:18.449><c> testing</c><00:00:18.480><c> and</c>

00:00:19.240 --> 00:00:19.250 align:start position:0%
passionate about software testing and
 

00:00:19.250 --> 00:00:21.560 align:start position:0%
passionate about software testing and
can<00:00:20.250><c> I</c><00:00:20.279><c> get</c><00:00:20.430><c> a</c><00:00:20.460><c> quick</c><00:00:20.670><c> show</c><00:00:20.850><c> of</c><00:00:20.970><c> hands</c><00:00:21.180><c> in</c><00:00:21.480><c> the</c>

00:00:21.560 --> 00:00:21.570 align:start position:0%
can I get a quick show of hands in the
 

00:00:21.570 --> 00:00:22.790 align:start position:0%
can I get a quick show of hands in the
audience<00:00:21.869><c> how</c><00:00:22.170><c> many</c><00:00:22.350><c> of</c><00:00:22.439><c> you</c><00:00:22.590><c> are</c><00:00:22.680><c> actually</c>

00:00:22.790 --> 00:00:22.800 align:start position:0%
audience how many of you are actually
 

00:00:22.800 --> 00:00:24.529 align:start position:0%
audience how many of you are actually
writing<00:00:23.189><c> tests</c><00:00:23.550><c> as</c><00:00:23.730><c> part</c><00:00:23.760><c> of</c><00:00:24.029><c> your</c><00:00:24.150><c> normal</c>

00:00:24.529 --> 00:00:24.539 align:start position:0%
writing tests as part of your normal
 

00:00:24.539 --> 00:00:26.570 align:start position:0%
writing tests as part of your normal
software<00:00:24.720><c> development</c><00:00:25.289><c> practice</c><00:00:25.740><c> that's</c>

00:00:26.570 --> 00:00:26.580 align:start position:0%
software development practice that's
 

00:00:26.580 --> 00:00:27.670 align:start position:0%
software development practice that's
fantastic

00:00:27.670 --> 00:00:27.680 align:start position:0%
fantastic
 

00:00:27.680 --> 00:00:31.880 align:start position:0%
fantastic
okay<00:00:29.929><c> so</c><00:00:30.929><c> if</c><00:00:31.019><c> you've</c><00:00:31.140><c> written</c><00:00:31.289><c> tests</c><00:00:31.650><c> for</c>

00:00:31.880 --> 00:00:31.890 align:start position:0%
okay so if you've written tests for
 

00:00:31.890 --> 00:00:33.950 align:start position:0%
okay so if you've written tests for
Android<00:00:32.219><c> before</c><00:00:32.610><c> you</c><00:00:32.850><c> probably</c><00:00:33.360><c> use</c><00:00:33.570><c> some</c><00:00:33.840><c> of</c>

00:00:33.950 --> 00:00:33.960 align:start position:0%
Android before you probably use some of
 

00:00:33.960 --> 00:00:36.729 align:start position:0%
Android before you probably use some of
our<00:00:34.110><c> tools</c><00:00:34.489><c> we</c><00:00:35.489><c> developed</c><00:00:35.940><c> the</c><00:00:36.059><c> Android</c>

00:00:36.729 --> 00:00:36.739 align:start position:0%
our tools we developed the Android
 

00:00:36.739 --> 00:00:38.840 align:start position:0%
our tools we developed the Android
testing<00:00:37.739><c> support</c><00:00:38.070><c> library</c><00:00:38.550><c> which</c><00:00:38.700><c> includes</c>

00:00:38.840 --> 00:00:38.850 align:start position:0%
testing support library which includes
 

00:00:38.850 --> 00:00:41.119 align:start position:0%
testing support library which includes
the<00:00:39.270><c> J</c><00:00:39.450><c> unit</c><00:00:39.780><c> for</c><00:00:40.020><c> test</c><00:00:40.350><c> run</c><00:00:40.559><c> own</c><00:00:40.680><c> rules</c>

00:00:41.119 --> 00:00:41.129 align:start position:0%
the J unit for test run own rules
 

00:00:41.129 --> 00:00:44.000 align:start position:0%
the J unit for test run own rules
the<00:00:41.700><c> espresso</c><00:00:41.969><c> UI</c><00:00:42.660><c> testing</c><00:00:43.320><c> framework</c><00:00:43.800><c> and</c>

00:00:44.000 --> 00:00:44.010 align:start position:0%
the espresso UI testing framework and
 

00:00:44.010 --> 00:00:46.010 align:start position:0%
the espresso UI testing framework and
were<00:00:44.430><c> also</c><00:00:44.760><c> active</c><00:00:45.149><c> contributors</c><00:00:45.840><c> to</c>

00:00:46.010 --> 00:00:46.020 align:start position:0%
were also active contributors to
 

00:00:46.020 --> 00:00:48.229 align:start position:0%
were also active contributors to
robolectric<00:00:46.440><c> the</c><00:00:46.890><c> open-source</c><00:00:47.430><c> Android</c><00:00:47.820><c> unit</c>

00:00:48.229 --> 00:00:48.239 align:start position:0%
robolectric the open-source Android unit
 

00:00:48.239 --> 00:00:52.220 align:start position:0%
robolectric the open-source Android unit
testing<00:00:48.570><c> framework</c><00:00:50.719><c> so</c><00:00:51.719><c> everyone's</c><00:00:52.020><c> telling</c>

00:00:52.220 --> 00:00:52.230 align:start position:0%
testing framework so everyone's telling
 

00:00:52.230 --> 00:00:54.020 align:start position:0%
testing framework so everyone's telling
you<00:00:52.379><c> to</c><00:00:52.469><c> write</c><00:00:52.649><c> tests</c><00:00:52.980><c> but</c><00:00:53.340><c> why</c><00:00:53.640><c> should</c><00:00:53.910><c> you</c>

00:00:54.020 --> 00:00:54.030 align:start position:0%
you to write tests but why should you
 

00:00:54.030 --> 00:00:56.420 align:start position:0%
you to write tests but why should you
really<00:00:54.210><c> do</c><00:00:54.480><c> it</c><00:00:54.629><c> it's</c><00:00:55.350><c> true</c><00:00:55.710><c> that</c><00:00:55.920><c> tests</c><00:00:56.190><c> take</c>

00:00:56.420 --> 00:00:56.430 align:start position:0%
really do it it's true that tests take
 

00:00:56.430 --> 00:00:58.580 align:start position:0%
really do it it's true that tests take
time<00:00:56.640><c> to</c><00:00:56.820><c> write</c><00:00:57.020><c> they're</c><00:00:58.020><c> adding</c><00:00:58.260><c> code</c><00:00:58.469><c> to</c>

00:00:58.580 --> 00:00:58.590 align:start position:0%
time to write they're adding code to
 

00:00:58.590 --> 00:01:00.439 align:start position:0%
time to write they're adding code to
your<00:00:58.680><c> codebase</c><00:00:59.100><c> and</c><00:00:59.399><c> perhaps</c><00:00:59.879><c> you've</c><00:01:00.210><c> been</c><00:01:00.329><c> in</c>

00:01:00.439 --> 00:01:00.449 align:start position:0%
your codebase and perhaps you've been in
 

00:01:00.449 --> 00:01:02.330 align:start position:0%
your codebase and perhaps you've been in
a<00:01:00.510><c> situation</c><00:01:00.750><c> before</c><00:01:01.230><c> where</c><00:01:01.680><c> your</c><00:01:01.859><c> manager</c><00:01:02.309><c> or</c>

00:01:02.330 --> 00:01:02.340 align:start position:0%
a situation before where your manager or
 

00:01:02.340 --> 00:01:04.640 align:start position:0%
a situation before where your manager or
client<00:01:02.910><c> has</c><00:01:03.090><c> been</c><00:01:03.329><c> telling</c><00:01:04.260><c> you</c><00:01:04.350><c> that</c><00:01:04.379><c> they're</c>

00:01:04.640 --> 00:01:04.650 align:start position:0%
client has been telling you that they're
 

00:01:04.650 --> 00:01:05.410 align:start position:0%
client has been telling you that they're
slowing<00:01:04.890><c> you</c><00:01:05.040><c> down</c>

00:01:05.410 --> 00:01:05.420 align:start position:0%
slowing you down
 

00:01:05.420 --> 00:01:07.969 align:start position:0%
slowing you down
but<00:01:06.420><c> there's</c><00:01:06.570><c> so</c><00:01:06.780><c> many</c><00:01:06.960><c> compelling</c><00:01:07.439><c> reasons</c>

00:01:07.969 --> 00:01:07.979 align:start position:0%
but there's so many compelling reasons
 

00:01:07.979 --> 00:01:10.910 align:start position:0%
but there's so many compelling reasons
to<00:01:08.040><c> write</c><00:01:08.340><c> tests</c><00:01:08.880><c> tests</c><00:01:09.780><c> give</c><00:01:09.960><c> you</c><00:01:10.140><c> rapid</c>

00:01:10.910 --> 00:01:10.920 align:start position:0%
to write tests tests give you rapid
 

00:01:10.920 --> 00:01:14.179 align:start position:0%
to write tests tests give you rapid
feedback<00:01:11.130><c> on</c><00:01:11.549><c> failures</c><00:01:12.030><c> so</c><00:01:13.010><c> failures</c><00:01:14.010><c> that</c>

00:01:14.179 --> 00:01:14.189 align:start position:0%
feedback on failures so failures that
 

00:01:14.189 --> 00:01:15.620 align:start position:0%
feedback on failures so failures that
are<00:01:14.340><c> spotted</c><00:01:14.939><c> earlier</c><00:01:15.330><c> on</c><00:01:15.450><c> in</c><00:01:15.570><c> the</c>

00:01:15.620 --> 00:01:15.630 align:start position:0%
are spotted earlier on in the
 

00:01:15.630 --> 00:01:17.780 align:start position:0%
are spotted earlier on in the
development<00:01:16.080><c> cycle</c><00:01:16.320><c> a</c><00:01:16.710><c> far</c><00:01:17.009><c> easier</c><00:01:17.220><c> to</c><00:01:17.430><c> fix</c>

00:01:17.780 --> 00:01:17.790 align:start position:0%
development cycle a far easier to fix
 

00:01:17.790 --> 00:01:20.749 align:start position:0%
development cycle a far easier to fix
than<00:01:17.939><c> once</c><00:01:18.240><c> they've</c><00:01:18.450><c> gone</c><00:01:18.570><c> live</c><00:01:19.759><c> secondly</c>

00:01:20.749 --> 00:01:20.759 align:start position:0%
than once they've gone live secondly
 

00:01:20.759 --> 00:01:23.780 align:start position:0%
than once they've gone live secondly
tests<00:01:21.570><c> give</c><00:01:21.780><c> you</c><00:01:21.930><c> a</c><00:01:21.960><c> safety</c><00:01:22.619><c> net</c><00:01:22.740><c> you're</c><00:01:23.520><c> free</c>

00:01:23.780 --> 00:01:23.790 align:start position:0%
tests give you a safety net you're free
 

00:01:23.790 --> 00:01:25.520 align:start position:0%
tests give you a safety net you're free
with<00:01:24.180><c> a</c><00:01:24.210><c> good</c><00:01:24.450><c> suite</c><00:01:24.659><c> of</c><00:01:24.780><c> tests</c><00:01:25.080><c> you're</c><00:01:25.290><c> free</c>

00:01:25.520 --> 00:01:25.530 align:start position:0%
with a good suite of tests you're free
 

00:01:25.530 --> 00:01:27.950 align:start position:0%
with a good suite of tests you're free
to<00:01:25.799><c> refactor</c><00:01:26.729><c> clean</c><00:01:27.270><c> up</c><00:01:27.420><c> and</c><00:01:27.570><c> optimize</c><00:01:27.930><c> your</c>

00:01:27.950 --> 00:01:27.960 align:start position:0%
to refactor clean up and optimize your
 

00:01:27.960 --> 00:01:29.719 align:start position:0%
to refactor clean up and optimize your
code<00:01:28.350><c> safe</c><00:01:28.799><c> in</c><00:01:28.979><c> the</c><00:01:29.070><c> knowledge</c><00:01:29.189><c> that</c><00:01:29.430><c> you're</c>

00:01:29.719 --> 00:01:29.729 align:start position:0%
code safe in the knowledge that you're
 

00:01:29.729 --> 00:01:32.080 align:start position:0%
code safe in the knowledge that you're
not<00:01:29.880><c> going</c><00:01:30.000><c> to</c><00:01:30.090><c> break</c><00:01:30.240><c> existing</c><00:01:30.900><c> behavior</c>

00:01:32.080 --> 00:01:32.090 align:start position:0%
not going to break existing behavior
 

00:01:32.090 --> 00:01:34.219 align:start position:0%
not going to break existing behavior
tests<00:01:33.090><c> are</c><00:01:33.240><c> really</c><00:01:33.479><c> the</c><00:01:33.720><c> backbone</c><00:01:33.960><c> of</c>

00:01:34.219 --> 00:01:34.229 align:start position:0%
tests are really the backbone of
 

00:01:34.229 --> 00:01:36.710 align:start position:0%
tests are really the backbone of
sustainable<00:01:35.040><c> software</c><00:01:35.460><c> development</c><00:01:36.030><c> you'll</c>

00:01:36.710 --> 00:01:36.720 align:start position:0%
sustainable software development you'll
 

00:01:36.720 --> 00:01:38.510 align:start position:0%
sustainable software development you'll
be<00:01:36.810><c> able</c><00:01:36.900><c> to</c><00:01:37.049><c> maintain</c><00:01:37.170><c> a</c><00:01:37.619><c> stable</c><00:01:37.920><c> velocity</c>

00:01:38.510 --> 00:01:38.520 align:start position:0%
be able to maintain a stable velocity
 

00:01:38.520 --> 00:01:40.280 align:start position:0%
be able to maintain a stable velocity
throughout<00:01:38.880><c> the</c><00:01:39.000><c> lifetime</c><00:01:39.210><c> of</c><00:01:39.659><c> your</c><00:01:39.780><c> project</c>

00:01:40.280 --> 00:01:40.290 align:start position:0%
throughout the lifetime of your project
 

00:01:40.290 --> 00:01:42.289 align:start position:0%
throughout the lifetime of your project
and<00:01:40.560><c> you're</c><00:01:41.159><c> going</c><00:01:41.280><c> to</c><00:01:41.310><c> avoid</c><00:01:41.549><c> the</c><00:01:41.729><c> boom-bust</c>

00:01:42.289 --> 00:01:42.299 align:start position:0%
and you're going to avoid the boom-bust
 

00:01:42.299 --> 00:01:46.609 align:start position:0%
and you're going to avoid the boom-bust
cycles<00:01:42.899><c> of</c><00:01:43.729><c> crunch</c><00:01:44.729><c> feature</c><00:01:45.060><c> time</c><00:01:45.479><c> and</c><00:01:45.810><c> the</c>

00:01:46.609 --> 00:01:46.619 align:start position:0%
cycles of crunch feature time and the
 

00:01:46.619 --> 00:01:51.469 align:start position:0%
cycles of crunch feature time and the
aggregation<00:01:47.009><c> of</c><00:01:47.250><c> technical</c><00:01:47.729><c> debt</c><00:01:50.180><c> so</c><00:01:51.180><c> in</c>

00:01:51.469 --> 00:01:51.479 align:start position:0%
aggregation of technical debt so in
 

00:01:51.479 --> 00:01:53.660 align:start position:0%
aggregation of technical debt so in
software<00:01:52.009><c> testing</c><00:01:53.009><c> there</c><00:01:53.280><c> exists</c><00:01:53.549><c> the</c>

00:01:53.660 --> 00:01:53.670 align:start position:0%
software testing there exists the
 

00:01:53.670 --> 00:01:55.310 align:start position:0%
software testing there exists the
concept<00:01:54.119><c> of</c><00:01:54.270><c> the</c><00:01:54.360><c> pyramid</c><00:01:54.780><c> the</c><00:01:54.960><c> testing</c>

00:01:55.310 --> 00:01:55.320 align:start position:0%
concept of the pyramid the testing
 

00:01:55.320 --> 00:01:57.319 align:start position:0%
concept of the pyramid the testing
pyramid<00:01:55.740><c> and</c><00:01:55.920><c> this</c><00:01:56.399><c> is</c><00:01:56.520><c> made</c><00:01:56.729><c> up</c><00:01:56.880><c> of</c><00:01:57.060><c> a</c><00:01:57.180><c> number</c>

00:01:57.319 --> 00:01:57.329 align:start position:0%
pyramid and this is made up of a number
 

00:01:57.329 --> 00:01:59.810 align:start position:0%
pyramid and this is made up of a number
of<00:01:57.509><c> layers</c><00:01:57.810><c> and</c><00:01:58.049><c> each</c><00:01:58.560><c> layer</c><00:01:58.619><c> brings</c><00:01:59.340><c> with</c><00:01:59.670><c> it</c>

00:01:59.810 --> 00:01:59.820 align:start position:0%
of layers and each layer brings with it
 

00:01:59.820 --> 00:02:01.399 align:start position:0%
of layers and each layer brings with it
its<00:01:59.939><c> own</c><00:02:00.119><c> trade-offs</c><00:02:00.780><c> that</c><00:02:01.020><c> you're</c><00:02:01.200><c> going</c><00:02:01.350><c> to</c>

00:02:01.399 --> 00:02:01.409 align:start position:0%
its own trade-offs that you're going to
 

00:02:01.409 --> 00:02:05.780 align:start position:0%
its own trade-offs that you're going to
have<00:02:01.530><c> to</c><00:02:01.680><c> weigh</c><00:02:03.649><c> at</c><00:02:04.649><c> the</c><00:02:04.799><c> lowest</c><00:02:05.040><c> layer</c><00:02:05.250><c> is</c><00:02:05.640><c> the</c>

00:02:05.780 --> 00:02:05.790 align:start position:0%
have to weigh at the lowest layer is the
 

00:02:05.790 --> 00:02:08.660 align:start position:0%
have to weigh at the lowest layer is the
small<00:02:06.030><c> tests</c><00:02:06.509><c> or</c><00:02:06.689><c> the</c><00:02:07.229><c> unit</c><00:02:07.590><c> tests</c><00:02:07.979><c> and</c><00:02:08.190><c> these</c>

00:02:08.660 --> 00:02:08.670 align:start position:0%
small tests or the unit tests and these
 

00:02:08.670 --> 00:02:10.609 align:start position:0%
small tests or the unit tests and these
need<00:02:08.910><c> to</c><00:02:09.000><c> be</c><00:02:09.090><c> very</c><00:02:09.390><c> fast</c><00:02:09.690><c> and</c><00:02:10.080><c> highly</c><00:02:10.289><c> focused</c>

00:02:10.609 --> 00:02:10.619 align:start position:0%
need to be very fast and highly focused
 

00:02:10.619 --> 00:02:12.800 align:start position:0%
need to be very fast and highly focused
that's<00:02:11.610><c> why</c><00:02:11.760><c> we</c><00:02:11.910><c> recommended</c><00:02:12.510><c> you</c>

00:02:12.800 --> 00:02:12.810 align:start position:0%
that's why we recommended you
 

00:02:12.810 --> 00:02:14.600 align:start position:0%
that's why we recommended you
these<00:02:13.050><c> kind</c><00:02:13.349><c> of</c><00:02:13.470><c> tests</c><00:02:13.920><c> is</c><00:02:14.099><c> what</c><00:02:14.250><c> is</c><00:02:14.370><c> known</c><00:02:14.550><c> as</c>

00:02:14.600 --> 00:02:14.610 align:start position:0%
these kind of tests is what is known as
 

00:02:14.610 --> 00:02:16.940 align:start position:0%
these kind of tests is what is known as
local<00:02:15.120><c> unit</c><00:02:15.750><c> tests</c><00:02:16.170><c> and</c><00:02:16.319><c> these</c><00:02:16.650><c> are</c><00:02:16.770><c> going</c><00:02:16.890><c> to</c>

00:02:16.940 --> 00:02:16.950 align:start position:0%
local unit tests and these are going to
 

00:02:16.950 --> 00:02:19.210 align:start position:0%
local unit tests and these are going to
run<00:02:17.099><c> on</c><00:02:17.190><c> your</c><00:02:17.220><c> local</c><00:02:17.670><c> desktop</c><00:02:17.849><c> machine</c><00:02:18.569><c> and</c>

00:02:19.210 --> 00:02:19.220 align:start position:0%
run on your local desktop machine and
 

00:02:19.220 --> 00:02:21.350 align:start position:0%
run on your local desktop machine and
the<00:02:20.220><c> trade-off</c><00:02:20.640><c> you're</c><00:02:20.880><c> making</c><00:02:21.120><c> with</c><00:02:21.239><c> these</c>

00:02:21.350 --> 00:02:21.360 align:start position:0%
the trade-off you're making with these
 

00:02:21.360 --> 00:02:23.990 align:start position:0%
the trade-off you're making with these
kind<00:02:21.660><c> of</c><00:02:21.720><c> tests</c><00:02:22.170><c> is</c><00:02:22.349><c> infidelity</c><00:02:23.190><c> because</c>

00:02:23.990 --> 00:02:24.000 align:start position:0%
kind of tests is infidelity because
 

00:02:24.000 --> 00:02:25.190 align:start position:0%
kind of tests is infidelity because
you're<00:02:24.270><c> not</c><00:02:24.390><c> running</c><00:02:24.690><c> on</c><00:02:24.750><c> a</c><00:02:24.810><c> realistic</c>

00:02:25.190 --> 00:02:25.200 align:start position:0%
you're not running on a realistic
 

00:02:25.200 --> 00:02:26.690 align:start position:0%
you're not running on a realistic
environment<00:02:26.010><c> and</c><00:02:26.160><c> you're</c><00:02:26.489><c> probably</c>

00:02:26.690 --> 00:02:26.700 align:start position:0%
environment and you're probably
 

00:02:26.700 --> 00:02:28.940 align:start position:0%
environment and you're probably
substituting<00:02:27.599><c> in</c><00:02:27.750><c> a</c><00:02:27.900><c> bunch</c><00:02:28.380><c> of</c><00:02:28.590><c> marks</c><00:02:28.860><c> and</c>

00:02:28.940 --> 00:02:28.950 align:start position:0%
substituting in a bunch of marks and
 

00:02:28.950 --> 00:02:34.130 align:start position:0%
substituting in a bunch of marks and
fakes<00:02:30.019><c> as</c><00:02:32.150><c> we</c><00:02:33.150><c> move</c><00:02:33.300><c> up</c><00:02:33.420><c> the</c><00:02:33.569><c> pyramid</c><00:02:33.750><c> we're</c>

00:02:34.130 --> 00:02:34.140 align:start position:0%
fakes as we move up the pyramid we're
 

00:02:34.140 --> 00:02:35.479 align:start position:0%
fakes as we move up the pyramid we're
now<00:02:34.260><c> into</c><00:02:34.500><c> the</c><00:02:34.590><c> realms</c><00:02:34.860><c> of</c><00:02:34.920><c> integration</c>

00:02:35.479 --> 00:02:35.489 align:start position:0%
now into the realms of integration
 

00:02:35.489 --> 00:02:37.640 align:start position:0%
now into the realms of integration
testing<00:02:35.849><c> and</c><00:02:35.970><c> end-to-end</c><00:02:36.300><c> testing</c><00:02:36.870><c> and</c><00:02:37.050><c> the</c>

00:02:37.640 --> 00:02:37.650 align:start position:0%
testing and end-to-end testing and the
 

00:02:37.650 --> 00:02:39.470 align:start position:0%
testing and end-to-end testing and the
key<00:02:37.830><c> with</c><00:02:37.980><c> these</c><00:02:38.099><c> kind</c><00:02:38.370><c> of</c><00:02:38.459><c> tests</c><00:02:38.819><c> is</c><00:02:38.940><c> to</c><00:02:39.000><c> bring</c>

00:02:39.470 --> 00:02:39.480 align:start position:0%
key with these kind of tests is to bring
 

00:02:39.480 --> 00:02:42.170 align:start position:0%
key with these kind of tests is to bring
in<00:02:39.630><c> fidelity</c><00:02:40.220><c> that's</c><00:02:41.220><c> why</c><00:02:41.430><c> we</c><00:02:41.580><c> recommend</c><00:02:41.760><c> that</c>

00:02:42.170 --> 00:02:42.180 align:start position:0%
in fidelity that's why we recommend that
 

00:02:42.180 --> 00:02:44.030 align:start position:0%
in fidelity that's why we recommend that
you<00:02:42.300><c> run</c><00:02:42.480><c> these</c><00:02:42.720><c> kind</c><00:02:42.959><c> of</c><00:02:43.110><c> tests</c><00:02:43.470><c> on</c><00:02:43.620><c> a</c><00:02:43.650><c> real</c>

00:02:44.030 --> 00:02:44.040 align:start position:0%
you run these kind of tests on a real
 

00:02:44.040 --> 00:02:47.330 align:start position:0%
you run these kind of tests on a real
device<00:02:44.220><c> or</c><00:02:44.700><c> an</c><00:02:45.000><c> emulator</c><00:02:45.860><c> these</c><00:02:46.860><c> are</c><00:02:47.040><c> the</c><00:02:47.130><c> kind</c>

00:02:47.330 --> 00:02:47.340 align:start position:0%
device or an emulator these are the kind
 

00:02:47.340 --> 00:02:48.920 align:start position:0%
device or an emulator these are the kind
of<00:02:47.430><c> tests</c><00:02:47.880><c> that</c><00:02:47.910><c> are</c><00:02:48.060><c> going</c><00:02:48.180><c> to</c><00:02:48.269><c> tell</c><00:02:48.450><c> you</c><00:02:48.630><c> that</c>

00:02:48.920 --> 00:02:48.930 align:start position:0%
of tests that are going to tell you that
 

00:02:48.930 --> 00:02:51.009 align:start position:0%
of tests that are going to tell you that
your<00:02:49.080><c> software</c><00:02:49.590><c> actually</c><00:02:49.920><c> works</c>

00:02:51.009 --> 00:02:51.019 align:start position:0%
your software actually works
 

00:02:51.019 --> 00:02:54.020 align:start position:0%
your software actually works
however<00:02:52.019><c> they</c><00:02:52.560><c> are</c><00:02:52.590><c> less</c><00:02:52.920><c> focused</c><00:02:53.130><c> so</c><00:02:53.760><c> a</c>

00:02:54.020 --> 00:02:54.030 align:start position:0%
however they are less focused so a
 

00:02:54.030 --> 00:02:55.820 align:start position:0%
however they are less focused so a
failure<00:02:54.390><c> in</c><00:02:54.630><c> one</c><00:02:54.780><c> of</c><00:02:54.870><c> these</c><00:02:54.989><c> kind</c><00:02:55.290><c> of</c><00:02:55.380><c> tests</c>

00:02:55.820 --> 00:02:55.830 align:start position:0%
failure in one of these kind of tests
 

00:02:55.830 --> 00:02:58.130 align:start position:0%
failure in one of these kind of tests
might<00:02:56.790><c> take</c><00:02:57.000><c> a</c><00:02:57.030><c> little</c><00:02:57.180><c> longer</c><00:02:57.420><c> to</c><00:02:57.599><c> track</c><00:02:57.930><c> down</c>

00:02:58.130 --> 00:02:58.140 align:start position:0%
might take a little longer to track down
 

00:02:58.140 --> 00:03:00.770 align:start position:0%
might take a little longer to track down
that<00:02:58.200><c> it</c><00:02:58.440><c> would</c><00:02:58.560><c> in</c><00:02:58.680><c> a</c><00:02:58.769><c> unit</c><00:02:59.099><c> test</c><00:02:59.280><c> and</c><00:02:59.690><c> one</c><00:03:00.690><c> of</c>

00:03:00.770 --> 00:03:00.780 align:start position:0%
that it would in a unit test and one of
 

00:03:00.780 --> 00:03:02.600 align:start position:0%
that it would in a unit test and one of
the<00:03:00.840><c> big</c><00:03:01.049><c> trade-offs</c><00:03:01.530><c> you're</c><00:03:01.709><c> making</c><00:03:02.069><c> is</c><00:03:02.250><c> in</c>

00:03:02.600 --> 00:03:02.610 align:start position:0%
the big trade-offs you're making is in
 

00:03:02.610 --> 00:03:05.420 align:start position:0%
the big trade-offs you're making is in
test<00:03:02.880><c> execution</c><00:03:03.180><c> speed</c><00:03:04.130><c> because</c><00:03:05.130><c> you're</c>

00:03:05.420 --> 00:03:05.430 align:start position:0%
test execution speed because you're
 

00:03:05.430 --> 00:03:07.070 align:start position:0%
test execution speed because you're
assembling<00:03:05.730><c> multiple</c><00:03:06.269><c> components</c><00:03:06.870><c> they</c><00:03:06.959><c> all</c>

00:03:07.070 --> 00:03:07.080 align:start position:0%
assembling multiple components they all
 

00:03:07.080 --> 00:03:08.990 align:start position:0%
assembling multiple components they all
have<00:03:07.290><c> to</c><00:03:07.410><c> be</c><00:03:07.440><c> built</c><00:03:07.769><c> and</c><00:03:08.040><c> then</c><00:03:08.730><c> package</c>

00:03:08.990 --> 00:03:09.000 align:start position:0%
have to be built and then package
 

00:03:09.000 --> 00:03:10.820 align:start position:0%
have to be built and then package
shipped<00:03:09.510><c> to</c><00:03:09.690><c> a</c><00:03:09.720><c> device</c><00:03:10.019><c> where</c><00:03:10.290><c> the</c><00:03:10.380><c> tests</c><00:03:10.709><c> are</c>

00:03:10.820 --> 00:03:10.830 align:start position:0%
shipped to a device where the tests are
 

00:03:10.830 --> 00:03:13.130 align:start position:0%
shipped to a device where the tests are
run<00:03:10.980><c> and</c><00:03:11.220><c> the</c><00:03:11.340><c> results</c><00:03:11.760><c> elected</c><00:03:12.330><c> back</c><00:03:12.510><c> that's</c>

00:03:13.130 --> 00:03:13.140 align:start position:0%
run and the results elected back that's
 

00:03:13.140 --> 00:03:16.550 align:start position:0%
run and the results elected back that's
going<00:03:13.319><c> to</c><00:03:13.380><c> take</c><00:03:13.560><c> extra</c><00:03:13.980><c> time</c><00:03:14.870><c> so</c><00:03:15.870><c> there's</c><00:03:16.380><c> no</c>

00:03:16.550 --> 00:03:16.560 align:start position:0%
going to take extra time so there's no
 

00:03:16.560 --> 00:03:18.470 align:start position:0%
going to take extra time so there's no
single<00:03:17.010><c> layer</c><00:03:17.190><c> in</c><00:03:17.220><c> this</c><00:03:17.670><c> testing</c><00:03:18.060><c> pyramid</c>

00:03:18.470 --> 00:03:18.480 align:start position:0%
single layer in this testing pyramid
 

00:03:18.480 --> 00:03:21.380 align:start position:0%
single layer in this testing pyramid
that<00:03:18.600><c> can</c><00:03:18.870><c> suffice</c><00:03:19.290><c> so</c><00:03:20.280><c> what</c><00:03:20.880><c> you</c><00:03:21.000><c> need</c><00:03:21.150><c> to</c><00:03:21.239><c> do</c>

00:03:21.380 --> 00:03:21.390 align:start position:0%
that can suffice so what you need to do
 

00:03:21.390 --> 00:03:23.599 align:start position:0%
that can suffice so what you need to do
is<00:03:21.720><c> to</c><00:03:21.959><c> blend</c><00:03:22.200><c> in</c><00:03:22.470><c> tests</c><00:03:23.070><c> at</c><00:03:23.220><c> each</c><00:03:23.340><c> different</c>

00:03:23.599 --> 00:03:23.609 align:start position:0%
is to blend in tests at each different
 

00:03:23.609 --> 00:03:26.120 align:start position:0%
is to blend in tests at each different
tier<00:03:24.109><c> leveraging</c><00:03:25.109><c> the</c><00:03:25.260><c> strengths</c><00:03:25.799><c> of</c><00:03:25.920><c> one</c>

00:03:26.120 --> 00:03:26.130 align:start position:0%
tier leveraging the strengths of one
 

00:03:26.130 --> 00:03:28.640 align:start position:0%
tier leveraging the strengths of one
category<00:03:26.370><c> to</c><00:03:26.940><c> way</c><00:03:27.600><c> off</c><00:03:27.750><c> the</c><00:03:27.989><c> trade-offs</c><00:03:28.440><c> in</c>

00:03:28.640 --> 00:03:28.650 align:start position:0%
category to way off the trade-offs in
 

00:03:28.650 --> 00:03:31.819 align:start position:0%
category to way off the trade-offs in
another<00:03:29.390><c> there's</c><00:03:30.390><c> no</c><00:03:30.600><c> real</c><00:03:31.019><c> hard</c><00:03:31.500><c> and</c><00:03:31.680><c> fast</c>

00:03:31.819 --> 00:03:31.829 align:start position:0%
another there's no real hard and fast
 

00:03:31.829 --> 00:03:34.610 align:start position:0%
another there's no real hard and fast
rule<00:03:32.160><c> here</c><00:03:32.489><c> but</c><00:03:33.359><c> Google's</c><00:03:33.750><c> own</c><00:03:34.049><c> internal</c>

00:03:34.610 --> 00:03:34.620 align:start position:0%
rule here but Google's own internal
 

00:03:34.620 --> 00:03:37.340 align:start position:0%
rule here but Google's own internal
testing<00:03:35.010><c> experts</c><00:03:35.430><c> recommend</c><00:03:35.940><c> the</c><00:03:36.350><c> 70-20-10</c>

00:03:37.340 --> 00:03:37.350 align:start position:0%
testing experts recommend the 70-20-10
 

00:03:37.350 --> 00:03:40.250 align:start position:0%
testing experts recommend the 70-20-10
rule<00:03:37.590><c> of</c><00:03:37.739><c> thumb</c><00:03:37.980><c> as</c><00:03:38.220><c> the</c><00:03:38.880><c> ratio</c><00:03:39.090><c> between</c><00:03:39.540><c> small</c>

00:03:40.250 --> 00:03:40.260 align:start position:0%
rule of thumb as the ratio between small
 

00:03:40.260 --> 00:03:43.430 align:start position:0%
rule of thumb as the ratio between small
medium<00:03:40.859><c> and</c><00:03:40.950><c> large</c><00:03:41.040><c> tests</c><00:03:42.019><c> let's</c><00:03:43.019><c> take</c><00:03:43.200><c> a</c><00:03:43.230><c> look</c>

00:03:43.430 --> 00:03:43.440 align:start position:0%
medium and large tests let's take a look
 

00:03:43.440 --> 00:03:47.960 align:start position:0%
medium and large tests let's take a look
at<00:03:43.530><c> our</c><00:03:43.650><c> workflow</c><00:03:45.590><c> so</c><00:03:46.590><c> and</c><00:03:46.920><c> with</c><00:03:47.579><c> test-driven</c>

00:03:47.960 --> 00:03:47.970 align:start position:0%
at our workflow so and with test-driven
 

00:03:47.970 --> 00:03:49.819 align:start position:0%
at our workflow so and with test-driven
development<00:03:48.209><c> the</c><00:03:48.720><c> idea</c><00:03:49.019><c> is</c><00:03:49.200><c> that</c><00:03:49.230><c> you</c><00:03:49.500><c> start</c>

00:03:49.819 --> 00:03:49.829 align:start position:0%
development the idea is that you start
 

00:03:49.829 --> 00:03:51.620 align:start position:0%
development the idea is that you start
by<00:03:49.980><c> writing</c><00:03:50.130><c> your</c><00:03:50.430><c> tests</c><00:03:50.880><c> then</c><00:03:51.239><c> you</c><00:03:51.389><c> implement</c>

00:03:51.620 --> 00:03:51.630 align:start position:0%
by writing your tests then you implement
 

00:03:51.630 --> 00:03:53.780 align:start position:0%
by writing your tests then you implement
a<00:03:51.840><c> code</c><00:03:52.019><c> to</c><00:03:52.139><c> make</c><00:03:52.260><c> those</c><00:03:52.470><c> tests</c><00:03:52.739><c> pass</c><00:03:52.980><c> and</c><00:03:53.280><c> then</c>

00:03:53.780 --> 00:03:53.790 align:start position:0%
a code to make those tests pass and then
 

00:03:53.790 --> 00:03:55.120 align:start position:0%
a code to make those tests pass and then
when<00:03:53.940><c> your</c><00:03:54.060><c> tests</c><00:03:54.239><c> a</c><00:03:54.329><c> green</c><00:03:54.540><c> you</c><00:03:54.690><c> can</c><00:03:54.870><c> submit</c>

00:03:55.120 --> 00:03:55.130 align:start position:0%
when your tests a green you can submit
 

00:03:55.130 --> 00:03:58.190 align:start position:0%
when your tests a green you can submit
again<00:03:56.130><c> a</c><00:03:56.310><c> quick</c><00:03:56.609><c> show</c><00:03:56.819><c> of</c><00:03:56.910><c> hands</c><00:03:57.150><c> who</c><00:03:58.049><c> out</c>

00:03:58.190 --> 00:03:58.200 align:start position:0%
again a quick show of hands who out
 

00:03:58.200 --> 00:04:01.520 align:start position:0%
again a quick show of hands who out
there<00:03:58.590><c> has</c><00:03:58.920><c> test-driven</c><00:03:59.850><c> their</c><00:04:00.120><c> code</c><00:04:00.530><c> tried</c>

00:04:01.520 --> 00:04:01.530 align:start position:0%
there has test-driven their code tried
 

00:04:01.530 --> 00:04:04.759 align:start position:0%
there has test-driven their code tried
test-driven<00:04:01.889><c> development</c><00:04:02.100><c> in</c><00:04:02.430><c> the</c><00:04:02.519><c> past</c><00:04:03.769><c> okay</c>

00:04:04.759 --> 00:04:04.769 align:start position:0%
test-driven development in the past okay
 

00:04:04.769 --> 00:04:07.370 align:start position:0%
test-driven development in the past okay
cool<00:04:05.250><c> so</c><00:04:05.569><c> we</c><00:04:06.569><c> like</c><00:04:06.750><c> test-driven</c><00:04:07.139><c> development</c>

00:04:07.370 --> 00:04:07.380 align:start position:0%
cool so we like test-driven development
 

00:04:07.380 --> 00:04:10.129 align:start position:0%
cool so we like test-driven development
because<00:04:08.220><c> it</c><00:04:08.489><c> makes</c><00:04:08.819><c> you</c><00:04:09.030><c> to</c><00:04:09.389><c> think</c><00:04:09.600><c> about</c><00:04:09.900><c> the</c>

00:04:10.129 --> 00:04:10.139 align:start position:0%
because it makes you to think about the
 

00:04:10.139 --> 00:04:12.410 align:start position:0%
because it makes you to think about the
design<00:04:10.680><c> of</c><00:04:10.739><c> your</c><00:04:10.920><c> application</c><00:04:11.400><c> up</c><00:04:11.489><c> front</c><00:04:11.760><c> it</c>

00:04:12.410 --> 00:04:12.420 align:start position:0%
design of your application up front it
 

00:04:12.420 --> 00:04:14.900 align:start position:0%
design of your application up front it
gives<00:04:12.660><c> you</c><00:04:12.870><c> consideration</c><00:04:13.650><c> to</c><00:04:13.859><c> api's</c><00:04:14.370><c> and</c><00:04:14.850><c> the</c>

00:04:14.900 --> 00:04:14.910 align:start position:0%
gives you consideration to api's and the
 

00:04:14.910 --> 00:04:17.690 align:start position:0%
gives you consideration to api's and the
structure<00:04:15.359><c> of</c><00:04:15.389><c> your</c><00:04:15.630><c> code</c><00:04:16.310><c> with</c><00:04:17.310><c> test-driven</c>

00:04:17.690 --> 00:04:17.700 align:start position:0%
structure of your code with test-driven
 

00:04:17.700 --> 00:04:19.039 align:start position:0%
structure of your code with test-driven
development<00:04:17.940><c> you're</c><00:04:18.479><c> also</c><00:04:18.660><c> going</c><00:04:18.900><c> to</c><00:04:18.959><c> be</c>

00:04:19.039 --> 00:04:19.049 align:start position:0%
development you're also going to be
 

00:04:19.049 --> 00:04:21.620 align:start position:0%
development you're also going to be
writing<00:04:19.200><c> less</c><00:04:19.650><c> code</c><00:04:19.789><c> because</c><00:04:20.789><c> you</c><00:04:20.820><c> only</c><00:04:21.269><c> write</c>

00:04:21.620 --> 00:04:21.630 align:start position:0%
writing less code because you only write
 

00:04:21.630 --> 00:04:24.310 align:start position:0%
writing less code because you only write
the<00:04:21.780><c> code</c><00:04:22.019><c> necessary</c><00:04:22.289><c> to</c><00:04:22.860><c> satisfy</c><00:04:23.039><c> your</c><00:04:23.520><c> tests</c>

00:04:24.310 --> 00:04:24.320 align:start position:0%
the code necessary to satisfy your tests
 

00:04:24.320 --> 00:04:26.740 align:start position:0%
the code necessary to satisfy your tests
this<00:04:25.320><c> will</c><00:04:25.500><c> enable</c><00:04:25.710><c> you</c><00:04:25.979><c> to</c><00:04:26.010><c> release</c>

00:04:26.740 --> 00:04:26.750 align:start position:0%
this will enable you to release
 

00:04:26.750 --> 00:04:29.080 align:start position:0%
this will enable you to release
and<00:04:26.840><c> often</c><00:04:27.170><c> as</c><00:04:27.350><c> you</c><00:04:27.980><c> constantly</c><00:04:28.490><c> green</c><00:04:28.790><c> you'll</c>

00:04:29.080 --> 00:04:29.090 align:start position:0%
and often as you constantly green you'll
 

00:04:29.090 --> 00:04:30.370 align:start position:0%
and often as you constantly green you'll
be<00:04:29.180><c> able</c><00:04:29.240><c> to</c><00:04:29.390><c> deploy</c><00:04:29.720><c> a</c><00:04:29.750><c> working</c><00:04:30.260><c> application</c>

00:04:30.370 --> 00:04:30.380 align:start position:0%
be able to deploy a working application
 

00:04:30.380 --> 00:04:32.310 align:start position:0%
be able to deploy a working application
at<00:04:31.010><c> a</c><00:04:31.040><c> moment's</c><00:04:31.520><c> notice</c>

00:04:32.310 --> 00:04:32.320 align:start position:0%
at a moment's notice
 

00:04:32.320 --> 00:04:36.010 align:start position:0%
at a moment's notice
if<00:04:33.320><c> we're</c><00:04:34.010><c> following</c><00:04:34.160><c> the</c><00:04:35.060><c> test</c><00:04:35.330><c> pyramid</c><00:04:35.750><c> the</c>

00:04:36.010 --> 00:04:36.020 align:start position:0%
if we're following the test pyramid the
 

00:04:36.020 --> 00:04:37.420 align:start position:0%
if we're following the test pyramid the
workflow<00:04:36.410><c> is</c><00:04:36.470><c> going</c><00:04:36.680><c> to</c><00:04:36.740><c> look</c><00:04:36.890><c> something</c><00:04:37.370><c> like</c>

00:04:37.420 --> 00:04:37.430 align:start position:0%
workflow is going to look something like
 

00:04:37.430 --> 00:04:42.160 align:start position:0%
workflow is going to look something like
this<00:04:39.100><c> first</c><00:04:40.100><c> of</c><00:04:40.280><c> all</c><00:04:40.340><c> we</c><00:04:40.700><c> have</c><00:04:40.940><c> a</c><00:04:41.240><c> larger</c><00:04:41.960><c> outer</c>

00:04:42.160 --> 00:04:42.170 align:start position:0%
this first of all we have a larger outer
 

00:04:42.170 --> 00:04:43.900 align:start position:0%
this first of all we have a larger outer
iteration<00:04:42.410><c> that's</c><00:04:43.010><c> concerned</c><00:04:43.430><c> with</c><00:04:43.640><c> feature</c>

00:04:43.900 --> 00:04:43.910 align:start position:0%
iteration that's concerned with feature
 

00:04:43.910 --> 00:04:47.230 align:start position:0%
iteration that's concerned with feature
development<00:04:44.600><c> and</c><00:04:45.340><c> here</c><00:04:46.340><c> is</c><00:04:46.490><c> started</c><00:04:46.970><c> it's</c>

00:04:47.230 --> 00:04:47.240 align:start position:0%
development and here is started it's
 

00:04:47.240 --> 00:04:50.710 align:start position:0%
development and here is started it's
driven<00:04:47.480><c> by</c><00:04:47.720><c> a</c><00:04:47.750><c> UI</c><00:04:48.560><c> test</c><00:04:49.040><c> and</c><00:04:49.310><c> the</c><00:04:50.150><c> mantra</c><00:04:50.570><c> with</c>

00:04:50.710 --> 00:04:50.720 align:start position:0%
driven by a UI test and the mantra with
 

00:04:50.720 --> 00:04:52.930 align:start position:0%
driven by a UI test and the mantra with
test-driven<00:04:51.080><c> development</c><00:04:51.320><c> is</c><00:04:51.830><c> red</c><00:04:52.580><c> green</c>

00:04:52.930 --> 00:04:52.940 align:start position:0%
test-driven development is red green
 

00:04:52.940 --> 00:04:55.060 align:start position:0%
test-driven development is red green
refactor<00:04:53.290><c> we</c><00:04:54.290><c> start</c><00:04:54.560><c> off</c><00:04:54.680><c> with</c><00:04:54.770><c> a</c><00:04:54.860><c> failing</c>

00:04:55.060 --> 00:04:55.070 align:start position:0%
refactor we start off with a failing
 

00:04:55.070 --> 00:04:57.280 align:start position:0%
refactor we start off with a failing
test<00:04:55.430><c> we</c><00:04:55.970><c> implement</c><00:04:56.390><c> the</c><00:04:56.450><c> code</c><00:04:56.660><c> to</c><00:04:56.990><c> make</c><00:04:57.110><c> that</c>

00:04:57.280 --> 00:04:57.290 align:start position:0%
test we implement the code to make that
 

00:04:57.290 --> 00:05:02.260 align:start position:0%
test we implement the code to make that
test<00:04:57.470><c> pass</c><00:04:57.770><c> and</c><00:04:58.040><c> then</c><00:04:58.370><c> we</c><00:04:58.490><c> refactor</c><00:05:01.270><c> inside</c>

00:05:02.260 --> 00:05:02.270 align:start position:0%
test pass and then we refactor inside
 

00:05:02.270 --> 00:05:04.270 align:start position:0%
test pass and then we refactor inside
the<00:05:02.570><c> larger</c><00:05:03.020><c> iteration</c><00:05:03.590><c> are</c><00:05:03.800><c> a</c><00:05:03.830><c> series</c><00:05:04.220><c> of</c>

00:05:04.270 --> 00:05:04.280 align:start position:0%
the larger iteration are a series of
 

00:05:04.280 --> 00:05:05.830 align:start position:0%
the larger iteration are a series of
smaller<00:05:04.610><c> iterations</c><00:05:05.270><c> and</c><00:05:05.510><c> these</c><00:05:05.690><c> are</c>

00:05:05.830 --> 00:05:05.840 align:start position:0%
smaller iterations and these are
 

00:05:05.840 --> 00:05:08.290 align:start position:0%
smaller iterations and these are
concerned<00:05:06.230><c> with</c><00:05:06.410><c> the</c><00:05:06.500><c> unit</c><00:05:06.830><c> tests</c><00:05:07.220><c> here</c><00:05:08.060><c> that</c>

00:05:08.290 --> 00:05:08.300 align:start position:0%
concerned with the unit tests here that
 

00:05:08.300 --> 00:05:10.150 align:start position:0%
concerned with the unit tests here that
you're<00:05:08.419><c> assembling</c><00:05:08.660><c> the</c><00:05:09.050><c> building</c><00:05:09.740><c> the</c><00:05:09.830><c> units</c>

00:05:10.150 --> 00:05:10.160 align:start position:0%
you're assembling the building the units
 

00:05:10.160 --> 00:05:12.040 align:start position:0%
you're assembling the building the units
required<00:05:10.580><c> to</c><00:05:10.850><c> make</c><00:05:11.090><c> the</c><00:05:11.210><c> feature</c><00:05:11.419><c> pass</c><00:05:11.750><c> and</c>

00:05:12.040 --> 00:05:12.050 align:start position:0%
required to make the feature pass and
 

00:05:12.050 --> 00:05:15.250 align:start position:0%
required to make the feature pass and
again<00:05:12.680><c> you</c><00:05:13.250><c> use</c><00:05:13.430><c> the</c><00:05:13.610><c> same</c><00:05:13.790><c> mantra</c><00:05:14.210><c> here</c><00:05:14.540><c> red</c>

00:05:15.250 --> 00:05:15.260 align:start position:0%
again you use the same mantra here red
 

00:05:15.260 --> 00:05:18.280 align:start position:0%
again you use the same mantra here red
green<00:05:15.590><c> refactor</c><00:05:15.740><c> red</c><00:05:16.669><c> green</c><00:05:17.030><c> refactor</c><00:05:17.290><c> so</c>

00:05:18.280 --> 00:05:18.290 align:start position:0%
green refactor red green refactor so
 

00:05:18.290 --> 00:05:22.260 align:start position:0%
green refactor red green refactor so
let's<00:05:18.440><c> take</c><00:05:18.650><c> a</c><00:05:18.680><c> look</c><00:05:18.890><c> an</c><00:05:19.100><c> example</c><00:05:19.340><c> application</c>

00:05:22.260 --> 00:05:22.270 align:start position:0%
 
 

00:05:22.270 --> 00:05:24.610 align:start position:0%
 
so<00:05:23.270><c> the</c><00:05:23.450><c> feature</c><00:05:23.630><c> going</c><00:05:23.900><c> to</c><00:05:23.960><c> implement</c><00:05:24.200><c> today</c>

00:05:24.610 --> 00:05:24.620 align:start position:0%
so the feature going to implement today
 

00:05:24.620 --> 00:05:27.070 align:start position:0%
so the feature going to implement today
is<00:05:24.890><c> the</c><00:05:25.250><c> add</c><00:05:25.520><c> notes</c><00:05:25.790><c> flow</c><00:05:26.090><c> to</c><00:05:26.150><c> a</c><00:05:26.390><c> sample</c><00:05:26.840><c> note</c>

00:05:27.070 --> 00:05:27.080 align:start position:0%
is the add notes flow to a sample note
 

00:05:27.080 --> 00:05:29.380 align:start position:0%
is the add notes flow to a sample note
taking<00:05:27.530><c> application</c><00:05:27.650><c> if</c><00:05:28.370><c> we</c><00:05:28.910><c> take</c><00:05:29.060><c> a</c><00:05:29.120><c> look</c><00:05:29.270><c> at</c>

00:05:29.380 --> 00:05:29.390 align:start position:0%
taking application if we take a look at
 

00:05:29.390 --> 00:05:31.900 align:start position:0%
taking application if we take a look at
our<00:05:29.480><c> mock-ups</c><00:05:29.870><c> we</c><00:05:30.169><c> can</c><00:05:30.350><c> see</c><00:05:30.590><c> that</c><00:05:31.310><c> we</c><00:05:31.430><c> start</c><00:05:31.729><c> on</c>

00:05:31.900 --> 00:05:31.910 align:start position:0%
our mock-ups we can see that we start on
 

00:05:31.910 --> 00:05:33.430 align:start position:0%
our mock-ups we can see that we start on
a<00:05:31.970><c> notes</c><00:05:32.180><c> list</c><00:05:32.390><c> screen</c><00:05:32.720><c> full</c><00:05:33.140><c> of</c><00:05:33.169><c> some</c>

00:05:33.430 --> 00:05:33.440 align:start position:0%
a notes list screen full of some
 

00:05:33.440 --> 00:05:35.469 align:start position:0%
a notes list screen full of some
existing<00:05:33.710><c> notes</c><00:05:34.070><c> there's</c><00:05:34.850><c> a</c><00:05:34.940><c> floating</c><00:05:35.360><c> action</c>

00:05:35.469 --> 00:05:35.479 align:start position:0%
existing notes there's a floating action
 

00:05:35.479 --> 00:05:37.750 align:start position:0%
existing notes there's a floating action
button<00:05:35.960><c> down</c><00:05:36.140><c> at</c><00:05:36.320><c> the</c><00:05:36.350><c> bottom</c><00:05:36.410><c> and</c><00:05:36.890><c> the</c><00:05:37.640><c> user</c>

00:05:37.750 --> 00:05:37.760 align:start position:0%
button down at the bottom and the user
 

00:05:37.760 --> 00:05:39.580 align:start position:0%
button down at the bottom and the user
will<00:05:37.970><c> click</c><00:05:38.000><c> this</c><00:05:38.419><c> taking</c><00:05:39.110><c> them</c><00:05:39.229><c> on</c><00:05:39.320><c> to</c><00:05:39.470><c> the</c>

00:05:39.580 --> 00:05:39.590 align:start position:0%
will click this taking them on to the
 

00:05:39.590 --> 00:05:42.580 align:start position:0%
will click this taking them on to the
new<00:05:39.950><c> add</c><00:05:40.220><c> notes</c><00:05:40.550><c> screen</c><00:05:41.080><c> here</c><00:05:42.080><c> they</c><00:05:42.229><c> can</c><00:05:42.350><c> enter</c>

00:05:42.580 --> 00:05:42.590 align:start position:0%
new add notes screen here they can enter
 

00:05:42.590 --> 00:05:44.409 align:start position:0%
new add notes screen here they can enter
a<00:05:42.650><c> title</c><00:05:42.890><c> and</c><00:05:43.280><c> a</c><00:05:43.520><c> description</c><00:05:43.550><c> for</c><00:05:44.060><c> their</c><00:05:44.240><c> note</c>

00:05:44.409 --> 00:05:44.419 align:start position:0%
a title and a description for their note
 

00:05:44.419 --> 00:05:46.450 align:start position:0%
a title and a description for their note
before<00:05:44.600><c> clicking</c><00:05:44.990><c> save</c><00:05:45.350><c> the</c><00:05:46.160><c> node</c><00:05:46.310><c> will</c><00:05:46.430><c> be</c>

00:05:46.450 --> 00:05:46.460 align:start position:0%
before clicking save the node will be
 

00:05:46.460 --> 00:05:48.370 align:start position:0%
before clicking save the node will be
persisted<00:05:47.060><c> and</c><00:05:47.210><c> then</c><00:05:47.450><c> never</c><00:05:47.570><c> turned</c><00:05:47.930><c> back</c><00:05:48.169><c> to</c>

00:05:48.370 --> 00:05:48.380 align:start position:0%
persisted and then never turned back to
 

00:05:48.380 --> 00:05:50.260 align:start position:0%
persisted and then never turned back to
the<00:05:48.500><c> notes</c><00:05:48.680><c> list</c><00:05:48.950><c> screen</c><00:05:49.250><c> where</c><00:05:49.850><c> they</c><00:05:49.940><c> can</c><00:05:50.090><c> see</c>

00:05:50.260 --> 00:05:50.270 align:start position:0%
the notes list screen where they can see
 

00:05:50.270 --> 00:05:51.850 align:start position:0%
the notes list screen where they can see
their<00:05:50.419><c> newly</c><00:05:50.600><c> added</c><00:05:50.840><c> note</c><00:05:51.140><c> along</c><00:05:51.530><c> with</c><00:05:51.710><c> any</c>

00:05:51.850 --> 00:05:51.860 align:start position:0%
their newly added note along with any
 

00:05:51.860 --> 00:05:56.020 align:start position:0%
their newly added note along with any
other<00:05:52.070><c> notes</c><00:05:52.250><c> that</c><00:05:52.370><c> previously</c><00:05:52.970><c> existed</c><00:05:55.030><c> so</c>

00:05:56.020 --> 00:05:56.030 align:start position:0%
other notes that previously existed so
 

00:05:56.030 --> 00:05:57.600 align:start position:0%
other notes that previously existed so
coming<00:05:56.270><c> back</c><00:05:56.300><c> to</c><00:05:56.540><c> our</c><00:05:56.570><c> workflow</c><00:05:57.020><c> for</c><00:05:57.200><c> a</c><00:05:57.229><c> moment</c>

00:05:57.600 --> 00:05:57.610 align:start position:0%
coming back to our workflow for a moment
 

00:05:57.610 --> 00:05:59.830 align:start position:0%
coming back to our workflow for a moment
remember<00:05:58.610><c> that</c><00:05:58.729><c> we</c><00:05:58.820><c> start</c><00:05:59.120><c> with</c><00:05:59.270><c> a</c><00:05:59.300><c> failing</c><00:05:59.540><c> UI</c>

00:05:59.830 --> 00:05:59.840 align:start position:0%
remember that we start with a failing UI
 

00:05:59.840 --> 00:06:03.280 align:start position:0%
remember that we start with a failing UI
test<00:06:00.370><c> so</c><00:06:01.370><c> let's</c><00:06:01.640><c> take</c><00:06:02.060><c> a</c><00:06:02.090><c> look</c><00:06:02.300><c> at</c><00:06:02.419><c> how</c><00:06:02.600><c> this</c>

00:06:03.280 --> 00:06:03.290 align:start position:0%
test so let's take a look at how this
 

00:06:03.290 --> 00:06:05.440 align:start position:0%
test so let's take a look at how this
test<00:06:03.650><c> would</c><00:06:03.770><c> look</c><00:06:03.950><c> like</c><00:06:04.100><c> using</c><00:06:04.400><c> espresso</c><00:06:05.240><c> the</c>

00:06:05.440 --> 00:06:05.450 align:start position:0%
test would look like using espresso the
 

00:06:05.450 --> 00:06:09.940 align:start position:0%
test would look like using espresso the
UI<00:06:05.630><c> testing</c><00:06:06.140><c> framework</c><00:06:08.350><c> the</c><00:06:09.350><c> first</c><00:06:09.590><c> step</c><00:06:09.800><c> is</c>

00:06:09.940 --> 00:06:09.950 align:start position:0%
UI testing framework the first step is
 

00:06:09.950 --> 00:06:14.409 align:start position:0%
UI testing framework the first step is
to<00:06:10.100><c> click</c><00:06:10.310><c> on</c><00:06:10.490><c> the</c><00:06:10.669><c> add</c><00:06:10.940><c> node</c><00:06:11.180><c> button</c><00:06:13.240><c> then</c><00:06:14.240><c> we</c>

00:06:14.409 --> 00:06:14.419 align:start position:0%
to click on the add node button then we
 

00:06:14.419 --> 00:06:16.780 align:start position:0%
to click on the add node button then we
enter<00:06:14.720><c> the</c><00:06:15.040><c> title</c><00:06:16.040><c> and</c><00:06:16.160><c> description</c><00:06:16.700><c> and</c>

00:06:16.780 --> 00:06:16.790 align:start position:0%
enter the title and description and
 

00:06:16.790 --> 00:06:19.690 align:start position:0%
enter the title and description and
click<00:06:17.030><c> Save</c><00:06:17.360><c> before</c><00:06:18.290><c> returning</c><00:06:18.620><c> to</c><00:06:18.890><c> the</c><00:06:19.250><c> notes</c>

00:06:19.690 --> 00:06:19.700 align:start position:0%
click Save before returning to the notes
 

00:06:19.700 --> 00:06:20.950 align:start position:0%
click Save before returning to the notes
list<00:06:19.940><c> screen</c><00:06:20.180><c> and</c><00:06:20.390><c> here</c><00:06:20.630><c> we're</c><00:06:20.750><c> going</c><00:06:20.870><c> to</c>

00:06:20.950 --> 00:06:20.960 align:start position:0%
list screen and here we're going to
 

00:06:20.960 --> 00:06:22.900 align:start position:0%
list screen and here we're going to
verify<00:06:21.229><c> that</c><00:06:21.770><c> the</c><00:06:22.100><c> note</c><00:06:22.280><c> that</c><00:06:22.460><c> we</c><00:06:22.520><c> just</c><00:06:22.700><c> added</c>

00:06:22.900 --> 00:06:22.910 align:start position:0%
verify that the note that we just added
 

00:06:22.910 --> 00:06:27.190 align:start position:0%
verify that the note that we just added
actually<00:06:23.540><c> shows</c><00:06:23.750><c> up</c><00:06:25.479><c> now</c><00:06:26.479><c> remember</c><00:06:26.900><c> with</c>

00:06:27.190 --> 00:06:27.200 align:start position:0%
actually shows up now remember with
 

00:06:27.200 --> 00:06:28.240 align:start position:0%
actually shows up now remember with
test-driven<00:06:27.590><c> development</c>

00:06:28.240 --> 00:06:28.250 align:start position:0%
test-driven development
 

00:06:28.250 --> 00:06:29.800 align:start position:0%
test-driven development
we're<00:06:28.490><c> not</c><00:06:28.640><c> implement</c><00:06:29.090><c> the</c><00:06:29.120><c> code</c><00:06:29.360><c> just</c><00:06:29.540><c> yet</c>

00:06:29.800 --> 00:06:29.810 align:start position:0%
we're not implement the code just yet
 

00:06:29.810 --> 00:06:32.409 align:start position:0%
we're not implement the code just yet
and<00:06:30.280><c> all</c><00:06:31.280><c> we</c><00:06:31.490><c> have</c><00:06:31.640><c> to</c><00:06:31.760><c> do</c><00:06:31.910><c> is</c><00:06:32.180><c> implement</c>

00:06:32.409 --> 00:06:32.419 align:start position:0%
and all we have to do is implement
 

00:06:32.419 --> 00:06:34.839 align:start position:0%
and all we have to do is implement
enough<00:06:32.840><c> of</c><00:06:32.960><c> the</c><00:06:33.050><c> application</c><00:06:33.740><c> to</c><00:06:34.130><c> satisfy</c><00:06:34.789><c> the</c>

00:06:34.839 --> 00:06:34.849 align:start position:0%
enough of the application to satisfy the
 

00:06:34.849 --> 00:06:37.390 align:start position:0%
enough of the application to satisfy the
specification<00:06:35.539><c> of</c><00:06:35.570><c> our</c><00:06:35.690><c> tests</c><00:06:36.110><c> so</c><00:06:36.440><c> an</c><00:06:36.710><c> empty</c>

00:06:37.390 --> 00:06:37.400 align:start position:0%
specification of our tests so an empty
 

00:06:37.400 --> 00:06:39.279 align:start position:0%
specification of our tests so an empty
activity<00:06:37.910><c> and</c><00:06:38.150><c> just</c><00:06:38.270><c> the</c><00:06:38.450><c> resources</c><00:06:38.810><c> that</c><00:06:39.140><c> we</c>

00:06:39.279 --> 00:06:39.289 align:start position:0%
activity and just the resources that we
 

00:06:39.289 --> 00:06:40.060 align:start position:0%
activity and just the resources that we
need<00:06:39.320><c> will</c>

00:06:40.060 --> 00:06:40.070 align:start position:0%
need will
 

00:06:40.070 --> 00:06:43.120 align:start position:0%
need will
fyz<00:06:40.690><c> once</c><00:06:41.690><c> we</c><00:06:41.840><c> have</c><00:06:42.020><c> that</c><00:06:42.050><c> we</c><00:06:42.710><c> can</c><00:06:42.740><c> run</c><00:06:43.010><c> our</c>

00:06:43.120 --> 00:06:43.130 align:start position:0%
fyz once we have that we can run our
 

00:06:43.130 --> 00:06:45.520 align:start position:0%
fyz once we have that we can run our
test<00:06:43.370><c> and</c><00:06:43.700><c> we'll</c><00:06:43.820><c> see</c><00:06:44.030><c> it'll</c><00:06:44.210><c> fail</c><00:06:44.480><c> now</c><00:06:45.470><c> we</c>

00:06:45.520 --> 00:06:45.530 align:start position:0%
test and we'll see it'll fail now we
 

00:06:45.530 --> 00:06:50.070 align:start position:0%
test and we'll see it'll fail now we
have<00:06:45.710><c> to</c><00:06:45.800><c> implement</c><00:06:46.040><c> this</c><00:06:46.280><c> feature</c><00:06:46.490><c> so</c>

00:06:50.070 --> 00:06:50.080 align:start position:0%
 
 

00:06:50.080 --> 00:06:52.420 align:start position:0%
 
applications<00:06:51.080><c> are</c><00:06:51.350><c> built</c><00:06:51.590><c> up</c><00:06:51.800><c> of</c><00:06:52.010><c> many</c><00:06:52.310><c> small</c>

00:06:52.420 --> 00:06:52.430 align:start position:0%
applications are built up of many small
 

00:06:52.430 --> 00:06:55.330 align:start position:0%
applications are built up of many small
units<00:06:53.120><c> these</c><00:06:53.570><c> are</c><00:06:53.840><c> small</c><00:06:54.230><c> highly</c><00:06:55.130><c> focused</c>

00:06:55.330 --> 00:06:55.340 align:start position:0%
units these are small highly focused
 

00:06:55.340 --> 00:06:58.180 align:start position:0%
units these are small highly focused
specialized<00:06:56.410><c> components</c><00:06:57.410><c> that</c><00:06:57.500><c> do</c><00:06:57.680><c> one</c><00:06:57.890><c> thing</c>

00:06:58.180 --> 00:06:58.190 align:start position:0%
specialized components that do one thing
 

00:06:58.190 --> 00:07:00.760 align:start position:0%
specialized components that do one thing
and<00:06:58.340><c> they</c><00:06:58.400><c> do</c><00:06:58.460><c> it</c><00:06:58.700><c> well</c><00:06:59.590><c> collections</c><00:07:00.590><c> these</c>

00:07:00.760 --> 00:07:00.770 align:start position:0%
and they do it well collections these
 

00:07:00.770 --> 00:07:02.380 align:start position:0%
and they do it well collections these
small<00:07:01.070><c> units</c><00:07:01.460><c> are</c><00:07:01.670><c> then</c><00:07:01.790><c> assembled</c><00:07:02.270><c> together</c>

00:07:02.380 --> 00:07:02.390 align:start position:0%
small units are then assembled together
 

00:07:02.390 --> 00:07:04.360 align:start position:0%
small units are then assembled together
so<00:07:03.080><c> that</c><00:07:03.230><c> they're</c><00:07:03.380><c> collaborations</c><00:07:04.130><c> will</c>

00:07:04.360 --> 00:07:04.370 align:start position:0%
so that they're collaborations will
 

00:07:04.370 --> 00:07:10.210 align:start position:0%
so that they're collaborations will
satisfy<00:07:04.850><c> our</c><00:07:05.090><c> feature</c><00:07:08.800><c> let's</c><00:07:09.800><c> take</c><00:07:09.950><c> a</c><00:07:09.980><c> moment</c>

00:07:10.210 --> 00:07:10.220 align:start position:0%
satisfy our feature let's take a moment
 

00:07:10.220 --> 00:07:12.130 align:start position:0%
satisfy our feature let's take a moment
to<00:07:10.460><c> summarize</c><00:07:10.850><c> the</c><00:07:10.970><c> key</c><00:07:11.150><c> characteristics</c><00:07:11.960><c> of</c>

00:07:12.130 --> 00:07:12.140 align:start position:0%
to summarize the key characteristics of
 

00:07:12.140 --> 00:07:16.780 align:start position:0%
to summarize the key characteristics of
make<00:07:12.530><c> up</c><00:07:12.680><c> a</c><00:07:12.770><c> good</c><00:07:12.920><c> unit</c><00:07:13.220><c> test</c><00:07:13.720><c> as</c><00:07:15.520><c> well</c><00:07:16.520><c> as</c><00:07:16.670><c> the</c>

00:07:16.780 --> 00:07:16.790 align:start position:0%
make up a good unit test as well as the
 

00:07:16.790 --> 00:07:18.580 align:start position:0%
make up a good unit test as well as the
normal<00:07:17.120><c> conditions</c><00:07:17.630><c> you</c><00:07:17.810><c> wanting</c><00:07:18.200><c> to</c><00:07:18.320><c> start</c>

00:07:18.580 --> 00:07:18.590 align:start position:0%
normal conditions you wanting to start
 

00:07:18.590 --> 00:07:20.770 align:start position:0%
normal conditions you wanting to start
you<00:07:18.890><c> wanting</c><00:07:19.160><c> to</c><00:07:19.190><c> test</c><00:07:19.490><c> your</c><00:07:19.850><c> failure</c>

00:07:20.770 --> 00:07:20.780 align:start position:0%
you wanting to test your failure
 

00:07:20.780 --> 00:07:23.770 align:start position:0%
you wanting to test your failure
conditions<00:07:21.610><c> invalid</c><00:07:22.610><c> inputs</c><00:07:23.030><c> and</c><00:07:23.420><c> boundary</c>

00:07:23.770 --> 00:07:23.780 align:start position:0%
conditions invalid inputs and boundary
 

00:07:23.780 --> 00:07:26.080 align:start position:0%
conditions invalid inputs and boundary
conditions<00:07:24.350><c> you</c><00:07:25.160><c> can</c><00:07:25.280><c> end</c><00:07:25.400><c> up</c><00:07:25.490><c> writing</c><00:07:25.730><c> a</c><00:07:25.880><c> lot</c>

00:07:26.080 --> 00:07:26.090 align:start position:0%
conditions you can end up writing a lot
 

00:07:26.090 --> 00:07:31.060 align:start position:0%
conditions you can end up writing a lot
of<00:07:26.300><c> unit</c><00:07:26.600><c> tests</c><00:07:29.410><c> unit</c><00:07:30.410><c> tests</c><00:07:30.650><c> must</c><00:07:30.860><c> always</c>

00:07:31.060 --> 00:07:31.070 align:start position:0%
of unit tests unit tests must always
 

00:07:31.070 --> 00:07:33.340 align:start position:0%
of unit tests unit tests must always
give<00:07:31.400><c> you</c><00:07:31.490><c> the</c><00:07:31.610><c> same</c><00:07:31.850><c> result</c><00:07:32.210><c> every</c><00:07:32.360><c> time</c><00:07:32.630><c> so</c>

00:07:33.340 --> 00:07:33.350 align:start position:0%
give you the same result every time so
 

00:07:33.350 --> 00:07:35.140 align:start position:0%
give you the same result every time so
avoid<00:07:33.890><c> depending</c><00:07:34.340><c> on</c><00:07:34.430><c> things</c><00:07:34.790><c> that</c><00:07:35.000><c> might</c>

00:07:35.140 --> 00:07:35.150 align:start position:0%
avoid depending on things that might
 

00:07:35.150 --> 00:07:38.140 align:start position:0%
avoid depending on things that might
change<00:07:35.390><c> for</c><00:07:35.990><c> example</c><00:07:36.110><c> an</c><00:07:36.740><c> external</c><00:07:37.550><c> server</c><00:07:37.850><c> or</c>

00:07:38.140 --> 00:07:38.150 align:start position:0%
change for example an external server or
 

00:07:38.150 --> 00:07:40.240 align:start position:0%
change for example an external server or
the<00:07:38.180><c> current</c><00:07:39.080><c> time</c><00:07:39.290><c> of</c><00:07:39.470><c> date</c><00:07:39.650><c> because</c><00:07:39.830><c> this</c><00:07:40.130><c> is</c>

00:07:40.240 --> 00:07:40.250 align:start position:0%
the current time of date because this is
 

00:07:40.250 --> 00:07:41.980 align:start position:0%
the current time of date because this is
going<00:07:40.370><c> to</c><00:07:40.430><c> bring</c><00:07:40.580><c> flakiness</c><00:07:41.210><c> into</c><00:07:41.570><c> your</c><00:07:41.690><c> unit</c>

00:07:41.980 --> 00:07:41.990 align:start position:0%
going to bring flakiness into your unit
 

00:07:41.990 --> 00:07:46.840 align:start position:0%
going to bring flakiness into your unit
tests<00:07:44.710><c> unit</c><00:07:45.710><c> tests</c><00:07:45.950><c> should</c><00:07:46.040><c> exercise</c><00:07:46.550><c> one</c>

00:07:46.840 --> 00:07:46.850 align:start position:0%
tests unit tests should exercise one
 

00:07:46.850 --> 00:07:49.960 align:start position:0%
tests unit tests should exercise one
specific<00:07:47.360><c> aspect</c><00:07:47.540><c> of</c><00:07:47.990><c> your</c><00:07:48.170><c> code</c><00:07:48.520><c> at</c><00:07:49.520><c> a</c><00:07:49.580><c> time</c>

00:07:49.960 --> 00:07:49.970 align:start position:0%
specific aspect of your code at a time
 

00:07:49.970 --> 00:07:52.540 align:start position:0%
specific aspect of your code at a time
you<00:07:50.930><c> wanting</c><00:07:51.290><c> to</c><00:07:51.320><c> see</c><00:07:51.800><c> that</c><00:07:51.830><c> a</c><00:07:52.070><c> failure</c><00:07:52.340><c> in</c><00:07:52.490><c> a</c>

00:07:52.540 --> 00:07:52.550 align:start position:0%
you wanting to see that a failure in a
 

00:07:52.550 --> 00:07:54.160 align:start position:0%
you wanting to see that a failure in a
unit<00:07:52.820><c> test</c><00:07:52.970><c> will</c><00:07:53.180><c> lead</c><00:07:53.330><c> you</c><00:07:53.450><c> very</c><00:07:53.660><c> quickly</c><00:07:53.990><c> to</c>

00:07:54.160 --> 00:07:54.170 align:start position:0%
unit test will lead you very quickly to
 

00:07:54.170 --> 00:07:58.300 align:start position:0%
unit test will lead you very quickly to
an<00:07:54.440><c> actual</c><00:07:54.740><c> bug</c><00:07:54.920><c> in</c><00:07:55.040><c> your</c><00:07:55.070><c> code</c><00:07:57.070><c> and</c><00:07:58.070><c> when</c><00:07:58.220><c> you</c>

00:07:58.300 --> 00:07:58.310 align:start position:0%
an actual bug in your code and when you
 

00:07:58.310 --> 00:08:00.340 align:start position:0%
an actual bug in your code and when you
write<00:07:58.490><c> unit</c><00:07:58.760><c> tests</c><00:07:59.150><c> avoid</c><00:07:59.720><c> making</c><00:07:59.930><c> too</c><00:08:00.260><c> many</c>

00:08:00.340 --> 00:08:00.350 align:start position:0%
write unit tests avoid making too many
 

00:08:00.350 --> 00:08:01.660 align:start position:0%
write unit tests avoid making too many
assumptions<00:08:00.740><c> on</c><00:08:01.040><c> the</c><00:08:01.130><c> actual</c><00:08:01.430><c> implementation</c>

00:08:01.660 --> 00:08:01.670 align:start position:0%
assumptions on the actual implementation
 

00:08:01.670 --> 00:08:04.600 align:start position:0%
assumptions on the actual implementation
of<00:08:02.180><c> your</c><00:08:02.330><c> code</c><00:08:02.600><c> you</c><00:08:03.560><c> want</c><00:08:03.740><c> your</c><00:08:03.950><c> unit</c><00:08:04.280><c> has</c><00:08:04.430><c> to</c>

00:08:04.600 --> 00:08:04.610 align:start position:0%
of your code you want your unit has to
 

00:08:04.610 --> 00:08:06.280 align:start position:0%
of your code you want your unit has to
test<00:08:04.820><c> behavior</c><00:08:05.330><c> that</c><00:08:05.630><c> way</c><00:08:05.810><c> you</c><00:08:05.870><c> avoid</c>

00:08:06.280 --> 00:08:06.290 align:start position:0%
test behavior that way you avoid
 

00:08:06.290 --> 00:08:07.780 align:start position:0%
test behavior that way you avoid
rewriting<00:08:06.950><c> your</c><00:08:06.980><c> tests</c><00:08:07.370><c> when</c><00:08:07.640><c> your</c>

00:08:07.780 --> 00:08:07.790 align:start position:0%
rewriting your tests when your
 

00:08:07.790 --> 00:08:13.060 align:start position:0%
rewriting your tests when your
implementations<00:08:08.480><c> changing</c><00:08:09.700><c> and</c><00:08:11.920><c> one</c><00:08:12.920><c> of</c><00:08:13.010><c> the</c>

00:08:13.060 --> 00:08:13.070 align:start position:0%
implementations changing and one of the
 

00:08:13.070 --> 00:08:14.590 align:start position:0%
implementations changing and one of the
most<00:08:13.190><c> important</c><00:08:13.580><c> aspects</c><00:08:13.910><c> of</c><00:08:14.030><c> unit</c><00:08:14.330><c> test</c><00:08:14.510><c> is</c>

00:08:14.590 --> 00:08:14.600 align:start position:0%
most important aspects of unit test is
 

00:08:14.600 --> 00:08:16.210 align:start position:0%
most important aspects of unit test is
they've<00:08:14.780><c> got</c><00:08:14.930><c> to</c><00:08:15.050><c> be</c><00:08:15.170><c> fast</c><00:08:15.470><c> especially</c>

00:08:16.210 --> 00:08:16.220 align:start position:0%
they've got to be fast especially
 

00:08:16.220 --> 00:08:17.740 align:start position:0%
they've got to be fast especially
because<00:08:16.640><c> you're</c><00:08:16.820><c> writing</c><00:08:17.000><c> so</c><00:08:17.240><c> many</c><00:08:17.420><c> of</c><00:08:17.600><c> them</c>

00:08:17.740 --> 00:08:17.750 align:start position:0%
because you're writing so many of them
 

00:08:17.750 --> 00:08:20.590 align:start position:0%
because you're writing so many of them
and<00:08:17.960><c> you're</c><00:08:18.170><c> in</c><00:08:18.260><c> TDD</c><00:08:18.650><c> workflow</c><00:08:19.480><c> running</c><00:08:20.480><c> them</c>

00:08:20.590 --> 00:08:20.600 align:start position:0%
and you're in TDD workflow running them
 

00:08:20.600 --> 00:08:23.560 align:start position:0%
and you're in TDD workflow running them
rapidly<00:08:20.930><c> and</c><00:08:21.670><c> it</c><00:08:22.670><c> would</c><00:08:22.850><c> it</c><00:08:23.420><c> would</c><00:08:23.510><c> be</c>

00:08:23.560 --> 00:08:23.570 align:start position:0%
rapidly and it would it would be
 

00:08:23.570 --> 00:08:25.240 align:start position:0%
rapidly and it would it would be
terrible<00:08:24.020><c> if</c><00:08:24.170><c> they</c><00:08:24.320><c> were</c><00:08:24.500><c> you</c><00:08:25.100><c> were</c>

00:08:25.240 --> 00:08:25.250 align:start position:0%
terrible if they were you were
 

00:08:25.250 --> 00:08:27.130 align:start position:0%
terrible if they were you were
discouraged<00:08:26.030><c> from</c><00:08:26.120><c> writing</c><00:08:26.360><c> tests</c><00:08:26.990><c> or</c>

00:08:27.130 --> 00:08:27.140 align:start position:0%
discouraged from writing tests or
 

00:08:27.140 --> 00:08:29.200 align:start position:0%
discouraged from writing tests or
refactoring<00:08:27.980><c> your</c><00:08:28.130><c> code</c><00:08:28.370><c> because</c><00:08:28.940><c> of</c><00:08:29.120><c> the</c>

00:08:29.200 --> 00:08:29.210 align:start position:0%
refactoring your code because of the
 

00:08:29.210 --> 00:08:32.290 align:start position:0%
refactoring your code because of the
pain<00:08:29.990><c> in</c><00:08:30.950><c> the</c><00:08:31.190><c> execution</c><00:08:31.790><c> time</c><00:08:31.970><c> of</c><00:08:32.000><c> those</c>

00:08:32.290 --> 00:08:32.300 align:start position:0%
pain in the execution time of those
 

00:08:32.300 --> 00:08:36.850 align:start position:0%
pain in the execution time of those
tests<00:08:32.780><c> and</c><00:08:34.570><c> finally</c><00:08:35.570><c> unit</c><00:08:36.440><c> tests</c><00:08:36.710><c> are</c><00:08:36.800><c> an</c>

00:08:36.850 --> 00:08:36.860 align:start position:0%
tests and finally unit tests are an
 

00:08:36.860 --> 00:08:38.409 align:start position:0%
tests and finally unit tests are an
excellent<00:08:37.039><c> source</c><00:08:37.190><c> of</c><00:08:37.490><c> documentation</c><00:08:38.060><c> and</c>

00:08:38.409 --> 00:08:38.419 align:start position:0%
excellent source of documentation and
 

00:08:38.419 --> 00:08:40.240 align:start position:0%
excellent source of documentation and
the<00:08:38.840><c> way</c><00:08:38.990><c> that's</c><00:08:39.200><c> constantly</c><00:08:39.680><c> evolving</c><00:08:40.099><c> with</c>

00:08:40.240 --> 00:08:40.250 align:start position:0%
the way that's constantly evolving with
 

00:08:40.250 --> 00:08:42.580 align:start position:0%
the way that's constantly evolving with
your<00:08:40.370><c> code</c><00:08:40.580><c> as</c><00:08:40.789><c> it</c><00:08:40.940><c> changes</c><00:08:41.479><c> unlike</c><00:08:41.990><c> static</c>

00:08:42.580 --> 00:08:42.590 align:start position:0%
your code as it changes unlike static
 

00:08:42.590 --> 00:08:48.420 align:start position:0%
your code as it changes unlike static
documents<00:08:43.250><c> that</c><00:08:43.520><c> will</c><00:08:43.820><c> stagnate</c><00:08:44.060><c> over</c><00:08:44.600><c> time</c>

00:08:48.420 --> 00:08:48.430 align:start position:0%
 
 

00:08:48.430 --> 00:08:50.560 align:start position:0%
 
let's<00:08:49.430><c> write</c><00:08:49.610><c> a</c><00:08:49.640><c> unit</c><00:08:49.910><c> test</c><00:08:49.970><c> for</c><00:08:50.300><c> our</c><00:08:50.330><c> add</c>

00:08:50.560 --> 00:08:50.570 align:start position:0%
let's write a unit test for our add
 

00:08:50.570 --> 00:08:53.230 align:start position:0%
let's write a unit test for our add
notes<00:08:50.810><c> activity</c><00:08:51.460><c> this</c><00:08:52.460><c> activity</c><00:08:53.030><c> is</c><00:08:53.090><c> going</c><00:08:53.150><c> to</c>

00:08:53.230 --> 00:08:53.240 align:start position:0%
notes activity this activity is going to
 

00:08:53.240 --> 00:08:53.800 align:start position:0%
notes activity this activity is going to
take<00:08:53.480><c> in</c>

00:08:53.800 --> 00:08:53.810 align:start position:0%
take in
 

00:08:53.810 --> 00:08:54.940 align:start position:0%
take in
user<00:08:53.960><c> input</c><00:08:54.440><c> and</c><00:08:54.620><c> then</c><00:08:54.710><c> we're</c><00:08:54.800><c> going</c><00:08:54.890><c> to</c>

00:08:54.940 --> 00:08:54.950 align:start position:0%
user input and then we're going to
 

00:08:54.950 --> 00:08:56.530 align:start position:0%
user input and then we're going to
persist<00:08:55.279><c> it</c><00:08:55.490><c> to</c><00:08:55.610><c> local</c><00:08:55.790><c> storage</c><00:08:56.180><c> on</c><00:08:56.450><c> the</c>

00:08:56.530 --> 00:08:56.540 align:start position:0%
persist it to local storage on the
 

00:08:56.540 --> 00:09:01.060 align:start position:0%
persist it to local storage on the
device<00:08:59.080><c> okay</c><00:09:00.080><c> so</c><00:09:00.140><c> we're</c><00:09:00.350><c> going</c><00:09:00.440><c> to</c><00:09:00.500><c> create</c><00:09:00.650><c> the</c>

00:09:01.060 --> 00:09:01.070 align:start position:0%
device okay so we're going to create the
 

00:09:01.070 --> 00:09:03.040 align:start position:0%
device okay so we're going to create the
add<00:09:01.279><c> note</c><00:09:01.580><c> activity</c><00:09:02.120><c> class</c><00:09:02.390><c> and</c><00:09:02.720><c> the</c><00:09:02.779><c> select</c>

00:09:03.040 --> 00:09:03.050 align:start position:0%
add note activity class and the select
 

00:09:03.050 --> 00:09:04.930 align:start position:0%
add note activity class and the select
stand<00:09:03.290><c> activity</c><00:09:03.830><c> which</c><00:09:04.310><c> is</c><00:09:04.520><c> an</c><00:09:04.670><c> android</c>

00:09:04.930 --> 00:09:04.940 align:start position:0%
stand activity which is an android
 

00:09:04.940 --> 00:09:07.780 align:start position:0%
stand activity which is an android
framework<00:09:05.180><c> class</c><00:09:05.830><c> it</c><00:09:06.830><c> has</c><00:09:07.010><c> a</c><00:09:07.040><c> view</c><00:09:07.400><c> which</c><00:09:07.640><c> is</c>

00:09:07.780 --> 00:09:07.790 align:start position:0%
framework class it has a view which is
 

00:09:07.790 --> 00:09:09.329 align:start position:0%
framework class it has a view which is
going<00:09:07.910><c> to</c><00:09:08.000><c> be</c><00:09:08.060><c> inflated</c><00:09:08.330><c> with</c><00:09:08.540><c> a</c><00:09:08.630><c> layout</c><00:09:08.810><c> and</c>

00:09:09.329 --> 00:09:09.339 align:start position:0%
going to be inflated with a layout and
 

00:09:09.339 --> 00:09:11.710 align:start position:0%
going to be inflated with a layout and
the<00:09:10.339><c> user</c><00:09:10.490><c> will</c><00:09:10.640><c> enter</c><00:09:10.700><c> their</c><00:09:10.940><c> data</c><00:09:11.120><c> here</c><00:09:11.510><c> and</c>

00:09:11.710 --> 00:09:11.720 align:start position:0%
the user will enter their data here and
 

00:09:11.720 --> 00:09:13.090 align:start position:0%
the user will enter their data here and
then<00:09:11.900><c> we're</c><00:09:12.050><c> going</c><00:09:12.140><c> to</c><00:09:12.200><c> persist</c><00:09:12.560><c> that</c><00:09:12.830><c> note</c>

00:09:13.090 --> 00:09:13.100 align:start position:0%
then we're going to persist that note
 

00:09:13.100 --> 00:09:15.310 align:start position:0%
then we're going to persist that note
into<00:09:13.670><c> Android</c><00:09:14.210><c> shared</c><00:09:14.630><c> preferences</c>

00:09:15.310 --> 00:09:15.320 align:start position:0%
into Android shared preferences
 

00:09:15.320 --> 00:09:21.010 align:start position:0%
into Android shared preferences
mechanism<00:09:18.910><c> so</c><00:09:19.910><c> it's</c><00:09:20.180><c> conceivable</c><00:09:20.540><c> that</c><00:09:20.900><c> as</c>

00:09:21.010 --> 00:09:21.020 align:start position:0%
mechanism so it's conceivable that as
 

00:09:21.020 --> 00:09:22.600 align:start position:0%
mechanism so it's conceivable that as
our<00:09:21.140><c> application</c><00:09:21.680><c> evolves</c><00:09:22.100><c> so</c><00:09:22.160><c> does</c><00:09:22.460><c> our</c>

00:09:22.600 --> 00:09:22.610 align:start position:0%
our application evolves so does our
 

00:09:22.610 --> 00:09:25.060 align:start position:0%
our application evolves so does our
requirement<00:09:23.240><c> and</c><00:09:23.480><c> perhaps</c><00:09:24.020><c> our</c><00:09:24.650><c> storage</c>

00:09:25.060 --> 00:09:25.070 align:start position:0%
requirement and perhaps our storage
 

00:09:25.070 --> 00:09:27.490 align:start position:0%
requirement and perhaps our storage
requirements<00:09:25.610><c> evolve</c><00:09:25.910><c> to</c><00:09:26.690><c> persist</c><00:09:27.140><c> the</c><00:09:27.260><c> notes</c>

00:09:27.490 --> 00:09:27.500 align:start position:0%
requirements evolve to persist the notes
 

00:09:27.500 --> 00:09:30.040 align:start position:0%
requirements evolve to persist the notes
on<00:09:27.830><c> to</c><00:09:28.070><c> cloud</c><00:09:28.370><c> storage</c><00:09:28.610><c> and</c><00:09:29.180><c> we</c><00:09:29.540><c> have</c><00:09:29.720><c> to</c><00:09:29.870><c> build</c>

00:09:30.040 --> 00:09:30.050 align:start position:0%
on to cloud storage and we have to build
 

00:09:30.050 --> 00:09:32.980 align:start position:0%
on to cloud storage and we have to build
some<00:09:30.800><c> kind</c><00:09:30.830><c> of</c><00:09:31.339><c> synchronization</c><00:09:31.990><c> mechanism</c>

00:09:32.980 --> 00:09:32.990 align:start position:0%
some kind of synchronization mechanism
 

00:09:32.990 --> 00:09:35.079 align:start position:0%
some kind of synchronization mechanism
for<00:09:33.080><c> local</c><00:09:33.350><c> storage</c><00:09:33.620><c> for</c><00:09:33.950><c> the</c><00:09:34.460><c> offline</c><00:09:34.820><c> use</c>

00:09:35.079 --> 00:09:35.089 align:start position:0%
for local storage for the offline use
 

00:09:35.089 --> 00:09:38.050 align:start position:0%
for local storage for the offline use
case<00:09:35.620><c> and</c><00:09:36.620><c> in</c><00:09:37.040><c> these</c><00:09:37.220><c> cases</c><00:09:37.520><c> we</c><00:09:37.850><c> see</c>

00:09:38.050 --> 00:09:38.060 align:start position:0%
case and in these cases we see
 

00:09:38.060 --> 00:09:40.030 align:start position:0%
case and in these cases we see
opportunities<00:09:38.150><c> for</c><00:09:38.870><c> abstraction</c><00:09:39.529><c> we</c><00:09:39.830><c> might</c>

00:09:40.030 --> 00:09:40.040 align:start position:0%
opportunities for abstraction we might
 

00:09:40.040 --> 00:09:42.579 align:start position:0%
opportunities for abstraction we might
in<00:09:40.490><c> this</c><00:09:40.670><c> example</c><00:09:41.120><c> see</c><00:09:41.690><c> that</c><00:09:42.110><c> we</c><00:09:42.170><c> can</c><00:09:42.320><c> extract</c>

00:09:42.579 --> 00:09:42.589 align:start position:0%
in this example see that we can extract
 

00:09:42.589 --> 00:09:45.700 align:start position:0%
in this example see that we can extract
a<00:09:42.740><c> notes</c><00:09:42.950><c> repository</c><00:09:43.610><c> and</c><00:09:43.960><c> however</c><00:09:44.960><c> one</c><00:09:45.680><c> of</c>

00:09:45.700 --> 00:09:45.710 align:start position:0%
a notes repository and however one of
 

00:09:45.710 --> 00:09:47.290 align:start position:0%
a notes repository and however one of
the<00:09:45.830><c> key</c><00:09:46.010><c> aspects</c><00:09:46.790><c> of</c><00:09:46.880><c> test-driven</c>

00:09:47.290 --> 00:09:47.300 align:start position:0%
the key aspects of test-driven
 

00:09:47.300 --> 00:09:49.840 align:start position:0%
the key aspects of test-driven
development<00:09:47.570><c> is</c><00:09:48.170><c> that</c><00:09:48.560><c> we</c><00:09:48.740><c> only</c><00:09:49.040><c> start</c><00:09:49.550><c> by</c>

00:09:49.840 --> 00:09:49.850 align:start position:0%
development is that we only start by
 

00:09:49.850 --> 00:09:51.610 align:start position:0%
development is that we only start by
writing<00:09:50.089><c> the</c><00:09:50.270><c> simplest</c><00:09:50.600><c> case</c><00:09:50.870><c> first</c><00:09:50.900><c> and</c><00:09:51.500><c> then</c>

00:09:51.610 --> 00:09:51.620 align:start position:0%
writing the simplest case first and then
 

00:09:51.620 --> 00:09:53.500 align:start position:0%
writing the simplest case first and then
we<00:09:51.800><c> iterate</c><00:09:51.950><c> so</c><00:09:52.490><c> we're</c><00:09:52.940><c> going</c><00:09:53.029><c> to</c><00:09:53.089><c> resist</c><00:09:53.360><c> the</c>

00:09:53.500 --> 00:09:53.510 align:start position:0%
we iterate so we're going to resist the
 

00:09:53.510 --> 00:09:57.640 align:start position:0%
we iterate so we're going to resist the
temptation<00:09:54.050><c> to</c><00:09:54.080><c> do</c><00:09:54.260><c> this</c><00:09:54.380><c> early</c><00:09:56.440><c> let's</c><00:09:57.440><c> take</c><00:09:57.620><c> a</c>

00:09:57.640 --> 00:09:57.650 align:start position:0%
temptation to do this early let's take a
 

00:09:57.650 --> 00:10:01.360 align:start position:0%
temptation to do this early let's take a
look<00:09:57.890><c> at</c><00:09:58.040><c> a</c><00:09:58.910><c> sample</c><00:09:59.330><c> of</c><00:09:59.860><c> what</c><00:10:00.860><c> an</c><00:10:00.950><c> idealized</c>

00:10:01.360 --> 00:10:01.370 align:start position:0%
look at a sample of what an idealized
 

00:10:01.370 --> 00:10:03.490 align:start position:0%
look at a sample of what an idealized
unit<00:10:01.760><c> test</c><00:10:02.000><c> would</c><00:10:02.150><c> look</c><00:10:02.330><c> like</c><00:10:02.540><c> they're</c>

00:10:03.490 --> 00:10:03.500 align:start position:0%
unit test would look like they're
 

00:10:03.500 --> 00:10:07.240 align:start position:0%
unit test would look like they're
generally<00:10:03.890><c> built</c><00:10:04.339><c> up</c><00:10:04.460><c> into</c><00:10:04.670><c> three</c><00:10:04.990><c> stages</c><00:10:06.250><c> so</c>

00:10:07.240 --> 00:10:07.250 align:start position:0%
generally built up into three stages so
 

00:10:07.250 --> 00:10:09.280 align:start position:0%
generally built up into three stages so
the<00:10:07.670><c> first</c><00:10:07.910><c> stage</c><00:10:08.150><c> is</c><00:10:08.480><c> you're</c><00:10:08.870><c> setting</c><00:10:09.080><c> the</c>

00:10:09.280 --> 00:10:09.290 align:start position:0%
the first stage is you're setting the
 

00:10:09.290 --> 00:10:11.020 align:start position:0%
the first stage is you're setting the
conditions<00:10:09.770><c> for</c><00:10:09.980><c> the</c><00:10:10.100><c> test</c><00:10:10.400><c> and</c><00:10:10.760><c> this</c>

00:10:11.020 --> 00:10:11.030 align:start position:0%
conditions for the test and this
 

00:10:11.030 --> 00:10:12.810 align:start position:0%
conditions for the test and this
includes<00:10:11.390><c> preparing</c><00:10:11.930><c> the</c><00:10:12.020><c> environment</c>

00:10:12.810 --> 00:10:12.820 align:start position:0%
includes preparing the environment
 

00:10:12.820 --> 00:10:15.160 align:start position:0%
includes preparing the environment
setting<00:10:13.820><c> up</c><00:10:13.940><c> your</c><00:10:14.060><c> dependencies</c><00:10:14.839><c> with</c><00:10:15.140><c> a</c>

00:10:15.160 --> 00:10:15.170 align:start position:0%
setting up your dependencies with a
 

00:10:15.170 --> 00:10:18.280 align:start position:0%
setting up your dependencies with a
required<00:10:15.620><c> state</c><00:10:16.270><c> and</c><00:10:17.270><c> preparing</c><00:10:17.870><c> an</c><00:10:17.960><c> input</c>

00:10:18.280 --> 00:10:18.290 align:start position:0%
required state and preparing an input
 

00:10:18.290 --> 00:10:19.350 align:start position:0%
required state and preparing an input
data

00:10:19.350 --> 00:10:19.360 align:start position:0%
data
 

00:10:19.360 --> 00:10:21.910 align:start position:0%
data
next<00:10:20.360><c> we'll</c><00:10:20.510><c> exercise</c><00:10:20.960><c> the</c><00:10:21.110><c> code</c><00:10:21.350><c> under</c><00:10:21.500><c> test</c>

00:10:21.910 --> 00:10:21.920 align:start position:0%
next we'll exercise the code under test
 

00:10:21.920 --> 00:10:24.850 align:start position:0%
next we'll exercise the code under test
before<00:10:22.880><c> finally</c><00:10:23.330><c> making</c><00:10:24.050><c> assertions</c><00:10:24.350><c> on</c><00:10:24.770><c> the</c>

00:10:24.850 --> 00:10:24.860 align:start position:0%
before finally making assertions on the
 

00:10:24.860 --> 00:10:28.090 align:start position:0%
before finally making assertions on the
results<00:10:25.310><c> or</c><00:10:25.460><c> the</c><00:10:25.580><c> state</c><00:10:26.560><c> so</c><00:10:27.560><c> I</c><00:10:27.770><c> like</c><00:10:27.980><c> to</c>

00:10:28.090 --> 00:10:28.100 align:start position:0%
results or the state so I like to
 

00:10:28.100 --> 00:10:29.790 align:start position:0%
results or the state so I like to
clearly<00:10:28.370><c> separate</c><00:10:28.820><c> each</c><00:10:29.000><c> of</c><00:10:29.210><c> these</c><00:10:29.300><c> three</c>

00:10:29.790 --> 00:10:29.800 align:start position:0%
clearly separate each of these three
 

00:10:29.800 --> 00:10:32.500 align:start position:0%
clearly separate each of these three
stages<00:10:30.800><c> of</c><00:10:31.070><c> the</c><00:10:31.190><c> tests</c><00:10:31.520><c> and</c><00:10:31.640><c> bring</c><00:10:32.390><c> the</c>

00:10:32.500 --> 00:10:32.510 align:start position:0%
stages of the tests and bring the
 

00:10:32.510 --> 00:10:35.110 align:start position:0%
stages of the tests and bring the
pertinent<00:10:33.050><c> aspects</c><00:10:33.710><c> of</c><00:10:33.920><c> each</c><00:10:34.190><c> test</c><00:10:34.760><c> like</c>

00:10:35.110 --> 00:10:35.120 align:start position:0%
pertinent aspects of each test like
 

00:10:35.120 --> 00:10:36.670 align:start position:0%
pertinent aspects of each test like
front<00:10:35.420><c> and</c><00:10:35.630><c> center</c><00:10:35.960><c> to</c><00:10:36.110><c> make</c><00:10:36.350><c> for</c><00:10:36.530><c> really</c>

00:10:36.670 --> 00:10:36.680 align:start position:0%
front and center to make for really
 

00:10:36.680 --> 00:10:42.880 align:start position:0%
front and center to make for really
readable<00:10:37.160><c> test</c><00:10:40.480><c> so</c><00:10:41.480><c> up</c><00:10:41.660><c> until</c><00:10:41.780><c> now</c><00:10:42.170><c> with</c><00:10:42.830><c> the</c>

00:10:42.880 --> 00:10:42.890 align:start position:0%
readable test so up until now with the
 

00:10:42.890 --> 00:10:44.949 align:start position:0%
readable test so up until now with the
Android<00:10:43.160><c> platform</c><00:10:43.339><c> you're</c><00:10:44.030><c> writing</c><00:10:44.780><c> your</c>

00:10:44.949 --> 00:10:44.959 align:start position:0%
Android platform you're writing your
 

00:10:44.959 --> 00:10:47.020 align:start position:0%
Android platform you're writing your
unit<00:10:45.260><c> tests</c><00:10:45.650><c> using</c><00:10:46.100><c> the</c><00:10:46.280><c> mockable</c><00:10:46.550><c> jar</c><00:10:46.880><c> in</c>

00:10:47.020 --> 00:10:47.030 align:start position:0%
unit tests using the mockable jar in
 

00:10:47.030 --> 00:10:48.760 align:start position:0%
unit tests using the mockable jar in
conjunction<00:10:47.600><c> with</c><00:10:47.780><c> a</c><00:10:47.810><c> marking</c><00:10:48.140><c> library</c><00:10:48.530><c> such</c>

00:10:48.760 --> 00:10:48.770 align:start position:0%
conjunction with a marking library such
 

00:10:48.770 --> 00:10:51.970 align:start position:0%
conjunction with a marking library such
as<00:10:49.010><c> mojito</c><00:10:49.550><c> and</c><00:10:49.900><c> let's</c><00:10:50.900><c> take</c><00:10:51.110><c> a</c><00:10:51.140><c> look</c><00:10:51.350><c> at</c><00:10:51.560><c> an</c>

00:10:51.970 --> 00:10:51.980 align:start position:0%
as mojito and let's take a look at an
 

00:10:51.980 --> 00:10:55.800 align:start position:0%
as mojito and let's take a look at an
example<00:10:52.370><c> of</c><00:10:52.730><c> our</c><00:10:53.660><c> test</c><00:10:54.020><c> written</c><00:10:54.529><c> with</c><00:10:54.620><c> mojito</c>

00:10:55.800 --> 00:10:55.810 align:start position:0%
example of our test written with mojito
 

00:10:55.810 --> 00:11:00.530 align:start position:0%
example of our test written with mojito
okay<00:10:57.100><c> wow</c><00:10:58.100><c> that's</c><00:10:59.060><c> a</c><00:10:59.209><c> lot</c><00:10:59.360><c> of</c><00:10:59.390><c> code</c>

00:11:00.530 --> 00:11:00.540 align:start position:0%
okay wow that's a lot of code
 

00:11:00.540 --> 00:11:03.230 align:start position:0%
okay wow that's a lot of code
okay<00:11:01.350><c> so</c><00:11:01.410><c> because</c><00:11:02.340><c> of</c><00:11:02.670><c> we</c><00:11:02.790><c> have</c><00:11:02.820><c> so</c><00:11:03.150><c> many</c>

00:11:03.230 --> 00:11:03.240 align:start position:0%
okay so because of we have so many
 

00:11:03.240 --> 00:11:04.760 align:start position:0%
okay so because of we have so many
interactions<00:11:03.690><c> with</c><00:11:03.930><c> the</c><00:11:04.080><c> android</c><00:11:04.530><c> framework</c>

00:11:04.760 --> 00:11:04.770 align:start position:0%
interactions with the android framework
 

00:11:04.770 --> 00:11:06.980 align:start position:0%
interactions with the android framework
and<00:11:05.250><c> we're</c><00:11:06.150><c> going</c><00:11:06.300><c> to</c><00:11:06.330><c> need</c><00:11:06.540><c> to</c><00:11:06.750><c> provide</c>

00:11:06.980 --> 00:11:06.990 align:start position:0%
and we're going to need to provide
 

00:11:06.990 --> 00:11:09.350 align:start position:0%
and we're going to need to provide
stubbing<00:11:07.620><c> behavior</c><00:11:08.130><c> for</c><00:11:08.460><c> all</c><00:11:08.670><c> of</c><00:11:08.880><c> them</c><00:11:09.090><c> in</c>

00:11:09.350 --> 00:11:09.360 align:start position:0%
stubbing behavior for all of them in
 

00:11:09.360 --> 00:11:11.810 align:start position:0%
stubbing behavior for all of them in
order<00:11:09.780><c> just</c><00:11:09.810><c> to</c><00:11:10.230><c> make</c><00:11:10.470><c> just</c><00:11:11.310><c> to</c><00:11:11.370><c> satisfy</c><00:11:11.520><c> the</c>

00:11:11.810 --> 00:11:11.820 align:start position:0%
order just to make just to satisfy the
 

00:11:11.820 --> 00:11:14.380 align:start position:0%
order just to make just to satisfy the
execution<00:11:12.510><c> paths</c><00:11:12.720><c> of</c><00:11:12.990><c> our</c><00:11:13.200><c> tests</c><00:11:13.470><c> and</c>

00:11:14.380 --> 00:11:14.390 align:start position:0%
execution paths of our tests and
 

00:11:14.390 --> 00:11:17.420 align:start position:0%
execution paths of our tests and
furthermore<00:11:15.390><c> because</c><00:11:15.630><c> Android</c><00:11:16.620><c> uses</c><00:11:17.190><c> a</c><00:11:17.220><c> lot</c>

00:11:17.420 --> 00:11:17.430 align:start position:0%
furthermore because Android uses a lot
 

00:11:17.430 --> 00:11:19.160 align:start position:0%
furthermore because Android uses a lot
of<00:11:17.460><c> static</c><00:11:17.910><c> methods</c><00:11:18.300><c> we're</c><00:11:18.750><c> forced</c><00:11:19.080><c> to</c>

00:11:19.160 --> 00:11:19.170 align:start position:0%
of static methods we're forced to
 

00:11:19.170 --> 00:11:21.290 align:start position:0%
of static methods we're forced to
introduce<00:11:19.590><c> a</c><00:11:19.800><c> second</c><00:11:20.340><c> mocking</c><00:11:20.640><c> library</c><00:11:20.850><c> power</c>

00:11:21.290 --> 00:11:21.300 align:start position:0%
introduce a second mocking library power
 

00:11:21.300 --> 00:11:23.180 align:start position:0%
introduce a second mocking library power
mark<00:11:21.630><c> that</c><00:11:22.020><c> will</c><00:11:22.170><c> handle</c><00:11:22.350><c> this</c><00:11:22.650><c> special</c><00:11:22.980><c> case</c>

00:11:23.180 --> 00:11:23.190 align:start position:0%
mark that will handle this special case
 

00:11:23.190 --> 00:11:26.420 align:start position:0%
mark that will handle this special case
for<00:11:23.430><c> us</c><00:11:23.520><c> and</c><00:11:24.770><c> there</c><00:11:25.770><c> are</c><00:11:25.830><c> also</c><00:11:25.950><c> some</c><00:11:26.310><c> pretty</c>

00:11:26.420 --> 00:11:26.430 align:start position:0%
for us and there are also some pretty
 

00:11:26.430 --> 00:11:29.770 align:start position:0%
for us and there are also some pretty
bad<00:11:26.700><c> code</c><00:11:27.000><c> smells</c><00:11:27.300><c> here</c><00:11:27.600><c> let's</c><00:11:28.200><c> take</c><00:11:28.350><c> a</c><00:11:28.380><c> look</c>

00:11:29.770 --> 00:11:29.780 align:start position:0%
bad code smells here let's take a look
 

00:11:29.780 --> 00:11:32.590 align:start position:0%
bad code smells here let's take a look
you<00:11:30.780><c> see</c><00:11:30.960><c> we're</c><00:11:31.200><c> forced</c><00:11:31.470><c> to</c><00:11:31.530><c> spy</c><00:11:31.830><c> on</c><00:11:32.100><c> the</c>

00:11:32.590 --> 00:11:32.600 align:start position:0%
you see we're forced to spy on the
 

00:11:32.600 --> 00:11:35.720 align:start position:0%
you see we're forced to spy on the
activity<00:11:33.600><c> under</c><00:11:33.900><c> test</c><00:11:34.170><c> and</c><00:11:34.500><c> we're</c><00:11:35.370><c> needing</c><00:11:35.640><c> to</c>

00:11:35.720 --> 00:11:35.730 align:start position:0%
activity under test and we're needing to
 

00:11:35.730 --> 00:11:37.760 align:start position:0%
activity under test and we're needing to
do<00:11:35.880><c> this</c><00:11:36.060><c> to</c><00:11:36.270><c> modify</c><00:11:36.660><c> its</c><00:11:36.870><c> behavior</c><00:11:37.470><c> and</c>

00:11:37.760 --> 00:11:37.770 align:start position:0%
do this to modify its behavior and
 

00:11:37.770 --> 00:11:39.680 align:start position:0%
do this to modify its behavior and
stubbing<00:11:38.430><c> it</c><00:11:38.550><c> out</c><00:11:38.700><c> and</c><00:11:38.970><c> providing</c><00:11:39.360><c> some</c><00:11:39.510><c> no</c>

00:11:39.680 --> 00:11:39.690 align:start position:0%
stubbing it out and providing some no
 

00:11:39.690 --> 00:11:42.050 align:start position:0%
stubbing it out and providing some no
ops<00:11:39.900><c> so</c><00:11:40.470><c> we're</c><00:11:40.950><c> moving</c><00:11:41.100><c> out</c><00:11:41.430><c> of</c><00:11:41.610><c> the</c><00:11:41.670><c> realms</c><00:11:41.970><c> of</c>

00:11:42.050 --> 00:11:42.060 align:start position:0%
ops so we're moving out of the realms of
 

00:11:42.060 --> 00:11:46.220 align:start position:0%
ops so we're moving out of the realms of
blackbox<00:11:42.480><c> testing</c><00:11:42.630><c> here</c><00:11:43.170><c> and</c><00:11:44.810><c> finally</c><00:11:45.810><c> at</c><00:11:46.140><c> the</c>

00:11:46.220 --> 00:11:46.230 align:start position:0%
blackbox testing here and finally at the
 

00:11:46.230 --> 00:11:48.380 align:start position:0%
blackbox testing here and finally at the
end<00:11:46.380><c> we're</c><00:11:46.770><c> making</c><00:11:47.160><c> assertions</c><00:11:47.820><c> about</c><00:11:48.150><c> the</c>

00:11:48.380 --> 00:11:48.390 align:start position:0%
end we're making assertions about the
 

00:11:48.390 --> 00:11:51.260 align:start position:0%
end we're making assertions about the
implementation<00:11:49.140><c> details</c><00:11:49.940><c> and</c><00:11:50.940><c> if</c><00:11:51.090><c> these</c>

00:11:51.260 --> 00:11:51.270 align:start position:0%
implementation details and if these
 

00:11:51.270 --> 00:11:54.730 align:start position:0%
implementation details and if these
change<00:11:51.660><c> our</c><00:11:51.870><c> tests</c><00:11:52.140><c> will</c><00:11:52.290><c> need</c><00:11:52.440><c> to</c><00:11:52.530><c> change</c><00:11:52.680><c> too</c>

00:11:54.730 --> 00:11:54.740 align:start position:0%
change our tests will need to change too
 

00:11:54.740 --> 00:11:58.100 align:start position:0%
change our tests will need to change too
so<00:11:55.790><c> remembering</c><00:11:56.790><c> the</c><00:11:56.940><c> characteristics</c><00:11:57.690><c> of</c><00:11:57.900><c> a</c>

00:11:58.100 --> 00:11:58.110 align:start position:0%
so remembering the characteristics of a
 

00:11:58.110 --> 00:11:59.900 align:start position:0%
so remembering the characteristics of a
good<00:11:58.140><c> unit</c><00:11:58.560><c> test</c><00:11:58.770><c> let's</c><00:11:59.010><c> take</c><00:11:59.400><c> a</c><00:11:59.430><c> moment</c><00:11:59.670><c> to</c>

00:11:59.900 --> 00:11:59.910 align:start position:0%
good unit test let's take a moment to
 

00:11:59.910 --> 00:12:03.080 align:start position:0%
good unit test let's take a moment to
score<00:12:00.150><c> this</c><00:12:00.300><c> particular</c><00:12:00.630><c> test</c><00:12:01.550><c> well</c><00:12:02.550><c> it</c><00:12:02.880><c> is</c>

00:12:03.080 --> 00:12:03.090 align:start position:0%
score this particular test well it is
 

00:12:03.090 --> 00:12:04.970 align:start position:0%
score this particular test well it is
very<00:12:03.360><c> focused</c><00:12:03.600><c> we're</c><00:12:04.290><c> just</c><00:12:04.500><c> testing</c><00:12:04.680><c> the</c>

00:12:04.970 --> 00:12:04.980 align:start position:0%
very focused we're just testing the
 

00:12:04.980 --> 00:12:07.120 align:start position:0%
very focused we're just testing the
happy<00:12:05.310><c> path</c><00:12:05.520><c> of</c><00:12:05.790><c> our</c><00:12:05.970><c> add</c><00:12:06.120><c> notes</c><00:12:06.390><c> flow</c><00:12:06.660><c> and</c>

00:12:07.120 --> 00:12:07.130 align:start position:0%
happy path of our add notes flow and
 

00:12:07.130 --> 00:12:10.190 align:start position:0%
happy path of our add notes flow and
it's<00:12:08.130><c> certainly</c><00:12:08.520><c> fast</c><00:12:08.880><c> because</c><00:12:09.840><c> it's</c><00:12:09.990><c> running</c>

00:12:10.190 --> 00:12:10.200 align:start position:0%
it's certainly fast because it's running
 

00:12:10.200 --> 00:12:13.850 align:start position:0%
it's certainly fast because it's running
on<00:12:10.260><c> the</c><00:12:10.350><c> local</c><00:12:10.530><c> JVM</c><00:12:11.810><c> however</c><00:12:12.810><c> we</c><00:12:13.350><c> were</c><00:12:13.470><c> making</c>

00:12:13.850 --> 00:12:13.860 align:start position:0%
on the local JVM however we were making
 

00:12:13.860 --> 00:12:15.470 align:start position:0%
on the local JVM however we were making
rather<00:12:14.190><c> a</c><00:12:14.310><c> lot</c><00:12:14.490><c> of</c><00:12:14.580><c> assumptions</c><00:12:14.910><c> about</c><00:12:15.330><c> the</c>

00:12:15.470 --> 00:12:15.480 align:start position:0%
rather a lot of assumptions about the
 

00:12:15.480 --> 00:12:19.490 align:start position:0%
rather a lot of assumptions about the
implementation<00:12:15.720><c> in</c><00:12:16.440><c> that</c><00:12:16.620><c> test</c><00:12:16.920><c> and</c><00:12:17.210><c> and</c><00:12:18.500><c> with</c>

00:12:19.490 --> 00:12:19.500 align:start position:0%
implementation in that test and and with
 

00:12:19.500 --> 00:12:21.170 align:start position:0%
implementation in that test and and with
this<00:12:19.770><c> if</c><00:12:20.130><c> any</c><00:12:20.700><c> of</c><00:12:20.850><c> our</c><00:12:20.910><c> implementation</c>

00:12:21.170 --> 00:12:21.180 align:start position:0%
this if any of our implementation
 

00:12:21.180 --> 00:12:23.240 align:start position:0%
this if any of our implementation
changes<00:12:22.050><c> it's</c><00:12:22.290><c> likely</c><00:12:22.740><c> we'll</c><00:12:22.890><c> need</c><00:12:23.070><c> to</c>

00:12:23.240 --> 00:12:23.250 align:start position:0%
changes it's likely we'll need to
 

00:12:23.250 --> 00:12:26.140 align:start position:0%
changes it's likely we'll need to
rewrite<00:12:23.760><c> that</c><00:12:23.820><c> test</c><00:12:24.210><c> substantially</c><00:12:24.870><c> and</c>

00:12:26.140 --> 00:12:26.150 align:start position:0%
rewrite that test substantially and
 

00:12:26.150 --> 00:12:29.450 align:start position:0%
rewrite that test substantially and
finally<00:12:27.150><c> all</c><00:12:27.780><c> that</c><00:12:27.990><c> excess</c><00:12:28.460><c> boilerplate</c>

00:12:29.450 --> 00:12:29.460 align:start position:0%
finally all that excess boilerplate
 

00:12:29.460 --> 00:12:31.490 align:start position:0%
finally all that excess boilerplate
stubbing<00:12:29.970><c> is</c><00:12:30.090><c> really</c><00:12:30.360><c> distracting</c><00:12:30.720><c> it's</c>

00:12:31.490 --> 00:12:31.500 align:start position:0%
stubbing is really distracting it's
 

00:12:31.500 --> 00:12:33.500 align:start position:0%
stubbing is really distracting it's
distracting<00:12:32.100><c> away</c><00:12:32.250><c> from</c><00:12:32.460><c> the</c><00:12:32.550><c> key</c><00:12:32.760><c> aspects</c><00:12:33.390><c> of</c>

00:12:33.500 --> 00:12:33.510 align:start position:0%
distracting away from the key aspects of
 

00:12:33.510 --> 00:12:35.630 align:start position:0%
distracting away from the key aspects of
the<00:12:34.350><c> test</c><00:12:34.590><c> the</c><00:12:34.740><c> conditions</c><00:12:35.190><c> the</c><00:12:35.310><c> tests</c><00:12:35.550><c> that</c>

00:12:35.630 --> 00:12:35.640 align:start position:0%
the test the conditions the tests that
 

00:12:35.640 --> 00:12:41.390 align:start position:0%
the test the conditions the tests that
you're<00:12:35.850><c> trying</c><00:12:36.180><c> to</c><00:12:36.240><c> document</c><00:12:39.980><c> well</c><00:12:40.980><c> luckily</c>

00:12:41.390 --> 00:12:41.400 align:start position:0%
you're trying to document well luckily
 

00:12:41.400 --> 00:12:43.160 align:start position:0%
you're trying to document well luckily
there's<00:12:41.730><c> a</c><00:12:41.790><c> tool</c><00:12:42.030><c> that</c><00:12:42.180><c> helps</c><00:12:42.360><c> address</c><00:12:42.840><c> some</c>

00:12:43.160 --> 00:12:43.170 align:start position:0%
there's a tool that helps address some
 

00:12:43.170 --> 00:12:46.430 align:start position:0%
there's a tool that helps address some
of<00:12:43.200><c> these</c><00:12:43.410><c> issues</c><00:12:43.730><c> so</c><00:12:44.780><c> introducing</c><00:12:45.780><c> Robo</c>

00:12:46.430 --> 00:12:46.440 align:start position:0%
of these issues so introducing Robo
 

00:12:46.440 --> 00:12:49.760 align:start position:0%
of these issues so introducing Robo
electric<00:12:47.270><c> robolectric</c><00:12:48.270><c> is</c><00:12:48.690><c> an</c><00:12:49.020><c> Android</c><00:12:49.440><c> unit</c>

00:12:49.760 --> 00:12:49.770 align:start position:0%
electric robolectric is an Android unit
 

00:12:49.770 --> 00:12:52.370 align:start position:0%
electric robolectric is an Android unit
testing<00:12:50.220><c> tool</c><00:12:50.580><c> that's</c><00:12:51.330><c> open</c><00:12:51.660><c> source</c><00:12:51.690><c> that</c><00:12:52.170><c> we</c>

00:12:52.370 --> 00:12:52.380 align:start position:0%
testing tool that's open source that we
 

00:12:52.380 --> 00:12:55.550 align:start position:0%
testing tool that's open source that we
are<00:12:52.440><c> actively</c><00:12:52.890><c> contributing</c><00:12:53.820><c> to</c><00:12:53.850><c> and</c><00:12:54.350><c> to</c><00:12:55.350><c> tell</c>

00:12:55.550 --> 00:12:55.560 align:start position:0%
are actively contributing to and to tell
 

00:12:55.560 --> 00:12:57.290 align:start position:0%
are actively contributing to and to tell
you<00:12:55.680><c> more</c><00:12:55.860><c> about</c><00:12:56.250><c> how</c><00:12:56.520><c> you</c><00:12:56.580><c> can</c><00:12:56.880><c> write</c><00:12:57.030><c> great</c>

00:12:57.290 --> 00:12:57.300 align:start position:0%
you more about how you can write great
 

00:12:57.300 --> 00:12:59.390 align:start position:0%
you more about how you can write great
tests<00:12:57.720><c> with</c><00:12:57.840><c> robolectric</c><00:12:58.290><c> i'm</c><00:12:58.770><c> going</c><00:12:59.160><c> to</c><00:12:59.220><c> hand</c>

00:12:59.390 --> 00:12:59.400 align:start position:0%
tests with robolectric i'm going to hand
 

00:12:59.400 --> 00:13:00.890 align:start position:0%
tests with robolectric i'm going to hand
you<00:12:59.490><c> over</c><00:12:59.520><c> to</c><00:12:59.760><c> christian</c><00:13:00.300><c> williams</c><00:13:00.660><c> the</c>

00:13:00.890 --> 00:13:00.900 align:start position:0%
you over to christian williams the
 

00:13:00.900 --> 00:13:08.020 align:start position:0%
you over to christian williams the
original<00:13:01.260><c> author</c><00:13:01.410><c> of</c><00:13:01.800><c> robolectric</c>

00:13:08.020 --> 00:13:08.030 align:start position:0%
 
 

00:13:08.030 --> 00:13:10.850 align:start position:0%
 
thanks<00:13:09.030><c> Jonathan</c><00:13:09.180><c> it's</c><00:13:10.140><c> awesome</c><00:13:10.620><c> to</c><00:13:10.710><c> see</c><00:13:10.830><c> so</c>

00:13:10.850 --> 00:13:10.860 align:start position:0%
thanks Jonathan it's awesome to see so
 

00:13:10.860 --> 00:13:13.640 align:start position:0%
thanks Jonathan it's awesome to see so
many<00:13:11.040><c> people</c><00:13:11.370><c> who</c><00:13:11.490><c> are</c><00:13:11.520><c> into</c><00:13:12.480><c> Android</c><00:13:12.930><c> testing</c>

00:13:13.640 --> 00:13:13.650 align:start position:0%
many people who are into Android testing
 

00:13:13.650 --> 00:13:17.270 align:start position:0%
many people who are into Android testing
and<00:13:13.830><c> TDD</c><00:13:14.690><c> so</c><00:13:15.690><c> yeah</c><00:13:16.110><c> rub</c><00:13:16.290><c> electric</c><00:13:16.650><c> is</c><00:13:16.770><c> this</c><00:13:17.010><c> a</c>

00:13:17.270 --> 00:13:17.280 align:start position:0%
and TDD so yeah rub electric is this a
 

00:13:17.280 --> 00:13:19.400 align:start position:0%
and TDD so yeah rub electric is this a
scrappy<00:13:18.150><c> little</c><00:13:18.270><c> open-source</c><00:13:18.780><c> project</c><00:13:19.260><c> that</c>

00:13:19.400 --> 00:13:19.410 align:start position:0%
scrappy little open-source project that
 

00:13:19.410 --> 00:13:21.740 align:start position:0%
scrappy little open-source project that
I<00:13:19.440><c> started</c><00:13:19.770><c> hacking</c><00:13:19.950><c> on</c><00:13:20.280><c> back</c><00:13:21.270><c> in</c><00:13:21.420><c> the</c><00:13:21.480><c> early</c>

00:13:21.740 --> 00:13:21.750 align:start position:0%
I started hacking on back in the early
 

00:13:21.750 --> 00:13:23.420 align:start position:0%
I started hacking on back in the early
days<00:13:21.780><c> of</c><00:13:22.050><c> Android</c><00:13:22.320><c> testing</c><00:13:22.830><c> because</c><00:13:23.190><c> I</c><00:13:23.220><c> was</c>

00:13:23.420 --> 00:13:23.430 align:start position:0%
days of Android testing because I was
 

00:13:23.430 --> 00:13:25.700 align:start position:0%
days of Android testing because I was
just<00:13:24.270><c> super</c><00:13:24.510><c> annoyed</c><00:13:24.930><c> at</c><00:13:25.050><c> how</c><00:13:25.170><c> long</c><00:13:25.380><c> it</c><00:13:25.560><c> took</c>

00:13:25.700 --> 00:13:25.710 align:start position:0%
just super annoyed at how long it took
 

00:13:25.710 --> 00:13:28.130 align:start position:0%
just super annoyed at how long it took
to<00:13:25.770><c> to</c><00:13:26.760><c> deploy</c><00:13:27.090><c> and</c><00:13:27.300><c> run</c><00:13:27.420><c> tests</c><00:13:27.930><c> on</c><00:13:28.050><c> an</c>

00:13:28.130 --> 00:13:28.140 align:start position:0%
to to deploy and run tests on an
 

00:13:28.140 --> 00:13:31.490 align:start position:0%
to to deploy and run tests on an
emulator<00:13:29.060><c> and</c><00:13:30.060><c> it's</c><00:13:30.840><c> kind</c><00:13:31.050><c> of</c><00:13:31.080><c> been</c><00:13:31.230><c> a</c><00:13:31.260><c> side</c>

00:13:31.490 --> 00:13:31.500 align:start position:0%
emulator and it's kind of been a side
 

00:13:31.500 --> 00:13:32.840 align:start position:0%
emulator and it's kind of been a side
project<00:13:31.980><c> of</c><00:13:32.070><c> a</c><00:13:32.220><c> bunch</c><00:13:32.370><c> of</c><00:13:32.490><c> different</c><00:13:32.700><c> people</c>

00:13:32.840 --> 00:13:32.850 align:start position:0%
project of a bunch of different people
 

00:13:32.850 --> 00:13:34.940 align:start position:0%
project of a bunch of different people
until<00:13:33.300><c> last</c><00:13:33.480><c> year</c><00:13:33.660><c> when</c><00:13:34.020><c> I</c><00:13:34.230><c> had</c><00:13:34.650><c> the</c><00:13:34.770><c> privilege</c>

00:13:34.940 --> 00:13:34.950 align:start position:0%
until last year when I had the privilege
 

00:13:34.950 --> 00:13:37.400 align:start position:0%
until last year when I had the privilege
of<00:13:35.250><c> joining</c><00:13:35.370><c> my</c><00:13:35.580><c> friend</c><00:13:35.730><c> Jonathan</c><00:13:36.060><c> at</c><00:13:37.020><c> Google</c>

00:13:37.400 --> 00:13:37.410 align:start position:0%
of joining my friend Jonathan at Google
 

00:13:37.410 --> 00:13:38.720 align:start position:0%
of joining my friend Jonathan at Google
where<00:13:37.650><c> he</c><00:13:37.800><c> was</c><00:13:37.920><c> already</c><00:13:38.100><c> working</c><00:13:38.310><c> on</c>

00:13:38.720 --> 00:13:38.730 align:start position:0%
where he was already working on
 

00:13:38.730 --> 00:13:40.040 align:start position:0%
where he was already working on
improving<00:13:39.420><c> robolectric</c>

00:13:40.040 --> 00:13:40.050 align:start position:0%
improving robolectric
 

00:13:40.050 --> 00:13:42.980 align:start position:0%
improving robolectric
for<00:13:40.290><c> Google's</c><00:13:40.650><c> of</c><00:13:40.740><c> internal</c><00:13:41.190><c> test</c><00:13:41.430><c> Suites</c><00:13:41.990><c> and</c>

00:13:42.980 --> 00:13:42.990 align:start position:0%
for Google's of internal test Suites and
 

00:13:42.990 --> 00:13:45.140 align:start position:0%
for Google's of internal test Suites and
since<00:13:43.320><c> then</c><00:13:43.500><c> we've</c><00:13:43.680><c> been</c><00:13:43.710><c> we've</c><00:13:44.370><c> been</c><00:13:44.400><c> really</c>

00:13:45.140 --> 00:13:45.150 align:start position:0%
since then we've been we've been really
 

00:13:45.150 --> 00:13:46.970 align:start position:0%
since then we've been we've been really
beefing<00:13:45.450><c> up</c><00:13:45.510><c> for</c><00:13:45.660><c> electric</c><00:13:46.110><c> and</c><00:13:46.290><c> contributing</c>

00:13:46.970 --> 00:13:46.980 align:start position:0%
beefing up for electric and contributing
 

00:13:46.980 --> 00:13:51.080 align:start position:0%
beefing up for electric and contributing
back<00:13:47.070><c> to</c><00:13:47.130><c> the</c><00:13:47.310><c> open</c><00:13:47.520><c> source</c><00:13:47.700><c> project</c><00:13:50.090><c> today</c>

00:13:51.080 --> 00:13:51.090 align:start position:0%
back to the open source project today
 

00:13:51.090 --> 00:13:52.370 align:start position:0%
back to the open source project today
robolectric<00:13:51.480><c> isn't</c><00:13:51.960><c> an</c><00:13:52.020><c> officially</c>

00:13:52.370 --> 00:13:52.380 align:start position:0%
robolectric isn't an officially
 

00:13:52.380 --> 00:13:54.820 align:start position:0%
robolectric isn't an officially
supported<00:13:52.770><c> part</c><00:13:53.010><c> of</c><00:13:53.310><c> the</c><00:13:54.030><c> android</c><00:13:54.390><c> plus</c>

00:13:54.820 --> 00:13:54.830 align:start position:0%
supported part of the android plus
 

00:13:54.830 --> 00:13:57.890 align:start position:0%
supported part of the android plus
testing<00:13:55.830><c> platform</c><00:13:56.280><c> but</c><00:13:56.910><c> we</c><00:13:57.090><c> found</c><00:13:57.300><c> that</c><00:13:57.570><c> when</c>

00:13:57.890 --> 00:13:57.900 align:start position:0%
testing platform but we found that when
 

00:13:57.900 --> 00:13:59.030 align:start position:0%
testing platform but we found that when
it's<00:13:58.050><c> used</c><00:13:58.140><c> correctly</c><00:13:58.470><c> it</c><00:13:58.560><c> can</c><00:13:58.710><c> be</c><00:13:58.830><c> a</c><00:13:58.860><c> really</c>

00:13:59.030 --> 00:13:59.040 align:start position:0%
it's used correctly it can be a really
 

00:13:59.040 --> 00:14:00.710 align:start position:0%
it's used correctly it can be a really
useful<00:13:59.130><c> part</c><00:13:59.580><c> of</c><00:13:59.640><c> your</c><00:13:59.760><c> testing</c><00:14:00.060><c> strategy</c><00:14:00.510><c> and</c>

00:14:00.710 --> 00:14:00.720 align:start position:0%
useful part of your testing strategy and
 

00:14:00.720 --> 00:14:01.790 align:start position:0%
useful part of your testing strategy and
i'm<00:14:01.050><c> going</c><00:14:01.140><c> to</c><00:14:01.200><c> show</c><00:14:01.320><c> you</c><00:14:01.350><c> a</c><00:14:01.440><c> little</c><00:14:01.530><c> bit</c><00:14:01.680><c> about</c>

00:14:01.790 --> 00:14:01.800 align:start position:0%
i'm going to show you a little bit about
 

00:14:01.800 --> 00:14:04.130 align:start position:0%
i'm going to show you a little bit about
how<00:14:01.920><c> you</c><00:14:01.980><c> can</c><00:14:02.160><c> how</c><00:14:02.550><c> you</c><00:14:02.610><c> can</c><00:14:02.790><c> do</c><00:14:02.850><c> that</c><00:14:03.030><c> too</c><00:14:03.180><c> so</c>

00:14:04.130 --> 00:14:04.140 align:start position:0%
how you can how you can do that too so
 

00:14:04.140 --> 00:14:05.480 align:start position:0%
how you can how you can do that too so
let's<00:14:04.290><c> go</c><00:14:04.410><c> back</c><00:14:04.440><c> to</c><00:14:04.620><c> our</c><00:14:04.650><c> note</c><00:14:04.890><c> student</c><00:14:05.280><c> test</c>

00:14:05.480 --> 00:14:05.490 align:start position:0%
let's go back to our note student test
 

00:14:05.490 --> 00:14:07.040 align:start position:0%
let's go back to our note student test
and<00:14:05.700><c> see</c><00:14:06.240><c> how</c><00:14:06.360><c> we</c><00:14:06.450><c> might</c><00:14:06.570><c> approach</c><00:14:06.750><c> it</c><00:14:06.960><c> with</c>

00:14:07.040 --> 00:14:07.050 align:start position:0%
and see how we might approach it with
 

00:14:07.050 --> 00:14:08.950 align:start position:0%
and see how we might approach it with
robolectric

00:14:08.950 --> 00:14:08.960 align:start position:0%
robolectric
 

00:14:08.960 --> 00:14:13.220 align:start position:0%
robolectric
so<00:14:10.280><c> since</c><00:14:11.280><c> rubb</c><00:14:11.460><c> electric</c><00:14:11.820><c> runs</c><00:14:12.450><c> as</c><00:14:12.810><c> a</c><00:14:12.840><c> local</c>

00:14:13.220 --> 00:14:13.230 align:start position:0%
so since rubb electric runs as a local
 

00:14:13.230 --> 00:14:14.840 align:start position:0%
so since rubb electric runs as a local
unit<00:14:13.470><c> test</c><00:14:13.710><c> it'll</c><00:14:14.250><c> still</c><00:14:14.400><c> be</c><00:14:14.490><c> running</c><00:14:14.580><c> in</c><00:14:14.760><c> your</c>

00:14:14.840 --> 00:14:14.850 align:start position:0%
unit test it'll still be running in your
 

00:14:14.850 --> 00:14:17.480 align:start position:0%
unit test it'll still be running in your
workstation<00:14:15.420><c> rather</c><00:14:15.600><c> than</c><00:14:15.780><c> an</c><00:14:15.840><c> emulator</c><00:14:16.490><c> but</c>

00:14:17.480 --> 00:14:17.490 align:start position:0%
workstation rather than an emulator but
 

00:14:17.490 --> 00:14:18.890 align:start position:0%
workstation rather than an emulator but
robolectric<00:14:17.910><c> provides</c><00:14:18.420><c> kind</c><00:14:18.600><c> of</c><00:14:18.690><c> a</c><00:14:18.750><c> little</c>

00:14:18.890 --> 00:14:18.900 align:start position:0%
robolectric provides kind of a little
 

00:14:18.900 --> 00:14:21.110 align:start position:0%
robolectric provides kind of a little
Android<00:14:19.230><c> sandbox</c><00:14:19.860><c> next</c><00:14:20.310><c> to</c><00:14:20.370><c> your</c><00:14:20.490><c> test</c><00:14:20.700><c> where</c>

00:14:21.110 --> 00:14:21.120 align:start position:0%
Android sandbox next to your test where
 

00:14:21.120 --> 00:14:25.040 align:start position:0%
Android sandbox next to your test where
the<00:14:21.570><c> actual</c><00:14:21.690><c> SDK</c><00:14:22.230><c> code</c><00:14:22.470><c> is</c><00:14:22.770><c> running</c><00:14:24.050><c> you'll</c>

00:14:25.040 --> 00:14:25.050 align:start position:0%
the actual SDK code is running you'll
 

00:14:25.050 --> 00:14:26.540 align:start position:0%
the actual SDK code is running you'll
have<00:14:25.260><c> access</c><00:14:25.380><c> to</c><00:14:25.560><c> your</c><00:14:25.710><c> activities</c><00:14:26.220><c> your</c>

00:14:26.540 --> 00:14:26.550 align:start position:0%
have access to your activities your
 

00:14:26.550 --> 00:14:29.120 align:start position:0%
have access to your activities your
layouts<00:14:27.330><c> and</c><00:14:27.540><c> views</c><00:14:27.840><c> and</c><00:14:28.140><c> resources</c><00:14:28.680><c> and</c><00:14:28.950><c> you</c>

00:14:29.120 --> 00:14:29.130 align:start position:0%
layouts and views and resources and you
 

00:14:29.130 --> 00:14:31.070 align:start position:0%
layouts and views and resources and you
can<00:14:29.310><c> generally</c><00:14:29.670><c> just</c><00:14:29.820><c> call</c><00:14:30.300><c> most</c><00:14:30.600><c> Android</c>

00:14:31.070 --> 00:14:31.080 align:start position:0%
can generally just call most Android
 

00:14:31.080 --> 00:14:32.330 align:start position:0%
can generally just call most Android
methods<00:14:31.440><c> and</c><00:14:31.650><c> they'll</c><00:14:31.740><c> kind</c><00:14:31.920><c> of</c><00:14:32.010><c> work</c><00:14:32.130><c> like</c>

00:14:32.330 --> 00:14:32.340 align:start position:0%
methods and they'll kind of work like
 

00:14:32.340 --> 00:14:35.180 align:start position:0%
methods and they'll kind of work like
you'd<00:14:32.490><c> expect</c><00:14:33.590><c> there</c><00:14:34.590><c> are</c><00:14:34.620><c> parts</c><00:14:35.010><c> of</c><00:14:35.100><c> the</c>

00:14:35.180 --> 00:14:35.190 align:start position:0%
you'd expect there are parts of the
 

00:14:35.190 --> 00:14:37.730 align:start position:0%
you'd expect there are parts of the
android<00:14:35.430><c> framework</c><00:14:35.640><c> that</c><00:14:36.000><c> rely</c><00:14:36.270><c> on</c><00:14:36.540><c> on</c><00:14:37.170><c> native</c>

00:14:37.730 --> 00:14:37.740 align:start position:0%
android framework that rely on on native
 

00:14:37.740 --> 00:14:41.510 align:start position:0%
android framework that rely on on native
code<00:14:37.980><c> or</c><00:14:38.400><c> call</c><00:14:38.790><c> it</c><00:14:38.940><c> hardware</c><00:14:39.800><c> or</c><00:14:40.800><c> interact</c>

00:14:41.510 --> 00:14:41.520 align:start position:0%
code or call it hardware or interact
 

00:14:41.520 --> 00:14:43.370 align:start position:0%
code or call it hardware or interact
with<00:14:41.670><c> external</c><00:14:41.880><c> system</c><00:14:42.300><c> services</c><00:14:42.780><c> so</c><00:14:43.350><c> for</c>

00:14:43.370 --> 00:14:43.380 align:start position:0%
with external system services so for
 

00:14:43.380 --> 00:14:45.440 align:start position:0%
with external system services so for
that<00:14:43.740><c> robolectric</c><00:14:44.310><c> provides</c><00:14:44.790><c> a</c><00:14:44.910><c> sort</c><00:14:45.120><c> of</c><00:14:45.150><c> test</c>

00:14:45.440 --> 00:14:45.450 align:start position:0%
that robolectric provides a sort of test
 

00:14:45.450 --> 00:14:48.560 align:start position:0%
that robolectric provides a sort of test
double<00:14:45.810><c> that</c><00:14:45.960><c> we</c><00:14:46.050><c> call</c><00:14:46.230><c> shadows</c><00:14:46.680><c> and</c><00:14:47.570><c> those</c>

00:14:48.560 --> 00:14:48.570 align:start position:0%
double that we call shadows and those
 

00:14:48.570 --> 00:14:51.230 align:start position:0%
double that we call shadows and those
provide<00:14:48.870><c> alternative</c><00:14:49.410><c> limitations</c><00:14:49.980><c> of</c><00:14:50.850><c> that</c>

00:14:51.230 --> 00:14:51.240 align:start position:0%
provide alternative limitations of that
 

00:14:51.240 --> 00:14:53.260 align:start position:0%
provide alternative limitations of that
code<00:14:51.450><c> that's</c><00:14:51.690><c> appropriate</c><00:14:52.140><c> for</c><00:14:52.170><c> unit</c><00:14:52.500><c> testing</c>

00:14:53.260 --> 00:14:53.270 align:start position:0%
code that's appropriate for unit testing
 

00:14:53.270 --> 00:14:56.720 align:start position:0%
code that's appropriate for unit testing
so<00:14:54.350><c> remember</c><00:14:55.350><c> that</c><00:14:55.380><c> that</c><00:14:55.950><c> test</c><00:14:56.310><c> that</c><00:14:56.400><c> we</c><00:14:56.550><c> just</c>

00:14:56.720 --> 00:14:56.730 align:start position:0%
so remember that that test that we just
 

00:14:56.730 --> 00:14:59.270 align:start position:0%
so remember that that test that we just
saw<00:14:56.910><c> if</c><00:14:57.120><c> it</c><00:14:57.270><c> had</c><00:14:57.390><c> like</c><00:14:57.540><c> 20</c><00:14:57.960><c> lines</c><00:14:58.560><c> of</c><00:14:58.800><c> code</c><00:14:59.010><c> of</c>

00:14:59.270 --> 00:14:59.280 align:start position:0%
saw if it had like 20 lines of code of
 

00:14:59.280 --> 00:15:01.850 align:start position:0%
saw if it had like 20 lines of code of
like<00:14:59.820><c> mock</c><00:15:00.060><c> set</c><00:15:00.360><c> up</c><00:15:00.480><c> code</c><00:15:00.720><c> let's</c><00:15:01.560><c> see</c><00:15:01.680><c> how</c><00:15:01.770><c> that</c>

00:15:01.850 --> 00:15:01.860 align:start position:0%
like mock set up code let's see how that
 

00:15:01.860 --> 00:15:05.030 align:start position:0%
like mock set up code let's see how that
looks<00:15:01.920><c> in</c><00:15:02.100><c> robolectric</c><00:15:03.200><c> so</c><00:15:04.200><c> that's</c><00:15:04.770><c> a</c><00:15:04.860><c> lot</c>

00:15:05.030 --> 00:15:05.040 align:start position:0%
looks in robolectric so that's a lot
 

00:15:05.040 --> 00:15:06.110 align:start position:0%
looks in robolectric so that's a lot
less<00:15:05.220><c> we've</c><00:15:05.550><c> gotten</c><00:15:05.730><c> rid</c><00:15:05.820><c> of</c><00:15:05.910><c> all</c><00:15:06.000><c> the</c>

00:15:06.110 --> 00:15:06.120 align:start position:0%
less we've gotten rid of all the
 

00:15:06.120 --> 00:15:07.540 align:start position:0%
less we've gotten rid of all the
boilerplate

00:15:07.540 --> 00:15:07.550 align:start position:0%
boilerplate
 

00:15:07.550 --> 00:15:10.280 align:start position:0%
boilerplate
the<00:15:08.550><c> test</c><00:15:08.760><c> is</c><00:15:08.850><c> about</c><00:15:09.000><c> half</c><00:15:09.210><c> the</c><00:15:09.390><c> size</c><00:15:09.600><c> and</c><00:15:10.020><c> much</c>

00:15:10.280 --> 00:15:10.290 align:start position:0%
the test is about half the size and much
 

00:15:10.290 --> 00:15:12.440 align:start position:0%
the test is about half the size and much
more<00:15:10.470><c> concise</c><00:15:10.800><c> we're</c><00:15:11.760><c> not</c><00:15:11.880><c> forced</c><00:15:12.240><c> to</c><00:15:12.270><c> think</c>

00:15:12.440 --> 00:15:12.450 align:start position:0%
more concise we're not forced to think
 

00:15:12.450 --> 00:15:13.760 align:start position:0%
more concise we're not forced to think
about<00:15:12.600><c> the</c><00:15:12.720><c> implementation</c><00:15:13.320><c> details</c><00:15:13.650><c> as</c>

00:15:13.760 --> 00:15:13.770 align:start position:0%
about the implementation details as
 

00:15:13.770 --> 00:15:15.000 align:start position:0%
about the implementation details as
we're<00:15:13.920><c> writing</c><00:15:14.040><c> the</c><00:15:14.280><c> test</c>

00:15:15.000 --> 00:15:15.010 align:start position:0%
we're writing the test
 

00:15:15.010 --> 00:15:17.939 align:start position:0%
we're writing the test
which<00:15:15.519><c> is</c><00:15:15.639><c> quite</c><00:15:15.760><c> nice</c><00:15:17.079><c> Reb</c><00:15:17.440><c> logic</c><00:15:17.709><c> is</c><00:15:17.800><c> going</c>

00:15:17.939 --> 00:15:17.949 align:start position:0%
which is quite nice Reb logic is going
 

00:15:17.949 --> 00:15:19.290 align:start position:0%
which is quite nice Reb logic is going
to<00:15:18.010><c> set</c><00:15:18.160><c> up</c><00:15:18.220><c> your</c><00:15:18.339><c> application</c><00:15:18.459><c> according</c><00:15:19.240><c> to</c>

00:15:19.290 --> 00:15:19.300 align:start position:0%
to set up your application according to
 

00:15:19.300 --> 00:15:21.840 align:start position:0%
to set up your application according to
your<00:15:19.389><c> manifest</c><00:15:19.810><c> and</c><00:15:20.250><c> here</c><00:15:21.250><c> we're</c><00:15:21.399><c> asking</c><00:15:21.490><c> it</c>

00:15:21.840 --> 00:15:21.850 align:start position:0%
your manifest and here we're asking it
 

00:15:21.850 --> 00:15:23.550 align:start position:0%
your manifest and here we're asking it
to<00:15:22.060><c> set</c><00:15:22.360><c> up</c><00:15:22.389><c> our</c><00:15:22.570><c> activity</c><00:15:23.019><c> it</c><00:15:23.230><c> runs</c><00:15:23.410><c> it</c>

00:15:23.550 --> 00:15:23.560 align:start position:0%
to set up our activity it runs it
 

00:15:23.560 --> 00:15:25.620 align:start position:0%
to set up our activity it runs it
through<00:15:23.800><c> the</c><00:15:24.430><c> appropriate</c><00:15:25.029><c> life</c><00:15:25.180><c> cycle</c><00:15:25.540><c> to</c>

00:15:25.620 --> 00:15:25.630 align:start position:0%
through the appropriate life cycle to
 

00:15:25.630 --> 00:15:27.600 align:start position:0%
through the appropriate life cycle to
get<00:15:25.720><c> it</c><00:15:25.810><c> into</c><00:15:25.930><c> the</c><00:15:26.050><c> right</c><00:15:26.170><c> state</c><00:15:26.610><c> inflates</c>

00:15:27.600 --> 00:15:27.610 align:start position:0%
get it into the right state inflates
 

00:15:27.610 --> 00:15:31.019 align:start position:0%
get it into the right state inflates
views<00:15:28.230><c> all</c><00:15:29.230><c> that</c><00:15:29.440><c> stuff</c><00:15:29.680><c> it</c><00:15:29.860><c> that</c><00:15:30.430><c> we</c><00:15:30.730><c> expect</c>

00:15:31.019 --> 00:15:31.029 align:start position:0%
views all that stuff it that we expect
 

00:15:31.029 --> 00:15:33.269 align:start position:0%
views all that stuff it that we expect
from<00:15:31.120><c> on</c><00:15:31.449><c> a</c><00:15:31.510><c> device</c><00:15:31.839><c> so</c><00:15:32.529><c> we</c><00:15:32.649><c> can</c><00:15:32.769><c> just</c><00:15:32.889><c> interact</c>

00:15:33.269 --> 00:15:33.279 align:start position:0%
from on a device so we can just interact
 

00:15:33.279 --> 00:15:37.079 align:start position:0%
from on a device so we can just interact
with<00:15:33.430><c> it</c><00:15:33.579><c> as</c><00:15:33.730><c> if</c><00:15:34.060><c> you're</c><00:15:34.180><c> on</c><00:15:34.209><c> the</c><00:15:34.360><c> device</c><00:15:35.399><c> so</c><00:15:36.399><c> we</c>

00:15:37.079 --> 00:15:37.089 align:start position:0%
with it as if you're on the device so we
 

00:15:37.089 --> 00:15:39.509 align:start position:0%
with it as if you're on the device so we
add<00:15:37.209><c> some</c><00:15:37.510><c> texts</c><00:15:38.050><c> and</c><00:15:38.230><c> fields</c><00:15:38.620><c> click</c><00:15:39.190><c> on</c><00:15:39.370><c> it</c>

00:15:39.509 --> 00:15:39.519 align:start position:0%
add some texts and fields click on it
 

00:15:39.519 --> 00:15:42.180 align:start position:0%
add some texts and fields click on it
and<00:15:39.990><c> assert</c><00:15:40.990><c> that</c><00:15:41.019><c> it</c><00:15:41.320><c> adds</c><00:15:41.560><c> the</c><00:15:41.800><c> note</c><00:15:41.949><c> to</c><00:15:42.130><c> the</c>

00:15:42.180 --> 00:15:42.190 align:start position:0%
and assert that it adds the note to the
 

00:15:42.190 --> 00:15:44.160 align:start position:0%
and assert that it adds the note to the
repository<00:15:42.399><c> now</c><00:15:43.300><c> notice</c><00:15:43.690><c> that</c><00:15:43.720><c> we're</c><00:15:44.019><c> not</c>

00:15:44.160 --> 00:15:44.170 align:start position:0%
repository now notice that we're not
 

00:15:44.170 --> 00:15:46.379 align:start position:0%
repository now notice that we're not
actually<00:15:44.500><c> going</c><00:15:44.620><c> as</c><00:15:44.800><c> far</c><00:15:45.040><c> as</c><00:15:45.310><c> the</c><00:15:45.790><c> UI</c><00:15:46.000><c> test</c>

00:15:46.379 --> 00:15:46.389 align:start position:0%
actually going as far as the UI test
 

00:15:46.389 --> 00:15:47.550 align:start position:0%
actually going as far as the UI test
that<00:15:46.570><c> we</c><00:15:46.630><c> saw</c><00:15:46.779><c> that</c><00:15:46.990><c> we</c><00:15:47.079><c> wrote</c><00:15:47.230><c> at</c><00:15:47.350><c> the</c><00:15:47.380><c> very</c>

00:15:47.550 --> 00:15:47.560 align:start position:0%
that we saw that we wrote at the very
 

00:15:47.560 --> 00:15:48.840 align:start position:0%
that we saw that we wrote at the very
beginning

00:15:48.840 --> 00:15:48.850 align:start position:0%
beginning
 

00:15:48.850 --> 00:15:50.910 align:start position:0%
beginning
we're<00:15:49.570><c> not</c><00:15:49.690><c> asserting</c><00:15:50.139><c> that</c><00:15:50.170><c> the</c><00:15:50.529><c> new</c><00:15:50.709><c> note</c>

00:15:50.910 --> 00:15:50.920 align:start position:0%
we're not asserting that the new note
 

00:15:50.920 --> 00:15:54.060 align:start position:0%
we're not asserting that the new note
appears<00:15:51.370><c> on</c><00:15:51.550><c> a</c><00:15:51.579><c> view</c><00:15:51.970><c> screen</c><00:15:52.899><c> that</c><00:15:53.800><c> would</c><00:15:53.889><c> be</c>

00:15:54.060 --> 00:15:54.070 align:start position:0%
appears on a view screen that would be
 

00:15:54.070 --> 00:15:58.009 align:start position:0%
appears on a view screen that would be
the<00:15:54.220><c> job</c><00:15:54.399><c> of</c><00:15:54.430><c> another</c><00:15:54.820><c> unit</c><00:15:55.180><c> test</c>

00:15:58.009 --> 00:15:58.019 align:start position:0%
 
 

00:15:58.019 --> 00:16:01.680 align:start position:0%
 
now<00:15:59.019><c> I</c><00:15:59.290><c> mentioned</c><00:15:59.709><c> robolectric</c><00:16:00.100><c> shadows</c><00:16:00.699><c> they</c>

00:16:01.680 --> 00:16:01.690 align:start position:0%
now I mentioned robolectric shadows they
 

00:16:01.690 --> 00:16:05.009 align:start position:0%
now I mentioned robolectric shadows they
actually<00:16:02.050><c> give</c><00:16:02.800><c> extended</c><00:16:03.670><c> testing</c><00:16:04.300><c> api's</c><00:16:04.660><c> to</c>

00:16:05.009 --> 00:16:05.019 align:start position:0%
actually give extended testing api's to
 

00:16:05.019 --> 00:16:07.980 align:start position:0%
actually give extended testing api's to
some<00:16:05.199><c> Android</c><00:16:05.500><c> classes</c><00:16:05.980><c> that</c><00:16:06.250><c> let</c><00:16:06.430><c> us</c><00:16:06.959><c> let</c><00:16:07.959><c> us</c>

00:16:07.980 --> 00:16:07.990 align:start position:0%
some Android classes that let us let us
 

00:16:07.990 --> 00:16:09.720 align:start position:0%
some Android classes that let us let us
query<00:16:08.440><c> internal</c><00:16:08.829><c> state</c><00:16:09.130><c> and</c><00:16:09.430><c> sometimes</c>

00:16:09.720 --> 00:16:09.730 align:start position:0%
query internal state and sometimes
 

00:16:09.730 --> 00:16:11.870 align:start position:0%
query internal state and sometimes
change<00:16:10.029><c> your</c><00:16:10.209><c> behavior</c><00:16:10.600><c> in</c><00:16:10.779><c> this</c><00:16:11.320><c> example</c>

00:16:11.870 --> 00:16:11.880 align:start position:0%
change your behavior in this example
 

00:16:11.880 --> 00:16:14.550 align:start position:0%
change your behavior in this example
we're<00:16:12.880><c> asking</c><00:16:13.389><c> the</c><00:16:13.480><c> application</c><00:16:14.050><c> if</c><00:16:14.260><c> any</c><00:16:14.410><c> of</c>

00:16:14.550 --> 00:16:14.560 align:start position:0%
we're asking the application if any of
 

00:16:14.560 --> 00:16:17.610 align:start position:0%
we're asking the application if any of
our<00:16:14.649><c> activities</c><00:16:15.690><c> requested</c><00:16:16.690><c> that</c><00:16:16.870><c> an</c><00:16:17.139><c> intent</c>

00:16:17.610 --> 00:16:17.620 align:start position:0%
our activities requested that an intent
 

00:16:17.620 --> 00:16:19.620 align:start position:0%
our activities requested that an intent
be<00:16:17.800><c> launched</c><00:16:18.010><c> during</c><00:16:18.459><c> the</c><00:16:18.610><c> test</c><00:16:18.850><c> we</c><00:16:19.149><c> could</c><00:16:19.480><c> use</c>

00:16:19.620 --> 00:16:19.630 align:start position:0%
be launched during the test we could use
 

00:16:19.630 --> 00:16:21.960 align:start position:0%
be launched during the test we could use
that<00:16:19.810><c> twister</c><00:16:20.199><c> that</c><00:16:20.529><c> after</c><00:16:21.279><c> saving</c><00:16:21.490><c> a</c><00:16:21.610><c> note</c><00:16:21.790><c> to</c>

00:16:21.960 --> 00:16:21.970 align:start position:0%
that twister that after saving a note to
 

00:16:21.970 --> 00:16:25.170 align:start position:0%
that twister that after saving a note to
the<00:16:22.029><c> repository</c><00:16:23.130><c> we're</c><00:16:24.130><c> going</c><00:16:24.519><c> to</c><00:16:24.639><c> go</c><00:16:24.790><c> to</c><00:16:24.850><c> the</c>

00:16:25.170 --> 00:16:25.180 align:start position:0%
the repository we're going to go to the
 

00:16:25.180 --> 00:16:28.410 align:start position:0%
the repository we're going to go to the
to<00:16:25.630><c> the</c><00:16:25.779><c> view</c><00:16:25.959><c> notes</c><00:16:26.139><c> activity</c><00:16:27.420><c> similar</c>

00:16:28.410 --> 00:16:28.420 align:start position:0%
to the view notes activity similar
 

00:16:28.420 --> 00:16:32.490 align:start position:0%
to the view notes activity similar
testing<00:16:29.139><c> api's</c><00:16:29.470><c> exists</c><00:16:29.949><c> for</c><00:16:31.500><c> simulating</c>

00:16:32.490 --> 00:16:32.500 align:start position:0%
testing api's exists for simulating
 

00:16:32.500 --> 00:16:35.160 align:start position:0%
testing api's exists for simulating
Hardware<00:16:32.829><c> responses</c><00:16:33.459><c> or</c><00:16:33.760><c> external</c><00:16:34.720><c> services</c>

00:16:35.160 --> 00:16:35.170 align:start position:0%
Hardware responses or external services
 

00:16:35.170 --> 00:16:39.150 align:start position:0%
Hardware responses or external services
things<00:16:35.500><c> like</c><00:16:35.709><c> that</c><00:16:37.500><c> so</c><00:16:38.500><c> at</c><00:16:38.649><c> this</c><00:16:38.709><c> point</c><00:16:38.980><c> we</c>

00:16:39.150 --> 00:16:39.160 align:start position:0%
things like that so at this point we
 

00:16:39.160 --> 00:16:41.910 align:start position:0%
things like that so at this point we
have<00:16:39.370><c> a</c><00:16:39.610><c> failing</c><00:16:39.850><c> unit</c><00:16:40.209><c> test</c><00:16:40.449><c> and</c><00:16:41.350><c> now</c><00:16:41.589><c> we</c><00:16:41.649><c> get</c>

00:16:41.910 --> 00:16:41.920 align:start position:0%
have a failing unit test and now we get
 

00:16:41.920 --> 00:16:44.100 align:start position:0%
have a failing unit test and now we get
to<00:16:42.130><c> we're</c><00:16:42.519><c> ready</c><00:16:42.730><c> for</c><00:16:42.790><c> the</c><00:16:43.029><c> easy</c><00:16:43.149><c> part</c><00:16:43.510><c> writing</c>

00:16:44.100 --> 00:16:44.110 align:start position:0%
to we're ready for the easy part writing
 

00:16:44.110 --> 00:16:49.019 align:start position:0%
to we're ready for the easy part writing
the<00:16:44.170><c> production</c><00:16:44.560><c> code</c><00:16:45.540><c> in</c><00:16:47.250><c> the</c><00:16:48.250><c> spirit</c><00:16:48.550><c> of</c><00:16:48.579><c> TDD</c>

00:16:49.019 --> 00:16:49.029 align:start position:0%
the production code in the spirit of TDD
 

00:16:49.029 --> 00:16:51.870 align:start position:0%
the production code in the spirit of TDD
we're<00:16:49.839><c> only</c><00:16:49.959><c> going</c><00:16:50.290><c> to</c><00:16:50.560><c> write</c><00:16:50.980><c> exactly</c><00:16:51.760><c> as</c>

00:16:51.870 --> 00:16:51.880 align:start position:0%
we're only going to write exactly as
 

00:16:51.880 --> 00:16:53.790 align:start position:0%
we're only going to write exactly as
much<00:16:52.060><c> as</c><00:16:52.329><c> as</c><00:16:52.690><c> is</c><00:16:52.870><c> needed</c><00:16:53.019><c> to</c><00:16:53.350><c> make</c><00:16:53.500><c> the</c><00:16:53.620><c> test</c>

00:16:53.790 --> 00:16:53.800 align:start position:0%
much as as is needed to make the test
 

00:16:53.800 --> 00:16:57.720 align:start position:0%
much as as is needed to make the test
pass<00:16:53.920><c> no</c><00:16:54.910><c> more</c><00:16:55.120><c> no</c><00:16:55.329><c> speculative</c><00:16:55.870><c> coding</c><00:16:56.230><c> so</c><00:16:56.980><c> we</c>

00:16:57.720 --> 00:16:57.730 align:start position:0%
pass no more no speculative coding so we
 

00:16:57.730 --> 00:17:00.750 align:start position:0%
pass no more no speculative coding so we
inflate<00:16:58.000><c> a</c><00:16:58.029><c> layout</c><00:16:58.620><c> at</c><00:16:59.620><c> acetic</c><00:17:00.100><c> Handler</c><00:17:00.490><c> and</c>

00:17:00.750 --> 00:17:00.760 align:start position:0%
inflate a layout at acetic Handler and
 

00:17:00.760 --> 00:17:02.790 align:start position:0%
inflate a layout at acetic Handler and
when<00:17:01.540><c> the</c><00:17:01.630><c> click</c><00:17:01.779><c> happens</c><00:17:02.139><c> we</c><00:17:02.380><c> like</c><00:17:02.560><c> for</c><00:17:02.680><c> you</c>

00:17:02.790 --> 00:17:02.800 align:start position:0%
when the click happens we like for you
 

00:17:02.800 --> 00:17:03.510 align:start position:0%
when the click happens we like for you
to<00:17:02.860><c> note</c><00:17:03.010><c> an</c><00:17:03.160><c> editor</c>

00:17:03.510 --> 00:17:03.520 align:start position:0%
to note an editor
 

00:17:03.520 --> 00:17:09.120 align:start position:0%
to note an editor
repository<00:17:07.290><c> so</c><00:17:08.290><c> now</c><00:17:08.440><c> we</c><00:17:08.500><c> can</c><00:17:08.680><c> run</c><00:17:08.800><c> the</c><00:17:08.860><c> test</c>

00:17:09.120 --> 00:17:09.130 align:start position:0%
repository so now we can run the test
 

00:17:09.130 --> 00:17:12.360 align:start position:0%
repository so now we can run the test
see<00:17:09.730><c> a</c><00:17:09.760><c> pass</c><00:17:10.030><c> if</c><00:17:10.420><c> there's</c><00:17:11.410><c> some</c><00:17:11.650><c> improvement</c>

00:17:12.360 --> 00:17:12.370 align:start position:0%
see a pass if there's some improvement
 

00:17:12.370 --> 00:17:13.470 align:start position:0%
see a pass if there's some improvement
we<00:17:12.459><c> can</c><00:17:12.490><c> make</c><00:17:12.700><c> to</c><00:17:12.820><c> the</c><00:17:12.910><c> code</c><00:17:13.060><c> we'll</c><00:17:13.240><c> go</c><00:17:13.330><c> back</c>

00:17:13.470 --> 00:17:13.480 align:start position:0%
we can make to the code we'll go back
 

00:17:13.480 --> 00:17:15.600 align:start position:0%
we can make to the code we'll go back
and<00:17:13.600><c> refactor</c><00:17:14.020><c> and</c><00:17:14.170><c> then</c><00:17:14.680><c> we</c><00:17:14.800><c> repeat</c><00:17:15.100><c> this</c><00:17:15.490><c> is</c>

00:17:15.600 --> 00:17:15.610 align:start position:0%
and refactor and then we repeat this is
 

00:17:15.610 --> 00:17:17.550 align:start position:0%
and refactor and then we repeat this is
where<00:17:15.760><c> you</c><00:17:15.820><c> get</c><00:17:15.910><c> the</c><00:17:15.970><c> thoroughness</c><00:17:16.300><c> and</c><00:17:16.630><c> Rev</c>

00:17:17.550 --> 00:17:17.560 align:start position:0%
where you get the thoroughness and Rev
 

00:17:17.560 --> 00:17:18.900 align:start position:0%
where you get the thoroughness and Rev
electric<00:17:17.860><c> is</c><00:17:17.980><c> super</c><00:17:18.220><c> handy</c><00:17:18.490><c> for</c><00:17:18.640><c> this</c><00:17:18.760><c> because</c>

00:17:18.900 --> 00:17:18.910 align:start position:0%
electric is super handy for this because
 

00:17:18.910 --> 00:17:20.970 align:start position:0%
electric is super handy for this because
it<00:17:19.390><c> gives</c><00:17:19.570><c> you</c><00:17:19.690><c> like</c><00:17:19.930><c> nice</c><00:17:20.200><c> fast</c><00:17:20.470><c> test</c><00:17:20.709><c> runs</c>

00:17:20.970 --> 00:17:20.980 align:start position:0%
it gives you like nice fast test runs
 

00:17:20.980 --> 00:17:26.970 align:start position:0%
it gives you like nice fast test runs
you<00:17:21.160><c> can</c><00:17:21.250><c> get</c><00:17:21.430><c> into</c><00:17:21.640><c> a</c><00:17:21.670><c> comfy</c><00:17:22.450><c> cycle</c><00:17:25.500><c> so</c><00:17:26.500><c> we</c>

00:17:26.970 --> 00:17:26.980 align:start position:0%
you can get into a comfy cycle so we
 

00:17:26.980 --> 00:17:29.480 align:start position:0%
you can get into a comfy cycle so we
want<00:17:27.940><c> to</c><00:17:28.089><c> not</c><00:17:28.330><c> discuss</c><00:17:28.600><c> the</c><00:17:28.780><c> happy</c><00:17:28.930><c> path</c><00:17:29.200><c> here</c>

00:17:29.480 --> 00:17:29.490 align:start position:0%
want to not discuss the happy path here
 

00:17:29.490 --> 00:17:31.770 align:start position:0%
want to not discuss the happy path here
we're<00:17:30.490><c> going</c><00:17:30.610><c> to</c><00:17:30.670><c> test</c><00:17:30.880><c> all</c><00:17:31.210><c> the</c><00:17:31.300><c> different</c>

00:17:31.770 --> 00:17:31.780 align:start position:0%
we're going to test all the different
 

00:17:31.780 --> 00:17:33.780 align:start position:0%
we're going to test all the different
cases<00:17:31.960><c> we</c><00:17:32.260><c> can</c><00:17:32.410><c> there</c><00:17:33.100><c> are</c><00:17:33.130><c> codes</c><00:17:33.340><c> likely</c><00:17:33.670><c> to</c>

00:17:33.780 --> 00:17:33.790 align:start position:0%
cases we can there are codes likely to
 

00:17:33.790 --> 00:17:35.820 align:start position:0%
cases we can there are codes likely to
encounter<00:17:34.090><c> so</c><00:17:34.810><c> for</c><00:17:35.080><c> example</c><00:17:35.500><c> input</c>

00:17:35.820 --> 00:17:35.830 align:start position:0%
encounter so for example input
 

00:17:35.830 --> 00:17:38.790 align:start position:0%
encounter so for example input
validation<00:17:36.420><c> and</c><00:17:37.420><c> external</c><00:17:38.230><c> conditions</c><00:17:38.620><c> like</c>

00:17:38.790 --> 00:17:38.800 align:start position:0%
validation and external conditions like
 

00:17:38.800 --> 00:17:43.130 align:start position:0%
validation and external conditions like
the<00:17:38.920><c> network</c><00:17:39.100><c> being</c><00:17:39.400><c> down</c><00:17:39.640><c> stuff</c><00:17:40.060><c> like</c><00:17:40.210><c> that</c>

00:17:43.130 --> 00:17:43.140 align:start position:0%
 
 

00:17:43.140 --> 00:17:44.880 align:start position:0%
 
Rob<00:17:44.140><c> let</c><00:17:44.260><c> you</c><00:17:44.350><c> can</c><00:17:44.470><c> also</c><00:17:44.590><c> help</c><00:17:44.830><c> with</c>

00:17:44.880 --> 00:17:44.890 align:start position:0%
Rob let you can also help with
 

00:17:44.890 --> 00:17:48.450 align:start position:0%
Rob let you can also help with
simulating<00:17:45.750><c> device</c><00:17:46.920><c> conditions</c><00:17:47.920><c> that</c><00:17:48.340><c> you'll</c>

00:17:48.450 --> 00:17:48.460 align:start position:0%
simulating device conditions that you'll
 

00:17:48.460 --> 00:17:50.790 align:start position:0%
simulating device conditions that you'll
encounter<00:17:48.700><c> for</c><00:17:49.390><c> example</c><00:17:49.720><c> you</c><00:17:49.900><c> can</c><00:17:50.110><c> specify</c>

00:17:50.790 --> 00:17:50.800 align:start position:0%
encounter for example you can specify
 

00:17:50.800 --> 00:17:53.730 align:start position:0%
encounter for example you can specify
qualifiers<00:17:51.610><c> at</c><00:17:51.940><c> the</c><00:17:52.150><c> notes</c><00:17:52.360><c> or</c><00:17:52.690><c> that</c><00:17:52.900><c> the</c><00:17:53.050><c> test</c>

00:17:53.730 --> 00:17:53.740 align:start position:0%
qualifiers at the notes or that the test
 

00:17:53.740 --> 00:17:55.590 align:start position:0%
qualifiers at the notes or that the test
should<00:17:53.890><c> run</c><00:17:54.070><c> with</c><00:17:54.250><c> here</c><00:17:55.000><c> we're</c><00:17:55.180><c> saying</c><00:17:55.360><c> like</c><00:17:55.540><c> a</c>

00:17:55.590 --> 00:17:55.600 align:start position:0%
should run with here we're saying like a
 

00:17:55.600 --> 00:17:57.150 align:start position:0%
should run with here we're saying like a
certain<00:17:56.350><c> screen</c><00:17:56.590><c> size</c><00:17:56.800><c> and</c><00:17:56.830><c> orientation</c>

00:17:57.150 --> 00:17:57.160 align:start position:0%
certain screen size and orientation
 

00:17:57.160 --> 00:18:00.300 align:start position:0%
certain screen size and orientation
which<00:17:57.790><c> might</c><00:17:57.970><c> change</c><00:17:58.210><c> the</c><00:17:58.330><c> layout</c><00:17:58.510><c> a</c><00:17:58.630><c> bit</c><00:17:59.310><c> you</c>

00:18:00.300 --> 00:18:00.310 align:start position:0%
which might change the layout a bit you
 

00:18:00.310 --> 00:18:02.400 align:start position:0%
which might change the layout a bit you
can<00:18:00.520><c> ask</c><00:18:00.820><c> your</c><00:18:01.120><c> lecturer</c><00:18:01.330><c> to</c><00:18:01.690><c> run</c><00:18:01.960><c> your</c><00:18:02.170><c> test</c>

00:18:02.400 --> 00:18:02.410 align:start position:0%
can ask your lecturer to run your test
 

00:18:02.410 --> 00:18:06.150 align:start position:0%
can ask your lecturer to run your test
under<00:18:02.710><c> a</c><00:18:02.740><c> specific</c><00:18:02.980><c> SDK</c><00:18:03.700><c> so</c><00:18:04.680><c> we'll</c><00:18:05.680><c> say</c><00:18:05.860><c> jelly</c>

00:18:06.150 --> 00:18:06.160 align:start position:0%
under a specific SDK so we'll say jelly
 

00:18:06.160 --> 00:18:08.970 align:start position:0%
under a specific SDK so we'll say jelly
bean<00:18:06.370><c> here</c><00:18:06.900><c> and</c><00:18:07.900><c> it</c><00:18:07.960><c> actually</c><00:18:08.230><c> uses</c><00:18:08.380><c> the</c><00:18:08.590><c> SDK</c>

00:18:08.970 --> 00:18:08.980 align:start position:0%
bean here and it actually uses the SDK
 

00:18:08.980 --> 00:18:13.140 align:start position:0%
bean here and it actually uses the SDK
code<00:18:09.340><c> from</c><00:18:09.580><c> that</c><00:18:09.760><c> version</c><00:18:09.970><c> and</c><00:18:11.850><c> you</c><00:18:12.850><c> can</c><00:18:13.000><c> also</c>

00:18:13.140 --> 00:18:13.150 align:start position:0%
code from that version and you can also
 

00:18:13.150 --> 00:18:14.730 align:start position:0%
code from that version and you can also
tell<00:18:13.540><c> Rob</c><00:18:13.690><c> Electric</c><00:18:14.050><c> I</c><00:18:14.200><c> want</c><00:18:14.470><c> to</c><00:18:14.530><c> run</c><00:18:14.620><c> this</c>

00:18:14.730 --> 00:18:14.740 align:start position:0%
tell Rob Electric I want to run this
 

00:18:14.740 --> 00:18:16.980 align:start position:0%
tell Rob Electric I want to run this
test<00:18:14.980><c> under</c><00:18:15.220><c> every</c><00:18:15.640><c> SDK</c><00:18:16.090><c> that</c><00:18:16.120><c> you</c><00:18:16.360><c> support</c><00:18:16.780><c> or</c>

00:18:16.980 --> 00:18:16.990 align:start position:0%
test under every SDK that you support or
 

00:18:16.990 --> 00:18:19.140 align:start position:0%
test under every SDK that you support or
some<00:18:17.890><c> some</c><00:18:18.430><c> range</c><00:18:18.640><c> of</c><00:18:18.820><c> them</c><00:18:18.940><c> that</c><00:18:19.090><c> you're</c>

00:18:19.140 --> 00:18:19.150 align:start position:0%
some some range of them that you're
 

00:18:19.150 --> 00:18:21.810 align:start position:0%
some some range of them that you're
interested<00:18:19.210><c> in</c><00:18:19.690><c> and</c><00:18:19.930><c> we</c><00:18:20.650><c> support</c><00:18:21.040><c> jelly</c><00:18:21.610><c> bean</c>

00:18:21.810 --> 00:18:21.820 align:start position:0%
interested in and we support jelly bean
 

00:18:21.820 --> 00:18:27.060 align:start position:0%
interested in and we support jelly bean
through<00:18:22.150><c> oh</c><00:18:22.290><c> right</c><00:18:23.290><c> now</c><00:18:25.560><c> so</c><00:18:26.560><c> at</c><00:18:26.770><c> Google</c><00:18:26.890><c> we</c>

00:18:27.060 --> 00:18:27.070 align:start position:0%
through oh right now so at Google we
 

00:18:27.070 --> 00:18:28.980 align:start position:0%
through oh right now so at Google we
rely<00:18:27.370><c> really</c><00:18:27.640><c> heavily</c><00:18:27.880><c> on</c><00:18:28.210><c> robolectric</c><00:18:28.570><c> and</c>

00:18:28.980 --> 00:18:28.990 align:start position:0%
rely really heavily on robolectric and
 

00:18:28.990 --> 00:18:31.020 align:start position:0%
rely really heavily on robolectric and
we're<00:18:29.980><c> investing</c><00:18:30.340><c> making</c><00:18:30.640><c> it</c><00:18:30.760><c> better</c>

00:18:31.020 --> 00:18:31.030 align:start position:0%
we're investing making it better
 

00:18:31.030 --> 00:18:32.850 align:start position:0%
we're investing making it better
we've<00:18:31.480><c> got</c><00:18:31.630><c> dozens</c><00:18:31.840><c> of</c><00:18:32.140><c> apps</c><00:18:32.290><c> including</c><00:18:32.740><c> these</c>

00:18:32.850 --> 00:18:32.860 align:start position:0%
we've got dozens of apps including these
 

00:18:32.860 --> 00:18:34.950 align:start position:0%
we've got dozens of apps including these
that<00:18:33.550><c> have</c><00:18:33.730><c> hundreds</c><00:18:34.060><c> of</c><00:18:34.180><c> thousands</c><00:18:34.630><c> of</c><00:18:34.720><c> unit</c>

00:18:34.950 --> 00:18:34.960 align:start position:0%
that have hundreds of thousands of unit
 

00:18:34.960 --> 00:18:36.960 align:start position:0%
that have hundreds of thousands of unit
tests<00:18:35.290><c> running</c><00:18:36.040><c> internally</c><00:18:36.370><c> so</c><00:18:36.670><c> it's</c><00:18:36.820><c> well</c>

00:18:36.960 --> 00:18:36.970 align:start position:0%
tests running internally so it's well
 

00:18:36.970 --> 00:18:39.990 align:start position:0%
tests running internally so it's well
battle<00:18:37.180><c> tested</c><00:18:37.980><c> and</c><00:18:38.980><c> we've</c><00:18:39.430><c> also</c><00:18:39.610><c> recently</c>

00:18:39.990 --> 00:18:40.000 align:start position:0%
battle tested and we've also recently
 

00:18:40.000 --> 00:18:42.360 align:start position:0%
battle tested and we've also recently
started<00:18:40.480><c> running</c><00:18:40.780><c> the</c><00:18:40.990><c> Android</c><00:18:41.320><c> CTS</c><00:18:42.010><c> which</c><00:18:42.190><c> is</c>

00:18:42.360 --> 00:18:42.370 align:start position:0%
started running the Android CTS which is
 

00:18:42.370 --> 00:18:44.970 align:start position:0%
started running the Android CTS which is
a<00:18:42.540><c> dandy</c><00:18:43.540><c> official</c><00:18:43.810><c> Android</c><00:18:44.110><c> test</c><00:18:44.740><c> suite</c>

00:18:44.970 --> 00:18:44.980 align:start position:0%
a dandy official Android test suite
 

00:18:44.980 --> 00:18:46.950 align:start position:0%
a dandy official Android test suite
again<00:18:45.430><c> strobe</c><00:18:45.850><c> electric</c><00:18:46.210><c> and</c><00:18:46.390><c> we're</c><00:18:46.480><c> about</c><00:18:46.630><c> 70</c>

00:18:46.950 --> 00:18:46.960 align:start position:0%
again strobe electric and we're about 70
 

00:18:46.960 --> 00:18:48.420 align:start position:0%
again strobe electric and we're about 70
percent<00:18:47.080><c> passing</c><00:18:47.530><c> right</c><00:18:47.680><c> now</c><00:18:47.830><c> getting</c><00:18:48.280><c> better</c>

00:18:48.420 --> 00:18:48.430 align:start position:0%
percent passing right now getting better
 

00:18:48.430 --> 00:18:51.630 align:start position:0%
percent passing right now getting better
with<00:18:48.640><c> every</c><00:18:48.880><c> release</c><00:18:49.920><c> so</c><00:18:50.920><c> if</c><00:18:51.190><c> you've</c><00:18:51.310><c> used</c><00:18:51.340><c> our</c>

00:18:51.630 --> 00:18:51.640 align:start position:0%
with every release so if you've used our
 

00:18:51.640 --> 00:18:53.610 align:start position:0%
with every release so if you've used our
electric<00:18:51.940><c> in</c><00:18:52.060><c> the</c><00:18:52.150><c> past</c><00:18:52.360><c> and</c><00:18:52.660><c> found</c><00:18:53.410><c> that</c><00:18:53.470><c> it's</c>

00:18:53.610 --> 00:18:53.620 align:start position:0%
electric in the past and found that it's
 

00:18:53.620 --> 00:18:55.770 align:start position:0%
electric in the past and found that it's
come<00:18:53.770><c> up</c><00:18:53.860><c> short</c><00:18:54.070><c> or</c><00:18:54.310><c> if</c><00:18:55.210><c> you're</c><00:18:55.390><c> stuck</c><00:18:55.600><c> in</c><00:18:55.690><c> an</c>

00:18:55.770 --> 00:18:55.780 align:start position:0%
come up short or if you're stuck in an
 

00:18:55.780 --> 00:18:57.510 align:start position:0%
come up short or if you're stuck in an
old<00:18:55.930><c> version</c><00:18:56.170><c> definitely</c><00:18:56.980><c> recommend</c><00:18:57.340><c> that</c>

00:18:57.510 --> 00:18:57.520 align:start position:0%
old version definitely recommend that
 

00:18:57.520 --> 00:19:00.120 align:start position:0%
old version definitely recommend that
you<00:18:57.760><c> you</c><00:18:58.150><c> get</c><00:18:58.300><c> up</c><00:18:58.360><c> to</c><00:18:58.600><c> the</c><00:18:59.230><c> latest</c><00:18:59.410><c> because</c>

00:19:00.120 --> 00:19:00.130 align:start position:0%
you you get up to the latest because
 

00:19:00.130 --> 00:19:05.100 align:start position:0%
you you get up to the latest because
it's<00:19:00.520><c> been</c><00:19:00.700><c> a</c><00:19:00.730><c> long</c><00:19:00.940><c> way</c><00:19:03.660><c> we've</c><00:19:04.660><c> been</c><00:19:04.690><c> working</c>

00:19:05.100 --> 00:19:05.110 align:start position:0%
it's been a long way we've been working
 

00:19:05.110 --> 00:19:07.590 align:start position:0%
it's been a long way we've been working
on<00:19:05.380><c> reducing</c><00:19:06.220><c> friction</c><00:19:06.670><c> and</c><00:19:07.030><c> then</c><00:19:07.210><c> in</c>

00:19:07.590 --> 00:19:07.600 align:start position:0%
on reducing friction and then in
 

00:19:07.600 --> 00:19:08.850 align:start position:0%
on reducing friction and then in
integrating<00:19:08.080><c> Rev</c><00:19:08.230><c> electric</c><00:19:08.530><c> with</c><00:19:08.620><c> Android</c>

00:19:08.850 --> 00:19:08.860 align:start position:0%
integrating Rev electric with Android
 

00:19:08.860 --> 00:19:09.510 align:start position:0%
integrating Rev electric with Android
toolchain

00:19:09.510 --> 00:19:09.520 align:start position:0%
toolchain
 

00:19:09.520 --> 00:19:11.320 align:start position:0%
toolchain
it<00:19:09.580><c> works</c><00:19:09.880><c> now</c><00:19:10.150><c> very</c><00:19:10.450><c> well</c><00:19:10.660><c> with</c>

00:19:11.320 --> 00:19:11.330 align:start position:0%
it works now very well with
 

00:19:11.330 --> 00:19:13.450 align:start position:0%
it works now very well with
with<00:19:11.630><c> Android</c><00:19:11.900><c> studio</c><00:19:11.930><c> with</c><00:19:12.860><c> Gradle</c><00:19:13.250><c> and</c>

00:19:13.450 --> 00:19:13.460 align:start position:0%
with Android studio with Gradle and
 

00:19:13.460 --> 00:19:16.390 align:start position:0%
with Android studio with Gradle and
we've<00:19:14.090><c> got</c><00:19:14.360><c> support</c><00:19:14.930><c> for</c><00:19:15.230><c> Basile</c><00:19:15.590><c> Google's</c>

00:19:16.390 --> 00:19:16.400 align:start position:0%
we've got support for Basile Google's
 

00:19:16.400 --> 00:19:18.520 align:start position:0%
we've got support for Basile Google's
into<00:19:16.670><c> Google's</c><00:19:17.210><c> own</c><00:19:17.330><c> open-source</c><00:19:18.320><c> build</c>

00:19:18.520 --> 00:19:18.530 align:start position:0%
into Google's own open-source build
 

00:19:18.530 --> 00:19:23.410 align:start position:0%
into Google's own open-source build
system<00:19:18.830><c> coming</c><00:19:19.100><c> soon</c><00:19:21.190><c> so</c><00:19:22.190><c> robolectric</c><00:19:22.910><c> isn't</c>

00:19:23.410 --> 00:19:23.420 align:start position:0%
system coming soon so robolectric isn't
 

00:19:23.420 --> 00:19:26.110 align:start position:0%
system coming soon so robolectric isn't
a<00:19:23.540><c> one-size-fits-all</c><00:19:23.860><c> testing</c><00:19:24.860><c> tool</c><00:19:25.120><c> it's</c>

00:19:26.110 --> 00:19:26.120 align:start position:0%
a one-size-fits-all testing tool it's
 

00:19:26.120 --> 00:19:27.700 align:start position:0%
a one-size-fits-all testing tool it's
fast<00:19:26.660><c> but</c><00:19:27.020><c> it's</c><00:19:27.170><c> not</c><00:19:27.320><c> a</c><00:19:27.350><c> hundred</c><00:19:27.590><c> percent</c>

00:19:27.700 --> 00:19:27.710 align:start position:0%
fast but it's not a hundred percent
 

00:19:27.710 --> 00:19:29.590 align:start position:0%
fast but it's not a hundred percent
identical<00:19:28.190><c> to</c><00:19:28.400><c> Android</c><00:19:28.730><c> in</c><00:19:28.850><c> every</c><00:19:29.030><c> way</c><00:19:29.180><c> so</c><00:19:29.540><c> you</c>

00:19:29.590 --> 00:19:29.600 align:start position:0%
identical to Android in every way so you
 

00:19:29.600 --> 00:19:33.490 align:start position:0%
identical to Android in every way so you
want<00:19:29.990><c> to</c><00:19:30.080><c> use</c><00:19:30.260><c> it</c><00:19:30.620><c> judiciously</c><00:19:31.450><c> as</c><00:19:32.450><c> we</c><00:19:33.350><c> said</c>

00:19:33.490 --> 00:19:33.500 align:start position:0%
want to use it judiciously as we said
 

00:19:33.500 --> 00:19:35.800 align:start position:0%
want to use it judiciously as we said
before<00:19:33.560><c> avoid</c><00:19:34.070><c> writing</c><00:19:34.580><c> unit</c><00:19:35.240><c> tests</c><00:19:35.630><c> that</c>

00:19:35.800 --> 00:19:35.810 align:start position:0%
before avoid writing unit tests that
 

00:19:35.810 --> 00:19:37.780 align:start position:0%
before avoid writing unit tests that
link<00:19:36.110><c> multiple</c><00:19:36.530><c> activities</c><00:19:37.070><c> together</c><00:19:37.310><c> that's</c>

00:19:37.780 --> 00:19:37.790 align:start position:0%
link multiple activities together that's
 

00:19:37.790 --> 00:19:39.490 align:start position:0%
link multiple activities together that's
not<00:19:37.940><c> so</c><00:19:38.510><c> much</c><00:19:38.630><c> a</c><00:19:38.750><c> unit</c><00:19:38.990><c> test</c><00:19:39.110><c> that's</c><00:19:39.350><c> much</c>

00:19:39.490 --> 00:19:39.500 align:start position:0%
not so much a unit test that's much
 

00:19:39.500 --> 00:19:42.010 align:start position:0%
not so much a unit test that's much
better<00:19:39.650><c> for</c><00:19:39.890><c> espresso</c><00:19:40.480><c> if</c><00:19:41.480><c> you</c><00:19:41.600><c> find</c><00:19:41.780><c> yourself</c>

00:19:42.010 --> 00:19:42.020 align:start position:0%
better for espresso if you find yourself
 

00:19:42.020 --> 00:19:43.090 align:start position:0%
better for espresso if you find yourself
dealing<00:19:42.080><c> with</c><00:19:42.380><c> multiple</c><00:19:42.590><c> threads</c>

00:19:43.090 --> 00:19:43.100 align:start position:0%
dealing with multiple threads
 

00:19:43.100 --> 00:19:45.600 align:start position:0%
dealing with multiple threads
synchronization<00:19:44.060><c> issues</c><00:19:44.240><c> stuff</c><00:19:44.960><c> like</c><00:19:45.080><c> that</c>

00:19:45.600 --> 00:19:45.610 align:start position:0%
synchronization issues stuff like that
 

00:19:45.610 --> 00:19:47.680 align:start position:0%
synchronization issues stuff like that
you're<00:19:46.610><c> also</c><00:19:46.730><c> probably</c><00:19:46.940><c> not</c><00:19:47.180><c> writing</c><00:19:47.420><c> a</c><00:19:47.480><c> unit</c>

00:19:47.680 --> 00:19:47.690 align:start position:0%
you're also probably not writing a unit
 

00:19:47.690 --> 00:19:50.370 align:start position:0%
you're also probably not writing a unit
test<00:19:47.810><c> so</c><00:19:48.230><c> not</c><00:19:48.740><c> good</c><00:19:48.920><c> for</c><00:19:49.070><c> electric</c><00:19:49.670><c> and</c>

00:19:50.370 --> 00:19:50.380 align:start position:0%
test so not good for electric and
 

00:19:50.380 --> 00:19:53.530 align:start position:0%
test so not good for electric and
particularly<00:19:51.380><c> avoid</c><00:19:51.890><c> using</c><00:19:52.670><c> robolectric</c><00:19:52.970><c> to</c>

00:19:53.530 --> 00:19:53.540 align:start position:0%
particularly avoid using robolectric to
 

00:19:53.540 --> 00:19:57.940 align:start position:0%
particularly avoid using robolectric to
test<00:19:54.290><c> reintegration</c><00:19:54.800><c> with</c><00:19:55.600><c> with</c><00:19:56.600><c> android</c><00:19:56.960><c> api</c>

00:19:57.940 --> 00:19:57.950 align:start position:0%
test reintegration with with android api
 

00:19:57.950 --> 00:20:00.210 align:start position:0%
test reintegration with with android api
s<00:19:58.070><c> and</c><00:19:58.430><c> things</c><00:19:59.120><c> like</c><00:19:59.240><c> Google</c><00:19:59.540><c> Play</c><00:19:59.660><c> services</c>

00:20:00.210 --> 00:20:00.220 align:start position:0%
s and things like Google Play services
 

00:20:00.220 --> 00:20:02.980 align:start position:0%
s and things like Google Play services
you<00:20:01.220><c> really</c><00:20:01.490><c> need</c><00:20:01.670><c> to</c><00:20:01.850><c> have</c><00:20:02.240><c> higher</c><00:20:02.660><c> level</c>

00:20:02.980 --> 00:20:02.990 align:start position:0%
you really need to have higher level
 

00:20:02.990 --> 00:20:04.720 align:start position:0%
you really need to have higher level
tests<00:20:03.230><c> to</c><00:20:03.440><c> give</c><00:20:03.560><c> you</c><00:20:03.620><c> confidence</c><00:20:03.950><c> that</c><00:20:04.190><c> that's</c>

00:20:04.720 --> 00:20:04.730 align:start position:0%
tests to give you confidence that that's
 

00:20:04.730 --> 00:20:07.600 align:start position:0%
tests to give you confidence that that's
working<00:20:05.890><c> so</c><00:20:06.890><c> now</c><00:20:06.920><c> that</c><00:20:07.220><c> we've</c><00:20:07.340><c> got</c><00:20:07.460><c> some</c>

00:20:07.600 --> 00:20:07.610 align:start position:0%
working so now that we've got some
 

00:20:07.610 --> 00:20:09.430 align:start position:0%
working so now that we've got some
passing<00:20:08.210><c> unit</c><00:20:08.450><c> tests</c><00:20:08.780><c> I'm</c><00:20:08.930><c> going</c><00:20:09.200><c> to</c><00:20:09.260><c> have</c><00:20:09.350><c> you</c>

00:20:09.430 --> 00:20:09.440 align:start position:0%
passing unit tests I'm going to have you
 

00:20:09.440 --> 00:20:11.500 align:start position:0%
passing unit tests I'm going to have you
over<00:20:09.530><c> to</c><00:20:09.680><c> my</c><00:20:09.770><c> colleague</c><00:20:10.130><c> Stephan</c><00:20:10.640><c> to</c><00:20:10.910><c> talk</c>

00:20:11.500 --> 00:20:11.510 align:start position:0%
over to my colleague Stephan to talk
 

00:20:11.510 --> 00:20:19.819 align:start position:0%
over to my colleague Stephan to talk
about<00:20:11.630><c> our</c><00:20:12.380><c> level</c><00:20:12.620><c> testing</c>

00:20:19.819 --> 00:20:19.829 align:start position:0%
 
 

00:20:19.829 --> 00:20:24.269 align:start position:0%
 
Thank<00:20:20.829><c> You</c><00:20:20.919><c> Christian</c><00:20:22.499><c> so</c><00:20:23.499><c> let's</c><00:20:23.679><c> go</c><00:20:23.859><c> back</c><00:20:23.889><c> to</c>

00:20:24.269 --> 00:20:24.279 align:start position:0%
Thank You Christian so let's go back to
 

00:20:24.279 --> 00:20:27.209 align:start position:0%
Thank You Christian so let's go back to
our<00:20:24.369><c> developer</c><00:20:24.879><c> workflow</c><00:20:25.089><c> diagram</c><00:20:25.809><c> and</c><00:20:26.079><c> so</c><00:20:26.829><c> at</c>

00:20:27.209 --> 00:20:27.219 align:start position:0%
our developer workflow diagram and so at
 

00:20:27.219 --> 00:20:29.039 align:start position:0%
our developer workflow diagram and so at
this<00:20:27.459><c> point</c><00:20:27.729><c> we</c><00:20:27.999><c> hopefully</c><00:20:28.209><c> have</c><00:20:28.659><c> a</c><00:20:28.690><c> ton</c><00:20:29.019><c> of</c>

00:20:29.039 --> 00:20:29.049 align:start position:0%
this point we hopefully have a ton of
 

00:20:29.049 --> 00:20:31.049 align:start position:0%
this point we hopefully have a ton of
unit<00:20:29.440><c> tests</c><00:20:29.679><c> and</c><00:20:29.950><c> they</c><00:20:30.279><c> thoroughly</c><00:20:30.489><c> test</c><00:20:30.879><c> all</c>

00:20:31.049 --> 00:20:31.059 align:start position:0%
unit tests and they thoroughly test all
 

00:20:31.059 --> 00:20:33.989 align:start position:0%
unit tests and they thoroughly test all
our<00:20:31.089><c> business</c><00:20:31.570><c> logic</c><00:20:32.339><c> but</c><00:20:33.339><c> let's</c><00:20:33.789><c> switch</c>

00:20:33.989 --> 00:20:33.999 align:start position:0%
our business logic but let's switch
 

00:20:33.999 --> 00:20:36.029 align:start position:0%
our business logic but let's switch
gears<00:20:34.029><c> and</c><00:20:34.659><c> try</c><00:20:35.019><c> to</c><00:20:35.079><c> see</c><00:20:35.349><c> how</c><00:20:35.499><c> we</c><00:20:35.529><c> can</c><00:20:35.739><c> actually</c>

00:20:36.029 --> 00:20:36.039 align:start position:0%
gears and try to see how we can actually
 

00:20:36.039 --> 00:20:38.190 align:start position:0%
gears and try to see how we can actually
write<00:20:36.190><c> some</c><00:20:36.399><c> integration</c><00:20:36.999><c> tests</c><00:20:37.359><c> to</c><00:20:37.749><c> see</c><00:20:37.959><c> how</c>

00:20:38.190 --> 00:20:38.200 align:start position:0%
write some integration tests to see how
 

00:20:38.200 --> 00:20:40.440 align:start position:0%
write some integration tests to see how
these<00:20:38.409><c> units</c><00:20:38.799><c> integrate</c><00:20:39.309><c> and</c><00:20:39.549><c> how</c><00:20:40.269><c> they</c>

00:20:40.440 --> 00:20:40.450 align:start position:0%
these units integrate and how they
 

00:20:40.450 --> 00:20:42.119 align:start position:0%
these units integrate and how they
actually<00:20:40.659><c> integrate</c><00:20:41.289><c> with</c><00:20:41.409><c> Android</c><00:20:41.829><c> and</c><00:20:42.009><c> how</c>

00:20:42.119 --> 00:20:42.129 align:start position:0%
actually integrate with Android and how
 

00:20:42.129 --> 00:20:45.869 align:start position:0%
actually integrate with Android and how
they<00:20:42.279><c> run</c><00:20:42.489><c> in</c><00:20:42.669><c> a</c><00:20:42.759><c> real</c><00:20:42.940><c> environment</c><00:20:44.579><c> so</c><00:20:45.579><c> on</c>

00:20:45.869 --> 00:20:45.879 align:start position:0%
they run in a real environment so on
 

00:20:45.879 --> 00:20:48.359 align:start position:0%
they run in a real environment so on
Android<00:20:46.269><c> these</c><00:20:47.079><c> tests</c><00:20:47.529><c> are</c><00:20:47.649><c> usually</c><00:20:48.039><c> referred</c>

00:20:48.359 --> 00:20:48.369 align:start position:0%
Android these tests are usually referred
 

00:20:48.369 --> 00:20:50.549 align:start position:0%
Android these tests are usually referred
to<00:20:48.399><c> as</c><00:20:48.549><c> instrumentation</c><00:20:49.450><c> tests</c><00:20:49.899><c> and</c><00:20:50.019><c> I'm</c>

00:20:50.549 --> 00:20:50.559 align:start position:0%
to as instrumentation tests and I'm
 

00:20:50.559 --> 00:20:52.199 align:start position:0%
to as instrumentation tests and I'm
pretty<00:20:50.799><c> sure</c><00:20:51.039><c> most</c><00:20:51.279><c> of</c><00:20:51.459><c> you</c><00:20:51.639><c> have</c><00:20:51.669><c> written</c><00:20:51.999><c> an</c>

00:20:52.199 --> 00:20:52.209 align:start position:0%
pretty sure most of you have written an
 

00:20:52.209 --> 00:20:54.629 align:start position:0%
pretty sure most of you have written an
instrumentation<00:20:52.719><c> test</c><00:20:53.139><c> before</c><00:20:53.499><c> and</c><00:20:53.769><c> even</c>

00:20:54.629 --> 00:20:54.639 align:start position:0%
instrumentation test before and even
 

00:20:54.639 --> 00:20:57.119 align:start position:0%
instrumentation test before and even
though<00:20:54.969><c> they</c><00:20:55.690><c> look</c><00:20:55.869><c> super</c><00:20:56.529><c> simple</c><00:20:56.829><c> on</c><00:20:57.039><c> the</c>

00:20:57.119 --> 00:20:57.129 align:start position:0%
though they look super simple on the
 

00:20:57.129 --> 00:20:59.999 align:start position:0%
though they look super simple on the
surface<00:20:57.579><c> there's</c><00:20:58.089><c> actually</c><00:20:58.599><c> a</c><00:20:58.779><c> lot</c><00:20:59.169><c> going</c><00:20:59.889><c> on</c>

00:20:59.999 --> 00:21:00.009 align:start position:0%
surface there's actually a lot going on
 

00:21:00.009 --> 00:21:02.190 align:start position:0%
surface there's actually a lot going on
under<00:21:00.339><c> the</c><00:21:00.429><c> hood</c><00:21:00.549><c> if</c><00:21:00.700><c> you</c><00:21:00.729><c> think</c><00:21:01.029><c> about</c><00:21:01.209><c> it</c><00:21:01.419><c> you</c>

00:21:02.190 --> 00:21:02.200 align:start position:0%
under the hood if you think about it you
 

00:21:02.200 --> 00:21:03.719 align:start position:0%
under the hood if you think about it you
have<00:21:02.229><c> to</c><00:21:02.499><c> compile</c><00:21:02.889><c> the</c><00:21:03.039><c> code</c><00:21:03.249><c> you</c><00:21:03.579><c> have</c><00:21:03.609><c> to</c>

00:21:03.719 --> 00:21:03.729 align:start position:0%
have to compile the code you have to
 

00:21:03.729 --> 00:21:05.729 align:start position:0%
have to compile the code you have to
process<00:21:04.089><c> your</c><00:21:04.419><c> resources</c><00:21:04.989><c> you</c><00:21:05.259><c> have</c><00:21:05.379><c> to</c><00:21:05.409><c> bring</c>

00:21:05.729 --> 00:21:05.739 align:start position:0%
process your resources you have to bring
 

00:21:05.739 --> 00:21:08.339 align:start position:0%
process your resources you have to bring
up<00:21:05.889><c> a</c><00:21:06.009><c> full</c><00:21:06.249><c> system</c><00:21:06.700><c> image</c><00:21:06.999><c> and</c><00:21:07.269><c> then</c><00:21:07.959><c> run</c><00:21:08.229><c> your</c>

00:21:08.339 --> 00:21:08.349 align:start position:0%
up a full system image and then run your
 

00:21:08.349 --> 00:21:11.489 align:start position:0%
up a full system image and then run your
tests<00:21:08.619><c> and</c><00:21:09.179><c> there's</c><00:21:10.179><c> a</c><00:21:10.239><c> lot</c><00:21:10.539><c> of</c><00:21:10.690><c> things</c><00:21:10.959><c> that</c>

00:21:11.489 --> 00:21:11.499 align:start position:0%
tests and there's a lot of things that
 

00:21:11.499 --> 00:21:13.589 align:start position:0%
tests and there's a lot of things that
go<00:21:11.709><c> on</c><00:21:11.739><c> on</c><00:21:12.219><c> various</c><00:21:12.639><c> levels</c><00:21:12.999><c> of</c><00:21:13.119><c> the</c><00:21:13.269><c> Android</c>

00:21:13.589 --> 00:21:13.599 align:start position:0%
go on on various levels of the Android
 

00:21:13.599 --> 00:21:17.849 align:start position:0%
go on on various levels of the Android
stack<00:21:14.309><c> so</c><00:21:15.479><c> these</c><00:21:16.479><c> tests</c><00:21:17.079><c> give</c><00:21:17.529><c> you</c><00:21:17.679><c> high</c>

00:21:17.849 --> 00:21:17.859 align:start position:0%
stack so these tests give you high
 

00:21:17.859 --> 00:21:20.339 align:start position:0%
stack so these tests give you high
fidelity<00:21:18.179><c> but</c><00:21:19.179><c> as</c><00:21:19.299><c> John</c><00:21:19.539><c> was</c><00:21:19.659><c> mentioning</c><00:21:20.169><c> they</c>

00:21:20.339 --> 00:21:20.349 align:start position:0%
fidelity but as John was mentioning they
 

00:21:20.349 --> 00:21:23.159 align:start position:0%
fidelity but as John was mentioning they
come<00:21:20.529><c> at</c><00:21:20.649><c> a</c><00:21:20.679><c> cost</c><00:21:21.039><c> which</c><00:21:21.459><c> is</c><00:21:22.029><c> they're</c><00:21:22.719><c> slower</c>

00:21:23.159 --> 00:21:23.169 align:start position:0%
come at a cost which is they're slower
 

00:21:23.169 --> 00:21:26.999 align:start position:0%
come at a cost which is they're slower
and<00:21:24.209><c> sometimes</c><00:21:25.209><c> they're</c><00:21:25.749><c> more</c><00:21:26.019><c> flaky</c><00:21:26.469><c> than</c>

00:21:26.999 --> 00:21:27.009 align:start position:0%
and sometimes they're more flaky than
 

00:21:27.009 --> 00:21:30.569 align:start position:0%
and sometimes they're more flaky than
unit<00:21:27.309><c> tests</c><00:21:28.320><c> so</c><00:21:29.320><c> let's</c><00:21:29.499><c> actually</c><00:21:29.739><c> see</c><00:21:30.369><c> how</c>

00:21:30.569 --> 00:21:30.579 align:start position:0%
unit tests so let's actually see how
 

00:21:30.579 --> 00:21:31.469 align:start position:0%
unit tests so let's actually see how
this<00:21:30.729><c> works</c><00:21:30.999><c> in</c><00:21:31.179><c> your</c><00:21:31.269><c> day-to-day</c>

00:21:31.469 --> 00:21:31.479 align:start position:0%
this works in your day-to-day
 

00:21:31.479 --> 00:21:34.409 align:start position:0%
this works in your day-to-day
development<00:21:31.899><c> flow</c><00:21:32.529><c> so</c><00:21:33.429><c> let's</c><00:21:33.639><c> say</c><00:21:33.879><c> you're</c><00:21:34.389><c> in</c>

00:21:34.409 --> 00:21:34.419 align:start position:0%
development flow so let's say you're in
 

00:21:34.419 --> 00:21:36.930 align:start position:0%
development flow so let's say you're in
Android<00:21:34.839><c> studio</c><00:21:35.070><c> you've</c><00:21:36.070><c> just</c><00:21:36.369><c> written</c><00:21:36.579><c> your</c>

00:21:36.930 --> 00:21:36.940 align:start position:0%
Android studio you've just written your
 

00:21:36.940 --> 00:21:39.479 align:start position:0%
Android studio you've just written your
you<00:21:37.690><c> know</c><00:21:37.809><c> new</c><00:21:38.079><c> espresso</c><00:21:38.320><c> test</c><00:21:38.799><c> and</c><00:21:39.249><c> you</c><00:21:39.369><c> hit</c>

00:21:39.479 --> 00:21:39.489 align:start position:0%
you know new espresso test and you hit
 

00:21:39.489 --> 00:21:42.690 align:start position:0%
you know new espresso test and you hit
the<00:21:39.579><c> Run</c><00:21:39.759><c> button</c><00:21:39.789><c> to</c><00:21:40.419><c> run</c><00:21:40.570><c> the</c><00:21:40.629><c> test</c><00:21:41.579><c> so</c><00:21:42.579><c> the</c>

00:21:42.690 --> 00:21:42.700 align:start position:0%
the Run button to run the test so the
 

00:21:42.700 --> 00:21:44.069 align:start position:0%
the Run button to run the test so the
first<00:21:42.879><c> thing</c><00:21:43.059><c> that</c><00:21:43.179><c> Android</c><00:21:43.509><c> studio</c><00:21:43.719><c> is</c><00:21:43.869><c> going</c>

00:21:44.069 --> 00:21:44.079 align:start position:0%
first thing that Android studio is going
 

00:21:44.079 --> 00:21:46.109 align:start position:0%
first thing that Android studio is going
to<00:21:44.259><c> do</c><00:21:44.409><c> is</c><00:21:44.529><c> it's</c><00:21:44.769><c> going</c><00:21:44.919><c> to</c><00:21:45.039><c> install</c><00:21:45.279><c> two</c><00:21:45.609><c> apks</c>

00:21:46.109 --> 00:21:46.119 align:start position:0%
to do is it's going to install two apks
 

00:21:46.119 --> 00:21:48.989 align:start position:0%
to do is it's going to install two apks
for<00:21:46.359><c> you</c><00:21:46.450><c> the</c><00:21:47.079><c> test</c><00:21:47.349><c> apk</c><00:21:47.829><c> and</c><00:21:48.039><c> the</c><00:21:48.639><c> app</c><00:21:48.729><c> under</c>

00:21:48.989 --> 00:21:48.999 align:start position:0%
for you the test apk and the app under
 

00:21:48.999 --> 00:21:52.649 align:start position:0%
for you the test apk and the app under
test<00:21:50.009><c> so</c><00:21:51.009><c> now</c><00:21:51.159><c> the</c><00:21:51.219><c> test</c><00:21:51.639><c> APK</c><00:21:52.149><c> contains</c>

00:21:52.649 --> 00:21:52.659 align:start position:0%
test so now the test APK contains
 

00:21:52.659 --> 00:21:54.479 align:start position:0%
test so now the test APK contains
Android<00:21:53.019><c> JUnit</c><00:21:53.349><c> runner</c><00:21:53.529><c> it</c><00:21:53.950><c> contains</c><00:21:54.339><c> the</c>

00:21:54.479 --> 00:21:54.489 align:start position:0%
Android JUnit runner it contains the
 

00:21:54.489 --> 00:21:57.349 align:start position:0%
Android JUnit runner it contains the
test<00:21:54.700><c> cases</c><00:21:54.999><c> and</c><00:21:55.389><c> your</c><00:21:56.289><c> test</c><00:21:56.529><c> manifest</c><00:21:57.009><c> and</c>

00:21:57.349 --> 00:21:57.359 align:start position:0%
test cases and your test manifest and
 

00:21:57.359 --> 00:22:00.389 align:start position:0%
test cases and your test manifest and
then<00:21:58.359><c> in</c><00:21:58.479><c> order</c><00:21:58.599><c> to</c><00:21:58.749><c> run</c><00:21:58.959><c> the</c><00:21:59.139><c> test</c><00:21:59.399><c> Android</c>

00:22:00.389 --> 00:22:00.399 align:start position:0%
then in order to run the test Android
 

00:22:00.399 --> 00:22:02.759 align:start position:0%
then in order to run the test Android
studio<00:22:00.549><c> calls</c><00:22:00.940><c> under</c><00:22:01.299><c> the</c><00:22:01.659><c> hood</c><00:22:01.809><c> adb</c><00:22:02.259><c> shell</c><00:22:02.289><c> am</c>

00:22:02.759 --> 00:22:02.769 align:start position:0%
studio calls under the hood adb shell am
 

00:22:02.769 --> 00:22:05.099 align:start position:0%
studio calls under the hood adb shell am
instrument<00:22:03.279><c> and</c><00:22:03.459><c> then</c><00:22:04.299><c> Android</c><00:22:04.599><c> Jade</c><00:22:04.839><c> runner</c>

00:22:05.099 --> 00:22:05.109 align:start position:0%
instrument and then Android Jade runner
 

00:22:05.109 --> 00:22:08.310 align:start position:0%
instrument and then Android Jade runner
will<00:22:05.349><c> use</c><00:22:05.559><c> instrumentation</c><00:22:06.429><c> to</c><00:22:07.419><c> control</c><00:22:07.839><c> your</c>

00:22:08.310 --> 00:22:08.320 align:start position:0%
will use instrumentation to control your
 

00:22:08.320 --> 00:22:12.539 align:start position:0%
will use instrumentation to control your
app<00:22:08.469><c> under</c><00:22:08.769><c> test</c><00:22:11.219><c> so</c><00:22:12.219><c> what</c><00:22:12.399><c> is</c>

00:22:12.539 --> 00:22:12.549 align:start position:0%
app under test so what is
 

00:22:12.549 --> 00:22:15.659 align:start position:0%
app under test so what is
instrumentation<00:22:13.179><c> and</c><00:22:13.659><c> I</c><00:22:14.529><c> think</c><00:22:15.070><c> you</c><00:22:15.309><c> guys</c><00:22:15.459><c> may</c>

00:22:15.659 --> 00:22:15.669 align:start position:0%
instrumentation and I think you guys may
 

00:22:15.669 --> 00:22:18.149 align:start position:0%
instrumentation and I think you guys may
have<00:22:15.820><c> you</c><00:22:16.059><c> guys</c><00:22:16.239><c> may</c><00:22:16.419><c> have</c><00:22:16.450><c> noticed</c><00:22:16.599><c> this</c><00:22:17.159><c> it's</c>

00:22:18.149 --> 00:22:18.159 align:start position:0%
have you guys may have noticed this it's
 

00:22:18.159 --> 00:22:20.999 align:start position:0%
have you guys may have noticed this it's
a<00:22:18.249><c> top-level</c><00:22:18.700><c> tag</c><00:22:19.089><c> in</c><00:22:19.959><c> your</c><00:22:20.139><c> manifest</c><00:22:20.409><c> and</c><00:22:20.859><c> why</c>

00:22:20.999 --> 00:22:21.009 align:start position:0%
a top-level tag in your manifest and why
 

00:22:21.009 --> 00:22:23.190 align:start position:0%
a top-level tag in your manifest and why
is<00:22:21.070><c> that</c><00:22:21.629><c> instrumentation</c><00:22:22.629><c> is</c><00:22:22.839><c> actually</c>

00:22:23.190 --> 00:22:23.200 align:start position:0%
is that instrumentation is actually
 

00:22:23.200 --> 00:22:25.979 align:start position:0%
is that instrumentation is actually
something<00:22:23.469><c> that</c><00:22:23.829><c> you</c><00:22:24.639><c> know</c><00:22:24.759><c> it's</c><00:22:25.299><c> used</c><00:22:25.479><c> deeply</c>

00:22:25.979 --> 00:22:25.989 align:start position:0%
something that you know it's used deeply
 

00:22:25.989 --> 00:22:28.079 align:start position:0%
something that you know it's used deeply
inside<00:22:26.440><c> the</c><00:22:26.889><c> android</c><00:22:27.190><c> framework</c><00:22:27.219><c> and</c><00:22:27.879><c> it's</c>

00:22:28.079 --> 00:22:28.089 align:start position:0%
inside the android framework and it's
 

00:22:28.089 --> 00:22:31.079 align:start position:0%
inside the android framework and it's
used<00:22:28.359><c> to</c><00:22:28.950><c> control</c><00:22:29.950><c> the</c><00:22:30.279><c> life</c><00:22:30.429><c> cycle</c><00:22:30.819><c> of</c><00:22:30.909><c> your</c>

00:22:31.079 --> 00:22:31.089 align:start position:0%
used to control the life cycle of your
 

00:22:31.089 --> 00:22:32.130 align:start position:0%
used to control the life cycle of your
activities<00:22:31.629><c> for</c><00:22:31.659><c> end</c>

00:22:32.130 --> 00:22:32.140 align:start position:0%
activities for end
 

00:22:32.140 --> 00:22:35.360 align:start position:0%
activities for end
so<00:22:33.130><c> if</c><00:22:33.460><c> you</c><00:22:33.730><c> think</c><00:22:33.909><c> about</c><00:22:34.059><c> it</c><00:22:34.330><c> it's</c><00:22:34.450><c> a</c><00:22:34.539><c> perfect</c>

00:22:35.360 --> 00:22:35.370 align:start position:0%
so if you think about it it's a perfect
 

00:22:35.370 --> 00:22:38.370 align:start position:0%
so if you think about it it's a perfect
interception<00:22:36.370><c> point</c><00:22:36.640><c> that</c><00:22:37.120><c> we</c><00:22:37.299><c> can</c><00:22:37.480><c> use</c><00:22:37.720><c> to</c>

00:22:38.370 --> 00:22:38.380 align:start position:0%
interception point that we can use to
 

00:22:38.380 --> 00:22:40.350 align:start position:0%
interception point that we can use to
inject<00:22:38.679><c> the</c><00:22:38.830><c> test</c><00:22:39.039><c> runner</c><00:22:39.340><c> and</c><00:22:39.610><c> that's</c><00:22:40.210><c> why</c>

00:22:40.350 --> 00:22:40.360 align:start position:0%
inject the test runner and that's why
 

00:22:40.360 --> 00:22:42.450 align:start position:0%
inject the test runner and that's why
Android<00:22:40.750><c> drainage</c><00:22:41.080><c> runner</c><00:22:41.320><c> is</c><00:22:41.590><c> not</c><00:22:42.010><c> nothing</c>

00:22:42.450 --> 00:22:42.460 align:start position:0%
Android drainage runner is not nothing
 

00:22:42.460 --> 00:22:46.919 align:start position:0%
Android drainage runner is not nothing
more<00:22:42.789><c> or</c><00:22:42.909><c> less</c><00:22:43.090><c> than</c><00:22:43.510><c> an</c><00:22:43.630><c> instrumentation</c><00:22:45.929><c> so</c>

00:22:46.919 --> 00:22:46.929 align:start position:0%
more or less than an instrumentation so
 

00:22:46.929 --> 00:22:48.930 align:start position:0%
more or less than an instrumentation so
let's<00:22:47.080><c> go</c><00:22:47.260><c> a</c><00:22:47.289><c> little</c><00:22:47.500><c> bit</c><00:22:47.679><c> deeper</c><00:22:47.860><c> and</c><00:22:48.279><c> see</c>

00:22:48.930 --> 00:22:48.940 align:start position:0%
let's go a little bit deeper and see
 

00:22:48.940 --> 00:22:50.279 align:start position:0%
let's go a little bit deeper and see
what<00:22:49.419><c> happens</c><00:22:49.750><c> when</c><00:22:49.899><c> Android</c><00:22:50.110><c> studio</c>

00:22:50.279 --> 00:22:50.289 align:start position:0%
what happens when Android studio
 

00:22:50.289 --> 00:22:54.029 align:start position:0%
what happens when Android studio
actually<00:22:50.830><c> runs</c><00:22:51.039><c> your</c><00:22:51.220><c> tests</c><00:22:51.659><c> so</c><00:22:52.659><c> it</c><00:22:53.289><c> runs</c><00:22:53.559><c> adb</c>

00:22:54.029 --> 00:22:54.039 align:start position:0%
actually runs your tests so it runs adb
 

00:22:54.039 --> 00:22:56.009 align:start position:0%
actually runs your tests so it runs adb
shell<00:22:54.070><c> am</c><00:22:54.610><c> instrument</c><00:22:55.149><c> which</c><00:22:55.570><c> will</c><00:22:55.750><c> end</c><00:22:55.899><c> up</c>

00:22:56.009 --> 00:22:56.019 align:start position:0%
shell am instrument which will end up
 

00:22:56.019 --> 00:22:59.009 align:start position:0%
shell am instrument which will end up
calling<00:22:56.260><c> out</c><00:22:56.590><c> to</c><00:22:56.919><c> activity</c><00:22:57.370><c> manager</c><00:22:58.019><c> activity</c>

00:22:59.009 --> 00:22:59.019 align:start position:0%
calling out to activity manager activity
 

00:22:59.019 --> 00:23:01.139 align:start position:0%
calling out to activity manager activity
manager<00:22:59.409><c> will</c><00:22:59.710><c> then</c><00:22:59.740><c> call</c><00:23:00.279><c> at</c><00:23:00.519><c> one</c><00:23:00.700><c> point</c><00:23:00.940><c> on</c>

00:23:01.139 --> 00:23:01.149 align:start position:0%
manager will then call at one point on
 

00:23:01.149 --> 00:23:05.159 align:start position:0%
manager will then call at one point on
create<00:23:01.570><c> on</c><00:23:01.990><c> your</c><00:23:02.230><c> instrumentation</c><00:23:04.019><c> so</c><00:23:05.019><c> now</c>

00:23:05.159 --> 00:23:05.169 align:start position:0%
create on your instrumentation so now
 

00:23:05.169 --> 00:23:06.810 align:start position:0%
create on your instrumentation so now
that<00:23:05.230><c> we</c><00:23:05.500><c> know</c><00:23:05.529><c> that</c><00:23:05.980><c> Android</c><00:23:06.309><c> Jayne</c><00:23:06.549><c> Runner</c>

00:23:06.810 --> 00:23:06.820 align:start position:0%
that we know that Android Jayne Runner
 

00:23:06.820 --> 00:23:09.769 align:start position:0%
that we know that Android Jayne Runner
is<00:23:07.090><c> our</c><00:23:07.240><c> instrumentation</c>

00:23:09.769 --> 00:23:09.779 align:start position:0%
is our instrumentation
 

00:23:09.779 --> 00:23:12.450 align:start position:0%
is our instrumentation
at<00:23:10.779><c> this</c><00:23:10.929><c> point</c><00:23:11.200><c> it</c><00:23:11.320><c> will</c><00:23:11.440><c> call</c><00:23:11.649><c> on</c><00:23:11.889><c> create</c><00:23:12.190><c> on</c>

00:23:12.450 --> 00:23:12.460 align:start position:0%
at this point it will call on create on
 

00:23:12.460 --> 00:23:15.360 align:start position:0%
at this point it will call on create on
the<00:23:12.789><c> on</c><00:23:12.970><c> the</c><00:23:13.179><c> runner</c><00:23:13.360><c> and</c><00:23:13.799><c> then</c><00:23:14.799><c> the</c><00:23:14.950><c> runner</c><00:23:15.130><c> is</c>

00:23:15.360 --> 00:23:15.370 align:start position:0%
the on the runner and then the runner is
 

00:23:15.370 --> 00:23:17.970 align:start position:0%
the on the runner and then the runner is
gonna<00:23:15.610><c> do</c><00:23:15.909><c> a</c><00:23:15.940><c> few</c><00:23:16.330><c> things</c><00:23:16.389><c> for</c><00:23:16.659><c> you</c><00:23:16.809><c> it's</c><00:23:17.110><c> going</c>

00:23:17.970 --> 00:23:17.980 align:start position:0%
gonna do a few things for you it's going
 

00:23:17.980 --> 00:23:20.250 align:start position:0%
gonna do a few things for you it's going
to<00:23:18.190><c> collect</c><00:23:18.549><c> all</c><00:23:18.760><c> your</c><00:23:18.909><c> tasks</c><00:23:19.149><c> then</c><00:23:20.080><c> it's</c>

00:23:20.250 --> 00:23:20.260 align:start position:0%
to collect all your tasks then it's
 

00:23:20.260 --> 00:23:21.600 align:start position:0%
to collect all your tasks then it's
going<00:23:20.409><c> to</c><00:23:20.529><c> run</c><00:23:20.710><c> all</c><00:23:20.919><c> these</c><00:23:21.190><c> tests</c>

00:23:21.600 --> 00:23:21.610 align:start position:0%
going to run all these tests
 

00:23:21.610 --> 00:23:24.029 align:start position:0%
going to run all these tests
sequentially<00:23:22.240><c> and</c><00:23:22.450><c> then</c><00:23:23.380><c> it's</c><00:23:23.559><c> reporting</c>

00:23:24.029 --> 00:23:24.039 align:start position:0%
sequentially and then it's reporting
 

00:23:24.039 --> 00:23:26.820 align:start position:0%
sequentially and then it's reporting
back<00:23:24.159><c> the</c><00:23:24.370><c> results</c><00:23:25.230><c> one</c><00:23:26.230><c> thing</c><00:23:26.470><c> to</c><00:23:26.620><c> note</c><00:23:26.799><c> here</c>

00:23:26.820 --> 00:23:26.830 align:start position:0%
back the results one thing to note here
 

00:23:26.830 --> 00:23:28.950 align:start position:0%
back the results one thing to note here
is<00:23:27.039><c> that</c><00:23:27.190><c> Android</c><00:23:27.760><c> JUnit</c><00:23:28.120><c> runner</c><00:23:28.360><c> and</c><00:23:28.659><c> you</c><00:23:28.840><c> may</c>

00:23:28.950 --> 00:23:28.960 align:start position:0%
is that Android JUnit runner and you may
 

00:23:28.960 --> 00:23:30.779 align:start position:0%
is that Android JUnit runner and you may
have<00:23:29.080><c> noticed</c><00:23:29.139><c> this</c><00:23:29.710><c> runs</c><00:23:30.309><c> in</c><00:23:30.429><c> the</c><00:23:30.549><c> same</c>

00:23:30.779 --> 00:23:30.789 align:start position:0%
have noticed this runs in the same
 

00:23:30.789 --> 00:23:34.169 align:start position:0%
have noticed this runs in the same
process<00:23:31.269><c> than</c><00:23:31.450><c> your</c><00:23:31.600><c> application</c><00:23:32.230><c> and</c><00:23:33.179><c> more</c>

00:23:34.169 --> 00:23:34.179 align:start position:0%
process than your application and more
 

00:23:34.179 --> 00:23:36.330 align:start position:0%
process than your application and more
importantly<00:23:34.750><c> if</c><00:23:35.080><c> you</c><00:23:35.409><c> usually</c><00:23:35.590><c> use</c><00:23:35.919><c> Android</c>

00:23:36.330 --> 00:23:36.340 align:start position:0%
importantly if you usually use Android
 

00:23:36.340 --> 00:23:38.970 align:start position:0%
importantly if you usually use Android
join<00:23:36.490><c> runner</c><00:23:36.789><c> it</c><00:23:37.029><c> runs</c><00:23:37.269><c> all</c><00:23:37.539><c> the</c><00:23:37.570><c> tests</c><00:23:38.110><c> in</c><00:23:38.230><c> one</c>

00:23:38.970 --> 00:23:38.980 align:start position:0%
join runner it runs all the tests in one
 

00:23:38.980 --> 00:23:41.389 align:start position:0%
join runner it runs all the tests in one
single<00:23:39.429><c> instrumentation</c><00:23:40.240><c> invocation</c>

00:23:41.389 --> 00:23:41.399 align:start position:0%
single instrumentation invocation
 

00:23:41.399 --> 00:23:44.370 align:start position:0%
single instrumentation invocation
Android<00:23:42.399><c> join</c><00:23:42.639><c> each</c><00:23:42.760><c> runner</c><00:23:42.940><c> is</c><00:23:43.230><c> heavily</c><00:23:44.230><c> used</c>

00:23:44.370 --> 00:23:44.380 align:start position:0%
Android join each runner is heavily used
 

00:23:44.380 --> 00:23:47.580 align:start position:0%
Android join each runner is heavily used
inside<00:23:45.279><c> Google</c><00:23:45.669><c> we</c><00:23:46.299><c> run</c><00:23:46.539><c> billions</c><00:23:47.080><c> of</c><00:23:47.260><c> tests</c>

00:23:47.580 --> 00:23:47.590 align:start position:0%
inside Google we run billions of tests
 

00:23:47.590 --> 00:23:49.740 align:start position:0%
inside Google we run billions of tests
each<00:23:47.830><c> month</c><00:23:48.309><c> using</c><00:23:48.970><c> Android</c><00:23:49.269><c> JUnit</c><00:23:49.570><c> runner</c>

00:23:49.740 --> 00:23:49.750 align:start position:0%
each month using Android JUnit runner
 

00:23:49.750 --> 00:23:52.889 align:start position:0%
each month using Android JUnit runner
and<00:23:50.049><c> while</c><00:23:50.649><c> doing</c><00:23:50.980><c> so</c><00:23:51.690><c> we</c><00:23:52.690><c> saw</c><00:23:52.870><c> some</c>

00:23:52.889 --> 00:23:52.899 align:start position:0%
and while doing so we saw some
 

00:23:52.899 --> 00:23:55.139 align:start position:0%
and while doing so we saw some
challenges<00:23:53.710><c> that</c><00:23:54.340><c> would</c><00:23:54.490><c> that</c><00:23:54.639><c> we</c><00:23:54.730><c> face</c><00:23:54.940><c> than</c>

00:23:55.139 --> 00:23:55.149 align:start position:0%
challenges that would that we face than
 

00:23:55.149 --> 00:23:59.639 align:start position:0%
challenges that would that we face than
if<00:23:55.269><c> we</c><00:23:55.360><c> had</c><00:23:55.510><c> to</c><00:23:55.539><c> solve</c><00:23:57.360><c> one</c><00:23:58.360><c> thing</c><00:23:58.630><c> that</c><00:23:59.260><c> we</c><00:23:59.409><c> see</c>

00:23:59.639 --> 00:23:59.649 align:start position:0%
if we had to solve one thing that we see
 

00:23:59.649 --> 00:24:03.060 align:start position:0%
if we had to solve one thing that we see
a<00:23:59.919><c> lot</c><00:24:00.220><c> is</c><00:24:00.750><c> shared</c><00:24:01.750><c> state</c><00:24:02.139><c> and</c><00:24:02.440><c> I'm</c><00:24:02.919><c> not</c>

00:24:03.060 --> 00:24:03.070 align:start position:0%
a lot is shared state and I'm not
 

00:24:03.070 --> 00:24:04.620 align:start position:0%
a lot is shared state and I'm not
talking<00:24:03.429><c> about</c><00:24:03.519><c> the</c><00:24:03.880><c> kind</c><00:24:04.059><c> of</c><00:24:04.179><c> like</c><00:24:04.330><c> shared</c>

00:24:04.620 --> 00:24:04.630 align:start position:0%
talking about the kind of like shared
 

00:24:04.630 --> 00:24:06.659 align:start position:0%
talking about the kind of like shared
state<00:24:04.929><c> that</c><00:24:05.200><c> you</c><00:24:05.470><c> control</c><00:24:05.860><c> and</c><00:24:06.100><c> you</c><00:24:06.220><c> that</c><00:24:06.549><c> you</c>

00:24:06.659 --> 00:24:06.669 align:start position:0%
state that you control and you that you
 

00:24:06.669 --> 00:24:08.759 align:start position:0%
state that you control and you that you
code<00:24:06.909><c> in</c><00:24:07.090><c> your</c><00:24:07.120><c> app</c><00:24:07.419><c> I'm</c><00:24:07.690><c> talking</c><00:24:08.440><c> about</c><00:24:08.500><c> the</c>

00:24:08.759 --> 00:24:08.769 align:start position:0%
code in your app I'm talking about the
 

00:24:08.769 --> 00:24:10.590 align:start position:0%
code in your app I'm talking about the
shared<00:24:09.010><c> state</c><00:24:09.340><c> that</c><00:24:09.639><c> builds</c><00:24:09.940><c> up</c><00:24:10.059><c> on</c><00:24:10.240><c> memory</c>

00:24:10.590 --> 00:24:10.600 align:start position:0%
shared state that builds up on memory
 

00:24:10.600 --> 00:24:13.680 align:start position:0%
shared state that builds up on memory
builds<00:24:11.440><c> up</c><00:24:11.529><c> on</c><00:24:11.710><c> disk</c><00:24:12.039><c> and</c><00:24:12.370><c> makes</c><00:24:13.240><c> you</c><00:24:13.419><c> it</c><00:24:13.510><c> has</c>

00:24:13.680 --> 00:24:13.690 align:start position:0%
builds up on disk and makes you it has
 

00:24:13.690 --> 00:24:16.440 align:start position:0%
builds up on disk and makes you it has
fail<00:24:14.049><c> for</c><00:24:14.529><c> you</c><00:24:15.159><c> know</c><00:24:15.279><c> no</c><00:24:15.490><c> reason</c><00:24:15.820><c> or</c><00:24:16.149><c> you</c><00:24:16.299><c> know</c>

00:24:16.440 --> 00:24:16.450 align:start position:0%
fail for you know no reason or you know
 

00:24:16.450 --> 00:24:19.289 align:start position:0%
fail for you know no reason or you know
unpredictable<00:24:17.320><c> conditions</c><00:24:17.860><c> and</c><00:24:18.130><c> this</c><00:24:18.760><c> among</c>

00:24:19.289 --> 00:24:19.299 align:start position:0%
unpredictable conditions and this among
 

00:24:19.299 --> 00:24:21.779 align:start position:0%
unpredictable conditions and this among
other<00:24:19.570><c> things</c><00:24:19.799><c> well</c><00:24:20.799><c> at</c><00:24:20.919><c> one</c><00:24:21.130><c> point</c><00:24:21.159><c> lead</c><00:24:21.639><c> to</c>

00:24:21.779 --> 00:24:21.789 align:start position:0%
other things well at one point lead to
 

00:24:21.789 --> 00:24:24.810 align:start position:0%
other things well at one point lead to
crashes<00:24:22.330><c> but</c><00:24:23.289><c> in</c><00:24:23.440><c> the</c><00:24:23.529><c> previous</c><00:24:23.980><c> model</c><00:24:24.220><c> that</c><00:24:24.789><c> I</c>

00:24:24.810 --> 00:24:24.820 align:start position:0%
crashes but in the previous model that I
 

00:24:24.820 --> 00:24:27.750 align:start position:0%
crashes but in the previous model that I
just<00:24:25.120><c> showed</c><00:24:25.330><c> you</c><00:24:25.360><c> if</c><00:24:26.010><c> if</c><00:24:27.010><c> one</c><00:24:27.279><c> of</c><00:24:27.399><c> your</c><00:24:27.519><c> tests</c>

00:24:27.750 --> 00:24:27.760 align:start position:0%
just showed you if if one of your tests
 

00:24:27.760 --> 00:24:29.610 align:start position:0%
just showed you if if one of your tests
crashes<00:24:28.269><c> your</c><00:24:28.419><c> instrumentation</c><00:24:28.960><c> it</c><00:24:29.380><c> will</c>

00:24:29.610 --> 00:24:29.620 align:start position:0%
crashes your instrumentation it will
 

00:24:29.620 --> 00:24:32.009 align:start position:0%
crashes your instrumentation it will
take<00:24:29.830><c> the</c><00:24:30.010><c> whole</c><00:24:30.039><c> instrument</c><00:24:30.639><c> the</c><00:24:31.600><c> whole</c><00:24:31.779><c> app</c>

00:24:32.009 --> 00:24:32.019 align:start position:0%
take the whole instrument the whole app
 

00:24:32.019 --> 00:24:34.500 align:start position:0%
take the whole instrument the whole app
process<00:24:32.529><c> with</c><00:24:32.769><c> it</c><00:24:32.950><c> and</c><00:24:33.130><c> all</c><00:24:33.789><c> the</c><00:24:33.909><c> subsequent</c>

00:24:34.500 --> 00:24:34.510 align:start position:0%
process with it and all the subsequent
 

00:24:34.510 --> 00:24:36.990 align:start position:0%
process with it and all the subsequent
tests<00:24:34.840><c> will</c><00:24:35.080><c> not</c><00:24:35.230><c> run</c><00:24:35.440><c> anymore</c><00:24:35.710><c> and</c><00:24:36.130><c> this</c><00:24:36.880><c> is</c>

00:24:36.990 --> 00:24:37.000 align:start position:0%
tests will not run anymore and this is
 

00:24:37.000 --> 00:24:38.789 align:start position:0%
tests will not run anymore and this is
obviously<00:24:37.360><c> a</c><00:24:37.450><c> problem</c><00:24:37.720><c> for</c><00:24:38.289><c> large</c><00:24:38.440><c> test</c>

00:24:38.789 --> 00:24:38.799 align:start position:0%
obviously a problem for large test
 

00:24:38.799 --> 00:24:41.039 align:start position:0%
obviously a problem for large test
suites<00:24:39.270><c> similarly</c><00:24:40.270><c> if</c><00:24:40.539><c> you</c><00:24:40.720><c> think</c><00:24:40.929><c> about</c>

00:24:41.039 --> 00:24:41.049 align:start position:0%
suites similarly if you think about
 

00:24:41.049 --> 00:24:43.110 align:start position:0%
suites similarly if you think about
debugging<00:24:41.380><c> if</c><00:24:41.889><c> you</c><00:24:42.309><c> run</c><00:24:42.520><c> a</c><00:24:42.639><c> couple</c><00:24:42.880><c> of</c>

00:24:43.110 --> 00:24:43.120 align:start position:0%
debugging if you run a couple of
 

00:24:43.120 --> 00:24:45.390 align:start position:0%
debugging if you run a couple of
thousand<00:24:43.600><c> tests</c><00:24:43.870><c> in</c><00:24:43.990><c> one</c><00:24:44.139><c> invocation</c>

00:24:45.390 --> 00:24:45.400 align:start position:0%
thousand tests in one invocation
 

00:24:45.400 --> 00:24:47.130 align:start position:0%
thousand tests in one invocation
think<00:24:45.700><c> about</c><00:24:45.910><c> what</c><00:24:46.180><c> your</c><00:24:46.330><c> Lochhead</c><00:24:46.780><c> will</c><00:24:46.960><c> look</c>

00:24:47.130 --> 00:24:47.140 align:start position:0%
think about what your Lochhead will look
 

00:24:47.140 --> 00:24:49.680 align:start position:0%
think about what your Lochhead will look
like<00:24:47.350><c> and</c><00:24:47.620><c> when</c><00:24:48.160><c> you</c><00:24:48.250><c> have</c><00:24:48.430><c> to</c><00:24:48.550><c> go</c><00:24:48.700><c> for</c><00:24:48.970><c> it</c><00:24:49.030><c> for</c>

00:24:49.680 --> 00:24:49.690 align:start position:0%
like and when you have to go for it for
 

00:24:49.690 --> 00:24:53.940 align:start position:0%
like and when you have to go for it for
debugging<00:24:51.060><c> so</c><00:24:52.060><c> that's</c><00:24:52.870><c> why</c><00:24:53.050><c> inside</c><00:24:53.470><c> of</c><00:24:53.590><c> Google</c>

00:24:53.940 --> 00:24:53.950 align:start position:0%
debugging so that's why inside of Google
 

00:24:53.950 --> 00:24:56.370 align:start position:0%
debugging so that's why inside of Google
we<00:24:54.160><c> have</c><00:24:54.190><c> taken</c><00:24:54.760><c> a</c><00:24:54.910><c> different</c><00:24:55.180><c> approach</c><00:24:55.450><c> so</c>

00:24:56.370 --> 00:24:56.380 align:start position:0%
we have taken a different approach so
 

00:24:56.380 --> 00:24:58.890 align:start position:0%
we have taken a different approach so
inside<00:24:56.740><c> of</c><00:24:56.770><c> Google</c><00:24:57.220><c> every</c><00:24:57.880><c> test</c><00:24:58.150><c> runs</c><00:24:58.600><c> in</c>

00:24:58.890 --> 00:24:58.900 align:start position:0%
inside of Google every test runs in
 

00:24:58.900 --> 00:25:01.280 align:start position:0%
inside of Google every test runs in
every<00:24:59.800><c> test</c><00:25:00.070><c> method</c><00:25:00.490><c> runs</c><00:25:00.760><c> in</c><00:25:00.940><c> its</c><00:25:01.030><c> own</c>

00:25:01.280 --> 00:25:01.290 align:start position:0%
every test method runs in its own
 

00:25:01.290 --> 00:25:05.880 align:start position:0%
every test method runs in its own
instrumentation<00:25:02.290><c> invocation</c><00:25:04.020><c> so</c><00:25:05.020><c> now</c><00:25:05.200><c> you</c>

00:25:05.880 --> 00:25:05.890 align:start position:0%
instrumentation invocation so now you
 

00:25:05.890 --> 00:25:07.770 align:start position:0%
instrumentation invocation so now you
can<00:25:06.040><c> do</c><00:25:06.160><c> this</c><00:25:06.250><c> today</c><00:25:06.460><c> right</c><00:25:06.910><c> you</c><00:25:07.240><c> can</c><00:25:07.420><c> you</c><00:25:07.660><c> know</c>

00:25:07.770 --> 00:25:07.780 align:start position:0%
can do this today right you can you know
 

00:25:07.780 --> 00:25:09.900 align:start position:0%
can do this today right you can you know
make<00:25:07.990><c> multiple</c><00:25:08.620><c> adb</c><00:25:09.040><c> calls</c><00:25:09.310><c> you</c><00:25:09.580><c> can</c><00:25:09.700><c> use</c><00:25:09.880><c> a</c>

00:25:09.900 --> 00:25:09.910 align:start position:0%
make multiple adb calls you can use a
 

00:25:09.910 --> 00:25:11.670 align:start position:0%
make multiple adb calls you can use a
runner<00:25:10.210><c> arc</c><00:25:10.510><c> and</c><00:25:10.750><c> maintain</c><00:25:11.080><c> your</c><00:25:11.110><c> custom</c>

00:25:11.670 --> 00:25:11.680 align:start position:0%
runner arc and maintain your custom
 

00:25:11.680 --> 00:25:13.920 align:start position:0%
runner arc and maintain your custom
script<00:25:12.040><c> but</c><00:25:12.700><c> the</c><00:25:12.790><c> problem</c><00:25:13.210><c> is</c><00:25:13.330><c> it</c><00:25:13.510><c> might</c><00:25:13.690><c> not</c>

00:25:13.920 --> 00:25:13.930 align:start position:0%
script but the problem is it might not
 

00:25:13.930 --> 00:25:15.570 align:start position:0%
script but the problem is it might not
really<00:25:14.380><c> integrate</c><00:25:14.830><c> well</c><00:25:15.040><c> with</c><00:25:15.070><c> your</c>

00:25:15.570 --> 00:25:15.580 align:start position:0%
really integrate well with your
 

00:25:15.580 --> 00:25:19.740 align:start position:0%
really integrate well with your
development<00:25:16.480><c> environment</c><00:25:18.390><c> so</c><00:25:19.390><c> that's</c><00:25:19.510><c> why</c>

00:25:19.740 --> 00:25:19.750 align:start position:0%
development environment so that's why
 

00:25:19.750 --> 00:25:21.990 align:start position:0%
development environment so that's why
today<00:25:20.110><c> I'm</c><00:25:20.350><c> happy</c><00:25:20.650><c> to</c><00:25:20.800><c> announce</c><00:25:21.010><c> the</c><00:25:21.400><c> Android</c>

00:25:21.990 --> 00:25:22.000 align:start position:0%
today I'm happy to announce the Android
 

00:25:22.000 --> 00:25:24.540 align:start position:0%
today I'm happy to announce the Android
test<00:25:22.300><c> Orchestrator</c><00:25:22.960><c> and</c><00:25:23.260><c> the</c><00:25:24.100><c> Android</c><00:25:24.340><c> test</c>

00:25:24.540 --> 00:25:24.550 align:start position:0%
test Orchestrator and the Android test
 

00:25:24.550 --> 00:25:26.910 align:start position:0%
test Orchestrator and the Android test
Orchestrator<00:25:25.090><c> is</c><00:25:25.330><c> a</c><00:25:25.390><c> way</c><00:25:25.810><c> that</c><00:25:26.380><c> allows</c><00:25:26.650><c> you</c><00:25:26.890><c> to</c>

00:25:26.910 --> 00:25:26.920 align:start position:0%
Orchestrator is a way that allows you to
 

00:25:26.920 --> 00:25:29.490 align:start position:0%
Orchestrator is a way that allows you to
run<00:25:27.220><c> tests</c><00:25:27.520><c> like</c><00:25:27.760><c> we</c><00:25:27.970><c> do</c><00:25:28.120><c> in</c><00:25:28.210><c> Google</c><00:25:28.570><c> it's</c><00:25:29.350><c> a</c>

00:25:29.490 --> 00:25:29.500 align:start position:0%
run tests like we do in Google it's a
 

00:25:29.500 --> 00:25:31.650 align:start position:0%
run tests like we do in Google it's a
service<00:25:29.860><c> ivk</c><00:25:30.340><c> that</c><00:25:30.820><c> runs</c><00:25:31.060><c> in</c><00:25:31.180><c> a</c><00:25:31.270><c> background</c>

00:25:31.650 --> 00:25:31.660 align:start position:0%
service ivk that runs in a background
 

00:25:31.660 --> 00:25:34.370 align:start position:0%
service ivk that runs in a background
and<00:25:32.020><c> runs</c><00:25:32.680><c> each</c><00:25:32.950><c> test</c><00:25:33.370><c> in</c><00:25:33.610><c> a</c><00:25:33.970><c> single</c>

00:25:34.370 --> 00:25:34.380 align:start position:0%
and runs each test in a single
 

00:25:34.380 --> 00:25:38.850 align:start position:0%
and runs each test in a single
instrumentation<00:25:35.380><c> invocation</c><00:25:36.190><c> and</c><00:25:37.860><c> this</c>

00:25:38.850 --> 00:25:38.860 align:start position:0%
instrumentation invocation and this
 

00:25:38.860 --> 00:25:42.960 align:start position:0%
instrumentation invocation and this
obviously<00:25:39.250><c> has</c><00:25:39.430><c> benefits</c><00:25:39.940><c> right</c><00:25:41.670><c> there's</c><00:25:42.670><c> no</c>

00:25:42.960 --> 00:25:42.970 align:start position:0%
obviously has benefits right there's no
 

00:25:42.970 --> 00:25:44.190 align:start position:0%
obviously has benefits right there's no
shirt<00:25:43.240><c> slate</c><00:25:43.540><c> anymore</c>

00:25:44.190 --> 00:25:44.200 align:start position:0%
shirt slate anymore
 

00:25:44.200 --> 00:25:45.780 align:start position:0%
shirt slate anymore
and<00:25:44.560><c> in</c><00:25:44.800><c> fact</c><00:25:45.040><c> the</c><00:25:45.280><c> Android</c><00:25:45.580><c> test</c>

00:25:45.780 --> 00:25:45.790 align:start position:0%
and in fact the Android test
 

00:25:45.790 --> 00:25:48.480 align:start position:0%
and in fact the Android test
Orchestrator<00:25:46.360><c> runs</c><00:25:46.690><c> p.m.</c><00:25:47.080><c> clear</c><00:25:47.380><c> before</c><00:25:48.220><c> it</c>

00:25:48.480 --> 00:25:48.490 align:start position:0%
Orchestrator runs p.m. clear before it
 

00:25:48.490 --> 00:25:52.950 align:start position:0%
Orchestrator runs p.m. clear before it
runs<00:25:48.700><c> its</c><00:25:48.970><c> test</c><00:25:50.280><c> more</c><00:25:51.280><c> so</c><00:25:51.540><c> crashes</c><00:25:52.540><c> are</c><00:25:52.780><c> now</c>

00:25:52.950 --> 00:25:52.960 align:start position:0%
runs its test more so crashes are now
 

00:25:52.960 --> 00:25:57.300 align:start position:0%
runs its test more so crashes are now
completely<00:25:53.740><c> isolated</c><00:25:54.640><c> because</c><00:25:55.770><c> we</c><00:25:56.770><c> have</c>

00:25:57.300 --> 00:25:57.310 align:start position:0%
completely isolated because we have
 

00:25:57.310 --> 00:25:59.790 align:start position:0%
completely isolated because we have
single<00:25:57.550><c> instrumentation</c><00:25:58.390><c> invocations</c><00:25:59.080><c> if</c><00:25:59.380><c> a</c>

00:25:59.790 --> 00:25:59.800 align:start position:0%
single instrumentation invocations if a
 

00:25:59.800 --> 00:26:02.220 align:start position:0%
single instrumentation invocations if a
crash<00:26:00.070><c> happens</c><00:26:00.520><c> all</c><00:26:00.700><c> the</c><00:26:01.180><c> subsequent</c><00:26:02.020><c> tests</c>

00:26:02.220 --> 00:26:02.230 align:start position:0%
crash happens all the subsequent tests
 

00:26:02.230 --> 00:26:05.250 align:start position:0%
crash happens all the subsequent tests
will<00:26:02.470><c> still</c><00:26:02.710><c> run</c><00:26:02.890><c> and</c><00:26:03.780><c> similarly</c><00:26:04.780><c> for</c>

00:26:05.250 --> 00:26:05.260 align:start position:0%
will still run and similarly for
 

00:26:05.260 --> 00:26:07.620 align:start position:0%
will still run and similarly for
debugging<00:26:05.860><c> all</c><00:26:06.280><c> the</c><00:26:06.580><c> debugging</c><00:26:06.910><c> information</c>

00:26:07.620 --> 00:26:07.630 align:start position:0%
debugging all the debugging information
 

00:26:07.630 --> 00:26:09.180 align:start position:0%
debugging all the debugging information
that<00:26:07.810><c> you</c><00:26:07.960><c> collect</c><00:26:08.110><c> and</c><00:26:08.440><c> pull</c><00:26:08.620><c> off</c><00:26:08.770><c> the</c><00:26:08.800><c> device</c>

00:26:09.180 --> 00:26:09.190 align:start position:0%
that you collect and pull off the device
 

00:26:09.190 --> 00:26:11.510 align:start position:0%
that you collect and pull off the device
is<00:26:09.520><c> now</c><00:26:09.670><c> scoped</c><00:26:10.120><c> to</c><00:26:10.510><c> a</c><00:26:10.540><c> particular</c><00:26:10.810><c> test</c><00:26:11.230><c> and</c>

00:26:11.510 --> 00:26:11.520 align:start position:0%
is now scoped to a particular test and
 

00:26:11.520 --> 00:26:16.140 align:start position:0%
is now scoped to a particular test and
this<00:26:12.520><c> is</c><00:26:12.700><c> great</c><00:26:13.000><c> and</c><00:26:13.320><c> this</c><00:26:14.320><c> is</c><00:26:14.500><c> great</c><00:26:14.830><c> and</c><00:26:15.490><c> we</c>

00:26:16.140 --> 00:26:16.150 align:start position:0%
this is great and this is great and we
 

00:26:16.150 --> 00:26:18.050 align:start position:0%
this is great and this is great and we
benefit<00:26:16.570><c> a</c><00:26:16.600><c> lot</c><00:26:16.810><c> from</c><00:26:16.840><c> it</c><00:26:17.170><c> inside</c><00:26:17.530><c> of</c><00:26:17.650><c> Google</c>

00:26:18.050 --> 00:26:18.060 align:start position:0%
benefit a lot from it inside of Google
 

00:26:18.060 --> 00:26:21.780 align:start position:0%
benefit a lot from it inside of Google
so<00:26:19.060><c> let's</c><00:26:19.240><c> see</c><00:26:19.390><c> how</c><00:26:19.510><c> it</c><00:26:19.630><c> actually</c><00:26:19.810><c> works</c><00:26:20.580><c> so</c><00:26:21.580><c> on</c>

00:26:21.780 --> 00:26:21.790 align:start position:0%
so let's see how it actually works so on
 

00:26:21.790 --> 00:26:24.030 align:start position:0%
so let's see how it actually works so on
top<00:26:22.000><c> of</c><00:26:22.060><c> installing</c><00:26:22.570><c> the</c><00:26:22.780><c> test</c><00:26:22.990><c> apk</c><00:26:23.530><c> and</c><00:26:23.800><c> upon</c>

00:26:24.030 --> 00:26:24.040 align:start position:0%
top of installing the test apk and upon
 

00:26:24.040 --> 00:26:27.060 align:start position:0%
top of installing the test apk and upon
our<00:26:24.190><c> test</c><00:26:24.430><c> what</c><00:26:25.420><c> we</c><00:26:25.510><c> do</c><00:26:25.660><c> now</c><00:26:25.870><c> is</c><00:26:26.110><c> we</c><00:26:26.740><c> install</c><00:26:27.040><c> a</c>

00:26:27.060 --> 00:26:27.070 align:start position:0%
our test what we do now is we install a
 

00:26:27.070 --> 00:26:29.910 align:start position:0%
our test what we do now is we install a
third<00:26:27.370><c> apk</c><00:26:27.910><c> on</c><00:26:28.120><c> the</c><00:26:28.270><c> device</c><00:26:28.680><c> and</c><00:26:29.680><c> it's</c><00:26:29.830><c> a</c>

00:26:29.910 --> 00:26:29.920 align:start position:0%
third apk on the device and it's a
 

00:26:29.920 --> 00:26:31.850 align:start position:0%
third apk on the device and it's a
service<00:26:30.310><c> apk</c><00:26:30.760><c> running</c><00:26:31.180><c> in</c><00:26:31.300><c> the</c><00:26:31.390><c> background</c>

00:26:31.850 --> 00:26:31.860 align:start position:0%
service apk running in the background
 

00:26:31.860 --> 00:26:34.950 align:start position:0%
service apk running in the background
containing<00:26:32.860><c> the</c><00:26:32.950><c> orchestrator</c><00:26:33.490><c> and</c><00:26:33.960><c> then</c>

00:26:34.950 --> 00:26:34.960 align:start position:0%
containing the orchestrator and then
 

00:26:34.960 --> 00:26:37.380 align:start position:0%
containing the orchestrator and then
instead<00:26:35.860><c> of</c><00:26:35.920><c> running</c><00:26:36.220><c> multiple</c><00:26:36.610><c> adb</c><00:26:37.030><c> commands</c>

00:26:37.380 --> 00:26:37.390 align:start position:0%
instead of running multiple adb commands
 

00:26:37.390 --> 00:26:40.200 align:start position:0%
instead of running multiple adb commands
we<00:26:37.690><c> run</c><00:26:37.840><c> a</c><00:26:37.870><c> single</c><00:26:38.200><c> ATB</c><00:26:38.740><c> command</c><00:26:39.130><c> but</c><00:26:39.790><c> we</c><00:26:39.970><c> don't</c>

00:26:40.200 --> 00:26:40.210 align:start position:0%
we run a single ATB command but we don't
 

00:26:40.210 --> 00:26:42.300 align:start position:0%
we run a single ATB command but we don't
instrument<00:26:40.840><c> the</c><00:26:40.960><c> app</c><00:26:41.050><c> under</c><00:26:41.260><c> test</c><00:26:41.410><c> we</c>

00:26:42.300 --> 00:26:42.310 align:start position:0%
instrument the app under test we
 

00:26:42.310 --> 00:26:44.250 align:start position:0%
instrument the app under test we
instrument<00:26:42.760><c> the</c><00:26:42.880><c> orchestrator</c><00:26:43.450><c> directly</c><00:26:44.020><c> and</c>

00:26:44.250 --> 00:26:44.260 align:start position:0%
instrument the orchestrator directly and
 

00:26:44.260 --> 00:26:46.380 align:start position:0%
instrument the orchestrator directly and
then<00:26:44.710><c> the</c><00:26:44.830><c> orchestrator</c><00:26:45.370><c> is</c><00:26:45.610><c> going</c><00:26:45.940><c> to</c><00:26:46.060><c> do</c><00:26:46.180><c> all</c>

00:26:46.380 --> 00:26:46.390 align:start position:0%
then the orchestrator is going to do all
 

00:26:46.390 --> 00:26:50.010 align:start position:0%
then the orchestrator is going to do all
its<00:26:46.600><c> work</c><00:26:46.840><c> on</c><00:26:47.050><c> the</c><00:26:47.140><c> device</c><00:26:47.820><c> so</c><00:26:48.820><c> it's</c><00:26:49.000><c> going</c><00:26:49.870><c> to</c>

00:26:50.010 --> 00:26:50.020 align:start position:0%
its work on the device so it's going to
 

00:26:50.020 --> 00:26:51.570 align:start position:0%
its work on the device so it's going to
use<00:26:50.200><c> android</c><00:26:50.530><c> change</c><00:26:50.770><c> runner</c><00:26:51.010><c> to</c><00:26:51.220><c> collect</c>

00:26:51.570 --> 00:26:51.580 align:start position:0%
use android change runner to collect
 

00:26:51.580 --> 00:26:53.010 align:start position:0%
use android change runner to collect
your<00:26:51.730><c> tests</c><00:26:51.970><c> but</c><00:26:52.240><c> then</c><00:26:52.390><c> it's</c><00:26:52.540><c> going</c><00:26:52.750><c> to</c><00:26:52.870><c> run</c>

00:26:53.010 --> 00:26:53.020 align:start position:0%
your tests but then it's going to run
 

00:26:53.020 --> 00:26:55.310 align:start position:0%
your tests but then it's going to run
each<00:26:53.320><c> of</c><00:26:53.650><c> those</c><00:26:53.830><c> tests</c><00:26:54.220><c> in</c><00:26:54.400><c> its</c><00:26:54.880><c> own</c>

00:26:55.310 --> 00:26:55.320 align:start position:0%
each of those tests in its own
 

00:26:55.320 --> 00:26:56.930 align:start position:0%
each of those tests in its own
invocation

00:26:56.930 --> 00:26:56.940 align:start position:0%
invocation
 

00:26:56.940 --> 00:27:01.399 align:start position:0%
invocation
and<00:26:57.029><c> it's</c><00:26:57.809><c> amazing</c><00:26:58.049><c> and</c><00:26:59.039><c> I'm</c><00:26:59.940><c> pretty</c><00:27:00.330><c> sure</c><00:27:00.419><c> you</c>

00:27:01.399 --> 00:27:01.409 align:start position:0%
and it's amazing and I'm pretty sure you
 

00:27:01.409 --> 00:27:03.259 align:start position:0%
and it's amazing and I'm pretty sure you
will<00:27:01.559><c> you</c><00:27:01.769><c> will</c><00:27:01.859><c> like</c><00:27:02.070><c> this</c><00:27:02.220><c> a</c><00:27:02.279><c> lot</c><00:27:02.580><c> and</c><00:27:02.820><c> it</c>

00:27:03.259 --> 00:27:03.269 align:start position:0%
will you will like this a lot and it
 

00:27:03.269 --> 00:27:04.969 align:start position:0%
will you will like this a lot and it
will<00:27:03.389><c> be</c><00:27:03.539><c> available</c><00:27:03.989><c> in</c><00:27:04.229><c> the</c><00:27:04.349><c> next</c><00:27:04.529><c> Android</c>

00:27:04.969 --> 00:27:04.979 align:start position:0%
will be available in the next Android
 

00:27:04.979 --> 00:27:07.609 align:start position:0%
will be available in the next Android
testing<00:27:05.309><c> support</c><00:27:05.580><c> library</c><00:27:05.970><c> release</c><00:27:06.210><c> and</c><00:27:06.619><c> more</c>

00:27:07.609 --> 00:27:07.619 align:start position:0%
testing support library release and more
 

00:27:07.619 --> 00:27:09.229 align:start position:0%
testing support library release and more
importantly<00:27:08.039><c> we</c><00:27:08.249><c> will</c><00:27:08.369><c> have</c><00:27:08.549><c> integration</c>

00:27:09.229 --> 00:27:09.239 align:start position:0%
importantly we will have integration
 

00:27:09.239 --> 00:27:11.899 align:start position:0%
importantly we will have integration
with<00:27:09.509><c> Android</c><00:27:09.869><c> studio</c><00:27:10.159><c> it</c><00:27:11.159><c> will</c><00:27:11.399><c> be</c><00:27:11.549><c> available</c>

00:27:11.899 --> 00:27:11.909 align:start position:0%
with Android studio it will be available
 

00:27:11.909 --> 00:27:13.700 align:start position:0%
with Android studio it will be available
in<00:27:12.029><c> Gradle</c><00:27:12.419><c> and</c><00:27:12.599><c> we</c><00:27:13.109><c> will</c><00:27:13.229><c> also</c><00:27:13.440><c> have</c>

00:27:13.700 --> 00:27:13.710 align:start position:0%
in Gradle and we will also have
 

00:27:13.710 --> 00:27:15.560 align:start position:0%
in Gradle and we will also have
integration<00:27:14.369><c> with</c><00:27:14.580><c> firebase</c><00:27:14.970><c> test</c><00:27:15.359><c> lab</c>

00:27:15.560 --> 00:27:15.570 align:start position:0%
integration with firebase test lab
 

00:27:15.570 --> 00:27:19.820 align:start position:0%
integration with firebase test lab
coming<00:27:16.049><c> later</c><00:27:16.379><c> this</c><00:27:16.619><c> year</c><00:27:17.809><c> so</c><00:27:18.809><c> now</c><00:27:19.019><c> that</c><00:27:19.649><c> we</c>

00:27:19.820 --> 00:27:19.830 align:start position:0%
coming later this year so now that we
 

00:27:19.830 --> 00:27:22.399 align:start position:0%
coming later this year so now that we
know<00:27:20.340><c> how</c><00:27:21.029><c> to</c><00:27:21.090><c> run</c><00:27:21.330><c> our</c><00:27:21.539><c> tests</c><00:27:21.869><c> let's</c><00:27:22.200><c> actually</c>

00:27:22.399 --> 00:27:22.409 align:start position:0%
know how to run our tests let's actually
 

00:27:22.409 --> 00:27:24.649 align:start position:0%
know how to run our tests let's actually
look<00:27:22.649><c> at</c><00:27:22.950><c> how</c><00:27:23.129><c> we</c><00:27:23.190><c> can</c><00:27:23.609><c> write</c><00:27:23.820><c> these</c>

00:27:24.649 --> 00:27:24.659 align:start position:0%
look at how we can write these
 

00:27:24.659 --> 00:27:27.529 align:start position:0%
look at how we can write these
integration<00:27:25.289><c> tests</c><00:27:25.679><c> and</c><00:27:25.799><c> usually</c><00:27:26.700><c> if</c><00:27:26.970><c> you</c>

00:27:27.529 --> 00:27:27.539 align:start position:0%
integration tests and usually if you
 

00:27:27.539 --> 00:27:29.899 align:start position:0%
integration tests and usually if you
write<00:27:27.749><c> a</c><00:27:27.779><c> UI</c><00:27:28.019><c> test</c><00:27:28.379><c> on</c><00:27:28.679><c> Android</c><00:27:29.129><c> you're</c><00:27:29.639><c> using</c>

00:27:29.899 --> 00:27:29.909 align:start position:0%
write a UI test on Android you're using
 

00:27:29.909 --> 00:27:32.269 align:start position:0%
write a UI test on Android you're using
the<00:27:30.149><c> espresso</c><00:27:30.479><c> testing</c><00:27:31.049><c> framework</c><00:27:31.470><c> and</c><00:27:31.710><c> as</c>

00:27:32.269 --> 00:27:32.279 align:start position:0%
the espresso testing framework and as
 

00:27:32.279 --> 00:27:34.009 align:start position:0%
the espresso testing framework and as
you<00:27:32.399><c> can</c><00:27:32.519><c> see</c><00:27:32.580><c> espresso</c><00:27:33.149><c> has</c><00:27:33.359><c> this</c><00:27:33.539><c> like</c><00:27:33.779><c> nice</c>

00:27:34.009 --> 00:27:34.019 align:start position:0%
you can see espresso has this like nice
 

00:27:34.019 --> 00:27:37.369 align:start position:0%
you can see espresso has this like nice
and<00:27:34.049><c> simple</c><00:27:34.679><c> API</c><00:27:35.190><c> and</c><00:27:35.700><c> it</c><00:27:36.599><c> actually</c><00:27:37.200><c> works</c>

00:27:37.369 --> 00:27:37.379 align:start position:0%
and simple API and it actually works
 

00:27:37.379 --> 00:27:40.279 align:start position:0%
and simple API and it actually works
pretty<00:27:37.499><c> simple</c><00:27:38.099><c> what</c><00:27:38.519><c> it</c><00:27:38.639><c> does</c><00:27:38.789><c> is</c><00:27:39.059><c> you</c><00:27:39.299><c> give</c>

00:27:40.279 --> 00:27:40.289 align:start position:0%
pretty simple what it does is you give
 

00:27:40.289 --> 00:27:42.619 align:start position:0%
pretty simple what it does is you give
us<00:27:40.409><c> a</c><00:27:40.529><c> view</c><00:27:40.679><c> matcher</c><00:27:40.919><c> and</c><00:27:41.249><c> we</c><00:27:41.669><c> find</c><00:27:41.970><c> a</c><00:27:42.149><c> view</c><00:27:42.389><c> in</c>

00:27:42.619 --> 00:27:42.629 align:start position:0%
us a view matcher and we find a view in
 

00:27:42.629 --> 00:27:44.119 align:start position:0%
us a view matcher and we find a view in
the<00:27:42.869><c> hierarchy</c><00:27:43.259><c> that</c><00:27:43.289><c> matches</c><00:27:43.769><c> that</c><00:27:43.799><c> matcher</c>

00:27:44.119 --> 00:27:44.129 align:start position:0%
the hierarchy that matches that matcher
 

00:27:44.129 --> 00:27:46.519 align:start position:0%
the hierarchy that matches that matcher
and<00:27:44.429><c> then</c><00:27:44.789><c> we</c><00:27:45.059><c> either</c><00:27:45.239><c> perform</c><00:27:45.690><c> a</c><00:27:45.899><c> view</c><00:27:46.169><c> action</c>

00:27:46.519 --> 00:27:46.529 align:start position:0%
and then we either perform a view action
 

00:27:46.529 --> 00:27:49.460 align:start position:0%
and then we either perform a view action
or<00:27:47.039><c> check</c><00:27:47.399><c> a</c><00:27:47.580><c> view</c><00:27:47.879><c> assertion</c><00:27:48.359><c> and</c><00:27:49.049><c> because</c>

00:27:49.460 --> 00:27:49.470 align:start position:0%
or check a view assertion and because
 

00:27:49.470 --> 00:27:51.499 align:start position:0%
or check a view assertion and because
this<00:27:49.649><c> API</c><00:27:50.009><c> is</c><00:27:50.159><c> so</c><00:27:50.489><c> simple</c><00:27:50.759><c> it's</c><00:27:51.090><c> the</c><00:27:51.179><c> perfect</c>

00:27:51.499 --> 00:27:51.509 align:start position:0%
this API is so simple it's the perfect
 

00:27:51.509 --> 00:27:56.119 align:start position:0%
this API is so simple it's the perfect
tool<00:27:51.929><c> to</c><00:27:52.259><c> for</c><00:27:52.979><c> fast</c><00:27:53.509><c> TDD</c><00:27:54.509><c> prototyping</c><00:27:55.409><c> of</c><00:27:55.529><c> UI</c>

00:27:56.119 --> 00:27:56.129 align:start position:0%
tool to for fast TDD prototyping of UI
 

00:27:56.129 --> 00:27:59.509 align:start position:0%
tool to for fast TDD prototyping of UI
tests<00:27:57.289><c> but</c><00:27:58.289><c> in</c><00:27:58.440><c> order</c><00:27:58.649><c> to</c><00:27:58.710><c> provide</c><00:27:59.099><c> you</c><00:27:59.279><c> such</c><00:27:59.489><c> a</c>

00:27:59.509 --> 00:27:59.519 align:start position:0%
tests but in order to provide you such a
 

00:27:59.519 --> 00:28:01.999 align:start position:0%
tests but in order to provide you such a
simple<00:27:59.999><c> API</c><00:28:00.149><c> there's</c><00:28:00.989><c> a</c><00:28:01.139><c> lot</c><00:28:01.379><c> of</c><00:28:01.499><c> things</c><00:28:01.739><c> that</c>

00:28:01.999 --> 00:28:02.009 align:start position:0%
simple API there's a lot of things that
 

00:28:02.009 --> 00:28:06.289 align:start position:0%
simple API there's a lot of things that
need<00:28:02.249><c> to</c><00:28:02.369><c> go</c><00:28:02.519><c> on</c><00:28:02.549><c> under</c><00:28:03.090><c> the</c><00:28:03.210><c> hood</c><00:28:04.369><c> so</c><00:28:05.369><c> let's</c>

00:28:06.289 --> 00:28:06.299 align:start position:0%
need to go on under the hood so let's
 

00:28:06.299 --> 00:28:08.089 align:start position:0%
need to go on under the hood so let's
actually<00:28:06.419><c> look</c><00:28:06.659><c> how</c><00:28:06.929><c> espresso</c><00:28:07.259><c> let's</c><00:28:07.830><c> look</c><00:28:07.979><c> at</c>

00:28:08.089 --> 00:28:08.099 align:start position:0%
actually look how espresso let's look at
 

00:28:08.099 --> 00:28:09.019 align:start position:0%
actually look how espresso let's look at
how<00:28:08.220><c> spresso</c><00:28:08.519><c> works</c>

00:28:09.019 --> 00:28:09.029 align:start position:0%
how spresso works
 

00:28:09.029 --> 00:28:11.269 align:start position:0%
how spresso works
so<00:28:09.599><c> when</c><00:28:09.899><c> you</c><00:28:09.989><c> call</c><00:28:10.200><c> on</c><00:28:10.409><c> view</c><00:28:10.679><c> and</c><00:28:10.979><c> give</c><00:28:11.159><c> us</c>

00:28:11.269 --> 00:28:11.279 align:start position:0%
so when you call on view and give us
 

00:28:11.279 --> 00:28:13.159 align:start position:0%
so when you call on view and give us
your<00:28:11.309><c> matcher</c><00:28:11.669><c> the</c><00:28:12.389><c> first</c><00:28:12.659><c> thing</c><00:28:12.809><c> that</c><00:28:12.989><c> we're</c>

00:28:13.159 --> 00:28:13.169 align:start position:0%
your matcher the first thing that we're
 

00:28:13.169 --> 00:28:14.539 align:start position:0%
your matcher the first thing that we're
going<00:28:13.440><c> to</c><00:28:13.529><c> do</c><00:28:13.739><c> is</c><00:28:13.859><c> we're</c><00:28:14.070><c> going</c><00:28:14.190><c> to</c><00:28:14.249><c> create</c><00:28:14.429><c> a</c>

00:28:14.539 --> 00:28:14.549 align:start position:0%
going to do is we're going to create a
 

00:28:14.549 --> 00:28:18.349 align:start position:0%
going to do is we're going to create a
view<00:28:14.729><c> interaction</c><00:28:15.299><c> for</c><00:28:15.509><c> you</c><00:28:15.690><c> and</c><00:28:17.239><c> then</c><00:28:18.239><c> the</c>

00:28:18.349 --> 00:28:18.359 align:start position:0%
view interaction for you and then the
 

00:28:18.359 --> 00:28:20.839 align:start position:0%
view interaction for you and then the
next<00:28:18.389><c> thing</c><00:28:18.749><c> is</c><00:28:18.989><c> we</c><00:28:19.859><c> make</c><00:28:20.039><c> sure</c><00:28:20.279><c> that</c><00:28:20.519><c> your</c><00:28:20.700><c> app</c>

00:28:20.839 --> 00:28:20.849 align:start position:0%
next thing is we make sure that your app
 

00:28:20.849 --> 00:28:23.570 align:start position:0%
next thing is we make sure that your app
is<00:28:20.879><c> in</c><00:28:21.269><c> an</c><00:28:21.389><c> idle</c><00:28:21.840><c> insane</c><00:28:22.289><c> state</c><00:28:22.679><c> before</c><00:28:23.070><c> we</c><00:28:23.460><c> are</c>

00:28:23.570 --> 00:28:23.580 align:start position:0%
is in an idle insane state before we are
 

00:28:23.580 --> 00:28:25.609 align:start position:0%
is in an idle insane state before we are
ready<00:28:23.789><c> to</c><00:28:24.029><c> interact</c><00:28:24.330><c> with</c><00:28:24.539><c> it</c><00:28:24.809><c> and</c><00:28:24.929><c> this</c><00:28:25.440><c> is</c>

00:28:25.609 --> 00:28:25.619 align:start position:0%
ready to interact with it and this is
 

00:28:25.619 --> 00:28:27.139 align:start position:0%
ready to interact with it and this is
you<00:28:25.739><c> can</c><00:28:25.889><c> think</c><00:28:26.129><c> of</c><00:28:26.220><c> it</c><00:28:26.369><c> this</c><00:28:26.460><c> is</c><00:28:26.609><c> at</c><00:28:26.759><c> the</c><00:28:26.849><c> core</c>

00:28:27.139 --> 00:28:27.149 align:start position:0%
you can think of it this is at the core
 

00:28:27.149 --> 00:28:29.509 align:start position:0%
you can think of it this is at the core
of<00:28:27.419><c> espresso</c><00:28:28.019><c> and</c><00:28:28.470><c> espresso</c><00:28:28.919><c> is</c><00:28:29.129><c> well-known</c>

00:28:29.509 --> 00:28:29.519 align:start position:0%
of espresso and espresso is well-known
 

00:28:29.519 --> 00:28:31.159 align:start position:0%
of espresso and espresso is well-known
for<00:28:29.789><c> it</c><00:28:29.879><c> like</c><00:28:30.029><c> synchronization</c><00:28:30.690><c> guarantees</c>

00:28:31.159 --> 00:28:31.169 align:start position:0%
for it like synchronization guarantees
 

00:28:31.169 --> 00:28:33.889 align:start position:0%
for it like synchronization guarantees
and<00:28:31.470><c> the</c><00:28:32.340><c> way</c><00:28:32.489><c> we</c><00:28:32.669><c> do</c><00:28:32.820><c> it</c><00:28:32.940><c> is</c><00:28:33.179><c> we</c><00:28:33.720><c> loop</c><00:28:33.869><c> the</c>

00:28:33.889 --> 00:28:33.899 align:start position:0%
and the way we do it is we loop the
 

00:28:33.899 --> 00:28:36.200 align:start position:0%
and the way we do it is we loop the
message<00:28:34.409><c> queue</c><00:28:34.710><c> until</c><00:28:35.309><c> there</c><00:28:35.879><c> are</c><00:28:36.029><c> no</c>

00:28:36.200 --> 00:28:36.210 align:start position:0%
message queue until there are no
 

00:28:36.210 --> 00:28:38.169 align:start position:0%
message queue until there are no
messages<00:28:36.419><c> for</c><00:28:37.049><c> a</c><00:28:37.259><c> reasonable</c><00:28:37.769><c> amount</c><00:28:38.009><c> of</c><00:28:38.099><c> time</c>

00:28:38.169 --> 00:28:38.179 align:start position:0%
messages for a reasonable amount of time
 

00:28:38.179 --> 00:28:41.060 align:start position:0%
messages for a reasonable amount of time
we<00:28:39.179><c> look</c><00:28:39.299><c> at</c><00:28:39.450><c> all</c><00:28:39.659><c> your</c><00:28:39.929><c> Eiling</c><00:28:40.229><c> resources</c><00:28:40.889><c> and</c>

00:28:41.060 --> 00:28:41.070 align:start position:0%
we look at all your Eiling resources and
 

00:28:41.070 --> 00:28:43.519 align:start position:0%
we look at all your Eiling resources and
make<00:28:41.190><c> sure</c><00:28:41.369><c> they're</c><00:28:41.609><c> idle</c><00:28:41.999><c> and</c><00:28:42.899><c> we</c><00:28:43.109><c> also</c><00:28:43.259><c> look</c>

00:28:43.519 --> 00:28:43.529 align:start position:0%
make sure they're idle and we also look
 

00:28:43.529 --> 00:28:46.460 align:start position:0%
make sure they're idle and we also look
at<00:28:43.649><c> async</c><00:28:44.039><c> tasks</c><00:28:44.460><c> to</c><00:28:45.299><c> make</c><00:28:45.869><c> sure</c><00:28:46.049><c> there</c><00:28:46.200><c> is</c><00:28:46.289><c> no</c>

00:28:46.460 --> 00:28:46.470 align:start position:0%
at async tasks to make sure there is no
 

00:28:46.470 --> 00:28:48.859 align:start position:0%
at async tasks to make sure there is no
background<00:28:46.769><c> work</c><00:28:47.159><c> running</c><00:28:47.549><c> and</c><00:28:47.700><c> only</c><00:28:48.509><c> if</c><00:28:48.629><c> we</c>

00:28:48.859 --> 00:28:48.869 align:start position:0%
background work running and only if we
 

00:28:48.869 --> 00:28:50.539 align:start position:0%
background work running and only if we
know<00:28:48.899><c> that</c><00:28:49.470><c> your</c><00:28:49.619><c> app</c><00:28:49.769><c> is</c><00:28:49.950><c> in</c><00:28:50.039><c> a</c><00:28:50.129><c> sane</c><00:28:50.369><c> and</c>

00:28:50.539 --> 00:28:50.549 align:start position:0%
know that your app is in a sane and
 

00:28:50.549 --> 00:28:52.330 align:start position:0%
know that your app is in a sane and
stable<00:28:50.940><c> State</c><00:28:51.210><c> and</c><00:28:51.450><c> we're</c><00:28:51.570><c> ready</c><00:28:51.809><c> to</c><00:28:51.899><c> interact</c>

00:28:52.330 --> 00:28:52.340 align:start position:0%
stable State and we're ready to interact
 

00:28:52.340 --> 00:28:55.399 align:start position:0%
stable State and we're ready to interact
we're<00:28:53.340><c> going</c><00:28:53.519><c> to</c><00:28:53.669><c> move</c><00:28:53.820><c> on</c><00:28:53.999><c> and</c><00:28:54.269><c> then</c><00:28:55.229><c> we're</c>

00:28:55.399 --> 00:28:55.409 align:start position:0%
we're going to move on and then we're
 

00:28:55.409 --> 00:28:56.989 align:start position:0%
we're going to move on and then we're
going<00:28:55.559><c> to</c><00:28:55.590><c> traverse</c><00:28:55.950><c> the</c><00:28:56.129><c> view</c><00:28:56.309><c> hierarchy</c><00:28:56.489><c> and</c>

00:28:56.989 --> 00:28:56.999 align:start position:0%
going to traverse the view hierarchy and
 

00:28:56.999 --> 00:28:58.489 align:start position:0%
going to traverse the view hierarchy and
find<00:28:57.269><c> the</c><00:28:57.389><c> view</c><00:28:57.570><c> that</c><00:28:57.749><c> matches</c><00:28:58.139><c> your</c><00:28:58.289><c> matcher</c>

00:28:58.489 --> 00:28:58.499 align:start position:0%
find the view that matches your matcher
 

00:28:58.499 --> 00:29:01.879 align:start position:0%
find the view that matches your matcher
and<00:28:59.599><c> once</c><00:29:00.599><c> we</c><00:29:00.749><c> have</c><00:29:00.869><c> the</c><00:29:01.019><c> view</c><00:29:01.229><c> we</c><00:29:01.499><c> then</c><00:29:01.649><c> going</c>

00:29:01.879 --> 00:29:01.889 align:start position:0%
and once we have the view we then going
 

00:29:01.889 --> 00:29:04.729 align:start position:0%
and once we have the view we then going
to<00:29:02.039><c> perform</c><00:29:02.759><c> a</c><00:29:03.029><c> view</c><00:29:03.330><c> action</c><00:29:03.659><c> or</c><00:29:04.109><c> a</c><00:29:04.169><c> view</c>

00:29:04.729 --> 00:29:04.739 align:start position:0%
to perform a view action or a view
 

00:29:04.739 --> 00:29:05.440 align:start position:0%
to perform a view action or a view
certian

00:29:05.440 --> 00:29:05.450 align:start position:0%
certian
 

00:29:05.450 --> 00:29:10.420 align:start position:0%
certian
and<00:29:06.490><c> this</c><00:29:07.490><c> is</c><00:29:07.640><c> great</c><00:29:08.090><c> so</c><00:29:08.800><c> now</c><00:29:09.800><c> let's</c><00:29:10.070><c> circle</c>

00:29:10.420 --> 00:29:10.430 align:start position:0%
and this is great so now let's circle
 

00:29:10.430 --> 00:29:12.370 align:start position:0%
and this is great so now let's circle
back<00:29:10.580><c> to</c><00:29:10.640><c> the</c><00:29:11.000><c> test</c><00:29:11.240><c> that</c><00:29:11.480><c> we</c><00:29:11.810><c> showed</c><00:29:12.140><c> you</c><00:29:12.260><c> in</c>

00:29:12.370 --> 00:29:12.380 align:start position:0%
back to the test that we showed you in
 

00:29:12.380 --> 00:29:14.800 align:start position:0%
back to the test that we showed you in
the<00:29:12.470><c> beginning</c><00:29:12.760><c> and</c><00:29:13.760><c> have</c><00:29:13.970><c> a</c><00:29:14.000><c> closer</c><00:29:14.300><c> look</c><00:29:14.450><c> now</c>

00:29:14.800 --> 00:29:14.810 align:start position:0%
the beginning and have a closer look now
 

00:29:14.810 --> 00:29:16.960 align:start position:0%
the beginning and have a closer look now
that<00:29:14.960><c> we</c><00:29:15.050><c> know</c><00:29:15.200><c> how</c><00:29:15.380><c> its</c><00:29:15.530><c> pressure</c><00:29:15.740><c> works</c><00:29:16.070><c> so</c>

00:29:16.960 --> 00:29:16.970 align:start position:0%
that we know how its pressure works so
 

00:29:16.970 --> 00:29:19.990 align:start position:0%
that we know how its pressure works so
in<00:29:17.060><c> the</c><00:29:17.150><c> first</c><00:29:17.330><c> line</c><00:29:17.720><c> as</c><00:29:17.990><c> you</c><00:29:18.680><c> may</c><00:29:18.830><c> remember</c><00:29:19.160><c> we</c>

00:29:19.990 --> 00:29:20.000 align:start position:0%
in the first line as you may remember we
 

00:29:20.000 --> 00:29:21.610 align:start position:0%
in the first line as you may remember we
try<00:29:20.180><c> to</c><00:29:20.240><c> click</c><00:29:20.540><c> on</c><00:29:20.660><c> the</c><00:29:20.780><c> add</c><00:29:20.870><c> node</c><00:29:21.080><c> button</c><00:29:21.350><c> and</c>

00:29:21.610 --> 00:29:21.620 align:start position:0%
try to click on the add node button and
 

00:29:21.620 --> 00:29:23.980 align:start position:0%
try to click on the add node button and
here<00:29:22.160><c> we</c><00:29:22.340><c> just</c><00:29:22.550><c> going</c><00:29:22.760><c> to</c><00:29:22.880><c> use</c><00:29:23.240><c> a</c><00:29:23.480><c> width</c><00:29:23.810><c> ID</c>

00:29:23.980 --> 00:29:23.990 align:start position:0%
here we just going to use a width ID
 

00:29:23.990 --> 00:29:26.380 align:start position:0%
here we just going to use a width ID
matter<00:29:24.290><c> which</c><00:29:25.220><c> is</c><00:29:25.340><c> a</c><00:29:25.370><c> simple</c><00:29:25.700><c> matter</c><00:29:25.880><c> that</c><00:29:26.240><c> is</c>

00:29:26.380 --> 00:29:26.390 align:start position:0%
matter which is a simple matter that is
 

00:29:26.390 --> 00:29:28.290 align:start position:0%
matter which is a simple matter that is
matching<00:29:26.990><c> a</c><00:29:27.260><c> view</c><00:29:27.500><c> in</c><00:29:27.710><c> the</c><00:29:27.860><c> view</c><00:29:27.890><c> hierarchy</c>

00:29:28.290 --> 00:29:28.300 align:start position:0%
matching a view in the view hierarchy
 

00:29:28.300 --> 00:29:31.660 align:start position:0%
matching a view in the view hierarchy
according<00:29:29.300><c> to</c><00:29:29.420><c> its</c><00:29:29.570><c> ID</c><00:29:29.980><c> and</c><00:29:30.980><c> next</c><00:29:31.280><c> thing</c><00:29:31.400><c> we</c>

00:29:31.660 --> 00:29:31.670 align:start position:0%
according to its ID and next thing we
 

00:29:31.670 --> 00:29:33.430 align:start position:0%
according to its ID and next thing we
want<00:29:32.270><c> to</c><00:29:32.330><c> do</c><00:29:32.480><c> is</c><00:29:32.600><c> we</c><00:29:32.720><c> want</c><00:29:32.870><c> to</c><00:29:32.930><c> click</c><00:29:33.140><c> on</c><00:29:33.320><c> the</c>

00:29:33.430 --> 00:29:33.440 align:start position:0%
want to do is we want to click on the
 

00:29:33.440 --> 00:29:35.380 align:start position:0%
want to do is we want to click on the
view<00:29:33.650><c> and</c><00:29:33.800><c> we</c><00:29:33.920><c> use</c><00:29:34.100><c> a</c><00:29:34.130><c> click</c><00:29:34.430><c> view</c><00:29:34.610><c> action</c><00:29:34.970><c> for</c>

00:29:35.380 --> 00:29:35.390 align:start position:0%
view and we use a click view action for
 

00:29:35.390 --> 00:29:39.460 align:start position:0%
view and we use a click view action for
this<00:29:36.520><c> so</c><00:29:37.520><c> now</c><00:29:37.730><c> where</c><00:29:38.270><c> it</c><00:29:38.360><c> gets</c><00:29:38.510><c> interesting</c><00:29:38.840><c> is</c>

00:29:39.460 --> 00:29:39.470 align:start position:0%
this so now where it gets interesting is
 

00:29:39.470 --> 00:29:42.820 align:start position:0%
this so now where it gets interesting is
the<00:29:40.070><c> next</c><00:29:40.310><c> line</c><00:29:41.020><c> because</c><00:29:42.020><c> on</c><00:29:42.170><c> this</c><00:29:42.290><c> line</c><00:29:42.560><c> we</c>

00:29:42.820 --> 00:29:42.830 align:start position:0%
the next line because on this line we
 

00:29:42.830 --> 00:29:43.990 align:start position:0%
the next line because on this line we
want<00:29:43.010><c> to</c><00:29:43.100><c> type</c><00:29:43.340><c> the</c><00:29:43.520><c> title</c><00:29:43.700><c> and</c><00:29:43.970><c> description</c>

00:29:43.990 --> 00:29:44.000 align:start position:0%
want to type the title and description
 

00:29:44.000 --> 00:29:46.810 align:start position:0%
want to type the title and description
and<00:29:44.720><c> we</c><00:29:45.320><c> want</c><00:29:45.530><c> to</c><00:29:45.620><c> use</c><00:29:45.770><c> a</c><00:29:45.800><c> type</c><00:29:46.100><c> text</c><00:29:46.490><c> action</c>

00:29:46.810 --> 00:29:46.820 align:start position:0%
and we want to use a type text action
 

00:29:46.820 --> 00:29:49.720 align:start position:0%
and we want to use a type text action
for<00:29:47.030><c> that</c><00:29:47.440><c> but</c><00:29:48.440><c> here</c><00:29:48.980><c> all</c><00:29:49.190><c> the</c><00:29:49.370><c> espresso</c>

00:29:49.720 --> 00:29:49.730 align:start position:0%
for that but here all the espresso
 

00:29:49.730 --> 00:29:51.730 align:start position:0%
for that but here all the espresso
synchronisation<00:29:50.570><c> guarantees</c><00:29:51.020><c> will</c><00:29:51.290><c> kick</c><00:29:51.530><c> in</c>

00:29:51.730 --> 00:29:51.740 align:start position:0%
synchronisation guarantees will kick in
 

00:29:51.740 --> 00:29:53.980 align:start position:0%
synchronisation guarantees will kick in
and<00:29:51.980><c> only</c><00:29:52.790><c> if</c><00:29:52.880><c> we</c><00:29:53.060><c> know</c><00:29:53.210><c> that</c><00:29:53.450><c> we're</c><00:29:53.570><c> ready</c><00:29:53.720><c> to</c>

00:29:53.980 --> 00:29:53.990 align:start position:0%
and only if we know that we're ready to
 

00:29:53.990 --> 00:29:57.460 align:start position:0%
and only if we know that we're ready to
interact<00:29:54.260><c> with</c><00:29:54.560><c> your</c><00:29:55.480><c> implication</c><00:29:56.480><c> we're</c>

00:29:57.460 --> 00:29:57.470 align:start position:0%
interact with your implication we're
 

00:29:57.470 --> 00:30:00.180 align:start position:0%
interact with your implication we're
going<00:29:57.710><c> to</c><00:29:57.860><c> invoke</c><00:29:58.460><c> the</c><00:29:58.910><c> type</c><00:29:59.150><c> test</c><00:29:59.450><c> action</c><00:29:59.930><c> and</c>

00:30:00.180 --> 00:30:00.190 align:start position:0%
going to invoke the type test action and
 

00:30:00.190 --> 00:30:01.810 align:start position:0%
going to invoke the type test action and
this<00:30:01.190><c> is</c><00:30:01.250><c> great</c>

00:30:01.810 --> 00:30:01.820 align:start position:0%
this is great
 

00:30:01.820 --> 00:30:03.850 align:start position:0%
this is great
because<00:30:02.420><c> it</c><00:30:02.540><c> frees</c><00:30:02.750><c> you</c><00:30:03.020><c> from</c><00:30:03.290><c> adding</c><00:30:03.710><c> you</c>

00:30:03.850 --> 00:30:03.860 align:start position:0%
because it frees you from adding you
 

00:30:03.860 --> 00:30:05.380 align:start position:0%
because it frees you from adding you
know<00:30:03.890><c> additional</c><00:30:04.220><c> boilerplate</c><00:30:04.910><c> code</c><00:30:05.120><c> and</c>

00:30:05.380 --> 00:30:05.390 align:start position:0%
know additional boilerplate code and
 

00:30:05.390 --> 00:30:08.230 align:start position:0%
know additional boilerplate code and
additional<00:30:05.810><c> slipping</c><00:30:06.140><c> code</c><00:30:06.350><c> to</c><00:30:06.800><c> your</c><00:30:06.890><c> test</c><00:30:07.240><c> so</c>

00:30:08.230 --> 00:30:08.240 align:start position:0%
additional slipping code to your test so
 

00:30:08.240 --> 00:30:10.540 align:start position:0%
additional slipping code to your test so
similarly<00:30:08.660><c> we're</c><00:30:09.590><c> going</c><00:30:09.830><c> to</c><00:30:09.950><c> save</c><00:30:10.190><c> the</c><00:30:10.340><c> node</c>

00:30:10.540 --> 00:30:10.550 align:start position:0%
similarly we're going to save the node
 

00:30:10.550 --> 00:30:12.880 align:start position:0%
similarly we're going to save the node
and<00:30:10.820><c> then</c><00:30:11.360><c> we're</c><00:30:11.510><c> going</c><00:30:11.630><c> to</c><00:30:11.720><c> verify</c><00:30:12.170><c> that</c><00:30:12.440><c> it's</c>

00:30:12.880 --> 00:30:12.890 align:start position:0%
and then we're going to verify that it's
 

00:30:12.890 --> 00:30:15.310 align:start position:0%
and then we're going to verify that it's
displayed<00:30:13.340><c> on</c><00:30:13.520><c> screen</c><00:30:13.820><c> and</c><00:30:14.030><c> this</c><00:30:14.960><c> is</c><00:30:15.080><c> great</c>

00:30:15.310 --> 00:30:15.320 align:start position:0%
displayed on screen and this is great
 

00:30:15.320 --> 00:30:18.040 align:start position:0%
displayed on screen and this is great
now<00:30:15.680><c> we</c><00:30:15.740><c> know</c><00:30:16.040><c> how</c><00:30:16.280><c> espresso</c><00:30:16.730><c> works</c><00:30:16.970><c> and</c><00:30:17.270><c> we</c>

00:30:18.040 --> 00:30:18.050 align:start position:0%
now we know how espresso works and we
 

00:30:18.050 --> 00:30:19.720 align:start position:0%
now we know how espresso works and we
know<00:30:18.080><c> how</c><00:30:18.650><c> it's</c><00:30:18.800><c> a</c><00:30:18.890><c> great</c><00:30:19.100><c> tool</c><00:30:19.340><c> to</c><00:30:19.520><c> do</c>

00:30:19.720 --> 00:30:19.730 align:start position:0%
know how it's a great tool to do
 

00:30:19.730 --> 00:30:23.290 align:start position:0%
know how it's a great tool to do
test-driven<00:30:20.210><c> development</c><00:30:21.940><c> and</c><00:30:22.940><c> now</c><00:30:23.180><c> I'm</c>

00:30:23.290 --> 00:30:23.300 align:start position:0%
test-driven development and now I'm
 

00:30:23.300 --> 00:30:24.940 align:start position:0%
test-driven development and now I'm
going<00:30:23.450><c> to</c><00:30:23.570><c> hand</c><00:30:23.780><c> over</c><00:30:23.900><c> to</c><00:30:24.050><c> Nick</c><00:30:24.380><c> to</c><00:30:24.680><c> talk</c><00:30:24.920><c> a</c>

00:30:24.940 --> 00:30:24.950 align:start position:0%
going to hand over to Nick to talk a
 

00:30:24.950 --> 00:30:26.560 align:start position:0%
going to hand over to Nick to talk a
little<00:30:25.220><c> bit</c><00:30:25.340><c> more</c><00:30:25.370><c> on</c><00:30:25.760><c> how</c><00:30:25.790><c> you</c><00:30:26.030><c> can</c><00:30:26.300><c> improve</c>

00:30:26.560 --> 00:30:26.570 align:start position:0%
little bit more on how you can improve
 

00:30:26.570 --> 00:30:29.860 align:start position:0%
little bit more on how you can improve
your<00:30:27.580><c> UI</c><00:30:28.580><c> test</c><00:30:28.940><c> and</c><00:30:29.210><c> how</c><00:30:29.510><c> to</c><00:30:29.570><c> improve</c><00:30:29.720><c> your</c>

00:30:29.860 --> 00:30:29.870 align:start position:0%
your UI test and how to improve your
 

00:30:29.870 --> 00:30:36.610 align:start position:0%
your UI test and how to improve your
large<00:30:30.170><c> and</c><00:30:30.410><c> medium</c><00:30:30.680><c> testing</c><00:30:31.100><c> strategy</c><00:30:35.620><c> thank</c>

00:30:36.610 --> 00:30:36.620 align:start position:0%
large and medium testing strategy thank
 

00:30:36.620 --> 00:30:37.870 align:start position:0%
large and medium testing strategy thank
you<00:30:36.740><c> so</c><00:30:36.890><c> fun</c>

00:30:37.870 --> 00:30:37.880 align:start position:0%
you so fun
 

00:30:37.880 --> 00:30:40.960 align:start position:0%
you so fun
so<00:30:38.630><c> one</c><00:30:39.080><c> good</c><00:30:39.260><c> attribute</c><00:30:39.799><c> of</c><00:30:39.980><c> a</c><00:30:40.100><c> UI</c><00:30:40.250><c> test</c><00:30:40.669><c> is</c><00:30:40.910><c> a</c>

00:30:40.960 --> 00:30:40.970 align:start position:0%
so one good attribute of a UI test is a
 

00:30:40.970 --> 00:30:43.630 align:start position:0%
so one good attribute of a UI test is a
test<00:30:41.330><c> that</c><00:30:41.570><c> never</c><00:30:41.809><c> sleeps</c><00:30:42.220><c> so</c><00:30:43.220><c> let's</c><00:30:43.490><c> go</c><00:30:43.610><c> back</c>

00:30:43.630 --> 00:30:43.640 align:start position:0%
test that never sleeps so let's go back
 

00:30:43.640 --> 00:30:45.130 align:start position:0%
test that never sleeps so let's go back
to<00:30:43.789><c> our</c><00:30:43.910><c> example</c><00:30:44.059><c> to</c><00:30:44.510><c> illustrate</c><00:30:44.660><c> this</c><00:30:45.020><c> point</c>

00:30:45.130 --> 00:30:45.140 align:start position:0%
to our example to illustrate this point
 

00:30:45.140 --> 00:30:47.830 align:start position:0%
to our example to illustrate this point
a<00:30:45.530><c> little</c><00:30:45.590><c> bit</c><00:30:45.710><c> further</c><00:30:46.010><c> so</c><00:30:46.940><c> in</c><00:30:47.240><c> our</c><00:30:47.360><c> examples</c>

00:30:47.830 --> 00:30:47.840 align:start position:0%
a little bit further so in our examples
 

00:30:47.840 --> 00:30:50.650 align:start position:0%
a little bit further so in our examples
you<00:30:47.960><c> remember</c><00:30:48.350><c> we</c><00:30:48.530><c> have</c><00:30:48.679><c> a</c><00:30:48.710><c> note</c><00:30:49.010><c> that</c><00:30:49.520><c> we</c><00:30:49.789><c> save</c>

00:30:50.650 --> 00:30:50.660 align:start position:0%
you remember we have a note that we save
 

00:30:50.660 --> 00:30:52.360 align:start position:0%
you remember we have a note that we save
into<00:30:50.809><c> memory</c><00:30:51.169><c> which</c><00:30:51.350><c> is</c><00:30:51.380><c> pretty</c><00:30:51.710><c> fast</c><00:30:52.010><c> and</c>

00:30:52.360 --> 00:30:52.370 align:start position:0%
into memory which is pretty fast and
 

00:30:52.370 --> 00:30:53.289 align:start position:0%
into memory which is pretty fast and
pretty<00:30:52.580><c> reliable</c>

00:30:53.289 --> 00:30:53.299 align:start position:0%
pretty reliable
 

00:30:53.299 --> 00:30:56.740 align:start position:0%
pretty reliable
however<00:30:53.960><c> reliably</c><00:30:54.789><c> reality</c><00:30:55.789><c> as</c><00:30:56.000><c> your</c><00:30:56.570><c> app</c>

00:30:56.740 --> 00:30:56.750 align:start position:0%
however reliably reality as your app
 

00:30:56.750 --> 00:30:58.299 align:start position:0%
however reliably reality as your app
grows<00:30:57.110><c> you</c><00:30:57.470><c> probably</c><00:30:57.740><c> want</c><00:30:57.919><c> to</c><00:30:57.950><c> extend</c><00:30:58.190><c> this</c>

00:30:58.299 --> 00:30:58.309 align:start position:0%
grows you probably want to extend this
 

00:30:58.309 --> 00:31:00.850 align:start position:0%
grows you probably want to extend this
functionality<00:30:59.030><c> and</c><00:30:59.350><c> save</c><00:31:00.350><c> your</c><00:31:00.470><c> note</c><00:31:00.650><c> to</c><00:31:00.770><c> the</c>

00:31:00.850 --> 00:31:00.860 align:start position:0%
functionality and save your note to the
 

00:31:00.860 --> 00:31:03.640 align:start position:0%
functionality and save your note to the
cloud<00:31:01.100><c> or</c><00:31:01.130><c> Google</c><00:31:01.640><c> Drive</c><00:31:01.760><c> for</c><00:31:02.059><c> example</c><00:31:02.650><c> so</c>

00:31:03.640 --> 00:31:03.650 align:start position:0%
cloud or Google Drive for example so
 

00:31:03.650 --> 00:31:05.860 align:start position:0%
cloud or Google Drive for example so
when<00:31:03.860><c> running</c><00:31:04.160><c> our</c><00:31:04.370><c> large</c><00:31:05.000><c> end-to-end</c><00:31:05.480><c> test</c>

00:31:05.860 --> 00:31:05.870 align:start position:0%
when running our large end-to-end test
 

00:31:05.870 --> 00:31:07.750 align:start position:0%
when running our large end-to-end test
we<00:31:06.200><c> want</c><00:31:06.380><c> to</c><00:31:06.470><c> use</c><00:31:06.590><c> a</c><00:31:06.620><c> real</c><00:31:06.890><c> environment</c><00:31:07.190><c> where</c>

00:31:07.750 --> 00:31:07.760 align:start position:0%
we want to use a real environment where
 

00:31:07.760 --> 00:31:10.390 align:start position:0%
we want to use a real environment where
we<00:31:07.880><c> hit</c><00:31:08.030><c> the</c><00:31:08.240><c> real</c><00:31:08.419><c> server</c><00:31:08.780><c> and</c><00:31:09.370><c> depending</c><00:31:10.370><c> on</c>

00:31:10.390 --> 00:31:10.400 align:start position:0%
we hit the real server and depending on
 

00:31:10.400 --> 00:31:12.250 align:start position:0%
we hit the real server and depending on
your<00:31:10.520><c> network</c><00:31:10.880><c> connection</c><00:31:11.360><c> this</c><00:31:11.630><c> may</c><00:31:11.960><c> take</c><00:31:12.200><c> a</c>

00:31:12.250 --> 00:31:12.260 align:start position:0%
your network connection this may take a
 

00:31:12.260 --> 00:31:14.230 align:start position:0%
your network connection this may take a
long<00:31:12.500><c> time</c><00:31:12.530><c> so</c><00:31:13.460><c> you</c><00:31:13.490><c> probably</c><00:31:13.700><c> want</c><00:31:13.970><c> to</c><00:31:14.000><c> do</c><00:31:14.120><c> is</c>

00:31:14.230 --> 00:31:14.240 align:start position:0%
long time so you probably want to do is
 

00:31:14.240 --> 00:31:16.510 align:start position:0%
long time so you probably want to do is
in<00:31:14.360><c> the</c><00:31:14.450><c> background</c><00:31:14.630><c> now</c><00:31:15.590><c> the</c><00:31:15.650><c> problem</c><00:31:16.159><c> is</c><00:31:16.280><c> now</c>

00:31:16.510 --> 00:31:16.520 align:start position:0%
in the background now the problem is now
 

00:31:16.520 --> 00:31:18.340 align:start position:0%
in the background now the problem is now
is<00:31:16.850><c> that</c><00:31:16.880><c> espresso</c><00:31:17.240><c> synchronization</c><00:31:18.020><c> is</c><00:31:18.169><c> not</c>

00:31:18.340 --> 00:31:18.350 align:start position:0%
is that espresso synchronization is not
 

00:31:18.350 --> 00:31:20.320 align:start position:0%
is that espresso synchronization is not
aware<00:31:18.710><c> of</c><00:31:18.770><c> any</c><00:31:19.100><c> of</c><00:31:19.190><c> your</c><00:31:19.309><c> long-running</c><00:31:19.730><c> tasks</c>

00:31:20.320 --> 00:31:20.330 align:start position:0%
aware of any of your long-running tasks
 

00:31:20.330 --> 00:31:24.340 align:start position:0%
aware of any of your long-running tasks
so<00:31:21.460><c> this</c><00:31:22.460><c> is</c><00:31:22.610><c> somewhere</c><00:31:23.030><c> that</c><00:31:23.090><c> some</c><00:31:23.510><c> where</c>

00:31:24.340 --> 00:31:24.350 align:start position:0%
so this is somewhere that some where
 

00:31:24.350 --> 00:31:25.840 align:start position:0%
so this is somewhere that some where
developers<00:31:24.799><c> will</c><00:31:24.980><c> probably</c><00:31:25.309><c> do</c><00:31:25.460><c> something</c><00:31:25.760><c> as</c>

00:31:25.840 --> 00:31:25.850 align:start position:0%
developers will probably do something as
 

00:31:25.850 --> 00:31:27.250 align:start position:0%
developers will probably do something as
ugly<00:31:26.150><c> as</c><00:31:26.240><c> putting</c><00:31:26.450><c> a</c><00:31:26.539><c> thread</c><00:31:26.780><c> sleep</c><00:31:27.020><c> in</c><00:31:27.140><c> their</c>

00:31:27.250 --> 00:31:27.260 align:start position:0%
ugly as putting a thread sleep in their
 

00:31:27.260 --> 00:31:29.470 align:start position:0%
ugly as putting a thread sleep in their
code<00:31:27.500><c> but</c><00:31:28.370><c> what</c><00:31:28.610><c> this</c><00:31:28.700><c> presser</c><00:31:29.150><c> is</c><00:31:29.270><c> not</c>

00:31:29.470 --> 00:31:29.480 align:start position:0%
code but what this presser is not
 

00:31:29.480 --> 00:31:31.000 align:start position:0%
code but what this presser is not
actually<00:31:29.809><c> required</c><00:31:30.200><c> because</c><00:31:30.440><c> you</c><00:31:30.590><c> can</c><00:31:30.830><c> write</c>

00:31:31.000 --> 00:31:31.010 align:start position:0%
actually required because you can write
 

00:31:31.010 --> 00:31:33.490 align:start position:0%
actually required because you can write
an<00:31:31.190><c> idling</c><00:31:31.520><c> resource</c><00:31:32.049><c> where</c><00:31:33.049><c> an</c><00:31:33.140><c> idling</c>

00:31:33.490 --> 00:31:33.500 align:start position:0%
an idling resource where an idling
 

00:31:33.500 --> 00:31:36.070 align:start position:0%
an idling resource where an idling
resource<00:31:33.710><c> is</c><00:31:34.220><c> a</c><00:31:34.250><c> simple</c><00:31:34.700><c> interface</c><00:31:35.179><c> for</c><00:31:35.929><c> you</c>

00:31:36.070 --> 00:31:36.080 align:start position:0%
resource is a simple interface for you
 

00:31:36.080 --> 00:31:37.750 align:start position:0%
resource is a simple interface for you
as<00:31:36.169><c> a</c><00:31:36.200><c> developer</c><00:31:36.380><c> to</c><00:31:36.650><c> implement</c><00:31:37.130><c> to</c><00:31:37.370><c> teach</c>

00:31:37.750 --> 00:31:37.760 align:start position:0%
as a developer to implement to teach
 

00:31:37.760 --> 00:31:39.549 align:start position:0%
as a developer to implement to teach
espresso<00:31:38.210><c> synchronization</c><00:31:38.960><c> of</c><00:31:39.080><c> any</c><00:31:39.260><c> of</c><00:31:39.409><c> your</c>

00:31:39.549 --> 00:31:39.559 align:start position:0%
espresso synchronization of any of your
 

00:31:39.559 --> 00:31:44.470 align:start position:0%
espresso synchronization of any of your
custom<00:31:40.190><c> long</c><00:31:40.940><c> running</c><00:31:41.179><c> tasks</c><00:31:42.039><c> of</c><00:31:43.039><c> your</c><00:31:43.250><c> app</c><00:31:43.480><c> so</c>

00:31:44.470 --> 00:31:44.480 align:start position:0%
custom long running tasks of your app so
 

00:31:44.480 --> 00:31:46.570 align:start position:0%
custom long running tasks of your app so
with<00:31:45.049><c> this</c><00:31:45.169><c> ionic</c><00:31:45.620><c> resource</c><00:31:46.039><c> we</c><00:31:46.250><c> made</c><00:31:46.429><c> our</c>

00:31:46.570 --> 00:31:46.580 align:start position:0%
with this ionic resource we made our
 

00:31:46.580 --> 00:31:50.380 align:start position:0%
with this ionic resource we made our
large<00:31:46.909><c> end-to-end</c><00:31:47.390><c> test</c><00:31:47.919><c> more</c><00:31:48.919><c> reliable</c><00:31:49.460><c> so</c>

00:31:50.380 --> 00:31:50.390 align:start position:0%
large end-to-end test more reliable so
 

00:31:50.390 --> 00:31:51.669 align:start position:0%
large end-to-end test more reliable so
let's<00:31:50.600><c> see</c><00:31:50.809><c> how</c><00:31:50.990><c> we</c><00:31:51.049><c> can</c><00:31:51.260><c> add</c><00:31:51.380><c> some</c><00:31:51.650><c> more</c>

00:31:51.669 --> 00:31:51.679 align:start position:0%
let's see how we can add some more
 

00:31:51.679 --> 00:31:55.330 align:start position:0%
let's see how we can add some more
medium-sized<00:31:52.460><c> stats</c><00:31:52.880><c> to</c><00:31:53.330><c> your</c><00:31:53.480><c> test</c><00:31:53.720><c> suite</c><00:31:54.340><c> so</c>

00:31:55.330 --> 00:31:55.340 align:start position:0%
medium-sized stats to your test suite so
 

00:31:55.340 --> 00:31:57.010 align:start position:0%
medium-sized stats to your test suite so
for<00:31:55.640><c> a</c><00:31:55.669><c> medium-sized</c><00:31:56.179><c> test</c><00:31:56.539><c> we</c><00:31:56.720><c> want</c><00:31:56.870><c> to</c><00:31:56.929><c> keep</c>

00:31:57.010 --> 00:31:57.020 align:start position:0%
for a medium-sized test we want to keep
 

00:31:57.020 --> 00:31:58.870 align:start position:0%
for a medium-sized test we want to keep
them<00:31:57.140><c> small</c><00:31:57.559><c> and</c><00:31:57.590><c> focused</c><00:31:58.280><c> on</c><00:31:58.340><c> a</c><00:31:58.460><c> single</c><00:31:58.610><c> UI</c>

00:31:58.870 --> 00:31:58.880 align:start position:0%
them small and focused on a single UI
 

00:31:58.880 --> 00:32:01.390 align:start position:0%
them small and focused on a single UI
component<00:31:59.510><c> whereas</c><00:32:00.440><c> single</c><00:32:00.740><c> UI</c><00:32:00.860><c> component</c>

00:32:01.390 --> 00:32:01.400 align:start position:0%
component whereas single UI component
 

00:32:01.400 --> 00:32:04.120 align:start position:0%
component whereas single UI component
may<00:32:01.520><c> be</c><00:32:01.580><c> like</c><00:32:01.970><c> a</c><00:32:02.090><c> specific</c><00:32:02.360><c> view</c><00:32:02.919><c> fragment</c><00:32:03.919><c> or</c>

00:32:04.120 --> 00:32:04.130 align:start position:0%
may be like a specific view fragment or
 

00:32:04.130 --> 00:32:06.730 align:start position:0%
may be like a specific view fragment or
an<00:32:04.370><c> activity</c><00:32:05.049><c> so</c><00:32:06.049><c> let's</c><00:32:06.200><c> go</c><00:32:06.320><c> back</c><00:32:06.500><c> to</c><00:32:06.679><c> our</c>

00:32:06.730 --> 00:32:06.740 align:start position:0%
an activity so let's go back to our
 

00:32:06.740 --> 00:32:09.580 align:start position:0%
an activity so let's go back to our
example<00:32:06.890><c> to</c><00:32:07.400><c> see</c><00:32:07.549><c> how</c><00:32:07.700><c> we</c><00:32:07.760><c> can</c><00:32:07.970><c> isolate</c><00:32:08.590><c> our</c>

00:32:09.580 --> 00:32:09.590 align:start position:0%
example to see how we can isolate our
 

00:32:09.590 --> 00:32:11.740 align:start position:0%
example to see how we can isolate our
large<00:32:09.919><c> end-to-end</c><00:32:10.340><c> test</c><00:32:10.669><c> to</c><00:32:11.090><c> more</c><00:32:11.299><c> isolated</c>

00:32:11.740 --> 00:32:11.750 align:start position:0%
large end-to-end test to more isolated
 

00:32:11.750 --> 00:32:14.590 align:start position:0%
large end-to-end test to more isolated
components<00:32:12.370><c> so</c><00:32:13.370><c> here</c><00:32:13.610><c> in</c><00:32:13.700><c> this</c><00:32:13.820><c> example</c><00:32:13.940><c> again</c>

00:32:14.590 --> 00:32:14.600 align:start position:0%
components so here in this example again
 

00:32:14.600 --> 00:32:16.450 align:start position:0%
components so here in this example again
you<00:32:15.350><c> may</c><00:32:15.470><c> have</c><00:32:15.559><c> noticed</c><00:32:15.980><c> that</c><00:32:16.070><c> there</c><00:32:16.280><c> are</c><00:32:16.340><c> two</c>

00:32:16.450 --> 00:32:16.460 align:start position:0%
you may have noticed that there are two
 

00:32:16.460 --> 00:32:19.180 align:start position:0%
you may have noticed that there are two
activities<00:32:16.960><c> the</c><00:32:17.960><c> list</c><00:32:18.169><c> activity</c><00:32:18.740><c> on</c><00:32:18.890><c> the</c><00:32:18.980><c> left</c>

00:32:19.180 --> 00:32:19.190 align:start position:0%
activities the list activity on the left
 

00:32:19.190 --> 00:32:21.419 align:start position:0%
activities the list activity on the left
and<00:32:19.520><c> the</c><00:32:20.240><c> add</c><00:32:20.360><c> node</c><00:32:20.600><c> activity</c><00:32:20.960><c> on</c><00:32:21.049><c> the</c><00:32:21.140><c> right</c>

00:32:21.419 --> 00:32:21.429 align:start position:0%
and the add node activity on the right
 

00:32:21.429 --> 00:32:24.370 align:start position:0%
and the add node activity on the right
so<00:32:22.429><c> until</c><00:32:22.789><c> now</c><00:32:22.940><c> we</c><00:32:23.000><c> wrote</c><00:32:23.600><c> a</c><00:32:23.630><c> large</c><00:32:23.990><c> end-to-end</c>

00:32:24.370 --> 00:32:24.380 align:start position:0%
so until now we wrote a large end-to-end
 

00:32:24.380 --> 00:32:25.659 align:start position:0%
so until now we wrote a large end-to-end
test<00:32:24.710><c> that</c><00:32:24.919><c> gives</c><00:32:25.100><c> us</c><00:32:25.220><c> a</c><00:32:25.309><c> lot</c><00:32:25.400><c> of</c><00:32:25.460><c> confidence</c>

00:32:25.659 --> 00:32:25.669 align:start position:0%
test that gives us a lot of confidence
 

00:32:25.669 --> 00:32:27.820 align:start position:0%
test that gives us a lot of confidence
because<00:32:26.330><c> it</c><00:32:26.480><c> touches</c><00:32:26.780><c> upon</c><00:32:26.809><c> a</c><00:32:27.320><c> lot</c><00:32:27.559><c> of</c><00:32:27.590><c> your</c>

00:32:27.820 --> 00:32:27.830 align:start position:0%
because it touches upon a lot of your
 

00:32:27.830 --> 00:32:30.549 align:start position:0%
because it touches upon a lot of your
code<00:32:28.100><c> in</c><00:32:28.400><c> your</c><00:32:28.820><c> app</c><00:32:29.120><c> which</c><00:32:29.929><c> is</c><00:32:29.960><c> great</c><00:32:30.350><c> for</c>

00:32:30.549 --> 00:32:30.559 align:start position:0%
code in your app which is great for
 

00:32:30.559 --> 00:32:32.620 align:start position:0%
code in your app which is great for
large<00:32:30.679><c> intent</c><00:32:31.190><c> test</c><00:32:31.370><c> but</c><00:32:31.850><c> it's</c><00:32:32.000><c> not</c><00:32:32.210><c> so</c><00:32:32.480><c> great</c>

00:32:32.620 --> 00:32:32.630 align:start position:0%
large intent test but it's not so great
 

00:32:32.630 --> 00:32:34.419 align:start position:0%
large intent test but it's not so great
for<00:32:32.750><c> an</c><00:32:33.140><c> iterative</c><00:32:33.679><c> test-driven</c><00:32:34.159><c> development</c>

00:32:34.419 --> 00:32:34.429 align:start position:0%
for an iterative test-driven development
 

00:32:34.429 --> 00:32:40.270 align:start position:0%
for an iterative test-driven development
cycle<00:32:35.320><c> so</c><00:32:38.169><c> so</c><00:32:39.169><c> let's</c><00:32:39.620><c> see</c><00:32:39.740><c> how</c><00:32:39.919><c> we</c><00:32:40.010><c> can</c><00:32:40.130><c> isolate</c>

00:32:40.270 --> 00:32:40.280 align:start position:0%
cycle so so let's see how we can isolate
 

00:32:40.280 --> 00:32:43.360 align:start position:0%
cycle so so let's see how we can isolate
these<00:32:40.820><c> and</c><00:32:41.120><c> have</c><00:32:41.530><c> isolated</c><00:32:42.530><c> tests</c><00:32:42.890><c> for</c><00:32:43.159><c> each</c>

00:32:43.360 --> 00:32:43.370 align:start position:0%
these and have isolated tests for each
 

00:32:43.370 --> 00:32:46.870 align:start position:0%
these and have isolated tests for each
activity<00:32:43.820><c> in</c><00:32:44.059><c> isolation</c><00:32:44.650><c> to</c><00:32:45.730><c> isolate</c><00:32:46.730><c> the</c>

00:32:46.870 --> 00:32:46.880 align:start position:0%
activity in isolation to isolate the
 

00:32:46.880 --> 00:32:49.090 align:start position:0%
activity in isolation to isolate the
left-hand<00:32:47.690><c> side</c><00:32:47.960><c> the</c><00:32:48.290><c> list</c><00:32:48.500><c> activity</c><00:32:48.950><c> we</c><00:32:49.070><c> can</c>

00:32:49.090 --> 00:32:49.100 align:start position:0%
left-hand side the list activity we can
 

00:32:49.100 --> 00:32:50.440 align:start position:0%
left-hand side the list activity we can
use<00:32:49.340><c> espresso</c><00:32:49.610><c> intense</c>

00:32:50.440 --> 00:32:50.450 align:start position:0%
use espresso intense
 

00:32:50.450 --> 00:32:53.320 align:start position:0%
use espresso intense
we're<00:32:51.139><c> espresso</c><00:32:51.559><c> intense</c><00:32:52.009><c> is</c><00:32:52.340><c> a</c><00:32:52.399><c> simple</c><00:32:53.210><c> API</c>

00:32:53.320 --> 00:32:53.330 align:start position:0%
we're espresso intense is a simple API
 

00:32:53.330 --> 00:32:55.419 align:start position:0%
we're espresso intense is a simple API
that<00:32:53.809><c> allows</c><00:32:54.080><c> you</c><00:32:54.259><c> to</c><00:32:54.409><c> intercept</c><00:32:54.950><c> any</c><00:32:55.190><c> of</c><00:32:55.340><c> you</c>

00:32:55.419 --> 00:32:55.429 align:start position:0%
that allows you to intercept any of you
 

00:32:55.429 --> 00:32:57.879 align:start position:0%
that allows you to intercept any of you
are<00:32:55.489><c> going</c><00:32:55.789><c> a</c><00:32:55.850><c> tense</c><00:32:56.200><c> verify</c><00:32:57.200><c> their</c><00:32:57.379><c> content</c>

00:32:57.879 --> 00:32:57.889 align:start position:0%
are going a tense verify their content
 

00:32:57.889 --> 00:33:02.639 align:start position:0%
are going a tense verify their content
and<00:32:58.129><c> provide</c><00:32:58.940><c> back</c><00:32:59.389><c> a</c><00:32:59.659><c> mock</c><00:32:59.960><c> activity</c><00:33:00.739><c> result</c>

00:33:02.639 --> 00:33:02.649 align:start position:0%
and provide back a mock activity result
 

00:33:02.649 --> 00:33:05.499 align:start position:0%
and provide back a mock activity result
great<00:33:03.649><c> so</c><00:33:03.889><c> let's</c><00:33:04.190><c> see</c><00:33:04.399><c> how</c><00:33:04.669><c> that</c><00:33:05.090><c> API</c><00:33:05.389><c> actually</c>

00:33:05.499 --> 00:33:05.509 align:start position:0%
great so let's see how that API actually
 

00:33:05.509 --> 00:33:07.779 align:start position:0%
great so let's see how that API actually
looks<00:33:05.869><c> like</c><00:33:06.049><c> so</c><00:33:06.919><c> as</c><00:33:07.070><c> you</c><00:33:07.190><c> can</c><00:33:07.309><c> see</c><00:33:07.369><c> it's</c><00:33:07.609><c> very</c>

00:33:07.779 --> 00:33:07.789 align:start position:0%
looks like so as you can see it's very
 

00:33:07.789 --> 00:33:09.279 align:start position:0%
looks like so as you can see it's very
straightforward<00:33:08.149><c> you</c><00:33:08.720><c> have</c><00:33:08.840><c> an</c><00:33:08.960><c> intent</c>

00:33:09.279 --> 00:33:09.289 align:start position:0%
straightforward you have an intent
 

00:33:09.289 --> 00:33:09.820 align:start position:0%
straightforward you have an intent
matcher

00:33:09.820 --> 00:33:09.830 align:start position:0%
matcher
 

00:33:09.830 --> 00:33:12.609 align:start position:0%
matcher
that<00:33:10.489><c> will</c><00:33:11.210><c> match</c><00:33:11.389><c> your</c><00:33:11.419><c> going</c><00:33:12.019><c> intent</c><00:33:12.350><c> and</c>

00:33:12.609 --> 00:33:12.619 align:start position:0%
that will match your going intent and
 

00:33:12.619 --> 00:33:14.919 align:start position:0%
that will match your going intent and
you<00:33:12.679><c> can</c><00:33:13.340><c> provide</c><00:33:13.669><c> a</c><00:33:13.999><c> version</c><00:33:14.570><c> of</c><00:33:14.840><c> your</c>

00:33:14.919 --> 00:33:14.929 align:start position:0%
you can provide a version of your
 

00:33:14.929 --> 00:33:17.009 align:start position:0%
you can provide a version of your
activity<00:33:15.320><c> result</c><00:33:15.649><c> back</c><00:33:15.889><c> to</c><00:33:15.919><c> the</c><00:33:16.100><c> caller</c>

00:33:17.009 --> 00:33:17.019 align:start position:0%
activity result back to the caller
 

00:33:17.019 --> 00:33:20.259 align:start position:0%
activity result back to the caller
okay<00:33:18.019><c> so</c><00:33:18.080><c> let's</c><00:33:18.379><c> use</c><00:33:18.559><c> this</c><00:33:18.710><c> API</c><00:33:18.970><c> to</c><00:33:19.970><c> write</c><00:33:20.119><c> our</c>

00:33:20.259 --> 00:33:20.269 align:start position:0%
okay so let's use this API to write our
 

00:33:20.269 --> 00:33:24.009 align:start position:0%
okay so let's use this API to write our
first<00:33:20.480><c> isolated</c><00:33:21.230><c> test</c><00:33:21.759><c> so</c><00:33:22.759><c> in</c><00:33:23.059><c> this</c><00:33:23.239><c> test</c><00:33:23.539><c> you</c>

00:33:24.009 --> 00:33:24.019 align:start position:0%
first isolated test so in this test you
 

00:33:24.019 --> 00:33:26.409 align:start position:0%
first isolated test so in this test you
can<00:33:24.049><c> see</c><00:33:24.440><c> on</c><00:33:24.739><c> the</c><00:33:24.919><c> first</c><00:33:25.129><c> line</c><00:33:25.429><c> we</c><00:33:25.820><c> do</c><00:33:25.970><c> exactly</c>

00:33:26.409 --> 00:33:26.419 align:start position:0%
can see on the first line we do exactly
 

00:33:26.419 --> 00:33:29.950 align:start position:0%
can see on the first line we do exactly
that<00:33:26.590><c> we</c><00:33:27.590><c> intercept</c><00:33:28.549><c> our</c><00:33:28.700><c> intent</c><00:33:29.119><c> and</c><00:33:29.419><c> we</c>

00:33:29.950 --> 00:33:29.960 align:start position:0%
that we intercept our intent and we
 

00:33:29.960 --> 00:33:31.570 align:start position:0%
that we intercept our intent and we
provide<00:33:30.289><c> a</c><00:33:30.320><c> stub</c><00:33:30.679><c> version</c><00:33:31.039><c> of</c><00:33:31.129><c> our</c><00:33:31.220><c> activity</c>

00:33:31.570 --> 00:33:31.580 align:start position:0%
provide a stub version of our activity
 

00:33:31.580 --> 00:33:34.060 align:start position:0%
provide a stub version of our activity
result<00:33:31.909><c> now</c><00:33:32.720><c> on</c><00:33:32.960><c> the</c><00:33:33.080><c> second</c><00:33:33.499><c> line</c><00:33:33.679><c> when</c><00:33:33.950><c> we</c>

00:33:34.060 --> 00:33:34.070 align:start position:0%
result now on the second line when we
 

00:33:34.070 --> 00:33:36.700 align:start position:0%
result now on the second line when we
perform<00:33:34.820><c> click</c><00:33:35.179><c> instead</c><00:33:36.109><c> of</c><00:33:36.230><c> starting</c><00:33:36.440><c> a</c><00:33:36.590><c> new</c>

00:33:36.700 --> 00:33:36.710 align:start position:0%
perform click instead of starting a new
 

00:33:36.710 --> 00:33:38.830 align:start position:0%
perform click instead of starting a new
activity<00:33:37.009><c> espresso</c><00:33:37.909><c> will</c><00:33:38.179><c> intercept</c><00:33:38.690><c> this</c>

00:33:38.830 --> 00:33:38.840 align:start position:0%
activity espresso will intercept this
 

00:33:38.840 --> 00:33:41.739 align:start position:0%
activity espresso will intercept this
intent<00:33:39.200><c> and</c><00:33:39.820><c> provide</c><00:33:40.820><c> a</c><00:33:40.850><c> subjective</c><00:33:41.330><c> result</c>

00:33:41.739 --> 00:33:41.749 align:start position:0%
intent and provide a subjective result
 

00:33:41.749 --> 00:33:45.369 align:start position:0%
intent and provide a subjective result
which<00:33:42.169><c> we</c><00:33:42.350><c> can</c><00:33:42.529><c> then</c><00:33:42.710><c> use</c><00:33:43.450><c> on</c><00:33:44.450><c> the</c><00:33:44.720><c> last</c><00:33:45.049><c> line</c>

00:33:45.369 --> 00:33:45.379 align:start position:0%
which we can then use on the last line
 

00:33:45.379 --> 00:33:48.220 align:start position:0%
which we can then use on the last line
to<00:33:45.830><c> verify</c><00:33:46.639><c> that</c><00:33:46.669><c> our</c><00:33:47.029><c> UI</c><00:33:47.389><c> was</c><00:33:47.749><c> updated</c>

00:33:48.220 --> 00:33:48.230 align:start position:0%
to verify that our UI was updated
 

00:33:48.230 --> 00:33:51.869 align:start position:0%
to verify that our UI was updated
accordingly<00:33:49.690><c> now</c><00:33:50.690><c> we</c><00:33:50.749><c> have</c><00:33:50.989><c> an</c><00:33:51.109><c> isolated</c><00:33:51.590><c> test</c>

00:33:51.869 --> 00:33:51.879 align:start position:0%
accordingly now we have an isolated test
 

00:33:51.879 --> 00:33:54.609 align:start position:0%
accordingly now we have an isolated test
okay<00:33:52.879><c> so</c><00:33:52.940><c> let's</c><00:33:53.450><c> go</c><00:33:53.570><c> back</c><00:33:53.600><c> to</c><00:33:53.899><c> our</c><00:33:53.929><c> example</c><00:33:54.019><c> and</c>

00:33:54.609 --> 00:33:54.619 align:start position:0%
okay so let's go back to our example and
 

00:33:54.619 --> 00:33:56.769 align:start position:0%
okay so let's go back to our example and
see<00:33:55.159><c> how</c><00:33:55.190><c> we</c><00:33:55.639><c> can</c><00:33:55.820><c> isolate</c><00:33:55.970><c> the</c><00:33:56.239><c> second</c><00:33:56.570><c> part</c>

00:33:56.769 --> 00:33:56.779 align:start position:0%
see how we can isolate the second part
 

00:33:56.779 --> 00:33:59.560 align:start position:0%
see how we can isolate the second part
right<00:33:57.679><c> so</c><00:33:58.070><c> when</c><00:33:58.249><c> you</c><00:33:58.369><c> write</c><00:33:58.549><c> when</c><00:33:59.179><c> usually</c>

00:33:59.560 --> 00:33:59.570 align:start position:0%
right so when you write when usually
 

00:33:59.570 --> 00:34:01.389 align:start position:0%
right so when you write when usually
write<00:33:59.749><c> tests</c><00:34:00.080><c> you</c><00:34:00.679><c> end</c><00:34:00.889><c> up</c><00:34:01.070><c> in</c><00:34:01.190><c> a</c><00:34:01.249><c> position</c>

00:34:01.389 --> 00:34:01.399 align:start position:0%
write tests you end up in a position
 

00:34:01.399 --> 00:34:04.180 align:start position:0%
write tests you end up in a position
where<00:34:01.909><c> you</c><00:34:02.480><c> may</c><00:34:02.659><c> have</c><00:34:02.690><c> some</c><00:34:03.190><c> external</c>

00:34:04.180 --> 00:34:04.190 align:start position:0%
where you may have some external
 

00:34:04.190 --> 00:34:06.549 align:start position:0%
where you may have some external
dependencies<00:34:04.789><c> in</c><00:34:04.940><c> play</c><00:34:05.149><c> that</c><00:34:05.690><c> can</c><00:34:05.989><c> check</c><00:34:06.230><c> that</c>

00:34:06.549 --> 00:34:06.559 align:start position:0%
dependencies in play that can check that
 

00:34:06.559 --> 00:34:09.159 align:start position:0%
dependencies in play that can check that
are<00:34:06.739><c> outside</c><00:34:07.039><c> of</c><00:34:07.100><c> your</c><00:34:07.190><c> control</c><00:34:07.960><c> so</c><00:34:08.960><c> in</c><00:34:09.079><c> our</c>

00:34:09.159 --> 00:34:09.169 align:start position:0%
are outside of your control so in our
 

00:34:09.169 --> 00:34:12.010 align:start position:0%
are outside of your control so in our
example<00:34:09.349><c> right</c><00:34:10.129><c> as</c><00:34:10.339><c> I</c><00:34:10.879><c> showed</c><00:34:11.059><c> before</c><00:34:11.089><c> we</c><00:34:11.869><c> have</c>

00:34:12.010 --> 00:34:12.020 align:start position:0%
example right as I showed before we have
 

00:34:12.020 --> 00:34:15.010 align:start position:0%
example right as I showed before we have
I<00:34:12.319><c> know</c><00:34:12.619><c> that</c><00:34:12.649><c> we</c><00:34:12.919><c> save</c><00:34:13.220><c> and</c><00:34:13.520><c> it</c><00:34:13.909><c> hits</c><00:34:14.720><c> the</c><00:34:14.869><c> real</c>

00:34:15.010 --> 00:34:15.020 align:start position:0%
I know that we save and it hits the real
 

00:34:15.020 --> 00:34:17.139 align:start position:0%
I know that we save and it hits the real
server<00:34:15.349><c> now</c><00:34:16.280><c> even</c><00:34:16.669><c> though</c><00:34:16.790><c> we</c><00:34:16.909><c> have</c><00:34:17.030><c> an</c>

00:34:17.139 --> 00:34:17.149 align:start position:0%
server now even though we have an
 

00:34:17.149 --> 00:34:18.879 align:start position:0%
server now even though we have an
auditing<00:34:17.480><c> resource</c><00:34:17.869><c> now</c><00:34:18.079><c> that</c><00:34:18.319><c> makes</c><00:34:18.500><c> it</c><00:34:18.649><c> more</c>

00:34:18.879 --> 00:34:18.889 align:start position:0%
auditing resource now that makes it more
 

00:34:18.889 --> 00:34:20.919 align:start position:0%
auditing resource now that makes it more
reliable<00:34:19.190><c> your</c><00:34:20.000><c> tests</c><00:34:20.299><c> can</c><00:34:20.480><c> still</c><00:34:20.659><c> fail</c>

00:34:20.919 --> 00:34:20.929 align:start position:0%
reliable your tests can still fail
 

00:34:20.929 --> 00:34:22.690 align:start position:0%
reliable your tests can still fail
because<00:34:21.319><c> your</c><00:34:21.500><c> server</c><00:34:21.770><c> may</c><00:34:21.950><c> crash</c><00:34:22.250><c> for</c><00:34:22.549><c> some</c>

00:34:22.690 --> 00:34:22.700 align:start position:0%
because your server may crash for some
 

00:34:22.700 --> 00:34:25.440 align:start position:0%
because your server may crash for some
reason<00:34:23.079><c> so</c><00:34:24.079><c> your</c><00:34:24.230><c> test</c><00:34:24.470><c> will</c><00:34:24.649><c> fail</c><00:34:24.829><c> so</c>

00:34:25.440 --> 00:34:25.450 align:start position:0%
reason so your test will fail so
 

00:34:25.450 --> 00:34:27.789 align:start position:0%
reason so your test will fail so
wouldn't<00:34:26.450><c> be</c><00:34:26.599><c> better</c><00:34:26.750><c> if</c><00:34:27.109><c> we</c><00:34:27.139><c> completely</c>

00:34:27.789 --> 00:34:27.799 align:start position:0%
wouldn't be better if we completely
 

00:34:27.799 --> 00:34:29.680 align:start position:0%
wouldn't be better if we completely
isolate<00:34:28.220><c> ourselves</c><00:34:28.339><c> from</c><00:34:28.819><c> these</c><00:34:29.089><c> conditions</c>

00:34:29.680 --> 00:34:29.690 align:start position:0%
isolate ourselves from these conditions
 

00:34:29.690 --> 00:34:31.690 align:start position:0%
isolate ourselves from these conditions
and<00:34:29.960><c> run</c><00:34:30.649><c> our</c><00:34:30.799><c> tests</c><00:34:31.099><c> in</c><00:34:31.220><c> a</c><00:34:31.309><c> hermetic</c>

00:34:31.690 --> 00:34:31.700 align:start position:0%
and run our tests in a hermetic
 

00:34:31.700 --> 00:34:34.329 align:start position:0%
and run our tests in a hermetic
environment<00:34:32.349><c> this</c><00:34:33.349><c> will</c><00:34:33.559><c> not</c><00:34:33.740><c> only</c><00:34:33.950><c> make</c><00:34:34.220><c> your</c>

00:34:34.329 --> 00:34:34.339 align:start position:0%
environment this will not only make your
 

00:34:34.339 --> 00:34:36.639 align:start position:0%
environment this will not only make your
test<00:34:34.639><c> run</c><00:34:34.849><c> much</c><00:34:35.059><c> faster</c><00:34:35.200><c> but</c><00:34:36.200><c> it</c><00:34:36.319><c> will</c><00:34:36.440><c> also</c>

00:34:36.639 --> 00:34:36.649 align:start position:0%
test run much faster but it will also
 

00:34:36.649 --> 00:34:39.940 align:start position:0%
test run much faster but it will also
eliminate<00:34:36.889><c> any</c><00:34:37.280><c> flakiness</c><00:34:37.730><c> and</c><00:34:38.740><c> beyond</c><00:34:39.740><c> this</c>

00:34:39.940 --> 00:34:39.950 align:start position:0%
eliminate any flakiness and beyond this
 

00:34:39.950 --> 00:34:41.770 align:start position:0%
eliminate any flakiness and beyond this
specific<00:34:40.460><c> example</c><00:34:40.940><c> you</c><00:34:41.059><c> further</c><00:34:41.389><c> want</c><00:34:41.720><c> to</c>

00:34:41.770 --> 00:34:41.780 align:start position:0%
specific example you further want to
 

00:34:41.780 --> 00:34:43.419 align:start position:0%
specific example you further want to
isolate<00:34:41.869><c> yourself</c><00:34:42.589><c> from</c><00:34:42.919><c> any</c><00:34:43.099><c> external</c>

00:34:43.419 --> 00:34:43.429 align:start position:0%
isolate yourself from any external
 

00:34:43.429 --> 00:34:46.059 align:start position:0%
isolate yourself from any external
dependencies<00:34:44.210><c> so</c><00:34:44.450><c> for</c><00:34:45.349><c> example</c><00:34:45.829><c> you</c><00:34:46.040><c> don't</c>

00:34:46.059 --> 00:34:46.069 align:start position:0%
dependencies so for example you don't
 

00:34:46.069 --> 00:34:48.639 align:start position:0%
dependencies so for example you don't
want<00:34:46.339><c> to</c><00:34:46.460><c> test</c><00:34:46.669><c> any</c><00:34:47.000><c> Android</c><00:34:47.659><c> system</c><00:34:48.079><c> UI</c><00:34:48.230><c> or</c>

00:34:48.639 --> 00:34:48.649 align:start position:0%
want to test any Android system UI or
 

00:34:48.649 --> 00:34:50.980 align:start position:0%
want to test any Android system UI or
any<00:34:49.460><c> other</c><00:34:49.730><c> UI</c><00:34:50.000><c> components</c><00:34:50.599><c> that</c><00:34:50.659><c> you</c><00:34:50.780><c> don't</c>

00:34:50.980 --> 00:34:50.990 align:start position:0%
any other UI components that you don't
 

00:34:50.990 --> 00:34:53.770 align:start position:0%
any other UI components that you don't
own<00:34:51.200><c> because</c><00:34:51.889><c> they</c><00:34:52.490><c> probably</c><00:34:52.819><c> already</c><00:34:53.089><c> tested</c>

00:34:53.770 --> 00:34:53.780 align:start position:0%
own because they probably already tested
 

00:34:53.780 --> 00:34:55.569 align:start position:0%
own because they probably already tested
and<00:34:53.960><c> they</c><00:34:54.349><c> can</c><00:34:54.530><c> also</c><00:34:54.679><c> change</c><00:34:55.040><c> without</c><00:34:55.369><c> your</c>

00:34:55.569 --> 00:34:55.579 align:start position:0%
and they can also change without your
 

00:34:55.579 --> 00:34:58.349 align:start position:0%
and they can also change without your
knowing<00:34:55.819><c> so</c><00:34:56.179><c> your</c><00:34:56.359><c> tests</c><00:34:56.629><c> will</c><00:34:56.869><c> actually</c><00:34:57.230><c> fail</c>

00:34:58.349 --> 00:34:58.359 align:start position:0%
knowing so your tests will actually fail
 

00:34:58.359 --> 00:35:01.030 align:start position:0%
knowing so your tests will actually fail
so<00:34:59.359><c> let's</c><00:34:59.569><c> see</c><00:34:59.720><c> how</c><00:34:59.900><c> our</c><00:35:00.049><c> second</c><00:35:00.589><c> isolated</c>

00:35:01.030 --> 00:35:01.040 align:start position:0%
so let's see how our second isolated
 

00:35:01.040 --> 00:35:02.430 align:start position:0%
so let's see how our second isolated
test<00:35:01.190><c> will</c><00:35:01.339><c> look</c><00:35:01.460><c> like</c><00:35:01.579><c> in</c><00:35:01.760><c> code</c>

00:35:02.430 --> 00:35:02.440 align:start position:0%
test will look like in code
 

00:35:02.440 --> 00:35:05.430 align:start position:0%
test will look like in code
so<00:35:03.400><c> here</c><00:35:03.849><c> we</c><00:35:04.000><c> see</c><00:35:04.270><c> the</c><00:35:04.539><c> main</c><00:35:04.690><c> point</c><00:35:05.020><c> here</c><00:35:05.109><c> is</c>

00:35:05.430 --> 00:35:05.440 align:start position:0%
so here we see the main point here is
 

00:35:05.440 --> 00:35:08.250 align:start position:0%
so here we see the main point here is
that<00:35:05.470><c> we</c><00:35:05.799><c> no</c><00:35:05.980><c> longer</c><00:35:06.010><c> use</c><00:35:06.369><c> the</c><00:35:06.700><c> real</c><00:35:07.299><c> server</c>

00:35:08.250 --> 00:35:08.260 align:start position:0%
that we no longer use the real server
 

00:35:08.260 --> 00:35:12.000 align:start position:0%
that we no longer use the real server
and<00:35:08.619><c> instead</c><00:35:09.579><c> you</c><00:35:10.299><c> know</c><00:35:10.420><c> we</c><00:35:10.829><c> set</c><00:35:11.829><c> up</c><00:35:11.859><c> a</c>

00:35:12.000 --> 00:35:12.010 align:start position:0%
and instead you know we set up a
 

00:35:12.010 --> 00:35:13.829 align:start position:0%
and instead you know we set up a
hermetic<00:35:12.460><c> repository</c><00:35:13.059><c> now</c><00:35:13.299><c> there's</c><00:35:13.630><c> many</c>

00:35:13.829 --> 00:35:13.839 align:start position:0%
hermetic repository now there's many
 

00:35:13.839 --> 00:35:15.420 align:start position:0%
hermetic repository now there's many
different<00:35:14.049><c> ways</c><00:35:14.380><c> of</c><00:35:14.650><c> you</c><00:35:14.740><c> to</c><00:35:14.890><c> do</c><00:35:15.010><c> this</c><00:35:15.160><c> and</c>

00:35:15.420 --> 00:35:15.430 align:start position:0%
different ways of you to do this and
 

00:35:15.430 --> 00:35:18.120 align:start position:0%
different ways of you to do this and
this<00:35:16.030><c> is</c><00:35:16.180><c> just</c><00:35:16.359><c> one</c><00:35:16.569><c> way</c><00:35:16.809><c> so</c><00:35:17.410><c> then</c><00:35:17.650><c> you</c><00:35:17.799><c> can</c><00:35:17.950><c> use</c>

00:35:18.120 --> 00:35:18.130 align:start position:0%
this is just one way so then you can use
 

00:35:18.130 --> 00:35:20.400 align:start position:0%
this is just one way so then you can use
this<00:35:18.339><c> harmonic</c><00:35:18.579><c> repository</c><00:35:19.480><c> in</c><00:35:19.750><c> order</c><00:35:20.260><c> to</c>

00:35:20.400 --> 00:35:20.410 align:start position:0%
this harmonic repository in order to
 

00:35:20.410 --> 00:35:22.140 align:start position:0%
this harmonic repository in order to
verify<00:35:20.619><c> that</c><00:35:21.099><c> your</c><00:35:21.250><c> note</c><00:35:21.400><c> is</c><00:35:21.490><c> actually</c><00:35:21.609><c> saved</c>

00:35:22.140 --> 00:35:22.150 align:start position:0%
verify that your note is actually saved
 

00:35:22.150 --> 00:35:24.420 align:start position:0%
verify that your note is actually saved
without<00:35:22.960><c> ever</c><00:35:23.289><c> leaving</c><00:35:23.589><c> the</c><00:35:23.859><c> context</c><00:35:24.190><c> of</c><00:35:24.309><c> your</c>

00:35:24.420 --> 00:35:24.430 align:start position:0%
without ever leaving the context of your
 

00:35:24.430 --> 00:35:27.779 align:start position:0%
without ever leaving the context of your
app<00:35:24.609><c> or</c><00:35:24.849><c> hitting</c><00:35:25.059><c> the</c><00:35:25.270><c> network</c><00:35:26.460><c> so</c><00:35:27.460><c> at</c><00:35:27.609><c> this</c>

00:35:27.779 --> 00:35:27.789 align:start position:0%
app or hitting the network so at this
 

00:35:27.789 --> 00:35:30.150 align:start position:0%
app or hitting the network so at this
point<00:35:28.150><c> if</c><00:35:28.359><c> you</c><00:35:28.450><c> think</c><00:35:28.660><c> about</c><00:35:28.780><c> it</c><00:35:29.079><c> you</c><00:35:29.589><c> have</c><00:35:29.770><c> two</c>

00:35:30.150 --> 00:35:30.160 align:start position:0%
point if you think about it you have two
 

00:35:30.160 --> 00:35:34.620 align:start position:0%
point if you think about it you have two
smaller<00:35:31.140><c> tests</c><00:35:32.140><c> that</c><00:35:32.500><c> run</c><00:35:32.920><c> much</c><00:35:33.190><c> more</c><00:35:33.630><c> they</c>

00:35:34.620 --> 00:35:34.630 align:start position:0%
smaller tests that run much more they
 

00:35:34.630 --> 00:35:36.990 align:start position:0%
smaller tests that run much more they
are<00:35:34.660><c> way</c><00:35:35.289><c> more</c><00:35:35.319><c> reliable</c><00:35:36.130><c> and</c><00:35:36.579><c> run</c><00:35:36.789><c> much</c>

00:35:36.990 --> 00:35:37.000 align:start position:0%
are way more reliable and run much
 

00:35:37.000 --> 00:35:39.480 align:start position:0%
are way more reliable and run much
faster<00:35:37.539><c> but</c><00:35:38.079><c> at</c><00:35:38.200><c> the</c><00:35:38.289><c> same</c><00:35:38.440><c> time</c><00:35:38.710><c> you</c><00:35:39.069><c> maintain</c>

00:35:39.480 --> 00:35:39.490 align:start position:0%
faster but at the same time you maintain
 

00:35:39.490 --> 00:35:41.490 align:start position:0%
faster but at the same time you maintain
the<00:35:39.670><c> same</c><00:35:39.940><c> amount</c><00:35:40.180><c> of</c><00:35:40.630><c> test</c><00:35:40.869><c> coverage</c><00:35:41.049><c> as</c><00:35:41.380><c> your</c>

00:35:41.490 --> 00:35:41.500 align:start position:0%
the same amount of test coverage as your
 

00:35:41.500 --> 00:35:44.430 align:start position:0%
the same amount of test coverage as your
large<00:35:41.740><c> end-to-end</c><00:35:42.160><c> test</c><00:35:42.549><c> and</c><00:35:42.789><c> this</c><00:35:43.569><c> is</c><00:35:43.809><c> why</c><00:35:44.020><c> we</c>

00:35:44.430 --> 00:35:44.440 align:start position:0%
large end-to-end test and this is why we
 

00:35:44.440 --> 00:35:46.559 align:start position:0%
large end-to-end test and this is why we
want<00:35:44.710><c> to</c><00:35:44.799><c> have</c><00:35:44.950><c> more</c><00:35:45.549><c> of</c><00:35:45.849><c> these</c><00:35:46.089><c> smaller</c>

00:35:46.559 --> 00:35:46.569 align:start position:0%
want to have more of these smaller
 

00:35:46.569 --> 00:35:48.920 align:start position:0%
want to have more of these smaller
isolated<00:35:47.319><c> tests</c><00:35:47.680><c> compared</c><00:35:48.339><c> to</c><00:35:48.430><c> the</c><00:35:48.549><c> large</c>

00:35:48.920 --> 00:35:48.930 align:start position:0%
isolated tests compared to the large
 

00:35:48.930 --> 00:35:52.890 align:start position:0%
isolated tests compared to the large
end-to-end<00:35:49.930><c> tests</c><00:35:50.230><c> we</c><00:35:50.440><c> showed</c><00:35:50.650><c> before</c><00:35:51.900><c> okay</c>

00:35:52.890 --> 00:35:52.900 align:start position:0%
end-to-end tests we showed before okay
 

00:35:52.900 --> 00:35:56.160 align:start position:0%
end-to-end tests we showed before okay
so<00:35:52.930><c> at</c><00:35:53.530><c> this</c><00:35:53.589><c> point</c><00:35:54.039><c> we</c><00:35:54.750><c> iterated</c><00:35:55.750><c> through</c><00:35:55.869><c> our</c>

00:35:56.160 --> 00:35:56.170 align:start position:0%
so at this point we iterated through our
 

00:35:56.170 --> 00:35:58.589 align:start position:0%
so at this point we iterated through our
developer<00:35:56.680><c> cycle</c><00:35:57.130><c> a</c><00:35:57.220><c> few</c><00:35:57.250><c> times</c><00:35:57.670><c> and</c><00:35:58.059><c> we</c>

00:35:58.589 --> 00:35:58.599 align:start position:0%
developer cycle a few times and we
 

00:35:58.599 --> 00:36:00.390 align:start position:0%
developer cycle a few times and we
should<00:35:58.780><c> see</c><00:35:58.960><c> all</c><00:35:59.289><c> of</c><00:35:59.349><c> our</c><00:35:59.680><c> tests</c><00:36:00.069><c> start</c>

00:36:00.390 --> 00:36:00.400 align:start position:0%
should see all of our tests start
 

00:36:00.400 --> 00:36:02.430 align:start position:0%
should see all of our tests start
turning<00:36:00.789><c> green</c><00:36:01.000><c> and</c><00:36:01.210><c> we</c><00:36:01.660><c> should</c><00:36:01.809><c> be</c><00:36:01.930><c> confident</c>

00:36:02.430 --> 00:36:02.440 align:start position:0%
turning green and we should be confident
 

00:36:02.440 --> 00:36:05.220 align:start position:0%
turning green and we should be confident
to<00:36:02.799><c> release</c><00:36:03.190><c> our</c><00:36:03.369><c> feature</c><00:36:03.640><c> however</c><00:36:04.630><c> before</c><00:36:05.020><c> we</c>

00:36:05.220 --> 00:36:05.230 align:start position:0%
to release our feature however before we
 

00:36:05.230 --> 00:36:09.029 align:start position:0%
to release our feature however before we
conclude<00:36:05.970><c> let's</c><00:36:06.970><c> jump</c><00:36:07.240><c> into</c><00:36:07.420><c> the</c><00:36:07.599><c> future</c><00:36:08.039><c> for</c>

00:36:09.029 --> 00:36:09.039 align:start position:0%
conclude let's jump into the future for
 

00:36:09.039 --> 00:36:09.510 align:start position:0%
conclude let's jump into the future for
a<00:36:09.069><c> second</c>

00:36:09.510 --> 00:36:09.520 align:start position:0%
a second
 

00:36:09.520 --> 00:36:12.660 align:start position:0%
a second
as<00:36:09.579><c> your</c><00:36:10.359><c> app</c><00:36:10.539><c> grows</c><00:36:10.930><c> and</c><00:36:11.380><c> your</c><00:36:12.130><c> team</c><00:36:12.369><c> grows</c>

00:36:12.660 --> 00:36:12.670 align:start position:0%
as your app grows and your team grows
 

00:36:12.670 --> 00:36:14.400 align:start position:0%
as your app grows and your team grows
you<00:36:13.180><c> continue</c><00:36:13.660><c> adding</c><00:36:13.869><c> more</c><00:36:14.049><c> and</c><00:36:14.319><c> more</c>

00:36:14.400 --> 00:36:14.410 align:start position:0%
you continue adding more and more
 

00:36:14.410 --> 00:36:16.349 align:start position:0%
you continue adding more and more
features<00:36:14.680><c> to</c><00:36:14.859><c> your</c><00:36:15.039><c> app</c><00:36:15.220><c> and</c><00:36:15.549><c> you</c><00:36:16.000><c> may</c><00:36:16.150><c> find</c>

00:36:16.349 --> 00:36:16.359 align:start position:0%
features to your app and you may find
 

00:36:16.359 --> 00:36:18.539 align:start position:0%
features to your app and you may find
yourself<00:36:16.690><c> in</c><00:36:16.750><c> a</c><00:36:16.809><c> position</c><00:36:16.990><c> where</c><00:36:17.619><c> you</c><00:36:18.369><c> may</c>

00:36:18.539 --> 00:36:18.549 align:start position:0%
yourself in a position where you may
 

00:36:18.549 --> 00:36:21.059 align:start position:0%
yourself in a position where you may
have<00:36:18.579><c> UI</c><00:36:19.180><c> running</c><00:36:19.720><c> in</c><00:36:19.809><c> multiple</c><00:36:20.349><c> processes</c>

00:36:21.059 --> 00:36:21.069 align:start position:0%
have UI running in multiple processes
 

00:36:21.069 --> 00:36:23.010 align:start position:0%
have UI running in multiple processes
which<00:36:21.670><c> is</c><00:36:21.819><c> exactly</c><00:36:22.180><c> what</c><00:36:22.329><c> happened</c><00:36:22.630><c> at</c><00:36:22.690><c> Google</c>

00:36:23.010 --> 00:36:23.020 align:start position:0%
which is exactly what happened at Google
 

00:36:23.020 --> 00:36:25.890 align:start position:0%
which is exactly what happened at Google
so<00:36:23.890><c> if</c><00:36:24.010><c> you</c><00:36:24.130><c> go</c><00:36:24.279><c> to</c><00:36:24.339><c> our</c><00:36:24.460><c> notes</c><00:36:24.970><c> example</c><00:36:25.539><c> this</c>

00:36:25.890 --> 00:36:25.900 align:start position:0%
so if you go to our notes example this
 

00:36:25.900 --> 00:36:27.839 align:start position:0%
so if you go to our notes example this
may<00:36:26.109><c> look</c><00:36:26.230><c> something</c><00:36:26.529><c> like</c><00:36:26.559><c> this</c><00:36:26.859><c> you</c><00:36:27.160><c> have</c><00:36:27.819><c> a</c>

00:36:27.839 --> 00:36:27.849 align:start position:0%
may look something like this you have a
 

00:36:27.849 --> 00:36:29.400 align:start position:0%
may look something like this you have a
first<00:36:28.210><c> activity</c><00:36:28.630><c> that</c><00:36:28.779><c> runs</c><00:36:28.990><c> in</c><00:36:29.109><c> your</c><00:36:29.170><c> main</c>

00:36:29.400 --> 00:36:29.410 align:start position:0%
first activity that runs in your main
 

00:36:29.410 --> 00:36:32.069 align:start position:0%
first activity that runs in your main
process<00:36:29.890><c> on</c><00:36:30.160><c> the</c><00:36:30.430><c> left-hand</c><00:36:30.760><c> side</c><00:36:30.849><c> and</c><00:36:31.210><c> now</c>

00:36:32.069 --> 00:36:32.079 align:start position:0%
process on the left-hand side and now
 

00:36:32.079 --> 00:36:35.849 align:start position:0%
process on the left-hand side and now
the<00:36:32.470><c> second</c><00:36:33.069><c> activity</c><00:36:33.520><c> will</c><00:36:34.299><c> run</c><00:36:34.869><c> in</c><00:36:35.200><c> us</c><00:36:35.380><c> in</c><00:36:35.589><c> a</c>

00:36:35.849 --> 00:36:35.859 align:start position:0%
the second activity will run in us in a
 

00:36:35.859 --> 00:36:37.440 align:start position:0%
the second activity will run in us in a
private<00:36:36.160><c> process</c><00:36:36.339><c> and</c><00:36:36.789><c> in</c><00:36:36.880><c> this</c><00:36:37.059><c> case</c><00:36:37.299><c> we're</c>

00:36:37.440 --> 00:36:37.450 align:start position:0%
private process and in this case we're
 

00:36:37.450 --> 00:36:39.480 align:start position:0%
private process and in this case we're
going<00:36:37.569><c> to</c><00:36:37.630><c> call</c><00:36:37.779><c> it</c><00:36:37.900><c> add</c><00:36:38.109><c> notes</c><00:36:38.440><c> so</c><00:36:39.190><c> how</c><00:36:39.339><c> do</c><00:36:39.400><c> we</c>

00:36:39.480 --> 00:36:39.490 align:start position:0%
going to call it add notes so how do we
 

00:36:39.490 --> 00:36:42.809 align:start position:0%
going to call it add notes so how do we
test<00:36:39.789><c> that</c><00:36:40.089><c> well</c><00:36:40.779><c> before</c><00:36:41.289><c> Android</c><00:36:41.890><c> oh</c><00:36:42.099><c> it</c><00:36:42.640><c> was</c>

00:36:42.809 --> 00:36:42.819 align:start position:0%
test that well before Android oh it was
 

00:36:42.819 --> 00:36:46.710 align:start position:0%
test that well before Android oh it was
impossible<00:36:43.089><c> to</c><00:36:43.480><c> test</c><00:36:44.940><c> but</c><00:36:45.940><c> with</c><00:36:46.210><c> Android</c><00:36:46.539><c> oh</c>

00:36:46.710 --> 00:36:46.720 align:start position:0%
impossible to test but with Android oh
 

00:36:46.720 --> 00:36:49.349 align:start position:0%
impossible to test but with Android oh
there<00:36:47.079><c> is</c><00:36:47.170><c> a</c><00:36:47.200><c> new</c><00:36:47.640><c> instrumentation</c><00:36:48.640><c> attribute</c>

00:36:49.349 --> 00:36:49.359 align:start position:0%
there is a new instrumentation attribute
 

00:36:49.359 --> 00:36:51.480 align:start position:0%
there is a new instrumentation attribute
that<00:36:50.020><c> you</c><00:36:50.140><c> can</c><00:36:50.319><c> use</c><00:36:50.559><c> in</c><00:36:50.859><c> order</c><00:36:50.980><c> to</c><00:36:51.099><c> define</c>

00:36:51.480 --> 00:36:51.490 align:start position:0%
that you can use in order to define
 

00:36:51.490 --> 00:36:53.420 align:start position:0%
that you can use in order to define
which<00:36:51.789><c> process</c><00:36:52.329><c> you</c><00:36:52.480><c> want</c><00:36:52.599><c> to</c><00:36:52.750><c> instrument</c>

00:36:53.420 --> 00:36:53.430 align:start position:0%
which process you want to instrument
 

00:36:53.430 --> 00:36:56.220 align:start position:0%
which process you want to instrument
while<00:36:54.430><c> instrumenting</c><00:36:55.299><c> and</c><00:36:55.539><c> running</c><00:36:55.930><c> tests</c>

00:36:56.220 --> 00:36:56.230 align:start position:0%
while instrumenting and running tests
 

00:36:56.230 --> 00:36:57.990 align:start position:0%
while instrumenting and running tests
against<00:36:56.500><c> each</c><00:36:56.740><c> process</c><00:36:57.220><c> in</c><00:36:57.339><c> isolation</c><00:36:57.730><c> is</c><00:36:57.970><c> a</c>

00:36:57.990 --> 00:36:58.000 align:start position:0%
against each process in isolation is a
 

00:36:58.000 --> 00:37:00.150 align:start position:0%
against each process in isolation is a
great<00:36:58.299><c> idea</c><00:36:58.450><c> and</c><00:36:58.720><c> you</c><00:36:58.809><c> should</c><00:36:58.990><c> do</c><00:36:59.109><c> it</c><00:36:59.140><c> you</c><00:37:00.010><c> may</c>

00:37:00.150 --> 00:37:00.160 align:start position:0%
great idea and you should do it you may
 

00:37:00.160 --> 00:37:01.920 align:start position:0%
great idea and you should do it you may
find<00:37:00.400><c> yourself</c><00:37:00.789><c> in</c><00:37:01.000><c> a</c><00:37:01.240><c> position</c><00:37:01.420><c> where</c><00:37:01.660><c> you</c>

00:37:01.920 --> 00:37:01.930 align:start position:0%
find yourself in a position where you
 

00:37:01.930 --> 00:37:03.809 align:start position:0%
find yourself in a position where you
want<00:37:02.109><c> to</c><00:37:02.230><c> cross</c><00:37:02.529><c> process</c><00:37:03.160><c> boundaries</c><00:37:03.579><c> within</c>

00:37:03.809 --> 00:37:03.819 align:start position:0%
want to cross process boundaries within
 

00:37:03.819 --> 00:37:06.930 align:start position:0%
want to cross process boundaries within
one<00:37:04.180><c> test</c><00:37:04.859><c> so</c><00:37:05.859><c> you</c><00:37:05.920><c> would</c><00:37:06.309><c> probably</c><00:37:06.730><c> want</c><00:37:06.789><c> to</c>

00:37:06.930 --> 00:37:06.940 align:start position:0%
one test so you would probably want to
 

00:37:06.940 --> 00:37:08.970 align:start position:0%
one test so you would probably want to
write<00:37:07.119><c> an</c><00:37:07.450><c> espresso</c><00:37:08.020><c> test</c><00:37:08.380><c> like</c><00:37:08.589><c> looks</c><00:37:08.799><c> like</c>

00:37:08.970 --> 00:37:08.980 align:start position:0%
write an espresso test like looks like
 

00:37:08.980 --> 00:37:13.079 align:start position:0%
write an espresso test like looks like
this<00:37:10.140><c> while</c><00:37:11.140><c> this</c><00:37:11.410><c> was</c><00:37:11.890><c> not</c><00:37:12.130><c> only</c><00:37:12.400><c> possible</c><00:37:12.730><c> in</c>

00:37:13.079 --> 00:37:13.089 align:start position:0%
this while this was not only possible in
 

00:37:13.089 --> 00:37:15.000 align:start position:0%
this while this was not only possible in
a<00:37:13.150><c> framework</c><00:37:13.390><c> level</c><00:37:13.630><c> before</c><00:37:14.020><c> Android</c><00:37:14.289><c> oh</c><00:37:14.470><c> this</c>

00:37:15.000 --> 00:37:15.010 align:start position:0%
a framework level before Android oh this
 

00:37:15.010 --> 00:37:16.170 align:start position:0%
a framework level before Android oh this
was<00:37:15.250><c> also</c><00:37:15.490><c> impossible</c>

00:37:16.170 --> 00:37:16.180 align:start position:0%
was also impossible
 

00:37:16.180 --> 00:37:18.270 align:start position:0%
was also impossible
on<00:37:16.329><c> this</c><00:37:16.540><c> first</c><00:37:16.780><c> level</c><00:37:16.960><c> because</c><00:37:17.530><c> in</c><00:37:17.800><c> this</c>

00:37:18.270 --> 00:37:18.280 align:start position:0%
on this first level because in this
 

00:37:18.280 --> 00:37:20.549 align:start position:0%
on this first level because in this
specific<00:37:18.700><c> example</c><00:37:19.079><c> Express</c><00:37:20.079><c> is</c><00:37:20.260><c> not</c><00:37:20.410><c> even</c>

00:37:20.549 --> 00:37:20.559 align:start position:0%
specific example Express is not even
 

00:37:20.559 --> 00:37:22.950 align:start position:0%
specific example Express is not even
aware<00:37:20.650><c> of</c><00:37:20.890><c> your</c><00:37:21.069><c> secondary</c><00:37:21.609><c> process</c><00:37:22.059><c> nor</c><00:37:22.720><c> can</c>

00:37:22.950 --> 00:37:22.960 align:start position:0%
aware of your secondary process nor can
 

00:37:22.960 --> 00:37:24.720 align:start position:0%
aware of your secondary process nor can
it<00:37:22.990><c> maintain</c><00:37:23.440><c> any</c><00:37:23.770><c> of</c><00:37:23.920><c> the</c><00:37:24.040><c> synchronization</c>

00:37:24.720 --> 00:37:24.730 align:start position:0%
it maintain any of the synchronization
 

00:37:24.730 --> 00:37:28.020 align:start position:0%
it maintain any of the synchronization
guarantees<00:37:25.210><c> we</c><00:37:25.690><c> all</c><00:37:25.839><c> know</c><00:37:26.020><c> and</c><00:37:26.200><c> love</c><00:37:26.230><c> so</c><00:37:27.030><c> today</c>

00:37:28.020 --> 00:37:28.030 align:start position:0%
guarantees we all know and love so today
 

00:37:28.030 --> 00:37:30.210 align:start position:0%
guarantees we all know and love so today
I'm<00:37:28.329><c> happy</c><00:37:28.690><c> to</c><00:37:28.809><c> announce</c><00:37:29.220><c> multi-process</c>

00:37:30.210 --> 00:37:30.220 align:start position:0%
I'm happy to announce multi-process
 

00:37:30.220 --> 00:37:34.140 align:start position:0%
I'm happy to announce multi-process
espresso<00:37:30.760><c> support</c><00:37:32.339><c> without</c><00:37:33.339><c> changing</c><00:37:33.880><c> any</c><00:37:34.030><c> of</c>

00:37:34.140 --> 00:37:34.150 align:start position:0%
espresso support without changing any of
 

00:37:34.150 --> 00:37:35.849 align:start position:0%
espresso support without changing any of
your<00:37:34.270><c> test</c><00:37:34.510><c> code</c><00:37:34.720><c> or</c><00:37:35.020><c> your</c><00:37:35.170><c> app</c><00:37:35.349><c> code</c><00:37:35.619><c> this</c>

00:37:35.849 --> 00:37:35.859 align:start position:0%
your test code or your app code this
 

00:37:35.859 --> 00:37:37.260 align:start position:0%
your test code or your app code this
will<00:37:36.040><c> allow</c><00:37:36.280><c> you</c><00:37:36.339><c> to</c><00:37:36.460><c> seamlessly</c><00:37:36.790><c> interact</c>

00:37:37.260 --> 00:37:37.270 align:start position:0%
will allow you to seamlessly interact
 

00:37:37.270 --> 00:37:39.690 align:start position:0%
will allow you to seamlessly interact
with<00:37:37.599><c> UI</c><00:37:37.750><c> cross</c><00:37:38.230><c> process</c><00:37:38.770><c> while</c><00:37:39.430><c> maintaining</c>

00:37:39.690 --> 00:37:39.700 align:start position:0%
with UI cross process while maintaining
 

00:37:39.700 --> 00:37:41.819 align:start position:0%
with UI cross process while maintaining
all<00:37:40.240><c> of</c><00:37:40.450><c> us</c><00:37:40.540><c> presto</c><00:37:40.960><c> synchronization</c>

00:37:41.819 --> 00:37:41.829 align:start position:0%
all of us presto synchronization
 

00:37:41.829 --> 00:37:45.809 align:start position:0%
all of us presto synchronization
guarantees<00:37:42.309><c> and</c><00:37:43.530><c> it</c><00:37:44.530><c> will</c><00:37:44.680><c> be</c><00:37:44.859><c> able</c><00:37:44.920><c> available</c>

00:37:45.809 --> 00:37:45.819 align:start position:0%
guarantees and it will be able available
 

00:37:45.819 --> 00:37:47.579 align:start position:0%
guarantees and it will be able available
in<00:37:46.000><c> the</c><00:37:46.089><c> next</c><00:37:46.329><c> version</c><00:37:46.480><c> of</c><00:37:46.690><c> Android</c><00:37:46.960><c> test</c>

00:37:47.579 --> 00:37:47.589 align:start position:0%
in the next version of Android test
 

00:37:47.589 --> 00:37:50.609 align:start position:0%
in the next version of Android test
support<00:37:47.859><c> library</c><00:37:48.190><c> release</c><00:37:48.460><c> so</c><00:37:49.440><c> let's</c><00:37:50.440><c> have</c><00:37:50.559><c> a</c>

00:37:50.609 --> 00:37:50.619 align:start position:0%
support library release so let's have a
 

00:37:50.619 --> 00:37:52.589 align:start position:0%
support library release so let's have a
quick<00:37:50.829><c> overview</c><00:37:51.099><c> of</c><00:37:51.460><c> how</c><00:37:51.670><c> it</c><00:37:51.700><c> actually</c><00:37:51.819><c> works</c>

00:37:52.589 --> 00:37:52.599 align:start position:0%
quick overview of how it actually works
 

00:37:52.599 --> 00:37:54.930 align:start position:0%
quick overview of how it actually works
so<00:37:53.290><c> traditionally</c><00:37:54.010><c> as</c><00:37:54.250><c> you</c><00:37:54.400><c> know</c><00:37:54.550><c> in</c><00:37:54.790><c> our</c>

00:37:54.930 --> 00:37:54.940 align:start position:0%
so traditionally as you know in our
 

00:37:54.940 --> 00:38:00.030 align:start position:0%
so traditionally as you know in our
example<00:37:55.390><c> we</c><00:37:56.079><c> start</c><00:37:56.380><c> in</c><00:37:56.619><c> one</c><00:37:56.859><c> process</c><00:37:57.510><c> where</c><00:37:59.040><c> we</c>

00:38:00.030 --> 00:38:00.040 align:start position:0%
example we start in one process where we
 

00:38:00.040 --> 00:38:01.500 align:start position:0%
example we start in one process where we
have<00:38:00.220><c> an</c><00:38:00.400><c> instance</c><00:38:00.700><c> of</c><00:38:00.760><c> an</c><00:38:00.910><c> original</c><00:38:01.089><c> runner</c>

00:38:01.500 --> 00:38:01.510 align:start position:0%
have an instance of an original runner
 

00:38:01.510 --> 00:38:04.620 align:start position:0%
have an instance of an original runner
and<00:38:01.869><c> espresso</c><00:38:02.680><c> in</c><00:38:02.980><c> this</c><00:38:03.099><c> case</c><00:38:03.339><c> now</c><00:38:04.270><c> if</c><00:38:04.510><c> you</c>

00:38:04.620 --> 00:38:04.630 align:start position:0%
and espresso in this case now if you
 

00:38:04.630 --> 00:38:06.120 align:start position:0%
and espresso in this case now if you
remember<00:38:04.869><c> from</c><00:38:04.930><c> our</c><00:38:05.109><c> example</c><00:38:05.410><c> when</c><00:38:05.800><c> you</c><00:38:05.920><c> click</c>

00:38:06.120 --> 00:38:06.130 align:start position:0%
remember from our example when you click
 

00:38:06.130 --> 00:38:08.700 align:start position:0%
remember from our example when you click
the<00:38:06.280><c> add</c><00:38:06.520><c> node</c><00:38:06.880><c> button</c><00:38:07.230><c> there</c><00:38:08.230><c> will</c><00:38:08.380><c> be</c><00:38:08.410><c> a</c><00:38:08.500><c> new</c>

00:38:08.700 --> 00:38:08.710 align:start position:0%
the add node button there will be a new
 

00:38:08.710 --> 00:38:10.819 align:start position:0%
the add node button there will be a new
activity<00:38:09.160><c> and</c><00:38:09.400><c> now</c><00:38:09.730><c> we</c><00:38:09.790><c> have</c><00:38:10.030><c> a</c><00:38:10.059><c> new</c><00:38:10.240><c> process</c>

00:38:10.819 --> 00:38:10.829 align:start position:0%
activity and now we have a new process
 

00:38:10.829 --> 00:38:15.180 align:start position:0%
activity and now we have a new process
so<00:38:12.450><c> the</c><00:38:13.450><c> problem</c><00:38:13.809><c> now</c><00:38:13.990><c> is</c><00:38:14.260><c> that</c><00:38:14.559><c> we</c><00:38:14.829><c> have</c><00:38:14.950><c> two</c>

00:38:15.180 --> 00:38:15.190 align:start position:0%
so the problem now is that we have two
 

00:38:15.190 --> 00:38:17.309 align:start position:0%
so the problem now is that we have two
processes<00:38:15.790><c> with</c><00:38:16.390><c> two</c><00:38:16.540><c> different</c><00:38:16.690><c> instances</c>

00:38:17.309 --> 00:38:17.319 align:start position:0%
processes with two different instances
 

00:38:17.319 --> 00:38:19.620 align:start position:0%
processes with two different instances
of<00:38:17.530><c> an</c><00:38:17.650><c> original</c><00:38:17.829><c> runner</c><00:38:18.280><c> and</c><00:38:18.609><c> espresso</c><00:38:19.300><c> and</c>

00:38:19.620 --> 00:38:19.630 align:start position:0%
of an original runner and espresso and
 

00:38:19.630 --> 00:38:21.569 align:start position:0%
of an original runner and espresso and
they're<00:38:19.720><c> not</c><00:38:19.900><c> aware</c><00:38:20.140><c> of</c><00:38:20.200><c> each</c><00:38:20.380><c> other</c><00:38:20.589><c> so</c><00:38:21.460><c> the</c>

00:38:21.569 --> 00:38:21.579 align:start position:0%
they're not aware of each other so the
 

00:38:21.579 --> 00:38:23.370 align:start position:0%
they're not aware of each other so the
first<00:38:21.609><c> thing</c><00:38:21.970><c> that</c><00:38:22.000><c> we</c><00:38:22.210><c> want</c><00:38:22.390><c> to</c><00:38:22.480><c> do</c><00:38:22.660><c> is</c><00:38:22.930><c> we</c>

00:38:23.370 --> 00:38:23.380 align:start position:0%
first thing that we want to do is we
 

00:38:23.380 --> 00:38:25.680 align:start position:0%
first thing that we want to do is we
want<00:38:23.559><c> to</c><00:38:23.589><c> establish</c><00:38:23.790><c> communication</c><00:38:24.790><c> between</c>

00:38:25.680 --> 00:38:25.690 align:start position:0%
want to establish communication between
 

00:38:25.690 --> 00:38:28.319 align:start position:0%
want to establish communication between
the<00:38:25.930><c> two</c><00:38:25.960><c> and</c><00:38:26.079><c> regenerate</c><00:38:27.040><c> runner</c><00:38:27.250><c> and</c><00:38:27.640><c> now</c>

00:38:28.319 --> 00:38:28.329 align:start position:0%
the two and regenerate runner and now
 

00:38:28.329 --> 00:38:31.380 align:start position:0%
the two and regenerate runner and now
that<00:38:28.569><c> we</c><00:38:28.720><c> have</c><00:38:28.900><c> this</c><00:38:29.049><c> communication</c><00:38:30.180><c> we</c><00:38:31.180><c> can</c>

00:38:31.380 --> 00:38:31.390 align:start position:0%
that we have this communication we can
 

00:38:31.390 --> 00:38:34.230 align:start position:0%
that we have this communication we can
use<00:38:31.599><c> it</c><00:38:31.869><c> to</c><00:38:32.760><c> establish</c><00:38:33.760><c> the</c><00:38:33.819><c> communication</c>

00:38:34.230 --> 00:38:34.240 align:start position:0%
use it to establish the communication
 

00:38:34.240 --> 00:38:36.270 align:start position:0%
use it to establish the communication
video<00:38:34.420><c> to</c><00:38:34.569><c> espresso</c><00:38:34.930><c> instances</c><00:38:35.470><c> and</c><00:38:35.710><c> the</c><00:38:36.160><c> way</c>

00:38:36.270 --> 00:38:36.280 align:start position:0%
video to espresso instances and the way
 

00:38:36.280 --> 00:38:39.210 align:start position:0%
video to espresso instances and the way
we<00:38:36.400><c> do</c><00:38:36.579><c> that</c><00:38:37.089><c> is</c><00:38:37.390><c> by</c><00:38:38.260><c> having</c><00:38:38.530><c> an</c><00:38:38.770><c> ability</c><00:38:38.980><c> in</c>

00:38:39.210 --> 00:38:39.220 align:start position:0%
we do that is by having an ability in
 

00:38:39.220 --> 00:38:41.490 align:start position:0%
we do that is by having an ability in
hydrogen<00:38:39.760><c> as</c><00:38:40.000><c> runner</c><00:38:40.210><c> to</c><00:38:40.660><c> register</c><00:38:41.260><c> any</c>

00:38:41.490 --> 00:38:41.500 align:start position:0%
hydrogen as runner to register any
 

00:38:41.500 --> 00:38:44.430 align:start position:0%
hydrogen as runner to register any
testing<00:38:42.190><c> frameworks</c><00:38:42.670><c> like</c><00:38:42.910><c> espresso</c><00:38:43.329><c> with</c><00:38:44.290><c> an</c>

00:38:44.430 --> 00:38:44.440 align:start position:0%
testing frameworks like espresso with an
 

00:38:44.440 --> 00:38:47.370 align:start position:0%
testing frameworks like espresso with an
original<00:38:44.589><c> runner</c><00:38:45.040><c> and</c><00:38:45.369><c> then</c><00:38:46.000><c> the</c><00:38:46.780><c> runner</c><00:38:46.990><c> will</c>

00:38:47.370 --> 00:38:47.380 align:start position:0%
original runner and then the runner will
 

00:38:47.380 --> 00:38:48.960 align:start position:0%
original runner and then the runner will
then<00:38:47.589><c> facilitate</c><00:38:48.160><c> all</c><00:38:48.369><c> the</c><00:38:48.520><c> handshaking</c>

00:38:48.960 --> 00:38:48.970 align:start position:0%
then facilitate all the handshaking
 

00:38:48.970 --> 00:38:50.819 align:start position:0%
then facilitate all the handshaking
required<00:38:49.510><c> in</c><00:38:49.809><c> order</c><00:38:50.109><c> to</c><00:38:50.290><c> establish</c>

00:38:50.819 --> 00:38:50.829 align:start position:0%
required in order to establish
 

00:38:50.829 --> 00:38:52.260 align:start position:0%
required in order to establish
communication<00:38:51.400><c> between</c><00:38:51.520><c> the</c><00:38:51.760><c> two</c><00:38:51.790><c> espresso</c>

00:38:52.260 --> 00:38:52.270 align:start position:0%
communication between the two espresso
 

00:38:52.270 --> 00:38:55.380 align:start position:0%
communication between the two espresso
instances<00:38:53.130><c> now</c><00:38:54.130><c> that</c><00:38:54.430><c> the</c><00:38:54.640><c> two</c><00:38:54.849><c> inspiration</c>

00:38:55.380 --> 00:38:55.390 align:start position:0%
instances now that the two inspiration
 

00:38:55.390 --> 00:38:58.020 align:start position:0%
instances now that the two inspiration
instances<00:38:55.809><c> can</c><00:38:56.079><c> talk</c><00:38:56.380><c> to</c><00:38:56.530><c> each</c><00:38:56.589><c> other</c><00:38:56.859><c> it</c><00:38:57.520><c> can</c>

00:38:58.020 --> 00:38:58.030 align:start position:0%
instances can talk to each other it can
 

00:38:58.030 --> 00:38:59.940 align:start position:0%
instances can talk to each other it can
then<00:38:58.240><c> use</c><00:38:58.540><c> it</c><00:38:58.750><c> in</c><00:38:58.960><c> order</c><00:38:59.140><c> to</c><00:38:59.290><c> enable</c><00:38:59.530><c> cross</c>

00:38:59.940 --> 00:38:59.950 align:start position:0%
then use it in order to enable cross
 

00:38:59.950 --> 00:39:02.190 align:start position:0%
then use it in order to enable cross
process<00:39:00.460><c> testing</c><00:39:00.940><c> and</c><00:39:01.210><c> maintaining</c><00:39:01.839><c> all</c><00:39:01.990><c> the</c>

00:39:02.190 --> 00:39:02.200 align:start position:0%
process testing and maintaining all the
 

00:39:02.200 --> 00:39:04.440 align:start position:0%
process testing and maintaining all the
synchronization<00:39:02.799><c> guarantees</c><00:39:03.250><c> that</c><00:39:03.520><c> we</c><00:39:04.329><c> had</c>

00:39:04.440 --> 00:39:04.450 align:start position:0%
synchronization guarantees that we had
 

00:39:04.450 --> 00:39:09.690 align:start position:0%
synchronization guarantees that we had
before<00:39:05.400><c> okay</c><00:39:06.400><c> so</c><00:39:07.740><c> with</c><00:39:08.740><c> that</c><00:39:08.890><c> we're</c><00:39:09.339><c> reaching</c>

00:39:09.690 --> 00:39:09.700 align:start position:0%
before okay so with that we're reaching
 

00:39:09.700 --> 00:39:11.700 align:start position:0%
before okay so with that we're reaching
the<00:39:10.000><c> end</c><00:39:10.180><c> of</c><00:39:10.299><c> our</c><00:39:10.420><c> developer</c><00:39:10.839><c> workflow</c><00:39:11.049><c> and</c><00:39:11.559><c> we</c>

00:39:11.700 --> 00:39:11.710 align:start position:0%
the end of our developer workflow and we
 

00:39:11.710 --> 00:39:13.109 align:start position:0%
the end of our developer workflow and we
showed<00:39:11.950><c> you</c><00:39:12.099><c> all</c><00:39:12.309><c> the</c><00:39:12.339><c> tools</c><00:39:12.700><c> that</c><00:39:12.940><c> you</c><00:39:13.030><c> can</c>

00:39:13.109 --> 00:39:13.119 align:start position:0%
showed you all the tools that you can
 

00:39:13.119 --> 00:39:15.480 align:start position:0%
showed you all the tools that you can
use<00:39:13.299><c> across</c><00:39:13.690><c> each</c><00:39:14.020><c> step</c><00:39:14.349><c> of</c><00:39:14.380><c> the</c><00:39:14.589><c> way</c><00:39:14.740><c> in</c><00:39:15.010><c> order</c>

00:39:15.480 --> 00:39:15.490 align:start position:0%
use across each step of the way in order
 

00:39:15.490 --> 00:39:17.930 align:start position:0%
use across each step of the way in order
to<00:39:15.579><c> make</c><00:39:15.700><c> TDD</c><00:39:16.329><c> happen</c><00:39:16.809><c> and</c><00:39:16.990><c> on</c><00:39:17.170><c> Android</c><00:39:17.619><c> and</c>

00:39:17.930 --> 00:39:17.940 align:start position:0%
to make TDD happen and on Android and
 

00:39:17.940 --> 00:39:20.609 align:start position:0%
to make TDD happen and on Android and
with<00:39:18.940><c> that</c><00:39:19.089><c> said</c><00:39:19.390><c> even</c><00:39:19.900><c> if</c><00:39:20.020><c> you</c><00:39:20.109><c> don't</c><00:39:20.380><c> follow</c>

00:39:20.609 --> 00:39:20.619 align:start position:0%
with that said even if you don't follow
 

00:39:20.619 --> 00:39:23.640 align:start position:0%
with that said even if you don't follow
this<00:39:20.920><c> flow</c><00:39:21.220><c> exactly</c><00:39:22.059><c> hopefully</c><00:39:23.020><c> you</c><00:39:23.349><c> know</c><00:39:23.500><c> how</c>

00:39:23.640 --> 00:39:23.650 align:start position:0%
this flow exactly hopefully you know how
 

00:39:23.650 --> 00:39:25.319 align:start position:0%
this flow exactly hopefully you know how
to<00:39:23.710><c> use</c><00:39:23.980><c> every</c><00:39:24.400><c> single</c><00:39:24.430><c> tool</c><00:39:24.910><c> and</c><00:39:25.150><c> how</c><00:39:25.270><c> to</c>

00:39:25.319 --> 00:39:25.329 align:start position:0%
to use every single tool and how to
 

00:39:25.329 --> 00:39:27.599 align:start position:0%
to use every single tool and how to
write<00:39:25.630><c> good</c><00:39:26.049><c> tests</c><00:39:26.319><c> in</c><00:39:26.589><c> order</c><00:39:27.069><c> to</c><00:39:27.190><c> bring</c><00:39:27.430><c> your</c>

00:39:27.599 --> 00:39:27.609 align:start position:0%
write good tests in order to bring your
 

00:39:27.609 --> 00:39:29.989 align:start position:0%
write good tests in order to bring your
app<00:39:27.819><c> quality</c><00:39:28.089><c> to</c><00:39:28.420><c> the</c><00:39:28.510><c> next</c><00:39:28.750><c> level</c>

00:39:29.989 --> 00:39:29.999 align:start position:0%
app quality to the next level
 

00:39:29.999 --> 00:39:33.269 align:start position:0%
app quality to the next level
so<00:39:30.999><c> if</c><00:39:31.359><c> you</c><00:39:31.569><c> like</c><00:39:32.200><c> to</c><00:39:32.380><c> write</c><00:39:32.559><c> tests</c><00:39:32.890><c> and</c><00:39:33.160><c> you</c>

00:39:33.269 --> 00:39:33.279 align:start position:0%
so if you like to write tests and you
 

00:39:33.279 --> 00:39:35.700 align:start position:0%
so if you like to write tests and you
want<00:39:33.490><c> to</c><00:39:33.720><c> write</c><00:39:34.720><c> an</c><00:39:34.900><c> on</c><00:39:35.049><c> test</c><00:39:35.259><c> like</c><00:39:35.410><c> we</c><00:39:35.529><c> do</c><00:39:35.619><c> at</c>

00:39:35.700 --> 00:39:35.710 align:start position:0%
want to write an on test like we do at
 

00:39:35.710 --> 00:39:37.230 align:start position:0%
want to write an on test like we do at
Google<00:39:35.740><c> here</c><00:39:36.279><c> are</c><00:39:36.369><c> some</c><00:39:36.519><c> resources</c><00:39:36.789><c> to</c><00:39:37.029><c> get</c>

00:39:37.230 --> 00:39:37.240 align:start position:0%
Google here are some resources to get
 

00:39:37.240 --> 00:39:40.859 align:start position:0%
Google here are some resources to get
you<00:39:37.420><c> started</c><00:39:37.480><c> but</c><00:39:38.700><c> I</c><00:39:39.700><c> want</c><00:39:40.180><c> to</c><00:39:40.240><c> thank</c><00:39:40.420><c> you</c><00:39:40.599><c> and</c>

00:39:40.859 --> 00:39:40.869 align:start position:0%
you started but I want to thank you and
 

00:39:40.869 --> 00:39:42.839 align:start position:0%
you started but I want to thank you and
I<00:39:41.140><c> think</c><00:39:41.200><c> we</c><00:39:41.529><c> have</c><00:39:41.680><c> some</c><00:39:42.249><c> time</c><00:39:42.279><c> for</c><00:39:42.670><c> questions</c>

00:39:42.839 --> 00:39:42.849 align:start position:0%
I think we have some time for questions
 

00:39:42.849 --> 00:39:49.079 align:start position:0%
I think we have some time for questions
and<00:39:43.269><c> if</c><00:39:44.079><c> not</c><00:39:44.289><c> we</c><00:39:44.819><c> we</c><00:39:45.819><c> have</c><00:39:47.670><c> office</c><00:39:48.670><c> hours</c><00:39:48.789><c> at</c>

00:39:49.079 --> 00:39:49.089 align:start position:0%
and if not we we have office hours at
 

00:39:49.089 --> 00:39:51.809 align:start position:0%
and if not we we have office hours at
3:30<00:39:49.839><c> today</c><00:39:50.079><c> so</c><00:39:50.710><c> hopefully</c><00:39:51.369><c> you</c><00:39:51.430><c> see</c><00:39:51.519><c> that</c>

00:39:51.809 --> 00:39:51.819 align:start position:0%
3:30 today so hopefully you see that
 

00:39:51.819 --> 00:39:52.740 align:start position:0%
3:30 today so hopefully you see that
thank<00:39:52.329><c> you</c>

00:39:52.740 --> 00:39:52.750 align:start position:0%
thank you
 

00:39:52.750 --> 00:39:56.270 align:start position:0%
thank you
[Applause]

00:39:56.270 --> 00:39:56.280 align:start position:0%
[Applause]
 

00:39:56.280 --> 00:40:10.209 align:start position:0%
[Applause]
[Music]

