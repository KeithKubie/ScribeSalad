WEBVTT
Kind: captions
Language: en

00:00:10.825 --> 00:00:13.924
Welcome to our project
Google Developers Hackademy,

00:00:13.924 --> 00:00:17.561
where Spanish-speaking experts
from Latin America

00:00:17.561 --> 00:00:19.990
will show you some
of our tools,

00:00:19.990 --> 00:00:23.429
developer products,
APIs and new tricks.

00:00:23.528 --> 00:00:25.891
This course is divided
into five parts.

00:00:25.891 --> 00:00:28.132
We invite you to watch it
and learn along.

00:00:28.132 --> 00:00:29.429
Here we go.

00:00:37.363 --> 00:00:39.924
Hi. Welcome back to the
HTML web development

00:00:39.924 --> 00:00:42.792
with Google Drive
introduction course.

00:00:42.792 --> 00:00:44.594
I'm Cesar Anton Dorantes,

00:00:44.594 --> 00:00:47.990
Google Developer Expert
for the Google Drive platform.

00:00:47.990 --> 00:00:49.396
In the previous lesson

00:00:49.396 --> 00:00:52.165
we learned how to develop
an HTML5 app

00:00:52.165 --> 00:00:55.132
hosted in Google Drive,
capable of converting data

00:00:55.132 --> 00:00:57.231
into charts using Google Charts.

00:00:57.231 --> 00:00:59.825
In this lesson we'll see
the following subjects:

00:00:59.825 --> 00:01:01.957
Introduction to
Google Spreadsheets;

00:01:01.957 --> 00:01:04.825
Connecting your app
with Google Spreadsheets;

00:01:04.825 --> 00:01:09.099
and finally, a practice where
we connect your HTML5 app

00:01:09.099 --> 00:01:10.924
with Google's cloud.

00:01:10.924 --> 00:01:13.363
Are you ready? Let's go!

00:01:13.990 --> 00:01:16.660
INTRODUCTION TO
GOOGLE SPREADSHEETS

00:01:17.231 --> 00:01:20.231
Google Spreadsheets
is a spreadsheet app

00:01:20.231 --> 00:01:22.330
based on Google's cloud
that presents

00:01:22.330 --> 00:01:25.033
several important features
that sets it apart

00:01:25.033 --> 00:01:27.132
from other spreadsheet software,

00:01:27.132 --> 00:01:29.528
starting with the fact
that no additional software

00:01:29.528 --> 00:01:32.891
needs to be installed
to be able to start working,

00:01:32.891 --> 00:01:36.627
since Google Spreadsheets runs
straight on your browser.

00:01:37.165 --> 00:01:39.198
Another important feature

00:01:39.198 --> 00:01:41.462
is that your file is saved
in real time,

00:01:41.462 --> 00:01:45.033
therefore there's no need to be
saving all the time anymore.

00:01:45.033 --> 00:01:46.726
It also saves a history

00:01:46.726 --> 00:01:49.132
of the changes performed
to a document,

00:01:49.132 --> 00:01:52.759
including time, date and user
that performed the changes.

00:01:53.033 --> 00:01:55.561
Google Spreadsheets
boasts of Google Docs'

00:01:55.561 --> 00:01:58.330
characteristic
collaboration tools,

00:01:58.330 --> 00:02:01.198
so up to 10 users can work
at the same time

00:02:01.198 --> 00:02:02.891
and on the same document,

00:02:02.891 --> 00:02:06.099
and they all can see what
the rest are doing in real time.

00:02:06.099 --> 00:02:09.132
It even lets you open
a chat window on the right

00:02:09.132 --> 00:02:12.033
when several people
are connected simultaneously.

00:02:12.033 --> 00:02:15.726
This allows for a much more
efficient and dynamic work flow.

00:02:15.990 --> 00:02:19.099
Not only Google Spreadsheets
offers the typical functions

00:02:19.099 --> 00:02:21.627
you expect from
a spreadsheet app,

00:02:21.627 --> 00:02:24.924
but it also goes beyond
and allows developers

00:02:24.924 --> 00:02:28.330
to use those spreadsheets
as databases in the Cloud.

00:02:28.330 --> 00:02:31.759
But that's not all, they
stand out from other databases

00:02:31.759 --> 00:02:34.561
because the data is easily
visible y editable

00:02:34.561 --> 00:02:35.924
at any moment,

00:02:35.924 --> 00:02:38.858
even by inexperienced people
on programming

00:02:38.858 --> 00:02:41.891
or on databases, which
turns out to be very useful

00:02:41.891 --> 00:02:45.231
for companies, since they
don't need to train people

00:02:45.231 --> 00:02:49.099
on how to access and edit
the data in the system.

00:02:49.099 --> 00:02:51.759
All this considered,
Google Spreadsheets is,

00:02:51.759 --> 00:02:55.759
by far, the friendliest
database format until now.

00:02:57.165 --> 00:03:01.627
You must be wondering
what its storage limits are,

00:03:01.627 --> 00:03:04.792
and it's actually very important
to have that in mind

00:03:04.792 --> 00:03:08.660
when a database based on this
system is being implemented.

00:03:08.660 --> 00:03:11.660
Google Spreadsheets' latest
version allows you to store

00:03:11.660 --> 00:03:14.561
up to 10 million cells
per document,

00:03:14.561 --> 00:03:17.858
with a maximum 256 columns
in each sheet.

00:03:17.858 --> 00:03:21.264
The platform lets you use
up 40 thousand cells

00:03:21.264 --> 00:03:23.924
with formulas to calculate
its contents,

00:03:23.924 --> 00:03:27.627
and 50 cells importing their
data from external sources.

00:03:27.627 --> 00:03:30.462
In case you exceed
any of these limits,

00:03:30.462 --> 00:03:32.660
your sheet will stop
taking in new data,

00:03:32.660 --> 00:03:35.297
to avoid the loss of them.

00:03:35.297 --> 00:03:37.858
It's worth noting that if
a sheet is too big,

00:03:37.858 --> 00:03:40.363
it could show a lower
performance than expected,

00:03:40.363 --> 00:03:42.990
so it's not recommended
to use them as databases

00:03:42.990 --> 00:03:45.264
for big volumes of information.

00:03:45.264 --> 00:03:48.033
If your project requires
a broader database,

00:03:48.033 --> 00:03:51.693
I recommend you try some
of Google's other databases,

00:03:51.693 --> 00:03:54.264
like Script DB or DataStore.

00:03:54.924 --> 00:03:58.462
Remember you always have
the highly advisable option

00:03:58.462 --> 00:04:00.990
of doing programmatic backups
for your databases

00:04:00.990 --> 00:04:02.792
on a Google Spreadsheet.

00:04:02.792 --> 00:04:05.462
This is possible by using
Google App Script,

00:04:05.462 --> 00:04:07.924
which includes an extensive
function library

00:04:07.924 --> 00:04:10.957
specially designed to work
with Spreadsheets,

00:04:10.957 --> 00:04:13.693
as well as several methods
to import

00:04:13.693 --> 00:04:15.726
your external data sources.

00:04:15.726 --> 00:04:19.165
CONNECTING YOUR APP
WITH GOOGLE SPREADSHEETS

00:04:19.726 --> 00:04:22.693
An interesting feature
for developers

00:04:22.693 --> 00:04:26.165
is that Spreadsheets lets us
publish the spreadsheets

00:04:26.165 --> 00:04:29.165
on the Internet transformed
into different formats,

00:04:29.165 --> 00:04:31.363
which allows us to choose
the one that bets adapts

00:04:31.363 --> 00:04:33.033
to our needs.

00:04:33.033 --> 00:04:35.957
The supported formats now
are web page,

00:04:35.957 --> 00:04:38.891
HTML code to insert in a page,

00:04:38.891 --> 00:04:40.792
comma-separated values,

00:04:40.792 --> 00:04:43.363
.txt, PDF, Atom,

00:04:43.363 --> 00:04:45.627
RSS, Microsoft Excel

00:04:45.627 --> 00:04:48.198
and Open Document
spreadsheets.

00:04:48.198 --> 00:04:50.528
Now that you know
the options to publish

00:04:50.528 --> 00:04:54.231
a Spreadsheet, it's time to put
your knowledge to the test.

00:04:54.231 --> 00:04:57.924
For that we'll use the app
we created in lesson 2,

00:04:57.924 --> 00:05:00.924
but we'll replace the part
in which we manually declared

00:05:00.924 --> 00:05:04.066
the data with a method
that allows us to import them

00:05:04.066 --> 00:05:05.858
from Google Spreadsheets.

00:05:05.858 --> 00:05:08.924
You will be surprised
with how easy it is to do it.

00:05:08.924 --> 00:05:11.792
First we need to create
a new Spreadsheet,

00:05:11.792 --> 00:05:14.099
which we use to save
the information

00:05:14.099 --> 00:05:16.132
we're going to pass to our app.

00:05:16.132 --> 00:05:18.891
You can do it from
Google Drive's web app

00:05:18.891 --> 00:05:22.594
by clicking on "Create" and
then choosing "spreadsheet."

00:05:22.957 --> 00:05:26.033
You can also create it
by entering

00:05:26.033 --> 00:05:29.462
docs.google.com/spreadsheet.

00:05:29.726 --> 00:05:32.462
In order to use a Spreadsheet
as a database

00:05:32.462 --> 00:05:34.429
you need to publish it first.

00:05:34.429 --> 00:05:38.462
For this, go to File menu
and pick "Publish on the Web."

00:05:38.462 --> 00:05:41.396
This will lead you to the
publishing on the Web options.

00:05:41.396 --> 00:05:44.726
The first thing to do is click
on "Start publishing,"

00:05:44.726 --> 00:05:47.990
then just copy the address
that shows up

00:05:47.990 --> 00:05:51.924
down on the "Obtaining a link
to published data" section.

00:05:51.924 --> 00:05:54.066
The information obtained
by this mean

00:05:54.066 --> 00:05:56.693
is updated approximately
every 5 minutes.

00:05:56.693 --> 00:05:59.924
Should you need
updated-by-the-second data,

00:05:59.924 --> 00:06:03.264
you'll need to create a Google
App Script JSONP servlet.

00:06:03.264 --> 00:06:06.462
I invite you to Google
on how to create these backends

00:06:06.462 --> 00:06:07.891
for your web apps.

00:06:07.891 --> 00:06:09.627
For this lesson's example,

00:06:09.627 --> 00:06:12.693
feel free to use the address
that is shown onscreen,

00:06:12.693 --> 00:06:16.165
which contains the chart
I'm using for the example.

00:06:16.165 --> 00:06:19.330
Notice that if you open it
straight with your browser,

00:06:19.330 --> 00:06:22.495
you'll see a representation
of the chart data.

00:06:22.495 --> 00:06:26.429
If you want to see the example
chart from Spreadsheets,

00:06:26.429 --> 00:06:29.858
use the address that is
now being shown onscreen.

00:06:30.132 --> 00:06:32.330
It is now time
to start programming.

00:06:32.330 --> 00:06:34.957
I recommend you use the code
we built in lesson 2

00:06:34.957 --> 00:06:37.726
and just apply the changes
on JavaScript.

00:06:37.726 --> 00:06:41.165
Remember that code-recycling
is a highly recommended practice

00:06:41.165 --> 00:06:44.297
and Visualization API
is designed so your code

00:06:44.297 --> 00:06:46.198
is easily recyclable.

00:06:46.198 --> 00:06:48.462
Since the change
we're going to apply

00:06:48.462 --> 00:06:50.957
will only be on our app's logic,

00:06:50.957 --> 00:06:53.165
we just need to modify
a few lines

00:06:53.165 --> 00:06:55.231
in the file charts.js

00:06:55.231 --> 00:06:57.165
we built in last lesson.

00:06:57.165 --> 00:07:00.660
We first create a new function
called handleQueryResponse,

00:07:00.660 --> 00:07:03.495
to which we'll assign
the argument (response.)

00:07:03.495 --> 00:07:05.792
Remember arguments
are for importing

00:07:05.792 --> 00:07:09.099
external data to our function
when we're calling it.

00:07:09.099 --> 00:07:12.759
Let's now pass all the contents
of function drawVisualization

00:07:12.759 --> 00:07:15.825
to our new function,
handleQueryResponse.

00:07:15.825 --> 00:07:19.264
In drawVisualization,
let's add a variable called

00:07:19.264 --> 00:07:21.990
"query," which
we'll use to import

00:07:21.990 --> 00:07:24.132
and store our external data.

00:07:24.132 --> 00:07:26.726
In order to do so, you just need
to use the command

00:07:26.726 --> 00:07:29.957
new google.visualization.Query

00:07:29.957 --> 00:07:33.033
and put in the parenthesis
the address published

00:07:33.033 --> 00:07:35.990
for the Spreadsheet, whose data
we want to import.

00:07:35.990 --> 00:07:39.528
Now, let's pass the data
we imported from query

00:07:39.528 --> 00:07:42.297
to our function
handleQueryResponse.

00:07:42.297 --> 00:07:45.627
Nailing this is as easy
as putting the variable's name,

00:07:45.627 --> 00:07:48.693
in this case, query, followed
by the command "send"

00:07:48.693 --> 00:07:51.924
and between parenthesis,
the function to which

00:07:51.924 --> 00:07:54.099
we'll pass the data,
in this case,

00:07:54.099 --> 00:07:56.033
handleQueryResponse.

00:07:56.033 --> 00:07:58.891
Time to delete the data
we manually declared

00:07:58.891 --> 00:08:01.792
in last lesson and to replace
them with the dynamic data

00:08:01.792 --> 00:08:03.561
we just programmed.

00:08:03.561 --> 00:08:07.264
For this, we'll delete
everything in the variable data

00:08:07.627 --> 00:08:10.660
and we will put instead
the argument response

00:08:10.660 --> 00:08:13.660
and we will add the method
getDataTable.

00:08:13.891 --> 00:08:17.099
Although our app
is ready to run,

00:08:17.099 --> 00:08:20.033
every time we call data
from an external source,

00:08:20.033 --> 00:08:22.495
it is advisable to add a method
that sounds an alarm

00:08:22.495 --> 00:08:24.396
in case something goes wrong.

00:08:24.396 --> 00:08:27.462
To do so, in the beginning
of the function

00:08:27.462 --> 00:08:30.891
handleQueryResponse we add
a simple "if" that triggers

00:08:30.891 --> 00:08:33.858
in case there is an error
and to alerts the user

00:08:33.858 --> 00:08:36.594
by using window. alert.

00:08:36.594 --> 00:08:40.759
That's it. Our app can now
receive data in real time

00:08:40.759 --> 00:08:42.924
from a Google Spreadsheet.

00:08:42.924 --> 00:08:44.825
It was quite easy, wasn't it?

00:08:45.693 --> 00:08:49.033
PRACTICE: CONNECTING YOUR APP
WITH GOOGLE'S CLOUD

00:08:49.033 --> 00:08:51.462
I invite you to watch
this lesson again,

00:08:51.462 --> 00:08:53.660
this time pausing it
to follow the steps

00:08:53.660 --> 00:08:55.627
and copy the code
that is shown.

00:08:55.627 --> 00:08:57.924
For a comparison, you can see
an already built example

00:08:57.924 --> 00:08:59.660
by entering to:

00:09:03.429 --> 00:09:06.264
Once your app works correctly,

00:09:06.264 --> 00:09:09.924
I suggest you make a Spreadsheet
with your personal info

00:09:09.924 --> 00:09:12.099
about how you usually
distribute your day

00:09:12.099 --> 00:09:13.858
and connect it to your app.

00:09:13.858 --> 00:09:16.231
If you wish to share
your new baby with the world,

00:09:16.231 --> 00:09:18.891
I invite you to post
its address on Twitter

00:09:18.891 --> 00:09:21.528
next to the hash tag
Hackademy Drive.

00:09:22.297 --> 00:09:24.528
This will be it for now.

00:09:24.528 --> 00:09:26.264
See you next time with:

00:09:26.264 --> 00:09:29.891
"Using the G+ Login button
for HTML5 sites and apps,"

00:09:29.891 --> 00:09:32.561
when we'll learn
how to make our app

00:09:32.561 --> 00:09:34.627
show the login button
when a user

00:09:34.627 --> 00:09:36.990
hasn't signed in
with his Google account.

00:09:36.990 --> 00:09:39.198
I say goodbye for now
but remember:

00:09:39.198 --> 00:09:40.726
keep on programming!

