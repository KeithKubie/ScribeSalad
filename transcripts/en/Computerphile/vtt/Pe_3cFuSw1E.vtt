WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:03.510
We've done a few videos on passwords cracking passwords choosing good passwords

00:00:04.060 --> 00:00:09.630
and I've had had a few requests both by email, and you know Twitter and on in the comments about a

00:00:10.540 --> 00:00:12.519
choosing a password mechanism called

00:00:12.519 --> 00:00:18.329
Dice where so I thought we'd look at this and think what's the pros and cons of this of this quite interesting system for choosing

00:00:18.400 --> 00:00:23.580
Passwords so here's my nice unbiased casino dice that I got just for this occasion

00:00:23.580 --> 00:00:27.750
I was quite excited apparently this-
 this dice is not biased towards rolling a six

00:00:27.750 --> 00:00:30.479
Which actually would just mean my performance in games goes down.

00:00:33.160 --> 00:00:41.520
When we spoke about passwords last time my hypothetical password mechanism was something like four random words with a bit of

00:00:41.580 --> 00:00:45.440
Symbolic symbols added in maybe randomly in the middle of a word now

00:00:45.450 --> 00:00:51.869
I chose that because I felt it was a a nice compromise between having to type something in that's really, really long or

00:00:52.180 --> 00:00:54.569
And having something that's not too hard to remember

00:00:54.579 --> 00:00:59.459
But also quite hard to break. Now diceware is in some sense quite similar to this scheme

00:00:59.649 --> 00:01:05.249
But it's perhaps more mathematically defined exactly how hard it is to break. Which is why people like it?

00:01:05.830 --> 00:01:10.169
Because I think the question comes down to in my scheme if I pick four random words

00:01:10.869 --> 00:01:15.089
How random are Bo's worse truly if an attacker wanted to brute forth my password?

00:01:15.250 --> 00:01:19.199
Then and they know for example that I'm using four words appended together

00:01:19.509 --> 00:01:23.999
Then what they're going to want to do is try and work out the list of all the words

00:01:24.000 --> 00:01:29.669
I might have used. Now, I try and throw them off a bit by using slightly odd words, but I'm a bit weird but

00:01:30.369 --> 00:01:32.819
For the majority people let's imagine that everyone in the country

00:01:33.070 --> 00:01:38.519
where everyone in the world is using this password scheme lots of people are going to pick really easy words you know back to the

00:01:38.520 --> 00:01:40.390
correct horse battery staple thing

00:01:40.390 --> 00:01:44.040
Xkcd alluded to this and we'll talk about that in a minute, but didn't necessarily answer every question

00:01:44.040 --> 00:01:47.309
but it did get a good message across the entropy or the

00:01:47.530 --> 00:01:52.890
Number of possible words that you've chosen is gonna differ from person to person right if one of my words

00:01:52.890 --> 00:01:57.419
I pick is database is that because I've picked that right out at random

00:01:57.420 --> 00:02:02.219
Or is it because it says "databases" on this book up here, and I accidentally saw it in the corner of my eye

00:02:02.369 --> 00:02:04.369
Don't pan to the bit with no books on it

00:02:04.570 --> 00:02:07.769
Yeah, I'm just looking at your collection of cubes 
-All solved!

00:02:07.770 --> 00:02:14.110
That's how I roll, so what dice where does the website was established in 1995 by a guy called Weinhold from the United States

00:02:14.470 --> 00:02:16.990
What it is is a way of using dice to ensure that

00:02:17.060 --> 00:02:23.230
The words you're picking are actually random rather than just what you think is random and that way we have a very nicely defined

00:02:23.900 --> 00:02:26.859
Should we say mathematical difficulty for group forcing that password?

00:02:27.380 --> 00:02:33.249
So this is the diceware list, but I guess it's a kind of compromise between the number of dice

00:02:33.250 --> 00:02:37.150
You just have to roll incessantly to come up with passwords and being fairly quick

00:02:38.000 --> 00:02:40.000
but there are

00:02:40.820 --> 00:02:41.980
7776

00:02:41.990 --> 00:02:48.070
Words on this which is all the different combinations of five dice rolls, right? Now

00:02:48.070 --> 00:02:49.780
So that's why I've got my nice unbiased dice

00:02:49.780 --> 00:02:55.360
We don't wanna be accidentally biasing me towards the end of this document for example so as an example we roll the dice

00:02:55.850 --> 00:03:00.790
It's a five. Each of these has five numbers from one to six in front of the word

00:03:00.790 --> 00:03:05.019
Which tells you which words are going to pick. So these are the fours, I'm on to the five, says

00:03:05.020 --> 00:03:07.329
There's the start of the fives there, then roll the dice again

00:03:07.640 --> 00:03:12.640
It's a six, so I'm now on to the five-sixes which is here and then again

00:03:13.310 --> 00:03:15.310
five six four

00:03:15.350 --> 00:03:16.820
five

00:03:16.820 --> 00:03:21.040
One five six four five one is the word

00:03:22.220 --> 00:03:23.450
tapir

00:03:23.450 --> 00:03:28.479
Whereas in the animal with the snout so that's the first word of my password so let me write that down

00:03:28.730 --> 00:03:34.779
This could take a little while this is where you need to use all of your video editing skills tapir right. Let's do this again

00:03:35.990 --> 00:03:37.550
Okay

00:03:37.550 --> 00:03:40.899
1 3 2 1 3

00:03:41.690 --> 00:03:48.490
If you've done this a lot of times, maybe it'd be faster 1 3 2 1 3 there. We are back up nice

00:03:49.790 --> 00:03:53.409
5 1 3 3

00:03:55.970 --> 00:03:59.740
What is it 1 5 1 3 3 1

00:04:00.860 --> 00:04:05.950
How many times have you got to do this? Good question. "Rand", interesting. "R-A-N-D"

00:04:07.280 --> 00:04:13.059
Ah, South African currency? Yeah, and also short for random, which is what we're doing now

00:04:15.110 --> 00:04:21.910
5 2 4 6 2 RW interesting read/write, yeah, so not all of these are full words

00:04:21.910 --> 00:04:24.219
That's one of the thing that's quite about this 3

00:04:24.919 --> 00:04:28.538
6 having been in 2 3 exciting three six four

00:04:29.180 --> 00:04:30.469
two

00:04:30.469 --> 00:04:32.150
two

00:04:32.150 --> 00:04:33.919
three six

00:04:33.919 --> 00:04:35.919
four two two

00:04:37.490 --> 00:04:42.669
They're guaranteed to be unbiased I think but then I got them cheaply off the internet, so I don't actually know

00:04:43.759 --> 00:04:49.329
Okay, so let's let's stop. Let's stop there. I've done. I've got five words right now. Is this pasta really good

00:04:49.330 --> 00:04:50.169
Well the first thing to notice

00:04:50.169 --> 00:04:54.248
But what you don't want to do when you're picking a password is record it on video and show it on the internet

00:04:54.349 --> 00:04:57.009
So I probably won't put this as my actual password

00:04:58.460 --> 00:05:00.699
But there will be a few people that try nonetheless.

00:05:00.699 --> 00:05:07.119
We've rolled the dice five times per word, we find the word and then we put spaces in between it and that's our passphrase, right?

00:05:07.120 --> 00:05:10.000
So that is literally our password then for whatever purpose we want.

00:05:11.599 --> 00:05:17.169
Why is this better than what I was doing? W ell, it's different, mostly. There's a few questions

00:05:17.169 --> 00:05:20.619
we've got, right? The first is "But is this a reasonable password in terms of strength?"

00:05:20.620 --> 00:05:24.370
Also, "How practical is it to type in?" right" It took a little while to generate

00:05:24.409 --> 00:05:29.588
But if you're doing it a couple of times for the front end of a password manager, maybe that's not such a big deal

00:05:31.339 --> 00:05:36.459
One thing that's worth noting is that this isn't all the words in the English language. This is this is a carefully chosen

00:05:38.300 --> 00:05:43.479
7700 words, but a knife is short so most of the words are fewer than five characters

00:05:43.520 --> 00:05:49.479
There's a few really short ones the idea being that even if you've got a five word or six word passphrase

00:05:49.479 --> 00:05:52.479
It's never going to get that long you should get quite quickly typing it in

00:05:53.389 --> 00:05:59.468
but the real benefit of this system is that these are actually random as opposed to what I've perceived to be random because

00:05:59.750 --> 00:06:01.839
I thought of a word in my head

00:06:02.120 --> 00:06:06.909
Which might have been a word that I happen to see on the side of a bus this morning in the previous videos we talked

00:06:06.909 --> 00:06:12.669
about brute forcing about not you knowing what any of the characters were and how we make it easier for the attacker by using a

00:06:12.669 --> 00:06:17.318
Dictionary of known words yeah, so this is literally providing dictionary right yeah

00:06:17.319 --> 00:06:22.989
That's the drawback in some sense and the strength so we know exactly what words could appear in my passphrase

00:06:22.990 --> 00:06:28.839
But even so we still can't break it because I've used too many of them so in some password schemes like

00:06:28.909 --> 00:06:32.199
Ones where I pick words at random from a dictionary in my own brain

00:06:33.529 --> 00:06:37.859
I'm working under the assumption, but that's secure because no else knows how it works

00:06:38.260 --> 00:06:43.800
No one can reverse-engineer that process. That might be true, it might not be true. It depends how well you know me.

00:06:44.470 --> 00:06:49.320
This, the process is extremely open everyone knows what the password list was

00:06:49.660 --> 00:06:51.810
Everyone knows what my password is going to be like

00:06:51.850 --> 00:06:55.439
But they still can't break it because it's 2 to the 64 operations

00:06:55.660 --> 00:07:01.950
Which is too much what we don't want is security through obscurity right if I use it if I only use a 500 word dictionary

00:07:02.770 --> 00:07:08.849
Right, that's fine as long as I keep that dictionary secret if I doesn't seem like a very good idea because then that dictionary might

00:07:08.920 --> 00:07:12.720
Accidentally come out, and then it would be incredibly easy to break my password

00:07:12.720 --> 00:07:17.399
So what is the strength of his password well each of these words has come from?

00:07:19.660 --> 00:07:26.400
7776 right so we can assume that the attacker knows, but I'm using this password scheme, so they know my password is five words

00:07:26.920 --> 00:07:30.150
separated by spaces which adds nothing because they know what the spaces are

00:07:31.330 --> 00:07:33.330
out of a possible

00:07:34.180 --> 00:07:39.299
7776 so the strength of this password is actually 7 7 7 6

00:07:39.610 --> 00:07:43.020
To the 5 so another way of looking at it isn't how many bits of entropy?

00:07:43.120 --> 00:07:45.060
Does this password have but a lot of the time?

00:07:45.060 --> 00:07:50.850
That's how we view passwords each of these words is 12 point 9 bits so 12 point 9

00:07:51.310 --> 00:07:53.520
times by 5 words is

00:07:54.160 --> 00:07:59.700
64 point 5 bits which is pretty good actually that means that on average an attacker is going to have to do

00:08:00.280 --> 00:08:06.329
about 2 - 63 - - just under 64 operations to guess your password in brute-force

00:08:06.420 --> 00:08:09.030
That's quite a lot of operations particularly given

00:08:09.130 --> 00:08:13.530
They're going to have to perform some hash to do this. The nice thing about this password scheme is

00:08:13.960 --> 00:08:17.849
we know exactly how secure it is, right? As opposed to we're guessing that

00:08:18.370 --> 00:08:23.840
the words aren't just words I know and someone can social engineer those words

00:08:23.840 --> 00:08:25.740
and also if we want it to be more secure we can just add another word

00:08:25.740 --> 00:08:28.169
Or another word as computational power goes up

00:08:28.170 --> 00:08:31.349
We just add more words and we can probably remember a few words

00:08:31.350 --> 00:08:36.780
Or if they get really long write them down and put it in our wallet. Don't lose it. I'm guessing as well

00:08:36.780 --> 00:08:39.389
You could potentially vary the whole spaces thing right?

00:08:39.460 --> 00:08:43.259
Yeah, so the space - the spaces thing is not hugely important the reason

00:08:43.260 --> 00:08:47.849
it's there is because sometimes you might accidentally join two words together and them

00:08:48.270 --> 00:08:53.340
Actually be a different word on here in which case your search has gone down to four words, right? Ao if you're being careful

00:08:53.620 --> 00:08:57.450
That these are all actually different words, and they don't concatenate to make another word

00:08:57.450 --> 00:09:00.629
You don't need the spaces or you could use a different character

00:09:01.180 --> 00:09:04.680
You could also do what I did and use fewer words and

00:09:05.200 --> 00:09:09.210
Put a random character in, right? Now on the website

00:09:09.490 --> 00:09:13.680
He has plenty of ways of loading dice and also choosing random characters because again

00:09:14.380 --> 00:09:15.820
when I pick a symbol

00:09:15.820 --> 00:09:16.740
It's often

00:09:16.740 --> 00:09:18.780
You know a star or an ampersand or an underscore

00:09:18.880 --> 00:09:23.429
Those aren't all the characters that exist so it's a really interesting twist on picking passwords

00:09:24.160 --> 00:09:26.790
This came about you know a few years ago now

00:09:27.400 --> 00:09:33.179
where maybe a fork out a four word password was reasonable now in some sense you can't imagine that

00:09:33.430 --> 00:09:39.660
Seven or eight or nine word passwords are that feasible for the majority of users that there has to be some usability

00:09:40.960 --> 00:09:43.259
Considerations, but on the other hand five's not too bad

00:09:43.780 --> 00:09:45.869
Or as I say four

00:09:45.880 --> 00:09:52.650
But they make an unexpected alteration like an adding of a random symbol at a random position not between the words and that will

00:09:52.900 --> 00:09:58.559
Significantly increase the amount of time it would take to break. You can get too carried away like with passive security

00:09:58.560 --> 00:10:04.410
I have, and so half the time I can't login because I get my password wrong and so I've been - but

00:10:05.680 --> 00:10:07.680
The thing you also you have to remember is that

00:10:09.340 --> 00:10:11.550
This is way beyond a normal

00:10:12.100 --> 00:10:16.739
Brute-force attack by someone who's just happens to have found your password hash on pastebin, right?

00:10:16.740 --> 00:10:23.010
This is when we when we're talking about five or six word passwords where we're talking about nation state level

00:10:23.260 --> 00:10:26.670
And you've got to really wonder whether they really care about your individual password

00:10:26.670 --> 00:10:31.319
You might still want to secure it against them anyway. That's that's for you to decide but

00:10:32.980 --> 00:10:35.009
They may just visit you instead

00:10:38.450 --> 00:10:40.730
We'll put a link to the website in the description as well

00:10:40.740 --> 00:10:46.130
So you can have a look through. He's considered almost every possible angle for this so when do you add symbols

00:10:46.500 --> 00:10:50.359
How many words is enough for the level of security you want? It's a really good interesting

00:10:51.030 --> 00:10:53.030
Look into password security

00:10:53.400 --> 00:10:55.400
So I recommend you have a look

