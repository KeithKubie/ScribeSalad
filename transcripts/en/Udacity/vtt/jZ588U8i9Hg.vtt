WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.000
Through this course, we looked at a number of different algorithms that we were trying to solve

00:00:05.000 --> 00:00:10.000
and for each of them, we worked out what their running time was so for finding the connectivity

00:00:10.000 --> 00:00:13.000
between two nodes in an undirected, unweighted graph, the running time

00:00:13.000 --> 00:00:16.000
is the number of nodes plus the number of edges.

00:00:16.000 --> 00:00:20.000
Finding the shortest path in a weighted, undirected connected graph

00:00:20.000 --> 00:00:23.000
took time m times the logarithm of n.

00:00:23.000 --> 00:00:27.000
Removing the minimum value of a heap is log n.

00:00:27.000 --> 00:00:32.000
For the problem of finding the shortest path between all pairs of nodes in a weighted graph

00:00:32.000 --> 00:00:35.000
is taking nç¶š times of at one of the algorithms.

00:00:35.000 --> 00:00:39.000
Okay, so you have a sense that these are considered to be pretty good algorithms.

00:00:39.000 --> 00:00:44.000
In fact, there's some cases very good algorithms and you see that they're all polynomially bounded,

00:00:44.000 --> 00:00:50.000
so there's some polynomial in n and m that actually is larger asymptotically than all of these.

00:00:50.000 --> 00:00:54.000
And by large the algorithms for which--that we can actually solve in a reasonable amount of time,

00:00:54.000 --> 00:00:57.000
all seem to be in this category of having a polynomial bound.

00:00:57.000 --> 00:01:03.000
And that is lead theoreticians at least to find efficient in one particular way sometimes

00:01:03.000 --> 00:01:08.000
and that is that an algorithm is efficient if it has a polynomial bound on its running time.

00:01:08.000 --> 00:01:13.000
And a problem can be efficiently solved obviously if it has an efficient algorithm--

00:01:13.000 --> 00:01:18.000
that's a reasonable question to ask--well, do our problems have efficient algorithms.

