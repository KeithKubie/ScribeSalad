WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.402
[MUSIC PLAYING]

00:00:06.330 --> 00:00:08.290
VENKAT RAPAKA:
Welcome, everyone.

00:00:08.290 --> 00:00:09.410
I'm Venkat Rapaka.

00:00:09.410 --> 00:00:12.851
I lead the Android IoT
platform team at Google.

00:00:12.851 --> 00:00:14.350
So being a part of
the Android team,

00:00:14.350 --> 00:00:16.360
this is one of my favorite
times of the year.

00:00:16.360 --> 00:00:18.151
You get to come to I/O.
You get to interact

00:00:18.151 --> 00:00:19.870
with a lot of
developer community.

00:00:19.870 --> 00:00:21.550
A number of our
partners also attend,

00:00:21.550 --> 00:00:23.200
so we get to meet all of them.

00:00:23.200 --> 00:00:25.635
But this year is
especially exciting for me

00:00:25.635 --> 00:00:27.010
because this is
the first time we

00:00:27.010 --> 00:00:29.410
get to talk at I/O
about Android Things,

00:00:29.410 --> 00:00:32.619
and how we want to bring device
production capabilities to more

00:00:32.619 --> 00:00:34.940
people.

00:00:34.940 --> 00:00:37.450
So you probably heard
earlier today at the keynote

00:00:37.450 --> 00:00:40.150
that Sundar kicked
off, Android now

00:00:40.150 --> 00:00:42.820
has incredible momentum
across a number of verticals

00:00:42.820 --> 00:00:44.400
that you see up here.

00:00:44.400 --> 00:00:46.250
There are now two
billion devices,

00:00:46.250 --> 00:00:48.730
two billion monthly
active devices

00:00:48.730 --> 00:00:53.040
that run Android across
these four form factors.

00:00:53.040 --> 00:00:56.030
And joining this family
is now Android Things.

00:00:56.030 --> 00:00:58.680
And Android Things is
designed to extend Android

00:00:58.680 --> 00:01:00.680
beyond these four verticals--

00:01:00.680 --> 00:01:02.900
mobile, web, TV, and auto--

00:01:02.900 --> 00:01:04.920
to a lot more exciting
new product categories

00:01:04.920 --> 00:01:06.495
within the space of IoT.

00:01:06.495 --> 00:01:08.760
And for us at Google,
this is a pretty--

00:01:08.760 --> 00:01:11.070
it's a very interesting
area for us,

00:01:11.070 --> 00:01:13.780
with all the innovation
that's happening now.

00:01:13.780 --> 00:01:17.550
And we also see that there's
an opportunity and a real need

00:01:17.550 --> 00:01:20.460
to enable developers to build
high-quality, secure devices

00:01:20.460 --> 00:01:22.020
quickly and easily.

00:01:22.020 --> 00:01:24.330
And finally, I think there's
an opportunity for us

00:01:24.330 --> 00:01:26.640
to democratize IoT
device development,

00:01:26.640 --> 00:01:29.750
and make it more
accessible to more people.

00:01:29.750 --> 00:01:32.370
And Android Things
was created last year

00:01:32.370 --> 00:01:35.850
as an acknowledgement of this
potential that's ahead of us.

00:01:35.850 --> 00:01:38.670
So Android Things released in
Developer Preview in December

00:01:38.670 --> 00:01:41.370
last year, and it's been great
to see the excitement so far,

00:01:41.370 --> 00:01:44.294
and the momentum
that we've built up.

00:01:44.294 --> 00:01:45.960
And in fact, we
announced at the keynote

00:01:45.960 --> 00:01:49.560
this morning that already in
just five months up to now,

00:01:49.560 --> 00:01:50.940
there are thousands
of developers

00:01:50.940 --> 00:01:53.130
in more than 60 countries
who are actively

00:01:53.130 --> 00:01:54.630
trying out Android Things.

00:01:54.630 --> 00:01:57.240
So thank you very much for
investing your time and all

00:01:57.240 --> 00:02:00.520
the feedback you've given us.

00:02:00.520 --> 00:02:03.850
So IoT, of course, is very
broad and very diverse.

00:02:03.850 --> 00:02:05.920
Within this large
space, Android Things

00:02:05.920 --> 00:02:08.979
has targeted one of the most
exciting-- at least for us,

00:02:08.979 --> 00:02:11.890
one of the most exciting
areas, powerful devices

00:02:11.890 --> 00:02:15.490
that sit at the edge and that
bring on-device intelligence.

00:02:15.490 --> 00:02:18.230
And these devices can many
use cases, both old and new.

00:02:18.230 --> 00:02:20.470
And you can see examples
up on the screen.

00:02:20.470 --> 00:02:23.260
At the home, think of
security systems, routers.

00:02:23.260 --> 00:02:26.320
They've been around for as long
as most of us can remember,

00:02:26.320 --> 00:02:29.710
but also new, interesting device
types like smart doorbells

00:02:29.710 --> 00:02:32.110
that have cameras
built into them.

00:02:32.110 --> 00:02:35.500
In retail, increasingly you'll
see point-of-sale machines,

00:02:35.500 --> 00:02:37.810
vending machines
that have displays,

00:02:37.810 --> 00:02:41.140
and that can interact with
the customer's mobile device

00:02:41.140 --> 00:02:44.770
at the point of sale and do
some very interesting things.

00:02:44.770 --> 00:02:46.840
When you think of
smart buildings, which

00:02:46.840 --> 00:02:49.060
we talk about a lot,
increasingly you'll

00:02:49.060 --> 00:02:50.620
have cameras in there.

00:02:50.620 --> 00:02:53.440
And these cameras can not
only detect occupancy,

00:02:53.440 --> 00:02:56.290
they can actually do a headcount
and say how many people

00:02:56.290 --> 00:02:59.380
are in a given space
at any point of time

00:02:59.380 --> 00:03:01.540
and interact intelligently
with other systems

00:03:01.540 --> 00:03:03.730
within the building,
like the HVAC system,

00:03:03.730 --> 00:03:06.400
and do something smart
with that knowledge.

00:03:06.400 --> 00:03:09.400
And finally, of course,
truly mobile IoT applications

00:03:09.400 --> 00:03:12.170
like asset tracking,
fleet management.

00:03:12.170 --> 00:03:13.750
These are all
becoming much better

00:03:13.750 --> 00:03:15.640
every day with the
ability to pull

00:03:15.640 --> 00:03:18.820
more context from the cloud
and do something smart with it

00:03:18.820 --> 00:03:20.022
locally.

00:03:20.022 --> 00:03:21.730
When you look at all
of these categories,

00:03:21.730 --> 00:03:25.107
you'll see some very interesting
common themes emerge.

00:03:25.107 --> 00:03:27.440
One is, like I said, these
are all very powerful devices

00:03:27.440 --> 00:03:28.530
that sit at the edge.

00:03:28.530 --> 00:03:32.080
They perform some very complex
operations-- image processing,

00:03:32.080 --> 00:03:35.200
audio processing-- and
they do that all locally.

00:03:35.200 --> 00:03:36.946
There's a lot of
on-device intelligence.

00:03:36.946 --> 00:03:38.820
And this is for a number
of different reasons

00:03:38.820 --> 00:03:40.179
or a combination of reasons.

00:03:40.179 --> 00:03:41.470
Sometimes it's for low latency.

00:03:41.470 --> 00:03:43.084
You just want to
react very quickly.

00:03:43.084 --> 00:03:44.750
And other times, it's
a fault-tolerance.

00:03:44.750 --> 00:03:46.166
Maybe a network
is not as reliable

00:03:46.166 --> 00:03:48.100
as you would like it to be.

00:03:48.100 --> 00:03:50.780
And they all have a
need for deep security,

00:03:50.780 --> 00:03:52.660
both at the device
level, but also in how

00:03:52.660 --> 00:03:55.580
they interact with the cloud.

00:03:55.580 --> 00:03:57.310
But unfortunately,
today I think to build

00:03:57.310 --> 00:04:00.721
a device, any of these types
of devices, is not easy.

00:04:00.721 --> 00:04:02.470
So let's talk with a
few of the challenges

00:04:02.470 --> 00:04:07.180
that we see in this space
that IoT developers face.

00:04:09.780 --> 00:04:12.204
Let's talk about the
software part of it.

00:04:12.204 --> 00:04:13.620
So if you're a
software developer,

00:04:13.620 --> 00:04:17.640
the amount of complexity that
confronts you is massive.

00:04:17.640 --> 00:04:19.740
The IoT devices
that you see today

00:04:19.740 --> 00:04:23.410
are built on a number of
flavors of operating systems,

00:04:23.410 --> 00:04:25.230
whether it's Linux or Android.

00:04:25.230 --> 00:04:28.260
So it's very difficult to get
the consistent and reliable

00:04:28.260 --> 00:04:31.590
sort of APIs that
you can depend on.

00:04:31.590 --> 00:04:34.170
It's hard to find robust
tools that you can use,

00:04:34.170 --> 00:04:37.470
and it's also very hard to
find a community of developers

00:04:37.470 --> 00:04:41.107
that you can reach out to
when you run into trouble.

00:04:41.107 --> 00:04:42.690
Think of all the
basic building blocks

00:04:42.690 --> 00:04:44.750
when you're building a product.

00:04:44.750 --> 00:04:47.117
If you're building a product
for a consumer application,

00:04:47.117 --> 00:04:48.950
even something as simple
as a reliable setup

00:04:48.950 --> 00:04:51.540
flow so that the consumer
can use their mobile device

00:04:51.540 --> 00:04:54.510
to set up the product
you're selling them,

00:04:54.510 --> 00:04:57.990
as well as an app SDK that you
can use to build your own app,

00:04:57.990 --> 00:04:59.790
if you think of an
enterprise use case,

00:04:59.790 --> 00:05:01.980
having something like
zero touch provisioning,

00:05:01.980 --> 00:05:04.470
and providing a console that
enterprise can use to manage

00:05:04.470 --> 00:05:07.597
their fleet of devices that
may not even be coming from you

00:05:07.597 --> 00:05:09.180
but a combination
of devices that come

00:05:09.180 --> 00:05:12.880
from everybody, or in some
cases, providing them APIs

00:05:12.880 --> 00:05:15.750
that they can integrate into
the console that they use,

00:05:15.750 --> 00:05:17.670
you have to build all
of this from scratch

00:05:17.670 --> 00:05:19.699
if you want to get started.

00:05:19.699 --> 00:05:21.240
And finally, I think
it's really hard

00:05:21.240 --> 00:05:26.680
to get access to third party--

00:05:26.680 --> 00:05:28.485
sorry, went too fast.

00:05:28.485 --> 00:05:30.360
It's really hard to get
access to third party

00:05:30.360 --> 00:05:32.496
services like the
Google Assistant

00:05:32.496 --> 00:05:34.620
and getting them working
out of the box, especially

00:05:34.620 --> 00:05:36.670
if you build multiple
products in this space.

00:05:36.670 --> 00:05:39.000
So that's the software
part of the problem.

00:05:39.000 --> 00:05:41.790
When you get to hardware, things
get even more complicated,

00:05:41.790 --> 00:05:42.630
right?

00:05:42.630 --> 00:05:45.870
So not only do you have to first
pick a number of components

00:05:45.870 --> 00:05:48.420
that you can assemble together
to build a cohesive system,

00:05:48.420 --> 00:05:50.922
get your code running on
it, and you do all of that

00:05:50.922 --> 00:05:52.380
just to get to the
prototype stage,

00:05:52.380 --> 00:05:54.630
so just to do a
proof of concept.

00:05:54.630 --> 00:05:56.400
But as you're doing
this, you need

00:05:56.400 --> 00:05:58.858
to be really careful to make
sure you're picking components

00:05:58.858 --> 00:06:01.944
that can scale to high volumes
when you hit mass production.

00:06:01.944 --> 00:06:03.360
And if you don't
do that, then you

00:06:03.360 --> 00:06:04.860
have to re-implement
a bunch of work

00:06:04.860 --> 00:06:06.960
you did before to adapt
to the new components

00:06:06.960 --> 00:06:09.540
that you're forced
to replace them with.

00:06:09.540 --> 00:06:12.720
And this is not a problem that's
unique to just small or medium

00:06:12.720 --> 00:06:13.680
companies.

00:06:13.680 --> 00:06:15.840
Some of our largest
OEM partners tell us

00:06:15.840 --> 00:06:18.499
how difficult this is for
them, even at the scale

00:06:18.499 --> 00:06:20.040
that they're at,
especially when they

00:06:20.040 --> 00:06:22.590
think of this space with
the diversity of product

00:06:22.590 --> 00:06:23.730
categories.

00:06:23.730 --> 00:06:25.712
And as the builder of
the product portfolio,

00:06:25.712 --> 00:06:27.420
they also struggle
with this the same way

00:06:27.420 --> 00:06:30.390
that a small company
would struggle.

00:06:30.390 --> 00:06:31.680
And finally, security.

00:06:31.680 --> 00:06:36.060
I think given the amount of
news-related, security-related

00:06:36.060 --> 00:06:37.830
news that we see
today, I don't think

00:06:37.830 --> 00:06:40.230
I need to belabor the point
of how important security

00:06:40.230 --> 00:06:41.430
is in this space.

00:06:41.430 --> 00:06:44.010
But I think, especially
in IoT scenario,

00:06:44.010 --> 00:06:46.380
it's much harder to deliver
great security because

00:06:46.380 --> 00:06:50.400
of the scale and the diversity
of the types of devices.

00:06:50.400 --> 00:06:53.391
To build a really
secure device, but also

00:06:53.391 --> 00:06:55.890
to keep it secure over a period
of time, is incredibly hard.

00:06:58.730 --> 00:07:00.750
So with Android
Things, our goal is

00:07:00.750 --> 00:07:04.511
to try and solve all of these
problems for the developers.

00:07:04.511 --> 00:07:06.010
And we're doing it
in multiple ways.

00:07:06.010 --> 00:07:08.010
One is by bringing
the power of Android

00:07:08.010 --> 00:07:10.120
to help with
software development.

00:07:10.120 --> 00:07:13.214
The second one is to provide
a choice of hardware solutions

00:07:13.214 --> 00:07:15.255
that let you scale from
a prototype to production

00:07:15.255 --> 00:07:16.713
with the confidence
that you can do

00:07:16.713 --> 00:07:19.720
that in a quick and easy way.

00:07:19.720 --> 00:07:21.120
And then finally,
we want to help

00:07:21.120 --> 00:07:23.647
you keep your devices secure.

00:07:23.647 --> 00:07:25.230
I want to talk a
little bit about what

00:07:25.230 --> 00:07:26.460
I mean by the power of Android.

00:07:26.460 --> 00:07:28.418
In some ways, it actually
cuts across all three

00:07:28.418 --> 00:07:30.140
of these themes.

00:07:30.140 --> 00:07:34.320
I mentioned the two billion
monthly active users that Dave

00:07:34.320 --> 00:07:35.700
mentioned earlier today.

00:07:35.700 --> 00:07:39.250
But what makes that possible
is a number of things.

00:07:39.250 --> 00:07:41.970
All the most important
of those is the people

00:07:41.970 --> 00:07:44.010
that are in this room--
the developer community,

00:07:44.010 --> 00:07:47.700
the rich community that we have
of Android app developers that

00:07:47.700 --> 00:07:49.409
make a lot of this possible.

00:07:49.409 --> 00:07:51.450
But also we have a number
of commercial entities,

00:07:51.450 --> 00:07:55.080
an entire supply chain,
composed of silicon providers,

00:07:55.080 --> 00:07:57.720
people who make various
types of components, contract

00:07:57.720 --> 00:08:01.350
manufacturers, device
manufacturers, retailers,

00:08:01.350 --> 00:08:03.720
and seller operators,
mobile operators.

00:08:03.720 --> 00:08:06.370
And it's a collection of
all of these, all of you,

00:08:06.370 --> 00:08:08.310
that makes Android what it is--

00:08:08.310 --> 00:08:11.280
a very rich, diverse,
vibrant ecosystem.

00:08:11.280 --> 00:08:15.860
And that is what we want to
bring to the world of IoT.

00:08:15.860 --> 00:08:18.070
So let's start first with
the developer experience

00:08:18.070 --> 00:08:20.570
and discuss how
Android Things can

00:08:20.570 --> 00:08:23.510
make this very consistent and
very familiar to a lot more

00:08:23.510 --> 00:08:26.240
people.

00:08:26.240 --> 00:08:28.390
What you see here is
the software stack

00:08:28.390 --> 00:08:32.020
for a typical Android
mobile device, a phone.

00:08:32.020 --> 00:08:34.255
Going from bottom to top,
the kernel in the library

00:08:34.255 --> 00:08:37.480
is primarily focused on enabling
hardware device support,

00:08:37.480 --> 00:08:39.409
hardware driver support.

00:08:39.409 --> 00:08:41.740
The middle stack, the
application framework,

00:08:41.740 --> 00:08:44.487
provides very rich services
API for the apps, which,

00:08:44.487 --> 00:08:46.570
of course, are for a number
of developer partners,

00:08:46.570 --> 00:08:49.560
and even Google
builds, to deliver

00:08:49.560 --> 00:08:54.450
a variety of user-facing
services and use cases.

00:08:54.450 --> 00:08:57.070
This stack obviously
is designed for devices

00:08:57.070 --> 00:08:58.600
of a very specific kind.

00:08:58.600 --> 00:09:01.120
All of them have a display.

00:09:01.120 --> 00:09:04.100
They all expect users
to install apps.

00:09:04.100 --> 00:09:06.880
So there's a very specific
notion that's built into these.

00:09:06.880 --> 00:09:12.020
And we all know that IoT devices
don't exactly fit this mold.

00:09:12.020 --> 00:09:16.350
So we set out to create a
variant of Android that's

00:09:16.350 --> 00:09:18.560
design priority, which is
what Android Things is.

00:09:18.560 --> 00:09:20.060
And one of the first
things they did

00:09:20.060 --> 00:09:23.270
is they removed most of the
user-facing applications,

00:09:23.270 --> 00:09:25.850
and a lot of the visual
framework components.

00:09:25.850 --> 00:09:28.430
So just as an example, you
don't need a text messaging

00:09:28.430 --> 00:09:30.800
app or a browser
on most IoT devices

00:09:30.800 --> 00:09:33.150
or [INAUDIBLE] on any of them.

00:09:33.150 --> 00:09:36.890
So while we did this to remove
a lot of unnecessary complexity

00:09:36.890 --> 00:09:40.490
that developers face, one
of the happy side effects

00:09:40.490 --> 00:09:42.500
was that we also
significantly reduced

00:09:42.500 --> 00:09:44.420
the footprint of the
distribution, which

00:09:44.420 --> 00:09:46.380
makes it a lot more
scalable downward

00:09:46.380 --> 00:09:49.640
as you build IoT devices.

00:09:49.640 --> 00:09:51.550
Then we added a number
of new capabilities

00:09:51.550 --> 00:09:53.300
that are relevant
for IoT devices,

00:09:53.300 --> 00:09:56.690
and touch upon a few
of them very briefly.

00:09:56.690 --> 00:09:59.930
Let me start with Peripheral
I/O. Peripheral I/O

00:09:59.930 --> 00:10:02.360
is a part of the Android
Things support library.

00:10:02.360 --> 00:10:04.970
And what it does is it
provides new APIs that

00:10:04.970 --> 00:10:07.460
allow applications that you
would build to interface

00:10:07.460 --> 00:10:09.020
directly with low
level peripherals

00:10:09.020 --> 00:10:13.920
using industry standard
protocols like GPIO and I2S

00:10:13.920 --> 00:10:16.520
and so on that you
see up on the screen.

00:10:16.520 --> 00:10:19.640
And what this enable is
that with these APIs,

00:10:19.640 --> 00:10:21.860
your application and
your code can now

00:10:21.860 --> 00:10:23.840
interact with the number
of peripherals like--

00:10:23.840 --> 00:10:25.340
think of simple
things like buttons,

00:10:25.340 --> 00:10:29.480
relays, proximity sensors, more
advanced things like displays

00:10:29.480 --> 00:10:31.282
and speakers and
high-speed peripherals.

00:10:31.282 --> 00:10:32.990
And over time, we're
going to add support

00:10:32.990 --> 00:10:36.401
for things like printers,
barcode scanners, RFID readers,

00:10:36.401 --> 00:10:36.900
and so on.

00:10:39.450 --> 00:10:41.987
The second thing is something
we refer-- the second thing is

00:10:41.987 --> 00:10:44.070
user drivers, which enables
a very interesting use

00:10:44.070 --> 00:10:45.420
case for us.

00:10:45.420 --> 00:10:48.360
So in a lot of cases,
your applications

00:10:48.360 --> 00:10:50.924
can just use a Peripheral
I/O. But in some cases,

00:10:50.924 --> 00:10:53.340
you might want to integrate
your hardware with the Android

00:10:53.340 --> 00:10:56.880
framework so that you can access
some of the standard framework

00:10:56.880 --> 00:10:59.520
managers and
callbacks and expose

00:10:59.520 --> 00:11:01.450
these components
and the capabilities

00:11:01.450 --> 00:11:03.206
thereof to other
applications that

00:11:03.206 --> 00:11:04.830
might sit on your
product, applications

00:11:04.830 --> 00:11:07.320
that you might get from a
third party, for example.

00:11:07.320 --> 00:11:09.650
So again, as a few
quick examples,

00:11:09.650 --> 00:11:12.840
input devices that generate
key events or motion events

00:11:12.840 --> 00:11:16.200
can now inject those events into
the Android input framework.

00:11:16.200 --> 00:11:18.660
Or think of GPS or
other location sources

00:11:18.660 --> 00:11:20.641
that you attach to
your product, and this

00:11:20.641 --> 00:11:22.890
can be integrated with the
location framework, Android

00:11:22.890 --> 00:11:24.150
location framework.

00:11:24.150 --> 00:11:27.219
And once you do that, location
updates from these sources

00:11:27.219 --> 00:11:29.010
will then be delivered
through the location

00:11:29.010 --> 00:11:32.280
manager and the fused
location providers.

00:11:32.280 --> 00:11:34.321
So over the last five
months, we from--

00:11:34.321 --> 00:11:35.820
at Google, we've
been adding drivers

00:11:35.820 --> 00:11:38.180
on our open source
community GitHub

00:11:38.180 --> 00:11:41.460
page for many different
types of peripherals.

00:11:41.460 --> 00:11:44.160
And we've noticed that a lot
of our developer partners

00:11:44.160 --> 00:11:45.960
are beginning to
contribute as well, which

00:11:45.960 --> 00:11:48.210
is really awesome to see.

00:11:48.210 --> 00:11:50.070
And increasingly,
some of our partners

00:11:50.070 --> 00:11:51.600
are also getting
into the act now.

00:11:51.600 --> 00:11:53.220
Just as an example,
Intel recently

00:11:53.220 --> 00:11:56.580
added support for Android Things
with their useful packages

00:11:56.580 --> 00:12:00.720
and modules and MRA, which
brings with it about 200 very

00:12:00.720 --> 00:12:02.660
interesting components
and peripherals

00:12:02.660 --> 00:12:05.494
that now work on Intel
Joule and Intel Edison

00:12:05.494 --> 00:12:06.660
when you use Android Things.

00:12:09.420 --> 00:12:12.270
I mentioned we removed a
lot of the visual framework

00:12:12.270 --> 00:12:13.320
components.

00:12:13.320 --> 00:12:15.480
And we did this because
a lot of IoT devices

00:12:15.480 --> 00:12:16.780
don't have displays.

00:12:16.780 --> 00:12:18.772
But at the same time,
there are definitely

00:12:18.772 --> 00:12:20.730
quite a few that will
have a display, sometimes

00:12:20.730 --> 00:12:21.810
more than one display.

00:12:21.810 --> 00:12:24.060
So the way we think about
this is that display support

00:12:24.060 --> 00:12:24.900
is optional, right?

00:12:24.900 --> 00:12:26.820
So you can add a
display if you want.

00:12:26.820 --> 00:12:28.799
And Android Things supports
the same UI toolkit

00:12:28.799 --> 00:12:31.090
that's available in all the
other Android form factors.

00:12:31.090 --> 00:12:33.960
So you can rely on
the same framework.

00:12:33.960 --> 00:12:37.134
So if you build a device with
a display, the entire display,

00:12:37.134 --> 00:12:38.550
the control for
the entire display

00:12:38.550 --> 00:12:41.532
is actually handed to your
application that you build.

00:12:41.532 --> 00:12:42.990
And what we did is
we basically got

00:12:42.990 --> 00:12:44.198
the system UI out of the way.

00:12:44.198 --> 00:12:48.349
So no more system status
bar, navigation buttons.

00:12:48.349 --> 00:12:50.640
We eliminated of lot of the
APIs that don't make sense,

00:12:50.640 --> 00:12:54.450
like showing a dialog for
authentication or sign on.

00:12:54.450 --> 00:12:56.940
Android system notifications,
user-granted runtime

00:12:56.940 --> 00:12:59.370
permissions, so we
removed all of these.

00:12:59.370 --> 00:13:01.830
And we believe this
more closely mimics

00:13:01.830 --> 00:13:05.340
the types of devices we
encounter in the IoT space,

00:13:05.340 --> 00:13:08.250
where the devices tend
to be fixed-purpose,

00:13:08.250 --> 00:13:11.010
and the user is interacting with
the intended purpose as opposed

00:13:11.010 --> 00:13:13.260
to adding new functionality
through the display that's

00:13:13.260 --> 00:13:13.843
on the device.

00:13:16.360 --> 00:13:18.940
Moving on, let's talk about
connectivity a little bit.

00:13:18.940 --> 00:13:21.250
Today already in the
developer previews

00:13:21.250 --> 00:13:23.200
that we released so
far, we support Wi-Fi,

00:13:23.200 --> 00:13:24.610
and we support Bluetooth.

00:13:24.610 --> 00:13:26.620
We are going to bring
NFC later this year.

00:13:26.620 --> 00:13:29.170
But the one I'm very
excited about is cellular.

00:13:29.170 --> 00:13:31.740
So adding cellular
capabilities to IoT devices

00:13:31.740 --> 00:13:35.560
unlocks a variety of very
exciting new use cases.

00:13:35.560 --> 00:13:38.020
But adding cellular
support is nontrival,

00:13:38.020 --> 00:13:41.020
as anybody in this room
who's tried can attest to.

00:13:41.020 --> 00:13:44.410
And what you'll find is that
half the challenge is actually

00:13:44.410 --> 00:13:46.687
enabling the functionality
and making sure it works.

00:13:46.687 --> 00:13:48.520
The other half of it
is getting it certified

00:13:48.520 --> 00:13:50.275
to work on carrier networks.

00:13:50.275 --> 00:13:52.150
Especially if you have
a geographic footprint

00:13:52.150 --> 00:13:54.280
that goes beyond one
country, that challenge

00:13:54.280 --> 00:13:56.740
goes up dramatically.

00:13:56.740 --> 00:13:58.810
As it turns out, the
core Android team,

00:13:58.810 --> 00:14:01.030
which we're a part
of, works very closely

00:14:01.030 --> 00:14:03.400
with a number of
silicon partners

00:14:03.400 --> 00:14:07.234
in the context of mobile phones
to deliver this capability.

00:14:07.234 --> 00:14:08.650
And as it turns
out, we're working

00:14:08.650 --> 00:14:10.660
with some of the same
partners very closely as well.

00:14:10.660 --> 00:14:12.610
So we're going to
leverage a lot of the work

00:14:12.610 --> 00:14:15.670
that the core Android team does
to bring cellular connectivity

00:14:15.670 --> 00:14:18.310
in a very clean,
easy-to-use onto Android

00:14:18.310 --> 00:14:20.242
Things over the
course of this year.

00:14:20.242 --> 00:14:21.700
In fact, Qualcomm
earlier this year

00:14:21.700 --> 00:14:23.949
announced that they're going
to support Android Things

00:14:23.949 --> 00:14:26.310
on their Snapdragon
210 processor that

00:14:26.310 --> 00:14:30.820
also has LTE modem capability.

00:14:30.820 --> 00:14:33.120
So I talked a lot about
the changes we made

00:14:33.120 --> 00:14:34.120
and the things we added.

00:14:34.120 --> 00:14:36.640
Let me now talk about the
things that we did not change,

00:14:36.640 --> 00:14:39.250
which is the core
power and the ecosystem

00:14:39.250 --> 00:14:41.060
that Android brings with it.

00:14:41.060 --> 00:14:42.730
So you can still
continue to leverage

00:14:42.730 --> 00:14:45.760
the Android SDK and
the NDK, Android Studio

00:14:45.760 --> 00:14:49.330
to develop your use cases,
and your APKs on top,

00:14:49.330 --> 00:14:51.750
and all the developer
tools that we provide you.

00:14:51.750 --> 00:14:54.110
You can continue to use the
existing third party Android

00:14:54.110 --> 00:14:54.910
libraries.

00:14:54.910 --> 00:14:57.100
And, as importantly,
you can continue

00:14:57.100 --> 00:15:00.730
to tap into the rich community
of Android app developers

00:15:00.730 --> 00:15:03.940
for support and also reuse
things others build, right?

00:15:03.940 --> 00:15:06.460
So that's one of
the exciting things

00:15:06.460 --> 00:15:10.510
that I think Android can
bring to Android Things.

00:15:10.510 --> 00:15:11.800
Play Services.

00:15:11.800 --> 00:15:15.010
So Google Play Services has a
number of very interesting APIs

00:15:15.010 --> 00:15:16.480
that people rely on.

00:15:16.480 --> 00:15:18.880
This is currently already
available in Android Things

00:15:18.880 --> 00:15:20.920
and Developer Preview.

00:15:20.920 --> 00:15:23.950
What we are currently working
on is an optimized, much lighter

00:15:23.950 --> 00:15:27.930
weight version of Play Services
that's targeted at IoT devices

00:15:27.930 --> 00:15:29.900
that we're going to
deliver later this year.

00:15:29.900 --> 00:15:31.990
So what we did is we
removed a number of APIs

00:15:31.990 --> 00:15:35.440
that we talked were not useful
in this space, things that

00:15:35.440 --> 00:15:38.890
enabled user input or user
account management, which don't

00:15:38.890 --> 00:15:40.840
necessarily make sense in IoT.

00:15:40.840 --> 00:15:44.810
And by doing that, we reduce the
footprint of GmsCore by a lot.

00:15:44.810 --> 00:15:47.050
But we preserved
APIs like Firebase,

00:15:47.050 --> 00:15:49.960
and we're adding enhanced
APIs that support

00:15:49.960 --> 00:15:51.705
machine intelligence on-device.

00:15:54.547 --> 00:15:56.630
And of course, I mentioned
Firebase, an incredibly

00:15:56.630 --> 00:15:57.837
valuable tool in this space.

00:15:57.837 --> 00:16:00.170
We are going to continue to
support that as we build out

00:16:00.170 --> 00:16:02.810
Android Things, the ability
to access Google Cloud

00:16:02.810 --> 00:16:06.770
Platform if you need cloud
storage and additional compute.

00:16:06.770 --> 00:16:09.185
And we'll make that seamless
as well, that integration.

00:16:09.185 --> 00:16:10.310
And then a lot more, right?

00:16:10.310 --> 00:16:13.100
So even yesterday when
Developer Preview came out,

00:16:13.100 --> 00:16:16.610
the Assistant SDK, we launched--
we provided a sample yesterday

00:16:16.610 --> 00:16:19.370
that lets you build a Google
Assistant prototype using

00:16:19.370 --> 00:16:21.410
Android Things, right?

00:16:21.410 --> 00:16:23.630
And you'll see a lot more
Google services and apps

00:16:23.630 --> 00:16:25.260
that we want to bring
to Android Things

00:16:25.260 --> 00:16:28.190
in a cleanly integrated,
easy-to-use, modular way,

00:16:28.190 --> 00:16:31.140
meaning you can pick
the ones you want.

00:16:31.140 --> 00:16:32.780
So when you put all
of this together,

00:16:32.780 --> 00:16:34.196
on the software
side, what you get

00:16:34.196 --> 00:16:36.710
is, if you're an Android app
developer, all of a sudden,

00:16:36.710 --> 00:16:38.870
this opens up the world
of IoT devices to you.

00:16:38.870 --> 00:16:41.900
And you can set out on a
path to be an IoT device

00:16:41.900 --> 00:16:42.796
developer yourself.

00:16:42.796 --> 00:16:44.420
If you're someone
with an idea, and you

00:16:44.420 --> 00:16:46.427
want to go build a
device, you can actually

00:16:46.427 --> 00:16:48.510
tap into this community
of Android app developers,

00:16:48.510 --> 00:16:52.670
and you don't have to build a
full team of deep OS experts

00:16:52.670 --> 00:16:53.962
any longer to even get started.

00:16:53.962 --> 00:16:55.711
You can actually pick
some of these things

00:16:55.711 --> 00:16:58.117
that they're building and tap
into this large community,

00:16:58.117 --> 00:16:58.700
and get going.

00:17:01.550 --> 00:17:03.960
Finally, we did talk about
devices getting increasingly

00:17:03.960 --> 00:17:04.460
smarter.

00:17:04.460 --> 00:17:07.859
And I'll talk a little bit about
how we're making that happen.

00:17:07.859 --> 00:17:11.359
So on-device
intelligence is going

00:17:11.359 --> 00:17:13.290
to be critically important
in IoT over time.

00:17:13.290 --> 00:17:14.956
And this can be for
a number of reasons.

00:17:14.956 --> 00:17:16.640
One, I mentioned
before, latency.

00:17:16.640 --> 00:17:18.639
You might want a very
quick response time.

00:17:18.639 --> 00:17:20.180
You might have
bandwidth constraints.

00:17:20.180 --> 00:17:22.069
Bandwidth is
expensive sometimes.

00:17:22.069 --> 00:17:26.210
Your connectivity might be very
unreliable, and so on, right?

00:17:26.210 --> 00:17:28.970
So with Android, the core
Android platform itself,

00:17:28.970 --> 00:17:31.070
and also with Android
Things, we're making--

00:17:31.070 --> 00:17:33.830
as a collective, we're
making deep investments

00:17:33.830 --> 00:17:37.340
to bring on-device intelligence
capabilities in a very deeply

00:17:37.340 --> 00:17:39.710
integrated fashion into
the distribution we're

00:17:39.710 --> 00:17:41.780
going to provide you.

00:17:41.780 --> 00:17:44.050
And earlier this year, we
added support for TensorFlow

00:17:44.050 --> 00:17:45.320
on Android Things.

00:17:45.320 --> 00:17:48.410
And it's been awesome to see
some of the creative things

00:17:48.410 --> 00:17:50.810
that our community has been
already building so far.

00:17:50.810 --> 00:17:54.280
And at our demo space, you
can see TensorFlow in action.

00:17:54.280 --> 00:17:56.180
There are two demos,
one that our team built,

00:17:56.180 --> 00:17:58.180
another one that somebody
in the community built

00:17:58.180 --> 00:18:00.440
using the pieces that
we-- the components

00:18:00.440 --> 00:18:01.910
we delivered already.

00:18:01.910 --> 00:18:03.560
There's also a
codelab for TensorFlow

00:18:03.560 --> 00:18:08.024
that you can go and
get your hands on it.

00:18:08.024 --> 00:18:09.440
So I'm going to
switch gears a bit

00:18:09.440 --> 00:18:12.650
now and move from
software to hardware

00:18:12.650 --> 00:18:15.430
and how Android Things is going
to simplify and accelerate

00:18:15.430 --> 00:18:17.180
your hardware prototyping
process as well.

00:18:19.690 --> 00:18:21.582
So if you're getting
started on a new device,

00:18:21.582 --> 00:18:23.540
as I mentioned before,
you need to assemble all

00:18:23.540 --> 00:18:24.800
the right components,
you need to make

00:18:24.800 --> 00:18:27.410
sure they all work together,
that your proof of concept

00:18:27.410 --> 00:18:28.120
works.

00:18:28.120 --> 00:18:30.440
Then you have to procure all
these components at scale,

00:18:30.440 --> 00:18:32.930
at a price that
you're able to pay.

00:18:32.930 --> 00:18:34.896
And you need to--
then that's when

00:18:34.896 --> 00:18:36.020
you get to mass production.

00:18:36.020 --> 00:18:38.020
And there's a lot of
complexity involved in this

00:18:38.020 --> 00:18:39.591
and a lot of time as well.

00:18:39.591 --> 00:18:41.090
So to help with
this, Android Things

00:18:41.090 --> 00:18:43.339
uses something called a
System on Module architecture,

00:18:43.339 --> 00:18:44.962
or the SoM architecture.

00:18:44.962 --> 00:18:46.670
And I think a lot of
you in this audience

00:18:46.670 --> 00:18:49.405
are probably familiar
with this concept.

00:18:49.405 --> 00:18:53.370
A SoM basically has a
core computing module.

00:18:53.370 --> 00:18:56.120
So it has compute,
connectivity, storage,

00:18:56.120 --> 00:18:59.000
and many other core components
in a very small package.

00:18:59.000 --> 00:19:01.500
And when you're
building an IoT device,

00:19:01.500 --> 00:19:03.200
some of the most
complex hardware design

00:19:03.200 --> 00:19:07.940
is actually already
encapsulated in the SoM itself.

00:19:07.940 --> 00:19:10.530
And what you see here
on the left side,

00:19:10.530 --> 00:19:14.090
my left, are two modules, one
from Intel, and one from NXP

00:19:14.090 --> 00:19:15.620
that we already. launched.

00:19:15.620 --> 00:19:19.700
And in close collaboration
with our silicon partners,

00:19:19.700 --> 00:19:22.520
we're going to provide a BSP,
a Board Support Package, that

00:19:22.520 --> 00:19:25.340
basically provides a very
clean layer for your core

00:19:25.340 --> 00:19:26.585
to reside on top of.

00:19:26.585 --> 00:19:28.460
And what that does is
it makes your core very

00:19:28.460 --> 00:19:31.430
portable to other supported
hardware platforms as you build

00:19:31.430 --> 00:19:33.840
out a portfolio of
more capable devices

00:19:33.840 --> 00:19:35.510
within the same
category, or you're

00:19:35.510 --> 00:19:36.968
switching to a new
category and you

00:19:36.968 --> 00:19:40.200
want something quite different.

00:19:40.200 --> 00:19:43.080
So let's see how a
SoM is in action.

00:19:43.080 --> 00:19:45.920
So it's pretty hard
to see on the slide

00:19:45.920 --> 00:19:47.020
how big these SoMs are.

00:19:47.020 --> 00:19:50.330
So the smaller image you
see up there is this.

00:19:50.330 --> 00:19:53.310
This is what a SoM looks like.

00:19:53.310 --> 00:19:56.570
It's about an inch and a half
on the side, roughly a square.

00:20:00.690 --> 00:20:04.140
And the larger image
there is the baseboard

00:20:04.140 --> 00:20:05.600
that we use internally.

00:20:05.600 --> 00:20:08.310
It's a [INAUDIBLE] baseboard
that we internally.

00:20:08.310 --> 00:20:11.520
It has the kitchen sink of all
the peripherals and connections

00:20:11.520 --> 00:20:13.830
that we need for our
own internal prototyping

00:20:13.830 --> 00:20:17.520
and development and testing.

00:20:17.520 --> 00:20:19.980
And of course, the
product you build

00:20:19.980 --> 00:20:22.120
won't require all
of these components,

00:20:22.120 --> 00:20:24.480
so you would have a baseboard
that's much simpler,

00:20:24.480 --> 00:20:27.840
and only have the things that
you need for your product.

00:20:27.840 --> 00:20:30.870
And baseboards typically
tend to be a lot more--

00:20:30.870 --> 00:20:33.480
a lot less expensive to
produce, even at lower volumes.

00:20:33.480 --> 00:20:35.610
So your prototyping
becomes a lot easier

00:20:35.610 --> 00:20:37.580
once you start using a SoM.

00:20:37.580 --> 00:20:40.440
And the SoM model, we
believe, offers some very key

00:20:40.440 --> 00:20:41.110
advantages.

00:20:41.110 --> 00:20:43.080
One is, you can get
to prototype stage

00:20:43.080 --> 00:20:46.140
much faster by taking
off-the-shelf components.

00:20:46.140 --> 00:20:48.010
And the pre-certified
hardware basically

00:20:48.010 --> 00:20:49.590
reduces not only
your time to market,

00:20:49.590 --> 00:20:51.122
but also your development costs.

00:20:51.122 --> 00:20:52.830
It also takes out a
lot of the technology

00:20:52.830 --> 00:20:55.920
risk inherent as you're
building your prototypes.

00:20:55.920 --> 00:20:59.670
And of course, as you scale
to larger commercial volumes,

00:20:59.670 --> 00:21:01.110
you can be confident
that you can

00:21:01.110 --> 00:21:02.880
procure these in high volume.

00:21:02.880 --> 00:21:04.380
And if you hit
really high volumes,

00:21:04.380 --> 00:21:07.740
you can actually collapse
the baseboard and the SoM

00:21:07.740 --> 00:21:09.320
into one board.

00:21:09.320 --> 00:21:11.427
And you can get a custom
board built for you.

00:21:11.427 --> 00:21:12.760
And it has couple of advantages.

00:21:12.760 --> 00:21:15.554
One is it can reduce your cost.

00:21:15.554 --> 00:21:17.220
Another thing is you
can then lay it out

00:21:17.220 --> 00:21:20.830
in a way that matches the XY
dimensions of your product,

00:21:20.830 --> 00:21:21.330
right?

00:21:21.330 --> 00:21:24.030
So you can actually
optimize it to fit exactly

00:21:24.030 --> 00:21:27.090
cleanly into the product
idea that you want to build.

00:21:27.090 --> 00:21:29.370
And as long as you
use the same BSP,

00:21:29.370 --> 00:21:32.840
you don't have to rewrite any
code that you already built.

00:21:32.840 --> 00:21:35.820
If you want to learn
more about SoMs

00:21:35.820 --> 00:21:38.096
and how to build
custom be BSPs--

00:21:38.096 --> 00:21:40.715
sorry, custom boards, I think
there's a more detailed talk

00:21:40.715 --> 00:21:44.700
coming up tomorrow at 9:30 AM.

00:21:44.700 --> 00:21:47.850
So of course, you need SoMs
that can match the price

00:21:47.850 --> 00:21:51.180
and power and performance
and connectivity needs

00:21:51.180 --> 00:21:52.131
that your product has.

00:21:52.131 --> 00:21:53.880
So to do this, we're
working with a number

00:21:53.880 --> 00:21:55.588
of industry leaders
to make sure you have

00:21:55.588 --> 00:21:56.790
plenty of hardware choices.

00:21:56.790 --> 00:22:00.780
Today, we already support
boards from NXP, XP, Intel,

00:22:00.780 --> 00:22:03.865
and Raspberry Pi, and
Qualcomm, as I mentioned,

00:22:03.865 --> 00:22:06.240
announced earlier this year
that we are working with them

00:22:06.240 --> 00:22:08.670
on the Snapdragon 210 line.

00:22:08.670 --> 00:22:10.500
And we're also
working with MediaTek

00:22:10.500 --> 00:22:12.870
to bring an option from them
as well with Android Things

00:22:12.870 --> 00:22:13.453
support on it.

00:22:17.140 --> 00:22:19.330
Finally, I'll talk
about security.

00:22:19.330 --> 00:22:22.030
So thankfully, there is
now an increasing focus

00:22:22.030 --> 00:22:23.890
on security in IoT.

00:22:23.890 --> 00:22:27.820
And in the IoT
space, the challenge

00:22:27.820 --> 00:22:30.830
is dramatically higher
for a number of reasons.

00:22:30.830 --> 00:22:32.560
One is just the
diversity of the device

00:22:32.560 --> 00:22:34.660
types, the diversity of
the operating systems

00:22:34.660 --> 00:22:37.032
and the hardware that's
underneath, and the use cases,

00:22:37.032 --> 00:22:39.490
but also just think about how
these devices are used today,

00:22:39.490 --> 00:22:40.390
right?

00:22:40.390 --> 00:22:42.970
A lot of them operate
with no user intervention

00:22:42.970 --> 00:22:44.020
or interaction.

00:22:44.020 --> 00:22:46.680
There is no display where you
can say something to the user.

00:22:46.680 --> 00:22:48.490
And a lot of them are out
of sight, out of mind.

00:22:48.490 --> 00:22:50.140
I can't remember the
last time I looked

00:22:50.140 --> 00:22:51.640
at my Wi-Fi router,
which is sitting

00:22:51.640 --> 00:22:53.830
in a closet under my stairs.

00:22:53.830 --> 00:22:56.410
So not only is it hard
to build a device that's

00:22:56.410 --> 00:22:58.450
secure when you
launch it, it's also

00:22:58.450 --> 00:23:01.870
really hard to keep that device
secure over a period of time.

00:23:01.870 --> 00:23:04.450
And Android Things has
been designed for security

00:23:04.450 --> 00:23:05.540
from the ground up.

00:23:05.540 --> 00:23:11.510
And what you see here is two
separate parts of the code.

00:23:11.510 --> 00:23:14.770
One is the OS that's provided
by Google in close collaboration

00:23:14.770 --> 00:23:16.420
with our silicon partners.

00:23:16.420 --> 00:23:18.790
And what you see at the top
is the product-specific code

00:23:18.790 --> 00:23:21.180
that's created by
the app developrs.

00:23:21.180 --> 00:23:24.400
This is your apps, your
user drivers, and so on.

00:23:24.400 --> 00:23:28.330
And separating these two is a
very clean Android API layer.

00:23:28.330 --> 00:23:31.210
And what that allows
us to do is update

00:23:31.210 --> 00:23:33.970
either of these two partitions
independent of the other

00:23:33.970 --> 00:23:36.910
without compromising the
functionality of the product.

00:23:36.910 --> 00:23:39.100
So it allows us to
push updates to either

00:23:39.100 --> 00:23:40.448
of those two partitions.

00:23:43.520 --> 00:23:45.740
So I talked about
security updates just now.

00:23:45.740 --> 00:23:48.480
So the Android team
which we're a part of

00:23:48.480 --> 00:23:51.342
invests a lot of energy into
delivering monthly security

00:23:51.342 --> 00:23:53.675
updates, which we're now going
to bring to the IoT space

00:23:53.675 --> 00:23:55.910
to Android Things.

00:23:55.910 --> 00:24:00.320
These partitions are signed by
a trusted source for security.

00:24:00.320 --> 00:24:02.780
Android Things
supports verified boot

00:24:02.780 --> 00:24:05.600
so that your device is
protected against [INAUDIBLE]

00:24:05.600 --> 00:24:06.950
that you might download.

00:24:06.950 --> 00:24:08.950
And it's going to block
your device from booting

00:24:08.950 --> 00:24:10.520
into an unknown
state with an image,

00:24:10.520 --> 00:24:13.370
maybe that signature that you
don't trust or the contents you

00:24:13.370 --> 00:24:15.320
cannot verify.

00:24:15.320 --> 00:24:18.020
There's also A/B updates
which lets you roll back.

00:24:18.020 --> 00:24:20.270
So if you push something
out by accident

00:24:20.270 --> 00:24:22.250
that compromises
the functionality,

00:24:22.250 --> 00:24:24.950
there's always a known
good image on these devices

00:24:24.950 --> 00:24:28.094
so that you can, without having
to do something in the field,

00:24:28.094 --> 00:24:29.510
revert back to an
known good image

00:24:29.510 --> 00:24:33.070
and boot the device back
up and recover from there.

00:24:33.070 --> 00:24:35.450
And to push all of these
updates and to give you

00:24:35.450 --> 00:24:38.030
the control on
rollbacks and to also

00:24:38.030 --> 00:24:39.770
monitor your field
of devices, we

00:24:39.770 --> 00:24:41.480
are building
currently a developer

00:24:41.480 --> 00:24:44.524
console that we're going
to give you access to soon.

00:24:44.524 --> 00:24:45.940
And this same
console that's going

00:24:45.940 --> 00:24:47.840
to be built on Google
infrastructure,

00:24:47.840 --> 00:24:50.340
you can use that to push updates
to your partition as well.

00:24:50.340 --> 00:24:52.610
So as you come up
with security patches

00:24:52.610 --> 00:24:54.710
or you extend the
features and functionality

00:24:54.710 --> 00:24:57.434
of your partition, you can
use all of our infrastructure

00:24:57.434 --> 00:24:58.100
to push updates.

00:24:58.100 --> 00:25:01.440
So it gives you the ability
to make your devices better

00:25:01.440 --> 00:25:06.310
over time using
the Google backend.

00:25:06.310 --> 00:25:08.542
So again, to quickly
summarize-- with Android Things,

00:25:08.542 --> 00:25:10.250
we're going to bring
the power of Android

00:25:10.250 --> 00:25:12.555
to simplify software
development.

00:25:12.555 --> 00:25:14.930
We're going to provide you a
choice of hardware solutions

00:25:14.930 --> 00:25:16.850
that are going to
allow you to scale

00:25:16.850 --> 00:25:19.239
from prototype to production
easily and quickly.

00:25:19.239 --> 00:25:20.780
And then we're going
to help you keep

00:25:20.780 --> 00:25:22.670
your devices safe and secure.

00:25:25.500 --> 00:25:27.640
Let me talk a bit
about where we are now.

00:25:27.640 --> 00:25:28.830
So Developer Preview 4--

00:25:28.830 --> 00:25:30.690
DP4-- shipped yesterday.

00:25:30.690 --> 00:25:32.520
We added a number
of new capabilities,

00:25:32.520 --> 00:25:35.370
like I2S support that
lets you connect up

00:25:35.370 --> 00:25:38.410
external audio devices,
like speakers, for example.

00:25:38.410 --> 00:25:41.970
We also added a new
SoM, the iMX 7D,

00:25:41.970 --> 00:25:44.340
which delivers higher
performance than the 6UL

00:25:44.340 --> 00:25:46.500
that we already
have support for.

00:25:46.500 --> 00:25:48.900
And also, I mentioned
the Assistant SDK sample

00:25:48.900 --> 00:25:51.150
that we delivered so you
can prototype a Google

00:25:51.150 --> 00:25:54.450
Assistant, a Google Home-like
product for yourself using one

00:25:54.450 --> 00:25:57.870
of our SoMs in Android Things.

00:25:57.870 --> 00:26:00.950
In July, we're going to
hit Developer Preview 5.

00:26:00.950 --> 00:26:03.490
We're going to rebase
to O at this time.

00:26:03.490 --> 00:26:05.680
And we'll have a number of
new features, of course.

00:26:05.680 --> 00:26:07.680
We're also going to launch
the Developer Console

00:26:07.680 --> 00:26:09.000
into preview mode at that time.

00:26:11.989 --> 00:26:14.030
And later this year, we're
going to have a number

00:26:14.030 --> 00:26:15.350
of new features coming.

00:26:15.350 --> 00:26:18.980
We'll have updates, Developer
Preview updates, every six

00:26:18.980 --> 00:26:20.470
to eight weeks, roughly.

00:26:20.470 --> 00:26:22.300
We'll have the GMSCore
for IoT variant

00:26:22.300 --> 00:26:23.959
that I mentioned before.

00:26:23.959 --> 00:26:26.000
We're going to have new
features like NFC support

00:26:26.000 --> 00:26:29.430
and smart setup with
matching app SDKs.

00:26:29.430 --> 00:26:31.070
We're going to have
a more SoMs coming

00:26:31.070 --> 00:26:34.760
from some of the partners
that you saw just now.

00:26:34.760 --> 00:26:37.070
And finally, towards the
very end of the year,

00:26:37.070 --> 00:26:40.250
we're going to release Android
Things to long-term support,

00:26:40.250 --> 00:26:42.270
and it's going to be
based on O at the time.

00:26:42.270 --> 00:26:44.410
So you'll have LTS release
of Android Things then.

00:26:44.410 --> 00:26:46.701
We're also going to release
a lot of the Android Things

00:26:46.701 --> 00:26:49.270
features, like Peripheral
I/O, and user drivers to AOSP

00:26:49.270 --> 00:26:49.770
as well.

00:26:53.480 --> 00:26:56.620
So tomorrow, we have a number of
interesting sessions coming up

00:26:56.620 --> 00:26:59.656
that go a lot more into
depth on some of the topics

00:26:59.656 --> 00:27:01.030
that I just briefly
touched upon.

00:27:01.030 --> 00:27:02.960
So these are all sessions
that are coming up.

00:27:02.960 --> 00:27:06.150
So if you want to learn
more, please go attend them.

00:27:06.150 --> 00:27:09.890
We also have a demo area
in the IoT Sandbox Dome

00:27:09.890 --> 00:27:12.310
where you can see TensorFlow
in action, like I mentioned.

00:27:12.310 --> 00:27:14.930
We have several codelabs where
you can get your hands dirty.

00:27:14.930 --> 00:27:16.450
You can see how Android
Things can work really

00:27:16.450 --> 00:27:17.770
well with the Google Cloud.

00:27:17.770 --> 00:27:19.000
So there's a lot
of things that you

00:27:19.000 --> 00:27:20.830
can do at I/O to learn
more about what we're up to

00:27:20.830 --> 00:27:21.746
and where we're going.

00:27:24.550 --> 00:27:26.300
There are additional
resources, of course,

00:27:26.300 --> 00:27:29.230
beyond I/O. I'll go in order.

00:27:29.230 --> 00:27:33.040
The very top link is a link
to our Google+ community

00:27:33.040 --> 00:27:36.720
of developers where our
community can come to us to get

00:27:36.720 --> 00:27:40.390
updates from us, to get
support from each other,

00:27:40.390 --> 00:27:41.410
as well as our team.

00:27:41.410 --> 00:27:43.150
We are pretty active
on the community

00:27:43.150 --> 00:27:46.720
now and answer
questions when needed.

00:27:46.720 --> 00:27:49.660
The middle link is a link to
Google's broader IoT page.

00:27:49.660 --> 00:27:53.110
It covers our entire
spectrum of IoT offerings.

00:27:53.110 --> 00:27:56.216
And the last one is our
developer documentation page.

00:27:56.216 --> 00:27:57.590
And it has a number
of resources,

00:27:57.590 --> 00:28:00.370
including code samples
that you can try out.

00:28:00.370 --> 00:28:02.647
So this concludes our talk.

00:28:02.647 --> 00:28:03.980
Thank you, everyone, for coming.

00:28:06.470 --> 00:28:12.734
[MUSIC PLAYING]

