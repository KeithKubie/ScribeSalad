WEBVTT
Kind: captions
Language: en

00:00:01.330 --> 00:00:03.310
SPEAKER: TensorFlow
Debugger, or TFDBG,

00:00:03.310 --> 00:00:06.184
is a specialized runtime
debugger for TensorFlow.

00:00:06.184 --> 00:00:07.600
Using the TensorFlow
debugger, you

00:00:07.600 --> 00:00:09.250
can debug any
running competition

00:00:09.250 --> 00:00:12.470
graphs in TensorFlow with
only two lines of code change.

00:00:12.470 --> 00:00:14.800
This is difficult to achieve
with general debuggers,

00:00:14.800 --> 00:00:17.535
such as GDB or Python's PDB.

00:00:17.535 --> 00:00:19.660
In this video, we're
demonstrating the command line

00:00:19.660 --> 00:00:21.970
interface of TensorFlow
Debugger, which

00:00:21.970 --> 00:00:23.740
provides easy access
to the structure

00:00:23.740 --> 00:00:26.790
and the intermediate states
of a running TensorFlow graph.

00:00:26.790 --> 00:00:30.460
Here, I'm running a sample
code from our tutorials.

00:00:30.460 --> 00:00:33.950
You can find a link to that
tutorial in the description.

00:00:33.950 --> 00:00:35.810
For example, the
interface presents a list

00:00:35.810 --> 00:00:37.340
of intermediate
tensors generated

00:00:37.340 --> 00:00:39.770
during the previous
session.run call.

00:00:39.770 --> 00:00:42.500
You can click node info to
view the type, attributes,

00:00:42.500 --> 00:00:44.570
and other information
about the graph node

00:00:44.570 --> 00:00:46.940
from which the
text was generated.

00:00:46.940 --> 00:00:48.830
To look at the
structure of the graph

00:00:48.830 --> 00:00:51.350
you can click list
inputs or list outputs.

00:00:51.350 --> 00:00:54.230
Those will show the transitive
inbound or outbound tensors

00:00:54.230 --> 00:00:56.020
of the given node.

00:00:56.020 --> 00:00:58.400
You can also use the
conditional breakpoints feature

00:00:58.400 --> 00:01:01.370
of the debugger to let the code
run until a certain condition

00:01:01.370 --> 00:01:03.300
is satisfied on the graph.

00:01:03.300 --> 00:01:05.510
For example, in this case
we will let the model run

00:01:05.510 --> 00:01:08.810
until problematic values, such
as infinities and NaNs, or not

00:01:08.810 --> 00:01:11.510
a number, appear in the graph.

00:01:11.510 --> 00:01:13.310
Once the conditional
breakpoint is hit,

00:01:13.310 --> 00:01:14.990
the interface presents
all the tensors

00:01:14.990 --> 00:01:16.890
that contain the
infinities and NaNs

00:01:16.890 --> 00:01:18.862
in a temporarily sorted order.

00:01:18.862 --> 00:01:20.570
So you can see that
the tensor on the top

00:01:20.570 --> 00:01:23.830
is the culprit tensor, namely,
the tensor that first produced

00:01:23.830 --> 00:01:25.642
the infinities or NaNs.

00:01:25.642 --> 00:01:27.350
You can click the
tensor to see its value

00:01:27.350 --> 00:01:29.390
and use regular
expression search

00:01:29.390 --> 00:01:33.150
to locate the indices of
the infinities and NaNs.

00:01:33.150 --> 00:01:34.610
The TensorFlow
Debugger also allows

00:01:34.610 --> 00:01:36.380
you to step through
nodes of the graph one

00:01:36.380 --> 00:01:38.840
by one, in a way
that is analogous

00:01:38.840 --> 00:01:42.782
to procedural language
debuggers such as GDB and PDB.

00:01:42.782 --> 00:01:44.240
To step through
nodes of the graph,

00:01:44.240 --> 00:01:46.250
we can use the command
S, which stands

00:01:46.250 --> 00:01:49.370
for step, as we are doing here.

00:01:49.370 --> 00:01:51.020
While you're stepping
through the graph

00:01:51.020 --> 00:01:54.350
you can use the command Inject
to modify the value of a given

00:01:54.350 --> 00:01:57.350
tensor while preserving the
values of all the other tensors

00:01:57.350 --> 00:01:58.820
in a graph.

00:01:58.820 --> 00:02:02.290
After the value injection, you
can keep stepping in the graph.

00:02:02.290 --> 00:02:04.830
The stepping mode can be a
powerful tool for diagnosing

00:02:04.830 --> 00:02:06.340
certain motor issues.

00:02:06.340 --> 00:02:09.060
For example, if you suspect
that a specific tensor,

00:02:09.060 --> 00:02:11.550
like a high learning
rate or a certain weight

00:02:11.550 --> 00:02:13.590
causes issues in a
specific run, you

00:02:13.590 --> 00:02:16.050
can change its value while
leaving all other tensors

00:02:16.050 --> 00:02:19.280
untouched, and observe
the difference it makes.

00:02:19.280 --> 00:02:21.360
To get started with
TensorFlow Debugger,

00:02:21.360 --> 00:02:24.040
please check out the
links in the description.

00:02:24.040 --> 00:02:25.910
Thanks very much.

