WEBVTT
Kind: captions
Language: en

00:00:04.940 --> 00:00:06.870
STEVEN GRAY: I'm Steven Gray.

00:00:06.870 --> 00:00:11.095
I am a post doctoral
researcher and a PhD candidate

00:00:11.095 --> 00:00:14.140
at University College London.

00:00:14.140 --> 00:00:18.085
I'm also a Google
Developer Expert.

00:00:18.085 --> 00:00:20.754
Anyone know what Google
Developer Experts are?

00:00:20.754 --> 00:00:21.670
AUDIENCE: [INAUDIBLE].

00:00:21.670 --> 00:00:21.970
STEVEN GRAY: Yeah.

00:00:21.970 --> 00:00:22.470
Great.

00:00:22.470 --> 00:00:26.620
So Google Developer Experts
are basically developers.

00:00:26.620 --> 00:00:29.578
I like to think of them as
the developer's developer.

00:00:29.578 --> 00:00:32.119
When a developer doesn't have
an answer to a problem with one

00:00:32.119 --> 00:00:33.990
of the Google stack,
they'll come to us

00:00:33.990 --> 00:00:35.400
and we can answer the questions.

00:00:35.400 --> 00:00:37.890
And if we can't
answer a question,

00:00:37.890 --> 00:00:39.540
we know someone who can.

00:00:39.540 --> 00:00:43.230
So I'm a Developer
Expert in Maps.

00:00:43.230 --> 00:00:45.640
What's really handy is
there are Developer Experts

00:00:45.640 --> 00:00:50.400
for all the different
products that Google has.

00:00:50.400 --> 00:00:53.700
Here is the distribution
of GDEs worldwide.

00:00:53.700 --> 00:00:56.020
There's 82 of them,
and as you see,

00:00:56.020 --> 00:00:59.940
we actually are completely
and utterly worldwide.

00:00:59.940 --> 00:01:00.900
We live here.

00:01:00.900 --> 00:01:03.420
If you ever want to find
an expert for something,

00:01:03.420 --> 00:01:04.980
developers.google.com/experts.

00:01:04.980 --> 00:01:08.142
You can basically find
links to where we are.

00:01:08.142 --> 00:01:09.600
That's basically
what an expert is.

00:01:09.600 --> 00:01:12.740
We basically sit and we
interact with the developers.

00:01:12.740 --> 00:01:14.520
We produce tutorials.

00:01:14.520 --> 00:01:17.280
We produce all sorts
of handy content

00:01:17.280 --> 00:01:20.810
to try and enthuse people
to actually use this stuff.

00:01:20.810 --> 00:01:24.694
I'm Maps, so I really
like some maps.

00:01:24.694 --> 00:01:26.110
So let's take in
a little history.

00:01:26.110 --> 00:01:29.620
This is Google Maps
circa 2005, when

00:01:29.620 --> 00:01:34.100
we had basically the UK sitting
there on its own and the US.

00:01:34.100 --> 00:01:34.910
Great, isn't it?

00:01:34.910 --> 00:01:36.384
Where's the rest of the world?

00:01:36.384 --> 00:01:37.800
And then we fast
forward to today.

00:01:37.800 --> 00:01:41.290
We've actually got the full
map, and actually, even better,

00:01:41.290 --> 00:01:47.030
we've got Street View for a
high proportion of the world.

00:01:47.030 --> 00:01:50.690
And what's interesting-- how
many people have seen maps

00:01:50.690 --> 00:01:53.770
like this around the web?

00:01:53.770 --> 00:01:56.760
How many people think
this is a good map?

00:01:56.760 --> 00:01:57.590
Fantastic.

00:01:57.590 --> 00:01:59.740
This is my pet
peeve in the world--

00:01:59.740 --> 00:02:03.600
basically, maps
with lots of pins.

00:02:03.600 --> 00:02:07.800
Google basically gave developers
skills to put pins on maps,

00:02:07.800 --> 00:02:10.210
and everyone went
and put pins on maps.

00:02:10.210 --> 00:02:14.780
One thing that really gets
me is putting data on maps

00:02:14.780 --> 00:02:16.660
and making them
represent something

00:02:16.660 --> 00:02:18.400
is really, really hard.

00:02:18.400 --> 00:02:21.950
That's why I've still got a job.

00:02:21.950 --> 00:02:23.850
So people may have
noticed-- actually,

00:02:23.850 --> 00:02:25.010
let's do something better.

00:02:25.010 --> 00:02:28.320
This is a true representation
of the Google Developer Experts

00:02:28.320 --> 00:02:31.350
Map where you can actually
see, because all the pins were

00:02:31.350 --> 00:02:36.050
actually on top of each
other over in Japan,

00:02:36.050 --> 00:02:39.170
we actually have a higher
distribution of Japanese GDEs

00:02:39.170 --> 00:02:40.410
than the rest of the world.

00:02:40.410 --> 00:02:42.840
That's one way
maps can lie to us.

00:02:42.840 --> 00:02:45.220
And the reason why
there's more GDEs in Japan

00:02:45.220 --> 00:02:46.720
is that's where the
program started,

00:02:46.720 --> 00:02:49.380
and so it's expanded
from Japan worldwide.

00:02:49.380 --> 00:02:53.920
That's a really good example
of how a map can lie to you.

00:02:53.920 --> 00:02:55.550
It's not just maps
that can lie to you.

00:02:55.550 --> 00:02:56.470
Data can lie to you.

00:02:56.470 --> 00:02:58.170
I'm a data scientist.

00:02:58.170 --> 00:03:01.140
I deal with hundreds and
thousands and millions of rows

00:03:01.140 --> 00:03:03.260
of data every single
day in my job,

00:03:03.260 --> 00:03:07.340
and can everyone see what's
wrong with these graphs

00:03:07.340 --> 00:03:08.296
by any chance?

00:03:08.296 --> 00:03:10.110
AUDIENCE: [INAUDIBLE].

00:03:10.110 --> 00:03:11.610
STEVEN GRAY: Apart
from [INAUDIBLE].

00:03:11.610 --> 00:03:17.780
But basically, they have been
massaged to create a story.

00:03:17.780 --> 00:03:21.020
Actually, if you look at the
distribution between the two,

00:03:21.020 --> 00:03:23.135
the difference between
6 million and 7 million

00:03:23.135 --> 00:03:24.980
isn't a gap of that size.

00:03:24.980 --> 00:03:26.400
It's more like a
gap of that size

00:03:26.400 --> 00:03:27.970
when you take the
access to zero.

00:03:27.970 --> 00:03:30.560
So you can massage
data, and it's

00:03:30.560 --> 00:03:33.370
the same with data on maps.

00:03:33.370 --> 00:03:35.180
I said making maps is hard.

00:03:37.710 --> 00:03:40.990
Can anyone spot the
mistakes in these maps?

00:03:40.990 --> 00:03:44.020
Last time I checked,
London wasn't near Norfolk.

00:03:46.880 --> 00:03:49.650
Cannes is not in Spain.

00:03:49.650 --> 00:03:52.420
These are perfect examples
how it's really easy

00:03:52.420 --> 00:03:56.740
to overlook maps and
actually have data lie to us.

00:03:56.740 --> 00:03:58.750
So that's one of
things I try and do.

00:03:58.750 --> 00:04:04.190
I try to make maps
easier to use and make

00:04:04.190 --> 00:04:07.940
them more representative of
the data actually underneath.

00:04:07.940 --> 00:04:09.610
Again, if you use
heat maps, you have

00:04:09.610 --> 00:04:12.310
to watch for your heat maps,
because most heat maps actually

00:04:12.310 --> 00:04:14.930
just show you
population density.

00:04:14.930 --> 00:04:17.300
So a great XKCD.

00:04:17.300 --> 00:04:19.490
Next thing you go
out and have a look,

00:04:19.490 --> 00:04:25.410
see a map with a nice heat
map giving a story behind it,

00:04:25.410 --> 00:04:27.910
go and check the population
density map first and see

00:04:27.910 --> 00:04:30.243
if there's a correlation,
because nine times out of ten,

00:04:30.243 --> 00:04:32.510
there probably is.

00:04:32.510 --> 00:04:36.610
So back to what is my day job.

00:04:36.610 --> 00:04:39.710
I work in a center called the
Center for Advanced Spatial

00:04:39.710 --> 00:04:42.560
Analysis at UCL,
and we basically

00:04:42.560 --> 00:04:48.461
build tools to make people make
developers put data onto maps

00:04:48.461 --> 00:04:48.960
easier.

00:04:48.960 --> 00:04:52.100
One of the products we built
on top of the Google stack

00:04:52.100 --> 00:04:55.680
in Google Maps is MapTube,
which is a place to put maps.

00:04:55.680 --> 00:04:57.820
You have some data,
you want to make a map,

00:04:57.820 --> 00:05:01.370
you can suck it through this
system and we build a map.

00:05:01.370 --> 00:05:03.310
So underneath everything,
what happens is

00:05:03.310 --> 00:05:07.857
you have a descriptor to
decide what the data is,

00:05:07.857 --> 00:05:09.440
and you have a style,
so you basically

00:05:09.440 --> 00:05:13.940
decide what colors do you
want the map to look like.

00:05:13.940 --> 00:05:20.200
You call it a couple of magical
lines of code, and what happens

00:05:20.200 --> 00:05:24.850
is the system will ingest all
that data and, as if by magic,

00:05:24.850 --> 00:05:27.210
give you out map
tiles on top of it.

00:05:27.210 --> 00:05:29.920
It's a really simple system
to actually get data on maps,

00:05:29.920 --> 00:05:33.480
and a really powerful
system called MapTube.

00:05:33.480 --> 00:05:38.210
It's not just we sit on top of
the standard web Google Maps.

00:05:38.210 --> 00:05:41.350
We actually built it
for mobile phones.

00:05:41.350 --> 00:05:45.852
What's interesting enough, we
built it on Android and iOS,

00:05:45.852 --> 00:05:47.810
but there were no libraries
when we came around

00:05:47.810 --> 00:05:49.726
to actually doing this
on iOS, and it actually

00:05:49.726 --> 00:05:53.080
took three months of my
take just one developer,

00:05:53.080 --> 00:05:58.350
to actually put a single map
onto the mobile application.

00:05:58.350 --> 00:06:01.590
Now, with some of the tools
that Google have made in the iOS

00:06:01.590 --> 00:06:05.810
SDK, it takes four
lines of code.

00:06:05.810 --> 00:06:08.200
Basically, my
three months of job

00:06:08.200 --> 00:06:12.020
can now be replaced
by four lines of code.

00:06:12.020 --> 00:06:14.780
And so we took this
premise, how can we

00:06:14.780 --> 00:06:20.660
get people to put data onto
maps and visualize the maps more

00:06:20.660 --> 00:06:22.480
interestingly than
just a pin in the map?

00:06:22.480 --> 00:06:25.020
And we built this application
called SurveyMapper.

00:06:25.020 --> 00:06:29.220
SurveyMapper allows
anybody to set up a survey,

00:06:29.220 --> 00:06:31.080
distribute it to
the people that they

00:06:31.080 --> 00:06:34.670
care about-- their
groups, their whatever,

00:06:34.670 --> 00:06:37.410
or just give it out to the world
and ask people for responses.

00:06:37.410 --> 00:06:39.920
And we build what's called a
chloropeth map, which is just

00:06:39.920 --> 00:06:44.960
basically densities of different
answers in different areas.

00:06:44.960 --> 00:06:47.670
This is a post
code map of the UK.

00:06:47.670 --> 00:06:49.840
This map actually got
me into lots of trouble

00:06:49.840 --> 00:06:55.050
because apparently
certain suppliers

00:06:55.050 --> 00:06:57.940
don't like you to know what
your neighbors' broadband speeds

00:06:57.940 --> 00:07:00.690
are, so that caused
a bit of controversy.

00:07:00.690 --> 00:07:03.540
There was a little
academic institution

00:07:03.540 --> 00:07:06.560
being told by the big boys,
can you take your map offline,

00:07:06.560 --> 00:07:08.540
because we don't
want your neighbors

00:07:08.540 --> 00:07:10.390
to know what speed
you're getting.

00:07:10.390 --> 00:07:12.230
We had comments all
the way down in this,

00:07:12.230 --> 00:07:15.550
which I've hidden,
where it was saying,

00:07:15.550 --> 00:07:19.150
my neighbor has got 10
megabytes per second.

00:07:19.150 --> 00:07:20.430
Why am I only getting two?

00:07:20.430 --> 00:07:22.150
There was a whole
lot of arguments.

00:07:22.150 --> 00:07:23.900
This is one of the
more controversial maps

00:07:23.900 --> 00:07:24.530
that we made.

00:07:24.530 --> 00:07:27.970
But interestingly, we're giving
the power out to the user

00:07:27.970 --> 00:07:30.865
to allow them to set up a
survey and ask questions that

00:07:30.865 --> 00:07:34.620
are interesting to them and
try and get the answers back.

00:07:34.620 --> 00:07:35.890
I think we did good.

00:07:35.890 --> 00:07:39.450
We've experimented, how
do we ask these questions?

00:07:39.450 --> 00:07:45.080
We've used interfaces
like Xbox Kinect

00:07:45.080 --> 00:07:47.110
to allow them to
slide the question

00:07:47.110 --> 00:07:49.570
and that would answer
it for that location.

00:07:49.570 --> 00:07:52.375
We've worked with museums and
we've worked with retail stores

00:07:52.375 --> 00:07:54.720
to actually put these
kiosks in and allow people

00:07:54.720 --> 00:07:56.660
to quickly answer
just by hand gestures.

00:07:56.660 --> 00:07:58.480
They just wave at
the system, and then

00:07:58.480 --> 00:08:00.896
they slide their answer, and
it puts it into SurveyMapper.

00:08:00.896 --> 00:08:01.910
So we built these.

00:08:01.910 --> 00:08:04.080
Behind the scenes, you
have all these tools just

00:08:04.080 --> 00:08:08.360
to simplify actually
putting data onto maps.

00:08:08.360 --> 00:08:10.460
We also built a
system called Gemma.

00:08:10.460 --> 00:08:12.520
Gemma is a little
friendly gerbil.

00:08:12.520 --> 00:08:14.520
Again, trying to make
it fun and interesting.

00:08:14.520 --> 00:08:17.340
What we've done is we took
the power of Google Maps

00:08:17.340 --> 00:08:20.840
and the Places API, which is a
way to get business addresses

00:08:20.840 --> 00:08:23.880
and whatnot, and the data
from OpenStreetMap, which

00:08:23.880 --> 00:08:29.940
is an open source version of
map data that we can access,

00:08:29.940 --> 00:08:33.159
and fused them all together
into one system where

00:08:33.159 --> 00:08:36.500
you can basically bring a
map together and print it out

00:08:36.500 --> 00:08:37.309
for reports.

00:08:37.309 --> 00:08:39.820
So for example, this
is the distribution

00:08:39.820 --> 00:08:44.680
of bus stops in blue with
where people commute.

00:08:44.680 --> 00:08:47.190
The layer hasn't come out
very well, but in the back

00:08:47.190 --> 00:08:49.940
you have different
areas from the census

00:08:49.940 --> 00:08:52.720
data of how people
[INAUDIBLE] commuting,

00:08:52.720 --> 00:08:54.700
and the distribution
with their bus stop.

00:08:54.700 --> 00:08:58.070
So again, we've fused this
together on top of Google Maps

00:08:58.070 --> 00:09:02.190
to actually allow people
to print out these maps.

00:09:02.190 --> 00:09:05.790
Also, we've put a
mobile aspect on it.

00:09:05.790 --> 00:09:09.040
We identified very early a
lot of geography students

00:09:09.040 --> 00:09:11.800
have to go out and
actually count things,

00:09:11.800 --> 00:09:13.676
so we built a nice
phone app to allow

00:09:13.676 --> 00:09:15.910
them to go out and count things.

00:09:15.910 --> 00:09:18.080
They select what they're
wanting to count.

00:09:18.080 --> 00:09:20.550
They get four little
boxes, or up to, I

00:09:20.550 --> 00:09:23.620
think it's eight different
counting squares.

00:09:23.620 --> 00:09:25.465
If you want to go
out and count cars,

00:09:25.465 --> 00:09:27.090
you can represent each of them.

00:09:27.090 --> 00:09:28.735
And that moves that
data straight up

00:09:28.735 --> 00:09:32.420
into Fusion Tables, up
into Google Spreadsheets,

00:09:32.420 --> 00:09:34.190
and then allows you
to have the data.

00:09:34.190 --> 00:09:35.760
So you have that data.

00:09:35.760 --> 00:09:37.960
The data belongs
to you, and then

00:09:37.960 --> 00:09:40.240
you visualize it
back into Gemma.

00:09:40.240 --> 00:09:42.950
Again, allowing people to go
out, collect the data that's

00:09:42.950 --> 00:09:46.040
important to them, and collect
it in a group of people,

00:09:46.040 --> 00:09:48.610
come back onto the
map and distribute it

00:09:48.610 --> 00:09:53.280
via reports, PDFs,
whatever, or a nice web map.

00:09:53.280 --> 00:09:56.080
Again, we do this using
the MapTube libraries

00:09:56.080 --> 00:09:58.730
and a couple of
simple lines of code.

00:09:58.730 --> 00:10:00.880
There goes a heat
map from what looks

00:10:00.880 --> 00:10:02.630
like about two lines of code.

00:10:02.630 --> 00:10:08.130
And actually, as of about four
weeks ago, that's now redundant

00:10:08.130 --> 00:10:11.140
because Google now just
built a visualization library

00:10:11.140 --> 00:10:13.140
to make it even simple
to make a heat map, which

00:10:13.140 --> 00:10:15.440
was the original heat map
that I just showed you.

00:10:15.440 --> 00:10:17.590
Again, you can build these
chloropeth maps really

00:10:17.590 --> 00:10:22.160
easily just by giving a data
file and sending it back in.

00:10:22.160 --> 00:10:25.800
So what's the point to all this?

00:10:25.800 --> 00:10:28.480
One of the things about
collecting data and getting

00:10:28.480 --> 00:10:32.730
data, my research at
university is looking at,

00:10:32.730 --> 00:10:36.427
how do we collect data
on a massive scale?

00:10:36.427 --> 00:10:38.260
I built this thing
called the Twitter Meter.

00:10:38.260 --> 00:10:40.500
Twitter Meter basically
collects data from Twitter

00:10:40.500 --> 00:10:46.476
and allows you to
collect the data

00:10:46.476 --> 00:10:48.440
and basically try
and understand how

00:10:48.440 --> 00:10:51.870
we use the city, how we use
the world through social media.

00:10:51.870 --> 00:10:56.160
I built this in
about five minutes

00:10:56.160 --> 00:10:58.220
as just a simple
visualization to see

00:10:58.220 --> 00:11:02.804
what my single server was
doing when I wasn't looking

00:11:02.804 --> 00:11:04.970
at it to make sure it was
still running because when

00:11:04.970 --> 00:11:06.719
I originally built it,
it was a bit flaky.

00:11:06.719 --> 00:11:08.000
It was going up and down.

00:11:11.222 --> 00:11:18.610
It ended up being 16 dials using
Google visualization tools that

00:11:18.610 --> 00:11:21.560
just basically sit and tell
me how many tweets per minute

00:11:21.560 --> 00:11:23.200
are coming into the system.

00:11:23.200 --> 00:11:24.550
Now, this is just for me.

00:11:24.550 --> 00:11:27.060
I built this for
me and no one else.

00:11:27.060 --> 00:11:30.620
It turns out that
people quite liked

00:11:30.620 --> 00:11:34.110
the idea of turning digital
data into analog data,

00:11:34.110 --> 00:11:35.700
so we built a couple
of meters that we

00:11:35.700 --> 00:11:38.340
had spare in one of
my colleague's sheds.

00:11:38.340 --> 00:11:39.860
We put it together
and we actually

00:11:39.860 --> 00:11:41.680
made an analog version.

00:11:41.680 --> 00:11:44.140
This ended up going into
the British Library.

00:11:44.140 --> 00:11:45.900
The British Library
said, this is amazing.

00:11:45.900 --> 00:11:48.172
Can we have it in our
Growing Knowledge exhibition?

00:11:48.172 --> 00:11:49.130
We're like, yeah, sure.

00:11:49.130 --> 00:11:50.670
It's just looking at my server.

00:11:50.670 --> 00:11:54.674
It's just making sure that I'm
getting data from my research.

00:11:54.674 --> 00:11:57.550
Why do you want that
in your exhibition?

00:11:57.550 --> 00:11:58.870
And that was all right.

00:11:58.870 --> 00:12:00.850
And then something
kind of crazy happened.

00:12:04.720 --> 00:12:08.880
Basically, during
the Japanese tsunami,

00:12:08.880 --> 00:12:12.320
CNN picked up-- don't
know if we can hear it--

00:12:12.320 --> 00:12:15.080
but basically used it in their
reports for the whole thing.

00:12:15.080 --> 00:12:18.340
So we went from something
that took five minutes to have

00:12:18.340 --> 00:12:23.310
global exposure and was
used in a time of crisis.

00:12:23.310 --> 00:12:26.067
It was really actually very
interesting because just

00:12:26.067 --> 00:12:29.400
from the tweets, we could
see the actual distribution

00:12:29.400 --> 00:12:33.330
of messages going from one
side of the ocean to the other.

00:12:33.330 --> 00:12:37.610
For example, people were worried
about the tsunami wave going

00:12:37.610 --> 00:12:40.450
to hit San Francisco,
so they were tweeting.

00:12:40.450 --> 00:12:43.010
And when the wave came past
Honolulu, people in Hawaii

00:12:43.010 --> 00:12:44.440
were like, we're
absolutely fine.

00:12:44.440 --> 00:12:44.940
It's great.

00:12:44.940 --> 00:12:45.620
Don't worry.

00:12:45.620 --> 00:12:46.150
It's fine.

00:12:46.150 --> 00:12:47.650
So you could actually
see the spikes

00:12:47.650 --> 00:12:51.045
of data coming over
Honolulu and coming over

00:12:51.045 --> 00:12:54.905
as the world woke up to
actually hear the news.

00:12:54.905 --> 00:12:57.070
So that was something
where we took

00:12:57.070 --> 00:13:00.090
a very simple virtualization,
but it had real impact,

00:13:00.090 --> 00:13:07.192
and that's one thing that
I'm really engaged about.

00:13:07.192 --> 00:13:08.150
But we had a big issue.

00:13:08.150 --> 00:13:10.740
Once we got all this
media attention,

00:13:10.740 --> 00:13:12.940
Stephen Fry, who
some of you might

00:13:12.940 --> 00:13:19.160
know has 3, 4 million
followers, and Alyssa Milano,

00:13:19.160 --> 00:13:20.400
basically tweeted us.

00:13:20.400 --> 00:13:23.670
And we basically on our
severs got something

00:13:23.670 --> 00:13:27.240
like 12 million hits in
the space of four or five

00:13:27.240 --> 00:13:30.550
hours, which was
absolutely insane.

00:13:30.550 --> 00:13:32.950
We had to very
carefully work out

00:13:32.950 --> 00:13:34.720
how we're going to
keep our single server

00:13:34.720 --> 00:13:36.610
in our academic covered.

00:13:36.610 --> 00:13:41.200
It's basically manned
by me and my colleague.

00:13:41.200 --> 00:13:42.250
How do we actually build?

00:13:42.250 --> 00:13:44.240
So we had to actually
build a better system,

00:13:44.240 --> 00:13:46.350
and this is where we went.

00:13:46.350 --> 00:13:50.020
We went from a system where we
had one or two machines going

00:13:50.020 --> 00:13:54.930
in that rack, and then we
scaled it up to the UCL system.

00:13:54.930 --> 00:13:56.850
But then we found
the UCL system,

00:13:56.850 --> 00:13:59.060
we have a bit of a problem.

00:13:59.060 --> 00:14:02.290
We have to share it with other
researchers, unfortunately.

00:14:02.290 --> 00:14:03.760
One thing you learn
about academics

00:14:03.760 --> 00:14:06.730
very quickly is we
don't like to share,

00:14:06.730 --> 00:14:09.350
so we had to think of a
better way of doing this.

00:14:09.350 --> 00:14:11.350
We decided to scale it up again.

00:14:11.350 --> 00:14:14.160
This is one of
Google's data centers

00:14:14.160 --> 00:14:18.655
with their expert security
solution sitting there.

00:14:18.655 --> 00:14:20.280
But basically, we
had to think of a way

00:14:20.280 --> 00:14:22.510
of, how do we scale this up?

00:14:22.510 --> 00:14:26.490
So we used Google Compute
Engine and the cloud

00:14:26.490 --> 00:14:30.280
to basically fire up
machines to collect data

00:14:30.280 --> 00:14:31.580
from all over the UK.

00:14:31.580 --> 00:14:35.430
So what you have here
is each post code

00:14:35.430 --> 00:14:43.170
data in the UK being served
by one compute engine, and one

00:14:43.170 --> 00:14:44.785
component of code
that we have that

00:14:44.785 --> 00:14:47.120
we wrote to collect this data
from social media networks

00:14:47.120 --> 00:14:48.180
and fuse it together.

00:14:48.180 --> 00:14:50.410
We tell it to run,
and you see it just

00:14:50.410 --> 00:14:52.520
it spun up from the whole.

00:14:52.520 --> 00:14:55.730
This is over 20 minutes
where we spun up

00:14:55.730 --> 00:14:58.790
650 machines for
the whole of the UK,

00:14:58.790 --> 00:15:02.020
and then collected
for a period of time--

00:15:02.020 --> 00:15:06.090
I think it was two hours--
and then spun them down again.

00:15:06.090 --> 00:15:08.510
We went from collecting
just from one machine

00:15:08.510 --> 00:15:15.060
maybe 1.4 million Twitter
messages over a weekend

00:15:15.060 --> 00:15:18.880
to actually having a
database of something

00:15:18.880 --> 00:15:23.840
like 36 million tweets
over three hours.

00:15:23.840 --> 00:15:29.310
So we basically had scaled
up very, very quickly

00:15:29.310 --> 00:15:33.850
using the tools that you
developers can actually

00:15:33.850 --> 00:15:36.050
use within the Google stack.

00:15:39.090 --> 00:15:42.470
We did some visualizations, and
what's really interesting from

00:15:42.470 --> 00:15:45.780
these visualizations from this
is you can actually tell from

00:15:45.780 --> 00:15:48.250
the fusion of social
media-- so this is Facebook,

00:15:48.250 --> 00:15:53.214
this is Google+, this is Twitter
data with a geospatial aspect

00:15:53.214 --> 00:15:55.630
to it-- you can actually start
to see how we use the city.

00:15:55.630 --> 00:15:57.480
If you look at the
top corner, that's

00:15:57.480 --> 00:16:00.560
actually roadworks between
Rickmansworth and Wofford

00:16:00.560 --> 00:16:01.570
for the period of time.

00:16:01.570 --> 00:16:05.630
So people were sitting there
saying, why am I in traffic?

00:16:05.630 --> 00:16:06.550
This is crazy.

00:16:06.550 --> 00:16:08.600
We also did some really
great visualization

00:16:08.600 --> 00:16:13.590
to prove that basically
people use their mobile phones

00:16:13.590 --> 00:16:15.410
on the runway of
airports when they're

00:16:15.410 --> 00:16:18.910
told to switch their
mobile phones off.

00:16:18.910 --> 00:16:20.970
We've got concurrent
proof of that.

00:16:20.970 --> 00:16:23.210
We can actually
show that on a map

00:16:23.210 --> 00:16:26.920
where we've got a whole
concentration of data

00:16:26.920 --> 00:16:28.474
of people tweeting
on the runway.

00:16:28.474 --> 00:16:30.640
So unless people are actually
standing on the runway

00:16:30.640 --> 00:16:32.830
tweeting, then we actually
know they're actually

00:16:32.830 --> 00:16:34.070
using their phones.

00:16:34.070 --> 00:16:36.410
We can use these
tools and these data

00:16:36.410 --> 00:16:42.071
to actually tell a compelling
story of how we use our city.

00:16:42.071 --> 00:16:42.570
That's me.

00:16:42.570 --> 00:16:45.850
If you want to get in contact,
I'm Steven Gray on Google+,

00:16:45.850 --> 00:16:48.360
and there's my website.

00:16:48.360 --> 00:16:49.180
There you go.

00:16:49.180 --> 00:16:50.854
Thank you very much.

00:16:50.854 --> 00:16:54.936
[APPLAUSE]

