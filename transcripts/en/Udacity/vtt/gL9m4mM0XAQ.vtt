WEBVTT
Kind: captions
Language: en

00:00:00.420 --> 00:00:01.410
Here's our overall strategy.

00:00:01.410 --> 00:00:07.830
We're going to take a CNF formula f, and
turn it into a 3 cnf formula f prime,

00:00:07.830 --> 00:00:11.830
which will include some additional
variables, which we'll label y.

00:00:11.830 --> 00:00:15.130
And this formula f prime will
have the property, that, for

00:00:15.130 --> 00:00:17.350
any truth assignment t for f.

00:00:17.350 --> 00:00:19.130
T will satisfy f.

00:00:19.130 --> 00:00:24.190
If and only if there exists a way
of extending t, we'll call this ty,

00:00:24.190 --> 00:00:26.840
over the variables Y,

00:00:26.840 --> 00:00:33.330
such that t extended by ty
satisfies the new clause f prime.

00:00:33.330 --> 00:00:36.090
Let's illustrate such a mapping for
a simple example.

00:00:36.090 --> 00:00:38.590
Take this disjunction of four literals.

00:00:38.590 --> 00:00:43.480
Note that the zi are literals here,
so they could be x1, x1 bar, etc.

00:00:44.930 --> 00:00:47.720
Remember that disjunction
means logical or, so

00:00:47.720 --> 00:00:50.740
this whole clause is true if
any one of the literals is.

00:00:50.740 --> 00:00:55.580
We will map this clause of size
four into two clauses of size three

00:00:55.580 --> 00:00:58.030
by introducing a new variable y,
like so.

00:00:59.140 --> 00:01:00.699
Let's confirm that this property holds.

00:01:01.900 --> 00:01:05.230
If the original clause is true
under some truth assignment,

00:01:05.230 --> 00:01:08.350
then we can set y to be Z1 or Z2.

00:01:08.350 --> 00:01:13.220
This clause will be satisfied
by one of the Zs and

00:01:13.220 --> 00:01:15.410
this one will be satisfied by Y.

00:01:17.170 --> 00:01:18.340
Going the other direction,

00:01:18.340 --> 00:01:22.009
suppose that we have a truth assignment
that satisfies both of these clauses.

00:01:23.310 --> 00:01:25.000
On the one hand, Y might be true.

00:01:26.320 --> 00:01:30.970
But that then implies that Z1 or Z2 is
true, and so this clause must be true.

00:01:32.480 --> 00:01:37.160
On the other hand, Y might be false,
but that then implies that Z3 or

00:01:37.160 --> 00:01:41.350
Z4 is true, and hence this original
clause would be true as well.

00:01:43.240 --> 00:01:44.670
If you've understood this,

00:01:44.670 --> 00:01:47.540
then you've understood the crux
of why this reduction works.

00:01:47.540 --> 00:01:48.380
More details to come.

