WEBVTT
Kind: captions
Language: en

00:00:00.250 --> 00:00:01.090
ADAM CARPENTER: So
as Sarah just said,

00:00:01.090 --> 00:00:03.640
my name is Adam Carpenter, and
I head the Developer Business

00:00:03.640 --> 00:00:05.740
Growth team at Google Play.

00:00:05.740 --> 00:00:08.680
As mobile developers, one of
the most powerful resources

00:00:08.680 --> 00:00:11.320
we have available
to us is our data.

00:00:11.320 --> 00:00:13.700
With data, we can understand
what's happening right now,

00:00:13.700 --> 00:00:15.574
and we can also look
back and try to identify

00:00:15.574 --> 00:00:17.080
why that's occurred.

00:00:17.080 --> 00:00:19.720
Our data lets us identify
problems in the game,

00:00:19.720 --> 00:00:23.530
find solutions, and ultimately
grow our businesses.

00:00:23.530 --> 00:00:25.800
Now, in terms of
this presentation,

00:00:25.800 --> 00:00:28.276
I'm going to talk through
some patterns, some trends,

00:00:28.276 --> 00:00:29.650
and some insights
that we've been

00:00:29.650 --> 00:00:31.900
able to identify with the
data at Google Play in each

00:00:31.900 --> 00:00:33.400
of these three areas.

00:00:33.400 --> 00:00:36.010
Additionally, I'm going to
share a number of key benchmarks

00:00:36.010 --> 00:00:38.470
across them that you can
take back to your teams,

00:00:38.470 --> 00:00:40.660
compare to the data from
your own data warehouse,

00:00:40.660 --> 00:00:42.976
and identify whether there
are problems in your games

00:00:42.976 --> 00:00:44.350
that you can maybe
try and solve.

00:00:46.860 --> 00:00:48.443
Now, to start off,
the first thing I'm

00:00:48.443 --> 00:00:50.190
going to focus on retention.

00:00:50.190 --> 00:00:53.470
And for me, when you think
about installs retention,

00:00:53.470 --> 00:00:56.100
three of those key KPIs
for installs performance

00:00:56.100 --> 00:00:59.670
is the retention number
itself, the buyer conversion

00:00:59.670 --> 00:01:01.890
from your install cohorts,
and the average revenue

00:01:01.890 --> 00:01:02.790
per install.

00:01:02.790 --> 00:01:06.840
But in my mind, retention is the
most fundamental metric for us.

00:01:06.840 --> 00:01:08.760
Because if you can't
retain your players,

00:01:08.760 --> 00:01:09.900
you can't make any money.

00:01:09.900 --> 00:01:11.941
If you can retain them,
you can always figure out

00:01:11.941 --> 00:01:14.400
how to make money off of them.

00:01:14.400 --> 00:01:17.810
And one other note I want to
make for this presentation--

00:01:17.810 --> 00:01:20.000
for the purposes of the
numbers in this section,

00:01:20.000 --> 00:01:21.440
I'm going to call
day 1 retention

00:01:21.440 --> 00:01:23.380
as the day of the user's
first session start

00:01:23.380 --> 00:01:25.010
and day 2 as the next day.

00:01:25.010 --> 00:01:28.460
I know a great many of you tend
to use retention as base zero.

00:01:28.460 --> 00:01:30.650
So if you're used to
thinking that nomenclature,

00:01:30.650 --> 00:01:33.860
just subtract one
from each date.

00:01:33.860 --> 00:01:37.130
To give you some benchmarks
and an understanding of what

00:01:37.130 --> 00:01:39.980
retention looks like-- day 2
retention looks like across

00:01:39.980 --> 00:01:43.980
the top couple hundred
apps on Play, 38%--

00:01:43.980 --> 00:01:45.290
that's the median value.

00:01:45.290 --> 00:01:48.167
And that's a good target to
shoot for and think about it.

00:01:48.167 --> 00:01:50.750
But if you really want to strive
for excellence, if you really

00:01:50.750 --> 00:01:53.810
want to be in the top decile,
shoot for a day 2 retention

00:01:53.810 --> 00:01:56.750
of about 52%.

00:01:56.750 --> 00:01:58.950
Another way to think
of this, though,

00:01:58.950 --> 00:02:02.370
is that our day
2 retention tends

00:02:02.370 --> 00:02:07.060
to range between 22% and 52%.

00:02:07.060 --> 00:02:11.370
But if we flip it around, it
actually means that 48% to 78%

00:02:11.370 --> 00:02:12.840
of the users who
install and play

00:02:12.840 --> 00:02:15.000
our games for the
very first time today

00:02:15.000 --> 00:02:16.800
won't be back tomorrow.

00:02:16.800 --> 00:02:18.576
They just won't come back.

00:02:18.576 --> 00:02:20.200
It's really kind of
a staggering number

00:02:20.200 --> 00:02:22.090
when you think about
how much time and effort

00:02:22.090 --> 00:02:24.550
we devote to creating
our games, how much money

00:02:24.550 --> 00:02:27.730
was spent on acquisition.

00:02:27.730 --> 00:02:29.710
And one of those
questions that I

00:02:29.710 --> 00:02:31.720
had when I was working
on the developer side

00:02:31.720 --> 00:02:33.310
is how can I improve
my retention?

00:02:33.310 --> 00:02:34.697
Is it good enough?

00:02:34.697 --> 00:02:36.280
What I'm hoping to
do here is show you

00:02:36.280 --> 00:02:38.860
some signals that occur
in the very first day that

00:02:38.860 --> 00:02:41.330
can help you understand
whether your retention is good,

00:02:41.330 --> 00:02:43.540
and if it's not,
maybe some things

00:02:43.540 --> 00:02:46.250
to check for to
potentially improve it.

00:02:46.250 --> 00:02:48.979
So when I was on
the developer side,

00:02:48.979 --> 00:02:51.520
and we were looking at installs
performance and the retention

00:02:51.520 --> 00:02:54.370
on the first day, generally
speaking, what we would look at

00:02:54.370 --> 00:02:57.410
is the level that users
got to or the tutorial

00:02:57.410 --> 00:02:59.470
checkpoint that they reached.

00:02:59.470 --> 00:03:02.110
However, those tend to
be game-specific metrics,

00:03:02.110 --> 00:03:04.660
and they're not really useful
for comparing across games.

00:03:04.660 --> 00:03:07.881
Because people level at
wildly different rates

00:03:07.881 --> 00:03:09.130
depending on what the game is.

00:03:09.130 --> 00:03:10.777
Tutorial checkpoints all vary.

00:03:10.777 --> 00:03:12.610
But a metric that we've
been able to develop

00:03:12.610 --> 00:03:14.026
at Google Play,
which is much more

00:03:14.026 --> 00:03:15.580
of an apples-to-apples
comparison,

00:03:15.580 --> 00:03:18.490
looks at the amount of time that
users spend on their first day

00:03:18.490 --> 00:03:21.422
and compares it to the
day 2 retention rates.

00:03:21.422 --> 00:03:23.380
So to give you an idea
of what this looks like,

00:03:23.380 --> 00:03:27.370
broadly across the ecosystem--
and this is for the top 200 IAP

00:03:27.370 --> 00:03:28.165
games--

00:03:28.165 --> 00:03:30.040
you end up with a curve
that looks like this.

00:03:30.040 --> 00:03:32.140
It starts off at,
let's say, maybe

00:03:32.140 --> 00:03:34.360
18-ish percent and
steadily trends

00:03:34.360 --> 00:03:36.550
upwards with each
successive minute played.

00:03:36.550 --> 00:03:38.584
And of course, this makes sense.

00:03:38.584 --> 00:03:40.750
There's a reasonable
assumption that the more people

00:03:40.750 --> 00:03:43.422
play on the first day, the
more likely they are to return,

00:03:43.422 --> 00:03:45.130
since the more they
play, the more likely

00:03:45.130 --> 00:03:47.050
they are to be having fun.

00:03:47.050 --> 00:03:48.970
Where this data gets
a bit interesting

00:03:48.970 --> 00:03:51.670
is when we actually take those
top couple of hundred games

00:03:51.670 --> 00:03:53.266
and break them out
into quartiles.

00:03:53.266 --> 00:03:54.640
And so what we're
looking at here

00:03:54.640 --> 00:03:56.680
is the top couple of
hundred games broken out

00:03:56.680 --> 00:03:59.720
based on their day 2 retention.

00:03:59.720 --> 00:04:01.360
What we can actually
see is that,

00:04:01.360 --> 00:04:03.670
by and large, each
of these quartiles

00:04:03.670 --> 00:04:05.500
exhibits largely
the same pattern

00:04:05.500 --> 00:04:07.116
after the first 10 minutes.

00:04:07.116 --> 00:04:08.740
They all curve upwards
and to the right

00:04:08.740 --> 00:04:10.122
with a
steadily-decreasing slope.

00:04:10.122 --> 00:04:12.580
But it's in the first 10 minutes
where the most interesting

00:04:12.580 --> 00:04:14.440
stuff starts to emerge.

00:04:14.440 --> 00:04:17.260
Zooming into that,
we can see here

00:04:17.260 --> 00:04:19.990
that there's very different
shapes and experiences

00:04:19.990 --> 00:04:22.720
and patterns that emerge just
within that first 10-minute

00:04:22.720 --> 00:04:23.870
window.

00:04:23.870 --> 00:04:27.700
The top quartile--
the green line here--

00:04:27.700 --> 00:04:29.870
they start out strong and
just steadily increase.

00:04:29.870 --> 00:04:31.870
But the blue line, the
second quartile down, you

00:04:31.870 --> 00:04:34.394
actually see this
short, 90-second window

00:04:34.394 --> 00:04:36.310
where retention is largely
flat, and only then

00:04:36.310 --> 00:04:37.432
does it begin to pick up.

00:04:37.432 --> 00:04:39.640
And that pattern actually
increases once you get down

00:04:39.640 --> 00:04:41.050
to the third quartile.

00:04:41.050 --> 00:04:44.230
This particular line
here looking at the--

00:04:44.230 --> 00:04:46.272
yeah, a quarter of
those top games--

00:04:46.272 --> 00:04:48.730
that shows retention is largely
flat for the fourth minute.

00:04:48.730 --> 00:04:50.920
But in a number of
games I've looked at,

00:04:50.920 --> 00:04:52.960
you can actually see that
flat period extend out

00:04:52.960 --> 00:04:54.340
all the way to 10 minutes.

00:04:54.340 --> 00:04:56.673
And then once we get into the
bottom quartile, the worst

00:04:56.673 --> 00:04:59.230
performers, you can actually
see retention decline

00:04:59.230 --> 00:05:03.170
across the first few minutes
and only then begin to rise.

00:05:03.170 --> 00:05:06.100
So to give you some
context and understand just

00:05:06.100 --> 00:05:09.252
how impactful this first
five or 10 minutes is,

00:05:09.252 --> 00:05:10.960
what I want to look
at is the performance

00:05:10.960 --> 00:05:14.710
of the top quartile, the green
line, the best performers,

00:05:14.710 --> 00:05:17.260
versus the fourth quartile,
the red line here.

00:05:17.260 --> 00:05:19.630
And what this graph
shows is the amount

00:05:19.630 --> 00:05:22.510
of time played on the
first day on the x-axis

00:05:22.510 --> 00:05:27.180
and the cumulative percent of
lost players on the y-axis.

00:05:27.180 --> 00:05:29.090
So looking at that
fourth quartile,

00:05:29.090 --> 00:05:32.840
they actually lose 46%
of their new installs

00:05:32.840 --> 00:05:36.410
by the fifth minute, and they
lose 58% of their installs

00:05:36.410 --> 00:05:38.170
by minute 10.

00:05:38.170 --> 00:05:39.730
Basically, that
fourth quartile--

00:05:39.730 --> 00:05:42.160
and these are all really
strongly-performing games--

00:05:42.160 --> 00:05:45.950
half of their players don't even
last 10 minutes in the game.

00:05:45.950 --> 00:05:50.300
In contrast, the top
quartile, the best performers,

00:05:50.300 --> 00:05:54.200
they see only 17% of their
users lost at minute five

00:05:54.200 --> 00:05:57.610
and only 24% of their
users lost at minute 10.

00:05:57.610 --> 00:06:01.554
Now, think of this from your own
game and your own perspective.

00:06:01.554 --> 00:06:03.720
What could you do if you
were in the bottom quartile

00:06:03.720 --> 00:06:05.610
to move your retention
up and effectively

00:06:05.610 --> 00:06:08.400
be able to retain over
twice as many users on day 2

00:06:08.400 --> 00:06:10.290
and all of the following
retention days?

00:06:10.290 --> 00:06:11.970
How much would
that help your DAU,

00:06:11.970 --> 00:06:14.882
and how much would that
improve your revenue?

00:06:14.882 --> 00:06:16.340
Two of the
anti-patterns that we've

00:06:16.340 --> 00:06:18.500
been able to identify
in Google Play's data

00:06:18.500 --> 00:06:20.540
are what I've started
dubbing "the flats."

00:06:20.540 --> 00:06:22.640
What we see here is
largely flat retention

00:06:22.640 --> 00:06:25.490
that persists for the first five
to 10 minutes, and only then

00:06:25.490 --> 00:06:26.764
does it begin to rise.

00:06:26.764 --> 00:06:28.430
And the other one
that we've identified,

00:06:28.430 --> 00:06:29.730
I'm calling it "the gorge."

00:06:29.730 --> 00:06:31.450
Here is where we
actually see retention

00:06:31.450 --> 00:06:33.200
falling for the first
couple of minutes

00:06:33.200 --> 00:06:34.759
and only then beginning to rise.

00:06:34.759 --> 00:06:36.800
So these are two patterns
that are worth checking

00:06:36.800 --> 00:06:37.944
for in your own game data.

00:06:37.944 --> 00:06:39.860
Get your data teams, get
your data scientists,

00:06:39.860 --> 00:06:42.650
get your business analysts
to actually pull this and see

00:06:42.650 --> 00:06:44.690
what your game is looking like.

00:06:44.690 --> 00:06:46.982
And if you do find that this
is occurring in your game,

00:06:46.982 --> 00:06:48.398
here's some things
to think about.

00:06:48.398 --> 00:06:50.090
Because all of these
have adverse impact

00:06:50.090 --> 00:06:52.430
on that first five to
10-minute experience.

00:06:52.430 --> 00:06:55.040
Large secondary
downloads, especially

00:06:55.040 --> 00:06:56.930
if users are on a
strong Wi-Fi connection,

00:06:56.930 --> 00:06:59.270
are going to cause them to
bounce out of your game.

00:06:59.270 --> 00:07:01.790
Likewise, if your
tutorials aren't fun,

00:07:01.790 --> 00:07:04.910
if they aren't representative
of what the game really is,

00:07:04.910 --> 00:07:06.480
that can alienate players.

00:07:06.480 --> 00:07:08.870
And additionally,
slow loading times

00:07:08.870 --> 00:07:11.570
are important to consider,
because your new users are not

00:07:11.570 --> 00:07:12.750
yet invested in their game.

00:07:12.750 --> 00:07:15.830
So if they experience a lot
of slow loading screens,

00:07:15.830 --> 00:07:18.290
they're more likely to
quit out and go to a game

00:07:18.290 --> 00:07:20.572
that loads in near real time.

00:07:20.572 --> 00:07:23.030
And finally, I would say think
about your lobby experience.

00:07:23.030 --> 00:07:24.440
If a user coming
out of the tutorial

00:07:24.440 --> 00:07:26.315
doesn't know how to get
back into the action,

00:07:26.315 --> 00:07:28.790
how to start building their
base, or how to have fun,

00:07:28.790 --> 00:07:30.415
they're probably
going to get confused,

00:07:30.415 --> 00:07:32.930
and they're probably
going to leave.

00:07:32.930 --> 00:07:36.484
Moving on to engagement, if
you think about what most of us

00:07:36.484 --> 00:07:37.900
want-- and I
certainly wanted this

00:07:37.900 --> 00:07:39.160
when I was working on
the developer side--

00:07:39.160 --> 00:07:40.780
is we always want more users.

00:07:40.780 --> 00:07:43.360
Since the more uses we have
gives us greater ability

00:07:43.360 --> 00:07:46.300
to monetize during our supply
side sales and our demand side

00:07:46.300 --> 00:07:50.230
events, it also allows us, if
we're showing ads in the game,

00:07:50.230 --> 00:07:53.050
to show ads to a significantly
great number of users.

00:07:53.050 --> 00:07:54.880
And in addition to
increasing our DAU,

00:07:54.880 --> 00:07:57.280
we also want to maximize
our DAU/MAU ratio,

00:07:57.280 --> 00:07:59.632
since the higher that is, it
means that fewer users are

00:07:59.632 --> 00:08:01.840
churning out of the game
and that they're coming back

00:08:01.840 --> 00:08:04.710
every single day.

00:08:04.710 --> 00:08:08.070
In an ideal world, our DAU
would be equal to our MAU,

00:08:08.070 --> 00:08:10.370
meaning that nobody would
ever churn out of the game.

00:08:10.370 --> 00:08:11.910
They'd come back
every single day.

00:08:11.910 --> 00:08:14.310
But we know that
this isn't the case.

00:08:14.310 --> 00:08:16.080
Veteran players churn
out of the game.

00:08:16.080 --> 00:08:18.990
New installs churn out
because of poor retention.

00:08:18.990 --> 00:08:22.200
Even our frequent users don't
come back each and every day

00:08:22.200 --> 00:08:25.780
due to a lack of strong
return mechanics.

00:08:25.780 --> 00:08:27.806
And so there's two
common stickiness metrics

00:08:27.806 --> 00:08:29.180
that a lot of
developers look at.

00:08:29.180 --> 00:08:32.919
And these are the DAU/WAU
ratio and the DAU/MAU ratio.

00:08:32.919 --> 00:08:34.659
And to give you some
ideas about what

00:08:34.659 --> 00:08:37.870
you should shoot for,
55% for a DAU/WAU ratio

00:08:37.870 --> 00:08:40.690
puts you right at the median,
so that's a good starting place.

00:08:40.690 --> 00:08:44.680
And 31% for that DAU/MAU ratio
is, again, a good starting

00:08:44.680 --> 00:08:46.070
place to shoot for.

00:08:46.070 --> 00:08:48.430
But ideally, you want to
be much better than that.

00:08:48.430 --> 00:08:50.555
And something to consider
when you're looking at it

00:08:50.555 --> 00:08:53.770
and trying to
improve these ratios

00:08:53.770 --> 00:08:57.380
is actually the relationship
between the two of them.

00:08:57.380 --> 00:09:00.220
This is a plot that I had never
done on the developer side

00:09:00.220 --> 00:09:02.230
because I didn't really
have enough data points.

00:09:02.230 --> 00:09:04.540
But in leveraging
the Google Play data,

00:09:04.540 --> 00:09:05.630
I was able to create this.

00:09:05.630 --> 00:09:09.190
And what it does is it has the
DAU/WAU ratio on the x-axis

00:09:09.190 --> 00:09:11.061
and the DAU/MAU
ratio on the y-axis.

00:09:11.061 --> 00:09:13.060
And what we can actually
see is this very strong

00:09:13.060 --> 00:09:15.461
linear relationship
between the two.

00:09:15.461 --> 00:09:16.960
And what this helps
us to understand

00:09:16.960 --> 00:09:19.300
is that if we want to increase
our monthly active users

00:09:19.300 --> 00:09:21.760
and our monthly
uniques, we can actually

00:09:21.760 --> 00:09:24.730
start not by testing
changes that function over

00:09:24.730 --> 00:09:26.890
an entire month, but
test changes that

00:09:26.890 --> 00:09:28.374
work in seven-day intervals.

00:09:28.374 --> 00:09:29.915
And one of the big
advantages to this

00:09:29.915 --> 00:09:32.230
is we don't have to wait
28 to 30 days before we

00:09:32.230 --> 00:09:33.700
start getting results back.

00:09:33.700 --> 00:09:36.090
We can actually see results
coming back in seven days.

00:09:36.090 --> 00:09:38.770
And effectively, within
any given window of time,

00:09:38.770 --> 00:09:40.450
we can run four times
as many test tests

00:09:40.450 --> 00:09:43.600
if we're focusing on weekly
versus focusing on monthly.

00:09:43.600 --> 00:09:45.850
But one of the other interesting
things that we can do

00:09:45.850 --> 00:09:48.179
is we can actually
pull it all the way in.

00:09:48.179 --> 00:09:50.470
This is a metric I started
to work with at Google Play.

00:09:50.470 --> 00:09:52.719
It's not something I'd ever
use on the developer side.

00:09:52.719 --> 00:09:56.650
And what it does is it looks
at the percent of today's DAU

00:09:56.650 --> 00:09:57.772
who come back tomorrow.

00:09:57.772 --> 00:09:59.230
And it's just trying
to understand,

00:09:59.230 --> 00:10:03.280
as a loose proxy for churn,
how engaged are our users.

00:10:03.280 --> 00:10:05.160
Now, if we take that
plot from before

00:10:05.160 --> 00:10:07.240
and instead put this
DAU return percent

00:10:07.240 --> 00:10:09.460
on the x-axis and
the DAU/WAU ratio

00:10:09.460 --> 00:10:12.080
on the y-axis, what we
actually see is that,

00:10:12.080 --> 00:10:14.580
again, it's positive and linear.

00:10:14.580 --> 00:10:16.450
And what this tells
us is that if we

00:10:16.450 --> 00:10:18.239
want to increase our
stickiness factors,

00:10:18.239 --> 00:10:19.780
the most important
thing for us to do

00:10:19.780 --> 00:10:21.940
is start focusing
at the daily rate.

00:10:21.940 --> 00:10:23.270
It's hugely important.

00:10:23.270 --> 00:10:24.850
And it's advantageous
because, if you

00:10:24.850 --> 00:10:28.390
think about it,
weekly versus monthly,

00:10:28.390 --> 00:10:30.510
you can run four
times as many tests.

00:10:30.510 --> 00:10:32.160
Daily versus monthly,
you can run--

00:10:32.160 --> 00:10:33.660
depending on how
you do your month--

00:10:33.660 --> 00:10:35.670
28 or 30 times as many tests.

00:10:35.670 --> 00:10:38.040
And so fundamentally,
the most important thing

00:10:38.040 --> 00:10:40.410
you can do to boost your
active users in your engagement

00:10:40.410 --> 00:10:41.670
is focus on tomorrow.

00:10:41.670 --> 00:10:44.160
Focus on what is actually
going to bring your users back

00:10:44.160 --> 00:10:46.570
and keep them engaged.

00:10:46.570 --> 00:10:48.660
Now, it's important to
understand and think

00:10:48.660 --> 00:10:51.270
about how do you know if you're
doing well enough, especially

00:10:51.270 --> 00:10:55.360
this new metric that most of you
probably haven't experienced.

00:10:55.360 --> 00:10:58.110
And so here's some
target ratios looking

00:10:58.110 --> 00:11:00.900
across the entire top
couple hundred apps,

00:11:00.900 --> 00:11:04.370
couple hundred IAP apps, that
you can take back and compare.

00:11:04.370 --> 00:11:07.320
And that 77% number--

00:11:07.320 --> 00:11:09.450
that's an important
one to shoot for.

00:11:09.450 --> 00:11:11.407
But really shoot for
that high side, 84%.

00:11:11.407 --> 00:11:13.740
Try to figure out how do you
get your users to come back

00:11:13.740 --> 00:11:15.200
each and every day.

00:11:15.200 --> 00:11:16.320
And a few ideas--

00:11:16.320 --> 00:11:18.270
a few things that are
worth considering--

00:11:18.270 --> 00:11:21.320
are your return mechanics, your
social systems, and your push

00:11:21.320 --> 00:11:24.990
notifications, because all
of these have a huge impact.

00:11:24.990 --> 00:11:28.770
In case of return mechanics,
let's really celebrate them.

00:11:28.770 --> 00:11:31.130
Let's make sure our users
are totally aware of them,

00:11:31.130 --> 00:11:32.955
that the return mechanics
are aspirational,

00:11:32.955 --> 00:11:34.830
that they're rewarding,
that users are really

00:11:34.830 --> 00:11:37.038
strongly incentivized to
come back each and every day

00:11:37.038 --> 00:11:38.230
to receive them.

00:11:38.230 --> 00:11:40.480
In the case of the social
systems, let's really,

00:11:40.480 --> 00:11:41.550
really leverage them.

00:11:41.550 --> 00:11:43.425
Because if you think
about it, the games that

00:11:43.425 --> 00:11:47.430
have very strong clan systems,
alliances, good chat groups,

00:11:47.430 --> 00:11:49.890
substantial friends
benefits-- in those games,

00:11:49.890 --> 00:11:52.860
effectively, your players
do the work for you.

00:11:52.860 --> 00:11:55.292
If I'm a player
and I have friends

00:11:55.292 --> 00:11:57.750
in the game who are relying on
me, it's in my best interest

00:11:57.750 --> 00:11:58.600
to be there.

00:11:58.600 --> 00:12:01.320
And likewise, if
they're relying on me,

00:12:01.320 --> 00:12:02.650
I want to be there for them.

00:12:02.650 --> 00:12:03.900
So think about
your social systems

00:12:03.900 --> 00:12:05.899
and whether you can
strengthen the existing ones

00:12:05.899 --> 00:12:08.490
or add new ones, and let your
players do the work for you.

00:12:08.490 --> 00:12:10.590
And finally, on the
push notification side,

00:12:10.590 --> 00:12:12.420
think about how you
can personalize them.

00:12:12.420 --> 00:12:15.360
How can you create personalized
push notifications targeted

00:12:15.360 --> 00:12:18.300
just towards an individual
user or a segment of users

00:12:18.300 --> 00:12:21.060
as opposed to, effectively,
spamming all users

00:12:21.060 --> 00:12:22.522
at all hours of the day?

00:12:22.522 --> 00:12:24.480
Think about trying to
target push notifications

00:12:24.480 --> 00:12:27.240
around the normal time
of day that a user plays,

00:12:27.240 --> 00:12:29.670
as that's going to be much
more compelling and much more

00:12:29.670 --> 00:12:30.300
impactful.

00:12:34.700 --> 00:12:37.000
Now, the last thing, I want
to focus on monetization.

00:12:37.000 --> 00:12:38.420
And what I'm going
to be talking about

00:12:38.420 --> 00:12:40.669
is a metric that I used
really successfully and really

00:12:40.669 --> 00:12:43.510
effectively when I was
working on the developer side.

00:12:43.510 --> 00:12:45.569
And what will do is
it's going to help

00:12:45.569 --> 00:12:47.860
us understand and answer the
question of are our payers

00:12:47.860 --> 00:12:48.910
healthy.

00:12:48.910 --> 00:12:50.620
Generically speaking,
the industry

00:12:50.620 --> 00:12:53.140
has referenced
singular data points,

00:12:53.140 --> 00:12:56.655
made claims to the effect of
only 2% of payers actually pay.

00:12:56.655 --> 00:12:58.780
However, that's horribly
misleading as a statement,

00:12:58.780 --> 00:13:00.385
because generally
speaking, that's

00:13:00.385 --> 00:13:03.010
going to be focused more on that
daily buyer conversion number.

00:13:03.010 --> 00:13:04.990
It takes into account--

00:13:04.990 --> 00:13:06.970
it doesn't take into
account the percentage

00:13:06.970 --> 00:13:09.890
of users who are willing to only
open their wallets on a weekly,

00:13:09.890 --> 00:13:12.220
monthly, or even
quarterly basis.

00:13:12.220 --> 00:13:14.380
And so what you can
do to take a look at,

00:13:14.380 --> 00:13:16.600
to understand your
pairs health, is a ratio

00:13:16.600 --> 00:13:18.000
that we called PAU/DAU.

00:13:18.000 --> 00:13:20.727
And what it is, it's the percent
of your daily active users--

00:13:20.727 --> 00:13:22.060
the users who are active today--

00:13:22.060 --> 00:13:26.340
that have paid within the
preceding x-day period.

00:13:26.340 --> 00:13:28.830
In terms of the time frames
that I used to like to look at,

00:13:28.830 --> 00:13:30.870
the ones I found that
were most impactful

00:13:30.870 --> 00:13:34.745
were the 7, 30, 90, and
one-year time frames.

00:13:34.745 --> 00:13:36.120
And these were
extremely valuable

00:13:36.120 --> 00:13:37.620
because they allowed
me to do things

00:13:37.620 --> 00:13:39.570
like compare the
users who purchased

00:13:39.570 --> 00:13:43.911
within a week versus a month
or the quarter versus a year.

00:13:43.911 --> 00:13:46.160
And the other thing that's
really important and really

00:13:46.160 --> 00:13:47.720
impactful with
PAU/DAU-- since it's

00:13:47.720 --> 00:13:51.050
a measurement of the users who
have already paid in your game,

00:13:51.050 --> 00:13:53.750
it helps you to understand
the audience in your game

00:13:53.750 --> 00:13:55.047
that's willing to pay.

00:13:55.047 --> 00:13:57.380
Because we're always trying
to convert first-time users.

00:13:57.380 --> 00:13:58.610
But then once
they've converted, we

00:13:58.610 --> 00:14:00.230
need to create incentives
to actually get

00:14:00.230 --> 00:14:02.021
them to continue to
open their wallet again

00:14:02.021 --> 00:14:04.377
on a regular basis.

00:14:04.377 --> 00:14:05.960
So what I'm going
to talk through here

00:14:05.960 --> 00:14:09.050
is an example game and show you
some trends and some patterns

00:14:09.050 --> 00:14:11.720
in the daily buyer conversion
and how they've impacted

00:14:11.720 --> 00:14:13.432
various PAU/DAU ratios.

00:14:13.432 --> 00:14:15.890
There's three events that I
want to call out on this chart,

00:14:15.890 --> 00:14:18.500
and the first is this
medium-duration event

00:14:18.500 --> 00:14:21.440
that occurred, basically,
at the end of January

00:14:21.440 --> 00:14:24.410
to the beginning of February,
maybe two, 2 and 1/2,

00:14:24.410 --> 00:14:25.700
three-week period.

00:14:25.700 --> 00:14:28.070
And what we saw here
is that this event

00:14:28.070 --> 00:14:32.410
provided a substantial increase
to the daily buyer conversion.

00:14:32.410 --> 00:14:35.110
The other two events are
event B and C. Each of these

00:14:35.110 --> 00:14:36.430
occurred for about a day.

00:14:36.430 --> 00:14:40.330
They were sales, and they
created a substantial 130%

00:14:40.330 --> 00:14:43.550
increase in that daily
buyer conversion.

00:14:43.550 --> 00:14:45.550
All three of these are
really, really effective,

00:14:45.550 --> 00:14:46.630
but it's interesting
to see what they

00:14:46.630 --> 00:14:47.796
did with the PAU/DAU ratios.

00:14:50.750 --> 00:14:53.750
So looking at the seven-day
ratio, what we can actually see

00:14:53.750 --> 00:14:56.930
is that event A was extremely
effective at monetizing

00:14:56.930 --> 00:14:59.360
a very wide number of users.

00:14:59.360 --> 00:15:02.210
And effectively, this
event, it actually

00:15:02.210 --> 00:15:07.010
caused a lot of non-buyers
or occasional buyers

00:15:07.010 --> 00:15:10.160
to pay and open their wallets
during that time versus events

00:15:10.160 --> 00:15:13.910
B and C, which got significant
increases to buyer conversion

00:15:13.910 --> 00:15:17.120
on that date, but it didn't
do much to incentivize

00:15:17.120 --> 00:15:19.420
the occasional buyers to
open their wallets and pay.

00:15:19.420 --> 00:15:21.170
So it's something that
you can think about

00:15:21.170 --> 00:15:24.290
as you monitor the performance
of the supply side sales

00:15:24.290 --> 00:15:26.720
and the demand side
events in your game.

00:15:26.720 --> 00:15:28.400
Try to understand
who is actually

00:15:28.400 --> 00:15:30.830
paying during those periods.

00:15:30.830 --> 00:15:33.810
What are the motivating factors?

00:15:33.810 --> 00:15:34.880
What are the incentives?

00:15:34.880 --> 00:15:38.660
What is driving those players
to open their wallets?

00:15:38.660 --> 00:15:40.450
And you can also-- not
just the seven-day,

00:15:40.450 --> 00:15:42.440
but I was mentioning
you have the 30-day

00:15:42.440 --> 00:15:43.340
that you can look at.

00:15:43.340 --> 00:15:44.909
You have the 90-day
that can look at.

00:15:44.909 --> 00:15:46.700
You have the one-year
or even the lifetime.

00:15:46.700 --> 00:15:48.890
But just always
try to understand,

00:15:48.890 --> 00:15:51.440
when you're running sales
and you're running events,

00:15:51.440 --> 00:15:54.860
what incentives are they
creating for players.

00:15:54.860 --> 00:15:56.420
Are they aspirational?

00:15:56.420 --> 00:15:57.510
Are they desirable?

00:15:57.510 --> 00:15:58.990
Are they excellent
value for money?

00:15:58.990 --> 00:16:01.940
But what's that motivation?

00:16:01.940 --> 00:16:03.920
So in terms of the
PAU/DAU ratios,

00:16:03.920 --> 00:16:07.010
I can't give you explicit
values that you could take back.

00:16:07.010 --> 00:16:09.350
But what I can give you
is standardized ratios.

00:16:09.350 --> 00:16:11.300
The reason is that
PAU/DAU is intimately tied

00:16:11.300 --> 00:16:13.670
to your daily buyer conversion.

00:16:13.670 --> 00:16:16.170
And some games will have a
daily buyer conversion of 0.5%.

00:16:16.170 --> 00:16:18.290
Some games with sophisticated
monetization models,

00:16:18.290 --> 00:16:19.752
it might be as much as 3%.

00:16:19.752 --> 00:16:22.085
But what you can do is take
your daily buyer conversion,

00:16:22.085 --> 00:16:24.470
and if you look at your
seven-day PAU/DAU value,

00:16:24.470 --> 00:16:26.630
it should be four times higher.

00:16:26.630 --> 00:16:29.600
The 30-day value should
be eight times higher.

00:16:29.600 --> 00:16:31.190
The 90 days should be 12 times.

00:16:31.190 --> 00:16:33.590
And if you look at that
rolling 365-day window,

00:16:33.590 --> 00:16:36.140
it should be about 15 times
higher than your daily buyer

00:16:36.140 --> 00:16:37.760
conversion.

00:16:37.760 --> 00:16:41.810
Another advantage of PAU/DAU
is the inter-period comparisons

00:16:41.810 --> 00:16:43.200
withing your game.

00:16:43.200 --> 00:16:44.150
Take a look at--

00:16:44.150 --> 00:16:47.270
what this is is it's looking
at the daily buyer conversion--

00:16:47.270 --> 00:16:49.400
in this case, a
hypothetical 1.5%,

00:16:49.400 --> 00:16:51.595
and the scaling factors
from the previous slide.

00:16:51.595 --> 00:16:52.970
What we would see
here is there's

00:16:52.970 --> 00:16:56.240
a reasonable expectation
that 6% of this game's DAU

00:16:56.240 --> 00:16:59.600
would have paid somewhere
between 31 and 90 days ago.

00:16:59.600 --> 00:17:02.030
And an incremental
5% of the DAU would

00:17:02.030 --> 00:17:05.750
have paid somewhere between
91 and 365 days ago.

00:17:05.750 --> 00:17:09.010
If this was your game, that
would be 11% of your DAU.

00:17:09.010 --> 00:17:09.829
So think about it.

00:17:09.829 --> 00:17:12.074
How can you actually
incentivize these players?

00:17:12.074 --> 00:17:14.240
How can you shift those
effectively quarterly buyers

00:17:14.240 --> 00:17:15.200
to being monthly?

00:17:15.200 --> 00:17:17.195
Or how can you reactivate
those lapsed buyers?

00:17:20.750 --> 00:17:23.670
Now let's say you do start
monitoring a PAU/DAU type

00:17:23.670 --> 00:17:26.720
metric, and you are
trying to understand

00:17:26.720 --> 00:17:29.400
if there's opportunities,
if there's room for growth.

00:17:29.400 --> 00:17:31.170
Here's a few things to consider.

00:17:31.170 --> 00:17:33.402
Let's say your game does
run supply-side offers.

00:17:33.402 --> 00:17:35.360
Figure out whether you
can better segment them.

00:17:35.360 --> 00:17:36.920
Can you put constraints
on the amount

00:17:36.920 --> 00:17:37.961
that people can purchase?

00:17:37.961 --> 00:17:40.100
Can you segment by
average transaction value,

00:17:40.100 --> 00:17:42.410
and in doing so, limit
the amount of assets

00:17:42.410 --> 00:17:44.870
that users can get so they
can't stockpile and hoard,

00:17:44.870 --> 00:17:47.106
and therefore have to
purchase more frequently?

00:17:47.106 --> 00:17:47.980
Also, think about it.

00:17:47.980 --> 00:17:49.700
If you see a large
percentage of your users

00:17:49.700 --> 00:17:51.491
haven't paid in an
extended amount of time,

00:17:51.491 --> 00:17:53.120
create lapsed buyer
offers for them

00:17:53.120 --> 00:17:55.130
and almost treat them
like starter packs.

00:17:55.130 --> 00:17:56.630
Because the primary
goal if somebody

00:17:56.630 --> 00:17:59.390
hasn't paid between
91 and 365 days ago

00:17:59.390 --> 00:18:01.970
is to provide them with a
compelling value proposition

00:18:01.970 --> 00:18:04.820
to get them to open their
wallet, perceive good value,

00:18:04.820 --> 00:18:06.762
and be willing to pay again.

00:18:06.762 --> 00:18:08.720
And then for a lot of
the users who are active,

00:18:08.720 --> 00:18:10.820
think about whether you
can personalize the events

00:18:10.820 --> 00:18:12.650
that you're providing
to them in the game.

00:18:12.650 --> 00:18:15.470
And do so in a way that causes
them to drain assets quicker,

00:18:15.470 --> 00:18:17.660
and therefore, is
strongly incentivized

00:18:17.660 --> 00:18:20.074
to open their wallets and pay.

00:18:20.074 --> 00:18:21.740
Now I'm just going
to wrap up real quick

00:18:21.740 --> 00:18:24.220
and revisit each
of these sections.

00:18:24.220 --> 00:18:25.820
Where we were
looking at retention,

00:18:25.820 --> 00:18:28.910
that first five to 10-minute
period is absolutely essential,

00:18:28.910 --> 00:18:30.470
and it has such
a critical effect

00:18:30.470 --> 00:18:32.900
on your day 2 retention
and all the following days.

00:18:32.900 --> 00:18:35.810
So I strongly suggest going
back and generating metrics

00:18:35.810 --> 00:18:38.070
like that day 1 minutes
played versus day 2 retention

00:18:38.070 --> 00:18:40.910
and see what it looks
like in your game.

00:18:40.910 --> 00:18:43.070
And on the engagement
side, think about how

00:18:43.070 --> 00:18:44.600
you can focus on tomorrow.

00:18:44.600 --> 00:18:48.230
How can you create really
compelling engagement

00:18:48.230 --> 00:18:51.260
mechanics, return mechanics,
social systems that

00:18:51.260 --> 00:18:53.240
will bring players
back into the game,

00:18:53.240 --> 00:18:56.220
make them want to return
each and every day?

00:18:56.220 --> 00:18:59.060
And finally, on the
monetization front,

00:18:59.060 --> 00:19:01.040
think about your
PAU/DAU ratios and how

00:19:01.040 --> 00:19:03.470
they compare to the daily
buyer conversion and use that

00:19:03.470 --> 00:19:06.827
to generate insights as to
where users are spending,

00:19:06.827 --> 00:19:08.660
how frequently they're
opening their wallet,

00:19:08.660 --> 00:19:10.160
and the size of
your player base who

00:19:10.160 --> 00:19:12.520
has only paid once in a
quarter or haven't paid in

00:19:12.520 --> 00:19:14.040
up to a year.

00:19:14.040 --> 00:19:15.920
Thank you very much.

