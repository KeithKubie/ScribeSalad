WEBVTT
Kind: captions
Language: en

00:00:08.360 --> 00:00:11.970
Hi, I'm Chet Haas, an engineer
the Android team at Google.

00:00:11.970 --> 00:00:14.360
So, I did a "DevBytes" recently
talking about

00:00:14.360 --> 00:00:17.900
anticipation and overshoot,
principles from cartoon

00:00:17.900 --> 00:00:19.820
animation that could be
applied to some user

00:00:19.820 --> 00:00:21.220
interfaces as well.

00:00:21.220 --> 00:00:24.790
We also talked about this in our
Google I/O talk called the

00:00:24.790 --> 00:00:25.950
Moving Experience.

00:00:25.950 --> 00:00:28.420
You may want to check that out
for more information on some

00:00:28.420 --> 00:00:29.390
of these principles.

00:00:29.390 --> 00:00:32.049
But I wanted to go a little
bit further into these

00:00:32.049 --> 00:00:34.310
principles of anticipation
and overshoot today

00:00:34.310 --> 00:00:35.210
in a different demo.

00:00:35.210 --> 00:00:38.510
So let's take a look.

00:00:38.510 --> 00:00:40.310
So as I click on the
button, you'll

00:00:40.310 --> 00:00:41.360
notice a couple of things.

00:00:41.360 --> 00:00:44.430
One is, it reacts to
my press itself.

00:00:44.430 --> 00:00:47.350
And then, as I let go of the
button, then it springs over

00:00:47.350 --> 00:00:48.600
to the other side
of the screen.

00:00:48.600 --> 00:00:52.810
So press sort of skews over the
left, and then shoots over

00:00:52.810 --> 00:00:57.500
the right, and then wobbles a
bit to settle down into place.

00:00:57.500 --> 00:01:00.610
So that's the demo, pretty
awesome, let's take

00:01:00.610 --> 00:01:01.940
a look at the code.

00:01:01.940 --> 00:01:04.379
So first of all, we want to
figure out how to actually

00:01:04.379 --> 00:01:05.700
draw something like this.

00:01:05.700 --> 00:01:07.240
There is new skew property.

00:01:07.240 --> 00:01:10.110
There is no wobble and wiggle
property on a view.

00:01:10.110 --> 00:01:11.870
So we need to do this
manually by altering

00:01:11.870 --> 00:01:13.420
the Canvas of a view.

00:01:13.420 --> 00:01:15.660
So you don't typically
override Draw.

00:01:15.660 --> 00:01:18.820
And if you do, very important,
you have to call super.draw

00:01:18.820 --> 00:01:21.610
because we do things internally
that flags and

00:01:21.610 --> 00:01:23.880
state that you should
not skip.

00:01:23.880 --> 00:01:26.600
Having said that, it's
OK to override Draw.

00:01:26.600 --> 00:01:27.830
And in some cases,
you have to.

00:01:27.830 --> 00:01:30.820
In particular, in this case, I
want to change the way the

00:01:30.820 --> 00:01:31.980
view is actually drawn.

00:01:31.980 --> 00:01:34.300
So I need to alter the Canvas
that it's drawn with.

00:01:34.300 --> 00:01:37.160
So the way you do that is by
overriding Draw and then

00:01:37.160 --> 00:01:39.200
altering the Canvas
and passing that

00:01:39.200 --> 00:01:40.380
after the super class.

00:01:40.380 --> 00:01:43.170
So when there is this skew
value, which is going to be

00:01:43.170 --> 00:01:46.480
animated or changed between zero
and one, then we're going

00:01:46.480 --> 00:01:49.240
to change the Canvas itself.

00:01:49.240 --> 00:01:52.320
We're going to translate
around here, which is

00:01:52.320 --> 00:01:56.270
basically going to set the
right center around which

00:01:56.270 --> 00:01:58.440
we're actually going
to do the skew.

00:01:58.440 --> 00:02:01.580
Then we're going to skew the
object to sort of give it

00:02:01.580 --> 00:02:05.730
this, shift it to the right
or the left look.

00:02:05.730 --> 00:02:07.680
And then we're going to call
super.draw and just say, OK,

00:02:07.680 --> 00:02:08.500
now draw your button.

00:02:08.500 --> 00:02:10.930
Now that I've completely mucked
with your Canvas, go

00:02:10.930 --> 00:02:13.520
ahead and draw.

00:02:13.520 --> 00:02:16.230
Meanwhile, here's how one
of the animations works.

00:02:16.230 --> 00:02:19.910
So run press anim gets called
when we actually press down on

00:02:19.910 --> 00:02:20.650
the button.

00:02:20.650 --> 00:02:23.440
And that works by using an
object animator, which is

00:02:23.440 --> 00:02:26.740
going to animate this property
called skewX on this object.

00:02:26.740 --> 00:02:30.080
So I've defined the properties
setter called set skewX, and I

00:02:30.080 --> 00:02:32.860
can use an object animator
to animate that arbitrary

00:02:32.860 --> 00:02:33.895
property on my object.

00:02:33.895 --> 00:02:37.590
And I'm going to animate it
between 0.5 and negative 0.5

00:02:37.590 --> 00:02:38.930
And I'm going to set
a particular

00:02:38.930 --> 00:02:40.810
duration for that thing.

00:02:40.810 --> 00:02:43.920
And so it's going to be awfully
long as it rears back.

00:02:43.920 --> 00:02:46.640
And this is the anticipation
element of this animation is

00:02:46.640 --> 00:02:49.250
that it's going to rear back
before moving forward.

00:02:49.250 --> 00:02:51.660
You can think of this button
as one of those old cartoon

00:02:51.660 --> 00:02:54.680
characters that's going to run
forward, but, before they do

00:02:54.680 --> 00:02:56.800
that, they're going to rear
back so that they get all

00:02:56.800 --> 00:02:57.910
positioned and ready to do it.

00:02:57.910 --> 00:03:00.380
That's effectively what I wanted
the button to do here.

00:03:00.380 --> 00:03:01.710
And then I'm going to
set interpolator, so

00:03:01.710 --> 00:03:02.640
it starts very fast.

00:03:02.640 --> 00:03:03.320
I'm going to click
on the button.

00:03:03.320 --> 00:03:06.020
It's going to quickly start into
the animation and then

00:03:06.020 --> 00:03:08.070
slow down as it gets to the
end, sort of giving that

00:03:08.070 --> 00:03:11.360
tension feel as it gets
to its extreme point.

00:03:11.360 --> 00:03:13.350
And then we start
the animation.

00:03:13.350 --> 00:03:16.340
If we look at the motion
handler, so I handle touch

00:03:16.340 --> 00:03:19.480
events directly here because I
want to know when I'm inside

00:03:19.480 --> 00:03:22.370
and outside the button so that I
can disable the animation if

00:03:22.370 --> 00:03:24.220
they unclick when
it's outside--

00:03:24.220 --> 00:03:26.300
all that stuff.

00:03:26.300 --> 00:03:30.780
And I also want it to handle the
perform press operation.

00:03:30.780 --> 00:03:34.120
And I want to handle
the up animation.

00:03:34.120 --> 00:03:37.350
So when they've actually
pressed, then we perform our

00:03:37.350 --> 00:03:38.120
click animation.

00:03:38.120 --> 00:03:40.170
And the click animation
is going to

00:03:40.170 --> 00:03:42.880
animate across the screen.

00:03:42.880 --> 00:03:46.470
And then it's going to animate
the skew to the other side.

00:03:46.470 --> 00:03:48.410
This is an overshoot
element where I

00:03:48.410 --> 00:03:49.860
want it to stop suddenly.

00:03:49.860 --> 00:03:52.020
But if it's an organic element,
like this sort of

00:03:52.020 --> 00:03:54.840
skewy, squishy button that I've
defined, then all of it

00:03:54.840 --> 00:03:57.320
can't stop at the same time
because that's very unnatural.

00:03:57.320 --> 00:03:59.720
Instead, you're going to stop
the button, and then part of

00:03:59.720 --> 00:04:02.930
it's going to carry on because
that's what gravity, and

00:04:02.930 --> 00:04:06.250
inertia, and motion does
to our bodies, right?

00:04:06.250 --> 00:04:08.640
So the bottom of it's going
to stop, and the top is

00:04:08.640 --> 00:04:09.700
going to carry on.

00:04:09.700 --> 00:04:11.250
And then it's going to wiggle
back and forth.

00:04:11.250 --> 00:04:14.340
So it's going to overshoot back
to its original starting

00:04:14.340 --> 00:04:17.720
location and then eventually
look like a normal button.

00:04:17.720 --> 00:04:22.000
So if we take a look at the
click anim, here's where we

00:04:22.000 --> 00:04:24.820
actually launch the
animations.

00:04:24.820 --> 00:04:28.180
So here, we're going
to set up the--

00:04:28.180 --> 00:04:31.340
if we hadn't run the full
anticipation animation yet,

00:04:31.340 --> 00:04:33.820
we're going to hurry up and
finish that one up before we

00:04:33.820 --> 00:04:35.920
actually launch the
moving animation.

00:04:35.920 --> 00:04:37.760
Now, we're going to move the
thing across the screen.

00:04:37.760 --> 00:04:41.360
This is going to animate a
translation x property on the

00:04:41.360 --> 00:04:44.860
view, from wherever it is, on
the left or the right, to the

00:04:44.860 --> 00:04:45.870
other side of the screen.

00:04:45.870 --> 00:04:47.820
We're going to set an
interpolator of a linear

00:04:47.820 --> 00:04:49.030
interpolator.

00:04:49.030 --> 00:04:51.080
This is an interpolator
that I defined above.

00:04:51.080 --> 00:04:52.260
This is an important point--

00:04:52.260 --> 00:04:54.640
I would never use linear
interpolation on a movement

00:04:54.640 --> 00:04:55.910
because it looks totally fake.

00:04:55.910 --> 00:05:00.080
Instead, people, things, in our
real world accelerate into

00:05:00.080 --> 00:05:02.040
motion and decelerate
out of it.

00:05:02.040 --> 00:05:03.920
And that's a very
natural-feeling motion for

00:05:03.920 --> 00:05:05.500
user interfaces as well.

00:05:05.500 --> 00:05:08.310
However, in this particular
case, the effects that I

00:05:08.310 --> 00:05:11.290
wanted was for the anticipation
to be the sort of

00:05:11.290 --> 00:05:14.410
accelerating into this, and
then I want the motion to

00:05:14.410 --> 00:05:15.490
start immediately.

00:05:15.490 --> 00:05:18.600
When you unpress the button,
I want that button to start

00:05:18.600 --> 00:05:20.840
immediately and move very
quickly across the screen.

00:05:20.840 --> 00:05:23.010
And I want it to very quickly
stop on the other side of the

00:05:23.010 --> 00:05:25.320
screen because that's where I
wanted the follow through

00:05:25.320 --> 00:05:28.770
motion of the button actually
overshooting where it was and

00:05:28.770 --> 00:05:30.290
then wobbling back
to the start.

00:05:30.290 --> 00:05:33.080
So interpolating linearly is
totally appropriate here

00:05:33.080 --> 00:05:34.950
because we're basically
accelerating into it with the

00:05:34.950 --> 00:05:37.660
anticipation, and we're
decelerating out of it with

00:05:37.660 --> 00:05:39.770
the overshoot animation on
the other side of it.

00:05:39.770 --> 00:05:44.710
So linear animation, unusually
for a movement, and then we

00:05:44.710 --> 00:05:47.100
wanted to find the
animation for the

00:05:47.100 --> 00:05:47.850
other side of the screen.

00:05:47.850 --> 00:05:49.270
So it's skewed over
to the left.

00:05:49.270 --> 00:05:52.190
What we want is, when it reaches
the right hand side of

00:05:52.190 --> 00:05:55.050
the screen, we want it to skew
back over to the right but

00:05:55.050 --> 00:05:57.740
overshoot and then we want
it to wobble back to

00:05:57.740 --> 00:05:58.490
where it was before.

00:05:58.490 --> 00:06:01.770
So this is the skew animation
to go to the other side.

00:06:01.770 --> 00:06:04.490
And we're going to do a quick
decelerator, so I wanted to

00:06:04.490 --> 00:06:07.430
very quickly slow down from the
speed that it had from the

00:06:07.430 --> 00:06:10.440
linear motion, linear
interpolator that I had before

00:06:10.440 --> 00:06:12.370
in the previous animation.

00:06:12.370 --> 00:06:13.670
And then I want it to wobble.

00:06:13.670 --> 00:06:16.010
And the wobble is
going to again

00:06:16.010 --> 00:06:17.630
animate the skew property.

00:06:17.630 --> 00:06:20.380
And it's going to use this
overshoot interpolator, which

00:06:20.380 --> 00:06:22.620
will end up at the final
value, but it'll

00:06:22.620 --> 00:06:23.680
overshoot it first.

00:06:23.680 --> 00:06:26.010
So that's exactly the
effect I wanted is--

00:06:26.010 --> 00:06:29.080
we've overshot to the right and
now I want it to wobble

00:06:29.080 --> 00:06:32.660
back past the stopping point and
then eventually end up at

00:06:32.660 --> 00:06:33.970
the stopping point.

00:06:33.970 --> 00:06:36.820
We use an animator set to do
these things sequentially.

00:06:36.820 --> 00:06:39.130
So we're going to play all the
animations in sequence.

00:06:39.130 --> 00:06:41.500
We're going to move the button,
skew past for the

00:06:41.500 --> 00:06:44.460
overshoot, and then wobble back
to the starting position,

00:06:44.460 --> 00:06:46.230
the normal position,
for the button.

00:06:46.230 --> 00:06:47.900
And then we're going
to play it.

00:06:47.900 --> 00:06:49.690
And that is it.

00:06:49.690 --> 00:06:50.940
Thanks.

