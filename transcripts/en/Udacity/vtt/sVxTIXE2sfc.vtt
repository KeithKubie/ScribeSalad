WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
So the correct answer--other than refusing to answer the question,

00:00:03.000 --> 00:00:08.000
which would be a very correct way to answer such a question--

00:00:08.000 --> 00:00:10.000
the correct answer is the third choice.

00:00:10.000 --> 00:00:13.000
And there's some ways to know

00:00:13.000 --> 00:00:15.000
which ones are not correct.

00:00:15.000 --> 00:00:17.000
I'll show you soon how each of these sequences was generated.

00:00:17.000 --> 00:00:19.000
Well, if you look at the first one,

00:00:19.000 --> 00:00:25.000
you see there's a sequence of 0-1-1-0-1-1 that keeps repeating.

00:00:25.000 --> 00:00:29.000
Anything with a repeated pattern like that is definitely not random.

00:00:29.000 --> 00:00:35.000
Now, the caveat is certainly if you generated a long enough random sequence,

00:00:35.000 --> 00:00:38.000
eventually it would contain this pattern inside.

00:00:38.000 --> 00:00:42.000
The other one that is probably the trickiest one--

00:00:42.000 --> 00:00:45.000
that when humans generate random sequences

00:00:45.000 --> 00:00:47.000
they look sort of like this.

00:00:47.000 --> 00:00:52.000
The property that this sequence has is there's never more than three repetitions in a row.

00:00:52.000 --> 00:00:54.000
And when humans are asked to generate random sequences,

00:00:54.000 --> 00:00:58.000
they usually don' t have long runs of repetition,

00:00:58.000 --> 00:01:00.000
but in real random sequences there are.

00:01:00.000 --> 00:01:02.000
You can see there's a sequence of five 0s here.

00:01:02.000 --> 00:01:06.000
There's a sequence of four 1s. There's lots of repetition.

00:01:06.000 --> 00:01:10.000
In this there's never more than two in a row,

00:01:10.000 --> 00:01:12.000
so this is not random.

00:01:12.000 --> 00:01:15.000
The other two look potentially random.

00:01:15.000 --> 00:01:17.000
You'd have to analyze them a little more carefully.

00:01:17.000 --> 00:01:21.000
This one has more structure. This one is actually random.

00:01:21.000 --> 00:01:24.000
Let me show you--and I have to say,

00:01:24.000 --> 00:01:27.000
this one is actually close to random.

00:01:27.000 --> 00:01:30.000
And let me show you how each of these was generated.

00:01:30.000 --> 00:01:32.000
Here's how I generated each of those sequences.

00:01:32.000 --> 00:01:35.000
So the first sequence was generated by generate&lt;u&gt;sequence.&lt;/u&gt;

00:01:35.000 --> 00:01:38.000
I'll show you what generate&lt;u&gt;sequence does next.&lt;/u&gt;

00:01:38.000 --> 00:01:40.000
But for each position in the sequence,

00:01:40.000 --> 00:01:43.000
the procedure that generates the output generates 0

00:01:43.000 --> 00:01:46.000
if the position is divisible by 3,

00:01:46.000 --> 00:01:48.000
otherwise it generates 1.

00:01:48.000 --> 00:01:51.000
And we do that for the length of the sequence, which is defined as 88.

00:01:51.000 --> 00:01:55.000
Display-bits turns a list of bits into a string.

00:01:55.000 --> 00:01:59.000
All this code will be available linked from the course.

00:01:59.000 --> 00:02:02.000
So that is what generated the first sequence.

00:02:02.000 --> 00:02:04.000
And the code for generate&lt;u&gt;sequence is here.&lt;/u&gt;

00:02:04.000 --> 00:02:08.000
It just maps the function onto the range from 0 to n minus 1.

00:02:08.000 --> 00:02:13.000
So for that length, we're seeing the output of the function at every position.

00:02:13.000 --> 00:02:16.000
So that's the first one--and clearly non-random.

00:02:16.000 --> 00:02:19.000
The second one is taking a string,

00:02:19.000 --> 00:02:21.000
converting it into bits, and displaying those bits.

00:02:21.000 --> 00:02:24.000
And the string is this great quote from John von Neumann.

00:02:24.000 --> 00:02:26.000
And what the quote says is that

00:02:26.000 --> 00:02:30.000
"anyone who considers arithmetical methods of producing random digits

00:02:30.000 --> 00:02:33.000
is, of course, in a state of sin."

00:02:33.000 --> 00:02:35.000
But, of course, we do it anyway.

00:02:35.000 --> 00:02:39.000
So definitely, that's not random. It's generated from a very specific string.

00:02:39.000 --> 00:02:42.000
If you knew the string and you knew what these procedures do,

00:02:42.000 --> 00:02:44.000
you could generate that sequence.

00:02:44.000 --> 00:02:46.000
And the sequence that it generates is the one that as the second choice here.

00:02:46.000 --> 00:02:50.000
It looks sort of random, depending on how carefully you look at the patterns,

00:02:50.000 --> 00:02:54.000
but it's definitely not random, because it comes from this quote from John von Neumann.

00:02:54.000 --> 00:02:58.000
The third one is actually designed to be random.

00:02:58.000 --> 00:03:02.000
So we're using the Random Choice Method.

00:03:02.000 --> 00:03:06.000
That's provided in the PyCrypto library that I'm using to generate random numbers.

00:03:06.000 --> 00:03:10.000
It claims to generate fairly good cryptographic random numbers.

00:03:10.000 --> 00:03:13.000
So this third sequence at least is generated in a way

00:03:13.000 --> 00:03:15.000
that is designed to be random.

00:03:15.000 --> 00:03:19.000
The fourth one is generated using this procedure

00:03:19.000 --> 00:03:21.000
called generate&lt;u&gt;fake&lt;u&gt;random,&lt;/u&gt;&lt;/u&gt;

00:03:21.000 --> 00:03:24.000
which starts by making random choices,

00:03:24.000 --> 00:03:29.000
but is designed to trick humans by not having repetitions greater than 2.

00:03:29.000 --> 00:03:31.000
And I should change my comment.

00:03:31.000 --> 00:03:33.000
I had originally done it with &gt;3,

00:03:33.000 --> 00:03:37.000
and that looks to most humans very random.

00:03:37.000 --> 00:03:40.000
And I know it was a trick question, but I thought it would be a little too tricky--

00:03:40.000 --> 00:03:42.000
including &gt;3.

00:03:42.000 --> 00:03:44.000
But this is a good test for humans.

00:03:44.000 --> 00:03:46.000
And one of the experiments people sometimes do

00:03:46.000 --> 00:03:49.000
is ask humans to come up with a sequence of random numbers--

00:03:49.000 --> 00:03:51.000
that they think are random--from their own head,

00:03:51.000 --> 00:03:55.000
and they come up with sequences that are easily recognizable as non-random

00:03:55.000 --> 99:59:59.000
because they don't like to have too much repetition.

