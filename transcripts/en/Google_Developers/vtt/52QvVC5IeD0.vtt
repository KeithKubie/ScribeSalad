WEBVTT
Kind: captions
Language: en

00:00:01.410 --> 00:00:07.774
MALE SPEAKER: [HAPPY SIGH]
And I got to do it, man.

00:00:07.774 --> 00:00:11.726
[MUSIC PLAYING]

00:00:22.600 --> 00:00:25.300
Why in-app payments
are important?

00:00:25.300 --> 00:00:28.960
Well, as you all know, users
like free applications.

00:00:28.960 --> 00:00:31.850
However, you need to make
a living out of your work.

00:00:31.850 --> 00:00:34.320
Life is not as easy
as it seems, right?

00:00:34.320 --> 00:00:37.510
For that, we've got your
covered with in-app payments.

00:00:37.510 --> 00:00:39.620
You can see it in
many examples-- Clash

00:00:39.620 --> 00:00:42.540
of Clans, Netflix,
Spotify, and many more.

00:00:42.540 --> 00:00:44.700
In this episode,
you'll learn how

00:00:44.700 --> 00:00:47.150
to perform common in
app billing operations

00:00:47.150 --> 00:00:49.520
for your Android applications.

00:00:49.520 --> 00:00:51.350
In-app billing is
a service hosted

00:00:51.350 --> 00:00:55.076
on Google Play that lets you
charge for digital content

00:00:55.076 --> 00:00:57.150
or for upgrades in your app.

00:00:57.150 --> 00:00:59.790
You can request product
details from Google Play,

00:00:59.790 --> 00:01:01.780
issue orders for
in app products,

00:01:01.780 --> 00:01:03.540
and retrieve
ownership information

00:01:03.540 --> 00:01:06.320
based on your user's
purchase history.

00:01:06.320 --> 00:01:08.420
Google Play provides
a checkup interface

00:01:08.420 --> 00:01:11.210
that makes user interaction
with the in-app billing service

00:01:11.210 --> 00:01:12.410
seamless.

00:01:12.410 --> 00:01:16.060
It provides a more intuitive
experience to your users.

00:01:16.060 --> 00:01:18.160
So now you need to set up.

00:01:18.160 --> 00:01:20.670
Before you can start using
the in-app billing service,

00:01:20.670 --> 00:01:23.220
you'll need to follow
these three steps.

00:01:23.220 --> 00:01:25.470
Add the library that
contains the In-App Billing

00:01:25.470 --> 00:01:27.430
API to your Android project.

00:01:27.430 --> 00:01:28.540
Why?

00:01:28.540 --> 00:01:30.490
Well, it's the definition
of the interface

00:01:30.490 --> 00:01:32.810
that in-app billing expose.

00:01:32.810 --> 00:01:35.420
This will enable us
to call its methods.

00:01:35.420 --> 00:01:38.050
Then, set the permissions
for your application

00:01:38.050 --> 00:01:40.560
to communicate with Google Play.

00:01:40.560 --> 00:01:42.680
Last but not least,
establish a connection

00:01:42.680 --> 00:01:45.460
between your application
and Google Play.

00:01:45.460 --> 00:01:48.250
Now, you can place
products for sale.

00:01:48.250 --> 00:01:50.240
Before publishing
your application,

00:01:50.240 --> 00:01:53.030
you'll need to define the
product list of digital goods

00:01:53.030 --> 00:01:57.020
available for purchase in
Google Play Developer Console.

00:01:57.020 --> 00:01:59.590
Once your application is
connected to Google Play,

00:01:59.590 --> 00:02:03.215
you can initiate purchase
requests for in-app products.

00:02:03.215 --> 00:02:06.480
Google Play provides a
checkout interface for users

00:02:06.480 --> 00:02:08.190
to enter their payment method.

00:02:08.190 --> 00:02:09.580
So your application
does not need

00:02:09.580 --> 00:02:13.270
to handle payment
transactions directly.

00:02:13.270 --> 00:02:15.250
When an item is
purchased, Google Play

00:02:15.250 --> 00:02:18.690
recognize that the users
has ownership of the item

00:02:18.690 --> 00:02:20.580
and prevents the
users from purchasing

00:02:20.580 --> 00:02:22.990
another item with
the same product ID

00:02:22.990 --> 00:02:24.960
until it is consumed.

00:02:24.960 --> 00:02:27.550
You could also query Google
Play to quickly retrieve

00:02:27.550 --> 00:02:31.300
the least of purchases
that were made by the user.

00:02:31.300 --> 00:02:34.490
To ensure that in-app billing
is functioning correctly,

00:02:34.490 --> 00:02:37.980
you should test the application
before you publish it

00:02:37.980 --> 00:02:39.570
on Google Play.

00:02:39.570 --> 00:02:41.760
Early testing also
helps to ensure

00:02:41.760 --> 00:02:44.610
that the user flow for
purchasing in-app items

00:02:44.610 --> 00:02:48.640
is not confusing or slow, and
that users can see their newly

00:02:48.640 --> 00:02:51.880
purchased item in a timely way.

00:02:51.880 --> 00:02:53.140
Want to know more?

00:02:53.140 --> 00:02:54.940
Follow the links below.

00:02:54.940 --> 00:02:57.210
Until next time,
eat your vegetables,

00:02:57.210 --> 00:02:59.770
use in-app payments, and
listen to your partner.

00:02:59.770 --> 00:03:03.120
[MUSIC PLAYING]

