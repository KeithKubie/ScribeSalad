WEBVTT
Kind: captions
Language: en

00:00:01.750 --> 00:00:03.250
So as he said, I'm
Adrienne, and I'm

00:00:03.250 --> 00:00:04.620
from the Chrome security team.

00:00:04.620 --> 00:00:07.430
And today, I'm going to be
talking to you about how

00:00:07.430 --> 00:00:10.140
to ask for superpowers,
meaning all these cool new APIs

00:00:10.140 --> 00:00:13.780
that we've been talking
about throughout the day.

00:00:13.780 --> 00:00:16.590
So I travel a lot,
too, just like Alex.

00:00:16.590 --> 00:00:18.630
Last week, I was in
the Sydney office

00:00:18.630 --> 00:00:20.010
talking to the Chrome Apps team.

00:00:20.010 --> 00:00:22.720
A few weeks before
that, I was in London.

00:00:22.720 --> 00:00:24.360
And because I travel
so much, I like

00:00:24.360 --> 00:00:27.330
to try to stay in touch
with my family back at home.

00:00:27.330 --> 00:00:30.260
And I usually do that
with Hangouts in Chrome.

00:00:30.260 --> 00:00:33.150
So when I want to video chat
with my husband or maybe

00:00:33.150 --> 00:00:35.610
my dog, who doesn't really
know what's going on,

00:00:35.610 --> 00:00:36.690
I use Hangouts.

00:00:36.690 --> 00:00:40.160
And Hangouts relies on
getUserMedia in Chrome

00:00:40.160 --> 00:00:43.700
in order to get access
to camera and microphone.

00:00:43.700 --> 00:00:45.206
And as Alex was
talking about, it

00:00:45.206 --> 00:00:47.750
would be great to be able to
get things like flight updates

00:00:47.750 --> 00:00:51.610
and gate change notifications
from a website using things

00:00:51.610 --> 00:00:54.170
like ServiceWorker
and Push Messaging.

00:00:54.170 --> 00:00:57.060
And so all of this cool
new user experiences

00:00:57.060 --> 00:00:59.410
are being enabled by
all the new APIs that

00:00:59.410 --> 00:01:02.610
are coming to the web.

00:01:02.610 --> 00:01:04.530
So we've talked about
a few of these today,

00:01:04.530 --> 00:01:06.900
and even more will
be coming out.

00:01:06.900 --> 00:01:09.340
We've got Notifications,
and Bluetooth

00:01:09.340 --> 00:01:12.630
is in the works, things
about persistent storage

00:01:12.630 --> 00:01:14.850
and background sync, et cetera.

00:01:14.850 --> 00:01:16.350
And all of these
are really awesome,

00:01:16.350 --> 00:01:20.074
and I hope to see them used
in all of your websites.

00:01:20.074 --> 00:01:21.740
But we've also got
to deal with the fact

00:01:21.740 --> 00:01:25.240
that there are possible
negative user experiences that

00:01:25.240 --> 00:01:28.060
could come along with
these APIs as well.

00:01:28.060 --> 00:01:30.940
So for example, I'm one of
those people who doesn't always

00:01:30.940 --> 00:01:31.950
plug in my phone.

00:01:31.950 --> 00:01:35.510
And sometimes, on day three,
I'm like going around my office

00:01:35.510 --> 00:01:38.830
mates' computers looking for
USB cables looking for power.

00:01:38.830 --> 00:01:42.340
So I don't really want websites
to be draining my battery more

00:01:42.340 --> 00:01:43.830
than they really need to.

00:01:43.830 --> 00:01:45.205
So something like
Push Messaging,

00:01:45.205 --> 00:01:48.430
while really awesome, could
also end up draining battery

00:01:48.430 --> 00:01:50.250
faster than you like.

00:01:50.250 --> 00:01:53.189
Or Notifications
are great when you

00:01:53.189 --> 00:01:55.480
want to find out about an
email or a tweet or something

00:01:55.480 --> 00:01:58.450
like that but not so great
when you're getting 15 of them

00:01:58.450 --> 00:02:01.500
in a minute to tell you all
about some new product you

00:02:01.500 --> 00:02:03.240
should buy.

00:02:03.240 --> 00:02:05.460
And of course, no one
really wants their camera

00:02:05.460 --> 00:02:09.970
turning on at a surprising time.

00:02:09.970 --> 00:02:12.720
So as a community, we
face a challenge here.

00:02:12.720 --> 00:02:17.170
So on one hand, we have these
new superpowers, these new APIs

00:02:17.170 --> 00:02:20.680
that we want to be able to use
to build great experiences.

00:02:20.680 --> 00:02:23.800
But on the other hand, we
have responsibility to users

00:02:23.800 --> 00:02:25.700
to make sure that
we're respecting

00:02:25.700 --> 00:02:29.160
their privacy, their security,
and in general their desire

00:02:29.160 --> 00:02:31.780
to have control
over their devices.

00:02:31.780 --> 00:02:35.190
And also, one of the things
that I really love about the web

00:02:35.190 --> 00:02:38.640
is that I can go to
just about any website

00:02:38.640 --> 00:02:41.662
and feel pretty confident that
at the end of the session,

00:02:41.662 --> 00:02:43.620
I'm not going to have
any problems with privacy

00:02:43.620 --> 00:02:44.430
and security.

00:02:44.430 --> 00:02:45.990
I can go to little
known websites,

00:02:45.990 --> 00:02:48.342
I can try new things
out, and I don't really

00:02:48.342 --> 00:02:50.300
have to be worrying about
privacy and security,

00:02:50.300 --> 00:02:52.890
because Chrome is
doing it for me.

00:02:52.890 --> 00:02:56.340
And I feel that's our
job as developers,

00:02:56.340 --> 00:02:58.229
to take users'
concerns into account,

00:02:58.229 --> 00:03:00.020
so that users don't
have to become security

00:03:00.020 --> 00:03:01.590
experts to use the internet.

00:03:04.180 --> 00:03:07.610
So our answer to this is
by putting more effort

00:03:07.610 --> 00:03:09.497
into Chrome's permission model.

00:03:09.497 --> 00:03:11.580
So when I say a permission,
what I'm talking about

00:03:11.580 --> 00:03:14.880
is you go to use
a notification API

00:03:14.880 --> 00:03:17.350
and a thing pops
up to ask the user,

00:03:17.350 --> 00:03:21.650
hey, do you want to let a
website use the Notification

00:03:21.650 --> 00:03:23.020
API.

00:03:23.020 --> 00:03:25.950
And there are two
main goals we have

00:03:25.950 --> 00:03:27.890
with this permission system.

00:03:27.890 --> 00:03:31.470
The first goal is, of course,
to respect user choices and user

00:03:31.470 --> 00:03:33.650
control over their devices.

00:03:33.650 --> 00:03:35.740
And on the other
hand, we also want

00:03:35.740 --> 00:03:37.300
to make it easy for
developers to be

00:03:37.300 --> 00:03:40.560
able to use this permission
system so that it flows well

00:03:40.560 --> 00:03:43.670
and works well
with your websites.

00:03:43.670 --> 00:03:45.170
And so I'm going
to be talking today

00:03:45.170 --> 00:03:48.980
about some of the things that
are coming now, or coming soon

00:03:48.980 --> 00:03:51.502
in Chrome with respect
to the permission model.

00:03:51.502 --> 00:03:52.960
And then after
that, I'm also going

00:03:52.960 --> 00:03:55.590
to be discussing a
set of different tips

00:03:55.590 --> 00:03:58.380
that you can use to make
your websites work better

00:03:58.380 --> 00:04:00.250
with this permission model.

00:04:00.250 --> 00:04:02.290
I'd also like to
clarify that everything

00:04:02.290 --> 00:04:04.480
that I'm talking about
today pretty much

00:04:04.480 --> 00:04:05.810
is stuff that Chrome is doing.

00:04:05.810 --> 00:04:09.410
It's not a standards track or
a specifications type work.

00:04:09.410 --> 00:04:10.510
Those are the APIs.

00:04:10.510 --> 00:04:13.110
I'm talking about the UI
and the user experience that

00:04:13.110 --> 00:04:15.630
surrounds the APIs as
part of the browser.

00:04:18.329 --> 00:04:22.610
So as Alex briefly
alluded to earlier,

00:04:22.610 --> 00:04:25.560
the foundation of this
model is that HTTPS

00:04:25.560 --> 00:04:28.120
is going to be required
for most new APIs,

00:04:28.120 --> 00:04:31.750
if they touch on things that
are security related, privacy

00:04:31.750 --> 00:04:34.720
related, or if they
could be abused.

00:04:34.720 --> 00:04:38.210
And not only will this
apply to new APIs,

00:04:38.210 --> 00:04:40.360
as if they come into
existence, but we're also

00:04:40.360 --> 00:04:44.170
trying to figure out how to
backport this to older APIs.

00:04:44.170 --> 00:04:47.570
So for example, getUserMedia
is shipping today.

00:04:47.570 --> 00:04:49.690
As I mentioned earlier,
Hangouts uses it.

00:04:49.690 --> 00:04:54.756
And right now, you can use
it over both HTTP and HTTPS.

00:04:54.756 --> 00:04:56.630
We're working to figure
out a transition plan

00:04:56.630 --> 00:05:00.600
to make it HTTPS
only in the future.

00:05:00.600 --> 00:05:05.256
Now, let me explain why we
think this is important.

00:05:05.256 --> 00:05:06.630
Let's say that
I'm using Twitter,

00:05:06.630 --> 00:05:08.504
and I give Twitter the
ability to take photos

00:05:08.504 --> 00:05:11.805
with my computer, to post a
picture of myself or my dog

00:05:11.805 --> 00:05:13.100
or something.

00:05:13.100 --> 00:05:16.580
I want Twitter to be
able to use that ability.

00:05:16.580 --> 00:05:19.630
I don't want my ISP and
the people around me

00:05:19.630 --> 00:05:23.030
at the coffee shop to also gain
that ability at the same time.

00:05:23.030 --> 00:05:24.780
And HTTPS gives
you the guarantee

00:05:24.780 --> 00:05:26.780
that Twitter will be the
only one getting access

00:05:26.780 --> 00:05:28.570
to this privilege.

00:05:28.570 --> 00:05:30.840
And the flip side of
that is integrity.

00:05:30.840 --> 00:05:34.080
Say you have something
like Notifications.

00:05:34.080 --> 00:05:36.220
Some Wi-Fi provider
might get into their head

00:05:36.220 --> 00:05:40.050
that a great way to monetize is
to send lots of notifications,

00:05:40.050 --> 00:05:41.727
advertising things to people.

00:05:41.727 --> 00:05:43.310
That's going to hurt
your website too,

00:05:43.310 --> 00:05:45.340
because people are
going to associate

00:05:45.340 --> 00:05:48.050
these low-quality notifications
with your website, which

00:05:48.050 --> 00:05:50.070
isn't what you want.

00:05:50.070 --> 00:05:54.520
So I want to acknowledge
that some people have found

00:05:54.520 --> 00:05:59.120
in the path to adopting HTTPS
a little rocky, so don't panic.

00:05:59.120 --> 00:06:02.590
It's probably easier and faster
and cheaper than you think.

00:06:02.590 --> 00:06:04.940
And later this afternoon,
my colleague, Chris Palmer,

00:06:04.940 --> 00:06:08.470
is going to talk all about
all the great things that

00:06:08.470 --> 00:06:13.420
have happened over the
recent year and coming to us.

00:06:13.420 --> 00:06:16.425
All right, so now you've
got your HTTPS website.

00:06:16.425 --> 00:06:18.300
So the first thing you're
going to need to do

00:06:18.300 --> 00:06:25.300
is to request permission
to get access to the API.

00:06:25.300 --> 00:06:27.960
So in the past, and in
fact currently on stable,

00:06:27.960 --> 00:06:31.070
what this looks like is an info
bar at the top of the screen

00:06:31.070 --> 00:06:34.850
that is asking the user
whether to grant or deny

00:06:34.850 --> 00:06:37.470
a certain privilege
for that website.

00:06:37.470 --> 00:06:40.325
As you can see, it also
pushes the content area down.

00:06:42.960 --> 00:06:44.440
So we got feedback
from developers

00:06:44.440 --> 00:06:47.750
that that info bar was
being missed by users.

00:06:47.750 --> 00:06:49.450
They weren't really seeing it.

00:06:49.450 --> 00:06:52.150
So we're working on a new thing
called a permission bubble.

00:06:52.150 --> 00:06:55.180
And this hopefully will
get more user attention

00:06:55.180 --> 00:06:58.020
and the users will
notice it more easily.

00:06:58.020 --> 00:07:00.390
So you can play with it
if you turn on that flag.

00:07:00.390 --> 00:07:02.440
Or we're also going to be
starting to roll it out

00:07:02.440 --> 00:07:04.285
experimentally soon
in the coming months.

00:07:04.285 --> 00:07:05.910
We're still playing
around with things,

00:07:05.910 --> 00:07:09.620
like how to get focus right.

00:07:09.620 --> 00:07:13.550
Another problem that we
had with the info bar model

00:07:13.550 --> 00:07:18.320
was that if people ask
for multiple permissions,

00:07:18.320 --> 00:07:20.570
they would end up getting
stacked on top of each other

00:07:20.570 --> 00:07:22.530
like this, which is pretty ugly.

00:07:22.530 --> 00:07:26.110
And if you get a few
of them, it starts

00:07:26.110 --> 00:07:27.780
taking up a lot of space.

00:07:27.780 --> 00:07:30.190
So the permission bubbles
will coalesce permissions

00:07:30.190 --> 00:07:34.860
that are asked for very
close together in time.

00:07:34.860 --> 00:07:37.360
Users can still say yes or no
to each of these individually.

00:07:40.820 --> 00:07:44.487
Another thing we're doing is
looking at completely new ways

00:07:44.487 --> 00:07:46.070
to ask for permission,
instead of just

00:07:46.070 --> 00:07:48.290
the binary yes or no answer.

00:07:48.290 --> 00:07:50.770
So this is an example
from Chrome 40

00:07:50.770 --> 00:07:53.380
for the Chrome Apps USB API.

00:07:53.380 --> 00:07:56.250
So instead of just asking the
user yes or no, like can this

00:07:56.250 --> 00:07:58.440
access USB devices,
it lets the user

00:07:58.440 --> 00:08:02.780
choose which USB devices
should be available to the app.

00:08:02.780 --> 00:08:04.330
Now my colleagues
are also working

00:08:04.330 --> 00:08:07.470
on prototypes of similar
types of things for things

00:08:07.470 --> 00:08:09.740
like the web
Bluetooth API, so you

00:08:09.740 --> 00:08:14.507
should expect to be seeing
this for web permissions too.

00:08:14.507 --> 00:08:17.090
All right, so let's say that the
user has made their decision,

00:08:17.090 --> 00:08:19.490
they've either granted
or denied the ability

00:08:19.490 --> 00:08:20.850
to use a permission.

00:08:20.850 --> 00:08:23.140
People might want to
change their minds later.

00:08:26.020 --> 00:08:28.080
We ran through some
scenarios with a group

00:08:28.080 --> 00:08:30.742
of users a few weeks
ago, asking people

00:08:30.742 --> 00:08:32.700
whether they would say
yes or no to permissions

00:08:32.700 --> 00:08:34.460
in certain circumstances.

00:08:34.460 --> 00:08:36.340
And some people
expressed hesitation,

00:08:36.340 --> 00:08:40.160
because they didn't know how
to control these privileges.

00:08:40.160 --> 00:08:41.909
For example, this
person said, "And that's

00:08:41.909 --> 00:08:44.330
why I wanted to decline,
I don't know how to undo.

00:08:44.330 --> 00:08:47.060
If I knew how to undo,
I would say yes."

00:08:47.060 --> 00:08:48.710
So to address
this, we're working

00:08:48.710 --> 00:08:51.400
on better in-page controls.

00:08:51.400 --> 00:08:53.840
I'm going to show a demo here.

00:08:53.840 --> 00:08:57.770
By the way, I'm using
the same extremely--

00:08:57.770 --> 00:08:59.630
if I could switch to
the projector, that'd

00:08:59.630 --> 00:09:03.760
be great-- the same extremely
fresh version of Chrome

00:09:03.760 --> 00:09:08.060
that Alex was using, so please
cross your fingers for me.

00:09:08.060 --> 00:09:12.590
All right, so here
I've got a website

00:09:12.590 --> 00:09:17.100
that's asking for
access to geolocation.

00:09:17.100 --> 00:09:20.670
Thanks, it's reminding me
that I'm at my own talk.

00:09:20.670 --> 00:09:21.680
Useful, right?

00:09:21.680 --> 00:09:24.600
OK, so I'm going to go
ahead and allow this.

00:09:24.600 --> 00:09:28.150
Now if you click on the
lock, it opens this up,

00:09:28.150 --> 00:09:30.090
the in-page controls.

00:09:30.090 --> 00:09:31.882
So this lets the user
check on the security

00:09:31.882 --> 00:09:33.298
and the privacy
of the connection.

00:09:33.298 --> 00:09:35.340
So you can see at the
top, it's using HTTPS.

00:09:35.340 --> 00:09:38.930
So it says your connection
to this site is private.

00:09:38.930 --> 00:09:40.620
And it also gives
you the ability

00:09:40.620 --> 00:09:44.620
to see any of the non-default
permission settings.

00:09:44.620 --> 00:09:48.772
So this one has location,
because I just granted that.

00:09:48.772 --> 00:09:51.230
And from right here, you can
toggle between Allow and Block

00:09:51.230 --> 00:09:52.050
if you want.

00:09:52.050 --> 00:09:53.260
So now I block that.

00:09:56.320 --> 00:09:57.445
Back to the slides, please.

00:10:02.590 --> 00:10:04.892
Now, another thing
that comes up is usage.

00:10:04.892 --> 00:10:06.350
I mentioned earlier
that I'm really

00:10:06.350 --> 00:10:08.530
paranoid about battery life.

00:10:08.530 --> 00:10:10.740
Other people are
concerned about things

00:10:10.740 --> 00:10:16.100
like how much disk space a
website or app is taking up.

00:10:16.100 --> 00:10:18.080
Or some people are
worried, they don't

00:10:18.080 --> 00:10:19.705
want to use any
websites that are going

00:10:19.705 --> 00:10:22.210
to be constantly
tracking their location.

00:10:22.210 --> 00:10:25.080
So our answer to
that is building

00:10:25.080 --> 00:10:27.640
some of this information
into site settings.

00:10:27.640 --> 00:10:32.275
I'm going to show you some mocks
of our vision in this space.

00:10:32.275 --> 00:10:33.650
But just so you
know, you can see

00:10:33.650 --> 00:10:36.185
some of what I'm about to
talk about in Chrome 40,

00:10:36.185 --> 00:10:37.810
although it's not
feature complete yet,

00:10:37.810 --> 00:10:39.980
which is why I'm
showing mocks today.

00:10:39.980 --> 00:10:42.660
So if you go into site settings,
you can search for a page

00:10:42.660 --> 00:10:44.600
or pick a specific permission.

00:10:44.600 --> 00:10:48.220
Here, I'll do Notifications
as an example.

00:10:48.220 --> 00:10:50.190
And it'll show you
all the websites that

00:10:50.190 --> 00:10:52.864
have been granted access to
this or have been blocked.

00:10:52.864 --> 00:10:54.280
And for the ones
that have access,

00:10:54.280 --> 00:10:56.360
it'll show you when
it was last used.

00:10:56.360 --> 00:10:58.210
So you can see, for
example, who's recently

00:10:58.210 --> 00:11:00.030
been sending notifications
on your device.

00:11:02.680 --> 00:11:06.200
And if you search for or
click on a specific website,

00:11:06.200 --> 00:11:08.070
you can see that
the history of how

00:11:08.070 --> 00:11:09.700
it's been using its privileges.

00:11:09.700 --> 00:11:11.250
You can see here
in this example,

00:11:11.250 --> 00:11:13.047
it's been using geolocation.

00:11:13.047 --> 00:11:14.630
You'll also be able
to see information

00:11:14.630 --> 00:11:17.330
about battery usage
and data storage.

00:11:17.330 --> 00:11:21.225
And you can do things
like Stop or Delete

00:11:21.225 --> 00:11:22.850
the data, if you
think that's important

00:11:22.850 --> 00:11:24.516
and you're trying to
reclaim some space.

00:11:27.117 --> 00:11:29.200
So I recognize that those
features that I was just

00:11:29.200 --> 00:11:35.270
talking about in Site
Settings are not things

00:11:35.270 --> 00:11:37.280
that people are going
to use every day.

00:11:37.280 --> 00:11:41.640
On an everyday basis, people
want things to just work.

00:11:41.640 --> 00:11:43.830
So let me give you two examples.

00:11:43.830 --> 00:11:45.430
The first is Virgin America.

00:11:45.430 --> 00:11:48.930
You're traveling, you've got
10 gate changes in 10 minutes.

00:11:48.930 --> 00:11:51.624
You probably want all 10
notifications in 10 minutes

00:11:51.624 --> 00:11:53.290
telling you all about
this, because this

00:11:53.290 --> 00:11:55.070
is important to you.

00:11:55.070 --> 00:11:59.790
On the other hand,
let's say someone

00:11:59.790 --> 00:12:03.200
wanted to send you 15
advertisements in 15 minutes.

00:12:03.200 --> 00:12:05.160
You probably don't want that.

00:12:05.160 --> 00:12:07.970
So how do you distinguish
between these two cases?

00:12:07.970 --> 00:12:11.420
Well, in the positive
user engagement case,

00:12:11.420 --> 00:12:13.630
the user really
likes that website.

00:12:13.630 --> 00:12:16.340
Examples of a user indicating
they like a website

00:12:16.340 --> 00:12:19.760
might include something like it
shows up in their history a lot

00:12:19.760 --> 00:12:21.860
because they visited often.

00:12:21.860 --> 00:12:23.257
Maybe they've bookmarked it.

00:12:23.257 --> 00:12:25.090
Maybe they've added it
to their home screen.

00:12:25.090 --> 00:12:27.544
Or maybe they have
a login for it.

00:12:27.544 --> 00:12:28.960
So what we're
thinking about doing

00:12:28.960 --> 00:12:32.180
is tying these signs of
positive user engagement

00:12:32.180 --> 00:12:36.210
to thresholds for permissions
that aren't privacy sensitive

00:12:36.210 --> 00:12:37.740
but are more just annoying.

00:12:37.740 --> 00:12:40.520
So you might be able to
send more notifications,

00:12:40.520 --> 00:12:45.710
have a higher quota for storage,
or if they're a vibration API,

00:12:45.710 --> 00:12:48.710
vibrate more times in
a short period of time.

00:12:48.710 --> 00:12:52.590
So we want to be able to
sort of reward this good user

00:12:52.590 --> 00:12:54.100
experience.

00:12:54.100 --> 00:12:56.602
This is still
experimental by the way.

00:12:56.602 --> 00:12:58.810
This isn't something that
we've nailed down precisely

00:12:58.810 --> 00:13:00.520
and something that we
haven't launched yet.

00:13:00.520 --> 00:13:02.060
I'm mentioning it
really early now,

00:13:02.060 --> 00:13:04.270
because I would love to get
feedback from you on what

00:13:04.270 --> 00:13:06.400
you think about these ideas.

00:13:06.400 --> 00:13:09.456
And if you could come
talk to me at the booth

00:13:09.456 --> 00:13:11.330
or come to the panel
with questions about it.

00:13:11.330 --> 00:13:14.840
I would love to hear
your thoughts on it.

00:13:14.840 --> 00:13:17.830
We also be recognizing
user discontents.

00:13:17.830 --> 00:13:20.970
By this I mean, I mentioned that
there are two cases, the Virgin

00:13:20.970 --> 00:13:23.020
America case,
which I like a lot,

00:13:23.020 --> 00:13:26.710
and the case of the
sort of spammy website.

00:13:26.710 --> 00:13:29.860
And we want to be
able to recognize

00:13:29.860 --> 00:13:32.240
these negative cases as well.

00:13:32.240 --> 00:13:37.060
So for example, users might
consistently-- say 99% of users

00:13:37.060 --> 00:13:40.080
say no when a website
asks for our permission.

00:13:40.080 --> 00:13:42.110
Or people are
saying, yes, but then

00:13:42.110 --> 00:13:44.050
they're going and
turning it off later.

00:13:44.050 --> 00:13:45.490
These are signs
that users aren't

00:13:45.490 --> 00:13:47.757
very happy with that experience.

00:13:47.757 --> 00:13:49.840
And so in these cases,
we're thinking about things

00:13:49.840 --> 00:13:55.840
like lowering thresholds or
maybe not even prompting users.

00:13:55.840 --> 00:13:59.220
So again, this is an idea
that we haven't exactly

00:13:59.220 --> 00:14:01.030
fully decided on
the mechanics of it.

00:14:01.030 --> 00:14:04.572
But I'm giving you
an early heads up.

00:14:04.572 --> 00:14:06.030
All right, so now
I'm going to talk

00:14:06.030 --> 00:14:08.230
about what you can do
to build a good user

00:14:08.230 --> 00:14:10.560
experience around our
permission system.

00:14:13.700 --> 00:14:16.100
First, I want to motivate
that users don't just click,

00:14:16.100 --> 00:14:18.780
yes, yes, yes when you
ask them for things.

00:14:18.780 --> 00:14:23.870
People do think about
and make real decisions

00:14:23.870 --> 00:14:25.222
when asked permission questions.

00:14:25.222 --> 00:14:27.180
So here are some quotes
from users about things

00:14:27.180 --> 00:14:28.790
that they've
considered when they're

00:14:28.790 --> 00:14:31.790
trying to decide whether
to grant a permission.

00:14:31.790 --> 00:14:34.429
So what type of information
is it going to show?

00:14:34.429 --> 00:14:35.470
Are you interested in it?

00:14:35.470 --> 00:14:36.720
Do you trust the trust source?

00:14:39.610 --> 00:14:42.370
So some researchers
at UC Berkeley

00:14:42.370 --> 00:14:46.350
asked a group of iOS users
to share the settings

00:14:46.350 --> 00:14:49.940
in their phones so they could
see what apps they had granted

00:14:49.940 --> 00:14:53.470
or not granted geolocation
information to them.

00:14:53.470 --> 00:14:58.820
And they found that
it differed a lot

00:14:58.820 --> 00:15:00.840
depending on the specific app.

00:15:00.840 --> 00:15:03.930
So you can see that for some
apps, like Maps, almost 100%

00:15:03.930 --> 00:15:06.420
of users were willing
to grant a geolocation.

00:15:06.420 --> 00:15:08.830
But on the other end of the
spectrum, fewer than half

00:15:08.830 --> 00:15:11.160
of users were willing to
grant it to some apps,

00:15:11.160 --> 00:15:13.520
like SoundHound and Shazam.

00:15:13.520 --> 00:15:15.220
So the point I'm
trying to make here

00:15:15.220 --> 00:15:18.000
is that the benefit
that users feel

00:15:18.000 --> 00:15:21.360
they're going to get from
a specific permission

00:15:21.360 --> 00:15:25.490
depends on what you tell them
the value proposition is.

00:15:25.490 --> 00:15:29.570
So the first tip that we have
is to provide clear value

00:15:29.570 --> 00:15:32.190
by timing the permission
requested in such a way

00:15:32.190 --> 00:15:34.530
that the user can
connect the permission

00:15:34.530 --> 00:15:37.670
request with the feature.

00:15:37.670 --> 00:15:39.670
All right, so I'm going
to do another demo here.

00:15:43.507 --> 00:15:45.090
Can I get on the
camera again, please?

00:15:55.660 --> 00:15:56.890
So yes, you may recognize it.

00:15:56.890 --> 00:16:01.730
This is the same demo that
Alex was using earlier.

00:16:01.730 --> 00:16:04.700
So let's see how this goes.

00:16:04.700 --> 00:16:07.720
OK, so let's say that I'm
travelling and my flight is

00:16:07.720 --> 00:16:08.220
canceled.

00:16:08.220 --> 00:16:10.510
And now, I'm trying to
book another flight.

00:16:10.510 --> 00:16:14.380
So OK, I click on the button
to bring up the page to book

00:16:14.380 --> 00:16:15.430
a flight.

00:16:15.430 --> 00:16:17.200
Now it immediately
pops up the question

00:16:17.200 --> 00:16:21.190
of whether I'd like Polyair to
be able to send notifications.

00:16:21.190 --> 00:16:23.290
This isn't really a great
time to ask about that.

00:16:23.290 --> 00:16:26.760
I don't really know what's
going to happen if I say yes.

00:16:26.760 --> 00:16:29.130
So I'm going to swat it away.

00:16:29.130 --> 00:16:33.470
So let's say I'm trying
to go from SFO to LAX.

00:16:38.197 --> 00:16:40.405
All right, we're going to
take the Millennium Falcon.

00:16:43.280 --> 00:16:47.390
All right, here again, it pops
up another permission request.

00:16:47.390 --> 00:16:49.530
And this one is a
little bit better.

00:16:49.530 --> 00:16:51.660
You can see that
it's at least tied

00:16:51.660 --> 00:16:53.730
to some feature on the
page, but in my opinion,

00:16:53.730 --> 00:16:55.780
it's still not the
best version yet.

00:16:55.780 --> 00:16:57.370
So let's say no to that.

00:16:57.370 --> 00:17:00.440
Now here, I'm going to click on
the Notify about flight delays

00:17:00.440 --> 00:17:01.020
button.

00:17:01.020 --> 00:17:02.770
Now here, it's very
clear that you've just

00:17:02.770 --> 00:17:05.410
turned on notifications
for flight delays.

00:17:05.410 --> 00:17:08.134
So the user is going to be
persuaded to click on Allow

00:17:08.134 --> 00:17:09.800
here to say yes,
because they understand

00:17:09.800 --> 00:17:11.535
what they're going to get.

00:17:11.535 --> 00:17:12.660
Back to the slides, please.

00:17:17.490 --> 00:17:20.760
So for some permissions,
like Notifications,

00:17:20.760 --> 00:17:24.319
it's pretty easy to do this
well today, in my opinion.

00:17:24.319 --> 00:17:27.020
For other types of permissions,
it's maybe a little bit harder.

00:17:27.020 --> 00:17:29.290
So for example, for
Geolocation, you

00:17:29.290 --> 00:17:32.020
can't tell whether
your website already

00:17:32.020 --> 00:17:34.680
has the permission
before you try to use it.

00:17:34.680 --> 00:17:36.400
So some people on
my team are working

00:17:36.400 --> 00:17:38.890
on something called
the Permissions API.

00:17:38.890 --> 00:17:41.630
Don't copy this code, because
it's currently a spec.

00:17:41.630 --> 00:17:43.110
It hasn't been implemented yet.

00:17:43.110 --> 00:17:43.830
But it's coming.

00:17:43.830 --> 00:17:47.400
You'll start seeing an
implementation probably in 41.

00:17:47.400 --> 00:17:49.290
But the idea here is
that it'll let you query

00:17:49.290 --> 00:17:52.364
to find out whether
your website has a given

00:17:52.364 --> 00:17:53.780
permission or a
set of permissions

00:17:53.780 --> 00:17:57.090
so that you know whether trying
to use it is going to pop up

00:17:57.090 --> 00:17:58.940
a permission request
or not to allow

00:17:58.940 --> 00:18:01.662
you to time your
permission request better.

00:18:01.662 --> 00:18:03.870
So for example, if you knew
this about your location,

00:18:03.870 --> 00:18:05.530
you could do different behavior.

00:18:05.530 --> 00:18:08.984
You could show very
localized stores.

00:18:08.984 --> 00:18:10.650
You could show all
stores in California.

00:18:10.650 --> 00:18:12.210
If you don't have
the permission,

00:18:12.210 --> 00:18:15.580
just use the IP Geo instead.

00:18:15.580 --> 00:18:18.995
So it'll give you more options.

00:18:18.995 --> 00:18:20.870
All right, so the next
thing you need to note

00:18:20.870 --> 00:18:23.800
is that you need to
ask with a document.

00:18:23.800 --> 00:18:26.640
And this pertains specifically
to service workers.

00:18:26.640 --> 00:18:30.110
If you try to request a
permission when there's

00:18:30.110 --> 00:18:32.670
no document open,
there's nowhere

00:18:32.670 --> 00:18:34.620
to show the permission request.

00:18:34.620 --> 00:18:36.990
So don't do this.

00:18:36.990 --> 00:18:39.380
So I'm going to show with
a good and a bad example.

00:18:39.380 --> 00:18:42.230
A good example is in the
main document in response

00:18:42.230 --> 00:18:46.430
to some event, like toggling,
request the permission there.

00:18:46.430 --> 00:18:51.630
A bad example would be when
a background sync event fires

00:18:51.630 --> 00:18:54.390
from within your service a recur
trying to request permission.

00:18:54.390 --> 00:18:56.974
But the page might be closed.

00:18:56.974 --> 00:18:58.890
There's no where to show
a permission request.

00:18:58.890 --> 00:19:01.300
So you will not have a good
time; do not do it this way.

00:19:03.752 --> 00:19:05.710
All right, the third
thing I want to talk about

00:19:05.710 --> 00:19:08.230
is handling user rejection.

00:19:08.230 --> 00:19:12.670
So what I mean is when a user
says no to your permission

00:19:12.670 --> 00:19:15.650
request, please don't
break your whole website.

00:19:15.650 --> 00:19:18.230
The user might see that
it breaks the feature

00:19:18.230 --> 00:19:21.830
and then at a later time go
back and enable the permission.

00:19:21.830 --> 00:19:25.510
So I'm going to show an example
of what that looks like.

00:19:25.510 --> 00:19:29.420
So here this imaginary
store is going

00:19:29.420 --> 00:19:32.160
to give you three options
of ways to give you

00:19:32.160 --> 00:19:34.930
information about
store openings.

00:19:34.930 --> 00:19:38.300
So if you click on the
toggle for the first one,

00:19:38.300 --> 00:19:41.270
that opens up a
Notifications prompt asking

00:19:41.270 --> 00:19:43.620
about desktop notifications.

00:19:43.620 --> 00:19:46.250
So let's say I have,
for whatever reason,

00:19:46.250 --> 00:19:49.850
changed my mind in this
intervening second and click

00:19:49.850 --> 00:19:51.969
Block.

00:19:51.969 --> 00:19:53.760
The thing you can do
as a website developer

00:19:53.760 --> 00:19:56.350
here is gray out
Disable the feature.

00:19:56.350 --> 00:19:58.270
So here, the rest of
the website still works.

00:19:58.270 --> 00:20:00.880
You can still do email
alerts or Facebook alerts

00:20:00.880 --> 00:20:02.120
or however you want.

00:20:02.120 --> 00:20:06.931
But Notification part
specifically has been disabled.

00:20:06.931 --> 00:20:09.180
Now, here's how you can check
the states, particularly

00:20:09.180 --> 00:20:10.630
for notifications.

00:20:10.630 --> 00:20:13.810
There are two ways to check the
states, the permission state.

00:20:13.810 --> 00:20:16.390
The first is on
load, you can check

00:20:16.390 --> 00:20:19.710
the value of
Notification.permission

00:20:19.710 --> 00:20:22.149
and then update the
state of the toggle

00:20:22.149 --> 00:20:23.940
based on whether it's,
for example, already

00:20:23.940 --> 00:20:26.770
disabled for your domain.

00:20:26.770 --> 00:20:31.990
The other is, let's say you
want to trigger the request.

00:20:31.990 --> 00:20:34.490
You do
Notification.requestPermission,

00:20:34.490 --> 00:20:36.810
and the callback will
take as an argument

00:20:36.810 --> 00:20:38.265
a permission parameter.

00:20:41.110 --> 00:20:43.220
And either way, you're
able to then check

00:20:43.220 --> 00:20:45.480
the value of the
permission, either the value

00:20:45.480 --> 00:20:48.030
onload or the value
after you requested it

00:20:48.030 --> 00:20:49.520
and update your UI accordingly.

00:20:53.620 --> 00:20:55.990
And last but not
least, you also have

00:20:55.990 --> 00:20:58.500
to remember that you need
to handle revocation.

00:20:58.500 --> 00:21:02.840
So let's say the user
grants a permission

00:21:02.840 --> 00:21:05.910
but then, for whatever
reason, disables it later.

00:21:05.910 --> 00:21:08.440
This might mean--
or even could just

00:21:08.440 --> 00:21:11.750
be that their device
breaks, you don't know.

00:21:11.750 --> 00:21:13.760
So make sure that
when available,

00:21:13.760 --> 00:21:16.360
take advantage of both
your success callbacks

00:21:16.360 --> 00:21:18.630
and your error callbacks.

00:21:18.630 --> 00:21:21.260
So here's another
example of that.

00:21:21.260 --> 00:21:25.260
Here, this is currently in the
middle of recording audio using

00:21:25.260 --> 00:21:26.600
getUserMedia.

00:21:26.600 --> 00:21:29.230
So I previously
granted the permission.

00:21:29.230 --> 00:21:33.520
But now I'm going
to take it back.

00:21:33.520 --> 00:21:37.600
And the next time the user goes
to click the Record button,

00:21:37.600 --> 00:21:39.410
the error callback
is going to fire.

00:21:39.410 --> 00:21:42.760
And you can see in the
console at the bottom

00:21:42.760 --> 00:21:46.600
say that it's a
permission denied error.

00:21:46.600 --> 00:21:48.530
So this is an example
of showing how

00:21:48.530 --> 00:21:51.410
you can pass in both a success
callback followed by an error

00:21:51.410 --> 00:21:53.460
callback.

00:21:53.460 --> 00:21:55.980
And in the error callback, you
could say Disable the feature

00:21:55.980 --> 00:21:57.217
and Update the UI setting.

00:22:00.350 --> 00:22:03.740
So hopefully, we're
able to help you

00:22:03.740 --> 00:22:07.520
as developers build good
permissions user experiences.

00:22:07.520 --> 00:22:10.280
Because I want you all to
be able to use these really

00:22:10.280 --> 00:22:13.180
awesome APIs that
are coming out.

00:22:13.180 --> 00:22:15.380
And as part of that,
you need to make sure

00:22:15.380 --> 00:22:18.747
that you're justifying
to users both

00:22:18.747 --> 00:22:20.580
why you should be able
to get the permission

00:22:20.580 --> 00:22:23.560
and also why you should keep it.

00:22:23.560 --> 00:22:28.170
And as I said before, we
want to help you do this,

00:22:28.170 --> 00:22:30.260
so we love feedback.

00:22:30.260 --> 00:22:32.420
And also, these will
be posted later.

00:22:32.420 --> 00:22:36.090
All of the demos and the code
examples are on my GitHub.

00:22:36.090 --> 00:22:37.740
Thank you.

00:22:37.740 --> 00:22:39.290
[APPLAUSE]

