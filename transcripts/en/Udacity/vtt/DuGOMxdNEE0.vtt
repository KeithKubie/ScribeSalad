WEBVTT
Kind: captions
Language: en

00:00:00.025 --> 00:00:04.180
Re-shooting video ten, create and evaluate an estimator.

00:00:04.180 --> 00:00:05.610
Let's summarize where we are.

00:00:05.610 --> 00:00:08.760
So recall we started with the initial general question,

00:00:08.760 --> 00:00:11.070
can we predict the next time a person will tweet?

00:00:11.070 --> 00:00:12.930
So we started with a general question,

00:00:12.930 --> 00:00:15.420
can we predict the next time a person will tweet.

00:00:15.420 --> 00:00:19.440
We decided to use the number of seconds since last tweet,

00:00:19.440 --> 00:00:21.030
in order to quantify the problem.

00:00:21.030 --> 00:00:25.000
We decided that we wanted to estimate the number of seconds since last tweet,

00:00:25.000 --> 00:00:27.040
using the regression estimator.

00:00:27.040 --> 00:00:31.110
And we modeled that regression estimator using an exponential fit,

00:00:31.110 --> 00:00:34.770
which gave us an initial data parameter of 1451.5 seconds.

00:00:36.480 --> 00:00:40.660
We then used half things inequality to put a confidence band around that.

00:00:40.660 --> 00:00:43.042
Now, let's see how this guess turns out.

00:00:43.042 --> 00:00:46.412
So, for each value in our time until next list,

00:00:46.412 --> 00:00:51.820
we're going to subtract from it, our guess of 1451 and a half seconds.

00:00:51.820 --> 00:00:56.560
Then we'll just collect those values, in this list (exp_diffs).

00:00:56.560 --> 00:00:58.630
And, just to pick up from where we were before,

00:00:58.630 --> 00:01:01.530
here's a histogram of those sign differences.

00:01:01.530 --> 00:01:03.580
So, the first thing you might notice,

00:01:03.580 --> 00:01:08.070
which is very interesting, is that most of this graph occurs before 0.

00:01:08.070 --> 00:01:10.840
The meaning of this is that most of the time our guess is

00:01:10.840 --> 00:01:13.560
over estimating the actual intertweet time, so

00:01:13.560 --> 00:01:16.540
to make this quantitative let's use the describe method.

00:01:16.540 --> 00:01:21.670
As you can see here, over 50% of the time it overestimates the time until

00:01:21.670 --> 00:01:24.720
next tweet, by at least 18 and a half minutes.

00:01:24.720 --> 00:01:29.210
Now in the next video we'll continue to investigate the results of our model,

00:01:29.210 --> 00:01:30.970
but before we do that it's time for a quiz.

