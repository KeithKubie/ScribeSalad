WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:02.850
[APPLAUSE]

00:00:02.850 --> 00:00:03.890
JANA MOUDRA: Hi.

00:00:03.890 --> 00:00:07.660
I'm so much excited to be
here and to talk about Dart.

00:00:07.660 --> 00:00:09.200
I'm Jana Moudra,
and today I would

00:00:09.200 --> 00:00:12.430
love to show you how we can
build an app using a Dart

00:00:12.430 --> 00:00:14.210
and Firebase.

00:00:14.210 --> 00:00:16.690
So before I start,
I will show you

00:00:16.690 --> 00:00:21.810
or I will tell you who am I. I'm
from Prague in Czech Republic.

00:00:21.810 --> 00:00:23.970
I have there a company
called Juicymo, where we

00:00:23.970 --> 00:00:25.820
do mobile and app development.

00:00:25.820 --> 00:00:28.490
And I'm also a Google
Developer expert for Dart

00:00:28.490 --> 00:00:31.230
because I love to
talk about Dart.

00:00:31.230 --> 00:00:34.350
And last but not
least, I'm a teacher

00:00:34.350 --> 00:00:37.180
at a university because I
love to teach and to teach

00:00:37.180 --> 00:00:39.210
developers.

00:00:39.210 --> 00:00:41.790
So today I would
love to show you

00:00:41.790 --> 00:00:44.810
how we can build a great
and cool applications using

00:00:44.810 --> 00:00:47.830
Dart and Firebase
and how it can be

00:00:47.830 --> 00:00:51.830
so much productive with them.

00:00:51.830 --> 00:00:57.690
So let's start with me and Dart,
Why I do love Dart so much.

00:00:57.690 --> 00:01:00.940
Dart makes me so much
productive and happy developer.

00:01:00.940 --> 00:01:05.239
Because I often say that when
I'm writing Dart applications,

00:01:05.239 --> 00:01:09.090
I just sit and write
a code which works.

00:01:09.090 --> 00:01:10.580
That's awesome.

00:01:10.580 --> 00:01:13.910
And also, I know
what's happening there.

00:01:13.910 --> 00:01:16.680
I can't explain my
happiness with this

00:01:16.680 --> 00:01:18.360
because, yeah, it works.

00:01:18.360 --> 00:01:22.580
And I know why it
works and how it works,

00:01:22.580 --> 00:01:26.140
and I can build a great
application with Dart.

00:01:26.140 --> 00:01:30.620
But great application
need a backend.

00:01:30.620 --> 00:01:34.860
And backend, there might
seem to be a lot of regs

00:01:34.860 --> 00:01:36.220
in implementing backends.

00:01:36.220 --> 00:01:39.670
Because, well, you have
to have a developer who

00:01:39.670 --> 00:01:41.450
will implement that backend.

00:01:41.450 --> 00:01:44.230
And there has to be
a lot of stuff to do.

00:01:44.230 --> 00:01:46.910
So, for example, you
have to have a database.

00:01:46.910 --> 00:01:49.550
So you have to set up a
database, select a database,

00:01:49.550 --> 00:01:52.590
and do a lot of stuff
around a database.

00:01:52.590 --> 00:01:55.630
Then you, for example,
want to have a file upload,

00:01:55.630 --> 00:01:59.670
and you want to have some
users in your application.

00:01:59.670 --> 00:02:04.340
So you have to implement a
login, registration, sign out.

00:02:04.340 --> 00:02:08.870
And also, users
forget their password.

00:02:08.870 --> 00:02:13.480
So you have to also implement
forget password function.

00:02:13.480 --> 00:02:18.350
Then you would love to have an
anonymous user, [INAUDIBLE],

00:02:18.350 --> 00:02:22.240
or you have to have some
hosting for your application.

00:02:22.240 --> 00:02:26.112
And it's quite a lot of work if
you have a simple application.

00:02:26.112 --> 00:02:29.350
a lot of work to do.

00:02:29.350 --> 00:02:32.320
Well, and this
girl doesn't really

00:02:32.320 --> 00:02:36.400
love implementing backends
because they are not

00:02:36.400 --> 00:02:39.710
very much enjoyable to her
because there is no design

00:02:39.710 --> 00:02:42.850
and colors at the backend.

00:02:42.850 --> 00:02:46.590
And worse, she would
love to have a backend

00:02:46.590 --> 00:02:50.630
without implementing backend.

00:02:50.630 --> 00:02:52.970
What we can do with this?

00:02:52.970 --> 00:02:55.630
Because this girl doesn't
love implementing backends,

00:02:55.630 --> 00:02:57.990
she doesn't want to hire
a developer for that.

00:02:57.990 --> 00:03:01.680
So what can we do?

00:03:01.680 --> 00:03:04.650
Say hello to a service
called Firebase.

00:03:04.650 --> 00:03:09.230
With Firebase, you can have a
lot of nice services, features.

00:03:09.230 --> 00:03:13.480
You can have a realtime debase,
authentication, cloud storage,

00:03:13.480 --> 00:03:15.550
hosting, and more.

00:03:15.550 --> 00:03:17.710
And they are so
easy to implement.

00:03:17.710 --> 00:03:22.890
And you can then focus on
much more important stuff.

00:03:22.890 --> 00:03:24.670
And I have great news for you.

00:03:24.670 --> 00:03:26.420
Because here, we
are at Dart summit.

00:03:26.420 --> 00:03:28.430
We want to hear about Dart.

00:03:28.430 --> 00:03:30.920
So you can use
Firebase with Dart

00:03:30.920 --> 00:03:32.800
by using Firebase3 free package.

00:03:32.800 --> 00:03:34.220
I implement it.

00:03:34.220 --> 00:03:36.600
The Firebase3
package is a package

00:03:36.600 --> 00:03:38.450
which is around JS interop.

00:03:38.450 --> 00:03:41.710
You heard about how to
implement JS interop today.

00:03:41.710 --> 00:03:45.750
So I'm using the new JS interop,
still like at the bottom layer.

00:03:45.750 --> 00:03:49.660
And there is also a wrapper
around the JS interop

00:03:49.660 --> 00:03:54.310
to provide you developers a
nicer and better developer API

00:03:54.310 --> 00:03:56.920
and experience.

00:03:56.920 --> 00:03:58.560
So what about the experience?

00:03:58.560 --> 00:04:01.480
What's the better experience
with this wrapper?

00:04:01.480 --> 00:04:03.110
Well, types.

00:04:03.110 --> 00:04:06.540
I have to say I love types,
and I love using them.

00:04:06.540 --> 00:04:10.480
So with this Firebase3
package, you can use types.

00:04:10.480 --> 00:04:12.450
And you can benefit from it.

00:04:12.450 --> 00:04:15.180
Like, for example, when
you're using code completion,

00:04:15.180 --> 00:04:18.769
it's better for
documentation and so on.

00:04:18.769 --> 00:04:19.940
Futures.

00:04:19.940 --> 00:04:22.360
I love futures, especially
a single weight.

00:04:22.360 --> 00:04:25.100
So lot of methods in
this Firebase3 package.

00:04:25.100 --> 00:04:29.230
Write your own future,
and you can use it.

00:04:29.230 --> 00:04:30.290
Streams.

00:04:30.290 --> 00:04:33.100
We don't want to
implement some callbacks.

00:04:33.100 --> 00:04:36.350
Like, streams are much
more nicer for this.

00:04:36.350 --> 00:04:37.610
We can listen on streams.

00:04:37.610 --> 00:04:38.630
We can filter them.

00:04:38.630 --> 00:04:44.162
And then we can like-- we can
then do some functionality when

00:04:44.162 --> 00:04:45.120
something even happens.

00:04:47.680 --> 00:04:48.800
Methods.

00:04:48.800 --> 00:04:52.950
You might have heard today
that there is some [? Hello ?]

00:04:52.950 --> 00:04:56.110
[? interop. ?] So don't worry
about this because with this

00:04:56.110 --> 00:04:59.510
Firebase3 package, you don't
have to care about and any

00:04:59.510 --> 00:05:00.770
[? Hello ?] [? interop ?].

00:05:00.770 --> 00:05:05.000
You just pause there
as parameter functions,

00:05:05.000 --> 00:05:07.910
which are normal Dart functions
without any [? Hello ?]

00:05:07.910 --> 00:05:10.010
[? interop. ?]

00:05:10.010 --> 00:05:15.070
So that's all cool stuff,
but Jana, show us something,

00:05:15.070 --> 00:05:16.520
show us some demo.

00:05:16.520 --> 00:05:17.330
So let's go.

00:05:20.800 --> 00:05:24.800
So I have a simple valve
application, which is kind of

00:05:24.800 --> 00:05:25.980
[INAUDIBLE].

00:05:25.980 --> 00:05:29.550
Here you can see that I
can just somehow sign in.

00:05:29.550 --> 00:05:32.030
And I'm just having
here some notes.

00:05:32.030 --> 00:05:34.530
So let's do first the sign in.

00:05:34.530 --> 00:05:36.300
I have signed with Google.

00:05:36.300 --> 00:05:38.100
So I will sign in.

00:05:38.100 --> 00:05:40.940
There's some time-- because
I have the full screen.

00:05:40.940 --> 00:05:43.950
And yes, now I'm
signed in with Google.

00:05:43.950 --> 00:05:46.820
So this is a moment of
Firebase authentication.

00:05:46.820 --> 00:05:49.590
And I'm now signed in.

00:05:49.590 --> 00:05:51.360
Now again, see
that lots of notes

00:05:51.360 --> 00:05:54.410
have-- I'm able to
create a new note,

00:05:54.410 --> 00:05:57.140
or also I am able
to delete a note.

00:05:57.140 --> 00:05:59.650
So let's start with
creating a new note.

00:05:59.650 --> 00:06:02.640
So let's create a new note.

00:06:02.640 --> 00:06:08.730
Dart summit is awesome.

00:06:08.730 --> 00:06:10.650
And let's add the note.

00:06:10.650 --> 00:06:12.220
And this [INAUDIBLE] Firebase.

00:06:12.220 --> 00:06:14.941
They're in Firebase, and you
can see that the note appeared

00:06:14.941 --> 00:06:15.440
immediately.

00:06:17.980 --> 00:06:21.580
OK, like posting new notes,
so let's put there some image.

00:06:21.580 --> 00:06:24.020
So I'll put there on image.

00:06:24.020 --> 00:06:27.340
I have prepared my
image of my earrings

00:06:27.340 --> 00:06:30.060
and-- to our Dart earrings.

00:06:30.060 --> 00:06:35.350
And I have to write there
note text, so Dart earrings.

00:06:35.350 --> 00:06:38.070
And let's post them there.

00:06:38.070 --> 00:06:40.820
And they appeared
immediately again.

00:06:40.820 --> 00:06:42.780
So I can refresh.

00:06:42.780 --> 00:06:46.880
And you can see all of
the notes I did there.

00:06:46.880 --> 00:06:48.830
So I'll show you another thing.

00:06:48.830 --> 00:06:52.590
Because all the clients which
are connected to this web

00:06:52.590 --> 00:06:54.815
page are able to post
their data when they

00:06:54.815 --> 00:06:56.620
load with their Google login.

00:06:56.620 --> 00:06:59.170
And then if they post
some note, the note

00:06:59.170 --> 00:07:01.230
appears in all clients.

00:07:01.230 --> 00:07:05.170
So I will do this
with my mobile phone.

00:07:05.170 --> 00:07:07.780
So let's do that.

00:07:07.780 --> 00:07:15.530
So I'll write here-- note,
summit, and let's take picture.

00:07:21.690 --> 00:07:24.205
So I'll do a picture
of the screen.

00:07:27.910 --> 00:07:30.110
And then I'll post it.

00:07:30.110 --> 00:07:33.290
And note not posted yet.

00:07:33.290 --> 00:07:35.000
So now I'm loading the image.

00:07:35.000 --> 00:07:38.100
And now I'll post it.

00:07:38.100 --> 00:07:40.382
And you can see it
appeared immediately.

00:07:40.382 --> 00:07:43.694
[APPLAUSE]

00:07:45.940 --> 00:07:48.040
This application is
simple, but it's full

00:07:48.040 --> 00:07:51.710
implement in Dart and
Firebase using this library.

00:07:51.710 --> 00:07:55.200
So let's get back
to my presentation.

00:07:55.200 --> 00:07:59.060
So how you can build
an app like this?

00:07:59.060 --> 00:08:00.880
Let's take a look.

00:08:00.880 --> 00:08:02.870
So first thing, what
do you need to do know

00:08:02.870 --> 00:08:05.410
is to find a Firebase3 package.

00:08:05.410 --> 00:08:06.940
It's [INAUDIBLE].

00:08:06.940 --> 00:08:09.730
So you can put it in
your [INAUDIBLE] file.

00:08:09.730 --> 00:08:11.270
Then you can do the [INAUDIBLE].

00:08:11.270 --> 00:08:12.210
You will get it.

00:08:12.210 --> 00:08:13.460
And you can use it.

00:08:13.460 --> 00:08:15.240
So then you have to import it.

00:08:15.240 --> 00:08:17.260
And because as I already
said, the package

00:08:17.260 --> 00:08:20.060
is like of wraparound interop.

00:08:20.060 --> 00:08:23.130
You have to also include--
or you can't-- you have

00:08:23.130 --> 00:08:27.210
to remember to include the
original JavaScript SDK

00:08:27.210 --> 00:08:31.000
of Firebase to your HTML file
because it's a wraparound

00:08:31.000 --> 00:08:32.059
interop.

00:08:32.059 --> 00:08:33.789
So this is the import.

00:08:33.789 --> 00:08:35.360
And then what we can use?

00:08:35.360 --> 00:08:38.900
We can use all services
like real time database,

00:08:38.900 --> 00:08:43.100
authentication, cloud
storage, and hosting.

00:08:43.100 --> 00:08:45.470
So let's take a look
at realtime database.

00:08:45.470 --> 00:08:50.110
Realtime database is
cloud-hosted database

00:08:50.110 --> 00:08:52.980
which uses JSON distorted data.

00:08:52.980 --> 00:08:56.580
So let's take a look how
we can structure our data.

00:08:56.580 --> 00:09:00.590
Data are JSON, so you
can see here our notes.

00:09:00.590 --> 00:09:01.820
So there is one note.

00:09:01.820 --> 00:09:06.200
The note has some key
and some attribute.

00:09:06.200 --> 00:09:08.850
And then let's take
look how can we load

00:09:08.850 --> 00:09:10.290
the data to our application.

00:09:10.290 --> 00:09:12.350
This is a code from my app.

00:09:12.350 --> 00:09:16.550
And so we are listening
to some childAdded even.

00:09:16.550 --> 00:09:21.020
So we put there on
our databaseRef,

00:09:21.020 --> 00:09:24.940
we put onChildAdded
stream, and then

00:09:24.940 --> 00:09:27.170
we start listen to that stream.

00:09:27.170 --> 00:09:31.450
And if there aren't new data
added to our application,

00:09:31.450 --> 00:09:32.860
new Note is added.

00:09:32.860 --> 00:09:35.880
Then we get to the listen part.

00:09:35.880 --> 00:09:37.900
We get the snapshot of the data.

00:09:37.900 --> 00:09:40.960
Then we can get a value
from them, which is a Map.

00:09:40.960 --> 00:09:45.570
And we can, for example, create
the new note and show it.

00:09:45.570 --> 00:09:47.550
So that was simple.

00:09:47.550 --> 00:09:48.805
Then we want to save the data.

00:09:48.805 --> 00:09:50.180
Because when we
want to log data,

00:09:50.180 --> 00:09:51.880
we have to also save
data, because we

00:09:51.880 --> 00:09:53.470
need to have some data.

00:09:53.470 --> 00:09:55.647
Saving is really simple.

00:09:55.647 --> 00:09:56.730
You have your databaseRef.

00:09:56.730 --> 00:09:57.230
Ref.

00:09:57.230 --> 00:09:58.870
So you call push.

00:09:58.870 --> 00:10:02.850
And with the push, you
put there some nice Dart

00:10:02.850 --> 00:10:04.880
object so it can be
a list, or here you

00:10:04.880 --> 00:10:07.610
can see a map, which has
been pushed to the server,

00:10:07.610 --> 00:10:08.980
to the Firebase server.

00:10:08.980 --> 00:10:11.270
And we are using a
[INAUDIBLE] because we

00:10:11.270 --> 00:10:14.970
are having their futures.

00:10:14.970 --> 00:10:16.960
So that was pretty simple.

00:10:16.960 --> 00:10:17.840
We can do more stuff.

00:10:17.840 --> 00:10:21.880
We can do also update, or we
can do update in transactions.

00:10:21.880 --> 00:10:24.040
And we can also do
delete on the data.

00:10:24.040 --> 00:10:28.410
And it's only with calling
some methods, which

00:10:28.410 --> 00:10:30.650
are available because
of the Firebase.

00:10:30.650 --> 00:10:35.820
And this took us about 15
minutes of implementation.

00:10:35.820 --> 00:10:39.040
So let's take a look at
more on authentication.

00:10:39.040 --> 00:10:41.370
Authentication,
because we want to have

00:10:41.370 --> 00:10:43.350
some users in our application.

00:10:43.350 --> 00:10:48.390
So we want to be able to log
in, log out, register, or so on.

00:10:48.390 --> 00:10:52.620
And our application
used a Google login.

00:10:52.620 --> 00:10:54.730
So we have there
a Google provider.

00:10:54.730 --> 00:10:56.640
So how to do this?

00:10:56.640 --> 00:10:59.190
Let's create new
GoogleAuthProvider,

00:10:59.190 --> 00:11:03.060
and then call the methods
called signInWithPopup

00:11:03.060 --> 00:11:05.882
with that provider
on our auth object.

00:11:05.882 --> 00:11:06.590
And you are done.

00:11:06.590 --> 00:11:08.430
And That's all.

00:11:08.430 --> 00:11:10.300
You can also have
other providers.

00:11:10.300 --> 00:11:12.850
There is for Twitter
GitHub, Facebook.

00:11:12.850 --> 00:11:14.190
You can implement your own.

00:11:14.190 --> 00:11:16.260
Or you can implement
an email provider

00:11:16.260 --> 00:11:21.880
if you want to have the standard
email login, logout and so on.

00:11:21.880 --> 00:11:25.620
Sometimes you want to
get your current user

00:11:25.620 --> 00:11:26.910
in the application.

00:11:26.910 --> 00:11:28.590
This is really simple.

00:11:28.590 --> 00:11:31.770
Just call out currentUser.

00:11:31.770 --> 00:11:34.220
And it will get the current
user in your application,

00:11:34.220 --> 00:11:35.350
which is logged in.

00:11:35.350 --> 00:11:38.030
And you can get the
image about the user.

00:11:38.030 --> 00:11:43.210
Or you can get a name,
email address, and so on.

00:11:43.210 --> 00:11:45.860
And also, I mentioned
a email provider.

00:11:45.860 --> 00:11:49.140
If you want to implement for
example, the registration,

00:11:49.140 --> 00:11:52.600
there is a method called
createUserWithEmalAndPassword,

00:11:52.600 --> 00:11:55.180
which you will call
in your auth object.

00:11:55.180 --> 00:11:57.890
And then the user is registered.

00:11:57.890 --> 00:12:01.950
You will get the user, and you
can who displayed a profile

00:12:01.950 --> 00:12:04.230
or whatever.

00:12:04.230 --> 00:12:07.210
So authentication is
also really simple.

00:12:07.210 --> 00:12:11.280
You are just calling some method
which does the stuff for you

00:12:11.280 --> 00:12:12.560
on Firebase.

00:12:12.560 --> 00:12:15.295
So let's say that this
took us five minutes.

00:12:18.650 --> 00:12:20.400
Now let's take a look
at cloud storage.

00:12:20.400 --> 00:12:24.230
Because sometimes we want to
be able to upload some files

00:12:24.230 --> 00:12:26.940
to our server, which we
have in our application

00:12:26.940 --> 00:12:29.100
because we had
their image upload.

00:12:29.100 --> 00:12:32.210
So let's take a
look how to do this.

00:12:32.210 --> 00:12:35.310
So first you need
to get the file.

00:12:35.310 --> 00:12:37.700
So somehow you get the file.

00:12:37.700 --> 00:12:41.680
And then you need to call
on your storage reference.

00:12:41.680 --> 00:12:43.670
You need to call the put method.

00:12:43.670 --> 00:12:47.930
But you need to also put
there a path to that file.

00:12:47.930 --> 00:12:50.590
So you are calling
child with a file name.

00:12:50.590 --> 00:12:52.380
And then you call
the method put,

00:12:52.380 --> 00:12:56.080
which will upload a file
to the cloud storage.

00:12:56.080 --> 00:12:58.820
And because we want
to use futures,

00:12:58.820 --> 00:13:02.180
we will call future to use
as a single way and so on.

00:13:02.180 --> 00:13:04.850
And then when we have
the image uploaded,

00:13:04.850 --> 00:13:07.850
we can get the download
URL from the snapshot.

00:13:10.680 --> 00:13:13.770
So again, cloud
storage, implementation

00:13:13.770 --> 00:13:17.510
of this file upload was
really easy-- 10 minutes.

00:13:17.510 --> 00:13:18.640
You can do more.

00:13:18.640 --> 00:13:20.930
And you can find everything
in the documentation,

00:13:20.930 --> 00:13:25.070
and it's really
easy to implement.

00:13:25.070 --> 00:13:28.570
So I show you how
you could implement

00:13:28.570 --> 00:13:33.680
application which uses Dart
and Firebase very fast.

00:13:33.680 --> 00:13:37.840
Dart provides you nice
types, better productivity,

00:13:37.840 --> 00:13:39.790
and nice API.

00:13:39.790 --> 00:13:42.870
And Firebase provides you great
services which you can use,

00:13:42.870 --> 00:13:45.000
and you don't have
to implement them.

00:13:45.000 --> 00:13:48.010
And you can focus on much
more important stuff.

00:13:48.010 --> 00:13:53.710
Dart and Firebase are so cool
and great partners together.

00:13:53.710 --> 00:13:56.980
Maybe you want to ask
where you can get this.

00:13:56.980 --> 00:13:59.580
So the library is
already on the pub,

00:13:59.580 --> 00:14:02.270
so you can search
there for Firebase3.

00:14:02.270 --> 00:14:03.280
You will find it there.

00:14:03.280 --> 00:14:07.600
It's also on GitHub, so
you can download it easily.

00:14:07.600 --> 00:14:12.230
And finally, I wanted to say you
can also build an app like this

00:14:12.230 --> 00:14:14.550
using Dart and Firebase.

00:14:14.550 --> 00:14:15.550
Thank you.

00:14:15.550 --> 00:14:19.010
[APPLAUSE]

