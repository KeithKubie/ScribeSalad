WEBVTT
Kind: captions
Language: en

00:00:10.827 --> 00:00:12.910
MANO MARKS: Hi, I'm Mano
Marks, developer advocate

00:00:12.910 --> 00:00:14.680
from the Google Maps API team.

00:00:14.680 --> 00:00:16.180
This is the fourth
video in a series

00:00:16.180 --> 00:00:19.110
of four designed to show you how
to get started with the Google

00:00:19.110 --> 00:00:21.070
Maps JavaScript API.

00:00:21.070 --> 00:00:23.670
In the last video, I
covered adding an API key

00:00:23.670 --> 00:00:27.080
to your Maps API loader
and the various parameters

00:00:27.080 --> 00:00:28.800
that the loader takes.

00:00:28.800 --> 00:00:32.159
In this video, I'll cover
the basics of map options

00:00:32.159 --> 00:00:34.430
and getting your maps
to render on a page.

00:00:34.430 --> 00:00:37.520
If you've been following
along with this video series,

00:00:37.520 --> 00:00:41.790
you have a text document
with this code in it.

00:00:41.790 --> 00:00:43.960
As we walk through
this basic HTML page,

00:00:43.960 --> 00:00:46.390
you'll see the basic
declaration of elements.

00:00:46.390 --> 00:00:49.020
The first thing I want to
point out is the style element.

00:00:49.020 --> 00:00:51.690
One of the most common
mistakes that developers make

00:00:51.690 --> 00:00:56.420
is to not specify the size of
the div that contains the map.

00:00:56.420 --> 00:00:58.530
If you don't declare
a size for the div,

00:00:58.530 --> 00:01:01.960
then when the map is
created, it will be created,

00:01:01.960 --> 00:01:05.930
but it will be invisible
because the div is size 0.

00:01:05.930 --> 00:01:07.370
This isn't part of the Maps API.

00:01:07.370 --> 00:01:11.740
It's a basic part of
how HTML and CSS work.

00:01:11.740 --> 00:01:16.060
In this sample, we've put the
style in line with the page.

00:01:16.060 --> 00:01:17.910
In most cases,
however, you would

00:01:17.910 --> 00:01:20.340
like to link to a separate
file containing your style

00:01:20.340 --> 00:01:24.074
sheets for ease of
maintenance and reusability.

00:01:24.074 --> 00:01:25.740
The next thing you
see is the script tag

00:01:25.740 --> 00:01:27.620
that loads the Maps API.

00:01:27.620 --> 00:01:29.690
I covered that in
the last video.

00:01:29.690 --> 00:01:32.570
Next we'll see the JavaScript
that adds the map the page.

00:01:32.570 --> 00:01:35.860
You'll see we declared the map
variable as a global variable.

00:01:35.860 --> 00:01:38.660
That's in case you need
it for other functions.

00:01:38.660 --> 00:01:40.724
Next there's an
initialize function.

00:01:40.724 --> 00:01:42.390
This is where we
actually create the map

00:01:42.390 --> 00:01:44.380
and assign it to
a particular div.

00:01:44.380 --> 00:01:46.530
In the initialize function,
the first thing we do

00:01:46.530 --> 00:01:49.640
is create a map options object.

00:01:49.640 --> 00:01:51.340
There are two
required properties

00:01:51.340 --> 00:01:53.430
for a map options object.

00:01:53.430 --> 00:01:56.070
They are zoom and center.

00:01:56.070 --> 00:01:58.580
Zoom we covered in the
first video in the series.

00:01:58.580 --> 00:02:01.490
As a reminder, zoom
0 is zoomed way out,

00:02:01.490 --> 00:02:03.637
showing the map of
the whole Earth.

00:02:03.637 --> 00:02:05.470
Higher zoom levels get
you closer to the map

00:02:05.470 --> 00:02:07.670
and show more detail.

00:02:07.670 --> 00:02:10.570
We also talked briefly about
center in the first video,

00:02:10.570 --> 00:02:14.400
but, as a reminder,
the center of the map

00:02:14.400 --> 00:02:16.920
has a lat/long object.

00:02:16.920 --> 00:02:19.520
A Google Maps lat/long
object has two properties,

00:02:19.520 --> 00:02:22.210
latitude and
longitude, naturally.

00:02:22.210 --> 00:02:24.190
You'll see lat/long
objects again,

00:02:24.190 --> 00:02:29.250
particularly in various kinds
of overlays, like markers.

00:02:29.250 --> 00:02:30.700
There's a whole
host of parameters

00:02:30.700 --> 00:02:33.260
that you can use in
a map options object.

00:02:33.260 --> 00:02:37.840
For more information, check
out the reference at this URL.

00:02:37.840 --> 00:02:39.850
Going back to the
initialization function,

00:02:39.850 --> 00:02:42.060
we create the map
object and assign it

00:02:42.060 --> 00:02:44.976
to the map canvas element.

00:02:44.976 --> 00:02:47.595
There's nothing magical
about the name Map Canvas.

00:02:47.595 --> 00:02:49.720
It's just one that we've
chosen, and so it shows up

00:02:49.720 --> 00:02:51.014
in all of our samples.

00:02:51.014 --> 00:02:52.680
You can see in the
body element, there's

00:02:52.680 --> 00:02:55.300
a div with the ID
map-canvas, which

00:02:55.300 --> 00:02:57.670
is where the map
object will render.

00:02:57.670 --> 00:03:01.250
Lastly, we add a Google
Maps DOM listener.

00:03:01.250 --> 00:03:04.190
This is a DOM listener that
waits for the page to load

00:03:04.190 --> 00:03:06.380
and triggers an
initialize function.

00:03:06.380 --> 00:03:08.310
That will prevent the
map from rendering

00:03:08.310 --> 00:03:11.540
before the page is ready.

00:03:11.540 --> 00:03:12.780
OK, that's it.

00:03:12.780 --> 00:03:16.890
You have the basics you
need for creating a map.

00:03:16.890 --> 00:03:19.260
If you are having any
trouble getting your map up

00:03:19.260 --> 00:03:21.390
and running, you might
consult this video

00:03:21.390 --> 00:03:23.730
on troubleshooting
and common issues,

00:03:23.730 --> 00:03:25.350
and our support
page has links off

00:03:25.350 --> 00:03:29.500
to the right tags
on Stack Overflow.

