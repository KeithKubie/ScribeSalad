WEBVTT
Kind: captions
Language: en

00:00:13.646 --> 00:00:17.217 align:start size:3% position:97% line:0%
â™ª

00:00:21.620 --> 00:00:24.824 align:start position:0%
[buzzing]

00:00:38.537 --> 00:00:41.207 align:start size:91% position:9%
Hi. Welcome to
the Qualcomm Thinkabit Lab.

00:00:41.207 --> 00:00:45.011
I hope you'll be excited
to build an LED circuit

00:00:45.011 --> 00:00:48.415
and get an Arduino
to get it to blink.

00:00:49.949 --> 00:00:51.951
You will need an Arduino.

00:00:53.119 --> 00:00:55.054
You will need a breadboard.

00:00:55.054 --> 00:00:57.356 align:start size:88% position:13%
Hopefully, you've already
got it color-coded.

00:00:57.356 --> 00:00:59.592
You'll need a resistor,

00:00:59.592 --> 00:01:01.861
you'll need an LED,

00:01:01.861 --> 00:01:05.798 align:start size:91% position:9%
and, of course, you'll need
a red and black wire.

00:01:05.798 --> 00:01:08.300 align:start size:81% position:19%
Okay, so,
to make this easier,

00:01:08.300 --> 00:01:11.404 align:start size:94% position:6%
let's make sure
we actually label our pieces.

00:01:11.404 --> 00:01:16.008 align:start size:94% position:6%
I'd like for you to go ahead
and put a big circle

00:01:16.008 --> 00:01:19.245
around your resistor
and write "resistor."

00:01:19.245 --> 00:01:22.314 align:start size:88% position:13%
This way you don't forget
what it is.

00:01:22.314 --> 00:01:26.586
Next, go ahead and put
a big circle around LED

00:01:26.586 --> 00:01:29.155
and label it "LED."

00:01:29.155 --> 00:01:33.559
And I want you to know
that LED is an acronym.

00:01:33.559 --> 00:01:35.728 align:start size:84% position:16%
It stands for
"light-emitting diode."

00:01:35.728 --> 00:01:37.930 align:start size:84% position:16%
Also, use
your observation skills

00:01:37.930 --> 00:01:41.734 align:start size:94% position:6%
and notice that our LED
has two different size legs,

00:01:41.734 --> 00:01:43.303
and our resistor doesn't.

00:01:43.303 --> 00:01:44.871
What does that mean?

00:01:44.871 --> 00:01:47.674 align:start size:81% position:19%
It means that our LED
has<i> polarity.</i>

00:01:47.674 --> 00:01:51.844
I'll write that word down.
It's a cool word. Polarity.

00:01:51.844 --> 00:01:54.914 align:start size:88% position:13%
That means that you have
two opposite ends.

00:01:54.914 --> 00:01:59.452 align:start position:0%
We have a positive side
on our LED. It's the long stick.

00:01:59.452 --> 00:02:03.322 align:start size:94% position:6%
Find that and put
a positive symbol next to it.

00:02:03.322 --> 00:02:06.725 align:start size:91% position:9%
Then the short stick
will be our negative side.

00:02:06.725 --> 00:02:08.628
That's what gives us polarity.

00:02:08.628 --> 00:02:12.397 align:start size:91% position:9%
Lastly, make sure you have
a red and black wire.

00:02:12.397 --> 00:02:15.134
How do I build
the LED circuit?

00:02:15.134 --> 00:02:18.605
To cook a new dish,
what would you need?

00:02:18.605 --> 00:02:19.939
A recipe, right?

00:02:19.939 --> 00:02:22.608 align:start size:88% position:13%
A recipe lists
the ingredients you need

00:02:22.608 --> 00:02:24.943
and how to put it together.

00:02:24.943 --> 00:02:27.213 align:start size:75% position:25%
A schematic
is like a recipe.

00:02:27.213 --> 00:02:30.282 align:start size:81% position:19%
It tells us how
to build our circuit.

00:02:30.282 --> 00:02:32.618
So, let's write this word down.

00:02:32.618 --> 00:02:34.954 align:start size:81% position:19%
And I love this word:
<i> schematic.</i>

00:02:34.954 --> 00:02:37.390
It's kind of fun to say.

00:02:37.390 --> 00:02:40.059 align:start size:88% position:13%
Schematic. You should
try saying it. Schematic.

00:02:40.059 --> 00:02:43.830
All right. What's one thing
all circuits have in common?

00:02:43.830 --> 00:02:47.433
Power. So, let's draw
the symbol for power.

00:02:47.433 --> 00:02:50.536
Draw a circle.

00:02:50.536 --> 00:02:53.205 align:start size:84% position:16%
Have the positive side
and negative side,

00:02:53.205 --> 00:02:55.508 align:start size:75% position:25%
a wire coming out
of positive,

00:02:55.508 --> 00:02:58.144 align:start size:81% position:19%
and a wire coming out
of negative.

00:02:58.144 --> 00:03:00.880 align:start size:78% position:22%
Next thing we need
is a resistor.

00:03:00.880 --> 00:03:03.182
Why do we need a resistor?

00:03:03.182 --> 00:03:06.252 align:start size:78% position:22%
We don't want
to blow up our LED.

00:03:06.252 --> 00:03:10.089 align:start position:0%
Don't try it and think
you'll see some cool explosion.

00:03:10.089 --> 00:03:12.758 align:start size:81% position:19%
It's just gone.
You wasted your LED.

00:03:12.758 --> 00:03:16.228 align:start size:94% position:6%
Make sure that doesn't happen
by using a resistor.

00:03:16.228 --> 00:03:19.632 align:start size:84% position:16%
We have a wire,
the bulk in the middle,

00:03:19.632 --> 00:03:21.234
and then another wire.

00:03:21.234 --> 00:03:23.535
And our resistor
looks like that.

00:03:23.535 --> 00:03:27.674
There's a wire on this end,
this bulk in the middle,

00:03:27.674 --> 00:03:29.676
and this wire here.

00:03:29.676 --> 00:03:32.678 align:start size:88% position:13%
Then let's draw a symbol
for an LED.

00:03:32.678 --> 00:03:36.415 align:start size:84% position:16%
We have a wire,
the bulk in the middle,

00:03:36.415 --> 00:03:37.816
and another wire.

00:03:37.816 --> 00:03:42.355 line:0%
If I left it like that,
it would just be a diode.

00:03:42.355 --> 00:03:44.357 align:start size:84% position:16% line:0%
To make
a light-emitting diode,

00:03:44.357 --> 00:03:47.760 align:start size:88% position:13% line:0%
you need a squiggly line
coming out of it.

00:03:47.760 --> 00:03:51.964 align:start size:97% position:3% line:0%
This is the positive side,
and this is the negative side.

00:03:51.964 --> 00:03:54.267
But my schematic
is not complete.

00:03:54.267 --> 00:03:56.268 align:start size:81% position:19%
They're not touching
each other,

00:03:56.268 --> 00:03:59.404 align:start size:88% position:13%
and an incomplete circuit
will not work.

00:03:59.404 --> 00:04:01.407 align:start size:75% position:25%
So let's complete
this circuit

00:04:01.407 --> 00:04:04.477 align:start size:91% position:9%
by connecting all the ends
to each other.

00:04:08.680 --> 00:04:12.919
To get power, we'll use our
Arduino like a fancy battery.

00:04:12.919 --> 00:04:15.588 align:start size:81% position:19%
To do that,
connect your Arduino

00:04:15.588 --> 00:04:18.290 align:start size:78% position:22%
using the USB cable
that you have,

00:04:18.290 --> 00:04:21.494 align:start size:88% position:13%
and connect that Arduino
to your laptop.

00:04:22.562 --> 00:04:24.730 align:start size:81% position:19%
When you've done that
correctly,

00:04:24.730 --> 00:04:27.800 align:start size:91% position:9%
you'll notice a green light
on your Arduino.

00:04:27.800 --> 00:04:29.802 align:start size:75% position:25%
Don't worry about
other lights.

00:04:29.802 --> 00:04:34.340 align:start position:0%
So long as you have your
green light, you're good to go.

00:04:34.340 --> 00:04:37.776 align:start size:94% position:6%
Now let's read our schematic
and build our circuit.

00:04:37.776 --> 00:04:40.079 line:0%
First, we'll create
this positive rail.

00:04:41.780 --> 00:04:44.050 line:0%
Notice I use the color red.

00:04:44.050 --> 00:04:48.587 align:start size:97% position:3% line:0%
We use red because
we're going to use a red wire.

00:04:48.587 --> 00:04:50.189 line:0%
Also, when building circuits,

00:04:50.189 --> 00:04:52.525 align:start size:84% position:16% line:0%
you want to color-code
your wires.

00:04:52.525 --> 00:04:55.561 align:start size:91% position:9%
It makes it easier
for troubleshooting later.

00:04:55.561 --> 00:04:57.497
So take your red wire

00:04:58.664 --> 00:05:02.601 align:start position:0%
and stick it into the power side
of your Arduino

00:05:02.601 --> 00:05:04.937
in the 5v hole, okay?

00:05:04.937 --> 00:05:07.640 align:start size:94% position:6%
Find 5v,
which stands for five volts,

00:05:07.640 --> 00:05:11.043 align:start size:84% position:16%
and take the other end
of your red wire

00:05:11.043 --> 00:05:14.881 align:start size:88% position:13%
and put it in the red row
of your breadboard.

00:05:14.881 --> 00:05:18.283 align:start position:0%
When you've done that correctly,
that entire red row

00:05:18.283 --> 00:05:19.685
is essentially 5v.

00:05:19.685 --> 00:05:21.921
So, take your red wire,

00:05:23.856 --> 00:05:27.326 align:start size:84% position:16%
put it in 5v,
and take the other end

00:05:27.326 --> 00:05:31.230 align:start size:88% position:13%
and put it in the red row
of your breadboard.

00:05:31.230 --> 00:05:32.898
Okay, cool.

00:05:32.898 --> 00:05:34.901 align:start size:81% position:19% line:0%
Looking at
our schematic again,

00:05:34.901 --> 00:05:37.737 align:start size:84% position:16% line:0%
notice we have
this negative side too.

00:05:37.737 --> 00:05:39.738 line:0%
I'm using the black marker

00:05:39.738 --> 00:05:42.642 align:start size:84% position:16% line:0%
because we're gonna use
the black wire.

00:05:42.642 --> 00:05:46.245 align:start size:88% position:13% line:0%
And we want to create
this whole negative rail.

00:05:47.412 --> 00:05:49.015 line:0%
Also known as<i> ground.</i>

00:05:50.016 --> 00:05:53.085 align:start size:88% position:13%
I'd like you
to take your black wire,

00:05:53.085 --> 00:05:55.020
find GND of your power--

00:05:55.020 --> 00:05:59.191
and it doesn't matter which GND
because they're all the same,

00:05:59.191 --> 00:06:01.126
and GND stands for ground--

00:06:01.126 --> 00:06:05.364 align:start size:94% position:6%
and take your black wire,
connect GND to the black row.

00:06:05.364 --> 00:06:09.469 align:start size:78% position:22% line:0%
So now we've taken
the black wire,

00:06:10.570 --> 00:06:16.175 align:start size:81% position:19% line:0%
and we went from GND
to the black row.

00:06:17.209 --> 00:06:18.644
Cool.

00:06:18.644 --> 00:06:22.448 align:start size:94% position:6%
Now, this is where you
really want to pay attention

00:06:22.448 --> 00:06:26.685
because if you can follow the
logic of this simple circuit,

00:06:26.685 --> 00:06:31.290 align:start position:0%
you could potentially build
any circuit from any schematic.

00:06:31.290 --> 00:06:33.959 align:start size:84% position:16%
If you notice,
look at this resistor.

00:06:33.959 --> 00:06:37.262
One end of this resistor
is metal-to-metal touching

00:06:37.262 --> 00:06:40.065 align:start size:75% position:25%
the positive side
of my power.

00:06:40.065 --> 00:06:44.437
So I want to recreate that
in the physical world, right?

00:06:44.437 --> 00:06:46.439
I'm gonna take my resistor

00:06:46.439 --> 00:06:50.209 align:start size:91% position:9%
and make sure that one end
of my metal piece

00:06:50.209 --> 00:06:53.278
is metal-to-metal touching
that 5v that I've created.

00:06:53.278 --> 00:06:55.982 align:start size:78% position:22%
To do that,
I take my resistor

00:06:55.982 --> 00:06:59.051
and put one end
in the red row.

00:06:59.051 --> 00:07:01.653
And when I've done that,

00:07:01.653 --> 00:07:04.222 align:start size:91% position:9%
I've just created
this part of the schematic.

00:07:04.222 --> 00:07:07.693 align:start size:94% position:6%
Then I'll take
the other end of my resistor

00:07:07.693 --> 00:07:10.329
and put it in the blue row.

00:07:10.329 --> 00:07:14.166 align:start size:88% position:13%
So I've designated
this side of my resistor,

00:07:14.166 --> 00:07:17.236 align:start size:75% position:25%
and I put it
in the blue row.

00:07:19.071 --> 00:07:20.539
Cool.

00:07:20.539 --> 00:07:22.541
Now, looking
at my schematic

00:07:22.541 --> 00:07:25.945 align:start size:91% position:9%
and following the logic
that I've provided so far,

00:07:25.945 --> 00:07:27.947 line:0%
where would my LED go,

00:07:27.947 --> 00:07:32.617 align:start position:0% line:0%
and where would the positive
and negative sides of my LED go?

00:07:32.617 --> 00:07:34.553 line:0%
Notice that the positive side

00:07:34.553 --> 00:07:38.156 line:0%
is metal-to-metal touching
the other end of my resistor,

00:07:38.156 --> 00:07:40.826 line:0%
and my negative side of my LED

00:07:40.826 --> 00:07:44.229 align:start size:97% position:3% line:0%
is metal-to-metal touching
my negative side of the power.

00:07:44.229 --> 00:07:48.667
So, take your positive side
of your LED, the long stick,

00:07:48.667 --> 00:07:51.337
and put it in the blue row,

00:07:51.337 --> 00:07:54.406 align:start size:91% position:9%
and take the negative side,
the short stick,

00:07:54.406 --> 00:07:57.075
and put it in the black row.

00:07:57.075 --> 00:07:59.811 align:start size:84% position:16%
And you've got
a working LED circuit.

00:07:59.811 --> 00:08:02.582 align:start size:91% position:9%
That is a purely electrical
engineering experience.

00:08:02.582 --> 00:08:04.950 align:start size:78% position:22%
You should be proud
of yourself.

00:08:04.950 --> 00:08:07.619 align:start size:78% position:22%
Now that you've got
your LED going,

00:08:07.619 --> 00:08:12.457
wouldn't it be cool if we used
our Arduino to get blinking?

00:08:12.457 --> 00:08:16.028 align:start size:91% position:9%
So, before we start working
with our code,

00:08:16.028 --> 00:08:20.232 align:start position:0%
take your red wire
and leave it out of the Arduino.

00:08:20.232 --> 00:08:23.034 align:start size:84% position:16%
Leave it hanging there
for a minute.

00:08:23.034 --> 00:08:26.638 align:start size:97% position:3%
Now, go ahead and double-click
in Arduino.

00:08:26.638 --> 00:08:30.175 align:start size:91% position:9%
It's the same symbol
as on your actual Arduino.

00:08:30.175 --> 00:08:32.544
Go ahead and double-click on it,

00:08:32.544 --> 00:08:35.414 align:start size:88% position:13%
and whenever you connect
a new Arduino,

00:08:35.414 --> 00:08:38.851 align:start size:91% position:9%
make sure you're going
through the right com port.

00:08:38.851 --> 00:08:41.487 align:start size:84% position:16%
It's like going through
the right door.

00:08:41.487 --> 00:08:45.257 align:start position:0%
You want your message
to go through the right channel.

00:08:45.257 --> 00:08:49.261
To do that, go to
"Tools: Find Port"

00:08:49.261 --> 00:08:53.765
and find the com number that's
associated with your Arduino.

00:08:53.765 --> 00:08:57.536 align:start size:94% position:6%
Click on it,
and you should be good to go.

00:08:57.536 --> 00:09:01.406 align:start size:91% position:9%
Next, go ahead and open up
the blink example.

00:09:01.406 --> 00:09:04.109
And the way that you do that

00:09:04.109 --> 00:09:07.313 align:start size:88% position:13%
is you go to
"File: Examples, Basics,"

00:09:08.314 --> 00:09:10.316
and then click on "Blink."

00:09:11.517 --> 00:09:13.819 align:start size:84% position:16%
When you've done that,
expand it

00:09:13.819 --> 00:09:16.856 align:start size:94% position:6%
so that you're not distracted
by anything else,

00:09:16.856 --> 00:09:18.991
and then upload this code.

00:09:18.991 --> 00:09:22.461 align:start position:0%
To upload it, click on the arrow
pointing right.

00:09:22.461 --> 00:09:26.265 align:start size:91% position:9%
Click on that, and when
you hover over the buttons,

00:09:26.265 --> 00:09:28.601
it tells you what it does.

00:09:28.601 --> 00:09:32.138 align:start size:94% position:6%
Hover over the arrow pointing
right. It says "upload."

00:09:32.138 --> 00:09:36.141
In the blue bar, you'll see
that it's uploading code.

00:09:36.141 --> 00:09:38.177
Once it says "done uploading,"

00:09:38.177 --> 00:09:42.114 align:start size:88% position:13%
take your red wire
and plug it into pin 13.

00:09:43.648 --> 00:09:45.451
[buzzing]

00:09:45.451 --> 00:09:47.753 align:start size:78% position:22%
If you've got
your LED blinking,

00:09:47.753 --> 00:09:50.288 align:start size:78% position:22%
give yourselves
a round of applause

00:09:50.288 --> 00:09:52.824 align:start size:91% position:9%
for successfully uploading
an example code.

00:09:52.824 --> 00:09:55.494 align:start size:81% position:19%
Let's go through
these lines of code,

00:09:55.494 --> 00:09:59.632
'cause I want you to understand
the basics of what's happening.

00:09:59.632 --> 00:10:03.068 align:start size:91% position:9%
First, you'll notice
that your code is all gray.

00:10:03.068 --> 00:10:05.003
These first lines of code.

00:10:05.003 --> 00:10:07.673
Gray lines of code
are just comments,

00:10:07.673 --> 00:10:10.742 align:start size:94% position:6%
which are useful when you're
coding with somebody.

00:10:10.742 --> 00:10:12.378
When you're pair programming,

00:10:12.378 --> 00:10:14.346 align:start size:78% position:22%
sometimes it's hard
to understand

00:10:14.346 --> 00:10:16.415
simply by reading the code.

00:10:16.415 --> 00:10:19.485 align:start size:91% position:9% line:0%
It's nice to have comments
associated with it

00:10:19.485 --> 00:10:22.921 line:0%
so that you can understand
what their intention was

00:10:22.921 --> 00:10:25.958 line:0%
when they were trying
to write their code.

00:10:25.958 --> 00:10:29.728 align:start position:0%
With this LED, we're maybe using
ten lines of code.

00:10:29.728 --> 00:10:33.799 align:start size:94% position:6%
It's 25 million lines of code
in a cell phone.

00:10:33.799 --> 00:10:35.801
You can imagine
an individual

00:10:35.801 --> 00:10:38.070 align:start size:84% position:16%
trying write that code
by themselves.

00:10:38.070 --> 00:10:40.005 align:start size:84% position:16%
It would be
physically impossible.

00:10:40.005 --> 00:10:42.274
It would take
2,700 years

00:10:42.274 --> 00:10:45.677 align:start size:91% position:9%
if you were trying
to write code by yourself.

00:10:45.677 --> 00:10:47.012
It requires teamwork,

00:10:47.012 --> 00:10:49.315 align:start size:88% position:13%
so comments are important
when coding.

00:10:49.315 --> 00:10:50.983
Moving on.

00:10:52.984 --> 00:10:55.287
We'll go to our<i> void setup.</i>

00:10:55.287 --> 00:10:59.257 align:start size:88% position:13%
So, our void setup
is setting up our board.

00:10:59.257 --> 00:11:02.060 align:start size:78% position:22%
It will run through
this code once,

00:11:02.060 --> 00:11:05.230 align:start size:81% position:19%
'cause it only needs
to set up once.

00:11:05.230 --> 00:11:08.701 align:start position:0%
Inside our void setup,
it says "pinMode (13, OUTPUT)."

00:11:08.701 --> 00:11:10.135
And it's cool.

00:11:10.135 --> 00:11:13.606
Not many words in the coding
world are self-explanatory,

00:11:13.606 --> 00:11:15.140
but this one is.

00:11:15.140 --> 00:11:16.542
It says "pinMode,"

00:11:16.542 --> 00:11:19.245 align:start size:84% position:16%
and there's two things
it's looking for.

00:11:19.245 --> 00:11:21.914
The pin is what pin
you're addressing.

00:11:21.914 --> 00:11:23.516
Is it a coincidence

00:11:23.516 --> 00:11:27.286 align:start size:88% position:13%
that our red wire's in 13
and it says 13?

00:11:27.286 --> 00:11:30.722 align:start size:94% position:6%
If you upload it after you've
changed that number,

00:11:30.722 --> 00:11:32.658 align:start size:78% position:22%
would your circuit
still work?

00:11:32.658 --> 00:11:36.895 align:start size:84% position:16%
So, this says "13."
Next, it says "output."

00:11:36.895 --> 00:11:38.464
Again, "pinMode."

00:11:38.464 --> 00:11:40.732
This is the pin over here,

00:11:40.732 --> 00:11:44.169
and this is its mode,
which is an output.

00:11:44.169 --> 00:11:46.872 align:start position:0%
We're outputting information.
We're not inputting information.

00:11:46.872 --> 00:11:49.909
As I'm talking to you,
I'm<i> outputting</i> stuff.

00:11:49.909 --> 00:11:52.944 align:start size:91% position:9%
If I stopped to listen,
I'm<i> inputting</i> information.

00:11:52.944 --> 00:11:56.448
That's the difference there,
and we're only outputting now.

00:11:56.448 --> 00:12:00.152 align:start size:91% position:9%
So, we're gonna leave that
as it is.

00:12:00.152 --> 00:12:03.055 align:start size:84% position:16%
Going next,
we have our void loop.

00:12:03.055 --> 00:12:05.457 align:start size:78% position:22%
This is where
the action happens.

00:12:05.457 --> 00:12:08.160 align:start position:0%
Again, kind of self-explanatory.
It's a loop.

00:12:08.160 --> 00:12:11.230 align:start size:91% position:9%
It will go
through these lines of code

00:12:11.230 --> 00:12:13.965 align:start size:81% position:19%
over and over again,
like a loop.

00:12:13.965 --> 00:12:18.336
Until you unplug it, it will
never stop reading that code.

00:12:18.336 --> 00:12:21.540 align:start size:81% position:19%
It will execute
each line at a time.

00:12:21.540 --> 00:12:23.842
I'll read each line of code

00:12:23.842 --> 00:12:27.245 align:start size:94% position:6%
and act like I'm an Arduino,
or an LED.

00:12:27.245 --> 00:12:29.515 align:start size:91% position:9%
The first line:
"digitalWrite (13, HIGH)."

00:12:29.515 --> 00:12:32.918 align:start size:91% position:9%
which is high voltage,
meaning the LED turned on.

00:12:32.918 --> 00:12:35.253 align:start size:78% position:22%
Next line of code:
"delay (1000),"

00:12:35.253 --> 00:12:39.525 align:start position:0%
which means I can't do anything
for 1,000 milliseconds.

00:12:40.626 --> 00:12:43.662 align:start size:84% position:16%
I can't read
the next line of code.

00:12:43.662 --> 00:12:45.664
I shouldn't be
talking either.

00:12:45.664 --> 00:12:49.168
I'll awkwardly stare at you
for a thousand milliseconds.

00:12:51.103 --> 00:12:53.806 align:start size:88% position:13%
Next line of code:
"digitalWrite (13, LOW)."

00:12:53.806 --> 00:12:56.842 align:start size:84% position:16%
That means low voltage,
LED could turn off.

00:12:56.842 --> 00:13:00.613
Awesome. I can immediately
read the next line of code.

00:13:00.613 --> 00:13:03.783
"Delay 1,000 milliseconds."
Again, can't do anything.

00:13:08.187 --> 00:13:10.989 align:start size:81% position:19%
All right.
Next, go back up top.

00:13:10.989 --> 00:13:12.992
Remember, this is a loop.

00:13:12.992 --> 00:13:16.027
It will keep going
over and over again.

00:13:16.027 --> 00:13:17.629
So, "digitalWrite 13, high."

00:13:17.629 --> 00:13:20.699 align:start size:94% position:6%
High voltage, LED turned on.
"Delay 1,000."

00:13:24.769 --> 00:13:27.472 align:start size:84% position:16%
Next line of code:
"digitalWrite 13, low."

00:13:27.472 --> 00:13:30.209
Low voltage, LED off.

00:13:30.209 --> 00:13:31.644
"Delay 1,000."

00:13:34.779 --> 00:13:40.052
What would I need to do if I
wanted my LED to blink faster?

00:13:40.052 --> 00:13:41.920
What changes in my code?

00:13:41.920 --> 00:13:44.222 align:start size:88% position:13%
I think
it's changing the delay.

00:13:44.222 --> 00:13:46.258 align:start size:78% position:22%
So let's experiment
with that.

00:13:46.258 --> 00:13:51.396 align:start size:97% position:3%
If I were to decrease my delay
number to, let's say, 250,

00:13:51.396 --> 00:13:54.866 align:start size:88% position:13%
I think my LED
is going to blink faster.

00:13:54.866 --> 00:13:57.235
But let's test that theory out.

00:13:57.235 --> 00:14:01.039
Remember, every time you make
a change, upload your code.

00:14:01.039 --> 00:14:03.775 align:start size:91% position:9%
Otherwise, it's only living
on your computer,

00:14:03.775 --> 00:14:06.478
and you want it
on your Arduino,

00:14:06.478 --> 00:14:09.915 align:start position:0%
and it's on your Arduino
once it's successfully uploaded.

00:14:09.915 --> 00:14:14.553
So, it just got done uploading,
and our LED is blinking faster.

00:14:14.553 --> 00:14:18.056
Awesome. You should play around
with some different numbers.

00:14:18.056 --> 00:14:19.458
See what happens.

00:14:19.458 --> 00:14:22.961 align:start size:97% position:3%
You don't need the same number
on the delays.

00:14:22.961 --> 00:14:24.896
Make it blink so fast

00:14:24.896 --> 00:14:27.532 align:start size:81% position:19%
that you can't see it
blink anymore.

00:14:27.532 --> 00:14:29.033
Try something fun.

00:14:29.033 --> 00:14:32.104
Thanks for helping me
build an LED circuit

00:14:32.104 --> 00:14:34.773
and using Arduino
to make it blink.

00:14:34.773 --> 00:14:36.408
Hope you had fun.

00:14:36.408 --> 00:14:38.410 line:0%
Funding to purchase and make
this educational production

00:14:38.410 --> 00:14:40.411 line:0%
accessible was provided by the
U.S. Department of Education.

00:14:40.411 --> 00:14:41.947 align:start size:84% position:16% line:0%
PH:1-800-USA-LEARN (V)
or WEB: www.ed.gov.

