WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.030
[GOOGLE JINGLE]

00:00:05.030 --> 00:00:06.720
VLADIMIR VUSKOVIC:
Hi, everybody.

00:00:06.720 --> 00:00:11.412
Welcome to Google I/O. I'm Vlad.

00:00:11.412 --> 00:00:13.620
I'm the lead product manager
for the Google Assistant

00:00:13.620 --> 00:00:15.660
for the next billion users.

00:00:15.660 --> 00:00:19.830
I must tell you, this is a
hugely rewarding project.

00:00:19.830 --> 00:00:22.500
Day-to-day, we get to see
how the Google Assistant is

00:00:22.500 --> 00:00:25.980
improving the lives of the
users in emerging countries

00:00:25.980 --> 00:00:30.010
by giving them easy and
intuitive access to information

00:00:30.010 --> 00:00:32.229
and helping them
getting things done.

00:00:32.229 --> 00:00:34.840
Our team is super
passionate about building

00:00:34.840 --> 00:00:37.180
the right product to
empower these users

00:00:37.180 --> 00:00:40.360
and give them confidence and
independence using technology

00:00:40.360 --> 00:00:41.724
through the Google Assistant.

00:00:44.450 --> 00:00:45.830
SACHIT MISHRA: Hey, I'm Sachit.

00:00:45.830 --> 00:00:49.430
I work on developer relations
for the Google Assistant.

00:00:49.430 --> 00:00:50.930
So I've been working
on this product

00:00:50.930 --> 00:00:53.030
consistently for the
last three years,

00:00:53.030 --> 00:00:55.160
and it's because I
believe in the power

00:00:55.160 --> 00:00:59.090
of intelligent experiences and
new paradigms of computing.

00:00:59.090 --> 00:01:01.550
These innovations are going
to empower and transform

00:01:01.550 --> 00:01:04.402
the lives of the
next billion users.

00:01:04.402 --> 00:01:06.110
Building for these
regions, it's an issue

00:01:06.110 --> 00:01:07.483
that's close to my heart.

00:01:07.483 --> 00:01:08.900
While I've been
working here, I've

00:01:08.900 --> 00:01:11.270
had the privilege of
traveling to regions where

00:01:11.270 --> 00:01:13.550
the next billion internet
users are coming online,

00:01:13.550 --> 00:01:15.590
like Brazil and India.

00:01:15.590 --> 00:01:19.220
And I've witnessed firsthand
the extraordinary courage

00:01:19.220 --> 00:01:21.215
that developers in those
regions are showing

00:01:21.215 --> 00:01:23.840
in betting on new
technologies to serve

00:01:23.840 --> 00:01:25.460
their local communities.

00:01:25.460 --> 00:01:28.040
And also, specifically as
an Indian American, someone

00:01:28.040 --> 00:01:30.350
who has strong roots
in a foreign culture

00:01:30.350 --> 00:01:33.770
and has had the privilege
of spending much of my life

00:01:33.770 --> 00:01:35.660
with family in
other countries, I

00:01:35.660 --> 00:01:38.580
care about bringing Google's
best technology to everyone.

00:01:38.580 --> 00:01:40.610
And I think, based on
what you see here today,

00:01:40.610 --> 00:01:41.720
you will agree with me--

00:01:41.720 --> 00:01:43.820
Actions on Google is the
perfect way to do that.

00:01:46.420 --> 00:01:49.752
VLADIMIR VUSKOVIC: OK, first of
all, what is Actions on Google?

00:01:49.752 --> 00:01:51.460
So let's start with
the Google Assistant.

00:01:51.460 --> 00:01:53.430
The Google Assistant
is a conversation

00:01:53.430 --> 00:01:55.500
between you and
Google to help you

00:01:55.500 --> 00:01:57.750
get more done in your world.

00:01:57.750 --> 00:02:00.840
It works on a variety of
voice-enabled home devices

00:02:00.840 --> 00:02:04.320
and on the vast majority
of mobile phones.

00:02:04.320 --> 00:02:06.390
Now, Actions on
Google is the platform

00:02:06.390 --> 00:02:10.580
that enables you developers to
build your apps for the Google

00:02:10.580 --> 00:02:13.160
Assistant.

00:02:13.160 --> 00:02:16.220
Today, there are more or
less 7 and 1/2 billion people

00:02:16.220 --> 00:02:17.240
in the world.

00:02:17.240 --> 00:02:19.370
And only slightly
more than half of them

00:02:19.370 --> 00:02:20.990
are connected to the internet.

00:02:20.990 --> 00:02:25.710
So 3.5 billion people
are not connected yet.

00:02:25.710 --> 00:02:28.400
Now, as the connectivity
grows and the prices

00:02:28.400 --> 00:02:31.040
of the connected
mobile phones go down,

00:02:31.040 --> 00:02:34.380
more and more of these
people are getting connected

00:02:34.380 --> 00:02:35.990
and are coming online.

00:02:35.990 --> 00:02:38.940
The talk today is
about two things.

00:02:38.940 --> 00:02:41.150
First, it is about
why Actions on Google

00:02:41.150 --> 00:02:43.620
is a great way to
build for these users.

00:02:43.620 --> 00:02:46.460
And secondly, we'll
get into some details

00:02:46.460 --> 00:02:50.280
and give you some tips about
how you can build for them.

00:02:50.280 --> 00:02:51.830
Let us see now why
Actions on Google

00:02:51.830 --> 00:02:55.730
is a really good way to build
for the new users coming online

00:02:55.730 --> 00:02:57.840
for the first time.

00:02:57.840 --> 00:03:00.880
So the new users are
going to be different.

00:03:00.880 --> 00:03:04.890
They're going to be less urban
and more peri-urban and rural.

00:03:04.890 --> 00:03:07.580
They will be less fluent in
English, have a lower income.

00:03:07.580 --> 00:03:11.790
They will be very diverse
in terms of age and gender.

00:03:11.790 --> 00:03:14.200
But more importantly
for developers,

00:03:14.200 --> 00:03:18.180
they will have vastly
different digital habits.

00:03:18.180 --> 00:03:20.530
So they have much less
pre-established ways

00:03:20.530 --> 00:03:23.170
of how to use technology,
internet, and how

00:03:23.170 --> 00:03:24.720
they access information.

00:03:24.720 --> 00:03:27.100
They don't have the
legacy of many, many years

00:03:27.100 --> 00:03:29.695
of using the internet
first on computers,

00:03:29.695 --> 00:03:31.570
then after that on
smartphones, and seeing it

00:03:31.570 --> 00:03:34.250
evolve, like many of us here.

00:03:34.250 --> 00:03:38.410
They are basically thrown
into a new digital world

00:03:38.410 --> 00:03:40.480
without much
pre-existing knowledge.

00:03:40.480 --> 00:03:43.360
And they're very likely
to leapfrog the ways

00:03:43.360 --> 00:03:45.950
that we use technology.

00:03:45.950 --> 00:03:48.260
Now, we are seeing
that the voice user

00:03:48.260 --> 00:03:52.130
interface is resonating really,
really well with these users.

00:03:52.130 --> 00:03:53.570
And this shouldn't
be a surprise.

00:03:53.570 --> 00:03:56.330
Voice is the most
intuitive and, you can say,

00:03:56.330 --> 00:03:59.210
most natural human interface.

00:03:59.210 --> 00:04:01.090
There is no need
to read manuals.

00:04:01.090 --> 00:04:03.165
You just speak and
ask what you want,

00:04:03.165 --> 00:04:04.790
almost like you would
do with a friend.

00:04:04.790 --> 00:04:06.920
Everybody knows how to do it.

00:04:06.920 --> 00:04:11.330
In fact, in the countries where
many users are coming online,

00:04:11.330 --> 00:04:13.670
we are seeing that
the Google Assistant

00:04:13.670 --> 00:04:15.350
with its voice-first,
very intuitive

00:04:15.350 --> 00:04:20.089
user interface is being
adopted very rapidly.

00:04:20.089 --> 00:04:22.415
In fact, in countries like
India, Brazil, Indonesia,

00:04:22.415 --> 00:04:25.570
and Mexico, the number of active
users of the Google Assistant

00:04:25.570 --> 00:04:27.010
grew seven times last year.

00:04:30.670 --> 00:04:33.190
These new users are
also different in terms

00:04:33.190 --> 00:04:35.206
of the devices they use.

00:04:35.206 --> 00:04:38.770
They use Android devices, which
have huge adoption everywhere.

00:04:38.770 --> 00:04:43.360
But also recently, very popular
is the Android Go addition.

00:04:43.360 --> 00:04:45.762
This is an optimized
version of Android

00:04:45.762 --> 00:04:48.220
developed from the ground up
for devices with 1 Gig or less

00:04:48.220 --> 00:04:52.180
of RAM and designed to still
offer a snappy and great user

00:04:52.180 --> 00:04:56.140
experience also on these
entry-level smartphones.

00:04:56.140 --> 00:04:57.700
This platform is
growing very fast.

00:04:57.700 --> 00:05:01.750
And today, roughly 70% of
entry-level Android devices

00:05:01.750 --> 00:05:04.260
are activating with Go.

00:05:04.260 --> 00:05:07.570
Big OAMs, like Nokia,
Motorola, Samsung, Xiaomi,

00:05:07.570 --> 00:05:12.040
all have already launched
devices with Android Go.

00:05:12.040 --> 00:05:15.970
These new internet users also
use a new nascent category

00:05:15.970 --> 00:05:18.880
of smart feature phones.

00:05:18.880 --> 00:05:21.820
These are phones with less
memory, less resources.

00:05:21.820 --> 00:05:23.140
They have no touchscreen.

00:05:23.140 --> 00:05:25.540
But they are fully
connected to the internet.

00:05:25.540 --> 00:05:27.820
These phones are available
at a lower price point.

00:05:27.820 --> 00:05:29.560
And they're also seeing
a great adoption,

00:05:29.560 --> 00:05:31.720
with millions of
users using them

00:05:31.720 --> 00:05:34.480
to get to the internet
for the first time.

00:05:34.480 --> 00:05:37.250
Now, for these phones that
don't have a modern touchscreen,

00:05:37.250 --> 00:05:39.550
the voice interface makes
an even bigger difference

00:05:39.550 --> 00:05:41.300
to get things done.

00:05:41.300 --> 00:05:43.660
This is even more true for
many languages for which it's

00:05:43.660 --> 00:05:46.990
really, really hard to
type on a T9 keyboard,

00:05:46.990 --> 00:05:50.240
like, for example, Hindi
and other Indian languages.

00:05:50.240 --> 00:05:53.680
So these new devices really
are voice-first, we can tell.

00:05:53.680 --> 00:05:55.870
So actually, Google
allows you to leverage

00:05:55.870 --> 00:06:00.010
the voice interface of the
Google Assistant for your apps.

00:06:00.010 --> 00:06:03.820
We talked a lot about how
voice is a very effective way

00:06:03.820 --> 00:06:06.020
for the users in
these emerging markets

00:06:06.020 --> 00:06:08.440
to use their phone
technology and internet.

00:06:08.440 --> 00:06:12.740
However, implementing voice
is really, really hard.

00:06:12.740 --> 00:06:15.080
And there is a reason that
it's only recently getting

00:06:15.080 --> 00:06:16.540
a large adoption.

00:06:16.540 --> 00:06:18.520
And the reason is
that, basically, only

00:06:18.520 --> 00:06:22.450
in recent years, we have all
the right technological pieces

00:06:22.450 --> 00:06:24.420
to actually do it well.

00:06:24.420 --> 00:06:26.420
Let us give a quick look
into some of the things

00:06:26.420 --> 00:06:28.910
that we need to get right.

00:06:28.910 --> 00:06:31.950
So speech recognition,
let us start there.

00:06:31.950 --> 00:06:33.980
So here, we need to
basically understand,

00:06:33.980 --> 00:06:35.420
what is the user pronouncing?

00:06:35.420 --> 00:06:39.170
We need to reliably
transform speech into text.

00:06:39.170 --> 00:06:41.790
And we have done
huge progress there.

00:06:41.790 --> 00:06:44.390
So to measure the accuracy
of speech recognition,

00:06:44.390 --> 00:06:47.810
we use a metric that is
called word error rate.

00:06:47.810 --> 00:06:50.870
This metric basically
tells us out of 100 words

00:06:50.870 --> 00:06:55.040
that we recognize, how
many did we get wrong?

00:06:55.040 --> 00:06:59.630
So just some years back,
2013, for American English,

00:06:59.630 --> 00:07:01.670
word error rate was 23%.

00:07:01.670 --> 00:07:04.710
This basically means that
out of every four words,

00:07:04.710 --> 00:07:06.620
we would misrecognize one.

00:07:06.620 --> 00:07:09.110
And this makes it
then really difficult

00:07:09.110 --> 00:07:12.213
then to understand what is
user actually trying to say.

00:07:12.213 --> 00:07:13.880
We've done a lot of
progress since then.

00:07:13.880 --> 00:07:16.640
So 2018-- 2015, I'm sorry--

00:07:16.640 --> 00:07:19.090
the metric word
error rate was at 8%.

00:07:19.090 --> 00:07:22.670
And today, for American
English, it is below 5%.

00:07:22.670 --> 00:07:25.820
This means, basically,
out of 20 words,

00:07:25.820 --> 00:07:28.290
we recognize correctly
more than 19.

00:07:28.290 --> 00:07:30.240
So this is really
a huge difference.

00:07:30.240 --> 00:07:31.940
And we are working
hard all the time

00:07:31.940 --> 00:07:36.540
to improve speech recognition
across all languages.

00:07:36.540 --> 00:07:40.020
We notice that when people
start talking to their devices,

00:07:40.020 --> 00:07:42.120
something really
interesting happens.

00:07:42.120 --> 00:07:45.000
So something switches, and
somehow naturally they start--

00:07:45.000 --> 00:07:47.100
even if it's just devices--

00:07:47.100 --> 00:07:50.390
talking to the devices in
a very conversational way.

00:07:50.390 --> 00:07:54.150
So instead of "weather Delhi,"
like many people would usually

00:07:54.150 --> 00:07:57.670
ask Google, they start
saying things like, "Hey,

00:07:57.670 --> 00:08:00.180
could you please let me know
what is the weather going

00:08:00.180 --> 00:08:02.550
to be in Delhi like tomorrow?"

00:08:02.550 --> 00:08:04.758
It gets even more difficult
since human conversation

00:08:04.758 --> 00:08:05.925
is heavily based on context.

00:08:08.940 --> 00:08:10.710
But when people talk
to devices, they also

00:08:10.710 --> 00:08:13.360
refer to what has been said
previously in dialogue,

00:08:13.360 --> 00:08:14.380
what is around them.

00:08:14.380 --> 00:08:16.890
And all of this
makes it really hard

00:08:16.890 --> 00:08:19.920
for us to actually understand
the meaning behind the words

00:08:19.920 --> 00:08:23.190
that the user is saying,
basically to understand

00:08:23.190 --> 00:08:25.650
the intent of the user.

00:08:25.650 --> 00:08:29.170
Lastly, languages--
to be really helpful,

00:08:29.170 --> 00:08:32.059
we need to speak the languages
that the users actually speak.

00:08:32.059 --> 00:08:33.809
And we need to understand
what the user is

00:08:33.809 --> 00:08:38.010
saying across a variety
of languages and accents.

00:08:38.010 --> 00:08:41.310
And the Google Assistant today
is a real language multitalent

00:08:41.310 --> 00:08:44.610
and speaks now
nearly 30 languages.

00:08:44.610 --> 00:08:46.830
All this is possible because
of some unique strengths

00:08:46.830 --> 00:08:49.877
that Google has in
voice, in particular,

00:08:49.877 --> 00:08:51.960
in the fields like deep
learning, natural language

00:08:51.960 --> 00:08:54.318
understanding, and
understanding user context.

00:08:54.318 --> 00:08:55.860
So by using Actions
on Google, again,

00:08:55.860 --> 00:08:59.390
you can leverage its
expertise for your apps.

00:08:59.390 --> 00:09:02.370
Continuing on languages,
Actions on Google

00:09:02.370 --> 00:09:05.890
is now available in many of
the Google Assistant languages,

00:09:05.890 --> 00:09:08.130
including some of the
top languages spoken

00:09:08.130 --> 00:09:11.100
in the countries where most
people are coming online today.

00:09:11.100 --> 00:09:13.560
And again, we always
work to extend the list

00:09:13.560 --> 00:09:16.607
of the supported languages.

00:09:16.607 --> 00:09:18.190
Let me summarize why
Actions on Google

00:09:18.190 --> 00:09:20.650
is a great way to build
for the next billion users

00:09:20.650 --> 00:09:21.810
coming online.

00:09:21.810 --> 00:09:24.490
So with one implementation,
you reach a diverse set

00:09:24.490 --> 00:09:27.910
of users across
different devices.

00:09:27.910 --> 00:09:29.770
Not only you reach
all of these users,

00:09:29.770 --> 00:09:33.100
but you reach them in a way
that resonates with them

00:09:33.100 --> 00:09:34.540
through the voice interface.

00:09:34.540 --> 00:09:36.310
And you leverage
the Google expertise

00:09:36.310 --> 00:09:40.340
on speech, dialogue,
and languages.

00:09:40.340 --> 00:09:42.440
Let us now look at some
awesome developers.

00:09:42.440 --> 00:09:45.590
I'll very quickly introduce
some nice examples

00:09:45.590 --> 00:09:48.110
to illustrate some
opportunities in some verticals,

00:09:48.110 --> 00:09:54.400
like education, hyperlocal
information, health, and games.

00:09:54.400 --> 00:09:57.760
Hello English is a highly
successful language learning

00:09:57.760 --> 00:10:00.580
mobile app and has
created a fantastic Action

00:10:00.580 --> 00:10:02.710
available in English and Hindi.

00:10:02.710 --> 00:10:06.070
The Action has a persona
called Madhu Sharma that

00:10:06.070 --> 00:10:08.328
helps the users learn English.

00:10:08.328 --> 00:10:09.870
This Action has been
very successful.

00:10:09.870 --> 00:10:13.330
And it illustrates the hunger
of these users to learn

00:10:13.330 --> 00:10:15.640
and better themselves
and the opportunities,

00:10:15.640 --> 00:10:19.210
the huge opportunities
in education vertical.

00:10:19.210 --> 00:10:21.820
Where Is My Train is a super
handy utility for tracking

00:10:21.820 --> 00:10:25.240
trains across the extensive
rail network in India,

00:10:25.240 --> 00:10:27.135
with millions installed
in Google Play.

00:10:27.135 --> 00:10:28.750
With Actions on
Google, it enables

00:10:28.750 --> 00:10:31.500
users to check their train
just using their voice.

00:10:31.500 --> 00:10:33.430
So, for example,
they can say, "Ask

00:10:33.430 --> 00:10:36.940
Where Is My Train to locate
the Hyderabad express."

00:10:36.940 --> 00:10:38.710
This example shows
how Actions providing

00:10:38.710 --> 00:10:42.060
hyperlocal relevant information
can be very relevant to users

00:10:42.060 --> 00:10:45.440
and provide real
value to their lives.

00:10:45.440 --> 00:10:48.170
Colgate Kids is a
very nice Action

00:10:48.170 --> 00:10:50.660
launched in Brazilian
Portuguese that teaches kids

00:10:50.660 --> 00:10:54.980
how to wash their teeth properly
with explanation and the music

00:10:54.980 --> 00:10:56.510
of the right duration.

00:10:56.510 --> 00:10:59.190
It's an example of the
opportunities in the health

00:10:59.190 --> 00:11:01.380
vertical.

00:11:01.380 --> 00:11:05.880
Galinha Pintadinha have a super
successful YouTube channel.

00:11:05.880 --> 00:11:07.710
Their Action in
Brazilian Portuguese

00:11:07.710 --> 00:11:10.500
allows kids to get in touch
with their favorite character.

00:11:10.500 --> 00:11:12.780
They can talk to Galinha,
and she'll answer

00:11:12.780 --> 00:11:14.280
with her already famous voice.

00:11:14.280 --> 00:11:16.830
They can play games like
memory, or recognize characters

00:11:16.830 --> 00:11:21.030
from the shadows, or listen to
Galinha's most famous songs.

00:11:21.030 --> 00:11:24.380
It shows the opportunities
in the games vertical.

00:11:24.380 --> 00:11:26.660
Another great game
example is Chhota Bheem.

00:11:26.660 --> 00:11:30.450
Chhota Bheem is a very popular
kids character in India.

00:11:30.450 --> 00:11:33.290
For the launch of their latest
movie "Chhota Bheem Kung Fu

00:11:33.290 --> 00:11:36.140
Dhamaka," they have
built a personality quiz

00:11:36.140 --> 00:11:38.510
where kids can answer a series
of questions in the movie

00:11:38.510 --> 00:11:40.420
universe.

00:11:40.420 --> 00:11:42.370
I'll close my short
list of examples

00:11:42.370 --> 00:11:44.200
with Cricbuzz, which
is the go-to platform

00:11:44.200 --> 00:11:46.780
to consume
cricket-related content.

00:11:46.780 --> 00:11:49.780
Cricbuzz launched an Action
on Google using templates.

00:11:49.780 --> 00:11:51.430
This action is a
nice example of how

00:11:51.430 --> 00:11:55.150
you can implement high-quality
experiences super quickly

00:11:55.150 --> 00:11:57.160
by just using templates.

00:11:57.160 --> 00:11:59.260
Let us now talk about what
makes these experiences

00:11:59.260 --> 00:12:01.600
great for users and how
you can build for them.

00:12:07.160 --> 00:12:09.440
SACHIT MISHRA: All right,
so we've seen some great use

00:12:09.440 --> 00:12:11.330
cases here that
have demonstrably

00:12:11.330 --> 00:12:14.780
proven real value in the lives
of users in these markets.

00:12:14.780 --> 00:12:17.012
And clearly, there is an
immense opportunity here.

00:12:17.012 --> 00:12:19.220
But let's talk about actually
getting our hands dirty

00:12:19.220 --> 00:12:20.580
and building for these users.

00:12:20.580 --> 00:12:23.310
So the first thing to consider
is the client devices.

00:12:23.310 --> 00:12:25.870
So what are they actually
holding in their hands?

00:12:25.870 --> 00:12:27.710
Well, in many of
these regions, users

00:12:27.710 --> 00:12:31.190
can buy Google Homes or other
Assistant-enabled third-party

00:12:31.190 --> 00:12:32.900
smart speaker devices.

00:12:32.900 --> 00:12:36.045
These are designed for the
assistive experience at home.

00:12:36.045 --> 00:12:38.570
They are stationary, and
they're always ready to help.

00:12:38.570 --> 00:12:40.290
This has dedicated hardware.

00:12:40.290 --> 00:12:44.430
And it's usually a shared device
commonly used by families.

00:12:44.430 --> 00:12:47.850
Now, in the mobile world,
first and foremost is Android.

00:12:47.850 --> 00:12:50.010
So Assistant already
has a huge presence

00:12:50.010 --> 00:12:52.420
on the well-established
Android ecosystem.

00:12:52.420 --> 00:12:54.750
And this is the full
intermodal assistant

00:12:54.750 --> 00:12:57.930
and Actions on Google
experience without limitations.

00:12:57.930 --> 00:12:59.790
So users on these
devices, they tend

00:12:59.790 --> 00:13:02.520
to be more experienced
with mobile and internet

00:13:02.520 --> 00:13:03.380
technologies.

00:13:03.380 --> 00:13:05.130
And with this hardware,
they might already

00:13:05.130 --> 00:13:09.870
be your customer on another
platform, like Google Play.

00:13:09.870 --> 00:13:13.380
And also common in these regions
are our Android Go devices.

00:13:13.380 --> 00:13:17.160
So Android Go edition is an
optimized version of Android.

00:13:17.160 --> 00:13:19.140
It was launched in 2017.

00:13:19.140 --> 00:13:23.160
And it's built for devices
with 1 gigabyte or less of RAM.

00:13:23.160 --> 00:13:25.620
So it comes with a suite
of optimized Google Apps,

00:13:25.620 --> 00:13:27.510
including the Google Assistant.

00:13:27.510 --> 00:13:31.240
And this allows more users to
join the Android ecosystem.

00:13:31.240 --> 00:13:34.620
So the great news here is that
your Actions will be available

00:13:34.620 --> 00:13:38.950
on these devices soon with
no extra work on your part.

00:13:38.950 --> 00:13:41.740
Now, this brings us to some of
the cheapest devices running

00:13:41.740 --> 00:13:42.520
Google Assistant.

00:13:42.520 --> 00:13:44.590
These are smart feature phones.

00:13:44.590 --> 00:13:47.110
So these are extremely
affordable devices.

00:13:47.110 --> 00:13:50.080
They're as low as 20 US dollars.

00:13:50.080 --> 00:13:54.040
And they run a light
operating system called KaiOS.

00:13:54.040 --> 00:13:56.770
Now, they may remind you
of some of our handsets,

00:13:56.770 --> 00:14:00.260
the most premier handsets
from 15 or 20 years ago.

00:14:00.260 --> 00:14:02.140
But these phones
can do so much more.

00:14:02.140 --> 00:14:04.570
They are Wi-Fi and 4G-enabled.

00:14:04.570 --> 00:14:06.640
And they're often sold
with generous data

00:14:06.640 --> 00:14:10.480
plans that can prorate the
entire cost of the device.

00:14:10.480 --> 00:14:13.060
And they also come with apps
from user's favorite internet

00:14:13.060 --> 00:14:17.000
services, including Google
Maps, Search, and, of course,

00:14:17.000 --> 00:14:18.050
Google Assistant.

00:14:18.050 --> 00:14:20.860
And the great news here is,
just like with Android Go,

00:14:20.860 --> 00:14:23.980
your actions will be
available on these devices

00:14:23.980 --> 00:14:25.870
with no extra work on your part.

00:14:25.870 --> 00:14:29.110
Now, the user experience is
similar to a smart speaker,

00:14:29.110 --> 00:14:30.700
so it's voice-only.

00:14:30.700 --> 00:14:33.430
But for this new generation
of internet users

00:14:33.430 --> 00:14:36.730
who are unburdened by the
habits and mental models

00:14:36.730 --> 00:14:39.760
of graphic UIs, this is
an unbelievable chance

00:14:39.760 --> 00:14:42.370
to generate confidence
in your service

00:14:42.370 --> 00:14:45.240
by living on the Assistant.

00:14:45.240 --> 00:14:47.880
So let me reiterate
the value here.

00:14:47.880 --> 00:14:51.870
You build one action,
one common code base

00:14:51.870 --> 00:14:53.285
in the cloud of your choice.

00:14:53.285 --> 00:14:54.660
And your service
is going to live

00:14:54.660 --> 00:14:58.200
across all of these devices,
for all of these users.

00:14:58.200 --> 00:15:00.930
And with the Android or
smart speaker devices,

00:15:00.930 --> 00:15:03.430
you can build for the complete
Actions on Google experience.

00:15:03.430 --> 00:15:05.670
You can have users
sign into your service

00:15:05.670 --> 00:15:06.970
and link their account.

00:15:06.970 --> 00:15:09.790
You can even sell goods
in supported regions.

00:15:09.790 --> 00:15:12.440
However, as we're just launching
for Android Go and KaiOS

00:15:12.440 --> 00:15:15.010
devices, there will be some
limitations to consider.

00:15:15.010 --> 00:15:18.090
So in particular, we won't
be supporting transactions

00:15:18.090 --> 00:15:19.370
or account linking.

00:15:19.370 --> 00:15:21.840
And KaiOS will only
support Actions

00:15:21.840 --> 00:15:23.880
in Indian English and Hindi.

00:15:23.880 --> 00:15:26.610
But we remain committed
to bringing feature parity

00:15:26.610 --> 00:15:29.540
across these devices
going forward.

00:15:29.540 --> 00:15:31.460
All right, so we know
what the next billion

00:15:31.460 --> 00:15:33.937
users will be holding
in their hands

00:15:33.937 --> 00:15:35.270
and what they'll be speaking to.

00:15:35.270 --> 00:15:39.700
So now let's actually consider
what you can build for them.

00:15:39.700 --> 00:15:42.820
If you want to get started
building great actions today,

00:15:42.820 --> 00:15:44.050
build with Actions templates.

00:15:44.050 --> 00:15:44.758
It's that simple.

00:15:44.758 --> 00:15:47.450
We have a few different
varieties to choose from.

00:15:47.450 --> 00:15:49.920
And if you already have
interesting content that you

00:15:49.920 --> 00:15:52.420
want to get out there to users,
or you want to have some fun

00:15:52.420 --> 00:15:54.820
and come up with something
new, templates give you

00:15:54.820 --> 00:15:57.370
an out-of-the-box solution
to entering your content

00:15:57.370 --> 00:16:00.370
into a Google sheet and
producing a high-quality Action

00:16:00.370 --> 00:16:02.630
without writing a
single line of code.

00:16:02.630 --> 00:16:06.220
In fact, all of you can
go home and do this today.

00:16:06.220 --> 00:16:08.950
And the trivia quiz
and flash cards

00:16:08.950 --> 00:16:11.740
templates work in 11
languages, including

00:16:11.740 --> 00:16:14.340
the ones where we're seeing
growth amongst the next billion

00:16:14.340 --> 00:16:14.840
users.

00:16:14.840 --> 00:16:18.010
So this includes Spanish
localized to both Europe

00:16:18.010 --> 00:16:21.610
and Latin America, as well as
Hindi, Brazilian Portuguese,

00:16:21.610 --> 00:16:24.560
and Indonesian, with more
languages coming soon.

00:16:24.560 --> 00:16:28.090
We've already seen success
with these use cases in regions

00:16:28.090 --> 00:16:31.060
where the next billion users
are coming online, which is also

00:16:31.060 --> 00:16:34.460
where entertainment and games
are a common use of technology.

00:16:34.460 --> 00:16:37.362
So templates are a great
solution to use now.

00:16:37.362 --> 00:16:38.820
Now, you might
remember the example

00:16:38.820 --> 00:16:40.110
that Vlad gave earlier--

00:16:40.110 --> 00:16:41.370
Cricbuzz.

00:16:41.370 --> 00:16:44.080
They built an awesome cricket
quiz action using templates.

00:16:44.080 --> 00:16:45.690
So I want to show
you how easy it

00:16:45.690 --> 00:16:47.710
is to build something similar.

00:16:47.710 --> 00:16:49.650
So all I did was I
created a project

00:16:49.650 --> 00:16:54.990
at console.actions.google.com,
and I clicked Templates.

00:16:54.990 --> 00:16:56.520
And it got me to this sheet.

00:16:56.520 --> 00:16:59.232
So I literally just typed
in a bunch of questions

00:16:59.232 --> 00:17:00.690
and some configuration
information,

00:17:00.690 --> 00:17:03.390
like the difficulty levels
for all of those questions.

00:17:03.390 --> 00:17:05.730
And then, boom, I've got
as good of an experience

00:17:05.730 --> 00:17:07.720
as what Cricbuzz
was able to make.

00:17:07.720 --> 00:17:09.660
And it's complete with
sound effects and error

00:17:09.660 --> 00:17:10.770
cases handled.

00:17:10.770 --> 00:17:13.145
You can go from 0 to
100 with templates.

00:17:13.145 --> 00:17:15.270
And like I've said, we've
seen these do really well

00:17:15.270 --> 00:17:16.437
with the next billion users.

00:17:16.437 --> 00:17:18.010
So build one today.

00:17:18.010 --> 00:17:21.300
Seriously, within hours, you can
have a production-ready action

00:17:21.300 --> 00:17:23.010
to deploy

00:17:23.010 --> 00:17:25.780
Now, if you're not looking
to build trivia quiz or flash

00:17:25.780 --> 00:17:29.100
card solution, consider
building a conversation action.

00:17:29.100 --> 00:17:30.770
So this gives you
complete control

00:17:30.770 --> 00:17:33.260
of the dialogue with the
user, allowing you to express

00:17:33.260 --> 00:17:34.460
your brand as you want.

00:17:34.460 --> 00:17:36.710
And it creates a
frictionless way for users

00:17:36.710 --> 00:17:39.110
to get things done,
learn about their world,

00:17:39.110 --> 00:17:41.480
or have some fun
with your service.

00:17:41.480 --> 00:17:44.100
Conversation Actions
are triggered by users.

00:17:44.100 --> 00:17:46.790
They're usually done by
asking for you specifically

00:17:46.790 --> 00:17:51.510
to the Assistant by name or just
saying what they want to do.

00:17:51.510 --> 00:17:53.720
And from there, you go back
and forth with the user

00:17:53.720 --> 00:17:56.300
until the action ends
the dialogue or the user

00:17:56.300 --> 00:17:57.000
cancels out.

00:17:57.000 --> 00:17:58.850
So what I have up
here is an example

00:17:58.850 --> 00:18:01.183
of the action that was built
for this year's Google I/O.

00:18:01.183 --> 00:18:02.933
And you can all try
this today if you have

00:18:02.933 --> 00:18:04.220
the Assistant on your phones.

00:18:04.220 --> 00:18:06.430
Just say, hey, Google,
talk to Google I/O '19.

00:18:06.430 --> 00:18:09.280
So I encourage you
to try this one out.

00:18:09.280 --> 00:18:12.070
Now, the question is, how do you
handle that complicated dialog

00:18:12.070 --> 00:18:15.700
control and that natural
language understanding, or NLU?

00:18:15.700 --> 00:18:18.340
So Dialogflow is
Google's answer.

00:18:18.340 --> 00:18:21.010
And your action can be
backed by a Dialogflow agent,

00:18:21.010 --> 00:18:23.140
including utilities
for matching everything

00:18:23.140 --> 00:18:26.328
the user says throughout
the dialogue to intents.

00:18:26.328 --> 00:18:27.745
This is done with
machine learning

00:18:27.745 --> 00:18:30.130
and is trained by just
a few example phrases

00:18:30.130 --> 00:18:30.880
that you provide.

00:18:30.880 --> 00:18:33.180
Just 10 to 12 is enough.

00:18:33.180 --> 00:18:36.220
And this also includes built-in
conversational modeling

00:18:36.220 --> 00:18:38.235
for situations that
require repair,

00:18:38.235 --> 00:18:39.610
like when the user
says something

00:18:39.610 --> 00:18:40.875
that you don't recognize.

00:18:40.875 --> 00:18:42.250
And all of this
can be customized

00:18:42.250 --> 00:18:43.372
for different languages.

00:18:43.372 --> 00:18:44.830
So for those of
you who are already

00:18:44.830 --> 00:18:46.630
building conversation
actions, you're

00:18:46.630 --> 00:18:47.950
probably already familiar.

00:18:47.950 --> 00:18:49.363
But for anyone
new, you can learn

00:18:49.363 --> 00:18:51.280
a lot more in our other
talks about Assistant.

00:18:51.280 --> 00:18:54.208
Or you can jump in one of
our code labs here at I/O,

00:18:54.208 --> 00:18:55.750
or maybe if you're
on the live stream

00:18:55.750 --> 00:19:00.670
at home on your sofa at
codelabs.developers.google.com.

00:19:00.670 --> 00:19:02.890
So I encourage you
to try that out.

00:19:02.890 --> 00:19:05.860
Now, beyond the purely
conversational aspect

00:19:05.860 --> 00:19:08.380
of these custom
conversational actions,

00:19:08.380 --> 00:19:11.260
you can now leverage the
power of Interactive Canvas

00:19:11.260 --> 00:19:14.773
to engage the next billion
users on their Android devices.

00:19:14.773 --> 00:19:16.690
So this is how Chhota
Bheem was able to create

00:19:16.690 --> 00:19:20.450
their visually impressive
and brand-consistent Kung Fu

00:19:20.450 --> 00:19:21.670
Dhamaka Action.

00:19:21.670 --> 00:19:23.630
And you can learn
more about this today.

00:19:23.630 --> 00:19:26.722
There's a talk at
4:30, so check it out.

00:19:26.722 --> 00:19:28.930
So let's say you are building
your own conversational

00:19:28.930 --> 00:19:29.430
experience.

00:19:29.430 --> 00:19:30.910
How should you
build it differently

00:19:30.910 --> 00:19:32.680
for the next billion users?

00:19:32.680 --> 00:19:35.320
Remember, conversational
interaction

00:19:35.320 --> 00:19:39.040
is the first major technology
that, in the ideal,

00:19:39.040 --> 00:19:42.130
assumes no prior knowledge on
the part of the user in terms

00:19:42.130 --> 00:19:43.930
of understanding UI elements.

00:19:43.930 --> 00:19:46.972
There's no need, for instance,
to understand a hamburger menu.

00:19:46.972 --> 00:19:49.180
And this is especially
important for the next billion

00:19:49.180 --> 00:19:51.610
users, some of whom
haven't learned this

00:19:51.610 --> 00:19:53.320
and really shouldn't have to.

00:19:53.320 --> 00:19:54.970
And I want you to
think about that

00:19:54.970 --> 00:19:58.130
as we make our way through
the next few slides.

00:19:58.130 --> 00:20:00.100
So firstly, a lot
of the same basics

00:20:00.100 --> 00:20:02.303
apply for the next billion
as for the first billion.

00:20:02.303 --> 00:20:04.720
And you can learn a lot more
about this in a talk tomorrow

00:20:04.720 --> 00:20:05.797
at 2:30.

00:20:05.797 --> 00:20:07.630
But the main takeaway
I want you all to have

00:20:07.630 --> 00:20:09.640
here is that conversation
is new for everyone.

00:20:09.640 --> 00:20:12.100
So consider these basics.

00:20:12.100 --> 00:20:13.960
The first thing is,
consider your persona

00:20:13.960 --> 00:20:16.810
ahead of time and draft
dialogues with it in mind.

00:20:16.810 --> 00:20:19.420
Conversation is
inherently personal.

00:20:19.420 --> 00:20:21.290
So express it
through your prompts.

00:20:21.290 --> 00:20:23.770
Now, this doesn't mean you have
to stretch out your prompts

00:20:23.770 --> 00:20:25.480
and shove a persona in there.

00:20:25.480 --> 00:20:27.670
But use it when you're
considering the word

00:20:27.670 --> 00:20:30.340
choice and the tone, et cetera.

00:20:30.340 --> 00:20:32.560
Persona should be
based on your user

00:20:32.560 --> 00:20:36.370
population, their local culture,
their jargon, their slang.

00:20:36.370 --> 00:20:38.260
Consider it an
opportunity to build

00:20:38.260 --> 00:20:40.810
a truly localized experience.

00:20:40.810 --> 00:20:43.700
You'll also want to consider
context-sensitive repair.

00:20:43.700 --> 00:20:46.900
So this means identifying all
the possible error conditions

00:20:46.900 --> 00:20:49.420
throughout your dialogue when
a user might not understand

00:20:49.420 --> 00:20:51.940
what's needed of them,
speech recognition errors,

00:20:51.940 --> 00:20:54.610
and moving between
dialog pads unexpectedly.

00:20:54.610 --> 00:20:57.730
And proactively build in
prompts to guide your user

00:20:57.730 --> 00:21:00.040
to a productive state
in the dialogue.

00:21:00.040 --> 00:21:01.730
So let me give you
a quick example.

00:21:01.730 --> 00:21:03.940
In one of our samples that
we launched on GitHub,

00:21:03.940 --> 00:21:07.090
we allow the user to hear facts
about either Google's history

00:21:07.090 --> 00:21:08.740
or its headquarters.

00:21:08.740 --> 00:21:10.660
So the question we ask
the user is, do you

00:21:10.660 --> 00:21:12.760
want to hear about
history of headquarters?

00:21:12.760 --> 00:21:14.920
Now, we expected the user
to say one of the two.

00:21:14.920 --> 00:21:16.730
But sometimes they
would say yes or no,

00:21:16.730 --> 00:21:18.760
because it's technically
a yes or no question.

00:21:18.760 --> 00:21:21.490
So we changed the
prompt from "do

00:21:21.490 --> 00:21:24.220
you want to hear facts
about this or that"

00:21:24.220 --> 00:21:27.100
to "which do you
prefer," which changes

00:21:27.100 --> 00:21:29.770
the question from a
confirmation question

00:21:29.770 --> 00:21:32.090
to a disambiguation question.

00:21:32.090 --> 00:21:34.275
So these are the kinds
of things to consider.

00:21:34.275 --> 00:21:35.650
Now, I say error
conditions here.

00:21:35.650 --> 00:21:38.650
But truly, in conversation,
there are no errors.

00:21:38.650 --> 00:21:40.560
The user is attempting
cooperation.

00:21:40.560 --> 00:21:44.398
So you need to repay that
with thorough dialogue design.

00:21:44.398 --> 00:21:46.440
And then, when you're
supporting a screen device,

00:21:46.440 --> 00:21:48.090
you can use that
to your advantage.

00:21:48.090 --> 00:21:50.840
Remember, you can check
whether the device supports

00:21:50.840 --> 00:21:52.850
screen output at runtime.

00:21:52.850 --> 00:21:54.650
And you can use
this to determine

00:21:54.650 --> 00:21:57.440
whether to present the user with
some visual selection options,

00:21:57.440 --> 00:22:00.980
like suggestion chips,
or lists, or carousels.

00:22:00.980 --> 00:22:04.140
Now, this is vital for
users around the world,

00:22:04.140 --> 00:22:06.140
but especially for those
who might be unfamiliar

00:22:06.140 --> 00:22:08.380
with conversational interfaces.

00:22:08.380 --> 00:22:11.140
And then for devices that
rely less on visual output,

00:22:11.140 --> 00:22:13.930
like smart feature phones
and smart speakers,

00:22:13.930 --> 00:22:17.690
consider the full range
of the audible experience.

00:22:17.690 --> 00:22:21.820
Utilize SSML, or a Speech
Synthesis Markup Language,

00:22:21.820 --> 00:22:24.910
to create a richer experience
by adding custom audio

00:22:24.910 --> 00:22:29.290
and marking up the TTS for
customized speech delivery.

00:22:29.290 --> 00:22:32.185
All right, so we've covered the
basics of conversation design.

00:22:32.185 --> 00:22:34.260
So let's talk about
some of the specifics

00:22:34.260 --> 00:22:38.310
of designing your prompts
for the next billion users.

00:22:38.310 --> 00:22:40.790
Now, the first thing is
you keep your prompts

00:22:40.790 --> 00:22:42.690
short and to the point.

00:22:42.690 --> 00:22:45.320
So except in the
case of gaming, users

00:22:45.320 --> 00:22:48.410
are likely not looking for
long, drawn out interactions.

00:22:48.410 --> 00:22:50.180
If the user is on
Android, you need

00:22:50.180 --> 00:22:53.420
to prove that you can complete
the task faster than using

00:22:53.420 --> 00:22:54.020
an app.

00:22:54.020 --> 00:22:55.820
And if they're on a
smart feature phone,

00:22:55.820 --> 00:22:58.730
that user is hostage to
your prompt until it ends.

00:22:58.730 --> 00:23:01.700
So don't make them regret
invoking your action.

00:23:01.700 --> 00:23:03.140
And the second
aspect of this is,

00:23:03.140 --> 00:23:06.230
don't leave your prompts
open to interpretation.

00:23:06.230 --> 00:23:09.140
Reduce ambiguity and user
frustration with short

00:23:09.140 --> 00:23:12.350
prompts that ask for exactly
what you need the user to say

00:23:12.350 --> 00:23:14.090
to progress in the dialog.

00:23:14.090 --> 00:23:16.670
So one example from
Where Is My Train

00:23:16.670 --> 00:23:18.710
is that they taper their
greeting for return

00:23:18.710 --> 00:23:20.540
users with a shortened prompt.

00:23:20.540 --> 00:23:22.430
And this is actually a
general best practice.

00:23:22.430 --> 00:23:24.320
And we have utilities
built into the platform

00:23:24.320 --> 00:23:27.292
for saving information about
the user across dialogs.

00:23:27.292 --> 00:23:29.000
And they use the
information they already

00:23:29.000 --> 00:23:30.860
have about the user
here to suggest

00:23:30.860 --> 00:23:32.330
the next turn of dialogue.

00:23:32.330 --> 00:23:36.380
And they give an explicit
yes-no question to progress.

00:23:36.380 --> 00:23:38.630
Now, another tip for users
who might be unfamiliar

00:23:38.630 --> 00:23:42.530
with smart assistive experiences
is to give them a handhold

00:23:42.530 --> 00:23:43.700
into the conversation.

00:23:43.700 --> 00:23:45.770
Prompt them
proactively, get to know

00:23:45.770 --> 00:23:48.890
them and their preferences,
and surface the right behavior

00:23:48.890 --> 00:23:51.020
from your action accordingly.

00:23:51.020 --> 00:23:53.540
Leaving your prompts open-ended
and relying on the user

00:23:53.540 --> 00:23:56.330
to find the functionality
that they need,

00:23:56.330 --> 00:23:57.320
it can be frustrating.

00:23:57.320 --> 00:24:00.890
And it's a missed opportunity
to intelligently engage.

00:24:00.890 --> 00:24:03.230
So keeping your prompts
short and to the point

00:24:03.230 --> 00:24:05.330
and proactively
understanding the user

00:24:05.330 --> 00:24:07.850
increases the likelihood
of matching your Dialogflow

00:24:07.850 --> 00:24:11.978
agent's training phrases and
providing a better experience.

00:24:11.978 --> 00:24:13.770
All right, so speaking
of training phrases,

00:24:13.770 --> 00:24:16.200
let's talk about how to
design your Dialogflow agent

00:24:16.200 --> 00:24:18.720
or other natural language
understanding solution

00:24:18.720 --> 00:24:21.300
to handle the next
billion users' languages.

00:24:21.300 --> 00:24:24.018
Last year at Google for
India, we talked about some

00:24:24.018 --> 00:24:25.560
of the really powerful
features we're

00:24:25.560 --> 00:24:28.320
working on to understand the
way that your users will speak.

00:24:28.320 --> 00:24:30.430
And this includes
understanding, for instance,

00:24:30.430 --> 00:24:32.900
both Hindi and English
for a single user.

00:24:32.900 --> 00:24:34.650
And you all can leverage
these investments

00:24:34.650 --> 00:24:38.110
in speech recognition
in your actions as well.

00:24:38.110 --> 00:24:41.100
So one scenario to consider
is mixed-language use,

00:24:41.100 --> 00:24:43.650
or code switching, in
a single utterance.

00:24:43.650 --> 00:24:46.170
It turns out this is a
pretty common phenomenon

00:24:46.170 --> 00:24:47.940
in non-English
languages, especially

00:24:47.940 --> 00:24:49.390
amongst bilingual users.

00:24:49.390 --> 00:24:51.630
So let's look at an
example of this in Hindi.

00:24:51.630 --> 00:24:55.620
So in Hindi, one way to ask for
the time is "kitne baje hai."

00:24:55.620 --> 00:24:57.940
Forgive my pronunciation,
I'm still learning.

00:24:57.940 --> 00:25:01.530
But you can also say "kya time
hua hai" or "kya time hua."

00:25:01.530 --> 00:25:04.830
Now, here the user is literally
introducing the English word

00:25:04.830 --> 00:25:07.060
"time" in their utterance.

00:25:07.060 --> 00:25:10.108
So how does this get
handled in your action?

00:25:10.108 --> 00:25:11.900
Normally, when you're
handling Hindi input,

00:25:11.900 --> 00:25:13.610
you can expect
Devanagari script.

00:25:13.610 --> 00:25:15.410
And the same happens
to be true here.

00:25:15.410 --> 00:25:18.980
The word "time" gets
transliterated into Hindi

00:25:18.980 --> 00:25:21.313
and passed through using
the same characters.

00:25:21.313 --> 00:25:23.480
Your Dialogflow agent will
receive these characters.

00:25:23.480 --> 00:25:26.690
And you can include them in
your intent-training phrases.

00:25:26.690 --> 00:25:29.100
But what about proper
nouns or other words?

00:25:29.100 --> 00:25:31.020
Let's look at another example.

00:25:31.020 --> 00:25:32.900
So imagine the
user asks "what is

00:25:32.900 --> 00:25:36.350
the GDP of India," or "bhaarat
kee geedeepee kya hai."

00:25:36.350 --> 00:25:39.800
Now, in this case, "GDP"
gets transliterated

00:25:39.800 --> 00:25:42.860
into the literal
sounds of "geedeepee."

00:25:42.860 --> 00:25:44.540
And every user
speaks differently.

00:25:44.540 --> 00:25:45.800
And they're always going
to choose different words

00:25:45.800 --> 00:25:46.660
and phrases.

00:25:46.660 --> 00:25:48.480
And we might understand
them differently.

00:25:48.480 --> 00:25:50.270
So this is why it's
really important

00:25:50.270 --> 00:25:53.060
to actually test your action
with users in the real world

00:25:53.060 --> 00:25:55.040
and understand how
they say things,

00:25:55.040 --> 00:25:57.470
and to keep an eye
on your Dialogflow

00:25:57.470 --> 00:25:59.600
logs and your
analytics to see how

00:25:59.600 --> 00:26:03.590
users are expressing themselves
when they're using your action.

00:26:03.590 --> 00:26:05.130
But there are
exceptions to this.

00:26:05.130 --> 00:26:08.390
So typed input and
suggestion chip content

00:26:08.390 --> 00:26:09.632
will be passed through as is.

00:26:09.632 --> 00:26:11.090
And the other thing
to keep in mind

00:26:11.090 --> 00:26:15.080
is, your actions output, or
TTS, can use multiple languages

00:26:15.080 --> 00:26:15.890
in certain cases.

00:26:15.890 --> 00:26:18.110
So this means you
can better mirror

00:26:18.110 --> 00:26:20.150
the user's natural
mixed language

00:26:20.150 --> 00:26:21.990
use in the action itself.

00:26:21.990 --> 00:26:24.640
So let's see how Hello
English handles code switching

00:26:24.640 --> 00:26:27.320
in their action for learning
languages-- for learning

00:26:27.320 --> 00:26:28.610
English, excuse me.

00:26:28.610 --> 00:26:31.610
So in Dialogflow, you train a
natural language understanding

00:26:31.610 --> 00:26:33.710
module by supplying
training phrases

00:26:33.710 --> 00:26:36.590
for all of the intents
or turns of dialogue

00:26:36.590 --> 00:26:38.160
in your conversation.

00:26:38.160 --> 00:26:40.128
So the training phrases
provide examples

00:26:40.128 --> 00:26:42.170
of what your user might
say when they're actually

00:26:42.170 --> 00:26:43.310
expressing that intent.

00:26:43.310 --> 00:26:46.040
And Dialogflow uses
machine learning

00:26:46.040 --> 00:26:48.110
to match what users
say in real time

00:26:48.110 --> 00:26:51.030
throughout the dialogue to the
example phrases you provided.

00:26:51.030 --> 00:26:54.195
So let's look at the Choose
Lesson intent in Hello English.

00:26:54.195 --> 00:26:56.570
So this is the intent that
gets triggered in the dialogue

00:26:56.570 --> 00:26:58.487
when they're choosing
from a series of lessons

00:26:58.487 --> 00:26:59.420
that they want to do.

00:26:59.420 --> 00:27:01.490
And Hello English
offers a few ways

00:27:01.490 --> 00:27:04.100
to select a lesson
for Hindi users.

00:27:04.100 --> 00:27:06.488
So one way is to
speak Hindi out loud.

00:27:06.488 --> 00:27:08.780
And they've covered that with
the bottom three training

00:27:08.780 --> 00:27:09.280
phrases.

00:27:09.280 --> 00:27:11.360
So in there, they
cover a couple of ways

00:27:11.360 --> 00:27:13.280
to say the word
"lesson," including

00:27:13.280 --> 00:27:16.310
the word "paath" in Hindi, as
well as the transliteration

00:27:16.310 --> 00:27:18.630
of the English word "lesson."

00:27:18.630 --> 00:27:20.750
But you'll also notice
the English word

00:27:20.750 --> 00:27:22.927
for lesson in Latin
characters right

00:27:22.927 --> 00:27:24.010
in their training phrases.

00:27:24.010 --> 00:27:25.560
So why is this?

00:27:25.560 --> 00:27:27.740
It's because their suggestion
chips use English text

00:27:27.740 --> 00:27:29.823
to further help their
students learn the language.

00:27:29.823 --> 00:27:32.780
And suggestion chip text is
passed directly to Dialogflow

00:27:32.780 --> 00:27:33.620
as is.

00:27:33.620 --> 00:27:36.030
So when it's selected, it
should match this intent.

00:27:36.030 --> 00:27:38.440
So they have to include it
in their training phrases.

00:27:38.440 --> 00:27:39.500
All right, so now we've
talked about trying

00:27:39.500 --> 00:27:41.042
to cover all your
bases when it comes

00:27:41.042 --> 00:27:43.730
to training your natural
language understanding module.

00:27:43.730 --> 00:27:46.350
But you should still plan
for unexpected situations.

00:27:46.350 --> 00:27:48.450
So as you might remember,
Vlad mentioned earlier,

00:27:48.450 --> 00:27:51.950
we really invested heavily
and made significant progress

00:27:51.950 --> 00:27:54.080
in automatic speech recognition.

00:27:54.080 --> 00:27:56.660
But it may still be weak
on some of these devices

00:27:56.660 --> 00:27:58.310
with hardware constraints.

00:27:58.310 --> 00:28:01.220
And with different accents,
and different dialects,

00:28:01.220 --> 00:28:03.620
and different levels
of technology exposure,

00:28:03.620 --> 00:28:05.780
users are likely to
cause false positives

00:28:05.780 --> 00:28:06.830
in speech recognition.

00:28:06.830 --> 00:28:09.170
And on top of that, it's
important to anticipate

00:28:09.170 --> 00:28:10.450
the context of your user.

00:28:10.450 --> 00:28:12.780
Maybe they're in a
noisy environment,

00:28:12.780 --> 00:28:15.717
and you can't expect
perfect speech recognition.

00:28:15.717 --> 00:28:17.300
So let's see how
Hello English, again,

00:28:17.300 --> 00:28:18.360
handled a case like this.

00:28:18.360 --> 00:28:20.660
So again, taking us back to
the example from earlier,

00:28:20.660 --> 00:28:22.400
in their Choose
Lesson intent, you'll

00:28:22.400 --> 00:28:25.130
notice I've drawn attention
to a new training phrase--

00:28:25.130 --> 00:28:27.450
and this is the Hindi
word for garlic,

00:28:27.450 --> 00:28:31.270
"lahasun"-- because it
sounds similar to "lesson."

00:28:31.270 --> 00:28:33.020
And this means that
their Dialogflow agent

00:28:33.020 --> 00:28:35.570
is prepared to handle
the Hindi transliteration

00:28:35.570 --> 00:28:39.320
of "lesson" and the speech
recognition mismatch

00:28:39.320 --> 00:28:40.873
for "lahasun."

00:28:40.873 --> 00:28:42.290
Now, one of the
last points I want

00:28:42.290 --> 00:28:44.207
to make when it comes
to building a great user

00:28:44.207 --> 00:28:47.480
experience is that you should
really consider smart feature

00:28:47.480 --> 00:28:49.020
phones separately.

00:28:49.020 --> 00:28:51.980
This is a new product segment
with its own user experience

00:28:51.980 --> 00:28:52.828
and user needs.

00:28:52.828 --> 00:28:55.370
And as I mentioned, there will
be some limitations at launch,

00:28:55.370 --> 00:28:57.860
like account linking and
physical transactions.

00:28:57.860 --> 00:29:00.140
But there are still
opportunities for your action,

00:29:00.140 --> 00:29:01.910
like having your
directory page living

00:29:01.910 --> 00:29:05.030
in RSS directory specially
designed for these phones.

00:29:05.030 --> 00:29:07.820
And we'll be supporting smart
feature phones in the Actions

00:29:07.820 --> 00:29:11.880
console simulator since testing
on device won't be supported.

00:29:11.880 --> 00:29:14.420
Now, when it comes to
the user experience,

00:29:14.420 --> 00:29:16.640
you can think of the smart
feature phone experience

00:29:16.640 --> 00:29:18.920
as similar to a smart
speaker experience,

00:29:18.920 --> 00:29:21.710
except that it's on-the-go
and accessible anywhere.

00:29:21.710 --> 00:29:23.730
Now, because of that,
like I mentioned earlier,

00:29:23.730 --> 00:29:24.980
you want to keep things short.

00:29:24.980 --> 00:29:26.930
People don't want to
listen to long prompts.

00:29:26.930 --> 00:29:29.097
And they need to know exactly
what to say afterwards

00:29:29.097 --> 00:29:30.620
to reduce friction.

00:29:30.620 --> 00:29:32.330
But also like I said
earlier, this also

00:29:32.330 --> 00:29:35.330
means if you've built for a
voice-only experience in Indian

00:29:35.330 --> 00:29:37.250
English or Hindi,
your Action is going

00:29:37.250 --> 00:29:39.110
to be living on
these KaiOS devices

00:29:39.110 --> 00:29:40.610
at no extra cost to you.

00:29:40.610 --> 00:29:42.800
And like with all actions,
there is no installation,

00:29:42.800 --> 00:29:44.540
meaning users
don't have to worry

00:29:44.540 --> 00:29:48.470
about space limitations on these
phones to download your app.

00:29:48.470 --> 00:29:51.080
And similar to a smart speaker,
the smart feature phone

00:29:51.080 --> 00:29:52.700
experience is voice-only.

00:29:52.700 --> 00:29:54.140
Keyboard input won't work.

00:29:54.140 --> 00:29:56.300
And anyway, the keyboard
experience on these phones

00:29:56.300 --> 00:29:58.467
isn't always as flexible
as touchscreen smartphones.

00:29:58.467 --> 00:30:01.370
In fact, many users prefer
voice input and even

00:30:01.370 --> 00:30:03.410
video calling to texting.

00:30:03.410 --> 00:30:06.080
So this means you should
tailor your expected input

00:30:06.080 --> 00:30:08.000
to voiceable queries.

00:30:08.000 --> 00:30:09.890
So for instance,
let's say you're

00:30:09.890 --> 00:30:11.810
building an action
against an API

00:30:11.810 --> 00:30:15.260
that takes a postcode to pull
some information about a city.

00:30:15.260 --> 00:30:17.090
Rather than expecting
this data directly

00:30:17.090 --> 00:30:19.280
from the user in
the form of a number

00:30:19.280 --> 00:30:22.760
value subject to all sorts
of speech recognition issues,

00:30:22.760 --> 00:30:25.400
introduce a layer of abstraction
by asking for the city

00:30:25.400 --> 00:30:28.730
directly and doing the
reverse geocoding on your end.

00:30:28.730 --> 00:30:32.472
Or ideally, get an API
that accepts a city name.

00:30:32.472 --> 00:30:34.430
And another example, this
is Where Is My Train.

00:30:34.430 --> 00:30:35.840
So it turns out
train numbers can

00:30:35.840 --> 00:30:38.210
be pretty hard to
remember and to speak out.

00:30:38.210 --> 00:30:41.020
So they handle input by either
the train number or the train

00:30:41.020 --> 00:30:41.520
name.

00:30:41.520 --> 00:30:47.180
So for example, the Hyderabad
express for train 12603.

00:30:47.180 --> 00:30:49.565
All right, we've talked a
lot about design and dialogue

00:30:49.565 --> 00:30:51.940
considerations to make when
building for the next billion

00:30:51.940 --> 00:30:53.300
users.

00:30:53.300 --> 00:30:55.930
But now let's talk about
creating localized experiences

00:30:55.930 --> 00:30:57.260
in your users' language.

00:30:57.260 --> 00:30:59.960
Now, there are three touchpoints
for you to make these changes--

00:30:59.960 --> 00:31:04.060
the Actions console, Dialogflow,
and in your fulfillment logic.

00:31:04.060 --> 00:31:06.310
And the great thing is we've
already localized Actions

00:31:06.310 --> 00:31:08.800
on Google in some of the main
countries where Assistant

00:31:08.800 --> 00:31:12.250
is seeing heavy traffic,
particularly Hindi and Indian

00:31:12.250 --> 00:31:15.280
English in India,
Brazilian Portuguese,

00:31:15.280 --> 00:31:18.970
Latin American Spanish, as well
as Spanish as spoken in Spain,

00:31:18.970 --> 00:31:21.480
and Indonesian.

00:31:21.480 --> 00:31:23.940
Now, for the first touchpoint
in the Actions console--

00:31:23.940 --> 00:31:26.525
again, at
console.actions.google.com.

00:31:26.525 --> 00:31:27.900
And by the way,
this is where you

00:31:27.900 --> 00:31:29.580
can get an overview
of your project

00:31:29.580 --> 00:31:31.680
and even try it out in
different languages.

00:31:31.680 --> 00:31:34.170
You can click the Languages
tab under Settings

00:31:34.170 --> 00:31:36.743
to select all the languages
that you want to support.

00:31:36.743 --> 00:31:38.910
And the other option you
have in the Actions console

00:31:38.910 --> 00:31:40.320
is released targeting.

00:31:40.320 --> 00:31:42.390
So this is where you
can select or limit

00:31:42.390 --> 00:31:44.250
the countries in which
you want users to be

00:31:44.250 --> 00:31:45.900
able to invoke your actions.

00:31:45.900 --> 00:31:47.760
So suppose your service
only makes sense

00:31:47.760 --> 00:31:51.480
in Mexico because it provides
local information to users

00:31:51.480 --> 00:31:52.200
there.

00:31:52.200 --> 00:31:53.910
Well, then you can
just target Mexico.

00:31:53.910 --> 00:31:56.670
Or maybe it makes sense
only in a few countries.

00:31:56.670 --> 00:31:58.350
In that case, we
support launching

00:31:58.350 --> 00:32:01.290
in any subset of the countries
where Actions on Google

00:32:01.290 --> 00:32:02.880
is available.

00:32:02.880 --> 00:32:05.710
Now, the next step is to
update your Dialogflow agent.

00:32:05.710 --> 00:32:07.330
So there's a few parts to this.

00:32:07.330 --> 00:32:09.210
The first thing to recognize
is that all of your intents

00:32:09.210 --> 00:32:11.340
remain the same between
your supported languages.

00:32:11.340 --> 00:32:15.280
So you don't have to reconstruct
your dialog in each language.

00:32:15.280 --> 00:32:17.312
However, you do need
to train Dialogflow

00:32:17.312 --> 00:32:19.020
for the different
types of phrases people

00:32:19.020 --> 00:32:21.480
may speak in the different
languages that you choose.

00:32:21.480 --> 00:32:23.740
And this includes the
entities you support.

00:32:23.740 --> 00:32:26.370
So for instance, if you're
writing an agriculture action,

00:32:26.370 --> 00:32:28.800
and in English, you can listen
for different fruit types,

00:32:28.800 --> 00:32:31.320
like "apples and bananas,"
you'll need to translate these

00:32:31.320 --> 00:32:33.690
expected values in your
Spanish-speaking model,

00:32:33.690 --> 00:32:36.490
so "manzanas y plátanos."

00:32:36.490 --> 00:32:37.990
Now let's talk about
how we actually

00:32:37.990 --> 00:32:39.650
do this in our back-end logic.

00:32:39.650 --> 00:32:42.340
So let's suppose your
Actions persona was

00:32:42.340 --> 00:32:45.160
a friend in your neighborhood
who can help you fix appliances

00:32:45.160 --> 00:32:45.778
in your house.

00:32:45.778 --> 00:32:47.320
Or for this example,
by the way, I'll

00:32:47.320 --> 00:32:49.450
be using Node.js
with our Actions

00:32:49.450 --> 00:32:50.890
on Google client library.

00:32:50.890 --> 00:32:53.495
And I'm going to be deploying
to Cloud Functions for Firebase.

00:32:53.495 --> 00:32:55.120
But you can write
your fulfillment code

00:32:55.120 --> 00:32:57.130
in any language of
your choice, deploy it

00:32:57.130 --> 00:32:58.840
on any infrastructure
you might choose--

00:32:58.840 --> 00:33:00.370
Google Cloud or not.

00:33:00.370 --> 00:33:01.940
There are no requirements.

00:33:01.940 --> 00:33:03.820
But if you are using
Node, let's pretend

00:33:03.820 --> 00:33:06.440
that you have the response
prompts for your action,

00:33:06.440 --> 00:33:09.550
so that is the actual output for
your user, stored in some JSON

00:33:09.550 --> 00:33:10.210
files.

00:33:10.210 --> 00:33:12.360
And you can create
one for each language.

00:33:12.360 --> 00:33:14.200
So the very simple
example I have here, I

00:33:14.200 --> 00:33:16.600
have a greeting prompt
and a response for when

00:33:16.600 --> 00:33:17.680
the user needs help.

00:33:17.680 --> 00:33:20.410
And it's localized
for users in English

00:33:20.410 --> 00:33:23.560
as well as Latin American
Spanish, or es-419,

00:33:23.560 --> 00:33:24.790
and European Spanish.

00:33:24.790 --> 00:33:27.010
And the main difference
between the Spanish locales

00:33:27.010 --> 00:33:30.392
are the words for
computer and television.

00:33:30.392 --> 00:33:33.390
Now, the response is keyed by
the type of the response, so

00:33:33.390 --> 00:33:34.890
greeting, for instance.

00:33:34.890 --> 00:33:37.137
And the value is the
response string itself.

00:33:37.137 --> 00:33:38.970
And these kinds of files
make it really easy

00:33:38.970 --> 00:33:41.550
to manage all of your
prompts and localization data

00:33:41.550 --> 00:33:43.198
separately from
your webhook logic.

00:33:43.198 --> 00:33:45.240
And there are even
translation services out there

00:33:45.240 --> 00:33:48.075
that can help you localize your
prompts to different languages.

00:33:48.075 --> 00:33:49.950
All right, so then let's
suppose I'm actually

00:33:49.950 --> 00:33:53.280
writing out my JavaScript code
in a file called index.js.

00:33:53.280 --> 00:33:54.898
The first thing
I'm going to do is

00:33:54.898 --> 00:33:57.190
I'm going to import a library
for internationalization.

00:33:57.190 --> 00:33:58.950
And in this case,
I'm using i18n-node,

00:33:58.950 --> 00:34:00.960
which is available on NPM.

00:34:00.960 --> 00:34:03.180
But there are plenty of
libraries available out there

00:34:03.180 --> 00:34:05.677
for most of the programming
languages that you might use.

00:34:05.677 --> 00:34:07.260
And many of them
have similar features

00:34:07.260 --> 00:34:09.358
to what I'll be showing here.

00:34:09.358 --> 00:34:11.400
So here what I'll do is
I'll configure the module

00:34:11.400 --> 00:34:14.370
so that it knows where my
localized responses are.

00:34:14.370 --> 00:34:17.040
So I'm keeping them in a
directory called locales.

00:34:17.040 --> 00:34:18.719
And in this case,
I'm also configuring

00:34:18.719 --> 00:34:20.850
it to fall back to
my Latin American

00:34:20.850 --> 00:34:24.389
prompts for users in Mexico
and in the United States.

00:34:24.389 --> 00:34:25.980
Because maybe these
prompts didn't

00:34:25.980 --> 00:34:29.520
need special localization
for those users.

00:34:29.520 --> 00:34:31.440
And then finally, I've
got a utility function.

00:34:31.440 --> 00:34:32.840
It's called setLocale.

00:34:32.840 --> 00:34:34.639
And it allows me to
change the locale

00:34:34.639 --> 00:34:35.898
I want to use at runtime.

00:34:35.898 --> 00:34:37.940
All right, so let's see
how I'm going to use that

00:34:37.940 --> 00:34:40.010
later on in my webhook logic.

00:34:40.010 --> 00:34:42.728
Now, when you're building
an action using Node.js,

00:34:42.728 --> 00:34:44.270
again, we recommend
using our Actions

00:34:44.270 --> 00:34:45.570
on Google client library.

00:34:45.570 --> 00:34:46.790
It's available on NPM.

00:34:46.790 --> 00:34:47.832
I have the command there.

00:34:47.832 --> 00:34:49.957
And if you want to understand
how to use it better,

00:34:49.957 --> 00:34:52.670
I highly recommend checking out
our other samples on GitHub.

00:34:52.670 --> 00:34:54.330
We have a variety
of samples there.

00:34:54.330 --> 00:34:56.060
We also have a
library in Kotlin.

00:34:56.060 --> 00:35:00.380
And you can find samples that
use Java on GitHub as well.

00:35:00.380 --> 00:35:02.200
But here, I'm importing
this client library

00:35:02.200 --> 00:35:03.820
module for Node.js.

00:35:03.820 --> 00:35:07.270
And I'm using it based on
a Dialogflow configuration.

00:35:07.270 --> 00:35:09.368
And I'm initializing it here.

00:35:09.368 --> 00:35:11.410
And then I'm going to
write some middleware which

00:35:11.410 --> 00:35:14.380
calls the setLocale function
that we wrote earlier.

00:35:14.380 --> 00:35:17.890
And this runs for every turn
of dialogue that gets handled.

00:35:17.890 --> 00:35:19.960
So right before we
respond to the user,

00:35:19.960 --> 00:35:23.920
we tell the i18n module
which language or locale

00:35:23.920 --> 00:35:27.560
the current user is speaking in.

00:35:27.560 --> 00:35:30.500
And then finally, when you're
responding to the user,

00:35:30.500 --> 00:35:34.330
I can use the i18n dot
underscore underscore function

00:35:34.330 --> 00:35:37.540
to pull the response from the
appropriate JSON file based

00:35:37.540 --> 00:35:39.760
on the key designated there.

00:35:39.760 --> 00:35:42.220
So again, just to recap,
the key steps are,

00:35:42.220 --> 00:35:45.550
one, create localized versions
of your prompt strings

00:35:45.550 --> 00:35:48.490
and encapsulate them somewhere
separate from your application

00:35:48.490 --> 00:35:51.820
logic, two, configure
your i18n module

00:35:51.820 --> 00:35:54.700
for any fallbacks you need
or any other configuration,

00:35:54.700 --> 00:35:58.660
and three, read your prompt
strings from these JSON

00:35:58.660 --> 00:36:02.712
files at runtime using
some unique identifiers.

00:36:02.712 --> 00:36:04.170
And then the last
thing you'll want

00:36:04.170 --> 00:36:07.140
to do after you've implemented
and tested your localized

00:36:07.140 --> 00:36:09.000
action using our
web simulator is

00:36:09.000 --> 00:36:11.190
you'll want to create a
localized directory entry.

00:36:11.190 --> 00:36:13.050
So all of the available
third-party actions

00:36:13.050 --> 00:36:15.510
on our platform, they live
in the Assistant directory.

00:36:15.510 --> 00:36:19.740
And this is available online at
assistant.google.com/explore,

00:36:19.740 --> 00:36:22.230
but also on the Assistant app
on all of the devices that

00:36:22.230 --> 00:36:23.580
we've talked about here today.

00:36:23.580 --> 00:36:25.080
And so for each
language you support

00:36:25.080 --> 00:36:26.788
you can add different
information that'll

00:36:26.788 --> 00:36:29.040
show up there, including
the description,

00:36:29.040 --> 00:36:32.130
any branding images, and
even the privacy policy.

00:36:32.130 --> 00:36:32.922
And that's it.

00:36:32.922 --> 00:36:35.380
That's all you need to do to
create a localized experience.

00:36:35.380 --> 00:36:37.380
Now, again, I recommend
starting with templates.

00:36:37.380 --> 00:36:38.963
We've seen actions
that use templates.

00:36:38.963 --> 00:36:40.080
They do really well.

00:36:40.080 --> 00:36:42.900
And it's a great starting point
in understanding our platform.

00:36:42.900 --> 00:36:45.150
But you can create
these highly customized

00:36:45.150 --> 00:36:48.480
experiences yourself as well.

00:36:48.480 --> 00:36:52.100
Now, I want to close by talking
about the opportunity here.

00:36:52.100 --> 00:36:54.620
Actions on Google
is the platform

00:36:54.620 --> 00:36:56.600
for reaching the
next billion users.

00:36:56.600 --> 00:36:59.030
It enables you to
reach all of your users

00:36:59.030 --> 00:37:02.360
on the devices that they use,
including smart feature phones,

00:37:02.360 --> 00:37:05.510
in the interaction paradigm
that works for them.

00:37:05.510 --> 00:37:07.130
For some of these
users, it'll be

00:37:07.130 --> 00:37:09.140
their first time
interacting with your brand

00:37:09.140 --> 00:37:10.160
or your service.

00:37:10.160 --> 00:37:12.080
So make a great
first impression.

00:37:12.080 --> 00:37:15.170
Users in emerging markets are
adopting voice and conversation

00:37:15.170 --> 00:37:15.960
quickly.

00:37:15.960 --> 00:37:18.440
That's why it's so
important to jump in now.

00:37:18.440 --> 00:37:21.470
You all have the local
insights and understanding

00:37:21.470 --> 00:37:24.110
to build the services
that these users need.

00:37:24.110 --> 00:37:25.770
And we want to get you there.

00:37:25.770 --> 00:37:29.180
So build actions supporting the
devices connecting these users

00:37:29.180 --> 00:37:31.850
today, and design
your experiences

00:37:31.850 --> 00:37:35.000
to engage with their
world on their terms.

00:37:35.000 --> 00:37:37.305
Now, you can visit
developers.googl

00:37:37.305 --> 00:37:41.330
e.com/actions/templates to
learn more about templates.

00:37:41.330 --> 00:37:43.820
You can also check out our
localization documentation

00:37:43.820 --> 00:37:47.480
there as well as our number
genie sample in both Node.js

00:37:47.480 --> 00:37:49.508
and Java on GitHub.

00:37:49.508 --> 00:37:51.800
And then finally, I highly
recommend that you check out

00:37:51.800 --> 00:37:54.092
the documentation we have on
the different devices that

00:37:54.092 --> 00:37:56.697
we've discussed here
today at developers.googl

00:37:56.697 --> 00:38:00.537
e.com/actions/nbu.

00:38:00.537 --> 00:38:01.370
Thank you very much.

00:38:01.370 --> 00:38:01.970
[APPLAUSE]

00:38:01.970 --> 00:38:06.220
[MUSIC PLAYING]

