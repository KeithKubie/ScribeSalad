WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.928
[MUSIC PLAYING]

00:00:07.462 --> 00:00:08.420
NAHEED VORA: Hi, folks.

00:00:08.420 --> 00:00:10.690
My name is Naheed, and
I'm a product manager

00:00:10.690 --> 00:00:11.949
in Android Connectivity.

00:00:11.949 --> 00:00:13.990
RYAN HAMILTON: And I'm
Ryan Hamilton, an engineer

00:00:13.990 --> 00:00:15.635
on the Chrome networking team.

00:00:15.635 --> 00:00:16.510
NAHEED VORA: Awesome.

00:00:16.510 --> 00:00:21.200
So let's start with
the XKCD slide.

00:00:21.200 --> 00:00:23.230
How many of you how--

00:00:23.230 --> 00:00:25.840
noticed this in past few years?

00:00:25.840 --> 00:00:29.380
Raise of hands, where you
thought that Wi-Fi's flaky,

00:00:29.380 --> 00:00:31.950
and you're trying to
turn off your Wi-Fi?

00:00:31.950 --> 00:00:38.020
The challenge here is that
the only constant is change.

00:00:38.020 --> 00:00:41.050
Connectivity keeps
changing underneath you,

00:00:41.050 --> 00:00:43.150
and your application,
trying to understand

00:00:43.150 --> 00:00:46.880
what's going on underneath,
is really complicated.

00:00:46.880 --> 00:00:49.380
And for creating
a good experience,

00:00:49.380 --> 00:00:51.970
we need to hide these
complexities from the user.

00:00:51.970 --> 00:00:55.510
We don't want users to go and
turn off their Wi-Fi in order

00:00:55.510 --> 00:00:56.930
to use the app.

00:00:56.930 --> 00:01:01.120
It could be any app that you
can think of that the user is

00:01:01.120 --> 00:01:04.099
using at a given point in time.

00:01:04.099 --> 00:01:05.349
So who should care?

00:01:05.349 --> 00:01:08.350
If you're building a
user facing application,

00:01:08.350 --> 00:01:11.920
maybe your app
depends on mobility.

00:01:11.920 --> 00:01:14.590
Maybe it's Google Maps
or something like that,

00:01:14.590 --> 00:01:17.140
or you're building a gaming
application or communication

00:01:17.140 --> 00:01:18.410
application.

00:01:18.410 --> 00:01:21.500
Any time you know that
you need to react really,

00:01:21.500 --> 00:01:23.260
really fast with
respect to what's

00:01:23.260 --> 00:01:26.570
happening on the connectivity
is critical, then you should--

00:01:26.570 --> 00:01:29.470
this is very, very important to
make sure that you address it

00:01:29.470 --> 00:01:31.801
in your application.

00:01:31.801 --> 00:01:35.160
And one thing I would add here
is that user drop off rate

00:01:35.160 --> 00:01:39.720
when the delays are maybe 1 to
3 seconds or 3 to 10 seconds,

00:01:39.720 --> 00:01:41.520
it might vary between
different markets.

00:01:41.520 --> 00:01:44.250
So for instance, if you're an
emerging market like India,

00:01:44.250 --> 00:01:49.620
you might see more
resilience to more delays,

00:01:49.620 --> 00:01:52.020
but if you're in some
somewhere like United States,

00:01:52.020 --> 00:01:55.530
if you go beyond three seconds,
you will lose your user.

00:01:55.530 --> 00:02:00.461
So what I have here is a demo,
and it's a Google Assistant

00:02:00.461 --> 00:02:00.960
demo.

00:02:00.960 --> 00:02:03.001
What we are doing is we're
using this technology,

00:02:03.001 --> 00:02:04.860
and we'll talk about
that a bit later.

00:02:04.860 --> 00:02:09.000
But on the left-hand side,
we have no optimization

00:02:09.000 --> 00:02:09.830
on the phone.

00:02:09.830 --> 00:02:11.830
On the right-hand side,
there's an optimization,

00:02:11.830 --> 00:02:14.620
and what we are doing is we are
doing a Google Assistant query,

00:02:14.620 --> 00:02:17.130
and user is walking
out of the building.

00:02:17.130 --> 00:02:20.955
The phone is connected to Wi-Fi,
and as the user walks out,

00:02:20.955 --> 00:02:23.320
the phone loses
the connectivity.

00:02:23.320 --> 00:02:25.300
Let's see what happens.

00:02:25.300 --> 00:02:29.510
We'll make a query, and
what is doing a direction

00:02:29.510 --> 00:02:31.290
to Oxford Circus.

00:02:31.290 --> 00:02:32.235
It's in London.

00:02:32.235 --> 00:02:34.610
And the one on the right--
you see the response came back

00:02:34.610 --> 00:02:37.460
already, and the
left one, it's still

00:02:37.460 --> 00:02:39.489
waiting and waiting and waiting.

00:02:39.489 --> 00:02:41.780
The right one is like, ha,
I don't have anything to do.

00:02:41.780 --> 00:02:42.770
I'm out.

00:02:42.770 --> 00:02:45.890
The left one is, ah, finally.

00:02:45.890 --> 00:02:49.520
This is a lot from
reaction time perspective,

00:02:49.520 --> 00:02:51.530
and you want to have this
resilience in your app

00:02:51.530 --> 00:02:54.230
that it can react really, really
fast with respect to what's

00:02:54.230 --> 00:02:56.310
happening on the
connectivity stack.

00:02:56.310 --> 00:03:00.080
So what it's using, and the
need-- what you need is you

00:03:00.080 --> 00:03:04.460
need protocols that can handle
this different mobility, where

00:03:04.460 --> 00:03:08.170
the device is moving
between the networks.

00:03:08.170 --> 00:03:11.570
And so that's where the Cronet
and QUIC comes into play, where

00:03:11.570 --> 00:03:14.780
it's the application
layer and the protocols

00:03:14.780 --> 00:03:17.540
that you are using can
handle this mobility.

00:03:17.540 --> 00:03:20.570
So I'll hand over to Ryan to
talk about Cronet and QUIC.

00:03:20.570 --> 00:03:22.400
RYAN HAMILTON: I'll
try to do this quickly.

00:03:22.400 --> 00:03:26.480
We've taken the network stack
that is inside of the Chrome

00:03:26.480 --> 00:03:29.540
web browser and made it
available as a library for apps

00:03:29.540 --> 00:03:31.310
to use, and we call it Cronet.

00:03:31.310 --> 00:03:34.010
Chrome Network, Cronet, Cronet.

00:03:34.010 --> 00:03:36.290
Since it comes from
Chrome, it's got

00:03:36.290 --> 00:03:39.080
all of the reliability
and interoperability

00:03:39.080 --> 00:03:39.890
that you'd expect.

00:03:39.890 --> 00:03:42.980
It's already being used today
by a variety of Google Apps---

00:03:42.980 --> 00:03:48.860
Search, YouTube, Maps-- and it's
even available on iOS as well.

00:03:48.860 --> 00:03:51.110
Coming soon, it's
going to be an option

00:03:51.110 --> 00:03:53.120
to pull from the Play
Store, so you won't even

00:03:53.120 --> 00:03:55.350
need to bundle it in your app.

00:03:55.350 --> 00:03:58.070
You can get the automatic
updates and security

00:03:58.070 --> 00:04:01.220
and performance improvements.

00:04:01.220 --> 00:04:05.260
Part of the coolness of Cronet
is that it comes with support

00:04:05.260 --> 00:04:08.390
for QUIC, which is a new
transport we've implemented

00:04:08.390 --> 00:04:13.660
in user space on top of UDP,
and it does some things that TCP

00:04:13.660 --> 00:04:14.170
can't.

00:04:14.170 --> 00:04:15.830
QUIC is a modern transport.

00:04:15.830 --> 00:04:18.670
It provides some new features,
some better performance.

00:04:18.670 --> 00:04:21.200
In particular, with QUIC
Connection Migration,

00:04:21.200 --> 00:04:22.900
you can seamlessly
switch back and forth

00:04:22.900 --> 00:04:25.210
between Wi-Fi and cellular.

00:04:25.210 --> 00:04:28.660
It has a bunch of awesome
performance highlights.

00:04:28.660 --> 00:04:30.850
We release every six weeks.

00:04:30.850 --> 00:04:35.350
Comes with state of the art
security, and over to Naheed.

00:04:35.350 --> 00:04:38.080
NAHEED VORA: And the best
part is that the platform

00:04:38.080 --> 00:04:39.970
optimizations are
built in, so you

00:04:39.970 --> 00:04:42.550
don't have to do anything every
time we do Android releases.

00:04:42.550 --> 00:04:44.530
We'll automatically make
sure that it takes advantage

00:04:44.530 --> 00:04:46.863
of all the latest and greatest
that Android platform has

00:04:46.863 --> 00:04:49.910
to offer, so you build
it once and ship it.

00:04:49.910 --> 00:04:52.480
For anymore questions, come--
we have a booth outside.

00:04:52.480 --> 00:04:54.620
You can talk to us, and
we'll be happy to help.

00:04:54.620 --> 00:04:55.210
Thank you.

00:04:55.210 --> 00:04:56.251
RYAN HAMILTON: Thank you.

00:04:56.251 --> 00:04:59.010
[MUSIC PLAYING]

