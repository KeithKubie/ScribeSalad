WEBVTT
Kind: captions
Language: en

00:00:01.260 --> 00:00:02.780
DANIEL "WOLFF" DOBSON:
Hello, everybody.

00:00:02.780 --> 00:00:03.750
I'm Wolff Dobson.

00:00:03.750 --> 00:00:04.900
This is Bruno.

00:00:04.900 --> 00:00:05.630
This is Dan.

00:00:05.630 --> 00:00:08.760
We're all going to talk to
you about multiplayer.

00:00:08.760 --> 00:00:10.470
But before we get started, we
should think a little bit

00:00:10.470 --> 00:00:14.150
about, why do you want to add
multiplayer to your game?

00:00:14.150 --> 00:00:17.150
Well, it's fun.

00:00:17.150 --> 00:00:18.280
Don't you think?

00:00:18.280 --> 00:00:19.810
BRUNO OLIVEIRA: Lots.

00:00:19.810 --> 00:00:22.040
DANIEL "WOLFF" DOBSON: And when
we talk about fun, we can

00:00:22.040 --> 00:00:23.380
talk about fun in a bunch
of different ways.

00:00:23.380 --> 00:00:25.810
But one of the ways we can talk
about it is a multiplayer

00:00:25.810 --> 00:00:28.930
game that's tuned right will
create a lot of replay value

00:00:28.930 --> 00:00:30.920
because you're going to be
fighting, you're going to be

00:00:30.920 --> 00:00:33.150
up against the people who are
the most interesting.

00:00:33.150 --> 00:00:35.020
It's like the most dangerous
game, right?

00:00:35.020 --> 00:00:35.920
You're playing other people.

00:00:35.920 --> 00:00:37.220
And that's where it
gets interesting.

00:00:37.220 --> 00:00:40.190
And that's how games become
evergreen, like basketball,

00:00:40.190 --> 00:00:42.350
which we've been playing
for 121 years.

00:00:42.350 --> 00:00:45.610
Like these are the things
that you want.

00:00:45.610 --> 00:00:48.700
You want your game to
turn into a sport.

00:00:48.700 --> 00:00:50.540
But there's something more
interesting going on here.

00:00:50.540 --> 00:00:52.950
You also get discovery.

00:00:52.950 --> 00:00:56.160
Your game can use the social
graph, for example, that's on

00:00:56.160 --> 00:00:59.290
the phone and on the web
or your tablet device.

00:00:59.290 --> 00:01:04.069
And inside that, you get these
very easy-to-send invitations

00:01:04.069 --> 00:01:07.490
that go to people that we have
hand-selected to be interested

00:01:07.490 --> 00:01:10.030
in your game, which is exactly
what you want.

00:01:10.030 --> 00:01:14.140
And that invitation goes
directly to the pocket of the

00:01:14.140 --> 00:01:15.700
person that you want
to be targeting.

00:01:15.700 --> 00:01:20.150
Now, I think that's
pretty cool.

00:01:20.150 --> 00:01:22.530
I know this word gets ever
overused quite a bit.

00:01:22.530 --> 00:01:24.610
But I do think we're a very
interestingly disruptive

00:01:24.610 --> 00:01:26.110
moment in the games industry.

00:01:26.110 --> 00:01:27.130
I'm not always at home.

00:01:27.130 --> 00:01:28.230
I'm not always at my desk.

00:01:28.230 --> 00:01:29.740
I'm not always at
my gaming rig.

00:01:29.740 --> 00:01:31.120
But I always have my phone.

00:01:31.120 --> 00:01:32.900
I have one right here.

00:01:32.900 --> 00:01:35.380
I have one right there.

00:01:35.380 --> 00:01:36.560
My brother wants to
challenge me?

00:01:36.560 --> 00:01:38.100
I'm there and I'm up for it?

00:01:38.100 --> 00:01:40.410
Just as if he was texting me?

00:01:40.410 --> 00:01:42.150
And I think that's really
amazing and a long distance

00:01:42.150 --> 00:01:46.640
from like emailing temporary IP
addresses to your friends.

00:01:46.640 --> 00:01:47.590
Those are the bad old days.

00:01:47.590 --> 00:01:49.610
We're a really tremendous
opportunity for

00:01:49.610 --> 00:01:51.070
engagement and discovery.

00:01:51.070 --> 00:01:53.930
And those two things--
engagement discovery-- are

00:01:53.930 --> 00:01:56.030
really core to maintaining
and creating

00:01:56.030 --> 00:01:59.150
a really huge audience.

00:01:59.150 --> 00:02:02.840
So if real-time multiplayer is
so cool, why don't we have it?

00:02:02.840 --> 00:02:05.850
Well, it's hard.

00:02:05.850 --> 00:02:07.240
It's hard for a lot
of reasons.

00:02:07.240 --> 00:02:09.259
Let me give you an example.

00:02:09.259 --> 00:02:12.430
When I was an indy developer, I
host my game on a pizza box

00:02:12.430 --> 00:02:17.280
server down in a data center
down in Santa Clara, that way.

00:02:17.280 --> 00:02:19.260
Outside of the time I spent
setting it up and patching it

00:02:19.260 --> 00:02:22.560
and making sure it was
maintained, I also woke up one

00:02:22.560 --> 00:02:25.550
morning with every single user
emailing me to tell me that my

00:02:25.550 --> 00:02:27.010
site was offline.

00:02:27.010 --> 00:02:29.140
And when I called Santa Clara,
they told me you'd

00:02:29.140 --> 00:02:29.940
better come down here.

00:02:29.940 --> 00:02:32.690
And when I went down there, I
discovered, along with many

00:02:32.690 --> 00:02:34.260
other engineers standing in the
room, that there had been

00:02:34.260 --> 00:02:38.480
a fire in the UPS that
was in my rack.

00:02:38.480 --> 00:02:40.640
And I was very lucky to
still have my server

00:02:40.640 --> 00:02:41.680
at the end of that.

00:02:41.680 --> 00:02:45.150
This is not an experience that
you guys want to have.

00:02:45.150 --> 00:02:47.080
You don't want to do
any of this stuff.

00:02:47.080 --> 00:02:48.550
There are all kinds of things
you have to keep track of and

00:02:48.550 --> 00:02:50.740
build to make multiplayer a
success, things that really

00:02:50.740 --> 00:02:53.510
matter, like lobbies
and matching.

00:02:53.510 --> 00:02:56.400
And if you get these things
wrong, your multiplayer's

00:02:56.400 --> 00:02:57.790
going to be frustrating
and hard to get to.

00:02:57.790 --> 00:03:00.450
But doing it right is just going
to cost you guys more

00:03:00.450 --> 00:03:03.390
time and money, makes you have
a bigger team than you need.

00:03:03.390 --> 00:03:05.990
So we want you to be spending
your time on making your game

00:03:05.990 --> 00:03:08.110
awesome, maybe it the unique
value proposition that's going

00:03:08.110 --> 00:03:10.870
to make your game huge.

00:03:10.870 --> 00:03:12.470
So if you're using it to play
games with real-time

00:03:12.470 --> 00:03:14.670
multiplayer, we're going
to take care

00:03:14.670 --> 00:03:15.490
of this boring stuff.

00:03:15.490 --> 00:03:18.210
And you get to work
on awesomeness.

00:03:18.210 --> 00:03:22.460
So it's also available on
millions upon millions of

00:03:22.460 --> 00:03:25.430
devices, anything that has
access to the Play Store.

00:03:25.430 --> 00:03:28.930
All you need is a Google+
account, which if you have an

00:03:28.930 --> 00:03:31.460
Android phone, you're probably
logged into right now.

00:03:31.460 --> 00:03:33.760
And it's pretty neat.

00:03:33.760 --> 00:03:35.250
And, in fact, it's so need,
we're going take a

00:03:35.250 --> 00:03:36.180
look at it right now.

00:03:36.180 --> 00:03:37.530
Bruno?

00:03:37.530 --> 00:03:39.170
BRUNO OLIVEIRA: So anyway, we
were trying to make this work

00:03:39.170 --> 00:03:42.390
with the actual demo, but since
we couldn't get them to

00:03:42.390 --> 00:03:44.670
work, we actually have
a video of this.

00:03:44.670 --> 00:03:47.230
So Nostalgic Racer is a
game that we wrote.

00:03:47.230 --> 00:03:48.720
And it's very nostalgic
because it

00:03:48.720 --> 00:03:49.960
has very big pixels.

00:03:49.960 --> 00:03:53.120
And, of course, having big
pixels is a good excuse to

00:03:53.120 --> 00:03:54.760
have very low-quality
graphics.

00:03:54.760 --> 00:03:57.320
Anyway, this is how
a match is played.

00:03:57.320 --> 00:03:59.560
So one of the players is
inviting the other player.

00:03:59.560 --> 00:04:00.720
So I'm inviting Wolff.

00:04:00.720 --> 00:04:04.060
And then he gets an invite
notification on his screen.

00:04:04.060 --> 00:04:06.170
Then he accepts.

00:04:06.170 --> 00:04:09.100
And then this is our
waiting room UI.

00:04:09.100 --> 00:04:10.540
And now we're playing.

00:04:10.540 --> 00:04:14.740
So, as you saw, I picked Wolff
from a list of friends, then

00:04:14.740 --> 00:04:15.860
sent the invite.

00:04:15.860 --> 00:04:17.740
Then, of course, I win.

00:04:17.740 --> 00:04:20.519
Not that I'm competitive
or anything.

00:04:20.519 --> 00:04:20.995
DANIEL "WOLFF" DOBSON: Notice
how he made that

00:04:20.995 --> 00:04:24.400
movie so that he wins.

00:04:24.400 --> 00:04:27.250
BRUNO OLIVEIRA: So and this is
the final results screen.

00:04:27.250 --> 00:04:30.100
So anyway, that was cool
and nostalgic.

00:04:30.100 --> 00:04:31.230
But what just happened?

00:04:31.230 --> 00:04:33.790
So, Dan, what just
happened there?

00:04:33.790 --> 00:04:35.100
DAN RODNEY: My name's Dan.

00:04:35.100 --> 00:04:39.090
I'm the TL of multiplayer for
Google Play games services.

00:04:39.090 --> 00:04:42.280
And I'm going to talk a little
bit about how all this boring

00:04:42.280 --> 00:04:44.200
stuff works.

00:04:44.200 --> 00:04:47.930
So in the demo we've got here,
Bruno invited Wolff.

00:04:47.930 --> 00:04:50.030
And maybe he was going
to invite me, too.

00:04:50.030 --> 00:04:54.200
And the way that real-time
communication works when you

00:04:54.200 --> 00:04:56.450
use our services is
peer to peer.

00:04:56.450 --> 00:04:58.260
We establish peer-to-peer
connections between the

00:04:58.260 --> 00:05:02.500
devices in a mesh topology so
that every device is connected

00:05:02.500 --> 00:05:03.810
to every other device.

00:05:03.810 --> 00:05:06.520
But in order to be able to
do that, first we have to

00:05:06.520 --> 00:05:07.640
coordinate things.

00:05:07.640 --> 00:05:11.040
So we introduce Google
infrastructure.

00:05:11.040 --> 00:05:13.800
And it all starts off when
Bruno's device says, I want to

00:05:13.800 --> 00:05:19.290
create a room, and sends a
request to the Google servers.

00:05:19.290 --> 00:05:22.730
Now, you may be asking yourself,
what is a room?

00:05:22.730 --> 00:05:24.100
BRUNO OLIVEIRA: So
the classical

00:05:24.100 --> 00:05:26.300
definition of room is--

00:05:26.300 --> 00:05:26.890
really?

00:05:26.890 --> 00:05:29.040
No, that's really,
really boring.

00:05:29.040 --> 00:05:30.280
And that doesn't
really matter.

00:05:30.280 --> 00:05:32.070
Because the cool thing about
technology is that we get to

00:05:32.070 --> 00:05:33.150
choose what the words mean.

00:05:33.150 --> 00:05:37.000
So in our context, room is a
virtual place where people get

00:05:37.000 --> 00:05:38.610
together to play a game.

00:05:38.610 --> 00:05:40.170
And, of course, this
definition works.

00:05:40.170 --> 00:05:42.090
But if you're a developer,
you're probably wondering

00:05:42.090 --> 00:05:43.670
what's going on actually
behind the scenes.

00:05:43.670 --> 00:05:46.170
So then how do rooms work
behind the scenes?

00:05:46.170 --> 00:05:46.880
DAN RODNEY: Sure.

00:05:46.880 --> 00:05:49.600
So Bruno says, I want
to create a room.

00:05:49.600 --> 00:05:52.370
That sends a rest API call
up to the Google servers.

00:05:52.370 --> 00:05:55.720
And in that rest API call, in
this case, he's indicating

00:05:55.720 --> 00:05:58.780
that he wants to invite Wolff
and myself to participate in

00:05:58.780 --> 00:06:01.140
the real-time game.

00:06:01.140 --> 00:06:04.430
He could have alternatively
specified that he wanted to,

00:06:04.430 --> 00:06:07.390
or additionally specified that
he wanted to, automatch

00:06:07.390 --> 00:06:09.600
against other players from the
internet that he didn't know.

00:06:09.600 --> 00:06:11.390
But, in this instance,
we're going to say

00:06:11.390 --> 00:06:13.620
it's invitations only.

00:06:13.620 --> 00:06:16.510
And when that request is
received, invitations are

00:06:16.510 --> 00:06:17.850
created on the Google servers.

00:06:17.850 --> 00:06:20.860
And these are pulled down to
Wolff's device and my device

00:06:20.860 --> 00:06:23.960
using Gsync, which is the
protocol that Google apps like

00:06:23.960 --> 00:06:26.970
Gmail use to pull data
down to your phones.

00:06:26.970 --> 00:06:30.890
So at that point, notifications
will appear on

00:06:30.890 --> 00:06:31.550
our devices.

00:06:31.550 --> 00:06:34.340
And when Wolff opens his up
and says, yep, I'd like to

00:06:34.340 --> 00:06:35.760
join this room.

00:06:35.760 --> 00:06:38.220
I'd like to play with Bruno.

00:06:38.220 --> 00:06:39.450
Make a call to the
server saying he

00:06:39.450 --> 00:06:40.490
wants to join the room.

00:06:40.490 --> 00:06:43.450
That's another rest API call,
which then the server then

00:06:43.450 --> 00:06:48.130
notifies Bruno by XMPP that
Wolff has joined the room.

00:06:48.130 --> 00:06:50.910
And now using libjingle, which
is the technology that powers

00:06:50.910 --> 00:06:55.080
Google Talk, they establish a
peer-to-peer connection by a

00:06:55.080 --> 00:06:58.640
combination of XMPP and then
direct peer-to-peer

00:06:58.640 --> 00:06:59.890
communication.

00:07:01.910 --> 00:07:04.250
After all that's done, they have
this peer-to-peer direct

00:07:04.250 --> 00:07:06.520
connection between each other
and can send messages back and

00:07:06.520 --> 00:07:09.430
forth using a protocol
called RTP, stands

00:07:09.430 --> 00:07:10.630
for Real-Time Protocol.

00:07:10.630 --> 00:07:14.030
And that is the protocol that
your game will use to send

00:07:14.030 --> 00:07:16.450
messages between devices.

00:07:16.450 --> 00:07:18.580
So now, let's say I
do the same thing.

00:07:18.580 --> 00:07:21.820
I'd say, I want to join
this room as well.

00:07:21.820 --> 00:07:23.990
Then Bruno and Wolff will
get notified that

00:07:23.990 --> 00:07:25.130
I've joined the room.

00:07:25.130 --> 00:07:29.050
And the same thing will happen
again, where basically we're

00:07:29.050 --> 00:07:30.370
establishing peer-to-peer
connections

00:07:30.370 --> 00:07:31.480
between all the devices.

00:07:31.480 --> 00:07:33.820
And, at the end, we have a

00:07:33.820 --> 00:07:37.200
fully-connected set of devices.

00:07:37.200 --> 00:07:37.860
So that's great.

00:07:37.860 --> 00:07:39.330
Now we can all send messages
back and forth.

00:07:39.330 --> 00:07:42.180
But what if there's
a firewall?

00:07:42.180 --> 00:07:45.580
Bruno is trying to send messages
to Wolff and myself.

00:07:45.580 --> 00:07:48.710
And there's a firewall
or a NAT and we can't

00:07:48.710 --> 00:07:49.700
talk to each other.

00:07:49.700 --> 00:07:53.740
Fortunately, libjingle has
technology that busts through

00:07:53.740 --> 00:07:58.080
firewalls and NATs and makes
it so that 92% of the time,

00:07:58.080 --> 00:07:59.600
you can establish a direct

00:07:59.600 --> 00:08:02.020
connection between the devices.

00:08:02.020 --> 00:08:05.390
The remaining 8% of the time,
there might be a really nasty

00:08:05.390 --> 00:08:07.950
firewall that doesn't allow
that to happen, it has a

00:08:07.950 --> 00:08:10.370
fallback where messages
are relayed

00:08:10.370 --> 00:08:11.750
through Google servers.

00:08:11.750 --> 00:08:15.770
So one way or another, provided
you have an internet

00:08:15.770 --> 00:08:18.430
connection, you should be able
to send messages to anybody

00:08:18.430 --> 00:08:20.780
else in the room.

00:08:20.780 --> 00:08:24.420
So now that we know a little bit
about how all this stuff

00:08:24.420 --> 00:08:28.650
works, the great thing about all
this is you don't have to

00:08:28.650 --> 00:08:29.710
do all that, right?

00:08:29.710 --> 00:08:32.840
This is all Google
infrastructure that we've

00:08:32.840 --> 00:08:33.880
implemented for you.

00:08:33.880 --> 00:08:36.690
And all you need to know is how
do I use the SDK in order

00:08:36.690 --> 00:08:39.370
to set up a room and
then start sending

00:08:39.370 --> 00:08:40.500
messages back and forth.

00:08:40.500 --> 00:08:43.460
And Bruno's going to talk
a little bit about that.

00:08:43.460 --> 00:08:44.100
BRUNO OLIVEIRA: All right.

00:08:44.100 --> 00:08:46.680
So for those of you who
love diagrams--

00:08:46.680 --> 00:08:48.150
who doesn't love diagrams--

00:08:48.150 --> 00:08:49.840
I have a pleasant surprise
for you.

00:08:49.840 --> 00:08:52.810
Next slide has a diagram.

00:08:52.810 --> 00:08:54.290
It's going to be
a big diagram.

00:08:54.290 --> 00:08:55.390
Wait, wait.

00:08:55.390 --> 00:08:57.710
I know that some of you are
going, oh, man, a diagram.

00:08:57.710 --> 00:08:58.970
This talk's going
to be boring.

00:08:58.970 --> 00:09:00.560
Let me walk out of
here right away.

00:09:00.560 --> 00:09:03.110
I can actually see some of you
falling asleep as I show this

00:09:03.110 --> 00:09:03.460
diagram to you.

00:09:03.460 --> 00:09:04.390
But bear with me.

00:09:04.390 --> 00:09:06.930
It's actually not as
bad as it looks.

00:09:06.930 --> 00:09:10.100
Let's divide this boring
diagram into parts.

00:09:10.100 --> 00:09:12.810
So first, just to give a quick
summary, the first thing you

00:09:12.810 --> 00:09:14.830
have to do is set up your
game's client, like they

00:09:14.830 --> 00:09:16.750
explained in our introductory
talk.

00:09:16.750 --> 00:09:18.990
Then they have to sign in, and
they have to check if there's

00:09:18.990 --> 00:09:19.610
an invitation.

00:09:19.610 --> 00:09:21.560
We're going to come back
to this later.

00:09:21.560 --> 00:09:23.660
Next, the user is going to
see your main screen.

00:09:23.660 --> 00:09:25.490
So your main screen has a
few options, of course.

00:09:25.490 --> 00:09:27.240
They're going to vary
from game to game.

00:09:27.240 --> 00:09:28.820
But they usually have
to do with finding

00:09:28.820 --> 00:09:30.560
people to play with.

00:09:30.560 --> 00:09:32.820
Next phase is getting
people together in a

00:09:32.820 --> 00:09:34.050
room to play the game.

00:09:34.050 --> 00:09:36.570
This means that you either
create a room or you accept an

00:09:36.570 --> 00:09:38.680
invite into an existing room.

00:09:38.680 --> 00:09:40.710
And the last part, of course,
is the fun part, which is

00:09:40.710 --> 00:09:41.250
playing the game.

00:09:41.250 --> 00:09:42.250
And then there's a cleanup.

00:09:42.250 --> 00:09:45.140
And then we're back
your main screen.

00:09:45.140 --> 00:09:47.210
So let's start from the
beginning, which is always a

00:09:47.210 --> 00:09:48.500
great place to start.

00:09:48.500 --> 00:09:50.310
So the sign-in has been covered
in the basic games

00:09:50.310 --> 00:09:52.500
talk, and there is plenty
of documentation.

00:09:52.500 --> 00:09:54.020
So we're not going to
go into depth here.

00:09:54.020 --> 00:09:56.460
But just to give a quick
summary, if you are deriving

00:09:56.460 --> 00:09:58.830
your activity from base game
activity, which is available

00:09:58.830 --> 00:10:02.160
on our samples, the advantage
is that the sign-in flow has

00:10:02.160 --> 00:10:03.230
been implemented for you.

00:10:03.230 --> 00:10:06.100
All you have to do is override
the onSignInSucceeded and

00:10:06.100 --> 00:10:08.360
onSignInFailed virtual
methods.

00:10:08.360 --> 00:10:11.270
As usual, when you get the
onSignInSucceeded, you can

00:10:11.270 --> 00:10:13.790
start making calls into
the game's API.

00:10:13.790 --> 00:10:15.290
One important reminder, though,
if you're trying to

00:10:15.290 --> 00:10:17.340
build a multiplayer game,
there's a flag on the

00:10:17.340 --> 00:10:19.040
Developer Console that
you have to turn on.

00:10:19.040 --> 00:10:19.950
And it's over there.

00:10:19.950 --> 00:10:20.800
So it's Linked Apps.

00:10:20.800 --> 00:10:22.250
You select your client ID.

00:10:22.250 --> 00:10:24.130
And then make sure that
that switch is on.

00:10:24.130 --> 00:10:25.960
Otherwise, you're going to see
errors when you try to call

00:10:25.960 --> 00:10:28.060
the multiplayer API.

00:10:28.060 --> 00:10:28.310
All right.

00:10:28.310 --> 00:10:30.960
So we took care of that first
part, except for that last

00:10:30.960 --> 00:10:34.080
block that we're going to
come back to later.

00:10:34.080 --> 00:10:36.420
Now we have landed on
your main screen.

00:10:36.420 --> 00:10:40.270
So let's take a closer look at
what those options mean.

00:10:40.270 --> 00:10:42.640
The exact buttons are going
to depend on the game.

00:10:42.640 --> 00:10:45.490
But in this simple example, we
might have three buttons,

00:10:45.490 --> 00:10:47.580
which is Quick Game, which lets
me play with a random

00:10:47.580 --> 00:10:49.080
opponent in the internet.

00:10:49.080 --> 00:10:51.770
Then I have Send Invitation,
which enables me to invite my

00:10:51.770 --> 00:10:53.530
friends into the game.

00:10:53.530 --> 00:10:55.940
And then, of course, we have
Show Invitations, which shows

00:10:55.940 --> 00:10:58.290
me the pending invitations that
I have and that I can

00:10:58.290 --> 00:11:00.070
accept at the moment.

00:11:00.070 --> 00:11:02.380
Let's translate that in terms
of rooms, because rooms are

00:11:02.380 --> 00:11:04.920
the new big thing.

00:11:04.920 --> 00:11:07.450
So a Quick Game really means I
want to create a room and then

00:11:07.450 --> 00:11:09.270
invite a random player
into it.

00:11:09.270 --> 00:11:11.640
Send Invitation means I want
to create a room and then

00:11:11.640 --> 00:11:13.380
invite some specific people,
presumably my

00:11:13.380 --> 00:11:15.360
friends, into that.

00:11:15.360 --> 00:11:18.950
And Show Invitation means I want
the game to show me which

00:11:18.950 --> 00:11:21.470
rooms I've been invited
into and which I can

00:11:21.470 --> 00:11:23.090
get into right now.

00:11:23.090 --> 00:11:26.130
So let's start with this part
of the diagram, specifically

00:11:26.130 --> 00:11:27.290
let's start with this flow.

00:11:27.290 --> 00:11:29.770
So I want to click the Send
Invitation button.

00:11:29.770 --> 00:11:32.220
Then what I want to do is select
my friends, so select

00:11:32.220 --> 00:11:33.840
which friends I'm going
to play with.

00:11:33.840 --> 00:11:37.130
And then I want to create the
room and invite those people.

00:11:37.130 --> 00:11:40.350
So to create a room, there are
three things you have to know.

00:11:40.350 --> 00:11:41.960
First of all, you have to
know who you want to

00:11:41.960 --> 00:11:43.480
invite into that room.

00:11:43.480 --> 00:11:45.820
Second question is, what are
the automatch settings?

00:11:45.820 --> 00:11:47.700
When I say automatch, I mean
how many random opponents--

00:11:47.700 --> 00:11:49.720
that are not your friends,
necessarily--

00:11:49.720 --> 00:11:50.850
do you want to invite?

00:11:50.850 --> 00:11:54.020
And three, you have to
set up the callbacks.

00:11:54.020 --> 00:11:56.040
Those are the callbacks the API
is going to use to notify

00:11:56.040 --> 00:11:57.140
you of events.

00:11:57.140 --> 00:11:58.960
So this is what we call
a RoomConfig.

00:11:58.960 --> 00:12:01.110
So it's an object that
encapsulates the

00:12:01.110 --> 00:12:02.930
configuration of a room.

00:12:02.930 --> 00:12:04.680
And this is how we create
a RoomConfig.

00:12:04.680 --> 00:12:06.750
Actually, this is a RoomConfig
builder, which is a helper

00:12:06.750 --> 00:12:08.760
object that helps you
build a RoomConfig.

00:12:08.760 --> 00:12:12.070
So this is how we're going
to configure the room.

00:12:12.070 --> 00:12:13.790
Now that we created this
object, we're going to

00:12:13.790 --> 00:12:15.200
progressively add configuration

00:12:15.200 --> 00:12:16.600
into it as we go along.

00:12:16.600 --> 00:12:18.850
So first of all, we are ready
to show you the list of

00:12:18.850 --> 00:12:22.120
friends so that the user
can pick who to invite.

00:12:22.120 --> 00:12:23.220
Of course, you could
just go ahead and

00:12:23.220 --> 00:12:24.840
build that UI yourself.

00:12:24.840 --> 00:12:27.190
DANIEL "WOLFF" DOBSON: You can
get a social graph information

00:12:27.190 --> 00:12:29.130
from Goolge+ APIs.

00:12:29.130 --> 00:12:30.470
You can even sort them.

00:12:30.470 --> 00:12:32.210
BRUNO OLIVEIRA: Exactly.

00:12:32.210 --> 00:12:34.860
You can, essentially, make
your own UI, if you want.

00:12:34.860 --> 00:12:37.870
But if you don't want to build
your UI from scratch, you can

00:12:37.870 --> 00:12:40.160
use our built-in "Select
Players" dialog.

00:12:40.160 --> 00:12:42.350
To do this, first you decide
what's the minimum number and

00:12:42.350 --> 00:12:43.840
maximum opponents
that you want.

00:12:43.840 --> 00:12:45.890
So that's excluding yourself.

00:12:45.890 --> 00:12:48.570
In our example, we're just
trying to set up a two-player

00:12:48.570 --> 00:12:51.260
game, so minimum and
maximum are at 1.

00:12:51.260 --> 00:12:54.220
And then the next thing is we
get the "Select Players"

00:12:54.220 --> 00:12:56.000
intent from the game's client.

00:12:56.000 --> 00:12:58.490
So with that intent, all we have
to do with an intent is

00:12:58.490 --> 00:13:00.440
just launch it with
startActivityForResult.

00:13:00.440 --> 00:13:02.080
And then you're going to see
on the screen the "Select

00:13:02.080 --> 00:13:05.630
Players" dialog, which
looks like this.

00:13:05.630 --> 00:13:07.580
Notice that I can select
the friends that I

00:13:07.580 --> 00:13:08.560
want to play against.

00:13:08.560 --> 00:13:10.790
And notice, also, that I can
select Auto-pick Player,

00:13:10.790 --> 00:13:12.400
because that's just automatch.

00:13:12.400 --> 00:13:13.850
Then I'm going to play
with random opponent.

00:13:13.850 --> 00:13:15.330
Notice I can also
mix and match.

00:13:15.330 --> 00:13:20.010
I can invite Dan and an
auto-pick player.

00:13:20.010 --> 00:13:21.940
Now, when that dialog is
dismissed, you're going to get

00:13:21.940 --> 00:13:24.230
the result of the dialog much
in the same way as any other

00:13:24.230 --> 00:13:24.960
result in Android.

00:13:24.960 --> 00:13:27.790
So that's going to be through
the onActivityResult callback.

00:13:27.790 --> 00:13:30.640
So first, we check if the user
cancelled the dialog.

00:13:30.640 --> 00:13:31.970
If they did, you do nothing,
of course.

00:13:31.970 --> 00:13:34.390
And then if they confirmed,
you're ready to get the list

00:13:34.390 --> 00:13:35.580
of players.

00:13:35.580 --> 00:13:37.660
The way you get the list of
players from the dialog is you

00:13:37.660 --> 00:13:40.870
create the extras bundle, and
then you get the extra players

00:13:40.870 --> 00:13:41.950
field from that bundle.

00:13:41.950 --> 00:13:45.790
That's going to be the list of
Google+ IDs of the people that

00:13:45.790 --> 00:13:46.780
the player wants to invite.

00:13:46.780 --> 00:13:47.920
That's easy, right?

00:13:47.920 --> 00:13:50.320
Now that you have a list, you
just feed that into the

00:13:50.320 --> 00:13:53.180
RoomConfig, and that takes care
of that first part, which

00:13:53.180 --> 00:13:55.570
is deciding who to invite.

00:13:55.570 --> 00:13:57.730
Now, we're down to the
automatch settings.

00:13:57.730 --> 00:13:59.980
So the automatch settings
are in the bundle.

00:13:59.980 --> 00:14:01.920
So you have the minimum and
the maximum number of

00:14:01.920 --> 00:14:04.930
automatch players that
the players want.

00:14:04.930 --> 00:14:07.280
And now that we know that, we're
going to add that to the

00:14:07.280 --> 00:14:08.400
RoomConfig as well.

00:14:08.400 --> 00:14:10.810
So we create an automatch
criteria bundle using that

00:14:10.810 --> 00:14:11.660
helper function.

00:14:11.660 --> 00:14:14.060
And then we feed that into
the config builder.

00:14:14.060 --> 00:14:17.610
And that pretty much takes
care of the second step.

00:14:17.610 --> 00:14:20.700
Now, all we have left is to set
up our callbacks, and we

00:14:20.700 --> 00:14:21.970
are ready to create the room.

00:14:21.970 --> 00:14:23.340
Now, there are several
possible callbacks.

00:14:23.340 --> 00:14:24.780
There are like tens of them.

00:14:24.780 --> 00:14:27.350
But in this simple example, all
we care about are messages

00:14:27.350 --> 00:14:30.290
that are received, and then room
status updates, which are

00:14:30.290 --> 00:14:32.180
stuff like, people joined the
room, left the room, and so on

00:14:32.180 --> 00:14:33.200
and so forth.

00:14:33.200 --> 00:14:35.320
So we're now done with
those three items.

00:14:35.320 --> 00:14:37.120
We have callbacks, automatch,
and who to invite.

00:14:37.120 --> 00:14:39.470
And now we're ready to go ahead
and create that room.

00:14:39.470 --> 00:14:42.560
So notice that we are passing
the RoomConfig

00:14:42.560 --> 00:14:44.470
that we built so far.

00:14:44.470 --> 00:14:44.750
All right.

00:14:44.750 --> 00:14:47.120
So that takes care of that part,
"Select Players," right?

00:14:47.120 --> 00:14:47.940
So we're done?

00:14:47.940 --> 00:14:50.795
DANIEL "WOLFF" DOBSON: Well,
what if I don't care who I'm

00:14:50.795 --> 00:14:51.330
playing against?

00:14:51.330 --> 00:14:52.820
I don't want to invite
specific people.

00:14:52.820 --> 00:14:54.100
I don't want an extra
dialog box.

00:14:54.100 --> 00:14:56.210
I just want to play.

00:14:56.210 --> 00:14:57.270
BRUNO OLIVEIRA: If you just want
to play, and you don't

00:14:57.270 --> 00:14:59.770
want to show dialog
of your friends--

00:14:59.770 --> 00:15:02.185
DANIEL "WOLFF" DOBSON: What if
I didn't have any friends?

00:15:02.185 --> 00:15:03.770
BRUNO OLIVEIRA: What if you
don't have any friends?

00:15:03.770 --> 00:15:05.130
DANIEL "WOLFF" DOBSON: I'm
just saying, maybe,

00:15:05.130 --> 00:15:06.110
you might not have--

00:15:06.110 --> 00:15:06.260
BRUNO OLIVEIRA: Hypothetically.

00:15:06.260 --> 00:15:07.670
DANIEL "WOLFF" DOBSON:
--have a friend.

00:15:07.670 --> 00:15:08.300
BRUNO OLIVEIRA: Exactly.

00:15:08.300 --> 00:15:10.380
So if you don't have any
friends, or if you just don't

00:15:10.380 --> 00:15:12.660
care who you're going to play
with, you just want to play

00:15:12.660 --> 00:15:14.970
right away, you can
entirely skip that

00:15:14.970 --> 00:15:16.200
"Select Players" dialog.

00:15:16.200 --> 00:15:19.450
And this what the Quick Game
button usually does.

00:15:19.450 --> 00:15:22.670
So it sets up a room with one
random opponent, and this

00:15:22.670 --> 00:15:24.490
without showing any dialogs.

00:15:24.490 --> 00:15:26.620
So this is how you would
implement this button.

00:15:26.620 --> 00:15:29.480
So you create an automatch
criteria button using a 1 and

00:15:29.480 --> 00:15:30.680
automatch opponent.

00:15:30.680 --> 00:15:32.750
Then you build the RoomConfig,
set the callbacks,

00:15:32.750 --> 00:15:33.610
and create the room.

00:15:33.610 --> 00:15:36.020
Notice that this is exactly
the same as we did before,

00:15:36.020 --> 00:15:38.950
except it's easier because we
don't go through that extra

00:15:38.950 --> 00:15:40.750
step of showing the "Select
Players" dialog.

00:15:40.750 --> 00:15:44.310
So it's exactly the same
as we did before.

00:15:44.310 --> 00:15:44.376
All right.

00:15:44.376 --> 00:15:46.730
Now, let's take a look at this
from the other side, which is

00:15:46.730 --> 00:15:47.700
receiving the invite.

00:15:47.700 --> 00:15:48.390
So I'm bored.

00:15:48.390 --> 00:15:50.200
I'm looking at my phone,
checking email.

00:15:50.200 --> 00:15:53.900
And then, Dan here invites me to
a race in Nostalgic Racer.

00:15:53.900 --> 00:15:54.200
DANIEL "WOLFF" DOBSON: Not me.

00:15:54.200 --> 00:15:56.410
BRUNO OLIVEIRA: Which I know I'm
going to win, but anyway.

00:15:56.410 --> 00:15:58.610
So what do I see on my screen
when that happens?

00:15:58.610 --> 00:16:02.090
So I get a notification on my
screen that looks like this.

00:16:02.090 --> 00:16:05.180
So this player wants to
invite me to a game.

00:16:05.180 --> 00:16:06.160
And then once I click that

00:16:06.160 --> 00:16:08.320
notification, I go to the game.

00:16:08.320 --> 00:16:09.550
Now, this is a very
important part.

00:16:09.550 --> 00:16:12.150
Because when the game launches,
it should check if

00:16:12.150 --> 00:16:14.020
there's an invitation pending.

00:16:14.020 --> 00:16:16.310
And if there is, they should
accept it and then go to the

00:16:16.310 --> 00:16:17.510
game right away.

00:16:17.510 --> 00:16:18.370
This is up to you.

00:16:18.370 --> 00:16:21.240
If you fail to implement this
check, the default behavior,

00:16:21.240 --> 00:16:23.730
which is the best that we can
do, is just to show the game.

00:16:23.730 --> 00:16:26.280
But then, of course, that's a
bad experience for the user

00:16:26.280 --> 00:16:28.630
because the user just clicked
accept an invitation.

00:16:28.630 --> 00:16:30.930
They don't want to see the
main screen of our game.

00:16:30.930 --> 00:16:33.260
They want to get into the
match right away.

00:16:33.260 --> 00:16:35.090
So how do you check if there's
an invitation pending

00:16:35.090 --> 00:16:35.800
when you start up?

00:16:35.800 --> 00:16:38.210
Well, when you get the
onConnected callback or

00:16:38.210 --> 00:16:40.620
onSignInSucceeded callback,
you check the

00:16:40.620 --> 00:16:42.230
connectionHint parameter.

00:16:42.230 --> 00:16:44.830
If the game's being launched
through the system bar

00:16:44.830 --> 00:16:48.640
notification, there's going to
be an invitation in that,

00:16:48.640 --> 00:16:50.160
which you can retrieve
like this.

00:16:50.160 --> 00:16:51.410
Oops.

00:16:55.120 --> 00:16:56.940
Seems like I'm missing
part of the slide.

00:16:56.940 --> 00:17:00.370
So anyway, you detect that you
have the invitation there.

00:17:00.370 --> 00:17:03.180
And then once you have it, you
can accept the invitation.

00:17:03.180 --> 00:17:05.990
So to do that, we go
back to old friend,

00:17:05.990 --> 00:17:06.520
RoomConfig.builder.

00:17:06.520 --> 00:17:09.800
So RoomConfig.builder is going
to be the same as before.

00:17:09.800 --> 00:17:11.020
We set up our callbacks.

00:17:11.020 --> 00:17:12.880
And then the next thing--
and this is new--

00:17:12.880 --> 00:17:14.230
we're going to set the
invitation that we want to

00:17:14.230 --> 00:17:15.470
accept over there.

00:17:15.470 --> 00:17:17.859
So we're just setting the
invitation that we got from

00:17:17.859 --> 00:17:19.089
the connection [INAUDIBLE].

00:17:19.089 --> 00:17:20.430
And then we call joinRoom.

00:17:20.430 --> 00:17:22.440
So remember that this
is also different.

00:17:22.440 --> 00:17:24.810
Before, we had call createRoom
to create a room.

00:17:24.810 --> 00:17:26.640
And now we're calling joinRoom
because we want to join an

00:17:26.640 --> 00:17:27.890
existing room.

00:17:30.160 --> 00:17:33.330
DAN RODNEY: Bruno, I don't have
that many friends, but

00:17:33.330 --> 00:17:36.350
ever since I'd been scheduled
to be a Google I/O speaker,

00:17:36.350 --> 00:17:39.250
I've been getting hundreds of
people following me, adding me

00:17:39.250 --> 00:17:39.780
to their circles.

00:17:39.780 --> 00:17:42.425
I think they're going to all
invite me to play games.

00:17:42.425 --> 00:17:43.280
BRUNO OLIVEIRA: That's
a big problem.

00:17:43.280 --> 00:17:45.350
DAN RODNEY: Yeah, I don't know
what I'm going to do.

00:17:45.350 --> 00:17:46.720
DANIEL "WOLFF" DOBSON: Yeah,
big, big problem

00:17:46.720 --> 00:17:48.230
DAN RODNEY: I have to have some
place where I can go and

00:17:48.230 --> 00:17:50.370
see all those invitations and
then decide which ones of them

00:17:50.370 --> 00:17:51.190
I want to accept.

00:17:51.190 --> 00:17:52.090
BRUNO OLIVEIRA: That's right.

00:17:52.090 --> 00:17:55.590
So for popular people like Dan,
they have to have some

00:17:55.590 --> 00:17:58.240
way to see what invitations
they have.

00:17:58.240 --> 00:17:59.970
And then Dan can pick and choose
who he's going to play

00:17:59.970 --> 00:18:00.880
with first.

00:18:00.880 --> 00:18:02.290
And then the other people
have to wait in line

00:18:02.290 --> 00:18:03.500
like everybody else.

00:18:03.500 --> 00:18:05.760
So how do I check which
notifications are pending, so

00:18:05.760 --> 00:18:07.120
which modifications I
have received and

00:18:07.120 --> 00:18:08.470
haven't acted upon yet?

00:18:08.470 --> 00:18:11.350
What you need is called
an invitation inbox.

00:18:11.350 --> 00:18:13.280
And that goes to that
part of the diagram.

00:18:13.280 --> 00:18:15.140
So how do you go ahead and show
that invitation inbox?

00:18:15.140 --> 00:18:17.860
So it turns out we have a
built-in UI for that.

00:18:17.860 --> 00:18:20.590
So you get the invitation
inbox intent calling

00:18:20.590 --> 00:18:23.780
GamesClient.getI
nvitation.InboxIntent, and

00:18:23.780 --> 00:18:26.290
then you get the intent
to launch that.

00:18:26.290 --> 00:18:28.340
Then it goes
startActivityForResult, and

00:18:28.340 --> 00:18:29.340
then you launch that intent.

00:18:29.340 --> 00:18:31.750
So you're going onscreen
something like this.

00:18:31.750 --> 00:18:33.150
Of course, this is
my screenshot.

00:18:33.150 --> 00:18:34.410
So I only have one invitation.

00:18:34.410 --> 00:18:37.200
But, of course, Dan here might
have screen after screen of

00:18:37.200 --> 00:18:38.760
invitations pending.

00:18:38.760 --> 00:18:40.770
And then when I click play on
that screen, what's going to

00:18:40.770 --> 00:18:44.160
happen is that the dialog is
going to get dismissed, and

00:18:44.160 --> 00:18:45.350
you're going to get the
results through

00:18:45.350 --> 00:18:46.710
onActivityResult.

00:18:46.710 --> 00:18:48.910
So you have to check if
the result is OK.

00:18:48.910 --> 00:18:50.630
If the result is not OK, of
course you ignore it.

00:18:50.630 --> 00:18:53.320
But then, if it's OK, then it's
going to come with the

00:18:53.320 --> 00:18:55.440
invitation ID that you
should accept.

00:18:55.440 --> 00:18:58.780
So what do you do with
that invitation?

00:18:58.780 --> 00:19:01.060
Well, easy, you just accept it
exactly as we did before.

00:19:01.060 --> 00:19:03.910
Actually, this slide was the
easiest one on this whole talk

00:19:03.910 --> 00:19:06.120
to make because it's just a
copy-paste of a previous one.

00:19:06.120 --> 00:19:08.040
It's exactly the same process.

00:19:08.040 --> 00:19:10.660
You set up the callbacks, set
the invitation to accept, and

00:19:10.660 --> 00:19:12.850
then join the room.

00:19:12.850 --> 00:19:13.340
All right.

00:19:13.340 --> 00:19:16.410
DANIEL "WOLFF" DOBSON: So if I
get invited to a game, I see a

00:19:16.410 --> 00:19:20.000
notification on my system bar.

00:19:20.000 --> 00:19:22.970
And if I click it,
I get to play.

00:19:22.970 --> 00:19:26.240
What if I can't see
the system bar?

00:19:26.240 --> 00:19:27.920
BRUNO OLIVEIRA: Because
the screen is not on?

00:19:27.920 --> 00:19:28.950
DANIEL "WOLFF" DOBSON: No,
because I'm playing

00:19:28.950 --> 00:19:31.960
single-player mode, because
I need to play a lot of

00:19:31.960 --> 00:19:32.540
single-player games.

00:19:32.540 --> 00:19:32.940
BRUNO OLIVEIRA: Oh,
that's right.

00:19:32.940 --> 00:19:35.570
If you're playing a
single-player game, maybe it's

00:19:35.570 --> 00:19:36.840
running full-screen mode
and you can't see the

00:19:36.840 --> 00:19:37.435
notification bar.

00:19:37.435 --> 00:19:37.700
DANIEL "WOLFF" DOBSON:
Exactly.

00:19:37.700 --> 00:19:39.220
BRUNO OLIVEIRA: That's
a big problem.

00:19:39.220 --> 00:19:42.500
So how do you address
that problem?

00:19:42.500 --> 00:19:46.800
So if you want your game to
behave correctly in that case,

00:19:46.800 --> 00:19:48.810
you have to come to our advanced
session, which is the

00:19:48.810 --> 00:19:50.090
perfect time to advertise it.

00:19:50.090 --> 00:19:52.470
Actually it's right next, so
if you stick around, it's

00:19:52.470 --> 00:19:53.820
going to be the next session.

00:19:53.820 --> 00:19:56.450
So if you are in the middle of
game play and you get an

00:19:56.450 --> 00:19:58.500
invitation, so you can
actually register an

00:19:58.500 --> 00:20:00.910
invitation listener and it's
going to notify you of

00:20:00.910 --> 00:20:02.780
invitations, even if you're in
the middle of game play, and

00:20:02.780 --> 00:20:05.070
then it can show an in-game
pop-up or anything else to

00:20:05.070 --> 00:20:07.540
notify the user that they
have a pending invite.

00:20:07.540 --> 00:20:10.090
So definitely, stick around
for advanced games talk if

00:20:10.090 --> 00:20:11.260
you're interested in that.

00:20:11.260 --> 00:20:11.400
All right.

00:20:11.400 --> 00:20:13.550
Now we're done setting up and
getting people together.

00:20:13.550 --> 00:20:15.160
Now comes the fun part,
which is, of

00:20:15.160 --> 00:20:16.610
course, playing the game.

00:20:16.610 --> 00:20:18.550
But wait, actually, before we
play the game, we have to

00:20:18.550 --> 00:20:20.760
first wait until everybody's
connected.

00:20:20.760 --> 00:20:23.220
So waiting is lots
of fun, right?

00:20:23.220 --> 00:20:24.045
DANIEL "WOLFF" DOBSON:
No, it's not.

00:20:24.045 --> 00:20:26.950
BRUNO OLIVEIRA: No, waiting's
boring, especially if your

00:20:26.950 --> 00:20:28.550
game doesn't do anything
interesting during the wait.

00:20:28.550 --> 00:20:31.230
So, for instance, if you just
show that standard, boring

00:20:31.230 --> 00:20:33.960
"please wait" screen, the user's
going to be very bored.

00:20:33.960 --> 00:20:36.590
So if you are suffering from a
boring wait screen problem,

00:20:36.590 --> 00:20:39.400
then it's the perfect time to
advertise our advanced games

00:20:39.400 --> 00:20:42.140
session again, which we have
not talked about before.

00:20:42.140 --> 00:20:43.420
It's going to be right
here, right next.

00:20:43.420 --> 00:20:45.650
We're going to show you how to
implement a waiting room UI to

00:20:45.650 --> 00:20:47.780
keep your users happy.

00:20:47.780 --> 00:20:48.070
All right.

00:20:48.070 --> 00:20:51.030
Now we have to wait for the
onRoomConnected callback with

00:20:51.030 --> 00:20:53.600
your boring "please
wait" screen.

00:20:53.600 --> 00:20:56.590
That callback tells me that
everybody that I invited is

00:20:56.590 --> 00:20:57.160
now connected.

00:20:57.160 --> 00:20:58.660
So we're ready to
start playing.

00:20:58.660 --> 00:21:00.340
Of course, you have to
check the status code

00:21:00.340 --> 00:21:01.300
to see if it's OK.

00:21:01.300 --> 00:21:04.070
And if it's OK, you're ready
to start the game.

00:21:04.070 --> 00:21:06.790
Now, this is a good place to
store some information you're

00:21:06.790 --> 00:21:09.700
going to need later for other
API calls, like room ID, the

00:21:09.700 --> 00:21:12.730
list of participants, what's my
own participant ID that's

00:21:12.730 --> 00:21:14.740
based on my player ID and--

00:21:14.740 --> 00:21:16.130
DAN RODNEY: But, Bruno, what's
the difference between a

00:21:16.130 --> 00:21:17.580
player ID and a participant
ID?

00:21:17.580 --> 00:21:18.560
BRUNO OLIVEIRA: Oh, right, we
haven't explained that.

00:21:18.560 --> 00:21:20.380
So what's the difference between
a player ID and a

00:21:20.380 --> 00:21:21.700
participant ID?

00:21:21.700 --> 00:21:24.400
Well, a player ID is something
that identifies a real person

00:21:24.400 --> 00:21:25.370
in real life.

00:21:25.370 --> 00:21:26.740
So it's something that's
permanent.

00:21:26.740 --> 00:21:29.580
And it's used across games.

00:21:29.580 --> 00:21:32.360
Whereas a participant ID
is really temporary and

00:21:32.360 --> 00:21:35.150
identifies a player in the
context of a particular room.

00:21:35.150 --> 00:21:37.560
So even if the same player is
playing several different

00:21:37.560 --> 00:21:40.800
games in several different
rooms, their participant ID

00:21:40.800 --> 00:21:42.360
will be different in
each one of them.

00:21:42.360 --> 00:21:44.710
So a player ID looks like
a string of digits,

00:21:44.710 --> 00:21:46.490
coincidentally and not
coincidentally

00:21:46.490 --> 00:21:47.540
like a Google+ ID.

00:21:47.540 --> 00:21:49.330
In fact, it is a Google+ ID.

00:21:49.330 --> 00:21:51.880
Now, a participant ID looks
kind of like that.

00:21:51.880 --> 00:21:54.570
And the way we get one from
the other is we type the

00:21:54.570 --> 00:21:57.180
player ID backwards and then put
a cat on the keyboard, and

00:21:57.180 --> 00:21:58.800
that gets you the
participant ID.

00:21:58.800 --> 00:22:00.630
So long story short, don't
try to parse that.

00:22:00.630 --> 00:22:02.020
Don't try to understand
that in any way.

00:22:02.020 --> 00:22:02.690
It's just a string.

00:22:02.690 --> 00:22:04.220
And we guarantee that it's
going to be unique in the

00:22:04.220 --> 00:22:05.960
context of a particular room.

00:22:05.960 --> 00:22:08.720
So if you invite specific
friends to a game, they're

00:22:08.720 --> 00:22:11.540
going to have both a player ID
and a participant ID because

00:22:11.540 --> 00:22:12.870
they're real people.

00:22:12.870 --> 00:22:14.630
Now, if you're playing against
automatched opponents, or

00:22:14.630 --> 00:22:16.940
random opponents from the
internet, they're only going

00:22:16.940 --> 00:22:18.170
to have a participant ID.

00:22:18.170 --> 00:22:20.030
DANIEL "WOLFF" DOBSON: Because
they're not real people.

00:22:20.030 --> 00:22:20.300
BRUNO OLIVEIRA: That's right.

00:22:20.300 --> 00:22:21.130
They're not real people.

00:22:21.130 --> 00:22:22.720
They're figments of
your imagination.

00:22:22.720 --> 00:22:25.000
Of course, maybe deep down
they are real people.

00:22:25.000 --> 00:22:27.660
They have dreams and
hobbies and such.

00:22:27.660 --> 00:22:28.840
But to you, that
doesn't matter.

00:22:28.840 --> 00:22:30.530
They're just faceless personas
who are playing

00:22:30.530 --> 00:22:31.500
your game right now.

00:22:31.500 --> 00:22:34.100
So long story short, unless you
care about who the players

00:22:34.100 --> 00:22:37.530
are outside of the game, just
use participant ID, which is

00:22:37.530 --> 00:22:39.565
something that every single
participant is going to have

00:22:39.565 --> 00:22:40.960
and is going to be unique.

00:22:40.960 --> 00:22:43.150
So, hopefully, that part of the
code is a little clearer

00:22:43.150 --> 00:22:45.940
now that we know what player
ID and participant ID are.

00:22:45.940 --> 00:22:48.050
And that's for the purposes
of that match.

00:22:48.050 --> 00:22:50.160
So notice that it's pointless
to store that for a future

00:22:50.160 --> 00:22:52.570
match because that doesn't
make any sense.

00:22:52.570 --> 00:22:52.900
All right.

00:22:52.900 --> 00:22:54.000
Now we are ready to play.

00:22:54.000 --> 00:22:55.120
This is the fun part.

00:22:55.120 --> 00:22:58.245
I know that we are Googlers,
so our definition of fun is

00:22:58.245 --> 00:23:00.540
probably different from
the rest of the world.

00:23:00.540 --> 00:23:05.110
But to us, fun really
means sending and

00:23:05.110 --> 00:23:06.485
receiving byte arrays.

00:23:06.485 --> 00:23:07.250
DANIEL "WOLFF" DOBSON: Whoo!

00:23:07.250 --> 00:23:07.950
Yeah.

00:23:07.950 --> 00:23:08.850
BRUNO OLIVEIRA: Byte arrays.

00:23:08.850 --> 00:23:09.490
DANIEL "WOLFF" DOBSON:
I'm so excited.

00:23:09.490 --> 00:23:11.880
I love byte arrays.

00:23:11.880 --> 00:23:12.530
Who doesn't love byte arrays?

00:23:12.530 --> 00:23:13.010
BRUNO OLIVEIRA: Yes.

00:23:13.010 --> 00:23:16.110
So, exactly, as far as our API
is concerned, that's what game

00:23:16.110 --> 00:23:17.230
play really is.

00:23:17.230 --> 00:23:19.480
The participants in the game are
changing just byte arrays

00:23:19.480 --> 00:23:20.380
back and forth.

00:23:20.380 --> 00:23:21.230
They're opaque to us.

00:23:21.230 --> 00:23:22.190
We don't know what they mean.

00:23:22.190 --> 00:23:23.280
There are sequences of bytes.

00:23:23.280 --> 00:23:25.620
And it's up to your game to
define what they mean.

00:23:25.620 --> 00:23:27.575
Now, there are two types of
messages that we carry for

00:23:27.575 --> 00:23:28.910
you, which are reliable
messages

00:23:28.910 --> 00:23:30.390
and unreliable messages.

00:23:30.390 --> 00:23:32.570
So the reliable messages are
guaranteed to get to the

00:23:32.570 --> 00:23:35.120
destination, while the
unreliable ones are probably

00:23:35.120 --> 00:23:36.800
going to get there.

00:23:36.800 --> 00:23:39.330
To summarize the differences,
reliable messages definitely

00:23:39.330 --> 00:23:41.560
do get delivered and they are
delivered in the same order

00:23:41.560 --> 00:23:42.570
that they are sent.

00:23:42.570 --> 00:23:45.060
Now, for unreliable, they're
probably going to be

00:23:45.060 --> 00:23:47.150
delivered, and the order is
probably going to be the same,

00:23:47.150 --> 00:23:49.110
but your game should be prepared
for the cases where

00:23:49.110 --> 00:23:50.130
that's not true.

00:23:50.130 --> 00:23:52.390
And for both types of messages,
we do guarantee that

00:23:52.390 --> 00:23:54.910
they will not get corrupted
or truncated.

00:23:54.910 --> 00:23:56.930
So it's either delivered
exactly as you sent

00:23:56.930 --> 00:23:59.280
it or not at all.

00:23:59.280 --> 00:24:01.530
And this is how you send a
reliable real-time message.

00:24:01.530 --> 00:24:03.720
Surprisingly, it's with
a method called

00:24:03.720 --> 00:24:06.380
sendReliableRealTimeMessage.

00:24:06.380 --> 00:24:08.940
So the first parameter is a
callback value if you want to

00:24:08.940 --> 00:24:11.290
be notified of when the message
actually gets sent.

00:24:11.290 --> 00:24:13.250
And then it's going to be the
message, which is just an

00:24:13.250 --> 00:24:14.420
opaque byte [INAUDIBLE]

00:24:14.420 --> 00:24:16.080
room ID, and participant ID.

00:24:16.080 --> 00:24:20.670
Anyone want to risk a guess of
how the unreliable real-time

00:24:20.670 --> 00:24:24.090
message method is called?

00:24:24.090 --> 00:24:26.260
Correct.
sendUnreliableRealTimeMessage.

00:24:26.260 --> 00:24:28.340
DANIEL "WOLFF" DOBSON: Somebody
got it out there.

00:24:28.340 --> 00:24:30.630
BRUNO OLIVEIRA: So you call
SendUnreliableRealTimeMessage,

00:24:30.630 --> 00:24:32.770
the parameters are the same
except you cannot provide a

00:24:32.770 --> 00:24:34.930
callback because, after
all, it's unreliable.

00:24:34.930 --> 00:24:37.890
So both of these methods also
have a corresponding broadcast

00:24:37.890 --> 00:24:39.780
version which sends the same
message to everybody.

00:24:39.780 --> 00:24:42.190
Notice that on the non-broadcast
version, you

00:24:42.190 --> 00:24:44.160
have to specify who you
are sending it to.

00:24:44.160 --> 00:24:46.660
And then on the broadcast
message, you don't have to.

00:24:46.660 --> 00:24:48.920
Of course, for performance
reasons, we do recommend that

00:24:48.920 --> 00:24:51.170
you only send the message to the
people that actually need

00:24:51.170 --> 00:24:51.720
to receive them.

00:24:51.720 --> 00:24:56.940
So don't send to everybody
unless you actually need to.

00:24:56.940 --> 00:24:59.120
So how do you receive
a message?

00:24:59.120 --> 00:25:01.635
Remember the callbacks that we
set up when we were specifying

00:25:01.635 --> 00:25:02.970
that RoomConfig?

00:25:02.970 --> 00:25:06.650
So that listener over there,
setMessageReceivedListener, is

00:25:06.650 --> 00:25:08.900
the listener that's going to be
notified whenever you get a

00:25:08.900 --> 00:25:11.430
real-time message.

00:25:11.430 --> 00:25:13.010
So how do you implement
the callback?

00:25:13.010 --> 00:25:16.240
So when you get the callback,
you can get the byte array

00:25:16.240 --> 00:25:18.080
using rtm.getMessageData.

00:25:18.080 --> 00:25:19.900
That's going to be the byte
array that the sender sent

00:25:19.900 --> 00:25:21.640
exactly as they sent
it to you.

00:25:21.640 --> 00:25:23.190
No need for checksums,
no need for anything.

00:25:23.190 --> 00:25:25.660
We guarantee that that's going
to be exactly what they sent--

00:25:25.660 --> 00:25:27.700
if that arrives at
all, of course.

00:25:27.700 --> 00:25:30.230
And then, of course, you can
also use the real-time message

00:25:30.230 --> 00:25:32.270
object to find out who sent
you the message, and

00:25:32.270 --> 00:25:33.590
so on and so forth.

00:25:33.590 --> 00:25:35.920
Now, over to Dan for some
important security and

00:25:35.920 --> 00:25:38.180
performance advisory.

00:25:38.180 --> 00:25:40.390
DAN RODNEY: So we have a few
caveats here just about

00:25:40.390 --> 00:25:41.680
sending and receiving
messages.

00:25:41.680 --> 00:25:46.630
So if you're like us and
you love byte arrays--

00:25:46.630 --> 00:25:47.640
BRUNO OLIVEIRA: And
the environment.

00:25:47.640 --> 00:25:49.180
DAN RODNEY: And the
environment.

00:25:49.180 --> 00:25:51.920
Well, if you really love byte
arrays, you might be tempted

00:25:51.920 --> 00:25:53.700
to make a new byte array
every time you

00:25:53.700 --> 00:25:54.560
want to send a message.

00:25:54.560 --> 00:25:57.070
But, if you do that, you will
cause lots of garbage

00:25:57.070 --> 00:25:57.920
collection.

00:25:57.920 --> 00:25:58.840
It's not good for performance.

00:25:58.840 --> 00:26:00.380
BRUNO OLIVEIRA: Or
the environment.

00:26:00.380 --> 00:26:01.360
DAN RODNEY: Or the
environment.

00:26:01.360 --> 00:26:01.990
True.

00:26:01.990 --> 00:26:03.410
DANIEL "WOLFF" DOBSON: The
virtual environment.

00:26:03.410 --> 00:26:06.910
DAN RODNEY: So try and create
one byte array and then reuse

00:26:06.910 --> 00:26:07.800
it over time.

00:26:07.800 --> 00:26:09.500
Don't allocate a new byte array
every time you want to

00:26:09.500 --> 00:26:10.390
send a message.

00:26:10.390 --> 00:26:12.346
That will litter the heap.

00:26:12.346 --> 00:26:14.380
Similarly, you might be tempted
to take that byte

00:26:14.380 --> 00:26:16.060
array and pass it around through
the rest of your code

00:26:16.060 --> 00:26:17.180
when you receive a message.

00:26:17.180 --> 00:26:20.860
But that byte array may get
reused and then weird things

00:26:20.860 --> 00:26:21.440
might happen.

00:26:21.440 --> 00:26:24.430
So instead, when you receive a
message, extract the data that

00:26:24.430 --> 00:26:27.320
you need from that byte array,
and pass that back to the rest

00:26:27.320 --> 00:26:29.190
of your program.

00:26:29.190 --> 00:26:31.540
Don't keep that buffer around.

00:26:31.540 --> 00:26:34.670
For the purposes of encoding
and decoding messages, make

00:26:34.670 --> 00:26:37.180
sure you use something that's
fast for both serialization

00:26:37.180 --> 00:26:38.520
and deserialization.

00:26:38.520 --> 00:26:40.410
Here at Google, we recommend
protocol buffers.

00:26:40.410 --> 00:26:41.740
There's a technology that
was invented at

00:26:41.740 --> 00:26:43.860
Google that's very fast.

00:26:43.860 --> 00:26:47.610
Some things like JSON are nice
to look at, but they won't be

00:26:47.610 --> 00:26:51.160
as fast and won't be as
good for performance.

00:26:51.160 --> 00:26:54.430
And, finally, the messages that
are sent between peers

00:26:54.430 --> 00:26:55.630
are unencrypted.

00:26:55.630 --> 00:27:00.540
So if the players in your game
are sending very sensitive

00:27:00.540 --> 00:27:04.500
information, or there's some
reason that you really need to

00:27:04.500 --> 00:27:07.590
be absolutely certain that the
data that's being sent back

00:27:07.590 --> 00:27:10.720
and forth is authentic, you may
want to implement your own

00:27:10.720 --> 00:27:15.030
security protocols on
top of our platform.

00:27:15.030 --> 00:27:16.580
BRUNO OLIVEIRA: Actually, since
we are talking about

00:27:16.580 --> 00:27:19.180
problems, let's talk about
some of the other

00:27:19.180 --> 00:27:20.370
problems you may see.

00:27:20.370 --> 00:27:25.210
So most of the problems have
to do with tunnels.

00:27:25.210 --> 00:27:25.890
Yep, that's a tunnel.

00:27:25.890 --> 00:27:27.480
I drew it.

00:27:27.480 --> 00:27:30.410
And there are many of those
in the real world.

00:27:30.410 --> 00:27:31.820
So you might get disconnected.

00:27:31.820 --> 00:27:34.420
And that happens because, for
instance, you enter a tunnel.

00:27:34.420 --> 00:27:35.240
DANIEL "WOLFF" DOBSON:
Nice graphic.

00:27:35.240 --> 00:27:35.540
BRUNO OLIVEIRA: Yep.

00:27:35.540 --> 00:27:36.290
Advanced graphics.

00:27:36.290 --> 00:27:38.370
It's like an X-ray vision
of a tunnel.

00:27:38.370 --> 00:27:41.380
So your friend might get
disconnected, the friend

00:27:41.380 --> 00:27:41.900
you're playing with.

00:27:41.900 --> 00:27:42.580
Why?

00:27:42.580 --> 00:27:45.090
Because they went through
a tunnel, of course.

00:27:45.090 --> 00:27:46.420
So you have to deal with
that problem, too.

00:27:46.420 --> 00:27:48.060
And the other problem has to
do with what's technically

00:27:48.060 --> 00:27:49.360
known as meh.

00:27:49.360 --> 00:27:52.800
So meh happens when I send an
invitation to a friend, yeah,

00:27:52.800 --> 00:27:53.860
let's play this multiplayer
game.

00:27:53.860 --> 00:27:56.280
And then they're like, meh.

00:27:56.280 --> 00:27:57.780
And they decline
the invitation.

00:27:57.780 --> 00:28:00.110
So you have to deal
with that problem.

00:28:00.110 --> 00:28:02.390
Also, speaking about meh,
some friends are very

00:28:02.390 --> 00:28:03.430
committed to games.

00:28:03.430 --> 00:28:05.330
But some friends don't really
take games seriously.

00:28:05.330 --> 00:28:06.110
I don't know why.

00:28:06.110 --> 00:28:06.690
DANIEL "WOLFF" DOBSON:
Slackers.

00:28:06.690 --> 00:28:07.180
BRUNO OLIVEIRA: Yep.

00:28:07.180 --> 00:28:09.680
So you're playing, and you're,
like, in the middle of a game,

00:28:09.680 --> 00:28:11.240
and then they leave the game.

00:28:11.240 --> 00:28:12.610
DANIEL "WOLFF" DOBSON: Usually
when they're behind.

00:28:12.610 --> 00:28:15.430
BRUNO OLIVEIRA: Yeah usually
when they're losing.

00:28:15.430 --> 00:28:17.905
So how do you deal with that
kind of people, besides

00:28:17.905 --> 00:28:19.720
unfriending them?

00:28:19.720 --> 00:28:21.980
You should implement the various
callbacks provided by

00:28:21.980 --> 00:28:25.040
the RoomStatusUpdateListener and
RoomUpdateListener to do

00:28:25.040 --> 00:28:27.470
whatever it is right for your
game in each of these cases.

00:28:27.470 --> 00:28:29.190
So sometimes you're going to
have to cancel the game.

00:28:29.190 --> 00:28:30.970
Sometimes you can continue
with fewer players.

00:28:30.970 --> 00:28:32.700
Of course, the logic of
that is up to you

00:28:32.700 --> 00:28:33.760
and up to your game.

00:28:33.760 --> 00:28:36.260
So it's important to listen for
onDisconnectedFromRoom,

00:28:36.260 --> 00:28:37.980
which that tells you that you
are being disconnected from

00:28:37.980 --> 00:28:38.800
your own room.

00:28:38.800 --> 00:28:40.900
And then PeersDeclined,
PeersDisconnected, PeersLeft,

00:28:40.900 --> 00:28:43.420
and there are actually a whole
bunch of others that might be

00:28:43.420 --> 00:28:44.700
interesting depending
on your game.

00:28:44.700 --> 00:28:47.080
So we definitely recommend you
to take a look at those

00:28:47.080 --> 00:28:49.460
listeners and set up the
ones that make sense.

00:28:49.460 --> 00:28:52.010
One word of warning-- if one
of more peers decline an

00:28:52.010 --> 00:28:54.780
invite, you're never going
to get onRoomConnected.

00:28:54.780 --> 00:28:56.120
You're never going to get
onRoomConnected because by

00:28:56.120 --> 00:28:58.620
definition that only happens
when everybody is connected.

00:28:58.620 --> 00:29:00.570
So if you still want to start
the game even though some

00:29:00.570 --> 00:29:03.050
people have declined or left the
game, you're going to have

00:29:03.050 --> 00:29:06.540
to manually monitor the
onPeersConnected callback to

00:29:06.540 --> 00:29:09.110
know when it's the right
time to start the game.

00:29:09.110 --> 00:29:12.320
Now, all we have to talk about
is the cleanup part, which is

00:29:12.320 --> 00:29:13.760
the last part.

00:29:13.760 --> 00:29:16.530
Now, you should always leave
the room after playing.

00:29:16.530 --> 00:29:18.880
And that can be done by
calling leaveRoom.

00:29:18.880 --> 00:29:21.410
After you do that, you have
to wait for the onLeftRoom

00:29:21.410 --> 00:29:23.150
callback, which is going to
tell you that you have

00:29:23.150 --> 00:29:24.650
successfully left the room.

00:29:24.650 --> 00:29:27.780
And then at that point, and not
before, you can go ahead

00:29:27.780 --> 00:29:32.090
and try to either create or
enter a different room.

00:29:32.090 --> 00:29:35.010
Also, one important point is
don't forget to leave the room

00:29:35.010 --> 00:29:35.880
one onStop.

00:29:35.880 --> 00:29:39.730
Remember, with our current
design, you cannot remain in a

00:29:39.730 --> 00:29:41.920
multiplayer game when our
application goes into the

00:29:41.920 --> 00:29:43.320
background.

00:29:43.320 --> 00:29:46.460
So if you get an onStop, you
should leave right away.

00:29:46.460 --> 00:29:47.450
So how do you do that?

00:29:47.450 --> 00:29:51.080
When you get the onStop
callback, you check if you are

00:29:51.080 --> 00:29:52.600
in a room or not.

00:29:52.600 --> 00:29:54.600
And then if you're inside a
room, you call leaveRoom to

00:29:54.600 --> 00:29:55.570
leave that room.

00:29:55.570 --> 00:29:59.670
That's going to guarantee that
the proper cleanup is made.

00:29:59.670 --> 00:30:01.720
Now, I think we have pretty much
covered everything right

00:30:01.720 --> 00:30:03.750
from sign-in, to get
people together, to

00:30:03.750 --> 00:30:05.230
game play, to cleanup.

00:30:05.230 --> 00:30:07.480
So we've covered even like
several paths through which

00:30:07.480 --> 00:30:08.700
people can get people
together.

00:30:08.700 --> 00:30:11.480
So they either list their
friends that they want to play

00:30:11.480 --> 00:30:13.620
with, or they have
a Quick Game with

00:30:13.620 --> 00:30:15.510
some unknown opponent.

00:30:15.510 --> 00:30:18.680
We've shown how to solve Dan's
problem of excessive

00:30:18.680 --> 00:30:22.790
popularity, where they have to
deal with too many invites

00:30:22.790 --> 00:30:24.030
using an invitation inbox.

00:30:24.030 --> 00:30:26.790
And then we talked about how to
wait for the connection and

00:30:26.790 --> 00:30:28.730
then play, which to us, of
course, means sending and

00:30:28.730 --> 00:30:30.810
receiving byte buffers.

00:30:30.810 --> 00:30:33.160
And then we talked about
clean-up and how to get back

00:30:33.160 --> 00:30:34.040
to your main screen.

00:30:34.040 --> 00:30:37.490
And remember that you can do as
many rematches as you want

00:30:37.490 --> 00:30:40.660
during the play phase because to
us, your game is just going

00:30:40.660 --> 00:30:41.270
on as normal.

00:30:41.270 --> 00:30:44.190
You don't have to do anything
special if you're trying to

00:30:44.190 --> 00:30:46.672
rematch the same people
in the same room.

00:30:46.672 --> 00:30:47.110
All right.

00:30:47.110 --> 00:30:49.200
So where do we go from here?

00:30:49.200 --> 00:30:51.870
Wolff knows where
we go from here.

00:30:51.870 --> 00:30:55.640
DANIEL "WOLFF" DOBSON: Well,
where do we go from here?

00:30:55.640 --> 00:30:57.690
Google Play game services
real-time

00:30:57.690 --> 00:30:59.010
multiplayer can do a lot.

00:30:59.010 --> 00:31:02.580
You can invite players from any
device in the world to any

00:31:02.580 --> 00:31:04.970
other device in the world,
all across the world.

00:31:04.970 --> 00:31:05.320
BRUNO OLIVEIRA: [INAUDIBLE].

00:31:05.320 --> 00:31:08.500
DANIEL "WOLFF" DOBSON: Did
I say world again?

00:31:08.500 --> 00:31:11.675
Bring people together in rooms
by invitation or automatch,

00:31:11.675 --> 00:31:14.470
stream messages over a mesh
network, peer to peer, or, in

00:31:14.470 --> 00:31:16.830
some case, even go through
the Google network.

00:31:16.830 --> 00:31:19.440
And it's all taken care of by
our back end, so you can focus

00:31:19.440 --> 00:31:21.550
on making the best game
you possibly can.

00:31:21.550 --> 00:31:24.070
You could start today.

00:31:24.070 --> 00:31:25.270
BRUNO OLIVEIRA: I mean,
effectively, we've given you

00:31:25.270 --> 00:31:27.180
several reasons to start
today, right?

00:31:27.180 --> 00:31:30.840
So, but of course, we don't want
you to walk out of this

00:31:30.840 --> 00:31:32.470
talk thinking that--

00:31:32.470 --> 00:31:33.490
DANIEL "WOLFF" DOBSON: Without
a balanced perspective.

00:31:33.490 --> 00:31:34.730
BRUNO OLIVEIRA: Without
balance.

00:31:34.730 --> 00:31:36.370
DANIEL "WOLFF" DOBSON: So we've
also compiled a list of

00:31:36.370 --> 00:31:38.620
reasons that you shouldn't
start now.

00:31:38.620 --> 00:31:39.630
You guys ready for this?

00:31:39.630 --> 00:31:42.090
We're going to go fast.

00:31:42.090 --> 00:31:44.070
DAN RODNEY: How are they
supposed to memorize that?

00:31:44.070 --> 00:31:45.220
BRUNO OLIVEIRA: Oh,
don't worry.

00:31:45.220 --> 00:31:47.470
I know that this list is long
and this is actually just the

00:31:47.470 --> 00:31:48.050
first page.

00:31:48.050 --> 00:31:49.990
But don't worry because
this is also available

00:31:49.990 --> 00:31:51.690
online at this URL.

00:31:51.690 --> 00:31:54.130
So you can just access that.

00:31:54.130 --> 00:31:55.860
I like to set that
as my home page.

00:31:55.860 --> 00:31:57.350
DANIEL "WOLFF" DOBSON: Yes.

00:31:57.350 --> 00:31:58.310
Or Google.com.

00:31:58.310 --> 00:31:58.860
BRUNO OLIVEIRA: Or Google.

00:31:58.860 --> 00:31:59.560
DANIEL "WOLFF" DOBSON: Yes.

00:31:59.560 --> 00:32:01.540
So go forth and conquer.

00:32:01.540 --> 00:32:03.200
We're waiting to see
awesome stuff.

00:32:03.200 --> 00:32:05.440
If you make awesome stuff,
tell us about it.

00:32:05.440 --> 00:32:06.970
We love to hear about it.

00:32:06.970 --> 00:32:07.790
Thank you so much.

00:32:07.790 --> 00:32:08.160
BRUNO OLIVEIRA: Thank you.

00:32:08.160 --> 00:32:11.590
[APPLAUSE]

00:32:11.590 --> 00:32:13.550
BRUNO OLIVEIRA: [INAUDIBLE].

00:32:22.880 --> 00:32:26.120
DANIEL "WOLFF" DOBSON: We have
one, two possible thoughts

00:32:26.120 --> 00:32:27.450
here-- three actually.

00:32:27.450 --> 00:32:29.260
One, we'd love it if you
rate this session.

00:32:29.260 --> 00:32:33.070
You can rate this session
in the Google I/O app.

00:32:33.070 --> 00:32:35.920
Or you can scan that QR code
and tell us all about it.

00:32:35.920 --> 00:32:37.180
BRUNO OLIVEIRA: In previous
I/Os, we actually supplied

00:32:37.180 --> 00:32:38.860
real-life tomatoes
you could throw.

00:32:38.860 --> 00:32:40.160
But then that made a mess.

00:32:40.160 --> 00:32:43.420
So if you want to throw
tomatoes, or praise us, please

00:32:43.420 --> 00:32:45.585
just scan that QR code over
there that says "Rate the

00:32:45.585 --> 00:32:46.080
Session."

00:32:46.080 --> 00:32:47.190
DANIEL "WOLFF" DOBSON:
They're virtual.

00:32:47.190 --> 00:32:48.720
We're not littering the heap
with these tomatoes.

00:32:48.720 --> 00:32:49.490
BRUNO OLIVEIRA: Exactly.

00:32:49.490 --> 00:32:51.150
DANIEL "WOLFF" DOBSON: And then
the other thing is that

00:32:51.150 --> 00:32:53.490
Bruno's going to keep talking
about more awesome

00:32:53.490 --> 00:32:54.410
things you can do.

00:32:54.410 --> 00:32:55.360
BRUNO OLIVEIRA: I'm actually
going to keep talking for two

00:32:55.360 --> 00:32:55.980
sessions now.

00:32:55.980 --> 00:32:57.488
So if you enjoy listening
to me, you're going

00:32:57.488 --> 00:32:57.620
to have a good time.

00:32:57.620 --> 00:32:59.440
DANIEL "WOLFF" DOBSON: If you
like Bruno, there's plenty of

00:32:59.440 --> 00:33:00.370
Bruno to go around.

00:33:00.370 --> 00:33:02.060
BRUNO OLIVEIRA: If you don't
like to hear me talk, man,

00:33:02.060 --> 00:33:03.780
you're going to have
a bad time.

00:33:03.780 --> 00:33:04.950
DANIEL "WOLFF" DOBSON: And Dan
and I are going to head out

00:33:04.950 --> 00:33:06.880
over to Office Hours.

00:33:06.880 --> 00:33:07.110
All right?

00:33:07.110 --> 00:33:08.030
Thanks a lot.

00:33:08.030 --> 00:33:09.280
BRUNO OLIVEIRA: Thank you.

