WEBVTT
Kind: captions
Language: en

00:00:00.450 --> 00:00:03.110
The key to make Jasmine, the unit test
framework used in our sample repo

00:00:03.110 --> 00:00:06.980
work with our build, is to use
a headless browser that we can execute

00:00:06.980 --> 00:00:11.410
an instruct from the command line
because that's what gulp can deal with.

00:00:11.410 --> 00:00:13.260
Luckily, such a browser exists.

00:00:13.260 --> 00:00:17.150
It's called PhantomJS, and it's
basically a headless version of Webkit.

00:00:17.150 --> 00:00:19.390
And you don't need to know
much more about it right now.

00:00:19.390 --> 00:00:22.510
Just the fact that the
gulp-jasmine-phantom plugin uses that to

00:00:22.510 --> 00:00:26.790
its advantage to actually run your
tests in a real browser environment.

00:00:26.790 --> 00:00:29.590
Install PhantomJS first
using the instructor notes.

00:00:29.590 --> 00:00:30.540
And then like always,

00:00:30.540 --> 00:00:34.340
install gulp-jasmine-phantom via
npm in your project directory.

00:00:34.340 --> 00:00:36.170
Then add a require to your gulp file,
like so.

00:00:36.170 --> 00:00:41.530
Now all we need to do is to
create a new task called tests.

00:00:41.530 --> 00:00:44.600
Use gulp.src to find the correct
test file we want to run,

00:00:44.600 --> 00:00:46.900
then use a require with Jasmine.

00:00:46.900 --> 00:00:49.054
The degradation setting tells
Jasmine to use PhantomJS.

00:00:49.054 --> 00:00:53.562
If it's set to faults, it runs in a node
js environment instead which you'd only

00:00:53.562 --> 00:00:55.770
want if you actually test node js code.

00:00:56.770 --> 00:01:01.201
And finally the vendor setting needs to
point to our JavaScript source files,

00:01:01.201 --> 00:01:04.920
as this plugin constructs its
own specrunner.html with those.

00:01:04.920 --> 00:01:08.890
Now head back to your terminal and
run gulp tests to see Phantom JS and

00:01:08.890 --> 00:01:09.870
Jasmine in action.

