WEBVTT
Kind: captions
Language: en

00:00:05.357 --> 00:00:07.590
MALE SPEAKER: Shanghai
GDG is a very

00:00:07.590 --> 00:00:09.380
interesting developer community.

00:00:09.380 --> 00:00:10.500
FEMALE SPEAKER: I'm
glad somebody

00:00:10.500 --> 00:00:11.530
has asked this question.

00:00:11.530 --> 00:00:12.896
MALE SPEAKER: This is where
the magic happens.

00:00:12.896 --> 00:00:14.475
FEMALE SPEAKER: This is
primarily a question and

00:00:14.475 --> 00:00:15.180
answer show.

00:00:15.180 --> 00:00:17.115
So if any of you out there would
like to ask questions--

00:00:21.374 --> 00:00:24.350
ERIC GILMORE: Welcome back to
Google Developers Live.

00:00:24.350 --> 00:00:26.930
I'm Eric Gilmore, a technical
writer with the Google Drive

00:00:26.930 --> 00:00:28.430
Developers Relation Team.

00:00:28.430 --> 00:00:29.750
And here with me today
is Claudio--

00:00:29.750 --> 00:00:30.140
CLAUDIO CHERUBINO: Hi.

00:00:30.140 --> 00:00:33.220
ERIC GILMORE: --Cherubino, an
engineer with the same team.

00:00:33.220 --> 00:00:34.950
And a fine engineer,
I might add.

00:00:34.950 --> 00:00:38.220
Recently, he's done quite a bit
of work writing some new

00:00:38.220 --> 00:00:40.250
code samples that we're
featuring in our public

00:00:40.250 --> 00:00:41.780
documentation.

00:00:41.780 --> 00:00:45.475
And we'd like to talk about one
of those today in detail.

00:00:45.475 --> 00:00:47.230
CLAUDIO CHERUBINO:
Thanks, Eric.

00:00:47.230 --> 00:00:48.910
So we recently--

00:00:48.910 --> 00:00:51.370
probably the beginning of
this week-- we added a

00:00:51.370 --> 00:00:52.850
new page to our Docs.

00:00:52.850 --> 00:00:54.107
It's a Quickstart page
on developers.googl

00:00:54.107 --> 00:01:00.400
e.com/drive/quickstart, which
will help you get started with

00:01:00.400 --> 00:01:05.220
the Drive API in, we think,
about 10 minutes.

00:01:05.220 --> 00:01:07.110
So you start from nothing.

00:01:07.110 --> 00:01:11.280
And you end up with a complete
command-line application in

00:01:11.280 --> 00:01:14.030
one of the languages we support,
which are Java,

00:01:14.030 --> 00:01:16.600
Python, PHP, .NET, and Ruby.

00:01:16.600 --> 00:01:21.350
And this application will
perform authorization for you

00:01:21.350 --> 00:01:24.700
and upload a file
to Google Drive.

00:01:24.700 --> 00:01:29.230
We have done another Google
Developers Live event last

00:01:29.230 --> 00:01:32.510
week, covering something
like this with Python.

00:01:32.510 --> 00:01:37.920
So if you want to learn about
this in Python, there's a

00:01:37.920 --> 00:01:40.400
video in our library
that you can watch.

00:01:40.400 --> 00:01:43.580
Today, we're going to do the
same thing by following these

00:01:43.580 --> 00:01:46.330
instructions but in PHP.

00:01:46.330 --> 00:01:50.860
So we have a list of videos we
can point them to, right?

00:01:50.860 --> 00:01:51.260
ERIC GILMORE: Sure.

00:01:51.260 --> 00:01:54.660
There's a Drive YouTube playlist
with all of our

00:01:54.660 --> 00:01:58.530
recent videos, as well as some
videos from Google I/O that

00:01:58.530 --> 00:01:59.540
you could view--

00:01:59.540 --> 00:02:01.840
webinar, by one of our
developer advocates.

00:02:01.840 --> 00:02:04.670
So please, look at the playlist
and check it out.

00:02:04.670 --> 00:02:06.790
But specifically, if you're
looking for the Python

00:02:06.790 --> 00:02:08.639
Quickstart, it's described
there.

00:02:08.639 --> 00:02:09.919
It's also described
in this page.

00:02:09.919 --> 00:02:12.770
This page covers all
of those languages.

00:02:12.770 --> 00:02:14.920
As Claudio said, today we're
going to focus on PHP.

00:02:14.920 --> 00:02:17.030
But all languages are
covered here.

00:02:17.030 --> 00:02:18.350
CLAUDIO CHERUBINO: Yeah,
that's true.

00:02:18.350 --> 00:02:22.530
And actually, whatever the
language of your choice, when

00:02:22.530 --> 00:02:24.320
you want to write this
command-line application,

00:02:24.320 --> 00:02:26.040
there are five steps
you have to follow.

00:02:26.040 --> 00:02:28.920
They are outlined in the Docs
and in this page we have in

00:02:28.920 --> 00:02:29.760
front of us.

00:02:29.760 --> 00:02:32.080
So the first step is to
enable the Drive API.

00:02:32.080 --> 00:02:34.120
Then we're going to install the
Google Client Library for

00:02:34.120 --> 00:02:36.300
the programming language
that we chose.

00:02:36.300 --> 00:02:38.960
And set up the sample,
run the sample.

00:02:38.960 --> 00:02:42.510
And if you like that and you
want to do more, there is some

00:02:42.510 --> 00:02:44.240
suggestions on what
to do next.

00:02:44.240 --> 00:02:46.150
ERIC GILMORE: In case you were
wondering, Claudio writes the

00:02:46.150 --> 00:02:48.490
samples, then I write
this page.

00:02:48.490 --> 00:02:51.940
And then we argue about things
in order to give you this

00:02:51.940 --> 00:02:53.710
final polished product that
you're looking at.

00:02:53.710 --> 00:02:54.505
CLAUDIO CHERUBINO: Yes.

00:02:54.505 --> 00:02:55.750
And it is polished.

00:02:55.750 --> 00:02:58.280
But maybe there's still some
issues or is still something

00:02:58.280 --> 00:02:59.320
that is not clear.

00:02:59.320 --> 00:03:02.110
And if you have comments or
feedback on this page, please

00:03:02.110 --> 00:03:04.000
reach out to us on Google+.

00:03:04.000 --> 00:03:07.280
Or remember we monitor
Stack Overflow for

00:03:07.280 --> 00:03:09.040
Google Drive SDK questions.

00:03:09.040 --> 00:03:12.170
So if you have technical
questions, please post them on

00:03:12.170 --> 00:03:12.910
Stack Overflow.

00:03:12.910 --> 00:03:15.310
And we'll be glad to answer
to those questions.

00:03:15.310 --> 00:03:17.310
ERIC GILMORE: If you're looking
for very, very quick

00:03:17.310 --> 00:03:19.700
gratification, though, there's
also a feedback link right on

00:03:19.700 --> 00:03:20.730
this page we're looking at.

00:03:20.730 --> 00:03:23.330
CLAUDIO CHERUBINO: That's
absolutely correct.

00:03:23.330 --> 00:03:26.400
Let's see how to-- oh, we're
going to write command-line

00:03:26.400 --> 00:03:28.140
application in PHP.

00:03:28.140 --> 00:03:32.190
The first step is enabling
the Drive API.

00:03:32.190 --> 00:03:35.290
We need to create a Google
API project in

00:03:35.290 --> 00:03:36.630
the Google APIs console.

00:03:36.630 --> 00:03:39.760
And then enable the services
we need, and generate the

00:03:39.760 --> 00:03:40.500
credentials we need.

00:03:40.500 --> 00:03:42.990
Let's do this step by step.

00:03:42.990 --> 00:03:45.530
So I open the Google
APIs console.

00:03:45.530 --> 00:03:47.130
I have no projects.

00:03:47.130 --> 00:03:49.110
This is the first time I create
a new project, which is

00:03:49.110 --> 00:03:52.730
probably what you will see if
this is the first time you try

00:03:52.730 --> 00:03:55.200
writing a Google API project.

00:03:55.200 --> 00:03:58.710
And I have this big button
that says Create Project.

00:03:58.710 --> 00:04:01.110
And this is what I'm
going to click.

00:04:01.110 --> 00:04:08.590
So when I do, I go to this page,
where I see the list of

00:04:08.590 --> 00:04:14.110
services that I can enable and
disable for my application.

00:04:14.110 --> 00:04:17.200
And in our sample, we need to
enable the Drive API service.

00:04:17.200 --> 00:04:21.170
But if you need to use the Drive
API and other services,

00:04:21.170 --> 00:04:25.040
let's say the Calendar API, you
can enable both from here.

00:04:25.040 --> 00:04:27.530
You can enable as many APIs
as you need from here.

00:04:27.530 --> 00:04:31.490
So I'll scroll down, find Drive
API, and enable it by

00:04:31.490 --> 00:04:34.650
clicking on the on-off switch.

00:04:34.650 --> 00:04:39.670
I also see that I have a limit
of 500,000 requests per day.

00:04:39.670 --> 00:04:41.270
This should be enough for
our sample today.

00:04:41.270 --> 00:04:42.050
ERIC GILMORE: That's
a generous quota.

00:04:42.050 --> 00:04:44.750
CLAUDIO CHERUBINO:
Yeah, it is.

00:04:44.750 --> 00:04:46.090
I enabled my service.

00:04:46.090 --> 00:04:48.415
I need to generate
my credentials.

00:04:48.415 --> 00:04:54.200
The Drive API uses OAuth2 as the
authorization mechanism.

00:04:54.200 --> 00:04:57.700
And in order for the auth flow
to run, you need client ID and

00:04:57.700 --> 00:04:58.685
client secret.

00:04:58.685 --> 00:05:00.550
ERIC GILMORE: Do all requests
to the API need to be

00:05:00.550 --> 00:05:00.910
authorized?

00:05:00.910 --> 00:05:03.210
Is that still true?

00:05:03.210 --> 00:05:07.950
CLAUDIO CHERUBINO: So there's
some cases where you may want

00:05:07.950 --> 00:05:10.240
to publish a document to
the general public.

00:05:10.240 --> 00:05:13.660
And so you want anyone without
any credentials to be able to

00:05:13.660 --> 00:05:14.970
access that.

00:05:14.970 --> 00:05:16.340
Let's say it's a special case.

00:05:16.340 --> 00:05:20.880
But in general, almost all API
calls require authentication.

00:05:20.880 --> 00:05:22.030
ERIC GILMORE: Right.

00:05:22.030 --> 00:05:24.790
CLAUDIO CHERUBINO: So I said
I want to create my new

00:05:24.790 --> 00:05:26.280
credentials, OAuth2
credentials.

00:05:26.280 --> 00:05:31.350
So I click on API Access in
the left navigation menu.

00:05:31.350 --> 00:05:35.180
And I have no credentials,
so I have to create an

00:05:35.180 --> 00:05:37.460
OAuth 2.0 client ID.

00:05:37.460 --> 00:05:39.950
It's a step by step process.

00:05:39.950 --> 00:05:42.330
I need to specify
a product name.

00:05:42.330 --> 00:05:45.120
This can be name of a product.

00:05:45.120 --> 00:05:47.440
I'm going to say Drive PHP.

00:05:47.440 --> 00:05:49.010
Maybe you're going to choose
something that is more

00:05:49.010 --> 00:05:49.900
descriptive.

00:05:49.900 --> 00:05:53.400
And if you have a product logo,
you can add it here.

00:05:53.400 --> 00:05:55.910
You may add it later if you
are just testing now.

00:05:55.910 --> 00:05:59.030
And then when you're ready to
launch a product, you may want

00:05:59.030 --> 00:06:01.490
to add a logo and description,
a lot of other things.

00:06:01.490 --> 00:06:03.960
But this time, we don't
need a logo.

00:06:03.960 --> 00:06:06.200
So let's click on Next.

00:06:06.200 --> 00:06:10.740
And then we have to choose if we
want our application to be

00:06:10.740 --> 00:06:14.020
a web application, a service
account application, or an

00:06:14.020 --> 00:06:16.080
installed application.

00:06:16.080 --> 00:06:19.980
Usually, you're probably going
to select a web application.

00:06:19.980 --> 00:06:22.950
But today, we are going to
write a command-line

00:06:22.950 --> 00:06:24.750
application, which is an
installed application.

00:06:24.750 --> 00:06:25.965
It's called an installed
application.

00:06:25.965 --> 00:06:27.650
ERIC GILMORE: And this is
because our goal was to get

00:06:27.650 --> 00:06:28.215
started quickly.

00:06:28.215 --> 00:06:29.860
CLAUDIO CHERUBINO: Yes.

00:06:29.860 --> 00:06:33.780
So we will see at the end of
this talk that the user

00:06:33.780 --> 00:06:37.580
experience for a command-line
application is not great.

00:06:37.580 --> 00:06:40.200
User experience when
you have a web

00:06:40.200 --> 00:06:42.610
application is much nicer.

00:06:42.610 --> 00:06:45.730
But for the sake of example,
this is probably a better way

00:06:45.730 --> 00:06:46.520
to get started.

00:06:46.520 --> 00:06:49.530
And all we say about the
Drive API usage is

00:06:49.530 --> 00:06:50.610
going to be the same.

00:06:50.610 --> 00:06:54.350
And then you have to build an
application on top of it.

00:06:54.350 --> 00:06:57.450
But all you learn from here
can be used in a web

00:06:57.450 --> 00:06:57.900
application.

00:06:57.900 --> 00:06:58.610
ERIC GILMORE: That's right.

00:06:58.610 --> 00:07:00.350
CLAUDIO CHERUBINO: So let's
say Installed Application.

00:07:00.350 --> 00:07:02.480
And then this is not Android.

00:07:02.480 --> 00:07:03.340
This is not iOS.

00:07:03.340 --> 00:07:05.820
It's Other, which is a
command-line application

00:07:05.820 --> 00:07:08.060
running on my computer.

00:07:08.060 --> 00:07:10.380
I click on Create Client ID.

00:07:10.380 --> 00:07:14.470
And what I get is a new box
titled Client ID for Installed

00:07:14.470 --> 00:07:19.330
Applications, which includes
client ID and client secret.

00:07:19.330 --> 00:07:22.730
The client secret, as the name
says, must be secret.

00:07:22.730 --> 00:07:26.170
So you should make sure that
you never share this client

00:07:26.170 --> 00:07:26.900
secret with anyone.

00:07:26.900 --> 00:07:28.540
ERIC GILMORE: For instance,
not on the public

00:07:28.540 --> 00:07:29.490
internet on a video.

00:07:29.490 --> 00:07:30.010
CLAUDIO CHERUBINO: Oh, yeah.

00:07:30.010 --> 00:07:31.900
Yeah, that's a good idea.

00:07:31.900 --> 00:07:36.730
So let's say you're not
smart, so like me.

00:07:36.730 --> 00:07:40.900
And you showed your client
secret on a public video.

00:07:40.900 --> 00:07:42.420
And you don't want other
people to use your

00:07:42.420 --> 00:07:42.990
credentials.

00:07:42.990 --> 00:07:43.880
What do you do?

00:07:43.880 --> 00:07:47.210
At the end of this talk, you go
back to the APIs console.

00:07:47.210 --> 00:07:52.500
Click under Set Client Secret,
and this current client secret

00:07:52.500 --> 00:07:55.950
will be revoked, so
no longer valid.

00:07:55.950 --> 00:07:58.350
And you get a new one that you
can use in your application.

00:07:58.350 --> 00:08:00.480
The client ID will
stay the same.

00:08:00.480 --> 00:08:04.090
So you only need to replace
the client secret.

00:08:04.090 --> 00:08:07.540
You can consider client ID
and client secret as

00:08:07.540 --> 00:08:08.790
username and password.

00:08:08.790 --> 00:08:11.260
You might want your username to
be known, but you'd never

00:08:11.260 --> 00:08:13.452
want your password to be
known to other people.

00:08:13.452 --> 00:08:14.205
ERIC GILMORE: Right.

00:08:14.205 --> 00:08:16.750
CLAUDIO CHERUBINO: So with this,
we go back to the Docs

00:08:16.750 --> 00:08:18.510
and see that we've done
the first step,

00:08:18.510 --> 00:08:20.830
enable the Drive API.

00:08:20.830 --> 00:08:23.820
We can move on to the second
step, which is installing the

00:08:23.820 --> 00:08:26.430
client library for the language
of your choice.

00:08:26.430 --> 00:08:28.320
I selected Python for today.

00:08:28.320 --> 00:08:30.020
And to install Python--

00:08:30.020 --> 00:08:31.610
to install PHP, sorry.

00:08:31.610 --> 00:08:33.080
I selected PHP for today.

00:08:33.080 --> 00:08:34.710
I selected Python last week.

00:08:34.710 --> 00:08:36.190
This is what I was
trying to say.

00:08:36.190 --> 00:08:39.049
And for PHP, the instructions
are very easy.

00:08:39.049 --> 00:08:42.760
There's just a one-line command
that we can run to

00:08:42.760 --> 00:08:45.280
check out the source from
the public repository.

00:08:45.280 --> 00:08:47.410
So I can take this line--

00:08:47.410 --> 00:08:49.120
ERIC GILMORE: In Python's
defense, its

00:08:49.120 --> 00:08:50.030
setup is easy, too.

00:08:50.030 --> 00:08:52.470
CLAUDIO CHERUBINO: Yes, it's
still on one line.

00:08:52.470 --> 00:08:57.990
So I can take that line and
run it on my command line.

00:09:01.670 --> 00:09:07.410
And what I get is the source
for a Google API client

00:09:07.410 --> 00:09:08.570
library for PHP.

00:09:08.570 --> 00:09:14.040
And if I go to the folder, I see
that I have a Google API

00:09:14.040 --> 00:09:17.105
PHP client folder, which
contains what we just got, and

00:09:17.105 --> 00:09:17.980
then two more files.

00:09:17.980 --> 00:09:19.740
We are going to see right
now what they're for.

00:09:19.740 --> 00:09:23.190
ERIC GILMORE: Incidentally,
the PHP client recently

00:09:23.190 --> 00:09:25.450
underwent a significant
refactoring.

00:09:25.450 --> 00:09:27.430
So you might see some
improvements there.

00:09:27.430 --> 00:09:29.910
If you have an older copy,
you might want to

00:09:29.910 --> 00:09:31.435
upgrade that copy.

00:09:31.435 --> 00:09:34.010
CLAUDIO CHERUBINO: Yeah,
that's 100% correct.

00:09:34.010 --> 00:09:38.290
And we posted this news
in our Change Log.

00:09:38.290 --> 00:09:42.570
So remember, every time we add
something on the Docs or in

00:09:42.570 --> 00:09:45.780
the libraries or anything that
is related to the Drive SDK,

00:09:45.780 --> 00:09:49.220
we update the release notes
in our documentation.

00:09:49.220 --> 00:09:52.710
So this was just added
a couple days ago.

00:09:52.710 --> 00:09:53.310
OK.

00:09:53.310 --> 00:09:55.940
Let's go back to Docs and see
what we have to do next.

00:09:55.940 --> 00:09:57.410
So we've done step
two, install the

00:09:57.410 --> 00:09:58.470
Google client library.

00:09:58.470 --> 00:10:03.130
It's time to do step three,
set up the sample.

00:10:03.130 --> 00:10:06.010
To run this sample, we
need two files--

00:10:06.010 --> 00:10:10.900
the source file in PHP and the
document to be uploaded into

00:10:10.900 --> 00:10:12.650
Google Drive.

00:10:12.650 --> 00:10:15.340
I created the text document.

00:10:15.340 --> 00:10:17.740
So I called it document.txt.

00:10:17.740 --> 00:10:23.460
And it's a text document with
some sample content, friendly

00:10:23.460 --> 00:10:24.810
sample content.

00:10:24.810 --> 00:10:28.080
This is the file we're going
to upload to Google Drive.

00:10:28.080 --> 00:10:31.940
And then I also have
a drive.php

00:10:31.940 --> 00:10:34.700
file, which is empty.

00:10:34.700 --> 00:10:38.500
So if you want to get started
quickly, you can just go to

00:10:38.500 --> 00:10:45.620
this page, take this code, and
copy it into your file.

00:10:45.620 --> 00:10:47.960
And then we will try it.

00:10:47.960 --> 00:10:51.840
And then I will explain line
by line what's happening on

00:10:51.840 --> 00:10:53.300
your computer.

00:10:53.300 --> 00:10:55.560
So let me copy that
into my file.

00:10:58.290 --> 00:10:59.780
Let's make this bigger.

00:11:02.580 --> 00:11:04.790
So let's see these lines.

00:11:04.790 --> 00:11:08.280
First, we require the Google
client library.

00:11:08.280 --> 00:11:10.130
And the Google client
library is in

00:11:10.130 --> 00:11:12.400
google-api-php-client/src.

00:11:12.400 --> 00:11:13.260
So we just downloaded it.

00:11:13.260 --> 00:11:16.050
So if you download it as we
did, this is going to be

00:11:16.050 --> 00:11:18.520
exactly the correct path.

00:11:18.520 --> 00:11:21.280
Next, we have to set
our credentials

00:11:21.280 --> 00:11:22.480
from the APIs console.

00:11:22.480 --> 00:11:26.400
So the sample code obviously
will have some place holders.

00:11:26.400 --> 00:11:28.840
And you have to replace your
client ID or your client

00:11:28.840 --> 00:11:31.420
secret with the values you got
from the APIs console.

00:11:31.420 --> 00:11:32.890
So I'm going to do that.

00:11:32.890 --> 00:11:36.650
Let me go back to the
APIs console.

00:11:36.650 --> 00:11:43.500
I can take my client ID
and copy it here.

00:11:43.500 --> 00:11:45.880
And then I can do the
same with my client

00:11:45.880 --> 00:11:50.860
secret, and put it there.

00:11:50.860 --> 00:11:56.500
And this is the only edit you
need to do to get started.

00:11:56.500 --> 00:11:59.410
If you want to add new features,
then of course you

00:11:59.410 --> 00:12:00.310
have to write them.

00:12:00.310 --> 00:12:02.980
But if you want to get started,
that's the only thing

00:12:02.980 --> 00:12:04.110
you have to do.

00:12:04.110 --> 00:12:07.530
Everything else is
already working.

00:12:07.530 --> 00:12:10.710
I'll say, before we go and
explain line by line, should

00:12:10.710 --> 00:12:12.760
we run this and see
what happens?

00:12:12.760 --> 00:12:13.400
ERIC GILMORE: Absolutely.

00:12:13.400 --> 00:12:13.790
CLAUDIO CHERUBINO: OK.

00:12:13.790 --> 00:12:15.220
ERIC GILMORE: Can I ask one
question, though, first?

00:12:15.220 --> 00:12:15.545
CLAUDIO CHERUBINO: Sure.

00:12:15.545 --> 00:12:18.050
ERIC GILMORE: The redirect URI
that's given there-- is that a

00:12:18.050 --> 00:12:20.060
standard URI for installed
applications?

00:12:20.060 --> 00:12:21.600
CLAUDIO CHERUBINO: Yes.

00:12:21.600 --> 00:12:25.110
So this is a standard URI that
is used for installed

00:12:25.110 --> 00:12:25.730
applications.

00:12:25.730 --> 00:12:28.260
When you have a web application,
you have to

00:12:28.260 --> 00:12:29.490
specify your own.

00:12:29.490 --> 00:12:31.930
But with installed applications,
this is going to

00:12:31.930 --> 00:12:32.820
be the standard value.

00:12:32.820 --> 00:12:34.670
It's provided by--

00:12:34.670 --> 00:12:37.150
if you see in the APIs console,
you will find the

00:12:37.150 --> 00:12:38.740
same redirect URI.

00:12:38.740 --> 00:12:40.930
And you don't need to change
it if you use installed

00:12:40.930 --> 00:12:42.400
applications.

00:12:42.400 --> 00:12:44.670
And one minute-- while we're
talking here, we're talking

00:12:44.670 --> 00:12:45.980
about the scopes.

00:12:45.980 --> 00:12:50.780
The auth scopes are basically
what we're asking the user

00:12:50.780 --> 00:12:53.100
for, what permissions we want.

00:12:53.100 --> 00:12:57.410
And in our case, we are asking
for the full Drive permission.

00:12:57.410 --> 00:13:01.040
So with this sample, we are
asking to have access to all

00:13:01.040 --> 00:13:03.850
the documents for the user
who runs the sample.

00:13:03.850 --> 00:13:06.070
There are different scopes.

00:13:06.070 --> 00:13:08.320
Even just for the Drive API,
there are different

00:13:08.320 --> 00:13:09.560
scopes you can use.

00:13:09.560 --> 00:13:13.330
So you don't need to ask for
the full Drive access.

00:13:13.330 --> 00:13:14.600
We actually don't
recommend it.

00:13:14.600 --> 00:13:15.130
ERIC GILMORE: Exactly.

00:13:15.130 --> 00:13:17.600
Our general recommendation is to
ask for the most specific,

00:13:17.600 --> 00:13:21.150
limited scope that you can
request, and still have your

00:13:21.150 --> 00:13:21.940
application work.

00:13:21.940 --> 00:13:22.670
CLAUDIO CHERUBINO: Yeah.

00:13:22.670 --> 00:13:23.550
But this is a sample.

00:13:23.550 --> 00:13:26.740
And of course, you
can tweak that.

00:13:26.740 --> 00:13:28.830
So let me run this.

00:13:28.830 --> 00:13:32.630
I go back to my terminal.

00:13:32.630 --> 00:13:37.150
If I just do PHP and my file
is called drive.php, so I'm

00:13:37.150 --> 00:13:40.910
running it from the command
line, the first thing the

00:13:40.910 --> 00:13:44.560
application does, it says,
please visit this URL.

00:13:44.560 --> 00:13:49.170
So the auth flow requires the
user to grant access to the

00:13:49.170 --> 00:13:51.210
application from a browser.

00:13:51.210 --> 00:13:53.890
But our command-line application
has no browser.

00:13:53.890 --> 00:13:59.150
So what it can do is that it
shows you the URL to visit.

00:13:59.150 --> 00:14:01.100
And then waits for you
to do something.

00:14:01.100 --> 00:14:04.890
So this is what I was referring
to when I said the

00:14:04.890 --> 00:14:07.220
user experience is
not the greatest.

00:14:07.220 --> 00:14:11.270
The user, in a command-line
application, has to copy the

00:14:11.270 --> 00:14:19.660
link, go to his browser, visit
that page, and will find the

00:14:19.660 --> 00:14:21.290
famous OAuth2 flow dialogue.

00:14:21.290 --> 00:14:24.155
Which says that the drive.php,
which is the application I

00:14:24.155 --> 00:14:26.890
just created, is requesting
permission to view and manage

00:14:26.890 --> 00:14:28.860
files and documents in
my Google Drive.

00:14:28.860 --> 00:14:32.080
And if I want to know more
details, I can expand it and

00:14:32.080 --> 00:14:33.650
see more details.

00:14:33.650 --> 00:14:35.240
I know this application,
so I'm going to

00:14:35.240 --> 00:14:37.370
allow access to it.

00:14:37.370 --> 00:14:40.300
And what I get, since this is
an installed application, is

00:14:40.300 --> 00:14:44.910
that I get back a code that I
have to copy and paste into

00:14:44.910 --> 00:14:46.700
the command line.

00:14:46.700 --> 00:14:50.930
Once I enter this code, the
application will be

00:14:50.930 --> 00:14:51.900
authorized.

00:14:51.900 --> 00:14:55.360
And the next thing it will try
to do is upload that file to

00:14:55.360 --> 00:14:58.520
Drive, and then print
all the metadata we

00:14:58.520 --> 00:14:59.760
get back from Drive.

00:14:59.760 --> 00:15:04.750
So I insert my authorization
code.

00:15:04.750 --> 00:15:06.815
And I get a lot of things.

00:15:06.815 --> 00:15:09.830
It's JSON structure.

00:15:09.830 --> 00:15:12.550
That is exactly what we
get back from Drive.

00:15:12.550 --> 00:15:14.480
Of course, this is an example.

00:15:14.480 --> 00:15:17.920
So you probably don't want to
just dump everything you get

00:15:17.920 --> 00:15:19.740
back from the API
to the console.

00:15:19.740 --> 00:15:20.940
You probably want to
do something else.

00:15:20.940 --> 00:15:24.280
But still, this is useful for
you to learn what you can see,

00:15:24.280 --> 00:15:26.700
what you get from
the Drive API.

00:15:26.700 --> 00:15:29.880
So we uploaded a file.

00:15:29.880 --> 00:15:32.960
And we get its ID here.

00:15:32.960 --> 00:15:34.630
We get a link to it.

00:15:34.630 --> 00:15:36.170
We get some other links to it.

00:15:36.170 --> 00:15:37.570
We can talk about it.

00:15:37.570 --> 00:15:39.890
We get a title--

00:15:39.890 --> 00:15:42.630
what type the document is, the
description, and so on.

00:15:42.630 --> 00:15:44.790
A lot of flags, a
lot of labels.

00:15:44.790 --> 00:15:46.920
The document has everything
you might

00:15:46.920 --> 00:15:48.210
need about this document.

00:15:48.210 --> 00:15:50.360
ERIC GILMORE: I think for the
purposes of our sample, it's

00:15:50.360 --> 00:15:52.800
interesting to note that the
title is what you'll look for

00:15:52.800 --> 00:15:55.110
when you go to the Drive
UI, not the file name.

00:15:55.110 --> 00:15:55.790
CLAUDIO CHERUBINO: Yes.

00:15:55.790 --> 00:15:56.540
Let's check it out.

00:15:56.540 --> 00:16:02.180
So if I go to my Google Drive, a
document called My Document.

00:16:02.180 --> 00:16:03.930
We'll see why this document
is called My Document.

00:16:03.930 --> 00:16:05.500
But a document called
My Document

00:16:05.500 --> 00:16:06.880
has just been uploaded.

00:16:06.880 --> 00:16:10.090
And if I open it, it's
just a text file.

00:16:10.090 --> 00:16:13.810
So the Google Viewer will be
able to open it and will just

00:16:13.810 --> 00:16:14.250
show the content.

00:16:14.250 --> 00:16:15.950
And say hi, I'm a
test document.

00:16:15.950 --> 00:16:18.320
So it worked.

00:16:18.320 --> 00:16:19.970
Let's see how that worked.

00:16:19.970 --> 00:16:21.540
Let's go back to the code.

00:16:21.540 --> 00:16:27.900
So if you remember, the first
thing we did was to show the

00:16:27.900 --> 00:16:30.210
user an authorization URL.

00:16:30.210 --> 00:16:32.750
This is done by using
the client library.

00:16:32.750 --> 00:16:35.200
You don't have to do
much to do it.

00:16:35.200 --> 00:16:39.490
You just ask the client, which
is the one we sent our

00:16:39.490 --> 00:16:42.250
credentials to, and
say client, create

00:16:42.250 --> 00:16:44.180
authorization URL.

00:16:44.180 --> 00:16:48.630
And then we take this
authorization URL and send it

00:16:48.630 --> 00:16:49.430
to the user.

00:16:49.430 --> 00:16:52.420
And ask him to visit this URL.

00:16:52.420 --> 00:16:57.405
Once the user insert the
authorization code, we store

00:16:57.405 --> 00:17:02.360
it in another variable called
authorization code.

00:17:02.360 --> 00:17:07.569
We ask the client library to
perform the authorization flow

00:17:07.569 --> 00:17:11.710
and authenticate it
with this code.

00:17:11.710 --> 00:17:17.369
And once that is done, we get an
access token, which is what

00:17:17.369 --> 00:17:19.660
you need to send request.

00:17:19.660 --> 00:17:23.329
So I'm not going into details
about the OAuth2 flow.

00:17:23.329 --> 00:17:26.920
But when you perform
authorization, you get two

00:17:26.920 --> 00:17:31.390
types of tokens, refresh tokens
and access tokens.

00:17:31.390 --> 00:17:37.360
Access tokens are short lived
and are needed to send

00:17:37.360 --> 00:17:39.030
requests, authorize requests.

00:17:39.030 --> 00:17:43.640
Refresh tokens shouldn't be sent
with your request, but

00:17:43.640 --> 00:17:46.240
can be used to regenerate
new access tokens

00:17:46.240 --> 00:17:47.100
when you need them.

00:17:47.100 --> 00:17:51.030
So we have a good recommendation
about it.

00:17:51.030 --> 00:17:52.530
I'm not going to explain
it here.

00:17:52.530 --> 00:17:56.270
If you want to know more,
there's a good page for it.

00:17:56.270 --> 00:17:59.670
So that's everything we need
to do, authorization.

00:17:59.670 --> 00:18:02.670
Now our client has
a valid access

00:18:02.670 --> 00:18:05.040
token, can send request.

00:18:05.040 --> 00:18:07.710
So what we want to do next
is to insert a file.

00:18:07.710 --> 00:18:12.210
To insert a file, we have to
specify the metadata, such as

00:18:12.210 --> 00:18:16.270
the title, description, and MIME
type, and the contents of

00:18:16.270 --> 00:18:17.640
the file we want to upload.

00:18:17.640 --> 00:18:21.950
So in our case, this
sample hardcodes

00:18:21.950 --> 00:18:23.200
some of those values.

00:18:23.200 --> 00:18:27.660
That's why, for instance, we set
the title to always be My

00:18:27.660 --> 00:18:28.640
Document [? in this ?]

00:18:28.640 --> 00:18:29.380
line.

00:18:29.380 --> 00:18:32.440
That means that wherever a
document is, in Google Drive,

00:18:32.440 --> 00:18:33.930
this is going to be called
My Document.

00:18:33.930 --> 00:18:37.060
Of course, when you write your
real application, you want

00:18:37.060 --> 00:18:40.000
this title to be a more
descriptive one.

00:18:40.000 --> 00:18:43.780
So for instance, you can take
the file name from the file

00:18:43.780 --> 00:18:48.060
you're uploading and using that,
or any other thing that

00:18:48.060 --> 00:18:50.480
makes the file unique.

00:18:50.480 --> 00:18:52.670
Then you can add a description,
which is in our

00:18:52.670 --> 00:18:53.630
case hardcoded.

00:18:53.630 --> 00:18:56.310
But of course, you should
provide a better description.

00:18:56.310 --> 00:18:59.380
And we also specify
a MIME type.

00:18:59.380 --> 00:19:03.000
So this sample application
always uploads text files.

00:19:03.000 --> 00:19:04.610
So we hardcoded that.

00:19:04.610 --> 00:19:09.000
But remember, you might want to
upload images or any other

00:19:09.000 --> 00:19:10.040
kinds of file.

00:19:10.040 --> 00:19:12.330
And in that case, the MIME
type should match

00:19:12.330 --> 00:19:13.705
what your file is.

00:19:13.705 --> 00:19:16.220
ERIC GILMORE: If you're like me,
after you run this sample

00:19:16.220 --> 00:19:18.650
for the first time, you'll go
back, change some of these

00:19:18.650 --> 00:19:20.810
hardcoded values just
to make sure that

00:19:20.810 --> 00:19:21.760
it's actually running.

00:19:21.760 --> 00:19:22.950
CLAUDIO CHERUBINO: OK.

00:19:22.950 --> 00:19:23.290
Yeah.

00:19:23.290 --> 00:19:24.955
ERIC GILMORE: You don't
have to do that.

00:19:24.955 --> 00:19:26.410
CLAUDIO CHERUBINO: You only do
that if you don't trust me,

00:19:26.410 --> 00:19:28.840
and he doesn't.

00:19:28.840 --> 00:19:29.920
ERIC GILMORE: Fortunately,
it worked.

00:19:29.920 --> 00:19:30.990
CLAUDIO CHERUBINO: Yeah.

00:19:30.990 --> 00:19:32.260
Whoa.

00:19:32.260 --> 00:19:36.650
So I said we need metadata,
but we also need the file

00:19:36.650 --> 00:19:41.360
content, which is the string,
hi, I'm a test document.

00:19:41.360 --> 00:19:44.810
And we do that by using a PHP
method, file_get_contents,

00:19:44.810 --> 00:19:49.120
which reads a document,
a file, into a string.

00:19:49.120 --> 00:19:52.210
So data will contain all
our content, whatever

00:19:52.210 --> 00:19:53.280
that content is.

00:19:53.280 --> 00:19:57.830
And then we actually send a
request, which is a one line.

00:19:57.830 --> 00:20:01.370
We have this service class,
which is a Drive service.

00:20:01.370 --> 00:20:04.390
It has a list of resources,
including Files,

00:20:04.390 --> 00:20:05.720
which is what we want.

00:20:05.720 --> 00:20:07.890
And for each resource,
we have methods.

00:20:07.890 --> 00:20:10.850
And for instance, Files has
Insert, which is used to

00:20:10.850 --> 00:20:11.890
create a new file.

00:20:11.890 --> 00:20:16.030
And to insert, you pass the
file, which is the metadata we

00:20:16.030 --> 00:20:19.425
just created, and the rest of
the data, such as the content

00:20:19.425 --> 00:20:21.240
and the MIME type.

00:20:21.240 --> 00:20:21.870
That's it.

00:20:21.870 --> 00:20:25.860
When you send that request, the
variable created file will

00:20:25.860 --> 00:20:31.330
contain the response from the
API, which is an object or

00:20:31.330 --> 00:20:33.460
adjacent structure,
in our case.

00:20:33.460 --> 00:20:38.740
And as you remember, we just
dumped this content to the

00:20:38.740 --> 00:20:39.730
command line.

00:20:39.730 --> 00:20:41.750
And that's what the
last line does.

00:20:41.750 --> 00:20:43.590
Easy, isn't it?

00:20:43.590 --> 00:20:49.030
And with that, we can go back
to the Docs, and see that we

00:20:49.030 --> 00:20:51.280
will have done step three
and step four.

00:20:51.280 --> 00:20:54.490
So set up the sample
and ran the sample.

00:20:54.490 --> 00:20:58.760
All it takes now is you
to make this better.

00:20:58.760 --> 00:21:00.890
So the sample works.

00:21:00.890 --> 00:21:02.050
It uploads a file.

00:21:02.050 --> 00:21:04.790
But there might be other
things you want to do.

00:21:04.790 --> 00:21:05.225
For instance?

00:21:05.225 --> 00:21:07.690
ERIC GILMORE: Oh, you might
want to list files.

00:21:07.690 --> 00:21:09.630
CLAUDIO CHERUBINO: List
files, for instance.

00:21:09.630 --> 00:21:11.110
If you want to do that,
it's very easy.

00:21:11.110 --> 00:21:12.740
I'm not going to do it now.

00:21:12.740 --> 00:21:17.110
But remember, you had a call
Service, Files, Insert.

00:21:17.110 --> 00:21:20.190
There is another call, which
is Service, Files, List.

00:21:20.190 --> 00:21:22.910
Or if you want to get a specific
file, you have

00:21:22.910 --> 00:21:25.560
Service, Files, Get,
and so on.

00:21:25.560 --> 00:21:30.700
All of the other requests you
can do are documented in our

00:21:30.700 --> 00:21:32.140
reference guide.

00:21:32.140 --> 00:21:34.980
So you can see that you can
manage files, you can manage

00:21:34.980 --> 00:21:38.040
permissions, you can manage
revisions, and so on.

00:21:38.040 --> 00:21:41.040
But probably one of the other
things you might want to do is

00:21:41.040 --> 00:21:42.830
build a web application.

00:21:42.830 --> 00:21:47.450
And perhaps integrate your
application with the Drive UI.

00:21:47.450 --> 00:21:52.590
So the users can click on a file
from Drive and land at

00:21:52.590 --> 00:21:53.710
your application.

00:21:53.710 --> 00:21:55.330
All of this is supported.

00:21:55.330 --> 00:21:57.850
And all of this can be done
with the Drive SDK.

00:21:57.850 --> 00:22:00.330
We have documentation for it.

00:22:00.330 --> 00:22:04.070
And if you start from this
Quickstart page, at the end,

00:22:04.070 --> 00:22:06.570
you will see links to all these
things we mentioned.

00:22:06.570 --> 00:22:08.760
So that you can go directly
there and make your

00:22:08.760 --> 00:22:09.670
application better.

00:22:09.670 --> 00:22:10.260
ERIC GILMORE: Sure.

00:22:10.260 --> 00:22:12.230
And if you've got a lot of
energy and courage, you could

00:22:12.230 --> 00:22:15.220
also go and review the
authorization documentation.

00:22:15.220 --> 00:22:18.040
I'm not going to lie and tell
you that it's easy, but it is

00:22:18.040 --> 00:22:18.700
interesting.

00:22:18.700 --> 00:22:20.660
And we have a link
to that, as well.

00:22:20.660 --> 00:22:24.450
CLAUDIO CHERUBINO: Definitely,
it is not the easiest part.

00:22:24.450 --> 00:22:28.820
But because it has to be
secure, so we have to--

00:22:28.820 --> 00:22:30.060
this is a security standard.

00:22:30.060 --> 00:22:31.860
OAuth is a standard.

00:22:31.860 --> 00:22:33.795
We have to make sure that, of
course, your credentials are

00:22:33.795 --> 00:22:36.300
not stolen, that you are who you
are, and you're allowed to

00:22:36.300 --> 00:22:37.790
do what you want to do.

00:22:37.790 --> 00:22:41.960
The good thing is that the
libraries do all the heavy

00:22:41.960 --> 00:22:42.920
lifting for you.

00:22:42.920 --> 00:22:49.480
So I don't really have to know
how the auth flow works if I

00:22:49.480 --> 00:22:50.090
use the library.

00:22:50.090 --> 00:22:54.200
As you've seen, I have a couple
of instructions to run,

00:22:54.200 --> 00:22:55.921
and that's it.

00:22:55.921 --> 00:22:58.110
So it is definitely interesting
to know.

00:22:58.110 --> 00:23:01.870
And you should know about OAuth
to handle all the edge

00:23:01.870 --> 00:23:05.070
cases, all the special
cases, and so on.

00:23:05.070 --> 00:23:09.910
But to get started-- you
can start without that.

00:23:09.910 --> 00:23:13.070
Before we wrap up, I
will just say that

00:23:13.070 --> 00:23:15.120
this is a first sample.

00:23:15.120 --> 00:23:19.000
But we have more complex
samples in our Docs.

00:23:19.000 --> 00:23:22.530
So this page allows you to get
started in five minutes.

00:23:22.530 --> 00:23:26.110
But if you want to write a real
web application that does

00:23:26.110 --> 00:23:30.920
a lot more, we have a section
on example application.

00:23:30.920 --> 00:23:34.090
Those are complete sample
applications in

00:23:34.090 --> 00:23:35.240
the same file languages.

00:23:35.240 --> 00:23:38.410
So we have Java, Python,
PHP, .NET, and Ruby.

00:23:38.410 --> 00:23:43.690
And these applications show how
you can build a complete

00:23:43.690 --> 00:23:46.360
web app that integrates with
the Drive UI that manages

00:23:46.360 --> 00:23:48.740
authentication and all the
edge cases, and basically

00:23:48.740 --> 00:23:49.190
everything.

00:23:49.190 --> 00:23:51.190
So let's say you want to do
PHP, because today we're

00:23:51.190 --> 00:23:52.680
talking about PHP.

00:23:52.680 --> 00:23:55.420
We have this application
called DrEdit--

00:23:55.420 --> 00:23:58.030
or "Dred-it," we still
haven't decided--

00:23:58.030 --> 00:24:02.660
which is a text editor
for Google Drive.

00:24:02.660 --> 00:24:04.660
Obviously, it's a
longer document.

00:24:04.660 --> 00:24:06.490
There are more steps
to get started.

00:24:06.490 --> 00:24:09.430
But you can learn about
it step by step.

00:24:09.430 --> 00:24:12.080
And you can also download the
source so that you can try it

00:24:12.080 --> 00:24:13.660
on your computer.

00:24:13.660 --> 00:24:15.570
I would definitely recommend
you to check this out.

00:24:15.570 --> 00:24:16.640
ERIC GILMORE: Absolutely.

00:24:16.640 --> 00:24:17.390
CLAUDIO CHERUBINO: Cool.

00:24:17.390 --> 00:24:21.160
And with that, I think we should
wrap up for today.

00:24:21.160 --> 00:24:22.460
I hope this was useful.

00:24:22.460 --> 00:24:25.520
And if you have questions,
please reach out to us as soon

00:24:25.520 --> 00:24:26.260
as possible.

00:24:26.260 --> 00:24:28.520
ERIC GILMORE: Just to remind
you, the feedback link in the

00:24:28.520 --> 00:24:31.560
documentation should get you a
quick response to anything

00:24:31.560 --> 00:24:33.320
that you find in the
documentation that you'd like

00:24:33.320 --> 00:24:34.560
to comment on.

00:24:34.560 --> 00:24:37.480
And Stack Overflow is constantly
monitored by our

00:24:37.480 --> 00:24:38.180
engineers, as well.

00:24:38.180 --> 00:24:39.160
CLAUDIO CHERUBINO: Cool.

00:24:39.160 --> 00:24:39.880
Perfect.

00:24:39.880 --> 00:24:41.646
Thank you, and see
you next time.

