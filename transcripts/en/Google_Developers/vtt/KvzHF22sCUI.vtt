WEBVTT
Kind: captions
Language: en

00:00:10.720 --> 00:00:11.350
PETE FRISELLA: Welcome.

00:00:11.350 --> 00:00:12.630
My name's Pete Frisella.

00:00:12.630 --> 00:00:15.040
I'm a developer advocate on
the Google Analytics team.

00:00:15.040 --> 00:00:16.490
And thanks for coming, Nick.

00:00:16.490 --> 00:00:18.940
So today we're going to talk a
little bit about the Google

00:00:18.940 --> 00:00:22.600
Analytics metadata API, how to
use the meta data API, what

00:00:22.600 --> 00:00:25.240
does it mean for you in terms of
development and maybe some

00:00:25.240 --> 00:00:26.910
products that you might
be working on.

00:00:26.910 --> 00:00:28.630
And then we'll talk a little bit
with this new thing, which

00:00:28.630 --> 00:00:30.080
is the data deprecation
[INAUDIBLE].

00:00:30.080 --> 00:00:31.550
NICK MIHAILOVSKI: The metrics
represent the numbers and

00:00:31.550 --> 00:00:32.810
numerical values.

00:00:32.810 --> 00:00:35.310
And the dimensions represent the
strings or text that break

00:00:35.310 --> 00:00:38.590
down the metrics on various
criteria, for example, the

00:00:38.590 --> 00:00:41.390
source and media.

00:00:41.390 --> 00:00:44.640
So the big question for
developers is what are the

00:00:44.640 --> 00:00:48.290
dimensions and metrics that are
available that you can use

00:00:48.290 --> 00:00:51.870
in the reporting APIs to
query for your data.

00:00:51.870 --> 00:00:54.100
Now, take for example what we
have, a tool here's a query

00:00:54.100 --> 00:00:55.370
explore what we build.

00:00:55.370 --> 00:00:58.220
In the query explorer, we allow
users to build different

00:00:58.220 --> 00:01:00.660
queries to query our API and get
that reporting data that

00:01:00.660 --> 00:01:02.070
we showed earlier.

00:01:02.070 --> 00:01:04.450
In the query explorer, we have a
section for people to select

00:01:04.450 --> 00:01:06.930
dimensions, for them
to select metrics.

00:01:06.930 --> 00:01:09.050
When they select them, we show
groups, all the different

00:01:09.050 --> 00:01:09.850
dimensions and metrics.

00:01:09.850 --> 00:01:12.260
We even show descriptions.

00:01:12.260 --> 00:01:14.040
Now, we built this tool because
we know the product

00:01:14.040 --> 00:01:15.770
and we work on the
product team.

00:01:15.770 --> 00:01:18.670
But for developers building
interfaces like this in their

00:01:18.670 --> 00:01:21.390
own product, it can be very
difficult to stay on top of

00:01:21.390 --> 00:01:22.550
all this data.

00:01:22.550 --> 00:01:25.010
And so what we did is we
packaged all this data and we

00:01:25.010 --> 00:01:27.900
released it in what we call
the Metadata API.

00:01:27.900 --> 00:01:31.080
Wit the Metadata API, you have
access to all this data

00:01:31.080 --> 00:01:32.510
programmatically.

00:01:32.510 --> 00:01:32.980
PETE FRISELLA: Great.

00:01:32.980 --> 00:01:35.820
So let's just take a look
at what this looks like.

00:01:35.820 --> 00:01:38.620
And this is an actual response
back from the Metadata API.

00:01:38.620 --> 00:01:41.390
So we have a new endpoint
under Metadata.

00:01:41.390 --> 00:01:43.590
And then when you provide a
report type and then the

00:01:43.590 --> 00:01:44.550
resource is called column.

00:01:44.550 --> 00:01:47.140
So when you actually
visit that URL--

00:01:47.140 --> 00:01:49.060
let's back up.

00:01:49.060 --> 00:01:49.985
You'll see the actual
response.

00:01:49.985 --> 00:01:51.600
This is coming directly
from the server.

00:01:51.600 --> 00:01:52.280
So we have all this--

00:01:52.280 --> 00:01:52.880
NICK MIHAILOVSKI: So
this is a live--

00:01:52.880 --> 00:01:53.320
PETE FRISELLA: This is live.

00:01:53.320 --> 00:01:53.950
This just came--

00:01:53.950 --> 00:01:54.400
NICK MIHAILOVSKI: Oh, wow.

00:01:54.400 --> 00:01:55.870
Wow, that was really fast.

00:01:55.870 --> 00:01:56.350
PETE FRISELLA: Yeah.

00:01:56.350 --> 00:01:56.900
So it comes back.

00:01:56.900 --> 00:01:58.250
And we get all this
great information

00:01:58.250 --> 00:01:58.910
that you just described.

00:01:58.910 --> 00:02:00.766
It's the stuff that you need
to kind of build these

00:02:00.766 --> 00:02:03.560
[INAUDIBLE]

00:02:03.560 --> 00:02:06.990
API or other Google reporting
APIs is the ID.

00:02:06.990 --> 00:02:08.400
This is kind of the important
part of this.

00:02:08.400 --> 00:02:10.860
And it represents the entire
dimension or metric.

00:02:10.860 --> 00:02:13.550
That's the name you actually
use when you query for the

00:02:13.550 --> 00:02:15.390
reporting data.

00:02:15.390 --> 00:02:17.780
So in this example we have
average time on site.

00:02:17.780 --> 00:02:19.080
That's the ID.

00:02:19.080 --> 00:02:21.090
And that's the kind of
information you get back.

00:02:21.090 --> 00:02:23.620
The other thing is that we've
provided all these lists of

00:02:23.620 --> 00:02:26.474
attributes that makes sense to
have when you're trying to

00:02:26.474 --> 00:02:26.970
build a UI.

00:02:26.970 --> 00:02:29.090
That's just stuff that you're
going need to know.

00:02:29.090 --> 00:02:30.690
And we can kind of group these
into different areas.

00:02:30.690 --> 00:02:33.480
And the first area that we want
to talk about is the type

00:02:33.480 --> 00:02:34.080
attributes.

00:02:34.080 --> 00:02:35.780
There's two of them here.

00:02:35.780 --> 00:02:37.290
And they provide two pieces
of information that

00:02:37.290 --> 00:02:38.320
are obviously essential.

00:02:38.320 --> 00:02:41.200
One is is this a dimension or
metric, which is the type

00:02:41.200 --> 00:02:42.690
attribute that identifies
that.

00:02:42.690 --> 00:02:44.660
And then we have
the data type.

00:02:44.660 --> 00:02:46.960
And this lets you know, for this
particular dimension or

00:02:46.960 --> 00:02:49.720
metric, what is the data value
that's being returned.

00:02:49.720 --> 00:02:50.430
Is it time?

00:02:50.430 --> 00:02:51.430
Is it maybe a percent?

00:02:51.430 --> 00:02:52.800
Is it a float integer?

00:02:52.800 --> 00:02:53.970
NICK MIHAILOVSKI: So these are
things like formatting.

00:02:53.970 --> 00:02:54.370
PETE FRISELLA: Exactly.

00:02:54.370 --> 00:02:56.870
So you kind of understand what
the format of that value is.

00:02:56.870 --> 00:02:58.490
Because when you look at JSON
response, these are all

00:02:58.490 --> 00:02:59.910
basically strings.

00:02:59.910 --> 00:03:01.780
And this tells you the
actual data type.

00:03:04.470 --> 00:03:07.020
The next thing is that we
provide kind of these--

00:03:07.020 --> 00:03:10.270
we can just think of as a
description or UI attributes.

00:03:10.270 --> 00:03:12.710
So you'll notice that we
have these groupings

00:03:12.710 --> 00:03:13.730
available for you.

00:03:13.730 --> 00:03:14.540
And this is stuff
that we provide.

00:03:14.540 --> 00:03:16.600
The Google Analytics team has
kind of grouped these

00:03:16.600 --> 00:03:19.880
different dimensions and metrics
into kind of similar

00:03:19.880 --> 00:03:21.330
groupings that will be
helpful when you're

00:03:21.330 --> 00:03:23.450
building a UI, for example.

00:03:23.450 --> 00:03:24.700
So this is that you can
use it or not use it.

00:03:24.700 --> 00:03:28.310
But it's helpful in
that situation.

00:03:28.310 --> 00:03:31.090
So every dimension or metric
is going to have this group

00:03:31.090 --> 00:03:33.430
attribute just to help
you with that.

00:03:33.430 --> 00:03:35.720
And then we also have things
like the UI name

00:03:35.720 --> 00:03:37.200
and the app UI name.

00:03:37.200 --> 00:03:41.100
So depending on whether you set
up a web property or an

00:03:41.100 --> 00:03:44.340
app properly or profile, there
is certain dimensions and

00:03:44.340 --> 00:03:46.150
metrics that have different
names depending

00:03:46.150 --> 00:03:47.760
of it's app or web.

00:03:47.760 --> 00:03:51.160
And if there is a particular
name for an app UI then we'll

00:03:51.160 --> 00:03:54.420
provide this extra attribute
as part of the response for

00:03:54.420 --> 00:03:56.640
that particular dimension
or metric.

00:03:56.640 --> 00:03:59.710
So you want to check that when
you're using the Metadata API.

00:03:59.710 --> 00:04:01.380
You want to check the response
to see if that exists for that

00:04:01.380 --> 00:04:03.050
particular dimension or metric
and use that depending on

00:04:03.050 --> 00:04:06.960
whether you're building an
app or web interface.

00:04:06.960 --> 00:04:08.230
Then we provide description,
which just you a little

00:04:08.230 --> 00:04:10.550
description of what the actual
dimension or metric is.

00:04:10.550 --> 00:04:11.360
And then we provide this

00:04:11.360 --> 00:04:13.400
additional calculation attribute.

00:04:13.400 --> 00:04:15.600
Again, this provides more
information around if it is a

00:04:15.600 --> 00:04:18.019
calculated metric, there's
a few that

00:04:18.019 --> 00:04:19.740
are calculated metrics.

00:04:19.740 --> 00:04:22.910
This will show you the actual
dimensions and other metrics

00:04:22.910 --> 00:04:26.420
that we use to actually come
with that calculation.

00:04:26.420 --> 00:04:28.720
So these are all very helpful
building out your UI's just as

00:04:28.720 --> 00:04:29.970
you described.

00:04:31.970 --> 00:04:34.785
The other things that we have,
there is particular dimensions

00:04:34.785 --> 00:04:37.050
and metrics that have these
repeated values.

00:04:37.050 --> 00:04:39.170
So if you have, like,
a numeric index--

00:04:39.170 --> 00:04:40.720
so something, for example,
we have custom

00:04:40.720 --> 00:04:42.070
dimensions and metrics.

00:04:42.070 --> 00:04:45.210
You'll notice they have these
double x's as part of the ID.

00:04:45.210 --> 00:04:47.960
And what that means is that
there's a particular range for

00:04:47.960 --> 00:04:50.120
that dimension or metric.

00:04:50.120 --> 00:04:53.660
So we provide these attributes
that give you the boundary or

00:04:53.660 --> 00:04:56.090
the range that is valid
for this particular

00:04:56.090 --> 00:04:57.620
dimension or metric.

00:04:57.620 --> 00:05:00.010
And this helps you understand
either for validation purposes

00:05:00.010 --> 00:05:02.150
or if you want to build out a
list of dimensions and metrics

00:05:02.150 --> 00:05:04.740
that are valid for a particular
repeated value.

00:05:04.740 --> 00:05:07.325
This will provide the
values that you

00:05:07.325 --> 00:05:10.260
need to know for that.

00:05:10.260 --> 00:05:13.120
And then, finally, we have some
attributes that you can

00:05:13.120 --> 00:05:15.630
think of as helping in
terms of validation.

00:05:15.630 --> 00:05:18.550
So we have an allow it in
segments attribute.

00:05:18.550 --> 00:05:21.250
And this just helps you identify
whether a particular

00:05:21.250 --> 00:05:25.950
dimension can be used in a
reporting query as a segment.

00:05:25.950 --> 00:05:28.880
And if it is allowed then this
attribute will exist.

00:05:28.880 --> 00:05:30.060
If not, it will not exist.

00:05:30.060 --> 00:05:32.740
And, again, this is helpful for
validation and making sure

00:05:32.740 --> 00:05:38.150
you're building queries out
that will work properly.

00:05:38.150 --> 00:05:41.050
So it's a whole bunch of great
stuff in terms of the data

00:05:41.050 --> 00:05:41.580
that we provide.

00:05:41.580 --> 00:05:44.250
It gives you, I think, pretty
much, like, a good coverage on

00:05:44.250 --> 00:05:46.252
all the stuff that you're going
to need to build out to

00:05:46.252 --> 00:05:46.960
build an API.

00:05:46.960 --> 00:05:48.100
The final thing that we're going
to talk about here in

00:05:48.100 --> 00:05:51.200
terms of attributes is
this the ETag value.

00:05:51.200 --> 00:05:53.890
So you'll notice when you make a
request through the Metadata

00:05:53.890 --> 00:05:55.240
API, you'll get a response
back and

00:05:55.240 --> 00:05:56.940
it'll be in Etag attribute.

00:05:56.940 --> 00:06:00.470
And what this is is a unique
identifier that you can use to

00:06:00.470 --> 00:06:02.900
determine whether the response
has changed since the last

00:06:02.900 --> 00:06:04.780
time that you requested it.

00:06:04.780 --> 00:06:07.760
So if you make the response and
you cache out the client

00:06:07.760 --> 00:06:11.680
side or server side, and you
make another request later on,

00:06:11.680 --> 00:06:14.680
if that value matches, the value
have stored, the Etag

00:06:14.680 --> 00:06:16.320
value, that means the response
has not changed.

00:06:16.320 --> 00:06:18.090
And this is helpful
for a few reasons.

00:06:18.090 --> 00:06:22.640
One is if you've maybe got a
response and build out a UI,

00:06:22.640 --> 00:06:24.430
you can use the Etag to
determine if you need to

00:06:24.430 --> 00:06:25.480
update that UI.

00:06:25.480 --> 00:06:27.197
Because if the value hasn't
changed then there's no point

00:06:27.197 --> 00:06:28.720
in updating your UI because
nothing's changed since the

00:06:28.720 --> 00:06:30.110
last time you requested it.

00:06:30.110 --> 00:06:32.595
Another way you can use it is
when you make your request to

00:06:32.595 --> 00:06:35.790
the Google Analytic servers, to
the Metadata API, you can

00:06:35.790 --> 00:06:38.850
actually include this Etag value
as part of the headers.

00:06:38.850 --> 00:06:41.850
And then the response you get
back will depend on whether

00:06:41.850 --> 00:06:44.530
the value you provided is the
same as what already exists on

00:06:44.530 --> 00:06:45.900
the server or it doesn't.

00:06:45.900 --> 00:06:48.140
So if you send the Etag value
and it's the same, we'll

00:06:48.140 --> 00:06:50.890
respond back with a 304
response, which is a not

00:06:50.890 --> 00:06:51.780
modified response.

00:06:51.780 --> 00:06:54.150
And then you'll know that
there's no changes.

00:06:54.150 --> 00:06:58.170
If you provide the value and it
responds back at 200 then

00:06:58.170 --> 00:06:59.100
that means there's a new
response and you have to

00:06:59.100 --> 00:07:00.890
update what you have
on your server side

00:07:00.890 --> 00:07:01.970
or your client side.

00:07:01.970 --> 00:07:03.550
So it's really helpful
saving quota.

00:07:03.550 --> 00:07:05.520
And this is really probably
useful for mobile because you

00:07:05.520 --> 00:07:06.930
don't want to be sending
a lot of data back

00:07:06.930 --> 00:07:08.390
and forth on mobile.

00:07:08.390 --> 00:07:10.310
And actually when you make the
request to the Metadata API,

00:07:10.310 --> 00:07:13.500
you can specify a fields
parameter and specify just to

00:07:13.500 --> 00:07:15.770
request the Etag value
if you'd like.

00:07:15.770 --> 00:07:17.960
So it's really useful for
caching and making efficient

00:07:17.960 --> 00:07:20.177
use of the API and quota.

00:07:23.040 --> 00:07:23.850
So let's talk a little
bit about the

00:07:23.850 --> 00:07:24.760
data deprecation policy.

00:07:24.760 --> 00:07:25.360
This is new, right?

00:07:25.360 --> 00:07:26.480
We introduced this?

00:07:26.480 --> 00:07:26.720
NICK MIHAILOVSKI: Yes.

00:07:26.720 --> 00:07:28.770
One other thing that we're
introducing with the Metadata

00:07:28.770 --> 00:07:31.950
API is a new data deprecation
policy.

00:07:31.950 --> 00:07:35.900
And this covers how we add and
change data within Google

00:07:35.900 --> 00:07:37.560
Analytics reporting APIs.

00:07:37.560 --> 00:07:40.430
So when we add new data,
we'll announce it

00:07:40.430 --> 00:07:41.750
through the change log.

00:07:41.750 --> 00:07:44.490
And then the data will
automatically appear through

00:07:44.490 --> 00:07:45.400
the Metadata API.

00:07:45.400 --> 00:07:48.280
So if you're actually building
any products using this API,

00:07:48.280 --> 00:07:51.310
they'll automatically be
updated, which is fantastic.

00:07:51.310 --> 00:07:54.550
The second thing is when we
decide to remove data-- in the

00:07:54.550 --> 00:07:58.160
past we would announce it, but
there was nothing formal.

00:07:58.160 --> 00:08:00.730
So today we're formalizing
it with this API.

00:08:00.730 --> 00:08:04.200
When we announce a deprecation
of data, what we'll do is

00:08:04.200 --> 00:08:06.810
we'll actually messes
the change logs.

00:08:06.810 --> 00:08:10.830
And then it will be available
for a minimum of six months,

00:08:10.830 --> 00:08:12.500
after which we'll remove it.

00:08:12.500 --> 00:08:15.390
And what we're doing is to
message user interfaces, to

00:08:15.390 --> 00:08:17.630
keep them updated, where it's
actually a new status

00:08:17.630 --> 00:08:19.820
parameter that we'll set
to deprecate it.

00:08:19.820 --> 00:08:20.960
By default, it's public.

00:08:20.960 --> 00:08:23.830
And so once it's deprecated, you
can actually update your

00:08:23.830 --> 00:08:25.950
interfaces to start
changing them.

00:08:25.950 --> 00:08:28.070
And then finally in the cases
where we want to replace,

00:08:28.070 --> 00:08:29.910
sometimes we'll rename a
different dimension and

00:08:29.910 --> 00:08:32.320
metric, this will also go
through deprecation.

00:08:32.320 --> 00:08:34.690
We'll announce the change
on a change log.

00:08:34.690 --> 00:08:39.990
The old name will be available
for a minimum of six months.

00:08:39.990 --> 00:08:42.789
But we'll also introduce a brand
new parameter that's

00:08:42.789 --> 00:08:44.460
called the replaced
by parameter.

00:08:44.460 --> 00:08:47.590
And it actually returns an ID
that points to a different

00:08:47.590 --> 00:08:50.700
entity that's the replacement,
a different dimension or

00:08:50.700 --> 00:08:52.870
metric that's the replacement
for the one that's being

00:08:52.870 --> 00:08:53.830
deprecated.

00:08:53.830 --> 00:08:57.130
So what's great about it is now,
with the Metadata API,

00:08:57.130 --> 00:08:59.340
for products that have
integrated with it, they

00:08:59.340 --> 00:09:01.480
completely can be compliant
with all our deprecation

00:09:01.480 --> 00:09:04.420
policies without having to
push new releases to

00:09:04.420 --> 00:09:05.240
production.

00:09:05.240 --> 00:09:07.520
So let's take a look at some
of these attributes.

00:09:07.520 --> 00:09:09.334
PETE FRISELLA: Yeah, see
how it manifests

00:09:09.334 --> 00:09:10.670
in the actual response.

00:09:10.670 --> 00:09:13.350
So you'll see that there's a few
different attributes here

00:09:13.350 --> 00:09:17.020
that Nick mentioned, which
was the status.

00:09:17.020 --> 00:09:18.910
So when this gets deprecated,
this will change from public

00:09:18.910 --> 00:09:19.430
to deprecated.

00:09:19.430 --> 00:09:22.050
And you should always be
checking for this value to

00:09:22.050 --> 00:09:24.630
make sure that the dimensions
and metrics you're using are

00:09:24.630 --> 00:09:27.700
still valid and can be
used in a query.

00:09:27.700 --> 00:09:29.400
And if it does change to
deprecated then you definitely

00:09:29.400 --> 00:09:31.590
want to be checking to see if
it's been replaced, maybe buy

00:09:31.590 --> 00:09:32.920
a different ID.

00:09:32.920 --> 00:09:35.010
And if that's the case then
we'll also include this

00:09:35.010 --> 00:09:39.210
replaced by attribute, which
then points the ID of

00:09:39.210 --> 00:09:41.500
obviously the dimension or
metric that's replacing this

00:09:41.500 --> 00:09:42.180
particular one.

00:09:42.180 --> 00:09:42.620
NICK MIHAILOVSKI: Yeah.

00:09:42.620 --> 00:09:45.250
And I think the good thing about
this is that many people

00:09:45.250 --> 00:09:48.600
will build save reports within
their products and interfaces.

00:09:48.600 --> 00:09:50.955
So if you do see something
that's deprecated, you will

00:09:50.955 --> 00:09:54.710
want to make sure you go back
and update or warn your users

00:09:54.710 --> 00:09:57.380
that either the queries will
stop working in the future or

00:09:57.380 --> 00:09:59.770
just go ahead and update them
with the replaced by so that

00:09:59.770 --> 00:10:01.780
way they don't see any
disruption of service.

00:10:01.780 --> 00:10:01.890
PETE FRISELLA: Yeah.

00:10:01.890 --> 00:10:04.030
And if you don't do this,
ultimately at some point it'll

00:10:04.030 --> 00:10:06.880
be removed and you'll get a
bad request response back.

00:10:06.880 --> 00:10:07.040
NICK MIHAILOVSKI: Yeah.

00:10:07.040 --> 00:10:08.090
And it'll be a bad user
experience as well.

00:10:08.090 --> 00:10:10.440
PETE FRISELLA: Yes, exactly.

00:10:10.440 --> 00:10:12.670
OK, great.

00:10:12.670 --> 00:10:13.450
So we covered a lot.

00:10:13.450 --> 00:10:17.400
But it's a very simple but
powerful API, I think.

00:10:17.400 --> 00:10:21.250
So it's really easy to use and
it's really powerful in terms

00:10:21.250 --> 00:10:22.860
of what you can do in the
UI and stuff like that.

00:10:22.860 --> 00:10:24.800
We do have a lot of resources
available if you'd like to

00:10:24.800 --> 00:10:26.880
learn more about this API
and how to use it.

00:10:26.880 --> 00:10:30.240
We provide some code snippets
and examples on our developer

00:10:30.240 --> 00:10:31.340
site as per usual.

00:10:31.340 --> 00:10:34.320
And, again, if you're going to
use it, register in the APIs

00:10:34.320 --> 00:10:35.600
console and get an
API key that you

00:10:35.600 --> 00:10:36.450
can throw it together.

00:10:36.450 --> 00:10:39.620
And then we have a new data
deprecation policy that we

00:10:39.620 --> 00:10:40.870
encourage you to read
and review.

00:10:40.870 --> 00:10:42.190
So if you're building
applications, you'll

00:10:42.190 --> 00:10:44.606
understand how things will
be changed in the future.

00:10:44.606 --> 00:10:45.920
So that's it for today.

00:10:45.920 --> 00:10:47.440
We wanted to keep it
short and simple.

00:10:47.440 --> 00:10:50.410
And we want to thank you
for joining us again.

00:10:50.410 --> 00:10:51.560
And we hope to see
you next time.

00:10:51.560 --> 00:10:54.430
Thank you very much.

