WEBVTT
Kind: captions
Language: en

00:00:10.440 --> 00:00:11.530
Hello everyone.

00:00:11.530 --> 00:00:13.510
Welcome back to Google Live.

00:00:13.510 --> 00:00:16.430
I'm Claudio and I'm one of the
engineers in the Google Drive

00:00:16.430 --> 00:00:17.970
Developer Relations team.

00:00:17.970 --> 00:00:21.450
And today I'm very excited to
talk about the Google Drive

00:00:21.450 --> 00:00:22.660
Realtime API.

00:00:22.660 --> 00:00:26.740
We announced this API on
Tuesday, so a few days ago.

00:00:26.740 --> 00:00:31.490
And we already covered it on our
previous GDL, with Steve

00:00:31.490 --> 00:00:34.580
[? Basil ?], My colleague,
talking about what you can do

00:00:34.580 --> 00:00:37.070
with the Google Drive
Realtime API.

00:00:37.070 --> 00:00:40.640
We're going to have more
sessions about these exciting

00:00:40.640 --> 00:00:41.720
new features.

00:00:41.720 --> 00:00:47.520
But today what I'm going to show
you is how to build your

00:00:47.520 --> 00:00:52.380
first application that uses
the Drive Realtime API.

00:00:52.380 --> 00:00:55.670
I will basically follow the
instructions in the Quick

00:00:55.670 --> 00:00:57.330
Start Guide in the
documentation.

00:00:57.330 --> 00:01:01.790
So this can be used in addition
to the documentation

00:01:01.790 --> 00:01:04.120
if you think that anything
is not clear.

00:01:04.120 --> 00:01:08.840
I hope I will make it better
and clear now.

00:01:08.840 --> 00:01:11.760
So if we want to start
using the Google

00:01:11.760 --> 00:01:13.290
Drive Realtime API--

00:01:13.290 --> 00:01:19.080
which let me just remind you
that this will let you have

00:01:19.080 --> 00:01:24.320
collaboration features in your
application as we do in our

00:01:24.320 --> 00:01:25.270
web editors.

00:01:25.270 --> 00:01:28.550
So if you go to Google Docs
and edit a document and

00:01:28.550 --> 00:01:31.430
someone else edits the same
document, you will see the

00:01:31.430 --> 00:01:34.500
changes from the other
guy and he will see

00:01:34.500 --> 00:01:35.850
yours in real time.

00:01:35.850 --> 00:01:38.330
This is what you can
now add to your

00:01:38.330 --> 00:01:40.180
application using this API.

00:01:40.180 --> 00:01:44.240
So if you want to start using
the Google Drive Realtime API

00:01:44.240 --> 00:01:47.290
the documentation, with the
samples, and the reference

00:01:47.290 --> 00:01:48.640
guide, and everything
you need--

00:01:48.640 --> 00:01:51.440
and this video is going
to be there as well--

00:01:51.440 --> 00:01:55.800
is at developers.googl
e.com/drive/realtime, which is

00:01:55.800 --> 00:01:59.330
the page that I have open
in front of me.

00:01:59.330 --> 00:02:02.760
So if you can look at my screen,
this is the landing

00:02:02.760 --> 00:02:05.310
page for the Realtime API.

00:02:05.310 --> 00:02:07.660
And it's pretty simple.

00:02:07.660 --> 00:02:11.170
There are just a few links here,
so it should be easy to

00:02:11.170 --> 00:02:12.460
know where to go.

00:02:12.460 --> 00:02:18.220
What I'm going to do now is to
try the Realtime Quick Start.

00:02:18.220 --> 00:02:20.520
Of course with the Quick Start
it will build your first

00:02:20.520 --> 00:02:22.970
[INAUDIBLE], this will
be very quick.

00:02:22.970 --> 00:02:26.310
But then to make it a proper app
with a lot of features you

00:02:26.310 --> 00:02:28.670
will have to go back to the
Developer's Guide, and maybe

00:02:28.670 --> 00:02:31.810
use the other tools we have,
such as the Realtime API

00:02:31.810 --> 00:02:35.710
Playground, and test all the
other features we have.

00:02:35.710 --> 00:02:39.710
So if you click on the Realtime
Quick Start link,

00:02:39.710 --> 00:02:42.790
this will take you to another
page which is a

00:02:42.790 --> 00:02:44.880
step-by-step guide.

00:02:44.880 --> 00:02:48.880
There's actually three steps,
configuration, writing the

00:02:48.880 --> 00:02:51.090
code, and running the sample.

00:02:51.090 --> 00:02:53.320
So not much is needed.

00:02:53.320 --> 00:02:56.960
This is probably one of the
fastest Quick Starts we have.

00:02:56.960 --> 00:03:01.670
And at the end of this we will
have a simple web application

00:03:01.670 --> 00:03:05.550
written in JavaScript
with two text boxes.

00:03:05.550 --> 00:03:10.430
And these two textbooks will
be synchronized with the

00:03:10.430 --> 00:03:11.300
Realtime API.

00:03:11.300 --> 00:03:14.030
So whenever you change the
content of one you will see

00:03:14.030 --> 00:03:18.630
the same changes reflected
in the second one.

00:03:18.630 --> 00:03:22.540
If we follow this Quick Start
guide, we'll see that first

00:03:22.540 --> 00:03:26.350
step is to activate
the Drive API.

00:03:26.350 --> 00:03:32.520
This is a standard first step
for any application you want

00:03:32.520 --> 00:03:36.190
to write that uses Drive API.

00:03:36.190 --> 00:03:40.890
To enable the use of the Drive
API, you have to go to the

00:03:40.890 --> 00:03:44.430
API's console and enable
Drive API.

00:03:44.430 --> 00:03:45.800
Let's do it together.

00:03:45.800 --> 00:03:48.560
So I have the Google
API's console here.

00:03:48.560 --> 00:03:52.700
I don't have any other projects
created, so as soon I

00:03:52.700 --> 00:03:56.550
they go there the first thing
I see is a big, blue button

00:03:56.550 --> 00:03:58.640
that says Create Project.

00:03:58.640 --> 00:04:00.050
So this is what I
will click on.

00:04:02.860 --> 00:04:08.250
When you create a project, you
have to specify what API's you

00:04:08.250 --> 00:04:09.870
want to use.

00:04:09.870 --> 00:04:11.510
You can enable many of them.

00:04:11.510 --> 00:04:13.490
You can enable as many
as you need.

00:04:13.490 --> 00:04:16.089
Each of them will have
its quota, it's going

00:04:16.089 --> 00:04:17.760
to have some limits.

00:04:17.760 --> 00:04:19.779
But what we need here is
just the Drive API.

00:04:19.779 --> 00:04:23.226
So I will just scroll down
to Drive API and click on

00:04:23.226 --> 00:04:24.280
it to enable it.

00:04:24.280 --> 00:04:25.330
And that's it.

00:04:25.330 --> 00:04:28.570
So now my application will be
able to use the Drive API.

00:04:28.570 --> 00:04:30.530
We have to do some configuration
now.

00:04:30.530 --> 00:04:35.660
So we will have to go to the API
access tab to generate our

00:04:35.660 --> 00:04:36.610
credentials.

00:04:36.610 --> 00:04:41.880
The Drive API uses Auth 2.0 for
authorization, so we will

00:04:41.880 --> 00:04:45.190
need to create our credentials,
which is a client

00:04:45.190 --> 00:04:48.320
ID and client secret
and all the other

00:04:48.320 --> 00:04:49.430
parts you might need.

00:04:49.430 --> 00:04:52.760
So we click on Create
Auth to Client ID.

00:04:52.760 --> 00:04:56.420
We have to brand our
application, which is

00:04:56.420 --> 00:04:58.350
essentially giving it a name.

00:04:58.350 --> 00:05:03.740
I can call it Drive Realtime
Quick Start.

00:05:03.740 --> 00:05:04.930
If you want, you
can add a logo.

00:05:04.930 --> 00:05:06.470
You can add your homepage URL.

00:05:06.470 --> 00:05:09.520
This is not needed for a test
application, these are

00:05:09.520 --> 00:05:11.030
optional fields.

00:05:11.030 --> 00:05:13.010
I can click on Next.

00:05:13.010 --> 00:05:17.810
And then I have to specify
if I want to build a Web

00:05:17.810 --> 00:05:20.500
application, service account
application, or an installed

00:05:20.500 --> 00:05:21.110
application.

00:05:21.110 --> 00:05:24.960
This is going to be a
client-side only Web

00:05:24.960 --> 00:05:27.220
application written in
JavaScript, so Web

00:05:27.220 --> 00:05:28.940
application is fine.

00:05:28.940 --> 00:05:35.550
What we have to do here is to
make sure that our hostname is

00:05:35.550 --> 00:05:36.660
authorized.

00:05:36.660 --> 00:05:41.830
So I will click on More Options
here, and I will

00:05:41.830 --> 00:05:47.000
remove this template here, this
sample placeholder value,

00:05:47.000 --> 00:05:48.730
example.com/callback.

00:05:48.730 --> 00:05:56.260
And I will just put
http://localhost with just one

00:05:56.260 --> 00:05:59.660
L. And the same thing for
the authorize JavaScript

00:05:59.660 --> 00:06:00.010
[? origin ?].

00:06:00.010 --> 00:06:01.130
I'm going to use LocalHost.

00:06:01.130 --> 00:06:03.567
Of course, if you have a Web
server where you publish your

00:06:03.567 --> 00:06:07.430
application, you will have to
make sure that the domain for

00:06:07.430 --> 00:06:09.390
your Web server is
listed here.

00:06:09.390 --> 00:06:14.460
Make sure also that you don't
have HTTP, HTTPS mismatch.

00:06:14.460 --> 00:06:18.540
So if you use HTTPS, you have
to list it here as HTTPS.

00:06:18.540 --> 00:06:21.810
And if you need, you
can list multiple

00:06:21.810 --> 00:06:23.030
entries, one per line.

00:06:23.030 --> 00:06:29.780
So if I wanted I could list it
here, HTTPS LocalHost as well.

00:06:29.780 --> 00:06:32.500
But I'm not using HTTPS,
I can remove this.

00:06:32.500 --> 00:06:33.400
And that's it.

00:06:33.400 --> 00:06:34.650
That's the configuration.

00:06:37.000 --> 00:06:40.740
What I will get is
a client ID.

00:06:40.740 --> 00:06:44.790
And the client secret and
email address I can use.

00:06:44.790 --> 00:06:46.910
But what I need here is
just the client ID.

00:06:46.910 --> 00:06:51.900
This is going to be a Web-only
application, a client-side

00:06:51.900 --> 00:06:52.670
only application.

00:06:52.670 --> 00:06:54.700
So I will only need
the client ID.

00:06:54.700 --> 00:07:00.310
Of course, make sure that the
client secret you generate is

00:07:00.310 --> 00:07:03.030
not shared with anyone.

00:07:03.030 --> 00:07:07.270
So right now you can see mine,
but at the end of this talk I

00:07:07.270 --> 00:07:09.490
will obviously revoke
this client secret.

00:07:09.490 --> 00:07:12.790
And if you need to do it, or for
any reason you think your

00:07:12.790 --> 00:07:17.180
client secret has leaked, to
prevent other people from

00:07:17.180 --> 00:07:21.080
using your credentials you have
to go back to the API's

00:07:21.080 --> 00:07:22.420
console and click Reset
Client Secret, and you

00:07:22.420 --> 00:07:24.370
would get a new one.

00:07:24.370 --> 00:07:27.540
With that, we're done
with step one.

00:07:27.540 --> 00:07:30.380
Hey Claudio, can we bump
up the font just one?

00:07:30.380 --> 00:07:30.800
CLAUDIO CHERUBINO: Sure.

00:07:30.800 --> 00:07:31.740
MALE SPEAKER: And that'll
make it better for our

00:07:31.740 --> 00:07:32.380
viewers, thank you.

00:07:32.380 --> 00:07:33.690
CLAUDIO CHERUBINO: So let me--

00:07:33.690 --> 00:07:36.670
I got asked to make
the font larger.

00:07:36.670 --> 00:07:41.560
And so now it's easier for you
to steal my client secret.

00:07:41.560 --> 00:07:45.870
So that was the step one, which
is activating the Drive

00:07:45.870 --> 00:07:51.450
API and configuring
my credentials.

00:07:51.450 --> 00:07:55.300
So step two is to
write the code.

00:07:55.300 --> 00:07:57.520
What we're going to do here
is to have, you're going

00:07:57.520 --> 00:07:58.920
to write two files.

00:07:58.920 --> 00:08:02.630
One is an HTML file that uses
the other one, which is a

00:08:02.630 --> 00:08:03.960
JavaScript file.

00:08:03.960 --> 00:08:09.700
The JavaScript file is a
pretty generic set of

00:08:09.700 --> 00:08:13.200
utilities you can use in this
application, but you can also

00:08:13.200 --> 00:08:15.280
use in other applications.

00:08:15.280 --> 00:08:19.890
So whenever you want to write a
Realtime API application, I

00:08:19.890 --> 00:08:22.710
would recommend you talking
a look at this file.

00:08:22.710 --> 00:08:26.620
Because this will give you some
helper functions, some

00:08:26.620 --> 00:08:31.450
easier ways to abstract some of
the underlying complexity.

00:08:31.450 --> 00:08:36.370
So basically, most of our logic
is going to be in the

00:08:36.370 --> 00:08:37.730
index.html file.

00:08:37.730 --> 00:08:41.780
Let's do this, I will copy them
and run them, and then we

00:08:41.780 --> 00:08:44.750
will go through the code
and explain it.

00:08:44.750 --> 00:08:47.890
So if you want to do what I'm
doing, you just go to this

00:08:47.890 --> 00:08:53.450
page, take the HTML here,
and copy the HTML file.

00:08:53.450 --> 00:08:57.320
I created two empty
files here.

00:08:57.320 --> 00:09:04.640
So I can open them with
my editor and just--

00:09:04.640 --> 00:09:07.080
oops, if didn't copy.

00:09:07.080 --> 00:09:09.100
I can copy it for real.

00:09:09.100 --> 00:09:12.790
Go back to the editor, paste it,
and maybe make it bigger.

00:09:16.340 --> 00:09:22.090
So this is the HTML
file we copied.

00:09:22.090 --> 00:09:25.820
And I can do the same thing
for the JavaScript file.

00:09:25.820 --> 00:09:27.380
So I can go back here.

00:09:27.380 --> 00:09:28.810
We have tabs.

00:09:28.810 --> 00:09:30.660
So there's another file called
realtimeclientutils.js.

00:09:33.540 --> 00:09:36.730
If you copy these files, make
sure that the file name is

00:09:36.730 --> 00:09:40.820
correct, because the HTML file
will reference this one.

00:09:40.820 --> 00:09:44.350
So I will do the same, and then
I will talk about this

00:09:44.350 --> 00:09:46.660
code as soon as we
see what it does.

00:09:46.660 --> 00:09:51.890
So there are things in this
library that we are not really

00:09:51.890 --> 00:09:54.370
going to use, because this
is pretty generic.

00:09:54.370 --> 00:09:58.100
I mean basically gives us more
than we need, but this is just

00:09:58.100 --> 00:10:02.120
easier to use this library
in all your applications.

00:10:02.120 --> 00:10:03.800
So let's do the same thing.

00:10:03.800 --> 00:10:06.460
I will put it in the other file,
which is also empty for

00:10:06.460 --> 00:10:08.950
the moment.

00:10:08.950 --> 00:10:13.900
So we'll put the JavaScript
code here and Save.

00:10:13.900 --> 00:10:18.130
So now I'm essentially done.

00:10:18.130 --> 00:10:23.910
So I can go back to
my Web server.

00:10:23.910 --> 00:10:26.020
I can try opening this five
from a Web server

00:10:26.020 --> 00:10:28.500
and see what happens.

00:10:28.500 --> 00:10:35.180
So I see that this is what
we get, and this is

00:10:35.180 --> 00:10:38.110
exactly what we needed.

00:10:38.110 --> 00:10:46.820
So we have these two text areas
in the two files, and

00:10:46.820 --> 00:10:48.800
these will be synchronized.

00:10:48.800 --> 00:10:51.600
There is just another
thing we need to do

00:10:51.600 --> 00:10:52.550
before we can run it.

00:10:52.550 --> 00:10:55.000
This says you must authorize,
and this is disabled.

00:10:55.000 --> 00:10:59.340
This is because you have
to tell the app which

00:10:59.340 --> 00:11:00.930
is your client ID.

00:11:00.930 --> 00:11:09.180
So we have to go back to
our index.html file.

00:11:09.180 --> 00:11:12.670
And there is a variable called
Realtime Options

00:11:12.670 --> 00:11:13.980
that says client ID.

00:11:13.980 --> 00:11:16.140
Insert your client ID here.

00:11:16.140 --> 00:11:19.760
We generated our client ID
in the API's console.

00:11:19.760 --> 00:11:24.300
So I have to go back to the
API's console, which is here,

00:11:24.300 --> 00:11:31.490
take the client ID, copy it, and
put it here in the doc in

00:11:31.490 --> 00:11:35.800
the HTML file instead
of the placeholder.

00:11:35.800 --> 00:11:38.080
That's all it takes.

00:11:38.080 --> 00:11:41.880
So now this application will
use my credentials.

00:11:41.880 --> 00:11:49.470
So I can go back to the page,
refresh it, and now this is

00:11:49.470 --> 00:11:50.530
working correctly.

00:11:50.530 --> 00:11:51.940
So I see that the--

00:11:51.940 --> 00:11:53.490
this is the first time
I've run this app.

00:11:53.490 --> 00:11:57.280
So I have to authorize the
app and grant access to

00:11:57.280 --> 00:11:59.870
the app to my files.

00:11:59.870 --> 00:12:03.310
So if you want to try it,
first thing you have to

00:12:03.310 --> 00:12:04.740
authorize it.

00:12:04.740 --> 00:12:06.840
So you click and you
must authorize.

00:12:06.840 --> 00:12:09.020
This is a standard Auth
2.0 dialogue.

00:12:09.020 --> 00:12:13.730
It says that this app is
requesting permission to add

00:12:13.730 --> 00:12:16.780
itself to Google Drive, to
view and manage files in

00:12:16.780 --> 00:12:19.970
Google Drive that this app has
created that I opened with is

00:12:19.970 --> 00:12:22.110
app, and know who you
are in Google.

00:12:22.110 --> 00:12:26.910
Which means know what is
your user name and

00:12:26.910 --> 00:12:28.400
email address, actually.

00:12:28.400 --> 00:12:31.730
So I can say Allow Access.

00:12:31.730 --> 00:12:37.890
This app is now authorized, and
the two text boxes will be

00:12:37.890 --> 00:12:40.840
populated with some
initial text.

00:12:40.840 --> 00:12:41.830
And now--

00:12:41.830 --> 00:12:45.460
let's see if I can make
this bigger too--

00:12:45.460 --> 00:12:50.670
now whenever I type something on
the first text box, I will

00:12:50.670 --> 00:12:53.690
see the same content copied
onto the second one.

00:12:53.690 --> 00:12:56.310
And also, it also works
on the other way

00:12:56.310 --> 00:12:59.580
around which is amazing.

00:12:59.580 --> 00:13:04.150
So if you trust me, there's
no tricks here.

00:13:04.150 --> 00:13:08.990
This is not some local
client-side JavaScript that is

00:13:08.990 --> 00:13:10.980
just copying and synchronizing
to text box.

00:13:10.980 --> 00:13:13.890
This is going to our Web
server and then back.

00:13:13.890 --> 00:13:16.670
But if you don't really trust
me, what you can do is that we

00:13:16.670 --> 00:13:18.360
can open a separate browser.

00:13:18.360 --> 00:13:20.470
So we have a separate
browser here.

00:13:23.062 --> 00:13:25.920
So I open the same page,
another browser.

00:13:25.920 --> 00:13:32.440
And you can see, I type here,
there's a small delay now, and

00:13:32.440 --> 00:13:37.270
now two of these browsers are
synchronized in the text area.

00:13:37.270 --> 00:13:38.830
So synchronize.

00:13:38.830 --> 00:13:41.390
Of course, you're going
to have text areas.

00:13:41.390 --> 00:13:44.210
I can have strings to
be synchronized.

00:13:44.210 --> 00:13:51.000
But you can also have maps or
lists, so you can build

00:13:51.000 --> 00:13:53.290
wherever complicated
structure you want.

00:13:53.290 --> 00:13:56.500
This is actually just the
easiest to synchronize, a

00:13:56.500 --> 00:13:57.730
signal string.

00:13:57.730 --> 00:14:00.330
So this is working perfectly.

00:14:00.330 --> 00:14:01.850
This is a very simple example.

00:14:01.850 --> 00:14:05.490
We have a number of text boxes
to be synchronized.

00:14:05.490 --> 00:14:06.680
You can have as many
as you want.

00:14:06.680 --> 00:14:09.150
You can have as many
collaborators as you want.

00:14:09.150 --> 00:14:12.530
Of course you can extend
this to show who is

00:14:12.530 --> 00:14:14.130
editing what as we do.

00:14:14.130 --> 00:14:18.840
So we provide you with some
events that tell you when a

00:14:18.840 --> 00:14:21.610
collaborator joined and added
something, and when

00:14:21.610 --> 00:14:22.650
they left and so on.

00:14:22.650 --> 00:14:24.810
So you can build the
UI you want.

00:14:24.810 --> 00:14:27.630
And it can look like ours.

00:14:27.630 --> 00:14:29.290
So let's see how this works.

00:14:29.290 --> 00:14:33.840
Let's go to the code now,
let's take it from here.

00:14:33.840 --> 00:14:38.620
So let's start from
index.html.

00:14:38.620 --> 00:14:41.450
Let's make it still
a bit bigger.

00:14:41.450 --> 00:14:45.860
So in this HTML page the first
thing we do is of course

00:14:45.860 --> 00:14:46.930
loading the libraries.

00:14:46.930 --> 00:14:48.050
So we have two libraries.

00:14:48.050 --> 00:14:51.660
One is the real time library
that comes from google.com.

00:14:51.660 --> 00:14:55.350
And the other one is the
JavaScript file we created, so

00:14:55.350 --> 00:14:59.380
our helper utility
function library.

00:14:59.380 --> 00:15:05.800
And then what we say is that
when the page loads we call

00:15:05.800 --> 00:15:08.670
this function called
a Start Realtime.

00:15:08.670 --> 00:15:10.940
And everything else is just
the HTML of the page.

00:15:10.940 --> 00:15:13.940
So we have a button that is
initially disabled that says

00:15:13.940 --> 00:15:18.190
you must authorize, we have
the text areas, but the

00:15:18.190 --> 00:15:21.470
important part is to see what
Start Realtime does.

00:15:21.470 --> 00:15:25.950
And Start Realtime is at the
bottom of this file.

00:15:25.950 --> 00:15:29.560
This will create a Realtime
loader, which is our helper

00:15:29.560 --> 00:15:34.280
class, with some options
and then start it.

00:15:34.280 --> 00:15:41.280
The options are here, where we
define the client ID, what the

00:15:41.280 --> 00:15:45.580
ID of the button that starts the
authorization is, and what

00:15:45.580 --> 00:15:48.700
function to call when the
model is first created.

00:15:48.700 --> 00:15:54.170
And if we want to auto-create
a file when the application

00:15:54.170 --> 00:15:57.040
starts for first time, what is
the title of this file that we

00:15:57.040 --> 00:15:59.110
create, and what is the
function to call

00:15:59.110 --> 00:16:01.000
when a files is loaded.

00:16:01.000 --> 00:16:02.560
Let me just spend
a minute here.

00:16:02.560 --> 00:16:06.600
So there are two functions and
there are two events that are

00:16:06.600 --> 00:16:08.070
important here.

00:16:08.070 --> 00:16:12.470
One is Initialize Model and the
other one is [INAUDIBLE].

00:16:12.470 --> 00:16:20.560
Whenever you design a Realtime
API app, there's going to be

00:16:20.560 --> 00:16:23.310
multiple events that
get fired.

00:16:23.310 --> 00:16:28.710
Initialize Model is fired up
when the real time model is

00:16:28.710 --> 00:16:30.290
first created.

00:16:30.290 --> 00:16:34.240
So in our obligation a real time
model is simply a string,

00:16:34.240 --> 00:16:36.290
but it can have a complex
structure and so on.

00:16:36.290 --> 00:16:40.510
So let's say you have to create
your complex structure

00:16:40.510 --> 00:16:43.750
and set up some initial values,
things like that.

00:16:43.750 --> 00:16:50.260
And you have to do once for the
whole lifetime of the app.

00:16:50.260 --> 00:16:55.120
That has to happen in the
Initialize Model method.

00:16:55.120 --> 00:16:59.560
If you want something to happen
every time a user opens

00:16:59.560 --> 00:17:05.076
that file and wants to start
using that file, then the

00:17:05.076 --> 00:17:07.710
event that will be triggered
there is called [INAUDIBLE].

00:17:07.710 --> 00:17:09.670
So we will do different
things here.

00:17:09.670 --> 00:17:11.680
And let's see what
we do, actually.

00:17:11.680 --> 00:17:16.109
So we have Initialize Model
when the app is initially

00:17:16.109 --> 00:17:18.210
created, when the model
is initially created.

00:17:18.210 --> 00:17:21.750
And as I said, my model, which
is the underlying structure

00:17:21.750 --> 00:17:25.349
for my app, is just a string.

00:17:25.349 --> 00:17:26.770
This is not a normal
string, this is a

00:17:26.770 --> 00:17:27.920
collaborative string.

00:17:27.920 --> 00:17:30.660
So we have methods
to create those.

00:17:30.660 --> 00:17:37.790
And what we do here is we
instantiate a string with an

00:17:37.790 --> 00:17:40.550
initial value that says,
Hello Realtime World.

00:17:40.550 --> 00:17:43.750
And that's why when I started
the app, you saw

00:17:43.750 --> 00:17:45.490
that initial value.

00:17:45.490 --> 00:17:51.530
And then we say that
we call it text.

00:17:51.530 --> 00:17:53.570
Not a very fancy name,
but this is what we

00:17:53.570 --> 00:17:54.860
decided to call it.

00:17:54.860 --> 00:18:03.200
And the other method runs
when the file is

00:18:03.200 --> 00:18:04.420
loaded from a user.

00:18:04.420 --> 00:18:10.070
And what we do here is binding
the controls on the page.

00:18:10.070 --> 00:18:13.590
So the text box that you see
on the HTML, we demodel.

00:18:13.590 --> 00:18:15.100
This is what we have to do.

00:18:15.100 --> 00:18:19.660
Remember we have two different
text boxes in this app.

00:18:19.660 --> 00:18:21.360
So we don't have to bind both.

00:18:21.360 --> 00:18:25.210
We're actually binding them to
the same model strength.

00:18:25.210 --> 00:18:29.490
But for take a sample, we are
binding it in two different

00:18:29.490 --> 00:18:31.630
ways, because there are multiple
ways to do it.

00:18:31.630 --> 00:18:36.630
So the first one we used
the easiest way.

00:18:36.630 --> 00:18:41.490
So we get a reference to the
first text area using a

00:18:41.490 --> 00:18:44.010
standard document.get
element by ID.

00:18:44.010 --> 00:18:47.360
And we know this element is
going to be called Editor One.

00:18:47.360 --> 00:18:50.930
And then we use a helper
function called Bind String,

00:18:50.930 --> 00:18:54.600
which makes it super easy to
bind a string to a text area.

00:18:54.600 --> 00:18:58.030
So this method takes two
parameters, one is the string

00:18:58.030 --> 00:18:59.540
and the other one is
the text area.

00:18:59.540 --> 00:19:00.570
That's all you have to do.

00:19:00.570 --> 00:19:02.640
So this will take care of
everything for you.

00:19:02.640 --> 00:19:04.510
If you delete something
from the text, it will

00:19:04.510 --> 00:19:05.210
just reflect it.

00:19:05.210 --> 00:19:06.780
If you add something, it
will just reflect it.

00:19:06.780 --> 00:19:09.070
That's all of it.

00:19:09.070 --> 00:19:11.970
If you don't want to use this,
or if you want to do something

00:19:11.970 --> 00:19:17.320
different, you can instant shade
a custom event listener.

00:19:17.320 --> 00:19:21.660
This will let you bind objects
of whatever kind you want with

00:19:21.660 --> 00:19:23.970
UI elements of whatever kind.

00:19:23.970 --> 00:19:27.600
So in this case, we're going to
do exactly the same thing

00:19:27.600 --> 00:19:29.810
as the first text area,
but manually.

00:19:29.810 --> 00:19:31.870
So first, we take the reference

00:19:31.870 --> 00:19:34.130
to the second editor.

00:19:34.130 --> 00:19:39.760
And then we define a function
called Update Text Area Two,

00:19:39.760 --> 00:19:45.380
whose job is just to set the
value of this text area.

00:19:45.380 --> 00:19:51.340
And we call this function
whenever the tax-inserted

00:19:51.340 --> 00:19:56.150
event is triggered or when the
tax-deleted event is stricter.

00:19:56.150 --> 00:19:58.550
So it's not super efficient.

00:19:58.550 --> 00:20:01.300
But what we're doing here is
that whenever some text is

00:20:01.300 --> 00:20:06.670
inserted, we replace the value
in the text box with this.

00:20:06.670 --> 00:20:10.140
And whenever some text is
deleted we do the same thing.

00:20:10.140 --> 00:20:13.140
And we also do that
on [INAUDIBLE].

00:20:13.140 --> 00:20:16.340
So we set the text so that
whenever you type, you will

00:20:16.340 --> 00:20:22.020
automatically see that the value
going from the HTML, it

00:20:22.020 --> 00:20:23.180
goes into the model.

00:20:23.180 --> 00:20:24.690
And that's basically it.

00:20:24.690 --> 00:20:28.780
And once we're done with that--
so we linked the two

00:20:28.780 --> 00:20:30.780
elements with the model.

00:20:30.780 --> 00:20:33.550
We just enabled the UI elements
so that the user can

00:20:33.550 --> 00:20:35.390
start playing with it.

00:20:35.390 --> 00:20:38.570
And that's all our logic.

00:20:38.570 --> 00:20:40.870
What is included in the Realtime
clientutils.js?

00:20:43.720 --> 00:20:45.970
You, of course, can take
a look at that.

00:20:45.970 --> 00:20:50.580
But what this does is taking
care of the authorization.

00:20:50.580 --> 00:20:52.900
If you notice, we haven't done
much about authorization.

00:20:52.900 --> 00:20:55.090
We just said, this is the idea
of the element that will

00:20:55.090 --> 00:20:56.160
trigger the authorization.

00:20:56.160 --> 00:20:57.020
That was it.

00:20:57.020 --> 00:21:00.230
Because this library
will do everything.

00:21:00.230 --> 00:21:03.620
So we list here the
scopes we need.

00:21:03.620 --> 00:21:05.860
We take care of doing
authorization

00:21:05.860 --> 00:21:07.840
in different modes.

00:21:07.840 --> 00:21:10.840
So the first time you have to go
to the option Grant Access

00:21:10.840 --> 00:21:13.110
and see the Grand
Access dialogue.

00:21:13.110 --> 00:21:16.010
The second time you go to
the app, the app will be

00:21:16.010 --> 00:21:17.070
automatically authorized.

00:21:17.070 --> 00:21:23.600
And all of that is taken
care by this library.

00:21:23.600 --> 00:21:28.710
We provide some helper functions
to split parameters

00:21:28.710 --> 00:21:30.750
from the URI.

00:21:30.750 --> 00:21:33.830
So if you notice in the--

00:21:33.830 --> 00:21:36.030
it's probably small to read--
but if you notice when we

00:21:36.030 --> 00:21:41.810
opened the app, in the URL we
had a file ID, a parameter

00:21:41.810 --> 00:21:44.780
which included the ID of
the file on Drive.

00:21:44.780 --> 00:21:50.450
So when I open the same page
on another browser, the

00:21:50.450 --> 00:21:56.340
library will take the file ID
from the URL and open that

00:21:56.340 --> 00:21:57.470
file from Drive.

00:21:57.470 --> 00:21:59.010
So all of this is done
by the library.

00:21:59.010 --> 00:22:04.610
And just before we wrap up,
authorize is there.

00:22:04.610 --> 00:22:06.100
You should take a look
at that, but it

00:22:06.100 --> 00:22:07.750
just works as it is.

00:22:07.750 --> 00:22:12.100
And all I want to show you
is that this library also

00:22:12.100 --> 00:22:15.650
performs some standard
Drive API calls.

00:22:15.650 --> 00:22:19.820
So there's one called Create
Realtime File, and you might

00:22:19.820 --> 00:22:25.780
notice that this is just
standardfiles.insert call.

00:22:25.780 --> 00:22:29.130
So to create a Realtime file,
you create a file on Drive

00:22:29.130 --> 00:22:31.280
with a specific MIME type.

00:22:31.280 --> 00:22:35.290
And that's it And if you want
to get the metadata for this

00:22:35.290 --> 00:22:39.930
file, is this just a standard
drive API call.

00:22:39.930 --> 00:22:44.400
So you do a drive.files.get,
with the file ID.

00:22:44.400 --> 00:22:47.550
So everything you know
about the Drive API

00:22:47.550 --> 00:22:48.870
still applies here.

00:22:48.870 --> 00:22:52.300
Realtime files are standard
files, standard Drive API

00:22:52.300 --> 00:22:54.430
files with a specific
MIME type.

00:22:54.430 --> 00:22:56.530
And that's the only
difference.

00:22:56.530 --> 00:23:00.730
So it can do all the usual
operations in those.

00:23:00.730 --> 00:23:05.500
And everything else here
is just boiler plate.

00:23:05.500 --> 00:23:07.570
So this is the constructor
we called.

00:23:07.570 --> 00:23:10.920
And it takes all the parameters
we passed, and them

00:23:10.920 --> 00:23:11.840
[INAUDIBLE]

00:23:11.840 --> 00:23:12.720
we're needed.

00:23:12.720 --> 00:23:14.150
And this is where we start.

00:23:14.150 --> 00:23:17.240
So we start with the
authorization, and that's it.

00:23:17.240 --> 00:23:20.620
So you should probably take a
look at this in a bit more

00:23:20.620 --> 00:23:25.460
detail, but this is out of scope
for this Quick Start.

00:23:25.460 --> 00:23:30.030
So to summarize, I mean I spent
a lot of time explaining

00:23:30.030 --> 00:23:34.010
it, but to go through all the
steps here, it should take you

00:23:34.010 --> 00:23:36.540
no more than 5 to 10 minutes.

00:23:36.540 --> 00:23:39.380
And at the end you will have
an application that behaves

00:23:39.380 --> 00:23:43.870
like this, so that you have
multiple text boxes that are

00:23:43.870 --> 00:23:44.860
synchronized.

00:23:44.860 --> 00:23:50.100
And then you can just wrap up
by saying goodbye here, and

00:23:50.100 --> 00:23:51.610
still works and it's great.

00:23:51.610 --> 00:23:57.300
So if you want to write your
first Drive Realtime API app,

00:23:57.300 --> 00:24:01.730
go to developers.googl
e.com/drive/realtime.

00:24:01.730 --> 00:24:04.010
And you will find a lot of
documentation there, starting

00:24:04.010 --> 00:24:06.610
from the Quick Start page,
which is what we

00:24:06.610 --> 00:24:08.060
went through today.

00:24:08.060 --> 00:24:11.570
With that, thank you so much
for joining us on Google

00:24:11.570 --> 00:24:12.500
Developers Live.

00:24:12.500 --> 00:24:16.870
And a sneak peak on our next
event on Tuesday, we should

00:24:16.870 --> 00:24:23.880
have the engineer team leader
for this effort join us to

00:24:23.880 --> 00:24:24.840
answer your questions.

00:24:24.840 --> 00:24:25.930
So please stay tuned.

00:24:25.930 --> 00:24:29.130
We'll give you more details
on our Google

00:24:29.130 --> 00:24:31.070
Developers Live page.

00:24:31.070 --> 00:24:34.720
And we'll give you a way to ask
questions directly to the

00:24:34.720 --> 00:24:36.340
lead engineer who wrote this.

00:24:36.340 --> 00:24:38.160
Thank you so much, see
you next time.

00:24:38.160 --> 00:24:39.410
Thank you.

