WEBVTT
Kind: captions
Language: en

00:00:05.901 --> 00:00:07.901
Hello, my name is Trevor Johns,

00:00:07.901 --> 00:00:10.734
and I'm a software engineer
from the Google Data APIs team.

00:00:10.734 --> 00:00:13.400
The Google Data APIs allow you
to programmatically access

00:00:13.400 --> 00:00:14.567
various Google services,

00:00:14.567 --> 00:00:16.567
such as Blogger,
Google Calendar,

00:00:16.567 --> 00:00:18.901
your Gmail contacts list,
or even YouTube.

00:00:18.901 --> 00:00:20.901
I'm here today to help you
get started interacting

00:00:20.901 --> 00:00:23.734
with these APIs from
within your PHP applications.

00:00:23.734 --> 00:00:25.567
This video assumes
that you're already familiar

00:00:25.567 --> 00:00:27.734
with the basics
of web development and PHP.

00:00:27.734 --> 00:00:29.234
It'll also help
if you had past experience

00:00:29.234 --> 00:00:30.567
working with web services,

00:00:30.567 --> 00:00:32.501
though this
isn't strictly required.

00:00:35.400 --> 00:00:37.400
Before we begin,
you'll need three things--

00:00:37.400 --> 00:00:39.734
An HTTP Server, PHP,

00:00:39.734 --> 00:00:42.234
and the PHP Google Data
Client Library.

00:00:42.234 --> 00:00:45.234
I'll go through each
of these briefly.

00:00:45.234 --> 00:00:48.567
Most hosting providers already
provide an HTTP server and PHP,

00:00:48.567 --> 00:00:49.901
but if you
haven't already done so,

00:00:49.901 --> 00:00:51.901
I highly recommend installing
a copy locally

00:00:51.901 --> 00:00:53.567
for development purposes.

00:00:53.567 --> 00:00:55.234
Any HTTP server will do,

00:00:55.234 --> 00:00:57.901
provided that there's support
executing PHP scripts.

00:00:57.901 --> 00:00:59.400
I recommend using
the Apache HTTP Server,

00:00:59.400 --> 00:01:04.400
which can be downloaded
from httpd.apache.org.

00:01:04.400 --> 00:01:06.501
Once your HTTP server
is installed,

00:01:06.501 --> 00:01:08.901
you can download PHP
from php.net.

00:01:08.901 --> 00:01:10.567
OS-specific
installation instructions

00:01:10.567 --> 00:01:13.434
are posted
on each of these sites.

00:01:13.434 --> 00:01:15.067
While installing Apache and PHP

00:01:15.067 --> 00:01:16.734
are outside the scope
of this video,

00:01:16.734 --> 00:01:18.400
I'll show you
how to quickly check to see

00:01:18.400 --> 00:01:20.868
if your installation
is properly set up.

00:01:20.868 --> 00:01:23.334
Simply create a file
that contains these two lines.

00:01:28.234 --> 00:01:30.734
The first is just
the standard PHP start tag,

00:01:30.734 --> 00:01:32.567
and the second
is the PHP info function,

00:01:32.567 --> 00:01:34.734
which, if you've done
PHP development before,

00:01:34.734 --> 00:01:36.567
you might know that it goes
and displays information

00:01:36.567 --> 00:01:38.434
about your PHP environment.

00:01:38.434 --> 00:01:40.234
If we save this
within our web root

00:01:40.234 --> 00:01:43.734
as, uh, say info.php...

00:01:43.734 --> 00:01:46.334
and then load it
within our browser...

00:01:49.734 --> 00:01:52.067
it should show information
about your PHP installation,

00:01:52.067 --> 00:01:54.734
such as the version,
any build commands you used,

00:01:54.734 --> 00:01:56.400
what your include path is.

00:01:56.400 --> 00:01:58.400
If you don't get this page
and instead you just get

00:01:58.400 --> 00:02:01.167
the contents of the
info.php file you just saved,

00:02:01.167 --> 00:02:04.400
then you know something's wrong,
and you'll need to troubleshoot.

00:02:04.400 --> 00:02:06.400
Once you have
your HTTP server installed

00:02:06.400 --> 00:02:07.834
and running with PHP support,

00:02:07.834 --> 00:02:10.734
it's time to download the
PHP Google Data Client Library.

00:02:10.734 --> 00:02:12.033
This is distributed

00:02:12.033 --> 00:02:13.734
as part of the Zend Framework
Open Source Project,

00:02:13.734 --> 00:02:15.901
available
at framework.zend.com.

00:02:15.901 --> 00:02:17.734
Zend Framework
includes a lot of components

00:02:17.734 --> 00:02:20.734
besides just what's needed for
accessing the Google Data APIs.

00:02:20.734 --> 00:02:22.734
So, if you don't want all
the overhead of Zend Framework

00:02:22.734 --> 00:02:24.734
or are already using
another web-development toolkit,

00:02:24.734 --> 00:02:26.767
you can download a lightweight
Google-only version

00:02:26.767 --> 00:02:28.567
of Zend Framework

00:02:28.567 --> 00:02:32.400
by going to framework.zend.com/
download/gdata.

00:02:32.400 --> 00:02:33.901
To demonstrate,
I'll quickly go through

00:02:33.901 --> 00:02:36.267
the Zend Framework
installation process.

00:02:36.267 --> 00:02:38.434
So I'm just gonna go ahead
and open up a browser

00:02:38.434 --> 00:02:42.067
and go to framework.zend.com/
download/gdata

00:02:42.067 --> 00:02:45.000
and grab the tarball
from Latest Release.

00:02:45.000 --> 00:02:46.400
Once it finishes downloading,

00:02:46.400 --> 00:02:48.868
I'm just gonna go ahead
and extract it.

00:02:48.868 --> 00:02:51.067
Once this is done,
place the resulting folder

00:02:51.067 --> 00:02:53.567
somewhere safe and accessible
to your web server.

00:02:53.567 --> 00:02:54.834
Since on my system,

00:02:54.834 --> 00:02:57.234
both Apache and PHP
are installed in opt/local,

00:02:57.234 --> 00:02:59.067
I'm gonna go ahead
and place it there as well.

00:02:59.067 --> 00:03:01.234
On your system, you'll probably
want to put it somewhere else.

00:03:18.734 --> 00:03:22.067
Finally, you'll need to tell PHP
where to find Zend Framework.

00:03:22.067 --> 00:03:25.067
The best way to do this
is to modify your php.ini file.

00:03:25.067 --> 00:03:27.901
On my system, this is located
in opt/local/etc

00:03:27.901 --> 00:03:29.734
because I installed PHP
into opt/local.

00:03:29.734 --> 00:03:31.567
However, depending
on how you've installed PHP,

00:03:31.567 --> 00:03:33.067
it may be located
in another location,

00:03:33.067 --> 00:03:34.901
such as user/local/etc

00:03:34.901 --> 00:03:37.601
or C:\PHP
if you're on Windows.

00:03:37.601 --> 00:03:40.501
So I'm gonna go ahead
and open this up in Text Editor.

00:03:44.901 --> 00:03:46.267
All right?

00:03:46.267 --> 00:03:49.067
And find the line that begins
with "include_path."

00:03:49.067 --> 00:03:50.400
All right?

00:03:50.400 --> 00:03:53.234
This is a colon-separated list
of various directories

00:03:53.234 --> 00:03:56.734
that PHP is going to search when
it's looking up, um, libraries.

00:03:56.734 --> 00:03:57.834
I'm just gonna go ahead

00:03:57.834 --> 00:03:59.901
and add the path
where I stored Zend Gdata,

00:03:59.901 --> 00:04:03.667
so opt/local/ZendGdata
followed by /library.

00:04:03.667 --> 00:04:05.734
Now that I've updated
my php.ini,

00:04:05.734 --> 00:04:07.067
I just need to restart Apache

00:04:07.067 --> 00:04:09.067
so that PHP can pick up
the new changes.

00:04:09.067 --> 00:04:13.000
So I'm just gonna go ahead
and run Apache control restart.

00:04:14.400 --> 00:04:16.067
And then
it should be good to go.

00:04:16.067 --> 00:04:17.901
So I'm just gonna go ahead
and load php-a

00:04:17.901 --> 00:04:21.234
to get an interactive
PHP session,

00:04:21.234 --> 00:04:24.501
and I'm going to try and load
a file from Zend Framework.

00:04:28.567 --> 00:04:30.567
I'm gonna load
Zend/Loader.php,

00:04:30.567 --> 00:04:32.234
which should be there.

00:04:32.234 --> 00:04:35.067
If you don't get any errors,
then everything's good to go.

00:04:35.067 --> 00:04:37.567
If not, then you know
you need to troubleshoot.

00:04:37.567 --> 00:04:39.234
A good place to check,
if this happens,

00:04:39.234 --> 00:04:42.067
is to look at the info.php file
we created earlier.

00:04:42.067 --> 00:04:43.067
This will show you

00:04:43.067 --> 00:04:45.234
the include path
is currently in effect.

00:04:45.234 --> 00:04:46.601
So, if this is wrong,

00:04:46.601 --> 00:04:49.234
make sure that you've edited
the correct php.ini file

00:04:49.234 --> 00:04:51.901
and that the path you listed
is actually correct.

00:04:51.901 --> 00:04:53.400
If you're deploying
to manage hosting,

00:04:53.400 --> 00:04:56.067
you might have direct access
to your php.ini file.

00:04:56.067 --> 00:04:57.901
If you're hosting provider
has allowed it

00:04:57.901 --> 00:05:00.334
and if your hosting provider
is using Apache with mod-php,

00:05:00.334 --> 00:05:02.734
you can instead set PHP's
configuration settings

00:05:02.734 --> 00:05:04.901
using an htaccess file.

00:05:04.901 --> 00:05:07.501
So to do this,
go ahead and create a new file.

00:05:10.234 --> 00:05:15.400
And then type the line,
"php_value include_path"

00:05:15.400 --> 00:05:18.901
and then in parentheses the path
to your Zend Gdata folder

00:05:18.901 --> 00:05:22.133
followed by /library.

00:05:22.133 --> 00:05:25.901
Then save this in your web root
as .htaccess

00:05:25.901 --> 00:05:27.567
and save it.

00:05:27.567 --> 00:05:28.767
I'm not gonna
actually save it

00:05:28.767 --> 00:05:30.901
because I've already edited
my php.ini,

00:05:30.901 --> 00:05:32.701
but otherwise,
this should work.

00:05:34.934 --> 00:05:36.734
Now that Zend Framework
is installed,

00:05:36.734 --> 00:05:38.901
let's take a brief tour
of the client library.

00:05:38.901 --> 00:05:42.300
A useful page for this is the
Zend Framework API reference,

00:05:42.300 --> 00:05:45.901
available at framework.zend.com/
apidoc/core.

00:05:45.901 --> 00:05:47.267
Let's go there now.

00:05:52.501 --> 00:05:54.901
All right, click on Zend_Gdata
in the upper-right-hand corner

00:05:54.901 --> 00:05:58.734
to switch to--to make that
the active package.

00:05:58.734 --> 00:06:00.834
And then you'll notice on the
left there's a list of classes

00:06:00.834 --> 00:06:04.400
within the--
within Zend Gdata.

00:06:04.400 --> 00:06:05.901
There's five main types
of classes

00:06:05.901 --> 00:06:07.901
that you'll normally be
interacting with--

00:06:07.901 --> 00:06:10.400
service classes,
query classes,

00:06:10.400 --> 00:06:14.067
feeds, entries,
and extension elements.

00:06:14.067 --> 00:06:17.200
Zend Gdata is an example
of a service class.

00:06:17.200 --> 00:06:18.901
Service classes are the heart
of the client library

00:06:18.901 --> 00:06:20.067
and serve to manage access

00:06:20.067 --> 00:06:21.901
to Google services
over the network.

00:06:21.901 --> 00:06:25.100
Zend Gdata is a generic
service class used for Blogger.

00:06:25.100 --> 00:06:27.067
Most of the services have
a dedicated service class,

00:06:27.067 --> 00:06:28.734
such as Zend Gdata at YouTube.

00:06:28.734 --> 00:06:30.067
Query classes
contain knowledge

00:06:30.067 --> 00:06:33.033
about the address scheme used
for the various services

00:06:33.033 --> 00:06:35.234
and are used to assist
in forming URLs.

00:06:35.234 --> 00:06:37.901
You can either allow the query
object to create a URL for you,

00:06:37.901 --> 00:06:40.734
or just pass the URL into the
query yourself if you know it.

00:06:40.734 --> 00:06:43.901
As before, Zend Gdata Query
is a generic query class,

00:06:43.901 --> 00:06:46.067
though many services
have specialized query classes,

00:06:46.067 --> 00:06:47.901
such as Zend Gdata YouTube.

00:06:47.901 --> 00:06:49.567
Feeds are returned
by service classes

00:06:49.567 --> 00:06:51.067
in response
to a network request,

00:06:51.067 --> 00:06:52.667
often using the help
of a query.

00:06:52.667 --> 00:06:54.901
Feeds are simply a collection
of entry objects,

00:06:54.901 --> 00:06:56.234
along with a small bit
of metadata

00:06:56.234 --> 00:06:57.901
to describe the collection.

00:06:57.901 --> 00:07:00.000
Zend Gdata Feed
is an example of this,

00:07:00.000 --> 00:07:03.534
and there is many subclasses
used for the various services.

00:07:03.534 --> 00:07:05.234
Entries,
as the name suggests,

00:07:05.234 --> 00:07:07.734
represent a logical collection
of data about something.

00:07:07.734 --> 00:07:08.901
This might be a blog post

00:07:08.901 --> 00:07:10.734
or a contact
or a calendar event.

00:07:10.734 --> 00:07:12.901
These are represented
by Zend Gdata Entry,

00:07:12.901 --> 00:07:14.567
and like Zend Gdata Feed,

00:07:14.567 --> 00:07:17.834
there's many subclasses
used by each of the services.

00:07:17.834 --> 00:07:20.734
Finally, inside of entries
and feeds, extension elements

00:07:20.734 --> 00:07:23.067
are used to represent
individual pieces of data.

00:07:23.067 --> 00:07:25.234
For example, this might be
the owner of a blog,

00:07:25.234 --> 00:07:27.901
the title of a post,
or the date of a calendar event.

00:07:27.901 --> 00:07:29.567
These are represented
by subclasses

00:07:29.567 --> 00:07:31.934
of Zend Gdata App Extension.

00:07:31.934 --> 00:07:33.400
Now that you're familiar
with the library,

00:07:33.400 --> 00:07:34.901
we're going to write
a quick program

00:07:34.901 --> 00:07:36.567
to create and display posts
for Blogger.

00:07:36.567 --> 00:07:37.701
Let's get started.

00:07:37.701 --> 00:07:39.100
So, to begin,
I'm gonna go and create

00:07:39.100 --> 00:07:41.501
a brand-new HTML file.

00:07:42.901 --> 00:07:47.567
I'll go ahead and call this,
"Blogger PHP Demo."

00:07:47.567 --> 00:07:51.334
And I'll go ahead and put a nice
title at the top of the page.

00:07:55.834 --> 00:07:57.334
All right?

00:07:57.334 --> 00:08:00.734
And then I'm just gonna go ahead
and save this as blogger.php

00:08:00.734 --> 00:08:03.200
inside of my web root.

00:08:06.567 --> 00:08:09.734
At the very top, I'll go ahead
and insert a block of PHP code

00:08:09.734 --> 00:08:12.901
to load
in Zend Gdata libraries.

00:08:12.901 --> 00:08:14.567
The very first thing
you should always load

00:08:14.567 --> 00:08:17.400
when using Zend Framework
is Zend/Loader.php.

00:08:17.400 --> 00:08:18.667
You can then use Zend Loader

00:08:18.667 --> 00:08:20.567
to load in any other
dependencies that you have.

00:08:20.567 --> 00:08:22.567
In this case,
we're using Zend Gdata,

00:08:22.567 --> 00:08:26.234
Zend Gdata Query,
and Zend Gdata ClientLogin.

00:08:26.234 --> 00:08:29.400
Zend Gdata and Zend Gdata Query
I discussed earlier.

00:08:29.400 --> 00:08:30.734
Zend Gdata ClientLogin

00:08:30.734 --> 00:08:33.400
is used to go
and authenticate to Blogger.

00:08:33.400 --> 00:08:36.234
So, once that's in place, I'll
just go down here to the body,

00:08:36.234 --> 00:08:38.868
create another block
of PHP code,

00:08:38.868 --> 00:08:40.234
and authenticate to Blogger.

00:08:40.234 --> 00:08:41.567
So, again,
we're using ClientLogin

00:08:41.567 --> 00:08:42.901
to actually authenticate.

00:08:42.901 --> 00:08:44.734
Uh, some other options
you might want to use here

00:08:44.734 --> 00:08:47.067
are auth 7.0 auth, which allow
you to go and log in

00:08:47.067 --> 00:08:49.067
without ever actually seeing
the user's password,

00:08:49.067 --> 00:08:50.567
which is really great
for web apps,

00:08:50.567 --> 00:08:52.767
since it protects
the user's security.

00:08:52.767 --> 00:08:54.167
Once that's done,
we create an instance

00:08:54.167 --> 00:08:57.667
of the Zend Gdata service class
and call it Blogger Service.

00:09:00.334 --> 00:09:01.901
From there,
we're just gonna go ahead

00:09:01.901 --> 00:09:04.234
and get a list
of all the user's current blogs.

00:09:04.234 --> 00:09:06.234
So we create a new query.

00:09:06.234 --> 00:09:08.734
Um, this URL just happens to be
the Blogger Meta Feed,

00:09:08.734 --> 00:09:10.734
which lists all of the blogs
available for a user.

00:09:10.734 --> 00:09:13.234
This is documented
on code.google.com.

00:09:13.234 --> 00:09:15.567
And then we go
and use the Blogger service

00:09:15.567 --> 00:09:17.567
to go and fetch that feed.

00:09:17.567 --> 00:09:19.567
From there, we just go
and extract the first blogs,

00:09:19.567 --> 00:09:21.567
since that's all
we care about right now,

00:09:21.567 --> 00:09:24.400
and we get the title,
the blog's URL,

00:09:24.400 --> 00:09:27.734
and the URL of the feed
for that blog.

00:09:27.734 --> 00:09:30.067
Something to note here
is that title,

00:09:30.067 --> 00:09:31.901
while you'd normally think
of it as a string,

00:09:31.901 --> 00:09:33.400
is actually an XML element,

00:09:33.400 --> 00:09:35.067
and as such, it can have
various attributes,

00:09:35.067 --> 00:09:36.234
so you need to be sure

00:09:36.234 --> 00:09:37.734
to actually request
the text for the title,

00:09:37.734 --> 00:09:40.067
as opposed to anything else
that might be there.

00:09:40.067 --> 00:09:42.567
And this applies to any other
extension element as well.

00:09:42.567 --> 00:09:44.100
All right?

00:09:44.100 --> 00:09:46.534
And then we're just gonna
go ahead and print this out.

00:09:46.534 --> 00:09:48.501
So, if we load this
in our browser...

00:09:50.567 --> 00:09:54.334
you can see that it successfully
fetched the first blog.

00:09:54.334 --> 00:09:57.033
And if I load it,
there's the index page,

00:09:57.033 --> 00:09:58.400
and that looks good.

00:09:58.400 --> 00:09:59.567
So let's go ahead

00:09:59.567 --> 00:10:00.901
and do something
a little more interesting.

00:10:00.901 --> 00:10:02.000
Let's go and actually fetch

00:10:02.000 --> 00:10:04.234
all the blog posts
available on this blog.

00:10:06.067 --> 00:10:08.067
So, again,
we construct a new query,

00:10:08.067 --> 00:10:11.400
and we use the blog feed URL
that we extracted earlier.

00:10:11.400 --> 00:10:14.234
We then again use the service
to go and fetch this feed.

00:10:14.234 --> 00:10:16.400
And then we iterate through
every single entry in this feed,

00:10:16.400 --> 00:10:20.734
where it--and here every entry
represents a blog post.

00:10:20.734 --> 00:10:22.234
For each blog post,

00:10:22.234 --> 00:10:24.234
we go and extract the URL
for the blog post

00:10:24.234 --> 00:10:25.400
and the title

00:10:25.400 --> 00:10:27.400
and display them on screen
in a list.

00:10:27.400 --> 00:10:30.000
So, if we refresh
the page again...

00:10:32.901 --> 00:10:34.567
you'll see it
successfully fetched

00:10:34.567 --> 00:10:36.334
all the blog posts available.

00:10:41.734 --> 00:10:43.234
All right?

00:10:43.234 --> 00:10:44.734
So, now that that's done,

00:10:44.734 --> 00:10:47.234
let's go and insert
some new posts into the blog.

00:10:47.234 --> 00:10:49.734
So I'm just gonna go
and create a form down here.

00:10:49.734 --> 00:10:51.601
This is just a normal post

00:10:51.601 --> 00:10:53.567
to the exact same page
we're on right now.

00:10:53.567 --> 00:10:55.234
It has two inputs--

00:10:55.234 --> 00:10:57.567
a text field named "title"

00:10:57.567 --> 00:11:01.000
and a text area
named "body."

00:11:01.000 --> 00:11:02.901
And you can see that
right here.

00:11:02.901 --> 00:11:05.567
Right now, this isn't wired up
to do anything yet.

00:11:05.567 --> 00:11:07.234
So let's fix that.

00:11:07.234 --> 00:11:10.200
So, right after
we fetch the first blog,

00:11:10.200 --> 00:11:12.734
we'll check to see if there's
anything in the forum.

00:11:12.734 --> 00:11:14.734
If the forum's completely empty,
we won't do anything,

00:11:14.734 --> 00:11:16.234
but if there are things
in the forum,

00:11:16.234 --> 00:11:19.734
we'll go and, uh, create
a brand-new entry,

00:11:19.734 --> 00:11:21.400
populate the title
and the content

00:11:21.400 --> 00:11:23.734
using title
and content extension elements,

00:11:23.734 --> 00:11:27.400
and then just grab the title
and the body from the post

00:11:27.400 --> 00:11:30.234
and then use the service class
to insert that into the blog,

00:11:30.234 --> 00:11:32.167
using insert entry.

00:11:32.167 --> 00:11:33.734
If we save this one more time

00:11:33.734 --> 00:11:35.400
and then switch
back to the browser--

00:11:35.400 --> 00:11:36.734
I go ahead
and type in a title here.

00:11:36.734 --> 00:11:39.567
So, "Hello, World.

00:11:39.567 --> 00:11:43.234
This is my sample post."

00:11:43.234 --> 00:11:45.734
And hit continue.

00:11:45.734 --> 00:11:49.267
You'll see that the post
appears in the list.

00:11:49.267 --> 00:11:51.267
If I reload the blog's index,

00:11:51.267 --> 00:11:53.734
it appears there.

00:11:53.734 --> 00:11:56.267
And if I click
on the post right here,

00:11:56.267 --> 00:11:59.400
it takes us to the page
dedicated to that post.

00:11:59.400 --> 00:12:01.000
If you'd like to learn more,

00:12:01.000 --> 00:12:02.567
check out
the PHP Getting Started Guide

00:12:02.567 --> 00:12:03.901
that accompanies this video.

00:12:03.901 --> 00:12:05.400
The URL is on your screen.

00:12:05.400 --> 00:12:07.567
The Zend Framework Manual
contains in-depth information

00:12:07.567 --> 00:12:09.234
about working
with Zend Framework modules,

00:12:09.234 --> 00:12:10.501
including this one.

00:12:10.501 --> 00:12:13.234
You can find this
at framework.zend.com/manual.

00:12:13.234 --> 00:12:14.634
Finally, be sure to keep

00:12:14.634 --> 00:12:17.234
the Zend Framework API reference
I mentioned earlier on hand,

00:12:17.234 --> 00:12:21.167
available at framework.zend.com/
apidoc/core.

00:12:22.901 --> 00:12:24.734
I hope you got a good idea
how to get started.

00:12:24.734 --> 00:12:27.334
Thank you for watching
and happy coding.

