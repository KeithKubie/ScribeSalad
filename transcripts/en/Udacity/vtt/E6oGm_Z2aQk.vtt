WEBVTT
Kind: captions
Language: en

00:00:00.170 --> 00:00:02.120
So before we get to the problem of ranking web

00:00:02.120 --> 00:00:05.270
search results, I want to talk about one more interesting recursive

00:00:05.270 --> 00:00:09.250
definition, the fibonacci series. And fibonacci numbers are one of

00:00:09.250 --> 00:00:12.440
the most interesting things in mathematics. Once you know about them,

00:00:12.440 --> 00:00:15.170
you'll see them all over the place, both in nature

00:00:15.170 --> 00:00:18.040
and in human designs. The name comes from Leonardo da

00:00:18.040 --> 00:00:21.090
Pisa who was also know as fibonacci. And back in

00:00:21.090 --> 00:00:25.372
1202 he published a book called Liber Abaci. The root Abaci

00:00:25.372 --> 00:00:27.812
is the same as the one for abacus the calculating

00:00:27.812 --> 00:00:32.020
machine. And this translates loosely as book of calculus. This

00:00:32.020 --> 00:00:35.530
was the book that introduced Indian mathematics to the west.

00:00:35.530 --> 00:00:37.740
In particular it introduced what we now know as Arabic

00:00:37.740 --> 00:00:41.360
numerals. This replace the Roman numeral system that was then

00:00:41.360 --> 00:00:44.130
widely used. And part of what fibonacci did in the

00:00:44.130 --> 00:00:45.975
book was show, how much easier it is to do

00:00:45.975 --> 00:00:50.490
calculations, using numbers in the decimal systems where the place,

00:00:50.490 --> 00:00:53.270
where the number is indicates its value. And as part

00:00:53.270 --> 00:00:55.810
of the book introduce these problems, and showed how to

00:00:55.810 --> 00:00:59.420
solve them using calculation. The problem that became known as

00:00:59.420 --> 00:01:02.650
the fibonacci numbers was one of the problems in the book.

00:01:02.650 --> 00:01:05.430
And he posed a problem like this. So at the

00:01:05.430 --> 00:01:08.290
beginning, we have one pair of rabbits, and it takes

00:01:08.290 --> 00:01:11.810
one month for a rabbit to produce offspring, and every

00:01:11.810 --> 00:01:15.300
month a mature rabbit will produce a new pair of rabbits,

00:01:15.300 --> 00:01:18.730
so at month one, we had one pair of

00:01:18.730 --> 00:01:22.290
rabbits. At month two, well, we have the one pair

00:01:22.290 --> 00:01:24.780
we started with. And now we have a new pair.

00:01:24.780 --> 00:01:28.280
We have two pairs of rabbits. And now at month

00:01:28.280 --> 00:01:31.850
three the baby rabbits aren't yet ready to produce offspring.

00:01:31.850 --> 00:01:34.240
It takes a month for the rabbits to reach maturity.

00:01:34.240 --> 00:01:37.530
But these two will produce new offspring each month. So

00:01:37.530 --> 00:01:40.460
we have one new pair of baby rabbits and the

00:01:40.460 --> 00:01:42.590
rabbits that were born in month two, well they've had

00:01:42.590 --> 00:01:47.160
a month to get bigger. So now, they're mature rabbits.

00:01:47.160 --> 00:01:48.930
So we had three pairs at the end of month

00:01:48.930 --> 00:01:51.650
three. So month four we still have the three pairs of

00:01:51.650 --> 00:01:55.360
rabbits we had, rabbits never die in this model, and

00:01:55.360 --> 00:01:58.320
the two pairs that are mature, both of those will now

00:01:58.320 --> 00:02:02.180
produce new rabbits. So we have two new pairs of

00:02:02.180 --> 00:02:05.850
baby rabbits. The baby rabbits that were born in month three,

00:02:05.850 --> 00:02:08.610
well now those are mature. So now we have

00:02:08.610 --> 00:02:12.630
three pairs of mature rabbits, and two pairs of baby

00:02:12.630 --> 00:02:15.830
rabbits, so we have five pairs of rabbits total. And

00:02:15.830 --> 00:02:18.370
this keeps going, so the model assumed that rabbits never

00:02:18.370 --> 00:02:21.820
die, that every month each pair of mature rabbits

00:02:21.820 --> 00:02:24.690
produces a new pair of rabbit babies. And it takes

00:02:24.690 --> 00:02:27.060
one month for a pair of rabbits that spawn, to

00:02:27.060 --> 00:02:30.880
become mature. So in month five, the three mature pairs

00:02:30.880 --> 00:02:36.010
of rabbits, will all produce new offspring. New offspring,

00:02:36.010 --> 00:02:39.230
new offspring, three new offspring. And the two that

00:02:39.230 --> 00:02:40.910
are a month old, that were born in month

00:02:40.910 --> 00:02:44.020
four, now become mature. So this isn't a very

00:02:44.020 --> 00:02:47.870
accurate model of how rabbits reproduce. It's good for

00:02:47.870 --> 00:02:49.770
us, if it was an accurate model, it would

00:02:49.770 --> 00:02:52.270
only take a few years for rabbits to control

00:02:52.270 --> 00:02:56.570
the entire planet. But it's an interesting mathematical model.

00:02:56.570 --> 00:03:00.280
And the model that this poses, we can write in

00:03:00.280 --> 00:03:03.570
a more formal way. So, the number of rabbits is

00:03:03.570 --> 00:03:06.080
the number of rabbits we had in the previous month,

00:03:06.080 --> 00:03:08.750
since those rabbits don't want to die. So in month five,

00:03:08.750 --> 00:03:10.710
we have the five pairs that we had in the

00:03:10.710 --> 00:03:14.770
previous month, plus all of the rabbits that were mature, meaning,

00:03:14.770 --> 00:03:18.320
all of the rabbits that we had, two months ago,

00:03:18.320 --> 00:03:22.980
which was three if we're on month five while those reproduce.

00:03:22.980 --> 00:03:25.470
So we have three new pairs of rabbits, plus

00:03:25.470 --> 00:03:27.730
the five that we have in the previous month. And

00:03:27.730 --> 00:03:30.546
this keeps going. So we could in month six, we're

00:03:30.546 --> 00:03:33.580
going to have the eight rabbits that we had at the

00:03:33.580 --> 00:03:37.805
end of month five, plus the five mature pairs,

00:03:37.805 --> 00:03:40.800
one, two, three, four, five, will each reproduce. So we'll

00:03:40.800 --> 00:03:43.570
have five new pairs, and that will give us 13

00:03:43.570 --> 00:03:48.780
pairs of rabbits. So this was the model fibonacci developed.

00:03:48.780 --> 00:03:50.790
And the question is, can you figure out, at the end

00:03:50.790 --> 00:03:54.052
of month n, given any number n, how many rabbits will

00:03:54.052 --> 00:03:56.790
there be? So the way we define this mathematically is a

00:03:56.790 --> 00:04:00.850
little different from the way, fibonacci posed the question. And that's

00:04:00.850 --> 00:04:05.550
because in modern mathematics, we usually like our series to start

00:04:05.550 --> 00:04:08.680
with a zero. If we are thinking of modeling rabbits, well

00:04:08.680 --> 00:04:11.400
that doesn't quite make sense to start with zero rabbits. But

00:04:11.400 --> 00:04:13.760
if we're thinking of it as a more general series, it does.

00:04:13.760 --> 00:04:15.570
So the way it's defined mathematically is that

00:04:15.570 --> 00:04:19.769
we say that the fibonacci number zero, is defined

00:04:19.769 --> 00:04:24.610
as zero. Fibonacci number one is defined as one,

00:04:24.610 --> 00:04:27.080
and those are our two base cases. So this

00:04:27.080 --> 00:04:30.170
is different from the other recursive definitions we've seen

00:04:30.170 --> 00:04:32.850
in that the two base cases. Previously, all of

00:04:32.850 --> 00:04:35.600
our definitions just had one base case. And then

00:04:35.600 --> 00:04:38.920
we can define every other fibonacci number, but first

00:04:38.920 --> 00:04:43.500
we'll be starting from these base cases. And so, the fibonacci number n,

00:04:44.900 --> 00:04:49.740
where n is some whole number greater than one, is, well we

00:04:49.740 --> 00:04:54.340
have all the rabbits in the previous month. So, that's fibonacci of n minus 1,

00:04:54.340 --> 00:04:57.040
plus, all the new babies. And the number of new

00:04:57.040 --> 00:04:59.290
babies is the number of rabbits we had two months

00:04:59.290 --> 00:05:02.080
ago, those are all the mature rabbits. That gets added

00:05:02.080 --> 00:05:04.390
to the number of rabbits we had the previous month.

00:05:04.390 --> 00:05:08.520
So that's how we define fibonacci numbers. This defines every fibonacci number

00:05:08.520 --> 00:05:12.330
in terms of the two base cases, and in the one recursive case.

00:05:16.190 --> 00:05:19.540
So, your goal is to define a procedure called fibonacci.

00:05:19.540 --> 00:05:22.190
That takes a natural number as input. So, numbers starting

00:05:22.190 --> 00:05:25.470
from 0, any whole number 0 or higher, and outputs

00:05:25.470 --> 00:05:30.530
the value of that fibonacci number, defined using this recursive definition.

