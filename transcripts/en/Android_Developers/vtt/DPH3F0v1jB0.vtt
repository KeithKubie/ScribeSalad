WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.297
[MUSIC PLAYING]

00:00:07.515 --> 00:00:08.390
CAMERON KETCHAM: Hey.

00:00:08.390 --> 00:00:10.060
My name is Cameron Ketchum.

00:00:10.060 --> 00:00:12.040
I work on the Material
Design Components

00:00:12.040 --> 00:00:15.070
Team, or MDC Android for short.

00:00:15.070 --> 00:00:17.414
And I work out of the
New York City office.

00:00:17.414 --> 00:00:19.330
GAUTHAM SAJITH: And my
name is Gautham Sajith.

00:00:19.330 --> 00:00:20.860
I also work on MDC Android.

00:00:20.860 --> 00:00:22.492
And I'm based in San Francisco.

00:00:22.492 --> 00:00:24.700
CAMERON KETCHAM: And we're
going to talk a little bit

00:00:24.700 --> 00:00:29.350
about Material Design Components
and how you can theme your app.

00:00:29.350 --> 00:00:31.960
So quickly, what we're
going to discuss.

00:00:31.960 --> 00:00:35.350
A brief history of Material
Design, what Material Theming

00:00:35.350 --> 00:00:40.000
is, using Material Design
Components, the Color, Type,

00:00:40.000 --> 00:00:44.170
and Shape subsystems, how to
apply these subsystems, as well

00:00:44.170 --> 00:00:48.370
as our release process, and a
little bit about contributing.

00:00:48.370 --> 00:00:52.240
So quickly, just a brief history
of Material Design Library.

00:00:52.240 --> 00:00:55.270
Material Design was
first announced in 2014.

00:00:55.270 --> 00:00:57.466
And there wasn't
a Design Library.

00:00:57.466 --> 00:01:01.480
Then at I/O in 2015, a
year later, Google finally

00:01:01.480 --> 00:01:03.220
announced the Design
Support Library,

00:01:03.220 --> 00:01:05.200
which helped bring a
lot of code for Material

00:01:05.200 --> 00:01:08.410
Design for certain
components, including

00:01:08.410 --> 00:01:10.920
Navigation Drawer,
Floating Action Button,

00:01:10.920 --> 00:01:13.010
Snack Bar, et cetera.

00:01:13.010 --> 00:01:15.610
But there still
wasn't that much.

00:01:15.610 --> 00:01:19.360
And at I/O this year, we
announced Material Theming,

00:01:19.360 --> 00:01:22.180
with the explicit goal to
have a larger engineering

00:01:22.180 --> 00:01:22.960
team behind it.

00:01:22.960 --> 00:01:28.300
So we're working on implementing
a lot of the components,

00:01:28.300 --> 00:01:32.020
based on the
Material Design spec.

00:01:32.020 --> 00:01:34.330
So Material Theming.

00:01:34.330 --> 00:01:36.550
What was the original
problem with Material Design?

00:01:36.550 --> 00:01:40.090
Well, it was a great initial
version of a design system.

00:01:40.090 --> 00:01:41.500
It worked well in
a lot of cases.

00:01:41.500 --> 00:01:44.740
But it fell short with
the expression of brand.

00:01:44.740 --> 00:01:48.370
So here's an example
of an email app.

00:01:48.370 --> 00:01:50.650
And it looks kind of
like every other app

00:01:50.650 --> 00:01:52.030
that use Material Design.

00:01:52.030 --> 00:01:55.210
And it's kind of hard to tell
that it's even an email app,

00:01:55.210 --> 00:01:57.430
in my opinion.

00:01:57.430 --> 00:02:00.150
Here's an example of
the kinds of things

00:02:00.150 --> 00:02:01.920
that you can do with
Material Theming

00:02:01.920 --> 00:02:03.630
to make your app stand out.

00:02:03.630 --> 00:02:08.340
And we're going to get into
those details in a bit.

00:02:08.340 --> 00:02:11.400
So quickly, how
does theming work?

00:02:11.400 --> 00:02:13.860
Basically, Material
Theming is a system

00:02:13.860 --> 00:02:15.740
that we've designed
to help you create

00:02:15.740 --> 00:02:18.030
you unique design for your app.

00:02:18.030 --> 00:02:21.310
You just need to decide on a few
things, such as fonts, colors,

00:02:21.310 --> 00:02:22.730
shapes, et cetera.

00:02:22.730 --> 00:02:27.820
And this is a Material Design
sketch plugin that can be used,

00:02:27.820 --> 00:02:30.270
which should help you
create design ideas that you

00:02:30.270 --> 00:02:32.170
can use to build your app.

00:02:32.170 --> 00:02:37.320
Take a look at material.io
for more info about that tool.

00:02:37.320 --> 00:02:39.540
Here's a few Material
studies that we've done,

00:02:39.540 --> 00:02:41.870
which just show examples
of Material Theming.

00:02:41.870 --> 00:02:46.940
And you can see that they
all look quite different.

00:02:46.940 --> 00:02:50.360
And there's also a lot more
of these on material.io.

00:02:53.120 --> 00:02:54.332
GAUTHAM SAJITH: Cool.

00:02:54.332 --> 00:02:56.440
So now let's get
talking about how

00:02:56.440 --> 00:02:58.450
to actually get started
using the Material

00:02:58.450 --> 00:03:00.430
Components Library.

00:03:00.430 --> 00:03:01.930
So imagine this
scenario, that we'll

00:03:01.930 --> 00:03:04.540
come back to a couple of
times throughout this talk.

00:03:04.540 --> 00:03:06.610
You've got this fairly
plain app that you built

00:03:06.610 --> 00:03:08.170
from just straight AppCompat.

00:03:08.170 --> 00:03:10.390
And your teammate asks
you to redesign this

00:03:10.390 --> 00:03:11.980
using the Material Design spec.

00:03:11.980 --> 00:03:14.730
So how do you go
about doing this?

00:03:14.730 --> 00:03:18.040
So you may be familiar with
the Support Library Design

00:03:18.040 --> 00:03:22.060
package, this v28 version, that
you can use to get our library.

00:03:22.060 --> 00:03:23.060
And you can use this.

00:03:23.060 --> 00:03:24.768
However, this is no
longer being updated.

00:03:24.768 --> 00:03:28.240
So you should try and use the
conductgoogle.android Material

00:03:28.240 --> 00:03:30.220
Library, as well as Android X.

00:03:30.220 --> 00:03:30.970
One thing to note.

00:03:30.970 --> 00:03:33.950
You can't use the Conduct
Android Support and Conduct

00:03:33.950 --> 00:03:36.230
Google Android
packages together.

00:03:36.230 --> 00:03:38.760
So if you want to switch
over to Android X,

00:03:38.760 --> 00:03:41.970
there's a nice refactor tool
on the developer.android site

00:03:41.970 --> 00:03:45.270
that'll help you
refactor your app.

00:03:45.270 --> 00:03:47.020
And then, the next
thing you'll need to do

00:03:47.020 --> 00:03:48.330
is use our Material Themes.

00:03:48.330 --> 00:03:51.960
So we provide the themes that
correspond to the existing

00:03:51.960 --> 00:03:53.410
AppCompat themes.

00:03:53.410 --> 00:03:57.280
And these themes provide you
with a range of attributes,

00:03:57.280 --> 00:04:00.399
to help you do some of the
Shape, Color, Type theming

00:04:00.399 --> 00:04:01.940
that we're going to
be talking about,

00:04:01.940 --> 00:04:04.000
as well as the default
styles that you can use

00:04:04.000 --> 00:04:07.000
across all of our components.

00:04:07.000 --> 00:04:10.130
So for example, if your theme
extends from AppCompat Light,

00:04:10.130 --> 00:04:11.710
all you need to
do is switch over

00:04:11.710 --> 00:04:13.591
to
theme.materialcomponents.light.

00:04:13.591 --> 00:04:15.340
And you should have
all of our attributes,

00:04:15.340 --> 00:04:18.327
as well as all of
our component styles.

00:04:18.327 --> 00:04:20.410
So as I mentioned, there's
a lot of new attributes

00:04:20.410 --> 00:04:21.760
that we're going
to be introducing.

00:04:21.760 --> 00:04:23.350
And if you try to
use our components

00:04:23.350 --> 00:04:25.090
without these
attributes defined,

00:04:25.090 --> 00:04:27.995
you're going to get a Theme
Enforcement Error at runtime.

00:04:27.995 --> 00:04:30.620
Pretty much the styles look for
these attributes in your theme.

00:04:30.620 --> 00:04:33.470
And if they don't exist, it's
going to crash at runtime.

00:04:33.470 --> 00:04:35.770
So the solution to this is,
of course, use our theme.

00:04:35.770 --> 00:04:37.186
It'll give you all
the attributes.

00:04:37.186 --> 00:04:39.647
If you're not quite ready to
switch over to our full theme

00:04:39.647 --> 00:04:41.980
quite yet-- you just want to
get the attributes and none

00:04:41.980 --> 00:04:43.360
of the styles--

00:04:43.360 --> 00:04:45.430
you can use what are
called the Bridge themes.

00:04:45.430 --> 00:04:47.380
And what these Bridge themes
do is they provide you

00:04:47.380 --> 00:04:49.150
all the attributes you
need to do styling.

00:04:49.150 --> 00:04:51.670
But they don't give you
any of the default styles.

00:04:51.670 --> 00:04:54.160
So you can opt into using our
component styles one by one,

00:04:54.160 --> 00:04:57.400
as you're ready to switch over.

00:04:57.400 --> 00:04:59.960
So for example, if you're
extending from a Bridge theme,

00:04:59.960 --> 00:05:02.652
and you want to opt in to
use our BottomAppBar style,

00:05:02.652 --> 00:05:04.610
you would define the
default BottomAppBar style

00:05:04.610 --> 00:05:05.504
in your theme.

00:05:05.504 --> 00:05:06.920
And then all of
your BottomAppBars

00:05:06.920 --> 00:05:08.545
would get the Material
Component style.

00:05:11.792 --> 00:05:13.250
CAMERON KETCHAM:
So now, we're just

00:05:13.250 --> 00:05:15.910
going to talk a little bit
about some new components.

00:05:15.910 --> 00:05:19.640
With Material Theming, we
introduced a few new things,

00:05:19.640 --> 00:05:21.761
such as the BottomAppBar.

00:05:21.761 --> 00:05:24.757
BottomAppBar displays
navigation and key actions

00:05:24.757 --> 00:05:26.090
at the bottom of mobile screens.

00:05:26.090 --> 00:05:28.640
Which is great for people
who are just one-handed,

00:05:28.640 --> 00:05:33.020
using their thumb to
interact with the device.

00:05:33.020 --> 00:05:34.440
It's pretty simple.

00:05:34.440 --> 00:05:36.740
It uses a Coordinator
Layout, to coordinate

00:05:36.740 --> 00:05:38.720
the motion between
a BottomAppBar

00:05:38.720 --> 00:05:41.620
and a Floating Action Button.

00:05:41.620 --> 00:05:46.002
So here, we just have simple
XML for the BottomAppBar.

00:05:46.002 --> 00:05:47.460
A few of the things
that you can do

00:05:47.460 --> 00:05:50.580
is set the vertical
offset of the FAB.

00:05:50.580 --> 00:05:53.620
You can also set the
FAB Cradle Margin,

00:05:53.620 --> 00:05:57.330
which is the distance between
the FAB and the BottomAppBar.

00:05:57.330 --> 00:05:59.520
As well as the
Rounded Corner Radius,

00:05:59.520 --> 00:06:05.420
which is the corner where the
BottomAppBar meets the FAB.

00:06:05.420 --> 00:06:09.090
You can have the
BottomAppBar hide on scroll.

00:06:09.090 --> 00:06:12.060
And you can also set
this Alignment Mode.

00:06:12.060 --> 00:06:14.521
It will automatically
animate the FAB for you.

00:06:14.521 --> 00:06:16.020
And it's useful if
you're navigating

00:06:16.020 --> 00:06:17.550
between different
fragments or views

00:06:17.550 --> 00:06:19.091
and want to give a
visual distinction

00:06:19.091 --> 00:06:21.550
between different screens.

00:06:21.550 --> 00:06:23.230
If you're already
using a toolbar,

00:06:23.230 --> 00:06:27.636
it's super easy to start
using the BottomAppBar.

00:06:27.636 --> 00:06:30.010
If you're setting the Support
Action Bar for the toolbar,

00:06:30.010 --> 00:06:31.990
just set it for the
BottomAppBar instead.

00:06:31.990 --> 00:06:34.465
And everything else
works the same way.

00:06:34.465 --> 00:06:38.470
But you can also use an On Menu
Item Click Listener directly

00:06:38.470 --> 00:06:39.430
on the BottomAppBar.

00:06:42.992 --> 00:06:44.450
GAUTHAM SAJITH: We
also have what's

00:06:44.450 --> 00:06:46.550
a revamped version of
the Button that we're

00:06:46.550 --> 00:06:48.320
calling Material Button.

00:06:48.320 --> 00:06:50.600
It's been revamped to
make styling much simpler.

00:06:53.650 --> 00:06:56.980
So if you just put this Material
Button component in your XML,

00:06:56.980 --> 00:06:59.490
you'll get a styled Button.

00:06:59.490 --> 00:07:01.230
However, if you're
using our full theme,

00:07:01.230 --> 00:07:04.380
you can actually just use
a Button tag in your XML.

00:07:04.380 --> 00:07:06.824
And we do what's called
Custom View Inflation, where

00:07:06.824 --> 00:07:09.240
this tag will automatically
inflate into a Material Button

00:07:09.240 --> 00:07:10.777
tag.

00:07:10.777 --> 00:07:12.860
And then of course, you
can set the disabled state

00:07:12.860 --> 00:07:13.485
on this Button.

00:07:13.485 --> 00:07:15.260
And all the states
will transfer over.

00:07:15.260 --> 00:07:17.642
Colors will transfer over.

00:07:17.642 --> 00:07:19.100
You can set an icon
on this Button,

00:07:19.100 --> 00:07:22.520
just by setting the icon
attribute, as well as this icon

00:07:22.520 --> 00:07:23.510
style.

00:07:23.510 --> 00:07:24.740
And this style's optional.

00:07:24.740 --> 00:07:27.410
But what it'll do is it'll
adjust the padding slightly,

00:07:27.410 --> 00:07:30.230
to achieve a more even
visual balance on the Button

00:07:30.230 --> 00:07:32.470
when the icon is present.

00:07:32.470 --> 00:07:36.195
You can change the icon size,
just using the attribute.

00:07:36.195 --> 00:07:38.250
You can set the Outline
Button style, which

00:07:38.250 --> 00:07:39.749
is one of the default
styles that we

00:07:39.749 --> 00:07:43.770
provide for this Button, to get
this hairline outline Button.

00:07:43.770 --> 00:07:46.140
You can set the background
tint of the Button,

00:07:46.140 --> 00:07:48.240
by setting the Background
Tint attribute.

00:07:48.240 --> 00:07:50.587
And you can provide a
color state list here.

00:07:50.587 --> 00:07:52.920
So in this case, it's purple
when the Button is enabled,

00:07:52.920 --> 00:07:55.810
and gray when it's disabled.

00:07:55.810 --> 00:07:57.460
You can set some
other attributes,

00:07:57.460 --> 00:07:59.352
such as Stroke
Width, Stroke Color,

00:07:59.352 --> 00:08:01.435
Corner Radius on this
button, to get some styling.

00:08:04.140 --> 00:08:07.470
You can also create just
an icon-only Button.

00:08:07.470 --> 00:08:09.350
In this case, we're
setting the icon,

00:08:09.350 --> 00:08:11.240
as well as setting the
icon padding to zero,

00:08:11.240 --> 00:08:13.790
so that the icon is
centered in the Button.

00:08:13.790 --> 00:08:16.100
And we're also setting in
the content description

00:08:16.100 --> 00:08:16.740
on this Button.

00:08:16.740 --> 00:08:19.010
So since there's no text,
for accessibility reasons,

00:08:19.010 --> 00:08:20.551
you should set a
content description,

00:08:20.551 --> 00:08:24.410
so that people will know
what the Button's about.

00:08:24.410 --> 00:08:26.670
You can also set the
Ripple color on the Button.

00:08:26.670 --> 00:08:29.749
So for example, if you just
set purple Ripple on here,

00:08:29.749 --> 00:08:31.040
it'll be applied to the Button.

00:08:31.040 --> 00:08:35.380
You can set either a color state
list or just a hex value here.

00:08:35.380 --> 00:08:37.880
And as you can see, it's like
a purple Ripple on the button.

00:08:37.880 --> 00:08:39.919
But that's because there's
some alpha already inherent

00:08:39.919 --> 00:08:40.710
in the Ripple.

00:08:40.710 --> 00:08:45.544
So it's a purple Ripple
on top of a green Button.

00:08:45.544 --> 00:08:46.960
And these are some
of the examples

00:08:46.960 --> 00:08:49.293
of the other components that
we provide in this library.

00:08:49.293 --> 00:08:51.392
We have several different
styles of Chips.

00:08:51.392 --> 00:08:53.350
We have text fields with
the filled and outline

00:08:53.350 --> 00:08:56.270
styles, password show and hide
functionality and a character

00:08:56.270 --> 00:08:56.770
counter.

00:08:56.770 --> 00:08:59.121
And then we have some highly
customizable tab layouts

00:08:59.121 --> 00:08:59.620
as well.

00:09:02.296 --> 00:09:03.640
CAMERON KETCHAM: OK.

00:09:03.640 --> 00:09:06.980
Now a little bit about theming.

00:09:06.980 --> 00:09:11.240
MDC relies heavily on the
built-in theming of Android.

00:09:11.240 --> 00:09:17.480
So here's just a quick refresher
of how themes and styles work.

00:09:17.480 --> 00:09:21.020
Anything applied directly to
a view in XML is used first.

00:09:21.020 --> 00:09:23.540
So changing an
attribute here will only

00:09:23.540 --> 00:09:27.290
change the single view.

00:09:27.290 --> 00:09:31.320
You can also update the style.

00:09:31.320 --> 00:09:35.930
So if you set an attribute
in a style, changing

00:09:35.930 --> 00:09:39.845
this here will affect any views
that are using this style.

00:09:42.375 --> 00:09:47.320
If it's not defined in the
style, or there's no style set,

00:09:47.320 --> 00:09:49.070
it'll go back to
the default style.

00:09:49.070 --> 00:09:52.980
So here, if you want
to change the way

00:09:52.980 --> 00:09:55.270
a whole group of
components look,

00:09:55.270 --> 00:09:58.490
you can set the default style.

00:09:58.490 --> 00:10:01.060
And finally, if the attribute
isn't defined anywhere else,

00:10:01.060 --> 00:10:03.110
it'll look in the theme.

00:10:03.110 --> 00:10:05.140
And the way Material
Theming works normally

00:10:05.140 --> 00:10:07.300
is there's a set of
top-level attributes

00:10:07.300 --> 00:10:10.730
that you should override in your
theme for typography, colors,

00:10:10.730 --> 00:10:12.040
shapes, et cetera.

00:10:12.040 --> 00:10:14.880
And also the default styles
for all of the components.

00:10:14.880 --> 00:10:16.630
But if you need more
fine-grained control,

00:10:16.630 --> 00:10:19.090
you can hook in in
any of these layers

00:10:19.090 --> 00:10:22.570
and change just the
color of a single view,

00:10:22.570 --> 00:10:26.920
or just the color of all
of a certain component.

00:10:26.920 --> 00:10:31.770
So here's an example from our
library of the Chip style.

00:10:31.770 --> 00:10:34.840
It defines a few values which
reference theme attributes.

00:10:34.840 --> 00:10:37.270
And the power of this
design comes from the fact

00:10:37.270 --> 00:10:39.730
that other styles in our
library can reference

00:10:39.730 --> 00:10:40.730
these same attributes.

00:10:40.730 --> 00:10:43.090
So here's an
example of a Button.

00:10:43.090 --> 00:10:46.470
And both of these have
the same shape appearance,

00:10:46.470 --> 00:10:48.970
which is the Small
Component Shape Appearance.

00:10:48.970 --> 00:10:51.550
That means that if we
want to update the look

00:10:51.550 --> 00:10:53.710
and feel of our app
for these shape--

00:10:53.710 --> 00:10:56.110
for these small components,
all we have to do

00:10:56.110 --> 00:10:59.500
is update this attribute
in one place in our theme.

00:10:59.500 --> 00:11:02.290
And we'll show you an example of
how to do that in a little bit.

00:11:04.940 --> 00:11:07.670
What are the effects of each
of these theme attributes?

00:11:07.670 --> 00:11:10.470
Unfortunately, it's not
totally straightforward.

00:11:10.470 --> 00:11:14.360
We try to apply theme attributes
in a way that will make sense.

00:11:14.360 --> 00:11:15.860
But it's definitely
possible for you

00:11:15.860 --> 00:11:18.290
to pick values for
different colors that

00:11:18.290 --> 00:11:21.200
may not look great together.

00:11:21.200 --> 00:11:23.750
You should probably check out
material.io for each component

00:11:23.750 --> 00:11:25.770
to see how it'll all react.

00:11:25.770 --> 00:11:27.680
But another simple possible--

00:11:27.680 --> 00:11:29.720
another simple solution
that you could do,

00:11:29.720 --> 00:11:32.450
potentially, is to make
a debug theme, which

00:11:32.450 --> 00:11:35.660
just sets wacky values
to different attributes.

00:11:35.660 --> 00:11:37.680
And then see how things look.

00:11:37.680 --> 00:11:41.390
But for instance, here's
the BottomAppBar page

00:11:41.390 --> 00:11:43.700
on the material.io site.

00:11:43.700 --> 00:11:51.050
And you can see there that the
container itself is a surface.

00:11:51.050 --> 00:11:55.484
And the icons are
the On Surface.

00:11:55.484 --> 00:11:58.090
And we'll talk about
what attributes

00:11:58.090 --> 00:12:00.100
you can modify, as well
as things to look out

00:12:00.100 --> 00:12:02.402
for in the next section.

00:12:02.402 --> 00:12:04.940
So theming subsystems.

00:12:04.940 --> 00:12:08.600
We currently have three theming
subsystems, Type, Color,

00:12:08.600 --> 00:12:09.470
and Shape.

00:12:09.470 --> 00:12:11.600
And these are the knobs
that you, as a developer,

00:12:11.600 --> 00:12:16.140
should tweak in order
to theme your app.

00:12:16.140 --> 00:12:19.520
Hopefully, most of you are
familiar with text appearances.

00:12:19.520 --> 00:12:22.020
But we've incorporated
Material Theming,

00:12:22.020 --> 00:12:26.490
which uses theme attributes,
to reference these text

00:12:26.490 --> 00:12:27.130
appearances.

00:12:27.130 --> 00:12:29.860
So here's an
example of a toolbar

00:12:29.860 --> 00:12:35.430
which uses the Headline Six
attribute, rather than style

00:12:35.430 --> 00:12:36.680
directly.

00:12:36.680 --> 00:12:41.400
And here is some copy that
uses the Body One attribute.

00:12:41.400 --> 00:12:44.370
These are the type attributes
that we've defined.

00:12:44.370 --> 00:12:46.950
So if you override any
of these in your theme,

00:12:46.950 --> 00:12:50.760
you can set the style
and look of your app.

00:12:53.780 --> 00:12:55.100
Color's another one.

00:12:55.100 --> 00:12:58.010
And you're probably familiar
with the AppCompat Color

00:12:58.010 --> 00:12:59.780
Primary and Color Accent.

00:12:59.780 --> 00:13:03.650
For Material Theming, we
have a wider range of colors,

00:13:03.650 --> 00:13:05.540
so that you have more
control over the color

00:13:05.540 --> 00:13:07.860
of different parts of your app.

00:13:07.860 --> 00:13:11.300
These are the semantic names of
the expanded palette of colors

00:13:11.300 --> 00:13:13.940
that work with Color Theming.

00:13:13.940 --> 00:13:16.520
On the top here, we have
Primary, Primary Variant,

00:13:16.520 --> 00:13:17.900
Secondary, Secondary Variant.

00:13:17.900 --> 00:13:20.960
Those are all the brand colors.

00:13:20.960 --> 00:13:24.110
Those are the things that
you should generally theme

00:13:24.110 --> 00:13:26.060
to be the style of your app.

00:13:26.060 --> 00:13:29.090
There's also a Background,
Surface, and Error colors.

00:13:29.090 --> 00:13:32.150
You can style those, but you
don't necessarily have to.

00:13:32.150 --> 00:13:35.060
And then, the On
Primary, On Secondary--

00:13:35.060 --> 00:13:36.830
those On variant of colors--

00:13:36.830 --> 00:13:39.440
those need to be accessible
when they're drawn

00:13:39.440 --> 00:13:41.960
on top of the other color.

00:13:41.960 --> 00:13:44.000
So for instance,
On Primary, that

00:13:44.000 --> 00:13:46.935
will be drawn on top
of the Primary colors.

00:13:46.935 --> 00:13:48.560
So if you have text
that's shown on top

00:13:48.560 --> 00:13:52.790
of the Primary background, it
should be the On Primary color.

00:13:55.460 --> 00:13:58.340
These are the color
attributes that we've defined.

00:13:58.340 --> 00:14:00.820
You can see that there's
a lot of new ones.

00:14:00.820 --> 00:14:04.060
We tried to reuse some
that came from AppCompat.

00:14:04.060 --> 00:14:07.575
And we also have the Android
Color Background that we use,

00:14:07.575 --> 00:14:08.950
which is just the
regular Android

00:14:08.950 --> 00:14:11.650
version of that attribute.

00:14:11.650 --> 00:14:15.830
Shape is another subsystem
that you can theme.

00:14:15.830 --> 00:14:18.910
And it all happens with
MaterialShapeDrawable.

00:14:18.910 --> 00:14:21.490
So we're adding
MaterialShapeDrawable

00:14:21.490 --> 00:14:23.890
as the background for
shape themable components,

00:14:23.890 --> 00:14:27.730
such as Buttons, Cards, FAB,
BottomAppBar, BottomSheet,

00:14:27.730 --> 00:14:29.740
Chips, et cetera.

00:14:29.740 --> 00:14:32.720
And the way it works is with
edge and corner treatments.

00:14:32.720 --> 00:14:34.990
So we have edge and
corner treatments

00:14:34.990 --> 00:14:37.900
defined for rounded
and cut corner, which

00:14:37.900 --> 00:14:41.770
is pretty much every Button
or interactable component

00:14:41.770 --> 00:14:43.090
that you're going to find.

00:14:43.090 --> 00:14:47.960
But you can always
create your own as well.

00:14:47.960 --> 00:14:50.500
So here's an example
of Kotlin code,

00:14:50.500 --> 00:14:54.160
which defines a rounded
corner treatment.

00:14:54.160 --> 00:14:56.770
And sets that to the
MaterialShapeDrawable

00:14:56.770 --> 00:14:59.996
to apply just rounded
corners to everything.

00:14:59.996 --> 00:15:02.870
And here is the XML
version as well.

00:15:02.870 --> 00:15:06.160
So if you want to
do it in XML, we

00:15:06.160 --> 00:15:08.830
have a new attribute
called Shape Appearance.

00:15:08.830 --> 00:15:12.370
And it's similar to
the Text Appearance.

00:15:12.370 --> 00:15:15.200
The attributes here are the
Corner Family and the Corner

00:15:15.200 --> 00:15:15.700
Size.

00:15:15.700 --> 00:15:20.245
And this sets it to be a rounded
corner with 24 dp radius.

00:15:23.860 --> 00:15:25.630
And you can override
individual corners.

00:15:25.630 --> 00:15:28.120
So here, we're just
overriding the top left corner

00:15:28.120 --> 00:15:29.920
to be cut and the
bottom right corner

00:15:29.920 --> 00:15:31.900
to have a corner size of zero.

00:15:31.900 --> 00:15:34.370
And you can do the
same thing in XML.

00:15:34.370 --> 00:15:37.330
One thing to notice is that
we're using a Shape Appearance

00:15:37.330 --> 00:15:40.120
Overlay here, which is
basically the same thing.

00:15:40.120 --> 00:15:43.690
Except for we only
define the attributes

00:15:43.690 --> 00:15:46.100
that we want to override.

00:15:46.100 --> 00:15:49.650
So it's similar to a theme
overlay, in that the Material

00:15:49.650 --> 00:15:52.580
Button on its own already has
a shape appearance by default.

00:15:52.580 --> 00:15:55.030
And here, we're just
setting the top left corner

00:15:55.030 --> 00:15:58.060
to be cut and the bottom
right corner to be zero dp.

00:15:58.060 --> 00:16:00.580
Everything else will be
inherited from the style

00:16:00.580 --> 00:16:03.900
of the Material Button.

00:16:03.900 --> 00:16:05.670
One key idea of
Material Theming is

00:16:05.670 --> 00:16:07.150
to add consistency to your app.

00:16:07.150 --> 00:16:10.080
So we've defined these
shape mappings to help.

00:16:10.080 --> 00:16:12.420
These are different
groups of components

00:16:12.420 --> 00:16:14.920
that can help give your
app a more consistent look

00:16:14.920 --> 00:16:17.850
and feel, by connecting
surfaces through shape.

00:16:17.850 --> 00:16:22.236
So there's small, medium,
and large components.

00:16:22.236 --> 00:16:25.420
And these are the attributes
that you can set in your theme.

00:16:25.420 --> 00:16:28.500
So if you want to restyle
all the small components

00:16:28.500 --> 00:16:31.620
to have a cut right corner or
something, you can do that.

00:16:34.530 --> 00:16:37.450
Here's an example
where, just like I said,

00:16:37.450 --> 00:16:41.170
we're overriding the
small component style.

00:16:41.170 --> 00:16:45.780
So we redefined the
small appearance--

00:16:45.780 --> 00:16:49.720
the Small Component Shape
Appearance in the theme

00:16:49.720 --> 00:16:51.310
to our style.

00:16:51.310 --> 00:16:55.160
And here, we're setting the
top right corner to be cut.

00:16:55.160 --> 00:16:57.580
And we're also setting
the parent here,

00:16:57.580 --> 00:17:00.450
so that will inherit
all of the other--

00:17:00.450 --> 00:17:04.760
the rounded corners
for the other parts.

00:17:04.760 --> 00:17:07.910
Shadow is something that
we want to mention as well.

00:17:07.910 --> 00:17:11.210
Native elevation is
supported for convex shapes

00:17:11.210 --> 00:17:14.089
on lollipop for API 21 and up.

00:17:14.089 --> 00:17:20.329
But we're backporting shadows
to an API of 15 for both concave

00:17:20.329 --> 00:17:23.210
and convex shapes
for common cases,

00:17:23.210 --> 00:17:26.180
such as rounded or cut
corners, as well as

00:17:26.180 --> 00:17:28.010
for the BottomAppBar.

00:17:28.010 --> 00:17:31.460
Because this has the
cutout inside of it,

00:17:31.460 --> 00:17:33.230
it won't get native shadows.

00:17:33.230 --> 00:17:35.810
So we fake the shadow
with a gradient.

00:17:38.215 --> 00:17:39.590
GAUTHAM SAJITH:
So now that we've

00:17:39.590 --> 00:17:41.420
heard a bit about our
theming subsystems,

00:17:41.420 --> 00:17:44.312
let's look at how to actually
apply those to your app.

00:17:44.312 --> 00:17:46.080
So coming back to
this scenario again.

00:17:46.080 --> 00:17:49.010
Say you have this AppCompat
app that you want to apply some

00:17:49.010 --> 00:17:50.325
of these theming subsystems to.

00:17:50.325 --> 00:17:51.950
So we're going to be
building something

00:17:51.950 --> 00:17:53.747
that looks a little like this.

00:17:53.747 --> 00:17:55.580
And obviously, when you
build your own apps,

00:17:55.580 --> 00:17:58.100
it'll look much more beautiful
and cohesive than this.

00:17:58.100 --> 00:18:00.230
But we're tweaking
as many knobs as we

00:18:00.230 --> 00:18:03.950
can to show you some of the
functionality of what we built.

00:18:03.950 --> 00:18:05.630
So first thing
you'd have to do is

00:18:05.630 --> 00:18:08.120
if you're using an AppCompat
Light No Action Bar theme,

00:18:08.120 --> 00:18:10.499
you can switch over to the
Material Components theme.

00:18:10.499 --> 00:18:13.040
And in this case, you'll notice
we're using the Bridge theme,

00:18:13.040 --> 00:18:15.350
because we want to opt
into using those components

00:18:15.350 --> 00:18:16.580
one by one.

00:18:16.580 --> 00:18:18.080
But generally, we
recommend that you

00:18:18.080 --> 00:18:19.913
switch to the full
theme, the Regular theme,

00:18:19.913 --> 00:18:22.250
and see how it looks first
before trying out the Bridge

00:18:22.250 --> 00:18:22.749
theme.

00:18:25.040 --> 00:18:27.280
So let's say, first
thing you do is

00:18:27.280 --> 00:18:29.577
you set these theme
Color attributes.

00:18:29.577 --> 00:18:31.660
So some of the existing
ones that you already know

00:18:31.660 --> 00:18:33.670
are Color Primary
and Color Secondary.

00:18:33.670 --> 00:18:34.526
Those still exist.

00:18:34.526 --> 00:18:37.150
And then, some of the new theme
Color attributes, such as Color

00:18:37.150 --> 00:18:40.510
On Primary, On Secondary, Color
Surface, and Color On Surface

00:18:40.510 --> 00:18:41.546
are also set.

00:18:41.546 --> 00:18:44.170
You'll see this Color Secondary
doesn't really show up anywhere

00:18:44.170 --> 00:18:47.900
in your app yet, but it will.

00:18:47.900 --> 00:18:50.420
Next thing we want to do
is get Material Buttons.

00:18:50.420 --> 00:18:52.510
So before we had those
AppCompat Buttons.

00:18:52.510 --> 00:18:55.670
And then if you set the Material
Button style in your theme,

00:18:55.670 --> 00:18:59.050
all of your Buttons should
turn into Material Buttons

00:18:59.050 --> 00:19:01.300
when you change the XML tag.

00:19:01.300 --> 00:19:03.550
As I mentioned before, if
you're using our full theme,

00:19:03.550 --> 00:19:05.270
this inflation
happens automatically.

00:19:05.270 --> 00:19:09.296
So you don't actually have
to change this XML at all.

00:19:09.296 --> 00:19:10.920
We have a bunch of
other default styles

00:19:10.920 --> 00:19:12.021
that we've laid out here.

00:19:12.021 --> 00:19:13.770
All of our components
have a default style

00:19:13.770 --> 00:19:15.120
that you can set in the theme.

00:19:15.120 --> 00:19:19.542
It's generally just
component name plus style.

00:19:19.542 --> 00:19:21.500
For example, if you want
to set the Card style,

00:19:21.500 --> 00:19:24.110
you would set Material Card
View Style in your theme.

00:19:24.110 --> 00:19:26.030
And then, we're going
to be applying--

00:19:26.030 --> 00:19:27.530
you should also
change the Card View

00:19:27.530 --> 00:19:29.980
to Material Card View in
this case in your XML.

00:19:29.980 --> 00:19:32.270
And then we're going to be
applying some attributes

00:19:32.270 --> 00:19:33.070
to these Cards.

00:19:33.070 --> 00:19:36.110
So for instance, you can set
Card Elevation, Stroke Color,

00:19:36.110 --> 00:19:37.296
and Stroke Width.

00:19:37.296 --> 00:19:39.170
And that'll show up
across all of your Cards,

00:19:39.170 --> 00:19:41.030
because it's setting
the default style.

00:19:41.030 --> 00:19:45.340
And all the Cards look
at this default style.

00:19:45.340 --> 00:19:47.330
And then, say you wanted
to change the base

00:19:47.330 --> 00:19:49.290
style of all the Buttons.

00:19:49.290 --> 00:19:52.160
You would define your own Button
style and set the parents of it

00:19:52.160 --> 00:19:54.950
to Outline Button, which is
one of our default styles.

00:19:54.950 --> 00:19:59.230
And then all of your Buttons
change into Outline Buttons.

00:19:59.230 --> 00:20:01.910
We can now apply some shape
theming to all of your Buttons.

00:20:01.910 --> 00:20:04.580
So we're going to define
this shape Appearance Shape

00:20:04.580 --> 00:20:05.439
to Button style.

00:20:05.439 --> 00:20:06.980
And in that Button
style, we're going

00:20:06.980 --> 00:20:10.940
to set the right corners to be
cut and the left corners to be

00:20:10.940 --> 00:20:11.830
rounded.

00:20:11.830 --> 00:20:13.550
And we're going to
set the corner size.

00:20:13.550 --> 00:20:17.920
And now, you have this
arrow-shaped Button.

00:20:17.920 --> 00:20:20.850
You can also do this using
a Shape Appearance Overlay,

00:20:20.850 --> 00:20:23.354
since Buttons have a
rounded corner by default.

00:20:23.354 --> 00:20:25.020
You don't really have
to set the rounded

00:20:25.020 --> 00:20:26.312
corner for the left side.

00:20:26.312 --> 00:20:28.020
So if you use a Shape
Appearance Overlay,

00:20:28.020 --> 00:20:29.603
you can just set
what you're changing.

00:20:29.603 --> 00:20:31.350
And it'll take effect as normal.

00:20:33.860 --> 00:20:36.350
And then, say we wanted
to have some icon Buttons,

00:20:36.350 --> 00:20:38.780
you would define this
Icon Button style.

00:20:38.780 --> 00:20:42.080
Set the paddings and
min widths as you want.

00:20:42.080 --> 00:20:46.610
And then apply this to your
Button directly in the XML,

00:20:46.610 --> 00:20:49.200
as well as setting that icon
and content description.

00:20:49.200 --> 00:20:51.570
And then you have this
Share icon Button, instead

00:20:51.570 --> 00:20:53.090
of that Share text Button.

00:20:55.820 --> 00:20:58.902
You can also switch over
to the BottomAppBar.

00:20:58.902 --> 00:21:00.860
So for this, you'd have
to set the BottomAppBar

00:21:00.860 --> 00:21:02.480
style in your theme.

00:21:02.480 --> 00:21:05.420
And then, remove the Top App
Bar from your XML layout.

00:21:05.420 --> 00:21:09.492
And add this BottomAppBar here.

00:21:09.492 --> 00:21:11.200
You can also add a
floating action button

00:21:11.200 --> 00:21:14.260
cradled into this BottomAppBar
by adding the floating action

00:21:14.260 --> 00:21:15.490
button to your layout.

00:21:15.490 --> 00:21:17.140
And then setting
the Layout Anchor

00:21:17.140 --> 00:21:20.320
attribute to point to the
ID of the BottomAppBar.

00:21:20.320 --> 00:21:23.290
You'll notice that this FAB has
that teal color from AppCompat.

00:21:23.290 --> 00:21:27.550
And that's because we haven't
set the default floating action

00:21:27.550 --> 00:21:28.780
button style yet.

00:21:28.780 --> 00:21:31.090
So once you set that,
you'll see that it's now

00:21:31.090 --> 00:21:34.020
using Color Secondary
and Color On Secondary.

00:21:34.020 --> 00:21:35.890
And it has that
Ripple effect as well.

00:21:38.920 --> 00:21:42.850
Then we can do some text styling
for the content of our Cards.

00:21:42.850 --> 00:21:45.970
Say you want all of your
text to be Color On Surface,

00:21:45.970 --> 00:21:48.190
rather than whatever
it was previously.

00:21:48.190 --> 00:21:50.440
We're going to be using
what's called a Material Theme

00:21:50.440 --> 00:21:52.639
Overlay, which I'll talk
about in just a second.

00:21:52.639 --> 00:21:54.430
But this Material Theme
Overlay pretty much

00:21:54.430 --> 00:21:58.550
sets the theme for all the
contents of that component.

00:21:58.550 --> 00:22:00.850
So in this case, we're
setting the text Color Primary

00:22:00.850 --> 00:22:05.020
and Tertiary to set the text
color of our Notes here.

00:22:05.020 --> 00:22:07.454
And so Material
Theme Overlay, you

00:22:07.454 --> 00:22:08.870
might have heard
of Android theme.

00:22:08.870 --> 00:22:11.036
It's the way you can style
a subsection of your view

00:22:11.036 --> 00:22:12.060
hierarchy.

00:22:12.060 --> 00:22:13.970
And one common usage
of this is to style

00:22:13.970 --> 00:22:17.140
say a dark-colored
toolbar in your app.

00:22:17.140 --> 00:22:19.040
The shortcoming of
Android theme is that it

00:22:19.040 --> 00:22:20.820
doesn't work in default styles.

00:22:20.820 --> 00:22:24.210
So for instance, if you wanted
to style all of your Cards,

00:22:24.210 --> 00:22:25.732
you can't really
set Android theme.

00:22:25.732 --> 00:22:27.440
So Material Theme
Overlay is an attribute

00:22:27.440 --> 00:22:29.930
that we've defined that's
supported by our components.

00:22:29.930 --> 00:22:31.640
And it does work
in default styles.

00:22:31.640 --> 00:22:33.500
So you can set this
in your default styles

00:22:33.500 --> 00:22:34.430
for your components.

00:22:34.430 --> 00:22:39.990
And have it theme the
subviews of your components.

00:22:39.990 --> 00:22:42.810
Lastly, we'll do some
TextAppearance theming.

00:22:42.810 --> 00:22:46.490
So previously the title had
this hard-coded text appearance

00:22:46.490 --> 00:22:47.330
style.

00:22:47.330 --> 00:22:50.540
Now we're going to be switching
over to our new TextAppearance

00:22:50.540 --> 00:22:52.390
attributes.

00:22:52.390 --> 00:22:57.560
And similarly, for the text--
for the Note body as well.

00:22:57.560 --> 00:23:00.570
And then, we can apply
some styling to this.

00:23:00.570 --> 00:23:03.200
So for example, if you
change Headline Six

00:23:03.200 --> 00:23:05.570
to be Comic Sans
for instance, you

00:23:05.570 --> 00:23:07.580
can change-- all
the components that

00:23:07.580 --> 00:23:09.920
use Headline Six in your app
should now look like this.

00:23:13.189 --> 00:23:15.720
So why go through the
trouble of doing this?

00:23:15.720 --> 00:23:18.870
Why go through the trouble
of using top-level attributes

00:23:18.870 --> 00:23:19.920
throughout your styles?

00:23:19.920 --> 00:23:21.580
What's the reason?

00:23:21.580 --> 00:23:23.970
And generally, we
do this because we

00:23:23.970 --> 00:23:26.460
want to be able to style
your entire app using only

00:23:26.460 --> 00:23:28.050
these top-level attributes.

00:23:28.050 --> 00:23:30.450
So say, for instance, your
teammate came up to you

00:23:30.450 --> 00:23:32.980
and said, "Hey, our brand
colors are changing now.

00:23:32.980 --> 00:23:37.080
So actually we want this maroon
color instead of these blues

00:23:37.080 --> 00:23:37.965
that we had."

00:23:37.965 --> 00:23:39.870
All you'd have to
do is switch some

00:23:39.870 --> 00:23:41.700
of these top-level
color attributes.

00:23:41.700 --> 00:23:44.430
And your whole app is rethemed.

00:23:44.430 --> 00:23:47.790
Similarly, if you want a dark
theme, or a fake dark theme

00:23:47.790 --> 00:23:49.472
of sorts, all you'd
have to do is change

00:23:49.472 --> 00:23:51.180
a couple of these
other Color attributes.

00:23:51.180 --> 00:23:53.910
And the components should all
respond appropriately to that.

00:23:53.910 --> 00:23:55.830
And you have a
different looking app.

00:23:58.032 --> 00:24:00.240
CAMERON KETCHAM: Now we're
going to talk a little bit

00:24:00.240 --> 00:24:02.280
about custom
components, and how you

00:24:02.280 --> 00:24:06.717
can use styles in some of your
components that you've created.

00:24:06.717 --> 00:24:08.550
There's really nothing
magical about the way

00:24:08.550 --> 00:24:10.230
our components use theming.

00:24:10.230 --> 00:24:12.660
It's all just basic
Android theming.

00:24:12.660 --> 00:24:16.210
So you can use it in
your components as well.

00:24:16.210 --> 00:24:18.180
You just have to
create a default style,

00:24:18.180 --> 00:24:20.250
pass that default
style attribute

00:24:20.250 --> 00:24:24.670
into your constructor, and
use Obtain Styled Attributes.

00:24:24.670 --> 00:24:27.050
So let's go through that.

00:24:27.050 --> 00:24:32.500
Here we have a definition of
a theme and some attributes.

00:24:32.500 --> 00:24:34.840
Here we're creating a
default style attribute

00:24:34.840 --> 00:24:36.130
and setting it in our theme.

00:24:36.130 --> 00:24:38.890
So we have this My
Custom View style.

00:24:38.890 --> 00:24:43.180
And we're setting it to this
widget.mycustomview style

00:24:43.180 --> 00:24:45.070
that we've defined
somewhere in our theme.

00:24:45.070 --> 00:24:49.180
So this will mean that
any components that use

00:24:49.180 --> 00:24:51.010
this My Custom View--

00:24:51.010 --> 00:24:55.460
or any of these My Custom Views
will use this style by default.

00:24:55.460 --> 00:24:59.880
You also can create a
styleable, which holds

00:24:59.880 --> 00:25:02.620
a few different attributes.

00:25:02.620 --> 00:25:05.930
And then you would just need to
use these in the constructors.

00:25:05.930 --> 00:25:09.620
So here's an example of
a constructor for a view.

00:25:09.620 --> 00:25:11.630
Here, we pass in
the default style,

00:25:11.630 --> 00:25:14.210
which we created previously.

00:25:14.210 --> 00:25:16.790
And we pass this
in here, so that it

00:25:16.790 --> 00:25:22.280
can pick up that default
style if nothing else was set.

00:25:22.280 --> 00:25:25.040
And then raising Obtain
Styled attributes.

00:25:25.040 --> 00:25:27.980
And we pass in the styleable
that we just created,

00:25:27.980 --> 00:25:30.350
as well as the default
style attribute that was

00:25:30.350 --> 00:25:32.150
passed into the constructor.

00:25:32.150 --> 00:25:34.610
And finally, a
fallback style that

00:25:34.610 --> 00:25:38.570
can be used as a last resort
for finding attributes.

00:25:38.570 --> 00:25:39.830
And then, just read those in.

00:25:39.830 --> 00:25:43.910
And that's basically
how our components work.

00:25:43.910 --> 00:25:48.050
So you can definitely
do it yourself as well.

00:25:48.050 --> 00:25:50.660
And also extend the systems
for your use cases, right?

00:25:50.660 --> 00:25:55.940
Like if you have the need for
more attributes in some case,

00:25:55.940 --> 00:25:58.280
you can definitely add those in.

00:25:58.280 --> 00:26:01.010
It might be a little bit
more work on your part.

00:26:01.010 --> 00:26:02.679
Because you'll have
to update styles

00:26:02.679 --> 00:26:04.220
for all of the
components that you're

00:26:04.220 --> 00:26:06.200
using to reference
those attributes,

00:26:06.200 --> 00:26:08.090
since our components
that we're writing

00:26:08.090 --> 00:26:09.830
aren't going to be
referencing them.

00:26:09.830 --> 00:26:13.220
But if you need it, you
can definitely do that.

00:26:16.110 --> 00:26:17.960
Here's an example
of an attribute.

00:26:17.960 --> 00:26:21.140
Just create it, and
define it in your style.

00:26:21.140 --> 00:26:22.675
And then reference it.

00:26:22.675 --> 00:26:24.050
Define it in your
theme, and then

00:26:24.050 --> 00:26:27.440
reference it in
styles or elsewhere.

00:26:27.440 --> 00:26:31.800
And now, a little bit
about our process.

00:26:31.800 --> 00:26:34.440
We've had a few releases.

00:26:34.440 --> 00:26:38.650
The 1.0 went out in Jul--
was cut on July 20th.

00:26:38.650 --> 00:26:41.590
And it's been a little while.

00:26:41.590 --> 00:26:44.680
But now, with the Android
X Jetpack Refactor finish,

00:26:44.680 --> 00:26:46.220
we can release more frequently.

00:26:46.220 --> 00:26:48.220
Because they're not tied
to the Support Library.

00:26:48.220 --> 00:26:51.260
So we're trying to
ramp up our releases.

00:26:51.260 --> 00:26:56.410
And we finally cut 1.1
Alpha 1 October 31st.

00:26:56.410 --> 00:27:00.730
And we're definitely trying to
do this more frequently, around

00:27:00.730 --> 00:27:04.370
once a month at least.

00:27:04.370 --> 00:27:08.450
The 1.1 Alpha had the Type
theming, Color theming,

00:27:08.450 --> 00:27:10.520
and Dark theming
that we've talked

00:27:10.520 --> 00:27:13.820
about in this, plus lots of
bug fixes and performance

00:27:13.820 --> 00:27:15.830
improvements.

00:27:15.830 --> 00:27:17.930
In the upcoming
releases, we're going

00:27:17.930 --> 00:27:20.390
to have a Shape theming,
which I talked about.

00:27:20.390 --> 00:27:26.030
In 1.1 Alpha, the Shape
theming subsystem exists,

00:27:26.030 --> 00:27:28.670
but none of the components
are actually responding

00:27:28.670 --> 00:27:30.980
to those themed attributes yet.

00:27:30.980 --> 00:27:33.500
But with the next
release, it should.

00:27:33.500 --> 00:27:39.204
We also updated some styling
for dialogs, bottom sheet menus,

00:27:39.204 --> 00:27:40.745
those sorts of things
are all coming.

00:27:43.580 --> 00:27:46.160
And as far as contributing
and filing issues,

00:27:46.160 --> 00:27:47.560
GitHub is where our code is.

00:27:47.560 --> 00:27:49.400
So if you're interested
in taking a look,

00:27:49.400 --> 00:27:50.420
just go on GitHub.

00:27:50.420 --> 00:27:52.410
You can take a look
at all of our code.

00:27:52.410 --> 00:27:54.590
It's open source.

00:27:54.590 --> 00:27:57.320
And also, you can check
GitHub for instructions

00:27:57.320 --> 00:27:59.159
on how to submit bug reports.

00:27:59.159 --> 00:28:00.950
We're trying to figure
out what works best.

00:28:00.950 --> 00:28:04.190
Right now, we're
taking bug reports

00:28:04.190 --> 00:28:09.770
at this issuetracker.google
buginizer component.

00:28:09.770 --> 00:28:11.600
But we're looking
at different ways

00:28:11.600 --> 00:28:13.850
to make it more obvious
what we're working on.

00:28:13.850 --> 00:28:18.230
And trying to integrate
more with the community.

00:28:18.230 --> 00:28:21.020
And here's a few more resources.

00:28:21.020 --> 00:28:26.090
Material.io site is great,
especially the Android section.

00:28:26.090 --> 00:28:28.580
Definitely check
us out on Discord

00:28:28.580 --> 00:28:30.320
if you're interested
in chatting with us,

00:28:30.320 --> 00:28:34.970
or are interested in
helping us have a PR--

00:28:34.970 --> 00:28:36.410
an idea for anything.

00:28:36.410 --> 00:28:39.060
Just come and chat with us.

00:28:39.060 --> 00:28:41.420
We have a tag on Stack Overflow.

00:28:41.420 --> 00:28:44.570
So if you have questions
about implementation,

00:28:44.570 --> 00:28:45.910
you can ask something there.

00:28:45.910 --> 00:28:48.720
We're watching that,
and we'll respond.

00:28:48.720 --> 00:28:50.780
And then we have a few Codelabs.

00:28:50.780 --> 00:28:56.340
You can find the link to those
Codelabs on this GitHub page.

00:28:56.340 --> 00:28:58.620
And that's pretty much it.

00:28:58.620 --> 00:28:59.787
Thanks for coming.

00:28:59.787 --> 00:29:00.870
GAUTHAM SAJITH: Thank you.

00:29:00.870 --> 00:29:01.470
[APPLAUSE]

00:29:01.470 --> 00:29:05.120
[MUSIC PLAYING]

