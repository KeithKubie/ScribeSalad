WEBVTT
Kind: captions
Language: en

00:00:00.290 --> 00:00:02.410
So, this is how I did it.

00:00:02.410 --> 00:00:04.420
We have a few options to consider.

00:00:04.420 --> 00:00:09.160
For example, the dispatch system has its own predicted time of arrival.

00:00:09.160 --> 00:00:12.210
The technician has their own self-reported arrival time,

00:00:12.210 --> 00:00:15.320
which they write down as soon as they reach the customer's home.

00:00:15.320 --> 00:00:19.400
Or we might use the time of completion of the technician's previous job.

00:00:19.400 --> 00:00:22.990
All of these are valid quantitative metrics to consider using

00:00:22.990 --> 00:00:26.480
when capturing the question, when will my service tag arrive?

00:00:26.480 --> 00:00:29.890
We decided as an initial guess at a metric to consider using

00:00:29.890 --> 00:00:32.080
the technician's reported arrival time.

00:00:32.080 --> 00:00:35.690
So the reason for selecting the actual recorded arrival time is that it

00:00:35.690 --> 00:00:39.700
seemed as close as possible to the actual quantity we were trying to predict.

00:00:39.700 --> 00:00:43.990
So, the computer's predicted arrival time is based on various assumptions.

00:00:43.990 --> 00:00:48.590
In addition, as far as using the time of the technician's prior finish job time,

00:00:48.590 --> 00:00:51.590
much can happen between the end of the technician's previous job and

00:00:51.590 --> 00:00:53.290
the start of the next one.

00:00:53.290 --> 00:00:57.115
So for this reason, starting with the tech's actual recorded arrival time

00:00:57.115 --> 00:00:59.760
seemed like a reasonable way to go.

00:00:59.760 --> 00:01:02.060
Having selected a reasonable metric,

00:01:02.060 --> 00:01:06.690
we then had to determine how do we turn the relatively vague problem statement,

00:01:06.690 --> 00:01:11.220
when will my service tech arrive, into a rigorous statistical inference problem?

