WEBVTT
Kind: captions
Language: en

00:00:03.167 --> 00:00:04.834
Meier: So good afternoon,
everyone.

00:00:04.834 --> 00:00:06.334
Thanks for coming along.

00:00:06.334 --> 00:00:08.334
It's impressive to see
a packed room,

00:00:08.334 --> 00:00:10.167
considering the quality of some
of the other sessions on,

00:00:10.167 --> 00:00:11.834
but, uh, thanks
for coming along.

00:00:11.834 --> 00:00:13.334
My name's Reto Meier.

00:00:13.334 --> 00:00:15.000
I'm a developer advocate
for Android.

00:00:15.000 --> 00:00:16.501
This is Michael Mahemoff.

00:00:16.501 --> 00:00:18.501
He's a developer advocate
on the Chrome team.

00:00:18.501 --> 00:00:20.834
Today we're gonna have, uh,
a bit of a lighthearted debate,

00:00:20.834 --> 00:00:23.167
looking at some of
the comparative differences

00:00:23.167 --> 00:00:26.501
or advantages of developing
for mobile,

00:00:26.501 --> 00:00:28.667
uh, using
either native libraries

00:00:28.667 --> 00:00:32.000
or, uh, Web tools.

00:00:32.000 --> 00:00:33.834
So before we get started,

00:00:33.834 --> 00:00:36.667
um, it would be good for us
to have an idea of the audience,

00:00:36.667 --> 00:00:38.167
see where we stand,

00:00:38.167 --> 00:00:40.167
see which of us needs to be,
um, more convincing.

00:00:40.167 --> 00:00:43.000
So with a show of hands,
how many of you

00:00:43.000 --> 00:00:46.834
are doing Web-based
mobile development?

00:00:46.834 --> 00:00:48.834
Ooh, I could be in trouble here.
Mahemoff: Pretty good.

00:00:48.834 --> 00:00:51.534
Pretty good.
And the Android track? Nice.

00:00:51.534 --> 00:00:54.334
Meier: And, uh, and how many of
you are, uh, android developers?

00:00:54.334 --> 00:00:55.834
Outstanding.

00:00:55.834 --> 00:00:57.667
Mahemoff: I think you're
on safe ground, too.

00:00:57.667 --> 00:00:59.501
Meier: Yeah, I like this.
I like this.

00:00:59.501 --> 00:01:01.567
All right, so we're both gonna
have to be really convincing.

00:01:01.567 --> 00:01:04.234
That--that works.
That works pretty well.

00:01:04.234 --> 00:01:07.067
So, uh, to get started,
I'm gonna introduce, uh,

00:01:07.067 --> 00:01:10.734
or let Michael take us off
with some mobile tips

00:01:10.734 --> 00:01:12.734
for Web development.
Mahemoff: Excellent.

00:01:12.734 --> 00:01:15.734
So yes, uh, I'm making the case
for HTML5.

00:01:15.734 --> 00:01:18.067
And of course,
when I talk about HTML5,

00:01:18.067 --> 00:01:20.901
I'm not just referring
to the actual technical spec.

00:01:20.901 --> 00:01:22.901
I'm talking about all the cool
Web technologies

00:01:22.901 --> 00:01:24.434
we can use today--

00:01:24.434 --> 00:01:26.734
uh, the open Web stack of HTML5

00:01:26.734 --> 00:01:30.234
or HTML, CSS, and JavaScript,

00:01:30.234 --> 00:01:33.400
and just this general trend
towards getting more know-how

00:01:33.400 --> 00:01:36.767
about how we're doing things,
about faster browser run times,

00:01:36.767 --> 00:01:40.567
and a whole community that's
evolving around these standards.

00:01:40.567 --> 00:01:43.567
I want to frame this argument
around these three points,

00:01:43.567 --> 00:01:47.400
so basically to say that HTML5
is a technology

00:01:47.400 --> 00:01:50.234
that is here on the various
mobile platforms,

00:01:50.234 --> 00:01:52.400
and then I want to tell you
that HTML5

00:01:52.400 --> 00:01:54.901
is a very capable technology
as well,

00:01:54.901 --> 00:01:56.901
because, you know,
I could say that--that, uh,

00:01:56.901 --> 00:01:59.901
batteries are also available
on the various mobile platforms,

00:01:59.901 --> 00:02:01.801
but they won't write
your killer apps.

00:02:01.801 --> 00:02:04.133
Hopefully I can show you
that HTML5 will.

00:02:04.133 --> 00:02:06.634
And finally, to talk
about some of the openness

00:02:06.634 --> 00:02:09.801
and the fact that it's such
a widespread standard

00:02:09.801 --> 00:02:13.133
as an advantage even over
a single native capability

00:02:13.133 --> 00:02:15.133
or a single native platform.

00:02:15.133 --> 00:02:17.133
So in summary,
to show you that HTML5

00:02:17.133 --> 00:02:20.133
on the mobile devices rocks.

00:02:20.133 --> 00:02:23.968
Firstly, the HTML5
is here on various mobiles.

00:02:23.968 --> 00:02:26.300
And that--those are--

00:02:26.300 --> 00:02:28.968
that's a bit of a summary
of some of the native platforms

00:02:28.968 --> 00:02:30.467
you have to consider

00:02:30.467 --> 00:02:32.467
when you're actually going
to reach people

00:02:32.467 --> 00:02:34.467
on the different
mobile devices--

00:02:34.467 --> 00:02:36.801
um, Linux systems,
Microsoft, Apple,

00:02:36.801 --> 00:02:39.467
and all these
different versions.

00:02:39.467 --> 00:02:41.300
Each of those things have got

00:02:41.300 --> 00:02:45.133
their own programming language
to deal with.

00:02:45.133 --> 00:02:48.801
And, you know, APIs and SDKs--
all of those things differ.

00:02:48.801 --> 00:02:52.133
And you're gonna be having
to do a lot of relearning

00:02:52.133 --> 00:02:54.300
or a lot of outsourcing
and a lot of work

00:02:54.300 --> 00:02:56.968
if you want to actually target
all the different users

00:02:56.968 --> 00:02:59.133
using these various
mobile devices.

00:02:59.133 --> 00:03:01.367
So this is why you get
comments like this.

00:03:01.367 --> 00:03:03.367
Uh, this one's
from the magazine industry.

00:03:03.367 --> 00:03:05.367
They've got the sort of monthly
or weekly publications

00:03:05.367 --> 00:03:07.868
coming out
and just struggling, you know?

00:03:07.868 --> 00:03:09.868
It's costing them a lot
of time and money

00:03:09.868 --> 00:03:12.701
to actually have to go through
and test, you know,

00:03:12.701 --> 00:03:14.868
see what the content's like
on all these different

00:03:14.868 --> 00:03:17.200
sort of, uh,
all these platforms

00:03:17.200 --> 00:03:20.534
that they're putting
their apps out onto.

00:03:20.534 --> 00:03:22.534
It starts to become compelling
to think about--

00:03:22.534 --> 00:03:24.200
could we have one platform

00:03:24.200 --> 00:03:26.701
to target all of these
different devices?

00:03:26.701 --> 00:03:28.367
And HTML5 is here.

00:03:28.367 --> 00:03:30.934
It's working on the mobiles
of today.

00:03:30.934 --> 00:03:33.033
You couldn't imagine getting
a new phone

00:03:33.033 --> 00:03:34.701
without having a browser.

00:03:34.701 --> 00:03:37.567
And many of them do have
the latest features of HTML5.

00:03:37.567 --> 00:03:39.534
You know, they're--many
of these phones using WebKit,

00:03:39.534 --> 00:03:41.367
which is what we also use

00:03:41.367 --> 00:03:43.467
on the desktop browsers
like Chrome.

00:03:43.467 --> 00:03:45.667
They're also on the tablets

00:03:45.667 --> 00:03:49.667
and even on other devices
as well, like TVs.

00:03:49.667 --> 00:03:52.334
So they have browsers.

00:03:52.334 --> 00:03:54.334
You can put your apps
in browsers.

00:03:54.334 --> 00:03:58.167
Users click on links when they
see a tweet, for instance.

00:03:58.167 --> 00:04:00.000
They'll click on a link,
and they'll--

00:04:00.000 --> 00:04:01.901
that's what they will be opening
is the browser.

00:04:01.901 --> 00:04:03.734
So you need to be there
on the mobile Web,

00:04:03.734 --> 00:04:05.567
ready inside people's browsers.

00:04:05.567 --> 00:04:08.067
And you can also embed your--
your apps,

00:04:08.067 --> 00:04:10.067
or your Web view--
your Web apps

00:04:10.067 --> 00:04:13.067
inside native apps as well.
There are techniques for this.

00:04:13.067 --> 00:04:16.067
On the whole, uh,
the various operating systems

00:04:16.067 --> 00:04:18.567
have said we don't want
the experience

00:04:18.567 --> 00:04:21.067
of the user having to click
when they see a link,

00:04:21.067 --> 00:04:23.400
and then it would open up
a separate browser app.

00:04:23.400 --> 00:04:27.067
So the various native platforms
tend to provide a way

00:04:27.067 --> 00:04:30.901
to actually embed a Web view
inside a native app.

00:04:30.901 --> 00:04:32.901
And because of that,
Web advan--

00:04:32.901 --> 00:04:35.067
Web developers have taken
advantage of that

00:04:35.067 --> 00:04:38.067
to actually embed
their own Web app

00:04:38.067 --> 00:04:41.901
inside the native app
that they've actually published.

00:04:41.901 --> 00:04:45.067
So when you look at these
various programming languages,

00:04:45.067 --> 00:04:47.234
you can also look at it
another way.

00:04:47.234 --> 00:04:51.067
You can say, "well, let's just
deal with it as one platform,

00:04:51.067 --> 00:04:53.734
"one programming language,
one set of APIs,

00:04:53.734 --> 00:04:57.400
one set of design patterns
and conventions."

00:04:57.400 --> 00:04:59.567
But is this for real?

00:04:59.567 --> 00:05:01.634
Like, can you really try
to pull this off,

00:05:01.634 --> 00:05:03.300
this idea of one platform

00:05:03.300 --> 00:05:05.300
and one programming API
everywhere?

00:05:05.300 --> 00:05:06.968
The reason it works

00:05:06.968 --> 00:05:09.300
is--is not because of some magic

00:05:09.300 --> 00:05:11.801
that says that you write
the same app everywhere,

00:05:11.801 --> 00:05:13.634
it's because you do
actually have

00:05:13.634 --> 00:05:15.300
the same technologies
everywhere,

00:05:15.300 --> 00:05:17.167
but you still have to do
some customization

00:05:17.167 --> 00:05:18.968
and make things fit the device

00:05:18.968 --> 00:05:21.634
you're actually working with.

00:05:21.634 --> 00:05:23.634
So right at the heart
of the Web

00:05:23.634 --> 00:05:25.300
is all of these concepts

00:05:25.300 --> 00:05:27.467
of dealing with multiple types
of devices.

00:05:27.467 --> 00:05:29.467
The Web has these
three technologies--

00:05:29.467 --> 00:05:31.467
HTML, JavaScript, and CSS,

00:05:31.467 --> 00:05:33.133
you know that the--

00:05:33.133 --> 00:05:35.300
they distinguish the content,
being the HTML--

00:05:35.300 --> 00:05:37.133
that's something like
a content creator.

00:05:37.133 --> 00:05:38.801
It might be a journalist--

00:05:38.801 --> 00:05:40.801
that's the thing that they're
actually creating.

00:05:40.801 --> 00:05:42.467
The JavaScript is the logic.

00:05:42.467 --> 00:05:44.300
That's the thing
that programmers create

00:05:44.300 --> 00:05:46.634
to actually control
the user computer interaction.

00:05:46.634 --> 00:05:49.634
And the CSS is the kind of thing
designers work on.

00:05:49.634 --> 00:05:51.501
And so because you get
that separation,

00:05:51.501 --> 00:05:53.801
you can reuse a lot across
the different devices.

00:05:53.801 --> 00:05:55.801
You can have almost the same,

00:05:55.801 --> 00:05:57.801
or exactly the same HTML,

00:05:57.801 --> 00:06:00.300
uh, the actual content.

00:06:00.300 --> 00:06:02.367
You can reuse a lot
of the JavaScript.

00:06:02.367 --> 00:06:04.868
And you can hopefully leverage
some of the CSS

00:06:04.868 --> 00:06:06.701
and then customize it further.

00:06:06.701 --> 00:06:08.701
We actually just showed that
in the previous talk,

00:06:08.701 --> 00:06:11.534
uh, that I was involved with
earlier on today,

00:06:11.534 --> 00:06:13.367
uh, just doing exactly that,

00:06:13.367 --> 00:06:15.701
having very different
sort of user experiences

00:06:15.701 --> 00:06:19.367
but the same markup
and most of the same JavaScript.

00:06:19.367 --> 00:06:21.367
So this is something
that the Web's always had,

00:06:21.367 --> 00:06:23.367
because the Web evolved
from a situation

00:06:23.367 --> 00:06:25.868
where it wasn't tied
to any one particular device

00:06:25.868 --> 00:06:27.534
or operating system.

00:06:27.534 --> 00:06:30.868
The Web spread like wildfire
and continues to spread today

00:06:30.868 --> 00:06:33.367
because it does run
on this huge variety

00:06:33.367 --> 00:06:37.000
of different platforms
and operating systems.

00:06:37.000 --> 00:06:39.667
Graceful degradation
is another aspect of that,

00:06:39.667 --> 00:06:42.000
dealing with different types
of devices

00:06:42.000 --> 00:06:43.834
and different levels of support.

00:06:43.834 --> 00:06:46.334
So we talk about all these
latest and greatest

00:06:46.334 --> 00:06:49.334
HTML5 features you've seen
like in the keynote today.

00:06:49.334 --> 00:06:51.834
They're not all there
in all of the browsers.

00:06:51.834 --> 00:06:55.167
But they don't--the app
just doesn't just go and explode

00:06:55.167 --> 00:06:57.501
if--if your use--
if you're relying on something.

00:06:57.501 --> 00:06:59.501
If you're doing it right
and doing it the way

00:06:59.501 --> 00:07:01.901
Web developers
have always learned to do it,

00:07:01.901 --> 00:07:03.400
you can fall back,

00:07:03.400 --> 00:07:05.400
and the Web actually supports
that intrinsically.

00:07:05.400 --> 00:07:07.734
So you've got this capability
to--to say--

00:07:07.734 --> 00:07:10.400
the &lt;canvas&gt; tag--okay,
I don't have Canvas.

00:07:10.400 --> 00:07:12.234
Then I'll just fall back nicely.

00:07:12.234 --> 00:07:14.067
That's the content
that will be shown

00:07:14.067 --> 00:07:15.901
instead of the &lt;canvas&gt; tag.

00:07:15.901 --> 00:07:17.734
If the attribute
is not supported

00:07:17.734 --> 00:07:19.234
because you're always--

00:07:19.234 --> 00:07:21.067
HTML5 is always adding
new attributes

00:07:21.067 --> 00:07:23.067
to do extra things,
like in this case to show--

00:07:23.067 --> 00:07:25.567
to let you select
multiple files.

00:07:25.567 --> 00:07:27.567
So in this case
that's not supported. Fine.

00:07:27.567 --> 00:07:29.567
That will just get ignored.

00:07:29.567 --> 00:07:31.601
There won't be an error,
it will just get ignored,

00:07:31.601 --> 00:07:34.067
and you can just choose
a single file instead.

00:07:34.067 --> 00:07:36.567
The style--the font's
not supported in this case.

00:07:36.567 --> 00:07:38.567
So we can actually choose
the best possible font

00:07:38.567 --> 00:07:40.067
we would want.

00:07:40.067 --> 00:07:42.067
HTML5 lets us be very flexible
with our fonts.

00:07:42.067 --> 00:07:44.734
We can actually--again, we can
fall back to a font that does.

00:07:44.734 --> 00:07:46.234
So this is all the way--

00:07:46.234 --> 00:07:49.901
the whole spirit
of the way the Web works.

00:07:49.901 --> 00:07:52.734
Cascading Style Sheets
is another aspect of this.

00:07:52.734 --> 00:07:55.234
So you can actually have
one style sheet,

00:07:55.234 --> 00:07:57.567
and then that gets overridden
by other style sheets.

00:07:57.567 --> 00:07:59.734
So you can say, well,
we've got our desktop app.

00:07:59.734 --> 00:08:02.300
You can just publish
a normal app for the Web first,

00:08:02.300 --> 00:08:05.300
see if it takes off, see
if it's interesting to people.

00:08:05.300 --> 00:08:08.133
People can start using it
on the mobile already.

00:08:08.133 --> 00:08:09.801
And then a couple
of years later,

00:08:09.801 --> 00:08:12.634
you decide, well, now we can
start to customize a bit more

00:08:12.634 --> 00:08:14.133
for the mobile

00:08:14.133 --> 00:08:16.133
and have those rules
override the previous rules.

00:08:16.133 --> 00:08:18.133
And then you can go
even further than that.

00:08:18.133 --> 00:08:19.634
You can say, well,

00:08:19.634 --> 00:08:21.300
we specifically care
about Android,

00:08:21.300 --> 00:08:23.133
or we specifically care
about, um, the Motorola Xoom

00:08:23.133 --> 00:08:24.634
or whatever.

00:08:24.634 --> 00:08:26.467
You can go as far as you want,

00:08:26.467 --> 00:08:28.133
and actually customize
as much detail,

00:08:28.133 --> 00:08:29.801
but you don't always have to.

00:08:29.801 --> 00:08:31.634
You can start
from a basic point,

00:08:31.634 --> 00:08:33.634
get your app up and running,
and see if people like it,

00:08:33.634 --> 00:08:35.501
and then tune it from there.

00:08:35.501 --> 00:08:39.033
The Web's always had an idea
about fluid layouts as well.

00:08:39.033 --> 00:08:42.167
So just by the nature of the way
the rendering works,

00:08:42.167 --> 00:08:44.667
things tend to stretch
in a reasonable way.

00:08:44.667 --> 00:08:46.334
And even more so,

00:08:46.334 --> 00:08:48.834
people have got
well-established techniques now

00:08:48.834 --> 00:08:51.334
for doing these kinds
of fluid designs

00:08:51.334 --> 00:08:55.167
to deal with all sorts of
different screen resolutions.

00:08:55.167 --> 00:08:57.834
Uh, we've got sort of like
the idea of--

00:08:57.834 --> 00:08:59.667
of one cloud.

00:08:59.667 --> 00:09:03.567
Um, this is a very big--
big idea in our industry.

00:09:03.567 --> 00:09:06.234
And now what I'm saying to you
is with HTML5

00:09:06.234 --> 00:09:08.901
you've got the ability to scale
horizontally very quickly,

00:09:08.901 --> 00:09:11.100
because you're reusing
a lot of the logic.

00:09:11.100 --> 00:09:13.400
You're--you're using
the same technologies

00:09:13.400 --> 00:09:14.901
when you're jumping

00:09:14.901 --> 00:09:16.734
onto these different types
of devices.

00:09:16.734 --> 00:09:18.734
So you might actually still be
customizing a bit,

00:09:18.734 --> 00:09:20.734
but you can do that
a lot quicker.

00:09:20.734 --> 00:09:23.567
So that's sort of the view
from, like, HTML5

00:09:23.567 --> 00:09:25.400
as a platform.

00:09:25.400 --> 00:09:28.234
Um, on the mobiles,
HTML5 as a platform,

00:09:28.234 --> 00:09:30.734
as far
as the functionality goes,

00:09:30.734 --> 00:09:33.400
it's starting to get
these technologies

00:09:33.400 --> 00:09:35.400
that will rival
the native technologies.

00:09:35.400 --> 00:09:37.234
So we've got user interfaces--

00:09:37.234 --> 00:09:39.067
let you see a lot of great
Canvas things,

00:09:39.067 --> 00:09:40.901
like "Angry Birds" and so on.

00:09:40.901 --> 00:09:43.067
But there's also things
beneath the surface as well,

00:09:43.067 --> 00:09:44.601
the networking

00:09:44.601 --> 00:09:46.901
and offline-type capabilities,
too, that we need.

00:09:46.901 --> 00:09:49.067
And I'll show you some demos
of this in a moment,

00:09:49.067 --> 00:09:51.901
but first I'll--I'll go through
some code examples,

00:09:51.901 --> 00:09:54.067
just to show you
the kind of APIs

00:09:54.067 --> 00:09:56.400
that will support
these sorts of things

00:09:56.400 --> 00:09:59.234
we've always had
in the mobile browsers.

00:09:59.234 --> 00:10:01.901
So we've got, for instance,
geolocation.

00:10:01.901 --> 00:10:04.067
We can actually--
these are the kinds of things

00:10:04.067 --> 00:10:06.567
that are actually in many cases
inspired by mobiles,

00:10:06.567 --> 00:10:08.400
but they've come back
into the Web

00:10:08.400 --> 00:10:10.400
so they can be used
in mobile Web apps

00:10:10.400 --> 00:10:12.400
as well as on the desktop
and elsewhere.

00:10:12.400 --> 00:10:16.067
Um, very straightforward API
for doing geolocation,

00:10:16.067 --> 00:10:19.567
and as with all
of these sorts of APIs,

00:10:19.567 --> 00:10:21.400
it's potentially sensitive.

00:10:21.400 --> 00:10:23.400
So just like you would get
on an Android app--

00:10:23.400 --> 00:10:25.234
you know,
you'll actually get asked

00:10:25.234 --> 00:10:26.901
if you'll give it permission,

00:10:26.901 --> 00:10:28.734
the Web has that concept
now, too.

00:10:28.734 --> 00:10:30.567
You can do multi-touch,

00:10:30.567 --> 00:10:32.400
so we do now have touch events,

00:10:32.400 --> 00:10:34.234
and specifically we have
the ability

00:10:34.234 --> 00:10:36.567
to do multi-touch
as part of the Web--

00:10:36.567 --> 00:10:38.567
the standard ways
of handling events as well.

00:10:38.567 --> 00:10:40.400
We get an array--
you can see there,

00:10:40.400 --> 00:10:42.567
when there's a touch event,
you get an array

00:10:42.567 --> 00:10:45.400
of all the touch objects.

00:10:45.400 --> 00:10:47.400
We can do device orientation.

00:10:47.400 --> 00:10:49.400
So there--that's now part
of the standard, too.

00:10:49.400 --> 00:10:51.267
It works on Chrome
on the desktop

00:10:51.267 --> 00:10:52.901
and some tablets as well.

00:10:52.901 --> 00:10:54.734
Starting to get there.

00:10:54.734 --> 00:10:57.734
And we've got standards
for speech recognition.

00:10:57.734 --> 00:10:59.734
Uh, apologies,
that's a little small.

00:10:59.734 --> 00:11:01.968
So that's input x-webkit-speech.

00:11:01.968 --> 00:11:05.467
That works on Chrome
to do speech recognition.

00:11:05.467 --> 00:11:07.634
And there are device APIs
as well

00:11:07.634 --> 00:11:10.467
to actually just capture
different types of media.

00:11:10.467 --> 00:11:12.634
And you can see that they're
actually building

00:11:12.634 --> 00:11:14.300
on the existing standard.

00:11:14.300 --> 00:11:16.801
So it's just a file input,
but if you give it

00:11:16.801 --> 00:11:18.968
this extra attribute
of what it accepts,

00:11:18.968 --> 00:11:21.300
the devices will be smart enough

00:11:21.300 --> 00:11:23.467
to actually switch
into that form.

00:11:23.467 --> 00:11:26.834
And on the output side
of things,

00:11:26.834 --> 00:11:29.634
uh, we can do markup
and styling with semantic tags.

00:11:29.634 --> 00:11:33.300
So we've actually got these
kind of much richer things--

00:11:33.300 --> 00:11:36.467
much richer ways to explain
the content on our page.

00:11:36.467 --> 00:11:38.133
And this is really useful,
right?

00:11:38.133 --> 00:11:39.968
This means you create
your Web app like this,

00:11:39.968 --> 00:11:41.968
you've already got your content.
You've handled your SEO.

00:11:41.968 --> 00:11:44.968
You've got your--almost like
a kind of API built in,

00:11:44.968 --> 00:11:47.133
because you've got this content
sitting there openly

00:11:47.133 --> 00:11:48.634
on the internet.

00:11:48.634 --> 00:11:50.634
You don't have to. You can
close it off if you want,

00:11:50.634 --> 00:11:52.634
but the Web tends
to be open by default,

00:11:52.634 --> 00:11:55.968
unless you get that kind
of sharing experience

00:11:55.968 --> 00:11:58.501
just by structuring your apps
like this.

00:11:58.501 --> 00:12:00.801
And--and then you can style it
really nicely, too.

00:12:00.801 --> 00:12:03.033
So CSS 3 gives you
all these ways

00:12:03.033 --> 00:12:04.701
of decorating that content

00:12:04.701 --> 00:12:06.868
and getting the best
of both worlds.

00:12:06.868 --> 00:12:08.534
You've got Canvas,

00:12:08.534 --> 00:12:11.200
so for doing
even richer graphics--Canvas.

00:12:11.200 --> 00:12:14.367
You've seen 3-D Canvas
or WebGL today as well.

00:12:14.367 --> 00:12:17.200
Um, we can do these kinds
of graphics,

00:12:17.200 --> 00:12:20.734
um, more and more inside
the various mobile devices.

00:12:20.734 --> 00:12:24.033
And multimedia as well
is possible, too.

00:12:24.033 --> 00:12:26.200
So we can actually do video
and audio now

00:12:26.200 --> 00:12:27.868
as part of HTML5.

00:12:27.868 --> 00:12:30.701
This is an example of a native
app that's on the iPad.

00:12:30.701 --> 00:12:34.534
"Just One More"--they're using
Vimeo's HTML5 video API

00:12:34.534 --> 00:12:38.033
to actually show videos
inside this native app.

00:12:38.033 --> 00:12:39.868
I'm gonna switch gears now.

00:12:39.868 --> 00:12:41.868
I'll show you a demo
of some of these things

00:12:41.868 --> 00:12:44.033
I'm talking about here.

00:12:44.033 --> 00:12:45.968
Let's see.

00:12:45.968 --> 00:12:47.901
Get this guy on.

00:12:50.367 --> 00:12:53.200
Whoa, which one are we on?

00:12:53.200 --> 00:12:55.868
Two, four?

00:12:55.868 --> 00:12:57.801
Meier: Two.
Mahemoff: Two, gotcha.

00:13:02.000 --> 00:13:05.200
So this is geolocation.

00:13:05.200 --> 00:13:07.667
So just to prove this works,
let's see how it goes.

00:13:07.667 --> 00:13:10.167
So it's asking me if I want
to share my location.

00:13:10.167 --> 00:13:12.334
So we've got the coordinates
showing up,

00:13:12.334 --> 00:13:14.501
and it's doing a bit
of mashing up

00:13:14.501 --> 00:13:17.334
to actually show the weather
and so on.

00:13:17.334 --> 00:13:21.000
Multi-touch test--so this is
inside a browser.

00:13:21.000 --> 00:13:23.000
As you can see here,

00:13:23.000 --> 00:13:25.267
it'll actually detect all ten.

00:13:29.334 --> 00:13:31.334
I'm gonna leave that one.
There's a more fun one.

00:13:31.334 --> 00:13:32.834
So this is 3-D,

00:13:32.834 --> 00:13:35.267
3-D transformations with CSS 3.

00:13:38.634 --> 00:13:40.434
So that--you know,
this is decorated.

00:13:40.434 --> 00:13:42.267
We can actually decorate
content this way.

00:13:42.267 --> 00:13:43.934
And this is bitly.

00:13:43.934 --> 00:13:46.300
So we'll jump here.

00:13:46.300 --> 00:13:49.434
Uh, it's generating those graphs
in real time

00:13:49.434 --> 00:13:51.801
inside the browser.

00:13:51.801 --> 00:13:53.801
But the most fun one

00:13:53.801 --> 00:13:56.601
is the one I've actually written
for this talk.

00:13:56.601 --> 00:13:58.601
So you can see I've taken
a few photos

00:13:58.601 --> 00:14:00.434
around the place here.

00:14:00.434 --> 00:14:02.501
Inside the browser--

00:14:02.501 --> 00:14:05.267
let's see if I can get
this working upside down here.

00:14:09.334 --> 00:14:10.767
There we go.

00:14:13.033 --> 00:14:15.934
And this app's running
offline as well.

00:14:19.667 --> 00:14:22.968
So it--whoops.
Back up.

00:14:22.968 --> 00:14:25.334
Yeah, so this app
is actually running offline,

00:14:25.334 --> 00:14:27.334
so it's just stored,
so now I'm in the DOM.

00:14:27.334 --> 00:14:31.167
So I'll go and put you guys
in the DOM as well,

00:14:31.167 --> 00:14:34.000
in local storage.

00:14:34.000 --> 00:14:36.667
Wait for it. I'm gonna
switch the camera around.

00:14:36.667 --> 00:14:38.667
So say hi. Sorry, I can only
get the middle row here,

00:14:38.667 --> 00:14:41.501
the middle aisle,
but go on, say, "hi, I/O."

00:14:41.501 --> 00:14:44.334
That--whoops, wrong way.

00:14:44.334 --> 00:14:46.267
[laughter]

00:14:48.334 --> 00:14:50.167
Mahemoff: All right.

00:14:50.167 --> 00:14:52.501
And it's kind of jumping around,

00:14:52.501 --> 00:14:55.667
which way--whichever way I go.

00:14:55.667 --> 00:14:57.501
I'll leave the--okay.

00:14:57.501 --> 00:14:59.834
So now you guys
are in local storage as well.

00:14:59.834 --> 00:15:03.734
So--so I can actually--
if I reload this...

00:15:03.734 --> 00:15:07.400
Actually... I don't know.

00:15:07.400 --> 00:15:09.300
I'll reload it
just to show you

00:15:09.300 --> 00:15:11.133
that--that's
actually coming--

00:15:11.133 --> 00:15:13.300
well, anyway,
it won't go offline,

00:15:13.300 --> 00:15:14.801
but it will work.

00:15:14.801 --> 00:15:16.634
You can try this later on.

00:15:16.634 --> 00:15:18.801
If you try that URL--
html5photos.appspot.com,

00:15:18.801 --> 00:15:20.467
you can see how that works.

00:15:20.467 --> 00:15:22.467
You can try it on the tablets
you got yesterday,

00:15:22.467 --> 00:15:24.300
'cause I've tested it.
It works on there.

00:15:24.300 --> 00:15:26.133
It's just a basic
proof of concept.

00:15:26.133 --> 00:15:27.968
And it also works
on the desktop,

00:15:27.968 --> 00:15:29.801
um, where you can
actually use it

00:15:29.801 --> 00:15:31.634
as a way of keeping
photos offline

00:15:31.634 --> 00:15:33.300
just by using the file import

00:15:33.300 --> 00:15:36.968
and pulling photos
from your hard drive.

00:15:36.968 --> 00:15:39.834
Now let me jump back.

00:15:39.834 --> 00:15:42.968
But it's more than just the user
interface side of things,

00:15:42.968 --> 00:15:45.133
it's also about doing
these sorts of things

00:15:45.133 --> 00:15:47.133
in, uh, you know--

00:15:47.133 --> 00:15:49.133
the sort of back-end
functionality as well,

00:15:49.133 --> 00:15:51.033
so things like networking.

00:15:51.033 --> 00:15:53.467
The--where the Web
really took off

00:15:53.467 --> 00:15:56.300
was a few years ago when we had
this concept of Ajax.

00:15:56.300 --> 00:15:58.133
It was the recognition

00:15:58.133 --> 00:16:00.801
that suddenly the user could be
working in the browser,

00:16:00.801 --> 00:16:03.033
and at the same time you could
have all this communication

00:16:03.033 --> 00:16:05.033
going on back to the server

00:16:05.033 --> 00:16:07.367
that sent down that application.

00:16:07.367 --> 00:16:09.033
For security reasons,

00:16:09.033 --> 00:16:11.033
you couldn't actually go
to other domains.

00:16:11.033 --> 00:16:13.033
A few hacks have come about
to make that possible,

00:16:13.033 --> 00:16:14.701
but now we've actually got that

00:16:14.701 --> 00:16:16.534
built into the standards
as well.

00:16:16.534 --> 00:16:18.534
So we can start to do
really sophisticated mash-ups

00:16:18.534 --> 00:16:20.367
by using cross-origin
or resource sharing

00:16:20.367 --> 00:16:22.868
and going across
to other domains.

00:16:22.868 --> 00:16:24.534
And we also have WebSocket

00:16:24.534 --> 00:16:26.367
and some other technologies
as well

00:16:26.367 --> 00:16:28.200
to do proper real-time
streaming.

00:16:28.200 --> 00:16:30.200
So it's not just a case
of the browser making a request.

00:16:30.200 --> 00:16:32.033
We can also do
a live communication channel

00:16:32.033 --> 00:16:33.534
back and forth.

00:16:33.534 --> 00:16:35.534
You can see,
Rumpetroll will work already

00:16:35.534 --> 00:16:39.133
on some mobile devices.

00:16:39.133 --> 00:16:40.701
Uh, offline--

00:16:40.701 --> 00:16:42.868
so this app here,
it does work offline.

00:16:42.868 --> 00:16:44.534
You can try it for yourselves.

00:16:44.534 --> 00:16:46.367
Just visit it once
and then take it offline.

00:16:46.367 --> 00:16:48.033
And try it
and then hit "reload."

00:16:48.033 --> 00:16:49.534
You'll see it'll work.

00:16:49.534 --> 00:16:51.200
It's using
the application cache--

00:16:51.200 --> 00:16:52.701
very straightforward technology

00:16:52.701 --> 00:16:55.701
where essentially you just need
to list your assets.

00:16:55.701 --> 00:16:57.367
And some of you might have seen

00:16:57.367 --> 00:16:59.200
the Chrome
Web store talk yesterday,

00:16:59.200 --> 00:17:01.033
where people like
"The New York Times"

00:17:01.033 --> 00:17:03.767
were mentioning that it's
not just about being offline.

00:17:03.767 --> 00:17:06.267
It's also a massive
performance improvement.

00:17:06.267 --> 00:17:09.100
So the same sort of situation
as a native app,

00:17:09.100 --> 00:17:10.767
where you have your content--

00:17:10.767 --> 00:17:12.601
you have your app
as well as your content

00:17:12.601 --> 00:17:14.934
that are all stored
inside the device,

00:17:14.934 --> 00:17:16.934
you can do the same thing
with the Web now.

00:17:16.934 --> 00:17:18.767
You don't have to make it
like every time

00:17:18.767 --> 00:17:22.300
you go and start this app,
it's gonna load the whole thing.

00:17:22.300 --> 00:17:25.300
And offline storage is
another aspect of this as well.

00:17:25.300 --> 00:17:27.133
So you can actually have,
you know--

00:17:27.133 --> 00:17:29.133
storing not just
the application logic,

00:17:29.133 --> 00:17:32.334
but also the actual content.

00:17:32.334 --> 00:17:35.968
So that's showing you that HTML5
is here on the mobiles,

00:17:35.968 --> 00:17:38.968
and it's also a very capable
technology.

00:17:38.968 --> 00:17:40.634
But it's more than that.

00:17:40.634 --> 00:17:42.467
It's also just some
intrinsic things

00:17:42.467 --> 00:17:44.133
about the way the Web works.

00:17:44.133 --> 00:17:46.400
And I think they're
quite compelling for developers.

00:17:46.400 --> 00:17:48.467
It is based on standards,

00:17:48.467 --> 00:17:50.968
So while it takes
a little bit longer

00:17:50.968 --> 00:17:52.634
for those standards to evolve,

00:17:52.634 --> 00:17:54.968
and it's kind of a messy
standards process,

00:17:54.968 --> 00:17:58.133
ultimately what you end up with
is several implementations

00:17:58.133 --> 00:17:59.634
of these standards,

00:17:59.634 --> 00:18:01.701
and these implementations,
like you've seen--

00:18:01.701 --> 00:18:03.701
with these massive performance
increases we've seen

00:18:03.701 --> 00:18:05.734
from the likes of Chrome,

00:18:05.734 --> 00:18:07.534
that it causes a lot
of competition

00:18:07.534 --> 00:18:09.367
between the different browsers

00:18:09.367 --> 00:18:10.868
to keep innovating,

00:18:10.868 --> 00:18:13.200
and also to keep coming up
with new standards.

00:18:13.200 --> 00:18:15.033
Like I've tried to show you
here today,

00:18:15.033 --> 00:18:17.033
it's okay for a browser
to go ahead

00:18:17.033 --> 00:18:18.868
and come up with a new feature

00:18:18.868 --> 00:18:21.367
that might not yet be
on the other browsers,

00:18:21.367 --> 00:18:23.033
because you have ways
to degrade,

00:18:23.033 --> 00:18:25.033
and there is a standards process
for the other browsers

00:18:25.033 --> 00:18:27.033
to adopt those standards, too.

00:18:27.033 --> 00:18:30.367
And--and it's also the fact
that you're on the Web.

00:18:30.367 --> 00:18:32.367
You've got that content
sitting on the Web,

00:18:32.367 --> 00:18:34.868
so you've already got a lot
of your search, uh, problem

00:18:34.868 --> 00:18:36.367
already solved

00:18:36.367 --> 00:18:38.400
and the ability of making it
accessible as well

00:18:38.400 --> 00:18:41.701
to things like screen readers.

00:18:41.701 --> 00:18:43.701
The actual technology of the Web

00:18:43.701 --> 00:18:46.701
is becoming more and more,
um, popular.

00:18:46.701 --> 00:18:48.701
It's very much already
for a few years now--

00:18:48.701 --> 00:18:50.701
it seems to be what people
like to think of

00:18:50.701 --> 00:18:53.033
as a lingua franca,
a language that--

00:18:53.033 --> 00:18:55.367
just by its privileged place
in the browser,

00:18:55.367 --> 00:18:57.367
everyone has to know
some JavaScript

00:18:57.367 --> 00:18:59.200
and some HTML5.

00:18:59.200 --> 00:19:01.934
There are now huge communities
of Web developers

00:19:01.934 --> 00:19:04.434
who consider it their first
and favorite language.

00:19:04.434 --> 00:19:06.934
There are other people who
still prefer other languages,

00:19:06.934 --> 00:19:09.267
but they still know
a lot of these technologies.

00:19:09.267 --> 00:19:11.267
And we even have
server-side technologies

00:19:11.267 --> 00:19:12.801
like Node now,

00:19:12.801 --> 00:19:14.934
that let you write
the entire app on the server

00:19:14.934 --> 00:19:18.100
and the browser in the same, uh,
set of core technologies

00:19:18.100 --> 00:19:20.434
and the same programming
language.

00:19:20.434 --> 00:19:22.267
So you can see why people
like this.

00:19:22.267 --> 00:19:24.100
This is a quote
from "The Onion" here,

00:19:24.100 --> 00:19:26.100
but it is actually serious,
I'm told.

00:19:26.100 --> 00:19:28.434
Um, it is basically--
they're making the point

00:19:28.434 --> 00:19:30.434
that they've got the iPad app,

00:19:30.434 --> 00:19:32.934
and they're doing it in HTML5,
because they already know it.

00:19:32.934 --> 00:19:35.601
They already have a Web site.
They have to have a Web site.

00:19:35.601 --> 00:19:37.601
They have
to have things running

00:19:37.601 --> 00:19:39.267
as apps on the Web.

00:19:39.267 --> 00:19:41.601
So they're just leveraging
all of that existing skill

00:19:41.601 --> 00:19:45.133
and--and resources.

00:19:45.133 --> 00:19:46.601
And finally,

00:19:46.601 --> 00:19:48.934
HTML5 is a very well-supported
technology now.

00:19:48.934 --> 00:19:50.767
It's been around
for a long time.

00:19:50.767 --> 00:19:52.767
And you've got some great
libraries that have evolved

00:19:52.767 --> 00:19:54.601
since the whole Ajax revolution,

00:19:54.601 --> 00:19:57.100
libraries like jQuery
that you hear a lot about.

00:19:57.100 --> 00:19:59.100
Um, there's great
debugging tools.

00:19:59.100 --> 00:20:00.934
There's Chrome Dev Tools
for instance,

00:20:00.934 --> 00:20:03.601
that make life a lot easier
for developers.

00:20:03.601 --> 00:20:05.601
And there's a whole community
as well.

00:20:05.601 --> 00:20:07.934
So there's a lot of, uh--
it's very easy

00:20:07.934 --> 00:20:09.934
to--to get on board
with HTML5

00:20:09.934 --> 00:20:12.100
You just open up a text editor
and write something

00:20:12.100 --> 00:20:14.434
and run--run it in your browser.
Everyone can do that.

00:20:14.434 --> 00:20:16.767
And just to actually skill up
from there

00:20:16.767 --> 00:20:18.801
is a lot easier
than it used to be.

00:20:18.801 --> 00:20:20.601
And there's just this
huge community of blogs

00:20:20.601 --> 00:20:22.934
and tutorials
and everything around it.

00:20:22.934 --> 00:20:24.767
So I think
I will leave it there

00:20:24.767 --> 00:20:26.767
and give it to Reto.

00:20:26.767 --> 00:20:29.267
Meier: All right,
thanks very much, Mike.

00:20:29.267 --> 00:20:32.200
[applause]
Mahemoff: Thank you.

00:20:35.501 --> 00:20:38.000
Meier: He'll be back later,
but, uh, I'm sure he...

00:20:38.000 --> 00:20:40.000
Mahemoff: Appreciated anyway.
Meier: appreciates the applause.

00:20:40.000 --> 00:20:41.834
Um, so he's made
a good point, right?

00:20:41.834 --> 00:20:43.667
Um, there's some really
interesting stuff there,

00:20:43.667 --> 00:20:46.000
some really compelling reasons
why, you know,

00:20:46.000 --> 00:20:49.501
building applications
for mobile phones on the Web

00:20:49.501 --> 00:20:51.167
is a really good idea.

00:20:51.167 --> 00:20:53.167
Uh, what really appeals to me
is this idea

00:20:53.167 --> 00:20:55.167
that you have this
cross-functional approach,

00:20:55.167 --> 00:20:57.000
that you have an app
you write once,

00:20:57.000 --> 00:20:58.834
and it works across
all the smartphones,

00:20:58.834 --> 00:21:00.667
or at least all the modern
smartphones

00:21:00.667 --> 00:21:02.567
where you want your app
to be used.

00:21:02.567 --> 00:21:05.567
So why would you risk--
why would you risk losing that?

00:21:05.567 --> 00:21:08.067
You know, why build an app
which is only one platform?

00:21:08.067 --> 00:21:10.734
Well, there's
100 million reasons,

00:21:10.734 --> 00:21:12.567
in one instance,
why you might want to.

00:21:12.567 --> 00:21:14.400
There's a lot of Android apps
out there.

00:21:14.400 --> 00:21:16.234
And we want to try
and create something

00:21:16.234 --> 00:21:18.234
that's optimized
for those users.

00:21:18.234 --> 00:21:20.234
Before I get into the details,
I want to talk a little bit

00:21:20.234 --> 00:21:22.067
about the terminology
we're using.

00:21:22.067 --> 00:21:23.901
So we've thrown the word
"native" around

00:21:23.901 --> 00:21:25.601
quite a lot already.

00:21:25.601 --> 00:21:27.234
Um, if you're Android
developers,

00:21:27.234 --> 00:21:29.067
often when we're talking
about native apps,

00:21:29.067 --> 00:21:31.234
we talk about something
slightly different

00:21:31.234 --> 00:21:33.067
from what we might be
considering.

00:21:33.067 --> 00:21:34.901
So for today when we're
talking about native,

00:21:34.901 --> 00:21:36.601
it's really anything built

00:21:36.601 --> 00:21:38.567
specifically for
the Android platform.

00:21:38.567 --> 00:21:40.567
'Cause there's actually a few
ways that you can do this.

00:21:40.567 --> 00:21:42.567
It's not just about
writing things

00:21:42.567 --> 00:21:44.734
for the Java virtual machine.

00:21:44.734 --> 00:21:46.567
That is the most common way
of doing it.

00:21:46.567 --> 00:21:48.400
So most of you guys,
if you're Android developers,

00:21:48.400 --> 00:21:50.901
are probably writing things
using Java Syntax,

00:21:50.901 --> 00:21:54.400
which is going to be running
on the Dalvik virtual machine.

00:21:54.400 --> 00:21:57.234
And that's certainly the, uh,
the majority of apps.

00:21:57.234 --> 00:21:59.267
We also have a number
of different alternatives.

00:21:59.267 --> 00:22:02.467
And one of those is actually
what we call native development.

00:22:02.467 --> 00:22:04.467
Um, so that's using
the native development kit.

00:22:04.467 --> 00:22:07.634
And you can actually build apps
using C or C++.

00:22:07.634 --> 00:22:09.968
And that takes you one level
further down.

00:22:09.968 --> 00:22:11.968
So rather than running on top
of the virtual machine,

00:22:11.968 --> 00:22:13.801
you're actually running
much closer

00:22:13.801 --> 00:22:15.634
to the metal underneath that.

00:22:15.634 --> 00:22:17.801
Uh, we also launched something
called Renderscript,

00:22:17.801 --> 00:22:20.133
which is a way that you
can write even faster,

00:22:20.133 --> 00:22:21.968
um, graphics code.

00:22:21.968 --> 00:22:23.968
And that's how things
like the, uh,

00:22:23.968 --> 00:22:26.300
Google Books
page turn animation works,

00:22:26.300 --> 00:22:27.968
The YouTube dynamic gallery.

00:22:27.968 --> 00:22:30.634
All of that stuff
is written in Renderscript,

00:22:30.634 --> 00:22:32.634
uh, which is actually--
the coding language there

00:22:32.634 --> 00:22:34.801
is a variation of C--C99

00:22:34.801 --> 00:22:36.467
And we also have the ability

00:22:36.467 --> 00:22:38.300
of using the Android
Scripting Layer

00:22:38.300 --> 00:22:40.300
to be able to write things
in scripting languages,

00:22:40.300 --> 00:22:42.801
things like Python, Perl,
those sorts of languages.

00:22:42.801 --> 00:22:44.801
You can actually build apps

00:22:44.801 --> 00:22:47.133
using those languages as well,
though they'll have to run on--

00:22:47.133 --> 00:22:50.467
on top of an additional
interpreter.

00:22:50.467 --> 00:22:52.968
So when I say, you know,
I want you to build native apps,

00:22:52.968 --> 00:22:54.801
I can mean any of these things.

00:22:54.801 --> 00:22:56.634
I don't really mind
how you do it,

00:22:56.634 --> 00:22:58.634
but I do want you to focus
on Android specifically,

00:22:58.634 --> 00:23:02.033
and on the hardware layer.

00:23:02.033 --> 00:23:04.033
So what are the advantages?

00:23:04.033 --> 00:23:07.033
Why--why are we wanting
to build native apps?

00:23:07.033 --> 00:23:10.367
It's really because it gives you
a much richer experience.

00:23:10.367 --> 00:23:12.868
You're able to build things
which have much broader access

00:23:12.868 --> 00:23:14.534
to the underlying hardware.

00:23:14.534 --> 00:23:16.200
And it's not just that.

00:23:16.200 --> 00:23:17.868
You also have
a closer integration

00:23:17.868 --> 00:23:19.534
to the system features.

00:23:19.534 --> 00:23:21.367
You have this ability
to create apps

00:23:21.367 --> 00:23:22.868
which are optimized

00:23:22.868 --> 00:23:24.868
specifically for the hardware
that they're running on,

00:23:24.868 --> 00:23:26.868
specifically for the systems
that they're running on

00:23:26.868 --> 00:23:28.868
and with the other software
that's gonna be running

00:23:28.868 --> 00:23:30.367
on those systems.

00:23:30.367 --> 00:23:32.200
So it gives you the ability
to write something

00:23:32.200 --> 00:23:34.367
that's not just an app,
which is running on a screen,

00:23:34.367 --> 00:23:36.367
which could be running
on any hardware.

00:23:36.367 --> 00:23:38.367
It lets you create something
which is optimized

00:23:38.367 --> 00:23:40.367
for the things beyond
the screen size,

00:23:40.367 --> 00:23:42.300
with the hardware
which it's running on as well.

00:23:45.834 --> 00:23:47.667
So why--again, why develop?

00:23:47.667 --> 00:23:49.501
So for me it's all about power.

00:23:49.501 --> 00:23:51.334
It's the ability
to write something

00:23:51.334 --> 00:23:53.334
that's faster, smoother,
more efficient,

00:23:53.334 --> 00:23:55.334
and that was a key element
in one of the presentations

00:23:55.334 --> 00:23:56.834
I gave yesterday

00:23:56.834 --> 00:23:59.834
around how to build
great mobile apps for Android.

00:23:59.834 --> 00:24:01.901
And it's all about trying
to make things

00:24:01.901 --> 00:24:04.567
as smooth, as fast,
and efficient as possible.

00:24:04.567 --> 00:24:06.067
The thing about mobiles

00:24:06.067 --> 00:24:08.067
is that they are
resource-constrained devices.

00:24:08.067 --> 00:24:09.901
They're getting
increasingly powerful.

00:24:09.901 --> 00:24:13.400
They're great with tablets,
dual-core, all of these things.

00:24:13.400 --> 00:24:14.901
But it is fundamentally

00:24:14.901 --> 00:24:17.067
still a resource-constrained
device.

00:24:17.067 --> 00:24:19.734
Manufacturers are gonna try
and make the devices smaller,

00:24:19.734 --> 00:24:21.901
and they're gonna try and make
the batteries last longer.

00:24:21.901 --> 00:24:23.734
And that's gonna come
as a priority

00:24:23.734 --> 00:24:25.567
above making them run faster,

00:24:25.567 --> 00:24:27.901
which means that every ounce
of efficiency

00:24:27.901 --> 00:24:29.734
that you can pull
out of a device

00:24:29.734 --> 00:24:32.734
to make your app work better
is going to be valuable.

00:24:32.734 --> 00:24:35.067
And so when it comes to the idea
of building something natively

00:24:35.067 --> 00:24:36.901
or building something
on the Web,

00:24:36.901 --> 00:24:38.901
you--you're basically asking
the question

00:24:38.901 --> 00:24:40.901
can you afford to lose
the additional efficiency

00:24:40.901 --> 00:24:42.567
and power requirements

00:24:42.567 --> 00:24:44.901
by sticking another layer
in between your app

00:24:44.901 --> 00:24:48.734
and the device
that it's running on?

00:24:48.734 --> 00:24:51.067
The thing is
all of that is true,

00:24:51.067 --> 00:24:54.400
and even if the functionality
of HTML5

00:24:54.400 --> 00:24:56.400
was exactly the same
as native,

00:24:56.400 --> 00:24:58.400
then that--
that's already a reason

00:24:58.400 --> 00:25:00.400
to think about building
native instead.

00:25:00.400 --> 00:25:02.968
But there's a whole bunch
of additional functionality

00:25:02.968 --> 00:25:04.634
which you can take advantage of,

00:25:04.634 --> 00:25:06.300
which is why I really think

00:25:06.300 --> 00:25:08.801
if--if you can't improve
on a Web app

00:25:08.801 --> 00:25:11.801
using some of the native--
the Android SDK APIs,

00:25:11.801 --> 00:25:14.601
then you're probably
just not trying hard enough.

00:25:14.601 --> 00:25:17.133
And so that's a laugh
from the Android part--

00:25:17.133 --> 00:25:19.167
part of the crowd.
I thank you for that.

00:25:19.167 --> 00:25:20.801
But no, seriously, there is--

00:25:20.801 --> 00:25:23.133
there are so many things
which you can do now

00:25:23.133 --> 00:25:25.634
using the, uh,
the native APIs.

00:25:25.634 --> 00:25:28.133
And it's--it's really
all about innovation.

00:25:28.133 --> 00:25:30.634
So the--the great thing
about the Web

00:25:30.634 --> 00:25:32.634
is that it's
standards-based, right?

00:25:32.634 --> 00:25:34.634
The whole advantage
is that you write it once,

00:25:34.634 --> 00:25:36.801
and you can optimize it
for a number of platforms,

00:25:36.801 --> 00:25:38.801
but fundamentally
you can write it once

00:25:38.801 --> 00:25:40.801
and run it all across the Web.

00:25:40.801 --> 00:25:42.634
And that's fantastic.

00:25:42.634 --> 00:25:45.801
The way that works is because
it's all standards-based.

00:25:45.801 --> 00:25:47.467
And the problem with standards

00:25:47.467 --> 00:25:49.300
is that they necessarily
have to trail innovation.

00:25:49.300 --> 00:25:51.467
You can't--you can try
to set a standard

00:25:51.467 --> 00:25:53.801
before a piece
of hardware exists.

00:25:53.801 --> 00:25:55.801
It doesn't generally work
really well.

00:25:55.801 --> 00:25:57.801
A much better approach
is to find out

00:25:57.801 --> 00:25:59.801
what's happening.
What are people innovating with?

00:25:59.801 --> 00:26:01.868
What are people using?
And then create standards

00:26:01.868 --> 00:26:05.367
to be able to make that
more broadly available.

00:26:05.367 --> 00:26:07.033
that's fantastic.

00:26:07.033 --> 00:26:09.200
But what we're seeing is
a lot of the most popular apps,

00:26:09.200 --> 00:26:10.868
a lot of the most
successful apps

00:26:10.868 --> 00:26:12.868
are right at the leading edge
of that innovation trail.

00:26:12.868 --> 00:26:15.634
And that goes both in terms
of hardware and software.

00:26:18.033 --> 00:26:20.734
If you're looking
at hardware itself,

00:26:20.734 --> 00:26:23.033
the rate at which
mobile hardware innovation

00:26:23.033 --> 00:26:25.067
has been traveling
over the last few years

00:26:25.067 --> 00:26:26.534
is phenomenal.

00:26:26.534 --> 00:26:28.534
If you think--compare that
to Netbooks, notebooks,

00:26:28.534 --> 00:26:30.367
any sort of desktop computer,

00:26:30.367 --> 00:26:32.701
it's been pretty much
the same thing for decades.

00:26:32.701 --> 00:26:34.701
Right? Once the joystick
fell out of favor,

00:26:34.701 --> 00:26:38.033
it was screen, keyboard, mouse,

00:26:38.033 --> 00:26:40.367
and then different ways
to, uh, to connect peripherals.

00:26:40.367 --> 00:26:43.367
But fundamentally it was
the same user experience.

00:26:43.367 --> 00:26:45.868
With mobiles
that's completely changed.

00:26:45.868 --> 00:26:49.200
It's only a few years ago
when the first iPhone came out

00:26:49.200 --> 00:26:52.367
that we started to have
multi-touch on mobile devices,

00:26:52.367 --> 00:26:54.701
accelerometers for being able
to do game control.

00:26:54.701 --> 00:26:57.534
And then, you know,
Android comes on the scene,

00:26:57.534 --> 00:27:00.200
we get access
to the video APIs, compass.

00:27:00.200 --> 00:27:02.767
Background apps start to appear.

00:27:02.767 --> 00:27:05.400
And then every year
that's improved.

00:27:05.400 --> 00:27:08.434
So next was Bluetooth,
multiple screen sizes.

00:27:08.434 --> 00:27:10.767
Then last year we had
gyroscopes,

00:27:10.767 --> 00:27:12.267
front-facing cameras.

00:27:12.267 --> 00:27:14.267
And these things have really
revolutionized a lot of apps.

00:27:14.267 --> 00:27:16.267
Think about some of the apps
which you use

00:27:16.267 --> 00:27:18.601
which are only possible
because of these innovations.

00:27:18.601 --> 00:27:20.934
And the leaders were the ones
which were able to get in there

00:27:20.934 --> 00:27:23.434
and take advantage
of those new APIs

00:27:23.434 --> 00:27:25.100
as soon as they were released,

00:27:25.100 --> 00:27:26.934
without having to wait
for everyone else

00:27:26.934 --> 00:27:29.934
to be able to, uh,
to do it as well.

00:27:29.934 --> 00:27:32.968
This year we've seen barometers
on the Motorola Xoom.

00:27:32.968 --> 00:27:35.267
I haven't seen anyone use that
very constructively yet,

00:27:35.267 --> 00:27:37.100
but I am looking forward to it.

00:27:37.100 --> 00:27:39.267
NFC--huge.

00:27:39.267 --> 00:27:41.934
It's a staggering technology,
which is starting to roll out.

00:27:41.934 --> 00:27:43.767
You can wait until every phone
has NFC,

00:27:43.767 --> 00:27:46.767
or you can start building apps
which take advantage of it now

00:27:46.767 --> 00:27:48.434
and be a market leader

00:27:48.434 --> 00:27:50.934
for when everyone does
have, uh, NFC.

00:27:50.934 --> 00:27:54.267
Tablets, USB accessories,
uh, Android@Home--

00:27:54.267 --> 00:27:56.267
all of this great stuff
which we've seen launched

00:27:56.267 --> 00:27:57.934
over the last couple days.

00:27:57.934 --> 00:27:59.934
All of that is an opportunity
for you to create

00:27:59.934 --> 00:28:01.834
something new,
something innovative,

00:28:01.834 --> 00:28:03.834
um, to be at the real forefront

00:28:03.834 --> 00:28:06.367
of that market.

00:28:06.367 --> 00:28:08.667
What we're seeing these days
is the device manufacturers--

00:28:08.667 --> 00:28:11.000
they're using hardware
as a way to differentiate.

00:28:11.000 --> 00:28:13.000
And that's one of the advantages
of Android.

00:28:13.000 --> 00:28:15.000
They all have the same
software platform,

00:28:15.000 --> 00:28:17.000
so they need to build
cleverer hardware.

00:28:17.000 --> 00:28:19.000
They need to come up
with new features.

00:28:19.000 --> 00:28:21.000
So this is what we've seen over
the last three or four years.

00:28:21.000 --> 00:28:23.000
Imagine what we're gonna see
in the future.

00:28:23.000 --> 00:28:25.000
I think it's gonna continue
to innovate

00:28:25.000 --> 00:28:26.834
and continue to grow.

00:28:26.834 --> 00:28:29.834
We've seen exactly the same
thing on the software side.

00:28:29.834 --> 00:28:31.834
Right? So along
with that hardware,

00:28:31.834 --> 00:28:35.501
we've also seen great
innovations in mobile APIs.

00:28:35.501 --> 00:28:37.834
And these are some examples
of some apps

00:28:37.834 --> 00:28:40.000
which have really taken
advantage of this

00:28:40.000 --> 00:28:41.501
and become market leaders,

00:28:41.501 --> 00:28:43.501
whether it's Google Maps using
location-based services,

00:28:43.501 --> 00:28:45.834
which we all totally take
for granted now, right?

00:28:45.834 --> 00:28:48.167
We all know that our phones
know where we are.

00:28:48.167 --> 00:28:49.834
Uh, you know,
this is just assumed

00:28:49.834 --> 00:28:51.501
that every mobile device
can do this,

00:28:51.501 --> 00:28:53.501
but it's actually
a relatively recent thing.

00:28:53.501 --> 00:28:55.167
Uh, Shazam using audio input,

00:28:55.167 --> 00:28:56.834
Goggles using video input

00:28:56.834 --> 00:28:58.501
to do video recognition--
image recognition.

00:28:58.501 --> 00:29:01.067
"Angry Birds"--touch screens.

00:29:01.067 --> 00:29:03.067
The way games are played
has changed.

00:29:03.067 --> 00:29:05.901
It has been totally
revolutionized by smartphones

00:29:05.901 --> 00:29:08.567
with accelerometer input,
um, compasses, video,

00:29:08.567 --> 00:29:10.501
all of these sorts of things.

00:29:12.367 --> 00:29:14.300
So really what I'm saying

00:29:14.300 --> 00:29:16.300
is leverage the hardware
that's available,

00:29:16.300 --> 00:29:18.834
particularly when new platforms
are coming out.

00:29:18.834 --> 00:29:20.834
So we've all been using
smartphones for a long time.

00:29:20.834 --> 00:29:23.167
It's been, what, three years,
so it's passé now.

00:29:23.167 --> 00:29:25.000
What we're looking at now
is tablets.

00:29:25.000 --> 00:29:26.834
And all of you guys
have tablets,

00:29:26.834 --> 00:29:29.501
so there's no excuse for not
getting into tablet development.

00:29:29.501 --> 00:29:31.000
And--and it's more, right?

00:29:31.000 --> 00:29:33.000
There's Google TV--that's
around the corner as well--

00:29:33.000 --> 00:29:34.667
I mean literally
around the corner.

00:29:34.667 --> 00:29:36.334
It's actually out.

00:29:36.334 --> 00:29:38.000
Um, and we're seeing things--

00:29:38.000 --> 00:29:39.834
we're seeing Android really,
you know,

00:29:39.834 --> 00:29:41.667
populate a much broader
spectrum of devices,

00:29:41.667 --> 00:29:44.334
whether it's cars
or, you know, whatever else.

00:29:44.334 --> 00:29:46.534
We're seeing
this single platform

00:29:46.534 --> 00:29:49.334
as a place where you can really
take advantage of the hardware.

00:29:49.334 --> 00:29:52.167
We're gonna build the APIs to
make it easier for you to use.

00:29:52.167 --> 00:29:54.000
And that's what

00:29:54.000 --> 00:29:56.167
the Android accessories
development kit

00:29:56.167 --> 00:29:57.834
is all about as well.

00:29:57.834 --> 00:29:59.667
It's trying to give you
as developers access

00:29:59.667 --> 00:30:01.667
to be able to program
for more things.

00:30:01.667 --> 00:30:03.501
I mean, this is
really revolutionary.

00:30:03.501 --> 00:30:05.334
We're now living
through a time

00:30:05.334 --> 00:30:07.334
when we're making it possible
to write code

00:30:07.334 --> 00:30:10.834
which runs specifically on
different hardware platforms.

00:30:10.834 --> 00:30:13.167
It wasn't that long ago
that it was very difficult

00:30:13.167 --> 00:30:15.167
to actually get a piece
of software you wrote

00:30:15.167 --> 00:30:18.334
to run on an actual phone that
someone would go out and buy.

00:30:18.334 --> 00:30:20.334
And now that's something
that you can do right now.

00:30:20.334 --> 00:30:22.334
If you get bored during one
of the presentations,

00:30:22.334 --> 00:30:24.334
you can write an app,
launch it on Market,

00:30:24.334 --> 00:30:26.000
and it'll be there.

00:30:26.000 --> 00:30:27.834
And what we're seeing
is that this is now

00:30:27.834 --> 00:30:29.667
propagating across
a whole variety of hardware.

00:30:29.667 --> 00:30:32.334
So one of the key messages
I want to take away from you--

00:30:32.334 --> 00:30:35.000
or give you guys
to take away from this

00:30:35.000 --> 00:30:37.501
is think about
the actual hardware

00:30:37.501 --> 00:30:39.334
that your software
is running on.

00:30:39.334 --> 00:30:41.167
If you're building something
for Google TV,

00:30:41.167 --> 00:30:43.167
you should think about the APIs
that are specific to that.

00:30:43.167 --> 00:30:45.000
How can you integrate
TV guide information

00:30:45.000 --> 00:30:48.000
or, you know, whatever else
makes sense for that hardware?

00:30:48.000 --> 00:30:50.834
And it's the same with tablets.
It's the same with smartphones.

00:30:50.834 --> 00:30:52.868
And that--and that's what
native gives you

00:30:52.868 --> 00:30:54.667
is the ability to start
using that hardware

00:30:54.667 --> 00:30:56.834
as soon as it's available,
rather than having to wait

00:30:56.834 --> 00:30:58.767
until it becomes ubiquitous.

00:31:01.300 --> 00:31:03.501
And so this is some--
some of the stuff

00:31:03.501 --> 00:31:05.501
which is available,
uh, right now

00:31:05.501 --> 00:31:07.334
for native development.

00:31:07.334 --> 00:31:09.667
Um, so obviously you can develop
for smartphones,

00:31:09.667 --> 00:31:11.167
tablets, and TVs.

00:31:11.167 --> 00:31:12.834
Audio input is ubiquitous.

00:31:12.834 --> 00:31:14.667
Video input from front-
and rear-facing cameras

00:31:14.667 --> 00:31:16.167
is all there today.

00:31:16.167 --> 00:31:19.667
Uh, 10-finger multi-touch input,
um, which I will grant you,

00:31:19.667 --> 00:31:21.667
Mike, is now also available
on, uh,

00:31:21.667 --> 00:31:25.167
on many mobile platforms for
Web-based development as well.

00:31:25.167 --> 00:31:29.000
And things like
a generic sensor API,

00:31:29.000 --> 00:31:31.167
so that as new hardware sensors
get added

00:31:31.167 --> 00:31:33.000
to, uh, pieces of hardware,

00:31:33.000 --> 00:31:35.000
you're able to integrate that
into your applications

00:31:35.000 --> 00:31:36.501
really easily.

00:31:36.501 --> 00:31:38.501
And that's where we're seeing
things like orientation,

00:31:38.501 --> 00:31:41.334
accelerometers, barometers,
a variety of new hardware.

00:31:41.334 --> 00:31:43.834
I think there's gonna be a lot
of growth in that area as well.

00:31:43.834 --> 00:31:45.834
One of the key things as well,

00:31:45.834 --> 00:31:47.501
which isn't as common,

00:31:47.501 --> 00:31:49.667
is this ability to get
right to the low levels.

00:31:49.667 --> 00:31:51.667
So having access
to the telephony, Bluetooth,

00:31:51.667 --> 00:31:53.167
SIP stacks, USB--

00:31:53.167 --> 00:31:55.501
all of these things make it--
make it possible

00:31:55.501 --> 00:31:57.334
for you to create apps

00:31:57.334 --> 00:32:01.000
which fundamentally interact
with hardware.

00:32:01.000 --> 00:32:03.067
And in fact, it goes
that one step further,

00:32:03.067 --> 00:32:05.133
because your native apps
aren't just something

00:32:05.133 --> 00:32:07.901
which sits in a sandbox,
in an application sandbox,

00:32:07.901 --> 00:32:09.567
or within the browser.

00:32:09.567 --> 00:32:11.901
They become part of
the ecosystem on the device.

00:32:11.901 --> 00:32:13.901
So that means
that you can do things.

00:32:13.901 --> 00:32:15.901
You can actually work
with the system.

00:32:15.901 --> 00:32:17.734
You can listen
for system events.

00:32:17.734 --> 00:32:19.400
So if you want to build an app

00:32:19.400 --> 00:32:21.734
which is going to, uh,
listen for incoming calls,

00:32:21.734 --> 00:32:24.734
do a reverse number lookup,
and display who the caller is,

00:32:24.734 --> 00:32:26.234
you can do that.

00:32:26.234 --> 00:32:29.901
You can register an intent
to listen for incoming calls.

00:32:29.901 --> 00:32:31.734
You can do the same thing
with other apps.

00:32:31.734 --> 00:32:33.567
So if you want to have an app

00:32:33.567 --> 00:32:35.400
where you want to display
a location,

00:32:35.400 --> 00:32:37.067
you're able to make a call,

00:32:37.067 --> 00:32:38.734
again using
the intent framework,

00:32:38.734 --> 00:32:41.234
to say have something display
this on a map.

00:32:41.234 --> 00:32:43.400
And if Google Maps is installed,
it'll do that for you.

00:32:43.400 --> 00:32:45.400
You can do the same thing
in reverse.

00:32:45.400 --> 00:32:48.067
So if you have an app that can,
uh, book hotels,

00:32:48.067 --> 00:32:49.901
and you say, "well, look,
any app which wants

00:32:49.901 --> 00:32:51.734
"to be able to do this,
just send me

00:32:51.734 --> 00:32:53.567
the name of the hotel,
and I will book it for you."

00:32:53.567 --> 00:32:55.400
So it's a way that you can have
all of these apps

00:32:55.400 --> 00:32:56.901
interacting with each other,

00:32:56.901 --> 00:32:58.734
as well as interacting
with the citizen--

00:32:58.734 --> 00:33:00.400
uh, with the system itself,

00:33:00.400 --> 00:33:02.968
because they are
all first-class citizens,

00:33:02.968 --> 00:33:04.801
which means you can replace
any of the apps

00:33:04.801 --> 00:33:06.334
on the device as well.

00:33:06.334 --> 00:33:08.133
If you think you can build
a better home screen,

00:33:08.133 --> 00:33:09.968
build it, launch it,
put it in Market,

00:33:09.968 --> 00:33:11.801
and people will be able
to use it--

00:33:11.801 --> 00:33:13.634
same with dialers,
same with contact managers.

00:33:13.634 --> 00:33:15.300
Anything which is on the phone

00:33:15.300 --> 00:33:19.133
you're able to create
an alternative for.

00:33:19.133 --> 00:33:21.133
Another thing which I really
like about native apps

00:33:21.133 --> 00:33:23.300
is that they can be
truly background.

00:33:23.300 --> 00:33:24.801
And obviously the most--

00:33:24.801 --> 00:33:27.234
the most common use case
for this is a concurrent app,

00:33:27.234 --> 00:33:29.334
like, have a music player
in the background,

00:33:29.334 --> 00:33:31.801
and then you can continue
browsing at the same time.

00:33:31.801 --> 00:33:33.634
But it's really more than that.

00:33:33.634 --> 00:33:36.300
Native apps let you be able
to have much fresher data

00:33:36.300 --> 00:33:38.801
by being able
to continue to update

00:33:38.801 --> 00:33:40.968
in the background,
even if the app isn't running.

00:33:40.968 --> 00:33:43.467
So you don't have
the associated battery drain

00:33:43.467 --> 00:33:45.300
of having something
which constantly runs.

00:33:45.300 --> 00:33:46.968
You can set an alarm

00:33:46.968 --> 00:33:49.300
and say when connectivity
returns, do this.

00:33:49.300 --> 00:33:52.033
Or if, uh, if an incoming call
comes in,

00:33:52.033 --> 00:33:54.367
that's when I want my app
to be started up

00:33:54.367 --> 00:33:55.868
and to be active.

00:33:55.868 --> 00:33:58.367
And for all other times
it can be completely stopped.

00:33:58.367 --> 00:34:00.367
It can be not running at all.

00:34:00.367 --> 00:34:03.601
You can also do things
like a server-side push...

00:34:03.601 --> 00:34:06.100
so Cloud to Device Messaging
lets you transmit a message

00:34:06.100 --> 00:34:08.100
from a server to your app
to say

00:34:08.100 --> 00:34:09.767
you have new information,

00:34:09.767 --> 00:34:11.601
so start up
and download something

00:34:11.601 --> 00:34:14.467
or notify the user of something.

00:34:14.467 --> 00:34:16.801
You can actually do
the same thing on the device.

00:34:16.801 --> 00:34:20.133
Uh, so again, you can have these
recurring background alarms,

00:34:20.133 --> 00:34:22.467
so your device--your app
can be completely off.

00:34:22.467 --> 00:34:24.467
In fact, the device
can be on standby.

00:34:24.467 --> 00:34:26.467
And you can say, look,
every hour,

00:34:26.467 --> 00:34:29.133
I want you to wake up, pull down
the latest news headlines

00:34:29.133 --> 00:34:31.801
or tweets
or whatever it is you want.

00:34:31.801 --> 00:34:33.968
And then as soon as the app
gets launched,

00:34:33.968 --> 00:34:37.300
It's able to have that fresh,
up-to-date data.

00:34:37.300 --> 00:34:38.968
And the advantage here
is twofold.

00:34:38.968 --> 00:34:40.801
Not only do you get
fresher data

00:34:40.801 --> 00:34:42.634
without having to do
an exclusive reset.

00:34:42.634 --> 00:34:44.467
but you also save
on battery life,

00:34:44.467 --> 00:34:46.501
because your app doesn't need
to be constantly running

00:34:46.501 --> 00:34:49.300
in the background in order
to get those updates.

00:34:49.300 --> 00:34:51.300
Full offline support,
I mean, this is something

00:34:51.300 --> 00:34:54.300
which again is coming to HTML,

00:34:54.300 --> 00:34:56.133
but it's something
which is really rich

00:34:56.133 --> 00:34:57.634
on the native platform.

00:34:57.634 --> 00:34:59.968
So not only can you have,
you know, your app data cached,

00:34:59.968 --> 00:35:02.033
you can actually download
the entire contents,

00:35:02.033 --> 00:35:03.534
store them on the device,

00:35:03.534 --> 00:35:05.868
and have them available
for things like search.

00:35:05.868 --> 00:35:08.367
I use GMAIL every morning
on my way into work.

00:35:08.367 --> 00:35:10.200
I triage my e-mail--

00:35:10.200 --> 00:35:11.868
constructive use of my time.

00:35:11.868 --> 00:35:14.200
The thing is I commute to work
via the London Underground,

00:35:14.200 --> 00:35:16.033
which means I have
no internet connection

00:35:16.033 --> 00:35:18.534
for most of that journey,
but it doesn't matter.

00:35:18.534 --> 00:35:20.701
I open up GMAIL.
I read all of my messages.

00:35:20.701 --> 00:35:23.033
Archive, reply to--
put it in my pocket.

00:35:23.033 --> 00:35:24.868
And then as I walk
to the office,

00:35:24.868 --> 00:35:27.367
it gets a 3G connection,
and everything is synced.

00:35:27.367 --> 00:35:30.367
By the time I sit at my desk,
everything is up to date.

00:35:30.367 --> 00:35:32.200
And it's that rich
offline support

00:35:32.200 --> 00:35:35.200
without ever really needing
to be online at all,

00:35:35.200 --> 00:35:39.033
uh, which creates a really great
user experience.

00:35:39.033 --> 00:35:41.033
One of the other things--
and this is something

00:35:41.033 --> 00:35:43.033
which I really like
about Android specifically--

00:35:43.033 --> 00:35:45.701
is the fact that your apps
become more than just, uh,

00:35:45.701 --> 00:35:47.868
an icon in the launcher.

00:35:47.868 --> 00:35:49.868
You can create
home screen widgets,

00:35:49.868 --> 00:35:51.367
live wallpapers.

00:35:51.367 --> 00:35:53.734
Uh, you can have notifications
which get triggered to--

00:35:53.734 --> 00:35:56.033
to tell you of things like, uh,
you know, incoming e-mail

00:35:56.033 --> 00:35:57.534
or instant messages.

00:35:57.534 --> 00:35:59.868
And because all apps are created
equal on the platform,

00:35:59.868 --> 00:36:02.767
you can do anything which any
of the native apps can do.

00:36:02.767 --> 00:36:04.434
And so this is
a really great way

00:36:04.434 --> 00:36:07.100
of being able to make
your content much more engaging.

00:36:07.100 --> 00:36:08.934
So someone doesn't
have to remember

00:36:08.934 --> 00:36:10.767
to navigate to your site
or look up a bookmark

00:36:10.767 --> 00:36:12.767
or even start your app
in the launcher.

00:36:12.767 --> 00:36:14.601
By having widgets,
notifications,

00:36:14.601 --> 00:36:16.267
you're able to pull
more traffic,

00:36:16.267 --> 00:36:18.601
more engagement,
more users into your app.

00:36:18.601 --> 00:36:20.434
'Cause that's ultimately
what you want

00:36:20.434 --> 00:36:22.267
is for people to use
your app more.

00:36:22.267 --> 00:36:24.934
Downloading it is really
only the first step.

00:36:24.934 --> 00:36:27.501
So this is a little summary
of all of the things

00:36:27.501 --> 00:36:29.934
that you can do
using native APIs

00:36:29.934 --> 00:36:31.934
across all
of the Android devices.

00:36:31.934 --> 00:36:33.434
And there are additional things,

00:36:33.434 --> 00:36:35.267
which limit it
to some of the newer versions,

00:36:35.267 --> 00:36:38.267
but this is pretty
fundamentally everything

00:36:38.267 --> 00:36:40.267
that is there.

00:36:40.267 --> 00:36:42.767
So, uh, I'm gonna
hand back over to Mike.

00:36:42.767 --> 00:36:45.267
Mahemoff: Okay, so I just wanted
to really summarize

00:36:45.267 --> 00:36:46.767
our two arguments,

00:36:46.767 --> 00:36:48.601
and then we'll shift gears
a little bit

00:36:48.601 --> 00:36:50.100
towards making this practical.

00:36:50.100 --> 00:36:51.934
So to sum up,
really what I'm saying here

00:36:51.934 --> 00:36:53.934
is that HTML5 is a technology

00:36:53.934 --> 00:36:56.601
that's here now
on the mobile devices

00:36:56.601 --> 00:36:59.133
as well as any other--
many other types of hardware.

00:36:59.133 --> 00:37:01.667
It's a capable platform as well,

00:37:01.667 --> 00:37:04.334
so it's got these events,
UI capabilities I've shown you,

00:37:04.334 --> 00:37:06.334
and beyond that.

00:37:06.334 --> 00:37:08.667
And it's an open technology.
It's something that many people

00:37:08.667 --> 00:37:11.000
in your organizations
probably already know.

00:37:11.000 --> 00:37:13.000
And you have to have
Web apps anyway.

00:37:13.000 --> 00:37:14.667
People will use the browser.

00:37:14.667 --> 00:37:17.501
So it's got all those benefits.

00:37:17.501 --> 00:37:20.000
On the other side of things,
Reto's pointed out

00:37:20.000 --> 00:37:22.501
native apps tend to be
more integrated,

00:37:22.501 --> 00:37:25.167
with the--the deeper
hardware integration

00:37:25.167 --> 00:37:27.000
that tends to stay a step ahead,

00:37:27.000 --> 00:37:30.501
um, as well as the fact that
you've got the user experience

00:37:30.501 --> 00:37:33.200
that's, like, built into
that native look and feel

00:37:33.200 --> 00:37:35.167
for each of the platforms.

00:37:35.167 --> 00:37:37.834
Um, so really the next point
really is just to say,

00:37:37.834 --> 00:37:39.801
like, what can we actually do
about these things?

00:37:39.801 --> 00:37:41.801
Meier: How many of you guys
were hoping

00:37:41.801 --> 00:37:43.634
that we would give you
one answer

00:37:43.634 --> 00:37:45.467
so you would be able
to come out knowing?

00:37:45.467 --> 00:37:47.300
[laughter]
Meier: Yeah, a few of you?

00:37:47.300 --> 00:37:49.300
It's--it's really not that
straightforward, right?

00:37:49.300 --> 00:37:51.133
It's not as easy
as which should I do?

00:37:51.133 --> 00:37:52.801
If--if it was that easy,

00:37:52.801 --> 00:37:54.634
then Google would just do one.

00:37:54.634 --> 00:37:56.300
But we don't.
We do both.

00:37:56.300 --> 00:37:58.801
And fundamentally,
that's the answer, right?

00:37:58.801 --> 00:38:01.534
You--you can't just be focusing
on one thing.

00:38:01.534 --> 00:38:03.367
It's--it's pretty clear
at this point

00:38:03.367 --> 00:38:05.200
that the Web is the future,

00:38:05.200 --> 00:38:07.434
so you cannot ignore this
as a platform.

00:38:07.434 --> 00:38:09.100
And if you want real reach,

00:38:09.100 --> 00:38:10.767
then building a mobile app,

00:38:10.767 --> 00:38:12.767
um, which is Web-based,

00:38:12.767 --> 00:38:15.100
is--is kind of a no-brainer.

00:38:15.100 --> 00:38:17.100
You can build one app,
and it's gonna run

00:38:17.100 --> 00:38:18.934
all across all of these devices.

00:38:18.934 --> 00:38:21.601
And for a lot of content,
that's gonna make perfect sense.

00:38:21.601 --> 00:38:24.267
You should be building something
which everyone can use.

00:38:24.267 --> 00:38:26.767
But at the same time,
there's all these native APIs,

00:38:26.767 --> 00:38:28.934
all of these native advantages
which can let you

00:38:28.934 --> 00:38:30.601
build something really great.

00:38:30.601 --> 00:38:32.601
So fundamentally,
I guess what we're saying

00:38:32.601 --> 00:38:34.601
is maybe build a Web app
for everyone,

00:38:34.601 --> 00:38:36.601
and if you've already got
a Web site,

00:38:36.601 --> 00:38:38.434
then it kind of
should already be

00:38:38.434 --> 00:38:40.300
a mobile-optimized
Web site as well.

00:38:40.300 --> 00:38:43.100
That's increasingly how people
are trying to access Web content

00:38:43.100 --> 00:38:44.767
is on mobile browsers.

00:38:44.767 --> 00:38:46.434
So that's kind of a gimme.

00:38:46.434 --> 00:38:48.601
Beyond that you want
to then create

00:38:48.601 --> 00:38:51.267
an optimized version
using those native APIs

00:38:51.267 --> 00:38:53.267
to build something better.

00:38:53.267 --> 00:38:54.934
One of the ways you can do this

00:38:54.934 --> 00:38:57.000
while leveraging the work
you've already done

00:38:57.000 --> 00:38:58.934
is by using WebViews.

00:38:58.934 --> 00:39:00.767
Most of the smartphone platforms

00:39:00.767 --> 00:39:03.000
have something equivalent
to a WebView,

00:39:03.000 --> 00:39:05.000
but I'm gonna talk
about Android specifically.

00:39:05.000 --> 00:39:07.167
But this is a way that you can
embed Web content

00:39:07.167 --> 00:39:10.000
into your native applications.

00:39:10.000 --> 00:39:12.334
It--it's kind of an obvious
thing to do here.

00:39:12.334 --> 00:39:15.000
If you've got content which
has already being formatted,

00:39:15.000 --> 00:39:16.834
looks beautiful,
you've got your UX people

00:39:16.834 --> 00:39:19.434
building stuff in HTML,
why not use that

00:39:19.434 --> 00:39:22.000
to display the content
within your applications?

00:39:22.000 --> 00:39:25.501
What you do then is that becomes
the mainstay of your app,

00:39:25.501 --> 00:39:27.501
and then everything else
becomes chrome.

00:39:27.501 --> 00:39:29.834
So you then--you know,
all of the action bars,

00:39:29.834 --> 00:39:31.834
all of interaction
with accelerometers,

00:39:31.834 --> 00:39:34.834
with the native hardware--
you can do all of that stuff,

00:39:34.834 --> 00:39:36.834
but then just display
the content

00:39:36.834 --> 00:39:39.100
specifically using a WebView.

00:39:41.501 --> 00:39:44.501
And in fact, if you've been
using the Google I/O app

00:39:44.501 --> 00:39:45.834
throughout the conference,

00:39:45.834 --> 00:39:48.000
you've already been using an app
which does exactly this.

00:39:48.000 --> 00:39:50.334
So all of the, uh,
the maps are actually done

00:39:50.334 --> 00:39:52.000
not using a MapView,

00:39:52.000 --> 00:39:53.667
but by using a WebView,

00:39:53.667 --> 00:39:56.000
which using the Google Maps API.

00:39:56.000 --> 00:39:58.667
And you can see we've got
the real-time stream of tweets,

00:39:58.667 --> 00:40:00.167
I think.

00:40:00.167 --> 00:40:02.334
Um, and that also is going
to be just a WebView,

00:40:02.334 --> 00:40:05.334
um, which has a particular
amount of content put into it.

00:40:05.334 --> 00:40:07.167
Everything else
is purely native.

00:40:07.167 --> 00:40:09.501
So all of the action bar stuff,
all of the things

00:40:09.501 --> 00:40:11.501
which are optimized
for tablets or smartphones

00:40:11.501 --> 00:40:13.000
is all done natively.

00:40:13.000 --> 00:40:15.000
But we have this ability
to just wrap the content,

00:40:15.000 --> 00:40:18.167
um, for specific parts
of the app

00:40:18.167 --> 00:40:21.501
using a WebView.

00:40:21.501 --> 00:40:23.501
Mahemoff: And I just want
to finish off

00:40:23.501 --> 00:40:25.501
with just a few tips
on just HTML5

00:40:25.501 --> 00:40:27.334
and JavaScript in general

00:40:27.334 --> 00:40:29.334
when you're dealing
with mobile devices

00:40:29.334 --> 00:40:32.334
and going across
the various platforms.

00:40:32.334 --> 00:40:34.667
Firstly, there are
libraries available.

00:40:34.667 --> 00:40:37.334
I already mentioned
that you've got these libraries

00:40:37.334 --> 00:40:40.000
that are now very powerful
and very widely used,

00:40:40.000 --> 00:40:41.501
like jQuery,

00:40:41.501 --> 00:40:44.000
that are just used
for general Web applications.

00:40:44.000 --> 00:40:45.667
Those things also work.

00:40:45.667 --> 00:40:48.000
They work quite nicely
in most cases

00:40:48.000 --> 00:40:50.334
on the mobile devices as well.

00:40:50.334 --> 00:40:52.667
and at the same time,
there are more and more

00:40:52.667 --> 00:40:56.334
mobile-specific HTML5
frameworks and libraries

00:40:56.334 --> 00:40:58.000
that you can hook into.

00:40:58.000 --> 00:41:00.501
So there are things like--
um, we've got Sencha Touch here.

00:41:00.501 --> 00:41:02.567
This is an example of an app
they've created

00:41:02.567 --> 00:41:04.400
that works
right across the board,

00:41:04.400 --> 00:41:06.400
showing a conference schedule.

00:41:06.400 --> 00:41:08.067
SproutCore--it's a touch app.

00:41:08.067 --> 00:41:09.734
You can see the same kind of app

00:41:09.734 --> 00:41:11.567
running in the Chrome
Web store as well.

00:41:11.567 --> 00:41:13.734
So it's that experience,
or that--that philosophy

00:41:13.734 --> 00:41:15.400
of writing the same app.

00:41:15.400 --> 00:41:17.901
In the case of the mobile
or the tablets,

00:41:17.901 --> 00:41:19.734
you can swipe
and just go across.

00:41:19.734 --> 00:41:22.634
Otherwise you use the mouse
on the desktop.

00:41:22.634 --> 00:41:24.634
Um, it's an NPR app, actually.

00:41:24.634 --> 00:41:26.667
And--and jQuery mobile

00:41:26.667 --> 00:41:28.968
is kind of the new kid
on the block here

00:41:28.968 --> 00:41:30.968
and--and already very popular,
because it's based--

00:41:30.968 --> 00:41:33.467
or it's the similar sort
of concept as jQuery

00:41:33.467 --> 00:41:35.300
with the same team.

00:41:35.300 --> 00:41:38.200
Um, it's--
it's actually very, um,

00:41:38.200 --> 00:41:40.634
sort of more of
a micro kernel approach,

00:41:40.634 --> 00:41:42.801
um, and it's got
the ability to theme,

00:41:42.801 --> 00:41:44.634
so you can cover
the different devices,

00:41:44.634 --> 00:41:46.634
and a very permissive license
as well,

00:41:46.634 --> 00:41:48.634
being MIT based.

00:41:48.634 --> 00:41:51.300
Think about
progressive enhancement,

00:41:51.300 --> 00:41:54.968
the idea that you have
your raw, basic Web site,

00:41:54.968 --> 00:41:57.634
uh, a traditional Web site,
just some markup,

00:41:57.634 --> 00:41:59.968
again, something we showed
in the previous session

00:41:59.968 --> 00:42:02.033
on--on mobile development
for the Web

00:42:02.033 --> 00:42:04.701
is--you know,
this actually does work.

00:42:04.701 --> 00:42:07.367
We showed this working
in your basic browsers

00:42:07.367 --> 00:42:08.868
like Opera Mini.

00:42:08.868 --> 00:42:11.033
And many people do
actually still access the Web

00:42:11.033 --> 00:42:13.033
from very traditional, uh,

00:42:13.033 --> 00:42:15.200
from very traditional devices,

00:42:15.200 --> 00:42:17.534
you know, that have very basic
Web capabilities

00:42:17.534 --> 00:42:19.200
on the mobiles.

00:42:19.200 --> 00:42:21.200
And if you do your app right,
you can actually get it working

00:42:21.200 --> 00:42:22.701
for those as well.

00:42:22.701 --> 00:42:24.534
And then you go ahead
and you enhance it,

00:42:24.534 --> 00:42:26.033
so you're actually--

00:42:26.033 --> 00:42:28.033
in this case we're basically
"hijacking" these links

00:42:28.033 --> 00:42:31.367
to actually say
if we do have JavaScript here,

00:42:31.367 --> 00:42:33.234
we're gonna go further,

00:42:33.234 --> 00:42:35.033
and we're gonna
actually not go ahead

00:42:35.033 --> 00:42:36.701
and click to reload the page.

00:42:36.701 --> 00:42:39.033
Instead we're gonna do
something dynamic.

00:42:39.033 --> 00:42:41.033
We can do fallbacks.
So I already showed you,

00:42:41.033 --> 00:42:43.033
you can do fallback with
something like &lt;canvas&gt;

00:42:43.033 --> 00:42:44.534
or any other tag.

00:42:44.534 --> 00:42:46.367
If it doesn't exist,
the--the browser

00:42:46.367 --> 00:42:49.534
or the HTML5 runtime,
it will still process it.

00:42:49.534 --> 00:42:51.534
And we can do that sort of thing
with video, too.

00:42:51.534 --> 00:42:54.033
We can fall back from,
you know, one format

00:42:54.033 --> 00:42:56.200
to another format
to Flash

00:42:56.200 --> 00:42:59.200
to just downloading.

00:42:59.200 --> 00:43:00.868
We can do feature detection--

00:43:00.868 --> 00:43:02.767
um, very important thing
nowadays--

00:43:02.767 --> 00:43:05.601
based on the premise
that you can't try to detect

00:43:05.601 --> 00:43:07.601
every sort of different device.

00:43:07.601 --> 00:43:09.434
It's just not practical.

00:43:09.434 --> 00:43:11.100
And even if you could,

00:43:11.100 --> 00:43:12.934
you wouldn't want
to create separate apps

00:43:12.934 --> 00:43:14.601
for all these different devices.

00:43:14.601 --> 00:43:16.434
So rather than having
this whole, uh,

00:43:16.434 --> 00:43:17.934
combinatorial explosion

00:43:17.934 --> 00:43:20.100
of--of apps
you have to deal with,

00:43:20.100 --> 00:43:21.934
just put a little bit
of intelligence

00:43:21.934 --> 00:43:23.767
into your app
to make some decisions

00:43:23.767 --> 00:43:25.767
as the app is actually running
about what to do

00:43:25.767 --> 00:43:28.767
and then perhaps download
some extra content

00:43:28.767 --> 00:43:31.100
or some extra type
of application logic,

00:43:31.100 --> 00:43:32.934
depending on what are
the capabilities

00:43:32.934 --> 00:43:34.434
of the current device?

00:43:34.434 --> 00:43:36.434
Like I said before,
HTML5 is not perfect.

00:43:36.434 --> 00:43:38.100
It's not a magic bullet.

00:43:38.100 --> 00:43:41.100
You still have to do some
difference of logic and so on

00:43:41.100 --> 00:43:43.100
to reach all these
different devices.

00:43:43.100 --> 00:43:46.200
But the benefit you get
is a vast amount of reuse.

00:43:48.267 --> 00:43:50.267
There's library support
for this sort of thing, too.

00:43:50.267 --> 00:43:52.267
So we've got a library
called Modernizr

00:43:52.267 --> 00:43:54.267
that's becoming
extremely popular,

00:43:54.267 --> 00:43:56.767
um, which actually does
the detection for you.

00:43:56.767 --> 00:43:59.434
On a previous slide, I showed
the kind of low-level detection

00:43:59.434 --> 00:44:00.934
you can do,

00:44:00.934 --> 00:44:03.334
sort of doing things
like creating something

00:44:03.334 --> 00:44:05.334
and seeing if it
actually was created

00:44:05.334 --> 00:44:07.334
or setting an attribute
and seeing--

00:44:07.334 --> 00:44:09.000
reading it back to see

00:44:09.000 --> 00:44:10.834
if the browser
actually recognized it.

00:44:10.834 --> 00:44:12.834
You don't really have to do
those low-level things anymore

00:44:12.834 --> 00:44:14.334
for feature detection,

00:44:14.334 --> 00:44:16.167
because there are libraries
like Modernizr

00:44:16.167 --> 00:44:18.000
that do it for you.

00:44:18.000 --> 00:44:20.834
There's also a slightly
higher-level layer on Modernizr

00:44:20.834 --> 00:44:22.334
that will actually--

00:44:22.334 --> 00:44:24.167
uh, it doesn't have
to be Modernizr,

00:44:24.167 --> 00:44:26.501
but it--it's basically, uh,
around those kind of use cases

00:44:26.501 --> 00:44:29.501
for people who are using
Modernizr, called YepNope.

00:44:29.501 --> 00:44:32.334
And basically just--
basically it says, you know,

00:44:32.334 --> 00:44:34.334
if you've got this feature,
we're gonna download

00:44:34.334 --> 00:44:36.167
an extra layer
of JavaScript and CSS.

00:44:36.167 --> 00:44:38.834
If not, we'll use
something else.

00:44:38.834 --> 00:44:41.667
Polyfills is the idea

00:44:41.667 --> 00:44:44.167
that you don't necessarily
have to fall back.

00:44:44.167 --> 00:44:46.667
I've already talked
about graceful degradation.

00:44:46.667 --> 00:44:49.167
But what if you could actually
just fake it, right?

00:44:49.167 --> 00:44:52.834
And actually say we don't have
this particular feature.

00:44:52.834 --> 00:44:54.334
We might not have SVG

00:44:54.334 --> 00:44:56.667
in a browser like IE 6
for instance,

00:44:56.667 --> 00:44:58.334
So we'll just fake it.

00:44:58.334 --> 00:45:00.167
We'll fake it
with something else.

00:45:00.167 --> 00:45:02.734
Um, so in this case we can say
there's a library called canvg,

00:45:02.734 --> 00:45:06.234
um, which will actually fake SVG
using Canvas

00:45:06.234 --> 00:45:09.234
for things that have Canvas
but not SVG.

00:45:09.234 --> 00:45:11.734
Um, storage--so I've already
shown you a little bit

00:45:11.734 --> 00:45:14.734
about local storage to make
your apps work offline.

00:45:14.734 --> 00:45:17.067
Really old browsers,
uh, don't have

00:45:17.067 --> 00:45:19.567
even the basic
local storage support.

00:45:19.567 --> 00:45:21.567
So for those browsers,
you can resort

00:45:21.567 --> 00:45:23.400
to everyone's friend,
the old cookie,

00:45:23.400 --> 00:45:26.901
and store a very minimum--
minimal amount of data,

00:45:26.901 --> 00:45:29.901
but you can still do something
useful with that,

00:45:29.901 --> 00:45:31.901
and likewise geolocation
and so on.

00:45:31.901 --> 00:45:34.901
And the point about these is
you can use them yourself,

00:45:34.901 --> 00:45:37.067
so you can talk
to that more modern API.

00:45:37.067 --> 00:45:38.901
And eventually when
those devices

00:45:38.901 --> 00:45:40.567
and browsers become deprecated,

00:45:40.567 --> 00:45:43.567
you can just switch off the--
any kind of checking.

00:45:43.567 --> 00:45:45.901
But also for
third-party libraries,

00:45:45.901 --> 00:45:47.567
these are really powerful,

00:45:47.567 --> 00:45:49.234
because the third-party
libraries

00:45:49.234 --> 00:45:51.234
might be taking advantage
of those newer features.

00:45:51.234 --> 00:45:52.901
And you can sort of jump in.

00:45:52.901 --> 00:45:54.567
JavaScript's
a very dynamic language

00:45:54.567 --> 00:45:56.567
that lets you do these things
like what's called

00:45:56.567 --> 00:45:58.567
"monkey-patching"
or "hijacking."

00:45:58.567 --> 00:46:00.234
So you can sort of
intercept things

00:46:00.234 --> 00:46:02.467
and say, actually, no,
the object you're talking to--

00:46:02.467 --> 00:46:06.133
do this instead.
Use this object.

00:46:06.133 --> 00:46:08.801
And finally, I wanted
to share with you--

00:46:08.801 --> 00:46:11.801
I spoke to Roman, who actually
created the I/O app

00:46:11.801 --> 00:46:13.467
that you have seen--

00:46:13.467 --> 00:46:15.467
just the sort of techniques
that you can use

00:46:15.467 --> 00:46:16.968
and he's using there

00:46:16.968 --> 00:46:18.801
to actually communicate
back and forth

00:46:18.801 --> 00:46:20.801
between the native components
of Android

00:46:20.801 --> 00:46:23.300
and--and the HTML5 components.

00:46:23.300 --> 00:46:26.133
So if you are creating one
of those sorts of hybrid apps

00:46:26.133 --> 00:46:28.634
that Reto was advocating
a moment ago,

00:46:28.634 --> 00:46:30.968
you can go in both directions
with Android.

00:46:30.968 --> 00:46:33.300
You can basically have
a native part,

00:46:33.300 --> 00:46:36.133
um, talk to
the--the JavaScript part,

00:46:36.133 --> 00:46:39.300
basically making calls
using that loadURL command.

00:46:39.300 --> 00:46:41.634
So, um, if you've got a WebView,

00:46:41.634 --> 00:46:44.634
instead of actually loadURL
opening up a new Web site,

00:46:44.634 --> 00:46:46.133
as you'd expect,

00:46:46.133 --> 00:46:48.300
you can just pass it JavaScript
commands the same way.

00:46:48.300 --> 00:46:50.467
Some of you might know

00:46:50.467 --> 00:46:52.467
you can write those kinds
of JavaScript commands

00:46:52.467 --> 00:46:55.367
on--on the actual browser,
like the way bookmarklets work.

00:46:55.367 --> 00:46:57.100
And in the opposite direction,

00:46:57.100 --> 00:47:01.033
HTML5 can actually talk
to the native components,

00:47:01.033 --> 00:47:04.367
using this pretty cool method

00:47:04.367 --> 00:47:06.701
that's addJavaScriptInterface.

00:47:06.701 --> 00:47:09.033
So it lets you kind of,
uh, send in

00:47:09.033 --> 00:47:12.033
a native component
into the JavaScript app,

00:47:12.033 --> 00:47:14.033
and you basically provide
an interface for that.

00:47:14.033 --> 00:47:16.701
That gives you full
communication between the two

00:47:16.701 --> 00:47:19.200
and lets you writes--
write one of those hybrid apps.

00:47:19.200 --> 00:47:21.200
I think that's about all.

00:47:21.200 --> 00:47:23.000
We've got some resources there
to help you with.

00:47:23.000 --> 00:47:24.667
And I think that's it.

00:47:24.667 --> 00:47:26.667
I think we can take
questions now, yeah.

00:47:26.667 --> 00:47:28.334
Great, thank you.
Meier: Thanks.

00:47:28.334 --> 00:47:31.267
[applause]

00:47:35.000 --> 00:47:37.000
man: Um, one of the technologies

00:47:37.000 --> 00:47:39.000
that you didn't talk about,

00:47:39.000 --> 00:47:42.667
and they also have a--
sort of a similar message

00:47:42.667 --> 00:47:45.834
is, um, Adobe Flex and AIR,

00:47:45.834 --> 00:47:47.834
uh, because that's available

00:47:47.834 --> 00:47:50.000
on Android, on Blackberry,
PlayBook,

00:47:50.000 --> 00:47:53.501
and also there is a way
to get it onto iOS.

00:47:53.501 --> 00:47:55.501
Um, what would you suggest
the strategy--

00:47:55.501 --> 00:47:58.334
like, Adobe AIR versus HTML5...
Mahemoff: Okay.

00:47:58.334 --> 00:47:59.834
man: versus native?

00:47:59.834 --> 00:48:01.734
Mahemoff: Yeah, I think
it's an interesting

00:48:01.734 --> 00:48:03.901
sort of third situation
with, uh,

00:48:03.901 --> 00:48:05.567
the Flash and AIR and so on.

00:48:05.567 --> 00:48:07.434
Um, I guess the way
I see Flash--

00:48:07.434 --> 00:48:09.234
people always ask me
about Flash.

00:48:09.234 --> 00:48:11.901
Um, I think it's been
a good technology on the Web

00:48:11.901 --> 00:48:13.901
for actually going, uh,
a step ahead,

00:48:13.901 --> 00:48:15.901
like the same sort of way
Reto's talked

00:48:15.901 --> 00:48:17.901
about native technologies
going a step ahead.

00:48:17.901 --> 00:48:19.901
I think Flash
has always done that.

00:48:19.901 --> 00:48:21.901
It's now gonna be a challenge
to see if it can

00:48:21.901 --> 00:48:23.567
keep on going in that direction.

00:48:23.567 --> 00:48:26.567
I think the Web
has some obvious advantages.

00:48:26.567 --> 00:48:28.567
Um, the fact that people
do just have to have

00:48:28.567 --> 00:48:31.067
normal Web sites
as an open technology

00:48:31.067 --> 00:48:33.067
without any one
particular vendor

00:48:33.067 --> 00:48:35.734
controlling its destiny,
if you like,

00:48:35.734 --> 00:48:38.067
so I think that's where
the challenge

00:48:38.067 --> 00:48:40.267
for that whole set
of technologies is,

00:48:40.267 --> 00:48:42.234
like to keep staying
ahead of the game.

00:48:42.234 --> 00:48:45.234
So you can have those kind
of native technologies,

00:48:45.234 --> 00:48:47.901
um, but actually go across
the different devices.

00:48:47.901 --> 00:48:49.901
Meier: Yeah, I think
that's the big challenge

00:48:49.901 --> 00:48:51.400
for the Adobe stuff,

00:48:51.400 --> 00:48:53.400
or really anything other
than sort of Web or native,

00:48:53.400 --> 00:48:55.234
which are the two extremes,

00:48:55.234 --> 00:48:58.234
is not getting stuck with
the negatives of both worlds.

00:48:58.234 --> 00:49:00.234
You know, it doesn't work
on everything,

00:49:00.234 --> 00:49:02.801
and it doesn't have a full range
of native support.

00:49:02.801 --> 00:49:04.801
I think that's where
the challenge is gonna be.

00:49:04.801 --> 00:49:06.634
Mahemoff: And there's also--
in some respects,

00:49:06.634 --> 00:49:08.467
there's been better tooling,
traditionally,

00:49:08.467 --> 00:49:09.968
for Flash as well.

00:49:09.968 --> 00:49:11.968
So that's where the advantage
over the Web has been,

00:49:11.968 --> 00:49:14.300
but now there's starting to be
a lot more tools for--

00:49:14.300 --> 00:49:16.133
and actually not just
those sort of libraries

00:49:16.133 --> 00:49:17.634
I've talked about,

00:49:17.634 --> 00:49:19.467
but people are
just starting to write

00:49:19.467 --> 00:49:21.300
sort of animation toolkits
and so on as well. Yeah.

00:49:21.300 --> 00:49:22.968
man: Thank you.
man: Uh, yeah,

00:49:22.968 --> 00:49:25.968
if you're developing
one of these hybrid apps,

00:49:25.968 --> 00:49:28.300
uh, you've talked about
the JavaScript bridging,

00:49:28.300 --> 00:49:30.634
is there also a way
where you can manipulate

00:49:30.634 --> 00:49:32.467
or take over the cache

00:49:32.467 --> 00:49:35.634
or the loading of subresources
within the WebView?

00:49:35.634 --> 00:49:37.634
You can do that on iPhone.

00:49:37.634 --> 00:49:39.968
Is there an analogous way
to do that on Android?

00:49:39.968 --> 00:49:41.968
Meier: Uh, I'm not sure.

00:49:41.968 --> 00:49:43.968
It's not an area which
I've looked at too closely.

00:49:43.968 --> 00:49:45.968
I believe that you have
pretty much

00:49:45.968 --> 00:49:48.467
full control over what happens
within a WebView,

00:49:48.467 --> 00:49:50.300
but, um, don't take
my word for it.

00:49:50.300 --> 00:49:52.634
I think they're still doing
Android office hours upstairs.

00:49:52.634 --> 00:49:54.467
It'd be a good question
to ask someone there

00:49:54.467 --> 00:49:56.300
from the browser team,
if you can find one.

00:49:56.300 --> 00:49:58.133
man: Is there a particular
person you'd recommend?

00:49:58.133 --> 00:50:00.300
Meier: I'm not sure
who's around, so no.

00:50:00.300 --> 00:50:02.968
man: Okay. Thanks.
Meier: No problem.

00:50:02.968 --> 00:50:06.634
man: The, um,
tabbed view you had

00:50:06.634 --> 00:50:08.634
that included the HTML5 photos,

00:50:08.634 --> 00:50:10.801
was there a URL
for that whole thing?

00:50:10.801 --> 00:50:12.801
Mahemoff: Uh, I haven't got
a URL for the whole thing.

00:50:12.801 --> 00:50:14.801
Um, I can put it on Twitter,
I guess, afterwards,

00:50:14.801 --> 00:50:17.133
after this talk...
[speaking indistinctly]

00:50:17.133 --> 00:50:18.968
man: Okay, but there was
no helper app to get that photo?

00:50:18.968 --> 00:50:20.634
It was just looking
for a file...

00:50:20.634 --> 00:50:22.133
[voices overlapping]

00:50:22.133 --> 00:50:23.968
Mahemoff: Sorry, the URL
specifically for the photo app--

00:50:23.968 --> 00:50:25.634
man: Well, that was
html5photos.appspot.

00:50:25.634 --> 00:50:27.467
Mahemoff: Yeah.
man: And my battery died.

00:50:27.467 --> 00:50:29.467
Excuse me. Um, but that thing
will trigger the camera

00:50:29.467 --> 00:50:31.467
without a helper app?

00:50:31.467 --> 00:50:33.968
Mahemoff: Uh, trigger
the camera is--

00:50:33.968 --> 00:50:35.801
oh, well, that's just
on the slides,

00:50:35.801 --> 00:50:37.467
so I've got the--
there's no URL.

00:50:37.467 --> 00:50:39.300
I mean, it's just
"input type=file"--

00:50:39.300 --> 00:50:41.133
man: Right, but you hit
the button. You got a photo.

00:50:41.133 --> 00:50:43.133
Mahemoff: Yeah, that's just
a special kind of input type.

00:50:43.133 --> 00:50:44.767
man: Okay.
Mahemoff: So I've done

00:50:44.767 --> 00:50:47.100
"input type=file"
with a special except.

00:50:47.100 --> 00:50:49.100
You'll see that on the slides
when they come out.

00:50:49.100 --> 00:50:50.767
It's just a single line,
basically.

00:50:50.767 --> 00:50:52.767
And then I'm using,
uh, Reader,

00:50:52.767 --> 00:50:54.300
so you can actually--

00:50:54.300 --> 00:50:56.267
there's also file APIs,
basically--

00:50:56.267 --> 00:50:58.100
This is on HTML5 Rocks,
actually,

00:50:58.100 --> 00:50:59.767
how you can actually
manipulate--

00:50:59.767 --> 00:51:01.834
man: Oh, it is all there, okay.
Mahemoff: Yeah, once you've

00:51:01.834 --> 00:51:04.334
got the file, you use
file input with that except

00:51:04.334 --> 00:51:08.167
to actually put the file
in that--that element.

00:51:08.167 --> 00:51:10.834
and you can then read it
using FileReader API.

00:51:10.834 --> 00:51:12.834
man: Okay, thank you.
Mahemoff: Okay.

00:51:12.834 --> 00:51:14.834
woman: Hi, uh, first of all,
awesome talk.

00:51:14.834 --> 00:51:16.667
I actually was gonna
ask a question

00:51:16.667 --> 00:51:18.667
based on the fact
that I'm sure you actually get

00:51:18.667 --> 00:51:20.334
more of this input than I do.

00:51:20.334 --> 00:51:22.167
So I didn't see this
on your list,

00:51:22.167 --> 00:51:24.000
but do you think security
and transparency

00:51:24.000 --> 00:51:25.501
is actually a factor?

00:51:25.501 --> 00:51:27.367
So what I mean is, like,
when I look at an HTML5 app,

00:51:27.367 --> 00:51:29.167
I can pretty much kind of look
at the HTML source.

00:51:29.167 --> 00:51:31.000
I can figure out the JavaScript.
I can figure out

00:51:31.000 --> 00:51:32.667
what's happening
behind the scenes.

00:51:32.667 --> 00:51:34.501
And I can use user scripts.
I can use extensions.

00:51:34.501 --> 00:51:36.334
I can kind of manipulate stuff
in there.

00:51:36.334 --> 00:51:38.167
Native apps don't let you
do that.

00:51:38.167 --> 00:51:40.000
And you know, even back
in the JTime days,

00:51:40.000 --> 00:51:41.834
you wanted to kind of
do things to hide stuff

00:51:41.834 --> 00:51:43.334
from your competitors.

00:51:43.334 --> 00:51:45.501
So are you seeing developers
see that as one of the reasons

00:51:45.501 --> 00:51:48.334
for picking one over the other?
Just curious.

00:51:48.334 --> 00:51:50.167
Meier: Uh, well,
from the native side,

00:51:50.167 --> 00:51:52.000
it's not something
that I've come across.

00:51:52.000 --> 00:51:53.834
I mean, certainly
there's certain industries,

00:51:53.834 --> 00:51:55.834
particularly around banking,
but to be honest,

00:51:55.834 --> 00:51:57.334
they are very comfortable

00:51:57.334 --> 00:51:59.167
with the way things work
on the Web now.

00:51:59.167 --> 00:52:01.234
The advantage of the Web--it's
been around for a long time.

00:52:01.234 --> 00:52:03.067
And there's some
really great security things

00:52:03.067 --> 00:52:04.567
built into it,

00:52:04.567 --> 00:52:06.567
and there's a certain level
of comfort.

00:52:06.567 --> 00:52:08.234
Um, so as far as obscurity goes,

00:52:08.234 --> 00:52:10.067
I haven't seen anyone
develop a native app

00:52:10.067 --> 00:52:12.067
in order to make their code
more obscure.

00:52:12.067 --> 00:52:14.901
Um, but I would imagine
that from a user point of view,

00:52:14.901 --> 00:52:16.567
I guess, turning that round.

00:52:16.567 --> 00:52:18.400
So a lot of the banks
are more comfortable

00:52:18.400 --> 00:52:20.234
with a Web app,
because they are--

00:52:20.234 --> 00:52:22.067
they understand
the security model.

00:52:22.067 --> 00:52:24.734
They know that the users
understand the security model.

00:52:24.734 --> 00:52:28.067
Um, so for users, yes.
Developers, probably less.

00:52:28.067 --> 00:52:30.067
Mahemoff: And yeah--
one the Web side of things,

00:52:30.067 --> 00:52:31.734
it's a little bit different.

00:52:31.734 --> 00:52:33.734
We've seen this at the Chrome
Web store, for instance.

00:52:33.734 --> 00:52:35.734
People tend to be concerned
about two things.

00:52:35.734 --> 00:52:38.067
One is the application,
so people actually potentially

00:52:38.067 --> 00:52:40.234
stealing the application
because it's open.

00:52:40.234 --> 00:52:42.067
And the other is
the content, right,

00:52:42.067 --> 00:52:44.067
so actually, uh,
digital rights management

00:52:44.067 --> 00:52:46.868
and people actually being able
to lift movies and music

00:52:46.868 --> 00:52:48.534
that those are actually serving.

00:52:48.534 --> 00:52:50.367
Um, there's a couple of things
to say about that.

00:52:50.367 --> 00:52:52.200
Firstly, there was
a really good comment yesterday

00:52:52.200 --> 00:52:53.701
in the Web store panel

00:52:53.701 --> 00:52:55.534
by the chap
from "New York Times"

00:52:55.534 --> 00:52:57.200
who just made a point

00:52:57.200 --> 00:52:59.033
that people who tend
to be really good,

00:52:59.033 --> 00:53:00.868
the people that you have
to worry about as competitors,

00:53:00.868 --> 00:53:02.767
don't tend to be the kind
of people who would

00:53:02.767 --> 00:53:04.434
actually consider
doing that anyway.

00:53:04.434 --> 00:53:06.767
Um, but beyond that, it's--
I think the way I like to see it

00:53:06.767 --> 00:53:08.934
is that these technologies are--

00:53:08.934 --> 00:53:11.601
have sort of a standard default
that you can vary.

00:53:11.601 --> 00:53:13.601
So the Web tends to be
open by default,

00:53:13.601 --> 00:53:16.434
but if you want, you can apply
obfuscation and so on

00:53:16.434 --> 00:53:18.267
to--to close it off.

00:53:18.267 --> 00:53:20.267
And likewise, uh,
native technologies

00:53:20.267 --> 00:53:22.601
tend to be closed by default.
They're sort of binary.

00:53:22.601 --> 00:53:24.434
But if you want, you can
always put the source up on...

00:53:24.434 --> 00:53:26.100
woman: Yeah.
Mahemoff: you know,

00:53:26.100 --> 00:53:28.100
on a repository or something.
So it kind of works both ways.

00:53:28.100 --> 00:53:30.100
And it's really down
to the developers to...

00:53:30.100 --> 00:53:32.434
woman: Thank you.
Mahemoff: My pleasure.

00:53:32.434 --> 00:53:34.267
Meier: Yeah.
man: Right.

00:53:34.267 --> 00:53:35.767
So I have two or three comments.

00:53:35.767 --> 00:53:38.767
The first one is
you talked about, um,

00:53:38.767 --> 00:53:41.267
I guess, on this side,
uh, about--

00:53:41.267 --> 00:53:43.100
sorry--

00:53:43.100 --> 00:53:45.434
the fact that, you know,
one of the advantages

00:53:45.434 --> 00:53:47.267
of native is--is, you know,

00:53:47.267 --> 00:53:49.100
less stress on the power.

00:53:49.100 --> 00:53:51.601
And you didn't address this
on your HTML5.

00:53:51.601 --> 00:53:53.601
I think that's a huge,
important thing,

00:53:53.601 --> 00:53:55.934
because power is so critical.

00:53:55.934 --> 00:53:57.767
Um, the other thing is--
and I guess

00:53:57.767 --> 00:53:59.601
I'll just summarize it
by this--

00:53:59.601 --> 00:54:01.334
is why--why not talk--

00:54:01.334 --> 00:54:04.501
why not tinker just, like,
GWT instead?

00:54:04.501 --> 00:54:06.834
Which is, you know,
write it for Android

00:54:06.834 --> 00:54:10.334
and then compile it
for HTML5.

00:54:10.334 --> 00:54:13.167
You know, and I'm sure there's
gonna be cases

00:54:13.167 --> 00:54:15.167
where you're talking advantage
of the hardware,

00:54:15.167 --> 00:54:17.000
and that compilation
wouldn't work.

00:54:17.000 --> 00:54:18.834
But at least a lot
of the skunk work

00:54:18.834 --> 00:54:20.667
that you would do in HTML5

00:54:20.667 --> 00:54:23.000
can be done for you
by the compiler.

00:54:23.000 --> 00:54:26.000
Mahemoff: I don't understand
how you can write it in Android

00:54:26.000 --> 00:54:28.000
and then compile it in HTML5.
man: You write it in Java--

00:54:28.000 --> 00:54:29.834
like, right now,
if you write it in GWT,

00:54:29.834 --> 00:54:31.667
you can compile it
and it works--

00:54:31.667 --> 00:54:33.501
Mahemoff: Oh, okay, using GWT.
man: Yeah, so now you do

00:54:33.501 --> 00:54:35.334
an Android version of that.
Mahemoff: Yeah.

00:54:35.334 --> 00:54:37.167
And that's--that's
the "Angry Birds" strategy

00:54:37.167 --> 00:54:39.167
that's working in GWT,
so there is a possibility there.

00:54:39.167 --> 00:54:40.667
Meier: Yeah, absolutely.

00:54:40.667 --> 00:54:43.000
I think part of--
if I understand your question

00:54:43.000 --> 00:54:45.167
or comment correctly--
I think one of the risks

00:54:45.167 --> 00:54:47.367
if you're using
something like GWT,

00:54:47.367 --> 00:54:49.167
it's the same sort of issue
that you may have

00:54:49.167 --> 00:54:50.834
with something
like the Adobe solutions,

00:54:50.834 --> 00:54:53.834
which is you build something
which is generic.

00:54:53.834 --> 00:54:56.667
Then you may as well build it
using Web technologies.

00:54:56.667 --> 00:54:59.501
And certainly GWT is a great way
to build Web technologies,

00:54:59.501 --> 00:55:01.567
but I don't think that we
would get to a scenario

00:55:01.567 --> 00:55:03.901
where we would want that
to output Android code.

00:55:03.901 --> 00:55:05.901
man: No, I'm saying
the other way around.

00:55:05.901 --> 00:55:07.901
Meier: The other way around.
man: No, you write...

00:55:07.901 --> 00:55:09.901
Meier: Write Android code.
man: just in Android,

00:55:09.901 --> 00:55:13.400
and then you tweak the compiler,
the Java compiler,

00:55:13.400 --> 00:55:15.901
so that it generates HTML5.

00:55:15.901 --> 00:55:17.734
Meier: HTML5. Okay.
So again, it's--

00:55:17.734 --> 00:55:19.567
man: Because you have
the code already.

00:55:19.567 --> 00:55:21.400
[voices overlapping]
Mahemoff: It can work.

00:55:21.400 --> 00:55:23.234
It's another strategy, depending
on where you come from.

00:55:23.234 --> 00:55:25.067
I actually had a partner
who did this

00:55:25.067 --> 00:55:26.901
who actually--
with the Chrome Web store.

00:55:26.901 --> 00:55:28.734
They already had an Android app,

00:55:28.734 --> 00:55:30.567
and they were able
to really quickly--

00:55:30.567 --> 00:55:32.400
actually, I was really surprised
about how quickly

00:55:32.400 --> 00:55:34.234
they could use GWT
to actually turn it

00:55:34.234 --> 00:55:35.901
into a very capable Web app.

00:55:35.901 --> 00:55:37.567
So it is definitely a strategy,

00:55:37.567 --> 00:55:39.400
if you've already got
the code base

00:55:39.400 --> 00:55:41.400
and all the understanding
about how to do that, yeah.

00:55:41.400 --> 00:55:43.567
man: What about
the power thing for--

00:55:43.567 --> 00:55:45.400
Mahemoff: Yeah, it's a good
question, actually,

00:55:45.400 --> 00:55:47.067
'cause Reto was talking
about this.

00:55:47.067 --> 00:55:49.067
Um, Chrome now actually has
the concept

00:55:49.067 --> 00:55:50.567
of background apps.

00:55:50.567 --> 00:55:52.400
And it is just Chrome
at this stage,

00:55:52.400 --> 00:55:54.267
but a lot of the things
that Chrome introduces

00:55:54.267 --> 00:55:56.567
are intended to eventually
become standards.

00:55:56.567 --> 00:55:59.400
And so--and it does actually
have this concept

00:55:59.400 --> 00:56:00.901
that you'll see--

00:56:00.901 --> 00:56:02.968
"New York Times"
is one, uh, company.

00:56:02.968 --> 00:56:04.968
There's quite a few
that are starting to use it.

00:56:04.968 --> 00:56:07.968
Um, so it can actually run
in the background.

00:56:07.968 --> 00:56:11.467
Um, and actually, it kinda goes
against your point, too,

00:56:11.467 --> 00:56:13.300
because it's actually using
more battery

00:56:13.300 --> 00:56:14.968
while it's in the background.

00:56:14.968 --> 00:56:17.133
Um, so, yeah, I mean, it's--

00:56:17.133 --> 00:56:20.634
I don't know--why would you say
that it's using more battery?

00:56:20.634 --> 00:56:22.634
man: Well, I mean,
I know iOS quite well,

00:56:22.634 --> 00:56:25.133
and I can tell you
that iOS you get events,

00:56:25.133 --> 00:56:27.834
and you have to put
your app to sleep.

00:56:27.834 --> 00:56:29.801
Mahemoff: Right. I see.
man: And I think in Android

00:56:29.801 --> 00:56:31.801
you have similar events.
I'm exploring them now.

00:56:31.801 --> 00:56:33.801
So you--you essentially
are participating

00:56:33.801 --> 00:56:35.801
as part of the platform...
Mahemoff: Yeah.

00:56:35.801 --> 00:56:37.634
man: which is trying
as hard as it can

00:56:37.634 --> 00:56:39.300
to, you know,
maximize battery life.

00:56:39.300 --> 00:56:41.300
Mahemoff: So that's in contrast
to keeping a Web app running...

00:56:41.300 --> 00:56:43.133
man: Yeah, that's right.
Mahemoff: the whole time.

00:56:43.133 --> 00:56:44.968
And that's where
the background apps do help,

00:56:44.968 --> 00:56:46.801
because with Chrome
you've got the ability

00:56:46.801 --> 00:56:48.467
to launch these
background windows,

00:56:48.467 --> 00:56:50.467
which are invisible windows
that can just wake up.

00:56:50.467 --> 00:56:52.801
You know, we'll just run a timer
and just wake up every hour

00:56:52.801 --> 00:56:54.801
or whatever and just do a poll.

00:56:54.801 --> 00:56:56.801
So it's just starting
very early to get there

00:56:56.801 --> 00:56:58.634
as far as the standards go.

00:56:58.634 --> 00:57:00.467
Meier: I think what we're
gonna find

00:57:00.467 --> 00:57:02.367
is that one of the advantages
behind Android

00:57:02.367 --> 00:57:04.200
is that it's ultra optimized
for mobile--

00:57:04.200 --> 00:57:07.367
like least power,
most efficient, et cetera.

00:57:07.367 --> 00:57:09.367
The reality is--
is that the Web browsers

00:57:09.367 --> 00:57:11.200
which are running
on these platforms

00:57:11.200 --> 00:57:13.033
are gonna have exactly
those same things.

00:57:13.033 --> 00:57:16.033
So Chrome originally was not
designed as a mobile browser.

00:57:16.033 --> 00:57:17.701
That wasn't the focus.

00:57:17.701 --> 00:57:19.701
The focus was around
all these other cool things,

00:57:19.701 --> 00:57:21.534
which everyone uses
and wants to be able to do

00:57:21.534 --> 00:57:23.200
in the most efficient way.

00:57:23.200 --> 00:57:24.868
As we see things now,

00:57:24.868 --> 00:57:27.200
more developers creating
browsers for these platforms,

00:57:27.200 --> 00:57:29.534
that's gonna have to be
their focus as well.

00:57:29.534 --> 00:57:31.200
And so there'll be solutions

00:57:31.200 --> 00:57:33.033
to things
like the background stuff,

00:57:33.033 --> 00:57:36.033
but also, um,
also just more efficiency,

00:57:36.033 --> 00:57:38.033
generally speaking.

00:57:38.033 --> 00:57:39.701
Mahemoff: Yeah.
man: So my question's

00:57:39.701 --> 00:57:42.534
around if you do the HTML5 apps

00:57:42.534 --> 00:57:45.534
or take a Chrome Web app
out of the Web store,

00:57:45.534 --> 00:57:47.367
can you put it
in the Marketplace, too--

00:57:47.367 --> 00:57:49.200
Android Marketplace?

00:57:49.200 --> 00:57:51.200
Mahemoff: You can
using some technologies.

00:57:51.200 --> 00:57:52.701
So there's ways, actually--

00:57:52.701 --> 00:57:54.534
ways of actually
compiling it down

00:57:54.534 --> 00:57:56.033
with some frameworks,

00:57:56.033 --> 00:57:58.033
but there's also ways
of actually doing it yourself,

00:57:58.033 --> 00:58:00.701
like what Reto was suggesting,
the kind of thing that the I/O--

00:58:00.701 --> 00:58:02.434
man: So hybrid--hybrid apps,
you can--

00:58:02.434 --> 00:58:04.267
then you can put
it in Marketplace.

00:58:04.267 --> 00:58:06.267
Mahemoff: Yeah, and there are--
there are also frameworks,

00:58:06.267 --> 00:58:08.267
and there are ways
of actually not just taking

00:58:08.267 --> 00:58:10.100
the kind of approach
we've done here,

00:58:10.100 --> 00:58:11.601
but actually compiling it.

00:58:11.601 --> 00:58:13.434
So there are starting to be
some technologies

00:58:13.434 --> 00:58:15.267
that people are doing
to actually take, um,

00:58:15.267 --> 00:58:17.267
like, something that talks
to Canvas on the desktop,

00:58:17.267 --> 00:58:20.267
and then it will go to OpenGL
on--inside an Android.

00:58:20.267 --> 00:58:23.601
man: And then that would qualify
to be in Marketplace, too.

00:58:23.601 --> 00:58:25.434
Okay.
Mahemoff: Well, you still

00:58:25.434 --> 00:58:27.934
have to wrap it
as a native app, but yeah.

00:58:27.934 --> 00:58:30.934
man: My question is related
to this one.

00:58:30.934 --> 00:58:33.601
Uh, the way
that Chrome Web store

00:58:33.601 --> 00:58:35.434
connects apps to users,

00:58:35.434 --> 00:58:37.767
which are pure Web apps,

00:58:37.767 --> 00:58:40.100
uh, doesn't it make sense
to have a similar store

00:58:40.100 --> 00:58:42.767
that connects mobile Web apps
to the users

00:58:42.767 --> 00:58:44.601
where people can discover
mobile Web apps

00:58:44.601 --> 00:58:46.434
in some kind of a store?

00:58:46.434 --> 00:58:48.100
Meier: Yeah,
that would make sense.

00:58:48.100 --> 00:58:50.767
Um, I think the question
of how you put, um,

00:58:50.767 --> 00:58:53.934
Chrome apps designed for mobile,
and make them more discoverable,

00:58:53.934 --> 00:58:55.934
uh, on mobile devices
or Android devices...

00:58:55.934 --> 00:58:57.767
man: And don't have
to wrap it up

00:58:57.767 --> 00:58:59.601
just so that they can be
discovered,

00:58:59.601 --> 00:59:01.501
so they can be first-class
citizens on their own,

00:59:01.501 --> 00:59:03.000
being mobile Web apps.

00:59:03.000 --> 00:59:04.667
Meier: So I'm not sure
internally

00:59:04.667 --> 00:59:06.667
of what the plans are--
two separate teams.

00:59:06.667 --> 00:59:08.834
So I have no idea.
Personally, my preference

00:59:08.834 --> 00:59:12.167
would be to see search become
the way that you discover it,

00:59:12.167 --> 00:59:14.200
so that you have search,
which is much better

00:59:14.200 --> 00:59:17.000
at discovering
both native Android APKs

00:59:17.000 --> 00:59:19.501
and Web-based apps as well,

00:59:19.501 --> 00:59:22.000
rather than sort of having
different markets

00:59:22.000 --> 00:59:23.667
or indeed any market.

00:59:23.667 --> 00:59:25.667
But I have no idea
what the actual plans are.

00:59:25.667 --> 00:59:27.667
man: All right, thanks.
Meier: Last question.

00:59:27.667 --> 00:59:29.501
man: Uh, this is really more
of a comment

00:59:29.501 --> 00:59:31.000
than anything else.

00:59:31.000 --> 00:59:33.000
I guess one thing is that,
"A," if you guys are building

00:59:33.000 --> 00:59:35.501
kind of a hybrid app
in this case,

00:59:35.501 --> 00:59:37.167
you should probably
remind people

00:59:37.167 --> 00:59:39.501
that the actual rendering engine

00:59:39.501 --> 00:59:41.667
is not the same as what
they would have

00:59:41.667 --> 00:59:43.167
in a browser or whatnot,

00:59:43.167 --> 00:59:45.167
like for instance,
what the gentleman said there

00:59:45.167 --> 00:59:48.000
about iOS--you know, the--
people are very surprised

00:59:48.000 --> 00:59:50.334
when they get a UI WebView
and it doesn't have, like,

00:59:50.334 --> 00:59:51.834
JIT compilation

00:59:51.834 --> 00:59:54.834
on like mobile Safari
or something like that.

00:59:54.834 --> 00:59:58.334
Um, two, for the, uh,

00:59:58.334 --> 01:00:00.334
HTML5 portion of it,

01:00:00.334 --> 01:00:03.167
remember, too, that the network
is the most expensive thing

01:00:03.167 --> 01:00:04.667
when dealing with mobile,

01:00:04.667 --> 01:00:06.334
less so than
the power consumption

01:00:06.334 --> 01:00:08.000
and all that other stuff,

01:00:08.000 --> 01:00:10.000
so if you're dealing
with lots of, you know--

01:00:10.000 --> 01:00:12.334
I know that Android 2.0 and 2.1

01:00:12.334 --> 01:00:14.334
supports HTML5 Web Workers,

01:00:14.334 --> 01:00:16.667
and 2.2 and 2.3 do not anymore.

01:00:16.667 --> 01:00:18.667
Thanks.
[laughter]

01:00:18.667 --> 01:00:20.667
Meier: You're welcome.
man: Um, if you're doing that,

01:00:20.667 --> 01:00:22.667
you're, like, you know,
pulling up a couple threads

01:00:22.667 --> 01:00:24.667
in the background and spitting
off extra resources--

01:00:24.667 --> 01:00:26.167
that's very expensive.

01:00:26.167 --> 01:00:28.000
Um, and then three,
your solution

01:00:28.000 --> 01:00:31.334
doesn't always work
in certain situations,

01:00:31.334 --> 01:00:34.167
um, it's appeared
in an HTML5 Web app,

01:00:34.167 --> 01:00:35.667
because, say, you're European,

01:00:35.667 --> 01:00:38.501
and you use somebody
like Vodafone

01:00:38.501 --> 01:00:41.667
or, um, you know,
Orange or something like that,

01:00:41.667 --> 01:00:44.501
that use things like
content transformers actually

01:00:44.501 --> 01:00:48.334
at, uh, the--
in the network operator level.

01:00:48.334 --> 01:00:52.000
Your app is just toast.

01:00:52.000 --> 01:00:54.200
And yours actually works.

01:00:54.200 --> 01:00:56.167
Meier: It's definitely, uh,

01:00:56.167 --> 01:00:58.000
there's definitely
no easy solutions.

01:00:58.000 --> 01:00:59.834
And I guess that's
an important takeaway

01:00:59.834 --> 01:01:01.901
is that you really need to look
at your market,

01:01:01.901 --> 01:01:03.734
look at the devices,
and look at the technology,

01:01:03.734 --> 01:01:05.734
so you can figure out something
that works best

01:01:05.734 --> 01:01:07.567
for the what you're
trying to create.

01:01:07.567 --> 01:01:09.400
man: Yeah. And, like,
I guess what the gentlemen

01:01:09.400 --> 01:01:11.067
was saying before about GWT--

01:01:11.067 --> 01:01:13.567
it was that it would great
to be able to take GWT itself,

01:01:13.567 --> 01:01:16.567
have it export out HTML5.

01:01:16.567 --> 01:01:18.567
Um, it does a little bit
of the exploratory

01:01:18.567 --> 01:01:20.901
on the device,
sends it back to the server,

01:01:20.901 --> 01:01:23.234
and actually optimizes
for that device,

01:01:23.234 --> 01:01:25.734
so that you wouldn't have
to have that back-and-forth

01:01:25.734 --> 01:01:27.734
that you would with Modernizr
or those other tricks

01:01:27.734 --> 01:01:29.234
that you introduced.

01:01:29.234 --> 01:01:31.067
Meier: All right then.
Mahemoff: Good points.

01:01:31.067 --> 01:01:32.734
Thank you.
Meier: All right.

01:01:32.734 --> 01:01:34.467
Thanks very much, everyone.
[applause]

