WEBVTT
Kind: captions
Language: en

00:00:00.170 --> 00:00:02.620
How do we do writes to this memory?

00:00:02.620 --> 00:00:05.652
Obviously, we need to
change one of the cells.

00:00:05.652 --> 00:00:06.651
How do we do that?

00:00:06.651 --> 00:00:10.270
We use the row address to
select the row of the cell, but

00:00:10.270 --> 00:00:12.912
we can only select a whole row of cells.

00:00:12.912 --> 00:00:17.700
We cannot just select an individual
cell, so if this is bit number 7 in our

00:00:17.700 --> 00:00:21.900
32 bit world,
we select the address of the word, and

00:00:21.900 --> 00:00:28.230
then we want to supply a bit here,
Let's say A1, to be written here.

00:00:28.230 --> 00:00:29.400
So how do we do that?

00:00:29.400 --> 00:00:32.770
Because we can only select a whole row.

00:00:32.770 --> 00:00:37.650
Once we select a row, all these cells
get connected to the bit lines.

00:00:37.650 --> 00:00:40.600
We can maybe derive the bit length for
this one to write a 1.

00:00:40.600 --> 00:00:43.520
But that would lose us these bits.

00:00:43.520 --> 00:00:47.416
So the way the write needs to happen, is
we use the row address, select the row,

00:00:47.416 --> 00:00:50.780
read out these bits,

00:00:50.780 --> 00:00:55.740
the sense amp amplifies them and
we latch them into the row buffer.

00:00:55.740 --> 00:01:00.547
Now we write this bit to the row
buffer at this position,

00:01:00.547 --> 00:01:05.280
and now we write the whole
thing back into the cells.

00:01:05.280 --> 00:01:09.020
The cells lost their values
when we did the read, anyway.

00:01:09.020 --> 00:01:12.790
We will have to write the values back,
anyway.

00:01:12.790 --> 00:01:16.490
Before we do that, we make all
the writes that we want to that row, and

00:01:16.490 --> 00:01:19.490
then send them back, so
that when we are writing,

00:01:19.490 --> 00:01:24.300
we end up writing 1 1 1 and
this bit is changed to 1.

00:01:24.300 --> 00:01:30.810
So a write in the run is also a read and
then write operation.

