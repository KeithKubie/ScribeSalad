WEBVTT
Kind: captions
Language: en

00:00:00.870 --> 00:00:07.370
An alternative is to achieve the same effect, but completely oblivious to the

00:00:07.370 --> 00:00:14.660
guest operating system, and this is used in VMware ESX server. The idea is to

00:00:14.660 --> 00:00:20.770
use content-based sharing. And in order to support that, VM Ware has a data

00:00:20.770 --> 00:00:26.070
structure which is a hash table kept in the hypervisor. And this hash table data

00:00:26.070 --> 00:00:31.140
structure contains a content hash of the machine

00:00:31.140 --> 00:00:36.170
pages. So, for instance, this entry is saying that. For virtual

00:00:36.170 --> 00:00:41.750
machine number three. For it's physical page which is at this address

00:00:41.750 --> 00:00:46.530
43f8 there is a machine page that hosts this

00:00:46.530 --> 00:00:51.270
physical page number of VM3 and that's contained in

00:00:51.270 --> 00:00:57.020
machine page number 123b and the content hash that is... If you hash the

00:00:57.020 --> 00:01:02.990
contents of this memory page, you get a signature. That signature is the content

00:01:02.990 --> 00:01:08.520
hash. That content hash is stored in this data structure. Now let's see how this

00:01:08.520 --> 00:01:16.310
data structure is used for doing VM-oblivious page sharing in the ESX Server.

00:01:16.310 --> 00:01:21.450
We want to know if there is some page in VM2 which

00:01:21.450 --> 00:01:26.220
is content wise the same as this page contained in

00:01:26.220 --> 00:01:32.110
VM3. In particular we want to know if this physical page number.;

00:01:32.110 --> 00:01:36.710
PPN 2868 of VM 2, which is mapped

00:01:36.710 --> 00:01:42.030
to this machine page,1096 is content-wise the same

00:01:42.030 --> 00:01:48.436
as this guy. So how do we find that out? What we do is we take the contents of

00:01:48.436 --> 00:01:54.950
this machine page 1096 Create a content hash. So that's the content hash

00:01:54.950 --> 00:01:58.140
that you're going to generate, a particular algorithm

00:01:58.140 --> 00:02:00.470
that the hypervisor is going to run to

00:02:00.470 --> 00:02:03.410
create a content hash. So we create a

00:02:03.410 --> 00:02:07.840
content hash for this page 1096, that corresponds

00:02:07.840 --> 00:02:15.100
to PPN 2868 of VM 2. Now we take this content hash and look through hypervisor's

00:02:15.100 --> 00:02:20.110
data structure to see if there is a match between this content hash that

00:02:20.110 --> 00:02:27.040
I created for this page and any page currently in the machine memory.

00:02:27.040 --> 00:02:34.020
Well we have a match. We have a match between the content hash for this page and

00:02:34.020 --> 00:02:36.130
the content hash (no period) Of the page

00:02:36.130 --> 00:02:40.660
comtained in VM 3, 43f8, which is mapped to

00:02:40.660 --> 00:02:47.760
MPN 123b. So now we've got this match. Can we know that this page and this page

00:02:47.760 --> 00:02:50.670
are exactly the same? Well, we cannot. It's

00:02:50.670 --> 00:02:53.300
only a hint at this point that this pages

00:02:53.300 --> 00:02:56.030
content hash is the same as this because this

00:02:56.030 --> 00:02:59.210
content hash for 123b was taken at some point

00:02:59.210 --> 00:03:03.100
of time. And we created this data structure to

00:03:03.100 --> 00:03:06.410
represent this as a hint frame, which has a

00:03:06.410 --> 00:03:10.060
particular content hash. Now, VM3 could have been using

00:03:10.060 --> 00:03:13.320
this page actively and modified it, and if it has

00:03:13.320 --> 00:03:16.450
modified it, then this content hash that we have

00:03:16.450 --> 00:03:18.780
in this data structure may no longer be valid.

00:03:18.780 --> 00:03:21.280
And therefore, even though we've got a match, it's

00:03:21.280 --> 00:03:24.400
only a hint, not an absolute. It's only a hint.

00:03:24.400 --> 00:03:29.930
So once we have a match, then we want to do a full comparison between these

00:03:29.930 --> 00:03:32.270
two guys. Make sure that these two guys

00:03:32.270 --> 00:03:35.540
are exactly the same, full comparison upon match.

