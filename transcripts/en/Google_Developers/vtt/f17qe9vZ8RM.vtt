WEBVTT
Kind: captions
Language: en

00:00:04.940 --> 00:00:06.440
BEN POIESZ: Hi, everybody.

00:00:06.440 --> 00:00:07.300
I'm Ben Poiesz.

00:00:07.300 --> 00:00:09.850
I'm the product manager
for the Android Framework.

00:00:09.850 --> 00:00:12.349
I wanted to thank everybody for
sticking through on a Friday

00:00:12.349 --> 00:00:13.470
on comissions.

00:00:13.470 --> 00:00:14.170
So we're going to
talk about some

00:00:14.170 --> 00:00:15.780
of the best practices,
some of the new stuff

00:00:15.780 --> 00:00:18.113
that's [INAUDIBLE] that was
talked about in the keynote.

00:00:18.113 --> 00:00:19.910
And getting some
into the specifics,

00:00:19.910 --> 00:00:21.680
into the nitty-gritty.

00:00:21.680 --> 00:00:24.120
But first, let's start
with where we are

00:00:24.120 --> 00:00:26.270
and where we're going to.

00:00:26.270 --> 00:00:28.230
And so today, we
have a situation

00:00:28.230 --> 00:00:32.090
where users have awareness of
what permissions are, but they

00:00:32.090 --> 00:00:35.180
don't have the level of control
that we want them to have.

00:00:35.180 --> 00:00:36.820
We also have an
issue for developers

00:00:36.820 --> 00:00:38.570
that are updating their
applications-- are

00:00:38.570 --> 00:00:40.140
making really tough
decisions about,

00:00:40.140 --> 00:00:41.320
do I add this permission?

00:00:41.320 --> 00:00:44.350
Do I want to get hit
on my uptake rate?

00:00:44.350 --> 00:00:46.567
And so we're looking
to solve that as well.

00:00:46.567 --> 00:00:49.150
And the last one is it's install
friction that we get as well.

00:00:49.150 --> 00:00:50.816
When you're clicking
the Install button,

00:00:50.816 --> 00:00:52.410
it doesn't actually install.

00:00:52.410 --> 00:00:55.030
You get a prompt saying, hey,
here's a bunch of information

00:00:55.030 --> 00:00:56.725
that you probably don't
want to read right now.

00:00:56.725 --> 00:00:58.120
But we're going
to show it to you

00:00:58.120 --> 00:00:59.870
and you're going to
hit this Accept button

00:00:59.870 --> 00:01:02.030
and then we'll download
and install it for you.

00:01:02.030 --> 00:01:04.510
And so the question that
we asked ourselves a lot

00:01:04.510 --> 00:01:08.659
over the last years and months
of looking at this problem is,

00:01:08.659 --> 00:01:09.700
how do we make it better?

00:01:09.700 --> 00:01:11.280
And so here's what
we've come up with.

00:01:11.280 --> 00:01:13.446
And so the idea is we want
to make this much simpler

00:01:13.446 --> 00:01:14.660
for users to understand.

00:01:14.660 --> 00:01:16.300
And the idea being,
if it's simpler

00:01:16.300 --> 00:01:18.690
and it's focused on the
things that users care about,

00:01:18.690 --> 00:01:21.516
then they're more empowered
and in even more control.

00:01:21.516 --> 00:01:22.890
The other part
is, we want to put

00:01:22.890 --> 00:01:25.070
in the control of the
developers that you can request

00:01:25.070 --> 00:01:27.153
these permissions at
runtime, at the point in time

00:01:27.153 --> 00:01:29.135
it makes sense for
you to provide context

00:01:29.135 --> 00:01:31.480
to the user about
why you want it.

00:01:31.480 --> 00:01:33.910
And the last one is to also
improve some information

00:01:33.910 --> 00:01:35.246
to the user about auditing.

00:01:35.246 --> 00:01:36.620
And the idea for
auditing-- we'll

00:01:36.620 --> 00:01:37.770
talk about it a little
bit-- is that, if you

00:01:37.770 --> 00:01:40.228
have an understanding of what
applications do what-- what's

00:01:40.228 --> 00:01:42.240
normal, what's
different-- users can also

00:01:42.240 --> 00:01:45.640
make informed decisions
about odd behaviors.

00:01:45.640 --> 00:01:48.140
And so here's the list of
permissions in their entirety.

00:01:48.140 --> 00:01:50.940
The keynote didn't have
the full set, by the way.

00:01:50.940 --> 00:01:53.270
So we start off with
Location and Camera, which

00:01:53.270 --> 00:01:55.260
are fairly straightforward.

00:01:55.260 --> 00:01:57.170
The next is Microphone--
so Microphone

00:01:57.170 --> 00:01:58.170
is separate from Camera.

00:01:58.170 --> 00:02:00.210
So Camera controls
photos and video.

00:02:00.210 --> 00:02:02.360
So if you're doing video
with audio recording,

00:02:02.360 --> 00:02:04.360
you'll want to request both.

00:02:04.360 --> 00:02:06.680
Phone includes phone
state and dialing.

00:02:06.680 --> 00:02:09.160
So this is if your application
is performing functionality

00:02:09.160 --> 00:02:12.580
that makes calls often or
is trying to manage calling,

00:02:12.580 --> 00:02:13.800
you'll want to request this.

00:02:13.800 --> 00:02:15.970
These are the groups, by
the way, just as a moment.

00:02:15.970 --> 00:02:17.340
I forgot to mention.

00:02:17.340 --> 00:02:19.869
There's still the individual
permissions that you request.

00:02:19.869 --> 00:02:21.410
These are just the
high-level groups.

00:02:21.410 --> 00:02:24.770
And we'll talk about load
distinction a little bit later.

00:02:24.770 --> 00:02:26.760
For SMS, as well as for
controlling and reading

00:02:26.760 --> 00:02:28.510
SMS in your application.

00:02:28.510 --> 00:02:31.020
And then the next two are pretty
straightforward-- Contacts

00:02:31.020 --> 00:02:32.562
and Calendar, each
being separate for

00:02:32.562 --> 00:02:34.728
read and write access to
your Contacts and Calendar,

00:02:34.728 --> 00:02:35.380
respectively.

00:02:35.380 --> 00:02:37.300
And the last one
is about Sensors.

00:02:37.300 --> 00:02:38.750
And Sensors is a tricky one.

00:02:38.750 --> 00:02:42.060
Users don't really understand
this one quite yet really well.

00:02:42.060 --> 00:02:44.155
It's around heart rate
monitors, body information,

00:02:44.155 --> 00:02:45.181
and body sensors.

00:02:45.181 --> 00:02:47.430
And this is a new space
that's evolving pretty quickly

00:02:47.430 --> 00:02:48.805
and we wanted to
make sure it was

00:02:48.805 --> 00:02:51.830
accounted for in the
new permissions model.

00:02:51.830 --> 00:02:54.970
So what this gives us then is
now we're asking at runtime--

00:02:54.970 --> 00:02:56.874
we don't need to have
a prompt when you're

00:02:56.874 --> 00:02:58.040
clicking the Install button.

00:02:58.040 --> 00:02:59.720
Installing now does
the thing that it

00:02:59.720 --> 00:03:01.680
says it does-- it installs.

00:03:01.680 --> 00:03:04.100
This also means updates can
now happen automatically.

00:03:04.100 --> 00:03:05.780
And so when you're getting
your applications pushed,

00:03:05.780 --> 00:03:06.988
they include new permissions.

00:03:06.988 --> 00:03:09.260
Those permissions aren't
granted on install anymore--

00:03:09.260 --> 00:03:10.385
they're granted at runtime.

00:03:10.385 --> 00:03:13.540
So those APK binaries can
all get pushed right away.

00:03:13.540 --> 00:03:15.270
And so what happens
at runtime, then?

00:03:15.270 --> 00:03:15.980
When do you ask?

00:03:15.980 --> 00:03:17.050
How do you ask?

00:03:17.050 --> 00:03:19.576
And so this is where
you're able to ask

00:03:19.576 --> 00:03:21.450
the user, at a point in
time that makes sense

00:03:21.450 --> 00:03:23.940
in your application, what
you want to have access to.

00:03:23.940 --> 00:03:26.356
In this case, here we have
Hangouts asking for the ability

00:03:26.356 --> 00:03:28.170
to manage phone calls.

00:03:28.170 --> 00:03:29.650
These are unique for each user.

00:03:29.650 --> 00:03:32.580
So no longer is this
applied across all users

00:03:32.580 --> 00:03:33.250
on your device.

00:03:33.250 --> 00:03:35.290
It's individual to
each Android user.

00:03:35.290 --> 00:03:36.687
And there's a special note here.

00:03:36.687 --> 00:03:39.020
We'll talk about this in the
Best Practices a little bit

00:03:39.020 --> 00:03:40.920
later-- it's about
Don't ask again.

00:03:40.920 --> 00:03:43.060
On the first request,
the users are not

00:03:43.060 --> 00:03:44.410
going to see this checkbox.

00:03:44.410 --> 00:03:47.080
So you'll just have the
question and Allow/Deny.

00:03:47.080 --> 00:03:50.400
Allow/Deny in this
world is a long time.

00:03:50.400 --> 00:03:54.140
It's not a one-time response,
it's a forever answer.

00:03:54.140 --> 00:03:58.170
But developers are able to ask
again in the case of saying no.

00:03:58.170 --> 00:03:59.840
And the trick is, on
the second request

00:03:59.840 --> 00:04:01.590
and subsequent requests--
after the user's

00:04:01.590 --> 00:04:05.150
said no, they have a shush
button where they can say,

00:04:05.150 --> 00:04:06.150
don't ask me again.

00:04:06.150 --> 00:04:09.760
And this is a clear indicator
to us at the OS level

00:04:09.760 --> 00:04:12.430
that the user and the developer
aren't really on the same page

00:04:12.430 --> 00:04:14.690
about what's being
asked of them.

00:04:14.690 --> 00:04:16.550
And what will happen
is feature request

00:04:16.550 --> 00:04:18.800
by the developer goes
straight to the no answer.

00:04:18.800 --> 00:04:21.550
We don't prompt UI, we won't
bother the user with it

00:04:21.550 --> 00:04:23.080
because they've
indicated this flag.

00:04:23.080 --> 00:04:25.840
And so the idea is, the first
request, there's no penalty.

00:04:25.840 --> 00:04:27.360
So feel free to use it.

00:04:27.360 --> 00:04:30.002
On the subsequent requests,
make sure you and the user

00:04:30.002 --> 00:04:32.210
are on the same page about
what you're talking about.

00:04:32.210 --> 00:04:34.251
And we'll cover this again
in the Best Practices,

00:04:34.251 --> 00:04:36.870
because it's a big point
that we want to make great

00:04:36.870 --> 00:04:38.869
about the experience.

00:04:38.869 --> 00:04:40.410
The other part is
in System Settings.

00:04:40.410 --> 00:04:42.590
And so in System
Settings now, not only

00:04:42.590 --> 00:04:44.830
can users today see
all the permissions,

00:04:44.830 --> 00:04:46.420
but they see the new groups.

00:04:46.420 --> 00:04:49.730
And they have nice little toggle
switches next to these groups.

00:04:49.730 --> 00:04:51.680
And so every application
on your device,

00:04:51.680 --> 00:04:54.730
users are now going to be
able to toggle these switches.

00:04:54.730 --> 00:04:56.860
This means that they're
able to look at something,

00:04:56.860 --> 00:04:58.290
they can turn things
on that are off,

00:04:58.290 --> 00:04:59.510
turn things off that are on.

00:04:59.510 --> 00:05:01.500
There's no penalty with
them turning stuff off.

00:05:01.500 --> 00:05:02.916
So if a user says
no to something,

00:05:02.916 --> 00:05:05.681
you have the ability
to ask again.

00:05:05.681 --> 00:05:08.180
They'll then have that prompt,
as I mentioned before, to say

00:05:08.180 --> 00:05:10.572
don't ask again if
it's been too often.

00:05:10.572 --> 00:05:12.280
And the idea is this
is always available,

00:05:12.280 --> 00:05:13.690
any time, all applications.

00:05:13.690 --> 00:05:16.420
And that's a big distinction
in really empowering users

00:05:16.420 --> 00:05:18.260
to use these controls.

00:05:18.260 --> 00:05:19.530
We also have a vertical view.

00:05:19.530 --> 00:05:21.629
And so on the vertical
view, I can look at Camera.

00:05:21.629 --> 00:05:23.670
And this is the auditing
I was mentioning before,

00:05:23.670 --> 00:05:25.890
in that a user can look
at every application.

00:05:25.890 --> 00:05:26.942
Who's using Camera?

00:05:26.942 --> 00:05:28.650
And I can say, oh,
these ones make sense.

00:05:28.650 --> 00:05:29.151
I use these.

00:05:29.151 --> 00:05:31.108
Ooh, these ones don't
make so much sense to me.

00:05:31.108 --> 00:05:32.034
Let me turn those off.

00:05:32.034 --> 00:05:34.450
And if the application, then,
is running and they can say,

00:05:34.450 --> 00:05:36.830
you turned off Camera for me,
but I do really cool things

00:05:36.830 --> 00:05:37.460
with the camera.

00:05:37.460 --> 00:05:38.668
You should turn this back on.

00:05:38.668 --> 00:05:41.234
And you're like, oh, you do do
cool things with the camera.

00:05:41.234 --> 00:05:42.150
I'll turn you back on.

00:05:42.150 --> 00:05:45.310
And so that's going to
lead into-- what do you do?

00:05:45.310 --> 00:05:46.110
We have this world.

00:05:46.110 --> 00:05:48.460
And so what are the best
practices for the developer?

00:05:48.460 --> 00:05:50.000
And the trick is,
for many folks,

00:05:50.000 --> 00:05:53.360
you feel a little nervous,
I guess, as a developer.

00:05:53.360 --> 00:05:55.620
And you start feeling,
what's the user going to do?

00:05:55.620 --> 00:05:56.578
What's going to happen?

00:05:56.578 --> 00:05:57.490
I'm not really sure.

00:05:57.490 --> 00:06:00.510
And so these best practices
we're going to talk about,

00:06:00.510 --> 00:06:01.694
it's not guesswork.

00:06:01.694 --> 00:06:03.110
This should really
be predictable.

00:06:03.110 --> 00:06:05.170
Users should understand
why you're asking.

00:06:05.170 --> 00:06:07.960
And when users understand
what your value proposition is

00:06:07.960 --> 00:06:09.750
and you're explaining
yourself clearly,

00:06:09.750 --> 00:06:11.650
they're going to say
yes most the time.

00:06:11.650 --> 00:06:13.380
And so that's the idea.

00:06:13.380 --> 00:06:17.200
And so let's talk about
some of those practices.

00:06:17.200 --> 00:06:18.780
And all these
practices, by the way--

00:06:18.780 --> 00:06:20.030
you don't have to do them all.

00:06:20.030 --> 00:06:21.790
This is just covering
a variety of things

00:06:21.790 --> 00:06:24.240
that make sense,
depending on situations

00:06:24.240 --> 00:06:26.199
and how you structure
your application.

00:06:26.199 --> 00:06:27.990
And so the idea here
is, on a warm welcome,

00:06:27.990 --> 00:06:31.450
you're pitching a user on what
it is your application does.

00:06:31.450 --> 00:06:33.509
You'll see this in
Google Now as an example.

00:06:33.509 --> 00:06:35.800
It's an application that asks
for a lot of permissions.

00:06:35.800 --> 00:06:37.550
It's very integrated
with your experience.

00:06:37.550 --> 00:06:39.633
And so they're making very
clear in the Google Now

00:06:39.633 --> 00:06:42.222
application what their value
proposition is to the user.

00:06:42.222 --> 00:06:43.930
And when that's made,
it makes sense when

00:06:43.930 --> 00:06:46.030
you ask for things upfront.

00:06:46.030 --> 00:06:48.570
And so in the case here, we
have Hangouts asking for SMS.

00:06:48.570 --> 00:06:51.142
And it also will ask for
other permissions as well.

00:06:51.142 --> 00:06:53.600
But the idea is, when you're
asking it upfront and it makes

00:06:53.600 --> 00:06:55.500
sense where your application--
Hangouts, [? in this case ?]--

00:06:55.500 --> 00:06:58.020
manages and sends SMS
and messaging in general.

00:06:58.020 --> 00:07:01.020
There's no real dissonance
between the application, what

00:07:01.020 --> 00:07:02.970
its use case is, what
the user expectation is

00:07:02.970 --> 00:07:05.140
for this application,
and what it's asking for.

00:07:05.140 --> 00:07:07.690
If it was coming up and asking
for Calendar out of the blue,

00:07:07.690 --> 00:07:10.116
I'd probably scratch my head
in wondering what's going on.

00:07:10.116 --> 00:07:12.490
And this is where we don't
need to provide that education

00:07:12.490 --> 00:07:14.540
for these initial requests,
where it makes sense

00:07:14.540 --> 00:07:17.670
based upon your functionality
of your application.

00:07:17.670 --> 00:07:19.850
For things where it's a
bit more edgy or maybe

00:07:19.850 --> 00:07:21.260
you don't need to ask
for it upfront and it's

00:07:21.260 --> 00:07:23.135
a particular feature--
and here we're looking

00:07:23.135 --> 00:07:25.410
at Keep for the first time.

00:07:25.410 --> 00:07:27.160
And you have an option
here for recording,

00:07:27.160 --> 00:07:28.743
where I can record
a Voice Note and it

00:07:28.743 --> 00:07:30.240
will transcribe the Voice Note.

00:07:30.240 --> 00:07:31.970
And this is a great
case where, now it

00:07:31.970 --> 00:07:34.300
makes sense for me, the
user, in this case clicking

00:07:34.300 --> 00:07:35.240
the record button.

00:07:35.240 --> 00:07:37.073
And keep asking me if
they can record audio.

00:07:37.073 --> 00:07:38.410
And I'm like, of course you can.

00:07:38.410 --> 00:07:39.784
And this is the
structure that we

00:07:39.784 --> 00:07:42.840
want to have where you and
the user are on the same page.

00:07:42.840 --> 00:07:45.482
This also avoids cases
of double prompting

00:07:45.482 --> 00:07:46.940
which we've seen
in other platforms

00:07:46.940 --> 00:07:49.520
where we have similar
runtime models.

00:07:49.520 --> 00:07:52.409
And we really want to
avoid a double prompt.

00:07:52.409 --> 00:07:54.450
And the idea is, if you're
asking the first time,

00:07:54.450 --> 00:07:56.340
there's no penalty
on the first request.

00:07:56.340 --> 00:07:57.115
Go ahead and ask.

00:07:57.115 --> 00:07:59.480
If they say no,
be cool about it.

00:07:59.480 --> 00:08:02.072
And then figure out what's
the best way to ask again

00:08:02.072 --> 00:08:03.280
at some future point in time.

00:08:03.280 --> 00:08:04.490
Maybe you wait
until the next time

00:08:04.490 --> 00:08:05.260
they hit the record button.

00:08:05.260 --> 00:08:07.220
And say, hey, you're
hitting the record button.

00:08:07.220 --> 00:08:08.678
Do you want to
record a Voice Note?

00:08:08.678 --> 00:08:09.690
I'm like, I do.

00:08:09.690 --> 00:08:11.230
So that's the idea for it.

00:08:11.230 --> 00:08:13.010
Also, you don't always
need permissions.

00:08:13.010 --> 00:08:14.210
And so it's on the
highlight that we

00:08:14.210 --> 00:08:16.380
have a variety of system
intents in the platform.

00:08:16.380 --> 00:08:18.440
So these are for Camera,
for making phone calls,

00:08:18.440 --> 00:08:19.940
for getting contacts.

00:08:19.940 --> 00:08:21.640
These don't require permissions.

00:08:21.640 --> 00:08:22.980
The reason they don't
require permissions

00:08:22.980 --> 00:08:25.105
is because the user is the
one pressing the button,

00:08:25.105 --> 00:08:27.059
selecting the contact,
taking the photo.

00:08:27.059 --> 00:08:29.350
And so your application is
freely able to invoke these.

00:08:29.350 --> 00:08:31.440
So when this is an
option, highly preferable

00:08:31.440 --> 00:08:34.090
to use these approaches because
it doesn't require any upfront

00:08:34.090 --> 00:08:34.590
ask.

00:08:34.590 --> 00:08:36.430
And it lets the user
know, the developer

00:08:36.430 --> 00:08:39.772
is caring about my
ability to set actions.

00:08:39.772 --> 00:08:41.480
The next one is, what
if your application

00:08:41.480 --> 00:08:44.250
needs a variety of
things to do its job?

00:08:44.250 --> 00:08:46.249
And as an example
here using Hangouts,

00:08:46.249 --> 00:08:47.540
Hangouts is a messaging client.

00:08:47.540 --> 00:08:49.980
So it would need things like
Contacts Phone permission,

00:08:49.980 --> 00:08:51.060
and SMS.

00:08:51.060 --> 00:08:53.860
And so we have an option for
allowing a developer to request

00:08:53.860 --> 00:08:55.247
multiple permissions in one go.

00:08:55.247 --> 00:08:57.330
Now we do, as you're seeing
in the animation here,

00:08:57.330 --> 00:08:59.220
present them one at
a time to the user.

00:08:59.220 --> 00:09:01.060
So the idea is you
want to be balanced

00:09:01.060 --> 00:09:04.619
in how you're presenting
these multiple requests.

00:09:04.619 --> 00:09:06.660
If they make sense and
they're relatively narrow,

00:09:06.660 --> 00:09:08.540
you'll get a quick
user understanding

00:09:08.540 --> 00:09:09.666
and a quick response.

00:09:09.666 --> 00:09:11.290
If you try to blast
everything upfront,

00:09:11.290 --> 00:09:13.130
you'll probably get
some nos in there.

00:09:13.130 --> 00:09:14.796
And so the idea is
to do the things that

00:09:14.796 --> 00:09:16.230
make sense for the user.

00:09:16.230 --> 00:09:19.080
The next one is, give
a response immediately.

00:09:19.080 --> 00:09:21.730
If you ask for something,
think of it as an exchange.

00:09:21.730 --> 00:09:23.510
I'm going to give
you some of my data.

00:09:23.510 --> 00:09:25.200
What are you going to do for me?

00:09:25.200 --> 00:09:27.533
And so, in the case of Earth,
it's a really obvious one.

00:09:27.533 --> 00:09:29.005
Zoom in to where
you currently are.

00:09:29.005 --> 00:09:30.630
But there's lots of
other ones that are

00:09:30.630 --> 00:09:32.060
particular to your application.

00:09:32.060 --> 00:09:34.280
But always think
about, what's my ROI?

00:09:34.280 --> 00:09:35.850
When the user's
thinking about it,

00:09:35.850 --> 00:09:37.100
what am I going
to give them back?

00:09:37.100 --> 00:09:38.600
In cases where you
ask for something

00:09:38.600 --> 00:09:40.830
and it's not immediately
understandable to the user

00:09:40.830 --> 00:09:42.840
as to why you
asked, they're going

00:09:42.840 --> 00:09:46.970
to wonder why they turned it on
and they might go turn it off.

00:09:46.970 --> 00:09:49.670
The next thing is to look at
the material design documents

00:09:49.670 --> 00:09:52.410
that we have online and the
guidelines that are online.

00:09:52.410 --> 00:09:55.200
Empty state is a really
useful one to take a look at.

00:09:55.200 --> 00:09:57.090
And think about how, if
you have a function--

00:09:57.090 --> 00:09:58.630
maybe you have a search
view and your search

00:09:58.630 --> 00:10:00.330
view depends on
certain permissions

00:10:00.330 --> 00:10:02.144
to populate its data.

00:10:02.144 --> 00:10:03.560
How do you present
an empty state?

00:10:03.560 --> 00:10:05.226
Or how do you present
the suggestion of,

00:10:05.226 --> 00:10:07.310
this is better if you had this?

00:10:07.310 --> 00:10:09.010
So those kind of
structures enable

00:10:09.010 --> 00:10:11.590
users to understand your value
proposition better and get

00:10:11.590 --> 00:10:14.200
them to say yes to these
different permissions

00:10:14.200 --> 00:10:16.470
that you're looking to have.

00:10:16.470 --> 00:10:18.390
And so let's get into
that little bit, more

00:10:18.390 --> 00:10:20.223
of the nitty-gritty
that I mentioned before.

00:10:20.223 --> 00:10:22.230
And this is that,
on an M, we're not

00:10:22.230 --> 00:10:24.720
requiring all applications
support runtime permissions.

00:10:24.720 --> 00:10:26.270
However, if you're
on an M device

00:10:26.270 --> 00:10:30.880
and you're compiling against the
MSDK with a target of API 23,

00:10:30.880 --> 00:10:32.990
you're going to be in
the permissions model.

00:10:32.990 --> 00:10:34.364
And so what this
is going to mean

00:10:34.364 --> 00:10:36.330
is you need to write
some really complex code.

00:10:36.330 --> 00:10:37.840
I know, it's pretty rough.

00:10:37.840 --> 00:10:40.780
But what we have here are just
highlighting the two main APIs

00:10:40.780 --> 00:10:41.990
that you're going to
be wanting to look at.

00:10:41.990 --> 00:10:43.990
One is checkSelfpermissions
and the other one

00:10:43.990 --> 00:10:45.530
is requestPermissions.

00:10:45.530 --> 00:10:47.500
And so the idea is
you'll check, hey,

00:10:47.500 --> 00:10:49.965
what permissions do I have
available to me right now?

00:10:49.965 --> 00:10:51.700
If you're missing
anything that you need,

00:10:51.700 --> 00:10:53.150
you can request
those permissions

00:10:53.150 --> 00:10:55.025
and then continue on
with your functionality,

00:10:55.025 --> 00:10:56.999
assuming it's gone well.

00:10:56.999 --> 00:10:58.290
And that's the structure of it.

00:10:58.290 --> 00:11:01.247
You don't have to worry
about callbacks at runtime,

00:11:01.247 --> 00:11:03.830
where you're wondering, what if
I'm the middle of an operation

00:11:03.830 --> 00:11:06.572
and the user turns off
permission for me in settings?

00:11:06.572 --> 00:11:08.030
Not to worry, we
kill your process.

00:11:10.600 --> 00:11:13.136
So the good part about
that, though-- as

00:11:13.136 --> 00:11:14.510
opposed to being
killed-- is it's

00:11:14.510 --> 00:11:15.940
the same method as if
you're in low memory.

00:11:15.940 --> 00:11:18.148
So there's not a special
mode or handling to do here.

00:11:18.148 --> 00:11:20.270
It's treated the same as
a low memory condition.

00:11:20.270 --> 00:11:22.269
But what happens then is,
when you're booting up

00:11:22.269 --> 00:11:23.860
in your application
sequence, just

00:11:23.860 --> 00:11:25.570
check your permissions values.

00:11:25.570 --> 00:11:27.320
If you always do
that on your startup

00:11:27.320 --> 00:11:29.510
and you check your results and
cache them, you'll be fine.

00:11:29.510 --> 00:11:30.470
They won't change on you.

00:11:30.470 --> 00:11:32.303
They'll only change
when you ask and they'll

00:11:32.303 --> 00:11:33.420
go in the positive sense.

00:11:33.420 --> 00:11:34.656
They'll never go away on you.

00:11:34.656 --> 00:11:37.030
When they go away, you'll get
killed and brought back up.

00:11:37.030 --> 00:11:39.940
So you don't have to worry
about runtime handling.

00:11:39.940 --> 00:11:43.180
The last one is you might
be furiously thinking,

00:11:43.180 --> 00:11:44.467
where do I use permissions?

00:11:44.467 --> 00:11:46.300
What are my APIs that
are using permissions?

00:11:46.300 --> 00:11:47.680
How am I going to check them?

00:11:47.680 --> 00:11:49.940
And so this is what we've
added in Android Studio.

00:11:49.940 --> 00:11:51.620
And if you were in that talk,
they made mention of it,

00:11:51.620 --> 00:11:54.010
so I'll cross-reference
their mentioning of my stuff

00:11:54.010 --> 00:11:55.180
with their stuff.

00:11:55.180 --> 00:11:56.650
They added annotations.

00:11:56.650 --> 00:11:59.130
And annotations does is it
introduces new Lint warnings

00:11:59.130 --> 00:12:01.235
and errors so that when
you're using Studio

00:12:01.235 --> 00:12:02.610
and you add a
function that needs

00:12:02.610 --> 00:12:04.109
a permission-- in
the case here, I'm

00:12:04.109 --> 00:12:06.910
using Location Manager to get
the location of the user-- I'll

00:12:06.910 --> 00:12:08.870
get a warning
saying, hey, your APK

00:12:08.870 --> 00:12:11.020
doesn't actually declare
the necessary permission

00:12:11.020 --> 00:12:12.390
to use this function.

00:12:12.390 --> 00:12:14.770
Also, we'll notice is, if
you don't have a check,

00:12:14.770 --> 00:12:17.276
you're not guarding
this particular call.

00:12:17.276 --> 00:12:18.900
And we give you a
template-ized version

00:12:18.900 --> 00:12:22.050
where we can populate in
[? a little ?] boilerplate

00:12:22.050 --> 00:12:25.410
piece of code to help
you do a request.

00:12:25.410 --> 00:12:29.197
And so that way everything is
about our M Apps on the MSDK.

00:12:29.197 --> 00:12:31.280
And so you may be wondering
what about all these L

00:12:31.280 --> 00:12:33.940
Apps and pre-M applications
that are all out there.

00:12:33.940 --> 00:12:35.760
How are they going to
behave in this model?

00:12:35.760 --> 00:12:37.260
Because if you
notice before, I said

00:12:37.260 --> 00:12:40.925
a lot of alls and every about
these different controls.

00:12:40.925 --> 00:12:42.800
And so one thing that's
going to be different

00:12:42.800 --> 00:12:44.550
is, at install
time, you're still

00:12:44.550 --> 00:12:47.140
going to see the
current dialogue.

00:12:47.140 --> 00:12:49.277
So, because applications
that are pre-M

00:12:49.277 --> 00:12:51.860
don't understand what it means
to have their permissions taken

00:12:51.860 --> 00:12:54.120
away or what it means to
start off with nothing,

00:12:54.120 --> 00:12:55.570
we're going to treat them
a little bit differently.

00:12:55.570 --> 00:12:57.236
So we're still going
to prompt the user.

00:12:57.236 --> 00:12:59.660
There'll be a call-out of
this application as our legacy

00:12:59.660 --> 00:13:00.810
app in play.

00:13:00.810 --> 00:13:03.610
And on install, you'll be
granted your permissions

00:13:03.610 --> 00:13:05.660
pretty much the same as today.

00:13:05.660 --> 00:13:07.724
Also Updates will
now be blocking

00:13:07.724 --> 00:13:09.890
as they are today, instead
of the smooth ones that I

00:13:09.890 --> 00:13:11.730
spoke about before.

00:13:11.730 --> 00:13:14.430
The next thing, though,
is in the Settings panel.

00:13:14.430 --> 00:13:16.220
Users will still
be able to turn off

00:13:16.220 --> 00:13:18.270
settings on your applications.

00:13:18.270 --> 00:13:20.690
Now this isn't going to cause
security exceptions for you.

00:13:20.690 --> 00:13:22.176
That would happen
in the new model

00:13:22.176 --> 00:13:23.300
if your app is on the MSDK.

00:13:23.300 --> 00:13:25.250
But in this case,
what we do is we

00:13:25.250 --> 00:13:28.310
identify that this application
is compiled on an older SDK

00:13:28.310 --> 00:13:30.724
and we begin feeding
it empty state data.

00:13:30.724 --> 00:13:32.890
And so if we were to ask,
well, what's the location?

00:13:32.890 --> 00:13:34.640
I would say, the
location's not available.

00:13:34.640 --> 00:13:36.080
It's a valid error state.

00:13:36.080 --> 00:13:38.030
You'd say, are
there any contacts?

00:13:38.030 --> 00:13:39.980
No, there aren't any contacts.

00:13:39.980 --> 00:13:42.830
When you want to save a contact,
we're like, yeah, we saved it.

00:13:42.830 --> 00:13:45.890
No, we didn't save it.

00:13:45.890 --> 00:13:48.390
And so when you check it, you
would find that it'd be empty.

00:13:48.390 --> 00:13:52.920
So this can make some wonky
behaviors in applications.

00:13:52.920 --> 00:13:54.327
Users will get a Warning.

00:13:54.327 --> 00:13:55.910
So when they're
turning something off,

00:13:55.910 --> 00:13:58.487
we just don't want to let the
user flip it off and assume

00:13:58.487 --> 00:13:59.320
it's going to be OK.

00:13:59.320 --> 00:14:00.850
Or if the app starts
behaving strangely.

00:14:00.850 --> 00:14:02.266
So we do have this
Warning to make

00:14:02.266 --> 00:14:05.269
sure users are aware this
is a control that they have.

00:14:05.269 --> 00:14:07.560
But also they may need to
come back and turn it back on

00:14:07.560 --> 00:14:08.920
or maybe they have to get
rid of the application

00:14:08.920 --> 00:14:10.680
if they end up in
an odd behavior.

00:14:10.680 --> 00:14:12.770
An example might
be-- I do Hangouts

00:14:12.770 --> 00:14:15.244
and I see it's using
Camera and it's maybe not

00:14:15.244 --> 00:14:17.160
apparently obvious to
me that it needs Camera.

00:14:17.160 --> 00:14:18.040
I turn it off.

00:14:18.040 --> 00:14:20.080
A few weeks later, I
have a Hangout call

00:14:20.080 --> 00:14:21.270
and the video's not working.

00:14:21.270 --> 00:14:22.964
And you're like, why?

00:14:22.964 --> 00:14:25.380
And they might not go, oh,
because I turned off the Camera

00:14:25.380 --> 00:14:26.920
and I have to go
back and flip it on.

00:14:26.920 --> 00:14:28.240
Hopefully, Hangouts
won't have that problem

00:14:28.240 --> 00:14:30.070
because they'll be a
modern application.

00:14:30.070 --> 00:14:31.990
But just for the example.

00:14:31.990 --> 00:14:35.480
The last one is, when things
are turned off in a pre-M app,

00:14:35.480 --> 00:14:38.470
because it's not on the MSDK,
it can't request permissions.

00:14:38.470 --> 00:14:41.680
And this is where we're really
looking for app developers

00:14:41.680 --> 00:14:43.500
to adopt the model as
quickly as you can.

00:14:43.500 --> 00:14:45.620
And this really only
makes good sense

00:14:45.620 --> 00:14:47.980
for users when we
only have one model,

00:14:47.980 --> 00:14:49.450
where everything is runtime.

00:14:49.450 --> 00:14:50.908
As opposed to the
hybrid that we're

00:14:50.908 --> 00:14:52.370
going to have in the beginning.

00:14:52.370 --> 00:14:55.200
I've used the metaphor
that this is switching

00:14:55.200 --> 00:14:58.007
from the left side of the road
to the right side of the road.

00:14:58.007 --> 00:14:59.840
Going to be a little
messy in the beginning.

00:14:59.840 --> 00:15:01.690
And so we really want to
make sure that applications

00:15:01.690 --> 00:15:02.356
are moving over.

00:15:02.356 --> 00:15:04.430
We've tried to give
a lot of incentives

00:15:04.430 --> 00:15:06.690
for developers to move over,
especially around being

00:15:06.690 --> 00:15:08.540
able to ask multiple
times, around being

00:15:08.540 --> 00:15:12.490
able to ask in bulk, and making
updates more seamless when

00:15:12.490 --> 00:15:14.270
you're adding new permissions.

00:15:14.270 --> 00:15:17.020
And so with that,
I'm ending early.

00:15:17.020 --> 00:15:18.597
So if you're planning
to head home,

00:15:18.597 --> 00:15:19.930
you'll be able to go home early.

00:15:19.930 --> 00:15:22.039
But if not, lots of
Q&amp;A. I'm assuming

00:15:22.039 --> 00:15:23.330
there's lots of questions here.

00:15:23.330 --> 00:15:26.014
So I'll stay here for the next--
I think we have 24 minutes.

00:15:26.014 --> 00:15:28.430
And if you guys have questions,
feel free to go to the mic

00:15:28.430 --> 00:15:30.350
up ahead and try this out.

00:15:30.350 --> 00:15:32.930
Also, there's a full code
example on the website.

00:15:32.930 --> 00:15:34.610
We have code snippets
of all this stuff.

00:15:34.610 --> 00:15:36.680
There's a big write-up about
permissions, about the best

00:15:36.680 --> 00:15:37.930
practices, about the behaviors.

00:15:37.930 --> 00:15:40.471
There will be more coming out
on best practices and behaviors

00:15:40.471 --> 00:15:45.190
and UI guidelines, so please
check developer.android.com

00:15:45.190 --> 00:15:46.009
for new updates.

00:15:46.009 --> 00:15:47.050
And with that, thank you.

00:15:52.176 --> 00:15:53.580
Go for it.

00:15:53.580 --> 00:15:54.180
AUDIENCE: Hi.

00:15:54.180 --> 00:15:57.625
It's cool to have granular
permissions finally.

00:15:57.625 --> 00:16:00.340
It reminds me of iOS sometimes.

00:16:00.340 --> 00:16:01.980
Speaking of which,
is there a way

00:16:01.980 --> 00:16:04.260
to supply an
explanation of why we

00:16:04.260 --> 00:16:05.510
are asking for the permission?

00:16:05.510 --> 00:16:06.593
BEN POIESZ: Not right now.

00:16:06.593 --> 00:16:09.450
We are looking at
the options of a note

00:16:09.450 --> 00:16:11.814
from the developer in the
dialogue that I was showing.

00:16:11.814 --> 00:16:13.230
There's a little
bit of trickiness

00:16:13.230 --> 00:16:17.460
of when the OS is stating
a piece of information

00:16:17.460 --> 00:16:20.330
on the path of an
application developer.

00:16:20.330 --> 00:16:22.080
Is that a false premise,
is it legitimate?

00:16:22.080 --> 00:16:22.870
And so we're trying
to deal with,

00:16:22.870 --> 00:16:24.980
what's the right way
to present the balance?

00:16:24.980 --> 00:16:26.813
Like, this is a statement
from the developer

00:16:26.813 --> 00:16:28.199
while it's in system UI.

00:16:28.199 --> 00:16:30.490
If you do you feel like you
need to explain to the user

00:16:30.490 --> 00:16:33.450
why you want something, I
highly recommend their approach

00:16:33.450 --> 00:16:35.450
that we mentioned
before-- ask first.

00:16:35.450 --> 00:16:37.440
There's no penalty
if the user says no.

00:16:37.440 --> 00:16:39.540
If they say no, present
rationalization.

00:16:39.540 --> 00:16:41.510
Present your value
proposition to them.

00:16:41.510 --> 00:16:44.630
If they still say no, let it be.

00:16:44.630 --> 00:16:46.437
But the idea is
the first request,

00:16:46.437 --> 00:16:48.270
the users that understand
your value prompt,

00:16:48.270 --> 00:16:49.520
they get one dialogue.

00:16:49.520 --> 00:16:50.390
That's great.

00:16:50.390 --> 00:16:53.500
The users that don't,
they'll get a no,

00:16:53.500 --> 00:16:55.150
they'll see your
value proposition.

00:16:55.150 --> 00:16:57.070
If they still say no, let it be.

00:16:59.939 --> 00:17:02.230
AUDIENCE: What happened to
the rest of the permissions?

00:17:02.230 --> 00:17:04.599
If I've got an app that
wants to do Wi-Fi scanning,

00:17:04.599 --> 00:17:05.480
where'd that one go?

00:17:05.480 --> 00:17:08.119
BEN POIESZ: Yeah, so there's a
lot of refactoring that we'll

00:17:08.119 --> 00:17:09.119
be doing under the hood.

00:17:09.119 --> 00:17:11.869
And soul searching
about permissions.

00:17:11.869 --> 00:17:13.540
One of things that
we didn't mention

00:17:13.540 --> 00:17:15.030
is, there's
dangerous permissions

00:17:15.030 --> 00:17:16.359
and normal permissions.

00:17:16.359 --> 00:17:17.859
Everything that's
flagged as normal,

00:17:17.859 --> 00:17:19.980
you don't have to worry
about being taken away.

00:17:19.980 --> 00:17:21.563
Those are still
automatically granted.

00:17:21.563 --> 00:17:23.839
There's no toggle
to turn those off.

00:17:23.839 --> 00:17:26.130
Things like Wi-Fi, we're
changing some of the semantics

00:17:26.130 --> 00:17:28.526
around how they get requested
and some of the rules

00:17:28.526 --> 00:17:29.900
around how you
get Mac addresses.

00:17:29.900 --> 00:17:32.300
So one of the more nuanced
items-- I'll mention it now

00:17:32.300 --> 00:17:34.544
so you can find
it out later-- is

00:17:34.544 --> 00:17:37.210
if you're trying to find out the
Mac address of remote Bluetooth

00:17:37.210 --> 00:17:39.310
devices when doing Wi-Fi scans.

00:17:39.310 --> 00:17:42.590
Those will come back no unless
you actively hold the location

00:17:42.590 --> 00:17:45.770
permission, since typically
remote Mac addresses

00:17:45.770 --> 00:17:48.200
for Bluetooth and
Wi-Fi tend to be

00:17:48.200 --> 00:17:50.812
about finding and
triangulating your location.

00:17:50.812 --> 00:17:53.020
So we've done some restructuring
and behavioral stuff

00:17:53.020 --> 00:17:54.460
under the hood.

00:17:54.460 --> 00:17:56.630
That's actually somewhat
documented already,

00:17:56.630 --> 00:17:58.385
but there will be more
coming out on that.

00:17:58.385 --> 00:18:00.510
If you look at developer.com,
the current highlight

00:18:00.510 --> 00:18:02.010
on permissions, it
actually mentions

00:18:02.010 --> 00:18:04.526
some of that stuff about
Wi-Fi specifically.

00:18:04.526 --> 00:18:05.400
AUDIENCE: OK, thanks.

00:18:05.400 --> 00:18:07.794
BEN POIESZ: Yup.

00:18:07.794 --> 00:18:09.210
AUDIENCE: So I may
have missed it,

00:18:09.210 --> 00:18:12.280
but there's no category for
internet-style permission,

00:18:12.280 --> 00:18:12.780
right?

00:18:12.780 --> 00:18:13.613
BEN POIESZ: Correct.

00:18:13.613 --> 00:18:15.160
AUDIENCE: So that
means, by default,

00:18:15.160 --> 00:18:18.884
all internet-like permission are
basically allowed to the app?

00:18:18.884 --> 00:18:19.550
BEN POIESZ: Yup.

00:18:19.550 --> 00:18:22.490
AUDIENCE: So does it mean
you could have a flashlight

00:18:22.490 --> 00:18:24.970
application, but [INAUDIBLE]
get [INAUDIBLE] information

00:18:24.970 --> 00:18:26.176
and then send data back to--

00:18:26.176 --> 00:18:28.050
BEN POIESZ: Yeah, so a
flashlight application

00:18:28.050 --> 00:18:29.010
could have internet.

00:18:29.010 --> 00:18:31.260
It would then, though, have
to ask for all permissions

00:18:31.260 --> 00:18:33.350
to get data off your device.

00:18:33.350 --> 00:18:36.000
So the idea is, because
we're preventing access

00:18:36.000 --> 00:18:38.140
to the data upfront, it
may have the internet,

00:18:38.140 --> 00:18:39.130
but it's not going
to have anything

00:18:39.130 --> 00:18:40.271
that we're concerned about.

00:18:40.271 --> 00:18:42.270
At least, that a user
should be concerned about.

00:18:42.270 --> 00:18:43.145
AUDIENCE: OK, thanks.

00:18:45.930 --> 00:18:48.650
AUDIENCE: So did
you consider a model

00:18:48.650 --> 00:18:51.627
of sandboxing instead of just
returning null information?

00:18:51.627 --> 00:18:53.710
And what is the possibility
of that in the future?

00:18:53.710 --> 00:18:55.418
BEN POIESZ: Yeah,
sandboxing is something

00:18:55.418 --> 00:18:57.772
we've been looking at for
a few different things,

00:18:57.772 --> 00:18:59.730
but it's not something
we're planning on doing,

00:18:59.730 --> 00:19:00.750
at least right now.

00:19:00.750 --> 00:19:03.550
The idea was to try
to minimize-- sandbox,

00:19:03.550 --> 00:19:05.256
you mean like to
provide fake data?

00:19:05.256 --> 00:19:05.880
As opposed to--

00:19:05.880 --> 00:19:06.580
AUDIENCE: Yeah, fake data.

00:19:06.580 --> 00:19:08.480
Or just only certain
data, like if they

00:19:08.480 --> 00:19:11.220
wanted to save a contact,
we can let them have access

00:19:11.220 --> 00:19:14.510
to that one contact.

00:19:14.510 --> 00:19:16.470
BEN POIESZ: You
create a new issue.

00:19:16.470 --> 00:19:20.580
Now the application is working
and the data set's disjoint.

00:19:20.580 --> 00:19:22.880
And the user really
notices weird behaviors,

00:19:22.880 --> 00:19:24.772
where if you're
seeing a null set,

00:19:24.772 --> 00:19:25.980
it becomes much more obvious.

00:19:25.980 --> 00:19:28.850
So where I go to Calendar
and my Calendar application

00:19:28.850 --> 00:19:29.990
shows no calendar entries.

00:19:29.990 --> 00:19:33.562
And it's much more obvious
as to what's going on.

00:19:33.562 --> 00:19:34.270
AUDIENCE: Thanks.

00:19:36.871 --> 00:19:38.370
AUDIENCE: Has there
been any thought

00:19:38.370 --> 00:19:44.140
of granting an equivalent
of the intent handler

00:19:44.140 --> 00:19:46.320
chooser of a just-once?

00:19:46.320 --> 00:19:49.280
So grant permission to do the
action I'm doing right now,

00:19:49.280 --> 00:19:51.504
but not blanket
permission from now on?

00:19:51.504 --> 00:19:52.920
BEN POIESZ: Yeah,
so we're looking

00:19:52.920 --> 00:19:56.284
at a number of different
ways that developers can ask

00:19:56.284 --> 00:19:57.450
for different types of data.

00:19:57.450 --> 00:20:00.040
We're trying to look at them
as-- things that are just once,

00:20:00.040 --> 00:20:02.206
things that our user chooses
or things that are more

00:20:02.206 --> 00:20:04.100
blanket independent access.

00:20:04.100 --> 00:20:07.450
What we're trying to do
is balance user fatigue

00:20:07.450 --> 00:20:08.482
on seeing too many.

00:20:08.482 --> 00:20:09.940
So at least right
now, we're trying

00:20:09.940 --> 00:20:13.802
to avoid the just-once for
these groups of permissions.

00:20:13.802 --> 00:20:15.760
But for the intent ones
that you're mentioning,

00:20:15.760 --> 00:20:17.676
those are the way we're
structuring just-once,

00:20:17.676 --> 00:20:19.101
is fire the intent.

00:20:19.101 --> 00:20:20.600
And that's a one-time
picker for it.

00:20:20.600 --> 00:20:22.140
But thanks for the comment.

00:20:25.010 --> 00:20:28.520
AUDIENCE: Can you clarify about
the Don't ask again option?

00:20:28.520 --> 00:20:34.230
So if a user selects that and,
say, in the [? keep app, ?]

00:20:34.230 --> 00:20:37.530
they hit the Record
button again.

00:20:37.530 --> 00:20:39.230
Do we get a security exception?

00:20:39.230 --> 00:20:40.110
Or?

00:20:40.110 --> 00:20:42.280
BEN POIESZ: No, you'll
get a fast no from that.

00:20:42.280 --> 00:20:44.320
So if a user says,
don't ask me again,

00:20:44.320 --> 00:20:46.470
you invoke the
[INAUDIBLE] check.

00:20:46.470 --> 00:20:49.850
The OS will respond
very quickly with a no.

00:20:49.850 --> 00:20:52.110
You do have the information
to know that the user said

00:20:52.110 --> 00:20:54.480
don't ask again.

00:20:54.480 --> 00:20:57.784
When the user says, don't ask
again, you're aware of that.

00:20:57.784 --> 00:20:59.200
There's a few
different strategies

00:20:59.200 --> 00:21:01.830
you can take, depending on
how important feature is.

00:21:01.830 --> 00:21:04.152
You might just say, let's
just hide the record button.

00:21:04.152 --> 00:21:06.610
You might just say, maybe we
should keep the record button.

00:21:06.610 --> 00:21:09.292
If they press it again,
we're back in the game.

00:21:09.292 --> 00:21:11.500
But generally you should
consider the Don't ask again

00:21:11.500 --> 00:21:15.250
like almost the nuclear option.

00:21:15.250 --> 00:21:17.290
We're using it as a
signal of dissonance

00:21:17.290 --> 00:21:19.540
between the developer
and the user.

00:21:19.540 --> 00:21:24.280
AUDIENCE: And at that
point, if we kept the option

00:21:24.280 --> 00:21:27.300
on the screen, we would
present a message saying, hey,

00:21:27.300 --> 00:21:32.720
you disabled this permission,
so we can't do this.

00:21:32.720 --> 00:21:34.650
Do we have a direct
intent to the settings?

00:21:34.650 --> 00:21:36.441
BEN POIESZ: You have
an intent to take them

00:21:36.441 --> 00:21:39.400
to the app page for
yourself, but not

00:21:39.400 --> 00:21:41.440
to the permissions
page, specifically.

00:21:41.440 --> 00:21:44.470
So we did want to make
it a big deal when

00:21:44.470 --> 00:21:45.790
the user says, don't ask again.

00:21:45.790 --> 00:21:47.240
But you will have recourse.

00:21:47.240 --> 00:21:47.948
AUDIENCE: Thanks.

00:21:50.420 --> 00:21:52.750
AUDIENCE: Hi.

00:21:52.750 --> 00:21:55.060
I have a question
about compatibility.

00:21:55.060 --> 00:21:58.910
So will I still be able to
build a single APK targeting

00:21:58.910 --> 00:22:00.390
Android M?

00:22:00.390 --> 00:22:02.810
And leverage this
new permission model

00:22:02.810 --> 00:22:04.640
and have it work
properly on the older

00:22:04.640 --> 00:22:06.894
devices that do not support it?

00:22:06.894 --> 00:22:07.518
BEN POIESZ: No.

00:22:07.518 --> 00:22:10.287
Yes.

00:22:10.287 --> 00:22:12.370
I'm not sure anyone would
believe me if I said no.

00:22:12.370 --> 00:22:13.070
So yes.

00:22:13.070 --> 00:22:14.944
So the structure of it
is, since you're still

00:22:14.944 --> 00:22:16.810
declaring the
fine-grained permissions,

00:22:16.810 --> 00:22:17.970
the individual
ones-- because those

00:22:17.970 --> 00:22:19.370
are being mapped into
the larger groups

00:22:19.370 --> 00:22:21.744
that you're seeing-- you don't
really need to do anything

00:22:21.744 --> 00:22:23.380
special on older ones.

00:22:23.380 --> 00:22:26.314
[? Supportlib ?] has
mainly no functioning

00:22:26.314 --> 00:22:28.980
for the different functions when
you're calling check permission

00:22:28.980 --> 00:22:30.910
grants and request permissions.

00:22:30.910 --> 00:22:32.250
All those things get nulled out.

00:22:32.250 --> 00:22:34.458
So you don't have to do
anything special on your code

00:22:34.458 --> 00:22:36.044
to deal with older OSs.

00:22:36.044 --> 00:22:38.210
You just keep doing what
you're doing, declare ones.

00:22:38.210 --> 00:22:41.120
There is one-- it's more
of an advanced feature,

00:22:41.120 --> 00:22:43.650
but you're asking about
it-- is, let's say you have

00:22:43.650 --> 00:22:45.080
a permission you want to add.

00:22:45.080 --> 00:22:46.730
You don't have it today.

00:22:46.730 --> 00:22:49.404
You want to add it
only on M devices,

00:22:49.404 --> 00:22:51.570
because you don't want to
take the hit on L devices.

00:22:51.570 --> 00:22:54.200
And so we have a
Manifest option that you

00:22:54.200 --> 00:22:56.860
can define that will
allow you to only ask

00:22:56.860 --> 00:23:00.250
for this new permission and
declare it on m devices.

00:23:00.250 --> 00:23:03.896
This way, your L devices don't
get impacted by your requests

00:23:03.896 --> 00:23:05.270
and requiring you
just to accept.

00:23:05.270 --> 00:23:07.080
But you can get the
free flow upfront.

00:23:07.080 --> 00:23:07.766
It's a choice.

00:23:07.766 --> 00:23:09.140
If you want them
all, go for it--

00:23:09.140 --> 00:23:11.810
if you only want it on the
new ones, go for that as well.

00:23:11.810 --> 00:23:12.643
AUDIENCE: Thank you.

00:23:12.643 --> 00:23:14.290
BEN POIESZ: Yup.

00:23:14.290 --> 00:23:15.140
AUDIENCE: Hey.

00:23:15.140 --> 00:23:16.950
In case of legacy
[? development ?] apps,

00:23:16.950 --> 00:23:19.787
would user be allowed to
disable the permissions?

00:23:19.787 --> 00:23:20.999
BEN POIESZ: Yes.

00:23:20.999 --> 00:23:22.790
AUDIENCE: Is there any
way to disable that?

00:23:22.790 --> 00:23:23.825
BEN POIESZ: Disable?

00:23:23.825 --> 00:23:25.450
Being able to turn
off the permissions?

00:23:25.450 --> 00:23:27.816
AUDIENCE: Yes.

00:23:27.816 --> 00:23:28.940
BEN POIESZ: In which sense?

00:23:28.940 --> 00:23:29.750
By who?

00:23:29.750 --> 00:23:31.415
AUDIENCE: For development apps.

00:23:31.415 --> 00:23:32.790
BEN POIESZ: For
development apps.

00:23:32.790 --> 00:23:34.150
AUDIENCE: Where admin wants
to control their devices.

00:23:34.150 --> 00:23:35.670
BEN POIESZ: Oh, I get you.

00:23:35.670 --> 00:23:38.560
So in the case of Device
Owner and Profile Owner,

00:23:38.560 --> 00:23:40.317
which are the Android
[? Work ?] features

00:23:40.317 --> 00:23:42.150
that we have in Android,
there is an ability

00:23:42.150 --> 00:23:46.130
to set policies around
the permissions.

00:23:46.130 --> 00:23:47.750
Dave mentioned a
coaster device--

00:23:47.750 --> 00:23:49.570
it's a corporate-owned
single-use device,

00:23:49.570 --> 00:23:51.050
like a kiosk.

00:23:51.050 --> 00:23:53.670
You could then say, I want
this application running.

00:23:53.670 --> 00:23:56.640
I want its permissions
enforced to these values.

00:23:56.640 --> 00:23:58.900
And so, as you're a device
owner in that scenario,

00:23:58.900 --> 00:24:00.530
you're able to dictate terms.

00:24:00.530 --> 00:24:01.930
Device Owner is
not Device Admin,

00:24:01.930 --> 00:24:03.150
it's a different concept.

00:24:03.150 --> 00:24:04.732
But that's our
cases where you want

00:24:04.732 --> 00:24:06.440
to be able to have
that stricter control.

00:24:06.440 --> 00:24:08.440
But in general, we're
pretty sensitive to making

00:24:08.440 --> 00:24:10.529
sure users have the
full power of this.

00:24:10.529 --> 00:24:13.070
AUDIENCE: So Legacy development
won't have those permissions.

00:24:13.070 --> 00:24:13.903
BEN POIESZ: Correct.

00:24:13.903 --> 00:24:16.490
Device admin, we're
transitioning that.

00:24:16.490 --> 00:24:17.240
So maybe an aside.

00:24:17.240 --> 00:24:18.865
But we are transitioning
that to a more

00:24:18.865 --> 00:24:21.570
consumer-oriented feature set as
opposed to a corporate feature

00:24:21.570 --> 00:24:22.070
set.

00:24:22.070 --> 00:24:24.950
With Device Owner and
Profile Owner being the tools

00:24:24.950 --> 00:24:28.410
that are better scoped
and have better longevity

00:24:28.410 --> 00:24:29.585
than Device Admin.

00:24:29.585 --> 00:24:32.350
AUDIENCE: OK, thank you.

00:24:32.350 --> 00:24:35.190
AUDIENCE: Does this code have
any kinship to the Apps Ops

00:24:35.190 --> 00:24:36.274
feature that was briefly--

00:24:36.274 --> 00:24:37.606
BEN POIESZ: I blanked out there.

00:24:37.606 --> 00:24:38.410
What was that?

00:24:40.362 --> 00:24:41.820
I was waiting for
something to ask.

00:24:46.790 --> 00:24:48.460
We learned a lot from App Ops.

00:24:48.460 --> 00:24:51.030
I think a lot of the
technical guts of it

00:24:51.030 --> 00:24:54.610
are how we implemented the
fallback behavior for L.

00:24:54.610 --> 00:24:57.765
But we found, by itself,
without a more holistic re-look

00:24:57.765 --> 00:25:00.015
and rethink and re-structure
of how we do permissions,

00:25:00.015 --> 00:25:02.290
it didn't make a lot of sense.

00:25:02.290 --> 00:25:05.822
But it does have some
underpinnings from that.

00:25:05.822 --> 00:25:06.530
AUDIENCE: Thanks.

00:25:09.476 --> 00:25:10.850
AUDIENCE: I can
see cases when it

00:25:10.850 --> 00:25:13.600
can be really annoying to
the user asking permission

00:25:13.600 --> 00:25:15.600
at runtime.

00:25:15.600 --> 00:25:19.490
Is there a plan for
still allowing people

00:25:19.490 --> 00:25:23.534
to ask permissions all
at once ahead of time?

00:25:23.534 --> 00:25:25.450
BEN POIESZ: So it's
something we're looking at

00:25:25.450 --> 00:25:26.991
and we're going to
be tracking pretty

00:25:26.991 --> 00:25:28.640
closely to see what's going on.

00:25:28.640 --> 00:25:30.520
Myself, I'm very
sensitive to that.

00:25:30.520 --> 00:25:33.830
The reason is, if we end up
with user fatigue on these,

00:25:33.830 --> 00:25:36.311
you end up not actually
helping people.

00:25:36.311 --> 00:25:38.060
And so there's this
balance of making sure

00:25:38.060 --> 00:25:40.330
that we have enough
prompts but not so many

00:25:40.330 --> 00:25:42.400
that the users are
like, I don't care.

00:25:42.400 --> 00:25:44.329
Just go away.

00:25:44.329 --> 00:25:46.370
So we're going to be
keeping a close eye on that.

00:25:46.370 --> 00:25:48.780
At the moment, the
reason-- just to be blunt--

00:25:48.780 --> 00:25:51.730
that we structured it where
we let you request many

00:25:51.730 --> 00:25:54.800
but then that you can
present them one at a time

00:25:54.800 --> 00:25:57.860
is that we have the API for
you to ask for multiple things.

00:25:57.860 --> 00:26:01.302
And we have, then, the right,
at some point, to change the UI.

00:26:01.302 --> 00:26:02.760
Well, we could say,
OK, we do think

00:26:02.760 --> 00:26:05.200
it's more appropriate to show
multiple and one-shot, as

00:26:05.200 --> 00:26:06.780
opposed to 101.

00:26:06.780 --> 00:26:08.402
The reason we didn't
was many teams

00:26:08.402 --> 00:26:09.860
thankfully were
very honest with us

00:26:09.860 --> 00:26:13.150
internally about what they
planned to do if that existed.

00:26:13.150 --> 00:26:16.449
And we extrapolated to what we
saw around external developers

00:26:16.449 --> 00:26:17.490
as to what they would do.

00:26:17.490 --> 00:26:19.640
And we felt most applications
would probably just

00:26:19.640 --> 00:26:22.550
ask for everything
upfront and then fall back

00:26:22.550 --> 00:26:24.200
to asking individually.

00:26:24.200 --> 00:26:27.869
And that's arguably worse than
the situation we have today.

00:26:27.869 --> 00:26:29.660
So that's the main
reason we didn't do it--

00:26:29.660 --> 00:26:31.790
but it is something
we're keeping an eye on.

00:26:31.790 --> 00:26:32.498
AUDIENCE: Thanks.

00:26:34.577 --> 00:26:36.160
AUDIENCE: Similar
to the previous one,

00:26:36.160 --> 00:26:39.160
what's happening with
applications that listening

00:26:39.160 --> 00:26:43.626
to intents and start services
without any UI, even on app

00:26:43.626 --> 00:26:44.880
install?

00:26:44.880 --> 00:26:48.130
BEN POIESZ: So applications that
have no UI whatsoever but need

00:26:48.130 --> 00:26:51.050
permissions, I don't
really understand those,

00:26:51.050 --> 00:26:52.530
just to be honest.

00:26:52.530 --> 00:26:54.850
But there are ways
to get something.

00:26:54.850 --> 00:26:57.360
If you don't have an appropriate
way to ask for something--

00:26:57.360 --> 00:26:59.026
say you're a background
service and it's

00:26:59.026 --> 00:27:00.720
hard to present yourself.

00:27:00.720 --> 00:27:03.060
One is you can invoke
an activity directly.

00:27:03.060 --> 00:27:04.800
You could present a
notification as well.

00:27:04.800 --> 00:27:07.290
And the notification could be
a, hey, turn on this permission.

00:27:07.290 --> 00:27:09.456
And they click it and you
can invoke these dialogues

00:27:09.456 --> 00:27:10.530
from the notification.

00:27:10.530 --> 00:27:12.177
So you have some recourse.

00:27:12.177 --> 00:27:14.260
But the idea is, even if
you're in the background,

00:27:14.260 --> 00:27:17.460
you need to be able to
present your Roi effectively

00:27:17.460 --> 00:27:19.990
and your use case to the
user as to why you want

00:27:19.990 --> 00:27:21.440
to be given that permission.

00:27:24.740 --> 00:27:25.740
AUDIENCE: Hi.

00:27:25.740 --> 00:27:28.980
So if a user has denied
a permission twice

00:27:28.980 --> 00:27:30.560
and they've said,
don't ask me again.

00:27:30.560 --> 00:27:32.393
But it turns out that
permission is actually

00:27:32.393 --> 00:27:34.249
critical for the
application to function.

00:27:34.249 --> 00:27:36.290
You said we should show
some messaging that says,

00:27:36.290 --> 00:27:37.440
this is required to turn on.

00:27:37.440 --> 00:27:39.730
Will there be an intent
provided that we could actually

00:27:39.730 --> 00:27:41.188
take you straight
to the permission

00:27:41.188 --> 00:27:42.639
settings for your application?

00:27:42.639 --> 00:27:44.930
BEN POIESZ: Yes, so you can
intent directly to Settings

00:27:44.930 --> 00:27:48.080
to the top level for it.

00:27:48.080 --> 00:27:49.680
If they've said,
don't ask again,

00:27:49.680 --> 00:27:52.686
you can only intent to
your application level.

00:27:52.686 --> 00:27:54.310
If they haven't said,
don't ask again--

00:27:54.310 --> 00:27:56.018
so maybe it's the
second request and they

00:27:56.018 --> 00:27:58.610
haven't said that
apocalyptic version,

00:27:58.610 --> 00:28:01.220
you intent directly to
your permissions page.

00:28:01.220 --> 00:28:03.990
And that's a difference that
we make to try and balance

00:28:03.990 --> 00:28:05.740
the user's statement
that they don't

00:28:05.740 --> 00:28:07.240
want to be asked any more.

00:28:07.240 --> 00:28:10.220
So generally [INAUDIBLE]
that's important to model

00:28:10.220 --> 00:28:11.700
is, ask first.

00:28:11.700 --> 00:28:12.670
That's cool.

00:28:12.670 --> 00:28:15.100
But the second ask, be
pretty sure the user's

00:28:15.100 --> 00:28:17.910
on the same page as you
before you ask again.

00:28:17.910 --> 00:28:21.080
And that's something like
screeners or, hey, I do this.

00:28:21.080 --> 00:28:21.670
Is that OK?

00:28:21.670 --> 00:28:22.730
And they're like, yeah.

00:28:22.730 --> 00:28:23.940
OK, now prompt.

00:28:23.940 --> 00:28:27.140
Consider the second prompt
to be the more-- be careful

00:28:27.140 --> 00:28:30.030
about the second prompt, because
they might check the box.

00:28:30.030 --> 00:28:31.690
AUDIENCE: So if it's already
been denied and they say,

00:28:31.690 --> 00:28:33.560
don't ask again, you cannot
go to the permission settings

00:28:33.560 --> 00:28:34.100
page.

00:28:34.100 --> 00:28:35.100
But if they haven't--

00:28:35.100 --> 00:28:37.266
BEN POIESZ: If they haven't
checked Don't Ask Again,

00:28:37.266 --> 00:28:40.090
then you can intent directly
to the permissions page.

00:28:40.090 --> 00:28:42.220
If they have, you can't.

00:28:42.220 --> 00:28:43.210
AUDIENCE: OK, thanks.

00:28:43.210 --> 00:28:45.019
BEN POIESZ: Yup.

00:28:45.019 --> 00:28:45.560
AUDIENCE: Hi.

00:28:45.560 --> 00:28:48.010
Are OEM-installed apps still
subject to the same runtime

00:28:48.010 --> 00:28:49.090
permission checks?

00:28:49.090 --> 00:28:50.820
BEN POIESZ: That's
a good question.

00:28:50.820 --> 00:28:52.710
So yes, they are.

00:28:52.710 --> 00:28:56.130
We are working on
some specific policies

00:28:56.130 --> 00:29:00.000
to avoid silly situations, like
things where calling doesn't

00:29:00.000 --> 00:29:02.300
work and things like that.

00:29:02.300 --> 00:29:03.330
But in general, yes.

00:29:03.330 --> 00:29:04.940
We do want it to
be a runtime model,

00:29:04.940 --> 00:29:06.900
so we do want the
people to be asking.

00:29:06.900 --> 00:29:07.830
AUDIENCE: OK, thanks.

00:29:07.830 --> 00:29:09.330
BEN POIESZ: Yeah.

00:29:09.330 --> 00:29:12.020
AUDIENCE: You mentioned
briefly system intents

00:29:12.020 --> 00:29:14.000
that have implied permissions.

00:29:14.000 --> 00:29:16.310
My question is specifically
around the Contacts.

00:29:16.310 --> 00:29:18.767
When you have the people picker,
it gives you permissions.

00:29:18.767 --> 00:29:20.850
It seems, in practice, to
only give you permission

00:29:20.850 --> 00:29:24.305
actually to the full name and
the phone number, I believe.

00:29:24.305 --> 00:29:25.930
Not the email address
or anything else.

00:29:25.930 --> 00:29:29.510
Is there any chance you might
take a look at that again?

00:29:29.510 --> 00:29:31.670
BEN POIESZ: Yes, I will
take a look at that again.

00:29:31.670 --> 00:29:32.378
AUDIENCE: Thanks.

00:29:33.935 --> 00:29:35.310
AUDIENCE: What if
you've included

00:29:35.310 --> 00:29:41.410
a library that requires
permissions and then

00:29:41.410 --> 00:29:43.460
we compile?

00:29:43.460 --> 00:29:44.957
BEN POIESZ: Yes.

00:29:44.957 --> 00:29:47.040
You should know what your
libraries are asking for

00:29:47.040 --> 00:29:48.070
and need.

00:29:48.070 --> 00:29:51.340
Either the library should
be doing requests for you

00:29:51.340 --> 00:29:54.500
or letting you know very clearly
what they may be needing.

00:29:54.500 --> 00:29:56.930
It can create a strange
situation for the developer

00:29:56.930 --> 00:29:59.240
if you're including a library
and it needs a permission

00:29:59.240 --> 00:30:01.319
and it starts exploding
because it doesn't

00:30:01.319 --> 00:30:02.360
understand the new model.

00:30:02.360 --> 00:30:03.901
But you compile them
into the new SDK

00:30:03.901 --> 00:30:06.104
but maybe they're not
ready for the new SDK.

00:30:06.104 --> 00:30:07.270
So something to be aware of.

00:30:07.270 --> 00:30:10.570
I don't have a good fix for you,
other than tell you be aware.

00:30:13.720 --> 00:30:14.400
AUDIENCE: Hey.

00:30:14.400 --> 00:30:17.880
Do you have any plan to
differentiate between required

00:30:17.880 --> 00:30:20.390
versus optional permissions?

00:30:20.390 --> 00:30:21.919
BEN POIESZ: No.

00:30:21.919 --> 00:30:22.507
AUDIENCE: OK.

00:30:22.507 --> 00:30:24.840
BEN POIESZ: I can give you a
bit more of an explanation.

00:30:24.840 --> 00:30:28.270
But the idea is we felt
that a lot of folks,

00:30:28.270 --> 00:30:30.420
if there was a
required option, we'd

00:30:30.420 --> 00:30:32.790
very quickly most things
would be required.

00:30:32.790 --> 00:30:36.000
And we felt for applications
where they truly are required,

00:30:36.000 --> 00:30:38.304
it should probably
make sense to the user

00:30:38.304 --> 00:30:39.720
by the purpose of
the application.

00:30:39.720 --> 00:30:43.740
I'll use WhatsApp as an example,
since they were in the keynote.

00:30:43.740 --> 00:30:46.119
They, upfront, want to
verify your phone number.

00:30:46.119 --> 00:30:47.660
That's how they make
sure that you're

00:30:47.660 --> 00:30:49.030
the owner of the
phone number and they

00:30:49.030 --> 00:30:50.071
reference all your links.

00:30:50.071 --> 00:30:54.200
So if you say no to that,
I expect them to be like,

00:30:54.200 --> 00:30:56.260
I don't know what
you want me to do.

00:30:56.260 --> 00:30:58.960
So I think there will be
pretty clear cases for apps

00:30:58.960 --> 00:31:01.470
to take that behavior, where
they don't need the OS to help

00:31:01.470 --> 00:31:02.506
in that enforcement.

00:31:02.506 --> 00:31:03.380
AUDIENCE: OK, thanks.

00:31:05.450 --> 00:31:06.950
AUDIENCE: So my
question was already

00:31:06.950 --> 00:31:08.270
asked about the libraries.

00:31:08.270 --> 00:31:11.027
And how concerned are
you with the behavior

00:31:11.027 --> 00:31:13.610
that's going to be breaking with
old libraries and everything?

00:31:13.610 --> 00:31:15.026
And also the problem
that is going

00:31:15.026 --> 00:31:17.490
to be created with
analytics providers,

00:31:17.490 --> 00:31:19.207
because they require a lot of--

00:31:19.207 --> 00:31:20.040
BEN POIESZ: They do.

00:31:20.040 --> 00:31:22.015
AUDIENCE: Dependencies
that we don't know about.

00:31:22.015 --> 00:31:23.210
That's something to
be concerned about.

00:31:23.210 --> 00:31:25.330
BEN POIESZ: Yeah, so
Lint is going to flag it.

00:31:25.330 --> 00:31:27.490
So at least you should
be able to know.

00:31:27.490 --> 00:31:29.200
If you look at Lint
it will let you know.

00:31:29.200 --> 00:31:30.700
AUDIENCE: It'll be
some [INAUDIBLE].

00:31:30.700 --> 00:31:32.050
So change my question, then.

00:31:32.050 --> 00:31:33.540
You talked about
a support library

00:31:33.540 --> 00:31:34.880
that was going with
backwards compatibility.

00:31:34.880 --> 00:31:36.340
What are you throwing in there?

00:31:36.340 --> 00:31:36.690
BEN POIESZ: Huh?

00:31:36.690 --> 00:31:38.060
AUDIENCE: What are
you putting in there?

00:31:38.060 --> 00:31:39.018
BEN POIESZ: What is it?

00:31:39.018 --> 00:31:39.750
AUDIENCE: Yeah.

00:31:39.750 --> 00:31:41.333
BEN POIESZ: It's
essentially if you're

00:31:41.333 --> 00:31:43.577
calling the new code
in your application.

00:31:43.577 --> 00:31:44.910
That's how I'm targeting API 23.

00:31:47.030 --> 00:31:48.530
We want to make
sure that you're not

00:31:48.530 --> 00:31:50.759
going to explode when
you're running on other OSs

00:31:50.759 --> 00:31:52.050
if you happen to run that code.

00:31:52.050 --> 00:31:53.290
AUDIENCE: So the
[? method ?] checks

00:31:53.290 --> 00:31:55.130
are going to be in the
support libraries, right?

00:31:55.130 --> 00:31:57.755
BEN POIESZ: No, there's versions
of them in the support library

00:31:57.755 --> 00:32:01.175
for older OSs, but it's in the
proper SDK, the [? OS-SDK. ?]

00:32:01.175 --> 00:32:03.314
AUDIENCE: OK, thank you.

00:32:03.314 --> 00:32:04.730
AUDIENCE: I saw
that Android M has

00:32:04.730 --> 00:32:06.422
a new auto-update
capability as well.

00:32:06.422 --> 00:32:08.380
Do you know if permissions
will be carried over

00:32:08.380 --> 00:32:10.020
as part of this in addition?

00:32:10.020 --> 00:32:11.560
BEN POIESZ: Auto-update?

00:32:11.560 --> 00:32:13.710
AUDIENCE: So if I were
to uninstall, reinstall,

00:32:13.710 --> 00:32:16.580
I would have all of the previous
data synced up to Google Drive?

00:32:16.580 --> 00:32:17.400
BEN POIESZ: Yeah.

00:32:17.400 --> 00:32:19.040
Permissions is not
a part of that.

00:32:19.040 --> 00:32:20.640
When the application's
uninstalled,

00:32:20.640 --> 00:32:24.807
we will start anew as
if it's a new situation.

00:32:24.807 --> 00:32:25.348
AUDIENCE: OK.

00:32:29.094 --> 00:32:30.010
BEN POIESZ: All right.

00:32:30.010 --> 00:32:32.020
Thank you all

