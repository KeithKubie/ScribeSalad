WEBVTT
Kind: captions
Language: en

00:00:00.210 --> 00:00:02.470
MIKE PROCOPIO: Well,
welcome to Google I/O 2016.

00:00:02.470 --> 00:00:05.410
It is so great to have you
all with us here today.

00:00:05.410 --> 00:00:06.800
My name is Mike Procopio.

00:00:06.800 --> 00:00:10.370
I'm a software engineering
manager on the Google Drive API

00:00:10.370 --> 00:00:11.390
team.

00:00:11.390 --> 00:00:13.306
RANDALL SARAFA: And my
name is Randall Sarafa.

00:00:13.306 --> 00:00:16.000
I'm a product
manager at WhatsApp.

00:00:16.000 --> 00:00:17.900
So what we're here to
talk to you about today

00:00:17.900 --> 00:00:20.160
is a feature we built
into WhatsApp for Android

00:00:20.160 --> 00:00:22.800
which lets you back up
and restore your messages

00:00:22.800 --> 00:00:24.519
from Google Drive.

00:00:24.519 --> 00:00:26.810
And we're here to tell you
a little about how that went

00:00:26.810 --> 00:00:29.018
and how they came together
and some of the challenges

00:00:29.018 --> 00:00:29.910
we had with that.

00:00:29.910 --> 00:00:32.159
MIKE PROCOPIO: OK.

00:00:32.159 --> 00:00:34.600
So kind of a high level overview
of where we're going here

00:00:34.600 --> 00:00:37.230
today, we'll take a look
at messaging in general,

00:00:37.230 --> 00:00:40.790
as well as the space where
mobile devices are starting

00:00:40.790 --> 00:00:43.260
to proliferate significantly,
and usage has really

00:00:43.260 --> 00:00:46.470
hit an inflection point,
combined with Cloud Storage

00:00:46.470 --> 00:00:47.670
and Google Drive in general.

00:00:47.670 --> 00:00:49.510
We'll take a close
look at how this works,

00:00:49.510 --> 00:00:52.200
including some technical
details from both a product

00:00:52.200 --> 00:00:54.030
and engineering standpoint.

00:00:54.030 --> 00:00:56.776
Along the way, we did
face several challenges.

00:00:56.776 --> 00:00:58.150
We'll look at some
of those, what

00:00:58.150 --> 00:01:00.650
they were, both from the product
and engineering standpoints

00:01:00.650 --> 00:01:01.350
as well.

00:01:01.350 --> 00:01:03.250
Taking a close look
at the Drive API,

00:01:03.250 --> 00:01:07.520
and then followed
by a live demo.

00:01:07.520 --> 00:01:10.480
So borrowing from Sundar's
keynote yesterday,

00:01:10.480 --> 00:01:13.060
we truly are in the
moment of mobile.

00:01:13.060 --> 00:01:15.190
Mobile is seeing
massive adoption.

00:01:15.190 --> 00:01:18.270
Across the world, there are
three billion connected users.

00:01:18.270 --> 00:01:21.260
And we are seeing over
50% of search queries

00:01:21.260 --> 00:01:22.520
coming from mobile.

00:01:22.520 --> 00:01:25.270
Some notes from Sundar's--
the CEO of Google--

00:01:25.270 --> 00:01:29.150
Sundar's Founders Letter
from 2016, the mobile phone,

00:01:29.150 --> 00:01:31.390
more and more, is the
remote control of our lives.

00:01:31.390 --> 00:01:33.850
And we're using
these devices in ways

00:01:33.850 --> 00:01:36.270
that we didn't even
think were possible

00:01:36.270 --> 00:01:38.830
as few as a few years ago.

00:01:41.927 --> 00:01:42.760
Just advance for me.

00:01:47.380 --> 00:01:50.120
So also from Sundar,
think about it's not just

00:01:50.120 --> 00:01:51.890
messaging and communications.

00:01:51.890 --> 00:01:53.090
It's content generation.

00:01:53.090 --> 00:01:54.430
It's media generation.

00:01:54.430 --> 00:01:57.070
More and more, we're using
these phones to take pictures.

00:01:57.070 --> 00:01:58.930
There was a tipping
point when cameras

00:01:58.930 --> 00:02:02.210
started to show up on phones
where the barrier to entry

00:02:02.210 --> 00:02:05.290
to actually taking a
photo, or 10 photos,

00:02:05.290 --> 00:02:07.080
is much less than it used to be.

00:02:07.080 --> 00:02:10.289
So take a series of 10 photos.

00:02:10.289 --> 00:02:12.330
Sundar had noted
that, and it's not

00:02:12.330 --> 00:02:14.130
hard to see how we
arrived at this number,

00:02:14.130 --> 00:02:15.963
we could end up with a
trillion photos taken

00:02:15.963 --> 00:02:17.840
across the world this year.

00:02:17.840 --> 00:02:19.780
That seems, when you
start thinking about it,

00:02:19.780 --> 00:02:23.785
that's may be a billion people
taking 1,000 photos a year,

00:02:23.785 --> 00:02:24.910
if I'm doing my math right.

00:02:24.910 --> 00:02:27.182
So that's like two or
three photos a day.

00:02:27.182 --> 00:02:27.890
That's not a lot.

00:02:27.890 --> 00:02:29.434
I take that many
selfies in one day,

00:02:29.434 --> 00:02:31.100
so I'm clearly part
of the problem here.

00:02:34.140 --> 00:02:36.010
There, it's just a little slow.

00:02:36.010 --> 00:02:37.240
RANDALL SARAFA: So when
we think about messaging,

00:02:37.240 --> 00:02:39.448
what we're really thinking
about is connecting people

00:02:39.448 --> 00:02:40.270
around the world.

00:02:40.270 --> 00:02:42.540
And the most fundamental way you
can do that is by letting them

00:02:42.540 --> 00:02:43.270
text each other.

00:02:43.270 --> 00:02:45.400
And we've been doing
that for years and years.

00:02:45.400 --> 00:02:47.370
But the messaging
space has evolved.

00:02:47.370 --> 00:02:49.560
We now let people do
much more than texting.

00:02:49.560 --> 00:02:52.370
We let them send
photos and videos.

00:02:52.370 --> 00:02:55.330
We let them call
each other over VoIP.

00:02:55.330 --> 00:02:58.210
And we let them do this on
a wide variety of platforms,

00:02:58.210 --> 00:02:58.710
right?

00:02:58.710 --> 00:03:00.840
Obviously, with the goal
of connecting people

00:03:00.840 --> 00:03:02.700
around the world,
part of that goal

00:03:02.700 --> 00:03:05.360
means allowing everyone
who has any kind of a phone

00:03:05.360 --> 00:03:08.107
really talk to one another.

00:03:08.107 --> 00:03:10.190
So what does this look
like in the WhatsApp world?

00:03:10.190 --> 00:03:11.814
Well, how many people
here, by the way,

00:03:11.814 --> 00:03:14.190
have ever used WhatsApp
or are a WhatsApp user?

00:03:14.190 --> 00:03:14.850
OK, great.

00:03:14.850 --> 00:03:17.800
So you are a very small
fraction of our total user base.

00:03:17.800 --> 00:03:19.880
We've got over a billion
people across the globe

00:03:19.880 --> 00:03:20.940
using WhatsApp.

00:03:20.940 --> 00:03:25.780
It's about one in seven
people on earth using WhatsApp

00:03:25.780 --> 00:03:26.390
regularly.

00:03:26.390 --> 00:03:28.180
It's a pretty high number.

00:03:28.180 --> 00:03:31.070
We've got about 75% of
those users on Android.

00:03:31.070 --> 00:03:32.506
And the rest of
them are using one

00:03:32.506 --> 00:03:34.130
of our other supported
platforms, which

00:03:34.130 --> 00:03:36.670
include iPhone, Windows
Phone, and some older

00:03:36.670 --> 00:03:40.280
OSes like BlackBerry, or
some older Nokia platforms

00:03:40.280 --> 00:03:43.040
that we developed for.

00:03:43.040 --> 00:03:44.710
To give you an
idea of how engaged

00:03:44.710 --> 00:03:47.310
those billion users are,
they send a lot of messages.

00:03:47.310 --> 00:03:49.864
It's about 42 billion
messages sent per day.

00:03:49.864 --> 00:03:51.780
So really, when we're
thinking about WhatsApp,

00:03:51.780 --> 00:03:53.840
we're thinking about
a product at scale.

00:03:58.540 --> 00:04:00.590
Of course, WhatsApp is
more than just texting.

00:04:00.590 --> 00:04:03.650
It includes sending photos
and videos, voice messages,

00:04:03.650 --> 00:04:06.570
location messages,
contacts, and most recently,

00:04:06.570 --> 00:04:08.500
we let you now send
documents on WhatsApp.

00:04:08.500 --> 00:04:10.460
So you could pick a
document from your phone,

00:04:10.460 --> 00:04:12.376
pick one from Google
Drive, or another source.

00:04:12.376 --> 00:04:13.670
Pretty cool.

00:04:13.670 --> 00:04:16.087
Media actually represents a
pretty significant portion

00:04:16.087 --> 00:04:17.670
of the messages that
get sent per day.

00:04:17.670 --> 00:04:22.220
We've got 1.8 billion photos
sent per day on WhatsApp.

00:04:22.220 --> 00:04:25.230
And we've got 250 million
videos sent per day.

00:04:25.230 --> 00:04:27.010
So really high usage
in terms of media.

00:04:35.204 --> 00:04:36.370
MIKE PROCOPIO: There we are.

00:04:36.370 --> 00:04:37.420
Thanks.

00:04:37.420 --> 00:04:40.220
So complementing client
devices and client applications

00:04:40.220 --> 00:04:42.590
like WhatsApp, we also
have cloud storage.

00:04:42.590 --> 00:04:45.110
So data in the cloud is
all about safely storing

00:04:45.110 --> 00:04:46.490
what's important to you.

00:04:46.490 --> 00:04:49.260
And an important part
of this is the ability

00:04:49.260 --> 00:04:51.840
to access your data
from wherever you're at.

00:04:51.840 --> 00:04:54.110
So increasingly, that
means mobile devices.

00:04:54.110 --> 00:04:56.620
Once things are in the cloud,
sharing and collaboration

00:04:56.620 --> 00:04:59.150
becomes easy and
naturally expressed.

00:04:59.150 --> 00:05:02.050
In particular, sharing and
collaboration around teams.

00:05:02.050 --> 00:05:04.070
And so more and more,
we live in the cloud.

00:05:04.070 --> 00:05:09.770
And more and more, we're doing
things via our mobile devices.

00:05:09.770 --> 00:05:10.290
DoubleClick.

00:05:10.290 --> 00:05:11.400
There we are.

00:05:11.400 --> 00:05:13.780
So Google Drive is a
cloud storage system

00:05:13.780 --> 00:05:16.940
that is focused on both
enterprise and consumer users.

00:05:16.940 --> 00:05:19.140
It's a safe place for
all of your files.

00:05:19.140 --> 00:05:21.335
It can store any type
of file that you have,

00:05:21.335 --> 00:05:23.210
including some things
that we may not usually

00:05:23.210 --> 00:05:24.940
associate as being file-like.

00:05:24.940 --> 00:05:28.470
So yes, photos, media,
documents, spreadsheets, text

00:05:28.470 --> 00:05:29.690
files, CSVs.

00:05:29.690 --> 00:05:34.750
But also things like maps,
and sites, and diagrams.

00:05:34.750 --> 00:05:36.170
Things like that.

00:05:36.170 --> 00:05:38.880
Importantly, you can view it and
increasingly interact with it.

00:05:38.880 --> 00:05:42.140
Not just view, but actually
rich edit from anywhere

00:05:42.140 --> 00:05:44.120
across all sorts
of client devices.

00:05:44.120 --> 00:05:47.050
Sharing with others is
a key part of the value

00:05:47.050 --> 00:05:48.417
that Google Drive delivers.

00:05:48.417 --> 00:05:50.500
And then finally, as we'll
see a little bit later,

00:05:50.500 --> 00:05:52.170
which is important
to our integration,

00:05:52.170 --> 00:05:54.650
there is a large, third
party app ecosystem

00:05:54.650 --> 00:05:58.970
with open and mature APIs.

00:05:58.970 --> 00:05:59.480
Double tap.

00:05:59.480 --> 00:06:01.740
Come on.

00:06:01.740 --> 00:06:03.410
Thanks.

00:06:03.410 --> 00:06:06.080
So our joint mission,
then, is to work together

00:06:06.080 --> 00:06:08.945
to preserve the memories
of a billion users.

00:06:10.796 --> 00:06:13.170
RANDALL SARAFA: So why did we
do this in the first place?

00:06:13.170 --> 00:06:15.900
Well fundamentally, WhatsApp
doesn't store your messages.

00:06:15.900 --> 00:06:18.090
And what I mean by
that is WhatsApp

00:06:18.090 --> 00:06:20.210
doesn't store your
messages on our servers.

00:06:20.210 --> 00:06:22.562
Really, your chat history
lives on your device.

00:06:22.562 --> 00:06:24.020
So all the messages
you're sending,

00:06:24.020 --> 00:06:26.600
the media you're sending,
it's all stored on your device

00:06:26.600 --> 00:06:28.480
and not somewhere else.

00:06:28.480 --> 00:06:30.170
So given that that's
the case, it's

00:06:30.170 --> 00:06:32.260
important that if
you switch devices,

00:06:32.260 --> 00:06:34.385
or you lose your phone,
or you upgrade phones,

00:06:34.385 --> 00:06:36.260
you have the ability to
preserve all the chat

00:06:36.260 --> 00:06:37.960
history that you have.

00:06:37.960 --> 00:06:39.740
So we thought, for
our Android users,

00:06:39.740 --> 00:06:42.350
the best way to do that
would be to use Google Drive.

00:06:42.350 --> 00:06:44.090
And there's two
reasons for that.

00:06:44.090 --> 00:06:46.210
First, turns out
most Android users

00:06:46.210 --> 00:06:49.780
have a Google account already
signed into on their phone.

00:06:49.780 --> 00:06:52.010
So this means that a user
can opt into this feature

00:06:52.010 --> 00:06:54.210
without having to create
a new account of some kind

00:06:54.210 --> 00:06:55.680
or authenticate to
another service.

00:06:55.680 --> 00:06:57.480
So it's really
frictionless in that way.

00:06:57.480 --> 00:07:00.780
So we're really trying to build
a simple mechanism for users.

00:07:00.780 --> 00:07:03.560
Second is Android devices
have really good support

00:07:03.560 --> 00:07:06.370
for the Drive APIs,
which means as a user who

00:07:06.370 --> 00:07:09.070
wants to backup your
stuff to Google Drive,

00:07:09.070 --> 00:07:11.432
you don't need to install
additional software.

00:07:11.432 --> 00:07:13.390
Most of the stuff lives
in Google Play Services

00:07:13.390 --> 00:07:15.802
So it's ready to go.

00:07:15.802 --> 00:07:17.260
As I mentioned
before, we're really

00:07:17.260 --> 00:07:18.740
talking about
integration at scale,

00:07:18.740 --> 00:07:23.140
which Mike is going to talk a
lot about a little bit later.

00:07:23.140 --> 00:07:26.270
Now, in terms of how this
actually works in the product,

00:07:26.270 --> 00:07:28.850
we want to walk you through
some of the challenges we had,

00:07:28.850 --> 00:07:31.130
and also some of the decisions
we made in terms of how

00:07:31.130 --> 00:07:32.790
to design this user experience.

00:07:38.170 --> 00:07:40.330
So our backups are opt-in.

00:07:40.330 --> 00:07:43.220
What this means is that we
need a user to actually turn

00:07:43.220 --> 00:07:44.580
on Google Drive backups.

00:07:44.580 --> 00:07:46.140
And we obviously
want a way to do

00:07:46.140 --> 00:07:48.792
this that is really
obvious to the user, right?

00:07:48.792 --> 00:07:50.500
We want them to know
the feature actually

00:07:50.500 --> 00:07:52.320
exists in the first place.

00:07:52.320 --> 00:07:53.930
So we designed a
full screen activity

00:07:53.930 --> 00:07:57.310
that prompts users to opt
in to Google Drive backups.

00:07:57.310 --> 00:08:00.280
And we present them with this
activity on a time interval.

00:08:00.280 --> 00:08:02.520
It's about once
every few months.

00:08:02.520 --> 00:08:04.840
We ask them kind of upfront
when they're using the app,

00:08:04.840 --> 00:08:06.902
and we back off to
once every few months.

00:08:06.902 --> 00:08:09.110
By the way, the reason we
do a time-based approach as

00:08:09.110 --> 00:08:10.730
opposed to saying,
hey, maybe we'll

00:08:10.730 --> 00:08:12.700
ask a user when
they update the app,

00:08:12.700 --> 00:08:15.590
is because we update
our frequently.

00:08:15.590 --> 00:08:16.670
So that gets annoying.

00:08:16.670 --> 00:08:18.295
So you don't want
this to become noise.

00:08:18.295 --> 00:08:20.970
You want it to be
meaningful to the user.

00:08:20.970 --> 00:08:23.370
First thing we ask them is to
select a backup frequency--

00:08:23.370 --> 00:08:24.752
daily, weekly, or monthly.

00:08:24.752 --> 00:08:27.210
And the reason we actually do
this is while our backups are

00:08:27.210 --> 00:08:29.906
incremental, there's
one part of the backup,

00:08:29.906 --> 00:08:32.030
it's a small part of the
backup, that actually gets

00:08:32.030 --> 00:08:35.270
backed up fresh every single
time a backup is done.

00:08:35.270 --> 00:08:38.059
So by dialing back
the backup frequency,

00:08:38.059 --> 00:08:40.190
choosing a less
frequent backup cycle,

00:08:40.190 --> 00:08:42.690
you can actually save
some data, some bandwidth.

00:08:42.690 --> 00:08:44.800
And importantly, a
lot of WhatsApp users

00:08:44.800 --> 00:08:46.971
are very conscious
of the data usage

00:08:46.971 --> 00:08:48.970
that they're using because
data around the world

00:08:48.970 --> 00:08:50.982
is much more expensive.

00:08:50.982 --> 00:08:52.940
So we're trying to build
controls for our users

00:08:52.940 --> 00:08:55.300
that allow them to
really say how much data

00:08:55.300 --> 00:08:58.274
they want to use and be able
to preserve that if necessary.

00:08:58.274 --> 00:08:59.940
We ask them to connect
a Google account.

00:08:59.940 --> 00:09:02.280
Most Android users have
just one on their phone,

00:09:02.280 --> 00:09:04.462
so we automatically
choose that one.

00:09:04.462 --> 00:09:05.920
When they connect
a Google account,

00:09:05.920 --> 00:09:08.190
you just get presented
with a system level

00:09:08.190 --> 00:09:10.970
prompt asking you to connect
Google Drive to WhatsApp.

00:09:10.970 --> 00:09:12.650
It's a permission prompt.

00:09:12.650 --> 00:09:14.170
And the last thing
we let users do

00:09:14.170 --> 00:09:16.401
is decide whether they want
to backup videos or not.

00:09:16.401 --> 00:09:18.400
The reason we do this is
because videos actually

00:09:18.400 --> 00:09:21.170
represent a pretty large portion
of the overall backup size,

00:09:21.170 --> 00:09:21.980
or they can.

00:09:21.980 --> 00:09:24.890
So on average, between a user
who backups videos and one

00:09:24.890 --> 00:09:26.430
who chooses not
to do it, there's

00:09:26.430 --> 00:09:29.410
about a 300 megabyte
saving on average.

00:09:29.410 --> 00:09:32.110
So you can really, if you don't
have much Google Drive storage,

00:09:32.110 --> 00:09:34.110
or you don't really want
to expend the bandwidth

00:09:34.110 --> 00:09:37.290
to back that up, you can
choose to not include the video

00:09:37.290 --> 00:09:39.430
if you want.

00:09:39.430 --> 00:09:39.930
OK.

00:09:39.930 --> 00:09:41.280
So I opt into backups.

00:09:41.280 --> 00:09:42.614
I got my stuff backed up.

00:09:42.614 --> 00:09:44.530
Now, how do you actually
get that data, right?

00:09:44.530 --> 00:09:46.660
So I switch phones,
or my phone, you know,

00:09:46.660 --> 00:09:48.330
drops in a toilet,
something like that.

00:09:48.330 --> 00:09:49.500
I get a new phone.

00:09:49.500 --> 00:09:51.680
How do you actually get
all your chats back?

00:09:51.680 --> 00:09:54.770
Well, we basically ask you to
do this at registration time.

00:09:54.770 --> 00:09:57.180
You install WhatsApp, tell
us what your phone number is,

00:09:57.180 --> 00:09:59.910
and then we look for a backup.

00:09:59.910 --> 00:10:03.350
When we find a backup and the
user decides to restore it,

00:10:03.350 --> 00:10:05.600
the restore happens
in two stages.

00:10:05.600 --> 00:10:06.945
First, we restore your chats.

00:10:06.945 --> 00:10:08.320
And what I mean
by that is really

00:10:08.320 --> 00:10:11.930
just the chat database, which
is mostly just text messages.

00:10:11.930 --> 00:10:13.750
Doesn't include any media.

00:10:13.750 --> 00:10:16.742
So that's a smaller
portion of the backup.

00:10:16.742 --> 00:10:17.950
And we do this synchronously.

00:10:17.950 --> 00:10:20.620
So we don't let the user into
the app until this finishes.

00:10:20.620 --> 00:10:22.270
There's a reason for that.

00:10:22.270 --> 00:10:24.020
When the user actually
ends up in the App,

00:10:24.020 --> 00:10:26.015
we want them to see all
their chats right away.

00:10:26.015 --> 00:10:27.390
Otherwise, they're
going to think

00:10:27.390 --> 00:10:30.080
something might have gone wrong,
we lost some of their data,

00:10:30.080 --> 00:10:31.540
or something like that.

00:10:31.540 --> 00:10:35.090
So we restore the chat
database synchronously.

00:10:35.090 --> 00:10:36.950
However, with media,
because that represents

00:10:36.950 --> 00:10:39.330
such a large portion of
the overall backup size,

00:10:39.330 --> 00:10:40.710
we do that asynchronously.

00:10:40.710 --> 00:10:41.940
So we let you into the app.

00:10:41.940 --> 00:10:43.510
And if you look at the
bottom screenshot here,

00:10:43.510 --> 00:10:45.551
we basically restore the
media in the background.

00:10:45.551 --> 00:10:49.176
And we kind of tell you that
at the top of your chat list.

00:10:49.176 --> 00:10:50.800
This means the user
doesn't have to sit

00:10:50.800 --> 00:10:54.030
around waiting for a huge
backup to restore, potentially.

00:10:54.030 --> 00:10:55.940
And if they have slow
network, or they're

00:10:55.940 --> 00:10:58.276
doing this over cellular
for some reason,

00:10:58.276 --> 00:10:59.900
that way they're in
the app ready to go

00:10:59.900 --> 00:11:01.108
and their media will restore.

00:11:01.108 --> 00:11:04.370
We actually restore your
most recent media first,

00:11:04.370 --> 00:11:06.160
which makes sense,
because you're

00:11:06.160 --> 00:11:09.080
most likely to see that
in your chat history.

00:11:09.080 --> 00:11:11.620
And we're always monitoring
network conditions.

00:11:11.620 --> 00:11:14.975
So we pause the restore
if you drop off Wi-Fi,

00:11:14.975 --> 00:11:18.510
or if your battery gets
low, or things like that.

00:11:18.510 --> 00:11:20.470
I'll make one comment
about the UI here.

00:11:20.470 --> 00:11:22.100
We actually designed
some animations

00:11:22.100 --> 00:11:23.540
in the restore process.

00:11:23.540 --> 00:11:25.780
And the reason we thought
this was actually important

00:11:25.780 --> 00:11:27.990
was that the user has
an extra indication

00:11:27.990 --> 00:11:29.640
that progress is happening.

00:11:29.640 --> 00:11:32.897
So the dots animate in the top
screenshot, or those two arrows

00:11:32.897 --> 00:11:34.980
animate in the bottom
screenshot, letting the user

00:11:34.980 --> 00:11:36.427
know something's going on.

00:11:36.427 --> 00:11:38.760
When the restore is paused
or something's not happening,

00:11:38.760 --> 00:11:40.176
we actually stop
those animations.

00:11:40.176 --> 00:11:42.590
So just reinforce in
the UI to the user

00:11:42.590 --> 00:11:44.206
what's actually going on.

00:11:44.206 --> 00:11:45.830
And from there, you
get your chats back

00:11:45.830 --> 00:11:46.788
and you're ready to go.

00:11:53.830 --> 00:11:54.580
MIKE PROCOPIO: OK.

00:11:54.580 --> 00:11:57.900
So we've had a pretty clear
look on the product side for how

00:11:57.900 --> 00:12:00.020
this works, both in terms
of backup and restore

00:12:00.020 --> 00:12:02.700
flows, which are the two main
flows in this integration.

00:12:02.700 --> 00:12:04.917
Let's back up a little
bit from a-- back up--

00:12:04.917 --> 00:12:06.500
from a higher level
view and check out

00:12:06.500 --> 00:12:10.060
the architectural overview for
how the overall system works.

00:12:13.820 --> 00:12:15.590
So like all good
architecture diagrams,

00:12:15.590 --> 00:12:18.200
first off, these colors
I spent a lot of time on.

00:12:18.200 --> 00:12:20.009
So I hope that they work.

00:12:20.009 --> 00:12:22.550
All good architecture diagrams
start with the storage server.

00:12:22.550 --> 00:12:24.490
Storage services on the
bottom, and kind of the clients

00:12:24.490 --> 00:12:24.989
at the top.

00:12:24.989 --> 00:12:26.700
And that's what we have here.

00:12:26.700 --> 00:12:29.660
So notice the Drive clients
and the WhatsApp clients

00:12:29.660 --> 00:12:30.720
on the top.

00:12:30.720 --> 00:12:34.460
The very bottom, you have
both WhatsApp and Google Drive

00:12:34.460 --> 00:12:36.121
backend server technologies.

00:12:36.121 --> 00:12:38.120
So on Drive side, and
we'll see this a few times

00:12:38.120 --> 00:12:40.270
in this integration,
there's two key services

00:12:40.270 --> 00:12:43.500
involved in managing files.

00:12:43.500 --> 00:12:46.860
There's the service that
handles binary file content, so

00:12:46.860 --> 00:12:48.310
the actual content of the file.

00:12:48.310 --> 00:12:49.890
And then all of
the metadata, which

00:12:49.890 --> 00:12:52.190
is stored separately and
optimized differently,

00:12:52.190 --> 00:12:53.940
because it's a different
kind of use case.

00:12:53.940 --> 00:12:56.120
So things like
title and MIME type.

00:12:56.120 --> 00:12:57.870
Of course, there's a
business logic on top

00:12:57.870 --> 00:12:59.700
of that, and a
good caching layer.

00:12:59.700 --> 00:13:01.535
Probably many caching layers.

00:13:01.535 --> 00:13:03.660
The solution to all known
computer science problems

00:13:03.660 --> 00:13:05.510
and quite a few bugs, actually.

00:13:05.510 --> 00:13:07.580
Causing quite a few bugs.

00:13:07.580 --> 00:13:09.740
One of the key things
about this slide that

00:13:09.740 --> 00:13:13.350
influences our integration
is this Unified First-Party

00:13:13.350 --> 00:13:15.020
and Third-Party Drive API.

00:13:15.020 --> 00:13:16.417
That's the section
in the middle.

00:13:16.417 --> 00:13:18.500
And that's the team that
I'm fortunate to work on.

00:13:18.500 --> 00:13:20.630
And what this is, is the
programmatic entry point

00:13:20.630 --> 00:13:22.890
into Drive, traditional API.

00:13:22.890 --> 00:13:26.830
One of the key takeaways of this
is that the same set of APIs,

00:13:26.830 --> 00:13:29.610
the exact same endpoints
and the exact same server

00:13:29.610 --> 00:13:32.250
infrastructure, serves
both first-party Drive

00:13:32.250 --> 00:13:35.430
clients, like Drive on the web,
Mac, PC, Android, iOS, Chrome

00:13:35.430 --> 00:13:39.740
OS, and the entire third-party
ecosystem, including WhatsApp.

00:13:39.740 --> 00:13:41.860
So what this means
is there's anything

00:13:41.860 --> 00:13:44.394
you can do with a
first party app,

00:13:44.394 --> 00:13:45.810
you can do with a
third party app,

00:13:45.810 --> 00:13:48.720
minus a few specific
exceptions around security.

00:13:48.720 --> 00:13:51.290
And so according to the
diagram, WhatsApp client

00:13:51.290 --> 00:13:53.580
has their lightweight
wrapper around Drive APIs.

00:13:53.580 --> 00:13:56.730
They're calling the exact same
set of endpoints that we do.

00:13:56.730 --> 00:13:58.460
So when the user
ops into backup,

00:13:58.460 --> 00:14:00.690
files will become
uploaded via the entry

00:14:00.690 --> 00:14:03.290
points in the Drive API,
go through several layers

00:14:03.290 --> 00:14:06.610
of caching, and then finally
end up in our storage servers.

00:14:06.610 --> 00:14:09.250
Restore is the similar
path on the way back out.

00:14:12.640 --> 00:14:15.430
Let's take a look specifically
at what a backup flow looks

00:14:15.430 --> 00:14:18.500
like, because this is a
pretty brilliant engineering

00:14:18.500 --> 00:14:22.210
piece on behalf of the WhatsApp
product and engineering team.

00:14:22.210 --> 00:14:24.830
So at the end of the day,
we're making API calls

00:14:24.830 --> 00:14:26.319
against the Drive API.

00:14:26.319 --> 00:14:28.360
That's the methods that
you see here on the left.

00:14:28.360 --> 00:14:31.260
Traditional create,
read, update, delete,

00:14:31.260 --> 00:14:33.780
CRUD, RESTful API
sorts of methods.

00:14:33.780 --> 00:14:36.130
These should probably--
these may look familiar.

00:14:36.130 --> 00:14:37.990
So first, we're going
to look for backups.

00:14:37.990 --> 00:14:39.410
That's what this list is about.

00:14:39.410 --> 00:14:40.990
We're actually
querying by title.

00:14:40.990 --> 00:14:43.030
We're looking for both
the main folder that

00:14:43.030 --> 00:14:46.640
indicates a backup is present,
as well as the media folder.

00:14:46.640 --> 00:14:49.210
Every backup has
a file map which

00:14:49.210 --> 00:14:55.330
contains a list of the IDs of
the files stored in Drive that

00:14:55.330 --> 00:14:58.211
match the media on the device.

00:14:58.211 --> 00:14:59.710
So we're basically
looking for that.

00:14:59.710 --> 00:15:01.500
Once we find it, we read it in.

00:15:01.500 --> 00:15:03.600
And then we begin the backup.

00:15:03.600 --> 00:15:06.599
And what this means is doing
a differential comparison

00:15:06.599 --> 00:15:08.140
between what's on
the device and what

00:15:08.140 --> 00:15:10.300
was on the existing file map.

00:15:10.300 --> 00:15:11.932
So it's basically
a diff, because one

00:15:11.932 --> 00:15:13.390
of the important
things is we don't

00:15:13.390 --> 00:15:15.389
want to re-upload things
we've already uploaded.

00:15:15.389 --> 00:15:17.970
Bandwidth conservation is
critical for this use case.

00:15:17.970 --> 00:15:20.104
Finally, so we'll start
uploading media items.

00:15:20.104 --> 00:15:21.520
We'll upload the
message database.

00:15:21.520 --> 00:15:23.960
And we'll upload
the new file map.

00:15:23.960 --> 00:15:26.200
And then something
very important happens.

00:15:26.200 --> 00:15:27.610
This fourth line
from the bottom,

00:15:27.610 --> 00:15:31.680
this properties.Insert call,
up to this point, the network

00:15:31.680 --> 00:15:34.630
connection could fail,
the phone could disappear,

00:15:34.630 --> 00:15:36.700
and the user's backup
would still be intact.

00:15:36.700 --> 00:15:40.260
This is a really sound, defense
in-depth, robust engineering

00:15:40.260 --> 00:15:41.720
on behalf of the
WhatsApp client.

00:15:41.720 --> 00:15:44.110
Because it means that
only when we finally

00:15:44.110 --> 00:15:46.230
make this switch to
the new file map,

00:15:46.230 --> 00:15:50.390
updating a pointer basically,
is the new backup in place.

00:15:50.390 --> 00:15:53.220
Finally, we'll do some cleanup
and deleting the old files.

00:15:53.220 --> 00:15:55.715
Any items that are not on
the device that were in Drive

00:15:55.715 --> 00:15:57.070
are also cleaned up.

00:15:59.900 --> 00:16:01.442
Restore flow is
comparatively simple.

00:16:01.442 --> 00:16:03.816
[INAUDIBLE] reads tend to be
a little easier than writes.

00:16:03.816 --> 00:16:04.790
We look for a backup.

00:16:04.790 --> 00:16:06.748
If a backup is present,
we can prompt the user,

00:16:06.748 --> 00:16:08.350
as we'll see in our demo.

00:16:08.350 --> 00:16:10.750
We'll get the contents
of the file map

00:16:10.750 --> 00:16:12.350
to actually find the IDs.

00:16:12.350 --> 00:16:16.250
And then we'll begin background
restoration of the user's media

00:16:16.250 --> 00:16:17.000
in the background.

00:16:17.000 --> 00:16:19.320
And then at that point,
the user can begin

00:16:19.320 --> 00:16:23.080
using WhatsApp right away.

00:16:23.080 --> 00:16:24.420
So quick technical details.

00:16:24.420 --> 00:16:25.320
I have a slide here.

00:16:25.320 --> 00:16:26.670
Randall has one as well.

00:16:26.670 --> 00:16:29.840
As far as HTTP Libraries,
we use HttpURLConnection

00:16:29.840 --> 00:16:31.790
on most modern devices.

00:16:31.790 --> 00:16:35.840
This integration, Drive backup
is supported fairly-- on I

00:16:35.840 --> 00:16:38.280
think Gingerbread.

00:16:38.280 --> 00:16:42.740
But for older devices, we will
use the Apache http library.

00:16:42.740 --> 00:16:44.840
Authentication is typically
a very tricky area,

00:16:44.840 --> 00:16:46.490
but on Android,
fundamentally, what it

00:16:46.490 --> 00:16:48.430
comes down to is
using Oauth2, where

00:16:48.430 --> 00:16:50.790
you can get a token,
which is available

00:16:50.790 --> 00:16:52.414
built in Android APIs.

00:16:52.414 --> 00:16:54.830
And then finally, you have to
pass that token in a RESTful

00:16:54.830 --> 00:16:57.290
API call as part of a header.

00:16:57.290 --> 00:16:59.650
And then finally, rate
limiting is important,

00:16:59.650 --> 00:17:02.300
both in terms of
client and server.

00:17:02.300 --> 00:17:04.819
Things can fail on the
server, transient errors,

00:17:04.819 --> 00:17:05.780
that kind of a thing.

00:17:05.780 --> 00:17:10.290
So the client has robust
retry with exponential backoff

00:17:10.290 --> 00:17:11.663
implemented.

00:17:11.663 --> 00:17:13.579
RANDALL SARAFA: A few
other technical details.

00:17:13.579 --> 00:17:17.490
So we actually use the HTTP API
for Google Drive, rather than

00:17:17.490 --> 00:17:19.650
the Drive Java SDK.

00:17:19.650 --> 00:17:21.690
The reason we do this is
the SDK is kind of big

00:17:21.690 --> 00:17:24.970
and it was pushing us up
against our 64K method limit,

00:17:24.970 --> 00:17:26.555
so we decided to
go with HTTP API.

00:17:26.555 --> 00:17:28.430
It's also a little bit
more flexible in terms

00:17:28.430 --> 00:17:31.762
of how we could design some of
the calls that we were making.

00:17:31.762 --> 00:17:33.470
I also want to mention
the backup window.

00:17:33.470 --> 00:17:35.370
When do we actually back up?

00:17:35.370 --> 00:17:39.390
And we do this to optimize--
we choose a backup window that

00:17:39.390 --> 00:17:42.490
optimizes for whether the
person's phone is going to be

00:17:42.490 --> 00:17:44.220
charged and connected to Wi-Fi.

00:17:44.220 --> 00:17:46.820
So we think, usually, that
this happens at night.

00:17:46.820 --> 00:17:47.505
Right?

00:17:47.505 --> 00:17:48.380
When you're sleeping.

00:17:48.380 --> 00:17:49.800
So you charge your
phone at night.

00:17:49.800 --> 00:17:51.591
If you're at home, you
probably have Wi-Fi.

00:17:51.591 --> 00:17:53.920
So we kind of optimized
for that condition.

00:17:53.920 --> 00:17:56.769
So we basically say-- we
pick a four-hour window.

00:17:56.769 --> 00:17:59.310
I think it's like 2:00 and 6:00
AM, between 2:00 and 6:00 AM.

00:17:59.310 --> 00:18:01.140
And we basically,
for a given user,

00:18:01.140 --> 00:18:03.250
randomize when they'll back up.

00:18:03.250 --> 00:18:06.064
The reason we choose a random
time for the user backup

00:18:06.064 --> 00:18:08.230
is so that we don't really
bring down Google servers

00:18:08.230 --> 00:18:11.960
by having a bunch of people
have their phones wake up

00:18:11.960 --> 00:18:13.770
at 2:00 AM, take a backup off.

00:18:13.770 --> 00:18:15.090
This would be pretty bad.

00:18:15.090 --> 00:18:17.080
So we kind of choose
a random window.

00:18:17.080 --> 00:18:20.192
That helps us really
get where we want.

00:18:20.192 --> 00:18:22.650
And of course, we're always
looking for network conditions,

00:18:22.650 --> 00:18:24.090
battery, et cetera.

00:18:24.090 --> 00:18:27.090
So we won't kick a backup off
if your phone's battery is low.

00:18:27.090 --> 00:18:28.680
We won't kick one
off if you're not

00:18:28.680 --> 00:18:30.670
in the right network condition.

00:18:30.670 --> 00:18:32.700
But once you are in
those proper conditions,

00:18:32.700 --> 00:18:34.470
we'll just start the backup.

00:18:34.470 --> 00:18:37.320
So if I am asleep
at night, my phone

00:18:37.320 --> 00:18:39.372
is dead, by the time I
get to work in the morning

00:18:39.372 --> 00:18:40.830
and plug my phone
into the charger,

00:18:40.830 --> 00:18:43.550
we'll just kick the backup
off for that day at that time.

00:18:43.550 --> 00:18:45.790
So we're kind of flexible,
actually, in that way.

00:18:48.770 --> 00:18:50.150
So where are we at today?

00:18:50.150 --> 00:18:53.260
So we fully rolled the feature
out in January of this year.

00:18:53.260 --> 00:18:55.769
Took several months to actually
roll it out completely.

00:18:55.769 --> 00:18:57.810
And we're going to talk
about the rollout process

00:18:57.810 --> 00:18:58.641
a little bit later.

00:18:58.641 --> 00:19:00.890
As I mentioned before, we've
got over a billion people

00:19:00.890 --> 00:19:01.530
on WhatsApp.

00:19:01.530 --> 00:19:04.120
75% of them are in Android.

00:19:04.120 --> 00:19:07.850
And of our Android
users, we have about 40%

00:19:07.850 --> 00:19:10.080
of them opted into Google
Drive backups today.

00:19:10.080 --> 00:19:11.100
So pretty good numbers.

00:19:11.100 --> 00:19:13.520
That will likely continue
to increase over time

00:19:13.520 --> 00:19:15.300
as people get prompted,
as I mentioned,

00:19:15.300 --> 00:19:16.300
once every few months.

00:19:23.177 --> 00:19:24.010
MIKE PROCOPIO: Good.

00:19:24.010 --> 00:19:25.840
Well, I know we
make it look easy,

00:19:25.840 --> 00:19:28.110
but the truth is there
were a lot of challenges

00:19:28.110 --> 00:19:29.281
along the way.

00:19:29.281 --> 00:19:31.030
And we're going to
take a very transparent

00:19:31.030 --> 00:19:33.960
behind-the-scenes look at
what some of these were.

00:19:37.040 --> 00:19:40.220
So first and foremost, with
an integration like WhatsApp,

00:19:40.220 --> 00:19:41.990
we think scale.

00:19:41.990 --> 00:19:44.740
How can we accommodate
an integration this size?

00:19:44.740 --> 00:19:48.090
With a billion users
with daily backups,

00:19:48.090 --> 00:19:50.310
backing up new content
as it's generated.

00:19:50.310 --> 00:19:53.510
How do we absorb the
initial backup data

00:19:53.510 --> 00:19:56.550
that's on the user device
when they're opted in?

00:19:56.550 --> 00:19:59.290
Because that's a
large initial upload.

00:19:59.290 --> 00:20:01.990
And then once that's finished,
it's more of a natural thing.

00:20:01.990 --> 00:20:04.060
Multiply by a billion
users and things

00:20:04.060 --> 00:20:06.470
start to-- times an
opt-in rate, and things

00:20:06.470 --> 00:20:08.102
start to get very
interesting quickly.

00:20:08.102 --> 00:20:10.060
Large scale can mean a
lot of different things.

00:20:10.060 --> 00:20:12.600
Users-- and we're talking a
billion times the opt-in rate,

00:20:12.600 --> 00:20:15.000
that's measured in hundreds
of millions of users.

00:20:15.000 --> 00:20:17.690
Drive API queries
per second-- if you

00:20:17.690 --> 00:20:19.940
have that many users
backing up at night,

00:20:19.940 --> 00:20:23.140
you're talking queries into
the hundreds of thousands

00:20:23.140 --> 00:20:28.912
of uploads per second, which is
pretty intense for any service.

00:20:28.912 --> 00:20:31.420
That takes a lot.

00:20:31.420 --> 00:20:34.100
It requires a lot of instances
of Drive server backends.

00:20:34.100 --> 00:20:36.750
At the end of the day,
Drive, and the API, and all

00:20:36.750 --> 00:20:38.850
the backend, it is a server.

00:20:38.850 --> 00:20:41.670
We're listening for
requests on a socket.

00:20:41.670 --> 00:20:45.660
And any given JDM, any
given task or instance

00:20:45.660 --> 00:20:46.866
can only handle so many.

00:20:46.866 --> 00:20:47.740
And so what do we do?

00:20:47.740 --> 00:20:49.850
We just start spinning up
lots of these instances

00:20:49.850 --> 00:20:52.410
to handle all the
requests as they come in.

00:20:52.410 --> 00:20:55.990
And load balancing kind
of comes into play there.

00:20:55.990 --> 00:20:58.210
Also, not just in terms
of the server production

00:20:58.210 --> 00:21:01.020
engineering, but the
storage capacity matters.

00:21:01.020 --> 00:21:02.830
Both in terms of
size of the items

00:21:02.830 --> 00:21:04.496
stored, which matters
when we're writing

00:21:04.496 --> 00:21:07.240
file content to
the binary service,

00:21:07.240 --> 00:21:09.720
as well as raw number of items.

00:21:09.720 --> 00:21:11.430
So for all of
these reasons, this

00:21:11.430 --> 00:21:13.840
is a super large
scale integration

00:21:13.840 --> 00:21:18.104
that takes a lot of
very careful planning.

00:21:18.104 --> 00:21:20.270
In particular, when we talk
about capacity planning,

00:21:20.270 --> 00:21:21.645
we're talking
about provisioning.

00:21:21.645 --> 00:21:24.420
And the conversation went
a little bit like this.

00:21:24.420 --> 00:21:27.060
Somebody heard that we were
working on a WhatsApp thing,

00:21:27.060 --> 00:21:27.870
as they called it.

00:21:27.870 --> 00:21:29.244
And they asked me
how big it was.

00:21:29.244 --> 00:21:30.210
I was like, pretty big.

00:21:30.210 --> 00:21:31.760
And so at Google,
we think pretty big.

00:21:31.760 --> 00:21:34.051
They're like oh, it's like
a Gmail, we can handle that.

00:21:34.051 --> 00:21:36.700
It's like, no, it
might be bigger.

00:21:36.700 --> 00:21:39.170
And at that point, people
start to get a little nervous

00:21:39.170 --> 00:21:42.270
because if you don't
properly provision,

00:21:42.270 --> 00:21:44.550
you're going to take
down-- truly take down

00:21:44.550 --> 00:21:46.970
and overwhelm active servers
that are trying to fill

00:21:46.970 --> 00:21:48.360
requests from other people.

00:21:48.360 --> 00:21:51.120
So provisioning and estimation
is critical, especially

00:21:51.120 --> 00:21:53.030
for an integration of this size.

00:21:53.030 --> 00:21:54.280
So we need to estimate it.

00:21:54.280 --> 00:21:56.650
Well, how can we do that?

00:21:56.650 --> 00:21:59.330
Two general approaches, just to
kind of give a quick overview

00:21:59.330 --> 00:22:00.980
of how we do this in practice.

00:22:00.980 --> 00:22:02.077
You can model it.

00:22:02.077 --> 00:22:03.660
You can model it
from first principle.

00:22:03.660 --> 00:22:06.040
So you have a theoretical
way to do estimates.

00:22:06.040 --> 00:22:09.300
Total number of users
times opt-in rate, number

00:22:09.300 --> 00:22:11.100
of files that every
person has, number of

00:22:11.100 --> 00:22:14.960
files that each user generates
over time on a daily basis.

00:22:14.960 --> 00:22:17.450
Different types require
different resources.

00:22:17.450 --> 00:22:19.710
For example, videos
get transcoded

00:22:19.710 --> 00:22:21.330
into multiple
formats for playback

00:22:21.330 --> 00:22:22.720
on different platforms.

00:22:22.720 --> 00:22:24.640
So they'll impact us
in different ways.

00:22:24.640 --> 00:22:25.800
So that's your model.

00:22:25.800 --> 00:22:30.520
And like all good models,
there's some saying about this.

00:22:30.520 --> 00:22:33.150
They're useful to
varying degree.

00:22:33.150 --> 00:22:35.690
What we find to be a little
more reliable, in this case,

00:22:35.690 --> 00:22:37.070
is empirical observation.

00:22:37.070 --> 00:22:39.590
So we do a trial rollout
with WhatsApp's beta users.

00:22:39.590 --> 00:22:41.210
They have an excellent
beta program.

00:22:41.210 --> 00:22:42.410
And then we say,
that's a portion

00:22:42.410 --> 00:22:43.500
of the overall user base.

00:22:43.500 --> 00:22:45.820
Let's multiply it by
that scalar factor.

00:22:45.820 --> 00:22:47.462
In our case, these
two roughly agreed,

00:22:47.462 --> 00:22:48.920
and so that gave
us good confidence

00:22:48.920 --> 00:22:52.990
that these are the resources
that we need to provision.

00:22:55.937 --> 00:22:57.770
RANDALL SARAFA: So want
to talk a little bit

00:22:57.770 --> 00:22:58.853
about bandwidth reduction.

00:22:58.853 --> 00:23:01.480
As I mentioned, WhatsApp
users-- we have users

00:23:01.480 --> 00:23:02.610
all around the world.

00:23:02.610 --> 00:23:05.020
And so we're really
interested in making sure

00:23:05.020 --> 00:23:08.180
that we're using only the amount
of data that we need to use.

00:23:08.180 --> 00:23:11.190
Making sure that's efficient
and trying to speed things up.

00:23:11.190 --> 00:23:13.740
Trying to make backups
quick, restores quick.

00:23:13.740 --> 00:23:16.460
So one of the primary
ways we do this is backups

00:23:16.460 --> 00:23:18.380
are incremental,
for the most part.

00:23:18.380 --> 00:23:21.281
So this means that if I
backed up a photo one day,

00:23:21.281 --> 00:23:23.780
I don't need to go and back
that up the next time I go ahead

00:23:23.780 --> 00:23:25.370
and kick off the backup.

00:23:25.370 --> 00:23:28.050
Makes sense.

00:23:28.050 --> 00:23:29.720
One of the other
ways we do this is we

00:23:29.720 --> 00:23:32.550
actually have byte level resumes
for uploads and downloads

00:23:32.550 --> 00:23:33.840
of every file.

00:23:33.840 --> 00:23:36.100
So if I'm uploading a photo
and the connection drops,

00:23:36.100 --> 00:23:37.760
and for some reason
I don't finish it,

00:23:37.760 --> 00:23:41.060
I can actually just resume at
the byte level of that upload.

00:23:41.060 --> 00:23:43.065
Really efficient to do that.

00:23:43.065 --> 00:23:45.490
So this especially comes in
handy with larger media files.

00:23:45.490 --> 00:23:48.260
If you think about a video
that might be 16 megabytes,

00:23:48.260 --> 00:23:51.680
this type of thing
actually comes in handy.

00:23:51.680 --> 00:23:53.550
We also optimize a
lot of our API calls.

00:23:53.550 --> 00:23:56.490
We do batch deletes
to remove files.

00:23:56.490 --> 00:23:58.520
So a user goes and
deletes a bunch

00:23:58.520 --> 00:24:00.362
of photos from a WhatsApp chat.

00:24:00.362 --> 00:24:01.820
The next day when
we do the backup,

00:24:01.820 --> 00:24:03.230
we're going to need to
delete those files out

00:24:03.230 --> 00:24:03.896
of Google Drive.

00:24:03.896 --> 00:24:06.350
So we batch those up and do it.

00:24:06.350 --> 00:24:08.590
And when we're fetching
files at the time of restore,

00:24:08.590 --> 00:24:12.140
we actually fetch the metadata
for those files simultaneously.

00:24:12.140 --> 00:24:14.390
So we don't have to make
sequential API calls in order

00:24:14.390 --> 00:24:16.014
to actually do that.

00:24:16.014 --> 00:24:17.930
The last thing I'll say
is when we're actually

00:24:17.930 --> 00:24:20.800
fetching the metadata for files,
we only look at the fields

00:24:20.800 --> 00:24:22.470
that we really need.

00:24:22.470 --> 00:24:26.440
There are, I think,
dozens and dozens of them.

00:24:26.440 --> 00:24:28.670
And we actually only
look at about a handful.

00:24:28.670 --> 00:24:30.680
So we're actually optimizing
how we're actually

00:24:30.680 --> 00:24:34.210
reading the metadata so that
we can, again, optimize the API

00:24:34.210 --> 00:24:35.090
call for efficiency.

00:24:39.009 --> 00:24:40.050
MIKE PROCOPIO: All right.

00:24:40.050 --> 00:24:43.340
Another challenge is it has
to be fast and it has to work.

00:24:43.340 --> 00:24:45.310
We call that performance
and reliability.

00:24:45.310 --> 00:24:48.330
We have a saying, fast
is our favorite feature.

00:24:48.330 --> 00:24:49.240
Speed matters.

00:24:49.240 --> 00:24:50.510
We are a service, right?

00:24:50.510 --> 00:24:52.820
We are designed to
fulfill requests

00:24:52.820 --> 00:24:57.080
from all sorts of applications,
often where a user is waiting.

00:24:57.080 --> 00:24:59.155
Speed actually counts.

00:24:59.155 --> 00:25:00.780
For backup it's a
little bit different.

00:25:00.780 --> 00:25:01.840
It's attended.

00:25:01.840 --> 00:25:05.030
So typically between the
hours of 2:00 and 6:00

00:25:05.030 --> 00:25:08.810
AM in a backup window,
sequential upload is OK.

00:25:08.810 --> 00:25:10.780
Speed is not as critical,
but at the same time,

00:25:10.780 --> 00:25:13.390
we do want to be fast.

00:25:13.390 --> 00:25:16.960
While if we're slow, the device
is still on, we're using Wi-Fi,

00:25:16.960 --> 00:25:18.130
we're using connectivity.

00:25:18.130 --> 00:25:19.660
That translates to battery.

00:25:19.660 --> 00:25:22.270
So we want to be as lean as
possible, even on the server,

00:25:22.270 --> 00:25:24.110
even for an unattended use case.

00:25:24.110 --> 00:25:25.270
Restore is attended.

00:25:25.270 --> 00:25:26.570
The user is waiting.

00:25:26.570 --> 00:25:29.487
As we've seen in the demo,
we're restoring our items,

00:25:29.487 --> 00:25:30.570
they're in the background.

00:25:30.570 --> 00:25:32.986
Maybe the user is waiting for
that content to be restored.

00:25:32.986 --> 00:25:34.470
So it's important to be fast.

00:25:34.470 --> 00:25:36.990
One way we can get around this
is to parallelize downloads.

00:25:36.990 --> 00:25:40.890
It turns out that pulling
bytes from concurrent streams

00:25:40.890 --> 00:25:44.290
works pretty well, scales well,
and doesn't chew up any more

00:25:44.290 --> 00:25:46.380
CPU than you would
expect from linear.

00:25:46.380 --> 00:25:50.870
And you get the expected, almost
theoretically optimal, speed

00:25:50.870 --> 00:25:54.900
up in terms of user
perceived latency.

00:25:54.900 --> 00:25:55.696
So fast is great.

00:25:55.696 --> 00:25:57.570
But if it doesn't work
at all, then basically

00:25:57.570 --> 00:25:59.860
it took an infinite
amount of time.

00:25:59.860 --> 00:26:01.610
So we have to actually
answer the request.

00:26:01.610 --> 00:26:03.160
Reliability is important.

00:26:03.160 --> 00:26:04.420
This is hard for backup.

00:26:04.420 --> 00:26:06.120
This is hard for writes.

00:26:06.120 --> 00:26:07.990
Because you're writing
to multiple systems.

00:26:07.990 --> 00:26:10.390
You're dealing with 4
or 5 megabyte files.

00:26:10.390 --> 00:26:11.400
You're buffering things.

00:26:11.400 --> 00:26:12.520
You're chunking.

00:26:12.520 --> 00:26:14.442
You're opening up
upload sessions.

00:26:14.442 --> 00:26:15.400
You're finalizing them.

00:26:15.400 --> 00:26:16.570
You're writing the metadata.

00:26:16.570 --> 00:26:19.890
Once that's done, you're
doing post-processing.

00:26:19.890 --> 00:26:21.680
We have to do this
super reliably.

00:26:21.680 --> 00:26:22.897
What does reliable mean?

00:26:22.897 --> 00:26:24.480
Well, I mean, that's
a varying degree.

00:26:24.480 --> 00:26:27.830
But in general, if you are
talking about, for example,

00:26:27.830 --> 00:26:30.940
only one in 100,000, or
one in a million requests

00:26:30.940 --> 00:26:33.960
failing in that kind of
range, that's pretty good.

00:26:33.960 --> 00:26:36.230
Because for the
requests that do fail,

00:26:36.230 --> 00:26:39.300
a simple retry will
likely clear it up

00:26:39.300 --> 00:26:42.500
and users will
generally have no idea.

00:26:42.500 --> 00:26:45.565
So four [INAUDIBLE] for
example, is a reasonable target,

00:26:45.565 --> 00:26:46.940
and it's quite a
feat when you're

00:26:46.940 --> 00:26:49.520
talking about writing
data at that scale.

00:26:52.265 --> 00:26:53.890
RANDALL SARAFA: So
despite all our best

00:26:53.890 --> 00:26:56.630
efforts for reliability,
things actually do go wrong.

00:26:56.630 --> 00:26:59.480
And this is actually--
handling errors is actually

00:26:59.480 --> 00:27:03.210
both an engineering challenge
as well as a user experience

00:27:03.210 --> 00:27:04.250
challenge.

00:27:04.250 --> 00:27:06.051
Here's why.

00:27:06.051 --> 00:27:07.550
When something goes
wrong, you don't

00:27:07.550 --> 00:27:10.200
want to constantly tell the
user that something is wrong.

00:27:10.200 --> 00:27:12.580
Otherwise they start to think
your service is reliable.

00:27:12.580 --> 00:27:14.320
This is especially
true for things

00:27:14.320 --> 00:27:18.880
that happen where we can
recover gracefully from them.

00:27:18.880 --> 00:27:21.190
So I'll give you an example.

00:27:21.190 --> 00:27:24.219
Let's say the user's phone
isn't on in the backup window.

00:27:24.219 --> 00:27:25.510
So their phone is off at night.

00:27:25.510 --> 00:27:28.930
We realize we can't perform
a backup at 2:00 AM.

00:27:28.930 --> 00:27:30.950
We'll just wait and defer
the backup until later

00:27:30.950 --> 00:27:33.380
in the day when the
proper conditions are met.

00:27:33.380 --> 00:27:35.620
Same is true for network.

00:27:35.620 --> 00:27:40.280
Sometimes we get miscellaneous
server errors, like error 500,

00:27:40.280 --> 00:27:42.530
that we don't really know
exactly what's going on.

00:27:42.530 --> 00:27:43.530
So we just kind of wait.

00:27:43.530 --> 00:27:45.300
We try the backup again.

00:27:45.300 --> 00:27:46.630
If it works, it works.

00:27:46.630 --> 00:27:49.230
If it doesn't, we're still
kind of silent about it.

00:27:49.230 --> 00:27:51.950
And I'll tell you
when we're not.

00:27:51.950 --> 00:27:54.440
So we have a class of
errors where it actually--

00:27:54.440 --> 00:27:57.220
so that's a class of errors that
we can recover silently from,

00:27:57.220 --> 00:27:59.350
but we've also got
this class of errors

00:27:59.350 --> 00:28:02.440
that require user action
in order to recover from.

00:28:02.440 --> 00:28:04.620
So great example of
this is authentication.

00:28:04.620 --> 00:28:06.970
Let's say you go and change
your Google password.

00:28:06.970 --> 00:28:09.069
You forget to update it
on your Android device.

00:28:09.069 --> 00:28:10.610
Well at this point,
we can't actually

00:28:10.610 --> 00:28:14.130
authenticate into Google
Drive in order to back up.

00:28:14.130 --> 00:28:16.750
So we actually tell the user
immediately for that type

00:28:16.750 --> 00:28:18.330
of an error to go
resolve this issue,

00:28:18.330 --> 00:28:20.455
because we know that no
matter how many times we're

00:28:20.455 --> 00:28:22.000
going to try this
backup, it's never

00:28:22.000 --> 00:28:24.330
going to work unless the
user does something about it.

00:28:27.640 --> 00:28:30.020
Another type of error that
happens in this category

00:28:30.020 --> 00:28:31.547
is storage issues.

00:28:31.547 --> 00:28:33.380
Let's say you run out
of Google Drive quota,

00:28:33.380 --> 00:28:34.860
or your phone runs
out of storage.

00:28:34.860 --> 00:28:35.776
Those types of things.

00:28:35.776 --> 00:28:37.590
Again, we tell the
user explicitly, please

00:28:37.590 --> 00:28:39.020
go fix this thing.

00:28:39.020 --> 00:28:42.760
So for the errors that we think
we can recover gracefully from,

00:28:42.760 --> 00:28:45.580
what we do is we keep trying
and we don't tell the user

00:28:45.580 --> 00:28:49.730
this backup hasn't
occurred for several days.

00:28:49.730 --> 00:28:51.570
So say I have daily backup set.

00:28:51.570 --> 00:28:53.520
One day the backup doesn't work.

00:28:53.520 --> 00:28:54.560
We just kind of wait.

00:28:54.560 --> 00:28:55.770
We try it the next day.

00:28:55.770 --> 00:28:57.130
If it works, it works.

00:28:57.130 --> 00:28:58.470
Great.

00:28:58.470 --> 00:29:01.090
If by, I think, like the fourth
or fifth day, at that point,

00:29:01.090 --> 00:29:04.120
we'll tell the user something
maybe is not going on.

00:29:04.120 --> 00:29:08.140
But really, we're trying
to just do this gracefully.

00:29:08.140 --> 00:29:10.679
The balance we're really
trying to strike, of course,

00:29:10.679 --> 00:29:12.720
is you don't want to annoy
the user into thinking

00:29:12.720 --> 00:29:13.761
this thing isn't working.

00:29:13.761 --> 00:29:15.709
But also, you want
the user to actually

00:29:15.709 --> 00:29:17.000
be able to back their stuff up.

00:29:17.000 --> 00:29:20.000
Because even losing one, two,
three, four days of messages

00:29:20.000 --> 00:29:21.900
could be pretty
painful sometimes.

00:29:21.900 --> 00:29:23.008
Hurts to lose that data.

00:29:25.750 --> 00:29:26.250
OK.

00:29:26.250 --> 00:29:27.872
Let's talk a little
bit about rollout.

00:29:27.872 --> 00:29:29.538
And we're going to
cover this in detail.

00:29:29.538 --> 00:29:30.890
So how did we roll this out?

00:29:30.890 --> 00:29:33.250
Well, we distribute
WhatsApp in two ways.

00:29:33.250 --> 00:29:37.600
We've got an APK download that
we distribute on our website.

00:29:37.600 --> 00:29:39.940
And we also distribute it
through the Play Store.

00:29:39.940 --> 00:29:41.620
Obviously, a vast
majority of our users

00:29:41.620 --> 00:29:42.917
get it from the Play Store.

00:29:42.917 --> 00:29:45.000
What this means, however,
is that you can actually

00:29:45.000 --> 00:29:49.480
test things, test updates,
with the website population,

00:29:49.480 --> 00:29:52.150
because the population is
small, and you can actually

00:29:52.150 --> 00:29:54.210
use that almost like
a beta testing pool.

00:29:54.210 --> 00:29:55.414
So we started there.

00:29:55.414 --> 00:29:57.080
And we did this as a
percentage rollout.

00:29:57.080 --> 00:30:00.070
So we said, hey, we'll roll this
out to 5% of our website users

00:30:00.070 --> 00:30:01.560
and then ramp that up.

00:30:01.560 --> 00:30:03.260
And then we did a
percentage rollout

00:30:03.260 --> 00:30:04.920
for our Play Store users.

00:30:04.920 --> 00:30:07.000
Percentage rollout's really
important, obviously,

00:30:07.000 --> 00:30:09.550
because we don't want to just
turn this on all at once.

00:30:09.550 --> 00:30:11.800
We want to find the bugs
that we have in the client.

00:30:11.800 --> 00:30:13.837
We want to make sure the
servers can handle it.

00:30:13.837 --> 00:30:14.920
All those types of things.

00:30:14.920 --> 00:30:16.360
So we monitor this very closely.

00:30:16.360 --> 00:30:17.890
Because again, we're
dealing with user data.

00:30:17.890 --> 00:30:18.980
This stuff is precious.

00:30:18.980 --> 00:30:20.964
You don't want to screw it up.

00:30:20.964 --> 00:30:23.380
Of course, even when you're
doing your percentage rollout,

00:30:23.380 --> 00:30:26.810
one thing to keep in mind is
that there is a natural user

00:30:26.810 --> 00:30:28.360
upgrade cycle.

00:30:28.360 --> 00:30:30.660
So say we ship a
version of WhatsApp

00:30:30.660 --> 00:30:31.870
with Google Drive in it.

00:30:31.870 --> 00:30:34.140
We enable it for 5% of users.

00:30:34.140 --> 00:30:35.617
Not everyone's on
that build yet,

00:30:35.617 --> 00:30:37.200
so they're going to
upgrade over time.

00:30:37.200 --> 00:30:40.760
So actually, in absolute
numbers, the 5% grows.

00:30:40.760 --> 00:30:41.640
So keep that in mind.

00:30:41.640 --> 00:30:44.170
It's another interesting thing
that we have to deal with.

00:30:44.170 --> 00:30:45.440
Towards the end of
the rollout cycle,

00:30:45.440 --> 00:30:47.898
we shifted from a percentage
rollout to a regional rollout.

00:30:47.898 --> 00:30:50.850
Mike's going to tell you why
we did that in a little bit.

00:30:50.850 --> 00:30:53.980
And of course, just some
critical things that we did.

00:30:53.980 --> 00:30:56.054
Client monitoring
was really important.

00:30:56.054 --> 00:30:57.970
So we were constantly
monitoring success rates

00:30:57.970 --> 00:30:59.560
for backups and restores.

00:30:59.560 --> 00:31:03.430
We were constantly monitoring
if a backup was failing,

00:31:03.430 --> 00:31:04.990
what type of error
were we seeing?

00:31:04.990 --> 00:31:07.830
And this let us find bugs
and make optimizations

00:31:07.830 --> 00:31:10.542
along the way to make all
of this more reliable.

00:31:10.542 --> 00:31:12.000
On Mike's side,
they were obviously

00:31:12.000 --> 00:31:14.291
doing a lot of server monitoring
to make sure we didn't

00:31:14.291 --> 00:31:15.950
bring down Google's servers.

00:31:15.950 --> 00:31:18.080
Which we mostly didn't.

00:31:18.080 --> 00:31:19.470
And communication is key.

00:31:19.470 --> 00:31:21.780
So actually, our teams
communicated frequently.

00:31:21.780 --> 00:31:23.280
Every time there
was a client change

00:31:23.280 --> 00:31:25.863
that we thought would affect the
way the server would respond,

00:31:25.863 --> 00:31:26.750
we communicated that.

00:31:26.750 --> 00:31:27.960
And we still do that today.

00:31:27.960 --> 00:31:30.145
So communication,
really good when

00:31:30.145 --> 00:31:31.770
you're dealing with
this type of thing.

00:31:35.130 --> 00:31:35.880
MIKE PROCOPIO: OK.

00:31:35.880 --> 00:31:39.210
So let's take a look at what the
rollout actually looked like.

00:31:39.210 --> 00:31:41.700
And we'll speed things
up here a little bit.

00:31:41.700 --> 00:31:43.560
This is an actual
graph of queries

00:31:43.560 --> 00:31:46.064
to the Drive API from WhatsApp.

00:31:46.064 --> 00:31:48.480
So you kind of see on the left,
we had our preview rollout

00:31:48.480 --> 00:31:50.420
where we're kind of
testing things out

00:31:50.420 --> 00:31:52.190
to see how things are scaling.

00:31:52.190 --> 00:31:53.882
Everything was working great.

00:31:53.882 --> 00:31:55.340
From that, we're
able to understand

00:31:55.340 --> 00:31:56.350
how much provisioning we need.

00:31:56.350 --> 00:31:57.725
So there's kind
of a quiet period

00:31:57.725 --> 00:32:00.030
while we allocate the
resources, plan the rollout.

00:32:00.030 --> 00:32:03.410
And then we start gradually
bumping things up.

00:32:03.410 --> 00:32:05.710
A couple of percent,
3% at a time.

00:32:05.710 --> 00:32:08.230
We wait for that and we
see how things behave.

00:32:08.230 --> 00:32:10.870
Then at some point, we are
ready to do daily rollouts.

00:32:10.870 --> 00:32:12.527
That's the section
in the middle.

00:32:12.527 --> 00:32:14.860
Not a whole lot of sleeping
right now during this phase.

00:32:14.860 --> 00:32:18.055
3% a day until it
was basically done.

00:32:18.055 --> 00:32:20.430
There was an interesting point
that we'll talk about here

00:32:20.430 --> 00:32:24.080
where we had to pause the
rollout for some regions.

00:32:24.080 --> 00:32:25.300
We'll take a look why.

00:32:25.300 --> 00:32:27.220
And then after the new
year, we resumed it.

00:32:27.220 --> 00:32:28.719
And then towards
the end, we kind of

00:32:28.719 --> 00:32:34.060
had this natural, linear-esque
growth at full rollout.

00:32:34.060 --> 00:32:35.080
Next slide.

00:32:35.080 --> 00:32:40.510
So one quick look for one of
the more interesting things

00:32:40.510 --> 00:32:42.200
that happened in the rollout.

00:32:42.200 --> 00:32:43.890
So data centers and services.

00:32:43.890 --> 00:32:45.890
There are lots of data
centers around the world.

00:32:45.890 --> 00:32:47.870
They are not
uniformly distributed.

00:32:47.870 --> 00:32:52.010
And what that means is that
you have the local data centers

00:32:52.010 --> 00:32:53.760
where file uploads will go.

00:32:53.760 --> 00:32:55.500
But also at Google,
and many places,

00:32:55.500 --> 00:32:58.974
not all servers or services
will run in every data center.

00:32:58.974 --> 00:33:01.140
Seems like it's fine and
you just bounce the traffic

00:33:01.140 --> 00:33:01.770
back and forth.

00:33:01.770 --> 00:33:03.890
But it turns out
to be interesting

00:33:03.890 --> 00:33:06.560
in the following scenario.

00:33:06.560 --> 00:33:09.180
So broadly speaking here,
we have data centers

00:33:09.180 --> 00:33:10.490
on various continents.

00:33:10.490 --> 00:33:12.650
There's a data center
that accepts upload

00:33:12.650 --> 00:33:14.905
on the west of the Pacific.

00:33:14.905 --> 00:33:16.780
And there's a data center
east of the Pacific

00:33:16.780 --> 00:33:18.590
that Drive runs in,
and particularly

00:33:18.590 --> 00:33:19.900
the metadata storage layer.

00:33:19.900 --> 00:33:23.629
What was happening was we
were uploading the data

00:33:23.629 --> 00:33:24.670
to the local data center.

00:33:24.670 --> 00:33:25.700
That was great.

00:33:25.700 --> 00:33:26.970
Super low latency.

00:33:26.970 --> 00:33:27.920
It was good.

00:33:27.920 --> 00:33:30.710
Post-processing around checksums
had to be done in Drive

00:33:30.710 --> 00:33:32.727
because checksums are
part of the metadata.

00:33:32.727 --> 00:33:34.810
To do that, we needee--
to do calculated checksum,

00:33:34.810 --> 00:33:36.700
you need the file content.

00:33:36.700 --> 00:33:39.840
Drive did not run in
the local data center

00:33:39.840 --> 00:33:42.750
that the file upload
service ran in.

00:33:42.750 --> 00:33:44.280
So what was happening
was Drive was

00:33:44.280 --> 00:33:47.340
pulling all of the
bytes across the Pacific

00:33:47.340 --> 00:33:48.370
from that data center.

00:33:48.370 --> 00:33:50.036
I mean, ultimately,
we're shipping bytes

00:33:50.036 --> 00:33:51.850
in a pipe across an ocean.

00:33:51.850 --> 00:33:53.730
That pipe is very much limited.

00:33:53.730 --> 00:33:54.740
It's expensive to use.

00:33:54.740 --> 00:33:56.660
And if you saturate
it, things like YouTube

00:33:56.660 --> 00:33:58.270
could start to be impacted.

00:33:58.270 --> 00:34:01.440
So we had to pause our
rollout for the regions that

00:34:01.440 --> 00:34:02.360
were impacted.

00:34:02.360 --> 00:34:05.710
And here is what we did.

00:34:05.710 --> 00:34:10.210
The solution to this was to--
well, we paused the rollout.

00:34:10.210 --> 00:34:12.904
We moved the
post-processing in Drive,

00:34:12.904 --> 00:34:14.320
and particularly
the checksumming,

00:34:14.320 --> 00:34:16.560
into the same data
centers associated

00:34:16.560 --> 00:34:18.241
with the regional uploads.

00:34:18.241 --> 00:34:19.949
So then all the
post-processing was done.

00:34:19.949 --> 00:34:22.050
We didn't have to
transfer petabytes

00:34:22.050 --> 00:34:23.929
upon petabytes back and forth.

00:34:23.929 --> 00:34:25.409
And everybody was happy.

00:34:25.409 --> 00:34:28.400
We were able to gradually
resume the rollout.

00:34:28.400 --> 00:34:30.645
That was a very interesting
kind of scenario.

00:34:30.645 --> 00:34:32.145
Quick look at the
API and ecosystem.

00:34:32.145 --> 00:34:34.750
And I think we're doing
pretty well here on time.

00:34:34.750 --> 00:34:36.489
We'll have time for a demo here.

00:34:36.489 --> 00:34:41.139
So the Drive API has been
around for almost 10 years now.

00:34:41.139 --> 00:34:48.340
And very powerful
and expressive.

00:34:48.340 --> 00:34:50.770
It can do a lot of things
that you would expect around

00:34:50.770 --> 00:34:53.060
file management, uploads
and downloads, of course,

00:34:53.060 --> 00:34:54.520
applicable to our use case.

00:34:54.520 --> 00:34:57.270
Revisions, listening for
changes on a file or a folder

00:34:57.270 --> 00:34:58.400
or Drive-wide.

00:34:58.400 --> 00:35:01.560
Full programmatic management
of sharing and permissions.

00:35:01.560 --> 00:35:04.640
Applicable to this integration,
the use of custom third party

00:35:04.640 --> 00:35:05.660
properties.

00:35:05.660 --> 00:35:06.800
Push notifications.

00:35:06.800 --> 00:35:09.340
And as we noted before, the
first party Drive clients-- so

00:35:09.340 --> 00:35:11.920
Drive on web and
Android, iOS, everything,

00:35:11.920 --> 00:35:14.990
all use the same set of APIs.

00:35:14.990 --> 00:35:17.960
So we have a rich third
party ecosystem because we've

00:35:17.960 --> 00:35:20.190
had open API since 2008.

00:35:20.190 --> 00:35:21.550
This is part of our platform.

00:35:21.550 --> 00:35:22.720
This is not an afterthought.

00:35:22.720 --> 00:35:24.530
Embracing the
developer community

00:35:24.530 --> 00:35:27.260
is part of our MO,
our DNA, our vision.

00:35:27.260 --> 00:35:31.020
It is something that we are
paying a lot of close attention

00:35:31.020 --> 00:35:31.530
to.

00:35:31.530 --> 00:35:34.450
So apps that do everything
imaginable have popped up

00:35:34.450 --> 00:35:37.790
in the past almost decade--
faxing, editing, rendering,

00:35:37.790 --> 00:35:41.370
syncing and backup, data
protection, data validation,

00:35:41.370 --> 00:35:43.930
data integrity, enterprise
use cases, document work

00:35:43.930 --> 00:35:47.300
flows, games, music players,
anything you can think of

00:35:47.300 --> 00:35:51.580
has probably been done
in this ecosystem.

00:35:51.580 --> 00:35:54.690
So this is an example of
what some of the apps look

00:35:54.690 --> 00:35:56.380
like right now on
the Chrome Web Store.

00:35:56.380 --> 00:35:59.960
The variety of apps is
reflective of increasing number

00:35:59.960 --> 00:36:03.950
of Android apps embracing
Drive APIs for varying

00:36:03.950 --> 00:36:06.280
degrees, including
storage and backup,

00:36:06.280 --> 00:36:10.170
like the WhatsApp use case.

00:36:10.170 --> 00:36:10.820
All right.

00:36:10.820 --> 00:36:12.849
Here is a graph of
Drive API growth.

00:36:12.849 --> 00:36:14.640
And one of the key
things to take away here

00:36:14.640 --> 00:36:17.190
is that we want to embrace
the third party community.

00:36:17.190 --> 00:36:18.930
And what that means
is we understand

00:36:18.930 --> 00:36:20.080
that scale is important.

00:36:20.080 --> 00:36:22.650
We know how to scale, and
we understand that your apps

00:36:22.650 --> 00:36:24.310
need to scale as well.

00:36:24.310 --> 00:36:27.560
So whatever quota you
need, we are able to grant.

00:36:27.560 --> 00:36:29.130
We are watching
this very carefully,

00:36:29.130 --> 00:36:31.094
and we're provisioning
along the way.

00:36:31.094 --> 00:36:33.260
And you can see we have a
nice kind of linear growth

00:36:33.260 --> 00:36:36.430
that we're planning for
on an ongoing basis.

00:36:36.430 --> 00:36:38.710
And as long as it
continues roughly linearly,

00:36:38.710 --> 00:36:40.780
people are generally happy here.

00:36:40.780 --> 00:36:41.770
So this looks great.

00:36:41.770 --> 00:36:44.700
Last 300 days on that.

00:36:44.700 --> 00:36:46.050
All right.

00:36:46.050 --> 00:36:46.580
Demo time.

00:36:46.580 --> 00:36:46.860
RANDALL SARAFA:
You want to do it?

00:36:46.860 --> 00:36:47.693
MIKE PROCOPIO: Yeah.

00:36:47.693 --> 00:36:49.760
I think we have a perfect
amount of time here.

00:36:49.760 --> 00:36:53.370
So we wanted to demo
the end-to-end flow.

00:36:53.370 --> 00:36:56.920
What could possibly go
wrong, as we like to say.

00:36:56.920 --> 00:36:58.870
We can switch over here.

00:36:58.870 --> 00:37:03.390
So what we'll do is Randall and
I have a conversation going,

00:37:03.390 --> 00:37:04.790
if that's showing up there.

00:37:04.790 --> 00:37:05.510
Yep.

00:37:05.510 --> 00:37:06.470
We're going to take a selfie.

00:37:06.470 --> 00:37:07.280
We're going to back it up.

00:37:07.280 --> 00:37:09.071
We're going to clear
the data on the device

00:37:09.071 --> 00:37:13.250
and then attempt a restore using
Google I/O Wi-Fi, because we

00:37:13.250 --> 00:37:14.700
like to live dangerously.

00:37:14.700 --> 00:37:15.420
OK, bud.

00:37:15.420 --> 00:37:15.920
Here we go.

00:37:15.920 --> 00:37:16.820
RANDALL SARAFA: 50/50 shot.

00:37:16.820 --> 00:37:17.530
MIKE PROCOPIO: Exactly.

00:37:17.530 --> 00:37:18.030
All right.

00:37:18.030 --> 00:37:20.300
What are we-- are we smiling,
are we striking a pose?

00:37:20.300 --> 00:37:23.310
Here let's-- OK.

00:37:23.310 --> 00:37:24.000
Excellent.

00:37:24.000 --> 00:37:25.520
All right.

00:37:25.520 --> 00:37:26.711
Yo.

00:37:26.711 --> 00:37:30.350
Maybe just an emoji there
just for good measure.

00:37:30.350 --> 00:37:32.940
All right.

00:37:32.940 --> 00:37:35.160
So there it is showing up there.

00:37:35.160 --> 00:37:36.290
Looks good.

00:37:36.290 --> 00:37:37.140
All right.

00:37:37.140 --> 00:37:43.670
So to trigger manual backup, the
user can back up at any time.

00:37:43.670 --> 00:37:47.970
I have mine set up to
update backup every night,

00:37:47.970 --> 00:37:50.050
chats, and chat backup.

00:37:50.050 --> 00:37:52.260
We can also backup manually.

00:37:52.260 --> 00:37:55.490
So first we create
a local backup.

00:37:55.490 --> 00:37:58.352
We're going to query
Drive to figure out

00:37:58.352 --> 00:38:00.560
what things are there, what
things are on the device,

00:38:00.560 --> 00:38:02.820
and do that kind of
differential computation.

00:38:02.820 --> 00:38:03.550
We figure it out.

00:38:03.550 --> 00:38:05.800
We upload the new photo.

00:38:05.800 --> 00:38:08.300
That's happening fairly
quickly, which is great.

00:38:08.300 --> 00:38:09.870
When that's done,
remember as we saw

00:38:09.870 --> 00:38:12.940
before, we update the
pointer to the new file

00:38:12.940 --> 00:38:17.014
map, which basically says, this
backup is live and ready to go.

00:38:17.014 --> 00:38:18.180
That's what's happening now.

00:38:18.180 --> 00:38:18.680
It's done.

00:38:18.680 --> 00:38:20.042
In and out in 15 or 20 seconds.

00:38:20.042 --> 00:38:22.250
RANDALL SARAFA: So that's
also the incremental backup

00:38:22.250 --> 00:38:23.020
happening right there.

00:38:23.020 --> 00:38:24.650
So you see how quick
it's actually going.

00:38:24.650 --> 00:38:24.990
MIKE PROCOPIO: Right.

00:38:24.990 --> 00:38:26.989
RANDALL SARAFA: It's just
a minor amount of data

00:38:26.989 --> 00:38:28.760
has changed in between.

00:38:28.760 --> 00:38:31.207
MIKE PROCOPIO: So let's go
ahead and clear things off

00:38:31.207 --> 00:38:31.790
of the device.

00:38:31.790 --> 00:38:33.415
So first off, what
we can do-- and I'll

00:38:33.415 --> 00:38:38.880
show you the coolest
little-- there we are.

00:38:38.880 --> 00:38:41.180
Yep.

00:38:41.180 --> 00:38:46.990
So that'll get us into storage.

00:38:46.990 --> 00:38:50.900
Clear off the data and the
cache from the local device.

00:38:50.900 --> 00:38:52.610
And then importantly,
we also need

00:38:52.610 --> 00:38:57.104
to go into the actual
built-in storage manager

00:38:57.104 --> 00:38:59.270
here on Android, which is
a neat little thing that I

00:38:59.270 --> 00:39:02.996
found under Storage and USB.

00:39:02.996 --> 00:39:05.700
If you scroll down, there's this
cool little thing, explorer,

00:39:05.700 --> 00:39:06.200
here.

00:39:06.200 --> 00:39:08.360
This is a natural built-in
Android file manager.

00:39:08.360 --> 00:39:09.276
So you go to WhatsApp.

00:39:09.276 --> 00:39:12.060
WhatsApp stores its
media on the SD card.

00:39:12.060 --> 00:39:14.460
And I can actually go
ahead and clear that.

00:39:14.460 --> 00:39:15.080
RANDALL SARAFA: Basically
what we're doing

00:39:15.080 --> 00:39:16.540
is we're simulating what
would happen if someone

00:39:16.540 --> 00:39:17.590
got a new phone, right?

00:39:17.590 --> 00:39:19.330
Like they're not going to really
have any data on their phone

00:39:19.330 --> 00:39:19.960
yet.

00:39:19.960 --> 00:39:21.160
They're not going to
have WhatsApp installed.

00:39:21.160 --> 00:39:23.240
So all these things don't
really exist, right?

00:39:23.240 --> 00:39:25.800
So what happens in the world
when you get a new phone.

00:39:25.800 --> 00:39:27.154
So you install WhatsApp.

00:39:27.154 --> 00:39:28.320
You're back at registration.

00:39:28.320 --> 00:39:30.410
We're going to ask you for
your phone number first.

00:39:30.410 --> 00:39:31.280
MIKE PROCOPIO: So we
are officially now

00:39:31.280 --> 00:39:32.363
in a kind of a zero state.

00:39:32.363 --> 00:39:34.140
Cleared off everything,
as Randall said.

00:39:34.140 --> 00:39:37.440
We'll uninstall it.

00:39:37.440 --> 00:39:40.040
And then I actually have
a local version of it

00:39:40.040 --> 00:39:41.360
right here under Downloads.

00:39:45.000 --> 00:39:45.755
WhatsApp APK.

00:39:45.755 --> 00:39:47.730
So we'll install
it locally again.

00:39:47.730 --> 00:39:51.870
And that should trigger the
restore flow once it installs.

00:39:51.870 --> 00:39:55.560
So what that'll do is
it will-- opting in,

00:39:55.560 --> 00:39:57.590
the user will be prompted
to be able to restore

00:39:57.590 --> 00:39:59.910
their items when it's ready.

00:39:59.910 --> 00:40:02.600
This happens after account
setup and verification, which

00:40:02.600 --> 00:40:04.910
is based on your phone number.

00:40:04.910 --> 00:40:08.830
And then the key thing
to note about restore

00:40:08.830 --> 00:40:12.620
is that all the
media is actually

00:40:12.620 --> 00:40:14.990
restored in the background.

00:40:14.990 --> 00:40:17.440
Anything else you want to say
about this flow in general?

00:40:17.440 --> 00:40:18.620
RANDALL SARAFA: What
we'll show you right now

00:40:18.620 --> 00:40:20.465
is where we do this as
part of the process.

00:40:20.465 --> 00:40:22.590
One thing to keep in mind,
when we look for backups

00:40:22.590 --> 00:40:24.780
and registration, it kind of
requires the Google account

00:40:24.780 --> 00:40:25.660
being on the device.

00:40:25.660 --> 00:40:28.100
So we have some
logic for letting

00:40:28.100 --> 00:40:30.869
the user know like, hey,
maybe you don't have

00:40:30.869 --> 00:40:32.160
a Google account on your phone.

00:40:32.160 --> 00:40:33.618
If you've backed
up previously, why

00:40:33.618 --> 00:40:37.850
don't you go ahead and sign in
so you can actually restore it.

00:40:37.850 --> 00:40:40.200
We also only give you one
opportunity to restore.

00:40:40.200 --> 00:40:41.410
That's at install time.

00:40:41.410 --> 00:40:43.790
The reason is because it
creates a lot of complexity

00:40:43.790 --> 00:40:47.035
to do it later in terms of
how you merge chat databases

00:40:47.035 --> 00:40:48.410
and do all those
types of things.

00:40:48.410 --> 00:40:50.690
So we just kind of give you
the opportunity up front,

00:40:50.690 --> 00:40:51.702
restore it.

00:40:51.702 --> 00:40:53.660
It's just much more
reliable to do it that way.

00:40:53.660 --> 00:40:54.030
MIKE PROCOPIO: All right.

00:40:54.030 --> 00:40:55.240
I set up my account.

00:40:55.240 --> 00:40:57.790
It was automatically
verified by SMS.

00:40:57.790 --> 00:40:59.650
You can see the
notification there.

00:40:59.650 --> 00:41:02.410
And then here, as Randall just
noted, we looked for a backup

00:41:02.410 --> 00:41:03.430
and we found a backup.

00:41:03.430 --> 00:41:05.700
We have the opportunity to
restore it from the cloud.

00:41:05.700 --> 00:41:06.350
RANDALL SARAFA: So
importantly, we're

00:41:06.350 --> 00:41:07.960
also showing the user
the size of this.

00:41:07.960 --> 00:41:10.376
We say, this is how much we're
actually going to download.

00:41:10.376 --> 00:41:12.620
So when Mike actually hits
Restore, what we're doing

00:41:12.620 --> 00:41:13.900
is what I mentioned before.

00:41:13.900 --> 00:41:15.880
We're restoring the
chat database first.

00:41:15.880 --> 00:41:16.980
We do this synchronously.

00:41:16.980 --> 00:41:18.450
So these are your messages.

00:41:18.450 --> 00:41:20.862
We let you know, hey,
6,000 of them are restored.

00:41:20.862 --> 00:41:22.570
And we actually tell
the user, your media

00:41:22.570 --> 00:41:23.910
will be restored
in the background.

00:41:23.910 --> 00:41:25.640
So when Mike actually
comes into WhatsApp,

00:41:25.640 --> 00:41:27.520
you're going to see something
at the top of the chat list that

00:41:27.520 --> 00:41:28.610
says restoring media.

00:41:28.610 --> 00:41:31.790
And that's going to kick
off getting all your photos,

00:41:31.790 --> 00:41:34.870
your videos, et cetera, which
again, are the biggest part

00:41:34.870 --> 00:41:36.160
of a user's backup, typically.

00:41:36.160 --> 00:41:37.857
You can see that right there.

00:41:37.857 --> 00:41:40.190
As I mentioned before, we
restored the most recent media

00:41:40.190 --> 00:41:40.690
first.

00:41:40.690 --> 00:41:42.630
So if you actually
go into our chat,

00:41:42.630 --> 00:41:45.250
you'll probably see
the photo that Mike

00:41:45.250 --> 00:41:47.270
sent already restored.

00:41:47.270 --> 00:41:50.134
So we optimized for
recent messages,

00:41:50.134 --> 00:41:51.300
which obviously makes sense.

00:41:51.300 --> 00:41:53.080
You want to see
that stuff up front.

00:41:53.080 --> 00:41:54.016
And that's our demo.

00:41:54.016 --> 00:41:54.849
MIKE PROCOPIO: Cool.

00:41:54.849 --> 00:41:56.240
[APPLAUSE]

00:41:56.240 --> 00:41:58.699
Thank you everyone for your
attention for being here today.

00:41:58.699 --> 00:42:01.073
We really appreciated having
a chance to kind of give you

00:42:01.073 --> 00:42:02.440
a behind the scenes look here.

00:42:02.440 --> 00:42:05.490
[MUSIC PLAYING]

