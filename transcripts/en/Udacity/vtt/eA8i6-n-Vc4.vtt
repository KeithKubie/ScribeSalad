WEBVTT
Kind: captions
Language: en

00:00:00.390 --> 00:00:02.770
Well for the debugger to actually catch,

00:00:02.770 --> 00:00:06.210
you first have to open up the Chrome JavaScript console.

00:00:06.210 --> 00:00:12.740
I can do this on a Mac by using Cmd+Option+I or by simply navigating

00:00:12.740 --> 00:00:20.920
to the toolbar, looking under the Tools menu, and going to JavaScript Console.

00:00:20.920 --> 00:00:25.250
As you can see here the console's load in the bottom, but

00:00:25.250 --> 00:00:29.730
since our page is already loaded there's no debugger to catch.

00:00:29.730 --> 00:00:32.920
Let us try to refresh the page and see if the debugger will catch.

00:00:34.090 --> 00:00:39.510
As you can see here in our code the debugger stopped execution at line 19.

00:00:39.510 --> 00:00:44.330
To actually play around with the execution context of our draw function and

00:00:44.330 --> 00:00:46.380
inspect what our data is, and

00:00:46.380 --> 00:00:51.820
what variables are in scope, let's navigate to the console tab of the debugger.

00:00:53.230 --> 00:00:55.550
Inspecting some of the variables just for

00:00:55.550 --> 00:01:01.660
a sanity check, we can print out data and see that we have 836 data points.

00:01:01.660 --> 00:01:06.500
Opening up this array, we can inspect what each object looks like.

00:01:06.500 --> 00:01:10.990
In this case we see attendance, date, goals, and so forth.

00:01:10.990 --> 00:01:14.990
So every property of this object represents one of the columns of our data set.

00:01:14.990 --> 00:01:20.980
But this might be hard to see if we want to inspect our entire dataset,

00:01:20.980 --> 00:01:25.140
since we have to open up every one of these objects individually.

00:01:25.140 --> 00:01:28.470
A little trick of the Chrome debugger is it has

00:01:28.470 --> 00:01:33.580
a utility function called .cable that we can call like we can call console.log.

00:01:33.580 --> 00:01:36.890
This is very similar to console.log.

00:01:36.890 --> 00:01:41.060
But rather than just printing the naive string representation of a variable,

00:01:41.060 --> 00:01:45.990
if the variable is in some collection, be it an array, JSON, or

00:01:45.990 --> 00:01:49.090
what have you, the table function instead prints out

00:01:49.090 --> 00:01:52.580
a nicely formatted spreadsheet in the console window.

00:01:52.580 --> 00:01:57.240
Let's go ahead and call console.table on our data array.

00:01:57.240 --> 00:02:02.165
This takes a second since we have so many data points, but if you can see here,

00:02:02.165 --> 00:02:08.070
council.table has printed out all of our data in a nice tabular format.

00:02:08.070 --> 00:02:10.350
It's easy to scroll and inspect.

00:02:10.350 --> 00:02:14.580
Scrolling to the top of this, you can what the field names are.

00:02:14.580 --> 00:02:21.460
In this case, attendance, goals, penalty kicks, referee, stadium, and so forth.

00:02:22.560 --> 00:02:27.540
And we can also see here that we have the year, the time, and the date.

00:02:27.540 --> 00:02:31.560
You might want to be careful with the console.table function.

00:02:31.560 --> 00:02:34.240
As you noticed, it took a second to load.

00:02:34.240 --> 00:02:36.020
This can get quite unwieldy and

00:02:36.020 --> 00:02:40.290
potentially crash your browser if you try it with a large data file.

00:02:40.290 --> 00:02:45.710
As you can see, the structure is similar to what we mentioned in the quiz, and

00:02:45.710 --> 00:02:48.340
all the columns should be identical.

00:02:48.340 --> 00:02:54.060
The variables of interest here are the year column and the attendance column.

00:02:55.330 --> 00:03:00.050
How might we best represent attendance as a function of year?

00:03:00.050 --> 00:03:02.800
Remember what we mentioned when choosing a chart type.

00:03:02.800 --> 00:03:07.090
We need to think about our data types of our variables in the abstract sense.

00:03:07.090 --> 00:03:09.640
I don't mean what JavaScript type they are.

00:03:09.640 --> 00:03:12.360
And also we want to think about what type of

00:03:12.360 --> 00:03:15.800
relation between attendance in the year we want to convey.

