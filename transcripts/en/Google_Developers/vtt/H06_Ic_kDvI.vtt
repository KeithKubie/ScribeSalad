WEBVTT
Kind: captions
Language: en

00:00:02.290 --> 00:00:04.810
In the last section, I talked
a bit about the apply family

00:00:04.810 --> 00:00:06.930
of functions.

00:00:06.930 --> 00:00:08.800
These are very powerful
functions for applying the

00:00:08.800 --> 00:00:12.110
same function across
many sets of data.

00:00:12.110 --> 00:00:13.380
They're even more powerful when

00:00:13.380 --> 00:00:16.890
combined with custom functions.

00:00:16.890 --> 00:00:19.900
To begin, I'm going to create
a sample object x that's a

00:00:19.900 --> 00:00:23.760
matrix with 1,000 rows and 10
columns containing 10,000

00:00:23.760 --> 00:00:26.040
random draws from a Poisson
distribution with

00:00:26.040 --> 00:00:29.480
8 degrees of freedom.

00:00:29.480 --> 00:00:32.470
If you recall, I could use
apply to apply a function

00:00:32.470 --> 00:00:35.910
across each row or column.

00:00:35.910 --> 00:00:40.210
Here I've calculated the
mean for each column.

00:00:40.210 --> 00:00:42.950
If I wanted, I could also create
a custom function on

00:00:42.950 --> 00:00:45.470
the fly that calculates the
standard error of the mean

00:00:45.470 --> 00:00:48.280
using each column separately.

00:00:48.280 --> 00:00:50.400
Note that here I've omitted the
braces for the function

00:00:50.400 --> 00:00:52.280
declaration.

00:00:52.280 --> 00:00:55.660
I did this since the function
can fit on one line, but I

00:00:55.660 --> 00:00:59.230
could include braces
if I liked.

00:00:59.230 --> 00:01:01.990
This in line use of functions is
very useful since it allows

00:01:01.990 --> 00:01:05.440
you to apply simple custom
functions on the fly.

00:01:05.440 --> 00:01:08.150
It's also common to make complex
functions and use them

00:01:08.150 --> 00:01:11.420
in the third argument
of apply.

00:01:11.420 --> 00:01:14.800
Here I'm going to first load
in the getCI function, then

00:01:14.800 --> 00:01:16.305
I'm going to call it
inside of apply.

00:01:18.910 --> 00:01:21.090
You might recall that the
getCI function actually

00:01:21.090 --> 00:01:23.090
returned a list.

00:01:23.090 --> 00:01:26.140
The apply function adapts its
output to accommodate complex

00:01:26.140 --> 00:01:29.220
outputs by the function
being applied.

00:01:29.220 --> 00:01:32.330
Sometimes it will return a
vector, other times a matrix,

00:01:32.330 --> 00:01:34.240
and other times a list.

00:01:34.240 --> 00:01:37.940
Here, since getCI outputs
a list, the best way to

00:01:37.940 --> 00:01:40.600
represent many outputs of that
function is to contain them in

00:01:40.600 --> 00:01:41.970
a sort of super list.

00:01:44.770 --> 00:01:47.660
This completes the fourth
section of videos.

00:01:47.660 --> 00:01:49.920
Take some time to try out what
you've learned in these first

00:01:49.920 --> 00:01:53.445
four sections of video, browse
online for some data, or

00:01:53.445 --> 00:01:56.170
access some of these data sets
that are already present in

00:01:56.170 --> 00:01:57.420
your R session.

