WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.580
This video is remarkable.

00:00:01.580 --> 00:00:07.910
You’re hearing these words months, maybe years,
after I’ve spoken them, yet everything is as clear as if
we were sitting in the same room.

00:00:07.910 --> 00:00:13.960
The ability to record and transmit different
kinds of information is a core part of modern
engineering – and the world as we know it.

00:00:13.960 --> 00:00:16.380
That’s why some say we’re living in the
information age.

00:00:16.380 --> 00:00:23.160
Whether you’re using your phone, turning on
the radio, or strumming your electric guitar, you’re
sending and receiving signals all the time.

00:00:23.160 --> 00:00:27.160
And to get all that information where it needs
to go, you’ll need signal processing.

00:00:27.160 --> 00:00:37.220
[Theme Music]

00:00:37.220 --> 00:00:41.020
As an engineer, communicating means more than
having a chat in the break room.

00:00:41.020 --> 00:00:47.060
Whether you’re watching YouTube videos, using
satellite navigation, or just making a phone call,
there’s communication happening.

00:00:47.060 --> 00:00:50.720
Signals are representations of the information
we’re sending when we do this.

00:00:50.720 --> 00:00:56.060
Text, sounds, images, and even computer files
will all be converted into a signal when you send them.

00:00:56.060 --> 00:01:01.000
And that’s really what communication is,
sending stuff from one place to another to
convey information.

00:01:01.000 --> 00:01:08.060
The basic task is to take content, turn it
into a signal, transmit it, and then turn it
all back into content on the other end.

00:01:08.060 --> 00:01:10.140
These steps are known as signal processing.

00:01:10.140 --> 00:01:15.120
The signal itself will be a current running
through a wire or an electromagnetic wave,
like radio or light.

00:01:15.120 --> 00:01:18.760
However you choose to relay it, the overall
process is basically the same.

00:01:18.760 --> 00:01:24.100
The problem of communicating remotely is one
engineers faced long before digital computers
came onto the scene.

00:01:24.100 --> 00:01:29.840
We saw an example of this in the history of
electrical engineering, with Samuel Morse’s
1837 telegraph.

00:01:29.840 --> 00:01:36.280
In his design, the operator pushed down a lever,
called a key, to complete a circuit and transmit an
electric current down a wire.

00:01:36.280 --> 00:01:41.600
At the other end, a machine called a register
would receive that current and mark a piece
of paper.

00:01:41.610 --> 00:01:48.280
By pressing down the key for different lengths of
time, the operator could make the register draw little
dots and dashes that spelled out a message.

00:01:48.280 --> 00:01:53.460
The key and register in Morse’ telegraph
are both examples of what are called transducers.

00:01:53.460 --> 00:01:59.460
Transducers take physical information, like
the operator’s press of the lever, and turn it
into a signal or vice versa.

00:01:59.460 --> 00:02:05.640
To record this video, for example, the input
transducers were the microphone and the
camera I’m speaking to,

00:02:05.640 --> 00:02:10.360
which measures the sound and light in this
environment and converted them to electrical
signals.

00:02:10.360 --> 00:02:14.760
Watching the video involves output transducers,
things like your headphones and monitor.

00:02:14.770 --> 00:02:19.490
Unlike Morse’ system, however, the signal
won’t stay in one form between transducers.

00:02:19.490 --> 00:02:24.380
It might start out as an electric current
in the camera that gets converted into a file
on a memory card.

00:02:24.380 --> 00:02:31.180
That’s transmitted again as a signal when we send
the file to a computer or upload it to the internet,
where it’s stored on YouTube’s servers.

00:02:31.180 --> 00:02:37.000
At least, until you request that the signal
be sent to you in its final form, to be converted
back into light and sound.

00:02:37.000 --> 00:02:44.440
Morse’s system was popular because it was simple
and remarkably easy to use, ushering in the era of
instant communication we enjoy today.

00:02:44.440 --> 00:02:49.740
The ingenious part was finding a way to take
information as people understand it, in terms
of ordinary letters and words,

00:02:49.740 --> 00:02:53.140
and encode it in a form that could be
transmitted as electricity.

00:02:53.140 --> 00:02:55.700
Encoding is a key part of signal processing.

00:02:55.700 --> 00:02:59.980
Signals need a transmission-friendly way of
representing the information you’re trying to relay.

00:02:59.980 --> 00:03:07.660
A hundred years after Morse unveiled his telegraph, it
was replaced by more sophisticated and convenient
forms of communication, like telephones and radios.

00:03:07.660 --> 00:03:12.380
But these methods – and everything up to
the internet today – are still based on encoding.

00:03:12.380 --> 00:03:16.140
It’s the way the information is encoded
and how it’s transmitted that’s changed.

00:03:16.140 --> 00:03:21.060
Consider radio waves, like the kind used to
transmit signals between your phone and a cell tower.

00:03:21.060 --> 00:03:25.140
It’s the wave nature of radio that lets
your phone encode the information you need
to make a call.

00:03:25.140 --> 00:03:32.800
Engineers design hardware that changes, or modulates,
the behavior of that wave to encode information about
the pressure of the air near the microphone –

00:03:32.800 --> 00:03:34.960
in other words, the physical effects of sound.

00:03:34.960 --> 00:03:40.120
Two of the most common ways of doing this
are Amplitude Modulation and Frequency Modulation,

00:03:40.120 --> 00:03:43.700
or AM and FM – that’s where the names
on your radio dial come from!

00:03:43.700 --> 00:03:50.200
One adjusts the amplitude, or strength of the wave,
while the other changes the frequency, or distance
between one peak and the next.

00:03:50.200 --> 00:03:56.420
Much like telegraph signals, the transmitted
wave carries the information you want, which
is then decoded on the other side.

00:03:56.420 --> 00:04:01.100
Similar methods can even represent sounds
and images, which is how television broadcasts
work.

00:04:01.100 --> 00:04:03.960
But these methods have two pretty big limitations!

00:04:03.960 --> 00:04:05.680
The first is capacity.

00:04:05.680 --> 00:04:10.560
The signal of a radio wave can be thought
of as a combination of other, simpler waves
put together.

00:04:10.560 --> 00:04:14.920
Specifically, you can represent a signal as
the sum of radio waves with different frequencies.

00:04:14.920 --> 00:04:18.340
The range of different frequencies you can
represent is called the bandwidth,

00:04:18.340 --> 00:04:24.100
and it limits how much information can be
encoded by your signal, as well as how many of
them can be sent at the same time.

00:04:24.100 --> 00:04:31.920
Think of signals as fluids and radio channels
as pipes; the bandwidth is like the size of the pipe,
which controls how much fluid can flow at once.

00:04:31.920 --> 00:04:33.560
The other problem is noise.

00:04:33.560 --> 00:04:40.680
As they travel through the atmosphere, radio waves
interfere with each other and are warped by objects
in their path, which both cause distortions.

00:04:40.680 --> 00:04:45.540
So the signal the other person receives usually
ends up pretty different from the one that you sent!

00:04:45.540 --> 00:04:50.200
Noise is anything that changes your signal
from its original form, usually in a random way.

00:04:50.200 --> 00:04:54.720
The greater the noise, the more distorted and
unrecognizable the received message will be.

00:04:54.720 --> 00:04:58.320
That’s why old TV sets sometimes ended up
with ‘static’ in the image!

00:04:58.320 --> 00:05:04.500
To go back to the pipe analogy, noise would
be any contamination the pipe puts into the
fluid, changing its concentration.

00:05:04.500 --> 00:05:09.300
A tiny, contaminated pipe does a pretty terrible
job of delivering lots of clean water.

00:05:09.300 --> 00:05:16.600
So as you can imagine, noisy channels with low
bandwidth aren’t great for sending signals that can
be reliably decoded on the receiving end.

00:05:16.600 --> 00:05:20.600
Worse still, both of these problems happen
for wired communications as well.

00:05:20.600 --> 00:05:28.640
The signal traveling down a wire is also a wave,
where the amplitude is represented by the the power
of the electric current at any given point in time.

00:05:28.640 --> 00:05:35.040
That’s how we modulate electric currents to
carry signals, but it also means that those signals
suffer from noise and capacity issues, too.

00:05:35.040 --> 00:05:39.420
Radio and wired communications faced these
sorts of problems during World War II,

00:05:39.420 --> 00:05:42.880
which brought them to the attention of engineer
and mathematician Claude Shannon.

00:05:42.880 --> 00:05:46.760
In 1948, he published A Mathematical
Theory of Communication,

00:05:46.760 --> 00:05:53.040
which revolutionized how engineers
consider information itself, and what it
takes to send information reliably.

00:05:53.040 --> 00:06:00.020
Among Shannon’s contributions was a mathematical
formula for determining the conditions needed for
sending a signal at a particular rate.

00:06:00.020 --> 00:06:02.900
Imagine sending a Morse Code message down
a noisy wire.

00:06:02.900 --> 00:06:07.200
Each segment of the code represents a dot or a
dash, what you might call a “bit” of the message.

00:06:07.200 --> 00:06:12.680
“Bit” stands for “binary digit”, because
each part of our message only occupies one
of two states.

00:06:12.680 --> 00:06:19.020
In his paper, Shannon developed a formula
that determines the number of bits you can
transmit per second, or “bit-rate” –

00:06:19.020 --> 00:06:23.140
given the power of your signal, the amount
of noise, and the bandwidth of the channel.

00:06:23.140 --> 00:06:28.380
When your internet provider advertises a speed
of 50 megabits per second, that’s Shannon’s bit rate!

00:06:28.380 --> 00:06:33.880
He figured out that it’s the ratio of the
power of the signal to the power of the noise
that determines the bit rate.

00:06:33.880 --> 00:06:37.930
So either the signal needs to be strong enough,
or the bandwidth needs to be large enough

00:06:37.930 --> 00:06:42.640
for there to be so many frequencies representing
the signal that noise can’t affect them all at once.

00:06:42.640 --> 00:06:49.400
As well as this handy formula, Shannon laid out
lots of groundwork for calculating the exact
conditions needed for reliable communication.

00:06:49.400 --> 00:06:55.540
Just as importantly, he worked out what
kinds of signals you might need to represent
the information you’re trying to communicate.

00:06:55.540 --> 00:06:58.920
That work would be vital once signal processing
entered the digital age.

00:06:58.920 --> 00:07:05.540
Digital signals represent information using
a small set of distinct states rather than the
continuous variation of a wave.

00:07:05.540 --> 00:07:10.360
Instead of FM radio, where changes in frequency
translate exactly to changes in sound,

00:07:10.360 --> 00:07:15.380
digital radio sends the data piece by piece and
everything is reassembled on the receiving end.

00:07:15.380 --> 00:07:20.200
Because the different states of the signal
can be more distinct, they’re much less
susceptible to noise.

00:07:20.200 --> 00:07:24.900
A large difference is easier to distinguish
than a small one, even when it gets distorted.

00:07:24.900 --> 00:07:29.780
Morse code, with its dots, dashes, and spaces,
was an early digital communication system.

00:07:29.780 --> 00:07:33.940
But it would take the advent of computers
for digital signaling to really take off.

00:07:33.940 --> 00:07:44.540
And it was Shannon’s work that allowed computer scientists and electrical engineers to find ways of encoding different kinds of information in terms of 1s and 0s – what we now call binary code.

00:07:44.540 --> 00:07:49.960
Digital signals have come to form the basis
of computing, and every form of data associated
with it.

00:07:49.960 --> 00:07:51.660
All of which are still used today!

00:07:51.660 --> 00:07:53.840
Of course, we’ve only just skimmed the surface.

00:07:53.840 --> 00:07:57.140
Signal processing overlaps with some serious
technical challenges.

00:07:57.140 --> 00:08:04.820
There’s the task of actually encoding different sorts
of information as signals, and creating channels like
phone lines and WiFi routers to transmit them.

00:08:04.820 --> 00:08:10.340
And there’s the challenge of building hardware
that transmits the final output, like computer
monitors and headphones.

00:08:10.340 --> 00:08:16.180
But the end result is that you can stream
videos like this one at the click of a button,
virtually anywhere in the world.

00:08:16.180 --> 00:08:19.260
I might be a little biased, but I think that
it’s pretty darn cool.

00:08:19.260 --> 00:08:22.720
In this episode, we looked at the fundamentals
of signal processing.

00:08:22.720 --> 00:08:28.440
We saw the need to represent information
as a signal so it can be transmitted, and an
example of that in Morse Code.

00:08:28.440 --> 00:08:34.040
We explain how wired and wireless
communications can suffer from the problems
of bandwidth capacity and noise,

00:08:34.040 --> 00:08:40.200
and how Claude Shannon helped quantify the
problem so that engineers could build around
those limitations and bring about the digital age.

00:08:40.200 --> 00:08:46.040
Next time, we’re headed out to sea to talk
about moving physical objects with ships and
marine engineering.

00:08:46.040 --> 00:08:50.220
Crash Course Engineering is produced in association
with PBS Digital Studios,

00:08:50.220 --> 00:08:58.240
which also produces It's Okay To Be Smart, a show
about our curious universe and the science that makes
it possible, hosted by Dr. Joe Hanson.

00:08:58.240 --> 00:09:00.339
Check it out at the link in the description.

00:09:00.340 --> 00:09:07.220
Crash Course is a Complexly production and this
episode was filmed in the Doctor Cheryl C. Kinney
Studio with the help of these wonderful people.

00:09:07.220 --> 00:09:09.740
And our amazing graphics team is Thought Cafe.

