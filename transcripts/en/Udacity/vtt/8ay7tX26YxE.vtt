WEBVTT
Kind: captions
Language: en

00:00:00.630 --> 00:00:03.310
Now that we know a little bit about manipulating data,

00:00:03.310 --> 00:00:06.480
why don't we talk about how we'll store and reference it using Pandas.

00:00:07.490 --> 00:00:11.510
Data in Pandas is often contained in a structure called a data frame.

00:00:11.510 --> 00:00:15.730
A data frame is a two dimensional labeled data structure with columns which can

00:00:15.730 --> 00:00:17.700
be different types if necessary.

00:00:17.700 --> 00:00:25.121
For example, types like string, int, float, or Boolean.

00:00:26.240 --> 00:00:29.690
You can think of a data frame as being similar to an Excel spreadsheet.

00:00:29.690 --> 00:00:32.360
We'll talk about making data frames in a second.

00:00:32.360 --> 00:00:35.410
For now, here's what an example data frame might look like,

00:00:35.410 --> 00:00:38.790
using data describing passengers on the Titanic and whether or

00:00:38.790 --> 00:00:41.430
not they survived the Titanic's tragic collision with an iceberg.

00:00:42.510 --> 00:00:45.220
You'll be using this very data set for project number one.

00:00:45.220 --> 00:00:47.580
Note that there are numerous different columns.

00:00:47.580 --> 00:00:51.290
Name, age, fare, and survived.

00:00:51.290 --> 00:00:54.050
And that these columns all have different data types.

00:00:54.050 --> 00:00:55.030
Age is all integers.

00:00:55.030 --> 00:00:56.830
Survived is all Boolean, et cetera.

00:00:58.170 --> 00:01:00.530
There are also some not a number entries.

00:01:00.530 --> 00:01:03.470
This is what happens when we don't specify a value.

00:01:03.470 --> 00:01:05.630
How would we go about making this data frame.

00:01:05.630 --> 00:01:09.900
First, I'll create a Python dictionary called d where each key is the name of

00:01:09.900 --> 00:01:14.140
one of my columns and the corresponding value is a Python series where I

00:01:14.140 --> 00:01:17.900
first pass in an array with the values for the actual data frame and

00:01:17.900 --> 00:01:20.260
then an array of indexes where I want those values to go.

00:01:22.410 --> 00:01:26.570
And notice that in the case of fare where there is a not a number value, I only

00:01:26.570 --> 00:01:31.360
provide three actual values, but then I provide the three corresponding indices.

00:01:31.360 --> 00:01:34.110
Once I've created this dictionary, I can pass it as an argument to

00:01:34.110 --> 00:01:37.120
the DataFrame function to create my actual data frame.

00:01:37.120 --> 00:01:38.240
Here I'll call that data frame df.

00:01:38.240 --> 00:01:42.180
You'll see that the data frame we've printed here matches the one that we had on

00:01:42.180 --> 00:01:43.510
the tablet earlier in this lesson.

