WEBVTT
Kind: captions
Language: en

00:00:00.210 --> 00:00:01.810
Let's quickly review the difference between the

00:00:01.810 --> 00:00:03.960
Control plane and the Data plane. The

00:00:03.960 --> 00:00:07.490
control plane is the logic that controls

00:00:07.490 --> 00:00:11.340
forwarding behavior. Examples of control plane functions include

00:00:11.340 --> 00:00:14.300
routing protocols as well as logic for

00:00:14.300 --> 00:00:18.290
configuring network middle boxes. Now, a routing protocol

00:00:18.290 --> 00:00:21.660
might compute shortest paths or a topology.

00:00:21.660 --> 00:00:25.550
But ultimately, the results of such computations must

00:00:25.550 --> 00:00:27.650
be installed in switches that actually do

00:00:27.650 --> 00:00:30.280
the forwarding. The forwarding table themselves and

00:00:30.280 --> 00:00:34.590
specifically the actions associated with forwarding traffic

00:00:34.590 --> 00:00:38.360
according to the Control plane logic is

00:00:38.360 --> 00:00:41.370
what constitutes the data plane. So examples

00:00:41.370 --> 00:00:45.160
of data plane function include forwarding packets

00:00:45.160 --> 00:00:50.530
at the IP layer, and doing things like switching at layer two. So to reiterate,

00:00:50.530 --> 00:00:53.720
routing protocol functions that compute the paths

00:00:53.720 --> 00:00:56.990
are control plane functions. Where as, the act

00:00:56.990 --> 00:01:00.210
of actually taking a packet, on an input

00:01:00.210 --> 00:01:03.660
port, and forwarding it, to an output port,

00:01:03.660 --> 00:01:08.190
is a data plane function. So why is separating the data and control planes a

00:01:08.190 --> 00:01:12.290
good idea? The first reason, is independent evolution

00:01:12.290 --> 00:01:16.050
and development. Thus, software control of the network,

00:01:16.050 --> 00:01:19.700
can involve independently of the network hardware.

00:01:19.700 --> 00:01:21.800
The second reason that separating data and control

00:01:21.800 --> 00:01:27.298
plan is a good idea is the opportunity to control the network behavior from a

00:01:27.298 --> 00:01:31.100
high-level software program. Controlling the network from

00:01:31.100 --> 00:01:34.690
a high-level program in theory allows network operators

00:01:34.690 --> 00:01:38.650
to debug and check network behavior more easily.

00:01:38.650 --> 00:01:41.360
Then in the status quo, where network behavior

00:01:41.360 --> 00:01:45.100
is determined by the distributed low level

00:01:45.100 --> 00:01:48.830
configuration across hundreds of switches and routers.

00:01:48.830 --> 00:01:50.660
The separation of data and control provides

00:01:50.660 --> 00:01:53.890
opportunities for better network management and data

00:01:53.890 --> 00:01:56.450
centers by facilitating such network tasks as

00:01:56.450 --> 00:01:59.310
virtual machine migration to adapt to fluctuating

00:01:59.310 --> 00:02:03.200
network demands. In Routing, the separation of

00:02:03.200 --> 00:02:06.490
data and control provides more control over

00:02:06.490 --> 00:02:13.620
decision logic. In Enterprise networks, SDN provides the ability to write

00:02:13.620 --> 00:02:16.830
security applications such as applications

00:02:16.830 --> 00:02:20.010
that manage network access control. In

00:02:20.010 --> 00:02:25.320
Research networks, the separation of data and control. Effectively allows to

00:02:25.320 --> 00:02:28.220
virtualize the network, so that, research

00:02:28.220 --> 00:02:31.670
networks and experimental protocols can co-exist

00:02:31.670 --> 00:02:35.970
with production networks on the same, underlying network hardware.

