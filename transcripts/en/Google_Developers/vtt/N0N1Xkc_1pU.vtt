WEBVTT
Kind: captions
Language: en

00:00:08.640 --> 00:00:10.800
You need to show a
collection of places.

00:00:10.800 --> 00:00:13.140
And at first, it seems
pretty stock standard.

00:00:13.140 --> 00:00:15.670
Just throw together a
bunch of place names,

00:00:15.670 --> 00:00:17.390
and you're done, right?

00:00:17.390 --> 00:00:18.890
It's not that simple.

00:00:18.890 --> 00:00:21.500
I'm Ankur Kotwal, and I'm
going to show you two ways

00:00:21.500 --> 00:00:22.720
to display such collections.

00:00:26.130 --> 00:00:28.810
First is on the map itself.

00:00:28.810 --> 00:00:32.420
Here, we remove the UI
and let the map markers

00:00:32.420 --> 00:00:34.790
be the primary point
of interaction.

00:00:34.790 --> 00:00:37.610
This makes for a very
immersive experience.

00:00:37.610 --> 00:00:41.770
However, it's only effective
if the markers fit comfortably

00:00:41.770 --> 00:00:43.430
on one screen.

00:00:43.430 --> 00:00:45.150
If the user has
to zoom or scroll,

00:00:45.150 --> 00:00:48.890
the emphasis of your
collection is lost.

00:00:48.890 --> 00:00:51.470
For example, train
stations near me

00:00:51.470 --> 00:00:54.600
works well since the
result are co-located.

00:00:54.600 --> 00:00:58.260
So what should you do about the
location if they're spread out?

00:00:58.260 --> 00:01:02.960
Well, you could show a
list with map thumbnails.

00:01:02.960 --> 00:01:05.680
Is that even possible, is
what I hear you saying.

00:01:05.680 --> 00:01:08.340
How can you show multiple
maps at the same time?

00:01:08.340 --> 00:01:09.160
It is possible.

00:01:09.160 --> 00:01:11.920
The maps API for Android
offers an ideal mode

00:01:11.920 --> 00:01:13.340
for such scenarios.

00:01:13.340 --> 00:01:14.980
It's called Lite mode.

00:01:14.980 --> 00:01:18.240
Lite mode provides a static
map, effectively just

00:01:18.240 --> 00:01:20.480
the image of a map
without the ability

00:01:20.480 --> 00:01:22.440
to pan or tilt the camera.

00:01:22.440 --> 00:01:26.880
This limited functionality,
however, comes with a huge win.

00:01:26.880 --> 00:01:29.810
It's super fast,
uses less memory,

00:01:29.810 --> 00:01:31.620
and you still get
click listeners,

00:01:31.620 --> 00:01:33.560
markers, and polylines.

00:01:33.560 --> 00:01:36.360
Lite mode makes it possible
to show lists of maps.

00:01:36.360 --> 00:01:39.705
They're just images, so you
can instantiate many of these.

00:01:39.705 --> 00:01:42.455
Best of all, enabling
Lite mode is simple.

00:01:42.455 --> 00:01:47.680
On creation, simply specify Lite
mode in the Google Maps options

00:01:47.680 --> 00:01:51.190
object or add the XML
property in your layouts.

00:01:51.190 --> 00:01:53.790
At some point, you may need
to replace the Lite mode map

00:01:53.790 --> 00:01:55.450
with the fully interactive one.

00:01:55.450 --> 00:01:57.880
In that situation, you
can gracefully transition

00:01:57.880 --> 00:02:00.590
into a regular map based
on the touch event.

00:02:00.590 --> 00:02:02.970
Here we're using Android
Lollipop transitions

00:02:02.970 --> 00:02:04.705
to navigate across screens.

00:02:04.705 --> 00:02:07.980
For older versions of
Android, a reasonable fallback

00:02:07.980 --> 00:02:11.840
is to create a map fragment and
animate it into place like so.

00:02:11.840 --> 00:02:14.550
By doing this, we're able
to mix and match Lite mode

00:02:14.550 --> 00:02:17.160
and regular maps seamlessly.

00:02:17.160 --> 00:02:20.480
I hope you've now seen
the light, Lite mode that

00:02:20.480 --> 00:02:24.180
is, which enables you to show
multiple maps simultaneously

00:02:24.180 --> 00:02:26.360
while staying performant.

00:02:26.360 --> 00:02:29.410
Check out more info
about Lite mode here.

00:02:29.410 --> 00:02:31.140
I'm Ankur Kotwal,
and I look forward

00:02:31.140 --> 00:02:35.620
to seeing your amazing maps.

00:02:35.620 --> 00:02:38.070
[MUSIC PLAYING]

