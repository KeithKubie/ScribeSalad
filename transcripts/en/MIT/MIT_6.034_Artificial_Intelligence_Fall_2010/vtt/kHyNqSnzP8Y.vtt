WEBVTT
Kind: captions
Language: en

00:00:15.584 --> 00:00:18.820
PATRICK WINSTON: I have
extremely bad news.

00:00:18.820 --> 00:00:21.690
Halloween falls this
year on a Sunday.

00:00:21.690 --> 00:00:25.880
But we in 6.034 refuse to
suffer the slings and arrows

00:00:25.880 --> 00:00:27.890
of outrageous fortune.

00:00:27.890 --> 00:00:30.291
So we've decided that
Halloween is today,

00:00:30.291 --> 00:00:33.029
as far 6.034 is concerned.

00:00:33.029 --> 00:00:34.695
Kenny, could you give
me a hand, please?

00:00:43.910 --> 00:00:47.305
If you could take that
and put it over there.

00:00:47.305 --> 00:00:49.002
STUDENT: [INAUDIBLE]?

00:00:49.002 --> 00:00:49.960
PATRICK WINSTON: Mm hm.

00:00:49.960 --> 00:00:51.210
Just give it to them.

00:00:54.120 --> 00:00:56.990
You can take as much
of this as you like.

00:00:56.990 --> 00:00:59.655
The rest will be given to that
herd of stampeding freshman

00:00:59.655 --> 00:01:00.905
that comes in after.

00:01:16.039 --> 00:01:21.000
It's a cornucopia
of legal drugs.

00:01:21.000 --> 00:01:24.144
Chocolate does produce
a kind of mild high,

00:01:24.144 --> 00:01:30.890
and I recommend it before
quizzes and giving lectures.

00:01:30.890 --> 00:01:33.754
I have a friend of mine, one of
the Nobel laureates in biology,

00:01:33.754 --> 00:01:36.060
always eats chocolate
before he lectures.

00:01:36.060 --> 00:01:38.750
Gives him a little edge.

00:01:38.750 --> 00:01:41.930
Otherwise, he'll be flat.

00:01:41.930 --> 00:01:47.265
So I recommend it.

00:01:54.200 --> 00:01:55.848
It will take, I
suppose, a little while

00:01:55.848 --> 00:01:59.020
to digest that neural net stuff.

00:01:59.020 --> 00:02:02.891
A little richer than
usual in mathematics.

00:02:02.891 --> 00:02:04.974
So today, we're going to
talk about another effort

00:02:04.974 --> 00:02:06.440
at mimicking biology.

00:02:09.217 --> 00:02:11.550
This is easy stuff.

00:02:11.550 --> 00:02:14.224
It's just conceptual.

00:02:14.224 --> 00:02:15.890
And you won't see
this on the next quiz.

00:02:15.890 --> 00:02:17.265
But you will see
it on the final.

00:02:17.265 --> 00:02:19.440
It's one of those quiz
five type problems,

00:02:19.440 --> 00:02:23.690
where I ask you questions to
see if you were here and awake.

00:02:23.690 --> 00:02:27.250
So a typical question
might be, Professor Winston

00:02:27.250 --> 00:02:31.540
is a creationist, or
something like that.

00:02:31.540 --> 00:02:34.290
Not too hard to answer.

00:02:34.290 --> 00:02:41.067
In any event, if it's been hard
to develop a real understanding

00:02:41.067 --> 00:02:42.650
of intelligence,
occasionally the hope

00:02:42.650 --> 00:02:47.152
is that by mimicking biology
or mimicking evolution,

00:02:47.152 --> 00:02:53.640
you can circumnavigate
all the problems.

00:02:53.640 --> 00:02:55.306
And one of those
kinds of efforts

00:02:55.306 --> 00:02:59.740
is ever to imitate evolution.

00:02:59.740 --> 00:03:02.035
So we're going to talk
today about so called

00:03:02.035 --> 00:03:06.840
genetic algorithms,
which are naive attempts

00:03:06.840 --> 00:03:09.890
to mimic naive evolution.

00:03:09.890 --> 00:03:15.357
Now, I realize that most MIT
students have a basic grasp

00:03:15.357 --> 00:03:17.910
of sexual reproduction.

00:03:17.910 --> 00:03:20.192
But I've found in
talking with students

00:03:20.192 --> 00:03:23.234
that many times, they're
a little fuzzy on some

00:03:23.234 --> 00:03:24.270
of the details.

00:03:24.270 --> 00:03:27.466
So let's start off by reflecting
a little bit about how

00:03:27.466 --> 00:03:29.320
that works.

00:03:29.320 --> 00:03:34.630
So let's see, we
need pink and blue.

00:03:34.630 --> 00:03:39.400
And here's our cell,
and here is its nucleus,

00:03:39.400 --> 00:03:42.590
and here are mommy and
daddy's chromosomes.

00:03:42.590 --> 00:03:45.770
We'll just pretend
there's one pair.

00:03:45.770 --> 00:03:53.440
Now ordinarily, in ordinary cell
division, you get two cells.

00:03:53.440 --> 00:03:57.660
Both have a nucleus, and the
process of producing them

00:03:57.660 --> 00:04:01.310
involves the duplication
of those chromosomes.

00:04:01.310 --> 00:04:06.890
And then one pair ends up
in each of the child cells,

00:04:06.890 --> 00:04:08.780
and that's all there is to that.

00:04:08.780 --> 00:04:10.030
That's mitosis.

00:04:16.360 --> 00:04:19.846
But then, when we talk
about reproduction,

00:04:19.846 --> 00:04:23.530
it's more complicated
because those chromosomes

00:04:23.530 --> 00:04:28.520
get all twisted up, and they
break, and they recombine.

00:04:28.520 --> 00:04:31.690
So when we talk about
the cells that split off

00:04:31.690 --> 00:04:35.885
from one of these
germ cells, it's

00:04:35.885 --> 00:04:40.576
no longer appropriate to
talk about the pink one

00:04:40.576 --> 00:04:44.062
and the blue one, because
the pink one and the blue one

00:04:44.062 --> 00:04:45.280
are all mixed up.

00:04:45.280 --> 00:04:49.640
So you get two chromosomes
here and two here.

00:04:49.640 --> 00:04:52.920
But through some miracle
of nature, which has always

00:04:52.920 --> 00:04:57.664
amazed me, these two
cells split, in turn,

00:04:57.664 --> 00:05:00.100
into four cells altogether.

00:05:05.340 --> 00:05:08.688
And each of those four
cells at the bottom

00:05:08.688 --> 00:05:11.056
gets one of the
chromosomes that was

00:05:11.056 --> 00:05:16.250
produced by the twisting up
of the rope and recombination.

00:05:16.250 --> 00:05:23.090
Then, along comes
a special occasion.

00:05:23.090 --> 00:05:29.390
And now we can think of this
as being a blue one and this

00:05:29.390 --> 00:05:31.480
as being a pink one.

00:05:31.480 --> 00:05:38.440
And they come together, and
you get a new person, like so.

00:05:38.440 --> 00:05:41.604
Note that your mother
and father's chromosomes

00:05:41.604 --> 00:05:43.335
are never, never recombined.

00:05:43.335 --> 00:05:47.700
It's your grandparents
chromosomes that recombine.

00:05:47.700 --> 00:05:48.995
So that's what it's like.

00:05:48.995 --> 00:05:50.536
And the main thing
to note about this

00:05:50.536 --> 00:05:51.660
is-- well, a couple things.

00:05:51.660 --> 00:05:57.260
If you happen to be female,
this part of the process--

00:05:57.260 --> 00:06:01.700
this part over here-- took
place before you were born.

00:06:01.700 --> 00:06:05.584
If you happen to be male, it's
going on right now as we speak,

00:06:05.584 --> 00:06:07.400
which probably
explains something.

00:06:07.400 --> 00:06:10.930
But in any event, it's
going on right now.

00:06:10.930 --> 00:06:14.360
But whenever it
goes on, there are

00:06:14.360 --> 00:06:18.200
lots of opportunities
for throwing dice.

00:06:18.200 --> 00:06:20.656
So God threw all
the dice before you

00:06:20.656 --> 00:06:23.540
were born, if you
happen to be a female,

00:06:23.540 --> 00:06:26.190
in this part of the
process over here.

00:06:26.190 --> 00:06:28.302
Then, of course, more
dice got thrown here

00:06:28.302 --> 00:06:30.872
when the decision
was made about which

00:06:30.872 --> 00:06:35.280
particular cells got to fuse
to form a new individual.

00:06:35.280 --> 00:06:38.890
So I want to beat on this
idea of lots of choice.

00:06:38.890 --> 00:06:40.996
When we talk about
genetic algorithms,

00:06:40.996 --> 00:06:44.409
and we talk about nature, there
are lots of choices in there.

00:06:44.409 --> 00:06:46.689
And that means there
are lots of choices

00:06:46.689 --> 00:06:50.483
to intervene, to screw around,
to make things work out

00:06:50.483 --> 00:06:52.159
the way you want.

00:06:52.159 --> 00:06:54.120
But in any event, there we are.

00:06:54.120 --> 00:06:58.040
That's the basic idea, and it
all starts with chromosomes.

00:06:58.040 --> 00:07:00.084
So we could think of
implementing something

00:07:00.084 --> 00:07:03.590
that imitates that
with the ACTG stuff

00:07:03.590 --> 00:07:07.030
that you learned all
about in Seminar 1.

00:07:07.030 --> 00:07:08.480
But we're computer scientists.

00:07:08.480 --> 00:07:10.616
We don't like Base 4.

00:07:10.616 --> 00:07:11.240
We like Base 2.

00:07:11.240 --> 00:07:14.714
So I'm going to just suggest
that our chromosomes are binary

00:07:14.714 --> 00:07:17.870
in this system that
we're going to build.

00:07:21.230 --> 00:07:23.590
So that might be a chromosome.

00:07:23.590 --> 00:07:26.280
And it doesn't
have to be binary.

00:07:26.280 --> 00:07:27.890
It can be symbolic
for fall I care.

00:07:27.890 --> 00:07:30.613
But it's just some
string of things

00:07:30.613 --> 00:07:35.390
that determine how the
ultimate system behaves.

00:07:35.390 --> 00:07:39.665
So it all starts out, then,
with some of these chromosomes,

00:07:39.665 --> 00:07:46.840
some of these
simulated chromosomes,

00:07:46.840 --> 00:07:51.070
simulated,
simplified, and naive.

00:07:51.070 --> 00:07:55.570
And there's a population
of chromosomes.

00:07:55.570 --> 00:07:57.145
The population of
chromosomes-- it

00:07:57.145 --> 00:08:00.010
might be subject to a
little bit of mutation.

00:08:00.010 --> 00:08:05.379
That is to say, a zero becomes
a one, or a one becomes a zero.

00:08:05.379 --> 00:08:06.170
That happens a lot.

00:08:06.170 --> 00:08:07.711
That mutation stuff
happens over here

00:08:07.711 --> 00:08:09.940
when things get twisted
up and recombined.

00:08:09.940 --> 00:08:12.020
There are copying
errors and stuff.

00:08:12.020 --> 00:08:13.600
Cosmic rays hit it all the time.

00:08:13.600 --> 00:08:15.511
All sorts of reasons
why there might

00:08:15.511 --> 00:08:18.090
be a single point of change.

00:08:18.090 --> 00:08:21.970
That produces the
mutation effect.

00:08:21.970 --> 00:08:32.360
So here, we have a population
that starts off over here.

00:08:32.360 --> 00:08:34.929
And some of those things
are subject to mutation.

00:08:37.976 --> 00:08:41.429
And you'll note, here's a
whole bunch of choice already.

00:08:41.429 --> 00:08:45.610
How many of these mutations
do you allow per chromosome,

00:08:45.610 --> 00:08:48.330
for example?

00:08:48.330 --> 00:08:50.402
How many of the chromosomes
just slip through

00:08:50.402 --> 00:08:51.280
without any mutation?

00:08:51.280 --> 00:08:53.640
Those are choices you can make.

00:08:53.640 --> 00:08:55.334
Once you've made
those choices, then we

00:08:55.334 --> 00:08:57.070
have the crossover phenomenon.

00:09:01.990 --> 00:09:05.600
Let's identify one of these
guys as the pink one and one

00:09:05.600 --> 00:09:08.820
of these guys as the blue one.

00:09:08.820 --> 00:09:12.380
And so now we have the
pink one cruised along

00:09:12.380 --> 00:09:14.730
as well as the blue one.

00:09:14.730 --> 00:09:17.130
The pink one and the blue
one cross and produce

00:09:17.130 --> 00:09:20.820
a new chromosome,
just like in nature.

00:09:20.820 --> 00:09:23.720
So we take the front part of
one, back part of the other,

00:09:23.720 --> 00:09:26.760
and we fuse them together.

00:09:26.760 --> 00:09:32.470
And some may slip by without
any of that, like so.

00:09:32.470 --> 00:09:36.247
Well, these things are meant to
be combined in pairs, like so,

00:09:36.247 --> 00:09:38.942
but they may not have
any crossover in them.

00:09:38.942 --> 00:09:40.400
So you have another
set of choices.

00:09:40.400 --> 00:09:44.790
How many crossovers do you
allow per recombination?

00:09:44.790 --> 00:09:47.190
You get another set of choices.

00:09:47.190 --> 00:09:53.280
So now we've got a population
of modified chromosomes

00:09:53.280 --> 00:09:54.630
through mutation and crossover.

00:09:54.630 --> 00:09:58.359
So the next thing to do
is we have the genotype

00:09:58.359 --> 00:10:00.520
to phenotype transition.

00:10:00.520 --> 00:10:03.660
That is to say the chromosome
determines the individual.

00:10:03.660 --> 00:10:05.250
It may be a person.

00:10:05.250 --> 00:10:06.030
It may be a cow.

00:10:06.030 --> 00:10:07.290
It may be a computer program.

00:10:07.290 --> 00:10:08.830
I don't care what.

00:10:08.830 --> 00:10:12.150
But that code down
there has to be

00:10:12.150 --> 00:10:15.670
interpreted to be a something.

00:10:15.670 --> 00:10:17.734
So it is the
genotype, and it has

00:10:17.734 --> 00:10:20.104
to be interpreted to
be something which

00:10:20.104 --> 00:10:25.830
is the phenotype, the thing
that the stuff down there is

00:10:25.830 --> 00:10:26.810
encoding for.

00:10:26.810 --> 00:10:29.955
So here, we have a
bunch of individuals.

00:10:32.840 --> 00:10:34.751
Now, each of those
individuals, because they

00:10:34.751 --> 00:10:36.629
have varying
chromosomal composition,

00:10:36.629 --> 00:10:39.480
will have a different fitness.

00:10:42.380 --> 00:10:45.152
So these fitnesses
might be-- well,

00:10:45.152 --> 00:10:46.990
who knows how they
might be scored.

00:10:46.990 --> 00:10:48.362
But we're computer scientists.

00:10:48.362 --> 00:10:49.570
We might as well use numbers.

00:10:49.570 --> 00:10:51.551
So maybe this guy's
fitness is 88,

00:10:51.551 --> 00:10:57.359
and this guy's fitness
is 77, and so on.

00:10:57.359 --> 00:10:58.650
So now that we've got fitness--

00:11:01.290 --> 00:11:02.837
by the way, notice
all the choices

00:11:02.837 --> 00:11:04.845
involved there-- choice
of how you interpret

00:11:04.845 --> 00:11:08.330
the genotype, choice about
how the phenotype produces

00:11:08.330 --> 00:11:09.610
the fitness.

00:11:09.610 --> 00:11:13.152
And now we have a choice
about how the fitness produces

00:11:13.152 --> 00:11:19.976
a probability, like 0.8
and 0.1, or something

00:11:19.976 --> 00:11:23.406
like that--
probability of survival

00:11:23.406 --> 00:11:25.333
into the next generation.

00:11:25.333 --> 00:11:27.124
So now, once we've got
those probabilities,

00:11:27.124 --> 00:11:28.840
we actually have selection.

00:11:32.250 --> 00:11:35.309
And those phenotypes out
there produce genotypes,

00:11:35.309 --> 00:11:39.404
a new set of
chromosomes, and that

00:11:39.404 --> 00:11:43.830
completes our loop that
goes back in there.

00:11:43.830 --> 00:11:45.630
And so that's the
new generation.

00:11:51.650 --> 00:11:54.440
Sounds simple.

00:11:54.440 --> 00:11:56.540
So if you're going to
make this work, of course,

00:11:56.540 --> 00:11:58.205
you have a million
choices, as I'm

00:11:58.205 --> 00:11:59.950
going to emphasize
over and over again.

00:11:59.950 --> 00:12:04.261
And one of your choices
is, for example, how

00:12:04.261 --> 00:12:06.570
do you compute the
probability of survival

00:12:06.570 --> 00:12:10.440
to the next generation
given the fitness?

00:12:10.440 --> 00:12:13.440
So we have to go, somehow,
from numbers like these

00:12:13.440 --> 00:12:16.830
to probabilities like those.

00:12:16.830 --> 00:12:20.270
So I'm going to talk about
several ways of doing it.

00:12:20.270 --> 00:12:21.920
None of them are magic.

00:12:21.920 --> 00:12:24.420
None of them was specified
and stipulated by God

00:12:24.420 --> 00:12:26.110
as the right way.

00:12:26.110 --> 00:12:28.630
But they have increasingly
good properties with respect

00:12:28.630 --> 00:12:31.950
to this kind of processing.

00:12:31.950 --> 00:12:35.806
So the simplest thing
you can do-- idea number

00:12:35.806 --> 00:12:39.624
one for computing
the-- see, what you do

00:12:39.624 --> 00:12:41.946
is you get this whole
bag of individuals,

00:12:41.946 --> 00:12:43.820
and you have to decide
who's going to survive

00:12:43.820 --> 00:12:45.800
to the next generation.

00:12:45.800 --> 00:12:48.208
So at each step,
everything in the bank

00:12:48.208 --> 00:12:51.380
has a probability of being
the one you pick out and put

00:12:51.380 --> 00:12:52.370
in the next generation.

00:12:52.370 --> 00:12:54.701
So at any step, the sum
of the probabilities

00:12:54.701 --> 00:12:57.922
for each of those guys
is 1, because that's

00:12:57.922 --> 00:12:59.330
how high probability works.

00:12:59.330 --> 00:13:02.759
The probability of a
complete set, added all up,

00:13:02.759 --> 00:13:05.700
is probability of 1.

00:13:05.700 --> 00:13:08.238
So one thing you
can do is you can

00:13:08.238 --> 00:13:10.318
say that the
probability that you're

00:13:10.318 --> 00:13:14.110
going to draw individual
i is equal to,

00:13:14.110 --> 00:13:18.710
or maybe is proportional to,
the fitness of that individual.

00:13:24.467 --> 00:13:25.925
I haven't completed
the expression,

00:13:25.925 --> 00:13:29.169
so it's not a probability
yet, because some piece of it

00:13:29.169 --> 00:13:31.010
won't add up to 1.

00:13:31.010 --> 00:13:34.370
How can I ensure that
it will add up to 1?

00:13:34.370 --> 00:13:34.940
That's easy.

00:13:34.940 --> 00:13:36.280
Right.

00:13:36.280 --> 00:13:39.490
All I have to do is
divide by the sum

00:13:39.490 --> 00:13:43.180
of the fitnesses over i.

00:13:43.180 --> 00:13:45.490
So there's a probability
measure that's

00:13:45.490 --> 00:13:46.690
produced from the fitnesses.

00:13:46.690 --> 00:13:47.549
Yeah.

00:13:47.549 --> 00:13:49.882
STUDENT: You need to make
sure that the fitnesses aren't

00:13:49.882 --> 00:13:50.338
negative.

00:13:50.338 --> 00:13:51.780
PATRICK WINSTON: Have to make
sure the fitnesses are what?

00:13:51.780 --> 00:13:52.712
STUDENT: Aren't negative.

00:13:52.712 --> 00:13:54.216
PATRICK WINSTON: He
says I have to make

00:13:54.216 --> 00:13:55.674
sure the fitnesses
aren't negative.

00:13:55.674 --> 00:13:59.020
Yeah, it would be
embarrassing if they were.

00:13:59.020 --> 00:14:01.465
So we'll just truncate
anything like that as 0.

00:14:01.465 --> 00:14:04.153
You've got a lot of choice how
you can calculate the fitness.

00:14:04.153 --> 00:14:06.569
And maybe you will produce
negative numbers, in which case

00:14:06.569 --> 00:14:08.964
you have to think a
little bit more about it.

00:14:11.570 --> 00:14:13.410
So now, what about an example?

00:14:13.410 --> 00:14:16.880
Well, I'm going to
show you an example.

00:14:16.880 --> 00:14:19.450
Why don't I show
you the example.

00:14:19.450 --> 00:14:21.042
What we're going to
do is we're going

00:14:21.042 --> 00:14:22.671
to have a genetic
algorithm that looks

00:14:22.671 --> 00:14:24.615
for an optimal value in a space.

00:14:27.870 --> 00:14:29.836
And there's the space.

00:14:29.836 --> 00:14:32.554
Now, you'll notice it's
a bunch of contour lines,

00:14:32.554 --> 00:14:34.840
a bunch of hills in that space.

00:14:34.840 --> 00:14:38.170
Let me show you how
that space was produced.

00:14:38.170 --> 00:14:42.076
The fitness is a
function of x and y,

00:14:42.076 --> 00:14:48.898
and it's equal to the sine of
some constant times x, quantity

00:14:48.898 --> 00:14:55.545
squared, times the sine of some
constant y, quantity squared,

00:14:55.545 --> 00:15:01.910
e to the plus x plus y
divided by some constant.

00:15:01.910 --> 00:15:04.619
So sigma and omega
there are just in there

00:15:04.619 --> 00:15:09.890
so that it kind of makes a
nice picture for demonstration.

00:15:09.890 --> 00:15:10.790
So there's a space.

00:15:10.790 --> 00:15:12.748
And clearly, where you
want to be in this space

00:15:12.748 --> 00:15:16.670
is in the upper
right-hand corner.

00:15:16.670 --> 00:15:18.160
That's the optimal value.

00:15:18.160 --> 00:15:21.300
But we have a genetic algorithm
that doesn't know anything.

00:15:21.300 --> 00:15:26.950
All it knows how to do
is mutate and cross over.

00:15:26.950 --> 00:15:30.130
So it's going to start off
with a population of 1.

00:15:30.130 --> 00:15:33.130
It's a little red dot
down in the lower left.

00:15:33.130 --> 00:15:36.080
So here's how it's
going to evolve.

00:15:36.080 --> 00:15:38.796
There's going to be s
chromosome consisting

00:15:38.796 --> 00:15:43.844
of two numbers, an x
number and a y number,

00:15:43.844 --> 00:15:47.450
like, say, 0.3 and 0.7.

00:15:47.450 --> 00:15:53.839
Here's another one, which
might be 0.6 and 0.2.

00:15:53.839 --> 00:15:55.214
So the mutation
operator is going

00:15:55.214 --> 00:15:58.720
to take one of those values
and change it a little bit.

00:15:58.720 --> 00:16:03.980
So it might say, well, we'll
take 3, and we'll make it 0.2.

00:16:03.980 --> 00:16:05.534
And the crossover
operation is going

00:16:05.534 --> 00:16:08.850
to exchange the x and
y values of pairs.

00:16:08.850 --> 00:16:11.343
So if we have a
crossover here, then what

00:16:11.343 --> 00:16:16.271
we're going to get out
from this one-- well,

00:16:16.271 --> 00:16:18.390
we're going to get out a
combination of these two.

00:16:22.970 --> 00:16:31.171
And it's going to
look like this.

00:16:31.171 --> 00:16:32.796
Because what we're
going to do is we're

00:16:32.796 --> 00:16:35.909
going to take the x value of
1 and combine it with the y

00:16:35.909 --> 00:16:37.120
value of the other one.

00:16:37.120 --> 00:16:42.050
So this is going to be 0.2--
my mutated value and 0.2--

00:16:42.050 --> 00:16:46.420
and this is going
to be 0.6 and 0.7.

00:16:46.420 --> 00:16:48.660
So that's how my little
genetic algorithm

00:16:48.660 --> 00:16:51.860
heck is going to work.

00:16:51.860 --> 00:16:56.090
So having coded this up, we
can now see how it flows.

00:17:01.000 --> 00:17:04.460
Let's run it 10 generations.

00:17:04.460 --> 00:17:07.565
So the population is rapidly
expanded to some fixed limit.

00:17:07.565 --> 00:17:08.440
I forgot what it is--

00:17:08.440 --> 00:17:10.440
30 or so.

00:17:10.440 --> 00:17:15.260
And we can run that
100 generations.

00:17:15.260 --> 00:17:18.540
And so this seems to be
getting stuck, kind of, right?

00:17:18.540 --> 00:17:20.319
So what's the problem?

00:17:20.319 --> 00:17:21.858
The problem is local maxima.

00:17:21.858 --> 00:17:30.950
This is fundamentally a
hill climbing mechanism.

00:17:30.950 --> 00:17:33.350
Note that I have not included
any crossover so far.

00:17:36.210 --> 00:17:38.379
So if I do have
crossover, then if I've

00:17:38.379 --> 00:17:41.511
got a good x value
and a good y value,

00:17:41.511 --> 00:17:44.855
I can cross them
over and get them

00:17:44.855 --> 00:17:48.370
both in the same situation.

00:17:48.370 --> 00:17:49.870
But nevertheless,
this thing doesn't

00:17:49.870 --> 00:17:51.783
seem to be working very well.

00:17:51.783 --> 00:17:53.635
STUDENT: Professor,
I have a question.

00:17:53.635 --> 00:17:54.561
PATRICK WINSTON: Yeah.

00:17:54.561 --> 00:17:56.303
STUDENT: That picture is
just the contour lines

00:17:56.303 --> 00:17:56.660
of that function.

00:17:56.660 --> 00:17:58.570
PATRICK WINSTON: The contour
lines of that function.

00:17:58.570 --> 00:18:00.210
So the reason you see
a lot of contour lines

00:18:00.210 --> 00:18:01.695
in the upper right
is because it gets

00:18:01.695 --> 00:18:04.361
much higher because there's that
exponential term that increases

00:18:04.361 --> 00:18:06.430
as you go up to the right.

00:18:06.430 --> 00:18:11.060
So I don't know, it looks--
let's put some crossover in

00:18:11.060 --> 00:18:12.500
and repeat the experience.

00:18:15.960 --> 00:18:24.019
We'll run 100 generations.

00:18:24.019 --> 00:18:24.560
I don't know.

00:18:24.560 --> 00:18:27.440
It just doesn't seem
to be going anywhere.

00:18:27.440 --> 00:18:31.760
Sometimes, it'll go right
to the global maximum.

00:18:31.760 --> 00:18:33.120
Sometimes it takes a long time.

00:18:33.120 --> 00:18:34.953
It's got a random number
generator in there,

00:18:34.953 --> 00:18:37.610
so I have no control over it.

00:18:37.610 --> 00:18:39.520
So it's going to get there.

00:18:39.520 --> 00:18:41.068
I couldn't tell
whether the crossover

00:18:41.068 --> 00:18:43.236
was doing any good or not.

00:18:43.236 --> 00:18:47.030
Oh, well, here's one.

00:18:47.030 --> 00:18:49.970
Let's make this a little
bit more complicated.

00:18:49.970 --> 00:18:51.220
Suppose that's the space.

00:19:02.767 --> 00:19:04.308
Now it's going to
be in real trouble,

00:19:04.308 --> 00:19:06.140
because it'll never
get across that moat.

00:19:09.280 --> 00:19:13.320
You know, you would think
that it would climb up

00:19:13.320 --> 00:19:16.100
to the x maximum or
to the y maximum,

00:19:16.100 --> 00:19:19.720
but it's not going
to do very well.

00:19:19.720 --> 00:19:21.136
Even with crossover,
it's just not

00:19:21.136 --> 00:19:22.680
going to do very
well, because it's

00:19:22.680 --> 00:19:24.130
climbing up those local hills.

00:19:24.130 --> 00:19:26.186
Anybody got an idea
about one simple thing

00:19:26.186 --> 00:19:30.100
we could do to make
it work better?

00:19:30.100 --> 00:19:34.735
Yeah, you could increase
step size, right?

00:19:34.735 --> 00:19:36.110
Let me you see if
that will help.

00:19:49.360 --> 00:19:51.750
You know, even that
doesn't seem to help.

00:19:51.750 --> 00:19:54.366
So we have to conclude--
do we conclude

00:19:54.366 --> 00:19:55.520
that this is a bad idea?

00:19:55.520 --> 00:19:58.170
Well, we don't have to
conclude it's a bad idea yet,

00:19:58.170 --> 00:20:04.420
because we may just look at
it and ask why five times.

00:20:04.420 --> 00:20:07.500
And we might ask,
well, maybe we can

00:20:07.500 --> 00:20:10.392
get a better mechanism in
there to translate fitness

00:20:10.392 --> 00:20:11.600
into probability of survival.

00:20:14.540 --> 00:20:17.148
Using this formula is
kind of strange, anyway,

00:20:17.148 --> 00:20:20.244
because suppose temperature
is one of your fitness

00:20:20.244 --> 00:20:20.910
characteristics.

00:20:20.910 --> 00:20:22.520
The hotter, the better.

00:20:22.520 --> 00:20:24.608
Then the ratio of
the probability

00:20:24.608 --> 00:20:27.278
that you'll survive
versus the person

00:20:27.278 --> 00:20:30.142
next to you, that
ratio will depend on

00:20:30.142 --> 00:20:32.266
whether you're measuring
the temperature in Celsius

00:20:32.266 --> 00:20:35.680
or Fahrenheit, right?

00:20:35.680 --> 00:20:37.420
Because you've
shifted the origin

00:20:37.420 --> 00:20:39.850
that shifts the
ratio that shifts

00:20:39.850 --> 00:20:41.772
the probability of success.

00:20:41.772 --> 00:20:44.230
So it seems kind of strange to
just take these things right

00:20:44.230 --> 00:20:46.550
straight into probabilities.

00:20:46.550 --> 00:20:49.430
So a better idea--
idea number two--

00:20:49.430 --> 00:20:51.910
is to say, well,
shoot, maybe we don't

00:20:51.910 --> 00:20:55.730
care about what the
actual fitnesses are.

00:20:55.730 --> 00:20:58.295
All we really care
about is the rank order

00:20:58.295 --> 00:21:00.428
of all the candidates.

00:21:00.428 --> 00:21:02.011
So the candidate
with the most fitness

00:21:02.011 --> 00:21:04.112
will have the most
probability of getting

00:21:04.112 --> 00:21:05.770
into the next generation.

00:21:05.770 --> 00:21:07.856
The candidate with the
second most fitness

00:21:07.856 --> 00:21:11.794
will have the second highest
probability, and so on.

00:21:11.794 --> 00:21:14.210
But we're not going to use the
actual fitnesses themselves

00:21:14.210 --> 00:21:16.154
to make the determination.

00:21:16.154 --> 00:21:18.570
Instead, what we're going to
do with this mechanism number

00:21:18.570 --> 00:21:20.390
two-- this is the
rank space method--

00:21:28.670 --> 00:21:29.370
is this.

00:21:29.370 --> 00:21:32.166
We're going to say that the
probability of the highest

00:21:32.166 --> 00:21:35.860
ranking individual of getting
into the next generation

00:21:35.860 --> 00:21:39.720
is some constant P sub c, which,
of course, you can select.

00:21:39.720 --> 00:21:42.350
You have another choice.

00:21:42.350 --> 00:21:45.479
Then, if that guy
doesn't get selected,

00:21:45.479 --> 00:21:48.300
the probability of the second
highest ranking individual

00:21:48.300 --> 00:21:49.938
getting in the
next generation is

00:21:49.938 --> 00:21:53.620
going to be the probability that
that guy didn't get in there.

00:21:53.620 --> 00:21:59.870
That's 1 minus P sub c times
the same probability constant.

00:21:59.870 --> 00:22:02.360
And so you can see
how this is going.

00:22:02.360 --> 00:22:10.220
P3 will be equal to 1 minus P
sub c squared terms P sub c.

00:22:10.220 --> 00:22:16.300
P sub n minus 1
will be equal to 1

00:22:16.300 --> 00:22:24.494
minus that probability constant
to the n minus-- n minus 2

00:22:24.494 --> 00:22:27.370
times P sub c.

00:22:27.370 --> 00:22:30.771
And then there's only
one individual left.

00:22:30.771 --> 00:22:32.521
And then if you got
through all these guys

00:22:32.521 --> 00:22:33.896
and haven't got
anybody selected,

00:22:33.896 --> 00:22:37.260
then you've got to
select the last guy.

00:22:37.260 --> 00:22:40.640
And so the probability you're
going to select the last guy

00:22:40.640 --> 00:22:47.160
is going to be 1 minus P
sub c to the n minus 1.

00:22:47.160 --> 00:22:50.409
So it's a probability
you've missed all those guys

00:22:50.409 --> 00:22:53.300
in the first n minus 1 choices.

00:22:53.300 --> 00:22:55.010
Yeah, it is, honest to God.

00:22:55.010 --> 00:22:58.250
See, this is the probability
that this last guys

00:22:58.250 --> 00:22:59.580
is going to get selected.

00:22:59.580 --> 00:23:01.128
It's not the
probability that it's

00:23:01.128 --> 00:23:05.016
the last guy getting selected,
given that the others haven't

00:23:05.016 --> 00:23:05.970
been select.

00:23:05.970 --> 00:23:08.304
Trust me, it's right.

00:23:08.304 --> 00:23:09.720
Are you thinking
it ought to be 1?

00:23:09.720 --> 00:23:10.592
STUDENT: What?

00:23:10.592 --> 00:23:13.080
PATRICK WINSTON: Were you
thinking it ought to be 1?

00:23:13.080 --> 00:23:17.858
STUDENT: No, I was thinking that
I was wondering why you were re

00:23:17.858 --> 00:23:19.460
rolling the dice, so to speak.

00:23:19.460 --> 00:23:20.700
PATRICK WINSTON: You
are re rolling the dice.

00:23:20.700 --> 00:23:22.038
You've got a
probability each time,

00:23:22.038 --> 00:23:24.630
except for the last time, when,
of course, you have to take it.

00:23:24.630 --> 00:23:25.200
There's nothing left.

00:23:25.200 --> 00:23:26.050
There's no other choice.

00:23:26.050 --> 00:23:27.130
STUDENT: I have a question.

00:23:27.130 --> 00:23:28.713
PATRICK WINSTON:
Yeah, [? Lunnare ?]..

00:23:28.713 --> 00:23:32.337
STUDENT: So when you jump
from P sub 1 to P sub 2,

00:23:32.337 --> 00:23:33.244
that makes sense.

00:23:33.244 --> 00:23:35.453
P sub 2 to P sub 3 you're
saying that the probability

00:23:35.453 --> 00:23:36.994
PATRICK WINSTON:
It's the probability

00:23:36.994 --> 00:23:38.421
depends on the
first two choices.

00:23:38.421 --> 00:23:39.363
STUDENT: Yeah, but
the second choice

00:23:39.363 --> 00:23:41.613
had probability one minus P
sub c times P sub c, not--

00:23:41.613 --> 00:23:43.410
PATRICK WINSTON: Think
about it this way.

00:23:43.410 --> 00:23:46.030
It's the probability you
didn't choose the first two.

00:23:46.030 --> 00:23:48.113
So the probability you
didn't choose the first one

00:23:48.113 --> 00:23:49.127
is one minus P sub c.

00:23:49.127 --> 00:23:51.460
The probability you didn't
choose the next one, as well,

00:23:51.460 --> 00:23:53.994
because you're choosing that
next one with probability P sub

00:23:53.994 --> 00:23:56.385
c, it's the square of it.

00:23:59.180 --> 00:24:00.760
So that might work better.

00:24:00.760 --> 00:24:03.220
Let's give it a shot.

00:24:03.220 --> 00:24:08.516
Let's go back to our
original space choice,

00:24:08.516 --> 00:24:14.800
and we set and switch to
the rank fitness method.

00:24:14.800 --> 00:24:19.200
And we'll run out
100 generations.

00:24:19.200 --> 00:24:21.437
Whoa!

00:24:21.437 --> 00:24:22.270
What happened there?

00:24:22.270 --> 00:24:23.360
That was pretty fast.

00:24:23.360 --> 00:24:24.850
Maybe I used a big step size.

00:24:28.400 --> 00:24:30.150
Yeah, that's a little
bit more reasonable.

00:24:30.150 --> 00:24:33.036
Oops-- what happened?

00:24:33.036 --> 00:24:34.910
It's really getting
stuck on a local maximum.

00:24:39.560 --> 00:24:43.560
So evidently, I've choosed
a constant P sub c such

00:24:43.560 --> 00:24:48.340
that it just drove it
right up the nearest hill.

00:24:48.340 --> 00:24:50.960
On the other hand, if I change
the step size a little bit,

00:24:50.960 --> 00:24:53.690
maybe I can get
it to spread out.

00:24:53.690 --> 00:24:55.170
I sure did.

00:24:55.170 --> 00:24:57.586
And now that it's
managed to evolve over

00:24:57.586 --> 00:25:00.872
there to find the
maximum value, now I

00:25:00.872 --> 00:25:05.020
can clamp down on
the step size again.

00:25:05.020 --> 00:25:06.730
And now it shows
no more diversity.

00:25:06.730 --> 00:25:10.190
It's just locked on to
that global maximum.

00:25:10.190 --> 00:25:13.450
So this is not unlike what
evolution sometimes does.

00:25:16.190 --> 00:25:19.442
Sometimes, species
collapse into a state

00:25:19.442 --> 00:25:22.950
where they don't change for 500
million or 600 million years,

00:25:22.950 --> 00:25:24.670
like sharks, for example.

00:25:28.092 --> 00:25:29.716
Sometimes, they only
survive if they've

00:25:29.716 --> 00:25:33.321
got a lot of diversity
built into their way of life

00:25:33.321 --> 00:25:37.750
so that they can adjust
to habitat changes.

00:25:37.750 --> 00:25:39.689
Now, when you increase
the step size,

00:25:39.689 --> 00:25:42.065
because you're stuck
on a local maximum,

00:25:42.065 --> 00:25:44.245
it's like heating up a metal.

00:25:44.245 --> 00:25:46.610
You make everything
kind of vibrate

00:25:46.610 --> 00:25:49.230
more, make bigger steps.

00:25:49.230 --> 00:25:53.100
So this kind of process, where
you may start with a big step

00:25:53.100 --> 00:25:56.340
size and then gradually
reduce the step size,

00:25:56.340 --> 00:25:59.370
is called simulated
annealing, because it's

00:25:59.370 --> 00:26:02.000
like letting a metal cool down.

00:26:02.000 --> 00:26:04.550
So you start off with a
big temperature-- big step

00:26:04.550 --> 00:26:06.940
size-- that covers the space.

00:26:06.940 --> 00:26:09.452
And then you slowly
reduce the step size,

00:26:09.452 --> 00:26:14.024
so you actually crawl
up to the local maxima

00:26:14.024 --> 00:26:15.502
that are available.

00:26:15.502 --> 00:26:16.960
So that seemed to
work pretty well.

00:26:16.960 --> 00:26:19.880
Let's see if we can get
it to work on the harder

00:26:19.880 --> 00:26:21.130
problem of the moat.

00:26:32.890 --> 00:26:34.820
So it's not doing very well.

00:26:34.820 --> 00:26:36.270
Better increase the step size.

00:26:41.260 --> 00:26:42.510
No, it's still kind of stuck.

00:26:45.030 --> 00:26:47.361
Even though it's got the
capacity to cross over,

00:26:47.361 --> 00:26:49.532
it's so stuck on that
lower right hand corner,

00:26:49.532 --> 00:26:52.570
it can't get up that vertical
branch to get to a point

00:26:52.570 --> 00:26:55.435
where a crossover will
produce a value up there

00:26:55.435 --> 00:26:57.040
in the upper right-hand corner.

00:26:57.040 --> 00:26:58.445
So we're still not home yet.

00:27:03.570 --> 00:27:05.350
So what's the trouble?

00:27:05.350 --> 00:27:10.918
The trouble is that the fitness
mechanism is just driving

00:27:10.918 --> 00:27:14.090
things up to the local maximum.

00:27:14.090 --> 00:27:16.025
It's just terribly unfortunate.

00:27:20.840 --> 00:27:21.510
What to do?

00:27:21.510 --> 00:27:23.010
Well, here's something
you could do.

00:27:23.010 --> 00:27:25.330
You can say, well,
if the problem is

00:27:25.330 --> 00:27:27.942
we've lost the diversity
in our population,

00:27:27.942 --> 00:27:31.309
then we can measure
the diversity-- not

00:27:31.309 --> 00:27:33.301
only the fitness of
the set of individuals

00:27:33.301 --> 00:27:37.028
we're selecting from, but we
can measure how different they

00:27:37.028 --> 00:27:38.902
are on the individuals
we've already selected

00:27:38.902 --> 00:27:41.750
for the next population.

00:27:41.750 --> 00:27:44.890
In other words, we can get a
diverse population as well as

00:27:44.890 --> 00:27:47.266
a fit population if, when
we make our selection,

00:27:47.266 --> 00:27:49.170
we consider not
only their fitness

00:27:49.170 --> 00:27:52.600
but how different they are
from the individuals that

00:27:52.600 --> 00:27:54.290
have already been selected.

00:27:54.290 --> 00:27:56.250
So that's going to be
mechanism number three.

00:28:07.410 --> 00:28:13.450
So now we have a space,
and we can measure fitness

00:28:13.450 --> 00:28:18.280
along one axis-- ordinary
fitness-- and this is

00:28:18.280 --> 00:28:21.026
rank space fitness, so
that's going to be P sub c.

00:28:21.026 --> 00:28:24.150
There will always
be some individual

00:28:24.150 --> 00:28:25.520
with the highest fitness.

00:28:31.680 --> 00:28:35.935
And over here-- that might
not be P sub c, actually.

00:28:35.935 --> 00:28:38.226
But there'll be some individual
with a maximal fitness,

00:28:38.226 --> 00:28:40.834
and at any given
step in the selection

00:28:40.834 --> 00:28:44.328
of the next population, there'll
be some individual that's

00:28:44.328 --> 00:28:49.286
maximally diverse from all
of the individuals that

00:28:49.286 --> 00:28:55.300
have been selected for the
next generation so far.

00:28:55.300 --> 00:28:56.945
So what kind of
individual would you

00:28:56.945 --> 00:29:00.470
like to pick for
the next generation?

00:29:00.470 --> 00:29:02.885
Well, the one with
the highest fitness

00:29:02.885 --> 00:29:07.250
rank and the one with the
highest diversity rank.

00:29:07.250 --> 00:29:10.218
So what you'd really
like is you'd like

00:29:10.218 --> 00:29:14.397
to have somebody right there.

00:29:14.397 --> 00:29:16.188
And if you can't have
somebody right there,

00:29:16.188 --> 00:29:19.740
if there's nobody right
there with a maximum fitness,

00:29:19.740 --> 00:29:23.235
a maximum diversity
at the same time, then

00:29:23.235 --> 00:29:26.437
maybe you can draw in
iso goodness lines,

00:29:26.437 --> 00:29:32.510
like so, which are just how
far you are from that ideal.

00:29:32.510 --> 00:29:34.174
So let's summarize.

00:29:34.174 --> 00:29:35.632
You've got to pick
some individuals

00:29:35.632 --> 00:29:37.165
for the next population.

00:29:37.165 --> 00:29:39.187
When we pick the
first individual,

00:29:39.187 --> 00:29:42.050
all we've got to
go on is how fit

00:29:42.050 --> 00:29:43.933
the individual is,
because there's nobody

00:29:43.933 --> 00:29:45.800
else in that next generation.

00:29:45.800 --> 00:29:48.428
After the first
individual is selected,

00:29:48.428 --> 00:29:51.636
then we can look at
our set of candidates,

00:29:51.636 --> 00:29:53.420
and we can say which
candidate would

00:29:53.420 --> 00:29:55.670
be more different from the
set of things we've already

00:29:55.670 --> 00:29:56.878
selected than all the others.

00:29:56.878 --> 00:30:00.180
That would get the highest
diversity rank and so on down

00:30:00.180 --> 00:30:02.150
the candidate list.

00:30:02.150 --> 00:30:03.630
So let's see how
that might work.

00:30:11.330 --> 00:30:14.075
So we're going to use a
combination of fitness

00:30:14.075 --> 00:30:18.990
rank and diversity rank.

00:30:18.990 --> 00:30:21.880
And we'll just use
the simple one so far.

00:30:21.880 --> 00:30:24.000
We'll use a small
step size, and we'll

00:30:24.000 --> 00:30:26.530
let this run 100 generations
to see what happens.

00:30:31.570 --> 00:30:32.830
Bingo.

00:30:32.830 --> 00:30:34.704
It crawls right up there,
because it's trying

00:30:34.704 --> 00:30:36.520
to keep itself spread out.

00:30:36.520 --> 00:30:39.372
It uses that diversity
measurement to do that.

00:30:39.372 --> 00:30:43.206
And at the same time,
it's seeking high fitness,

00:30:43.206 --> 00:30:46.250
so that's why it's crawling up
to the upper right hand corner.

00:30:46.250 --> 00:30:49.184
But in the end, that
diversity piece of it

00:30:49.184 --> 00:30:52.026
is keeping the
things spread out.

00:30:52.026 --> 00:30:53.650
So suppose you're a
shark or something.

00:30:53.650 --> 00:30:55.275
You don't care about
diversity anymore,

00:30:55.275 --> 00:30:57.440
And we could just turn that off.

00:30:57.440 --> 00:30:58.700
Is that thing still running?

00:31:03.460 --> 00:31:06.500
Go back to fitness rank-- bingo.

00:31:06.500 --> 00:31:11.917
So there you are-- you're
stuck for 600 million years.

00:31:11.917 --> 00:31:14.000
So let's see if this will
handle the moat problem.

00:31:24.420 --> 00:31:27.870
See, our step size
is still small.

00:31:27.870 --> 00:31:31.110
We'll just let this run.

00:31:31.110 --> 00:31:34.520
So the diversity of P sub
is keeping it spread out,

00:31:34.520 --> 00:31:36.976
pretty soon, bingo,
it's right in there.

00:31:36.976 --> 00:31:39.350
It's across that big moat,
because it's got the crossover

00:31:39.350 --> 00:31:41.740
mechanism that combines the
best of the x's and the best

00:31:41.740 --> 00:31:43.570
of the y's.

00:31:43.570 --> 00:31:47.830
So that seems to
work pretty well.

00:31:47.830 --> 00:31:50.296
OK, so see, these are
some of the things

00:31:50.296 --> 00:31:52.985
that you can think about
when you're thinking-- oh,

00:31:52.985 --> 00:31:55.214
and of course,
we're a shark, we're

00:31:55.214 --> 00:31:56.830
going to forget about diversity.

00:31:56.830 --> 00:31:58.780
We'll change the
selection method

00:31:58.780 --> 00:32:01.245
from fitness and diversity
rank to just diversity.

00:32:01.245 --> 00:32:04.060
It collapses down on
to the highest hill.

00:32:07.650 --> 00:32:09.225
Yeah, [? Feedball ?], what?

00:32:09.225 --> 00:32:12.865
STUDENT: How does step size
translate into mutations?

00:32:12.865 --> 00:32:15.552
PATRICK WINSTON: Oh,
just the-- question

00:32:15.552 --> 00:32:19.250
is, how does step size
translate into mutation?

00:32:19.250 --> 00:32:22.517
Instead of allowing myself
to take steps as big as 1/10,

00:32:22.517 --> 00:32:27.680
I might allow myself to
take steps as big as 3/10,

00:32:27.680 --> 00:32:29.190
according to some distribution.

00:32:32.430 --> 00:32:33.680
So what to say about all this?

00:32:36.630 --> 00:32:40.000
It's very seductive,
because it's nature, right?

00:32:40.000 --> 00:32:42.610
The trouble is,
it's naive nature.

00:32:42.610 --> 00:32:49.280
And as evolutionary theories
go, this is horrible.

00:32:49.280 --> 00:32:51.082
This is naive.

00:32:51.082 --> 00:32:52.956
So we'd like to use real
evolutionary theory,

00:32:52.956 --> 00:32:55.360
except we don't have
real evolutionary theory.

00:32:55.360 --> 00:32:57.780
Evolution is still a mystery.

00:32:57.780 --> 00:33:00.170
Some things are pretty obvious.

00:33:00.170 --> 00:33:02.490
You can breed fast race horses.

00:33:02.490 --> 00:33:04.450
That works just like so.

00:33:04.450 --> 00:33:07.200
The trouble is, we don't have
any real good idea about how

00:33:07.200 --> 00:33:11.655
speciation takes place
and how a lot of evolution

00:33:11.655 --> 00:33:14.646
works, because all these
chromosomes are connected

00:33:14.646 --> 00:33:18.330
to their phenotype consequences
in very complicated ways

00:33:18.330 --> 00:33:21.110
that nobody fully understands.

00:33:21.110 --> 00:33:23.380
So there's a great deal
of magic in that genotype

00:33:23.380 --> 00:33:26.580
to phenotype transition
that nobody really

00:33:26.580 --> 00:33:28.950
understands very well.

00:33:28.950 --> 00:33:32.590
So when people write
these programs that

00:33:32.590 --> 00:33:38.170
are in the style of so
called genetic algorithm,

00:33:38.170 --> 00:33:43.050
they're taking a photograph
of high school biology,

00:33:43.050 --> 00:33:46.820
and they're spending a
long time building programs

00:33:46.820 --> 00:33:48.920
based on that naive idea.

00:33:48.920 --> 00:33:54.430
But that naive idea has lots
of places for intervention,

00:33:54.430 --> 00:33:57.920
because look at all the
things you can screw around

00:33:57.920 --> 00:34:01.056
with in that process of
going from one generation

00:34:01.056 --> 00:34:02.100
to the next.

00:34:04.671 --> 00:34:07.110
By the way, what
does mutation do?

00:34:07.110 --> 00:34:09.020
It's basically hill
climbing, right?

00:34:09.020 --> 00:34:10.478
It's producing a
little spread out,

00:34:10.478 --> 00:34:14.131
and you're using the fitness
thing to climb the hill.

00:34:14.131 --> 00:34:16.380
So you get a lot of choices
about how you handle that.

00:34:16.380 --> 00:34:17.893
Then you get a lot of
choices about much crossover

00:34:17.893 --> 00:34:18.434
you're doing.

00:34:18.434 --> 00:34:20.275
What does crossover do?

00:34:20.275 --> 00:34:24.331
It kind of combines
strong features

00:34:24.331 --> 00:34:27.469
of multiple individuals
into one individual, maybe.

00:34:30.310 --> 00:34:32.079
So you've got all
kinds of choices there.

00:34:32.079 --> 00:34:34.120
And then your genotype to
phenotype translation--

00:34:34.120 --> 00:34:36.968
how do you interpret
something like those zeroes

00:34:36.968 --> 00:34:40.029
and ones as an if then rule,
for example, as something that's

00:34:40.029 --> 00:34:42.969
in the hands of the designer?

00:34:42.969 --> 00:34:46.401
Then you've got all the rest
of those things, all which

00:34:46.401 --> 00:34:48.940
are left up to the designer.

00:34:48.940 --> 00:34:50.763
So in the end, you
really have to ask--

00:34:50.763 --> 00:34:53.179
when you see an impressive
demonstration, you have to say,

00:34:53.179 --> 00:34:55.179
where does the credit lie?

00:34:55.179 --> 00:34:57.807
And I mean that
pun intentionally,

00:34:57.807 --> 00:35:00.174
because usually the people
who are claiming the credit

00:35:00.174 --> 00:35:03.050
are lying about where
it's coming from.

00:35:03.050 --> 00:35:04.424
But nevertheless,
let me give you

00:35:04.424 --> 00:35:06.906
a couple of examples
of where this

00:35:06.906 --> 00:35:13.632
has found actual, bona
fide practical application.

00:35:13.632 --> 00:35:15.423
So when you look for
practical application,

00:35:15.423 --> 00:35:18.558
you might say, well,
in what kind of problem

00:35:18.558 --> 00:35:22.088
does a good front piece
combine with a good back piece

00:35:22.088 --> 00:35:25.640
to produce a good thing overall?

00:35:25.640 --> 00:35:28.860
And the answer is, when
you're making a plan.

00:35:28.860 --> 00:35:31.620
So you might have a
problem in planning

00:35:31.620 --> 00:35:35.045
that requires you to
take a series of steps.

00:35:39.860 --> 00:35:43.380
And you might have two
plans, each of which

00:35:43.380 --> 00:35:45.500
is a series of steps.

00:35:45.500 --> 00:35:51.470
And you might combine these to
produce something new that's

00:35:51.470 --> 00:35:56.710
the front half of one and
the back half of another.

00:35:56.710 --> 00:35:58.680
So that's practical
application number one.

00:36:01.750 --> 00:36:04.910
And that requires you to
interpret your chromosome

00:36:04.910 --> 00:36:09.250
as an indicator of
the steps in the plan.

00:36:09.250 --> 00:36:16.609
Another example is drawn
from a UROP project

00:36:16.609 --> 00:36:18.445
a student did for
me some years ago.

00:36:20.920 --> 00:36:21.670
He was a freshman.

00:36:21.670 --> 00:36:24.235
He came to me and said, I
want to do a UROP project.

00:36:24.235 --> 00:36:26.320
And I said, have
you taken 6.034?

00:36:26.320 --> 00:36:27.290
And he said no.

00:36:27.290 --> 00:36:28.359
And I said, go away.

00:36:28.359 --> 00:36:29.900
And he said, I don't
want to go away.

00:36:29.900 --> 00:36:31.720
I want to do a UROP project.

00:36:31.720 --> 00:36:34.000
So I said, have
you read my book?

00:36:34.000 --> 00:36:34.634
He said no.

00:36:34.634 --> 00:36:35.800
I said, well, go away, then.

00:36:35.800 --> 00:36:37.341
And he said, I don't
want to go away.

00:36:37.341 --> 00:36:39.030
I want to do a UROP project.

00:36:39.030 --> 00:36:40.860
So I said, I don't
have any UROP projects.

00:36:40.860 --> 00:36:41.651
He said, that's OK.

00:36:41.651 --> 00:36:42.810
I've got my own.

00:36:46.610 --> 00:36:49.074
He's a finance
type guy, so he was

00:36:49.074 --> 00:36:52.460
interested in whether he
could build a rule based

00:36:52.460 --> 00:36:57.680
expert system that could predict
the winners at horse races.

00:36:57.680 --> 00:37:04.750
So his rule based expert system
consisted of rules like this.

00:37:04.750 --> 00:37:11.650
If x and y, then
some conclusion.

00:37:11.650 --> 00:37:19.560
If l and m, then some
kind of conclusion.

00:37:19.560 --> 00:37:23.207
And from these, he
would produce rules

00:37:23.207 --> 00:37:27.692
like if x prime-- that's
a slightly mutated version

00:37:27.692 --> 00:37:38.080
of the x antecedent-- and
m, then some conclusion.

00:37:38.080 --> 00:37:39.630
So it's mutation and crossover.

00:37:39.630 --> 00:37:42.276
And he was able to
produce a system that

00:37:42.276 --> 00:37:45.439
seemed to work about as
well as the handicappers

00:37:45.439 --> 00:37:46.580
in the newspaper.

00:37:46.580 --> 00:37:51.090
So he started losing
money at a less fast rate.

00:37:51.090 --> 00:37:55.660
He is now doing something in
the stock market, they say.

00:37:55.660 --> 00:37:59.164
Doesn't talk so much
about it, though.

00:37:59.164 --> 00:38:01.380
But an interesting application.

00:38:01.380 --> 00:38:03.918
He came up with rules
like, if the sum

00:38:03.918 --> 00:38:08.626
of the jockey's weight on
the post position is low,

00:38:08.626 --> 00:38:09.820
that's good.

00:38:09.820 --> 00:38:11.395
Well, that makes
sense in the end,

00:38:11.395 --> 00:38:12.958
because the jockey's
weight is always

00:38:12.958 --> 00:38:16.038
between 100 and 110 pounds,
and the post position is always

00:38:16.038 --> 00:38:17.930
between 1 and 10 or
something, so they

00:38:17.930 --> 00:38:20.000
were commensurate values.

00:38:20.000 --> 00:38:21.996
And a low one is good, in fact.

00:38:21.996 --> 00:38:24.430
Not bad.

00:38:24.430 --> 00:38:26.100
But neither of those--

00:38:26.100 --> 00:38:28.590
I mean, this is real stuff.

00:38:28.590 --> 00:38:33.760
My company uses this sort of
stuff to do some planning work.

00:38:33.760 --> 00:38:38.044
But neither of those is as
impressive as the demonstration

00:38:38.044 --> 00:38:41.222
I'm about to show
you that involves

00:38:41.222 --> 00:38:44.710
the evolution of creatures.

00:38:44.710 --> 00:38:50.580
And these creatures consist of
block like objects, like so.

00:38:50.580 --> 00:38:54.390
And they combine
like this, and so on.

00:38:54.390 --> 00:38:56.758
And so how can
you make a feature

00:38:56.758 --> 00:38:59.050
like that from a 0 1 chromosome?

00:38:59.050 --> 00:39:02.354
Well, some of the
bits in the chromosome

00:39:02.354 --> 00:39:05.660
are interpreted as
the number of objects.

00:39:05.660 --> 00:39:08.920
Others are interpreted as
the sizes of the objects.

00:39:08.920 --> 00:39:11.040
Others are interpreted
as the structure of how

00:39:11.040 --> 00:39:14.080
the objects are articulated.

00:39:14.080 --> 00:39:19.830
And still others are interpreted
as fixing the control algorithm

00:39:19.830 --> 00:39:23.380
by which the creature operates.

00:39:23.380 --> 00:39:26.010
So you see how
that roughly goes?

00:39:26.010 --> 00:39:29.060
Would you like to see a
film of that in action?

00:39:29.060 --> 00:39:29.931
Yes.

00:39:29.931 --> 00:39:30.430
OK.

00:39:30.430 --> 00:39:32.138
[? Solo ?] always
likes to see the films.

00:39:42.890 --> 00:39:46.421
STUDENT: How would you measure
diversity in that graph?

00:39:46.421 --> 00:39:47.796
PATRICK WINSTON:
The question is,

00:39:47.796 --> 00:39:50.050
how do I measure the
diversity of the graph?

00:39:50.050 --> 00:39:52.610
I did it the same way
I measured the fitness.

00:39:52.610 --> 00:39:56.560
That is to say, I
calculated the distance--

00:39:56.560 --> 00:39:59.582
the actual metric distance--
of all the candidates

00:39:59.582 --> 00:40:02.403
for the next generation from
all of the candidates that

00:40:02.403 --> 00:40:03.610
had already been selected.

00:40:03.610 --> 00:40:05.602
I summed that up.

00:40:05.602 --> 00:40:07.296
And from that sum,
I could rank them

00:40:07.296 --> 00:40:08.796
according to how
different they were

00:40:08.796 --> 00:40:11.760
from the individuals that were
already in the next generation.

00:40:11.760 --> 00:40:13.840
It's like giving a rank,
and then from the rank,

00:40:13.840 --> 00:40:18.072
I use that kind of calculation
to determine a fitness, ie,

00:40:18.072 --> 00:40:19.530
a probability of
survival, and then

00:40:19.530 --> 00:40:21.466
I just combine the two
kinds of probabilities.

00:40:21.466 --> 00:40:23.139
STUDENT: So you always
kept-- every time

00:40:23.139 --> 00:40:25.290
that you selected
something, you cached those.

00:40:25.290 --> 00:40:27.145
And you kept everything
that you've ever

00:40:27.145 --> 00:40:28.019
selected [INAUDIBLE].

00:40:28.019 --> 00:40:30.314
PATRICK WINSTON: I'm always
using the individuals that

00:40:30.314 --> 00:40:32.022
have already been
selected at every step,

00:40:32.022 --> 00:40:33.479
so every step is
a little different

00:40:33.479 --> 00:40:35.072
because it's working with
a new set of individuals

00:40:35.072 --> 00:40:37.405
that have already been selected
for the next generation.

00:40:37.405 --> 00:40:38.990
OK?

00:40:38.990 --> 00:40:40.240
So let's see how this works.

00:40:49.080 --> 00:40:53.367
So this is showing the evolution
of some swimming creatures.

00:40:53.367 --> 00:40:55.700
And they're evolved according
to how well they can swim,

00:40:55.700 --> 00:40:57.932
how fast they can go.

00:40:57.932 --> 00:41:00.390
Some of them have quite exotic
mechanisms, and some of them

00:41:00.390 --> 00:41:01.220
quite natural.

00:41:01.220 --> 00:41:04.770
That looked like a sperm
cell floating away there.

00:41:09.119 --> 00:41:11.285
Once you have these things
evolving, then of course,

00:41:11.285 --> 00:41:13.820
you can get groups of
them to evolve together.

00:41:19.640 --> 00:41:24.160
So you saw already some
that were evolving to swim.

00:41:24.160 --> 00:41:28.270
These are evolving to
move around on the land.

00:41:28.270 --> 00:41:32.872
It's interesting-- this was done
by Karl Sims, who at the time

00:41:32.872 --> 00:41:35.208
was at a then thriving
company, Thinking Machines,

00:41:35.208 --> 00:41:37.320
a fresh spinoff from MIT.

00:41:37.320 --> 00:41:40.768
So he was using a vastly
parallel computer,

00:41:40.768 --> 00:41:43.247
super powerful for its day,
thousands of processors,

00:41:43.247 --> 00:41:44.191
to do this.

00:41:44.191 --> 00:41:46.024
And it was a demonstration
of what you could

00:41:46.024 --> 00:41:48.330
do with lots of computing.

00:41:48.330 --> 00:41:51.445
In the early stages of
the experimentation,

00:41:51.445 --> 00:41:54.092
though, its notion of physics
wasn't quite complete,

00:41:54.092 --> 00:41:57.430
so some of the creatures evolved
to move by hitting themselves

00:41:57.430 --> 00:42:01.900
in the chest and not knowing
about the conservation

00:42:01.900 --> 00:42:03.000
of momentum.

00:42:03.000 --> 00:42:04.645
I thought that was just great.

00:42:09.130 --> 00:42:10.880
So here they are, out
doing some further--

00:42:27.190 --> 00:42:29.071
So you look at these,
and you say, wow,

00:42:29.071 --> 00:42:30.630
there must be something to this.

00:42:30.630 --> 00:42:32.120
This is interesting.

00:42:32.120 --> 00:42:33.370
These are complicated.

00:42:40.650 --> 00:42:43.208
I think this is one of the ones
that was trained, initially,

00:42:43.208 --> 00:42:45.440
to swim and then to
do land locomotion.

00:42:50.760 --> 00:42:54.519
So eventually, Karl
got around to thinking

00:42:54.519 --> 00:42:58.602
about how to make these
things evolve so that they

00:42:58.602 --> 00:42:59.890
would compete for food.

00:43:02.960 --> 00:43:05.152
That's the fastest,
I think, by the way,

00:43:05.152 --> 00:43:08.630
of the land locomotors.

00:43:08.630 --> 00:43:11.990
So that was training them
to-- evolving them to jump.

00:43:11.990 --> 00:43:17.680
This is evolving them to
follow a little red dot.

00:43:17.680 --> 00:43:21.487
Some of them have stumbled
upon quite exotic methods,

00:43:21.487 --> 00:43:23.160
as you can see.

00:43:26.380 --> 00:43:29.096
Seem to be flailing
around, but somehow

00:43:29.096 --> 00:43:32.590
manage to-- sort of like
watching people take a quiz.

00:43:36.680 --> 00:43:37.930
Making progress on it.

00:43:42.427 --> 00:43:44.135
But now we're on to
the food competition.

00:44:05.590 --> 00:44:07.870
So some of them go for
the food, and some of them

00:44:07.870 --> 00:44:10.912
go to excluding their
opponent from the food,

00:44:10.912 --> 00:44:13.670
not actually caring too much
about whether they get it.

00:44:13.670 --> 00:44:15.850
That's sort of what children do.

00:44:32.110 --> 00:44:35.187
There's a kind of
hockey player-- now,

00:44:35.187 --> 00:44:36.270
here's two hockey players.

00:44:36.270 --> 00:44:37.944
Watch this.

00:44:37.944 --> 00:44:46.749
They're kind of-- one
succeeds-- it reminds me

00:44:46.749 --> 00:44:49.970
a little bit of hockey,
rugby, something like that.

00:44:49.970 --> 00:44:53.071
Sometimes, they just
get kind of confused,

00:44:53.071 --> 00:44:55.901
go right after their opponent,
forgetting about the food.

00:45:11.800 --> 00:45:15.260
Gives up.

00:45:15.260 --> 00:45:20.771
I think these are the overall
winners in this elimination

00:45:20.771 --> 00:45:21.740
contest.

00:45:21.740 --> 00:45:24.170
I can't quite get there.

00:45:24.170 --> 00:45:26.840
OK, so you look at that, and
you say, wow, that's cool.

00:45:26.840 --> 00:45:30.322
Genetic algorithms
must be the way to go.

00:45:30.322 --> 00:45:32.790
I remember the first
time I saw this film.

00:45:32.790 --> 00:45:33.790
It was over in Kresge.

00:45:33.790 --> 00:45:37.930
I was walking out of the
auditorium with Toma Poggio

00:45:37.930 --> 00:45:41.500
And we looked at each other,
and we said the same thing

00:45:41.500 --> 00:45:44.180
simultaneously.

00:45:44.180 --> 00:45:47.500
We didn't say that genetic
algorithms were the way to go.

00:45:47.500 --> 00:45:52.520
What we said was, wow, that
space is rich in solutions.

00:45:52.520 --> 00:45:54.822
What we were amazed
by was not that simple

00:45:54.822 --> 00:45:56.655
minded genetic algorithms
produced solutions

00:45:56.655 --> 00:45:59.676
but that the space was
so rich with solutions

00:45:59.676 --> 00:46:02.128
that almost any mechanism
that was looking around

00:46:02.128 --> 00:46:03.625
in that space would find them.

00:46:03.625 --> 00:46:05.666
But there's yet another
way of thinking about it,

00:46:05.666 --> 00:46:10.270
and that is you could say, wow,
look at how smart Karl Sims is,

00:46:10.270 --> 00:46:12.682
because Karl Sims is the
one who had his hands on all

00:46:12.682 --> 00:46:15.050
the levers, all those choices.

00:46:15.050 --> 00:46:17.780
And I kept emphasizing,
all those choices

00:46:17.780 --> 00:46:21.953
that enabled him to trick
this thing, in some sense,

00:46:21.953 --> 00:46:24.752
into stumbling across the
solutions in a space that

00:46:24.752 --> 00:46:27.750
was guaranteed to be
rich with solutions.

00:46:27.750 --> 00:46:31.270
So you have to ask-- so first
of all, diversity is good.

00:46:31.270 --> 00:46:34.060
We noticed when we put diversity
into the genetic algorithm

00:46:34.060 --> 00:46:36.750
calculations, we were much
better at finding solutions.

00:46:36.750 --> 00:46:39.063
But the next gold star
idea that I'd really

00:46:39.063 --> 00:46:41.252
like to have you go
away with is the idea

00:46:41.252 --> 00:46:43.500
that you have to ask
where the credit lies.

00:46:43.500 --> 00:46:46.065
Does it lie with the
ingenuity of the programmer

00:46:46.065 --> 00:46:49.230
or with the value of
the algorithm itself?

00:46:49.230 --> 00:46:51.358
In this case,
impressive as it is,

00:46:51.358 --> 00:46:53.828
the credit lies in the
richness of the space

00:46:53.828 --> 00:46:55.593
and in the intelligence
of the programmer,

00:46:55.593 --> 00:47:00.500
not necessarily in the
idea of genetic algorithms.

