WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.400
Now we've seen how useful preprocessing can be for a variety of problems.

00:00:04.400 --> 00:00:08.420
So, let's look at some possible preprocessing rules

00:00:08.420 --> 00:00:10.430
that we could use for the shortest tour problem.

00:00:10.430 --> 00:00:13.990
Now what I'd like you to tell me about each of the preprocessing rules

00:00:13.990 --> 00:00:15.800
is whether they are correct;

00:00:15.800 --> 00:00:19.110
that is, they don't change the solution outcome to something different

00:00:19.110 --> 00:00:22.170
than they would be if you didn't apply the rule,

00:00:22.170 --> 00:00:26.730
and are they effective, meaning they don't increase the size of the input

00:00:26.730 --> 00:00:29.090
and actually make your job harder.

00:00:29.090 --> 00:00:32.460
So the first possibility is that we could calculate the shortest path

00:00:32.460 --> 00:00:34.920
from each vertex to each other vertex,

00:00:34.920 --> 00:00:36.920
and then we remove all of the unused edges.

00:00:36.920 --> 00:00:40.440
The second possibility is that, as long as the graph stays connected,

00:00:40.440 --> 00:00:45.000
we could just remove the heaviest edges and repeat until the graph disconnects

00:00:45.000 --> 00:00:47.490
and don't remove that one.

00:00:47.490 --> 00:00:51.450
The third possibility is remove any edge that has a larger weight

00:00:51.450 --> 00:00:54.180
than the minimum spanning tree's weight.

00:00:54.180 --> 00:00:59.500
Finally, we could replace long paths by a single edge that has equal weight.

00:00:59.500 --> 00:01:02.800
So, go ahead and check which ones you think are correct

00:01:02.800 --> 99:59:59.000
and which rules you think are also effective.

