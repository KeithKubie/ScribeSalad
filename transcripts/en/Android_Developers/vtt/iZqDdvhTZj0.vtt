WEBVTT
Kind: captions
Language: en

00:00:00.590 --> 00:00:03.220
Android 6.0 Marshmallow
brought a major change

00:00:03.220 --> 00:00:04.790
to Android's permission model.

00:00:04.790 --> 00:00:07.550
Instead of asking for all
permissions at install time,

00:00:07.550 --> 00:00:09.770
it introduced a runtime
permission model,

00:00:09.770 --> 00:00:12.940
letting you control when your
app asked for a permission.

00:00:12.940 --> 00:00:15.970
When and how you ask for
a permission is critical.

00:00:15.970 --> 00:00:18.390
It's kind of like asking
someone out on a date.

00:00:18.390 --> 00:00:21.420
Doing it too soon, too
often, or in the wrong way

00:00:21.420 --> 00:00:23.470
isn't going to go well for you.

00:00:23.470 --> 00:00:25.174
I'm Nick Butcher,
and in this video

00:00:25.174 --> 00:00:27.090
I'll walk you through
the details of Android's

00:00:27.090 --> 00:00:29.190
runtime permission
model and show you

00:00:29.190 --> 00:00:31.830
how to design a UX for
asking for permission

00:00:31.830 --> 00:00:34.650
that's appropriate
to your app's needs.

00:00:34.650 --> 00:00:36.130
Now, the purpose
of permissions is

00:00:36.130 --> 00:00:38.270
to protect your users' privacy.

00:00:38.270 --> 00:00:40.080
When you ask for a
permission, you're

00:00:40.080 --> 00:00:42.550
asking them to give up a
little bit of that privacy,

00:00:42.550 --> 00:00:45.570
and as such, you need to offer
a clear and equal benefit

00:00:45.570 --> 00:00:48.150
in exchange for that access.

00:00:48.150 --> 00:00:50.970
Runtime permissions allow
you to choose the right time

00:00:50.970 --> 00:00:54.690
to ask for a permission when the
user has more context about why

00:00:54.690 --> 00:00:58.180
you're requesting it and
the benefits of granting.

00:00:58.180 --> 00:01:00.240
You might be familiar
with runtime permissions

00:01:00.240 --> 00:01:02.620
from other platforms,
such as the web,

00:01:02.620 --> 00:01:04.319
but the way that
Android implements

00:01:04.319 --> 00:01:06.560
them makes it incredibly
important to ask

00:01:06.560 --> 00:01:08.660
for them in just the right way.

00:01:08.660 --> 00:01:10.270
You see, Android's
permission model

00:01:10.270 --> 00:01:13.260
favors protecting the user,
so when your app requests

00:01:13.260 --> 00:01:16.530
a permission, Android shows a
dialog letting the user accept

00:01:16.530 --> 00:01:19.970
or deny it, but it also lets
them say never let this app ask

00:01:19.970 --> 00:01:22.102
me for this permission again.

00:01:22.102 --> 00:01:23.560
Now you want to
avoid this outcome,

00:01:23.560 --> 00:01:25.960
so we've designed the
system to effectively let

00:01:25.960 --> 00:01:30.440
you ask for permissions without
having to be overly defensive.

00:01:30.440 --> 00:01:32.990
The very first time you
request a permission,

00:01:32.990 --> 00:01:36.090
we don't show that dreaded
"never ask again" checkbox.

00:01:36.090 --> 00:01:39.030
We'll only show it after a
user's denied a permission

00:01:39.030 --> 00:01:41.390
request at least once.

00:01:41.390 --> 00:01:43.140
You can check if you've
been denied before

00:01:43.140 --> 00:01:47.070
and be smart about when
to provide more education.

00:01:47.070 --> 00:01:49.660
This lets you build a
smooth journey for your app,

00:01:49.660 --> 00:01:53.950
only adding extra steps or
information when needed.

00:01:53.950 --> 00:01:57.370
In particular, you don't need
to be too defensive, like always

00:01:57.370 --> 00:01:59.630
screening for interest
before actually requesting

00:01:59.630 --> 00:02:02.280
a permission,
essentially, asking twice.

00:02:02.280 --> 00:02:05.320
This double prompting can
be unnecessary and annoying,

00:02:05.320 --> 00:02:07.170
and you can achieve
the same effect

00:02:07.170 --> 00:02:11.230
by asking at the right
time and in the right way.

00:02:11.230 --> 00:02:12.950
We broke down the
different approaches

00:02:12.950 --> 00:02:15.820
to asking for permissions
across two dimensions.

00:02:15.820 --> 00:02:18.090
Firstly, how important
is the permission

00:02:18.090 --> 00:02:19.630
to your app's operation?

00:02:19.630 --> 00:02:23.380
And secondly, how clear is
it why you are asking for it?

00:02:23.380 --> 00:02:25.300
Depending on these
two factors, we

00:02:25.300 --> 00:02:29.500
recommend different approaches
to how you ask for permission.

00:02:29.500 --> 00:02:32.200
If the need for permission
is both critical to your app

00:02:32.200 --> 00:02:34.400
and obvious why
it's needed, then we

00:02:34.400 --> 00:02:36.530
recommend asking up front.

00:02:36.530 --> 00:02:39.190
For example, if you
are making an SMS app,

00:02:39.190 --> 00:02:42.290
then the SMS permission is
absolutely critical for you

00:02:42.290 --> 00:02:45.460
to function, and it's crystal
clear why you're asking for it.

00:02:45.460 --> 00:02:48.610
Don't bother your users with
any unnecessary explanations.

00:02:48.610 --> 00:02:51.750
Just request the
permission straight away.

00:02:51.750 --> 00:02:54.440
If a permission is really
important to your app, but not

00:02:54.440 --> 00:02:57.070
immediately obvious
why, then we recommend

00:02:57.070 --> 00:02:59.750
educating before asking.

00:02:59.750 --> 00:03:02.237
If your app uses some
kind of user onboarding,

00:03:02.237 --> 00:03:03.820
then this would be
a great opportunity

00:03:03.820 --> 00:03:06.030
to tell them about
this killer feature,

00:03:06.030 --> 00:03:08.740
then go ahead and ask
for the permission.

00:03:08.740 --> 00:03:12.040
So, for example, if a key
part of your note-taking app

00:03:12.040 --> 00:03:14.670
is that it logs the location
where you made a note,

00:03:14.670 --> 00:03:17.700
you'd want to educate your
users about that up front,

00:03:17.700 --> 00:03:20.990
and then ask for the permission.

00:03:20.990 --> 00:03:25.000
Next up, if a secondary feature
of your app needs a permission

00:03:25.000 --> 00:03:28.600
but it's clear why,
then ask in context.

00:03:28.600 --> 00:03:31.010
For example, if
your note-taking app

00:03:31.010 --> 00:03:33.290
lets you dictate an
audio note, then it's

00:03:33.290 --> 00:03:35.370
pretty clear why this
feature would need

00:03:35.370 --> 00:03:37.100
the record audio permission.

00:03:37.100 --> 00:03:39.630
There's no need to bombard
your user too early

00:03:39.630 --> 00:03:40.660
with this request.

00:03:40.660 --> 00:03:43.580
Better to wait until they
try to use the feature when

00:03:43.580 --> 00:03:47.650
it will be immediately obvious
why you're prompting for it.

00:03:47.650 --> 00:03:51.150
Finally, if a feature is not
core to your app's purpose

00:03:51.150 --> 00:03:53.990
and not immediately
obvious why it's requested,

00:03:53.990 --> 00:03:57.020
then you should
educate in context.

00:03:57.020 --> 00:03:59.470
So, for example, if
your note-taking app

00:03:59.470 --> 00:04:01.170
lets you collaborate
with friends,

00:04:01.170 --> 00:04:04.940
then requesting access to your
contacts might be reasonable,

00:04:04.940 --> 00:04:07.220
but it isn't immediately
obvious and would benefit

00:04:07.220 --> 00:04:09.680
from some user education.

00:04:09.680 --> 00:04:11.440
When the user
invokes the feature,

00:04:11.440 --> 00:04:13.070
offer some explanation
of the benefits

00:04:13.070 --> 00:04:16.120
it allows, like autocompleting
email addresses,

00:04:16.120 --> 00:04:18.490
and then let the user
opt into it, only

00:04:18.490 --> 00:04:20.630
then asking for permission.

00:04:20.630 --> 00:04:23.290
By using the right approach,
it should be clear to the user

00:04:23.290 --> 00:04:25.120
why you're requesting
a permission

00:04:25.120 --> 00:04:27.309
and what they get
for it in return.

00:04:27.309 --> 00:04:29.850
This doesn't, however, mean that
they'll grant the permission

00:04:29.850 --> 00:04:31.150
100% of the time.

00:04:31.150 --> 00:04:33.380
So how should you handle denial?

00:04:33.380 --> 00:04:36.550
Now remember, Android lets you
know if the user has previously

00:04:36.550 --> 00:04:38.920
denied a permission so
that you can show more

00:04:38.920 --> 00:04:41.560
rationale to educate them
on why you are asking

00:04:41.560 --> 00:04:43.600
and the benefits of granting.

00:04:43.600 --> 00:04:46.040
If a user denies a
critical permission,

00:04:46.040 --> 00:04:48.370
then explain why you
can't proceed without it

00:04:48.370 --> 00:04:50.040
and link to your
app's settings page,

00:04:50.040 --> 00:04:51.540
where they can rectify it.

00:04:51.540 --> 00:04:53.300
Don't just shut down.

00:04:53.300 --> 00:04:55.100
Now, this is
especially important

00:04:55.100 --> 00:04:58.300
as the user may have checked
that "never ask again" box.

00:04:58.300 --> 00:05:00.640
So your app may receive
the permission denial

00:05:00.640 --> 00:05:02.940
without the user seeing
the permission dialog,

00:05:02.940 --> 00:05:06.880
and it could seem like the
interaction was just ignored.

00:05:06.880 --> 00:05:08.620
Another pro tip
is to always show

00:05:08.620 --> 00:05:11.990
the user immediate benefit when
they grant your permission.

00:05:11.990 --> 00:05:14.040
Like we said, this
is a trade-off

00:05:14.040 --> 00:05:16.170
of access for functionality.

00:05:16.170 --> 00:05:18.320
So, for example, if
you are granted access

00:05:18.320 --> 00:05:20.670
to the user's contacts,
then you could immediately

00:05:20.670 --> 00:05:24.790
present a list of their favorite
contacts for quick selection.

00:05:24.790 --> 00:05:26.620
Finally, while
you're taking stock

00:05:26.620 --> 00:05:28.220
of the permissions
your app uses,

00:05:28.220 --> 00:05:31.560
perhaps revisit if you
need the permission at all.

00:05:31.560 --> 00:05:34.130
Android offers facilities for
apps to talk to each other,

00:05:34.130 --> 00:05:37.160
letting you delegate
tasks to other apps.

00:05:37.160 --> 00:05:40.500
For example, if you want to
allow users to take a photo

00:05:40.500 --> 00:05:42.540
but it isn't a core
part of your app,

00:05:42.540 --> 00:05:44.870
consider using intents
to ask the camera

00:05:44.870 --> 00:05:47.730
app to take the photo
and share it back to you.

00:05:47.730 --> 00:05:48.230
Voila.

00:05:48.230 --> 00:05:51.000
No need for the
camera permission.

00:05:51.000 --> 00:05:52.960
So that's Android's
runtime permissions model

00:05:52.960 --> 00:05:54.850
in a nutshell and
some approaches

00:05:54.850 --> 00:05:57.090
to asking for permissions.

00:05:57.090 --> 00:05:58.760
Now that you understand
how it works,

00:05:58.760 --> 00:06:01.820
you can craft the perfect
flow for whether, when,

00:06:01.820 --> 00:06:04.790
and how to ask for
permissions, maximizing

00:06:04.790 --> 00:06:06.260
your chance of
your users agreeing

00:06:06.260 --> 00:06:08.140
to hook up with your app.

00:06:08.140 --> 00:06:09.090
Thanks for watching.

00:06:09.090 --> 00:06:11.210
For more information,
check out these links.

00:06:11.210 --> 00:06:13.960
[MUSIC PLAYING]

