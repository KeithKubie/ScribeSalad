WEBVTT
Kind: captions
Language: en

00:00:10.610 --> 00:00:11.500
ANDREW WALES: Hi, everyone.

00:00:11.500 --> 00:00:12.500
My name is Andrew Wales.

00:00:12.500 --> 00:00:14.630
I'm a developer programs
engineer on the Google

00:00:14.630 --> 00:00:16.090
Analytics team.

00:00:16.090 --> 00:00:18.790
Today we're launching actually
a brand new Developer Live

00:00:18.790 --> 00:00:22.540
series from Google Analytics
called "Behind the Code." And

00:00:22.540 --> 00:00:25.050
actually, on this series we're
not only going to showcase

00:00:25.050 --> 00:00:28.580
some new GA features in
technology, but also give you

00:00:28.580 --> 00:00:31.910
a chance to hear directly from
some of the engineers, product

00:00:31.910 --> 00:00:35.640
managers, and others on the GA
team who are behind the scenes

00:00:35.640 --> 00:00:38.850
designing, building, and
ultimately delivering this

00:00:38.850 --> 00:00:40.780
technology to you.

00:00:40.780 --> 00:00:43.800
So for today's inaugural
episode, we're going to be

00:00:43.800 --> 00:00:46.730
talking about Google Mobile
App Analytics.

00:00:46.730 --> 00:00:50.580
Recently we launched a brand new
Reports and also version 2

00:00:50.580 --> 00:00:53.670
of the Android and iOS SDKs.

00:00:53.670 --> 00:00:56.320
Both of these are just recently
out in public beta,

00:00:56.320 --> 00:00:58.610
so anyone can go use them.

00:00:58.610 --> 00:01:00.960
And to help me talk about Google
Mobile App Analytics,

00:01:00.960 --> 00:01:06.350
we have with me Jim Cotugno, who
is a software engineer, a

00:01:06.350 --> 00:01:08.880
driving force behind
the Mobile SDKs.

00:01:08.880 --> 00:01:09.590
So Jim, it's good to
have you here.

00:01:09.590 --> 00:01:10.980
JIM COTUGNO: Well
thanks, Andrew.

00:01:10.980 --> 00:01:12.340
ANDREW WALES: Thanks
for joining us

00:01:12.340 --> 00:01:13.390
on our first episode.

00:01:13.390 --> 00:01:16.400
You're a brave man.

00:01:16.400 --> 00:01:18.400
So just to start, I'll
jump right into it.

00:01:18.400 --> 00:01:22.120
Can you tell us just a little
bit about what your role is on

00:01:22.120 --> 00:01:24.120
the Google Analytics team, and
how long you've been working

00:01:24.120 --> 00:01:25.310
with Mobile App Analytics?

00:01:25.310 --> 00:01:25.730
JIM COTUGNO: Sure.

00:01:25.730 --> 00:01:30.350
So I'm responsible for the
Mobile App A Analytics SDKs,

00:01:30.350 --> 00:01:32.110
iOS and Android.

00:01:32.110 --> 00:01:37.950
I've been working on them
since December 2010.

00:01:37.950 --> 00:01:42.010
And since that time, we've
enhanced the V1 SDKs, what I

00:01:42.010 --> 00:01:43.180
call the V1 SDKs.

00:01:43.180 --> 00:01:47.450
And also we started looking
at what app users or app

00:01:47.450 --> 00:01:49.960
developers really needed
for Analytics.

00:01:49.960 --> 00:01:54.390
And the product of that effort
is what you see today with the

00:01:54.390 --> 00:01:56.020
App Analytics beta.

00:01:56.020 --> 00:01:57.020
ANDREW WALES: Cool.

00:01:57.020 --> 00:02:01.400
So for developers who maybe were
using V1 since way back

00:02:01.400 --> 00:02:07.030
when you were first working on
it, what's new that they

00:02:07.030 --> 00:02:10.090
should know in a nutshell
that's new and exciting?

00:02:10.090 --> 00:02:13.030
JIM COTUGNO: Well, I think the
biggest thing that's new is

00:02:13.030 --> 00:02:16.110
that we have a whole new set of
reports which are focused

00:02:16.110 --> 00:02:18.200
on apps instead of websites.

00:02:18.200 --> 00:02:22.180
Those of you who are using the
V1 SDKs know that you're

00:02:22.180 --> 00:02:27.160
reporting to basically a web
Analytics reporting framework.

00:02:27.160 --> 00:02:31.960
But with the V2 SDK, we have
app-specific reports that app

00:02:31.960 --> 00:02:35.870
developers want to see.

00:02:35.870 --> 00:02:41.780
The other thing that the V2
SDKs bring to you is that

00:02:41.780 --> 00:02:45.160
they're more streamlined, so
they're hopefully less

00:02:45.160 --> 00:02:47.310
intrusive on your application.

00:02:47.310 --> 00:02:48.565
And also they're
easier to use.

00:02:51.160 --> 00:02:56.270
And I guess the final feature is
that you have access to the

00:02:56.270 --> 00:02:59.040
whole suite of Google Analytics
features, not just a

00:02:59.040 --> 00:03:02.420
small subset of them like
you did before.

00:03:02.420 --> 00:03:02.960
ANDREW WALES: Cool.

00:03:02.960 --> 00:03:05.670
And I think I've got a ton of
questions for you about all

00:03:05.670 --> 00:03:06.740
the stuff that's new.

00:03:06.740 --> 00:03:09.780
But before doing that, I kind
of wanted to just step back.

00:03:09.780 --> 00:03:13.580
And maybe for some developers
out there who aren't yet using

00:03:13.580 --> 00:03:19.000
Analytics in their app, can you
just give us a brief-- if

00:03:19.000 --> 00:03:21.550
you're not already using some
kind of Analytics package in

00:03:21.550 --> 00:03:24.870
your app, why do you think
it's a good idea?

00:03:24.870 --> 00:03:27.440
JIM COTUGNO: I think it's a good
idea because you build an

00:03:27.440 --> 00:03:28.990
app and you want people
to use it.

00:03:28.990 --> 00:03:33.990
But you really don't have
any idea of how

00:03:33.990 --> 00:03:35.140
they're using it or why.

00:03:35.140 --> 00:03:39.100
So Analytics brings that to
you so you can see what

00:03:39.100 --> 00:03:41.590
features of your application
users like, what features they

00:03:41.590 --> 00:03:42.080
don't like.

00:03:42.080 --> 00:03:45.750
You can see where your
application's popular.

00:03:45.750 --> 00:03:48.820
And in my previous life, one
of the things we wanted to

00:03:48.820 --> 00:03:51.880
know is which countries were
people buying our app from.

00:03:51.880 --> 00:03:54.380
And then we would actually
put the effort into

00:03:54.380 --> 00:03:57.870
internationalize or localize the
application based on the

00:03:57.870 --> 00:04:00.100
countries that were popular.

00:04:00.100 --> 00:04:04.880
So that's something you can
use Analytics to find out.

00:04:04.880 --> 00:04:10.830
You could find out if your app
is funded through advertising.

00:04:10.830 --> 00:04:16.180
You can use Analytics to track
how successful your app is in

00:04:16.180 --> 00:04:19.029
terms of advertising dollars,
how much money are you making,

00:04:19.029 --> 00:04:19.790
that kind of thing.

00:04:19.790 --> 00:04:22.230
ANDREW WALES: Pretty key for
a lot of developers.

00:04:22.230 --> 00:04:25.590
And for developers who maybe
have used our JavaScript

00:04:25.590 --> 00:04:29.160
libraries on the web but haven't
yet tried native

00:04:29.160 --> 00:04:34.180
app-tracking on Android or
iOS, how similar is it to

00:04:34.180 --> 00:04:36.930
doing an implementation
on Android or iOS?

00:04:36.930 --> 00:04:40.460
JIM COTUGNO: So obviously apps
and websites are different.

00:04:40.460 --> 00:04:44.900
But where possible, we tried
to keep the two in sync.

00:04:44.900 --> 00:04:49.320
So you have the concept of a
tracker on the web Analytics,

00:04:49.320 --> 00:04:52.942
and you also have that in
app Analytics, as well.

00:04:52.942 --> 00:04:55.810
And you have the types
of beacons or hits

00:04:55.810 --> 00:04:56.610
that you can send.

00:04:56.610 --> 00:04:58.410
It's very similar
between the two.

00:04:58.410 --> 00:04:59.370
You have events.

00:04:59.370 --> 00:05:01.080
You have a user timings.

00:05:01.080 --> 00:05:01.760
You have social.

00:05:01.760 --> 00:05:03.990
You have e-commerce.

00:05:03.990 --> 00:05:06.935
And for apps, you have something
called views, or

00:05:06.935 --> 00:05:09.570
screen views, which are very
similar to page views.

00:05:09.570 --> 00:05:12.390
And so a lot of the concepts
are the same.

00:05:12.390 --> 00:05:16.980
Now as far as apps go, a
couple key differences.

00:05:16.980 --> 00:05:20.980
The first one is apps may be
running when you don't have an

00:05:20.980 --> 00:05:22.100
connection.

00:05:22.100 --> 00:05:26.450
So the important thing there
is that we have to kind of

00:05:26.450 --> 00:05:29.460
keep track of the activity in
the app, but then hold it

00:05:29.460 --> 00:05:32.280
internally and send it later.

00:05:32.280 --> 00:05:34.560
And so that presents a whole
new dimension of things you

00:05:34.560 --> 00:05:36.170
have to think about as
an app developer.

00:05:36.170 --> 00:05:40.460
How often do you want
to send that data?

00:05:40.460 --> 00:05:45.940
You have to balance sending it
quickly versus trying to be

00:05:45.940 --> 00:05:51.820
nice on battery usage and data
usage for your app users.

00:05:51.820 --> 00:05:54.510
ANDREW WALES: I know that's
something in the new SDKs that

00:05:54.510 --> 00:05:57.350
you can configure, how often
you want to send.

00:05:57.350 --> 00:05:58.920
JIM COTUGNO: Yeah, so it's
totally under your control.

00:05:58.920 --> 00:06:01.870
We try to give you reasonable
defaults to start, but you

00:06:01.870 --> 00:06:05.348
certainly can tune it
as you see fit.

00:06:05.348 --> 00:06:08.040
ANDREW WALES: Cool, cool.

00:06:08.040 --> 00:06:08.330
Great.

00:06:08.330 --> 00:06:10.770
So is there any reason you
wouldn't want to use Analytics

00:06:10.770 --> 00:06:12.020
in your app?

00:06:12.020 --> 00:06:13.110
JIM COTUGNO: I can't
think of any.

00:06:13.110 --> 00:06:13.310
ANDREW WALES: Good.

00:06:13.310 --> 00:06:15.070
That was a test,
and you passed.

00:06:15.070 --> 00:06:15.930
JIM COTUGNO: I passed
that one, huh?

00:06:15.930 --> 00:06:16.360
ANDREW WALES: Yes.

00:06:16.360 --> 00:06:17.720
Fantastic.

00:06:17.720 --> 00:06:19.090
OK.

00:06:19.090 --> 00:06:21.110
So let's talk about what's
been released today.

00:06:21.110 --> 00:06:24.030
So I mentioned earlier that
we've launched this new

00:06:24.030 --> 00:06:25.080
reporting experience.

00:06:25.080 --> 00:06:28.720
And we have V2 of the SDKs, and
those are in public beta.

00:06:28.720 --> 00:06:30.960
And you've talked a little
bit already about

00:06:30.960 --> 00:06:32.570
some of the new features.

00:06:32.570 --> 00:06:34.580
But I wanted to run through in
detail, for those who haven't

00:06:34.580 --> 00:06:37.480
checked out yet, maybe just go
through and talk about some of

00:06:37.480 --> 00:06:42.478
the top new features, top new
reports and data that you can

00:06:42.478 --> 00:06:44.370
get from using the new SDK.

00:06:44.370 --> 00:06:46.120
And I'll switch to some
visuals, too.

00:06:46.120 --> 00:06:47.580
JIM COTUGNO: OK.

00:06:47.580 --> 00:06:52.760
So as I said before, we wanted
reports that made sense for

00:06:52.760 --> 00:06:55.050
app developers and
for applications.

00:06:55.050 --> 00:06:58.760
And so that was our first key
thing, to come up with a set

00:06:58.760 --> 00:07:02.310
of reports, and the dimensions
and metrics that support those

00:07:02.310 --> 00:07:04.180
reports, obviously.

00:07:04.180 --> 00:07:08.110
So, for example, the first set
of reports we can provide for

00:07:08.110 --> 00:07:11.150
you is activity on your users.

00:07:11.150 --> 00:07:14.700
So we have a new users report,
active users report.

00:07:14.700 --> 00:07:17.990
The other thing that people
always ask us is which devices

00:07:17.990 --> 00:07:21.260
are people using my apps on.

00:07:21.260 --> 00:07:25.040
So we have reports that focus
on not only the devices, but

00:07:25.040 --> 00:07:26.470
what operating systems.

00:07:26.470 --> 00:07:29.280
There are several versions
of Android out there.

00:07:29.280 --> 00:07:32.500
There are several versions
of iOS out there.

00:07:32.500 --> 00:07:34.790
And of course, every device has
a different screen size it

00:07:34.790 --> 00:07:36.860
seems these days, so
screen resolution

00:07:36.860 --> 00:07:38.580
is also very important.

00:07:38.580 --> 00:07:40.510
ANDREW WALES: And that kind of
stuff could help you figure

00:07:40.510 --> 00:07:42.850
out where to prioritize
your development time.

00:07:42.850 --> 00:07:43.140
Right?

00:07:43.140 --> 00:07:43.560
JIM COTUGNO: Right.

00:07:43.560 --> 00:07:46.340
ANDREW WALES: If not everyone is
using the latest version of

00:07:46.340 --> 00:07:48.270
iOS, it probably doesn't
make sense to

00:07:48.270 --> 00:07:49.200
rely on those features.

00:07:49.200 --> 00:07:49.640
JIM COTUGNO: Right.

00:07:49.640 --> 00:07:50.890
Exactly right.

00:07:53.130 --> 00:07:54.470
ANDREW WALES: So, yeah, what's
engagement flow?

00:07:54.470 --> 00:07:56.520
JIM COTUGNO: So this Engagement
Flow report is

00:07:56.520 --> 00:07:57.290
really cool.

00:07:57.290 --> 00:08:01.050
You can see exactly how your
users flow through your

00:08:01.050 --> 00:08:06.110
application, how do they get
there, which screens do they

00:08:06.110 --> 00:08:07.110
go through on their way.

00:08:07.110 --> 00:08:10.530
And when they leave the
application, you can see where

00:08:10.530 --> 00:08:11.140
they leave it.

00:08:11.140 --> 00:08:14.680
So if they're leaving it on a
screen that you thought they

00:08:14.680 --> 00:08:18.420
would just do as kind of an
interim step, then maybe you

00:08:18.420 --> 00:08:22.630
want to find out why they're
leaving and change your app so

00:08:22.630 --> 00:08:25.506
that they stick with
it longer.

00:08:25.506 --> 00:08:27.140
ANDREW WALES: Improving
that user experience.

00:08:27.140 --> 00:08:27.520
JIM COTUGNO: Yes.

00:08:27.520 --> 00:08:29.878
Absolutely.

00:08:29.878 --> 00:08:30.720
ANDREW WALES: Exception
Tracking.

00:08:30.720 --> 00:08:32.799
This is something that's
totally new.

00:08:32.799 --> 00:08:33.150
JIM COTUGNO: Yeah.

00:08:33.150 --> 00:08:36.340
So when we were looking at what
app developers wanted to

00:08:36.340 --> 00:08:40.809
know about their application
usage, crashes and exceptions

00:08:40.809 --> 00:08:43.539
was a big one.

00:08:43.539 --> 00:08:49.930
Those of you familiar with the
App Store and iTunes Connect,

00:08:49.930 --> 00:08:55.530
you get the top three heavy
hitters in terms of where your

00:08:55.530 --> 00:08:57.350
application's crashing,
but not much more.

00:08:57.350 --> 00:08:59.340
They have no idea what
kind of frequency

00:08:59.340 --> 00:09:02.250
those crashes are happening.

00:09:02.250 --> 00:09:05.820
So with the crash and exceptions
report, you can see

00:09:05.820 --> 00:09:08.320
all the crashes and exceptions
that are happening in your

00:09:08.320 --> 00:09:08.880
application.

00:09:08.880 --> 00:09:11.540
And more importantly,
you can see how

00:09:11.540 --> 00:09:12.430
often they're happening.

00:09:12.430 --> 00:09:16.880
So you can see if your top crash
is happening 1% of the

00:09:16.880 --> 00:09:18.060
time, 10% of the time.

00:09:18.060 --> 00:09:21.660
Are all your users affected, or
just a very small portion?

00:09:21.660 --> 00:09:23.660
It's something I think
is very powerful.

00:09:23.660 --> 00:09:24.700
ANDREW WALES: And you
break that down by

00:09:24.700 --> 00:09:25.670
app version, right?

00:09:25.670 --> 00:09:26.290
So you can see if--

00:09:26.290 --> 00:09:27.670
JIM COTUGNO: Certainly.

00:09:27.670 --> 00:09:29.510
ANDREW WALES: --a new version
you released has suddenly many

00:09:29.510 --> 00:09:30.390
more crashes and exceptions.

00:09:30.390 --> 00:09:30.940
JIM COTUGNO: That's right.

00:09:30.940 --> 00:09:32.190
That's right.

00:09:34.500 --> 00:09:35.290
ANDREW WALES: User
defined timings.

00:09:35.290 --> 00:09:37.300
I think this was around
on the web, too.

00:09:37.300 --> 00:09:39.250
But this is new for apps.

00:09:39.250 --> 00:09:42.140
JIM COTUGNO: Yeah, this is
something we added for apps in

00:09:42.140 --> 00:09:43.220
this new SDK.

00:09:43.220 --> 00:09:48.110
And I'm surprised that this has
have been adopted pretty

00:09:48.110 --> 00:09:49.680
aggressively by app
developers.

00:09:49.680 --> 00:09:53.400
So obviously there's a need for
app developers to measure

00:09:53.400 --> 00:09:54.920
key timings in their
applications.

00:09:54.920 --> 00:09:57.610
How long does it take for
a screen to load?

00:09:57.610 --> 00:10:01.940
How long does a purchase take
to happen in your app?

00:10:01.940 --> 00:10:02.920
Those kinds of things.

00:10:02.920 --> 00:10:06.080
And you can do that with the
user timings that we have.

00:10:09.790 --> 00:10:11.750
ANDREW WALES: And this was one
I know that's important to a

00:10:11.750 --> 00:10:15.860
lot of developers in terms of
being able to see where the

00:10:15.860 --> 00:10:18.170
users are coming from, from
different marketing channels.

00:10:18.170 --> 00:10:21.320
So we've had some attribution
before, but we do have a new

00:10:21.320 --> 00:10:23.750
Google Play Sources report.

00:10:23.750 --> 00:10:26.090
JIM COTUGNO: Yeah, this
one has got a lot of

00:10:26.090 --> 00:10:27.130
people really excited.

00:10:27.130 --> 00:10:30.780
So you can see how effective
your advertising is in driving

00:10:30.780 --> 00:10:33.760
users to your application
using this Google

00:10:33.760 --> 00:10:35.900
Play Sources report.

00:10:35.900 --> 00:10:37.210
It's very easy to set up.

00:10:39.750 --> 00:10:44.150
As you can see there, you can
get an idea of what your

00:10:44.150 --> 00:10:46.550
campaigns are doing in terms
of generating revenue if

00:10:46.550 --> 00:10:49.810
you're using e-commerce
in your application.

00:10:49.810 --> 00:10:52.890
You can also see how many users
are being brought to

00:10:52.890 --> 00:10:55.850
your app from the various
marketing

00:10:55.850 --> 00:10:56.980
campaigns you have there.

00:10:56.980 --> 00:11:00.190
And you can even go further
and see what kind of

00:11:00.190 --> 00:11:02.690
activities they're using in
your application, what are

00:11:02.690 --> 00:11:06.220
they doing with your app based
on the campaign information.

00:11:06.220 --> 00:11:10.350
ANDREW WALES: So all the user's
subsequent activity,

00:11:10.350 --> 00:11:12.990
how they use the app, and maybe
any transactions they

00:11:12.990 --> 00:11:14.750
complete, those get
attributed back to

00:11:14.750 --> 00:11:15.730
that original campaign.

00:11:15.730 --> 00:11:16.615
JIM COTUGNO: That's correct.

00:11:16.615 --> 00:11:17.050
That's correct.

00:11:17.050 --> 00:11:17.750
ANDREW WALES: That's
really cool.

00:11:17.750 --> 00:11:20.380
And to set this up in the SDK,
it's pretty straightforward.

00:11:20.380 --> 00:11:22.560
JIM COTUGNO: Yeah, just a few
lines in your manifest,

00:11:22.560 --> 00:11:24.930
really, for Android.

00:11:24.930 --> 00:11:27.540
ANDREW WALES: Cool.

00:11:27.540 --> 00:11:29.770
So that's sort of the highlight,
I think, of a lot

00:11:29.770 --> 00:11:31.440
of the top features.

00:11:31.440 --> 00:11:35.190
Is there anything new from the
SDK perspective, like in terms

00:11:35.190 --> 00:11:37.680
of if someone was working with
version one and they're

00:11:37.680 --> 00:11:38.280
switching to version two?

00:11:38.280 --> 00:11:41.600
Is there anything they should
be aware for Android or iOS?

00:11:41.600 --> 00:11:44.906
JIM COTUGNO: So it's easier
and better for you.

00:11:44.906 --> 00:11:47.200
ANDREW WALES: That's good.

00:11:47.200 --> 00:11:48.820
JIM COTUGNO: So there are
three key things.

00:11:48.820 --> 00:11:50.860
Obviously we talked
a lot about the

00:11:50.860 --> 00:11:53.240
app-specific reporting.

00:11:53.240 --> 00:11:56.320
The other thing when I first
started working with the SDKs

00:11:56.320 --> 00:11:59.175
is I noticed that they were
difficult to use.

00:11:59.175 --> 00:12:03.670
I got lots of questions on
when do I call close, and

00:12:03.670 --> 00:12:04.820
things like that.

00:12:04.820 --> 00:12:08.510
In reality, you didn't have to
call close at all, ever.

00:12:08.510 --> 00:12:16.530
So we rewrote the SDKs to
address that particular issue

00:12:16.530 --> 00:12:18.080
of usability.

00:12:18.080 --> 00:12:22.250
And the other thing that I
noticed is that the app SDKs,

00:12:22.250 --> 00:12:26.400
the original ones, would crash
fairly frequently.

00:12:26.400 --> 00:12:28.890
Some of you probably
went through that.

00:12:28.890 --> 00:12:33.500
And in the Android world, they
also would degrade the

00:12:33.500 --> 00:12:38.580
performance of your application
itself.

00:12:38.580 --> 00:12:43.670
So you could see stutters or
stalls, that kind of thing.

00:12:43.670 --> 00:12:46.740
So those are kind of the
problems we wanted to address.

00:12:46.740 --> 00:12:48.050
ANDREW WALES: And that's
actually a good segue, because

00:12:48.050 --> 00:12:51.290
I wanted to, as part of "Behind
the Code", not only

00:12:51.290 --> 00:12:54.520
talk about new features, but
also give people insight into

00:12:54.520 --> 00:12:59.900
what you think about when you go
back and go to the drawing

00:12:59.900 --> 00:13:02.090
board and come up with new ideas
and how you actually

00:13:02.090 --> 00:13:03.720
bring that to market.

00:13:03.720 --> 00:13:07.270
So after you had done version
one, I think you touched on it

00:13:07.270 --> 00:13:08.550
a little bit already, but
what were some of the

00:13:08.550 --> 00:13:10.700
main drivers for you?

00:13:10.700 --> 00:13:13.230
Why did the team decide to go
back and take another look at

00:13:13.230 --> 00:13:15.640
doing app Analytics?

00:13:15.640 --> 00:13:18.110
JIM COTUGNO: Well, we wanted to
address the problems of the

00:13:18.110 --> 00:13:19.100
original SDKs.

00:13:19.100 --> 00:13:23.480
In particular, ease of use was
probably the key thing we

00:13:23.480 --> 00:13:24.400
wanted to tackle.

00:13:24.400 --> 00:13:28.500
And then, of course, we have a
goal that the SDKs, no matter

00:13:28.500 --> 00:13:32.155
what they did, would never crash
the app or impact the

00:13:32.155 --> 00:13:33.770
app in a negative way.

00:13:33.770 --> 00:13:38.650
So we tried very hard to
insulate applications from SDK

00:13:38.650 --> 00:13:44.450
failures that may happen by
doing a graceful degradation.

00:13:44.450 --> 00:13:48.350
So the SDK may decide to shut
down collecting data, but it

00:13:48.350 --> 00:13:53.040
won't crash the app if it runs
into certain error conditions.

00:13:53.040 --> 00:13:54.150
I talked about easy use.

00:13:54.150 --> 00:13:59.120
We wanted you to be able to
pick up the SDK and within

00:13:59.120 --> 00:14:03.040
five minutes have some basic
Analytics available to you,

00:14:03.040 --> 00:14:05.340
basically five minutes
worth of work.

00:14:05.340 --> 00:14:07.950
This was our goal, to
get you started.

00:14:07.950 --> 00:14:12.180
So you didn't have to figure out
exactly where to put your

00:14:12.180 --> 00:14:16.750
lines of code, how do I write
analytics into this.

00:14:16.750 --> 00:14:20.460
So we tried to make it
really easy to start.

00:14:20.460 --> 00:14:22.490
ANDREW WALES: Do you feel like
five minutes, is that what

00:14:22.490 --> 00:14:23.740
developers need?

00:14:25.490 --> 00:14:26.910
JIM COTUGNO: I think we're
kind of in the 10-minute

00:14:26.910 --> 00:14:28.670
range, but yeah.

00:14:28.670 --> 00:14:34.110
It's easy to get going right
out of the gates.

00:14:34.110 --> 00:14:39.000
And then as you want to get
more sophisticated in your

00:14:39.000 --> 00:14:41.280
Analytics, then of course
it'll take a

00:14:41.280 --> 00:14:42.110
little bit more effort.

00:14:42.110 --> 00:14:42.330
ANDREW WALES: Sure.

00:14:42.330 --> 00:14:43.740
There's a lot there work with.

00:14:43.740 --> 00:14:46.740
And just if anybody's watching
and wants to take a look at

00:14:46.740 --> 00:14:49.520
the Getting Started guide, you
can see that it is actually

00:14:49.520 --> 00:14:50.640
really simple.

00:14:50.640 --> 00:14:51.410
Jim says 10.

00:14:51.410 --> 00:14:54.860
I would put it closer to five,
but you can go check it out.

00:14:54.860 --> 00:15:00.400
It's at developers.googl
e.com/analytics.

00:15:00.400 --> 00:15:04.330
So I guess those were some of
it goals you were looking at

00:15:04.330 --> 00:15:07.660
when you were redesigning the
SDKs and sort of the reporting

00:15:07.660 --> 00:15:09.060
experience.

00:15:09.060 --> 00:15:10.990
Were there any technical
challenges that you ran into

00:15:10.990 --> 00:15:13.390
that were particularly
difficult?

00:15:13.390 --> 00:15:15.290
JIM COTUGNO: Yeah, there are
couple that kind of made the

00:15:15.290 --> 00:15:16.700
project interesting.

00:15:16.700 --> 00:15:20.710
For Android, in particular, we
wanted to make sure all the

00:15:20.710 --> 00:15:25.100
Google Analytics activity was
off the main UI thread.

00:15:25.100 --> 00:15:27.720
Reason being is that
we do things like

00:15:27.720 --> 00:15:28.880
connect to the network.

00:15:28.880 --> 00:15:31.730
We access persistent store
on your device.

00:15:31.730 --> 00:15:34.130
We wanted to make sure that
we'd get out of the way so

00:15:34.130 --> 00:15:38.160
that the UI experience for the
user wouldn't be impacted at

00:15:38.160 --> 00:15:40.810
all by the Analytics SDK.

00:15:40.810 --> 00:15:43.820
And that turned out to be pretty
tricky because there's

00:15:43.820 --> 00:15:44.750
timing issues.

00:15:44.750 --> 00:15:48.440
Because when you're dealing with
multithread environments,

00:15:48.440 --> 00:15:50.170
you have to make
sure everything

00:15:50.170 --> 00:15:52.120
can synchronize properly.

00:15:52.120 --> 00:15:54.500
And one of the key things that
we have to do is we have to

00:15:54.500 --> 00:16:00.330
accept tracking beacons before
we're ready to send them.

00:16:00.330 --> 00:16:04.170
So that was exciting.

00:16:04.170 --> 00:16:07.230
ANDREW WALES: What
about for iOS?

00:16:07.230 --> 00:16:08.786
Was it basically the same
doing the SDK for iOS?

00:16:08.786 --> 00:16:09.500
Or is it different?

00:16:09.500 --> 00:16:11.580
JIM COTUGNO: iOS is a little bit
easier in terms of keeping

00:16:11.580 --> 00:16:15.180
stuff off the UI thread, because
persistent store

00:16:15.180 --> 00:16:20.530
issues aren't anywhere near
as difficult to handle.

00:16:20.530 --> 00:16:23.245
The one thing, though, in
dealing with crash and

00:16:23.245 --> 00:16:26.450
exception reporting, iOS was
actually a little bit more

00:16:26.450 --> 00:16:29.170
difficult here because, first
off, there are several types

00:16:29.170 --> 00:16:31.550
of exceptions or crashes
that you can encounter.

00:16:31.550 --> 00:16:34.750
You have NSException, NSError.

00:16:34.750 --> 00:16:37.760
And the other thing is we're
limited in the crash and

00:16:37.760 --> 00:16:42.280
exception handling, how
much data we can send.

00:16:42.280 --> 00:16:44.550
And I guess this is also true
for the Android, but we have

00:16:44.550 --> 00:16:48.520
to kind of pick what we think
is the most relevant part of

00:16:48.520 --> 00:16:52.610
the crash or the exception or
the error, and report that.

00:16:52.610 --> 00:16:55.450
So that was kind of a challenge
to work through and

00:16:55.450 --> 00:16:58.950
figure out what the best
thing to do was.

00:16:58.950 --> 00:17:00.620
ANDREW WALES: I should say,
though, that I think from, at

00:17:00.620 --> 00:17:03.780
least the way it turned out so
far, tracking exceptions on

00:17:03.780 --> 00:17:05.654
iOS is actually pretty
straightforward.

00:17:05.654 --> 00:17:06.339
JIM COTUGNO: Oh, good.

00:17:06.339 --> 00:17:08.400
ANDREW WALES: Thanks to the
work that you put into it.

00:17:16.050 --> 00:17:18.410
One other question may be, just
to follow up on that, and

00:17:18.410 --> 00:17:22.240
we talked a little about it
earlier, but in terms of

00:17:22.240 --> 00:17:25.550
dispatching data--

00:17:25.550 --> 00:17:26.430
Because it works a little
bit differently

00:17:26.430 --> 00:17:27.030
from the web, right?

00:17:27.030 --> 00:17:29.445
So you're queuing up hits
locally and then you're going

00:17:29.445 --> 00:17:31.890
to dispatch them.

00:17:31.890 --> 00:17:34.770
Is It's fairly straightforward.

00:17:34.770 --> 00:17:37.360
Developers can decide
how often they

00:17:37.360 --> 00:17:38.770
want that to dispatch.

00:17:38.770 --> 00:17:41.480
And that works pretty simply
across Android and iOS.

00:17:41.480 --> 00:17:42.870
Is that accurate?

00:17:42.870 --> 00:17:45.220
JIM COTUGNO: Yeah.

00:17:45.220 --> 00:17:46.690
I guess the best way
is go over it.

00:17:46.690 --> 00:17:51.980
So the idea is that the hits
obviously don't necessarily go

00:17:51.980 --> 00:17:56.180
out right away, because you
might not have a network

00:17:56.180 --> 00:17:59.820
connection or you might not
want to use the network

00:17:59.820 --> 00:18:00.750
connection.

00:18:00.750 --> 00:18:03.660
So the app developer has
control over that.

00:18:07.380 --> 00:18:10.110
Let me get my thoughts
together here.

00:18:10.110 --> 00:18:12.240
So the idea is you have to look
at your application, what

00:18:12.240 --> 00:18:14.940
it's doing, and then come up
with a dispatch model that

00:18:14.940 --> 00:18:15.730
works best for you.

00:18:15.730 --> 00:18:19.990
So, for example, if you're
busy connecting to the

00:18:19.990 --> 00:18:24.210
internet and sending data back
and forth, then it makes

00:18:24.210 --> 00:18:25.850
perfect sense to send
your Analytics

00:18:25.850 --> 00:18:28.630
data at the same time.

00:18:28.630 --> 00:18:32.183
So you can certainly do what we
call manual dispatch where

00:18:32.183 --> 00:18:35.760
you can call out to the
SDK and say, OK,

00:18:35.760 --> 00:18:36.760
send what you got.

00:18:36.760 --> 00:18:37.650
Let's go.

00:18:37.650 --> 00:18:40.440
Or if your application is in
the background, or if your

00:18:40.440 --> 00:18:44.830
application doesn't do any
data network connectivity

00:18:44.830 --> 00:18:49.460
stuff, you might want to be more
sensitive to the user's

00:18:49.460 --> 00:18:53.420
network data bandwidth and their
battery, and send data

00:18:53.420 --> 00:18:57.660
every five, 10, 20 minutes, 30
minutes, whatever makes sense

00:18:57.660 --> 00:18:59.170
in your case.

00:18:59.170 --> 00:19:00.860
ANDREW WALES: So there's
a lot of flexibility.

00:19:00.860 --> 00:19:03.040
JIM COTUGNO: There's
flexibility, and there's a bit

00:19:03.040 --> 00:19:08.050
of tension here because you have
the need to not send the

00:19:08.050 --> 00:19:11.490
data all the time in order to
be a good citizen on the

00:19:11.490 --> 00:19:14.130
device, but then on the other
hand, you need to get the data

00:19:14.130 --> 00:19:17.280
off the device as well so that
it's fresh enough to be

00:19:17.280 --> 00:19:18.580
included into your reporting.

00:19:18.580 --> 00:19:18.940
ANDREW WALES: Right.

00:19:18.940 --> 00:19:21.035
So finding that balance
depending on your app.

00:19:21.035 --> 00:19:21.290
JIM COTUGNO: Right.

00:19:21.290 --> 00:19:23.580
Yes.

00:19:23.580 --> 00:19:25.060
ANDREW WALES: What
about sessions?

00:19:25.060 --> 00:19:28.050
People might be familiar with
how sessions work on the web.

00:19:28.050 --> 00:19:30.230
I know we could probably talk
about this for a while, but--

00:19:30.230 --> 00:19:32.180
JIM COTUGNO: We could.

00:19:32.180 --> 00:19:34.580
ANDREW WALES: Sessions
are configurable

00:19:34.580 --> 00:19:36.190
on both SDKs, right?

00:19:36.190 --> 00:19:37.290
JIM COTUGNO: Right.

00:19:37.290 --> 00:19:40.830
Sessions, for those of you
familiar with Google

00:19:40.830 --> 00:19:44.260
Analytics, sessions are defined
by 30 minutes of

00:19:44.260 --> 00:19:47.040
inactivity for the web.

00:19:47.040 --> 00:19:51.950
For Universal A Analytics, which
is what the V2 SDKs use,

00:19:51.950 --> 00:19:54.600
you could actually change
that timeout value.

00:19:57.930 --> 00:19:59.720
Every app developer has a little
bit different notion,

00:19:59.720 --> 00:20:03.230
but for apps in general, the
time that the app spends in

00:20:03.230 --> 00:20:06.430
front of the user pretty much
defines the session.

00:20:06.430 --> 00:20:10.890
So if I bring up an app and work
with that app for three,

00:20:10.890 --> 00:20:15.060
four minutes and then go on to
do something else, then the

00:20:15.060 --> 00:20:18.540
session length for that
particular session should be

00:20:18.540 --> 00:20:19.790
three, four minutes.

00:20:22.250 --> 00:20:28.880
Some app developers wanted
to not include

00:20:28.880 --> 00:20:30.190
phone calls, for example.

00:20:30.190 --> 00:20:32.690
They are a big problem, because
some app developers

00:20:32.690 --> 00:20:36.320
want phone calls to change
the session, as it were.

00:20:36.320 --> 00:20:39.490
So if I get a phone call, then
I want to end the session and

00:20:39.490 --> 00:20:39.990
start a new one.

00:20:39.990 --> 00:20:44.000
But then other app developers
want to not end the session

00:20:44.000 --> 00:20:45.740
when they get a phone call.

00:20:45.740 --> 00:20:48.610
So they see a phone call as just
a temporary interruption.

00:20:48.610 --> 00:20:51.630
They want to view the session
as continuing

00:20:51.630 --> 00:20:53.610
after that call ends.

00:20:53.610 --> 00:20:59.500
But yes, the SDKs give you all
kinds of control over when a

00:20:59.500 --> 00:21:02.840
session ends and when it starts,
and how long the

00:21:02.840 --> 00:21:06.570
application can be in the
background before you even

00:21:06.570 --> 00:21:07.850
start a new session.

00:21:07.850 --> 00:21:09.010
ANDREW WALES: Cool.

00:21:09.010 --> 00:21:13.060
And I should just make another
plug that we do have developer

00:21:13.060 --> 00:21:16.060
guides that walk through how
sessions work on Android and

00:21:16.060 --> 00:21:20.040
iOS, and also how you can set
them up to work within the

00:21:20.040 --> 00:21:21.700
model that is your app.

00:21:21.700 --> 00:21:22.797
So go check it out on
developers.googl

00:21:22.797 --> 00:21:25.300
e.com/analytics.

00:21:25.300 --> 00:21:27.953
JIM COTUGNO: Yeah, Andrew did a
lot of work on those guides.

00:21:27.953 --> 00:21:28.780
ANDREW WALES: I did.

00:21:28.780 --> 00:21:32.065
Jim did a lot of reviewing
of those guides as well.

00:21:32.065 --> 00:21:32.500
Great.

00:21:32.500 --> 00:21:37.610
So I think we talked a little
bit about what's new and also

00:21:37.610 --> 00:21:39.210
kind of what went into
it, and some of the

00:21:39.210 --> 00:21:40.830
challenges you ran into.

00:21:40.830 --> 00:21:42.610
There's a lot of power
in these new SDKs.

00:21:42.610 --> 00:21:45.650
There's a lot of new data coming
in to some new reports

00:21:45.650 --> 00:21:47.420
that are hopefully going to
be really tailored for app

00:21:47.420 --> 00:21:49.660
developers.

00:21:49.660 --> 00:21:52.210
I wanted to spend maybe a couple
minutes talking about

00:21:52.210 --> 00:21:54.490
what's next, or what you think
is going to be next for mobile

00:21:54.490 --> 00:21:57.020
app analytics.

00:21:57.020 --> 00:21:59.950
What can you tell us about where
the SDKs are going and

00:21:59.950 --> 00:22:01.780
where the reporting experience
is going?

00:22:01.780 --> 00:22:03.400
JIM COTUGNO: So,
we're not done.

00:22:03.400 --> 00:22:04.300
I can tell you that.

00:22:04.300 --> 00:22:06.780
We're going to do more.

00:22:06.780 --> 00:22:09.690
We're defining more reports
that we want to add to the

00:22:09.690 --> 00:22:11.340
standard report mechanism.

00:22:11.340 --> 00:22:13.590
As an aside, I just want to
let everyone know who's

00:22:13.590 --> 00:22:16.620
familiar with Analytics on the
web, Google Analytics, that

00:22:16.620 --> 00:22:18.880
you have the ability to create
your own custom reports.

00:22:18.880 --> 00:22:24.920
And that ability is also there
for app Analytics as well.

00:22:24.920 --> 00:22:30.110
But we're also going to bring
in more features that web

00:22:30.110 --> 00:22:33.250
Analytics users have that
app Analytics users

00:22:33.250 --> 00:22:36.600
don't have access to.

00:22:36.600 --> 00:22:38.280
Let's see, what else
I have on that?

00:22:42.110 --> 00:22:45.150
I mentioned this tension between
being a good citizen

00:22:45.150 --> 00:22:49.310
with data usage and battery life
versus getting your data

00:22:49.310 --> 00:22:54.590
off, and we're constantly
looking at ways to improve the

00:22:54.590 --> 00:22:56.690
situation so you don't have
to worry so much about it.

00:22:56.690 --> 00:22:59.660
So we want to get the data off
faster but be nicer about it.

00:22:59.660 --> 00:23:01.660
ANDREW WALES: Cool.

00:23:01.660 --> 00:23:05.530
And if you could pick maybe one
feature to just magically

00:23:05.530 --> 00:23:09.260
be included in the SDKs
overnight without no code

00:23:09.260 --> 00:23:12.030
reviews, just popped in and
it worked out, what

00:23:12.030 --> 00:23:12.910
feature would that be?

00:23:12.910 --> 00:23:16.140
JIM COTUGNO: I would be out
of a job right there.

00:23:16.140 --> 00:23:19.520
For me, the most exciting thing
I can think that we

00:23:19.520 --> 00:23:23.770
would love to be able to do
is to do what you can

00:23:23.770 --> 00:23:25.070
do on the web now.

00:23:25.070 --> 00:23:27.920
If you want to change your
tracking or your Analytics

00:23:27.920 --> 00:23:31.580
gathering, it's pretty easy to
do it on the web in the sense

00:23:31.580 --> 00:23:35.260
that you can just push out a
new version of your website

00:23:35.260 --> 00:23:37.640
and it's all there.

00:23:37.640 --> 00:23:41.830
But I want to go farther
than that.

00:23:41.830 --> 00:23:44.630
In the app space, I want to
be able to change my apps

00:23:44.630 --> 00:23:51.240
tracking collection activities
remotely without having to

00:23:51.240 --> 00:23:53.580
push a new version of
the app out there.

00:23:53.580 --> 00:23:55.990
So that, to me, would
be the Holy Grail

00:23:55.990 --> 00:23:58.420
of application Analytics.

00:23:58.420 --> 00:24:00.610
ANDREW WALES: So changing the
implementation on the fly

00:24:00.610 --> 00:24:02.370
without having to push something
to Google Play.

00:24:02.370 --> 00:24:03.655
JIM COTUGNO: Right.

00:24:03.655 --> 00:24:06.990
ANDREW WALES: Is that
all hypothetical?

00:24:06.990 --> 00:24:09.270
JIM COTUGNO: Oh, boy, I'd love
to do something there.

00:24:09.270 --> 00:24:10.020
ANDREW WALES: Fair enough.

00:24:10.020 --> 00:24:11.220
Fair enough.

00:24:11.220 --> 00:24:11.430
Cool.

00:24:11.430 --> 00:24:13.760
Well, thanks, Jim, for
joining us on this

00:24:13.760 --> 00:24:15.950
first "Behind the Code".

00:24:15.950 --> 00:24:19.400
I think now we can switch
to maybe some questions.

00:24:19.400 --> 00:24:21.540
We have a moderator
page that's up.

00:24:21.540 --> 00:24:23.256
Let me--

00:24:23.256 --> 00:24:25.860
MALE SPEAKER: And while you're
getting that together, Andrew,

00:24:25.860 --> 00:24:28.500
one of the questions came in
over YouTube from Nick.

00:24:28.500 --> 00:24:31.060
So this is probably for Jim, but
both of you can take it.

00:24:31.060 --> 00:24:33.610
The question is why would
somebody use Analytics Mobile

00:24:33.610 --> 00:24:37.640
SDK when almost all SDKs,
including PlayHaven, for

00:24:37.640 --> 00:24:42.930
example, already include
Analytics as a component?

00:24:42.930 --> 00:24:45.060
JIM COTUGNO: You want
to take that one?

00:24:45.060 --> 00:24:46.440
ANDREW WALES: So just
to recap, it's

00:24:46.440 --> 00:24:48.720
why use the GA SDK?

00:24:48.720 --> 00:24:50.190
MALE SPEAKER: Why use the
Analytics Mobile SDK from

00:24:50.190 --> 00:24:53.830
Google if other ad SDKs also
already include Analytics

00:24:53.830 --> 00:24:55.270
components?

00:24:55.270 --> 00:24:56.750
ANDREW WALES: Oh, that's
a good point.

00:24:56.750 --> 00:24:59.790
I think if I understand it
right, I think one of the nice

00:24:59.790 --> 00:25:03.050
things about the GA SDK,
especially what we have in

00:25:03.050 --> 00:25:07.480
terms of campaign attribution.

00:25:07.480 --> 00:25:10.400
Our goal is to sit at the middle
of a lot of different

00:25:10.400 --> 00:25:13.930
marketing channels
and efforts.

00:25:13.930 --> 00:25:18.650
We do try to give specific
valuable reports for Google

00:25:18.650 --> 00:25:22.450
paid marketing when we can, but
our goal is to be a little

00:25:22.450 --> 00:25:23.880
more agnostic.

00:25:23.880 --> 00:25:27.930
So with GA, you get a platform
that can really plug into all

00:25:27.930 --> 00:25:30.180
these different marketing
channels, irrespective of what

00:25:30.180 --> 00:25:31.910
ad networks you're using.

00:25:31.910 --> 00:25:34.080
And to give you that all in one
place, along with all the

00:25:34.080 --> 00:25:37.180
rich features like segmentation
and everything

00:25:37.180 --> 00:25:38.520
else from GA.

00:25:38.520 --> 00:25:39.620
I don't know, Jim, if you
had anything else.

00:25:39.620 --> 00:25:41.850
JIM COTUGNO: Yeah, I was going
to say, just to add to that,

00:25:41.850 --> 00:25:47.330
the SDKs themselves are designed
so that any sort of

00:25:47.330 --> 00:25:50.720
attribution that you have access
to as an app developer,

00:25:50.720 --> 00:25:56.880
you can pass through to the GA
reporting framework, just like

00:25:56.880 --> 00:26:00.370
that Google Play sources
report you saw before.

00:26:00.370 --> 00:26:01.570
It's not limited to that.

00:26:01.570 --> 00:26:08.350
So you can certainly pass
attribution through the SDK,

00:26:08.350 --> 00:26:10.460
and we'll keep track
of it for you.

00:26:10.460 --> 00:26:15.120
ANDREW WALES: I might add one
more thing, too. is that a lot

00:26:15.120 --> 00:26:17.640
of people are using GA for web
tracking, and if you're

00:26:17.640 --> 00:26:20.360
already familiar with the
interface and how it works,

00:26:20.360 --> 00:26:23.610
maybe you're using the
core reporting API.

00:26:23.610 --> 00:26:28.285
In that sense, it's very easy
to then loop in the app

00:26:28.285 --> 00:26:30.990
tracking component of GA and
just get up and running that

00:26:30.990 --> 00:26:33.450
much more quickly, in addition
to everything that Jim

00:26:33.450 --> 00:26:35.500
mentioned as well.

00:26:35.500 --> 00:26:36.380
MALE SPEAKER: Eduardo
has a question.

00:26:36.380 --> 00:26:39.830
He was asking how the SDK and
Universal Analytics new

00:26:39.830 --> 00:26:42.140
features relate.

00:26:42.140 --> 00:26:45.270
JIM COTUGNO: The SDK is built on
top of Universal Analytics.

00:26:45.270 --> 00:26:51.000
So it uses most, if not all, the
features that UA currently

00:26:51.000 --> 00:26:52.470
has available, including--

00:26:52.470 --> 00:26:53.990
I guess we never did
talk about custom

00:26:53.990 --> 00:26:54.850
dimensions of metrics.

00:26:54.850 --> 00:26:56.030
ANDREW WALES: That's right.

00:26:56.030 --> 00:26:59.170
JIM COTUGNO: SDK also has those
available, and social

00:26:59.170 --> 00:27:00.390
user timings.

00:27:00.390 --> 00:27:04.470
And the nice thing about UA from
a good citizen point of

00:27:04.470 --> 00:27:09.020
view is that less data is being
sent with each hit.

00:27:09.020 --> 00:27:13.130
And then the V2 SDKs follow
that same thing.

00:27:13.130 --> 00:27:18.330
They send less data with
each hit as a result.

00:27:18.330 --> 00:27:20.740
ANDREW WALES: And one add-on to
that, we didn't talk about

00:27:20.740 --> 00:27:22.910
custom metrics specifically.

00:27:22.910 --> 00:27:26.410
I think we do a whole GDL
on that, or maybe two.

00:27:26.410 --> 00:27:29.160
But there is a big,
comprehensive guide available

00:27:29.160 --> 00:27:31.990
at
developers.google.com/analytics

00:27:31.990 --> 00:27:34.390
if you want to take a look and
learn more about custom

00:27:34.390 --> 00:27:35.640
dimensions and metrics.

00:27:39.720 --> 00:27:42.660
So maybe we'll switch to
the moderator here.

00:27:46.250 --> 00:27:46.620
Let's take a look.

00:27:46.620 --> 00:27:49.270
So the first question, from
Jason: Our hybrid e-commerce

00:27:49.270 --> 00:27:52.820
app jumps between native app
pages and mobile web pages.

00:27:52.820 --> 00:27:56.780
So what best practices do we use
to one, have seamless and

00:27:56.780 --> 00:28:00.070
visitor data, and two, not
double count when looking at

00:28:00.070 --> 00:28:03.540
our mobile web page
stats via GA.

00:28:03.540 --> 00:28:03.810
JIM COTUGNO: Yeah.

00:28:03.810 --> 00:28:06.370
So I don't think we have a good
answer for you on that

00:28:06.370 --> 00:28:09.420
right now, but that
is something we're

00:28:09.420 --> 00:28:12.240
looking very hard at.

00:28:12.240 --> 00:28:15.770
So if I get this right, when you
say mobile web pages, so

00:28:15.770 --> 00:28:19.210
you'll have your Analytics
tracking code on those website

00:28:19.210 --> 00:28:25.580
pages as well, so that'll like
two different visitors in that

00:28:25.580 --> 00:28:29.420
sense, if you're you using
the same tracking ID for

00:28:29.420 --> 00:28:31.520
both web and app.

00:28:31.520 --> 00:28:35.180
One other note is we talked
about the concept

00:28:35.180 --> 00:28:38.080
of these app reports.

00:28:38.080 --> 00:28:46.855
The app reports only exist for
profiles that have app

00:28:46.855 --> 00:28:51.700
tracking enabled, and they only
get data from the mobile

00:28:51.700 --> 00:28:56.380
app SDKs, whereas the web
reports will view only data

00:28:56.380 --> 00:29:00.015
from the web tracking.

00:29:00.015 --> 00:29:00.430
ANDREW WALES: Right.

00:29:00.430 --> 00:29:04.570
So web data goes to web profiles
and app data to app.

00:29:04.570 --> 00:29:07.990
Yeah, so I think we have
some ideas for that.

00:29:07.990 --> 00:29:15.270
I would say, Jason, informally
I have seen this work when

00:29:15.270 --> 00:29:17.410
you're showing your web content
in the context of a

00:29:17.410 --> 00:29:20.970
web view within, for example,
an Android app.

00:29:20.970 --> 00:29:24.620
I think there are ways, and
I'm hoping to talk to Jim

00:29:24.620 --> 00:29:27.510
about that and maybe publish
something later, to actually

00:29:27.510 --> 00:29:32.830
have the activity on that page
that's being shown in the web

00:29:32.830 --> 00:29:35.590
view be tracked as actually
native, so you can keep it in

00:29:35.590 --> 00:29:36.570
one session.

00:29:36.570 --> 00:29:38.580
But more on that later.

00:29:38.580 --> 00:29:40.880
I think that's still something
we're looking into.

00:29:44.070 --> 00:29:44.890
OK.

00:29:44.890 --> 00:29:47.740
I want to jump down to a
question about migration,

00:29:47.740 --> 00:29:49.600
because I know I've heard
this one a couple times.

00:29:49.600 --> 00:29:50.446
JIM COTUGNO: Yeah.

00:29:50.446 --> 00:29:52.270
ANDREW WALES: The question is,
is there any way to migrate

00:29:52.270 --> 00:29:55.180
the data from the whole
web profile--

00:29:55.180 --> 00:29:58.160
they were using SDK V1 with
an old web profile--

00:29:58.160 --> 00:30:02.000
to these new app profiles that
we just talked about.

00:30:02.000 --> 00:30:04.420
JIM COTUGNO: The short answer
is no, unfortunately.

00:30:04.420 --> 00:30:07.580
However, that's something
we know a lot of

00:30:07.580 --> 00:30:08.630
people want to do.

00:30:08.630 --> 00:30:10.610
A lot of people are
using the V1 SDK.

00:30:10.610 --> 00:30:13.770
So again this is something that
we're looking at, and

00:30:13.770 --> 00:30:16.470
hopefully we'll have
an answer for you

00:30:16.470 --> 00:30:18.030
before too much longer.

00:30:18.030 --> 00:30:19.480
ANDREW WALES: So today, probably
the best way--

00:30:19.480 --> 00:30:21.450
I mean, you have to create
a new profile and then--

00:30:21.450 --> 00:30:23.740
JIM COTUGNO: Well, you would
have to, because your old SDK

00:30:23.740 --> 00:30:25.720
is actually reporting against
the web profile.

00:30:25.720 --> 00:30:26.315
ANDREW WALES: Right.

00:30:26.315 --> 00:30:27.820
JIM COTUGNO: And your
new SDK is reporting

00:30:27.820 --> 00:30:29.910
against the app profile.

00:30:29.910 --> 00:30:31.250
ANDREW WALES: What do
you think about

00:30:31.250 --> 00:30:32.360
dual tagging an app?

00:30:32.360 --> 00:30:35.170
I've heard some developers do
that, where they have V1 and

00:30:35.170 --> 00:30:38.772
V2, reporting at the same time
to different profiles to try

00:30:38.772 --> 00:30:39.890
to ease the transition.

00:30:39.890 --> 00:30:42.650
JIM COTUGNO: Yeah, that's
certainly a reasonable thing

00:30:42.650 --> 00:30:45.570
to do, certainly in
the short term.

00:30:45.570 --> 00:30:49.460
So you won't be able to see your
data together, but you'll

00:30:49.460 --> 00:30:52.870
be able to compare it kind
of side by side.

00:30:52.870 --> 00:30:53.305
ANDREW WALES: Yeah.

00:30:53.305 --> 00:30:54.610
Cool.

00:30:54.610 --> 00:30:56.780
JIM COTUGNO: Though I wouldn't
recommend that long term

00:30:56.780 --> 00:30:59.530
because you're doubling
up the traffic load.

00:30:59.530 --> 00:31:00.020
ANDREW WALES: Sure.

00:31:00.020 --> 00:31:01.480
It's more overhead.

00:31:01.480 --> 00:31:01.540
JIM COTUGNO: Yeah.

00:31:01.540 --> 00:31:02.790
ANDREW WALES: Yeah.

00:31:04.990 --> 00:31:06.600
Another question: This
is one that's

00:31:06.600 --> 00:31:08.020
definitely come up before.

00:31:08.020 --> 00:31:12.840
What's the best way to track
in-app purchases?

00:31:12.840 --> 00:31:15.320
JIM COTUGNO: So the best way to
track in-app purchases is

00:31:15.320 --> 00:31:19.830
to send your beacons when you
get confirmation that the

00:31:19.830 --> 00:31:28.060
purchase has been authorized
or confirmed or whatever.

00:31:28.060 --> 00:31:33.170
So you might have to pass
the data in terms of the

00:31:33.170 --> 00:31:38.160
transaction and all the amounts
and what not, and then

00:31:38.160 --> 00:31:40.600
all the line items through.

00:31:40.600 --> 00:31:42.695
And you can do that, I think,
with Android pretty easily.

00:31:42.695 --> 00:31:45.150
I'm not as familiar with iOS.

00:31:45.150 --> 00:31:48.070
But the key point is you want
to wait until you get a

00:31:48.070 --> 00:31:51.260
confirmation and then send.

00:31:51.260 --> 00:31:53.970
And at that point, you
can send the beacons.

00:31:53.970 --> 00:31:56.730
And that might be a good use
case where you can send right

00:31:56.730 --> 00:32:00.900
away because you know you have
an internet connection.

00:32:00.900 --> 00:32:01.680
ANDREW WALES: That's
a good point.

00:32:01.680 --> 00:32:05.420
JIM COTUGNO: And getting
firm data is nice.

00:32:05.420 --> 00:32:06.585
ANDREW WALES: With manual
dispatch, right?

00:32:06.585 --> 00:32:07.580
JIM COTUGNO: Yeah, with
manual dispatch.

00:32:07.580 --> 00:32:07.870
That's correct.

00:32:07.870 --> 00:32:08.720
Yeah.

00:32:08.720 --> 00:32:11.590
ANDREW WALES: I should say, I
think certainly the e-commerce

00:32:11.590 --> 00:32:15.190
framework that we have in the
SDKs is pretty flexible.

00:32:15.190 --> 00:32:17.940
It's really, probably, a
question of determining when

00:32:17.940 --> 00:32:20.250
the transaction's been confirmed
and then sending at

00:32:20.250 --> 00:32:21.140
that point.

00:32:21.140 --> 00:32:24.210
JIM COTUGNO: Yeah, that's your
key time to send it.

00:32:24.210 --> 00:32:28.270
The other nice thing about the
V2 SDKs, we made a lot easier

00:32:28.270 --> 00:32:29.340
to send the transaction.

00:32:29.340 --> 00:32:33.410
It's just one call instead of
many calls like we had before.

00:32:33.410 --> 00:32:34.090
ANDREW WALES: That's true.

00:32:34.090 --> 00:32:36.040
Also documented on
the developer

00:32:36.040 --> 00:32:37.650
site, so check it out.

00:32:37.650 --> 00:32:40.280
But do also check out the
iOS documentation for

00:32:40.280 --> 00:32:42.160
their in-app billing.

00:32:42.160 --> 00:32:44.310
And I believe Google Play has
similar documentation.

00:32:44.310 --> 00:32:47.060
I think that's one of the things
we'd like to do is

00:32:47.060 --> 00:32:49.470
maybe publish some samples to
make this a little bit easier

00:32:49.470 --> 00:32:51.216
for people, so keep an eye
out for that, too.

00:32:53.810 --> 00:32:55.060
Let's see.

00:33:00.420 --> 00:33:00.630
OK.

00:33:00.630 --> 00:33:02.810
Let's go to--

00:33:02.810 --> 00:33:04.700
Someone says, I read somewhere
that the new reports will

00:33:04.700 --> 00:33:08.680
include how many users opened
your app after download, but I

00:33:08.680 --> 00:33:10.590
couldn't identify that
in the reports.

00:33:10.590 --> 00:33:12.700
Does that exist?

00:33:12.700 --> 00:33:15.210
JIM COTUGNO: Yeah, that's
the New Visitors.

00:33:15.210 --> 00:33:23.290
So where we see New Visitors,
New Users, what that indicates

00:33:23.290 --> 00:33:27.140
is that many people opened up
the app for the very first

00:33:27.140 --> 00:33:30.220
time during that reporting
period.

00:33:30.220 --> 00:33:33.090
So I think that's what you're
looking for there.

00:33:33.090 --> 00:33:34.860
ANDREW WALES: So if you look
at a report, and you said I

00:33:34.860 --> 00:33:40.290
have 50 new users over the past
week, it means 50 people

00:33:40.290 --> 00:33:42.298
ran the app for the first
time during that week.

00:33:42.298 --> 00:33:42.948
JIM COTUGNO: That's correct.

00:33:42.948 --> 00:33:44.250
That's correct.

00:33:44.250 --> 00:33:46.440
ANDREW WALES: So I think
that should be it.

00:33:46.440 --> 00:33:49.660
So look out for the
New Users metric.

00:33:49.660 --> 00:33:51.920
And that's different, actually,
from Active Users.

00:33:51.920 --> 00:33:52.150
JIM COTUGNO: Right.

00:33:52.150 --> 00:33:55.570
Active Users is how many
different people open the app

00:33:55.570 --> 00:33:57.590
at least once during the
reporting period.

00:34:00.200 --> 00:34:00.510
ANDREW WALES: Great!

00:34:00.510 --> 00:34:05.000
Well, I think that's about all
we've got time for today, but

00:34:05.000 --> 00:34:06.440
thank you, Jim, again
for joining us.

00:34:06.440 --> 00:34:07.070
JIM COTUGNO: Thanks, Andrew.

00:34:07.070 --> 00:34:09.042
ANDREW WALES: Really
appreciate it.

00:34:09.042 --> 00:34:12.739
I've got some closing
messages here.

00:34:12.739 --> 00:34:15.652
Yeah, just a reminder, another
plug to go to developers.googl

00:34:15.652 --> 00:34:18.290
e.com/analytics.

00:34:18.290 --> 00:34:20.730
We've got a lot of documentation
about the new

00:34:20.730 --> 00:34:25.360
Android SDKs, the
new iOS SDKs.

00:34:25.360 --> 00:34:27.770
So check it out, read through
it, and hopefully you can get

00:34:27.770 --> 00:34:31.440
started tracking in your
app very soon.

00:34:31.440 --> 00:34:33.420
Definitely we look forward to
bringing you more Google

00:34:33.420 --> 00:34:35.929
Developer Live events from
Google Analytics, including

00:34:35.929 --> 00:34:39.110
some more "Behind the
Code" episodes, so

00:34:39.110 --> 00:34:40.820
stay tuned for that.

00:34:40.820 --> 00:34:44.199
In the meantime, do make sure
to follow us on Google+.

00:34:44.199 --> 00:34:46.830
If you have any more questions,
feel free to post

00:34:46.830 --> 00:34:52.350
them to the YouTube page or
catch us on Google+, I guess.

00:34:52.350 --> 00:34:52.630
Cool.

00:34:52.630 --> 00:34:53.050
Well, that's it.

00:34:53.050 --> 00:34:55.459
Thanks so much for joining us,
and see you next time.

00:35:03.259 --> 00:35:17.400
[MUSIC PLAYING]

