WEBVTT
Kind: captions
Language: en

00:00:20.950 --> 00:00:21.910
JENNY MURPHY: Hi, everyone.

00:00:21.910 --> 00:00:25.760
Welcome to this week's session
of the Google+ Platform Office

00:00:25.760 --> 00:00:29.900
Hours, the show where we keep
you up to date on what's new

00:00:29.900 --> 00:00:33.490
in the Google+ platform and
field your questions and take

00:00:33.490 --> 00:00:36.760
your comments about the
Google+ platform.

00:00:36.760 --> 00:00:39.300
This week, we're going to be
talking about the Google+

00:00:39.300 --> 00:00:42.010
History API again.

00:00:42.010 --> 00:00:45.120
Specifically, I'm going to give
you a brief overview of

00:00:45.120 --> 00:00:50.940
what it is, how it works, show
you it in action in PHP, and

00:00:50.940 --> 00:00:55.370
show you something new that
we just brewed up.

00:00:55.370 --> 00:00:59.370
So before we dig into the
content, let's do some

00:00:59.370 --> 00:01:00.410
introductions.

00:01:00.410 --> 00:01:02.760
I'll start because I'm
already talking.

00:01:02.760 --> 00:01:05.230
Hi, I'm Jenny Murphy.

00:01:05.230 --> 00:01:09.120
I'm a developer programs
engineer here at Google, and I

00:01:09.120 --> 00:01:12.680
focus on the Google+ platform,
which means I help you build

00:01:12.680 --> 00:01:14.690
cool stuff with the
Google+ APIs.

00:01:14.690 --> 00:01:16.820
And next to me in the studio--

00:01:16.820 --> 00:01:19.150
GUS CLASS: Hi, I'm Gus Class,
and I'm a developer advocate

00:01:19.150 --> 00:01:20.800
on Jenny's team.

00:01:20.800 --> 00:01:23.610
And I actually am focused
as well on the

00:01:23.610 --> 00:01:25.132
Google+ History API.

00:01:25.132 --> 00:01:26.580
JENNY MURPHY: Great.

00:01:26.580 --> 00:01:29.250
And through the magic of
cyberspace, a few people are

00:01:29.250 --> 00:01:31.290
joining us through
the Hangouts.

00:01:31.290 --> 00:01:33.640
So why don't you tell us a
little bit about yourself,

00:01:33.640 --> 00:01:37.020
starting with you, Abraham.

00:01:37.020 --> 00:01:37.470
ABRAHAM: Hi.

00:01:37.470 --> 00:01:39.550
I'm a co-founder of a
new start up called

00:01:39.550 --> 00:01:40.440
[? Advocate. ?]

00:01:40.440 --> 00:01:42.860
And I've been an active user of

00:01:42.860 --> 00:01:45.190
Google+ since the beginning.

00:01:45.190 --> 00:01:47.580
And I've been having fun
playing around with the

00:01:47.580 --> 00:01:50.490
History API recently.

00:01:50.490 --> 00:01:51.130
JENNY MURPHY: Great.

00:01:51.130 --> 00:01:53.450
And how about you next, Allen.

00:01:53.450 --> 00:01:54.370
ALLEN FIRSTENBERG: I'm
Allen Firstenberg.

00:01:54.370 --> 00:01:57.970
I'm an independent developer
and consultant.

00:01:57.970 --> 00:02:00.920
I mostly do work with
the Hangout API.

00:02:00.920 --> 00:02:02.460
And I've started to dabble
a little bit

00:02:02.460 --> 00:02:04.840
with the History API.

00:02:04.840 --> 00:02:06.330
JENNY MURPHY: Fraser?

00:02:06.330 --> 00:02:07.670
FRASER CAIN: Hi, my name
is Fraser Cain.

00:02:07.670 --> 00:02:09.220
I am the publisher of
Universe Today.

00:02:09.220 --> 00:02:11.991
And we've been doing a lot of
stuff with the Hangouts and

00:02:11.991 --> 00:02:13.560
the Hangouts API.

00:02:13.560 --> 00:02:14.010
JENNY MURPHY: Great.

00:02:14.010 --> 00:02:17.072
And last, but definitely
not least, Gerwin.

00:02:17.072 --> 00:02:19.620
GERWIN STURM: Hi, I am
Gerwin from Austria.

00:02:19.620 --> 00:02:22.135
So I've been doing lots of
different stuff with the

00:02:22.135 --> 00:02:23.050
Google+ APIs.

00:02:23.050 --> 00:02:24.890
And I've been playing
quite a bit with

00:02:24.890 --> 00:02:27.770
the History API lately.

00:02:27.770 --> 00:02:28.540
JENNY MURPHY: Great.

00:02:28.540 --> 00:02:31.220
So we'll be moving back
for questions and

00:02:31.220 --> 00:02:32.720
comments from everyone.

00:02:32.720 --> 00:02:35.390
But without further ado, I'm
going to tell you a little bit

00:02:35.390 --> 00:02:38.930
about the History API, which
we've discussed before.

00:02:38.930 --> 00:02:41.480
But I'll give you a quick
rundown before I show you the

00:02:41.480 --> 00:02:44.540
PHP code just in case you
haven't heard of it before.

00:02:44.540 --> 00:02:48.031
So switching over to
my screen share.

00:02:48.031 --> 00:02:49.680
GUS CLASS: And I'll
just fire you up.

00:02:49.680 --> 00:02:50.070
Here we go.

00:02:50.070 --> 00:02:51.500
JENNY MURPHY: There we go.

00:02:51.500 --> 00:02:54.190
So widen it.

00:02:54.190 --> 00:02:57.200
It doesn't actually
help very much.

00:02:57.200 --> 00:02:59.150
So the Google+ History API.

00:02:59.150 --> 00:03:02.060
What is it?

00:03:02.060 --> 00:03:04.810
It is kind of like the instant
upload feature that you may

00:03:04.810 --> 00:03:07.960
have used on your cell
phone with Google+.

00:03:07.960 --> 00:03:11.570
The way instant upload works is
as you are hanging out and

00:03:11.570 --> 00:03:14.370
taking photos with your phone
at some exciting party or

00:03:14.370 --> 00:03:16.860
event you're at, the photos
are automatically getting

00:03:16.860 --> 00:03:18.990
uploaded into a temporary
place that

00:03:18.990 --> 00:03:20.500
only you can access.

00:03:20.500 --> 00:03:23.520
So that later, when you're in a
sharing mood, you can return

00:03:23.520 --> 00:03:26.040
and select which photos you want
to share, and share them

00:03:26.040 --> 00:03:28.325
with the right people.

00:03:28.325 --> 00:03:30.860
The History API is kind
of like that.

00:03:30.860 --> 00:03:32.960
But it's not just
for pictures.

00:03:32.960 --> 00:03:34.200
It's for everything.

00:03:34.200 --> 00:03:36.410
And it's not just for
Google+ mobile app.

00:03:36.410 --> 00:03:39.460
It's for whatever your
application is.

00:03:39.460 --> 00:03:42.380
So the way it works is your
users are using your

00:03:42.380 --> 00:03:43.610
application.

00:03:43.610 --> 00:03:45.160
As they're using your
application, no

00:03:45.160 --> 00:03:47.880
matter what it is--

00:03:47.880 --> 00:03:50.350
whether it's an application that
tracks your movements as

00:03:50.350 --> 00:03:53.420
you hike, whether it's a music
application that you listen to

00:03:53.420 --> 00:03:57.090
songs on, or even a blogging
platform, anything--

00:03:57.090 --> 00:04:01.130
different moments happen that
make up your user's experience

00:04:01.130 --> 00:04:03.110
on that application.

00:04:03.110 --> 00:04:04.820
For example, the hiking
application--

00:04:04.820 --> 00:04:09.600
finding a trail, starting a
hike, finding a landmark.

00:04:09.600 --> 00:04:12.740
As your user uses your
application and those moments

00:04:12.740 --> 00:04:17.374
happen, you write moments to
Google in the background using

00:04:17.374 --> 00:04:19.890
the History API.

00:04:19.890 --> 00:04:22.260
Then later, when your user
finishes using your

00:04:22.260 --> 00:04:22.840
application--

00:04:22.840 --> 00:04:25.020
they finish their game, their
hike is over, and they've

00:04:25.020 --> 00:04:26.280
returned home--

00:04:26.280 --> 00:04:29.420
and they're in a sharing mood,
they can go into their history

00:04:29.420 --> 00:04:33.800
on Google+, select the moments
that are most important to

00:04:33.800 --> 00:04:35.190
them, and they think their
friends would be most

00:04:35.190 --> 00:04:36.260
interested in--

00:04:36.260 --> 00:04:38.980
like maybe finding a really cool
waterfall on their hike--

00:04:38.980 --> 00:04:41.140
and then share them with
the right people.

00:04:41.140 --> 00:04:43.720
Because maybe some of their
friends don't like waterfalls.

00:04:43.720 --> 00:04:47.086
Only their waterfall circle,
for example.

00:04:47.086 --> 00:04:50.200
And that's what the
History API does.

00:04:50.200 --> 00:04:53.960
It allows your users to share
their moments on your

00:04:53.960 --> 00:04:56.830
application with the right
people at the right time.

00:04:59.330 --> 00:05:01.990
But how does it work
in practice?

00:05:01.990 --> 00:05:03.240
Let's find out.

00:05:06.010 --> 00:05:09.660
The History API is made
up of a few pieces.

00:05:09.660 --> 00:05:11.740
There's obviously your
application, which here is a

00:05:11.740 --> 00:05:14.550
website, just for
an example case.

00:05:14.550 --> 00:05:19.590
There's Google, which hosts
the History API.

00:05:19.590 --> 00:05:21.490
And then there's the target.

00:05:21.490 --> 00:05:24.510
The target is a little bit
special to this API.

00:05:24.510 --> 00:05:28.450
The target is a publicly
accessible web page that

00:05:28.450 --> 00:05:31.820
represents whatever the target
of that moment is.

00:05:31.820 --> 00:05:33.810
So in the case of the previous
example where I was talking

00:05:33.810 --> 00:05:37.250
about a hiking application,
the target might be a page

00:05:37.250 --> 00:05:39.870
that describes the place you're
having a hike, or

00:05:39.870 --> 00:05:43.770
describes the landmarks that
you may find along the way.

00:05:43.770 --> 00:05:47.500
When your application detects
that a moment has occurred--

00:05:47.500 --> 00:05:50.490
in the hiking example, I've
arrived at the trail--

00:05:50.490 --> 00:05:54.000
it would send a moment
to Google.

00:05:54.000 --> 00:05:58.320
It would insert it using a JSON
REST API, very similar to

00:05:58.320 --> 00:06:02.510
a lot of APIs at Google and a
lot of the other Google+ APIs.

00:06:02.510 --> 00:06:06.110
And then what Google will do
is we will fetch the target

00:06:06.110 --> 00:06:09.390
page that you refer
to in that moment.

00:06:09.390 --> 00:06:12.240
So the page that represents
that trail.

00:06:12.240 --> 00:06:14.730
And we'll go there, and we'll
look for schema.org markup,

00:06:14.730 --> 00:06:18.580
which you may already have from
the Plus button or from

00:06:18.580 --> 00:06:20.410
web search or for a
lot of reasons.

00:06:20.410 --> 00:06:23.900
It will extract all the details
we can from that page

00:06:23.900 --> 00:06:27.720
and use that to try and make the
moments in Google+ as rich

00:06:27.720 --> 00:06:29.920
as possible.

00:06:29.920 --> 00:06:33.310
So that is the History
API, what it

00:06:33.310 --> 00:06:34.560
does, and how it works.

00:06:37.300 --> 00:06:40.100
So let's dive into some code,
because that's what you're

00:06:40.100 --> 00:06:42.340
here for, right?

00:06:42.340 --> 00:06:45.010
And we've talked about the
History API a little.

00:06:45.010 --> 00:06:47.660
And we've shown it to you in
JavaScript, and we've shown it

00:06:47.660 --> 00:06:50.060
to you in Python.

00:06:50.060 --> 00:06:52.110
Today, I'm going to show you
how do use it in PHP.

00:06:55.700 --> 00:06:58.500
So let's take a look at what
we are about to build.

00:07:04.582 --> 00:07:06.800
So switching over my
screen sharing.

00:07:13.860 --> 00:07:16.230
So if you have developed on--

00:07:16.230 --> 00:07:17.620
make that a little wider.

00:07:17.620 --> 00:07:21.420
If you have developed with PHP
on Google+, this probably

00:07:21.420 --> 00:07:23.240
looks pretty familiar.

00:07:23.240 --> 00:07:27.540
This is the Google+ starter
application for PHP.

00:07:27.540 --> 00:07:29.960
It's a very simple application
that shows you the best

00:07:29.960 --> 00:07:33.250
practices for developing on
the Google+ platform.

00:07:33.250 --> 00:07:35.440
And what I've done is I've
added a little "Write a

00:07:35.440 --> 00:07:37.840
moment" button to the top.

00:07:37.840 --> 00:07:39.620
It's a very simple
implementation.

00:07:39.620 --> 00:07:42.720
All it does is just
write one moment.

00:07:42.720 --> 00:07:47.770
And I'll show you the code
that powers that.

00:07:47.770 --> 00:07:50.460
So let me shrink this window a
little bit so you can see a

00:07:50.460 --> 00:07:53.260
little more clearly.

00:07:53.260 --> 00:07:57.090
So this is the code for the PHP
starter application with a

00:07:57.090 --> 00:07:58.540
few little enhancements added.

00:08:02.570 --> 00:08:04.520
So what have I added?

00:08:08.010 --> 00:08:11.200
The first thing I've added
is I've added a special,

00:08:11.200 --> 00:08:17.380
generated library that the
PHP client library uses.

00:08:17.380 --> 00:08:18.600
This is designed to make
it a little bit

00:08:18.600 --> 00:08:20.430
easier to use the APIs.

00:08:20.430 --> 00:08:23.070
It's just some convenience
methods that show you all the

00:08:23.070 --> 00:08:25.720
different methods that
each API has.

00:08:25.720 --> 00:08:28.600
The History API is still in
developer preview, though.

00:08:28.600 --> 00:08:32.929
So the generated PHP helper
functions are not part of the

00:08:32.929 --> 00:08:35.799
core PHP library yet.

00:08:35.799 --> 00:08:36.970
But that doesn't
mean we haven't

00:08:36.970 --> 00:08:38.880
started preparing them.

00:08:38.880 --> 00:08:41.100
So what I did is I went to the
source code tree, and I went

00:08:41.100 --> 00:08:44.980
to the trunk, and I pulled out
the generated convenience

00:08:44.980 --> 00:08:48.670
class, the helper functions
for the PHP library, for

00:08:48.670 --> 00:08:49.790
History API.

00:08:49.790 --> 00:08:53.060
It's called the API [? plus ?]
moment service.

00:08:53.060 --> 00:08:56.780
And we'll be using this further
down in the code.

00:08:56.780 --> 00:09:00.080
So what else did I have to do?

00:09:00.080 --> 00:09:04.270
I had to create a
service object.

00:09:04.270 --> 00:09:08.300
This is the implementation of
that class that I included

00:09:08.300 --> 00:09:12.010
above, that helper class.

00:09:12.010 --> 00:09:13.600
We already have one
for the Plus API.

00:09:13.600 --> 00:09:16.200
So just below it, I did the
exact same syntax except for

00:09:16.200 --> 00:09:17.420
the History API.

00:09:17.420 --> 00:09:22.420
And now, my PHP starter app can
start to make calls to the

00:09:22.420 --> 00:09:27.250
History API as well as calls to
the regular Google+ APIs.

00:09:27.250 --> 00:09:29.665
So let's go look at the
next change I made.

00:09:32.700 --> 00:09:35.530
And here's the meat of it.

00:09:35.530 --> 00:09:36.750
Writing a moment.

00:09:36.750 --> 00:09:40.280
And this is just
how easy it is.

00:09:40.280 --> 00:09:43.880
So in a few lines of code-- so
what I'm doing here is, in my

00:09:43.880 --> 00:09:45.850
application, I have a little
button that I press that

00:09:45.850 --> 00:09:47.910
indicates that it's time
to write a moment.

00:09:47.910 --> 00:09:51.710
I'm using a hidden field that
indicates that a moment is

00:09:51.710 --> 00:09:53.050
being written.

00:09:53.050 --> 00:09:55.890
And then I'm writing a moment.

00:09:55.890 --> 00:09:58.430
And it's actually one line
down here that's actually

00:09:58.430 --> 00:10:01.410
doing the moment insert, and
a few lines that build that

00:10:01.410 --> 00:10:02.660
moment object.

00:10:05.470 --> 00:10:08.750
So what I did is I just took one
of the examples from the

00:10:08.750 --> 00:10:12.440
Google+ History API starter,
and I reformatted

00:10:12.440 --> 00:10:15.230
it to work in PHP.

00:10:15.230 --> 00:10:18.460
So you can see here that the
target URL is specified.

00:10:18.460 --> 00:10:22.270
I picked the macaron, one of my
favorite target URLs from

00:10:22.270 --> 00:10:25.230
my example code, Baking
Disasters.

00:10:25.230 --> 00:10:27.310
And I'm using an add
activity straight

00:10:27.310 --> 00:10:29.830
from the History examples.

00:10:29.830 --> 00:10:32.680
And I'm setting that target.

00:10:32.680 --> 00:10:34.920
So it's a little bit different
than the JavaScript and Python

00:10:34.920 --> 00:10:37.760
libraries because they just
specify the request body as a

00:10:37.760 --> 00:10:38.930
big blob of JSON.

00:10:38.930 --> 00:10:41.170
In PHP, I have to build
it using PHP.

00:10:41.170 --> 00:10:46.570
It's just different styles, but
pretty straightforward.

00:10:46.570 --> 00:10:50.570
And one other line there,
the start date.

00:10:50.570 --> 00:10:53.120
I'll be talking a little bit
more about this once I show

00:10:53.120 --> 00:10:56.750
you the software in action.

00:10:56.750 --> 00:10:57.940
But here's the write method.

00:10:57.940 --> 00:11:00.430
So all it is doing is it's
calling the History service

00:11:00.430 --> 00:11:04.730
object that we created
on the Moments API

00:11:04.730 --> 00:11:06.315
using the Insert method.

00:11:06.315 --> 00:11:09.540
I'm specifying that I'm
inserting a moment for myself.

00:11:09.540 --> 00:11:12.630
And I'm writing it to the vault,
which is where all

00:11:12.630 --> 00:11:13.930
moments go right now.

00:11:13.930 --> 00:11:16.610
And then I'm specifying
the request body.

00:11:16.610 --> 00:11:18.870
Pretty straightforward.

00:11:18.870 --> 00:11:20.510
Any response is going to
come back into the

00:11:20.510 --> 00:11:23.790
right moment's variable.

00:11:23.790 --> 00:11:25.360
But I'm not doing anything
with it right now.

00:11:25.360 --> 00:11:27.350
I'm just dropping it on the
floor because I wanted a

00:11:27.350 --> 00:11:29.980
really simple implementation.

00:11:29.980 --> 00:11:31.640
And there's one other change
down here that

00:11:31.640 --> 00:11:33.860
ties everything together.

00:11:33.860 --> 00:11:39.790
Further down in the project is
the HTML code that you see on

00:11:39.790 --> 00:11:41.060
the screen.

00:11:41.060 --> 00:11:44.530
And here's the HTML that I
added, which ties it all

00:11:44.530 --> 00:11:47.085
together and allows me to
trigger that moment right.

00:11:47.085 --> 00:11:51.260
I have a hidden field that sets
a moment property, or

00:11:51.260 --> 00:11:54.910
moment POST parameter to the
value true, just so I know I'm

00:11:54.910 --> 00:11:58.740
writing a moment, and then
a Submit button.

00:11:58.740 --> 00:12:00.410
Dead simple.

00:12:00.410 --> 00:12:01.660
So let's see it in action.

00:12:04.152 --> 00:12:06.620
GUS CLASS: And so Jenny, so a
lot of this code is just kind

00:12:06.620 --> 00:12:09.040
of part of the boilerplate
starter project.

00:12:09.040 --> 00:12:12.110
You didn't have to completely
start from scratch, right?

00:12:12.110 --> 00:12:12.970
JENNY MURPHY: That is correct.

00:12:12.970 --> 00:12:18.630
So what I did is I took the
PHP starter project for

00:12:18.630 --> 00:12:21.790
Google+ and just added a few
lines of code, because the

00:12:21.790 --> 00:12:24.310
History API is just like a lot
of the other APIs that we

00:12:24.310 --> 00:12:26.200
already have for the
Google+ platform.

00:12:26.200 --> 00:12:26.920
GUS CLASS: And so
that's awesome.

00:12:26.920 --> 00:12:29.850
If you're a PHP developer,
there's a lot of code that's

00:12:29.850 --> 00:12:32.150
already out there that we
created to make it a lot

00:12:32.150 --> 00:12:33.210
easier for you to get started.

00:12:33.210 --> 00:12:33.460
JENNY MURPHY: Yep.

00:12:33.460 --> 00:12:37.920
So you only have to add
a few lines to use it.

00:12:37.920 --> 00:12:39.270
So let's see it in action.

00:12:39.270 --> 00:12:41.500
So I'm hitting the
Submit button.

00:12:44.930 --> 00:12:46.820
And we see that it finished
to submitting it.

00:12:46.820 --> 00:12:47.960
And the page reloaded.

00:12:47.960 --> 00:12:50.000
Because I didn't actually
implement any code that did

00:12:50.000 --> 00:12:52.930
show as a success, we're going
to have to go look in the

00:12:52.930 --> 00:12:54.180
Google+ History.

00:12:58.510 --> 00:13:01.110
And let's go back.

00:13:01.110 --> 00:13:05.070
There's actually some little
trick I did back there.

00:13:05.070 --> 00:13:08.030
I actually inserted this moment
for a historical thing

00:13:08.030 --> 00:13:11.810
I did, because I didn't bake the
macaron today, right now.

00:13:11.810 --> 00:13:16.480
I actually baked it in June in
2010, long before the History

00:13:16.480 --> 00:13:19.470
API even existed.

00:13:19.470 --> 00:13:22.140
So here we see that the
moment got written.

00:13:22.140 --> 00:13:24.110
And let me show you how I
did that little trick.

00:13:24.110 --> 00:13:25.670
It's a new feature
that we're just

00:13:25.670 --> 00:13:26.840
starting to support today.

00:13:26.840 --> 00:13:28.730
GUS CLASS: It's awesome,
by the way.

00:13:28.730 --> 00:13:32.490
It's very cool to see that you
can get historical data back

00:13:32.490 --> 00:13:34.830
into your history.

00:13:34.830 --> 00:13:35.080
JENNY MURPHY: Yes.

00:13:35.080 --> 00:13:35.810
It's pretty exciting.

00:13:35.810 --> 00:13:37.800
It's something that we've heard
a lot of requests for.

00:13:37.800 --> 00:13:40.620
And we're starting to
support it today.

00:13:40.620 --> 00:13:43.120
So you can see this one line
here that I kind of glossed

00:13:43.120 --> 00:13:44.370
over before.

00:13:46.770 --> 00:13:49.330
Moment arrow, set start date.

00:13:49.330 --> 00:13:51.490
So if you've been playing with
the History API, you may have

00:13:51.490 --> 00:13:54.790
noticed that when you insert a
moment, the response object,

00:13:54.790 --> 00:13:58.120
when you set the debug flag to
true, contains a start date at

00:13:58.120 --> 00:14:01.020
the root of the moment.

00:14:01.020 --> 00:14:03.740
Well, you can write to
this field now also.

00:14:03.740 --> 00:14:06.620
So for all those historical
moments, for all those moments

00:14:06.620 --> 00:14:10.700
that happened before your user
authenticated your app with

00:14:10.700 --> 00:14:14.600
Google, or before Google+
History existed, you can now

00:14:14.600 --> 00:14:17.090
write using the API so that
they can share those

00:14:17.090 --> 00:14:18.340
historical moments also.

00:14:22.800 --> 00:14:24.300
GUS CLASS: So this'll be awesome
for all those people

00:14:24.300 --> 00:14:28.330
who want to bring in all their
old data into the History UI.

00:14:28.330 --> 00:14:29.940
So it's very exciting.

00:14:29.940 --> 00:14:31.940
JENNY MURPHY: Yes.

00:14:31.940 --> 00:14:34.510
So this is the first feature
that we've added in response

00:14:34.510 --> 00:14:37.140
to all of your requests
out there.

00:14:37.140 --> 00:14:37.470
Cool.

00:14:37.470 --> 00:14:39.790
So that is what I had
to show you today.

00:14:39.790 --> 00:14:42.470
How easy it is to get started
with the PHP and the History

00:14:42.470 --> 00:14:49.400
API, starting from an existing
starter project, and how you

00:14:49.400 --> 00:14:52.380
can write moments for historical
moments that

00:14:52.380 --> 00:14:54.050
occurred in your application.

00:14:54.050 --> 00:14:55.870
And that field works
for all languages.

00:14:55.870 --> 00:14:57.140
It's not PHP specific.

00:14:57.140 --> 00:14:59.550
You can use that for anything.

00:14:59.550 --> 00:14:59.910
Great.

00:14:59.910 --> 00:15:02.030
GUS CLASS: New stuff.

00:15:02.030 --> 00:15:05.760
So this wouldn't be Office Hours
without hanging out and

00:15:05.760 --> 00:15:06.690
chatting with you guys.

00:15:06.690 --> 00:15:09.600
So now, what have you
guys been up to with

00:15:09.600 --> 00:15:11.730
the Hangouts API?

00:15:11.730 --> 00:15:14.035
ALLEN FIRSTENBERG: I've got
a question first about the

00:15:14.035 --> 00:15:15.490
[INAUDIBLE] start date.

00:15:15.490 --> 00:15:21.240
What happens if you share that
historical moment publicly, or

00:15:21.240 --> 00:15:25.320
to somebody else, or outside
of the history vault?

00:15:25.320 --> 00:15:27.120
JENNY MURPHY: So sharing
moments.

00:15:27.120 --> 00:15:29.120
The start date doesn't actually
impact the sharing of

00:15:29.120 --> 00:15:31.010
the moments at all.

00:15:31.010 --> 00:15:33.560
So right now, the way the
sharing works is you can share

00:15:33.560 --> 00:15:37.081
individual moments with--

00:15:37.081 --> 00:15:39.780
you can share back into your
stream by using the little

00:15:39.780 --> 00:15:41.700
share control on the moment.

00:15:41.700 --> 00:15:47.060
You can also change the
visibility on the Moments tab

00:15:47.060 --> 00:15:50.770
on the profile by source,
which impacts all of the

00:15:50.770 --> 00:15:52.910
moments that are in there,
including historical ones.

00:15:55.450 --> 00:15:58.590
So if you were to go and you
were to dig into that panel

00:15:58.590 --> 00:16:03.510
and, for example, set my Baking
Disasters app to be

00:16:03.510 --> 00:16:08.540
visible to everyone on that tab
in the profile, then all

00:16:08.540 --> 00:16:13.450
those historical moments that
got inserted would be visible.

00:16:13.450 --> 00:16:16.440
Does that answer
your question?

00:16:16.440 --> 00:16:17.440
ALLEN FIRSTENBERG: It
answers some of it

00:16:17.440 --> 00:16:20.840
and raises some more.

00:16:20.840 --> 00:16:22.620
So if we share it--

00:16:22.620 --> 00:16:25.350
explicitly share it to the
stream, it will be shared with

00:16:25.350 --> 00:16:26.642
today's date?

00:16:26.642 --> 00:16:27.130
[INAUDIBLE].

00:16:27.130 --> 00:16:27.800
JENNY MURPHY: Correct.

00:16:27.800 --> 00:16:32.430
So the object in the stream
is the share itself.

00:16:37.180 --> 00:16:39.270
FRASER CAIN: I've
got a question.

00:16:39.270 --> 00:16:43.070
So what about the presentation
of the event in your stream?

00:16:43.070 --> 00:16:45.280
Because obviously the way you
might present a song that you

00:16:45.280 --> 00:16:48.510
listen to would be different
from a hike that you went on

00:16:48.510 --> 00:16:51.830
or a recipe that you
baked today.

00:16:51.830 --> 00:16:55.100
So how is the presentation
going to work for people?

00:16:55.100 --> 00:16:57.340
JENNY MURPHY: That's
a great question.

00:16:57.340 --> 00:16:59.240
GERWIN STURM: Is it actually--

00:16:59.240 --> 00:16:59.560
JENNY MURPHY: Oh, yeah.

00:16:59.560 --> 00:17:02.740
Right now, we're very focused
on getting the right API.

00:17:02.740 --> 00:17:05.599
The way that you as developers
can get all those details into

00:17:05.599 --> 00:17:06.619
our system--

00:17:06.619 --> 00:17:12.609
we're very focused on making
that easy to use and awesome.

00:17:12.609 --> 00:17:14.040
We haven't really thought
as much about the

00:17:14.040 --> 00:17:15.560
rest of that part.

00:17:15.560 --> 00:17:18.190
How those render in the stream,
when they're shared,

00:17:18.190 --> 00:17:19.990
and all that other
kind of stuff.

00:17:19.990 --> 00:17:22.200
This is one reason we're in
developer preview now, because

00:17:22.200 --> 00:17:24.480
we want to focus on getting
the developer part really

00:17:24.480 --> 00:17:26.040
great first.

00:17:26.040 --> 00:17:28.010
And we are spending a lot of
time figuring out what that

00:17:28.010 --> 00:17:28.840
looks like.

00:17:28.840 --> 00:17:30.440
But it's too early to
say exactly what

00:17:30.440 --> 00:17:31.200
it will look like.

00:17:31.200 --> 00:17:35.330
Right now, as you can see, it's
pretty simple flat view

00:17:35.330 --> 00:17:38.380
for all moments that get shared
to the stream, with a

00:17:38.380 --> 00:17:45.090
link referring to the domain
that inserted that moment.

00:17:45.090 --> 00:17:47.311
Did you have anything
to add, Gerwin?

00:17:47.311 --> 00:17:48.550
GERWIN STURM: Yeah, no.

00:17:48.550 --> 00:17:49.030
You answered it.

00:17:49.030 --> 00:17:52.270
But my question was, so the
biggest limitation, in my

00:17:52.270 --> 00:17:54.680
opinion, for the History
API is that you need a

00:17:54.680 --> 00:17:56.200
public URL to share.

00:17:56.200 --> 00:17:58.760
So the way I've been working
around it is that I construct

00:17:58.760 --> 00:18:03.570
the URL with query parameters to
construct necessary snippet

00:18:03.570 --> 00:18:05.690
information for me.

00:18:05.690 --> 00:18:08.880
But the question is, you have
this result field which you

00:18:08.880 --> 00:18:10.740
allow for some types.

00:18:10.740 --> 00:18:13.550
And the question is if there
couldn't be done more with

00:18:13.550 --> 00:18:14.680
that sort of information.

00:18:14.680 --> 00:18:18.170
That you actually put all your
information you want to share

00:18:18.170 --> 00:18:22.460
in this moment into the result
and not an object URL.

00:18:22.460 --> 00:18:24.600
JENNY MURPHY: Yeah, that's
a really good point.

00:18:24.600 --> 00:18:27.240
And we know that's going to be--
having a public URL is

00:18:27.240 --> 00:18:29.010
kind of a big limitation.

00:18:29.010 --> 00:18:31.090
For example, if you're a mobile
application developer,

00:18:31.090 --> 00:18:33.350
you may not have any
web infrastructure.

00:18:33.350 --> 00:18:35.430
And this is feedback we've
heard from you guys.

00:18:35.430 --> 00:18:36.950
We're still working on it.

00:18:36.950 --> 00:18:38.890
I don't have anything
to say about it now.

00:18:38.890 --> 00:18:40.610
It's going to be cool,
and we're definitely

00:18:40.610 --> 00:18:41.280
thinking about it.

00:18:41.280 --> 00:18:46.120
And it's something that we
know we need to resolve.

00:18:46.120 --> 00:18:49.940
ABRAHAM: Is there is a
corresponding end date with

00:18:49.940 --> 00:18:51.580
the start date?

00:18:51.580 --> 00:18:52.840
JENNY MURPHY: Is there a
corresponding end date with

00:18:52.840 --> 00:18:53.840
the start date?

00:18:53.840 --> 00:18:54.330
No.

00:18:54.330 --> 00:18:56.130
So right now, there's
only one date

00:18:56.130 --> 00:18:58.390
associated with the moment.

00:18:58.390 --> 00:19:00.930
I guess because we think of it
as a moment in history, like

00:19:00.930 --> 00:19:03.520
the start of a party versus
the entire party.

00:19:03.520 --> 00:19:08.011
So it's kind of a single
point on the timeline.

00:19:08.011 --> 00:19:09.440
ABRAHAM: Gotcha.

00:19:09.440 --> 00:19:11.550
JENNY MURPHY: But that's
a good point.

00:19:11.550 --> 00:19:13.570
Are there use cases you have in
mind where you might want

00:19:13.570 --> 00:19:16.120
to use as start and
an end date?

00:19:16.120 --> 00:19:19.860
ABRAHAM: I mean, theoretically,
if you're

00:19:19.860 --> 00:19:24.490
having, say, a honeymoon
that lasts over a week.

00:19:24.490 --> 00:19:27.790
And if you look at a specific
day within that week, that

00:19:27.790 --> 00:19:30.880
honeymoon should probably
be listed on that date.

00:19:30.880 --> 00:19:34.980
Even though with the current
implementation, if you only

00:19:34.980 --> 00:19:36.820
implemented the start date, it
would only show up on the

00:19:36.820 --> 00:19:38.190
first date.

00:19:38.190 --> 00:19:39.140
JENNY MURPHY: That's a
really good point.

00:19:39.140 --> 00:19:41.100
So for longer events.

00:19:41.100 --> 00:19:42.230
Yeah.

00:19:42.230 --> 00:19:45.130
GUS CLASS: So yeah, definitely
for things like, if you have a

00:19:45.130 --> 00:19:47.002
party and the party ends
at a certain time, you

00:19:47.002 --> 00:19:47.760
can create the event.

00:19:47.760 --> 00:19:50.900
Not necessarily for the moment,
but maybe some forward

00:19:50.900 --> 00:19:53.230
looking, forward thinking things
that I guess we're

00:19:53.230 --> 00:19:54.030
talking about here.

00:19:54.030 --> 00:19:56.780
Also we just got some questions
in from YouTube.

00:19:56.780 --> 00:19:58.090
JENNY MURPHY: Cool.

00:19:58.090 --> 00:20:00.690
GUS CLASS: And which is kind of
a good, nice, gentle way to

00:20:00.690 --> 00:20:03.040
remind everyone that
this is live.

00:20:03.040 --> 00:20:06.150
And we will try our best to get
to them as they come in.

00:20:06.150 --> 00:20:08.440
So the first question
is going to be--

00:20:08.440 --> 00:20:12.510
and sorry if I'm interrupting
your answer here.

00:20:12.510 --> 00:20:15.000
Are History events signed
by the application ID?

00:20:15.000 --> 00:20:17.840
So can you create moments and
then pull them back later to

00:20:17.840 --> 00:20:21.020
verify their authenticity?

00:20:21.020 --> 00:20:23.250
For something like, let's
say there's an

00:20:23.250 --> 00:20:26.640
achievement in an app.

00:20:26.640 --> 00:20:30.330
Or can they just be
created by anyone?

00:20:30.330 --> 00:20:31.200
JENNY MURPHY: It's
a good question.

00:20:31.200 --> 00:20:32.670
So are you asking--

00:20:32.670 --> 00:20:37.910
I think I understand your
question is, so moments that

00:20:37.910 --> 00:20:41.040
get inserted are definitely tied
back to the application.

00:20:41.040 --> 00:20:43.060
We haven't thought a lot
about making moments

00:20:43.060 --> 00:20:46.560
cryptographically secure and
signed and that kind of stuff.

00:20:46.560 --> 00:20:51.060
Because the user can see those
moments, and then the user is

00:20:51.060 --> 00:20:54.170
the one who shares those moments
explicitly with their

00:20:54.170 --> 00:20:57.090
stream, the users that
they care about.

00:20:57.090 --> 00:20:59.220
We haven't really put a lot of
thought into potentially

00:20:59.220 --> 00:21:01.800
gaming or abusing the system
in this kind of way.

00:21:01.800 --> 00:21:04.480
It's something we'll
keep in mind.

00:21:04.480 --> 00:21:07.290
But we have thought a little bit
about getting a feedback

00:21:07.290 --> 00:21:08.670
loop on moments.

00:21:08.670 --> 00:21:12.000
Right now, the History
API is write only.

00:21:12.000 --> 00:21:15.980
And you can use the debug flag
to see data coming back.

00:21:15.980 --> 00:21:17.520
But it's kind of slow.

00:21:17.520 --> 00:21:19.580
So not much of a feedback
loop yet.

00:21:19.580 --> 00:21:20.810
But this is an interesting
idea.

00:21:20.810 --> 00:21:22.160
GUS CLASS: Yep.

00:21:22.160 --> 00:21:25.610
And so there's another one that
is, will I be able to

00:21:25.610 --> 00:21:27.280
change the people I share
the moments with

00:21:27.280 --> 00:21:28.440
after I post them?

00:21:28.440 --> 00:21:31.400
So this is actually something
that people have been talking

00:21:31.400 --> 00:21:35.490
about a good amount lately too
where let's say you have a

00:21:35.490 --> 00:21:39.600
Circle and you want to share
with that Circle.

00:21:39.600 --> 00:21:43.380
But you want to authenticate--

00:21:43.380 --> 00:21:49.070
not necessarily that you'd
want to authenticate, but

00:21:49.070 --> 00:21:52.450
would you be able to control
through Circles who you share

00:21:52.450 --> 00:21:54.650
these moments with
as they come in?

00:21:54.650 --> 00:21:57.950
JENNY MURPHY: So when moments
are shared to the stream, they

00:21:57.950 --> 00:22:01.620
work just like any other post
that you make to Google+.

00:22:01.620 --> 00:22:03.120
So you can't change
the security

00:22:03.120 --> 00:22:05.230
settings on the post itself.

00:22:05.230 --> 00:22:09.740
But changing downstream, like
changing the members of the

00:22:09.740 --> 00:22:13.620
Circle can impact the visibility
of that post.

00:22:13.620 --> 00:22:14.936
GUS CLASS: Cool.

00:22:14.936 --> 00:22:16.730
Ooh, we got some more.

00:22:16.730 --> 00:22:17.080
JENNY MURPHY: Great.

00:22:17.080 --> 00:22:20.190
So before we dive into those, if
you're watching on YouTube

00:22:20.190 --> 00:22:22.820
or on the Google+ page,
you can ask

00:22:22.820 --> 00:22:23.980
questions at either location.

00:22:23.980 --> 00:22:25.700
We're watching both.

00:22:25.700 --> 00:22:28.220
But feel free to ask your
question at either location.

00:22:28.220 --> 00:22:30.480
We'll keep an eye out for it.

00:22:30.480 --> 00:22:34.010
FRASER CAIN: What method are
you using to watch both?

00:22:34.010 --> 00:22:35.605
Are you using the Comment
Tracker, or have you got

00:22:35.605 --> 00:22:35.900
something [INAUDIBLE]?

00:22:35.900 --> 00:22:38.260
GUS CLASS: We want to be using
Comment Tracker, but it's

00:22:38.260 --> 00:22:39.170
neither actually.

00:22:39.170 --> 00:22:41.930
It's just kind of me clicking
as fast as I can.

00:22:45.040 --> 00:22:46.040
So there's another question.

00:22:46.040 --> 00:22:48.640
Can the user ignore moments from
the same app or reduce

00:22:48.640 --> 00:22:52.530
their frequency on
a per app basis?

00:22:52.530 --> 00:22:55.620
I guess someone's asking, will
Google aggregate moments for

00:22:55.620 --> 00:22:59.520
people from apps?

00:22:59.520 --> 00:23:00.380
Interesting idea.

00:23:00.380 --> 00:23:01.170
JENNY MURPHY: Another
interesting idea.

00:23:01.170 --> 00:23:04.580
So I guess one of the cases you
might be worried about is,

00:23:04.580 --> 00:23:06.230
say there's an application that

00:23:06.230 --> 00:23:07.850
produces a lot of moments.

00:23:07.850 --> 00:23:10.840
So like, as you're hiking,
you're running, so you're

00:23:10.840 --> 00:23:12.060
passing a lot of landmarks.

00:23:12.060 --> 00:23:15.690
And our theoretical hiking
application might be writing

00:23:15.690 --> 00:23:18.950
tens, hundreds of moments
to your history.

00:23:18.950 --> 00:23:21.970
And we want to make sure the
interface stays useful.

00:23:21.970 --> 00:23:24.510
Is this something we
care a lot about?

00:23:24.510 --> 00:23:27.210
I don't really have much to say
on how it works, or how

00:23:27.210 --> 00:23:28.120
it's going to work.

00:23:28.120 --> 00:23:31.390
Right now, moments of the same
type, the same action--

00:23:31.390 --> 00:23:37.260
so an add activity or a watch
activity or view activity--

00:23:37.260 --> 00:23:40.200
will aggregate based on that.

00:23:40.200 --> 00:23:42.060
But we're putting a lot of
thought into what other kinds

00:23:42.060 --> 00:23:44.650
of aggregations we can do to
make sure that that interface

00:23:44.650 --> 00:23:47.290
stays useful no matter how
you're using it, and no matter

00:23:47.290 --> 00:23:51.354
how application developers are
using the History API.

00:23:51.354 --> 00:23:53.470
GERWIN STURM: Yeah, I noticed
you're actually also

00:23:53.470 --> 00:23:55.430
aggregating based on
the time frame.

00:23:55.430 --> 00:23:57.330
So when I'm using
[? Songtrack ?]

00:23:57.330 --> 00:23:59.210
[? MC ?], I've been listening
to music.

00:23:59.210 --> 00:24:01.680
From 10:00 to 12:00, I've been
listening to those songs.

00:24:01.680 --> 00:24:03.620
And then later, when I start it
again, I've been listening

00:24:03.620 --> 00:24:06.060
to other songs from 3:00 to
5:00, even if there's no other

00:24:06.060 --> 00:24:07.380
activity in between.

00:24:07.380 --> 00:24:10.970
So actually have some time
frames in there as well in the

00:24:10.970 --> 00:24:11.680
aggregation.

00:24:11.680 --> 00:24:13.280
At least from what I've seen.

00:24:13.280 --> 00:24:13.530
JENNY MURPHY: Yes.

00:24:13.530 --> 00:24:15.710
We are also, right now, balling
them together a little

00:24:15.710 --> 00:24:16.440
bit by time.

00:24:16.440 --> 00:24:18.710
So if they occur in a cluster,
you'll also see them kind of

00:24:18.710 --> 00:24:21.020
compressed into that cluster.

00:24:21.020 --> 00:24:23.290
Just to make sure that your
different sessions--

00:24:23.290 --> 00:24:25.440
so if you go on one hike and
then you drive across town and

00:24:25.440 --> 00:24:28.480
go on another, those would still
be usable separately.

00:24:28.480 --> 00:24:29.660
But these are just
the beginning.

00:24:29.660 --> 00:24:32.090
If you have other ideas out
there of how you want to see

00:24:32.090 --> 00:24:35.030
these interfaces work, please
send us this feedback.

00:24:35.030 --> 00:24:37.390
This is a really great
opportunity for all of you

00:24:37.390 --> 00:24:38.710
developers out there.

00:24:38.710 --> 00:24:41.860
Because developer preview,
that's what this is about.

00:24:41.860 --> 00:24:44.310
It's about us getting your
feedback while you get to bang

00:24:44.310 --> 00:24:47.100
on it in real time.

00:24:47.100 --> 00:24:48.780
GERWIN STURM: So I've
got a question.

00:24:48.780 --> 00:24:51.680
Can we use the start
date in the future?

00:24:51.680 --> 00:24:57.810
So can we pre-date moments, or
do you catch this in the API?

00:24:57.810 --> 00:24:59.100
Just curious.

00:24:59.100 --> 00:25:01.100
JENNY MURPHY: Future moments.

00:25:01.100 --> 00:25:02.650
Think of all the potential
for that.

00:25:02.650 --> 00:25:04.910
I see potential for trouble.

00:25:04.910 --> 00:25:05.400
It isn't--

00:25:05.400 --> 00:25:06.880
GERWIN STURM: I'm just wondering
if you allow it at

00:25:06.880 --> 00:25:08.420
the moment, if it's possible.

00:25:08.420 --> 00:25:10.490
JENNY MURPHY: I haven't
actually tried it.

00:25:10.490 --> 00:25:12.730
We probably shouldn't
allow it.

00:25:12.730 --> 00:25:15.060
So I'll be trying it
right after this to

00:25:15.060 --> 00:25:15.880
find out what happens.

00:25:15.880 --> 00:25:17.910
ALLEN FIRSTENBERG: I can see
applications for having events

00:25:17.910 --> 00:25:18.850
in the future.

00:25:18.850 --> 00:25:21.030
FRASER CAIN: Yeah, isn't
that the events?

00:25:21.030 --> 00:25:23.350
ALLEN FIRSTENBERG: Well,
now I have an alarm.

00:25:23.350 --> 00:25:26.190
I can now use it as
an alarm system.

00:25:26.190 --> 00:25:27.440
JENNY MURPHY: That's
interesting.

00:25:27.440 --> 00:25:28.920
FRASER CAIN: For my
future history.

00:25:28.920 --> 00:25:31.950
JENNY MURPHY: But if your
cellphone dies and your alarm

00:25:31.950 --> 00:25:37.150
never goes off, isn't that
moment like a lie then?

00:25:37.150 --> 00:25:38.190
ALLEN FIRSTENBERG: Well,
then I could use it as

00:25:38.190 --> 00:25:39.550
a dead man's switch.

00:25:39.550 --> 00:25:42.550
That if I don't kill the moment
at some point in the

00:25:42.550 --> 00:25:45.200
future, everyone's going to
know that I'm not killing

00:25:45.200 --> 00:25:46.130
[? them. ?]

00:25:46.130 --> 00:25:47.990
FRASER CAIN: You can still say
you were reminded in the

00:25:47.990 --> 00:25:51.880
future, whether or not you
actually got that reminder.

00:25:51.880 --> 00:25:54.780
And then after now, it
becomes history.

00:25:54.780 --> 00:25:56.870
But at least the system
tried to remind you.

00:25:59.640 --> 00:26:00.112
JENNY MURPHY: I'll be
trying to wrap my

00:26:00.112 --> 00:26:01.170
head around that one.

00:26:01.170 --> 00:26:03.800
That's definitely an
interesting case.

00:26:03.800 --> 00:26:05.060
GUS CLASS: So we have some--

00:26:05.060 --> 00:26:08.940
this is all moments
in the future.

00:26:08.940 --> 00:26:10.690
But actually, there's
some more questions

00:26:10.690 --> 00:26:12.290
coming in on YouTube.

00:26:12.290 --> 00:26:13.700
A lot of them are
around grouping.

00:26:13.700 --> 00:26:15.880
And one of them is, will I be
able to sign moments with a

00:26:15.880 --> 00:26:18.900
marker ID and have
them collated?

00:26:18.900 --> 00:26:21.360
On the user side is
a single story.

00:26:21.360 --> 00:26:23.740
And then, kind of related is,
if I can specify some

00:26:23.740 --> 00:26:25.150
sort of group ID.

00:26:25.150 --> 00:26:27.300
From the context of my
application, that could be a

00:26:27.300 --> 00:26:28.960
useful point of aggregation.

00:26:28.960 --> 00:26:33.840
So it sounds like there's
interest in giving hints to

00:26:33.840 --> 00:26:39.430
the History API around that
moments could be aggregated.

00:26:39.430 --> 00:26:42.070
This sounds to me, actually,
like really good input.

00:26:42.070 --> 00:26:46.110
But I do not know of any kind
of automatic way that Google

00:26:46.110 --> 00:26:48.146
is currently doing
that on our side.

00:26:48.146 --> 00:26:48.960
Jenny?

00:26:48.960 --> 00:26:49.295
JENNY MURPHY: Right.

00:26:49.295 --> 00:26:50.870
So this is a really cool idea.

00:26:50.870 --> 00:26:52.330
I like this one a lot.

00:26:52.330 --> 00:26:53.470
Keep this stuff coming.

00:26:53.470 --> 00:26:54.840
GUS CLASS: Yeah,
keep it coming.

00:26:54.840 --> 00:26:57.400
JENNY MURPHY: Right now, one way
you can kind of hint to us

00:26:57.400 --> 00:26:59.110
that something similar
is going on is

00:26:59.110 --> 00:27:01.490
if that target URL--

00:27:01.490 --> 00:27:04.390
going back yet again to that
hiking application.

00:27:04.390 --> 00:27:07.680
If that hiking application was
tracking my progress through a

00:27:07.680 --> 00:27:12.880
hike, I may be targeting that
same hike page over and over

00:27:12.880 --> 00:27:15.970
and over again as
I move along.

00:27:15.970 --> 00:27:19.140
That's an example of one kind of
hint that exists right now.

00:27:19.140 --> 00:27:23.420
But giving other hints to us
about the kind of cohesiveness

00:27:23.420 --> 00:27:25.420
of activities is a really,
really cool idea.

00:27:25.420 --> 00:27:29.404
And we'll definitely
[? bubble ?] that up.

00:27:29.404 --> 00:27:30.180
GUS CLASS: Very cool.

00:27:30.180 --> 00:27:33.580
Yeah, I can definitely see how
the microformat stuff would

00:27:33.580 --> 00:27:36.630
kind of start to build up on top
of a [? page ?], and you

00:27:36.630 --> 00:27:40.060
could actually start using, as
you describe, all of this

00:27:40.060 --> 00:27:42.000
stuff added on to--

00:27:42.000 --> 00:27:43.960
I guess the larger story,
to use the words

00:27:43.960 --> 00:27:46.430
from Emily in YouTube.

00:27:46.430 --> 00:27:49.850
And it's an interesting idea.

00:27:49.850 --> 00:27:51.735
JENNY MURPHY: Very cool.

00:27:51.735 --> 00:27:53.740
So are there any other questions
on the stream or in

00:27:53.740 --> 00:27:55.350
the channel or in the Hangout?

00:27:55.350 --> 00:27:57.605
GUS CLASS: We'll try
to keep looking.

00:27:57.605 --> 00:28:00.210
But I'm not seeing on
the event right now.

00:28:03.080 --> 00:28:05.390
And looks like we're getting
through most of them.

00:28:05.390 --> 00:28:09.020
ABRAHAM: Is there any word on
the bug involving scope

00:28:09.020 --> 00:28:12.152
conflicts being fixed yet?

00:28:12.152 --> 00:28:14.180
JENNY MURPHY: Is there any
word on the scope?

00:28:14.180 --> 00:28:19.730
So right now, the issue that
you're mentioning is that the

00:28:19.730 --> 00:28:24.720
History API only works with
Plus.me and History right now.

00:28:24.720 --> 00:28:27.720
You can't use any other scopes,
which kind of limits

00:28:27.720 --> 00:28:32.410
your ability to use this API
with, for example, Google

00:28:32.410 --> 00:28:35.660
Drive, for example,
or other ones.

00:28:35.660 --> 00:28:36.960
There is a workaround.

00:28:36.960 --> 00:28:38.640
It's not the prettiest
workaround.

00:28:38.640 --> 00:28:40.970
What you can do is you can
send the user through two

00:28:40.970 --> 00:28:45.030
authentication flows, and make
those API calls separately

00:28:45.030 --> 00:28:48.060
through different instances
of the client libraries.

00:28:48.060 --> 00:28:51.110
I realize this is a really
cumbersome workaround.

00:28:51.110 --> 00:28:52.910
We're working on a solution.

00:28:52.910 --> 00:28:55.210
It's one of those things
we want to

00:28:55.210 --> 00:28:56.680
make sure we get right.

00:28:56.680 --> 00:29:00.860
And we are actively
working on it.

00:29:00.860 --> 00:29:03.070
But that's all I can
say right now.

00:29:03.070 --> 00:29:05.320
ABRAHAM: No current change
in status, basically.

00:29:05.320 --> 00:29:06.970
JENNY MURPHY: There is no
current change in status.

00:29:06.970 --> 00:29:09.000
I have my eye on that
open issue.

00:29:09.000 --> 00:29:11.920
So if you want to learn when
this issue updates, you can go

00:29:11.920 --> 00:29:14.030
into our public issue
tracker, which I'll

00:29:14.030 --> 00:29:15.080
link in the show notes.

00:29:15.080 --> 00:29:18.320
And you can star any issues
that are relevant to you.

00:29:18.320 --> 00:29:21.020
And you'll be notified when we
update them, when we fix those

00:29:21.020 --> 00:29:23.630
problems, or when we have
other news to report.

00:29:23.630 --> 00:29:26.420
So that's the best way to stay
up to date on these things.

00:29:26.420 --> 00:29:27.892
GUS CLASS: Cool.

00:29:27.892 --> 00:29:29.860
So looks like the questions
are trickling

00:29:29.860 --> 00:29:32.130
down a little bit.

00:29:32.130 --> 00:29:33.320
JENNY MURPHY: Well, great
stuff so far.

00:29:33.320 --> 00:29:35.880
GUS CLASS: Yeah, really
great stuff.

00:29:35.880 --> 00:29:38.420
Thank you everyone who
asked questions

00:29:38.420 --> 00:29:39.890
in the YouTube comments.

00:29:39.890 --> 00:29:41.920
It's always exciting to
hear what people are

00:29:41.920 --> 00:29:43.170
interested in doing.

00:29:46.080 --> 00:29:47.270
JENNY MURPHY: Any other
questions or

00:29:47.270 --> 00:29:49.135
comments from the Hangout?

00:29:52.620 --> 00:29:54.470
FRASER CAIN: It may shock you
and surprise you, but I'm

00:29:54.470 --> 00:29:59.000
actually running out of things
I need to ask for anymore.

00:29:59.000 --> 00:30:00.230
JENNY MURPHY: Wow.

00:30:00.230 --> 00:30:01.130
FRASER CAIN: Yeah.

00:30:01.130 --> 00:30:03.490
We're getting to the point now
where anything we can imagine,

00:30:03.490 --> 00:30:04.620
we're actually able to do.

00:30:04.620 --> 00:30:07.410
So yeah.

00:30:07.410 --> 00:30:10.810
So now I guess all the
onus is back on me.

00:30:10.810 --> 00:30:12.770
JENNY MURPHY: So write awesome
stuff and tell us what we're

00:30:12.770 --> 00:30:14.470
doing wrong to make that hard.

00:30:14.470 --> 00:30:15.920
And we'll fix it and
make it easy.

00:30:15.920 --> 00:30:18.390
And then you can do
more awesome.

00:30:18.390 --> 00:30:20.060
If that made any sense.

00:30:20.060 --> 00:30:20.520
GUS CLASS: Yeah.

00:30:20.520 --> 00:30:20.930
JENNY MURPHY: More awesome.

00:30:20.930 --> 00:30:21.770
That's the important part.

00:30:21.770 --> 00:30:23.370
GUS CLASS: More awesome
always makes sense.

00:30:23.370 --> 00:30:25.250
Because everything must
constantly be

00:30:25.250 --> 00:30:26.940
getting more awesomer.

00:30:26.940 --> 00:30:28.160
JENNY MURPHY: More awesomer
is better.

00:30:28.160 --> 00:30:30.280
GUS CLASS: Yeah.

00:30:30.280 --> 00:30:33.540
GERWIN STURM: So you probably
can't tell us, but is there

00:30:33.540 --> 00:30:35.330
any estimated time
frame [INAUDIBLE]

00:30:35.330 --> 00:30:38.570
when the Google Play services
for the mobile [INAUDIBLE]

00:30:38.570 --> 00:30:41.300
Google+ platform will
be available?

00:30:41.300 --> 00:30:45.620
Because they've been announced
for quite a while now.

00:30:45.620 --> 00:30:46.530
JENNY MURPHY: That's actually
information

00:30:46.530 --> 00:30:47.610
that I do not know.

00:30:47.610 --> 00:30:50.465
I'm very excited about it.

00:30:50.465 --> 00:30:53.100
If I knew, I probably wouldn't
be able to tell you.

00:30:53.100 --> 00:30:54.740
But I don't actually know.

00:30:54.740 --> 00:30:57.410
But I'm eagerly awaiting
it just like you.

00:30:57.410 --> 00:30:59.966
It's going to be
pretty awesome.

00:30:59.966 --> 00:31:02.650
GERWIN STURM: Yeah, because I
think the History API for

00:31:02.650 --> 00:31:05.670
mobile, it's a huge use case.

00:31:05.670 --> 00:31:08.550
Because if you, say you're on
a hike, then you want your

00:31:08.550 --> 00:31:09.850
geolocation from your phone.

00:31:09.850 --> 00:31:12.840
So you would need it on
your phone to work.

00:31:12.840 --> 00:31:14.400
GUS CLASS: Yeah.

00:31:14.400 --> 00:31:16.830
The mobile scenarios
are huge for it.

00:31:16.830 --> 00:31:18.450
And the kind of things
that you can get

00:31:18.450 --> 00:31:19.840
from there are important.

00:31:19.840 --> 00:31:24.410
But I believe the server side
flow could enable certain

00:31:24.410 --> 00:31:25.100
mobile scenarios.

00:31:25.100 --> 00:31:26.325
Is that right, Jenny?

00:31:26.325 --> 00:31:27.660
JENNY MURPHY: It could,
potentially.

00:31:27.660 --> 00:31:30.900
So if your users already
authenticated server side, you

00:31:30.900 --> 00:31:33.480
can use your mobile application
interfaced with

00:31:33.480 --> 00:31:36.910
your server-side software to
then write the moments from

00:31:36.910 --> 00:31:38.260
server side.

00:31:38.260 --> 00:31:42.160
Or if your user is authenticated
even device

00:31:42.160 --> 00:31:44.260
side, you could even send them
the moments from the mobile

00:31:44.260 --> 00:31:46.830
device using the
same REST APIs.

00:31:46.830 --> 00:31:49.640
It's just not as clean
as it should be.

00:31:52.560 --> 00:31:53.970
GUS CLASS: There aren't
exactly the mobile

00:31:53.970 --> 00:31:55.780
starters right now.

00:31:55.780 --> 00:32:00.430
Or they're not necessarily
working yet.

00:32:00.430 --> 00:32:03.460
But yeah, it's completely
possible to implement it with

00:32:03.460 --> 00:32:05.680
the REST APIs or doing
it server side.

00:32:05.680 --> 00:32:07.690
JENNY MURPHY: Yeah.

00:32:07.690 --> 00:32:09.510
In other words, we're also
very excited about it.

00:32:09.510 --> 00:32:12.270
GUS CLASS: Yes.

00:32:12.270 --> 00:32:13.770
FRASER CAIN: I know you don't
like to talk about

00:32:13.770 --> 00:32:14.560
availability.

00:32:14.560 --> 00:32:18.830
But do you know if and when
people will be able to connect

00:32:18.830 --> 00:32:22.040
to a Hangout on air using
a mobile device?

00:32:22.040 --> 00:32:24.720
JENNY MURPHY: Connect to hang
on air from a mobile device.

00:32:24.720 --> 00:32:28.070
That's something I definitely
do not know.

00:32:28.070 --> 00:32:28.520
But you know--

00:32:28.520 --> 00:32:29.850
FRASER CAIN: It's not
permitted right now.

00:32:29.850 --> 00:32:33.230
It fails if you attempt to
connect with a mobile device.

00:32:33.230 --> 00:32:34.360
But you can imagine.

00:32:34.360 --> 00:32:36.980
I mean, you want to
report on a riot.

00:32:36.980 --> 00:32:40.960
You send a person out with their
iPhone into a crowd, and

00:32:40.960 --> 00:32:42.275
they can be reporting
on the scene.

00:32:42.275 --> 00:32:43.270
Right now, it's not possible.

00:32:43.270 --> 00:32:46.250
JENNY MURPHY: That would
be pretty cool.

00:32:46.250 --> 00:32:50.750
ALLEN FIRSTENBERG: The related
question is, any word on if

00:32:50.750 --> 00:32:54.280
and when the Hangout
API will be

00:32:54.280 --> 00:32:56.260
available on mobile devices?

00:32:59.870 --> 00:33:01.810
JENNY MURPHY: Again, that
would be really cool.

00:33:01.810 --> 00:33:03.060
No idea when.

00:33:06.270 --> 00:33:06.600
Yes.

00:33:06.600 --> 00:33:11.410
But we will be having more
Hangout Office Hours coming up

00:33:11.410 --> 00:33:12.780
with cool Hangout stuff.

00:33:12.780 --> 00:33:12.950
GUS CLASS: Yep.

00:33:12.950 --> 00:33:14.200
JENNY MURPHY: Not
that, though.

00:33:16.300 --> 00:33:17.910
Cool.

00:33:17.910 --> 00:33:21.840
So any other wants or needs
before we wrap up?

00:33:21.840 --> 00:33:25.141
Or any other questions
from the rest of

00:33:25.141 --> 00:33:26.730
the developer community?

00:33:26.730 --> 00:33:29.700
GUS CLASS: So there is one
for moments in History.

00:33:29.700 --> 00:33:30.320
JENNY MURPHY: Awesome.

00:33:30.320 --> 00:33:32.760
GUS CLASS: If I could define my
own unique ID for History,

00:33:32.760 --> 00:33:35.540
could I correct that
moment later?

00:33:35.540 --> 00:33:40.670
So can you make changes without
collation happening?

00:33:40.670 --> 00:33:41.120
JENNY MURPHY: Ah.

00:33:41.120 --> 00:33:43.290
This is a great question.

00:33:43.290 --> 00:33:46.990
Right now, we have something
similar to an ID.

00:33:46.990 --> 00:33:49.710
Certain moments that are written
to the History have a

00:33:49.710 --> 00:33:51.710
result attribute.

00:33:51.710 --> 00:33:56.930
Those results refer to a URL in
addition to the target URL.

00:33:56.930 --> 00:33:59.300
So a case of this would be, for
example, I comment on a

00:33:59.300 --> 00:34:00.510
blog entry.

00:34:00.510 --> 00:34:03.850
The target of that moment is
the blog entry, but that

00:34:03.850 --> 00:34:06.610
comment also exists.

00:34:06.610 --> 00:34:08.870
What if that comment changes?

00:34:08.870 --> 00:34:10.100
What you can do right
now is you can

00:34:10.100 --> 00:34:11.830
resubmit the same moment.

00:34:11.830 --> 00:34:16.250
And as long as the result URL
for that comment is the same,

00:34:16.250 --> 00:34:19.659
you can update the values
in that moment.

00:34:19.659 --> 00:34:23.710
And we're researching other
ways that we can support

00:34:23.710 --> 00:34:25.679
updating existing moments.

00:34:25.679 --> 00:34:28.989
For example, by allowing you
to submit your own ID.

00:34:28.989 --> 00:34:33.810
Or maybe using IDs on our
side that we return.

00:34:33.810 --> 00:34:34.920
This is stuff that I've
seen a lot of

00:34:34.920 --> 00:34:36.280
discussion about on threads.

00:34:36.280 --> 00:34:38.449
And I've actually talked a
little bit about it on some

00:34:38.449 --> 00:34:39.340
Google+ threads.

00:34:39.340 --> 00:34:43.429
So yes.

00:34:43.429 --> 00:34:44.500
We're thinking about it.

00:34:44.500 --> 00:34:45.780
We're still kicking it around.

00:34:45.780 --> 00:34:47.820
Right now, you can do it
for moments that have a

00:34:47.820 --> 00:34:50.570
result by their URL.

00:34:50.570 --> 00:34:51.570
Maybe more later.

00:34:51.570 --> 00:34:54.260
But we're still researching
it out.

00:34:58.230 --> 00:35:00.050
See, we're thinking alike
out there, all of you

00:35:00.050 --> 00:35:01.550
developers and us.

00:35:01.550 --> 00:35:02.710
I'm glad to hear we're
on the same page.

00:35:02.710 --> 00:35:03.740
So keep the feedback coming.

00:35:03.740 --> 00:35:06.830
It's working really well.

00:35:06.830 --> 00:35:07.220
Great.

00:35:07.220 --> 00:35:09.590
So if there are no other
questions here, I guess we'll

00:35:09.590 --> 00:35:12.900
wrap it up for the day.

00:35:12.900 --> 00:35:16.240
So we got a ton of great
feedback today.

00:35:16.240 --> 00:35:18.800
And please keep it coming.

00:35:18.800 --> 00:35:21.400
You can do it outside of
the Office Hours too.

00:35:21.400 --> 00:35:23.570
You can find us on Google+.

00:35:23.570 --> 00:35:26.340
We have a Plus page, which you
may be watching this video

00:35:26.340 --> 00:35:27.130
from right now.

00:35:27.130 --> 00:35:30.850
Google+ Developers on Google+.

00:35:30.850 --> 00:35:34.485
We watch [? stack ?] overflow
on the Google+ tag.

00:35:34.485 --> 00:35:36.600
We have an official forum,
even a chat room.

00:35:36.600 --> 00:35:38.660
Feel free to reach out to us
via whatever channel you're

00:35:38.660 --> 00:35:42.490
comfortable with, and talk to us
about your experiences with

00:35:42.490 --> 00:35:46.820
the History API and how you
think we can make it better.

00:35:46.820 --> 00:35:50.950
And if you're just getting
started, I'm going to be

00:35:50.950 --> 00:35:53.850
posting all of the code and
links to all of the other

00:35:53.850 --> 00:35:56.850
material in the show notes, as
well as some links to some

00:35:56.850 --> 00:35:59.930
videos that go into the History
API in a little bit

00:35:59.930 --> 00:36:03.010
more detail that we either
previously covered or that we

00:36:03.010 --> 00:36:06.760
talked about at Google I/O. So
check the notes at the end of

00:36:06.760 --> 00:36:08.900
the show, and you'll see
everything you need to get

00:36:08.900 --> 00:36:10.520
started there.

00:36:10.520 --> 00:36:12.550
GUS CLASS: And you can also find
the latest documentation

00:36:12.550 --> 00:36:15.510
on developers.google.com/+.

00:36:15.510 --> 00:36:19.876
The symbol, not the spelled-out
version.

00:36:19.876 --> 00:36:21.310
JENNY MURPHY: Correct.

00:36:21.310 --> 00:36:22.040
Great.

00:36:22.040 --> 00:36:23.700
So thanks so much
for tuning in.

00:36:23.700 --> 00:36:24.780
Thanks so much for watching.

00:36:24.780 --> 00:36:27.360
And thanks so much for the great
questions and feedback.

00:36:27.360 --> 00:36:29.830
And we'll be seeing you next
week on the next session of

00:36:29.830 --> 00:36:32.690
the Google+ Platform
Office Hours.

00:36:32.690 --> 00:36:33.940
Bye.

