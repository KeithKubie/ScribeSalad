WEBVTT
Kind: captions
Language: en

00:00:03.632 --> 00:00:05.570
RETO MEIER: Good afternoon,
Everyone.

00:00:05.570 --> 00:00:06.920
My name is Reto Meier.

00:00:06.920 --> 00:00:08.420
I am the tech lead
on the Android

00:00:08.420 --> 00:00:10.160
Developer Relations Team.

00:00:10.160 --> 00:00:13.790
And as part of the Android
Developer Relations team, a

00:00:13.790 --> 00:00:17.300
lot of our job is to listen to
you guys, ask questions from

00:00:17.300 --> 00:00:18.800
these guys, and tell you
guys the answer.

00:00:18.800 --> 00:00:21.800
So I thought it may be a little
bit more fun to let you

00:00:21.800 --> 00:00:23.630
guys ask them directly.

00:00:23.630 --> 00:00:25.110
Still through me, so
that we can keep

00:00:25.110 --> 00:00:27.150
everything nice and smooth.

00:00:27.150 --> 00:00:31.000
So I thought we'd start
off by having our team

00:00:31.000 --> 00:00:32.180
introduce each other.

00:00:32.180 --> 00:00:34.200
So at least introduce
themselves, perhaps.

00:00:34.200 --> 00:00:35.210
Each other could be fun.

00:00:35.210 --> 00:00:35.650
But no.

00:00:35.650 --> 00:00:37.170
We'll stick with themselves.

00:00:37.170 --> 00:00:39.920
Starting, perhaps, with
Matias at the end.

00:00:39.920 --> 00:00:40.330
MATIAS DUARTE: Hi.

00:00:40.330 --> 00:00:42.220
My name is Matias Duarte.

00:00:42.220 --> 00:00:46.540
And I lead the Android
design team.

00:00:46.540 --> 00:00:46.880
RACHEL GARB: Hi.

00:00:46.880 --> 00:00:47.750
I'm Rachel Garb.

00:00:47.750 --> 00:00:52.000
I'm an interaction designer
on Matias's team.

00:00:52.000 --> 00:00:52.920
JEFF HAMILTON: I'm
Jeff Hamilton.

00:00:52.920 --> 00:00:54.410
I'm the tech lead for Google
Play services.

00:00:57.050 --> 00:00:57.760
ADAM POWELL: I'm Adam Powell.

00:00:57.760 --> 00:00:59.950
I'm on the Android
framework team.

00:00:59.950 --> 00:01:00.760
REBECCA ZAVIN: I'm
Rebecca Zavin.

00:01:00.760 --> 00:01:04.269
I'm on the Android
systems team.

00:01:04.269 --> 00:01:05.330
DAN MORRILL: I'm Dan Morrill.

00:01:05.330 --> 00:01:09.200
I was recently promoted to
VP of lunch, apparently.

00:01:09.200 --> 00:01:10.550
And I'd just like to
say, [? holla ?]

00:01:10.550 --> 00:01:11.800
[? y'alla. ?]

00:01:13.700 --> 00:01:14.780
DAVE BURKE: Dave Burke.

00:01:14.780 --> 00:01:18.620
Eng director for the
Android platform.

00:01:18.620 --> 00:01:19.840
FICUS KIRKPATRICK: I'm
Ficus Kirkpatrick.

00:01:19.840 --> 00:01:21.820
I lead the Play Store team.

00:01:21.820 --> 00:01:22.450
ROMAIN GUY: I'm Romain Guy.

00:01:22.450 --> 00:01:25.260
I work on the Android
framework team.

00:01:25.260 --> 00:01:26.250
XAVIER DUCROHET: I'm
Xavier Ducrohet.

00:01:26.250 --> 00:01:29.950
I'm the tech lead for the
SDK and developer tools.

00:01:29.950 --> 00:01:30.960
DIANNE HACKBORN: I'm
Dianne Hackborn.

00:01:30.960 --> 00:01:34.100
I work on the Android
framework team.

00:01:34.100 --> 00:01:34.360
RETO MEIER: All right.

00:01:34.360 --> 00:01:34.850
Thanks, everyone.

00:01:34.850 --> 00:01:37.880
So the purpose of the fireside
chat is really for you guys to

00:01:37.880 --> 00:01:40.250
be able to interact with some
of the people which actually

00:01:40.250 --> 00:01:42.500
build the stuff that we
often talk about.

00:01:42.500 --> 00:01:44.730
So it is really about
interactions.

00:01:44.730 --> 00:01:46.660
And we've got a couple of
microphones set up, if you

00:01:46.660 --> 00:01:49.600
guys want to start lining up
to ask your questions.

00:01:49.600 --> 00:01:51.750
I'm going to start off with a
few things which we tend to

00:01:51.750 --> 00:01:53.670
get asked a lot in developer
relations.

00:01:53.670 --> 00:01:56.177
So I thought rather than making
up my own answers, I

00:01:56.177 --> 00:01:57.600
would give these guys
the opportunity to

00:01:57.600 --> 00:02:00.440
respond for a change.

00:02:00.440 --> 00:02:04.120
So one thing which I get asked
a lot is, Android is a really

00:02:04.120 --> 00:02:04.740
big project.

00:02:04.740 --> 00:02:07.180
It certainly hasn't gotten any
smaller over the years.

00:02:07.180 --> 00:02:10.680
So a lot of independent
developers wonder, how do you

00:02:10.680 --> 00:02:13.130
continue to maintain that same
sort of velocity without

00:02:13.130 --> 00:02:14.380
sacrificing quality?

00:02:20.390 --> 00:02:23.360
DAVE BURKE: I just depend on
really smart people over here

00:02:23.360 --> 00:02:25.090
to do good work.

00:02:25.090 --> 00:02:25.540
I don't know.

00:02:25.540 --> 00:02:27.790
That's a really good question.

00:02:27.790 --> 00:02:31.860
We do planning around
releases.

00:02:31.860 --> 00:02:34.380
So we think about what we want
to do in the release.

00:02:34.380 --> 00:02:37.050
We survey across
the whole team.

00:02:37.050 --> 00:02:38.620
We try to come up with
themes for what we're

00:02:38.620 --> 00:02:39.250
trying to work on.

00:02:39.250 --> 00:02:42.390
Like in Jelly Bean, and we try
to work on jank, et cetera.

00:02:42.390 --> 00:02:44.820
And really it's just about
rallying the team around that.

00:02:44.820 --> 00:02:49.910
And a lot of the engineers and
UX folks and product managers

00:02:49.910 --> 00:02:52.500
on Android are just very
passionate about what they do.

00:02:52.500 --> 00:02:55.970
And they want to build the best
possible product, full of

00:02:55.970 --> 00:02:59.480
energy, and really smart, and
yeah, it's as simple as that.

00:02:59.480 --> 00:03:02.630
The other thing I would say
is, the industry is very

00:03:02.630 --> 00:03:03.310
competitive.

00:03:03.310 --> 00:03:04.890
And it's changing
all the time.

00:03:04.890 --> 00:03:07.730
And something we do in Android
is, we try to be very agile.

00:03:07.730 --> 00:03:11.890
So we constantly evaluate where
we are, where we're

00:03:11.890 --> 00:03:13.910
weakest, where we're stronger.

00:03:13.910 --> 00:03:15.730
And adjust our plans to that.

00:03:15.730 --> 00:03:18.850
And I think that helps with
our velocity as well.

00:03:18.850 --> 00:03:20.340
Because we're kind of
very self aware

00:03:20.340 --> 00:03:21.490
of where we're going.

00:03:21.490 --> 00:03:23.680
ROMAIN GUY: I think what he
meant was, he keeps us chained

00:03:23.680 --> 00:03:24.490
to our desks, really.

00:03:24.490 --> 00:03:24.945
DAVE BURKE: Yeah.

00:03:24.945 --> 00:03:26.765
That's true.

00:03:26.765 --> 00:03:28.740
RETO MEIER: Thanks, Dave.

00:03:28.740 --> 00:03:29.930
I've got a follow-up
question for that.

00:03:29.930 --> 00:03:31.770
But first, we're going to answer
the questions from you

00:03:31.770 --> 00:03:32.330
guys at the front.

00:03:32.330 --> 00:03:34.330
But I'd encourage everyone else
who lines up to do so at

00:03:34.330 --> 00:03:37.220
the back mic so that we don't
have heads in the video.

00:03:37.220 --> 00:03:39.570
So the follow-up was, given
the velocity, the speed at

00:03:39.570 --> 00:03:43.590
which the Android team is
developing new frameworks, is

00:03:43.590 --> 00:03:45.270
there anything that you would
have done differently?

00:03:45.270 --> 00:03:48.320
Like, looking back at the things
which have launched,

00:03:48.320 --> 00:03:49.940
and some of those choices,
anything if you had a little

00:03:49.940 --> 00:03:53.000
bit more time, you could
go back and change?

00:03:53.000 --> 00:03:54.820
FICUS KIRKPATRICK: How
much time do we have?

00:03:54.820 --> 00:04:00.710
RETO MEIER: You could get
about 36 minutes.

00:04:00.710 --> 00:04:02.070
DIANNE HACKBORN: I think-- and
you probably won't like this.

00:04:02.070 --> 00:04:06.930
But I think probably the biggest
thing that we should

00:04:06.930 --> 00:04:09.680
have done differently in a few
places was, there's a few

00:04:09.680 --> 00:04:11.490
places where we should have
had more control over

00:04:11.490 --> 00:04:13.360
applications.

00:04:13.360 --> 00:04:17.230
Like, a good example is the
whole settings provider.

00:04:17.230 --> 00:04:19.660
The applications go
in right to it.

00:04:19.660 --> 00:04:23.180
Which was just a simple thing
that we shouldn't have done.

00:04:23.180 --> 00:04:26.480
And those kind of things, where
you let applications do

00:04:26.480 --> 00:04:29.040
things, are really hard
to get away from.

00:04:29.040 --> 00:04:31.770
So it takes a long time to clean
up that kind of stuff.

00:04:31.770 --> 00:04:34.330
There's lots of things that
you look back, and you're

00:04:34.330 --> 00:04:36.350
like, yeah, that could have
been done better.

00:04:36.350 --> 00:04:39.230
But usually it's implementation,
or even APIs

00:04:39.230 --> 00:04:40.160
are pretty easy to change.

00:04:40.160 --> 00:04:42.470
But when it's things that you
let applications do that

00:04:42.470 --> 00:04:44.990
you're like, maybe we shouldn't
have done that,

00:04:44.990 --> 00:04:46.470
those are really hard
to recover from.

00:04:55.300 --> 00:04:55.890
RETO MEIER: Any other takers?

00:04:55.890 --> 00:04:59.190
Ficus, did you want to
add anything to that?

00:04:59.190 --> 00:05:00.810
FICUS KIRKPATRICK: Well, I was
just talking a little trash

00:05:00.810 --> 00:05:04.100
about content providers
to Jeff.

00:05:04.100 --> 00:05:05.030
Yeah.

00:05:05.030 --> 00:05:07.100
There's a long list.

00:05:07.100 --> 00:05:10.840
I think you're never going
to get everything

00:05:10.840 --> 00:05:11.670
right the first time.

00:05:11.670 --> 00:05:15.330
And I don't really regret any
of the mistakes we've made.

00:05:15.330 --> 00:05:18.490
Because I think getting things
out there at the speed we did

00:05:18.490 --> 00:05:21.510
and having the opportunity to
get the feedback and iterate

00:05:21.510 --> 00:05:22.760
was actually the most
important thing.

00:05:25.390 --> 00:05:27.900
RETO MEIER: So I'm going to
ask one question which was

00:05:27.900 --> 00:05:30.320
asked by a G+, by Peter
van der Linden on

00:05:30.320 --> 00:05:31.180
exactly this topic.

00:05:31.180 --> 00:05:34.920
And he suggested that the binder
software for Android

00:05:34.920 --> 00:05:38.500
IPC is now in its third
implementation after

00:05:38.500 --> 00:05:40.370
BOS and Palm OS.

00:05:40.370 --> 00:05:45.480
And he asks, are you any closer
to getting it right?

00:05:45.480 --> 00:05:46.810
So that may be a little
bit inflammatory.

00:05:46.810 --> 00:05:47.760
So let me ask you this.

00:05:47.760 --> 00:05:50.650
Are you happy with the Android
IPC binder implementation?

00:05:50.650 --> 00:05:52.430
Is there anything that you would
do differently if you

00:05:52.430 --> 00:05:53.816
got a fourth attempt to do it?

00:05:56.660 --> 00:05:58.040
DIANNE HACKBORN: I mean, you
never ever get anything

00:05:58.040 --> 00:06:00.570
perfectly right, so--

00:06:00.570 --> 00:06:02.450
well.

00:06:02.450 --> 00:06:03.520
We're happy with it.

00:06:03.520 --> 00:06:06.110
And I think the phrasing of
that is very misleading,

00:06:06.110 --> 00:06:08.850
because it wasn't that it was
changed because we weren't

00:06:08.850 --> 00:06:10.260
happy with what we had before.

00:06:10.260 --> 00:06:13.990
But it was rewritten to address
the needs each time.

00:06:13.990 --> 00:06:18.730
And for Android, we had a very
different environment, where

00:06:18.730 --> 00:06:21.640
it was really just used for IPC
instead of the previous

00:06:21.640 --> 00:06:24.740
version, which was built around
C++ and had a lot

00:06:24.740 --> 00:06:28.170
dynamic language features that
don't exist in C++, so we

00:06:28.170 --> 00:06:29.650
built them up ourselves.

00:06:29.650 --> 00:06:32.340
And once we moved over to
Android, we were doing that in

00:06:32.340 --> 00:06:34.880
Java, and all that dynamic part
of it just didn't make

00:06:34.880 --> 00:06:37.600
sense, which of the Java
language already having a lot

00:06:37.600 --> 00:06:39.600
of those features.

00:06:39.600 --> 00:06:42.750
So the right thing to do is go
and look at, what do we need

00:06:42.750 --> 00:06:47.920
now, and build what makes sense
for what you need then.

00:06:47.920 --> 00:06:47.980
RETO MEIER: Perfect.

00:06:47.980 --> 00:06:48.170
All right.

00:06:48.170 --> 00:06:50.850
So you guys have been
waiting patiently.

00:06:50.850 --> 00:06:51.690
Starting at the front,
perhaps.

00:06:51.690 --> 00:06:53.750
What's your question?

00:06:53.750 --> 00:06:54.050
ERIC GRAY: Hi.

00:06:54.050 --> 00:06:58.150
I'm Eric Gray from Canada,
Vancouver.

00:06:58.150 --> 00:07:01.560
My main question was about
Android updates.

00:07:01.560 --> 00:07:05.610
And I know that there's been
an awful lot of talk about

00:07:05.610 --> 00:07:07.140
fragmentation--

00:07:07.140 --> 00:07:08.530
the F-word for Android.

00:07:08.530 --> 00:07:11.990
And I know that it has
vastly improved

00:07:11.990 --> 00:07:13.200
in the latest versions.

00:07:13.200 --> 00:07:15.440
But there's still a gross
number of people

00:07:15.440 --> 00:07:18.630
using 2.2 and 2.3.

00:07:18.630 --> 00:07:23.810
And as you guys said at one of
the previous I/Os, you have

00:07:23.810 --> 00:07:28.620
been working with the OEMs to
make the update process a lot

00:07:28.620 --> 00:07:32.470
faster and smoother,
but no one really

00:07:32.470 --> 00:07:33.990
is seeing this change.

00:07:33.990 --> 00:07:39.000
So is there still a continued
effort in this area?

00:07:39.000 --> 00:07:39.410
DAVE BURKE: Yeah.

00:07:39.410 --> 00:07:41.180
Very good question.

00:07:41.180 --> 00:07:43.505
This is something we think
about a lot, actually.

00:07:46.090 --> 00:07:48.510
There's multiple levels to it.

00:07:48.510 --> 00:07:51.530
If you think about what we do,
we release open source.

00:07:51.530 --> 00:07:54.200
And then Silicon vendors take
that open source, and then

00:07:54.200 --> 00:07:58.030
they bring it up on their
particular SOC.

00:07:58.030 --> 00:07:59.550
And they create what
they call a BSP.

00:07:59.550 --> 00:08:01.460
Then they have the
BSP to the OEM.

00:08:01.460 --> 00:08:02.840
And then the OEM produces
a phone.

00:08:02.840 --> 00:08:06.130
And so there's this big channel
before an actual

00:08:06.130 --> 00:08:07.590
update gets out.

00:08:07.590 --> 00:08:09.930
So we're doing a lot of things
internally, thinking about how

00:08:09.930 --> 00:08:11.950
we can actually streamline
that process.

00:08:11.950 --> 00:08:15.290
Part of it is making the actual
code for the platform

00:08:15.290 --> 00:08:18.150
more layered so that if a
Silicon vendor needs to make

00:08:18.150 --> 00:08:19.570
changes, they have a very clean

00:08:19.570 --> 00:08:20.880
abstraction layer to do that.

00:08:20.880 --> 00:08:22.760
So we're looking to
streamline it.

00:08:22.760 --> 00:08:27.460
The other thing we're looking at
is to try to understand the

00:08:27.460 --> 00:08:31.220
hardware profile of different
devices running different

00:08:31.220 --> 00:08:31.980
Android versions.

00:08:31.980 --> 00:08:35.679
So there is a predominance of
Gingerbread in emerging

00:08:35.679 --> 00:08:36.760
markets, for example.

00:08:36.760 --> 00:08:42.480
And one of the reasons for that
is because it runs on

00:08:42.480 --> 00:08:45.520
lower memory than some of the
newer Android versions.

00:08:45.520 --> 00:08:47.767
And it's not so much the system,
but actually the

00:08:47.767 --> 00:08:49.430
applications themselves
tend to be more

00:08:49.430 --> 00:08:51.420
advanced and richer.

00:08:51.420 --> 00:08:55.200
And so we're looking at ways to
make Android more efficient

00:08:55.200 --> 00:08:58.580
for the sort of entry-level
smartphone as well, to help

00:08:58.580 --> 00:09:00.650
improve that situation.

00:09:00.650 --> 00:09:03.940
MATIAS DUARTE: I want to jump
in also on the other end to

00:09:03.940 --> 00:09:07.580
reaffirm how important updates
are for Android, and how we

00:09:07.580 --> 00:09:09.920
really are working in lots
of different ways.

00:09:09.920 --> 00:09:12.890
And the relationships with our
OEM partners are really

00:09:12.890 --> 00:09:14.840
important to us.

00:09:14.840 --> 00:09:17.780
Sometimes it can seem like you
don't see a lot of that.

00:09:17.780 --> 00:09:20.270
But it is a very complex
problem for them.

00:09:20.270 --> 00:09:21.340
It matters a lot to us.

00:09:21.340 --> 00:09:22.400
We are working on it.

00:09:22.400 --> 00:09:26.360
One small sign of our efforts
there is what we announced

00:09:26.360 --> 00:09:31.420
yesterday, the Galaxy S4, that
has the Nexus software

00:09:31.420 --> 00:09:35.490
experience and will have
more timely updates.

00:09:35.490 --> 00:09:36.620
ERIC GRAY: Thank
you very much.

00:09:36.620 --> 00:09:37.520
RETO MEIER: Thank you.

00:09:37.520 --> 00:09:38.800
From the back.

00:09:38.800 --> 00:09:41.350
AUDIENCE: I'm wondering for NDK
developers that want to

00:09:41.350 --> 00:09:46.110
exploit multicore parallelism,
are you doing anything there

00:09:46.110 --> 00:09:47.880
in terms of new capabilities?

00:09:47.880 --> 00:09:50.090
Or are there existing
tools or libraries

00:09:50.090 --> 00:09:51.340
that you would recommend?

00:09:56.830 --> 00:09:58.924
ROMAIN GUY: We use threads.

00:09:58.924 --> 00:10:01.610
[LAUGHTER]

00:10:01.610 --> 00:10:02.360
RETO MEIER: That's
a good answer.

00:10:02.360 --> 00:10:05.030
Very thorough.

00:10:05.030 --> 00:10:05.530
ROMAIN GUY: OK.

00:10:05.530 --> 00:10:09.110
To be fair, the NDK is pretty
simple, and we know it's

00:10:09.110 --> 00:10:10.630
difficult to use.

00:10:10.630 --> 00:10:13.030
And that probably won't make you
feel better, but it's not

00:10:13.030 --> 00:10:15.900
that much better for us when
we write native code.

00:10:15.900 --> 00:10:17.660
I've been writing way
too much native code

00:10:17.660 --> 00:10:18.560
these past two years.

00:10:18.560 --> 00:10:22.090
And we don't have anything in
particular that you don't have

00:10:22.090 --> 00:10:24.080
when it comes to multi-threading
or using

00:10:24.080 --> 00:10:26.710
multiple cores.

00:10:26.710 --> 00:10:30.280
Downloadable APIs, I think they
are exposed in the NDK

00:10:30.280 --> 00:10:31.980
where you can create a number
of cores, and then you can

00:10:31.980 --> 00:10:33.270
make your decisions
based on that.

00:10:33.270 --> 00:10:35.590
But maybe Dianne knows more.

00:10:38.990 --> 00:10:39.450
RETO MEIER: Thank you.

00:10:39.450 --> 00:10:41.170
Again from the front.

00:10:41.170 --> 00:10:41.490
DANIEL: Hi.

00:10:41.490 --> 00:10:42.430
My name is Daniel.

00:10:42.430 --> 00:10:45.300
I have a question regarding
the navigational drawer.

00:10:45.300 --> 00:10:48.150
It was mentioned in the session
that one of the

00:10:48.150 --> 00:10:50.590
advantages is that you can
access it from anywhere from

00:10:50.590 --> 00:10:51.720
your application.

00:10:51.720 --> 00:10:55.230
But shouldn't that actually be
only accessible from your root

00:10:55.230 --> 00:10:57.280
activities, or the top-level
activities?

00:10:57.280 --> 00:11:00.080
And the reason I'm asking is,
if you allow the user to

00:11:00.080 --> 00:11:03.700
access the navigation drawer
anywhere from your

00:11:03.700 --> 00:11:06.980
application, like categories
and details, wouldn't that

00:11:06.980 --> 00:11:09.500
just keep adding more and more
and more activities to the

00:11:09.500 --> 00:11:12.530
stack and then make it kind of
hard for the user to remember

00:11:12.530 --> 00:11:15.210
what the back button or the up
button is going to do, since

00:11:15.210 --> 00:11:16.790
they have now an infinite
number of

00:11:16.790 --> 00:11:19.130
activities on the stack?

00:11:19.130 --> 00:11:20.120
MATIAS DUARTE: I'll take
that one just to

00:11:20.120 --> 00:11:20.820
jump in real quick.

00:11:20.820 --> 00:11:23.210
Which is, if you're just adding
activities onto the

00:11:23.210 --> 00:11:25.900
stack without regard for your
app's structure, you're not

00:11:25.900 --> 00:11:28.890
doing it right.

00:11:28.890 --> 00:11:31.046
ADAM POWELL: To go a little
bit deeper on that--

00:11:31.046 --> 00:11:32.880
[LAUGHTER]

00:11:32.880 --> 00:11:34.055
RETO MEIER: No, I think
we're done there.

00:11:34.055 --> 00:11:34.400
No.

00:11:34.400 --> 00:11:36.610
Please.

00:11:36.610 --> 00:11:39.095
ADAM POWELL: So if you do use
the navigation drawer at

00:11:39.095 --> 00:11:40.760
deeper levels of your
application, then you should

00:11:40.760 --> 00:11:43.000
treat some of those navigation
targets the same way that you

00:11:43.000 --> 00:11:45.550
would treat either a
notification or a widget

00:11:45.550 --> 00:11:47.190
coming from another part
of your application.

00:11:47.190 --> 00:11:49.550
So go ahead and just replace the
full tasks stack to build

00:11:49.550 --> 00:11:52.834
something that makes sense
for that destination.

00:11:52.834 --> 00:11:53.282
AUDIENCE: OK.

00:11:53.282 --> 00:11:54.630
Thank you.

00:11:54.630 --> 00:11:56.080
RETO MEIER: I guess while
we've got the designers

00:11:56.080 --> 00:11:57.940
talking, I had a couple
of other questions

00:11:57.940 --> 00:11:58.960
which have come up.

00:11:58.960 --> 00:12:01.665
So there's a lot of people
getting involved in the world

00:12:01.665 --> 00:12:03.890
of design for the first time,
largely because of all the

00:12:03.890 --> 00:12:06.310
talks we give at I/O and how
much importance we say that

00:12:06.310 --> 00:12:08.270
there is around it.

00:12:08.270 --> 00:12:10.800
So what are some of the tools
that you guys use within the

00:12:10.800 --> 00:12:15.180
Android team to design the
platform user experience?

00:12:15.180 --> 00:12:17.390
And to follow on from that as
well, where are some of the

00:12:17.390 --> 00:12:19.310
places you get your
inspiration from?

00:12:19.310 --> 00:12:20.930
I think a lot of the people
here get their inspiration

00:12:20.930 --> 00:12:22.280
from what we do.

00:12:22.280 --> 00:12:23.630
So where do you guys get
that inspiration

00:12:23.630 --> 00:12:26.330
from to begin with?

00:12:26.330 --> 00:12:29.640
RACHEL GARB: I think one of our
most important tools is

00:12:29.640 --> 00:12:31.620
our studio where we sit
together in an open

00:12:31.620 --> 00:12:32.370
environment.

00:12:32.370 --> 00:12:34.600
So we're always talking
with each other.

00:12:34.600 --> 00:12:36.310
And we have such an
eclectic group.

00:12:36.310 --> 00:12:38.190
I think that everybody
gets inspiration

00:12:38.190 --> 00:12:40.460
from different things.

00:12:40.460 --> 00:12:45.090
I've seen people share
architecture, designs of cars,

00:12:45.090 --> 00:12:49.220
sci-fi movies, Matias's
shirts, you know.

00:12:49.220 --> 00:12:51.730
It could come from anywhere.

00:12:51.730 --> 00:12:55.150
So I think just being together
and sharing a lot and bouncing

00:12:55.150 --> 00:12:58.500
ideas off each other not only
provides inspiration, but is

00:12:58.500 --> 00:13:02.510
also a big tool for us in terms
of how we work together.

00:13:02.510 --> 00:13:05.135
Because the more input that we
get on our designs, the better

00:13:05.135 --> 00:13:07.620
it gets each time we refine.

00:13:07.620 --> 00:13:10.480
Anything to add?

00:13:10.480 --> 00:13:11.170
RETO MEIER: Thank you.

00:13:11.170 --> 00:13:11.850
Let's see.

00:13:11.850 --> 00:13:13.460
I think we're up to the back.

00:13:13.460 --> 00:13:14.180
Yes?

00:13:14.180 --> 00:13:17.940
AUDIENCE: So Android
SDK recommends the

00:13:17.940 --> 00:13:20.410
use of the JDK 1.6.

00:13:20.410 --> 00:13:26.250
That has been, at this point,
officially end-of-lifed.

00:13:26.250 --> 00:13:28.170
And large corporations--

00:13:28.170 --> 00:13:32.170
help desks-- like to push
out updates to say,

00:13:32.170 --> 00:13:34.720
oh, get rid of this.

00:13:34.720 --> 00:13:37.750
Is the Android SDK going
to be moving to 1.7?

00:13:37.750 --> 00:13:42.550
Or what's the roadmap there?

00:13:42.550 --> 00:13:44.810
DAVE BURKE: So we're
investigating, looking at a

00:13:44.810 --> 00:13:46.860
couple of options.

00:13:46.860 --> 00:13:48.230
Haven't made any
decisions yet.

00:13:48.230 --> 00:13:49.600
So I don't have anything
to announce.

00:13:49.600 --> 00:13:52.730
But we're aware of that.

00:13:52.730 --> 00:13:54.920
XAVIER DUCROHET: Wait, was the
question about running the

00:13:54.920 --> 00:13:59.670
tools on a host JDK 1.7?

00:13:59.670 --> 00:14:05.800
AUDIENCE: Running the compiler,
running the SDK.

00:14:05.800 --> 00:14:08.370
XAVIER DUCROHET: So to run the
host tools now, you can run

00:14:08.370 --> 00:14:11.020
them on 1.7.

00:14:11.020 --> 00:14:13.570
That was an issue before, where
signing didn't actually

00:14:13.570 --> 00:14:15.320
work if you have a
JDK 7 installed.

00:14:15.320 --> 00:14:18.850
But we fixed that in
21.2, I think.

00:14:18.850 --> 00:14:22.990
So you can do proper signing now
directly if you use 7 on

00:14:22.990 --> 00:14:24.270
your host computer.

00:14:24.270 --> 00:14:24.520
AUDIENCE: OK.

00:14:24.520 --> 00:14:26.070
Thank you.

00:14:26.070 --> 00:14:28.100
RETO MEIER: And from
the front.

00:14:28.100 --> 00:14:28.690
DREW: Hi.

00:14:28.690 --> 00:14:29.430
My name is Drew.

00:14:29.430 --> 00:14:33.860
And I'm asking this question
both as an Android user and as

00:14:33.860 --> 00:14:34.970
a developer.

00:14:34.970 --> 00:14:39.240
I wonder what thoughts and
considerations have gone in

00:14:39.240 --> 00:14:41.780
the platform for having
optional application

00:14:41.780 --> 00:14:42.310
permissions.

00:14:42.310 --> 00:14:45.500
So, say my application must
have this group of five

00:14:45.500 --> 00:14:50.870
permissions, but for these
features, if you want to use

00:14:50.870 --> 00:14:54.810
this feature, you'll have to
grant us access to these

00:14:54.810 --> 00:14:55.510
applications.

00:14:55.510 --> 00:14:57.790
And a perfect example is, I've
been using an app called

00:14:57.790 --> 00:15:00.440
Pocket, which I really enjoy.

00:15:00.440 --> 00:15:03.000
They added a recent update
which wanted

00:15:03.000 --> 00:15:04.020
access to my contacts.

00:15:04.020 --> 00:15:06.840
And it set off my inner tinfoil
hat a little bit.

00:15:06.840 --> 00:15:08.390
ADAM POWELL: I haven't installed
that update either.

00:15:13.890 --> 00:15:15.100
DIANNE HACKBORN: There have
certainly been a lot of

00:15:15.100 --> 00:15:16.840
thoughts put into this.

00:15:16.840 --> 00:15:21.930
There's nothing that we can
commit to doing right now.

00:15:21.930 --> 00:15:23.340
But we're definitely thinking
about this.

00:15:25.940 --> 00:15:27.180
RETO MEIER: Thank you.

00:15:27.180 --> 00:15:28.430
So another question.

00:15:28.430 --> 00:15:30.430
Going out a little bit
deeper this time.

00:15:30.430 --> 00:15:32.550
So Android runs on a huge
variety of hardware.

00:15:32.550 --> 00:15:36.190
And we do new platforms and new
devices quite regularly.

00:15:36.190 --> 00:15:39.840
Can anyone comment on what was
the most challenging chipset

00:15:39.840 --> 00:15:41.090
or device to bring up?

00:15:43.920 --> 00:15:44.530
REBECCA ZAVIN: All of them?

00:15:44.530 --> 00:15:44.670
No.

00:15:44.670 --> 00:15:49.750
I think the most challenging
was probably the first one.

00:15:49.750 --> 00:15:52.920
Because we were starting
from scratch.

00:15:52.920 --> 00:15:57.440
If you look today, as Dave was
pointing out, our Silicon

00:15:57.440 --> 00:15:58.730
vendors consume the Android
framework and

00:15:58.730 --> 00:15:59.940
come up with a BSP.

00:15:59.940 --> 00:16:04.110
They all have BSPs now that they
provide that run Android.

00:16:04.110 --> 00:16:06.820
But when we started on the
G1, there was nothing.

00:16:06.820 --> 00:16:08.370
And there was not really
Linux support

00:16:08.370 --> 00:16:09.397
on Qualcomm's hardware.

00:16:09.397 --> 00:16:10.710
So that was definitely
the most challenging.

00:16:10.710 --> 00:16:14.660
I think in an ongoing way, it's
more challenging when

00:16:14.660 --> 00:16:18.170
we're the first to a
new architecture.

00:16:18.170 --> 00:16:21.130
So if you look at something like
the Nexus 10, that was

00:16:21.130 --> 00:16:25.000
one of the first devices to ship
on the newest ARM design.

00:16:25.000 --> 00:16:28.620
And obviously, there are the
usual challenges of being an

00:16:28.620 --> 00:16:30.330
early adopter.

00:16:30.330 --> 00:16:32.610
So I think that's probably the
most challenging, is when

00:16:32.610 --> 00:16:35.990
we're the first to a new CPU
architecture, a new GPU

00:16:35.990 --> 00:16:37.130
architecture.

00:16:37.130 --> 00:16:41.430
And you always experience some
of the pain of little bugs and

00:16:41.430 --> 00:16:42.790
just new features that you
have to figure out

00:16:42.790 --> 00:16:45.140
how to make use of.

00:16:45.140 --> 00:16:49.210
DAVE BURKE: We work pretty
closely with all of the

00:16:49.210 --> 00:16:50.820
Silicon partners.

00:16:50.820 --> 00:16:53.260
Just give you an example of
how that works, so with

00:16:53.260 --> 00:16:55.620
Hardware Composer, which is
used for accelerating

00:16:55.620 --> 00:16:58.240
composition, we'll come up when
a new design for that.

00:16:58.240 --> 00:17:01.140
And then we'll work with the
likes of Qualcomm, Nvidia, et

00:17:01.140 --> 00:17:04.560
cetera, ARM, and say, hey, look,
here's the new interface

00:17:04.560 --> 00:17:05.450
that we want to implement.

00:17:05.450 --> 00:17:06.150
What do you think of it?

00:17:06.150 --> 00:17:08.260
And then they'll give us
feedback and say, oh that's

00:17:08.260 --> 00:17:09.660
really hard for us to
do on one chipset.

00:17:09.660 --> 00:17:11.569
Or another chipset might say,
well, it'll work on us, but

00:17:11.569 --> 00:17:12.230
it's not performing.

00:17:12.230 --> 00:17:14.040
What if you tweak it this way?

00:17:14.040 --> 00:17:15.900
And so we do a lot of iteration
in that respect, so

00:17:15.900 --> 00:17:21.500
that we try to build a system
so that it works really well

00:17:21.500 --> 00:17:24.349
on a broad range of hardware.

00:17:24.349 --> 00:17:25.130
We don't always get it right.

00:17:25.130 --> 00:17:26.510
And we have to iterate.

00:17:26.510 --> 00:17:29.760
And you'll see that in our
hardware layers, that we're

00:17:29.760 --> 00:17:32.250
often iterating and
improving them.

00:17:32.250 --> 00:17:35.562
But our goal is to make Android
work well across a

00:17:35.562 --> 00:17:39.050
variety of different hardware
and make it easy for OEMs to

00:17:39.050 --> 00:17:41.330
bring up devices quickly.

00:17:41.330 --> 00:17:42.950
RETO MEIER: So following on from
that, you said the first

00:17:42.950 --> 00:17:43.720
one was the hardest.

00:17:43.720 --> 00:17:45.280
And obviously, there's been
a lot of changes.

00:17:45.280 --> 00:17:49.090
The pace of mobile device
improvement has been quite

00:17:49.090 --> 00:17:49.500
staggering.

00:17:49.500 --> 00:17:50.960
Do you think we've
plateaued now?

00:17:50.960 --> 00:17:52.320
Is all the hard work
behind us?

00:17:52.320 --> 00:17:54.050
No new chips, no new sensors.

00:17:54.050 --> 00:17:56.580
Are we kind of done, or not?

00:18:01.960 --> 00:18:04.560
DAVE BURKE: No.

00:18:04.560 --> 00:18:04.935
I don't know.

00:18:04.935 --> 00:18:06.060
I feel like Android's a baby.

00:18:06.060 --> 00:18:08.230
I feel like there's so
much more we can do.

00:18:08.230 --> 00:18:09.950
I think there's new--

00:18:09.950 --> 00:18:11.980
if you actually just look at
the power, it's only really

00:18:11.980 --> 00:18:14.820
this year that GPUs have gotten
powerful enough that

00:18:14.820 --> 00:18:16.910
they can actually think about
doing something other than

00:18:16.910 --> 00:18:17.790
draw the screen.

00:18:17.790 --> 00:18:20.340
Like, so actually do computation
on the GPU.

00:18:20.340 --> 00:18:22.010
And so that's kind of opening
up whole other doors.

00:18:22.010 --> 00:18:24.066
We have a language called
RenderScript that allows you

00:18:24.066 --> 00:18:27.130
to target C Kernels
to the GPU.

00:18:27.130 --> 00:18:29.170
We're seeing lots of new
peripherals appear.

00:18:29.170 --> 00:18:31.540
I think the Samsung Galaxy
S4 has an IR

00:18:31.540 --> 00:18:33.610
transmitter, for example.

00:18:33.610 --> 00:18:36.210
I think camera is an area
that can really

00:18:36.210 --> 00:18:38.110
do with more evolution.

00:18:38.110 --> 00:18:41.120
If you think about a camera on
a phone, it's basically tries

00:18:41.120 --> 00:18:45.820
to emulate a digital camera,
which tries to emulate an old

00:18:45.820 --> 00:18:47.800
analog Kodak-type camera.

00:18:47.800 --> 00:18:50.500
But there's so much more you
can do, not just at the

00:18:50.500 --> 00:18:52.710
software level, but at the
hardware level as well.

00:18:52.710 --> 00:18:55.790
So I think there's going to be
lot of innovation across the

00:18:55.790 --> 00:18:57.800
board for many years to come.

00:18:57.800 --> 00:18:58.270
RETO MEIER: Nice.

00:18:58.270 --> 00:18:58.740
Thanks.

00:18:58.740 --> 00:19:01.300
I think we're up to the back.

00:19:01.300 --> 00:19:02.440
AUDIENCE: Hi.

00:19:02.440 --> 00:19:04.320
We've been trying to
get Android into

00:19:04.320 --> 00:19:05.950
health care and hospitals.

00:19:05.950 --> 00:19:09.260
And we found that there's a big
existing investment in iOS

00:19:09.260 --> 00:19:12.940
apps that are custom
apps, native apps.

00:19:12.940 --> 00:19:16.680
Wondered if you had any advice
on more cost-effective ways to

00:19:16.680 --> 00:19:17.980
help them port that.

00:19:17.980 --> 00:19:21.500
And specifically wondered
whether you guys had ever

00:19:21.500 --> 00:19:25.830
thought about trying to help
start a open-source clean-room

00:19:25.830 --> 00:19:28.060
iOS emulator for Android.

00:19:28.060 --> 00:19:31.020
Let's say that the apps
are relatively simple.

00:19:31.020 --> 00:19:33.660
Let's say that the tablets
are enterprise-owned.

00:19:33.660 --> 00:19:36.290
It would be kind of like
Wine for Linux.

00:19:36.290 --> 00:19:37.940
But iOS apps on Android.

00:19:37.940 --> 00:19:39.550
RETO MEIER: Do we have anyone
from legal here who

00:19:39.550 --> 00:19:40.080
can answer this one?

00:19:40.080 --> 00:19:42.920
DAVE BURKE: Well, I was thinking
we should go up to

00:19:42.920 --> 00:19:45.100
Cupertino and ask them
to start emulating

00:19:45.100 --> 00:19:45.870
Android apps, actually.

00:19:45.870 --> 00:19:47.120
Much better.

00:19:53.060 --> 00:19:56.480
RETO MEIER: Anyone want to touch
that with a barge pole?

00:19:56.480 --> 00:19:58.980
FICUS KIRKPATRICK: It seems
like a lot of work for a

00:19:58.980 --> 00:20:02.650
pretty sub-optimal
user experience.

00:20:02.650 --> 00:20:03.900
I don't think that would
be very interesting.

00:20:07.690 --> 00:20:09.290
RETO MEIER: Yeah, I think that's
generally our approach.

00:20:09.290 --> 00:20:11.930
To encourage everyone to try
and build the best possible

00:20:11.930 --> 00:20:14.350
Android apps rather than trying
to figure out how to

00:20:14.350 --> 00:20:17.050
get apps from other platforms
to run on it.

00:20:17.050 --> 00:20:19.280
AUDIENCE: It's just in the real
world, if you have 1,000

00:20:19.280 --> 00:20:21.610
apps that you've already written
that are native,

00:20:21.610 --> 00:20:25.750
moving those would cost hundreds
of developer-years.

00:20:25.750 --> 00:20:28.830
So any transition strategy--
if anybody has a different

00:20:28.830 --> 00:20:29.940
idea, that would
be great, too.

00:20:29.940 --> 00:20:32.790
But it's a real problem we're
trying to struggle with in

00:20:32.790 --> 00:20:36.210
figuring out how to make Android
app devices work in

00:20:36.210 --> 00:20:36.860
that field.

00:20:36.860 --> 00:20:38.820
MATIAS DUARTE: This sounds like
an opportunity for all

00:20:38.820 --> 00:20:42.390
the developers here to write
some health-care-focused apps.

00:20:42.390 --> 00:20:43.610
RETO MEIER: There's
1,000 developer

00:20:43.610 --> 00:20:44.640
hours' worth of work.

00:20:44.640 --> 00:20:46.940
So there's definitely
an opportunity.

00:20:46.940 --> 00:20:50.430
ROMAIN GUY: So I probably
shouldn't mention that, but

00:20:50.430 --> 00:20:55.125
one of my co-workers recently
told me that games that are

00:20:55.125 --> 00:20:56.890
ported from iOS to Android,
they use--

00:20:56.890 --> 00:20:58.140
I don't remember the name
of the framework.

00:20:58.140 --> 00:21:03.760
But someone rewrote the iOS UI
tookit with OpenGL on Android.

00:21:03.760 --> 00:21:05.890
So that might be
a way to do it.

00:21:05.890 --> 00:21:07.600
It's probably bad for
the user experience.

00:21:07.600 --> 00:21:11.000
But you could try.

00:21:11.000 --> 00:21:11.760
RETO MEIER: Thanks.

00:21:11.760 --> 00:21:12.060
OK.

00:21:12.060 --> 00:21:14.570
So we've also got a couple of
questions from folks watching

00:21:14.570 --> 00:21:18.550
on the live stream from Google
I/O Extended events.

00:21:18.550 --> 00:21:19.900
This one's for Ficus.

00:21:19.900 --> 00:21:23.930
In Volley, if you implement a
download huge image, then

00:21:23.930 --> 00:21:27.780
resize to fit your needs, will
the original image be cached

00:21:27.780 --> 00:21:29.260
in disk cache, or
the resized one?

00:21:34.390 --> 00:21:34.850
FICUS KIRKPATRICK:
Hang on a second.

00:21:34.850 --> 00:21:36.950
RETO MEIER: I can repeat
the question.

00:21:36.950 --> 00:21:38.350
FICUS KIRKPATRICK: They're
asking about the disk cache?

00:21:38.350 --> 00:21:38.620
RETO MEIER: Yeah.

00:21:38.620 --> 00:21:39.230
FICUS KIRKPATRICK: OK.

00:21:39.230 --> 00:21:44.160
The original one goes to the
disk cache, and the smaller

00:21:44.160 --> 00:21:45.870
one goes in the memory cache.

00:21:45.870 --> 00:21:46.660
RETO MEIER: Nice.

00:21:46.660 --> 00:21:47.420
Simple.

00:21:47.420 --> 00:21:49.470
Up at the front, please.

00:21:49.470 --> 00:21:50.970
TOBIAS: My name is Tobias
from Sweden.

00:21:50.970 --> 00:21:53.920
I have a framework-specific
question.

00:21:53.920 --> 00:21:55.560
Basically I'm wondering, if
you use a [? contentive ?]

00:21:55.560 --> 00:21:57.640
server for to serve--

00:21:57.640 --> 00:22:03.540
observe SQLite stuff, you get
millions of on content change.

00:22:03.540 --> 00:22:06.110
And I've always been curious
why you get so many.

00:22:11.670 --> 00:22:14.900
JEFF HAMILTON: I think you get
one when the content changes.

00:22:14.900 --> 00:22:17.680
If you're getting a million
notifications that the

00:22:17.680 --> 00:22:17.860
content's changed--

00:22:17.860 --> 00:22:20.260
TOBIAS: Always not a million,
but always, when I try to

00:22:20.260 --> 00:22:24.350
observe data, and let's say one
item is inserted, I always

00:22:24.350 --> 00:22:27.500
get at least 10, 15, 20.

00:22:27.500 --> 00:22:30.800
And I have to put in a throttle
or something to--

00:22:30.800 --> 00:22:33.170
JEFF HAMILTON: So the content
provider that you're observing

00:22:33.170 --> 00:22:35.610
is responsible for sending
the notifications.

00:22:35.610 --> 00:22:38.000
And if you're getting a
significant amount of them,

00:22:38.000 --> 00:22:40.003
either the content provider is
sending more than it should,

00:22:40.003 --> 00:22:41.620
and it should be aggregated.

00:22:41.620 --> 00:22:44.260
Or, more likely, you probably
should be using transactions.

00:22:44.260 --> 00:22:47.280
If you have a database, you
should be using a transaction.

00:22:47.280 --> 00:22:50.800
And if you're putting in a
significant amount of data at

00:22:50.800 --> 00:22:53.340
once, use a transaction.

00:22:53.340 --> 00:22:56.950
And then at the end of the
transaction, when the full

00:22:56.950 --> 00:22:59.360
transaction is committed, then
the content provider should

00:22:59.360 --> 00:23:02.710
send a change notification at
that point, as opposed to one

00:23:02.710 --> 00:23:03.900
for each thing that's
happening within the

00:23:03.900 --> 00:23:05.430
transaction.

00:23:05.430 --> 00:23:09.140
TOBIAS: So you can change
your content provider?

00:23:09.140 --> 00:23:09.640
JEFF HAMILTON: Yeah.

00:23:09.640 --> 00:23:12.350
Each content provider is
responsible for sending those

00:23:12.350 --> 00:23:12.820
notifications.

00:23:12.820 --> 00:23:16.140
So it really depends on which
content provider you're using

00:23:16.140 --> 00:23:20.270
and how the data is being
manipulated by whatever's

00:23:20.270 --> 00:23:23.140
modifying the data itself.

00:23:23.140 --> 00:23:23.363
TOBIAS: All right.

00:23:23.363 --> 00:23:24.470
Thank you.

00:23:24.470 --> 00:23:26.480
RETO MEIER: From the back.

00:23:26.480 --> 00:23:28.640
THOMAS: I'm Thomas from
Mountain View.

00:23:28.640 --> 00:23:30.980
I have a question regarding
Google Play services.

00:23:30.980 --> 00:23:35.150
You've announced at I/O in the
past few months new APIs like

00:23:35.150 --> 00:23:39.190
Google+ Sign-In, and new
GCM features as well.

00:23:39.190 --> 00:23:43.210
Do you plan to push
more APIs through

00:23:43.210 --> 00:23:45.820
the Google Play services?

00:23:45.820 --> 00:23:48.270
I guess it's good for
developers, because you get

00:23:48.270 --> 00:23:51.310
the new API ready
really quick.

00:23:51.310 --> 00:23:55.360
But you also see it as a way for
OEMs not to use their own

00:23:55.360 --> 00:23:59.480
store because they want
the developers to get

00:23:59.480 --> 00:24:02.340
your service as well?

00:24:02.340 --> 00:24:04.590
JEFF HAMILTON: To the first
part, I think if you've been

00:24:04.590 --> 00:24:06.360
watching what we've been doing
with Google Play services, we

00:24:06.360 --> 00:24:09.950
have been steadily increasing
the number of APIs that we

00:24:09.950 --> 00:24:11.320
have included.

00:24:11.320 --> 00:24:14.370
And we had a significant number
of new releases with

00:24:14.370 --> 00:24:17.320
the latest release
that went out.

00:24:17.320 --> 00:24:18.400
Before that, we added
in the apps.

00:24:18.400 --> 00:24:20.960
And we've been adding pretty
quickly the new API sets.

00:24:20.960 --> 00:24:24.130
And we certainly have
more work to do.

00:24:24.130 --> 00:24:24.260
I don't know.

00:24:24.260 --> 00:24:25.670
Ficus, do you want to talk
about the store part?

00:24:25.670 --> 00:24:27.500
FICUS KIRKPATRICK: I'll
take the second part.

00:24:27.500 --> 00:24:29.750
I don't think there's anything
about Google Play services

00:24:29.750 --> 00:24:31.900
that keeps people from doing
their own stores.

00:24:31.900 --> 00:24:35.130
Amazon app store still
works totally fine.

00:24:35.130 --> 00:24:36.910
THOMAS: Thank you.

00:24:36.910 --> 00:24:38.850
RETO MEIER: So, we've had a lot
of pretty easy questions.

00:24:38.850 --> 00:24:40.050
I'm going to ask you a couple
of tougher ones.

00:24:40.050 --> 00:24:44.010
So I think everyone's looking
forward to the possibility of

00:24:44.010 --> 00:24:45.720
tasting some pie.

00:24:45.720 --> 00:24:48.300
Now, I know well enough not
to ask you about anything

00:24:48.300 --> 00:24:49.140
specific there.

00:24:49.140 --> 00:24:51.430
But on behalf of our Australian
audience, which I

00:24:51.430 --> 00:24:54.790
feel like I represent, I wanted
to know if any of you

00:24:54.790 --> 00:24:56.090
have ever tried a Lamington.

00:24:56.090 --> 00:24:57.345
And if so, what you
thought about it.

00:25:00.860 --> 00:25:01.970
Lamingtons, anyone?

00:25:01.970 --> 00:25:02.530
No?

00:25:02.530 --> 00:25:03.530
No one's even been
to Australia.

00:25:03.530 --> 00:25:04.810
You don't even know
what I mean.

00:25:04.810 --> 00:25:07.160
DAVE BURKE: The teleprompter
translated that as

00:25:07.160 --> 00:25:10.490
"lankington." So a kind
of tall dessert.

00:25:10.490 --> 00:25:11.080
What is a Lamington?

00:25:11.080 --> 00:25:12.450
RETO MEIER: People don't know
what a Lamington is either.

00:25:12.450 --> 00:25:13.280
FICUS KIRKPATRICK: What is it?

00:25:13.280 --> 00:25:13.940
MATIAS DUARTE: Is
it a meat pie?

00:25:13.940 --> 00:25:14.560
Is it made out of sheep?

00:25:14.560 --> 00:25:16.747
RETO MEIER: I'll bring some
to work some time.

00:25:16.747 --> 00:25:18.124
AUDIENCE: It's sponge
covered in

00:25:18.124 --> 00:25:20.420
chocolate with some coconut.

00:25:20.420 --> 00:25:22.300
FICUS KIRKPATRICK: I've
had a Tim Tam Slam.

00:25:22.300 --> 00:25:23.040
DAVE BURKE: A Tim Tam Slam.

00:25:23.040 --> 00:25:23.910
What's a Tim Tam Slam?

00:25:23.910 --> 00:25:26.206
Is that a cocktail
with Tim Tam?

00:25:26.206 --> 00:25:27.530
FICUS KIRKPATRICK: [INAUDIBLE]
with tea.

00:25:27.530 --> 00:25:27.610
DAVE BURKE: With tea?

00:25:27.610 --> 00:25:28.486
Oh, that's boring.

00:25:28.486 --> 00:25:29.642
FICUS KIRKPATRICK:
No, it's good.

00:25:29.642 --> 00:25:31.090
DAVE BURKE: Oh.

00:25:31.090 --> 00:25:31.460
RETO MEIER: All right.

00:25:31.460 --> 00:25:32.730
I think we should go
back to the crowd.

00:25:35.370 --> 00:25:36.030
From the front, please.

00:25:36.030 --> 00:25:36.560
AUDIENCE: Hi.

00:25:36.560 --> 00:25:37.830
Savas from London.

00:25:37.830 --> 00:25:41.160
This is a question related to
the question that was asked of

00:25:41.160 --> 00:25:42.710
Larry Page in the keynote.

00:25:42.710 --> 00:25:44.480
And sort of related
to a question

00:25:44.480 --> 00:25:46.670
that was asked before.

00:25:46.670 --> 00:25:49.420
It's related to Oracle
and Java.

00:25:49.420 --> 00:25:53.370
Are we ever going to see Java
7 or Java 8 compliance on

00:25:53.370 --> 00:25:55.730
Android, and taking advantage
of the new features that are

00:25:55.730 --> 00:25:56.230
implemented?

00:25:56.230 --> 00:25:58.520
Not just the language-level
features, but fork

00:25:58.520 --> 00:25:59.770
join, stuff like that.

00:26:02.520 --> 00:26:04.100
DAN MORRILL: I don't
think we can--

00:26:04.100 --> 00:26:05.840
I know I can't comment
on that, anyway.

00:26:05.840 --> 00:26:06.580
DAVE BURKE: I want to
know what Larry

00:26:06.580 --> 00:26:08.230
said to that question.

00:26:08.230 --> 00:26:10.390
AUDIENCE: It wasn't specifically
a question about

00:26:10.390 --> 00:26:13.020
the features of Java 7
or 8 and if we are

00:26:13.020 --> 00:26:13.570
going to get them.

00:26:13.570 --> 00:26:17.580
It was more of a question of the
relationship with Oracle.

00:26:17.580 --> 00:26:18.025
DAVE BURKE: Yeah.

00:26:18.025 --> 00:26:18.950
I'll second what Dan said.

00:26:18.950 --> 00:26:20.300
RETO MEIER: I think it's fair
to say that no one on this

00:26:20.300 --> 00:26:21.400
panel should have an opinion.

00:26:21.400 --> 00:26:23.673
And if they do, they certainly
shouldn't say it.

00:26:23.673 --> 00:26:26.844
[LAUGHTER]

00:26:26.844 --> 00:26:29.960
RETO MEIER: So I'm going to
throw in another question.

00:26:29.960 --> 00:26:33.090
So, having watched the Bluetooth
best practices talk,

00:26:33.090 --> 00:26:34.570
it seems like we've changed
the Bluetooth

00:26:34.570 --> 00:26:36.150
stack quite a few times.

00:26:36.150 --> 00:26:39.200
I was wondering if any of you
could explain why that is.

00:26:39.200 --> 00:26:42.000
Why have we got the multiple
Bluetooth implementations?

00:26:42.000 --> 00:26:45.270
DAVE BURKE: We changed
it once.

00:26:45.270 --> 00:26:46.070
Not a few times.

00:26:46.070 --> 00:26:47.890
RETO MEIER: It may have been
a couple of times.

00:26:47.890 --> 00:26:48.560
DAVE BURKE: Since I got here.

00:26:48.560 --> 00:26:50.850
But I think, in total,
in lifetime.

00:26:50.850 --> 00:26:55.200
So we recently changed from
Blue Z to Blue Droid.

00:26:55.200 --> 00:26:59.420
And one of the reasons we did
that was mostly because Jay

00:26:59.420 --> 00:27:00.850
Kumar just wanted to do it.

00:27:00.850 --> 00:27:03.280
He was bored one day, and he's
like, hey, look at this.

00:27:03.280 --> 00:27:06.400
But the reason he told me he
wanted to do it was that he

00:27:06.400 --> 00:27:10.660
felt that the new stack was a
little bit more efficient for

00:27:10.660 --> 00:27:11.360
embedded devices.

00:27:11.360 --> 00:27:14.690
So the previous stack depended
on DBUS and GLIB, which were

00:27:14.690 --> 00:27:18.110
never really designed
for embedded.

00:27:18.110 --> 00:27:19.370
So that's one reason.

00:27:19.370 --> 00:27:22.410
Also, we were seeing a lot of
people in the industry,

00:27:22.410 --> 00:27:25.880
particularly Silicon folks,
using this stack.

00:27:25.880 --> 00:27:28.100
And so we were to that point I
said earlier about trying to

00:27:28.100 --> 00:27:28.840
streamline.

00:27:28.840 --> 00:27:30.240
It was sort of a path
of least resistance

00:27:30.240 --> 00:27:31.400
to adopt that stack.

00:27:31.400 --> 00:27:32.500
And it's enabled to
do new things.

00:27:32.500 --> 00:27:35.720
So we announced yesterday that
we're going to be supporting

00:27:35.720 --> 00:27:37.055
Bluetooth LE in the
upcoming release.

00:27:39.820 --> 00:27:40.130
RETO MEIER: Thanks.

00:27:40.130 --> 00:27:41.450
From the back.

00:27:41.450 --> 00:27:43.326
TAM: I'm Tam from Japan.

00:27:43.326 --> 00:27:45.690
I have a hope about Brutus.

00:27:45.690 --> 00:27:51.400
I'm imprinting a Dial-Up Network
profile by software.

00:27:51.400 --> 00:27:58.040
But Japanese Android often have
DUN profile already, and

00:27:58.040 --> 00:28:01.880
those ones cannot receive
the connection of DUN.

00:28:01.880 --> 00:28:06.560
So I want to handle service
discovery profile.

00:28:06.560 --> 00:28:08.640
So would you implement that?

00:28:11.250 --> 00:28:12.490
SPEAKER: That's a
good question.

00:28:12.490 --> 00:28:14.560
It's so good I can't
answer it.

00:28:14.560 --> 00:28:16.770
Actually, if you come to office
hours tomorrow, we'll

00:28:16.770 --> 00:28:19.630
try to find somebody who can
answer that for you.

00:28:19.630 --> 00:28:19.940
TAM: OK.

00:28:19.940 --> 00:28:21.302
Thank you.

00:28:21.302 --> 00:28:21.770
RETO MEIER: Thank you.

00:28:21.770 --> 00:28:22.770
From the front.

00:28:22.770 --> 00:28:23.100
AUDIENCE: Hi.

00:28:23.100 --> 00:28:25.370
This is [INAUDIBLE]
from Portugal.

00:28:25.370 --> 00:28:30.220
With all the emerging pattern
that we've seen--

00:28:30.220 --> 00:28:37.170
Facebook, and Currents, and with
Left Drawer, and now with

00:28:37.170 --> 00:28:38.930
the Navigation Drawer--

00:28:38.930 --> 00:28:44.060
it seems like the Up pattern
is getting faded out.

00:28:44.060 --> 00:28:46.850
Because a lot of the apps don't
implement it well, when

00:28:46.850 --> 00:28:50.550
a lot of the users don't know
actually that's there is an Up

00:28:50.550 --> 00:28:51.640
and not the Back.

00:28:51.640 --> 00:28:56.760
So how do you see the Up
pattern with the new

00:28:56.760 --> 00:28:59.450
navigation drawer?

00:28:59.450 --> 00:28:59.660
MATIAS DUARTE: OK.

00:28:59.660 --> 00:29:00.650
I'll start with that.

00:29:00.650 --> 00:29:03.880
And Adam can chime
in if he likes.

00:29:03.880 --> 00:29:08.570
So we actually think that
there is definitely a

00:29:08.570 --> 00:29:11.640
continued use for
Up navigation.

00:29:11.640 --> 00:29:15.910
Not every application, for
starters, is well-suited by

00:29:15.910 --> 00:29:17.660
having a side drawer
for navigation.

00:29:17.660 --> 00:29:20.020
It's simply not applicable for
anything that doesn't have

00:29:20.020 --> 00:29:22.120
that kind of deep hierarchy.

00:29:22.120 --> 00:29:26.920
Second of all, it's actually
not a good way to replace a

00:29:26.920 --> 00:29:30.470
single step going up
in a hierarchy.

00:29:30.470 --> 00:29:32.600
And as you know, that
is not always the

00:29:32.600 --> 00:29:34.080
same use case as Back.

00:29:34.080 --> 00:29:37.850
And simply abandoning that would
actually force you to

00:29:37.850 --> 00:29:39.960
always take a 2-step navigation
through the

00:29:39.960 --> 00:29:42.510
drawer-- which would be bad--

00:29:42.510 --> 00:29:45.680
or would put you in a
potentially temporally

00:29:45.680 --> 00:29:49.730
ambiguous action when you've
deep-linked from other places

00:29:49.730 --> 00:29:51.370
as to what Back would do.

00:29:51.370 --> 00:29:54.440
So we're in no way deprecating
the Up pattern.

00:29:54.440 --> 00:29:57.340
And if you look at the Android
Design Guide, you'll see some

00:29:57.340 --> 00:29:59.850
very specific guidelines on when
you should be using that

00:29:59.850 --> 00:30:01.620
and when you should be using
the side drawer.

00:30:01.620 --> 00:30:07.110
And I think if you've got any
questions about the details of

00:30:07.110 --> 00:30:09.480
that, you should stop by office
hours, and we can try

00:30:09.480 --> 00:30:10.750
to clarify that.

00:30:10.750 --> 00:30:15.730
AUDIENCE: The main question is
because when you click, it

00:30:15.730 --> 00:30:19.590
automatically opens or closes
the navigation.

00:30:19.590 --> 00:30:21.800
And that might confuse
some users that are

00:30:21.800 --> 00:30:26.830
used to the Up button.

00:30:26.830 --> 00:30:28.350
MATIAS DUARTE: No, we've found
quite the opposite.

00:30:28.350 --> 00:30:31.700
We've found that, actually,
having it have a distinct

00:30:31.700 --> 00:30:34.440
affordance that's animated makes
it very clear to users

00:30:34.440 --> 00:30:36.590
that they're not going to go
up, that it provides a

00:30:36.590 --> 00:30:38.950
different affordance.

00:30:38.950 --> 00:30:40.820
ADAM POWELL: And you can also
see these two things working

00:30:40.820 --> 00:30:43.280
together in the new update
to the play music app.

00:30:43.280 --> 00:30:45.410
If you drill down into, for
example, one of the artist or

00:30:45.410 --> 00:30:48.880
album pages, you can see that
even though the Up affordance

00:30:48.880 --> 00:30:51.700
is available, that you can still
pull out the drawer and

00:30:51.700 --> 00:30:56.190
do a quick link to another part
of the app if you choose.

00:30:56.190 --> 00:30:57.580
RETO MEIER: So I have a
follow-up question.

00:30:57.580 --> 00:31:00.160
Why does the Up affordance point
to the left instead of

00:31:00.160 --> 00:31:02.020
pointing up?

00:31:02.020 --> 00:31:05.100
ADAM POWELL: It started
off pointing up, and

00:31:05.100 --> 00:31:07.530
then no one saw it.

00:31:07.530 --> 00:31:07.850
RETO MEIER: Is that right?

00:31:07.850 --> 00:31:08.680
No one saw it?

00:31:08.680 --> 00:31:09.980
ADAM POWELL: The first
release of Honeycomb.

00:31:09.980 --> 00:31:12.670
It started pointing up
to the upper left.

00:31:12.670 --> 00:31:13.600
RETO MEIER: There you go.

00:31:13.600 --> 00:31:14.680
Mystery's answered.

00:31:14.680 --> 00:31:16.610
From the back.

00:31:16.610 --> 00:31:16.910
LEI: Hi.

00:31:16.910 --> 00:31:17.750
My name is Lei.

00:31:17.750 --> 00:31:19.990
I have two quick questions
about Android video

00:31:19.990 --> 00:31:21.130
technologies.

00:31:21.130 --> 00:31:25.460
The first is, are you guys
considering any evolution to

00:31:25.460 --> 00:31:29.430
Video Player like SpotDash, the
new video stream protocol,

00:31:29.430 --> 00:31:32.570
or subtitling or closed
captioning?

00:31:32.570 --> 00:31:38.100
And the second question is, what
will be your focus in the

00:31:38.100 --> 00:31:40.900
short term and the mid term
for the Android video

00:31:40.900 --> 00:31:41.800
technologies?

00:31:41.800 --> 00:31:43.770
Thanks.

00:31:43.770 --> 00:31:43.851
DAVE BURKE: Yeah.

00:31:43.851 --> 00:31:44.180
Good question.

00:31:44.180 --> 00:31:47.590
So first one, are we
supporting Dash?

00:31:47.590 --> 00:31:51.470
We did a lot of work in the
previous release to introduce

00:31:51.470 --> 00:31:53.980
a lot of low-level APIs to
enable people to write their

00:31:53.980 --> 00:31:57.500
own streaming clients that may
be based on HLS or Dash.

00:31:57.500 --> 00:32:03.600
So we introduced MediaCodec,
Media Extractor, Crypto, and

00:32:03.600 --> 00:32:05.040
there's another one which I
didn't want to mention because

00:32:05.040 --> 00:32:06.510
we haven't released it yet.

00:32:06.510 --> 00:32:09.830
So we've done a lot of work in
the low level to enable that.

00:32:09.830 --> 00:32:11.560
We're seeing a lot of
interest in Dash.

00:32:11.560 --> 00:32:13.400
It's probably something we're
going to introduce

00:32:13.400 --> 00:32:15.200
over time, for sure.

00:32:15.200 --> 00:32:17.010
In the meantime, with the
low-level APIs, you can

00:32:17.010 --> 00:32:19.280
actually create your
own Dash player.

00:32:19.280 --> 00:32:21.160
So we actually really
anticipate seeing

00:32:21.160 --> 00:32:22.930
developers do that.

00:32:22.930 --> 00:32:25.110
Closed captioning is something
we're looking at also.

00:32:25.110 --> 00:32:26.980
I think that would be good.

00:32:26.980 --> 00:32:28.880
To your point about the second
part of your question, where

00:32:28.880 --> 00:32:29.100
are we going.

00:32:29.100 --> 00:32:33.340
I mean, personally, I think
we should invest more in

00:32:33.340 --> 00:32:36.880
low-level APIs to allow
developers--

00:32:36.880 --> 00:32:38.730
historically, we have this very
high-level media player.

00:32:38.730 --> 00:32:39.980
You give it a URL.

00:32:39.980 --> 00:32:41.560
It's too high-level for
some use cases.

00:32:41.560 --> 00:32:44.400
So we want to invest
in low-level APIs.

00:32:44.400 --> 00:32:46.250
And then I think we also want
to invest in streaming

00:32:46.250 --> 00:32:50.080
technologies like HLS, which we
already have, and Dash, and

00:32:50.080 --> 00:32:54.010
closed captioning, and
things like that.

00:32:54.010 --> 00:32:54.990
RETO MEIER: Thanks, Dave.

00:32:54.990 --> 00:32:58.270
So last year we talked a lot
about Project Butter, our

00:32:58.270 --> 00:32:59.620
effort to remove jank
from Android.

00:32:59.620 --> 00:33:00.740
Are we done there?

00:33:00.740 --> 00:33:01.860
Is that mission accomplished?

00:33:01.860 --> 00:33:04.830
Or is that still an
ongoing project?

00:33:04.830 --> 00:33:06.200
DAVE BURKE: It's very much
an ongoing project.

00:33:06.200 --> 00:33:07.680
I really want to pass
this microphone.

00:33:07.680 --> 00:33:08.430
Someone else should talk.

00:33:08.430 --> 00:33:08.600
I think Romain should talk.

00:33:08.600 --> 00:33:09.140
ROMAIN GUY: Whom
are you joking?

00:33:09.140 --> 00:33:11.850
I want you to say
we were done.

00:33:11.850 --> 00:33:12.070
DAVE BURKE: Mission acc-

00:33:12.070 --> 00:33:14.080
MALE SPEAKER: NO.

00:33:14.080 --> 00:33:15.280
DAVE BURKE: We have a team.

00:33:15.280 --> 00:33:18.240
Romain and I meet every
week working

00:33:18.240 --> 00:33:20.110
specifically on this issue.

00:33:20.110 --> 00:33:22.110
We made a lot of progress
in Jelly Bean.

00:33:22.110 --> 00:33:24.080
But I still think there's
a lot more we can do.

00:33:24.080 --> 00:33:26.810
We're not at the level that
I think we could be.

00:33:26.810 --> 00:33:30.220
I think part of it is when you
take a Nexus 4 or something

00:33:30.220 --> 00:33:32.320
like that, you're kind
of spoiled by the

00:33:32.320 --> 00:33:33.450
power of the GPU.

00:33:33.450 --> 00:33:35.640
And you have to really think--

00:33:35.640 --> 00:33:36.850
you really need to
test on multiple

00:33:36.850 --> 00:33:39.040
different levels of devices.

00:33:39.040 --> 00:33:42.090
That 16.66 millisecond
window is critical.

00:33:42.090 --> 00:33:44.460
If you miss that, you
jank, as we say.

00:33:44.460 --> 00:33:46.980
Which basically means you'll
see frame-skipping.

00:33:46.980 --> 00:33:49.810
And so it's critical that we
make sure that all our

00:33:49.810 --> 00:33:54.150
applications are efficient and
adhering to that, et cetera.

00:33:54.150 --> 00:33:55.860
But it's something we
constantly work at.

00:33:55.860 --> 00:33:56.660
Romain's--

00:33:56.660 --> 00:33:59.050
ROMAIN GUY: It's not something
we can ever be done with.

00:33:59.050 --> 00:34:01.570
Every time we write new features
and applications on

00:34:01.570 --> 00:34:05.500
the framework, we have to make
sure that the new code doesn't

00:34:05.500 --> 00:34:07.460
impact performance.

00:34:07.460 --> 00:34:11.209
So we've done all that work
in Project Butter, in 4.1.

00:34:11.209 --> 00:34:14.210
And in 4.2, we had a
new round of that.

00:34:14.210 --> 00:34:15.719
And we're constantly doing it.

00:34:15.719 --> 00:34:17.780
We'll never, never, ever stop.

00:34:17.780 --> 00:34:20.310
And I'll keep finding bugs for
the application developers

00:34:20.310 --> 00:34:23.409
until they get it right.

00:34:23.409 --> 00:34:24.975
RETO MEIER: So one of the things
which really excited me

00:34:24.975 --> 00:34:26.139
about Project Butter
was, it was

00:34:26.139 --> 00:34:27.469
across the entire framework.

00:34:27.469 --> 00:34:29.530
Is there any other projects
which you're able to talk

00:34:29.530 --> 00:34:32.460
about which have the same
sort of holistic view of

00:34:32.460 --> 00:34:33.710
everything?

00:34:36.920 --> 00:34:39.889
DAVE BURKE: Yes, but you
can't talk about them.

00:34:39.889 --> 00:34:40.350
ROMAIN GUY: Yes to the first.

00:34:40.350 --> 00:34:40.659
No to the second.

00:34:40.659 --> 00:34:43.840
DAVE BURKE: Ficus said I
have to stop talking.

00:34:43.840 --> 00:34:46.670
DIANNE HACKBORN: In Froyo, we
had this thing on bundling

00:34:46.670 --> 00:34:47.850
that was actually--

00:34:47.850 --> 00:34:50.909
so Android, from the start, was
really designed to have an

00:34:50.909 --> 00:34:53.120
open-source platform
parts that's--

00:34:53.120 --> 00:34:53.870
everyone's open.

00:34:53.870 --> 00:34:54.770
They can modify.

00:34:54.770 --> 00:34:57.300
And has all the infrastructure
for building all

00:34:57.300 --> 00:34:58.220
your services on top.

00:34:58.220 --> 00:35:01.190
And Google Services were
what we targeted.

00:35:01.190 --> 00:35:04.060
And to get at one point all that
out in the time we did,

00:35:04.060 --> 00:35:06.980
we cut a few corners on the
Google step and didn't really

00:35:06.980 --> 00:35:09.960
build against the SDK and
do all the right stuff.

00:35:09.960 --> 00:35:13.760
So in Froyo, we had a big effort
to basically take all

00:35:13.760 --> 00:35:16.640
the Google Apps, make them
really build on top of the

00:35:16.640 --> 00:35:20.090
SDK, and clean up all that
stuff and put all

00:35:20.090 --> 00:35:20.880
the pieces in place.

00:35:20.880 --> 00:35:24.410
And that involved lots of
work from the app team.

00:35:24.410 --> 00:35:26.650
Also, in the framework,
we had to--

00:35:26.650 --> 00:35:27.900
if there were things we needed
in the framework and

00:35:27.900 --> 00:35:29.300
everything, to put those in.

00:35:29.300 --> 00:35:31.750
And that has been what has
allowed us to do Google Play

00:35:31.750 --> 00:35:35.420
services, and basically deliver
a lot of new features

00:35:35.420 --> 00:35:39.710
to existing platforms
through stuff from

00:35:39.710 --> 00:35:42.350
Google and other places.

00:35:42.350 --> 00:35:42.810
Oh, yes.

00:35:42.810 --> 00:35:44.940
And--

00:35:44.940 --> 00:35:46.930
ROMAIN GUY: And there was this
thing called Honeycomb.

00:35:46.930 --> 00:35:48.940
We added support for tablets.

00:35:48.940 --> 00:35:50.120
That was a lot of work.

00:35:50.120 --> 00:35:50.970
40 apps.

00:35:50.970 --> 00:35:51.690
A lot of work for a framework.

00:35:51.690 --> 00:35:54.260
That was a huge thing
for everybody.

00:35:54.260 --> 00:35:56.650
And we all worked together
on that.

00:35:56.650 --> 00:35:57.070
RETO MEIER: Thanks.

00:35:57.070 --> 00:35:57.700
Let's see.

00:35:57.700 --> 00:36:00.630
From the front.

00:36:00.630 --> 00:36:02.420
AUDIENCE: It's great to see
y'all here for another I/O.

00:36:02.420 --> 00:36:06.190
And it's good to see
some new faces.

00:36:06.190 --> 00:36:08.140
Us Android users and
developers, we're

00:36:08.140 --> 00:36:09.140
kind of a vocal lot.

00:36:09.140 --> 00:36:11.730
We complain a lot.

00:36:11.730 --> 00:36:12.480
RETO MEIER: No.

00:36:12.480 --> 00:36:13.700
AUDIENCE: And there are
lots of issues.

00:36:13.700 --> 00:36:14.970
We enter lots of comments.

00:36:14.970 --> 00:36:17.220
Some of them not so kind.

00:36:17.220 --> 00:36:18.470
ROMAIN GUY: We complain
a lot too, internally.

00:36:18.470 --> 00:36:18.720
Don't worry.

00:36:18.720 --> 00:36:22.110
AUDIENCE: I just wanted us to
pause for a second and applaud

00:36:22.110 --> 00:36:24.270
for all the great work that this
team has done over the

00:36:24.270 --> 00:36:24.840
years for us.

00:36:24.840 --> 00:36:37.590
[APPLAUSE]

00:36:37.590 --> 00:36:41.150
RETO MEIER: Do we have any other
questions like that?

00:36:41.150 --> 00:36:41.840
AUDIENCE: I have one
little complaint--

00:36:41.840 --> 00:36:42.510
FICUS KIRKPATRICK:
More of this guy.

00:36:42.510 --> 00:36:46.820
AUDIENCE: --or comment
or something.

00:36:46.820 --> 00:36:52.040
We've been using Android since
Version 1 with Eclipse as a

00:36:52.040 --> 00:36:53.890
development system.

00:36:53.890 --> 00:36:56.630
And some people have even
written entire books

00:36:56.630 --> 00:36:58.840
on how to do that.

00:36:58.840 --> 00:37:04.150
So I'm wondering what the
reasons were, and the thought

00:37:04.150 --> 00:37:09.010
behind going in this new
direction with IntelliJ.

00:37:09.010 --> 00:37:10.140
RETO MEIER: There's a lot of
us who have to do a lot of

00:37:10.140 --> 00:37:11.430
extra writing because
of this, so it'd

00:37:11.430 --> 00:37:14.340
better be a good answer.

00:37:14.340 --> 00:37:15.970
ROMAIN GUY: It's not
a new direction.

00:37:15.970 --> 00:37:17.960
It's just a parallel
direction.

00:37:17.960 --> 00:37:22.400
You can still use Eclipse, and
we'll keep supporting Eclipse.

00:37:22.400 --> 00:37:24.110
A lot of developers told us
that they wanted to use

00:37:24.110 --> 00:37:26.800
IntelliJ because
they prefer it.

00:37:26.800 --> 00:37:30.820
We should support those
developers and help them make

00:37:30.820 --> 00:37:32.030
applications.

00:37:32.030 --> 00:37:34.490
If you aren't Eclipse users,
you should try IntelliJ.

00:37:34.490 --> 00:37:35.830
Maybe you'll like it better.

00:37:35.830 --> 00:37:38.140
If you don't, keep
using Eclipse.

00:37:38.140 --> 00:37:39.570
That's perfectly fine.

00:37:39.570 --> 00:37:39.810
RETO MEIER: Yeah.

00:37:39.810 --> 00:37:39.940
It's funny.

00:37:39.940 --> 00:37:40.750
It's actually--

00:37:40.750 --> 00:37:41.270
no, please.

00:37:41.270 --> 00:37:42.806
Clap.

00:37:42.806 --> 00:37:43.900
I was going to say, It's
actually funny.

00:37:43.900 --> 00:37:45.480
Because it was one of the
questions we used to get early

00:37:45.480 --> 00:37:47.310
on, was why do you only
support Eclipse?

00:37:47.310 --> 00:37:48.330
When are we going
to get support

00:37:48.330 --> 00:37:49.430
for things like IntelliJ?

00:37:49.430 --> 00:37:52.300
So it makes sense that
we've now expanded to

00:37:52.300 --> 00:37:53.610
include more things.

00:37:53.610 --> 00:37:55.804
ADAM POWELL: It's Android,
not Ordroid.

00:37:55.804 --> 00:38:01.000
[APPLAUSE]

00:38:01.000 --> 00:38:03.530
DAN MORRILL: I'LL also say,
years and years ago--

00:38:03.530 --> 00:38:05.830
well, I guess maybe not
years and years ago--

00:38:05.830 --> 00:38:08.230
I remember when IntelliJ
was first open-sourced.

00:38:08.230 --> 00:38:11.840
I happen to be one of those
people who prefers IntelliJ.

00:38:11.840 --> 00:38:15.980
So I found Zav and I said, hey
Zav, now that IntelliJ's

00:38:15.980 --> 00:38:17.360
open-source, when are
you switching to it?

00:38:17.360 --> 00:38:19.240
And he said, once
Eclipse is done.

00:38:22.050 --> 00:38:22.190
RETO MEIER: Right.

00:38:22.190 --> 00:38:23.490
We're almost out of time.

00:38:23.490 --> 00:38:25.266
I think we have time for a
couple more questions.

00:38:25.266 --> 00:38:26.140
In the back.

00:38:26.140 --> 00:38:28.080
AUDIENCE: Are there any plans
to update the Google Play

00:38:28.080 --> 00:38:31.220
developer console to support
multiple users for a single

00:38:31.220 --> 00:38:33.870
developer account with
varying privileges?

00:38:33.870 --> 00:38:36.650
For example, to create a
developer account that only

00:38:36.650 --> 00:38:38.620
has access to see
crash reports?

00:38:38.620 --> 00:38:41.390
Or another public relations
account that could only reply

00:38:41.390 --> 00:38:43.620
to app store reviews?

00:38:43.620 --> 00:38:46.520
Because right now, sharing a
single developer console

00:38:46.520 --> 00:38:49.620
account with a large team
is kind of scary.

00:38:49.620 --> 00:38:50.870
It's super user-access-ish.

00:38:53.794 --> 00:38:57.860
[APPLAUSE]

00:38:57.860 --> 00:39:00.190
FICUS KIRKPATRICK: Thank
you for the applause.

00:39:00.190 --> 00:39:01.940
But--

00:39:01.940 --> 00:39:02.700
RETO MEIER: All you have to
do is pick up the mic.

00:39:02.700 --> 00:39:04.350
FICUS KIRKPATRICK: The developer
console does support

00:39:04.350 --> 00:39:07.070
multiple users and
multiple roles.

00:39:07.070 --> 00:39:09.710
If your question is particularly
around

00:39:09.710 --> 00:39:13.270
restricting access to crash
reports, or something like

00:39:13.270 --> 00:39:17.960
that, then we're not done with
all of the levels of access

00:39:17.960 --> 00:39:18.550
that we have.

00:39:18.550 --> 00:39:21.080
But we do have the foundations
of that today.

00:39:21.080 --> 00:39:21.360
RETO MEIER: Yeah.

00:39:21.360 --> 00:39:23.270
I think that's fundamentally
the answer is,

00:39:23.270 --> 00:39:24.260
we're working on it.

00:39:24.260 --> 00:39:27.260
You've seen the velocity that
the developer console team

00:39:27.260 --> 00:39:29.270
have been working at is
pretty staggering.

00:39:29.270 --> 00:39:31.225
There's a whole bunch of stuff
they released this year for

00:39:31.225 --> 00:39:33.660
I/O. They're not slowing
down anytime soon.

00:39:33.660 --> 00:39:36.870
So expect to see more
in the future.

00:39:36.870 --> 00:39:39.730
So we have about 30
seconds to go.

00:39:39.730 --> 00:39:41.745
Have you got a very
quick question?

00:39:41.745 --> 00:39:42.200
CHANDRA: Yeah.

00:39:42.200 --> 00:39:42.570
OK.

00:39:42.570 --> 00:39:43.080
Hi.

00:39:43.080 --> 00:39:45.030
I am Chandra.

00:39:45.030 --> 00:39:47.560
I have a question on the
presentation framework that

00:39:47.560 --> 00:39:50.760
came up in Jelly Bean, which
is supporting secondary

00:39:50.760 --> 00:39:51.940
display support.

00:39:51.940 --> 00:39:57.440
So today, one application can
hover over two displays.

00:39:57.440 --> 00:39:59.810
But is there any plan to
support two independent

00:39:59.810 --> 00:40:02.200
displays, one on the local
display, and the other one on

00:40:02.200 --> 00:40:04.340
the connector display?

00:40:04.340 --> 00:40:07.390
And if so, how is the navigation
works, because the

00:40:07.390 --> 00:40:09.320
monitors are not touch screen?

00:40:09.320 --> 00:40:15.170
So keyboard and mouse support,
or is there any vision that

00:40:15.170 --> 00:40:17.970
you guys have for the
presentation?

00:40:17.970 --> 00:40:18.300
RETO MEIER: You lied.

00:40:18.300 --> 00:40:20.700
That was not a very
short question.

00:40:20.700 --> 00:40:22.990
We'll need a very
short answer.

00:40:22.990 --> 00:40:24.700
DIANNE HACKBORN: So the
presentation framework itself

00:40:24.700 --> 00:40:26.770
is very flexible, and you can
actually today have lots of

00:40:26.770 --> 00:40:28.290
displays and that
kind of stuff.

00:40:28.290 --> 00:40:31.560
We completely punted on any
kind of input or anything,

00:40:31.560 --> 00:40:32.700
even in the current thing.

00:40:32.700 --> 00:40:35.300
The secondary display
is just a display.

00:40:35.300 --> 00:40:38.100
Maybe in the future, but that's
not currently part of

00:40:38.100 --> 00:40:39.430
the feature set.

00:40:39.430 --> 00:40:40.900
RETO MEIER: We are completely
out of time.

00:40:40.900 --> 00:40:42.370
Thank you very much to everyone
who asked a question,

00:40:42.370 --> 00:40:43.270
and thank you to the panel.

00:40:43.270 --> 00:40:51.070
[APPLAUSE]

