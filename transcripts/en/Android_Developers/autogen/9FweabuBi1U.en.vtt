WEBVTT
Kind: captions
Language: en

00:00:01.520 --> 00:00:04.280
for most Android apps it's simple to let

00:00:04.280 --> 00:00:04.290
for most Android apps it's simple to let
 

00:00:04.290 --> 00:00:06.140
for most Android apps it's simple to let
services and intense get handled on the

00:00:06.140 --> 00:00:06.150
services and intense get handled on the
 

00:00:06.150 --> 00:00:08.360
services and intense get handled on the
UI thread but as you know that's not

00:00:08.360 --> 00:00:08.370
UI thread but as you know that's not
 

00:00:08.370 --> 00:00:09.950
UI thread but as you know that's not
always ideal because you want that

00:00:09.950 --> 00:00:09.960
always ideal because you want that
 

00:00:09.960 --> 00:00:12.350
always ideal because you want that
thread to be free for rendering work my

00:00:12.350 --> 00:00:12.360
thread to be free for rendering work my
 

00:00:12.360 --> 00:00:13.730
thread to be free for rendering work my
name is Colt McAnlis and with the help

00:00:13.730 --> 00:00:13.740
name is Colt McAnlis and with the help
 

00:00:13.740 --> 00:00:16.310
name is Colt McAnlis and with the help
of a handy intent service class getting

00:00:16.310 --> 00:00:16.320
of a handy intent service class getting
 

00:00:16.320 --> 00:00:18.769
of a handy intent service class getting
this work off the UI thread is a breeze

00:00:18.769 --> 00:00:18.779
this work off the UI thread is a breeze
 

00:00:18.779 --> 00:00:21.590
this work off the UI thread is a breeze
but let's recap say you want to respond

00:00:21.590 --> 00:00:21.600
but let's recap say you want to respond
 

00:00:21.600 --> 00:00:23.240
but let's recap say you want to respond
to an intent but know the work is going

00:00:23.240 --> 00:00:23.250
to an intent but know the work is going
 

00:00:23.250 --> 00:00:24.950
to an intent but know the work is going
to take a while you don't want that work

00:00:24.950 --> 00:00:24.960
to take a while you don't want that work
 

00:00:24.960 --> 00:00:26.480
to take a while you don't want that work
running on the UI thread because it

00:00:26.480 --> 00:00:26.490
running on the UI thread because it
 

00:00:26.490 --> 00:00:28.400
running on the UI thread because it
should be busy doing rendering work the

00:00:28.400 --> 00:00:28.410
should be busy doing rendering work the
 

00:00:28.410 --> 00:00:30.109
should be busy doing rendering work the
solution here is to receive the intent

00:00:30.109 --> 00:00:30.119
solution here is to receive the intent
 

00:00:30.119 --> 00:00:32.209
solution here is to receive the intent
on the main thread and then push a work

00:00:32.209 --> 00:00:32.219
on the main thread and then push a work
 

00:00:32.219 --> 00:00:33.950
on the main thread and then push a work
packet off to some other thread and

00:00:33.950 --> 00:00:33.960
packet off to some other thread and
 

00:00:33.960 --> 00:00:36.500
packet off to some other thread and
you've got a lot of options to do this

00:00:36.500 --> 00:00:36.510
you've got a lot of options to do this
 

00:00:36.510 --> 00:00:39.229
you've got a lot of options to do this
for example async task is useful when

00:00:39.229 --> 00:00:39.239
for example async task is useful when
 

00:00:39.239 --> 00:00:41.420
for example async task is useful when
the work will result in a UI update but

00:00:41.420 --> 00:00:41.430
the work will result in a UI update but
 

00:00:41.430 --> 00:00:43.790
the work will result in a UI update but
doesn't really help you if your apps in

00:00:43.790 --> 00:00:43.800
doesn't really help you if your apps in
 

00:00:43.800 --> 00:00:45.350
doesn't really help you if your apps in
the background and there's no UI to

00:00:45.350 --> 00:00:45.360
the background and there's no UI to
 

00:00:45.360 --> 00:00:47.959
the background and there's no UI to
service a handler thread might be better

00:00:47.959 --> 00:00:47.969
service a handler thread might be better
 

00:00:47.969 --> 00:00:49.900
service a handler thread might be better
if the work is going to take a long time

00:00:49.900 --> 00:00:49.910
if the work is going to take a long time
 

00:00:49.910 --> 00:00:52.459
if the work is going to take a long time
but while you're not receiving intense

00:00:52.459 --> 00:00:52.469
but while you're not receiving intense
 

00:00:52.469 --> 00:00:53.569
but while you're not receiving intense
this thread is just sitting around

00:00:53.569 --> 00:00:53.579
this thread is just sitting around
 

00:00:53.579 --> 00:00:56.119
this thread is just sitting around
taking up resources but there's a third

00:00:56.119 --> 00:00:56.129
taking up resources but there's a third
 

00:00:56.129 --> 00:00:57.709
taking up resources but there's a third
option that makes things a little easier

00:00:57.709 --> 00:00:57.719
option that makes things a little easier
 

00:00:57.719 --> 00:01:00.860
option that makes things a little easier
for you intent services at its core an

00:01:00.860 --> 00:01:00.870
for you intent services at its core an
 

00:01:00.870 --> 00:01:02.479
for you intent services at its core an
intent service is kind of a hybrid

00:01:02.479 --> 00:01:02.489
intent service is kind of a hybrid
 

00:01:02.489 --> 00:01:04.609
intent service is kind of a hybrid
between a service class and a handler

00:01:04.609 --> 00:01:04.619
between a service class and a handler
 

00:01:04.619 --> 00:01:07.100
between a service class and a handler
thread see it extends the service class

00:01:07.100 --> 00:01:07.110
thread see it extends the service class
 

00:01:07.110 --> 00:01:08.870
thread see it extends the service class
but internally creates a new handler

00:01:08.870 --> 00:01:08.880
but internally creates a new handler
 

00:01:08.880 --> 00:01:10.219
but internally creates a new handler
thread which deals with all of the

00:01:10.219 --> 00:01:10.229
thread which deals with all of the
 

00:01:10.229 --> 00:01:11.539
thread which deals with all of the
intents as they come in

00:01:11.539 --> 00:01:11.549
intents as they come in
 

00:01:11.549 --> 00:01:13.340
intents as they come in
basically it wraps all the moving of

00:01:13.340 --> 00:01:13.350
basically it wraps all the moving of
 

00:01:13.350 --> 00:01:15.230
basically it wraps all the moving of
your intent responses to another thread

00:01:15.230 --> 00:01:15.240
your intent responses to another thread
 

00:01:15.240 --> 00:01:17.570
your intent responses to another thread
on your behalf and because intent

00:01:17.570 --> 00:01:17.580
on your behalf and because intent
 

00:01:17.580 --> 00:01:20.090
on your behalf and because intent
services are also services you get their

00:01:20.090 --> 00:01:20.100
services are also services you get their
 

00:01:20.100 --> 00:01:22.039
services are also services you get their
benefits as well now for example you can

00:01:22.039 --> 00:01:22.049
benefits as well now for example you can
 

00:01:22.049 --> 00:01:24.020
benefits as well now for example you can
use alarms to schedule repeated work to

00:01:24.020 --> 00:01:24.030
use alarms to schedule repeated work to
 

00:01:24.030 --> 00:01:25.249
use alarms to schedule repeated work to
happen at regular intervals like

00:01:25.249 --> 00:01:25.259
happen at regular intervals like
 

00:01:25.259 --> 00:01:27.230
happen at regular intervals like
refreshing some social feed updating

00:01:27.230 --> 00:01:27.240
refreshing some social feed updating
 

00:01:27.240 --> 00:01:29.569
refreshing some social feed updating
cached images or logging analytics and

00:01:29.569 --> 00:01:29.579
cached images or logging analytics and
 

00:01:29.579 --> 00:01:31.969
cached images or logging analytics and
of course there's a few performance

00:01:31.969 --> 00:01:31.979
of course there's a few performance
 

00:01:31.979 --> 00:01:33.800
of course there's a few performance
caveats that you need to be aware of

00:01:33.800 --> 00:01:33.810
caveats that you need to be aware of
 

00:01:33.810 --> 00:01:36.710
caveats that you need to be aware of
firstly the handler thread processes

00:01:36.710 --> 00:01:36.720
firstly the handler thread processes
 

00:01:36.720 --> 00:01:39.050
firstly the handler thread processes
work from a work queue this means that

00:01:39.050 --> 00:01:39.060
work from a work queue this means that
 

00:01:39.060 --> 00:01:40.490
work from a work queue this means that
if a task is going to take a long time

00:01:40.490 --> 00:01:40.500
if a task is going to take a long time
 

00:01:40.500 --> 00:01:42.469
if a task is going to take a long time
to complete it'll block the other queued

00:01:42.469 --> 00:01:42.479
to complete it'll block the other queued
 

00:01:42.479 --> 00:01:44.990
to complete it'll block the other queued
up intense secondly most of the time

00:01:44.990 --> 00:01:45.000
up intense secondly most of the time
 

00:01:45.000 --> 00:01:46.580
up intense secondly most of the time
when folks talk about intent services

00:01:46.580 --> 00:01:46.590
when folks talk about intent services
 

00:01:46.590 --> 00:01:48.889
when folks talk about intent services
they use some form of broadcast receiver

00:01:48.889 --> 00:01:48.899
they use some form of broadcast receiver
 

00:01:48.899 --> 00:01:51.050
they use some form of broadcast receiver
to communicate results back to the main

00:01:51.050 --> 00:01:51.060
to communicate results back to the main
 

00:01:51.060 --> 00:01:53.630
to communicate results back to the main
thread and update the UI which is fine

00:01:53.630 --> 00:01:53.640
thread and update the UI which is fine
 

00:01:53.640 --> 00:01:55.160
thread and update the UI which is fine
but there might be a more performant way

00:01:55.160 --> 00:01:55.170
but there might be a more performant way
 

00:01:55.170 --> 00:01:57.080
but there might be a more performant way
to do the same thing because delivering

00:01:57.080 --> 00:01:57.090
to do the same thing because delivering
 

00:01:57.090 --> 00:01:58.940
to do the same thing because delivering
messages via intense involves inter

00:01:58.940 --> 00:01:58.950
messages via intense involves inter
 

00:01:58.950 --> 00:02:00.950
messages via intense involves inter
process communication and ultimately

00:02:00.950 --> 00:02:00.960
process communication and ultimately
 

00:02:00.960 --> 00:02:03.080
process communication and ultimately
talking to the activity manager so you

00:02:03.080 --> 00:02:03.090
talking to the activity manager so you
 

00:02:03.090 --> 00:02:05.209
talking to the activity manager so you
could use local broadcast manager to

00:02:05.209 --> 00:02:05.219
could use local broadcast manager to
 

00:02:05.219 --> 00:02:07.100
could use local broadcast manager to
avoid that work or you could just use

00:02:07.100 --> 00:02:07.110
avoid that work or you could just use
 

00:02:07.110 --> 00:02:09.979
avoid that work or you could just use
the run on UI thread method after the

00:02:09.979 --> 00:02:09.989
the run on UI thread method after the
 

00:02:09.989 --> 00:02:11.390
the run on UI thread method after the
work is completed to push a block of

00:02:11.390 --> 00:02:11.400
work is completed to push a block of
 

00:02:11.400 --> 00:02:13.220
work is completed to push a block of
work into the UI threads hand

00:02:13.220 --> 00:02:13.230
work into the UI threads hand
 

00:02:13.230 --> 00:02:15.050
work into the UI threads hand
now besides just being a convenient way

00:02:15.050 --> 00:02:15.060
now besides just being a convenient way
 

00:02:15.060 --> 00:02:17.000
now besides just being a convenient way
to get intent work on to a thread

00:02:17.000 --> 00:02:17.010
to get intent work on to a thread
 

00:02:17.010 --> 00:02:18.949
to get intent work on to a thread
intentservice also has the benefit of

00:02:18.949 --> 00:02:18.959
intentservice also has the benefit of
 

00:02:18.959 --> 00:02:20.809
intentservice also has the benefit of
making your app a little less likely to

00:02:20.809 --> 00:02:20.819
making your app a little less likely to
 

00:02:20.819 --> 00:02:22.640
making your app a little less likely to
be killed by the system you have to

00:02:22.640 --> 00:02:22.650
be killed by the system you have to
 

00:02:22.650 --> 00:02:23.930
be killed by the system you have to
remember the applications without

00:02:23.930 --> 00:02:23.940
remember the applications without
 

00:02:23.940 --> 00:02:26.360
remember the applications without
foreground activities are more likely to

00:02:26.360 --> 00:02:26.370
foreground activities are more likely to
 

00:02:26.370 --> 00:02:28.220
foreground activities are more likely to
be killed than ones that have a

00:02:28.220 --> 00:02:28.230
be killed than ones that have a
 

00:02:28.230 --> 00:02:30.380
be killed than ones that have a
foreground activity but when you've got

00:02:30.380 --> 00:02:30.390
foreground activity but when you've got
 

00:02:30.390 --> 00:02:32.300
foreground activity but when you've got
an intent service running it puts your

00:02:32.300 --> 00:02:32.310
an intent service running it puts your
 

00:02:32.310 --> 00:02:34.550
an intent service running it puts your
app in the middle of these two states a

00:02:34.550 --> 00:02:34.560
app in the middle of these two states a
 

00:02:34.560 --> 00:02:36.229
app in the middle of these two states a
more killable than an app of the

00:02:36.229 --> 00:02:36.239
more killable than an app of the
 

00:02:36.239 --> 00:02:38.180
more killable than an app of the
foreground activity but less killable

00:02:38.180 --> 00:02:38.190
foreground activity but less killable
 

00:02:38.190 --> 00:02:40.039
foreground activity but less killable
than a background app without all those

00:02:40.039 --> 00:02:40.049
than a background app without all those
 

00:02:40.049 --> 00:02:42.289
than a background app without all those
things and probably most important is

00:02:42.289 --> 00:02:42.299
things and probably most important is
 

00:02:42.299 --> 00:02:45.080
things and probably most important is
not to confuse intent services with

00:02:45.080 --> 00:02:45.090
not to confuse intent services with
 

00:02:45.090 --> 00:02:47.479
not to confuse intent services with
other types of threaded helper classes

00:02:47.479 --> 00:02:47.489
other types of threaded helper classes
 

00:02:47.489 --> 00:02:49.460
other types of threaded helper classes
while intent services are pretty

00:02:49.460 --> 00:02:49.470
while intent services are pretty
 

00:02:49.470 --> 00:02:51.020
while intent services are pretty
powerful they aren't a general-purpose

00:02:51.020 --> 00:02:51.030
powerful they aren't a general-purpose
 

00:02:51.030 --> 00:02:52.910
powerful they aren't a general-purpose
threading solution so make sure you

00:02:52.910 --> 00:02:52.920
threading solution so make sure you
 

00:02:52.920 --> 00:02:54.619
threading solution so make sure you
check out the other containers to see

00:02:54.619 --> 00:02:54.629
check out the other containers to see
 

00:02:54.629 --> 00:02:57.440
check out the other containers to see
which one fits your particular needs see

00:02:57.440 --> 00:02:57.450
which one fits your particular needs see
 

00:02:57.450 --> 00:02:59.270
which one fits your particular needs see
this is what performance is all about

00:02:59.270 --> 00:02:59.280
this is what performance is all about
 

00:02:59.280 --> 00:03:01.339
this is what performance is all about
understanding the nuances and caveats to

00:03:01.339 --> 00:03:01.349
understanding the nuances and caveats to
 

00:03:01.349 --> 00:03:02.740
understanding the nuances and caveats to
make the best decisions for your

00:03:02.740 --> 00:03:02.750
make the best decisions for your
 

00:03:02.750 --> 00:03:04.789
make the best decisions for your
codebase which is why you should check

00:03:04.789 --> 00:03:04.799
codebase which is why you should check
 

00:03:04.799 --> 00:03:05.930
codebase which is why you should check
out the rest of the Android performance

00:03:05.930 --> 00:03:05.940
out the rest of the Android performance
 

00:03:05.940 --> 00:03:07.880
out the rest of the Android performance
patterns videos and don't forget to join

00:03:07.880 --> 00:03:07.890
patterns videos and don't forget to join
 

00:03:07.890 --> 00:03:10.250
patterns videos and don't forget to join
the Google+ community to ask great

00:03:10.250 --> 00:03:10.260
the Google+ community to ask great
 

00:03:10.260 --> 00:03:12.770
the Google+ community to ask great
questions to other great developers so

00:03:12.770 --> 00:03:12.780
questions to other great developers so
 

00:03:12.780 --> 00:03:14.809
questions to other great developers so
keep calm profile your code and always

00:03:14.809 --> 00:03:14.819
keep calm profile your code and always
 

00:03:14.819 --> 00:03:17.930
keep calm profile your code and always
remember perf matters

