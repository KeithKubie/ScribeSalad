WEBVTT
Kind: captions
Language: en

00:00:03.000 --> 00:00:06.167
Wilson: Okay, so I think we're
gonna go ahead and get going.

00:00:06.167 --> 00:00:09.167
People are still sort of
filtering in from lunch,

00:00:09.167 --> 00:00:11.000
but that's cool.

00:00:11.000 --> 00:00:13.834
So welcome. Good afternoon.
I hope you all had a good lunch.

00:00:13.834 --> 00:00:16.501
Um, I'm Chris Wilson.
This is my colleague Dan Lee,

00:00:16.501 --> 00:00:18.501
and we're here to talk with you

00:00:18.501 --> 00:00:21.501
about building Web Apps
for Google TV.

00:00:21.501 --> 00:00:25.501
And, um, if you want to tweet
about this--this presentation,

00:00:25.501 --> 00:00:29.000
this session, our, um, hash tag
is on every slide,

00:00:29.000 --> 00:00:30.501
so handy reference.

00:00:30.501 --> 00:00:32.834
You don't need to remember it
up front. It's #gtvweb.

00:00:32.834 --> 00:00:34.501
I'm gonna resist the temptation

00:00:34.501 --> 00:00:36.501
to actually watch Twitter
while I'm talking,

00:00:36.501 --> 00:00:39.868
but, um, you can queue up
questions for the end.

00:00:39.868 --> 00:00:42.834
So before we really get going,

00:00:42.834 --> 00:00:45.834
I want to cover why television
is even interesting,

00:00:45.834 --> 00:00:47.834
like, why we should care
about television.

00:00:47.834 --> 00:00:49.834
It's kind of old media.

00:00:49.834 --> 00:00:52.000
Probably a lot of you
in this room, um,

00:00:52.000 --> 00:00:53.834
may not even have a TV.

00:00:53.834 --> 00:00:56.501
I know a number of friends
who don't have a TV anymore.

00:00:56.501 --> 00:00:59.167
But, you know,
we do have the Web.

00:00:59.167 --> 00:01:01.167
But the interesting fact

00:01:01.167 --> 00:01:05.167
is that TV is actually
really, really popular.

00:01:05.167 --> 00:01:07.167
Um, more American households

00:01:07.167 --> 00:01:10.000
have TVs than cell phones
or computers.

00:01:10.000 --> 00:01:11.801
Computers--they're about--

00:01:11.801 --> 00:01:14.067
80% of American households
have computers,

00:01:14.067 --> 00:01:17.934
and, uh, about 90% of American
households have cell phones,

00:01:17.934 --> 00:01:20.167
some form of mobile device,

00:01:20.167 --> 00:01:23.934
and 99% of American households
have at least 1 TV.

00:01:23.934 --> 00:01:25.934
In fact, more than,

00:01:25.934 --> 00:01:27.934
uh, more than half
of those households

00:01:27.934 --> 00:01:29.601
have three or more TVs.

00:01:29.601 --> 00:01:31.601
That's a whole lot
of surface area

00:01:31.601 --> 00:01:33.734
and a whole lot of, uh,

00:01:33.734 --> 00:01:36.000
a whole lot of screens
for applications to be on.

00:01:36.000 --> 00:01:38.501
Worldwide, of course, numbers
are a little bit different,

00:01:38.501 --> 00:01:40.934
but worldwide three-quarters
of all households

00:01:40.934 --> 00:01:42.501
have TVs in them.

00:01:42.501 --> 00:01:44.934
So even, you know, third world
nations and everything,

00:01:44.934 --> 00:01:48.501
three-quarters of everyone
has a TV in their home.

00:01:48.501 --> 00:01:50.834
In addition to that,

00:01:50.834 --> 00:01:53.501
you know, that's kind of
all TVs, right?

00:01:53.501 --> 00:01:57.534
That's every kind of old
NTSC TV, PAL TV, whatever.

00:01:57.534 --> 00:01:59.834
What we're really talking
about here, of course,

00:01:59.834 --> 00:02:02.167
is internet-capable
or "smart" TVs.

00:02:02.167 --> 00:02:04.501
And there are not,
relatively speaking,

00:02:04.501 --> 00:02:06.501
tons of these out there today.

00:02:06.501 --> 00:02:09.667
There are about 2 million in
the U.S., um, as of last year.

00:02:09.667 --> 00:02:12.000
But by 2014, it's expected

00:02:12.000 --> 00:02:15.701
that more than a third
of all U.S. households

00:02:15.701 --> 00:02:18.834
will have
an internet-connected TV in it,

00:02:18.834 --> 00:02:20.834
uh, 43 million.

00:02:20.834 --> 00:02:23.000
So you can see
the growth curve on this

00:02:23.000 --> 00:02:25.734
has to be pretty astronomical
to get up that high.

00:02:25.734 --> 00:02:28.167
In addition to that,

00:02:28.167 --> 00:02:32.167
TV is actually used
more than any other media.

00:02:32.167 --> 00:02:35.834
Um, in fact, in today,

00:02:35.834 --> 00:02:38.501
uh, Americans spend more time
watching TV

00:02:38.501 --> 00:02:41.167
than computer use and listening
to music put together.

00:02:41.167 --> 00:02:43.501
And this is among
8 to 18 year olds, right?

00:02:43.501 --> 00:02:45.501
This is among young kids,
teenagers,

00:02:45.501 --> 00:02:48.834
the ones you would expect would
actually not be so focused on TV

00:02:48.834 --> 00:02:51.501
and would be more focused
on listening to music

00:02:51.501 --> 00:02:54.000
or using the computer to chat
with their friends or whatever.

00:02:54.000 --> 00:02:55.801
They're actually
still watching TV

00:02:55.801 --> 00:02:57.801
more than both of those
put together.

00:02:57.801 --> 00:02:59.467
In fact, they--they watch TV

00:02:59.467 --> 00:03:04.200
more than three times as much
as they use a computer.

00:03:04.200 --> 00:03:07.834
So to sum up,

00:03:07.834 --> 00:03:10.167
TVs are more common
than computers.

00:03:10.167 --> 00:03:12.501
Americans actually spend
more time watching TV

00:03:12.501 --> 00:03:14.667
than any other activity,

00:03:14.667 --> 00:03:17.667
so we kind of ought to make
better use of this time.

00:03:17.667 --> 00:03:20.334
Now that sounds like I'm saying
"stop watching TV."

00:03:20.334 --> 00:03:22.834
Um, that's not
actually my point, obviously.

00:03:22.834 --> 00:03:25.167
What I'm really saying is
there's a lot of opportunities

00:03:25.167 --> 00:03:27.267
to make that
TV experience better,

00:03:27.267 --> 00:03:30.334
and that's really what
we want to talk about today,

00:03:30.334 --> 00:03:34.167
and that's really what sparked
the Google TV project, in fact.

00:03:34.167 --> 00:03:36.834
The ideas behind Google TV
were really pretty simple.

00:03:36.834 --> 00:03:39.167
First of all,
we can take live TV,

00:03:39.167 --> 00:03:42.167
the regular TV experience,
and make it a lot better.

00:03:42.167 --> 00:03:43.834
We can apply search to it,

00:03:43.834 --> 00:03:46.334
since obviously, Google knows
a little bit about search.

00:03:46.334 --> 00:03:48.334
We can give live info
on what's on,

00:03:48.334 --> 00:03:51.501
so that we can help you find
stuff that you want to watch

00:03:51.501 --> 00:03:54.167
rather than you having to sit
there with your cable remote

00:03:54.167 --> 00:03:56.334
flipping through 500 channels,

00:03:56.334 --> 00:03:58.501
hoping to find
something interesting.

00:03:58.501 --> 00:04:01.334
Secondly, there's a lot
of great Web content

00:04:01.334 --> 00:04:03.501
out there already on the Web,

00:04:03.501 --> 00:04:05.601
and it's kind of silly

00:04:05.601 --> 00:04:08.000
to watch all of these videos
and--and other content

00:04:08.000 --> 00:04:11.200
in a little 6-inch window
on your 13-inch laptop

00:04:11.200 --> 00:04:13.167
when you've got the biggest
screen in the house

00:04:13.167 --> 00:04:15.400
probably staring at you
in your living room,

00:04:15.400 --> 00:04:17.000
and you probably have

00:04:17.000 --> 00:04:19.801
the best sound system in your
house attached to it, as well.

00:04:19.801 --> 00:04:21.801
Statistically speaking,
that's usually true.

00:04:21.801 --> 00:04:25.667
You have the best speaker system
attached to your TV system.

00:04:25.667 --> 00:04:29.167
Now there are 2 billion videos

00:04:29.167 --> 00:04:31.667
watched every day
on YouTube alone.

00:04:31.667 --> 00:04:34.501
Um, there are 35 hours of video

00:04:34.501 --> 00:04:36.834
uploaded to YouTube
every minute.

00:04:36.834 --> 00:04:40.167
So this actually outstrips
what you can watch live

00:04:40.167 --> 00:04:42.501
by about 2,100 times.

00:04:42.501 --> 00:04:44.834
So, um, they can't all
be funny cat videos.

00:04:44.834 --> 00:04:46.801
There should be enough
to keep you busy.

00:04:46.801 --> 00:04:48.501
So there's tons
of great Web content.

00:04:48.501 --> 00:04:50.501
We want to get that on TV.

00:04:50.501 --> 00:04:52.501
And the final idea
behind Google TV,

00:04:52.501 --> 00:04:54.501
and this is really what
we're here to talk about,

00:04:54.501 --> 00:04:57.501
is smart TV obviously
needs a platform

00:04:57.501 --> 00:04:59.501
for interactive applications.

00:04:59.501 --> 00:05:01.501
Manufacturers
were already starting

00:05:01.501 --> 00:05:04.167
to kind of roll their own
vertical platforms for smart TV.

00:05:04.167 --> 00:05:06.167
And we kind of said,

00:05:06.167 --> 00:05:08.167
"Hey, we already have
a platform.

00:05:08.167 --> 00:05:10.000
"We have two platforms,
actually,

00:05:10.000 --> 00:05:12.334
Android and the Web Platform."

00:05:12.334 --> 00:05:14.334
Both of those
make a great platform

00:05:14.334 --> 00:05:16.501
for interactive TV apps.

00:05:16.501 --> 00:05:18.501
With an interactive platform,

00:05:18.501 --> 00:05:20.501
when you start thinking
about all the time

00:05:20.501 --> 00:05:23.000
that you spend
parked in front of your TV,

00:05:23.000 --> 00:05:25.000
there are some
really specific opportunities

00:05:25.000 --> 00:05:26.801
that come to mind,

00:05:26.801 --> 00:05:29.334
and we want to--to mention
a few of these particular areas,

00:05:29.334 --> 00:05:31.334
that we're compelling, up front.

00:05:31.334 --> 00:05:35.000
First, any
media consumption activity

00:05:35.000 --> 00:05:37.000
that might have a social aspect

00:05:37.000 --> 00:05:39.000
can be really compelling on TV.

00:05:39.000 --> 00:05:41.501
So if you want to watch the game
together with your friends,

00:05:41.501 --> 00:05:44.000
but you don't actually want them
in your living room

00:05:44.000 --> 00:05:46.167
eating your nachos,
drinking your beer,

00:05:46.167 --> 00:05:49.334
um, you can do that if you have
an interactive platform

00:05:49.334 --> 00:05:51.200
that can consume media

00:05:51.200 --> 00:05:53.501
and connect to the internet
at the same time.

00:05:53.501 --> 00:05:56.667
There's also a big opportunity
for applications

00:05:56.667 --> 00:05:59.834
that span across devices
or environments.

00:05:59.834 --> 00:06:02.000
The example
that I usually use here

00:06:02.000 --> 00:06:05.167
is you can build an application
centered around food.

00:06:05.167 --> 00:06:07.167
And you can sit on your couch

00:06:07.167 --> 00:06:09.667
and watch episodes
of your favorite cooking show.

00:06:09.667 --> 00:06:12.000
And then when you see something
that looks really tasty,

00:06:12.000 --> 00:06:14.000
you want to make it for dinner,

00:06:14.000 --> 00:06:16.501
you head to the store,
and pull out your mobile device,

00:06:16.501 --> 00:06:18.834
and the application now running
on your mobile device

00:06:18.834 --> 00:06:21.167
already knows what
you were looking at,

00:06:21.167 --> 00:06:23.167
and it gives you
a shopping list.

00:06:23.167 --> 00:06:25.667
In fact, it might even guide you
based on your location

00:06:25.667 --> 00:06:28.501
to what stores you need to go to
to get the right ingredients.

00:06:28.501 --> 00:06:30.934
And then finally, you go back
to your kitchen.

00:06:30.934 --> 00:06:32.501
You go to make the recipe.

00:06:32.501 --> 00:06:35.334
And with your laptop
or your tablet

00:06:35.334 --> 00:06:37.334
or another TV bolted
to your wall or whatever,

00:06:37.334 --> 00:06:39.167
you get the actual recipe steps

00:06:39.167 --> 00:06:41.834
and maybe videos on how
to properly caramelize onions

00:06:41.834 --> 00:06:44.100
or something like that.

00:06:46.000 --> 00:06:49.801
Next, casual games are another
really interesting area for TV.

00:06:49.801 --> 00:06:51.801
I say "casual games,"
and I mention games here

00:06:51.801 --> 00:06:55.400
because obviously, games on TV
have a very long history.

00:06:55.400 --> 00:06:58.200
Yes, I had an Atari 2600
at one point.

00:06:58.200 --> 00:07:02.000
Um, I don't say games
across the board here

00:07:02.000 --> 00:07:05.000
because I think that
casual games are an opportunity.

00:07:05.000 --> 00:07:07.167
They really haven't been
nailed on TV yet.

00:07:07.167 --> 00:07:10.501
Console games actually
very, very healthy--

00:07:10.501 --> 00:07:12.834
uh, healthy ecosystem right now.

00:07:12.834 --> 00:07:15.000
It's more--I think
there's a lot of opportunity

00:07:15.000 --> 00:07:17.501
to build more casual games
and get them on the TV space

00:07:17.501 --> 00:07:19.100
when you sit down,

00:07:19.100 --> 00:07:23.501
and you want to kill a few--
few minutes playing something.

00:07:23.501 --> 00:07:26.334
Which brings me
to the last opportunity

00:07:26.334 --> 00:07:29.334
and this is the opportunity
to make connected applications

00:07:29.334 --> 00:07:32.667
that pair
or work across devices,

00:07:32.667 --> 00:07:34.501
and this is really

00:07:34.501 --> 00:07:37.167
because I don't think I've
actually sat down to watch TV

00:07:37.167 --> 00:07:39.501
any time in the last three
or four years

00:07:39.501 --> 00:07:42.167
without having my mobile device
or a tablet

00:07:42.167 --> 00:07:44.000
on me at the same time.

00:07:44.000 --> 00:07:46.501
Like, I'll check IMDb
or something like that.

00:07:46.501 --> 00:07:49.734
And we have built a Google TV
remote control application

00:07:49.734 --> 00:07:51.167
for iOS and Android

00:07:51.167 --> 00:07:53.334
so you can effectively replace
your remote control

00:07:53.334 --> 00:07:55.334
with your mobile device.
So you pull it out.

00:07:55.334 --> 00:07:58.167
You can flip channels,
change the volume, whatever,

00:07:58.167 --> 00:08:01.100
do searches,
drive the pointer device.

00:08:01.100 --> 00:08:04.868
But that's not really the key
thing that I'm getting at here.

00:08:04.868 --> 00:08:07.334
What we really want people
to focus on

00:08:07.334 --> 00:08:09.334
is building applications

00:08:09.334 --> 00:08:11.501
that connect mobile devices
and tablets

00:08:11.501 --> 00:08:13.501
or any other device together

00:08:13.501 --> 00:08:16.767
to drive the experience
on the big screen.

00:08:16.767 --> 00:08:18.667
You already have in your hand

00:08:18.667 --> 00:08:21.501
or your purse
or, uh, or your pocket,

00:08:21.501 --> 00:08:24.501
um, a device that has
a ton of controllers on it,

00:08:24.501 --> 00:08:26.000
a ton of sensors.

00:08:26.000 --> 00:08:27.734
You know, you have audio input.

00:08:27.734 --> 00:08:29.734
You have an accelerometer
and a gyroscope,

00:08:29.734 --> 00:08:32.834
audio--
and a touch screen display.

00:08:32.834 --> 00:08:36.000
You, um--we want
to connect that to the TV.

00:08:36.000 --> 00:08:37.634
We shouldn't need to give you

00:08:37.634 --> 00:08:39.634
yet another remote control
to lose.

00:08:39.634 --> 00:08:41.567
You're already carrying one.

00:08:41.567 --> 00:08:44.567
So I think we want to give
a very quick demo

00:08:44.567 --> 00:08:48.033
of a couple of applications
that show this sort of thing.

00:08:48.033 --> 00:08:50.767
And the first one

00:08:50.767 --> 00:08:54.000
is...

00:08:54.000 --> 00:08:56.167
Interesting, it seems
to have lost me.

00:08:56.167 --> 00:08:59.000
man: Hey, I don't have all day
here, people. Let's play.

00:08:59.000 --> 00:09:01.501
Wilson: [laughs]

00:09:01.501 --> 00:09:03.434
Well, let's see.

00:09:08.000 --> 00:09:10.000
So we're both trying
to join this.

00:09:10.000 --> 00:09:12.033
I'm--I'm joining it
from an iPhone.

00:09:12.033 --> 00:09:14.000
man: You need at least
two people to play "WeDraw."

00:09:14.000 --> 00:09:16.501
Wilson: Dan is trying
to join it from...

00:09:16.501 --> 00:09:18.400
Okay, why don't you know, uh...

00:09:18.400 --> 00:09:20.868
Lee: You want to start?

00:09:20.868 --> 00:09:24.501
Wilson: My iOS device
is actually unconnecting.

00:09:24.501 --> 00:09:26.501
man: Everybody ready?
Let's do this.

00:09:26.501 --> 00:09:30.000
Wilson: Okay. Connecting.

00:09:30.000 --> 00:09:32.000
Hey, there we go.
man: Round 1, start.

00:09:32.000 --> 00:09:34.000
Wilson: So this application,
um--

00:09:34.000 --> 00:09:36.734
one of us, and I'm not sure
who it is yet, gets to draw...

00:09:36.734 --> 00:09:38.734
man: Player 1, get
those fingers ready.

00:09:38.734 --> 00:09:40.734
Wilson: And this is
essentially like "Pictionary."

00:09:40.734 --> 00:09:42.734
Alan Queen, right on,

00:09:42.734 --> 00:09:45.033
from the audience, even.

00:09:45.033 --> 00:09:48.334
So Alan gets a word
on his mobile device,

00:09:48.334 --> 00:09:50.667
and it says
you should draw something.

00:09:50.667 --> 00:09:52.400
And I'm gonna guess

00:09:52.400 --> 00:09:56.501
that looks like a... snake.

00:09:56.501 --> 00:09:58.267
Oh.

00:09:58.267 --> 00:10:00.267
man: And player 4 makes
short work of the competition.

00:10:00.267 --> 00:10:01.801
Wilson: All right!

00:10:01.801 --> 00:10:03.801
Andre guessed "river,"
but I--I beat him to it.

00:10:03.801 --> 00:10:06.434
So you can see all of us
are participating in this--

00:10:06.434 --> 00:10:09.434
in this experience right now
from our own personal devices.

00:10:09.434 --> 00:10:12.000
There are lots of other ideas
for applications

00:10:12.000 --> 00:10:16.367
that you may want to, um, to
implement that work like this.

00:10:16.367 --> 00:10:18.534
Uh, this is, uh,
a MOVL application.

00:10:18.534 --> 00:10:20.501
They're actually
in the Sandbox today,

00:10:20.501 --> 00:10:22.067
so they're showing off

00:10:22.067 --> 00:10:24.200
some of their
other applications, as well.

00:10:24.200 --> 00:10:26.501
Let me go ahead and close that.
Lee: [laughs]

00:10:26.501 --> 00:10:28.834
Wilson: There are a lot of other
applications that really--

00:10:28.834 --> 00:10:30.834
that don't yet make use of...
[bang]

00:10:30.834 --> 00:10:33.000
Wilson: the sort of
paired controller idea,

00:10:33.000 --> 00:10:34.934
but, um... [laughs]

00:10:34.934 --> 00:10:36.501
but give you a lot of--

00:10:36.501 --> 00:10:38.501
it's kind of a social aspect
in the living room,

00:10:38.501 --> 00:10:40.501
and one of those that we want
to just show really quickly

00:10:40.501 --> 00:10:44.000
was another HTML-based demo
called the KARAOKE Channel.

00:10:44.000 --> 00:10:47.334
And Dan's gonna sing
for you here.

00:10:47.334 --> 00:10:49.334
Lee: All right.

00:10:49.334 --> 00:10:51.534
Wilson: I personally think
we should open up to a vote

00:10:51.534 --> 00:10:53.000
as to what he sings,

00:10:53.000 --> 00:10:56.501
but, um, I think
he had a-a request.

00:10:56.501 --> 00:10:58.501
Um...

00:10:58.501 --> 00:11:02.167
Oh, wait, there it was.

00:11:02.167 --> 00:11:06.167
So this is actually
a relatively simple application,

00:11:06.167 --> 00:11:09.501
um, but it's very compelling
on your big screen.

00:11:09.501 --> 00:11:11.501
I'm gonna go ahead

00:11:11.501 --> 00:11:13.934
and pop it full screen

00:11:13.934 --> 00:11:16.167
so you get a more
TV-like experience.

00:11:16.167 --> 00:11:19.167
Lee singing: Now I had

00:11:19.167 --> 00:11:22.167
the time of my life.

00:11:22.167 --> 00:11:26.167
No, I never
felt this way before.

00:11:26.167 --> 00:11:30.334
Yes, I swear.
It's the truth.

00:11:30.334 --> 00:11:31.834
And I--
[normal voice] Oh.

00:11:31.834 --> 00:11:33.667
Wilson: [laughs]
[laughter]

00:11:33.667 --> 00:11:35.667
Wilson: They're all
saying "mic," Dan.

00:11:35.667 --> 00:11:38.601
[cheers and applause]

00:11:40.801 --> 00:11:44.000
Wilson: So really, the key point
we're trying to get here

00:11:44.000 --> 00:11:46.501
is that there are some
very engaging applications,

00:11:46.501 --> 00:11:49.501
and having it on a big screen--
and obviously this might be

00:11:49.501 --> 00:11:51.501
a little bit bigger
than your TV--

00:11:51.501 --> 00:11:53.067
is a really good idea.

00:11:53.067 --> 00:11:57.501
It's--it's a really good way
to engage multiple people.

00:11:57.501 --> 00:12:00.000
Now as I mentioned before,

00:12:00.000 --> 00:12:03.000
Google TV and Android--
Google TV is based on Android.

00:12:03.000 --> 00:12:05.000
It's--it's an Android device.

00:12:05.000 --> 00:12:07.501
And we will be unlocking
the ability to, uh,

00:12:07.501 --> 00:12:10.834
for consumers to install
Android applications very soon.

00:12:10.834 --> 00:12:13.167
Christian and Jason
have a session about that side,

00:12:13.167 --> 00:12:16.501
um, actually the next session
round this afternoon,

00:12:16.501 --> 00:12:18.501
uh, up in building 11.

00:12:18.501 --> 00:12:20.501
Er, building 11--room 11.

00:12:20.501 --> 00:12:24.167
But here, we're talking
about the Web platform.

00:12:24.167 --> 00:12:27.000
Now Google TV's Web platform
is Chrome.

00:12:27.000 --> 00:12:29.834
It has a special TV UI
applied to it

00:12:29.834 --> 00:12:32.033
so you get, uh, an address bar

00:12:32.033 --> 00:12:34.501
that doesn't always sit there
and take up space,

00:12:34.501 --> 00:12:37.167
and you have
a very TV-centric design

00:12:37.167 --> 00:12:39.167
to be driven
from a directional pad

00:12:39.167 --> 00:12:41.167
navigation system.

00:12:41.167 --> 00:12:44.000
But this means we have
a modern browser.

00:12:44.000 --> 00:12:46.000
We have HTML5.

00:12:46.000 --> 00:12:48.000
We have--we're built
on top of WebKit.

00:12:48.000 --> 00:12:51.334
We also have Adobe Flash
implemented on Google TV.

00:12:51.334 --> 00:12:54.501
We have H.264 video
natively implemented, as well,

00:12:54.501 --> 00:12:56.501
so any--any content
that needs that

00:12:56.501 --> 00:12:58.501
is--is gonna be there on TV.

00:12:58.501 --> 00:13:00.267
And finally, I want to mention

00:13:00.267 --> 00:13:02.334
we update automatically
over the network.

00:13:02.334 --> 00:13:04.501
So the Web platform
gets better over time.

00:13:04.501 --> 00:13:06.400
You don't have to do anything.

00:13:06.400 --> 00:13:10.501
Um, mine at home has updated
multiple times already, so...

00:13:10.501 --> 00:13:13.167
Now I basically just said

00:13:13.167 --> 00:13:14.934
we support the Web platform.

00:13:14.934 --> 00:13:16.934
If you're already
a Web developer,

00:13:16.934 --> 00:13:18.534
I kind of said the magic words.

00:13:18.534 --> 00:13:20.801
I said "WebKit"
and "Web platform."

00:13:20.801 --> 00:13:22.801
So what more
do you need to know?

00:13:22.801 --> 00:13:24.334
Like, you can all leave.

00:13:24.334 --> 00:13:26.834
Um, we're only 15 minutes in
or something.

00:13:26.834 --> 00:13:28.501
But it turns out

00:13:28.501 --> 00:13:31.000
TV is a little bit
of a different space.

00:13:31.000 --> 00:13:33.434
It's a different mental space.

00:13:33.434 --> 00:13:36.334
Users tend to be
in what we sometimes call

00:13:36.334 --> 00:13:38.367
"couch mode"
or "lean back" mode.

00:13:38.367 --> 00:13:41.334
They're in this very passive
interaction mode.

00:13:41.334 --> 00:13:43.667
They don't really want
to lean forward and, uh,

00:13:43.667 --> 00:13:46.000
sit there with a keyboard
and a mouse and drive it.

00:13:46.000 --> 00:13:49.000
In fact, I was sitting there
watching TV with my wife,

00:13:49.000 --> 00:13:52.000
and a commercial for interactive
TV came on one time,

00:13:52.000 --> 00:13:54.000
and my wife actually said,

00:13:54.000 --> 00:13:56.000
"But I don't want
to be interactive.

00:13:56.000 --> 00:13:58.000
I just want to watch TV."

00:13:58.000 --> 00:13:59.934
And I tried to explain
what I did again,

00:13:59.934 --> 00:14:02.000
and she kind of got
a little confused.

00:14:02.000 --> 00:14:04.000
[laughter]

00:14:04.000 --> 00:14:06.501
Wilson: But the idea is,
well, you really need to--

00:14:06.501 --> 00:14:08.501
to build a UI,
to build an application,

00:14:08.501 --> 00:14:10.501
that is in that kind of space,
right,

00:14:10.501 --> 00:14:13.334
that you provide a UI that
you're comfortable driving

00:14:13.334 --> 00:14:16.167
kicking back on your couch
from 10 feet away.

00:14:16.167 --> 00:14:18.501
[music playing]
[laughter]

00:14:18.501 --> 00:14:20.834
Wilson: So I want to give--

00:14:20.834 --> 00:14:23.000
wow, that's a weird--

00:14:23.000 --> 00:14:25.334
so I want to give
a couple of examples

00:14:25.334 --> 00:14:28.000
of Web sites that have already
gone and done this work,

00:14:28.000 --> 00:14:31.000
that have built a,
um, a 10-foot UI

00:14:31.000 --> 00:14:32.667
of some--some form or another

00:14:32.667 --> 00:14:34.167
and call out a few things
about 'em.

00:14:34.167 --> 00:14:35.834
So this is Vimeo.

00:14:35.834 --> 00:14:38.000
Um, I'm actually using Vimeo
as an example here

00:14:38.000 --> 00:14:40.000
because I use YouTube later,

00:14:40.000 --> 00:14:43.501
So, um, Vimeo is
a video content Web site,

00:14:43.501 --> 00:14:45.534
and this is what I get.

00:14:45.534 --> 00:14:48.000
I'm already logged in as me.
Whoops.

00:14:48.000 --> 00:14:51.834
This is what I get
if I don't lock my screen.

00:14:51.834 --> 00:14:55.834
Um, it's got
a ton of stuff on it,

00:14:55.834 --> 00:14:58.501
and the text is really small,
and it's hard for me to read,

00:14:58.501 --> 00:15:00.267
and it's hard for me
to actually find

00:15:00.267 --> 00:15:02.067
what it is that I'm--
I want to watch.

00:15:02.067 --> 00:15:03.734
Like, maybe I want
to hear some more

00:15:03.734 --> 00:15:05.434
about my camera or something.

00:15:05.434 --> 00:15:08.434
But it's not really, um--you
know, I have to navigate this.

00:15:08.434 --> 00:15:10.934
You also notice there's
a big scroll bar on the side.

00:15:10.934 --> 00:15:14.000
There's actually a couple pages'
worth of--of content

00:15:14.000 --> 00:15:15.934
just on this page alone.

00:15:15.934 --> 00:15:17.501
And I'm not even sure

00:15:17.501 --> 00:15:19.501
what the statistics thing
is on this page.

00:15:19.501 --> 00:15:23.334
Now Vimeo also has

00:15:23.334 --> 00:15:27.334
what they call Couch Mode,

00:15:27.334 --> 00:15:29.467
and Couch Mode
is a little different

00:15:29.467 --> 00:15:32.000
because Couch Mode--
when you go to Couch Mode,

00:15:32.000 --> 00:15:34.000
this is what you get.

00:15:34.000 --> 00:15:36.000
The video starts
playing immediately,

00:15:36.000 --> 00:15:39.501
and you can still navigate
through all the content.

00:15:39.501 --> 00:15:41.667
You can find different things
to--to watch.

00:15:41.667 --> 00:15:43.834
But this feels like TV, right?

00:15:43.834 --> 00:15:46.334
You turn it on, and it just
starts playing content.

00:15:46.334 --> 00:15:48.834
It's not like you have
to go discover and lean in

00:15:48.834 --> 00:15:50.834
and figure out
what you want to do next.

00:15:50.834 --> 00:15:53.133
It is kind of
a passive experience.

00:15:53.133 --> 00:15:55.501
Similar to that--

00:15:55.501 --> 00:15:59.167
this is "The Huffington Post"
news, uh, news site.

00:15:59.167 --> 00:16:01.501
And again, you'll notice
there's a scroll bar,

00:16:01.501 --> 00:16:03.200
and this one's
really impressive

00:16:03.200 --> 00:16:05.400
because this is many, many,

00:16:05.400 --> 00:16:08.801
many, many, many,
many pages of content,

00:16:08.801 --> 00:16:10.934
and down at the bottom,
you have a huge, like--

00:16:10.934 --> 00:16:13.501
the news source's menu
is even bigger

00:16:13.501 --> 00:16:17.100
than what will--will fit on
my screen at a readable size.

00:16:17.100 --> 00:16:19.801
And "The Huffington Post"
built an application

00:16:19.801 --> 00:16:21.767
called NewsGlide

00:16:21.767 --> 00:16:24.167
that gives a different
kind of experience,

00:16:24.167 --> 00:16:26.000
and it's still a news site,

00:16:26.000 --> 00:16:28.000
and it's still kind of a static,

00:16:28.000 --> 00:16:31.000
uh, static way
to look at the news,

00:16:31.000 --> 00:16:33.334
but at the same time,
I can drive this

00:16:33.334 --> 00:16:36.000
completely with the arrow keys
on my keyboard.

00:16:36.000 --> 00:16:37.801
I don't need to use a--

00:16:37.801 --> 00:16:39.801
I don't need to use a mouse
to navigate.

00:16:39.801 --> 00:16:43.167
I--unfortunately because this is
running on the desktop browser,

00:16:43.167 --> 00:16:45.000
I'm getting a scroll bar.

00:16:45.000 --> 00:16:47.000
On TV, you don't,
and it resizes properly

00:16:47.000 --> 00:16:49.934
so you get a much better
experience there.

00:16:52.834 --> 00:16:55.000
Now the point
we're trying to get--

00:16:55.000 --> 00:16:57.334
to get at
with both of these, um,

00:16:57.334 --> 00:16:59.033
both of these quick demos

00:16:59.033 --> 00:17:03.000
are--go ahead and flip--

00:17:03.000 --> 00:17:05.167
are--

00:17:05.167 --> 00:17:08.434
uh, there's different concepts
you need to keep in mind.

00:17:08.434 --> 00:17:11.434
There's--there's different ideas
behind what you need to do

00:17:11.434 --> 00:17:13.067
to design for TV,

00:17:13.067 --> 00:17:15.267
and they fall
into three basic categories.

00:17:15.267 --> 00:17:17.267
The first one
is technical constraints,

00:17:17.267 --> 00:17:19.501
and these are things
like resolution TV runs at

00:17:19.501 --> 00:17:21.501
and color issues
and things like that.

00:17:21.501 --> 00:17:23.501
Then there are
practical constraints,

00:17:23.501 --> 00:17:26.834
which is when you sit 10 feet
away, things look smaller--

00:17:26.834 --> 00:17:29.000
big surprise--
and what kind of input

00:17:29.000 --> 00:17:32.033
you typically have on your couch
and that sort of thing.

00:17:32.033 --> 00:17:34.000
And then finally, we want
to cover a few things

00:17:34.000 --> 00:17:35.801
that are design guidance,

00:17:35.801 --> 00:17:38.000
and these are
a little bit more fuzzy.

00:17:38.000 --> 00:17:41.801
They're more, um, well, this is
what makes a "TV experience."

00:17:41.801 --> 00:17:43.501
And that doesn't mean
you can't--

00:17:43.501 --> 00:17:45.000
you absolutely
can't violate these.

00:17:45.000 --> 00:17:47.000
It's whatever you do,

00:17:47.000 --> 00:17:49.000
the user is gonna find that
a little bit weird

00:17:49.000 --> 00:17:52.501
or a little bit different,
I should say, from regular TV.

00:17:52.501 --> 00:17:55.000
So on the first one of these,
on resolution--

00:17:55.000 --> 00:17:56.734
and this feels really weird,

00:17:56.734 --> 00:17:59.501
'cause I'm a longtime
Web platform guy,

00:17:59.501 --> 00:18:02.667
and, you know, one of the hot
things to discuss right now,

00:18:02.667 --> 00:18:04.501
um, in the Web design world

00:18:04.501 --> 00:18:06.501
is the concept
of responsive design,

00:18:06.501 --> 00:18:09.000
building flexible designs
that go across screen sizes

00:18:09.000 --> 00:18:11.000
and window sizes.

00:18:11.000 --> 00:18:14.267
TV has two resolutions
is the short version of this--

00:18:14.267 --> 00:18:15.934
720p and 1080p--

00:18:15.934 --> 00:18:18.000
and you can design
to those resolutions,

00:18:18.000 --> 00:18:19.567
and that's okay.

00:18:19.567 --> 00:18:21.567
Like, that's actually not
a bad thing to do at all.

00:18:21.567 --> 00:18:24.167
It feels kind of weird,
but there you have it.

00:18:24.167 --> 00:18:27.501
Except an old TV,

00:18:27.501 --> 00:18:31.501
prior to HDTV, prior to
everyone having LCD flat panels,

00:18:31.501 --> 00:18:34.167
um, there was this concept
called overscan.

00:18:34.167 --> 00:18:36.667
And if you've never heard
of overscan before,

00:18:36.667 --> 00:18:40.501
overscan is basically
on an old CRT-based display

00:18:40.501 --> 00:18:43.334
the edges of the display
were kind of rounded off.

00:18:43.334 --> 00:18:46.667
Um, some of the--the content
might get cut off

00:18:46.667 --> 00:18:49.000
because of the rounded edges
of the display,

00:18:49.000 --> 00:18:50.667
in the corners particularly,

00:18:50.667 --> 00:18:53.167
because TVs typically
weren't exactly rectilinear.

00:18:53.167 --> 00:18:55.501
And finally, the bezel
of the computer,

00:18:55.501 --> 00:18:57.667
like, the plastic bit
around the tube itself,

00:18:57.667 --> 00:19:00.434
could cut off
some of the content, too.

00:19:00.434 --> 00:19:03.000
So they had rules

00:19:03.000 --> 00:19:05.000
about where you were supposed
to put content

00:19:05.000 --> 00:19:06.801
on one of these screens.

00:19:06.801 --> 00:19:08.667
They had the "action safe" area

00:19:08.667 --> 00:19:10.834
as basically the place where
you're supposed to display

00:19:10.834 --> 00:19:12.834
anything that
the user doesn't really--

00:19:12.834 --> 00:19:14.501
or the consumer needs to see.

00:19:14.501 --> 00:19:17.334
So if you've got a character
in a video moving,

00:19:17.334 --> 00:19:20.167
they probably want to stay
within that action safe space.

00:19:20.167 --> 00:19:22.501
They might get cut off
on some displays occasionally,

00:19:22.501 --> 00:19:24.000
but not a big deal.

00:19:24.000 --> 00:19:27.000
If you're putting titles
or any textual information

00:19:27.000 --> 00:19:28.734
or anything like that up,

00:19:28.734 --> 00:19:30.501
you want to keep it
between 5% and 10%

00:19:30.501 --> 00:19:32.501
away from the edges,

00:19:32.501 --> 00:19:35.667
and this is a fairly sizable
chunk of--of screen real estate.

00:19:35.667 --> 00:19:38.167
And it's why,
if you watch TV shows,

00:19:38.167 --> 00:19:40.334
um, particularly older TV shows,

00:19:40.334 --> 00:19:43.334
they don't put the titles
or the characters or anything

00:19:43.334 --> 00:19:45.534
off at the corners ever.

00:19:45.534 --> 00:19:48.667
That's why those little annoying
channel pop-ups,

00:19:48.667 --> 00:19:50.667
they're not way off
in the corner.

00:19:50.667 --> 00:19:52.667
They're actually, you know,
they kind of, uh,

00:19:52.667 --> 00:19:54.501
intrude into your space.

00:19:54.501 --> 00:19:56.000
And that's because they know

00:19:56.000 --> 00:19:58.000
they might get
cut off otherwise.

00:19:58.000 --> 00:20:01.501
Now technically, you would think
LCDs and plasma displays

00:20:01.501 --> 00:20:03.334
wouldn't have
this problem, right?

00:20:03.334 --> 00:20:05.834
You know exactly what resolution
you're designing for.

00:20:05.834 --> 00:20:07.901
You should have every one
of those pixels

00:20:07.901 --> 00:20:09.400
on your screen, right?

00:20:09.400 --> 00:20:11.067
And I actually thought
this was true,

00:20:11.067 --> 00:20:13.067
and then I went
and looked at the data,

00:20:13.067 --> 00:20:17.334
and it turns out that only
about 40% of HDTVs sold today

00:20:17.334 --> 00:20:19.334
have all their pixels,

00:20:19.334 --> 00:20:23.167
like, actually are designed
for exactly 1080p or 720p.

00:20:23.167 --> 00:20:27.000
Um, up to about 30% of them

00:20:27.000 --> 00:20:29.834
drop 10% to 12% of their pixels,

00:20:29.834 --> 00:20:32.000
like, literally
just don't have them.

00:20:32.000 --> 00:20:34.000
So some displays
are still gonna be missing

00:20:34.000 --> 00:20:36.501
the bits around the edge,
and you need to be careful

00:20:36.501 --> 00:20:39.000
about having
a somewhat flexible display.

00:20:39.000 --> 00:20:42.000
This means the edges of your
screen may still get cut off.

00:20:42.000 --> 00:20:45.667
Don't build right to the edges
is the short version.

00:20:45.667 --> 00:20:48.801
As well, you'll notice that, um,

00:20:48.801 --> 00:20:50.801
this is essentially
the same design.

00:20:50.801 --> 00:20:52.834
I just faked up one of them
a little bit.

00:20:52.834 --> 00:20:54.834
You don't really want
to build to the edges

00:20:54.834 --> 00:20:56.501
because on TV,
it makes your screen

00:20:56.501 --> 00:20:58.501
look kind of, uh, unbalanced.

00:20:58.501 --> 00:21:01.067
You really want to use
some extra padding space,

00:21:01.067 --> 00:21:03.734
have some negative space
between things

00:21:03.734 --> 00:21:05.734
because the user is sitting
quite a ways away.

00:21:05.734 --> 00:21:07.267
They don't see things

00:21:07.267 --> 00:21:10.501
that are rammed right up
next to each other very well.

00:21:10.501 --> 00:21:12.667
Now briefly, I want
to talk about color.

00:21:12.667 --> 00:21:14.501
Um, the short version

00:21:14.501 --> 00:21:16.501
is the color gamut
is different on TV

00:21:16.501 --> 00:21:18.801
than what you may be used to
on a computer.

00:21:18.801 --> 00:21:22.501
NTSC gamut is still typically
used for TV displays,

00:21:22.501 --> 00:21:24.934
and it's both somewhat limited

00:21:24.934 --> 00:21:26.734
compared to sRGB

00:21:26.734 --> 00:21:29.167
or--or, um, or the Adobe gamut.

00:21:29.167 --> 00:21:31.167
Uh, but the real problem

00:21:31.167 --> 00:21:33.934
is that TVs are frequently
not calibrated.

00:21:33.934 --> 00:21:36.267
In fact, I would flip
that around and say

00:21:36.267 --> 00:21:39.501
TVs are almost never
actually calibrated for color.

00:21:39.501 --> 00:21:41.501
So the worst part of this

00:21:41.501 --> 00:21:44.000
is that it's very easy
to oversaturate,

00:21:44.000 --> 00:21:46.734
and in fact, people buy
their TVs for that.

00:21:46.734 --> 00:21:48.834
Many TVs have a retail setting

00:21:48.834 --> 00:21:51.000
that actually flips it
into oversaturating

00:21:51.000 --> 00:21:52.501
and--and cranking up

00:21:52.501 --> 00:21:54.734
the brightness
and contrast, as well.

00:21:54.734 --> 00:21:57.434
Because when somebody goes in
to Best Buy to buy a new TV,

00:21:57.434 --> 00:21:59.934
they typically look at all
the TVs that are out there,

00:21:59.934 --> 00:22:02.000
and they pick the one
that's shiniest.

00:22:02.000 --> 00:22:06.000
Um, unfortunately, this is not
the one that's most accurate

00:22:06.000 --> 00:22:08.000
or best at representing colors.

00:22:08.000 --> 00:22:10.000
It's just the one
that's shiniest.

00:22:10.000 --> 00:22:12.501
So be careful about having
very saturated colors

00:22:12.501 --> 00:22:14.434
in your Web designs,

00:22:14.434 --> 00:22:16.501
any design that goes on TV.

00:22:16.501 --> 00:22:20.000
Particularly oranges and reds
tend to kind of blow out

00:22:20.000 --> 00:22:23.667
the, uh, blow out
the saturation pretty quickly.

00:22:23.667 --> 00:22:26.167
Another interesting, uh,

00:22:26.167 --> 00:22:28.501
interesting thing that
I didn't realize at first

00:22:28.501 --> 00:22:30.200
and then it started making sense

00:22:30.200 --> 00:22:32.234
is, um, white

00:22:32.234 --> 00:22:34.501
is the default background
of the Web, right?

00:22:34.501 --> 00:22:38.000
If you just put doctype HTML
and nothing else in a document

00:22:38.000 --> 00:22:41.334
and load it up,
you get a white screen.

00:22:41.334 --> 00:22:43.801
That's typically not what
you would expect on a TV.

00:22:43.801 --> 00:22:45.801
On a TV, you would expect it
to be black.

00:22:45.801 --> 00:22:47.801
If you go to a channel
that's not playing anything,

00:22:47.801 --> 00:22:49.567
they're usually showing
a black screen,

00:22:49.567 --> 00:22:51.567
or they're showing
a test pattern.

00:22:51.567 --> 00:22:56.000
Now this actually ends up
translating to the consumer.

00:22:56.000 --> 00:22:59.334
If you look at something
that is all white

00:22:59.334 --> 00:23:01.667
or heavily white on a TV,

00:23:01.667 --> 00:23:03.667
it feels like your TV
is screaming at you.

00:23:03.667 --> 00:23:05.033
It's like all caps.

00:23:05.033 --> 00:23:07.000
It's really, really
in-your-face,

00:23:07.000 --> 00:23:09.000
and you don't generally
want that.

00:23:09.000 --> 00:23:11.501
The other thing you have
to be careful about is, um,

00:23:11.501 --> 00:23:13.501
if you use pure white
and pure black,

00:23:13.501 --> 00:23:15.501
you will get halo effects
on some displays

00:23:15.501 --> 00:23:17.400
because they're not
really designed

00:23:17.400 --> 00:23:19.501
to do a very fast
transition back and forth

00:23:19.501 --> 00:23:22.000
between opposite ends
of the spectrum.

00:23:22.000 --> 00:23:24.000
This--I think
you can actually see it

00:23:24.000 --> 00:23:26.000
on the--the screen up here.

00:23:26.000 --> 00:23:28.000
Um, this is actually
a photo I took

00:23:28.000 --> 00:23:30.501
of one of the TV screens
sitting at my desk,

00:23:30.501 --> 00:23:32.067
and you can see, it's got

00:23:32.067 --> 00:23:35.000
a weird little kind of
halo effect around each letter.

00:23:35.000 --> 00:23:38.000
That's not a, you know, that's
not a shadow effect or anything.

00:23:38.000 --> 00:23:40.501
That actually is just showing up
on the TV screen.

00:23:40.501 --> 00:23:42.734
And in fact, the other TV
I have on my desk

00:23:42.734 --> 00:23:44.367
doesn't have it at all.

00:23:44.367 --> 00:23:48.501
So it's definitely TV-to-TV.

00:23:48.501 --> 00:23:50.501
And that actually brings up
to the last point

00:23:50.501 --> 00:23:53.934
of test your contrast
on an actual TV display,

00:23:53.934 --> 00:23:55.934
not on a computer monitor
but on a TV.

00:23:55.934 --> 00:23:58.000
And in fact, not just one TV,

00:23:58.000 --> 00:24:00.434
it's best to test
on several different TVs

00:24:00.434 --> 00:24:02.067
because you will get

00:24:02.067 --> 00:24:04.367
different frequency responses
from them.

00:24:06.100 --> 00:24:08.000
On practical constraints,

00:24:08.000 --> 00:24:11.501
text is one of the areas
where, um--

00:24:11.501 --> 00:24:14.501
you know, I can give you, like,
very definitive guidance

00:24:14.501 --> 00:24:16.501
like don't ever use
6-point font,

00:24:16.501 --> 00:24:18.501
um, but really the idea is

00:24:18.501 --> 00:24:20.000
you want to limit

00:24:20.000 --> 00:24:22.334
how much content you're trying
to shove at the user,

00:24:22.334 --> 00:24:24.501
how much textual content
you're shoving at the user,

00:24:24.501 --> 00:24:26.167
on a TV display.

00:24:26.167 --> 00:24:28.167
You want to limit
the length of content chunks.

00:24:28.167 --> 00:24:30.834
You know, more than a paragraph
is probably more

00:24:30.834 --> 00:24:33.934
than they're gonna want
to read at once on TV.

00:24:33.934 --> 00:24:36.000
And make it as big as--

00:24:36.000 --> 00:24:38.467
as you think
it could possibly be needed,

00:24:38.467 --> 00:24:40.934
and then you might even want
to make it a little bit bigger.

00:24:40.934 --> 00:24:42.501
Small text sizes,

00:24:42.501 --> 00:24:44.501
even the larger text size
example here,

00:24:44.501 --> 00:24:46.501
is on the small side
for TV content.

00:24:46.501 --> 00:24:48.067
It's just--I was putting

00:24:48.067 --> 00:24:51.000
a lot of content in that design
so I needed it.

00:24:51.000 --> 00:24:54.501
Typical onscreen font guidance,
um, still applies.

00:24:54.501 --> 00:24:56.501
Sans-serif fonts tend
to be more readable,

00:24:56.501 --> 00:24:59.000
and don't use a ton
of different fonts on a page

00:24:59.000 --> 00:25:01.000
because it's kind of jarring.

00:25:01.000 --> 00:25:04.000
On that vein, we do support
font embedding on Google TV,

00:25:04.000 --> 00:25:07.067
which is, uh, which is handy
for Web designs.

00:25:07.067 --> 00:25:10.000
Scrolling--

00:25:10.000 --> 00:25:12.434
one of my favorite topics
is scrolling

00:25:12.434 --> 00:25:14.067
because scrolling--

00:25:14.067 --> 00:25:16.000
you don't expect
your TV to scroll.

00:25:16.000 --> 00:25:18.934
Um, you don't expect to have
to scroll on your TV

00:25:18.934 --> 00:25:20.801
for a Web application.

00:25:20.801 --> 00:25:23.000
Um, in newspapers,
they have this concept

00:25:23.000 --> 00:25:25.000
called "above the fold"
or "below the fold."

00:25:25.000 --> 00:25:27.000
It's basically the fold
in the newspaper,

00:25:27.000 --> 00:25:29.000
whether you--when you have
to flip it over,

00:25:29.000 --> 00:25:31.501
that's a big deal for--
for the user,

00:25:31.501 --> 00:25:34.000
So anything important goes
on the first page.

00:25:34.000 --> 00:25:36.501
TV doesn't really have
a below the fold

00:25:36.501 --> 00:25:38.501
because if it--
if it's offscreen,

00:25:38.501 --> 00:25:40.334
I'm probably not
ever gonna see it.

00:25:40.334 --> 00:25:42.334
I'm not gonna think
to scroll down to it.

00:25:42.334 --> 00:25:45.400
So give visual cues to the user
if there's more content

00:25:45.400 --> 00:25:47.400
and make it very deliberate

00:25:47.400 --> 00:25:49.000
if you're trying to--to make

00:25:49.000 --> 00:25:52.033
a multipage
or large canvas design.

00:25:52.033 --> 00:25:54.000
On that same vein,

00:25:54.000 --> 00:25:56.167
um, have a very strong
focus model.

00:25:56.167 --> 00:25:59.734
So this is one that I also
kind of screwed up on

00:25:59.734 --> 00:26:03.501
on a couple of the prototypes
that I was building early on.

00:26:03.501 --> 00:26:05.767
You really want the user
to be able to see

00:26:05.767 --> 00:26:08.000
where they are in your design

00:26:08.000 --> 00:26:10.200
and what they can do
in your design.

00:26:10.200 --> 00:26:13.501
My--my example of how
to mess this up

00:26:13.501 --> 00:26:16.501
is actually one that's currently
shipping nearly everywhere,

00:26:16.501 --> 00:26:18.501
which is DVDs.

00:26:18.501 --> 00:26:20.167
I load a ton of DVDs.

00:26:20.167 --> 00:26:22.667
I have a 6-year-old daughter.
She watches lots of movies.

00:26:22.667 --> 00:26:24.167
She puts the DVD in,

00:26:24.167 --> 00:26:26.434
and you get to that page
where it says, you know,

00:26:26.434 --> 00:26:29.000
like, "Play," "Scene Selection,"
"Bonus Features,"

00:26:29.000 --> 00:26:31.000
and I keep having to, like,
use the arrow keys

00:26:31.000 --> 00:26:32.934
to figure out
where the cursor is

00:26:32.934 --> 00:26:34.734
because the coloring
is so subtle

00:26:34.734 --> 00:26:37.334
between the selected
and not-selected,

00:26:37.334 --> 00:26:40.801
um, I can't tell
which one is selected.

00:26:40.801 --> 00:26:42.300
Don't do that.

00:26:42.300 --> 00:26:44.501
Like, make it really obvious
this one is selected

00:26:44.501 --> 00:26:46.434
like in this design.

00:26:48.501 --> 00:26:50.267
In that same vein,

00:26:50.267 --> 00:26:53.501
the user is typically gonna use
the directional pad for control.

00:26:53.501 --> 00:26:56.334
Um, they're already used
to this kind of concept

00:26:56.334 --> 00:26:58.000
from their TV remote control,

00:26:58.000 --> 00:27:00.601
from their DVD
or Blu-ray player

00:27:00.601 --> 00:27:03.501
and, uh, and their gaming
console controller,

00:27:03.501 --> 00:27:05.067
for that matter.

00:27:05.067 --> 00:27:07.067
So thankfully, this is
really easy to support

00:27:07.067 --> 00:27:08.601
in the Web platform.

00:27:08.601 --> 00:27:10.167
It's just key presses.
It's arrow keys.

00:27:10.167 --> 00:27:12.167
In fact, you saw me use
the arrow keys

00:27:12.167 --> 00:27:13.968
in NewsGlide a few minutes ago.

00:27:13.968 --> 00:27:15.968
This is kind of the same thing.

00:27:15.968 --> 00:27:19.501
Um, it's actually useful
in desktop Web, as well.

00:27:19.501 --> 00:27:22.100
Uh, Google search results
support this.

00:27:22.100 --> 00:27:24.501
The Amazon Windowshop app
they released last fall

00:27:24.501 --> 00:27:26.501
uses arrow key navigation.

00:27:26.501 --> 00:27:29.000
And it actually kind of adds
a lot to the experience

00:27:29.000 --> 00:27:30.801
if you can use arrow keys,
as well,

00:27:30.801 --> 00:27:33.501
particularly for those of us
who like keyboard shortcuts.

00:27:33.501 --> 00:27:36.000
The problem with this

00:27:36.000 --> 00:27:40.167
is that the expected focus model
for TV

00:27:40.167 --> 00:27:41.834
is two-dimensional.

00:27:41.834 --> 00:27:44.167
Like, you expect to be able
to hit the "down" button

00:27:44.167 --> 00:27:47.567
and go down visually
to the next focusable item.

00:27:47.567 --> 00:27:50.033
And the Web platform
has this linear model

00:27:50.033 --> 00:27:51.934
of "Tab" and "Shift"-"Tab."

00:27:51.934 --> 00:27:54.000
And yes, I was around
when we invented that,

00:27:54.000 --> 00:27:55.868
and it was a bad idea then.

00:27:55.868 --> 00:27:58.000
It's really a bad idea
on the desktop Web, too.

00:27:58.000 --> 00:28:00.000
You'd like to be able
to navigate through links

00:28:00.000 --> 00:28:01.567
using the arrow keys,

00:28:01.567 --> 00:28:03.501
and there are add-ins
to do that.

00:28:03.501 --> 00:28:05.501
But you do have
to implement this part.

00:28:05.501 --> 00:28:07.000
We do have some tools for that.

00:28:07.000 --> 00:28:10.000
We'll talk about that
a little later.

00:28:10.000 --> 00:28:12.167
And finally, um,

00:28:12.167 --> 00:28:15.267
one of my biggest pet peeves
is the "Back" key

00:28:15.267 --> 00:28:16.901
in Web applications.

00:28:16.901 --> 00:28:18.901
When you're building
a Web application,

00:28:18.901 --> 00:28:20.901
if you don't think about

00:28:20.901 --> 00:28:23.834
what navigational model
is in your user's mind,

00:28:23.834 --> 00:28:26.000
they're gonna find it
really disconcerting

00:28:26.000 --> 00:28:28.000
when they go several steps
into your application,

00:28:28.000 --> 00:28:30.000
and they've opened up
what appears to be, like,

00:28:30.000 --> 00:28:32.801
windows inside your application
or things like that,

00:28:32.801 --> 00:28:34.801
and they hit "Back,"
and it takes them back

00:28:34.801 --> 00:28:36.567
to whatever Web site
they were on

00:28:36.567 --> 00:28:39.100
before they were looking
at your Web application.

00:28:39.100 --> 00:28:41.067
It's pretty easy to fix this.

00:28:41.067 --> 00:28:43.067
You set the window location hash

00:28:43.067 --> 00:28:44.734
and respond to hash
change events.

00:28:44.734 --> 00:28:46.267
Although I will caution--

00:28:46.267 --> 00:28:48.400
you don't want to do this
for every possible state change.

00:28:48.400 --> 00:28:49.934
Like, that's--that's overkill.

00:28:49.934 --> 00:28:51.934
You just want to do it
when it's a big thing

00:28:51.934 --> 00:28:56.000
like opening up a window
in your application.

00:28:56.000 --> 00:28:58.767
Now I want to point out
at this point

00:28:58.767 --> 00:29:00.834
everything that I've said so far

00:29:00.834 --> 00:29:02.834
actually applies to just TV.

00:29:02.834 --> 00:29:05.501
It doesn't matter whether
you're using a Google TV device

00:29:05.501 --> 00:29:07.501
or something else,

00:29:07.501 --> 00:29:09.501
you know, Mac mini running

00:29:09.501 --> 00:29:11.667
a different browser
attached to your TV.

00:29:11.667 --> 00:29:14.667
It's really more when
you're displaying on a TV,

00:29:14.667 --> 00:29:17.667
and you're using a remote
control kind of interface.

00:29:17.667 --> 00:29:19.667
This is the one point
in this presentation

00:29:19.667 --> 00:29:21.501
that is--that is
Google TV-specific.

00:29:21.501 --> 00:29:23.501
We auto-zoom Web content.

00:29:23.501 --> 00:29:25.834
So when you go to a Web site,
we're trying to make sure

00:29:25.834 --> 00:29:28.834
that we're using
the maximum possible space.

00:29:28.834 --> 00:29:31.167
And, um, if you want
to shut that off

00:29:31.167 --> 00:29:33.167
in your Web application,
you can,

00:29:33.167 --> 00:29:34.734
or if you want to control it,

00:29:34.734 --> 00:29:38.501
you can do that through CSS,
as well.

00:29:38.501 --> 00:29:41.000
Now on design guidance--

00:29:41.000 --> 00:29:42.501
so these are a little bit,

00:29:42.501 --> 00:29:44.501
like I said, they're
a little bit squishier.

00:29:44.501 --> 00:29:46.300
They're not "you should do this"

00:29:46.300 --> 00:29:48.501
or "this is how you do
this piece."

00:29:48.501 --> 00:29:50.334
The first and foremost thing

00:29:50.334 --> 00:29:54.000
is make use of every bit
of space you can on a TV display

00:29:54.000 --> 00:29:56.000
because you are sitting
10 feet back.

00:29:56.000 --> 00:29:58.000
You can't see things
that are really small.

00:29:58.000 --> 00:30:01.501
Um, you'll notice,
this is YouTube on the left

00:30:01.501 --> 00:30:03.501
and YouTube Leanback
on the right,

00:30:03.501 --> 00:30:06.501
and the video is full screen
in YouTube Leanback.

00:30:06.501 --> 00:30:08.334
I actually captured the controls

00:30:08.334 --> 00:30:10.000
because I pulled them
up on screen

00:30:10.000 --> 00:30:12.000
before I snapped the picture.

00:30:12.000 --> 00:30:14.501
So it has all the controls,
and it has a navigation system,

00:30:14.501 --> 00:30:16.167
but even that goes away

00:30:16.167 --> 00:30:18.334
when you're actually just--
just watching a video.

00:30:18.334 --> 00:30:20.968
You want to make the most use
of all the space you have.

00:30:20.968 --> 00:30:24.834
And secondly, be sure
to actually sit back

00:30:24.834 --> 00:30:26.834
and test your design on a TV

00:30:26.834 --> 00:30:28.834
or preferably multiple TVs.

00:30:28.834 --> 00:30:30.501
The reason why I say this is

00:30:30.501 --> 00:30:33.501
it's really not enough
just to run it on a TV.

00:30:33.501 --> 00:30:35.501
I have a TV on my desk

00:30:35.501 --> 00:30:37.501
sitting right next
to a computer monitor

00:30:37.501 --> 00:30:39.834
that's about the same size,

00:30:39.834 --> 00:30:42.000
and they actually--
like, my design's gonna look

00:30:42.000 --> 00:30:44.000
about the same
on either one of those.

00:30:44.000 --> 00:30:46.000
The problem is when I go

00:30:46.000 --> 00:30:49.334
and put it on my other
TV monitor and--or my other TV,

00:30:49.334 --> 00:30:51.334
and I sit back 10 feet away,

00:30:51.334 --> 00:30:53.033
things look very different.

00:30:53.033 --> 00:30:55.000
You know, I can't read the text
that I wrote,

00:30:55.000 --> 00:30:57.000
that I put up there
in 10-point font.

00:30:57.000 --> 00:31:00.000
I might need to have it
in 24-point font.

00:31:00.000 --> 00:31:03.167
So be sure to actually test it
in a TV situation,

00:31:03.167 --> 00:31:05.667
not just on a TV
when you're building TV designs.

00:31:05.667 --> 00:31:07.501
And this is a consistent thing.

00:31:07.501 --> 00:31:10.000
When you're thinking about
the design of your application,

00:31:10.000 --> 00:31:13.000
don't think, Well, I'm putting
this on a 1080p display,

00:31:13.000 --> 00:31:14.501
so I've got, you know,

00:31:14.501 --> 00:31:17.000
19 20x1080 pixels
to work with, right?

00:31:17.000 --> 00:31:20.434
It's not quite the same
as doing that on the desktop.

00:31:22.501 --> 00:31:25.501
Um, final bits
of--of design guidance,

00:31:25.501 --> 00:31:28.667
kind of TV app guidance,
on TV in particular--

00:31:28.667 --> 00:31:31.834
TV tends to be a very,
very dynamic experience,

00:31:31.834 --> 00:31:34.501
mostly because the users of TV
are very passive.

00:31:34.501 --> 00:31:36.667
The users of TV
are kind of like, you know,

00:31:36.667 --> 00:31:38.167
they're couch potatoes.

00:31:38.167 --> 00:31:39.667
They're not really paying--

00:31:39.667 --> 00:31:41.667
uh, they're not really driving
all that much.

00:31:41.667 --> 00:31:43.334
You want to make sure
to give them

00:31:43.334 --> 00:31:45.334
lots of visual feedback
about what's going on

00:31:45.334 --> 00:31:47.000
so they don't think
their computer--

00:31:47.000 --> 00:31:49.167
or their TV experience
has stalled out.

00:31:49.167 --> 00:31:51.167
Like, if you flip
to a TV channel

00:31:51.167 --> 00:31:52.801
and everything's static,

00:31:52.801 --> 00:31:55.400
you kind of say, "Well, hmm,

00:31:55.400 --> 00:31:58.400
"TV channel's computer
must have crashed.

00:31:58.400 --> 00:32:00.033
I'll flip to another channel."

00:32:00.033 --> 00:32:02.934
You need to make sure
not to let your users do that.

00:32:02.934 --> 00:32:04.734
So give visual feedback.

00:32:04.734 --> 00:32:07.000
If you're loading something,
show a loading icon.

00:32:07.000 --> 00:32:09.667
If something's gonna take
a few seconds, tell them that.

00:32:09.667 --> 00:32:12.334
You probably want
to give them directions, too,

00:32:12.334 --> 00:32:14.501
because this is kind of
a new paradigm.

00:32:14.501 --> 00:32:16.167
They don't know to hit "Down,"

00:32:16.167 --> 00:32:18.167
and that's what brings up
your tool bar, whatever.

00:32:18.167 --> 00:32:21.167
So make sure to give them a
splash screen or steps to that,

00:32:21.167 --> 00:32:24.167
or make it so that your controls
pop in very intuitively.

00:32:24.167 --> 00:32:28.000
You hit any key,
and they--they show up.

00:32:28.000 --> 00:32:30.167
And as I said,

00:32:30.167 --> 00:32:34.167
uh, experiences tend
to not be static on TV.

00:32:34.167 --> 00:32:36.501
If you flip on the news,

00:32:36.501 --> 00:32:38.501
um, and just watch the screen,

00:32:38.501 --> 00:32:40.667
not the person talking
but watch the screen,

00:32:40.667 --> 00:32:42.667
elements on the screen,

00:32:42.667 --> 00:32:44.934
most of them have, like,
dynamic backgrounds.

00:32:44.934 --> 00:32:47.501
They have subtle animations
going on in the background,

00:32:47.501 --> 00:32:50.000
or they have other things
that are moving underneath them

00:32:50.000 --> 00:32:51.667
to hold the user's interest.

00:32:51.667 --> 00:32:54.000
You probably want to replicate
that kind of effect.

00:32:54.000 --> 00:32:56.000
Use transitions to show, uh,

00:32:56.000 --> 00:32:58.534
to show motion
between different states.

00:33:00.801 --> 00:33:02.501
And so now we've talked

00:33:02.501 --> 00:33:05.501
about kind of the--the general
sets of guidance

00:33:05.501 --> 00:33:08.000
and the practical
and technical constraints.

00:33:08.000 --> 00:33:10.334
We want to talk
about the tools that we have

00:33:10.334 --> 00:33:14.000
to help people build, um,
TV-optimized experiences.

00:33:14.000 --> 00:33:17.734
The first one is if you want
to build a video content site.

00:33:17.734 --> 00:33:20.501
So you have a-a-a pool
of video content,

00:33:20.501 --> 00:33:23.834
and you want to get it up
and make it optimized for TV.

00:33:23.834 --> 00:33:26.334
We have a set of TV UI templates
to do this.

00:33:26.334 --> 00:33:28.501
These are implemented
in both HTML and Flash,

00:33:28.501 --> 00:33:30.501
and there's
two different templates.

00:33:30.501 --> 00:33:32.501
That's one on the left
and one on the right.

00:33:32.501 --> 00:33:34.067
They're really
just a different view

00:33:34.067 --> 00:33:36.501
of how you might want
to present your content.

00:33:36.501 --> 00:33:39.033
Um, both of these
are in HTML5 and Flash.

00:33:39.033 --> 00:33:41.501
Both of them support
directional pad navigation

00:33:41.501 --> 00:33:43.501
and the video playback controls,

00:33:43.501 --> 00:33:46.167
so like the "Play," "Pause,"
"Stop" buttons.

00:33:46.167 --> 00:33:49.501
Um, and we have these
site templates up on the--

00:33:49.501 --> 00:33:51.667
on code site,
so you can get them from there.

00:33:51.667 --> 00:33:54.100
There's a short link to them.

00:33:54.100 --> 00:33:57.501
But this is really only if you
want to build a top/down design,

00:33:57.501 --> 00:33:59.334
and you can rebrand this,
of course.

00:33:59.334 --> 00:34:00.868
That's the whole point,

00:34:00.868 --> 00:34:02.934
is you can put whatever
branding you want in it,

00:34:02.934 --> 00:34:04.734
use some styling to change it,

00:34:04.734 --> 00:34:07.000
but functionally,
it'll still work the same way.

00:34:07.000 --> 00:34:09.000
If you want to do more
than that,

00:34:09.000 --> 00:34:10.634
or you already have a site

00:34:10.634 --> 00:34:12.634
and you want to add
some optimization for it,

00:34:12.634 --> 00:34:15.501
we have a set
of--a set of UI libraries

00:34:15.501 --> 00:34:17.000
that can help you do that.

00:34:17.000 --> 00:34:19.000
For this, I'm gonna
hand you over to Dan,

00:34:19.000 --> 00:34:23.501
and he can talk
about what we have there.

00:34:23.501 --> 00:34:26.434
[applause]

00:34:28.834 --> 00:34:30.834
Lee: Great. Thank you, Chris.

00:34:30.834 --> 00:34:32.501
So, uh, as Chris mentioned,

00:34:32.501 --> 00:34:35.501
yeah, I'm gonna talk about
some of the Web UI libraries

00:34:35.501 --> 00:34:38.000
that we have, uh, for
you Web developers out there

00:34:38.000 --> 00:34:40.667
to help you with
your implementation

00:34:40.667 --> 00:34:42.834
with developing a 10-foot user--

00:34:42.834 --> 00:34:45.000
user interface for your TV apps.

00:34:45.000 --> 00:34:47.667
So there's two main UI libraries

00:34:47.667 --> 00:34:49.667
that we developed.

00:34:49.667 --> 00:34:52.000
And, um, just to give you
a little brief history--

00:34:52.000 --> 00:34:54.334
we launched these at the very
beginning of--of this year

00:34:54.334 --> 00:34:56.334
around the end of January.

00:34:56.334 --> 00:34:58.501
We had a blog post go out
on Google TV

00:34:58.501 --> 00:35:00.501
in the beginning of February,

00:35:00.501 --> 00:35:02.934
and there was two different
libraries that we introduced.

00:35:02.934 --> 00:35:04.567
And the main reason--
and the main--

00:35:04.567 --> 00:35:06.067
I think the primary goal

00:35:06.067 --> 00:35:08.067
that we wanted to make
of--of these projects

00:35:08.067 --> 00:35:11.334
was to really make,
uh, keyboard navigation

00:35:11.334 --> 00:35:13.334
much, much simpler and easier

00:35:13.334 --> 00:35:15.501
for you guys to develop
and to use.

00:35:15.501 --> 00:35:17.801
Um, keyboard navigation
is essentially

00:35:17.801 --> 00:35:19.834
what enables a D-pad, right,

00:35:19.834 --> 00:35:21.501
in your app--
in your application.

00:35:21.501 --> 00:35:23.000
As--as Chris mentioned,

00:35:23.000 --> 00:35:26.000
with developing your--
your Web app for Google TV,

00:35:26.000 --> 00:35:28.000
this is an extremely
critical piece

00:35:28.000 --> 00:35:31.000
to creating
an optimal user experience,

00:35:31.000 --> 00:35:34.000
um, with that optimal
user interaction, right?

00:35:34.000 --> 00:35:37.167
You want your users to be able
to navigate your site,

00:35:37.167 --> 00:35:39.667
your Web app,
using these arrow keys.

00:35:39.667 --> 00:35:43.000
And we found that this was not
always incredibly easy to do,

00:35:43.000 --> 00:35:46.000
especially if your UI
was a little bit more complex,

00:35:46.000 --> 00:35:48.000
so we had two different
UI libraries

00:35:48.000 --> 00:35:49.801
that you--that were
sort of derived

00:35:49.801 --> 00:35:51.501
of two different
common libraries

00:35:51.501 --> 00:35:53.501
that you guys might be
already familiar with.

00:35:53.501 --> 00:35:55.000
One is jQuery,

00:35:55.000 --> 00:35:57.067
and the other
is the Closure library.

00:35:57.067 --> 00:36:00.434
I want to talk about some of
the high-level summaries that--

00:36:00.434 --> 00:36:02.067
sort of the subtle differences

00:36:02.067 --> 00:36:04.400
that exist between
the two libraries

00:36:04.400 --> 00:36:06.400
to help you decide
which one to--

00:36:06.400 --> 00:36:08.501
is a better fit for you
as a developer.

00:36:08.501 --> 00:36:10.334
If you're already
a customer of--

00:36:10.334 --> 00:36:12.734
if you're already a developer
of the jQuery library,

00:36:12.734 --> 00:36:15.501
I think that's a pretty simple
choice down there for you.

00:36:15.501 --> 00:36:17.834
The jQuery library's probably
what makes most sense

00:36:17.834 --> 00:36:19.834
if that's what
you're already using

00:36:19.834 --> 00:36:22.000
within your
existing applications.

00:36:22.000 --> 00:36:25.334
Um, Closure library, if--
if you're--same reasons there.

00:36:25.334 --> 00:36:27.667
If you're using Closure library,
that's--that's awesome,

00:36:27.667 --> 00:36:29.501
um, and I would continue maybe

00:36:29.501 --> 00:36:31.501
checking out
that library instead.

00:36:31.501 --> 00:36:33.334
But let's say
you haven't used either,

00:36:33.334 --> 00:36:36.000
and you sort of want
to evaluate between the two.

00:36:36.000 --> 00:36:38.400
Here, I have--I'm gonna
just talk about a little bit

00:36:38.400 --> 00:36:40.000
some of the differences.

00:36:40.000 --> 00:36:42.000
And jQuery library requires
a little bit more JavaScript.

00:36:42.000 --> 00:36:44.000
So it's a little bit more
heavier on the JavaScript side,

00:36:44.000 --> 00:36:45.567
so it's gonna do a lot more,

00:36:45.567 --> 00:36:49.200
where you're gonna be sort of
configuring your library

00:36:49.200 --> 00:36:51.200
using JavaScript
a little bit more

00:36:51.200 --> 00:36:53.000
whereas the Closure library,

00:36:53.000 --> 00:36:56.501
you're sort of doing more
within your HTML markup.

00:36:56.501 --> 00:37:00.267
So you're essentially decorating
common HTML elements

00:37:00.267 --> 00:37:02.000
like--like DIV containers

00:37:02.000 --> 00:37:04.000
or unordered list containers

00:37:04.000 --> 00:37:06.334
or span elements and so forth

00:37:06.334 --> 00:37:09.334
and just decorating them
with special class names

00:37:09.334 --> 00:37:12.000
that the library
will then parse through

00:37:12.000 --> 00:37:14.000
and essentially, you know, do--

00:37:14.000 --> 00:37:15.567
apply some logic to that

00:37:15.567 --> 00:37:18.300
and include that within
your keyboard navigation.

00:37:18.300 --> 00:37:19.834
The jQuery library,

00:37:19.834 --> 00:37:23.000
instead, you'll be using things
like CSS selector strings,

00:37:23.000 --> 00:37:25.501
which if you're already
using jQuery

00:37:25.501 --> 00:37:27.501
you might be familiar with.

00:37:27.501 --> 00:37:29.834
And one additional thing
that it--it provides

00:37:29.834 --> 00:37:33.200
is we offer--which is currently
in beta, by the way--

00:37:33.200 --> 00:37:36.501
is a set of common UI controls,

00:37:36.501 --> 00:37:38.834
things like horizontal carousels

00:37:38.834 --> 00:37:41.000
like--like slider controls

00:37:41.000 --> 00:37:43.834
or the embedding of--of photos,
doing, like, a slide show,

00:37:43.834 --> 00:37:45.667
or embedding videos.

00:37:45.667 --> 00:37:48.000
It includes some library--some
additional libraries like that,

00:37:48.000 --> 00:37:50.000
which are part
of the jQuery UI library,

00:37:50.000 --> 00:37:52.334
and it integrates
keyboard navigation within that.

00:37:52.334 --> 00:37:54.801
So--so those are some
additional UI controls

00:37:54.801 --> 00:37:56.801
that the jQuery UI library
offers

00:37:56.801 --> 00:37:58.734
which the Closure library
doesn't.

00:37:58.734 --> 00:38:01.000
On the other hand,
the Closure UI library,

00:38:01.000 --> 00:38:03.501
however, offers you, um,

00:38:03.501 --> 00:38:06.868
you know, really, really raw
building blocks to build

00:38:06.868 --> 00:38:10.000
a really customized and really
complex user interface.

00:38:10.000 --> 00:38:13.000
So it--it contains, you know,
your building blocks

00:38:13.000 --> 00:38:15.667
as with like horizontal
and vertical containers,

00:38:15.667 --> 00:38:17.667
with scrollable components
within,

00:38:17.667 --> 00:38:20.501
but it also contains extensions
of those components

00:38:20.501 --> 00:38:22.334
such as buttons.

00:38:22.334 --> 00:38:24.667
Um, you can sort of create
links, you know,

00:38:24.667 --> 00:38:28.501
where it immediately can
navigate to a different URL

00:38:28.501 --> 00:38:30.667
if--if the "Enter" key
gets pressed,

00:38:30.667 --> 00:38:32.167
and they can listen for that.

00:38:32.167 --> 00:38:34.167
Um, it has menu controls,
as well.

00:38:34.167 --> 00:38:35.734
So these are--these--

00:38:35.734 --> 00:38:37.934
and I'll show you some examples
of this later on,

00:38:37.934 --> 00:38:39.934
but those are some
of the subtle differences,

00:38:39.934 --> 00:38:41.501
I'd say, between the two.

00:38:41.501 --> 00:38:43.167
So the Closure library's

00:38:43.167 --> 00:38:45.400
a little bit more sort of
starting from the ground up,

00:38:45.400 --> 00:38:48.334
where the jQuery, I think,
provides you with a little bit--

00:38:48.334 --> 00:38:52.000
it tries to do
a little bit more for you.

00:38:52.000 --> 00:38:54.000
There's three main--
three main steps,

00:38:54.000 --> 00:38:56.834
uh, in getting started on
using these--these libraries

00:38:56.834 --> 00:38:59.167
if you want to use them,

00:38:59.167 --> 00:39:01.501
and really--they're
really highlighted here,

00:39:01.501 --> 00:39:04.000
and there's stuff that if you're
a Web developer out there,

00:39:04.000 --> 00:39:06.501
this is stuff that you're
probably already familiar with.

00:39:06.501 --> 00:39:09.501
Um, but really, it's these
simple three steps

00:39:09.501 --> 00:39:11.501
where you're using HTML markup

00:39:11.501 --> 00:39:14.834
to define the structure
of--of your UI.

00:39:14.834 --> 00:39:18.167
So you are gonna specify,
you know, using HTML,

00:39:18.167 --> 00:39:20.501
you know, which component,
what are your components

00:39:20.501 --> 00:39:23.501
that you want selectable
with the cursor, you know,

00:39:23.501 --> 00:39:25.501
and then how do you--
do you want them

00:39:25.501 --> 00:39:28.501
to be selectable horizontally,
using left and right keys,

00:39:28.501 --> 00:39:30.501
versus up/down.

00:39:30.501 --> 00:39:32.501
Second is CSS.

00:39:32.501 --> 00:39:34.501
You're gonna be using CSS3

00:39:34.501 --> 00:39:36.501
because you know
you're developing

00:39:36.501 --> 00:39:38.000
your Web app on Chrome,

00:39:38.000 --> 00:39:40.000
and that's a huge benefit,
as Chris mentioned,

00:39:40.000 --> 00:39:42.000
because you're only dealing
with one browser here.

00:39:42.000 --> 00:39:44.834
You know what HTML5 capabilities
are available.

00:39:44.834 --> 00:39:46.834
You know what WebKit transitions

00:39:46.834 --> 00:39:48.834
and transforms you can use.

00:39:48.834 --> 00:39:51.334
And so you're gonna
really be using CSS a lot

00:39:51.334 --> 00:39:54.000
to present and help you
sort of visualize--

00:39:54.000 --> 00:39:57.667
apply visualization to these--
these, you know,

00:39:57.667 --> 00:39:59.501
these--these HTML components

00:39:59.501 --> 00:40:01.501
that you're adding
within your Web app.

00:40:01.501 --> 00:40:03.501
And then lastly,
you're using JavaScript

00:40:03.501 --> 00:40:05.501
to really initialize--

00:40:05.501 --> 00:40:07.501
it's really used to initialize
the library,

00:40:07.501 --> 00:40:10.834
initialize the keyboard
navigation to be active,

00:40:10.834 --> 00:40:14.501
to essentially parse through
your HTML DOM, for example,

00:40:14.501 --> 00:40:16.834
and look for those
special class names

00:40:16.834 --> 00:40:18.501
or select all the, you know,

00:40:18.501 --> 00:40:21.501
all of the nodes that match
the CSS selective strings

00:40:21.501 --> 00:40:23.501
and then to--and then

00:40:23.501 --> 00:40:26.501
to make them keyboard navigable.

00:40:26.501 --> 00:40:28.434
So here's--here's, uh,

00:40:28.434 --> 00:40:30.434
the next, you know, few set
of slides, I want to--

00:40:30.434 --> 00:40:32.434
I want to go over a little bit
more in depth, right,

00:40:32.434 --> 00:40:36.000
like the different steps in
terms of using each library.

00:40:36.000 --> 00:40:38.000
So I want to start with jQuery,

00:40:38.000 --> 00:40:40.501
and this is a little bit of a,
you know, a visual diagram

00:40:40.501 --> 00:40:42.501
of--of what may be--
what the zone--

00:40:42.501 --> 00:40:45.501
you know, what--how you would
sort of lay out your structure.

00:40:45.501 --> 00:40:47.501
Let's say you wanted to use
the slider, right?

00:40:47.501 --> 00:40:51.000
So there's a concept of--
of keyboard behavior zones,

00:40:51.000 --> 00:40:53.033
and these zones are essentially

00:40:53.033 --> 00:40:55.000
nothing more
than HTML containers,

00:40:55.000 --> 00:40:57.834
so I typically use these
with developments

00:40:57.834 --> 00:41:00.434
or a UL, unordered list element.

00:41:00.434 --> 00:41:02.667
And then, you know,
within each zone,

00:41:02.667 --> 00:41:04.834
you can contain a list

00:41:04.834 --> 00:41:06.834
of a variety of different
HTML components,

00:41:06.834 --> 00:41:09.000
which can--which are, again,
are just HTML elements

00:41:09.000 --> 00:41:11.000
that you're already
familiar with.

00:41:11.000 --> 00:41:13.000
They can be image tags.
They can be paragraph tags.

00:41:13.000 --> 00:41:14.567
You can do whatever you want.

00:41:14.567 --> 00:41:16.434
And you're essentially
gonna identify--

00:41:16.434 --> 00:41:19.434
you're gonna create some way
to indentify those components

00:41:19.434 --> 00:41:21.434
within each zone.

00:41:21.434 --> 00:41:23.434
And each zone
is essentially--

00:41:23.434 --> 00:41:26.367
um, you know, can be scrolled--

00:41:26.367 --> 00:41:30.000
it can be selected, you know,
left or right,

00:41:30.000 --> 00:41:32.000
depending on whether or not

00:41:32.000 --> 00:41:34.501
you want them to be selected
horizontally or vertically.

00:41:34.501 --> 00:41:36.501
Um, and so in
your jQuery library,

00:41:36.501 --> 00:41:39.000
you're essentially
in your HTML structure

00:41:39.000 --> 00:41:41.000
going to be setting up,
you know, different--

00:41:41.000 --> 00:41:44.000
different zones with different
selectable components within.

00:41:44.000 --> 00:41:45.734
One added benefit

00:41:45.734 --> 00:41:47.734
that the jQuery library
takes care of for you

00:41:47.734 --> 00:41:50.734
is that when you're navigating
up and down between zones,

00:41:50.734 --> 00:41:53.934
it's automatically gonna
remember the last selected item

00:41:53.934 --> 00:41:55.434
within each zone,

00:41:55.434 --> 00:41:57.067
so that's something
that's convenient

00:41:57.067 --> 00:41:59.434
that the library
takes care of for you.

00:41:59.434 --> 00:42:02.501
The last optional feature,
which I want to just mention,

00:42:02.501 --> 00:42:05.834
is really great for,
uh, quick prototyping.

00:42:05.834 --> 00:42:09.000
So let's say you have already
an existing Web site

00:42:09.000 --> 00:42:11.334
or a Web app
that you want to see what it--

00:42:11.334 --> 00:42:13.334
you know, you want
to quickly enable

00:42:13.334 --> 00:42:16.167
keyboard navigation
on your Web app.

00:42:16.167 --> 00:42:17.934
The jQuery UI library provides

00:42:17.934 --> 00:42:19.601
something called
a Geometry feature.

00:42:19.601 --> 00:42:22.501
So you can toggle this flag
called useGeometry

00:42:22.501 --> 00:42:24.067
and set it to true,

00:42:24.067 --> 00:42:26.501
and when it does that,
it'll sort of--

00:42:26.501 --> 00:42:29.067
you know, based on, you know,
an Euclidean--

00:42:29.067 --> 00:42:31.267
it uses an Euclidean
distance algorithm,

00:42:31.267 --> 00:42:34.033
and it tries to calculate,
What's the next closest item

00:42:34.033 --> 00:42:37.501
to the right, top, bottom,
or left of this item

00:42:37.501 --> 00:42:39.334
that I'm currently at?

00:42:39.334 --> 00:42:41.334
And so when the user
hits "Right,"

00:42:41.334 --> 00:42:44.501
it'll try its best to select
the next most intuitive element

00:42:44.501 --> 00:42:46.501
that it should go to.

00:42:46.501 --> 00:42:48.501
Like I said, this is great
for prototyping.

00:42:48.501 --> 00:42:50.734
I don't--I wouldn't recommend
leaving it turned on

00:42:50.734 --> 00:42:52.734
if you're going
to full production

00:42:52.734 --> 00:42:55.000
because there's,
you know, visual--

00:42:55.000 --> 00:42:58.334
potentially maybe
some visual differences

00:42:58.334 --> 00:43:01.834
maybe that you're just sort of
less in control over

00:43:01.834 --> 00:43:04.667
exactly where the focus
is gonna move to next.

00:43:04.667 --> 00:43:07.033
So, uh, it's great
for prototyping,

00:43:07.033 --> 00:43:10.167
um, but not meant
for full production.

00:43:10.167 --> 00:43:12.501
Here's an example of, uh,

00:43:12.501 --> 00:43:14.501
of the HTML structure that you--

00:43:14.501 --> 00:43:17.000
that--one example
of what it might look like.

00:43:17.000 --> 00:43:20.000
Let's say you wanted to build
some interface.

00:43:20.000 --> 00:43:21.934
Um, here's a concept.

00:43:21.934 --> 00:43:23.934
This is just HTML markup here,

00:43:23.934 --> 00:43:26.167
so you're essentially
creating two zones--

00:43:26.167 --> 00:43:28.167
I'm essentially
creating two zones here,

00:43:28.167 --> 00:43:30.000
a zone one and a zone two.

00:43:30.000 --> 00:43:32.667
Within the zone,
I'm defining a set of rows.

00:43:32.667 --> 00:43:36.334
I can have one, two,
as many item rows

00:43:36.334 --> 00:43:38.334
as--as poss--as I want.

00:43:38.334 --> 00:43:41.501
And I'm setting a class--
a special class name

00:43:41.501 --> 00:43:43.167
called "item-row,"

00:43:43.167 --> 00:43:45.334
which I'm gonna be using
CSS selective strings

00:43:45.334 --> 00:43:48.334
to tell the jQuery UI library
"Here are my rows."

00:43:48.334 --> 00:43:51.000
And my rows are navigable
horizontally from left to right.

00:43:51.000 --> 00:43:54.934
Within each row, I'm embedding
individual components

00:43:54.934 --> 00:43:58.934
that I'm also identifying
using semantic class names,

00:43:58.934 --> 00:44:01.334
so I'm calling it
a class "item,"

00:44:01.334 --> 00:44:03.334
and I'm saying for those items,

00:44:03.334 --> 00:44:06.000
I want those
to be focusable, right?

00:44:06.000 --> 00:44:10.000
So--so you can imagine,
with this sort of a structure,

00:44:10.000 --> 00:44:12.501
you can really--
depending on, you know, how--

00:44:12.501 --> 00:44:15.000
the sizing you would
control using CSS,

00:44:15.000 --> 00:44:18.501
you know, your width and height
rules and so forth.

00:44:18.501 --> 00:44:21.501
Um, but you can really do
a lot of nesting

00:44:21.501 --> 00:44:23.501
to create a variety
of different rows

00:44:23.501 --> 00:44:27.000
and then different components--
selectable components within.

00:44:27.000 --> 00:44:29.000
I wanted to just,
again, mention,

00:44:29.000 --> 00:44:31.501
you know, that CSS
is incredibly important

00:44:31.501 --> 00:44:35.334
in terms of laying out your--
your HTML

00:44:35.334 --> 00:44:37.501
and--and presenting them
to the user

00:44:37.501 --> 00:44:40.834
to help visualize how you want
your items to be navigable.

00:44:40.834 --> 00:44:42.667
So, for example,

00:44:42.667 --> 00:44:45.000
if you can read some
of the CSS rules here--

00:44:45.000 --> 00:44:47.200
you don't have to look through
all of them--

00:44:47.200 --> 00:44:49.501
but, you know, I'm applying
everything from some margins

00:44:49.501 --> 00:44:51.834
to, you know, some dimensions,
width and height,

00:44:51.834 --> 00:44:55.501
and also border radiuses
and so forth.

00:44:55.501 --> 00:44:57.501
Last--the last step
which I mentioned--

00:44:57.501 --> 00:44:59.501
you know, there was three steps,

00:44:59.501 --> 00:45:01.734
and JavaScript is--is what
you're gonna be using

00:45:01.734 --> 00:45:04.501
to initialize
keyboard navigation

00:45:04.501 --> 00:45:07.000
for, uh, your HTML markup,

00:45:07.000 --> 00:45:09.934
which has already been set up
in the way I just showed you.

00:45:09.934 --> 00:45:11.501
And so this is an example.

00:45:11.501 --> 00:45:13.501
This is just a code snippet

00:45:13.501 --> 00:45:15.501
of how you would essentially
create new instances

00:45:15.501 --> 00:45:17.834
of a key behavior zone object.

00:45:17.834 --> 00:45:19.834
Within the key behavior
zone object,

00:45:19.834 --> 00:45:23.167
contains a variety
of different object parameters

00:45:23.167 --> 00:45:27.334
that you're gonna use to
configure and tell the library

00:45:27.334 --> 00:45:30.501
how to identify which components
are selectable,

00:45:30.501 --> 00:45:33.501
which components are rows
and so forth.

00:45:33.501 --> 00:45:35.334
Some things I want
to highlight here

00:45:35.334 --> 00:45:37.334
is the CSS selective strings,
right?

00:45:37.334 --> 00:45:40.501
So I'm telling the library
for every--every--

00:45:40.501 --> 00:45:44.000
every, uh, every HTML element
that has a class name item,

00:45:44.000 --> 00:45:46.000
I want that to be selectable.

00:45:46.000 --> 00:45:49.000
Um, I'm going to tell it,
you know, every--every--

00:45:49.000 --> 00:45:52.667
every class name that
has a specified item-row,

00:45:52.667 --> 00:45:55.167
that's gonna be represented
as a row.

00:45:55.167 --> 00:45:57.501
The selection class's property

00:45:57.501 --> 00:46:00.000
is--is what you're gonna be
using to tell the library,

00:46:00.000 --> 00:46:02.000
you know, when--when my user

00:46:02.000 --> 00:46:04.501
is actually focused
on a specific element,

00:46:04.501 --> 00:46:06.501
it's going to apply--

00:46:06.501 --> 00:46:09.501
essentially append
this specific class name

00:46:09.501 --> 00:46:11.167
to that element.

00:46:11.167 --> 00:46:14.501
So in my CSS, I can then give it
some special styling

00:46:14.501 --> 00:46:17.000
to make it very apparent
to the user

00:46:17.000 --> 00:46:19.167
where my current focus is.

00:46:19.167 --> 00:46:22.501
And lastly, the last example,
is key mapping.

00:46:22.501 --> 00:46:24.567
There's a key mapping property

00:46:24.567 --> 00:46:27.534
where you can specify a variety
of different key codes.

00:46:27.534 --> 00:46:29.934
So these key codes are available
on the Web, right?

00:46:29.934 --> 00:46:33.000
And--and 13 is the key code
that register--

00:46:33.000 --> 00:46:35.801
that fires when the user
hits the "Enter" key.

00:46:35.801 --> 00:46:37.501
And I'm telling
jQuery library here

00:46:37.501 --> 00:46:39.934
to call my "Enter"
callback function,

00:46:39.934 --> 00:46:41.934
which I have to find
somewhere else,

00:46:41.934 --> 00:46:45.000
to handle that--that event
when it gets fired.

00:46:45.000 --> 00:46:46.801
And at the bottom there--

00:46:46.801 --> 00:46:49.000
the bottom box essentially
just shows how you--

00:46:49.000 --> 00:46:51.067
how it essentially ties
everything together.

00:46:51.067 --> 00:46:54.801
So we have a-a top level--
a key controller object,

00:46:54.801 --> 00:46:56.400
which you're creating
a new instance of,

00:46:56.400 --> 00:46:58.000
and then you're creating--

00:46:58.000 --> 00:47:00.767
you're adding the two behavior
zones that I created to it,

00:47:00.767 --> 00:47:02.801
and then you're calling
a start method

00:47:02.801 --> 00:47:04.434
with the very first zone

00:47:04.434 --> 00:47:07.334
that you want
to start the selection on.

00:47:07.334 --> 00:47:10.167
So that's--that's essentially
a very, very quick

00:47:10.167 --> 00:47:12.434
and dumb-downed
sort of code snippet

00:47:12.434 --> 00:47:15.934
and how easy it is to enable
keyboard navigation

00:47:15.934 --> 00:47:17.934
on your Web app.

00:47:17.934 --> 00:47:20.501
I want to go through
the same set of steps now

00:47:20.501 --> 00:47:22.501
with the--with the exception

00:47:22.501 --> 00:47:24.501
of now we're talking
about Closure library,

00:47:24.501 --> 00:47:27.501
because--just to show you
a little bit subtle differences

00:47:27.501 --> 00:47:29.000
between the two.

00:47:29.000 --> 00:47:31.000
And this is sort of
the conceptual model

00:47:31.000 --> 00:47:33.033
of how the Closure UI library
works instead.

00:47:33.033 --> 00:47:34.734
So we had the concept

00:47:34.734 --> 00:47:37.000
of horizontal and vertical
building blocks.

00:47:37.000 --> 00:47:40.667
So these are, again,
nothing but HTML containers.

00:47:40.667 --> 00:47:43.000
And one of the key differences

00:47:43.000 --> 00:47:45.334
between the jQuery
and the Closure

00:47:45.334 --> 00:47:47.501
is that the jQuery library,
like I said,

00:47:47.501 --> 00:47:51.000
you're--you're specifying
in your--in your constructor,

00:47:51.000 --> 00:47:53.000
you know, which--which objects,

00:47:53.000 --> 00:47:55.667
which HTML elements
I want to include

00:47:55.667 --> 00:47:57.501
using CSS selective strings.

00:47:57.501 --> 00:47:59.501
But in the Closure UI library,

00:47:59.501 --> 00:48:01.934
you're essentially doing this
directly within your markup.

00:48:01.934 --> 00:48:03.601
So in your--in your HTML markup,

00:48:03.601 --> 00:48:06.000
you're--you're specifying
class names,

00:48:06.000 --> 00:48:08.033
these special class names,

00:48:08.033 --> 00:48:10.834
that all start out
with a "tv-" prefix.

00:48:10.834 --> 00:48:13.334
So things like
"tv-container-horizontal"

00:48:13.334 --> 00:48:15.400
will indicate to the library

00:48:15.400 --> 00:48:18.901
that I want this container
to be scrollable--

00:48:18.901 --> 00:48:22.334
to be navigable left--
using left and right keys.

00:48:22.334 --> 00:48:24.334
It also contains--

00:48:24.334 --> 00:48:26.667
we also have special class names
to identify

00:48:26.667 --> 00:48:29.334
which containers
can be scrollable.

00:48:29.334 --> 00:48:31.334
And so within your CSS,

00:48:31.334 --> 00:48:35.000
if you specify
like a smaller viewport window,

00:48:35.000 --> 00:48:37.000
so a small width
and a small height

00:48:37.000 --> 00:48:39.501
that only shows, let's say,
three components inside,

00:48:39.501 --> 00:48:41.033
you can specify that

00:48:41.033 --> 00:48:43.000
to be a scrolling container
very easily,

00:48:43.000 --> 00:48:45.501
similarly by applying
a class name.

00:48:45.501 --> 00:48:47.334
And then I briefly talked

00:48:47.334 --> 00:48:50.801
about how there's different
extensions of TV components,

00:48:50.801 --> 00:48:53.667
which are--are all
gonna be selectable

00:48:53.667 --> 00:48:55.801
with your keyboard navigation,

00:48:55.801 --> 00:48:57.801
and this could include things

00:48:57.801 --> 00:49:01.501
like buttons and links
and also input, for example.

00:49:01.501 --> 00:49:04.000
So what does the HTML markup
look like

00:49:04.000 --> 00:49:06.000
for this library instead?

00:49:06.000 --> 00:49:08.000
So this is
a very similar example.

00:49:08.000 --> 00:49:10.501
Uh, I have essentially
two snippets

00:49:10.501 --> 00:49:14.501
of, uh, a UL element
with class name--

00:49:14.501 --> 00:49:18.167
the special class names
"tv-container-horizontal"

00:49:18.167 --> 00:49:20.000
and "tv-container-vertical."

00:49:20.000 --> 00:49:22.000
And that's essentially saying
to the library

00:49:22.000 --> 00:49:23.501
"I want this container

00:49:23.501 --> 00:49:25.501
"to be navigable
using left/right keys

00:49:25.501 --> 00:49:27.501
"and then the other one
to be navigable

00:49:27.501 --> 00:49:29.067
using up and down arrow keys."

00:49:29.067 --> 00:49:31.067
Within my--my horizontal
and vertical containers,

00:49:31.067 --> 00:49:33.067
I have three
different components,

00:49:33.067 --> 00:49:35.167
which I'm specifying
as a TV component,

00:49:35.167 --> 00:49:36.834
and that's telling the library

00:49:36.834 --> 00:49:38.834
that I want this
to be selectable.

00:49:38.834 --> 00:49:40.834
If I had additional elements
in there

00:49:40.834 --> 00:49:42.834
that were not labeled
with that class,

00:49:42.834 --> 00:49:44.834
then the library
wouldn't recognize it

00:49:44.834 --> 00:49:46.834
and include it in that container

00:49:46.834 --> 00:49:49.334
as they're navigating
with their keyboard.

00:49:49.334 --> 00:49:51.334
And then the last thing
on the right,

00:49:51.334 --> 00:49:53.834
I show you, again, some examples
of the CSS styling rules

00:49:53.834 --> 00:49:57.000
that is really critical
to helping to visualize,

00:49:57.000 --> 00:50:01.167
uh, or represents these--
these HT--this markup

00:50:01.167 --> 00:50:04.501
and make it look sort of
the way you want it to navigate.

00:50:04.501 --> 00:50:07.501
So for example, for--for
all list elements

00:50:07.501 --> 00:50:09.334
within my horizontal container,

00:50:09.334 --> 00:50:11.334
I want to apply a display--

00:50:11.334 --> 00:50:13.501
an inline block display rule,

00:50:13.501 --> 00:50:16.000
which is gonna stack them,
you know--

00:50:16.000 --> 00:50:19.334
instead of stacking them
one below each other,

00:50:19.334 --> 00:50:22.167
I'm gonna put them
next to each other instead.

00:50:22.167 --> 00:50:25.000
On this slide, I wanted
to also show

00:50:25.000 --> 00:50:27.000
that as an example, uh,

00:50:27.000 --> 00:50:30.501
TV container--like, horizontal
and vertical containers

00:50:30.501 --> 00:50:34.501
are not, uh, do not have to be
stand-alone on themselves.

00:50:34.501 --> 00:50:38.334
You can actually use them
to nest within each other,

00:50:38.334 --> 00:50:40.501
um, and this is actually part

00:50:40.501 --> 00:50:43.501
of how you would actually build
a complex UI with this.

00:50:43.501 --> 00:50:45.834
'Cause you can imagine you have
a variety of different--

00:50:45.834 --> 00:50:49.667
maybe you have one top-level
vertical container

00:50:49.667 --> 00:50:51.334
that you want to be able

00:50:51.334 --> 00:50:53.334
to create, essentially,
different zones almost,

00:50:53.334 --> 00:50:55.667
similar to what--what
I showed you with jQuery,

00:50:55.667 --> 00:50:58.167
and create a variety
of different rows, um,

00:50:58.167 --> 00:51:02.167
that you're creating
using the horizontal containers.

00:51:02.167 --> 00:51:04.868
The next point I wanted
to talk about

00:51:04.868 --> 00:51:06.868
is I mentioned
scrolling containers.

00:51:06.868 --> 00:51:09.801
So if I have, uh, a list of--

00:51:09.801 --> 00:51:11.501
a long list of elements,

00:51:11.501 --> 00:51:14.501
TV components within
a scrolling container,

00:51:14.501 --> 00:51:17.334
such as--like, that's going
vertically in this example,

00:51:17.334 --> 00:51:19.000
and let's say I use CSS

00:51:19.000 --> 00:51:22.801
to minimize the viewport
of my vertical container

00:51:22.801 --> 00:51:25.167
to only show three components
at a time.

00:51:25.167 --> 00:51:28.167
I can essentially just wrap
all my child components

00:51:28.167 --> 00:51:30.934
around a special, uh, class name

00:51:30.934 --> 00:51:32.934
called
"tv-container-start-scroll,"

00:51:32.934 --> 00:51:34.501
and as I'm scrolling down,

00:51:34.501 --> 00:51:36.501
the library
will magically enable this

00:51:36.501 --> 00:51:39.934
so that if--as the user
heads down on the arrow keys,

00:51:39.934 --> 00:51:41.501
it's going to always maintain--

00:51:41.501 --> 00:51:44.501
it's gonna--it's--
it's gonna scroll--

00:51:44.501 --> 00:51:47.501
the vertical container's
gonna translate it

00:51:47.501 --> 00:51:49.667
using WebKit transforms

00:51:49.667 --> 00:51:53.000
to move down to--to show
the next, you know,

00:51:53.000 --> 00:51:55.501
the next component that--
that's below it.

00:51:55.501 --> 00:51:57.501
And so it just kind of
works magically,

00:51:57.501 --> 00:52:00.133
and it really--
it really is up to you

00:52:00.133 --> 00:52:02.334
to use, uh, CSS rules

00:52:02.334 --> 00:52:05.501
to--to enable the interaction

00:52:05.501 --> 00:52:08.334
to appear this way.

00:52:08.334 --> 00:52:10.334
And lastly, JavaScript is--

00:52:10.334 --> 00:52:12.334
this is the last piece
of JavaScript

00:52:12.334 --> 00:52:15.334
that you're really gonna be
using to enable this library

00:52:15.334 --> 00:52:17.334
to sort of initialize

00:52:17.334 --> 00:52:19.667
and scan through your HTML DOM

00:52:19.667 --> 00:52:21.667
and look for these
special class names

00:52:21.667 --> 00:52:25.667
and then include it within
your keyboard navigation scheme.

00:52:25.667 --> 00:52:27.667
So essentially,
what I'm showing here--

00:52:27.667 --> 00:52:29.834
there's a single method
that you're gonna be calling

00:52:29.834 --> 00:52:31.834
called "tv.ui.decorate,"

00:52:31.834 --> 00:52:35.000
and within that, you're passing
in the route parent HTML node

00:52:35.000 --> 00:52:37.000
where it's then gonna
scan through

00:52:37.000 --> 00:52:39.000
all of his child elements
and look for these--

00:52:39.000 --> 00:52:42.801
these specially decorated
class names.

00:52:42.801 --> 00:52:44.334
And then at the bottom there,

00:52:44.334 --> 00:52:46.334
you're essentially
just calling "tryFocus"

00:52:46.334 --> 00:52:47.934
on the first element

00:52:47.934 --> 00:52:51.667
that you want to start out
your focus on.

00:52:51.667 --> 00:52:54.400
So I want to just show
really quick

00:52:54.400 --> 00:52:56.400
a few demos, uh,

00:52:56.400 --> 00:52:59.167
of essentially
very similar interfaces,

00:52:59.167 --> 00:53:01.100
but I wanted to show
some building blocks

00:53:01.100 --> 00:53:04.934
that are using both the Closure
library and the jQuery.

00:53:04.934 --> 00:53:07.534
I think visually,
they're--they're not

00:53:07.534 --> 00:53:09.501
going to necessarily appear
very different,

00:53:09.501 --> 00:53:11.167
but they're both--

00:53:11.167 --> 00:53:13.567
it just goes to show
that you can really accomplish

00:53:13.567 --> 00:53:16.834
the same--
very similar interfaces

00:53:16.834 --> 00:53:18.400
with both libraries,

00:53:18.400 --> 00:53:20.334
that it's really
a matter of taste

00:53:20.334 --> 00:53:23.434
and depending on
what it is you want to do.

00:53:28.934 --> 00:53:30.934
Am I, uh, connected?

00:53:30.934 --> 00:53:33.868
Wilson: [speaking indistinctly]

00:53:40.701 --> 00:53:43.601
Lee: I could have had this...

00:53:45.834 --> 00:53:48.767
Lee: Could be I lost
our internet connection.

00:53:56.501 --> 00:53:58.200
Hmm.

00:54:04.000 --> 00:54:07.434
I'm gonna try this again.
Mm...

00:54:15.667 --> 00:54:19.200
Are you on Wi-Fi?
Let me try this.

00:54:27.934 --> 00:54:29.934
[man speaking indistinctly]

00:54:29.934 --> 00:54:32.000
Lee: [laughs]
That's a good request.

00:54:32.000 --> 00:54:34.501
Uh, I'll have karaoke
for you afterwards

00:54:34.501 --> 00:54:37.167
in the Sandbox area.
[laughs]

00:54:37.167 --> 00:54:40.667
I'll take requests, too.
[chuckles]

00:54:40.667 --> 00:54:43.000
Wilson: All right.

00:54:43.000 --> 00:54:45.000
Lee: Okay, um,

00:54:45.000 --> 00:54:47.534
so unfortunately,
we're having some Wi-Fi--

00:54:47.534 --> 00:54:49.501
or--or...
Wilson: Wired.

00:54:49.501 --> 00:54:52.000
Lee: Wired
internet connection issues.

00:54:52.000 --> 00:54:54.968
Um, if you go to that--
that go link, um,

00:54:54.968 --> 00:54:58.000
you can actually check out
some of the demos yourself.

00:54:58.000 --> 00:55:01.934
And all of--you can navigate
the entire demo site

00:55:01.934 --> 00:55:03.934
using, uh, using keyboard,

00:55:03.934 --> 00:55:05.501
and that's the whole point,
right?

00:55:05.501 --> 00:55:08.000
And so it's actually
a really good--good exercise

00:55:08.000 --> 00:55:09.934
for you to check out
those demos,

00:55:09.934 --> 00:55:11.734
look at
the various examples within,

00:55:11.734 --> 00:55:13.334
and then look at the--
view the source,

00:55:13.334 --> 00:55:16.501
and you'll see how simple
the HTML markup actually looks,

00:55:16.501 --> 00:55:18.667
um, and then you'll see
the JavaScript library--

00:55:18.667 --> 00:55:21.300
the calling functions
which I showed you here.

00:55:21.300 --> 00:55:23.000
So, uh, so, thank you,

00:55:23.000 --> 00:55:26.000
and then I guess
I'll give it back to Chris.

00:55:26.000 --> 00:55:29.167
Wilson: Thanks, Dan.
[applause]

00:55:29.167 --> 00:55:32.334
Wilson: So--thanks.

00:55:32.334 --> 00:55:35.434
So really, what we're asking
people to do is to think about

00:55:35.434 --> 00:55:38.434
how the applications you're
already building might work

00:55:38.434 --> 00:55:40.434
in the TV space
in the living room.

00:55:40.434 --> 00:55:42.100
Think about what
new applications

00:55:42.100 --> 00:55:45.667
actually you could build
because you're in that space.

00:55:45.667 --> 00:55:48.334
And also, I personally believe

00:55:48.334 --> 00:55:50.334
there are a lot of lessons
we can learn

00:55:50.334 --> 00:55:52.000
about how to build
better experiences

00:55:52.000 --> 00:55:53.801
that work on desktop and mobile

00:55:53.801 --> 00:55:56.501
and are more effective
in those spaces, as well,

00:55:56.501 --> 00:55:58.501
once you look at how that works

00:55:58.501 --> 00:56:00.367
when you're kind of
kicking back.

00:56:00.367 --> 00:56:02.434
And finally, you know,
get a Google TV device,

00:56:02.434 --> 00:56:04.067
start building applications.

00:56:04.067 --> 00:56:06.067
Um, if you have applications
you want to build

00:56:06.067 --> 00:56:07.801
and you need a device,
get ahold of us.

00:56:07.801 --> 00:56:09.801
We can--I'm sure we can work
something out.

00:56:09.801 --> 00:56:11.300
We have a code site.

00:56:11.300 --> 00:56:14.501
We have a forum that we
participate in quite a bit.

00:56:14.501 --> 00:56:18.000
And with that, we're actually,
um, just about out of time,

00:56:18.000 --> 00:56:22.501
so, uh, uh, I do want to ask
that anyone who can

00:56:22.501 --> 00:56:24.501
please provide feedback
on the session.

00:56:24.501 --> 00:56:26.400
That helps us get better.

00:56:26.400 --> 00:56:28.801
And, um, our hash tags
are up there.

00:56:28.801 --> 00:56:31.934
So if you have questions,
come on up, ask them to us,

00:56:31.934 --> 00:56:34.834
but I think we're gonna have
to hand over the stage

00:56:34.834 --> 00:56:37.767
to the next--next set.
[applause]

