WEBVTT
Kind: captions
Language: en

00:00:00.280 --> 00:00:03.551
To get our camera to zoom out so
we can see the whole star,

00:00:03.551 --> 00:00:06.134
we need to set the camera's
viewport size.

00:00:06.134 --> 00:00:07.892
So here we've set both the width and

00:00:07.892 --> 00:00:10.300
height of the viewport to
be doubled the radius.

00:00:10.300 --> 00:00:13.540
So the star should fit
comfortably in our camera.

00:00:13.540 --> 00:00:16.830
Note the distinction between
these two lines, the setToOrtho

00:00:16.830 --> 00:00:21.452
call tells the camera how big a window
we're using to look the world.

00:00:21.452 --> 00:00:25.590
The viewport size is how much
of the world we are looking at.

00:00:25.590 --> 00:00:27.880
Then we set the camera's position
to be the center of the star.

00:00:27.880 --> 00:00:29.835
Let's see what it looks like.

00:00:29.835 --> 00:00:32.509
Whoa, the star's all stretched out.

00:00:32.509 --> 00:00:33.910
Let's see if we can figure
out why this happened.

00:00:34.920 --> 00:00:38.240
So we set the viewport width and
height to be equal, but

00:00:38.240 --> 00:00:40.390
our window doesn't have equal width and
height.

00:00:40.390 --> 00:00:42.550
It's wider than it is tall.

00:00:42.550 --> 00:00:43.730
Anticipating this occurrence,

00:00:43.730 --> 00:00:47.730
we already calculated the aspect
ratio of the window up here.

00:00:47.730 --> 00:00:50.714
Now we can just set the camera's
viewport width to be the aspect ratio

00:00:50.714 --> 00:00:52.380
times the viewport height.

00:00:52.380 --> 00:00:53.900
Let's try it now.

00:00:53.900 --> 00:00:54.580
Much better.

00:00:54.580 --> 00:00:56.950
I thought stars were
supposed to be circles.

00:00:56.950 --> 00:00:58.620
Let's actually do one more thing and

00:00:58.620 --> 00:01:01.050
nudge our camera to
the right a little bit, and

00:01:01.050 --> 00:01:05.030
now we can see both the entire star and
the itty bitty planet next to it.

00:01:05.030 --> 00:01:07.510
Let's try zooming in
on this planet next.

00:01:07.510 --> 00:01:10.870
So we've set the viewport height
to be double the planet radius so

00:01:10.870 --> 00:01:13.930
the window should just
contain the planet.

00:01:13.930 --> 00:01:18.500
Then we set the viewport width to be
aspect ratio times the viewport height.

00:01:18.500 --> 00:01:21.090
That way the planet stays a circle.

00:01:21.090 --> 00:01:25.690
Finally, we just set the position of the
camera to be the center of the planet.

00:01:25.690 --> 00:01:26.620
And there we go.

00:01:26.620 --> 00:01:30.160
We've apparently got a very heavily
forested planet or something.

00:01:30.160 --> 00:01:31.680
All right, let's do this one more time.

00:01:31.680 --> 00:01:33.700
This time with the satellite.

00:01:33.700 --> 00:01:36.190
So, setting the viewport height and
width should be pretty familiar,

00:01:36.190 --> 00:01:37.590
and then we set the position.

00:01:37.590 --> 00:01:39.530
let's see what we've got so far.

00:01:39.530 --> 00:01:42.190
Cool, so we've located
the satellite out in space, but

00:01:42.190 --> 00:01:45.890
looks like the satellite is rotating
as it orbits or something like that.

00:01:45.890 --> 00:01:49.040
Let's match the rotation of our camera
to the rotation of the satellite.

00:01:49.040 --> 00:01:49.740
So here we go.

00:01:49.740 --> 00:01:53.740
The satellite's rotation is contained in
this constant, and then camera.rotate

00:01:53.740 --> 00:01:57.040
will rotate the camera by that
number of degrees counterclockwise.

00:01:57.040 --> 00:01:58.620
Let's give it a try.

00:01:58.620 --> 00:02:00.140
Awesome, docking ports aligned.

