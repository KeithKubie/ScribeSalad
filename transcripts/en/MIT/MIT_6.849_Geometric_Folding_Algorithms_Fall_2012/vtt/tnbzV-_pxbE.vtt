WEBVTT
Kind: captions
Language: en

00:00:03.390 --> 00:00:05.270
PROFESSOR: All right,
let's get started.

00:00:05.270 --> 00:00:08.290
If you haven't already, there's
two handouts on the left,

00:00:08.290 --> 00:00:11.520
and you should take
two pieces of paper.

00:00:11.520 --> 00:00:13.330
So we'll doing some
actual origami folding.

00:00:13.330 --> 00:00:18.180
We'll be folding 6.849
today, just like this.

00:00:18.180 --> 00:00:22.500
It'll only take us
eight hours or so.

00:00:22.500 --> 00:00:24.170
This is the Jenny
and Eli folding

00:00:24.170 --> 00:00:25.430
you've seen on the poster.

00:00:25.430 --> 00:00:27.080
Pretty awesome.

00:00:27.080 --> 00:00:31.780
No, we'll be folding
letters more like this.

00:00:31.780 --> 00:00:36.600
So thanks everyone for
giving so many cool questions

00:00:36.600 --> 00:00:39.635
and comments, and the
feedback is really helpful.

00:00:39.635 --> 00:00:41.760
I didn't know what I was
going to cover this class.

00:00:41.760 --> 00:00:43.860
I had too many ideas,
and your questions really

00:00:43.860 --> 00:00:45.974
helped narrow it down
into exciting thing.

00:00:45.974 --> 00:00:47.390
So the structures
going to be, I'm

00:00:47.390 --> 00:00:50.059
going to go through
questions, so it's

00:00:50.059 --> 00:00:52.350
a funny kind of interactivity
where there's a whole day

00:00:52.350 --> 00:00:53.933
in between where you
ask the questions

00:00:53.933 --> 00:00:55.010
and where I answer them.

00:00:55.010 --> 00:00:57.460
But feel free to ask more
questions, follow-up things.

00:00:57.460 --> 00:01:01.840
But there's a lot already
here, so it should be fun.

00:01:01.840 --> 00:01:06.610
These are not questions
but funnier comments.

00:01:06.610 --> 00:01:08.480
If you like double
rainbow jokes,

00:01:08.480 --> 00:01:10.810
this lecture happened
a couple months

00:01:10.810 --> 00:01:13.480
after the double rainbow fiasco.

00:01:13.480 --> 00:01:15.485
There's a lot more, as I recall.

00:01:15.485 --> 00:01:18.060
It was a running theme
throughout the whole semester,

00:01:18.060 --> 00:01:20.940
so look out for that.

00:01:20.940 --> 00:01:22.411
I know this is entertaining.

00:01:22.411 --> 00:01:24.785
I'm getting used to listening
to myself at double speeds.

00:01:27.380 --> 00:01:30.340
This class definitely
is nice in the way

00:01:30.340 --> 00:01:32.450
that with a fairly
simple technique

00:01:32.450 --> 00:01:34.175
you can prove a very
powerful theorem.

00:01:36.294 --> 00:01:38.710
Sorry, I just remembered I
need to push a different button

00:01:38.710 --> 00:01:40.830
here.

00:01:40.830 --> 00:01:43.830
That's hopefully a theme
throughout the class,

00:01:43.830 --> 00:01:47.025
but definitely
especially nice here.

00:01:53.530 --> 00:01:55.440
It is cool, though,
strip folding,

00:01:55.440 --> 00:01:58.150
it was an open problem for
a couple years, at least,

00:01:58.150 --> 00:02:00.280
of no one thinking, how
do we fold any shape?

00:02:00.280 --> 00:02:01.880
That seems really tough.

00:02:01.880 --> 00:02:04.272
The point of the
strip folding approach

00:02:04.272 --> 00:02:06.410
is that once you
have the right idea,

00:02:06.410 --> 00:02:08.530
to start with a really
long rectangle, somehow

00:02:08.530 --> 00:02:09.330
it becomes easy.

00:02:09.330 --> 00:02:11.621
There's still a lot of details
in getting that to work,

00:02:11.621 --> 00:02:14.820
but it's kind of neat
how that works out.

00:02:14.820 --> 00:02:17.100
Now we get to actual proposals.

00:02:17.100 --> 00:02:20.320
So folding practice, I was
planning on doing this,

00:02:20.320 --> 00:02:23.030
but-- this is an explicit
comment to that effect.

00:02:23.030 --> 00:02:26.590
So we're going to fold some
letters of the alphabet.

00:02:26.590 --> 00:02:28.570
You have in your
packet instructions

00:02:28.570 --> 00:02:36.280
for making the individual digits
six, four, eight, and nine,

00:02:36.280 --> 00:02:38.040
which are all pretty easy.

00:02:38.040 --> 00:02:43.060
You also have a diagram for this
crazy design called Typeset.

00:02:43.060 --> 00:02:45.140
This same folding
can make any letter

00:02:45.140 --> 00:02:48.510
of the alphabet and any digit.

00:02:48.510 --> 00:02:50.640
So just to show
you what they will

00:02:50.640 --> 00:02:57.020
look like these are my foldings
of six, eight, four, and nine,

00:02:57.020 --> 00:02:59.440
according to the
first set of diagrams.

00:02:59.440 --> 00:03:06.400
And then this is my folding
of, I think the number six,

00:03:06.400 --> 00:03:09.945
out of Jason Ku's design.

00:03:13.140 --> 00:03:15.030
So if you wanted
to reconfigure it,

00:03:15.030 --> 00:03:21.420
to-- I guess eight is kind
of hard-- let me do four.

00:03:21.420 --> 00:03:28.340
OK, so for four we've
gotta fold this guy under.

00:03:28.340 --> 00:03:33.340
Fold this here, this tab,
I think goes back here.

00:03:35.870 --> 00:03:39.500
So the advanced origami
folders in this class

00:03:39.500 --> 00:03:41.920
can definitely do
Jason Ku's design,

00:03:41.920 --> 00:03:45.900
but it takes a little while.

00:03:45.900 --> 00:03:47.110
There, I've got a four.

00:03:49.820 --> 00:03:52.620
Got it?

00:03:52.620 --> 00:03:54.410
A little hard to
hold in position,

00:03:54.410 --> 00:03:57.030
but, at least in theory, it
will make any letter all out

00:03:57.030 --> 00:03:58.310
of one folding.

00:03:58.310 --> 00:04:00.570
You just have to move
all the tabs around.

00:04:00.570 --> 00:04:05.200
So it's kind of neat, but it
takes at least half an hour

00:04:05.200 --> 00:04:07.220
or so to fold that,
unless you're really fast.

00:04:07.220 --> 00:04:10.480
So I would recommend--
pick one of these.

00:04:10.480 --> 00:04:12.090
Work in groups if you like.

00:04:12.090 --> 00:04:13.980
If you want you can
form a group of four,

00:04:13.980 --> 00:04:16.399
and make six, eight,
four, and nine.

00:04:16.399 --> 00:04:17.414
Follow the diagrams.

00:04:17.414 --> 00:04:20.269
This is an exercise of following
diagrams, one of the other.

00:04:20.269 --> 00:04:23.680
We'll only have time to
maybe make one digit each,

00:04:23.680 --> 00:04:27.250
but have fun with it.

00:04:27.250 --> 00:04:29.570
And if you have questions,
raise your hand.

00:04:29.570 --> 00:04:36.550
I can tell you, the first
step in six, eight, and nine,

00:04:36.550 --> 00:04:39.992
is to make an
eight-by-eight grid.

00:04:39.992 --> 00:04:42.200
There's a lot of ways to
make an eight-by-eight grid,

00:04:42.200 --> 00:04:46.310
but an easy one is shown here.

00:04:46.310 --> 00:04:48.490
So you take your sheet.

00:04:48.490 --> 00:04:50.780
You fold the bottom
edge to the top edge--

00:04:50.780 --> 00:04:53.355
I think they want to do it
white side up-- so they're all

00:04:53.355 --> 00:04:53.855
valleys.

00:04:56.540 --> 00:04:57.640
We align those edges.

00:04:57.640 --> 00:05:01.120
You'll get a nice bisector.

00:05:01.120 --> 00:05:07.355
Then you repeat, folding the
bottom edge to the middle.

00:05:07.355 --> 00:05:09.480
And once you do that, to
save a little bit of time,

00:05:09.480 --> 00:05:12.310
you could then fold that new
bottom edge to the middle

00:05:12.310 --> 00:05:13.100
again.

00:05:13.100 --> 00:05:15.947
That will do
eighths on one side.

00:05:15.947 --> 00:05:17.780
It's a little bit
inaccurate, because you're

00:05:17.780 --> 00:05:21.870
folding through two layers--
but it's a little faster.

00:05:21.870 --> 00:05:24.800
Time is of the essence.

00:05:24.800 --> 00:05:27.360
Then you do the same
thing on the bottom,

00:05:27.360 --> 00:05:33.730
and you'll get eighths
in one dimension.

00:05:33.730 --> 00:05:36.435
But then you have to fold it in
eighths in the other dimension.

00:05:43.086 --> 00:05:44.960
Once you have eighths,
it's like three steps.

00:05:44.960 --> 00:05:46.740
It's really easy.

00:05:46.740 --> 00:05:51.542
For six, eight, and nine--
Four uses a different approach,

00:05:51.542 --> 00:05:52.750
it's a little more free hand.

00:05:52.750 --> 00:05:55.620
If you want to be more
creative, try the four.

00:05:55.620 --> 00:05:59.740
You've got to eyeball what looks
and feels good for number four.

00:06:49.320 --> 00:06:50.820
So out of curiosity,
how many people

00:06:50.820 --> 00:06:53.737
have an eight-by-eight
grid at this point?

00:06:53.737 --> 00:06:54.320
Who wanted to?

00:06:54.320 --> 00:06:54.820
Cool.

00:07:00.917 --> 00:07:02.625
So that's the top half
of these diagrams,

00:07:02.625 --> 00:07:04.400
the eight by eight grid.

00:07:04.400 --> 00:07:07.060
Then it's mostly folding
up over individual edges

00:07:07.060 --> 00:07:10.570
and some corner
faults, but they're

00:07:10.570 --> 00:07:14.000
all simple folds in this world.

00:07:14.000 --> 00:07:17.100
So you're folding through, I
think, always all the layers.

00:07:17.100 --> 00:07:17.600
Oh, no.

00:07:17.600 --> 00:07:20.360
This is only folding
through one layer.

00:07:20.360 --> 00:07:23.610
But these would always fall into
the some layers, simple folds

00:07:23.610 --> 00:07:25.170
category.

00:07:25.170 --> 00:07:27.255
So for example, make a six.

00:07:30.751 --> 00:07:34.790
Fold this bottom edge up.

00:07:34.790 --> 00:07:37.475
Fold the left
three squares over.

00:07:39.990 --> 00:07:44.680
Fold this corner up.

00:07:49.310 --> 00:07:50.725
Fold this corner down.

00:08:03.902 --> 00:08:13.585
And fold this down, this over.

00:08:22.200 --> 00:08:24.599
There's a really big six.

00:08:24.599 --> 00:08:27.140
And these numbers are all pretty
much proportioned correctly.

00:08:27.140 --> 00:08:30.710
The four, you have
to be-- it helps

00:08:30.710 --> 00:08:33.309
to have a reference model
of one of the other digits

00:08:33.309 --> 00:08:37.059
to make it the right height, but
it'll end up roughly correct,

00:08:37.059 --> 00:08:38.030
anyway.

00:08:38.030 --> 00:08:40.340
The eight's a little bit
narrow in this design,

00:08:40.340 --> 00:08:42.909
slightly narrower
than six and the nine.

00:08:42.909 --> 00:08:45.780
But otherwise they're
nice compatible digits.

00:08:45.780 --> 00:08:48.180
There's a whole alphabet
on the website that's

00:08:48.180 --> 00:08:53.250
linked from this slide,
so you go check it out.

00:08:53.250 --> 00:08:54.135
Origami club.

00:08:56.800 --> 00:08:59.980
So it's kind of fun to think
about font design and alphabet

00:08:59.980 --> 00:09:00.480
design.

00:09:00.480 --> 00:09:04.160
There's actually a lot of
origami alphabets out there.

00:09:04.160 --> 00:09:05.440
This is one of the simplest.

00:09:05.440 --> 00:09:06.153
It has digits.

00:09:11.050 --> 00:09:12.065
Anyone have questions?

00:09:15.260 --> 00:09:19.155
How many people folded
a letter, a digit?

00:09:19.155 --> 00:09:22.110
OK.

00:09:22.110 --> 00:09:24.870
You can keep folding, but
maybe I will continue on.

00:09:24.870 --> 00:09:26.536
It's going to be a
lot of fun crackling.

00:09:28.590 --> 00:09:31.305
Anyone folded this one?

00:09:31.305 --> 00:09:32.180
Anyone working on it?

00:09:34.820 --> 00:09:36.750
A bunch of people, cool.

00:09:36.750 --> 00:09:38.280
Let me know when you finish.

00:09:38.280 --> 00:09:40.490
It's kind of fun.

00:09:40.490 --> 00:09:42.005
It's not that hard.

00:09:42.005 --> 00:09:42.880
AUDIENCE: Yes, it is.

00:09:42.880 --> 00:09:45.370
PROFESSOR: I wanted to point
at the OrigaMIT website.

00:09:45.370 --> 00:09:48.230
OrigaMIT is the origami
club at MIT, and at the top

00:09:48.230 --> 00:09:49.920
you see a different alphabet.

00:09:49.920 --> 00:09:51.970
This is a four-fold
alphabet designed

00:09:51.970 --> 00:09:54.610
by Jeannine Mosley
who's an MIT alum

00:09:54.610 --> 00:09:58.230
and came to this
class two years ago.

00:09:58.230 --> 00:10:01.190
And so that's the
reference design in 2002.

00:10:01.190 --> 00:10:03.120
I'm not sure if it
has digits, though.

00:10:03.120 --> 00:10:06.590
At least, the diagrams
we found for the letters,

00:10:06.590 --> 00:10:07.820
do not also have digits.

00:10:07.820 --> 00:10:09.278
So I think an
interesting challenge

00:10:09.278 --> 00:10:14.380
is to design a
four-fold digit set

00:10:14.380 --> 00:10:16.020
to complement her letter set.

00:10:16.020 --> 00:10:20.480
If you're interested, that could
be a cool project to work on.

00:10:20.480 --> 00:10:22.560
Folding design,
minimal fold alphabets.

00:10:22.560 --> 00:10:26.200
You could try a three-fold
alphabet, two-fold alphabet.

00:10:26.200 --> 00:10:28.640
Also on this website are
the meeting schedules.

00:10:28.640 --> 00:10:30.950
It always Sundays, sometimes
2, sometimes 3 o'clock.

00:10:30.950 --> 00:10:31.950
You should check it out.

00:10:31.950 --> 00:10:33.900
And there's a
convention coming up,

00:10:33.900 --> 00:10:38.230
our very own origami
convention on October 27th.

00:10:38.230 --> 00:10:42.300
Jason Ku wanted me to remind
you about that coming up.

00:10:42.300 --> 00:10:44.770
Even if you've never
done origami before,

00:10:44.770 --> 00:10:46.750
other than today, you
should check it out.

00:10:46.750 --> 00:10:52.070
It'll be fun, lots of different
sessions, from simple models

00:10:52.070 --> 00:10:53.590
to complicated models.

00:10:53.590 --> 00:10:57.275
This is a cool design by
Brain Chan, another MIT alum.

00:10:57.275 --> 00:11:00.400
It's one square paper folded
into the Mens et Manus logo,

00:11:00.400 --> 00:11:03.730
but, here, instead
of the oil lamp,

00:11:03.730 --> 00:11:06.450
you've got a little
origami crane.

00:11:06.450 --> 00:11:07.130
Cool stuff.

00:11:09.840 --> 00:11:12.684
So we proceed on
to other questions.

00:11:12.684 --> 00:11:13.850
This is a pretty simple one.

00:11:13.850 --> 00:11:19.190
At the top of the notes, it says
folding, AKA silhouette folding

00:11:19.190 --> 00:11:22.770
and gift wrapping, it has
a couple of references.

00:11:22.770 --> 00:11:25.680
So where do those terms
come from, is the question.

00:11:25.680 --> 00:11:29.670
And one answer is it's the title
of the paper, "Folding Flat

00:11:29.670 --> 00:11:32.120
Silhouettes and Wrapping
Polyhedral Packages,"

00:11:32.120 --> 00:11:33.940
but that's not the real answer.

00:11:33.940 --> 00:11:37.680
So this is the two of
us and Joe Mitchell.

00:11:37.680 --> 00:11:40.110
It's also, I think, the
introduction of the term

00:11:40.110 --> 00:11:44.390
computational origami,
but those terms

00:11:44.390 --> 00:11:45.970
come from earlier references.

00:11:45.970 --> 00:11:50.010
So in that paper, there's a
sentence, classic open question

00:11:50.010 --> 00:11:51.900
origami mathematics,
and we don't really

00:11:51.900 --> 00:11:53.380
know where it came about.

00:11:53.380 --> 00:11:56.590
But it was first formally
posed by Bern and Hayes

00:11:56.590 --> 00:11:58.940
in this SODA '96
paper, which we'll

00:11:58.940 --> 00:12:03.240
be talking about in the
next lecture, lecture three.

00:12:03.240 --> 00:12:05.930
And this is a quote
from their paper,

00:12:05.930 --> 00:12:08.530
"Is every simple polygon, when
skilled sufficiently small,

00:12:08.530 --> 00:12:10.790
the silhouette of
a flat origami?"

00:12:10.790 --> 00:12:12.920
The point of saying
the word silhouette

00:12:12.920 --> 00:12:18.687
is that when you fold something,
like this number six--

00:12:18.687 --> 00:12:20.520
there's a whole bunch
of layers, and there's

00:12:20.520 --> 00:12:22.020
a lot of complexity
to this folding.

00:12:22.020 --> 00:12:25.190
By saying silhouette, we just
mean, collapse all layers,

00:12:25.190 --> 00:12:27.180
ignore the coloring, and
just take the outline.

00:12:27.180 --> 00:12:30.910
So the silhouette of this
thing is a rectangle.

00:12:30.910 --> 00:12:33.210
And, in general, that's
sort of the transformation

00:12:33.210 --> 00:12:35.418
to throw away the complexity
of the folding, and say,

00:12:35.418 --> 00:12:36.830
I just care about the shape.

00:12:36.830 --> 00:12:39.411
Can I get the desired shape?

00:12:39.411 --> 00:12:41.660
There's some other interesting
questions here, though,

00:12:41.660 --> 00:12:43.118
which haven't been
fully addressed.

00:12:43.118 --> 00:12:44.875
How many creases are
necessary to fold?

00:12:44.875 --> 00:12:47.060
We'll actually get to
that in a later question.

00:12:47.060 --> 00:12:50.070
How thick must the origami be?

00:12:50.070 --> 00:12:52.712
The strip method
shows this if you

00:12:52.712 --> 00:12:54.920
start from a rectangle of
paper, the number of layers

00:12:54.920 --> 00:12:56.050
can be very small.

00:12:56.050 --> 00:12:59.760
I think two or three is enough
for all the gadgets that we

00:12:59.760 --> 00:13:02.197
use, probably three .

00:13:02.197 --> 00:13:03.780
If you start from a
square, though, we

00:13:03.780 --> 00:13:06.340
don't know the answer
to that question.

00:13:06.340 --> 00:13:10.010
And in practice, folding
through many layers is tough.

00:13:10.010 --> 00:13:12.970
So that is a silhouette problem.

00:13:12.970 --> 00:13:15.307
The gift wrapping
problem, the motivation

00:13:15.307 --> 00:13:16.640
is you have a weird-shaped gift.

00:13:16.640 --> 00:13:19.540
You want to wrap it
with a piece of paper.

00:13:19.540 --> 00:13:21.900
And this is posed
to us in a talk

00:13:21.900 --> 00:13:25.230
by Jin Akiyama at a Canadian
geometry conference.

00:13:25.230 --> 00:13:28.970
Jin Akiyama is a
really cool guy.

00:13:28.970 --> 00:13:34.632
He has had for many, many years
a mathematics TV show in Japan.

00:13:34.632 --> 00:13:37.090
And he's known throughout Japan,
because everyone in school

00:13:37.090 --> 00:13:38.880
watches his videos.

00:13:38.880 --> 00:13:41.876
And it covers really
interesting mathematics.

00:13:41.876 --> 00:13:43.250
Some of the results
in this class

00:13:43.250 --> 00:13:45.520
are actually in
his videos as well.

00:13:45.520 --> 00:13:48.630
It's mostly in Japanese, so it's
a little hard for most of us

00:13:48.630 --> 00:13:49.130
watch.

00:13:49.130 --> 00:13:50.700
But there's some
subtitled versions,

00:13:50.700 --> 00:13:51.709
and they're really fun.

00:13:51.709 --> 00:13:54.000
Maybe we can have a movie
night, and watch one of them,

00:13:54.000 --> 00:13:56.840
if I get permission.

00:13:56.840 --> 00:13:58.690
So there isn't a great
reference for that.

00:13:58.690 --> 00:14:00.290
I mean, he's written some
papers about different kinds

00:14:00.290 --> 00:14:02.331
of wrapping problems, but
mostly it was this talk

00:14:02.331 --> 00:14:05.530
that he gave in 1997, which is
when I was just starting out

00:14:05.530 --> 00:14:07.270
in computational geometry.

00:14:07.270 --> 00:14:09.700
That's where the
terms come from.

00:14:09.700 --> 00:14:11.250
A lot of words.

00:14:11.250 --> 00:14:12.860
Have you ever actually
folded a model

00:14:12.860 --> 00:14:18.240
using this method of zigzagging
and folding with the strip?

00:14:18.240 --> 00:14:20.620
Any real or sensible or
pretty origami models,

00:14:20.620 --> 00:14:22.760
or is it purely for the
sake of universality?

00:14:22.760 --> 00:14:26.290
My knee jerk reaction was,
no way is this practical.

00:14:26.290 --> 00:14:28.150
This is just for universality.

00:14:28.150 --> 00:14:30.940
And the point of this theorem
has always been, in my mind,

00:14:30.940 --> 00:14:32.780
to prove that
everything is possible,

00:14:32.780 --> 00:14:35.020
but then the challenge
is to find good foldings,

00:14:35.020 --> 00:14:36.280
for some notion of good.

00:14:36.280 --> 00:14:41.960
But, actually, there are a bunch
of examples of strip folding,

00:14:41.960 --> 00:14:44.550
not a lot of different folds,
not terribly many gadgets,

00:14:44.550 --> 00:14:48.460
but there's some cool things,
especially with strip weaving.

00:14:48.460 --> 00:14:51.710
These are just a few examples
of woven colored strips.

00:14:51.710 --> 00:14:54.480
You can make fun things
like Space Invaders.

00:14:54.480 --> 00:14:57.470
You could weave
together baskets,

00:14:57.470 --> 00:14:59.570
and wrap your
packages, and so on.

00:15:02.150 --> 00:15:04.279
This is a little
bit more origamic.

00:15:04.279 --> 00:15:05.820
So there were no
real folds in there,

00:15:05.820 --> 00:15:07.630
except at the edges of the cube.

00:15:07.630 --> 00:15:09.130
This one is a modular origami.

00:15:09.130 --> 00:15:10.750
It involves a bunch
of different folds

00:15:10.750 --> 00:15:13.240
to get all the pieces
to lock together.

00:15:13.240 --> 00:15:16.460
Modular origami means you have
a bunch of identical pieces.

00:15:16.460 --> 00:15:18.330
They kind of weave
together through folding,

00:15:18.330 --> 00:15:20.610
and then you can make
a nice little crown.

00:15:20.610 --> 00:15:22.040
This is a very classic model.

00:15:22.040 --> 00:15:23.520
You've probably
seen at some point.

00:15:23.520 --> 00:15:27.220
Here that the paper's
slit, and then it's woven.

00:15:27.220 --> 00:15:29.220
But there's some
folds down here.

00:15:29.220 --> 00:15:32.120
Not a lot of folding, but
strips are pretty neat.

00:15:32.120 --> 00:15:35.740
You can definitely use them in
all sorts of different designs.

00:15:35.740 --> 00:15:41.060
Here's some more
sculptural designing models

00:15:41.060 --> 00:15:44.320
from taking strips of paper.

00:15:44.320 --> 00:15:45.780
This has no glue
in it, so I think

00:15:45.780 --> 00:15:51.020
there's more strips at the
end locking this together.

00:15:51.020 --> 00:15:54.949
And this guy, Zachary
Futterer, took

00:15:54.949 --> 00:15:56.740
a bunch of these kinds
of units and started

00:15:56.740 --> 00:15:59.610
weaving them together to make
really complicated shapes.

00:15:59.610 --> 00:16:04.240
So you can definitely do cool
things with strip folding.

00:16:04.240 --> 00:16:07.520
And another common
one around these days

00:16:07.520 --> 00:16:12.000
is taking gum or candy
wrappers, and folding them

00:16:12.000 --> 00:16:14.300
down into little strips
and weaving them together

00:16:14.300 --> 00:16:16.695
to make handbags
and other things.

00:16:16.695 --> 00:16:18.320
This has become kind
of a fashion trend

00:16:18.320 --> 00:16:20.760
over the last few years.

00:16:20.760 --> 00:16:24.080
So those are things
you can do a strips.

00:16:24.080 --> 00:16:27.440
We have used it in one paper
where the goal is actually

00:16:27.440 --> 00:16:31.580
to be efficient and use
a small piece of paper,

00:16:31.580 --> 00:16:34.564
and not just prove some
universality result.

00:16:34.564 --> 00:16:36.730
This is in our paper, folding
a better checkerboard,

00:16:36.730 --> 00:16:40.260
which we'll talk about
in two lectures, if I

00:16:40.260 --> 00:16:42.940
recall correctly,
in more detail.

00:16:42.940 --> 00:16:44.490
But this is sort of a baseline.

00:16:44.490 --> 00:16:47.270
This is not the better method
that's developed in this paper,

00:16:47.270 --> 00:16:49.590
but it's the starting point.

00:16:49.590 --> 00:16:52.400
You take a square, so this
actually starts with a square.

00:16:52.400 --> 00:16:54.020
You do this pleating.

00:16:54.020 --> 00:16:56.370
And this is with bi-color paper.

00:16:56.370 --> 00:16:58.180
It's dark on one side,
light on the other.

00:16:58.180 --> 00:17:01.270
You get this strip of
squares in color pattern.

00:17:01.270 --> 00:17:03.740
And then you take that strip--
a huge number of layers

00:17:03.740 --> 00:17:05.569
in the middle, so it's
not super practical,

00:17:05.569 --> 00:17:07.460
but it's actually pretty
efficient in terms

00:17:07.460 --> 00:17:09.280
of how big a square
you start with.

00:17:09.280 --> 00:17:12.720
To make an n-by-n, this
is obviously not to scale.

00:17:12.720 --> 00:17:16.140
You need more squares here
in order to make this thing.

00:17:16.140 --> 00:17:18.312
And then you just snake
your path back and forth.

00:17:18.312 --> 00:17:20.020
You could use turn
gadgets, or here we're

00:17:20.020 --> 00:17:21.910
just using 45 degree folds.

00:17:21.910 --> 00:17:25.030
And this is pretty close
to what was believed

00:17:25.030 --> 00:17:26.910
to be the best way to
fold a checkerboard,

00:17:26.910 --> 00:17:29.609
and then this paper shows how
to do a factor of two better.

00:17:29.609 --> 00:17:30.900
So we'll talk about that later.

00:17:30.900 --> 00:17:33.240
But there are some
uses for strip folding.

00:17:33.240 --> 00:17:34.710
This is a little
bit theoretical,

00:17:34.710 --> 00:17:37.620
but it's actually pretty
competitive against the best

00:17:37.620 --> 00:17:40.720
n-by-n checkerboard foldings
in the origami world,

00:17:40.720 --> 00:17:43.690
like the one I
showed last class.

00:17:43.690 --> 00:17:48.080
So that's practicality
of strip folding.

00:17:48.080 --> 00:17:50.377
Next question's more
about strip folding.

00:17:50.377 --> 00:17:52.710
There are a couple things
that are in the lecture notes,

00:17:52.710 --> 00:17:55.180
the handwritten lecture
notes, but were not even

00:17:55.180 --> 00:18:00.040
mentioned in the audio
part of the lecture.

00:18:00.040 --> 00:18:03.840
So a few people asked,
what are these things?

00:18:03.840 --> 00:18:06.570
Said pseudopolynomial
upper bound.

00:18:06.570 --> 00:18:09.870
Pseudopolynomial is a fun term.

00:18:09.870 --> 00:18:12.200
Let me tell you a
little bit about it.

00:18:12.200 --> 00:18:14.310
It's from the algorithms
world, but even a lot

00:18:14.310 --> 00:18:16.220
of algorithms people
don't know it.

00:18:16.220 --> 00:18:21.210
So let me tell you.

00:18:21.210 --> 00:18:24.760
So maybe first I should
tell you about polynomial.

00:18:24.760 --> 00:18:27.510
In general, what
these terms are about

00:18:27.510 --> 00:18:30.870
is measuring how
fast an algorithm is.

00:18:30.870 --> 00:18:37.140
So the idea is you plot,
conceptually, n, this

00:18:37.140 --> 00:18:38.360
is the problem size.

00:18:44.440 --> 00:18:48.304
If you wanted to fold
an arbitrary polyhedron,

00:18:48.304 --> 00:18:49.970
the one way to think
of the problem size

00:18:49.970 --> 00:18:51.960
is the number vertices,
edges, and faces.

00:18:51.960 --> 00:18:55.000
Just the total number of
things you're given as input,

00:18:55.000 --> 00:18:56.600
and then your
output is whatever.

00:18:56.600 --> 00:18:59.300
But n is supposed to be
the input problem size.

00:18:59.300 --> 00:19:02.590
And then on the y-axis,
you want to plot

00:19:02.590 --> 00:19:05.860
the running time
of your algorithm.

00:19:05.860 --> 00:19:08.750
So this is how long it
takes to compute the way

00:19:08.750 --> 00:19:12.420
to fold your square paper
into your desired shape,

00:19:12.420 --> 00:19:14.720
and generally this
is going to increase.

00:19:14.720 --> 00:19:18.270
And the question is, does it
increase in a reasonable way

00:19:18.270 --> 00:19:22.460
or in a crazy way that
goes exponentially high?

00:19:22.460 --> 00:19:25.530
So you want to know, how does
the running time grow with n?

00:19:25.530 --> 00:19:27.930
Polynomial is a
sense of good growth,

00:19:27.930 --> 00:19:29.590
and it just means
you grow, like,

00:19:29.590 --> 00:19:32.530
n to the c, where
c is some constant.

00:19:36.750 --> 00:19:42.470
So ideally you'd have n--
or maybe you have n squared,

00:19:42.470 --> 00:19:44.490
or n cubed, or n to the
fourth-- all these are

00:19:44.490 --> 00:19:47.250
considered good running times.

00:19:47.250 --> 00:19:49.440
Not quite as good as
polynomial is pseudopolynomial.

00:19:57.940 --> 00:20:02.220
And I would conjecture, for this
problem of folding an arbitrary

00:20:02.220 --> 00:20:07.290
given polyhedron, you cannot
achieve a polynomial number

00:20:07.290 --> 00:20:08.320
of folds, let's say.

00:20:08.320 --> 00:20:09.650
So there are two things
we could measure here,

00:20:09.650 --> 00:20:11.730
the running time of the
algorithm-- we could measure,

00:20:11.730 --> 00:20:13.438
actually, three things--
we could measure

00:20:13.438 --> 00:20:16.700
the number of folds you make,
the number operations you

00:20:16.700 --> 00:20:20.430
do on the paper, and a third
thing would be scale factor.

00:20:20.430 --> 00:20:22.930
How big a square do I have
to start with in order

00:20:22.930 --> 00:20:27.110
to make a desired polygon?

00:20:27.110 --> 00:20:35.430
And pseudopolynomial
means n times r to the c.

00:20:35.430 --> 00:20:36.900
What's r?

00:20:36.900 --> 00:20:46.310
R is some geometric parameter,
geometric ratio, in the input.

00:20:46.310 --> 00:20:49.990
And in particular for this
problem what makes sense for r

00:20:49.990 --> 00:20:58.770
is basically the longest length
divided by the shortest length.

00:20:58.770 --> 00:21:01.190
This is typically
what r refers to.

00:21:01.190 --> 00:21:03.130
This will come up in
later lectures as well.

00:21:06.220 --> 00:21:08.350
So for example, you
take your entire shape,

00:21:08.350 --> 00:21:11.860
you measure the diameter of the
shape, the two farthest points.

00:21:11.860 --> 00:21:13.100
That's your longest length.

00:21:13.100 --> 00:21:15.420
Shortest length
would be-- maybe you

00:21:15.420 --> 00:21:18.260
have a triangle,
something like this,

00:21:18.260 --> 00:21:20.690
in the target polyhedron
you want to make.

00:21:20.690 --> 00:21:23.069
This would be your
shortest distance.

00:21:23.069 --> 00:21:24.860
This is actually called
the minimum feature

00:21:24.860 --> 00:21:28.300
size in computational geometry
or the minimum altitude

00:21:28.300 --> 00:21:30.720
of any of your triangles.

00:21:30.720 --> 00:21:32.950
OK, so that's just some number.

00:21:32.950 --> 00:21:37.950
And you can have a triangle,
which is super, super narrow.

00:21:37.950 --> 00:21:40.761
And so it's this ratio r
could be arbitrarily large

00:21:40.761 --> 00:21:43.010
even though you only have
three vertices, three edges,

00:21:43.010 --> 00:21:44.290
one face.

00:21:44.290 --> 00:21:46.756
So n and r not
necessarily comparable,

00:21:46.756 --> 00:21:48.630
so that's why in
pseudopolynomial we put them

00:21:48.630 --> 00:21:52.300
both together, and then we raise
them to some constant power.

00:21:52.300 --> 00:21:54.720
That's a pseudopolynomial
running time.

00:21:54.720 --> 00:21:58.510
So the question that's
being posed here

00:21:58.510 --> 00:22:01.980
is, can you get a
pseudopolynomial upper bound,

00:22:01.980 --> 00:22:04.109
and can you get a
pseudopolynomial lower bound?

00:22:04.109 --> 00:22:05.650
And it doesn't say
for what, but it's

00:22:05.650 --> 00:22:08.300
for all three
problems-- running time,

00:22:08.300 --> 00:22:11.070
number of folds, scale factor.

00:22:11.070 --> 00:22:13.410
And not all of these are open.

00:22:13.410 --> 00:22:16.520
So in the original
paper, there's

00:22:16.520 --> 00:22:19.830
this theorem that says lots of
things-- you can fold anything.

00:22:19.830 --> 00:22:22.340
Then it says here, the folding
requires a number of folds,

00:22:22.340 --> 00:22:27.480
polynomial of n
and the ratio, r.

00:22:27.480 --> 00:22:30.940
So it already claims it there
is a pseudopolynomial bound

00:22:30.940 --> 00:22:32.280
on the number of folds.

00:22:32.280 --> 00:22:35.370
It doesn't say what that
pseudopolynomial bound is.

00:22:35.370 --> 00:22:37.250
Is it n times r?

00:22:37.250 --> 00:22:38.950
Is it n plus r?

00:22:38.950 --> 00:22:40.690
Is it n times r squared?

00:22:40.690 --> 00:22:45.110
I would guess one of the first
two-- n times r or n plus r.

00:22:45.110 --> 00:22:47.280
So that's the upper
bound question.

00:22:47.280 --> 00:22:49.420
Maybe we can work on this
in a problem session.

00:22:49.420 --> 00:22:51.940
A lower bound
question is, do you

00:22:51.940 --> 00:22:54.790
prove that you need some
dependence, both on n and r?

00:22:54.790 --> 00:22:56.920
Which I would guess
is pretty easy.

00:22:56.920 --> 00:22:58.910
If you want to take a
square and fold it down

00:22:58.910 --> 00:23:00.510
to a really, really
skinny triangle,

00:23:00.510 --> 00:23:04.540
I think you need at
least r folds, roughly.

00:23:04.540 --> 00:23:06.900
And similarly you should
need at least n folds,

00:23:06.900 --> 00:23:10.040
so there should be a
lower bound like n plus r.

00:23:10.040 --> 00:23:12.210
But none of these have been
written down explicitly,

00:23:12.210 --> 00:23:14.690
so that's what those
open questions are.

00:23:14.690 --> 00:23:16.130
Then there was
another slide, six,

00:23:16.130 --> 00:23:18.690
which was completely uncovered.

00:23:18.690 --> 00:23:20.080
Stop me if there are questions.

00:23:20.080 --> 00:23:23.890
I should maybe take a
brief moment to breathe.

00:23:23.890 --> 00:23:29.640
So the next part of the lecture
notes ask about seam placement.

00:23:29.640 --> 00:23:32.560
So seam placement has the
following kind of issue.

00:23:32.560 --> 00:23:36.650
When you fold, like this
number-- is this a six?

00:23:36.650 --> 00:23:39.040
This is a nine.

00:23:39.040 --> 00:23:40.510
Fold this number nine.

00:23:40.510 --> 00:23:43.400
In addition to seeing the color
pattern, if you look closely

00:23:43.400 --> 00:23:45.090
there's also these
kinds of seams.

00:23:45.090 --> 00:23:48.460
This white square is
not just a white square.

00:23:48.460 --> 00:23:53.370
You can see on the top
layer this crease line.

00:23:53.370 --> 00:23:55.880
And here there's a seam,
here there's a seam.

00:23:55.880 --> 00:23:58.400
These are like visible lines.

00:23:58.400 --> 00:24:01.600
Of course, you have to have
seams at the color transitions,

00:24:01.600 --> 00:24:03.920
but there's other seams as well.

00:24:03.920 --> 00:24:06.282
Maybe you want to minimize
the seams you want to get,

00:24:06.282 --> 00:24:08.240
you want to place the
scenes in a cool pattern.

00:24:11.010 --> 00:24:12.510
When you fold
checkerboards, there's

00:24:12.510 --> 00:24:14.690
a such thing as a seamless
checkerboard, where

00:24:14.690 --> 00:24:16.880
every square is a
whole square paper.

00:24:16.880 --> 00:24:20.640
There's no visible crease
lines on the top layer.

00:24:20.640 --> 00:24:23.890
So this is an extension of
the universality result,

00:24:23.890 --> 00:24:26.830
to also get sort of
universal seem placement.

00:24:26.830 --> 00:24:30.230
And what the
original paper proves

00:24:30.230 --> 00:24:33.360
is that you can place
the seams however

00:24:33.360 --> 00:24:36.020
you want, provided the
seam regions, the regions

00:24:36.020 --> 00:24:39.930
between the seams, are
convex polygons-- which

00:24:39.930 --> 00:24:41.160
is almost always the case.

00:24:41.160 --> 00:24:44.250
You look at a
typical model-- here,

00:24:44.250 --> 00:24:48.140
the seam regions are all
rectangles and triangles.

00:24:48.140 --> 00:24:51.680
So you could achieve
exactly this seam pattern

00:24:51.680 --> 00:24:52.620
if you wanted it.

00:24:52.620 --> 00:24:54.620
You could also say, oh,
here's a nice rectangle.

00:24:54.620 --> 00:24:56.570
I'll make that a seam region.

00:24:56.570 --> 00:24:59.330
Here's a nice rectangle,
I'll make that same region.

00:24:59.330 --> 00:25:01.640
But you could not make
the entire number nine

00:25:01.640 --> 00:25:05.940
here a seam region,
because it's non convex.

00:25:05.940 --> 00:25:07.980
At least, you can't do
it with this technique.

00:25:07.980 --> 00:25:10.260
We don't know,
necessarily, whether this

00:25:10.260 --> 00:25:12.330
is possible by
some other folding.

00:25:12.330 --> 00:25:16.780
I would guess no, but
it is possible to make

00:25:16.780 --> 00:25:19.760
some non-convex seam regions.

00:25:19.760 --> 00:25:26.340
For example I could take this
page and fold the corner over,

00:25:26.340 --> 00:25:30.120
and now I've got a
non-convex seam region here.

00:25:30.120 --> 00:25:32.780
So some non-convexing
regions are possible.

00:25:32.780 --> 00:25:38.360
Open question is-- if
I give you a polygon--

00:25:38.360 --> 00:25:40.050
we know every
polygon's possible.

00:25:40.050 --> 00:25:43.004
Now I give you a polygon and I
subdivide it into seam regions.

00:25:43.004 --> 00:25:44.170
Which of those are possible?

00:25:44.170 --> 00:25:46.750
Not everything is
possible, I'm pretty sure,

00:25:46.750 --> 00:25:49.590
though I'm not sure we
have a proof of that.

00:25:49.590 --> 00:25:52.780
Some things like this little
heart shape are possible.

00:25:52.780 --> 00:25:53.960
Characterize.

00:25:53.960 --> 00:25:59.340
This another cool possible
problem for problem session.

00:25:59.340 --> 00:26:00.250
Questions about that?

00:26:05.090 --> 00:26:07.920
I have a little bit about the
proof of how this is done.

00:26:07.920 --> 00:26:11.040
If you wanted to just
do convex regions.

00:26:11.040 --> 00:26:15.530
So the general
approach here is you

00:26:15.530 --> 00:26:18.490
want to visit all of the
regions in some order.

00:26:18.490 --> 00:26:20.726
This is called the tour.

00:26:20.726 --> 00:26:22.100
It's pretty easy
to just-- I mean

00:26:22.100 --> 00:26:24.558
you're allowed to visit regions
more than once, so you just

00:26:24.558 --> 00:26:28.310
keep going, keep trying to visit
some unvisited seam region.

00:26:28.310 --> 00:26:31.360
When you visit a seam region,
it's a convex polygon.

00:26:31.360 --> 00:26:34.290
So what we're going to do is
make our strip fairly wide,

00:26:34.290 --> 00:26:37.150
actually, wide enough
to completely cover

00:26:37.150 --> 00:26:39.400
that seam region.

00:26:39.400 --> 00:26:41.250
And then at this
moment, we basically

00:26:41.250 --> 00:26:44.420
need to turn to do the next one.

00:26:44.420 --> 00:26:48.530
We know how to change the
direction of the strip using

00:26:48.530 --> 00:26:50.470
a turn gadget.

00:26:50.470 --> 00:26:52.850
Then we have to change
the width of the strip.

00:26:52.850 --> 00:26:53.990
Maybe it needs to be wider.

00:26:53.990 --> 00:26:56.080
Maybe it needs to be thinner.

00:26:56.080 --> 00:27:01.630
And then we need to shift the
strip one way or the other.

00:27:01.630 --> 00:27:05.940
So if we just end here, we
turn, we might be misaligned.

00:27:05.940 --> 00:27:09.380
We need to shift it over,
expand it, then do the next one,

00:27:09.380 --> 00:27:13.860
then turn, then shift it
over and set the right width.

00:27:13.860 --> 00:27:16.910
Keep going like that.

00:27:16.910 --> 00:27:17.520
OK.

00:27:17.520 --> 00:27:19.230
That's pretty messy
and complicated,

00:27:19.230 --> 00:27:21.550
but you can do with
these two gadgets.

00:27:21.550 --> 00:27:23.880
Strip width gadget--
you take a strip,

00:27:23.880 --> 00:27:28.750
and you could make it
anywhere between 1/2 and 100%

00:27:28.750 --> 00:27:30.637
of its original width.

00:27:30.637 --> 00:27:33.220
So the idea is you start with a
really wide strip, wide enough

00:27:33.220 --> 00:27:35.030
to cover all the polygons.

00:27:35.030 --> 00:27:37.840
Then you do this gadget and
keep shrinking it by half

00:27:37.840 --> 00:27:40.041
until it's roughly
the right size.

00:27:40.041 --> 00:27:41.540
And then when you're
almost correct,

00:27:41.540 --> 00:27:43.420
you shrink it by a
little bit more--

00:27:43.420 --> 00:27:46.040
here shrinking to a third.

00:27:46.040 --> 00:27:48.560
And then you get
your shrunken strip,

00:27:48.560 --> 00:27:51.680
and it happens right at
the line that you specify.

00:27:51.680 --> 00:27:54.770
So you can basically on
a dime shrink your strip,

00:27:54.770 --> 00:27:59.550
and then by doing the
reverse can grow it back.

00:27:59.550 --> 00:28:03.260
This is maybe not with
simple folds, though.

00:28:03.260 --> 00:28:05.290
And then the other
gadget is a shift gadget,

00:28:05.290 --> 00:28:08.770
where you're at this position
and you want to shift up.

00:28:08.770 --> 00:28:13.110
So that's pretty easy, you
just do two turn gadgets.

00:28:13.110 --> 00:28:18.680
So that's at a high level how
making a desired seam pattern

00:28:18.680 --> 00:28:20.460
works.

00:28:20.460 --> 00:28:23.580
Go on to the next question.

00:28:23.580 --> 00:28:27.210
A lot of people asked
about this-- and this

00:28:27.210 --> 00:28:29.340
is an open problem that
I mentioned orally.

00:28:29.340 --> 00:28:33.040
It's not written in the notes--
which is, can you actually

00:28:33.040 --> 00:28:37.380
do the things we said we
can do with simple folds?

00:28:37.380 --> 00:28:40.280
So can you get a
universal folding

00:28:40.280 --> 00:28:46.160
of a polygon, two-color pattern
polyhedron, using simple folds?

00:28:46.160 --> 00:28:50.600
And I thought it'd be fun to
actually work on this, here,

00:28:50.600 --> 00:28:53.484
live, because I think
this is an easy problem.

00:28:53.484 --> 00:28:55.150
And there's a bunch
of possible answers,

00:28:55.150 --> 00:28:58.850
and there are even two suggested
ideas from the comments field.

00:28:58.850 --> 00:29:03.410
So let me just remind you of
the issue, what's happening,

00:29:03.410 --> 00:29:06.980
and then I need your input,
what's going to work here.

00:29:06.980 --> 00:29:11.890
So general picture for the strip
method was we do one triangle,

00:29:11.890 --> 00:29:16.950
we end here, then we do a
bunch of folds like this,

00:29:16.950 --> 00:29:20.870
and then we end here,
maybe, and then we zigzag.

00:29:20.870 --> 00:29:24.520
And the trouble is we've already
made this triangle over here.

00:29:24.520 --> 00:29:27.857
When we make this triangle,
we have this excess stuff,

00:29:27.857 --> 00:29:29.440
which I haven't drawn
very accurately.

00:29:29.440 --> 00:29:33.300
If you recall, it looks
something like that.

00:29:33.300 --> 00:29:36.000
Or maybe even more like that
if we use right angle turn

00:29:36.000 --> 00:29:37.730
gadgets.

00:29:37.730 --> 00:29:39.960
And then we want to
fold it underneath

00:29:39.960 --> 00:29:41.790
and we're doing
that, the way I said,

00:29:41.790 --> 00:29:44.700
with height gadget
mountain folds.

00:29:44.700 --> 00:29:47.210
But the model's
simple folds, which

00:29:47.210 --> 00:29:48.850
I should make more explicit.

00:29:54.250 --> 00:29:57.720
You're not allowed to
collide during the motion.

00:29:57.720 --> 00:29:59.350
The idea with a simple
fold is that you

00:29:59.350 --> 00:30:08.420
should be folding
along one line segment,

00:30:08.420 --> 00:30:12.100
and you should fold
by-- at least the model

00:30:12.100 --> 00:30:16.070
that we defined back in the
day, I'll talk more about where

00:30:16.070 --> 00:30:20.600
this notion comes from-- you
fold by plus or minus 180

00:30:20.600 --> 00:30:24.110
degrees, which means
after you do the fold,

00:30:24.110 --> 00:30:26.050
you'll be flat again.

00:30:26.050 --> 00:30:29.745
And no collision
during the motion.

00:30:36.767 --> 00:30:39.100
If we folded this triangle,
and then we folded this one,

00:30:39.100 --> 00:30:41.900
and this stuff is on the
top-- we can't mountain fold.

00:30:41.900 --> 00:30:44.920
That's not considered
a simple fold.

00:30:44.920 --> 00:30:48.260
Now one proposal
is, could we just

00:30:48.260 --> 00:30:53.530
make the next triangle
underneath the previous one?

00:30:53.530 --> 00:30:55.890
A different proposal
is valley fold.

00:30:55.890 --> 00:30:57.520
These are actually
different proposals,

00:30:57.520 --> 00:30:59.920
because, especially
for two color patterns,

00:30:59.920 --> 00:31:02.150
it'll make a difference.

00:31:02.150 --> 00:31:05.050
If we valley fold
here there's going

00:31:05.050 --> 00:31:07.392
to be some junk
on the front side,

00:31:07.392 --> 00:31:09.600
especially if you want to
get a desired seam pattern.

00:31:09.600 --> 00:31:11.582
But maybe we'll leave
seam patterns for later.

00:31:11.582 --> 00:31:13.040
If you want to get
a color pattern,

00:31:13.040 --> 00:31:14.870
you might reveal
some wrong color

00:31:14.870 --> 00:31:17.600
when you do that valley fold.

00:31:17.600 --> 00:31:19.870
So I haven't really thought
about this idea yet.

00:31:19.870 --> 00:31:21.960
I think it might be good.

00:31:26.580 --> 00:31:30.940
The idea there would
be-- so you've already

00:31:30.940 --> 00:31:34.040
made this triangle.

00:31:34.040 --> 00:31:35.350
You mountain fold everything.

00:31:35.350 --> 00:31:38.930
Now when you go and
you do these zigzags,

00:31:38.930 --> 00:31:42.180
you want to be underneath
everything that you've done.

00:31:42.180 --> 00:31:44.190
AUDIENCE: Can you fold
the one you've already

00:31:44.190 --> 00:31:47.650
made, like as a
unit, over the side?

00:31:47.650 --> 00:31:50.167
And then make it and then
just put it back on top?

00:31:50.167 --> 00:31:50.750
PROFESSOR: OK.

00:31:50.750 --> 00:31:54.900
Different idea is you basically
fold this out of the way,

00:31:54.900 --> 00:31:58.130
do this thing, height gadget,
and then fold it back.

00:31:58.130 --> 00:31:59.810
Maybe.

00:31:59.810 --> 00:32:01.110
I've wondered about that, too.

00:32:01.110 --> 00:32:03.193
Is it's going to get a
little challenging, though.

00:32:03.193 --> 00:32:05.680
In general, there's a
huge set of triangles,

00:32:05.680 --> 00:32:08.680
so unless you can like go
far away, make your triangle,

00:32:08.680 --> 00:32:12.630
and then plop it down--
maybe it's possible.

00:32:12.630 --> 00:32:16.780
I guess we can pursue that
idea, but maybe first we

00:32:16.780 --> 00:32:19.280
should exhaust the easier ideas.

00:32:19.280 --> 00:32:21.800
I mean, that is definitely
plausible that that's possible.

00:32:21.800 --> 00:32:25.080
Doing that with simple folds
and not leaving any garbage

00:32:25.080 --> 00:32:26.580
is going to be a
little challenging,

00:32:26.580 --> 00:32:29.450
but it might be doable.

00:32:29.450 --> 00:32:31.610
This to me is the simplest
idea, so we should first

00:32:31.610 --> 00:32:32.590
see if it works.

00:32:32.590 --> 00:32:34.850
Does anyone see
problems with this plan?

00:32:37.470 --> 00:32:39.480
I have some strips.

00:32:39.480 --> 00:32:41.320
We could think
about what it means

00:32:41.320 --> 00:32:47.360
to be doing a turn
gadget underneath here.

00:32:47.360 --> 00:32:50.480
So I don't know
quite about, well,

00:32:50.480 --> 00:32:53.090
let's suppose we
are already here.

00:32:53.090 --> 00:32:56.252
And now maybe I do
some as the turn gadget

00:32:56.252 --> 00:32:57.210
goes to mountain folds.

00:32:59.800 --> 00:33:06.310
Then at 90 degrees, and then
a valley fold like that.

00:33:06.310 --> 00:33:08.240
And then I do a mountain fold.

00:33:08.240 --> 00:33:11.180
I think they might be OK,
because turn gadgets start

00:33:11.180 --> 00:33:13.860
with a mountain fold.

00:33:13.860 --> 00:33:15.790
So if you're
underneath everything,

00:33:15.790 --> 00:33:17.990
that's going to avoid collision.

00:33:17.990 --> 00:33:20.880
And then the valley
fold brings it back.

00:33:20.880 --> 00:33:24.100
Again, we're using just
the space below everything

00:33:24.100 --> 00:33:26.095
that we see.

00:33:26.095 --> 00:33:28.220
So then we make that strip,
we keep turning around,

00:33:28.220 --> 00:33:32.590
and then later on we're going
to mountain fold this behind,

00:33:32.590 --> 00:33:34.075
somehow, to meet this edge.

00:33:37.800 --> 00:33:39.650
Seems OK.

00:33:39.650 --> 00:33:41.080
Yeah?

00:33:41.080 --> 00:33:42.119
Question?

00:33:42.119 --> 00:33:42.952
AUDIENCE: I'm sorry.

00:33:42.952 --> 00:33:44.270
I'm confused about something.

00:33:44.270 --> 00:33:47.210
When you're doing
the turn gadget,

00:33:47.210 --> 00:33:51.130
while the paper is above the
first triangle you go over,

00:33:51.130 --> 00:33:54.070
you're doing a bunch
of turns where you're

00:33:54.070 --> 00:33:57.420
taking a piece of paper up
another one, folding just that

00:33:57.420 --> 00:33:58.850
part Is that a s--

00:33:58.850 --> 00:34:01.310
PROFESSOR: Going from
one triangle next.

00:34:01.310 --> 00:34:01.810
Yeah.

00:34:01.810 --> 00:34:04.230
So we could think
about that, too.

00:34:04.230 --> 00:34:05.560
It's very, you're right.

00:34:05.560 --> 00:34:08.164
I mean, I'm just looking
at the turning around part

00:34:08.164 --> 00:34:10.080
for making a single
triangle, but there's also

00:34:10.080 --> 00:34:12.446
the turn gadget going
from here to here.

00:34:12.446 --> 00:34:14.070
It's actually slightly
more complicated

00:34:14.070 --> 00:34:16.111
than we've covered in
class, but not really much.

00:34:16.111 --> 00:34:18.350
It's just a slightly
generalized turn gadget.

00:34:18.350 --> 00:34:21.170
So you're coming here, you
basically want to turn around.

00:34:24.967 --> 00:34:26.550
Let's just think
about a way to do it.

00:34:26.550 --> 00:34:32.354
You could imagine first
doing a turn like this.

00:34:37.370 --> 00:34:39.540
It's not exactly a
pure turn gadget.

00:34:39.540 --> 00:34:46.239
And then turning around
to get to next place--

00:34:46.239 --> 00:34:50.070
this is really hard
to do on a blackboard.

00:34:50.070 --> 00:34:52.734
Strips just tend not
to stay together well.

00:34:52.734 --> 00:34:54.984
OK, now we're going parallel
to the correct direction,

00:34:54.984 --> 00:34:57.740
and then we turn back and forth.

00:34:57.740 --> 00:34:59.750
But each of those is
just using turn gadgets.

00:34:59.750 --> 00:35:01.750
As long as a turn
gadget works fine,

00:35:01.750 --> 00:35:04.655
a turn gadget is going to
be a mountain fold, which

00:35:04.655 --> 00:35:06.720
is going to go
behind everything,

00:35:06.720 --> 00:35:11.740
and then a valley fold to bring
it to a desired direction.

00:35:11.740 --> 00:35:14.650
Those are all using
everything behind the board.

00:35:14.650 --> 00:35:17.410
So it seems like all
those operations are OK.

00:35:17.410 --> 00:35:19.240
Now we should also
check the color reversal

00:35:19.240 --> 00:35:21.510
gadget, which--
it's funny thing.

00:35:21.510 --> 00:35:26.010
I remember everything I
did before 2000 or so,

00:35:26.010 --> 00:35:29.240
so I still have memorized the
color reversal gadget, at least

00:35:29.240 --> 00:35:29.820
I think so.

00:35:29.820 --> 00:35:33.770
I should probably color
this piece of paper,

00:35:33.770 --> 00:35:35.550
so you can see
the colors change.

00:35:35.550 --> 00:35:37.950
I don't remember anything
I've done since 2000,

00:35:37.950 --> 00:35:41.530
but anything up to 2000 I'm OK.

00:35:41.530 --> 00:35:45.449
This is 1998, I think.

00:35:45.449 --> 00:35:47.490
I remember folding lots
of-- this is ticker tape,

00:35:47.490 --> 00:35:49.360
they use it for or
not ticker tape,

00:35:49.360 --> 00:35:52.190
but they use this for
like adding machines.

00:35:52.190 --> 00:35:54.150
So I think it's a 90
degree mountain fold,

00:35:54.150 --> 00:35:57.680
then you fold up
like that, and then

00:35:57.680 --> 00:36:00.639
you fold back down with a
mountain fold like that.

00:36:00.639 --> 00:36:01.680
You get a color reversal.

00:36:01.680 --> 00:36:06.990
And all of those folds we're
working behind my plane

00:36:06.990 --> 00:36:09.517
here, so should avoid
collision with everything.

00:36:09.517 --> 00:36:11.350
I think you could do
color reversal and turn

00:36:11.350 --> 00:36:13.370
gadgets behind.

00:36:13.370 --> 00:36:15.070
And so the suggestion works.

00:36:15.070 --> 00:36:17.600
Who made this suggestion?

00:36:17.600 --> 00:36:18.240
Good idea.

00:36:21.087 --> 00:36:23.420
Unless there are any objections,
I think that will work.

00:36:23.420 --> 00:36:28.510
I had a different plan, which
was to use this second idea

00:36:28.510 --> 00:36:32.050
and set up the turn gadgets
so there is no-- when you fold

00:36:32.050 --> 00:36:35.550
this with the valley fold,
there is no ugly colors.

00:36:35.550 --> 00:36:37.280
So you could maybe
modify the turn gadget

00:36:37.280 --> 00:36:40.190
to be completely solidly
colored on both sides,

00:36:40.190 --> 00:36:42.045
but I think this is much easier.

00:36:42.045 --> 00:36:44.170
It's probably why I didn't
write it down the notes,

00:36:44.170 --> 00:36:45.270
but I'm not sure.

00:36:45.270 --> 00:36:45.986
Yeah?

00:36:45.986 --> 00:36:48.610
AUDIENCE: I think you could also
just do a thing where you just

00:36:48.610 --> 00:36:50.901
take it far away, because
you have a really long strip.

00:36:50.901 --> 00:36:54.806
So you can just take
that strip, and go

00:36:54.806 --> 00:36:58.141
to where there are no things,
fold it, and then take it out

00:36:58.141 --> 00:36:58.890
and put it on top.

00:36:58.890 --> 00:36:59.150
PROFESSOR: OK.

00:36:59.150 --> 00:37:00.358
How do you do that last part?

00:37:03.446 --> 00:37:07.817
AUDIENCE: Accordion fold
it with the right lengths.

00:37:07.817 --> 00:37:09.900
PROFESSOR: So you have to
do it with simple folds.

00:37:09.900 --> 00:37:12.110
That's the main,
that's the challenge.

00:37:12.110 --> 00:37:14.642
So the idea is
you're way out here,

00:37:14.642 --> 00:37:16.100
you have a triangle
out here, which

00:37:16.100 --> 00:37:18.729
you want to bring over here.

00:37:18.729 --> 00:37:20.020
Maybe I should do it like this.

00:37:22.640 --> 00:37:24.930
You could do
something like this,

00:37:24.930 --> 00:37:27.050
so now the triangle's over here.

00:37:27.050 --> 00:37:31.090
Then maybe you want to
go almost all the way

00:37:31.090 --> 00:37:35.481
here and then fold it back, and
then fold it forth, and back,

00:37:35.481 --> 00:37:37.730
until you get your triangle
exactly where you want it.

00:37:37.730 --> 00:37:38.810
AUDIENCE: Figure
out from the base--

00:37:38.810 --> 00:37:39.480
PROFESSOR: It seems plausible.

00:37:39.480 --> 00:37:41.140
AUDIENCE: --where
you need to fold it.

00:37:41.140 --> 00:37:43.970
PROFESSOR: My only concern
would be when you do this thing,

00:37:43.970 --> 00:37:46.660
there might be a little corner.

00:37:46.660 --> 00:37:48.660
Depends how you fold this
thing, and then you've

00:37:48.660 --> 00:37:50.100
got to hide that corner.

00:37:50.100 --> 00:37:52.910
And if there's triangles
all around here,

00:37:52.910 --> 00:37:54.045
there may not be room.

00:37:54.045 --> 00:37:56.170
I mean, maybe if there's
triangles all around here,

00:37:56.170 --> 00:37:59.130
it's OK to have that corner,
but maybe the triangles

00:37:59.130 --> 00:38:00.670
are different colors.

00:38:00.670 --> 00:38:03.562
So I do believe that
should be possible,

00:38:03.562 --> 00:38:05.520
but I think it is a little
bit more complicated

00:38:05.520 --> 00:38:08.180
because you have to hide
one last piece after you

00:38:08.180 --> 00:38:10.630
get in position.

00:38:10.630 --> 00:38:12.505
Anyway, I think there
are at least three ways

00:38:12.505 --> 00:38:13.551
to solve this problem.

00:38:13.551 --> 00:38:14.050
Yeah?

00:38:14.050 --> 00:38:15.550
AUDIENCE: Are you
allowed to unfold?

00:38:15.550 --> 00:38:17.091
PROFESSOR: Are you
allowed to unfold?

00:38:17.091 --> 00:38:18.350
That's a good question.

00:38:18.350 --> 00:38:22.210
I don't remember whether
the original model says

00:38:22.210 --> 00:38:23.890
whether you're
allowed to unfold.

00:38:23.890 --> 00:38:27.170
So if there are two versions,
simple folds and unfolds,

00:38:27.170 --> 00:38:29.530
or just simple folds.

00:38:29.530 --> 00:38:33.332
I don't think we actually
said unfolding is allowed.

00:38:33.332 --> 00:38:35.540
Though we're definitely
thinking about at some point,

00:38:35.540 --> 00:38:38.632
it's probably not in
the model as defined.

00:38:38.632 --> 00:38:39.215
Any questions?

00:38:42.380 --> 00:38:44.350
What's next?

00:38:44.350 --> 00:38:46.357
This is the paper that
introduced simple folds.

00:38:46.357 --> 00:38:47.940
It's called "When
Can You Fold a Map?"

00:38:47.940 --> 00:38:51.920
because it originally was
motivated by map folding.

00:38:51.920 --> 00:38:57.870
And it had a bunch of reasons
for introducing simple folds,

00:38:57.870 --> 00:39:02.070
among them is this quote, which
if you watched L1 was in there.

00:39:02.070 --> 00:39:05.500
I think the easiest way to
refold a roadmap is differently

00:39:05.500 --> 00:39:07.930
and her goal was
to make it easier

00:39:07.930 --> 00:39:11.100
to refold your
roadmap correctly.

00:39:11.100 --> 00:39:13.770
So here's one quote from
that paper as motivation.

00:39:13.770 --> 00:39:15.570
So it's origami motivation.

00:39:15.570 --> 00:39:17.920
But we're also wondering
about applications,

00:39:17.920 --> 00:39:20.720
like sheet metal bending,
cardboard folding, things

00:39:20.720 --> 00:39:23.660
like that where you want
to manufacture things

00:39:23.660 --> 00:39:25.190
using a machine.

00:39:25.190 --> 00:39:28.610
And while origamists can
do complicated folds,

00:39:28.610 --> 00:39:31.225
non-simple folds,
to make art work,

00:39:31.225 --> 00:39:33.200
in practical
manufacturing, you want

00:39:33.200 --> 00:39:35.140
to have the simplest
possible machine.

00:39:35.140 --> 00:39:38.100
So if you can get away with just
simple folds, as defined here,

00:39:38.100 --> 00:39:39.350
that would be great.

00:39:39.350 --> 00:39:42.780
Now you don't really need, some
of these are maybe artificial.

00:39:42.780 --> 00:39:46.717
You probably don't need
the 180 degree condition,

00:39:46.717 --> 00:39:49.050
because most of the things
you want to fold aren't flat.

00:39:49.050 --> 00:39:52.567
We introduced that just to keep
things simple mathematically.

00:39:52.567 --> 00:39:54.900
But you'd like to fold along
just one segment at a time,

00:39:54.900 --> 00:39:55.840
ideally.

00:39:55.840 --> 00:39:57.670
You definitely don't
want collision.

00:39:57.670 --> 00:39:59.410
You don't want
material to hit things.

00:39:59.410 --> 00:40:01.110
Whereas in origami,
you can do tucks,

00:40:01.110 --> 00:40:06.560
you can do things that
are not simple folds.

00:40:06.560 --> 00:40:08.550
That's a lot harder
with a machine

00:40:08.550 --> 00:40:10.900
that doesn't have any feedback.

00:40:10.900 --> 00:40:13.740
So here's a very simple machine.

00:40:13.740 --> 00:40:19.010
This is a brake folder.

00:40:19.010 --> 00:40:20.890
We actually have a
brake folder in CC,

00:40:20.890 --> 00:40:23.490
although this one
is Electrabrake,

00:40:23.490 --> 00:40:25.670
so this has an electric assist.

00:40:25.670 --> 00:40:30.380
So the idea is you slide your
sheet in, and you hold here.

00:40:30.380 --> 00:40:32.570
You pull up, and,
in this case, he's

00:40:32.570 --> 00:40:34.170
bending to a 90 degree angle.

00:40:34.170 --> 00:40:38.370
You can adjust it to
different angles and so on.

00:40:38.370 --> 00:40:40.180
There are lots of
automated machines,

00:40:40.180 --> 00:40:42.940
it's a little hard to get
photos and videos of them,

00:40:42.940 --> 00:40:45.310
but they're based
on this principle.

00:40:45.310 --> 00:40:48.340
Maybe you push in
a v, and you end up

00:40:48.340 --> 00:40:49.640
with the crease in one spot.

00:40:49.640 --> 00:40:51.940
And you'd like to just make
a sort of conveyor belt

00:40:51.940 --> 00:40:54.220
with lots of different
pushes and pulls

00:40:54.220 --> 00:40:56.940
and do a bunch of
simple folds, basically,

00:40:56.940 --> 00:40:59.137
except for this 180
degree constraint.

00:40:59.137 --> 00:41:00.720
And so we're just
curious about what's

00:41:00.720 --> 00:41:02.530
possible by simple
folds, and that led us

00:41:02.530 --> 00:41:04.420
into the map
folding stuff, where

00:41:04.420 --> 00:41:06.370
it's fairly easy
to characterize.

00:41:06.370 --> 00:41:10.790
Other things where it's harder,
we'll see in lecture three.

00:41:10.790 --> 00:41:13.430
I thought I'd show you
some examples of things

00:41:13.430 --> 00:41:15.670
people make with pretty
much simple folds,

00:41:15.670 --> 00:41:17.870
other than this 180 condition.

00:41:17.870 --> 00:41:21.250
Out of things like--
this is folding wood.

00:41:21.250 --> 00:41:23.030
You take a sheet of material.

00:41:23.030 --> 00:41:24.410
You start bending
these parts up,

00:41:24.410 --> 00:41:26.410
and you can make a little
chair, a little table.

00:41:26.410 --> 00:41:28.159
And you could fold it
back when you're not

00:41:28.159 --> 00:41:29.600
using your living room.

00:41:29.600 --> 00:41:31.760
You can hide everything.

00:41:31.760 --> 00:41:33.902
So you could imagine also
having multiple sheets,

00:41:33.902 --> 00:41:35.610
and sometimes your
room is a living room,

00:41:35.610 --> 00:41:38.140
other times it's-- whatever
furniture you need,

00:41:38.140 --> 00:41:40.420
you just unfold the
appropriate thing.

00:41:40.420 --> 00:41:42.602
That's the vision.

00:41:42.602 --> 00:41:44.060
Here's a cute little
folding chair.

00:41:44.060 --> 00:41:46.480
There's a huge number
of folding chairs,

00:41:46.480 --> 00:41:50.410
but this one is pretty
much simple folds.

00:41:50.410 --> 00:41:52.010
The one thing I'm
not sure whether it

00:41:52.010 --> 00:41:55.020
falls under simple
folds is this fold.

00:41:55.020 --> 00:41:58.980
You do fold along one line, but
it's in two different pieces.

00:41:58.980 --> 00:42:00.730
I'm not sure we'd call
that a simple fold.

00:42:00.730 --> 00:42:03.350
There's, of course, lots of
slits in the material here.

00:42:03.350 --> 00:42:05.584
But of course it has
all the same advantages

00:42:05.584 --> 00:42:06.250
of simple folds.

00:42:06.250 --> 00:42:09.910
This is easy to execute
one step at time.

00:42:09.910 --> 00:42:11.410
Here's some more
complicated design.

00:42:11.410 --> 00:42:12.993
Some of these are
computer renderings.

00:42:12.993 --> 00:42:14.100
Some of these are real.

00:42:14.100 --> 00:42:17.330
Again, taking furniture
out of flat walls.

00:42:20.010 --> 00:42:21.330
And here's some table designs.

00:42:21.330 --> 00:42:24.119
These are sheet metal.

00:42:24.119 --> 00:42:24.785
I like this one.

00:42:24.785 --> 00:42:25.850
It's very simple.

00:42:25.850 --> 00:42:28.820
Take the square of sheet
metal, put in some slips do,

00:42:28.820 --> 00:42:32.510
some very simple folds--
boom, you've got a table.

00:42:32.510 --> 00:42:36.470
This one's also pretty simple.

00:42:36.470 --> 00:42:39.060
Again, here we're
folding along one line,

00:42:39.060 --> 00:42:40.540
but it's in two
different pieces.

00:42:40.540 --> 00:42:41.610
So is that a simple fold?

00:42:41.610 --> 00:42:43.568
It's definitely harder
to build such a machine,

00:42:43.568 --> 00:42:44.600
but it's doable.

00:42:44.600 --> 00:42:47.340
Here we have something that's
definitely not a simple fold,

00:42:47.340 --> 00:42:49.810
but it's also fairly
easy to execute.

00:42:49.810 --> 00:42:54.420
Using a roller, you can
kind of curve one segment.

00:42:54.420 --> 00:42:56.055
I mean, when you
go to reality, you

00:42:56.055 --> 00:42:57.860
can change the model all
sorts of different ways

00:42:57.860 --> 00:42:59.318
and still have
something practical.

00:42:59.318 --> 00:43:03.740
And no one rule set is gospel.

00:43:03.740 --> 00:43:07.200
But mathematically we have to
hone in on at least one model

00:43:07.200 --> 00:43:10.010
at a time, and then we can
see how changing the rules

00:43:10.010 --> 00:43:12.760
changes what you can make.

00:43:12.760 --> 00:43:14.300
OK, next question.

00:43:14.300 --> 00:43:17.020
This is actually about the
definition of simple folds,

00:43:17.020 --> 00:43:20.359
so it was probably
answered already.

00:43:20.359 --> 00:43:22.900
Is it allowed to bend the rest
of paper to get it out the way

00:43:22.900 --> 00:43:23.770
and avoid collision?

00:43:23.770 --> 00:43:24.970
The answer is no.

00:43:24.970 --> 00:43:27.570
In simple folds,
at least, you're

00:43:27.570 --> 00:43:29.899
only allowed to move
that one segment.

00:43:29.899 --> 00:43:31.440
We have actually
lately been thinking

00:43:31.440 --> 00:43:32.856
about a different
model, where you

00:43:32.856 --> 00:43:37.120
do allow this, but simple folds,
you can't move other parts.

00:43:37.120 --> 00:43:40.730
You can just move the single
hinge that you're folding.

00:43:40.730 --> 00:43:44.824
And the end product has to
be flat, yes, in our model.

00:43:44.824 --> 00:43:46.490
Though, it would be
interesting to think

00:43:46.490 --> 00:43:48.781
without this condition,
because you're doing 180 degree

00:43:48.781 --> 00:43:50.840
operations before
you do the next one,

00:43:50.840 --> 00:43:52.364
you'll be flat at all times.

00:43:52.364 --> 00:43:53.780
1D or 2D, according
to whether you

00:43:53.780 --> 00:43:58.280
started with a 1D piece of
paper or 2D piece of paper.

00:43:58.280 --> 00:43:58.780
OK.

00:44:01.780 --> 00:44:04.410
The second half of the
lecture was basically

00:44:04.410 --> 00:44:08.530
about proving, characterizing
flat foldability

00:44:08.530 --> 00:44:11.110
of 1D segments.

00:44:11.110 --> 00:44:14.160
And it showed in particular
that simple folds are universal,

00:44:14.160 --> 00:44:21.530
that if you have some
mountain valley pattern,

00:44:21.530 --> 00:44:24.700
and it's foldable at all,
if it's flat foldable,

00:44:24.700 --> 00:44:28.220
it will be flat foldable
via simple folds.

00:44:28.220 --> 00:44:30.875
And in particular using
crimps and n folds.

00:44:36.410 --> 00:44:37.860
And it was a bit
of a messy prove,

00:44:37.860 --> 00:44:41.320
partly because I've made a
mistake in lecture, as you saw.

00:44:41.320 --> 00:44:43.010
I kind of corrected
for it on the fly,

00:44:43.010 --> 00:44:44.570
but it's maybe not
the best written.

00:44:44.570 --> 00:44:48.660
So I wanted to go through
a couple quick examples

00:44:48.660 --> 00:44:53.220
to make clear all
the issues there.

00:44:53.220 --> 00:44:55.470
So here are the ones I prepared.

00:44:55.470 --> 00:44:58.530
We can certainly do more
if it's still not clear.

00:45:02.660 --> 00:45:05.660
So here's a simple
mountain-valley pattern,

00:45:05.660 --> 00:45:09.300
and it's got some long
segments and, let's just

00:45:09.300 --> 00:45:11.110
say, equidistant segments here.

00:45:11.110 --> 00:45:13.320
Three valleys, then a mountain.

00:45:13.320 --> 00:45:18.510
So first question
is, is this mingling?

00:45:18.510 --> 00:45:21.130
And then the ultimate question
is, is it flat foldable?

00:45:28.140 --> 00:45:29.220
So is it mingling?

00:45:29.220 --> 00:45:32.680
Well, maybe you
could answer for me.

00:45:32.680 --> 00:45:33.860
Just yes or no.

00:45:33.860 --> 00:45:34.950
50% chance.

00:45:37.910 --> 00:45:41.620
So maybe the definition of
mingling is not super clear.

00:45:41.620 --> 00:45:42.990
Let me review it.

00:45:42.990 --> 00:45:45.760
So you look at each,
I mean, generally

00:45:45.760 --> 00:45:47.410
of a sequence of
mountains and valleys,

00:45:47.410 --> 00:45:49.301
you look at a chunk
of all valleys,

00:45:49.301 --> 00:45:51.050
then you look at a
chunk of all mountains,

00:45:51.050 --> 00:45:52.091
and chunk of all valleys.

00:45:52.091 --> 00:45:55.090
Here there's only two chunks--
three valleys and one mountain.

00:45:55.090 --> 00:45:57.760
And the definition is a little
awkward for a single crease,

00:45:57.760 --> 00:46:00.160
but let's start
with the valleys.

00:46:00.160 --> 00:46:04.860
The point is to check-- for
the first segment between two

00:46:04.860 --> 00:46:10.050
valleys versus the segment just
before it, which is bigger?

00:46:10.050 --> 00:46:14.030
And this is the bad case this
is the non-mingling situation,

00:46:14.030 --> 00:46:16.550
because this thing
is bigger than this.

00:46:16.550 --> 00:46:21.140
Strictly bigger, the notation
we use in the lecture

00:46:21.140 --> 00:46:23.640
is an open square bracket.

00:46:23.640 --> 00:46:26.410
So square bracket meant
that this is bigger.

00:46:26.410 --> 00:46:29.700
Round bracket would mean this
is less than or equal to this.

00:46:29.700 --> 00:46:31.050
That's just the definition.

00:46:31.050 --> 00:46:33.010
Over on this side
of the valleys,

00:46:33.010 --> 00:46:35.890
this length is equal
to this length.

00:46:35.890 --> 00:46:38.240
So the last distance
between two values

00:46:38.240 --> 00:46:40.140
is equal to the
one right after it.

00:46:40.140 --> 00:46:45.820
And that's a good case, so we
write a closed, round bracket.

00:46:45.820 --> 00:46:47.486
Then we have a
sequence of mountains,

00:46:47.486 --> 00:46:48.860
and here it's a
little confusing,

00:46:48.860 --> 00:46:51.490
but it's the same idea.

00:46:51.490 --> 00:46:53.159
So this is the very
first mountain.

00:46:53.159 --> 00:46:55.450
You look at the length right
after it versus the length

00:46:55.450 --> 00:46:58.070
right before it,
and this is smaller.

00:46:58.070 --> 00:46:59.240
And that's a good case.

00:46:59.240 --> 00:47:03.280
We write an open, round bracket
for this mountain group.

00:47:03.280 --> 00:47:04.430
And then same thing.

00:47:04.430 --> 00:47:06.390
Now we're comparing
the same two distances,

00:47:06.390 --> 00:47:08.700
but it's now bad, because
this one is strictly longer

00:47:08.700 --> 00:47:09.320
than this one.

00:47:09.320 --> 00:47:11.620
So we write a closed,
square bracket.

00:47:11.620 --> 00:47:13.890
So that's the notation
in this example.

00:47:13.890 --> 00:47:17.030
Any questions about that?

00:47:17.030 --> 00:47:19.140
So you just have to
check-- in general,

00:47:19.140 --> 00:47:23.590
you have a whole group of
valleys-- these are all

00:47:23.590 --> 00:47:26.510
valleys, or all
mountains-- and you

00:47:26.510 --> 00:47:29.840
want to compare this
one versus this one.

00:47:29.840 --> 00:47:32.760
And square or closed,
according to which is bigger.

00:47:32.760 --> 00:47:36.010
And you want to look at the last
one versus the after last one.

00:47:38.530 --> 00:47:40.070
So that's the notation.

00:47:40.070 --> 00:47:43.410
And the point of the proof
was to argue that, either

00:47:43.410 --> 00:47:47.410
if you're going to be
flat foldable at all,

00:47:47.410 --> 00:47:49.820
actually if you're
mingling-- mingling meant

00:47:49.820 --> 00:47:52.570
that for each of these
intervals, at least one

00:47:52.570 --> 00:47:54.780
of the sides was round.

00:47:54.780 --> 00:47:56.180
That was considered good.

00:47:56.180 --> 00:48:00.470
So this crease
pattern is mingling,

00:48:00.470 --> 00:48:02.360
because there's two regions.

00:48:02.360 --> 00:48:03.590
This one has a round bracket.

00:48:03.590 --> 00:48:05.320
This one has a round bracket.

00:48:05.320 --> 00:48:08.740
And what we argue is
it if you're mingling,

00:48:08.740 --> 00:48:11.140
which was necessary, if
you're flat foldable,

00:48:11.140 --> 00:48:12.780
you have to be mingling.

00:48:12.780 --> 00:48:14.740
It's a necessary but
not sufficient condition

00:48:14.740 --> 00:48:16.760
for flat foldability.

00:48:16.760 --> 00:48:19.300
If you're mingling,
either you have a pattern

00:48:19.300 --> 00:48:22.140
like this, close round
bracket, open round bracket.

00:48:22.140 --> 00:48:26.590
That's good because this
is a crimp that you can do.

00:48:26.590 --> 00:48:27.470
You see it up here.

00:48:27.470 --> 00:48:29.070
This is a crimp.

00:48:29.070 --> 00:48:31.610
You valley fold, mountain fold,
and you don't hide anything

00:48:31.610 --> 00:48:33.360
when you make that operation.

00:48:33.360 --> 00:48:35.820
Or there's an end fold, which
corresponded to an open round

00:48:35.820 --> 00:48:37.236
bracket at the
beginning or closed

00:48:37.236 --> 00:48:38.510
round bracket at the end.

00:48:38.510 --> 00:48:39.610
So here there's a crimp.

00:48:39.610 --> 00:48:42.260
Let's do the crimp.

00:48:42.260 --> 00:48:47.090
So when we do the crimp, let's
keep this part of paper fixed.

00:48:47.090 --> 00:48:52.070
So this we go over
to here, hopefully,

00:48:52.070 --> 00:48:56.470
then we valley fold,
then we mountain fold,

00:48:56.470 --> 00:48:59.490
and we keep going from there.

00:48:59.490 --> 00:49:02.660
That segment is that segment.

00:49:02.660 --> 00:49:07.930
So we still have this valley.

00:49:07.930 --> 00:49:09.950
This was a valley
we just folded.

00:49:09.950 --> 00:49:12.030
This is the mountain
we just folded.

00:49:12.030 --> 00:49:14.472
Now conceptually, we just
sort of fuse this back

00:49:14.472 --> 00:49:16.430
into the paper, because
those creases are done.

00:49:16.430 --> 00:49:17.846
We don't need to
think about them.

00:49:17.846 --> 00:49:22.160
The point is, in that region
there were no extra creases.

00:49:22.160 --> 00:49:23.910
These round parentheses
will guarantee

00:49:23.910 --> 00:49:27.530
there's nothing here, no
creases here, here, or here.

00:49:27.530 --> 00:49:31.050
Could be creases farther away
but by these inequalities,

00:49:31.050 --> 00:49:34.140
that this length is less
than or equal to this one,

00:49:34.140 --> 00:49:38.220
and this length is less
than or equal to this one.

00:49:38.220 --> 00:49:41.050
Sorry, greater than or equal to.

00:49:41.050 --> 00:49:42.430
Then you know this is OK.

00:49:47.430 --> 00:49:50.120
So there's two valleys left.

00:49:50.120 --> 00:49:52.799
So now we have two valleys,
we have a long segment,

00:49:52.799 --> 00:49:53.590
and a long segment.

00:49:53.590 --> 00:49:55.970
And this is something
that can't be made.

00:49:55.970 --> 00:49:58.470
Because there's no folded
state of this thing,

00:49:58.470 --> 00:50:02.340
never mind simple folds, because
it's going to cross like that.

00:50:02.340 --> 00:50:03.570
So this is not flat foldable.

00:50:06.340 --> 00:50:09.680
It's also not mingling,
because if you

00:50:09.680 --> 00:50:11.842
look at these two valleys--

00:50:11.842 --> 00:50:13.300
You look at the
distance over here.

00:50:13.300 --> 00:50:15.160
It's bigger than this
one, so that's bad,

00:50:15.160 --> 00:50:17.110
so you have an open
square bracket.

00:50:17.110 --> 00:50:21.121
And this one is also bigger than
this, imagine these as fused,

00:50:21.121 --> 00:50:22.620
and so it's a closed
square bracket.

00:50:22.620 --> 00:50:25.140
And so this group of
values is not mingling.

00:50:25.140 --> 00:50:26.930
So it's not mingling.

00:50:26.930 --> 00:50:29.160
So ultimately this
pattern we started

00:50:29.160 --> 00:50:32.300
with is not flat foldable,
because one of the things we

00:50:32.300 --> 00:50:36.279
proved is doing a crimp never
changes flat foldability.

00:50:36.279 --> 00:50:37.570
It's always a safe thing to do.

00:50:40.302 --> 00:50:41.760
You might wonder,
oh, maybe there's

00:50:41.760 --> 00:50:44.340
some other fold I could to
do that eventually works,

00:50:44.340 --> 00:50:47.380
but we proved crimps
are always safe to do.

00:50:47.380 --> 00:50:49.280
So we did it, and we got stock.

00:50:49.280 --> 00:50:51.220
That means this was
not flat foldable,

00:50:51.220 --> 00:50:52.680
even though it was mingling.

00:50:52.680 --> 00:50:55.050
And so the mingling
forever property just

00:50:55.050 --> 00:50:57.490
means, if it's mingling
and then you do a crimp,

00:50:57.490 --> 00:50:59.185
and it's still mingling, and
if you keep doing crimps,

00:50:59.185 --> 00:51:00.601
and it stays
mingling all the way,

00:51:00.601 --> 00:51:01.947
then you were flat foldable.

00:51:01.947 --> 00:51:03.780
It's not a very satisfying
characterization,

00:51:03.780 --> 00:51:07.660
but it is a thing.

00:51:07.660 --> 00:51:15.030
Maybe I'll do one more
example where it works,

00:51:15.030 --> 00:51:18.110
so we're super clear.

00:51:18.110 --> 00:51:22.605
Whoa, we're out of time, so
I won't do another example.

00:51:22.605 --> 00:51:23.480
All right, ambitious.

00:51:29.930 --> 00:51:31.800
I gotta work on my timing.

00:51:31.800 --> 00:51:32.300
There are a

00:51:32.300 --> 00:51:33.700
Couple other fun questions here.

00:51:33.700 --> 00:51:35.824
I would encourage you to
read the notes about them.

00:51:35.824 --> 00:51:38.030
In particular, there's
an algorithmic question.

00:51:38.030 --> 00:51:40.050
How do you actually
compute this efficiently?

00:51:40.050 --> 00:51:43.030
You could do it very
efficiently in linear time.

00:51:43.030 --> 00:51:47.320
So n, where c is one, just n
time-- instead of n squared

00:51:47.320 --> 00:51:50.384
or something-- using
a pretty simple idea.

00:51:50.384 --> 00:51:52.050
Basically just look
for the first crimp,

00:51:52.050 --> 00:51:54.360
do it, and then see if
there are crimps nearby,

00:51:54.360 --> 00:51:55.927
and keep going
forward, and you can

00:51:55.927 --> 00:51:57.260
prove that it takes linear time.

00:52:00.220 --> 00:52:02.660
There is this fun question
I enjoy thinking about.

00:52:02.660 --> 00:52:05.280
Can you make any mountain-valley
pattern flat foldable

00:52:05.280 --> 00:52:06.260
by adding creases?

00:52:06.260 --> 00:52:07.197
The answer is yes.

00:52:07.197 --> 00:52:08.530
You can think of it as a puzzle.

00:52:08.530 --> 00:52:10.180
There is one proposed
way to do it here.

00:52:10.180 --> 00:52:11.513
I have another one in the notes.

00:52:11.513 --> 00:52:13.592
You can think about it.

00:52:13.592 --> 00:52:15.050
And the last
question, is what does

00:52:15.050 --> 00:52:17.300
it possibly mean to fold
something in four dimensions?

00:52:17.300 --> 00:52:18.430
How do you imagine it?

00:52:18.430 --> 00:52:21.360
Hard to imagine, but
you can think about it.

00:52:21.360 --> 00:52:23.390
You have a d-dimensional
piece of paper,

00:52:23.390 --> 00:52:25.820
you fold it through
d plus 1 dimensions.

00:52:25.820 --> 00:52:29.910
If you want it flat folded, it
ends up back in d dimensions,

00:52:29.910 --> 00:52:32.890
and your creases are
d minus 1 dimensional.

00:52:32.890 --> 00:52:34.660
And the rest you just
have to visualize.

00:52:34.660 --> 00:52:36.565
I have one example
folding a solid cube

00:52:36.565 --> 00:52:38.070
in half in the notes.

00:52:38.070 --> 00:52:39.432
That's certainly possible.

00:52:39.432 --> 00:52:41.140
That's not very well
studied, and there's

00:52:41.140 --> 00:52:42.556
lots of interesting
open questions

00:52:42.556 --> 00:52:44.380
about higher
dimensional folding.

00:52:44.380 --> 00:52:47.860
Any questions before we go?

00:52:47.860 --> 00:52:48.950
All right.

00:52:48.950 --> 00:52:51.700
Watch lecture three, and
please send your feedback.

00:52:51.700 --> 00:52:53.390
It was really helpful.

