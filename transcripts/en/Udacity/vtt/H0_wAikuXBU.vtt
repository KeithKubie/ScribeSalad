WEBVTT
Kind: captions
Language: en

00:00:00.530 --> 00:00:02.370
So it's going to be your task, to add

00:00:02.370 --> 00:00:05.680
a task to send a confirmation email. The first thing

00:00:05.680 --> 00:00:09.500
you need to do is add the sendConfirmationEmail servlet

00:00:09.500 --> 00:00:14.280
to your project. And it goes in the servlet package.

00:00:14.280 --> 00:00:16.630
You can get the servlet completely fully coded from

00:00:16.630 --> 00:00:19.130
the Lesson 5 folder, or you can write it yourself

00:00:19.130 --> 00:00:21.320
as you like. And then you need to make

00:00:21.320 --> 00:00:26.820
sure you configure your send confirmation email servlet in web.xml.

00:00:26.820 --> 00:00:30.300
Then you need to update the create conference function

00:00:30.300 --> 00:00:34.550
in conference API. You need to add the functionality to

00:00:34.550 --> 00:00:37.190
add the task, to the task queue when ever

00:00:37.190 --> 00:00:40.160
anybody creates a conference. And if you like you can

00:00:40.160 --> 00:00:43.570
also update this function to use transactions so that

00:00:43.570 --> 00:00:46.900
the profile and the conference entities get saved together and

00:00:46.900 --> 00:00:48.840
the task gets added to the Task queue, and that

00:00:48.840 --> 00:00:51.880
all happens inside a transaction or none of it happens.

00:00:51.880 --> 00:00:54.430
And you can get the template code, to add to

00:00:54.430 --> 00:00:57.220
create conference from the lesson five folder, if you want or

00:00:57.220 --> 00:01:00.130
you can try writing it yourself from scratch. So you can

00:01:00.130 --> 00:01:05.560
optionally put the code, to create the conference inside a transaction.

00:01:05.560 --> 00:01:08.260
When you add the task to the queue in createConference()

00:01:08.260 --> 00:01:11.730
function, you can use the default queue or you can use

00:01:11.730 --> 00:01:14.230
a named queue, it's up to you. But if you use

00:01:14.230 --> 00:01:17.140
a named queue, you need to make sure to configure the

00:01:17.140 --> 00:01:21.160
queue in queue.xml. You can also use the default

00:01:21.160 --> 00:01:24.700
queue that configure it to use other options like change

00:01:24.700 --> 00:01:27.520
the rate, or change the retry options. And again,

00:01:27.520 --> 00:01:29.700
if you want to do that, you need to configure

00:01:29.700 --> 00:01:32.000
it in queue.xml. In that case you would just

00:01:32.000 --> 00:01:35.820
add a queue name default to queue.xml. So the development

00:01:35.820 --> 00:01:39.380
server running on local hosts does not send emails, it

00:01:39.380 --> 00:01:42.290
does add tasks to queues and actually has it's own

00:01:42.290 --> 00:01:45.940
simple task queue viewer, but it won't actually send an email. So

00:01:45.940 --> 00:01:48.200
if you to test the sending of emails you're going to need

00:01:48.200 --> 00:01:52.170
to deploy your application to appspot. So when you've done testing it

00:01:52.170 --> 00:01:54.590
on local host as much as you can, go ahead and deploy it

00:01:54.590 --> 00:01:57.270
to app spot. And then to test it of course you're going

00:01:57.270 --> 00:02:00.700
to need to create a new conference, and then check your e-mail

00:02:00.700 --> 00:02:04.190
to make sure that the e-mail arrived. Did you get an e-mail?

00:02:04.190 --> 00:02:07.700
And then go ahead and explore your test queues in the admin console.

00:02:07.700 --> 00:02:09.710
So check off each of these steps as you do them

