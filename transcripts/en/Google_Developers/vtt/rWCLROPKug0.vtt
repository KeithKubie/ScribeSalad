WEBVTT
Kind: captions
Language: en

00:00:06.873 --> 00:00:09.676
Hi I'm Jeff Scudder and I work
with the Google Spreadsheets

00:00:09.676 --> 00:00:12.946
Data API. You might already be
familiar with Google

00:00:12.946 --> 00:00:15.882
Spreadsheets. An online
spreadsheets application that

00:00:15.882 --> 00:00:18.485
allows for real-time
collaboration.

00:00:18.485 --> 00:00:21.955
It's part of our Google Docs
suite. The spreadsheets API

00:00:21.955 --> 00:00:24.791
allows you to programmatically
access and modify your

00:00:24.791 --> 00:00:28.428
spreadsheet data in your
language of choice.

00:00:28.428 --> 00:00:31.131
Google provides client
libraries in a variety of

00:00:31.131 --> 00:00:33.233
languages, which simplify
working with the

00:00:33.233 --> 00:00:34.734
spreadsheets API.

00:00:34.734 --> 00:00:37.837
And I've recently made an
addition to the Python library

00:00:37.837 --> 00:00:40.440
that makes it easier to use
spreadsheets as a simple

00:00:40.440 --> 00:00:42.709
text database.

00:00:42.709 --> 00:00:45.412
One of the great things about
using Google Spreadsheets as a

00:00:45.412 --> 00:00:49.282
simple database is that you
can see and modify all of

00:00:49.282 --> 00:00:51.985
your data from a nice
user interface.

00:00:51.985 --> 00:00:55.522
and your data is available on
any machine as long as you're

00:00:55.522 --> 00:00:58.591
connected to the internet you
can interact with the data in

00:00:58.591 --> 00:01:00.260
your Google Documents.

00:01:00.260 --> 00:01:05.065
Let's get started.

00:01:05.065 --> 00:01:08.368
First off, the Python client
library is open source and

00:01:08.368 --> 00:01:16.209
available at
code.google.com/p/gdata-python-client

00:01:16.209 --> 00:01:19.846
This module is called "text db"
and it lives within the gdata

00:01:19.846 --> 00:01:24.684
spreadsheet package of the
gdata client library.

00:01:24.684 --> 00:01:28.054
The spreadsheet module allows
you to use all of the features

00:01:28.054 --> 00:01:31.558
in the spreadsheet's API and
the new "text db" module is

00:01:31.558 --> 00:01:33.293
built on top of it.

00:01:33.293 --> 00:01:35.829
The "text db" module
streamlines a specific 

00:01:35.829 --> 00:01:39.365
use case and makes
using the spreadsheets API feel

00:01:39.365 --> 00:01:41.835
like using a simple database.

00:01:41.835 --> 00:01:45.105
There's much more that you can
do with the spreadsheet's API

00:01:45.105 --> 00:01:49.175
like use formulas, pulling
data from other sources, and

00:01:49.175 --> 00:01:51.778
update a large number of
cells at once. 

00:01:51.778 --> 00:01:55.315
But I decided to make this
module about ease of use.

00:01:55.315 --> 00:01:57.851
Let's take a look a look at a
sample of how to use the

00:01:57.851 --> 00:02:00.420
text "db module."

00:02:00.420 --> 00:02:03.523
We'll begin by importing the
module which has classes that

00:02:03.523 --> 00:02:06.259
make it easy to use Google
Spreadsheets like a simple

00:02:06.259 --> 00:02:08.528
database in the cloud.

00:02:08.528 --> 00:02:11.498
Next, I'll import a demo
module which enters my email

00:02:11.498 --> 00:02:14.467
address for me so that it's not
broadcast to the world thanks

00:02:14.467 --> 00:02:16.636
to this video.

00:02:16.636 --> 00:02:20.406
Now we can create a new Google
Spreadsheet using our client.

00:02:20.406 --> 00:02:24.811
It's easy. All you need to
provide is a name.

00:02:24.811 --> 00:02:28.715
The database object represents
our new Google Spreadsheet and

00:02:28.715 --> 00:02:30.617
we're ready to create a table.

00:02:30.617 --> 00:02:37.023
But first, let's take a look at
this document in Google Docs.

00:02:37.023 --> 00:02:40.393
Okay, let's say that we have a
table of knights and we want

00:02:40.393 --> 00:02:44.230
to ask their name,
quest, and favorite color.

00:02:44.230 --> 00:02:47.267
Our spreadsheet now has a new
worksheet and we're ready

00:02:47.267 --> 00:02:49.235
to add some information.

00:02:49.235 --> 00:02:52.005
Let me open that now.

00:02:52.005 --> 00:02:57.911
Now we'll see a new row appear
in our spreadsheet.

00:02:57.911 --> 00:03:01.614
We can also add information
through the spreadsheet's

00:03:01.614 --> 00:03:06.119
user interface.

00:03:06.119 --> 00:03:09.455
If we're working with existing
data we may need to start by

00:03:09.455 --> 00:03:12.392
finding the spreadsheet, which
you can do by looking up the

00:03:12.392 --> 00:03:19.265
name of the spreadsheet or the
unique spreadsheet key id.

00:03:19.265 --> 00:03:21.634
Since you can have multiple
spreadsheets with the same

00:03:21.634 --> 00:03:26.272
name, the "getdatabases" method
returns a list.

00:03:26.272 --> 00:03:29.342
You can retrieve rows of data
in several ways.

00:03:29.342 --> 00:03:32.845
You can look up a single row,
or request a range of rows

00:03:32.845 --> 00:03:35.081
using "getrecords."

00:03:35.081 --> 00:03:38.585
Since we only have three rows
of data, rows contains

00:03:38.585 --> 00:03:41.054
three items.

00:03:41.054 --> 00:03:43.823
You can also search for rows
which match certain

00:03:43.823 --> 00:03:49.262
requirements using spreadsheet
structured query language.

00:03:49.262 --> 00:03:54.167
Structured queries can contain
and or less than greater than

00:03:54.167 --> 00:03:57.704
exact matches and not equals.

00:03:57.704 --> 00:04:02.041
We had two knights with the
favorite color of blue.

00:04:02.041 --> 00:04:07.080
So, as you can see we have
two matches.

00:04:07.080 --> 00:04:10.550
Once we have our rows, we can
make changes to the data in

00:04:10.550 --> 00:04:12.051
our Google Spreadsheet.

00:04:12.051 --> 00:04:14.721
One of the potential challenges
in storing your data in the

00:04:14.721 --> 00:04:19.058
cloud is that read and write
operations may be slow because

00:04:19.058 --> 00:04:22.495
they're transferring data over
slow and potentially flakey

00:04:22.495 --> 00:04:26.532
network connections. To avoid
this problem in the "text db"

00:04:26.532 --> 00:04:30.103
library, changes to local
objects are only sent to the

00:04:30.103 --> 00:04:34.641
server when you call the push
method. In our example earlier,

00:04:34.641 --> 00:04:36.843
we forgot to enter
Galahad's quest.

00:04:36.843 --> 00:04:38.878
Let's do that now.

00:04:38.878 --> 00:04:43.316
Let's take a look at the
content in our record.

00:04:43.316 --> 00:04:46.653
Now we're going to send this
change to the server and we

00:04:46.653 --> 00:04:50.723
should see the quest in our
spreadsheet update.

00:04:50.723 --> 00:04:52.959
I also see that we
got Galahad's favorite

00:04:52.959 --> 00:04:54.193
color wrong.

00:04:54.193 --> 00:04:57.130
To show retrieving updates
which have happened outside

00:04:57.130 --> 00:04:59.999
of the local copy of the data
we'll make a change

00:04:59.999 --> 00:05:01.801
in the spreadsheet.

00:05:01.801 --> 00:05:06.105
Our local copy doesn't have
the change yet but after we

00:05:06.105 --> 00:05:19.185
pull the data you can see the
content has been updated.

00:05:19.185 --> 00:05:21.821
I've just walked you through
a simple example of using the

00:05:21.821 --> 00:05:25.191
"text db" module to use Google
Spreadsheets as if it were a

00:05:25.191 --> 00:05:27.193
database in the cloud.

00:05:27.193 --> 00:05:29.262
This is just one of the ways
that you can use the

00:05:29.262 --> 00:05:30.697
spreadsheets API.

00:05:30.697 --> 00:05:34.133
And although this example is
in Python, a similar library

00:05:34.133 --> 00:05:37.070
could be built in almost
any language.

00:05:37.070 --> 00:05:40.406
All of the code that I've used
in this sample is open source

00:05:40.406 --> 00:05:43.710
so you're free to copy it and
modify it as you like.

00:05:43.710 --> 00:05:45.845
If you think of some other
interesting things that you'd

00:05:45.845 --> 00:05:48.881
like to do using the
spreadsheet's API, we would

00:05:48.881 --> 00:05:50.450
love to hear about it.

00:05:50.450 --> 00:05:54.420
Please visit us in the Google
Docs Data API Group.

00:05:54.420 --> 00:05:57.957
You can also check out the
documentation for the API on

00:05:57.957 --> 00:05:58.957
code.google.com

