WEBVTT
Kind: captions
Language: en

00:00:01.400 --> 00:00:02.020
TIM BRAY: I'm Tim Bray.

00:00:02.020 --> 00:00:05.320
I'm here to talk about
identity today.

00:00:05.320 --> 00:00:06.440
Thank you for all coming out.

00:00:06.440 --> 00:00:08.410
I do appreciate it.

00:00:08.410 --> 00:00:11.700
Start with some good news
and some bad news.

00:00:11.700 --> 00:00:12.370
It's like this.

00:00:12.370 --> 00:00:15.150
If somebody comes and wants to
use your site or your service

00:00:15.150 --> 00:00:17.980
and they get logged in real
easy, real fast, no problems,

00:00:17.980 --> 00:00:20.190
they don't think, wow,
those guys really

00:00:20.190 --> 00:00:21.020
have their act together.

00:00:21.020 --> 00:00:21.470
I love them.

00:00:21.470 --> 00:00:22.780
I'm going to go back there.

00:00:22.780 --> 00:00:25.090
And if they wake up in the
morning and there's no news

00:00:25.090 --> 00:00:27.970
story about how you got hacked
and lost 100,000 passwords

00:00:27.970 --> 00:00:32.040
that they also used for their
bank accounts, they don't

00:00:32.040 --> 00:00:34.240
think, oh, gosh, this guy is
taking good care of me.

00:00:34.240 --> 00:00:36.260
But the other way around
is not so good.

00:00:36.260 --> 00:00:39.630
If they come to your site and
there's a problem logging in,

00:00:39.630 --> 00:00:42.680
then they won't.

00:00:42.680 --> 00:00:44.810
They'll just go somewhere else
that has their act together on

00:00:44.810 --> 00:00:45.670
logging in.

00:00:45.670 --> 00:00:48.140
And if they do wake up in the
morning and discover that you

00:00:48.140 --> 00:00:50.120
lost control of their passwords,
and the bad guys

00:00:50.120 --> 00:00:53.260
have them, that's a really
bad position you

00:00:53.260 --> 00:00:53.900
don't want to be in.

00:00:53.900 --> 00:00:55.410
So that's what identity
is like.

00:00:55.410 --> 00:00:58.650
Identity is this thing where
if you perform perfectly,

00:00:58.650 --> 00:00:59.860
nobody notices it.

00:00:59.860 --> 00:01:03.490
And if you screw up, you
know your name is mud.

00:01:03.490 --> 00:01:06.520
And that's, historically, the
way identity has been.

00:01:06.520 --> 00:01:09.770
However, I think we can maybe do
a little better than that.

00:01:09.770 --> 00:01:12.390
For today, I'm going to try
and mix some good news in

00:01:12.390 --> 00:01:14.730
among the bad news.

00:01:14.730 --> 00:01:17.390
And maybe the most important
piece of good news is going to

00:01:17.390 --> 00:01:22.000
be that we are trying really
hard to make it easier for you

00:01:22.000 --> 00:01:24.470
to do the right thing
with less work.

00:01:24.470 --> 00:01:26.850
So today, I bring
you "less work."

00:01:26.850 --> 00:01:30.970
On top of that, we also have a
few developer-oriented goodies

00:01:30.970 --> 00:01:33.080
that are worth looking at.

00:01:33.080 --> 00:01:34.080
So it is true.

00:01:34.080 --> 00:01:35.620
There are sometimes good things

00:01:35.620 --> 00:01:36.920
to be found in identity.

00:01:36.920 --> 00:01:38.980
And we'll talk about them.

00:01:38.980 --> 00:01:40.350
I'd like to encourage everybody

00:01:40.350 --> 00:01:41.850
to leave some feedback.

00:01:41.850 --> 00:01:44.710
At Google, we try and be
a data-driven company.

00:01:44.710 --> 00:01:46.335
But sometimes, it
doesn't work.

00:01:46.335 --> 00:01:49.300
And I know we haven't actually
done that great a job in the

00:01:49.300 --> 00:01:50.620
past to track people's
results.

00:01:50.620 --> 00:01:52.590
We're really trying to do
a lot better this year.

00:01:52.590 --> 00:01:53.430
It's easy.

00:01:53.430 --> 00:01:54.460
You got your I/O app.

00:01:54.460 --> 00:01:56.910
There's a QR code there.

00:01:56.910 --> 00:01:59.430
It should not take you
more than about 30

00:01:59.430 --> 00:02:01.290
seconds to rate the talk.

00:02:01.290 --> 00:02:02.010
Please do that.

00:02:02.010 --> 00:02:04.660
And if you all do, then
ideally next year's

00:02:04.660 --> 00:02:06.890
show will be better.

00:02:06.890 --> 00:02:10.340
Now, if you've looked at the
program, you will have noticed

00:02:10.340 --> 00:02:14.250
that there are a whole lot
of talks about identity.

00:02:14.250 --> 00:02:17.980
And presumably, you care since
you came to this one.

00:02:17.980 --> 00:02:23.110
And so one of the goals for
today's session is to give you

00:02:23.110 --> 00:02:26.680
a feeling as to which of these
might actually be most

00:02:26.680 --> 00:02:29.460
interesting and appropriate
for you and

00:02:29.460 --> 00:02:30.250
help meet your needs.

00:02:30.250 --> 00:02:32.970
So we'll try and revisit
this at the end.

00:02:32.970 --> 00:02:38.750
Now, if you take a close look at
the other sessions on here,

00:02:38.750 --> 00:02:45.660
you will observe that a lot of
them are about Google+ Sign-In

00:02:45.660 --> 00:02:49.380
There is no doubt whatsoever
that the Google+ team sees

00:02:49.380 --> 00:02:52.020
part of what they are doing
as an identity ecosystem.

00:02:52.020 --> 00:02:54.260
They have been doing a huge
amount of work on that.

00:02:54.260 --> 00:02:57.350
And I'm going to give you a
feeling for why that is.

00:02:57.350 --> 00:02:59.310
So I'm going to try to do that
during the course of this

00:02:59.310 --> 00:03:00.560
session today.

00:03:03.930 --> 00:03:07.240
So today is not really
going to be a

00:03:07.240 --> 00:03:09.670
technology session per se.

00:03:09.670 --> 00:03:11.770
I want to spend most
of my time--

00:03:11.770 --> 00:03:12.760
oh, there will be code.

00:03:12.760 --> 00:03:13.970
I warn you there will be code.

00:03:13.970 --> 00:03:16.990
I want to spend most of my
time talking about which

00:03:16.990 --> 00:03:19.740
things you might choose, what
tools you might want to use to

00:03:19.740 --> 00:03:20.580
approach them.

00:03:20.580 --> 00:03:23.190
But I do want to talk a little
bit about the technology.

00:03:23.190 --> 00:03:26.340
We have made a fairly
substantial bet here at Google

00:03:26.340 --> 00:03:30.380
on the use of the Open Auth
2.0 standard and,

00:03:30.380 --> 00:03:32.890
increasingly, the OpenID Connect
standard which is

00:03:32.890 --> 00:03:34.860
layered on top of OAuth 2.

00:03:38.680 --> 00:03:40.190
Once again, bad news.

00:03:40.190 --> 00:03:42.380
This is some seriously
complex shit.

00:03:42.380 --> 00:03:47.370
It's big and hairy and kind of
hard to learn and understand.

00:03:47.370 --> 00:03:52.890
And I don't want to spend today
talking about how it all

00:03:52.890 --> 00:03:55.840
works and pull it all apart as
easily because that could take

00:03:55.840 --> 00:03:56.450
a lot of time.

00:03:56.450 --> 00:03:59.930
However, to help simplify
things, I have prepared a

00:03:59.930 --> 00:04:03.000
short simplified diagram of the
important components of

00:04:03.000 --> 00:04:04.550
OAuth 2 and how they
fit together.

00:04:04.550 --> 00:04:05.800
Here it is.

00:04:09.400 --> 00:04:10.960
Seriously, it's a problem.

00:04:10.960 --> 00:04:13.330
I've been public speaking
for a lot of years.

00:04:13.330 --> 00:04:14.470
And I've spoken in
most places.

00:04:14.470 --> 00:04:17.190
And I've had the unusual
experience in recent times of

00:04:17.190 --> 00:04:20.370
having talks rejected by
conferences because they had

00:04:20.370 --> 00:04:21.240
"identity" in the title.

00:04:21.240 --> 00:04:23.130
And I think they were afraid
that I was going to stand up

00:04:23.130 --> 00:04:26.900
and talk about cryptography
algorithms for the whole time.

00:04:26.900 --> 00:04:28.380
And I'm going to try
and avoid that.

00:04:28.380 --> 00:04:32.900
I am, however, going to talk a
little bit about a couple of

00:04:32.900 --> 00:04:35.520
pieces of technology--

00:04:35.520 --> 00:04:37.130
they're associated
with this stuff.

00:04:37.130 --> 00:04:38.640
And I want to talk about
them because I

00:04:38.640 --> 00:04:39.520
think they're important.

00:04:39.520 --> 00:04:42.830
And also, because as I learn
them over the course of recent

00:04:42.830 --> 00:04:44.990
time, speaking as an
internet geek, I

00:04:44.990 --> 00:04:45.990
thought, hey, that's clever.

00:04:45.990 --> 00:04:46.850
That's interesting.

00:04:46.850 --> 00:04:48.930
So I thought you might find
it interesting, too.

00:04:48.930 --> 00:04:55.030
So that is an ID token.

00:04:55.030 --> 00:04:56.540
That is an access token.

00:04:56.540 --> 00:05:00.420
And you take that great, big,
complicated intricate piece of

00:05:00.420 --> 00:05:01.580
OAuth machinery.

00:05:01.580 --> 00:05:04.240
And you crank it and you crank
it and you crank it.

00:05:04.240 --> 00:05:05.680
And this is what comes
out at the end.

00:05:05.680 --> 00:05:07.740
It is just a string.

00:05:07.740 --> 00:05:10.120
It is designed so that it
doesn't have magic characters.

00:05:10.120 --> 00:05:11.480
And you could put in the URL.

00:05:11.480 --> 00:05:15.490
But aside from that, it
is just a string.

00:05:15.490 --> 00:05:19.040
And the way you use
it is like that.

00:05:19.040 --> 00:05:22.900
So you go and you do an ordinary
HTTP transaction.

00:05:22.900 --> 00:05:25.820
And you send that access
token along.

00:05:25.820 --> 00:05:28.990
And that's all the
authentication you have to do.

00:05:28.990 --> 00:05:31.310
So that particular thing is
fetching somebody's basic

00:05:31.310 --> 00:05:32.760
Google+ profile.

00:05:32.760 --> 00:05:34.940
And you may notice that in the
URL, there's nothing that

00:05:34.940 --> 00:05:37.360
identifies whose
profile it is.

00:05:37.360 --> 00:05:41.430
That's OK because that's wrapped
up in the token.

00:05:41.430 --> 00:05:42.700
So these things are opaque.

00:05:42.700 --> 00:05:43.900
You can't read them.

00:05:43.900 --> 00:05:47.020
Your app is not expected to look
inside them and discover

00:05:47.020 --> 00:05:48.200
anything in particular.

00:05:48.200 --> 00:05:50.780
But it turns out, it's
not secret at all.

00:05:50.780 --> 00:05:55.790
So let's unpack the access token
and see what's inside.

00:05:55.790 --> 00:05:58.710
So Google has what's called
a token info endpoint.

00:05:58.710 --> 00:06:01.050
And you can get out with
good old curl.

00:06:01.050 --> 00:06:03.950
So if I go and de-reference
that access token--

00:06:03.950 --> 00:06:06.780
I cut it off so it wouldn't
fill up the whole slide--

00:06:06.780 --> 00:06:08.850
and you can see it says
a bunch of things.

00:06:08.850 --> 00:06:11.650
It says what user it was issued
to and what they asked

00:06:11.650 --> 00:06:14.770
for and a couple of other
interesting things.

00:06:14.770 --> 00:06:18.660
It also tells you that it
expires in 3,370 seconds.

00:06:18.660 --> 00:06:20.470
When we issue these things,
they're good for

00:06:20.470 --> 00:06:21.660
more or less an hour.

00:06:21.660 --> 00:06:25.870
And this thing has 50-odd
minutes yet to live.

00:06:25.870 --> 00:06:27.525
So access tokens are not
hard to understand.

00:06:27.525 --> 00:06:28.780
They are bearer tokens.

00:06:28.780 --> 00:06:31.030
They're like $100 bill.

00:06:31.030 --> 00:06:31.750
They are good.

00:06:31.750 --> 00:06:33.970
They are a currency in
and of themselves.

00:06:33.970 --> 00:06:35.425
You send it along.

00:06:35.425 --> 00:06:38.360
This grants server, after
looking at that, will grant

00:06:38.360 --> 00:06:43.400
the right to access the person
identified's information as if

00:06:43.400 --> 00:06:45.430
they were that person.

00:06:45.430 --> 00:06:48.790
So the takeaways are
not that complex.

00:06:48.790 --> 00:06:50.560
I mean, the most important thing
is that as I've just

00:06:50.560 --> 00:06:53.170
shown you, there's nothing
very secret about this.

00:06:53.170 --> 00:06:55.300
So as you use them and transmit
them around the

00:06:55.300 --> 00:07:01.350
network, you must, must, must
always use HTTPS, TLS.

00:07:01.350 --> 00:07:03.740
You must never ever, ever
transmit these over an

00:07:03.740 --> 00:07:05.030
unencrypted connection.

00:07:05.030 --> 00:07:08.240
Now, of course, you're already
doing that, right?

00:07:08.240 --> 00:07:10.550
Everybody using HTTPS
for everything.

00:07:10.550 --> 00:07:12.270
Right?

00:07:12.270 --> 00:07:12.830
Right?

00:07:12.830 --> 00:07:14.080
Good.

00:07:16.290 --> 00:07:18.870
These things are actually
remarkably powerful.

00:07:18.870 --> 00:07:23.400
And you can abuse them in ways
that sound surprising, but are

00:07:23.400 --> 00:07:24.890
actually sensible.

00:07:24.890 --> 00:07:27.910
So for example, suppose
I have a mobile app.

00:07:27.910 --> 00:07:30.290
There's videos being uploaded
to somewhere

00:07:30.290 --> 00:07:31.330
in my Google Drive.

00:07:31.330 --> 00:07:35.070
And it wants to retrieve a
thumbnail of the video that's

00:07:35.070 --> 00:07:36.250
been uploaded.

00:07:36.250 --> 00:07:38.920
And you really don't want to
download a 30-second video,

00:07:38.920 --> 00:07:42.010
load it into your mobile
device's memory, and process

00:07:42.010 --> 00:07:43.630
it to extract a thumbnail.

00:07:43.630 --> 00:07:48.650
So why don't you get an access
token to access Google Drive,

00:07:48.650 --> 00:07:51.260
ship it up to your own back-end
server in the cloud

00:07:51.260 --> 00:07:53.100
somewhere-- it's a big
meaty server--

00:07:53.100 --> 00:07:56.380
have it access Google Drive on
your behalf, compute the

00:07:56.380 --> 00:07:58.090
thumbnail and send it back?

00:07:58.090 --> 00:07:59.410
So it's transferable.

00:07:59.410 --> 00:08:02.140
I've taken my transferable
write.

00:08:02.140 --> 00:08:03.070
Send it off to the cloud.

00:08:03.070 --> 00:08:04.140
Let the cloud work on it.

00:08:04.140 --> 00:08:04.600
Get it back.

00:08:04.600 --> 00:08:06.570
You could conceivably
do it the other way.

00:08:06.570 --> 00:08:09.540
You can get an access token in
a web app and send it down to

00:08:09.540 --> 00:08:11.100
the mobile to do something
clever with it.

00:08:11.100 --> 00:08:12.720
Go crazy.

00:08:12.720 --> 00:08:15.640
This is a power tool.

00:08:15.640 --> 00:08:18.600
You cut your foot off with it,
don't say I didn't warn you.

00:08:18.600 --> 00:08:21.400
But you can do a lot of clever
things with these.

00:08:21.400 --> 00:08:23.010
So those are access tokens.

00:08:23.010 --> 00:08:26.050
And they are key component
in OAuth 2.

00:08:26.050 --> 00:08:30.520
Now, on top of OAuth 2 is
built OpenID Connect.

00:08:30.520 --> 00:08:33.539
And it has a refinement
on access

00:08:33.539 --> 00:08:37.400
tokens called ID tokens.

00:08:37.400 --> 00:08:39.039
There is an ID token.

00:08:39.039 --> 00:08:40.299
Isn't it pretty?

00:08:40.299 --> 00:08:42.890
Now, if you're really sharp-eyed
and look closely at

00:08:42.890 --> 00:08:49.040
it, you may observe that it
has two dots in there.

00:08:49.040 --> 00:08:52.470
An ID token has a lot more
interesting stuff inside than

00:08:52.470 --> 00:08:53.970
a basic access token.

00:08:53.970 --> 00:08:56.170
So the way you unpack
it is this.

00:08:56.170 --> 00:09:00.650
It turns out that the part
before the first dot is

00:09:00.650 --> 00:09:03.100
actually just base64 JSON.

00:09:03.100 --> 00:09:05.070
So you can unpack it
and look at it.

00:09:05.070 --> 00:09:07.520
And it identifies what the
cryptographic signature is.

00:09:07.520 --> 00:09:09.320
It says this algorithm and
then a key, which is

00:09:09.320 --> 00:09:12.160
identified as ad2a50.

00:09:12.160 --> 00:09:14.020
And then that last
part after the

00:09:14.020 --> 00:09:16.320
second dot is the signature.

00:09:16.320 --> 00:09:19.550
And what's being signed is
the payload in between.

00:09:19.550 --> 00:09:21.920
So you know the algorithm?

00:09:21.920 --> 00:09:23.800
You know the key identifier?

00:09:23.800 --> 00:09:28.400
So what you do is you go to
Google's well-known certs

00:09:28.400 --> 00:09:31.780
endpoint, retrieve the currently
active certificates.

00:09:31.780 --> 00:09:34.050
And if you look closely, the
second one is identified by

00:09:34.050 --> 00:09:36.470
ad2a50, yadda, yadda.

00:09:36.470 --> 00:09:42.450
And so you would use that cert
to validate that the signature

00:09:42.450 --> 00:09:43.760
on the token is correct.

00:09:43.760 --> 00:09:45.940
And you can be really, really
sure the token came from

00:09:45.940 --> 00:09:49.370
Google because, of course, we
signed it with our private key

00:09:49.370 --> 00:09:51.020
and you checked it publicly.

00:09:51.020 --> 00:09:54.370
Now, when I say, you retrieve
and you do, I'm not suggesting

00:09:54.370 --> 00:09:56.200
for a second that you should
actually write the code to do

00:09:56.200 --> 00:09:57.660
all this crypto stuff.

00:10:00.940 --> 00:10:04.790
And you don't need to because
these tokens, which are called

00:10:04.790 --> 00:10:08.400
JavaScript or JSON web tokens,
are a well-known thing.

00:10:08.400 --> 00:10:12.510
Every popular programming
library in the world has a

00:10:12.510 --> 00:10:13.630
built-in validator for it.

00:10:13.630 --> 00:10:15.260
So you just hand it over
to the validator.

00:10:15.260 --> 00:10:16.680
And it'll go fetch
the right cert.

00:10:16.680 --> 00:10:18.980
The other nice thing, it turns
out that these certs are only

00:10:18.980 --> 00:10:20.820
rolled over once a day
or so, and so the

00:10:20.820 --> 00:10:21.960
library caches them.

00:10:21.960 --> 00:10:24.990
And you can actually validate
the token very fast

00:10:24.990 --> 00:10:26.950
statically, right there
on your machine.

00:10:30.060 --> 00:10:31.670
So now, what's inside?

00:10:31.670 --> 00:10:34.580
So after we've validated using
the front cert and the back

00:10:34.580 --> 00:10:36.290
cert, you look inside,
and here's what's

00:10:36.290 --> 00:10:37.740
inside the ID token.

00:10:37.740 --> 00:10:38.760
And that's pretty interesting.

00:10:38.760 --> 00:10:41.610
It tells you that it was issued
by Google, that the

00:10:41.610 --> 00:10:45.040
subject was this long number
that's a unique identifier in

00:10:45.040 --> 00:10:47.920
the identity ecosystem, that
it was presented to an

00:10:47.920 --> 00:10:51.600
authorized party, azp, which
actually represents, in this

00:10:51.600 --> 00:10:54.820
case, the Android client
who got the ID token.

00:10:54.820 --> 00:10:55.850
Some other interesting fields.

00:10:55.850 --> 00:10:58.290
It's got this thing called an
audience, which means this is

00:10:58.290 --> 00:11:03.680
the holder of the resource that
this thing is aimed at.

00:11:03.680 --> 00:11:07.500
And so this is actually
a very interesting

00:11:07.500 --> 00:11:10.030
and powerful thing.

00:11:10.030 --> 00:11:12.680
It is a self-contained,
cryptographically signed

00:11:12.680 --> 00:11:17.090
statement, verifiable
everywhere, that Google issued

00:11:17.090 --> 00:11:20.700
this, that Google really, really
thought that that user

00:11:20.700 --> 00:11:23.320
identified in it was
authenticated to some devices,

00:11:23.320 --> 00:11:26.560
some browser, somewhere, and
it was aimed at some

00:11:26.560 --> 00:11:29.410
particular audience.

00:11:29.410 --> 00:11:33.250
Like an access token, there's
nothing secret.

00:11:33.250 --> 00:11:35.510
I'll refrain from shouting must
must, must, must at you.

00:11:35.510 --> 00:11:38.890
But you really got to send this
over to HTTPS, please.

00:11:38.890 --> 00:11:40.980
You got to do that.

00:11:40.980 --> 00:11:43.240
These things are really,
really useful.

00:11:43.240 --> 00:11:46.060
Let me give you a little
imaginary scenario.

00:11:46.060 --> 00:11:50.730
There's this website called
FlightAware that offers the

00:11:50.730 --> 00:11:53.250
status of any flight that's
in the air, anywhere.

00:11:53.250 --> 00:11:55.190
And there's another service
called Tripit.

00:11:55.190 --> 00:11:57.260
It's a personal travel
manager.

00:11:57.260 --> 00:11:59.030
Now, I'm going to describe the
scenario that these guys

00:11:59.030 --> 00:12:00.960
aren't actually doing,
but should.

00:12:04.530 --> 00:12:05.790
Suppose you go to FlightAware.

00:12:05.790 --> 00:12:07.970
And it could just go and talk
to Tripit and find out what

00:12:07.970 --> 00:12:08.860
flights you're going to be on.

00:12:08.860 --> 00:12:09.910
And it just automatically
show you the

00:12:09.910 --> 00:12:10.960
status of those flights.

00:12:10.960 --> 00:12:12.040
Wouldn't that be great?

00:12:12.040 --> 00:12:15.842
Well, with this, you
could do it.

00:12:15.842 --> 00:12:17.230
You could take your ID token.

00:12:17.230 --> 00:12:18.820
Ship it off to one
of the back-ends.

00:12:18.820 --> 00:12:21.300
And assuming FlightAware and
Tripit had a deal, they could

00:12:21.300 --> 00:12:23.360
look inside the ID token,
validate it, and say, oh yeah,

00:12:23.360 --> 00:12:26.260
this really is a token that was
issued to this person with

00:12:26.260 --> 00:12:28.810
the intent of it being
seen by Tripit.

00:12:28.810 --> 00:12:30.650
And if Tripit and FlightAware
had a deal, they could switch

00:12:30.650 --> 00:12:33.010
it back and forth, each side
could validate what it is and

00:12:33.010 --> 00:12:36.540
who it was sent to, and no
further requirements for

00:12:36.540 --> 00:12:39.480
anybody to type a password or
do anything like that it.

00:12:39.480 --> 00:12:42.370
It would all just
work magically.

00:12:42.370 --> 00:12:43.420
So that's just one scenario.

00:12:43.420 --> 00:12:44.770
Put your minds to work.

00:12:44.770 --> 00:12:48.850
And if you have portable chunks
of identification,

00:12:48.850 --> 00:12:50.590
there are all sorts of
magic things that you

00:12:50.590 --> 00:12:52.750
potentially do with it.

00:12:52.750 --> 00:12:56.200
So why don't you just go out and
do some of those things?

00:12:56.200 --> 00:12:58.490
The APIs for getting these
things are all fully

00:12:58.490 --> 00:12:59.840
documented.

00:12:59.840 --> 00:13:01.360
And I'll give you a little bit
more guidance about how to

00:13:01.360 --> 00:13:03.960
navigate through
them later on.

00:13:03.960 --> 00:13:05.700
Next thing.

00:13:05.700 --> 00:13:07.880
Now, let's go back
to the bad news.

00:13:07.880 --> 00:13:12.310
The problem is that these things
do not really have a

00:13:12.310 --> 00:13:13.360
good reputation.

00:13:13.360 --> 00:13:16.995
They have a reputation for
being hard to understand.

00:13:21.770 --> 00:13:24.350
They have a reputation for
being arcane and hard to

00:13:24.350 --> 00:13:25.350
understand.

00:13:25.350 --> 00:13:27.990
And unfortunately, the people
who've been presenting them to

00:13:27.990 --> 00:13:31.250
the world have got up on stage
and talked about ITF graphs

00:13:31.250 --> 00:13:36.100
and cryptography algorithms,
and Redirect URIs, and

00:13:36.100 --> 00:13:39.190
implicit flows and also the
stuff that you, guys, really

00:13:39.190 --> 00:13:40.850
should not have to care about.

00:13:40.850 --> 00:13:43.010
So they've got probably
a bit more of a bad

00:13:43.010 --> 00:13:44.440
rap than they deserve.

00:13:44.440 --> 00:13:48.750
The good news I have for you
today is that the libraries

00:13:48.750 --> 00:13:53.180
that are generally available
pretty well cover it.

00:13:53.180 --> 00:13:55.810
The amount of stuff you actually
have to understand

00:13:55.810 --> 00:14:00.012
about how this stuff works
ranges between slim and, more

00:14:00.012 --> 00:14:01.260
or less, zero.

00:14:01.260 --> 00:14:06.000
It is, generally speaking, a
best practice for you to use

00:14:06.000 --> 00:14:08.410
one of these libraries rather
than code it up yourself just

00:14:08.410 --> 00:14:10.900
because identity is so
important, and the penalties

00:14:10.900 --> 00:14:13.300
for getting it wrong
are so bad.

00:14:13.300 --> 00:14:15.800
And in particular, I'm going to
plug the use of the Google+

00:14:15.800 --> 00:14:17.110
Sign-In library.

00:14:17.110 --> 00:14:19.410
But most of these
things have the

00:14:19.410 --> 00:14:21.240
authentication stuff built in.

00:14:21.240 --> 00:14:24.390
And as you can see, they are
available for pretty well any

00:14:24.390 --> 00:14:28.000
popular programming platform
that you can imagine.

00:14:39.210 --> 00:14:40.880
So use the libraries--

00:14:40.880 --> 00:14:44.330
well, except for if you don't
want to use the libraries.

00:14:44.330 --> 00:14:47.080
There is a certain proportion
of the population like, for

00:14:47.080 --> 00:14:50.760
example, me, that are REST
bigots and actually like

00:14:50.760 --> 00:14:53.050
working down close to
the HTTP level.

00:14:53.050 --> 00:14:57.580
So if you are the kind of person
who likes doing HTTP

00:14:57.580 --> 00:15:06.120
flows and likes composing JSON
and sending it over the wire

00:15:06.120 --> 00:15:08.440
and parsing the JSON and gets
back and fiddling with the

00:15:08.440 --> 00:15:11.740
HTTP headers, well,
that's OK, too.

00:15:11.740 --> 00:15:14.320
In fact, everything I'm going to
describe today is perfectly

00:15:14.320 --> 00:15:16.520
accessible at the raw
HTTP flow level.

00:15:16.520 --> 00:15:19.210
Now, that has a huge
disadvantage that you don't

00:15:19.210 --> 00:15:22.445
get all the helpful codes built
into libraries and all

00:15:22.445 --> 00:15:27.616
that debugging and so on.

00:15:27.616 --> 00:15:29.700
On the other hand, it
has the upside.

00:15:29.700 --> 00:15:31.400
You don't have to learn
the library.

00:15:31.400 --> 00:15:33.890
And for some people, it has the
upside that you don't have

00:15:33.890 --> 00:15:36.190
to link library into your code,
which for some people,

00:15:36.190 --> 00:15:37.540
it is a really big code.

00:15:37.540 --> 00:15:40.670
So if you understand what's on
the screen now, you're a

00:15:40.670 --> 00:15:43.270
candidate to be that
kind of person.

00:15:43.270 --> 00:15:46.880
If you like what you see, you
are almost certainly the kind

00:15:46.880 --> 00:15:49.280
of person who might like
to do it this way.

00:15:49.280 --> 00:15:52.100
So if you want to do
that, go nuts.

00:15:52.100 --> 00:15:53.660
We're not going to
try and stop you.

00:15:53.660 --> 00:15:55.880
I'm also not going to say
anything further in this talk

00:15:55.880 --> 00:15:58.300
to help you because that's OK.

00:15:58.300 --> 00:16:00.480
Because that kind of person is
OK with going and reading the

00:16:00.480 --> 00:16:03.140
docs and figuring out the
headers and manipulating the

00:16:03.140 --> 00:16:05.460
HTTP flows and so on.

00:16:05.460 --> 00:16:08.340
So that door always
remains open.

00:16:08.340 --> 00:16:11.000
So let's go back to a high level
and talk about what we

00:16:11.000 --> 00:16:11.855
can actually do.

00:16:11.855 --> 00:16:15.230
There are two basic things that
we can do with identity

00:16:15.230 --> 00:16:16.440
technologies.

00:16:16.440 --> 00:16:19.770
One of them being actual
authorization, which is the

00:16:19.770 --> 00:16:21.950
process of saying, OK,
I checked that this

00:16:21.950 --> 00:16:23.430
is really Tim Bray.

00:16:23.430 --> 00:16:26.280
And, yeah, we've given Tim Bray
the right to access the

00:16:26.280 --> 00:16:27.210
Google Drive.

00:16:27.210 --> 00:16:28.940
So go ahead and access
the Google Drive.

00:16:28.940 --> 00:16:30.260
That's authorization.

00:16:30.260 --> 00:16:32.780
The other is authentication
where we don't really care

00:16:32.780 --> 00:16:33.940
about any particular API.

00:16:33.940 --> 00:16:37.380
All we want is for Google to
say, yeah, I've authenticated.

00:16:37.380 --> 00:16:39.670
And that really is Tim Bray
there on that mobile device or

00:16:39.670 --> 00:16:42.540
on that browser or whatever.

00:16:42.540 --> 00:16:46.370
So let's talk about how we
go about doing that.

00:16:46.370 --> 00:16:51.810
So now, I'm going to switch
to my browser here.

00:16:51.810 --> 00:17:01.980
And this is the thing they
showed during the keynote.

00:17:01.980 --> 00:17:04.579
And let's just look at
it again briefly.

00:17:04.579 --> 00:17:05.990
So this is Fancy.

00:17:05.990 --> 00:17:07.599
Amazingly, it's same machine
that was on there in the

00:17:07.599 --> 00:17:08.410
keynote, huh?

00:17:08.410 --> 00:17:11.040
Anyhow, you hit Sign In.

00:17:11.040 --> 00:17:13.190
And it says, oh, who do you
want to sign in with--

00:17:13.190 --> 00:17:14.560
Facebook, Google, or Twitter?

00:17:14.560 --> 00:17:16.190
I'm going to sign with Google.

00:17:16.190 --> 00:17:17.859
And it comes up here
and says--

00:17:17.859 --> 00:17:20.970
they went by this awfully fast
during the keynote-- say, OK,

00:17:20.970 --> 00:17:23.349
let's do a full-blown
social sign-in here.

00:17:23.349 --> 00:17:26.810
Not only am I going to log you
in and tell Fancy that, yeah,

00:17:26.810 --> 00:17:27.930
this really is Tim.

00:17:27.930 --> 00:17:33.710
We're going to say, I'd like to
ask you to authorize Fancy

00:17:33.710 --> 00:17:39.700
to see who your friends are on
Google and maybe even to tell

00:17:39.700 --> 00:17:41.450
them about some of the things
you did on Fancy.

00:17:41.450 --> 00:17:43.960
And you get very, very
fine-grained control there

00:17:43.960 --> 00:17:48.280
about who exactly the Fancy
app you'd share with when

00:17:48.280 --> 00:17:49.530
you're using it on Google.

00:17:52.020 --> 00:17:53.800
By the way, this is
not required.

00:17:53.800 --> 00:17:55.170
You don't have to go through
all the social stuff.

00:17:55.170 --> 00:17:56.890
You can just do a pure naked
login saying, yeah,

00:17:56.890 --> 00:17:58.080
this is Tim, bye.

00:17:58.080 --> 00:18:00.870
But this is the full-blown
social login.

00:18:00.870 --> 00:18:04.860
And it's got the other nice
characteristic that when you

00:18:04.860 --> 00:18:07.770
accept it, it'll come along and
say, oh, do you also want

00:18:07.770 --> 00:18:13.760
to install, as they showed, the
mobile app on the device?

00:18:13.760 --> 00:18:17.290
And when it does that, the app
on the device will come up

00:18:17.290 --> 00:18:19.710
magically being already logged
in to the right account in the

00:18:19.710 --> 00:18:20.650
right place.

00:18:20.650 --> 00:18:21.960
So it's pretty slick.

00:18:21.960 --> 00:18:26.370
So that is what Google+
really buys you.

00:18:32.480 --> 00:18:33.770
I'll just show you a much
simpler example.

00:18:56.840 --> 00:19:02.130
This is the Ruby Quickstart
example for Google+ Sign-In.

00:19:02.130 --> 00:19:03.030
It's really tiny.

00:19:03.030 --> 00:19:04.670
It's a couple of hundred lines
of Ruby and a couple of

00:19:04.670 --> 00:19:07.300
hundred lines of JavaScript,
both of which are mostly just

00:19:07.300 --> 00:19:08.600
boilerplate code.

00:19:08.600 --> 00:19:10.450
And this is the simplest
possible thing.

00:19:10.450 --> 00:19:13.620
You just sign in.

00:19:13.620 --> 00:19:21.700
And it says, OK, know your name,
sign in, accept, boom.

00:19:21.700 --> 00:19:23.020
And now, I'm signed in.

00:19:23.020 --> 00:19:27.500
And it shows that it knows my
picture, my name, something

00:19:27.500 --> 00:19:29.930
about my biography, and has
access to the information

00:19:29.930 --> 00:19:31.890
about who is in my circles.

00:19:31.890 --> 00:19:34.310
So that's just the bare-bone
social login.

00:19:34.310 --> 00:19:38.520
So the question that comes up
is, what do you actually have

00:19:38.520 --> 00:19:40.750
to do to accomplish that?

00:19:40.750 --> 00:19:42.900
And the answer is
not very much.

00:19:42.900 --> 00:19:45.470
You have to put a bunch of
JavaScript in your HTML,

00:19:45.470 --> 00:19:46.930
almost all of which
is boilerplate.

00:19:46.930 --> 00:19:48.700
It just comes up.

00:19:48.700 --> 00:19:51.530
You can download it out of our
Git repository or wherever.

00:19:51.530 --> 00:19:54.140
And put it in your
own client ID.

00:19:54.140 --> 00:19:56.960
And you notice that this is the
actual chunk of HTML that

00:19:56.960 --> 00:19:59.390
produces the Sign-in button.

00:19:59.390 --> 00:20:01.510
It's got both an
ID and a class.

00:20:01.510 --> 00:20:04.280
So it's very, very easy to wire
into your own page design

00:20:04.280 --> 00:20:06.950
in a way that shouldn't
be obtrusive.

00:20:06.950 --> 00:20:09.700
Now, this being the Ruby
example, here's the Ruby code

00:20:09.700 --> 00:20:12.900
in the back-end that actually
retrieves that list of

00:20:12.900 --> 00:20:15.310
people's pictures and displays
it on the screen.

00:20:18.040 --> 00:20:22.440
And you'll notice if you look
at the bottom third of that,

00:20:22.440 --> 00:20:27.680
they actually went and used the
built-in understanding of

00:20:27.680 --> 00:20:31.270
the Google+ API that is built
into our Ruby client library

00:20:31.270 --> 00:20:33.260
and just said, go, get me
a list of people and run

00:20:33.260 --> 00:20:34.810
through them all.

00:20:34.810 --> 00:20:37.490
Now, once again, if you're a
REST hard ass, at this point

00:20:37.490 --> 00:20:38.590
you can say, no, no,
I don't want that.

00:20:38.590 --> 00:20:42.090
I'm just going to go do a get on
that URL, and get the list

00:20:42.090 --> 00:20:43.530
of people back as JSON.

00:20:43.530 --> 00:20:44.670
I manipulate it myself.

00:20:44.670 --> 00:20:45.790
That's fine.

00:20:45.790 --> 00:20:47.070
There's really true independent
pieces of

00:20:47.070 --> 00:20:50.210
technology working here-- the
stuff at the top that shows

00:20:50.210 --> 00:20:53.280
the actual authorization stuff
going through the Google

00:20:53.280 --> 00:20:55.500
identity provider and the stuff
at the bottom, which is

00:20:55.500 --> 00:20:57.240
the Ruby Google+ library.

00:20:57.240 --> 00:20:59.515
You could use either
or both or neither.

00:20:59.515 --> 00:21:02.010
You can put them together
any way you want.

00:21:02.010 --> 00:21:05.850
Now, you noticed that when we
logged in to Fancy, it asked

00:21:05.850 --> 00:21:09.100
us to download a mobile app.

00:21:09.100 --> 00:21:13.010
And when it logged into
my app, it didn't.

00:21:13.010 --> 00:21:17.440
So if we wanted it to download
a mobile app, we would have

00:21:17.440 --> 00:21:22.150
had to change our JavaScript,
thus.

00:21:22.150 --> 00:21:24.830
You put in one more argument,
which is the package name of

00:21:24.830 --> 00:21:28.170
the mobile app in
the Play Store.

00:21:28.170 --> 00:21:29.630
And so here's a secret.

00:21:29.630 --> 00:21:30.350
I did that.

00:21:30.350 --> 00:21:31.490
I did put that package
name in.

00:21:31.490 --> 00:21:33.580
And that's a real package name,
a real mobile app that I

00:21:33.580 --> 00:21:35.520
really published and that's
really in the Play Store.

00:21:35.520 --> 00:21:36.360
And it didn't work.

00:21:36.360 --> 00:21:37.450
It didn't download.

00:21:37.450 --> 00:21:38.890
So I went looking
around for why.

00:21:38.890 --> 00:21:40.610
And it turns out that if
you looked at the app I

00:21:40.610 --> 00:21:45.380
referenced, it's just a little
geeky identity sample testing

00:21:45.380 --> 00:21:47.120
app that only a few identity
geeks in the

00:21:47.120 --> 00:21:47.930
world have ever run.

00:21:47.930 --> 00:21:50.010
And nobody has ever
reviewed it.

00:21:50.010 --> 00:21:51.770
And it has hardly
any downloads.

00:21:51.770 --> 00:21:54.570
And it turns out that there's
a quality threshold.

00:21:54.570 --> 00:21:58.990
So the sign-in process will
decline to install your app

00:21:58.990 --> 00:22:01.120
unless it meets a certain
threshold quality, which,

00:22:01.120 --> 00:22:03.540
well, this one unfortunately
doesn't.

00:22:03.540 --> 00:22:05.270
And it just quietly said,
no, I'm not going to

00:22:05.270 --> 00:22:06.520
install that for you.

00:22:10.810 --> 00:22:16.540
So the takeaway is that using
these libraries, you invest a

00:22:16.540 --> 00:22:18.980
relatively small
amount of work.

00:22:18.980 --> 00:22:23.990
And you get, I think, a fairly
substantially large amount of

00:22:23.990 --> 00:22:25.990
functionality and
user experience.

00:22:25.990 --> 00:22:30.470
And the security is good.

00:22:30.470 --> 00:22:33.350
You can be really very confident
the logins aren't

00:22:33.350 --> 00:22:35.120
being spoofed.

00:22:35.120 --> 00:22:38.590
Let's talk about the logging in
process at a lower level.

00:22:38.590 --> 00:22:42.120
I mean, we're all used to
seeing this these days.

00:22:42.120 --> 00:22:46.050
And the reason is that many,
many developers all over the

00:22:46.050 --> 00:22:49.020
world put up websites and they
think, OK, well, that means I

00:22:49.020 --> 00:22:50.820
have to be in the password
business.

00:22:50.820 --> 00:22:52.120
And my main mission
here today--

00:22:52.120 --> 00:22:53.890
more important than
any other--

00:22:53.890 --> 00:22:57.230
is to start begging you, people,
to get out of the

00:22:57.230 --> 00:23:00.460
password business.

00:23:00.460 --> 00:23:03.130
So I know you think you maybe
have to store passwords.

00:23:03.130 --> 00:23:06.530
So if you're doing that, of
course, you're storing them in

00:23:06.530 --> 00:23:10.820
a salted, hashed, encrypted
form, right?

00:23:10.820 --> 00:23:12.920
And you're using a modern hash
function that's not easily

00:23:12.920 --> 00:23:14.710
reversible, right?

00:23:14.710 --> 00:23:18.430
And you've got all sorts of
automatic monitors in place.

00:23:18.430 --> 00:23:20.010
So when somebody's been logging
in from the same

00:23:20.010 --> 00:23:23.330
Macintosh in Toronto for 17
months and suddenly shows up

00:23:23.330 --> 00:23:25.430
from a Windows machine in
Vladivostok, you're going to

00:23:25.430 --> 00:23:27.490
notice that and react, right?

00:23:27.490 --> 00:23:30.180
And you've got a two-factor
authentication system in

00:23:30.180 --> 00:23:32.960
place, so you can help with
that situation, right?

00:23:32.960 --> 00:23:34.970
And you've got some sort of a
simplified log-in mechanism

00:23:34.970 --> 00:23:37.050
for mobiles so they don't have
to type a cryptographically

00:23:37.050 --> 00:23:39.350
strong password into
a mobile device,

00:23:39.350 --> 00:23:43.690
which nobody can, right?

00:23:43.690 --> 00:23:45.990
And you are paying for help
desk, so that when people have

00:23:45.990 --> 00:23:49.640
trouble logging in, they
can call up, right?

00:23:49.640 --> 00:23:50.310
Wrong!

00:23:50.310 --> 00:23:51.880
Don't do those things.

00:23:51.880 --> 00:23:53.840
It's the wrong way to go.

00:23:53.840 --> 00:23:54.690
The risk is high.

00:23:54.690 --> 00:23:55.780
The benefit is low.

00:23:55.780 --> 00:23:58.080
And it's seductively easy
because, whether you're using

00:23:58.080 --> 00:24:03.340
Django or PHP or Rails or Java
or whatever, there's always a

00:24:03.340 --> 00:24:05.040
user authentication module
you can just download.

00:24:05.040 --> 00:24:08.470
Oh, here, I'll just install
this gem or bring in this

00:24:08.470 --> 00:24:11.510
no-JS thing, it'll take care of
users and passwords for me.

00:24:11.510 --> 00:24:13.290
Yeah, it'll probably work OK.

00:24:13.290 --> 00:24:17.130
But it means you own the awesome
responsibility of

00:24:17.130 --> 00:24:21.830
being a good steward of
other people's data.

00:24:21.830 --> 00:24:22.750
That's a bad place to be.

00:24:22.750 --> 00:24:24.080
You don't want to be there.

00:24:24.080 --> 00:24:28.880
And so I've searched Google
for password rules.

00:24:28.880 --> 00:24:29.840
And that's the top match.

00:24:29.840 --> 00:24:31.340
I won't name the--

00:24:31.340 --> 00:24:34.170
I won't shame the famous 500
name company whose password

00:24:34.170 --> 00:24:36.440
rules they are.

00:24:36.440 --> 00:24:40.220
But there's another good reason
you want to get out of

00:24:40.220 --> 00:24:44.660
the password business, which
is that everybody today is

00:24:44.660 --> 00:24:47.150
using more online services than
they were using last year

00:24:47.150 --> 00:24:48.100
at this time.

00:24:48.100 --> 00:24:50.310
And we just know that next year
at this time, they're

00:24:50.310 --> 00:24:51.750
going to be using more.

00:24:51.750 --> 00:24:54.900
And if every one of those
services all over the internet

00:24:54.900 --> 00:24:57.980
insist on having their own
authentication mechanism, that

00:24:57.980 --> 00:25:01.180
means people have to remember
a larger number of passwords

00:25:01.180 --> 00:25:03.400
and authentications
every year.

00:25:03.400 --> 00:25:06.580
And so, they don't.

00:25:06.580 --> 00:25:09.800
They either use really weak
passwords, thereby making it

00:25:09.800 --> 00:25:11.340
easier for the bad guys.

00:25:11.340 --> 00:25:18.060
Or they use the same password
for their bank and their goth

00:25:18.060 --> 00:25:24.530
music fan club, which may not
have quite equal standards of

00:25:24.530 --> 00:25:27.420
security and maintenance.

00:25:27.420 --> 00:25:30.900
If you are forcing people to do
this, you are peeing in the

00:25:30.900 --> 00:25:32.020
swimming pool.

00:25:32.020 --> 00:25:34.900
You are being a bad citizen
of the internet.

00:25:34.900 --> 00:25:37.440
You are decreasing security,
globally.

00:25:37.440 --> 00:25:41.610
An internet with bad security
is bad for your business.

00:25:41.610 --> 00:25:43.990
It's bad for Google's
business.

00:25:43.990 --> 00:25:46.730
And way more important than
that, it's bad for the people

00:25:46.730 --> 00:25:49.240
who are trying to use the
internet to live their lives.

00:25:49.240 --> 00:25:52.790
So you really, really need to
start figuring out how to get

00:25:52.790 --> 00:25:54.630
out of the password business.

00:25:54.630 --> 00:25:57.680
Now, that means that if you are
starting something new,

00:25:57.680 --> 00:25:59.220
just don't get in,
you'll be OK.

00:25:59.220 --> 00:26:01.550
If you're already and have a
million passwords on file, you

00:26:01.550 --> 00:26:04.650
have a harder problem, but you
need to start working now on

00:26:04.650 --> 00:26:06.810
figuring out how to solve it.

00:26:06.810 --> 00:26:09.130
Now, I keep throwing around the
term, "the bad guys," who

00:26:09.130 --> 00:26:10.580
are going to try and steal
this password,

00:26:10.580 --> 00:26:12.360
and make life difficult.

00:26:12.360 --> 00:26:15.240
And we treat them
in the abstract.

00:26:15.240 --> 00:26:16.740
We all know there's bad
guys out there.

00:26:16.740 --> 00:26:19.560
Well, here they are.

00:26:19.560 --> 00:26:22.420
That's kind of small print and
it's in Cyrillics, so you

00:26:22.420 --> 00:26:23.750
wouldn't be able to
read it anyhow.

00:26:23.750 --> 00:26:29.110
But it is a list of passwords
and hacked accounts for sale

00:26:29.110 --> 00:26:30.360
from a website.

00:26:34.450 --> 00:26:38.440
And you can get accounts
on Mail.ru, Yandex.ru,

00:26:38.440 --> 00:26:42.720
Hotmail.com, Outlook.com,
and so on.

00:26:42.720 --> 00:26:45.510
When the guys at Google look
at this, they break out the

00:26:45.510 --> 00:26:48.010
champagne because, as opposed
to the tens of thousands of

00:26:48.010 --> 00:26:51.230
other things, you'll notice
that Gmail, there are only

00:26:51.230 --> 00:26:53.530
eight stolen accounts
for sale.

00:26:53.530 --> 00:26:56.330
And they are approximately ten
times as expensive as stolen

00:26:56.330 --> 00:26:59.620
accounts from elsewhere.

00:26:59.620 --> 00:27:00.300
Now, let's be fair.

00:27:00.300 --> 00:27:02.350
I didn't have room to put
the whole thing on here.

00:27:02.350 --> 00:27:05.360
But if you scroll down here on
the bad guys' site, you will

00:27:05.360 --> 00:27:09.290
discover one more internet site
that has dramatically

00:27:09.290 --> 00:27:11.170
lower availability
and higher cost.

00:27:11.170 --> 00:27:12.770
And that's Facebook.

00:27:12.770 --> 00:27:15.630
So Facebook and Google, it's
fair to say, are doing a

00:27:15.630 --> 00:27:19.100
pretty good job of handling
users' identities.

00:27:19.100 --> 00:27:23.240
And that's another reason why
you should go around and

00:27:23.240 --> 00:27:25.250
choose your partners
carefully.

00:27:25.250 --> 00:27:29.430
So I'm going to say, let's
outsource your identity.

00:27:29.430 --> 00:27:31.360
Do not own your own passwords.

00:27:31.360 --> 00:27:34.160
So these here is the kind of
screens we are starting to see

00:27:34.160 --> 00:27:35.860
a whole lot of all over
the internet.

00:27:35.860 --> 00:27:37.060
So what we have here
is Pinterest,

00:27:37.060 --> 00:27:38.880
OpenTable, and Tripit.

00:27:38.880 --> 00:27:42.620
And in each case, you have
multiple different options to

00:27:42.620 --> 00:27:44.410
log in with.

00:27:44.410 --> 00:27:46.110
So the jargon is like this.

00:27:46.110 --> 00:27:49.570
People, like Facebook and Google
and Microsoft and Yahoo

00:27:49.570 --> 00:27:53.360
and so on, are identity
providers, IDPs.

00:27:53.360 --> 00:27:56.160
And the people who use
them are called

00:27:56.160 --> 00:27:57.570
relying parties, RPs.

00:27:57.570 --> 00:27:59.790
So you'll hear this jargon slung
around all the time--

00:27:59.790 --> 00:28:01.060
RP and IDP.

00:28:01.060 --> 00:28:06.720
If you're an RP, this means that
you are a good person.

00:28:06.720 --> 00:28:11.050
You are not peeing in
the internet pool.

00:28:11.050 --> 00:28:13.420
However, we are starting to have
a little bit of a scaling

00:28:13.420 --> 00:28:17.010
problem, which is I don't think
many RPs would want to

00:28:17.010 --> 00:28:19.410
jump into bed with
just one IDP.

00:28:19.410 --> 00:28:21.380
So this kind of situation
is typical.

00:28:21.380 --> 00:28:24.080
But those login screens are
already starting to

00:28:24.080 --> 00:28:26.030
look kind of busy.

00:28:26.030 --> 00:28:28.830
The term we use in the identity
community is "NASCAR

00:28:28.830 --> 00:28:31.340
page" because it's like a NASCAR
race car, it has too

00:28:31.340 --> 00:28:33.030
many stickers on it.

00:28:33.030 --> 00:28:34.825
And it is not really
going to scale.

00:28:34.825 --> 00:28:36.930
We're at the moment most people
are OK with Facebook

00:28:36.930 --> 00:28:39.100
and Google or Facebook and
Twitter, Google and Twitter,

00:28:39.100 --> 00:28:39.920
or whatever.

00:28:39.920 --> 00:28:43.100
But I think we need a wide open
identity ecosystem so

00:28:43.100 --> 00:28:46.100
that we can have multiple
identity providers competing

00:28:46.100 --> 00:28:46.840
for people's business.

00:28:46.840 --> 00:28:50.920
And it's just not enough
room on the page there.

00:28:50.920 --> 00:28:52.820
And it's already the case that
if you're operating in certain

00:28:52.820 --> 00:28:55.030
countries in the world, there
are very strong local identity

00:28:55.030 --> 00:28:58.030
providers that you would want
to have on that page.

00:28:58.030 --> 00:29:00.250
So let me show you
the alternative.

00:29:00.250 --> 00:29:02.320
Let me just switch back
to my browser here.

00:29:02.320 --> 00:29:05.830
And here, I have a small sample
application I wrote.

00:29:05.830 --> 00:29:06.300
It's on the internet.

00:29:06.300 --> 00:29:07.300
And it does one thing--

00:29:07.300 --> 00:29:09.850
remembers your favorite color.

00:29:09.850 --> 00:29:14.290
And when you go there, it
doesn't actually show you a

00:29:14.290 --> 00:29:15.050
login page.

00:29:15.050 --> 00:29:16.080
It shows you this thing.

00:29:16.080 --> 00:29:18.030
This is called an
account chooser.

00:29:18.030 --> 00:29:19.940
And even though it says
accountchooser.com, it's all

00:29:19.940 --> 00:29:21.530
just stuff stored in
local storage.

00:29:21.530 --> 00:29:23.910
This is a project of the OpenID
Foundation that's just

00:29:23.910 --> 00:29:25.460
being rolled out.

00:29:25.460 --> 00:29:30.020
And the idea is that instead of
signing in with a password,

00:29:30.020 --> 00:29:31.670
I would just click, say,
OK, here's the

00:29:31.670 --> 00:29:33.960
Facebook identity provider.

00:29:33.960 --> 00:29:37.110
And I'll login to favcolor.

00:29:37.110 --> 00:29:38.240
It's, oh, welcome, Tim Bray.

00:29:38.240 --> 00:29:39.440
We know your favorite
color, which I've

00:29:39.440 --> 00:29:40.320
logged therein before.

00:29:40.320 --> 00:29:41.900
So Facebook did the
signing up.

00:29:41.900 --> 00:29:44.290
And let's just change the
favorite color and make it a

00:29:44.290 --> 00:29:46.960
nice blue color.

00:29:46.960 --> 00:29:49.420
And I'll log out.

00:29:49.420 --> 00:29:52.670
And, hey, that same email
address is also available at

00:29:52.670 --> 00:29:53.440
Google account.

00:29:53.440 --> 00:29:56.270
So I'll log in the same account
through Google rather

00:29:56.270 --> 00:29:57.190
than Facebook.

00:29:57.190 --> 00:29:57.950
See?

00:29:57.950 --> 00:30:00.400
Remembers my new
favorite color.

00:30:00.400 --> 00:30:02.915
One-click login.

00:30:06.060 --> 00:30:08.120
This is what you
owe your users.

00:30:08.120 --> 00:30:09.250
Actually, you owe them
more than that.

00:30:09.250 --> 00:30:10.500
Let's me show what else
you owe them.

00:30:13.630 --> 00:30:15.940
Now, here's another account,
my Gmail account.

00:30:15.940 --> 00:30:17.310
Let's click on that one.

00:30:17.310 --> 00:30:20.060
And it says, oh, here's Google
saying, oh, they

00:30:20.060 --> 00:30:21.030
want to log you in.

00:30:21.030 --> 00:30:21.620
Is that OK?

00:30:21.620 --> 00:30:23.240
I'll say, yeah, OK, sure.

00:30:23.240 --> 00:30:25.930
So it'll log me in.

00:30:25.930 --> 00:30:28.810
And it says here something
different.

00:30:28.810 --> 00:30:30.280
We don't know your
favorite color.

00:30:30.280 --> 00:30:33.220
So we're picking
one at random.

00:30:33.220 --> 00:30:35.250
That wasn't one-click login.

00:30:35.250 --> 00:30:39.570
That was two-click sign up.

00:30:39.570 --> 00:30:41.840
That website had never
seen me before.

00:30:41.840 --> 00:30:46.740
Two clicks and it's created
an account, signed me up.

00:30:46.740 --> 00:30:47.970
So keep an eye on the
Account Chooser.

00:30:47.970 --> 00:30:50.010
This kind of technology is going
to be coming out from a

00:30:50.010 --> 00:30:51.100
lot of directions.

00:30:51.100 --> 00:30:53.800
The general idea is this is
some sort of an API that

00:30:53.800 --> 00:30:56.810
maintains outside application
space, a list of the accounts

00:30:56.810 --> 00:30:58.380
people like to log in with.

00:30:58.380 --> 00:30:59.520
And your app calls the API.

00:30:59.520 --> 00:31:01.770
And it gives you back
a data string.

00:31:01.770 --> 00:31:03.480
Here's the email they
want to log in with.

00:31:03.480 --> 00:31:06.090
Here's the IDP they
like to use.

00:31:06.090 --> 00:31:07.340
Go nuts.

00:31:14.960 --> 00:31:16.320
So let's go back to
the talk here.

00:31:23.220 --> 00:31:28.330
So what I've been talking
about so far is what you

00:31:28.330 --> 00:31:29.370
should be doing.

00:31:29.370 --> 00:31:31.380
And I want to spend the rest of
my time, which there isn't

00:31:31.380 --> 00:31:33.810
much of, talking about how
you should be doing it.

00:31:33.810 --> 00:31:35.700
This is fairly conceptually
simple.

00:31:35.700 --> 00:31:37.090
But I have been in the
identity group of

00:31:37.090 --> 00:31:38.220
Google for a year now.

00:31:38.220 --> 00:31:41.040
And I have to confess that it
has been a fairly steep hill

00:31:41.040 --> 00:31:43.210
to climb for me to get
comfortable with the concepts

00:31:43.210 --> 00:31:46.340
and tools and methods and
libraries and so on.

00:31:46.340 --> 00:31:51.400
So what we've done is we've
tried to capture a lot of that

00:31:51.400 --> 00:31:55.480
meta-knowledge and create this
new thing called the Google

00:31:55.480 --> 00:31:57.530
Identity Cookbook, which we just
finished pushing an hour

00:31:57.530 --> 00:31:58.530
or two ago.

00:31:58.530 --> 00:32:01.320
And this is at that URL.

00:32:01.320 --> 00:32:03.720
And it tries to be a
human-readable walk through

00:32:03.720 --> 00:32:07.120
all the different identity
technologies we have at Google

00:32:07.120 --> 00:32:09.900
and how you might want to
go about using them.

00:32:09.900 --> 00:32:13.670
It does not actually contain
any samples or detailed

00:32:13.670 --> 00:32:15.300
documentation because we
have loads and loads

00:32:15.300 --> 00:32:15.890
and loads of that.

00:32:15.890 --> 00:32:18.120
This tries to look at your
scenario and help you figure

00:32:18.120 --> 00:32:19.960
out which applies to you.

00:32:22.500 --> 00:32:25.040
I'm going to dip into
this a bit.

00:32:25.040 --> 00:32:27.160
The first page that people are
mostly going to come to is

00:32:27.160 --> 00:32:30.050
"Platforms" because I noticed
when I talk to people about

00:32:30.050 --> 00:32:32.430
their identity problems, they
always begin with something

00:32:32.430 --> 00:32:35.550
like, oh, I've got a PHP
program and I need to.

00:32:35.550 --> 00:32:39.780
Or I'm trying to get at this
from iOS and I need to.

00:32:39.780 --> 00:32:41.480
So that's the way programmers
tend to think.

00:32:41.480 --> 00:32:43.400
They think in terms of the
platforms that they are

00:32:43.400 --> 00:32:45.180
currently developing on.

00:32:45.180 --> 00:32:47.240
So there's a lot of information

00:32:47.240 --> 00:32:48.340
behind these links.

00:32:48.340 --> 00:32:51.710
And basically, if you're writing
a native Android app

00:32:51.710 --> 00:32:55.340
or a server-side web app or a
browser-centric JavaScript

00:32:55.340 --> 00:32:57.530
app, we can take pretty
good care of you.

00:32:57.530 --> 00:32:58.480
The libraries are there.

00:32:58.480 --> 00:32:59.480
They're in good shape.

00:32:59.480 --> 00:33:00.380
Plug them in.

00:33:00.380 --> 00:33:01.750
And it just works.

00:33:01.750 --> 00:33:03.740
You really should have
relatively little trouble

00:33:03.740 --> 00:33:06.760
getting good results.

00:33:06.760 --> 00:33:09.410
If you are writing native apps
in other platforms, things get

00:33:09.410 --> 00:33:10.580
a little trickier.

00:33:10.580 --> 00:33:13.240
Typically, to do the OAuth
flows, it means you have to

00:33:13.240 --> 00:33:18.190
spin out a browser from your
native app, do the OAuth, and

00:33:18.190 --> 00:33:20.840
get the result back from the
OAuth, and then you're good to

00:33:20.840 --> 00:33:22.650
go, which sounds kind of icky.

00:33:22.650 --> 00:33:24.650
It's actually not that bad.

00:33:24.650 --> 00:33:25.730
But it's certainly
not as pleasant

00:33:25.730 --> 00:33:27.190
as those other platforms.

00:33:27.190 --> 00:33:30.030
In particular, we're not doing
a good enough job on iOS at

00:33:30.030 --> 00:33:32.080
the moment, even
on Google Apps.

00:33:32.080 --> 00:33:34.790
If you've got five Google Apps
on your iPhone, you're going

00:33:34.790 --> 00:33:37.010
to end up typing your Google
password in five times, and

00:33:37.010 --> 00:33:38.390
that sucks.

00:33:38.390 --> 00:33:42.280
And so we're working on
all these things, and

00:33:42.280 --> 00:33:43.530
we will make progress.

00:33:47.090 --> 00:33:52.070
Once again, I wanted to come
back to this and say that when

00:33:52.070 --> 00:33:55.280
you're speaking in terms of
platforms, another good reason

00:33:55.280 --> 00:33:58.780
to use the Google+ Sign-In
stuff is, well, that.

00:33:58.780 --> 00:34:01.240
Because Google+ Sign-In comes
with this incredibly

00:34:01.240 --> 00:34:06.310
comprehensive set of libraries
and sample apps for any known

00:34:06.310 --> 00:34:08.460
platform under the sun.

00:34:08.460 --> 00:34:10.230
Having said that, I want to give
you another reason why I

00:34:10.230 --> 00:34:13.179
think you should carefully
consider Google+ Sign-In.

00:34:13.179 --> 00:34:18.460
And that is, that no
man is an island.

00:34:18.460 --> 00:34:21.159
We have singletons in our
computer programming.

00:34:21.159 --> 00:34:22.409
People aren't singletons.

00:34:22.409 --> 00:34:26.270
The world we live in is, in
fact, in very large part

00:34:26.270 --> 00:34:29.429
defined by the other people who
share our lives with us.

00:34:29.429 --> 00:34:34.730
And I think that people, in
general, can enrich their

00:34:34.730 --> 00:34:38.909
users' experience and provide
a higher level of service if

00:34:38.909 --> 00:34:42.230
they bring a social dimension
to login.

00:34:42.230 --> 00:34:45.900
The plural of identity
is society.

00:34:45.900 --> 00:34:47.750
Did I mention that Mark
Zuckerberg's a billionaire?

00:34:52.120 --> 00:34:52.610
Give it a good look.

00:34:52.610 --> 00:34:53.245
No, it's not compulsory.

00:34:53.245 --> 00:34:55.889
You can still use Google
identity technology without

00:34:55.889 --> 00:34:57.870
using the Google+
Sign-In stuff.

00:34:57.870 --> 00:35:02.840
But it is definitely the most
evolved piece of the puzzle.

00:35:02.840 --> 00:35:05.090
Another thing I want to talk
about that I think is

00:35:05.090 --> 00:35:07.570
important--

00:35:07.570 --> 00:35:09.070
it's in the Cookbook, we talked
about quite a bit--

00:35:09.070 --> 00:35:12.900
it's this whole notion of
"Roles." Sometimes, the

00:35:12.900 --> 00:35:15.900
simplest case is when you're
operating on behalf of a human

00:35:15.900 --> 00:35:17.920
and the human is right there
at the browser or at the

00:35:17.920 --> 00:35:18.810
mobile device.

00:35:18.810 --> 00:35:19.890
Everything gets very
easy then.

00:35:19.890 --> 00:35:21.510
If they need to sign off
and approve anything,

00:35:21.510 --> 00:35:22.310
well, there they are.

00:35:22.310 --> 00:35:23.480
They can just do that.

00:35:23.480 --> 00:35:25.050
In the worst case, if they
haven't logged in for too

00:35:25.050 --> 00:35:27.880
long, they can even type
in a password.

00:35:27.880 --> 00:35:31.300
But there are a lot of cases
where you want to do work on

00:35:31.300 --> 00:35:33.590
behalf of people who
aren't there.

00:35:33.590 --> 00:35:34.840
That turns out to be possible.

00:35:38.140 --> 00:35:42.510
Along with those ID tokens and
access tokens that I showed

00:35:42.510 --> 00:35:43.920
you at the beginning
of the talk?

00:35:43.920 --> 00:35:45.500
There's a thing called
a refresh token.

00:35:45.500 --> 00:35:46.710
You get one of those.

00:35:46.710 --> 00:35:49.250
Now, you notice that access
tokens expire

00:35:49.250 --> 00:35:51.450
after an hour or so.

00:35:51.450 --> 00:35:53.180
A refresh token allows
you to get a new one.

00:35:53.180 --> 00:35:55.560
And refresh tokens never
expire until they're

00:35:55.560 --> 00:35:57.310
explicitly revoked
by the user.

00:35:57.310 --> 00:36:00.410
So if you can give somebody a
refresh token, which the user

00:36:00.410 --> 00:36:03.600
has to approve explicitly, then
they can operate forever

00:36:03.600 --> 00:36:07.540
offline without consulting
the user.

00:36:07.540 --> 00:36:08.370
Think about it.

00:36:08.370 --> 00:36:09.740
It's often very valuable.

00:36:09.740 --> 00:36:13.540
There's also the notion of
sometimes you're talking about

00:36:13.540 --> 00:36:16.350
not a human identity,
but app identity.

00:36:16.350 --> 00:36:19.520
And there is actually a kind
of thing in OAuth called a

00:36:19.520 --> 00:36:22.280
service account where an app has
its own identity that can

00:36:22.280 --> 00:36:23.420
act on its behalf.

00:36:23.420 --> 00:36:26.210
And there are some security
issues that arise.

00:36:26.210 --> 00:36:28.180
And we, at Google, are actually
kind of stingy.

00:36:28.180 --> 00:36:30.990
We won't give out service
accounts for all of our APIs.

00:36:30.990 --> 00:36:32.770
But for the ones that
we do, you might

00:36:32.770 --> 00:36:33.410
want to check it out.

00:36:33.410 --> 00:36:35.480
It might be really, really
useful for you.

00:36:39.120 --> 00:36:42.650
Now, the other thing we talked
about that actually came out

00:36:42.650 --> 00:36:44.960
in this keynote a bit this
morning was this whole notion

00:36:44.960 --> 00:36:46.930
of cross-client single
sign-on.

00:36:46.930 --> 00:36:53.550
And any developer, who is
sitting down to write an app,

00:36:53.550 --> 00:36:56.230
is typically actually sitting
down to write a server-side

00:36:56.230 --> 00:36:59.540
back-end and an Android app
and an iOS app and maybe a

00:36:59.540 --> 00:37:03.830
Windows app and a BlackBerry
app or whatever.

00:37:03.830 --> 00:37:06.420
The notion when an app
is one program, those

00:37:06.420 --> 00:37:07.430
days are long gone.

00:37:07.430 --> 00:37:10.720
And both the developer who's
writing this and the people

00:37:10.720 --> 00:37:13.620
who are using it tend to think
of the whole thing as a

00:37:13.620 --> 00:37:17.010
single, useful software
facility.

00:37:17.010 --> 00:37:21.030
And so, in general, we want to
assume that when somebody is

00:37:21.030 --> 00:37:23.670
granted access to some resource,
to one piece of the

00:37:23.670 --> 00:37:27.730
puzzle, they probably should be
considered to have granted

00:37:27.730 --> 00:37:30.030
the access to all the pieces
of the puzzle.

00:37:30.030 --> 00:37:32.370
In particular, if somebody has
already typed in their

00:37:32.370 --> 00:37:37.620
password to approve access to
your thing on their mobile, we

00:37:37.620 --> 00:37:40.120
shouldn't make them do it
again on the website.

00:37:40.120 --> 00:37:43.340
And this cross-client identity
is one of the big, big weapons

00:37:43.340 --> 00:37:45.870
we have working for us now in
our war against passwords on

00:37:45.870 --> 00:37:46.510
the internet.

00:37:46.510 --> 00:37:48.560
And I thought this was such a
wonderful thing that I wanted

00:37:48.560 --> 00:37:50.830
to have to show a picture of
unicorns and rainbows.

00:37:50.830 --> 00:37:53.960
But Google Legal is really
fierce and they won't let you

00:37:53.960 --> 00:37:56.720
show any images that you hadn't
paid for and licensed.

00:37:56.720 --> 00:38:00.350
So I went to Google and typed in
"Creative Commons licensed

00:38:00.350 --> 00:38:04.484
unicorns and rainbows."
And what do you know?

00:38:04.484 --> 00:38:07.220
[AUDIENCE LAUGHTER]

00:38:07.220 --> 00:38:08.470
TIM BRAY: Isn't that special?

00:38:11.500 --> 00:38:14.420
So it turns out, we have a
nice hook to hang this

00:38:14.420 --> 00:38:15.640
cross-client stuff on.

00:38:15.640 --> 00:38:21.320
It turns out, whenever you want
to use any of this OAuth

00:38:21.320 --> 00:38:24.760
and OpenID-based stuff, you
have to register your app.

00:38:24.760 --> 00:38:27.500
You have to register your app
at a thing called the Google

00:38:27.500 --> 00:38:29.530
Developer API console.

00:38:29.530 --> 00:38:31.090
And this is just part of OAuth,
you have to do this

00:38:31.090 --> 00:38:32.480
whenever you're using OAuth.

00:38:32.480 --> 00:38:33.720
And it turns out that
the unit of

00:38:33.720 --> 00:38:36.960
registration is the project.

00:38:36.960 --> 00:38:39.750
And a project has lots of
slots in it in which you

00:38:39.750 --> 00:38:41.990
create different kinds
of clients--

00:38:41.990 --> 00:38:45.190
a web client, a JavaScript
client, iOS client, and

00:38:45.190 --> 00:38:47.750
Android client, maybe
multiple clients.

00:38:47.750 --> 00:38:50.730
These things are called Client
IDs in the term of the art.

00:38:50.730 --> 00:38:53.200
And they are identified by these
big, long, ugly strings.

00:38:53.200 --> 00:38:56.920
But they're all identified as
being in the same project.

00:38:56.920 --> 00:39:00.100
And access to this thing, being
able to update it, is

00:39:00.100 --> 00:39:06.350
controlled by the developer's
account.

00:39:06.350 --> 00:39:08.260
And they have to log into the
account to get access to the

00:39:08.260 --> 00:39:09.570
console to do this.

00:39:09.570 --> 00:39:11.690
And we consider that a pretty
strong proof point.

00:39:11.690 --> 00:39:16.160
So our general belief is that
if you've authed against one

00:39:16.160 --> 00:39:18.750
of these things, you've authed
against all of them.

00:39:21.830 --> 00:39:24.465
And that's wonderful.

00:39:28.180 --> 00:39:32.510
So specifically, there's
actually a page in our

00:39:32.510 --> 00:39:35.690
developer documentation that
talks about how to do this.

00:39:35.690 --> 00:39:38.570
And it's a little
bit complicated.

00:39:38.570 --> 00:39:41.010
And you have to make some very
particular API calls to get

00:39:41.010 --> 00:39:41.850
this to work.

00:39:41.850 --> 00:39:45.270
But the machinery that goes
behind what Google+ did to get

00:39:45.270 --> 00:39:48.200
all that stuff automatically
working-- you log in, you get

00:39:48.200 --> 00:39:50.820
the app installed, it's
all pre-logged in--

00:39:50.820 --> 00:39:53.810
it's generally available to you,
right down to the HTTP

00:39:53.810 --> 00:39:56.980
flows level, if you want to
be a hard-ass about it.

00:39:56.980 --> 00:39:58.760
There are three things we do.

00:39:58.760 --> 00:40:00.720
The first is really easy
to understand.

00:40:00.720 --> 00:40:04.640
You've already got an access
token for some particular API

00:40:04.640 --> 00:40:07.770
on your web client and you ask
for it again on your mobile

00:40:07.770 --> 00:40:09.860
device, you won't get
asked to approve it.

00:40:09.860 --> 00:40:11.710
They'll just say OK, I'll
give you the access

00:40:11.710 --> 00:40:12.990
token and vice versa.

00:40:12.990 --> 00:40:16.058
That's really easy
to understand.

00:40:16.058 --> 00:40:20.160
Now, the next one is sharing
identity around the network.

00:40:20.160 --> 00:40:21.700
And the best one of all
is this permanent

00:40:21.700 --> 00:40:22.840
offline access tricks.

00:40:22.840 --> 00:40:25.470
So I'm going to talk about both
of those a little bit.

00:40:25.470 --> 00:40:28.480
So this shared sign-on is
a very common scenario.

00:40:28.480 --> 00:40:31.120
And if you've got a client app,
which probably most of

00:40:31.120 --> 00:40:34.200
the people in the room do,
it has a server back-end.

00:40:34.200 --> 00:40:37.710
Even the most brain-dead simple
game probably needs to

00:40:37.710 --> 00:40:40.320
persist and share high
scores, right?

00:40:40.320 --> 00:40:41.570
So you have some sort of
a server back-end.

00:40:44.320 --> 00:40:46.960
And you're talking to it
probably over a RESTful

00:40:46.960 --> 00:40:48.730
interface over HTTPS.

00:40:48.730 --> 00:40:52.466
And the question arises,
who am I talking to?

00:40:52.466 --> 00:40:54.540
The server back-end needs
to know whose data is

00:40:54.540 --> 00:40:55.660
being sent up there.

00:40:55.660 --> 00:40:58.490
And it would be really, really,
really lame to ask

00:40:58.490 --> 00:41:01.430
them to type their password in
on the mobile app just so they

00:41:01.430 --> 00:41:03.250
could save stuff back
to the server.

00:41:03.250 --> 00:41:04.640
And you don't want to save their
password and send it

00:41:04.640 --> 00:41:05.210
over to the network.

00:41:05.210 --> 00:41:07.190
That's very, very bad.

00:41:07.190 --> 00:41:09.740
So it turns out what you can
do is use ID tokens.

00:41:09.740 --> 00:41:13.240
ID tokens make the slickest
possible solution to this.

00:41:13.240 --> 00:41:18.000
You get the ID token
on the client.

00:41:18.000 --> 00:41:20.580
And when you ask for the
ID token, you have to

00:41:20.580 --> 00:41:21.810
say who it's for.

00:41:21.810 --> 00:41:24.920
So if you say it's for your
back-end, and if you're mobile

00:41:24.920 --> 00:41:28.310
app and your back-end are in the
same project, we'll just

00:41:28.310 --> 00:41:29.010
give you the ID token.

00:41:29.010 --> 00:41:31.780
It won't prompt for approval or
anything because you're all

00:41:31.780 --> 00:41:32.950
part of the same project.

00:41:32.950 --> 00:41:34.360
And you can send it up
to your back-end.

00:41:34.360 --> 00:41:37.430
The back-end can validate it,
like I showed earlier, and

00:41:37.430 --> 00:41:39.800
look inside it and say, oh,
yeah, that's who this user is.

00:41:39.800 --> 00:41:41.870
And that's the app that
he was running.

00:41:41.870 --> 00:41:43.500
And yeah, this one
is meant for me.

00:41:43.500 --> 00:41:44.780
You got to check these things.

00:41:44.780 --> 00:41:47.070
And then there's all sorts
of rules for doing that.

00:41:47.070 --> 00:41:49.810
And then you can just go ahead
and assume that the data

00:41:49.810 --> 00:41:52.300
that's coming in is
from that user.

00:41:52.300 --> 00:41:54.450
And you can feel free to
persist it for them,

00:41:54.450 --> 00:41:56.260
manipulate it for
them, and so on.

00:41:56.260 --> 00:41:58.310
Actually, I have a demo
of that working.

00:41:58.310 --> 00:42:02.315
It depends on maybe getting
a mobile signal in here.

00:42:02.315 --> 00:42:03.835
But let's give it a try.

00:42:19.330 --> 00:42:20.850
It's the same Favorite
Color app.

00:42:20.850 --> 00:42:22.810
So I'll say, well, I want
to log in at this thing.

00:42:22.810 --> 00:42:24.670
And I'm going to click OK.

00:42:24.670 --> 00:42:26.470
And it's trying to make
a network connection.

00:42:32.730 --> 00:42:34.140
Maybe that was too
much to ask for.

00:42:46.940 --> 00:42:48.190
That was a 5G.

00:42:50.790 --> 00:42:52.040
What's the password?

00:43:20.530 --> 00:43:23.320
So remember, I just set that
to blue a minute ago?

00:43:23.320 --> 00:43:24.760
And it didn't prompt me, didn't
interrupt me, it just

00:43:24.760 --> 00:43:28.060
went, and that's two pieces of
the same logical app acting

00:43:28.060 --> 00:43:30.300
together without pestering
the user.

00:43:30.300 --> 00:43:33.810
And I could change it and make
it a garish red, and pop.

00:43:33.810 --> 00:43:35.590
If I went back to the website,
it would now be red.

00:43:39.380 --> 00:43:40.630
I need to go back
to Chromebook.

00:43:47.010 --> 00:43:49.250
And the last thing I wanted to
talk about was this permanent

00:43:49.250 --> 00:43:50.110
offline access.

00:43:50.110 --> 00:43:51.820
This is a thing when I describe
to developers is

00:43:51.820 --> 00:43:52.660
making them really happy.

00:43:52.660 --> 00:43:55.410
It's worth three unicorns
and rainbows.

00:43:55.410 --> 00:43:57.740
The notion here is--

00:43:57.740 --> 00:44:00.615
remember that example I told you
earlier where I want to go

00:44:00.615 --> 00:44:03.230
and review this thumbnail for
a particular video clip?

00:44:03.230 --> 00:44:06.180
Well, a more realistic scenario
is that people are

00:44:06.180 --> 00:44:10.080
uploading video clips all the
time into my Google Drive.

00:44:10.080 --> 00:44:14.480
And I want to have my back-end
running all the time,

00:44:14.480 --> 00:44:15.980
processing them as they come
in, retrieving them from

00:44:15.980 --> 00:44:18.120
Google Drive, computing
statistics, computing

00:44:18.120 --> 00:44:20.380
thumbnails, pushing them
back into Google Drive.

00:44:20.380 --> 00:44:22.920
And I want them to do this
all on my behalf.

00:44:22.920 --> 00:44:24.580
The thing is, because I'm a
modern person, I don't even

00:44:24.580 --> 00:44:25.470
have a web interface.

00:44:25.470 --> 00:44:28.170
All the access is through
my mobile app.

00:44:28.170 --> 00:44:31.400
So we've got to set up now so
you can, on your mobile app,

00:44:31.400 --> 00:44:32.970
make a particular API call.

00:44:32.970 --> 00:44:35.000
As usual, I'll always be
prompted in this case saying,

00:44:35.000 --> 00:44:37.410
is it OK to authorize
this offline stuff?

00:44:37.410 --> 00:44:41.000
And if you say yes, it will
return to your mobile app a

00:44:41.000 --> 00:44:43.540
special code that you can
send to the back-end.

00:44:43.540 --> 00:44:47.570
And the back-end can use it
to get a refresh token.

00:44:47.570 --> 00:44:52.546
And then the back-end can be
working on your behalf as you,

00:44:52.546 --> 00:44:58.530
24 by 7 by 365, until the user
explicitly revokes it.

00:44:58.530 --> 00:45:00.760
Just about every developer
I talked about this to--

00:45:00.760 --> 00:45:01.610
oh, yeah.

00:45:01.610 --> 00:45:03.100
I could use that.

00:45:03.100 --> 00:45:04.420
It's really pretty slick.

00:45:09.660 --> 00:45:11.330
Another thing I want to
talk about is this

00:45:11.330 --> 00:45:13.680
whole notion of accounts.

00:45:13.680 --> 00:45:16.150
And one thing you'll find out
if you look in the Developer

00:45:16.150 --> 00:45:20.730
Cookbook is the notion of a
Google account is quite a bit

00:45:20.730 --> 00:45:22.410
fuzzier than you might
have thought.

00:45:22.410 --> 00:45:24.370
For example, here's something I
didn't know until I started

00:45:24.370 --> 00:45:26.040
working on this.

00:45:26.040 --> 00:45:28.407
If you have a Google account,
that does not necessarily mean

00:45:28.407 --> 00:45:30.910
you have a Gmail.

00:45:30.910 --> 00:45:33.060
It is perfectly possible to
have a Google account

00:45:33.060 --> 00:45:36.290
identified by a Yahoo address
or a Hotmail address.

00:45:36.290 --> 00:45:39.210
And it turns out that huge
number of people do,

00:45:39.210 --> 00:45:41.600
particularly a huge number of
our AdWords customers who

00:45:41.600 --> 00:45:44.790
signed up for that with their
Yahoo address or whatever.

00:45:44.790 --> 00:45:48.200
So in your code, I have seen
people say that, oh, well, if

00:45:48.200 --> 00:45:50.550
they have an account, then
they give me their email

00:45:50.550 --> 00:45:52.970
address, well, I can just use
Gmail to validate that.

00:45:52.970 --> 00:45:54.180
Wrong.

00:45:54.180 --> 00:45:57.342
So be careful about that.

00:45:57.342 --> 00:46:02.370
The last thing I wanted to say
about accounts is that almost

00:46:02.370 --> 00:46:05.370
everything I've said
here today has to

00:46:05.370 --> 00:46:06.970
do with Google accounts.

00:46:06.970 --> 00:46:09.770
And most of the things we're
talking about are limited to

00:46:09.770 --> 00:46:10.810
Google accounts.

00:46:10.810 --> 00:46:13.560
It turns out that on a specific
case of Android, you

00:46:13.560 --> 00:46:16.060
are not actually limited to
working with Google accounts.

00:46:16.060 --> 00:46:18.910
It turns out in the Android
account manager, you can store

00:46:18.910 --> 00:46:20.530
accounts from other
applications.

00:46:20.530 --> 00:46:22.430
Here's the screens from a couple
of my Android devices

00:46:22.430 --> 00:46:25.080
showing that I've got Dropbox
and Facebook and Google and

00:46:25.080 --> 00:46:28.790
Skype and Kobo and WhatsApp and
Yahoo accounts on there.

00:46:28.790 --> 00:46:31.230
And it turns out that not only
can you store them in the

00:46:31.230 --> 00:46:35.350
account manager, there's a
pluggable authenticator system

00:46:35.350 --> 00:46:37.220
so that you can actually arrange
to do authentication

00:46:37.220 --> 00:46:41.785
and signing people on if they
write some fairly advanced

00:46:41.785 --> 00:46:42.940
code to do that.

00:46:42.940 --> 00:46:46.440
But the Android platform, as
it comes, is genuinely

00:46:46.440 --> 00:46:47.990
identity, fairly neutral.

00:46:47.990 --> 00:46:52.470
Well, there are some things that
are built-in for Google.

00:46:52.470 --> 00:46:54.390
That's all I'm really going
to say for myself.

00:46:54.390 --> 00:46:57.630
I thought I should come back
to where I started and talk

00:46:57.630 --> 00:46:59.940
about the other talks that
are going on here.

00:46:59.940 --> 00:47:03.010
I think, it may be more obvious
now by the seven

00:47:03.010 --> 00:47:06.010
different Google+ talks.

00:47:06.010 --> 00:47:07.590
Obviously, some of them
are specific.

00:47:07.590 --> 00:47:09.450
So if you're an Android
developer, an iOS developer,

00:47:09.450 --> 00:47:13.260
or something, and you're
interested in Google+ Sign-In,

00:47:13.260 --> 00:47:14.620
go to that talk.

00:47:14.620 --> 00:47:17.170
The best practices, I think,
is going to be a

00:47:17.170 --> 00:47:19.200
good talk for anybody.

00:47:19.200 --> 00:47:23.730
And I suspect that most people
who are using Google+ Sign-In

00:47:23.730 --> 00:47:28.270
are going to be using it
alongside Facebook and Twitter

00:47:28.270 --> 00:47:29.270
and so on and so forth.

00:47:29.270 --> 00:47:31.360
So there's some practical
advice there how

00:47:31.360 --> 00:47:32.480
you might do that.

00:47:32.480 --> 00:47:35.550
And the cloud guys, the "Keys
to the Kingdom" talk there,

00:47:35.550 --> 00:47:39.090
the cloud guys have found out
that there are all sorts of

00:47:39.090 --> 00:47:42.620
weird corner cases and gotchas
and so on that when you're

00:47:42.620 --> 00:47:45.930
deploying identity in the cloud,
because you're doing

00:47:45.930 --> 00:47:48.110
both the server side and the
client side there and so on,

00:47:48.110 --> 00:47:50.460
and they actually found
enough that they did a

00:47:50.460 --> 00:47:51.310
whole talk about it.

00:47:51.310 --> 00:47:54.140
So if you're going to be doing
that, I would strongly

00:47:54.140 --> 00:47:57.590
recommend taking in that one.

00:47:57.590 --> 00:47:59.310
So I'm about finished.

00:47:59.310 --> 00:48:02.660
I think I've tried to bring
three messages here.

00:48:02.660 --> 00:48:08.670
The first being please stop
making people type passwords.

00:48:08.670 --> 00:48:09.670
Use OAuth.

00:48:09.670 --> 00:48:10.770
Use OpenID.

00:48:10.770 --> 00:48:13.220
Get out of making people
type passwords.

00:48:13.220 --> 00:48:15.500
It's cruel, unusual
punishment.

00:48:15.500 --> 00:48:19.050
Secondly, there are a lot
of libraries out there.

00:48:19.050 --> 00:48:20.280
They're pretty good.

00:48:20.280 --> 00:48:22.830
They are available for your
programming languages.

00:48:22.830 --> 00:48:25.000
Use them.

00:48:25.000 --> 00:48:26.990
We want not only a good user
experience, but a good

00:48:26.990 --> 00:48:28.450
developer experience.

00:48:28.450 --> 00:48:30.120
I will acknowledge that in
the history of identity

00:48:30.120 --> 00:48:33.440
technologies, we have not put
enough work into developer

00:48:33.440 --> 00:48:34.150
experience.

00:48:34.150 --> 00:48:36.140
We are putting a lot of
work into it now.

00:48:36.140 --> 00:48:36.700
Have a look at it.

00:48:36.700 --> 00:48:39.070
I think you will find it's
easier than you think to do

00:48:39.070 --> 00:48:40.820
the right thing.

00:48:40.820 --> 00:48:43.890
The final thing I want to leave
you with is please,

00:48:43.890 --> 00:48:46.510
please, please get out of
the password business.

00:48:49.260 --> 00:48:51.400
The internet can't afford it.

00:48:51.400 --> 00:48:54.560
The course we are on now is at
a very high speed heading

00:48:54.560 --> 00:48:56.610
straight for a brick wall.

00:48:56.610 --> 00:48:59.250
At some point, large numbers of
people are simply going to

00:48:59.250 --> 00:49:01.840
start refusing to go to new
sites because they don't want

00:49:01.840 --> 00:49:03.320
to deal with the pain
of making a new

00:49:03.320 --> 00:49:04.900
account and a new password.

00:49:04.900 --> 00:49:07.320
We know this at Google because
it's already happening.

00:49:07.320 --> 00:49:10.300
At Google, when somebody wants
something, we want them to go

00:49:10.300 --> 00:49:11.460
to Google and search for it.

00:49:11.460 --> 00:49:12.850
And a lot of times,
they don't.

00:49:12.850 --> 00:49:14.680
They go straight to some
particular online store or

00:49:14.680 --> 00:49:17.110
something because they don't
want to deal with the pain of

00:49:17.110 --> 00:49:18.750
getting signed in to a
new site if they find

00:49:18.750 --> 00:49:21.470
it somewhere else.

00:49:21.470 --> 00:49:23.380
And that could be your site
they're not going to find

00:49:23.380 --> 00:49:24.690
because they didn't go to
Google to search because

00:49:24.690 --> 00:49:27.250
they're afraid of having
to sign in.

00:49:27.250 --> 00:49:29.310
So if we can start to work
together to create an

00:49:29.310 --> 00:49:33.300
expectation that, in the vast
majority of cases, getting

00:49:33.300 --> 00:49:38.540
access to a new site is a matter
of one or two clicks,

00:49:38.540 --> 00:49:40.140
everybody wins.

00:49:40.140 --> 00:49:42.070
So let's go there.

00:49:42.070 --> 00:49:42.720
Thank you, kindly.

00:49:42.720 --> 00:49:44.150
We got two minutes
for questions.

00:49:44.150 --> 00:49:44.720
But you know what?

00:49:44.720 --> 00:49:46.710
I really hate taking questions
from the stage.

00:49:46.710 --> 00:49:48.110
What you can do, if somebody
wants to ask a

00:49:48.110 --> 00:49:48.940
question, go ahead.

00:49:48.940 --> 00:49:50.430
But as soon as I leave here,
I'm going to go up to the

00:49:50.430 --> 00:49:53.100
Knowledge Booth, the
office-hours booth, which is

00:49:53.100 --> 00:49:55.900
at the third floor
at that corner.

00:49:55.900 --> 00:49:56.950
I'm going to go stand there.

00:49:56.950 --> 00:49:59.410
And I will cheerfully talk to
people about identity stuff

00:49:59.410 --> 00:50:01.990
until I fall over or
you guys get bored,

00:50:01.990 --> 00:50:03.180
whichever comes first.

00:50:03.180 --> 00:50:05.250
Having said that, does anybody
want to squeeze one question

00:50:05.250 --> 00:50:07.070
until the last two minutes?

00:50:07.070 --> 00:50:07.910
Yeah?

00:50:07.910 --> 00:50:09.160
Go to the mic.

00:50:12.660 --> 00:50:14.270
AUDIENCE: Hi.

00:50:14.270 --> 00:50:18.040
So one of the biggest problems
that I see with having these

00:50:18.040 --> 00:50:21.920
third-party identity providers
is that a user arrives at the

00:50:21.920 --> 00:50:25.880
site and they may be a repeat
user, but they may not

00:50:25.880 --> 00:50:27.610
remember which identity
provider they

00:50:27.610 --> 00:50:30.250
used the last time.

00:50:30.250 --> 00:50:32.460
They might end up with two
accounts or three accounts or

00:50:32.460 --> 00:50:34.200
five accounts.

00:50:34.200 --> 00:50:37.950
What is the best scenario
for that?

00:50:37.950 --> 00:50:40.390
TIM BRAY: Yeah, I mean,
that situation

00:50:40.390 --> 00:50:41.790
absolutely can happen.

00:50:41.790 --> 00:50:43.930
And it's even worse than that
because somebody may have

00:50:43.930 --> 00:50:46.010
logged in with their Gmail
account, then they actually go

00:50:46.010 --> 00:50:46.810
and hit Facebook.

00:50:46.810 --> 00:50:49.000
And it comes in with the same
Gmail account because Facebook

00:50:49.000 --> 00:50:50.580
will cert a Gmail account.

00:50:50.580 --> 00:50:52.360
At the end of the day, we're
actually working on some

00:50:52.360 --> 00:50:53.980
software to deal with that.

00:50:53.980 --> 00:50:55.650
But we haven't released
it yet.

00:50:55.650 --> 00:50:57.640
But at the end of the day,
you're going to have to do

00:50:57.640 --> 00:50:58.460
some management code.

00:50:58.460 --> 00:51:00.575
You're going to have to decide
when the same email comes in

00:51:00.575 --> 00:51:02.060
from two IDPs, are you going
to regard that as

00:51:02.060 --> 00:51:04.490
two accounts or one?

00:51:04.490 --> 00:51:05.670
It's tedious.

00:51:05.670 --> 00:51:06.990
It's not rocket science.

00:51:06.990 --> 00:51:09.030
But it is some tedious work
you have to handle.

00:51:09.030 --> 00:51:11.550
AUDIENCE: Can you assume that
the email address has been

00:51:11.550 --> 00:51:13.660
verified by any IDP who--

00:51:13.660 --> 00:51:14.280
TIM BRAY: That's actually--

00:51:14.280 --> 00:51:14.580
AUDIENCE: --issues it?

00:51:14.580 --> 00:51:15.380
TIM BRAY: --built into
the protocol.

00:51:15.380 --> 00:51:17.760
And if you've logged in with
OpenID Connect, there's

00:51:17.760 --> 00:51:18.860
actually a field
in there saying

00:51:18.860 --> 00:51:20.110
whether it's been verified.

00:51:22.410 --> 00:51:25.960
AUDIENCE: Education, children
under the age of 13, and

00:51:25.960 --> 00:51:29.040
within the Google Play
apps infrastructure,

00:51:29.040 --> 00:51:30.530
how does that work?

00:51:30.530 --> 00:51:31.670
TIM BRAY: It's a big problem.

00:51:31.670 --> 00:51:32.340
At the moment.

00:51:32.340 --> 00:51:35.750
Google+ does not accept accounts
from people under 13.

00:51:35.750 --> 00:51:37.350
In fact, I don't even think
you're allowed to have a Gmail

00:51:37.350 --> 00:51:40.050
if you're under 13.

00:51:40.050 --> 00:51:42.280
I hate to say this, but the only
company that I know of

00:51:42.280 --> 00:51:43.930
who's doing a really
good job with

00:51:43.930 --> 00:51:45.210
handling children is Yahoo.

00:51:45.210 --> 00:51:47.060
Yahoo does it better
than anybody else.

00:51:47.060 --> 00:51:49.670
And they have this thing where
you have to identify a

00:51:49.670 --> 00:51:51.160
responsible adult.

00:51:51.160 --> 00:51:54.330
And they have to be identified
by having a credit card, which

00:51:54.330 --> 00:51:56.870
actually tends to work
pretty well.

00:51:56.870 --> 00:51:57.880
The problem is--

00:51:57.880 --> 00:51:59.970
particularly, in the United
States, in various

00:51:59.970 --> 00:52:02.890
jurisdictions-- there are
extremely draconian bodies of

00:52:02.890 --> 00:52:04.620
legislation, which by
the way I support.

00:52:04.620 --> 00:52:06.630
They're quite sensible.

00:52:06.630 --> 00:52:10.230
In the States, it's called
COPPA, Children Online Privacy

00:52:10.230 --> 00:52:12.460
Protection Act, or something
like that.

00:52:12.460 --> 00:52:17.550
And it's really, really hard to
stay on the right side of

00:52:17.550 --> 00:52:19.050
that law if you're doing this.

00:52:19.050 --> 00:52:20.310
So, yeah, it's a problem.

00:52:20.310 --> 00:52:21.080
We acknowledge it.

00:52:21.080 --> 00:52:22.210
But I think it's going
to go on being a

00:52:22.210 --> 00:52:25.110
problem for a while.

00:52:25.110 --> 00:52:26.690
AUDIENCE: Anyone knows
about workarounds?

00:52:26.690 --> 00:52:27.720
Or how to actually--

00:52:27.720 --> 00:52:28.970
TIM BRAY: Well, you
can always lie.

00:52:31.920 --> 00:52:33.020
AUDIENCE: That's identity
for you.

00:52:33.020 --> 00:52:33.240
TIM BRAY: Thanks.

00:52:33.240 --> 00:52:35.780
Anybody who want to talk about
this, I'll see you upstairs.

00:52:35.780 --> 00:52:39.380
[APPLAUSE]

