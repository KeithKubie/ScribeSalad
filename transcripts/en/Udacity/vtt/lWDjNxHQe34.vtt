WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
To calculate these answers, I added up all of the entries in each row.

00:00:04.000 --> 00:00:08.000
For example, in this row, I added up these numbers divided by 5,

00:00:08.000 --> 00:00:18.000
and they give me a result of 4.00 here, 9.00 here, and 16.02. I’ve rounded here for this last one.

00:00:18.000 --> 00:00:24.000
Now, look at this data, isn’t this beautiful? 1, 4, 9, 16.02 though.

00:00:24.000 --> 00:00:29.000
Well, that 0.02 is sort of a bummer but let’s put it was just 16 per seconds

00:00:29.000 --> 00:00:31.000
and see if there is any pattern.

00:00:31.000 --> 00:00:37.000
Well 1, 4, 9, 16, I do see a pattern there. These are squares.

00:00:37.000 --> 00:00:44.000
One unit, 1 unit of time squared is 1, 2 squared is 4, 3 squared is 9,

00:00:44.000 --> 00:00:49.000
and 4 squared is 16--that’s an incredible pattern.

00:00:49.000 --> 00:00:54.000
It seems like there may be some relationship between distance and square of time,

00:00:54.000 --> 00:00:57.000
but the 16.02 is really bumming me out.

00:00:57.000 --> 00:01:00.000
Does it really mean that this pattern is false?

00:01:00.000 --> 00:01:06.000
Well, not necessarily because one thing we forgotten to do so far is calculate error.

00:01:06.000 --> 00:01:09.000
In the previous scene, we talked about how to calculate the error of a single measurement.

00:01:09.000 --> 00:01:12.000
May be that measurement measuring the length of the shadow or something.

00:01:12.000 --> 00:01:18.000
But now, we have multiple measurements with five measurements for each of these calculated values.

00:01:18.000 --> 99:59:59.000
How do we calculate the error associated with multiple measurements?

