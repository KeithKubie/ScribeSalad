WEBVTT
Kind: captions
Language: en

00:00:05.470 --> 00:00:06.670
CHRIS BANES: Hi guys, and
welcome to this week's Office

00:00:06.670 --> 00:00:09.530
Hours, with me, Chris Banes.

00:00:09.530 --> 00:00:11.460
NICK BUTCHER: Hi, I'm
Nick Butcher.

00:00:11.460 --> 00:00:12.280
CHRIS BANES: Rich Hyndman.

00:00:12.280 --> 00:00:13.150
RICH HYNDMAN: We're frozen.

00:00:13.150 --> 00:00:13.690
There we go.

00:00:13.690 --> 00:00:17.050
I'm Rich Hyndman, from London.

00:00:17.050 --> 00:00:18.210
CHRIS BANES: As usual, we're
talking about latest and

00:00:18.210 --> 00:00:22.140
greatest in Android from the
past week, and answering

00:00:22.140 --> 00:00:25.370
questions from the Moderator
and in the Hangout.

00:00:25.370 --> 00:00:26.700
Should we say hello to the
guys in the Hangout?

00:00:26.700 --> 00:00:28.074
Hi, Weibe.

00:00:28.074 --> 00:00:29.426
WEIBE ELSINGA: Hi,
good evening.

00:00:36.200 --> 00:00:36.920
RICH HYNDMAN: Who else
have we got?

00:00:36.920 --> 00:00:38.410
[INAUDIBLE].

00:00:38.410 --> 00:00:39.360
MALE SPEAKER: Hello.

00:00:39.360 --> 00:00:39.960
RICH HYNDMAN: And Giuseppe.

00:00:39.960 --> 00:00:40.310
Hey there, guys.

00:00:40.310 --> 00:00:42.250
Thank you for joining
us today.

00:00:42.250 --> 00:00:42.730
Thanks, Giuseppe.

00:00:42.730 --> 00:00:45.960
As usual we won't be answering
those questions that are

00:00:45.960 --> 00:00:49.690
asking about product releases,
road maps, future facing.

00:00:49.690 --> 00:00:53.390
But we will be talking about
Android developer things.

00:00:53.390 --> 00:00:54.710
I'm just opening up Moderator
here on my Nexus 10.

00:00:54.710 --> 00:00:55.375
CHRIS BANES: Yeah, should
we kick off with

00:00:55.375 --> 00:00:56.410
some moderator questions?

00:00:56.410 --> 00:00:57.040
RICH HYNDMAN: Look
at our matching

00:00:57.040 --> 00:00:57.670
back covers this time.

00:00:57.670 --> 00:01:00.360
Nick's the only one who
is outstanding.

00:01:00.360 --> 00:01:01.610
CHRIS BANES: [INAUDIBLE]

00:01:04.100 --> 00:01:07.282
RICH HYNDMAN: Because you can't
buy them in the UK?

00:01:07.282 --> 00:01:09.190
That is a shame.

00:01:09.190 --> 00:01:11.280
Apologies for missing last
week's Office Hours.

00:01:11.280 --> 00:01:12.390
We were all traveling.

00:01:12.390 --> 00:01:13.590
But we are back now.

00:01:13.590 --> 00:01:16.708
We'll try and keep our
regular schedule.

00:01:16.708 --> 00:01:17.958
CHRIS BANES: And you
have a question?

00:01:20.240 --> 00:01:22.110
STEPHAN LINZNER: Let's start
with the first question.

00:01:22.110 --> 00:01:24.960
How to read crash on a device
rotation when hello dialog is

00:01:24.960 --> 00:01:28.410
opened on the screen with
spinner in it open as well?

00:01:28.410 --> 00:01:29.885
Asked from Mike in Sydney.

00:01:39.260 --> 00:01:40.850
RICH HYNDMAN: What
was the question?

00:01:40.850 --> 00:01:42.160
You've got two answers
there already.

00:01:42.160 --> 00:01:43.520
STEPHAN LINZNER: Yeah,
you have--

00:01:43.520 --> 00:01:48.040
he has confirmation change, and
the hello dialog is open

00:01:48.040 --> 00:01:48.970
on the screen.

00:01:48.970 --> 00:01:51.570
And a spinner is open
in it, as well.

00:01:51.570 --> 00:01:53.210
And if he goes to spin,
he gets a crash.

00:01:53.210 --> 00:01:54.270
CHRIS BANES: What's spinner?

00:01:54.270 --> 00:01:55.520
He means progress dialog?

00:02:00.470 --> 00:02:02.595
STEPHAN LINZNER: So let's
check his code snippet.

00:02:02.595 --> 00:02:04.410
CHRIS BANES: We have
a code snippet?

00:02:04.410 --> 00:02:06.270
STEPHAN LINZNER: Yeah, he
posted a code snippet.

00:02:16.240 --> 00:02:20.700
In general, if you have a
dialog, you should think about

00:02:20.700 --> 00:02:23.070
maybe using a dialog
fragment, and not

00:02:23.070 --> 00:02:24.170
using the hello dialog.

00:02:24.170 --> 00:02:28.110
This would maybe solve
some of your issues.

00:02:28.110 --> 00:02:33.610
And if you use the dialog, I'm
just wondering, are you using

00:02:33.610 --> 00:02:37.130
the methods on the Android
life cycle to create the

00:02:37.130 --> 00:02:39.170
dialog and let the system
manage it for you?

00:02:39.170 --> 00:02:43.110
Or do you manage the
dialog on your own?

00:02:47.530 --> 00:02:50.270
CHRIS BANES: It doesn't
say what the crash is.

00:02:50.270 --> 00:02:53.970
So it could be many,
many things.

00:02:53.970 --> 00:02:56.530
Best way to do it is probably
to handle it yourself in

00:02:56.530 --> 00:03:03.990
unsaved incidents, in the
unsave and restore state

00:03:03.990 --> 00:03:06.640
methods, called on
your activity.

00:03:06.640 --> 00:03:10.600
Probably best to handle
it there yourself.

00:03:10.600 --> 00:03:12.010
I haven't really got
anything else.

00:03:12.010 --> 00:03:13.630
The crash could be
many things.

00:03:13.630 --> 00:03:15.420
Without more information it's
hard to say what the

00:03:15.420 --> 00:03:16.670
actual cause is.

00:03:18.960 --> 00:03:22.710
OK, shall we move on?

00:03:22.710 --> 00:03:25.880
Lucas in Brazil has asked
why has [INAUDIBLE]

00:03:25.880 --> 00:03:27.130
not have a param of limit?

00:03:30.040 --> 00:03:32.330
Is it best to put it
on as append query

00:03:32.330 --> 00:03:33.960
parameter in the URI?

00:03:33.960 --> 00:03:36.300
I'd look at the source for
[INAUDIBLE] earlier.

00:03:36.300 --> 00:03:40.080
And the reason is that content
result of that query doesn't

00:03:40.080 --> 00:03:45.260
have any limit param itself.

00:03:45.260 --> 00:03:46.310
And [INAUDIBLE]

00:03:46.310 --> 00:03:49.190
is basically a wrapper around
content result of the dot

00:03:49.190 --> 00:03:50.440
query with [INAUDIBLE].

00:03:52.990 --> 00:03:54.070
So that's the reason, really.

00:03:54.070 --> 00:03:56.040
If you want to have limit
parameter, you have to do it

00:03:56.040 --> 00:03:58.120
yourself as a char
string on URI.

00:04:00.920 --> 00:04:03.140
So yeah, that's the question.

00:04:03.140 --> 00:04:04.300
RICH HYNDMAN: Welcome to the
other people who have just

00:04:04.300 --> 00:04:06.136
joined us in the
Hangout today.

00:04:06.136 --> 00:04:09.040
Lucas and Brendan, good
to see you guys.

00:04:09.040 --> 00:04:10.890
CHRIS BANES: Is that Lucas
whose question I just--

00:04:10.890 --> 00:04:12.140
RICH HYNDMAN: No.

00:04:18.019 --> 00:04:18.810
STEPHAN LINZNER: Do we have any

00:04:18.810 --> 00:04:21.740
questions from the Hangout?

00:04:21.740 --> 00:04:22.990
MALE SPEAKER: Yes.

00:04:24.958 --> 00:04:25.410
Hello.

00:04:25.410 --> 00:04:26.050
Can you hear me?

00:04:26.050 --> 00:04:27.750
RICH HYNDMAN: Absolutely.

00:04:27.750 --> 00:04:29.010
MALE SPEAKER: Cool.

00:04:29.010 --> 00:04:31.690
So I just asked that in
public on Google+.

00:04:31.690 --> 00:04:35.620
But I wonder if you have
some specific tip.

00:04:35.620 --> 00:04:39.500
As you probably heard, I'm
working on this custom adapter

00:04:39.500 --> 00:04:41.560
view, two-way view.

00:04:41.560 --> 00:04:46.980
And I'm now adding accessibility
support to it.

00:04:46.980 --> 00:04:48.676
So it works in the same
fashion than list

00:04:48.676 --> 00:04:50.900
view and grid view.

00:04:50.900 --> 00:04:55.440
So in each layout pass, what
it does is it has to detach

00:04:55.440 --> 00:04:57.880
all the existing views in order
to do it all the view

00:04:57.880 --> 00:04:59.960
recycling stuff.

00:04:59.960 --> 00:05:02.800
List view does the same thing.

00:05:02.800 --> 00:05:09.440
In order to handle focus when we
do the re-layout, for input

00:05:09.440 --> 00:05:14.250
focus there are public
APIs that make this

00:05:14.250 --> 00:05:15.440
very simple to implement.

00:05:15.440 --> 00:05:17.610
You have [INAUDIBLE].

00:05:17.610 --> 00:05:18.620
Save that.

00:05:18.620 --> 00:05:20.130
Recycle everything.

00:05:20.130 --> 00:05:23.810
And then you restore the focus
wherever it was, if it makes

00:05:23.810 --> 00:05:25.470
sense to do so.

00:05:25.470 --> 00:05:30.850
But for accessibility focus,
which is something more recent

00:05:30.850 --> 00:05:35.930
in the platform, as far as I
know, I couldn't find any

00:05:35.930 --> 00:05:42.470
public API to do things like to
query the system on things

00:05:42.470 --> 00:05:45.940
like, where's the accessibility
focus now.

00:05:45.940 --> 00:05:49.123
And things like, do I have the
accessibility focus if my

00:05:49.123 --> 00:05:51.310
children has it.

00:05:51.310 --> 00:05:56.260
And if I do have, then I want to
know the accessibility node

00:05:56.260 --> 00:06:00.480
info on it, or the host view for
the accessibility focus.

00:06:03.010 --> 00:06:06.290
Do you guys know of any public
API to handle these things?

00:06:06.290 --> 00:06:09.930
Because it seems that list view
and grid view, they are

00:06:09.930 --> 00:06:13.520
only using private APIs that
makes it very convenient to do

00:06:13.520 --> 00:06:16.080
these things.

00:06:16.080 --> 00:06:20.950
CHRIS BANES: I know the support
library has a couple

00:06:20.950 --> 00:06:23.676
of classes in there, which have
support versions of being

00:06:23.676 --> 00:06:27.220
able to query accessibility
service, and also be able to

00:06:27.220 --> 00:06:29.950
access video events.

00:06:29.950 --> 00:06:33.730
I haven't played with it much
myself, so can't really say

00:06:33.730 --> 00:06:36.245
definitively whether it's going
to help you or not.

00:06:36.245 --> 00:06:37.700
But have a look.

00:06:37.700 --> 00:06:39.360
STEPHAN LINZNER: Me neither.

00:06:39.360 --> 00:06:41.450
Have a look at the Docs.

00:06:41.450 --> 00:06:42.700
It's
ui/accessibility/services.html.

00:06:48.080 --> 00:06:50.960
And it basically summarizes
the API there.

00:06:50.960 --> 00:06:53.230
But I haven't worked
with it either.

00:06:53.230 --> 00:06:55.400
So I use some of
the attributes.

00:06:55.400 --> 00:06:59.940
But that's about it.

00:06:59.940 --> 00:07:02.390
MALE SPEAKER: I'm kind of
assuming that the reason it's

00:07:02.390 --> 00:07:05.780
not public yet is just that you
want it to mature a bit

00:07:05.780 --> 00:07:08.245
before exposing it
to every one.

00:07:08.245 --> 00:07:12.820
Because there are things that
look like very good candidates

00:07:12.820 --> 00:07:15.660
for a public API in
the private API.

00:07:15.660 --> 00:07:18.340
There are things like request
accessibility focus on the

00:07:18.340 --> 00:07:19.710
view class.

00:07:19.710 --> 00:07:23.340
So this thing would be very
convenient if you're dealing

00:07:23.340 --> 00:07:25.190
with things like
view recycling,

00:07:25.190 --> 00:07:27.650
and stuff like that.

00:07:27.650 --> 00:07:32.585
And also things like, you can
query the host view holding

00:07:32.585 --> 00:07:34.850
the accessibility focus
at any point.

00:07:34.850 --> 00:07:38.926
But that's using very
private stuff.

00:07:38.926 --> 00:07:41.690
CHRIS BANES: Arey they public
methods with a hidden

00:07:41.690 --> 00:07:43.126
annotation?

00:07:43.126 --> 00:07:44.500
MALE SPEAKER: Yeah.

00:07:44.500 --> 00:07:48.670
So this is why I'm assuming it's
just cooking a bit more

00:07:48.670 --> 00:07:52.070
before exposing.

00:07:52.070 --> 00:07:53.310
STEPHAN LINZNER: I think
you're right.

00:07:53.310 --> 00:07:58.410
We have to be very careful
what you put out there.

00:07:58.410 --> 00:08:01.150
MALE SPEAKER: I can
understand that.

00:08:01.150 --> 00:08:05.270
It's just that for now,
pretty much--

00:08:05.270 --> 00:08:08.280
the reason I'm asking is also
because it seems that the

00:08:08.280 --> 00:08:11.870
whole adaptive view framework
is not really meant to be

00:08:11.870 --> 00:08:13.930
extended at all.

00:08:13.930 --> 00:08:18.080
I have to replicate a lot of
stuff that is in the parent

00:08:18.080 --> 00:08:20.110
classes a lot of times.

00:08:20.110 --> 00:08:21.360
And it's really inconvenient.

00:08:24.915 --> 00:08:26.540
RICH HYNDMAN: I'm looking at the
support library, as Chris

00:08:26.540 --> 00:08:29.110
says, has got some accessibility
delegate methods

00:08:29.110 --> 00:08:32.830
in there, and sending and
receiving of accessibility

00:08:32.830 --> 00:08:34.392
events, as well.

00:08:34.392 --> 00:08:35.880
I hadn't looked at it myself.

00:08:35.880 --> 00:08:39.059
So what happens at the moment
if you put the device into

00:08:39.059 --> 00:08:39.590
accessibility mode?

00:08:39.590 --> 00:08:44.900
Does your list swipe when
you use two fingers?

00:08:44.900 --> 00:08:47.700
MALE SPEAKER: I implemented the
whole accessibility action

00:08:47.700 --> 00:08:50.130
bits, which is fine.

00:08:50.130 --> 00:08:51.390
This is all done.

00:08:51.390 --> 00:08:54.950
This is all working fine.

00:08:54.950 --> 00:08:56.840
The specific problem I'm talking
about is when you

00:08:56.840 --> 00:09:00.120
scroll and you recycle views,
you're going to lose the

00:09:00.120 --> 00:09:03.890
accessibility focus if one
of the children had it.

00:09:03.890 --> 00:09:08.190
It will pretty much reset the
accessibility focus to nowhere

00:09:08.190 --> 00:09:10.900
every time you scroll.

00:09:10.900 --> 00:09:12.873
RICH HYNDMAN: If you put that on
Stack Overflow and give us

00:09:12.873 --> 00:09:15.710
a link as well, find some
more details on it.

00:09:15.710 --> 00:09:17.280
MALE SPEAKER: OK.

00:09:17.280 --> 00:09:22.150
I linked the post on Google+ to
what I think is some of the

00:09:22.150 --> 00:09:24.760
guys working on accessibility
on Android.

00:09:24.760 --> 00:09:26.410
Hopefully they'll have a look.

00:09:26.410 --> 00:09:27.280
RICH HYNDMAN: I'll look
for the post.

00:09:27.280 --> 00:09:28.330
I can refer it to
them internally.

00:09:28.330 --> 00:09:30.120
I know they're always
interested in actual

00:09:30.120 --> 00:09:32.950
implementation of
accessibility.

00:09:32.950 --> 00:09:33.720
MALE SPEAKER: I'm assuming
it's just

00:09:33.720 --> 00:09:35.090
because it's recent API.

00:09:35.090 --> 00:09:40.310
So it's trying things out
a bit in private first.

00:09:40.310 --> 00:09:41.970
I can understand that.

00:09:41.970 --> 00:09:42.820
RICH HYNDMAN: Good question.

00:09:42.820 --> 00:09:44.070
Thank you very much.

00:09:46.850 --> 00:09:47.780
CHRIS BANES: What have
we got next?

00:09:47.780 --> 00:09:49.030
I'm going to make some notes.

00:09:51.970 --> 00:09:55.520
STEPHAN LINZNER: The next
question is on how to achieve

00:09:55.520 --> 00:09:59.190
drop shadow for views without
using a NinePatch.

00:09:59.190 --> 00:10:00.670
Asked from David in Vienna.

00:10:04.060 --> 00:10:07.870
I think you should really
think about the reason

00:10:07.870 --> 00:10:09.180
why you need this.

00:10:09.180 --> 00:10:13.200
Because the NinePatch is
probably the best you can do,

00:10:13.200 --> 00:10:16.160
also, in terms of performance.

00:10:21.010 --> 00:10:24.670
Chris suggested to disable the
hardware acceleration on the

00:10:24.670 --> 00:10:27.250
view, and use a shadow layer.

00:10:30.300 --> 00:10:31.230
CHRIS BANES: Who was it who--

00:10:31.230 --> 00:10:32.130
David.

00:10:32.130 --> 00:10:33.134
So you mentioned that it doesn't
work for hardware

00:10:33.134 --> 00:10:35.230
acceleration.

00:10:35.230 --> 00:10:37.420
That was the reason
why that was done.

00:10:37.420 --> 00:10:39.930
You can set the layer
type back to

00:10:39.930 --> 00:10:42.600
software, so software layer.

00:10:42.600 --> 00:10:46.050
Disable hardware acceleration,
and it should work again.

00:10:46.050 --> 00:10:49.810
But NinePatch is probably the
way I'd go, with a transparent

00:10:49.810 --> 00:10:51.720
middle, so you're not getting
any overdraw.

00:10:54.840 --> 00:10:58.170
If you really do need to drop
shadow, then those are the two

00:10:58.170 --> 00:11:01.200
main options you've got.

00:11:01.200 --> 00:11:02.450
Thanks for the question.

00:11:07.060 --> 00:11:08.940
Is there a question?

00:11:08.940 --> 00:11:12.790
RICH HYNDMAN: No, but the one
man Moderator machine, Andrew

00:11:12.790 --> 00:11:15.625
Kelly, has pointed out that the
video stream may not be

00:11:15.625 --> 00:11:17.600
working in the YouTube
player right now.

00:11:17.600 --> 00:11:18.090
There we go.

00:11:18.090 --> 00:11:20.785
We can ask him, as soon
as he joins in.

00:11:20.785 --> 00:11:22.465
Maybe you can put it in the chat
window, if you've not got

00:11:22.465 --> 00:11:22.906
a microphone, Andrew.

00:11:22.906 --> 00:11:25.430
Did you get the YouTube
window working?

00:11:28.154 --> 00:11:29.404
Showed up on three.

00:11:31.450 --> 00:11:33.270
CHRIS BANES: We did ask another
question, actually.

00:11:33.270 --> 00:11:33.850
RICH HYNDMAN: You've
got a question

00:11:33.850 --> 00:11:35.440
for him in the Moderator?

00:11:35.440 --> 00:11:36.690
CHRIS BANES: There's two.

00:11:42.170 --> 00:11:46.710
He's asked, any thoughts on
why a Home screen shortcut

00:11:46.710 --> 00:11:50.050
would remove when your apps
are graded and install

00:11:50.050 --> 00:11:52.940
location is set to
internal only?

00:11:52.940 --> 00:11:54.740
NICK BUTCHER: There's a good
blog post on our blog called

00:11:54.740 --> 00:11:56.680
things that cannot change.

00:11:56.680 --> 00:12:00.650
It sounds like you've
change one of them.

00:12:00.650 --> 00:12:02.720
Basically, what normally happens
if you had to change

00:12:02.720 --> 00:12:05.760
your package structure, if
you've moved your home

00:12:05.760 --> 00:12:09.060
activity to a subfolder or
something like that, then

00:12:09.060 --> 00:12:10.320
these things can't change.

00:12:10.320 --> 00:12:11.995
Because that's the component
identified on that node.

00:12:11.995 --> 00:12:14.700
The desktop shortcut
basically is a link

00:12:14.700 --> 00:12:17.540
to a specific intent.

00:12:17.540 --> 00:12:19.450
And so if you change
that, then the

00:12:19.450 --> 00:12:20.430
shortcut will stop working.

00:12:20.430 --> 00:12:23.950
What you can do is create an
activity alias at the old

00:12:23.950 --> 00:12:25.486
location, which basically
will forward you

00:12:25.486 --> 00:12:26.840
on to the new location.

00:12:26.840 --> 00:12:29.880
So that's good practice if you
are going to do this kind of

00:12:29.880 --> 00:12:30.400
refactoring.

00:12:30.400 --> 00:12:31.350
So that you don't break

00:12:31.350 --> 00:12:32.790
anyone's home screen shortcuts.

00:12:32.790 --> 00:12:35.090
But if you look on the Android
Developers' blog-- it's

00:12:35.090 --> 00:12:36.340
android-develope
rs.blogspot.com.

00:12:38.300 --> 00:12:40.710
There's a post called "Things
That Can Not Change," by

00:12:40.710 --> 00:12:41.960
Dianne Hackborn.

00:12:43.670 --> 00:12:44.920
Check that out.

00:12:48.550 --> 00:12:51.090
GIUSEPPE: Can I ask
a question?

00:12:51.090 --> 00:12:54.060
RICH HYNDMAN: Hey, of course.

00:12:54.060 --> 00:12:59.960
GIUSEPPE: I use an XML selector
to meet different

00:12:59.960 --> 00:13:05.210
button state, and
source selector.

00:13:05.210 --> 00:13:06.600
RICH HYNDMAN: Which
XML selector?

00:13:06.600 --> 00:13:07.540
GIUSEPPE: Selector [INAUDIBLE]

00:13:07.540 --> 00:13:10.024
XML.

00:13:10.024 --> 00:13:11.274
RICH HYNDMAN: OK..

00:13:13.120 --> 00:13:16.640
GIUSEPPE: When from the activity
I use the select

00:13:16.640 --> 00:13:23.230
image resource, and then I call
the XML selector, the

00:13:23.230 --> 00:13:28.130
system image resource taking
care about the memory,

00:13:28.130 --> 00:13:30.500
[INAUDIBLE]

00:13:30.500 --> 00:13:34.470
et cetera, or I have to take
care myself about the bitmaps?

00:13:37.150 --> 00:13:39.330
RICH HYNDMAN: You're talking
about all the different image

00:13:39.330 --> 00:13:41.322
states that you're going
to have on the button?

00:13:41.322 --> 00:13:43.210
GIUSEPPE: No.

00:13:43.210 --> 00:13:43.640
Sorry.

00:13:43.640 --> 00:13:44.970
I will explain again.

00:13:44.970 --> 00:13:50.670
I have an XML with selectors
inside, with

00:13:50.670 --> 00:13:54.520
pushed, pressed, focused.

00:13:54.520 --> 00:13:58.110
Each selection have
a different image.

00:13:58.110 --> 00:13:58.920
RICH HYNDMAN: Yeah.

00:13:58.920 --> 00:13:59.515
This is--

00:13:59.515 --> 00:14:04.810
GIUSEPPE: The same image view,
I change the XML selector

00:14:04.810 --> 00:14:08.370
using set image resource
at runtime.

00:14:10.910 --> 00:14:14.920
On some specific device, I'm
experiencing out of memory.

00:14:17.700 --> 00:14:23.070
I don't know if the set image
resource is taking care about

00:14:23.070 --> 00:14:25.920
the restoring of the
old image or not.

00:14:29.990 --> 00:14:31.150
CHRIS BANES: I'm
not 100% sure.

00:14:31.150 --> 00:14:34.700
But I'm pretty sure when you
load the drawable it will load

00:14:34.700 --> 00:14:37.110
all of its child drawables
at the same time.

00:14:37.110 --> 00:14:42.027
You have a drawable which will
have x number of bitmaps based

00:14:42.027 --> 00:14:42.500
on the status.

00:14:42.500 --> 00:14:43.750
GIUSEPPE: Correct.

00:14:46.440 --> 00:14:48.240
CHRIS BANES: So there
is no real way of--

00:14:48.240 --> 00:14:49.880
RICH HYNDMAN: I don't think
there's any provided way of

00:14:49.880 --> 00:14:51.700
you to recycle those images.

00:14:51.700 --> 00:14:57.010
Have you done some tracing on
where the memory is going?

00:14:57.010 --> 00:14:58.260
GIUSEPPE: Yes.

00:15:00.120 --> 00:15:06.900
It's like when I change the
resource the image that was

00:15:06.900 --> 00:15:09.310
loading before didn't unload.

00:15:14.720 --> 00:15:17.280
RICH HYNDMAN: Are you changing
the resource a lot?

00:15:17.280 --> 00:15:19.170
It's supposed to be pretty
hefty, right?

00:15:19.170 --> 00:15:25.445
GIUSEPPE: Yes, because this is
connected with a button that

00:15:25.445 --> 00:15:28.415
is pressed many times
on the screen.

00:15:28.415 --> 00:15:31.110
RICH HYNDMAN: And every
time you press it--

00:15:31.110 --> 00:15:40.660
GIUSEPPE: Totally there are
four image in the XML.

00:15:40.660 --> 00:15:43.680
And another four image
in another XML.

00:15:43.680 --> 00:15:48.130
So using the set image resource,
I switch the two

00:15:48.130 --> 00:15:49.580
different XML files.

00:15:52.580 --> 00:15:54.200
RICH HYNDMAN: And when you
switch you can see memory

00:15:54.200 --> 00:15:55.158
going up and up and up?

00:15:55.158 --> 00:15:56.408
GIUSEPPE: Up, up, up.

00:16:00.050 --> 00:16:01.550
NICK BUTCHER: A cleaner way
might be to, instead of

00:16:01.550 --> 00:16:03.880
switching resource yourself, why
don't you define your own

00:16:03.880 --> 00:16:05.290
custom states?

00:16:05.290 --> 00:16:08.000
Then you can have different
drawables in your stateless

00:16:08.000 --> 00:16:10.760
drawable reacting to your own
custom states, as well as the

00:16:10.760 --> 00:16:12.010
Android states.

00:16:14.245 --> 00:16:15.650
RICH HYNDMAN: Or you could
have two buttons.

00:16:15.650 --> 00:16:17.620
CHRIS BANES: What platform
is this on?

00:16:17.620 --> 00:16:19.132
What version?

00:16:19.132 --> 00:16:20.860
GIUSEPPE: What version?

00:16:20.860 --> 00:16:26.840
They go on 404 and 236.

00:16:26.840 --> 00:16:28.650
CHRIS BANES: That's interesting,
because--

00:16:28.650 --> 00:16:34.350
GIUSEPPE: And all the devices
that send the out of memory

00:16:34.350 --> 00:16:40.805
report, I know that they are any
times signed like others.

00:16:43.600 --> 00:16:44.700
Others device.

00:16:44.700 --> 00:16:48.810
When in the panel you
have others device?

00:16:48.810 --> 00:16:54.160
There are no specific names,
like Nexus or et cetera.

00:16:54.160 --> 00:16:54.710
CHRIS BANES: It's interesting.

00:16:54.710 --> 00:16:57.580
Because I would have thought
that the drawables are loaded

00:16:57.580 --> 00:17:00.820
with input shareable.

00:17:00.820 --> 00:17:03.300
So that if they aren't being
used, they'll get purged

00:17:03.300 --> 00:17:07.660
straight away by the system.

00:17:07.660 --> 00:17:10.900
But that was added in 3.0?

00:17:10.900 --> 00:17:14.730
It's about 2.2, 2.3.

00:17:14.730 --> 00:17:16.930
So honestly I don't
really know.

00:17:16.930 --> 00:17:19.930
It sounds like a bit
of a [INAUDIBLE].

00:17:24.550 --> 00:17:25.770
RICH HYNDMAN: It's saying
nothing stated about you

00:17:25.770 --> 00:17:26.280
having to clean it up.

00:17:26.280 --> 00:17:28.049
And I don't think we provide any
methods for you to clean

00:17:28.049 --> 00:17:30.400
it up yourself.

00:17:30.400 --> 00:17:32.770
CHRIS BANES: You can
for the drawables.

00:17:32.770 --> 00:17:34.137
GIUSEPPE: In the last
documentation--

00:17:39.080 --> 00:17:40.330
RICH HYNDMAN: Giuseppe, gone?

00:17:43.790 --> 00:17:44.280
Giuseppe?

00:17:44.280 --> 00:17:45.610
CHRIS BANES: We've lost him.

00:17:45.610 --> 00:17:49.030
He's gone, frozen.

00:17:49.030 --> 00:17:49.730
RICH HYNDMAN: Interesting.

00:17:49.730 --> 00:17:51.658
Oh, wait.

00:17:51.658 --> 00:17:54.460
No, someone else.

00:17:54.460 --> 00:17:57.675
GIUSEPPE: The set image drawable
or set image bitmap

00:17:57.675 --> 00:17:58.570
don't work.

00:17:58.570 --> 00:18:02.530
Because I need a different state
for the same image view.

00:18:06.680 --> 00:18:07.920
RICH HYNDMAN: What
are you saying?

00:18:07.920 --> 00:18:10.300
So you're using set image
resource instead?

00:18:10.300 --> 00:18:11.550
GIUSEPPE: Yes.

00:18:16.475 --> 00:18:18.280
NICK BUTCHER: You could create
a stateless drawable and use

00:18:18.280 --> 00:18:19.530
set image drawable.

00:18:22.800 --> 00:18:24.410
Or you could define custom
states, just

00:18:24.410 --> 00:18:25.490
use a single button.

00:18:25.490 --> 00:18:27.590
Because I think it might be
doing this set repeatedly,

00:18:27.590 --> 00:18:30.190
which is your problem.

00:18:30.190 --> 00:18:32.430
GIUSEPPE: Do you mean to create
a custom state, so take

00:18:32.430 --> 00:18:36.900
three on each change of the--

00:18:36.900 --> 00:18:37.130
NICK BUTCHER: Yes.

00:18:37.130 --> 00:18:38.995
So if you're doing a play pause
button, you could have a

00:18:38.995 --> 00:18:42.470
state saying playing, and that
could be a Boolean selector,

00:18:42.470 --> 00:18:43.470
like true or false.

00:18:43.470 --> 00:18:46.610
So when you do your stateless
drawable, the different states

00:18:46.610 --> 00:18:49.540
you react to, one of those could
be playing, as well as

00:18:49.540 --> 00:18:51.300
the Android underscore focused
underscore pressed,

00:18:51.300 --> 00:18:52.770
and stuff like that.

00:18:52.770 --> 00:18:54.430
So you could provide your
own states as well as

00:18:54.430 --> 00:18:56.840
using custom states.

00:18:56.840 --> 00:18:57.320
In fact, [? Lucas, ?]

00:18:57.320 --> 00:19:00.755
I think one of your colleagues
on Firefox did a good blog

00:19:00.755 --> 00:19:02.265
post about how to do this.

00:19:02.265 --> 00:19:03.830
Do you happen to
know the blog?

00:19:03.830 --> 00:19:05.820
I can't remember.

00:19:05.820 --> 00:19:07.850
MALE SPEAKER: I can link
that on the chat.

00:19:07.850 --> 00:19:07.980
NICK BUTCHER: That
would be awesome.

00:19:07.980 --> 00:19:10.450
Yeah, about how to define
your states.

00:19:10.450 --> 00:19:13.530
I saw that the other day.

00:19:13.530 --> 00:19:14.780
Yeah, it sounds like an issue.

00:19:17.570 --> 00:19:18.510
RICH HYNDMAN: OK.

00:19:18.510 --> 00:19:21.080
It does sound like an issue.

00:19:21.080 --> 00:19:22.330
Should be run the bug as well?

00:19:23.948 --> 00:19:25.400
MALE SPEAKER: Hello.

00:19:25.400 --> 00:19:25.950
CHRIS BANES: Hello.

00:19:25.950 --> 00:19:28.120
Who said that?

00:19:28.120 --> 00:19:31.260
MALE SPEAKER: I was there
a couple of weeks ago.

00:19:31.260 --> 00:19:35.120
I'm the one with the white
web view problems.

00:19:35.120 --> 00:19:37.240
CHRIS BANES: Hi.

00:19:37.240 --> 00:19:42.200
MALE SPEAKER: So you suggested
disabling the hardware

00:19:42.200 --> 00:19:43.420
acceleration.

00:19:43.420 --> 00:19:44.480
And I did that.

00:19:44.480 --> 00:19:46.360
And it changed nothing.

00:19:49.010 --> 00:19:51.220
RICH HYNDMAN: You disabled it
for the whole application?

00:19:51.220 --> 00:19:51.920
MALE SPEAKER: Sorry?

00:19:51.920 --> 00:19:55.280
RICH HYNDMAN: You disabled it
for the whole application?

00:19:55.280 --> 00:19:56.730
MALE SPEAKER: I can't
understand you.

00:19:56.730 --> 00:19:57.370
I'm sorry.

00:19:57.370 --> 00:20:00.960
I'm not a native speaker.

00:20:00.960 --> 00:20:03.240
STEPHAN LINZNER: Did you disable
hardware acceleration

00:20:03.240 --> 00:20:06.700
for your whole application
in the manifest?

00:20:06.700 --> 00:20:08.260
MALE SPEAKER: I did.

00:20:08.260 --> 00:20:10.575
STEPHAN LINZNER: So not
only for the web view?

00:20:10.575 --> 00:20:11.440
MALE SPEAKER: Not only
for the web view.

00:20:11.440 --> 00:20:14.400
For the whole application.

00:20:14.400 --> 00:20:15.690
STEPHAN LINZNER: And what
are you seeing?

00:20:15.690 --> 00:20:17.140
NICK BUTCHER: Can you
restate the issue?

00:20:17.140 --> 00:20:18.572
I can't remember.

00:20:18.572 --> 00:20:21.900
Is the question in
the Moderator?

00:20:21.900 --> 00:20:22.300
MALE SPEAKER: Yes.

00:20:22.300 --> 00:20:24.210
It's one of the questions.

00:20:24.210 --> 00:20:26.470
It's the one with the
Stack Overflow link.

00:20:32.180 --> 00:20:34.460
CHRIS BANES: OK, yeah.

00:20:34.460 --> 00:20:38.230
I put an answer in, saying it
sounds like HTML issue.

00:20:38.230 --> 00:20:41.870
Have you tried running that web
page in the normal Chrome

00:20:41.870 --> 00:20:43.242
App, or the browser app?

00:20:46.650 --> 00:20:51.340
MALE SPEAKER: I tested
it with [INAUDIBLE]

00:20:51.340 --> 00:20:52.420
validation.

00:20:52.420 --> 00:20:55.800
And they lead to HTML.

00:20:55.800 --> 00:20:59.040
I don't have Chrome
on my mobile phone

00:20:59.040 --> 00:21:01.500
because it's too old.

00:21:01.500 --> 00:21:06.290
But actually I didn't try
it with the browser.

00:21:06.290 --> 00:21:09.950
The fact is that usually
it works.

00:21:09.950 --> 00:21:12.960
It starts being white
after a while.

00:21:12.960 --> 00:21:16.100
If I reboot to my phone, it
starts working again.

00:21:16.100 --> 00:21:18.920
So I suspect it's something
else, not the

00:21:18.920 --> 00:21:22.270
HTML, which is correct.

00:21:22.270 --> 00:21:24.612
It's a simple table,
nothing fancy.

00:21:27.780 --> 00:21:28.450
STEPHAN LINZNER: And
this happens

00:21:28.450 --> 00:21:29.700
in the Android browser?

00:21:29.700 --> 00:21:34.070
And you're not able
to test on Chrome?

00:21:34.070 --> 00:21:37.070
MALE SPEAKER: No, I'm not
able to test on Chrome.

00:21:37.070 --> 00:21:40.667
And it's happening
in a web view.

00:21:40.667 --> 00:21:44.610
I didn't really test
on the browser.

00:21:44.610 --> 00:21:45.930
It's strange.

00:21:45.930 --> 00:21:47.540
STEPHAN LINZNER: Are you running
some JavaScript?

00:21:47.540 --> 00:21:51.050
Or is it just markup?

00:21:51.050 --> 00:21:53.640
MALE SPEAKER: I'm running
some JavaScript,

00:21:53.640 --> 00:21:55.350
which I didn't write.

00:21:55.350 --> 00:22:00.390
It's to render [INAUDIBLE].

00:22:00.390 --> 00:22:03.690
And the strange thing
is that I only get

00:22:03.690 --> 00:22:06.240
problems on Android 4.

00:22:06.240 --> 00:22:12.160
On Android 2, no problems, no
one ever reports any problem.

00:22:12.160 --> 00:22:15.244
On Android 4 I get
this problem.

00:22:15.244 --> 00:22:16.030
RICH HYNDMAN: I remember.

00:22:16.030 --> 00:22:17.510
That's why we thought
it might be hardware

00:22:17.510 --> 00:22:18.760
acceleration related.

00:22:21.320 --> 00:22:26.580
MALE SPEAKER: I use in CSS
rotations, not directly.

00:22:26.580 --> 00:22:30.190
My JavaScript code can, because
I didn't write the

00:22:30.190 --> 00:22:32.840
JavaScript code to render
[INAUDIBLE].

00:22:32.840 --> 00:22:36.440
I just copied it from somewhere
on the internet.

00:22:36.440 --> 00:22:38.860
I had fun with those.

00:22:38.860 --> 00:22:39.660
I will investigate.

00:22:39.660 --> 00:22:42.940
But no, it's not a problem
with CSS rotations.

00:22:42.940 --> 00:22:50.185
Because my guide first page
has no CSS rotations.

00:22:56.160 --> 00:22:57.550
RICH HYNDMAN: We might have
to skip that one.

00:22:57.550 --> 00:23:00.730
I don't have an answer
for you.

00:23:00.730 --> 00:23:02.425
It would require a bit of
debugging, and playing with

00:23:02.425 --> 00:23:03.630
the HTML in the code.

00:23:03.630 --> 00:23:06.570
I haven't heard of this problem
before with the web

00:23:06.570 --> 00:23:07.380
views going blank.

00:23:07.380 --> 00:23:09.140
We use them in a lot of
applications all the time.

00:23:09.140 --> 00:23:11.450
And we see them in a lot
of applications.

00:23:11.450 --> 00:23:15.650
And I've not seen them ever
just appearing blank.

00:23:15.650 --> 00:23:16.960
MALE SPEAKER: And the
links are working.

00:23:16.960 --> 00:23:20.120
That's the really
strange thing.

00:23:20.120 --> 00:23:22.350
If I click on the link,
it takes me to

00:23:22.350 --> 00:23:24.090
another white page.

00:23:24.090 --> 00:23:28.210
But I have to push the back
button once more.

00:23:28.210 --> 00:23:30.820
So the link is actually
working at first.

00:23:37.730 --> 00:23:39.097
RICH HYNDMAN: I don't
know why that--

00:23:39.097 --> 00:23:40.347
sorry.

00:23:42.380 --> 00:23:45.580
Unless you're making
use of a feature--

00:23:45.580 --> 00:23:48.030
STEPHAN LINZNER: With version
4, you might try out get a

00:23:48.030 --> 00:23:49.080
phone which runs Chrome.

00:23:49.080 --> 00:23:51.380
Because then you can have
the remote debugging.

00:23:54.400 --> 00:23:57.430
You said you did not write
the JavaScript.

00:23:57.430 --> 00:24:00.700
But it can still use remote
debugging to go through step

00:24:00.700 --> 00:24:01.900
by step through JavaScript.

00:24:01.900 --> 00:24:09.690
And you might find the point
where the problem starts.

00:24:09.690 --> 00:24:11.580
I think we have no answer
for you right now.

00:24:14.550 --> 00:24:16.590
MALE SPEAKER: I look into
this JavaScript code.

00:24:16.590 --> 00:24:18.540
Because actually I
didn't write it.

00:24:18.540 --> 00:24:22.010
So it might be a problem.

00:24:22.010 --> 00:24:23.610
RICH HYNDMAN: OK, let's shift.

00:24:23.610 --> 00:24:24.240
Thanks for the question,
again.

00:24:24.240 --> 00:24:25.232
Sorry we couldn't help you.

00:24:25.232 --> 00:24:26.156
MALE SPEAKER: Thank you.

00:24:26.156 --> 00:24:29.850
RICH HYNDMAN: It sounds quite
specific to your application.

00:24:29.850 --> 00:24:32.910
MALE SPEAKER: Thank
you very much.

00:24:32.910 --> 00:24:33.980
RICH HYNDMAN: Have we got
any favorite questions

00:24:33.980 --> 00:24:35.230
to follow up with?

00:24:38.620 --> 00:24:39.860
NICK BUTCHER: There's a question
here from Andrew

00:24:39.860 --> 00:24:43.470
Kelly about setting the window
background to null in its

00:24:43.470 --> 00:24:46.330
theme to reduce overdraw.

00:24:46.330 --> 00:24:51.040
And you ask is that
advised to do?

00:24:51.040 --> 00:24:52.530
And you can do it.

00:24:52.530 --> 00:24:54.310
But you have to be extremely
careful.

00:24:54.310 --> 00:24:56.430
Basically, if you're setting the
window background to null,

00:24:56.430 --> 00:24:59.730
you have to ensure that
everything you draw on screen

00:24:59.730 --> 00:25:01.200
has a background on it.

00:25:01.200 --> 00:25:04.265
If there's any component like--
we were talking about

00:25:04.265 --> 00:25:06.980
this earlier-- like action bar
tabs, which have a null

00:25:06.980 --> 00:25:08.840
background, a transparent
background, then you're going

00:25:08.840 --> 00:25:10.420
to get unexpected behavior.

00:25:10.420 --> 00:25:14.530
So while you can set the window
background to null if

00:25:14.530 --> 00:25:17.450
you know what you're doing, I'd
advise you to actually use

00:25:17.450 --> 00:25:18.920
the window background
as a base color.

00:25:18.920 --> 00:25:21.050
And remove backgrounds
from things on top

00:25:21.050 --> 00:25:22.980
of it if you can.

00:25:22.980 --> 00:25:25.130
Another thing to be aware of is
that when you're launching

00:25:25.130 --> 00:25:28.640
your activity for the first
time, in order to get a very

00:25:28.640 --> 00:25:31.340
snappy performance to have the
app launch, Android does an

00:25:31.340 --> 00:25:33.200
optimization where it will
actually take the background

00:25:33.200 --> 00:25:37.170
color of your window and your
action bar, and animate those

00:25:37.170 --> 00:25:39.220
opening, and then draw your
app on top of that, to get

00:25:39.220 --> 00:25:40.730
this faster response time.

00:25:40.730 --> 00:25:44.150
And it's an optimizational
trick.

00:25:44.150 --> 00:25:46.540
So if you're setting a null
background in your theme, then

00:25:46.540 --> 00:25:47.570
we won't be able to do that.

00:25:47.570 --> 00:25:50.220
So you will get this slightly
worse behavior.

00:25:50.220 --> 00:25:53.283
So for that reason, I advise you
to set a background color

00:25:53.283 --> 00:25:55.990
in your window if you can, and
reduce the overdraw on top of

00:25:55.990 --> 00:25:58.160
the background where you can.

00:25:58.160 --> 00:26:02.210
By removing backgrounds on
the views within layout.

00:26:02.210 --> 00:26:03.460
That's my advice.

00:26:06.510 --> 00:26:08.200
STEPHAN LINZNER: There's another
question from Andrew

00:26:08.200 --> 00:26:11.960
Kelly regarding window
soft input mode.

00:26:11.960 --> 00:26:15.880
He basically has the problem
that there's some problem on

00:26:15.880 --> 00:26:17.010
HTC devices.

00:26:17.010 --> 00:26:23.540
And you're asking for advice
on what is the best way to

00:26:23.540 --> 00:26:26.540
handle those issues with
manufacture, or having

00:26:26.540 --> 00:26:29.590
problems on the different
devices.

00:26:29.590 --> 00:26:33.640
I think there's no easy way, or
no best practice to do it.

00:26:33.640 --> 00:26:39.360
What I did in the past, what I
was using a factory, I had

00:26:39.360 --> 00:26:41.040
this one object.

00:26:41.040 --> 00:26:42.110
And I was querying it.

00:26:42.110 --> 00:26:46.250
And it would return me an
object, and it had methods on

00:26:46.250 --> 00:26:48.100
that object.

00:26:48.100 --> 00:26:52.690
In your case it will
be set window soft

00:26:52.690 --> 00:26:54.150
input mode, or something.

00:26:54.150 --> 00:26:57.570
So you could only create a
factory and use this one

00:26:57.570 --> 00:27:01.490
object, and just call one
method on the object.

00:27:01.490 --> 00:27:04.780
So if you have different
vendors, this is pretty handy.

00:27:04.780 --> 00:27:07.180
But it's still only
a workaround.

00:27:07.180 --> 00:27:09.630
There's really no solution for
these kinds of problems.

00:27:09.630 --> 00:27:12.110
And they're hard to find
and hard to tackle.

00:27:12.110 --> 00:27:16.250
But I would use a factory
to do it.

00:27:16.250 --> 00:27:19.360
CHRIS BANES: One thing I have
got is try not to add checks

00:27:19.360 --> 00:27:21.940
for vendor or models, or
anything like that.

00:27:21.940 --> 00:27:24.230
Try and do it generically.

00:27:24.230 --> 00:27:27.800
For this example, it's about
the keyboard being open.

00:27:27.800 --> 00:27:32.580
So I'll give you an example
where you can set the flag to

00:27:32.580 --> 00:27:34.980
have state visible on
the IME options.

00:27:34.980 --> 00:27:37.940
And then in your resume or maybe
a bit later, check if

00:27:37.940 --> 00:27:38.890
the keyboard is open.

00:27:38.890 --> 00:27:42.000
If it's not, then force it open,
as you would on an HTC.

00:27:42.000 --> 00:27:45.090
So try and keep it generic, and
not add any string checks,

00:27:45.090 --> 00:27:46.610
or anything like that.

00:27:46.610 --> 00:27:48.080
Because it's more possible.

00:27:48.080 --> 00:27:48.670
STEPHAN LINZNER: Never do it.

00:27:48.670 --> 00:27:51.221
Only do it if there's no
other way around it.

00:27:54.990 --> 00:27:59.070
OK, do we have a question
in the Hangout?

00:27:59.070 --> 00:28:00.320
MALE SPEAKER: I actually
got a question.

00:28:03.110 --> 00:28:07.370
First of all, Stephan,
your t-shirt rocks.

00:28:07.370 --> 00:28:09.720
STEPHAN LINZNER: I know.

00:28:09.720 --> 00:28:11.590
MALE SPEAKER: I got a question
about a spinner.

00:28:11.590 --> 00:28:17.200
Yesterday, for the first time, I
found myself having to use a

00:28:17.200 --> 00:28:21.360
spinner, and finding out if I
selected something that has

00:28:21.360 --> 00:28:24.020
already been selected.

00:28:24.020 --> 00:28:30.150
What I figured out is that on
Item Selected on Item Selected

00:28:30.150 --> 00:28:34.330
Listener doesn't get triggered
if you reselect an already

00:28:34.330 --> 00:28:36.540
selected item.

00:28:36.540 --> 00:28:41.020
I did solve it by making my own
spinner, and overriding

00:28:41.020 --> 00:28:44.030
the set selection method.

00:28:44.030 --> 00:28:46.630
But I'm just wondering if that's
the way to go, or if

00:28:46.630 --> 00:28:50.540
you have some other advice
on how to achieve this.

00:28:50.540 --> 00:28:53.370
CHRIS BANES: Why do
you need this?

00:28:53.370 --> 00:28:55.310
Because for a spinner, the
selected item would be at the

00:28:55.310 --> 00:28:57.860
top, anyway.

00:28:57.860 --> 00:28:59.000
STEPHAN LINZNER: What's
your use case?

00:28:59.000 --> 00:29:01.930
Do you want to refresh?

00:29:01.930 --> 00:29:05.070
MALE SPEAKER: In our situation
I have some columns.

00:29:05.070 --> 00:29:10.300
And I want to sort those columns
that are defined in

00:29:10.300 --> 00:29:11.680
the spinner.

00:29:11.680 --> 00:29:17.200
And if I select the same item
again, I want it to sort

00:29:17.200 --> 00:29:23.896
ascending or descending,
whatever it was before.

00:29:23.896 --> 00:29:28.110
STEPHAN LINZNER: I think it
works the way it should work.

00:29:28.110 --> 00:29:29.460
Because obviously
in your case--

00:29:32.970 --> 00:29:35.090
I think it's a UI problem.

00:29:35.090 --> 00:29:39.467
You should maybe think about
adding a different button, or

00:29:39.467 --> 00:29:42.260
a different spinner
to do the order.

00:29:42.260 --> 00:29:45.400
Or rethink your interaction.

00:29:45.400 --> 00:29:47.390
Because I think generally
it's a bad thing.

00:29:47.390 --> 00:29:51.270
And I also would say it's not
behavior you would expect to

00:29:51.270 --> 00:29:57.210
change the order, by clicking
again on the item.

00:29:57.210 --> 00:29:59.400
That's just my side of things.

00:29:59.400 --> 00:30:01.930
CHRIS BANES: One way you could
do this is use a standard

00:30:01.930 --> 00:30:03.830
spinner, but in your
spinner listener--

00:30:03.830 --> 00:30:07.840
your item selected listener--

00:30:07.840 --> 00:30:10.670
after you've done your sort and
all that, you then call

00:30:10.670 --> 00:30:11.920
[INAUDIBLE]

00:30:16.010 --> 00:30:20.650
zero or minus 1, just so your
item isn't selected again.

00:30:20.650 --> 00:30:23.745
So you reset the selection.

00:30:23.745 --> 00:30:25.210
NICK BUTCHER: Is this going
to be an action

00:30:25.210 --> 00:30:27.800
bar item for sorting?

00:30:27.800 --> 00:30:28.650
MALE SPEAKER: At this
point in time it's

00:30:28.650 --> 00:30:31.905
just a plain spinner.

00:30:31.905 --> 00:30:35.725
NICK BUTCHER: You could look at
using a pop-up menu rather

00:30:35.725 --> 00:30:36.810
than a spinner.

00:30:36.810 --> 00:30:38.450
Then you have full
control over it.

00:30:38.450 --> 00:30:41.380
That's a pretty common way of
presenting these options.

00:30:41.380 --> 00:30:43.822
Like the overflow menu in the
action bar, the pop-up menu

00:30:43.822 --> 00:30:45.960
will pop down from there.

00:30:45.960 --> 00:30:47.430
MALE SPEAKER: Thanks, guys.

00:30:47.430 --> 00:30:48.550
MALE SPEAKER: You're welcome.

00:30:48.550 --> 00:30:49.875
RICH HYNDMAN: Cheers, guys.

00:30:49.875 --> 00:30:51.650
With that, we are out of
time again for this

00:30:51.650 --> 00:30:52.550
week's Office Hours.

00:30:52.550 --> 00:30:54.211
MALE SPEAKER: Yes.

00:30:54.211 --> 00:30:56.820
RICH HYNDMAN: Too enthusiastic
on the yes there.

00:30:56.820 --> 00:30:58.230
But thanks all for joining us.

00:30:58.230 --> 00:31:02.100
And I'll look for that post
on G+, [? Lucas. ?]

00:31:02.100 --> 00:31:03.510
Good to have you hear today, and
everyone else who joined

00:31:03.510 --> 00:31:04.130
us in the Hangout.

00:31:04.130 --> 00:31:05.340
Thanks, very much.

00:31:05.340 --> 00:31:08.060
[INTERPOSING VOICES]

00:31:08.060 --> 00:31:09.310
GIUSEPPE: Bye bye.

