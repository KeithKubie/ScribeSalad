WEBVTT
Kind: captions
Language: en

00:00:08.640 --> 00:00:11.560
Hello, I'm Brett Morgan from
the Google Maps Developer

00:00:11.560 --> 00:00:13.210
Relations team here in Sydney.

00:00:13.210 --> 00:00:15.310
This week, I'd like to show
you how to add custom

00:00:15.310 --> 00:00:19.000
InfoWindows with the Google
Maps SDK for iOS.

00:00:19.000 --> 00:00:21.780
InfoWindows give contextually
relevant information to your

00:00:21.780 --> 00:00:24.290
users quickly and painlessly.

00:00:24.290 --> 00:00:25.890
Time to dive in.

00:00:25.890 --> 00:00:28.690
Here, we have the code for
Google Map integration in an

00:00:28.690 --> 00:00:30.160
iOS application.

00:00:30.160 --> 00:00:32.640
As you can see, I'm configuring
the map for point

00:00:32.640 --> 00:00:35.040
of interest by declaring a
serial location coordinate

00:00:35.040 --> 00:00:38.350
2-D. I construct the GMS
Marker for the point of

00:00:38.350 --> 00:00:40.640
interest at the center of
the map view and add the

00:00:40.640 --> 00:00:41.880
Marker to the map.

00:00:41.880 --> 00:00:44.530
Note, I've set the title
attribute as the Marker.

00:00:44.530 --> 00:00:47.200
And this will bring out our
default InfoWindow rendering

00:00:47.200 --> 00:00:49.280
when a user taps
on the Marker.

00:00:49.280 --> 00:00:51.482
Let's have a look at
that in action.

00:00:51.482 --> 00:00:54.480
Now, this is pretty good and
really, really easy.

00:00:54.480 --> 00:00:56.240
But sometimes, you want
to display more

00:00:56.240 --> 00:00:57.690
than just simple text.

00:00:57.690 --> 00:01:00.460
If your application is about
real estate sales, you could

00:01:00.460 --> 00:01:02.020
show the expected sales price.

00:01:02.020 --> 00:01:04.550
If you're building a cinema
application, why not show

00:01:04.550 --> 00:01:07.650
which movies are showing
at the cinema today?

00:01:07.650 --> 00:01:09.860
For these cases, a
custom InfoWindow

00:01:09.860 --> 00:01:12.450
is the perfect thing.

00:01:12.450 --> 00:01:15.700
I'm going to build a custom
InfoWindow that shows a photo

00:01:15.700 --> 00:01:16.515
at a point of interest.

00:01:16.515 --> 00:01:19.720
I have a .png asset here that
uses the background for the

00:01:19.720 --> 00:01:23.280
InfoWindow and a photo of
the Sydney Opera House.

00:01:23.280 --> 00:01:25.070
I need to do a series
of steps here.

00:01:25.070 --> 00:01:27.860
First, I'll construct a new NIB
file to configure how the

00:01:27.860 --> 00:01:30.850
UI image and UI labels
are laid out.

00:01:30.850 --> 00:01:33.350
Then I'll create a new UIView
subclass called

00:01:33.350 --> 00:01:35.700
CustomInfoWindow that will
act as the binding

00:01:35.700 --> 00:01:37.900
type for the NIB file.

00:01:37.900 --> 00:01:41.430
Finally, I will configure the
UILabels and load the photo

00:01:41.430 --> 00:01:44.260
the Opera House into the
InfoWindow when the user taps

00:01:44.260 --> 00:01:45.970
on the Marker.

00:01:45.970 --> 00:01:47.530
So let's create the NIB file,

00:01:47.530 --> 00:01:49.600
selecting View as the template.

00:01:49.600 --> 00:01:51.750
Name the file InfoWindow.

00:01:51.750 --> 00:01:54.010
This brings up Interface
Builder.

00:01:54.010 --> 00:01:56.840
Reconfigure the size of the
UIView to match the underlying

00:01:56.840 --> 00:01:59.145
ping asset that we are using as
the InfoWindow background.

00:02:02.090 --> 00:02:05.880
For this one, it's 224 points
wide by 221 points high.

00:02:08.530 --> 00:02:11.810
Then we add a UIImageView to
host the InfoWindow's custom

00:02:11.810 --> 00:02:13.060
background.

00:02:16.230 --> 00:02:19.390
Next, we add and configure a
pair of UILabels, one to act

00:02:19.390 --> 00:02:23.650
as a point of interest title and
the other as the address.

00:02:23.650 --> 00:02:27.290
Next, we add in UIImageView
to display the photo.

00:02:27.290 --> 00:02:28.650
Now, we create a new class.

00:02:28.650 --> 00:02:30.710
Name this file CustomInfoWindow.

00:02:30.710 --> 00:02:32.090
This creates the matching
header and

00:02:32.090 --> 00:02:33.730
implementation files.

00:02:33.730 --> 00:02:37.270
We add the IB outlets matching
the UILabels and UIImageView

00:02:37.270 --> 00:02:38.990
that we configured in the
Interface build up.

00:02:41.570 --> 00:02:43.440
Back to InfoWindow New File.

00:02:43.440 --> 00:02:45.680
We can now configure the custom
class that this new

00:02:45.680 --> 00:02:47.500
file is going to construct.

00:02:47.500 --> 00:02:49.910
We can wire up the IB outlets
to their matching

00:02:49.910 --> 00:02:51.180
configurations in
the new file.

00:02:53.780 --> 00:02:56.570
And now, going back to our
ViewController, we need to

00:02:56.570 --> 00:02:59.720
make sure this file is acting as
a delegate of our MapView.

00:02:59.720 --> 00:03:02.620
We can do that by declaring
that the ViewController

00:03:02.620 --> 00:03:05.280
conforms to the GMS MapView
delegate protocol,

00:03:05.280 --> 00:03:07.840
MViewController.h.

00:03:07.840 --> 00:03:11.000
Next, we instantiate the
CustomInfoWindow using NS

00:03:11.000 --> 00:03:14.340
bundles, load NIB named
owner option selector.

00:03:14.340 --> 00:03:17.050
And then configure the return
instance with the name of our

00:03:17.050 --> 00:03:19.720
point of interest, along with
the photos we have to really

00:03:19.720 --> 00:03:21.380
show it off.

00:03:21.380 --> 00:03:23.140
So what have we just done?

00:03:23.140 --> 00:03:25.660
We started with the Google Maps
for iOS application with

00:03:25.660 --> 00:03:26.900
a default Marker.

00:03:26.900 --> 00:03:30.140
Then we configured a custom
InfoWindow in Interface

00:03:30.140 --> 00:03:32.700
Builder using a custom
background image and with

00:03:32.700 --> 00:03:35.160
additional information over and
above the default title,

00:03:35.160 --> 00:03:37.860
subtitle combination.

00:03:37.860 --> 00:03:40.850
Finally, we configured our
ViewController to conform with

00:03:40.850 --> 00:03:43.450
our GMSMapViewDelegate
protocol.

00:03:43.450 --> 00:03:46.300
So we could construct the custom
InfoWindow from our new

00:03:46.300 --> 00:03:49.020
file and hand it back to the
MapView when the user taps on

00:03:49.020 --> 00:03:49.970
the Marker.

00:03:49.970 --> 00:03:51.670
I'm hoping this quick
introduction to custom

00:03:51.670 --> 00:03:54.580
InfoWindows has shown you a way
to add personality to your

00:03:54.580 --> 00:03:57.940
iOS application and empower your
users to get the most out

00:03:57.940 --> 00:04:00.370
of your app quickly and
painlessly by presenting

00:04:00.370 --> 00:04:03.060
geographically relevant
information without the need

00:04:03.060 --> 00:04:04.760
to take the user away
from the map.

00:04:04.760 --> 00:04:07.020
If you have any questions about
what we have covered

00:04:07.020 --> 00:04:09.780
here today, please feel free to
reach out to us, either on

00:04:09.780 --> 00:04:12.010
Google+ or on Stack Overflow.

00:04:12.010 --> 00:04:13.260
Thank you very much
for your time.

