WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.000
Now we know how to find positions, sometimes called "indices," in strings.

00:00:05.000 --> 00:00:10.000
What we want to do is chop up those strings into substrings.

00:00:10.000 --> 00:00:13.000
Once I know where the spaces are, I can start splitting a sentence into words.

00:00:13.000 --> 00:00:17.000
The Python syntax for this is to put square brackets after the string,

00:00:17.000 --> 00:00:23.000
and the interpretation is "I want to get this substring that starts at this first number

00:00:23.000 --> 00:00:27.000
and goes up to, but not including, this last number.

00:00:27.000 --> 00:00:32.000
Here if I'm starting at 1 and going up to but not including 2, I'll get the "e" and the "l",

00:00:32.000 --> 00:00:34.000
and that's exactly what we'd get in Python.

00:00:34.000 --> 00:00:38.000
You can also leave out one of these numbers specifiers.

00:00:38.000 --> 00:00:42.000
Leaving it blank means go as far as possible in that direction.

00:00:42.000 --> 00:00:47.000
Here we're starting at position 1 and going all the way to the right so we get "ello."

00:00:47.000 --> 00:00:50.000
Now that we know how to find strings and how to chomp them up,

00:00:50.000 --> 00:00:54.000
let's combine that together and write a Python procedure.

00:00:54.000 --> 00:00:56.000
Let's say that you're given two strings,

00:00:56.000 --> 00:01:01.000
each of which itself contains two words separated by a space.

00:01:01.000 --> 00:01:07.000
These strings might be "bell" space "hooks", "grace" space "hopper", or "alonzo" space "church".

00:01:07.000 --> 00:01:13.000
I'd like you to write a Python procedure called myfirst_yoursecond that takes two arguments,

00:01:13.000 --> 00:01:20.000
p and q, and returns true if the first word in p equals the second word in q.

00:01:20.000 --> 00:01:26.000
For examples, myfirst_yoursecond of "bell hooks" and "curer bell" would return True,

00:01:26.000 --> 00:01:30.000
because the first word here matches up with the second word there.

00:01:30.000 --> 00:01:32.092
Submit it via the interpreter.

