WEBVTT
Kind: captions
Language: en

00:00:12.800 --> 00:00:15.960
Hi everyone and welcome to
today's Google Developers Live

00:00:15.960 --> 00:00:17.500
for Google Drive.

00:00:17.500 --> 00:00:21.140
Today I'm going to relive a
little bit of my former life

00:00:21.140 --> 00:00:24.410
before I was working on Drive
and talk a little bit about

00:00:24.410 --> 00:00:27.350
the Google Apps Marketplace.

00:00:27.350 --> 00:00:30.900
There's a lot of developers who
have been in the Google

00:00:30.900 --> 00:00:33.720
Apps Marketplace for the past
couple of years and who have

00:00:33.720 --> 00:00:36.010
been integrating with Google
Docs using the

00:00:36.010 --> 00:00:38.010
Documents List API.

00:00:38.010 --> 00:00:41.400
And lately just been getting a
lot of questions from those

00:00:41.400 --> 00:00:44.720
developers on how they can take
those applications and

00:00:44.720 --> 00:00:47.910
start leveraging some of
the new features in the

00:00:47.910 --> 00:00:50.410
Google Drive API.

00:00:50.410 --> 00:00:53.320
And it actually turns out it's
pretty easy to get started.

00:00:53.320 --> 00:00:57.050
There are some limitations, a
couple different options, and

00:00:57.050 --> 00:00:58.120
how you can do it.

00:00:58.120 --> 00:01:00.750
So I'm going to go over just
two or three different

00:01:00.750 --> 00:01:04.750
approaches and show how they
work, what the pros and cons

00:01:04.750 --> 00:01:08.050
of the different approaches
are, and where you start

00:01:08.050 --> 00:01:10.900
running into limitations.

00:01:10.900 --> 00:01:14.010
So anyway, for those who are not
familiar with the Google

00:01:14.010 --> 00:01:18.090
Apps Marketplace, it's an
enterprise storefront really

00:01:18.090 --> 00:01:19.460
designed for small businesses.

00:01:19.460 --> 00:01:24.010
But it's where developers can
register their applications.

00:01:24.010 --> 00:01:28.650
And domain administrators for
Google Apps can go and install

00:01:28.650 --> 00:01:33.490
those applications for all of
the users on their domain.

00:01:33.490 --> 00:01:35.910
It's been around for
a few years.

00:01:35.910 --> 00:01:39.500
Some really great applications
in there and more still keep

00:01:39.500 --> 00:01:41.410
coming on every day.

00:01:41.410 --> 00:01:43.940
But when it was written, it was
actually done pre-Drive.

00:01:43.940 --> 00:01:46.860
It was actually when Drive was
still referred to as Google

00:01:46.860 --> 00:01:52.410
Docs and documentation and
everything is still really

00:01:52.410 --> 00:01:56.440
geared towards the older
API, some of the older

00:01:56.440 --> 00:01:59.890
authentication mechanisms
like OAuth1 instead of

00:01:59.890 --> 00:02:02.890
OAuth2 and so on.

00:02:02.890 --> 00:02:05.000
It creates a little bit of
confusion about how you can

00:02:05.000 --> 00:02:08.789
use some of the newer APIs that
Google is doing with the

00:02:08.789 --> 00:02:11.230
enterprise storefront.

00:02:11.230 --> 00:02:15.070
So I want to go into our
developer console for the

00:02:15.070 --> 00:02:16.320
marketplace here.

00:02:18.970 --> 00:02:20.790
I already created this
app a while back.

00:02:20.790 --> 00:02:23.000
It's called GDL Test.

00:02:23.000 --> 00:02:30.190
And I'll just go in and
edit this listing.

00:02:30.190 --> 00:02:34.910
Actually, you're already created
here for using the

00:02:34.910 --> 00:02:36.880
Google Doc List API.

00:02:36.880 --> 00:02:41.295
So I actually have the
scope reference here.

00:02:41.295 --> 00:02:42.620
It might be a little
hard to see.

00:02:42.620 --> 00:02:45.030
I'll make it a little
bit bigger if I can.

00:02:45.030 --> 00:02:48.150
So you see the scope
ref doc list.

00:02:48.150 --> 00:02:51.030
And this is just the old
Google Docs feed.

00:02:51.030 --> 00:02:55.540
And here in my test domain, I
have this Apps Rocks domain.

00:02:55.540 --> 00:02:58.650
And I have this app
already installed.

00:02:58.650 --> 00:03:00.200
I have a really simple test
application here.

00:03:00.200 --> 00:03:02.610
It's just a little bit of a
command line application using

00:03:02.610 --> 00:03:05.120
the Ruby client.

00:03:05.120 --> 00:03:10.780
What this has in here is just
our Client ID and Secret.

00:03:10.780 --> 00:03:13.260
We're using two-legged OAuth1.

00:03:13.260 --> 00:03:17.740
And I'm just going to do a
request for the Documents List

00:03:17.740 --> 00:03:22.590
API impersonating a user using
XOAuth Requestor ID.

00:03:22.590 --> 00:03:26.360
And then print out
the results.

00:03:26.360 --> 00:03:28.080
And life is good.

00:03:28.080 --> 00:03:29.230
So we see the results.

00:03:29.230 --> 00:03:30.910
Not really worried about
formatting any of this.

00:03:30.910 --> 00:03:32.850
It's really just to see, are
we getting back a valid

00:03:32.850 --> 00:03:35.450
response or not?

00:03:35.450 --> 00:03:37.330
So basically all that we just
showed is that Marketplace

00:03:37.330 --> 00:03:39.550
apps work with the Documents
List API.

00:03:39.550 --> 00:03:41.400
That's something that
we already knew.

00:03:41.400 --> 00:03:49.010
So what happens when we switch
over and instead of using the

00:03:49.010 --> 00:03:50.940
Documents List API, we
actually just go

00:03:50.940 --> 00:03:53.310
and use Drive API?

00:04:02.320 --> 00:04:09.620
And in this case what we
actually get back is a result.

00:04:09.620 --> 00:04:14.700
It wasn't actually a
result I expected.

00:04:14.700 --> 00:04:16.560
Let me go and do one
other thing.

00:04:16.560 --> 00:04:16.829
Actually, no.

00:04:16.829 --> 00:04:18.079
That is correct.

00:04:20.290 --> 00:04:23.900
Basically what the point is,
is it actually just works.

00:04:23.900 --> 00:04:28.050
And the reason this works is
really for one simple reason,

00:04:28.050 --> 00:04:31.970
which is the Documents Lists
scope is actually respected by

00:04:31.970 --> 00:04:34.250
the Drive API.

00:04:34.250 --> 00:04:38.460
And it's treated as equivalent
to the full Drive scope.

00:04:38.460 --> 00:04:39.380
There are a couple catches.

00:04:39.380 --> 00:04:42.810
A couple things I want to point
out in how I actually

00:04:42.810 --> 00:04:43.850
set this up here.

00:04:43.850 --> 00:04:49.050
So one is, I want to go back
to our Google Apps

00:04:49.050 --> 00:04:49.970
Marketplace.

00:04:49.970 --> 00:04:51.220
Go to our vendor profile.

00:04:57.120 --> 00:05:00.390
And there's a couple things
you can see here.

00:05:00.390 --> 00:05:03.880
In our console for the
Marketplace, there's a link

00:05:03.880 --> 00:05:06.810
underneath each application,
which says, register for

00:05:06.810 --> 00:05:08.790
additional APIs.

00:05:08.790 --> 00:05:09.950
What that will do--

00:05:09.950 --> 00:05:11.620
let's close that other one--

00:05:11.620 --> 00:05:16.370
is take us to a version of the
Google API console that is

00:05:16.370 --> 00:05:18.930
tied to our Marketplace app.

00:05:18.930 --> 00:05:21.340
And what we can do is that for
the Marketplace, we can then

00:05:21.340 --> 00:05:23.220
go and turn on different
services such

00:05:23.220 --> 00:05:26.220
as the Drive API.

00:05:26.220 --> 00:05:28.850
There's one other thing though
that has to happen for this to

00:05:28.850 --> 00:05:33.080
work reliably, which
is the API key.

00:05:33.080 --> 00:05:36.780
Normally, the API key is
something you would only use

00:05:36.780 --> 00:05:40.920
in the context of
unauthenticated API requests.

00:05:40.920 --> 00:05:44.980
So if you're using some of the
APIs which aren't necessarily

00:05:44.980 --> 00:05:49.690
tied to user data but still we
need to be tied to an API

00:05:49.690 --> 00:05:53.850
project, you would use the API
key as a way to link any of

00:05:53.850 --> 00:05:56.480
those API calls to
your specific

00:05:56.480 --> 00:05:58.930
instance of the console.

00:05:58.930 --> 00:06:01.740
And this is used for quota
enforcement, for reporting,

00:06:01.740 --> 00:06:02.990
and various other features.

00:06:09.650 --> 00:06:14.480
Normally, if you're using
authenticated request, this is

00:06:14.480 --> 00:06:17.390
automatically done for you
by virtue of your OAuth

00:06:17.390 --> 00:06:19.110
credentials.

00:06:19.110 --> 00:06:21.070
So when you authenticate a
user, you have a token.

00:06:21.070 --> 00:06:23.790
That token is bound to
your application.

00:06:23.790 --> 00:06:26.590
And also, of course, bound to
your API console projects so

00:06:26.590 --> 00:06:28.770
we can track quota.

00:06:28.770 --> 00:06:30.880
For the Marketplace, due to
the way that the keys are

00:06:30.880 --> 00:06:33.800
generated for your application,
that binding

00:06:33.800 --> 00:06:35.860
isn't really there.

00:06:35.860 --> 00:06:39.620
What you need to do in the case
of a Marketplace app-- in

00:06:39.620 --> 00:06:44.680
addition to signing your request
with your application

00:06:44.680 --> 00:06:46.630
client key and Secret--

00:06:46.630 --> 00:06:51.150
you also need to set
the API key.

00:06:51.150 --> 00:06:53.350
Most of the client libraries,
this is pretty easy.

00:06:53.350 --> 00:06:55.880
In the case of Ruby, for
example, we just do this once

00:06:55.880 --> 00:06:58.390
when we create the client.

00:06:58.390 --> 00:07:00.040
So even though we're still
doing an authenticator

00:07:00.040 --> 00:07:02.270
request, we're still signing
with our apps credential, we

00:07:02.270 --> 00:07:05.350
still need this one additional
bit of information to make

00:07:05.350 --> 00:07:09.090
sure that we had that correct
binding to our application.

00:07:09.090 --> 00:07:12.250
The upshot of that is we do
actually get reporting.

00:07:12.250 --> 00:07:15.140
You can see here's a request
we just made today.

00:07:15.140 --> 00:07:16.060
We get quota enforcement.

00:07:16.060 --> 00:07:19.110
It makes it a little bit
easier for us if your

00:07:19.110 --> 00:07:22.850
application uses a lot
of API quota and you

00:07:22.850 --> 00:07:24.430
need additional traffic.

00:07:24.430 --> 00:07:26.240
You need additional QPS.

00:07:26.240 --> 00:07:29.700
We can actually set those
for your project.

00:07:29.700 --> 00:07:31.770
If you don't do that, what ends
up happening is you end

00:07:31.770 --> 00:07:37.650
up falling into a generic bucket
of quota, which then

00:07:37.650 --> 00:07:39.360
makes it a little bit more
unpredictable for your

00:07:39.360 --> 00:07:41.930
application.

00:07:41.930 --> 00:07:43.800
So that's really the easiest
way that you can actually

00:07:43.800 --> 00:07:47.920
start using the Drive
API features.

00:07:47.920 --> 00:07:50.540
One of the other things that
people have tried--

00:07:50.540 --> 00:07:53.790
I'm actually going to show
you what happens.

00:07:53.790 --> 00:07:56.900
I'm going to go and
edit this listing.

00:07:56.900 --> 00:07:59.565
And I have another
scope in here.

00:07:59.565 --> 00:08:01.310
I already put this in
a little earlier.

00:08:01.310 --> 00:08:05.670
But I put in a scope
for the Drive, the

00:08:05.670 --> 00:08:07.310
new Drive scope here.

00:08:07.310 --> 00:08:10.110
So you see it's little bit
different the new format.

00:08:10.110 --> 00:08:13.376
googleapis.com/auth/drive.

00:08:13.376 --> 00:08:16.010
It's a little bit different
than the old Docs one.

00:08:16.010 --> 00:08:21.740
And I'm going to go and change
this reference here to Drive.

00:08:27.200 --> 00:08:29.280
And it'll save that.

00:08:29.280 --> 00:08:31.780
I want to show you
what happens.

00:08:31.780 --> 00:08:35.799
What ends up happening is a
little bit of UI issue.

00:08:35.799 --> 00:08:36.770
This will actually work.

00:08:36.770 --> 00:08:41.339
So if I go back and try
this, I'll actually

00:08:41.339 --> 00:08:42.760
get back a 200 response.

00:08:42.760 --> 00:08:44.120
So everything is fine.

00:08:44.120 --> 00:08:45.790
So 200.

00:08:45.790 --> 00:08:47.040
That's good.

00:08:50.330 --> 00:08:52.970
But here what we lose--

00:08:52.970 --> 00:08:56.730
instead of having that really
nice human friendly text that

00:08:56.730 --> 00:08:59.750
says, integrates with
Google Docs, we

00:08:59.750 --> 00:09:01.410
just get the raw scope.

00:09:01.410 --> 00:09:03.500
And this is just mostly
a bug on our side.

00:09:03.500 --> 00:09:06.950
There is a feature request to
update the Marketplace to have

00:09:06.950 --> 00:09:09.040
all the latest scopes.

00:09:09.040 --> 00:09:12.170
So while this will technically
work, it loses some of the

00:09:12.170 --> 00:09:15.990
features in terms of
the presentation.

00:09:15.990 --> 00:09:19.980
And it also means that-- let's
make this a little smaller--

00:09:19.980 --> 00:09:25.180
when you do things like
searching the Marketplace,

00:09:25.180 --> 00:09:27.980
there are some features here
for where you could filter

00:09:27.980 --> 00:09:31.330
application based on the
type of integration.

00:09:31.330 --> 00:09:34.020
Applications that are using the
Drive scopes are not going

00:09:34.020 --> 00:09:35.610
to show up correctly
in this filter.

00:09:35.610 --> 00:09:40.480
So while maybe your first
instinct is to, well I'm just

00:09:40.480 --> 00:09:42.340
going to end up using the Drive
API, let's use the Drive

00:09:42.340 --> 00:09:45.080
scope, you do miss out on
a lot of the Marketplace

00:09:45.080 --> 00:09:49.150
features in terms of the
benefits for discoverability

00:09:49.150 --> 00:09:50.460
of your application.

00:09:50.460 --> 00:09:55.330
So really the trick to doing
this is use the old Documents

00:09:55.330 --> 00:09:59.420
Lists scope but use the new
API so that you get the

00:09:59.420 --> 00:10:03.570
simplicity of the API, the more
efficient wire protocols,

00:10:03.570 --> 00:10:06.120
and of course some of the new
features that are coming out,

00:10:06.120 --> 00:10:09.440
that we have in our early
access program that we

00:10:09.440 --> 00:10:12.840
announced about a
week or two ago.

00:10:15.920 --> 00:10:21.360
There's one other thing that
comes up in part of this.

00:10:21.360 --> 00:10:25.490
Those who have been building
newer Drive applications are

00:10:25.490 --> 00:10:29.050
probably familiar with what we
have in the Chrome Web Store,

00:10:29.050 --> 00:10:32.090
which is these applications.

00:10:32.090 --> 00:10:35.130
And one feature we've been
promoting is the ability for

00:10:35.130 --> 00:10:40.290
applications to hook into the
new UI for Drive, to be in the

00:10:40.290 --> 00:10:44.220
Create menu, to be able to open
files from the Explorer.

00:10:44.220 --> 00:10:47.120
In fact, there was an
announcement earlier today

00:10:47.120 --> 00:10:49.750
about how that experience has
changed to really help promote

00:10:49.750 --> 00:10:52.880
third party applications, make
that experience of connecting

00:10:52.880 --> 00:10:55.590
apps much better.

00:10:55.590 --> 00:10:58.130
And as part of this, we have
two different ways that

00:10:58.130 --> 00:11:00.500
applications can get installed
into Drive.

00:11:00.500 --> 00:11:02.920
One is via the Chrome
Web Store.

00:11:02.920 --> 00:11:05.600
And the other is via
an OAuth scope.

00:11:05.600 --> 00:11:08.910
So there's a scope,
Drive.install, which does the

00:11:08.910 --> 00:11:12.380
same thing that you would have
if you installed via the

00:11:12.380 --> 00:11:15.220
Chrome Web Store of
having that app

00:11:15.220 --> 00:11:18.860
appear in Google Drive.

00:11:18.860 --> 00:11:21.200
So of course then the question
is, well can you do this from

00:11:21.200 --> 00:11:22.530
the Apps Marketplace?

00:11:22.530 --> 00:11:26.975
So if, for example, we were to
go into our app settings.

00:11:30.440 --> 00:11:32.316
Here we have these different
scopes, you

00:11:32.316 --> 00:11:33.980
have a Drives scope.

00:11:33.980 --> 00:11:39.190
If I were to add a Drive.install
scope and then

00:11:39.190 --> 00:11:44.740
include that into our app, the
question is, would that

00:11:44.740 --> 00:11:47.480
actually work?

00:11:47.480 --> 00:11:51.660
And unfortunately the answer
to that is, no it doesn't.

00:11:51.660 --> 00:11:55.400
Due to the way that that scope
is enforced and checked, it

00:11:55.400 --> 00:11:58.230
only works when it's actually a
grant to an individual user,

00:11:58.230 --> 00:11:59.620
not when it's a domain-wide
grant.

00:12:02.570 --> 00:12:06.855
There are some things you can
do as a hybrid model if you

00:12:06.855 --> 00:12:10.160
are an application which is in
the Google Apps Marketplace

00:12:10.160 --> 00:12:13.540
and you really love those
features of being able to do

00:12:13.540 --> 00:12:15.550
these domain-wide might
authorizations, but you still

00:12:15.550 --> 00:12:18.630
want get that UI integration.

00:12:18.630 --> 00:12:19.950
Just do a hybrid model.

00:12:19.950 --> 00:12:21.920
So you can have the domain
administrator

00:12:21.920 --> 00:12:22.820
install your app.

00:12:22.820 --> 00:12:28.060
That gives you data access for
all the users on the domain.

00:12:28.060 --> 00:12:31.300
But then as they become users of
your application, just have

00:12:31.300 --> 00:12:36.560
an upsell or some other
promotion within the

00:12:36.560 --> 00:12:40.330
application to say-- hey, not
only can you use our app here,

00:12:40.330 --> 00:12:42.490
but you can get all these really
cool other features

00:12:42.490 --> 00:12:44.750
like appearing in the
Drive UI so you

00:12:44.750 --> 00:12:46.920
can create docs directly.

00:12:46.920 --> 00:12:50.800
Or open our application
from within Drive.

00:12:50.800 --> 00:12:52.890
Click here to install
that extension.

00:12:52.890 --> 00:12:58.150
Then you could either use the
OAuth, the Drive.install scope

00:12:58.150 --> 00:12:59.630
to connect that application.

00:12:59.630 --> 00:13:03.470
Or point them to the Chrome
Web Store instead.

00:13:03.470 --> 00:13:07.970
So a couple different options
for how you can do that.

00:13:07.970 --> 00:13:12.740
Honestly, it's not nearly
as polished as I

00:13:12.740 --> 00:13:14.020
would like it to be.

00:13:14.020 --> 00:13:15.870
There are things that we're
looking at to make this

00:13:15.870 --> 00:13:17.900
experience a lot better.

00:13:17.900 --> 00:13:21.400
But a lot of interest in having
those domain-wide

00:13:21.400 --> 00:13:25.100
deployment features combined
with some of the new things

00:13:25.100 --> 00:13:26.940
have been happening in the
Chrome Web Store are something

00:13:26.940 --> 00:13:28.310
that we're looking at.

00:13:28.310 --> 00:13:31.220
But it's just not
available today.

00:13:31.220 --> 00:13:33.430
But the good news is that, if
you are in the Google Apps

00:13:33.430 --> 00:13:36.230
Marketplace, and you have an
existing Docs integration,

00:13:36.230 --> 00:13:40.210
there's really no reason why you
shouldn't start looking at

00:13:40.210 --> 00:13:42.680
migrating to the
new Drive API.

00:13:42.680 --> 00:13:46.330
You can still leverage the
two-legged OAuth and the

00:13:46.330 --> 00:13:48.850
domain-wide grants that
you have today.

00:13:48.850 --> 00:13:51.100
You just need to do a little
bit of work just to enable

00:13:51.100 --> 00:13:53.190
that project, use the API key.

00:13:53.190 --> 00:13:56.070
And then you can start using the
Drive API and any of the

00:13:56.070 --> 00:13:58.800
new features that
are in there.

00:13:58.800 --> 00:14:00.320
So that's really it.

00:14:00.320 --> 00:14:02.820
It's something that, a lot of
questions from developers but

00:14:02.820 --> 00:14:06.080
turns out to be really
simple to do.

00:14:06.080 --> 00:14:10.780
And other than that, I think
that's all for today.

00:14:10.780 --> 00:14:14.160
If there's any questions,
certainly feel free to ask on

00:14:14.160 --> 00:14:20.030
the Google Drive Developers
community, Stack Overflow, or

00:14:20.030 --> 00:14:20.930
find me on Google+.

00:14:20.930 --> 00:14:22.230
Just send me a note.

00:14:22.230 --> 00:14:23.680
I'll be happy to help.

00:14:23.680 --> 00:14:27.190
Other than that, stay tuned
for next week's Google

00:14:27.190 --> 00:14:28.550
Developers Live.

00:14:28.550 --> 00:14:28.840
Great.

00:14:28.840 --> 00:14:30.090
Thanks.

