WEBVTT
Kind: captions
Language: en

00:00:02.964 --> 00:00:04.440
NABIL NAGHDY: Hi, everyone.

00:00:04.440 --> 00:00:05.680
My name is Nabil Naghdy.

00:00:05.680 --> 00:00:08.170
I'm the product manager on
the Google Maps API.

00:00:08.170 --> 00:00:09.550
JOSH LIVNI: And my name
is Josh Livni.

00:00:09.550 --> 00:00:11.970
I'm on the Maps Developer
Relations Team.

00:00:11.970 --> 00:00:14.240
NABIL NAGHDY: So today, what we
wanted to talk to you about

00:00:14.240 --> 00:00:17.270
was what you can do that's
more than just a map.

00:00:17.270 --> 00:00:20.350
So today, there are over 800,000
sites that utilize the

00:00:20.350 --> 00:00:21.720
Google Maps API.

00:00:21.720 --> 00:00:25.970
And each one of them tries to
tell a special story, tries to

00:00:25.970 --> 00:00:28.255
give the user a context
of where they are or

00:00:28.255 --> 00:00:29.530
what they're doing.

00:00:29.530 --> 00:00:33.570
Unfortunately, the majority of
these maps have got the iconic

00:00:33.570 --> 00:00:37.435
red pin and stick it on a
map and say, I'm done.

00:00:37.435 --> 00:00:38.350
Let's pack it up.

00:00:38.350 --> 00:00:40.270
That's it, finished.

00:00:40.270 --> 00:00:44.970
Whereas, there's so much more
you can add to a map to give

00:00:44.970 --> 00:00:47.960
it extra context, to give it
more meaning and make a much

00:00:47.960 --> 00:00:50.030
richer experience
for the users.

00:00:50.030 --> 00:00:51.590
So what we're going to talk
about today, in this session,

00:00:51.590 --> 00:00:53.690
is what are some of these
features, and how can they

00:00:53.690 --> 00:00:55.490
relate to your site.

00:00:55.490 --> 00:01:01.620
So what we'll do is we'll
start in 2005.

00:01:01.620 --> 00:01:03.960
For those that came to the
session earlier, it's a little

00:01:03.960 --> 00:01:05.340
bit of a history repeating
itself.

00:01:05.340 --> 00:01:12.380
But what we have is, pre-2005,
the way you navigated a map

00:01:12.380 --> 00:01:15.780
was you saw a static image
that was there for you.

00:01:15.780 --> 00:01:18.200
And you pressed the
Right Arrow.

00:01:18.200 --> 00:01:20.740
And the page would refresh, and
you'd get another image

00:01:20.740 --> 00:01:22.220
that was slightly
to the right.

00:01:22.220 --> 00:01:23.810
And that was pretty much it.

00:01:23.810 --> 00:01:30.700
In 2005, Google launched
Google Maps.

00:01:30.700 --> 00:01:32.500
For those that remember,
you take your mouse.

00:01:32.500 --> 00:01:33.290
You put it on the map.

00:01:33.290 --> 00:01:34.840
And you kind of double click.

00:01:34.840 --> 00:01:35.500
It zooms in.

00:01:35.500 --> 00:01:36.820
You're like, oh, that's
pretty cool.

00:01:36.820 --> 00:01:37.310
I'm zooming in.

00:01:37.310 --> 00:01:39.900
And then you move
the map around.

00:01:39.900 --> 00:01:43.640
And you're like, wow,
the map is dynamic?

00:01:43.640 --> 00:01:47.580
And it kind of changed the way
in which we interact with the

00:01:47.580 --> 00:01:49.990
website, with a map,
specifically.

00:01:49.990 --> 00:01:52.110
So this was the first time
that AJAX was actually

00:01:52.110 --> 00:01:54.110
properly used on
a grand scale.

00:01:54.110 --> 00:01:56.730
So the way that Google did this
was by pre-rendering all

00:01:56.730 --> 00:01:59.660
the map tiles and then loading
them behind the scenes, so

00:01:59.660 --> 00:02:01.760
that when you moved the map
around, it would just pull

00:02:01.760 --> 00:02:03.300
that image and put it there.

00:02:03.300 --> 00:02:07.770
So this was pretty revolutionary
in 2005.

00:02:07.770 --> 00:02:10.419
A lot of people who saw
this thought, wow,

00:02:10.419 --> 00:02:11.380
this is pretty cool.

00:02:11.380 --> 00:02:14.205
What can I do to build
on top of this?

00:02:14.205 --> 00:02:14.950
JOSH LIVNI: Yeah.

00:02:14.950 --> 00:02:18.830
So a bunch of folks thought it
was amazing and immediately

00:02:18.830 --> 00:02:20.920
started reverse-engineering
the JavaScript, trying to

00:02:20.920 --> 00:02:23.620
figure out what was this
cross-domain stuff, how do we

00:02:23.620 --> 00:02:25.200
sort of take control
of this map, put

00:02:25.200 --> 00:02:26.070
our own data on there.

00:02:26.070 --> 00:02:27.810
It was very exciting
to people.

00:02:27.810 --> 00:02:32.180
The first mash-up was
the housingmaps.com.

00:02:32.180 --> 00:02:35.430
It's still around, a pretty
venerable site.

00:02:35.430 --> 00:02:38.390
It still looks a bit like it did
when it first launched, a

00:02:38.390 --> 00:02:40.380
few changes, since it's
using the Maps API V2.

00:02:40.380 --> 00:02:42.870
But it's important to remember
this was originally built

00:02:42.870 --> 00:02:44.040
before there was an API.

00:02:44.040 --> 00:02:48.330
It kind of instigated web APIs
as we know them today, mashups

00:02:48.330 --> 00:02:49.680
as we know them today.

00:02:49.680 --> 00:02:54.650
And really a lot of maps today
have a very similar story as

00:02:54.650 --> 00:02:57.540
what we have right here, which
is, you have some data.

00:02:57.540 --> 00:02:59.050
Maybe it's 10 points.

00:02:59.050 --> 00:02:59.515
Maybe it's 10,000.

00:02:59.515 --> 00:03:00.940
Maybe it's a couple million.

00:03:00.940 --> 00:03:03.300
You're trying to display a
subset of them on a map so

00:03:03.300 --> 00:03:04.500
people can interact with them.

00:03:04.500 --> 00:03:07.780
And you end up with this kind
of a thing here, which is--

00:03:07.780 --> 00:03:09.985
in this case, it's some
Craigslist data.

00:03:09.985 --> 00:03:12.290
NABIL NAGHDY: So basically,
you've got a whole bunch of

00:03:12.290 --> 00:03:14.150
cities where Craigslist
has property.

00:03:14.150 --> 00:03:16.430
You have things like filters
for pricing and any other

00:03:16.430 --> 00:03:19.410
information, really easy to
use, easy to navigate.

00:03:19.410 --> 00:03:22.260
When you click on a pin, a
little pop up comes up with

00:03:22.260 --> 00:03:24.150
pictures or any information
relevant to

00:03:24.150 --> 00:03:25.330
that specific property.

00:03:25.330 --> 00:03:28.766
So that was really awesome and
innovative, for its time.

00:03:28.766 --> 00:03:29.480
JOSH LIVNI: Yeah.

00:03:29.480 --> 00:03:33.240
And again, this is a common
story that a lot of people

00:03:33.240 --> 00:03:34.410
want to be able to--

00:03:34.410 --> 00:03:36.520
I should click out of this
IFrame here-- a lot of people

00:03:36.520 --> 00:03:38.310
want to be able to repeat.

00:03:38.310 --> 00:03:40.610
And so, in order to think about
how would you rebuild

00:03:40.610 --> 00:03:42.270
this type of thing today, let's
take a look what's,

00:03:42.270 --> 00:03:43.710
first of all, changed in
the infrastructure.

00:03:43.710 --> 00:03:46.950
If that's what you could do
seven years ago, when we had

00:03:46.950 --> 00:03:50.430
basically one set of data, we'd
pre-render some tiles,

00:03:50.430 --> 00:03:53.350
let's see what's a little
bit different today.

00:03:53.350 --> 00:03:54.980
This is a very, very
simplified diagram.

00:03:54.980 --> 00:03:56.510
You can imagine we have
more complex ones.

00:03:56.510 --> 00:03:58.140
But the general story here is--
first of all, we have a

00:03:58.140 --> 00:03:58.830
lot more data.

00:03:58.830 --> 00:04:01.640
If you're looking up at the big
kind of gray box, we have

00:04:01.640 --> 00:04:02.320
the imagery.

00:04:02.320 --> 00:04:05.530
That was added a year
after, in 2006.

00:04:05.530 --> 00:04:06.790
Then we have a bunch
of satellite data.

00:04:06.790 --> 00:04:08.060
And we have a ton of imagery.

00:04:08.060 --> 00:04:10.760
We have, in this kind of little
bucket here, over 20

00:04:10.760 --> 00:04:12.530
petabytes of imagery
from various

00:04:12.530 --> 00:04:13.650
different data sources.

00:04:13.650 --> 00:04:15.360
That's a lot.

00:04:15.360 --> 00:04:17.459
We have some other data we
throw on top of there.

00:04:17.459 --> 00:04:18.570
Maybe it's like a
cycling layer.

00:04:18.570 --> 00:04:21.320
Maybe it's live traffic coming
in from a bunch of different

00:04:21.320 --> 00:04:22.210
data sources.

00:04:22.210 --> 00:04:23.490
We have a lot more
places today.

00:04:23.490 --> 00:04:24.950
We have over 80 million
places.

00:04:24.950 --> 00:04:28.340
Again, kind of give you some
extra context of what's going

00:04:28.340 --> 00:04:30.610
on around you, with
establishments and other types

00:04:30.610 --> 00:04:33.280
of things, like landmarks
and so forth.

00:04:33.280 --> 00:04:36.310
And then we have kind
of the main feature,

00:04:36.310 --> 00:04:37.630
which is the roadmap.

00:04:37.630 --> 00:04:39.480
And a ton of stuff has
changed there.

00:04:39.480 --> 00:04:41.560
We're not going to go in too
much detail here, except to

00:04:41.560 --> 00:04:44.280
say, the major things that have
changed is, one, there's

00:04:44.280 --> 00:04:46.380
this kind of feedback loop
that's just much faster.

00:04:46.380 --> 00:04:48.470
First of all, you can
report problems.

00:04:48.470 --> 00:04:49.740
We'll take a look.

00:04:49.740 --> 00:04:53.520
You can edit the map directly
at Map Maker.

00:04:53.520 --> 00:04:56.820
Once that edit has been
moderated, sometimes they're

00:04:56.820 --> 00:04:57.620
automatically approved.

00:04:57.620 --> 00:04:59.850
Simple edit, and we trust you,
for various reasons, like

00:04:59.850 --> 00:05:01.870
you've made previously
good edits.

00:05:01.870 --> 00:05:03.100
And then those go live.

00:05:03.100 --> 00:05:06.410
And a matter of minutes later,
it'll be globally distributed.

00:05:06.410 --> 00:05:08.950
And then, finally, we custom
push out the tiles to you now.

00:05:08.950 --> 00:05:11.990
So if you remember back seven
years ago, we kind of scoffed

00:05:11.990 --> 00:05:14.750
at that idea that you click
Right and then it renders a

00:05:14.750 --> 00:05:16.990
Map View, and 10 seconds
later you have one.

00:05:16.990 --> 00:05:21.830
Now, you make a change to the
style of your map or add some

00:05:21.830 --> 00:05:25.470
layer, and you hit a little
button in JavaScript, and 10

00:05:25.470 --> 00:05:27.640
milliseconds later, you have
a bunch of tiles that are

00:05:27.640 --> 00:05:29.360
custom-generated just for
you, [? appropriate ?]

00:05:29.360 --> 00:05:30.070
language and so forth.

00:05:30.070 --> 00:05:31.400
NABIL NAGHDY: It's
really powerful.

00:05:31.400 --> 00:05:34.090
It's a really strong way to
display all this imagery.

00:05:34.090 --> 00:05:35.560
And it's incredibly fast.

00:05:35.560 --> 00:05:39.390
So looking at what the current
architecture is, how would we

00:05:39.390 --> 00:05:40.500
go about creating--

00:05:40.500 --> 00:05:42.080
in this example, for today,
we'll look at

00:05:42.080 --> 00:05:43.340
a real estate site.

00:05:43.340 --> 00:05:45.000
And so what would be
the simplest way

00:05:45.000 --> 00:05:46.090
for you to do that?

00:05:46.090 --> 00:05:48.720
And what are the different ways
in which we can use the

00:05:48.720 --> 00:05:53.580
different features of the Maps
API Suite to enhance the real

00:05:53.580 --> 00:05:55.470
estate platform, on top of what
we've seen, from what

00:05:55.470 --> 00:05:57.150
HousingMaps did?

00:05:57.150 --> 00:05:59.730
JOSH LIVNI: So again, this is
a really common problem,

00:05:59.730 --> 00:06:01.260
applies to a ton of different
verticals.

00:06:01.260 --> 00:06:03.840
Maybe you're looking for
ski resorts in Tahoe.

00:06:03.840 --> 00:06:06.480
You could be looking for local
soccer fields or burrito

00:06:06.480 --> 00:06:07.980
places in San Francisco.

00:06:07.980 --> 00:06:10.160
Or you have a chain of hotels,
or what have you.

00:06:10.160 --> 00:06:13.970
We're going to do the kind of
HousingMaps example here, with

00:06:13.970 --> 00:06:15.210
the real estate sites.

00:06:15.210 --> 00:06:18.400
But this Store Locator, as you
could imagine, applies well to

00:06:18.400 --> 00:06:19.780
someone with a bunch
of stores.

00:06:19.780 --> 00:06:21.200
And it solves the same
kind of problem.

00:06:21.200 --> 00:06:22.260
I have a bunch of points.

00:06:22.260 --> 00:06:26.110
I want to allow people to be
able to find what's around me,

00:06:26.110 --> 00:06:27.600
as I say, the closest store.

00:06:27.600 --> 00:06:29.870
And this library is a third
party library, put together by

00:06:29.870 --> 00:06:31.710
my colleague Chris Broadfoot.

00:06:31.710 --> 00:06:34.710
It's available at
storelocator.googlecode.com.

00:06:34.710 --> 00:06:36.240
So it's just an open
source library.

00:06:36.240 --> 00:06:38.330
I'm just mentioning it here as
a really great way to kind of

00:06:38.330 --> 00:06:39.690
bootstrap the site.

00:06:39.690 --> 00:06:41.740
So you don't have to write all
of this code from scratch.

00:06:41.740 --> 00:06:43.580
If you have this general
problem, you've got a bunch of

00:06:43.580 --> 00:06:45.700
points, you want people to be
able to say, here's where I

00:06:45.700 --> 00:06:48.370
am, What's around me, and a
bunch of extra stuff we're

00:06:48.370 --> 00:06:50.630
going to do in a minute, it's a
really great library to get

00:06:50.630 --> 00:06:51.610
started with.

00:06:51.610 --> 00:06:53.285
So we're going to show you
a few features of that.

00:06:53.285 --> 00:06:55.690
I first just want to point out
that it's got great reference

00:06:55.690 --> 00:06:56.620
documentation.

00:06:56.620 --> 00:06:58.890
It just works really nicely,
a bunch of great features.

00:06:58.890 --> 00:07:02.900
We're going to talk about a few
of them right now, with

00:07:02.900 --> 00:07:03.740
our House Locator.

00:07:03.740 --> 00:07:06.440
NABIL NAGHDY: So when you import
your data, which we'll

00:07:06.440 --> 00:07:09.550
talk about in a second, you
get an awesome experience,

00:07:09.550 --> 00:07:10.530
right off the bat.

00:07:10.530 --> 00:07:12.200
So as you can see,
we've got all the

00:07:12.200 --> 00:07:13.240
markers that we've imported.

00:07:13.240 --> 00:07:15.360
We've got about two and a half
thousand different houses we

00:07:15.360 --> 00:07:18.120
got from the King County
government, from their

00:07:18.120 --> 00:07:19.660
property sales data.

00:07:19.660 --> 00:07:23.740
So what is already built into
the store locator is the

00:07:23.740 --> 00:07:25.880
ability to search for
a specific location.

00:07:25.880 --> 00:07:28.350
So let's say Google
in Kirkland.

00:07:28.350 --> 00:07:29.260
We have a Kirkland office.

00:07:29.260 --> 00:07:32.000
So as you can see, there
was autocomplete there.

00:07:32.000 --> 00:07:36.830
And what it's done is, it's
re-framed our map to center on

00:07:36.830 --> 00:07:39.820
Google Kirkland and then
reordered all the properties

00:07:39.820 --> 00:07:44.300
or all the pins to basically
sort by distance, away from

00:07:44.300 --> 00:07:44.900
the location.

00:07:44.900 --> 00:07:47.390
So let's change it to Google
Fremont, which is our other

00:07:47.390 --> 00:07:48.520
office in Seattle.

00:07:48.520 --> 00:07:53.260
And we can see that all the pins
have been reordered, as

00:07:53.260 --> 00:07:54.540
you can see on the map.

00:07:54.540 --> 00:07:55.510
So it's really powerful.

00:07:55.510 --> 00:07:58.540
The other thing that's also
available that comes for free

00:07:58.540 --> 00:08:01.930
in the Store Locator, built
in, is a global filter.

00:08:01.930 --> 00:08:05.040
So you can set any variable
to be filtered.

00:08:05.040 --> 00:08:08.050
In this instance, because
Seattle is unbearably cold,

00:08:08.050 --> 00:08:10.160
we've decided to include
a fireplace.

00:08:10.160 --> 00:08:12.770
So if you click on fireplace,
it filters out all the

00:08:12.770 --> 00:08:15.255
properties that don't have a
fireplace with the ones that

00:08:15.255 --> 00:08:16.700
do, and displays them
on the map.

00:08:16.700 --> 00:08:22.340
In the same way, if you're a ski
resort site, you can say,

00:08:22.340 --> 00:08:25.260
which ski fields have got
specialized for snowboarding.

00:08:25.260 --> 00:08:27.260
Or there's so many
ways in which you

00:08:27.260 --> 00:08:28.500
can use these variables.

00:08:28.500 --> 00:08:31.070
And it's all pretty much
part and parcel

00:08:31.070 --> 00:08:32.229
of the Store Locator.

00:08:32.229 --> 00:08:33.169
JOSH LIVNI: All right.

00:08:33.169 --> 00:08:35.610
So I'm just going to walk you
through, just very briefly.

00:08:35.610 --> 00:08:37.150
This session is not about
the Store Locator.

00:08:37.150 --> 00:08:39.710
But we're kind of going to use
it as a basis for building up

00:08:39.710 --> 00:08:40.970
the rest of these
examples here.

00:08:40.970 --> 00:08:44.530
So just to explain the minimal
amount of concepts you need to

00:08:44.530 --> 00:08:46.120
have to build up the
Store Locator.

00:08:46.120 --> 00:08:49.090
And in maybe less than 100
lines of code, we've put

00:08:49.090 --> 00:08:50.910
together that map that
you saw right there.

00:08:50.910 --> 00:08:53.410
So first of all, after
downloading the Store Locator

00:08:53.410 --> 00:08:56.580
library, we start up with
creating a data feed.

00:08:56.580 --> 00:08:58.470
And the data feed here, we're
using a static data feed,

00:08:58.470 --> 00:09:01.715
because I put the houses in kind
of a big JSON file, so I

00:09:01.715 --> 00:09:04.000
could stream them over easily,
and parse them, and so forth.

00:09:04.000 --> 00:09:05.980
It could be a CSV
file you parse.

00:09:05.980 --> 00:09:07.690
Maybe it's like a
collaboratively edited

00:09:07.690 --> 00:09:08.580
spreadsheet.

00:09:08.580 --> 00:09:10.750
It could also be a dynamic
data feed.

00:09:10.750 --> 00:09:13.050
So it has good examples
for that, as well.

00:09:13.050 --> 00:09:16.250
So if you have, say a MySQL
database with millions of

00:09:16.250 --> 00:09:19.780
points, then you'd just grab a
bounding box query to show the

00:09:19.780 --> 00:09:21.760
closest ones for the map.

00:09:21.760 --> 00:09:25.880
Or it could be an App Engine
server or Fusion Tables.

00:09:25.880 --> 00:09:29.010
They launched a new API that
let's you do JSONP callbacks.

00:09:29.010 --> 00:09:30.070
That worked really well.

00:09:30.070 --> 00:09:32.530
The point being, it's data
source agnostic.

00:09:32.530 --> 00:09:35.230
So whatever data you have,
it's pretty easy

00:09:35.230 --> 00:09:35.970
to bring it in here.

00:09:35.970 --> 00:09:39.210
You don't have to worry about
this sort of geo store and the

00:09:39.210 --> 00:09:41.280
magic of auto-sorting
and so forth.

00:09:41.280 --> 00:09:44.740
The closest one is taken care
for you in the JavaScript.

00:09:44.740 --> 00:09:47.150
Then you create a View.

00:09:47.150 --> 00:09:48.910
And you basically feed that
a map that you've already

00:09:48.910 --> 00:09:51.030
instantiated, and
the data feed.

00:09:51.030 --> 00:09:53.280
There's some options on the
View, for example, the one I

00:09:53.280 --> 00:09:55.130
have here, the geolocation.

00:09:55.130 --> 00:09:56.150
By default, it's true.

00:09:56.150 --> 00:10:00.230
And then, when the Store Locator
loads, it'll say, do

00:10:00.230 --> 00:10:02.805
you allow the map to
have your location?

00:10:02.805 --> 00:10:05.640
It'll center on your location,
which is nice.

00:10:05.640 --> 00:10:06.370
But we set it to false.

00:10:06.370 --> 00:10:09.420
So I can use the autocomplete,
which also comes for free.

00:10:09.420 --> 00:10:11.240
And then you create, if you
want, the left panel.

00:10:11.240 --> 00:10:13.260
So you kind of get that panelDiv
that does all of that

00:10:13.260 --> 00:10:15.700
sorting and that nice stuff
that we saw, with

00:10:15.700 --> 00:10:18.170
auto-complete and so forth,
just by creating, first of

00:10:18.170 --> 00:10:19.660
all, the div for your panel.

00:10:19.660 --> 00:10:22.520
Create a new storeLocator.Panel,
pass it

00:10:22.520 --> 00:10:24.350
into View, good to go.

00:10:24.350 --> 00:10:25.640
So I'm not going to go to too
much more detail here.

00:10:25.640 --> 00:10:28.120
The point being, as great
examples in that library, it's

00:10:28.120 --> 00:10:29.000
really easy to get started.

00:10:29.000 --> 00:10:31.470
NABIL NAGHDY: Yeah, so the first
thing you want to do

00:10:31.470 --> 00:10:34.900
when you're importing your data
is kind of change the way

00:10:34.900 --> 00:10:36.020
it looks to customize it.

00:10:36.020 --> 00:10:38.670
And the easiest way to do that
is to use custom icons.

00:10:38.670 --> 00:10:41.410
So in this instance, we've
simply replaced the red pin

00:10:41.410 --> 00:10:44.340
and put in a funky blue house.

00:10:44.340 --> 00:10:46.010
Now, this is a fundamental
thing that

00:10:46.010 --> 00:10:48.480
everyone should be doing.

00:10:48.480 --> 00:10:50.890
The least you can kind of change
is the red pin, to make

00:10:50.890 --> 00:10:52.210
it relevant to whatever
you're doing.

00:10:52.210 --> 00:10:54.240
JOSH LIVNI: Yeah, absolutely.

00:10:54.240 --> 00:10:55.730
In this case, house kind
of makes sense.

00:10:55.730 --> 00:10:57.140
But it could be
different-colored houses,

00:10:57.140 --> 00:11:00.150
dynamically, if it had a
fireplace or some other

00:11:00.150 --> 00:11:03.010
attributes, or different sizes
for the price, et cetera.

00:11:03.010 --> 00:11:04.770
So always do the custom icons.

00:11:04.770 --> 00:11:06.060
I just want to briefly
go over--

00:11:06.060 --> 00:11:07.720
I mean, this is not a new
concept to most of you.

00:11:07.720 --> 00:11:10.440
There is one new thing in here
though, so briefly go over how

00:11:10.440 --> 00:11:11.760
you customize your icons.

00:11:11.760 --> 00:11:14.960
The easiest way, just what we
did here is basically, in your

00:11:14.960 --> 00:11:16.810
marker options, you
have an icon.

00:11:16.810 --> 00:11:18.920
And you can pass it in
a number of things.

00:11:18.920 --> 00:11:21.480
The first and easiest
is just URL, so

00:11:21.480 --> 00:11:22.940
in this case, house.png.

00:11:22.940 --> 00:11:24.470
That's my image.

00:11:24.470 --> 00:11:25.590
And that's all I have to do.

00:11:25.590 --> 00:11:26.250
I'm done.

00:11:26.250 --> 00:11:29.140
We get a little more complicated
by creating a

00:11:29.140 --> 00:11:31.060
marker image and passing
a bunch of different

00:11:31.060 --> 00:11:32.320
variables, resize it.

00:11:32.320 --> 00:11:34.190
Of course, when you have a
shadow, it's another marker

00:11:34.190 --> 00:11:35.490
image, and so forth.

00:11:35.490 --> 00:11:37.350
So that's a great way to go.

00:11:37.350 --> 00:11:38.710
That's been around a while.

00:11:38.710 --> 00:11:41.010
And then, just out of curiosity,
how many of you

00:11:41.010 --> 00:11:44.220
were in the session previously,
on visualization?

00:11:44.220 --> 00:11:44.510
Yeah.

00:11:44.510 --> 00:11:47.050
So we introduced a really cool
new feature, symbols.

00:11:47.050 --> 00:11:50.050
So this is a really great way
we can use some pre-defined

00:11:50.050 --> 00:11:51.350
symbols, such as a circle.

00:11:51.350 --> 00:11:52.300
You see here.

00:11:52.300 --> 00:11:54.890
Our arrows, we have a variety
of pre-defined symbols.

00:11:54.890 --> 00:11:57.530
Or pass in your own arbitrary
SVG path,

00:11:57.530 --> 00:11:58.420
which is really amazing.

00:11:58.420 --> 00:12:02.210
So if I was an artist, I
could've drawn a house SVG

00:12:02.210 --> 00:12:05.550
path and then used those and
animated them and done some

00:12:05.550 --> 00:12:07.400
really great stuff
with the symbols.

00:12:07.400 --> 00:12:10.300
So any of these three are kind
of valid ways to create icons.

00:12:10.300 --> 00:12:11.330
And then, you just go ahead.

00:12:11.330 --> 00:12:13.690
And in the case of the Store
Locator, if I want to

00:12:13.690 --> 00:12:18.080
customize my icon, I would
create a createMarker method

00:12:18.080 --> 00:12:20.110
on my View and then pass
in your kind of

00:12:20.110 --> 00:12:21.350
classic marker options.

00:12:21.350 --> 00:12:22.160
This is the location.

00:12:22.160 --> 00:12:24.500
It would be the store
location.

00:12:24.500 --> 00:12:26.090
Icon, whatever icon I chose.

00:12:26.090 --> 00:12:27.620
In this case, my house.png.

00:12:27.620 --> 00:12:28.450
And you're good to go.

00:12:28.450 --> 00:12:32.220
So definitely, take the
extra three minutes.

00:12:32.220 --> 00:12:34.060
Find yourself a free icon.

00:12:34.060 --> 00:12:36.270
Find someone to make you one.

00:12:36.270 --> 00:12:38.250
A red pin is great, this
beautiful red pin.

00:12:38.250 --> 00:12:42.002
But for your map, it's going to
be better to have your own.

00:12:42.002 --> 00:12:46.680
NABIL NAGHDY: So as was spoken
earlier in the keynote, a

00:12:46.680 --> 00:12:49.190
really powerful way to give
context to your map is to add

00:12:49.190 --> 00:12:50.390
satellite imagery.

00:12:50.390 --> 00:12:56.640
So at Google, we've got over
20 petabytes of imagery.

00:12:56.640 --> 00:12:58.780
Satellite imagery is covered
for 75% of the world's

00:12:58.780 --> 00:12:59.820
population.

00:12:59.820 --> 00:13:02.650
And we add, every two weeks,
the same amount of imagery

00:13:02.650 --> 00:13:05.960
that we did in all of 2006.

00:13:05.960 --> 00:13:08.660
So there's a lot of imagery
constantly being updated.

00:13:08.660 --> 00:13:11.150
As you can see in this example,
we have 45 degree

00:13:11.150 --> 00:13:13.010
imagery, as well, or
oblique imagery.

00:13:13.010 --> 00:13:16.320
And you can set which direction
you want to see the

00:13:16.320 --> 00:13:17.670
image from.

00:13:17.670 --> 00:13:19.190
You also have the ability to--

00:13:22.300 --> 00:13:24.210
we can see in Terrain Mode.

00:13:24.210 --> 00:13:28.090
So Terrain Mode is really
convenient or really powerful

00:13:28.090 --> 00:13:30.480
for, in this instance, for real
estate sites, but also

00:13:30.480 --> 00:13:32.170
for fitness and health sites.

00:13:32.170 --> 00:13:36.420
To say, if you're riding your
bike from here to Mountain

00:13:36.420 --> 00:13:40.070
View or across the bay, what is
the elevation, and what are

00:13:40.070 --> 00:13:42.290
the mountains nearby, if you
were to go for run or a cycle

00:13:42.290 --> 00:13:42.980
or whatever.

00:13:42.980 --> 00:13:46.960
So it's really powerful data
that is really easy to enable.

00:13:46.960 --> 00:13:47.620
JOSH LIVNI: Yeah.

00:13:47.620 --> 00:13:50.900
So definitely don't just go
with the default load map.

00:13:50.900 --> 00:13:52.470
Maybe that makes the
most sense for you.

00:13:52.470 --> 00:13:54.250
You're going to, hopefully,
style it, which we'll talk

00:13:54.250 --> 00:13:55.370
about in a little bit.

00:13:55.370 --> 00:13:58.630
But go ahead and think, does it
make more sense to have the

00:13:58.630 --> 00:13:59.460
satellite imagery?

00:13:59.460 --> 00:14:00.385
It's very easy to change.

00:14:00.385 --> 00:14:05.240
You set the MapTypeId to the
appropriate base data there,

00:14:05.240 --> 00:14:07.245
whether it's a hybrid, such
as satellite, with

00:14:07.245 --> 00:14:08.220
the labels on top.

00:14:08.220 --> 00:14:11.690
The terrain, which is a really
nice, kind of clean view of

00:14:11.690 --> 00:14:12.430
looking at data.

00:14:12.430 --> 00:14:15.330
The roads are less prominent
and so forth.

00:14:15.330 --> 00:14:18.620
And then, for the 45-degree
imagery, just a note that, by

00:14:18.620 --> 00:14:21.290
default, we kind of sweep you
into that aerial view.

00:14:21.290 --> 00:14:24.480
But if you don't want it, you
can do map.setTilt to 0.

00:14:24.480 --> 00:14:27.370
And then, even if we do have
that imagery available in a

00:14:27.370 --> 00:14:29.520
city, we'll just keep you
in the satellite mode.

00:14:29.520 --> 00:14:32.010
And so then, you'll get that
kind of straight-down-there

00:14:32.010 --> 00:14:34.840
looking view for more
zoom levels.

00:14:34.840 --> 00:14:37.390
On the other hand, if you do
want that, then definitely

00:14:37.390 --> 00:14:40.580
think about setting the heading,
map.setHeading, to

00:14:40.580 --> 00:14:43.760
any of the cardinal views, 90
degrees east, 180 south, and

00:14:43.760 --> 00:14:47.000
so forth, so that you can give
your users the appropriate

00:14:47.000 --> 00:14:50.840
angle, programmatically, or
automatically, depending on

00:14:50.840 --> 00:14:52.080
your use case.

00:14:52.080 --> 00:14:54.900
So yeah, pretty easy to take
advantage of those different

00:14:54.900 --> 00:14:56.440
base layers.

00:14:56.440 --> 00:14:57.130
And then we have more layers.

00:14:57.130 --> 00:14:58.920
So we have some layers
we threw on top.

00:14:58.920 --> 00:15:03.170
I'm just going to take some of
these houses out of the way.

00:15:03.170 --> 00:15:06.420
A few different layers that we
have data for, so the first--

00:15:06.420 --> 00:15:08.940
we restyled a map with
our cycling data.

00:15:08.940 --> 00:15:12.440
We have this for United States
and a bunch of Canada.

00:15:12.440 --> 00:15:14.590
This is really useful.

00:15:14.590 --> 00:15:16.090
I'll skip this one
for right now.

00:15:16.090 --> 00:15:18.800
We also have a Traffic layer.

00:15:18.800 --> 00:15:22.320
This comes in Live Traffic,
which is from a variety of

00:15:22.320 --> 00:15:23.680
sources, including
local roads.

00:15:23.680 --> 00:15:24.760
It's not just freeway data.

00:15:24.760 --> 00:15:26.000
So that's really useful.

00:15:26.000 --> 00:15:28.140
We have a relatively
new Weather layer.

00:15:28.140 --> 00:15:28.990
So this is kind of neat.

00:15:28.990 --> 00:15:30.110
You can see the temperature.

00:15:30.110 --> 00:15:32.960
I think it's updated every
hour, I believe.

00:15:32.960 --> 00:15:34.680
And then, the Panoramio layer,
it's been around a while.

00:15:34.680 --> 00:15:35.790
But it is really cool.

00:15:35.790 --> 00:15:37.460
And I've seen a few sites
take advantage

00:15:37.460 --> 00:15:38.490
of adding the context.

00:15:38.490 --> 00:15:41.010
Here in Seattle, I can see all
the bridges, lots of cool

00:15:41.010 --> 00:15:42.580
bridges in Seattle.

00:15:42.580 --> 00:15:44.470
It's really nice to be able
to get this data on.

00:15:44.470 --> 00:15:47.020
Just a couple of notes on the
Panoramio layer and the

00:15:47.020 --> 00:15:48.270
Weather layer--

00:15:50.300 --> 00:15:54.340
when you load your Maps
JavaScript library, you have

00:15:54.340 --> 00:15:58.170
to add those libraries
specifically,

00:15:58.170 --> 00:15:59.480
Panoramio and Weather.

00:15:59.480 --> 00:16:02.730
And you also have, in the
Weather layer, a Associated

00:16:02.730 --> 00:16:03.840
Cloud layer, here.

00:16:03.840 --> 00:16:04.870
So those are updated
every hour.

00:16:04.870 --> 00:16:05.620
It's pretty cool.

00:16:05.620 --> 00:16:07.740
And you can kind of get the
live weather on there.

00:16:07.740 --> 00:16:10.230
So this is how you
do it, very easy.

00:16:10.230 --> 00:16:13.900
Again, you instantiate a new,
for example, bicycling layer,

00:16:13.900 --> 00:16:16.870
set it to the map, or
set to null, if you

00:16:16.870 --> 00:16:17.970
want it to go away.

00:16:17.970 --> 00:16:21.240
And then, the one difference, in
the Panoramio Layer, is you

00:16:21.240 --> 00:16:24.360
can optionally provide a tag
when you instantiate it.

00:16:24.360 --> 00:16:27.240
Or set tag, for example,
in this case, bridges.

00:16:27.240 --> 00:16:30.792
And it'll filter the pictures
just to ones that have that

00:16:30.792 --> 00:16:33.690
tag, so a bunch of data that
we also kind of provide for

00:16:33.690 --> 00:16:34.830
extra context on top.

00:16:34.830 --> 00:16:36.920
There's also layers that you can
provide yourself, such as

00:16:36.920 --> 00:16:38.210
the KML layer.

00:16:38.210 --> 00:16:40.170
That might be your own data,
or some KML you found

00:16:40.170 --> 00:16:42.530
somewhere, or a fusion tables
layer, again, your data.

00:16:42.530 --> 00:16:45.191
But we're just talking about
data that we provide here, on

00:16:45.191 --> 00:16:46.598
top of the map.

00:16:46.598 --> 00:16:49.270
NABIL NAGHDY: So now, we'll get
to custom styles, which is

00:16:49.270 --> 00:16:52.750
a surprisingly important and
quite less-frequently-used

00:16:52.750 --> 00:16:54.010
feature of the Google
Maps API.

00:16:54.010 --> 00:16:56.310
So just a quick show of hands,
how many people have heard

00:16:56.310 --> 00:16:59.860
about being able to custom
style your map?

00:16:59.860 --> 00:17:00.110
OK.

00:17:00.110 --> 00:17:01.900
So that's--

00:17:01.900 --> 00:17:06.130
And how many people actually
custom style their map?

00:17:06.130 --> 00:17:08.890
So that's about 20% to 30%.

00:17:08.890 --> 00:17:09.550
So it's quite good.

00:17:09.550 --> 00:17:10.950
I think we have a
pretty advanced

00:17:10.950 --> 00:17:12.130
group in here, as well.

00:17:12.130 --> 00:17:19.089
So styling your map, I think, is
a surprisingly easy feature

00:17:19.089 --> 00:17:21.640
that should be utilized
by everyone.

00:17:21.640 --> 00:17:25.170
So the default colors of Google
Maps, that it currently

00:17:25.170 --> 00:17:28.200
has, is mainly used for
maps.google.com.

00:17:28.200 --> 00:17:32.770
And you have the ability to kind
of change it to what fits

00:17:32.770 --> 00:17:33.660
your brand.

00:17:33.660 --> 00:17:36.090
So if you have really important
data that you're

00:17:36.090 --> 00:17:38.850
layering on top, you can kind of
make the background look a

00:17:38.850 --> 00:17:39.890
little more subtle.

00:17:39.890 --> 00:17:41.630
If there are some features that
you're highlighting, for

00:17:41.630 --> 00:17:46.430
example, if you're a trailing
site, you can highlight the

00:17:46.430 --> 00:17:49.040
national parks in the map.

00:17:49.040 --> 00:17:50.100
So they stand out.

00:17:50.100 --> 00:17:54.470
So these are all types of
features that you can utilize

00:17:54.470 --> 00:17:57.690
in order to differentiate your
map from your competitors.

00:17:57.690 --> 00:18:02.050
So in all these examples, it's
rotating between the--

00:18:02.050 --> 00:18:04.450
each one of these examples took
us about five minutes to

00:18:04.450 --> 00:18:07.180
create with the Styling Wizard,
which was launched

00:18:07.180 --> 00:18:11.150
last year at I/O. If you simply
just Google Google Maps

00:18:11.150 --> 00:18:13.270
Styling Wizard, you can
come up with it.

00:18:13.270 --> 00:18:16.720
And basically, every minor,
granular feature of the map,

00:18:16.720 --> 00:18:18.600
you can change, the color,
the hue, the

00:18:18.600 --> 00:18:22.250
saturation, the gamma.

00:18:22.250 --> 00:18:24.140
And you can turn things
on and off.

00:18:24.140 --> 00:18:26.050
It's really, really powerful.

00:18:26.050 --> 00:18:29.270
And as was explained earlier, it
doesn't impact the speed at

00:18:29.270 --> 00:18:31.000
which your tiles are rendered.

00:18:31.000 --> 00:18:35.080
So every single tile you see is
custom delivered to you, in

00:18:35.080 --> 00:18:37.905
your style, in less than
10 milliseconds.

00:18:37.905 --> 00:18:38.570
JOSH LIVNI: Yes.

00:18:38.570 --> 00:18:40.000
That's a really phenomenal
feature.

00:18:40.000 --> 00:18:41.660
And there's just a ton
of granularity on

00:18:41.660 --> 00:18:42.505
what you can style.

00:18:42.505 --> 00:18:44.710
I'm not going to go into too
much, just point out that

00:18:44.710 --> 00:18:47.020
really simple code style,
kind of classic case.

00:18:47.020 --> 00:18:48.765
You have some data you'd like
to put on top of the map.

00:18:48.765 --> 00:18:50.790
It's pretty standard.

00:18:50.790 --> 00:18:53.670
Our map, maps.google.com, is
designed for people who want

00:18:53.670 --> 00:18:55.300
directions, all these
other things.

00:18:55.300 --> 00:18:56.790
You may not need all
of that stuff

00:18:56.790 --> 00:18:58.330
jumping out at your users.

00:18:58.330 --> 00:18:59.690
Set the saturation way back.

00:18:59.690 --> 00:19:01.060
So you need a really
simple style.

00:19:01.060 --> 00:19:03.210
Take everything, kind of make
it a little bit more gray

00:19:03.210 --> 00:19:04.890
scale, done.

00:19:04.890 --> 00:19:06.120
So strongly recommend--

00:19:06.120 --> 00:19:08.180
first of all, like Nabil
mentioned, always style your

00:19:08.180 --> 00:19:10.630
map, kind of match your
brand of your website.

00:19:10.630 --> 00:19:13.110
It's really worth the extra
half hour in the Styling

00:19:13.110 --> 00:19:15.340
Wizard to get something
that fits your needs.

00:19:15.340 --> 00:19:16.250
Maybe hire a designer.

00:19:16.250 --> 00:19:17.180
It's pretty easy to use.

00:19:17.180 --> 00:19:19.720
And they can do really
cool cartography.

00:19:19.720 --> 00:19:22.290
And on that note,
definitely check

00:19:22.290 --> 00:19:23.580
out the session tomorrow.

00:19:23.580 --> 00:19:26.670
It's, I believe, at 4 o'clock,
a master class in styling.

00:19:26.670 --> 00:19:28.830
Really exciting stuff
going on in styling.

00:19:28.830 --> 00:19:31.260
I strongly recommend you check
out some of the styling

00:19:31.260 --> 00:19:33.990
functionality that the
Maps can offer.

00:19:33.990 --> 00:19:34.840
NABIL NAGHDY: All right.

00:19:34.840 --> 00:19:37.900
So let's get into the meat of
some of the features that

00:19:37.900 --> 00:19:38.400
we're going to use.

00:19:38.400 --> 00:19:41.490
So in this case, this is going
back to the Store Locator.

00:19:41.490 --> 00:19:44.800
So directions is another one
of the features that you do

00:19:44.800 --> 00:19:47.840
get for free as part of
the Store Locator.

00:19:47.840 --> 00:19:52.250
If I were to click on one of
the houses, I can have the

00:19:52.250 --> 00:19:54.875
option of doing Straight View,
which is quite-- everyone

00:19:54.875 --> 00:19:55.970
knows about the Straight View.

00:19:55.970 --> 00:19:58.130
You can also zoom in on that
specific location.

00:19:58.130 --> 00:19:58.850
Then there's directions.

00:19:58.850 --> 00:20:01.090
So I click Directions.

00:20:01.090 --> 00:20:05.570
And then I want to travel from
the Google Kirkland office.

00:20:05.570 --> 00:20:06.520
Awesome.

00:20:06.520 --> 00:20:10.390
And as you can see, for those
that are keen-eyed, this isn't

00:20:10.390 --> 00:20:12.740
regular driving directions
or cycling.

00:20:12.740 --> 00:20:15.020
This is actually transit
directions, which launched

00:20:15.020 --> 00:20:16.190
this afternoon.

00:20:16.190 --> 00:20:18.370
So you can see that it's
telling me to walk four

00:20:18.370 --> 00:20:22.510
minutes and then jump on
a bus by Sound Transit.

00:20:22.510 --> 00:20:24.910
So I'm assuming it's a pretty
popular Seattle-based--

00:20:24.910 --> 00:20:25.950
JOSH LIVNI: People love them.

00:20:25.950 --> 00:20:28.050
NABIL NAGHDY: People
love Sound Transit.

00:20:28.050 --> 00:20:31.550
And so it basically tells us
every route, every step of the

00:20:31.550 --> 00:20:33.760
way, what requires walking,
what requires

00:20:33.760 --> 00:20:35.200
bus, requires subway.

00:20:39.360 --> 00:20:41.160
There's a lot of different
variables you get back from

00:20:41.160 --> 00:20:42.930
it, which I think Josh will
talk about in a second.

00:20:42.930 --> 00:20:45.070
But in this case, we've
used Transit.

00:20:45.070 --> 00:20:50.798
Obviously, you can use Cycling,
Walking, or Driving.

00:20:50.798 --> 00:20:53.050
JOSH LIVNI: Yeah, this is
a pretty useful feature.

00:20:53.050 --> 00:20:54.880
First of all, going back to the
Store Locator, it's great.

00:20:54.880 --> 00:20:56.170
You get directions for free.

00:20:56.170 --> 00:20:59.090
And you could have a little
dropdown choosing between

00:20:59.090 --> 00:21:03.070
which mode of transport
you like.

00:21:03.070 --> 00:21:04.700
And yeah, Transit, I'm
pretty excited about.

00:21:04.700 --> 00:21:05.670
It's been the number
one feature

00:21:05.670 --> 00:21:07.040
request for quite awhile.

00:21:07.040 --> 00:21:10.550
And so I'm just going to show
you how easy it is to change

00:21:10.550 --> 00:21:14.090
it, kind of one line of change
from your regular driving

00:21:14.090 --> 00:21:14.520
directions.

00:21:14.520 --> 00:21:16.990
We make a request, got a start
and end point, bunch of other

00:21:16.990 --> 00:21:20.510
options, way points, and so
forth, don't necessarily apply

00:21:20.510 --> 00:21:21.020
to Transit.

00:21:21.020 --> 00:21:23.970
So we'll go a little bit more
about what you can with

00:21:23.970 --> 00:21:24.590
Transit now.

00:21:24.590 --> 00:21:27.170
But for the short term, just
note, all you do is set your

00:21:27.170 --> 00:21:29.690
travel mode to Transit.

00:21:29.690 --> 00:21:30.640
And you're done.

00:21:30.640 --> 00:21:32.530
And then you get back some
response that we'll look at in

00:21:32.530 --> 00:21:33.490
a little bit.

00:21:33.490 --> 00:21:36.200
And in this case, I'm setting
the Directions Display.

00:21:36.200 --> 00:21:38.500
So it renders all of that stuff
automatically for me.

00:21:38.500 --> 00:21:41.060
But of course, you also get
back a JSON result, with a

00:21:41.060 --> 00:21:42.310
bunch of data.

00:21:42.310 --> 00:21:45.360
Here's an example of what you
get back from Web Service.

00:21:45.360 --> 00:21:47.770
So we also launched transit
on the Web Service today.

00:21:47.770 --> 00:21:50.700
So you can use that through
the HTTP API.

00:21:50.700 --> 00:21:53.420
And this is just a small
snippet of the code

00:21:53.420 --> 00:21:54.120
that you get back.

00:21:54.120 --> 00:21:56.070
But just pointing out some
of the things you get.

00:21:56.070 --> 00:22:00.980
For example, you get, obviously,
when your bus, or

00:22:00.980 --> 00:22:04.264
funicular, or ferry is going to
arrive, and so forth, a lot

00:22:04.264 --> 00:22:04.510
of stuff there.

00:22:04.510 --> 00:22:06.690
NABIL NAGHDY: There's,
like, 20 different

00:22:06.690 --> 00:22:08.685
types of transit vehicles.

00:22:08.685 --> 00:22:09.480
JOSH LIVNI: Yep.

00:22:09.480 --> 00:22:10.195
So you get that.

00:22:10.195 --> 00:22:11.360
You get the number of stops.

00:22:11.360 --> 00:22:13.991
NABIL NAGHDY: There's also
horse and carriages.

00:22:13.991 --> 00:22:14.960
JOSH LIVNI: Yeah.

00:22:14.960 --> 00:22:18.550
Actually, they probably
have them here.

00:22:18.550 --> 00:22:21.000
So for example, this is from
Moscone Center to Golden Gate

00:22:21.000 --> 00:22:22.370
Park, 32 stops.

00:22:22.370 --> 00:22:23.540
That's not a quick bus.

00:22:23.540 --> 00:22:25.150
But you eventually get there.

00:22:25.150 --> 00:22:28.110
It gives you the time that the
bus is going to arrive, in a

00:22:28.110 --> 00:22:30.670
few different formats, like a
nice, easy display format

00:22:30.670 --> 00:22:32.570
that's always in the local
time of the user.

00:22:32.570 --> 00:22:34.160
That's kind of nice.

00:22:34.160 --> 00:22:36.300
And you get the head sign,
like which direction it's

00:22:36.300 --> 00:22:37.730
traveling, Ocean Beach.

00:22:37.730 --> 00:22:41.860
You get headway, which is if
you miss it, when we expect

00:22:41.860 --> 00:22:44.065
the next one will come, like
how many minutes, bunch of

00:22:44.065 --> 00:22:45.280
other really useful
information.

00:22:45.280 --> 00:22:46.020
So that's great.

00:22:46.020 --> 00:22:48.220
And then, you can construct
your own

00:22:48.220 --> 00:22:50.170
estimates on the transit.

00:22:50.170 --> 00:22:51.650
And yeah, it works
really well.

00:22:51.650 --> 00:22:53.400
NABIL NAGHDY: It's
really powerful.

00:22:53.400 --> 00:22:55.930
And, guys, try it out.

00:22:55.930 --> 00:22:58.780
Mock up some mashups, just see
what you can do with it and

00:22:58.780 --> 00:22:59.640
provide feedback.

00:22:59.640 --> 00:23:01.640
So we're really, really excited
to have launched it

00:23:01.640 --> 00:23:02.580
this afternoon.

00:23:02.580 --> 00:23:04.475
JOSH LIVNI: Yeah, we're excited
to see the transit

00:23:04.475 --> 00:23:05.720
stuff out there.

00:23:05.720 --> 00:23:08.410
A quick note on the transit,
it launched to all the

00:23:08.410 --> 00:23:10.400
countries that we have transit
for, in maps.google.com.

00:23:10.400 --> 00:23:12.410
That's what, over how
many countries?

00:23:12.410 --> 00:23:16.110
NABIL NAGHDY: Over 475 different
locales, so not

00:23:16.110 --> 00:23:18.040
countries, specifically.

00:23:18.040 --> 00:23:20.060
JOSH LIVNI: Minus Japan,
not in Japan.

00:23:20.060 --> 00:23:22.430
But everywhere else, so really,
really good coverage

00:23:22.430 --> 00:23:22.905
for transit.

00:23:22.905 --> 00:23:24.910
NABIL NAGHDY: Yeah,
almost global.

00:23:24.910 --> 00:23:27.550
So let's move on to some
of the other features.

00:23:27.550 --> 00:23:31.330
So another show of hands, who is
familiar with the Distance

00:23:31.330 --> 00:23:33.990
Matrix or the concept
of Distance Matrix?

00:23:33.990 --> 00:23:37.640
OK, who's used the Distance
Matrix API Web Service?

00:23:37.640 --> 00:23:38.200
Brilliant.

00:23:38.200 --> 00:23:41.221
For those at home, there's,
like, one hand up.

00:23:41.221 --> 00:23:42.460
JOSH LIVNI: He works
at Google.

00:23:42.460 --> 00:23:44.110
NABIL NAGHDY: Yeah.

00:23:44.110 --> 00:23:49.370
So Distance Matrix is an
incredibly powerful tool.

00:23:49.370 --> 00:23:52.690
There's a quick demo, just to
show exactly how it works and

00:23:52.690 --> 00:23:53.340
what the purpose is.

00:23:53.340 --> 00:24:00.310
So in this example, we've all
the parks that are in San

00:24:00.310 --> 00:24:02.100
Francisco, Golden Gate Park,
San Bruno Mountain

00:24:02.100 --> 00:24:03.740
State Park, et cetera.

00:24:03.740 --> 00:24:05.150
So I am in Moscone Center.

00:24:05.150 --> 00:24:06.820
I have a friend that
lives in Glen Park.

00:24:10.090 --> 00:24:16.730
And so what this gives me is the
distance between all the

00:24:16.730 --> 00:24:19.960
destinations and the origin, as
well as the time it'll take

00:24:19.960 --> 00:24:22.190
for the method of transport
that I've selected.

00:24:22.190 --> 00:24:26.070
So in this case, we can
determine what the distance

00:24:26.070 --> 00:24:29.760
is, or amount of time it takes
to drive from Moscone Center

00:24:29.760 --> 00:24:34.400
and Glen Park to any
of these parks.

00:24:34.400 --> 00:24:36.900
So we could also figure
out how long it'll

00:24:36.900 --> 00:24:38.570
take to cycle there.

00:24:38.570 --> 00:24:42.370
So if we were to cycle, looking
at this I'd say, I'm

00:24:42.370 --> 00:24:43.810
in Moscone, my friend
is in Glen Park.

00:24:43.810 --> 00:24:45.960
Let's meet at Dolores Park
because it's clearly,

00:24:45.960 --> 00:24:48.040
perfectly in the middle, 20
minutes and 15 minutes to

00:24:48.040 --> 00:24:49.500
cycle there.

00:24:49.500 --> 00:24:55.790
So you can go in the Distance
Matrix either JavaScript

00:24:55.790 --> 00:24:58.300
service, or in the Web
Service itself.

00:24:58.300 --> 00:25:00.270
You can have up to 100 cells.

00:25:00.270 --> 00:25:02.420
So that's like a 10
by 10 matrix.

00:25:02.420 --> 00:25:05.000
And it's essentially--

00:25:05.000 --> 00:25:07.320
in this case, rather than doing
10 separate Directions

00:25:07.320 --> 00:25:08.870
requests, you do one request.

00:25:08.870 --> 00:25:10.240
And you get all the
results back.

00:25:10.240 --> 00:25:11.310
And you display it.

00:25:11.310 --> 00:25:16.930
So how does this example relate
to Store Locator or

00:25:16.930 --> 00:25:19.330
housing site, in our case?

00:25:19.330 --> 00:25:20.860
The icons have gone red.

00:25:20.860 --> 00:25:23.530
JOSH LIVNI: Yeah, I filtered out
all the ones that didn't

00:25:23.530 --> 00:25:24.875
have a fireplace.

00:25:24.875 --> 00:25:27.493
NABIL NAGHDY: OK, so the
red ones mean fire?

00:25:27.493 --> 00:25:28.320
JOSH LIVNI: Yeah, pretty good.

00:25:28.320 --> 00:25:29.120
NABIL NAGHDY: And
it's night time.

00:25:29.120 --> 00:25:29.806
JOSH LIVNI: Yeah.

00:25:29.806 --> 00:25:30.580
NABIL NAGHDY: OK, cool.

00:25:30.580 --> 00:25:32.015
JOSH LIVNI: Fireplaces
are a hazard.

00:25:32.015 --> 00:25:34.970
NABIL NAGHDY: So let's
say we are,

00:25:34.970 --> 00:25:37.270
again, in Google Kirkland.

00:25:37.270 --> 00:25:38.115
JOSH LIVNI: Yes.

00:25:38.115 --> 00:25:40.670
NABIL NAGHDY: So I like
to drive to work.

00:25:40.670 --> 00:25:43.500
So let's say, driving.

00:25:43.500 --> 00:25:46.080
As you can see, we haven't
reordered the results.

00:25:46.080 --> 00:25:50.240
But what you can tell is, that
on the left-hand panel, you

00:25:50.240 --> 00:25:53.420
can see the distance between the
Google Kirkland office and

00:25:53.420 --> 00:25:55.230
that specific house,
as well as the time

00:25:55.230 --> 00:25:56.260
it'll take to drive.

00:25:56.260 --> 00:25:57.500
I actually like to
cycle to work.

00:25:57.500 --> 00:26:00.610
So can I see the cycling
directions?

00:26:00.610 --> 00:26:00.820
Awesome.

00:26:00.820 --> 00:26:02.710
So anything under an
hour, there's one

00:26:02.710 --> 00:26:03.500
that's 40 minutes there.

00:26:03.500 --> 00:26:05.585
So that would be in my subset
of houses I'd look at.

00:26:05.585 --> 00:26:07.465
JOSH LIVNI: So what's nice here
is that we can start to

00:26:07.465 --> 00:26:09.650
annotate the different types
of places your users might

00:26:09.650 --> 00:26:12.600
want to go really, really
quickly, annotate lots of them

00:26:12.600 --> 00:26:14.950
at a time, and then start
ranking those things.

00:26:14.950 --> 00:26:19.640
Maybe I said my criteria for
houses is things I can bike to

00:26:19.640 --> 00:26:20.740
in half an hour.

00:26:20.740 --> 00:26:22.490
I don't have to make a separate
request to each one,

00:26:22.490 --> 00:26:24.370
so a lot of use cases here
for the Distance Matrix.

00:26:24.370 --> 00:26:26.400
NABIL NAGHDY: Yeah,
really powerful.

00:26:26.400 --> 00:26:28.462
JOSH LIVNI: Definitely
check it out.

00:26:28.462 --> 00:26:30.240
All right.

00:26:30.240 --> 00:26:32.720
Let's see here.

00:26:32.720 --> 00:26:33.070
Yes.

00:26:33.070 --> 00:26:35.570
Code for Distance Matrix is
very similar to a Driving

00:26:35.570 --> 00:26:39.370
Directions request, except
instead of having an origin

00:26:39.370 --> 00:26:41.320
and a destination, they
can be lists.

00:26:41.320 --> 00:26:45.910
So in the case of the house
example, I still only have one

00:26:45.910 --> 00:26:49.140
origin, where I work, for
example, and then a list of

00:26:49.140 --> 00:26:51.560
houses, house one, house two,
house three, and so forth.

00:26:51.560 --> 00:26:52.330
I pass that off.

00:26:52.330 --> 00:26:56.850
I can pass similar options in
the request, including extra

00:26:56.850 --> 00:26:59.830
options, like avoiding tolls,
and other such things you can

00:26:59.830 --> 00:27:00.940
do with directions.

00:27:00.940 --> 00:27:03.730
And then in a single response,
I get all of those back.

00:27:03.730 --> 00:27:07.280
So in this particular case, I
get back a response with a

00:27:07.280 --> 00:27:10.140
result of one row, because
I only had one origin.

00:27:10.140 --> 00:27:13.180
And then each of those would
have the time it would take.

00:27:13.180 --> 00:27:14.880
You don't get back all the
information, like you would

00:27:14.880 --> 00:27:16.700
with directions, such as
the steps, and the

00:27:16.700 --> 00:27:17.970
routes, and so forth.

00:27:17.970 --> 00:27:21.660
You get back just the travel
time and travel distance, but

00:27:21.660 --> 00:27:24.270
a really great way to start
annotating your data from

00:27:24.270 --> 00:27:26.020
place to place, when you
have multiple places.

00:27:26.020 --> 00:27:27.620
Maybe you want to have some
friends meet in the middle,

00:27:27.620 --> 00:27:29.350
and so forth.

00:27:29.350 --> 00:27:32.220
All right, Distance Matrix,
hope you check it out.

00:27:32.220 --> 00:27:33.965
NABIL NAGHDY: So the next thing
is Optimized Directions.

00:27:33.965 --> 00:27:36.270
So let's say it's a
Saturday morning.

00:27:36.270 --> 00:27:38.460
And there's a handful
of houses that

00:27:38.460 --> 00:27:39.390
I've selected to see.

00:27:39.390 --> 00:27:44.170
So let's pick, say, the top five
or top six houses that we

00:27:44.170 --> 00:27:45.980
want to see.

00:27:45.980 --> 00:27:46.170
Brilliant.

00:27:46.170 --> 00:27:48.320
And you can see the bottom
of the left-hand panel.

00:27:48.320 --> 00:27:50.280
It totals up the number
of minutes it

00:27:50.280 --> 00:27:52.720
takes for me to travel.

00:27:52.720 --> 00:27:53.310
JOSH LIVNI: Yeah.

00:27:53.310 --> 00:27:55.980
So in this case, instead of
automatically rendering all

00:27:55.980 --> 00:27:58.040
the directions, I just
grab the JSON back.

00:27:58.040 --> 00:28:01.130
I'm parsing it for each
leg along the way.

00:28:01.130 --> 00:28:02.950
And then I sum them up at
the top, so three hours.

00:28:02.950 --> 00:28:04.930
NABIL NAGHDY: So in this case,
we've got a three hour and 10

00:28:04.930 --> 00:28:09.050
minute drive, if I were to go in
the order of places where I

00:28:09.050 --> 00:28:09.530
was clicked.

00:28:09.530 --> 00:28:11.660
So that's a pretty
solid drive.

00:28:11.660 --> 00:28:13.860
And it's a big waste of
a Saturday morning.

00:28:13.860 --> 00:28:14.430
JOSH LIVNI: That sounded
right, yeah.

00:28:14.430 --> 00:28:15.440
NABIL NAGHDY: So what
if I were to click

00:28:15.440 --> 00:28:16.990
the Optimize button?

00:28:16.990 --> 00:28:20.240
As you can see, the time now is
two hours and 14 minutes.

00:28:20.240 --> 00:28:24.900
So we've just saved an hour,
because it reorders all the

00:28:24.900 --> 00:28:27.170
different pins that I've
selected, all the different

00:28:27.170 --> 00:28:29.880
locations I've selected, and
determines what the fastest

00:28:29.880 --> 00:28:33.300
route is, essentially going in
a circle, between all the

00:28:33.300 --> 00:28:33.890
different points.

00:28:33.890 --> 00:28:36.030
So rather than an order that
I've selected them, it

00:28:36.030 --> 00:28:38.430
reorders them to give you the
fastest possible route.

00:28:38.430 --> 00:28:40.720
The other thing is, I
think this route is

00:28:40.720 --> 00:28:42.925
going through a bridge.

00:28:42.925 --> 00:28:45.490
JOSH LIVNI: Yeah, the 520
here, newly tolled.

00:28:45.490 --> 00:28:47.680
NABIL NAGHDY: So I don't
want to pay tolls.

00:28:47.680 --> 00:28:48.810
So it adds an extra--

00:28:48.810 --> 00:28:50.400
I think that was 15 minutes.

00:28:50.400 --> 00:28:51.600
It's a pretty big detour.

00:28:51.600 --> 00:28:54.280
But I avoid the tolls, which
in this case, I would take.

00:28:54.280 --> 00:28:58.310
So that's another feature which
is also baked in, is to

00:28:58.310 --> 00:29:00.170
avoid tolls.

00:29:00.170 --> 00:29:02.090
And the code for this
is also really,

00:29:02.090 --> 00:29:03.600
really easy to implement.

00:29:03.600 --> 00:29:05.360
JOSH LIVNI: Yeah, so the
Optimized Directions just have

00:29:05.360 --> 00:29:06.910
a lot of different
use cases, maybe

00:29:06.910 --> 00:29:08.360
running a bunch of errands.

00:29:08.360 --> 00:29:11.520
Maybe people are going to a
vacation site and they want to

00:29:11.520 --> 00:29:13.130
see a bunch of different
things.

00:29:13.130 --> 00:29:14.970
Take advantage of the fact that
we've kind of solved this

00:29:14.970 --> 00:29:18.820
tricky, traveling-salesman
problem for you.

00:29:18.820 --> 00:29:20.200
So it's very, very useful.

00:29:20.200 --> 00:29:22.950
Our Optimized Direction code
should start looking pretty

00:29:22.950 --> 00:29:24.940
similar here, with our
first request.

00:29:24.940 --> 00:29:28.080
Also, you can use this in the
Web Service, of course.

00:29:28.080 --> 00:29:29.270
The two features I added
here were just

00:29:29.270 --> 00:29:30.790
options on my request.

00:29:30.790 --> 00:29:32.990
OptimizeWaypoints, true,
default is false.

00:29:32.990 --> 00:29:35.960
And similarly with avoidTolls,
set those to true, and you

00:29:35.960 --> 00:29:36.900
could take advantage there.

00:29:36.900 --> 00:29:38.850
So this is really
useful features.

00:29:38.850 --> 00:29:40.590
You're making any type of
directions request.

00:29:40.590 --> 00:29:42.410
You've got some way points,
along the way.

00:29:42.410 --> 00:29:44.560
Think about whether it's going
to be best for users to give

00:29:44.560 --> 00:29:45.650
them this option or not.

00:29:45.650 --> 00:29:48.080
And oftentimes, it will.

00:29:48.080 --> 00:29:48.940
NABIL NAGHDY: All right.

00:29:48.940 --> 00:29:52.030
So now we have another API,
which is called the Google

00:29:52.030 --> 00:29:52.700
Places API.

00:29:52.700 --> 00:29:55.200
It's also a service within the
JavaScript, which we're using

00:29:55.200 --> 00:29:56.150
in this case.

00:29:56.150 --> 00:30:00.210
And what that allows us to do,
in this housing site that

00:30:00.210 --> 00:30:03.730
we've created, is determine
what are specific places

00:30:03.730 --> 00:30:06.805
around the points of the houses
that I'm interested in.

00:30:06.805 --> 00:30:09.110
So what we can do is we can
click on a certain house.

00:30:09.110 --> 00:30:11.170
And in this case, we have
schools enabled.

00:30:11.170 --> 00:30:14.520
And it will tell me all the
schools that are surrounding

00:30:14.520 --> 00:30:15.780
this house.

00:30:15.780 --> 00:30:17.810
And it does it for each one.

00:30:17.810 --> 00:30:21.010
I don't like water, so I
wouldn't live on an island.

00:30:21.010 --> 00:30:22.570
Yeah, OK.

00:30:22.570 --> 00:30:25.280
So essentially, you
guys get the idea.

00:30:25.280 --> 00:30:27.470
So are there any
other options?

00:30:27.470 --> 00:30:29.660
As was mentioned in the keynote,
there's around 100

00:30:29.660 --> 00:30:31.660
different categories you
can choose from.

00:30:31.660 --> 00:30:33.560
In this case, we've
selected a vet.

00:30:36.060 --> 00:30:38.670
If you have an ill pet, and you
really want to live close

00:30:38.670 --> 00:30:41.880
to a vet, you can
do that as well.

00:30:41.880 --> 00:30:42.370
JOSH LIVNI: I'm curious,
where are the vets?

00:30:42.370 --> 00:30:44.580
NABIL NAGHDY: The options
are innumerable.

00:30:44.580 --> 00:30:45.896
JOSH LIVNI: Quite a lot.

00:30:45.896 --> 00:30:46.970
Oh, wow.

00:30:46.970 --> 00:30:47.640
NABIL NAGHDY: OK.

00:30:47.640 --> 00:30:50.290
So let's say, if I was to look
for schools around a certain

00:30:50.290 --> 00:30:53.780
house, there's also another
really cool feature, where I

00:30:53.780 --> 00:30:57.740
can filter what Places category
I've selected.

00:30:57.740 --> 00:31:00.840
So I really like the
Montessori system.

00:31:00.840 --> 00:31:04.800
So for my kids, I'd want to put
in a Montessori school,

00:31:04.800 --> 00:31:05.780
for them to go to.

00:31:05.780 --> 00:31:07.460
So I select Montessori.

00:31:07.460 --> 00:31:10.130
And now, when I click a house, I
actually get the location of

00:31:10.130 --> 00:31:12.060
all the Montessori
schools near the

00:31:12.060 --> 00:31:14.210
house that I've selected.

00:31:14.210 --> 00:31:15.560
JOSH LIVNI: I was going
to mention.

00:31:15.560 --> 00:31:17.290
It's important to mention what
we're doing here in the

00:31:17.290 --> 00:31:20.010
background is using the
keyword feature

00:31:20.010 --> 00:31:21.640
on the Places request.

00:31:21.640 --> 00:31:25.170
And that filters not just on
description and name, but also

00:31:25.170 --> 00:31:26.960
on the reviews and some
other information that

00:31:26.960 --> 00:31:27.960
we have on the place.

00:31:27.960 --> 00:31:29.960
So if someone says, this school
is absolutely not a

00:31:29.960 --> 00:31:31.320
Montessori school in one
of the comments,

00:31:31.320 --> 00:31:32.540
it'll still show up.

00:31:32.540 --> 00:31:34.310
It's a great way to filter
down quickly.

00:31:34.310 --> 00:31:36.410
Just keep in mind what
the keyword does.

00:31:36.410 --> 00:31:39.250
And it's still, as you can see,
really, really useful, if

00:31:39.250 --> 00:31:41.870
you're looking for something
specific, Italian restaurant

00:31:41.870 --> 00:31:43.406
versus restaurants,
and so forth.

00:31:43.406 --> 00:31:46.010
NABIL NAGHDY: So in this case,
it looks like West Seattle has

00:31:46.010 --> 00:31:49.270
got two Montessori schools
close to each other.

00:31:49.270 --> 00:31:51.780
So let's zoom in and have a look
and see what the houses

00:31:51.780 --> 00:31:53.283
look like there.

00:31:53.283 --> 00:31:54.460
JOSH LIVNI: All right.

00:31:54.460 --> 00:31:56.300
I think we can go to the
next demo for this one.

00:31:56.300 --> 00:31:58.170
NABIL NAGHDY: All righty.

00:31:58.170 --> 00:32:02.170
So we've got West Seattle,
Montessori schools.

00:32:04.690 --> 00:32:06.010
JOSH LIVNI: There they are.

00:32:06.010 --> 00:32:09.186
NABIL NAGHDY: Ah, Montessori.

00:32:09.186 --> 00:32:10.415
JOSH LIVNI: Picky with
your schools.

00:32:10.415 --> 00:32:11.740
NABIL NAGHDY: Yeah,
very picky.

00:32:14.540 --> 00:32:20.120
In this demo, if we click on
the school, and we have

00:32:20.120 --> 00:32:23.670
selected the house, it gives
us the walking directions

00:32:23.670 --> 00:32:25.080
between the two points.

00:32:25.080 --> 00:32:28.540
Now, that red kind of squiggly
line that's going above the

00:32:28.540 --> 00:32:32.130
directions is actually the
elevation between the house

00:32:32.130 --> 00:32:34.570
I've selected and the
school itself.

00:32:34.570 --> 00:32:37.830
So if I want to walk to the
school and walk my kids to

00:32:37.830 --> 00:32:42.580
school, then this would be a
really awesome way for me to

00:32:42.580 --> 00:32:44.300
instantaneously see.

00:32:44.300 --> 00:32:46.160
OK, this is a bit of
an uphill walk.

00:32:46.160 --> 00:32:47.930
So I'd go downhill, initially.

00:32:47.930 --> 00:32:49.850
And then I'd be walking
uphill to the school.

00:32:49.850 --> 00:32:51.430
So I'd probably not
want to do that.

00:32:51.430 --> 00:32:52.470
I'd probably want
to go somewhere

00:32:52.470 --> 00:32:53.680
where it's a flat walk.

00:32:53.680 --> 00:32:56.340
This, obviously, is also the
case if you're trying to pick

00:32:56.340 --> 00:33:00.020
a neighborhood and if you live
on top of a hill and all the

00:33:00.020 --> 00:33:02.030
restaurants you want to go
to are down the hill.

00:33:02.030 --> 00:33:03.690
It's important information.

00:33:03.690 --> 00:33:07.630
So this is also incredibly
powerful for elevation,

00:33:07.630 --> 00:33:09.190
especially for health
and fitness sites.

00:33:09.190 --> 00:33:12.650
If you want to determine the
directions between two points,

00:33:12.650 --> 00:33:15.610
you can easily, now with
visualization, add this layer

00:33:15.610 --> 00:33:17.460
on top, really powerful.

00:33:17.460 --> 00:33:18.200
JOSH LIVNI: Yes.

00:33:18.200 --> 00:33:21.520
This is pretty cool stuff, using
the new symbols again,

00:33:21.520 --> 00:33:23.680
which we'll get into
in a second here.

00:33:23.680 --> 00:33:27.590
But the point here that we have
is, with places, don't

00:33:27.590 --> 00:33:30.030
just think of it as occasionally
your user might

00:33:30.030 --> 00:33:31.350
need to see what's
around them.

00:33:31.350 --> 00:33:33.240
Or I'm building a place's
business.

00:33:33.240 --> 00:33:35.310
But you can use it in all kinds
of places, just to get a

00:33:35.310 --> 00:33:36.600
quick look at local density.

00:33:36.600 --> 00:33:38.770
I'd love it, when I'm looking
at the different housing

00:33:38.770 --> 00:33:41.290
sites, just to get an idea of
the density of things that are

00:33:41.290 --> 00:33:42.370
around me that I care about.

00:33:42.370 --> 00:33:44.970
I care about, perhaps, schools
because I have kids, parks,

00:33:44.970 --> 00:33:47.640
coffee shop, bar, maybe
not much else.

00:33:47.640 --> 00:33:49.450
And so I just want to know
where are those things

00:33:49.450 --> 00:33:50.660
relative to the houses
I'm looking at.

00:33:50.660 --> 00:33:52.490
It applies to many different
verticals, again.

00:33:52.490 --> 00:33:55.980
So use it in all your
applications, if you want to

00:33:55.980 --> 00:34:00.590
give the end-user sort of a
portal into all of the stuff

00:34:00.590 --> 00:34:03.080
that we have around
a given location.

00:34:03.080 --> 00:34:04.970
Also, think about using
the keyword filtering.

00:34:04.970 --> 00:34:08.360
Think about, in this case, we
were sorting by distance,

00:34:08.360 --> 00:34:10.050
which is a relatively
new feature.

00:34:10.050 --> 00:34:12.540
And so usually, we sort by
what's called prominence,

00:34:12.540 --> 00:34:14.610
which gets the best results.

00:34:14.610 --> 00:34:17.030
I was just curious of the
closest results, even if

00:34:17.030 --> 00:34:18.460
they're not necessarily
the best.

00:34:18.460 --> 00:34:20.179
So maybe, if I looked for coffee
shops, we think the

00:34:20.179 --> 00:34:22.199
best results are a little
more spread out.

00:34:22.199 --> 00:34:23.350
I just want the closest one.

00:34:23.350 --> 00:34:24.880
I want to know if I'm
in a block or two.

00:34:24.880 --> 00:34:29.500
So think about how you're going
to rank the response.

00:34:29.500 --> 00:34:31.460
And think about how to sort of
mix and match the services.

00:34:31.460 --> 00:34:32.350
That's the main point here.

00:34:32.350 --> 00:34:35.000
You don't have to just think,
OK, I'm a real estate site, so

00:34:35.000 --> 00:34:36.630
put some pins in a map
with some prices.

00:34:36.630 --> 00:34:37.800
Think about, oh, people
are probably

00:34:37.800 --> 00:34:38.679
going to walk to places.

00:34:38.679 --> 00:34:40.989
If they walk to somewhere, we
should give directions and let

00:34:40.989 --> 00:34:42.489
them know, oh, it's
a 10-minute walk

00:34:42.489 --> 00:34:43.449
or a 15-minute walk.

00:34:43.449 --> 00:34:45.040
Or it's going to be uphill,
et cetera, et cetera.

00:34:45.040 --> 00:34:47.489
So think of all the different
services you can combine when

00:34:47.489 --> 00:34:48.920
you're using Places.

00:34:48.920 --> 00:34:51.900
And then also, don't miss the
session right after this--

00:34:51.900 --> 00:34:55.050
"Building a Business with the
Places API." So they have a

00:34:55.050 --> 00:34:56.580
lot of good stuff to
talk about Places

00:34:56.580 --> 00:34:59.600
in much more detail.

00:34:59.600 --> 00:35:01.130
Briefly mentioned the
elevation here.

00:35:01.130 --> 00:35:04.090
So you notice that very
cool symbology.

00:35:04.090 --> 00:35:06.140
The symbols were mentioned
in the previous talk.

00:35:06.140 --> 00:35:07.640
So I'm not going to talk
about how we did

00:35:07.640 --> 00:35:08.520
the symbols too much.

00:35:08.520 --> 00:35:11.240
But check out the video
on YouTube afterwards

00:35:11.240 --> 00:35:11.780
if you missed it.

00:35:11.780 --> 00:35:16.120
It's a very cool talk on Spatial
Data Visualization.

00:35:16.120 --> 00:35:18.980
And then the elevation, however,
I'll just mention, is

00:35:18.980 --> 00:35:20.730
again kind of a similar
pattern here.

00:35:20.730 --> 00:35:23.610
We make a request to an
Elevation Service.

00:35:23.610 --> 00:35:27.080
In this case, we're going to
pass in a path that we want

00:35:27.080 --> 00:35:29.330
elevation for and a
number of samples.

00:35:29.330 --> 00:35:31.260
In this case, I want 500
samples along the path.

00:35:31.260 --> 00:35:34.390
It'll evenly interpolate those
samples along the way.

00:35:34.390 --> 00:35:36.670
I could also, if I was so
inclined, just ask for a

00:35:36.670 --> 00:35:38.490
single location, get the
elevation back for there.

00:35:38.490 --> 00:35:41.280
So in this case, I've already
done a Directions request to

00:35:41.280 --> 00:35:42.720
get some walking directions.

00:35:42.720 --> 00:35:46.020
So I've got an overview path
from the route that was

00:35:46.020 --> 00:35:48.680
returned to me from
the directions.

00:35:48.680 --> 00:35:50.260
I pass that into
the Elevation.

00:35:50.260 --> 00:35:54.560
Elevation will return an array
of Elevation responses, which

00:35:54.560 --> 00:35:56.880
include the height, the
accuracy of the

00:35:56.880 --> 00:35:58.560
elevation, and so forth.

00:35:58.560 --> 00:36:00.965
So Elevation API, very useful.

00:36:00.965 --> 00:36:01.600
NABIL NAGHDY: Powerful.

00:36:01.600 --> 00:36:02.890
JOSH LIVNI: Yep, OK.

00:36:02.890 --> 00:36:03.430
NABIL NAGHDY: All right.

00:36:03.430 --> 00:36:10.970
So our final demo for this
afternoon is a really powerful

00:36:10.970 --> 00:36:15.130
way in which, for this case
and others, you can really

00:36:15.130 --> 00:36:18.240
utilize the power of
Google's mapping

00:36:18.240 --> 00:36:21.880
services or Geo services.

00:36:21.880 --> 00:36:23.810
In this case, we've selected
the different houses that

00:36:23.810 --> 00:36:24.800
we're interested in.

00:36:24.800 --> 00:36:26.870
And let's say, you
get a URL from

00:36:26.870 --> 00:36:28.360
your real estate provider.

00:36:28.360 --> 00:36:31.700
And it looks something
like this.

00:36:31.700 --> 00:36:35.830
So basically, these are
all the different

00:36:35.830 --> 00:36:36.830
houses we've selected.

00:36:36.830 --> 00:36:39.450
But what we're doing is, we've
passed it into the Google

00:36:39.450 --> 00:36:43.490
Earth API, Google Earth
API plug-in.

00:36:43.490 --> 00:36:48.370
And we're able to do a flyover,
or virtual tour, of

00:36:48.370 --> 00:36:50.255
all the different houses
that we've selected.

00:36:52.780 --> 00:36:55.870
There's a lot of things that
are variable, the speed at

00:36:55.870 --> 00:36:56.710
which you fly.

00:36:56.710 --> 00:36:58.430
In this case, you're rotating.

00:36:58.430 --> 00:37:01.440
It's a really immersive
experience.

00:37:01.440 --> 00:37:04.570
And it doesn't just apply
to real estate sites.

00:37:04.570 --> 00:37:07.806
For example, there was one
recently for the Tour de

00:37:07.806 --> 00:37:10.630
France, which is starting next
week, where it basically flies

00:37:10.630 --> 00:37:12.230
over the entire route.

00:37:12.230 --> 00:37:14.660
It's a really awesome way
to visualize your data.

00:37:14.660 --> 00:37:16.700
And I think it's quite
underutilized.

00:37:16.700 --> 00:37:17.510
JOSH LIVNI: Yeah.

00:37:17.510 --> 00:37:20.150
So definitely check
out the Earth API.

00:37:20.150 --> 00:37:24.160
If you already have an existing
Maps V3 website, then

00:37:24.160 --> 00:37:27.220
it's really easy to add an
Earth button that just

00:37:27.220 --> 00:37:29.710
magically has most of your
markers, polygons, other

00:37:29.710 --> 00:37:31.790
overlays, and so forth,
appear for the user.

00:37:31.790 --> 00:37:32.240
NABIL NAGHDY: You
can fly through.

00:37:32.240 --> 00:37:37.070
JOSH LIVNI: And then, you can
add these effects by accessing

00:37:37.070 --> 00:37:40.210
that Google Earth itself.

00:37:40.210 --> 00:37:43.680
But if you want to use that
library, you can go to the

00:37:43.680 --> 00:37:45.360
Maps V3 Utility Libraries.

00:37:45.360 --> 00:37:48.850
And there's an open source
library called Earth.

00:37:48.850 --> 00:37:51.620
And that will basically, in a
couple of lines of code, let

00:37:51.620 --> 00:37:54.095
you add the Earth button, so
that you don't have to change

00:37:54.095 --> 00:37:55.180
anything in your existing
content.

00:37:55.180 --> 00:37:57.010
But users who click on Earth--
or you can programmatically

00:37:57.010 --> 00:37:59.920
enable it-- can fly around
Earth, seeing most of the

00:37:59.920 --> 00:38:02.810
stuff that you've already
put on the map.

00:38:02.810 --> 00:38:03.610
All right.

00:38:03.610 --> 00:38:05.530
NABIL NAGHDY: All right.

00:38:05.530 --> 00:38:06.880
We seem to have a--

00:38:06.880 --> 00:38:09.905
JOSH LIVNI: Different window.

00:38:09.905 --> 00:38:13.260
NABIL NAGHDY: We seem to have
wrapped up a little bit early.

00:38:13.260 --> 00:38:16.010
So I guess, are there
any questions?

00:38:16.010 --> 00:38:19.780
Or I mean, what we wanted to
show in this session was how

00:38:19.780 --> 00:38:22.935
important it is to give
your maps an extra

00:38:22.935 --> 00:38:25.520
bit of oomph, really.

00:38:25.520 --> 00:38:28.320
I guess it's really
easy to implement

00:38:28.320 --> 00:38:29.100
some of these features.

00:38:29.100 --> 00:38:30.960
Some of them require
a bit of work.

00:38:30.960 --> 00:38:34.810
But in a weekend, for example,
you can turn a regular red pin

00:38:34.810 --> 00:38:38.560
on a map-type of website into a
really immersive interactive

00:38:38.560 --> 00:38:39.860
experience for your users.

00:38:39.860 --> 00:38:43.020
And you'd really stand out in
your specific vertical.

00:38:43.020 --> 00:38:46.350
So hopefully, some of these
examples have been

00:38:46.350 --> 00:38:48.340
useful to you guys.

00:38:48.340 --> 00:38:48.930
Thank you.

00:38:48.930 --> 00:38:49.888
JOSH LIVNI: All right.

00:38:49.888 --> 00:38:51.138
Thanks a lot.

00:38:54.199 --> 00:38:56.170
And if you have questions,
just line up

00:38:56.170 --> 00:38:57.150
behind the mics there.

00:38:57.150 --> 00:39:01.550
And I'm very curious to hear
what you have to say.

00:39:04.520 --> 00:39:07.350
AUDIENCE: The loading of the
libraries, now you have to

00:39:07.350 --> 00:39:09.080
load them with the API.

00:39:09.080 --> 00:39:12.010
Would it be possible in the
future to load them after the

00:39:12.010 --> 00:39:13.605
API has been loaded?

00:39:13.605 --> 00:39:15.260
JOSH LIVNI: Are you talking
about the Earth API?

00:39:15.260 --> 00:39:19.250
AUDIENCE: The Maps API, the
libraries, like Places and--

00:39:19.250 --> 00:39:20.190
JOSH LIVNI: Oh, sorry.

00:39:20.190 --> 00:39:23.590
So you're saying, if you want to
use Places, you have to add

00:39:23.590 --> 00:39:25.750
the Libraries equals Places,
or Panoramio, and so forth.

00:39:25.750 --> 00:39:26.350
AUDIENCE: Exactly.

00:39:26.350 --> 00:39:29.450
JOSH LIVNI: Yeah, so we do that
by design, in order to

00:39:29.450 --> 00:39:32.630
send you the minimal amount of
JavaScript to get the fastest

00:39:32.630 --> 00:39:33.360
loading times.

00:39:33.360 --> 00:39:34.480
If you're in a mobile device,
we don't want to

00:39:34.480 --> 00:39:35.800
send over an extra--

00:39:35.800 --> 00:39:36.570
NABIL NAGHDY: All
the libraries.

00:39:36.570 --> 00:39:39.260
JOSH LIVNI: --5K of data
that you don't need.

00:39:39.260 --> 00:39:41.480
And so some sites need
some things.

00:39:41.480 --> 00:39:42.980
Some sites need some
other things.

00:39:42.980 --> 00:39:44.860
If you don't need the Weather
and Cloud layer, we don't want

00:39:44.860 --> 00:39:47.360
to send those bits over
to your users.

00:39:47.360 --> 00:39:49.460
AUDIENCE: Could it be enabled
so you could load them

00:39:49.460 --> 00:39:52.680
dynamically by, instead of
typing, Google.load--

00:39:52.680 --> 00:39:54.330
JOSH LIVNI: Oh, I think I
see what you're saying.

00:39:54.330 --> 00:39:56.050
So you've already instantiated
your Map instance.

00:39:56.050 --> 00:39:57.610
And you want add in the--
that's a really

00:39:57.610 --> 00:39:59.460
good feature request.

00:39:59.460 --> 00:40:00.450
Please use the Issue Tracker.

00:40:00.450 --> 00:40:01.660
I don't know if you were
in the earlier session.

00:40:01.660 --> 00:40:05.010
We should point this out again,
that the Issue Tracker,

00:40:05.010 --> 00:40:05.950
we really take it seriously.

00:40:05.950 --> 00:40:09.210
So if you have a good feature
request like that, search for

00:40:09.210 --> 00:40:11.620
the Maps API Issue Tracker,
add it in.

00:40:11.620 --> 00:40:14.650
The more people who star it,
such as Transit, then the

00:40:14.650 --> 00:40:16.490
harder we work to get
it out to you guys.

00:40:16.490 --> 00:40:17.610
So I see your question now.

00:40:17.610 --> 00:40:19.750
It was a really good one.

00:40:19.750 --> 00:40:20.570
AUDIENCE: Hi.

00:40:20.570 --> 00:40:24.570
I was wondering if there's any
plans or info on if the

00:40:24.570 --> 00:40:26.940
traffic data will be available
through the API?

00:40:26.940 --> 00:40:28.130
I know there's a
Traffic layer.

00:40:28.130 --> 00:40:30.130
But if you could just get access
to the raw traffic

00:40:30.130 --> 00:40:34.161
data, without the Map layer.

00:40:34.161 --> 00:40:35.690
NABIL NAGHDY: Right now, that's
probably not in the

00:40:35.690 --> 00:40:39.560
cards, to just give just the
amount of traffic of--

00:40:39.560 --> 00:40:43.460
AUDIENCE: Yeah, if you could
give it a certain geo area and

00:40:43.460 --> 00:40:44.000
get the traffic for--

00:40:44.000 --> 00:40:44.980
NABIL NAGHDY: Most
probably, not.

00:40:44.980 --> 00:40:48.350
AUDIENCE: OK, thanks.

00:40:48.350 --> 00:40:53.870
AUDIENCE: So you talk about
styling for Maps.

00:40:53.870 --> 00:40:56.260
Can you do this on
the Android Maps?

00:40:59.018 --> 00:41:00.330
NABIL NAGHDY: Good question.

00:41:00.330 --> 00:41:03.660
Right now, you can do it-- if
you're obviously in the

00:41:03.660 --> 00:41:08.460
browser, the JavaScript itself
would be restyled.

00:41:08.460 --> 00:41:12.165
But in App, using WebView
or iOS using WebKit, no.

00:41:12.165 --> 00:41:12.995
AUDIENCE: OK.

00:41:12.995 --> 00:41:14.822
All right, thanks.

00:41:14.822 --> 00:41:19.030
AUDIENCE: Hello, this is
Ho Ming from Hong Kong.

00:41:19.030 --> 00:41:20.500
Two quick questions.

00:41:20.500 --> 00:41:23.400
First, you showed about the
Elevation API and then got

00:41:23.400 --> 00:41:26.030
some red lines depicting
the elevation.

00:41:26.030 --> 00:41:29.960
Can I change the color or change
the style of such path?

00:41:29.960 --> 00:41:30.530
JOSH LIVNI: Yeah.

00:41:30.530 --> 00:41:32.210
I kind of skipped over that
part because there was a

00:41:32.210 --> 00:41:35.180
session earlier on the Spatial
Data Visualization.

00:41:35.180 --> 00:41:37.240
I think all these sessions are
going to be live, at the end

00:41:37.240 --> 00:41:38.910
of the day, on YouTube, that
you can check out.

00:41:38.910 --> 00:41:41.920
And Enoch there went into some
really great detail on exactly

00:41:41.920 --> 00:41:45.180
how he created the symbols along
that polyline and all of

00:41:45.180 --> 00:41:47.470
the symbology options
that you can apply

00:41:47.470 --> 00:41:48.520
to markers and polylines.

00:41:48.520 --> 00:41:50.620
So the short answer is,
yes, absolutely.

00:41:50.620 --> 00:41:53.230
You can change those
dynamically, set the color

00:41:53.230 --> 00:41:55.360
stroke, all of these
different things, a

00:41:55.360 --> 00:41:56.900
super flexible library.

00:41:56.900 --> 00:41:58.170
I don't want to show the
code and kind of

00:41:58.170 --> 00:41:59.680
repeat a previous session.

00:41:59.680 --> 00:42:00.880
But it's live.

00:42:00.880 --> 00:42:02.320
And I think the documentation,
if you want

00:42:02.320 --> 00:42:03.360
to see the new symbols.

00:42:03.360 --> 00:42:07.500
Or for that particular example,
check out the YouTube

00:42:07.500 --> 00:42:08.795
video of the Spatial--

00:42:08.795 --> 00:42:10.730
AUDIENCE: And another quick
question is on the Transit

00:42:10.730 --> 00:42:14.240
information, because I have
recently entered San Francisco

00:42:14.240 --> 00:42:16.470
and found the transit
information really useful.

00:42:16.470 --> 00:42:19.350
But for Hong Kong, the
transit information

00:42:19.350 --> 00:42:21.260
seems not too accurate.

00:42:21.260 --> 00:42:24.290
Is there any way that we, as a
user of the Google Maps and

00:42:24.290 --> 00:42:29.330
[? key ?] user, can help improve
some data or the tour

00:42:29.330 --> 00:42:30.750
information?

00:42:30.750 --> 00:42:33.400
NABIL NAGHDY: Report a Problem,
those are actually

00:42:33.400 --> 00:42:34.410
quite frequently used.

00:42:34.410 --> 00:42:35.840
And they're really
valuable to us.

00:42:35.840 --> 00:42:37.220
So if you see something
wrong--

00:42:37.220 --> 00:42:38.930
for example, if you go to
maps.google.com, and you

00:42:38.930 --> 00:42:42.460
search for transit directions
in Hong Kong, if you see

00:42:42.460 --> 00:42:44.980
something is incorrect, if you
click Report a Problem and

00:42:44.980 --> 00:42:47.160
say, this station is in the
wrong place, or these are the

00:42:47.160 --> 00:42:50.200
wrong times, then that will then
go to a team which will

00:42:50.200 --> 00:42:52.060
actually look to
implement that.

00:42:52.060 --> 00:42:54.610
And if it's either, A, something
wrong with the way

00:42:54.610 --> 00:42:57.390
we're using the data, or, B,
faulty data, we'll find the

00:42:57.390 --> 00:42:59.800
source of the problem, and
then try and fix it.

00:42:59.800 --> 00:43:01.950
And then, whatever is on
maps.google.com is

00:43:01.950 --> 00:43:03.363
mirrored in the API.

00:43:03.363 --> 00:43:04.090
AUDIENCE: OK.

00:43:04.090 --> 00:43:04.882
Thank you.

00:43:04.882 --> 00:43:05.726
NABIL NAGHDY: Yeah.

00:43:05.726 --> 00:43:06.900
AUDIENCE: Hi there.

00:43:06.900 --> 00:43:08.910
It's for the Distance Matrix.

00:43:08.910 --> 00:43:11.590
You said there was different
methods of transit.

00:43:11.590 --> 00:43:13.140
Can you go across continents?

00:43:13.140 --> 00:43:15.440
Like, I'd say, by boat,
airplane, or something, with

00:43:15.440 --> 00:43:16.720
the Distance Matrix?

00:43:16.720 --> 00:43:17.600
JOSH LIVNI: No.

00:43:17.600 --> 00:43:21.020
So you can use driving, walking,
and if you're in the

00:43:21.020 --> 00:43:23.450
United States or Canada,
bicycling.

00:43:23.450 --> 00:43:26.100
And those are the only modes
of transit available.

00:43:26.100 --> 00:43:29.640
And you cannot drive, walk, or
bicycle across the ocean.

00:43:29.640 --> 00:43:33.020
NABIL NAGHDY: If you were, for
example, in Spain, and you

00:43:33.020 --> 00:43:36.890
were to, say, get Distance
Matrix from Spain to Russia,

00:43:36.890 --> 00:43:38.710
wherever we can normally
return a directions

00:43:38.710 --> 00:43:39.820
request, then yes.

00:43:39.820 --> 00:43:43.570
But across continents, we
don't do cross vehicle.

00:43:43.570 --> 00:43:46.250
JOSH LIVNI: But I think your
question was maybe, like,

00:43:46.250 --> 00:43:46.970
airline data.

00:43:46.970 --> 00:43:47.760
Could that get fit in?

00:43:47.760 --> 00:43:48.950
AUDIENCE: Airline or
boat data or--

00:43:48.950 --> 00:43:50.360
JOSH LIVNI: That is a really
interesting feature request.

00:43:50.360 --> 00:43:50.830
But no.

00:43:50.830 --> 00:43:53.380
Right now, it's just
limited to the same

00:43:53.380 --> 00:43:54.320
three travel modes.

00:43:54.320 --> 00:43:58.130
NABIL NAGHDY: And it's also
adding things like planes and

00:43:58.130 --> 00:44:00.110
things like that to Directions
Request itself, which

00:44:00.110 --> 00:44:01.130
currently isn't available.

00:44:01.130 --> 00:44:01.940
AUDIENCE: All right, thanks.

00:44:01.940 --> 00:44:03.260
AUDIENCE: Yeah.

00:44:03.260 --> 00:44:07.470
The Distance Matrix
was very cool.

00:44:07.470 --> 00:44:10.490
Do you have anything that would
help people implement a

00:44:10.490 --> 00:44:13.630
walk score, which is--

00:44:13.630 --> 00:44:14.820
JOSH LIVNI: Yes.

00:44:14.820 --> 00:44:19.130
So the Places API, combined with
the Distance Matrix, you

00:44:19.130 --> 00:44:19.960
might use something--

00:44:19.960 --> 00:44:22.390
I think what you're asking
is getting to the point I

00:44:22.390 --> 00:44:25.080
mentioned earlier of approximate
density of things

00:44:25.080 --> 00:44:26.560
that are around you,
in a given area.

00:44:26.560 --> 00:44:28.580
But of course, if you're on one
side of the river and all

00:44:28.580 --> 00:44:30.160
the density is on the other side
of the river, and there's

00:44:30.160 --> 00:44:32.780
no bridges nearby, that's
not really useful.

00:44:32.780 --> 00:44:36.100
So could you figure out what are
the closest places, as the

00:44:36.100 --> 00:44:39.750
crow flies, as we say in the
States, and then, also use the

00:44:39.750 --> 00:44:42.590
Distance Matrix to assign
the travel time,

00:44:42.590 --> 00:44:43.580
by different modes?

00:44:43.580 --> 00:44:45.810
So if you're just a bicycling
person, you might get

00:44:45.810 --> 00:44:46.970
different weightings for
different places.

00:44:46.970 --> 00:44:48.750
And absolutely, yeah, it's
a great use for that.

00:44:48.750 --> 00:44:51.718
AUDIENCE: Thanks.

00:44:51.718 --> 00:44:55.560
AUDIENCE: Hi, quick question
about the usage of Google Maps

00:44:55.560 --> 00:44:57.080
and the API on Android.

00:44:57.080 --> 00:45:00.430
So you basically said that all
of these things are available

00:45:00.430 --> 00:45:04.520
on Android, using the standard
browser or via Chrome.

00:45:04.520 --> 00:45:07.870
But I found it, from a user
experience, to be kind to

00:45:07.870 --> 00:45:10.800
lacking, as opposed to the
desktop experience.

00:45:10.800 --> 00:45:14.910
Now, Android has this MapView
native component.

00:45:14.910 --> 00:45:18.210
But that obviously doesn't work
with the Google Maps API.

00:45:18.210 --> 00:45:20.380
So what is the kind
of approach?

00:45:20.380 --> 00:45:22.560
Given the fact that more and
more people are starting to

00:45:22.560 --> 00:45:29.155
use smartphones, tablets, what
is the role of Google Maps in

00:45:29.155 --> 00:45:30.390
that respect?

00:45:30.390 --> 00:45:32.860
NABIL NAGHDY: That's a
very good question.

00:45:32.860 --> 00:45:39.250
Right now, we are kind of
promoting the use of--

00:45:39.250 --> 00:45:41.170
I guess, for native
applications, you

00:45:41.170 --> 00:45:42.420
would access WebView.

00:45:45.980 --> 00:45:48.200
Through the web, you'd access
the JavaScript.

00:45:48.200 --> 00:45:50.310
I'd say--

00:45:50.310 --> 00:45:51.085
that's a very good question.

00:45:51.085 --> 00:45:52.610
JOSH LIVNI: It would really
just depend a lot on your

00:45:52.610 --> 00:45:56.410
application, depending on the
amount of data you're loading,

00:45:56.410 --> 00:45:57.660
if it's super important
that you have

00:45:57.660 --> 00:45:58.530
an immediate load-time.

00:45:58.530 --> 00:46:00.760
We realize there's an
additional lag.

00:46:00.760 --> 00:46:02.700
Obviously, you're going to be
loading the JavaScript library

00:46:02.700 --> 00:46:03.950
if you go through
the Maps API.

00:46:03.950 --> 00:46:05.680
On the other hand, you get
a bunch of new features.

00:46:05.680 --> 00:46:09.010
So the focus today was on the
new features of the Maps API.

00:46:09.010 --> 00:46:11.440
We don't have anything new to
announce, right now, about the

00:46:11.440 --> 00:46:13.520
other options that you
might have natively.

00:46:13.520 --> 00:46:15.590
So it's kind of just a tough
call for you, that makes the

00:46:15.590 --> 00:46:16.420
best sense for your
application.

00:46:16.420 --> 00:46:17.900
AUDIENCE: Right, OK.

00:46:17.900 --> 00:46:18.230
Thanks.

00:46:18.230 --> 00:46:20.372
NABIL NAGHDY: Good answer.

00:46:20.372 --> 00:46:23.190
AUDIENCE: Can you make some
comment about the library.

00:46:23.190 --> 00:46:26.990
You mentioned a Store Location
library versus a Fusion Table

00:46:26.990 --> 00:46:30.610
and versus the Vector API, which
you are about to release

00:46:30.610 --> 00:46:32.620
very soon, later this year.

00:46:32.620 --> 00:46:34.690
The way you use it-- and I know
Fusion Table is mainly

00:46:34.690 --> 00:46:36.120
for small business.

00:46:36.120 --> 00:46:38.250
What about the library
you mentioned?

00:46:38.250 --> 00:46:40.660
JOSH LIVNI: Yeah, so the Store
Locator library-- the point I

00:46:40.660 --> 00:46:43.590
was trying to make when I was
loading up the houses there

00:46:43.590 --> 00:46:44.950
with the Static Data Feed--

00:46:44.950 --> 00:46:46.380
and it could also potentially
be a dynamic

00:46:46.380 --> 00:46:48.150
feed, such as a database.

00:46:48.150 --> 00:46:49.420
It's that it could be
arbitrary database.

00:46:49.420 --> 00:46:52.300
The Store Locator library is
completely agnostic, regarding

00:46:52.300 --> 00:46:53.640
where you're loading
your data from.

00:46:53.640 --> 00:46:54.840
It doesn't care at all.

00:46:54.840 --> 00:46:57.080
And we make it pretty easy
to be very pluggable with

00:46:57.080 --> 00:46:58.230
different data sources.

00:46:58.230 --> 00:47:01.020
A kind of a separate question
from the Store Locator library

00:47:01.020 --> 00:47:04.520
is, what's the best spatial
database of choice.

00:47:04.520 --> 00:47:06.170
If you're an enterprise
customer, looking for certain

00:47:06.170 --> 00:47:07.690
sort of features, more consumer,
looking for a

00:47:07.690 --> 00:47:11.570
different set of features, you
run your own MySQL database

00:47:11.570 --> 00:47:12.500
in-house and so forth.

00:47:12.500 --> 00:47:14.220
It's kind of a separate question
of what best fits

00:47:14.220 --> 00:47:14.920
your needs.

00:47:14.920 --> 00:47:18.600
But this particular example was
just a lot of people have

00:47:18.600 --> 00:47:21.430
a spreadsheet for a couple
of hundred stores.

00:47:21.430 --> 00:47:23.700
Or they might have a MySQL
instance already up and

00:47:23.700 --> 00:47:25.360
running, that they're doing
all their stuff in with a

00:47:25.360 --> 00:47:26.580
million places.

00:47:26.580 --> 00:47:28.420
And we don't care at all with
the Store Locator library.

00:47:28.420 --> 00:47:29.540
Just plug it right in.

00:47:29.540 --> 00:47:32.900
AUDIENCE: Do you have any
kind of capacity?

00:47:32.900 --> 00:47:36.120
What's the size of data it
can host, the library?

00:47:36.120 --> 00:47:37.270
JOSH LIVNI: Oh, yeah.

00:47:37.270 --> 00:47:39.970
So the static data feed, you're
basically loading all

00:47:39.970 --> 00:47:40.545
the data at once.

00:47:40.545 --> 00:47:43.110
So by the time you're loading
a few thousand things, you

00:47:43.110 --> 00:47:46.500
have kind of bandwidth issues,
as a bunch of data you have to

00:47:46.500 --> 00:47:48.850
load and then parsing time.

00:47:48.850 --> 00:47:52.810
And so, if it's a static data
feed, I would say, less than a

00:47:52.810 --> 00:47:54.620
couple thousand, depending
on the browser,

00:47:54.620 --> 00:47:56.130
maybe 1,000 or less.

00:47:56.130 --> 00:47:59.380
Otherwise, go for a dynamic data
feed, something that you

00:47:59.380 --> 00:48:02.370
can request a smaller
subset at a time.

00:48:02.370 --> 00:48:04.500
It very much varies, if you're
going to be on the desktop or

00:48:04.500 --> 00:48:06.180
mobile, bandwidth
and so forth.

00:48:06.180 --> 00:48:08.990
But general rule of thumb, I
like to think, although you

00:48:08.990 --> 00:48:11.160
can certainly do more, tens of
thousands of markers sent

00:48:11.160 --> 00:48:14.360
over, why send over more than
1,000 at a time if someone is

00:48:14.360 --> 00:48:15.230
only going to look at 10?

00:48:15.230 --> 00:48:16.022
It doesn't make sense.

00:48:16.022 --> 00:48:17.970
AUDIENCE: So pretty
much it's the same

00:48:17.970 --> 00:48:19.490
range of Fusion Table?

00:48:19.490 --> 00:48:20.145
JOSH LIVNI: Yeah.

00:48:20.145 --> 00:48:23.080
AUDIENCE: OK, thank you.

00:48:23.080 --> 00:48:24.050
AUDIENCE: Hi.

00:48:24.050 --> 00:48:27.170
With Dart coming out, how
seamless do you see the

00:48:27.170 --> 00:48:31.020
transition being between Dart
and JavaScript, as far as

00:48:31.020 --> 00:48:33.724
these APIs go?

00:48:33.724 --> 00:48:36.980
JOSH LIVNI: So as far as these
APIs go, we don't have any

00:48:36.980 --> 00:48:38.140
Dart-specific plans.

00:48:38.140 --> 00:48:42.330
As far as the really good
general question of JavaScript

00:48:42.330 --> 00:48:44.680
and Dart, there's a whole series
of Dart sessions, where

00:48:44.680 --> 00:48:46.230
they're focusing just on that.

00:48:46.230 --> 00:48:49.100
And they're going to talk a lot
about best practices and

00:48:49.100 --> 00:48:50.210
exactly that kind of question.

00:48:50.210 --> 00:48:53.240
So I'd say, that is probably
a better place to go.

00:48:53.240 --> 00:48:54.145
I'm not a Dart expert.

00:48:54.145 --> 00:48:56.154
AUDIENCE: OK.

00:48:56.154 --> 00:48:58.450
AUDIENCE: Can you talk a little
bit about interactions

00:48:58.450 --> 00:49:00.756
between different layers
on the map?

00:49:00.756 --> 00:49:02.426
NABIL NAGHDY: Interactions
of different layers.

00:49:02.426 --> 00:49:03.586
JOSH LIVNI: Such as?

00:49:03.586 --> 00:49:08.250
AUDIENCE: Such as, if there is
a store and a bunch of people

00:49:08.250 --> 00:49:12.260
are checking in at another
store, like within five miles

00:49:12.260 --> 00:49:15.516
from that, you could do
something about that.

00:49:15.516 --> 00:49:18.300
JOSH LIVNI: So there's
a few answers.

00:49:18.300 --> 00:49:21.765
Yes, if you're using the Places
API, there's a number

00:49:21.765 --> 00:49:23.710
of things you can do, including
something that we

00:49:23.710 --> 00:49:24.200
call a Check-in.

00:49:24.200 --> 00:49:25.800
It's a little bit of
a confusing name.

00:49:25.800 --> 00:49:27.950
And it kind of, basically,
bumps the ranking.

00:49:27.950 --> 00:49:30.550
So you have people on your
app checking in.

00:49:30.550 --> 00:49:32.290
Like, you have a
bunch of users.

00:49:32.290 --> 00:49:34.450
They're doing some
types of events.

00:49:34.450 --> 00:49:35.720
And there's a bunch of places
being returned.

00:49:35.720 --> 00:49:37.440
And they're checking in,
through your app.

00:49:37.440 --> 00:49:40.980
You can create a posted
Check-in, to the Places API,

00:49:40.980 --> 00:49:41.990
to that place.

00:49:41.990 --> 00:49:45.360
And future users of your app
will see that place's

00:49:45.360 --> 00:49:47.500
prominence ranked higher.

00:49:47.500 --> 00:49:49.810
So if everyone is hitting up one
coffee shop through your

00:49:49.810 --> 00:49:53.360
app, next person who searches
will see that one.

00:49:53.360 --> 00:49:55.650
I don't know if that was your
question exactly, but that

00:49:55.650 --> 00:49:58.271
would be kind of one
approach to that.

00:49:58.271 --> 00:50:02.530
AUDIENCE: Something a little bit
more abstract, like just

00:50:02.530 --> 00:50:05.830
if maybe a bunch of things are
happening at a certain

00:50:05.830 --> 00:50:08.870
location and there also happens
to be something else

00:50:08.870 --> 00:50:11.440
happening on a certain location,
but it's on a

00:50:11.440 --> 00:50:12.470
different layer.

00:50:12.470 --> 00:50:14.630
How do you have those
two interact?

00:50:14.630 --> 00:50:17.380
NABIL NAGHDY: As in, if you had
something on the Traffic

00:50:17.380 --> 00:50:20.100
layer, if you had a bunch of--
like a grid, and then you had

00:50:20.100 --> 00:50:21.500
something on the
Bicycle layer.

00:50:21.500 --> 00:50:23.310
For example, can you combine
[INAUDIBLE]?

00:50:23.310 --> 00:50:24.490
JOSH LIVNI: Why don't
we talk after?

00:50:24.490 --> 00:50:26.180
I'm not 100% sure I
got your question.

00:50:26.180 --> 00:50:26.870
But we might.

00:50:26.870 --> 00:50:29.240
And we can talk about it after,
just in case there's

00:50:29.240 --> 00:50:29.930
any other last-minute
questions here.

00:50:29.930 --> 00:50:30.330
We're almost out of time.

00:50:30.330 --> 00:50:34.140
NABIL NAGHDY: We'll also be at
the office hours, as well.

00:50:34.140 --> 00:50:35.800
In the Geo--

00:50:35.800 --> 00:50:36.750
down there.

00:50:36.750 --> 00:50:38.805
JOSH LIVNI: Any other
last-minute questions?

00:50:38.805 --> 00:50:39.615
OK.

00:50:39.615 --> 00:50:40.950
Well, I think we'll
wrap it up.

00:50:40.950 --> 00:50:41.610
Thanks a lot, guys.

00:50:41.610 --> 00:50:43.120
We really appreciate the time.

00:50:43.120 --> 00:50:44.520
And yeah, please take
advantage of

00:50:44.520 --> 00:50:45.340
some of these services.

00:50:45.340 --> 00:50:47.150
They're really simple, add a
lot of value to your maps.

