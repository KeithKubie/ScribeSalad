WEBVTT
Kind: captions
Language: en

00:00:00.230 --> 00:00:01.550
The answer here is no.

00:00:01.550 --> 00:00:03.275
The Dumaflache cannot exist.

00:00:03.275 --> 00:00:07.318
It is possible to have models of
computation that halt on every input.

00:00:07.318 --> 00:00:11.016
Finite state automata and
pushdown automata have this property.

00:00:11.016 --> 00:00:14.542
And it is possible to have models of
computation that can interpret their own

00:00:14.542 --> 00:00:15.323
descriptions.

00:00:15.323 --> 00:00:18.170
And negate the results
like Turing machines.

00:00:18.170 --> 00:00:22.260
But, as the diagonalization argument
shows, you can't have both.

00:00:22.260 --> 00:00:23.940
If the Dumaflache did exist,

00:00:23.940 --> 00:00:27.260
then we could create a program like
this one, which I'll call Inverse D.

00:00:28.360 --> 00:00:32.950
It takes a Dumaflache description as
input and simulates it on itself.

00:00:32.950 --> 00:00:37.560
If this simulation accepts,
then InvD rejects.

00:00:37.560 --> 00:00:41.990
And if the simulation rejects,
then inverse D accepts.

00:00:41.990 --> 00:00:44.490
The Dumaflache model
allows us to do this, and

00:00:44.490 --> 00:00:46.930
the Dumaflache model must always halt.

00:00:46.930 --> 00:00:50.220
Yet what happens when we run
inverse D on its own description?

00:00:51.520 --> 00:00:56.980
If inverse D on itself accepts, well
then it must have rejected this time and

00:00:56.980 --> 00:00:57.920
that can't have happened.

00:00:58.920 --> 00:01:02.750
On the other hand, if it rejected
then it must have accepted this time,

00:01:02.750 --> 00:01:03.870
and that can't happen.

00:01:05.110 --> 00:01:07.120
Hence the dumaflache can not exist.

