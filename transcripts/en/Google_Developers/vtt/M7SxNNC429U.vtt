WEBVTT
Kind: captions
Language: en

00:00:05.934 --> 00:00:08.167
Abrams: Well, good afternoon,
and thank you for coming.

00:00:08.167 --> 00:00:10.801
Uh, I really appreciate you
taking the time.

00:00:10.801 --> 00:00:14.968
Uh, so I'm curious--how many--
we have Android and App Engine,

00:00:14.968 --> 00:00:18.634
so the Android guys were
supposed to sit over here...

00:00:18.634 --> 00:00:20.968
No, no. Seriously,
how many of you are And--

00:00:20.968 --> 00:00:23.234
primarily Android developers?

00:00:23.234 --> 00:00:26.501
Okay, and how many
are primarily App Engine?

00:00:26.501 --> 00:00:28.634
Okay, so Android is winning
a little bit.

00:00:28.634 --> 00:00:30.567
That's what we expected.
Okay, great.

00:00:30.567 --> 00:00:32.601
Um, so I'm--I'm Brad Abrams.

00:00:32.601 --> 00:00:34.601
I'm the product manager
for, uh,

00:00:34.601 --> 00:00:37.334
the Cloud-based developer
tools that we have.

00:00:40.000 --> 00:00:43.000
man: Turn the microphone on.
Abrams: Mic, mic...

00:00:43.000 --> 00:00:45.000
Ducrohet: Mic? Yes.
Uh, I'm Xavier Ducrohet.

00:00:45.000 --> 00:00:47.000
I'm the lead
for the developer tools

00:00:47.000 --> 00:00:49.300
and SDK for Android
at Google.

00:00:49.300 --> 00:00:51.033
So why are we here?

00:00:51.033 --> 00:00:53.801
Well, a lot of you are mobile
developers, so that's good.

00:00:53.801 --> 00:00:56.200
Uh, I've been at Android
for, like, four years,

00:00:56.200 --> 00:00:58.534
so as you can expect,
I've had a lot of devices.

00:00:58.534 --> 00:01:01.000
I started, you know, with--
way back before the G1,

00:01:01.000 --> 00:01:03.300
I had a prototype--
actually, I had several of them.

00:01:03.300 --> 00:01:06.400
Then I moved to several G1s
that had myTouch, Droid,

00:01:06.400 --> 00:01:09.133
Nexus One, Nexus S,
and, well,

00:01:09.133 --> 00:01:11.501
every time I get a new phone,
it's always the same story--

00:01:11.501 --> 00:01:13.501
all my data that's
in the cloud, great,

00:01:13.501 --> 00:01:15.767
it's directly on my new phone.

00:01:15.767 --> 00:01:17.901
Otherwise, well,
I have to reinstall apps,

00:01:17.901 --> 00:01:20.834
reinstall data, and it's really
a bad story for the users.

00:01:20.834 --> 00:01:22.834
And now that there
are tablets--

00:01:22.834 --> 00:01:25.167
and I heard that some of you
may have some tablets, too--

00:01:25.167 --> 00:01:27.467
Um, you're going to want
to have your application

00:01:27.467 --> 00:01:30.033
working on a tablet, and you
do something on your tablet

00:01:30.033 --> 00:01:32.133
because you're at home
and you have it with you,

00:01:32.133 --> 00:01:34.367
and then you go somewhere
where you only have your phone,

00:01:34.367 --> 00:01:36.667
and you want to have
all your data seamlessly.

00:01:36.667 --> 00:01:39.934
Abrams: Uh, and I'm, uh--
the reason why I'm here

00:01:39.934 --> 00:01:42.501
is I've been a web developer
for a lot of years,

00:01:42.501 --> 00:01:44.501
and I just love the web,

00:01:44.501 --> 00:01:46.501
and one of the things
about the web I really like

00:01:46.501 --> 00:01:48.634
is the stateless nature
of the web.

00:01:48.634 --> 00:01:51.434
And once you've built a web app
in PHP or whatnot,

00:01:51.434 --> 00:01:53.434
I can go use that app
from anywhere,

00:01:53.434 --> 00:01:55.634
and my--my state carries,
and, uh,

00:01:55.634 --> 00:01:57.868
some constraints of the web
made that possible.

00:01:57.868 --> 00:02:00.033
And when I came to Google
about a year ago,

00:02:00.033 --> 00:02:02.200
I just fell in love
with Android.

00:02:02.200 --> 00:02:05.167
It's just a fantastic platform,
and I love--I love my phone,

00:02:05.167 --> 00:02:07.267
but I was
a little bit disappointed

00:02:07.267 --> 00:02:09.434
with some of the apps,
you know, like,

00:02:09.434 --> 00:02:12.801
I bust through a certain level
of Angry Birds, and, you know,

00:02:12.801 --> 00:02:15.133
on one device, and then I--
I can't--

00:02:15.133 --> 00:02:17.501
I-I can't access that level
on another device.

00:02:17.501 --> 00:02:21.300
And so I was--I was, uh,
not happy with that experience,

00:02:21.300 --> 00:02:23.868
um, and so it was--it was around
the holidays, right?

00:02:23.868 --> 00:02:25.501
Ducrohet: Yep.

00:02:25.501 --> 00:02:27.567
Abrams: Um, that we--
Xavier and I and several others,

00:02:27.567 --> 00:02:29.601
um, started talking about,

00:02:29.601 --> 00:02:32.634
What could we do to make this
a better experience? So...

00:02:32.634 --> 00:02:35.000
Ducrohet: All right,
so, um, now if you're coming

00:02:35.000 --> 00:02:37.000
from the mobile
developer side,

00:02:37.000 --> 00:02:39.000
uh, when you think about putting
a cloud component

00:02:39.000 --> 00:02:41.501
into your application,

00:02:41.501 --> 00:02:43.501
you're probably going to have
a lot of questions.

00:02:43.501 --> 00:02:45.868
Uh, the first one is going to be
cloud equal datacenters,

00:02:45.868 --> 00:02:47.901
you know,
dealing with machines, you know,

00:02:47.901 --> 00:02:50.033
CPU cost, bandwidth cost,
and all of that,

00:02:50.033 --> 00:02:52.200
and that's probably
a bit scary at first.

00:02:52.200 --> 00:02:55.167
Then there's simply
coding for a cloud.

00:02:55.167 --> 00:02:57.501
Um, if you're coding
for a small device,

00:02:57.501 --> 00:02:59.367
you're probably
not used to coding

00:02:59.367 --> 00:03:01.667
for hundreds of CPUs
at the same time.

00:03:01.667 --> 00:03:03.701
Uh, and then there's
the question of security

00:03:03.701 --> 00:03:05.601
and authentication,
both, you know,

00:03:05.601 --> 00:03:07.834
making sure that your app
actually connects

00:03:07.834 --> 00:03:10.000
to the, you know,
data of its user,

00:03:10.000 --> 00:03:12.033
and, you know,
not another user,

00:03:12.033 --> 00:03:14.200
and also from a user
perspective, on the phone,

00:03:14.200 --> 00:03:16.267
you want the experience
to be really good.

00:03:16.267 --> 00:03:18.701
Typing a password on a phone--
not so good.

00:03:18.701 --> 00:03:21.367
Um, it's possible, but it's not
a great user experience.

00:03:21.367 --> 00:03:24.100
And finally, one of the other
questions is purely practical--

00:03:24.100 --> 00:03:27.701
you're coming from Android, uh,
you know Java, you know Eclipse,

00:03:27.701 --> 00:03:30.868
are you going to have to learn
about new tools?

00:03:30.868 --> 00:03:33.701
Abrams: You know, Xavier,
those are fantastic questions.

00:03:33.701 --> 00:03:35.868
You know, I anticipated
you might have those questions.

00:03:35.868 --> 00:03:37.667
Ducrohet: Huh, surprising.

00:03:37.667 --> 00:03:39.901
Abrams: So, uh, obviously there
are a lot of solutions out there

00:03:39.901 --> 00:03:41.834
for building cloud-based apps,

00:03:41.834 --> 00:03:44.033
and from an Android
ecosystem perspective,

00:03:44.033 --> 00:03:46.334
use whatever, um,
solution you think makes sense.

00:03:46.334 --> 00:03:48.701
Uh, we're gonna talk a little
bit about App Engine today,

00:03:48.701 --> 00:03:52.734
uh, and App Engine, just to
address a lot of those points,

00:03:52.734 --> 00:03:56.167
from a cost perspective,
App Engine is absolutely free

00:03:56.167 --> 00:03:58.434
to get started,
so just like Android is free,

00:03:58.434 --> 00:04:00.767
App Engine is free,
and you can go build the app

00:04:00.767 --> 00:04:03.400
that we're gonna build onstage
for free today with App Engine.

00:04:03.400 --> 00:04:06.734
And then your costs scale
with your--with your usage,

00:04:06.734 --> 00:04:09.467
so as you have an app
that's amazingly popular,

00:04:09.467 --> 00:04:11.634
uh, you know App Engine
can keep up with that,

00:04:11.634 --> 00:04:14.234
uh, and the costs will be
linear with that.

00:04:14.234 --> 00:04:17.200
Um, and so this--
we built App Engine

00:04:17.200 --> 00:04:20.067
in--on top of Google scale,

00:04:20.067 --> 00:04:22.334
so we built it to run
Google services,

00:04:22.334 --> 00:04:25.701
uh, so the datastore
that I'll be using in the demo

00:04:25.701 --> 00:04:29.534
is built on the same technology
that the index use--

00:04:29.534 --> 00:04:32.601
that Google's index uses,
that GMAIL uses it.

00:04:32.601 --> 00:04:36.067
So it is a highly scalable,
highly available system.

00:04:36.067 --> 00:04:40.067
Um, and then one point
that I think is very important

00:04:40.067 --> 00:04:42.400
is that from
a security perspective,

00:04:42.400 --> 00:04:44.100
we've built App Engine,

00:04:44.100 --> 00:04:47.000
as well as Android,
to have a really good

00:04:47.000 --> 00:04:49.467
first-class notion
of the Google authentication

00:04:49.467 --> 00:04:51.133
and Google identification,

00:04:51.133 --> 00:04:54.267
and that helps tremendously when
you build out the applications.

00:04:54.267 --> 00:04:56.267
And in terms
of ease of use, well,

00:04:56.267 --> 00:04:58.267
we have the Google plugin
for Eclipse, um...

00:04:58.267 --> 00:05:00.300
How many people have already
used the Google plugin

00:05:00.300 --> 00:05:02.167
for Eclipse before?

00:05:02.167 --> 00:05:04.267
Okay, yeah, so a good
number of you,

00:05:04.267 --> 00:05:06.334
so I don't have to tell you,
it's--a few of you that haven't,

00:05:06.334 --> 00:05:08.067
um, it's a fantastic, uh,

00:05:08.067 --> 00:05:10.000
Java-based
development experience

00:05:10.000 --> 00:05:12.200
for building
App Engine applications,

00:05:12.200 --> 00:05:14.767
so whether they're
backed by GWT or not,

00:05:14.767 --> 00:05:18.434
you can use them for Java-based
App Engine applications.

00:05:18.434 --> 00:05:21.267
There's a local development
time server in it

00:05:21.267 --> 00:05:24.367
that lets you debug, uh,
and build applications locally.

00:05:24.367 --> 00:05:27.501
Uh, there's functionality
to push to production,

00:05:27.501 --> 00:05:30.767
uh, to App Engine,
and you get--

00:05:30.767 --> 00:05:32.868
somebody was asking earlier
about Google APIs--

00:05:32.868 --> 00:05:36.367
in the latest version of
the Google plugin for Eclipse.

00:05:36.367 --> 00:05:39.968
There's very easy access to
the whole range of Google APIs,

00:05:39.968 --> 00:05:42.767
so we make it easy to discover
and use those APIs.

00:05:42.767 --> 00:05:47.200
Um, and then we just added
a visual drag and drop designer

00:05:47.200 --> 00:05:48.834
for building the client side--

00:05:48.834 --> 00:05:50.734
the GWT client side
of those apps,

00:05:50.734 --> 00:05:52.567
uh, which we'll show you
a little bit about.

00:05:52.567 --> 00:05:54.601
And then it's--
it's really widely used

00:05:54.601 --> 00:05:56.400
for App Engine development.

00:05:56.400 --> 00:05:58.467
Ducrohet: All right,
that sounds excellent.

00:05:58.467 --> 00:06:00.467
So let's build an app, uh...

00:06:00.467 --> 00:06:02.767
Abrams: Yeah, what would you
like that app to look like?

00:06:02.767 --> 00:06:04.934
What do you think
the architecture should be?

00:06:04.934 --> 00:06:06.901
Ducrohet: So you're going to
want a cloud back end, right?

00:06:06.901 --> 00:06:08.501
That's why you're here.

00:06:08.501 --> 00:06:10.501
So you want to have
an App Engine component

00:06:10.501 --> 00:06:12.400
with the storage,
uh, so let's--

00:06:12.400 --> 00:06:14.400
well, that's a pretty simple--
you know, basic, simple--

00:06:14.400 --> 00:06:16.400
let's make a task application.

00:06:16.400 --> 00:06:18.400
Abrams: Y-you know who needs
a task-tracking app?

00:06:18.400 --> 00:06:20.067
Ducrohet: Who?

00:06:20.067 --> 00:06:22.067
Abrams: You know, uh, Larry Page
just got a new job.

00:06:22.067 --> 00:06:24.467
He's our--he's our new C.E.O.,
and as C.E.O., you know,

00:06:24.467 --> 00:06:26.434
he's got a lot
to keep up with nowadays.

00:06:26.434 --> 00:06:28.067
Ducrohet: That's true.

00:06:28.067 --> 00:06:30.067
Abrams: So I think maybe
as our sort of gift to Larry,

00:06:30.067 --> 00:06:32.067
uh, we should--we should
build him a task-tracking app.

00:06:32.067 --> 00:06:33.734
What do you think?
Ducrohet: All right,

00:06:33.734 --> 00:06:35.734
Let's do that.
Yes, that's a good idea.

00:06:35.734 --> 00:06:37.734
Abrams: All right, all right.
Ducrohet: All right,

00:06:37.734 --> 00:06:39.734
so all tasks--so we're going
to have that App Engine server,

00:06:39.734 --> 00:06:41.501
where we--
we will store those tasks,

00:06:41.501 --> 00:06:43.000
and then we'll have
two clients.

00:06:43.000 --> 00:06:45.000
One of them will be, uh,
an Android client, of course,

00:06:45.000 --> 00:06:47.067
and then the other one
will be a web client

00:06:47.067 --> 00:06:49.067
built with, uh, GWT.

00:06:49.067 --> 00:06:52.467
Um, so...

00:06:52.467 --> 00:06:54.467
You know, the other thing
that we want to do

00:06:54.467 --> 00:06:56.467
is that we want
this Android application

00:06:56.467 --> 00:06:58.100
to be a really good citizen.

00:06:58.100 --> 00:07:00.067
Now we have a technology
in Android called C2DM.

00:07:00.067 --> 00:07:01.801
It's Cloud to Device Messaging,

00:07:01.801 --> 00:07:05.434
and it's a way for the, uh,
server to notify

00:07:05.434 --> 00:07:07.501
your application
in a very efficient way.

00:07:07.501 --> 00:07:09.300
You don't want your
Android application

00:07:09.300 --> 00:07:11.300
to regularly go and talk
to the server, saying,

00:07:11.300 --> 00:07:12.901
"Hey, did something happen?

00:07:12.901 --> 00:07:14.901
What about now,
did something happen again?"

00:07:14.901 --> 00:07:17.000
It's like, you just want to wait
for the server to tell you

00:07:17.000 --> 00:07:19.000
something happened,
you know, talk to me again,

00:07:19.000 --> 00:07:21.834
and then, you know, you do
actually exchange some data.

00:07:21.834 --> 00:07:24.167
So this is the C2DM service.

00:07:24.167 --> 00:07:27.000
Um, it basically opens
a connection,

00:07:27.000 --> 00:07:28.901
and you have
one single connection

00:07:28.901 --> 00:07:31.467
that is shared by every
C2DM-enabled application,

00:07:31.467 --> 00:07:34.033
so it's much better, uh,
not having every application

00:07:34.033 --> 00:07:35.934
every now and then
waking up the device,

00:07:35.934 --> 00:07:37.901
and then the device
goes back to sleep,

00:07:37.901 --> 00:07:40.100
and then ten minutes later,
another application wakes it up,

00:07:40.100 --> 00:07:41.934
so C2DM
is much better.

00:07:41.934 --> 00:07:43.934
So what we see here
in that diagram

00:07:43.934 --> 00:07:45.734
is that we have
a lot of components

00:07:45.734 --> 00:07:47.734
that are already handled
by the current tools.

00:07:47.734 --> 00:07:50.367
Uh, App Engine server
and the web client--

00:07:50.367 --> 00:07:52.801
it's handled by GP
that Brad just talked about.

00:07:52.801 --> 00:07:54.801
Uh, on the top left,
we have the Android client,

00:07:54.801 --> 00:07:57.734
which is handled by the tools
that my team is responsible for,

00:07:57.734 --> 00:07:59.968
the Android developer tool--
the ADT plugin.

00:07:59.968 --> 00:08:02.434
And in the middle,
there's those arrows there

00:08:02.434 --> 00:08:05.434
that are going to be some sort
of network communication,

00:08:05.434 --> 00:08:07.601
and I don't know anything
about those.

00:08:07.601 --> 00:08:09.367
Abrams: Yeah, those arrows--

00:08:09.367 --> 00:08:11.501
those arrows on the diagram
seem to be the hard part,

00:08:11.501 --> 00:08:13.667
but as Xav said, the other
pieces are sort of taken care of

00:08:13.667 --> 00:08:15.501
by other tools,

00:08:15.501 --> 00:08:17.567
but it's really integrating
these pieces that's hard.

00:08:17.567 --> 00:08:21.801
So, um, I'm happy to announce
that we have a Beta release--

00:08:21.801 --> 00:08:25.067
we just posted it a few hours
ago--where's Chris?

00:08:25.067 --> 00:08:28.634
Yes--um, a Beta of GP 2.4,

00:08:28.634 --> 00:08:31.701
and it's got built-in support
for Android in particular.

00:08:31.701 --> 00:08:36.534
Uh, the RPC, uh, the Android
to App Engine line,

00:08:36.534 --> 00:08:38.834
uh, we've got built-in support
for that,

00:08:38.834 --> 00:08:40.400
and we've got
seamless integration

00:08:40.400 --> 00:08:42.067
of Cloud to Device Messaging,

00:08:42.067 --> 00:08:44.133
and those bits are available
for you today.

00:08:44.133 --> 00:08:46.868
Uh, you can go to that URL
and download them right now,

00:08:46.868 --> 00:08:49.434
uh, during the talk,
assuming the WiFi holds out.

00:08:49.434 --> 00:08:52.200
[laughter]
Abrams: So, um,

00:08:52.200 --> 00:08:54.000
So I--but, you know,
there's really,

00:08:54.000 --> 00:08:56.000
I think probably the best way
is to kind of show a demo,

00:08:56.000 --> 00:08:57.501
huh, you think?

00:08:57.501 --> 00:08:59.267
Ducrohet: Yeah,
let's just build an app.

00:08:59.267 --> 00:09:01.334
Abrams: Yeah, so, uh,
do you want to switch over?

00:09:01.334 --> 00:09:02.934
Ducrohet: Yes.

00:09:02.934 --> 00:09:04.934
Abrams: Okay, so what I--
we're gonna spend the bulk

00:09:04.934 --> 00:09:08.234
of the rest of the time here
in actual code, in Eclipse,

00:09:08.234 --> 00:09:11.501
and this is the Eclipse Helios
release--the latest release.

00:09:11.501 --> 00:09:15.200
Uh, I have the latest Android
development tools installed,

00:09:15.200 --> 00:09:19.100
and I have, uh,
this Beta version of GPE,

00:09:19.100 --> 00:09:23.234
uh, which I'll mention is quite
hot off the presses,

00:09:23.234 --> 00:09:25.467
um, so we thought
about showing--

00:09:25.467 --> 00:09:27.767
well, we'll just kind of
do slides or something--

00:09:27.767 --> 00:09:29.801
but I thought, no, no, no--
the I/O audience--

00:09:29.801 --> 00:09:32.133
they want to see
the raw bits, right?

00:09:32.133 --> 00:09:34.534
They want to see,
no matter how new they are,

00:09:34.534 --> 00:09:38.934
and they will forgive me if...
[laughter]

00:09:38.934 --> 00:09:40.934
Abrams: Okay,
anyway, let's press on.

00:09:40.934 --> 00:09:44.467
Um, so we'll come in,
and we'll say, "File, New,"

00:09:44.467 --> 00:09:48.400
um, and we'll create--there's
a new menu option under Android

00:09:48.400 --> 00:09:52.267
called the, um, "App Engine
Connected Android Application."

00:09:52.267 --> 00:09:56.200
Um, and we'll call our app
"Cloud Tasks,"

00:09:56.200 --> 00:09:58.601
to build that task-tracking app
for Larry Page.

00:09:58.601 --> 00:10:00.901
And what it's gonna do
is it--

00:10:00.901 --> 00:10:04.133
you'll see, it creates--
Whoa, that didn't work out.

00:10:04.133 --> 00:10:08.434
It creates two projects--
uh, an Android application,

00:10:08.434 --> 00:10:10.067
and an App Engine application,

00:10:10.067 --> 00:10:12.133
um, and it's just building
those right now.

00:10:12.133 --> 00:10:13.868
Um, it will work out.

00:10:13.868 --> 00:10:15.667
And--and they are connected.

00:10:15.667 --> 00:10:18.334
They're tied in a couple of--
in a couple of places.

00:10:18.334 --> 00:10:22.501
So first, we'll just come in,
um, and say, "Debug As,"

00:10:22.501 --> 00:10:24.200
and then we're gonna
select this new item,

00:10:24.200 --> 00:10:27.067
called "Local App Engine
Connected Application."

00:10:27.067 --> 00:10:29.067
And I'm just gonna
spend a few minutes

00:10:29.067 --> 00:10:31.200
showing you what you get
out of the box.

00:10:31.200 --> 00:10:33.667
So just while
that's coming up, uh,

00:10:33.667 --> 00:10:35.767
we'll come in here
and look at the source,

00:10:35.767 --> 00:10:38.400
and you see in the server,
there's a couple of pieces here.

00:10:38.400 --> 00:10:41.234
A couple of these files
are based on handling

00:10:41.234 --> 00:10:44.734
the Cloud to Device Messaging,
um, functionality.

00:10:44.734 --> 00:10:46.734
How many people
have--have checked out

00:10:46.734 --> 00:10:48.467
Cloud to Device Messaging?

00:10:48.467 --> 00:10:50.467
And how many people have
successfully gotten it to work

00:10:50.467 --> 00:10:52.033
in your app?

00:10:52.033 --> 00:10:53.868
Okay, okay, that's
a pretty good percentage.

00:10:53.868 --> 00:10:55.601
Um, it--it's a very
powerful technology,

00:10:55.601 --> 00:10:57.601
but it is tricky
to get it to work,

00:10:57.601 --> 00:10:59.734
and everything you need to do
on your server.

00:10:59.734 --> 00:11:03.200
Google just handles proxying,
um, uh, messages,

00:11:03.200 --> 00:11:05.334
so you have to handle a lot
on your server.

00:11:05.334 --> 00:11:07.434
And then there's this--

00:11:07.434 --> 00:11:08.701
draw your attention to
this HelloWorldService,

00:11:08.701 --> 00:11:11.067
and that's an RPC service
that we have,

00:11:11.067 --> 00:11:15.400
and it--it just sends
the--the user's, uh, name.

00:11:15.400 --> 00:11:17.300
Okay, so we should
have it up now.

00:11:17.300 --> 00:11:19.534
The first thing we're gonna do
is go ahead and log in,

00:11:19.534 --> 00:11:23.567
and many Android devices, um,
have Google, uh,

00:11:23.567 --> 00:11:25.400
accounts already selected,

00:11:25.400 --> 00:11:27.367
and we're gonna go ahead
and use, uh--

00:11:27.367 --> 00:11:30.100
We've got Larry Page's account,
so we're gonna use that.

00:11:30.100 --> 00:11:32.067
So I'm gonna go ahead
and log in,

00:11:32.067 --> 00:11:33.701
and while that's happening,

00:11:33.701 --> 00:11:36.868
I'll flip over
to the, uh, web app.

00:11:36.868 --> 00:11:40.901
Um, so this is--
there's also a GWT--

00:11:40.901 --> 00:11:44.334
that's a Google Web
Toolkit-based AJAX client,

00:11:44.334 --> 00:11:46.434
uh, for the--
for the same service.

00:11:46.434 --> 00:11:48.934
Ducrohet: I want to go back
to the Android for a minute.

00:11:48.934 --> 00:11:52.367
As you saw, there's a concept
of account inside Android,

00:11:52.367 --> 00:11:55.033
and so there's an API
to get the accounts,

00:11:55.033 --> 00:11:57.033
and in that case,
that application just queries

00:11:57.033 --> 00:11:59.033
for the Google type of account,

00:11:59.033 --> 00:12:01.033
and we just display that
to the user.

00:12:01.033 --> 00:12:04.100
You don't have to enter--to make
your user enter a password,

00:12:04.100 --> 00:12:06.100
because, you know, when you
login the first time

00:12:06.100 --> 00:12:08.100
on your phone, you entered
that password already,

00:12:08.100 --> 00:12:09.801
so you don't have
to enter it again,

00:12:09.801 --> 00:12:11.334
and that's the type
of experience

00:12:11.334 --> 00:12:13.501
that I was, you know,
mentioning earlier. Um--

00:12:13.501 --> 00:12:16.400
Abrams: That was fantastic.
Thank you for jumping in there.

00:12:16.400 --> 00:12:20.067
Okay, so we'll log in
to the, um, client,

00:12:20.067 --> 00:12:23.834
uh, and I--you know,
we need to log in as Larry Page.

00:12:23.834 --> 00:12:25.834
Let's see, it's LarryPage20...
Ducrohet: 11, yes.

00:12:25.834 --> 00:12:27.834
Abrams: 2011. I get that wrong.
Yeah, so 2011--

00:12:27.834 --> 00:12:30.934
that was the year Larry
kind of ascended to the--

00:12:30.934 --> 00:12:32.934
to the throne there.
Ducrohet: The throne, yes.

00:12:32.934 --> 00:12:34.934
Abrams: Um, so we'll go ahead
and log in,

00:12:34.934 --> 00:12:38.767
and notice that it just had me
enter the user I.D.,

00:12:38.767 --> 00:12:41.000
because we're running
in App Engine test mode, right?

00:12:41.000 --> 00:12:42.567
so we're running it locally.

00:12:42.567 --> 00:12:44.868
When we deploy that, it's gonna
really ask us to log in,

00:12:44.868 --> 00:12:47.934
and then we really will have
to get Larry's, uh, password.

00:12:47.934 --> 00:12:50.634
So, um, let's see.

00:12:50.634 --> 00:12:54.767
Uh, we get to log in here.

00:12:54.767 --> 00:12:58.367
I had a little, um, snafu,
so let's log in again here.

00:12:58.367 --> 00:12:59.901
And what you--what you should--

00:12:59.901 --> 00:13:02.100
what's happening under
the covers when we log in

00:13:02.100 --> 00:13:05.067
is it's actually doing
a register with C2DM,

00:13:05.067 --> 00:13:08.701
so it's sending a message
from the emulator here, um,

00:13:08.701 --> 00:13:11.934
through the--through
the internet to Google services,

00:13:11.934 --> 00:13:14.200
and then back to, um,

00:13:14.200 --> 00:13:16.434
back to the local
App Engine instance

00:13:16.434 --> 00:13:19.033
we're running on this machine.
So you're seeing this machine--

00:13:19.033 --> 00:13:22.300
the emulator talk to the local
App Engine on this instance.

00:13:22.300 --> 00:13:24.501
And if I'm successful
registering,

00:13:24.501 --> 00:13:26.501
you'll see a notification
right here

00:13:26.501 --> 00:13:28.801
that says the registration
was successful.

00:13:28.801 --> 00:13:32.167
So, um, that's kind of
the first thing.

00:13:32.167 --> 00:13:35.767
Um, now--now that we're
logged in and successful--

00:13:35.767 --> 00:13:38.100
I'll go ahead and clear that
so we don't get confused later.

00:13:38.100 --> 00:13:40.601
Now I can click "Say Hello,"

00:13:40.601 --> 00:13:44.767
and what that's gonna do
is an RPC call from the client,

00:13:44.767 --> 00:13:46.434
uh, up to the server.

00:13:46.434 --> 00:13:48.167
And what's really interesting
about this,

00:13:48.167 --> 00:13:50.367
is notice what it says.
It says,

00:13:50.367 --> 00:13:53.167
"Hello, Larry Page,"
because it knows who I am.

00:13:53.167 --> 00:13:55.033
It knows
my Google authentication.

00:13:55.033 --> 00:13:58.133
Because Android uses
Google authentication,

00:13:58.133 --> 00:14:00.200
and App Engine uses
Google authentication,

00:14:00.200 --> 00:14:02.133
so they have
a shared notion.

00:14:02.133 --> 00:14:04.334
And it's not like we're sending
name and password over the--

00:14:04.334 --> 00:14:06.000
over the wire,
we're sending

00:14:06.000 --> 00:14:08.100
some really large prime number,
or something, right?

00:14:08.100 --> 00:14:11.133
Ducrohet: Yes.
Abrams: Okay, and, uh, and--

00:14:11.133 --> 00:14:12.734
Ducrohet: Sort of.

00:14:12.734 --> 00:14:14.734
Abrams: Uh, where is it?
In the web client, uh,

00:14:14.734 --> 00:14:17.801
we have basically the same
experience on the web client,

00:14:17.801 --> 00:14:20.133
so you can build one RPC layer

00:14:20.133 --> 00:14:22.767
that works for your Android
client and your web client.

00:14:22.767 --> 00:14:24.801
Um, and then we--

00:14:24.801 --> 00:14:26.767
the other cool thing
we can do,

00:14:26.767 --> 00:14:28.634
is we just have
this test screen--

00:14:28.634 --> 00:14:31.567
2011, right? at GMAIL.

00:14:31.567 --> 00:14:33.267
Whoops.

00:14:33.267 --> 00:14:35.467
And we can say hi,

00:14:35.467 --> 00:14:38.834
and basically,
as soon as I can send that,

00:14:38.834 --> 00:14:41.567
it's successfully saying--
you see right up here,

00:14:41.567 --> 00:14:44.334
and then there should be
the message--"Hi."

00:14:44.334 --> 00:14:46.200
So that--what you get--

00:14:46.200 --> 00:14:50.000
you get all of that just by
saying, "File, New, Experience."

00:14:50.000 --> 00:14:52.100
So you already have
C2DM wired up,

00:14:52.100 --> 00:14:54.434
and you already have an example
of an RPC service,

00:14:54.434 --> 00:14:57.501
uh, up and going,
so you can go and clone that,

00:14:57.501 --> 00:15:00.601
and see--really debug this thing
and understand how it works,

00:15:00.601 --> 00:15:03.000
just by saying, "File, New."
But, you know,

00:15:03.000 --> 00:15:05.000
I don't think Larry's
gonna be happy with just this.

00:15:05.000 --> 00:15:06.801
Ducrohet: [chuckles]
Probably not, yes.

00:15:06.801 --> 00:15:08.400
Abrams: We--we probably
need to keep going.

00:15:08.400 --> 00:15:10.000
Ducrohet: Yes, yes.

00:15:10.000 --> 00:15:11.801
Abrams: So let's keep going
a little bit, um,

00:15:11.801 --> 00:15:13.501
and go ahead and flush out.
I'll start an ad--

00:15:13.501 --> 00:15:15.400
I think when you build
a task-tracking app,

00:15:15.400 --> 00:15:17.300
the first thing you need
is, well, a task,

00:15:17.300 --> 00:15:19.501
and this is just a plain
Java object,

00:15:19.501 --> 00:15:23.167
a couple of annotations on it
with due date,

00:15:23.167 --> 00:15:26.934
but there's no, uh, persistent,
specific code in here.

00:15:26.934 --> 00:15:29.467
This is just a plain old--
a plain old object,

00:15:29.467 --> 00:15:33.000
and we're gonna use this, uh,
as our data transfer mechanism,

00:15:33.000 --> 00:15:35.000
so it's just a plain class.

00:15:35.000 --> 00:15:38.000
And then we're gonna show,
um....

00:15:38.000 --> 00:15:39.501
Whoa, what am I doing?

00:15:39.501 --> 00:15:42.000
We're gonna do--use our new
RPC tooling wizard,

00:15:42.000 --> 00:15:45.634
and that's under
the Google, uh, node.

00:15:45.634 --> 00:15:49.634
And now what we've done is we've
examined the server project,

00:15:49.634 --> 00:15:51.100
and we've looked for--

00:15:51.100 --> 00:15:53.100
looked at all the classes
that are in there

00:15:53.100 --> 00:15:55.934
and found the ones
that are entities,

00:15:55.934 --> 00:15:58.133
that are either marked with--
Uh, what's it called?

00:15:58.133 --> 00:16:00.467
PersistenceCapable,
or, um,

00:16:00.467 --> 00:16:03.200
whatever--
Serializable.

00:16:03.200 --> 00:16:07.033
Anyway, uh, with a couple
of annotations, um,

00:16:07.033 --> 00:16:09.801
that work for--
with our RPC layer,

00:16:09.801 --> 00:16:13.834
and we found those, and then
when I click "Okay" here,

00:16:13.834 --> 00:16:17.300
it's gonna create, um,
basically, query,

00:16:17.300 --> 00:16:20.167
plus "create," "update,"
and "delete."

00:16:20.167 --> 00:16:21.934
Uh, we looked at a bunch
of applications

00:16:21.934 --> 00:16:23.601
with Android apps
and web apps,

00:16:23.601 --> 00:16:26.634
and we found this to be
a very common pattern to do,

00:16:26.634 --> 00:16:28.801
Uh, so let's just look at it
a little bit.

00:16:28.801 --> 00:16:32.434
So basically, we have "create,"
"read," "update,"

00:16:32.434 --> 00:16:34.501
"delete," and "query," um,

00:16:34.501 --> 00:16:36.534
and then in addition
to that,

00:16:36.534 --> 00:16:39.901
we have, into shared code,

00:16:39.901 --> 00:16:43.868
um, we have generated
the appropriate client proxies,

00:16:43.868 --> 00:16:47.000
the TaskProxy
and the request service,

00:16:47.000 --> 00:16:50.033
that are the client version
to be able to call this.

00:16:50.033 --> 00:16:52.734
So all the calling code
and the server code

00:16:52.734 --> 00:16:54.467
was--was generated for you.

00:16:54.467 --> 00:16:57.934
So, uh, and we'll drill into
exactly what those look like

00:16:57.934 --> 00:16:59.634
in a little bit.

00:16:59.634 --> 00:17:02.434
But, um, so now you can
do your data storage

00:17:02.434 --> 00:17:04.167
however you want to.

00:17:04.167 --> 00:17:06.000
You want to use Amazon S3,

00:17:06.000 --> 00:17:08.167
you want to use
your own local database,

00:17:08.167 --> 00:17:10.133
you have some local--some legacy
system that you're using,

00:17:10.133 --> 00:17:12.334
you need to store data--
perfectly fine.

00:17:12.334 --> 00:17:14.200
Do whatever you want.

00:17:14.200 --> 00:17:16.834
Um, I'm gonna show you using
App Engines datastore.

00:17:16.834 --> 00:17:20.133
It's a highly scalable,
NoSQL datastore,

00:17:20.133 --> 00:17:23.501
um, and I'll just--
just to save the typing,

00:17:23.501 --> 00:17:25.400
I'll just drag this file in,

00:17:25.400 --> 00:17:28.601
um, and I'll show you bits
and pieces of that as we go.

00:17:28.601 --> 00:17:30.968
So I'm just gonna create
DataStore--db,

00:17:30.968 --> 00:17:35.367
new DataStore,

00:17:35.367 --> 00:17:39.934
and let's see if it--oh, yeah,
and it needs to be static.

00:17:39.934 --> 00:17:43.033
Whoa.
Okay, so now we have that.

00:17:43.033 --> 00:17:45.801
Now let's look at how we
implement each one of these.

00:17:45.801 --> 00:17:48.701
So query is just gonna be, um,

00:17:48.701 --> 00:17:52.734
db.findall, and it--
it's instructive.

00:17:52.734 --> 00:17:54.534
Let's look at what
that looks like.

00:17:54.534 --> 00:17:57.400
So this is the implementation
of findall in that--

00:17:57.400 --> 00:17:59.767
um, in that datastore class,

00:17:59.767 --> 00:18:02.434
and all we're doing here
is this query.

00:18:02.434 --> 00:18:04.734
We're using persistence manager
and doing a query,

00:18:04.734 --> 00:18:06.534
and if you've done
SQL development,

00:18:06.534 --> 00:18:08.667
it looks very similar
to you probably.

00:18:08.667 --> 00:18:11.567
Um, what we're doing
is we're selecting from,

00:18:11.567 --> 00:18:13.934
and the table is just the name
of the task,

00:18:13.934 --> 00:18:15.868
uh, type that we put in,

00:18:15.868 --> 00:18:18.100
because we store some
other stuff in this datastore.

00:18:18.100 --> 00:18:21.100
Um, if you splunk
in the C2DM code,

00:18:21.100 --> 00:18:23.968
you'll see we're storing
the C2DM registrations

00:18:23.968 --> 00:18:25.934
in the same datastore,

00:18:25.934 --> 00:18:27.934
so we need that, uh,
unique I.D. there.

00:18:27.934 --> 00:18:30.200
Um, and then we're gonna
filter out--

00:18:30.200 --> 00:18:32.501
we're only gonna
return those tasks

00:18:32.501 --> 00:18:35.200
that match
the current user's I.D.

00:18:35.200 --> 00:18:38.834
So, again, App Engine knows
who is making this request,

00:18:38.834 --> 00:18:41.501
so it's gonna return
only those tasks

00:18:41.501 --> 00:18:43.167
that match the I.D.
of the person

00:18:43.167 --> 00:18:45.067
who's making the request.

00:18:45.067 --> 00:18:47.000
So for example,
uh, Larry Page

00:18:47.000 --> 00:18:49.267
may not want you
to see all of his tasks,

00:18:49.267 --> 00:18:51.734
so that's kind of our--
our authentication mechanism.

00:18:51.734 --> 00:18:53.667
And you notice
it's very basic,

00:18:53.667 --> 00:18:55.667
and it--and it works, um,

00:18:55.667 --> 00:18:57.834
for kind of large
data sets, too.

00:18:57.834 --> 00:18:59.868
Ducrohet: So that's
what I would write

00:18:59.868 --> 00:19:01.801
if I had, like,
hundred millions of users.

00:19:01.801 --> 00:19:03.434
Abrams: Yes, yeah, so we--
I mean, obviously,

00:19:03.434 --> 00:19:05.934
we're only gonna have a couple
of users here today with this,

00:19:05.934 --> 00:19:08.801
but this exact pattern,
we have, uh,

00:19:08.801 --> 00:19:11.767
App Engine customers use--

00:19:11.767 --> 00:19:14.267
storing hundreds of millions
of entities in the datastore

00:19:14.267 --> 00:19:16.601
using code that looks
very much like this,

00:19:16.601 --> 00:19:18.534
um, same basic model.

00:19:18.534 --> 00:19:21.400
So App Engine is really tuned
for this sort of experience.

00:19:21.400 --> 00:19:24.267
Um, and then delete, um,

00:19:24.267 --> 00:19:26.868
this is pretty basic.
We're just--

00:19:26.868 --> 00:19:28.968
We're just gonna go ahead
and delete it.

00:19:28.968 --> 00:19:31.167
I'm gonna do just a little bit
of business logic here,

00:19:31.167 --> 00:19:33.734
get the user I.D.,
uh, out of the task

00:19:33.734 --> 00:19:35.734
that's passed back
from the client,

00:19:35.734 --> 00:19:38.367
um, and notice here
that I don't have to deal

00:19:38.367 --> 00:19:40.534
with any serialization logic.

00:19:40.534 --> 00:19:43.734
Like, I need to know what task
to delete, but it's fine--

00:19:43.734 --> 00:19:46.267
like, the framework
handles all that for me.

00:19:46.267 --> 00:19:48.968
Um, and this is where you could
do something like tombstoning,

00:19:48.968 --> 00:19:52.067
or copy this data,
or do some permissions thing.

00:19:52.067 --> 00:19:54.267
There's a place for
that business logic now.

00:19:54.267 --> 00:19:58.300
Um, and then update is also
equally easy.

00:19:58.300 --> 00:20:01.868
Uh, we're just gonna call
db.update of that item,

00:20:01.868 --> 00:20:04.968
and that again, it just stores
the item in the datastore.

00:20:04.968 --> 00:20:07.934
And the datastore handles
matching of the I.D.'s

00:20:07.934 --> 00:20:10.567
to make sure they're right,
and then doing the update.

00:20:10.567 --> 00:20:14.734
But, um, because we're
using the e-mail address

00:20:14.734 --> 00:20:16.701
as a security precaution,

00:20:16.701 --> 00:20:19.367
we want to make sure
that you can't put, uh,

00:20:19.367 --> 00:20:21.267
something on Larry Page's
task list,

00:20:21.267 --> 00:20:23.934
that you can only put things
on your own task list.

00:20:23.934 --> 00:20:27.167
So no matter how the task
comes in,

00:20:27.167 --> 00:20:30.968
we want to set, um,
the e-mail address--

00:20:30.968 --> 00:20:33.300
oh, it was somewhere--
yeah, we want to set

00:20:33.300 --> 00:20:36.567
the e-mail address
to the user's e-mail address.

00:20:36.567 --> 00:20:38.300
So I'll just use
this utility function

00:20:38.300 --> 00:20:40.234
to get the user's
e-mail address.

00:20:40.234 --> 00:20:42.868
Um, and that's a really
powerful notion.

00:20:42.868 --> 00:20:46.367
Notice that the--obviously,
the clients that Xavier and I

00:20:46.367 --> 00:20:48.067
are gonna write
are gonna be well-behaved,

00:20:48.067 --> 00:20:50.801
but this is just JSON
over HTTP,

00:20:50.801 --> 00:20:52.634
so really, any client--

00:20:52.634 --> 00:20:54.601
anybody could come
and try to hit the service,

00:20:54.601 --> 00:20:56.934
so we need to do
some security here.

00:20:56.934 --> 00:20:59.567
But notice how easy it was.
It was amazingly easy,

00:20:59.567 --> 00:21:01.667
because App Engine and Android

00:21:01.667 --> 00:21:04.033
share that common
authentication mechanism.

00:21:04.033 --> 00:21:06.033
And just--
just to drive it home,

00:21:06.033 --> 00:21:09.667
see how simple that "Get e-mail
address" method is?

00:21:09.667 --> 00:21:13.934
Because App Engine already knows
the user who's logged in,

00:21:13.934 --> 00:21:16.434
so we just have to pull
the e-mail address out of there.

00:21:16.434 --> 00:21:20.734
Okay, so we'll, um,
go through and do "read" here.

00:21:20.734 --> 00:21:23.067
Uh, and so the read
is just to show you

00:21:23.067 --> 00:21:27.334
that you can, um, take
parameters to these methods.

00:21:27.334 --> 00:21:31.033
And then "create" is--
is mildly interesting.

00:21:31.033 --> 00:21:33.367
What we're gonna do
is actually do an update

00:21:33.367 --> 00:21:36.734
of a new--a new task.

00:21:36.734 --> 00:21:40.067
So what we're gonna do
is create a brand-new task,

00:21:40.067 --> 00:21:42.534
send--round-trip that
to the datastore,

00:21:42.534 --> 00:21:44.701
and that'll give it
a unique I.D.,

00:21:44.701 --> 00:21:46.634
uh, in the datastore sense,

00:21:46.634 --> 00:21:48.601
and then when we have
the unique I.D.,

00:21:48.601 --> 00:21:50.634
when we later come
and update it,

00:21:50.634 --> 00:21:52.767
we'll know which one--
which task we're updating.

00:21:52.767 --> 00:21:54.834
So, you know, Xavier,
we've got an RPC layer here.

00:21:54.834 --> 00:21:56.767
We've got a data layer.

00:21:56.767 --> 00:21:58.901
I think we're ready for you
to build the Android app.

00:21:58.901 --> 00:22:00.868
Ducrohet: Yes, well,
it looked a little bit too easy,

00:22:00.868 --> 00:22:02.434
and, you know,
when I build my app,

00:22:02.434 --> 00:22:04.434
I want to make sure that there's
at least some task in there,

00:22:04.434 --> 00:22:06.000
so that I can make sure
that it works.

00:22:06.000 --> 00:22:07.801
Abrams: Oh, I see. I see.
Ducrohet: So, uh, yeah.

00:22:07.801 --> 00:22:09.501
Abrams: You don't trust me.
Ducrohet: Well... no.

00:22:09.501 --> 00:22:11.501
Abrams: You think that I made
a bug here, and you don't want--

00:22:11.501 --> 00:22:13.501
Ducrohet: No, no, it--
it just looks a bit too easy.

00:22:13.501 --> 00:22:15.000
Abrams: That's okay,
that's okay.

00:22:15.000 --> 00:22:17.000
I mean, there's a lot
of people here. I understand.

00:22:17.000 --> 00:22:18.501
Ducrohet: Yes, yes. Exactly.

00:22:18.501 --> 00:22:20.501
Abrams: So let me demonstrate
that it works.

00:22:20.501 --> 00:22:22.000
I have this
client directory, too,

00:22:22.000 --> 00:22:25.801
and it is where that
default GWT-based client,

00:22:25.801 --> 00:22:27.501
uh, was created in.

00:22:27.501 --> 00:22:29.501
And again, you don't
have to use GWT.

00:22:29.501 --> 00:22:33.033
Um, uh, our team builds GWT. We
happen to think it's fantastic.

00:22:33.033 --> 00:22:35.000
But you--you can use
whatever you want

00:22:35.000 --> 00:22:37.067
and the system still--
still works.

00:22:37.067 --> 00:22:40.067
So, um, I made some
small modifications

00:22:40.067 --> 00:22:43.801
to the client, uh,
the same client that we saw.

00:22:43.801 --> 00:22:46.734
Uh, and basically what I did
is implement buttons

00:22:46.734 --> 00:22:48.734
for "create," "update,"
and "delete."

00:22:48.734 --> 00:22:51.400
And I just want you to look
at the code really briefly

00:22:51.400 --> 00:22:53.267
for, uh, each one of these.

00:22:53.267 --> 00:22:55.067
So for "create,"
what we're gonna do

00:22:55.067 --> 00:22:57.334
is call
that TaskRequest factory.

00:22:57.334 --> 00:23:00.934
That was created by the serve--
by the RPC tooling wizard.

00:23:00.934 --> 00:23:04.367
When I said I wanted task,
it created that in shared code.

00:23:04.367 --> 00:23:07.234
Uh, and so we're able
to access this from--from GWT.

00:23:07.234 --> 00:23:10.067
Um, and then we just do
an Asynchronous Fire

00:23:10.067 --> 00:23:12.567
on, um, on this.

00:23:12.567 --> 00:23:15.501
And notice that we're calling
the "createTask" method.

00:23:15.501 --> 00:23:17.400
If we look back over here,

00:23:17.400 --> 00:23:20.767
um, we should have, somewhere,
a create--a "createTask"--

00:23:20.767 --> 00:23:22.934
there it is, "createTask,"
right there.

00:23:22.934 --> 00:23:25.234
So there's a--there's
a one-to-one, um,

00:23:25.234 --> 00:23:27.334
uh, correlation there.

00:23:27.334 --> 00:23:30.334
And same thing with "update."
It looks exactly the same.

00:23:30.334 --> 00:23:32.000
We're just gonna, uh,
pick a--

00:23:32.000 --> 00:23:34.000
pick some task name
and put it in,

00:23:34.000 --> 00:23:37.000
and then we call the update
task, passing that task.

00:23:37.000 --> 00:23:39.033
And you see we're
doing it asynchronously,

00:23:39.033 --> 00:23:42.000
so we don't block the browser,
um, thread.

00:23:42.000 --> 00:23:44.701
And, of course, if you're
not familiar with GWT,

00:23:44.701 --> 00:23:48.667
um, this is very cool in that
we get to write in Java code

00:23:48.667 --> 00:23:50.667
the same language as our server,

00:23:50.667 --> 00:23:52.667
same language
as our Android app,

00:23:52.667 --> 00:23:54.501
uh, but it--it runs--

00:23:54.501 --> 00:23:57.033
it compiles it to very
optimized JavaScript code,

00:23:57.033 --> 00:23:59.534
which works in any web browser.

00:23:59.534 --> 00:24:02.601
Um, so if I re--Oh, that's--
that would be the wrong--

00:24:02.601 --> 00:24:05.601
that would be the finale that we
don't want to show people yet.

00:24:05.601 --> 00:24:08.601
Okay, um,
let's reload this one.

00:24:08.601 --> 00:24:10.601
Um, so, uh, there we go.

00:24:10.601 --> 00:24:13.067
So there's our very nice
buttons that we added.

00:24:13.067 --> 00:24:15.567
So I can come in
and create a new task,

00:24:15.567 --> 00:24:18.367
um, and you see, it did
that round trip to the server

00:24:18.367 --> 00:24:20.367
and gave me an I.D.,

00:24:20.367 --> 00:24:22.367
and then I can update that task.

00:24:22.367 --> 00:24:25.367
Uh, and you can see,
uh, Larry's first task--

00:24:25.367 --> 00:24:28.367
Use "really big" blimps
for streetview.

00:24:28.367 --> 00:24:30.868
I think that's--
that's a good idea.

00:24:30.868 --> 00:24:32.868
Um, so we can create
another one,

00:24:32.868 --> 00:24:35.868
and update that one, okay.

00:24:35.868 --> 00:24:38.067
Uh,

00:24:38.067 --> 00:24:41.133
let's do a couple more,
just to give you some test data.

00:24:41.133 --> 00:24:43.133
[laughter]

00:24:43.133 --> 00:24:46.167
Abrams: We spent most of our
time coming up with these items.

00:24:46.167 --> 00:24:49.000
Ducrohet: [laughs] Yes.
Abrams: So I'm glad you like...

00:24:49.000 --> 00:24:51.400
Okay, and there--
there's all of them.

00:24:51.400 --> 00:24:53.901
So query--so "create,"
"update," "query work,"

00:24:53.901 --> 00:24:56.901
um, and then we'll go through
and delete that last one,

00:24:56.901 --> 00:24:58.601
just to show
that "delete" works.

00:24:58.601 --> 00:25:01.601
Okay, so now what we've shown--

00:25:01.601 --> 00:25:03.100
Ducrohet: Yes.
Abrams: I hope maybe

00:25:03.100 --> 00:25:05.100
you're a little more confident.
Ducrohet: Yes.

00:25:05.100 --> 00:25:07.467
Abrams: Now what we've shown
is a data layer on the server,

00:25:07.467 --> 00:25:09.334
uh, an RPC layer there,

00:25:09.334 --> 00:25:11.601
and then we showed
a very simple GWT client,

00:25:11.601 --> 00:25:13.601
so you can probably--
you can probably maybe copy

00:25:13.601 --> 00:25:15.734
some of that code for your
Android client, if you want.

00:25:15.734 --> 00:25:17.734
Ducrohet: Uh, I could almost,
yes.

00:25:17.734 --> 00:25:21.200
All right, so let's do
an Android application for that.

00:25:21.200 --> 00:25:24.200
Uh, so Brad showed you
that there was two project

00:25:24.200 --> 00:25:26.901
that were created--one for
App Engine and one for Android.

00:25:26.901 --> 00:25:29.400
So let's take a quick look
to see what's there.

00:25:29.400 --> 00:25:32.567
Um, there's a lot of classes,
actually, in there.

00:25:32.567 --> 00:25:34.567
Uh, the main one, really,

00:25:34.567 --> 00:25:36.400
that's going to be...
[speaking indistinctly]

00:25:36.400 --> 00:25:38.400
the cloud task activity.

00:25:38.400 --> 00:25:40.400
Uh, that's the one
that currently show

00:25:40.400 --> 00:25:42.400
the "Say Hello" button,
or whatever.

00:25:42.400 --> 00:25:44.734
The account activity
is the activity that you get

00:25:44.734 --> 00:25:47.534
when you go to the account menu
to actually register

00:25:47.534 --> 00:25:49.868
your account,
so it's there for you already.

00:25:49.868 --> 00:25:51.801
But, you know,
if you don't like it,

00:25:51.801 --> 00:25:54.200
if you want to style it,
you can just change that easily.

00:25:54.200 --> 00:25:56.501
There's a C2DM receiver.
We'll talk about that later.

00:25:56.501 --> 00:25:59.267
Um, and a bunch of--some utility
functions and things like that.

00:25:59.267 --> 00:26:02.000
So to make my application, I'm
going to need some new files,

00:26:02.000 --> 00:26:04.934
so I'm going to drop
a few files.

00:26:04.934 --> 00:26:07.133
I'll show you what I drop,
so that, you know,

00:26:07.133 --> 00:26:10.133
there's no, you know, hidden
things happening in there.

00:26:10.133 --> 00:26:13.100
Uh, so mostly I'm going to drop,
first some resources,

00:26:13.100 --> 00:26:16.100
there's, you know,
some icons, some styles,

00:26:16.100 --> 00:26:18.267
some new themes
and things like that,

00:26:18.267 --> 00:26:19.901
and some layouts here.

00:26:19.901 --> 00:26:21.868
Uh, we're going to have
two new activities.

00:26:21.868 --> 00:26:23.868
So the current one,
the main activity,

00:26:23.868 --> 00:26:26.968
is going to be replaced by one
that display the list of tasks,

00:26:26.968 --> 00:26:29.400
and, uh, so that will be
my task list layout here.

00:26:29.400 --> 00:26:32.167
with the list item
to populate the list view.

00:26:32.167 --> 00:26:34.167
And then I have
two other activities--

00:26:34.167 --> 00:26:37.167
one to add a task, and one
to view the content of a task.

00:26:37.167 --> 00:26:40.167
So I'm just going to drop that
into my project,

00:26:40.167 --> 00:26:43.167
uh, and then I'm going
to drop some new code.

00:26:43.167 --> 00:26:46.234
So, um, I said, you know,
new activities--

00:26:46.234 --> 00:26:48.234
Okay, so I got
a disconnect here.

00:26:48.234 --> 00:26:50.234
It's no matter. It's just that
the application is currently

00:26:50.234 --> 00:26:53.234
being deployed, and we don't...
[speaking indistinctly]

00:26:53.234 --> 00:26:55.234
Abrams: You should
really work...

00:26:55.234 --> 00:26:56.901
[speaking indistinctly]
That would be good.

00:26:56.901 --> 00:26:58.734
Ducrohet: Yes, I think I should.

00:26:58.734 --> 00:27:00.767
Um, so we have those
two activities here--

00:27:00.767 --> 00:27:02.834
a view task activity
and a task activity.

00:27:02.834 --> 00:27:05.834
Uh, I'm going to need a new
custom application class,

00:27:05.834 --> 00:27:07.834
um--so I'll explain why later--

00:27:07.834 --> 00:27:10.834
and then after because, uh,
I'm going to use a list view,

00:27:10.834 --> 00:27:12.834
so I have a list adapter

00:27:12.834 --> 00:27:15.234
specifically for
my list of tasks,

00:27:15.234 --> 00:27:17.234
and then I have an asynctask,

00:27:17.234 --> 00:27:20.234
because you really never
want to do any, uh,

00:27:20.234 --> 00:27:22.234
natural connection
on the UI thread,

00:27:22.234 --> 00:27:24.634
so you should always use
an asynchronous mechanism,

00:27:24.634 --> 00:27:26.634
and I'll explain to you later

00:27:26.634 --> 00:27:28.634
why you need
actually that right now.

00:27:28.634 --> 00:27:30.601
So I'm just going
to drop that here,

00:27:30.601 --> 00:27:32.634
uh, there's some compilation
error, but that's no matter.

00:27:32.634 --> 00:27:35.000
The final thing that
I want to drop is, um,

00:27:35.000 --> 00:27:37.000
after, we're going to have
some sort of protocol

00:27:37.000 --> 00:27:39.334
in the communication between
the client and the server,

00:27:39.334 --> 00:27:42.334
uh, so we have some, um,
content in here

00:27:42.334 --> 00:27:44.901
that I'm just going to drop
in that shared folder.

00:27:44.901 --> 00:27:47.868
So Brad actually showed you
that folder earlier,

00:27:47.868 --> 00:27:49.667
and it's there
on my client, too.

00:27:49.667 --> 00:27:51.667
It's actually--
it's not just a cookie.

00:27:51.667 --> 00:27:54.667
It's actually the same folder
that is used by both projects.

00:27:54.667 --> 00:27:56.601
So when he created
the RPC layer,

00:27:56.601 --> 00:27:59.133
uh, the TaskProxy was also
created for that project here,

00:27:59.133 --> 00:28:00.734
and it's right there.

00:28:00.734 --> 00:28:02.801
It's an interface that's
going to be created for you.

00:28:02.801 --> 00:28:04.801
Um, you don't have to go
and do the same thing.

00:28:04.801 --> 00:28:07.133
That's where the two projects
being linked together

00:28:07.133 --> 00:28:08.868
is interesting.

00:28:08.868 --> 00:28:11.200
So I drop that new, uh, class,

00:28:11.200 --> 00:28:13.200
and then I'm going
to have to edit

00:28:13.200 --> 00:28:16.267
my--my manifests in--
I did some components,

00:28:16.267 --> 00:28:19.467
so I'm just going
to do that quickly.

00:28:19.467 --> 00:28:21.400
Mm.

00:28:21.400 --> 00:28:23.968
So the first thing
that I need is,

00:28:23.968 --> 00:28:25.968
uh, on my
application node here,

00:28:25.968 --> 00:28:28.968
I have a new class,
so I'm declaring it here,

00:28:28.968 --> 00:28:31.968
and I have a custom theme,
so I'm just declaring it here.

00:28:31.968 --> 00:28:33.968
And then, uh--
that's not what I want--

00:28:33.968 --> 00:28:35.634
I have two new activities,

00:28:35.634 --> 00:28:37.901
so you always need to declare
your activity,

00:28:37.901 --> 00:28:39.968
even if they're not, you know,

00:28:39.968 --> 00:28:41.901
they don't have...
[speaking indistinctly]

00:28:41.901 --> 00:28:44.400
So I'm just doing
that here, too.

00:28:44.400 --> 00:28:47.400
Okay, so the last thing
that we need to do

00:28:47.400 --> 00:28:50.400
is really look at
that main, uh, activity.

00:28:50.400 --> 00:28:53.400
And, uh, so cloud task activity.

00:28:53.400 --> 00:28:56.400
So here, there's
a few things like--

00:28:56.400 --> 00:28:59.400
there's a receiver here that you
don't really need to deal with.

00:28:59.400 --> 00:29:02.334
It's there to deal with the, um,

00:29:02.334 --> 00:29:05.334
when Brad created that account,
we got a notification

00:29:05.334 --> 00:29:07.334
saying the C2DM
registration worked.

00:29:07.334 --> 00:29:09.167
Well, it's that one here,

00:29:09.167 --> 00:29:11.834
so if you want to change
the, um, the workflow,

00:29:11.834 --> 00:29:13.534
you change that a little bit.

00:29:13.534 --> 00:29:15.534
Now there's an onCreate here
that does--

00:29:15.534 --> 00:29:17.534
basically that
HelloWorld content,

00:29:17.534 --> 00:29:19.534
so I'm just going
to replace it with mine.

00:29:19.534 --> 00:29:22.033
So, um, actually,
I'm going to start

00:29:22.033 --> 00:29:24.033
by dropping a few fields

00:29:24.033 --> 00:29:27.534
that I will use--use later.

00:29:27.534 --> 00:29:29.934
And just drop them here.

00:29:29.934 --> 00:29:33.734
Then, uh, I'm going to drop that
and explain what I'm doing.

00:29:35.334 --> 00:29:38.534
Ducrohet: All right, so we're
going to remove that here.

00:29:38.534 --> 00:29:41.033
So, um, I'm just doing
a new site content view

00:29:41.033 --> 00:29:43.033
with my layout, um,

00:29:43.033 --> 00:29:46.067
I'm having some, you know,
a listView object,

00:29:46.067 --> 00:29:48.033
I have a progressBar object,

00:29:48.033 --> 00:29:49.868
um, I have a task adapter,

00:29:49.868 --> 00:29:51.868
which is my list adapter
from my listView

00:29:51.868 --> 00:29:53.868
that I store in my task
application,

00:29:53.868 --> 00:29:55.367
uh, for some reason,

00:29:55.367 --> 00:29:57.367
and then I have my callback
from my listView,

00:29:57.367 --> 00:30:00.200
uh, so I actually need
to make that, um, class--

00:30:00.200 --> 00:30:03.200
implement that interface,
um, and that's about it.

00:30:03.200 --> 00:30:06.200
And then there's this register,
which also, you know,

00:30:06.200 --> 00:30:08.667
is registering the broadcast
receiver that we have above

00:30:08.667 --> 00:30:11.167
to get the notification
from the C2DM registration.

00:30:11.167 --> 00:30:14.167
And then, um, of course,
we unregister it,

00:30:14.167 --> 00:30:16.167
in unDestroy.

00:30:16.167 --> 00:30:18.667
And then, uh, we have
the menu creation,

00:30:18.667 --> 00:30:21.167
and that UI here, that
we just don't need anymore,

00:30:21.167 --> 00:30:23.000
so I'm just going
to delete it,

00:30:23.000 --> 00:30:26.000
and instead I'm going to replace
it with all of that new code.

00:30:26.000 --> 00:30:28.000
So, um,

00:30:28.000 --> 00:30:31.000
it--it's a lot of,
you know, boilerplate

00:30:31.000 --> 00:30:33.000
due to that demo,
the way it's built,

00:30:33.000 --> 00:30:35.734
but the big thing here
is really in the onStart--

00:30:35.734 --> 00:30:37.734
that's what I'm going
to show you right now.

00:30:37.734 --> 00:30:40.834
Um, what I do here,
if the--yeah, there we go--

00:30:40.834 --> 00:30:44.434
Uh, I just make sure that
the device is registered,

00:30:44.434 --> 00:30:46.367
so as soon
as the activity launch,

00:30:46.367 --> 00:30:48.200
if the device is registered

00:30:48.200 --> 00:30:50.200
and I have a Google
account associated,

00:30:50.200 --> 00:30:52.734
I'm just going to go and fetch
my task from the cloud,

00:30:52.734 --> 00:30:54.701
and that method
is, uh, pretty basic.

00:30:54.701 --> 00:30:56.701
You know, I display
the progress bar

00:30:56.701 --> 00:30:58.701
to add some visual clue
for the user,

00:30:58.701 --> 00:31:01.601
and then I create my asynctask,
and I just execute it.

00:31:01.601 --> 00:31:03.601
And so that next task here

00:31:03.601 --> 00:31:05.968
with a nice, you know,
"insert RPC command" here.

00:31:05.968 --> 00:31:07.601
So let's implement that,

00:31:07.601 --> 00:31:09.601
because that's really the part
that's complicated.

00:31:09.601 --> 00:31:11.601
Normally, it's creating that--
that RPC.

00:31:11.601 --> 00:31:14.601
So, um, we have this,

00:31:14.601 --> 00:31:16.100
uh, RequestFactory

00:31:16.100 --> 00:31:18.200
that's been created for you
by the RPC layer,

00:31:18.200 --> 00:31:20.200
and it returns that TaskRequest,

00:31:20.200 --> 00:31:22.200
which is also located
in the, um,

00:31:22.200 --> 00:31:24.200
in the shared folder here,

00:31:24.200 --> 00:31:26.901
and that's, you know,
what Brad showed you.

00:31:26.901 --> 00:31:28.868
It's basically
that new interface

00:31:28.868 --> 00:31:30.868
that has exactly the same method

00:31:30.868 --> 00:31:33.868
as the server service
that you implemented.

00:31:33.868 --> 00:31:35.868
The only difference is that,
you know,

00:31:35.868 --> 00:31:37.868
instead of returning directly
the TaskProxy,

00:31:37.868 --> 00:31:39.534
to return the request object,

00:31:39.534 --> 00:31:42.033
which lets you actually
do the RPC code.

00:31:42.033 --> 00:31:44.033
So we're going to do--
use that.

00:31:44.033 --> 00:31:46.033
Of course, that's all
interfaces, and, you know,

00:31:46.033 --> 00:31:48.534
you're probably wondering
how we're going to create those.

00:31:48.534 --> 00:31:51.534
Uh, so what we do for you is,
there's a utility method here,

00:31:51.534 --> 00:31:53.534
so, you know, it's not
hidden from anything.

00:31:53.534 --> 00:31:55.534
It's just there.
You can go and look at it.

00:31:55.534 --> 00:31:57.200
So we're going to use that.

00:31:57.200 --> 00:31:59.334
So we're going to create
our RequestFactory first,

00:31:59.334 --> 00:32:01.367
so, um...

00:32:01.367 --> 00:32:04.133
There we go.

00:32:08.033 --> 00:32:10.100
Ducrohet: And then there's
the getRequestFactory,

00:32:10.100 --> 00:32:12.100
so it needs an--

00:32:12.100 --> 00:32:14.100
um, an Android context,

00:32:14.100 --> 00:32:16.501
and then the class
of the RequestFactory

00:32:16.501 --> 00:32:20.601
that you actually
want to, um, associate.

00:32:20.601 --> 00:32:22.601
All right, so let's look to see

00:32:22.601 --> 00:32:24.601
exactly what that does for you.

00:32:24.601 --> 00:32:27.734
Well, so first, there's that--
it just creates it for you.

00:32:27.734 --> 00:32:29.734
That's, you know,
the hidden part.

00:32:29.734 --> 00:32:31.734
Uh, the important part
is here.

00:32:31.734 --> 00:32:33.734
It's actually going to look

00:32:33.734 --> 00:32:35.734
for the authentication cookie

00:32:35.734 --> 00:32:38.734
that was selected when the user
selected the account,

00:32:38.734 --> 00:32:41.734
so it selected, you know,
the Larry Page account,

00:32:41.734 --> 00:32:43.734
and then we got
the authentication cookie

00:32:43.734 --> 00:32:46.067
from that, and that cookie
was created, you know,

00:32:46.067 --> 00:32:47.734
when the user
actually registered

00:32:47.734 --> 00:32:49.367
and tied it to his password.

00:32:49.367 --> 00:32:52.033
So we just saw that, and then
we created the HTTP URL,

00:32:52.033 --> 00:32:54.033
that is--
we're actually going to call,

00:32:54.033 --> 00:32:57.200
and we initialize
the RequestFactory here

00:32:57.200 --> 00:32:59.701
with that
AndroidRequestTransport,

00:32:59.701 --> 00:33:01.601
which contains the cookie/

00:33:01.601 --> 00:33:04.968
And that makes it sure
that when we do the HTTP query,

00:33:04.968 --> 00:33:07.000
uh, we're actually going
to pass the cookie,

00:33:07.000 --> 00:33:09.367
so that on the other hand,
the server actually knows

00:33:09.367 --> 00:33:11.367
which user is actually
doing that request,

00:33:11.367 --> 00:33:14.367
and that's where
the authentication comes in.

00:33:14.367 --> 00:33:17.367
So we have that, uh,
factory here,

00:33:17.367 --> 00:33:19.367
so now we're just
going to do, um--

00:33:19.367 --> 00:33:22.367
so we need to get
the TaskRequest for it,

00:33:22.367 --> 00:33:24.367
and then it's going
to look like--

00:33:24.367 --> 00:33:26.367
exactly like the code
that Brad showed.

00:33:26.367 --> 00:33:28.968
I'm just going to do
a query task, do a fire,

00:33:28.968 --> 00:33:32.467
um, so the only thing that's
a little bit different here--

00:33:32.467 --> 00:33:35.467
So the receiver is the--

00:33:35.467 --> 00:33:37.968
The type is based

00:33:37.968 --> 00:33:40.000
on the method,

00:33:40.000 --> 00:33:41.968
and here, it's a list
of TaskProxy.

00:33:41.968 --> 00:33:43.968
There we go.

00:33:43.968 --> 00:33:46.968
Uh, and now--
there we go.

00:33:46.968 --> 00:33:49.968
So that it--that's the method
that you need to implement.

00:33:49.968 --> 00:33:51.968
There's other ones,
like on failure,

00:33:51.968 --> 00:33:53.968
that you should
probably implement,

00:33:53.968 --> 00:33:55.634
because if it doesn't work,
it throws a wrench on us again.

00:33:55.634 --> 00:33:57.634
Abrams: We're not gonna have
any failures, though.

00:33:57.634 --> 00:33:59.634
Ducrohet: We--no,
no failure today.

00:33:59.634 --> 00:34:01.701
Um, all right, so here--
well, I have that list here

00:34:01.701 --> 00:34:03.434
that I'm going to return later,

00:34:03.434 --> 00:34:06.434
so I'm just going to add
the list of tasks that I get

00:34:06.434 --> 00:34:09.434
to, uh, to my list--
so the point here is,

00:34:09.434 --> 00:34:11.934
so right now, that act--
that fire,

00:34:11.934 --> 00:34:15.434
that method that
Brad showed on the GWT client,

00:34:15.434 --> 00:34:16.934
was, uh, asynchronous.

00:34:16.934 --> 00:34:19.868
On Android right now
it's not asynchronous.

00:34:19.868 --> 00:34:21.868
Uh, it's actually a bug.
It should be.

00:34:21.868 --> 00:34:23.367
We're working on that.

00:34:23.367 --> 00:34:26.367
Uh, so that's why I need to put
all of that into an asynctask,

00:34:26.367 --> 00:34:28.367
so that we're sure that,
you know,

00:34:28.367 --> 00:34:30.367
that doing by group method
is going to happen

00:34:30.367 --> 00:34:32.534
automatically for you
in the background,

00:34:32.534 --> 00:34:35.868
and then basically, that list
here is going to be passed

00:34:35.868 --> 00:34:37.868
back to me
in the onPostExecute,

00:34:37.868 --> 00:34:40.868
but that onPostExecute
is called from the UI thread,

00:34:40.868 --> 00:34:43.868
and that's a very important
distinction.

00:34:43.868 --> 00:34:46.901
And then here,
um, I'm going to...

00:34:46.901 --> 00:34:49.868
I guess I need
to save that file here

00:34:49.868 --> 00:34:52.868
and do some import, yes,

00:34:52.868 --> 00:34:54.868
to make sure that it works.

00:34:54.868 --> 00:34:56.868
There we go.

00:34:56.868 --> 00:34:59.868
So I can go to a task--
and so activity addTask,

00:34:59.868 --> 00:35:02.934
um, you know, all I do basically
is pass back to my list adapter,

00:35:02.934 --> 00:35:04.934
give it the new
list of task,

00:35:04.934 --> 00:35:06.934
and call notifyDataSetChanged,

00:35:06.934 --> 00:35:08.934
which is going to refresh
my listView.

00:35:08.934 --> 00:35:10.934
Those code must happen
on the UI thread,

00:35:10.934 --> 00:35:13.934
which is why I do that
in the, uh, onPost background--

00:35:13.934 --> 00:35:16.934
uh, onPostExecute method.

00:35:16.934 --> 00:35:19.968
All right, uh,
I think I have everything.

00:35:19.968 --> 00:35:21.934
Now, uh, we've recently
encountered a bug

00:35:21.934 --> 00:35:23.934
into, uh, probably Eclipse,

00:35:23.934 --> 00:35:26.100
so I'm just going to do
a clean view.

00:35:26.100 --> 00:35:28.100
You haven't seen anything.
Abrams: Mm-hmm.

00:35:28.100 --> 00:35:30.100
Ducrohet: Um, all right,
just to be sure,

00:35:30.100 --> 00:35:33.701
and we're going to deploy that
to my emulator.

00:35:33.701 --> 00:35:35.434
So that's crazy.

00:35:35.434 --> 00:35:38.434
Oh, I forgot to show you, um,
when you create that project--

00:35:38.434 --> 00:35:40.434
when that project is created
for you,

00:35:40.434 --> 00:35:42.601
we do put some Java here,

00:35:42.601 --> 00:35:44.901
like, the C2DM Java
is put there for you,

00:35:44.901 --> 00:35:46.734
and also
the RequestFactory client.

00:35:46.734 --> 00:35:48.734
This is the part that
deals with the RPC for you,

00:35:48.734 --> 00:35:51.767
so it's all there for you. You
don't have to deal with that.

00:35:51.767 --> 00:35:54.767
All right, so let's just
debug that

00:35:54.767 --> 00:35:57.767
on my server--

00:35:57.767 --> 00:36:00.300
on my, uh, emulator.

00:36:00.300 --> 00:36:02.934
So, uh, as I showed,

00:36:02.934 --> 00:36:05.901
as soon as the activity
is going to start,

00:36:05.901 --> 00:36:08.901
there's going to be
a progress bar in the top right

00:36:08.901 --> 00:36:12.567
that will show that
there's an RPC going on.

00:36:12.567 --> 00:36:15.567
Maybe.

00:36:15.567 --> 00:36:17.701
Oh, there it is.

00:36:17.701 --> 00:36:19.701
Okay, waiting for debugger.

00:36:19.701 --> 00:36:22.701
All right, so you see here
there's an RPC going on,

00:36:22.701 --> 00:36:25.701
um, and so...

00:36:25.701 --> 00:36:28.701
Abrams: So it's talking
from the emulator

00:36:28.701 --> 00:36:31.701
to the App Engine service,
and it should find those tasks

00:36:31.701 --> 00:36:34.200
that I added
via the GWT client.

00:36:34.200 --> 00:36:36.701
Ducrohet: Yeah, and it's running
on the App Engine server,

00:36:36.701 --> 00:36:38.701
running in Eclipse...
Abrams: Right.

00:36:38.701 --> 00:36:40.701
Ducrohet: So you can put
breakpoint in that server, too.

00:36:40.701 --> 00:36:42.434
You can put breakpoint
in the client.

00:36:42.434 --> 00:36:44.434
You can really debug
both sides at once.

00:36:44.434 --> 00:36:48.000
And there we go.
We have an RPC that happened.

00:36:48.000 --> 00:36:51.000
So we have those three tasks,
and then if I click on them,

00:36:51.000 --> 00:36:53.868
um, you see that which--
we have no task detail in there.

00:36:53.868 --> 00:36:55.701
Abrams: That's beautiful.

00:36:55.701 --> 00:36:57.701
So that is a nice-looking,
um, Android client,

00:36:57.701 --> 00:36:59.734
but I-I think you should
give me a chance

00:36:59.734 --> 00:37:02.601
to work on the GWT client
and make it equally nice.

00:37:02.601 --> 00:37:05.000
Do you think--
we have a few minutes.

00:37:05.000 --> 00:37:07.934
Ducrohet: You think?
Abrams: Yeah.

00:37:07.934 --> 00:37:10.000
Ducrohet: All right.
Abrams: Okay, um, okay,

00:37:10.000 --> 00:37:13.000
so let's get this Android stuff
out of the way here. Um...

00:37:13.000 --> 00:37:15.801
Ducrohet: [laughs]
It's only fair,

00:37:15.801 --> 00:37:17.801
I put his stuff out of the way
when I started.

00:37:17.801 --> 00:37:19.801
Abrams: Yeah, okay,
so now we have a--

00:37:19.801 --> 00:37:22.267
we have a-a few more files
to drag in here.

00:37:22.267 --> 00:37:24.501
This is our fancy, uh--whoa.

00:37:24.501 --> 00:37:26.834
This--this is a, uh,

00:37:26.834 --> 00:37:29.100
Um, I hope I didn't
mess that up.

00:37:29.100 --> 00:37:31.734
Okay, here--
here's our fancy GWT client,

00:37:31.734 --> 00:37:33.767
um, we'll copy in,

00:37:33.767 --> 00:37:36.567
and basically, we're
just using a UI binder

00:37:36.567 --> 00:37:38.300
to make it a little nicer,

00:37:38.300 --> 00:37:40.801
and then, um,
if you're a web developer,

00:37:40.801 --> 00:37:43.067
and you're used to doing a lot
in CSS and HTML,

00:37:43.067 --> 00:37:46.067
uh, that works really great
with GWT, as well.

00:37:46.067 --> 00:37:49.067
You just put that stuff
in the WAR directory,

00:37:49.067 --> 00:37:52.067
um, and that gets bundled
so it ships correctly.

00:37:52.067 --> 00:37:54.067
Uh, and so with those in,

00:37:54.067 --> 00:37:56.667
now we should be able
to switch to our client,

00:37:56.667 --> 00:37:59.734
um, and refresh it.

00:37:59.734 --> 00:38:03.033
So I--just notice, this is
running in DevMode,

00:38:03.033 --> 00:38:05.300
um, but we don't have to stop
and restart the server,

00:38:05.300 --> 00:38:07.300
so you can--you can
just keep refreshing

00:38:07.300 --> 00:38:09.300
the browser
as you normally would.

00:38:09.300 --> 00:38:11.601
So that's pretty nice.
So those are the tasks.

00:38:11.601 --> 00:38:13.601
Um, and I think
what we should do

00:38:13.601 --> 00:38:17.334
is I should go and add
another task, like, um,

00:38:17.334 --> 00:38:23.100
How about,
Do I/O twice a year?

00:38:23.100 --> 00:38:25.100
You think that's a good idea?
Something--yeah?

00:38:25.100 --> 00:38:26.434
Ducrohet: Yeah.

00:38:26.434 --> 00:38:28.434
Abrams: So we'll go ahead
and add that,

00:38:28.434 --> 00:38:30.434
and you see the little
Android guy--okay.

00:38:30.434 --> 00:38:32.634
Um, and then we look over,
and, you know,

00:38:32.634 --> 00:38:34.300
Xavier, um, I added this task,

00:38:34.300 --> 00:38:36.567
and I don't see it
showing up here or anything.

00:38:36.567 --> 00:38:38.067
Ducrohet: Yes.

00:38:38.067 --> 00:38:39.968
Abrams: I--you know what
I think you should do?

00:38:39.968 --> 00:38:41.601
You should implement
some polling log.

00:38:41.601 --> 00:38:43.100
You should, like, every few
seconds, you should ping

00:38:43.100 --> 00:38:45.100
the App Engine server,
and then it'll tell you--

00:38:45.100 --> 00:38:46.934
Ducrohet: You're not listening
when I'm talking.

00:38:46.934 --> 00:38:48.434
That's what I said
we shouldn't do

00:38:48.434 --> 00:38:50.000
at the beginning of the talk.
Abrams: Oh,

00:38:50.000 --> 00:38:51.501
you shouldn't do that? No.
Okay, So what--

00:38:51.501 --> 00:38:53.000
Ducrohet: Yes, you know,
the graph, C2DM?

00:38:53.000 --> 00:38:54.734
Abrams: Oh, I remember that.
I remember that.

00:38:54.734 --> 00:38:56.267
Ducrohet: That's what
you need to do.

00:38:56.267 --> 00:38:57.934
Abrams: Oh, you want to do C2DM?
Ducrohet: Yes.

00:38:57.934 --> 00:38:59.934
Abrams: So what you want
is when I add a new task,

00:38:59.934 --> 00:39:02.000
you want me to send
a C2DM ping that you'll pick up?

00:39:02.000 --> 00:39:03.501
Ducrohet: Yes.

00:39:03.501 --> 00:39:05.067
Abrams: Okay, uh, luckily,
there's a nice place

00:39:05.067 --> 00:39:07.067
to put business logic like that.

00:39:07.067 --> 00:39:09.067
Uh, it's in the RequestFactory.

00:39:09.067 --> 00:39:12.801
It's in--sorry, it's in
the CloudTasksService.

00:39:12.801 --> 00:39:15.167
So basically, what he's saying
here is in update,

00:39:15.167 --> 00:39:17.000
we need to send
the C2DM method.

00:39:17.000 --> 00:39:19.000
So this is back
on the App Engine server

00:39:19.000 --> 00:39:21.000
in the cloud service, um,

00:39:21.000 --> 00:39:23.000
and Xavier's nervous
that I'll typo this,

00:39:23.000 --> 00:39:26.501
um, so I better copy
and add on the snippets.

00:39:26.501 --> 00:39:29.501
Um, so, uh,

00:39:29.501 --> 00:39:32.501
let's just replace
this implementation with it.

00:39:32.501 --> 00:39:34.000
Uh...

00:39:34.000 --> 00:39:36.000
Ducrohet: So the only reason
we do that

00:39:36.000 --> 00:39:37.734
is that there's
that particular myth out

00:39:37.734 --> 00:39:39.734
where we need to first update
the datastore

00:39:39.734 --> 00:39:42.334
to make sure that we get
the right I.D. once it's told,

00:39:42.334 --> 00:39:43.334
'cause otherwise--

00:39:43.334 --> 00:39:45.334
Abrams: Yes, it crashes.
It's bad things.

00:39:45.334 --> 00:39:47.534
Ducrohet: Yeah, we've designed
a smart protocol here

00:39:47.534 --> 00:39:49.667
that is very busy,
'cause you can see,

00:39:49.667 --> 00:39:51.334
the message that we sent
is just--

00:39:51.334 --> 00:39:53.334
so normally C2DM,
most applications

00:39:53.334 --> 00:39:55.167
will only use it as a tickle,

00:39:55.167 --> 00:39:57.834
just to basically poke
the app and say,

00:39:57.834 --> 00:39:59.734
"You know, something happened.

00:39:59.734 --> 00:40:02.100
Talk back to the server
to get more information."

00:40:02.100 --> 00:40:04.667
Uh, but it--by C2DM, you can
actually send a small string--

00:40:04.667 --> 00:40:06.667
Uh, I don't actually know
the limit,

00:40:06.667 --> 00:40:08.667
but, you know,
you can send a small string,

00:40:08.667 --> 00:40:10.501
so here, we're just sending
basically a keyword,

00:40:10.501 --> 00:40:12.334
in that case, update, colon,

00:40:12.334 --> 00:40:14.334
and the idea of the task
that we want.

00:40:14.334 --> 00:40:16.601
Abrams: Yep. Yeah, so we
just made that small change,

00:40:16.601 --> 00:40:18.467
exactly as Xavier described.

00:40:18.467 --> 00:40:21.467
Um, and then we just need to
refresh the App Engine server,

00:40:21.467 --> 00:40:23.467
so we leave the GWT client
as it is,

00:40:23.467 --> 00:40:26.234
refresh the App Engine server
so it reloads with that--

00:40:26.234 --> 00:40:28.067
with that new code.

00:40:28.067 --> 00:40:30.067
And now what we should
be able to do

00:40:30.067 --> 00:40:31.901
is go back
to our cloud task

00:40:31.901 --> 00:40:33.901
and, let's see--

00:40:33.901 --> 00:40:36.901
"Give all employees a raise."

00:40:36.901 --> 00:40:38.901
I think that's a good--
good task.

00:40:38.901 --> 00:40:40.901
And then let's bring up
the emulator here,

00:40:40.901 --> 00:40:42.901
so you can see that worked.

00:40:42.901 --> 00:40:45.400
So I'll just hit "Go" on that,
and then flip over here,

00:40:45.400 --> 00:40:47.968
and there's the message,
and let's see if the I.D.--

00:40:47.968 --> 00:40:50.634
there's an I.D. Okay, good.
So I think it's pretty good.

00:40:50.634 --> 00:40:52.634
So we're sending
the C2DM message

00:40:52.634 --> 00:40:55.033
from the App Engine server,
but, Xavier, you know,

00:40:55.033 --> 00:40:58.033
that UI with just I.D., colon--
I don't think that's so hot.

00:40:58.033 --> 00:40:59.367
Ducrohet: Yes, yes.

00:40:59.367 --> 00:41:01.434
Abrams: You know, maybe
there's something you can do.

00:41:01.434 --> 00:41:03.434
Ducrohet: All right,
so, um, here--

00:41:03.434 --> 00:41:05.434
so normally, when you
build an application,

00:41:05.434 --> 00:41:07.434
you are not going to do
what we're doing here,

00:41:07.434 --> 00:41:09.434
which is basically go live
and request an RPC

00:41:09.434 --> 00:41:11.434
every time the user
does something.

00:41:11.434 --> 00:41:13.934
Uh, what you want really
is to have, like,

00:41:13.934 --> 00:41:16.834
a local storage,
and have your task there.

00:41:16.834 --> 00:41:18.834
Uh, not that you can't
receive a C2DM message

00:41:18.834 --> 00:41:20.834
even when the user is not using
your application--

00:41:20.834 --> 00:41:23.334
that's the whole point--
so what you should really--

00:41:23.334 --> 00:41:26.367
really do is,
when you get a C2DM ping,

00:41:26.367 --> 00:41:29.434
you should, like, you know,
launch a background service,

00:41:29.434 --> 00:41:31.434
go query the new list
of tasks,

00:41:31.434 --> 00:41:33.434
have some fancy protocol
so that you only get

00:41:33.434 --> 00:41:35.267
really the one that happened.

00:41:35.267 --> 00:41:37.501
So in our case, it's that...
[speaking indistinctly]

00:41:37.501 --> 00:41:39.667
Uh, and then, you know,
put that on your storage,

00:41:39.667 --> 00:41:42.667
and then your activity should
only go and query your storage.

00:41:42.667 --> 00:41:44.667
All right, you shouldn't do--
like, here,

00:41:44.667 --> 00:41:46.667
every time that activity
is displayed,

00:41:46.667 --> 00:41:48.667
it goes and fetch back
the list of tasks,

00:41:48.667 --> 00:41:51.000
and it's really not efficient,
so you shouldn't do that/

00:41:51.000 --> 00:41:53.000
But for that talk, we didn't
want to go and, you know,

00:41:53.000 --> 00:41:55.100
involve the storage,
so we just wanted to see

00:41:55.100 --> 00:41:56.968
the basic... [speaking
indistinctly] mechanism happen.

00:41:56.968 --> 00:41:58.968
So what you
are going to do here,

00:41:58.968 --> 00:42:01.033
uh, to bypass that issue,

00:42:01.033 --> 00:42:03.033
is we--what I did is,

00:42:03.033 --> 00:42:05.234
that activity registers
itself as a listener

00:42:05.234 --> 00:42:07.601
to the custom application
class that I did

00:42:07.601 --> 00:42:09.601
when it's being displayed on--

00:42:09.601 --> 00:42:12.601
and register itself
when it's being hidden,

00:42:12.601 --> 00:42:14.734
so that's what we have in, um--

00:42:14.734 --> 00:42:18.033
Uh, let me find, uh--
there we go.

00:42:18.033 --> 00:42:21.033
Here. We'll just do that.

00:42:21.033 --> 00:42:24.033
Uh, so in the--
there we go--

00:42:24.033 --> 00:42:26.033
in the onResume,

00:42:26.033 --> 00:42:28.033
I register my task
as a listener,

00:42:28.033 --> 00:42:30.534
and here, I register it
as an onPost.

00:42:30.534 --> 00:42:32.367
So what I need to do

00:42:32.367 --> 00:42:34.334
is basically to call
that listener,

00:42:34.334 --> 00:42:36.067
uh, from my C2DM receiver,

00:42:36.067 --> 00:42:38.567
so that if the task--
if the activity is not showing,

00:42:38.567 --> 00:42:40.267
then it's not going
to do anything,

00:42:40.267 --> 00:42:42.267
and the message will be lost,
uh, which is okay.

00:42:42.267 --> 00:42:44.267
So I mentioned that we had,

00:42:44.267 --> 00:42:46.267
in the project that is created,

00:42:46.267 --> 00:42:49.267
we have a class called
C2DM receiver.

00:42:49.267 --> 00:42:51.267
Now that's a very basic class.

00:42:51.267 --> 00:42:54.801
There's a lot of things going
in the background for you.

00:42:54.801 --> 00:42:57.801
But basically,
there's this onMessage here,

00:42:57.801 --> 00:42:59.801
and that's what happens--

00:42:59.801 --> 00:43:02.868
that's what is called
when the C2DM tickle happened,

00:43:02.868 --> 00:43:04.701
so you can ignore the rest.

00:43:04.701 --> 00:43:06.734
All you have to do
is basically implement that,

00:43:06.734 --> 00:43:08.701
which is exactly
what I'm going to do.

00:43:08.701 --> 00:43:10.934
And that message display class
that is created here

00:43:10.934 --> 00:43:13.267
is the, uh, notification thing,
you know,

00:43:13.267 --> 00:43:16.067
you can throw that class away
once your--if you don't want it.

00:43:16.067 --> 00:43:18.767
All right, so, um,
I'm going to get my application,

00:43:18.767 --> 00:43:21.767
so it's
a taskApplication object,

00:43:21.767 --> 00:43:24.767
and you can just call
getApplication.

00:43:24.767 --> 00:43:27.567
It's just not our class
in the receiver.

00:43:27.567 --> 00:43:30.100
Oh, I'm going to need
a cast here--there we go.

00:43:30.100 --> 00:43:32.601
And then I'll do
my notifyListener.

00:43:32.601 --> 00:43:34.267
And pass the intent--

00:43:34.267 --> 00:43:36.300
that contains the content
of the C2DM.

00:43:36.300 --> 00:43:39.300
So in that method here, um,

00:43:39.300 --> 00:43:42.300
basically, if I have a listener,
then I have to do some work,

00:43:42.300 --> 00:43:44.300
so I get that message
from the intent.

00:43:44.300 --> 00:43:47.300
Um, and then I just do a split
on the column,

00:43:47.300 --> 00:43:50.300
and send that to my listener,
which is my activity.

00:43:50.300 --> 00:43:52.801
And that's what happens here.

00:43:52.801 --> 00:43:55.801
Now as I mentioned earlier,
you can get that C2DM tickle--

00:43:55.801 --> 00:43:57.801
you get it on a non-UI thread,

00:43:57.801 --> 00:44:00.801
so if you want
to do some UI on it,

00:44:00.801 --> 00:44:03.701
you have to use, uh,
run on your UI thread.

00:44:03.701 --> 00:44:05.701
Uh, and I really do that,

00:44:05.701 --> 00:44:08.701
because the asynctask needs to
be started from the UI thread.

00:44:08.701 --> 00:44:10.701
So you're receiving
from the non-UI thread.

00:44:10.701 --> 00:44:13.167
You go to UI thread
to start the asynctask,

00:44:13.167 --> 00:44:15.133
which does the work
in the non-UI thread,

00:44:15.133 --> 00:44:17.133
which sends the wizard
to the UI thread.

00:44:17.133 --> 00:44:18.801
Abrams: Whew!

00:44:18.801 --> 00:44:21.901
Ducrohet: Okay, so here
in my FetchTask,

00:44:21.901 --> 00:44:23.901
uh, I had, you know,
planned for it,

00:44:23.901 --> 00:44:25.901
so I have a long--
I have the I.D.

00:44:25.901 --> 00:44:27.901
basically as a parameter,
so I--

00:44:27.901 --> 00:44:29.901
and I pass it here
in the execute.

00:44:29.901 --> 00:44:33.000
So I'm just going to change it
so that when we have a new task,

00:44:33.000 --> 00:44:36.501
uh, we can just
go and fetch that one.

00:44:36.501 --> 00:44:38.501
So, uh, it's going to be
pretty easy.

00:44:38.501 --> 00:44:41.367
I have no arguments here,
so I'm just going to do--

00:44:41.367 --> 00:44:43.567
if I have no arguments,

00:44:43.567 --> 00:44:46.234
or if my arguments is--

00:44:46.234 --> 00:44:48.234
by default, I said...
[speaking indistinctly]

00:44:48.234 --> 00:44:51.234
fetch all,
so I'll do that.

00:44:51.234 --> 00:44:54.234
And else, um--

00:44:54.234 --> 00:44:56.033
I'm setting a flag

00:44:56.033 --> 00:44:58.033
saying that it's just
a new task.

00:44:58.033 --> 00:44:59.701
I'll explain that
in a minute.

00:44:59.701 --> 00:45:01.767
And then I'll do another, um--

00:45:01.767 --> 00:45:03.767
and so here it's readTask,

00:45:03.767 --> 00:45:06.267
which is exactly
the same one that you had in--

00:45:06.267 --> 00:45:08.267
that Brad showed
on the server,

00:45:08.267 --> 00:45:11.934
and, uh, that's my argument.

00:45:11.934 --> 00:45:15.434
There we go,
and then I need to do a fire,

00:45:15.434 --> 00:45:17.434
which, uh,

00:45:17.434 --> 00:45:19.434
should be asynchronous,

00:45:19.434 --> 00:45:21.434
but as I said, isn't.

00:45:21.434 --> 00:45:25.000
All right, and, uh, we send
the TaskProxy here,

00:45:25.000 --> 00:45:27.000
and I implement my method.
There we go.

00:45:27.000 --> 00:45:29.000
All right, and here,
that's pretty easy.

00:45:29.000 --> 00:45:31.000
I still have my list.

00:45:31.000 --> 00:45:34.234
What I have to do is do list.
add... [speaking indistinctly]

00:45:34.234 --> 00:45:36.734
All right, and so at the end

00:45:36.734 --> 00:45:39.734
of that execution here in the--

00:45:39.734 --> 00:45:41.734
that's where I do--
I use my flag,

00:45:41.734 --> 00:45:43.567
uh, that setTask--

00:45:43.567 --> 00:45:45.567
actually, I showed you
addTask earlier,

00:45:45.567 --> 00:45:48.234
but, uh, setTask here
sets the whole list,

00:45:48.234 --> 00:45:50.968
and if I do "add,"
I just add to the existing.

00:45:50.968 --> 00:45:52.968
And basically
in the "add after,"

00:45:52.968 --> 00:45:55.934
I mean, all I have is really
just a list of tasks that--

00:45:55.934 --> 00:45:57.934
and then I just sorted by date,
basically, so very easy.

00:45:57.934 --> 00:46:00.934
All right, so, um,

00:46:00.934 --> 00:46:03.701
let's make sure that everything
is saved here.

00:46:03.701 --> 00:46:06.701
Okay, and it's saying disconnect
again--I'll work on it.

00:46:06.701 --> 00:46:08.701
Abrams: [laughs]

00:46:08.701 --> 00:46:11.367
Ducrohet: Um,
and let's just deploy that

00:46:11.367 --> 00:46:13.300
as an Android application.

00:46:16.000 --> 00:46:18.000
Ducrohet: So the first thing
that's going to happen

00:46:18.000 --> 00:46:20.000
is that it's going
to restart my activity.

00:46:20.000 --> 00:46:22.000
It's going to redo
that initial fetch,

00:46:22.000 --> 00:46:24.234
where it's going
to get all the lists

00:46:24.234 --> 00:46:26.234
of, uh, activities--

00:46:26.234 --> 00:46:28.734
oh, of tasks.

00:46:37.734 --> 00:46:39.734
Ducrohet: All right,
so same thing here.

00:46:39.734 --> 00:46:42.501
So there's that, you know,
visual cue

00:46:42.501 --> 00:46:44.701
that the RPC is going on.

00:46:44.701 --> 00:46:47.367
Um,

00:46:47.367 --> 00:46:49.367
when I'm going to enter
a new task,

00:46:49.367 --> 00:46:51.868
you're going to see
that same visual cue,

00:46:51.868 --> 00:46:54.868
so just look at it
when I hit "Enter."

00:46:54.868 --> 00:46:57.367
So we need a new task--um,

00:46:57.367 --> 00:47:00.234
oh, yeah, there we go.

00:47:00.234 --> 00:47:03.267
All right, let's just wait
for that to finish.

00:47:03.267 --> 00:47:05.267
So there's still--you know,
it's debugging--

00:47:05.267 --> 00:47:07.601
the debuggers are connected
to both the server

00:47:07.601 --> 00:47:10.601
and the front end, uh,
it's going through the emulator.

00:47:10.601 --> 00:47:12.601
That's not exactly
the fastest thing these days,

00:47:12.601 --> 00:47:15.601
so, you know, that's why the RPC
takes a little bit of time.

00:47:15.601 --> 00:47:18.501
All right, so we have our task.
I'm going to hit "Enter,"

00:47:18.501 --> 00:47:20.100
and there we go.

00:47:20.100 --> 00:47:23.300
The C2DM was received,
and then automatically,

00:47:23.300 --> 00:47:25.601
we do the FetchTask,
and it's right there.

00:47:25.601 --> 00:47:27.234
We just refreshed it.

00:47:27.234 --> 00:47:29.234
Abrams: Yeah, so that is
very good.

00:47:29.234 --> 00:47:32.234
[applause]

00:47:32.234 --> 00:47:34.234
Abrams: That is very cool.

00:47:34.234 --> 00:47:36.234
Just to recap--so, you know,

00:47:36.234 --> 00:47:39.267
a few of you that were clapping
really got what was happening,

00:47:39.267 --> 00:47:41.267
and for those of you
that weren't clapping,

00:47:41.267 --> 00:47:43.267
I'm gonna explain it to you
so that you can--no...

00:47:43.267 --> 00:47:46.267
Um, so it's really--it's really
impressive what was going on.

00:47:46.267 --> 00:47:48.267
So he--from the AJAX client,

00:47:48.267 --> 00:47:51.000
typed in a new task,
hit "Return."

00:47:51.000 --> 00:47:53.267
Uh, that animated the cool
little Android thing,

00:47:53.267 --> 00:47:54.934
um, and then--

00:47:54.934 --> 00:47:57.434
and then it did
an RPC call to the server,

00:47:57.434 --> 00:48:00.734
stored that item in
the highly scalable datastore,

00:48:00.734 --> 00:48:03.868
and then when that came back,
it sent a C2DM ping,

00:48:03.868 --> 00:48:05.868
um, to a Google service,

00:48:05.868 --> 00:48:08.868
which then remoted it back down
to the phone.

00:48:08.868 --> 00:48:11.868
The phone got the ping
with an I.D. in it,

00:48:11.868 --> 00:48:13.868
like, was it 7 or something?

00:48:13.868 --> 00:48:16.367
Uh, 7, and then--
and then he got that 7,

00:48:16.367 --> 00:48:18.868
and then he said, "Oh,
I'm gonna go do an RPC call,

00:48:18.868 --> 00:48:20.868
and find task
with the I.D. 7."

00:48:20.868 --> 00:48:22.868
And then he did an RPC call

00:48:22.868 --> 00:48:24.868
back to the App Engine server,

00:48:24.868 --> 00:48:26.501
got that task, um,

00:48:26.501 --> 00:48:28.501
and brang it down to the client
and displayed it,

00:48:28.501 --> 00:48:30.000
so it was very cool.

00:48:30.000 --> 00:48:32.000
Um, I think we're--
I think it's pretty good.

00:48:32.000 --> 00:48:34.200
I think at this point,
we're ready for them to use it,

00:48:34.200 --> 00:48:36.400
don't you think?
Ducrohet: Sure, yes.

00:48:36.400 --> 00:48:38.734
Abrams: I think we should just
deploy it to App Engine,

00:48:38.734 --> 00:48:41.734
so let's talk about how we do
that deployment.

00:48:41.734 --> 00:48:44.534
So, um, what do we do?
Uh, we go into "setup."

00:48:44.534 --> 00:48:47.033
Um, so there's one--
one little thing.

00:48:47.033 --> 00:48:48.701
You go into "setup," uh,

00:48:48.701 --> 00:48:52.033
and you need to change this
to match your App Engine I.D.--

00:48:52.033 --> 00:48:55.033
whatever--you can go to App
Engine and register a free I.D.

00:48:55.033 --> 00:48:57.567
You have to be somewhat
creative with the names.

00:48:57.567 --> 00:48:59.567
Um, Sean's working on that--

00:48:59.567 --> 00:49:01.634
Uh, but right now, it's, uh,

00:49:01.634 --> 00:49:04.634
you have to be fairly creative
to find a unique name.

00:49:04.634 --> 00:49:07.133
Um, and then you just--whoops--

00:49:07.133 --> 00:49:10.133
uh, you can't deploy, actually--
yeah, you just--

00:49:10.133 --> 00:49:12.133
Ducrohet: It doesn't type, also.
Abrams: Where is it?

00:49:12.133 --> 00:49:14.133
Ducrohet:
Just Android--andriade.

00:49:14.133 --> 00:49:16.133
Abrams: Oh, yeah.

00:49:16.133 --> 00:49:18.400
We don't want to deploy
to the wrong place.

00:49:18.400 --> 00:49:20.400
Um, and then

00:49:20.400 --> 00:49:23.400
we don't deploy the Android
application to App Engine.

00:49:23.400 --> 00:49:25.400
We have to go to
the App Engine application.

00:49:25.400 --> 00:49:29.033
Um, you just click this cool
little icon here, um,

00:49:29.033 --> 00:49:32.033
and then in here,
you give it the same I.D.

00:49:32.033 --> 00:49:35.033
Um, hopefully I typed it right--
and then the cool thing is,

00:49:35.033 --> 00:49:37.033
you can use any version.

00:49:37.033 --> 00:49:39.367
So I'm gonna use the version
"staging" right now,

00:49:39.367 --> 00:49:41.367
'cause I'm gonna get it up there
and test it out

00:49:41.367 --> 00:49:43.434
before I flip over
and have everybody use it.

00:49:43.434 --> 00:49:45.434
Um, and then we just
click "Okay,"

00:49:45.434 --> 00:49:47.467
uh, and "Deploy."

00:49:47.467 --> 00:49:50.434
And now what's gonna happen
is it's going to build

00:49:50.434 --> 00:49:52.434
a highly optimized version

00:49:52.434 --> 00:49:54.434
of the GWT client for--

00:49:54.434 --> 00:49:56.934
for many permutations
of languages and browsers,

00:49:56.934 --> 00:49:58.934
so that each browser
gets exactly

00:49:58.934 --> 00:50:01.200
the minimum
JavaScript they need.

00:50:01.200 --> 00:50:03.601
Um, and so while that's going--

00:50:03.601 --> 00:50:05.601
and then it's gonna
upload it to App Engine

00:50:05.601 --> 00:50:07.901
and verify it's there,
and you'll get a URL back.

00:50:07.901 --> 00:50:10.901
While that's going on, though,
we already have one deployed,

00:50:10.901 --> 00:50:13.501
uh, ahead of time,
kind of Julia Child style,

00:50:13.501 --> 00:50:15.501
um, up there,

00:50:15.501 --> 00:50:17.501
and we have it installed
on these phones,

00:50:17.501 --> 00:50:19.934
so why don't you switch over
to the thing?

00:50:25.000 --> 00:50:28.000
Ducrohet: All right, so, uh,
we have two phones here,

00:50:28.000 --> 00:50:30.000
so I'm going to add a task
to that one.

00:50:30.000 --> 00:50:32.000
Um...

00:50:32.000 --> 00:50:34.834
Well, I'm not going to type
a whole lot on here.

00:50:34.834 --> 00:50:36.834
Um, there.

00:50:36.834 --> 00:50:38.868
"Save."

00:50:38.868 --> 00:50:41.868
So here you can see also,
there's the RPC

00:50:41.868 --> 00:50:45.267
that's actually sending
this time,

00:50:45.267 --> 00:50:47.701
uh, and then actually--
or, querying.

00:50:47.701 --> 00:50:50.701
It just did--
okay, it's there already.

00:50:50.701 --> 00:50:53.234
Um,

00:50:53.234 --> 00:50:55.234
it should happen
on the other one.

00:50:55.234 --> 00:50:57.067
Oh, it's on WiFi.
[laughs]

00:50:57.067 --> 00:50:59.067
Abrams: Oh, yes. We have--
we might have a WiFi--

00:50:59.067 --> 00:51:01.133
We need everyone to get on--
No, I'm joking.

00:51:01.133 --> 00:51:03.667
Um, well, maybe it'll--
maybe it'll show up.

00:51:03.667 --> 00:51:06.501
that one--
Ducrohet: Yeah. Okay.

00:51:06.501 --> 00:51:08.501
Abrams: Okay, so we have it--
we have it on one.

00:51:08.501 --> 00:51:10.501
Do you want to add--
Ducrohet: Okay, yes.

00:51:10.501 --> 00:51:13.567
Abrams: Yeah, so let's
switch over to this one,

00:51:13.567 --> 00:51:15.300
to the Mac,

00:51:15.300 --> 00:51:17.300
and so we have
the exact same client.

00:51:17.300 --> 00:51:19.133
Um, and you'll see--

00:51:19.133 --> 00:51:21.801
I think we'll see,
in just a second--

00:51:21.801 --> 00:51:23.901
um, that he--

00:51:23.901 --> 00:51:25.901
we got the exact same task here.

00:51:25.901 --> 00:51:28.534
So, um, if you add
another task there,

00:51:28.534 --> 00:51:30.534
and just tell us
when you hit "Go" there,

00:51:30.534 --> 00:51:32.534
so we can see how quickly--
and you see,

00:51:32.534 --> 00:51:34.534
I'm not touching it, so I'm not
gonna refresh the browser.

00:51:34.534 --> 00:51:36.534
This is one of the benefits
you get from Request--

00:51:36.534 --> 00:51:39.501
using RequestFactory in GWT,
is that as soon as--

00:51:39.501 --> 00:51:41.501
Ducrohet: Are you ready?
Abrams: Yeah.

00:51:41.501 --> 00:51:43.067
Ducrohet: One, two, three.

00:51:43.067 --> 00:51:46.067
Abrams: Three, okay, so it sent
it up to the App Engine server,

00:51:46.067 --> 00:51:48.200
and then back down,
and there it is--again.

00:51:48.200 --> 00:51:51.501
Um, so that's very cool.
[applause]

00:51:51.501 --> 00:51:53.501
Abrams: [speaking indistinctly]

00:51:53.501 --> 00:51:55.501
Ducrohet:
[speaking indistinctly]

00:51:55.501 --> 00:51:57.000
Abrams: Okay.
Okay, so I think we'll--

00:51:57.000 --> 00:51:58.567
Ducrohet: Let--let's do it
the other way.

00:51:58.567 --> 00:52:00.601
Abrams: Oh, you're gonna do it
the other way. Okay, yeah.

00:52:00.601 --> 00:52:02.801
Ducrohet: So I-I'll switch back
to that one.

00:52:02.801 --> 00:52:04.701
Abrams: Uh, you know,

00:52:04.701 --> 00:52:07.200
what's something that needs
to be on Larry's task list?

00:52:07.200 --> 00:52:10.200
What should we add
on Larry's task list?

00:52:10.200 --> 00:52:12.868
I need a--
man: [speaking indistinctly]

00:52:12.868 --> 00:52:14.868
Abrams: [chuckles]
Oh, yeah--

00:52:14.868 --> 00:52:18.067
better WiFi
at I/O next year.

00:52:18.067 --> 00:52:20.067
Ducrohet: Yes,
that should be good.

00:52:20.067 --> 00:52:22.868
Abrams: Okay, so now I'll
do that. I've--I've sent it.

00:52:22.868 --> 00:52:24.868
Ducrohet: There you go. You've
got the notification already,

00:52:24.868 --> 00:52:26.534
and there it is.

00:52:26.534 --> 00:52:30.534
Abrams: Yeah. So...
[applause]

00:52:30.534 --> 00:52:33.334
Abrams: Awesome.
Ducrohet: Okay, very good.

00:52:33.334 --> 00:52:35.033
Abrams: Okay,
so that was the demo,

00:52:35.033 --> 00:52:38.033
um, so just the summary
of what you saw.

00:52:38.033 --> 00:52:40.467
Uh, we think that
as an Android developer,

00:52:40.467 --> 00:52:42.467
you can increase
your customer's love

00:52:42.467 --> 00:52:44.834
by building cloud-connected
Android applications.

00:52:44.834 --> 00:52:47.567
We think App Engine is
a really fantastic technology

00:52:47.567 --> 00:52:49.567
to go use for that,

00:52:49.567 --> 00:52:52.567
and we hope that this beta
of GPE 2.4, uh,

00:52:52.567 --> 00:52:55.234
makes it very easy
to go do that.

00:52:55.234 --> 00:52:58.534
Now I imagine some of you might
want to play with this project,

00:52:58.534 --> 00:53:00.534
so it's available live
right now--

00:53:00.534 --> 00:53:03.067
the exact, uh, one we were
just running over here--

00:53:03.067 --> 00:53:06.067
if you go to
the running application,

00:53:06.067 --> 00:53:08.934
cloudtaskio.appspot,

00:53:08.934 --> 00:53:12.067
and we can test the scalability
of App Engine right now,

00:53:12.067 --> 00:53:14.501
um, by all of you
going to that.

00:53:14.501 --> 00:53:17.501
Um, all of the source code
that we typed in,

00:53:17.501 --> 00:53:19.501
this full project,

00:53:19.501 --> 00:53:22.501
is available for you
at the code site there--

00:53:22.501 --> 00:53:24.501
cloudtasksio.

00:53:24.501 --> 00:53:26.501
Um, and then I thought
it was very cool--

00:53:26.501 --> 00:53:28.934
the top project is just
the starter project,

00:53:28.934 --> 00:53:31.934
just showing you C2DM working
and the RPC working.

00:53:31.934 --> 00:53:34.934
Uh, that's available for you
to play with on your phone

00:53:34.934 --> 00:53:36.601
at that top URL.

00:53:36.601 --> 00:53:39.601
Then, um, hopefully, this
gave you just a little taste

00:53:39.601 --> 00:53:41.601
for things, so Android
sessions--do you want to--

00:53:41.601 --> 00:53:44.167
Ducrohet: Yeah. So, uh, first,
if you want to go and download

00:53:44.167 --> 00:53:47.167
the Android developer tools,
it's on developer.android.com,

00:53:47.167 --> 00:53:49.167
and we have, uh,
two other sessions--

00:53:49.167 --> 00:53:51.167
the "Android Developer Tools"

00:53:51.167 --> 00:53:54.033
is tomorrow afternoon
in room 11 at 3:00.

00:53:54.033 --> 00:53:57.033
The "Best Practice"--I don't
actually know when that is.

00:53:57.033 --> 00:53:59.534
Abrams: I can't remember.
I think it already happened,

00:53:59.534 --> 00:54:01.601
actually, so you might have
to YouTube it to get there.

00:54:01.601 --> 00:54:03.100
Ducrohet: Oh, okay.

00:54:03.100 --> 00:54:05.100
Abrams: And then the App Engine
and GP--

00:54:05.100 --> 00:54:07.100
a number of great sessions,
um, that, uh--

00:54:07.100 --> 00:54:10.100
go to, uh,
Google code appengine.

00:54:10.100 --> 00:54:12.100
Um, you can find all kinds
of good data on it.

00:54:12.100 --> 00:54:14.534
Um, a couple of good sessions
to go check out--

00:54:14.534 --> 00:54:16.501
the "Bringing the Cloud
to Your IDE."

00:54:16.501 --> 00:54:19.267
If you want to hear more about
things we've done with GPE,

00:54:19.267 --> 00:54:21.267
that's a good place
to go look, um,

00:54:21.267 --> 00:54:23.300
and then "Scaling App Engine
Applications,"

00:54:23.300 --> 00:54:25.300
because I know
your Android app cases

00:54:25.300 --> 00:54:27.000
will just be fantastically big--

00:54:27.000 --> 00:54:30.000
huge, I mean, successful.

00:54:30.000 --> 00:54:33.000
Um, okay, and then, uh, we--

00:54:33.000 --> 00:54:36.000
one thing I wanted to stress,
um, I'll put it back--

00:54:36.000 --> 00:54:38.000
Uh, one thing I wanted to stress

00:54:38.000 --> 00:54:40.000
is we really need
your feedback on this.

00:54:40.000 --> 00:54:42.000
We're very early.
Uh, this is a very raw state,

00:54:42.000 --> 00:54:44.000
uh, for GPE 2.4.

00:54:44.000 --> 00:54:46.501
We want you to go build
some apps and give us feedback

00:54:46.501 --> 00:54:48.501
so we know what we need to do

00:54:48.501 --> 00:54:50.501
to polish it up
and finish it off, so...

00:54:50.501 --> 00:54:52.501
Ducrohet: And then we have
five minutes for questions.

00:54:52.501 --> 00:54:54.501
Abrams: Yes, and we have five
minutes for questions, so...

00:54:54.501 --> 00:54:57.501
Ducrohet: So there's
two mics there, so...

00:54:57.501 --> 00:55:00.000
Abrams: Any quest--
it was perfectly clear?

00:55:00.000 --> 00:55:02.067
man: Hi, I have a question
for you.

00:55:02.067 --> 00:55:04.067
Abrams: Where are we?
Over there.

00:55:04.067 --> 00:55:06.067
man: For...

00:55:06.067 --> 00:55:09.000
[applause]

00:55:15.801 --> 00:55:18.267
man: For the RPC service
that you're providing here,

00:55:18.267 --> 00:55:20.300
how are you serializing
the data?

00:55:20.300 --> 00:55:22.434
Are you using proto buffers,
JSON objects?

00:55:22.434 --> 00:55:25.434
Abrams: Yes, uh,
it's serialized as JSON--

00:55:25.434 --> 00:55:27.100
I don't know the techn--

00:55:27.100 --> 00:55:29.100
somebody's gonna help me out
in the front row? [chuckles]

00:55:29.100 --> 00:55:31.100
It serializes it as JSON...
man: Okay.

00:55:31.100 --> 00:55:33.100
Abrams: And I don't know
what technology it's using,

00:55:33.100 --> 00:55:35.601
but you can find that out.
man: Okay, no. Thank you.

00:55:35.601 --> 00:55:37.601
Abrams: Anyone got a--
Whoops, over there.

00:55:37.601 --> 00:55:39.601
man: You showed us how to create
an app from scratch

00:55:39.601 --> 00:55:41.601
using all the generated code.

00:55:41.601 --> 00:55:43.100
What about taking

00:55:43.100 --> 00:55:46.367
an existing app and adding
App Engine functionality

00:55:46.367 --> 00:55:48.234
as an added feature to it?

00:55:48.234 --> 00:55:51.133
How do you utilize
all that generated code

00:55:51.133 --> 00:55:53.801
without having to start
from scratch on your project,

00:55:53.801 --> 00:55:55.801
importing all your old code?

00:55:55.801 --> 00:55:58.801
Abrams: Yeah, I-I think
the project structure

00:55:58.801 --> 00:56:00.801
we're using in Eclipse is a--

00:56:00.801 --> 00:56:03.300
I--we did a lot
of really good work,

00:56:03.300 --> 00:56:05.300
but it's not
rocket science work,

00:56:05.300 --> 00:56:07.767
and so you should be able
to kind of go and see

00:56:07.767 --> 00:56:10.767
how we did the link folders,
and whatnot, to make it--

00:56:10.767 --> 00:56:12.767
to make sure the tooling wizards
and stuff will work.

00:56:12.767 --> 00:56:14.400
Ducrohet: Yeah, I mean,
the only diff--

00:56:14.400 --> 00:56:16.534
the only hard part
is the shared folder,

00:56:16.534 --> 00:56:18.534
which is easy to replicate,
but, yeah,

00:56:18.534 --> 00:56:20.534
you could definitely
just create a new project

00:56:20.534 --> 00:56:22.734
and then just drop your current
Android application

00:56:22.734 --> 00:56:25.534
or App Engine in there.
I mean, it's--you know,

00:56:25.534 --> 00:56:27.567
that's the first
very rough version.

00:56:27.567 --> 00:56:29.934
Uh, definitely it's one thing
that we need to improve

00:56:29.934 --> 00:56:31.801
in the future,
and have, you know,

00:56:31.801 --> 00:56:34.767
better things to work on
for existing projects.

00:56:34.767 --> 00:56:36.767
man: Okay, thank you.
Abrams: Cool.

00:56:36.767 --> 00:56:38.767
man: Uh, you showed, uh, Java

00:56:38.767 --> 00:56:40.767
Google App Engine
implementation.

00:56:40.767 --> 00:56:42.767
Do you have a sample code

00:56:42.767 --> 00:56:44.767
or something
for a Python-based?

00:56:44.767 --> 00:56:46.767
Abrams: Uh, no--so, yes--

00:56:46.767 --> 00:56:49.601
So App Engine supports Python
just as well as it does Java.

00:56:49.601 --> 00:56:52.100
We--we chose to build
the tooling in Eclipse

00:56:52.100 --> 00:56:53.667
up around Java,

00:56:53.667 --> 00:56:56.067
um, because it's just
more common,

00:56:56.067 --> 00:56:58.067
same language,
you know, on both sides,

00:56:58.067 --> 00:57:00.534
Um, the same basic system
will work.

00:57:00.534 --> 00:57:03.000
Uh, we don't have
the RequestFactory framework

00:57:03.000 --> 00:57:05.000
for Python yet, but that's, uh,

00:57:05.000 --> 00:57:07.000
I mean, if that's something
people are interested in,

00:57:07.000 --> 00:57:08.734
it's good--
really good feedback.

00:57:08.734 --> 00:57:10.267
man: Okay, thank you.

00:57:10.267 --> 00:57:12.067
man: Is there anything
special we need to do

00:57:12.067 --> 00:57:15.434
with the Android project to make
it compatible with Proguard?

00:57:15.434 --> 00:57:19.267
Ducrohet: Um... that's actually
a good question.

00:57:19.267 --> 00:57:21.000
Uh, there's probably--

00:57:21.000 --> 00:57:23.501
yeah, you're probably
going to have to make sure

00:57:23.501 --> 00:57:25.501
that all the classes,
like the TaskProxy,

00:57:25.501 --> 00:57:27.501
and all of that
that are generated

00:57:27.501 --> 00:57:29.501
do not get renamed
by Proguard.

00:57:29.501 --> 00:57:31.000
man: Mm-hmm.

00:57:31.000 --> 00:57:32.734
Ducrohet: Um, that's--
yeah, that--

00:57:32.734 --> 00:57:35.501
I mean, at first, you're going
to have to do that manually.

00:57:35.501 --> 00:57:38.000
It's definitely something
that we'll have to think about

00:57:38.000 --> 00:57:40.934
to maybe integrate into
the, uh, like the RPC tooling,

00:57:40.934 --> 00:57:43.501
so that it automatically add
to the Proguard file,

00:57:43.501 --> 00:57:45.501
but right now, that's not...
[speaking indistinctly]

00:57:45.501 --> 00:57:48.000
It's a very rough version.
man: Okay, thank you.

00:57:48.000 --> 00:57:50.501
Ducrohet: But it's--
it's a very good feedback.

00:57:50.501 --> 00:57:53.501
man: Um, you showed GWT--you
don't actually need to refresh

00:57:53.501 --> 00:57:55.501
to get the task updated.
Abrams: Mm-hmm.

00:57:55.501 --> 00:57:57.501
man: What technology are you
using for that?

00:57:57.501 --> 00:57:59.133
Are you using long polling?

00:57:59.133 --> 00:58:02.067
Are you using the channel API
that's built into App Engine?

00:58:02.067 --> 00:58:05.701
How are you doing the push
request from the server?

00:58:05.701 --> 00:58:08.400
Abrams: Yeah, uh, I believe
it's doing long polling.

00:58:08.400 --> 00:58:11.400
It's using RequestFactory
functionality that's been in--

00:58:11.400 --> 00:58:14.067
Is Chris giving me the answer?
No. [chuckles]

00:58:14.067 --> 00:58:16.067
It's been in for--
man: [speaking indistinctly]

00:58:16.067 --> 00:58:19.000
Abrams: Yeah. Yeah, so I believe
it's doing long polling.

00:58:19.000 --> 00:58:21.400
man: Is there any, um,
plans to support

00:58:21.400 --> 00:58:23.400
the channel API in the future,

00:58:23.400 --> 00:58:26.400
or is that not really
where GWT is headed?

00:58:26.400 --> 00:58:28.934
Abrams: Chris, do you want
to help me?

00:58:28.934 --> 00:58:30.934
Chris: This actually came up
in the fireside chat today.

00:58:30.934 --> 00:58:32.400
We, uh...

00:58:32.400 --> 00:58:34.400
Abrams: Go--go to the mic.
Go to the mic.

00:58:34.400 --> 00:58:36.400
So Chris is the PM for GWT.

00:58:36.400 --> 00:58:38.400
Chris: Hey, how's it going?
Hey, great demo.

00:58:38.400 --> 00:58:40.734
Yeah, that actually came up
in the fireside chat today,

00:58:40.734 --> 00:58:43.434
and we're--we've had a couple
teams messing with it,

00:58:43.434 --> 00:58:46.234
and trying it out, and, uh--
so, yeah, we're looking into it.

00:58:46.234 --> 00:58:48.234
Nothing on...
[speaking indistinctly]

00:58:48.234 --> 00:58:50.234
Abrams: Okay, thanks.

00:58:50.234 --> 00:58:52.734
man: [speaking indistinctly]

00:58:52.734 --> 00:58:54.400
Abrams: Okay, yeah.

00:58:54.400 --> 00:58:56.400
man: I have a quick comment
for Chris--

00:58:56.400 --> 00:58:58.734
He should use this as part
of a sample application.

00:58:58.734 --> 00:59:01.167
This is better-looking than what
you have in GWT showcases.

00:59:01.167 --> 00:59:03.167
[laughter]

00:59:03.167 --> 00:59:05.167
man: And, uh, second thing is,
uh, this won't work

00:59:05.167 --> 00:59:07.167
with remote service, right?
This is for RequestFactory,

00:59:07.167 --> 00:59:09.167
so we'll have
to put RequestFactory?

00:59:09.167 --> 00:59:10.934
Abrams: Yeah,
this is RequestFactory.

00:59:10.934 --> 00:59:12.501
man: Okay, thank you.

00:59:12.501 --> 00:59:14.534
Abrams: Yeah, we had
a lot of debates about it,

00:59:14.534 --> 00:59:16.167
but decided to go
to RequestFactory.

00:59:16.167 --> 00:59:17.801
man: That's fine, thank you.

00:59:17.801 --> 00:59:19.501
Abrams: Okay, yep,
last--last question--

00:59:19.501 --> 00:59:21.501
man: You generate
a lot of code.

00:59:21.501 --> 00:59:24.000
Is there any plans of putting
that in the framework instead?

00:59:24.000 --> 00:59:26.734
Abrams: Yes, again, something
we're debating a lot--

00:59:26.734 --> 00:59:29.734
we did actually put some code
already for C2DM

00:59:29.734 --> 00:59:32.734
in the framework.
Um, we felt a little weird

00:59:32.734 --> 00:59:34.734
about putting code
in a framework

00:59:34.734 --> 00:59:36.734
that writes directly
to DataStore, for example,

00:59:36.734 --> 00:59:38.734
because you might want to use
a different store.

00:59:38.734 --> 00:59:40.734
Um, but it's a balance that
we're going back and forth on.

00:59:40.734 --> 00:59:42.734
I think we erred this time
a little bit more

00:59:42.734 --> 00:59:44.734
onto the generated code
than on the framework,

00:59:44.734 --> 00:59:46.734
but that's an area where we're
really looking for feedback,

00:59:46.734 --> 00:59:49.801
so jump on the forums
and give us some feedback.

00:59:49.801 --> 00:59:51.801
Speaking of which, um,

00:59:51.801 --> 00:59:54.300
uh, we would--we would really
love your feedback

00:59:54.300 --> 00:59:56.300
on the session, as well--

00:59:56.300 --> 00:59:58.300
Um, you can--you can tweet here,

00:59:58.300 --> 01:00:01.300
and I believe that code takes
you to the feedback forum.

01:00:01.300 --> 01:00:04.300
man: Okay, and you can use that
also from the, uh, Google app,

01:00:04.300 --> 01:00:06.300
you can go to find that link.
Abrams: Yep.

01:00:06.300 --> 01:00:08.400
Yeah, and so one of us
has to buy drinks

01:00:08.400 --> 01:00:10.634
for the other
based on your feedback,

01:00:10.634 --> 01:00:13.501
so please--please put that in.
Ducrohet: [laughs]

01:00:13.501 --> 01:00:15.834
Adams: Okay, and we'll be around
here for questions,

01:00:15.834 --> 01:00:18.834
uh, if you want to just come up,
or in the Android booth.

01:00:18.834 --> 01:00:20.834
man: Great.
Abrams: So thanks.

01:00:20.834 --> 01:00:22.767
Ducrohet: Thank you very much.

