WEBVTT
Kind: captions
Language: en

00:00:08.750 --> 00:00:11.520
BRUNO OLIVEIRA: Hello and
welcome to today's episode

00:00:11.520 --> 00:00:12.440
of Game On!

00:00:12.440 --> 00:00:14.550
I am Bruno Oliveira, and work in
the Android Developer Relations

00:00:14.550 --> 00:00:15.030
Team.

00:00:15.030 --> 00:00:16.610
DAN GALPIN: And I'm
Dan Galpin and I also

00:00:16.610 --> 00:00:17.950
work on the Developer
Relations Team.

00:00:17.950 --> 00:00:19.366
BRUNO OLIVEIRA:
And so today we're

00:00:19.366 --> 00:00:21.600
going to talk about the
Play Games plugin for Unity.

00:00:21.600 --> 00:00:23.910
So Unity, as you know, is one
of the most popular game engines

00:00:23.910 --> 00:00:24.580
out there.

00:00:24.580 --> 00:00:27.384
And the good news is that we
now have an official plugin that

00:00:27.384 --> 00:00:29.300
allows game developers
who are writing a Unity

00:00:29.300 --> 00:00:32.720
game to integrate that with
Google Play game services.

00:00:32.720 --> 00:00:33.674
So what is it?

00:00:33.674 --> 00:00:35.340
So if you're writing
your game in Unity,

00:00:35.340 --> 00:00:38.330
you probably have your C#
code sitting there on one side

00:00:38.330 --> 00:00:41.050
and you want to access
the Google Play Games API.

00:00:41.050 --> 00:00:43.880
However, between you and
the API there is a gap.

00:00:43.880 --> 00:00:45.730
Notice the very
advanced water effect.

00:00:45.730 --> 00:00:46.830
DAN GALPIN: Oh, very nice.

00:00:46.830 --> 00:00:48.205
BRUNO OLIVEIRA:
In this gap there

00:00:48.205 --> 00:00:49.695
are some sharks like threading.

00:00:49.695 --> 00:00:52.420
You have to deal with threading
because Unity runs on a thread

00:00:52.420 --> 00:00:54.003
and then Google Play
Games API expects

00:00:54.003 --> 00:00:56.000
you to make calls
on the UI thread.

00:00:56.000 --> 00:00:58.380
Then there's the
whole thing about JNI.

00:00:58.380 --> 00:01:02.140
Of course, Unity has some
pretty interesting [INAUDIBLE]

00:01:02.140 --> 00:01:02.880
to deal with it.

00:01:02.880 --> 00:01:06.139
But we still have to be careful
with return values and so on.

00:01:06.139 --> 00:01:08.180
And then there's also some
platform-specific code

00:01:08.180 --> 00:01:10.388
that you would have to write
to access the Play Games

00:01:10.388 --> 00:01:12.305
API on Android and iOS
and so on and so forth.

00:01:12.305 --> 00:01:14.429
DAN GALPIN: I think this
is fairly harsh on sharks,

00:01:14.429 --> 00:01:15.310
really, this slide.

00:01:15.310 --> 00:01:15.910
Yes.

00:01:15.910 --> 00:01:16.910
BRUNO OLIVEIRA: Exactly.

00:01:16.910 --> 00:01:20.750
So the plugin is a way to
bridge that gap-- see, bridge?

00:01:20.750 --> 00:01:23.500
As a way to bridge that gap
and get your game safely across

00:01:23.500 --> 00:01:25.090
to use the Google
Play games services.

00:01:25.090 --> 00:01:27.150
So this is why we
developed the plugin.

00:01:27.150 --> 00:01:31.420
So you can just write your game
code in C# and then not have

00:01:31.420 --> 00:01:33.490
to worry about all
of these details.

00:01:33.490 --> 00:01:36.270
So Dan, one of things that
I see in a lot of plugins

00:01:36.270 --> 00:01:39.740
is that they end up forcing you
to override your Unity Player

00:01:39.740 --> 00:01:43.360
activity and they force you
to use a particular one that's

00:01:43.360 --> 00:01:44.770
adapted to their plugin.

00:01:44.770 --> 00:01:47.150
So if you are using a different
player activity because

00:01:47.150 --> 00:01:48.970
of some other plugin
then you're in trouble

00:01:48.970 --> 00:01:52.275
or you have to do
horrible hacks.

00:01:52.275 --> 00:01:54.150
DAN GALPIN: So I'm glad
you asked about this.

00:01:54.150 --> 00:01:55.862
So the Google Play
games plugin does not

00:01:55.862 --> 00:01:57.820
require that you override
your base activities.

00:01:57.820 --> 00:02:00.090
Your game can use Unity's
standard player activity

00:02:00.090 --> 00:02:02.354
or whatever other activity
class you're already using.

00:02:02.354 --> 00:02:04.020
BRUNO OLIVEIRA: So
that's very good news

00:02:04.020 --> 00:02:06.120
because this is
one less thing you

00:02:06.120 --> 00:02:09.470
have to do to get
this integrated.

00:02:09.470 --> 00:02:11.030
So where can I get this plugin?

00:02:11.030 --> 00:02:13.820
Well, you can download
it from our repository,

00:02:13.820 --> 00:02:14.792
and that's the URL.

00:02:14.792 --> 00:02:17.000
So as you can see, you can
either type the full thing

00:02:17.000 --> 00:02:19.160
or this very easy to
memorize shortened version,

00:02:19.160 --> 00:02:23.710
which is goo.gl/-- you can
memorize it like bring your own

00:02:23.710 --> 00:02:24.370
zebra.

00:02:24.370 --> 00:02:25.745
DAN GALPIN: No,
just bookmark it.

00:02:25.745 --> 00:02:26.410
BRUNO OLIVEIRA:
Just bookmark it.

00:02:26.410 --> 00:02:27.785
DAN GALPIN: But
the real question

00:02:27.785 --> 00:02:29.119
is can they get the source code?

00:02:29.119 --> 00:02:30.618
BRUNO OLIVEIRA: Oh,
the source code.

00:02:30.618 --> 00:02:33.190
So you can get the source code
in this completely different

00:02:33.190 --> 00:02:34.320
URL.

00:02:34.320 --> 00:02:37.330
Yes, it's open-source so now you
can look to see how it works,

00:02:37.330 --> 00:02:39.860
you can break it if you want,
you can extend or customize it

00:02:39.860 --> 00:02:40.805
however you want.

00:02:40.805 --> 00:02:41.700
So it's open source.

00:02:41.700 --> 00:02:44.320
And make sure to check
the Getting Started Guide.

00:02:44.320 --> 00:02:45.280
It's also on that URL.

00:02:45.280 --> 00:02:46.062
DAN GALPIN: Yeah, you
might be able to use it

00:02:46.062 --> 00:02:49.310
as a reference for developing
your own implementation of Play

00:02:49.310 --> 00:02:51.410
games services on something
else outside of Unity.

00:02:51.410 --> 00:02:52.980
BRUNO OLIVEIRA: Exactly.

00:02:52.980 --> 00:02:55.380
So what exactly can
do with this plugin?

00:02:55.380 --> 00:02:57.520
Well right now you can
do sign in, of course.

00:02:57.520 --> 00:02:59.837
Otherwise it can't
do anything else.

00:02:59.837 --> 00:03:02.420
You can get the user to sign in
to Google Play Games Services.

00:03:02.420 --> 00:03:03.794
Then you can unlock
achievements,

00:03:03.794 --> 00:03:06.450
reveal achievements,
increment achievements.

00:03:06.450 --> 00:03:08.270
You have leaderboards
so you can post

00:03:08.270 --> 00:03:09.394
the scores to leaderboards.

00:03:09.394 --> 00:03:12.320
You can to Cloud Save, which
means loading from the cloud,

00:03:12.320 --> 00:03:14.000
saving to the cloud.

00:03:14.000 --> 00:03:15.970
And you can also show
the built-in achievement

00:03:15.970 --> 00:03:18.299
and leaderboard UIs.

00:03:18.299 --> 00:03:19.840
DAN GALPIN: So
according to our docs,

00:03:19.840 --> 00:03:22.350
to use the Games API you have
to add a library project,

00:03:22.350 --> 00:03:24.850
set up your Android manifests
and a few other things, right?

00:03:24.850 --> 00:03:26.280
So how do I do
that with a plugin?

00:03:26.280 --> 00:03:26.710
BRUNO OLIVEIRA: Exactly.

00:03:26.710 --> 00:03:28.620
So the good news is
that the plugin actually

00:03:28.620 --> 00:03:29.661
does all of that for you.

00:03:29.661 --> 00:03:31.710
All you have to do is go
into the setup wizard,

00:03:31.710 --> 00:03:34.130
if you will, and fill
in your app ID there.

00:03:34.130 --> 00:03:38.380
So as soon as you fill in your
app ID, in the case of Android,

00:03:38.380 --> 00:03:40.380
it's going to automatically
important everything

00:03:40.380 --> 00:03:41.656
they think you need for you.

00:03:41.656 --> 00:03:43.780
And this includes generating
your Android manifest,

00:03:43.780 --> 00:03:45.780
this includes importing
the Google Play services

00:03:45.780 --> 00:03:47.695
library project and
everything else you need.

00:03:47.695 --> 00:03:49.070
So for iOS, all
you have to do is

00:03:49.070 --> 00:03:51.591
enter your client ID, your
app ID, and your bundle ID

00:03:51.591 --> 00:03:53.090
and it's going to
do the same thing.

00:03:53.090 --> 00:03:55.531
So all that boring
setup of making sure

00:03:55.531 --> 00:03:57.780
that you have the library
projects in the right place,

00:03:57.780 --> 00:04:00.090
this is all done
automatically by the plugin.

00:04:00.090 --> 00:04:02.915
So hopefully that's going to
be much easier than having

00:04:02.915 --> 00:04:04.040
to do all of this manually.

00:04:04.040 --> 00:04:06.220
DAN GALPIN: You know, it's
possible we made it too easy.

00:04:06.220 --> 00:04:06.780
BRUNO OLIVEIRA: Too easy?

00:04:06.780 --> 00:04:08.030
DAN GALPIN: Too easy.

00:04:08.030 --> 00:04:08.660
BRUNO OLIVEIRA: DAN
GALPIN: Let's hope not.

00:04:08.660 --> 00:04:09.320
DAN GALPIN: BRUNO
OLIVEIRA: So Unity already

00:04:09.320 --> 00:04:10.929
has a built-in social API.

00:04:10.929 --> 00:04:12.095
BRUNO OLIVEIRA: That's true.

00:04:12.095 --> 00:04:13.740
Unity already has a
built-in social API

00:04:13.740 --> 00:04:15.220
called ISocialPlatform.

00:04:15.220 --> 00:04:17.279
So it's actually an
abstract interface

00:04:17.279 --> 00:04:19.094
that defines a few
classes and methods.

00:04:19.094 --> 00:04:20.510
So for things like
authentication,

00:04:20.510 --> 00:04:23.160
unlocking achievements, and
posting scores to leaderboards.

00:04:23.160 --> 00:04:25.467
So the Google Play
Games plugin, rather

00:04:25.467 --> 00:04:27.300
than inventing a whole
new API, what it does

00:04:27.300 --> 00:04:29.030
is it implements
to that interface

00:04:29.030 --> 00:04:31.480
so that developers can
actually use existing code

00:04:31.480 --> 00:04:33.839
and just simply switch
it to Play Games

00:04:33.839 --> 00:04:35.380
by picking a different
implementation

00:04:35.380 --> 00:04:36.260
of that interface.

00:04:36.260 --> 00:04:40.030
So we hope that's going
to be pretty convenient.

00:04:40.030 --> 00:04:41.980
So this is how you would
initialize a plugin.

00:04:41.980 --> 00:04:44.542
DAN GALPIN: Now that's
not Android or iOS code.

00:04:44.542 --> 00:04:46.000
BRUNO OLIVEIRA:
That's actually C#.

00:04:46.000 --> 00:04:48.010
But that's the beauty
of, now that you ask.

00:04:48.010 --> 00:04:49.551
You don't have to
know whether or not

00:04:49.551 --> 00:04:52.420
this is Android or iOS because
all the code works regardless

00:04:52.420 --> 00:04:53.320
of the platform.

00:04:53.320 --> 00:04:56.370
So the plugin takes care of
translating the ISocialPlatform

00:04:56.370 --> 00:04:58.380
calls into the
corresponding Play Games

00:04:58.380 --> 00:05:02.250
SDK in Java or Objective-C
into the corresponding

00:05:02.250 --> 00:05:04.550
platform-based SDKs
as appropriate.

00:05:04.550 --> 00:05:06.210
So you as the a
game developer don't

00:05:06.210 --> 00:05:07.626
have to worry about
whether or not

00:05:07.626 --> 00:05:09.840
the game is running
on iOS or Android.

00:05:09.840 --> 00:05:11.410
After we've done
the setup for you,

00:05:11.410 --> 00:05:13.596
you have the setup wizard
for Android or iOS,

00:05:13.596 --> 00:05:15.970
that's the last time you have
to worry about the platform

00:05:15.970 --> 00:05:18.530
differences as far as Google
Play Games is concerned.

00:05:18.530 --> 00:05:20.894
So this is pretty convenient.

00:05:20.894 --> 00:05:23.310
DAN GALPIN: That's why classes
that start with I are cool.

00:05:23.310 --> 00:05:24.700
BRUNO OLIVEIRA: That's true.

00:05:24.700 --> 00:05:26.450
Classes that start
with I are very cool.

00:05:26.450 --> 00:05:30.550
So this is what you have to do
to get people to authenticate.

00:05:30.550 --> 00:05:31.920
So this is the first step.

00:05:31.920 --> 00:05:34.440
You have to get people to get
authenticated with the game

00:05:34.440 --> 00:05:35.860
with Google Play Games services.

00:05:35.860 --> 00:05:37.318
So this is typically
what you would

00:05:37.318 --> 00:05:39.706
do when somebody will click
the sign-in button, right?

00:05:39.706 --> 00:05:41.580
DAN GALPIN: Yeah, but,
you know, you can also

00:05:41.580 --> 00:05:42.597
call that on startup.

00:05:42.597 --> 00:05:43.930
And this is really, really cool.

00:05:43.930 --> 00:05:46.610
We find that when you actually
pop that dialogue on startup

00:05:46.610 --> 00:05:48.039
more people are
likely to sign in.

00:05:48.039 --> 00:05:50.080
And that's better for you,
it's better for users,

00:05:50.080 --> 00:05:52.260
makes the users happy.

00:05:52.260 --> 00:05:53.940
So definitely
consider doing that.

00:05:53.940 --> 00:05:54.700
BRUNO OLIVEIRA:
Just make sure not

00:05:54.700 --> 00:05:56.090
to be to annoying to the user.

00:05:56.090 --> 00:05:59.057
So if the user cancels the
sign-in flow a few times

00:05:59.057 --> 00:06:01.390
that's probably because they
don't really want to do it.

00:06:01.390 --> 00:06:04.047
So you're probably better off
not trying to push it too much.

00:06:04.047 --> 00:06:05.380
You don't have a sign-in button.

00:06:05.380 --> 00:06:05.650
DAN GALPIN: Yeah.

00:06:05.650 --> 00:06:07.440
Leave a button
there in all cases.

00:06:07.440 --> 00:06:08.850
BRUNO OLIVEIRA: Exactly.

00:06:08.850 --> 00:06:10.860
Just in case they change
their minds one day.

00:06:10.860 --> 00:06:11.980
DAN GALPIN: Exactly.

00:06:11.980 --> 00:06:13.690
Their friends
might say, hey, you

00:06:13.690 --> 00:06:15.170
should be you
should be competing

00:06:15.170 --> 00:06:17.336
with me on the leaderboards,
or something like that.

00:06:17.336 --> 00:06:18.737
So make it available.

00:06:18.737 --> 00:06:19.570
BRUNO OLIVEIRA: Yes.

00:06:19.570 --> 00:06:21.740
So how do you unlock an
achievement using plugin?

00:06:21.740 --> 00:06:23.930
All they have to do is
call Social.ReportProgress.

00:06:23.930 --> 00:06:25.870
Again, this is not a
method that we made up.

00:06:25.870 --> 00:06:28.495
This is a method that is part of
the ISocialPlatform interface.

00:06:28.495 --> 00:06:30.411
So all they have to do
is call ReportProgress,

00:06:30.411 --> 00:06:32.090
then your pass in
the achievement ID.

00:06:32.090 --> 00:06:35.550
So that's the same thing you
get from the developer console.

00:06:35.550 --> 00:06:36.970
And then you pass your callback.

00:06:36.970 --> 00:06:40.730
That's going to
determine as a callback

00:06:40.730 --> 00:06:42.790
if there's success or failure.

00:06:42.790 --> 00:06:44.790
Next how do you think
increment the achievement?

00:06:44.790 --> 00:06:46.080
Incrementing
achievements, you can also

00:06:46.080 --> 00:06:47.581
do it through
ReportProgress, but we

00:06:47.581 --> 00:06:49.913
do have an extension method
called IncrementAchievement,

00:06:49.913 --> 00:06:51.500
which works more
like our platform.

00:06:51.500 --> 00:06:53.754
So just pass in the
achievement ID, the number

00:06:53.754 --> 00:06:55.670
of steps you want to
increment it by, and then

00:06:55.670 --> 00:06:58.870
again a callback that
indicates success or failure.

00:06:58.870 --> 00:07:00.490
Reporting a score
is equally easy.

00:07:00.490 --> 00:07:02.510
You just call ReportScore,
conveniently enough,

00:07:02.510 --> 00:07:04.881
and you pass in the ID
of the more leaderboard

00:07:04.881 --> 00:07:07.214
that you're going to report
it to and the score that you

00:07:07.214 --> 00:07:08.130
want to report.

00:07:08.130 --> 00:07:11.530
Again, success or failure
is in the callback.

00:07:11.530 --> 00:07:14.190
And then we also have
the built in UIs.

00:07:14.190 --> 00:07:18.180
So that you don't have to
create the UIs yourself,

00:07:18.180 --> 00:07:19.740
we have some built
in UIs that can

00:07:19.740 --> 00:07:21.320
show using just
one line of code.

00:07:21.320 --> 00:07:24.179
So if you just want to show
the standard achievements UI,

00:07:24.179 --> 00:07:25.720
you can just call
ShowAchievementsUI,

00:07:25.720 --> 00:07:27.450
and then if you want
to show the standard

00:07:27.450 --> 00:07:28.730
leaderboard UI, same thing.

00:07:28.730 --> 00:07:29.747
Just ShowLeaderboardUI.

00:07:29.747 --> 00:07:31.330
This is what it looks
like on Android.

00:07:31.330 --> 00:07:34.375
So this is the standard
achievements UI for a game

00:07:34.375 --> 00:07:36.860
that we made called
Nostalgic Racer.

00:07:36.860 --> 00:07:39.390
So notice that I can see the
achievements that I've unlocked

00:07:39.390 --> 00:07:43.180
and I also see the achievements
that I have not unlocked.

00:07:43.180 --> 00:07:45.390
The corresponding screen
on iOS is like this.

00:07:45.390 --> 00:07:47.590
So same functionality
except it looks

00:07:47.590 --> 00:07:49.747
more compatible
with the platform.

00:07:49.747 --> 00:07:51.330
And we also have the
corresponding one

00:07:51.330 --> 00:07:52.100
for leaderboard.

00:07:52.100 --> 00:07:54.720
So this is an example of
leaderboard screen on Android.

00:07:54.720 --> 00:07:57.830
So it shows my friends, and
then the public leaderboards

00:07:57.830 --> 00:08:01.034
and what scores people have.

00:08:01.034 --> 00:08:02.450
And we also have
cloud save right?

00:08:02.450 --> 00:08:04.730
So Cloud Save is one of my
favorite features in games.

00:08:04.730 --> 00:08:07.500
And I think to few games
implement it nowadays.

00:08:07.500 --> 00:08:09.680
I wish all games
would implement that.

00:08:09.680 --> 00:08:12.690
DAN GALPIN: I mean,
for us we basically

00:08:12.690 --> 00:08:15.130
won't play games unless they
have some sort of cloud save.

00:08:15.130 --> 00:08:16.129
BRUNO OLIVEIRA: Exactly.

00:08:16.129 --> 00:08:18.120
Because right now I think
more and more people

00:08:18.120 --> 00:08:19.510
live in the cloud.

00:08:19.510 --> 00:08:22.930
You're not married
to a specific device.

00:08:22.930 --> 00:08:24.450
People change
devices all the time.

00:08:24.450 --> 00:08:25.908
I mean, devices
fall into the water

00:08:25.908 --> 00:08:27.165
and then you replace them.

00:08:27.165 --> 00:08:30.730
So all sorts of things happen
to devices, including upgrades.

00:08:30.730 --> 00:08:32.580
So when that happens
you don't want

00:08:32.580 --> 00:08:34.870
to lose your game progress
just because of that.

00:08:34.870 --> 00:08:37.020
So Cloud Save is a pretty
important feature there,

00:08:37.020 --> 00:08:41.539
which is why we wanted to
be in the plugin as well.

00:08:41.539 --> 00:08:45.070
So the plugin, of course,
allows you to save straight

00:08:45.070 --> 00:08:46.830
into the cloud, load
saves from the cloud,

00:08:46.830 --> 00:08:50.644
and of course, you can also
handle cloud save conflicts.

00:08:50.644 --> 00:08:52.060
DAN GALPIN: Nice
icon there, yeah.

00:08:52.060 --> 00:08:53.460
Well done.

00:08:53.460 --> 00:08:55.210
BRUNO OLIVEIRA: So
loading from the cloud.

00:08:55.210 --> 00:08:57.470
So how do you go ahead and
load data from the cloud?

00:08:57.470 --> 00:08:59.850
To do that all you have
to do is call LoadState

00:08:59.850 --> 00:09:03.630
and then you pass
in-- as you know,

00:09:03.630 --> 00:09:05.740
our Cloud Save
service has slots.

00:09:05.740 --> 00:09:07.330
So we currently have
four slots, so it

00:09:07.330 --> 00:09:09.705
can to have different types
of data in each of the slots.

00:09:09.705 --> 00:09:12.546
In this example we're just
using slot zero for simplicity.

00:09:12.546 --> 00:09:14.420
Just call LoadState,
pass in the slot number,

00:09:14.420 --> 00:09:15.680
and then you pass
in a listener that's

00:09:15.680 --> 00:09:18.265
going to be called whenever
that load operation completes.

00:09:18.265 --> 00:09:19.670
So it's asynchronous.

00:09:19.670 --> 00:09:21.340
Saving to the cloud
is very similar.

00:09:21.340 --> 00:09:24.560
Just call UpdateState, pass
in the slot number, the data,

00:09:24.560 --> 00:09:25.720
and the listener.

00:09:25.720 --> 00:09:28.380
Notice that the data is
just a binary, so to us

00:09:28.380 --> 00:09:29.740
it is completely opaque.

00:09:29.740 --> 00:09:32.070
We have no idea what's
inside that binary.

00:09:32.070 --> 00:09:35.410
So is your game's responsibility
to encode the data

00:09:35.410 --> 00:09:37.490
into a binary and
then decode it later.

00:09:37.490 --> 00:09:40.290
And be careful about
different platforms and all

00:09:40.290 --> 00:09:45.160
the usual caveats about dealing
with the serialization of data.

00:09:45.160 --> 00:09:46.924
Again this is the
OnStateLoadedListener

00:09:46.924 --> 00:09:48.340
that's going to
be called whenever

00:09:48.340 --> 00:09:50.972
the game is to be saved.

00:09:50.972 --> 00:09:52.680
So this is what the
OnStateLoadedListener

00:09:52.680 --> 00:09:53.190
looks like.

00:09:53.190 --> 00:09:55.440
Notice that there's one
additional method there that's

00:09:55.440 --> 00:09:56.814
called OnStateConflict.

00:09:56.814 --> 00:09:58.230
And OnStateConflict
is going to be

00:09:58.230 --> 00:10:00.372
called whenever
there's a conflict.

00:10:00.372 --> 00:10:02.580
And a conflict happens when,
for instance, one device

00:10:02.580 --> 00:10:04.400
tries to save one state
and then a different device

00:10:04.400 --> 00:10:05.920
tried to save a different state.

00:10:05.920 --> 00:10:09.050
So this is where you want
to merge the two states

00:10:09.050 --> 00:10:11.977
and return the combined
progress to the user

00:10:11.977 --> 00:10:13.560
so the user doesn't
lose any progress.

00:10:13.560 --> 00:10:16.160
So if they unlocked one
level, level A on one device

00:10:16.160 --> 00:10:17.830
and then level B on
different device,

00:10:17.830 --> 00:10:19.663
the result you want to
have is that the user

00:10:19.663 --> 00:10:22.552
has a unlocked levels A and
B and not one or the other.

00:10:22.552 --> 00:10:25.010
DAN GALPIN: So what happens if
you are trying to Cloud Save

00:10:25.010 --> 00:10:28.000
and you are not
connected to the net?

00:10:28.000 --> 00:10:29.730
BRUNO OLIVEIRA: So
one of the advantages

00:10:29.730 --> 00:10:33.350
of our cloud save API is that
it actually works offline.

00:10:33.350 --> 00:10:36.780
So you can have cloud save
even though there's no cloud.

00:10:36.780 --> 00:10:38.206
Because what
happens is that when

00:10:38.206 --> 00:10:39.830
you try to save to
the cloud and you're

00:10:39.830 --> 00:10:42.430
offline that state
that you're saving

00:10:42.430 --> 00:10:44.330
is going to get stored
in a local cache.

00:10:44.330 --> 00:10:46.413
Then that's going to get
synchronized to the cloud

00:10:46.413 --> 00:10:50.660
as soon as connectivity
comes back.

00:10:50.660 --> 00:10:52.760
So same thing with
loading from the cloud.

00:10:52.760 --> 00:10:54.950
So the device going to
have a cache of the last

00:10:54.950 --> 00:10:56.760
known state of the
cloud, which means

00:10:56.760 --> 00:10:59.020
that even if the
user doesn't have

00:10:59.020 --> 00:11:01.490
an internet connection at
the moment, when you ask

00:11:01.490 --> 00:11:03.300
the device to load
from the cloud

00:11:03.300 --> 00:11:06.290
it's going to return the last
known state that the device has

00:11:06.290 --> 00:11:06.990
cached.

00:11:06.990 --> 00:11:10.160
So this is very convenient
because, after all,

00:11:10.160 --> 00:11:13.410
mobile users are not always
connected to the internet.

00:11:13.410 --> 00:11:15.620
In the real world there are
things like parking lots

00:11:15.620 --> 00:11:17.090
and tunnels and so on.

00:11:17.090 --> 00:11:19.249
And even foreign countries
where roaming charges

00:11:19.249 --> 00:11:20.040
are very expensive.

00:11:20.040 --> 00:11:21.706
DAN GALPIN: The real
world is overrated.

00:11:21.706 --> 00:11:23.500
BRUNO OLIVEIRA: Yes, exactly.

00:11:23.500 --> 00:11:27.420
So we also have a sample
for you to play with.

00:11:27.420 --> 00:11:31.430
So if you download our source
code from the Git repository,

00:11:31.430 --> 00:11:34.280
you can also see this
Cubic Pilot sample.

00:11:34.280 --> 00:11:37.900
It's a very simple game that
shows all of my artistic skill

00:11:37.900 --> 00:11:41.580
in creating graphics,
which essentially is just

00:11:41.580 --> 00:11:42.760
creating cubes.

00:11:42.760 --> 00:11:45.610
So as you can see, essentially
every enemy and everything

00:11:45.610 --> 00:11:47.830
in the game is just a cube
or combinations thereof.

00:11:47.830 --> 00:11:49.371
DAN GALPIN: But it's
surprisingly fun

00:11:49.371 --> 00:11:50.260
to destroy geometry.

00:11:50.260 --> 00:11:51.093
BRUNO OLIVEIRA: Yes.

00:11:51.093 --> 00:11:54.620
Destroying geometry is a
very interesting pastime.

00:11:54.620 --> 00:11:56.890
So if you want to
destroy some geometry,

00:11:56.890 --> 00:12:00.407
definitely download that
sample and you can play it.

00:12:00.407 --> 00:12:02.740
If you want to try the Google
Play games services on it,

00:12:02.740 --> 00:12:04.620
all you have to do,
it has placeholders

00:12:04.620 --> 00:12:07.560
where you can drop in your
leaderboard IDs and achievement

00:12:07.560 --> 00:12:08.360
IDs.

00:12:08.360 --> 00:12:11.175
And so you can
actually use it to try

00:12:11.175 --> 00:12:13.300
unlocking achievements,
and posting to leaderboards

00:12:13.300 --> 00:12:15.790
and so on and so forth.

00:12:15.790 --> 00:12:18.440
And I guess that's pretty
much all there is to it.

00:12:18.440 --> 00:12:20.800
So again where can
they get all of this?

00:12:20.800 --> 00:12:23.150
Again on this website that
we have not mentioned before.

00:12:23.150 --> 00:12:23.780
DAN GALPIN: No, not at all.

00:12:23.780 --> 00:12:24.904
BRUNO OLIVEIRA: Not at all.

00:12:24.904 --> 00:12:26.657
So bring your own
zebra-- oh no, bookmark.

00:12:26.657 --> 00:12:27.740
DAN GALPIN: Yes, bookmark.

00:12:27.740 --> 00:12:28.090
BRUNO OLIVEIRA: Yes.

00:12:28.090 --> 00:12:29.890
So be sure to download
it from there.

00:12:29.890 --> 00:12:31.431
We have source code,
we have samples,

00:12:31.431 --> 00:12:33.140
we have a pretty
complete Getting

00:12:33.140 --> 00:12:34.830
Started Guide that
explains everything.

00:12:34.830 --> 00:12:37.730
We also have a zip file
with all the API docs.

00:12:37.730 --> 00:12:41.482
So for all the methods we have
documentation on what they do

00:12:41.482 --> 00:12:42.440
and so on and so forth.

00:12:42.440 --> 00:12:45.540
So it's everything you
need to get started.

00:12:45.540 --> 00:12:47.912
If you have any questions
about this a great place post

00:12:47.912 --> 00:12:48.870
them is Stack Overflow.

00:12:48.870 --> 00:12:51.860
Be sure to tag them with
google-play-games because we

00:12:51.860 --> 00:12:53.690
actually, as a matter
of daily routine,

00:12:53.690 --> 00:12:55.320
we are checking that daily.

00:12:55.320 --> 00:12:58.890
So that's definitely the
best place to post questions.

00:12:58.890 --> 00:13:03.107
And add me on Google+ and
feel free to nag me to answer

00:13:03.107 --> 00:13:05.690
your questions on Stack Overflow
or to fix stuff that's broken

00:13:05.690 --> 00:13:06.873
and anything else.

00:13:06.873 --> 00:13:11.010
All right, so that's it for
today's Game On! episode.

00:13:11.010 --> 00:13:12.040
We hope you enjoyed it.

00:13:12.040 --> 00:13:13.810
Definitely please
download our plugin

00:13:13.810 --> 00:13:15.952
and give us any
feedback that you have.

00:13:15.952 --> 00:13:16.910
So thank you very much.

00:13:16.910 --> 00:13:18.460
DAN GALPIN: Thank you.

