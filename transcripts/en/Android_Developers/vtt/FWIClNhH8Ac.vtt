WEBVTT
Kind: captions
Language: en

00:00:05.430 --> 00:00:09.180
So let's look at a few other
refinements we can make.

00:00:09.180 --> 00:00:12.380
For starters, I think it's
pretty lame that we've

00:00:12.380 --> 00:00:14.850
gone through all this
work to sign the user in,

00:00:14.850 --> 00:00:17.710
and all we say is,
"Welcome, player!"

00:00:17.710 --> 00:00:18.990
We know our user signed in.

00:00:18.990 --> 00:00:20.840
We should talk to
him or her by name.

00:00:20.840 --> 00:00:23.132
So let's do that.

00:00:23.132 --> 00:00:24.590
Now what I'm going
to do here is go

00:00:24.590 --> 00:00:27.220
into my IntroView controller.

00:00:27.220 --> 00:00:31.270
And where we say refresh
interface based on sign in,

00:00:31.270 --> 00:00:34.585
instead of saying
"Welcome, player,"

00:00:34.585 --> 00:00:36.710
we're going to get that
information from the Google

00:00:36.710 --> 00:00:37.880
Play Games service.

00:00:37.880 --> 00:00:39.420
So we're going to
do here is we're

00:00:39.420 --> 00:00:43.450
going to say self dot
sign-in label dot text equals

00:00:43.450 --> 00:00:47.160
in a string, string
width format,

00:00:47.160 --> 00:00:52.440
welcome object to
be named later.

00:00:52.440 --> 00:00:56.150
And if you've either started
browsing through our reference

00:00:56.150 --> 00:00:58.440
documentation or are just
kind of fooling around

00:00:58.440 --> 00:01:00.170
with code hitting,
maybe you've notice

00:01:00.170 --> 00:01:02.810
that through the GPG
manager shared instance,

00:01:02.810 --> 00:01:06.400
we can get this thing called
the application model.

00:01:06.400 --> 00:01:09.210
And this starts to contain
some interesting information

00:01:09.210 --> 00:01:10.730
about the application.

00:01:10.730 --> 00:01:12.700
One thing it contains
is this property

00:01:12.700 --> 00:01:16.290
called Player, which has
another property-- I think

00:01:16.290 --> 00:01:18.940
the only thing associated with
it right now-- called Local

00:01:18.940 --> 00:01:20.400
Player.

00:01:20.400 --> 00:01:23.930
That has a name.

00:01:23.930 --> 00:01:26.960
So let's see what
happens when we run this.

00:01:32.820 --> 00:01:35.280
Oh, we get, "Welcome, (null)."

00:01:35.280 --> 00:01:36.620
That's not right.

00:01:36.620 --> 00:01:37.620
So what's going on here?

00:01:37.620 --> 00:01:41.420
Well, what happens is when you
sign into Google Play Games,

00:01:41.420 --> 00:01:44.500
the Google Play Games service
will go out onto the network

00:01:44.500 --> 00:01:46.500
and start fetching
information that it

00:01:46.500 --> 00:01:48.460
thinks you're going to
need, like information

00:01:48.460 --> 00:01:52.350
about the player, definitions
for all your achievements,

00:01:52.350 --> 00:01:54.240
the player's progress
towards completing

00:01:54.240 --> 00:01:56.400
those achievements and so on.

00:01:56.400 --> 00:01:59.180
However, since we're trying
to say hello to the player

00:01:59.180 --> 00:02:01.330
immediately after
sign in complete,

00:02:01.330 --> 00:02:03.370
the service hasn't
had enough time yet

00:02:03.370 --> 00:02:05.470
to go out and get
all that information,

00:02:05.470 --> 00:02:08.070
or at least confirm that
the cache information it has

00:02:08.070 --> 00:02:09.539
is still up to date.

00:02:09.539 --> 00:02:10.910
So how do we fix this?

00:02:10.910 --> 00:02:13.050
Well, one way might
be to add a timer,

00:02:13.050 --> 00:02:15.900
so that two seconds later
we say hello to the player.

00:02:15.900 --> 00:02:17.650
But there's a more
elegant way of doing it

00:02:17.650 --> 00:02:21.270
that the service
provides for us.

00:02:21.270 --> 00:02:24.560
So instead of setting
the text right away,

00:02:24.560 --> 00:02:27.200
I'm going to do this.

00:02:27.200 --> 00:02:32.240
I'm going to call the GPG
Manager, shared instance,

00:02:32.240 --> 00:02:35.420
and I'm going to access
the application model.

00:02:35.420 --> 00:02:36.850
And within the
application model,

00:02:36.850 --> 00:02:40.870
I'm going to call this
method load data for key

00:02:40.870 --> 00:02:43.350
with a completion handler.

00:02:43.350 --> 00:02:46.780
Now the key here is-- and
this is just a constant

00:02:46.780 --> 00:02:52.670
that we define, GPG, model,
and you can see it down here,

00:02:52.670 --> 00:02:53.670
local player key.

00:02:59.570 --> 00:03:02.570
And for our completion handler,
let's indent that a bit.

00:03:06.330 --> 00:03:10.952
Now we can look and say,
well, if there was no error,

00:03:10.952 --> 00:03:15.060
set self dot sign-in
label dot text, equals,

00:03:15.060 --> 00:03:20.845
in a string, string width
format, welcome object.

00:03:23.910 --> 00:03:28.840
And then we can
call GPG manager,

00:03:28.840 --> 00:03:32.610
shared instance,
application model,

00:03:32.610 --> 00:03:37.160
dot player dot local
player dot name.

00:03:37.160 --> 00:03:38.670
Whew.

00:03:38.670 --> 00:03:41.110
Now this time when we
run the application,

00:03:41.110 --> 00:03:42.960
we get back a
personalized message

00:03:42.960 --> 00:03:45.450
that says, "Welcome"
with my name.

00:03:45.450 --> 00:03:47.670
By the way, there's
also another method

00:03:47.670 --> 00:03:51.270
called reload data for key.

00:03:51.270 --> 00:03:54.645
Now this method works almost
the same as load data for key.

00:03:54.645 --> 00:03:57.800
I believe the difference
is that reload data for key

00:03:57.800 --> 00:04:00.270
tells the service,
I want you to ignore

00:04:00.270 --> 00:04:01.930
any cached data you have.

00:04:01.930 --> 00:04:04.560
Go out on the net
and actually grab

00:04:04.560 --> 00:04:07.020
any new information,
whereas load data for he

00:04:07.020 --> 00:04:11.610
says, if you have cached
information, it's OK to use it.

00:04:11.610 --> 00:04:15.400
So I think if we run this, you
might see a slightly longer

00:04:15.400 --> 00:04:19.269
delay in between when the
Sign Out button appears

00:04:19.269 --> 00:04:21.930
and the welcome talk
message appears.

00:04:21.930 --> 00:04:23.990
And I believe that's
because I'm making

00:04:23.990 --> 00:04:25.900
an extra, or a
forced network call,

00:04:25.900 --> 00:04:27.720
that I didn't
necessarily have to make.

00:04:27.720 --> 00:04:32.030
So we're going to switch this
back to load data for key.

00:04:32.030 --> 00:04:35.100
Finally, I'm going to
show you one other problem

00:04:35.100 --> 00:04:36.780
that we might want to fix.

00:04:36.780 --> 00:04:38.990
Now, I've got a pretty
good internet connection.

00:04:38.990 --> 00:04:40.650
As it turns out,
Google's got internet.

00:04:40.650 --> 00:04:41.540
Go figure.

00:04:41.540 --> 00:04:43.760
But watch what happens
when we run this.

00:04:43.760 --> 00:04:46.920
You're going to see for a brief
moment that the G+ Sign In

00:04:46.920 --> 00:04:48.350
button is still there.

00:04:48.350 --> 00:04:50.190
It takes a moment
for the service

00:04:50.190 --> 00:04:53.467
to sign me in and make the
Sign In button go away.

00:04:53.467 --> 00:04:55.300
And certainly when I'm
out in the real world

00:04:55.300 --> 00:04:59.210
on 3G network or something,
that delay could be much longer.

00:04:59.210 --> 00:05:01.060
And you don't want
your user repeatedly

00:05:01.060 --> 00:05:04.220
clicking that Sign In button
thinking that, for some reason,

00:05:04.220 --> 00:05:06.080
they're just not
getting signed in.

00:05:06.080 --> 00:05:08.790
So what we want to do
is, we get to that moment

00:05:08.790 --> 00:05:11.050
where we're trying
silent authentication,

00:05:11.050 --> 00:05:12.664
we want to let the
user know, hey.

00:05:12.664 --> 00:05:14.580
We're trying to sign you
in in the background.

00:05:14.580 --> 00:05:16.350
Please be patient for a minute.

00:05:16.350 --> 00:05:18.835
And we can do that by
looking at the value that

00:05:18.835 --> 00:05:23.130
gets returned by
trySilentAuthentication.

00:05:23.130 --> 00:05:24.910
Now this actually
returns a Boolean.

00:05:24.910 --> 00:05:27.090
And this Boolean is
yes if the system

00:05:27.090 --> 00:05:29.940
has determined that it is
going to try and silently

00:05:29.940 --> 00:05:31.210
authenticate the user.

00:05:31.210 --> 00:05:33.550
It says, looks like there's
an old OAuth token here.

00:05:33.550 --> 00:05:35.300
I'm going to try and
sign the user in.

00:05:35.300 --> 00:05:36.900
So we can take
advantage of that.

00:05:36.900 --> 00:05:40.980
First thing we're going to do
is create a load property here.

00:05:40.980 --> 00:05:47.050
Not atomic, BOOL, that
is trying silent sign in.

00:05:51.690 --> 00:05:54.700
And then down here,
I'm going to say

00:05:54.700 --> 00:05:58.050
self dot trying
silent sign in is

00:05:58.050 --> 00:06:00.920
equal to the value
that gets returned.

00:06:00.920 --> 00:06:02.980
And remember, this gets
returned immediately

00:06:02.980 --> 00:06:07.360
by the trySilentAuthentication
method.

00:06:07.360 --> 00:06:09.810
And then we can go back up
to our refresh interface

00:06:09.810 --> 00:06:11.920
based on sign in method.

00:06:11.920 --> 00:06:14.380
And we're going to go up
here and say, self dot sign

00:06:14.380 --> 00:06:22.020
in button dot enabled equals
not self trying silent sign in.

00:06:24.630 --> 00:06:28.610
So if we get to this point,
the user is not signed in yet,

00:06:28.610 --> 00:06:31.770
but the system is
attempting to sign them in.

00:06:31.770 --> 00:06:33.930
You will see the Sign
In button visible,

00:06:33.930 --> 00:06:36.280
but it will not be enabled.

00:06:36.280 --> 00:06:38.860
Similarly, if the user
is not signed in yet

00:06:38.860 --> 00:06:42.970
and silent authentication has
failed, or the system says,

00:06:42.970 --> 00:06:46.000
I don't think this person's
logged in before or just

00:06:46.000 --> 00:06:48.610
wasn't able to silently
sign the user in,

00:06:48.610 --> 00:06:52.540
the Sign In button will be
visible and it will be enabled.

00:06:52.540 --> 00:06:54.390
There's one other
thing I forgot to do,

00:06:54.390 --> 00:06:57.250
which is here under
finish with auth.

00:06:57.250 --> 00:07:00.180
We get to this point
once the attempt

00:07:00.180 --> 00:07:02.700
to silently sign the
user in is finished,

00:07:02.700 --> 00:07:08.820
so we can say self dot trying
silent sign in is equal to no.

00:07:08.820 --> 00:07:12.750
All right, so now
let's run this.

00:07:12.750 --> 00:07:18.180
And you should see that that
Sign In button was visible

00:07:18.180 --> 00:07:22.377
but disabled for that brief
moment in between signing in

00:07:22.377 --> 00:07:23.960
and when the Sign
Out button appeared.

00:07:23.960 --> 00:07:25.310
Now I'm going to sign out.

00:07:25.310 --> 00:07:26.810
And it looks like
the Sign In button

00:07:26.810 --> 00:07:28.384
is there and is
once again enabled.

00:07:28.384 --> 00:07:29.300
I'm going to click it.

00:07:31.910 --> 00:07:34.530
I'm going to say Accept.

00:07:34.530 --> 00:07:35.540
Go back into the game.

00:07:38.170 --> 00:07:40.590
And there we go.

00:07:40.590 --> 00:07:41.310
We're signed in.

00:07:41.310 --> 00:07:44.210
We have a nice Sign Out button
that, again, we could probably

00:07:44.210 --> 00:07:46.670
hide in a menu
somewhere, and the game

00:07:46.670 --> 00:07:48.400
is addressing me by name.

00:07:48.400 --> 00:07:50.140
I feel like we're
friends already.

00:07:50.140 --> 00:07:52.640
So at this point we're pretty
much done with the section

00:07:52.640 --> 00:07:54.420
on getting the user signed in.

00:07:54.420 --> 00:07:56.410
From here it's the fun stuff.

00:07:56.410 --> 00:07:57.890
We get to now add achievements.

00:07:57.890 --> 00:07:59.080
We get to add leaderboards.

00:07:59.080 --> 00:08:02.792
We can share our game, play with
a friend, that kind of stuff,

00:08:02.792 --> 00:08:05.125
now that we've gone through
all the hard work of getting

00:08:05.125 --> 00:08:06.160
the user signed in.

00:08:06.160 --> 00:08:07.730
Let's start having some fun.

00:08:07.730 --> 00:08:09.850
And we're going to do
that in the next chapter.

00:08:09.850 --> 00:08:12.320
So I'll see you in a few days.

00:08:12.320 --> 00:08:13.870
Thanks.

