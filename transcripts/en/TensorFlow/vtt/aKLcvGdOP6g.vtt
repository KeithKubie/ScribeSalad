WEBVTT
Kind: captions
Language: en

00:00:05.664 --> 00:00:08.510
SPEAKER: Comma separated
values, or CSV,

00:00:08.510 --> 00:00:11.130
is a commonly-used data format.

00:00:11.130 --> 00:00:14.060
In this video, you'll see how
to use CSV and Keras with Eager

00:00:14.060 --> 00:00:16.640
Execution turned on
so you can load data

00:00:16.640 --> 00:00:20.610
for training a neural network
and view it imperatively.

00:00:20.610 --> 00:00:24.540
First of all, here's the URL
where the data is stored.

00:00:24.540 --> 00:00:26.670
Keras has a Get
File utility, which

00:00:26.670 --> 00:00:29.250
can download a file
from a URL, so this

00:00:29.250 --> 00:00:32.477
uses that to get the data
and store it locally.

00:00:32.477 --> 00:00:34.185
There are five columns
in the data-- four

00:00:34.185 --> 00:00:36.670
for features, one for the label.

00:00:36.670 --> 00:00:40.030
So this code simply creates
lists of each of these.

00:00:40.030 --> 00:00:42.250
You'll need them later.

00:00:42.250 --> 00:00:45.320
We need to specify how large the
batches of data that we'll load

00:00:45.320 --> 00:00:46.300
are.

00:00:46.300 --> 00:00:50.440
This is how many records
it will process at a time.

00:00:50.440 --> 00:00:52.480
And the Make CSV
Data Set utility

00:00:52.480 --> 00:00:54.400
is where the magic happens.

00:00:54.400 --> 00:00:58.000
You simply tell it the data,
batch size, column, and labels,

00:00:58.000 --> 00:01:00.490
and the number of epochs
that you wanted to run for,

00:01:00.490 --> 00:01:04.860
and it will load and
slice the data for you.

00:01:04.860 --> 00:01:06.960
We can inspect the
data in the debugger

00:01:06.960 --> 00:01:08.910
to see that at least
something was loaded.

00:01:13.100 --> 00:01:14.750
But if we want to
see more, we can just

00:01:14.750 --> 00:01:16.760
look at the next iter
of the training data

00:01:16.760 --> 00:01:19.475
set that was created, then print
out the features or labels.

00:01:30.040 --> 00:01:31.664
And as you can
see in the output,

00:01:31.664 --> 00:01:33.580
we can see that the
features are loaded nicely

00:01:33.580 --> 00:01:35.680
into lists for us.

00:01:35.680 --> 00:01:37.990
So that's it for loading
CSV into TensorFlow

00:01:37.990 --> 00:01:39.940
using Keras Utilities.

00:01:39.940 --> 00:01:42.680
To learn more about TensorFlow,
visit tensorflow.org.

00:01:42.680 --> 00:01:44.470
For more videos
about TensorFlow,

00:01:44.470 --> 00:01:45.786
click the Subscribe button.

00:01:45.786 --> 00:01:47.660
And if you've any
questions about this video,

00:01:47.660 --> 00:01:49.370
please leave them in
the comments below.

00:01:49.370 --> 00:01:51.030
Thank you.

