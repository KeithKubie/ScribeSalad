WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.984
[MUSIC PLAYING]

00:00:06.339 --> 00:00:08.880
DAN GALPIN: Hi, welcome back to
the Developer Show's coverage

00:00:08.880 --> 00:00:10.220
at GDD India.

00:00:10.220 --> 00:00:12.300
I'm Dan Galpin here
with Sean McQuillan,

00:00:12.300 --> 00:00:15.900
and he's here to give us an
update on Android and Kotlin.

00:00:15.900 --> 00:00:18.897
So Sean, why start
with testing in Kotlin?

00:00:18.897 --> 00:00:20.480
SEAN MCQUILLAN: It's
a great question.

00:00:20.480 --> 00:00:22.500
Testing is a great way
to introduce new features

00:00:22.500 --> 00:00:25.639
to your code base, and it's an
easy place to try new things.

00:00:25.639 --> 00:00:27.180
It's low risk, and
it doesn't require

00:00:27.180 --> 00:00:29.846
you to make any production
changes to your application.

00:00:29.846 --> 00:00:31.470
DAN GALPIN: So were
there any surprises

00:00:31.470 --> 00:00:33.845
in terms of ways you could
use Kotlin to improve testing?

00:00:33.845 --> 00:00:35.219
SEAN MCQUILLAN:
Tests are a place

00:00:35.219 --> 00:00:37.770
to really stretch the
expressiveness of a language.

00:00:37.770 --> 00:00:39.769
And Kotlin really,
really shines here.

00:00:39.769 --> 00:00:42.060
We can use extensions, lambdas,
and all of the language

00:00:42.060 --> 00:00:44.040
features Kotlin
provides to really push

00:00:44.040 --> 00:00:46.675
the limits of our test and
make them absolutely beautiful.

00:00:46.675 --> 00:00:49.050
DAN GALPIN: So Kotlin has been
a fully supported language

00:00:49.050 --> 00:00:50.587
for Android for
about six months.

00:00:50.587 --> 00:00:52.170
You know, what are
the kinds of things

00:00:52.170 --> 00:00:57.005
the Android team is doing to
help developers code in Kotlin?

00:00:57.005 --> 00:00:59.130
SEAN MCQUILLAN: We've added
nullability annotations

00:00:59.130 --> 00:01:01.200
to the support
library in version 27.

00:01:01.200 --> 00:01:02.910
That makes it so
Kotlin can safely

00:01:02.910 --> 00:01:04.599
call into Java
without introducing

00:01:04.599 --> 00:01:05.910
NullPointerExceptions.

00:01:05.910 --> 00:01:08.700
We've also added guides for
style and interop with Java,

00:01:08.700 --> 00:01:10.560
and we've produced a
lot of Kotlin samples

00:01:10.560 --> 00:01:12.390
that are listed on our page.

00:01:12.390 --> 00:01:14.160
DAN GALPIN: So what's
something developers

00:01:14.160 --> 00:01:16.320
might not think to
do when writing code

00:01:16.320 --> 00:01:17.870
in the Java programming
language that

00:01:17.870 --> 00:01:19.169
needs to interop with Kotlin?

00:01:19.169 --> 00:01:21.210
SEAN MCQUILLAN: One of
the cool things you can do

00:01:21.210 --> 00:01:23.520
is make sure that single
abstract method parameter

00:01:23.520 --> 00:01:26.040
types are declared last
in your functions, which

00:01:26.040 --> 00:01:28.800
allows you to call them using
Kotlin's trailing lambda

00:01:28.800 --> 00:01:29.640
syntax.

00:01:29.640 --> 00:01:31.560
You should also add
nullability annotations

00:01:31.560 --> 00:01:34.775
to all of your Java APIs that
you intend to call from Kotlin.

00:01:34.775 --> 00:01:36.900
DAN GALPIN: So what has
been the response to Kotlin

00:01:36.900 --> 00:01:38.880
that you've seen
here at GDD India?

00:01:38.880 --> 00:01:39.540
SEAN MCQUILLAN:
Everyone I've talked

00:01:39.540 --> 00:01:41.250
to has been really
excited, and they've either

00:01:41.250 --> 00:01:43.020
started adopting Kotlin
in their code base

00:01:43.020 --> 00:01:45.370
or they're looking to do
so in the near future.

00:01:45.370 --> 00:01:47.550
DAN GALPIN: So if a developer
wants to learn Kotlin,

00:01:47.550 --> 00:01:49.590
what resources
would you recommend?

00:01:49.590 --> 00:01:51.131
SEAN MCQUILLAN: They
should check out

00:01:51.131 --> 00:01:53.276
the Getting Started guide
on developer.android.com,

00:01:53.276 --> 00:01:55.650
and then go to Kotlin link
where there's a great tutorial

00:01:55.650 --> 00:01:56.700
about how to learn Kotlin.

00:01:56.700 --> 00:01:58.283
You can also look
at the Kotlin cones,

00:01:58.283 --> 00:02:00.690
which are short snippets of
Kotlin to learn the language.

00:02:00.690 --> 00:02:03.210
And there's two books, Kotlin
in Action, Kotlin for Android

00:02:03.210 --> 00:02:05.880
Developers, that are both great
places to learn about Kotlin.

00:02:05.880 --> 00:02:07.620
And of course, you should
watch the recording of my talk

00:02:07.620 --> 00:02:08.550
yesterday.

00:02:08.550 --> 00:02:09.750
DAN GALPIN: Thank you, Sean.

00:02:09.750 --> 00:02:11.250
Visit the description
below if you'd

00:02:11.250 --> 00:02:13.202
like to learn more
about testing and Kotlin

00:02:13.202 --> 00:02:15.160
and check out all of our
additional interviews.

00:02:15.160 --> 00:02:17.910
[MUSIC PLAYING]

