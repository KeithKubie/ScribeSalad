WEBVTT
Kind: captions
Language: en

00:00:00.190 --> 00:00:07.500
&gt;&gt; So the tools that I was talking about
you can find those owasp.org website.

00:00:07.500 --> 00:00:10.640
So remember we're talking about
source code analysis tools here.

00:00:10.640 --> 00:00:14.790
So we are making assumption that the
code that you write, you have the source

00:00:14.790 --> 00:00:18.440
code and you want to make sure that it
doesn't have those vulnerabilities.

00:00:18.440 --> 00:00:21.010
So you going to run it, so
you obviously have the source code.

00:00:21.010 --> 00:00:22.160
You run it through these tools.

00:00:22.160 --> 00:00:25.580
A lot of times if the code
is not written by you,

00:00:25.580 --> 00:00:26.900
it's coming from somebody else.

00:00:26.900 --> 00:00:28.660
You may only have the binary.

00:00:28.660 --> 00:00:32.800
And then some of those tools
that requires source code,

00:00:32.800 --> 00:00:35.810
reduce source code analysis
obviously won't be helpful.

00:00:35.810 --> 00:00:39.940
So discovering those vulnerability and
binary is said reverse engineering and

00:00:39.940 --> 00:00:43.210
all the other skills come in,
but attackers for

00:00:43.210 --> 00:00:47.850
example will take binary code and
try to discover vulnerabilities in it.

00:00:47.850 --> 00:00:51.990
And we do that,
one of the lab courses we teach here.

00:00:51.990 --> 00:00:56.323
People with attackers mindset,
given a piece of binary how do you find

00:00:56.323 --> 00:01:01.181
out if has let's say, some potential
overflow kind of vulnerability or not.

00:01:01.181 --> 00:01:04.571
But if your source code,
you writing the code and

00:01:04.571 --> 00:01:07.641
you want to deliver secure coding and
so on.

00:01:07.641 --> 00:01:11.578
If you work for a company part of
their software development process may

00:01:11.578 --> 00:01:15.921
include reviews and passing those codes
through these kind of tools and so on.

00:01:15.921 --> 00:01:18.256
It's a problem that we all recognize,

00:01:18.256 --> 00:01:21.670
we all recognize the importance
of writing secure code.

00:01:21.670 --> 00:01:27.640
And these analysis tools can help you
identify potential vulnerabilities and

00:01:27.640 --> 00:01:29.410
mistakes that you may have made.

00:01:29.410 --> 00:01:32.730
That could result into these kind of
things that we've been talking about.

00:01:32.730 --> 00:01:36.580
So, spending a little bit of time
with these is a good idea and

00:01:36.580 --> 00:01:39.380
that's going to help you
write more secure code.

