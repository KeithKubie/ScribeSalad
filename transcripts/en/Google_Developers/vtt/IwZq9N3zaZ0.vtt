WEBVTT
Kind: captions
Language: en

00:00:04.560 --> 00:00:05.060
Hi.

00:00:05.060 --> 00:00:05.889
This is Brian.

00:00:05.889 --> 00:00:07.430
Let's see how quickly
we can start up

00:00:07.430 --> 00:00:10.229
a cluster of machines on
Google Compute Engine.

00:00:10.229 --> 00:00:11.645
So this here is
the Cloud Console.

00:00:12.690 --> 00:00:15.611
We're opened up into the
Compute Engine tab VM Instances.

00:00:15.611 --> 00:00:17.610
And let's go ahead and
just start a new machine.

00:00:17.610 --> 00:00:18.401
Click New Instance.

00:00:19.390 --> 00:00:20.630
We fill out some data.

00:00:20.630 --> 00:00:23.600
The main thing we need to
change the defaults for

00:00:23.600 --> 00:00:25.670
is specify a name.

00:00:25.670 --> 00:00:29.860
Make sure we pick a zone that
is close to you for good round

00:00:29.860 --> 00:00:30.940
trip times.

00:00:30.940 --> 00:00:32.234
Then we boot from an image.

00:00:32.234 --> 00:00:33.900
We're going to do
[? WN ?] in this case.

00:00:33.900 --> 00:00:35.940
And we just go ahead
and click Create.

00:00:35.940 --> 00:00:39.065
So this has now started
the creation process.

00:00:40.430 --> 00:00:44.360
This web UI makes calls out
to the Compute Engine API,

00:00:44.360 --> 00:00:50.110
which is an HTTP REST API, and
prepares everything and gets us

00:00:50.110 --> 00:00:50.940
a machine running.

00:00:50.940 --> 00:00:53.911
And in fact, it's already up and
running before I've even hardly

00:00:53.911 --> 00:00:55.160
had a chance to talk about it.

00:00:55.160 --> 00:00:56.350
So here's our new instance.

00:00:58.240 --> 00:00:59.435
What was the IP address?

00:01:00.560 --> 00:01:03.250
And we could just click
SSH and start using it.

00:01:04.330 --> 00:01:07.850
But part of the promise
of Cloud is scalability.

00:01:07.850 --> 00:01:10.500
So let's see how quickly
we could scale up

00:01:10.500 --> 00:01:12.860
a whole cluster of instances.

00:01:12.860 --> 00:01:15.080
So this is a demo app
that calls the same API.

00:01:15.080 --> 00:01:19.650
Let's go ahead and set up a
smallish cluster of machines.

00:01:19.650 --> 00:01:21.480
And when I click
Start there, it calls

00:01:21.480 --> 00:01:27.072
those same API's and allocates
and prepares 100 disks,

00:01:27.072 --> 00:01:28.530
each with a copy
of the same image.

00:01:29.560 --> 00:01:32.500
As the squares
start turning blue,

00:01:32.500 --> 00:01:35.160
those squares represent
machines that have actually

00:01:35.160 --> 00:01:37.960
completed that process
of preparing the disks.

00:01:39.120 --> 00:01:39.810
And there we go.

00:01:41.000 --> 00:01:43.040
And then once they
start turning green,

00:01:43.040 --> 00:01:45.420
that's a computer that
is up and ready for work.

00:01:46.630 --> 00:01:48.120
As soon as it's
finished booting,

00:01:48.120 --> 00:01:50.572
it can run a script
that you specify.

00:01:50.572 --> 00:01:52.030
You can run anything
you want here,

00:01:52.030 --> 00:01:54.780
set up configuration
management, install dependencies

00:01:54.780 --> 00:01:58.260
for your application, whatever
preparation you need to do.

00:01:58.260 --> 00:02:01.022
Perhaps check out code
and get that installed.

00:02:01.022 --> 00:02:02.480
And then you can
run your software.

00:02:03.650 --> 00:02:06.280
And here we go, a
cluster of 100 machines

00:02:06.280 --> 00:02:08.325
ready to run your
software in 40 seconds.

00:02:09.537 --> 00:02:10.370
Thank you very much.

00:02:10.370 --> 00:02:13.390
And happy hacking
with Compute Engine.

