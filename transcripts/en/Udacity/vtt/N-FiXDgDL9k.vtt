WEBVTT
Kind: captions
Language: en

00:00:00.340 --> 00:00:02.450
So let me show you something that,
that same group and

00:00:02.450 --> 00:00:06.360
others pushed on a little bit more
recent of handling occlusion.

00:00:06.360 --> 00:00:08.580
So the question is, you know,

00:00:08.580 --> 00:00:12.040
if, if a thing gets partially occluded,
we have this problem,

00:00:12.040 --> 00:00:18.050
because you remember the Eigenface stuff
is, it's capturing the entire image.

00:00:18.050 --> 00:00:20.290
As a vector, and

00:00:20.290 --> 00:00:23.320
all the pixels all the components
in that vector are created equal.

00:00:23.320 --> 00:00:25.590
So if some of them are sort
of being blocked or

00:00:25.590 --> 00:00:28.500
obscured, it's not going to
be able to explain that data,

00:00:28.500 --> 00:00:32.689
it's not going to be able to track, give
you very high probability at that area.

00:00:32.689 --> 00:00:34.390
But it turns out you can,

00:00:34.390 --> 00:00:37.800
you can address that if you think
about the following, all right.

00:00:37.800 --> 00:00:40.920
By the way that's Greg Dudack
a while back, hi Greg.

00:00:40.920 --> 00:00:41.790
Picture there.

00:00:41.790 --> 00:00:45.320
When I reproduce an image, so let's
suppose I've, I've tracked this thing,

00:00:45.320 --> 00:00:49.460
I've completed my Eigenbasis and
now I, I'm trying to find my best one,

00:00:49.460 --> 00:00:50.970
and I do.

00:00:50.970 --> 00:00:57.920
I can now say of all those pixels,
which ones am I reconstructing well?

00:00:57.920 --> 00:01:00.570
The ones that I'm reconstructing well,

00:01:00.570 --> 00:01:04.540
those are the ones that I have
a lot more confidence in.

00:01:04.540 --> 00:01:10.210
So let me create a weight mask that
says, you know, those pixels are fine,

00:01:10.210 --> 00:01:13.900
but anywhere that I find something that
I can't reconstruct well, I'm going to

00:01:13.900 --> 00:01:18.070
highlight those pixels as ones that
I'm not going to pay attention to.

00:01:18.070 --> 00:01:19.760
By the way,
the reason I'm saying highlighted is on

00:01:19.760 --> 00:01:22.900
the video I'm about to show you,
for whatever reason, they have,

00:01:22.900 --> 00:01:25.200
sort of, bad pixels as being bright.

00:01:25.200 --> 00:01:27.310
So you can think of them
as being highlighted for

00:01:27.310 --> 00:01:31.080
not counting as much in the current or
the next iteration.

00:01:31.080 --> 00:01:34.490
So what you're going to see
here in this video again is, so

00:01:34.490 --> 00:01:35.685
here's the, Greg's face.

00:01:35.685 --> 00:01:37.170
That' s going to be tracked.

00:01:37.170 --> 00:01:40.810
And this is the, sort of,
the location of what they're doing.

00:01:40.810 --> 00:01:45.150
But what you'll see here is,
there'll be this black image, and

00:01:45.150 --> 00:01:48.850
then, all of a sudden, you'll see
his hand swipe up across his face.

00:01:48.850 --> 00:01:54.548
Now, of course his hand is not easily
reproduced with the face Eigenbasis.

00:01:54.548 --> 00:01:57.260
So you're going to see that light up,
and that's it saying okay,

00:01:57.260 --> 00:01:59.560
the weight of those
pixels should be reduced.

00:01:59.560 --> 00:02:01.780
So let's see if this works.

00:02:01.780 --> 00:02:03.450
There it goes, its playing, okay.

00:02:03.450 --> 00:02:05.060
Same thing we see before.

00:02:05.060 --> 00:02:08.770
You see his Eigenvectors changing
on the bottom as he rotates in

00:02:08.770 --> 00:02:09.330
and out of the plane.

00:02:09.330 --> 00:02:11.090
Whoops!
There was his hand.

00:02:11.090 --> 00:02:12.100
Did you miss that?

00:02:12.100 --> 00:02:12.980
Let go back again.

00:02:12.980 --> 00:02:15.450
Now get ready, in a minute, he's
going to swipe his hand over his face,

00:02:15.450 --> 00:02:16.190
there, there it goes.

00:02:16.190 --> 00:02:17.370
Did you see that?

00:02:17.370 --> 00:02:19.690
You can play it backwards,
as his hand came up,

00:02:19.690 --> 00:02:24.410
the weights got brighter where the hand
was, saying ignore this, this place.

00:02:24.410 --> 00:02:25.900
And now it tracks him for awhile.

00:02:27.240 --> 00:02:30.870
He's smiling, he's getting large,
and moving around and

00:02:30.870 --> 00:02:32.450
you can see it's doing
a good job tracking.

00:02:34.260 --> 00:02:39.610
You can see the difference between
how well it can be reconstructed.

00:02:39.610 --> 00:02:42.620
And the reason it can handle things
like this is remember the state

00:02:42.620 --> 00:02:46.310
that's it's tracking is position
translation rotation scale.

00:02:46.310 --> 00:02:50.800
So you can normalize it back to
the original sort of canonical view and

00:02:50.800 --> 00:02:53.400
explain that view from the Eigenbasis.

00:02:53.400 --> 00:02:55.640
All right, so
that's some pretty cool tracking work.

