WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.449
 in this capsule we will start our 

00:00:01.860 --> 00:00:08.040
 exploring the problems of 

00:00:03.449 --> 00:00:11.250
 satisfaction of constraints then 

00:00:08.040 --> 00:00:12.690
 the goal of capsules on 

00:00:11.250 --> 00:00:14.639
 constrained satisfaction problems 

00:00:12.690 --> 00:00:17.310
 it's first to see how to comment 

00:00:14.639 --> 00:00:18.660
 that we can model a problem under the 

00:00:17.310 --> 00:00:19.230
 form of proof of satisfaction of 

00:00:18.660 --> 00:00:22.920
 constraints 

00:00:19.230 --> 00:00:25.949
 we will see and we will learn how to simulate 

00:00:22.920 --> 00:00:27.480
 the king sturge bacteria booth for 

00:00:25.949 --> 00:00:29.220
 solve this type of problem 

00:00:27.480 --> 00:00:31.050
 see also different ways 

00:00:29.220 --> 00:00:33.239
 to speed up the cure of bach tracking 

00:00:31.050 --> 00:00:35.730
 search using among other things to acquire 

00:00:33.239 --> 00:00:38.640
 of inference like euphoria checking and 

00:00:35.730 --> 00:00:41.010
 the ac3 algorithm and then finally one 

00:00:38.640 --> 00:00:42.960
 will see an alternative to tracking 

00:00:41.010 --> 00:00:45.629
 search that will be based instead on the 

00:00:42.960 --> 00:00:47.340
 local search to solve to for 

00:00:45.629 --> 00:00:52.350
 solve satisfaction problems 

00:00:47.340 --> 00:00:55.320
 of constraints so far so far 

00:00:52.350 --> 00:00:56.730
 we have seen that many people's problems 

00:00:55.320 --> 00:01:00.930
 artificial could be formulated as 

00:00:56.730 --> 00:01:03.210
 research problems in a graffiti 

00:01:00.930 --> 00:01:07.470
 with several new each 

00:01:03.210 --> 00:01:11.189
 corresponds to a configuration where a 

00:01:07.470 --> 00:01:13.409
 state of our environment and for 

00:01:11.189 --> 00:01:15.930
 define this graph there we simply have to 

00:01:13.409 --> 00:01:18.259
 define a transition function the 

00:01:15.930 --> 00:01:20.520
 transition function wants to describe us 

00:01:18.259 --> 00:01:22.549
 then will implement final the 

00:01:20.520 --> 00:01:24.479
 properties of the environment 

00:01:22.549 --> 00:01:25.830
 specifically what happens if 

00:01:24.479 --> 00:01:27.210
 I am a given state of my 

00:01:25.830 --> 00:01:27.630
 environment that I do some 

00:01:27.210 --> 00:01:30.090
 action 

00:01:27.630 --> 00:01:30.689
 what effect is it going to see on my 

00:01:30.090 --> 00:01:32.430
 environment 

00:01:30.689 --> 00:01:34.040
 what will be the new state of my 

00:01:32.430 --> 00:01:36.210
 environment after a given action 

00:01:34.040 --> 00:01:41.369
 so that's what the function of 

00:01:36.210 --> 00:01:44.430
 transition into code and to explore the 

00:01:41.369 --> 00:01:46.409
 graff that defines by this function of 

00:01:44.430 --> 00:01:47.579
 transition there that we apply that we can 

00:01:46.409 --> 00:01:50.729
 recursively apply yves-le 

00:01:47.579 --> 00:01:53.880
 for all of us unfold our our 

00:01:50.729 --> 00:01:57.210
 graph to explore it effectively so 

00:01:53.880 --> 00:02:00.329
 we will define a heuristic that will 

00:01:57.210 --> 00:02:02.009
 contain information the specific 

00:02:00.329 --> 00:02:03.960
 to the problems we are trying to solve 

00:02:02.009 --> 00:02:05.570
 to try to solve it the most 

00:02:03.960 --> 00:02:08.849
 effectively possible 

00:02:05.570 --> 00:02:10.410
 now if so it's the close one 

00:02:08.849 --> 00:02:13.290
 took to solve some problems 

00:02:10.410 --> 00:02:15.750
 with the star algorithm for example 

00:02:13.290 --> 00:02:17.969
 and by against until now 

00:02:15.750 --> 00:02:19.799
 when executing a sentry box 

00:02:17.969 --> 00:02:24.239
 fat searches like the guitar 

00:02:19.799 --> 00:02:27.599
 starry was actually opaque by 

00:02:24.239 --> 00:02:29.099
 compared to our application then by 

00:02:27.599 --> 00:02:31.530
 report to the research sentry in 

00:02:29.099 --> 00:02:34.400
 so does the search booth all 

00:02:31.530 --> 00:02:37.709
 what they knew about 

00:02:34.400 --> 00:02:40.319
 clean up is that they were the 

00:02:37.709 --> 00:02:41.310
 leaders who was successor versus 

00:02:40.319 --> 00:02:43.469
 at a given place 

00:02:41.310 --> 00:02:45.329
 but did not know actually commented what 

00:02:43.469 --> 00:02:48.950
 the choice of his new skies tonight 

00:02:45.329 --> 00:02:51.419
 were made that it was all registered 

00:02:48.950 --> 00:02:53.159
 everything at the beginning the function of 

00:02:51.419 --> 00:02:54.900
 completely opaque transition 

00:02:53.159 --> 00:02:59.819
 compared to the search algorithm 

00:02:54.900 --> 00:03:02.250
 in either the problems of satisfaction 

00:02:59.819 --> 00:03:04.169
 constraints are going to be actually a case 

00:03:02.250 --> 00:03:07.470
 particular problems that could be 

00:03:04.169 --> 00:03:09.480
 solve with heuristic research 

00:03:07.470 --> 00:03:10.620
 when we do the algorithms we're going 

00:03:09.480 --> 00:03:11.819
 drink to solve points of 

00:03:10.620 --> 00:03:14.250
 satisfaction against them are going 

00:03:11.819 --> 00:03:16.379
 correspond to particular cases of 

00:03:14.250 --> 00:03:17.909
 heuristic search site even from 

00:03:16.379 --> 00:03:19.229
 particulars in first 

00:03:17.909 --> 00:03:21.229
 constraint satisfaction is that it 

00:03:19.229 --> 00:03:24.389
 is going to be an explicit structure 

00:03:21.229 --> 00:03:26.879
 internal honor in the graph to 

00:03:24.389 --> 00:03:29.519
 explore so they will follow a 

00:03:26.879 --> 00:03:31.199
 particular representation where each 9 

00:03:29.519 --> 00:03:33.930
 years done is a set of 

00:03:31.199 --> 00:03:37.919
 variables or some of these variables 

00:03:33.930 --> 00:03:39.870
 will be assigned certain values ​​and 

00:03:37.919 --> 00:03:41.970
 the transition function so the 

00:03:39.870 --> 00:03:44.280
 transition between them will not have to hold 

00:03:41.970 --> 00:03:46.919
 account of certain constraints the 

00:03:44.280 --> 00:03:48.419
 problem constraints what they are 

00:03:46.919 --> 00:03:49.829
 constraints on the possible values 

00:03:48.419 --> 00:03:53.040
 what can variables take in 

00:03:49.829 --> 00:03:55.049
 all together and in fact making these 

00:03:53.040 --> 00:03:57.540
 notions there two variables of value and 

00:03:55.049 --> 00:03:59.459
 explicit constraints inside 

00:03:57.540 --> 00:04:02.459
 knots that will allow us to 

00:03:59.459 --> 00:04:03.689
 define general ristic waters that 

00:04:02.459 --> 00:04:06.150
 will not be domain specific 

00:04:03.689 --> 00:04:08.400
 therefore rather than at 

00:04:06.150 --> 00:04:11.549
 once we are going to tackle a problem at 

00:04:08.400 --> 00:04:13.620
 see ask yourself the question what would 

00:04:11.549 --> 00:04:16.530
 the good ristic to reuse for this 

00:04:13.620 --> 00:04:19.440
 scope of application there once we 

00:04:16.530 --> 00:04:21.779
 will see translated a problem under a 

00:04:19.440 --> 00:04:23.340
 form of constraint satisfaction 

00:04:21.779 --> 00:04:25.620
 we will not need to do this anymore 

00:04:23.340 --> 00:04:27.630
 work there we will be able to invoke 

00:04:25.620 --> 00:04:31.919
 general solystic to solve so 

00:04:27.630 --> 00:04:33.740
 effective our problem of in the form of 

00:04:31.919 --> 00:04:36.600
 satisfaction include 

00:04:33.740 --> 00:04:39.600
 here are two examples of 

00:04:36.600 --> 00:04:41.580
 satisfaction against 1 the first 

00:04:39.600 --> 00:04:44.250
 would match everything that is game 

00:04:41.580 --> 00:04:47.250
 of riddles an example it would be the game of 

00:04:44.250 --> 00:04:49.470
 sudoku in that if the variables 

00:04:47.250 --> 00:04:52.680
 correspond to the boxes to be filled in 

00:04:49.470 --> 00:04:55.800
 actual values ​​would be the numbers 

00:04:52.680 --> 00:04:57.510
 that can be inserted in anjou box 

00:04:55.800 --> 00:04:59.160
 the docu and the constraints 

00:04:57.510 --> 00:05:00.930
 would match the rules of the game so 

00:04:59.160 --> 00:05:05.039
 for sudoku it would be the constraints 

00:05:00.930 --> 00:05:06.990
 on the fact that in a same in a 

00:05:05.039 --> 00:05:07.650
 same block we can not have twice the 

00:05:06.990 --> 00:05:10.530
 same number 

00:05:07.650 --> 00:05:10.800
 same thing on the rows and so of 

00:05:10.530 --> 00:05:13.320
 after 

00:05:10.800 --> 00:05:14.850
 our class of problems would be 

00:05:13.320 --> 00:05:17.570
 resource allocation issues 

00:05:14.850 --> 00:05:20.310
 an example of taking precise 

00:05:17.570 --> 00:05:22.350
 the development of class schedules for 

00:05:20.310 --> 00:05:24.419
 a rope students in what if our 

00:05:22.350 --> 00:05:27.060
 variable that would be the different 

00:05:24.419 --> 00:05:28.830
 time slots for all courses all 

00:05:27.060 --> 00:05:32.010
 the premises forgiveness or could take place 

00:05:28.830 --> 00:05:34.289
 as soon as more constraints they would 

00:05:32.010 --> 00:05:36.630
 respected it reflects that among others 

00:05:34.289 --> 00:05:38.550
 the fact that only one body can be 

00:05:36.630 --> 00:05:41.160
 assigned to the same room at a given moment 

00:05:38.550 --> 00:05:41.760
 so we can not have twice in the 

00:05:41.160 --> 00:05:44.580
 same local 

00:05:41.760 --> 00:05:47.070
 at the same time given two courses 

00:05:44.580 --> 00:05:50.510
 different also argue that none 

00:05:47.070 --> 00:05:54.870
 student of both courts at the same time 

00:05:50.510 --> 00:05:57.060
 and institutes so that's it we see two 

00:05:54.870 --> 00:05:59.520
 examples of problems that we will be able to 

00:05:57.060 --> 00:06:02.479
 convert in the form of bonuses from 

00:05:59.520 --> 00:06:02.479
 contrary satisfaction 

