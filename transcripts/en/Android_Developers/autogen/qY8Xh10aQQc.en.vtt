WEBVTT
Kind: captions
Language: en

00:00:00.110 --> 00:00:00.620
 DANIEL GALPIN: Hello everyone. 

00:00:00.620 --> 00:00:02.520
 First of all, I want to ask everyone to give me a hand to count 

00:00:02.520 --> 00:00:04.980
 Excuse me, everyone here. 

00:00:04.980 --> 00:00:06.529
 How many people have an engineering background? 

00:00:06.529 --> 00:00:08.320
 Ok, quite a lot. 

00:00:08.320 --> 00:00:09.830
 Yes, I have been thinking about it before. 

00:00:09.830 --> 00:00:12.936
 Shouldn’t show me some technical slides? 

00:00:12.936 --> 00:00:14.810
 Now I decided to show it to everyone. 

00:00:14.810 --> 00:00:17.434
 However, I will quickly explain to those who have no engineering background here. 

00:00:17.434 --> 00:00:20.850
 When I was thinking about the future of Google games 

00:00:20.850 --> 00:00:23.150
 I saw all that happened at the Playtime conference. 

00:00:23.150 --> 00:00:26.450
 I know that everyone is already in other speeches. 

00:00:26.450 --> 00:00:29.270
 Seeing our future full of unlimited development potential 

00:00:29.270 --> 00:00:31.230
 Everyone saw it 

00:00:31.230 --> 00:00:33.672
 We create a variety of cool and practical tools 

00:00:33.672 --> 00:00:35.130
 Our major improvements to Android Studio 

00:00:35.130 --> 00:00:38.750
 Including new NDK 

00:00:38.750 --> 00:00:41.300
 And the performance improvement tools we provide for game developers. 

00:00:41.300 --> 00:00:42.800
 Of course, we will continue to work hard and continuously improve 

00:00:42.800 --> 00:00:44.466
 Everyone saw it too. 

00:00:44.466 --> 00:00:46.330
 The power of the Player Analytics tool 

00:00:46.330 --> 00:00:48.996
 Also witnessed our efforts to provide you with more and more complete data 

00:00:48.996 --> 00:00:50.620
 And to help you improve your interactions. 

00:00:50.620 --> 00:00:53.224
 And all kinds of efforts 

00:00:53.224 --> 00:00:54.890
 So when I am thinking about future development 

00:00:54.890 --> 00:00:56.790
 I want to make sure 

00:00:56.790 --> 00:00:58.830
 We didn't miss anything else 

00:00:58.830 --> 00:01:01.560
 Unpopular information that you may not know 

00:01:01.560 --> 00:01:03.920
 Let me introduce myself first. 

00:01:03.920 --> 00:01:07.370
 I have been a developer for many years and I am still a gamer. 

00:01:07.370 --> 00:01:09.640
 I like animated slides 

00:01:09.640 --> 00:01:12.350
 Here to reiterate that Android devices have exceeded 1 billion mark 

00:01:12.350 --> 00:01:14.550
 I really like this picture so I put it on. 

00:01:14.550 --> 00:01:18.050
 But more importantly, most devices are mobile phones and tablets. 

00:01:18.050 --> 00:01:20.330
 This is obvious 

00:01:20.330 --> 00:01:23.640
 However, the future of Android is not just about mobile phones and tablets. 

00:01:23.640 --> 00:01:25.640
 Also exist in the equipment we show upstairs 

00:01:25.640 --> 00:01:28.550
 That's Android TV, everyone can try it out. 

00:01:28.550 --> 00:01:30.960
 The reason we mentioned it here is very simple. 

00:01:30.960 --> 00:01:34.560
 We build a platform and a distribution system 

00:01:34.560 --> 00:01:36.370
 And we can use the same middleware 

00:01:36.370 --> 00:01:39.187
 The same electronic storefront is actually used by everyone. 

00:01:39.187 --> 00:01:41.020
 The technology to build games is almost 

00:01:41.020 --> 00:01:42.710
 Just a little more incremental work 

00:01:42.710 --> 00:01:44.710
 And integrated into a new ecosystem 

00:01:44.710 --> 00:01:48.139
 So, some future trend is waving to us. 

00:01:48.139 --> 00:01:49.930
 Let’s take advantage of all the current results of everyone. 

00:01:49.930 --> 00:01:52.510
 Positioning what we talked about 

00:01:52.510 --> 00:01:55.040
 1 billion users on another platform 

00:01:55.040 --> 00:01:57.390
 Of course, we are building a huge and complete ecosystem around this aspect. 

00:01:58.050 --> 00:02:00.050
 Some people here may have seen this slide. 

00:02:00.050 --> 00:02:01.960
 However, the amount of content inside is amazing. 

00:02:01.960 --> 00:02:04.300
 Not only can you use a TV that has already been integrated 

00:02:04.300 --> 00:02:06.758
 You can also use very good set-top boxes and micro-master devices 

00:02:06.758 --> 00:02:10.080
 If you haven’t used the NVIDIA set-top box yet, you can give it a try. It’s really great. 

00:02:10.080 --> 00:02:12.450
 There are also integrated service boxes that have just been listed. 

00:02:12.450 --> 00:02:15.470
 Including SFR, Bouygues 

00:02:15.470 --> 00:02:17.320
 And LG U+ in Korea 

00:02:17.320 --> 00:02:18.810
 This is really cool 

00:02:18.810 --> 00:02:21.250
 So before you start talking about the future of the game 

00:02:21.250 --> 00:02:23.900
 I want to explain first. 

00:02:23.900 --> 00:02:28.694
 Generally speaking, at Google 

00:02:28.694 --> 00:02:30.110
 There are several different teams 

00:02:30.110 --> 00:02:32.290
 Developed a variety of ingenious work for game developers 

00:02:32.290 --> 00:02:33.664
 How many of you are present? 

00:02:33.664 --> 00:02:36.670
 I heard that Fun Propulsion Labs please raise your hand, ok? 

00:02:36.670 --> 00:02:38.950
 Ok, this is a team at Google. 

00:02:38.950 --> 00:02:41.250
 They are passionate about building 

00:02:41.250 --> 00:02:44.190
 Various cool cross-platform game technologies 

00:02:44.190 --> 00:02:46.440
 Basically, their work includes 

00:02:46.440 --> 00:02:50.140
 Repeatedly improved version 

00:02:50.140 --> 00:02:51.690
 Create great games 

00:02:51.690 --> 00:02:55.100
 Publish game components, tools, and all resources 

00:02:55.100 --> 00:02:56.260
 They do these things over and over again 

00:02:56.260 --> 00:02:58.530
 Look, I used an animation effect. 

00:02:58.530 --> 00:03:00.660
 They are starting like this 

00:03:00.660 --> 00:03:04.160
 They created this very great library 

00:03:04.160 --> 00:03:04.949
 Called LiquidFun 

00:03:04.949 --> 00:03:06.990
 How many of you have heard of LiquidFun 

00:03:06.990 --> 00:03:08.340
 Please raise your hand, ok? 

00:03:08.340 --> 00:03:12.400
 LiquidFun is actually a 

00:03:12.400 --> 00:03:14.410
 Very cool 2D particle simulation library 

00:03:14.410 --> 00:03:16.260
 They want this library to be portable, efficient and practical. 

00:03:17.712 --> 00:03:19.170
 What do I mean by these? 

00:03:19.170 --> 00:03:23.470
 Portability means it is available almost everywhere 

00:03:23.470 --> 00:03:26.031
 We have implanted it 

00:03:26.031 --> 00:03:26.530
 All platforms on the market 

00:03:26.530 --> 00:03:29.120
 It has been integrated into the major game SDKs 

00:03:29.120 --> 00:03:31.290
 Such as GameMaker Studio and Corona SDK 

00:03:31.290 --> 00:03:34.070
 Support for use on Windows and Mac systems 

00:03:34.070 --> 00:03:36.919
 It has excellent performance 

00:03:36.919 --> 00:03:39.210
 Because we adopt a very intelligent way 

00:03:39.210 --> 00:03:40.700
 To process thousands of particles 

00:03:40.700 --> 00:03:43.110
 Basically, we will look at the diameter of the particle 

00:03:43.110 --> 00:03:45.320
 We put the particles into a very useful data structure 

00:03:45.320 --> 00:03:47.280
 So that we can really understand 

00:03:47.280 --> 00:03:49.780
 If we are this particle then we have to calculate how many other places 

00:03:49.780 --> 00:03:51.750
 To calculate all these collisions 

00:03:51.750 --> 00:03:54.250
 This is also a place to spend money when building particle simulation experiments. 

00:03:54.250 --> 00:03:57.167
 You might say yes, it’s calculated by diameter. 

00:03:57.167 --> 00:03:59.250
 Anyway, we can see these particles. 

00:03:59.250 --> 00:04:00.459
 Then we simulate in order 

00:04:00.459 --> 00:04:02.125
 When we simulated the 7th particle 

00:04:02.125 --> 00:04:04.300
 In fact, we only focus on observing the 9th particle. 

00:04:04.300 --> 00:04:06.570
 So that we can speed up the simulation 

00:04:06.570 --> 00:04:07.580
 And it is very practical 

00:04:07.580 --> 00:04:09.130
 Speaking of practicality 

00:04:09.130 --> 00:04:10.720
 We build LiquidFun based on Box2D. 

00:04:10.720 --> 00:04:13.190
 So the two can work perfectly together 

00:04:13.190 --> 00:04:14.770
 If you are already using Box2D 

00:04:14.770 --> 00:04:17.050
 And want to add superb particle simulation 

00:04:17.050 --> 00:04:20.279
 Simulate the flow of particles around all your existing Box2D objects 

00:04:20.279 --> 00:04:22.320
 You just need to integrate this library into Box2D 

00:04:22.320 --> 00:04:25.200
 See the current and cool liquid effects right away 

00:04:26.322 --> 00:04:27.780
 This gives game developers and designers 

00:04:27.780 --> 00:04:30.590
 Provide more choices 

00:04:30.590 --> 00:04:36.430
 Now, I want to play a video. This video comes from a game we built. 

00:04:36.430 --> 00:04:39.020
 In fact, we used particle simulation to create two games. 

00:04:39.020 --> 00:04:41.630
 As you can see in these particle simulation activities 

00:04:41.630 --> 00:04:45.540
 Not only do particles interact with each other 

00:04:45.540 --> 00:04:47.420
 And it also affects Box2D objects. 

00:04:47.420 --> 00:04:50.200
 So when the protagonist of the game moves 

00:04:50.200 --> 00:04:53.586
 In fact, it can also be driven by these small drops of water. 

00:04:53.586 --> 00:04:55.460
 This is part of the entire physical simulation in the game. 

00:04:56.870 --> 00:04:59.270
 To reiterate, all of its source code is available to everyone. 

00:04:59.270 --> 00:05:00.980
 This is one of the results we have made. 

00:05:00.980 --> 00:05:02.490
 Also our first game 

00:05:02.490 --> 00:05:05.864
 The second game is called "Pie Noon" 

00:05:05.864 --> 00:05:07.280
 At this time, we really started. 

00:05:07.280 --> 00:05:09.210
 Some eyebrows in this regard 

00:05:09.210 --> 00:05:11.014
 So we really started 

00:05:11.014 --> 00:05:12.430
 Will be fragmentary 

00:05:12.430 --> 00:05:15.150
 a variety of technologies that can be integrated into the game 

00:05:15.150 --> 00:05:17.450
 Pinch together 

00:05:17.450 --> 00:05:19.730
 The first technology we integrated into the game is 

00:05:19.730 --> 00:05:22.550
 Let me show you this game first. 

00:05:22.550 --> 00:05:24.790
 This may be more important 

00:05:24.790 --> 00:05:26.220
 If you haven't seen this game, let me introduce it first. 

00:05:26.220 --> 00:05:32.420
 This is a cool throwing cake simulation, made with 3D technology. 

00:05:32.420 --> 00:05:35.970
 This gives us a real chance to understand 

00:05:35.970 --> 00:05:38.680
 How are these technologies? 

00:05:38.680 --> 00:05:39.720
 Play a role in the actual game? 

00:05:39.720 --> 00:05:42.690
 Of course, we have introduced all of our Play Games services and other resources. 

00:05:42.690 --> 00:05:47.590
 We continue to talk about this topic 

00:05:47.590 --> 00:05:48.960
 So what have we done? 

00:05:48.960 --> 00:05:51.710
 First of all, we want to make sure the game is small 

00:05:51.710 --> 00:05:53.790
 Make sure the game is small and extremely important 

00:05:53.790 --> 00:05:57.870
 Everyone knows that we now support APK files up to 100MB, yeah! 

00:05:57.870 --> 00:06:02.360
 But even then, you will still want the game to be smaller. 

00:06:02.360 --> 00:06:05.280
 Because the smaller the game, the higher the download volume 

00:06:05.280 --> 00:06:08.090
 In this regard, WebP is really very practical. 

00:06:08.090 --> 00:06:11.070
 It can process the game into very small packages and put them online. 

00:06:11.070 --> 00:06:13.930
 Many people see it in the name 

00:06:13.930 --> 00:06:14.430
 Have "web" 

00:06:14.430 --> 00:06:15.846
 I thought this might only apply to the site. 

00:06:15.846 --> 00:06:20.070
 But in fact all of these libraries are also available for mobile devices. 

00:06:20.660 --> 00:06:23.280
 Through "Pie Noon," we actually show you 

00:06:23.280 --> 00:06:25.350
 How to use WebP to process all source code internally 

00:06:25.350 --> 00:06:28.620
 It supports lossy compression and lossless compression 

00:06:28.620 --> 00:06:31.440
 Lossless alpha channel support in both cases 

00:06:31.440 --> 00:06:33.980
 It will be greatly reduced 

00:06:33.980 --> 00:06:35.900
 Size of files such as JPEG and PNG 

00:06:35.900 --> 00:06:38.884
 Again, it’s important to make sure the game is small 

00:06:38.884 --> 00:06:39.800
 So how do we do it? 

00:06:39.800 --> 00:06:43.000
 We just started using the TARGA file, of course it is very big 

00:06:43.000 --> 00:06:45.370
 Later, we made a lossless PNG file. 

00:06:45.370 --> 00:06:49.720
 And use WebP for compression within our toolchain 

00:06:49.720 --> 00:06:51.810
 So what does this look like in actual situations? 

00:06:51.810 --> 00:06:53.559
 Obviously, our TARGA file is very large. 

00:06:53.559 --> 00:06:55.510
 No one wants to transfer such files on mobile devices 

00:06:55.510 --> 00:06:57.940
 And our PNG file is relatively small 

00:06:57.940 --> 00:07:00.950
 But when we started to seriously consider WebP, we found that this is what we are looking for. 

00:07:00.950 --> 00:07:01.802
 Everyone may be surprised 

00:07:01.802 --> 00:07:03.010
 In fact, we did some research 

00:07:03.010 --> 00:07:06.250
 We found -- if you know how many developers there are 

00:07:06.250 --> 00:07:08.740
 You may be surprised to transmit all the resources through PNG files. 

00:07:08.740 --> 00:07:10.860
 And the truth is 

00:07:10.860 --> 00:07:13.470
 You may do the same 

00:07:13.470 --> 00:07:15.070
 The actual situation is like what is displayed on the screen. 

00:07:15.070 --> 00:07:19.339
 You may not be able to distinguish from the projection 

00:07:19.339 --> 00:07:20.880
 Differences in quality between these documents 

00:07:20.880 --> 00:07:22.338
 Believe it or not, this is PNG 

00:07:22.338 --> 00:07:23.340
 This is WebP 

00:07:23.340 --> 00:07:25.340
 This is a lossy WebP. This is another lossy WebP. 

00:07:25.340 --> 00:07:26.940
 On this, everyone can see it. 

00:07:26.940 --> 00:07:28.420
 Less details in it 

00:07:28.420 --> 00:07:30.750
 If you take a closer look, you will still see some stripes. 

00:07:30.750 --> 00:07:32.520
 But it is almost impossible to distinguish the differences 

00:07:32.520 --> 00:07:34.520
 However, we hope to achieve perfect results 

00:07:34.520 --> 00:07:35.870
 So we choose this 

00:07:35.870 --> 00:07:39.180
 Almost no obvious difference 

00:07:39.180 --> 00:07:41.540
 Of course, this won't make you rid of 

00:07:41.540 --> 00:07:43.621
 Trouble with GPU-optimized textures 

00:07:43.621 --> 00:07:44.620
 Because they are smaller 

00:07:44.620 --> 00:07:45.690
 Lower fill rate 

00:07:45.690 --> 00:07:48.350
 I am not saying that everyone should use WebP to handle everything. 

00:07:48.350 --> 00:07:52.280
 But if you are already using PNG to convert textures 

00:07:52.280 --> 00:07:55.100
 You should really consider switching to WebP. 

00:07:55.100 --> 00:07:55.600
 All right 

00:07:55.600 --> 00:07:56.880
 Let's talk about mathematics 

00:07:56.880 --> 00:07:58.421
 What we need to do next is 

00:07:58.421 --> 00:07:59.737
 Create a math library 

00:07:59.737 --> 00:08:02.070
 In fact, what we have done has nothing to do with Pie Noon. 

00:08:02.070 --> 00:08:04.080
 But "Pie Noon" gives us a chance 

00:08:04.080 --> 00:08:05.839
 Really make the most of this math library 

00:08:05.839 --> 00:08:07.380
 Many people think like this, God. 

00:08:07.380 --> 00:08:09.850
 We really need a practical math library for Android 

00:08:09.850 --> 00:08:11.630
 This math library is very powerful 

00:08:11.630 --> 00:08:13.430
 Because it can be used for physics or geometry 

00:08:13.430 --> 00:08:15.330
 And it uses the SIMD compiler inline function 

00:08:15.330 --> 00:08:18.880
 this point is very important 

00:08:18.880 --> 00:08:21.750
 Because using compiler inline functions 

00:08:21.750 --> 00:08:23.000
 5x faster on Nexus devices 

00:08:23.000 --> 00:08:24.958
 When running on a desktop device 

00:08:24.958 --> 00:08:26.930
 Speed ​​is simply surprisingly fast 

00:08:26.930 --> 00:08:31.530
 So, it’s streamlined, which means it doesn’t contain the place 

00:08:31.530 --> 00:08:33.909
 Connaught, unlike the kitchen sink 

00:08:33.909 --> 00:08:36.590
 Do those like protein folding 

00:08:36.590 --> 00:08:37.710
 Or something like that doesn't make sense. 

00:08:37.710 --> 00:08:39.210
 But this is very effective for the game. 

00:08:39.210 --> 00:08:42.750
 For example, we use it to calculate 

00:08:42.750 --> 00:08:45.270
 The arc thrown by the pie 

00:08:45.270 --> 00:08:47.480
 Parabolic Pie Path 

00:08:47.480 --> 00:08:49.550
 Very interesting, the first letter of these three words is P 

00:08:49.550 --> 00:08:52.070
 Let’s talk about our use of FlatBuffers. 

00:08:52.070 --> 00:08:53.486
 The next game developed 

00:08:53.486 --> 00:08:57.550
 When we designed "VoltAir," we encountered a big problem. 

00:08:57.550 --> 00:08:59.780
 That is, it takes too long to read the level. 

00:09:00.609 --> 00:09:03.150
 Part of the reason is because of the system we built 

00:09:03.150 --> 00:09:04.987
 Not optimized for the game 

00:09:04.987 --> 00:09:07.320
 I won't tell you what we built with. 

00:09:07.320 --> 00:09:09.466
 But believe me, it's really good. 

00:09:09.466 --> 00:09:10.840
 So we want to make sure 

00:09:10.840 --> 00:09:12.256
 When developing the next game 

00:09:12.256 --> 00:09:13.620
 Can avoid such problems 

00:09:13.620 --> 00:09:16.296
 First, we decided to check the Protocol Buffer. 

00:09:16.296 --> 00:09:17.670
 We thought these were very good. 

00:09:17.670 --> 00:09:19.990
 But for the game, they are still very bloated 

00:09:19.990 --> 00:09:22.010
 We think we should be able to do better 

00:09:22.010 --> 00:09:24.510
 So, we developed the technology of FlatBuffers. 

00:09:24.510 --> 00:09:27.380
 I am happy to say that many people are using this technology. 

00:09:27.380 --> 00:09:28.410
 Even people outside the game field 

00:09:28.410 --> 00:09:31.530
 Recently Facebook posted a great post 

00:09:31.530 --> 00:09:34.300
 Revealed that they are in their Android app 

00:09:34.300 --> 00:09:36.350
 Using FlatBuffers 

00:09:36.350 --> 00:09:37.930
 Found that the effect is great 

00:09:37.930 --> 00:09:41.010
 The most remarkable thing about FlatBuffers is its high memory usage. 

00:09:41.010 --> 00:09:45.250
 The code base is very small and super flexible 

00:09:45.250 --> 00:09:48.669
 Many of you... you don't have to feel embarrassed about the code on the screen. 

00:09:48.669 --> 00:09:50.710
 However, many people actually 

00:09:50.710 --> 00:09:53.650
 Passing data into or out of the app using JSON 

00:09:53.650 --> 00:09:55.360
 In fact, they store the JSON in the app. 

00:09:55.360 --> 00:09:59.050
 This is really bad for a variety of reasons. 

00:09:59.050 --> 00:10:03.080
 For example, one of the reasons is that it is difficult to optimize 

00:10:03.080 --> 00:10:05.940
 Because of your JSON parser 

00:10:05.940 --> 00:10:07.936
 I don't know if these are actually enumerations. 

00:10:07.936 --> 00:10:09.810
 It must be stored as a string 

00:10:09.810 --> 00:10:11.860
 So this will lead to very slow and very bloated 

00:10:11.860 --> 00:10:13.579
 You will get something like this number 

00:10:13.579 --> 00:10:15.620
 What does this number mean... What does this type mean? 

00:10:15.620 --> 00:10:19.960
 Look at the definition to know that it is very inefficient 

00:10:19.960 --> 00:10:22.716
 But because it makes people understand, it is very attractive. 

00:10:22.716 --> 00:10:24.590
 What we did to FlatBuffers was very simple 

00:10:24.590 --> 00:10:26.330
 We saved an architecture 

00:10:26.330 --> 00:10:29.360
 We generate C++ code through this architecture 

00:10:29.360 --> 00:10:31.890
 By the way, we don't just support C++. 

00:10:31.890 --> 00:10:34.230
 But this is the original language we support. 

00:10:34.230 --> 00:10:39.320
 Then we can create an object and turn it into a byte array 

00:10:39.320 --> 00:10:40.880
 The reverse can also 

00:10:40.880 --> 00:10:42.950
 Very easy to understand 

00:10:42.950 --> 00:10:46.070
 So the best thing is that you can not use JSON. 

00:10:46.070 --> 00:10:48.220
 Although people still like to use JSON in practice 

00:10:48.220 --> 00:10:50.400
 So you can build the architecture using JSON 

00:10:50.400 --> 00:10:54.190
 If you want to do this, if this doesn't confuse 

00:10:54.190 --> 00:10:55.760
 Then the most amazing place 

00:10:55.760 --> 00:10:57.830
 That is, you can choose to use JSON to define your architecture. 

00:10:57.830 --> 00:11:03.070
 Generate CPP files, byte arrays, which will be great 

00:11:03.070 --> 00:11:05.630
 Of course, this will not solve 

00:11:05.630 --> 00:11:06.290
 Your other game loading issues 

00:11:06.290 --> 00:11:08.970
 But compared with JSON, this is basically the case. 

00:11:08.970 --> 00:11:11.710
 If you consider such a large network scale 

00:11:11.710 --> 00:11:14.630
 FlatBuffers may be 400 times faster than parsing JSON 

00:11:14.630 --> 00:11:17.650
 Coupled with so many network elements, JSON still looks bloated 

00:11:17.650 --> 00:11:20.220
 Again, we will keep working hard 

00:11:20.220 --> 00:11:23.820
 Reduce network traffic usage and make games smaller 

00:11:23.820 --> 00:11:27.520
 Let the game load faster because we know it 

00:11:27.520 --> 00:11:29.863
 Can increase retention rate 

00:11:29.863 --> 00:11:31.446
 Yes, we are still optimizing the audio. 

00:11:31.446 --> 00:11:33.112
 I won’t discuss this aspect in depth today. 

00:11:33.112 --> 00:11:36.420
 However, this technology is mainly used for sound library management. 

00:11:36.420 --> 00:11:39.030
 Are some very cool things that STL usually don't do. 

00:11:39.030 --> 00:11:41.660
 This is the basis of our build content. 

00:11:41.660 --> 00:11:43.977
 Of course, we also have an animation framework 

00:11:43.977 --> 00:11:45.810
 Everything you need to build Pie Noon is readily available 

00:11:45.810 --> 00:11:47.200
 In fact, we also build the effects tool 

00:11:47.200 --> 00:11:48.780
 In addition to the current built in the platform 

00:11:48.780 --> 00:11:51.470
 Some excellent effects tools are tools that indicate the team is developing. 

00:11:51.470 --> 00:11:53.290
 We also have our own set of tools 

00:11:53.290 --> 00:11:56.360
 These beautiful charts and visual effects for display 

00:11:56.360 --> 00:11:58.350
 Is the masterpiece of these tools 

00:11:58.350 --> 00:12:00.780
 In fact, we are building some scripts to implement these 

00:12:00.780 --> 00:12:03.540
 For the Pie Noon project 

00:12:03.540 --> 00:12:05.480
 These contents are all open source 

00:12:05.480 --> 00:12:07.232
 The question is, what is our starting point? 

00:12:07.232 --> 00:12:09.690
 Narrator (voice-over): Pass this new version 

00:12:09.690 --> 00:12:11.760
 We want to show you how to make the most of it. 

00:12:11.760 --> 00:12:13.755
 A unique multi-screen gaming experience you create 

00:12:13.755 --> 00:12:15.880
 One of the things we do is 

00:12:15.880 --> 00:12:16.920
 When we watched Android TV we said - 

00:12:16.920 --> 00:12:18.860
 Narrator (voice-over): We changed the original 

00:12:18.860 --> 00:12:19.760
 Fast-paced throwing cake simulation 

00:12:19.760 --> 00:12:20.340
 DANIEL GALPIN: Still watching the video. 

00:12:20.340 --> 00:12:22.080
 Narrator (voice-over): strategy game 

00:12:22.080 --> 00:12:24.420
 You quietly plan on your phone 

00:12:24.420 --> 00:12:27.450
 Then watch the specific action on the TV screen 

00:12:27.450 --> 00:12:29.180
 Find "Pie Noon" on Google Play 

00:12:29.180 --> 00:12:31.500
 Try playing a cross-screen game 

00:12:31.500 --> 00:12:33.830
 Then check out our source code on GitHub 

00:12:33.830 --> 00:12:37.870
 Learn how to use the Nearby Connections feature in your games 

00:12:37.870 --> 00:12:40.032
 Wish you have a good time 

00:12:40.032 --> 00:12:41.490
 DANIEL GALPIN: To help build a better Android TV experience 

00:12:41.490 --> 00:12:44.060
 We launched a 

00:12:44.060 --> 00:12:46.050
 a feature called Nearby Connections 

00:12:46.050 --> 00:12:47.729
 It's actually part of the Play game 

00:12:47.729 --> 00:12:49.770
 But it’s just part of the Play game. 

00:12:49.770 --> 00:12:52.019
 With this feature, you can very easily 

00:12:52.019 --> 00:12:53.790
 Use your phone as a controller 

00:12:53.790 --> 00:12:57.480
 You can also walk around and find nearby TVs. 

00:12:57.480 --> 00:13:00.970
 a device that can act as a potential controller 

00:13:00.970 --> 00:13:03.160
 Of course, as part of the second experience 

00:13:03.160 --> 00:13:05.530
 We implemented this feature in Pie Noon 

00:13:05.530 --> 00:13:06.430
 So now everyone can experience it. 

00:13:06.430 --> 00:13:08.810
 We also developed the Cardboard version of "Pie Noon" 

00:13:08.810 --> 00:13:09.890
 This version is even more cool 

00:13:09.890 --> 00:13:12.000
 I won’t introduce it here. 

00:13:12.000 --> 00:13:13.430
 But it is indeed a very useful code base 

00:13:13.430 --> 00:13:15.804
 It shows how to use a different set of methods 

00:13:15.804 --> 00:13:18.780
 Measure users of a very simple game 

00:13:18.780 --> 00:13:20.820
 So what will the future look like? 

00:13:20.820 --> 00:13:23.750
 This is what we will achieve next. 

00:13:23.750 --> 00:13:25.160
 Approximate effect 

00:13:25.160 --> 00:13:29.930
 The resolution of this animation is very low, I was a few hours ago. 

00:13:29.930 --> 00:13:31.840
 Shot with my own device 

00:13:31.840 --> 00:13:33.820
 The basic situation is that everyone can see 

00:13:33.820 --> 00:13:35.730
 We used an engine for Pie Noon. 

00:13:35.730 --> 00:13:37.910
 In fact, we have added a fully mature 3D effect. 

00:13:37.910 --> 00:13:41.500
 Skeleton animation system 

00:13:41.500 --> 00:13:44.425
 Let’s take a look at this Cardboard-based game. 

00:13:44.425 --> 00:13:45.800
 This game should be very cool 

00:13:45.800 --> 00:13:48.216
 I don’t want to talk too much about what we will do next. 

00:13:48.216 --> 00:13:51.440
 Mainly because I don't want to grab their limelight 

00:13:51.440 --> 00:13:54.080
 Although it is only preliminary, it is the next trend. 

00:13:54.080 --> 00:13:56.030
 Still, we are merging various technologies. 

00:13:56.030 --> 00:13:58.920
 Get the most out of their effects to help you build a cooler game 

00:13:58.920 --> 00:14:01.770
 Here is a series of links 

00:14:01.770 --> 00:14:03.710
 You can use these links to learn about various technologies. 

00:14:03.710 --> 00:14:05.600
 Again, FlatBuffers are really useful 

00:14:05.600 --> 00:14:07.420
 I strongly recommend that you have a deeper understanding. 

00:14:07.420 --> 00:14:10.690
 Currently, we have bound C# for it. 

00:14:10.690 --> 00:14:12.440
 Also bound to Java 

00:14:12.440 --> 00:14:14.650
 Really very practical 

00:14:14.650 --> 00:14:17.387
 Speaking of the present, I have not really talked about the future. 

00:14:17.970 --> 00:14:21.470
 Before I talk about the future, I want to say one more thing. 

00:14:21.470 --> 00:14:23.740
 How many of you are aware of Firebase? 

00:14:23.740 --> 00:14:24.880
 Oh! very good 

00:14:24.880 --> 00:14:25.780
 It’s great. 

00:14:25.780 --> 00:14:27.720
 Actually, we were last year 

00:14:27.720 --> 00:14:30.570
 Acquisition of Firebase 

00:14:30.570 --> 00:14:32.583
 Why do we want to acquire it? 

00:14:32.583 --> 00:14:34.916
 Because Nest will use it, and it is very powerful 

00:14:37.686 --> 00:14:40.290
 It is a very practical product 

00:14:40.290 --> 00:14:42.430
 Can help you with all these things 

00:14:42.430 --> 00:14:44.430
 Many different companies are using it 

00:14:44.430 --> 00:14:46.230
 To handle real-time tasks 

00:14:46.230 --> 00:14:46.820
 So what exactly is it? 

00:14:46.820 --> 00:14:49.410
 First of all, as the name suggests, it is a database 

00:14:49.410 --> 00:14:51.000
 But not part of the SQL data store 

00:14:51.000 --> 00:14:54.030
 The interface with Json uses the RESTful API 

00:14:54.030 --> 00:14:56.680
 Most importantly, it is a real-time database 

00:14:56.680 --> 00:14:58.880
 So when you make a change 

00:14:58.880 --> 00:15:01.720
 Updates are automatically sent to each client that is listening 

00:15:01.720 --> 00:15:03.340
 It is very simple to use 

00:15:03.340 --> 00:15:04.720
 A little unbelievable 

00:15:04.720 --> 00:15:09.534
 After you create your Firebase instance 

00:15:09.534 --> 00:15:11.950
 Just set the various values ​​in it and start using it. 

00:15:11.950 --> 00:15:14.510
 So, it's great for prototyping 

00:15:14.510 --> 00:15:17.100
 Even if this is not the final backend database you want to use 

00:15:17.100 --> 00:15:19.210
 Even though it is for me 

00:15:19.210 --> 00:15:22.855
 And it's really the ideal choice for prototyping 

00:15:22.855 --> 00:15:24.730
 Another very cool thing about it is 

00:15:24.730 --> 00:15:28.650
 Its two mobile SDKs support synchronization 

00:15:29.720 --> 00:15:32.120
 Even users need to go through the tunnel 

00:15:32.120 --> 00:15:33.450
 His data will still be sent to Firebase 

00:15:33.450 --> 00:15:35.283
 If you want to play for yourself 

00:15:35.283 --> 00:15:37.950
 Build a complete offline mode, then this will be very practical 

00:15:37.950 --> 00:15:39.520
 Because if your game can only be played online 

00:15:39.520 --> 00:15:41.930
 Many people will feel very annoyed about this. 

00:15:41.930 --> 00:15:44.190
 With this product, you can do all these things 

00:15:44.190 --> 00:15:47.520
 Moreover, most of these features are built in 

00:15:47.520 --> 00:15:48.645
 Of course, it supports authentication 

00:15:48.645 --> 00:15:50.440
 this point is very important 

00:15:50.440 --> 00:15:53.980
 In addition, it also has a security model 

00:15:53.980 --> 00:15:56.110
 Can give you, for example, access to some Firebase 

00:15:56.110 --> 00:15:58.590
 Depending on the method of authorization 

00:15:58.590 --> 00:16:01.010
 It's deployed in the cloud with the same level of convenience as the other things we host. 

00:16:02.840 --> 00:16:04.570
 Its production level is very high 

00:16:04.570 --> 00:16:06.940
 It supports CDN cache resources, etc. 

00:16:06.940 --> 00:16:10.900
 Provides benefits associated with this while supporting one-click rollback 

00:16:10.900 --> 00:16:12.130
 very useful 

00:16:12.130 --> 00:16:15.040
 This is the multiplayer version of Asteroids. 

00:16:15.040 --> 00:16:18.430
 This is running on two different tabs on my desktop. 

00:16:18.430 --> 00:16:21.050
 Everyone can see that is used here 

00:16:21.050 --> 00:16:22.940
 Again, there is no optimization for Asteroids here. 

00:16:22.940 --> 00:16:25.670
 I am very sure about this. 

00:16:25.670 --> 00:16:37.240
 Its effect is not the same as using a lossy network. 

00:16:37.240 --> 00:16:38.639
 Lossy network? 

00:16:38.639 --> 00:16:40.430
 If everyone wants to play this game 

00:16:40.430 --> 00:16:42.906
 Just send a message to mmoasteroids@firebaseapp.com 

00:16:42.906 --> 00:16:45.540
 Everyone in this room can play together 

00:16:45.540 --> 00:16:47.910
 It supports a large number of players playing at the same time 

00:16:47.910 --> 00:16:49.110
 Flicking together 

00:16:49.110 --> 00:16:51.735
 You can look at the code and see how it is built. 

00:16:51.735 --> 00:16:54.730
 This is built in the afternoon with Firebase. 

00:16:54.730 --> 00:16:57.160
 It is very practical 

00:16:57.160 --> 00:16:59.235
 In fact, I want to talk far more than these. 

00:16:59.235 --> 00:17:01.360
 Because we haven't 

00:17:01.360 --> 00:17:02.467
 Talking about the future, right? 

00:17:02.467 --> 00:17:04.300
 Let’s talk briefly about the future. 

00:17:04.300 --> 00:17:06.589
 Really very exciting 

00:17:06.589 --> 00:17:12.109
 Everyone here has seen Cardboard upstairs. 

00:17:12.109 --> 00:17:15.180
 But this video is made by Volvo. 

00:17:15.180 --> 00:17:18.440
 Is a joint work of Volvo and Google. 

00:17:18.440 --> 00:17:21.920
 It reveals the significance of having a VR platform 

00:17:21.920 --> 00:17:28.109
 It is simple to the extreme 

00:17:28.109 --> 00:17:30.830
 It’s easy to get, it’s too close to the people. 

00:17:30.830 --> 00:17:32.290
 So, Volvo can really 

00:17:32.290 --> 00:17:35.640
 Provide a Cardboard device for everyone 

00:17:35.640 --> 00:17:39.580
 Let people experience XC90 immediately 

00:17:39.580 --> 00:17:42.040
 The beauty of an open specification like this is that 

00:17:42.040 --> 00:17:43.720
 People can really 

00:17:43.720 --> 00:17:46.680
 Use any box around you 

00:17:46.680 --> 00:17:49.690
 Make your own Cardboard device 

00:17:49.690 --> 00:17:52.910
 Of course, we have developed a set of specifications. 

00:17:52.910 --> 00:17:56.540
 So far, we have updated to Cardboard 2.0. 

00:17:56.540 --> 00:17:59.162
 Cardboard 2.0 is more rugged and optically better 

00:17:59.162 --> 00:18:01.120
 Especially when you have seen the latest version, you can feel these 

00:18:01.120 --> 00:18:03.622
 In addition, it also uses a touch screen 

00:18:03.622 --> 00:18:06.080
 Instead of using a magnet, this is a great solution 

00:18:06.080 --> 00:18:08.740
 If you look at the original version, you know that the latest version is more compatible. 

00:18:08.740 --> 00:18:10.534
 And the delay time is shorter 

00:18:10.534 --> 00:18:12.950
 Of course, everyone knows our cooperation with View-Master. 

00:18:12.950 --> 00:18:14.033
 This is already well known. 

00:18:14.033 --> 00:18:16.390
 Our goal is to introduce Cardboard to a new audience. 

00:18:16.390 --> 00:18:21.531
 Obviously, Google VR will be one of the protagonists of the future game. 

00:18:21.531 --> 00:18:23.780
 But we have to do more than these 

00:18:23.780 --> 00:18:26.240
 Because you can't just set a set of specifications for VR 

00:18:26.240 --> 00:18:28.230
 We must help build content 

00:18:28.230 --> 00:18:30.271
 I don't know how many of you are here. 

00:18:30.271 --> 00:18:33.420
 I saw this device at the Google I/O conference, but in general 

00:18:33.420 --> 00:18:34.510
 It is the result of our collaboration with GoPro 

00:18:34.510 --> 00:18:37.520
 More importantly, we built very cool software on this basis. 

00:18:37.520 --> 00:18:40.960
 The video just recorded with this device. 

00:18:40.960 --> 00:18:43.949
 Then convert to true stereo VR video 

00:18:43.949 --> 00:18:45.740
 Of course, when you make such a video, 

00:18:45.740 --> 00:18:47.510
 Need to be hosted to a location 

00:18:47.510 --> 00:18:51.070
 This is naturally not the case for YouTube. 

00:18:51.070 --> 00:18:53.630
 YouTube 360 ​​is designed for VR video 

00:18:53.630 --> 00:18:55.217
 Finally, if you develop an app 

00:18:55.217 --> 00:18:56.800
 There must be a place for users to find your app. 

00:18:56.800 --> 00:18:59.000
 This place is Google Play 

00:18:59.000 --> 00:19:03.260
 And, we have already applied for Cardboard 

00:19:03.260 --> 00:19:05.460
 Ready for marketing and promotional programs 

00:19:05.460 --> 00:19:09.860
 Again, these are the results we have achieved. 

00:19:09.860 --> 00:19:12.657
 With more and more people 

00:19:12.657 --> 00:19:14.240
 Into the trend of VR 

00:19:14.240 --> 00:19:17.346
 We will also bring more and more surprises to everyone. 

00:19:17.346 --> 00:19:19.970
 Now let's talk about another direction of our main character, of course, computer vision. 

00:19:19.970 --> 00:19:22.344
 How many of you are present? 

00:19:22.344 --> 00:19:23.410
 Have you interacted with the upstairs Tango demo? 

00:19:23.410 --> 00:19:25.550
 Ok, I know some people may have seen it. 

00:19:25.550 --> 00:19:27.730
 But I can’t figure out what’s going on, what's going on in the upstairs? 

00:19:27.730 --> 00:19:30.090
 Actually it is very cool stuff 

00:19:30.090 --> 00:19:33.330
 Because this is an exploration of the future of computer vision 

00:19:33.330 --> 00:19:37.210
 What makes me very excited is 

00:19:37.210 --> 00:19:41.160
 We are recently in Denmark, Finland, France, Germany 

00:19:41.160 --> 00:19:44.900
 Ireland, Italy, Norway, Sweden, Switzerland 

00:19:44.900 --> 00:19:47.610
 Of course, there is also the Project Tango development kit launched in the UK. 

00:19:47.610 --> 00:19:50.620
 We finally have more countries around the world 

00:19:50.620 --> 00:19:53.937
 Introduced these kits, great 

00:19:53.937 --> 00:19:55.770
 Basically, technology gives devices like humans 

00:19:55.770 --> 00:19:58.060
 Ability to perceive the surrounding environment 

00:19:58.060 --> 00:20:01.510
 The kit incorporates three basic technologies 

00:20:01.510 --> 00:20:05.740
 Motion tracking, six degrees of freedom 

00:20:05.740 --> 00:20:07.340
 And depth perception 

00:20:07.340 --> 00:20:09.540
 So it can read the depth of the surrounding environment 

00:20:09.540 --> 00:20:13.640
 This is very important for mapping 3D space and region learning. 

00:20:13.640 --> 00:20:18.300
 All of these technologies combine to enable the device to rebuild everything it sees 

00:20:18.300 --> 00:20:22.720
 Accurately with sufficient detail 

00:20:22.720 --> 00:20:24.572
 Show the surroundings in its "inner heart" 

00:20:24.572 --> 00:20:26.780
 Thus can be used for indoor navigation 

00:20:26.780 --> 00:20:30.284
 And augmented reality can also be used for indoor photography and measuring distance, etc. 

00:20:30.950 --> 00:20:34.207
 This has aroused the interest of many people and hopes to use it to create content. 

00:20:34.207 --> 00:20:35.540
 So, what can everyone do with it? 

00:20:35.540 --> 00:20:39.630
 I think this will trigger a wave of innovation. 

00:20:39.630 --> 00:20:41.490
 The first benefit may be the game. 

00:20:41.490 --> 00:20:43.230
 But the impact is much more than that. 

00:20:43.230 --> 00:20:45.610
 Imagine you will be able to scan furniture 

00:20:45.610 --> 00:20:47.560
 Then look at the possible new home to see the effect 

00:20:47.560 --> 00:20:50.490
 Or used to relate to this aspect 

00:20:50.490 --> 00:20:51.740
 Home improvement ads or promotions 

00:20:51.740 --> 00:20:53.960
 You will also be able to quickly preview the floor or tile laying effect or other links. 

00:20:53.960 --> 00:20:55.530
 Estimating the use of materials 

00:20:55.530 --> 00:20:57.590
 Cost estimation, etc. 

00:20:57.590 --> 00:20:59.380
 All these things are possible 

00:20:59.380 --> 00:21:01.720
 Far more than just gaming apps 

00:21:01.720 --> 00:21:04.490
 What does this mean? no doubt 

00:21:04.490 --> 00:21:07.640
 Everyone wants their equipment to use this technology. 

00:21:07.640 --> 00:21:09.440
 Ok, I have one last thing. 

00:21:09.440 --> 00:21:10.231
 I do not know 

00:21:10.231 --> 00:21:12.850
 How many of you have heard of the Soli project? 

00:21:12.850 --> 00:21:14.630
 Ok, then I want to play a video. 

00:21:14.630 --> 00:21:16.210
 Because these things are very cool 

00:21:16.210 --> 00:21:18.000
 In fact, we talked about it at the Google I/O conference. 

00:21:18.000 --> 00:21:20.423
 I am not going to say too much. 

00:21:20.423 --> 00:21:21.744
 It’s good to play this video. 

00:21:21.744 --> 00:21:23.410
 IVAN POUPYREV: My name is Ivan Poupyrev. 

00:21:23.410 --> 00:21:25.670
 I work at Google 

00:21:25.670 --> 00:21:27.560
 Working in the Advanced Technology and Purchasing Department 

00:21:27.560 --> 00:21:29.700
 Essentially, the hand is the device 

00:21:29.700 --> 00:21:31.070
 It is very precise 

00:21:31.070 --> 00:21:32.520
 Extremely fast 

00:21:32.520 --> 00:21:34.540
 We use it very naturally, right? 

00:21:34.540 --> 00:21:37.170
 Capture the flexible movements of the human hand 

00:21:37.170 --> 00:21:39.400
 Is one of my favorite things to do 

00:21:39.400 --> 00:21:41.580
 How can we make this incredible ability 

00:21:41.580 --> 00:21:46.260
 That is, the delicate human movements and the skillful use of human hands. 

00:21:46.260 --> 00:21:48.170
 Apply to the virtual world? 

00:21:50.930 --> 00:21:53.960
 We use the radio spectrum 

00:21:53.960 --> 00:21:56.877
 That is, radar to track people 

00:21:56.877 --> 00:21:58.960
 Radar is very versatile 

00:21:58.960 --> 00:22:02.560
 Can be used to track cars, large objects, satellites and airplanes 

00:22:02.560 --> 00:22:06.420
 We use radar to track the subtle movements of the human hand, that is, twitching 

00:22:06.420 --> 00:22:09.479
 Then used with wearable devices 

00:22:09.479 --> 00:22:11.770
 Network devices interact with other computer devices 

00:22:15.237 --> 00:22:18.850
 JAIME LIEN: Our team is focused on developing radar hardware 

00:22:18.850 --> 00:22:21.960
 And turn it into a conditioning sensor 

00:22:21.960 --> 00:22:24.410
 The principle of radar technology 

00:22:24.410 --> 00:22:26.750
 Is to transmit radio waves to the target 

00:22:26.750 --> 00:22:28.420
 Radar receiver 

00:22:28.420 --> 00:22:32.370
 Will intercept the energy reflected from the target 

00:22:32.370 --> 00:22:35.250
 We are able to interpret so much information from a radar signal. 

00:22:35.250 --> 00:22:38.490
 To benefit from the complete gesture recognition pipeline we built 

00:22:38.490 --> 00:22:42.270
 Various stages of this pipeline 

00:22:42.270 --> 00:22:46.010
 Designed to receive radar signals at a higher frame rate 

00:22:46.010 --> 00:22:48.830
 Extract specific gesture information 

00:22:50.884 --> 00:22:53.300
 PATRICK AMIHOOD: Through these strange alien remote Doppler signals 

00:22:53.300 --> 00:22:59.202
 We are actually interpreting human intentions 

00:22:59.202 --> 00:23:02.190
 EMRE KARAGOZLER: Compared to the camera 

00:23:02.190 --> 00:23:04.830
 Radar has some unique places 

00:23:04.830 --> 00:23:07.550
 For example, positioning is highly accurate 

00:23:07.550 --> 00:23:09.675
 This means that the most subtle actions can be detected 

00:23:12.274 --> 00:23:14.690
 CARSTEN SCHWESIG: The idea of ​​virtual tools 

00:23:14.690 --> 00:23:16.064
 From our awareness 

00:23:16.064 --> 00:23:19.540
 Volume knob 

00:23:19.540 --> 00:23:23.610
 Controls such as solid sliders and volume sliders have specific prototypes 

00:23:23.610 --> 00:23:27.260
 Imagine a button between the thumb and forefinger 

00:23:27.260 --> 00:23:30.210
 This button does not actually exist. 

00:23:30.210 --> 00:23:32.300
 But pressing the button is a very obvious action 

00:23:32.300 --> 00:23:34.780
 While performing this action 

00:23:34.780 --> 00:23:36.190
 Will produce natural physical optical feedback 

00:23:36.190 --> 00:23:39.520
 Hands can be turned into virtual tools 

00:23:39.520 --> 00:23:42.320
 At the same time, you can also perform actions on the virtual tool. 

00:23:43.260 --> 00:23:45.500
 So if we can recognize the action 

00:23:45.500 --> 00:23:48.420
 I found a very interesting 

00:23:48.420 --> 00:23:50.620
 The direction of interaction with technology 

00:23:50.620 --> 00:23:53.415
 IVAN POUPYREV: When we started this project 

00:23:53.415 --> 00:23:57.100
 I discussed this project idea with my team. 

00:23:57.100 --> 00:23:59.650
 We think, in the end, do you want to do it? 

00:23:59.650 --> 00:24:00.680
 We don't know 

00:24:00.680 --> 00:24:03.180
 But we have to do it because unless we really do it 

00:24:03.180 --> 00:24:04.840
 Otherwise, I won’t know the result. 

00:24:04.840 --> 00:24:08.420
 HAKIM RAJA: I am most proud of this project. 

00:24:08.420 --> 00:24:12.550
 We have greatly improved the processing function of this electronic device itself. 

00:24:12.550 --> 00:24:14.780
 Let it do the work of perception for us 

00:24:16.905 --> 00:24:18.780
 IVAN POUPYREV: There is a radar 

00:24:18.780 --> 00:24:20.580
 Features not found in all other technologies 

00:24:20.580 --> 00:24:23.820
 That is, it can penetrate substances and can be embedded in objects. 

00:24:23.820 --> 00:24:25.690
 It allows us to accurately track the action 

00:24:25.690 --> 00:24:27.640
 The most exciting thing is 

00:24:27.640 --> 00:24:30.100
 You can narrow the entire radar 

00:24:30.100 --> 00:24:31.560
 Put it in a tiny chip 

00:24:31.560 --> 00:24:34.530
 Therefore, the prospect of this technology is limitless. 

00:24:34.530 --> 00:24:36.000
 It is very stable and reliable 

00:24:36.000 --> 00:24:37.440
 Will not destroy anything 

00:24:37.440 --> 00:24:38.580
 It does not have any moving parts 

00:24:38.580 --> 00:24:39.354
 No lens 

00:24:39.354 --> 00:24:40.020
 Nothing 

00:24:40.020 --> 00:24:41.518
 Just a small wafer made of silicon dioxide on the motherboard 

00:24:43.697 --> 00:24:45.530
 CARSTEN SCHWESIG: At this stage 

00:24:45.530 --> 00:24:48.790
 We have hardware that can sense gestures 

00:24:48.790 --> 00:24:50.420
 Ability to use these hardware in real-world applications 

00:24:50.420 --> 00:24:53.230
 On this basis, we can study their own effects 

00:24:53.230 --> 00:24:54.990
 And their effect in the product 

00:24:59.442 --> 00:25:01.025
 IVAN POUPYREV: The results of our team 

00:25:01.025 --> 00:25:03.350
 Often subvert my cognition 

00:25:03.350 --> 00:25:05.100
 This is exactly what I expected 

00:25:05.100 --> 00:25:06.756
 I am very excited 

00:25:06.756 --> 00:25:07.964
 Release this product for the development community 

00:25:07.964 --> 00:25:10.870
 I hope they are excited, inspired and inspired 

00:25:10.870 --> 00:25:12.880
 Use it to do more cool things 

00:25:18.090 --> 00:25:21.370
 DANIEL GALPIN: Ok, finally I will summarize it all. 

00:25:21.370 --> 00:25:23.260
 The topics covered in the previous presentation included helping you expand your Play Games business. 

00:25:23.260 --> 00:25:25.870
 The development of advanced analysis tools 

00:25:25.870 --> 00:25:28.430
 How to make the most of your mobile phone 

00:25:28.430 --> 00:25:32.190
 Android investment in TV, VR, and even wearable devices 

00:25:32.190 --> 00:25:33.980
 Can help you take advantage of native Android tools 

00:25:33.980 --> 00:25:35.580
 The technology to create better games 

00:25:35.580 --> 00:25:38.670
 Open source game technology from Fun Propulsion Labs 

00:25:38.670 --> 00:25:41.570
 Support for Firebase Real-Time Cloud 

00:25:41.570 --> 00:25:44.880
 The future of computer vision and sensor hardware 

00:25:44.880 --> 00:25:48.240
 So, the future of Google and your future 

00:25:48.240 --> 00:25:50.380
 Must be closely related to the game 

00:25:50.380 --> 00:25:52.610
 Thank you very much today, thank you very much 

00:25:52.610 --> 00:25:53.810
 [applaud] 

00:25:55.610 --> 00:25:58.060
 [music] 

