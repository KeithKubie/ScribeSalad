WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:22.678
[MUSIC PLAYING]

00:00:30.690 --> 00:00:31.400
PAUL KINLAN: Hi, everyone.

00:00:31.400 --> 00:00:35.940
Welcome to our second mobile
web, or Thursday mobile webs,

00:00:35.940 --> 00:00:38.510
web mobile Thursdays, I can
never quite remember the name.

00:00:38.510 --> 00:00:39.590
I'm Paul Kinlan.

00:00:39.590 --> 00:00:41.000
I'm a developer advocate
at Google.

00:00:41.000 --> 00:00:43.510
I'm working on Chrome and
Chrome for Android.

00:00:43.510 --> 00:00:45.490
And I'd like to introduce
Pete LePage, who is--

00:00:45.490 --> 00:00:48.490
are you in Mountain View or
in New York at the moment?

00:00:48.490 --> 00:00:51.070
PETE LEPAGE: I'm in Mountain
view this week, enjoying the

00:00:51.070 --> 00:00:54.860
nice weather and avoiding the
lovely snow that's going on.

00:00:54.860 --> 00:00:55.530
PAUL KINLAN: Oh, wow.

00:00:55.530 --> 00:00:55.780
Cool.

00:00:55.780 --> 00:00:56.640
Sweet.

00:00:56.640 --> 00:01:00.620
So we might as well
get into it.

00:01:00.620 --> 00:01:03.030
So this week's episode is about
what's new in the beta

00:01:03.030 --> 00:01:04.010
version of Chrome.

00:01:04.010 --> 00:01:06.770
Chrome is now on M26
and Android.

00:01:06.770 --> 00:01:09.040
Recently got updated, actually
twice this last week.

00:01:09.040 --> 00:01:11.520
We've had a small, mind bug fix
that's actually gone out.

00:01:11.520 --> 00:01:13.840
So if you're using the Chrome
beta channel at the moment,

00:01:13.840 --> 00:01:16.570
you should actually just be
seeing the new update.

00:01:16.570 --> 00:01:18.290
And I think it should
be available now on

00:01:18.290 --> 00:01:19.840
the Nexus 7 as well.

00:01:19.840 --> 00:01:24.310
We had an issue whereby we
hadn't actually set the camera

00:01:24.310 --> 00:01:25.380
permission up properly.

00:01:25.380 --> 00:01:27.750
We've re-rolled that out, so now
you've got access to that.

00:01:27.750 --> 00:01:29.490
And you'll be able to see that
in the book tracker as well.

00:01:29.490 --> 00:01:30.265
So it's all pretty cool.

00:01:30.265 --> 00:01:31.840
It's pretty open.

00:01:31.840 --> 00:01:33.620
But today we're going to talk
about a couple of really

00:01:33.620 --> 00:01:36.220
interesting topics, some of
the new features that are

00:01:36.220 --> 00:01:39.900
inside Chrome for Android,
the beta M26.

00:01:39.900 --> 00:01:41.910
The interesting thing about this
is what we're going to

00:01:41.910 --> 00:01:44.990
talk about today, it's not
really available to kind of

00:01:44.990 --> 00:01:46.470
normal users at the moment.

00:01:46.470 --> 00:01:49.220
But you guys who are watching
this today, you are the

00:01:49.220 --> 00:01:52.090
cutting edge users and the
developers on this platform.

00:01:52.090 --> 00:01:54.000
So we want to give you a little
bit of a preview into

00:01:54.000 --> 00:01:54.810
what's actually happened.

00:01:54.810 --> 00:01:56.510
And the two bits that we're
going to talk about is the

00:01:56.510 --> 00:01:59.430
data compression proxy,
which has just

00:01:59.430 --> 00:02:01.040
been basically announced.

00:02:01.040 --> 00:02:03.060
It's all kind of
in Chrome flux.

00:02:03.060 --> 00:02:05.310
It's not kind of public
at the moment.

00:02:05.310 --> 00:02:10.400
And the second is getUserMedia
and WebRTC.

00:02:10.400 --> 00:02:12.210
I can't actually show you
WebRTC at the moment.

00:02:12.210 --> 00:02:12.980
I couldn't get it working.

00:02:12.980 --> 00:02:15.370
But we've got some nice
little things to

00:02:15.370 --> 00:02:18.080
show off like in between.

00:02:18.080 --> 00:02:20.170
Like getUserMedia is one of the
best ones at the moment.

00:02:20.170 --> 00:02:22.990
You've finally got access to the
camera inside JavaScript

00:02:22.990 --> 00:02:24.660
inside your phone.

00:02:24.660 --> 00:02:25.540
So that's pretty cool.

00:02:25.540 --> 00:02:27.500
And we're going to kind of
show them off today.

00:02:27.500 --> 00:02:30.710
So without much further ado, I'm
going to hand you across

00:02:30.710 --> 00:02:32.440
to Pete, and Pete's tell
you a bit about the

00:02:32.440 --> 00:02:34.470
data compression proxy.

00:02:34.470 --> 00:02:35.060
PETE LEPAGE: Cool.

00:02:35.060 --> 00:02:36.430
Awesome, thanks.

00:02:36.430 --> 00:02:39.910
So the data compression proxy is
something that's brand new

00:02:39.910 --> 00:02:41.680
to Chrome, and it's
something I think

00:02:41.680 --> 00:02:43.650
that is pretty exciting.

00:02:43.650 --> 00:02:46.870
Basically, the data compression
proxy reduces the

00:02:46.870 --> 00:02:52.430
amount of network data that's
sent between your device and

00:02:52.430 --> 00:02:55.040
the remote website that
you're asking for.

00:02:55.040 --> 00:02:58.380
Now, just one thing to call out
really fast, right off the

00:02:58.380 --> 00:03:03.840
bat, is that it only does
this for HTTP sites.

00:03:03.840 --> 00:03:06.410
If it's a secure connection,
we're not going to do

00:03:06.410 --> 00:03:07.280
anything with it.

00:03:07.280 --> 00:03:10.830
We're going to let you go
directly to the server.

00:03:10.830 --> 00:03:12.780
We're not going to get in
the middle of that.

00:03:12.780 --> 00:03:17.720
But for nonsecure connections,
basically what happens is that

00:03:17.720 --> 00:03:22.460
Chrome opens a speedy connection
between you and one

00:03:22.460 --> 00:03:23.940
of the Google data centers.

00:03:23.940 --> 00:03:26.980
And from there it starts going
out and making the

00:03:26.980 --> 00:03:28.950
requests for sites.

00:03:28.950 --> 00:03:32.800
So there's a couple of things
that are happening once you've

00:03:32.800 --> 00:03:36.720
connected to the Google
services.

00:03:36.720 --> 00:03:40.870
As you start going out and
making those connections,

00:03:40.870 --> 00:03:42.990
we're using the new--

00:03:42.990 --> 00:03:45.840
well, I guess it's not the
new, but the speedy

00:03:45.840 --> 00:03:49.660
connections, as well as the--

00:03:49.660 --> 00:03:52.210
I'm completely blanking on the
name for it right now.

00:03:55.570 --> 00:03:56.820
Paul, do you remember?

00:04:00.530 --> 00:04:01.690
That's what it is--

00:04:01.690 --> 00:04:03.170
page speed libraries.

00:04:03.170 --> 00:04:05.680
Every once in a while-- so I'm
here in Mountain View.

00:04:05.680 --> 00:04:08.680
It's 8 o'clock, and I was--

00:04:08.680 --> 00:04:09.890
yeah, it's a little early.

00:04:09.890 --> 00:04:11.060
I apologize.

00:04:11.060 --> 00:04:14.610
Anyway, it's the open source
page speed libraries.

00:04:14.610 --> 00:04:17.610
So by using these page speed
libraries, there's a couple of

00:04:17.610 --> 00:04:19.480
things that are going on.

00:04:19.480 --> 00:04:21.690
Images get optimized
automatically.

00:04:21.690 --> 00:04:24.680
So most images, when developers
push them up, they

00:04:24.680 --> 00:04:26.220
optimize them a little bit.

00:04:26.220 --> 00:04:28.950
But they don't always remember
to optimize them.

00:04:28.950 --> 00:04:30.470
Sometimes they completely
forget.

00:04:30.470 --> 00:04:32.910
Sometimes they just
do a little bit.

00:04:32.910 --> 00:04:36.430
Well, what the image
optimization does is it uses

00:04:36.430 --> 00:04:41.940
WebP to transcode the images,
which uses less bandwidth and

00:04:41.940 --> 00:04:44.930
shrinks them down while
maintaining

00:04:44.930 --> 00:04:46.240
the same image quality.

00:04:46.240 --> 00:04:51.860
So your images just get much
smaller than what they were

00:04:51.860 --> 00:04:54.280
before, and they're
always optimized.

00:04:54.280 --> 00:04:57.180
The second thing that happens
is there is a set of what we

00:04:57.180 --> 00:05:00.470
call content aware
compression.

00:05:00.470 --> 00:05:03.420
So that's things like
minification, white space

00:05:03.420 --> 00:05:05.190
removal, all of that
kind of stuff.

00:05:05.190 --> 00:05:07.310
So taking all of the
stuff that--

00:05:07.310 --> 00:05:10.270
normally, you might have a
JavaScript file that's this

00:05:10.270 --> 00:05:13.780
big, and it's now all of a
sudden going to be this big.

00:05:13.780 --> 00:05:17.850
Again, not every developer
remembers to minify things, so

00:05:17.850 --> 00:05:22.510
this makes a pretty big deal.

00:05:22.510 --> 00:05:24.750
And then the third big advantage
that you get out of

00:05:24.750 --> 00:05:29.240
using this is that you get
access automatically to all of

00:05:29.240 --> 00:05:31.410
Google's safe browsing
technology.

00:05:31.410 --> 00:05:34.470
So we're making sure that the
sites people are going to

00:05:34.470 --> 00:05:37.720
aren't sites that are spreading
malware, or phishing

00:05:37.720 --> 00:05:39.570
sites, and all that
kind of stuff.

00:05:39.570 --> 00:05:43.110
So there's really sort of three
main advantages, both to

00:05:43.110 --> 00:05:45.170
consumers and to users.

00:05:45.170 --> 00:05:48.390
Now, I was playing with this a
little bit earlier today on a

00:05:48.390 --> 00:05:50.960
couple of websites, and you
could pull this up.

00:05:50.960 --> 00:05:53.710
And I know Paul's going to
show a demo of this in a

00:05:53.710 --> 00:05:56.050
minute or two.

00:05:56.050 --> 00:05:59.160
You can see how much your
compression is turned on.

00:05:59.160 --> 00:06:00.470
So to turn it on--

00:06:00.470 --> 00:06:02.450
I guess we should start
with that first--

00:06:02.450 --> 00:06:04.330
you need to go into
Chrome Flag.

00:06:04.330 --> 00:06:08.600
So if you go into Chrome colon
whack whack flags, one of the

00:06:08.600 --> 00:06:12.750
first items that you'll see
there is Enable Data

00:06:12.750 --> 00:06:15.420
Compression, or Experimental
Data Compression.

00:06:15.420 --> 00:06:18.190
So you enable that,
restarts Chrome.

00:06:18.190 --> 00:06:22.000
And then from there, you can
start loading pages.

00:06:22.000 --> 00:06:26.610
Now, to see how much stuff
changes, open up a new tap and

00:06:26.610 --> 00:06:30.080
go to Chrome colon forward slash
forward slash, or whack

00:06:30.080 --> 00:06:34.430
whack, net dash internals.

00:06:34.430 --> 00:06:37.500
So when you go to the
net-internals, from there

00:06:37.500 --> 00:06:41.240
you'll see a link where you
can click on Bandwidth.

00:06:41.240 --> 00:06:43.670
And you click on that bandwidth,
and it shows you

00:06:43.670 --> 00:06:50.115
how much data has been saved
by using the speedy proxy.

00:06:50.115 --> 00:06:52.536
PAUL KINLAN: Shall I get that up
now on one of our screens?

00:06:52.536 --> 00:06:52.942
PETE LEPAGE: Yeah.

00:06:52.942 --> 00:06:54.970
If you can pull that up, that
would be really cool.

00:06:54.970 --> 00:06:57.950
So it's a really cool way to
be able to see what's going

00:06:57.950 --> 00:06:59.850
on, to see what's happening.

00:07:02.460 --> 00:07:04.260
It's really fascinating
to see.

00:07:04.260 --> 00:07:07.440
So we were looking at the
Verge earlier today.

00:07:07.440 --> 00:07:10.300
And the Verge had about
a 35% or 40%.

00:07:10.300 --> 00:07:11.350
Paul, do you remember
off hand, was it--

00:07:11.350 --> 00:07:13.520
PAUL KINLAN: Yeah, it's actually
45%, because I turned

00:07:13.520 --> 00:07:15.710
it on just before this talk.

00:07:15.710 --> 00:07:18.390
And it's the only request
I made, so 45%

00:07:18.390 --> 00:07:19.770
saving for this session.

00:07:19.770 --> 00:07:20.220
PETE LEPAGE: Yeah.

00:07:20.220 --> 00:07:24.940
So like 45% of the bandwidth,
right, is down.

00:07:24.940 --> 00:07:28.770
So what was the total kilobyte
size on that page before?

00:07:28.770 --> 00:07:31.400
It should say up in that box.

00:07:31.400 --> 00:07:37.540
PAUL KINLAN: I think
1,900 kilobytes.

00:07:37.540 --> 00:07:40.040
PETE LEPAGE: Yeah,
so that's what?

00:07:40.040 --> 00:07:41.280
1.9 meg.

00:07:41.280 --> 00:07:42.730
PAUL KINLAN: Maybe 2 meg.

00:07:42.730 --> 00:07:47.290
PETE LEPAGE: So nearly 2 megs
has been dropped to what?

00:07:47.290 --> 00:07:50.610
PAUL KINLAN: So it says saving
6 watts, it's saved 663

00:07:50.610 --> 00:07:52.500
kilowatts of that--

00:07:52.500 --> 00:07:56.620
PETE LEPAGE: So like
1.2 megs or so.

00:07:56.620 --> 00:07:58.300
It's gone down.

00:07:58.300 --> 00:08:00.480
It's down to 1.2 megabytes.

00:08:00.480 --> 00:08:03.910
Now, when you're on a nice
Wi-Fi or on a 4G

00:08:03.910 --> 00:08:05.350
connection, eh, OK.

00:08:05.350 --> 00:08:06.430
2 megs, not a big deal.

00:08:06.430 --> 00:08:09.360
But when you're on an Edge
connection, or when you're on

00:08:09.360 --> 00:08:12.190
anything else, that's
pretty significant.

00:08:12.190 --> 00:08:17.640
This morning I was playing
with In Focus from "The

00:08:17.640 --> 00:08:19.100
Atlantic" News.

00:08:19.100 --> 00:08:24.870
And "In Focus" is one of my
favorite pages to read, or I

00:08:24.870 --> 00:08:26.600
guess I kind of call
it a blog.

00:08:26.600 --> 00:08:31.880
It's a collection of photos
that are recent events,

00:08:31.880 --> 00:08:34.730
photographs from those
particular recent events.

00:08:34.730 --> 00:08:36.419
And this morning when
I was looking at

00:08:36.419 --> 00:08:40.260
it I got a 65% savings.

00:08:40.260 --> 00:08:45.110
So I went from almost a 4 meg
page download to less than 2

00:08:45.110 --> 00:08:45.960
megs

00:08:45.960 --> 00:08:50.450
So you can see how much savings
you're getting because

00:08:50.450 --> 00:08:53.320
you're taking all of that data
and making it smaller.

00:08:53.320 --> 00:08:58.430
So not only are you getting
advantages in terms of speed

00:08:58.430 --> 00:09:00.350
increases because you're sending
less data over the

00:09:00.350 --> 00:09:05.110
wire, you're also potentially
reducing your mobile bill.

00:09:05.110 --> 00:09:09.550
Because all of a sudden you're
not costing 4 megs.

00:09:09.550 --> 00:09:12.560
And if you're not on an
unlimited plan, all a sudden

00:09:12.560 --> 00:09:15.310
that's a pretty significant
thing.

00:09:15.310 --> 00:09:19.000
There's a really great
document on this.

00:09:19.000 --> 00:09:22.360
If you just go up and do
a quick search for--

00:09:22.360 --> 00:09:25.220
PAUL KINLAN: We've
got the link--

00:09:25.220 --> 00:09:25.590
PETE LEPAGE: Oh.

00:09:25.590 --> 00:09:27.520
If we've got the link,
we can put that up.

00:09:27.520 --> 00:09:34.640
But Ilya, who's going to be
doing a much deeper Hangout on

00:09:34.640 --> 00:09:36.810
this in the next week
so, I believe--

00:09:36.810 --> 00:09:39.620
just check
developers.google.com/live and

00:09:39.620 --> 00:09:44.370
look for "make the web fast."
There's a great article, Data

00:09:44.370 --> 00:09:45.620
Compression Proxy.

00:09:45.620 --> 00:09:48.180
It goes into all the nitty
gritty details, and worth

00:09:48.180 --> 00:09:49.586
checking out.

00:09:49.586 --> 00:09:50.880
PAUL KINLAN: Yeah, definitely.

00:09:50.880 --> 00:09:52.810
So yeah, it's on the screen
at the moment.

00:09:52.810 --> 00:09:55.382
I suppose, can we just switch
across to my screen?

00:09:55.382 --> 00:09:57.620
And I want to show you some of
the stuff just so you can

00:09:57.620 --> 00:09:59.490
actually see it working
in action.

00:09:59.490 --> 00:10:03.480
So this screen at the moment
is my dev tools, which is

00:10:03.480 --> 00:10:05.550
actually connected to my device
which we saw on the

00:10:05.550 --> 00:10:06.710
camera before.

00:10:06.710 --> 00:10:09.080
And before we came on air, we
actually connect the Verge

00:10:09.080 --> 00:10:10.580
just see what it looks like.

00:10:10.580 --> 00:10:13.140
And the great thing about the
actual site itself is it looks

00:10:13.140 --> 00:10:13.715
exactly the same.

00:10:13.715 --> 00:10:16.450
It doesn't look any
different at all.

00:10:16.450 --> 00:10:18.020
But this is how you can actually
tell whether you're

00:10:18.020 --> 00:10:20.300
actually in the data compression
mode at the time,

00:10:20.300 --> 00:10:22.350
is that it's gone into
speedy mode.

00:10:22.350 --> 00:10:25.640
And there's the host, method,
and path in the call on scheme

00:10:25.640 --> 00:10:28.070
as the request header, which is
different the normal HTTP

00:10:28.070 --> 00:10:28.920
request header.

00:10:28.920 --> 00:10:32.090
That's kind of the primary
indicator to the actual fact

00:10:32.090 --> 00:10:33.980
that you are running
in this data

00:10:33.980 --> 00:10:36.380
compression mode at least.

00:10:36.380 --> 00:10:37.160
And that's pretty much
here, right?

00:10:37.160 --> 00:10:38.870
You don't really notice anything
else, other than the

00:10:38.870 --> 00:10:42.340
fact that it's a cache
and proxy in between.

00:10:42.340 --> 00:10:44.010
So the really cool thing as well
is if you go back to the

00:10:44.010 --> 00:10:47.360
site, the data is potentially
cached at the Google side of

00:10:47.360 --> 00:10:48.270
things as well.

00:10:48.270 --> 00:10:51.970
So the actual refresh itself
should be a lot quicker.

00:10:51.970 --> 00:10:54.210
I just want to show you some of
the images, because this is

00:10:54.210 --> 00:10:56.210
kind of the interesting thing.

00:10:56.210 --> 00:10:57.690
PETE LEPAGE: While you look
for those images, Paul,

00:10:57.690 --> 00:10:59.330
there's one thing I also
wanted to mention for

00:10:59.330 --> 00:11:01.770
developers.

00:11:01.770 --> 00:11:04.980
One of the things that I know a
number of developers want to

00:11:04.980 --> 00:11:09.790
know is hey, is somebody making
a request, and is it

00:11:09.790 --> 00:11:11.040
coming through this proxy?

00:11:11.040 --> 00:11:14.800
So as a developer, is that
request coming through?

00:11:14.800 --> 00:11:17.620
And there's one easy way that
you can tell, and that's to

00:11:17.620 --> 00:11:25.780
look for the X-Forwarded-For
HTTP header in your request.

00:11:25.780 --> 00:11:29.560
So if you see the
X-Forwarded-For, and that's

00:11:29.560 --> 00:11:33.580
going to have an IP address of
the original user who made the

00:11:33.580 --> 00:11:36.530
request, or the original users
who made the request.

00:11:36.530 --> 00:11:39.210
So you can check to see if
that's coming in so that you

00:11:39.210 --> 00:11:42.370
can find out hey, who was it
who was looking for this

00:11:42.370 --> 00:11:44.106
particular bit?

00:11:44.106 --> 00:11:45.560
PAUL KINLAN: The other thing I
was going to say, actually as

00:11:45.560 --> 00:11:47.490
well, is we've got a
moderator as well.

00:11:47.490 --> 00:11:49.523
So if you want to ask questions,
we'll pop--

00:11:49.523 --> 00:11:50.158
PETE LEPAGE: Oh, right.

00:11:50.158 --> 00:11:50.370
Yeah.

00:11:50.370 --> 00:11:51.890
PAUL KINLAN: We'll pop the link
up in a second, and you

00:11:51.890 --> 00:11:54.200
can ask questions on anything
we talked about today.

00:11:54.200 --> 00:11:57.930
I would say a lot of the data
compression proxy, Ilya will

00:11:57.930 --> 00:11:59.410
be the best person to definitely
answer a lot of

00:11:59.410 --> 00:12:01.270
these, if it's very technical
and detailed questions.

00:12:01.270 --> 00:12:02.480
We're just kind of giving
you a little

00:12:02.480 --> 00:12:04.110
preview at the moment.

00:12:04.110 --> 00:12:05.970
But whilst we're in this mode
of giving you previews at

00:12:05.970 --> 00:12:09.430
least, this here, this is the
first PNG that we found, the

00:12:09.430 --> 00:12:11.800
Verge Android logo.

00:12:11.800 --> 00:12:14.240
It's a PNG file, but as you can
see, the actual request

00:12:14.240 --> 00:12:16.390
type, image4/webp.

00:12:16.390 --> 00:12:18.570
And that's because the page
compression service

00:12:18.570 --> 00:12:20.240
essentially has actually
gone off and done that

00:12:20.240 --> 00:12:21.600
conversion for you.

00:12:21.600 --> 00:12:23.760
So it's actually very nice.

00:12:23.760 --> 00:12:24.610
It's pretty cool.

00:12:24.610 --> 00:12:26.930
I noticed on my own blog--

00:12:26.930 --> 00:12:28.670
and I wasn't actually quite
sure exactly what was

00:12:28.670 --> 00:12:32.040
happening at the time, but
I noticed that the actual

00:12:32.040 --> 00:12:37.590
content ready event fired half
a second earlier when I used

00:12:37.590 --> 00:12:39.800
the actual compression proxy
than it did when I

00:12:39.800 --> 00:12:40.490
wasn't using it.

00:12:40.490 --> 00:12:42.990
So even on Wi-Fi, it seems to be
doing a pretty good thing.

00:12:42.990 --> 00:12:45.490
But like Pete was saying before
in mobile, this is the

00:12:45.490 --> 00:12:46.930
potential to actually
improve the mobile

00:12:46.930 --> 00:12:49.030
experience quite a lot.

00:12:49.030 --> 00:12:53.490
So with that, shall we jump
onto the getUserMedia?

00:12:53.490 --> 00:12:54.410
And WebRTC?

00:12:54.410 --> 00:12:54.750
OK.

00:12:54.750 --> 00:12:57.040
So let's see if this works.

00:13:00.430 --> 00:13:02.340
I have a file somewhere.

00:13:02.340 --> 00:13:04.270
Hey, there we are.

00:13:04.270 --> 00:13:05.940
So this is the shiny demo.

00:13:05.940 --> 00:13:08.650
I think it's all done, if
you can see my desktop.

00:13:08.650 --> 00:13:10.540
I'm going to put my hand
across it a little bit.

00:13:10.540 --> 00:13:11.680
You can see it.

00:13:11.680 --> 00:13:13.900
This is actually on an old
Galaxy Nexus at the moment, so

00:13:13.900 --> 00:13:15.660
it's running a little
bit slow.

00:13:15.660 --> 00:13:18.990
Hello, here we are.

00:13:18.990 --> 00:13:20.030
There's our producer there.

00:13:20.030 --> 00:13:22.220
Say hello.

00:13:22.220 --> 00:13:23.600
That's Ian.

00:13:23.600 --> 00:13:25.600
So the really great thing about
this actually is that

00:13:25.600 --> 00:13:29.620
this is basically just the
normal getUserMedia API.

00:13:29.620 --> 00:13:32.110
It doesn't require
anything special.

00:13:32.110 --> 00:13:34.000
Other than the fact it's
actually behind a flag and

00:13:34.000 --> 00:13:36.140
it's enabled via the WebRTC.

00:13:36.140 --> 00:13:39.770
So you go to about flags.

00:13:39.770 --> 00:13:43.380
If we show if off correctly,
up around this.

00:13:43.380 --> 00:13:44.630
Chrome--

00:13:46.340 --> 00:13:47.460
sorry about this.

00:13:47.460 --> 00:13:48.710
I've got fat thumbs.

00:13:55.440 --> 00:13:56.970
While it loads, this
is really cool.

00:14:00.200 --> 00:14:01.520
And has it just gone white?

00:14:01.520 --> 00:14:02.630
It's a white screen, isn't it?

00:14:02.630 --> 00:14:05.750
There we are.

00:14:05.750 --> 00:14:07.780
So it's certainly not optimized
just yet, and this

00:14:07.780 --> 00:14:09.710
is why it's in a flag
at the moment.

00:14:09.710 --> 00:14:13.290
But if you search for WebRTC--

00:14:13.290 --> 00:14:17.030
there we are-- you can enable
WebRTC in the Chrome flags,

00:14:17.030 --> 00:14:18.170
and then you can get
access to it.

00:14:18.170 --> 00:14:21.210
So in this case here, this is
our just normal Galaxy Nexus.

00:14:21.210 --> 00:14:22.610
It's going to reload.

00:14:22.610 --> 00:14:25.670
As you can see, it actually says
Allow, props up, doesn't

00:14:25.670 --> 00:14:28.260
take access to the camera
straight away.

00:14:28.260 --> 00:14:30.750
And if we scroll down, it's
going to take a little while

00:14:30.750 --> 00:14:33.980
on this screen at least, anyway,
because it's not the

00:14:33.980 --> 00:14:36.680
greatest demo on this machine.

00:14:36.680 --> 00:14:37.970
Actually, it's a really good
demo, just on this machine

00:14:37.970 --> 00:14:39.180
it's a little bit slow.

00:14:39.180 --> 00:14:41.250
And if I leave for a couple
of seconds it'll be fine.

00:14:41.250 --> 00:14:46.400
But if I switch across to our
other demo app, I've actually

00:14:46.400 --> 00:14:46.986
got it working here.

00:14:46.986 --> 00:14:48.500
You should say Allow.

00:14:48.500 --> 00:14:48.830
Oh, there we are.

00:14:48.830 --> 00:14:49.810
It's actually come back.

00:14:49.810 --> 00:14:50.600
We're fine.

00:14:50.600 --> 00:14:51.790
It'll take a little while
to get used to it, but

00:14:51.790 --> 00:14:52.630
yeah, we have it.

00:14:52.630 --> 00:14:54.430
So it's pretty cool.

00:14:54.430 --> 00:14:57.210
We can do a special Hangout
another time on pure

00:14:57.210 --> 00:14:58.290
[INAUDIBLE] features.

00:14:58.290 --> 00:15:02.280
We just wanted to let you know
that this feature exists.

00:15:02.280 --> 00:15:03.780
Yeah, I think that's about it.

00:15:03.780 --> 00:15:04.990
Pete, do you have anything
else to say about

00:15:04.990 --> 00:15:07.480
getUserMedia?

00:15:07.480 --> 00:15:08.580
PETE LEPAGE: No.

00:15:08.580 --> 00:15:10.020
This is one of these
things that I

00:15:10.020 --> 00:15:12.231
think is really exciting.

00:15:12.231 --> 00:15:14.530
It's really going to
allow us to do, as

00:15:14.530 --> 00:15:16.210
developers, a lot more.

00:15:16.210 --> 00:15:18.710
We've been able to play with it
on desktop, and we've seen

00:15:18.710 --> 00:15:20.900
some interesting uses
on desktop.

00:15:20.900 --> 00:15:24.680
Now to actually put it on mobile
devices means all of a

00:15:24.680 --> 00:15:29.340
sudden we can now start doing
things like, oh, I don't know,

00:15:29.340 --> 00:15:33.010
make video and voice calls
without needing any kind of

00:15:33.010 --> 00:15:35.060
crazy plug-in.

00:15:35.060 --> 00:15:37.500
So there's a lot of stuff, and
it'll be neat to see what

00:15:37.500 --> 00:15:39.790
folks do with it.

00:15:39.790 --> 00:15:42.760
PAUL KINLAN: Sorry, I'm just
taking pictures of myself.

00:15:42.760 --> 00:15:43.740
I should have had
a shave, is all.

00:15:43.740 --> 00:15:45.300
PETE LEPAGE: Nobody says
you weren't humble, so

00:15:45.300 --> 00:15:46.880
[INAUDIBLE].

00:15:46.880 --> 00:15:48.240
PAUL KINLAN: Yeah,
I kind like this.

00:15:48.240 --> 00:15:50.600
I mean, we've been asking for
this for a long, long time.

00:15:50.600 --> 00:15:53.065
And we've had some basic
access by the camera.

00:15:53.065 --> 00:15:56.420
So if you have input type equals
file, accept image

00:15:56.420 --> 00:16:01.560
4-star, content, I think,
camcorder, it kind of works.

00:16:01.560 --> 00:16:03.080
But it's not an integrated
experience.

00:16:03.080 --> 00:16:05.860
And I think if we've learned
anything from the likes of

00:16:05.860 --> 00:16:08.760
Instagram, for instance, this
built in kind of integrated

00:16:08.760 --> 00:16:11.780
experience is what people want
from their web apps and sites.

00:16:11.780 --> 00:16:13.625
And this is one of those things,
even at a basic level

00:16:13.625 --> 00:16:15.330
for getUserMedia, it's one of
those things that's going to

00:16:15.330 --> 00:16:17.080
be really exciting.

00:16:17.080 --> 00:16:18.070
PETE LEPAGE: Yeah.

00:16:18.070 --> 00:16:18.580
PAUL KINLAN: Yeah.

00:16:18.580 --> 00:16:21.290
So I don't know whether
it does audio.

00:16:21.290 --> 00:16:24.290
That's the big question
at the moment.

00:16:24.290 --> 00:16:24.450
I

00:16:24.450 --> 00:16:26.005
PETE LEPAGE: I think it does.

00:16:26.005 --> 00:16:28.370
PAUL KINLAN: It will do audio
with WebRTC, right?

00:16:28.370 --> 00:16:28.650
PETE LEPAGE: Yeah.

00:16:28.650 --> 00:16:29.670
PAUL KINLAN: But there's
no audio API.

00:16:29.670 --> 00:16:31.550
PETE LEPAGE: But I wouldn't be
surprised if you can't push

00:16:31.550 --> 00:16:35.200
that through the Web
Audio API yet.

00:16:35.200 --> 00:16:35.960
PAUL KINLAN: Yeah.

00:16:35.960 --> 00:16:38.660
Well, we haven't got
it, have we?

00:16:38.660 --> 00:16:40.735
PETE LEPAGE: Touche.

00:16:40.735 --> 00:16:42.050
PAUL KINLAN: I think that's one
of the things that's like

00:16:42.050 --> 00:16:44.550
a little bit unfortunate
to some extent, but

00:16:44.550 --> 00:16:45.170
it's kind of cool.

00:16:45.170 --> 00:16:46.190
There's going to be a lot
of things that come

00:16:46.190 --> 00:16:47.400
off the back of this.

00:16:47.400 --> 00:16:49.650
And there's the rest
of our studio.

00:16:49.650 --> 00:16:51.840
The studio looks cool when we
dress it up, but when you look

00:16:51.840 --> 00:16:55.120
at the ceiling it's
pretty crazy.

00:16:55.120 --> 00:16:56.280
So yeah, that was it, really.

00:16:56.280 --> 00:16:58.610
I mean, there's not a
huge amount of extra

00:16:58.610 --> 00:17:01.230
features in M26 beta.

00:17:01.230 --> 00:17:05.170
It's more about improving the
performance again, bringing

00:17:05.170 --> 00:17:07.030
the platform more
up to parity.

00:17:07.030 --> 00:17:09.780
And we're starting to do that
with these two new APIs.

00:17:09.780 --> 00:17:10.190
PETE LEPAGE: Absolutely.

00:17:10.190 --> 00:17:13.420
And it's also really about
trying to get us on to a

00:17:13.420 --> 00:17:15.280
similar ship schedule.

00:17:15.280 --> 00:17:17.530
Because eventually we want to
be on the same schedule so

00:17:17.530 --> 00:17:21.090
that like, hey, Chrome
gets updated--

00:17:21.090 --> 00:17:23.569
Chrome gets updated
across the board.

00:17:23.569 --> 00:17:24.821
PAUL KINLAN: Yeah.

00:17:24.821 --> 00:17:27.510
So should we jump to
the moderator?

00:17:27.510 --> 00:17:28.310
I don't know whether
we'll have any

00:17:28.310 --> 00:17:29.480
questions or not, but--

00:17:29.480 --> 00:17:29.940
PETE LEPAGE: Sure.

00:17:29.940 --> 00:17:32.100
Actually, I think there's
one question in there.

00:17:32.100 --> 00:17:32.300
PAUL KINLAN: Oh, cool.

00:17:32.300 --> 00:17:34.350
Have you got it up or--

00:17:34.350 --> 00:17:35.880
PETE LEPAGE: Yeah, I do.

00:17:35.880 --> 00:17:42.160
So the question is from
Bill in Mississauga.

00:17:42.160 --> 00:17:46.106
And he wants to know if WebGL
is still behind a flag.

00:17:46.106 --> 00:17:46.980
PAUL KINLAN: Yeah.

00:17:46.980 --> 00:17:47.870
I think that's the
biggest thing.

00:17:47.870 --> 00:17:49.270
So basically this
is the thing.

00:17:49.270 --> 00:17:51.840
I know the team are really,
really keen at the moment to

00:17:51.840 --> 00:17:55.170
get a lot of feedback around
WebGL, WebRTC, if you're going

00:17:55.170 --> 00:17:55.640
to play with it.

00:17:55.640 --> 00:17:57.510
We're not trying to push
it that much at all.

00:17:57.510 --> 00:18:00.420
It's very experimental
at the moment.

00:18:00.420 --> 00:18:01.910
getUserMedia the same.

00:18:01.910 --> 00:18:03.470
And the data compression
proxy as well.

00:18:03.470 --> 00:18:04.870
So all three are super
experimental.

00:18:04.870 --> 00:18:08.070
We just though we'd give a
little preview right now.

00:18:08.070 --> 00:18:09.660
Because we want your
feedback, right?

00:18:09.660 --> 00:18:10.650
We're not going to
push it out.

00:18:10.650 --> 00:18:11.810
We're not going to tell
you to use it.

00:18:11.810 --> 00:18:13.930
Like, hey, this is going to be
enabled just yet, and all this

00:18:13.930 --> 00:18:14.430
type of stuff.

00:18:14.430 --> 00:18:15.630
We don't want you
guys to do that.

00:18:15.630 --> 00:18:18.580
But we want you to test and
give us a lot of feedback.

00:18:18.580 --> 00:18:20.050
And that goes for WebGL.

00:18:20.050 --> 00:18:22.590
I don't think we have a time
scale for when WebGL's going

00:18:22.590 --> 00:18:23.705
to be available.

00:18:23.705 --> 00:18:26.500
And I think a lot of this hinges
on the fact that we

00:18:26.500 --> 00:18:27.985
want a lot of feedback, right?

00:18:27.985 --> 00:18:29.520
PETE LEPAGE: Yeah.

00:18:29.520 --> 00:18:31.650
PAUL KINLAN: Do we know how this
performs across all the

00:18:31.650 --> 00:18:34.350
Nexus range or all the
Android range?

00:18:34.350 --> 00:18:37.440
I don't know whether we do, and
we need your experiences

00:18:37.440 --> 00:18:40.470
to basically test
it on mobile.

00:18:40.470 --> 00:18:41.490
Because this is like the--

00:18:41.490 --> 00:18:45.170
I think Firefox has had
it, basically mobile

00:18:45.170 --> 00:18:47.650
on WebGL and mobile.

00:18:47.650 --> 00:18:49.540
But the performance
characteristics are completely

00:18:49.540 --> 00:18:51.750
different, so the applications
that you design are not going

00:18:51.750 --> 00:18:54.080
to work exactly the
same on desktop.

00:18:54.080 --> 00:18:55.130
And we can't cater for it.

00:18:55.130 --> 00:18:57.220
But we want you to go and test,
and that's why it's in

00:18:57.220 --> 00:18:58.750
the flag, and that's why you
can go out and test it.

00:18:58.750 --> 00:19:02.810
And I think the same applies
for CSS filters and some of

00:19:02.810 --> 00:19:04.540
the hardware acceleration
as well.

00:19:04.540 --> 00:19:08.070
So I kind of always think
anything that's in flux is

00:19:08.070 --> 00:19:10.220
fair game to go and test
and file books and

00:19:10.220 --> 00:19:11.225
raise issues on.

00:19:11.225 --> 00:19:12.850
PETE LEPAGE: Yeah, I
agree with that.

00:19:12.850 --> 00:19:15.690
PAUL KINLAN: [INAUDIBLE]
book.com, select Android OS,

00:19:15.690 --> 00:19:17.990
you raise it, put a link in.

00:19:17.990 --> 00:19:19.780
Either copy me in,
PaulKinlan@google, or

00:19:19.780 --> 00:19:23.430
PaulKinlan@chromium.org, and
we'll get it triaged and we'll

00:19:23.430 --> 00:19:26.120
get it through for the right
people to go and test it.

00:19:26.120 --> 00:19:28.630
Because ultimately, we want
these features out.

00:19:28.630 --> 00:19:29.710
PETE LEPAGE: Yeah.

00:19:29.710 --> 00:19:33.090
And that's one of those things
like if you're running both

00:19:33.090 --> 00:19:38.310
the stable and beta, which is
what I do on my Nexus 4, I

00:19:38.310 --> 00:19:39.210
keep both there.

00:19:39.210 --> 00:19:43.160
And 99% of the time I find
myself in beta, because that's

00:19:43.160 --> 00:19:45.070
where I want to be testing.

00:19:45.070 --> 00:19:48.500
And I only go back to stable if
a page doesn't work or if

00:19:48.500 --> 00:19:51.070
something's a little bit broken,
a little bit weird.

00:19:51.070 --> 00:19:53.170
So I'd encourage people to
go to turn on the data

00:19:53.170 --> 00:19:57.670
compression proxy experiment,
and use beta on a regular

00:19:57.670 --> 00:19:58.900
basis, right?

00:19:58.900 --> 00:20:00.820
Figure out how things work.

00:20:00.820 --> 00:20:03.220
And as well, as you're going
through, you get a better

00:20:03.220 --> 00:20:08.150
opportunity to test your sites
to see hey, how are things

00:20:08.150 --> 00:20:14.200
going to look when we
get our next drop?

00:20:14.200 --> 00:20:14.760
PAUL KINLAN: Cool.

00:20:14.760 --> 00:20:16.215
So I think that's probably it.

00:20:16.215 --> 00:20:17.450
I think we're kind
of wrapped up.

00:20:17.450 --> 00:20:20.600
There was two major features
that we wanted to show you.

00:20:20.600 --> 00:20:22.500
They kind of worked
pretty well.

00:20:22.500 --> 00:20:25.430
WebRTC, I didn't want to kind
of risk it just yet.

00:20:25.430 --> 00:20:27.185
Just wanted to show
you getUserMedia.

00:20:27.185 --> 00:20:29.910
But we want to hear exactly what
you guys are working on.

00:20:29.910 --> 00:20:31.890
We want your feedback on
a lot of this stuff.

00:20:31.890 --> 00:20:33.890
We also want to know what you
want to hear about as well in

00:20:33.890 --> 00:20:36.560
more of these weekly meetings.

00:20:36.560 --> 00:20:38.750
I believe we've got Jake
Archibald on next week.

00:20:38.750 --> 00:20:39.410
PETE LEPAGE: Cool.

00:20:39.410 --> 00:20:41.530
PAUL KINLAN: And
if we haven't--

00:20:41.530 --> 00:20:42.380
he's on next week.

00:20:42.380 --> 00:20:45.455
I've just kind of nominated
him for it.

00:20:45.455 --> 00:20:46.720
PETE LEPAGE: Awesome.

00:20:46.720 --> 00:20:47.930
PAUL KINLAN: I think we're
going to try and

00:20:47.930 --> 00:20:48.640
talk about dev tools.

00:20:48.640 --> 00:20:49.860
Dev tools and performance
at least.

00:20:49.860 --> 00:20:52.480
I know Jake's big on
those two areas.

00:20:52.480 --> 00:20:53.980
And it's completely different.

00:20:53.980 --> 00:20:56.320
It's a completely different
game on mobile

00:20:56.320 --> 00:20:57.300
than it is to desktop.

00:20:57.300 --> 00:20:59.270
So we're going to show you some
nice stuff, and show you

00:20:59.270 --> 00:21:02.360
how to make faster web apps
and web sites on mobile.

00:21:02.360 --> 00:21:03.460
PETE LEPAGE: Very cool.

00:21:03.460 --> 00:21:04.560
PAUL KINLAN: Cool.

00:21:04.560 --> 00:21:06.450
So well, thank you,
Pete, for joining.

00:21:06.450 --> 00:21:07.950
I know it was early.

00:21:07.950 --> 00:21:09.270
Thank you for everything.

00:21:09.270 --> 00:21:10.170
PETE LEPAGE: OK.

00:21:10.170 --> 00:21:11.720
PAUL KINLAN: And thank you, Ian,
for being our producer

00:21:11.720 --> 00:21:14.346
and kind of waving at the camera
when it all happened.

00:21:14.346 --> 00:21:16.140
Oh, and--

00:21:16.140 --> 00:21:17.360
PETE LEPAGE: Oh, oh
another question.

00:21:17.360 --> 00:21:17.640
PAUL KINLAN: Right.

00:21:17.640 --> 00:21:18.880
There is another question.

00:21:18.880 --> 00:21:20.670
Not sure if you're reading
the YouTube comments.

00:21:20.670 --> 00:21:23.630
You're right, I'm not reading
the YouTube comments, sorry.

00:21:23.630 --> 00:21:26.020
Do you know what version the Web
Audio API will be shipped

00:21:26.020 --> 00:21:28.930
to beta, and a rough
date, too?

00:21:28.930 --> 00:21:31.930
On both those questions,
it's Tom Arden in

00:21:31.930 --> 00:21:34.500
Portsmouth in the UK.

00:21:34.500 --> 00:21:35.740
I don't have an answer
for that.

00:21:35.740 --> 00:21:37.610
I can speak to Chris Wilson and
a couple of other people

00:21:37.610 --> 00:21:39.495
to see what we might
be targeting.

00:21:39.495 --> 00:21:42.650
But even then, it's not even in
about flags at the moment,

00:21:42.650 --> 00:21:45.550
so if it's out six months down
the line or a year down the

00:21:45.550 --> 00:21:47.390
line, it's completely changed.

00:21:47.390 --> 00:21:49.250
I think the important thing to
say is that we want to get the

00:21:49.250 --> 00:21:51.980
same version that's in
Chrome for desktop

00:21:51.980 --> 00:21:53.540
in Chrome for Android.

00:21:53.540 --> 00:21:55.620
But it's not even in about flags
just yet, so I can't

00:21:55.620 --> 00:21:58.522
even say that we'll get
it any time soon.

00:21:58.522 --> 00:21:59.290
PETE LEPAGE: Yeah.

00:21:59.290 --> 00:22:03.520
The one thing I would
say, Tom, go to the

00:22:03.520 --> 00:22:04.880
Chromium bug list.

00:22:04.880 --> 00:22:07.330
See if you can find that in
there, because I'm pretty sure

00:22:07.330 --> 00:22:09.030
somebody's got that
filed as a bug.

00:22:09.030 --> 00:22:14.210
If they haven't, go file it as
a bug, even though I know

00:22:14.210 --> 00:22:16.680
we're working on it
at some point.

00:22:16.680 --> 00:22:21.090
And then ask other people to
star it, because seeing that

00:22:21.090 --> 00:22:25.110
sort of drive for things, and
understanding how important it

00:22:25.110 --> 00:22:28.270
is to the developers, is
really important to us.

00:22:28.270 --> 00:22:31.290
Because we really want to
prioritize based on what you

00:22:31.290 --> 00:22:33.020
find most important.

00:22:33.020 --> 00:22:34.630
PAUL KINLAN: Yep.

00:22:34.630 --> 00:22:35.320
Cool.

00:22:35.320 --> 00:22:37.740
And I think with that,
I think we're done.

00:22:37.740 --> 00:22:38.970
Thank you very much again.

00:22:38.970 --> 00:22:40.060
Thank you for watching.

00:22:40.060 --> 00:22:43.180
We'll see you next week when
I rope Jake into this.

00:22:43.180 --> 00:22:44.040
I know it will be fun.

00:22:44.040 --> 00:22:45.820
I've just got to teach him
not to swear on camera.

00:22:48.320 --> 00:22:50.400
PETE LEPAGE: Or we just need to
put him on a good 30-second

00:22:50.400 --> 00:22:53.480
delay with a bleep out button.

00:22:53.480 --> 00:22:54.830
PAUL KINLAN: Yeah.

00:22:54.830 --> 00:22:55.310
Cool.

00:22:55.310 --> 00:22:59.270
Well, thank you very much,
and we'll see next week.

00:22:59.270 --> 00:23:00.010
PETE LEPAGE: Bye, guys.

00:23:00.010 --> 00:23:01.260
PAUL KINLAN: Bye-bye.

