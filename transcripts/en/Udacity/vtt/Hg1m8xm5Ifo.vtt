WEBVTT
Kind: captions
Language: en

00:00:00.170 --> 00:00:03.350
With the no more tables technique,
below a certain viewport width,

00:00:03.350 --> 00:00:08.750
the table is collapsed and resembles
a long list, as opposed to a table data.

00:00:08.750 --> 00:00:11.560
The nice thing about this
technique is all of the data is

00:00:11.560 --> 00:00:14.780
visible no matter what
the size of the viewport is.

00:00:14.780 --> 00:00:17.570
Let's take a look with
the baseball score again.

00:00:17.570 --> 00:00:20.270
In a wider viewport,
everything looks good,

00:00:20.270 --> 00:00:24.560
but as the viewport shrinks,
the table collapses.

00:00:24.560 --> 00:00:30.050
Every column has essentially become its
own row with the table header beside it.

00:00:30.050 --> 00:00:34.370
Using a media query, I need to tell
the table that below a certain width,

00:00:34.370 --> 00:00:39.290
in this case 500 pixels, I don't
want it to act like a table anymore.

00:00:39.290 --> 00:00:44.690
Inside my media query, I'm going
to force all table, thead, tbody,

00:00:44.690 --> 00:00:49.450
th, tr and
td elements to render as display block.

00:00:50.540 --> 00:00:53.120
Next, I need to get rid
of the table header.

00:00:53.120 --> 00:00:57.470
I could set display none, but that would
cause accessibility problems for people

00:00:57.470 --> 00:01:01.630
using screen readers because the browser
won't tell them the column headers.

00:01:01.630 --> 00:01:06.280
Instead, I'm just going to position
the content way off screen.

00:01:06.280 --> 00:01:11.360
Since the table cells are now displayed
as full width block elements, I need to

00:01:11.360 --> 00:01:16.910
add some left padding and also set the
position on these elements to relative.

00:01:16.910 --> 00:01:20.630
To add the row labels, I'm going to
use the before pseudo selector and

00:01:20.630 --> 00:01:26.740
add td before, and inside, I'll set
the position to left: 6 pixels so

00:01:26.740 --> 00:01:29.180
that I get it positioned
in the right place.

00:01:29.180 --> 00:01:31.190
Now I need to add the content.

00:01:31.190 --> 00:01:34.940
I could put the labels in my CSS,
but that's icky and

00:01:34.940 --> 00:01:38.650
will mean that these styles
will only work for this table.

00:01:38.650 --> 00:01:42.579
Instead, I'll use
content: attr(data-th).

00:01:42.579 --> 00:01:47.960
That will then pull the values from
the data-th of each of the td elements.

00:01:47.960 --> 00:01:49.160
Here, let me show you.

00:01:49.160 --> 00:01:50.060
And there you have it.

00:01:50.060 --> 00:01:54.270
That data-th is used as the label for
each of the rows.

