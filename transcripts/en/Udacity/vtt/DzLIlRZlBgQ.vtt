WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.060
Let's go through these one at a time; now, given any graph, can we say that

00:00:03.060 --> 00:00:09.090
clever&lt;u&gt;vc will outperform our factor-2 approximation algorithm, and this is actually false.&lt;/u&gt;

00:00:09.090 --> 00:00:15.370
Well, it seems like it outperformed our factor-2 approximation algorithm in each case we tested it.

00:00:15.370 --> 00:00:20.030
In order to actually verify that it will outperform our other algorithm,

00:00:20.030 --> 00:00:25.670
will he either have to test it against every possible graph, which is somewhat impossible

00:00:25.670 --> 00:00:30.730
or we would have to give a mathematical proof that clever&lt;u&gt;vc will outperform&lt;/u&gt;

00:00:30.730 --> 00:00:34.290
our factor-2 approximation algorithm in every circumstance,

00:00:34.290 --> 00:00:37.510
and since we haven't done that, we can't actually say that this is true.

00:00:37.510 --> 00:00:43.650
We also can't say with certainty that clever&lt;u&gt;vc is a factor 1.75 approximation algorithm,&lt;/u&gt;

00:00:43.650 --> 00:00:46.620
and that's because well we can't see the source code at all.

00:00:46.620 --> 00:00:51.540
If we can't see the code, then we can run test and be more and more certain

00:00:51.540 --> 00:00:54.840
whether or not it's a factor 1.75 approximation algorithm,

00:00:54.840 --> 00:00:58.510
but we cannot be certain so we can't say that this is true.

00:00:58.510 --> 00:01:06.040
However, we can say with certainty that clever&lt;u&gt;vc is not a correct algorithm and why is that.&lt;/u&gt;

00:01:06.040 --> 00:01:10.780
Let's look back at our table here; now, the key thing to notice here is that

00:01:10.780 --> 00:01:16.000
the algorithm were comparing clever&lt;u&gt;vc against is a factor-2 approximation algorithm.&lt;/u&gt;

00:01:16.000 --> 00:01:20.350
That means that each of these numbers, each of these minimum vertex cover sizes,

00:01:20.350 --> 00:01:25.250
is at most twice the actual minimum vertex cover.

00:01:25.250 --> 00:01:27.320
So, let's think about what that means.

00:01:27.320 --> 00:01:32.330
That means that the minimum vertex cover for 10,000 vertices graph

00:01:32.330 --> 00:01:36.910
is actually at least 284, let's go ahead and round up here.

00:01:36.910 --> 00:01:45.010
Similarly, the minimum vertex cover for the 20,000 vertices graph must be at least 117.

00:01:45.010 --> 00:01:49.110
For the 30,000 vertices graph, the minimum vertex cover has to be

00:01:49.110 --> 00:01:53.110
at least 300, and this is the key right here.

00:01:53.110 --> 00:01:59.220
So, the absolute minimum vertex cover of this graph has to be at least 300

00:01:59.220 --> 00:02:03.070
but clever&lt;u&gt;vc is saying it found one that is only 295.&lt;/u&gt;

00:02:03.070 --> 00:02:05.130
So, that means that this is wrong.

00:02:05.130 --> 00:02:08.960
This cannot possibly be if this is a factor-2 approximation algorithm.

00:02:08.960 --> 00:02:12.280
So, either this isn't actually a factor-2 approximation algorithm,

00:02:12.280 --> 00:02:14.460
and let's say that we verify that it is,

00:02:14.460 --> 99:59:59.000
or this is not a correct algorithm for finding the minimum vertex cover.

