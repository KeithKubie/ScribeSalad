WEBVTT
Kind: captions
Language: en

00:00:00.400 --> 00:00:01.670
Before the model is created,

00:00:01.670 --> 00:00:04.830
we can use a config method to
configure how it gets set up.

00:00:04.830 --> 00:00:07.060
The config method takes a function.

00:00:07.060 --> 00:00:09.210
UI router includes
a lot of functionality.

00:00:09.210 --> 00:00:12.492
Two components will be using our
state provider and URL provider.

00:00:12.492 --> 00:00:15.905
We'll inject both of these
into the config function.

00:00:15.905 --> 00:00:19.135
Providers are like services, but
only providers can be used for

00:00:19.135 --> 00:00:20.635
a module configuration.

00:00:20.635 --> 00:00:24.105
We can now use state provider to set
up the different states of our app.

00:00:24.105 --> 00:00:26.755
Let's start out with the default
state and call it home.

00:00:26.755 --> 00:00:31.340
To add a state to our app,
we call .state, give the state a name.

00:00:31.340 --> 00:00:34.660
Again we're gonnause home, and
give it a configuration object.

00:00:34.660 --> 00:00:36.850
With the URL for the state.

00:00:36.850 --> 00:00:40.300
The template to use our app is
already using the default template.

00:00:40.300 --> 00:00:41.530
So we'll link to that.

00:00:41.530 --> 00:00:43.560
And the controller to load for
that template.

00:00:43.560 --> 00:00:46.280
Review state provider to
set up a state for the app.

00:00:46.280 --> 00:00:51.110
We need to use URL router provider
to load the home state by default.

00:00:51.110 --> 00:00:53.340
So the app state
management is all set up.

00:00:53.340 --> 00:00:54.490
But there's one last thing,

00:00:54.490 --> 00:00:57.630
we need to tell UIRouter where
to insert this template.

00:00:57.630 --> 00:01:00.380
We can do that with a directive UIView.

00:01:00.380 --> 00:01:03.920
We have access to this directive because
we've included the UIRouter module

00:01:03.920 --> 00:01:05.690
into our project.

00:01:05.690 --> 00:01:08.380
UI router is now handling
our app's state.

00:01:08.380 --> 00:01:10.760
Let's add a new state for
an individual menu item.

00:01:10.760 --> 00:01:12.060
Let's create an item state.

00:01:12.060 --> 00:01:15.200
We also need to create the template and
controller for this item.

00:01:15.200 --> 00:01:18.410
Pay attention to this right here,
the colon id.

00:01:18.410 --> 00:01:20.650
We can use dynamic
content in our routing.

00:01:20.650 --> 00:01:22.808
Let's quickly generate a template and
a controller for an item.

00:01:26.058 --> 00:01:30.920
I've also created a few JSON files with
more details about the menu items.

00:01:30.920 --> 00:01:34.150
When the URL is item slash some menu ID.

00:01:34.150 --> 00:01:37.365
The ID will be accessible in the either
controller by using the state

00:01:37.365 --> 00:01:38.750
param service.

00:01:38.750 --> 00:01:42.558
We'll also add in a food finder service,
so that we can retrieve the item.

00:01:42.558 --> 00:01:46.806
We'll use the get item function and
lookup the item by its ID.

00:01:46.806 --> 00:01:48.523
Then when it's returned the JSON file,

00:01:48.523 --> 00:01:51.245
we'll set it to
the item's data property.

00:01:51.245 --> 00:01:53.850
The get items function is
very similar to get menu.

00:01:53.850 --> 00:01:56.440
Except that it gets a single
item specified by the ID.

00:02:01.490 --> 00:02:04.260
Let's make the name a link
to that item's detail page.

00:02:05.570 --> 00:02:10.038
UI Router gives us the ui-sref
directive to switch between states.

00:02:10.038 --> 00:02:12.560
We want to switch to the item state and
pass along a value.

00:02:13.730 --> 00:02:17.350
The state expects an ID which
we'll set to the items ID.

00:02:17.350 --> 00:02:19.300
Now it's just filling out
the template for the item.

00:02:19.300 --> 00:02:22.910
Let's have it show the item's name,
the image of the menu item, and

00:02:22.910 --> 00:02:23.930
its rating and description.

00:02:24.938 --> 00:02:28.070
And now our app can be in the default
state with the menu showing, or

00:02:28.070 --> 00:02:29.750
it can be in an item state.

00:02:29.750 --> 00:02:30.620
How awesome is that?

