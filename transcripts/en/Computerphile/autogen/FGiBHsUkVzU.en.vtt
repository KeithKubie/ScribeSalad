WEBVTT
Kind: captions
Language: en

00:00:00.089 --> 00:00:01.629
We're going to talk about

00:00:01.629 --> 00:00:03.629
Can we compute with art?

00:00:03.909 --> 00:00:08.909
can paintings compute and it's it's a broader theme in terms of

00:00:09.340 --> 00:00:15.389
What are the links between physics and chemistry and biology and computing and indeed art?

00:00:17.980 --> 00:00:21.750
So I worked with somebody called Linda Jackson who's a local nottingham artist

00:00:21.750 --> 00:00:27.119
She'd started to play with something called acrylic pouring where basically you take different types of paint

00:00:27.130 --> 00:00:31.830
You put them down onto a canvas you let them mix and you let them dry and you end up with what I think

00:00:32.649 --> 00:00:37.229
Incredibly striking an incredibly beautiful patterns like this sort of foam

00:00:37.230 --> 00:00:38.710
like what we

00:00:38.710 --> 00:00:46.110
Scientifically called cellular networks where you can see these cells on different lens scales and right across the board in terms of different colors

00:00:46.110 --> 00:00:52.889
Etc. Those types of patterns are absolutely ubiquitous in nature right across very very large scale and scales

00:00:52.890 --> 00:00:53.680
in fact

00:00:53.680 --> 00:00:57.180
The large-scale structure the universe in terms of our galaxies are distributed

00:00:57.250 --> 00:01:00.359
best thought of his in terms of a cellular network or this type of

00:01:00.520 --> 00:01:05.369
Foam like structure all the way down to the really really really small and we're in nanoscience group

00:01:05.369 --> 00:01:07.369
So we're very very keen on the really really small

00:01:07.390 --> 00:01:13.439
We took a droplet of this which are nanoparticles five nanometers across

00:01:13.900 --> 00:01:18.809
Tiny tiny particles of gold drop them onto a surface and let the solvent

00:01:19.390 --> 00:01:20.979
evaporate

00:01:20.979 --> 00:01:24.508
Left us with patterns like this. So these are not the individual particles themselves

00:01:24.909 --> 00:01:30.239
This is what the particles do in terms of how they collect together and how they dry and you end up with these

00:01:31.000 --> 00:01:34.529
incredible cellular type patterns which are

00:01:35.680 --> 00:01:40.199
something like if you compare this with this in terms of the length scale, this is on a length scale about

00:01:41.320 --> 00:01:45.449
25,000 times smaller. This is a microscope emits an atomic force microscope image

00:01:45.450 --> 00:01:47.579
So you're sitting there as a computer file if you were going

00:01:47.579 --> 00:01:52.589
Okay, that's nice who's talking about science and he's talking about art. When's he gonna start talking about the computing?

00:01:52.689 --> 00:01:56.578
There are strong links here in terms of the physics and the chemistry of these patterns

00:01:56.579 --> 00:01:59.669
But the question is can you compute with curtains?

00:01:59.670 --> 00:02:06.449
can you compute with art the question here is not can we you know generate something that does much much better than

00:02:07.119 --> 00:02:12.148
Silicon technology CMOS technology in terms of the speed or the processing power, etc

00:02:12.150 --> 00:02:19.640
so it's about thinking about different main sets and it's a broader and I would say more philosophical question what is information and

00:02:20.130 --> 00:02:22.130
How do we process information?

00:02:22.470 --> 00:02:27.889
It's a lovely piece of art what sort of computational problem can a piece of art like that solve?

00:02:27.890 --> 00:02:29.890
I mean is this to do with colors?

00:02:30.390 --> 00:02:35.779
Not really to do with colors much more to do with patterns in that we could just take all strip all the colors from this

00:02:35.780 --> 00:02:39.979
And just make it black and white or even to a certain extent almost binary I said, but what's remarkable?

00:02:39.980 --> 00:02:44.210
Is that the physical process which is underlying the art here?

00:02:45.210 --> 00:02:47.389
Can be used to do a computation

00:02:47.820 --> 00:02:51.109
Let's say you've got a set of schools

00:02:51.600 --> 00:02:56.179
across a district or a county or indeed across the country and you

00:02:56.910 --> 00:02:59.479
Want to think about the catchment area for those skills?

00:02:59.480 --> 00:03:01.640
What's the best way of?

00:03:02.010 --> 00:03:09.409
Dividing up the land in terms of catchment areas the fairest way and to do that we use an approach from computational geometry

00:03:09.600 --> 00:03:11.960
called the Verona tessellation and

00:03:13.320 --> 00:03:15.320
so to compute that which you can

00:03:15.840 --> 00:03:22.670
Compute pretty straightforwardly, in fact, a lot of languages MATLAB included basically have the command built-in

00:03:22.670 --> 00:03:25.369
So there's a distribution of points. It's fairly ordered

00:03:25.370 --> 00:03:32.510
What we want to do is for each one of these points on here. We want to find the region that is

00:03:34.020 --> 00:03:38.689
Closest to that particular point basically we want to divide this up as fairly as possible

00:03:38.820 --> 00:03:45.859
So mathematically this is actually an geometrically is actually straightforward problem. So what we do is we connect up

00:03:47.370 --> 00:03:52.880
One of the points to all its nearest neighbors and then what we do is we take the

00:03:53.400 --> 00:03:56.450
Perpendicular bisectors, let's do that. So ones there

00:03:57.630 --> 00:04:02.299
Ones here. So we're bisecting these lines and ones there

00:04:03.239 --> 00:04:05.779
Ones there if you'll excuse the wobbly drawing

00:04:05.820 --> 00:04:11.839
So what we have is that this area or the points within here are the closest to that point? Okay?

00:04:13.500 --> 00:04:17.359
This is like numberphile stuff come on, it does feel like numberphile, but we're going to do a computation

00:04:17.359 --> 00:04:20.329
I promise at the end and we're going to do a physical computation

00:04:20.330 --> 00:04:24.109
I promise what you'd end up with then as you can see is just a set of hexagons

00:04:24.110 --> 00:04:26.780
So that was an example of a very ordered

00:04:26.990 --> 00:04:30.319
Let's take a less ordered set and a somewhat more

00:04:30.449 --> 00:04:36.709
Natural set perhaps this is actually from a paper by Meredith P Richards and what she did was look at

00:04:37.199 --> 00:04:39.649
distribution of schools in a district or

00:04:40.770 --> 00:04:42.120
neighborhood in

00:04:42.120 --> 00:04:44.120
Washington, I believe if I remember correctly

00:04:44.190 --> 00:04:49.699
This is what it actually looks like the black dots are where the schools are and the question then is how would you divide up?

00:04:50.130 --> 00:04:51.930
this area

00:04:51.930 --> 00:04:54.739
to be the fairest in terms of the

00:04:55.440 --> 00:04:59.839
Neighborhoods or the areas of the district that is served by each school

00:04:59.840 --> 00:05:04.880
The algorithm is exactly as we've just done for that ordered set is you connected up

00:05:04.880 --> 00:05:07.399
You connect a given point to its nearest neighbors

00:05:07.530 --> 00:05:11.899
You take the perpendicular bisectors and you divide up the plane that way that's the fairest way of

00:05:12.090 --> 00:05:15.979
Dividing up the land as it where I found being kind of picky here

00:05:15.990 --> 00:05:19.880
I'm gonna suggest that perhaps some of those are more densely populated than others

00:05:19.880 --> 00:05:24.079
Is that too complicated for this? So that's a really good point Sean

00:05:24.120 --> 00:05:24.979
So yes

00:05:24.979 --> 00:05:32.479
We're making a number of different assumptions here or assuming that the density of the population is the same right across the board

00:05:33.270 --> 00:05:39.349
Obviously there are complications in terms of even transport links etcetera. There's a wide range of different contributions

00:05:39.349 --> 00:05:43.669
we're going to do what all good physicists do even computational physicists and

00:05:44.969 --> 00:05:48.049
approximate cows a large sphere PI's around three

00:05:49.320 --> 00:05:55.039
Density population density is even across the board. We can set up a computer program to solve this. It's relatively straightforward

00:05:56.219 --> 00:05:57.900
Let's take an example

00:05:57.900 --> 00:06:03.560
Here's Nottingham. That's probably - higher density of points for schools. But I don't know. Let's say it's coffee shops

00:06:03.710 --> 00:06:09.199
Well, what wanted to do is to try and work out was your closest coffee shop, which is the closest coffee shop to you

00:06:09.199 --> 00:06:11.199
so the way to solve that is

00:06:11.400 --> 00:06:14.239
Actually to do a Verona tessellation and so here's our points

00:06:14.240 --> 00:06:20.750
Just taking away the map and we can calculate the Verona tessellation and it looks like that so again

00:06:20.789 --> 00:06:27.619
It's not an ordered distribution of points. Therefore. We see a range of different polygons ranging from adult

00:06:27.620 --> 00:06:29.690
See if we can see a triangle in there. I don't think so

00:06:29.690 --> 00:06:33.199
I think the smallest is four-sided maybe up to seven or eight sided cells

00:06:35.339 --> 00:06:40.339
Okay, so where is the physical computation well we can do it on a computer

00:06:41.129 --> 00:06:44.119
or what we can do is we can

00:06:45.780 --> 00:06:47.839
Take this as our computer

00:06:48.870 --> 00:06:54.859
This is now a computer. This is a physical computer. And what we're going to do is going to take a droplet of these particles

00:06:55.770 --> 00:06:58.969
Put it on a surface let the solvent evaporate

00:06:59.729 --> 00:07:01.729
And what's going to happen? Is that those?

00:07:01.919 --> 00:07:08.239
Particles are going to be carried by the tide of the solvent and get pushed together and they're going to create our own

00:07:08.610 --> 00:07:13.129
Verona tessellation, let me show you exactly what I mean with a simulation

00:07:13.129 --> 00:07:18.559
So the yellow dots here are the nanoparticles one question you might ask is. Well, I can't if I hold it up

00:07:18.560 --> 00:07:20.989
oh, they're definitely nanoparticles and there are most definitely

00:07:21.569 --> 00:07:25.489
Nanoparticles in it. In fact, we did a sixty simplest video on this some time ago. You might ask

00:07:25.490 --> 00:07:29.779
Why does it look red isn't gold gold? Why does this look right?

00:07:29.779 --> 00:07:34.669
There's a lot of very interesting physics as to why this is right. The yellow dots are the nanoparticles

00:07:34.669 --> 00:07:39.948
The white is actually the solvent. So that's the liquid in which the particles are dissolved. What's going to happen?

00:07:39.949 --> 00:07:43.549
Is that the dark bits meet you're about to see you can already see some?

00:07:44.069 --> 00:07:50.149
Black patches that's where the solvent is evaporating. And so what's going to happen is when we run this

00:07:50.969 --> 00:07:56.959
These holes are going to open up as the solvent evaporates the nanoparticles love to be wet by the solvent

00:07:56.960 --> 00:08:03.259
They looked at to be dissolved in the solvent so they will track back as a solvent dee wets as a solvent

00:08:03.750 --> 00:08:09.379
Evaporates the remaining solvent left on the surface will spread back like this carrying the nanoparticles with it

00:08:09.719 --> 00:08:13.609
What we'll end up with in the end is a Voronoi tessellation. So let me run this

00:08:14.189 --> 00:08:16.189
So you see these opening up?

00:08:17.520 --> 00:08:22.490
Carrying the nanoparticles with them and you can already see the density and they collide

00:08:23.430 --> 00:08:27.049
And so what's happening here is that you can see as these holes spread out

00:08:27.050 --> 00:08:34.430
they force the nanoparticles together and ultimately you end up with something that looks like that those tessellations are absolutely everywhere just

00:08:34.680 --> 00:08:37.669
Earlier this year. There was a scientific American article

00:08:38.729 --> 00:08:40.669
On this is not a beautiful image

00:08:40.669 --> 00:08:45.859
This is a dragonfly's wings and you see this same type of tessellation everywhere near to the large-scale structure

00:08:45.860 --> 00:08:49.099
the universe giant's causway announced from this is the

00:08:49.649 --> 00:08:52.249
cross-section through a cork from a wine bottle and

00:08:53.350 --> 00:09:01.079
The point I want to try and make for computerphile audience is in each case. These are effectively physical computers you might argue about the

00:09:01.689 --> 00:09:06.689
the universe what the large-scale structure universe, but in terms of the

00:09:07.629 --> 00:09:11.459
Physical and chemical processes that have been weakened exploited to do a computation

00:09:12.759 --> 00:09:20.068
Which gets me back to this? This was a distribution of coffee shops. Here's our points for our coffee shops. Here's a Verona tessellation

00:09:20.680 --> 00:09:22.680
lots of calculated by the computer

00:09:23.889 --> 00:09:29.609
However, this is what happens when we take a droplet of our particles put them on a surface and we look at the final stage

00:09:29.889 --> 00:09:37.258
And if we overlay this on this the physics has done the computation force. It's not cared about

00:09:37.259 --> 00:09:40.709
How do I join up the nearest neighbors and how to get the perpendicular bisectors?

00:09:40.709 --> 00:09:45.508
It's fallen out of the physics and you might think hang on there seems to be a bit of a trick there

00:09:45.819 --> 00:09:49.438
maybe there is but it's all about thinking about computation and

00:09:50.079 --> 00:09:53.279
Information processing in different ways. This is almost

00:09:54.129 --> 00:09:57.929
This is computation not by algorithm but computation by analogy

00:09:58.269 --> 00:10:03.269
By trying to look at what's happening in a physical system and say well actually can we exploit that?

00:10:04.149 --> 00:10:08.999
To do a computation for us. There must have been some kind of control in this there

00:10:09.000 --> 00:10:12.539
You must have decided where those have operational right? So that's in this case

00:10:12.540 --> 00:10:17.129
I've cheated a little bit shown reason the points were distributed like this is that I work backwards from the image

00:10:17.129 --> 00:10:22.049
So cheated a little bit, but could we actually program this system? How would we program the system?

00:10:22.050 --> 00:10:24.839
Well, what we'd have to do is control where the evaporation happens

00:10:25.360 --> 00:10:26.370
Can we do that?

00:10:26.370 --> 00:10:26.759
Yes

00:10:26.759 --> 00:10:32.339
We can take our surface and what we can do is we can oxidize it using the tip of something called a scanning probe

00:10:32.559 --> 00:10:34.649
Microscope in this case. Those lines were about a hundred

00:10:35.259 --> 00:10:37.709
Nanometers wide something like are very very small lines

00:10:38.620 --> 00:10:42.209
Obviously you can some some will recognize the logo at least

00:10:42.910 --> 00:10:48.480
And what we can do is we can control how the the particles this is the real experiment

00:10:48.480 --> 00:10:49.480
This is the simulation

00:10:49.480 --> 00:10:56.849
we can control how the solvent evaporates from the surface by patterning the surface and so that's a couple examples and we can

00:10:57.009 --> 00:11:01.619
put a lot of different patterns down there the next step in this is can we actually

00:11:02.230 --> 00:11:08.849
Program the Verona tessellation. Can we put little points two four the evaporation of those points and

00:11:09.459 --> 00:11:10.660
calculate the

00:11:10.660 --> 00:11:12.660
tessellation that's something were

00:11:12.879 --> 00:11:14.879
Actually is going to be stimulated by this video

00:11:14.920 --> 00:11:22.110
can we part on a surface and drive the formation of the Verona tessellation and can we do a computation that way and

00:11:22.480 --> 00:11:28.800
Then the values of those array elements can be whatever you want, but they might be for example

00:11:28.930 --> 00:11:36.599
How much you spent on beer and pizza and coffee and so you could write a very simple program that would let simply say

