WEBVTT
Kind: captions
Language: en

00:00:03.340 --> 00:00:04.630
WAYNE PIEKARSKI: Hi everyone.

00:00:04.630 --> 00:00:07.600
Welcome to this session
on Android Auto Media

00:00:07.600 --> 00:00:09.037
and Messaging Support.

00:00:09.037 --> 00:00:11.370
So you would have heard in
the keynote today from Daniel

00:00:11.370 --> 00:00:13.659
[INAUDIBLE] that-- he was
talking about Android Auto

00:00:13.659 --> 00:00:14.950
and all the features it offers.

00:00:14.950 --> 00:00:16.480
So today what we're
going to do is

00:00:16.480 --> 00:00:17.855
we're going to
talk about how you

00:00:17.855 --> 00:00:19.806
can go and take
those same features

00:00:19.806 --> 00:00:20.930
and put them into your app.

00:00:20.930 --> 00:00:21.880
And it's really easy.

00:00:21.880 --> 00:00:24.386
Typically, in most cases, it's
a couple extra lines of code,

00:00:24.386 --> 00:00:25.510
and then you're good to go.

00:00:25.510 --> 00:00:27.270
So that's the nice
thing about Auto

00:00:27.270 --> 00:00:29.170
is that you don't need
to rewrite your app.

00:00:29.170 --> 00:00:33.490
So it takes advantage of your
existing Android knowledge,

00:00:33.490 --> 00:00:36.690
but you're just adding small
extensions to your code.

00:00:36.690 --> 00:00:39.230
So let's quickly talk about
how Android Auto works.

00:00:39.230 --> 00:00:42.120
Remember, Android Auto runs
completely on your phone.

00:00:42.120 --> 00:00:44.890
So in this case here you
can see I've got a phone,

00:00:44.890 --> 00:00:47.980
and then I've got a Pioneer head
unit which is in a, sort of,

00:00:47.980 --> 00:00:51.510
fake car simulator here,
and there's a USB cable

00:00:51.510 --> 00:00:53.024
that connects the two together.

00:00:53.024 --> 00:00:54.440
Now it's very
important to realize

00:00:54.440 --> 00:00:56.750
that the user plugs the
phone into their car,

00:00:56.750 --> 00:00:58.690
but everything
runs on the phone.

00:00:58.690 --> 00:01:00.160
So the graphics
rendering happens

00:01:00.160 --> 00:01:03.190
on the phone, all the code
that you run, everything

00:01:03.190 --> 00:01:04.569
is on the phone itself.

00:01:04.569 --> 00:01:08.020
The head unit is just a
display that shows pixels on it

00:01:08.020 --> 00:01:09.470
and plays audio.

00:01:09.470 --> 00:01:11.670
So all the smarts
is in the phone.

00:01:11.670 --> 00:01:14.544
Because if you think about it,
Android's been out since 2008,

00:01:14.544 --> 00:01:16.210
and that's still less
than 10 years ago.

00:01:16.210 --> 00:01:18.880
Now, think how much stuff
has changed in 10 years.

00:01:18.880 --> 00:01:20.510
People typically keep
their cars around

00:01:20.510 --> 00:01:24.410
for 10, 15, 20 years-- we want
this stuff to have a long road

00:01:24.410 --> 00:01:26.310
map, and we can't keep
pushing updates out

00:01:26.310 --> 00:01:27.500
and things like that.

00:01:27.500 --> 00:01:31.670
So this way the head unit can
have a fixed, simple protocol.

00:01:31.670 --> 00:01:34.900
Everything runs in the phone
and as the user upgrades

00:01:34.900 --> 00:01:36.940
their phone, adds more
CPU processing and things

00:01:36.940 --> 00:01:39.860
like that, Android Auto
can move along with that.

00:01:39.860 --> 00:01:41.190
So that's kind of how it works.

00:01:41.190 --> 00:01:43.410
So with that in
mind, now we're going

00:01:43.410 --> 00:01:46.740
to talk about what it
means for your app.

00:01:46.740 --> 00:01:48.920
So the big win for
Android Auto is

00:01:48.920 --> 00:01:51.310
that it uses a templated
user interface.

00:01:51.310 --> 00:01:54.297
So you can see here
we've got Maps running,

00:01:54.297 --> 00:01:56.380
but the main thing we're
going to talk about today

00:01:56.380 --> 00:01:57.635
is music and media.

00:01:57.635 --> 00:01:59.010
And we're going
to talk about how

00:01:59.010 --> 00:02:00.860
your app can fit within those.

00:02:00.860 --> 00:02:04.270
Now, the thing with
putting displays in a car

00:02:04.270 --> 00:02:06.640
is there's a lot of
legal issues around it.

00:02:06.640 --> 00:02:09.000
There's a lot of safety
issues, driving distraction--

00:02:09.000 --> 00:02:11.541
you want to make sure the user
is focused on the road and not

00:02:11.541 --> 00:02:12.520
on their screens.

00:02:12.520 --> 00:02:16.400
And in order to get
an app published

00:02:16.400 --> 00:02:18.625
many years ago in
other automakers' cars,

00:02:18.625 --> 00:02:20.000
you had to spend
a lot of money--

00:02:20.000 --> 00:02:22.010
and we're talking tens
of thousands of dollars.

00:02:22.010 --> 00:02:23.301
You had to spend a lot of time.

00:02:23.301 --> 00:02:25.230
You had to get them
certified and tested.

00:02:25.230 --> 00:02:26.230
It's really expensive.

00:02:26.230 --> 00:02:29.050
It can take years, or maybe
never, to get your app out.

00:02:29.050 --> 00:02:31.200
And so what we did
with Auto is we

00:02:31.200 --> 00:02:33.420
built a set of
templates for music

00:02:33.420 --> 00:02:36.410
and messaging that we
can test, and then you're

00:02:36.410 --> 00:02:40.030
allowed to plug text into it and
plug images in, and so forth.

00:02:40.030 --> 00:02:43.220
But the templates have been
pre-tested and pre-approved,

00:02:43.220 --> 00:02:46.280
which means that you can publish
your app on the Play Store,

00:02:46.280 --> 00:02:49.200
and literally within hours the
app is now in someone's phone,

00:02:49.200 --> 00:02:50.500
ready to use in a car.

00:02:50.500 --> 00:02:53.310
So we've taken all of these
long deadlines and huge costs,

00:02:53.310 --> 00:02:55.970
and we've basically made them
nothing so that you can get

00:02:55.970 --> 00:02:57.290
your apps out really quickly.

00:02:57.290 --> 00:02:59.470
Now, there are some restrictions
because they're templates.

00:02:59.470 --> 00:02:59.770
They're limited.

00:02:59.770 --> 00:03:01.420
You can't play video
in the background,

00:03:01.420 --> 00:03:02.669
you can't do things like that.

00:03:02.669 --> 00:03:03.820
That would be dangerous.

00:03:03.820 --> 00:03:07.140
And so we've given you this
platform that really gives you

00:03:07.140 --> 00:03:10.610
a quick path to getting your
apps into people's automobiles.

00:03:10.610 --> 00:03:13.500
So remember, the
UI of Android Auto

00:03:13.500 --> 00:03:15.600
is based on speech
recognition, and we're

00:03:15.600 --> 00:03:18.440
going to show that
in a sec, so that way

00:03:18.440 --> 00:03:21.140
you can keep your hands on the
wheel and the eyes on the road.

00:03:21.140 --> 00:03:24.840
So with that in mind, what
does this all look like?

00:03:24.840 --> 00:03:26.910
Let's talk about
messaging first.

00:03:26.910 --> 00:03:30.010
So there's countless
accidents every year

00:03:30.010 --> 00:03:31.667
caused by people
being distracted.

00:03:31.667 --> 00:03:34.250
They're texting in their cars,
they're doing things like that.

00:03:34.250 --> 00:03:37.230
So with Android Auto, we're
taking that and we're making it

00:03:37.230 --> 00:03:38.990
speech enabled,
and we're providing

00:03:38.990 --> 00:03:43.180
an API that allows you to hook
in and enable the same auto

00:03:43.180 --> 00:03:45.410
support in your messaging app.

00:03:45.410 --> 00:03:48.670
So Android Auto right now
supports SMS and Hangouts,

00:03:48.670 --> 00:03:51.170
and now we're going to show you
how to extend your app, too.

00:03:51.170 --> 00:03:52.850
So you can see in
this screenshot here,

00:03:52.850 --> 00:03:55.780
when a message comes in you can
see it pops down on the screen,

00:03:55.780 --> 00:03:58.340
and then it gets
played back as audio.

00:03:58.340 --> 00:04:01.210
So now what we'll do is I'll
show you a quick little demo.

00:04:01.210 --> 00:04:03.860
So you can see here I've
got my Pioneer unit,

00:04:03.860 --> 00:04:07.201
and on the screen here it's
the generic UI of whatever I'm

00:04:07.201 --> 00:04:07.700
doing.

00:04:07.700 --> 00:04:11.050
But I can flip between
Maps or whatever I want.

00:04:11.050 --> 00:04:13.410
But now, if I use
my little testing

00:04:13.410 --> 00:04:18.790
app here to generate a fake
message-- so on the phone

00:04:18.790 --> 00:04:22.160
here we have a messaging
sample, and this sample's

00:04:22.160 --> 00:04:23.570
available in Android Studio.

00:04:23.570 --> 00:04:24.760
So what I'm going to
do is I'm going to send

00:04:24.760 --> 00:04:26.137
one fake message to myself.

00:04:28.720 --> 00:04:29.570
So it appears.

00:04:29.570 --> 00:04:31.008
Click on it.

00:04:31.008 --> 00:04:33.478
Here's the message--
"can you give me call?"

00:04:33.478 --> 00:04:36.450
You can press the voice
button and say, "reply."

00:04:36.450 --> 00:04:39.330
So then you can press it.

00:04:39.330 --> 00:04:43.460
So you can see there that the
text message was generated

00:04:43.460 --> 00:04:46.260
on the phone, and then it
appeared on the Auto head unit.

00:04:46.260 --> 00:04:47.795
And so everything's
done for you,

00:04:47.795 --> 00:04:49.170
you don't have to
worry about it.

00:04:49.170 --> 00:04:50.640
It's all based on notifications.

00:04:50.640 --> 00:04:52.223
So now I'm going to
show you how to go

00:04:52.223 --> 00:04:54.970
about adding that support
to your messaging app that

00:04:54.970 --> 00:04:56.500
does notifications.

00:04:56.500 --> 00:05:00.860
So the first step is that you
have to change your Android

00:05:00.860 --> 00:05:04.710
Manifest file so that it
has a section in there

00:05:04.710 --> 00:05:05.774
for Android Auto.

00:05:05.774 --> 00:05:07.440
So you can see we've
got a section there

00:05:07.440 --> 00:05:10.710
that says we're going to
support Android.gms.car.

00:05:10.710 --> 00:05:13.400
We add this
automotive_app_desc, and then we

00:05:13.400 --> 00:05:16.190
create an XML file called
automotive_app_desc

00:05:16.190 --> 00:05:18.830
that defines the
type of app we have.

00:05:18.830 --> 00:05:20.900
And we're doing a
notification-style app

00:05:20.900 --> 00:05:22.140
so you got to put that in.

00:05:22.140 --> 00:05:24.910
And once you put that in
your app is now enabled,

00:05:24.910 --> 00:05:27.600
and the Android Auto app
that runs on the phone

00:05:27.600 --> 00:05:28.530
now can see your app.

00:05:28.530 --> 00:05:32.740
It goes, OK, I know to deal
with your notifications.

00:05:32.740 --> 00:05:35.570
So the next step.

00:05:35.570 --> 00:05:37.630
If you're writing a
messaging app right now,

00:05:37.630 --> 00:05:39.480
you're already
generating notifications

00:05:39.480 --> 00:05:40.830
whenever a message comes in.

00:05:40.830 --> 00:05:44.680
So a message comes in, you use
NotificationCompat.Builder,

00:05:44.680 --> 00:05:47.760
and you credit notification with
an icon, some text, a title,

00:05:47.760 --> 00:05:48.760
and so forth.

00:05:48.760 --> 00:05:50.840
So this is the code
that you already have,

00:05:50.840 --> 00:05:54.320
and every sample for messaging
and every notification sample

00:05:54.320 --> 00:05:57.330
we have has this
basic structure.

00:05:57.330 --> 00:06:01.320
The trick to adding Auto
support is you call .extend,

00:06:01.320 --> 00:06:03.890
and then you create
a CarExtender object,

00:06:03.890 --> 00:06:07.410
and you then add a few
extra method calls on that.

00:06:07.410 --> 00:06:10.750
And the key thing here is you
call setUnreadConersation,

00:06:10.750 --> 00:06:12.780
and you pass an
unreadConvBuilder in,

00:06:12.780 --> 00:06:14.670
which we're going to
do on the next slide.

00:06:14.670 --> 00:06:16.390
So that's the first step.

00:06:16.390 --> 00:06:20.200
So we've added this line called
extend with the CarExtender,

00:06:20.200 --> 00:06:24.350
and then finally, here is
the unreadConvBuilder object.

00:06:24.350 --> 00:06:28.940
So you can see here, we call
newUnreadConversation.Builder

00:06:28.940 --> 00:06:31.540
and we pass in a
series of fields.

00:06:31.540 --> 00:06:33.995
So these are fields that are
specific to Android Auto,

00:06:33.995 --> 00:06:35.370
and you're going
to put in things

00:06:35.370 --> 00:06:38.250
like the names of the person
who sent the message, the time

00:06:38.250 --> 00:06:41.680
stamp for it, and that is
used to show it on the screen

00:06:41.680 --> 00:06:44.060
and so it can keep track of
when the message arrived.

00:06:44.060 --> 00:06:47.580
And then also we have two
intents that we declare here.

00:06:47.580 --> 00:06:52.040
The readPendingIntent is
called by Android Auto

00:06:52.040 --> 00:06:55.450
when your message has been
received on the head unit.

00:06:55.450 --> 00:06:58.290
So when the person hears
the audio and goes,

00:06:58.290 --> 00:07:00.710
oh OK, I've heard
it, that intent

00:07:00.710 --> 00:07:03.194
is called to tell your app
hey, the message was read.

00:07:03.194 --> 00:07:05.110
And that's useful if
you're in a messaging app

00:07:05.110 --> 00:07:06.780
because you can then
change an indicator to say,

00:07:06.780 --> 00:07:08.590
yeah, the message
was read correctly.

00:07:08.590 --> 00:07:10.490
The next thing is you
set the reply action,

00:07:10.490 --> 00:07:15.820
and this intent is called
when we've spoken a text

00:07:15.820 --> 00:07:19.220
reply into the head unit-- hi,
I'm running 5 minutes late--

00:07:19.220 --> 00:07:20.820
and it then sends the text.

00:07:20.820 --> 00:07:22.940
That intent is called,
and it actually

00:07:22.940 --> 00:07:25.630
gives you the string of
the text that was spoken.

00:07:25.630 --> 00:07:27.870
So your app doesn't need
to think about any speech

00:07:27.870 --> 00:07:30.490
recognition, it doesn't need
to focus on speech playback.

00:07:30.490 --> 00:07:32.760
All it needs to do is
provide two intents,

00:07:32.760 --> 00:07:35.370
and they're called, and
you get some strings

00:07:35.370 --> 00:07:38.809
that you can then
pass on to your code

00:07:38.809 --> 00:07:39.850
or whatever you're doing.

00:07:39.850 --> 00:07:41.560
So it's really simple.

00:07:41.560 --> 00:07:43.910
With just these two
little snippets of code

00:07:43.910 --> 00:07:46.600
you can add messaging support
to your app pretty quickly.

00:07:46.600 --> 00:07:49.390
And so in Android
Studio, there is a sample

00:07:49.390 --> 00:07:52.000
called messaging sample
that is the one I just

00:07:52.000 --> 00:07:52.930
used on the phone.

00:07:52.930 --> 00:07:55.696
You can use that to test out
this kind of functionality,

00:07:55.696 --> 00:07:57.320
and it shows you how
to do it, and then

00:07:57.320 --> 00:07:59.710
you can see how to retrofit
it into your own app.

00:07:59.710 --> 00:08:01.630
So that's it.

00:08:01.630 --> 00:08:06.630
So the next important part of
Android Auto is media playback.

00:08:06.630 --> 00:08:09.360
And so here we've got the
Google Play Music app,

00:08:09.360 --> 00:08:11.480
and you can see here
on the little demo

00:08:11.480 --> 00:08:16.710
we can go to the
media selector and we

00:08:16.710 --> 00:08:17.860
can pick Google Play Music.

00:08:17.860 --> 00:08:21.430
So this is an app that's
running on my phone.

00:08:21.430 --> 00:08:23.490
Now, what I'm going
to do is I'm going

00:08:23.490 --> 00:08:26.240
to show you how to build
your own music sample,

00:08:26.240 --> 00:08:29.750
and there is a sample called
Universal Music Player, which

00:08:29.750 --> 00:08:31.480
is also available
in Android Studio.

00:08:31.480 --> 00:08:35.490
This is a really nice
sample because it shows you

00:08:35.490 --> 00:08:37.570
how to build a
complete media app.

00:08:37.570 --> 00:08:41.140
So it shows you how to stream
music from a server somewhere,

00:08:41.140 --> 00:08:45.410
and it has a presentation
display for Android Auto,

00:08:45.410 --> 00:08:47.320
but it also works on Android TV.

00:08:47.320 --> 00:08:49.404
It also does Chromecast,
and it does a whole bunch

00:08:49.404 --> 00:08:50.861
of different stuff
and it shows you

00:08:50.861 --> 00:08:52.600
how to fit all these
pieces in together.

00:08:52.600 --> 00:08:54.890
I actually used it to make my
own media player for my music

00:08:54.890 --> 00:08:55.560
that I keep at home.

00:08:55.560 --> 00:08:57.620
It's a really great sample
to get started with,

00:08:57.620 --> 00:08:59.578
and it's sort of a best
practice of how to make

00:08:59.578 --> 00:09:00.980
a really nice music player.

00:09:00.980 --> 00:09:03.110
So that's definitely
a great sample to do.

00:09:03.110 --> 00:09:06.730
So now what I'll do is I'll just
show you what it looks like.

00:09:06.730 --> 00:09:10.300
So you've selected Universal
Media Player from here.

00:09:10.300 --> 00:09:12.846
You then go pick from genres.

00:09:12.846 --> 00:09:17.540
We'll just pick something
at the top-- "Awakening."

00:09:17.540 --> 00:09:20.560
Streaming if off the web,
music starts playing out.

00:09:20.560 --> 00:09:26.396
You can pick next
track, next song plays.

00:09:26.396 --> 00:09:29.550
So this is really easy,
and if we're in a real car,

00:09:29.550 --> 00:09:31.000
we'd have steering
wheel controls,

00:09:31.000 --> 00:09:33.030
it would also work on
these buttons, as well.

00:09:33.030 --> 00:09:35.610
But the point is I'm not
touching a phone here.

00:09:35.610 --> 00:09:39.100
I'm touching just the head
unit in my car, steering wheel

00:09:39.100 --> 00:09:40.274
controls, as well.

00:09:40.274 --> 00:09:42.190
We're totally not touching
the phone, as well,

00:09:42.190 --> 00:09:44.530
which makes it really
good for driving,

00:09:44.530 --> 00:09:47.140
and it's a really nice
user interface for that.

00:09:47.140 --> 00:09:48.609
So that's the music app.

00:09:48.609 --> 00:09:50.900
Now we're going to go through
the nuts and bolts of how

00:09:50.900 --> 00:09:53.424
one goes about getting your
music app ready for talking

00:09:53.424 --> 00:09:54.090
to Android Auto.

00:09:56.860 --> 00:09:59.820
So here's how the music app kind
of fits into the whole thing.

00:09:59.820 --> 00:10:05.580
So you've got Android Auto,
the display visible in the car,

00:10:05.580 --> 00:10:07.200
but everything in
Android Auto is

00:10:07.200 --> 00:10:08.880
done by the Android Auto app.

00:10:08.880 --> 00:10:10.590
So this app is
provided by Google.

00:10:10.590 --> 00:10:11.532
It runs on your phone.

00:10:11.532 --> 00:10:13.990
This is what draws the graphics
and has the templates in it

00:10:13.990 --> 00:10:15.540
and things like that.

00:10:15.540 --> 00:10:18.255
Now, if you look in
the UI of the car,

00:10:18.255 --> 00:10:20.130
there is this display
that we just showed you

00:10:20.130 --> 00:10:21.430
where we picked the song from.

00:10:21.430 --> 00:10:23.870
So that's drawn by
the Android Auto app,

00:10:23.870 --> 00:10:26.390
but it needs to
get the information

00:10:26.390 --> 00:10:28.300
to show to the user.

00:10:28.300 --> 00:10:29.930
So it needs to somehow
talk to your app

00:10:29.930 --> 00:10:32.200
to query it and get the
music library out of it.

00:10:32.200 --> 00:10:34.760
So what it does is
it talks to your app.

00:10:34.760 --> 00:10:36.980
So this is my audio app here.

00:10:36.980 --> 00:10:39.190
It talks to a media
browser service

00:10:39.190 --> 00:10:41.150
that you define in your app.

00:10:41.150 --> 00:10:45.520
And you have a tree structure
of music that you have,

00:10:45.520 --> 00:10:49.360
so you can have folders and
you can have music files in it.

00:10:49.360 --> 00:10:52.040
And there is an API which I'll
talk about in the sec which

00:10:52.040 --> 00:10:54.250
allows you to communicate
this tree structure back

00:10:54.250 --> 00:10:56.210
to the Android Auto app.

00:10:56.210 --> 00:10:58.680
And once it's queried
your database of music,

00:10:58.680 --> 00:11:00.510
it can then present this UI.

00:11:00.510 --> 00:11:03.220
And then once that's done,
the user can pick a song,

00:11:03.220 --> 00:11:04.690
and then that
information is then

00:11:04.690 --> 00:11:08.370
sent back and forth between
Android Auto app and your app

00:11:08.370 --> 00:11:08.870
here.

00:11:08.870 --> 00:11:12.797
So there's this media session
API which the Android Auto

00:11:12.797 --> 00:11:15.380
app can make calls into your app
that says, hey, the user just

00:11:15.380 --> 00:11:16.650
picked song number 52.

00:11:16.650 --> 00:11:17.420
Start playing it.

00:11:17.420 --> 00:11:19.090
And then you start
playing the song.

00:11:19.090 --> 00:11:21.450
And then also, when you press
controls on the steering

00:11:21.450 --> 00:11:23.190
wheel-- next track,
previous track--

00:11:23.190 --> 00:11:25.379
those are all sent via
these callbacks, as well.

00:11:25.379 --> 00:11:27.420
So we're going to go
through the details of that.

00:11:27.420 --> 00:11:32.700
And so this display here, all
those buttons, the events,

00:11:32.700 --> 00:11:33.630
are sent to your app.

00:11:33.630 --> 00:11:35.330
And also, your app
has the ability

00:11:35.330 --> 00:11:37.796
to send information
back to say things like,

00:11:37.796 --> 00:11:39.420
hey, I know this
song's 4 minutes long,

00:11:39.420 --> 00:11:41.360
and we're currently
50% of the way through.

00:11:41.360 --> 00:11:43.130
You can update the
little progress bar.

00:11:43.130 --> 00:11:45.510
You have the ability to
set the title of the song,

00:11:45.510 --> 00:11:47.750
and also set the background
image using metadata.

00:11:47.750 --> 00:11:50.520
So there's this back and
forth between the Android Auto

00:11:50.520 --> 00:11:52.505
app and your app,
but the point is

00:11:52.505 --> 00:11:54.730
is your app just has to
provide that information,

00:11:54.730 --> 00:11:58.110
Android Auto takes care
of everything else.

00:11:58.110 --> 00:12:04.230
So when we introduced
Android Auto,

00:12:04.230 --> 00:12:07.260
we also introduced it during
the time of Lollipop, as well.

00:12:07.260 --> 00:12:10.020
So in Lollipop there was a
whole new media framework

00:12:10.020 --> 00:12:13.230
that was added that was built
for supporting Android Auto,

00:12:13.230 --> 00:12:18.060
but also for supporting other
media interfaces, as well.

00:12:18.060 --> 00:12:21.870
And so some of the classes were
MediaSession, MediaController,

00:12:21.870 --> 00:12:23.290
that's what it's
built up around.

00:12:23.290 --> 00:12:25.280
Now, before Lollipop,
everything was

00:12:25.280 --> 00:12:27.260
based on RemoteControlClient.

00:12:27.260 --> 00:12:32.910
Now, RemoteControlClient is
what presents the lock screen.

00:12:32.910 --> 00:12:34.814
It appears on the lock
screen of your phone

00:12:34.814 --> 00:12:36.230
and you have the
ability to change

00:12:36.230 --> 00:12:37.624
back and forth between songs.

00:12:37.624 --> 00:12:39.040
So what you need
to do is you need

00:12:39.040 --> 00:12:41.040
to migrate your app
from RemoteControlClient

00:12:41.040 --> 00:12:43.270
over to this new
framework, and then you

00:12:43.270 --> 00:12:46.570
get Android Auto support,
the lock screen still works,

00:12:46.570 --> 00:12:49.450
but you also get other
platforms, as well, for free.

00:12:49.450 --> 00:12:53.000
So for example Android
Wear has the ability

00:12:53.000 --> 00:12:55.190
to understand media
callbacks, as well.

00:12:55.190 --> 00:12:56.899
If you're playing a
song on your phone,

00:12:56.899 --> 00:12:59.190
the actual media information
will appear on your watch,

00:12:59.190 --> 00:13:01.398
as well, and you can pick
next track, previous track,

00:13:01.398 --> 00:13:03.000
browse through the library.

00:13:03.000 --> 00:13:05.260
So we're not just
adding this framework

00:13:05.260 --> 00:13:08.430
to our code to support Android
Auto, we're adding it for Wear,

00:13:08.430 --> 00:13:11.420
and any other platforms that
Google might add in the future.

00:13:11.420 --> 00:13:13.312
So it's a generic
media framework

00:13:13.312 --> 00:13:15.770
that's really useful for a
whole bunch of different things,

00:13:15.770 --> 00:13:19.430
and so this is the
future way going forward.

00:13:19.430 --> 00:13:21.660
So how does the media API work?

00:13:21.660 --> 00:13:25.410
So let's talk about how the
MediaSession support works.

00:13:25.410 --> 00:13:31.190
So what happens is that when
we start to play a song,

00:13:31.190 --> 00:13:34.620
the MediaSession communicates
metadata to the head unit.

00:13:34.620 --> 00:13:37.090
So it says, hey, we've
got the song title,

00:13:37.090 --> 00:13:38.930
we've got the current
playback state-- are

00:13:38.930 --> 00:13:42.990
we play, paused, how far are we
through the song, and so forth.

00:13:42.990 --> 00:13:48.480
And we then have controls
on the unit itself.

00:13:48.480 --> 00:13:50.720
Whenever someone
presses those buttons,

00:13:50.720 --> 00:13:54.750
they're sent back to the
media app on this end.

00:13:54.750 --> 00:13:56.980
And the Android framework
is all under the hood

00:13:56.980 --> 00:14:00.260
here, so it's responsible
for handling all the IPC.

00:14:00.260 --> 00:14:03.090
You don't have to deal with
any networking code or anything

00:14:03.090 --> 00:14:03.590
like that.

00:14:03.590 --> 00:14:05.770
It's all kind of done
magically in the back end,

00:14:05.770 --> 00:14:08.340
and it allows us to change
the implementation of things

00:14:08.340 --> 00:14:11.786
without you having
to rewrite your code.

00:14:11.786 --> 00:14:13.660
So how do we go back
creating a MediaSession?

00:14:13.660 --> 00:14:15.640
So in your music
app you're going

00:14:15.640 --> 00:14:19.340
to create a new MediaSession
object, you make it active,

00:14:19.340 --> 00:14:22.450
and then you have to
grab a session from this

00:14:22.450 --> 00:14:23.470
and then store it.

00:14:23.470 --> 00:14:26.540
And we're going to
use that later on.

00:14:26.540 --> 00:14:29.170
So the next thing we need to
do is get the metadata over

00:14:29.170 --> 00:14:30.950
to the Android Auto app.

00:14:30.950 --> 00:14:33.720
So you create a metadata
object with this builder.

00:14:33.720 --> 00:14:36.440
You then put some strings
in-- title, artist, duration.

00:14:36.440 --> 00:14:38.130
There's a whole bunch
of different tags

00:14:38.130 --> 00:14:40.020
that are available
for different things.

00:14:40.020 --> 00:14:42.180
So you fill out the
information that you have.

00:14:42.180 --> 00:14:44.890
As I said before, you can
also do background images.

00:14:44.890 --> 00:14:47.540
So it allows you to make
nice, beautiful artwork

00:14:47.540 --> 00:14:50.460
for the background, as well, so
it's not just limited to text.

00:14:50.460 --> 00:14:53.150
And then we take that
builder, we call build on it,

00:14:53.150 --> 00:14:55.650
and then we pass it to set
metadata, which then puts it

00:14:55.650 --> 00:14:56.814
into the session object.

00:14:56.814 --> 00:14:58.230
And then pretty
much after that we

00:14:58.230 --> 00:15:00.620
don't have to worry about it.

00:15:00.620 --> 00:15:04.360
The next part is the
playback state-- play, pause,

00:15:04.360 --> 00:15:05.220
things like that.

00:15:05.220 --> 00:15:08.190
Once again, you use
a builder object.

00:15:08.190 --> 00:15:09.280
We're currently playing.

00:15:09.280 --> 00:15:10.960
We're setting a speed here.

00:15:10.960 --> 00:15:13.720
And then we're also able to
specify what kind of controls

00:15:13.720 --> 00:15:15.060
are available right now.

00:15:15.060 --> 00:15:16.840
So we're saying OK, we want
to support play and pause,

00:15:16.840 --> 00:15:18.400
but I don't want to
support other things.

00:15:18.400 --> 00:15:19.941
You can control what
controls appear.

00:15:19.941 --> 00:15:22.340
We'll show you another
screenshot in a little bit.

00:15:22.340 --> 00:15:25.320
Now once again, build the
state, put it in here.

00:15:25.320 --> 00:15:26.630
Now it's in the session.

00:15:26.630 --> 00:15:28.490
So the stuff's pretty easy.

00:15:28.490 --> 00:15:30.350
The API's very simple,
there's nothing

00:15:30.350 --> 00:15:31.480
too complicated about it.

00:15:31.480 --> 00:15:33.870
You don't have to write
tons of boilerplate code.

00:15:33.870 --> 00:15:36.620
Makes it quite nice.

00:15:36.620 --> 00:15:40.040
Now finally, the
controls that come back.

00:15:40.040 --> 00:15:43.380
So we created a
MediaSession.Callback,

00:15:43.380 --> 00:15:46.550
and inside we fill out methods
for all the different events

00:15:46.550 --> 00:15:49.860
that we're interested in--
on play, pause, skip track,

00:15:49.860 --> 00:15:51.060
and so forth.

00:15:51.060 --> 00:15:53.750
So these methods will be called
when the user presses pause,

00:15:53.750 --> 00:15:55.320
play, whatever.

00:15:55.320 --> 00:15:57.720
And you can put whatever
code you want in here.

00:15:57.720 --> 00:16:01.870
And so also if a new song is
selected, things like that.

00:16:04.470 --> 00:16:06.997
So now let's talk about
the browser implementation.

00:16:06.997 --> 00:16:08.080
So those are the controls.

00:16:08.080 --> 00:16:10.070
We've worked out how to
send messages back and forth

00:16:10.070 --> 00:16:11.590
that change tracks,
and so forth,

00:16:11.590 --> 00:16:13.850
but now we need to actually
tell the Auto unit what

00:16:13.850 --> 00:16:15.059
our music library looks like.

00:16:15.059 --> 00:16:16.641
And this is where
it gets interesting,

00:16:16.641 --> 00:16:19.420
because with Android Auto, you
can ask it with voice queries.

00:16:19.420 --> 00:16:22.790
You can say, hey, play me a
song with jazz music in it.

00:16:22.790 --> 00:16:25.570
And it will go through your
tree and find something

00:16:25.570 --> 00:16:27.940
that's got jazz in
it as its genre.

00:16:27.940 --> 00:16:30.800
And so it has the ability to
search your database of music

00:16:30.800 --> 00:16:32.130
in your app.

00:16:32.130 --> 00:16:36.260
So that's done with the
MediaBrowserService.

00:16:36.260 --> 00:16:38.670
So MediaBrowserService
is we provide

00:16:38.670 --> 00:16:41.620
a class for that which
you extend, and then

00:16:41.620 --> 00:16:43.840
you have to take the
SessionToken that we created

00:16:43.840 --> 00:16:46.570
earlier when we set
up the previous code,

00:16:46.570 --> 00:16:48.195
and we store that in here.

00:16:48.195 --> 00:16:50.320
And that then allows
everything to be connected up.

00:16:50.320 --> 00:16:52.819
So the SessionToken is the glue
that brings it all together.

00:16:56.580 --> 00:16:58.700
And now the next method
that we need to implement

00:16:58.700 --> 00:17:00.110
is called onGetRoot.

00:17:00.110 --> 00:17:02.810
So when the Android
Auto app connects

00:17:02.810 --> 00:17:06.819
to your app for the first
time, it calls onGetRoot,

00:17:06.819 --> 00:17:10.319
and your app needs to decide
what to do with this request.

00:17:10.319 --> 00:17:13.170
Now it's an opportunity to
validate if whoever's calling

00:17:13.170 --> 00:17:15.079
you is allowed to
talk to your app.

00:17:15.079 --> 00:17:16.935
So you might have a
protected music library

00:17:16.935 --> 00:17:19.310
that you don't want to share
with every app on the phone,

00:17:19.310 --> 00:17:22.290
because this mechanism--
any app could request, hey,

00:17:22.290 --> 00:17:24.697
grab the music library and
start playing it or whatever.

00:17:24.697 --> 00:17:26.280
But you might only
want to restrict it

00:17:26.280 --> 00:17:29.140
to your app, plus the
Android Auto and Wear apps.

00:17:29.140 --> 00:17:31.080
And you have the
ability to do that here.

00:17:31.080 --> 00:17:34.430
So in the samples that we
provide we provide some sample

00:17:34.430 --> 00:17:36.420
code for a
PackageValidator class

00:17:36.420 --> 00:17:40.080
that takes in the package name,
the UID, and the current class,

00:17:40.080 --> 00:17:43.130
and it verifies that
the signature matches

00:17:43.130 --> 00:17:45.645
what's expected so that
some rogue app isn't

00:17:45.645 --> 00:17:46.520
talking to your code.

00:17:46.520 --> 00:17:48.978
Now you don't have to put that
in if you don't want to but,

00:17:48.978 --> 00:17:50.400
it's recommended that you do.

00:17:50.400 --> 00:17:52.770
And it's very important
that you do this correctly,

00:17:52.770 --> 00:17:54.817
because if you mess up
the packet verification,

00:17:54.817 --> 00:17:57.150
it might be that you haven't
secured your app correctly.

00:17:57.150 --> 00:17:59.066
So make sure you really
do look at the samples

00:17:59.066 --> 00:18:00.590
to get this right.

00:18:00.590 --> 00:18:04.020
Finally, the next
step is you return

00:18:04.020 --> 00:18:06.180
the root of your media tree.

00:18:06.180 --> 00:18:08.390
So your media is
stored in a hierarchy,

00:18:08.390 --> 00:18:11.590
you're returning this browser
root node that's the top.

00:18:11.590 --> 00:18:13.886
And later on we're going
to return this back,

00:18:13.886 --> 00:18:15.760
and then it's going to
come back to our code,

00:18:15.760 --> 00:18:18.610
and we're going to have to start
returning the children of it.

00:18:18.610 --> 00:18:22.860
So with that in mind,
once onGetRoot's returned,

00:18:22.860 --> 00:18:24.540
the unloadChildren
method is what

00:18:24.540 --> 00:18:29.410
is called when someone's
trying to query our database.

00:18:29.410 --> 00:18:33.630
The root is initially
passed in with this ID here,

00:18:33.630 --> 00:18:36.170
and then we have to
return a result back.

00:18:36.170 --> 00:18:39.300
So you can see here that
we're doing result.sendResult,

00:18:39.300 --> 00:18:41.460
and we're parsing
in some media data

00:18:41.460 --> 00:18:44.620
of the first node of our tree.

00:18:44.620 --> 00:18:47.080
You have the ability when
you specify your media

00:18:47.080 --> 00:18:51.040
items to specify what's called a
playable or a browsable object.

00:18:51.040 --> 00:18:53.360
A browsable object
means that this object

00:18:53.360 --> 00:18:54.730
has further children.

00:18:54.730 --> 00:18:57.150
A playable object
is a piece of media

00:18:57.150 --> 00:18:58.510
that can be played right now.

00:18:58.510 --> 00:19:00.468
So it's just a way of
differentiating the nodes

00:19:00.468 --> 00:19:01.440
in the tree.

00:19:01.440 --> 00:19:02.990
So you do that.

00:19:02.990 --> 00:19:06.090
Now, you might have
an app that is getting

00:19:06.090 --> 00:19:08.740
its media from the
internet, so it

00:19:08.740 --> 00:19:11.440
might be a slow process to go
and fetch this information.

00:19:11.440 --> 00:19:14.354
Now, this unloadChildren
method is designed

00:19:14.354 --> 00:19:15.520
to return back very quickly.

00:19:15.520 --> 00:19:18.190
If you can't return back
instantly a result, what

00:19:18.190 --> 00:19:22.210
you should do is detach, load
the children in the background,

00:19:22.210 --> 00:19:25.011
and then return that result
later in this onComplete method

00:19:25.011 --> 00:19:25.510
here.

00:19:25.510 --> 00:19:27.300
And it returns asynchronously.

00:19:27.300 --> 00:19:31.480
So if media's in local storage,
do the first method here.

00:19:31.480 --> 00:19:33.390
If you're on the network,
do the second one

00:19:33.390 --> 00:19:35.554
because you don't want to
have a laggy experience.

00:19:35.554 --> 00:19:36.970
Because otherwise,
it'll slow down

00:19:36.970 --> 00:19:39.181
the experience in the head
unit-- bad for the user.

00:19:39.181 --> 00:19:40.680
And especially when
they're driving.

00:19:40.680 --> 00:19:42.320
They're going to be super
frustrated if they're

00:19:42.320 --> 00:19:44.100
trying to press a button
and it's not working

00:19:44.100 --> 00:19:45.266
while they're driving a car.

00:19:45.266 --> 00:19:49.540
So super important that
you get this right.

00:19:49.540 --> 00:19:52.820
So here is the final chart that
summarizes the back and forth

00:19:52.820 --> 00:19:54.390
that happens with Android Auto.

00:19:54.390 --> 00:19:57.580
So we pick the music app.

00:19:57.580 --> 00:20:02.240
It then calls onGetRoot in
our media browser service.

00:20:02.240 --> 00:20:04.810
The SessionTokens
go back and forth.

00:20:04.810 --> 00:20:07.520
The Android Auto app then
calls unloadChildren to get

00:20:07.520 --> 00:20:08.700
the music.

00:20:08.700 --> 00:20:11.070
And then once that's done,
someone selects music

00:20:11.070 --> 00:20:13.410
from the display
on the head unit,

00:20:13.410 --> 00:20:16.400
it goes through to
one of your callbacks.

00:20:16.400 --> 00:20:18.460
And then once your
media starts playing,

00:20:18.460 --> 00:20:20.360
you then send these
metaDataChanged

00:20:20.360 --> 00:20:23.120
and playbackStateChanged
back to the head unit.

00:20:23.120 --> 00:20:25.930
So that's the only true back
and forth that happened.

00:20:25.930 --> 00:20:27.960
You fill out those
methods, and then you're

00:20:27.960 --> 00:20:28.876
good to go, basically.

00:20:31.220 --> 00:20:34.140
So, finally, a few little
quick customisations here.

00:20:34.140 --> 00:20:35.865
So, obviously, as
an app developer

00:20:35.865 --> 00:20:37.740
you want to be able to
differentiate your app

00:20:37.740 --> 00:20:39.810
from other apps on the system.

00:20:39.810 --> 00:20:42.790
So you have the ability to
change the background artwork,

00:20:42.790 --> 00:20:45.910
so this image here is coming
from the music in this case.

00:20:45.910 --> 00:20:47.390
You also have the
ability to change

00:20:47.390 --> 00:20:48.790
the colors of everything.

00:20:48.790 --> 00:20:52.020
So there's a primary color and a
secondary color you can adjust,

00:20:52.020 --> 00:20:54.632
and you can see here that
this app is using orange which

00:20:54.632 --> 00:20:56.840
allows you to control the
progress bars and the icons

00:20:56.840 --> 00:20:57.430
and so forth.

00:20:57.430 --> 00:21:00.636
You can change that to
whatever you want, as well.

00:21:00.636 --> 00:21:02.010
And finally, you
have the ability

00:21:02.010 --> 00:21:03.740
to customize the controls.

00:21:03.740 --> 00:21:06.630
So in this case up here,
we showed this a little bit

00:21:06.630 --> 00:21:08.040
earlier with setActions.

00:21:08.040 --> 00:21:10.990
We're saying OK, our app
supports play, pause, and skip

00:21:10.990 --> 00:21:13.200
to next, but that's it.

00:21:13.200 --> 00:21:15.720
So you can see that
this icon is not there.

00:21:15.720 --> 00:21:18.670
Now you might not have
a traditional music app.

00:21:18.670 --> 00:21:21.095
So some music apps don't have
the ability to fast forward,

00:21:21.095 --> 00:21:22.470
and it might be
that it's a radio

00:21:22.470 --> 00:21:25.460
station so there's no concept
of skipping to the next track.

00:21:25.460 --> 00:21:27.600
So if this is the
case, in this example

00:21:27.600 --> 00:21:31.060
here you can parse in a list,
and you can create custom icons

00:21:31.060 --> 00:21:33.620
like go back 10 seconds,
go forward 30 seconds,

00:21:33.620 --> 00:21:35.119
whatever it is that
you want to do.

00:21:35.119 --> 00:21:37.410
You can create these icons
and then you can put them in

00:21:37.410 --> 00:21:38.880
and it'll take care of it.

00:21:38.880 --> 00:21:43.240
So the apps are reviewed as
part of the submission process,

00:21:43.240 --> 00:21:45.490
so don't try to do things
like playing movies

00:21:45.490 --> 00:21:47.370
or anything crazy in the icons.

00:21:47.370 --> 00:21:49.460
You're not allowed to
play videos to the user,

00:21:49.460 --> 00:21:51.083
you're not allowed to play
videos in the background

00:21:51.083 --> 00:21:51.830
or anything like that.

00:21:51.830 --> 00:21:53.630
If you try to do it, your
app will get rejected

00:21:53.630 --> 00:21:56.088
and then you won't be able to
get it out to the Play Store.

00:21:56.088 --> 00:21:59.320
So don't do things like that.

00:21:59.320 --> 00:22:01.390
So that's kind of a
quick little summary

00:22:01.390 --> 00:22:04.450
of how to go about putting
media support into your app.

00:22:04.450 --> 00:22:07.440
Now that's basically it.

00:22:07.440 --> 00:22:11.770
So we've shown how to take a
media app, a messaging app,

00:22:11.770 --> 00:22:13.800
and we have samples
for these things.

00:22:13.800 --> 00:22:16.620
So if you look in
Android Studio,

00:22:16.620 --> 00:22:18.820
we have the Universal
Music Player, which

00:22:18.820 --> 00:22:21.860
if you go to Android
Studio, new, sample,

00:22:21.860 --> 00:22:23.650
you can select that
and just hit build,

00:22:23.650 --> 00:22:25.970
go straight to your device,
and you're good to go.

00:22:25.970 --> 00:22:28.320
We have the messaging service
sample which shows you

00:22:28.320 --> 00:22:29.660
how to do the messaging.

00:22:29.660 --> 00:22:33.345
And I've got this head unit here
which is like a car simulator,

00:22:33.345 --> 00:22:35.220
but obviously you don't
want to have to carry

00:22:35.220 --> 00:22:36.280
this around everywhere.

00:22:36.280 --> 00:22:38.488
So we have what's called
the desktop head unit, which

00:22:38.488 --> 00:22:40.800
is a simulator that
runs on your laptop

00:22:40.800 --> 00:22:42.520
that you connect
up to your phone,

00:22:42.520 --> 00:22:44.570
and it allows you to
have an Android Auto

00:22:44.570 --> 00:22:47.114
experience on your desktop
or your laptop screen,

00:22:47.114 --> 00:22:49.030
and it allows you to
test your app completely.

00:22:49.030 --> 00:22:50.910
And you can do the speech
and all that kind of stuff.

00:22:50.910 --> 00:22:51.604
It's quite nice.

00:22:51.604 --> 00:22:53.770
So give that a try if you
want to test your app out.

00:22:53.770 --> 00:22:56.269
And then once that's ready, you
submit it to the Play Store,

00:22:56.269 --> 00:22:57.770
and then you're ready to go.

00:22:57.770 --> 00:23:00.020
So if you want more
help with this,

00:23:00.020 --> 00:23:03.180
we have a Udacity class
that I created a while back.

00:23:03.180 --> 00:23:04.710
It has a really
nice summary of how

00:23:04.710 --> 00:23:07.030
to get started with Android
Auto and some of the things

00:23:07.030 --> 00:23:08.640
that we talked
about in this class.

00:23:08.640 --> 00:23:10.370
And it actually goes
through step-by-step

00:23:10.370 --> 00:23:12.745
of how to take a messaging
sample and add the code to it,

00:23:12.745 --> 00:23:14.040
so you can give that a try.

00:23:14.040 --> 00:23:17.620
And we also have an Android
Auto Developer's Forum on G+.

00:23:17.620 --> 00:23:21.251
So I run this forum--
g.co/androidautodev--

00:23:21.251 --> 00:23:23.500
and that's a great place to
go if you've got questions

00:23:23.500 --> 00:23:24.958
or if you want to
discuss problems,

00:23:24.958 --> 00:23:28.130
and me or other people on the
team are available to answer

00:23:28.130 --> 00:23:29.000
your questions.

00:23:29.000 --> 00:23:31.860
And then finally, follow
me old Google+, as well.

00:23:31.860 --> 00:23:33.700
I give updates
about Android Auto,

00:23:33.700 --> 00:23:36.660
but I also do a lot of work on
Brillo and Weave and wearables

00:23:36.660 --> 00:23:39.670
and other things like that,
so follow me on Google+ if you

00:23:39.670 --> 00:23:42.140
want to know more about
what's going on in this area.

00:23:42.140 --> 00:23:44.442
So that's the end
of the talk today.

00:23:44.442 --> 00:23:45.900
So thank you very
much, and then we

00:23:45.900 --> 00:23:47.340
can have some time
for questions.

00:23:47.340 --> 00:23:47.840
Thank you.

00:23:52.670 --> 00:23:53.447
Yeah, question.

00:23:53.447 --> 00:23:57.268
AUDIENCE: Yeah, so especially
with SUVS and stuff

00:23:57.268 --> 00:23:59.434
like that, if you wanted
to make an app so that it's

00:23:59.434 --> 00:24:03.652
easy to be able to put
on movies for your kids,

00:24:03.652 --> 00:24:05.860
they don't have a [INAUDIBLE]
for anything like that?

00:24:05.860 --> 00:24:06.950
WAYNE PIEKARSKI: Yeah, so
I'll repeat the question.

00:24:06.950 --> 00:24:09.400
So the question was is if
you've got an SUV with screens

00:24:09.400 --> 00:24:11.608
around the car, how can you
play movies for the kids?

00:24:11.608 --> 00:24:14.070
And so right now we don't
support anything like that.

00:24:14.070 --> 00:24:16.877
That's a whole separate problem.

00:24:16.877 --> 00:24:18.710
The current implementation
of what we showed

00:24:18.710 --> 00:24:20.316
is for the head unit of the car.

00:24:23.590 --> 00:24:29.620
It would be very different, so
it's not currently supported.

00:24:29.620 --> 00:24:30.620
Question.

00:24:30.620 --> 00:24:33.997
AUDIENCE: So under the cover,
what exactly is that thing?

00:24:33.997 --> 00:24:35.080
Is it just a touch screen?

00:24:35.080 --> 00:24:37.180
Is it [INAUDIBLE]
audio [INAUDIBLE]?

00:24:37.180 --> 00:24:40.850
WAYNE PIEKARSKI: So this
here, Pioneer made this unit.

00:24:40.850 --> 00:24:44.130
So this is designed to drop
into pretty much any car.

00:24:44.130 --> 00:24:47.750
So most cars have what's called
a DIN, it's like a DIN port

00:24:47.750 --> 00:24:50.510
or whatever they call it, and so
there's usually a plastic panel

00:24:50.510 --> 00:24:52.030
or an existing CD player.

00:24:52.030 --> 00:24:55.490
So you pop the dash off,
unscrew the old CD player,

00:24:55.490 --> 00:24:56.390
you throw it out.

00:24:56.390 --> 00:25:00.060
This thing slides in
there, and it's a box.

00:25:00.060 --> 00:25:03.560
This one has a CD player
behind it and stuff like that.

00:25:03.560 --> 00:25:05.890
It drops in, you connect
up your existing speakers

00:25:05.890 --> 00:25:08.209
and everything, and it's
designed to replace the CD

00:25:08.209 --> 00:25:09.000
player in your car.

00:25:09.000 --> 00:25:11.880
So I use one of these.

00:25:11.880 --> 00:25:15.060
This around here is a fake
car simulator, basically.

00:25:15.060 --> 00:25:17.840
So we have a 12-volt power
supply, we have an amp,

00:25:17.840 --> 00:25:19.760
we have some
speakers, and we have

00:25:19.760 --> 00:25:22.970
everything necessary
to basically provide

00:25:22.970 --> 00:25:24.410
a fake automobile.

00:25:24.410 --> 00:25:26.529
It probably even has a
parking-- oh, here you go.

00:25:26.529 --> 00:25:28.070
This is a parking
brake switch so you

00:25:28.070 --> 00:25:30.950
can pretend you're pulling the
parking brake lever in the car.

00:25:30.950 --> 00:25:33.200
So we built this is as
a way of demonstrating

00:25:33.200 --> 00:25:35.080
how to use one of these
units without having

00:25:35.080 --> 00:25:37.490
to go outside and sit in a car.

00:25:37.490 --> 00:25:39.750
For most developers, you
want to use the desktop head

00:25:39.750 --> 00:25:41.510
unit because you can
just sit at your desk

00:25:41.510 --> 00:25:42.660
and test your app out.

00:25:42.660 --> 00:25:43.800
You don't want to have
to go out to a car

00:25:43.800 --> 00:25:45.383
every time you want
to try an App out.

00:25:45.383 --> 00:25:47.800
But you can buy one
of these for your car.

00:25:47.800 --> 00:25:50.460
OEMs are introducing
cars that are gradually

00:25:50.460 --> 00:25:52.460
coming out which have
Android Auto support built

00:25:52.460 --> 00:25:53.214
into the car.

00:25:53.214 --> 00:25:55.630
But I bought a car, for example,
that had an old school CD

00:25:55.630 --> 00:25:56.400
player in it.

00:25:56.400 --> 00:25:58.260
I just ripped it out,
put one of these in,

00:25:58.260 --> 00:25:59.980
and now my car is Auto-enabled.

00:25:59.980 --> 00:26:02.780
So that's a great way of adding
Auto support to an existing

00:26:02.780 --> 00:26:03.280
vehicle.

00:26:03.280 --> 00:26:07.794
AUDIENCE: What's the dimension
[INAUDIBLE] desktop head unit?

00:26:07.794 --> 00:26:10.740
WAYNE PIEKARSKI: Well,
that's limited to your desk.

00:26:10.740 --> 00:26:13.360
It's pretty much identical.

00:26:13.360 --> 00:26:15.220
There it does the
speech, it does

00:26:15.220 --> 00:26:16.560
everything basically the same.

00:26:16.560 --> 00:26:19.364
So from a debugging
perspective, if your app

00:26:19.364 --> 00:26:20.780
works in a desktop
head unit, it's

00:26:20.780 --> 00:26:23.250
probably going to work
fine in one of these, too.

00:26:23.250 --> 00:26:23.750
Yeah.

00:26:23.750 --> 00:26:26.250
AUDIENCE: So what kind
of access does the app

00:26:26.250 --> 00:26:29.220
allow you [INAUDIBLE] on
the car, like at a speed.

00:26:29.220 --> 00:26:31.470
Can you read and write,
change the speed or something?

00:26:31.470 --> 00:26:33.261
WAYNE PIEKARSKI: All
right, so the question

00:26:33.261 --> 00:26:36.490
was how do you get access to the
information about the vehicle?

00:26:36.490 --> 00:26:40.750
So right now the
Android Auto app

00:26:40.750 --> 00:26:44.540
does not provide lots of
information like that.

00:26:44.540 --> 00:26:47.490
However, that doesn't matter
so much because your app is

00:26:47.490 --> 00:26:48.740
running on the phone.

00:26:48.740 --> 00:26:52.440
You have the ability to fire up
the GPS or any of the sensors

00:26:52.440 --> 00:26:55.092
just like you would, because
it's just a phone app.

00:26:55.092 --> 00:26:56.800
So if you want to know
the current speed,

00:26:56.800 --> 00:27:00.390
you can just ask the GPS or
the location library for that.

00:27:00.390 --> 00:27:01.806
AUDIENCE: Actually
what I mean was

00:27:01.806 --> 00:27:04.020
can you do diagnostic
or something like that?

00:27:04.020 --> 00:27:06.580
WAYNE PIEKARSKI: No, so if you
wanted to do a diagnostic app,

00:27:06.580 --> 00:27:07.829
that's a whole separate thing.

00:27:07.829 --> 00:27:10.184
You can buy these little
ODB2 scanner plug-ins

00:27:10.184 --> 00:27:11.350
that you plug into your car.

00:27:11.350 --> 00:27:12.650
It has Bluetooth on it.

00:27:12.650 --> 00:27:14.360
You can then pair
your phone up to it.

00:27:14.360 --> 00:27:16.720
But that would be an app
that runs on your phone.

00:27:16.720 --> 00:27:19.190
It wouldn't fit within the
Android Auto experience

00:27:19.190 --> 00:27:24.970
because you can't draw gauges
or dials on this screen.

00:27:24.970 --> 00:27:29.910
It's a templated UI, so it's
just media and just messaging.

00:27:29.910 --> 00:27:32.970
You're not legally allowed
to put a random movie

00:27:32.970 --> 00:27:36.401
or graphic display on here
so we don't allow that.

00:27:36.401 --> 00:27:38.650
And that's what allows you
to get your app to the Play

00:27:38.650 --> 00:27:40.220
Store in a couple hours.

00:27:40.220 --> 00:27:42.400
It's a whole separate--
so in exchange

00:27:42.400 --> 00:27:45.030
for using the templated UI,
you get fast access to the Play

00:27:45.030 --> 00:27:48.905
Store and to your
customers base for free.

00:27:48.905 --> 00:27:49.530
Yeah, question.

00:27:49.530 --> 00:27:51.466
AUDIENCE: So on
Chromecast you can now

00:27:51.466 --> 00:27:53.713
cast to multi rooms, et cetera.

00:27:53.713 --> 00:27:55.338
Could you imagine
this as at some point

00:27:55.338 --> 00:27:57.838
this might be kind of like a
head unit and then a rear unit,

00:27:57.838 --> 00:27:59.067
or [INAUDIBLE].

00:27:59.067 --> 00:28:01.525
Is anything going to happen
because people take a rear unit

00:28:01.525 --> 00:28:02.860
and still put it up in
the front of their car

00:28:02.860 --> 00:28:04.200
and it would kind of bypass it?

00:28:04.200 --> 00:28:05.040
WAYNE PIEKARSKI:
Yeah, I don't know

00:28:05.040 --> 00:28:07.650
what-- I can't talk about the
plans for what they're planning

00:28:07.650 --> 00:28:08.456
on doing in the future.

00:28:08.456 --> 00:28:10.042
AUDIENCE: [INAUDIBLE] on a
templated kind of presentation

00:28:10.042 --> 00:28:12.090
and [INAUDIBLE]
graphics [INAUDIBLE].

00:28:12.090 --> 00:28:14.090
WAYNE PIEKARSKI: Yeah,
it's currently templated.

00:28:14.090 --> 00:28:16.090
So the nice thing,
though, is let's

00:28:16.090 --> 00:28:17.900
say you're making a media app.

00:28:17.900 --> 00:28:20.604
So now, as long as you
implement the API correctly,

00:28:20.604 --> 00:28:22.770
hypothetically in the future,
if someone else builds

00:28:22.770 --> 00:28:26.081
a plugin that plugs in to
this API, your app just works.

00:28:26.081 --> 00:28:28.330
And that's actually the cool
thing is the wear people,

00:28:28.330 --> 00:28:30.900
for example, they
implemented this API.

00:28:30.900 --> 00:28:31.900
It just works.

00:28:31.900 --> 00:28:33.686
So if, hypothetically,
the second display

00:28:33.686 --> 00:28:35.560
was to come out, which
I'm not promising but,

00:28:35.560 --> 00:28:38.330
hypothetically, if it
happened, if it used this API,

00:28:38.330 --> 00:28:39.750
you don't have to do anything.

00:28:39.750 --> 00:28:43.390
So that's the cool part
is you write the API

00:28:43.390 --> 00:28:45.560
and whatever functionality
is available,

00:28:45.560 --> 00:28:46.530
it will try to use it.

00:28:46.530 --> 00:28:47.472
AUDIENCE: OK, did
I catch you right

00:28:47.472 --> 00:28:49.513
as you said as that, in theory,
is if your app is written right

00:28:49.513 --> 00:28:51.929
as it says, it presents here
on the head unit that there's

00:28:51.929 --> 00:28:54.800
a song, it also will show as a
notification on my Wear watch?

00:28:54.800 --> 00:28:55.243
WAYNE PIEKARSKI: Yes.

00:28:55.243 --> 00:28:56.130
AUDIENCE: At the same time?

00:28:56.130 --> 00:28:56.565
WAYNE PIEKARSKI: Yeah.

00:28:56.565 --> 00:28:58.740
AUDIENCE: And if I update
there then it literally will--

00:28:58.740 --> 00:29:00.865
WAYNE PIEKARSKI: Oh yeah,
they're all kept in sync.

00:29:00.865 --> 00:29:03.100
So your watch, the car,
and your phone are in sync.

00:29:03.100 --> 00:29:04.850
So if you disconnect
the phone and then go

00:29:04.850 --> 00:29:07.199
for a walk out of
a car, your watch

00:29:07.199 --> 00:29:09.740
will show the current song and
your phone will still play it.

00:29:09.740 --> 00:29:11.574
So you can be
listening to something

00:29:11.574 --> 00:29:12.740
before you get into the car.

00:29:12.740 --> 00:29:16.270
You plug it in, it's sort of all
kept in sync with each other.

00:29:16.270 --> 00:29:17.974
And your watch will show it.

00:29:17.974 --> 00:29:20.390
So you can use whatever is
convenient for you at the time,

00:29:20.390 --> 00:29:21.272
so it's kind of nice.

00:29:21.272 --> 00:29:21.772
Yeah.

00:29:21.772 --> 00:29:23.740
AUDIENCE: Why can't
the Android Auto app

00:29:23.740 --> 00:29:25.319
work without a head unit?

00:29:25.319 --> 00:29:27.110
WAYNE PIEKARSKI: Why
can't the Android Auto

00:29:27.110 --> 00:29:28.318
app work without a head unit?

00:29:28.318 --> 00:29:31.470
OK, the thing is a lot of it is
to do with safety regulations,

00:29:31.470 --> 00:29:32.007
as well.

00:29:32.007 --> 00:29:33.465
I take it you want
to, like, Velcro

00:29:33.465 --> 00:29:36.643
a Nexus tablet to your
dash or something, right?

00:29:36.643 --> 00:29:40.438
AUDIENCE: Well, I've got a mount
that I use my phone as a GPS.

00:29:40.438 --> 00:29:46.420
I want this interface without
paying $700 for a [INAUDIBLE].

00:29:46.420 --> 00:29:48.140
WAYNE PIEKARSKI:
Yes, a lot of it

00:29:48.140 --> 00:29:50.300
is to do with safety
regulations, as well.

00:29:50.300 --> 00:29:52.080
And the thing is is
car manufacturers,

00:29:52.080 --> 00:29:54.080
they put their DIN port
and all this stuff.

00:29:54.080 --> 00:29:55.740
It's all tested and whatever.

00:29:55.740 --> 00:29:58.300
And it's just dangerous
to have people sticking

00:29:58.300 --> 00:30:01.960
a phone on their steering
wheel, or wherever they might

00:30:01.960 --> 00:30:03.440
want to do that kind of stuff.

00:30:03.440 --> 00:30:05.990
So yeah, these things
are limited due to a lot

00:30:05.990 --> 00:30:09.096
of safety and legal reasons.

00:30:09.096 --> 00:30:10.024
Question.

00:30:10.024 --> 00:30:13.249
AUDIENCE: You were talking about
the approvals for the media

00:30:13.249 --> 00:30:13.748
player apps.

00:30:13.748 --> 00:30:15.790
Is there a similar approval
for the notification?

00:30:15.790 --> 00:30:17.373
WAYNE PIEKARSKI:
Yeah, so the question

00:30:17.373 --> 00:30:19.740
was is there approval for
messaging as well as media?

00:30:19.740 --> 00:30:21.180
They all have to be approved.

00:30:21.180 --> 00:30:25.460
So what happens is when
you do the automotive app

00:30:25.460 --> 00:30:28.860
desk to the XML file, you
declare notifications or media.

00:30:28.860 --> 00:30:31.520
Those are the two current
types that you declare.

00:30:31.520 --> 00:30:34.290
Any of those apps that want to
go through the Play Store, both

00:30:34.290 --> 00:30:35.700
of them have to be approved.

00:30:35.700 --> 00:30:38.812
And your app won't work
unless it has been approved

00:30:38.812 --> 00:30:39.770
through the Play Store.

00:30:39.770 --> 00:30:42.770
So you can't side load them.

00:30:42.770 --> 00:30:44.160
You can't hand
out apps to people

00:30:44.160 --> 00:30:45.510
and expect them to
work in their cars.

00:30:45.510 --> 00:30:46.340
It doesn't work like that.

00:30:46.340 --> 00:30:48.250
So the app has to go
through the approval.

00:30:48.250 --> 00:30:49.440
So it's done for both.

00:30:49.440 --> 00:30:51.290
And in most cases
there's not too much

00:30:51.290 --> 00:30:52.460
crazy stuff you can do.

00:30:52.460 --> 00:30:55.130
If you stick to the specs,
your app will be approved.

00:30:55.130 --> 00:30:56.959
It's if you're
doing crazy things

00:30:56.959 --> 00:30:58.500
like trying to keep
the screen alive,

00:30:58.500 --> 00:31:02.764
or trying to spam too many
messages or things like that.

00:31:02.764 --> 00:31:04.180
That's when you'll
have a problem.

00:31:04.180 --> 00:31:05.971
AUDIENCE: Are there
guidelines [INAUDIBLE]?

00:31:05.971 --> 00:31:09.650
WAYNE PIEKARSKI: Yeah, so
the Android Auto website--

00:31:09.650 --> 00:31:12.991
developers.android.com/auto
has a whole bunch of guidelines

00:31:12.991 --> 00:31:14.490
on when you submit
to the app store,

00:31:14.490 --> 00:31:17.550
there are the kind of things
that we look for, and make sure

00:31:17.550 --> 00:31:19.645
you do these-- think
about these concepts.

00:31:19.645 --> 00:31:21.020
There's a bunch
more information.

00:31:21.020 --> 00:31:23.280
So today I covered mainly
the technical aspects,

00:31:23.280 --> 00:31:25.250
but there's a lot
more information there

00:31:25.250 --> 00:31:27.270
that really talks
about the motivations

00:31:27.270 --> 00:31:29.660
and how to go about doing it.

00:31:29.660 --> 00:31:30.904
One more question.

00:31:30.904 --> 00:31:31.403
Yeah.

00:31:31.403 --> 00:31:32.810
AUDIENCE: What about video ads?

00:31:32.810 --> 00:31:33.920
WAYNE PIEKARSKI:
What about video ads?

00:31:33.920 --> 00:31:35.378
Well, like I said
before, you can't

00:31:35.378 --> 00:31:39.444
play any video of any kind
because video requires the user

00:31:39.444 --> 00:31:40.360
to look at the screen.

00:31:40.360 --> 00:31:44.170
So any video is bad.

00:31:44.170 --> 00:31:45.820
All you've got is
the background image.

00:31:45.820 --> 00:31:48.260
You can't bring up a
full-screen video so no,

00:31:48.260 --> 00:31:50.460
it's definitely not allowed.

00:31:50.460 --> 00:31:52.230
OK, we've run out of
time for questions,

00:31:52.230 --> 00:31:55.020
and we actually have Android
Auto office hours over

00:31:55.020 --> 00:31:56.110
in the code lab room.

00:31:56.110 --> 00:31:57.730
So we're going to have Daniel
[INAUDIBLE] over there,

00:31:57.730 --> 00:31:58.862
I'm going to be there.

00:31:58.862 --> 00:32:01.070
And so please come over
there and have a chat with us

00:32:01.070 --> 00:32:02.110
if you have any more questions.

00:32:02.110 --> 00:32:03.740
But otherwise thanks
for coming, and I hope

00:32:03.740 --> 00:32:04.906
you have a great conference.

00:32:04.906 --> 00:32:06.240
Thank you.

