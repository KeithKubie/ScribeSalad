WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.659
hi everyone I'm machine from Hattie's

00:00:02.659 --> 00:00:02.669
hi everyone I'm machine from Hattie's
 

00:00:02.669 --> 00:00:05.599
hi everyone I'm machine from Hattie's
games today I'm going to talk about our

00:00:05.599 --> 00:00:05.609
games today I'm going to talk about our
 

00:00:05.609 --> 00:00:07.870
games today I'm going to talk about our
test project the next-generation

00:00:07.870 --> 00:00:07.880
test project the next-generation
 

00:00:07.880 --> 00:00:12.770
test project the next-generation
automated test for games two month ago

00:00:12.770 --> 00:00:12.780
automated test for games two month ago
 

00:00:12.780 --> 00:00:17.120
automated test for games two month ago
on GDC we launched an open-source this

00:00:17.120 --> 00:00:17.130
on GDC we launched an open-source this
 

00:00:17.130 --> 00:00:20.029
on GDC we launched an open-source this
project so how many of you here have

00:00:20.029 --> 00:00:20.039
project so how many of you here have
 

00:00:20.039 --> 00:00:27.200
project so how many of you here have
heard of it oh pretty much okay today

00:00:27.200 --> 00:00:27.210
heard of it oh pretty much okay today
 

00:00:27.210 --> 00:00:29.120
heard of it oh pretty much okay today
I'm going to talk about these three

00:00:29.120 --> 00:00:29.130
I'm going to talk about these three
 

00:00:29.130 --> 00:00:32.709
I'm going to talk about these three
topics challenges in game testing and

00:00:32.709 --> 00:00:32.719
topics challenges in game testing and
 

00:00:32.719 --> 00:00:36.799
topics challenges in game testing and
how our test project can help you solve

00:00:36.799 --> 00:00:36.809
how our test project can help you solve
 

00:00:36.809 --> 00:00:39.740
how our test project can help you solve
these problems and also our internal

00:00:39.740 --> 00:00:39.750
these problems and also our internal
 

00:00:39.750 --> 00:00:42.920
these problems and also our internal
practice of large scale real device

00:00:42.920 --> 00:00:42.930
practice of large scale real device
 

00:00:42.930 --> 00:00:48.830
practice of large scale real device
testing so the first issue is that we

00:00:48.830 --> 00:00:48.840
testing so the first issue is that we
 

00:00:48.840 --> 00:00:51.290
testing so the first issue is that we
have so many games to test in that it's

00:00:51.290 --> 00:00:51.300
have so many games to test in that it's
 

00:00:51.300 --> 00:00:55.400
have so many games to test in that it's
games this our games we developed and

00:00:55.400 --> 00:00:55.410
games this our games we developed and
 

00:00:55.410 --> 00:00:59.180
games this our games we developed and
released since 2014 we have released

00:00:59.180 --> 00:00:59.190
released since 2014 we have released
 

00:00:59.190 --> 00:01:03.740
released since 2014 we have released
over 150 mobile games and also we have

00:01:03.740 --> 00:01:03.750
over 150 mobile games and also we have
 

00:01:03.750 --> 00:01:06.109
over 150 mobile games and also we have
run several PC games for over 10 years

00:01:06.109 --> 00:01:06.119
run several PC games for over 10 years
 

00:01:06.119 --> 00:01:09.200
run several PC games for over 10 years
so how do we ensure the high quality of

00:01:09.200 --> 00:01:09.210
so how do we ensure the high quality of
 

00:01:09.210 --> 00:01:11.770
so how do we ensure the high quality of
all these games

00:01:11.770 --> 00:01:11.780
all these games
 

00:01:11.780 --> 00:01:14.510
all these games
another issue is Android device

00:01:14.510 --> 00:01:14.520
another issue is Android device
 

00:01:14.520 --> 00:01:19.039
another issue is Android device
fragmentation and because Android system

00:01:19.039 --> 00:01:19.049
fragmentation and because Android system
 

00:01:19.049 --> 00:01:21.830
fragmentation and because Android system
is vessels and OMS can customize their

00:01:21.830 --> 00:01:21.840
is vessels and OMS can customize their
 

00:01:21.840 --> 00:01:25.880
is vessels and OMS can customize their
own Android phones and this graph shows

00:01:25.880 --> 00:01:25.890
own Android phones and this graph shows
 

00:01:25.890 --> 00:01:28.940
own Android phones and this graph shows
the situation in China you can see

00:01:28.940 --> 00:01:28.950
the situation in China you can see
 

00:01:28.950 --> 00:01:31.840
the situation in China you can see
Samsung Hawaii show me each have

00:01:31.840 --> 00:01:31.850
Samsung Hawaii show me each have
 

00:01:31.850 --> 00:01:35.390
Samsung Hawaii show me each have
thousands of Android models and each

00:01:35.390 --> 00:01:35.400
thousands of Android models and each
 

00:01:35.400 --> 00:01:38.090
thousands of Android models and each
model has different screen resolution

00:01:38.090 --> 00:01:38.100
model has different screen resolution
 

00:01:38.100 --> 00:01:42.560
model has different screen resolution
different system api's or even graph

00:01:42.560 --> 00:01:42.570
different system api's or even graph
 

00:01:42.570 --> 00:01:46.999
different system api's or even graph
drivers in that exclaims we usually need

00:01:46.999 --> 00:01:47.009
drivers in that exclaims we usually need
 

00:01:47.009 --> 00:01:52.580
drivers in that exclaims we usually need
to test over more than 200 Android

00:01:52.580 --> 00:01:52.590
to test over more than 200 Android
 

00:01:52.590 --> 00:01:57.260
to test over more than 200 Android
phones before releasing a game then

00:01:57.260 --> 00:01:57.270
phones before releasing a game then
 

00:01:57.270 --> 00:02:00.170
phones before releasing a game then
let's take a look at the difference of

00:02:00.170 --> 00:02:00.180
let's take a look at the difference of
 

00:02:00.180 --> 00:02:03.800
let's take a look at the difference of
testing between apps and games the first

00:02:03.800 --> 00:02:03.810
testing between apps and games the first
 

00:02:03.810 --> 00:02:07.370
testing between apps and games the first
one is usually our app our games are

00:02:07.370 --> 00:02:07.380
one is usually our app our games are
 

00:02:07.380 --> 00:02:10.160
one is usually our app our games are
released on multiple platforms like

00:02:10.160 --> 00:02:10.170
released on multiple platforms like
 

00:02:10.170 --> 00:02:13.400
released on multiple platforms like
Android iOS the same game work

00:02:13.400 --> 00:02:13.410
Android iOS the same game work
 

00:02:13.410 --> 00:02:15.920
Android iOS the same game work
version of game on different platforms

00:02:15.920 --> 00:02:15.930
version of game on different platforms
 

00:02:15.930 --> 00:02:19.760
version of game on different platforms
and sometimes on desktop just now we

00:02:19.760 --> 00:02:19.770
and sometimes on desktop just now we
 

00:02:19.770 --> 00:02:22.390
and sometimes on desktop just now we
said a Chrome OS right and sometimes

00:02:22.390 --> 00:02:22.400
said a Chrome OS right and sometimes
 

00:02:22.400 --> 00:02:28.040
said a Chrome OS right and sometimes
html5 platforms Council or even VR the

00:02:28.040 --> 00:02:28.050
html5 platforms Council or even VR the
 

00:02:28.050 --> 00:02:31.430
html5 platforms Council or even VR the
next difference is that we have we got

00:02:31.430 --> 00:02:31.440
next difference is that we have we got
 

00:02:31.440 --> 00:02:35.150
next difference is that we have we got
less support from third-party I mean

00:02:35.150 --> 00:02:35.160
less support from third-party I mean
 

00:02:35.160 --> 00:02:38.750
less support from third-party I mean
such as test frameworks or testing tools

00:02:38.750 --> 00:02:38.760
such as test frameworks or testing tools
 

00:02:38.760 --> 00:02:40.790
such as test frameworks or testing tools
and platforms

00:02:40.790 --> 00:02:40.800
and platforms
 

00:02:40.800 --> 00:02:44.630
and platforms
unlike apps Google provide app

00:02:44.630 --> 00:02:44.640
unlike apps Google provide app
 

00:02:44.640 --> 00:02:47.420
unlike apps Google provide app
developers with test frameworks like

00:02:47.420 --> 00:02:47.430
developers with test frameworks like
 

00:02:47.430 --> 00:02:50.480
developers with test frameworks like
your Automator or espresso and also

00:02:50.480 --> 00:02:50.490
your Automator or espresso and also
 

00:02:50.490 --> 00:02:53.540
your Automator or espresso and also
testing tools are integrated in Android

00:02:53.540 --> 00:02:53.550
testing tools are integrated in Android
 

00:02:53.550 --> 00:02:56.600
testing tools are integrated in Android
studio and also we have firebase test

00:02:56.600 --> 00:02:56.610
studio and also we have firebase test
 

00:02:56.610 --> 00:03:00.560
studio and also we have firebase test
lab for app testing another big issue is

00:03:00.560 --> 00:03:00.570
lab for app testing another big issue is
 

00:03:00.570 --> 00:03:04.630
lab for app testing another big issue is
that games always need more test cases

00:03:04.630 --> 00:03:04.640
that games always need more test cases
 

00:03:04.640 --> 00:03:08.570
that games always need more test cases
because users there are more content

00:03:08.570 --> 00:03:08.580
because users there are more content
 

00:03:08.580 --> 00:03:12.320
because users there are more content
that can be played in in a game than in

00:03:12.320 --> 00:03:12.330
that can be played in in a game than in
 

00:03:12.330 --> 00:03:16.970
that can be played in in a game than in
an app so the test cases are increases

00:03:16.970 --> 00:03:16.980
an app so the test cases are increases
 

00:03:16.980 --> 00:03:23.780
an app so the test cases are increases
exponentially in games so how do we

00:03:23.780 --> 00:03:23.790
exponentially in games so how do we
 

00:03:23.790 --> 00:03:27.470
exponentially in games so how do we
solve these issues we can hire more and

00:03:27.470 --> 00:03:27.480
solve these issues we can hire more and
 

00:03:27.480 --> 00:03:30.650
solve these issues we can hire more and
more people to do testing but hiring

00:03:30.650 --> 00:03:30.660
more people to do testing but hiring
 

00:03:30.660 --> 00:03:33.770
more people to do testing but hiring
more people to do tests on 200 Android

00:03:33.770 --> 00:03:33.780
more people to do tests on 200 Android
 

00:03:33.780 --> 00:03:34.580
more people to do tests on 200 Android
phones

00:03:34.580 --> 00:03:34.590
phones
 

00:03:34.590 --> 00:03:37.880
phones
that's not tolerable I think even if

00:03:37.880 --> 00:03:37.890
that's not tolerable I think even if
 

00:03:37.890 --> 00:03:42.770
that's not tolerable I think even if
it's in China so we can so automation is

00:03:42.770 --> 00:03:42.780
it's in China so we can so automation is
 

00:03:42.780 --> 00:03:45.710
it's in China so we can so automation is
here to help actually we have developed

00:03:45.710 --> 00:03:45.720
here to help actually we have developed
 

00:03:45.720 --> 00:03:49.330
here to help actually we have developed
this project for three years internally

00:03:49.330 --> 00:03:49.340
this project for three years internally
 

00:03:49.340 --> 00:03:53.090
this project for three years internally
and last year on Google i/o and I talked

00:03:53.090 --> 00:03:53.100
and last year on Google i/o and I talked
 

00:03:53.100 --> 00:03:56.330
and last year on Google i/o and I talked
with firebase test lab team and we

00:03:56.330 --> 00:03:56.340
with firebase test lab team and we
 

00:03:56.340 --> 00:04:01.780
with firebase test lab team and we
cooperate open source in this project so

00:04:01.780 --> 00:04:01.790
 

00:04:01.790 --> 00:04:05.690
let me introduce a test IDE first it's a

00:04:05.690 --> 00:04:05.700
let me introduce a test IDE first it's a
 

00:04:05.700 --> 00:04:09.620
let me introduce a test IDE first it's a
desktop IDE the left the right side is

00:04:09.620 --> 00:04:09.630
desktop IDE the left the right side is
 

00:04:09.630 --> 00:04:11.979
desktop IDE the left the right side is
the mirror window of an Android phone

00:04:11.979 --> 00:04:11.989
the mirror window of an Android phone
 

00:04:11.989 --> 00:04:16.400
the mirror window of an Android phone
connecting with your PC via ADB and the

00:04:16.400 --> 00:04:16.410
connecting with your PC via ADB and the
 

00:04:16.410 --> 00:04:19.400
connecting with your PC via ADB and the
middle part is a code editor where you

00:04:19.400 --> 00:04:19.410
middle part is a code editor where you
 

00:04:19.410 --> 00:04:21.440
middle part is a code editor where you
can write average for python code and

00:04:21.440 --> 00:04:21.450
can write average for python code and
 

00:04:21.450 --> 00:04:24.380
can write average for python code and
the left part shows the hierarchy of

00:04:24.380 --> 00:04:24.390
the left part shows the hierarchy of
 

00:04:24.390 --> 00:04:27.379
the left part shows the hierarchy of
this the UI hierarchy of this unity game

00:04:27.379 --> 00:04:27.389
this the UI hierarchy of this unity game
 

00:04:27.389 --> 00:04:31.309
this the UI hierarchy of this unity game
and also the API is provided by our test

00:04:31.309 --> 00:04:31.319
and also the API is provided by our test
 

00:04:31.319 --> 00:04:35.770
and also the API is provided by our test
framework and when you operate on the

00:04:35.770 --> 00:04:35.780
framework and when you operate on the
 

00:04:35.780 --> 00:04:39.499
framework and when you operate on the
screen window testicle will be

00:04:39.499 --> 00:04:39.509
screen window testicle will be
 

00:04:39.509 --> 00:04:42.709
screen window testicle will be
automatically generated on the in the

00:04:42.709 --> 00:04:42.719
automatically generated on the in the
 

00:04:42.719 --> 00:04:49.399
automatically generated on the in the
code editor let's see the demo click the

00:04:49.399 --> 00:04:49.409
code editor let's see the demo click the
 

00:04:49.409 --> 00:04:56.929
code editor let's see the demo click the
recording button and perform a touch

00:04:56.929 --> 00:04:56.939
recording button and perform a touch
 

00:04:56.939 --> 00:04:59.990
recording button and perform a touch
action it will generate a sentence in

00:04:59.990 --> 00:05:00.000
action it will generate a sentence in
 

00:05:00.000 --> 00:05:00.999
action it will generate a sentence in
Python

00:05:00.999 --> 00:05:01.009
Python
 

00:05:01.009 --> 00:05:09.999
Python
also you can agitate a swipe action and

00:05:09.999 --> 00:05:10.009
also you can agitate a swipe action and
 

00:05:10.009 --> 00:05:17.749
also you can agitate a swipe action and
then we can sleep one second also make

00:05:17.749 --> 00:05:17.759
then we can sleep one second also make
 

00:05:17.759 --> 00:05:21.129
then we can sleep one second also make
assertions of the UI show up

00:05:21.129 --> 00:05:21.139
assertions of the UI show up
 

00:05:21.139 --> 00:05:23.899
assertions of the UI show up
yes then we can write it immediately on

00:05:23.899 --> 00:05:23.909
yes then we can write it immediately on
 

00:05:23.909 --> 00:05:32.059
yes then we can write it immediately on
this form to see if it works after you

00:05:32.059 --> 00:05:32.069
this form to see if it works after you
 

00:05:32.069 --> 00:05:35.600
this form to see if it works after you
run the tests yeah it worked after you

00:05:35.600 --> 00:05:35.610
run the tests yeah it worked after you
 

00:05:35.610 --> 00:05:39.350
run the tests yeah it worked after you
write you can share the HTML report it

00:05:39.350 --> 00:05:39.360
write you can share the HTML report it
 

00:05:39.360 --> 00:05:45.559
write you can share the HTML report it
shows every step of your tests yeah if

00:05:45.559 --> 00:05:45.569
shows every step of your tests yeah if
 

00:05:45.569 --> 00:05:48.140
shows every step of your tests yeah if
any step went wrong it will be labeled

00:05:48.140 --> 00:05:48.150
any step went wrong it will be labeled
 

00:05:48.150 --> 00:05:52.209
any step went wrong it will be labeled
red and you can see the failure point

00:05:52.209 --> 00:05:52.219
red and you can see the failure point
 

00:05:52.219 --> 00:05:56.360
red and you can see the failure point
you may have noticed that we have to we

00:05:56.360 --> 00:05:56.370
you may have noticed that we have to we
 

00:05:56.370 --> 00:05:58.459
you may have noticed that we have to we
have to underline test framework here

00:05:58.459 --> 00:05:58.469
have to underline test framework here
 

00:05:58.469 --> 00:06:00.950
have to underline test framework here
the first thing is it has the framework

00:06:00.950 --> 00:06:00.960
the first thing is it has the framework
 

00:06:00.960 --> 00:06:04.040
the first thing is it has the framework
it uses image recognition have a

00:06:04.040 --> 00:06:04.050
it uses image recognition have a
 

00:06:04.050 --> 00:06:06.429
it uses image recognition have a
knowledge to locate the UI elements and

00:06:06.429 --> 00:06:06.439
knowledge to locate the UI elements and
 

00:06:06.439 --> 00:06:10.790
knowledge to locate the UI elements and
then the use device API to perform

00:06:10.790 --> 00:06:10.800
then the use device API to perform
 

00:06:10.800 --> 00:06:15.529
then the use device API to perform
simulated input yes this is the

00:06:15.529 --> 00:06:15.539
simulated input yes this is the
 

00:06:15.539 --> 00:06:19.610
simulated input yes this is the
structure of a test we provide users

00:06:19.610 --> 00:06:19.620
structure of a test we provide users
 

00:06:19.620 --> 00:06:24.829
structure of a test we provide users
with simple test api like a simulator

00:06:24.829 --> 00:06:24.839
with simple test api like a simulator
 

00:06:24.839 --> 00:06:28.249
with simple test api like a simulator
input like making sushi and then it uses

00:06:28.249 --> 00:06:28.259
input like making sushi and then it uses
 

00:06:28.259 --> 00:06:31.420
input like making sushi and then it uses
image recognition to locate the UI and

00:06:31.420 --> 00:06:31.430
image recognition to locate the UI and
 

00:06:31.430 --> 00:06:35.570
image recognition to locate the UI and
then we have a underlying abstract layer

00:06:35.570 --> 00:06:35.580
then we have a underlying abstract layer
 

00:06:35.580 --> 00:06:41.180
then we have a underlying abstract layer
of platform api we unify the

00:06:41.180 --> 00:06:41.190
of platform api we unify the
 

00:06:41.190 --> 00:06:44.270
of platform api we unify the
simulating input api's of different

00:06:44.270 --> 00:06:44.280
simulating input api's of different
 

00:06:44.280 --> 00:06:47.660
simulating input api's of different
platforms so that user can run their

00:06:47.660 --> 00:06:47.670
platforms so that user can run their
 

00:06:47.670 --> 00:06:50.930
platforms so that user can run their
script on different platforms like

00:06:50.930 --> 00:06:50.940
script on different platforms like
 

00:06:50.940 --> 00:06:58.520
script on different platforms like
Android iOS and Windows and we are there

00:06:58.520 --> 00:06:58.530
Android iOS and Windows and we are there
 

00:06:58.530 --> 00:07:02.060
Android iOS and Windows and we are there
is another framework called poco this

00:07:02.060 --> 00:07:02.070
is another framework called poco this
 

00:07:02.070 --> 00:07:05.960
is another framework called poco this
this framework is similar to the test

00:07:05.960 --> 00:07:05.970
this framework is similar to the test
 

00:07:05.970 --> 00:07:09.260
this framework is similar to the test
frameworks for apps like your Automator

00:07:09.260 --> 00:07:09.270
frameworks for apps like your Automator
 

00:07:09.270 --> 00:07:14.480
frameworks for apps like your Automator
for full Android but most games uses a

00:07:14.480 --> 00:07:14.490
for full Android but most games uses a
 

00:07:14.490 --> 00:07:18.920
for full Android but most games uses a
graphic api like OpenGL or Vulcan to

00:07:18.920 --> 00:07:18.930
graphic api like OpenGL or Vulcan to
 

00:07:18.930 --> 00:07:21.500
graphic api like OpenGL or Vulcan to
render their UI widget so we can

00:07:21.500 --> 00:07:21.510
render their UI widget so we can
 

00:07:21.510 --> 00:07:24.170
render their UI widget so we can
directly use your out mater

00:07:24.170 --> 00:07:24.180
directly use your out mater
 

00:07:24.180 --> 00:07:26.900
directly use your out mater
our Android for games so we developed

00:07:26.900 --> 00:07:26.910
our Android for games so we developed
 

00:07:26.910 --> 00:07:31.780
our Android for games so we developed
oakum yeah this is how it works

00:07:31.780 --> 00:07:31.790
oakum yeah this is how it works
 

00:07:31.790 --> 00:07:35.780
oakum yeah this is how it works
we also have a underlying abstract layer

00:07:35.780 --> 00:07:35.790
we also have a underlying abstract layer
 

00:07:35.790 --> 00:07:39.920
we also have a underlying abstract layer
of device abstraction here for different

00:07:39.920 --> 00:07:39.930
of device abstraction here for different
 

00:07:39.930 --> 00:07:43.820
of device abstraction here for different
game engines we provide each game engine

00:07:43.820 --> 00:07:43.830
game engines we provide each game engine
 

00:07:43.830 --> 00:07:47.150
game engines we provide each game engine
and SDK so that the test framework can

00:07:47.150 --> 00:07:47.160
and SDK so that the test framework can
 

00:07:47.160 --> 00:07:49.760
and SDK so that the test framework can
communicate with the game engine we are

00:07:49.760 --> 00:07:49.770
communicate with the game engine we are
 

00:07:49.770 --> 00:07:54.380
communicate with the game engine we are
JSON JSON RPC and then we unify a

00:07:54.380 --> 00:07:54.390
JSON JSON RPC and then we unify a
 

00:07:54.390 --> 00:07:57.500
JSON JSON RPC and then we unify a
different game engines so we can write

00:07:57.500 --> 00:07:57.510
different game engines so we can write
 

00:07:57.510 --> 00:08:01.880
different game engines so we can write
tests for different game engines yeah

00:08:01.880 --> 00:08:01.890
tests for different game engines yeah
 

00:08:01.890 --> 00:08:04.970
tests for different game engines yeah
also the custom engines in the morning

00:08:04.970 --> 00:08:04.980
also the custom engines in the morning
 

00:08:04.980 --> 00:08:08.900
also the custom engines in the morning
eyes I saw most of you are using custom

00:08:08.900 --> 00:08:08.910
eyes I saw most of you are using custom
 

00:08:08.910 --> 00:08:12.200
eyes I saw most of you are using custom
engines we provide multiple language SDK

00:08:12.200 --> 00:08:12.210
engines we provide multiple language SDK
 

00:08:12.210 --> 00:08:14.900
engines we provide multiple language SDK
so you can implement in your own game

00:08:14.900 --> 00:08:14.910
so you can implement in your own game
 

00:08:14.910 --> 00:08:16.880
so you can implement in your own game
managing and start using our test

00:08:16.880 --> 00:08:16.890
managing and start using our test
 

00:08:16.890 --> 00:08:21.680
managing and start using our test
framework and also our tools now here is

00:08:21.680 --> 00:08:21.690
framework and also our tools now here is
 

00:08:21.690 --> 00:08:26.300
framework and also our tools now here is
a comparison it has to use image

00:08:26.300 --> 00:08:26.310
a comparison it has to use image
 

00:08:26.310 --> 00:08:29.380
a comparison it has to use image
recognition to locate UI and use

00:08:29.380 --> 00:08:29.390
recognition to locate UI and use
 

00:08:29.390 --> 00:08:33.110
recognition to locate UI and use
platform API to perform simulated input

00:08:33.110 --> 00:08:33.120
platform API to perform simulated input
 

00:08:33.120 --> 00:08:35.540
platform API to perform simulated input
and what's cool here is it does not

00:08:35.540 --> 00:08:35.550
and what's cool here is it does not
 

00:08:35.550 --> 00:08:38.180
and what's cool here is it does not
require any instrumentation just plug in

00:08:38.180 --> 00:08:38.190
require any instrumentation just plug in
 

00:08:38.190 --> 00:08:41.690
require any instrumentation just plug in
your phone and start using and we

00:08:41.690 --> 00:08:41.700
your phone and start using and we
 

00:08:41.700 --> 00:08:45.170
your phone and start using and we
support multiple platforms and Poco uses

00:08:45.170 --> 00:08:45.180
support multiple platforms and Poco uses
 

00:08:45.180 --> 00:08:48.920
support multiple platforms and Poco uses
your hierarchy inspection and use JSON

00:08:48.920 --> 00:08:48.930
your hierarchy inspection and use JSON
 

00:08:48.930 --> 00:08:52.010
your hierarchy inspection and use JSON
RPC to communicate with the SDK in game

00:08:52.010 --> 00:08:52.020
RPC to communicate with the SDK in game
 

00:08:52.020 --> 00:08:52.860
RPC to communicate with the SDK in game
engine

00:08:52.860 --> 00:08:52.870
engine
 

00:08:52.870 --> 00:08:56.670
engine
now you need to integrate our SDK in it

00:08:56.670 --> 00:08:56.680
now you need to integrate our SDK in it
 

00:08:56.680 --> 00:08:58.650
now you need to integrate our SDK in it
usually takes less than ten minutes and

00:08:58.650 --> 00:08:58.660
usually takes less than ten minutes and
 

00:08:58.660 --> 00:09:02.460
usually takes less than ten minutes and
now we support unity and Coco's this two

00:09:02.460 --> 00:09:02.470
now we support unity and Coco's this two
 

00:09:02.470 --> 00:09:05.310
now we support unity and Coco's this two
game engine and also Android native app

00:09:05.310 --> 00:09:05.320
game engine and also Android native app
 

00:09:05.320 --> 00:09:08.730
game engine and also Android native app
we use we implement an SDK using

00:09:08.730 --> 00:09:08.740
we use we implement an SDK using
 

00:09:08.740 --> 00:09:11.160
we use we implement an SDK using
accessibility service so you don't need

00:09:11.160 --> 00:09:11.170
accessibility service so you don't need
 

00:09:11.170 --> 00:09:14.550
accessibility service so you don't need
to integrate anything into your app for

00:09:14.550 --> 00:09:14.560
to integrate anything into your app for
 

00:09:14.560 --> 00:09:17.370
to integrate anything into your app for
Android native apps and also custom game

00:09:17.370 --> 00:09:17.380
Android native apps and also custom game
 

00:09:17.380 --> 00:09:22.680
Android native apps and also custom game
engine so how do you choose which

00:09:22.680 --> 00:09:22.690
engine so how do you choose which
 

00:09:22.690 --> 00:09:25.140
engine so how do you choose which
framework to use here are some

00:09:25.140 --> 00:09:25.150
framework to use here are some
 

00:09:25.150 --> 00:09:28.260
framework to use here are some
suggestions from us actually in that is

00:09:28.260 --> 00:09:28.270
suggestions from us actually in that is
 

00:09:28.270 --> 00:09:30.750
suggestions from us actually in that is
we have written thousands of tests for

00:09:30.750 --> 00:09:30.760
we have written thousands of tests for
 

00:09:30.760 --> 00:09:35.810
we have written thousands of tests for
different type of games internally and

00:09:35.810 --> 00:09:35.820
different type of games internally and
 

00:09:35.820 --> 00:09:39.690
different type of games internally and
the advantage of EDS is obvious it's a

00:09:39.690 --> 00:09:39.700
the advantage of EDS is obvious it's a
 

00:09:39.700 --> 00:09:42.840
the advantage of EDS is obvious it's a
requires no instrumentation and using

00:09:42.840 --> 00:09:42.850
requires no instrumentation and using
 

00:09:42.850 --> 00:09:46.740
requires no instrumentation and using
open CV to do to do assertion to make

00:09:46.740 --> 00:09:46.750
open CV to do to do assertion to make
 

00:09:46.750 --> 00:09:49.620
open CV to do to do assertion to make
assertion of the UI is reliable because

00:09:49.620 --> 00:09:49.630
assertion of the UI is reliable because
 

00:09:49.630 --> 00:09:52.920
assertion of the UI is reliable because
it checks exactly what users are

00:09:52.920 --> 00:09:52.930
it checks exactly what users are
 

00:09:52.930 --> 00:09:57.630
it checks exactly what users are
expected to see and for poco Sin City

00:09:57.630 --> 00:09:57.640
expected to see and for poco Sin City
 

00:09:57.640 --> 00:10:00.480
expected to see and for poco Sin City
uses you our hierarchy inspection it can

00:10:00.480 --> 00:10:00.490
uses you our hierarchy inspection it can
 

00:10:00.490 --> 00:10:04.470
uses you our hierarchy inspection it can
be more accurate especially for cases of

00:10:04.470 --> 00:10:04.480
be more accurate especially for cases of
 

00:10:04.480 --> 00:10:07.770
be more accurate especially for cases of
a 3d object when the objects change

00:10:07.770 --> 00:10:07.780
a 3d object when the objects change
 

00:10:07.780 --> 00:10:12.750
a 3d object when the objects change
their orientation in games yeah and this

00:10:12.750 --> 00:10:12.760
their orientation in games yeah and this
 

00:10:12.760 --> 00:10:17.790
their orientation in games yeah and this
project this poco is similar to test

00:10:17.790 --> 00:10:17.800
project this poco is similar to test
 

00:10:17.800 --> 00:10:21.510
project this poco is similar to test
frameworks for apps like a cure

00:10:21.510 --> 00:10:21.520
frameworks for apps like a cure
 

00:10:21.520 --> 00:10:24.510
frameworks for apps like a cure
Automation and it covers the what is

00:10:24.510 --> 00:10:24.520
Automation and it covers the what is
 

00:10:24.520 --> 00:10:31.200
Automation and it covers the what is
missing for games and we released this

00:10:31.200 --> 00:10:31.210
missing for games and we released this
 

00:10:31.210 --> 00:10:35.910
missing for games and we released this
to a project on GDC two month ago and we

00:10:35.910 --> 00:10:35.920
to a project on GDC two month ago and we
 

00:10:35.920 --> 00:10:42.120
to a project on GDC two month ago and we
got six thousand downloads and over one

00:10:42.120 --> 00:10:42.130
got six thousand downloads and over one
 

00:10:42.130 --> 00:10:45.330
got six thousand downloads and over one
hundred one thousand stars in this two

00:10:45.330 --> 00:10:45.340
hundred one thousand stars in this two
 

00:10:45.340 --> 00:10:48.180
hundred one thousand stars in this two
month and please try our project and

00:10:48.180 --> 00:10:48.190
month and please try our project and
 

00:10:48.190 --> 00:10:52.920
month and please try our project and
star assange it hub but is that it we

00:10:52.920 --> 00:10:52.930
star assange it hub but is that it we
 

00:10:52.930 --> 00:10:55.170
star assange it hub but is that it we
have two more new features in this two

00:10:55.170 --> 00:10:55.180
have two more new features in this two
 

00:10:55.180 --> 00:11:02.010
have two more new features in this two
month first we support iOS actually we

00:11:02.010 --> 00:11:02.020
month first we support iOS actually we
 

00:11:02.020 --> 00:11:04.680
month first we support iOS actually we
have supported ours last year but the

00:11:04.680 --> 00:11:04.690
have supported ours last year but the
 

00:11:04.690 --> 00:11:06.490
have supported ours last year but the
performance is not

00:11:06.490 --> 00:11:06.500
performance is not
 

00:11:06.500 --> 00:11:09.360
performance is not
good enough to release to be released

00:11:09.360 --> 00:11:09.370
good enough to release to be released
 

00:11:09.370 --> 00:11:14.710
good enough to release to be released
let's see this demo you're connecting

00:11:14.710 --> 00:11:14.720
let's see this demo you're connecting
 

00:11:14.720 --> 00:11:20.319
let's see this demo you're connecting
your iOS with your Xcode then you can

00:11:20.319 --> 00:11:20.329
your iOS with your Xcode then you can
 

00:11:20.329 --> 00:11:24.790
your iOS with your Xcode then you can
operate the screen just like for Android

00:11:24.790 --> 00:11:24.800
operate the screen just like for Android
 

00:11:24.800 --> 00:11:33.390
operate the screen just like for Android
phones

00:11:33.390 --> 00:11:33.400
 

00:11:33.400 --> 00:11:48.120
and this is one of our games

00:11:48.120 --> 00:11:48.130
 

00:11:48.130 --> 00:11:51.060
then you can run the tests on this

00:11:51.060 --> 00:11:51.070
then you can run the tests on this
 

00:11:51.070 --> 00:12:10.360
then you can run the tests on this
iPhone

00:12:10.360 --> 00:12:10.370
 

00:12:10.370 --> 00:12:13.749
that's it the back end of this iOS

00:12:13.749 --> 00:12:13.759
that's it the back end of this iOS
 

00:12:13.759 --> 00:12:16.660
that's it the back end of this iOS
support is origin originated from

00:12:16.660 --> 00:12:16.670
support is origin originated from
 

00:12:16.670 --> 00:12:20.230
support is origin originated from
Facebook web driver agent by the web

00:12:20.230 --> 00:12:20.240
Facebook web driver agent by the web
 

00:12:20.240 --> 00:12:22.480
Facebook web driver agent by the web
driver agent is the problem is is that

00:12:22.480 --> 00:12:22.490
driver agent is the problem is is that
 

00:12:22.490 --> 00:12:26.049
driver agent is the problem is is that
is too slow a simple touch action can

00:12:26.049 --> 00:12:26.059
is too slow a simple touch action can
 

00:12:26.059 --> 00:12:29.110
is too slow a simple touch action can
take as long as one second and it's not

00:12:29.110 --> 00:12:29.120
take as long as one second and it's not
 

00:12:29.120 --> 00:12:32.499
take as long as one second and it's not
tolerable for games automation so we

00:12:32.499 --> 00:12:32.509
tolerable for games automation so we
 

00:12:32.509 --> 00:12:37.269
tolerable for games automation so we
optimize most of its API last last month

00:12:37.269 --> 00:12:37.279
optimize most of its API last last month
 

00:12:37.279 --> 00:12:41.590
optimize most of its API last last month
and now the frame rate can be up to 15

00:12:41.590 --> 00:12:41.600
and now the frame rate can be up to 15
 

00:12:41.600 --> 00:12:49.540
and now the frame rate can be up to 15
fps in the add has ID another feature is

00:12:49.540 --> 00:12:49.550
fps in the add has ID another feature is
 

00:12:49.550 --> 00:12:56.429
fps in the add has ID another feature is
we support web pages automation you can

00:12:56.429 --> 00:12:56.439
we support web pages automation you can
 

00:12:56.439 --> 00:13:00.819
we support web pages automation you can
open the Chrome browser in the IDE and

00:13:00.819 --> 00:13:00.829
open the Chrome browser in the IDE and
 

00:13:00.829 --> 00:13:05.110
open the Chrome browser in the IDE and
then you can operate on the Chrome and

00:13:05.110 --> 00:13:05.120
then you can operate on the Chrome and
 

00:13:05.120 --> 00:13:08.110
then you can operate on the Chrome and
then the hole will be automatically

00:13:08.110 --> 00:13:08.120
then the hole will be automatically
 

00:13:08.120 --> 00:13:12.519
then the hole will be automatically
generated yeah the superb is based on

00:13:12.519 --> 00:13:12.529
generated yeah the superb is based on
 

00:13:12.529 --> 00:13:17.769
generated yeah the superb is based on
selenium framework also you can use it

00:13:17.769 --> 00:13:17.779
selenium framework also you can use it
 

00:13:17.779 --> 00:13:27.879
selenium framework also you can use it
has the API to make assertions

00:13:27.879 --> 00:13:27.889
 

00:13:27.889 --> 00:13:30.559
to run the test and then generate the

00:13:30.559 --> 00:13:30.569
to run the test and then generate the
 

00:13:30.569 --> 00:13:33.639
to run the test and then generate the
report since

00:13:33.639 --> 00:13:33.649
report since
 

00:13:33.649 --> 00:13:36.799
report since
selenium is a quite material in web

00:13:36.799 --> 00:13:36.809
selenium is a quite material in web
 

00:13:36.809 --> 00:13:39.559
selenium is a quite material in web
pages automation we have no reason to

00:13:39.559 --> 00:13:39.569
pages automation we have no reason to
 

00:13:39.569 --> 00:13:42.739
pages automation we have no reason to
reinvent it so we just write we just

00:13:42.739 --> 00:13:42.749
reinvent it so we just write we just
 

00:13:42.749 --> 00:13:46.850
reinvent it so we just write we just
wrote a plug-in for a test IDE to to

00:13:46.850 --> 00:13:46.860
wrote a plug-in for a test IDE to to
 

00:13:46.860 --> 00:13:49.249
wrote a plug-in for a test IDE to to
help recording these web pages

00:13:49.249 --> 00:13:49.259
help recording these web pages
 

00:13:49.259 --> 00:13:55.610
help recording these web pages
automation right I think he will be

00:13:55.610 --> 00:13:55.620
automation right I think he will be
 

00:13:55.620 --> 00:13:59.650
automation right I think he will be
useful if you are releasing game on HTML

00:13:59.650 --> 00:13:59.660
useful if you are releasing game on HTML
 

00:13:59.660 --> 00:14:05.059
useful if you are releasing game on HTML
platform until now we talked about a

00:14:05.059 --> 00:14:05.069
platform until now we talked about a
 

00:14:05.069 --> 00:14:08.259
platform until now we talked about a
test project you can use a test IDE to

00:14:08.259 --> 00:14:08.269
test project you can use a test IDE to
 

00:14:08.269 --> 00:14:13.069
test project you can use a test IDE to
record and and run the test on your PC

00:14:13.069 --> 00:14:13.079
record and and run the test on your PC
 

00:14:13.079 --> 00:14:16.269
record and and run the test on your PC
and on your phone but how do it has to

00:14:16.269 --> 00:14:16.279
and on your phone but how do it has to
 

00:14:16.279 --> 00:14:21.110
and on your phone but how do it has to
hang the reserved Android phones the

00:14:21.110 --> 00:14:21.120
hang the reserved Android phones the
 

00:14:21.120 --> 00:14:23.290
hang the reserved Android phones the
first thing is firebase test lab

00:14:23.290 --> 00:14:23.300
first thing is firebase test lab
 

00:14:23.300 --> 00:14:26.869
first thing is firebase test lab
firebase test lab is a test service

00:14:26.869 --> 00:14:26.879
firebase test lab is a test service
 

00:14:26.879 --> 00:14:29.299
firebase test lab is a test service
provided by Google firebase team and

00:14:29.299 --> 00:14:29.309
provided by Google firebase team and
 

00:14:29.309 --> 00:14:32.600
provided by Google firebase team and
what we do cooperating with their team

00:14:32.600 --> 00:14:32.610
what we do cooperating with their team
 

00:14:32.610 --> 00:14:36.290
what we do cooperating with their team
is we support running a test and poco

00:14:36.290 --> 00:14:36.300
is we support running a test and poco
 

00:14:36.300 --> 00:14:40.699
is we support running a test and poco
script on firebase test lab and you can

00:14:40.699 --> 00:14:40.709
script on firebase test lab and you can
 

00:14:40.709 --> 00:14:43.970
script on firebase test lab and you can
use artists ID to bundle your your test

00:14:43.970 --> 00:14:43.980
use artists ID to bundle your your test
 

00:14:43.980 --> 00:14:46.730
use artists ID to bundle your your test
script into an apk and then you can

00:14:46.730 --> 00:14:46.740
script into an apk and then you can
 

00:14:46.740 --> 00:14:50.569
script into an apk and then you can
upload it to the FTL webpage and then

00:14:50.569 --> 00:14:50.579
upload it to the FTL webpage and then
 

00:14:50.579 --> 00:14:53.960
upload it to the FTL webpage and then
you can start an instrumentation test

00:14:53.960 --> 00:14:53.970
you can start an instrumentation test
 

00:14:53.970 --> 00:14:57.829
you can start an instrumentation test
and use the cloud of devices provided by

00:14:57.829 --> 00:14:57.839
and use the cloud of devices provided by
 

00:14:57.839 --> 00:15:04.269
and use the cloud of devices provided by
FTL and this is our internal device form

00:15:04.269 --> 00:15:04.279
FTL and this is our internal device form
 

00:15:04.279 --> 00:15:08.439
FTL and this is our internal device form
we have we have set up a device form of

00:15:08.439 --> 00:15:08.449
we have we have set up a device form of
 

00:15:08.449 --> 00:15:12.439
we have we have set up a device form of
200 devices to have Android devices and

00:15:12.439 --> 00:15:12.449
200 devices to have Android devices and
 

00:15:12.449 --> 00:15:15.759
200 devices to have Android devices and
we have written now the number could be

00:15:15.759 --> 00:15:15.769
we have written now the number could be
 

00:15:15.769 --> 00:15:20.269
we have written now the number could be
2006 and we run those scripts of

00:15:20.269 --> 00:15:20.279
2006 and we run those scripts of
 

00:15:20.279 --> 00:15:22.400
2006 and we run those scripts of
different games every week because our

00:15:22.400 --> 00:15:22.410
different games every week because our
 

00:15:22.410 --> 00:15:26.929
different games every week because our
game are updated weekly and let's see

00:15:26.929 --> 00:15:26.939
game are updated weekly and let's see
 

00:15:26.939 --> 00:15:30.429
game are updated weekly and let's see
how it works

00:15:30.429 --> 00:15:30.439
 

00:15:30.439 --> 00:15:40.450
yeah

00:15:40.450 --> 00:15:40.460
 

00:15:40.460 --> 00:15:43.950
it's just soft game and around the test

00:15:43.950 --> 00:15:43.960
it's just soft game and around the test
 

00:15:43.960 --> 00:15:59.740
it's just soft game and around the test
generated by adversity

00:15:59.740 --> 00:15:59.750
 

00:15:59.750 --> 00:16:03.999
yeah that's it as for our roadmap for

00:16:03.999 --> 00:16:04.009
yeah that's it as for our roadmap for
 

00:16:04.009 --> 00:16:07.809
yeah that's it as for our roadmap for
this automation project we are intended

00:16:07.809 --> 00:16:07.819
this automation project we are intended
 

00:16:07.819 --> 00:16:11.499
this automation project we are intended
we intended to support more clients iOS

00:16:11.499 --> 00:16:11.509
we intended to support more clients iOS
 

00:16:11.509 --> 00:16:15.490
we intended to support more clients iOS
Android emulator and web pages these are

00:16:15.490 --> 00:16:15.500
Android emulator and web pages these are
 

00:16:15.500 --> 00:16:19.290
Android emulator and web pages these are
in beta version you can try it now and

00:16:19.290 --> 00:16:19.300
in beta version you can try it now and
 

00:16:19.300 --> 00:16:23.470
in beta version you can try it now and
feel free to to fire us a issue if you

00:16:23.470 --> 00:16:23.480
feel free to to fire us a issue if you
 

00:16:23.480 --> 00:16:27.850
feel free to to fire us a issue if you
find any pack and also we are hybrid

00:16:27.850 --> 00:16:27.860
find any pack and also we are hybrid
 

00:16:27.860 --> 00:16:31.559
find any pack and also we are hybrid
apps in Unreal Engine it's in the future

00:16:31.559 --> 00:16:31.569
apps in Unreal Engine it's in the future
 

00:16:31.569 --> 00:16:35.860
apps in Unreal Engine it's in the future
also we supported we supported Android

00:16:35.860 --> 00:16:35.870
also we supported we supported Android
 

00:16:35.870 --> 00:16:40.110
also we supported we supported Android
TV but I'm not sure about Chrome OS but

00:16:40.110 --> 00:16:40.120
TV but I'm not sure about Chrome OS but
 

00:16:40.120 --> 00:16:45.939
TV but I'm not sure about Chrome OS but
maybe it works and also another

00:16:45.939 --> 00:16:45.949
maybe it works and also another
 

00:16:45.949 --> 00:16:50.800
maybe it works and also another
important thing is we we we want to

00:16:50.800 --> 00:16:50.810
important thing is we we we want to
 

00:16:50.810 --> 00:16:53.470
important thing is we we we want to
build up the open-source community for

00:16:53.470 --> 00:16:53.480
build up the open-source community for
 

00:16:53.480 --> 00:16:57.869
build up the open-source community for
this project and I hope more and more

00:16:57.869 --> 00:16:57.879
this project and I hope more and more
 

00:16:57.879 --> 00:17:00.519
this project and I hope more and more
developers like it and get involved in

00:17:00.519 --> 00:17:00.529
developers like it and get involved in
 

00:17:00.529 --> 00:17:03.970
developers like it and get involved in
this project yeah thank you and any

00:17:03.970 --> 00:17:03.980
this project yeah thank you and any
 

00:17:03.980 --> 00:17:30.799
this project yeah thank you and any
question

00:17:30.799 --> 00:17:30.809
 

00:17:30.809 --> 00:17:32.640
you mentioned you're using the

00:17:32.640 --> 00:17:32.650
you mentioned you're using the
 

00:17:32.650 --> 00:17:35.669
you mentioned you're using the
accessibility service did you have any

00:17:35.669 --> 00:17:35.679
accessibility service did you have any
 

00:17:35.679 --> 00:17:37.740
accessibility service did you have any
issue with that when that was restricted

00:17:37.740 --> 00:17:37.750
issue with that when that was restricted
 

00:17:37.750 --> 00:17:41.940
issue with that when that was restricted
recently the accessibility service it

00:17:41.940 --> 00:17:41.950
recently the accessibility service it
 

00:17:41.950 --> 00:17:44.490
recently the accessibility service it
was restricted for apps that were using

00:17:44.490 --> 00:17:44.500
was restricted for apps that were using
 

00:17:44.500 --> 00:17:46.470
was restricted for apps that were using
those launchers or for any apps that

00:17:46.470 --> 00:17:46.480
those launchers or for any apps that
 

00:17:46.480 --> 00:17:52.279
those launchers or for any apps that
we're trying to access the reverse color

00:17:52.279 --> 00:17:52.289
we're trying to access the reverse color
 

00:17:52.289 --> 00:17:54.750
we're trying to access the reverse color
tap to enlarge those are things that

00:17:54.750 --> 00:17:54.760
tap to enlarge those are things that
 

00:17:54.760 --> 00:17:56.430
tap to enlarge those are things that
were being restricted because they were

00:17:56.430 --> 00:17:56.440
were being restricted because they were
 

00:17:56.440 --> 00:17:57.600
were being restricted because they were
being taken advantage of

00:17:57.600 --> 00:17:57.610
being taken advantage of
 

00:17:57.610 --> 00:17:59.480
being taken advantage of
have you guys seen any impact from that

00:17:59.480 --> 00:17:59.490
have you guys seen any impact from that
 

00:17:59.490 --> 00:18:02.850
have you guys seen any impact from that
for you are testing with for your

00:18:02.850 --> 00:18:02.860
for you are testing with for your
 

00:18:02.860 --> 00:18:06.419
for you are testing with for your
testing of native apps we don't see any

00:18:06.419 --> 00:18:06.429
testing of native apps we don't see any
 

00:18:06.429 --> 00:18:10.080
testing of native apps we don't see any
restriction I think it's it can do what

00:18:10.080 --> 00:18:10.090
restriction I think it's it can do what
 

00:18:10.090 --> 00:18:14.610
restriction I think it's it can do what
you are automation oh it special - yeah

