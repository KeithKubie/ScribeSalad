WEBVTT
Kind: captions
Language: en

00:00:16.070 --> 00:00:18.380
FRED SAUER: Welcome to
the Root Access show.

00:00:18.380 --> 00:00:20.840
This is a show where
we discuss issues

00:00:20.840 --> 00:00:22.180
that start ups face.

00:00:22.180 --> 00:00:24.530
And today we're talking about
scalability issues.

00:00:24.530 --> 00:00:28.250
How do you handle massive
amounts of traffic and large

00:00:28.250 --> 00:00:30.100
numbers of users?

00:00:30.100 --> 00:00:34.230
Today my guest Ben Kamens, who's
the lead engineer at

00:00:34.230 --> 00:00:37.990
Khan Academy, joins
us for discussion.

00:00:37.990 --> 00:00:39.860
Ben, for those who haven't heard
maybe you can tell us a

00:00:39.860 --> 00:00:43.940
little bit about Khan Academy,
what your mission is and what

00:00:43.940 --> 00:00:44.840
to do for your users.

00:00:44.840 --> 00:00:45.540
BEN KAMENS: Yeah, absolutely.

00:00:45.540 --> 00:00:48.980
So Khan Academy's mission
statement is to provide a free

00:00:48.980 --> 00:00:51.720
world class education
to anyone, anywhere.

00:00:51.720 --> 00:00:54.480
It's a large mission statement,
so we can't claim

00:00:54.480 --> 00:00:56.220
that we do anything remotely
close to that yet.

00:00:56.220 --> 00:00:57.470
But we are trying.

00:00:59.510 --> 00:01:02.860
I guess the simple breakdown of
what we do is anybody can

00:01:02.860 --> 00:01:05.430
come to the Khan Academy site
and hopefully try to learn

00:01:05.430 --> 00:01:08.210
anything, but right now it's
really about learning math and

00:01:08.210 --> 00:01:09.390
some other things like
art history and

00:01:09.390 --> 00:01:10.190
other stuff like that.

00:01:10.190 --> 00:01:12.680
So when somebody comes to our
site they can interact with a

00:01:12.680 --> 00:01:14.070
number of videos that
they can watch.

00:01:14.070 --> 00:01:16.300
Some of those videos will ask
people questions to help

00:01:16.300 --> 00:01:18.330
advance their understanding.

00:01:18.330 --> 00:01:21.180
They can work through a
tree of math problems.

00:01:21.180 --> 00:01:23.570
Like basically you could start
at 1 plus 1 and work your way

00:01:23.570 --> 00:01:25.020
all the way down to calculus.

00:01:25.020 --> 00:01:28.570
And the site should interact
with you and tell you what

00:01:28.570 --> 00:01:30.150
you're succeeding at and what
you're failing at and

00:01:30.150 --> 00:01:33.620
hopefully help guide you to
mastery of whatever you're

00:01:33.620 --> 00:01:35.160
trying to learn.

00:01:35.160 --> 00:01:36.690
That is the long term goal.

00:01:36.690 --> 00:01:38.750
So that's kind of
the user side.

00:01:38.750 --> 00:01:42.500
And then we have a story in our
classrooms where teachers

00:01:42.500 --> 00:01:45.060
are actually using this with
lots of their students and

00:01:45.060 --> 00:01:48.050
then using data that we give
them to learn more about how

00:01:48.050 --> 00:01:50.310
their students are doing
in specific areas.

00:01:50.310 --> 00:01:51.250
FRED SAUER: OK.

00:01:51.250 --> 00:01:52.370
Great.

00:01:52.370 --> 00:01:55.880
So maybe just a little bit of
context, how many users does

00:01:55.880 --> 00:01:57.230
Khan Academy see?

00:01:57.230 --> 00:01:59.660
BEN KAMENS: Yeah, so I guess it
depends how you look at it.

00:01:59.660 --> 00:02:04.720
I think right now Google
Analytics has us around five

00:02:04.720 --> 00:02:08.729
or six million per month.

00:02:08.729 --> 00:02:12.730
Registered users, I'm not sure
what the total number is now.

00:02:12.730 --> 00:02:14.550
It's somewhere in the--

00:02:14.550 --> 00:02:15.260
it's definitely in
the millions.

00:02:15.260 --> 00:02:16.690
I'm not sure how many.

00:02:16.690 --> 00:02:20.510
It's over five, less
than 15 million.

00:02:20.510 --> 00:02:22.280
Somewhere in there users.

00:02:22.280 --> 00:02:23.950
FRED SAUER: So you have a lot
of recurring users, then?

00:02:23.950 --> 00:02:24.690
BEN KAMENS: Yeah, yeah.

00:02:24.690 --> 00:02:27.022
Hopefully more and more
as time goes on.

00:02:27.022 --> 00:02:31.000
We're trying to build a site
that brings people back.

00:02:31.000 --> 00:02:31.510
Yeah.

00:02:31.510 --> 00:02:33.010
FRED SAUER: OK.

00:02:33.010 --> 00:02:34.970
Maybe tell us a little
bit about how you got

00:02:34.970 --> 00:02:36.060
to that many users.

00:02:36.060 --> 00:02:39.780
Obviously you started with 0
users and then you started to

00:02:39.780 --> 00:02:45.780
see your application grow, your
site traffic grow, and

00:02:45.780 --> 00:02:48.870
then at some point, presumably,
you ran into the

00:02:48.870 --> 00:02:50.650
first scalability issues.

00:02:50.650 --> 00:02:53.680
And maybe tell us a little bit
about that and how you

00:02:53.680 --> 00:02:55.140
addressed any problems
that you saw.

00:02:55.140 --> 00:02:55.530
BEN KAMENS: Yeah.

00:02:55.530 --> 00:02:57.720
It's kind of actually an
interesting story even from

00:02:57.720 --> 00:03:01.100
before anybody joined Khan
Academy and it was just Sal

00:03:01.100 --> 00:03:03.920
Khan making his videos.

00:03:03.920 --> 00:03:06.340
Because he knew from the
beginning that he wanted an

00:03:06.340 --> 00:03:09.780
interactive part of his site,
but then he started making

00:03:09.780 --> 00:03:12.550
videos to complement the
interactive part.

00:03:12.550 --> 00:03:16.140
So just as an example, he had
some math problems that he

00:03:16.140 --> 00:03:17.960
would have people work on
interactively and then he

00:03:17.960 --> 00:03:19.580
built videos to help people
understand how to do those

00:03:19.580 --> 00:03:20.460
math problems.

00:03:20.460 --> 00:03:24.170
So the result of that in terms
of scalability effect is that

00:03:24.170 --> 00:03:25.580
his videos started to
get really popular.

00:03:25.580 --> 00:03:27.960
And they were hosted on YouTube
and nobody has to

00:03:27.960 --> 00:03:29.200
worry about scalability
on YouTube.

00:03:29.200 --> 00:03:30.740
You guys take care
of that, right?

00:03:30.740 --> 00:03:32.860
So YouTube scaled and he got a
whole bunch of users watching

00:03:32.860 --> 00:03:33.510
the videos.

00:03:33.510 --> 00:03:36.520
And then he started playing
more people at the site.

00:03:36.520 --> 00:03:38.290
And this was before it
was on App Engine.

00:03:38.290 --> 00:03:41.180
It was on some self hosted Java
thing and basically as

00:03:41.180 --> 00:03:44.040
soon as he started pointing his
big audience to that site

00:03:44.040 --> 00:03:45.950
there were DB connection
failures and all

00:03:45.950 --> 00:03:46.740
this various stuff.

00:03:46.740 --> 00:03:50.400
And so he, again, back when
it was just Sal, switched

00:03:50.400 --> 00:03:52.540
everything to App Engine
because, I think, different

00:03:52.540 --> 00:03:54.960
than a lot of start ups he
immediately had an audience

00:03:54.960 --> 00:03:57.130
waiting from having built
it on YouTube.

00:03:57.130 --> 00:03:58.450
So he basically switched
this audience.

00:03:58.450 --> 00:03:59.000
It wasn't huge.

00:03:59.000 --> 00:04:00.180
It wasn't in the millions,
but at least

00:04:00.180 --> 00:04:01.590
tens, hundreds of thousands.

00:04:01.590 --> 00:04:04.630
So he switched the code over to
App Engine, pointed users

00:04:04.630 --> 00:04:07.060
at that, and then was able to
start slowly building the

00:04:07.060 --> 00:04:09.600
foundation of a non YouTube site
that could handle some of

00:04:09.600 --> 00:04:10.920
the traffic.

00:04:10.920 --> 00:04:12.820
So that's the really
early story.

00:04:12.820 --> 00:04:18.579
Then after that we basically
just kept growing.

00:04:18.579 --> 00:04:20.760
It's gotten a lot of press and
a lot of attention over time

00:04:20.760 --> 00:04:24.650
and so it's kind of just
naturally snowballed.

00:04:24.650 --> 00:04:31.520
FRED SAUER: So taking that, if
you were there in the very

00:04:31.520 --> 00:04:34.800
early days even before kind of
pointing more users to the

00:04:34.800 --> 00:04:37.950
site, what would you have
done differently?

00:04:37.950 --> 00:04:39.120
BEN KAMENS: Yeah, that's
a great question.

00:04:39.120 --> 00:04:41.310
So I think Sal learned his
lesson really early.

00:04:41.310 --> 00:04:46.900
I don't think it makes sense for
any start up to not be on

00:04:46.900 --> 00:04:50.520
some provider like App Engine or
EC2 or whatever is going to

00:04:50.520 --> 00:04:52.870
solve a lot of the scalability
problems that you don't want

00:04:52.870 --> 00:04:56.950
to solve by having your
own servers, I think.

00:04:56.950 --> 00:04:59.670
That's just a no brainer
these days.

00:04:59.670 --> 00:05:02.420
And that way if you get picked
up and you get a lot of

00:05:02.420 --> 00:05:05.100
attention early, whether it's
from having a lot of videos or

00:05:05.100 --> 00:05:07.820
from getting blog attention,
you have a chance to scale

00:05:07.820 --> 00:05:08.900
immediately.

00:05:08.900 --> 00:05:11.140
Just by throwing more money at
the problem, that's something

00:05:11.140 --> 00:05:12.690
that you want to
be able to do.

00:05:12.690 --> 00:05:15.030
So I think that's kind of--

00:05:15.030 --> 00:05:18.250
if you're not doing that the
rest of my advice probably

00:05:18.250 --> 00:05:19.580
won't be much use to you.

00:05:19.580 --> 00:05:21.414
That's kind of step one.

00:05:21.414 --> 00:05:23.310
FRED SAUER: OK.

00:05:23.310 --> 00:05:26.280
So you talked about a couple
of technology options.

00:05:26.280 --> 00:05:29.740
How does the technology
that you choose affect

00:05:29.740 --> 00:05:31.590
your ability to scale?

00:05:31.590 --> 00:05:35.780
Obviously if you're just renting
virtual machines you

00:05:35.780 --> 00:05:38.830
can get more of them, but does
that address your scalability

00:05:38.830 --> 00:05:43.410
or are there other dimensions to
the choice that are really

00:05:43.410 --> 00:05:44.850
important to get right?

00:05:44.850 --> 00:05:46.910
BEN KAMENS: Yeah, there are
certainly other dimensions.

00:05:46.910 --> 00:05:51.110
And people have solved this
other ways, in various ways.

00:05:51.110 --> 00:05:55.090
I think there's obviously a
spectrum of how much of a

00:05:55.090 --> 00:05:58.680
scalability solution you get
out of the box from whoever

00:05:58.680 --> 00:06:00.910
you're working with.

00:06:00.910 --> 00:06:03.870
And it's basically a spectrum
of how much control do you

00:06:03.870 --> 00:06:08.140
want versus how much immediate
scalability do you want.

00:06:08.140 --> 00:06:11.070
And the more control you get,
the more you're likely to have

00:06:11.070 --> 00:06:14.020
shot yourself in the foot or
to not configure something

00:06:14.020 --> 00:06:16.030
correctly and get
something wrong.

00:06:16.030 --> 00:06:22.060
So I would say a service like
App Engine gives you tons and

00:06:22.060 --> 00:06:24.320
tons and tons of scalability
right out of the box.

00:06:24.320 --> 00:06:27.070
And as long as your credit
card's plugged in you're not

00:06:27.070 --> 00:06:29.790
going to have many scalability
problems.

00:06:29.790 --> 00:06:35.140
A service like Amazon services
can be similarly great.

00:06:35.140 --> 00:06:37.560
But depending on how you
configure them you need to be

00:06:37.560 --> 00:06:39.760
a little more on your game and
have a little bit more

00:06:39.760 --> 00:06:44.050
awareness of how to roll up
instances and all the various

00:06:44.050 --> 00:06:45.660
tricks that you have
to know on AWS.

00:06:45.660 --> 00:06:48.170
And so they're both great
solutions in my opinion.

00:06:48.170 --> 00:06:49.970
Perfectly legitimate for
any start up to choose

00:06:49.970 --> 00:06:51.460
either one right now.

00:06:51.460 --> 00:06:54.770
But there are definite trade
offs in terms of how much time

00:06:54.770 --> 00:06:57.120
you have to focus on the
scalability solution.

00:06:57.120 --> 00:06:58.170
FRED SAUER: OK.

00:06:58.170 --> 00:07:01.060
Now, with scalability.

00:07:01.060 --> 00:07:03.960
There's kind of another
dimension that I think

00:07:03.960 --> 00:07:07.550
sometimes early start ups forget
to look at or they may

00:07:07.550 --> 00:07:10.150
imagine they'll deal with it
later, which is kind of the

00:07:10.150 --> 00:07:13.190
availability of the
application.

00:07:13.190 --> 00:07:16.780
So they start out hosting,
whether it's their own servers

00:07:16.780 --> 00:07:21.660
or in a data center somewhere,
they're in one place and then

00:07:21.660 --> 00:07:24.350
when they realize that they need
some redundancy for data

00:07:24.350 --> 00:07:27.980
center failures or network cuts,
they suddenly need to

00:07:27.980 --> 00:07:30.550
figure out how to replicate
their data across regions.

00:07:30.550 --> 00:07:33.760
Is that something you've had
to deal with at all?

00:07:33.760 --> 00:07:37.600
BEN KAMENS: Yeah, so we
can luckily say no.

00:07:37.600 --> 00:07:41.650
That and many other things
because we went the more

00:07:41.650 --> 00:07:43.480
automatic route and the using
App Engine route.

00:07:43.480 --> 00:07:46.250
That's all kind of taken
care of for us.

00:07:46.250 --> 00:07:51.790
So thanks to your team we've
never, let alone worried about

00:07:51.790 --> 00:07:52.560
replication, we've never

00:07:52.560 --> 00:07:55.490
restarted a server on instance.

00:07:55.490 --> 00:07:57.750
We don't carry pagers.

00:07:57.750 --> 00:08:00.910
That has enormous benefit for a
team that's trying to focus

00:08:00.910 --> 00:08:05.280
on a specific hard problem like
educational technology.

00:08:05.280 --> 00:08:07.780
We don't want to restart
servers.

00:08:07.780 --> 00:08:10.160
We want to talk to teachers.

00:08:10.160 --> 00:08:17.800
So that has an enormous impact
on how our ability to focus on

00:08:17.800 --> 00:08:20.200
the problem at hand because
we're not worried about that

00:08:20.200 --> 00:08:20.750
sort of thing.

00:08:20.750 --> 00:08:23.070
So while I wish I could give
more actionable advice there,

00:08:23.070 --> 00:08:25.370
I have to be honest, I'm
not an expert at all.

00:08:25.370 --> 00:08:28.610
But that's the whole point.

00:08:28.610 --> 00:08:29.440
FRED SAUER: That's a
great thing about

00:08:29.440 --> 00:08:30.910
not restarting servers.

00:08:30.910 --> 00:08:33.270
And everything that comes along
with that, like not

00:08:33.270 --> 00:08:36.860
applying OS patches, not
worrying about those software

00:08:36.860 --> 00:08:37.890
installs and upgrades.

00:08:37.890 --> 00:08:40.780
It's your application code that
you want to worry about,

00:08:40.780 --> 00:08:42.360
because that's where
you're at.

00:08:42.360 --> 00:08:42.679
BEN KAMENS: Yep.

00:08:42.679 --> 00:08:45.060
I mean, it's an abstraction over
all that stuff so you can

00:08:45.060 --> 00:08:46.350
focus on the business.

00:08:46.350 --> 00:08:47.800
All abstractions leak.

00:08:47.800 --> 00:08:48.670
Nothing is perfect.

00:08:48.670 --> 00:08:50.150
You're going to have to deal
with problems no matter what

00:08:50.150 --> 00:08:51.730
you choose.

00:08:51.730 --> 00:08:53.146
We chose a higher level
of abstractions.

00:08:53.146 --> 00:08:54.950
It's paid off pretty
well so far.

00:08:54.950 --> 00:08:55.936
FRED SAUER: OK.

00:08:55.936 --> 00:08:59.950
Well, so on this theme of
scalability, many start ups,

00:08:59.950 --> 00:09:02.420
at some point, experience
this TechCrunch effect.

00:09:02.420 --> 00:09:05.920
They get posted on a prominent
blog and suddenly the traffic

00:09:05.920 --> 00:09:09.770
just goes through the roof.

00:09:09.770 --> 00:09:13.510
Are there other things start
ups can do to take care of

00:09:13.510 --> 00:09:17.975
that or should they just cross
their fingers and hope it'll

00:09:17.975 --> 00:09:18.730
all be fine?

00:09:18.730 --> 00:09:19.500
BEN KAMENS: That's
a great question.

00:09:19.500 --> 00:09:23.670
So our big experience with
this is 60 Minutes.

00:09:23.670 --> 00:09:28.110
So we've been featured on a lot
of blogs, a lot of things

00:09:28.110 --> 00:09:31.150
like TechCrunch, Reddit,
Hacker News,

00:09:31.150 --> 00:09:32.140
all that stuff, right?

00:09:32.140 --> 00:09:34.490
All of that traffic combined
doesn't even come close to

00:09:34.490 --> 00:09:36.730
what 60 Minutes delivered
when they featured us.

00:09:36.730 --> 00:09:37.520
It wasn't even close.

00:09:37.520 --> 00:09:39.850
It's a different sort of
traffic, right, it's all--

00:09:39.850 --> 00:09:41.370
we can cut this out-- it's
all Internet Explorer.

00:09:41.370 --> 00:09:43.380
It's a different sort
of traffic.

00:09:43.380 --> 00:09:45.360
But 60 Minutes delivers
a lot of traffic.

00:09:45.360 --> 00:09:47.350
And so we've been on
a couple times.

00:09:47.350 --> 00:09:51.150
The first time we basically knew
that there was going to

00:09:51.150 --> 00:09:53.790
be a lot of traffic and were
prepared to turn the right

00:09:53.790 --> 00:09:56.300
dials in App Engine so that we
can get more instances easily.

00:09:56.300 --> 00:09:57.170
And we did that.

00:09:57.170 --> 00:09:59.720
But other than that we were kind
of crossing our fingers.

00:09:59.720 --> 00:10:00.690
And that was a mistake.

00:10:00.690 --> 00:10:03.425
I do think we have actionable
advice to give after that.

00:10:03.425 --> 00:10:06.700
The mistake was that while we
were prepared to turn the

00:10:06.700 --> 00:10:12.060
right dials we hadn't really
simplified the experience that

00:10:12.060 --> 00:10:13.230
people were going to get.

00:10:13.230 --> 00:10:16.100
So as a result, we were doing
a whole lot of work that

00:10:16.100 --> 00:10:17.930
didn't need to be done
for every user.

00:10:17.930 --> 00:10:20.660
A very specific example is we
thought oh cool, we're getting

00:10:20.660 --> 00:10:22.310
all the 60 Minutes traffic.

00:10:22.310 --> 00:10:24.370
Let's for the first time ever
run an AB test on our home

00:10:24.370 --> 00:10:26.570
page and track all the data
that comes with that.

00:10:26.570 --> 00:10:28.390
With our custom AB solution.

00:10:28.390 --> 00:10:31.400
Which was a terrible mistake,
a really stupid mistake.

00:10:31.400 --> 00:10:33.210
And the actionable advice that
we should have taken, which we

00:10:33.210 --> 00:10:36.530
took for follow up 60 Minutes
pieces, was the main

00:10:36.530 --> 00:10:38.470
experience that all that traffic
is going to go to,

00:10:38.470 --> 00:10:40.140
just make sure it's
clean and simple.

00:10:40.140 --> 00:10:42.700
And if you have to track data,
make sure it's important data

00:10:42.700 --> 00:10:44.730
that you're tracking and that
that's a well tested data

00:10:44.730 --> 00:10:46.390
tracking solution.

00:10:46.390 --> 00:10:49.510
And that you're not running code
you don't need to code

00:10:49.510 --> 00:10:50.860
for all that traffic that's
going to be kind

00:10:50.860 --> 00:10:52.040
of a one time spurt.

00:10:52.040 --> 00:10:54.300
Because you only get that thing
one time and if, like

00:10:54.300 --> 00:10:57.330
us, half of the East Coast feed
can't access the site

00:10:57.330 --> 00:11:00.900
because you tried to track
too much data,

00:11:00.900 --> 00:11:01.760
that's not worth it.

00:11:01.760 --> 00:11:04.410
So for the West Coast feed and
for the all follow up 60

00:11:04.410 --> 00:11:06.390
Minutes pieces we basically
said, all right, look, the

00:11:06.390 --> 00:11:09.110
homepage is just going to
be as static as we can

00:11:09.110 --> 00:11:10.350
make our home page.

00:11:10.350 --> 00:11:10.815
It's simple.

00:11:10.815 --> 00:11:12.040
It loads quickly.

00:11:12.040 --> 00:11:13.890
People who branch off from that
can get the rest of the

00:11:13.890 --> 00:11:15.500
experience but let's
just simplify for

00:11:15.500 --> 00:11:18.030
the incoming traffic.

00:11:18.030 --> 00:11:20.350
FRED SAUER: So what about
load testing?

00:11:20.350 --> 00:11:24.190
Is that something you've done
up until that point?

00:11:24.190 --> 00:11:27.160
Is it possible that even
predicted what

00:11:27.160 --> 00:11:28.600
scale, what type of--

00:11:28.600 --> 00:11:30.590
what load testing advice
can you give?

00:11:30.590 --> 00:11:31.650
BEN KAMENS: Yeah, that's
a good question.

00:11:31.650 --> 00:11:36.060
So we haven't done enough
load testing.

00:11:36.060 --> 00:11:39.570
We thought from all of our
previous press pushes that we

00:11:39.570 --> 00:11:43.810
had from the spikes that we've
seen that we had enough.

00:11:43.810 --> 00:11:45.820
We had no idea how
much traffic 60

00:11:45.820 --> 00:11:46.510
Minutes would give us.

00:11:46.510 --> 00:11:49.100
And we hadn't tested
that amount.

00:11:49.100 --> 00:11:53.390
So if you can test the right
amount, then do it.

00:11:53.390 --> 00:11:56.320
We are fortunate enough to
be, again, sorry for not

00:11:56.320 --> 00:11:57.920
actionable advice, but we're
fortunate enough to be a

00:11:57.920 --> 00:12:01.040
situation where the traffic
is pretty high

00:12:01.040 --> 00:12:02.640
consistently, we think.

00:12:02.640 --> 00:12:05.430
It's also tends to be a little
bit spiky consistently due to

00:12:05.430 --> 00:12:08.560
people using really heavily
during school.

00:12:08.560 --> 00:12:10.040
And it's also pretty seasonal.

00:12:10.040 --> 00:12:14.960
So it tends to stress our
systems in a good way and that

00:12:14.960 --> 00:12:18.640
we have to be able to handle
spikes and valleys and we have

00:12:18.640 --> 00:12:20.600
to build a handle months where
it's really active and then

00:12:20.600 --> 00:12:22.360
December where it's not
very active at all.

00:12:22.360 --> 00:12:26.510
And so I think that has helped
us balance things a little bit

00:12:26.510 --> 00:12:29.500
more because we know we need to
configure our code in App

00:12:29.500 --> 00:12:31.430
Engine right to be able
to handle that spike.

00:12:31.430 --> 00:12:35.020
So our load testing has been
a little bit more natural.

00:12:35.020 --> 00:12:37.240
I guess my actionable load
advice here is we got away

00:12:37.240 --> 00:12:38.300
without doing a ton of it.

00:12:38.300 --> 00:12:42.050
But it's probably smart
to do more of it.

00:12:42.050 --> 00:12:44.290
FRED SAUER: OK.

00:12:44.290 --> 00:12:47.760
So how early on should
start ups worry about

00:12:47.760 --> 00:12:49.740
load testing and scale?

00:12:49.740 --> 00:12:52.720
Should that be something they
think about out of box or is

00:12:52.720 --> 00:12:55.280
it just a select few who know
they're going to be very

00:12:55.280 --> 00:12:57.790
popular out of the gate?

00:12:57.790 --> 00:12:59.640
And how do you divide
up the work?

00:12:59.640 --> 00:13:03.740
Do you have a dedicated
scalability team and then

00:13:03.740 --> 00:13:04.950
people working on features?

00:13:04.950 --> 00:13:07.630
Or does everyone need to think
about scalability?

00:13:07.630 --> 00:13:09.150
BEN KAMENS: Yeah, so I'll tell
you what we did, which was

00:13:09.150 --> 00:13:13.440
basically try not to worry
about it at the start by

00:13:13.440 --> 00:13:15.600
offloading as much work as
you can to somebody else.

00:13:15.600 --> 00:13:17.980
Which in our case is you guys.

00:13:17.980 --> 00:13:19.840
And that was huge.

00:13:19.840 --> 00:13:25.680
That lasted until we had around
nine or 10 employees.

00:13:25.680 --> 00:13:28.950
And at that point we felt like
when we hit performance

00:13:28.950 --> 00:13:32.460
problems it was no longer
acceptable to basically just

00:13:32.460 --> 00:13:35.770
patch over it and hope
it goes OK next time.

00:13:35.770 --> 00:13:39.810
And so at that point, and
obviously still start up size

00:13:39.810 --> 00:13:42.140
but a little bit bigger than two
or three people, at that

00:13:42.140 --> 00:13:44.580
point we were willing to say
for your quarter these two

00:13:44.580 --> 00:13:46.370
people are just focused on
performance and build

00:13:46.370 --> 00:13:51.430
dashboard so we can predict
problems ahead of time and try

00:13:51.430 --> 00:13:52.900
to be a little bit more
proactive about our

00:13:52.900 --> 00:13:55.440
performance issues and our
scalability issues and

00:13:55.440 --> 00:13:57.070
tracking all that information.

00:13:57.070 --> 00:14:00.870
So for us that was around
nine or 10 people.

00:14:00.870 --> 00:14:03.240
It really depends, I guess, on
the problem solving and how

00:14:03.240 --> 00:14:05.080
much traffic you know you're
going to immediately get.

00:14:05.080 --> 00:14:08.570
I would say that's not what you
want to be doing when you

00:14:08.570 --> 00:14:12.720
are a two to five person
organization.

00:14:12.720 --> 00:14:15.250
There are too many ways to have
somebody else solve that

00:14:15.250 --> 00:14:18.500
problem for you or some other
system worry about scalability

00:14:18.500 --> 00:14:20.630
than for you have to
focus on that.

00:14:20.630 --> 00:14:23.850
FRED SAUER: So it's really
focus on the features and

00:14:23.850 --> 00:14:26.510
capabilities that are behind
your start up.

00:14:26.510 --> 00:14:27.810
BEN KAMENS: Make your
start up great.

00:14:27.810 --> 00:14:29.230
Make your product great.

00:14:29.230 --> 00:14:31.190
Get users coming back to it.

00:14:31.190 --> 00:14:34.780
And then you can over engineer
all you want once you've got a

00:14:34.780 --> 00:14:36.670
successful business.

00:14:36.670 --> 00:14:38.770
If you do that ahead of time I
think you're shooting yourself

00:14:38.770 --> 00:14:39.210
in the foot.

00:14:39.210 --> 00:14:42.270
It's too easy to use App Engine
or EC2 or whatever it

00:14:42.270 --> 00:14:43.730
is that's going to solve
these problems for you.

00:14:43.730 --> 00:14:48.290
Because nobody's paying--

00:14:48.290 --> 00:14:50.260
your site needs to
stay up, period.

00:14:50.260 --> 00:14:52.600
Get something that stays up
and then worry about the

00:14:52.600 --> 00:14:55.060
problems when you have
a chance to build

00:14:55.060 --> 00:14:56.350
a successful product.

00:14:56.350 --> 00:14:58.340
FRED SAUER: OK.

00:14:58.340 --> 00:15:02.830
So in the division of labor when
you were at that nine or

00:15:02.830 --> 00:15:06.530
10 people, did everyone
focus on scalability?

00:15:06.530 --> 00:15:09.780
Or did you have like a SWAT team
that kind of dealt with

00:15:09.780 --> 00:15:10.590
the problems?

00:15:10.590 --> 00:15:16.060
BEN KAMENS: Yeah, so we have
on our list of things that

00:15:16.060 --> 00:15:18.660
people are working on at the
very top is one that's not

00:15:18.660 --> 00:15:21.310
assigned to anybody and it says
performance is-- it's

00:15:21.310 --> 00:15:23.400
something, performance is
everyone's job and it's just

00:15:23.400 --> 00:15:24.450
everybody's assigned to it.

00:15:24.450 --> 00:15:28.500
So we do require and we try to
build a culture of awareness

00:15:28.500 --> 00:15:30.730
of performance, which is a
necessary thing to do because,

00:15:30.730 --> 00:15:34.360
as you know, once you have a
performance problem somebody's

00:15:34.360 --> 00:15:37.060
going to be the hero by solving
the 80% problem and

00:15:37.060 --> 00:15:37.860
that goes out of the way.

00:15:37.860 --> 00:15:42.830
And after that it's a game of
1%, 1%, 0.5%, 0.25%, 0.25%.

00:15:42.830 --> 00:15:46.090
That's the only way to
get to a faster site.

00:15:46.090 --> 00:15:48.990
And it is great to have people
dedicated to that.

00:15:48.990 --> 00:15:50.700
But at the same time, if you
have a bunch of people who are

00:15:50.700 --> 00:15:53.440
just throwing extra JavaScript
in every minute or adding new

00:15:53.440 --> 00:15:56.360
database queries, whatever
they're doing is just going to

00:15:56.360 --> 00:15:57.160
slow your site down.

00:15:57.160 --> 00:16:00.400
So we try to build performance
awareness into the entire team

00:16:00.400 --> 00:16:05.130
and then we basically have had
quarters where a one or two

00:16:05.130 --> 00:16:08.170
person team is solely focused
on proactive performance

00:16:08.170 --> 00:16:10.810
improvement, whether that takes
the form of actually

00:16:10.810 --> 00:16:12.965
changing our code to make it
faster or building tools so

00:16:12.965 --> 00:16:15.430
that we are more aware of
our own performance.

00:16:15.430 --> 00:16:19.970
FRED SAUER: So can I imagine
that more as kind of a

00:16:19.970 --> 00:16:21.090
dedicated fix it?

00:16:21.090 --> 00:16:24.470
Like where we're going to set
some time aside, not stop

00:16:24.470 --> 00:16:27.300
features entirely, but we're
going to focus on scalability

00:16:27.300 --> 00:16:30.740
for a week for a month, for a
quarter, something until we

00:16:30.740 --> 00:16:32.460
get back on track?

00:16:32.460 --> 00:16:34.760
BEN KAMENS: We've basically done
that for a quarter with

00:16:34.760 --> 00:16:36.050
small teams.

00:16:36.050 --> 00:16:37.750
And I love the idea.

00:16:37.750 --> 00:16:39.600
We have stolen Google's
idea of fix its.

00:16:39.600 --> 00:16:41.510
So we haven't had a performance
fix it yet but I

00:16:41.510 --> 00:16:45.190
think that's an awesome idea
whether it's a day or week.

00:16:45.190 --> 00:16:47.950
Basically you're going to get
big wins when you focus on

00:16:47.950 --> 00:16:48.460
performance.

00:16:48.460 --> 00:16:50.560
And even more importantly,
you'll build that culture into

00:16:50.560 --> 00:16:53.330
your team, a culture of
caring about speed.

00:16:53.330 --> 00:16:58.560
And so I guess, yeah, the
fix it's a great idea.

00:16:58.560 --> 00:17:00.690
FRED SAUER: As you've grown
through kind of the different

00:17:00.690 --> 00:17:04.270
levels of scale when you go 10x
from your initial size and

00:17:04.270 --> 00:17:09.690
then 100x and 1,000, have you
gotten to a point where you

00:17:09.690 --> 00:17:13.720
said, OK, we need to kind of
re-architect either our data

00:17:13.720 --> 00:17:17.099
store or the way we store and
access data for more efficient

00:17:17.099 --> 00:17:19.210
patterns or fundamentally
change the

00:17:19.210 --> 00:17:20.180
way the code behaves?

00:17:20.180 --> 00:17:22.810
Or has it always grown
organically in kind of very

00:17:22.810 --> 00:17:25.800
small step function,
worked its way up?

00:17:25.800 --> 00:17:27.790
BEN KAMENS: It grew organically,
I would say, for

00:17:27.790 --> 00:17:29.480
about a year and a half.

00:17:29.480 --> 00:17:33.340
And then we got to the point
where you have to fix some of

00:17:33.340 --> 00:17:35.040
the underlying issues.

00:17:35.040 --> 00:17:36.600
We certainly haven't
fixed them all.

00:17:36.600 --> 00:17:40.240
But some of the big ones that
we've started to address, and

00:17:40.240 --> 00:17:43.750
I guess some of the pain points
that got most painful

00:17:43.750 --> 00:17:46.380
for us, were that we're
collecting all this data and

00:17:46.380 --> 00:17:47.690
more and more users are coming
and we're getting

00:17:47.690 --> 00:17:48.630
more and more data.

00:17:48.630 --> 00:17:50.980
In our case, we wanted to report
a lot of that data to

00:17:50.980 --> 00:17:52.670
teachers or to other people.

00:17:52.670 --> 00:17:57.870
So now after a year of
a classroom of--

00:17:57.870 --> 00:18:00.450
or a couple classrooms of 100
kids using the site every day

00:18:00.450 --> 00:18:05.220
in school it's tons and tons of
data for us to analyze and

00:18:05.220 --> 00:18:07.110
present to the teacher
in a nice way.

00:18:07.110 --> 00:18:10.020
And so our old data storage
system was unable

00:18:10.020 --> 00:18:11.190
to report on that.

00:18:11.190 --> 00:18:14.070
And so we had to basically
go back and rethink.

00:18:14.070 --> 00:18:15.050
We need to do it again.

00:18:15.050 --> 00:18:16.870
But we had to go back and
basically rethink how we

00:18:16.870 --> 00:18:20.160
summarize all this data, how
we accumulate it over time,

00:18:20.160 --> 00:18:22.310
start rolling things up, and
basically follow Google's

00:18:22.310 --> 00:18:26.320
principles of do a whole bunch
of work when writing the data

00:18:26.320 --> 00:18:27.880
so that reading the
data is fast.

00:18:27.880 --> 00:18:32.641
We had to basically build that
belief into our team of

00:18:32.641 --> 00:18:35.420
re-architect data, copy it
everywhere, make it really

00:18:35.420 --> 00:18:37.190
fast to analyze later.

00:18:37.190 --> 00:18:40.270
And that took a lot of
learning for us.

00:18:40.270 --> 00:18:41.670
Transparency, we're
still not there.

00:18:41.670 --> 00:18:43.160
But we've started
to re-architect

00:18:43.160 --> 00:18:44.590
things and do better.

00:18:44.590 --> 00:18:45.860
FRED SAUER: So it's an
ongoing process?

00:18:45.860 --> 00:18:46.160
BEN KAMENS: Yeah.

00:18:46.160 --> 00:18:47.410
Yeah, absolutely.

00:18:49.490 --> 00:18:50.740
If you have advice.

00:18:53.020 --> 00:18:55.070
You guys always have great
advice for us.

00:18:55.070 --> 00:18:56.740
FRED SAUER: I think you're
taking the right approach.

00:18:56.740 --> 00:18:58.960
I think you have to spend a
certain amount of time.

00:18:58.960 --> 00:19:02.240
And then while you can't throw
it all away because you have a

00:19:02.240 --> 00:19:05.430
live website and you have
changes that you're making, I

00:19:05.430 --> 00:19:07.860
think occasionally you do need
to dedicate some time and say,

00:19:07.860 --> 00:19:13.210
OK, let's fundamentally change
the way we do something.

00:19:13.210 --> 00:19:15.230
But in a controlled fashion.

00:19:15.230 --> 00:19:17.700
So you have traffic
that's 24/7.

00:19:17.700 --> 00:19:20.890
People are using the site
and you don't want--

00:19:20.890 --> 00:19:24.550
I always chuckle a little bit
when I try to make a deposit

00:19:24.550 --> 00:19:25.240
in my bank.

00:19:25.240 --> 00:19:28.780
I look at my bank account and
the bank website is down for

00:19:28.780 --> 00:19:31.540
four hours a night doing
some batch processing.

00:19:31.540 --> 00:19:35.110
This feels like I'm
still in the '60s.

00:19:35.110 --> 00:19:41.290
And so doing things in the live
system is a little bit

00:19:41.290 --> 00:19:43.525
like doing maintenance
on an aircraft while

00:19:43.525 --> 00:19:46.150
it's in the air flying.

00:19:46.150 --> 00:19:49.250
Something you can do, but it
takes a certain amount of

00:19:49.250 --> 00:19:51.140
discipline.

00:19:51.140 --> 00:19:53.430
But you can do really
interesting things.

00:19:53.430 --> 00:19:55.150
Because you never
stop, so you're

00:19:55.150 --> 00:19:57.500
never losing that momentum.

00:19:57.500 --> 00:19:58.150
BEN KAMENS: Yeah.

00:19:58.150 --> 00:19:59.080
Yeah, absolutely.

00:19:59.080 --> 00:20:01.650
And it's really related to your
previous question about

00:20:01.650 --> 00:20:03.660
how much do you immediately
focus on this stuff.

00:20:03.660 --> 00:20:06.170
Because there's no point in
obsessing over that hard

00:20:06.170 --> 00:20:07.960
problem of building another
airplane if your first

00:20:07.960 --> 00:20:11.010
airplane isn't already really
in the air and flying.

00:20:11.010 --> 00:20:15.040
So waiting until you definitely
need this feature

00:20:15.040 --> 00:20:18.330
and everybody's demanding it
before you spend a whole bunch

00:20:18.330 --> 00:20:21.390
of time coming up with the nice
data architectures is

00:20:21.390 --> 00:20:22.640
really important.

00:20:22.640 --> 00:20:25.150
FRED SAUER: So then, taking the
analogy there, it's like

00:20:25.150 --> 00:20:28.500
get your aircraft in the air,
and then worry about making it

00:20:28.500 --> 00:20:29.270
pretty and perform later.

00:20:29.270 --> 00:20:31.274
BEN KAMENS: Use somebody
else's engines.

00:20:31.274 --> 00:20:33.190
Get it up there.

00:20:33.190 --> 00:20:35.080
FRED SAUER: Maybe
an App Engine.

00:20:35.080 --> 00:20:36.330
Great.

00:20:39.000 --> 00:20:42.800
A lot of companies are talking
about a new type of

00:20:42.800 --> 00:20:48.670
organization in your company
called DevOps.

00:20:48.670 --> 00:20:50.560
The developer operations.

00:20:50.560 --> 00:20:54.670
And it's kind of merging
with IT operations.

00:20:54.670 --> 00:20:58.070
Is DevOps something
you subscribe to?

00:20:58.070 --> 00:21:00.450
Is that a term you use
at Khan Academy?

00:21:00.450 --> 00:21:03.920
BEN KAMENS: It's not a term
we use right now.

00:21:03.920 --> 00:21:07.170
Again, I'll be honest and be
clear when I'm not an expert.

00:21:07.170 --> 00:21:08.610
I'm definitely not
an expert here.

00:21:08.610 --> 00:21:12.360
It is something that I was
familiar with in my previous

00:21:12.360 --> 00:21:18.316
job when we weren't using a
cloud provider, whatever you

00:21:18.316 --> 00:21:19.860
want to call it.

00:21:19.860 --> 00:21:23.570
And it was obviously
extraordinarily important.

00:21:23.570 --> 00:21:27.120
Right now our team a small
enough, still around 15, 16

00:21:27.120 --> 00:21:30.560
engineers, for everybody
to be kind of a dev.

00:21:30.560 --> 00:21:33.602
And everybody's responsible
for keeping the site up.

00:21:33.602 --> 00:21:38.950
I could see a time when we
have accumulated enough

00:21:38.950 --> 00:21:42.210
specific systems that are
outside of App Engine that

00:21:42.210 --> 00:21:46.230
will require other people, our
time, to make sure they're

00:21:46.230 --> 00:21:48.310
perfectly optimized and
they're working well.

00:21:48.310 --> 00:21:49.690
We're not there right now.

00:21:49.690 --> 00:21:52.960
We've so far benefited from
just kind of sticking with

00:21:52.960 --> 00:21:54.430
mostly just App Engine.

00:21:54.430 --> 00:21:56.130
FRED SAUER: OK.

00:21:56.130 --> 00:21:59.930
So maybe in parting you
can leave kind of--

00:21:59.930 --> 00:22:03.110
if you have one piece of advice,
something, a kind of

00:22:03.110 --> 00:22:05.880
wisdom that you want to
pass on to start ups.

00:22:05.880 --> 00:22:07.400
And it doesn't have
to be one thing.

00:22:07.400 --> 00:22:10.960
But what would you tell the
would be start up that--

00:22:14.760 --> 00:22:16.320
what advice would
you give them?

00:22:16.320 --> 00:22:18.050
BEN KAMENS: Yeah.

00:22:18.050 --> 00:22:21.070
I certainly won't claim to
know everything here.

00:22:21.070 --> 00:22:24.940
But I guess if I were going back
I would encourage myself

00:22:24.940 --> 00:22:28.040
to just keep things really,
really simple.

00:22:28.040 --> 00:22:30.860
Both technically and
in your product.

00:22:30.860 --> 00:22:33.630
Keep things simple until you
know absolutely what you need

00:22:33.630 --> 00:22:35.680
to build and then build
that thing.

00:22:35.680 --> 00:22:38.350
And most of the pain
we've caused

00:22:38.350 --> 00:22:40.150
ourselves has been from--

00:22:40.150 --> 00:22:41.980
not most of the pain, but a lot
of the pain we've caused

00:22:41.980 --> 00:22:44.420
ourselves-- have been from these
various things that we

00:22:44.420 --> 00:22:47.560
built at one time to help
somebody in some edge case and

00:22:47.560 --> 00:22:49.260
it turns out that thing can
cause a real problem for

00:22:49.260 --> 00:22:50.660
everybody else in some way.

00:22:50.660 --> 00:22:52.810
And it's hard to turn things
off once you build them.

00:22:52.810 --> 00:22:56.220
So I guess just kind of
keep things simple.

00:22:56.220 --> 00:22:59.900
Build what you need
and go from there.

00:22:59.900 --> 00:23:02.130
FRED SAUER: That seems like
really good advice.

00:23:02.130 --> 00:23:04.140
Don't build anything
unless you have to.

00:23:04.140 --> 00:23:04.930
Really [INAUDIBLE].

00:23:04.930 --> 00:23:05.940
BEN KAMENS: And take as
much work as you can

00:23:05.940 --> 00:23:08.410
have somebody else.

00:23:08.410 --> 00:23:12.140
We are shamelessly lazy and
willing to benefit from other

00:23:12.140 --> 00:23:13.670
people's work where possible.

00:23:13.670 --> 00:23:16.450
There are so many free tools
and non free tools that are

00:23:16.450 --> 00:23:18.380
totally worth the money that are
great out there right now.

00:23:18.380 --> 00:23:21.820
So fight the tendency to build
everything in house.

00:23:21.820 --> 00:23:22.660
FRED SAUER: OK.

00:23:22.660 --> 00:23:23.950
Fight the natural engineering
tendency.

00:23:23.950 --> 00:23:25.800
BEN KAMENS: Yeah, at least
until-- yes, exactly.

00:23:25.800 --> 00:23:27.050
It is a natural tendency.

00:23:27.050 --> 00:23:29.460
And it's a natural tendency
to kind of not trust other

00:23:29.460 --> 00:23:31.710
people's code and want to
code your own stuff.

00:23:31.710 --> 00:23:34.940
That's great and there's totally
valid reasons for

00:23:34.940 --> 00:23:37.210
that, especially once your
business is doing really well.

00:23:37.210 --> 00:23:38.760
But until then, just--

00:23:38.760 --> 00:23:39.120
FRED SAUER: Keep it simple.

00:23:39.120 --> 00:23:39.680
BEN KAMENS: Yeah.

00:23:39.680 --> 00:23:41.310
Use other people's work.

00:23:41.310 --> 00:23:41.540
FRED SAUER: Great.

00:23:41.540 --> 00:23:42.470
Well thanks, Ben.

00:23:42.470 --> 00:23:43.040
BEN KAMENS: Yeah, thanks.

00:23:43.040 --> 00:23:44.910
And thanks to your team
for everything.

00:23:44.910 --> 00:23:46.210
FRED SAUER: Thanks
for tuning in.

00:23:46.210 --> 00:23:48.410
This was a episode
of Root Access.

00:23:48.410 --> 00:23:51.460
Check the schedule to see what
episode is next and what

00:23:51.460 --> 00:23:52.730
topics we'll cover.

00:23:52.730 --> 00:23:53.980
Thanks for tuning in.

