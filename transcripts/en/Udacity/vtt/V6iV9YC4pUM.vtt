WEBVTT
Kind: captions
Language: en

00:00:00.660 --> 00:00:02.600
All right,
welcome back to computer vision.

00:00:02.600 --> 00:00:06.510
Today we're going to do
just a little bit on video.

00:00:06.510 --> 00:00:08.440
Today and I guess next one will be our,

00:00:08.440 --> 00:00:12.410
we're only going to talk two
of these lessons on video.

00:00:12.410 --> 00:00:17.310
One could do almost an entire class on
computer vision as applied to video and

00:00:17.310 --> 00:00:18.230
the things that are different.

00:00:19.510 --> 00:00:21.860
But we're,
we're not going to do a lot of that.

00:00:21.860 --> 00:00:23.970
A lot of what you've learned
can be applied obviously to

00:00:23.970 --> 00:00:25.610
each of the individual images.

00:00:25.610 --> 00:00:27.120
And some of what you have plearned,

00:00:27.120 --> 00:00:31.000
what you've learned where they're
essentially two dimensional operators.

00:00:31.000 --> 00:00:34.320
You can apply those same
operators in three dimensions.

00:00:34.320 --> 00:00:37.790
Or other ways of thinking about video.

00:00:37.790 --> 00:00:39.230
But we're only going to do a little.

00:00:39.230 --> 00:00:41.770
In fact talking about
the three dimensions.

00:00:41.770 --> 00:00:45.750
Video, we're going to think of as
a three dimensional signal, all right?

00:00:45.750 --> 00:00:51.560
So video as, as shown here is,
I have this image x y and as time moves

00:00:51.560 --> 00:00:56.440
forward, time could also go that way,
it is that I've got this volume of data.

00:00:56.440 --> 00:01:03.500
And so a pixel inside a video is
actually a function of x, y and t.

00:01:03.500 --> 00:01:06.127
All right so sometimes you'll see
me going like this for video and

00:01:06.127 --> 00:01:07.390
I'm talking about x, y and t.

00:01:07.390 --> 00:01:08.330
You know that,

00:01:08.330 --> 00:01:13.552
that's the way I think of video: I
think of video as a volume of data.

00:01:13.552 --> 00:01:19.950
So, let's talk a little bit about
some basic computer vision in video.

00:01:19.950 --> 00:01:23.150
So, one might be object detection.

00:01:23.150 --> 00:01:26.200
So, suppose your goal, and we'll talk
a little bit about this next time,

00:01:26.200 --> 00:01:27.940
is activity recognition.

00:01:27.940 --> 00:01:29.880
Right, you want to
recognize what's going on.

00:01:29.880 --> 00:01:32.139
So you're going to recognize
the activity of objects,

00:01:32.139 --> 00:01:33.550
of people that's there.

00:01:33.550 --> 00:01:36.711
But, but there are these
entities doing something, so

00:01:36.711 --> 00:01:38.940
you might have to find these entities.

00:01:38.940 --> 00:01:41.440
That is, what are the things
in here that are moving,

00:01:41.440 --> 00:01:45.820
that are doing something that I need
to try to label what their activity is.

00:01:45.820 --> 00:01:48.620
You know, nominally, or
notionally, you can think of as my

00:01:48.620 --> 00:01:53.470
goal is to find the independently
moving things that are in this video.

00:01:53.470 --> 00:01:56.590
So here I've labeled this thing
called a background subtraction, and

00:01:56.590 --> 00:01:58.060
it's you know, just example.

00:01:58.060 --> 00:02:01.280
I mean here you have a, a scene
where there's some cars moving, and

00:02:01.280 --> 00:02:02.790
the idea would be well, you know,

00:02:02.790 --> 00:02:06.050
we'd like to be able to find all
of these moving blobs, all right?

00:02:06.050 --> 00:02:10.180
In this particular case, all these
moving blobs are the moving objects.

00:02:10.180 --> 00:02:13.020
Generically, background
subtraction is used a lot.

00:02:14.490 --> 00:02:19.260
It used to be that people thought that
background subtraction was trivial and

00:02:19.260 --> 00:02:22.330
then they thought it was hard and then
they stopped thinking about it at all.

00:02:22.330 --> 00:02:24.890
It still, this notion of separating out

00:02:24.890 --> 00:02:28.390
the entities is still a fundamental
research area in computer vision.

00:02:28.390 --> 00:02:30.280
We're going to talk about
some simple stuff here.

00:02:30.280 --> 00:02:34.400
So, the, the most straightforward
background subtraction is where you have

00:02:34.400 --> 00:02:35.950
a static camera.

00:02:35.950 --> 00:02:38.780
So the camera's not moving,
and the idea being that

00:02:38.780 --> 00:02:42.350
if nothing is changing in the scene
then nothing is moving their either and

00:02:42.350 --> 00:02:44.980
there's nothing to do, so
you should go home and get some rest.

00:02:44.980 --> 00:02:45.830
All right?

00:02:45.830 --> 00:02:49.820
Background subtraction
as sort of simple and

00:02:49.820 --> 00:02:54.210
overly simplistic as it is,
it is used a lot in commercial systems.

00:02:54.210 --> 00:02:57.490
Traffic monitoring where they're,
you know, counting cars, or, or

00:02:57.490 --> 00:02:59.700
monitoring other things going on.

00:02:59.700 --> 00:03:02.980
Various human action recognition
where you have people coming by and

00:03:02.980 --> 00:03:06.432
you want to be able to say something
about walking, running, whatever.

00:03:06.432 --> 00:03:08.210
Human-computer interaction.

00:03:08.210 --> 00:03:12.050
So, people will build systems where
humans interact with a big display, and

00:03:12.050 --> 00:03:15.340
to pull the humans out from
the background, they have to

00:03:15.340 --> 00:03:18.590
remove the background somehow, and
sort of object tracking in general.

00:03:18.590 --> 00:03:21.510
So, sometimes there, what you'll do is,
you'll compensate for

00:03:21.510 --> 00:03:24.790
the motion of the camera, so
you'll move the whole image back.

00:03:24.790 --> 00:03:27.860
As if you had the camera sta,
stationary and

00:03:27.860 --> 00:03:30.200
then you do background
subtraction on that.

