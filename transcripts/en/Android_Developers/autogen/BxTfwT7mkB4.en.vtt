WEBVTT
Kind: captions
Language: en

00:00:00.499 --> 00:00:03.610
 To defeat mistakes, we must pick up mistakes. 

00:00:03.610 --> 00:00:05.860
 We must defend all fronts to ensure 

00:00:05.860 --> 00:00:07.880
 They were arrested early and often. 

00:00:07.880 --> 00:00:09.910
 Checking during loading helps, but there are also 

00:00:09.910 --> 00:00:13.420
 A full set of runtime checks can also be used. 

00:00:13.420 --> 00:00:15.280
 This is where StrictMode comes in, 

00:00:15.280 --> 00:00:17.320
 Provide a set of run-time checks for you 

00:00:17.320 --> 00:00:20.330
 You can add to your debug structures to capture potential problems 

00:00:20.330 --> 00:00:22.539
 Before they reach users. 

00:00:22.539 --> 00:00:24.330
 I am Ian Lake, I will introduce you two 

00:00:24.330 --> 00:00:26.780
 Of the best properties for StrictMode 

00:00:26.780 --> 00:00:28.380
 Which exceed performance verification 

00:00:28.380 --> 00:00:31.140
 And help you to build better applications 

00:00:31.140 --> 00:00:34.640
 If problems with links are problems that appear at load time 

00:00:34.640 --> 00:00:37.650
 In StrictMode 

00:00:37.650 --> 00:00:40.690
 Is equivalent to run-time, causing problems 

00:00:40.690 --> 00:00:44.330
 We can detect them at runtime so you can fix them early. 

00:00:44.330 --> 00:00:47.250
 Most StrictMode focuses on performance. 

00:00:47.250 --> 00:00:49.420
 Ian the other works great work is modern 

00:00:49.420 --> 00:00:51.420
 About these properties in their video 

00:00:51.420 --> 00:00:53.360
 As well as the basics of StrictMode 

00:00:53.360 --> 00:00:55.790
 But I'm not here to rework it. 

00:00:55.790 --> 00:00:58.265
 Instead, let's talk about new things, 

00:00:58.265 --> 00:01:02.200
 Such as the VM policy .detectFileUriExposure 

00:01:02.530 --> 00:01:04.910
 If you share content with other apps, 

00:01:04.910 --> 00:01:08.130
 You do not want to use the URL of the file. 

00:01:08.130 --> 00:01:09.940
 They need permission to store 

00:01:09.940 --> 00:01:11.730
 And can not move between users 

00:01:11.730 --> 00:01:14.946
 And - well, just watch the Dave Byte video on the content sharing. 

00:01:14.946 --> 00:01:17.130
 StrictMode makes sure only that 

00:01:17.130 --> 00:01:20.690
 URLs do not go to other applications. 

00:01:20.690 --> 00:01:22.080
 Like any StrictMode, you can 

00:01:22.080 --> 00:01:25.970
 Register this problem using PenaltyLog or close your application completely 

00:01:25.970 --> 00:01:27.420
 With PenaltyDeath. 

00:01:27.420 --> 00:01:29.180
 Build applications or die 

00:01:29.180 --> 00:01:31.790
 It's a simple choice, is not it? 

00:01:31.790 --> 00:01:34.420
 Now, the new Android 6.0 Marshmallow 

00:01:34.420 --> 00:01:37.280
 Is detectCleartextNetwork. 

00:01:37.280 --> 00:01:38.840
 As you can expect from the name, 

00:01:38.840 --> 00:01:44.510
 This detects the movement of unencrypted network data over IPv4 or IPv6, 

00:01:44.510 --> 00:01:46.762
 Whether you are using TCP or UDP 

00:01:46.762 --> 00:01:49.800
 The thing about mobile devices is in the wild 

00:01:49.800 --> 00:01:51.800
 Is that you can not guarantee 

00:01:51.800 --> 00:01:54.530
 They will be connected 

00:01:54.530 --> 00:01:55.620
 With reliable access points. 

00:01:55.620 --> 00:01:58.020
 Risking the security of your user data 

00:01:58.020 --> 00:02:00.005
 Or contacts to your server 

00:02:00.005 --> 00:02:02.510
 Another nightmare is the privacy you want 

00:02:02.510 --> 00:02:04.150
 Deal with the launch day. 

00:02:04.150 --> 00:02:08.460
 So check it out early and encrypt your network data. 

00:02:08.460 --> 00:02:11.700
 One thing, you have to keep in mind, you may find false alarms 

00:02:11.700 --> 00:02:15.610
 When using STARTTLS protocols or HTTP proxies. 

00:02:15.610 --> 00:02:18.090
 It should be noted that StrictMode will close it 

00:02:18.090 --> 00:02:20.720
 Although they are correct 

00:02:20.720 --> 00:02:23.410
 Now, with your application created additional logs 

00:02:23.410 --> 00:02:25.720
 And closed it all, maybe 

00:02:25.720 --> 00:02:27.750
 You take into account that StrictMode 

00:02:27.750 --> 00:02:30.130
 It should only be run in beta versions. 

00:02:30.130 --> 00:02:32.650
 The easiest way to do this is by placing StrictMode calls 

00:02:32.650 --> 00:02:36.430
 In the buildConfig check, it is automatically generated 

00:02:36.430 --> 00:02:39.650
 Avoids non-experimental versions 

00:02:39.650 --> 00:02:42.630
 There's a lot to discover in StrictMode 

00:02:42.630 --> 00:02:45.830
 But detect URLs and network data traffic 

00:02:45.830 --> 00:02:48.960
 Can be very useful in finding problems 

00:02:48.960 --> 00:02:51.760
 Before users suffer, 

00:02:51.760 --> 00:02:53.500
 Giving you peace of mind 

00:02:53.500 --> 00:02:55.700
 And manufacturing better applications 

00:02:55.700 --> 00:02:58.150
 [Music] 

