WEBVTT
Kind: captions
Language: en

00:00:00.320 --> 00:00:03.220
It may interest you to note that
the projects you have been doing in

00:00:03.220 --> 00:00:06.140
this class are base on
cutting edge research.

00:00:06.140 --> 00:00:10.067
Under just a few years back, all
conventional models of solving problems

00:00:10.067 --> 00:00:14.503
on the Ravens test first extracted
popular presentations from the figures

00:00:14.503 --> 00:00:18.490
and then ran engines on
these presentations.

00:00:18.490 --> 00:00:21.520
Does them extract
a transformation from A to B

00:00:21.520 --> 00:00:24.850
in the form of a semantic
network shown here.

00:00:24.850 --> 00:00:27.290
And similarly they made,
extracted transformation,

00:00:27.290 --> 00:00:30.050
from C to 5, through
the symmetric network shown here.

00:00:31.250 --> 00:00:34.280
They would then compare these two
symmetric networks and decide whether or

00:00:34.280 --> 00:00:36.848
not A is to B, is similar to C is to 5.

00:00:36.848 --> 00:00:41.415
You may have done something
similar in your early projects.

00:00:41.415 --> 00:00:46.275
But in 2012, here at Georgia Tech was
able to write a computer program that

00:00:46.275 --> 00:00:51.245
used only analogical representations
without extracting any representations

00:00:51.245 --> 00:00:55.065
and yet were able to solve problems on
the Ravens Progressive Matrices test.

00:00:55.065 --> 00:00:56.294
It used only affine and

00:00:56.294 --> 00:01:00.640
set transformations over
the analogical representations.

00:01:00.640 --> 00:01:04.673
So as an example, it would compare A and
B by saying there is a set

00:01:04.673 --> 00:01:08.494
transformation, this particular
dot is no longer there.

00:01:08.494 --> 00:01:11.689
And there is affine transformation,
in fact two affine transformations.

00:01:11.689 --> 00:01:15.484
First, they made this square bigger and
second the cross

00:01:15.484 --> 00:01:19.495
position of the square from inside
the circle to outside the circle.

00:01:20.830 --> 00:01:22.372
It would find similar affine and

00:01:22.372 --> 00:01:25.270
set transformations that
would relate C and 5.

00:01:25.270 --> 00:01:27.669
That will compare the affine and
set transformations,

00:01:27.669 --> 00:01:31.190
again without extracting any purpose for
presentations.

00:01:31.190 --> 00:01:35.068
Little surprisingly,
program called Asti, or

00:01:35.068 --> 00:01:39.037
A-S-T-I, was able to do quite
well on the Ravens test.

00:01:39.037 --> 00:01:42.490
It solved 50 out of the 60
problems correctly.

00:01:42.490 --> 00:01:46.620
Then in 2013, Keith McGregor,
again here at Georgia Tech,

00:01:46.620 --> 00:01:49.650
wrote another computer program
that used a different kind of

00:01:49.650 --> 00:01:53.420
analogical representation called
a fractal representation.

00:01:53.420 --> 00:01:57.740
And he was able to show that
the fractal representation also enables

00:01:57.740 --> 00:02:01.210
addressing problems on the Ravens
test with a good degree of accuracy.

00:02:02.230 --> 00:02:05.590
It provided references both work and
Keith's work in the notes.

