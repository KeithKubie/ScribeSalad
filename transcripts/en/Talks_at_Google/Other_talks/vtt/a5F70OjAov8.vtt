WEBVTT
Kind: captions
Language: en

00:00:01.721 --> 00:00:03.220
JASON: We all know
that in the world

00:00:03.220 --> 00:00:04.970
today there's a lot
of people in the world

00:00:04.970 --> 00:00:07.240
and a lot of change happening.

00:00:08.370 --> 00:00:13.079
And so there's not as
many outlets or tools

00:00:13.079 --> 00:00:14.870
to be able to make
those voices accessible.

00:00:14.870 --> 00:00:17.700
And so Adam and his
team have put together

00:00:17.700 --> 00:00:21.530
a project which will try
to address that and give

00:00:21.530 --> 00:00:24.425
a voice to the voiceless by
way of peer-to-peer networking.

00:00:25.800 --> 00:00:29.055
And without further ado,
I'll let Adam take it away.

00:00:29.055 --> 00:00:30.430
ADAM FISK: Thanks
so much, Jason.

00:00:32.460 --> 00:00:35.675
So as Jason said, I'm going to
talk to you guys about Lantern.

00:00:35.675 --> 00:00:38.730
Lantern's a tool for
bypassing censors

00:00:38.730 --> 00:00:40.440
in countries that
censor the internet.

00:00:40.440 --> 00:00:42.841
And it's funded through
a series of grants

00:00:42.841 --> 00:00:44.340
primarily from the
State Department.

00:00:44.340 --> 00:00:47.460
So total funding for Lantern
has been about $5 million

00:00:47.460 --> 00:00:50.140
over the course of
the last 3 years.

00:00:51.770 --> 00:00:54.160
And I'm really excited to be
here at Google, first of all

00:00:54.160 --> 00:00:59.050
just because the engineering
talent on this campus

00:00:59.050 --> 00:01:00.760
is so amazing.

00:01:00.760 --> 00:01:03.650
And I'm going to talk a little
bit about our organization

00:01:03.650 --> 00:01:05.150
and how we approach things.

00:01:05.150 --> 00:01:08.910
And I think that relates a
lot to the engineering talent

00:01:08.910 --> 00:01:11.060
that we see here at Google.

00:01:11.060 --> 00:01:12.840
So we're a nonprofit.

00:01:12.840 --> 00:01:14.720
We're called Brave New Software.

00:01:14.720 --> 00:01:16.680
And Brave New
Software's mission is

00:01:16.680 --> 00:01:19.690
to use software to tackle
tough global problems.

00:01:19.690 --> 00:01:21.770
So the first problem
we're trying to tackle

00:01:21.770 --> 00:01:23.860
is this issue of censorship.

00:01:23.860 --> 00:01:30.190
And to me, there's really sort
of a scarcity of really focused

00:01:30.190 --> 00:01:33.880
engineering effort, sort of
directly on problems like this.

00:01:33.880 --> 00:01:37.750
So I think Google itself clearly
has this sort of immense,

00:01:37.750 --> 00:01:41.150
in some sense,
philanthropic effect.

00:01:41.150 --> 00:01:44.420
You can do things with Google
like detect flu outbreaks

00:01:44.420 --> 00:01:46.680
before the CDC is able
to detect flu outbreaks.

00:01:46.680 --> 00:01:49.840
So just by virtue of making
the world's information so

00:01:49.840 --> 00:01:53.110
much more accessible,
Google itself sort of serves

00:01:53.110 --> 00:01:55.210
this incredible purpose.

00:01:55.210 --> 00:01:59.320
So whether it's climate change,
or censorship, or poverty,

00:01:59.320 --> 00:02:03.740
I think as engineers and with
the capabilities that we have,

00:02:03.740 --> 00:02:07.610
we have some obligation to
sort of try to put forth effort

00:02:07.610 --> 00:02:09.736
to really focus on
some of those problems.

00:02:09.736 --> 00:02:12.110
And that's really what we're
doing at Brave New Software.

00:02:12.110 --> 00:02:17.080
So when I think
about Lantern, to me

00:02:17.080 --> 00:02:19.464
it really starts when
I was really young.

00:02:19.464 --> 00:02:21.630
So this is a picture of me
when I was three or four.

00:02:21.630 --> 00:02:25.100
And I grew up in a
family of people--

00:02:25.100 --> 00:02:29.170
a family of parents--
who were really

00:02:29.170 --> 00:02:31.580
focused on the green
building movement,

00:02:31.580 --> 00:02:36.205
on using architecture to
create social change, really.

00:02:36.205 --> 00:02:38.080
So at that point, the
green building movement

00:02:38.080 --> 00:02:39.330
wasn't even really a movement.

00:02:39.330 --> 00:02:42.060
It was just sort of a
couple of people with ideas.

00:02:42.060 --> 00:02:46.320
But because of that upbringing,
I sort of came into this world

00:02:46.320 --> 00:02:48.420
with that type of
thinking and that being

00:02:48.420 --> 00:02:50.600
around sort of very
dedicated people

00:02:50.600 --> 00:02:52.280
as an everyday part of my life.

00:02:52.280 --> 00:02:53.780
So I think that
really impacted sort

00:02:53.780 --> 00:02:58.080
of the way I approached the
world and the way we approach

00:02:58.080 --> 00:03:01.340
software and problems at Lantern
and at Brave New Software.

00:03:01.340 --> 00:03:03.500
So this is a shot of me.

00:03:03.500 --> 00:03:06.340
I sort of consider
this the first version

00:03:06.340 --> 00:03:07.360
of Lantern in some way.

00:03:07.360 --> 00:03:12.140
So basically, my parents were
constantly inventing things.

00:03:12.140 --> 00:03:15.820
And I, early on, sort of wanted
to be a part of the action.

00:03:15.820 --> 00:03:18.220
So I somehow thought
it would be a good idea

00:03:18.220 --> 00:03:22.280
to take a toilet paper
roll, the inner cardboard

00:03:22.280 --> 00:03:24.870
tube from a toilet paper roll,
and pair it with a burned

00:03:24.870 --> 00:03:26.030
out light bulb.

00:03:26.030 --> 00:03:28.585
And to me, this was a flashlight
or a lantern of sorts.

00:03:29.844 --> 00:03:31.260
But if you look
more closely, it's

00:03:31.260 --> 00:03:35.350
really kind of sad
and just pathetic.

00:03:36.810 --> 00:03:39.190
It's a just colossal
failure on all levels

00:03:39.190 --> 00:03:41.060
and was completely
non-functional.

00:03:43.810 --> 00:03:47.545
But this idea of just sort
of participating and building

00:03:47.545 --> 00:03:49.170
things to make the
world a better place

00:03:49.170 --> 00:03:52.180
was really a part of my
thinking from very early on.

00:03:52.180 --> 00:03:56.620
So fast forward,
gosh, 18 years or so.

00:03:57.750 --> 00:04:00.570
I was one of the sort of
core engineers on LimeWire.

00:04:00.570 --> 00:04:03.850
So I did a lot of the raw
engineering work on LimeWire.

00:04:03.850 --> 00:04:06.510
And that experience really
reinforced this idea

00:04:06.510 --> 00:04:10.530
that small teams of people
can create a big impact

00:04:10.530 --> 00:04:13.680
and can impact change.

00:04:13.680 --> 00:04:17.160
So at LimeWire, we were
anywhere from about 5 people

00:04:17.160 --> 00:04:19.320
to 12 people, so an
incredibly small group.

00:04:20.620 --> 00:04:23.620
And between us,
and the team over

00:04:23.620 --> 00:04:27.092
at BitTorrent with Bram
Cohen, and the team at eDonkey

00:04:27.092 --> 00:04:28.800
with Jed McCaleb, we
came to account for,

00:04:28.800 --> 00:04:30.990
as I think everyone in
this room knows, about 40%

00:04:30.990 --> 00:04:33.570
of all internet traffic in
a very short period of time.

00:04:33.570 --> 00:04:37.880
This was a small group
of people who were just

00:04:37.880 --> 00:04:40.610
massively changing the
internet as we know it.

00:04:40.610 --> 00:04:44.580
And the other aspect of
my experience at LimeWire

00:04:44.580 --> 00:04:47.982
was that it just
had this component

00:04:47.982 --> 00:04:49.690
of being massively
sort of decentralized.

00:04:49.690 --> 00:04:51.380
So it was much
more decentralized

00:04:51.380 --> 00:04:53.637
than other peer-to-peer
networks out there.

00:04:53.637 --> 00:04:55.970
And that was interesting from
an engineering perspective

00:04:55.970 --> 00:04:57.511
to some extent in
terms of not having

00:04:57.511 --> 00:04:58.872
a single point of failure.

00:04:58.872 --> 00:05:00.830
But to me, the more
interesting part about that

00:05:00.830 --> 00:05:03.450
was really not having a
single point of control.

00:05:03.450 --> 00:05:07.120
So how do we build networks
that sort of more closely

00:05:07.120 --> 00:05:10.260
reflect the decentralized
nature of the internet itself?

00:05:10.260 --> 00:05:13.530
So to me, that aspect
of peer-to-peer

00:05:13.530 --> 00:05:16.950
was really interesting
and got me thinking, even

00:05:16.950 --> 00:05:18.630
in those early
years, about how you

00:05:18.630 --> 00:05:21.510
might be able to use those
architectures to get around

00:05:21.510 --> 00:05:22.630
censors.

00:05:22.630 --> 00:05:25.720
So there was a piece of
software called TriangleBoy

00:05:25.720 --> 00:05:29.554
around the year 2000
that used peer-to-peer

00:05:29.554 --> 00:05:30.470
to get around censors.

00:05:30.470 --> 00:05:32.386
And it was more of an
experiment at that time,

00:05:32.386 --> 00:05:35.620
but that made me first start
to think about how you might

00:05:35.620 --> 00:05:38.430
use this stuff to
bypass censors.

00:05:38.430 --> 00:05:42.004
So I think it was
2009-- oh, sorry.

00:05:42.004 --> 00:05:43.670
Actually, I'm going
to talk a little bit

00:05:43.670 --> 00:05:46.700
about just the
problem of censorship.

00:05:46.700 --> 00:05:50.300
So to me, living
in this country,

00:05:50.300 --> 00:05:53.286
it's very difficult
to understand

00:05:53.286 --> 00:05:54.910
what it's like to
live with censorship.

00:05:54.910 --> 00:05:57.370
So without being able to
access all the sites we want

00:05:57.370 --> 00:06:00.281
to access every day, I
think it's just a challenge

00:06:00.281 --> 00:06:01.780
to really understand
what it's like.

00:06:01.780 --> 00:06:03.490
So this is just me
proxying my traffic

00:06:03.490 --> 00:06:06.120
through a server
in Iran and trying

00:06:06.120 --> 00:06:08.000
to go to Twitter and to YouTube.

00:06:08.000 --> 00:06:10.210
And you see this
blocking page come up

00:06:10.210 --> 00:06:13.800
that just lists other sites
that the government recommends

00:06:13.800 --> 00:06:16.280
that you might want to go to
instead of Twitter or YouTube.

00:06:17.300 --> 00:06:19.430
And if you do this for a
very short period of time,

00:06:19.430 --> 00:06:21.900
it's amazing just how
sort of debilitating it

00:06:21.900 --> 00:06:24.390
is to your everyday experience.

00:06:24.390 --> 00:06:26.632
So you get an email
from someone with a link

00:06:26.632 --> 00:06:27.590
and you can't watch it.

00:06:29.110 --> 00:06:33.390
And so for me if I do this for
even as little as half an hour,

00:06:33.390 --> 00:06:37.680
almost instantly, it's just
like incredibly frustrating

00:06:37.680 --> 00:06:39.180
and I just can't
take it anymore.

00:06:39.180 --> 00:06:42.770
And I have to turn off the
proxy to go back to sort of life

00:06:42.770 --> 00:06:43.390
as we know it.

00:06:45.730 --> 00:06:49.640
So literally, when I first
started work on Lantern,

00:06:49.640 --> 00:06:52.160
I was just in the shower
one day and I was like, hey,

00:06:52.160 --> 00:06:54.870
I think I'm going to actually
just start coding today.

00:06:54.870 --> 00:06:57.130
So the first component
I started coding on

00:06:57.130 --> 00:07:00.720
was LittleProxy, which
is just an HTTP proxy.

00:07:00.720 --> 00:07:04.360
And for me, it's oftentimes
hard to really feel

00:07:04.360 --> 00:07:07.320
like I fully understand
something until I code it.

00:07:07.320 --> 00:07:10.670
So with even an HTTP
proxy, it's relatively

00:07:10.670 --> 00:07:13.920
straightforward in a lot of
ways and on a conceptual level.

00:07:13.920 --> 00:07:16.050
But I felt like I just
really wanted to code it.

00:07:16.050 --> 00:07:17.980
First, I didn't feel like there
were any really good proxies

00:07:17.980 --> 00:07:18.710
out there.

00:07:18.710 --> 00:07:20.900
And I feel like I wanted to just
really sort of immerse myself

00:07:20.900 --> 00:07:21.400
in it.

00:07:21.400 --> 00:07:23.020
So even things
like HTTP CONNECT,

00:07:23.020 --> 00:07:26.340
you know, like that's a kind
of an interesting HTTP method.

00:07:26.340 --> 00:07:30.250
And it means you can tunnel
anything through HTTP CONNECT.

00:07:30.250 --> 00:07:32.570
And so conceptually,
you think, oh, OK.

00:07:32.570 --> 00:07:33.540
That makes sense.

00:07:33.540 --> 00:07:35.510
But when you think
about it, it's

00:07:35.510 --> 00:07:36.880
actually incredibly powerful.

00:07:36.880 --> 00:07:40.920
You can tunnel absolutely
anything through HTTP CONNECT.

00:07:40.920 --> 00:07:44.170
You can speak any protocol
you want to speak,

00:07:44.170 --> 00:07:45.460
which is kind of a big deal.

00:07:45.460 --> 00:07:46.380
And that's something
we take advantage

00:07:46.380 --> 00:07:48.230
of in different ways in Lantern.

00:07:48.230 --> 00:07:50.730
So the other reason
I bring this up

00:07:50.730 --> 00:07:54.970
is just from a modularity
software engineering

00:07:54.970 --> 00:07:55.710
perspective.

00:07:55.710 --> 00:07:58.750
So LittleProxy is this
totally separate project, just

00:07:58.750 --> 00:08:00.081
a straight HTTP proxy.

00:08:00.081 --> 00:08:02.080
And at this point, it's
used all over the world.

00:08:02.080 --> 00:08:03.790
So it's used at Red Hat.

00:08:03.790 --> 00:08:05.030
It's used at Electronic Arts.

00:08:05.030 --> 00:08:07.410
It's used at New Relic
and at small businesses

00:08:07.410 --> 00:08:10.300
all across Eastern Europe in
particular for some reason.

00:08:10.300 --> 00:08:12.882
But none of the people
using it have any idea

00:08:12.882 --> 00:08:14.340
that it's also used
within Lantern.

00:08:15.410 --> 00:08:18.420
So they're actually patching it
and improving it all the time

00:08:18.420 --> 00:08:19.379
for their own purposes.

00:08:19.379 --> 00:08:21.170
But they have no idea
that at the same time

00:08:21.170 --> 00:08:23.060
they're testing and
improving Lantern itself.

00:08:23.060 --> 00:08:25.559
So to me, that's how good sort
of open source and modularity

00:08:25.559 --> 00:08:28.980
works, is if you build something
that's useful to people

00:08:28.980 --> 00:08:31.350
more generally and
also useful to you.

00:08:34.614 --> 00:08:36.530
Sorry, I think there was
some animation there.

00:08:36.530 --> 00:08:41.390
So this is just a
shot of someone--

00:08:41.390 --> 00:08:43.990
not a real person-- at
home running Lantern.

00:08:43.990 --> 00:08:47.860
And the way Lantern works is
users in uncensored regions

00:08:47.860 --> 00:08:50.170
can download and install
it on their computers.

00:08:50.170 --> 00:08:53.560
And because you at home have
access to the open internet,

00:08:53.560 --> 00:08:56.610
people can proxy through you
and themselves get access.

00:08:56.610 --> 00:08:59.010
So it uses this
peer-to-peer model

00:08:59.010 --> 00:09:00.570
that does a couple of things.

00:09:00.570 --> 00:09:05.290
On one level, it really ramps
up the number of access points.

00:09:05.290 --> 00:09:08.490
So we try to make it very easy
to run a new access point.

00:09:08.490 --> 00:09:10.690
And it's literally, you
just download it, install it

00:09:10.690 --> 00:09:12.880
on your machine,
and just run it.

00:09:12.880 --> 00:09:15.990
So just through sheer
numbers, Lantern

00:09:15.990 --> 00:09:18.080
tries to be much more
blocking-resistant than sort

00:09:18.080 --> 00:09:20.380
of existing solutions out there.

00:09:20.380 --> 00:09:24.500
So we're just making it much
easier to deploy new instances.

00:09:24.500 --> 00:09:29.530
So this is a shot of a much
earlier version of the Lantern

00:09:29.530 --> 00:09:30.950
user interface.

00:09:30.950 --> 00:09:33.300
But one thing we try to
do in the user interface

00:09:33.300 --> 00:09:34.760
itself is just
really give people

00:09:34.760 --> 00:09:39.070
this sense of connection
to people around the world.

00:09:39.070 --> 00:09:42.940
So we're trying to build this
just like citizen-run piece

00:09:42.940 --> 00:09:46.080
of software that allows
people around the world,

00:09:46.080 --> 00:09:48.850
no matter where they're
from, to directly connect.

00:09:48.850 --> 00:09:52.310
So this is showing in
real time your connections

00:09:52.310 --> 00:09:53.130
around the world.

00:09:53.130 --> 00:09:55.260
And this is mock
data at this point.

00:09:55.260 --> 00:09:57.230
I'll show you some
live data later on.

00:09:57.230 --> 00:09:59.480
But this is an example of a
user connecting from Iran.

00:10:02.500 --> 00:10:05.300
So one aspect of--
I want to dive

00:10:05.300 --> 00:10:08.860
into some of the more detailed
engineering things that we do.

00:10:08.860 --> 00:10:13.020
So blocking resistance is
really a core part of Lantern

00:10:13.020 --> 00:10:14.080
and differentiates it.

00:10:14.080 --> 00:10:16.300
Some of the ways we
do blocking resistance

00:10:16.300 --> 00:10:19.410
differentiates it from certainly
Tor and from other tools

00:10:19.410 --> 00:10:20.420
out there.

00:10:20.420 --> 00:10:23.920
So we use this algorithm
called Kaleidoscope

00:10:23.920 --> 00:10:26.820
to distribute
addresses of proxies.

00:10:26.820 --> 00:10:28.660
So one big challenge
out there is,

00:10:28.660 --> 00:10:32.460
how do you distribute the
addresses of proxy/access

00:10:32.460 --> 00:10:35.510
points in such a way that people
on the network can discover

00:10:35.510 --> 00:10:37.080
them but censors cannot?

00:10:38.860 --> 00:10:42.100
So Kaleidoscope uses a
trust network to do that.

00:10:42.100 --> 00:10:46.890
And basically, what Kaleidoscope
calls advertisements

00:10:46.890 --> 00:10:49.670
for proxies sort of trickle
through the network,

00:10:49.670 --> 00:10:52.060
first, along a random walk.

00:10:52.060 --> 00:10:54.970
And basically, from that
point after, it just

00:10:54.970 --> 00:10:57.040
uses the same random walk.

00:10:57.040 --> 00:11:00.130
So it initially chooses a path
and then always uses that path.

00:11:00.130 --> 00:11:04.290
And basically, the idea is that
if a censor joins the network,

00:11:04.290 --> 00:11:06.227
they're not going
to learn about all

00:11:06.227 --> 00:11:07.810
of the proxies that
are already there.

00:11:09.290 --> 00:11:14.151
A new actor on the network can't
learn about all the existing

00:11:14.151 --> 00:11:14.650
proxies.

00:11:14.650 --> 00:11:16.108
They might learn
about new proxies,

00:11:16.108 --> 00:11:17.970
but they won't learn
about existing proxies.

00:11:17.970 --> 00:11:20.830
So that's one way that
Lantern stays unblocked.

00:11:29.187 --> 00:11:32.037
The sort of key component
of that is again,

00:11:32.037 --> 00:11:33.870
this goes back to this
peer-to-peer element.

00:11:33.870 --> 00:11:36.880
So this trust network
component is useless

00:11:36.880 --> 00:11:39.580
unless you're able to
connect peers directly.

00:11:39.580 --> 00:11:43.299
Like if I trust an individual
other user on the network,

00:11:43.299 --> 00:11:44.840
if that's just some
server out there,

00:11:44.840 --> 00:11:47.150
it sort of breaks this
trust network model

00:11:47.150 --> 00:11:50.030
because that's not associated
with an individual, at least

00:11:50.030 --> 00:11:52.440
in the normal conception of it.

00:11:52.440 --> 00:11:58.240
So the way we do peer-to-peer
in Lantern is using WebRTC.

00:11:58.240 --> 00:12:00.240
And we're releasing
a new library

00:12:00.240 --> 00:12:02.740
called Natty that
basically wraps up

00:12:02.740 --> 00:12:05.140
the WebRTC
implementation in Chrome

00:12:05.140 --> 00:12:07.560
and just releases it as a
separate library that anyone

00:12:07.560 --> 00:12:10.210
can use as a standalone entity.

00:12:12.020 --> 00:12:14.750
And I imagine most people
here are familiar with WebRTC.

00:12:14.750 --> 00:12:18.440
But basically, it uses UDP to
traverse NATs between directly

00:12:18.440 --> 00:12:19.477
between browsers.

00:12:19.477 --> 00:12:21.060
We're using it not
within the browser,

00:12:21.060 --> 00:12:23.430
but within Lantern
itself to create

00:12:23.430 --> 00:12:25.180
that peer-to-peer connectivity.

00:12:25.180 --> 00:12:31.790
So doing that over UDP has
some interesting properties.

00:12:31.790 --> 00:12:35.160
So it just so happens
that particularly

00:12:35.160 --> 00:12:39.290
over these long-distance links
that Lantern tends to deal with

00:12:39.290 --> 00:12:42.120
between, say, China and
here in Mountain View,

00:12:42.120 --> 00:12:45.770
TCP really doesn't
handle that well.

00:12:45.770 --> 00:12:48.160
So it sees this
high-latency connection

00:12:48.160 --> 00:12:51.406
and sees this high packet loss
and mistakes it for congestion,

00:12:51.406 --> 00:12:51.905
essentially.

00:12:53.310 --> 00:12:57.530
So it sort of settles on a
sub-optimized window size

00:12:57.530 --> 00:12:59.510
that really slows
down the connection.

00:12:59.510 --> 00:13:04.980
So by implementing custom
protocols over UDP,

00:13:04.980 --> 00:13:07.810
we're able to really speed up
those high-latency connections

00:13:07.810 --> 00:13:10.610
between uncensored regions
and censored regions.

00:13:10.610 --> 00:13:14.780
And it sort of just so
happens that the best way

00:13:14.780 --> 00:13:18.130
to traverse NATs and
firewalls is using UDP.

00:13:18.130 --> 00:13:20.360
So it's sort of a
handy marriage there.

00:13:22.330 --> 00:13:24.770
So I want to dive
into a little bit

00:13:24.770 --> 00:13:28.740
sort of how we've released
this stuff over time

00:13:28.740 --> 00:13:30.020
around the world.

00:13:30.020 --> 00:13:33.750
So this is just a shot of
satellite dishes in Tehran.

00:13:33.750 --> 00:13:38.190
So in Iran, it's illegal
to own a satellite dish.

00:13:38.190 --> 00:13:39.940
But if you look at
the skyline of Tehran,

00:13:39.940 --> 00:13:42.050
you see satellite
dishes everywhere.

00:13:42.050 --> 00:13:46.080
So Lantern, in a lot of ways,
is similar to that in the sense

00:13:46.080 --> 00:13:47.540
that it's very visible.

00:13:48.614 --> 00:13:51.030
These satellite dishes are
very visible on these rooftops.

00:13:51.030 --> 00:13:54.200
And Lantern, or really
any tool this type,

00:13:54.200 --> 00:13:56.800
like Tor or anything else, is
very visible on the network.

00:13:58.014 --> 00:14:00.180
If you're looking at all
the network packets passing

00:14:00.180 --> 00:14:01.960
through the entire
country, you can

00:14:01.960 --> 00:14:03.790
see that these
connections are unique,

00:14:03.790 --> 00:14:07.534
or these users are using
the network in a unique way.

00:14:07.534 --> 00:14:09.450
So Lantern is certainly
visible on the network

00:14:09.450 --> 00:14:10.340
in that same sense.

00:14:10.340 --> 00:14:12.890
And it's focused on
access in the same sense

00:14:12.890 --> 00:14:16.140
that these satellite dishes
are focused on access.

00:14:16.140 --> 00:14:19.610
So we don't really get into
anonymity certainly in the way

00:14:19.610 --> 00:14:23.075
that Tor does, but
our primary focus

00:14:23.075 --> 00:14:26.760
is staying unblocked
and providing access.

00:14:26.760 --> 00:14:29.770
So in terms of the
satellite dishes,

00:14:29.770 --> 00:14:34.390
this was sort of a milestone
moment in Lantern's history

00:14:34.390 --> 00:14:37.390
last Decem-- or I guess
November actually--

00:14:37.390 --> 00:14:39.870
when we went on a
satellite television

00:14:39.870 --> 00:14:40.840
station called Manoto1.

00:14:42.870 --> 00:14:45.340
So Manoto is the largest
TV station in Iran,

00:14:45.340 --> 00:14:48.260
or largest satellite TV
station in Iran, and because

00:14:48.260 --> 00:14:50.690
of that, the largest
station, period.

00:14:50.690 --> 00:14:53.340
And this is just the
Lantern piece on Manoto.

00:14:54.690 --> 00:14:59.650
And basically, in order to
facilitate this broadcast,

00:14:59.650 --> 00:15:02.940
they asked us, hey,
can you open up

00:15:02.940 --> 00:15:06.160
downloads to Lantern
from the website

00:15:06.160 --> 00:15:10.220
as a part of this broadcast so
that we can announce this thing

00:15:10.220 --> 00:15:12.380
and have people actually
able to download it?

00:15:12.380 --> 00:15:15.760
Because prior to that, based
on that Kaleidoscope algorithm

00:15:15.760 --> 00:15:18.180
we were talking about,
Lantern was invite-only.

00:15:18.180 --> 00:15:20.550
So the only way to get
access to the network

00:15:20.550 --> 00:15:23.490
was through your friends
already having access

00:15:23.490 --> 00:15:25.150
and getting invited.

00:15:25.150 --> 00:15:26.307
So we did that.

00:15:26.307 --> 00:15:28.390
And to some extent, we
sort of broke our own rules

00:15:28.390 --> 00:15:29.150
when we did that.

00:15:30.330 --> 00:15:33.330
Basically, we allowed users,
when they came to our website,

00:15:33.330 --> 00:15:35.390
to enter their email
address and we would just

00:15:35.390 --> 00:15:37.340
automatically invite them.

00:15:37.340 --> 00:15:41.080
And relatively quickly in
Iran, certainly the day

00:15:41.080 --> 00:15:43.110
of this broadcast, a
fair number of people

00:15:43.110 --> 00:15:44.450
started picking up on it.

00:15:44.450 --> 00:15:48.440
But within hours in China,
social media in China

00:15:48.440 --> 00:15:50.210
really started to pick up on it.

00:15:50.210 --> 00:15:54.770
So we started getting far
more downloads from China

00:15:54.770 --> 00:15:57.620
than from Iran within
that first 12 hours.

00:15:57.620 --> 00:15:59.885
But the problem was
that we were, again,

00:15:59.885 --> 00:16:01.510
sort of breaking our
own rules in terms

00:16:01.510 --> 00:16:03.160
of blocking resistance.

00:16:03.160 --> 00:16:06.400
And basically, about
four weeks later,

00:16:06.400 --> 00:16:10.830
there was an article in the
"South China Morning Post"

00:16:10.830 --> 00:16:14.340
describing this massive
growth of Lantern in China.

00:16:14.340 --> 00:16:17.560
And then about a week after
that, Lantern was blocked.

00:16:17.560 --> 00:16:21.402
So it seems like
that article really

00:16:21.402 --> 00:16:23.860
focused the attention of the
Great Firewall, people working

00:16:23.860 --> 00:16:27.050
on the Great Firewall, to
get them to block Lantern.

00:16:27.050 --> 00:16:29.760
And at that point, because
we had sort of intentionally

00:16:29.760 --> 00:16:32.460
broken our own rules,
it wasn't so surprising.

00:16:32.460 --> 00:16:36.682
But at the same time, we wanted
to be able to release Lantern

00:16:36.682 --> 00:16:38.890
just directly from the
website through open downloads

00:16:38.890 --> 00:16:40.329
to allow anyone to access it.

00:16:40.329 --> 00:16:41.620
So we had this sort of problem.

00:16:41.620 --> 00:16:44.630
How do we release
this openly so we

00:16:44.630 --> 00:16:46.595
can help more people
while at the same time

00:16:46.595 --> 00:16:47.470
keeping it unblocked?

00:16:49.810 --> 00:16:51.700
In that instance, it
actually turned out

00:16:51.700 --> 00:16:53.440
that the way they
were blocking it

00:16:53.440 --> 00:16:55.540
was not through
infiltration, but was

00:16:55.540 --> 00:17:00.637
rather through fingerprinting
our traffic on the network.

00:17:00.637 --> 00:17:02.970
So we were actually able to
fix that relatively quickly,

00:17:02.970 --> 00:17:05.859
so to look really exactly
like Apache byte for byte.

00:17:05.859 --> 00:17:08.582
Prior to that, we didn't look
like Apache byte for byte

00:17:08.582 --> 00:17:09.290
over the network.

00:17:09.290 --> 00:17:13.040
And changing that really
fixed that problem.

00:17:13.040 --> 00:17:15.819
But in that window,
it was the case

00:17:15.819 --> 00:17:18.960
that if you ran Lantern at home
on your home network, literally

00:17:18.960 --> 00:17:21.359
your computer would
be blocked from China

00:17:21.359 --> 00:17:22.750
within like an hour and a half.

00:17:22.750 --> 00:17:26.450
So no traffic would be able to
flow to your machine from China

00:17:26.450 --> 00:17:29.040
within about an hour and a half.

00:17:29.040 --> 00:17:30.550
We fixed that
within about a week,

00:17:30.550 --> 00:17:33.650
but we still had this problem
of how do you distribute Lantern

00:17:33.650 --> 00:17:35.720
more broadly while
keeping it unblocked?

00:17:37.690 --> 00:17:40.470
So what paths forward are there?

00:17:40.470 --> 00:17:43.190
And what have we implemented?

00:17:43.190 --> 00:17:49.635
So basically, there's this
thing called domain fronting.

00:17:52.600 --> 00:17:54.340
It goes by a couple
of different names.

00:17:54.340 --> 00:17:57.170
But really, the
promising strategies

00:17:57.170 --> 00:18:00.410
all revolve around this
idea of collateral freedom,

00:18:00.410 --> 00:18:04.120
so this idea of
strength of numbers.

00:18:04.120 --> 00:18:07.900
This idea that the best
way to stay unblocked

00:18:07.900 --> 00:18:11.520
is to somehow hide
in other things

00:18:11.520 --> 00:18:13.750
that censors don't
want to block.

00:18:13.750 --> 00:18:18.090
So you see that with
things like Amazon AWS.

00:18:18.090 --> 00:18:21.780
Like Lantern and a couple of
other tools for a long time

00:18:21.780 --> 00:18:24.630
were distributing all of
their installers on S3.

00:18:26.630 --> 00:18:29.660
Because basically, if you
were accessing S3 over HTTPS,

00:18:29.660 --> 00:18:33.470
the only way to block that
link is to block all of S3.

00:18:34.910 --> 00:18:38.540
And we thought that
censors would never

00:18:38.540 --> 00:18:41.470
take that step, especially
the Chinese and the Iranians

00:18:41.470 --> 00:18:42.890
would never take that step.

00:18:42.890 --> 00:18:46.020
But about two months
ago, they did.

00:18:46.020 --> 00:18:49.320
So China essentially
blocked all of S3,

00:18:49.320 --> 00:18:52.330
while sort of opening access
periodically to some data

00:18:52.330 --> 00:18:52.830
centers.

00:18:53.930 --> 00:18:56.410
But they blocked all
of S3 for the most part

00:18:56.410 --> 00:19:00.210
and crippled not only Lantern,
but sort of untold sites

00:19:00.210 --> 00:19:00.900
on the internet.

00:19:02.070 --> 00:19:06.570
So in that case, they
were willing to accept

00:19:06.570 --> 00:19:09.920
the collateral damage
associated with that blocking.

00:19:11.330 --> 00:19:15.150
But another sort of I guess
more promising example

00:19:15.150 --> 00:19:16.770
of this collateral
freedom thesis

00:19:16.770 --> 00:19:18.950
is this idea of domain
fronting that I mentioned.

00:19:18.950 --> 00:19:24.090
So with domain
fronting, basically you

00:19:24.090 --> 00:19:31.185
can trick websites,
websites/CDNs,

00:19:31.185 --> 00:19:34.940
into routing things
to places that they

00:19:34.940 --> 00:19:36.806
weren't intended to be routed.

00:19:36.806 --> 00:19:38.680
So I'm just going to
show you a quick example

00:19:38.680 --> 00:19:39.895
of doing this over cURL.

00:19:41.170 --> 00:19:46.960
So this is just going to be
a cURL call to Hacker News,

00:19:46.960 --> 00:19:47.960
to news.ycombinator.com.

00:19:49.320 --> 00:19:53.170
And basically, all we're doing
here is specifying a header.

00:19:53.170 --> 00:19:55.886
In the host header,
specifying reddit.com.

00:19:55.886 --> 00:19:58.520
And you're going to
see what happens here.

00:19:58.520 --> 00:20:00.010
And note that it's HTTPS.

00:20:00.010 --> 00:20:03.210
So we're making an SSL
connection to Hacker News,

00:20:03.210 --> 00:20:05.880
specifying a host
header of reddit.com.

00:20:05.880 --> 00:20:08.220
So you see that in the
result-- and we're just

00:20:08.220 --> 00:20:10.250
grabbing for the
title in the HTML.

00:20:10.250 --> 00:20:12.750
So you can see in the result,
it clearly returned Reddit.

00:20:16.020 --> 00:20:17.760
So that's kind of interesting.

00:20:17.760 --> 00:20:23.285
It returned a site that was not
specified in the original URL.

00:20:24.380 --> 00:20:28.410
So from the perspective
of a censor watching this,

00:20:28.410 --> 00:20:32.190
they'll see this connection to
news.ycombinator.com, this SSL

00:20:32.190 --> 00:20:35.600
connection, but then at that
point everything's encrypted.

00:20:35.600 --> 00:20:38.466
They don't see that HTTP
host header passing through,

00:20:38.466 --> 00:20:40.090
and they don't see
that eventually this

00:20:40.090 --> 00:20:41.048
is going to reddit.com.

00:20:42.248 --> 00:20:46.090
So on the one hand, that's kind
of interesting in the sense

00:20:46.090 --> 00:20:48.140
that you can imagine
instead of reddit.com--

00:20:48.140 --> 00:20:50.540
I think Reddit is actually
unblocked, surprisingly,

00:20:50.540 --> 00:20:52.040
pretty much everywhere
in the world.

00:20:52.040 --> 00:20:55.440
But you can imagine that
being just some blocked site.

00:20:55.440 --> 00:20:57.300
So you could go directly
to a blocked site.

00:20:57.300 --> 00:20:59.445
Or you could imagine that
being a connection to one

00:20:59.445 --> 00:21:00.070
of our servers.

00:21:01.180 --> 00:21:05.090
So this is a diagram of what's
happening under the hood.

00:21:06.940 --> 00:21:09.300
So if that's going to
not just another website

00:21:09.300 --> 00:21:13.410
but one of our servers, our
servers can go anywhere.

00:21:13.410 --> 00:21:16.530
So our proxies can send
traffic wherever they want.

00:21:16.530 --> 00:21:18.070
So that's exactly what we do.

00:21:18.070 --> 00:21:20.740
And this is David Fifield who's
a researcher over at Berkeley

00:21:20.740 --> 00:21:23.100
who has been doing some
great work in this area.

00:21:23.100 --> 00:21:26.940
So what I just described is
both implemented in Lantern

00:21:26.940 --> 00:21:30.110
and is a pluggable
transport in Tor.

00:21:30.110 --> 00:21:32.220
So this is a diagram
from David, who's

00:21:32.220 --> 00:21:33.655
a volunteer on the Tor project.

00:21:35.070 --> 00:21:35.570
But yeah.

00:21:35.570 --> 00:21:38.930
So this demonstrates
using that little trick

00:21:38.930 --> 00:21:41.740
to go to one of our
servers instead of

00:21:41.740 --> 00:21:44.137
going to the
destination website.

00:21:44.137 --> 00:21:45.720
So the neat thing
about this, in terms

00:21:45.720 --> 00:21:48.890
of all this issue of how do
we enable open downloads,

00:21:48.890 --> 00:21:53.590
is that all of a sudden, if the
IP address of a Lantern server

00:21:53.590 --> 00:21:56.140
is blocked, it doesn't matter.

00:21:56.140 --> 00:22:00.060
Because all the censor
sees is this SSL connection

00:22:00.060 --> 00:22:02.720
to this other site.

00:22:02.720 --> 00:22:05.570
And then we can send that
traffic wherever we want.

00:22:05.570 --> 00:22:09.270
So in Lantern's case,
we send that traffic

00:22:09.270 --> 00:22:12.410
not just to our servers.

00:22:12.410 --> 00:22:14.070
Lantern is a hybrid
system where we

00:22:14.070 --> 00:22:16.650
run some servers to
make sure that people's

00:22:16.650 --> 00:22:18.830
quality of service is good.

00:22:18.830 --> 00:22:20.650
But we send it also to peers.

00:22:22.140 --> 00:22:27.390
So we're actually entering
peers in our DNS round robin

00:22:27.390 --> 00:22:29.660
and using this domain
fronting technique

00:22:29.660 --> 00:22:31.810
to get to those peers.

00:22:31.810 --> 00:22:35.950
So in that host header, we're
specifying roundrobin.--

00:22:35.950 --> 00:22:38.660
it's actually
[? roundrobin.getintum.org ?]

00:22:38.660 --> 00:22:40.160
for who knows what reason.

00:22:40.160 --> 00:22:44.840
But that's not actually entered
in DNS, but in this example,

00:22:44.840 --> 00:22:47.900
is on CloudFlare's DNS.

00:22:47.900 --> 00:22:49.930
So we're, in that host
header, sending you

00:22:49.930 --> 00:22:53.174
to our DNS round robin
that is a mixture of peers

00:22:53.174 --> 00:22:53.840
and our servers.

00:22:57.100 --> 00:23:01.540
So that enabled us to
re-release these open downloads

00:23:01.540 --> 00:23:04.510
while staying unblocked,
that little trick.

00:23:04.510 --> 00:23:07.789
And one of the
goals behind Lantern

00:23:07.789 --> 00:23:09.330
that I didn't really
mention, and one

00:23:09.330 --> 00:23:11.780
of the goals with this
peer-to-peer component,

00:23:11.780 --> 00:23:13.100
is scalability.

00:23:13.100 --> 00:23:16.700
So we're really interested
in the peer-to-peer aspect

00:23:16.700 --> 00:23:18.880
in terms of blocking
resistance, but also

00:23:18.880 --> 00:23:20.000
in terms of scalability.

00:23:20.000 --> 00:23:23.170
If 500 million people in China
all got on Lantern tomorrow,

00:23:23.170 --> 00:23:26.530
or all started using censorship
circumvention tools tomorrow,

00:23:26.530 --> 00:23:28.650
we'd have a big problem.

00:23:28.650 --> 00:23:31.860
And you really
could not-- possibly

00:23:31.860 --> 00:23:34.670
Google could accommodate
that type of traffic

00:23:34.670 --> 00:23:37.820
for proxying that
number of people.

00:23:37.820 --> 00:23:41.240
But sort of any normal
entity with lesser means

00:23:41.240 --> 00:23:44.990
would not be able to do that
on a financially scalable way.

00:23:46.370 --> 00:23:48.910
So this is a shot
of when we enabled

00:23:48.910 --> 00:23:51.842
this peer-to-peer traffic
in our round robin of one

00:23:51.842 --> 00:23:53.800
of our servers, the load
on one of our servers.

00:23:53.800 --> 00:23:57.530
So you see as soon
as we enabled peers,

00:23:57.530 --> 00:23:59.420
just the CPU just dropped
to almost nothing.

00:24:00.560 --> 00:24:02.516
So with all of these
peers running Lantern

00:24:02.516 --> 00:24:05.860
in the uncensored world acting
as these access points, all

00:24:05.860 --> 00:24:07.610
of a sudden we
can build a system

00:24:07.610 --> 00:24:12.160
that is financially scalable in
terms of solving this problem.

00:24:12.160 --> 00:24:20.760
So this is just a shot of
me running Lantern at home.

00:24:20.760 --> 00:24:24.340
So once we started releasing
this domain fronting technique,

00:24:24.340 --> 00:24:26.892
if you just run Lantern
on your home machine,

00:24:26.892 --> 00:24:28.600
you'll start to see
this traffic from all

00:24:28.600 --> 00:24:30.016
over the world
coming through you.

00:24:30.016 --> 00:24:31.806
So this is live traffic.

00:24:31.806 --> 00:24:33.180
And this is when
we first started

00:24:33.180 --> 00:24:34.810
to really push this out.

00:24:34.810 --> 00:24:39.450
So actually, you'll see a lot
more traffic now if you run it.

00:24:41.750 --> 00:24:43.940
But this is, to me, sort
of the exciting part,

00:24:43.940 --> 00:24:46.440
is you all of a sudden sort of
feel this sense of connection

00:24:46.440 --> 00:24:48.440
with people around the
world, and are actually

00:24:48.440 --> 00:24:52.120
tangibly really solving
this problem of censorship,

00:24:52.120 --> 00:24:54.300
and are actually giving
people access in real time.

00:24:58.050 --> 00:25:02.020
I just tend to run Lantern in
with what we call Give mode

00:25:02.020 --> 00:25:03.880
on my machine overnight.

00:25:03.880 --> 00:25:06.580
And this one night
I just-- there

00:25:06.580 --> 00:25:10.477
were some little glitch where
I went into Dev mode in Chrome.

00:25:10.477 --> 00:25:12.060
And somehow, I think
there's basically

00:25:12.060 --> 00:25:13.960
some bug in the
Lantern UI that made

00:25:13.960 --> 00:25:17.740
it show all of the connections
throughout the entire night.

00:25:17.740 --> 00:25:19.330
So I just took a
screenshot of that.

00:25:19.330 --> 00:25:19.996
And you can see.

00:25:19.996 --> 00:25:22.340
That's my computer
there in Los Angeles.

00:25:22.340 --> 00:25:24.780
And you can just see all
of these people connecting

00:25:24.780 --> 00:25:28.957
through me throughout the
night from all over the world.

00:25:28.957 --> 00:25:31.290
And in some cases, obviously,
a lot of these connections

00:25:31.290 --> 00:25:33.060
are not from censored regions.

00:25:33.060 --> 00:25:35.640
And Lantern does that
for a couple of reasons.

00:25:35.640 --> 00:25:39.350
So like, for example,
when it first runs,

00:25:39.350 --> 00:25:40.540
we don't know where you are.

00:25:40.540 --> 00:25:42.690
So we have to geolocate
you in some way.

00:25:42.690 --> 00:25:45.680
And to do that, oftentimes we
have to tunnel that traffic.

00:25:45.680 --> 00:25:48.330
So we don't know
if the geolocation

00:25:48.330 --> 00:25:49.922
servers themselves are blocked.

00:25:49.922 --> 00:25:52.130
So we'll tunnel that traffic
through Lantern as well.

00:25:53.810 --> 00:25:57.830
But to me, this was a really
sort of gratifying moment.

00:25:57.830 --> 00:26:01.030
Because the combination of just
being able to instantly help

00:26:01.030 --> 00:26:03.710
out through running Lantern
on your home machine

00:26:03.710 --> 00:26:07.080
and really demonstrating
the financial viability

00:26:07.080 --> 00:26:11.300
of this model with peers really
taking the load off of those

00:26:11.300 --> 00:26:15.120
servers was just a
super-exciting time.

00:26:17.930 --> 00:26:21.580
And I guess with
Lantern down the road,

00:26:21.580 --> 00:26:23.500
as we kind of move
forward, we're

00:26:23.500 --> 00:26:25.580
really just pushing
it out much further.

00:26:25.580 --> 00:26:29.180
And really are still honing
this domain fronting technique.

00:26:29.180 --> 00:26:31.460
So there's a lot
of little quirks

00:26:31.460 --> 00:26:35.440
to how this works in terms
of like if you have to tunnel

00:26:35.440 --> 00:26:38.890
things through HTTP
post requests and tunnel

00:26:38.890 --> 00:26:40.475
them back through get requests.

00:26:41.890 --> 00:26:44.280
So it still is very
much a work in progress.

00:26:44.280 --> 00:26:47.750
And we're definitely trying
to grow the Lantern team

00:26:47.750 --> 00:26:50.200
and push it out much more
broadly around the world.

00:26:52.090 --> 00:26:54.510
So yeah, we certainly could
use all the help we can get.

00:26:54.510 --> 00:26:57.391
I know 20% time is maybe not
what it once was at Google,

00:26:57.391 --> 00:26:59.016
but we could certainly
use all the help

00:26:59.016 --> 00:27:04.310
we can get in terms of whether
it's engineering help or even

00:27:04.310 --> 00:27:07.180
project management or
product management help.

00:27:07.180 --> 00:27:10.200
So thanks so much for
your time, everyone,

00:27:10.200 --> 00:27:11.690
and really appreciate it.

00:27:12.890 --> 00:27:15.770
AUDIENCE: So what stops,
say, the Chinese government

00:27:15.770 --> 00:27:18.747
from just running a whole
bunch of fake Lantern servers

00:27:18.747 --> 00:27:20.080
and making the service unusable?

00:27:22.710 --> 00:27:24.540
ADAM FISK: Yeah, that's
a great question.

00:27:24.540 --> 00:27:29.330
So I think to me, the
key there is unusable.

00:27:29.330 --> 00:27:32.110
So from our perspective,
if the Chinese government

00:27:32.110 --> 00:27:35.640
wants to run a bunch of servers
that actually proxy access,

00:27:35.640 --> 00:27:36.745
that's fine.

00:27:36.745 --> 00:27:38.370
And if you think
about it, they already

00:27:38.370 --> 00:27:40.780
see all the traffic coming
in now to the country.

00:27:40.780 --> 00:27:43.990
So they have infinite visibility
into the network traffic.

00:27:43.990 --> 00:27:45.480
So it's not as if
they're running

00:27:45.480 --> 00:27:47.670
a server they necessarily
have more visibility.

00:27:49.450 --> 00:27:51.360
So there's that aspect to it.

00:27:51.360 --> 00:27:54.470
But then there's this aspect
of servers that don't work.

00:27:54.470 --> 00:27:57.110
So what Lantern does
is it'll detect.

00:27:57.110 --> 00:28:00.090
Does this server
allow TCP connections?

00:28:00.090 --> 00:28:04.020
Does it actually return the
site that I requested it return?

00:28:04.020 --> 00:28:07.930
And it'll take proxies out of
rotation if they don't work.

00:28:07.930 --> 00:28:10.675
AUDIENCE: But it might
not be easy to detect

00:28:10.675 --> 00:28:12.230
a poorly-behaving proxy.

00:28:12.230 --> 00:28:14.700
Like what if they just
slow everything down a ton?

00:28:15.514 --> 00:28:16.180
ADAM FISK: Yeah.

00:28:16.180 --> 00:28:19.610
So certainly, to some
extent, that's an arms race.

00:28:19.610 --> 00:28:23.200
Like a dedicated adversary
doing those types of things

00:28:23.200 --> 00:28:26.370
would be challenging in
terms of-- things that

00:28:26.370 --> 00:28:28.839
are easy to detect
are a proxy not

00:28:28.839 --> 00:28:30.130
accepting incoming connections.

00:28:31.490 --> 00:28:34.350
We require that a proxy always
accept incoming connections

00:28:34.350 --> 00:28:35.660
within five seconds.

00:28:35.660 --> 00:28:38.130
But things like it's
really slowing things down,

00:28:38.130 --> 00:28:39.520
that's a bit harder to detect.

00:28:39.520 --> 00:28:42.420
And currently on
Lantern, that would

00:28:42.420 --> 00:28:44.360
be a pretty effective attack.

00:28:44.360 --> 00:28:46.560
Down the road, we'll
start to do things

00:28:46.560 --> 00:28:50.110
like just even for performance
reasons outside of attacks,

00:28:50.110 --> 00:28:54.850
track the performance of proxies
in general so we can rank them.

00:28:54.850 --> 00:28:57.460
We want to give you fast
service no matter what.

00:28:57.460 --> 00:29:00.480
So we'll always try to
send you to a fast proxy.

00:29:00.480 --> 00:29:02.210
Right now, we don't
really get into that.

00:29:02.210 --> 00:29:04.631
But that's definitely
an interesting attack

00:29:04.631 --> 00:29:05.630
on the network for sure.

00:29:06.750 --> 00:29:09.740
AUDIENCE: I wonder if accepting
money from the State Department

00:29:09.740 --> 00:29:10.615
affects the adoption?

00:29:12.194 --> 00:29:13.610
ADAM FISK: That's
a good question.

00:29:13.610 --> 00:29:16.275
Yeah, I mean, we
don't really know.

00:29:16.275 --> 00:29:18.400
We don't really have a lot
of visibility into that.

00:29:19.780 --> 00:29:22.130
This came up-- we did
an "Ask Me Anything,"

00:29:22.130 --> 00:29:24.950
an "AMA," on Reddit and
this question came up.

00:29:24.950 --> 00:29:27.890
And there's clearly
sort of comparisons

00:29:27.890 --> 00:29:30.090
between the State
Department and the NSA.

00:29:30.090 --> 00:29:33.260
And in responding
to that question,

00:29:33.260 --> 00:29:36.386
I think this response
applies here, too.

00:29:36.386 --> 00:29:39.010
I just was pointing out that the
branch of the State Department

00:29:39.010 --> 00:29:40.884
that we work with is
the Bureau of Democracy,

00:29:40.884 --> 00:29:42.180
Human Rights, and Labor.

00:29:42.180 --> 00:29:46.160
So their entire mission is
to advocate for human rights

00:29:46.160 --> 00:29:48.120
and freedom of speech
around the world.

00:29:48.120 --> 00:29:50.604
So if you actually like
talk to these individuals

00:29:50.604 --> 00:29:52.020
and get to know
these individuals,

00:29:52.020 --> 00:29:55.670
they're just literally,
these like public servants

00:29:55.670 --> 00:29:57.370
who are working
for much less money

00:29:57.370 --> 00:29:59.380
than they would
otherwise be making

00:29:59.380 --> 00:30:02.470
in like these terrible
offices in DC.

00:30:05.210 --> 00:30:09.290
So really, those individuals
end up controlling this money.

00:30:09.290 --> 00:30:11.240
And they are very
much like-minded

00:30:11.240 --> 00:30:14.120
and have a very similar
mission to our own mission.

00:30:14.120 --> 00:30:18.300
So it may well sort
of hurt adoption.

00:30:18.300 --> 00:30:20.420
And we try to be as open
about that as possible.

00:30:20.420 --> 00:30:22.680
But in terms of how much it
actually affects adoption,

00:30:22.680 --> 00:30:23.426
that's unclear.

00:30:23.426 --> 00:30:25.550
I think for the most part,
in our experience people

00:30:25.550 --> 00:30:27.952
in censored regions
will use whatever works.

00:30:27.952 --> 00:30:30.160
So if something works, they
don't, for the most part,

00:30:30.160 --> 00:30:33.630
care why it works.

00:30:33.630 --> 00:30:35.900
But I think it may
be more of an issue

00:30:35.900 --> 00:30:38.460
for the uncensored regions than
it is for censored regions,

00:30:38.460 --> 00:30:39.320
actually.

00:30:39.320 --> 00:30:42.809
AUDIENCE: What kind of
anonymity does Lantern provide?

00:30:42.809 --> 00:30:44.100
ADAM FISK: Really, very little.

00:30:44.100 --> 00:30:46.280
So I mean, it's a one-hop proxy.

00:30:46.280 --> 00:30:48.370
So there is some
degree of anonymity

00:30:48.370 --> 00:30:50.490
that one-hop proxies provide.

00:30:50.490 --> 00:30:52.700
But we basically just
try not to even get

00:30:52.700 --> 00:30:53.890
into the anonymity game.

00:30:53.890 --> 00:30:58.450
So we work pretty closely with
various people on the Tor team.

00:30:58.450 --> 00:31:00.120
And if you really
need anonymity,

00:31:00.120 --> 00:31:02.670
we would really recommend
that people just use Tor.

00:31:04.220 --> 00:31:06.970
From my perspective,
I think that tackling

00:31:06.970 --> 00:31:10.240
sort of really usable
tools that stay

00:31:10.240 --> 00:31:12.740
unblocked while also
tackling anonymity

00:31:12.740 --> 00:31:14.810
is just super,
super challenging.

00:31:14.810 --> 00:31:18.230
So we're really focused on
just building a tool that stays

00:31:18.230 --> 00:31:20.870
unblocked and provides
really useful access.

00:31:20.870 --> 00:31:24.965
And yeah, if you're a political
activist in Iran or China,

00:31:24.965 --> 00:31:26.590
or something like
that, we would really

00:31:26.590 --> 00:31:29.590
recommend that you use
something like Tor, particularly

00:31:29.590 --> 00:31:32.640
if you're nervous about things
that you're doing online.

00:31:33.442 --> 00:31:34.900
AUDIENCE: I am
asking that question

00:31:34.900 --> 00:31:36.460
because I come
from such a country

00:31:36.460 --> 00:31:39.702
where once you're known,
you can go to jail.

00:31:39.702 --> 00:31:40.660
ADAM FISK: Yeah, right.

00:31:40.660 --> 00:31:42.340
AUDIENCE: And bad things
can happen to you.

00:31:42.340 --> 00:31:43.006
ADAM FISK: Yeah.

00:31:43.006 --> 00:31:45.770
I think those issues
are interesting.

00:31:47.840 --> 00:31:52.000
I think, to me, if you're a
political activist in a region,

00:31:52.000 --> 00:31:55.700
it's to some extent the same as
being some political activist

00:31:55.700 --> 00:31:58.635
who's actually potentially
doing illegal things in the US.

00:32:00.230 --> 00:32:04.120
So things like running
Tor or running Lantern,

00:32:04.120 --> 00:32:07.130
I think a lot of times just
the visibility on the network,

00:32:07.130 --> 00:32:09.359
like the fact that you're
running these tools,

00:32:09.359 --> 00:32:10.900
might be enough if
you're an activist

00:32:10.900 --> 00:32:14.480
to give a regime an excuse
to go knocking on your door

00:32:14.480 --> 00:32:15.650
and pick you up.

00:32:15.650 --> 00:32:18.970
But I think in a lot of
cases that just visibility

00:32:18.970 --> 00:32:20.740
on the network itself
is almost as much

00:32:20.740 --> 00:32:22.380
of an issue as the anonymity.

00:32:22.380 --> 00:32:25.170
Because if you think about if
you're running Lantern in China

00:32:25.170 --> 00:32:28.350
and you're visiting some
website, if that website is not

00:32:28.350 --> 00:32:30.002
in Iran-- or sorry,
did I say China?

00:32:30.002 --> 00:32:30.710
I can't remember.

00:32:30.710 --> 00:32:32.020
It's China, yeah.

00:32:32.020 --> 00:32:36.470
If you're in China and visiting
a website that's not in China,

00:32:36.470 --> 00:32:39.300
a censor is not going
to be able to see that.

00:32:39.300 --> 00:32:43.330
So they're not going to
deanonymize you that way.

00:32:43.330 --> 00:32:46.452
So if you're visiting a
website that's in China,

00:32:46.452 --> 00:32:47.910
they'll be able to
deanonymize you.

00:32:47.910 --> 00:32:50.570
But that's also an issue
with programs like Tor.

00:32:50.570 --> 00:32:54.930
So the idea of anonymity is
I think much more granular

00:32:54.930 --> 00:32:56.020
than we think of it as.

00:32:56.020 --> 00:32:58.865
There's anonymity in
the face of a censor.

00:32:58.865 --> 00:33:01.615
And there's anonymity
from a website.

00:33:01.615 --> 00:33:03.340
And I think those
are very different

00:33:03.340 --> 00:33:04.298
in different scenarios.

00:33:05.700 --> 00:33:09.600
AUDIENCE: You mentioned that
the clients use a geolocation

00:33:09.600 --> 00:33:10.360
mechanism.

00:33:10.360 --> 00:33:13.046
So that makes me wonder if
in these binding to proxies,

00:33:13.046 --> 00:33:14.670
in the random-walks,
and so on, there's

00:33:14.670 --> 00:33:17.090
some kind of optimized
routing you're trying to do?

00:33:17.980 --> 00:33:20.230
ADAM FISK: Right now, we
don't get into that too much.

00:33:20.230 --> 00:33:22.540
But we are seeing, especially
with that domain fronting

00:33:22.540 --> 00:33:25.630
technique that we've been doing,
that you're jumping through so

00:33:25.630 --> 00:33:28.800
many servers that
the geography starts

00:33:28.800 --> 00:33:30.080
to become a bit of an issue.

00:33:30.080 --> 00:33:33.380
So with the peer-to-peer
stuff, we don't do that.

00:33:33.380 --> 00:33:35.810
But we are starting to
look at that more with-- we

00:33:35.810 --> 00:33:38.310
may actually start to look at
it with the peer-to-peer stuff

00:33:38.310 --> 00:33:43.530
itself to try to really locate
proxies closer to CloudFlare

00:33:43.530 --> 00:33:45.440
data centers, essentially.

00:33:45.440 --> 00:33:47.274
Because with that domain
fronting technique,

00:33:47.274 --> 00:33:49.731
at this point we're tunneling
through these CloudFlare data

00:33:49.731 --> 00:33:50.420
centers.

00:33:50.420 --> 00:33:53.940
So that's really the geography
that makes the most sense.

00:33:53.940 --> 00:33:55.840
CloudFlare uses Anycast.

00:33:55.840 --> 00:33:58.710
So in China, that tends
to be the CloudFlare data

00:33:58.710 --> 00:33:59.870
center in Korea.

00:33:59.870 --> 00:34:02.630
So really, we want
peers in Korea.

00:34:02.630 --> 00:34:06.690
But at this point, partially
because of that trust network

00:34:06.690 --> 00:34:11.340
aspect, we can't optimize
the peers too much.

00:34:11.340 --> 00:34:14.647
But certainly, if you
have a lot of peers,

00:34:14.647 --> 00:34:15.980
we would be able to potentially.

00:34:15.980 --> 00:34:18.949
But over time, that's going to
be about a much bigger issue,

00:34:18.949 --> 00:34:22.170
I think, because there's staying
unblocked and being somewhat

00:34:22.170 --> 00:34:22.670
usable.

00:34:22.670 --> 00:34:24.336
And then the sort of
next step is speed,

00:34:24.336 --> 00:34:26.066
so making it as
fast as possible.

00:34:26.066 --> 00:34:27.690
AUDIENCE: But then
the Chinese censor's

00:34:27.690 --> 00:34:29.721
proxy would win, right?

00:34:29.721 --> 00:34:30.679
ADAM FISK: That's true.

00:34:32.150 --> 00:34:34.290
Yeah, so that's right.

00:34:34.290 --> 00:34:37.350
But in that case, that's OK.

00:34:37.350 --> 00:34:42.330
So there's latency and then
there's throughput, right?

00:34:42.330 --> 00:34:44.666
So if they're throttling
the throughput,

00:34:44.666 --> 00:34:45.540
then that's an issue.

00:34:45.540 --> 00:34:47.520
If they're low
latency, that's great.

00:34:47.520 --> 00:34:49.520
So we have to detect those
things independently.

00:34:49.980 --> 00:34:51.355
AUDIENCE: I guess
I'm just trying

00:34:51.355 --> 00:34:54.060
to get-- I wonder if there's
a fundamental trade-off

00:34:54.060 --> 00:34:57.675
between performance optimization
and the obscurity of proxies?

00:34:59.409 --> 00:35:01.200
ADAM FISK: Certainly,
if we sort of, again,

00:35:01.200 --> 00:35:04.150
broke some of our own rules
in terms of the trust network

00:35:04.150 --> 00:35:07.810
and chose proxies
that were faster,

00:35:07.810 --> 00:35:09.985
regardless of whether or
not they were trusted,

00:35:09.985 --> 00:35:11.110
I think that would be true.

00:35:13.170 --> 00:35:15.840
And there might be attacks
there where if you-- certainly,

00:35:15.840 --> 00:35:18.770
we assume the censors will
penetrate the trust network.

00:35:18.770 --> 00:35:22.060
So if they are able to
penetrate the trust network,

00:35:22.060 --> 00:35:25.300
then we would tend to
preference closer peers.

00:35:27.357 --> 00:35:28.940
But again, I think
a lot of that stuff

00:35:28.940 --> 00:35:31.320
comes down to Lantern
just detecting

00:35:31.320 --> 00:35:34.090
how well these proxies
are actually working

00:35:34.090 --> 00:35:37.180
and taking them out of rotation
if they're doing anything

00:35:37.180 --> 00:35:38.570
at all sort of sub-optimally.

00:35:42.360 --> 00:35:44.000
But yeah, I mean,
that line of attack

00:35:44.000 --> 00:35:46.004
is definitely an
interesting one for sure.

00:35:46.004 --> 00:35:48.170
AUDIENCE: Lantern has
tremendous potential for good.

00:35:48.170 --> 00:35:51.440
But how do you prevent
malevolent use,

00:35:51.440 --> 00:35:54.030
like systemic child
pornography distribution

00:35:54.030 --> 00:35:55.160
using your services?

00:35:55.160 --> 00:35:58.130
Do you see necessary
limits to this technology?

00:35:58.130 --> 00:35:59.796
Are there abuse
reporting abilities?

00:36:02.140 --> 00:36:04.775
ADAM FISK: There aren't abuse
reporting abilities right now.

00:36:05.920 --> 00:36:08.630
I think that's an
excellent question.

00:36:08.630 --> 00:36:10.850
The one thing I didn't
mention about Lantern

00:36:10.850 --> 00:36:12.380
in terms of how it
works by default

00:36:12.380 --> 00:36:13.720
is that it uses a whitelist.

00:36:13.720 --> 00:36:15.910
So it uses a whitelist
of sites that it provides

00:36:15.910 --> 00:36:17.990
access to that we
know are unblocked.

00:36:17.990 --> 00:36:21.430
So child porn sites are not
on that list, for example.

00:36:21.430 --> 00:36:25.620
And primarily, those
sites are newspapers

00:36:25.620 --> 00:36:28.030
we all know and
blogs that we know

00:36:28.030 --> 00:36:30.200
to be blocked in Iran and China.

00:36:30.200 --> 00:36:34.290
So I guess in my experience just
releasing consumer software,

00:36:34.290 --> 00:36:36.550
you can't overestimate
the laziness of users.

00:36:36.550 --> 00:36:38.555
So like the defaults
make a huge difference.

00:36:39.800 --> 00:36:41.940
So I actually think
that that whitelist

00:36:41.940 --> 00:36:45.939
is a significant factor in terms
of mitigating against that.

00:36:45.939 --> 00:36:47.480
The other thing that
we're looking at

00:36:47.480 --> 00:36:51.460
is implementing safe
DNS on the Give mode

00:36:51.460 --> 00:36:53.220
side, so on the uncensored side.

00:36:53.220 --> 00:36:58.840
So allowing uncensored users
to essentially act as censors.

00:36:58.840 --> 00:37:01.885
So to specify, OK, we
only want to allow sites

00:37:01.885 --> 00:37:03.135
on the whitelist, for example.

00:37:04.260 --> 00:37:05.854
Because users in
censored regions

00:37:05.854 --> 00:37:07.020
can customize the whitelist.

00:37:07.020 --> 00:37:08.603
They can add their
own sites that they

00:37:08.603 --> 00:37:10.760
know to be blocked that
maybe we don't know about.

00:37:10.760 --> 00:37:14.800
But we're strongly considering
allowing uncensored world users

00:37:14.800 --> 00:37:17.327
to limit how much
customization they

00:37:17.327 --> 00:37:18.785
will allow through
their computers.

00:37:21.210 --> 00:37:22.420
So that's another factor.

00:37:24.190 --> 00:37:27.410
Beyond that, I would
say to some extent,

00:37:27.410 --> 00:37:31.420
a criminal who would
use Tor-- I mean, sorry,

00:37:31.420 --> 00:37:33.080
use Lantern-- is a bad criminal.

00:37:33.080 --> 00:37:35.759
So I think to some extent, a
more sophisticated criminal

00:37:35.759 --> 00:37:36.550
would just use Tor.

00:37:39.100 --> 00:37:42.600
Because Lantern doesn't provide
anonymity in those ways.

00:37:42.600 --> 00:37:44.860
AUDIENCE: How big
is the network?

00:37:44.860 --> 00:37:46.290
How many active monthly users?

00:37:46.290 --> 00:37:47.322
ADAM FISK: Oh, gosh.

00:37:47.322 --> 00:37:49.530
We've done a horrible job
of tracking active monthly.

00:37:49.530 --> 00:37:51.306
It's about a thousand
at any one time.

00:37:51.306 --> 00:37:52.056
AUDIENCE: Proxies?

00:37:52.056 --> 00:37:53.764
ADAM FISK: A thousand
just users running.

00:37:53.764 --> 00:37:55.107
So it's about 50/50.

00:37:55.107 --> 00:37:57.440
Well, actually, it's changed
a little bit more recently.

00:37:57.440 --> 00:38:01.300
I think it's maybe 60/40
censors to uncensored.

00:38:01.300 --> 00:38:04.060
So it's a little more
censored world users

00:38:04.060 --> 00:38:05.362
than uncensored at this point.

00:38:05.362 --> 00:38:06.070
JASON: All right.

00:38:06.070 --> 00:38:06.986
Well, thank you, Adam.

00:38:06.986 --> 00:38:11.281
Really appreciate your coming
in and presenting the Lantern

00:38:11.281 --> 00:38:11.780
project.

00:38:11.780 --> 00:38:13.988
If anybody's interested in
getting in touch with Adam

00:38:13.988 --> 00:38:17.680
about potentially participating
or taking part in it,

00:38:17.680 --> 00:38:20.842
we can exchange information
after the tech talk.

00:38:20.842 --> 00:38:21.800
ADAM FISK: Sounds good.

00:38:21.800 --> 00:38:22.440
Thanks so much, Jason.

00:38:22.440 --> 00:38:22.890
JASON: Yeah.

00:38:22.890 --> 00:38:23.640
ADAM FISK: Appreciate it.

00:38:23.640 --> 00:38:24.240
Thanks, guys.

00:38:24.240 --> 00:38:28.790
[APPLAUSE]

