WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.241
[APPLAUSE]

00:00:06.030 --> 00:00:07.130
EMILY PUTZE: Hi, everyone.

00:00:07.130 --> 00:00:08.860
Welcome back from lunch.

00:00:08.860 --> 00:00:11.550
We're going to kick off the
next hour of sessions here,

00:00:11.550 --> 00:00:14.170
focused on the theme of
pre-launch best practices.

00:00:14.170 --> 00:00:16.940
And I'm going to go
ahead and get us started.

00:00:16.940 --> 00:00:18.589
So my name is Emily Putze.

00:00:18.589 --> 00:00:20.380
And I am a partner
development manager here

00:00:20.380 --> 00:00:23.380
at Google Play who specializes
in helping developers have

00:00:23.380 --> 00:00:25.180
more successful game launches.

00:00:25.180 --> 00:00:27.657
So as you can imagine I'm
pretty excited to be here today

00:00:27.657 --> 00:00:29.740
with my colleague Jonathan,
who will be coming out

00:00:29.740 --> 00:00:31.540
to join us in a
couple of minutes

00:00:31.540 --> 00:00:34.330
to talk to you about some trends
and tools surrounding new game

00:00:34.330 --> 00:00:36.690
launches.

00:00:36.690 --> 00:00:39.390
But first, before we
dive into some trends,

00:00:39.390 --> 00:00:40.474
let's first set the stage.

00:00:40.474 --> 00:00:42.139
And let's talk a
little bit about what's

00:00:42.139 --> 00:00:44.310
changed in the mobile games
industry in recent years

00:00:44.310 --> 00:00:48.470
and what that has
meant for new launches.

00:00:48.470 --> 00:00:50.850
So first and foremost,
times have changed,

00:00:50.850 --> 00:00:52.790
and they've changed
very quickly.

00:00:52.790 --> 00:00:54.500
A few years ago,
the games industry

00:00:54.500 --> 00:00:56.630
was really still in its
naciency and taking off

00:00:56.630 --> 00:00:58.107
in terms of profitability.

00:00:58.107 --> 00:01:00.440
And during those times, games
could be made and launched

00:01:00.440 --> 00:01:01.727
relatively quickly.

00:01:01.727 --> 00:01:03.560
You could make a game,
put it in the market,

00:01:03.560 --> 00:01:05.720
see if it made any
money, and decide if you

00:01:05.720 --> 00:01:07.880
wanted to invest further.

00:01:07.880 --> 00:01:11.310
Today however, the market
looks very different.

00:01:11.310 --> 00:01:12.740
The store is evolving.

00:01:12.740 --> 00:01:14.330
Users are evolving.

00:01:14.330 --> 00:01:16.190
And the ecosystem is evolving.

00:01:16.190 --> 00:01:18.800
And that means that launching
a new game in today's market

00:01:18.800 --> 00:01:22.290
looks very different as well.

00:01:22.290 --> 00:01:23.990
So today, launching
a new game is

00:01:23.990 --> 00:01:27.350
an increasingly risky and
expensive proposition.

00:01:27.350 --> 00:01:28.410
Let's talk about why.

00:01:28.410 --> 00:01:31.250
So first, competition is higher.

00:01:31.250 --> 00:01:33.680
Launching in today's more
mature and crowded ecosystem

00:01:33.680 --> 00:01:35.960
can be extremely challenging.

00:01:35.960 --> 00:01:38.300
With over a million games
on the Play Store alone,

00:01:38.300 --> 00:01:39.680
discovery is hard.

00:01:39.680 --> 00:01:42.500
And consumers have
more choices than ever.

00:01:42.500 --> 00:01:44.900
Development costs
today are also higher.

00:01:44.900 --> 00:01:47.240
So today, consumer
expectations on mobile products

00:01:47.240 --> 00:01:48.360
are extremely high.

00:01:48.360 --> 00:01:50.330
And they churn extremely
fast when they're not

00:01:50.330 --> 00:01:52.700
satisfied because there
are so many alternatives

00:01:52.700 --> 00:01:54.475
available in the market.

00:01:54.475 --> 00:01:55.850
This means that
what we're seeing

00:01:55.850 --> 00:02:00.320
is a lot less MVP, or Minimally
Viable Product, game launches

00:02:00.320 --> 00:02:02.150
and a lot more
upfront investment

00:02:02.150 --> 00:02:03.940
in fully-formed
product launches--

00:02:03.940 --> 00:02:07.340
so games with social features,
long-tail content pipelines,

00:02:07.340 --> 00:02:10.389
events plans, you name it.

00:02:10.389 --> 00:02:12.640
Finally, no surprise to
anyone, marketing costs

00:02:12.640 --> 00:02:13.750
are also higher.

00:02:13.750 --> 00:02:15.156
UA costs continue to rise.

00:02:15.156 --> 00:02:16.780
And across the board,
what we're seeing

00:02:16.780 --> 00:02:20.790
is less launches and
less risk-taking.

00:02:20.790 --> 00:02:22.540
What's interesting now
is that despite all

00:02:22.540 --> 00:02:24.890
of these changes in the
market in recent years,

00:02:24.890 --> 00:02:27.350
for the games that they
do choose to launch,

00:02:27.350 --> 00:02:30.170
most developers today
continue to launch games

00:02:30.170 --> 00:02:33.000
in largely the same way as they
did three or four years ago.

00:02:33.000 --> 00:02:34.790
So here's what we
typically tend to see.

00:02:34.790 --> 00:02:38.120
This as something I like to
call the traditional playbook.

00:02:38.120 --> 00:02:40.640
Concept, design, and prototype--
so look at the market,

00:02:40.640 --> 00:02:43.000
see what's hot, go
off and develop--

00:02:43.000 --> 00:02:45.870
a tech launch, most
likely in the Philippines,

00:02:45.870 --> 00:02:48.650
a retention beta,
probably in the Nordics,

00:02:48.650 --> 00:02:51.410
followed by a monetization beta
in either Australia or Canada

00:02:51.410 --> 00:02:53.124
just before full launch.

00:02:53.124 --> 00:02:55.040
Now, while the countries
that I just mentioned

00:02:55.040 --> 00:02:57.420
might differ here or
there, in general,

00:02:57.420 --> 00:02:58.880
the traditional
playbook involves

00:02:58.880 --> 00:03:03.210
launching a new game in no more
than five to seven markets.

00:03:03.210 --> 00:03:05.750
It means often testing
it in production.

00:03:05.750 --> 00:03:07.430
And that means that
deployment is often

00:03:07.430 --> 00:03:09.080
limited to only
higher-end device types

00:03:09.080 --> 00:03:12.290
due to concerns around
stability and ratings.

00:03:12.290 --> 00:03:14.510
Now, if this process
sounds familiar, that's OK.

00:03:14.510 --> 00:03:16.219
It's not necessarily
a bad thing.

00:03:16.219 --> 00:03:18.260
There's still a lot of
evidence that this process

00:03:18.260 --> 00:03:20.360
is working well for many.

00:03:20.360 --> 00:03:22.630
But we at Google Play
believe that, even

00:03:22.630 --> 00:03:24.190
for the most
sophisticated developers

00:03:24.190 --> 00:03:27.460
who have this
playbook down to a T,

00:03:27.460 --> 00:03:30.580
that reliance on process in a
rapidly changing environment

00:03:30.580 --> 00:03:32.050
can be pretty dangerous.

00:03:32.050 --> 00:03:34.836
Because it can lead to a
false sense of security.

00:03:34.836 --> 00:03:36.460
And instead, we
believe that developers

00:03:36.460 --> 00:03:39.441
who are more focused on
process as a means to an end,

00:03:39.441 --> 00:03:41.440
whereby they're thinking
more about what they're

00:03:41.440 --> 00:03:45.100
trying to achieve instead of
how, exactly, they achieve it,

00:03:45.100 --> 00:03:47.320
are generally more adaptable
and ultimately more

00:03:47.320 --> 00:03:50.080
successful than teams who
stay static on this front.

00:03:52.740 --> 00:03:55.160
So with that said, I'd like
to take the next few minutes

00:03:55.160 --> 00:03:58.250
to share some high-level trends
on how game developers today

00:03:58.250 --> 00:04:00.560
are changing their
launch playbooks

00:04:00.560 --> 00:04:04.090
and their development playbooks.

00:04:04.090 --> 00:04:07.270
First, because of the costs
associated with launching,

00:04:07.270 --> 00:04:09.730
many developers are raising--

00:04:09.730 --> 00:04:11.140
or implementing--
a more rigorous

00:04:11.140 --> 00:04:14.650
approach to evaluating
their new games.

00:04:14.650 --> 00:04:16.269
And they're raising
the bar that's

00:04:16.269 --> 00:04:18.550
required for full launch.

00:04:18.550 --> 00:04:20.380
So for instance,
a few years ago,

00:04:20.380 --> 00:04:22.240
let's say a new
game might have only

00:04:22.240 --> 00:04:25.030
had to secure one or
two internal evaluations

00:04:25.030 --> 00:04:27.670
before they secured
the right to launch.

00:04:27.670 --> 00:04:29.830
Now developers are
taking much more

00:04:29.830 --> 00:04:32.500
of a guilty until
proven innocent approach

00:04:32.500 --> 00:04:34.750
to greenlighting
games for full launch

00:04:34.750 --> 00:04:38.170
and instead requiring continuous
evaluation at multiple stages

00:04:38.170 --> 00:04:41.320
of development, creating more
opportunities for feedback

00:04:41.320 --> 00:04:44.560
and failure, and being more
open-minded about pulling

00:04:44.560 --> 00:04:46.060
the plug on games
that simply aren't

00:04:46.060 --> 00:04:49.820
up to snuff at any stage
of the development cycle.

00:04:49.820 --> 00:04:51.547
So for instance,
in the past year,

00:04:51.547 --> 00:04:54.130
I've worked with game teams that
have pulled the plug on games

00:04:54.130 --> 00:04:56.110
six months or even 12
months into development,

00:04:56.110 --> 00:04:58.354
or in the late stages
of monetization testing,

00:04:58.354 --> 00:05:00.520
simply because they weren't
confident about a game's

00:05:00.520 --> 00:05:01.540
metrics.

00:05:01.540 --> 00:05:03.540
Now obviously, this
is really hard to do.

00:05:03.540 --> 00:05:05.710
But these developers
would rather pull the plug

00:05:05.710 --> 00:05:08.740
on a mediocre game than
absorb the cost of launching

00:05:08.740 --> 00:05:11.650
and maintaining that
game, and instead, just

00:05:11.650 --> 00:05:13.835
focus on fewer, better launches.

00:05:18.210 --> 00:05:19.770
Another thing that
we're seeing today

00:05:19.770 --> 00:05:22.740
is that developers are trying
to identify bad ideas much

00:05:22.740 --> 00:05:24.190
earlier.

00:05:24.190 --> 00:05:26.740
So as a result, they're
doing two things differently.

00:05:26.740 --> 00:05:29.100
First, they're testing
their new games externally

00:05:29.100 --> 00:05:30.900
in the market a lot earlier.

00:05:30.900 --> 00:05:32.730
And second, they're
actually changing

00:05:32.730 --> 00:05:35.110
their technical approach
to testing as well--

00:05:35.110 --> 00:05:37.350
so moving away from only
testing production versions

00:05:37.350 --> 00:05:41.090
of their games to testing
beta versions first.

00:05:41.090 --> 00:05:42.945
Now technically, both
of these approaches

00:05:42.945 --> 00:05:45.320
allow developers to collect
the market feedback that they

00:05:45.320 --> 00:05:47.180
need to identify bad ideas.

00:05:47.180 --> 00:05:49.226
But beta testing
actually has a lot

00:05:49.226 --> 00:05:50.600
of advantages to
offer developers

00:05:50.600 --> 00:05:52.700
throughout the development
and testing cycle.

00:05:52.700 --> 00:05:55.200
So instead of me telling you
about some of these advantages,

00:05:55.200 --> 00:05:57.450
let's instead take a minute
to watch a video about how

00:05:57.450 --> 00:05:59.660
a top game developer,
Big Fish Games,

00:05:59.660 --> 00:06:02.900
is using open beta to change
the way they develop and launch

00:06:02.900 --> 00:06:05.629
new games for the better.

00:06:05.629 --> 00:06:06.295
[VIDEO PLAYBACK]

00:06:06.295 --> 00:06:08.300
[MUSIC PLAYING]

00:06:08.300 --> 00:06:12.490
- Big Fish started 15 years
ago as a casual games studio.

00:06:12.490 --> 00:06:14.290
Over the years, we
became a powerhouse

00:06:14.290 --> 00:06:18.190
in developing mobile games
for multiple platforms.

00:06:18.190 --> 00:06:21.380
We've been making games for
Android since its inception.

00:06:21.380 --> 00:06:24.610
It's been great to see how
their focus on developer

00:06:24.610 --> 00:06:27.000
tools, and also
their global reach,

00:06:27.000 --> 00:06:30.761
has helped us make games better
for a much wider audience.

00:06:30.761 --> 00:06:32.260
One of the great
things now is we're

00:06:32.260 --> 00:06:36.070
able to use tools like open
beta to really get early access

00:06:36.070 --> 00:06:38.160
and information to
allow us to actually do

00:06:38.160 --> 00:06:41.680
more of a user-centered,
design-focused development.

00:06:41.680 --> 00:06:45.070
- Historically we've put games
into pre-launch that we were

00:06:45.070 --> 00:06:46.360
already very comfortable with.

00:06:46.360 --> 00:06:48.322
And we just waited
to sort of validate

00:06:48.322 --> 00:06:49.780
that we had what
we thought we had.

00:06:49.780 --> 00:06:51.730
Now that we're using
open beta, we're

00:06:51.730 --> 00:06:54.370
really willing to put a
game out there to the world

00:06:54.370 --> 00:06:56.470
much earlier in its process.

00:06:56.470 --> 00:06:58.210
"Cooking Craze" is a
time management game

00:06:58.210 --> 00:07:00.640
in which you play from
the perspective of a chef.

00:07:00.640 --> 00:07:02.440
Big Fish published
"Cooking Craze"

00:07:02.440 --> 00:07:04.740
working with a partner named
EleFun who developed it.

00:07:04.740 --> 00:07:07.060
This is our first free-to-play
time management game.

00:07:07.060 --> 00:07:08.310
And it's super fun.

00:07:08.310 --> 00:07:10.030
They really knocked
it out of the park.

00:07:10.030 --> 00:07:12.404
- When comparing our
previous game launch

00:07:12.404 --> 00:07:14.320
to our more recent one,
"Cooking Craze," where

00:07:14.320 --> 00:07:16.930
we used open beta, we
saw a dramatic reduction

00:07:16.930 --> 00:07:19.720
in crash rate,
about 21% decrease.

00:07:19.720 --> 00:07:23.710
We also got a much higher volume
of feedback as well, about 10x.

00:07:23.710 --> 00:07:26.940
The other thing that we noticed
based on the larger sample size

00:07:26.940 --> 00:07:29.095
was, with "Cooking
Craze," we had no surprise

00:07:29.095 --> 00:07:32.350
one and two-star reviews,
whereas our past game release,

00:07:32.350 --> 00:07:35.112
we had a few that
were uncharacterized.

00:07:35.112 --> 00:07:36.820
One of the benefits
of being in open beta

00:07:36.820 --> 00:07:38.980
is you can still be
released globally.

00:07:38.980 --> 00:07:42.610
This allows our marketing teams
to optimize their processes,

00:07:42.610 --> 00:07:45.280
their paid acquisition
partners and campaigns

00:07:45.280 --> 00:07:49.060
that they weren't able to do
in a geo-lock soft launch.

00:07:49.060 --> 00:07:52.600
- Before using open beta, we
would pre-release our games

00:07:52.600 --> 00:07:55.390
into a small number of
soft-launch countries.

00:07:55.390 --> 00:07:57.702
And we would use them
to see all the metrics

00:07:57.702 --> 00:07:58.660
that we're looking for.

00:07:58.660 --> 00:08:01.690
With open beta, we're going
worldwide right off the bat.

00:08:01.690 --> 00:08:05.980
And we're able to gather
data from a much wider range

00:08:05.980 --> 00:08:08.650
of players that is much more
representative of what we'll

00:08:08.650 --> 00:08:11.320
see when we go to
our official launch.

00:08:11.320 --> 00:08:15.130
With open beta, we have
said, no restrictions.

00:08:15.130 --> 00:08:17.260
Go out, go live,
see what happens.

00:08:17.260 --> 00:08:19.180
And we're able to
react if there's

00:08:19.180 --> 00:08:22.040
a problem instead of assuming
that there would be a problem.

00:08:22.040 --> 00:08:24.580
- We're looking at
the core game KPIs.

00:08:24.580 --> 00:08:26.785
We're looking at the team
that's delivering the game

00:08:26.785 --> 00:08:27.910
and their ability to scale.

00:08:27.910 --> 00:08:29.710
We're looking at a lot
of the metrics that

00:08:29.710 --> 00:08:30.970
are in Android vitals.

00:08:30.970 --> 00:08:34.360
- When we're in pre-launch, we
start by looking at retention

00:08:34.360 --> 00:08:34.900
numbers.

00:08:34.900 --> 00:08:36.706
Are people coming back
on the second day?

00:08:36.706 --> 00:08:38.289
Are they coming back
on the third day?

00:08:38.289 --> 00:08:41.510
We're typically looking
at D1, D7, D30 retention.

00:08:41.510 --> 00:08:44.551
Then we start looking at
the monetization metrics.

00:08:44.551 --> 00:08:46.300
Once we're comfortable
with those metrics,

00:08:46.300 --> 00:08:48.520
then we know that it's
time to start moving

00:08:48.520 --> 00:08:50.470
toward our official launch.

00:08:50.470 --> 00:08:52.510
We were able to
increase our retention

00:08:52.510 --> 00:08:54.120
numbers fairly significantly.

00:08:54.120 --> 00:08:57.590
We went about 9 percentage
points up on D1 retention,

00:08:57.590 --> 00:09:00.250
about 8 percentage
points up on D7,

00:09:00.250 --> 00:09:02.481
and about 5 percentage
points up on D30.

00:09:02.481 --> 00:09:04.105
One of the great
things about open beta

00:09:04.105 --> 00:09:06.940
is that we're able to gather
feedback from the beta players

00:09:06.940 --> 00:09:10.750
without having public-facing
reviews and ratings.

00:09:10.750 --> 00:09:13.840
So we're able to fail
harder without having

00:09:13.840 --> 00:09:16.150
negative reviews that stick
on our permanent record

00:09:16.150 --> 00:09:18.250
for the life cycle of the game.

00:09:18.250 --> 00:09:20.500
- My recommendation for
all developers out there

00:09:20.500 --> 00:09:23.920
is to take a close look at
the tools in the Play Console.

00:09:23.920 --> 00:09:26.940
We use a lot of them, and we
benefit from them tremendously.

00:09:26.940 --> 00:09:28.780
Just in the last
year, we've changed

00:09:28.780 --> 00:09:30.520
the way we've
developed and released

00:09:30.520 --> 00:09:33.410
our games substantially
based on open beta alone.

00:09:33.410 --> 00:09:34.382
[POPPING SOUND]

00:09:34.382 --> 00:09:35.354
[POPPING SOUND]

00:09:35.354 --> 00:09:36.326
[POPPING SOUND]

00:09:39.242 --> 00:09:40.700
[END PLAYBANK]

00:09:40.700 --> 00:09:42.320
OK.

00:09:42.320 --> 00:09:45.680
So another trend that we're
seeing today is that developers

00:09:45.680 --> 00:09:49.790
are increasingly using long-term
metrics as predictors of future

00:09:49.790 --> 00:09:51.050
success--

00:09:51.050 --> 00:09:53.930
more specifically,
long-term engagement metrics

00:09:53.930 --> 00:09:56.930
like LTV and
long-term retention.

00:09:56.930 --> 00:09:59.010
And what this means
is that, as a result,

00:09:59.010 --> 00:10:01.730
not only are developers testing
their new games earlier as

00:10:01.730 --> 00:10:03.822
we just saw in the
Big Fish Games,

00:10:03.822 --> 00:10:05.780
but developers are also
testing their new games

00:10:05.780 --> 00:10:08.390
for much longer than
they have in years past.

00:10:08.390 --> 00:10:10.940
And the reason for this is
that, because they believe

00:10:10.940 --> 00:10:13.322
that in order to
understand true user value,

00:10:13.322 --> 00:10:15.530
that they need to understand
the long-term engagement

00:10:15.530 --> 00:10:17.829
and retention patterns
in their games.

00:10:17.829 --> 00:10:19.370
Now, it's important
for me to clarify

00:10:19.370 --> 00:10:22.257
here that, when I say developers
are testing longer, that I

00:10:22.257 --> 00:10:24.590
don't necessarily mean that
all developers out there are

00:10:24.590 --> 00:10:28.710
running six-month betas,
although many do if they can.

00:10:28.710 --> 00:10:31.040
But what I do mean and
that's really important

00:10:31.040 --> 00:10:33.380
is that more and
more developers today

00:10:33.380 --> 00:10:37.220
are looking beyond just
D7 and D14 metrics.

00:10:37.220 --> 00:10:41.240
And they're testing beyond
D30 metrics at the very least

00:10:41.240 --> 00:10:44.270
in order to get a much truer
sense of the future business

00:10:44.270 --> 00:10:46.700
success of their new titles
and to make decisions

00:10:46.700 --> 00:10:48.444
around launching accordingly.

00:10:51.350 --> 00:10:54.770
Finally, developers
today are proactively

00:10:54.770 --> 00:10:57.050
changing their
pre-launch playbooks

00:10:57.050 --> 00:11:00.950
to maximize retention in
their new games at launch.

00:11:00.950 --> 00:11:03.440
And to do this, they're doing
a few big things differently.

00:11:03.440 --> 00:11:05.860
I'm just going to go
through them quickly.

00:11:05.860 --> 00:11:08.410
First, they're optimizing
new-game performance

00:11:08.410 --> 00:11:10.810
across more devices
prior to launch.

00:11:10.810 --> 00:11:13.930
This is not only key for
minimizing early player churn,

00:11:13.930 --> 00:11:17.620
but also to releasing to the
masses with greater confidence.

00:11:17.620 --> 00:11:20.440
Second, developers are also
launching with enough content

00:11:20.440 --> 00:11:24.130
to sustain their players until
their first update at least.

00:11:24.130 --> 00:11:26.800
And they're doing this by
monitoring content consumption

00:11:26.800 --> 00:11:31.280
during beta and planning
for full launch accordingly.

00:11:31.280 --> 00:11:34.010
Developers are also building
social features, or at least

00:11:34.010 --> 00:11:36.440
the foundation for social
features, into their games

00:11:36.440 --> 00:11:38.661
earlier and earlier
than they have before.

00:11:38.661 --> 00:11:40.160
And the reason for
this is that they

00:11:40.160 --> 00:11:42.590
want to leverage the bonds
that social features create

00:11:42.590 --> 00:11:46.010
between players to drive strong
retention in their new games

00:11:46.010 --> 00:11:48.570
right out of the gate.

00:11:48.570 --> 00:11:51.860
And finally, developers are also
testing their live ops plans

00:11:51.860 --> 00:11:54.830
in full, end to end,
prior to launch.

00:11:54.830 --> 00:11:57.140
So they're doing things like
running demand-side events

00:11:57.140 --> 00:12:00.380
and supply-side sales so they
can really, truly understand

00:12:00.380 --> 00:12:03.290
what KPIs their live ops
move and where they still

00:12:03.290 --> 00:12:07.464
need to optimize before
they fully launch.

00:12:07.464 --> 00:12:09.630
So now that we've covered
a bit about how developers

00:12:09.630 --> 00:12:11.005
are evolving their
playbooks, I'd

00:12:11.005 --> 00:12:13.614
like to introduce my colleague
Jonathan Chung up on stage.

00:12:13.614 --> 00:12:15.030
He's a software
engineer on the go

00:12:15.030 --> 00:12:17.337
to market tools team for
the Play Developer Console.

00:12:17.337 --> 00:12:19.920
And he's going to talk a little
bit about how Play is building

00:12:19.920 --> 00:12:22.590
tools that can help you launch
more successfully in today's

00:12:22.590 --> 00:12:23.932
market.

00:12:23.932 --> 00:12:27.264
[APPLAUSE]

00:12:31.500 --> 00:12:32.750
JONATHAN CHUNG: Thanks, Emily.

00:12:32.750 --> 00:12:34.770
As mentioned, releasing
new games today

00:12:34.770 --> 00:12:37.050
is increasingly
difficult. And Play

00:12:37.050 --> 00:12:39.870
is committed to building
tools to help developers

00:12:39.870 --> 00:12:42.027
with their launches.

00:12:42.027 --> 00:12:44.360
While this is a high-level
overview of many of the tools

00:12:44.360 --> 00:12:47.000
available today, I'd
like to take some time

00:12:47.000 --> 00:12:49.280
to focus specifically
on some tools

00:12:49.280 --> 00:12:50.900
that we feel will
help you evolve

00:12:50.900 --> 00:12:54.520
your playbook by allowing
you to test differently,

00:12:54.520 --> 00:12:57.110
test faster, and
more importantly,

00:12:57.110 --> 00:13:00.270
de-risk your launches.

00:13:00.270 --> 00:13:04.770
In 2015, we introduced the
alpha and beta test tracks,

00:13:04.770 --> 00:13:08.070
which allows developers to
distribute their APKs earlier

00:13:08.070 --> 00:13:10.020
than ever before.

00:13:10.020 --> 00:13:11.850
Today I'm pleased
to announce, we

00:13:11.850 --> 00:13:14.440
are launching
internal test tracks.

00:13:14.440 --> 00:13:16.680
Internal test tracks
allows developers

00:13:16.680 --> 00:13:20.340
to publish and distribute their
APKs in minutes, as opposed

00:13:20.340 --> 00:13:24.620
to hours, to up
to 100 test users,

00:13:24.620 --> 00:13:27.880
enabling teams to do rapid
iterative testing whether they

00:13:27.880 --> 00:13:30.790
are launching brand-new
games or new features

00:13:30.790 --> 00:13:33.090
for their existing games.

00:13:33.090 --> 00:13:36.720
We believe, at Google Play, that
this is a truly powerful tool,

00:13:36.720 --> 00:13:40.810
both pre- and post-launch.

00:13:40.810 --> 00:13:44.460
Next, choosing where to
distribute your game to

00:13:44.460 --> 00:13:48.020
is a crucial part of your
go-to-market strategy.

00:13:48.020 --> 00:13:50.950
With country targeting, we
are now giving developers

00:13:50.950 --> 00:13:53.680
more control than
ever before in terms

00:13:53.680 --> 00:13:55.690
of how you want to
distribute your games

00:13:55.690 --> 00:13:57.750
to different regions.

00:13:57.750 --> 00:14:00.510
This feature allows you to
distribute your production

00:14:00.510 --> 00:14:04.720
tracks to different countries
than your test tracks.

00:14:04.720 --> 00:14:08.950
Now, why is this something
that you would want to do?

00:14:08.950 --> 00:14:11.500
As discussed before,
many developers

00:14:11.500 --> 00:14:14.950
like to get early feedback
before development,

00:14:14.950 --> 00:14:17.340
before launch of the game.

00:14:17.340 --> 00:14:19.870
And they like to do this
using tools such as close

00:14:19.870 --> 00:14:23.790
beta or open beta with a cap.

00:14:23.790 --> 00:14:25.770
But maybe, close
to launch, you want

00:14:25.770 --> 00:14:28.350
to run a production soft launch.

00:14:28.350 --> 00:14:31.090
Well, now, with
country targeting,

00:14:31.090 --> 00:14:33.340
you can run your beta
tests in as many countries

00:14:33.340 --> 00:14:37.120
as you want prior to launch to
gather some valuable feedback.

00:14:37.120 --> 00:14:40.710
And once you have proven
out your early game

00:14:40.710 --> 00:14:43.110
concept and fixed
technical issues,

00:14:43.110 --> 00:14:45.600
you can then proceed to
production soft launch

00:14:45.600 --> 00:14:48.210
in selected regions
while keeping your beta

00:14:48.210 --> 00:14:50.790
alive in other regions.

00:14:50.790 --> 00:14:53.580
This means you can keep
gathering valuable feedback

00:14:53.580 --> 00:14:57.770
while confirming key KPIs and
building up a ratings pad ahead

00:14:57.770 --> 00:15:00.410
of full launch.

00:15:00.410 --> 00:15:03.830
Finally, when you're
ready, you can launch fully

00:15:03.830 --> 00:15:06.710
with greater confidence
and less surprises.

00:15:09.066 --> 00:15:11.440
Now that we've spend some time
talking about distribution

00:15:11.440 --> 00:15:16.530
and testing, let's talk about
quality and performance.

00:15:16.530 --> 00:15:19.980
As Emily mentioned, strong
game stability and performance

00:15:19.980 --> 00:15:22.770
are key for, number
one, preventing

00:15:22.770 --> 00:15:26.400
early player churn,
and number two,

00:15:26.400 --> 00:15:29.580
minimizing bad
reviews for new games.

00:15:29.580 --> 00:15:33.330
Interesting fact-- 50%
of one-star reviews

00:15:33.330 --> 00:15:38.080
complain about app stability
and bugs on the Play Store.

00:15:38.080 --> 00:15:40.600
Android vitals
provides an overview

00:15:40.600 --> 00:15:44.620
of the stability of your game
alongside other key metrics

00:15:44.620 --> 00:15:47.660
such as battery life
and performance.

00:15:47.660 --> 00:15:49.880
It will also report
crash rates and ANRs

00:15:49.880 --> 00:15:53.360
across a wide range of devices
and provide stack traces

00:15:53.360 --> 00:15:55.100
in order to help
you debug faster.

00:15:57.910 --> 00:16:01.450
Not only are Android vitals key
to helping developers address

00:16:01.450 --> 00:16:03.940
quality issues
before launch, they

00:16:03.940 --> 00:16:06.610
are now also a key signal
for Google Play in a number

00:16:06.610 --> 00:16:09.030
of user-facing areas.

00:16:09.030 --> 00:16:10.840
Our search and
discovery algorithms

00:16:10.840 --> 00:16:14.670
favor apps in games
with strong vitals.

00:16:14.670 --> 00:16:16.570
And vitals are now
an important part

00:16:16.570 --> 00:16:18.430
when your app or game
is being considered

00:16:18.430 --> 00:16:22.300
for promotional opportunities
such as the new and updated

00:16:22.300 --> 00:16:25.870
collections, the Google
Play Awards, editors' choice

00:16:25.870 --> 00:16:30.380
collection, and a newly-launched
Android Excellence Program.

00:16:30.380 --> 00:16:33.661
Long story short, Play
is prioritizing vitals.

00:16:33.661 --> 00:16:34.910
So make sure you check it out.

00:16:37.610 --> 00:16:40.460
Pre-launch reports can also
help developers iron out

00:16:40.460 --> 00:16:43.280
quality and performance
issues with their game prior

00:16:43.280 --> 00:16:44.910
to launch.

00:16:44.910 --> 00:16:48.270
Whenever an alpha or
beta APK is uploaded,

00:16:48.270 --> 00:16:51.660
a nondeterministic bot will
crawl your game, running

00:16:51.660 --> 00:16:54.780
on a real, physical device
in one of our test labs,

00:16:54.780 --> 00:16:58.710
and report on a various
range of issues.

00:16:58.710 --> 00:17:01.170
Game developers have
found a lot of value

00:17:01.170 --> 00:17:03.090
in the pre-launch report.

00:17:03.090 --> 00:17:06.240
90% of developers choose
not to launch their game

00:17:06.240 --> 00:17:10.020
if the pre-launch
report finds issues.

00:17:10.020 --> 00:17:13.040
And today we are excited to
announce that pre-launch report

00:17:13.040 --> 00:17:15.560
demo loops are on the way.

00:17:15.560 --> 00:17:17.569
So how does this work?

00:17:17.569 --> 00:17:21.829
Record and upload a date
game demo loop in OpenGL,

00:17:21.829 --> 00:17:25.130
and receive a pre-launch
report on crash and performance

00:17:25.130 --> 00:17:28.690
metrics such as
frames per second.

00:17:28.690 --> 00:17:32.700
These allow you to discover
rendering issues even faster

00:17:32.700 --> 00:17:36.800
and launch with more confidence.

00:17:36.800 --> 00:17:39.560
To wrap up, here are
a handful of takeaways

00:17:39.560 --> 00:17:41.730
from today's session.

00:17:41.730 --> 00:17:44.960
Remember to try beta
tests, not only to gather

00:17:44.960 --> 00:17:47.270
early feedback about
your game, but also

00:17:47.270 --> 00:17:51.120
to test broader and border.

00:17:51.120 --> 00:17:55.730
Optimize new games for long-term
metrics before launching.

00:17:55.730 --> 00:17:58.500
And remember to check out all
the Play Console's tools that

00:17:58.500 --> 00:18:00.570
can help you with
your next launch,

00:18:00.570 --> 00:18:03.990
including new tools such
as internal test tracks

00:18:03.990 --> 00:18:06.370
and pre-launch demo loops.

00:18:06.370 --> 00:18:08.390
Next, we're going
to hear from Toby

00:18:08.390 --> 00:18:11.970
how about how to develop games
for a more inclusive audience.

00:18:11.970 --> 00:18:12.774
Thank you.

00:18:12.774 --> 00:18:16.092
[APPLAUSE]

00:18:19.890 --> 00:18:21.220
TOBIAS KNOKE: Hello, everyone.

00:18:21.220 --> 00:18:23.250
My name is Tobias, and
I'm a Google Play BD

00:18:23.250 --> 00:18:25.110
manager based in Berlin.

00:18:25.110 --> 00:18:27.630
Today I will talk to you
about growing your business

00:18:27.630 --> 00:18:31.260
on Android by building for
more inclusive audiences.

00:18:31.260 --> 00:18:34.020
At Google, we are committed
to building for everyone,

00:18:34.020 --> 00:18:36.980
and we want to help
you in doing the same.

00:18:36.980 --> 00:18:42.090
And for a better understanding
on how we and you can target

00:18:42.090 --> 00:18:44.370
every potential
gamer out there, we

00:18:44.370 --> 00:18:47.310
have been conducting research
on underrepresented groups

00:18:47.310 --> 00:18:50.280
in gaming, starting
with women in gaming.

00:18:50.280 --> 00:18:52.500
Today I will share our
lessons learned with you

00:18:52.500 --> 00:18:54.390
and some recommendations
on how you

00:18:54.390 --> 00:18:57.480
can make most out of this
opportunity for your business

00:18:57.480 --> 00:18:59.400
on Android.

00:18:59.400 --> 00:19:03.690
But let me first start by
introducing Frances to you.

00:19:03.690 --> 00:19:06.180
Frances has been playing
games for a long time.

00:19:06.180 --> 00:19:09.480
She got introduced to games by
her mother and her grandmother.

00:19:09.480 --> 00:19:11.800
And like many people
in her generation,

00:19:11.800 --> 00:19:13.950
she really got hooked
on mobile games

00:19:13.950 --> 00:19:16.950
when she got her first
smartphone in high school.

00:19:16.950 --> 00:19:19.830
Today she is playing
a lot on mobile.

00:19:19.830 --> 00:19:22.470
And she loves to dive
into the world of gaming.

00:19:22.470 --> 00:19:24.300
She likes to choose
a female character

00:19:24.300 --> 00:19:26.790
if there is one available.

00:19:26.790 --> 00:19:29.790
And she is an active member in
the New York gaming community

00:19:29.790 --> 00:19:30.510
today.

00:19:30.510 --> 00:19:33.180
And she is organizing
meet-ups where people

00:19:33.180 --> 00:19:35.340
get educated about games.

00:19:35.340 --> 00:19:37.830
But there are way more
women than just Frances

00:19:37.830 --> 00:19:39.290
playing mobile games.

00:19:39.290 --> 00:19:43.590
In fact, together
with Newzoo, we've

00:19:43.590 --> 00:19:48.460
done research and found that
49% of mobile gamers are women.

00:19:48.460 --> 00:19:50.760
So that's one half of
the total population

00:19:50.760 --> 00:19:52.770
playing mobile games.

00:19:52.770 --> 00:19:54.720
And even more importantly
for everyone here

00:19:54.720 --> 00:19:59.760
in the room, what we found
as well is that 64% of women

00:19:59.760 --> 00:20:02.605
prefer mobile over
other platforms.

00:20:02.605 --> 00:20:04.830
Now, that's a pretty,
pretty strong fact

00:20:04.830 --> 00:20:06.940
for mobile game developers.

00:20:06.940 --> 00:20:09.210
And thus, this is the
critical key audience

00:20:09.210 --> 00:20:12.390
which should be at the front
and center of your thinking

00:20:12.390 --> 00:20:15.630
when you develop new
games or you're operating

00:20:15.630 --> 00:20:17.640
on your existing games.

00:20:17.640 --> 00:20:22.110
But how does this critical
audience perceive mobile games?

00:20:22.110 --> 00:20:24.591
Of course, there's a reason
why we have been doing research

00:20:24.591 --> 00:20:25.090
with Newzoo.

00:20:25.090 --> 00:20:29.500
And what we found is that women
feel less as gamers than men.

00:20:29.500 --> 00:20:34.080
So they talk less about mobile
games amongst their peers.

00:20:34.080 --> 00:20:37.260
They also self-identify
less as gamers.

00:20:37.260 --> 00:20:39.600
And last but not least,
they feel more regret

00:20:39.600 --> 00:20:42.280
when paying for games.

00:20:42.280 --> 00:20:44.790
So this is not ideal.

00:20:44.790 --> 00:20:48.540
And probably, they do not
feel as catered as much

00:20:48.540 --> 00:20:50.850
by the overall mobile
gaming ecosystem.

00:20:50.850 --> 00:20:54.660
So we've asked ourself,
of course, why is that?

00:20:54.660 --> 00:20:57.180
And to better understand
this, well, we

00:20:57.180 --> 00:21:00.510
took a look at our very
own Google Play Store.

00:21:00.510 --> 00:21:04.419
Because it's not only about
the supply of mobile games,

00:21:04.419 --> 00:21:06.210
it's also about the
demand of mobile games.

00:21:06.210 --> 00:21:09.390
And there's a strong demand
for women to play on mobile.

00:21:09.390 --> 00:21:13.860
But when we look at the top 100
grossing games on Google Play,

00:21:13.860 --> 00:21:18.030
we found that male characters
are featured 44% more

00:21:18.030 --> 00:21:20.640
often on the Google Play Store.

00:21:20.640 --> 00:21:22.740
Well now, whilst
we recommend you

00:21:22.740 --> 00:21:25.560
to use the icon which
works best for your game

00:21:25.560 --> 00:21:28.560
and your audience, we think that
there is an opportunity left

00:21:28.560 --> 00:21:29.730
on the table.

00:21:29.730 --> 00:21:33.210
And of course, icons are the
entry point for every game

00:21:33.210 --> 00:21:34.500
experience out there.

00:21:34.500 --> 00:21:36.180
So I think we should
be aware that this

00:21:36.180 --> 00:21:39.870
has a significant impact when
you are targeting players

00:21:39.870 --> 00:21:42.090
for your game.

00:21:42.090 --> 00:21:44.160
So let's put all
this information

00:21:44.160 --> 00:21:46.290
into some more context.

00:21:46.290 --> 00:21:51.090
We know that 49% of all
mobile gamers are women,

00:21:51.090 --> 00:21:54.510
but they do not feel entirely
catered by the ecosystem.

00:21:54.510 --> 00:21:57.480
What we know as well is,
so one, the mobile market

00:21:57.480 --> 00:21:58.504
continues to grow.

00:21:58.504 --> 00:21:59.920
We have been hearing
this earlier.

00:21:59.920 --> 00:22:02.130
But also, as Emily
mentioned before,

00:22:02.130 --> 00:22:04.390
competition is increasing.

00:22:04.390 --> 00:22:06.540
So that's why we
think, at Google Play,

00:22:06.540 --> 00:22:08.970
why don't we think
more about broadening

00:22:08.970 --> 00:22:14.130
the audience for the games
developers are publishing?

00:22:14.130 --> 00:22:18.390
And by this, you can possibly
expand your current success

00:22:18.390 --> 00:22:21.555
with your game by appealing
to more audiences.

00:22:21.555 --> 00:22:23.430
And in the next three
slides, I will give you

00:22:23.430 --> 00:22:27.730
some ideas on how you might
be able to achieve that.

00:22:27.730 --> 00:22:30.870
So number one, this is
easier said than done,

00:22:30.870 --> 00:22:32.820
but we really
encourage you to try

00:22:32.820 --> 00:22:35.040
developing for all audiences.

00:22:35.040 --> 00:22:37.530
And if I say develop
for all audiences,

00:22:37.530 --> 00:22:40.590
I mean every underrepresented
group in gaming--

00:22:40.590 --> 00:22:43.830
so gamers coming from
all ethnicities, beliefs,

00:22:43.830 --> 00:22:46.540
and orientations.

00:22:46.540 --> 00:22:50.340
So ask yourself, how diverse
is your audience actually?

00:22:50.340 --> 00:22:54.270
And could the user experience be
different for certain players?

00:22:54.270 --> 00:22:56.490
And also, do you
actually research

00:22:56.490 --> 00:22:58.470
a bit who could be
playing your game when

00:22:58.470 --> 00:23:00.090
you're developing a new game?

00:23:00.090 --> 00:23:02.190
Because I know that, as
a mobile games industry,

00:23:02.190 --> 00:23:03.810
we are super
passionate about games.

00:23:03.810 --> 00:23:06.150
But sometimes we just
make the games we love.

00:23:06.150 --> 00:23:07.920
But we do not think,
maybe, so much

00:23:07.920 --> 00:23:09.510
about who will
actually play them.

00:23:09.510 --> 00:23:12.150
So maybe that's a
thing to consider.

00:23:12.150 --> 00:23:15.510
And also, these thoughts are
not only true from a product

00:23:15.510 --> 00:23:18.870
perspective, but also from
a marketing point of view.

00:23:18.870 --> 00:23:23.240
Because if your marketing
has, again, primarily only

00:23:23.240 --> 00:23:26.260
male characters featured, or
your targeting is super narrow,

00:23:26.260 --> 00:23:29.300
again, you might be
leaving out the opportunity

00:23:29.300 --> 00:23:32.990
to appeal to everyone out there.

00:23:32.990 --> 00:23:34.310
So that's one thing.

00:23:34.310 --> 00:23:37.550
And we think that being
inclusive is important.

00:23:37.550 --> 00:23:39.110
And it's about a
holistic approach

00:23:39.110 --> 00:23:41.540
which covers all your
activities around your game,

00:23:41.540 --> 00:23:44.720
whether they're
pre-launch or post-launch.

00:23:44.720 --> 00:23:48.230
This takes me to the second
recommendation we have.

00:23:48.230 --> 00:23:51.920
One thing to consider is
to test inclusive imagery

00:23:51.920 --> 00:23:54.180
with Store listing experiments.

00:23:54.180 --> 00:23:57.590
So let's take a step back and
think of your game putting

00:23:57.590 --> 00:23:59.060
into soft launch.

00:23:59.060 --> 00:24:00.650
And when your game
is in soft launch,

00:24:00.650 --> 00:24:03.110
you might be figuring
out, which icon

00:24:03.110 --> 00:24:06.230
do you want to use, how should
your Store listing look like.

00:24:06.230 --> 00:24:07.760
And at Google
Play-- probably, you

00:24:07.760 --> 00:24:09.551
know this-- we have
this [INAUDIBLE] called

00:24:09.551 --> 00:24:11.240
Store listing experiments.

00:24:11.240 --> 00:24:14.300
With Store mixed-- with
Store listing experiments,

00:24:14.300 --> 00:24:18.530
you can basically test which
icons, screenshots, and videos

00:24:18.530 --> 00:24:21.090
resonate best with
your audience.

00:24:21.090 --> 00:24:25.790
So whilst user data will
decide which icon works best,

00:24:25.790 --> 00:24:28.470
why not be inclusive
when testing it.

00:24:28.470 --> 00:24:32.180
Because you decide which icons
are getting tested, right?

00:24:32.180 --> 00:24:36.410
Another thing to consider is, if
you are introducing new content

00:24:36.410 --> 00:24:39.110
to your existing
games with live ops,

00:24:39.110 --> 00:24:41.540
you can consider maybe
adding female characters

00:24:41.540 --> 00:24:44.390
and see if they are resonating
with the audience or not.

00:24:44.390 --> 00:24:46.070
Just give it a try.

00:24:46.070 --> 00:24:48.847
At least you would have
one more gamer in there,

00:24:48.847 --> 00:24:50.930
and that would be Frances,
from the very beginning

00:24:50.930 --> 00:24:52.820
of this presentation.

00:24:52.820 --> 00:24:55.880
And last but not least, listen
and talk to your community.

00:24:55.880 --> 00:24:59.000
Find and figure out if,
really, every potential gamer

00:24:59.000 --> 00:25:02.630
out there thinks that they
have a good experience when

00:25:02.630 --> 00:25:06.030
playing and testing your game.

00:25:06.030 --> 00:25:10.440
Last but not least, one
thing, if we, as mobile gaming

00:25:10.440 --> 00:25:12.990
community, want to appeal
to every potential gamer

00:25:12.990 --> 00:25:17.610
out there, we need to think
of the development teams who

00:25:17.610 --> 00:25:19.350
are creating the games.

00:25:19.350 --> 00:25:22.800
So as we know from
research, only 28%

00:25:22.800 --> 00:25:25.500
of people in the gaming
industry are not men,

00:25:25.500 --> 00:25:27.600
meaning women or transgender.

00:25:27.600 --> 00:25:29.910
And if we now remember,
ourselves, again,

00:25:29.910 --> 00:25:33.240
that 49% of mobile
gamers are women,

00:25:33.240 --> 00:25:35.590
well, I think there is a gap.

00:25:35.590 --> 00:25:39.420
And at Google Play, we believe
that only with a diverse team

00:25:39.420 --> 00:25:41.670
you can capture the
whole market opportunity.

00:25:41.670 --> 00:25:44.640
You can only be able to
scale your game to everyone

00:25:44.640 --> 00:25:48.780
out there if you have everyone
represented in your development

00:25:48.780 --> 00:25:49.400
team.

00:25:49.400 --> 00:25:51.390
Now, I know this is
not always that easy.

00:25:51.390 --> 00:25:54.420
But I think this is a fact
we should all recognize

00:25:54.420 --> 00:25:57.110
and we should think about.

00:25:57.110 --> 00:25:58.620
At Google Play,
we are also trying

00:25:58.620 --> 00:26:00.720
to do our fair share in this.

00:26:00.720 --> 00:26:04.380
So we partner with the industry
to support women developers.

00:26:04.380 --> 00:26:07.830
As an example, you can see
here, on the screenshot,

00:26:07.830 --> 00:26:10.350
on International
Women's Day, we promoted

00:26:10.350 --> 00:26:13.530
games developed by women
on the Google Play Store.

00:26:13.530 --> 00:26:15.630
And obviously, I
would love to be here

00:26:15.630 --> 00:26:17.760
next year again and
tell you that we

00:26:17.760 --> 00:26:22.890
are promoting more games
developed by women ever before.

00:26:22.890 --> 00:26:25.050
I would like to
conclude by calling out

00:26:25.050 --> 00:26:28.350
Google Play's diversity
and inclusion initiatives.

00:26:28.350 --> 00:26:30.420
So first of all,
most of the research

00:26:30.420 --> 00:26:32.010
you have been
seeing earlier today

00:26:32.010 --> 00:26:34.050
is based on Change
the Game, which

00:26:34.050 --> 00:26:39.510
is our program to empower women
who play and develop games.

00:26:39.510 --> 00:26:41.500
If you are interested
in more information,

00:26:41.500 --> 00:26:45.540
please check out
g.co/changethegame.

00:26:45.540 --> 00:26:49.980
Secondly, another program we are
running is Infinite Deviation.

00:26:49.980 --> 00:26:53.600
Together with Ideas United,
we are tackling issues

00:26:53.600 --> 00:26:55.650
in representation
in computer science.

00:26:55.650 --> 00:26:57.870
So again, this goes back
to my previous slide

00:26:57.870 --> 00:26:59.370
of growing diverse teams.

00:26:59.370 --> 00:27:01.770
And this is something
we are doing as well.

00:27:01.770 --> 00:27:04.140
And last but not least, on
International Women's Day,

00:27:04.140 --> 00:27:07.890
we did not only promoted
games developed by women,

00:27:07.890 --> 00:27:11.970
but we also showcased a video
which showed four founders

00:27:11.970 --> 00:27:14.460
from around the world who
found success in developing

00:27:14.460 --> 00:27:17.890
and creating games.

00:27:17.890 --> 00:27:20.820
Watch this space as we
will continue our research

00:27:20.820 --> 00:27:24.870
on other underrepresented
groups in the space of gaming,

00:27:24.870 --> 00:27:27.360
and also to showcase
the opportunity

00:27:27.360 --> 00:27:31.650
which lies in building diverse
teams, products, and games.

00:27:31.650 --> 00:27:33.960
Google Play, as a
platform, is committed

00:27:33.960 --> 00:27:36.750
to making mobile gaming
truly for everyone

00:27:36.750 --> 00:27:39.330
by celebrating and
empowering developers

00:27:39.330 --> 00:27:41.190
of diverse backgrounds.

00:27:41.190 --> 00:27:44.250
As a mobile game developer,
you have a major impact

00:27:44.250 --> 00:27:46.800
on how future mobile
games will look like.

00:27:46.800 --> 00:27:50.010
And we hope that you can join
us in making the mobile gaming

00:27:50.010 --> 00:27:53.827
world more inclusive, because
mobile games are for everyone.

00:27:53.827 --> 00:27:54.660
Thank you very much.

00:27:54.660 --> 00:27:58.090
[APPLAUSE]

00:28:01.040 --> 00:28:04.690
Next is Kanan and Tom, who will
talk to you about expanding

00:28:04.690 --> 00:28:06.160
your game to emerging markets.

00:28:10.040 --> 00:28:13.435
[APPLAUSE]

00:28:14.420 --> 00:28:15.560
KANAN RAI: Thanks, Toby.

00:28:15.560 --> 00:28:19.460
Hi, I'm Kanan, and I'm part of
the Google Play team in India.

00:28:19.460 --> 00:28:21.230
I work with game
developers in India

00:28:21.230 --> 00:28:24.950
and abroad with a deep
focus on emerging markets.

00:28:24.950 --> 00:28:27.050
With the continued
success of smartphones

00:28:27.050 --> 00:28:28.910
and the rise in
internet users, we've

00:28:28.910 --> 00:28:31.970
seen tremendous growth in
the number of online gamers

00:28:31.970 --> 00:28:35.090
around the world, be it a
game of "Words With Friends"

00:28:35.090 --> 00:28:37.470
with your cousins in
Vietnam or New York,

00:28:37.470 --> 00:28:40.100
or a game of "Ludo King"
with your friends in India,

00:28:40.100 --> 00:28:44.000
the gaming ecosystem is booming
and bringing people together.

00:28:44.000 --> 00:28:47.420
But not all gamers enjoy the
luxury of high-end devices

00:28:47.420 --> 00:28:50.030
and high-speed internet.

00:28:50.030 --> 00:28:54.200
2 billion new internet users
came online in the last 15

00:28:54.200 --> 00:28:58.070
years, many from countries
like India, Indonesia, Brazil,

00:28:58.070 --> 00:28:59.780
and Nigeria.

00:28:59.780 --> 00:29:04.010
Emerging markets are at the
forefront of smartphone growth

00:29:04.010 --> 00:29:09.070
and contribute roughly to about
80% of overall growth globally.

00:29:09.070 --> 00:29:14.060
But these internet users are
typically on sub-$150 device

00:29:14.060 --> 00:29:17.660
with about 1 GB,
or 1 gigabyte, RAM.

00:29:17.660 --> 00:29:21.050
But perhaps you're thinking, I
don't need to care about that.

00:29:21.050 --> 00:29:24.380
I'm concentrated on mature
markets like the US.

00:29:24.380 --> 00:29:26.750
Well, actually,
our research showed

00:29:26.750 --> 00:29:29.810
that US is the
second largest market

00:29:29.810 --> 00:29:32.570
for low-end devices
after India, followed

00:29:32.570 --> 00:29:34.300
by Russia at number three.

00:29:34.300 --> 00:29:37.899
So mature markets still can have
a high degree of concentration

00:29:37.899 --> 00:29:38.690
or low-end devices.

00:29:42.920 --> 00:29:44.500
The first thing you
should understand

00:29:44.500 --> 00:29:48.160
about emerging markets is
that data is like currency.

00:29:48.160 --> 00:29:52.030
Because when compared to the
average wage in these markets,

00:29:52.030 --> 00:29:54.550
data is super-expensive.

00:29:54.550 --> 00:29:55.960
Let me explain.

00:29:55.960 --> 00:29:58.590
In India-- sorry, in the US--

00:29:58.590 --> 00:30:02.770
1 gigabyte of data
typically costs about $10,

00:30:02.770 --> 00:30:06.790
which, on average, is the wage
for about 23 minutes of work.

00:30:06.790 --> 00:30:11.620
In Indonesia, 1 gigabyte of
data costs only about $2.80,

00:30:11.620 --> 00:30:15.490
but it takes 316
minutes to earn.

00:30:15.490 --> 00:30:19.660
Another interesting fact is
that, while in India, that

00:30:19.660 --> 00:30:24.880
is one Wi-Fi hotspot
for every 3,900 users,

00:30:24.880 --> 00:30:27.790
the global average is
actually one Wi-Fi hotspot

00:30:27.790 --> 00:30:29.980
for 150 users.

00:30:29.980 --> 00:30:32.970
Imagine the network congestion.

00:30:32.970 --> 00:30:36.270
In these markets, data
is primarily prepaid.

00:30:36.270 --> 00:30:40.890
In India specifically,
its 95% prepaid.

00:30:40.890 --> 00:30:44.070
This means people buy fixed
amounts of data upfront,

00:30:44.070 --> 00:30:46.470
calculating the exact
megabyte of data

00:30:46.470 --> 00:30:50.640
they can spend in a day,
in a week, and in a month.

00:30:50.640 --> 00:30:55.140
As a result, the data use
is extremely budgeted.

00:30:55.140 --> 00:30:57.270
Even with the rise of
fast-speed internet,

00:30:57.270 --> 00:31:01.530
it is estimated, even by
2020, over a billion people

00:31:01.530 --> 00:31:04.770
will still be on 2G networks.

00:31:04.770 --> 00:31:07.980
But large games don't only
cost internet, but also

00:31:07.980 --> 00:31:11.730
precious space on a
1-gigabyte device.

00:31:11.730 --> 00:31:15.150
So it's really important for
you to ration every megabyte

00:31:15.150 --> 00:31:16.740
that you add onto your game.

00:31:16.740 --> 00:31:19.020
Because that one MB
might make the difference

00:31:19.020 --> 00:31:21.055
between an install
or an uninstall

00:31:21.055 --> 00:31:24.600
in your user's device.

00:31:24.600 --> 00:31:26.100
We at Google want
to help enhance

00:31:26.100 --> 00:31:28.530
the experience for
users on low-end devices

00:31:28.530 --> 00:31:31.710
where they don't have to
compromise on quality no matter

00:31:31.710 --> 00:31:34.020
what their device and network.

00:31:34.020 --> 00:31:36.540
We no longer want them
to feel disappointed

00:31:36.540 --> 00:31:40.980
with entry-level devices
where things just about work.

00:31:40.980 --> 00:31:43.980
Entry-level devices
are a critical lifeline

00:31:43.980 --> 00:31:44.940
for these users.

00:31:44.940 --> 00:31:48.450
It's often the only device they
have to access the internet

00:31:48.450 --> 00:31:51.580
and play online games.

00:31:51.580 --> 00:31:54.700
As we think about democratizing
the internet and gaming

00:31:54.700 --> 00:31:56.860
for users around
the world, we want

00:31:56.860 --> 00:31:59.440
you to ask yourself
three questions--

00:31:59.440 --> 00:32:04.150
is your game playable,
affordable, and engaging?

00:32:04.150 --> 00:32:06.880
Playable in this context
would mean asking yourself

00:32:06.880 --> 00:32:10.600
if the game performs well in
low, intermittent, and even

00:32:10.600 --> 00:32:12.550
offline connections.

00:32:12.550 --> 00:32:16.000
Does it support older
and low-end devices?

00:32:16.000 --> 00:32:18.250
Does it keep data costs
and battery consumption

00:32:18.250 --> 00:32:22.780
low throughout the life
cycle of your game?

00:32:22.780 --> 00:32:25.330
Over the past few months,
we have invested a lot

00:32:25.330 --> 00:32:28.760
in trying to understand how
to approach these challenges.

00:32:28.760 --> 00:32:31.660
We're excited to share a
framework with you which

00:32:31.660 --> 00:32:35.410
we use within the company to
think about these problems.

00:32:35.410 --> 00:32:39.830
The framework breaks down how we
can make games smaller, faster,

00:32:39.830 --> 00:32:43.280
and more engaging,
and most importantly,

00:32:43.280 --> 00:32:48.512
help you connect with the next
billion online users with ease.

00:32:48.512 --> 00:32:50.470
We've been working closely
with game developers

00:32:50.470 --> 00:32:53.500
to understand how they have
been tackling these problems.

00:32:53.500 --> 00:32:56.410
And today I would like to
share the story of AppOn,

00:32:56.410 --> 00:32:59.800
a game developer in a
town called Pune in India,

00:32:59.800 --> 00:33:02.920
and how they grew their game
business by degrowing the game

00:33:02.920 --> 00:33:03.962
size.

00:33:03.962 --> 00:33:05.170
Can we have the video please?

00:33:05.170 --> 00:33:05.836
[VIDEO PLAYBACK]

00:33:05.836 --> 00:33:09.106
[MUSIC PLAYING]

00:35:47.746 --> 00:35:49.730
[END PLAYBACK]

00:35:49.730 --> 00:35:53.202
[APPLAUSE]

00:35:55.367 --> 00:35:57.700
TOM GREENAWAY: Well, it looks
like time management games

00:35:57.700 --> 00:35:59.620
are a hit in several markets.

00:35:59.620 --> 00:36:00.380
Hi, everyone.

00:36:00.380 --> 00:36:01.510
My name's Tom Greenaway.

00:36:01.510 --> 00:36:04.390
And I'm a developer advocate
based out of Google Sydney.

00:36:04.390 --> 00:36:06.430
As you just heard,
AppOn have found success

00:36:06.430 --> 00:36:09.490
by exploring the opportunities
in the emerging markets.

00:36:09.490 --> 00:36:11.560
And recently, Kanan
and I have been

00:36:11.560 --> 00:36:14.470
working with game developers
in emerging markets like India

00:36:14.470 --> 00:36:16.900
to identify ways they
can optimize their games

00:36:16.900 --> 00:36:18.760
for lower-end devices.

00:36:18.760 --> 00:36:22.210
So today I'd like to share
with you a few pieces of advice

00:36:22.210 --> 00:36:25.460
on these topic areas.

00:36:25.460 --> 00:36:27.250
Let's start with the APK size.

00:36:27.250 --> 00:36:29.110
How can you reduce
the size of your game

00:36:29.110 --> 00:36:30.850
for the emerging markets?

00:36:30.850 --> 00:36:33.370
Well, games will typically
have some combination

00:36:33.370 --> 00:36:36.190
of game code, libraries,
and content assets

00:36:36.190 --> 00:36:38.650
like graphics and audio.

00:36:38.650 --> 00:36:40.870
One way to reduce your
file size is, of course,

00:36:40.870 --> 00:36:44.440
to tailor your assets for
different device tiers.

00:36:44.440 --> 00:36:47.800
For example, a lower-end device
might have a smaller resolution

00:36:47.800 --> 00:36:49.540
screen, and therefore
might not need

00:36:49.540 --> 00:36:51.690
higher-resolution graphics.

00:36:51.690 --> 00:36:54.820
Or the device might not have the
latest compression algorithms

00:36:54.820 --> 00:36:57.640
such as ASTC.

00:36:57.640 --> 00:37:00.530
So using the multiple APK
feature in Google Play,

00:37:00.530 --> 00:37:03.200
you can actually create
variations of your APK

00:37:03.200 --> 00:37:06.260
that are targeted towards
tiers of devices, including

00:37:06.260 --> 00:37:07.510
the new Android Go devices.

00:37:10.510 --> 00:37:12.987
Next is the topic
of game performance.

00:37:12.987 --> 00:37:15.070
If your game doesn't perform
well, then logically,

00:37:15.070 --> 00:37:17.920
users will not be enticed to
continue playing or spending

00:37:17.920 --> 00:37:19.180
money.

00:37:19.180 --> 00:37:21.190
So here are a few things
you can keep in mind.

00:37:21.190 --> 00:37:24.220
If you're struggling to
hit 60 frames per second

00:37:24.220 --> 00:37:25.900
on a particular
device, you could

00:37:25.900 --> 00:37:27.280
try locking the
frames per second

00:37:27.280 --> 00:37:30.650
to 30 instead for consistency.

00:37:30.650 --> 00:37:33.740
Also, GPU overdraw is
a major contributor

00:37:33.740 --> 00:37:35.559
to mobile performance
bottlenecks.

00:37:35.559 --> 00:37:37.100
So try limiting the
amount of texture

00:37:37.100 --> 00:37:39.860
blending you're forcing
the device to handle.

00:37:39.860 --> 00:37:42.200
For example, if you have
parallax effects in your game,

00:37:42.200 --> 00:37:45.750
you could try simplifying
or combining those layers.

00:37:45.750 --> 00:37:47.680
And if you gain
uses complex shaders

00:37:47.680 --> 00:37:49.780
or other intensive
visual effects,

00:37:49.780 --> 00:37:52.390
you could try optimizing them
further or disabling them

00:37:52.390 --> 00:37:53.380
for particular devices.

00:37:57.090 --> 00:38:01.500
Now, as Kanan mentioned, in the
emerging markets, the cost of--

00:38:01.500 --> 00:38:03.450
the cost of data is really high.

00:38:03.450 --> 00:38:06.240
In fact, it's not
actually guaranteed.

00:38:06.240 --> 00:38:09.060
So ideally, you should design
your games with offline modes

00:38:09.060 --> 00:38:12.750
to be available for players or
to design with the expectation

00:38:12.750 --> 00:38:15.150
of failure at least.

00:38:15.150 --> 00:38:18.510
For example, a developer
from Australia, Not Doppler,

00:38:18.510 --> 00:38:20.490
released a game called
"Crash of Cars,"

00:38:20.490 --> 00:38:22.260
pictured here on the screen.

00:38:22.260 --> 00:38:25.020
And in the game, it supports
realtime multiplayer.

00:38:25.020 --> 00:38:27.390
But they implemented a
clever fallback mechanism

00:38:27.390 --> 00:38:29.970
if their uses lose
internet connectivity.

00:38:29.970 --> 00:38:32.100
If a player
disconnects, their car

00:38:32.100 --> 00:38:34.752
is seamlessly replaced with
a bot that takes control.

00:38:34.752 --> 00:38:36.960
And players never realize
that there was a disruption

00:38:36.960 --> 00:38:39.160
to their game at all.

00:38:39.160 --> 00:38:41.700
Furthermore, the Android
emulator's performance

00:38:41.700 --> 00:38:43.930
has improved considerably
over the years

00:38:43.930 --> 00:38:46.740
if you use x86 emulation.

00:38:46.740 --> 00:38:49.290
And through the emulator,
you can simulate low signal

00:38:49.290 --> 00:38:53.790
strength connections or specific
cellular connection types,

00:38:53.790 --> 00:38:56.200
like EDGE, GSM, and so on.

00:38:56.200 --> 00:38:58.930
So this is a great way to test
the durability of your network

00:38:58.930 --> 00:38:59.430
design.

00:39:02.390 --> 00:39:04.460
Lastly, there are actually
a lot of great tools

00:39:04.460 --> 00:39:07.410
available for game developers
on Android nowadays,

00:39:07.410 --> 00:39:09.980
such as ProGuard, which can
help you remove unused Java

00:39:09.980 --> 00:39:13.650
classes, resources, fields,
and methods from your APK.

00:39:13.650 --> 00:39:15.620
And GAPID, shown
here on the screen,

00:39:15.620 --> 00:39:17.780
is really great for
viewing texture atlases

00:39:17.780 --> 00:39:19.700
and finding GPU bottlenecks.

00:39:19.700 --> 00:39:23.480
It works on any device,
with any GPU manufacturer,

00:39:23.480 --> 00:39:26.354
and any version of
OpenGL or Vulkan.

00:39:26.354 --> 00:39:27.770
Meanwhile, systrace
and simpleperf

00:39:27.770 --> 00:39:31.130
are just great
for CPU profiling.

00:39:31.130 --> 00:39:33.830
And Bloaty, APK Analyzer,
and Classy Shark

00:39:33.830 --> 00:39:36.895
can help you analyze
the bloat in your APKs.

00:39:36.895 --> 00:39:38.270
For example, there
are developers

00:39:38.270 --> 00:39:41.000
who have used Bloaty to discover
that they could save space

00:39:41.000 --> 00:39:43.400
in their APK by
stripping all the log

00:39:43.400 --> 00:39:44.630
statements in their code.

00:39:47.370 --> 00:39:49.470
Now I want to leave you
with one last thought.

00:39:49.470 --> 00:39:52.680
I personally believe that the
core of all successful games

00:39:52.680 --> 00:39:54.120
is gameplay.

00:39:54.120 --> 00:39:56.820
However, great gameplay
can be impacted negatively

00:39:56.820 --> 00:40:00.030
if a game isn't optimized for
the device it's running on.

00:40:00.030 --> 00:40:02.610
And so it's up to
you, as developers,

00:40:02.610 --> 00:40:06.150
to not only make great
gameplay, but to support

00:40:06.150 --> 00:40:07.680
that gameplay with
the techniques

00:40:07.680 --> 00:40:09.540
I've highlighted today.

00:40:09.540 --> 00:40:13.171
And so I urge you, revisit
the recording of this talk.

00:40:13.171 --> 00:40:14.670
And look up the
tools and techniques

00:40:14.670 --> 00:40:17.040
I've mentioned so that
your games can perform well

00:40:17.040 --> 00:40:20.390
on as many devices as possible.

00:40:20.390 --> 00:40:20.890
Thank you.

00:40:20.890 --> 00:40:23.431
I hope we have convinced you of
the potential of the emerging

00:40:23.431 --> 00:40:24.410
markets for games.

00:40:24.410 --> 00:40:27.290
And you can find me
on Twitter @tcmg.

00:40:27.290 --> 00:40:29.579
Next I'd like to introduce
Stewart Miles, who

00:40:29.579 --> 00:40:32.120
will be talking about other ways
to drive engagement and game

00:40:32.120 --> 00:40:33.818
quality with Firebase.

00:40:33.818 --> 00:40:37.164
[APPLAUSE]

00:40:41.960 --> 00:40:43.440
STEWART MILES: Hello.

00:40:43.440 --> 00:40:45.860
As Tom mentioned,
I'm Stewart Miles.

00:40:45.860 --> 00:40:47.740
And I work with
the Firebase team.

00:40:47.740 --> 00:40:50.750
And I'm going to be talking
about improving user engagement

00:40:50.750 --> 00:40:53.975
and game quality with
Firebase with Nima Akhbari.

00:40:53.975 --> 00:40:57.770
So to get started,
we're currently

00:40:57.770 --> 00:41:00.800
at over a million
developers using Firebase.

00:41:00.800 --> 00:41:03.040
They're building apps and games.

00:41:03.040 --> 00:41:05.930
This is incredible momentum
since we unveiled the Firebase

00:41:05.930 --> 00:41:09.530
platform back at
Google I/O in 2016.

00:41:09.530 --> 00:41:11.570
Game developers have been
joining in that party.

00:41:11.570 --> 00:41:12.770
And it's been really great.

00:41:12.770 --> 00:41:14.230
We're really happy with that.

00:41:14.230 --> 00:41:16.340
And so thank you
to everyone here

00:41:16.340 --> 00:41:20.120
who has been part of that, part
of taking that journey with us.

00:41:20.120 --> 00:41:22.200
We're really, really happy.

00:41:22.200 --> 00:41:24.091
So what is Firebase?

00:41:24.091 --> 00:41:25.590
If you're not
familiar with it, it's

00:41:25.590 --> 00:41:27.820
a mobile development
platform from Google.

00:41:27.820 --> 00:41:30.380
It brings together a lot
of our different products

00:41:30.380 --> 00:41:31.790
to work together.

00:41:31.790 --> 00:41:35.150
We provide a single SDK
that give you the resources

00:41:35.150 --> 00:41:38.210
is to develop great experiences
and grow and re-engage

00:41:38.210 --> 00:41:39.650
your audience.

00:41:39.650 --> 00:41:43.380
Where applicable, we have
Firebase products work together

00:41:43.380 --> 00:41:46.802
to provide an intuitive and
powerful developer experience.

00:41:46.802 --> 00:41:49.010
I'll give you an overview
of some of the key features

00:41:49.010 --> 00:41:53.510
and how you can use those
to grow your audience.

00:41:53.510 --> 00:41:55.010
So first of all,
I'll get started

00:41:55.010 --> 00:41:56.600
on some of the platforms.

00:41:56.600 --> 00:41:59.160
We support iOS, and
Android, and the web.

00:41:59.160 --> 00:42:01.670
We have SDKs, native
SDKs, for those platforms

00:42:01.670 --> 00:42:03.380
for game developers as well.

00:42:03.380 --> 00:42:07.110
My team, we maintain
C++ and Unity SDKs.

00:42:07.110 --> 00:42:09.680
Today we're happy to
announce we've actually

00:42:09.680 --> 00:42:12.710
added support for
development and testing

00:42:12.710 --> 00:42:15.260
on desktop for a
subset of our features.

00:42:15.260 --> 00:42:19.160
This includes authentication,
the realtime database storage,

00:42:19.160 --> 00:42:20.720
and our remote
configuration tool,

00:42:20.720 --> 00:42:23.380
which I will cover in a bit.

00:42:23.380 --> 00:42:28.760
OK, so before you increase
your audience, with some magic,

00:42:28.760 --> 00:42:32.000
you really need to
understand what players

00:42:32.000 --> 00:42:33.810
are doing within your game.

00:42:33.810 --> 00:42:36.561
So if you're selling
a premium game,

00:42:36.561 --> 00:42:38.810
it's likely that you want
to understand whether or not

00:42:38.810 --> 00:42:40.768
players are making it
through your entire game,

00:42:40.768 --> 00:42:43.760
consuming all of the content,
coming back and enjoying it

00:42:43.760 --> 00:42:44.930
in some way, shape, or form.

00:42:44.930 --> 00:42:46.520
Otherwise, they're not
going to buy your next game.

00:42:46.520 --> 00:42:47.978
You're not going
to make any money.

00:42:47.978 --> 00:42:50.270
If you're selling
a freemium game,

00:42:50.270 --> 00:42:53.195
it's likely you want to track
how many ads they're watching,

00:42:53.195 --> 00:42:55.070
make sure that they're
coming back every day,

00:42:55.070 --> 00:42:57.620
making sure that they're
buying those gem or coin packs,

00:42:57.620 --> 00:42:58.640
things like that.

00:42:58.640 --> 00:43:01.130
So with Google
Analytics with Firebase,

00:43:01.130 --> 00:43:03.410
you can integrate our SDK.

00:43:03.410 --> 00:43:06.110
And you can start measuring
all of this data immediately.

00:43:06.110 --> 00:43:08.030
And it's entirely free.

00:43:08.030 --> 00:43:10.340
So what we provide
out of the box,

00:43:10.340 --> 00:43:14.190
we provide a dashboard
that you can start using.

00:43:14.190 --> 00:43:16.370
We also provide the
ability to export data

00:43:16.370 --> 00:43:19.790
into your own analytics systems.

00:43:19.790 --> 00:43:22.580
As soon as you integrate the
SDK with one line of code,

00:43:22.580 --> 00:43:24.570
we start collecting
events, like, for example,

00:43:24.570 --> 00:43:25.986
the first time
your game is opened

00:43:25.986 --> 00:43:29.030
by a user, the engagement
time of in the game,

00:43:29.030 --> 00:43:32.630
player retention, in-app
purchases where it's possible,

00:43:32.630 --> 00:43:36.020
and also user demographics
with very minimal effort.

00:43:36.020 --> 00:43:38.720
You can also log your own
custom events and pipe

00:43:38.720 --> 00:43:42.380
that all through to understand
your player behavior.

00:43:42.380 --> 00:43:44.570
And then in addition to
this, late last year, we

00:43:44.570 --> 00:43:47.030
released a product we like
to call Firebase Predictions.

00:43:47.030 --> 00:43:48.590
It's currently in beta.

00:43:48.590 --> 00:43:50.810
And what this will
do is automatically

00:43:50.810 --> 00:43:54.810
segment your
audience into groups

00:43:54.810 --> 00:43:56.630
using a machine-learned model.

00:43:56.630 --> 00:43:58.216
These user groups
can then be targeted

00:43:58.216 --> 00:44:00.590
with some other products I'll
be covering in a bit, Cloud

00:44:00.590 --> 00:44:02.780
Messaging and Remote Config.

00:44:02.780 --> 00:44:05.570
And they're updated daily to
keep your predictions fresh.

00:44:05.570 --> 00:44:07.940
So the groups that
we do out of the box,

00:44:07.940 --> 00:44:12.890
we do churn, which predicts
the users that will churn out

00:44:12.890 --> 00:44:15.860
of your game within the
next seven days, not churn,

00:44:15.860 --> 00:44:17.349
the group of users
who won't leave

00:44:17.349 --> 00:44:18.890
your game within
the next seven days,

00:44:18.890 --> 00:44:21.969
spend, the users who are liable
to spend within the next seven

00:44:21.969 --> 00:44:24.385
days, and not spend, the users
who are liable to not spend

00:44:24.385 --> 00:44:25.610
within the next seven days.

00:44:25.610 --> 00:44:27.110
So using this
information, you can

00:44:27.110 --> 00:44:30.740
start to get a picture of
how well your game is doing.

00:44:30.740 --> 00:44:32.150
And also it can
start to give you

00:44:32.150 --> 00:44:35.390
an idea of how you can
start targeting experiments

00:44:35.390 --> 00:44:40.290
to retain and increase
retention with those users.

00:44:40.290 --> 00:44:41.900
So once you've got
an understanding

00:44:41.900 --> 00:44:44.640
of your developer--
your players--

00:44:44.640 --> 00:44:48.680
how do you then stop
testing out ideas and seeing

00:44:48.680 --> 00:44:52.610
if you can improve gameplay
experience or user retention?

00:44:52.610 --> 00:44:55.400
Well, we have a framework
called Remote Config.

00:44:55.400 --> 00:44:57.500
It enables you to
do A/B testing.

00:44:57.500 --> 00:45:01.820
You can store any parameters
you want to change your game.

00:45:01.820 --> 00:45:06.290
You can deploy those without
reshipping your game.

00:45:06.290 --> 00:45:07.930
And you can-- so
for example, you

00:45:07.930 --> 00:45:12.890
could run experiments
on in-game promotion

00:45:12.890 --> 00:45:15.332
of in-game purchased items.

00:45:15.332 --> 00:45:16.790
So for example, in
this case, we've

00:45:16.790 --> 00:45:19.040
got two different
experiments running.

00:45:19.040 --> 00:45:21.510
One way, you can get
additional shield strength

00:45:21.510 --> 00:45:24.800
for your MechaHamster
ball for $2.

00:45:24.800 --> 00:45:28.960
Or you could get an additional
20 hamster bucks for just $1.

00:45:28.960 --> 00:45:32.390
And so we could A/B test this,
see which one works the best,

00:45:32.390 --> 00:45:34.910
and then flip a switch
on the back end.

00:45:34.910 --> 00:45:37.585
And everything will be
using whatever configuration

00:45:37.585 --> 00:45:39.020
that we have set.

00:45:39.020 --> 00:45:41.060
And so out of the
box, as soon as you

00:45:41.060 --> 00:45:44.760
start using this product, we
provide our console for this.

00:45:44.760 --> 00:45:46.320
So you can use our console.

00:45:46.320 --> 00:45:49.070
And we also have a REST
API that we recently

00:45:49.070 --> 00:45:51.380
released that enables
you to integrate this

00:45:51.380 --> 00:45:54.510
into your own game
development tools as well.

00:45:54.510 --> 00:45:57.660
So as an example, Rockbite
Games works with us

00:45:57.660 --> 00:45:59.900
and use Firebase
Predictions to segment

00:45:59.900 --> 00:46:02.870
their users in a way that
was not possible before.

00:46:02.870 --> 00:46:05.120
In the past, they just
tried to segment users

00:46:05.120 --> 00:46:08.390
based upon demographic
data and then tested

00:46:08.390 --> 00:46:11.020
different digital
store UI layouts

00:46:11.020 --> 00:46:12.020
based upon these groups.

00:46:12.020 --> 00:46:13.603
But the tests are
really inconclusive.

00:46:13.603 --> 00:46:16.250
So with predictions,
what they did,

00:46:16.250 --> 00:46:18.950
they segmented users into groups
based upon their likelihood

00:46:18.950 --> 00:46:20.750
to spend or not spend.

00:46:20.750 --> 00:46:24.155
And then Rockbite used Firebase
Remote Config to deploy changes

00:46:24.155 --> 00:46:27.230
to their digital store UI.

00:46:27.230 --> 00:46:29.900
And what they discovered
was that if they put chests

00:46:29.900 --> 00:46:32.600
in the top of their
store for the users who

00:46:32.600 --> 00:46:36.170
were more likely to spend,
those users were actually

00:46:36.170 --> 00:46:38.250
more likely to spend more
money in their store.

00:46:38.250 --> 00:46:41.670
So it was a very, very simple
experiment that they run.

00:46:41.670 --> 00:46:44.510
An that ended up
boosting the monetization

00:46:44.510 --> 00:46:46.850
flows in revenue by 25%.

00:46:46.850 --> 00:46:49.820
So just experimenting,
trying things out

00:46:49.820 --> 00:46:55.430
is a really great way
to improve monetization.

00:46:55.430 --> 00:46:58.670
So that's great if players
are staying within your game.

00:46:58.670 --> 00:47:02.200
If you want-- if players are
starting to leave your game,

00:47:02.200 --> 00:47:04.200
and your app has migrated
off their home screen,

00:47:04.200 --> 00:47:05.990
and they're not
opening it that often,

00:47:05.990 --> 00:47:07.220
how do you bring them back?

00:47:07.220 --> 00:47:09.250
Well, you can push
notifications, right?

00:47:09.250 --> 00:47:11.900
And we have a product called
Google Cloud Messaging that

00:47:11.900 --> 00:47:13.816
enables you to do that, right?

00:47:13.816 --> 00:47:15.440
And this enables
you-- you know, you've

00:47:15.440 --> 00:47:17.070
seen-- you've all seen
push notifications.

00:47:17.070 --> 00:47:19.236
You get a message, pops up
at the top of the screen.

00:47:19.236 --> 00:47:22.050
And that can potentially
reengaging users.

00:47:22.050 --> 00:47:26.040
So what we do out of the box,
we provide a composer for this.

00:47:26.040 --> 00:47:27.630
So you can have your
marketing teams,

00:47:27.630 --> 00:47:32.700
like non-engineers, sit down,
and compose campaigns, and run

00:47:32.700 --> 00:47:34.800
campaigns through dashboard.

00:47:34.800 --> 00:47:36.120
And there's also a REST API.

00:47:36.120 --> 00:47:39.180
So if you have your own live
ops tools or marketing tools,

00:47:39.180 --> 00:47:41.180
you can do integrations
into there.

00:47:41.180 --> 00:47:43.679
You could also potentially
automate campaigns

00:47:43.679 --> 00:47:44.470
from your back end.

00:47:44.470 --> 00:47:47.220
So if you run events, you could
send messages out to users

00:47:47.220 --> 00:47:49.414
and try and bring them
back into your game.

00:47:49.414 --> 00:47:51.330
After you've sent out
messages, obviously, you

00:47:51.330 --> 00:47:53.437
want to see whether or
not they are effective.

00:47:53.437 --> 00:47:55.770
So we also provide measurement
out of the box with this.

00:47:55.770 --> 00:47:57.390
And so this is an
excellent example

00:47:57.390 --> 00:47:59.780
of a case where using
different products together

00:47:59.780 --> 00:48:02.730
within the Firebase suite
will pull them together.

00:48:02.730 --> 00:48:05.470
In this particular case, it's
using our Google Analytics

00:48:05.470 --> 00:48:07.650
product.

00:48:07.650 --> 00:48:10.856
So if a user comes
back into your game,

00:48:10.856 --> 00:48:12.480
it's liable that you
want to drive them

00:48:12.480 --> 00:48:14.440
to some content within the game.

00:48:14.440 --> 00:48:16.050
So what you can do
with notifications

00:48:16.050 --> 00:48:20.790
is you could potentially connect
a notification to a link.

00:48:20.790 --> 00:48:23.970
And if the user doesn't
have the game installed,

00:48:23.970 --> 00:48:27.055
you could even have
a user share a link

00:48:27.055 --> 00:48:29.910
with a friend to try and bring
that friend into the game.

00:48:29.910 --> 00:48:33.420
And so using Firebase dynamic
links, you can do that.

00:48:33.420 --> 00:48:36.240
And you can tailor the link
behavior based upon the state

00:48:36.240 --> 00:48:38.770
that the game is on
the user's device.

00:48:38.770 --> 00:48:40.880
So if the game isn't
installed on a user's device,

00:48:40.880 --> 00:48:42.452
you could bring
them to a web page.

00:48:42.452 --> 00:48:44.160
If it's installed onto
the user's device,

00:48:44.160 --> 00:48:46.350
you could bring them
actually into the game.

00:48:46.350 --> 00:48:48.120
If it's not installed,
you could have it

00:48:48.120 --> 00:48:50.220
so that it installs the
game and then brings them

00:48:50.220 --> 00:48:51.790
into the right
point in the game.

00:48:51.790 --> 00:48:53.790
And there's many different
interesting use cases

00:48:53.790 --> 00:48:54.706
that you can use here.

00:48:54.706 --> 00:48:56.230
So we'll go for a
really simple one.

00:48:56.230 --> 00:48:59.730
So we built this small demo
game called MechaHamster.

00:48:59.730 --> 00:49:02.487
You can design your own maps
as a player within the game.

00:49:02.487 --> 00:49:04.320
And then, you know, in
this particular case,

00:49:04.320 --> 00:49:06.778
I've created a map, and I want
to share it with my friends.

00:49:06.778 --> 00:49:10.490
So I create my map in this map
editor, press the Share button.

00:49:10.490 --> 00:49:12.090
I select some friends
to share with.

00:49:12.090 --> 00:49:14.890
I write a message, run through.

00:49:14.890 --> 00:49:16.170
I've shared the link.

00:49:16.170 --> 00:49:18.260
My friend receives an email.

00:49:18.260 --> 00:49:21.470
When they tap on the link,
it actually goes through

00:49:21.470 --> 00:49:23.820
and will open the game.

00:49:23.820 --> 00:49:26.730
And it will show-- it
will show the content

00:49:26.730 --> 00:49:30.010
for the user in that
game, all right, that I've

00:49:30.010 --> 00:49:31.260
shared with one of my friends.

00:49:31.260 --> 00:49:32.884
If they haven't got
the game installed,

00:49:32.884 --> 00:49:35.460
it will take them through
the app install flow.

00:49:35.460 --> 00:49:37.607
And after the app
is actually opened,

00:49:37.607 --> 00:49:39.690
it will just open in the
correct point in the app.

00:49:39.690 --> 00:49:42.267
There's no need to go back, find
the link in the email, which

00:49:42.267 --> 00:49:44.100
you've probably forgotten
about after you've

00:49:44.100 --> 00:49:46.290
installed it, to
actually continue through

00:49:46.290 --> 00:49:47.770
to that content.

00:49:47.770 --> 00:49:51.540
So if users are creating
this content within the game,

00:49:51.540 --> 00:49:53.550
it's very likely you
want a way of being

00:49:53.550 --> 00:49:57.332
able to store that content
within your gaming back end.

00:49:57.332 --> 00:49:59.040
You could write your
own custom back end,

00:49:59.040 --> 00:50:01.080
or you could just, again,
use Firebase, right?

00:50:01.080 --> 00:50:05.280
You could use-- so if you
use our authentication system

00:50:05.280 --> 00:50:07.890
to get an identity
for the user, then

00:50:07.890 --> 00:50:10.290
you can start associating
additional data with the user.

00:50:10.290 --> 00:50:12.540
So our authentication
solution enables

00:50:12.540 --> 00:50:16.330
you to associate a
single identity--

00:50:16.330 --> 00:50:19.860
so one identity for your game--
with different login providers.

00:50:19.860 --> 00:50:23.060
So someone could log in with
Twitter, Facebook, Google.

00:50:23.060 --> 00:50:24.360
Or today we just--

00:50:24.360 --> 00:50:27.580
we just released support for
Google Play Games as well.

00:50:27.580 --> 00:50:30.450
So on Android, you could
do seamless sign-in, which

00:50:30.450 --> 00:50:31.950
is really low-friction sign-in.

00:50:31.950 --> 00:50:33.600
As soon as the user
opens the game,

00:50:33.600 --> 00:50:34.933
they're automatically signed in.

00:50:34.933 --> 00:50:36.570
You can take that
sign-in, and you

00:50:36.570 --> 00:50:38.970
can associate that with
a Firebase authentication

00:50:38.970 --> 00:50:40.230
identity.

00:50:40.230 --> 00:50:43.080
Now, with that identity,
you could then store data

00:50:43.080 --> 00:50:44.940
in our realtime database.

00:50:44.940 --> 00:50:47.430
And this can-- this is
realtime in the sense

00:50:47.430 --> 00:50:50.870
that it synchronizes data
across all devices listening

00:50:50.870 --> 00:50:54.070
to a point in the database
within about 100 milliseconds.

00:50:54.070 --> 00:50:56.550
This could be used to build
collaborative editing tools.

00:50:56.550 --> 00:50:59.040
Like, for example, in
our MechaHamster game,

00:50:59.040 --> 00:51:00.840
we have a map editor.

00:51:00.840 --> 00:51:02.670
And you can modify
map, and other users

00:51:02.670 --> 00:51:04.680
can see changes in real time.

00:51:04.680 --> 00:51:06.210
Or you could build
realtime-- you

00:51:06.210 --> 00:51:08.152
could build turn-based
multiplayer games

00:51:08.152 --> 00:51:09.360
and things like that as well.

00:51:12.030 --> 00:51:14.550
If you need to store
large amounts of data--

00:51:14.550 --> 00:51:17.280
so for example, you're
pushing new asset packs out,

00:51:17.280 --> 00:51:20.094
or you're doing things like
allowing users to upload

00:51:20.094 --> 00:51:22.510
user-generated content that's
large, or like, for example,

00:51:22.510 --> 00:51:25.020
if they're creating new
art assets within the game,

00:51:25.020 --> 00:51:28.070
or they're sharing screenshots
and things like that--

00:51:28.070 --> 00:51:29.820
we have a product
called Firebase Storage.

00:51:29.820 --> 00:51:32.940
Again, with that
authentication token

00:51:32.940 --> 00:51:35.730
that we provide with
Firebase Authentication,

00:51:35.730 --> 00:51:37.992
you can upload
user-specific data.

00:51:37.992 --> 00:51:40.200
There's also a whole rule
system that can be applied.

00:51:40.200 --> 00:51:42.241
And it's, again, with no
server-side programming.

00:51:42.241 --> 00:51:43.830
You just write a
little bit of script,

00:51:43.830 --> 00:51:49.260
and you can limit the access to
data stored in Firebase Storage

00:51:49.260 --> 00:51:50.980
to a set of users.

00:51:50.980 --> 00:51:53.140
So this could be
used, for example,

00:51:53.140 --> 00:51:56.730
to send out premium content
to the users who are subscr--

00:51:56.730 --> 00:52:00.750
who just purchased it, for
example, or are subscribers.

00:52:00.750 --> 00:52:02.700
So again, following
the theme of not

00:52:02.700 --> 00:52:04.800
having to bring up
your own back end,

00:52:04.800 --> 00:52:09.410
we also offer integration
with Google Cloud Functions.

00:52:09.410 --> 00:52:12.275
This enables you to do
things like associate

00:52:12.275 --> 00:52:15.300
and take an event that
happens in your game, run

00:52:15.300 --> 00:52:19.770
some logic that then
controls whether or not

00:52:19.770 --> 00:52:20.860
an action can occur.

00:52:20.860 --> 00:52:22.510
So I'll give you an example.

00:52:22.510 --> 00:52:26.010
So for example, if a
devel-- if, in your game,

00:52:26.010 --> 00:52:28.980
a player plays through
10 different levels,

00:52:28.980 --> 00:52:32.220
and then you want to reward them
with something, you could have

00:52:32.220 --> 00:52:37.924
a Firebase function actually
track that user's progress.

00:52:37.924 --> 00:52:39.340
And then once they
hit-- you know,

00:52:39.340 --> 00:52:41.256
they've completed five
or 10 different levels,

00:52:41.256 --> 00:52:42.900
you could then
send them a reward.

00:52:42.900 --> 00:52:44.740
And the reward could
be a modification.

00:52:44.740 --> 00:52:46.500
You could surface that
for a modification

00:52:46.500 --> 00:52:48.560
in the database,
which then unlocks

00:52:48.560 --> 00:52:50.190
something in their inventory.

00:52:50.190 --> 00:52:51.660
Or it could be
something like you

00:52:51.660 --> 00:52:53.190
send them a push
notification to try

00:52:53.190 --> 00:52:54.523
and get them back into the game.

00:52:54.523 --> 00:52:56.012
They've played
through five levels.

00:52:56.012 --> 00:52:57.720
Perhaps you send them
a push notification

00:52:57.720 --> 00:52:59.940
that tells them, hey,
come back to the game.

00:52:59.940 --> 00:53:02.510
Come and consume more content.

00:53:02.510 --> 00:53:06.560
OK, so now Nima's going to
come up and talk about testing

00:53:06.560 --> 00:53:07.926
with Firebase Test Lab.

00:53:07.926 --> 00:53:08.426
[APPLAUSE]

00:53:08.426 --> 00:53:09.759
NIMA AKHBARI: Breeze through it.

00:53:09.759 --> 00:53:11.143
STEWART MILES: Sorry, mate.

00:53:11.143 --> 00:53:13.070
NIMA AKHBARI: Thank you.

00:53:13.070 --> 00:53:13.970
Hi, I'm Nima.

00:53:13.970 --> 00:53:15.560
I'm from the Firebase
Test Lab team.

00:53:15.560 --> 00:53:19.540
And I want to talk about
testing for mobile games.

00:53:19.540 --> 00:53:21.040
So game developers
know that testing

00:53:21.040 --> 00:53:24.130
is a critical part of
releasing a high-quality game.

00:53:24.130 --> 00:53:26.260
But we realize that
testing games on Android

00:53:26.260 --> 00:53:28.460
can be challenging.

00:53:28.460 --> 00:53:31.900
The Android ecosystem has done a
great job of enabling diverse--

00:53:31.900 --> 00:53:33.490
device diversity.

00:53:33.490 --> 00:53:35.740
This is why Android devices
are expanding so quickly

00:53:35.740 --> 00:53:38.340
in emerging markets.

00:53:38.340 --> 00:53:40.800
With all these devices, it's
not reasonable for most game

00:53:40.800 --> 00:53:43.210
developers to go out
there and buy them all.

00:53:43.210 --> 00:53:44.760
And even if you had
all those phones,

00:53:44.760 --> 00:53:49.170
manually testing would take a
lot of time and a lot of money.

00:53:49.170 --> 00:53:51.680
That's where Firebase
Test Lab comes in.

00:53:51.680 --> 00:53:54.110
We've built a lot of
labs that host a growing

00:53:54.110 --> 00:53:59.420
number of 80 unique devices, a
mix of physical, real devices

00:53:59.420 --> 00:54:01.790
and virtual ones.

00:54:01.790 --> 00:54:03.530
We help you run
different types of tests

00:54:03.530 --> 00:54:04.946
across all these devices.

00:54:04.946 --> 00:54:06.320
And with our
command line client,

00:54:06.320 --> 00:54:09.860
it's easy to integrate FTL with
your continuous integration

00:54:09.860 --> 00:54:10.970
systems.

00:54:10.970 --> 00:54:12.920
This way you can be
confident in every change

00:54:12.920 --> 00:54:15.110
you make to your game.

00:54:15.110 --> 00:54:17.199
I can already hear
your saying, but Nima,

00:54:17.199 --> 00:54:18.740
testing games with
Android's provided

00:54:18.740 --> 00:54:20.744
testing libraries is hard.

00:54:20.744 --> 00:54:21.410
We've heard you.

00:54:21.410 --> 00:54:23.618
And we've been working with
different gaming partners

00:54:23.618 --> 00:54:27.560
to create the following
testing solutions.

00:54:27.560 --> 00:54:29.300
If you don't have any
tests, no problem.

00:54:29.300 --> 00:54:32.130
Our Robo team has been
focused on games testing

00:54:32.130 --> 00:54:34.820
and, as a first step, has
made it possible for Robo

00:54:34.820 --> 00:54:37.370
to test games with
random actions.

00:54:37.370 --> 00:54:39.590
Now, when Robo encounters
a non-native UI,

00:54:39.590 --> 00:54:42.800
like most games are, it
will send many touch actions

00:54:42.800 --> 00:54:46.850
per second, exploring the game
while collecting performance

00:54:46.850 --> 00:54:49.910
data, video, and screenshots.

00:54:49.910 --> 00:54:54.410
As for any app, you only need
to provide your game APK.

00:54:54.410 --> 00:54:57.510
And here you can see
Robo playing "Zushi."

00:54:57.510 --> 00:55:00.770
It's playing it pretty well.

00:55:00.770 --> 00:55:04.460
Last year at I/O, we announced
game loops, our first testing

00:55:04.460 --> 00:55:06.050
framework for games.

00:55:06.050 --> 00:55:07.970
With game loops, you
can write test scenarios

00:55:07.970 --> 00:55:10.030
inside your native code.

00:55:10.030 --> 00:55:12.440
No need to work outside
your normal environment

00:55:12.440 --> 00:55:15.190
or write any Android Java code.

00:55:15.190 --> 00:55:17.260
You can write custom
results that matter to you,

00:55:17.260 --> 00:55:20.246
and we'll grab them off the
phone for you to analyze.

00:55:20.246 --> 00:55:21.870
This year we're happy
to announce that,

00:55:21.870 --> 00:55:24.500
after working with the Play
pre-launch report team,

00:55:24.500 --> 00:55:27.120
in a matter of weeks, the
pre-launch report will

00:55:27.120 --> 00:55:29.670
automatically run your game
loops for free when you launch

00:55:29.670 --> 00:55:30.989
in the--

00:55:30.989 --> 00:55:33.280
when you launch your app in
the alpha and beta channels

00:55:33.280 --> 00:55:35.370
in the Play Console.

00:55:35.370 --> 00:55:37.600
To get started, we have a
Unity plug-in as well as

00:55:37.600 --> 00:55:39.891
a code lab that walks you
through the process of adding

00:55:39.891 --> 00:55:42.400
game loop.

00:55:42.400 --> 00:55:45.600
NetEase is one of the top
gaming companies in China.

00:55:45.600 --> 00:55:49.530
They've released more than
150 mobile games since 2014

00:55:49.530 --> 00:55:52.880
and have run several top PC
games in the last 10 years.

00:55:52.880 --> 00:55:54.630
We reached out to
NetEase to learning more

00:55:54.630 --> 00:55:56.610
about their testing solution.

00:55:56.610 --> 00:55:59.130
They ensure a high
quality of all their games

00:55:59.130 --> 00:56:02.460
through a dedicated IDE, which
helps them create and run

00:56:02.460 --> 00:56:04.201
automated tests.

00:56:04.201 --> 00:56:05.700
We worked hard with
them to publicly

00:56:05.700 --> 00:56:08.670
launch this framework
for all developers to use

00:56:08.670 --> 00:56:11.730
and to automate
tests for the games.

00:56:11.730 --> 00:56:13.980
So to help me demo
this IDE, please

00:56:13.980 --> 00:56:16.790
welcome Xin, the technical
director of NetEase Games,

00:56:16.790 --> 00:56:18.067
here to help me demo.

00:56:18.067 --> 00:56:21.476
[APPLAUSE]

00:56:26.350 --> 00:56:27.910
Great.

00:56:27.910 --> 00:56:30.060
So Xin here has the NetEase IDE.

00:56:30.060 --> 00:56:33.310
And it's already connected
to his device right here.

00:56:33.310 --> 00:56:35.530
And with this, you
can actually interact

00:56:35.530 --> 00:56:38.080
with the device within
the IDE and use this

00:56:38.080 --> 00:56:42.160
as the main method of
creating your test.

00:56:42.160 --> 00:56:45.100
The IDE allows you to select
different parts of the screen

00:56:45.100 --> 00:56:49.900
and use that with simple actions
like touch, swipe, weight,

00:56:49.900 --> 00:56:53.170
sleeps, and different
visual asserts.

00:56:53.170 --> 00:56:55.270
So now you can
create a simple test.

00:56:55.270 --> 00:56:57.630
And at this point, we
have no SDK integrated.

00:56:57.630 --> 00:56:59.080
And this is all
with just a game.

00:57:02.080 --> 00:57:06.100
We've asserted that our hero,
our little fish, is there.

00:57:06.100 --> 00:57:08.110
And now we can start the game.

00:57:08.110 --> 00:57:12.120
And if you need to interact
with more complex 3D elements,

00:57:12.120 --> 00:57:14.760
you can add an
instrument to your game

00:57:14.760 --> 00:57:17.850
with an optional
SDK called Poko.

00:57:17.850 --> 00:57:19.800
And we've already done
this with this game.

00:57:19.800 --> 00:57:22.860
And so we're able to
interact with the joystick.

00:57:22.860 --> 00:57:27.180
And as you see here, Xin
is now selecting our skill.

00:57:27.180 --> 00:57:30.319
And we'll be moving
the joystick around.

00:57:30.319 --> 00:57:31.860
And then that will
complete our test.

00:57:35.840 --> 00:57:37.730
What NetEase does
here is that they

00:57:37.730 --> 00:57:39.680
have the images that we take.

00:57:39.680 --> 00:57:42.200
And they're able to
do image comparisons

00:57:42.200 --> 00:57:44.480
on the runtime
screen and determine

00:57:44.480 --> 00:57:46.500
if that object exists.

00:57:46.500 --> 00:57:48.500
And if it does, it'll
actually click on it

00:57:48.500 --> 00:57:50.270
or do the action
that's provided.

00:57:50.270 --> 00:57:51.924
So we'll go ahead
and run this test.

00:58:06.050 --> 00:58:07.780
Great, it's run through.

00:58:07.780 --> 00:58:10.310
And now it's moving our
fish character around.

00:58:10.310 --> 00:58:12.630
And our test is complete.

00:58:12.630 --> 00:58:16.550
So NetEase generates a custom
report that we can look at.

00:58:19.614 --> 00:58:21.030
And in this custom
report, you can

00:58:21.030 --> 00:58:22.200
see a couple of cool things.

00:58:22.200 --> 00:58:25.770
So it shows you what has
passed and what has gone wrong.

00:58:25.770 --> 00:58:28.740
And you can see the
target object which

00:58:28.740 --> 00:58:31.110
was the target for
the action as well as

00:58:31.110 --> 00:58:33.540
a runtime screenshot
that NetEase takes

00:58:33.540 --> 00:58:35.160
at each of these action points.

00:58:35.160 --> 00:58:37.500
So you can ensure that
it fails or passes

00:58:37.500 --> 00:58:40.152
at certain points
in your script.

00:58:40.152 --> 00:58:41.610
Now that we've
created a script, we

00:58:41.610 --> 00:58:43.810
want to run it on a
bunch of Android devices.

00:58:43.810 --> 00:58:46.350
So we can bundle it
as a instrumentation

00:58:46.350 --> 00:58:48.544
APK for Android.

00:58:48.544 --> 00:58:49.960
And we've already
done this, so we

00:58:49.960 --> 00:58:51.793
don't have to go through
this whole process.

00:58:55.310 --> 00:58:57.430
So with this
instrumentation APK,

00:58:57.430 --> 00:58:59.770
you can add it to
Firebase Test Lab

00:58:59.770 --> 00:59:01.499
and run it on all
of our devices.

00:59:01.499 --> 00:59:03.040
So here in the
console, this is where

00:59:03.040 --> 00:59:07.006
you would see all of
the Firebase products.

00:59:07.006 --> 00:59:09.708
Now we don't have
internet it looks like.

00:59:19.780 --> 00:59:20.580
OK.

00:59:20.580 --> 00:59:24.300
Well, we would have to upload
the APKs, which we've already

00:59:24.300 --> 00:59:24.900
done here.

00:59:24.900 --> 00:59:27.070
And we can skip to
device selection.

00:59:27.070 --> 00:59:29.250
So here we have our
library of devices

00:59:29.250 --> 00:59:31.170
that you can select through.

00:59:31.170 --> 00:59:35.230
And we have different
devices like a Pixel phone,

00:59:35.230 --> 00:59:36.509
Samsung phone.

00:59:36.509 --> 00:59:38.550
And you would go through
and select which devices

00:59:38.550 --> 00:59:40.270
you would want to run through.

00:59:40.270 --> 00:59:42.840
And at the bottom, you can do
more advanced configurations,

00:59:42.840 --> 00:59:45.536
like which
orientations, as well as

00:59:45.536 --> 00:59:47.910
different locales that can
actually happen on the device.

00:59:51.760 --> 00:59:53.590
We take all this
information, and we

00:59:53.590 --> 00:59:56.586
use it to run your test, the
test that we just created,

00:59:56.586 --> 00:59:57.460
on all those devices.

01:00:08.927 --> 01:00:09.760
Do we have internet?

01:00:13.770 --> 01:00:15.450
OK.

01:00:15.450 --> 01:00:20.020
Let's just-- so we'll just
get straight to the results.

01:00:20.020 --> 01:00:22.140
I don't think we have
the results preloaded.

01:00:22.140 --> 01:00:24.480
But here you can see
that we ran the tests.

01:00:24.480 --> 01:00:26.250
And the tests have
some that passed

01:00:26.250 --> 01:00:29.070
and some that failed on the
specific devices that we ran.

01:00:29.070 --> 01:00:32.020
And we can dig in deeper.

01:00:32.020 --> 01:00:33.816
Oh great, we have internet.

01:00:33.816 --> 01:00:34.690
We can dig in deeper.

01:00:34.690 --> 01:00:37.270
And here we show you
the logs from the logcat

01:00:37.270 --> 01:00:39.190
that we pulled off of
the Android device.

01:00:39.190 --> 01:00:42.320
And you can use that to
debug if there's any issues.

01:00:42.320 --> 01:00:45.700
And we also collect
performance data at no cost.

01:00:45.700 --> 01:00:49.210
The video-- so there's a
whole video of the test run.

01:00:49.210 --> 01:00:52.660
And our performance data
shows you CPU, memory,

01:00:52.660 --> 01:01:00.300
and network usage across this
run, and soon to be, FPS.

01:01:00.300 --> 01:01:03.460
And this is in time
with the video itself.

01:01:03.460 --> 01:01:07.830
So if we can actually
go back to the slides--

01:01:07.830 --> 01:01:10.870
thank you, Xin, for
helping with the demo.

01:01:10.870 --> 01:01:14.160
[APPLAUSE]

01:01:14.160 --> 01:01:18.985
You can-- you can get
started with this IDE today

01:01:18.985 --> 01:01:23.500
at airtest.netease.com and
use it with Firebase Test Lab.

01:01:23.500 --> 01:01:26.050
Hopefully testing on games
just got a lot easier.

01:01:26.050 --> 01:01:26.860
Thank you.

01:01:26.860 --> 01:01:28.960
[APPLAUSE]

01:01:29.560 --> 01:01:32.910
[MUSIC PLAYING]

