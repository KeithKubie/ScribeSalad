WEBVTT
Kind: captions
Language: en

00:00:00.620 --> 00:00:04.070
Say I have a vector v that's
a member of Rn.

00:00:04.070 --> 00:00:06.260
So it's got n components
in it.

00:00:06.260 --> 00:00:10.850
So v1, v2, all the
way down to vn.

00:00:10.850 --> 00:00:13.990
I've touched on the idea before,
but now that we've

00:00:13.990 --> 00:00:17.090
seen what a transpose is, and
we've taken transposes of

00:00:17.090 --> 00:00:19.610
matrices, there's no reason
why we can't take the

00:00:19.610 --> 00:00:23.900
transpose of a vector, or a
column vector in this case.

00:00:23.900 --> 00:00:27.800
So what would v transpose
look like?

00:00:27.800 --> 00:00:32.659
Well if you think of this as a n
by 1 matrix, which it is, it

00:00:32.659 --> 00:00:35.200
has n rows and one column.

00:00:35.200 --> 00:00:35.990
Then what are we going to get?

00:00:35.990 --> 00:00:39.160
We're going to have a 1 by n
matrix when you take the

00:00:39.160 --> 00:00:40.060
transpose of it.

00:00:40.060 --> 00:00:43.125
And this one column is going
to turn into the one row.

00:00:43.125 --> 00:00:47.380
So you're going to have
it be equal to v1, v2,

00:00:47.380 --> 00:00:51.270
all the way to vn.

00:00:51.270 --> 00:00:53.830
And you might remember, we've
already touched on this in a

00:00:53.830 --> 00:00:56.630
lot of matrices before.

00:00:56.630 --> 00:00:58.980
Let's say that's
some matrix A.

00:00:58.980 --> 00:01:01.960
We called the row vectors of
those matrix, we called them

00:01:01.960 --> 00:01:07.500
the transpose of some column
vectors, a1 transpose, a2

00:01:07.500 --> 00:01:11.480
transpose, all the way
down to an transpose.

00:01:11.480 --> 00:01:14.820
In fact, not so many videos ago
I had those row vectors,

00:01:14.820 --> 00:01:17.510
and I could have just called
them the transpose of column

00:01:17.510 --> 00:01:18.660
vectors, just like that.

00:01:18.660 --> 00:01:21.430
And that would have been, in
some ways, a better way to do

00:01:21.430 --> 00:01:24.160
it because we've defined all
these operations around column

00:01:24.160 --> 00:01:27.760
vectors, so you could always
refer to the transpose of the

00:01:27.760 --> 00:01:30.140
transpose and then do some
operations on them.

00:01:30.140 --> 00:01:32.480
But anyway, I don't want
to get too diverted.

00:01:32.480 --> 00:01:35.030
But let's think a little bit
of what happens when you

00:01:35.030 --> 00:01:37.730
operate this vector, or you take
some operation of this

00:01:37.730 --> 00:01:39.230
vector with some
other vectors.

00:01:39.230 --> 00:01:42.940
So let's say I have another
vector here that's w, and it's

00:01:42.940 --> 00:01:45.080
also a member of Rn.

00:01:45.080 --> 00:01:50.760
So you have w1, w2, all
the way down to wn.

00:01:50.760 --> 00:01:53.340
There's a couple of things that
we're already, I think,

00:01:53.340 --> 00:01:55.140
reasonably familiar with.

00:01:55.140 --> 00:01:57.740
You could take the dot
product of v and w.

00:01:57.740 --> 00:02:00.710
v dot w is equal to what?

00:02:00.710 --> 00:02:10.759
It is equal to v1 times w1, plus
v2, w2, and you just keep

00:02:10.759 --> 00:02:13.760
going all the way to vn, wn.

00:02:13.760 --> 00:02:16.420
This is the definition
of the dot product

00:02:16.420 --> 00:02:18.540
of two-column vectors.

00:02:18.540 --> 00:02:23.470
Now, how can we relate that to
maybe the transpose of v?

00:02:23.470 --> 00:02:27.050
Well, we could take the
transpose of v-- let me write

00:02:27.050 --> 00:02:30.410
it this way-- what is-- if I did
a matrix multiplication,

00:02:30.410 --> 00:02:36.160
so I did v1, v2, all the way
to vn-- so this is v

00:02:36.160 --> 00:02:39.490
transpose, that's v transpose--
and I take the

00:02:39.490 --> 00:02:40.750
product of that with w.

00:02:44.010 --> 00:02:49.830
So I have w1, w2, all
the way down to wn.

00:02:49.830 --> 00:02:52.740
Now, if I view these as just
matrices-- this is w right

00:02:52.740 --> 00:02:56.220
here-- if I viewed these just
as matrices, is this

00:02:56.220 --> 00:02:59.730
matrix-matrix product
well-defined?

00:02:59.730 --> 00:03:04.640
Over here I have a
n by 1 matrix.

00:03:04.640 --> 00:03:07.250
Here I have a 1-- sorry.

00:03:07.250 --> 00:03:12.230
Here, the first one I have is
a 1 by n matrix-- I have one

00:03:12.230 --> 00:03:14.140
row and n columns.

00:03:14.140 --> 00:03:18.350
And here I have an
n by 1 matrix.

00:03:18.350 --> 00:03:20.930
I have n rows and
only one column.

00:03:20.930 --> 00:03:22.190
So this is well-defined.

00:03:22.190 --> 00:03:24.490
I have the same number
of columns here

00:03:24.490 --> 00:03:26.740
as I have rows here.

00:03:26.740 --> 00:03:29.050
This is going to result
in a 1 by 1 matrix.

00:03:29.050 --> 00:03:30.520
And what's it going
to look like?

00:03:30.520 --> 00:03:37.270
It's going to equal to v1 times
w1-- let me write it

00:03:37.270 --> 00:03:43.530
like this-- v1, w1 plus
v2, w2-- it's only

00:03:43.530 --> 00:03:44.250
going to have one entry.

00:03:44.250 --> 00:03:47.670
We could write it is as just
a 1 by 1 matrix like that.

00:03:47.670 --> 00:03:50.280
Let me just do it-- 1 by
1 matrix like that.

00:03:50.280 --> 00:03:56.270
v1, w1 plus v2, w2-- let me
just, I could write v2 there--

00:03:56.270 --> 00:04:00.260
plus all the way to vn, wn.

00:04:00.260 --> 00:04:00.820
That's what it'll be.

00:04:00.820 --> 00:04:03.370
It'll just be a 1 by 1 matrix
that looks like that.

00:04:03.370 --> 00:04:06.360
But you might notice that
these two things are

00:04:06.360 --> 00:04:07.420
equivalent.

00:04:07.420 --> 00:04:15.950
So we can make the statement
that v dot w, which is the

00:04:15.950 --> 00:04:21.980
same thing as w dot v, these
things are equivalent to-- v

00:04:21.980 --> 00:04:25.450
dot w is the equivalent of-- let
me just write it once over

00:04:25.450 --> 00:04:31.860
here-- v dot w is the same thing
as the transpose of v, v

00:04:31.860 --> 00:04:39.040
transpose times w as just
a matrix-matrix product.

00:04:39.040 --> 00:04:41.470
So if you view v as a matrix,
take its transpose and then

00:04:41.470 --> 00:04:44.150
just take that matrix and take
the product of that with w,

00:04:44.150 --> 00:04:46.440
it's the same thing
as v dot w.

00:04:46.440 --> 00:04:48.140
So that's an interesting
take-away.

00:04:48.140 --> 00:04:50.620
I guess you could argue somewhat
obvious, and we've

00:04:50.620 --> 00:04:54.420
already been referring this--
when I defined matrix-matrix

00:04:54.420 --> 00:04:56.850
products, I kind of said you're
taking the dot product

00:04:56.850 --> 00:04:59.960
of each row with each column,
and you can see that it really

00:04:59.960 --> 00:05:02.180
is, it's really the dot product
of the transpose of

00:05:02.180 --> 00:05:05.640
that row with each column, but
you got the general idea.

00:05:05.640 --> 00:05:08.390
But let's see if we can build
on this a little bit.

00:05:08.390 --> 00:05:14.380
Let's say I have some matrix
A-- let me save our little

00:05:14.380 --> 00:05:17.560
outcome that I have there--
let's say I have some-- let me

00:05:17.560 --> 00:05:20.820
get a good color here-- let's
say I have some matrix A and

00:05:20.820 --> 00:05:23.653
it's an m by n matrix.

00:05:26.170 --> 00:05:31.980
Now if I were to multiply that
times a vector x, so I'm going

00:05:31.980 --> 00:05:36.220
to multiply it by some vector
x-- and let's say that x is a

00:05:36.220 --> 00:05:43.575
member-- let me write it this
way-- x is a member of Rn.

00:05:43.575 --> 00:05:44.950
So it has n elements.

00:05:44.950 --> 00:05:49.670
Or another way you could view it
is, it's an n by 1 matrix.

00:05:49.670 --> 00:05:52.260
Now when I take the product of
these, what am I going to get?

00:05:52.260 --> 00:05:56.850
Or another way to say it is,
what is the vector Ax?

00:05:56.850 --> 00:05:58.520
When I take this product, I'm
just going to get another

00:05:58.520 --> 00:06:00.090
vector, and what's
it going to be?

00:06:00.090 --> 00:06:03.640
It's going to be an
m by 1 vector.

00:06:06.190 --> 00:06:11.400
So we could say that Ax
is a member of Rm.

00:06:11.400 --> 00:06:13.160
It's going to have m
elements, right?

00:06:13.160 --> 00:06:16.790
If this was equal to, if you
said that Ax equal to, I don't

00:06:16.790 --> 00:06:20.780
know, let's say it's equal to
z, z would have m elements.

00:06:20.780 --> 00:06:26.370
You would have z1, z2, all
the way down to zm.

00:06:26.370 --> 00:06:30.420
And I know that because you have
m rows in A, and you have

00:06:30.420 --> 00:06:33.870
only one-- well you could
say this is m by n,

00:06:33.870 --> 00:06:36.140
this is n by 1.

00:06:36.140 --> 00:06:39.680
The resulting product will be
m by 1, or it'll be a vector

00:06:39.680 --> 00:06:43.440
that is a member of Rm-- it'll
have exactly m elements.

00:06:43.440 --> 00:06:47.890
Now, if that's a vector of Rm,
then the idea of dotting this

00:06:47.890 --> 00:06:50.800
with another member of
Rm is well-defined.

00:06:50.800 --> 00:06:52.870
So let's say that I have
another member of Rm.

00:06:52.870 --> 00:06:55.370
Let's say I have a vector y.

00:06:55.370 --> 00:07:00.120
Let's say y is also
a member of Rm.

00:07:00.120 --> 00:07:03.800
This has-- the vector Ax, the
vector that you get when you

00:07:03.800 --> 00:07:07.130
take this product, has m
elements, this has m elements.

00:07:07.130 --> 00:07:10.480
So the idea of taking their dot
product is well-defined.

00:07:10.480 --> 00:07:11.270
Let me write that.

00:07:11.270 --> 00:07:18.870
So you could take Ax, that's a
vector, and now we are dotting

00:07:18.870 --> 00:07:22.290
it with this vector right here
and we'll get a number.

00:07:22.290 --> 00:07:25.420
We just take each of their
terms, multiply the

00:07:25.420 --> 00:07:27.210
corresponding terms, add
them all up, and you

00:07:27.210 --> 00:07:28.510
get their dot product.

00:07:28.510 --> 00:07:32.460
But what is this equal to?

00:07:32.460 --> 00:07:35.980
We can just use this little,
I guess you could call it a

00:07:35.980 --> 00:07:39.080
result, that we got earlier
on in this video.

00:07:39.080 --> 00:07:42.380
Using this result, the dot
product of two matrices-- or

00:07:42.380 --> 00:07:46.900
sorry, the dot product of two
vectors is equal to the

00:07:46.900 --> 00:07:50.650
transpose of the first vector
as a kind of a matrix.

00:07:50.650 --> 00:07:55.160
So you can view this
as Ax transpose.

00:07:55.160 --> 00:08:02.600
This is a m by 1,
this is m by 1.

00:08:02.600 --> 00:08:06.370
Now this is now a 1 by m
matrix, and now we can

00:08:06.370 --> 00:08:09.165
multiply 1 by m matrix
times y.

00:08:11.880 --> 00:08:13.290
Just like that.

00:08:13.290 --> 00:08:17.390
Now what is this
thing equal to?

00:08:17.390 --> 00:08:21.040
We saw a while ago, I think it
was two or three videos ago,

00:08:21.040 --> 00:08:25.100
we saw that if we take the
product of two matrices and

00:08:25.100 --> 00:08:28.400
take its transpose, that's equal
to the reverse product

00:08:28.400 --> 00:08:30.140
of the transposes.

00:08:30.140 --> 00:08:32.870
You switch the order and then
take the transposes.

00:08:32.870 --> 00:08:36.280
So this is going to be equal
to-- this purple part-- is

00:08:36.280 --> 00:08:43.090
going to be equal to
x transpose times A

00:08:43.090 --> 00:08:47.470
transpose times y.

00:08:47.470 --> 00:08:50.070
And this is just matrix
products.

00:08:50.070 --> 00:08:51.230
These are matrix products.

00:08:51.230 --> 00:08:52.990
These aren't necessarily
vector operations.

00:08:52.990 --> 00:08:55.265
We're treating all of these
vectors as matrices.

00:08:55.265 --> 00:08:57.890
And of course, we're treating
the matrix as a matrix.

00:08:57.890 --> 00:08:59.640
So what is this equal to?

00:08:59.640 --> 00:09:03.480
Well we know that matrix
products are associative.

00:09:03.480 --> 00:09:05.540
You could put a parentheses--
right now we have a

00:09:05.540 --> 00:09:09.370
parentheses around there from
there, but we could just take

00:09:09.370 --> 00:09:10.390
another association.

00:09:10.390 --> 00:09:18.060
We could say that that is equal
to x transpose times

00:09:18.060 --> 00:09:20.070
these two matrices
times each other.

00:09:20.070 --> 00:09:21.815
This is a vector, but
you can represent it

00:09:21.815 --> 00:09:23.980
as an m by 1 matrix.

00:09:23.980 --> 00:09:28.485
Times A transpose y.

00:09:31.180 --> 00:09:32.580
Just like that.

00:09:32.580 --> 00:09:35.440
Now let's think about what
A transpose y is.

00:09:35.440 --> 00:09:36.840
Let's think about it.

00:09:36.840 --> 00:09:41.930
A transpose-- we have
here a is m by n.

00:09:41.930 --> 00:09:43.870
What is A transpose?

00:09:43.870 --> 00:09:47.880
A transpose is going to
be n by m, right?

00:09:47.880 --> 00:09:49.020
It's going to be an m by n.

00:09:49.020 --> 00:09:51.760
So this is an m by n.

00:09:51.760 --> 00:09:55.230
And then what is this vector
y going to be?

00:09:55.230 --> 00:09:58.890
This is an m by 1.

00:09:58.890 --> 00:10:00.960
So when you take this product,
you're going to

00:10:00.960 --> 00:10:04.390
get an n by 1 matrix.

00:10:04.390 --> 00:10:09.040
Or you could imagine this as a
vector that is a member of Rn.

00:10:09.040 --> 00:10:12.280
So this is a member of Rn.

00:10:12.280 --> 00:10:15.050
The entire product is going to
result with a vector that's a

00:10:15.050 --> 00:10:16.740
member of Rn.

00:10:16.740 --> 00:10:18.810
And of course, it's well-defined
because this is a

00:10:18.810 --> 00:10:22.900
1 by n vector right there.

00:10:22.900 --> 00:10:24.540
Now we can go back
to our identity.

00:10:24.540 --> 00:10:28.100
We have the transpose of some
vector times some other

00:10:28.100 --> 00:10:31.010
vector-- they have the same,
well I guess you could say

00:10:31.010 --> 00:10:33.730
this has as many horizontal
entries as this guy has

00:10:33.730 --> 00:10:35.390
vertical entries,
just like that.

00:10:35.390 --> 00:10:36.330
So what is this equal to?

00:10:36.330 --> 00:10:37.830
We just use that identity.

00:10:37.830 --> 00:10:42.090
This is equal to, the just
regular x in this case,

00:10:42.090 --> 00:10:44.740
instead of x transpose
we'll just have x.

00:10:44.740 --> 00:10:52.350
So this is equal to x dot--
remember, we just un-transpose

00:10:52.350 --> 00:10:57.075
it, I guess you can view it that
way-- dot A transpose y.

00:11:01.090 --> 00:11:02.860
Which is a pretty
neat outcome.

00:11:02.860 --> 00:11:04.470
We got this being
equal to that.

00:11:04.470 --> 00:11:07.350
We can kind of change the
associativity, although we

00:11:07.350 --> 00:11:11.880
have to essentially change the
order a bit and take the

00:11:11.880 --> 00:11:13.630
transpose of our matrix.

00:11:13.630 --> 00:11:15.630
So let me re-write that
just so that you can

00:11:15.630 --> 00:11:16.670
remember the outcome.

00:11:16.670 --> 00:11:20.100
So the two big outcomes of this
video are-- I'll rewrite

00:11:20.100 --> 00:11:27.290
this one up here-- v dot w is
equal to the matrix product of

00:11:27.290 --> 00:11:30.050
v transpose times w.

00:11:30.050 --> 00:11:34.540
And if I have some matrix--
you assume all of these

00:11:34.540 --> 00:11:36.920
matrix-vector products are
well-defined and all the dot

00:11:36.920 --> 00:11:38.340
products are well-defined.

00:11:38.340 --> 00:11:48.000
If I have Ax dot y, some other
vector y, this is equivalent

00:11:48.000 --> 00:11:53.680
to x dot-- you're essentially
putting the A with the other

00:11:53.680 --> 00:11:57.650
vector-- A transpose times y.

00:11:57.650 --> 00:12:00.620
And this just might be a useful
outcome, or a useful

00:12:00.620 --> 00:12:04.260
result, that we could build
upon later in the linear

00:12:04.260 --> 00:12:06.190
algebra playlist.

