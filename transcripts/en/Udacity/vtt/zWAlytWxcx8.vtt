WEBVTT
Kind: captions
Language: en

00:00:00.510 --> 00:00:01.540
Network problems and

00:00:01.540 --> 00:00:04.730
other failures are something that
we've just got to live with.

00:00:04.730 --> 00:00:07.170
What's more,
when we design applications,

00:00:07.170 --> 00:00:09.820
we have to take into account
that failures can happen.

00:00:09.820 --> 00:00:11.630
And that's important at
all different levels,

00:00:11.630 --> 00:00:13.900
at the application level as
well as at the network level.

00:00:15.070 --> 00:00:17.790
Here's a story from a system i used
to work on several years before

00:00:17.790 --> 00:00:19.180
coming to Udacity.

00:00:19.180 --> 00:00:22.520
I'm going to leave off the names and
numbers to protect the not so innocent.

00:00:22.520 --> 00:00:25.820
My team system was the back-end
data service that a number of other

00:00:25.820 --> 00:00:26.690
services depended on.

00:00:26.690 --> 00:00:28.830
It was also really busy.

00:00:28.830 --> 00:00:31.160
It got thousands of
requests every second.

00:00:31.160 --> 00:00:34.030
And almost all of them
it handled just fine.

00:00:34.030 --> 00:00:38.020
But when it got overloaded,
our system would fail some requests

00:00:38.020 --> 00:00:40.060
That sometimes the best
thing a system can do.

00:00:40.060 --> 00:00:42.100
To shed load and
make sure it can stay up at all.

00:00:43.120 --> 00:00:47.010
Unfortunately, one of the services that
used ours responded to failures by

00:00:47.010 --> 00:00:50.230
retrying each request up to three times.

00:00:50.230 --> 00:00:52.440
So when things started
to get overloaded, and

00:00:52.440 --> 00:00:56.540
our system dropped a few requests, that
other server started sending more and

00:00:56.540 --> 00:01:00.960
more requests, making the overload
problem very much worse, very quickly.

00:01:00.960 --> 00:01:03.850
Fortunately it didn't take us very
long to track down the owners

00:01:03.850 --> 00:01:06.750
of other service and politely inform
them that they would be stopping

00:01:06.750 --> 00:01:09.620
this little retard behavior now please.

00:01:09.620 --> 00:01:12.350
In the next lesson you'll
see a bit about how TCP

00:01:12.350 --> 00:01:14.930
handles heavy network load
without falling over.

00:01:14.930 --> 00:01:18.360
But don't forget the network can't
save you from buggy applications.

00:01:18.360 --> 00:01:19.950
Design your error handling with care.

