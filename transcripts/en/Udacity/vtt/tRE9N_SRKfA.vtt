WEBVTT
Kind: captions
Language: en

00:00:00.120 --> 00:00:04.340
So now that we have a prototype, we're
moving to the validation stage, right?

00:00:04.340 --> 00:00:05.400
&gt;&gt; That's right.

00:00:05.400 --> 00:00:10.380
The validation stage answers
the hardest question in product design.

00:00:10.380 --> 00:00:13.280
The hardest question
in product design is

00:00:13.280 --> 00:00:15.640
how do you know if
your work is any good?

00:00:15.640 --> 00:00:17.075
&gt;&gt; Okay, that's an important question.

00:00:17.075 --> 00:00:19.470
&gt;&gt; [LAUGH] It's very important.

00:00:19.470 --> 00:00:22.850
How we answer this question
has three different stages.

00:00:22.850 --> 00:00:29.110
At Google we use something that
we call triple validation.

00:00:29.110 --> 00:00:32.320
Just like in the beginning we looked
at a problem from the perspective of

00:00:32.320 --> 00:00:35.390
business, technology,
and users, at the end

00:00:35.390 --> 00:00:39.270
we want to validate the solution
from the same three touch points.

00:00:39.270 --> 00:00:43.260
The most important opinion, and
the most important votes and

00:00:43.260 --> 00:00:45.480
validation, is that of the users.

00:00:45.480 --> 00:00:48.880
So the critical piece not to
miss is the opportunity to

00:00:48.880 --> 00:00:50.830
test your prototype with your users.

00:00:52.110 --> 00:00:56.190
We recommend sprinters and the sprint
lead recruit users from the very

00:00:56.190 --> 00:01:00.310
beginning of the sprint, so they know
that, at the end, the users are coming.

00:01:00.310 --> 00:01:01.480
&gt;&gt; Right.

00:01:01.480 --> 00:01:03.390
&gt;&gt; And they have to prepare for it, and

00:01:03.390 --> 00:01:07.720
else, all the efforts that they have
spent in prototyping could go to waste

00:01:07.720 --> 00:01:12.030
because they don't actually know if this
is solving the needs the users have.

00:01:12.030 --> 00:01:16.120
So meeting the users at the beginning
is useful to learn their needs, and

00:01:16.120 --> 00:01:19.490
meeting them at the end is
crucial in order to test.

00:01:19.490 --> 00:01:23.780
This type of test is called usability
test or Cognitive Walkthrough.

00:01:23.780 --> 00:01:28.490
It allows you to put the products or
the early prototype in

00:01:28.490 --> 00:01:33.650
the hands of a user and watch them
walkthrough all the different stages.

00:01:33.650 --> 00:01:34.890
What do they like?

00:01:34.890 --> 00:01:36.410
Where do they get stuck?

00:01:36.410 --> 00:01:40.390
Do they understand
what the idea is about?

00:01:40.390 --> 00:01:42.880
And it's important that they have and
they expressed earlier on.

00:01:44.520 --> 00:01:47.290
&gt;&gt; Do I need to explain to
the user what he needs to do?

00:01:48.690 --> 00:01:52.230
&gt;&gt; What we like to do in this stage
is kind of like it's based on one of

00:01:52.230 --> 00:01:55.875
the ideas of writing, show, don't tell.

00:01:55.875 --> 00:02:00.075
A great design prototype should
be able to stand on its own

00:02:00.075 --> 00:02:02.045
without too much explaining.

00:02:02.045 --> 00:02:05.845
Generally we'd like to set up the user
and say, imagine you're shopping for

00:02:05.845 --> 00:02:09.074
a new product, or imagine you're
looking to write the review, and

00:02:09.074 --> 00:02:12.333
now tell me what you see, and
now tell me what you're doing from here.

00:02:12.333 --> 00:02:17.150
So we ask the users questions, and
ask them to imagine themselves

00:02:17.150 --> 00:02:21.340
solving a specific scenario,
and we watch what they do.

00:02:21.340 --> 00:02:23.690
We ask them questions to clarify, but

00:02:23.690 --> 00:02:26.630
we're not trying to sell
the product to them.

00:02:26.630 --> 00:02:29.100
One of the mistakes that
people make in this stage

00:02:29.100 --> 00:02:31.880
is that they imagine this
is a marketing pitch and

00:02:31.880 --> 00:02:35.508
they start explaining how awesome the
product is, or why they love the idea.

00:02:35.508 --> 00:02:41.810
This is a useful approach if you're
trying to recruit that specific person

00:02:41.810 --> 00:02:46.400
to buy your product and they might,
just because they're trying to be nice.

00:02:46.400 --> 00:02:49.760
But this approach does not
answer the critical question,

00:02:49.760 --> 00:02:51.420
is the product any good?

00:02:51.420 --> 00:02:54.700
Like you force someone in person to
buy something is very different from

00:02:54.700 --> 00:02:57.910
creating something that's popular,
and that works on its own.

00:02:57.910 --> 00:02:58.640
&gt;&gt; That people love.

00:02:58.640 --> 00:03:00.249
&gt;&gt; That's right [LAUGH].

00:03:00.249 --> 00:03:05.370
&gt;&gt; And are users the only people I
want to get in front of this prototype?

00:03:05.370 --> 00:03:08.760
&gt;&gt; Well, the user validation is
one of three points in the rapid

00:03:08.760 --> 00:03:10.340
evaluation process.

00:03:10.340 --> 00:03:13.640
The other two points involve
the business and the technology.

00:03:13.640 --> 00:03:16.880
It's really useful to test with
the stakeholders of the team.

00:03:16.880 --> 00:03:19.410
Is it still meeting the business goals?

00:03:19.410 --> 00:03:23.790
Is it still answering the promises
that you made to investors, or

00:03:23.790 --> 00:03:25.510
the goals that you have as a company?

00:03:25.510 --> 00:03:29.940
And if yes, fantastic, and if no,
we need to go back to the drawing board.

00:03:29.940 --> 00:03:32.870
More often than not, teams are aligned
with the business goals and

00:03:32.870 --> 00:03:34.900
the stakeholders are happy
with the results.

00:03:34.900 --> 00:03:38.140
But if you skip the validation,
they might not approve the design or

00:03:38.140 --> 00:03:39.310
block it at a later stage.

00:03:39.310 --> 00:03:43.320
So, having your quick check-in with the
stakeholders, even if they didn't attend

00:03:43.320 --> 00:03:45.530
the entire sprint,
can be very useful at this stage.

00:03:46.950 --> 00:03:48.020
&gt;&gt; Very cool.

00:03:48.020 --> 00:03:51.470
&gt;&gt; Another piece that's important
here is doing a technical check.

00:03:51.470 --> 00:03:55.040
A design solution that's beautiful but
no one can implement, it's only so

00:03:55.040 --> 00:03:55.910
valuable.

00:03:55.910 --> 00:04:00.550
So what we want to do is encourage teams
to check in with a technical staff.

00:04:00.550 --> 00:04:04.340
Is this still going the right
direction in terms of feasibility?

00:04:04.340 --> 00:04:07.490
And if this seems challenging,
let's clarify it.

00:04:07.490 --> 00:04:10.430
What are the pieces here that seems like
they're going to take the longest and

00:04:10.430 --> 00:04:14.170
how might we be able to point is
designing a way that's not creating

00:04:14.170 --> 00:04:17.570
hurdles, and it's something that
we can test and deliver quickly?

00:04:17.570 --> 00:04:20.540
&gt;&gt; Okay, so what I'm hearing is
we need to do three validations,

00:04:20.540 --> 00:04:24.260
validate with users,
validate with business stakeholders, and

00:04:24.260 --> 00:04:26.240
validate with technology people.

00:04:26.240 --> 00:04:29.320
&gt;&gt; Yeah,
these validations can be rather quick.

00:04:29.320 --> 00:04:33.670
A user test can be 20 to 30 minutes and
you can test with three or

00:04:33.670 --> 00:04:36.090
four or five different people.

00:04:36.090 --> 00:04:40.410
For most teams, you can even test with
one person, it's already a success.

00:04:40.410 --> 00:04:44.150
The business validation can be
a five to ten minute discussion, or

00:04:44.150 --> 00:04:46.190
longer if the issue is very problematic.

00:04:47.200 --> 00:04:51.600
Or the technical validation can be
similarly short, five to ten minutes.

00:04:51.600 --> 00:04:53.260
We're doing this as a best practice.

00:04:54.350 --> 00:04:58.620
Sort of like covering a checklist to
make sure that all the possible ways in

00:04:58.620 --> 00:05:02.140
which something can fail to deliver
after this point are addressed.

00:05:02.140 --> 00:05:04.390
And there are also people
vouching to the solution,

00:05:04.390 --> 00:05:06.170
which makes it easier
to deliver afterwards.

00:05:06.170 --> 00:05:09.260
&gt;&gt; So what could go wrong in this stage?

00:05:09.260 --> 00:05:10.740
&gt;&gt; That's a great question.

00:05:10.740 --> 00:05:13.530
What could go wrong is that teams can

00:05:13.530 --> 00:05:17.320
be overly confident in their own
solution and skip the user testing.

00:05:17.320 --> 00:05:21.670
That is a common pattern that we see
with teams that are new to sprinting.

00:05:21.670 --> 00:05:24.450
They think, well,
we can do the user testing later.

00:05:26.110 --> 00:05:29.710
It is true that the user test can be
done separately from this print, but

00:05:29.710 --> 00:05:30.900
that is a miss.

00:05:30.900 --> 00:05:35.000
While the team is together and
they're fresh in the space

00:05:35.000 --> 00:05:39.660
of all the prototyping, it is really
valuable to right away get feedback.

00:05:39.660 --> 00:05:42.850
If you do the user test with
your whole team present and

00:05:42.850 --> 00:05:47.380
right after the creation session, this
gives the need to write any research

00:05:47.380 --> 00:05:50.570
documents and it keeps all
the ideas fresh in their minds.

00:05:50.570 --> 00:05:53.400
That makes it that much more
likely that the products and

00:05:53.400 --> 00:05:56.160
the problems will get
addressed in the next phase.

00:05:56.160 --> 00:05:59.395
&gt;&gt; And what happens if they don't like
the solution, if the users hate it?

00:05:59.395 --> 00:06:00.680
&gt;&gt; [LAUGH] Well,

00:06:00.680 --> 00:06:03.720
if the users hate solution it's
a great opportunity to learn.

00:06:03.720 --> 00:06:06.600
We try to be humble with our designs.

00:06:06.600 --> 00:06:10.020
After all, we only spend two
to five days working on them.

00:06:10.020 --> 00:06:12.870
We hope that the life of the company
will be much longer than that, so

00:06:12.870 --> 00:06:16.060
those two to five days were
valuable if you learn something.

00:06:16.060 --> 00:06:18.120
So if the users don't like something,

00:06:18.120 --> 00:06:21.730
it's a great time to
seek to understand again.

00:06:21.730 --> 00:06:25.910
So we go back to the first way of
thinking, which was let's understand.

00:06:25.910 --> 00:06:27.940
What is it that they don't like,

00:06:27.940 --> 00:06:30.700
is there something that
could be solved better?

00:06:30.700 --> 00:06:32.140
Asking questions and

00:06:32.140 --> 00:06:37.070
probing deeper into the things that
users don't like is great opportunity.

00:06:37.070 --> 00:06:40.250
The best time to learn if
the users don't like something

00:06:40.250 --> 00:06:43.590
is right after you have created
the prototype, into the five days.

00:06:43.590 --> 00:06:47.750
And not after you spend two years of
your life telling everyone you love and

00:06:47.750 --> 00:06:50.330
maxing out your credit card
[LAUGH] this is a great idea.

00:06:50.330 --> 00:06:52.070
&gt;&gt; So in this stage,

00:06:52.070 --> 00:06:57.360
we take the users, we let them play with
the prototype, and we listen to them.

00:06:57.360 --> 00:06:57.860
&gt;&gt; That's right.

