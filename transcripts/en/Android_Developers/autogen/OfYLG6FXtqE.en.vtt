WEBVTT
Kind: captions
Language: en

00:00:07.490 --> 00:00:10.070 align:start position:0%
 
hi<00:00:08.490><c> my</c><00:00:08.820><c> name</c><00:00:08.940><c> is</c><00:00:08.970><c> Rotem</c><00:00:09.179><c> aya</c><00:00:09.420><c> I'm</c><00:00:09.660><c> the</c><00:00:09.900><c> tech</c>

00:00:10.070 --> 00:00:10.080 align:start position:0%
hi my name is Rotem aya I'm the tech
 

00:00:10.080 --> 00:00:11.600 align:start position:0%
hi my name is Rotem aya I'm the tech
lead<00:00:10.110><c> for</c><00:00:10.290><c> Google's</c><00:00:10.769><c> Android</c><00:00:10.920><c> developer</c>

00:00:11.600 --> 00:00:11.610 align:start position:0%
lead for Google's Android developer
 

00:00:11.610 --> 00:00:13.850 align:start position:0%
lead for Google's Android developer
relations<00:00:11.639><c> team</c><00:00:12.090><c> in</c><00:00:13.080><c> order</c><00:00:13.170><c> to</c><00:00:13.290><c> minimize</c><00:00:13.710><c> the</c>

00:00:13.850 --> 00:00:13.860 align:start position:0%
relations team in order to minimize the
 

00:00:13.860 --> 00:00:15.230 align:start position:0%
relations team in order to minimize the
battery<00:00:14.160><c> drain</c><00:00:14.340><c> associated</c><00:00:14.969><c> with</c><00:00:15.059><c> data</c>

00:00:15.230 --> 00:00:15.240 align:start position:0%
battery drain associated with data
 

00:00:15.240 --> 00:00:16.910 align:start position:0%
battery drain associated with data
transfers<00:00:15.719><c> it's</c><00:00:15.929><c> good</c><00:00:16.080><c> practice</c><00:00:16.289><c> to</c><00:00:16.529><c> use</c><00:00:16.650><c> the</c>

00:00:16.910 --> 00:00:16.920 align:start position:0%
transfers it's good practice to use the
 

00:00:16.920 --> 00:00:19.010 align:start position:0%
transfers it's good practice to use the
big<00:00:17.550><c> cookie</c><00:00:17.880><c> model</c><00:00:18.150><c> to</c><00:00:18.300><c> batch</c><00:00:18.480><c> and</c><00:00:18.720><c> bundle</c>

00:00:19.010 --> 00:00:19.020 align:start position:0%
big cookie model to batch and bundle
 

00:00:19.020 --> 00:00:20.599 align:start position:0%
big cookie model to batch and bundle
transfers<00:00:19.470><c> using</c><00:00:19.830><c> sync</c><00:00:20.070><c> adapters</c><00:00:20.460><c> and</c>

00:00:20.599 --> 00:00:20.609 align:start position:0%
transfers using sync adapters and
 

00:00:20.609 --> 00:00:22.340 align:start position:0%
transfers using sync adapters and
eliminate<00:00:21.119><c> unnecessary</c><00:00:21.330><c> polling</c><00:00:22.199><c> with</c>

00:00:22.340 --> 00:00:22.350 align:start position:0%
eliminate unnecessary polling with
 

00:00:22.350 --> 00:00:24.769 align:start position:0%
eliminate unnecessary polling with
Google<00:00:22.650><c> Cloud</c><00:00:22.830><c> messaging</c><00:00:23.420><c> having</c><00:00:24.420><c> moved</c><00:00:24.570><c> all</c>

00:00:24.769 --> 00:00:24.779 align:start position:0%
Google Cloud messaging having moved all
 

00:00:24.779 --> 00:00:26.630 align:start position:0%
Google Cloud messaging having moved all
of<00:00:24.810><c> your</c><00:00:24.990><c> transfers</c><00:00:25.439><c> into</c><00:00:25.650><c> as</c><00:00:25.859><c> few</c><00:00:26.130><c> batches</c><00:00:26.310><c> as</c>

00:00:26.630 --> 00:00:26.640 align:start position:0%
of your transfers into as few batches as
 

00:00:26.640 --> 00:00:28.279 align:start position:0%
of your transfers into as few batches as
possible<00:00:27.060><c> this</c><00:00:27.300><c> devbyte</c><00:00:27.570><c> will</c><00:00:27.900><c> look</c><00:00:28.019><c> at</c><00:00:28.140><c> ways</c>

00:00:28.279 --> 00:00:28.289 align:start position:0%
possible this devbyte will look at ways
 

00:00:28.289 --> 00:00:30.380 align:start position:0%
possible this devbyte will look at ways
to<00:00:28.529><c> reduce</c><00:00:28.710><c> the</c><00:00:29.189><c> overall</c><00:00:29.550><c> size</c><00:00:29.939><c> of</c><00:00:30.090><c> the</c><00:00:30.210><c> cookie</c>

00:00:30.380 --> 00:00:30.390 align:start position:0%
to reduce the overall size of the cookie
 

00:00:30.390 --> 00:00:32.510 align:start position:0%
to reduce the overall size of the cookie
that<00:00:31.080><c> is</c><00:00:31.260><c> to</c><00:00:31.439><c> transfer</c><00:00:31.830><c> as</c><00:00:31.949><c> little</c><00:00:32.189><c> data</c><00:00:32.369><c> as</c>

00:00:32.510 --> 00:00:32.520 align:start position:0%
that is to transfer as little data as
 

00:00:32.520 --> 00:00:34.310 align:start position:0%
that is to transfer as little data as
possible<00:00:32.969><c> and</c><00:00:33.120><c> drain</c><00:00:33.390><c> as</c><00:00:33.600><c> little</c><00:00:33.870><c> battery</c><00:00:34.170><c> as</c>

00:00:34.310 --> 00:00:34.320 align:start position:0%
possible and drain as little battery as
 

00:00:34.320 --> 00:00:36.170 align:start position:0%
possible and drain as little battery as
possible<00:00:34.710><c> each</c><00:00:34.890><c> time</c><00:00:35.219><c> we</c><00:00:35.489><c> do</c><00:00:35.670><c> have</c><00:00:35.940><c> to</c><00:00:36.059><c> do</c><00:00:36.149><c> a</c>

00:00:36.170 --> 00:00:36.180 align:start position:0%
possible each time we do have to do a
 

00:00:36.180 --> 00:00:38.660 align:start position:0%
possible each time we do have to do a
transfer<00:00:36.570><c> the</c><00:00:37.500><c> most</c><00:00:37.710><c> fundamental</c><00:00:37.920><c> way</c><00:00:38.610><c> to</c>

00:00:38.660 --> 00:00:38.670 align:start position:0%
transfer the most fundamental way to
 

00:00:38.670 --> 00:00:40.490 align:start position:0%
transfer the most fundamental way to
reduce<00:00:39.090><c> your</c><00:00:39.149><c> downloads</c><00:00:39.719><c> is</c><00:00:39.989><c> to</c><00:00:40.320><c> download</c>

00:00:40.490 --> 00:00:40.500 align:start position:0%
reduce your downloads is to download
 

00:00:40.500 --> 00:00:43.369 align:start position:0%
reduce your downloads is to download
only<00:00:41.070><c> what</c><00:00:41.219><c> you</c><00:00:41.340><c> need</c><00:00:41.660><c> start</c><00:00:42.660><c> by</c><00:00:42.809><c> using</c><00:00:43.050><c> REST</c>

00:00:43.369 --> 00:00:43.379 align:start position:0%
only what you need start by using REST
 

00:00:43.379 --> 00:00:45.260 align:start position:0%
only what you need start by using REST
API<00:00:43.500><c> is</c><00:00:43.829><c> that</c><00:00:44.070><c> lets</c><00:00:44.219><c> you</c><00:00:44.340><c> perform</c><00:00:44.550><c> filtering</c>

00:00:45.260 --> 00:00:45.270 align:start position:0%
API is that lets you perform filtering
 

00:00:45.270 --> 00:00:46.850 align:start position:0%
API is that lets you perform filtering
on<00:00:45.390><c> the</c><00:00:45.629><c> server</c><00:00:45.899><c> using</c><00:00:46.350><c> parameters</c><00:00:46.770><c> that</c>

00:00:46.850 --> 00:00:46.860 align:start position:0%
on the server using parameters that
 

00:00:46.860 --> 00:00:48.799 align:start position:0%
on the server using parameters that
allow<00:00:47.100><c> you</c><00:00:47.160><c> to</c><00:00:47.399><c> indicate</c><00:00:48.000><c> when</c><00:00:48.510><c> you</c><00:00:48.629><c> last</c>

00:00:48.799 --> 00:00:48.809 align:start position:0%
allow you to indicate when you last
 

00:00:48.809 --> 00:00:50.779 align:start position:0%
allow you to indicate when you last
update<00:00:49.200><c> occurred</c><00:00:49.500><c> or</c><00:00:49.710><c> what</c><00:00:50.160><c> the</c><00:00:50.280><c> last</c><00:00:50.399><c> items</c>

00:00:50.779 --> 00:00:50.789 align:start position:0%
update occurred or what the last items
 

00:00:50.789 --> 00:00:53.270 align:start position:0%
update occurred or what the last items
you<00:00:50.879><c> received</c><00:00:51.300><c> were</c><00:00:51.620><c> this</c><00:00:52.620><c> ensures</c><00:00:52.949><c> that</c><00:00:52.949><c> you</c>

00:00:53.270 --> 00:00:53.280 align:start position:0%
you received were this ensures that you
 

00:00:53.280 --> 00:00:54.950 align:start position:0%
you received were this ensures that you
only<00:00:53.520><c> end</c><00:00:53.820><c> up</c><00:00:53.969><c> downloading</c><00:00:54.180><c> new</c><00:00:54.660><c> stuff</c>

00:00:54.950 --> 00:00:54.960 align:start position:0%
only end up downloading new stuff
 

00:00:54.960 --> 00:00:57.139 align:start position:0%
only end up downloading new stuff
similarly<00:00:55.860><c> it's</c><00:00:56.039><c> good</c><00:00:56.280><c> practice</c><00:00:56.520><c> to</c><00:00:56.760><c> reduce</c>

00:00:57.139 --> 00:00:57.149 align:start position:0%
similarly it's good practice to reduce
 

00:00:57.149 --> 00:00:58.970 align:start position:0%
similarly it's good practice to reduce
bandwidth<00:00:57.570><c> by</c><00:00:57.750><c> performing</c><00:00:58.079><c> any</c><00:00:58.410><c> operations</c>

00:00:58.970 --> 00:00:58.980 align:start position:0%
bandwidth by performing any operations
 

00:00:58.980 --> 00:01:00.349 align:start position:0%
bandwidth by performing any operations
likely<00:00:59.370><c> to</c><00:00:59.489><c> shrink</c><00:00:59.760><c> the</c><00:00:59.879><c> size</c><00:01:00.149><c> of</c><00:01:00.329><c> your</c>

00:01:00.349 --> 00:01:00.359 align:start position:0%
likely to shrink the size of your
 

00:01:00.359 --> 00:01:02.990 align:start position:0%
likely to shrink the size of your
payload<00:01:00.809><c> on</c><00:01:00.960><c> the</c><00:01:01.500><c> server</c><00:01:01.820><c> techniques</c><00:01:02.820><c> like</c>

00:01:02.990 --> 00:01:03.000 align:start position:0%
payload on the server techniques like
 

00:01:03.000 --> 00:01:04.880 align:start position:0%
payload on the server techniques like
gzip<00:01:03.420><c> compression</c><00:01:03.600><c> are</c><00:01:04.110><c> one</c><00:01:04.320><c> solution</c><00:01:04.619><c> as</c>

00:01:04.880 --> 00:01:04.890 align:start position:0%
gzip compression are one solution as
 

00:01:04.890 --> 00:01:06.560 align:start position:0%
gzip compression are one solution as
this<00:01:05.159><c> server-side</c><00:01:05.580><c> reduction</c><00:01:06.210><c> of</c><00:01:06.299><c> image</c>

00:01:06.560 --> 00:01:06.570 align:start position:0%
this server-side reduction of image
 

00:01:06.570 --> 00:01:09.170 align:start position:0%
this server-side reduction of image
sizes<00:01:07.020><c> why</c><00:01:07.650><c> download</c><00:01:08.010><c> a</c><00:01:08.040><c> wallpaper</c><00:01:08.490><c> own</c><00:01:08.850><c> to</c>

00:01:09.170 --> 00:01:09.180 align:start position:0%
sizes why download a wallpaper own to
 

00:01:09.180 --> 00:01:11.929 align:start position:0%
sizes why download a wallpaper own to
shrink<00:01:09.420><c> it</c><00:01:09.510><c> into</c><00:01:09.869><c> a</c><00:01:09.930><c> thumbnail</c><00:01:10.729><c> it's</c><00:01:11.729><c> also</c>

00:01:11.929 --> 00:01:11.939 align:start position:0%
shrink it into a thumbnail it's also
 

00:01:11.939 --> 00:01:13.670 align:start position:0%
shrink it into a thumbnail it's also
generally<00:01:12.510><c> more</c><00:01:12.689><c> efficient</c><00:01:13.080><c> to</c><00:01:13.200><c> maximize</c>

00:01:13.670 --> 00:01:13.680 align:start position:0%
generally more efficient to maximize
 

00:01:13.680 --> 00:01:15.499 align:start position:0%
generally more efficient to maximize
your<00:01:13.830><c> utilization</c><00:01:14.220><c> of</c><00:01:14.670><c> network</c><00:01:15.030><c> connections</c>

00:01:15.499 --> 00:01:15.509 align:start position:0%
your utilization of network connections
 

00:01:15.509 --> 00:01:16.760 align:start position:0%
your utilization of network connections
so<00:01:15.689><c> rather</c><00:01:15.930><c> than</c><00:01:16.170><c> creating</c><00:01:16.439><c> multiple</c>

00:01:16.760 --> 00:01:16.770 align:start position:0%
so rather than creating multiple
 

00:01:16.770 --> 00:01:18.440 align:start position:0%
so rather than creating multiple
simultaneous<00:01:17.159><c> connections</c><00:01:17.729><c> to</c><00:01:18.150><c> download</c>

00:01:18.440 --> 00:01:18.450 align:start position:0%
simultaneous connections to download
 

00:01:18.450 --> 00:01:20.210 align:start position:0%
simultaneous connections to download
data<00:01:18.659><c> or</c><00:01:19.140><c> chaining</c><00:01:19.560><c> multiple</c><00:01:19.920><c> consecutive</c>

00:01:20.210 --> 00:01:20.220 align:start position:0%
data or chaining multiple consecutive
 

00:01:20.220 --> 00:01:21.980 align:start position:0%
data or chaining multiple consecutive
get<00:01:20.610><c> requests</c><00:01:21.150><c> where</c><00:01:21.390><c> possible</c><00:01:21.840><c> you</c><00:01:21.960><c> should</c>

00:01:21.980 --> 00:01:21.990 align:start position:0%
get requests where possible you should
 

00:01:21.990 --> 00:01:24.109 align:start position:0%
get requests where possible you should
bundle<00:01:22.380><c> these</c><00:01:22.680><c> requests</c><00:01:23.220><c> into</c><00:01:23.369><c> a</c><00:01:23.490><c> single</c><00:01:23.909><c> gate</c>

00:01:24.109 --> 00:01:24.119 align:start position:0%
bundle these requests into a single gate
 

00:01:24.119 --> 00:01:26.390 align:start position:0%
bundle these requests into a single gate
when<00:01:24.930><c> it</c><00:01:25.020><c> comes</c><00:01:25.200><c> to</c><00:01:25.350><c> cell</c><00:01:25.560><c> radio</c><00:01:25.860><c> transfers</c><00:01:26.369><c> a</c>

00:01:26.390 --> 00:01:26.400 align:start position:0%
when it comes to cell radio transfers a
 

00:01:26.400 --> 00:01:28.399 align:start position:0%
when it comes to cell radio transfers a
bazooka<00:01:26.970><c> is</c><00:01:27.119><c> more</c><00:01:27.390><c> efficient</c><00:01:27.780><c> than</c><00:01:27.840><c> a</c><00:01:27.990><c> shotgun</c>

00:01:28.399 --> 00:01:28.409 align:start position:0%
bazooka is more efficient than a shotgun
 

00:01:28.409 --> 00:01:30.890 align:start position:0%
bazooka is more efficient than a shotgun
it's<00:01:29.400><c> also</c><00:01:29.670><c> best</c><00:01:29.970><c> practice</c><00:01:30.360><c> to</c><00:01:30.390><c> reuse</c>

00:01:30.890 --> 00:01:30.900 align:start position:0%
it's also best practice to reuse
 

00:01:30.900 --> 00:01:32.690 align:start position:0%
it's also best practice to reuse
existing<00:01:31.049><c> network</c><00:01:31.770><c> connections</c><00:01:32.280><c> rather</c><00:01:32.520><c> than</c>

00:01:32.690 --> 00:01:32.700 align:start position:0%
existing network connections rather than
 

00:01:32.700 --> 00:01:34.730 align:start position:0%
existing network connections rather than
initiating<00:01:33.240><c> new</c><00:01:33.390><c> ones</c><00:01:33.600><c> reusing</c><00:01:34.290><c> connections</c>

00:01:34.730 --> 00:01:34.740 align:start position:0%
initiating new ones reusing connections
 

00:01:34.740 --> 00:01:36.230 align:start position:0%
initiating new ones reusing connections
also<00:01:35.159><c> allows</c><00:01:35.400><c> the</c><00:01:35.549><c> network</c><00:01:35.850><c> to</c><00:01:36.030><c> more</c>

00:01:36.230 --> 00:01:36.240 align:start position:0%
also allows the network to more
 

00:01:36.240 --> 00:01:38.090 align:start position:0%
also allows the network to more
intelligently<00:01:36.930><c> react</c><00:01:37.320><c> to</c><00:01:37.470><c> congestion</c><00:01:37.829><c> and</c>

00:01:38.090 --> 00:01:38.100 align:start position:0%
intelligently react to congestion and
 

00:01:38.100 --> 00:01:40.760 align:start position:0%
intelligently react to congestion and
related<00:01:38.640><c> network</c><00:01:38.970><c> data</c><00:01:39.210><c> issues</c><00:01:39.770><c> wireless</c>

00:01:40.760 --> 00:01:40.770 align:start position:0%
related network data issues wireless
 

00:01:40.770 --> 00:01:42.469 align:start position:0%
related network data issues wireless
radios<00:01:41.130><c> need</c><00:01:41.340><c> to</c><00:01:41.460><c> be</c><00:01:41.549><c> active</c><00:01:41.939><c> to</c><00:01:42.060><c> transmit</c>

00:01:42.469 --> 00:01:42.479 align:start position:0%
radios need to be active to transmit
 

00:01:42.479 --> 00:01:43.819 align:start position:0%
radios need to be active to transmit
determination<00:01:43.140><c> and</c><00:01:43.290><c> termination</c>

00:01:43.819 --> 00:01:43.829 align:start position:0%
determination and termination
 

00:01:43.829 --> 00:01:45.440 align:start position:0%
determination and termination
acknowledgement<00:01:44.399><c> packets</c><00:01:44.759><c> associated</c><00:01:45.329><c> with</c>

00:01:45.440 --> 00:01:45.450 align:start position:0%
acknowledgement packets associated with
 

00:01:45.450 --> 00:01:47.510 align:start position:0%
acknowledgement packets associated with
server<00:01:45.659><c> and</c><00:01:45.869><c> client</c><00:01:46.200><c> timeouts</c><00:01:46.649><c> so</c><00:01:47.280><c> it's</c><00:01:47.399><c> also</c>

00:01:47.510 --> 00:01:47.520 align:start position:0%
server and client timeouts so it's also
 

00:01:47.520 --> 00:01:49.310 align:start position:0%
server and client timeouts so it's also
good<00:01:47.790><c> practice</c><00:01:47.820><c> to</c><00:01:48.180><c> closer</c><00:01:48.509><c> connections</c><00:01:49.079><c> when</c>

00:01:49.310 --> 00:01:49.320 align:start position:0%
good practice to closer connections when
 

00:01:49.320 --> 00:01:51.080 align:start position:0%
good practice to closer connections when
they<00:01:49.439><c> aren't</c><00:01:49.619><c> in</c><00:01:49.799><c> use</c><00:01:49.979><c> rather</c><00:01:50.670><c> than</c><00:01:50.850><c> waiting</c>

00:01:51.080 --> 00:01:51.090 align:start position:0%
they aren't in use rather than waiting
 

00:01:51.090 --> 00:01:52.580 align:start position:0%
they aren't in use rather than waiting
for<00:01:51.210><c> these</c><00:01:51.390><c> timeouts</c><00:01:51.689><c> to</c><00:01:52.020><c> extinguish</c><00:01:52.409><c> by</c>

00:01:52.580 --> 00:01:52.590 align:start position:0%
for these timeouts to extinguish by
 

00:01:52.590 --> 00:01:55.039 align:start position:0%
for these timeouts to extinguish by
themselves<00:01:53.240><c> that</c><00:01:54.240><c> said</c><00:01:54.570><c> closing</c><00:01:54.869><c> a</c>

00:01:55.039 --> 00:01:55.049 align:start position:0%
themselves that said closing a
 

00:01:55.049 --> 00:01:56.630 align:start position:0%
themselves that said closing a
connection<00:01:55.409><c> too</c><00:01:55.530><c> early</c><00:01:55.890><c> can</c><00:01:56.009><c> prevent</c><00:01:56.340><c> it</c><00:01:56.520><c> from</c>

00:01:56.630 --> 00:01:56.640 align:start position:0%
connection too early can prevent it from
 

00:01:56.640 --> 00:01:58.490 align:start position:0%
connection too early can prevent it from
being<00:01:56.850><c> reused</c><00:01:57.360><c> which</c><00:01:57.899><c> then</c><00:01:58.110><c> requires</c>

00:01:58.490 --> 00:01:58.500 align:start position:0%
being reused which then requires
 

00:01:58.500 --> 00:02:00.230 align:start position:0%
being reused which then requires
additional<00:01:58.920><c> overhead</c><00:01:59.430><c> for</c><00:01:59.729><c> establishing</c><00:02:00.149><c> a</c>

00:02:00.230 --> 00:02:00.240 align:start position:0%
additional overhead for establishing a
 

00:02:00.240 --> 00:02:02.569 align:start position:0%
additional overhead for establishing a
new<00:02:00.360><c> connection</c><00:02:00.689><c> a</c><00:02:01.020><c> useful</c><00:02:01.799><c> compromises</c><00:02:02.430><c> to</c>

00:02:02.569 --> 00:02:02.579 align:start position:0%
new connection a useful compromises to
 

00:02:02.579 --> 00:02:04.609 align:start position:0%
new connection a useful compromises to
not<00:02:02.790><c> close</c><00:02:02.969><c> the</c><00:02:03.270><c> connection</c><00:02:03.479><c> immediately</c><00:02:03.869><c> but</c>

00:02:04.609 --> 00:02:04.619 align:start position:0%
not close the connection immediately but
 

00:02:04.619 --> 00:02:06.200 align:start position:0%
not close the connection immediately but
to<00:02:04.740><c> still</c><00:02:04.890><c> close</c><00:02:05.159><c> it</c><00:02:05.310><c> before</c><00:02:05.460><c> the</c><00:02:05.790><c> inherent</c>

00:02:06.200 --> 00:02:06.210 align:start position:0%
to still close it before the inherent
 

00:02:06.210 --> 00:02:08.749 align:start position:0%
to still close it before the inherent
timeout<00:02:06.570><c> expires</c><00:02:07.489><c> finally</c><00:02:08.489><c> cash</c>

00:02:08.749 --> 00:02:08.759 align:start position:0%
timeout expires finally cash
 

00:02:08.759 --> 00:02:10.999 align:start position:0%
timeout expires finally cash
aggressively<00:02:09.479><c> you</c><00:02:09.569><c> can</c><00:02:09.840><c> maintain</c><00:02:10.020><c> a</c><00:02:10.229><c> cash</c>

00:02:10.999 --> 00:02:11.009 align:start position:0%
aggressively you can maintain a cash
 

00:02:11.009 --> 00:02:13.160 align:start position:0%
aggressively you can maintain a cash
in<00:02:11.099><c> shared</c><00:02:11.640><c> storage</c><00:02:11.970><c> within</c><00:02:12.480><c> the</c><00:02:12.720><c> external</c>

00:02:13.160 --> 00:02:13.170 align:start position:0%
in shared storage within the external
 

00:02:13.170 --> 00:02:15.170 align:start position:0%
in shared storage within the external
cache<00:02:13.349><c> directory</c><00:02:13.530><c> or</c><00:02:13.980><c> manager</c><00:02:14.670><c> smaller</c><00:02:14.939><c> cash</c>

00:02:15.170 --> 00:02:15.180 align:start position:0%
cache directory or manager smaller cash
 

00:02:15.180 --> 00:02:17.449 align:start position:0%
cache directory or manager smaller cash
in<00:02:15.329><c> your</c><00:02:15.420><c> application</c><00:02:15.930><c> sandbox</c><00:02:16.459><c> anything</c>

00:02:17.449 --> 00:02:17.459 align:start position:0%
in your application sandbox anything
 

00:02:17.459 --> 00:02:19.009 align:start position:0%
in your application sandbox anything
sorting<00:02:17.760><c> the</c><00:02:17.849><c> external</c><00:02:18.239><c> cash</c><00:02:18.420><c> can</c><00:02:18.629><c> be</c><00:02:18.659><c> deleted</c>

00:02:19.009 --> 00:02:19.019 align:start position:0%
sorting the external cash can be deleted
 

00:02:19.019 --> 00:02:20.720 align:start position:0%
sorting the external cash can be deleted
by<00:02:19.319><c> the</c><00:02:19.470><c> system</c><00:02:20.010><c> if</c><00:02:20.129><c> it's</c><00:02:20.310><c> running</c><00:02:20.459><c> low</c><00:02:20.700><c> on</c>

00:02:20.720 --> 00:02:20.730 align:start position:0%
by the system if it's running low on
 

00:02:20.730 --> 00:02:22.280 align:start position:0%
by the system if it's running low on
space<00:02:21.060><c> whereas</c><00:02:21.480><c> you're</c><00:02:21.659><c> responsible</c><00:02:22.230><c> for</c>

00:02:22.280 --> 00:02:22.290 align:start position:0%
space whereas you're responsible for
 

00:02:22.290 --> 00:02:23.869 align:start position:0%
space whereas you're responsible for
managing<00:02:22.620><c> the</c><00:02:22.829><c> data</c><00:02:22.980><c> stored</c><00:02:23.370><c> in</c><00:02:23.519><c> your</c>

00:02:23.869 --> 00:02:23.879 align:start position:0%
managing the data stored in your
 

00:02:23.879 --> 00:02:26.509 align:start position:0%
managing the data stored in your
application<00:02:24.390><c> cache</c><00:02:24.769><c> in</c><00:02:25.769><c> a</c><00:02:25.860><c> lot</c><00:02:25.980><c> of</c><00:02:26.069><c> cases</c><00:02:26.280><c> you</c>

00:02:26.509 --> 00:02:26.519 align:start position:0%
application cache in a lot of cases you
 

00:02:26.519 --> 00:02:27.920 align:start position:0%
application cache in a lot of cases you
can<00:02:26.670><c> determine</c><00:02:26.909><c> when</c><00:02:27.239><c> you</c><00:02:27.390><c> should</c><00:02:27.569><c> perform</c><00:02:27.690><c> in</c>

00:02:27.920 --> 00:02:27.930 align:start position:0%
can determine when you should perform in
 

00:02:27.930 --> 00:02:29.899 align:start position:0%
can determine when you should perform in
yuan<00:02:28.110><c> perform</c><00:02:28.650><c> your</c><00:02:28.709><c> next</c><00:02:29.010><c> update</c><00:02:29.340><c> by</c>

00:02:29.899 --> 00:02:29.909 align:start position:0%
yuan perform your next update by
 

00:02:29.909 --> 00:02:31.789 align:start position:0%
yuan perform your next update by
inspecting<00:02:30.299><c> the</c><00:02:30.420><c> HTTP</c><00:02:30.900><c> response</c><00:02:31.319><c> headers</c><00:02:31.680><c> of</c>

00:02:31.789 --> 00:02:31.799 align:start position:0%
inspecting the HTTP response headers of
 

00:02:31.799 --> 00:02:33.500 align:start position:0%
inspecting the HTTP response headers of
your<00:02:32.220><c> downloads</c><00:02:32.670><c> this</c><00:02:32.909><c> is</c><00:02:33.060><c> particularly</c>

00:02:33.500 --> 00:02:33.510 align:start position:0%
your downloads this is particularly
 

00:02:33.510 --> 00:02:35.960 align:start position:0%
your downloads this is particularly
useful<00:02:33.720><c> for</c><00:02:34.049><c> static</c><00:02:34.560><c> for</c><00:02:34.829><c> static</c><00:02:35.190><c> or</c><00:02:35.340><c> almost</c>

00:02:35.960 --> 00:02:35.970 align:start position:0%
useful for static for static or almost
 

00:02:35.970 --> 00:02:38.539 align:start position:0%
useful for static for static or almost
static<00:02:36.329><c> resources</c><00:02:36.450><c> like</c><00:02:36.989><c> images</c><00:02:37.459><c> looking</c><00:02:38.459><c> at</c>

00:02:38.539 --> 00:02:38.549 align:start position:0%
static resources like images looking at
 

00:02:38.549 --> 00:02:39.710 align:start position:0%
static resources like images looking at
the<00:02:38.640><c> header</c><00:02:38.819><c> response</c><00:02:39.209><c> you</c><00:02:39.329><c> can</c><00:02:39.480><c> determine</c>

00:02:39.710 --> 00:02:39.720 align:start position:0%
the header response you can determine
 

00:02:39.720 --> 00:02:41.630 align:start position:0%
the header response you can determine
the<00:02:39.930><c> time</c><00:02:40.170><c> the</c><00:02:40.349><c> downloaded</c><00:02:40.859><c> data</c><00:02:40.980><c> was</c><00:02:41.250><c> changed</c>

00:02:41.630 --> 00:02:41.640 align:start position:0%
the time the downloaded data was changed
 

00:02:41.640 --> 00:02:43.460 align:start position:0%
the time the downloaded data was changed
and<00:02:41.760><c> when</c><00:02:41.970><c> it</c><00:02:42.090><c> will</c><00:02:42.180><c> expire</c><00:02:42.569><c> allowing</c><00:02:43.170><c> you</c><00:02:43.319><c> to</c>

00:02:43.460 --> 00:02:43.470 align:start position:0%
and when it will expire allowing you to
 

00:02:43.470 --> 00:02:44.960 align:start position:0%
and when it will expire allowing you to
schedule<00:02:43.920><c> your</c><00:02:44.040><c> cache</c><00:02:44.280><c> refreshes</c>

00:02:44.960 --> 00:02:44.970 align:start position:0%
schedule your cache refreshes
 

00:02:44.970 --> 00:02:47.750 align:start position:0%
schedule your cache refreshes
accordingly<00:02:45.920><c> to</c><00:02:46.920><c> make</c><00:02:47.069><c> your</c><00:02:47.220><c> life</c><00:02:47.370><c> easier</c>

00:02:47.750 --> 00:02:47.760 align:start position:0%
accordingly to make your life easier
 

00:02:47.760 --> 00:02:50.839 align:start position:0%
accordingly to make your life easier
android<00:02:48.150><c> 4.0</c><00:02:48.720><c> deuced</c><00:02:49.319><c> a</c><00:02:49.470><c> HTTP</c><00:02:50.099><c> response</c><00:02:50.609><c> cash</c>

00:02:50.839 --> 00:02:50.849 align:start position:0%
android 4.0 deuced a HTTP response cash
 

00:02:50.849 --> 00:02:53.599 align:start position:0%
android 4.0 deuced a HTTP response cash
to<00:02:51.090><c> the</c><00:02:51.120><c> HTTP</c><00:02:51.930><c> URL</c><00:02:52.290><c> connection</c><00:02:52.319><c> class</c><00:02:52.980><c> that</c>

00:02:53.599 --> 00:02:53.609 align:start position:0%
to the HTTP URL connection class that
 

00:02:53.609 --> 00:02:56.030 align:start position:0%
to the HTTP URL connection class that
handles<00:02:53.970><c> this</c><00:02:54.090><c> caching</c><00:02:54.510><c> for</c><00:02:54.810><c> you</c><00:02:55.040><c> inspecting</c>

00:02:56.030 --> 00:02:56.040 align:start position:0%
handles this caching for you inspecting
 

00:02:56.040 --> 00:02:57.920 align:start position:0%
handles this caching for you inspecting
headers<00:02:56.310><c> and</c><00:02:56.519><c> contacting</c><00:02:57.120><c> the</c><00:02:57.209><c> server</c><00:02:57.450><c> only</c>

00:02:57.920 --> 00:02:57.930 align:start position:0%
headers and contacting the server only
 

00:02:57.930 --> 00:02:59.330 align:start position:0%
headers and contacting the server only
when<00:02:58.049><c> the</c><00:02:58.139><c> cache</c><00:02:58.290><c> has</c><00:02:58.440><c> expired</c><00:02:58.859><c> or</c><00:02:59.099><c> data</c>

00:02:59.330 --> 00:02:59.340 align:start position:0%
when the cache has expired or data
 

00:02:59.340 --> 00:03:01.849 align:start position:0%
when the cache has expired or data
doesn't<00:02:59.609><c> exist</c><00:03:00.030><c> locally</c><00:03:00.739><c> throughout</c><00:03:01.739><c> the</c>

00:03:01.849 --> 00:03:01.859 align:start position:0%
doesn't exist locally throughout the
 

00:03:01.859 --> 00:03:03.559 align:start position:0%
doesn't exist locally throughout the
series<00:03:02.069><c> of</c><00:03:02.310><c> lights</c><00:03:02.760><c> on</c><00:03:03.000><c> efficient</c><00:03:03.420><c> data</c>

00:03:03.559 --> 00:03:03.569 align:start position:0%
series of lights on efficient data
 

00:03:03.569 --> 00:03:05.390 align:start position:0%
series of lights on efficient data
transfers<00:03:03.720><c> we've</c><00:03:04.379><c> explored</c><00:03:04.739><c> how</c><00:03:05.040><c> the</c><00:03:05.099><c> cell</c>

00:03:05.390 --> 00:03:05.400 align:start position:0%
transfers we've explored how the cell
 

00:03:05.400 --> 00:03:07.309 align:start position:0%
transfers we've explored how the cell
radio<00:03:05.700><c> works</c><00:03:06.000><c> and</c><00:03:06.239><c> how</c><00:03:06.629><c> the</c><00:03:06.690><c> state</c><00:03:06.959><c> machine</c>

00:03:07.309 --> 00:03:07.319 align:start position:0%
radio works and how the state machine
 

00:03:07.319 --> 00:03:09.080 align:start position:0%
radio works and how the state machine
can<00:03:07.620><c> affect</c><00:03:07.920><c> the</c><00:03:08.099><c> battery</c><00:03:08.370><c> efficiency</c><00:03:08.489><c> of</c>

00:03:09.080 --> 00:03:09.090 align:start position:0%
can affect the battery efficiency of
 

00:03:09.090 --> 00:03:11.270 align:start position:0%
can affect the battery efficiency of
your<00:03:09.269><c> apps</c><00:03:09.510><c> and</c><00:03:09.870><c> with</c><00:03:10.650><c> that</c><00:03:10.680><c> knowledge</c><00:03:10.829><c> you</c>

00:03:11.270 --> 00:03:11.280 align:start position:0%
your apps and with that knowledge you
 

00:03:11.280 --> 00:03:12.680 align:start position:0%
your apps and with that knowledge you
learn<00:03:11.310><c> to</c><00:03:11.639><c> analyze</c><00:03:11.819><c> your</c><00:03:12.150><c> network</c><00:03:12.480><c> traffic</c>

00:03:12.680 --> 00:03:12.690 align:start position:0%
learn to analyze your network traffic
 

00:03:12.690 --> 00:03:14.210 align:start position:0%
learn to analyze your network traffic
and<00:03:12.989><c> use</c><00:03:13.139><c> techniques</c><00:03:13.500><c> like</c><00:03:13.650><c> prefetching</c>

00:03:14.210 --> 00:03:14.220 align:start position:0%
and use techniques like prefetching
 

00:03:14.220 --> 00:03:16.520 align:start position:0%
and use techniques like prefetching
batching<00:03:14.819><c> and</c><00:03:14.970><c> bundling</c><00:03:15.299><c> supported</c><00:03:16.139><c> by</c><00:03:16.230><c> sync</c>

00:03:16.520 --> 00:03:16.530 align:start position:0%
batching and bundling supported by sync
 

00:03:16.530 --> 00:03:18.409 align:start position:0%
batching and bundling supported by sync
adapters<00:03:16.889><c> and</c><00:03:17.069><c> Google</c><00:03:17.400><c> Cloud</c><00:03:17.609><c> messaging</c><00:03:17.639><c> to</c>

00:03:18.409 --> 00:03:18.419 align:start position:0%
adapters and Google Cloud messaging to
 

00:03:18.419 --> 00:03:21.949 align:start position:0%
adapters and Google Cloud messaging to
make<00:03:18.599><c> your</c><00:03:18.750><c> apps</c><00:03:18.900><c> more</c><00:03:19.530><c> efficient</c>

