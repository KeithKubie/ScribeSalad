WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.940
JAMES CLEWETT: The end
is nigh, Brady.

00:00:02.940 --> 00:00:06.680
Time is coming to an end, and
I can tell you, actually,

00:00:06.680 --> 00:00:09.660
precisely when time
is going to end.

00:00:09.660 --> 00:00:20.630
It's going to end at 3:00 AM,
3:14.07 on the 19th of

00:00:20.630 --> 00:00:25.430
January, 2038.

00:00:25.430 --> 00:00:27.270
What's going on is we're
talking about

00:00:27.270 --> 00:00:29.030
the end of Unix time.

00:00:29.030 --> 00:00:30.840
Now--

00:00:30.840 --> 00:00:31.100
BRADY HARAN: What's that?

00:00:31.100 --> 00:00:32.540
JAMES CLEWETT: You're making a
face at me like you don't know

00:00:32.540 --> 00:00:33.600
what I'm talking about, Brady.

00:00:33.600 --> 00:00:37.840
Most of us at home are using
either Windows or Mac-based

00:00:37.840 --> 00:00:41.450
operating systems for
our computers.

00:00:41.450 --> 00:00:46.210
And somewhere buried deep down
inside that system is a little

00:00:46.210 --> 00:00:50.610
counter that's been ticking
away every second--

00:00:50.610 --> 00:00:51.800
that's a fast second--

00:00:51.800 --> 00:00:55.800
every second since
January 1, 1970.

00:00:55.800 --> 00:00:59.470
They began a counter in a 32-bit
number, crucially, that

00:00:59.470 --> 00:01:02.080
was just going to
count seconds.

00:01:02.080 --> 00:01:06.060
And obviously, because it's
only a 32-bit number, it's

00:01:06.060 --> 00:01:07.800
going to run out
at some point.

00:01:07.800 --> 00:01:08.700
That is the point.

00:01:08.700 --> 00:01:12.820
This is the moment when
that number runs out

00:01:12.820 --> 00:01:14.060
of seconds to count.

00:01:14.060 --> 00:01:16.090
This is how your computer
is telling the time.

00:01:16.090 --> 00:01:18.420
This is how your computer
is keeping the date.

00:01:18.420 --> 00:01:21.570
So you can take this number, the
number of seconds, and you

00:01:21.570 --> 00:01:24.830
can divide it and keep dividing
it and keep dividing

00:01:24.830 --> 00:01:29.390
it to get back to the number of
minutes, hours, days, years

00:01:29.390 --> 00:01:33.060
that have passed since
January 1, 1970.

00:01:33.060 --> 00:01:36.000
So, this is what's cool
with the Unix Epoch.

00:01:36.000 --> 00:01:39.600
Now the reason I keep talking
about Unix is because way back

00:01:39.600 --> 00:01:47.480
then, there was this operating
system called Unix, which was

00:01:47.480 --> 00:01:51.090
just beginning to really take
a hold in corporations and

00:01:51.090 --> 00:01:52.720
really mission critical
systems.

00:01:52.720 --> 00:01:55.840
The point is, in every single
one of those mission critical

00:01:55.840 --> 00:01:59.400
machines, there's a number
ticking away, counting the

00:01:59.400 --> 00:02:04.580
seconds, and it's ticking
towards January the 19th,

00:02:04.580 --> 00:02:08.190
2038, when it's going
to run out.

00:02:08.190 --> 00:02:11.020
And when it does, a very weird
thing is going to happen.

00:02:11.020 --> 00:02:13.600
It's going to roll back to--

00:02:13.600 --> 00:02:16.380
I think it's December 1901.

00:02:16.380 --> 00:02:18.765
So, in some ways, it's great,
because it's an opportunity

00:02:18.765 --> 00:02:21.400
for us to redo the 20th
century and maybe get

00:02:21.400 --> 00:02:23.340
it right this time.

00:02:23.340 --> 00:02:26.220
But in other ways, it's going to
be absolutely catastrophic,

00:02:26.220 --> 00:02:29.160
cause it's a lot like the
Millennium Bug--so some of

00:02:29.160 --> 00:02:32.000
your viewers were too young to
remember the Millennium Bug.

00:02:32.000 --> 00:02:34.040
But those of us that were there,
the Millennium bug was

00:02:34.040 --> 00:02:38.970
a problem when we were storing
the date as a two-digit number

00:02:38.970 --> 00:02:43.120
in a lot of computers mostly
back in the '80s.

00:02:43.120 --> 00:02:45.450
And everybody thought,
it's a long way away.

00:02:45.450 --> 00:02:47.350
We're not going to have to worry
about what happens when

00:02:47.350 --> 00:02:49.270
we get to 2000.

00:02:49.270 --> 00:02:51.840
But it just turns out that once
you've got a computer

00:02:51.840 --> 00:02:56.330
that works, say if you're in a
bank or if you're running an

00:02:56.330 --> 00:02:59.150
airline, you have a
system that works.

00:02:59.150 --> 00:03:02.700
It costs too much to bother
changing that, so things get

00:03:02.700 --> 00:03:06.210
left just working for years
and years and years.

00:03:06.210 --> 00:03:10.210
And it came up to 2000 and all
of these computers were just

00:03:10.210 --> 00:03:12.410
going to fail in some
obscure way.

00:03:12.410 --> 00:03:18.300
So a lot of the time the date
started showing as 19,100, or

00:03:18.300 --> 00:03:20.720
if it was a system which was
dependent on the incremental

00:03:20.720 --> 00:03:23.350
date, like it's adding interest
to your bank account,

00:03:23.350 --> 00:03:27.490
then suddenly it was going to
go from being 99 to being 0.

00:03:27.490 --> 00:03:30.490
And it was going to add a huge
amount of negative interest to

00:03:30.490 --> 00:03:32.960
your bank account, which is good
if you've got a mortgage

00:03:32.960 --> 00:03:35.130
and terrible if you've
got savings.

00:03:35.130 --> 00:03:37.260
I worked on this for a few
years leading up to the

00:03:37.260 --> 00:03:40.630
millennium, and we went around
and we fixed all of the

00:03:40.630 --> 00:03:43.800
machines that were too old to
survive the millennium.

00:03:43.800 --> 00:03:47.150
And of course, everybody
knows it wasn't a

00:03:47.150 --> 00:03:47.840
problem in the end.

00:03:47.840 --> 00:03:52.160
OK, so there were a few cases,
some sad cases and some quite

00:03:52.160 --> 00:03:55.090
funny cases where it did go
wrong, but for the most part,

00:03:55.090 --> 00:03:55.990
it wasn't a problem.

00:03:55.990 --> 00:03:59.430
So, we have to go back to the
Pac-Man video that we did

00:03:59.430 --> 00:04:02.000
where we were talking about
binary numbers.

00:04:02.000 --> 00:04:05.870
And in Pac-Man, we were storing
that binary number as

00:04:05.870 --> 00:04:08.870
an 8-bit binary value, and that
meant that it could count

00:04:08.870 --> 00:04:12.270
up to a maximum of 256.

00:04:12.270 --> 00:04:12.780
Now, it's a choice.

00:04:12.780 --> 00:04:16.560
It's either a maximum of 256
and a minimum of 0, or a

00:04:16.560 --> 00:04:21.360
minimum of minus 128 and
a maximum of 127.

00:04:21.360 --> 00:04:24.760
So, this value has been running
from a minimum of

00:04:24.760 --> 00:04:29.800
minus 2 billion to a maximum of
plus 2 billion, and this is

00:04:29.800 --> 00:04:32.270
the moment when it reaches that

00:04:32.270 --> 00:04:34.050
maximum value of 2 billion.

00:04:34.050 --> 00:04:35.510
Well, it's not actually
2 billion.

00:04:35.510 --> 00:04:39.080
It's about 2,150,000,000.

00:04:39.080 --> 00:04:40.400
But it's a big number.

00:04:40.400 --> 00:04:42.696
BRADY HARAN: When I turn my
computer off at home and it

00:04:42.696 --> 00:04:45.790
hasn't got electricity,
obviously it's not counting

00:04:45.790 --> 00:04:46.870
anymore, is it?

00:04:46.870 --> 00:04:48.730
JAMES CLEWETT: It's not counting
anymore, but there is

00:04:48.730 --> 00:04:52.440
a battery inside, which is
storing its current state.

00:04:52.440 --> 00:04:54.820
So it depends on how your
computer's set up.

00:04:54.820 --> 00:04:59.610
Some computers are set up to
connect immediately to the

00:04:59.610 --> 00:05:02.800
server and get the current time
just to make sure that

00:05:02.800 --> 00:05:03.800
all of those computers are

00:05:03.800 --> 00:05:05.460
synchronized across the network.

00:05:05.460 --> 00:05:09.420
Other computers, like your home
computer, are set up just

00:05:09.420 --> 00:05:13.440
to read the date or the time
from a memory chip, which has

00:05:13.440 --> 00:05:15.610
been keeping its store
with a CMOS battery.

00:05:15.610 --> 00:05:17.600
What we're going to have to
do, very simply-- same

00:05:17.600 --> 00:05:20.040
solution as always with these
things-- we've got to throw

00:05:20.040 --> 00:05:23.170
away the machines which have
got two small a number and

00:05:23.170 --> 00:05:24.680
replace them with
bigger version.

00:05:24.680 --> 00:05:26.410
And that's already beginning
to happen.

00:05:26.410 --> 00:05:29.690
We're already moving from 32-bit
computers, which count

00:05:29.690 --> 00:05:33.700
in 32-bit numbers, to 64-bit
computers, which count in

00:05:33.700 --> 00:05:34.620
64-bit numbers.

00:05:34.620 --> 00:05:39.810
And with a 64-bit counter, then
this problem is pushed

00:05:39.810 --> 00:05:44.490
out an awfully long way, and
actually that number is

00:05:44.490 --> 00:05:47.480
somewhere way beyond the end
of the known universe.

00:05:47.480 --> 00:05:49.671
Way beyond the heat death
of the universe.

00:05:49.671 --> 00:05:51.024
BRADY HARAN: Is it going to
be a date when everyone's

00:05:51.024 --> 00:05:51.926
worried, do you think?

00:05:51.926 --> 00:05:53.470
Do you think this is going to
be panic stations when this

00:05:53.470 --> 00:05:54.130
time comes?

00:05:54.130 --> 00:05:54.910
JAMES CLEWETT: Yes.

00:05:54.910 --> 00:05:55.860
I think there will
be a problem.

00:05:55.860 --> 00:06:00.710
Because I remember being
in a bank in 1999--

00:06:00.710 --> 00:06:02.050
quite a long time ago now--

00:06:02.050 --> 00:06:05.670
and looking at the oldest
computer I had ever seen, and

00:06:05.670 --> 00:06:08.450
somebody saying, oh, that's
just our payment system.

00:06:08.450 --> 00:06:11.150
And it just worked.

00:06:11.150 --> 00:06:13.650
They used that word-- just--

00:06:13.650 --> 00:06:15.220
and nobody had ever
thought about it.

00:06:15.220 --> 00:06:17.455
And I had to look at that
machine and say, well, you

00:06:17.455 --> 00:06:18.890
know what, your payment
system's not going

00:06:18.890 --> 00:06:20.420
to work next week.

00:06:20.420 --> 00:06:21.840
We need to fix that.

00:06:21.840 --> 00:06:25.260
And I don't doubt for a second
that there will be 32-bit

00:06:25.260 --> 00:06:28.570
computers sitting in the corner
of some dusty bank

00:06:28.570 --> 00:06:34.610
building, society, or airline
or whatever in 2038, and

00:06:34.610 --> 00:06:37.570
they're going to
just go wrong.

00:06:37.570 --> 00:06:42.400
And all of those bookings for
your holiday in Malaga are all

00:06:42.400 --> 00:06:44.530
going to be erased in
some horrible way.

00:06:44.530 --> 00:06:46.700
So I don't think it's going
to go wrong in any

00:06:46.700 --> 00:06:49.500
life-threatening manner, but,
yeah, there will be some

00:06:49.500 --> 00:06:50.360
comical errors.

00:06:50.360 --> 00:06:53.180
And certainly for people like
me who know how to fix this

00:06:53.180 --> 00:06:55.970
problem, there's a great
opportunity to--

00:06:55.970 --> 00:06:58.390
well, this is my pension we're
talking about here.

00:06:58.390 --> 00:07:01.580
I'm going to go around upgrading
32-bit computers to

00:07:01.580 --> 00:07:05.190
64-bit computers to pay for the
last 30 years of my life.

00:07:05.190 --> 00:07:06.760
I'm looking forward
to it already.

00:07:06.760 --> 00:07:09.330
You can go through and
you can pick out key

00:07:09.330 --> 00:07:11.290
dates in Unix numbers.

00:07:11.290 --> 00:07:15.500
The 9th of September, 2001, was
one billion, and quite a

00:07:15.500 --> 00:07:17.120
few people celebrated that.

00:07:17.120 --> 00:07:23.920
There was a small celebration
in Norway for 1,111,111,111.

00:07:23.920 --> 00:07:28.470
And so people are noticing
Unix time ticking away.

00:07:28.470 --> 00:07:32.390
But for most of us, it's
happening behind our backs.

00:07:32.390 --> 00:07:35.500
So, what we have here
is the current Unix

00:07:35.500 --> 00:07:37.960
time at 1.34 billion.

00:07:37.960 --> 00:07:41.260
So if you're feeling really
smart at home, apart from the

00:07:41.260 --> 00:07:44.270
fact of the date's in the top
corner of the screen, you

00:07:44.270 --> 00:07:46.220
could work out when we're
actually filming this.

00:07:46.220 --> 00:07:49.480
Because this is the number
that the computer uses to

00:07:49.480 --> 00:07:53.440
calculate this date.

00:07:53.440 --> 00:07:56.300
It's like watching your life
just ticking away.

