WEBVTT
Kind: captions
Language: en

00:00:00.180 --> 00:00:01.569
&gt;&gt; So one of the things that is going to be helpful as

00:00:01.569 --> 00:00:04.880
a subcomponent to this process is to be able to say. Well,

00:00:04.880 --> 00:00:07.120
if we've got a set of points in some space, and we're

00:00:07.120 --> 00:00:11.790
trying to find the maximum likelihood Gaussian with some known variant. Mode is

00:00:11.790 --> 00:00:14.620
the maximum likelihood Gaussian. What is the best way of setting the

00:00:14.620 --> 00:00:18.860
mean to capture this set of points? So fortunately this is really easy

00:00:18.860 --> 00:00:22.530
to do. And the reason that it works out this way is

00:00:22.530 --> 00:00:25.500
the same reason that we've talked about in several of the other lessons.

00:00:25.500 --> 00:00:28.770
But the maximum likelihood mean of the Gaussian, this mu that we want

00:00:28.770 --> 00:00:31.490
to set, is the mean of the data, the mean is the mean.

00:00:31.490 --> 00:00:33.350
&gt;&gt; That's pretty mean.

00:00:33.350 --> 00:00:35.700
&gt;&gt; And it's no mean feat that it works out this way.

00:00:35.700 --> 00:00:36.355
&gt;&gt; [LAUGH]

00:00:36.355 --> 00:00:39.170
&gt;&gt; And, [LAUGH] what?

00:00:39.170 --> 00:00:40.960
&gt;&gt; Oh, just well done.

00:00:40.960 --> 00:00:44.600
&gt;&gt; So, in particular, this is really easy to compute. If we know that all

00:00:44.600 --> 00:00:47.070
this data is coming from the same Gaussian,

00:00:47.070 --> 00:00:50.640
then finding the mean that maximizes the likelihood

00:00:50.640 --> 00:00:52.800
is just computing the mean of all the points.

00:00:52.800 --> 00:00:55.380
&gt;&gt; Right, we kind of did that, just a few slides ago.

00:00:55.380 --> 00:00:56.740
&gt;&gt; Exactly.

00:00:56.740 --> 00:00:58.510
&gt;&gt; Okay, alright, so given a bunch of data

00:00:58.510 --> 00:01:00.920
points that I all know came from some Gaussian, I

00:01:00.920 --> 00:01:04.180
can compute the mean of that Gaussian by actually

00:01:04.180 --> 00:01:06.900
taking the sample mean, and I could mean it, okay.

00:01:06.900 --> 00:01:10.090
&gt;&gt; So the tricky thing of course, is what happens if there's k of them. How

00:01:10.090 --> 00:01:15.700
do we set the k different means? And our answer is going to be, there I just

00:01:15.700 --> 00:01:18.180
wrote it. Do you see it?

00:01:18.180 --> 00:01:18.555
&gt;&gt; Nope.

00:01:18.555 --> 00:01:21.830
&gt;&gt; That's because, it's hidden variables!

00:01:21.830 --> 00:01:24.470
&gt;&gt; Oh. My favorite kind of variables.

00:01:24.470 --> 00:01:26.850
&gt;&gt; Variables that you don't have to see. So what we're going to imagine is

00:01:26.850 --> 00:01:30.700
that the data points, instead of just being x, it's actually x and a bunch of

00:01:30.700 --> 00:01:32.910
random variables that are indicator variables on which

00:01:32.910 --> 00:01:36.240
cluster that x came from. So it's not

00:01:36.240 --> 00:01:40.080
just x anymore it's x and let's say a bunch of zeros and then a one.

00:01:40.080 --> 00:01:45.510
Corresponding to which cluster generated X. Now of course if we knew that, that

00:01:45.510 --> 00:01:47.290
would be really useful information. We, we're

00:01:47.290 --> 00:01:49.100
going to have to do some inference to

00:01:49.100 --> 00:01:51.530
figure out what those values are. But,

00:01:51.530 --> 00:01:56.530
the, concept is that, by adding these extra

00:01:56.530 --> 00:01:58.010
hidden variables in, it really kind of

00:01:58.010 --> 00:01:59.570
breaks up the problem in a convenient way.

00:01:59.570 --> 00:02:00.440
&gt;&gt; Okay.

