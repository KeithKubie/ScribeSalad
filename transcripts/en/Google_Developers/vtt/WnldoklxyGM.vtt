WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.337
ALEX DANILO: All you web
developers out there follow me,

00:00:02.337 --> 00:00:03.920
as I go to the other
side of the world

00:00:03.920 --> 00:00:06.350
to talk to some graphics
experts about the insides

00:00:06.350 --> 00:00:07.770
of modern browsers today.

00:00:07.770 --> 00:00:12.550
[MUSIC PLAYING]

00:00:18.290 --> 00:00:19.430
Hi, I'm Alex Danilo.

00:00:19.430 --> 00:00:22.130
I'm here in Winchester, the
home of the famous round table.

00:00:26.720 --> 00:00:28.630
Now, King Arthur
may have long gone.

00:00:28.630 --> 00:00:30.750
But we're bringing a whole
lot of graphic experts

00:00:30.750 --> 00:00:33.010
from all around the world
to talk about the web.

00:00:33.010 --> 00:00:34.570
So welcome to "The
Graphical Web."

00:00:34.570 --> 00:00:42.330
[MUSIC PLAYING]

00:00:42.330 --> 00:00:45.120
Hi, I'm here with Cameron
McCormack from Mozilla.

00:00:45.120 --> 00:00:46.720
And he's working on Firefox.

00:00:46.720 --> 00:00:50.040
And today he gave a presentation
about colorful fonts

00:00:50.040 --> 00:00:52.620
in OpenType that are
available in modern browsers.

00:00:52.620 --> 00:00:54.078
Cameron, there are
three proposals.

00:00:54.078 --> 00:00:56.230
There is one from
Microsoft, one from Google,

00:00:56.230 --> 00:00:59.150
one from Mozilla and
Adobe working together.

00:00:59.150 --> 00:01:01.470
The main one I found
interesting was SVG in OpenType.

00:01:01.470 --> 00:01:04.217
So can you tell me what the
advantage of that is versus,

00:01:04.217 --> 00:01:05.550
say, one of the other proposals?

00:01:05.550 --> 00:01:07.050
CAMERON MCCORMACK:
Sure thing, Alex.

00:01:07.050 --> 00:01:09.500
So to summarize the three
different proposals,

00:01:09.500 --> 00:01:12.280
one was a bitmap format that
gets embedded into the font,

00:01:12.280 --> 00:01:14.680
so they're PNGs--
that was the Google

00:01:14.680 --> 00:01:19.680
proposal-- a proposal from
Microsoft, which had composed

00:01:19.680 --> 00:01:23.950
glyphs from plain, flat shapes,
so regular OpenType glyphs.

00:01:23.950 --> 00:01:26.070
And the third proposal,
from Mozilla and Adobe

00:01:26.070 --> 00:01:28.490
was to embed SVG
documents into the font.

00:01:28.490 --> 00:01:32.690
So with the SVG proposal,
you can use the full graphics

00:01:32.690 --> 00:01:35.140
complexity of SVG to
render your glyphs.

00:01:35.140 --> 00:01:38.660
So that means you can have
patterns in the fills.

00:01:38.660 --> 00:01:41.670
You can use gradients,
animation on the glyphs as well.

00:01:41.670 --> 00:01:42.920
ALEX DANILO: All right, great.

00:01:42.920 --> 00:01:45.240
Also, I've seen in Japan quite
a lot of people using emojis,

00:01:45.240 --> 00:01:46.710
like smileys and
things like that.

00:01:46.710 --> 00:01:48.150
So is this what
this is aimed at?

00:01:48.150 --> 00:01:49.566
CAMERON MCCORMACK:
Partially, yes.

00:01:49.566 --> 00:01:52.990
So I think a lot of the
resurgence in interest

00:01:52.990 --> 00:01:55.590
in chromatic fonts,
chromatic type,

00:01:55.590 --> 00:01:59.050
has been emoji, which was sort
of popularized recently by iOS.

00:01:59.050 --> 00:02:00.740
But of course, now
supported across

00:02:00.740 --> 00:02:03.010
mobile and desktop
operating systems.

00:02:03.010 --> 00:02:05.527
So emojis, since
they're little icons,

00:02:05.527 --> 00:02:07.610
they probably have slightly
different requirements

00:02:07.610 --> 00:02:11.470
from multicolored lettering.

00:02:11.470 --> 00:02:13.460
So you might want to
choose a bitmap format

00:02:13.460 --> 00:02:17.094
for those versus a
complex vector format.

00:02:17.094 --> 00:02:18.510
But on the other
hand, the bitmaps

00:02:18.510 --> 00:02:20.910
are not going to scale
particularly well.

00:02:20.910 --> 00:02:23.270
So I think there are pros
and cons for both of them.

00:02:23.270 --> 00:02:24.520
ALEX DANILO: Right, I get you.

00:02:24.520 --> 00:02:26.353
And also, I've noticed
web developers always

00:02:26.353 --> 00:02:28.320
struggle with different
kinds of devices,

00:02:28.320 --> 00:02:30.030
like with a different
resolution screen.

00:02:30.030 --> 00:02:32.236
So to me, I think
the SVG proposal

00:02:32.236 --> 00:02:33.860
is a really good
approach towards that.

00:02:33.860 --> 00:02:36.026
In fact, the Microsoft one
is quite interesting too.

00:02:36.026 --> 00:02:38.440
So what are your thoughts
on the tons of pings,

00:02:38.440 --> 00:02:40.460
like in the Google proposal?

00:02:40.460 --> 00:02:42.032
Don't say anything bad thought.

00:02:42.032 --> 00:02:45.170
CAMERON MCCORMACK: Yeah,
well so obviously for screens

00:02:45.170 --> 00:02:48.920
with different DPIs and
just for showing the glyphs

00:02:48.920 --> 00:02:52.160
at different sizes,
the scalable proposals

00:02:52.160 --> 00:02:56.470
have a definite advantage
there to avoid pixelation.

00:02:56.470 --> 00:02:58.130
There's probably a
speed difference.

00:02:58.130 --> 00:03:02.430
Whereas, with the SVG proposal,
you need a whole SVG renderer.

00:03:02.430 --> 00:03:06.570
It might be a bit slower than
the existing OpenType rendering

00:03:06.570 --> 00:03:08.640
for glyphs the
Microsoft proposal uses.

00:03:08.640 --> 00:03:11.470
And pings are probably pretty
fast to render as well.

00:03:11.470 --> 00:03:14.370
So for fidelity, I
would still probably

00:03:14.370 --> 00:03:16.752
go for one of the
scalable solutions, yeah.

00:03:16.752 --> 00:03:17.710
ALEX DANILO: OK, great.

00:03:17.710 --> 00:03:20.460
So web developers, look
forward to scalable graphics

00:03:20.460 --> 00:03:21.055
in your fonts.

00:03:21.055 --> 00:03:22.330
They're here now in Firefox.

00:03:22.330 --> 00:03:25.480
They'll be coming other modern
browsers very soon, I expect,

00:03:25.480 --> 00:03:27.610
so looking forward
to a colorful future.

00:03:30.472 --> 00:03:32.550
Hi, I'm standing here
with Neil Trevett, who's

00:03:32.550 --> 00:03:34.150
President of the Khronos Group.

00:03:34.150 --> 00:03:35.970
Khronos, of course,
is the standards body

00:03:35.970 --> 00:03:39.670
that produces things like
OpenGL, WebGL, OpenCL, WebCL,

00:03:39.670 --> 00:03:40.500
et cetera.

00:03:40.500 --> 00:03:43.220
And of course, we all know
WebGL is currently in browsers.

00:03:43.220 --> 00:03:47.160
So Neil, where do you see the
future of hardware acceleration

00:03:47.160 --> 00:03:49.922
on the web and
graphics in general?

00:03:49.922 --> 00:03:52.130
NEIL TREVETT: I think there's
a great feature for it.

00:03:52.130 --> 00:03:54.600
And I think it's going
to be at two levels.

00:03:54.600 --> 00:03:57.470
We have to remember that all the
browser vendors are using GPUs

00:03:57.470 --> 00:04:00.750
under the covers, the
composition, the rendering.

00:04:00.750 --> 00:04:04.440
But I think your question
is talking about the APIs

00:04:04.440 --> 00:04:06.790
that developers
can use themselves.

00:04:06.790 --> 00:04:10.065
And WebGL, as you say,
is now very pervasive.

00:04:10.065 --> 00:04:12.080
We're expecting it
to be everywhere

00:04:12.080 --> 00:04:14.130
on desktop and mobile.

00:04:14.130 --> 00:04:16.950
And we hope the next
one will be WebCL,

00:04:16.950 --> 00:04:18.920
which is for compute,
as opposed to graphics.

00:04:18.920 --> 00:04:19.746
ALEX DANILO: Right.

00:04:19.746 --> 00:04:22.056
Also, I've seen that
the trend in tablets

00:04:22.056 --> 00:04:23.930
these days is much higher
resolution screens.

00:04:23.930 --> 00:04:25.955
So do you see that
trend continuing?

00:04:25.955 --> 00:04:27.650
Do you think that
this would mean

00:04:27.650 --> 00:04:30.130
silicon is much more
important as we go forward?

00:04:30.130 --> 00:04:33.310
NEIL TREVETT: Yeah, it's already
been a tremendous increase

00:04:33.310 --> 00:04:35.620
in the number of pixels
that have to be processed.

00:04:35.620 --> 00:04:38.970
From the original iPhone
to now the iPad mini,

00:04:38.970 --> 00:04:41.520
it's a 20-times increase
in the number of pixels.

00:04:41.520 --> 00:04:43.960
That's an enormous
number of pixels

00:04:43.960 --> 00:04:47.070
to process and to push
around in a system.

00:04:47.070 --> 00:04:49.210
And if you have to
do that on the CPU,

00:04:49.210 --> 00:04:52.970
not only is it going to be
not snappy and buttery smooth

00:04:52.970 --> 00:04:55.790
on the screen, it's going
to eat your battery.

00:04:55.790 --> 00:04:59.270
So there's a double win
for bringing this rendering

00:04:59.270 --> 00:05:01.770
off the CPU onto the GPU.

00:05:01.770 --> 00:05:04.210
It goes faster, and your
battery will last longer.

00:05:04.210 --> 00:05:06.950
ALEX DANILO: So for the
web developers out there,

00:05:06.950 --> 00:05:08.830
if they were going to
get started with WebGL,

00:05:08.830 --> 00:05:10.020
what would you
recommend they do?

00:05:10.020 --> 00:05:11.120
Do they learn raw WebGL?

00:05:11.120 --> 00:05:13.495
Do they jump in one of
the JavaScript libraries?

00:05:13.495 --> 00:05:15.120
Or what would you
think they should do?

00:05:15.120 --> 00:05:17.970
NEIL TREVETT: If they're
already a 3D developer

00:05:17.970 --> 00:05:19.510
and they know
OpenGL, yes, they'll

00:05:19.510 --> 00:05:20.660
find WebGL very familiar.

00:05:20.660 --> 00:05:23.110
And it will be very easy to
come up the learning curve.

00:05:23.110 --> 00:05:25.690
If you're coming
into it fresh, I

00:05:25.690 --> 00:05:29.050
would start with one of the
proven middleware libraries,

00:05:29.050 --> 00:05:31.330
because they can really
ease the learning curve.

00:05:31.330 --> 00:05:34.220
Now, three.js is
one of the easiest.

00:05:34.220 --> 00:05:36.490
There's a new one, Babylon.js.

00:05:36.490 --> 00:05:38.920
And actually, there are a
bunch of them out there.

00:05:38.920 --> 00:05:40.929
And depending on what
kind of application

00:05:40.929 --> 00:05:42.470
you're trying to
do, sometimes you'll

00:05:42.470 --> 00:05:46.270
find ones that are targeted
just to your kind of community.

00:05:46.270 --> 00:05:49.350
So Google around, find
the middleware library

00:05:49.350 --> 00:05:50.930
that best suits your needs.

00:05:50.930 --> 00:05:55.350
The default perhaps is
three.js, and start with that.

00:05:55.350 --> 00:05:58.070
You'll probably find you can
get a long way, before you need

00:05:58.070 --> 00:05:59.826
to start figuring
out more details.

00:05:59.826 --> 00:06:00.950
ALEX DANILO: OK, wonderful.

00:06:00.950 --> 00:06:02.060
Thanks very much
for that insight,

00:06:02.060 --> 00:06:03.960
and we're looking forward
to a great hardware

00:06:03.960 --> 00:06:05.665
accelerated future on the Web.

00:06:05.665 --> 00:06:08.867
NEIL TREVETT: Yes.

00:06:08.867 --> 00:06:11.200
ALEX DANILO: Now, Brian and
I have been working together

00:06:11.200 --> 00:06:13.990
on the web animation spec,
which I'm really excited about.

00:06:13.990 --> 00:06:16.025
So I just wanted
to ask Brian, what

00:06:16.025 --> 00:06:18.460
do you see that web animations
does for the general web

00:06:18.460 --> 00:06:19.790
developer?

00:06:19.790 --> 00:06:22.940
BRIAN BIRTLES: It probably
does about two things.

00:06:22.940 --> 00:06:24.910
I guess, first of all,
it gives developers

00:06:24.910 --> 00:06:28.410
access to the animation
functionality of the browser.

00:06:28.410 --> 00:06:31.025
So the browser can do
optimizations that you cannot

00:06:31.025 --> 00:06:33.150
do in JavaScript, such as
running things on another

00:06:33.150 --> 00:06:34.150
thread.

00:06:34.150 --> 00:06:36.610
And so it gives
developers access to that.

00:06:36.610 --> 00:06:40.180
It also let's developers peek
into what the browser is doing

00:06:40.180 --> 00:06:43.620
with their regular CSS
animations and so on,

00:06:43.620 --> 00:06:46.254
so they can inspect why
their CSS isn't working.

00:06:46.254 --> 00:06:47.670
And they can also
tweak it as well

00:06:47.670 --> 00:06:51.510
and extend it in ways they
couldn't do otherwise.

00:06:51.510 --> 00:06:54.250
In addition to that, it
explains what's going on.

00:06:54.250 --> 00:06:56.230
We have CSS, and we've got SVG.

00:06:56.230 --> 00:06:59.560
And this is a common model that
explains what both of those

00:06:59.560 --> 00:07:01.831
are doing, so that
developers can

00:07:01.831 --> 00:07:03.955
make the transition between
different technologies,

00:07:03.955 --> 00:07:06.006
as they need to.

00:07:06.006 --> 00:07:08.950
ALEX DANILO: So we already
have small animation in SVG.

00:07:08.950 --> 00:07:11.360
And we have CSS animations
and transitions.

00:07:11.360 --> 00:07:14.040
So what actually happens
with Web Animations?

00:07:14.040 --> 00:07:15.700
Does it bring the
model together?

00:07:15.700 --> 00:07:17.192
Or they incompatible?

00:07:17.192 --> 00:07:18.900
How does it actually
work under the hood?

00:07:18.900 --> 00:07:20.566
BRIAN BIRTLES: Yeah,
so basically, we've

00:07:20.566 --> 00:07:23.310
tried to work out what are the
common features between the two

00:07:23.310 --> 00:07:25.440
and base the model
around that side.

00:07:25.440 --> 00:07:27.900
So it's feature
complete, with regards

00:07:27.900 --> 00:07:30.510
to everything in
both CSS and SVG.

00:07:30.510 --> 00:07:32.450
It's the union of those two.

00:07:32.450 --> 00:07:35.090
And then we aim to
just layer CSS and SVG

00:07:35.090 --> 00:07:38.210
as kind of syntactical
layers on top of that.

00:07:38.210 --> 00:07:40.100
So it's really just
the one unified one

00:07:40.100 --> 00:07:41.920
model for both of them.

00:07:41.920 --> 00:07:42.962
ALEX DANILO: OK, great.

00:07:42.962 --> 00:07:44.420
Now I know that
Chrome has actually

00:07:44.420 --> 00:07:45.940
implemented Web
Animations, and we've

00:07:45.940 --> 00:07:47.800
seen some really great
performance improvements

00:07:47.800 --> 00:07:48.350
on demos.

00:07:48.350 --> 00:07:51.220
So are we going to see this
in Firefox anytime soon?

00:07:51.220 --> 00:07:53.070
BRIAN BIRTLES: Yeah,
I'm working on it.

00:07:53.070 --> 00:07:55.312
So bits have already
landed in nightly.

00:07:55.312 --> 00:07:56.770
And it's coming
along with Firefox.

00:07:56.770 --> 00:07:58.811
We're on a different
subsets to Chrome initially.

00:07:58.811 --> 00:08:02.090
But yeah, we're definitely
have in sites the same subset

00:08:02.090 --> 00:08:03.700
that Chrome has
already released.

00:08:03.700 --> 00:08:06.060
So yes, you can expect
that someday soon.

00:08:06.060 --> 00:08:07.380
ALEX DANILO: All right, cool.

00:08:07.380 --> 00:08:08.727
So let me just ask you.

00:08:08.727 --> 00:08:09.810
What about other browsers?

00:08:09.810 --> 00:08:11.559
Do you think it'll
come to other browsers?

00:08:11.559 --> 00:08:13.935
BRIAN BIRTLES: I hope so.

00:08:13.935 --> 00:08:15.130
I really hope so.

00:08:15.130 --> 00:08:18.040
And I think, in the interim,
we can use a polyfill

00:08:18.040 --> 00:08:20.170
to work around that,
although it may not

00:08:20.170 --> 00:08:21.710
get quite the same performance.

00:08:21.710 --> 00:08:24.640
But I think there's a lot
of good reasons for browsers

00:08:24.640 --> 00:08:27.660
to implement that, both in
terms of exposing animation

00:08:27.660 --> 00:08:29.740
through their dev
tools, but also

00:08:29.740 --> 00:08:31.630
just in order to keep
up with the performance

00:08:31.630 --> 00:08:33.820
that they'll be sitting
in Chrome and Firefox.

00:08:33.820 --> 00:08:35.510
ALEX DANILO: Awesome.

00:08:35.510 --> 00:08:37.120
Gets started on Web
Animations today.

00:08:37.120 --> 00:08:37.820
It's usable.

00:08:37.820 --> 00:08:38.929
It's native in Chrome.

00:08:38.929 --> 00:08:40.340
It's coming in Firefox.

00:08:40.340 --> 00:08:43.240
Soon, every browser should
have it, fingers crossed.

00:08:43.240 --> 00:08:44.540
And yeah, give it a go.

00:08:48.824 --> 00:08:50.560
This year's conference,
Frank, there's

00:08:50.560 --> 00:08:53.460
been a lot of focus on
hardware accelerated approaches

00:08:53.460 --> 00:08:55.850
to web performance
and web graphics.

00:08:55.850 --> 00:08:58.669
So Internet Explorer
9, 10, and 11

00:08:58.669 --> 00:09:00.460
have really embraced
hardware acceleration.

00:09:00.460 --> 00:09:02.750
So one of the things
you spoke about

00:09:02.750 --> 00:09:06.410
was how IE breaks up
the layers in a web page

00:09:06.410 --> 00:09:08.870
and then uses the underlying
OS to do the compositing.

00:09:08.870 --> 00:09:11.481
Can you talk a little
bit about how that works?

00:09:11.481 --> 00:09:13.230
FRANK OLIVIER: So we
have an OS compositer

00:09:13.230 --> 00:09:18.310
that we use that renders
all the IE content.

00:09:18.310 --> 00:09:21.435
It's a very nice way for us
to make the browser very, very

00:09:21.435 --> 00:09:25.560
fast and enable some key
scenarios, like a SVG filter

00:09:25.560 --> 00:09:28.190
hardware acceleration,
for example.

00:09:28.190 --> 00:09:31.650
So this is a nice way for us to,
starting with IE 9 and IE 10,

00:09:31.650 --> 00:09:34.190
set the scene for building a
nice and fast touch-friendly

00:09:34.190 --> 00:09:34.910
mobile browser.

00:09:34.910 --> 00:09:36.610
ALEX DANILO: All
right, excellent.

00:09:36.610 --> 00:09:39.080
And another feature that I
thought was really interesting

00:09:39.080 --> 00:09:42.100
was, that currently,
the IE 11 actually

00:09:42.100 --> 00:09:44.900
enables YCbCr JPEG support.

00:09:44.900 --> 00:09:48.450
So it actually sends YCbCr to
the GPU, instead of RGB data.

00:09:48.450 --> 00:09:51.760
Now, that is aimed at
reducing memory bandwidth.

00:09:51.760 --> 00:09:54.162
So how does a web developer
actually use that feature?

00:09:54.162 --> 00:09:55.870
FRANK OLIVIER: It's
actually very simple.

00:09:55.870 --> 00:09:59.360
All you need to do in Photoshop,
when yoy do File, Save As JPEG,

00:09:59.360 --> 00:10:02.650
is just set the compression
to between 0 and 50.

00:10:02.650 --> 00:10:05.590
And that will do that setting.

00:10:05.590 --> 00:10:09.221
Or there's also a tool
called RIOT, Radical Image

00:10:09.221 --> 00:10:09.970
Optimization Tool.

00:10:09.970 --> 00:10:12.562
And that can do the
subsampling for you as well.

00:10:12.562 --> 00:10:13.520
ALEX DANILO: Excellent.

00:10:13.520 --> 00:10:16.040
And also, we all know the
multiscreen world is here--

00:10:16.040 --> 00:10:18.920
mobile phones, tablets, and
desktops, and everything.

00:10:18.920 --> 00:10:22.700
So how does IE address it, as
far as a compatibility features

00:10:22.700 --> 00:10:23.200
thing?

00:10:23.200 --> 00:10:25.241
Across the different
devices, how does that work?

00:10:25.241 --> 00:10:27.320
FRANK OLIVIER: So
like other browsers,

00:10:27.320 --> 00:10:30.627
I think, we have a
very big interest

00:10:30.627 --> 00:10:32.960
in keeping the web platform
the same across all devices.

00:10:32.960 --> 00:10:35.300
So we run the same code
across all devices.

00:10:35.300 --> 00:10:39.100
When we did WebGL, we did
it on the desktop first.

00:10:39.100 --> 00:10:41.470
And we compiled it for
mobile in one afternoon.

00:10:41.470 --> 00:10:43.660
So it's the same code
running in the same place.

00:10:43.660 --> 00:10:45.060
ALEX DANILO: OK, brilliant.

00:10:45.060 --> 00:10:46.392
Well, lovely to hear about it.

00:10:46.392 --> 00:10:47.600
There you go, web developers.

00:10:47.600 --> 00:10:49.340
Shrink you JPEGs,
using the YCbCr.

00:10:49.340 --> 00:10:51.070
It will save you
space on your site.

00:10:51.070 --> 00:10:53.740
It will run faster as a
result and work beautifully

00:10:53.740 --> 00:10:54.540
in all browsers.

00:10:57.600 --> 00:10:59.101
Now, Eric, there's
a lot of graphics

00:10:59.101 --> 00:11:00.808
that's been happening
in this conference.

00:11:00.808 --> 00:11:01.519
There's SVG.

00:11:01.519 --> 00:11:02.310
And there's Canvas.

00:11:02.310 --> 00:11:03.280
And there's WebGL.

00:11:03.280 --> 00:11:05.580
I understand you're the chair
of the SVG working group.

00:11:05.580 --> 00:11:10.375
So as a web developer, where
would you use SVG, as opposed,

00:11:10.375 --> 00:11:11.000
to say, Canvas.

00:11:11.000 --> 00:11:12.760
And what are the
advantages of it?

00:11:12.760 --> 00:11:15.320
ERIK DAHLSTROM: So one
of the main use cases

00:11:15.320 --> 00:11:20.450
we see right now is
icons and scalable vector

00:11:20.450 --> 00:11:23.770
resources for
websites, for icons,

00:11:23.770 --> 00:11:30.150
for imagery that's meant
to be panned and zoomed.

00:11:30.150 --> 00:11:33.070
This is one use case that
SVG is supremely suited

00:11:33.070 --> 00:11:37.110
for, as an image format,
which Canvas isn't.

00:11:39.810 --> 00:11:48.500
The other thing, I guess,
is smaller interactive web

00:11:48.500 --> 00:11:50.200
applications.

00:11:50.200 --> 00:11:53.049
Say you have a seating for a
theater or something like that.

00:11:53.049 --> 00:11:54.590
You have a seating
plan, and you want

00:11:54.590 --> 00:11:57.750
to be able to pick some seats.

00:11:57.750 --> 00:11:59.530
You need to know
where seats are,

00:11:59.530 --> 00:12:03.320
and it's easy, if it's
available in a document itself.

00:12:03.320 --> 00:12:07.290
Just add event listeners
as you would in HTML.

00:12:07.290 --> 00:12:11.460
So for applications that
aren't that complicated,

00:12:11.460 --> 00:12:14.300
with a relatively low
number of elements,

00:12:14.300 --> 00:12:16.680
that's a good use case for SVG.

00:12:16.680 --> 00:12:19.560
Whereas, if you
have graphics that

00:12:19.560 --> 00:12:22.690
require you to draw
a lot of elements,

00:12:22.690 --> 00:12:25.210
you have billions of
rectangles or points.

00:12:25.210 --> 00:12:28.991
Then Canvas is much
more suitable for that.

00:12:28.991 --> 00:12:30.240
ALEX DANILO: That makes sense.

00:12:30.240 --> 00:12:32.040
And also, I know the
SVG working group

00:12:32.040 --> 00:12:34.610
has been working hard on SVG 2.

00:12:34.610 --> 00:12:37.000
So web developers
have now become

00:12:37.000 --> 00:12:39.240
accustomed to SVG 1, which
is in all the browsers.

00:12:39.240 --> 00:12:40.410
But SVG 2 is coming.

00:12:40.410 --> 00:12:44.770
So can you tell us roughly
what SVG 2 brings to the table.

00:12:44.770 --> 00:12:47.740
ERIK DAHLSTROM: So
SVG 2 is continuing

00:12:47.740 --> 00:12:51.460
the work we did with SVG
1.1 Second Edition, which

00:12:51.460 --> 00:12:55.340
is basically trying
to smooth over

00:12:55.340 --> 00:13:00.250
all of the gaps between
HTML and CSS and SVG,

00:13:00.250 --> 00:13:02.950
so making the platform
a bit more consistent,

00:13:02.950 --> 00:13:07.350
dropping certain
things that we have

00:13:07.350 --> 00:13:10.460
in 1.1, which no longer apply.

00:13:10.460 --> 00:13:17.350
We had interfaces, for example,
for pausing the rendering,

00:13:17.350 --> 00:13:21.090
to be able to update lots
of elements in a DOM tree.

00:13:21.090 --> 00:13:24.320
Turns out, browsers these
days optimize for this anyway.

00:13:24.320 --> 00:13:26.600
So those interfaces don't apply.

00:13:26.600 --> 00:13:28.670
They don't do anything
useful anymore.

00:13:28.670 --> 00:13:31.080
So we could remove those.

00:13:31.080 --> 00:13:34.090
And it's clean-ups like that.

00:13:34.090 --> 00:13:39.820
And we're also trying to promote
more of the existing attributes

00:13:39.820 --> 00:13:42.210
to properties, so
that you can style

00:13:42.210 --> 00:13:45.660
like the width of a
rectangle with CSS, which

00:13:45.660 --> 00:13:48.550
makes doing certain
things easier.

00:13:48.550 --> 00:13:49.310
ALEX DANILO: OK.

00:13:49.310 --> 00:13:52.810
And do you ever see SVG being
hardware accelerated in Blink?

00:13:52.810 --> 00:13:55.850
ERIK DAHLSTROM: Yes, I think
that's the way of the future.

00:13:55.850 --> 00:13:58.660
I mean, it's always
going to have

00:13:58.660 --> 00:14:02.780
to have some parts like a
fall-back in software anyway.

00:14:02.780 --> 00:14:04.740
But certain things--
it's coming.

00:14:04.740 --> 00:14:05.720
It's going to be there.

00:14:05.720 --> 00:14:07.530
ALEX DANILO: So this
seems to be a recurring

00:14:07.530 --> 00:14:09.446
theme at the conference,
hardware exhilaration

00:14:09.446 --> 00:14:12.630
for everything,
especially mobile.

00:14:12.630 --> 00:14:13.630
Well, there you have it.

00:14:13.630 --> 00:14:14.740
That was "The Graphical Web."

00:14:14.740 --> 00:14:17.240
And these guys are building
better and better browsers just

00:14:17.240 --> 00:14:17.840
for you.

00:14:17.840 --> 00:14:23.590
[MUSIC PLAYING]

