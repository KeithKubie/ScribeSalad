WEBVTT
Kind: captions
Language: en

00:00:00.970 --> 00:00:08.730
[MUSIC PLAYING]

00:00:08.730 --> 00:00:09.150
BRUNO OLIVEIRA: Hello.

00:00:09.150 --> 00:00:11.810
My name is Bruno Oliveira, and I
work on the Play Games team.

00:00:11.810 --> 00:00:14.320
And we're here for a second
episode of "Play Games and

00:00:14.320 --> 00:00:16.670
NDK." So now, we're going
to talk about how to do

00:00:16.670 --> 00:00:19.380
achievements and leaderboards
from a native game.

00:00:19.380 --> 00:00:22.890
So to recap from the last
episode, what we have right

00:00:22.890 --> 00:00:25.250
now is you have your awesome
game activity, which derives

00:00:25.250 --> 00:00:26.320
from native activity.

00:00:26.320 --> 00:00:28.040
And then, we're implementing
it through the call backs.

00:00:28.040 --> 00:00:30.340
And that class actually
manages the

00:00:30.340 --> 00:00:31.670
other game helper object.

00:00:31.670 --> 00:00:34.690
So you're just hooking up the
call backs, and then the game

00:00:34.690 --> 00:00:38.060
helper is actually doing
the actual work.

00:00:38.060 --> 00:00:39.410
So how do you go ahead
and unlock an

00:00:39.410 --> 00:00:41.670
achievement from there?

00:00:41.670 --> 00:00:44.640
So to unlock an achievement,
first of all, the call that

00:00:44.640 --> 00:00:46.120
you want to make is
on GameClient.

00:00:46.120 --> 00:00:46.610
Client.

00:00:46.610 --> 00:00:48.600
You have a method that's called
unlockAchievement.

00:00:48.600 --> 00:00:50.085
So that's the method that you
want to call and get on

00:00:50.085 --> 00:00:51.020
GamesClient.

00:00:51.020 --> 00:00:52.740
So normally, this is how
you would do this.

00:00:52.740 --> 00:00:55.630
However, remember that your game
is going to be running on

00:00:55.630 --> 00:00:58.020
a game thread that's different
from the UI thread.

00:00:58.020 --> 00:01:00.630
So to prevent any
synchronization problems, what

00:01:00.630 --> 00:01:02.720
we're going to do is we're going
to write a method called

00:01:02.720 --> 00:01:04.900
postUnlockAchievement, and that
method is going to call

00:01:04.900 --> 00:01:06.250
runOnUIThread.

00:01:06.250 --> 00:01:09.200
And then that method is
going to invoke the

00:01:09.200 --> 00:01:11.670
unlockAchievement method
on the UI thread.

00:01:11.670 --> 00:01:14.650
So that's the method that we're
going to call from the

00:01:14.650 --> 00:01:15.780
native side.

00:01:15.780 --> 00:01:18.780
So next, since we have that
method, what we have to do is

00:01:18.780 --> 00:01:19.940
call it from native side.

00:01:19.940 --> 00:01:21.800
So to call it from the native
side, we're going to need the

00:01:21.800 --> 00:01:23.050
achievement IDs.

00:01:23.050 --> 00:01:26.440
The achievement IDs can
be obtained from

00:01:26.440 --> 00:01:27.420
the developer console.

00:01:27.420 --> 00:01:29.310
And they are these of funny
looking strings

00:01:29.310 --> 00:01:29.950
that you see here.

00:01:29.950 --> 00:01:31.850
So, these funny alphanumeric
strings.

00:01:31.850 --> 00:01:34.190
So we're going to have one
distinct string for each

00:01:34.190 --> 00:01:35.710
achievement that
your game has.

00:01:35.710 --> 00:01:39.260
So once we have those, in this
case, this would be a game

00:01:39.260 --> 00:01:41.090
where you prove theorems, and
then you advance in your

00:01:41.090 --> 00:01:43.260
academic career.

00:01:43.260 --> 00:01:45.480
So once you have those IDs,
all you have to do is call

00:01:45.480 --> 00:01:47.040
unlockAchievement
for those IDs.

00:01:47.040 --> 00:01:50.220
So first of all, you have to
initialize all the JNI stuff,

00:01:50.220 --> 00:01:51.770
so we're going to assume that
you have that ready.

00:01:51.770 --> 00:01:53.730
So if you don't know how to do
that, you can take a look at

00:01:53.730 --> 00:01:55.040
the last video.

00:01:55.040 --> 00:01:56.750
So you have your android
app structure.

00:01:56.750 --> 00:01:58.110
You have your JNI environment.

00:01:58.110 --> 00:02:01.120
We have the activity object
and the activity class.

00:02:01.120 --> 00:02:02.950
After you do that, all you
have to do is just make a

00:02:02.950 --> 00:02:05.640
simple JNI call to the
unlockAchievement method.

00:02:05.640 --> 00:02:07.670
So we're just getting
the method ready.

00:02:07.670 --> 00:02:11.080
Then we were allocating in Java
string that corresponds

00:02:11.080 --> 00:02:12.700
to that achievement ID.

00:02:12.700 --> 00:02:14.550
And then, we're making
the method call.

00:02:14.550 --> 00:02:17.050
And remember, and this is really
important, we are also

00:02:17.050 --> 00:02:22.310
deallocating the Java string
after we're done with it.

00:02:22.310 --> 00:02:24.530
And that's pretty much all
there is to unlocking an

00:02:24.530 --> 00:02:25.930
achievement.

00:02:25.930 --> 00:02:28.200
Also, you might want to
avoid repeated calls.

00:02:28.200 --> 00:02:30.240
Because JNI calls are
somewhat expensive.

00:02:30.240 --> 00:02:32.830
So if you're running a tight
game loop, and you are calling

00:02:32.830 --> 00:02:34.360
unlockAchievement all the time,
you probably want to

00:02:34.360 --> 00:02:37.440
avoid that overhead.

00:02:37.440 --> 00:02:41.260
So one thing that you can do is
actually keep a dictionary

00:02:41.260 --> 00:02:44.910
on the native side that tells
you which achievement you have

00:02:44.910 --> 00:02:47.020
you know you have unlocked, and
which ones you don't know

00:02:47.020 --> 00:02:48.200
if you have unlocked or not.

00:02:48.200 --> 00:02:50.320
Whenever you try to unlock an
achievement that you know you

00:02:50.320 --> 00:02:53.060
have unlocked, you can just
return and not do anything.

00:02:53.060 --> 00:02:54.890
So we can do that using
something like the string set

00:02:54.890 --> 00:02:57.640
class, which is great in every
way except the fact that it

00:02:57.640 --> 00:02:58.570
doesn't exist.

00:02:58.570 --> 00:03:00.860
So you actually have to
implement your own string set

00:03:00.860 --> 00:03:03.570
structure in SQL *PlusPlus
in any way that you wish.

00:03:03.570 --> 00:03:05.530
You can use the standard
template library, or you can

00:03:05.530 --> 00:03:06.650
use your own class.

00:03:06.650 --> 00:03:08.590
The important thing is,
avoid making JNI

00:03:08.590 --> 00:03:10.610
calls on every frame.

00:03:10.610 --> 00:03:13.260
This is one of the methods
you can use to do that.

00:03:13.260 --> 00:03:15.070
Now let's talk about
leaderboards.

00:03:15.070 --> 00:03:18.470
So when you have leaderboards,
that's pretty much the same as

00:03:18.470 --> 00:03:19.940
achievements, because
the method

00:03:19.940 --> 00:03:21.270
calls are pretty similar.

00:03:21.270 --> 00:03:23.940
So you have the postSubmitScore,
which is made

00:03:23.940 --> 00:03:25.560
in the same way as
postUnlockAchievement.

00:03:25.560 --> 00:03:27.640
So it's just runOnUiThread.

00:03:27.640 --> 00:03:30.120
And instead of that, we're
posting to the UI thread.

00:03:30.120 --> 00:03:31.760
And then on the UI thread,
we're calling

00:03:31.760 --> 00:03:33.010
GamesClient.SubmitScore.

00:03:34.820 --> 00:03:38.660
So that's what's actually
submitting the score.

00:03:38.660 --> 00:03:40.940
And then from native code, we're
going to write a very

00:03:40.940 --> 00:03:43.420
similar method as in
unlockAchievement, which

00:03:43.420 --> 00:03:47.120
simply gets the ID of that
method, and then makes a

00:03:47.120 --> 00:03:49.430
method called bestoftheScore
that you want to submit to the

00:03:49.430 --> 00:03:50.270
leaderboard.

00:03:50.270 --> 00:03:51.910
And then you call the
method, and you

00:03:51.910 --> 00:03:53.980
delete the local reference.

00:03:53.980 --> 00:03:55.430
And that's pretty much
all there is to it.

00:03:55.430 --> 00:03:56.720
Now we have achievements
and leaderboards

00:03:56.720 --> 00:03:58.670
in your native game.

00:03:58.670 --> 00:04:01.810
So thank you very much, and
please watch our next episode,

00:04:01.810 --> 00:04:04.980
in which we're going to talk
about how to do more

00:04:04.980 --> 00:04:06.910
complicated stuff on
the native side.

00:04:06.910 --> 00:04:08.160
Thank you.

