WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
Let's go run it and see.

00:00:02.000 --> 00:00:05.000
On the buggy code we get -1, -1, -1, -1.

00:00:05.000 --> 00:00:10.000
But if I fix the bug, then I get 5, -1, 8, -1.

00:00:10.000 --> 00:00:12.000
That means these first two--

00:00:12.000 --> 00:00:14.000
"haystack", "a" and "haystack", "empty"

00:00:14.000 --> 00:00:16.000
show off the bug,

00:00:16.000 --> 00:00:19.000
and the last two do not.

00:00:19.000 --> 00:00:21.000
So the correct answer was, first one

00:00:21.000 --> 00:00:23.000
and this other one on the left, but not the ones on the right.

00:00:23.000 --> 00:00:28.000
You can also reason through the program qualitatively to get a handle on this.

00:00:28.000 --> 00:00:31.000
We're only going to see this difference

00:00:31.000 --> 00:00:35.000
if last_pos is not equal to this_pos.

00:00:35.000 --> 00:00:38.000
Remember, this was the bug, and this version is correct.

00:00:38.000 --> 00:00:40.000
So in order to see the bug, this_pos

00:00:40.000 --> 00:00:42.000
will have to be different from last_pos,

00:00:42.000 --> 00:00:44.000
which means we will have to have

00:00:44.000 --> 00:00:47.000
found the string at least once.

00:00:47.000 --> 00:00:50.000
We find the "a"--we find the other "a"--so this is a good example,

00:00:50.000 --> 00:00:53.000
and then in fact you have to know a bit about Python to know

00:00:53.000 --> 00:00:55.000
what it means to try to find the empty string in something.

00:00:55.000 --> 00:00:58.000
But Python always says the empty string is present--

00:00:58.000 --> 00:01:02.000
present at offset zero--it's going to be present at offset 1--at offset 2--

00:01:02.000 --> 00:01:05.000
just like epsilon, it fits anywhere.

00:01:05.000 --> 00:01:07.000
So there's more than one "a" in the string.

00:01:07.000 --> 00:01:10.000
There's more than one empty string in "haystack".

00:01:10.000 --> 00:01:13.000
So these are both good test inputs to show off this bug.

00:01:13.000 --> 00:01:15.000
Since there's no "z" in "haystack",

00:01:15.000 --> 00:01:18.000
last_pos and this_pos are both -1, so we can't tell the difference.

00:01:18.000 --> 00:01:20.000
And since there's no "needle" in the empty string,

00:01:20.000 --> 00:01:22.000
last_pos and this_pos are both -1,

00:01:22.000 --> 00:01:24.000
so we can't tell the difference.

00:01:24.000 --> 09:59:59.000
Testing is not easy.

