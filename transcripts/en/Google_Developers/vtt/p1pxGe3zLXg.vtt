WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.110
&gt;&gt; Welcome to the YouTube Direct Deployment
Walkthrough. We'll start with the YouTube

00:00:04.110 --> 00:00:09.900
API developer registration. If you don't already
have a Google account, you could create one;

00:00:09.900 --> 00:00:25.220
otherwise, log in with your existing Google
accounts credentials. After logging in, you'll

00:00:25.220 --> 00:00:30.439
be taken to the developer registration form.
The organization name and country fields are

00:00:30.439 --> 00:00:40.270
mandatory. The other fields are optional.
Take the time to look through the YouTube

00:00:40.270 --> 00:00:47.600
API Terms of Service and after doing so, check
the "I agree to the terms and service above"

00:00:47.600 --> 00:00:59.130
box and click "Register".
After registering your account, you'll launch,

00:00:59.130 --> 00:01:04.420
"Register a New Product." Enter a name for
the product and, optionally, the Web site

00:01:04.420 --> 00:01:16.500
and description of that product. Then click
"Save" to generate a developer key. Next,

00:01:16.500 --> 00:01:25.680
we'll cover Registering with App Engine. Log
in with your existing Google account. If this

00:01:25.680 --> 00:01:33.620
is your first time using App Engine, you might
be asked to verify your account; otherwise,

00:01:33.620 --> 00:01:40.570
click the "Create an Application" button.
Chose an Application Identifier for your new

00:01:40.570 --> 00:02:01.480
App Engine Instance; this will be part of
the URL that you use and access the administration

00:02:01.480 --> 00:02:03.470
panel. Take a look through the App Engine
Terms of Service, when you're done, check

00:02:03.470 --> 00:02:20.950
"I accept these terms" and then click "Save."
Congratulations, you now have an App Engine

00:02:20.950 --> 00:02:27.320
Instance. The dashboard link will give you
more information about your App Engine Server.

00:02:27.320 --> 00:02:36.560
The next step is to Download the Eclipse Development
Environment. From the Downloads page, select

00:02:36.560 --> 00:02:44.900
the Eclipse IDE for Java EE Developer's link.
Download the file through your local mirror.

00:02:44.900 --> 00:02:51.850
This may take some time depending upon the
speed of your internet connection. Once the

00:02:51.850 --> 00:02:56.640
download is complete, you'll need to uncompress
the archive file and then you can open up

00:02:56.640 --> 00:03:08.850
the Eclipse application. If this is your first
time using Eclipse, you might want to visit

00:03:08.850 --> 00:03:16.090
Eclipse.org or use the online help to learn
more about the program. Next, we'll walk through

00:03:16.090 --> 00:03:28.959
installing some Eclipse Plugins. From the
help menu, chose Install New Software.

00:03:28.959 --> 00:03:34.900
The Google Plugin for Eclipse Web page has
a URL to use to install the plugin with Eclipse.

00:03:34.900 --> 00:03:42.040
Well, copy this URL to the clipboard. Back
at Eclipse, click "Add" then enter Google

00:03:42.040 --> 00:03:49.090
Plugin for the name and paste in the location
of the plugin. You'll see a list of different

00:03:49.090 --> 00:03:53.680
plugin components; though the version numbers
may not match what you see here. Select them

00:03:53.680 --> 00:04:08.790
all and then click "Next." Read through and
accept the license agreement and then click

00:04:08.790 --> 00:04:15.020
"Finish." After installation, click "Yes"
to restart your Eclipse environment. We'll

00:04:15.020 --> 00:04:33.419
now go through the same process; this time
for the Subclipse SVN Plugin. Visit the Subclipse

00:04:33.419 --> 00:04:45.710
Web site to get the Eclipse update site URL,
and copy it to the clipboard. Go back to Eclipse,

00:04:45.710 --> 00:04:56.190
click "Add" and then enter Subclipse for the
name and paste the URL into the location.

00:04:56.190 --> 00:05:09.370
Select all the components and then click "Next."
Click "Next" again. Read the license agreement

00:05:09.370 --> 00:05:22.381
and indicate your acceptance, then click "Finish."
Next stop is SVN Checkout. From Eclipse, go

00:05:22.381 --> 00:05:29.169
to "Window", then "Open Perspective" and then
"Other." Chose "SVN Repository Exploring"

00:05:29.169 --> 00:05:45.590
and then click "Ok." Visit the source tab
of the YouTubedirectcode.google.com page to

00:05:45.590 --> 00:05:56.310
get the URL to check out from SVN. Back in
Eclipse, right click the SVN Repositories

00:05:56.310 --> 00:06:05.930
Panel and chose New Repository Location. Paste
in the URL. Expand the new SVN Repository

00:06:05.930 --> 00:06:16.919
and right click on the YTD subfolder. Choose
"Checkout." You could keep the default settings

00:06:16.919 --> 00:06:24.240
and YTD will be checked out and some project
in your current Eclipse workspace. Let's run

00:06:24.240 --> 00:06:38.530
a local App Engine Web Server. Switch back
into the Java EE perspective. You'll notice

00:06:38.530 --> 00:06:44.820
that Eclipse says there's a Google App Engine
problem. This has to do with the missing configuration

00:06:44.820 --> 00:06:52.490
file that we'll soon take care of. From the
YTD project, find the "War" subfolder and

00:06:52.490 --> 00:06:59.919
then the "Web Info" subfolder underneath that.
Right click on the "App Engine Web default

00:06:59.919 --> 00:07:08.550
XML File" in this folder and chose "Copy";
then right click and chose "Paste." Name the

00:07:08.550 --> 00:07:24.410
new file appengine-Web.xml. Right click this
new file and choose "Open with Text Editor."

00:07:24.410 --> 00:07:36.509
There are several changes we need to make
to this file. First, we'll enter the name

00:07:36.509 --> 00:07:52.350
of the App Engine Instance in the application
XML tab. Next, we'll copy our YouTube API

00:07:52.350 --> 00:07:57.430
Developer Key and paste it into the document
as well. Storing the Developer Key in this

00:07:57.430 --> 00:08:02.070
document will ensure that it's always available
to our App Engine Application whether it's

00:08:02.070 --> 00:08:09.789
running on the local server or a deployed
instance. Let's also enter value for the YTClientID

00:08:09.789 --> 00:08:15.350
element. This value could be anything we want
and let's use this unique identifier when

00:08:15.350 --> 00:08:22.470
we make a request. After saving our changes,
we're ready to run our Web application in

00:08:22.470 --> 00:08:31.949
the local App Engine Server. By default, this
Web server will run on your current machine,

00:08:31.949 --> 00:08:43.769
host name, local host, and Port 8080. If you
visit that address from a Web browser on this

00:08:43.769 --> 00:08:51.959
current machine, you'll be able to see with
blankindex.html file. If you visit /admin,

00:08:51.959 --> 00:08:57.880
you'll be able to see the admin panel. There's
no user authentication on the Development

00:08:57.880 --> 00:09:07.579
Web Server, so you just log in as an administrator.
We'll now cover YouTube Account creation.

00:09:07.579 --> 00:09:11.350
If you don't already have a YouTube account,
we're going to walk through the steps in creating

00:09:11.350 --> 00:09:17.470
one. If you do already have a YouTube account,
please make sure that it's linked to the Google

00:09:17.470 --> 00:09:24.189
account that you use to register your YouTube
Developer Key. Your YouTube account will contain

00:09:24.189 --> 00:09:29.249
playlists that are automatically generated
for each assignment you create. When you approve

00:09:29.249 --> 00:09:33.939
a video submission from the assignment, it
will be automatically added to each playlist.

00:09:33.939 --> 00:09:41.889
When creating a new YouTube account, fill
in the request information, read the terms

00:09:41.889 --> 00:09:56.129
of service and then create the account. At
this point, we'll link our existing Google

00:09:56.129 --> 00:10:14.480
account to our new YouTube account. Now that
our YouTube account is created and properly

00:10:14.480 --> 00:10:20.649
linked, we go back to the local Web server,
to the configuration panel and associate our

00:10:20.649 --> 00:10:28.749
YouTube account with our YouTube Direct Instance.
We'll now cover App Engine Deployment. The

00:10:28.749 --> 00:10:35.170
Google Plugin for Eclipse makes deploying
to App Engine easy. Just click on the App

00:10:35.170 --> 00:10:39.850
Engine icon in the toolbar. Enter your email
address and password for your Google account

00:10:39.850 --> 00:10:48.880
and then click "Deploy." The plugin will take
care of packaging all your source code, uploading

00:10:48.880 --> 00:11:09.679
it to the App Engine Servers and starting
up a new JavaServer environment. Once the

00:11:09.679 --> 00:11:16.110
deployment is complete, you could visit it
on Web from any machine. The URL will be the

00:11:16.110 --> 00:11:25.470
App Engine identifier you registered earlier,
.appspot.com/admin. You'll have to log in

00:11:25.470 --> 00:11:30.980
with your Google account that you use to create
the App Engine Instance. If you to permit

00:11:30.980 --> 00:11:39.829
additional Google accounts to login, you could
do so from the App Engine dashboard; add additional

00:11:39.829 --> 00:11:48.610
accounts as developers to your App Engine
instance. Next stop is AuthSub Registration.

00:11:48.610 --> 00:11:56.329
AuthSub is Google's technology for delegating
access to Google or YouTube accounts. Unless

00:11:56.329 --> 00:12:01.529
you register your domain in advance to use
AuthSub, you and your users will see a warning

00:12:01.529 --> 00:12:10.809
message when trying to log in. To register,
visit www.google.com/accounts/ManageDomains.

00:12:10.809 --> 00:12:30.249
Once there, enter the host name of your App
Engine Instance and then click "Add domain."

00:12:30.249 --> 00:12:44.610
Click on the link that appears at the bottom
to be taken to the next step on the registration.

00:12:44.610 --> 00:12:51.689
After logging in again, you'll be presented
with information about verifying your domain.

00:12:51.689 --> 00:12:57.559
We'll register by copying this metatag and
pasting it into the index.html file for our

00:12:57.559 --> 00:13:14.089
App Engine Instance. Paste it within the head
element of the HTML document. Save your changes

00:13:14.089 --> 00:13:25.170
and then redeploy your App Engine Instance
to production. After your code is redeployed,

00:13:25.170 --> 00:13:42.819
go back to the verify ownership page, and
click on the "Verify" button. Take a look

00:13:42.819 --> 00:14:00.610
through the terms of service, and when you're
done, click on the "I agree to the terms of

00:14:00.610 --> 00:14:05.879
service" button. On the next page, enter your
App Engine Web site's full URL, starting with

00:14:05.879 --> 00:14:07.369
HTTP in the target URL path prefix field.
It's very important that you don't use HTTPS

00:14:07.369 --> 00:14:14.250
as the URL prefix. Click "Save" when you're
done. If you completed the steps properly,

00:14:14.250 --> 00:14:19.410
you should be able to go back to your production
App Engine Instance, go to the configuration

00:14:19.410 --> 00:14:27.399
tab and authenticate. The warning message
should be gone and you could click "Allow

00:14:27.399 --> 00:14:35.149
Access." Let's focus on YouTube Direct Configuration.
Your YouTube API setting should all be filled

00:14:35.149 --> 00:14:41.660
in at this point. Video Branding Settings
control what tags and descriptions are shown

00:14:41.660 --> 00:14:47.170
in videos that are approved by your YouTube
Direct Instance. Mouse over the question mark

00:14:47.170 --> 00:14:55.949
for more information about any setting. The
Moderation/Submission Settings control whether

00:14:55.949 --> 00:15:01.670
videos need to be exclusively approved by
your editors, whether you accept new and existing

00:15:01.670 --> 00:15:08.079
videos or just new videos and notification
emails, like you receive for new submissions

00:15:08.079 --> 00:15:13.519
and it get automatically sent out to submitters
when their videos are moderated. You need

00:15:13.519 --> 00:15:17.999
to make sure that the email address you use
is registered as a developer for your App

00:15:17.999 --> 00:15:23.820
Engine Application. Otherwise, App Engine
will refuse to send email using that address.

00:15:23.820 --> 00:15:37.649
YouTube URL and Article URL will be replaced
by actual URLs when your emails are sent.

00:15:37.649 --> 00:15:44.980
This way, recipients will know exactly which
YouTube video and article the email refers

00:15:44.980 --> 00:16:09.929
to. The Submission Widget Settings let you
control the HTML that is displayed before

00:16:09.929 --> 00:16:18.769
users submit videos and the post-submit thank
you message. Once you're done, click "Save

00:16:18.769 --> 00:16:29.910
Changes." The next step is Assignment Creation.
Go to the Assignments tab and click "New Assignment."

00:16:29.910 --> 00:16:36.189
The categories correspond to YouTube video
categories. An active status means that new

00:16:36.189 --> 00:16:40.999
submissions will be accepted. A description
will be used for the YouTube playlist. After

00:16:40.999 --> 00:16:48.119
clicking "Create," you'll see the new assignment
show up in the list. The embed button will

00:16:48.119 --> 00:16:53.129
display code that you could use to solicit
YouTube direct submissions from your Web pages.

00:16:53.129 --> 00:16:57.939
This code is generic and you might want to
end up customizing it to suit your specific

00:16:57.939 --> 00:17:04.579
purposes. For now, let's copy it and paste
it into a new HTML document to illustrate

00:17:04.579 --> 00:17:10.780
how it could be used. We'll create the new
page in Eclipse and end up deploying it along

00:17:10.780 --> 00:17:19.600
with our production App Engine Instance. Once
we've created the new file, we'll put in a

00:17:19.600 --> 00:17:40.400
simple HTML structure. We'll copy the embed
code from the admin panel and paste it in

00:17:40.400 --> 00:17:48.910
into the body element of our new page. Once
that's done, we click on the App Engine Button

00:17:48.910 --> 00:18:06.680
on the toolbar. Save changes and deploy your
code to App Engine. Now that the codes are

00:18:06.680 --> 00:18:15.380
deployed, let's visit the page in your App
Engine Instance.

00:18:15.380 --> 00:18:20.700
The page will have the default graphics and
layout, but you're free to customize the code

00:18:20.700 --> 00:18:25.560
to suit your needs. Clicking on the "Submit
your response" called action (ph) image will

00:18:25.560 --> 00:18:32.190
load up the submission widget. Under the hood,
an Iframe is created on your Web page that

00:18:32.190 --> 00:18:37.910
loads content from your App Engine Instance.
Clicking on login will take the user through

00:18:37.910 --> 00:18:44.180
the AuthSub authentication flow. When the
user clicks "Allow access," this generates

00:18:44.180 --> 00:18:49.080
an authentication token that YouTube direct
can use to upload videos into their account.

00:18:49.080 --> 00:18:55.920
Clicking "Upload a Video" will initiate the
user upload flow. That brings us to Moderating

00:18:55.920 --> 00:19:06.971
Submissions. After receiving a submission,
we'll see it appear within the submissions

00:19:06.971 --> 00:19:07.971
tab of the admin panel. If you've configured
email notifications of new submissions, you'll

00:19:07.971 --> 00:19:12.560
also see it in your email account. The email
will contain a link to the actual YouTube

00:19:12.560 --> 00:19:22.108
video, the name of the YouTube user and the
assignment ID for which the video was submitted.

00:19:22.108 --> 00:19:25.170
Back in the submissions tab at the admin panel,
you can click "Details" next to the submission

00:19:25.170 --> 00:19:30.070
to find out more information about the video.
Assuming the video has been processed and

00:19:30.070 --> 00:19:39.260
accepted by YouTube, you could play a video
preview here. Once you're ready to moderate

00:19:39.260 --> 00:19:45.690
the video, click "Unreviewed" in the status
column and chose approved or rejected. You

00:19:45.690 --> 00:19:49.630
could also choose Spam. Press return to save
your changes.

