WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.192
[MUSIC PLAYING]

00:00:04.560 --> 00:00:06.807
NICK FELKER: Hello,
I'm Nick Felker.

00:00:06.807 --> 00:00:08.640
You may remember me
from such YouTube videos

00:00:08.640 --> 00:00:11.160
as "Integrating Smart Home
Devices with the Google

00:00:11.160 --> 00:00:14.757
Assistant," which you can
find in the description below.

00:00:14.757 --> 00:00:17.340
Today, I'm going to talk about
how to use the new report state

00:00:17.340 --> 00:00:20.790
API to create a better user
experience for smart displays

00:00:20.790 --> 00:00:22.524
and mobile phones.

00:00:22.524 --> 00:00:24.940
When you integrate your smart
home devices with the Google

00:00:24.940 --> 00:00:26.920
Assistant, these
devices are registered

00:00:26.920 --> 00:00:29.650
in the Home Graph, a database
which stores and provides

00:00:29.650 --> 00:00:32.920
contextual information about
the user's home and the devices

00:00:32.920 --> 00:00:34.760
inside.

00:00:34.760 --> 00:00:37.280
The Google Assistant sends
commands to your web hook,

00:00:37.280 --> 00:00:38.690
receiving intents,
and responding

00:00:38.690 --> 00:00:41.930
by taking action on devices
or responding with information

00:00:41.930 --> 00:00:43.670
about a user's devices.

00:00:43.670 --> 00:00:46.520
When I tell my Google Home,
make my workshop cooler,

00:00:46.520 --> 00:00:48.410
my server will
receive a query intent

00:00:48.410 --> 00:00:51.350
to get the current temperature,
then an execute intent

00:00:51.350 --> 00:00:54.210
to set the thermostat
to a lower set point.

00:00:54.210 --> 00:00:56.770
The Assistant is now
coming to smart displays,

00:00:56.770 --> 00:00:59.680
offering a rich visual
interface to users,

00:00:59.680 --> 00:01:01.390
allowing them to
control their devices,

00:01:01.390 --> 00:01:03.410
and check on their state.

00:01:03.410 --> 00:01:05.450
In a visual interface,
users usually

00:01:05.450 --> 00:01:07.386
expect a more
immediate response,

00:01:07.386 --> 00:01:09.260
because they're looking
at the screen instead

00:01:09.260 --> 00:01:11.610
of doing something else.

00:01:11.610 --> 00:01:14.520
Waiting for a query request
to get the current set point

00:01:14.520 --> 00:01:17.400
will result a
noticeable visual delay.

00:01:17.400 --> 00:01:19.140
To improve the
user experience, we

00:01:19.140 --> 00:01:21.570
are introducing a new API
that will allow Smart Home

00:01:21.570 --> 00:01:23.850
developers to report the
state of their devices

00:01:23.850 --> 00:01:25.740
to the Home Graph proactively.

00:01:25.740 --> 00:01:27.240
This will allow the
Google Assistant

00:01:27.240 --> 00:01:29.280
to reduce the number
of server calls

00:01:29.280 --> 00:01:31.710
and result in a more streamlined
experience for developers

00:01:31.710 --> 00:01:34.250
and users.

00:01:34.250 --> 00:01:37.080
In the Google Cloud Console,
create a new service account

00:01:37.080 --> 00:01:37.980
key.

00:01:37.980 --> 00:01:40.646
This will be used to make secure
connections between your server

00:01:40.646 --> 00:01:43.770
and the Home Graph that transfer
a device's current state.

00:01:43.770 --> 00:01:46.492
You will use this key when
making a call using gRPC.

00:01:46.492 --> 00:01:48.450
The request will be signed
with the private key

00:01:48.450 --> 00:01:50.200
from your service account.

00:01:50.200 --> 00:01:53.040
You can also send states using
a post request and adjacent web

00:01:53.040 --> 00:01:53.850
token.

00:01:53.850 --> 00:01:55.440
s you report the
device state, we

00:01:55.440 --> 00:01:57.880
recommend setting the
entire state of the device.

00:01:57.880 --> 00:01:59.640
For example, if you
have a smart switch,

00:01:59.640 --> 00:02:02.732
you only need to send the on
state for the on/off trait.

00:02:02.732 --> 00:02:05.190
When reporting the state for
the temperature setting trait,

00:02:05.190 --> 00:02:07.648
you'll need to send not just
the thermostat temperature set

00:02:07.648 --> 00:02:11.050
point but also the thermostat
temperature ambient field.

00:02:11.050 --> 00:02:15.354
Now, when I take a look
at my smart display,

00:02:15.354 --> 00:02:17.520
I can see the temperature
of the thermostat updating

00:02:17.520 --> 00:02:19.600
in real time.

00:02:19.600 --> 00:02:20.830
Cool.

00:02:20.830 --> 00:02:22.780
We have a sample on
GitHub for a dashboard

00:02:22.780 --> 00:02:25.600
which lets you view test devices
and states that are currently

00:02:25.600 --> 00:02:28.009
in the Home Graph
to let you debug.

00:02:28.009 --> 00:02:29.800
Now that you're assigning
the device state,

00:02:29.800 --> 00:02:31.424
you will also need
to know when to stop

00:02:31.424 --> 00:02:33.130
sending the device state.

00:02:33.130 --> 00:02:35.950
When the user unlinks their
data from the Google Assistant,

00:02:35.950 --> 00:02:37.920
you will receive a
disconnect intent

00:02:37.920 --> 00:02:40.560
so that you can update
your server logic.

00:02:40.560 --> 00:02:43.150
Now, you should be all set
for giving users a better

00:02:43.150 --> 00:02:45.160
experience with the port state.

00:02:45.160 --> 00:02:49.750
I can make the workshop a
little cooler, make the workshop

00:02:49.750 --> 00:02:53.470
a lot cooler, make the
workshop super cool.

00:02:53.470 --> 00:02:54.610
Ah, perfect.

00:02:54.610 --> 00:02:55.900
[SLEIGH BELLS RING]

00:02:55.900 --> 00:02:57.820
I hope this video
helped explain how

00:02:57.820 --> 00:03:00.111
to get started with integrating
your Smart Home devices

00:03:00.111 --> 00:03:01.486
with the Google Assistant.

00:03:01.486 --> 00:03:03.886
Visit the Documentation to
learn more about Smart Home

00:03:03.886 --> 00:03:05.260
and join our
community to discuss

00:03:05.260 --> 00:03:06.940
this with other developers.

00:03:06.940 --> 00:03:07.899
Thank you for watching.

00:03:07.899 --> 00:03:09.481
Make sure to subscribe
to this channel

00:03:09.481 --> 00:03:10.720
for more awesome videos.

00:03:10.720 --> 00:03:14.070
[MUSIC PLAYING]

