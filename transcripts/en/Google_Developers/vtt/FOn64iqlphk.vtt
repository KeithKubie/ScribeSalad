WEBVTT
Kind: captions
Language: en

00:00:04.100 --> 00:00:05.330
MAGNUS HYTTSTEN: Where am I?

00:00:05.330 --> 00:00:08.214
ROBOT: Oh no, building
45 at Googleplex.

00:00:08.214 --> 00:00:09.880
MAGNUS HYTTSTEN: And
how did I get here?

00:00:09.880 --> 00:00:11.090
ROBOT: Gosh, you tell me.

00:00:11.090 --> 00:00:14.135
You just came here
and started speaking.

00:00:14.135 --> 00:00:16.010
MAGNUS HYTTSTEN: And
what are we going again?

00:00:16.010 --> 00:00:17.110
ROBOT: Good gravy.

00:00:17.110 --> 00:00:19.760
Presenting Google
Play Services 7.3.

00:00:19.760 --> 00:00:20.570
Get to work.

00:00:20.570 --> 00:00:21.820
MAGNUS HYTTSTEN: That's right.

00:00:26.110 --> 00:00:29.520
Welcome to release 7.3
of Google Play Services.

00:00:29.520 --> 00:00:33.160
And as usual, we've packed
it with lots of new features

00:00:33.160 --> 00:00:35.980
that will allow you
to build better apps,

00:00:35.980 --> 00:00:38.430
because that's what
this is all about.

00:00:38.430 --> 00:00:41.370
And big announcement for wear
is that you can now connect

00:00:41.370 --> 00:00:43.420
multiple wearables to a phone.

00:00:43.420 --> 00:00:44.630
Let's check that out.

00:00:47.220 --> 00:00:50.140
I can't decide which wearable
I'm going to wear today.

00:00:50.140 --> 00:00:53.060
I kind of like that black one.

00:00:53.060 --> 00:00:55.500
But that one is better
if I'm going jogging.

00:00:55.500 --> 00:00:57.320
Heck, I can't decide.

00:00:57.320 --> 00:01:00.170
They're all so nice.

00:01:00.170 --> 00:01:04.120
Hot dog, since I have Google
Play Services 7.3 installed,

00:01:04.120 --> 00:01:07.362
I can wear them all
at the same time!

00:01:07.362 --> 00:01:09.640
So this capability
allows you to create

00:01:09.640 --> 00:01:13.540
a network of wearable nodes,
all connected to single phone.

00:01:13.540 --> 00:01:15.450
And since they can be
more than two nodes,

00:01:15.450 --> 00:01:19.170
we are introducing the Channel
API in the wear data API.

00:01:19.170 --> 00:01:22.930
Which allows you to send large
files, or even stream data,

00:01:22.930 --> 00:01:24.735
between two individual nodes.

00:01:24.735 --> 00:01:26.630
But how would you
know which node

00:01:26.630 --> 00:01:28.220
you should communicate with?

00:01:28.220 --> 00:01:31.270
For example, if you wanted
to download something.

00:01:31.270 --> 00:01:33.050
That's the job of
the new Capability

00:01:33.050 --> 00:01:37.180
API, which allows your app to
locate node supporting a given

00:01:37.180 --> 00:01:40.990
capability over to the many
new things in Google Fit.

00:01:40.990 --> 00:01:44.890
Many things in life are
not based on a daily cycle.

00:01:44.890 --> 00:01:49.810
For example, the work week,
the tax year, or a new year.

00:01:49.810 --> 00:01:52.650
Fitness, however,
is all about today,

00:01:52.650 --> 00:01:56.600
like how many steps
have you taken today?

00:01:56.600 --> 00:02:00.660
How many calories have you
put in your body today?

00:02:00.660 --> 00:02:04.930
How many push ups
have you done today?

00:02:04.930 --> 00:02:07.190
So to make these
today things easier,

00:02:07.190 --> 00:02:10.360
the History API now
provides this method.

00:02:10.360 --> 00:02:14.680
readDailyTotal, which aggregates
data for a given data type

00:02:14.680 --> 00:02:17.060
from midnight to the
current time of day.

00:02:17.060 --> 00:02:19.470
So you just put in
the data type there,

00:02:19.470 --> 00:02:21.750
and then it returns
to daily total.

00:02:21.750 --> 00:02:24.890
For example, how many
steps have I taken today?

00:02:24.890 --> 00:02:27.220
And since everyone's
always talking

00:02:27.220 --> 00:02:32.166
about how many steps
everyone's taken every day,

00:02:32.166 --> 00:02:35.210
the TYPE_STEP_COUNT_DELTA
data type

00:02:35.210 --> 00:02:38.550
can now be queried by
all apps on all devices

00:02:38.550 --> 00:02:41.360
without requiring
any authentication.

00:02:41.360 --> 00:02:44.290
But fitness is not
only about activity.

00:02:44.290 --> 00:02:47.240
It is also about what
you put into the body.

00:02:47.240 --> 00:02:49.520
So therefore,
nutrition data types

00:02:49.520 --> 00:02:51.980
have been added, enabling
you to record things

00:02:51.980 --> 00:02:56.890
like protein, fat, cholesterol,
sodium, you name it.

00:02:56.890 --> 00:03:00.190
Turning to location where you
now specify a maximum wait

00:03:00.190 --> 00:03:03.430
time for location updates,
which enables the system

00:03:03.430 --> 00:03:06.240
to batch location
updates together

00:03:06.240 --> 00:03:08.870
to reduce battery consumption.

00:03:08.870 --> 00:03:10.460
And remember, the
location settings

00:03:10.460 --> 00:03:12.580
dialog we introduced
in the last release?

00:03:12.580 --> 00:03:14.640
Well, in addition
to location updates,

00:03:14.640 --> 00:03:17.460
it is now also possible
to get notified

00:03:17.460 --> 00:03:20.820
when location settings are
changing by getting location

00:03:20.820 --> 00:03:22.750
availability up dates.

00:03:22.750 --> 00:03:25.030
This release also
has enhancement

00:03:25.030 --> 00:03:28.140
to the common package where
a Google API client now

00:03:28.140 --> 00:03:33.770
allows you to add optional APIs
through the addApiIfAvailable.

00:03:33.770 --> 00:03:37.100
So if you previously had to
have multiple connections

00:03:37.100 --> 00:03:40.060
flow for the phone and
the wearable, for example,

00:03:40.060 --> 00:03:44.310
you can now use this feature
to simplify your code.

00:03:44.310 --> 00:03:45.810
And that's it for this time.

00:03:45.810 --> 00:03:48.650
But check out these
resources to get the details.

00:03:48.650 --> 00:03:51.010
And remember,
Google Play Services

00:03:51.010 --> 00:03:53.630
enables you to
build better apps.

00:03:53.630 --> 00:03:56.220
And now it's your turn to
go out there and create

00:03:56.220 --> 00:03:58.190
these great apps.

00:03:58.190 --> 00:04:01.270
And don't forget to
tell us all about.

