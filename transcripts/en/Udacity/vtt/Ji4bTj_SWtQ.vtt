WEBVTT
Kind: captions
Language: en

00:00:00.110 --> 00:00:01.410
So let's take a quick look at the

00:00:01.410 --> 00:00:05.510
filter playground method where you've been adding your filters.

00:00:05.510 --> 00:00:08.600
And here you see I've added the filter for

00:00:08.600 --> 00:00:11.560
month equals six which basically says, give me the

00:00:11.560 --> 00:00:14.580
conferences in June then I deployed that to

00:00:14.580 --> 00:00:17.640
AppSpot. And I went to the API's explorer for

00:00:17.640 --> 00:00:20.780
my project, actually out on AppSpot this is not

00:00:20.780 --> 00:00:25.290
in local host. Chose my method, my playground method,

00:00:25.290 --> 00:00:31.540
executed it and you see I get an error and it's a backend error. So one thing we

00:00:31.540 --> 00:00:36.930
can do at this point is to go look at the index viewer in the admin console. To

00:00:36.930 --> 00:00:40.740
get there, you go to the console.developers.google.com, you select

00:00:40.740 --> 00:00:43.550
your project and then over here you choose cloud

00:00:43.550 --> 00:00:48.130
data store and then you choose indexes. You see

00:00:48.130 --> 00:00:50.470
the indexes that have already been created. And these are

00:00:50.470 --> 00:00:54.000
what we'd expect, we already searched for this ancestor query,

00:00:54.000 --> 00:00:57.400
which basically give me all conferences for a user, where the

00:00:57.400 --> 00:01:00.250
user was the ancestor of the conference. And then we have

00:01:00.250 --> 00:01:03.160
this other one where we search for city topics and name

00:01:03.160 --> 00:01:07.040
and if you've never actually deployed your app with this

00:01:07.040 --> 00:01:10.570
filter to Appspot. You won't see this filter, but that's okay,

00:01:10.570 --> 00:01:13.010
that's fine. Now what I want you to do is to

00:01:13.010 --> 00:01:15.480
go back to Eclipse and I want you to look at

00:01:15.480 --> 00:01:21.090
the automatically generated index configuration file. So to get to that,

00:01:21.090 --> 00:01:26.630
sorry this is a little hard to see but you go into the Target directory. You

00:01:26.630 --> 00:01:30.537
drill down into Conference-1.0. Then into Web-inf,

00:01:30.537 --> 00:01:33.579
then into app engine generated and you

00:01:33.579 --> 00:01:39.100
see data store-indexes-auto. Now exactly what you

00:01:39.100 --> 00:01:40.490
see might be different to what I've

00:01:40.490 --> 00:01:44.050
got here but it's perfectly fine if it's blank.

00:01:44.050 --> 00:01:46.650
It may already have some index configurations in it.

00:01:47.840 --> 00:01:50.510
Now what I'm going to do is run Conference

00:01:50.510 --> 00:01:54.710
Central on Local Host. Okay my Dev App Server's

00:01:54.710 --> 00:01:57.060
now running. So, I'm going to go to the API's

00:01:57.060 --> 00:01:59.920
Explorer on Local Host. Make sure you're at, in

00:01:59.920 --> 00:02:02.520
the API's Explorer on Local Host not back in

00:02:02.520 --> 00:02:05.470
your App on App spot. Again, we drill down,

00:02:05.470 --> 00:02:08.000
we got to our filter playground method. I get

00:02:08.000 --> 00:02:10.840
a response, I don't actually have any items that match

00:02:10.840 --> 00:02:13.980
that query but this doesn't matter at this point.

00:02:13.980 --> 00:02:16.600
So now I go back to Eclipse. I'm going to look

00:02:16.600 --> 00:02:20.100
at my index configuration file again and you see

00:02:20.100 --> 00:02:24.082
that this index configuration entry has been automatically added for

00:02:24.082 --> 00:02:27.820
me. I didn't write this, app engine routed when it

00:02:27.820 --> 00:02:30.530
run the query on local host. So, I'm searching for

00:02:30.530 --> 00:02:34.790
kind Conference, no ancestor. I'm searching for filtering by

00:02:34.790 --> 00:02:38.060
city, filtering by month, filtering by topics, filtering by

00:02:38.060 --> 00:02:40.890
name. I should not filtering by name, I'm sorting

00:02:40.890 --> 00:02:43.760
by name but to all intents and purposes a

00:02:43.760 --> 00:02:46.630
sort order is a filter. So now, I'm going to

00:02:46.630 --> 00:02:50.120
go run my app again on App Spot. When

00:02:50.120 --> 00:02:53.060
you deploy your application to App Spot, the updated

00:02:53.060 --> 00:02:55.950
index configuration file will be deployed with it and

00:02:55.950 --> 00:02:58.790
App Engine will start to build your new index. Back

00:02:58.790 --> 00:03:01.360
in the index viewer page in the admin console for

00:03:01.360 --> 00:03:03.590
my app running on App Spot, I see that my

00:03:03.590 --> 00:03:08.660
new index is preparing. Now if I actually run this query

00:03:08.660 --> 00:03:11.740
again I'll still get an error and I'll keep getting

00:03:11.740 --> 00:03:15.440
an error until it's finished preparing. It needs to be

00:03:15.440 --> 00:03:19.130
ready to serve before I can run the query. So

00:03:19.130 --> 00:03:20.950
to get ready for the query I'm just going to go

00:03:20.950 --> 00:03:23.600
ahead and make sure I've got some conferences that will satisfy

00:03:23.600 --> 00:03:29.230
the query. So I'm searching for conferences, in London about medical innovations

00:03:29.230 --> 00:03:32.758
happening in June. If you made any changes in your query

00:03:32.758 --> 00:03:37.783
property you'll need to create a conference that satisfies your query criteria.

00:03:37.783 --> 00:03:44.902
[BLANK_AUDIO]

00:03:44.902 --> 00:03:46.937
Okay, let's go and see how our index is

00:03:46.937 --> 00:03:50.910
doing, see if it's built yet. Okay, good, it

00:03:50.910 --> 00:03:53.550
has. It's no longer preparing, so it's ready to

00:03:53.550 --> 00:03:57.590
serve. So, over here in the API's Explorer for

00:03:57.590 --> 00:04:04.060
my app on App Spot, I will run my query again. Execute it. Oh good and it found

00:04:04.060 --> 00:04:06.830
the conference I just created. Which matches all the

00:04:06.830 --> 00:04:10.260
filters on the query. Good. One thing to mention

00:04:10.260 --> 00:04:12.210
is that when you deploy an app that needs a new

00:04:12.210 --> 00:04:17.360
index, the request to update the index actually goes into a queue

00:04:17.360 --> 00:04:21.010
along with other similar requests, so your index may not get

00:04:21.010 --> 00:04:24.360
updated immediately. And that could be why it may take a little

00:04:24.360 --> 00:04:27.140
bit longer to prepare than you think if might need to.

00:04:27.140 --> 00:04:29.780
It's not because it take a long time to build the index,

00:04:29.780 --> 00:04:32.380
although sometimes it can but generally the wait time is just

00:04:32.380 --> 00:04:34.710
waiting for your request to get to the top of the queue.

00:04:35.960 --> 00:04:41.480
So another thing that you could do instead of running your query on local host

00:04:41.480 --> 00:04:43.110
is that you can create your own index

00:04:43.110 --> 00:04:49.160
configuration, called datastore/indexes.xml so whatever indexes are defined

00:04:49.160 --> 00:04:52.170
in either the datastore/index. Says file that

00:04:52.170 --> 00:04:56.020
you created or in the order generated, datastore

00:04:56.020 --> 00:04:59.050
dash indexes dash auto. When you deploy your

00:04:59.050 --> 00:05:01.450
app to App Spot both those index configuration

00:05:01.450 --> 00:05:04.100
files will go up and any indexes defined

00:05:04.100 --> 00:05:06.160
in either of those files will be created

00:05:06.160 --> 00:05:08.220
and you'll be able to serve queries that

00:05:08.220 --> 00:05:11.100
use the filters defined in those index configuration files

