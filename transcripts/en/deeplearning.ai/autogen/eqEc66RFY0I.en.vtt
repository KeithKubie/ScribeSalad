WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:03.530 align:start position:0%
 
hello<00:00:00.960><c> and</c><00:00:01.410><c> welcome</c><00:00:01.800><c> back</c><00:00:01.829><c> in</c><00:00:02.520><c> this</c><00:00:03.300><c> week</c>

00:00:03.530 --> 00:00:03.540 align:start position:0%
hello and welcome back in this week
 

00:00:03.540 --> 00:00:06.200 align:start position:0%
hello and welcome back in this week
we're<00:00:03.840><c> going</c><00:00:03.990><c> to</c><00:00:04.170><c> go</c><00:00:04.500><c> over</c><00:00:04.529><c> the</c><00:00:05.400><c> basics</c><00:00:06.029><c> of</c>

00:00:06.200 --> 00:00:06.210 align:start position:0%
we're going to go over the basics of
 

00:00:06.210 --> 00:00:09.320 align:start position:0%
we're going to go over the basics of
neural<00:00:06.960><c> network</c><00:00:07.379><c> programming</c><00:00:08.130><c> it</c><00:00:08.790><c> turns</c><00:00:09.090><c> out</c>

00:00:09.320 --> 00:00:09.330 align:start position:0%
neural network programming it turns out
 

00:00:09.330 --> 00:00:11.270 align:start position:0%
neural network programming it turns out
that<00:00:09.570><c> when</c><00:00:09.750><c> you</c><00:00:09.780><c> implement</c><00:00:10.380><c> a</c><00:00:10.559><c> neural</c><00:00:10.980><c> network</c>

00:00:11.270 --> 00:00:11.280 align:start position:0%
that when you implement a neural network
 

00:00:11.280 --> 00:00:13.610 align:start position:0%
that when you implement a neural network
there<00:00:12.000><c> are</c><00:00:12.059><c> some</c><00:00:12.300><c> implementation</c><00:00:13.139><c> techniques</c>

00:00:13.610 --> 00:00:13.620 align:start position:0%
there are some implementation techniques
 

00:00:13.620 --> 00:00:15.470 align:start position:0%
there are some implementation techniques
that<00:00:13.889><c> are</c><00:00:13.920><c> going</c><00:00:14.099><c> to</c><00:00:14.190><c> be</c><00:00:14.340><c> really</c><00:00:14.820><c> important</c>

00:00:15.470 --> 00:00:15.480 align:start position:0%
that are going to be really important
 

00:00:15.480 --> 00:00:18.650 align:start position:0%
that are going to be really important
for<00:00:15.770><c> example</c><00:00:16.770><c> if</c><00:00:17.279><c> you</c><00:00:17.520><c> have</c><00:00:17.730><c> a</c><00:00:17.760><c> training</c><00:00:18.330><c> set</c>

00:00:18.650 --> 00:00:18.660 align:start position:0%
for example if you have a training set
 

00:00:18.660 --> 00:00:21.679 align:start position:0%
for example if you have a training set
of<00:00:18.869><c> M</c><00:00:19.140><c> training</c><00:00:20.010><c> examples</c><00:00:20.160><c> you</c><00:00:21.119><c> might</c><00:00:21.270><c> be</c><00:00:21.449><c> used</c>

00:00:21.679 --> 00:00:21.689 align:start position:0%
of M training examples you might be used
 

00:00:21.689 --> 00:00:23.960 align:start position:0%
of M training examples you might be used
to<00:00:21.840><c> processing</c><00:00:22.529><c> the</c><00:00:22.650><c> training</c><00:00:22.980><c> set</c><00:00:23.189><c> by</c><00:00:23.580><c> having</c>

00:00:23.960 --> 00:00:23.970 align:start position:0%
to processing the training set by having
 

00:00:23.970 --> 00:00:26.990 align:start position:0%
to processing the training set by having
a<00:00:24.060><c> for</c><00:00:24.449><c> loop</c><00:00:24.630><c> step</c><00:00:25.260><c> through</c><00:00:25.590><c> your</c><00:00:25.830><c> M</c><00:00:26.340><c> training</c>

00:00:26.990 --> 00:00:27.000 align:start position:0%
a for loop step through your M training
 

00:00:27.000 --> 00:00:29.509 align:start position:0%
a for loop step through your M training
examples<00:00:27.260><c> but</c><00:00:28.260><c> it</c><00:00:28.349><c> turns</c><00:00:28.560><c> out</c><00:00:28.710><c> that</c><00:00:29.010><c> when</c><00:00:29.429><c> you</c>

00:00:29.509 --> 00:00:29.519 align:start position:0%
examples but it turns out that when you
 

00:00:29.519 --> 00:00:31.490 align:start position:0%
examples but it turns out that when you
implement<00:00:29.820><c> it</c><00:00:30.150><c> in</c><00:00:30.210><c> your</c><00:00:30.240><c> network</c><00:00:30.779><c> you</c><00:00:31.230><c> usually</c>

00:00:31.490 --> 00:00:31.500 align:start position:0%
implement it in your network you usually
 

00:00:31.500 --> 00:00:34.010 align:start position:0%
implement it in your network you usually
want<00:00:31.980><c> to</c><00:00:32.070><c> process</c><00:00:32.669><c> your</c><00:00:33.090><c> entire</c><00:00:33.480><c> training</c><00:00:33.750><c> set</c>

00:00:34.010 --> 00:00:34.020 align:start position:0%
want to process your entire training set
 

00:00:34.020 --> 00:00:36.920 align:start position:0%
want to process your entire training set
without<00:00:34.680><c> using</c><00:00:35.190><c> an</c><00:00:35.399><c> explicit</c><00:00:35.940><c> for</c><00:00:36.390><c> loop</c><00:00:36.600><c> to</c>

00:00:36.920 --> 00:00:36.930 align:start position:0%
without using an explicit for loop to
 

00:00:36.930 --> 00:00:39.110 align:start position:0%
without using an explicit for loop to
loop<00:00:36.960><c> over</c><00:00:37.380><c> your</c><00:00:37.980><c> entire</c><00:00:38.100><c> training</c><00:00:38.579><c> set</c><00:00:38.850><c> so</c>

00:00:39.110 --> 00:00:39.120 align:start position:0%
loop over your entire training set so
 

00:00:39.120 --> 00:00:41.209 align:start position:0%
loop over your entire training set so
you<00:00:39.510><c> see</c><00:00:39.719><c> how</c><00:00:39.899><c> to</c><00:00:39.960><c> do</c><00:00:40.170><c> that</c><00:00:40.320><c> in</c><00:00:40.590><c> this</c><00:00:40.920><c> week's</c>

00:00:41.209 --> 00:00:41.219 align:start position:0%
you see how to do that in this week's
 

00:00:41.219 --> 00:00:44.840 align:start position:0%
you see how to do that in this week's
materials<00:00:42.110><c> another</c><00:00:43.110><c> idea</c><00:00:43.559><c> when</c><00:00:44.129><c> you</c><00:00:44.309><c> organize</c>

00:00:44.840 --> 00:00:44.850 align:start position:0%
materials another idea when you organize
 

00:00:44.850 --> 00:00:47.990 align:start position:0%
materials another idea when you organize
the<00:00:45.090><c> computation</c><00:00:45.809><c> of</c><00:00:46.020><c> a</c><00:00:46.350><c> new</c><00:00:46.680><c> network</c><00:00:47.000><c> usually</c>

00:00:47.990 --> 00:00:48.000 align:start position:0%
the computation of a new network usually
 

00:00:48.000 --> 00:00:49.610 align:start position:0%
the computation of a new network usually
you<00:00:48.180><c> have</c><00:00:48.420><c> what's</c><00:00:48.840><c> called</c><00:00:49.110><c> a</c><00:00:49.230><c> forward</c>

00:00:49.610 --> 00:00:49.620 align:start position:0%
you have what's called a forward
 

00:00:49.620 --> 00:00:52.069 align:start position:0%
you have what's called a forward
password<00:00:50.190><c> for</c><00:00:50.370><c> propagation</c><00:00:50.820><c> set</c><00:00:51.180><c> followed</c><00:00:51.870><c> by</c>

00:00:52.069 --> 00:00:52.079 align:start position:0%
password for propagation set followed by
 

00:00:52.079 --> 00:00:53.959 align:start position:0%
password for propagation set followed by
a<00:00:52.320><c> backward</c><00:00:52.800><c> pass</c><00:00:53.039><c> or</c><00:00:53.340><c> what's</c><00:00:53.520><c> called</c><00:00:53.730><c> a</c>

00:00:53.959 --> 00:00:53.969 align:start position:0%
a backward pass or what's called a
 

00:00:53.969 --> 00:00:56.779 align:start position:0%
a backward pass or what's called a
backward<00:00:54.660><c> propagation</c><00:00:55.289><c> step</c><00:00:55.590><c> and</c><00:00:55.800><c> so</c><00:00:56.340><c> in</c><00:00:56.579><c> this</c>

00:00:56.779 --> 00:00:56.789 align:start position:0%
backward propagation step and so in this
 

00:00:56.789 --> 00:00:57.590 align:start position:0%
backward propagation step and so in this
week's<00:00:57.059><c> material</c>

00:00:57.590 --> 00:00:57.600 align:start position:0%
week's material
 

00:00:57.600 --> 00:01:00.020 align:start position:0%
week's material
you<00:00:57.809><c> also</c><00:00:57.989><c> get</c><00:00:58.350><c> an</c><00:00:58.440><c> intuition</c><00:00:58.829><c> about</c><00:00:59.100><c> why</c><00:00:59.489><c> the</c>

00:01:00.020 --> 00:01:00.030 align:start position:0%
you also get an intuition about why the
 

00:01:00.030 --> 00:01:02.479 align:start position:0%
you also get an intuition about why the
computations<00:01:00.750><c> in</c><00:01:00.960><c> learning</c><00:01:01.920><c> in</c><00:01:02.100><c> a</c><00:01:02.250><c> neural</c>

00:01:02.479 --> 00:01:02.489 align:start position:0%
computations in learning in a neural
 

00:01:02.489 --> 00:01:04.729 align:start position:0%
computations in learning in a neural
network<00:01:02.640><c> can</c><00:01:03.000><c> be</c><00:01:03.359><c> organized</c><00:01:03.840><c> in</c><00:01:04.110><c> this</c><00:01:04.290><c> board</c>

00:01:04.729 --> 00:01:04.739 align:start position:0%
network can be organized in this board
 

00:01:04.739 --> 00:01:07.219 align:start position:0%
network can be organized in this board
propagation<00:01:05.369><c> and</c><00:01:05.549><c> a</c><00:01:06.150><c> separate</c><00:01:06.720><c> backward</c>

00:01:07.219 --> 00:01:07.229 align:start position:0%
propagation and a separate backward
 

00:01:07.229 --> 00:01:10.250 align:start position:0%
propagation and a separate backward
propagation<00:01:08.150><c> for</c><00:01:09.150><c> this</c><00:01:09.360><c> week's</c><00:01:09.540><c> materials</c><00:01:10.080><c> I</c>

00:01:10.250 --> 00:01:10.260 align:start position:0%
propagation for this week's materials I
 

00:01:10.260 --> 00:01:12.170 align:start position:0%
propagation for this week's materials I
want<00:01:10.500><c> to</c><00:01:10.650><c> convey</c><00:01:11.040><c> these</c><00:01:11.220><c> ideas</c><00:01:11.640><c> using</c>

00:01:12.170 --> 00:01:12.180 align:start position:0%
want to convey these ideas using
 

00:01:12.180 --> 00:01:14.300 align:start position:0%
want to convey these ideas using
logistic<00:01:12.810><c> regression</c><00:01:13.560><c> in</c><00:01:13.740><c> order</c><00:01:14.040><c> to</c><00:01:14.130><c> make</c><00:01:14.220><c> the</c>

00:01:14.300 --> 00:01:14.310 align:start position:0%
logistic regression in order to make the
 

00:01:14.310 --> 00:01:16.999 align:start position:0%
logistic regression in order to make the
ideas<00:01:14.610><c> easier</c><00:01:15.090><c> to</c><00:01:15.180><c> understand</c><00:01:15.600><c> but</c><00:01:16.200><c> even</c><00:01:16.500><c> if</c>

00:01:16.999 --> 00:01:17.009 align:start position:0%
ideas easier to understand but even if
 

00:01:17.009 --> 00:01:18.980 align:start position:0%
ideas easier to understand but even if
you've<00:01:17.400><c> seen</c><00:01:17.640><c> logistic</c><00:01:18.060><c> regression</c><00:01:18.509><c> before</c><00:01:18.810><c> I</c>

00:01:18.980 --> 00:01:18.990 align:start position:0%
you've seen logistic regression before I
 

00:01:18.990 --> 00:01:20.600 align:start position:0%
you've seen logistic regression before I
think<00:01:19.259><c> that</c><00:01:19.590><c> there</c><00:01:19.799><c> will</c><00:01:19.890><c> be</c><00:01:19.920><c> some</c><00:01:20.189><c> new</c><00:01:20.460><c> and</c>

00:01:20.600 --> 00:01:20.610 align:start position:0%
think that there will be some new and
 

00:01:20.610 --> 00:01:22.160 align:start position:0%
think that there will be some new and
interesting<00:01:20.700><c> ideas</c><00:01:21.330><c> for</c><00:01:21.509><c> you</c><00:01:21.570><c> to</c><00:01:21.600><c> pick</c><00:01:21.810><c> up</c><00:01:21.990><c> in</c>

00:01:22.160 --> 00:01:22.170 align:start position:0%
interesting ideas for you to pick up in
 

00:01:22.170 --> 00:01:25.070 align:start position:0%
interesting ideas for you to pick up in
this<00:01:22.409><c> week's</c><00:01:22.619><c> material</c><00:01:22.880><c> so</c><00:01:23.880><c> that</c><00:01:24.210><c> let's</c><00:01:24.900><c> get</c>

00:01:25.070 --> 00:01:25.080 align:start position:0%
this week's material so that let's get
 

00:01:25.080 --> 00:01:27.590 align:start position:0%
this week's material so that let's get
started<00:01:25.560><c> logistic</c><00:01:26.220><c> regression</c><00:01:26.880><c> is</c><00:01:27.119><c> an</c>

00:01:27.590 --> 00:01:27.600 align:start position:0%
started logistic regression is an
 

00:01:27.600 --> 00:01:30.649 align:start position:0%
started logistic regression is an
algorithm<00:01:28.170><c> for</c><00:01:28.500><c> binary</c><00:01:28.860><c> classification</c><00:01:29.729><c> so</c>

00:01:30.649 --> 00:01:30.659 align:start position:0%
algorithm for binary classification so
 

00:01:30.659 --> 00:01:32.749 align:start position:0%
algorithm for binary classification so
let's<00:01:30.930><c> start</c><00:01:31.200><c> by</c><00:01:31.380><c> setting</c><00:01:31.439><c> up</c><00:01:31.950><c> the</c><00:01:32.280><c> problem</c>

00:01:32.749 --> 00:01:32.759 align:start position:0%
let's start by setting up the problem
 

00:01:32.759 --> 00:01:34.969 align:start position:0%
let's start by setting up the problem
here's<00:01:33.240><c> an</c><00:01:33.420><c> example</c><00:01:33.750><c> of</c><00:01:34.140><c> a</c><00:01:34.740><c> binary</c>

00:01:34.969 --> 00:01:34.979 align:start position:0%
here's an example of a binary
 

00:01:34.979 --> 00:01:37.520 align:start position:0%
here's an example of a binary
classification<00:01:35.700><c> problem</c><00:01:36.060><c> you</c><00:01:36.930><c> might</c><00:01:37.110><c> have</c><00:01:37.350><c> an</c>

00:01:37.520 --> 00:01:37.530 align:start position:0%
classification problem you might have an
 

00:01:37.530 --> 00:01:41.960 align:start position:0%
classification problem you might have an
input<00:01:37.799><c> of</c><00:01:38.280><c> an</c><00:01:39.000><c> image</c><00:01:39.360><c> like</c><00:01:40.079><c> that</c><00:01:40.140><c> and</c><00:01:40.710><c> one</c><00:01:41.670><c> to</c>

00:01:41.960 --> 00:01:41.970 align:start position:0%
input of an image like that and one to
 

00:01:41.970 --> 00:01:44.990 align:start position:0%
input of an image like that and one to
output<00:01:42.570><c> a</c><00:01:42.720><c> label</c><00:01:43.200><c> to</c><00:01:43.860><c> recognize</c><00:01:44.399><c> this</c><00:01:44.700><c> image</c>

00:01:44.990 --> 00:01:45.000 align:start position:0%
output a label to recognize this image
 

00:01:45.000 --> 00:01:47.810 align:start position:0%
output a label to recognize this image
as<00:01:45.360><c> being</c><00:01:45.750><c> either</c><00:01:46.020><c> a</c><00:01:46.439><c> cat</c><00:01:46.799><c> in</c><00:01:47.189><c> which</c><00:01:47.369><c> case</c><00:01:47.579><c> you</c>

00:01:47.810 --> 00:01:47.820 align:start position:0%
as being either a cat in which case you
 

00:01:47.820 --> 00:01:50.840 align:start position:0%
as being either a cat in which case you
output<00:01:48.210><c> one</c><00:01:48.509><c> or</c><00:01:48.720><c> non-cat</c><00:01:49.590><c> in</c><00:01:50.250><c> which</c><00:01:50.399><c> case</c><00:01:50.640><c> you</c>

00:01:50.840 --> 00:01:50.850 align:start position:0%
output one or non-cat in which case you
 

00:01:50.850 --> 00:01:53.810 align:start position:0%
output one or non-cat in which case you
hope<00:01:51.030><c> with</c><00:01:51.210><c> zero</c><00:01:51.659><c> and</c><00:01:51.869><c> we're</c><00:01:52.500><c> going</c><00:01:52.710><c> to</c><00:01:52.829><c> use</c><00:01:53.130><c> Y</c>

00:01:53.810 --> 00:01:53.820 align:start position:0%
hope with zero and we're going to use Y
 

00:01:53.820 --> 00:01:58.219 align:start position:0%
hope with zero and we're going to use Y
to<00:01:54.600><c> denote</c><00:01:54.750><c> the</c><00:01:55.500><c> output</c><00:01:55.880><c> label</c><00:01:56.880><c> let's</c><00:01:57.840><c> look</c><00:01:58.049><c> at</c>

00:01:58.219 --> 00:01:58.229 align:start position:0%
to denote the output label let's look at
 

00:01:58.229 --> 00:02:00.410 align:start position:0%
to denote the output label let's look at
how<00:01:58.409><c> an</c><00:01:58.560><c> image</c><00:01:58.920><c> is</c><00:01:59.189><c> represented</c><00:02:00.000><c> in</c><00:02:00.270><c> a</c>

00:02:00.410 --> 00:02:00.420 align:start position:0%
how an image is represented in a
 

00:02:00.420 --> 00:02:03.050 align:start position:0%
how an image is represented in a
computer<00:02:00.600><c> to</c><00:02:01.560><c> store</c><00:02:01.770><c> an</c><00:02:01.920><c> image</c><00:02:02.100><c> your</c><00:02:02.520><c> computer</c>

00:02:03.050 --> 00:02:03.060 align:start position:0%
computer to store an image your computer
 

00:02:03.060 --> 00:02:04.999 align:start position:0%
computer to store an image your computer
suppose<00:02:03.450><c> three</c><00:02:03.930><c> separate</c><00:02:04.469><c> matrices</c>

00:02:04.999 --> 00:02:05.009 align:start position:0%
suppose three separate matrices
 

00:02:05.009 --> 00:02:07.819 align:start position:0%
suppose three separate matrices
corresponding<00:02:05.729><c> to</c><00:02:06.450><c> the</c><00:02:06.570><c> red</c><00:02:06.810><c> green</c><00:02:07.259><c> and</c><00:02:07.530><c> blue</c>

00:02:07.819 --> 00:02:07.829 align:start position:0%
corresponding to the red green and blue
 

00:02:07.829 --> 00:02:11.570 align:start position:0%
corresponding to the red green and blue
color<00:02:08.520><c> channels</c><00:02:09.030><c> of</c><00:02:09.209><c> this</c><00:02:09.360><c> image</c><00:02:10.039><c> so</c><00:02:11.039><c> if</c><00:02:11.340><c> your</c>

00:02:11.570 --> 00:02:11.580 align:start position:0%
color channels of this image so if your
 

00:02:11.580 --> 00:02:13.280 align:start position:0%
color channels of this image so if your
input<00:02:11.819><c> image</c><00:02:12.360><c> is</c><00:02:12.629><c> 60</c>

00:02:13.280 --> 00:02:13.290 align:start position:0%
input image is 60
 

00:02:13.290 --> 00:02:16.399 align:start position:0%
input image is 60
four<00:02:13.409><c> pixels</c><00:02:13.769><c> by</c><00:02:14.099><c> 64</c><00:02:14.819><c> pixels</c><00:02:15.000><c> then</c><00:02:15.989><c> you</c><00:02:16.200><c> would</c>

00:02:16.399 --> 00:02:16.409 align:start position:0%
four pixels by 64 pixels then you would
 

00:02:16.409 --> 00:02:20.959 align:start position:0%
four pixels by 64 pixels then you would
have<00:02:16.590><c> three</c><00:02:17.540><c> 64</c><00:02:18.540><c> by</c><00:02:19.140><c> 64</c><00:02:19.969><c> matrices</c>

00:02:20.959 --> 00:02:20.969 align:start position:0%
have three 64 by 64 matrices
 

00:02:20.969 --> 00:02:24.050 align:start position:0%
have three 64 by 64 matrices
corresponding<00:02:21.750><c> to</c><00:02:22.530><c> the</c><00:02:22.680><c> red</c><00:02:23.189><c> green</c><00:02:23.579><c> and</c><00:02:23.849><c> blue</c>

00:02:24.050 --> 00:02:24.060 align:start position:0%
corresponding to the red green and blue
 

00:02:24.060 --> 00:02:26.479 align:start position:0%
corresponding to the red green and blue
pixel<00:02:24.569><c> intensity</c><00:02:24.959><c> values</c><00:02:25.560><c> for</c><00:02:26.069><c> your</c><00:02:26.219><c> image</c>

00:02:26.479 --> 00:02:26.489 align:start position:0%
pixel intensity values for your image
 

00:02:26.489 --> 00:02:28.910 align:start position:0%
pixel intensity values for your image
although<00:02:27.390><c> to</c><00:02:27.450><c> make</c><00:02:27.840><c> these</c><00:02:28.019><c> from</c><00:02:28.230><c> a</c><00:02:28.349><c> slide</c><00:02:28.620><c> I</c>

00:02:28.910 --> 00:02:28.920 align:start position:0%
although to make these from a slide I
 

00:02:28.920 --> 00:02:31.190 align:start position:0%
although to make these from a slide I
drew<00:02:29.159><c> these</c><00:02:29.310><c> as</c><00:02:29.519><c> much</c><00:02:29.819><c> smaller</c><00:02:30.239><c> matrices</c><00:02:30.810><c> so</c>

00:02:31.190 --> 00:02:31.200 align:start position:0%
drew these as much smaller matrices so
 

00:02:31.200 --> 00:02:33.289 align:start position:0%
drew these as much smaller matrices so
these<00:02:31.379><c> are</c><00:02:31.560><c> actually</c><00:02:31.890><c> 5</c><00:02:32.340><c> by</c><00:02:32.489><c> 4</c><00:02:32.849><c> matrices</c>

00:02:33.289 --> 00:02:33.299 align:start position:0%
these are actually 5 by 4 matrices
 

00:02:33.299 --> 00:02:36.619 align:start position:0%
these are actually 5 by 4 matrices
rather<00:02:33.720><c> than</c><00:02:34.019><c> 64</c><00:02:34.560><c> by</c><00:02:34.709><c> 64</c><00:02:34.739><c> so</c><00:02:35.579><c> to</c><00:02:36.000><c> turn</c><00:02:36.329><c> these</c>

00:02:36.619 --> 00:02:36.629 align:start position:0%
rather than 64 by 64 so to turn these
 

00:02:36.629 --> 00:02:39.920 align:start position:0%
rather than 64 by 64 so to turn these
pixel<00:02:37.170><c> intensity</c><00:02:37.530><c> values</c><00:02:38.030><c> into</c><00:02:39.030><c> a</c><00:02:39.269><c> feature</c>

00:02:39.920 --> 00:02:39.930 align:start position:0%
pixel intensity values into a feature
 

00:02:39.930 --> 00:02:42.800 align:start position:0%
pixel intensity values into a feature
vector<00:02:40.129><c> what</c><00:02:41.129><c> we're</c><00:02:41.250><c> going</c><00:02:41.430><c> to</c><00:02:41.489><c> do</c><00:02:41.730><c> is</c><00:02:42.060><c> unroll</c>

00:02:42.800 --> 00:02:42.810 align:start position:0%
vector what we're going to do is unroll
 

00:02:42.810 --> 00:02:46.250 align:start position:0%
vector what we're going to do is unroll
all<00:02:43.109><c> of</c><00:02:43.379><c> these</c><00:02:43.500><c> pixel</c><00:02:43.950><c> values</c><00:02:44.400><c> into</c><00:02:44.969><c> a</c><00:02:45.260><c> input</c>

00:02:46.250 --> 00:02:46.260 align:start position:0%
all of these pixel values into a input
 

00:02:46.260 --> 00:02:50.599 align:start position:0%
all of these pixel values into a input
feature<00:02:46.530><c> vector</c><00:02:46.980><c> X</c><00:02:47.280><c> so</c><00:02:47.730><c> to</c><00:02:48.950><c> unroll</c><00:02:49.950><c> all</c><00:02:50.280><c> of</c>

00:02:50.599 --> 00:02:50.609 align:start position:0%
feature vector X so to unroll all of
 

00:02:50.609 --> 00:02:52.729 align:start position:0%
feature vector X so to unroll all of
these<00:02:50.760><c> pixel</c><00:02:51.269><c> intensity</c><00:02:51.659><c> values</c><00:02:51.810><c> into</c><00:02:52.709><c> a</c>

00:02:52.729 --> 00:02:52.739 align:start position:0%
these pixel intensity values into a
 

00:02:52.739 --> 00:02:55.280 align:start position:0%
these pixel intensity values into a
feature<00:02:53.370><c> vector</c><00:02:53.549><c> what</c><00:02:54.389><c> we're</c><00:02:54.510><c> going</c><00:02:54.689><c> to</c><00:02:54.750><c> do</c><00:02:54.959><c> is</c>

00:02:55.280 --> 00:02:55.290 align:start position:0%
feature vector what we're going to do is
 

00:02:55.290 --> 00:02:58.550 align:start position:0%
feature vector what we're going to do is
define<00:02:55.739><c> a</c><00:02:56.069><c> feature</c><00:02:56.909><c> vector</c><00:02:57.030><c> X</c><00:02:57.560><c> corresponding</c>

00:02:58.550 --> 00:02:58.560 align:start position:0%
define a feature vector X corresponding
 

00:02:58.560 --> 00:03:00.289 align:start position:0%
define a feature vector X corresponding
to<00:02:58.709><c> this</c><00:02:58.829><c> dimension</c><00:02:59.340><c> as</c><00:02:59.459><c> follows</c><00:02:59.879><c> which</c><00:03:00.150><c> is</c>

00:03:00.289 --> 00:03:00.299 align:start position:0%
to this dimension as follows which is
 

00:03:00.299 --> 00:03:03.050 align:start position:0%
to this dimension as follows which is
going<00:03:00.510><c> to</c><00:03:00.629><c> take</c><00:03:00.810><c> all</c><00:03:00.989><c> the</c><00:03:01.139><c> pixel</c><00:03:01.470><c> values</c><00:03:01.919><c> 2</c><00:03:02.669><c> 5</c><00:03:02.879><c> 5</c>

00:03:03.050 --> 00:03:03.060 align:start position:0%
going to take all the pixel values 2 5 5
 

00:03:03.060 --> 00:03:08.210 align:start position:0%
going to take all the pixel values 2 5 5
2<00:03:03.569><c> 3</c><00:03:03.599><c> 1</c><00:03:04.019><c> and</c><00:03:04.260><c> so</c><00:03:04.829><c> on</c><00:03:04.859><c> 2</c><00:03:05.639><c> 5</c><00:03:05.879><c> 5</c><00:03:06.090><c> 2</c><00:03:06.780><c> 3</c><00:03:07.019><c> 1</c><00:03:07.260><c> and</c><00:03:07.530><c> so</c><00:03:08.189><c> on</c>

00:03:08.210 --> 00:03:08.220 align:start position:0%
2 3 1 and so on 2 5 5 2 3 1 and so on
 

00:03:08.220 --> 00:03:10.610 align:start position:0%
2 3 1 and so on 2 5 5 2 3 1 and so on
until<00:03:08.819><c> we've</c><00:03:09.000><c> listed</c><00:03:09.569><c> all</c><00:03:09.840><c> the</c><00:03:09.900><c> red</c><00:03:10.169><c> pixels</c>

00:03:10.610 --> 00:03:10.620 align:start position:0%
until we've listed all the red pixels
 

00:03:10.620 --> 00:03:14.449 align:start position:0%
until we've listed all the red pixels
and<00:03:10.919><c> then</c><00:03:11.040><c> eventually</c><00:03:11.370><c> to</c><00:03:11.609><c> 5</c><00:03:11.909><c> 5</c><00:03:12.090><c> 1</c><00:03:12.389><c> 3</c><00:03:12.450><c> 4</c><00:03:12.900><c> 2</c><00:03:13.169><c> 5</c><00:03:13.709><c> 5</c><00:03:13.919><c> 1</c>

00:03:14.449 --> 00:03:14.459 align:start position:0%
and then eventually to 5 5 1 3 4 2 5 5 1
 

00:03:14.459 --> 00:03:17.449 align:start position:0%
and then eventually to 5 5 1 3 4 2 5 5 1
3<00:03:14.489><c> 4</c><00:03:15.000><c> and</c><00:03:15.239><c> so</c><00:03:15.269><c> on</c><00:03:15.599><c> until</c><00:03:16.530><c> we</c><00:03:16.560><c> get</c><00:03:16.799><c> a</c><00:03:16.859><c> very</c><00:03:17.159><c> long</c>

00:03:17.449 --> 00:03:17.459 align:start position:0%
3 4 and so on until we get a very long
 

00:03:17.459 --> 00:03:20.390 align:start position:0%
3 4 and so on until we get a very long
feature<00:03:17.819><c> vector</c><00:03:18.299><c> listing</c><00:03:19.290><c> out</c><00:03:19.440><c> all</c><00:03:19.769><c> the</c><00:03:20.040><c> red</c>

00:03:20.390 --> 00:03:20.400 align:start position:0%
feature vector listing out all the red
 

00:03:20.400 --> 00:03:24.140 align:start position:0%
feature vector listing out all the red
green<00:03:20.879><c> and</c><00:03:21.239><c> blue</c><00:03:21.510><c> pixel</c><00:03:22.319><c> intensity</c><00:03:23.040><c> values</c><00:03:23.909><c> of</c>

00:03:24.140 --> 00:03:24.150 align:start position:0%
green and blue pixel intensity values of
 

00:03:24.150 --> 00:03:28.670 align:start position:0%
green and blue pixel intensity values of
this<00:03:24.449><c> image</c><00:03:24.799><c> so</c><00:03:25.799><c> if</c><00:03:26.129><c> this</c><00:03:26.400><c> image</c><00:03:26.970><c> is</c><00:03:27.239><c> a</c><00:03:27.530><c> 64</c><00:03:28.530><c> by</c>

00:03:28.670 --> 00:03:28.680 align:start position:0%
this image so if this image is a 64 by
 

00:03:28.680 --> 00:03:32.180 align:start position:0%
this image so if this image is a 64 by
64<00:03:28.709><c> image</c><00:03:29.579><c> the</c><00:03:30.120><c> total</c><00:03:30.780><c> dimension</c><00:03:31.650><c> of</c><00:03:31.889><c> this</c>

00:03:32.180 --> 00:03:32.190 align:start position:0%
64 image the total dimension of this
 

00:03:32.190 --> 00:03:37.250 align:start position:0%
64 image the total dimension of this
vector<00:03:32.639><c> X</c><00:03:32.819><c> will</c><00:03:33.599><c> be</c><00:03:33.750><c> 64</c><00:03:34.620><c> by</c><00:03:35.370><c> 64</c><00:03:35.449><c> by</c><00:03:36.449><c> 3</c><00:03:36.870><c> because</c>

00:03:37.250 --> 00:03:37.260 align:start position:0%
vector X will be 64 by 64 by 3 because
 

00:03:37.260 --> 00:03:40.129 align:start position:0%
vector X will be 64 by 64 by 3 because
that<00:03:37.470><c> the</c><00:03:37.680><c> total</c><00:03:38.400><c> numbers</c><00:03:38.849><c> we</c><00:03:39.060><c> have</c><00:03:39.359><c> in</c><00:03:39.659><c> all</c><00:03:39.959><c> of</c>

00:03:40.129 --> 00:03:40.139 align:start position:0%
that the total numbers we have in all of
 

00:03:40.139 --> 00:03:42.890 align:start position:0%
that the total numbers we have in all of
these<00:03:40.260><c> matrices</c><00:03:40.739><c> which</c><00:03:41.609><c> in</c><00:03:41.849><c> this</c><00:03:42.000><c> case</c><00:03:42.239><c> turns</c>

00:03:42.890 --> 00:03:42.900 align:start position:0%
these matrices which in this case turns
 

00:03:42.900 --> 00:03:45.469 align:start position:0%
these matrices which in this case turns
out<00:03:43.049><c> to</c><00:03:43.109><c> be</c><00:03:43.290><c> 1</c><00:03:43.680><c> 2</c><00:03:43.949><c> 2</c><00:03:44.220><c> 8</c><00:03:44.579><c> 8</c><00:03:44.760><c> that's</c><00:03:45.030><c> what</c><00:03:45.239><c> you</c><00:03:45.329><c> get</c>

00:03:45.469 --> 00:03:45.479 align:start position:0%
out to be 1 2 2 8 8 that's what you get
 

00:03:45.479 --> 00:03:47.509 align:start position:0%
out to be 1 2 2 8 8 that's what you get
if<00:03:45.629><c> you</c><00:03:45.690><c> multiply</c><00:03:46.109><c> out</c><00:03:46.290><c> those</c><00:03:46.500><c> numbers</c><00:03:46.949><c> and</c><00:03:47.099><c> so</c>

00:03:47.509 --> 00:03:47.519 align:start position:0%
if you multiply out those numbers and so
 

00:03:47.519 --> 00:03:51.259 align:start position:0%
if you multiply out those numbers and so
we're<00:03:47.699><c> going</c><00:03:47.879><c> to</c><00:03:48.000><c> use</c><00:03:48.299><c> n</c><00:03:48.599><c> x</c><00:03:49.229><c> equals</c><00:03:50.129><c> 1</c><00:03:50.400><c> 2</c><00:03:50.639><c> 2</c><00:03:50.849><c> 8</c><00:03:51.060><c> 8</c>

00:03:51.259 --> 00:03:51.269 align:start position:0%
we're going to use n x equals 1 2 2 8 8
 

00:03:51.269 --> 00:03:53.719 align:start position:0%
we're going to use n x equals 1 2 2 8 8
to<00:03:51.930><c> represent</c><00:03:52.409><c> the</c><00:03:52.530><c> dimension</c><00:03:53.069><c> of</c><00:03:53.220><c> the</c><00:03:53.370><c> input</c>

00:03:53.719 --> 00:03:53.729 align:start position:0%
to represent the dimension of the input
 

00:03:53.729 --> 00:03:56.420 align:start position:0%
to represent the dimension of the input
features<00:03:54.150><c> X</c><00:03:54.690><c> and</c><00:03:55.019><c> sometimes</c><00:03:55.500><c> for</c><00:03:55.680><c> brevity</c><00:03:56.069><c> and</c>

00:03:56.420 --> 00:03:56.430 align:start position:0%
features X and sometimes for brevity and
 

00:03:56.430 --> 00:03:59.839 align:start position:0%
features X and sometimes for brevity and
also<00:03:57.120><c> just</c><00:03:57.419><c> use</c><00:03:57.599><c> lowercase</c><00:03:58.409><c> n</c><00:03:58.620><c> to</c><00:03:59.310><c> represent</c>

00:03:59.839 --> 00:03:59.849 align:start position:0%
also just use lowercase n to represent
 

00:03:59.849 --> 00:04:01.909 align:start position:0%
also just use lowercase n to represent
the<00:04:00.299><c> dimension</c><00:04:00.870><c> of</c><00:04:01.019><c> this</c><00:04:01.169><c> input</c><00:04:01.620><c> feature</c>

00:04:01.909 --> 00:04:01.919 align:start position:0%
the dimension of this input feature
 

00:04:01.919 --> 00:04:02.449 align:start position:0%
the dimension of this input feature
vector

00:04:02.449 --> 00:04:02.459 align:start position:0%
vector
 

00:04:02.459 --> 00:04:05.300 align:start position:0%
vector
so<00:04:02.790><c> in</c><00:04:03.180><c> binary</c><00:04:03.780><c> classification</c><00:04:04.169><c> our</c><00:04:04.769><c> goal</c><00:04:05.040><c> is</c>

00:04:05.300 --> 00:04:05.310 align:start position:0%
so in binary classification our goal is
 

00:04:05.310 --> 00:04:07.309 align:start position:0%
so in binary classification our goal is
to<00:04:05.459><c> learn</c><00:04:05.609><c> a</c><00:04:05.669><c> classifier</c><00:04:05.879><c> that</c><00:04:06.269><c> can</c><00:04:06.659><c> input</c><00:04:07.079><c> an</c>

00:04:07.309 --> 00:04:07.319 align:start position:0%
to learn a classifier that can input an
 

00:04:07.319 --> 00:04:09.409 align:start position:0%
to learn a classifier that can input an
image<00:04:07.919><c> represented</c><00:04:08.639><c> by</c><00:04:08.819><c> this</c><00:04:08.879><c> feature</c><00:04:09.269><c> vector</c>

00:04:09.409 --> 00:04:09.419 align:start position:0%
image represented by this feature vector
 

00:04:09.419 --> 00:04:13.640 align:start position:0%
image represented by this feature vector
X<00:04:09.900><c> and</c><00:04:10.400><c> predict</c><00:04:11.400><c> whether</c><00:04:12.120><c> the</c><00:04:12.989><c> corresponding</c>

00:04:13.640 --> 00:04:13.650 align:start position:0%
X and predict whether the corresponding
 

00:04:13.650 --> 00:04:16.580 align:start position:0%
X and predict whether the corresponding
label<00:04:14.040><c> Y</c><00:04:14.220><c> is</c><00:04:14.549><c> 1</c><00:04:14.970><c> or</c><00:04:15.120><c> 0</c><00:04:15.150><c> that</c><00:04:15.720><c> is</c><00:04:15.930><c> whether</c><00:04:16.229><c> this</c>

00:04:16.580 --> 00:04:16.590 align:start position:0%
label Y is 1 or 0 that is whether this
 

00:04:16.590 --> 00:04:19.099 align:start position:0%
label Y is 1 or 0 that is whether this
is<00:04:16.739><c> a</c><00:04:16.769><c> cat</c><00:04:17.099><c> image</c><00:04:17.400><c> or</c><00:04:17.639><c> non</c><00:04:17.909><c> cat</c><00:04:18.209><c> image</c><00:04:18.570><c> let's</c>

00:04:19.099 --> 00:04:19.109 align:start position:0%
is a cat image or non cat image let's
 

00:04:19.109 --> 00:04:21.050 align:start position:0%
is a cat image or non cat image let's
now<00:04:19.289><c> lay</c><00:04:19.560><c> out</c><00:04:19.739><c> some</c><00:04:20.009><c> of</c><00:04:20.130><c> the</c><00:04:20.190><c> notation</c><00:04:20.849><c> that</c>

00:04:21.050 --> 00:04:21.060 align:start position:0%
now lay out some of the notation that
 

00:04:21.060 --> 00:04:22.670 align:start position:0%
now lay out some of the notation that
we'll<00:04:21.239><c> use</c><00:04:21.510><c> throughout</c><00:04:21.930><c> the</c><00:04:22.169><c> rest</c><00:04:22.200><c> of</c><00:04:22.529><c> this</c>

00:04:22.670 --> 00:04:22.680 align:start position:0%
we'll use throughout the rest of this
 

00:04:22.680 --> 00:04:25.399 align:start position:0%
we'll use throughout the rest of this
course<00:04:23.010><c> a</c><00:04:23.310><c> single</c><00:04:24.270><c> training</c><00:04:24.599><c> example</c><00:04:24.750><c> is</c>

00:04:25.399 --> 00:04:25.409 align:start position:0%
course a single training example is
 

00:04:25.409 --> 00:04:26.879 align:start position:0%
course a single training example is
represented<00:04:26.099><c> by</c><00:04:26.219><c> a</c><00:04:26.370><c> pair</c>

00:04:26.879 --> 00:04:26.889 align:start position:0%
represented by a pair
 

00:04:26.889 --> 00:04:34.110 align:start position:0%
represented by a pair
X<00:04:27.189><c> comma</c><00:04:27.939><c> Y</c><00:04:28.210><c> where</c><00:04:28.900><c> X</c><00:04:29.310><c> is</c><00:04:30.330><c> an</c><00:04:31.330><c> N</c><00:04:31.870><c> X</c><00:04:33.120><c> dimensional</c>

00:04:34.110 --> 00:04:34.120 align:start position:0%
X comma Y where X is an N X dimensional
 

00:04:34.120 --> 00:04:37.739 align:start position:0%
X comma Y where X is an N X dimensional
feature<00:04:34.599><c> vector</c><00:04:35.080><c> and</c><00:04:35.289><c> Y</c><00:04:35.949><c> the</c><00:04:36.550><c> label</c><00:04:36.969><c> is</c><00:04:37.389><c> either</c>

00:04:37.739 --> 00:04:37.749 align:start position:0%
feature vector and Y the label is either
 

00:04:37.749 --> 00:04:41.300 align:start position:0%
feature vector and Y the label is either
0<00:04:38.650><c> or</c><00:04:38.680><c> 1</c><00:04:38.860><c> your</c><00:04:39.610><c> training</c><00:04:40.150><c> set</c><00:04:40.360><c> will</c><00:04:40.749><c> comprise</c>

00:04:41.300 --> 00:04:41.310 align:start position:0%
0 or 1 your training set will comprise
 

00:04:41.310 --> 00:04:45.209 align:start position:0%
0 or 1 your training set will comprise
lowercase<00:04:42.310><c> M</c><00:04:42.669><c> training</c><00:04:43.659><c> examples</c><00:04:43.840><c> and</c><00:04:44.499><c> so</c>

00:04:45.209 --> 00:04:45.219 align:start position:0%
lowercase M training examples and so
 

00:04:45.219 --> 00:04:47.820 align:start position:0%
lowercase M training examples and so
your<00:04:45.400><c> training</c><00:04:45.729><c> sets</c><00:04:45.969><c> will</c><00:04:46.210><c> be</c><00:04:46.240><c> written</c><00:04:46.870><c> x1</c>

00:04:47.820 --> 00:04:47.830 align:start position:0%
your training sets will be written x1
 

00:04:47.830 --> 00:04:50.790 align:start position:0%
your training sets will be written x1
comma<00:04:48.219><c> y1</c><00:04:48.719><c> which</c><00:04:49.719><c> is</c><00:04:49.749><c> the</c><00:04:50.080><c> input</c><00:04:50.379><c> and</c><00:04:50.650><c> output</c>

00:04:50.790 --> 00:04:50.800 align:start position:0%
comma y1 which is the input and output
 

00:04:50.800 --> 00:04:54.089 align:start position:0%
comma y1 which is the input and output
for<00:04:51.219><c> your</c><00:04:51.279><c> first</c><00:04:51.520><c> training</c><00:04:51.699><c> example</c><00:04:52.289><c> x2</c><00:04:53.289><c> comma</c>

00:04:54.089 --> 00:04:54.099 align:start position:0%
for your first training example x2 comma
 

00:04:54.099 --> 00:04:57.659 align:start position:0%
for your first training example x2 comma
y2<00:04:54.370><c> for</c><00:04:55.150><c> a</c><00:04:55.180><c> second</c><00:04:55.539><c> training</c><00:04:55.719><c> example</c><00:04:55.779><c> up</c><00:04:56.349><c> to</c><00:04:56.830><c> X</c>

00:04:57.659 --> 00:04:57.669 align:start position:0%
y2 for a second training example up to X
 

00:04:57.669 --> 00:05:01.080 align:start position:0%
y2 for a second training example up to X
M<00:04:58.029><c> comma</c><00:04:58.990><c> Y</c><00:04:59.259><c> M</c><00:04:59.500><c> which</c><00:05:00.129><c> is</c><00:05:00.159><c> the</c><00:05:00.520><c> last</c><00:05:00.759><c> training</c>

00:05:01.080 --> 00:05:01.090 align:start position:0%
M comma Y M which is the last training
 

00:05:01.090 --> 00:05:04.019 align:start position:0%
M comma Y M which is the last training
example<00:05:01.509><c> and</c><00:05:01.659><c> then</c><00:05:02.139><c> that</c><00:05:02.860><c> altogether</c><00:05:03.430><c> this</c>

00:05:04.019 --> 00:05:04.029 align:start position:0%
example and then that altogether this
 

00:05:04.029 --> 00:05:06.240 align:start position:0%
example and then that altogether this
your<00:05:04.240><c> entire</c><00:05:04.509><c> training</c><00:05:04.870><c> set</c><00:05:05.020><c> so</c><00:05:05.710><c> I'm</c><00:05:05.979><c> going</c><00:05:06.189><c> to</c>

00:05:06.240 --> 00:05:06.250 align:start position:0%
your entire training set so I'm going to
 

00:05:06.250 --> 00:05:08.850 align:start position:0%
your entire training set so I'm going to
use<00:05:06.400><c> lowercase</c><00:05:07.240><c> M</c><00:05:07.479><c> to</c><00:05:07.990><c> denote</c><00:05:08.289><c> the</c><00:05:08.529><c> number</c><00:05:08.560><c> of</c>

00:05:08.850 --> 00:05:08.860 align:start position:0%
use lowercase M to denote the number of
 

00:05:08.860 --> 00:05:11.189 align:start position:0%
use lowercase M to denote the number of
training<00:05:08.949><c> examples</c><00:05:09.250><c> and</c><00:05:10.060><c> sometimes</c><00:05:10.689><c> to</c>

00:05:11.189 --> 00:05:11.199 align:start position:0%
training examples and sometimes to
 

00:05:11.199 --> 00:05:12.719 align:start position:0%
training examples and sometimes to
emphasize<00:05:11.710><c> that</c><00:05:11.979><c> this</c><00:05:12.189><c> is</c><00:05:12.310><c> the</c><00:05:12.430><c> number</c><00:05:12.699><c> of</c>

00:05:12.719 --> 00:05:12.729 align:start position:0%
emphasize that this is the number of
 

00:05:12.729 --> 00:05:14.519 align:start position:0%
emphasize that this is the number of
training<00:05:13.000><c> examples</c><00:05:13.180><c> I</c><00:05:13.750><c> might</c><00:05:13.960><c> write</c><00:05:14.199><c> this</c><00:05:14.349><c> as</c>

00:05:14.519 --> 00:05:14.529 align:start position:0%
training examples I might write this as
 

00:05:14.529 --> 00:05:16.769 align:start position:0%
training examples I might write this as
M<00:05:14.710><c> subscript</c><00:05:15.069><c> train</c><00:05:15.639><c> and</c><00:05:15.939><c> when</c><00:05:16.479><c> we</c><00:05:16.569><c> talk</c><00:05:16.750><c> about</c>

00:05:16.769 --> 00:05:16.779 align:start position:0%
M subscript train and when we talk about
 

00:05:16.779 --> 00:05:19.709 align:start position:0%
M subscript train and when we talk about
a<00:05:17.020><c> test</c><00:05:17.409><c> set</c><00:05:17.650><c> we</c><00:05:18.639><c> might</c><00:05:18.819><c> sometimes</c><00:05:19.210><c> use</c><00:05:19.479><c> M</c>

00:05:19.709 --> 00:05:19.719 align:start position:0%
a test set we might sometimes use M
 

00:05:19.719 --> 00:05:22.469 align:start position:0%
a test set we might sometimes use M
subscript<00:05:20.169><c> test</c><00:05:20.680><c> to</c><00:05:21.099><c> denote</c><00:05:21.400><c> the</c><00:05:21.879><c> number</c><00:05:22.240><c> of</c>

00:05:22.469 --> 00:05:22.479 align:start position:0%
subscript test to denote the number of
 

00:05:22.479 --> 00:05:25.019 align:start position:0%
subscript test to denote the number of
test<00:05:23.139><c> examples</c><00:05:23.430><c> so</c><00:05:24.430><c> that's</c><00:05:24.639><c> the</c><00:05:24.729><c> number</c><00:05:24.999><c> of</c>

00:05:25.019 --> 00:05:25.029 align:start position:0%
test examples so that's the number of
 

00:05:25.029 --> 00:05:29.640 align:start position:0%
test examples so that's the number of
test<00:05:25.740><c> examples</c><00:05:26.819><c> finally</c><00:05:27.819><c> to</c><00:05:28.419><c> put</c><00:05:28.449><c> all</c><00:05:28.930><c> of</c><00:05:28.990><c> the</c>

00:05:29.640 --> 00:05:29.650 align:start position:0%
test examples finally to put all of the
 

00:05:29.650 --> 00:05:32.129 align:start position:0%
test examples finally to put all of the
training<00:05:30.069><c> examples</c><00:05:30.819><c> into</c><00:05:31.389><c> a</c><00:05:31.419><c> more</c><00:05:31.689><c> compact</c>

00:05:32.129 --> 00:05:32.139 align:start position:0%
training examples into a more compact
 

00:05:32.139 --> 00:05:34.730 align:start position:0%
training examples into a more compact
notation<00:05:32.490><c> we're</c><00:05:33.490><c> going</c><00:05:33.699><c> to</c><00:05:33.819><c> define</c><00:05:34.210><c> a</c><00:05:34.479><c> matrix</c>

00:05:34.730 --> 00:05:34.740 align:start position:0%
notation we're going to define a matrix
 

00:05:34.740 --> 00:05:38.999 align:start position:0%
notation we're going to define a matrix
capital<00:05:35.740><c> X</c><00:05:35.949><c> as</c><00:05:36.839><c> defined</c><00:05:37.839><c> by</c><00:05:37.960><c> taking</c><00:05:38.319><c> your</c>

00:05:38.999 --> 00:05:39.009 align:start position:0%
capital X as defined by taking your
 

00:05:39.009 --> 00:05:42.629 align:start position:0%
capital X as defined by taking your
training<00:05:39.789><c> set</c><00:05:40.000><c> inputs</c><00:05:40.509><c> x1</c><00:05:41.110><c> x2</c><00:05:41.650><c> and</c><00:05:41.830><c> so</c><00:05:42.099><c> on</c><00:05:42.279><c> and</c>

00:05:42.629 --> 00:05:42.639 align:start position:0%
training set inputs x1 x2 and so on and
 

00:05:42.639 --> 00:05:45.269 align:start position:0%
training set inputs x1 x2 and so on and
stacking<00:05:43.180><c> them</c><00:05:43.419><c> in</c><00:05:43.930><c> columns</c><00:05:44.620><c> so</c><00:05:44.919><c> if</c><00:05:44.979><c> you</c><00:05:45.099><c> take</c>

00:05:45.269 --> 00:05:45.279 align:start position:0%
stacking them in columns so if you take
 

00:05:45.279 --> 00:05:48.749 align:start position:0%
stacking them in columns so if you take
x1<00:05:45.849><c> and</c><00:05:46.270><c> you</c><00:05:47.169><c> put</c><00:05:47.500><c> that</c><00:05:47.620><c> as</c><00:05:47.860><c> the</c><00:05:47.889><c> first</c><00:05:48.009><c> column</c>

00:05:48.749 --> 00:05:48.759 align:start position:0%
x1 and you put that as the first column
 

00:05:48.759 --> 00:05:52.050 align:start position:0%
x1 and you put that as the first column
of<00:05:49.029><c> this</c><00:05:49.300><c> matrix</c><00:05:49.379><c> and</c><00:05:50.379><c> x2</c><00:05:51.009><c> cordetta</c><00:05:51.789><c> the</c>

00:05:52.050 --> 00:05:52.060 align:start position:0%
of this matrix and x2 cordetta the
 

00:05:52.060 --> 00:05:55.709 align:start position:0%
of this matrix and x2 cordetta the
second<00:05:52.449><c> column</c><00:05:52.870><c> and</c><00:05:53.050><c> so</c><00:05:53.110><c> on</c><00:05:53.770><c> down</c><00:05:54.430><c> to</c><00:05:54.490><c> X</c><00:05:54.849><c> M</c><00:05:55.060><c> then</c>

00:05:55.709 --> 00:05:55.719 align:start position:0%
second column and so on down to X M then
 

00:05:55.719 --> 00:05:58.889 align:start position:0%
second column and so on down to X M then
this<00:05:55.899><c> is</c><00:05:56.080><c> the</c><00:05:56.259><c> matrix</c><00:05:56.669><c> capital</c><00:05:57.669><c> X</c><00:05:57.849><c> so</c><00:05:58.629><c> this</c>

00:05:58.889 --> 00:05:58.899 align:start position:0%
this is the matrix capital X so this
 

00:05:58.899 --> 00:06:03.240 align:start position:0%
this is the matrix capital X so this
matrix<00:05:59.169><c> X</c><00:05:59.830><c> will</c><00:06:00.729><c> have</c><00:06:00.969><c> M</c><00:06:01.319><c> columns</c><00:06:02.319><c> where</c><00:06:03.069><c> m</c><00:06:03.219><c> is</c>

00:06:03.240 --> 00:06:03.250 align:start position:0%
matrix X will have M columns where m is
 

00:06:03.250 --> 00:06:05.969 align:start position:0%
matrix X will have M columns where m is
the<00:06:03.550><c> number</c><00:06:03.729><c> of</c><00:06:04.000><c> training</c><00:06:04.240><c> examples</c><00:06:04.300><c> and</c><00:06:04.979><c> the</c>

00:06:05.969 --> 00:06:05.979 align:start position:0%
the number of training examples and the
 

00:06:05.979 --> 00:06:07.559 align:start position:0%
the number of training examples and the
number<00:06:06.279><c> of</c><00:06:06.370><c> rows</c><00:06:06.550><c> or</c><00:06:06.849><c> the</c><00:06:06.909><c> height</c><00:06:07.180><c> of</c><00:06:07.419><c> this</c>

00:06:07.559 --> 00:06:07.569 align:start position:0%
number of rows or the height of this
 

00:06:07.569 --> 00:06:11.610 align:start position:0%
number of rows or the height of this
matrix<00:06:07.750><c> is</c><00:06:08.229><c> NX</c><00:06:08.680><c> notice</c><00:06:09.520><c> that</c><00:06:09.789><c> in</c><00:06:10.180><c> other</c><00:06:11.020><c> causes</c>

00:06:11.610 --> 00:06:11.620 align:start position:0%
matrix is NX notice that in other causes
 

00:06:11.620 --> 00:06:14.309 align:start position:0%
matrix is NX notice that in other causes
you<00:06:12.219><c> might</c><00:06:12.399><c> see</c><00:06:12.729><c> the</c><00:06:13.240><c> matrix</c><00:06:13.419><c> capital</c><00:06:14.139><c> X</c>

00:06:14.309 --> 00:06:14.319 align:start position:0%
you might see the matrix capital X
 

00:06:14.319 --> 00:06:16.499 align:start position:0%
you might see the matrix capital X
defined<00:06:14.830><c> by</c><00:06:15.279><c> stacking</c><00:06:15.639><c> up</c><00:06:15.939><c> the</c><00:06:15.969><c> training</c>

00:06:16.499 --> 00:06:16.509 align:start position:0%
defined by stacking up the training
 

00:06:16.509 --> 00:06:19.969 align:start position:0%
defined by stacking up the training
examples<00:06:16.960><c> in</c><00:06:17.259><c> rows</c><00:06:17.800><c> like</c><00:06:18.729><c> so</c><00:06:19.000><c> X</c><00:06:19.330><c> 1</c><00:06:19.569><c> transpose</c>

00:06:19.969 --> 00:06:19.979 align:start position:0%
examples in rows like so X 1 transpose
 

00:06:19.979 --> 00:06:24.779 align:start position:0%
examples in rows like so X 1 transpose
down<00:06:20.979><c> to</c><00:06:21.250><c> X</c><00:06:21.729><c> M</c><00:06:22.180><c> transpose</c><00:06:23.020><c> but</c><00:06:23.889><c> it</c><00:06:24.310><c> turns</c><00:06:24.610><c> out</c>

00:06:24.779 --> 00:06:24.789 align:start position:0%
down to X M transpose but it turns out
 

00:06:24.789 --> 00:06:26.219 align:start position:0%
down to X M transpose but it turns out
that<00:06:24.849><c> when</c><00:06:25.240><c> you're</c><00:06:25.360><c> implementing</c><00:06:25.779><c> neural</c>

00:06:26.219 --> 00:06:26.229 align:start position:0%
that when you're implementing neural
 

00:06:26.229 --> 00:06:28.740 align:start position:0%
that when you're implementing neural
networks<00:06:26.649><c> using</c><00:06:27.460><c> this</c><00:06:27.610><c> convention</c><00:06:28.270><c> I</c><00:06:28.360><c> have</c><00:06:28.599><c> on</c>

00:06:28.740 --> 00:06:28.750 align:start position:0%
networks using this convention I have on
 

00:06:28.750 --> 00:06:30.209 align:start position:0%
networks using this convention I have on
the<00:06:28.870><c> left</c><00:06:29.110><c> will</c><00:06:29.649><c> make</c><00:06:29.830><c> the</c><00:06:29.949><c> implementation</c>

00:06:30.209 --> 00:06:30.219 align:start position:0%
the left will make the implementation
 

00:06:30.219 --> 00:06:35.399 align:start position:0%
the left will make the implementation
much<00:06:31.060><c> easier</c><00:06:31.569><c> so</c><00:06:32.020><c> just</c><00:06:32.469><c> to</c><00:06:32.589><c> recap</c><00:06:32.800><c> X</c><00:06:33.610><c> is</c><00:06:34.060><c> a</c><00:06:34.539><c> n</c><00:06:34.839><c> X</c>

00:06:35.399 --> 00:06:35.409 align:start position:0%
much easier so just to recap X is a n X
 

00:06:35.409 --> 00:06:39.689 align:start position:0%
much easier so just to recap X is a n X
by<00:06:36.039><c> M</c><00:06:36.779><c> dimensional</c><00:06:37.779><c> matrix</c><00:06:38.139><c> and</c><00:06:38.610><c> when</c><00:06:39.610><c> you</c>

00:06:39.689 --> 00:06:39.699 align:start position:0%
by M dimensional matrix and when you
 

00:06:39.699 --> 00:06:40.350 align:start position:0%
by M dimensional matrix and when you
compliment<00:06:40.060><c> this</c>

00:06:40.350 --> 00:06:40.360 align:start position:0%
compliment this
 

00:06:40.360 --> 00:06:44.070 align:start position:0%
compliment this
Pisan<00:06:40.659><c> you</c><00:06:41.259><c> see</c><00:06:41.530><c> that</c><00:06:41.939><c> ex-parte</c><00:06:42.939><c> shape</c><00:06:43.300><c> that</c>

00:06:44.070 --> 00:06:44.080 align:start position:0%
Pisan you see that ex-parte shape that
 

00:06:44.080 --> 00:06:46.170 align:start position:0%
Pisan you see that ex-parte shape that
the<00:06:44.319><c> Python</c><00:06:44.620><c> command</c><00:06:45.069><c> for</c><00:06:45.370><c> finding</c><00:06:45.759><c> the</c><00:06:45.879><c> shape</c>

00:06:46.170 --> 00:06:46.180 align:start position:0%
the Python command for finding the shape
 

00:06:46.180 --> 00:06:50.070 align:start position:0%
the Python command for finding the shape
of<00:06:46.330><c> the</c><00:06:46.419><c> matrix</c><00:06:46.840><c> that</c><00:06:47.080><c> this</c><00:06:47.680><c> is</c><00:06:47.889><c> M</c><00:06:48.159><c> and</c><00:06:49.030><c> X</c><00:06:49.479><c> comma</c>

00:06:50.070 --> 00:06:50.080 align:start position:0%
of the matrix that this is M and X comma
 

00:06:50.080 --> 00:06:52.200 align:start position:0%
of the matrix that this is M and X comma
M<00:06:50.349><c> this</c><00:06:50.830><c> just</c><00:06:51.039><c> means</c><00:06:51.189><c> is</c><00:06:51.340><c> in</c><00:06:51.490><c> NX</c><00:06:51.789><c> by</c><00:06:52.000><c> M</c>

00:06:52.200 --> 00:06:52.210 align:start position:0%
M this just means is in NX by M
 

00:06:52.210 --> 00:06:54.450 align:start position:0%
M this just means is in NX by M
dimensional<00:06:52.810><c> matrix</c><00:06:53.229><c> so</c><00:06:53.830><c> that's</c><00:06:54.219><c> how</c><00:06:54.400><c> you</c>

00:06:54.450 --> 00:06:54.460 align:start position:0%
dimensional matrix so that's how you
 

00:06:54.460 --> 00:06:57.450 align:start position:0%
dimensional matrix so that's how you
group<00:06:54.849><c> the</c><00:06:55.240><c> training</c><00:06:55.870><c> examples</c><00:06:56.379><c> input</c><00:06:56.860><c> X</c><00:06:57.129><c> into</c>

00:06:57.450 --> 00:06:57.460 align:start position:0%
group the training examples input X into
 

00:06:57.460 --> 00:07:01.290 align:start position:0%
group the training examples input X into
matrix<00:06:58.180><c> how</c><00:06:58.780><c> about</c><00:06:59.020><c> the</c><00:06:59.169><c> output</c><00:06:59.349><c> labels</c><00:06:59.949><c> Y</c><00:07:00.520><c> it</c>

00:07:01.290 --> 00:07:01.300 align:start position:0%
matrix how about the output labels Y it
 

00:07:01.300 --> 00:07:02.879 align:start position:0%
matrix how about the output labels Y it
turns<00:07:01.569><c> out</c><00:07:01.780><c> that</c><00:07:02.050><c> to</c><00:07:02.439><c> make</c><00:07:02.620><c> your</c>

00:07:02.879 --> 00:07:02.889 align:start position:0%
turns out that to make your
 

00:07:02.889 --> 00:07:04.439 align:start position:0%
turns out that to make your
implementation<00:07:03.759><c> of</c><00:07:03.969><c> a</c><00:07:04.030><c> neural</c><00:07:04.270><c> network</c>

00:07:04.439 --> 00:07:04.449 align:start position:0%
implementation of a neural network
 

00:07:04.449 --> 00:07:08.100 align:start position:0%
implementation of a neural network
easier<00:07:05.020><c> I'll</c><00:07:05.439><c> be</c><00:07:05.740><c> convenient</c><00:07:06.340><c> also</c><00:07:06.639><c> stack</c><00:07:07.270><c> Y</c>

00:07:08.100 --> 00:07:08.110 align:start position:0%
easier I'll be convenient also stack Y
 

00:07:08.110 --> 00:07:10.649 align:start position:0%
easier I'll be convenient also stack Y
in<00:07:08.830><c> columns</c><00:07:09.669><c> so</c><00:07:10.090><c> we're</c><00:07:10.180><c> going</c><00:07:10.300><c> to</c><00:07:10.389><c> define</c>

00:07:10.649 --> 00:07:10.659 align:start position:0%
in columns so we're going to define
 

00:07:10.659 --> 00:07:17.040 align:start position:0%
in columns so we're going to define
capital<00:07:11.530><c> Y</c><00:07:11.680><c> to</c><00:07:12.520><c> be</c><00:07:12.610><c> equal</c><00:07:12.639><c> to</c><00:07:13.629><c> Y</c><00:07:14.469><c> 1</c><00:07:14.740><c> y</c><00:07:15.279><c> 2</c><00:07:15.310><c> up</c><00:07:15.849><c> to</c><00:07:16.509><c> Y</c>

00:07:17.040 --> 00:07:17.050 align:start position:0%
capital Y to be equal to Y 1 y 2 up to Y
 

00:07:17.050 --> 00:07:22.969 align:start position:0%
capital Y to be equal to Y 1 y 2 up to Y
M<00:07:17.289><c> like</c><00:07:17.710><c> so</c><00:07:17.979><c> so</c><00:07:18.610><c> Y</c><00:07:18.909><c> here</c><00:07:19.389><c> will</c><00:07:20.110><c> be</c><00:07:20.289><c> a</c><00:07:20.529><c> 1</c><00:07:21.370><c> by</c><00:07:22.180><c> M</c>

00:07:22.969 --> 00:07:22.979 align:start position:0%
M like so so Y here will be a 1 by M
 

00:07:22.979 --> 00:07:26.070 align:start position:0%
M like so so Y here will be a 1 by M
dimensional<00:07:23.979><c> matrix</c><00:07:24.639><c> and</c><00:07:24.969><c> again</c><00:07:25.240><c> to</c><00:07:25.689><c> use</c><00:07:25.900><c> the</c>

00:07:26.070 --> 00:07:26.080 align:start position:0%
dimensional matrix and again to use the
 

00:07:26.080 --> 00:07:28.740 align:start position:0%
dimensional matrix and again to use the
Python<00:07:26.469><c> notation</c><00:07:26.830><c> you</c><00:07:27.789><c> know</c><00:07:27.909><c> the</c><00:07:28.090><c> shape</c><00:07:28.330><c> of</c><00:07:28.539><c> Y</c>

00:07:28.740 --> 00:07:28.750 align:start position:0%
Python notation you know the shape of Y
 

00:07:28.750 --> 00:07:32.189 align:start position:0%
Python notation you know the shape of Y
will<00:07:29.379><c> be</c><00:07:29.560><c> 1</c><00:07:30.159><c> comma</c><00:07:31.000><c> M</c><00:07:31.330><c> which</c><00:07:31.659><c> just</c><00:07:31.840><c> means</c><00:07:32.020><c> this</c>

00:07:32.189 --> 00:07:32.199 align:start position:0%
will be 1 comma M which just means this
 

00:07:32.199 --> 00:07:35.730 align:start position:0%
will be 1 comma M which just means this
is<00:07:32.349><c> a</c><00:07:32.469><c> 1</c><00:07:32.710><c> by</c><00:07:32.919><c> M</c><00:07:33.210><c> matrix</c><00:07:34.210><c> and</c><00:07:34.419><c> as</c><00:07:35.050><c> you</c><00:07:35.379><c> implement</c>

00:07:35.730 --> 00:07:35.740 align:start position:0%
is a 1 by M matrix and as you implement
 

00:07:35.740 --> 00:07:37.800 align:start position:0%
is a 1 by M matrix and as you implement
your<00:07:36.099><c> neural</c><00:07:36.400><c> network</c><00:07:36.430><c> later</c><00:07:37.270><c> in</c><00:07:37.449><c> this</c><00:07:37.599><c> course</c>

00:07:37.800 --> 00:07:37.810 align:start position:0%
your neural network later in this course
 

00:07:37.810 --> 00:07:40.320 align:start position:0%
your neural network later in this course
you<00:07:38.529><c> find</c><00:07:38.860><c> that</c><00:07:39.039><c> a</c><00:07:39.099><c> useful</c><00:07:39.340><c> convention</c><00:07:40.120><c> will</c>

00:07:40.320 --> 00:07:40.330 align:start position:0%
you find that a useful convention will
 

00:07:40.330 --> 00:07:42.749 align:start position:0%
you find that a useful convention will
be<00:07:40.360><c> to</c><00:07:40.599><c> take</c><00:07:40.840><c> the</c><00:07:41.439><c> data</c><00:07:41.680><c> associate</c><00:07:42.580><c> to</c><00:07:42.699><c> a</c>

00:07:42.749 --> 00:07:42.759 align:start position:0%
be to take the data associate to a
 

00:07:42.759 --> 00:07:44.969 align:start position:0%
be to take the data associate to a
different<00:07:43.210><c> training</c><00:07:43.569><c> example</c><00:07:43.960><c> and</c><00:07:44.110><c> by</c><00:07:44.560><c> data</c><00:07:44.800><c> I</c>

00:07:44.969 --> 00:07:44.979 align:start position:0%
different training example and by data I
 

00:07:44.979 --> 00:07:47.369 align:start position:0%
different training example and by data I
mean<00:07:45.339><c> either</c><00:07:45.490><c> X</c><00:07:45.819><c> or</c><00:07:46.089><c> Y</c><00:07:46.150><c> or</c><00:07:46.629><c> other</c><00:07:46.839><c> quantities</c>

00:07:47.369 --> 00:07:47.379 align:start position:0%
mean either X or Y or other quantities
 

00:07:47.379 --> 00:07:49.829 align:start position:0%
mean either X or Y or other quantities
you<00:07:47.500><c> see</c><00:07:47.710><c> later</c><00:07:47.949><c> but</c><00:07:48.250><c> to</c><00:07:48.789><c> take</c><00:07:49.029><c> the</c><00:07:49.360><c> stuff</c><00:07:49.659><c> or</c>

00:07:49.829 --> 00:07:49.839 align:start position:0%
you see later but to take the stuff or
 

00:07:49.839 --> 00:07:51.719 align:start position:0%
you see later but to take the stuff or
the<00:07:49.930><c> data</c><00:07:50.169><c> associated</c><00:07:51.009><c> with</c><00:07:51.219><c> different</c>

00:07:51.719 --> 00:07:51.729 align:start position:0%
the data associated with different
 

00:07:51.729 --> 00:07:53.730 align:start position:0%
the data associated with different
training<00:07:52.000><c> examples</c><00:07:52.389><c> and</c><00:07:52.569><c> to</c><00:07:53.020><c> stack</c><00:07:53.289><c> them</c><00:07:53.560><c> in</c>

00:07:53.730 --> 00:07:53.740 align:start position:0%
training examples and to stack them in
 

00:07:53.740 --> 00:07:55.769 align:start position:0%
training examples and to stack them in
different<00:07:54.069><c> columns</c><00:07:54.909><c> like</c><00:07:55.360><c> we've</c><00:07:55.569><c> done</c><00:07:55.719><c> here</c>

00:07:55.769 --> 00:07:55.779 align:start position:0%
different columns like we've done here
 

00:07:55.779 --> 00:07:59.430 align:start position:0%
different columns like we've done here
for<00:07:56.199><c> both</c><00:07:56.349><c> x</c><00:07:56.620><c> and</c><00:07:56.860><c> y</c><00:07:56.949><c> so</c><00:07:57.930><c> that's</c><00:07:58.930><c> the</c><00:07:59.110><c> notation</c>

00:07:59.430 --> 00:07:59.440 align:start position:0%
for both x and y so that's the notation
 

00:07:59.440 --> 00:08:01.499 align:start position:0%
for both x and y so that's the notation
we'll<00:07:59.740><c> use</c><00:07:59.979><c> for</c><00:08:00.339><c> logistic</c><00:08:00.789><c> regression</c><00:08:00.819><c> and</c>

00:08:01.499 --> 00:08:01.509 align:start position:0%
we'll use for logistic regression and
 

00:08:01.509 --> 00:08:03.300 align:start position:0%
we'll use for logistic regression and
for<00:08:01.839><c> neural</c><00:08:02.080><c> networks</c><00:08:02.440><c> later</c><00:08:02.770><c> in</c><00:08:02.949><c> this</c><00:08:03.069><c> course</c>

00:08:03.300 --> 00:08:03.310 align:start position:0%
for neural networks later in this course
 

00:08:03.310 --> 00:08:05.309 align:start position:0%
for neural networks later in this course
if<00:08:03.699><c> you</c><00:08:04.240><c> ever</c><00:08:04.449><c> forget</c><00:08:04.659><c> what</c><00:08:05.050><c> a</c><00:08:05.080><c> piece</c><00:08:05.289><c> of</c>

00:08:05.309 --> 00:08:05.319 align:start position:0%
if you ever forget what a piece of
 

00:08:05.319 --> 00:08:07.950 align:start position:0%
if you ever forget what a piece of
notation<00:08:05.740><c> means</c><00:08:06.129><c> like</c><00:08:06.430><c> what</c><00:08:06.669><c> is</c><00:08:06.819><c> M</c><00:08:07.029><c> or</c><00:08:07.360><c> 1</c><00:08:07.539><c> is</c><00:08:07.659><c> n</c>

00:08:07.950 --> 00:08:07.960 align:start position:0%
notation means like what is M or 1 is n
 

00:08:07.960 --> 00:08:10.110 align:start position:0%
notation means like what is M or 1 is n
or<00:08:08.259><c> 1</c><00:08:08.440><c> or</c><00:08:08.469><c> something</c><00:08:08.830><c> else</c><00:08:09.009><c> we've</c><00:08:09.639><c> also</c><00:08:09.789><c> posted</c>

00:08:10.110 --> 00:08:10.120 align:start position:0%
or 1 or something else we've also posted
 

00:08:10.120 --> 00:08:11.219 align:start position:0%
or 1 or something else we've also posted
on<00:08:10.419><c> the</c><00:08:10.479><c> course</c><00:08:10.689><c> website</c>

00:08:11.219 --> 00:08:11.229 align:start position:0%
on the course website
 

00:08:11.229 --> 00:08:13.469 align:start position:0%
on the course website
in<00:08:11.409><c> notation</c><00:08:11.770><c> guide</c><00:08:12.189><c> you</c><00:08:12.550><c> can</c><00:08:12.669><c> use</c><00:08:12.909><c> to</c><00:08:13.360><c> quickly</c>

00:08:13.469 --> 00:08:13.479 align:start position:0%
in notation guide you can use to quickly
 

00:08:13.479 --> 00:08:15.149 align:start position:0%
in notation guide you can use to quickly
look<00:08:13.839><c> up</c><00:08:14.020><c> what</c><00:08:14.319><c> you</c><00:08:14.620><c> know</c><00:08:14.710><c> any</c><00:08:14.889><c> particular</c>

00:08:15.149 --> 00:08:15.159 align:start position:0%
look up what you know any particular
 

00:08:15.159 --> 00:08:18.510 align:start position:0%
look up what you know any particular
piece<00:08:15.430><c> of</c><00:08:15.550><c> notation</c><00:08:15.879><c> means</c><00:08:16.439><c> so</c><00:08:17.439><c> that</c><00:08:17.740><c> lets</c><00:08:18.339><c> go</c>

00:08:18.510 --> 00:08:18.520 align:start position:0%
piece of notation means so that lets go
 

00:08:18.520 --> 00:08:20.249 align:start position:0%
piece of notation means so that lets go
on<00:08:18.669><c> to</c><00:08:18.849><c> the</c><00:08:18.969><c> next</c><00:08:19.180><c> video</c><00:08:19.509><c> we'll</c><00:08:19.750><c> start</c><00:08:19.779><c> to</c>

00:08:20.249 --> 00:08:20.259 align:start position:0%
on to the next video we'll start to
 

00:08:20.259 --> 00:08:22.529 align:start position:0%
on to the next video we'll start to
flesh<00:08:20.469><c> out</c><00:08:20.620><c> logistic</c><00:08:21.219><c> regression</c><00:08:21.729><c> using</c><00:08:22.240><c> this</c>

00:08:22.529 --> 00:08:22.539 align:start position:0%
flesh out logistic regression using this
 

00:08:22.539 --> 00:08:24.750 align:start position:0%
flesh out logistic regression using this
notation

