WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:02.360 align:start position:0%
 
in<00:00:00.269><c> the</c><00:00:00.570><c> previous</c><00:00:00.989><c> video</c><00:00:01.290><c> you</c><00:00:01.350><c> saw</c><00:00:01.530><c> the</c><00:00:01.740><c> basic</c>

00:00:02.360 --> 00:00:02.370 align:start position:0%
in the previous video you saw the basic
 

00:00:02.370 --> 00:00:04.220 align:start position:0%
in the previous video you saw the basic
blocks<00:00:02.760><c> of</c><00:00:03.090><c> implementing</c><00:00:03.629><c> a</c><00:00:03.720><c> deep</c><00:00:03.959><c> neural</c>

00:00:04.220 --> 00:00:04.230 align:start position:0%
blocks of implementing a deep neural
 

00:00:04.230 --> 00:00:07.160 align:start position:0%
blocks of implementing a deep neural
network<00:00:04.710><c> a</c><00:00:04.980><c> for</c><00:00:05.580><c> propagation</c><00:00:06.029><c> step</c><00:00:06.450><c> for</c><00:00:07.020><c> each</c>

00:00:07.160 --> 00:00:07.170 align:start position:0%
network a for propagation step for each
 

00:00:07.170 --> 00:00:08.839 align:start position:0%
network a for propagation step for each
layer<00:00:07.379><c> and</c><00:00:07.710><c> a</c><00:00:07.830><c> corresponding</c><00:00:08.160><c> backward</c>

00:00:08.839 --> 00:00:08.849 align:start position:0%
layer and a corresponding backward
 

00:00:08.849 --> 00:00:10.879 align:start position:0%
layer and a corresponding backward
propagation<00:00:09.420><c> step</c><00:00:09.690><c> let's</c><00:00:10.230><c> see</c><00:00:10.410><c> how</c><00:00:10.590><c> you</c><00:00:10.650><c> can</c>

00:00:10.879 --> 00:00:10.889 align:start position:0%
propagation step let's see how you can
 

00:00:10.889 --> 00:00:12.560 align:start position:0%
propagation step let's see how you can
actually<00:00:11.070><c> implement</c><00:00:11.490><c> these</c><00:00:11.820><c> steps</c><00:00:12.059><c> will</c>

00:00:12.560 --> 00:00:12.570 align:start position:0%
actually implement these steps will
 

00:00:12.570 --> 00:00:14.870 align:start position:0%
actually implement these steps will
start<00:00:12.809><c> to</c><00:00:12.960><c> for</c><00:00:13.200><c> propagation</c><00:00:13.860><c> recall</c><00:00:14.490><c> that</c>

00:00:14.870 --> 00:00:14.880 align:start position:0%
start to for propagation recall that
 

00:00:14.880 --> 00:00:18.109 align:start position:0%
start to for propagation recall that
what<00:00:15.299><c> this</c><00:00:15.719><c> will</c><00:00:15.960><c> do</c><00:00:16.139><c> is</c><00:00:16.170><c> input</c><00:00:16.740><c> a</c><00:00:16.980><c> L</c><00:00:17.490><c> minus</c><00:00:17.880><c> 1</c>

00:00:18.109 --> 00:00:18.119 align:start position:0%
what this will do is input a L minus 1
 

00:00:18.119 --> 00:00:21.980 align:start position:0%
what this will do is input a L minus 1
and<00:00:18.539><c> output</c><00:00:18.990><c> a</c><00:00:19.410><c> L</c><00:00:19.770><c> and</c><00:00:19.980><c> the</c><00:00:20.580><c> cash</c><00:00:20.880><c> ZL</c><00:00:21.600><c> and</c><00:00:21.900><c> we</c>

00:00:21.980 --> 00:00:21.990 align:start position:0%
and output a L and the cash ZL and we
 

00:00:21.990 --> 00:00:23.660 align:start position:0%
and output a L and the cash ZL and we
just<00:00:22.199><c> said</c><00:00:22.380><c> that</c><00:00:22.410><c> from</c><00:00:22.859><c> implementational</c>

00:00:23.660 --> 00:00:23.670 align:start position:0%
just said that from implementational
 

00:00:23.670 --> 00:00:27.500 align:start position:0%
just said that from implementational
point<00:00:23.910><c> of</c><00:00:24.060><c> view</c><00:00:24.300><c> maybe</c><00:00:24.990><c> we'll</c><00:00:25.260><c> cache</c><00:00:25.699><c> WL</c><00:00:26.699><c> +</c><00:00:26.970><c> BL</c>

00:00:27.500 --> 00:00:27.510 align:start position:0%
point of view maybe we'll cache WL + BL
 

00:00:27.510 --> 00:00:29.599 align:start position:0%
point of view maybe we'll cache WL + BL
as<00:00:27.720><c> well</c><00:00:27.930><c> just</c><00:00:28.380><c> to</c><00:00:28.529><c> make</c><00:00:28.560><c> the</c><00:00:28.920><c> functions</c><00:00:29.369><c> call</c>

00:00:29.599 --> 00:00:29.609 align:start position:0%
as well just to make the functions call
 

00:00:29.609 --> 00:00:31.040 align:start position:0%
as well just to make the functions call
a<00:00:29.640><c> bit</c><00:00:29.820><c> easier</c><00:00:30.179><c> in</c><00:00:30.330><c> the</c><00:00:30.420><c> programming</c><00:00:30.750><c> exercise</c>

00:00:31.040 --> 00:00:31.050 align:start position:0%
a bit easier in the programming exercise
 

00:00:31.050 --> 00:00:33.530 align:start position:0%
a bit easier in the programming exercise
and<00:00:31.410><c> so</c><00:00:32.009><c> the</c><00:00:32.340><c> equations</c><00:00:32.880><c> for</c><00:00:33.030><c> this</c><00:00:33.210><c> should</c>

00:00:33.530 --> 00:00:33.540 align:start position:0%
and so the equations for this should
 

00:00:33.540 --> 00:00:35.900 align:start position:0%
and so the equations for this should
already<00:00:33.960><c> look</c><00:00:34.260><c> familiar</c><00:00:34.730><c> the</c><00:00:35.730><c> way</c><00:00:35.850><c> to</c>

00:00:35.900 --> 00:00:35.910 align:start position:0%
already look familiar the way to
 

00:00:35.910 --> 00:00:38.420 align:start position:0%
already look familiar the way to
implement<00:00:36.239><c> a</c><00:00:36.420><c> fourth</c><00:00:36.630><c> function</c><00:00:36.870><c> is</c><00:00:37.829><c> just</c><00:00:38.160><c> this</c>

00:00:38.420 --> 00:00:38.430 align:start position:0%
implement a fourth function is just this
 

00:00:38.430 --> 00:00:46.100 align:start position:0%
implement a fourth function is just this
equals<00:00:39.390><c> WL</c><00:00:40.200><c> x</c><00:00:41.070><c> a</c><00:00:41.489><c> l</c><00:00:42.320><c> minus</c><00:00:43.320><c> 1</c><00:00:43.700><c> plus</c><00:00:44.700><c> B</c><00:00:45.090><c> L</c><00:00:45.719><c> and</c>

00:00:46.100 --> 00:00:46.110 align:start position:0%
equals WL x a l minus 1 plus B L and
 

00:00:46.110 --> 00:00:50.779 align:start position:0%
equals WL x a l minus 1 plus B L and
then<00:00:47.010><c> a</c><00:00:47.280><c> l</c><00:00:47.629><c> equals</c><00:00:48.860><c> the</c><00:00:49.860><c> activation</c><00:00:50.370><c> function</c>

00:00:50.779 --> 00:00:50.789 align:start position:0%
then a l equals the activation function
 

00:00:50.789 --> 00:00:56.029 align:start position:0%
then a l equals the activation function
applied<00:00:51.030><c> to</c><00:00:51.930><c> Z</c><00:00:52.710><c> and</c><00:00:53.120><c> if</c><00:00:54.120><c> you</c><00:00:54.239><c> want</c><00:00:54.480><c> a</c><00:00:55.039><c> vector</c>

00:00:56.029 --> 00:00:56.039 align:start position:0%
applied to Z and if you want a vector
 

00:00:56.039 --> 00:01:00.340 align:start position:0%
applied to Z and if you want a vector
rise<00:00:56.250><c> implementation</c><00:00:56.420><c> then</c><00:00:57.420><c> it's</c><00:00:57.629><c> just</c><00:00:57.899><c> that</c>

00:01:00.340 --> 00:01:00.350 align:start position:0%
rise implementation then it's just that
 

00:01:00.350 --> 00:01:06.649 align:start position:0%
rise implementation then it's just that
times<00:01:01.350><c> a</c><00:01:01.910><c> L</c><00:01:02.910><c> minus</c><00:01:03.329><c> 1</c><00:01:03.650><c> plus</c><00:01:04.650><c> B</c><00:01:05.270><c> with</c><00:01:06.270><c> the</c><00:01:06.420><c> be</c>

00:01:06.649 --> 00:01:06.659 align:start position:0%
times a L minus 1 plus B with the be
 

00:01:06.659 --> 00:01:09.679 align:start position:0%
times a L minus 1 plus B with the be
adding<00:01:07.619><c> beeping</c><00:01:08.040><c> uh</c><00:01:08.070><c> python</c><00:01:08.850><c> for</c><00:01:09.000><c> costing</c><00:01:09.479><c> and</c>

00:01:09.679 --> 00:01:09.689 align:start position:0%
adding beeping uh python for costing and
 

00:01:09.689 --> 00:01:15.050 align:start position:0%
adding beeping uh python for costing and
a<00:01:10.619><c> l</c><00:01:10.860><c> equals</c><00:01:11.340><c> he</c><00:01:12.140><c> applied</c><00:01:13.140><c> element</c><00:01:13.560><c> wise</c><00:01:13.760><c> to</c><00:01:14.760><c> z</c>

00:01:15.050 --> 00:01:15.060 align:start position:0%
a l equals he applied element wise to z
 

00:01:15.060 --> 00:01:19.130 align:start position:0%
a l equals he applied element wise to z
and<00:01:15.689><c> remember</c><00:01:16.619><c> on</c><00:01:16.920><c> the</c><00:01:17.220><c> diagram</c><00:01:18.180><c> for</c><00:01:19.080><c> the</c>

00:01:19.130 --> 00:01:19.140 align:start position:0%
and remember on the diagram for the
 

00:01:19.140 --> 00:01:20.899 align:start position:0%
and remember on the diagram for the
forth<00:01:19.380><c> step</c><00:01:19.860><c> right</c><00:01:20.220><c> we</c><00:01:20.369><c> had</c><00:01:20.490><c> this</c><00:01:20.580><c> chain</c><00:01:20.880><c> of</c>

00:01:20.899 --> 00:01:20.909 align:start position:0%
forth step right we had this chain of
 

00:01:20.909 --> 00:01:23.570 align:start position:0%
forth step right we had this chain of
bosses<00:01:21.420><c> going</c><00:01:21.720><c> forward</c><00:01:22.170><c> so</c><00:01:22.890><c> you</c><00:01:22.950><c> initialize</c>

00:01:23.570 --> 00:01:23.580 align:start position:0%
bosses going forward so you initialize
 

00:01:23.580 --> 00:01:28.670 align:start position:0%
bosses going forward so you initialize
that<00:01:23.820><c> with</c><00:01:24.299><c> feeding</c><00:01:25.049><c> and</c><00:01:25.350><c> a</c><00:01:26.479><c> 0</c><00:01:27.479><c> which</c><00:01:28.320><c> is</c><00:01:28.439><c> equal</c>

00:01:28.670 --> 00:01:28.680 align:start position:0%
that with feeding and a 0 which is equal
 

00:01:28.680 --> 00:01:30.920 align:start position:0%
that with feeding and a 0 which is equal
to<00:01:28.829><c> X</c><00:01:28.979><c> so</c><00:01:29.490><c> you</c><00:01:29.909><c> know</c><00:01:29.970><c> you</c><00:01:30.060><c> initialize</c><00:01:30.570><c> this</c>

00:01:30.920 --> 00:01:30.930 align:start position:0%
to X so you know you initialize this
 

00:01:30.930 --> 00:01:32.870 align:start position:0%
to X so you know you initialize this
really<00:01:31.619><c> what</c><00:01:31.799><c> is</c><00:01:31.890><c> the</c><00:01:32.009><c> input</c><00:01:32.189><c> to</c><00:01:32.520><c> the</c><00:01:32.610><c> first</c>

00:01:32.870 --> 00:01:32.880 align:start position:0%
really what is the input to the first
 

00:01:32.880 --> 00:01:36.499 align:start position:0%
really what is the input to the first
one<00:01:33.090><c> right</c><00:01:33.360><c> it's</c><00:01:33.540><c> really</c><00:01:33.810><c> um</c><00:01:33.960><c> a</c><00:01:35.000><c> zero</c><00:01:36.000><c> which</c><00:01:36.360><c> is</c>

00:01:36.499 --> 00:01:36.509 align:start position:0%
one right it's really um a zero which is
 

00:01:36.509 --> 00:01:39.590 align:start position:0%
one right it's really um a zero which is
the<00:01:36.780><c> input</c><00:01:37.590><c> features</c><00:01:37.770><c> to</c><00:01:38.579><c> either</c><00:01:39.000><c> for</c><00:01:39.360><c> one</c>

00:01:39.590 --> 00:01:39.600 align:start position:0%
the input features to either for one
 

00:01:39.600 --> 00:01:40.969 align:start position:0%
the input features to either for one
training<00:01:39.960><c> example</c><00:01:40.049><c> if</c><00:01:40.470><c> you're</c><00:01:40.590><c> doing</c><00:01:40.740><c> one</c>

00:01:40.969 --> 00:01:40.979 align:start position:0%
training example if you're doing one
 

00:01:40.979 --> 00:01:45.170 align:start position:0%
training example if you're doing one
example<00:01:41.280><c> at</c><00:01:41.490><c> a</c><00:01:41.549><c> time</c><00:01:41.579><c> or</c><00:01:42.590><c> a</c><00:01:43.640><c> capital</c><00:01:44.640><c> zero</c><00:01:44.939><c> the</c>

00:01:45.170 --> 00:01:45.180 align:start position:0%
example at a time or a capital zero the
 

00:01:45.180 --> 00:01:46.310 align:start position:0%
example at a time or a capital zero the
entire<00:01:45.479><c> training</c><00:01:45.750><c> set</c><00:01:45.990><c> if</c><00:01:46.200><c> you</c><00:01:46.290><c> are</c>

00:01:46.310 --> 00:01:46.320 align:start position:0%
entire training set if you are
 

00:01:46.320 --> 00:01:48.410 align:start position:0%
entire training set if you are
processing<00:01:46.680><c> the</c><00:01:46.979><c> entire</c><00:01:47.340><c> training</c><00:01:47.579><c> set</c><00:01:47.790><c> so</c>

00:01:48.410 --> 00:01:48.420 align:start position:0%
processing the entire training set so
 

00:01:48.420 --> 00:01:50.899 align:start position:0%
processing the entire training set so
that's<00:01:48.600><c> the</c><00:01:49.110><c> input</c><00:01:49.590><c> to</c><00:01:49.710><c> the</c><00:01:49.829><c> first</c><00:01:50.100><c> fort</c>

00:01:50.899 --> 00:01:50.909 align:start position:0%
that's the input to the first fort
 

00:01:50.909 --> 00:01:52.639 align:start position:0%
that's the input to the first fort
function<00:01:51.299><c> in</c><00:01:51.450><c> the</c><00:01:51.509><c> chain</c><00:01:51.750><c> and</c><00:01:52.020><c> then</c><00:01:52.380><c> just</c>

00:01:52.639 --> 00:01:52.649 align:start position:0%
function in the chain and then just
 

00:01:52.649 --> 00:01:54.289 align:start position:0%
function in the chain and then just
repeating<00:01:53.100><c> this</c><00:01:53.250><c> allows</c><00:01:53.610><c> you</c><00:01:53.790><c> to</c><00:01:53.970><c> compute</c>

00:01:54.289 --> 00:01:54.299 align:start position:0%
repeating this allows you to compute
 

00:01:54.299 --> 00:01:56.420 align:start position:0%
repeating this allows you to compute
forward<00:01:54.630><c> propagation</c><00:01:55.079><c> from</c><00:01:55.950><c> left</c><00:01:56.159><c> to</c><00:01:56.219><c> right</c>

00:01:56.420 --> 00:01:56.430 align:start position:0%
forward propagation from left to right
 

00:01:56.430 --> 00:01:58.910 align:start position:0%
forward propagation from left to right
next<00:01:57.390><c> let's</c><00:01:57.630><c> talk</c><00:01:57.840><c> about</c><00:01:58.020><c> the</c><00:01:58.409><c> backward</c>

00:01:58.910 --> 00:01:58.920 align:start position:0%
next let's talk about the backward
 

00:01:58.920 --> 00:02:02.090 align:start position:0%
next let's talk about the backward
propagation<00:01:59.520><c> step</c><00:01:59.850><c> here</c><00:02:00.630><c> your</c><00:02:00.899><c> goes</c><00:02:01.110><c> to</c><00:02:01.380><c> input</c>

00:02:02.090 --> 00:02:02.100 align:start position:0%
propagation step here your goes to input
 

00:02:02.100 --> 00:02:06.709 align:start position:0%
propagation step here your goes to input
D<00:02:02.610><c> al</c><00:02:03.090><c> and</c><00:02:03.590><c> output</c><00:02:04.590><c> D</c><00:02:04.950><c> al</c><00:02:05.219><c> minus</c><00:02:05.549><c> 1</c><00:02:05.790><c> and</c><00:02:06.000><c> D</c><00:02:06.299><c> wo</c>

00:02:06.709 --> 00:02:06.719 align:start position:0%
D al and output D al minus 1 and D wo
 

00:02:06.719 --> 00:02:09.440 align:start position:0%
D al and output D al minus 1 and D wo
and<00:02:07.049><c> DB</c><00:02:07.469><c> let</c><00:02:08.220><c> me</c><00:02:08.280><c> just</c><00:02:08.459><c> write</c><00:02:08.670><c> out</c><00:02:08.910><c> the</c><00:02:09.270><c> steps</c>

00:02:09.440 --> 00:02:09.450 align:start position:0%
and DB let me just write out the steps
 

00:02:09.450 --> 00:02:12.839 align:start position:0%
and DB let me just write out the steps
you<00:02:10.020><c> need</c><00:02:10.050><c> to</c><00:02:10.229><c> compute</c><00:02:10.830><c> these</c><00:02:10.979><c> things</c>

00:02:12.839 --> 00:02:12.849 align:start position:0%
you need to compute these things
 

00:02:12.849 --> 00:02:17.759 align:start position:0%
you need to compute these things
DZ<00:02:13.480><c> l</c><00:02:13.689><c> is</c><00:02:13.989><c> equal</c><00:02:14.379><c> to</c><00:02:15.030><c> da</c><00:02:16.030><c> l</c><00:02:16.359><c> alamin</c><00:02:17.230><c> Weis</c>

00:02:17.759 --> 00:02:17.769 align:start position:0%
DZ l is equal to da l alamin Weis
 

00:02:17.769 --> 00:02:24.809 align:start position:0%
DZ l is equal to da l alamin Weis
product<00:02:18.189><c> with</c><00:02:18.670><c> G</c><00:02:19.090><c> of</c><00:02:19.329><c> L</c><00:02:19.599><c> prime</c><00:02:20.819><c> Z</c><00:02:21.819><c> of</c><00:02:21.999><c> L</c><00:02:23.819><c> and</c>

00:02:24.809 --> 00:02:24.819 align:start position:0%
product with G of L prime Z of L and
 

00:02:24.819 --> 00:02:27.149 align:start position:0%
product with G of L prime Z of L and
then<00:02:25.450><c> computed</c><00:02:26.319><c> derivatives</c>

00:02:27.149 --> 00:02:27.159 align:start position:0%
then computed derivatives
 

00:02:27.159 --> 00:02:34.190 align:start position:0%
then computed derivatives
DW<00:02:27.999><c> l</c><00:02:28.120><c> equals</c><00:02:28.799><c> d</c><00:02:29.799><c> ZL</c><00:02:30.629><c> times</c><00:02:31.629><c> AF</c><00:02:32.230><c> l</c><00:02:33.219><c> minus</c><00:02:33.670><c> 1</c><00:02:33.700><c> i</c>

00:02:34.190 --> 00:02:34.200 align:start position:0%
DW l equals d ZL times AF l minus 1 i
 

00:02:34.200 --> 00:02:36.660 align:start position:0%
DW l equals d ZL times AF l minus 1 i
didn't<00:02:35.200><c> explicitly</c><00:02:35.530><c> put</c><00:02:36.010><c> that</c><00:02:36.189><c> in</c><00:02:36.370><c> the</c><00:02:36.459><c> cache</c>

00:02:36.660 --> 00:02:36.670 align:start position:0%
didn't explicitly put that in the cache
 

00:02:36.670 --> 00:02:38.399 align:start position:0%
didn't explicitly put that in the cache
but<00:02:36.700><c> it</c><00:02:37.000><c> turns</c><00:02:37.209><c> out</c><00:02:37.359><c> you</c><00:02:37.599><c> need</c><00:02:37.780><c> this</c><00:02:37.989><c> as</c><00:02:38.170><c> well</c>

00:02:38.399 --> 00:02:38.409 align:start position:0%
but it turns out you need this as well
 

00:02:38.409 --> 00:02:46.159 align:start position:0%
but it turns out you need this as well
and<00:02:38.849><c> then</c><00:02:39.849><c> DB</c><00:02:40.389><c> l</c><00:02:40.540><c> is</c><00:02:41.200><c> equal</c><00:02:41.409><c> to</c><00:02:41.829><c> DZ</c><00:02:43.680><c> l</c><00:02:44.680><c> and</c>

00:02:46.159 --> 00:02:46.169 align:start position:0%
and then DB l is equal to DZ l and
 

00:02:46.169 --> 00:02:52.080 align:start position:0%
and then DB l is equal to DZ l and
finally<00:02:47.169><c> da</c><00:02:48.040><c> of</c><00:02:48.579><c> L</c><00:02:49.359><c> minus</c><00:02:49.719><c> 1</c><00:02:50.549><c> there's</c><00:02:51.549><c> equal</c><00:02:51.879><c> to</c>

00:02:52.080 --> 00:02:52.090 align:start position:0%
finally da of L minus 1 there's equal to
 

00:02:52.090 --> 00:02:59.670 align:start position:0%
finally da of L minus 1 there's equal to
WL<00:02:53.099><c> transpose</c><00:02:54.900><c> times</c><00:02:56.579><c> DZ</c><00:02:57.579><c> l</c><00:02:57.730><c> ok</c><00:02:58.689><c> and</c><00:02:58.900><c> I</c><00:02:59.590><c> don't</c>

00:02:59.670 --> 00:02:59.680 align:start position:0%
WL transpose times DZ l ok and I don't
 

00:02:59.680 --> 00:03:01.349 align:start position:0%
WL transpose times DZ l ok and I don't
want<00:03:00.010><c> to</c><00:03:00.099><c> go</c><00:03:00.459><c> through</c><00:03:00.669><c> the</c><00:03:00.909><c> detailed</c>

00:03:01.349 --> 00:03:01.359 align:start position:0%
want to go through the detailed
 

00:03:01.359 --> 00:03:02.939 align:start position:0%
want to go through the detailed
derivation<00:03:01.510><c> for</c><00:03:02.049><c> this</c><00:03:02.199><c> but</c><00:03:02.469><c> it</c><00:03:02.590><c> turns</c><00:03:02.799><c> out</c>

00:03:02.939 --> 00:03:02.949 align:start position:0%
derivation for this but it turns out
 

00:03:02.949 --> 00:03:04.619 align:start position:0%
derivation for this but it turns out
that<00:03:03.159><c> if</c><00:03:03.280><c> you</c><00:03:03.340><c> take</c><00:03:03.519><c> this</c><00:03:03.669><c> definition</c><00:03:04.150><c> the</c><00:03:04.389><c> da</c>

00:03:04.619 --> 00:03:04.629 align:start position:0%
that if you take this definition the da
 

00:03:04.629 --> 00:03:07.619 align:start position:0%
that if you take this definition the da
and<00:03:05.349><c> plug</c><00:03:05.650><c> it</c><00:03:05.769><c> in</c><00:03:05.859><c> here</c><00:03:06.129><c> then</c><00:03:06.790><c> you</c><00:03:06.819><c> get</c><00:03:07.389><c> the</c>

00:03:07.619 --> 00:03:07.629 align:start position:0%
and plug it in here then you get the
 

00:03:07.629 --> 00:03:09.420 align:start position:0%
and plug it in here then you get the
same<00:03:07.840><c> formula</c><00:03:08.109><c> as</c><00:03:08.590><c> we</c><00:03:08.799><c> had</c><00:03:09.040><c> in</c><00:03:09.250><c> there</c>

00:03:09.420 --> 00:03:09.430 align:start position:0%
same formula as we had in there
 

00:03:09.430 --> 00:03:13.740 align:start position:0%
same formula as we had in there
previously<00:03:10.120><c> for</c><00:03:10.540><c> how</c><00:03:10.689><c> you</c><00:03:10.799><c> compute</c><00:03:11.799><c> DZ</c><00:03:12.250><c> l</c><00:03:12.689><c> as</c><00:03:13.689><c> a</c>

00:03:13.740 --> 00:03:13.750 align:start position:0%
previously for how you compute DZ l as a
 

00:03:13.750 --> 00:03:15.809 align:start position:0%
previously for how you compute DZ l as a
function<00:03:14.199><c> of</c><00:03:14.319><c> the</c><00:03:14.409><c> previous</c><00:03:14.859><c> DZ</c><00:03:15.129><c> ow</c><00:03:15.280><c> in</c><00:03:15.579><c> fact</c>

00:03:15.809 --> 00:03:15.819 align:start position:0%
function of the previous DZ ow in fact
 

00:03:15.819 --> 00:03:18.689 align:start position:0%
function of the previous DZ ow in fact
well<00:03:16.480><c> if</c><00:03:16.659><c> I</c><00:03:16.780><c> just</c><00:03:16.810><c> plug</c><00:03:17.229><c> that</c><00:03:17.259><c> in</c><00:03:17.530><c> here</c><00:03:17.560><c> you</c><00:03:18.459><c> end</c>

00:03:18.689 --> 00:03:18.699 align:start position:0%
well if I just plug that in here you end
 

00:03:18.699 --> 00:03:24.420 align:start position:0%
well if I just plug that in here you end
up<00:03:18.879><c> that</c><00:03:19.090><c> DZ</c><00:03:19.569><c> L</c><00:03:19.859><c> is</c><00:03:20.859><c> equal</c><00:03:21.370><c> to</c><00:03:22.859><c> WL</c><00:03:23.859><c> plus</c><00:03:24.159><c> 1</c>

00:03:24.420 --> 00:03:24.430 align:start position:0%
up that DZ L is equal to WL plus 1
 

00:03:24.430 --> 00:03:32.999 align:start position:0%
up that DZ L is equal to WL plus 1
transpose<00:03:25.859><c> DZ</c><00:03:26.859><c> l</c><00:03:27.519><c> plus</c><00:03:27.819><c> 1</c><00:03:28.979><c> times</c><00:03:30.000><c> G</c><00:03:31.000><c> L</c><00:03:31.150><c> prime</c><00:03:32.009><c> z</c>

00:03:32.999 --> 00:03:33.009 align:start position:0%
transpose DZ l plus 1 times G L prime z
 

00:03:33.009 --> 00:03:35.640 align:start position:0%
transpose DZ l plus 1 times G L prime z
FL<00:03:33.310><c> I</c><00:03:33.609><c> know</c><00:03:34.239><c> this</c><00:03:34.509><c> is</c><00:03:34.659><c> a</c><00:03:34.689><c> looks</c><00:03:35.169><c> like</c><00:03:35.290><c> a</c><00:03:35.379><c> lot</c><00:03:35.530><c> of</c>

00:03:35.640 --> 00:03:35.650 align:start position:0%
FL I know this is a looks like a lot of
 

00:03:35.650 --> 00:03:37.619 align:start position:0%
FL I know this is a looks like a lot of
algebra<00:03:35.949><c> but</c><00:03:36.430><c> actually</c><00:03:36.699><c> double</c><00:03:37.419><c> check</c><00:03:37.599><c> for</c>

00:03:37.619 --> 00:03:37.629 align:start position:0%
algebra but actually double check for
 

00:03:37.629 --> 00:03:39.390 align:start position:0%
algebra but actually double check for
yourself<00:03:38.079><c> that</c><00:03:38.349><c> this</c><00:03:38.500><c> is</c><00:03:38.560><c> the</c><00:03:38.829><c> equation</c><00:03:39.220><c> we</c>

00:03:39.390 --> 00:03:39.400 align:start position:0%
yourself that this is the equation we
 

00:03:39.400 --> 00:03:41.550 align:start position:0%
yourself that this is the equation we
had<00:03:39.549><c> written</c><00:03:39.699><c> down</c><00:03:40.180><c> for</c><00:03:40.479><c> back</c><00:03:41.019><c> propagation</c>

00:03:41.550 --> 00:03:41.560 align:start position:0%
had written down for back propagation
 

00:03:41.560 --> 00:03:43.589 align:start position:0%
had written down for back propagation
last<00:03:41.919><c> week</c><00:03:42.189><c> when</c><00:03:42.939><c> we</c><00:03:43.090><c> were</c><00:03:43.209><c> doing</c><00:03:43.449><c> in</c><00:03:43.569><c> your</c>

00:03:43.589 --> 00:03:43.599 align:start position:0%
last week when we were doing in your
 

00:03:43.599 --> 00:03:45.210 align:start position:0%
last week when we were doing in your
network<00:03:44.109><c> with</c><00:03:44.319><c> just</c><00:03:44.500><c> a</c><00:03:44.560><c> single</c><00:03:44.769><c> hidden</c><00:03:45.069><c> layer</c>

00:03:45.210 --> 00:03:45.220 align:start position:0%
network with just a single hidden layer
 

00:03:45.220 --> 00:03:47.640 align:start position:0%
network with just a single hidden layer
and<00:03:45.759><c> as</c><00:03:46.269><c> reminder</c><00:03:46.810><c> this</c><00:03:47.049><c> times</c><00:03:47.439><c> this</c>

00:03:47.640 --> 00:03:47.650 align:start position:0%
and as reminder this times this
 

00:03:47.650 --> 00:03:49.979 align:start position:0%
and as reminder this times this
element-wise<00:03:48.250><c> product</c><00:03:48.759><c> but</c><00:03:49.269><c> so</c><00:03:49.419><c> all</c><00:03:49.629><c> you</c><00:03:49.780><c> need</c>

00:03:49.979 --> 00:03:49.989 align:start position:0%
element-wise product but so all you need
 

00:03:49.989 --> 00:03:52.439 align:start position:0%
element-wise product but so all you need
is<00:03:50.229><c> those</c><00:03:50.949><c> four</c><00:03:51.250><c> equations</c><00:03:51.759><c> to</c><00:03:52.000><c> implement</c>

00:03:52.439 --> 00:03:52.449 align:start position:0%
is those four equations to implement
 

00:03:52.449 --> 00:03:55.619 align:start position:0%
is those four equations to implement
your<00:03:52.750><c> backward</c><00:03:53.340><c> function</c><00:03:54.340><c> and</c><00:03:54.519><c> then</c><00:03:55.180><c> finally</c>

00:03:55.619 --> 00:03:55.629 align:start position:0%
your backward function and then finally
 

00:03:55.629 --> 00:03:57.659 align:start position:0%
your backward function and then finally
I'll<00:03:56.349><c> just</c><00:03:56.409><c> write</c><00:03:56.769><c> out</c><00:03:56.979><c> the</c><00:03:57.159><c> vectorized</c>

00:03:57.659 --> 00:03:57.669 align:start position:0%
I'll just write out the vectorized
 

00:03:57.669 --> 00:04:01.159 align:start position:0%
I'll just write out the vectorized
version<00:03:58.150><c> so</c><00:03:58.989><c> the</c><00:03:59.139><c> first</c><00:03:59.409><c> line</c><00:03:59.620><c> becomes</c><00:04:00.069><c> DZ</c><00:04:00.729><c> l</c>

00:04:01.159 --> 00:04:01.169 align:start position:0%
version so the first line becomes DZ l
 

00:04:01.169 --> 00:04:06.420 align:start position:0%
version so the first line becomes DZ l
equals<00:04:02.169><c> d</c><00:04:02.560><c> a</c><00:04:02.799><c> o</c><00:04:04.290><c> element-wise</c><00:04:05.290><c> product</c><00:04:05.889><c> with</c>

00:04:06.420 --> 00:04:06.430 align:start position:0%
equals d a o element-wise product with
 

00:04:06.430 --> 00:04:12.679 align:start position:0%
equals d a o element-wise product with
GL<00:04:07.269><c> prime</c><00:04:07.989><c> of</c><00:04:08.579><c> z</c><00:04:09.579><c> oh</c><00:04:10.469><c> maybe</c><00:04:11.469><c> no</c><00:04:11.650><c> surprise</c><00:04:11.919><c> there</c>

00:04:12.679 --> 00:04:12.689 align:start position:0%
GL prime of z oh maybe no surprise there
 

00:04:12.689 --> 00:04:20.060 align:start position:0%
GL prime of z oh maybe no surprise there
DW<00:04:13.689><c> l</c><00:04:13.979><c> becomes</c><00:04:15.329><c> 1</c><00:04:16.329><c> over</c><00:04:16.539><c> m</c><00:04:16.769><c> DZ</c><00:04:17.769><c> l</c><00:04:18.269><c> times</c>

00:04:20.060 --> 00:04:20.070 align:start position:0%
DW l becomes 1 over m DZ l times
 

00:04:20.070 --> 00:04:24.710 align:start position:0%
DW l becomes 1 over m DZ l times
a<00:04:20.100><c> o</c><00:04:20.460><c> minus</c><00:04:21.240><c> 1</c><00:04:21.480><c> transpose</c><00:04:22.020><c> and</c><00:04:22.680><c> then</c><00:04:23.540><c> DB</c><00:04:24.540><c> l</c>

00:04:24.710 --> 00:04:24.720 align:start position:0%
a o minus 1 transpose and then DB l
 

00:04:24.720 --> 00:04:32.870 align:start position:0%
a o minus 1 transpose and then DB l
becomes<00:04:26.120><c> 1</c><00:04:27.120><c> over</c><00:04:27.150><c> m</c><00:04:27.510><c> and</c><00:04:28.190><c> Peter</c><00:04:29.190><c> Som</c><00:04:29.840><c> DZ</c><00:04:30.840><c> L</c><00:04:31.880><c> then</c>

00:04:32.870 --> 00:04:32.880 align:start position:0%
becomes 1 over m and Peter Som DZ L then
 

00:04:32.880 --> 00:04:34.690 align:start position:0%
becomes 1 over m and Peter Som DZ L then
access<00:04:33.840><c> equals</c><00:04:34.110><c> 1</c>

00:04:34.690 --> 00:04:34.700 align:start position:0%
access equals 1
 

00:04:34.700 --> 00:04:38.480 align:start position:0%
access equals 1
keep<00:04:35.700><c> dims</c><00:04:36.660><c> equals</c><00:04:37.410><c> true</c><00:04:37.770><c> we</c><00:04:38.130><c> talked</c><00:04:38.370><c> about</c>

00:04:38.480 --> 00:04:38.490 align:start position:0%
keep dims equals true we talked about
 

00:04:38.490 --> 00:04:42.080 align:start position:0%
keep dims equals true we talked about
the<00:04:38.790><c> use</c><00:04:39.540><c> of</c><00:04:39.570><c> an</c><00:04:39.900><c> Peter</c><00:04:40.230><c> Som</c><00:04:40.560><c> in</c><00:04:40.920><c> the</c><00:04:41.700><c> previous</c>

00:04:42.080 --> 00:04:42.090 align:start position:0%
the use of an Peter Som in the previous
 

00:04:42.090 --> 00:04:46.850 align:start position:0%
the use of an Peter Som in the previous
week<00:04:42.240><c> to</c><00:04:42.840><c> compute</c><00:04:43.230><c> DB</c><00:04:43.590><c> and</c><00:04:43.830><c> the</c><00:04:44.730><c> finally</c><00:04:45.240><c> da</c><00:04:45.860><c> L</c>

00:04:46.850 --> 00:04:46.860 align:start position:0%
week to compute DB and the finally da L
 

00:04:46.860 --> 00:04:55.660 align:start position:0%
week to compute DB and the finally da L
minus<00:04:47.370><c> 1</c><00:04:47.580><c> is</c><00:04:48.560><c> WL</c><00:04:49.560><c> transpose</c><00:04:50.550><c> times</c><00:04:51.060><c> D</c><00:04:51.830><c> Z</c><00:04:52.830><c> of</c><00:04:54.140><c> L</c>

00:04:55.660 --> 00:04:55.670 align:start position:0%
minus 1 is WL transpose times D Z of L
 

00:04:55.670 --> 00:04:58.760 align:start position:0%
minus 1 is WL transpose times D Z of L
so<00:04:56.670><c> this</c><00:04:56.910><c> allows</c><00:04:57.240><c> you</c><00:04:57.540><c> to</c><00:04:57.780><c> input</c><00:04:58.020><c> this</c>

00:04:58.760 --> 00:04:58.770 align:start position:0%
so this allows you to input this
 

00:04:58.770 --> 00:05:07.100 align:start position:0%
so this allows you to input this
quantity<00:04:59.310><c> da</c><00:05:00.260><c> over</c><00:05:01.260><c> here</c><00:05:01.590><c> and</c><00:05:02.630><c> output</c><00:05:05.330><c> DW</c><00:05:06.330><c> l</c><00:05:06.510><c> DP</c>

00:05:07.100 --> 00:05:07.110 align:start position:0%
quantity da over here and output DW l DP
 

00:05:07.110 --> 00:05:12.490 align:start position:0%
quantity da over here and output DW l DP
l<00:05:07.470><c> the</c><00:05:08.340><c> derivatives</c><00:05:08.940><c> you</c><00:05:09.060><c> need</c><00:05:09.240><c> as</c><00:05:09.860><c> well</c><00:05:10.860><c> as</c><00:05:11.420><c> da</c>

00:05:12.490 --> 00:05:12.500 align:start position:0%
l the derivatives you need as well as da
 

00:05:12.500 --> 00:05:16.580 align:start position:0%
l the derivatives you need as well as da
L<00:05:13.500><c> minus</c><00:05:13.950><c> 1</c><00:05:14.220><c> right</c><00:05:14.670><c> as</c><00:05:14.940><c> follows</c><00:05:15.480><c> so</c><00:05:16.200><c> that's</c><00:05:16.440><c> how</c>

00:05:16.580 --> 00:05:16.590 align:start position:0%
L minus 1 right as follows so that's how
 

00:05:16.590 --> 00:05:19.100 align:start position:0%
L minus 1 right as follows so that's how
you<00:05:16.650><c> implement</c><00:05:17.190><c> the</c><00:05:17.490><c> backward</c><00:05:17.940><c> function</c><00:05:18.390><c> so</c>

00:05:19.100 --> 00:05:19.110 align:start position:0%
you implement the backward function so
 

00:05:19.110 --> 00:05:22.600 align:start position:0%
you implement the backward function so
just<00:05:19.380><c> to</c><00:05:19.470><c> summarize</c><00:05:19.950><c> um</c><00:05:20.570><c> take</c><00:05:21.570><c> the</c><00:05:21.690><c> input</c><00:05:21.990><c> X</c>

00:05:22.600 --> 00:05:22.610 align:start position:0%
just to summarize um take the input X
 

00:05:22.610 --> 00:05:25.670 align:start position:0%
just to summarize um take the input X
you<00:05:23.610><c> might</c><00:05:23.760><c> have</c><00:05:23.970><c> the</c><00:05:24.090><c> first</c><00:05:24.360><c> layer</c><00:05:24.600><c> maybe</c><00:05:25.380><c> has</c>

00:05:25.670 --> 00:05:25.680 align:start position:0%
you might have the first layer maybe has
 

00:05:25.680 --> 00:05:29.540 align:start position:0%
you might have the first layer maybe has
a<00:05:25.710><c> rather</c><00:05:26.580><c> activation</c><00:05:27.330><c> function</c><00:05:27.770><c> then</c><00:05:28.770><c> go</c><00:05:29.490><c> to</c>

00:05:29.540 --> 00:05:29.550 align:start position:0%
a rather activation function then go to
 

00:05:29.550 --> 00:05:31.610 align:start position:0%
a rather activation function then go to
the<00:05:29.760><c> second</c><00:05:30.150><c> layer</c><00:05:30.330><c> maybe</c><00:05:30.930><c> uses</c><00:05:31.320><c> another</c>

00:05:31.610 --> 00:05:31.620 align:start position:0%
the second layer maybe uses another
 

00:05:31.620 --> 00:05:33.830 align:start position:0%
the second layer maybe uses another
value<00:05:32.010><c> activation</c><00:05:32.580><c> function</c><00:05:33.030><c> goes</c><00:05:33.600><c> to</c><00:05:33.780><c> the</c>

00:05:33.830 --> 00:05:33.840 align:start position:0%
value activation function goes to the
 

00:05:33.840 --> 00:05:36.560 align:start position:0%
value activation function goes to the
third<00:05:34.050><c> layer</c><00:05:34.760><c> maybe</c><00:05:35.760><c> has</c><00:05:36.030><c> a</c><00:05:36.060><c> sigmoid</c>

00:05:36.560 --> 00:05:36.570 align:start position:0%
third layer maybe has a sigmoid
 

00:05:36.570 --> 00:05:38.090 align:start position:0%
third layer maybe has a sigmoid
activation<00:05:36.750><c> function</c><00:05:37.200><c> if</c><00:05:37.860><c> you're</c><00:05:37.980><c> doing</c>

00:05:38.090 --> 00:05:38.100 align:start position:0%
activation function if you're doing
 

00:05:38.100 --> 00:05:40.910 align:start position:0%
activation function if you're doing
binary<00:05:38.520><c> classification</c><00:05:38.850><c> and</c><00:05:39.390><c> this</c><00:05:40.050><c> outputs</c><00:05:40.560><c> y</c>

00:05:40.910 --> 00:05:40.920 align:start position:0%
binary classification and this outputs y
 

00:05:40.920 --> 00:05:44.660 align:start position:0%
binary classification and this outputs y
hat<00:05:41.190><c> and</c><00:05:41.630><c> then</c><00:05:42.630><c> using</c><00:05:43.440><c> Y</c><00:05:43.590><c> hat</c><00:05:43.860><c> you</c><00:05:44.070><c> can</c><00:05:44.250><c> compute</c>

00:05:44.660 --> 00:05:44.670 align:start position:0%
hat and then using Y hat you can compute
 

00:05:44.670 --> 00:05:47.780 align:start position:0%
hat and then using Y hat you can compute
the<00:05:45.180><c> loss</c><00:05:45.420><c> and</c><00:05:45.740><c> this</c><00:05:46.740><c> allows</c><00:05:47.190><c> you</c><00:05:47.400><c> to</c><00:05:47.550><c> start</c>

00:05:47.780 --> 00:05:47.790 align:start position:0%
the loss and this allows you to start
 

00:05:47.790 --> 00:05:50.990 align:start position:0%
the loss and this allows you to start
your<00:05:48.000><c> backward</c><00:05:48.450><c> iteration</c><00:05:49.080><c> I</c><00:05:49.940><c> draw</c><00:05:50.940><c> the</c>

00:05:50.990 --> 00:05:51.000 align:start position:0%
your backward iteration I draw the
 

00:05:51.000 --> 00:05:52.670 align:start position:0%
your backward iteration I draw the
arrows<00:05:51.420><c> for</c><00:05:51.630><c> us</c><00:05:51.720><c> I</c><00:05:51.810><c> guess</c><00:05:51.960><c> I</c><00:05:52.230><c> don't</c><00:05:52.470><c> have</c><00:05:52.590><c> to</c>

00:05:52.670 --> 00:05:52.680 align:start position:0%
arrows for us I guess I don't have to
 

00:05:52.680 --> 00:05:57.460 align:start position:0%
arrows for us I guess I don't have to
change<00:05:52.860><c> pens</c><00:05:53.220><c> too</c><00:05:53.490><c> much</c><00:05:53.670><c> where</c><00:05:54.570><c> you</c><00:05:54.750><c> were</c><00:05:54.900><c> then</c>

00:05:57.460 --> 00:05:57.470 align:start position:0%
 
 

00:05:57.470 --> 00:06:02.840 align:start position:0%
 
have<00:05:59.240><c> back</c><00:06:00.240><c> prop</c><00:06:00.950><c> compute</c><00:06:01.950><c> the</c><00:06:02.250><c> derivatives</c>

00:06:02.840 --> 00:06:02.850 align:start position:0%
have back prop compute the derivatives
 

00:06:02.850 --> 00:06:13.430 align:start position:0%
have back prop compute the derivatives
compute<00:06:03.450><c> you</c><00:06:03.720><c> know</c><00:06:03.780><c> DW</c><00:06:04.760><c> 3</c><00:06:06.140><c> DB</c><00:06:07.140><c> 3</c><00:06:08.270><c> DW</c><00:06:09.270><c> 2</c><00:06:10.130><c> DP</c><00:06:11.130><c> 2</c><00:06:12.440><c> DW</c>

00:06:13.430 --> 00:06:13.440 align:start position:0%
compute you know DW 3 DB 3 DW 2 DP 2 DW
 

00:06:13.440 --> 00:06:17.930 align:start position:0%
compute you know DW 3 DB 3 DW 2 DP 2 DW
1<00:06:14.480><c> DB</c><00:06:15.480><c> 1</c><00:06:15.750><c> and</c><00:06:16.050><c> along</c><00:06:16.980><c> the</c><00:06:17.160><c> way</c><00:06:17.280><c> you</c><00:06:17.340><c> would</c><00:06:17.730><c> be</c>

00:06:17.930 --> 00:06:17.940 align:start position:0%
1 DB 1 and along the way you would be
 

00:06:17.940 --> 00:06:20.000 align:start position:0%
1 DB 1 and along the way you would be
computing<00:06:18.780><c> I</c><00:06:18.930><c> guess</c><00:06:19.140><c> the</c><00:06:19.290><c> cash</c><00:06:19.590><c> would</c>

00:06:20.000 --> 00:06:20.010 align:start position:0%
computing I guess the cash would
 

00:06:20.010 --> 00:06:25.140 align:start position:0%
computing I guess the cash would
transfer<00:06:20.520><c> Z</c><00:06:20.880><c> 1</c><00:06:21.120><c> Z</c><00:06:22.110><c> 2</c><00:06:22.550><c> Z</c><00:06:23.550><c> 3</c>

00:06:25.140 --> 00:06:25.150 align:start position:0%
transfer Z 1 Z 2 Z 3
 

00:06:25.150 --> 00:06:30.750 align:start position:0%
transfer Z 1 Z 2 Z 3
and<00:06:25.330><c> here</c><00:06:25.810><c> you</c><00:06:26.050><c> pass</c><00:06:26.320><c> backward</c><00:06:26.680><c> da</c><00:06:28.080><c> -</c><00:06:29.080><c> and</c><00:06:29.760><c> da</c>

00:06:30.750 --> 00:06:30.760 align:start position:0%
and here you pass backward da - and da
 

00:06:30.760 --> 00:06:35.219 align:start position:0%
and here you pass backward da - and da
one<00:06:32.400><c> this</c><00:06:33.400><c> could</c><00:06:33.669><c> compute</c><00:06:34.060><c> da</c><00:06:34.300><c> zero</c><00:06:34.840><c> but</c><00:06:35.080><c> we</c>

00:06:35.219 --> 00:06:35.229 align:start position:0%
one this could compute da zero but we
 

00:06:35.229 --> 00:06:36.750 align:start position:0%
one this could compute da zero but we
won't<00:06:35.410><c> use</c><00:06:35.560><c> that</c><00:06:35.800><c> so</c><00:06:36.010><c> you</c><00:06:36.070><c> can</c><00:06:36.220><c> just</c><00:06:36.250><c> discard</c>

00:06:36.750 --> 00:06:36.760 align:start position:0%
won't use that so you can just discard
 

00:06:36.760 --> 00:06:38.790 align:start position:0%
won't use that so you can just discard
that<00:06:37.000><c> right</c><00:06:37.720><c> and</c><00:06:37.870><c> so</c><00:06:38.260><c> this</c><00:06:38.470><c> is</c><00:06:38.590><c> how</c><00:06:38.740><c> you</c>

00:06:38.790 --> 00:06:38.800 align:start position:0%
that right and so this is how you
 

00:06:38.800 --> 00:06:41.210 align:start position:0%
that right and so this is how you
implement<00:06:39.340><c> for</c><00:06:39.550><c> a</c><00:06:39.580><c> prop</c><00:06:39.820><c> and</c><00:06:40.000><c> back</c><00:06:40.060><c> prop</c><00:06:40.240><c> for</c><00:06:40.750><c> a</c>

00:06:41.210 --> 00:06:41.220 align:start position:0%
implement for a prop and back prop for a
 

00:06:41.220 --> 00:06:44.400 align:start position:0%
implement for a prop and back prop for a
three-layer<00:06:42.220><c> your</c><00:06:43.090><c> network</c><00:06:43.510><c> now</c><00:06:44.169><c> there's</c>

00:06:44.400 --> 00:06:44.410 align:start position:0%
three-layer your network now there's
 

00:06:44.410 --> 00:06:46.350 align:start position:0%
three-layer your network now there's
just<00:06:44.440><c> one</c><00:06:44.590><c> last</c><00:06:44.919><c> detail</c><00:06:45.160><c> that</c><00:06:45.580><c> I</c><00:06:45.669><c> didn't</c><00:06:46.090><c> talk</c>

00:06:46.350 --> 00:06:46.360 align:start position:0%
just one last detail that I didn't talk
 

00:06:46.360 --> 00:06:48.420 align:start position:0%
just one last detail that I didn't talk
about<00:06:46.660><c> which</c><00:06:46.840><c> is</c><00:06:46.870><c> for</c><00:06:47.560><c> the</c><00:06:47.650><c> forward</c><00:06:48.070><c> recursion</c>

00:06:48.420 --> 00:06:48.430 align:start position:0%
about which is for the forward recursion
 

00:06:48.430 --> 00:06:51.450 align:start position:0%
about which is for the forward recursion
we<00:06:48.880><c> would</c><00:06:49.060><c> initialize</c><00:06:49.570><c> it</c><00:06:49.870><c> with</c><00:06:50.080><c> the</c><00:06:50.650><c> input</c>

00:06:51.450 --> 00:06:51.460 align:start position:0%
we would initialize it with the input
 

00:06:51.460 --> 00:06:53.550 align:start position:0%
we would initialize it with the input
data<00:06:51.729><c> X</c><00:06:52.180><c> how</c><00:06:52.600><c> about</c><00:06:52.780><c> the</c><00:06:52.870><c> backward</c><00:06:53.290><c> recursion</c>

00:06:53.550 --> 00:06:53.560 align:start position:0%
data X how about the backward recursion
 

00:06:53.560 --> 00:06:59.700 align:start position:0%
data X how about the backward recursion
well<00:06:54.490><c> it</c><00:06:54.550><c> turns</c><00:06:54.760><c> out</c><00:06:54.940><c> that</c><00:06:55.560><c> D</c><00:06:56.560><c> a</c><00:06:56.910><c> of</c><00:06:57.910><c> L</c><00:06:58.710><c> when</c>

00:06:59.700 --> 00:06:59.710 align:start position:0%
well it turns out that D a of L when
 

00:06:59.710 --> 00:07:01.230 align:start position:0%
well it turns out that D a of L when
you're<00:06:59.889><c> using</c><00:07:00.070><c> logistic</c><00:07:00.490><c> regression</c><00:07:01.030><c> when</c>

00:07:01.230 --> 00:07:01.240 align:start position:0%
you're using logistic regression when
 

00:07:01.240 --> 00:07:03.000 align:start position:0%
you're using logistic regression when
you're<00:07:01.360><c> doing</c><00:07:01.510><c> binary</c><00:07:01.720><c> classification</c><00:07:02.139><c> is</c>

00:07:03.000 --> 00:07:03.010 align:start position:0%
you're doing binary classification is
 

00:07:03.010 --> 00:07:08.790 align:start position:0%
you're doing binary classification is
equal<00:07:03.490><c> to</c><00:07:03.699><c> Y</c><00:07:04.419><c> over</c><00:07:04.449><c> a</c><00:07:04.960><c> plus</c><00:07:05.889><c> 1</c><00:07:06.220><c> minus</c><00:07:06.580><c> y</c><00:07:07.050><c> over</c><00:07:08.050><c> 1</c>

00:07:08.790 --> 00:07:08.800 align:start position:0%
equal to Y over a plus 1 minus y over 1
 

00:07:08.800 --> 00:07:11.250 align:start position:0%
equal to Y over a plus 1 minus y over 1
minus<00:07:09.190><c> a</c><00:07:09.400><c> so</c><00:07:10.240><c> turns</c><00:07:10.479><c> out</c><00:07:10.690><c> that</c><00:07:10.930><c> the</c><00:07:11.110><c> derivative</c>

00:07:11.250 --> 00:07:11.260 align:start position:0%
minus a so turns out that the derivative
 

00:07:11.260 --> 00:07:13.350 align:start position:0%
minus a so turns out that the derivative
of<00:07:11.740><c> the</c><00:07:11.860><c> loss</c><00:07:12.039><c> function</c><00:07:12.250><c> with</c><00:07:12.639><c> respect</c><00:07:13.060><c> to</c><00:07:13.120><c> the</c>

00:07:13.350 --> 00:07:13.360 align:start position:0%
of the loss function with respect to the
 

00:07:13.360 --> 00:07:16.170 align:start position:0%
of the loss function with respect to the
output<00:07:13.870><c> we're</c><00:07:14.320><c> expected</c><00:07:14.740><c> Y</c><00:07:14.860><c> hat</c><00:07:15.160><c> can</c><00:07:15.880><c> be</c><00:07:16.000><c> shown</c>

00:07:16.170 --> 00:07:16.180 align:start position:0%
output we're expected Y hat can be shown
 

00:07:16.180 --> 00:07:18.360 align:start position:0%
output we're expected Y hat can be shown
to<00:07:16.240><c> be</c><00:07:16.449><c> equal</c><00:07:16.539><c> to</c><00:07:16.750><c> dis</c><00:07:17.100><c> if</c><00:07:18.100><c> you're</c><00:07:18.220><c> familiar</c>

00:07:18.360 --> 00:07:18.370 align:start position:0%
to be equal to dis if you're familiar
 

00:07:18.370 --> 00:07:20.490 align:start position:0%
to be equal to dis if you're familiar
with<00:07:18.610><c> calculus</c><00:07:18.789><c> if</c><00:07:19.180><c> you</c><00:07:19.270><c> look</c><00:07:19.419><c> up</c><00:07:19.600><c> the</c><00:07:19.780><c> loss</c>

00:07:20.490 --> 00:07:20.500 align:start position:0%
with calculus if you look up the loss
 

00:07:20.500 --> 00:07:22.740 align:start position:0%
with calculus if you look up the loss
function<00:07:20.740><c> L</c><00:07:21.130><c> and</c><00:07:21.490><c> take</c><00:07:21.669><c> derivatives</c><00:07:22.270><c> respect</c>

00:07:22.740 --> 00:07:22.750 align:start position:0%
function L and take derivatives respect
 

00:07:22.750 --> 00:07:24.779 align:start position:0%
function L and take derivatives respect
to<00:07:22.840><c> Y</c><00:07:23.020><c> hat</c><00:07:23.260><c> and</c><00:07:23.470><c> respect</c><00:07:23.770><c> to</c><00:07:23.860><c> a</c><00:07:24.010><c> you</c><00:07:24.490><c> can</c><00:07:24.639><c> show</c>

00:07:24.779 --> 00:07:24.789 align:start position:0%
to Y hat and respect to a you can show
 

00:07:24.789 --> 00:07:27.180 align:start position:0%
to Y hat and respect to a you can show
that<00:07:24.820><c> you</c><00:07:25.030><c> get</c><00:07:25.270><c> that</c><00:07:25.419><c> formula</c><00:07:25.960><c> so</c><00:07:26.199><c> this</c><00:07:26.889><c> is</c><00:07:27.070><c> the</c>

00:07:27.180 --> 00:07:27.190 align:start position:0%
that you get that formula so this is the
 

00:07:27.190 --> 00:07:29.520 align:start position:0%
that you get that formula so this is the
formula<00:07:27.580><c> that</c><00:07:27.669><c> you</c><00:07:27.729><c> should</c><00:07:27.760><c> use</c><00:07:28.060><c> for</c><00:07:28.090><c> da</c><00:07:28.630><c> for</c>

00:07:29.520 --> 00:07:29.530 align:start position:0%
formula that you should use for da for
 

00:07:29.530 --> 00:07:32.700 align:start position:0%
formula that you should use for da for
the<00:07:29.620><c> final</c><00:07:30.010><c> layer</c><00:07:30.160><c> capital</c><00:07:31.000><c> L</c><00:07:31.380><c> and</c><00:07:32.380><c> of</c><00:07:32.500><c> course</c>

00:07:32.700 --> 00:07:32.710 align:start position:0%
the final layer capital L and of course
 

00:07:32.710 --> 00:07:34.620 align:start position:0%
the final layer capital L and of course
if<00:07:32.860><c> you</c><00:07:33.010><c> were</c><00:07:33.160><c> to</c><00:07:33.460><c> have</c><00:07:34.030><c> a</c><00:07:34.090><c> vectorized</c>

00:07:34.620 --> 00:07:34.630 align:start position:0%
if you were to have a vectorized
 

00:07:34.630 --> 00:07:36.960 align:start position:0%
if you were to have a vectorized
implementation<00:07:35.440><c> then</c><00:07:36.070><c> you</c><00:07:36.250><c> initialize</c><00:07:36.789><c> the</c>

00:07:36.960 --> 00:07:36.970 align:start position:0%
implementation then you initialize the
 

00:07:36.970 --> 00:07:39.270 align:start position:0%
implementation then you initialize the
backward<00:07:37.360><c> recursion</c><00:07:37.690><c> not</c><00:07:38.590><c> with</c><00:07:38.770><c> this</c><00:07:39.010><c> there</c>

00:07:39.270 --> 00:07:39.280 align:start position:0%
backward recursion not with this there
 

00:07:39.280 --> 00:07:43.080 align:start position:0%
backward recursion not with this there
will<00:07:39.400><c> be</c><00:07:39.550><c> a</c><00:07:40.229><c> capital</c><00:07:41.229><c> A</c><00:07:41.530><c> for</c><00:07:42.520><c> the</c><00:07:42.639><c> layer</c><00:07:42.820><c> L</c>

00:07:43.080 --> 00:07:43.090 align:start position:0%
will be a capital A for the layer L
 

00:07:43.090 --> 00:07:45.330 align:start position:0%
will be a capital A for the layer L
which<00:07:43.870><c> is</c><00:07:44.020><c> going</c><00:07:44.200><c> to</c><00:07:44.320><c> be</c><00:07:44.560><c> you</c><00:07:45.039><c> know</c><00:07:45.099><c> the</c><00:07:45.310><c> same</c>

00:07:45.330 --> 00:07:45.340 align:start position:0%
which is going to be you know the same
 

00:07:45.340 --> 00:07:48.990 align:start position:0%
which is going to be you know the same
thing<00:07:45.849><c> for</c><00:07:46.750><c> the</c><00:07:46.870><c> different</c><00:07:47.169><c> examples</c><00:07:48.000><c> right</c>

00:07:48.990 --> 00:07:49.000 align:start position:0%
thing for the different examples right
 

00:07:49.000 --> 00:07:51.930 align:start position:0%
thing for the different examples right
over<00:07:49.450><c> a</c><00:07:50.280><c> for</c><00:07:51.280><c> the</c><00:07:51.340><c> first</c><00:07:51.520><c> training</c><00:07:51.789><c> example</c>

00:07:51.930 --> 00:07:51.940 align:start position:0%
over a for the first training example
 

00:07:51.940 --> 00:07:54.870 align:start position:0%
over a for the first training example
plus<00:07:52.660><c> 1</c><00:07:52.930><c> minus</c><00:07:53.289><c> y</c><00:07:53.530><c> for</c><00:07:54.370><c> the</c><00:07:54.430><c> first</c><00:07:54.669><c> training</c>

00:07:54.870 --> 00:07:54.880 align:start position:0%
plus 1 minus y for the first training
 

00:07:54.880 --> 00:07:57.510 align:start position:0%
plus 1 minus y for the first training
example<00:07:54.940><c> over</c><00:07:55.660><c> 1</c><00:07:55.870><c> minus</c><00:07:56.320><c> a</c><00:07:56.530><c> for</c><00:07:57.310><c> the</c><00:07:57.370><c> first</c>

00:07:57.510 --> 00:07:57.520 align:start position:0%
example over 1 minus a for the first
 

00:07:57.520 --> 00:08:01.020 align:start position:0%
example over 1 minus a for the first
training<00:07:57.760><c> example</c><00:07:57.880><c> both</c><00:07:58.660><c> on</c><00:07:58.870><c> top</c><00:07:59.110><c> down</c><00:07:59.919><c> to</c><00:08:00.190><c> the</c>

00:08:01.020 --> 00:08:01.030 align:start position:0%
training example both on top down to the
 

00:08:01.030 --> 00:08:02.879 align:start position:0%
training example both on top down to the
M<00:08:01.210><c> training</c><00:08:02.139><c> example</c>

00:08:02.879 --> 00:08:02.889 align:start position:0%
M training example
 

00:08:02.889 --> 00:08:06.180 align:start position:0%
M training example
so<00:08:03.580><c> 1</c><00:08:03.729><c> minus</c><00:08:03.760><c> a</c><00:08:04.300><c> of</c><00:08:04.330><c> them</c><00:08:04.690><c> so</c><00:08:05.620><c> that's</c><00:08:05.889><c> how</c><00:08:06.130><c> you</c>

00:08:06.180 --> 00:08:06.190 align:start position:0%
so 1 minus a of them so that's how you
 

00:08:06.190 --> 00:08:09.480 align:start position:0%
so 1 minus a of them so that's how you
to<00:08:06.550><c> implement</c><00:08:07.410><c> the</c><00:08:08.410><c> vectorized</c><00:08:08.979><c> version</c>

00:08:09.480 --> 00:08:09.490 align:start position:0%
to implement the vectorized version
 

00:08:09.490 --> 00:08:11.490 align:start position:0%
to implement the vectorized version
that's<00:08:09.699><c> how</c><00:08:09.789><c> you</c><00:08:09.849><c> initialize</c><00:08:10.750><c> the</c><00:08:11.050><c> vectorized</c>

00:08:11.490 --> 00:08:11.500 align:start position:0%
that's how you initialize the vectorized
 

00:08:11.500 --> 00:08:13.680 align:start position:0%
that's how you initialize the vectorized
version<00:08:11.919><c> of</c><00:08:12.010><c> backpropagation</c><00:08:12.340><c> so</c><00:08:13.270><c> you've</c><00:08:13.510><c> now</c>

00:08:13.680 --> 00:08:13.690 align:start position:0%
version of backpropagation so you've now
 

00:08:13.690 --> 00:08:15.960 align:start position:0%
version of backpropagation so you've now
seen<00:08:14.080><c> the</c><00:08:14.440><c> basic</c><00:08:14.919><c> building</c><00:08:15.070><c> blocks</c><00:08:15.280><c> of</c><00:08:15.729><c> both</c>

00:08:15.960 --> 00:08:15.970 align:start position:0%
seen the basic building blocks of both
 

00:08:15.970 --> 00:08:18.300 align:start position:0%
seen the basic building blocks of both
for<00:08:16.419><c> propagation</c><00:08:16.960><c> as</c><00:08:17.349><c> well</c><00:08:17.680><c> as</c><00:08:17.919><c> back</c>

00:08:18.300 --> 00:08:18.310 align:start position:0%
for propagation as well as back
 

00:08:18.310 --> 00:08:21.689 align:start position:0%
for propagation as well as back
propagation<00:08:19.139><c> now</c><00:08:20.139><c> if</c><00:08:20.500><c> you</c><00:08:20.949><c> implement</c><00:08:21.610><c> these</c>

00:08:21.689 --> 00:08:21.699 align:start position:0%
propagation now if you implement these
 

00:08:21.699 --> 00:08:23.460 align:start position:0%
propagation now if you implement these
equations<00:08:22.240><c> you</c><00:08:22.449><c> will</c><00:08:22.690><c> get</c><00:08:22.990><c> a</c><00:08:23.020><c> correct</c>

00:08:23.460 --> 00:08:23.470 align:start position:0%
equations you will get a correct
 

00:08:23.470 --> 00:08:25.920 align:start position:0%
equations you will get a correct
implementation<00:08:23.789><c> for</c><00:08:24.789><c> prop</c><00:08:25.090><c> and</c><00:08:25.270><c> back</c><00:08:25.330><c> prop</c><00:08:25.479><c> to</c>

00:08:25.920 --> 00:08:25.930 align:start position:0%
implementation for prop and back prop to
 

00:08:25.930 --> 00:08:27.779 align:start position:0%
implementation for prop and back prop to
get<00:08:26.080><c> you</c><00:08:26.199><c> the</c><00:08:26.320><c> derivatives</c><00:08:26.770><c> you</c><00:08:26.919><c> need</c><00:08:27.130><c> you</c>

00:08:27.779 --> 00:08:27.789 align:start position:0%
get you the derivatives you need you
 

00:08:27.789 --> 00:08:29.070 align:start position:0%
get you the derivatives you need you
might<00:08:27.970><c> be</c><00:08:28.060><c> thinking</c><00:08:28.419><c> wow</c><00:08:28.570><c> those</c><00:08:28.780><c> are</c><00:08:28.840><c> all</c>

00:08:29.070 --> 00:08:29.080 align:start position:0%
might be thinking wow those are all
 

00:08:29.080 --> 00:08:30.719 align:start position:0%
might be thinking wow those are all
equations<00:08:29.380><c> I'm</c><00:08:29.770><c> slightly</c><00:08:29.949><c> confused</c><00:08:30.220><c> I'm</c><00:08:30.580><c> not</c>

00:08:30.719 --> 00:08:30.729 align:start position:0%
equations I'm slightly confused I'm not
 

00:08:30.729 --> 00:08:32.339 align:start position:0%
equations I'm slightly confused I'm not
quite<00:08:30.910><c> sure</c><00:08:30.940><c> I</c><00:08:31.090><c> see</c><00:08:31.300><c> how</c><00:08:31.510><c> this</c><00:08:31.690><c> works</c><00:08:31.750><c> and</c><00:08:32.229><c> if</c>

00:08:32.339 --> 00:08:32.349 align:start position:0%
quite sure I see how this works and if
 

00:08:32.349 --> 00:08:34.260 align:start position:0%
quite sure I see how this works and if
you're<00:08:32.440><c> feeling</c><00:08:32.770><c> that</c><00:08:32.919><c> way</c><00:08:32.979><c> my</c><00:08:33.700><c> advice</c><00:08:34.030><c> is</c>

00:08:34.260 --> 00:08:34.270 align:start position:0%
you're feeling that way my advice is
 

00:08:34.270 --> 00:08:37.170 align:start position:0%
you're feeling that way my advice is
when<00:08:34.450><c> you</c><00:08:35.079><c> get</c><00:08:35.260><c> to</c><00:08:35.320><c> this</c><00:08:35.650><c> week's</c><00:08:35.890><c> programming</c>

00:08:37.170 --> 00:08:37.180 align:start position:0%
when you get to this week's programming
 

00:08:37.180 --> 00:08:39.660 align:start position:0%
when you get to this week's programming
you<00:08:37.540><c> will</c><00:08:37.780><c> be</c><00:08:38.080><c> able</c><00:08:38.170><c> to</c><00:08:38.620><c> implement</c><00:08:39.190><c> these</c><00:08:39.310><c> for</c>

00:08:39.660 --> 00:08:39.670 align:start position:0%
you will be able to implement these for
 

00:08:39.670 --> 00:08:41.190 align:start position:0%
you will be able to implement these for
yourself<00:08:40.060><c> and</c><00:08:40.330><c> there'll</c><00:08:40.660><c> be</c><00:08:40.720><c> much</c><00:08:41.020><c> more</c>

00:08:41.190 --> 00:08:41.200 align:start position:0%
yourself and there'll be much more
 

00:08:41.200 --> 00:08:42.990 align:start position:0%
yourself and there'll be much more
concrete<00:08:41.770><c> and</c><00:08:42.070><c> I</c><00:08:42.250><c> know</c><00:08:42.340><c> there</c><00:08:42.640><c> was</c><00:08:42.730><c> a</c><00:08:42.760><c> lot</c><00:08:42.970><c> of</c>

00:08:42.990 --> 00:08:43.000 align:start position:0%
concrete and I know there was a lot of
 

00:08:43.000 --> 00:08:45.000 align:start position:0%
concrete and I know there was a lot of
equations<00:08:43.300><c> and</c><00:08:43.810><c> maybe</c><00:08:44.320><c> some</c><00:08:44.530><c> of</c><00:08:44.590><c> equations</c>

00:08:45.000 --> 00:08:45.010 align:start position:0%
equations and maybe some of equations
 

00:08:45.010 --> 00:08:47.670 align:start position:0%
equations and maybe some of equations
didn't<00:08:45.280><c> make</c><00:08:45.370><c> complete</c><00:08:45.760><c> sense</c><00:08:45.790><c> but</c><00:08:46.600><c> if</c><00:08:47.050><c> you</c>

00:08:47.670 --> 00:08:47.680 align:start position:0%
didn't make complete sense but if you
 

00:08:47.680 --> 00:08:49.530 align:start position:0%
didn't make complete sense but if you
work<00:08:47.980><c> through</c><00:08:48.280><c> the</c><00:08:48.460><c> calculus</c><00:08:48.700><c> and</c><00:08:49.180><c> the</c><00:08:49.270><c> linear</c>

00:08:49.530 --> 00:08:49.540 align:start position:0%
work through the calculus and the linear
 

00:08:49.540 --> 00:08:51.540 align:start position:0%
work through the calculus and the linear
algebra<00:08:49.690><c> which</c><00:08:50.140><c> is</c><00:08:50.170><c> not</c><00:08:50.440><c> easy</c><00:08:50.740><c> so</c><00:08:51.160><c> you</c><00:08:51.460><c> know</c>

00:08:51.540 --> 00:08:51.550 align:start position:0%
algebra which is not easy so you know
 

00:08:51.550 --> 00:08:53.070 align:start position:0%
algebra which is not easy so you know
feel<00:08:51.820><c> free</c><00:08:51.850><c> to</c><00:08:52.000><c> try</c><00:08:52.330><c> but</c><00:08:52.600><c> that's</c><00:08:52.750><c> actually</c><00:08:52.870><c> a</c>

00:08:53.070 --> 00:08:53.080 align:start position:0%
feel free to try but that's actually a
 

00:08:53.080 --> 00:08:55.260 align:start position:0%
feel free to try but that's actually a
bundle<00:08:53.410><c> more</c><00:08:53.590><c> difficult</c><00:08:54.370><c> derivations</c><00:08:54.760><c> in</c>

00:08:55.260 --> 00:08:55.270 align:start position:0%
bundle more difficult derivations in
 

00:08:55.270 --> 00:08:57.000 align:start position:0%
bundle more difficult derivations in
machine<00:08:55.630><c> learning</c><00:08:55.990><c> it</c><00:08:56.410><c> turns</c><00:08:56.680><c> out</c><00:08:56.890><c> the</c>

00:08:57.000 --> 00:08:57.010 align:start position:0%
machine learning it turns out the
 

00:08:57.010 --> 00:08:59.130 align:start position:0%
machine learning it turns out the
equations<00:08:57.430><c> roll</c><00:08:57.670><c> down</c><00:08:57.850><c> at</c><00:08:58.060><c> just</c><00:08:58.240><c> the</c><00:08:58.630><c> calculus</c>

00:08:59.130 --> 00:08:59.140 align:start position:0%
equations roll down at just the calculus
 

00:08:59.140 --> 00:09:01.080 align:start position:0%
equations roll down at just the calculus
equations<00:08:59.620><c> for</c><00:08:59.830><c> computing</c><00:09:00.310><c> the</c><00:09:00.520><c> derivatives</c>

00:09:01.080 --> 00:09:01.090 align:start position:0%
equations for computing the derivatives
 

00:09:01.090 --> 00:09:03.300 align:start position:0%
equations for computing the derivatives
especially<00:09:01.600><c> in</c><00:09:01.660><c> background</c><00:09:02.170><c> but</c><00:09:03.070><c> once</c><00:09:03.220><c> again</c>

00:09:03.300 --> 00:09:03.310 align:start position:0%
especially in background but once again
 

00:09:03.310 --> 00:09:04.830 align:start position:0%
especially in background but once again
if<00:09:03.580><c> this</c><00:09:03.700><c> feels</c><00:09:04.000><c> a</c><00:09:04.030><c> little</c><00:09:04.210><c> bit</c><00:09:04.330><c> abstract</c><00:09:04.510><c> a</c>

00:09:04.830 --> 00:09:04.840 align:start position:0%
if this feels a little bit abstract a
 

00:09:04.840 --> 00:09:06.690 align:start position:0%
if this feels a little bit abstract a
little<00:09:05.020><c> bit</c><00:09:05.110><c> mysterious</c><00:09:05.260><c> to</c><00:09:05.800><c> you</c><00:09:05.950><c> my</c><00:09:06.550><c> advice</c>

00:09:06.690 --> 00:09:06.700 align:start position:0%
little bit mysterious to you my advice
 

00:09:06.700 --> 00:09:08.910 align:start position:0%
little bit mysterious to you my advice
is<00:09:07.150><c> when</c><00:09:07.600><c> you've</c><00:09:07.750><c> done</c><00:09:07.960><c> their</c><00:09:08.230><c> prime</c><00:09:08.410><c> exercise</c>

00:09:08.910 --> 00:09:08.920 align:start position:0%
is when you've done their prime exercise
 

00:09:08.920 --> 00:09:11.180 align:start position:0%
is when you've done their prime exercise
it<00:09:09.220><c> will</c><00:09:09.310><c> feel</c><00:09:09.580><c> a</c><00:09:09.610><c> bit</c><00:09:09.850><c> more</c><00:09:10.030><c> concrete</c><00:09:10.270><c> to</c><00:09:10.750><c> you</c>

00:09:11.180 --> 00:09:11.190 align:start position:0%
it will feel a bit more concrete to you
 

00:09:11.190 --> 00:09:13.320 align:start position:0%
it will feel a bit more concrete to you
although<00:09:12.190><c> I</c><00:09:12.220><c> have</c><00:09:12.370><c> to</c><00:09:12.400><c> say</c><00:09:12.520><c> you</c><00:09:13.180><c> know</c><00:09:13.300><c> even</c>

00:09:13.320 --> 00:09:13.330 align:start position:0%
although I have to say you know even
 

00:09:13.330 --> 00:09:15.210 align:start position:0%
although I have to say you know even
today<00:09:13.960><c> when</c><00:09:14.290><c> I</c><00:09:14.320><c> implement</c><00:09:14.830><c> a</c><00:09:14.890><c> learning</c>

00:09:15.210 --> 00:09:15.220 align:start position:0%
today when I implement a learning
 

00:09:15.220 --> 00:09:17.730 align:start position:0%
today when I implement a learning
algorithm<00:09:15.490><c> sometimes</c><00:09:16.270><c> even</c><00:09:17.140><c> I'm</c><00:09:17.290><c> surprised</c>

00:09:17.730 --> 00:09:17.740 align:start position:0%
algorithm sometimes even I'm surprised
 

00:09:17.740 --> 00:09:18.780 align:start position:0%
algorithm sometimes even I'm surprised
when<00:09:17.980><c> my</c><00:09:18.070><c> learning</c><00:09:18.430><c> algorithm</c>

00:09:18.780 --> 00:09:18.790 align:start position:0%
when my learning algorithm
 

00:09:18.790 --> 00:09:20.310 align:start position:0%
when my learning algorithm
implementation<00:09:19.420><c> works</c><00:09:19.690><c> and</c><00:09:19.960><c> it's</c><00:09:20.080><c> because</c>

00:09:20.310 --> 00:09:20.320 align:start position:0%
implementation works and it's because
 

00:09:20.320 --> 00:09:22.410 align:start position:0%
implementation works and it's because
lot<00:09:20.950><c> of</c><00:09:20.980><c> the</c><00:09:21.100><c> complexity</c><00:09:21.760><c> of</c><00:09:22.090><c> machine</c>

00:09:22.410 --> 00:09:22.420 align:start position:0%
lot of the complexity of machine
 

00:09:22.420 --> 00:09:24.360 align:start position:0%
lot of the complexity of machine
learning<00:09:22.570><c> comes</c><00:09:23.320><c> from</c><00:09:23.410><c> the</c><00:09:23.620><c> j-turn</c><00:09:23.860><c> rather</c>

00:09:24.360 --> 00:09:24.370 align:start position:0%
learning comes from the j-turn rather
 

00:09:24.370 --> 00:09:26.220 align:start position:0%
learning comes from the j-turn rather
than<00:09:24.610><c> from</c><00:09:24.730><c> the</c><00:09:24.820><c> lines</c><00:09:25.120><c> of</c><00:09:25.300><c> code</c><00:09:25.480><c> so</c><00:09:25.810><c> sometimes</c>

00:09:26.220 --> 00:09:26.230 align:start position:0%
than from the lines of code so sometimes
 

00:09:26.230 --> 00:09:28.170 align:start position:0%
than from the lines of code so sometimes
you<00:09:26.410><c> feel</c><00:09:26.620><c> like</c><00:09:26.680><c> you</c><00:09:27.430><c> implement</c><00:09:27.760><c> a</c><00:09:27.850><c> few</c><00:09:28.030><c> lines</c>

00:09:28.170 --> 00:09:28.180 align:start position:0%
you feel like you implement a few lines
 

00:09:28.180 --> 00:09:30.210 align:start position:0%
you feel like you implement a few lines
of<00:09:28.330><c> code</c><00:09:28.390><c> not</c><00:09:28.840><c> question</c><00:09:29.230><c> what</c><00:09:29.740><c> it</c><00:09:29.860><c> did</c><00:09:30.040><c> but</c>

00:09:30.210 --> 00:09:30.220 align:start position:0%
of code not question what it did but
 

00:09:30.220 --> 00:09:31.680 align:start position:0%
of code not question what it did but
there's<00:09:30.400><c> almost</c><00:09:30.550><c> magically</c><00:09:31.150><c> works</c><00:09:31.420><c> and</c>

00:09:31.680 --> 00:09:31.690 align:start position:0%
there's almost magically works and
 

00:09:31.690 --> 00:09:33.450 align:start position:0%
there's almost magically works and
because<00:09:31.780><c> of</c><00:09:32.080><c> all</c><00:09:32.200><c> the</c><00:09:32.320><c> magic</c><00:09:32.530><c> is</c><00:09:32.950><c> actually</c><00:09:33.250><c> not</c>

00:09:33.450 --> 00:09:33.460 align:start position:0%
because of all the magic is actually not
 

00:09:33.460 --> 00:09:35.580 align:start position:0%
because of all the magic is actually not
in<00:09:33.730><c> the</c><00:09:33.970><c> piece</c><00:09:34.510><c> of</c><00:09:34.630><c> code</c><00:09:34.840><c> you</c><00:09:35.020><c> write</c><00:09:35.230><c> which</c><00:09:35.470><c> is</c>

00:09:35.580 --> 00:09:35.590 align:start position:0%
in the piece of code you write which is
 

00:09:35.590 --> 00:09:37.350 align:start position:0%
in the piece of code you write which is
often<00:09:35.890><c> you</c><00:09:36.010><c> know</c><00:09:36.130><c> not</c><00:09:36.370><c> too</c><00:09:36.730><c> long</c><00:09:36.970><c> it's</c><00:09:37.210><c> not</c>

00:09:37.350 --> 00:09:37.360 align:start position:0%
often you know not too long it's not
 

00:09:37.360 --> 00:09:39.120 align:start position:0%
often you know not too long it's not
it's<00:09:37.780><c> not</c><00:09:37.930><c> exactly</c><00:09:38.290><c> simple</c><00:09:38.710><c> but</c><00:09:38.860><c> there's</c><00:09:38.980><c> not</c>

00:09:39.120 --> 00:09:39.130 align:start position:0%
it's not exactly simple but there's not
 

00:09:39.130 --> 00:09:41.370 align:start position:0%
it's not exactly simple but there's not
you<00:09:39.790><c> know</c><00:09:39.820><c> ten</c><00:09:40.300><c> thousand</c><00:09:40.750><c> a</c><00:09:40.810><c> hundred</c><00:09:40.930><c> thousand</c>

00:09:41.370 --> 00:09:41.380 align:start position:0%
you know ten thousand a hundred thousand
 

00:09:41.380 --> 00:09:43.230 align:start position:0%
you know ten thousand a hundred thousand
lines<00:09:41.500><c> of</c><00:09:41.650><c> code</c><00:09:41.710><c> but</c><00:09:42.400><c> you</c><00:09:42.430><c> feed</c><00:09:42.700><c> it</c><00:09:42.820><c> so</c><00:09:43.060><c> much</c>

00:09:43.230 --> 00:09:43.240 align:start position:0%
lines of code but you feed it so much
 

00:09:43.240 --> 00:09:45.660 align:start position:0%
lines of code but you feed it so much
data<00:09:43.480><c> that</c><00:09:43.900><c> sometimes</c><00:09:44.470><c> even</c><00:09:45.190><c> don't</c><00:09:45.370><c> work</c><00:09:45.550><c> the</c>

00:09:45.660 --> 00:09:45.670 align:start position:0%
data that sometimes even don't work the
 

00:09:45.670 --> 00:09:46.650 align:start position:0%
data that sometimes even don't work the
machine<00:09:45.910><c> learning</c><00:09:46.000><c> for</c><00:09:46.180><c> a</c><00:09:46.300><c> long</c><00:09:46.420><c> time</c>

00:09:46.650 --> 00:09:46.660 align:start position:0%
machine learning for a long time
 

00:09:46.660 --> 00:09:48.990 align:start position:0%
machine learning for a long time
sometimes<00:09:47.230><c> it's</c><00:09:47.560><c> so</c><00:09:47.710><c> you</c><00:09:47.950><c> know</c><00:09:48.040><c> surprises</c><00:09:48.820><c> me</c>

00:09:48.990 --> 00:09:49.000 align:start position:0%
sometimes it's so you know surprises me
 

00:09:49.000 --> 00:09:50.370 align:start position:0%
sometimes it's so you know surprises me
a<00:09:49.060><c> bit</c><00:09:49.210><c> when</c><00:09:49.420><c> my</c><00:09:49.540><c> learning</c><00:09:49.870><c> algorithm</c><00:09:50.230><c> works</c>

00:09:50.370 --> 00:09:50.380 align:start position:0%
a bit when my learning algorithm works
 

00:09:50.380 --> 00:09:52.410 align:start position:0%
a bit when my learning algorithm works
because<00:09:50.800><c> a</c><00:09:50.980><c> lot</c><00:09:51.370><c> of</c><00:09:51.400><c> the</c><00:09:51.490><c> complexity</c><00:09:52.150><c> of</c><00:09:52.180><c> your</c>

00:09:52.410 --> 00:09:52.420 align:start position:0%
because a lot of the complexity of your
 

00:09:52.420 --> 00:09:54.600 align:start position:0%
because a lot of the complexity of your
learning<00:09:52.840><c> algorithm</c><00:09:53.260><c> comes</c><00:09:53.590><c> from</c><00:09:53.860><c> the</c><00:09:54.340><c> data</c>

00:09:54.600 --> 00:09:54.610 align:start position:0%
learning algorithm comes from the data
 

00:09:54.610 --> 00:09:57.420 align:start position:0%
learning algorithm comes from the data
rather<00:09:55.270><c> than</c><00:09:55.770><c> necessarily</c><00:09:56.770><c> from</c><00:09:57.190><c> your</c>

00:09:57.420 --> 00:09:57.430 align:start position:0%
rather than necessarily from your
 

00:09:57.430 --> 00:09:59.430 align:start position:0%
rather than necessarily from your
writing<00:09:57.850><c> you</c><00:09:58.270><c> know</c><00:09:58.360><c> thousands</c><00:09:58.870><c> and</c><00:09:59.050><c> thousands</c>

00:09:59.430 --> 00:09:59.440 align:start position:0%
writing you know thousands and thousands
 

00:09:59.440 --> 00:10:03.270 align:start position:0%
writing you know thousands and thousands
of<00:09:59.530><c> lines</c><00:09:59.680><c> of</c><00:09:59.830><c> code</c><00:10:00.360><c> all</c><00:10:01.360><c> right</c><00:10:01.570><c> so</c><00:10:02.200><c> that's</c><00:10:02.740><c> um</c>

00:10:03.270 --> 00:10:03.280 align:start position:0%
of lines of code all right so that's um
 

00:10:03.280 --> 00:10:05.880 align:start position:0%
of lines of code all right so that's um
how<00:10:03.910><c> you</c><00:10:03.970><c> implement</c><00:10:04.690><c> deep</c><00:10:05.050><c> neural</c><00:10:05.320><c> networks</c>

00:10:05.880 --> 00:10:05.890 align:start position:0%
how you implement deep neural networks
 

00:10:05.890 --> 00:10:07.230 align:start position:0%
how you implement deep neural networks
in<00:10:06.040><c> the</c><00:10:06.100><c> game</c><00:10:06.280><c> this</c><00:10:06.550><c> will</c><00:10:06.730><c> become</c><00:10:07.030><c> more</c>

00:10:07.230 --> 00:10:07.240 align:start position:0%
in the game this will become more
 

00:10:07.240 --> 00:10:08.880 align:start position:0%
in the game this will become more
concrete<00:10:07.720><c> when</c><00:10:07.870><c> you've</c><00:10:08.020><c> done</c><00:10:08.230><c> their</c><00:10:08.470><c> primary</c>

00:10:08.880 --> 00:10:08.890 align:start position:0%
concrete when you've done their primary
 

00:10:08.890 --> 00:10:12.210 align:start position:0%
concrete when you've done their primary
exercise<00:10:09.570><c> before</c><00:10:10.570><c> moving</c><00:10:11.170><c> on</c><00:10:11.440><c> I</c><00:10:11.710><c> want</c><00:10:12.070><c> to</c>

00:10:12.210 --> 00:10:12.220 align:start position:0%
exercise before moving on I want to
 

00:10:12.220 --> 00:10:14.580 align:start position:0%
exercise before moving on I want to
discuss<00:10:12.790><c> in</c><00:10:13.390><c> the</c><00:10:13.510><c> next</c><00:10:13.780><c> video</c><00:10:14.050><c> want</c><00:10:14.500><c> to</c>

00:10:14.580 --> 00:10:14.590 align:start position:0%
discuss in the next video want to
 

00:10:14.590 --> 00:10:17.040 align:start position:0%
discuss in the next video want to
discuss<00:10:15.010><c> hyper</c><00:10:15.370><c> parameters</c><00:10:16.030><c> and</c><00:10:16.240><c> parameters</c>

00:10:17.040 --> 00:10:17.050 align:start position:0%
discuss hyper parameters and parameters
 

00:10:17.050 --> 00:10:18.870 align:start position:0%
discuss hyper parameters and parameters
it<00:10:17.590><c> turns</c><00:10:17.800><c> out</c><00:10:18.040><c> that</c><00:10:18.310><c> when</c><00:10:18.520><c> you're</c><00:10:18.640><c> training</c>

00:10:18.870 --> 00:10:18.880 align:start position:0%
it turns out that when you're training
 

00:10:18.880 --> 00:10:20.940 align:start position:0%
it turns out that when you're training
deep<00:10:19.180><c> nets</c><00:10:19.450><c> being</c><00:10:20.080><c> able</c><00:10:20.140><c> to</c><00:10:20.260><c> organize</c><00:10:20.740><c> your</c>

00:10:20.940 --> 00:10:20.950 align:start position:0%
deep nets being able to organize your
 

00:10:20.950 --> 00:10:22.950 align:start position:0%
deep nets being able to organize your
hyper<00:10:21.130><c> parameters</c><00:10:21.580><c> as</c><00:10:21.670><c> well</c><00:10:21.910><c> will</c><00:10:22.540><c> help</c><00:10:22.810><c> you</c>

00:10:22.950 --> 00:10:22.960 align:start position:0%
hyper parameters as well will help you
 

00:10:22.960 --> 00:10:24.690 align:start position:0%
hyper parameters as well will help you
be<00:10:23.140><c> more</c><00:10:23.170><c> efficient</c><00:10:23.800><c> in</c><00:10:24.040><c> developing</c><00:10:24.520><c> your</c>

00:10:24.690 --> 00:10:24.700 align:start position:0%
be more efficient in developing your
 

00:10:24.700 --> 00:10:26.670 align:start position:0%
be more efficient in developing your
networks<00:10:25.180><c> in</c><00:10:25.360><c> the</c><00:10:25.750><c> next</c><00:10:25.990><c> video</c><00:10:26.230><c> let's</c><00:10:26.560><c> talk</c>

00:10:26.670 --> 00:10:26.680 align:start position:0%
networks in the next video let's talk
 

00:10:26.680 --> 00:10:29.970 align:start position:0%
networks in the next video let's talk
about<00:10:26.860><c> exactly</c><00:10:27.310><c> what</c><00:10:27.610><c> that</c><00:10:27.730><c> means</c>

