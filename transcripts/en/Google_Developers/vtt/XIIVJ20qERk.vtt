WEBVTT
Kind: captions
Language: en

00:00:06.585 --> 00:00:09.651
In the previous lessons
Paco learned to install

00:00:09.651 --> 00:00:12.684
a local development environment
and complete necessary steps

00:00:12.684 --> 00:00:15.651
to register his application
in Google App Engine.

00:00:15.684 --> 00:00:18.948
The last step left
to connect all the dots

00:00:18.948 --> 00:00:22.090
consists in the unfolding or
deployment of his application.

00:00:22.090 --> 00:00:23.552
Which basically means:

00:00:23.552 --> 00:00:25.882
uploading the application
so that the Google App Engine

00:00:25.882 --> 00:00:28.585
scalable infrastructure
begins to work.

00:00:28.849 --> 00:00:31.486
Paco needs to design
an effective way

00:00:31.486 --> 00:00:32.684
to update his application code

00:00:32.684 --> 00:00:34.849
when it's in use.

00:00:34.915 --> 00:00:37.189
He needs updates to be automatic

00:00:37.189 --> 00:00:38.420
so as not to risk the chance

00:00:38.420 --> 00:00:40.651
that only some files
get updated.

00:00:40.651 --> 00:00:43.156
He also needs to think
of how to expand the changes

00:00:43.156 --> 00:00:46.948
to the different active
http instances

00:00:46.948 --> 00:00:50.486
How can Paco maintain
all of this consistent

00:00:50.519 --> 00:00:53.915
at the same time his application
is serving applications?

00:00:54.024 --> 00:00:56.420
For now, Paco's census
application consists in

00:00:56.420 --> 00:01:00.387
only two files:
app.yaml and index.html

00:01:00.519 --> 00:01:02.684
But the unfolding process
will be the same

00:01:02.684 --> 00:01:04.981
as when the application
is larger.

00:01:05.057 --> 00:01:07.519
One of the most important
details about unfolding

00:01:07.519 --> 00:01:10.354
is that the process is done
within a transaction.

00:01:10.354 --> 00:01:11.684
This means that...

00:01:11.684 --> 00:01:14.255
either all the files
are successfully updated

00:01:14.255 --> 00:01:15.981
or none of them are.

00:01:16.024 --> 00:01:18.750
App Engine doesn't do
partial unfolding.

00:01:18.750 --> 00:01:20.816
This way,
when the process is complete,

00:01:20.816 --> 00:01:23.519
all files are deleted
and new copies of each one

00:01:23.519 --> 00:01:26.156
are uploaded
from the local file.

00:01:26.222 --> 00:01:28.189
If, for some reason,
the process fails,

00:01:28.189 --> 00:01:30.915
App Engine automatically
uses the last version

00:01:30.915 --> 00:01:32.321
successfully uploaded.

00:01:33.189 --> 00:01:36.552
The app.yaml file determines
various important details

00:01:36.552 --> 00:01:38.552
of the application
unfolding process.

00:01:38.552 --> 00:01:39.651
For example...

00:01:39.651 --> 00:01:41.684
the application field
defines the application

00:01:41.684 --> 00:01:44.519
where the root code will be
uploaded and must correspond

00:01:44.519 --> 00:01:47.519
to the identifier that Paco
created in the prior lesson.

00:01:47.618 --> 00:01:49.981
The version field defines
the version of the application

00:01:49.981 --> 00:01:51.453
that we're uploading.

00:01:51.453 --> 00:01:53.618
This allows Paco
to have different versions

00:01:53.618 --> 00:01:56.057
of the application
running simultaneously.

00:01:56.057 --> 00:01:58.486
But it's important to remember
that each version

00:01:58.486 --> 00:02:00.354
runs from
an independent instance,

00:02:00.354 --> 00:02:03.024
so if we have two versions
of the application

00:02:03.024 --> 00:02:04.684
our free trial

00:02:04.684 --> 00:02:07.024
could run out in half the time.

00:02:07.189 --> 00:02:08.849
Paco has various alternatives

00:02:08.849 --> 00:02:10.684
to unfold the application

00:02:10.684 --> 00:02:13.156
with the tools included
in the SDK.

00:02:13.387 --> 00:02:15.585
To use
Google App Engine Launcher

00:02:15.585 --> 00:02:17.750
he only has to click
on the deploy button.

00:02:17.750 --> 00:02:19.882
To update using
app config,

00:02:19.915 --> 00:02:22.024
Paco opens a window
to the terminal,

00:02:22.024 --> 00:02:24.420
navigates the file
that contains the application

00:02:24.420 --> 00:02:26.354
and executes
the following command.

00:02:27.354 --> 00:02:29.387
Then he enters

00:02:29.387 --> 00:02:30.882
his Google account ID.

00:02:30.981 --> 00:02:34.288
This done, app config begins
to upload all the files

00:02:34.288 --> 00:02:37.024
contained in
the 01 landingpage file

00:02:37.090 --> 00:02:38.486
to Google App Engine.

00:02:38.882 --> 00:02:40.882
If Paco doesn't want to write
his Google account password

00:02:40.882 --> 00:02:43.354
directly in the terminal,

00:02:43.354 --> 00:02:45.420
it's easier to execute
the command

00:02:45.420 --> 00:02:47.684
with the option
minos minos or out2.

00:02:48.057 --> 00:02:50.156
This allows him to authorize
appconfig

00:02:50.156 --> 00:02:52.618
to make changes
to the registered application

00:02:52.618 --> 00:02:55.552
in App Engine with just
a click on his navigator.

00:02:55.585 --> 00:02:58.420
While running, app config
shows various messages

00:02:58.420 --> 00:03:00.684
indicating the progress
of the update.

00:03:00.750 --> 00:03:03.189
Paco will know if the process
was successfully completed

00:03:03.189 --> 00:03:05.783
if he sees this message
in the terminal at the end.

00:03:06.387 --> 00:03:09.024
This indicates that app config
has finished copying

00:03:09.024 --> 00:03:10.585
all the files
to Google App Engine,

00:03:10.585 --> 00:03:13.882
compiled the code and verified
that the application

00:03:13.882 --> 00:03:16.321
is successfully
serving applications.

00:03:16.321 --> 00:03:18.684
Paco can now
enter his application

00:03:18.684 --> 00:03:21.321
by entering this address
in his navigator.

00:03:24.453 --> 00:03:26.717
Once Paco's application
has been served

00:03:26.717 --> 00:03:29.387
on Google App Engine, there
are various important details

00:03:29.387 --> 00:03:31.057
that need to be taken
into account.

00:03:31.354 --> 00:03:33.684
App Engine completes
additional optimizations.

00:03:33.684 --> 00:03:35.684
For example,
his static files,

00:03:35.684 --> 00:03:38.519
such as images,
CSS style pages

00:03:38.519 --> 00:03:39.816
or Javascript files,

00:03:39.816 --> 00:03:42.420
will be served
from a different structure.

00:03:42.486 --> 00:03:45.090
Given that the application
executes from a sandbox,

00:03:45.090 --> 00:03:47.090
it will not have information
about the hardware

00:03:47.090 --> 00:03:50.090
or the operative system,
including the file system.

00:03:50.684 --> 00:03:53.189
With Paco, we will learn
how to work with files

00:03:53.189 --> 00:03:56.321
in the lesson about
Google cloud storage.

00:03:56.816 --> 00:03:59.618
With app config, Paco can
also accomplish other tasks,

00:03:59.618 --> 00:04:01.717
for example,
quickly download

00:04:01.717 --> 00:04:03.486
the logs or records
for his application

00:04:03.486 --> 00:04:05.123
executing this command.

00:04:06.189 --> 00:04:08.618
These records
give him information

00:04:08.618 --> 00:04:10.321
about how
his application is running

00:04:10.321 --> 00:04:11.981
in terms of output.

00:04:11.981 --> 00:04:13.420
It has a common apache format

00:04:13.420 --> 00:04:15.486
and is chronologically ordered.

00:04:15.486 --> 00:04:18.684
Make sure to check some options
and ways to execute

00:04:18.684 --> 00:04:20.453
where you
can use app config.

00:04:20.453 --> 00:04:22.816
You can obtain
a detailed description of these

00:04:22.816 --> 00:04:24.816
writing this command
in the terminal.

00:04:25.882 --> 00:04:28.717
In the following lessons,
we will see

00:04:28.717 --> 00:04:30.882
how Paco uses app config
to complete tasks like:

00:04:30.948 --> 00:04:32.519
uploading data to Datastore,

00:04:32.519 --> 00:04:34.420
creating or modifying
programmed tasks,

00:04:34.420 --> 00:04:36.750
or adjusting database indexes.

00:04:36.816 --> 00:04:39.123
Don't let Paco
take of advantage of you

00:04:39.123 --> 00:04:41.189
by unfolding your application
right now.

00:04:41.222 --> 00:04:43.222
You will find that
Google App Engine allows you

00:04:43.222 --> 00:04:45.420
to scale your applications
to millions of users

00:04:45.420 --> 00:04:48.156
without configuring
a single application server.

00:04:48.222 --> 00:04:50.816
I'll see you next time.
Keep programming!

