WEBVTT
Kind: captions
Language: en

00:00:03.270 --> 00:00:05.850
&gt;&gt;John Panzer:
Okay, hi everybody, uh, I'm John Panzer.

00:00:05.850 --> 00:00:07.060
&gt;&gt;Joseph Smarr:
And I'm Joseph Smarr.

00:00:07.060 --> 00:00:10.330
&gt;&gt;John Panzer:
And we're here to talk to you today about

00:00:10.330 --> 00:00:15.250
bridging the island and providing fluid social
experiences across the entire social web.

00:00:15.250 --> 00:00:24.840
Alright? [pause] We'll be talking about that
guy a little later. So, uh, first before we

00:00:24.840 --> 00:00:30.780
get started, I just want to let you know the
Wave URL for this session is this bit.ly link.

00:00:30.780 --> 00:00:37.340
Um, you can copy it down and please use that
as the back channel and chat about us as much

00:00:37.340 --> 00:00:40.721
as you want, and we'll also put additional
information and links and resources up there.

00:00:40.721 --> 00:00:48.160
Um, now first I want to ask a question. How
many people here came to and listened to Chris

00:00:48.160 --> 00:00:54.380
Messina's talk this morning. Okay, a fair
number of people, some people didn't, um,

00:00:54.380 --> 00:00:59.690
but just so you know we are going to be recapping
a little bit of his story. Because it's the

00:00:59.690 --> 00:01:04.290
same story, the story of the social web, um,
and so the first thing I'm going to do before

00:01:04.290 --> 00:01:09.240
we go into the technical details is to tell
you guys a story.

00:01:09.240 --> 00:01:20.260
So, once upon a time...there was a girl named
"Kate" and there was a guy named "Jack." And

00:01:20.260 --> 00:01:28.249
Kate and Jack, well, turns out that they lived
on two separate islands. They, they didn't

00:01:28.249 --> 00:01:35.729
know each other, they never saw each other.
But just by coincidence, one day they both

00:01:35.729 --> 00:01:48.819
decided to go on vacation. And they ended
up on the same island. Now, this was an amazing

00:01:48.819 --> 00:01:53.889
coincidence that they came to the same island,
they met, and as fate would have it, you know,

00:01:53.889 --> 00:02:04.009
they fell in love. So yay! Yay for Kate and
Jack. Alright. This is a good story right?

00:02:04.009 --> 00:02:14.640
Boy meets girl? Okay, good. Now that's great,
but there's a problem. When Kate and Jack

00:02:14.640 --> 00:02:19.780
left their original home islands, they left
their friends and family behind on their old

00:02:19.780 --> 00:02:25.000
islands, and they wanted to stay in touch,
but it's very hard to do that on these islands.

00:02:25.000 --> 00:02:31.190
As it turns out, it's really hard to visit
other islands. When people try, they get stopped.

00:02:31.190 --> 00:02:36.960
The, [laughs] the border guards won't let
them. Before they'll let you visit another

00:02:36.960 --> 00:02:47.450
island, you have to go and fill out forms.
Lots of forms. Lots and lots of forms. A different

00:02:47.450 --> 00:02:53.440
form for every new island. So users are very
unhappy about this. Some big islands saw a

00:02:53.440 --> 00:02:58.160
problem with this and they got together and
two of them got together, sometimes three

00:02:58.160 --> 00:03:02.560
of them, and they said they were going to
solve it for their users and they started

00:03:02.560 --> 00:03:07.730
letting their islanders visit each other without
the forms. They would honor each other's forms.

00:03:07.730 --> 00:03:12.020
Well that's great for the big islands, but
it left a lot of people out in the cold. It's

00:03:12.020 --> 00:03:14.880
not so great for all the little islands, and
there's a lot of people on these little islands.

00:03:14.880 --> 00:03:21.570
So people still had to fill out a lot of forms.
So um, that didn't work for everybody. So

00:03:21.570 --> 00:03:29.091
what happened was, some uh, young islanders,
we technically call them geeks, got together

00:03:29.091 --> 00:03:31.311
and they decided that we're going to come
up with a solution for this that will work

00:03:31.311 --> 00:03:38.020
for all the islands and for everybody, all
the time. And so they made up some uh, they

00:03:38.020 --> 00:03:42.360
came up with a solution that would let the
islanders travel around and visit the other

00:03:42.360 --> 00:03:45.700
islands without having to go and fill out
all of these darn forms. So, this is a big

00:03:45.700 --> 00:03:51.750
problem for the islanders and it's also a
big problem for us today here on the social

00:03:51.750 --> 00:03:57.770
web. So, now I'm going to hand things over
to Joseph to talk a bit more about our problems

00:03:57.770 --> 00:04:00.540
on the social web and perhaps even a few solutions.

00:04:00.540 --> 00:04:04.240
&gt;&gt;Joseph Smarr:
Thanks John. So, you know, we've got our own

00:04:04.240 --> 00:04:09.100
sort of immigration problem on the social
web today. If you are like me, you still basically

00:04:09.100 --> 00:04:15.240
have separate accounts, profiles, etcetera
on pretty much every website you go to. And

00:04:15.240 --> 00:04:18.351
you know sometimes we just sort of take for
granted this is the way things are, but it

00:04:18.351 --> 00:04:23.229
actually leads to a lot of problems. Clearly,
most obvious, there's, there's friction every

00:04:23.229 --> 00:04:26.520
time you want to try a new service, because
you have to fill out yet another form, you

00:04:26.520 --> 00:04:31.330
have to remember your password. And what happens
as a result is that the net effect that there's

00:04:31.330 --> 00:04:34.689
a lot of people who haven't filled out their
profiles very well. A lot of very sparsely

00:04:34.689 --> 00:04:39.020
populated profiles, a lot of profiles out
of date, uh, personal example, I was at Plaxo

00:04:39.020 --> 00:04:43.139
until recently, I, I joined Google in January,
but there's lots of profiles that still say

00:04:43.139 --> 00:04:46.539
I work at Plaxo because it was just too hard
to go and change each one of them one by one.

00:04:46.539 --> 00:04:52.840
It also leads to poor security because if
you are like me you don't actually use a separate

00:04:52.840 --> 00:04:56.490
password for every single website you use,
you tend to use the same one over and over

00:04:56.490 --> 00:04:57.490
again.

00:04:57.490 --> 00:04:58.490
&gt;&gt;John Panzer:
--You don't?!

00:04:58.490 --> 00:05:00.979
&gt;&gt;Joseph Smarr:
Um, I, I, I must confess. Now what's humorous

00:05:00.979 --> 00:05:05.460
to me is not only is this problematic from
a security perspective, it's still the case

00:05:05.460 --> 00:05:08.690
that one of the biggest complaints that any
website has is lost password problems from

00:05:08.690 --> 00:05:13.000
their users. Because it's just too much hassle
to remember which user name or email address

00:05:13.000 --> 00:05:18.111
that I used, or was it my one password or
second password and this obviously is a problem

00:05:18.111 --> 00:05:23.330
as well. And then perhaps more subtly but
actually more importantly, I think that when

00:05:23.330 --> 00:05:28.600
these islands are all fragmented by default,
uh, interop is hard. You know, you don't know

00:05:28.600 --> 00:05:32.349
who else the person is, you don't have any
of their data, and so you just tend not to

00:05:32.349 --> 00:05:37.099
get as much rich interaction between the sites
that people use. And when you do get interaction,

00:05:37.099 --> 00:05:40.789
it tends to be biased towards just picking
a few big services and working with them because

00:05:40.789 --> 00:05:45.199
you really don't know which services the user
is on, and each integration is separate and

00:05:45.199 --> 00:05:49.349
so you just don't have the ability to easily
let users come and use the tools and services

00:05:49.349 --> 00:05:56.759
their comfortable with, and have it all just
work. In summary, this is bad for developers

00:05:56.759 --> 00:06:01.969
and bad for users. And, well, thank you for
these automated transitions, but we have good

00:06:01.969 --> 00:06:07.370
news! [laughs] Let's do that one again, that's
too good. It's bad for users, it's bad for

00:06:07.370 --> 00:06:13.009
developers. But there's got to be a better
way, and there is!

00:06:13.009 --> 00:06:14.199
[laughter]

00:06:14.199 --> 00:06:18.460
Heh? Because of course, there are now a bunch
of technologies being developed that allow

00:06:18.460 --> 00:06:22.400
you to sign up for new services using the
accounts you've already got. And if you think

00:06:22.400 --> 00:06:26.490
about it, there's actually sort of two related
problems tied up in here. One is, who is this

00:06:26.490 --> 00:06:30.710
person? If I can show you my identity from
an existing service, I don't have to have

00:06:30.710 --> 00:06:34.710
that separate user name and password for you
to know who I am. And of course lots of services

00:06:34.710 --> 00:06:38.259
I not only have an account, I have useful
data there, and if I can authorize you access

00:06:38.259 --> 00:06:41.520
to have some of my data, without having to
give away my password and everything that

00:06:41.520 --> 00:06:46.930
comes with it, then I'm much more likely to
want to participate. And there are increasingly

00:06:46.930 --> 00:06:50.439
open standards that are actually behind a
lot of these. So most big services today,

00:06:50.439 --> 00:06:53.589
have some service now, this wasn't true even
a year or two ago, I've been speaking at I/O

00:06:53.589 --> 00:06:57.930
for a while, and it's amazing how much better
the situation gets each year. So, almost all

00:06:57.930 --> 00:07:01.880
of the big providers now support OpenID and
OAuth. Including Google, and Yahoo! and Facebook,

00:07:01.880 --> 00:07:08.159
and LinkedIn, and Twitter, and on and on and
on. So you not only have a chance to use a

00:07:08.159 --> 00:07:11.009
lot of these big services to help the user
come to your site faster, you aren't having

00:07:11.009 --> 00:07:13.860
to build it from scratch as much every time
you want to work with a different provider.

00:07:13.860 --> 00:07:16.680
And of course that allows you to work with
smaller providers that you might not have

00:07:16.680 --> 00:07:20.710
heard of but that speak the same standards.

00:07:20.710 --> 00:07:24.220
Now uh, one of the things that people mention
a lot is okay, so how am I supposed to tell

00:07:24.220 --> 00:07:29.349
the user, ask the user which services they
use because there's lots of different services

00:07:29.349 --> 00:07:32.270
out there, there's new services changing all
the time? So, one of the things we've been

00:07:32.270 --> 00:07:36.590
working on is better ways to have that communication
about here are the tools I already use so

00:07:36.590 --> 00:07:41.320
that you can offer me a more personalized
experience. And there are actually a bunch

00:07:41.320 --> 00:07:44.780
of different ways. I don't think it's that
bad to what a lot of sites do now is they'll

00:07:44.780 --> 00:07:48.779
have buttons to for a lot of the popular services.
You'll see a sign up with your Google account,

00:07:48.779 --> 00:07:51.789
or sign up with your Facebook account or sign
up with your Twitter account. And I think

00:07:51.789 --> 00:07:56.149
that's reasonable as long as it's not the
only way people can provide their own information.

00:07:56.149 --> 00:07:58.869
You want to still let the smaller guys come
in and play too because today's small guys

00:07:58.869 --> 00:08:03.439
are going to be tomorrow's big guys. In many
cases though, you actually have some clues.

00:08:03.439 --> 00:08:07.550
So for example, if you are inviting people
to join your service, you're sending invites

00:08:07.550 --> 00:08:10.869
to your friends, you can look at their email
address, and if it's a Gmail email address,

00:08:10.869 --> 00:08:15.550
well maybe you should offer them a Google
onboarding experience, right? And so forth.

00:08:15.550 --> 00:08:19.419
And often times, you know, if you are sharing
content out into say Twitter of Facebook or

00:08:19.419 --> 00:08:22.639
Buzz, and you are getting clicks, you can
look at the referrer's of the links and you

00:08:22.639 --> 00:08:26.389
can say, "Oh the person is coming from Facebook
so maybe I should offer them a Facebook onboarding."

00:08:26.389 --> 00:08:29.689
And again that sort of breaks that logjam
of, of not having a clue of which services

00:08:29.689 --> 00:08:34.029
the person's on. There are even better ways
that are coming out now. There's a technology

00:08:34.029 --> 00:08:37.690
called webfinger I'll show you a little about.
Where, I, you can basically look up a person

00:08:37.690 --> 00:08:41.340
by their email address or their account ID,
and the service will actually list, here are

00:08:41.340 --> 00:08:44.850
the services I'm on, or here is some information
about me. So if you, you know, it's very common

00:08:44.850 --> 00:08:47.700
for users to give their email address when
they are trying out new services, and now

00:08:47.700 --> 00:08:51.440
you can look that up and figure out more about
them. And there's also a technology that we've

00:08:51.440 --> 00:08:55.500
been working on with partners called XAuth,
where the actual browser can hold some basic

00:08:55.500 --> 00:08:59.190
information about what services you use, and
as you go around to those services, you can,

00:08:59.190 --> 00:09:03.190
they can push that information to XAuth. Not
giving your private data without your permission,

00:09:03.190 --> 00:09:07.190
but a little hint, like, hey someone on this
computer is using Google, maybe you want to

00:09:07.190 --> 00:09:10.750
show the Google thing, or maybe on a smaller
services and other sites can query that and

00:09:10.750 --> 00:09:14.800
see. So there's sort of a whole set of different
technologies you can use to figure out how

00:09:14.800 --> 00:09:20.580
to offer the user a better experience.
Okay, let me show you a little demo here.

00:09:20.580 --> 00:09:30.670
Wifi gods...hopefully will be cooperative.
Now where's my...where's my other window for

00:09:30.670 --> 00:09:31.670
Chrome.

00:09:31.670 --> 00:09:32.670
[pause]

00:09:32.670 --> 00:09:36.070
Where's my cursor either.

00:09:36.070 --> 00:09:40.570
[sings] do do doo doo.

00:09:40.570 --> 00:09:46.990
This one right? You can see it right? Okay
there, the magic of mirror displays. So here's

00:09:46.990 --> 00:09:52.850
a good example. My friend Hong uses Gmail
and I've invited him to join Plaxo. Some of

00:09:52.850 --> 00:09:57.220
you may have seen this demo before, but it's
just that good. Um, when he clicks on this

00:09:57.220 --> 00:10:01.260
invite link like he's done a million times,
Plaxo recognizes he's coming in from a Gmail

00:10:01.260 --> 00:10:05.190
address and so rather showing yet another
one of those immigration forms, he says, "Hey,

00:10:05.190 --> 00:10:10.020
why not get started quickly using your existing
Google account." And so this then is using

00:10:10.020 --> 00:10:13.370
OpenID and OAuth and it says, "Hey Hong."
And of course you'll note he's already logged

00:10:13.370 --> 00:10:17.940
in because of course he just came from Gmail.
It says, "Is it okay if Plaxo has your email

00:10:17.940 --> 00:10:21.520
address and accesses to your address book
so you can get started quickly." And if Hong

00:10:21.520 --> 00:10:26.300
likes this site he can try it. And rather
than having yet another form, I'm just instantly

00:10:26.300 --> 00:10:30.760
put into the app, and I already have my information.
And crucially, I'm not having to fill out

00:10:30.760 --> 00:10:35.770
a separate password so instead the first thing
I see on the site is let me answer that friend

00:10:35.770 --> 00:10:41.120
request. And so I've just removed that friction.
And now even better, rather than asking me,

00:10:41.120 --> 00:10:44.420
"Oh, which address book do you use, give me
your credentials, let me scrape it," the way

00:10:44.420 --> 00:10:47.750
it is so often. They're able to just take
my address book directly using OAuth and then

00:10:47.750 --> 00:10:50.440
the next thing I see is, "Oh, here are some
people you already know who are on Plaxo,

00:10:50.440 --> 00:10:55.210
I can get started with them." So it's a very
seamless experience and it's better for users

00:10:55.210 --> 00:10:58.260
because they don't have to start out from
scratch all the time and it's better for you

00:10:58.260 --> 00:11:02.881
site developers because your able to um, very
quickly get the users up and running and get

00:11:02.881 --> 00:11:09.630
a lot more valuable data. Uh, now I mentioned
XAuth which is a complimentary thing where

00:11:09.630 --> 00:11:12.780
if the user didn't happen to come from Gmail,
they still might be able to tell you, "Hey

00:11:12.780 --> 00:11:13.850
I'm on Google."

00:11:13.850 --> 00:11:17.660
And here's a little demo that Meebo put together,
and here's a bunch of services and it's using

00:11:17.660 --> 00:11:21.290
XAuth to figure out whether I’m signed in
or not. And so, in this case, I'm going to

00:11:21.290 --> 00:11:27.460
go sign into Google. And it asks me to sign
in. So imagine this is me going to check my

00:11:27.460 --> 00:11:33.330
Gmail or something, and then when I login,
it sets a little bit in XAuth that says this

00:11:33.330 --> 00:11:36.800
person used Google, and now when I've come
back to Meebo, it can see that I'm signed

00:11:36.800 --> 00:11:40.420
into Google. And what's cool is that if I
did that on these other sites, Meebo's not

00:11:40.420 --> 00:11:45.420
going, having to go check every site one after
another, it just asks XAuth where is the person,

00:11:45.420 --> 00:11:51.870
and you can see it. And if I can, here I can
actually pull up...XAuth.org. Whoa, the remote

00:11:51.870 --> 00:11:57.910
type is surprisingly challenging...This is,
just as a developer you can go there and you

00:11:57.910 --> 00:12:01.010
can see that on XAuth, think of it as just
sort of a glorified third party cookie, it's

00:12:01.010 --> 00:12:05.980
actually using some cool HTML5 features called
HTML5 post message and local storage so none

00:12:05.980 --> 00:12:10.700
of this is kept up in the clouds it's just
on your browser. Um, I can see that this Google

00:12:10.700 --> 00:12:15.340
demo is being set as me being active and of
course as the user I can go in and change

00:12:15.340 --> 00:12:18.750
that or even block it or disable XAuth entirely
if I'm not comfortable with it so it's just

00:12:18.750 --> 00:12:21.060
a nice little way of helping mash those things
up together.

00:12:21.060 --> 00:12:29.950
Alright, let's go back to our story. How are
our friends doing on the island? Let's talk

00:12:29.950 --> 00:12:33.370
a little bit first about, just sort of mechanically
speaking how much you integrate this into

00:12:33.370 --> 00:12:39.510
your site. So in both cases what you saw is
what we call doing the dance which is sending

00:12:39.510 --> 00:12:43.660
the user over to the provider to get authorization
and then having them come back with the information.

00:12:43.660 --> 00:12:47.210
Both OpenID and OAuth work the same way in
the sense that they send you over and when

00:12:47.210 --> 00:12:50.260
they redirect over to your site, you have
some extra information on the URL that you

00:12:50.260 --> 00:12:53.920
can use. And there's a hybrid of OpenID and
OAuth which I showed you which it works in

00:12:53.920 --> 00:12:58.900
one step. And there's even a newer version
being worked on now called OpenID Connect

00:12:58.900 --> 00:13:02.490
that builds this on top of OAuth 2.0 that
is even simpler for developers, so a lot of

00:13:02.490 --> 00:13:07.760
great work happening in this space. You just
save the information you get back and in the

00:13:07.760 --> 00:13:12.220
case of OpenID, it's the identifier of the
user, so maybe it's my Google ID and you can

00:13:12.220 --> 00:13:15.150
just save that in your database and you can
actually create still a local account and

00:13:15.150 --> 00:13:18.000
so if you think about the old way you create
user accounts, you can still create a simple

00:13:18.000 --> 00:13:22.360
account but rather than having a password
for me you can just link to my Google ID.

00:13:22.360 --> 00:13:25.770
And the way OpenID works is the only way I
can prove to you that I own that Google ID

00:13:25.770 --> 00:13:29.260
is if I really came from Google, so that once
you see that, you can trust that it really

00:13:29.260 --> 00:13:34.310
is me, and you can log me in. So it's equivalent
to a password in that sense. And for OAuth,

00:13:34.310 --> 00:13:38.500
you can store a token and you can use that
to make API calls and so you can access my

00:13:38.500 --> 00:13:44.500
address book. And what's cool is that since
you aren't taking passwords you can actually

00:13:44.500 --> 00:13:47.680
store the token because they are safe and
I can always revoke them if I want to and

00:13:47.680 --> 00:13:51.630
so rather than doing a onetime import for
your friends the way most services do, you

00:13:51.630 --> 00:13:55.160
can actually be periodically checking, because
if your service is taking off, you know, a

00:13:55.160 --> 00:13:57.790
month from now or three months from now, a
bunch of my friends are probably going to

00:13:57.790 --> 00:14:00.030
be using and I'm probably going to want to
know about that and you are going to want

00:14:00.030 --> 00:14:05.090
to tell me because it's going to make me come
back over and over again. And then with XAuth,

00:14:05.090 --> 00:14:08.520
there's just a very simple little JavaScript
and you can go to XAuth.org and find out,

00:14:08.520 --> 00:14:11.440
and we'll have a list of links at the end
of this talk with, with pointers and the slides

00:14:11.440 --> 00:14:15.730
will be online so you don't have to copy this
down now, but there's one little simple JavaScript

00:14:15.730 --> 00:14:18.990
call that says if you are a site and you want
other sites to have your little share button

00:14:18.990 --> 00:14:22.470
or your little login button, that just says,
"Hey I’m alive, someone is here," and similarly

00:14:22.470 --> 00:14:26.020
you can request and say which sites are the
user using and use that to personalize your

00:14:26.020 --> 00:14:31.310
experience. So very simple kind of very little
things you can drop in and get going.

00:14:31.310 --> 00:14:36.650
And once the islanders realize that they can
do this, they essentially had a passport system

00:14:36.650 --> 00:14:41.190
for the islands, so no more forms on every
site, you already had your island identification

00:14:41.190 --> 00:14:50.750
and you could just come present it on a new
island and everyone was very happy. Yay! Alright,

00:14:50.750 --> 00:14:54.000
that brings us to Chapter II and I'll hand
it back to John for Chapter III.

00:14:54.000 --> 00:14:59.790
So, chapter II is about staying connected.
Now Kate when she was back on her own island,

00:14:59.790 --> 00:15:05.410
she was, you know just Kate, right? Everybody
just knew her. And Jack, when he was back

00:15:05.410 --> 00:15:14.430
on his island, was just Jack but when they
went to a new island, things got a little

00:15:14.430 --> 00:15:19.250
more complicated because now, how did their
friends call them or send them a message?

00:15:19.250 --> 00:15:23.650
They couldn't just call Jack or Kate; they
had to figure out John or Kate at the new

00:15:23.650 --> 00:15:27.190
island. So they needed some way of still being
able to find each other and stay in touch

00:15:27.190 --> 00:15:32.500
even when they were all living on these different
islands. So our intrepid little web hackers

00:15:32.500 --> 00:15:36.310
got together and said, "Gee what we really
need is some sort of a forwarding service

00:15:36.310 --> 00:15:41.400
where people can move about the island the
way they want and still find a way to be contacted

00:15:41.400 --> 00:15:46.260
when they're on their new island." And course
while this is a problem for our little islander

00:15:46.260 --> 00:15:50.500
friends, it's also a problem here for us out
here on the social web. Because if you think

00:15:50.500 --> 00:15:54.240
about it, we need forwarding addresses for
the social web as well. The fact that we have

00:15:54.240 --> 00:15:58.600
these separate ids, user names, and friend
lists on every website means that when I come

00:15:58.600 --> 00:16:02.840
to a website, it's pretty hard to figure out
which of my friends are already there. You

00:16:02.840 --> 00:16:07.040
know, maybe they have a lookup by email address,
but increasingly I know people other than

00:16:07.040 --> 00:16:11.010
by email address. Right? I might know you
on Twitter or on Facebook or on any other

00:16:11.010 --> 00:16:15.560
service. And conversely, as a user, it's a
little hard for me to figure out how much

00:16:15.560 --> 00:16:19.820
control I have over who can find me and by
what. Right? So sometimes you go to a new

00:16:19.820 --> 00:16:22.760
website and you are surprised, how did this
person find me there because the fact that

00:16:22.760 --> 00:16:25.820
this is not really well systematized sort
of means that it's sort of too hard when we

00:16:25.820 --> 00:16:30.430
want to find people and it's too hard when
you don't want to be found. It also means

00:16:30.430 --> 00:16:33.950
that the information shared in each of these
websites tends to stay within each of their

00:16:33.950 --> 00:16:39.740
own websites. And if you're like me, the more
services you try to use, you sort of got separate

00:16:39.740 --> 00:16:42.550
places you have to go, each one with their
own little news feed, each one with their

00:16:42.550 --> 00:16:47.210
own social inbox, etcetera, and it's sort
of hard to get a sense overall of what people

00:16:47.210 --> 00:16:50.130
are doing without having to live in all the
different place they are. This would be like

00:16:50.130 --> 00:16:55.570
having to visit each island just to figure
out what was going on. And the messaging system

00:16:55.570 --> 00:16:58.950
themselves are also fragmented. So, if I want
to comment on your story, or if I want to

00:16:58.950 --> 00:17:02.610
just send you a message and share with you,
um, it's hard to do that if I'm on one service

00:17:02.610 --> 00:17:05.970
and you’re on another service, right? And
if you think about it again, sort of nobody's

00:17:05.970 --> 00:17:09.260
really winning here, there's just sort of
fragmentation because the whole social web

00:17:09.260 --> 00:17:13.520
is still in quite a primitive state. So, what’s
the conclusion here? I can think you can say

00:17:13.520 --> 00:17:19.380
it with me now, it's bad for users, it's bad
for developers and it makes little storm clouds

00:17:19.380 --> 00:17:21.140
on the island. We've got to be able to better
than that right?

00:17:21.140 --> 00:17:28.070
Well, once again, I've got good news for you!
And that is there's now technology that helps

00:17:28.070 --> 00:17:33.130
you actually link the profiles that you use
together, and that lets you then figure out

00:17:33.130 --> 00:17:37.980
how to be found and bring your friends with
you when you check out new websites. So, the

00:17:37.980 --> 00:17:42.190
first thing is to figure out how should somebody
find me when I go to a new website? And of

00:17:42.190 --> 00:17:45.420
course conversely how should I find other
people. And there are a few different things

00:17:45.420 --> 00:17:50.480
you can do. So, if I have different profiles
all around the web, I can actually, and obviously

00:17:50.480 --> 00:17:54.340
if I was logged in with OpenID, that's one
way of linking profiles, but I can also just

00:17:54.340 --> 00:17:58.230
put little links on my existing profiles to
the other sites I use. And of course you don't

00:17:58.230 --> 00:18:01.240
have to link together all of your profiles,
if you want to keep your work and your personal

00:18:01.240 --> 00:18:04.740
separate or things like that, you can certainly
keep those separate, but if I want to put

00:18:04.740 --> 00:18:07.850
a few things together and say, you know, me
on Twitter and me on Facebook, and me on Google

00:18:07.850 --> 00:18:11.230
is really the same person, I can just put
these little hyperlinks between the sites

00:18:11.230 --> 00:18:14.620
and there's a little microformat where you
just put rel="me" on the link and a lot of

00:18:14.620 --> 00:18:18.620
services do this for you already. That says,
"Hey this really is the same person." So if

00:18:18.620 --> 00:18:22.120
you know me by my Twitter handle, and my Twitter
handle points to my blog and my blog points

00:18:22.120 --> 00:18:24.882
to my Google page, etcetera, you can find
me by a bunch of those things. So, anybody

00:18:24.882 --> 00:18:29.260
that already knows me by one of those services
can come and find me on this new place.

00:18:29.260 --> 00:18:32.309
Google has something called the social graph
API where we've basically taken all of that

00:18:32.309 --> 00:18:36.830
data and preprocessed it and served it up
by quick API so you don't actually even have

00:18:36.830 --> 00:18:40.490
to do that crawling yourself, you can just
put it in any URL and get back the other "me"

00:18:40.490 --> 00:18:44.760
URL's down the stream and use that to help
you find other people. The other thing you

00:18:44.760 --> 00:18:48.831
can do is use webfinger again which advertises
a set of services based on an email address.

00:18:48.831 --> 00:18:51.900
So, if you just know somebody by their email
address and you want to know more about them,

00:18:51.900 --> 00:18:57.090
webfinger provides a way to do that. And then,
of course, most services have contact APIs

00:18:57.090 --> 00:19:00.620
that let you pull out the friends you've already
made on an existing service, and use those

00:19:00.620 --> 00:19:03.790
to find friends on a new service. Because
you don't necessarily want to have the same

00:19:03.790 --> 00:19:06.650
exact friends everywhere you go, but you'd
at least like to know when somebody you've

00:19:06.650 --> 00:19:10.190
already got a relationship with, also uses
the tool you do so you can decide if you want

00:19:10.190 --> 00:19:14.840
to interact with them there as well. Like
I said before, one of the most exciting things

00:19:14.840 --> 00:19:18.710
going on is that more and more of the mainstream
services are supporting these standards, are

00:19:18.710 --> 00:19:22.980
supporting these capabilities and increasingly
doing so based on open standards. Uh, the

00:19:22.980 --> 00:19:27.100
rel="me" thing that I mentioned is called
microformat, Portable Contacts is a standards

00:19:27.100 --> 00:19:31.620
for accessing people data, and OpenSocial
also has standards people data information.

00:19:31.620 --> 00:19:35.670
And of course protecting this are standards
like OAuth since often times your friends

00:19:35.670 --> 00:19:37.090
list is not public information.

00:19:37.090 --> 00:19:44.940
Now, people often say, you know, what if I
want to keep separate profiles and friends

00:19:44.940 --> 00:19:48.809
and I mentioned this before, and what I want
to say here first before I jump into the demo,

00:19:48.809 --> 00:19:53.670
that the notion you should just keep in your
mind is that on each site you are represented

00:19:53.670 --> 00:19:59.090
by a list of identifies. This might be an
email address, but it might be a Twitter ID

00:19:59.090 --> 00:20:03.420
or a Facebook ID or a URL to any other webpage
or a cell phone, anything that sort of uniquely

00:20:03.420 --> 00:20:08.110
identifies you. And uh, I'm apparently running
on reserve battery power now, do we have a

00:20:08.110 --> 00:20:12.290
cable, John, that you can plug in? Reserve
power failure, that would be a, I would cut

00:20:12.290 --> 00:20:17.380
this slide a little bit short wouldn't I?
[pause]

00:20:17.380 --> 00:20:25.540
Uhh, suspended so you can adjust the situation,
no I actually would want to keep talking.

00:20:25.540 --> 00:20:29.140
Thank you Mac, alright, pause while I feed
the beast.

00:20:29.140 --> 00:20:41.340
[pause]
Mmmmm, electrons. Alright, back to our regular

00:20:41.340 --> 00:20:49.330
scheduled program. Okay, so think of yourself
as a list of identifiers and then as site

00:20:49.330 --> 00:20:52.890
developers what you should do is let your
users attach as many of these identifiers

00:20:52.890 --> 00:20:57.560
as they want and just let them control which
one of them you can use to find the person

00:20:57.560 --> 00:21:01.340
by or not. So, I should be able to sign up
with an email address that I want to receive

00:21:01.340 --> 00:21:04.400
notifications from you from, doesn't necessarily
mean I want everyone who knows that email

00:21:04.400 --> 00:21:07.340
address to automatically be able to find me
there. And I think if you think about it that

00:21:07.340 --> 00:21:11.330
way, then it's not as scary because you can
give users control over exactly how they're

00:21:11.330 --> 00:21:16.290
found and you can let them be found in a lot
of different ways. And of course you can,

00:21:16.290 --> 00:21:19.600
when you have those identifiers, and you pull
in contacts, you've matched them up against

00:21:19.600 --> 00:21:23.711
each other, and you figure out who you know
on the site, you can decide to use that just

00:21:23.711 --> 00:21:27.900
as a suggestion, as in, "Hey these are the
people you know" or in some cases it might

00:21:27.900 --> 00:21:32.260
appropriate to even just automatically follow
them. For example on Plancast, I can automatically

00:21:32.260 --> 00:21:35.600
follow the plans of all the people I’m following
on Twitter. And for them, you know, again

00:21:35.600 --> 00:21:39.470
you can sort of make the business decision
based on what works best for your app, whether

00:21:39.470 --> 00:21:43.260
that's appropriate or not. And same for when
I want to share data back out to other websites.

00:21:43.260 --> 00:21:46.440
So, now if I know the other website you are
on, I can say, "Hey maybe you want to tweet

00:21:46.440 --> 00:21:49.330
this out, or maybe you want to share this
on Buzz." And it just sort of works, you can

00:21:49.330 --> 00:21:52.210
decide again how automatic or not it is based
on the site you use.

00:21:52.210 --> 00:21:58.910
Let me show you a little plumbing demo for
that as well.... So, we'll leave XAuth behinds,

00:21:58.910 --> 00:22:04.740
we'll leave Google behind. So, here's my Google
profile, and it's one of many profiles that

00:22:04.740 --> 00:22:08.540
supports some of these standards. So, you
can see here that it's let me link to some

00:22:08.540 --> 00:22:12.240
of the other profiles I use, and I haven't
linked to every profile I’ve used, just

00:22:12.240 --> 00:22:16.690
the ones I think are, are important. And if
I go into the social graph API, and this is

00:22:16.690 --> 00:22:20.802
just a little demo console, and I type in
that profile URL, you can see that it's found

00:22:20.802 --> 00:22:24.440
a bunch of links to other websites. And one
of the things that cool is that it's not just

00:22:24.440 --> 00:22:27.920
the websites I've linked directly from my
Google profiles, it's also the websites they

00:22:27.920 --> 00:22:31.970
link to and so forth, and so it's sort of
the full set of public websites that I've

00:22:31.970 --> 00:22:35.880
been comfortable sharing. And like I said,
Twitter does this, LinkIn, Digg; all these

00:22:35.880 --> 00:22:38.990
sites support these really cool "me" things
so it's not something we have to be a geek

00:22:38.990 --> 00:22:41.990
to set that up. A lot of your users already
have this information and you're just not

00:22:41.990 --> 00:22:45.530
using it. So, now you actually can know me
by a whole bunch of different places and if

00:22:45.530 --> 00:22:51.220
any of those people come, they can find me
as well. And then I mentioned webfinger, Chris

00:22:51.220 --> 00:22:54.750
Messina went through a little more of the
code this morning, but basically it's a standard

00:22:54.750 --> 00:22:58.950
way for service to provide a little more of
discovery information based on an email address.

00:22:58.950 --> 00:23:04.060
And the way it works is basically you take
the domain off, look up the well known location

00:23:04.060 --> 00:23:07.730
for webfinger based on the domain, and then
pass in the user name to find that user's

00:23:07.730 --> 00:23:11.422
specific information. So, for example, if
I go and look up Joseph, jsmarr@gmail, let's

00:23:11.422 --> 00:23:17.730
say you just know me by my email address.
Here's a sort of human readable-ish version

00:23:17.730 --> 00:23:22.860
of what webfinger spits out and one of things
you'll notice here is it says, "Oh, Google

00:23:22.860 --> 00:23:26.860
supports Portable Contacts and here's the
me endpoint for Portable Contacts, so here's

00:23:26.860 --> 00:23:32.740
my profile and my friends." And if you go
hit that information, here's the output and

00:23:32.740 --> 00:23:36.510
you can see it's sort of a machine readable
version of all the data that's on my profile.

00:23:36.510 --> 00:23:40.309
So it's got my name, it's got my photo, it's
got the other sites I use, it's got, you know,

00:23:40.309 --> 00:23:43.610
what other companies I went to, so all that
information you might have to make me fill

00:23:43.610 --> 00:23:47.410
in from scratch, you can just use immediately,
because I’ve already published it publically,

00:23:47.410 --> 00:23:50.321
and because there are these open standards,
it's actually ready for you to consume right

00:23:50.321 --> 00:23:55.260
away. And lots of other sites do the same
thing. In fact, I should mention uh, I believe

00:23:55.260 --> 00:24:01.360
we just launched the Buzz API if not, scoop,
I think we did though, and all the Buzz people

00:24:01.360 --> 00:24:05.470
API's are all Portable Contacts as well. So
for example here, this is all the people I’m

00:24:05.470 --> 00:24:08.720
following on Buzz, you can see here it says
@following. And this one is in JSON, the pervious

00:24:08.720 --> 00:24:12.850
one's in XML, they both work in both formats
so you can use whatever you want, but what's

00:24:12.850 --> 00:24:16.860
cool is that since in Buzz the people you
are following is public by default, you can

00:24:16.860 --> 00:24:19.690
go and find a bunch of information about my
friends, and one of the things you'll notice,

00:24:19.690 --> 00:24:22.880
a bunch of the URL's they've hooked up is
in that information and you can run those

00:24:22.880 --> 00:24:26.690
through social graph API and you can see how,
very quickly this gives you quite a rich tapestry

00:24:26.690 --> 00:24:30.020
of information to help get users up and running
and wired. So, it's very cool that this all

00:24:30.020 --> 00:24:34.070
works and all works in a way that actually
none of this is Google specific, it's just

00:24:34.070 --> 00:24:45.340
using these open standards. Okay, uh yeah.
Let's go back to the talk. Nope...So, hopefully

00:24:45.340 --> 00:24:52.721
that made sense. Uh, some mechanical advice
for this. So, basically what I said is you

00:24:52.721 --> 00:24:57.370
want to let users claim and verify as many
identifiers as appropriate. With an email

00:24:57.370 --> 00:25:01.280
address you can send them an email and have
them click on it. Although increasingly you

00:25:01.280 --> 00:25:05.360
can use webfinger and figure out if it supports
OpenID, and then just make them do OpenID

00:25:05.360 --> 00:25:08.810
to collect the same information, right? So,
for anything like Google or Yahoo! or others,

00:25:08.810 --> 00:25:12.650
they'll give you the email addresses as part
of the OpenID round trip so you can actually

00:25:12.650 --> 00:25:15.820
use that with just a nice little lightweight
pop-up to verify their email address and it

00:25:15.820 --> 00:25:19.590
can be a lot less friction for you then making
the user fish that confirmation email out

00:25:19.590 --> 00:25:23.179
of that spam folder and to click and prove
they really own it. And then you can use the

00:25:23.179 --> 00:25:28.230
rel="me" links to find even more site they
use and so forth. And you just want to make

00:25:28.230 --> 00:25:31.090
sure users have control over how their findable
so that they don't feel like they are being

00:25:31.090 --> 00:25:35.250
trapped by sharing that information with you.

00:25:35.250 --> 00:25:39.640
And then you can use the OAuth that you got
before to look up their contact's API and

00:25:39.640 --> 00:25:42.730
then essentially just do a merge of all the
identifiers of all their friends versus all

00:25:42.730 --> 00:25:46.590
the identifiers on your site and boom, you've
got your list of local users. And you can

00:25:46.590 --> 00:25:49.980
keep doing this as I said on an ongoing basis,
so as you make new friends both on your site

00:25:49.980 --> 00:25:52.721
and other sites, you can constantly have that
information stay up to date.

00:25:52.721 --> 00:25:59.080
And so back in our island world, once the
islanders figured out how to do this, life

00:25:59.080 --> 00:26:02.320
was good because they could each live on their
islands and they still know how to find each

00:26:02.320 --> 00:26:07.730
other and get in touch when they want to.
And there was much rejoicing. So, what could

00:26:07.730 --> 00:26:12.049
we do to further help the islanders? Well,
I'm going to hand it back to my colleague

00:26:12.049 --> 00:26:19.361
Dr. Panzer. I'm going to give you a little
hint, it involves some magic salmon and we

00:26:19.361 --> 00:26:23.850
will be throwing salmon out later. Alright,
let's go find some more friends on Plaxo first.

00:26:23.850 --> 00:26:25.700
&gt;&gt;John Panzer:
Awesome. Thank you Joseph and... [pause],

00:26:25.700 --> 00:26:26.700
wonderful.

00:26:26.700 --> 00:26:34.309
&gt;&gt;Joseph Smarr:
By the way we can almost take no credit for

00:26:34.309 --> 00:26:35.920
the really beautiful graphics, that's all
Chris Messina.

00:26:35.920 --> 00:26:38.440
&gt;&gt;John Panzer:
Yeah, I want to give props to Chris because

00:26:38.440 --> 00:26:39.440
he's awesome.

00:26:39.440 --> 00:26:41.830
&gt;&gt;John Panzer:
--He's a genius. Yes. He spent way too much

00:26:41.830 --> 00:26:43.360
time on this, I hope it's obvious.

00:26:43.360 --> 00:26:45.420
&gt;&gt;John Panzer:
Yeah, yeah. [audience laughter]. Okay so the

00:26:45.420 --> 00:26:49.070
islanders figured out that they can send messages
to each other, the bottles are working out

00:26:49.070 --> 00:26:57.260
kind of okay, but there are problems with
them. So, one issue that these islanders have

00:26:57.260 --> 00:27:01.980
is they want, they want to find out what's
happening on their other islands. And when

00:27:01.980 --> 00:27:06.830
they do this the technology that they have
is they go back to the other island. They

00:27:06.830 --> 00:27:12.230
all go to the boat and see if there's new
messages waiting. And they check, and they

00:27:12.230 --> 00:27:18.215
check, and they check, and often there is
nothing there. Actually, most the time there

00:27:18.215 --> 00:27:20.030
is nothing there. Sometimes when there is
something there, they're not checking in so

00:27:20.030 --> 00:27:24.919
it takes a while until she's going to come
back you know, she's mad. And that's a problem

00:27:24.919 --> 00:27:28.380
because she's not getting her updates.

00:27:28.380 --> 00:27:33.370
Problem number 2, these islanders are going
around, and they're doing complicated things.

00:27:33.370 --> 00:27:38.391
They're taking rich photos and videos, and
they're doing sharing and they're doing all

00:27:38.391 --> 00:27:41.100
kinds of stuff and they want to tell people
about it, but the language that they have,

00:27:41.100 --> 00:27:46.721
the, the, amount of stuff that they put in
bottles isn't sufficient to the task. They

00:27:46.721 --> 00:27:51.970
can only put little plain text in there and
the meaning gets squished out. So, that's

00:27:51.970 --> 00:27:56.971
a problem for them. They want to keep everybody
up to date about all of their activities and

00:27:56.971 --> 00:28:01.130
they want this to happen automatically. They
don't want to be writing messages while they

00:28:01.130 --> 00:28:05.120
are out looking at whales. They want it to
happen just, as part of a natural course of

00:28:05.120 --> 00:28:09.090
things. They want to know that all their buddies
on all the islands, they want to know that

00:28:09.090 --> 00:28:15.470
they are looking at whales' right then. So,
so they have this rich content and they want

00:28:15.470 --> 00:28:26.049
to give it to the right place. So, this is
a problem. The island geeks have a solution.

00:28:26.049 --> 00:28:35.820
So, they came up with a series of technology
that solves these problems one by one. Now,

00:28:35.820 --> 00:28:45.790
this was a problem on the islands and it's
also a problem here on our social web. So,

00:28:45.790 --> 00:28:50.840
what problems do we have? We have problem
number one. The technology we have today for

00:28:50.840 --> 00:28:56.120
retrieving data across the sites is basically
the RSS feeds and polling. So, you're polling

00:28:56.120 --> 00:29:04.280
over and over again. This is a problem because
it means it's not scalable. But the first

00:29:04.280 --> 00:29:09.120
problem is that the content that gets squeezed
in these RSS feeds, it gets turned basically

00:29:09.120 --> 00:29:14.020
into text messages and a lot of the meaning
is lost. And different sites don't talk with

00:29:14.020 --> 00:29:18.730
the same language to each other so things
get dropped on the floor, the meaning gets

00:29:18.730 --> 00:29:24.190
squeezed out. Two, things are slow because
there's lots of wasting efforts polling, it's

00:29:24.190 --> 00:29:29.100
not scalable and these things just take a
lot of time. You don't get in real time updates

00:29:29.100 --> 00:29:32.885
when somebody's going to a party, you find
out two hours later and that's no good. And

00:29:32.885 --> 00:29:37.419
three, when content does get where it's going,
and you actually have a conversation about

00:29:37.419 --> 00:29:43.200
it, the conversation ends up only at being
silo'd at these other islands and the first

00:29:43.200 --> 00:29:48.950
island, which created the party, never finds
out about it. So, the conversations get fragmented

00:29:48.950 --> 00:29:53.750
and it's hard to keep track of what everyone
is saying. Okay? So, all this, yeah.

00:29:53.750 --> 00:29:54.750
&gt;&gt;Joseph Smarr:
--What is it?

00:29:54.750 --> 00:29:57.071
&gt;&gt;John Panzer:
Bad for users,

00:29:57.071 --> 00:30:01.600
[audience mimics]
bad for developers, sad. But, good news!

00:30:01.600 --> 00:30:03.419
[audience mimics], yes.

00:30:03.419 --> 00:30:07.130
&gt;&gt;Joseph Smarr:
--That's a C minus participation right there.

00:30:07.130 --> 00:30:10.070
&gt;&gt;John Panzer:
[laughs] You've got to do better. Alright,

00:30:10.070 --> 00:30:17.190
so now you can share and consume real time
rich activity data across the web. You can

00:30:17.190 --> 00:30:21.030
annotate existing feeds so that there's an
upgrade path that doesn't involve replacing

00:30:21.030 --> 00:30:25.860
the entire universe by adding in additional
metadata, verbs and objects, there's a standard

00:30:25.860 --> 00:30:29.401
for this called ActivityStrea.ms, Chris has
talked in detail about this, this morning.

00:30:29.401 --> 00:30:36.780
I'm going to show a few examples coming up
and you get, this makes it much easier to

00:30:36.780 --> 00:30:43.820
re-syndicate your content. Real time PubSubHubbub
has been deployed across the web now as many,

00:30:43.820 --> 00:30:49.580
many, many places using it; and great success.
You can use existing public hubs or you can

00:30:49.580 --> 00:30:54.130
roll your own, totally up to you, and the
net result is that the hub takes on all the

00:30:54.130 --> 00:30:57.780
heavy lifting. If you are a publisher, you
just ping it, if you are a consumer, you just

00:30:57.780 --> 00:31:03.941
get the data pushed to you; in real time.
And finally, uh, you can now make your users

00:31:03.941 --> 00:31:10.261
replies and cross-site mentions "swim upstream"
to the source of the content or to the person

00:31:10.261 --> 00:31:16.140
being mentioned. And so you can post replies
back to the original source with the commenter's

00:31:16.140 --> 00:31:20.771
permission and mentions can get sent where
they really should go, which is to the person

00:31:20.771 --> 00:31:25.710
whose is being mentioned. So I'm going to
do a quick demo...and...

00:31:25.710 --> 00:31:31.980
&gt;&gt;Joseph Smarr:
--Your demo thing is linked, that's way more

00:31:31.980 --> 00:31:33.360
sophisticated than what I did.

00:31:33.360 --> 00:31:36.020
&gt;&gt;John Panzer:
The web…yes, okay…so there are some existing...well,

00:31:36.020 --> 00:31:37.020
[chuckle]...

00:31:37.020 --> 00:31:38.570
&gt;&gt;Joseph Smarr:
That's good.

00:31:38.570 --> 00:31:43.470
&gt;&gt;John Panzer:
Yes, oh yes, win! So there are existing sites

00:31:43.470 --> 00:31:46.940
which are actually implementing some of this
so I'm going to demo some of them today. Two

00:31:46.940 --> 00:31:50.350
of them are Cliqset and statusnet so we're
going to give them a little bit.

00:31:50.350 --> 00:31:53.760
&gt;&gt;Joseph Smarr:
Aren't you going to sign in with your existing

00:31:53.760 --> 00:31:54.760
account?

00:31:54.760 --> 00:31:55.880
&gt;&gt;John Panzer:
[sigh], yes.

00:31:55.880 --> 00:31:57.990
&gt;&gt;Joseph Smarr:
Real time heckling.

00:31:57.990 --> 00:32:09.150
&gt;&gt;John Panzer:
Yes, I'm going to sign in... Okay, great.

00:32:09.150 --> 00:32:16.230
And now oh, so on Cliqset, it's just a microblogging
site, you can write messages in general and

00:32:16.230 --> 00:32:25.860
you can also mention other people. So, let
me do a quick... I'm going to cheat and copy

00:32:25.860 --> 00:32:29.280
and paste. Something, just a moment...

00:32:29.280 --> 00:32:32.120
&gt;&gt;Joseph Smarr:
Just scroll over?

00:32:32.120 --> 00:32:37.809
&gt;&gt;John Panzer:
Yeah, I'm going to scroll over here. Yes,

00:32:37.809 --> 00:32:45.200
thank you very much for your technical assistance,
yeah. This copying pasting business? Way to

00:32:45.200 --> 00:32:58.660
complicated…alright…alright. Here we go.
So, there we go, I’m on the site and, I

00:32:58.660 --> 00:33:02.260
want to tell my friends, Jack Salmon wants
to tell his friends about this cool YouTube

00:33:02.260 --> 00:33:07.540
video which I'm not going to play here but
if you guys want to go play you can. And he's

00:33:07.540 --> 00:33:09.970
going to tell them about it and he's going
to mention them. And they're not on, they're

00:33:09.970 --> 00:33:15.480
not actually on Cliqset, they're actually
on the island sites that they prefer. And

00:33:15.480 --> 00:33:20.750
so I now have, I've posted this publically
so that everyone knows about it, but specifically,

00:33:20.750 --> 00:33:26.630
I want Kate and John to know about this. So
uh, Kate is over on island status.net, which

00:33:26.630 --> 00:33:31.120
is her own little site. And if I hover over
this, Cliqset has this nice little feature

00:33:31.120 --> 00:33:35.410
where they’ve got a nice little hover card
of Kate and you can see, I can see her picture.

00:33:35.410 --> 00:33:40.060
Now that picture, by the way, Cliqset doesn't
know a thing about this, that picture is retrieved

00:33:40.060 --> 00:33:45.429
via webfinger from StatusNet automatically,
there's no pre-federation here, it's, it's

00:33:45.429 --> 00:33:50.320
all automatic. Zero config. So, and there's
lots more information that could be displayed.

00:33:50.320 --> 00:34:00.880
So, if I want to go over and see Kate, I go
over to Kate, and if I go over and look at,

00:34:00.880 --> 00:34:07.970
they call, "replies." So, on Kate's site,
she sees the stream of replies and everyone

00:34:07.970 --> 00:34:13.859
else can see it too in this case, and it's
showing the mention from across the web, and

00:34:13.859 --> 00:34:17.679
as you can see it got pushed in automatically.
And I'll show you why that's safe and why

00:34:17.679 --> 00:34:27.099
it can be spam free in a little bit. Okay,
the other, by the way, this is not just an

00:34:27.099 --> 00:34:33.840
address, this also went off to a little demo
site...

00:34:33.840 --> 00:34:38.300
&gt;&gt;Joseph Smarr:
[quietly] Yay!

00:34:38.300 --> 00:34:39.420
[pause]

00:34:39.420 --> 00:34:45.929
&gt;&gt;John Panzer:
[laughs] SO this is a problem with identity,

00:34:45.929 --> 00:34:51.990
we have too many identities going on here.

00:34:51.990 --> 00:34:55.780
&gt;&gt;Joseph Smarr:
Sorry about that.

00:34:55.780 --> 00:35:02.600
&gt;&gt;John Panzer:
That's alright, I'll just blow your identity

00:35:02.600 --> 00:35:05.630
away. Alright...that's fine.
[pause]

00:35:05.630 --> 00:35:11.500
Come on...okay and this mention has shown
up, it's shown up twice since I've been demoing

00:35:11.500 --> 00:35:16.760
this. It's now shown up in my mentions, over
here as well, so two places. So, we now have

00:35:16.760 --> 00:35:22.910
three places that are interoperating and exchanging
these mentions automatically, which is great.

00:35:22.910 --> 00:35:29.300
Now, I'm going to go back and explain how
this works and how you might build this. Okay,

00:35:29.300 --> 00:35:40.190
so, a lot of this is going to be very familiar.
So, number one, implement webfinger. So, you

00:35:40.190 --> 00:35:47.340
publish a /.well known/host-meta file to point
at per-user XRD's. Then for each per-user

00:35:47.340 --> 00:35:53.910
XRD you put up a link that Joseph was showing
us, and this lets you bootstrap all these

00:35:53.910 --> 00:35:58.210
different protocols. And that's why webfinger
is a good starting point. And finally you

00:35:58.210 --> 00:36:04.300
use these email identifiers which technically
the machines know as A-C-C-T identifiers.

00:36:04.300 --> 00:36:09.900
Or URLs, mostly these protocols, Salmon doesn't
care. All he cares that they're machine-readable

00:36:09.900 --> 00:36:18.859
and that you can use webfinger with them.
Okay, so, the next thing that I'm going to

00:36:18.859 --> 00:36:22.940
show you is a little bit more of how this
works under the hood with webfinger, I’m

00:36:22.940 --> 00:36:34.280
just going to show the links. That right there...
So, how did I find Kate? This is the same

00:36:34.280 --> 00:36:43.530
tool that we saw before. kate@eyeland.status.net.
and there's a whole bunch of metadata you

00:36:43.530 --> 00:36:48.800
can get about Kate, that's public. Some of
its services that Kate uses, and some of it

00:36:48.800 --> 00:36:58.910
are pieces of data that she wants to publish
for the world. One of them is this here, Salmon

00:36:58.910 --> 00:37:03.750
replies. She wants to be told when people
are talking about her, so puts a link up.

00:37:03.750 --> 00:37:09.150
And people post to that link when they post
a mentions to that link. If she doesn't want

00:37:09.150 --> 00:37:15.880
mentions, she doesn't put the link. She also
publishes so that she can publish things out

00:37:15.880 --> 00:37:21.330
to the web; she publishes a public key in
her webfinger. This is actually very powerful

00:37:21.330 --> 00:37:26.350
and very generic. And in addition she's got
a lot of profile information, all of the things

00:37:26.350 --> 00:37:29.320
that Joseph showed; I'm not going to go into
detail, but obviously you can get cool things

00:37:29.320 --> 00:37:35.040
that pull the profile picture automatically
which is what users actually care about. So,

00:37:35.040 --> 00:37:43.680
notice that the other thing she can, that
I'm going to show, I can very quick, you don't

00:37:43.680 --> 00:37:50.030
have to show, have all the same information.
The nice thing about this is that it's generic

00:37:50.030 --> 00:37:53.790
and you can publish as much or as little information
as you want. In this particular demo of this

00:37:53.790 --> 00:37:57.010
little app engine I want to put up only has
two little tiny pieces of information. So,

00:37:57.010 --> 00:38:00.670
you can be as public or as private as you
want to be. You've just got a few pieces of

00:38:00.670 --> 00:38:05.230
information that are required to make protocols
work. But it's all very regular, it's links

00:38:05.230 --> 00:38:16.302
and types and essentially that's it. So, I'm
going to go back... Alright and I’m going

00:38:16.302 --> 00:38:19.330
to talk a little bit about the data that's
being sent back and forth. Because the data

00:38:19.330 --> 00:38:23.190
that was being sent back and forth under the
hood about those mentions are actually activities,

00:38:23.190 --> 00:38:27.260
you know I've mentioned you and here's the
text. So, the first thing you want to do is

00:38:27.260 --> 00:38:32.420
add activity:verb and activity:object-type
into your feeds and you can use Cliqset if

00:38:32.420 --> 00:38:38.820
you are consuming feeds. You can use that
as a proxy to infer a lot of this data. You

00:38:38.820 --> 00:38:42.401
want to map to existing verbs where possible,
there's a standard for this so that people

00:38:42.401 --> 00:38:45.720
can, when they're really talking about the
same things you can map to the same things.

00:38:45.720 --> 00:38:49.869
If they're not really talking about the same
things you can extend it, you can add your

00:38:49.869 --> 00:38:52.410
own. And the cool thing is you can augment
this so you can have a generic verb, you can

00:38:52.410 --> 00:38:58.100
have a more specific one and people will actually
understand whichever one they can. And you

00:38:58.100 --> 00:39:01.970
can also put up unstructured content as well
for compatibility meaning that you don't have

00:39:01.970 --> 00:39:04.840
to boil the ocean to get started with this
you can get started as soon as today and it

00:39:04.840 --> 00:39:10.101
will work, and it will work better when everyone
else starts implementing it too. And then

00:39:10.101 --> 00:39:12.860
finally, when you are generating, when you
are creating something, you want to get credit

00:39:12.860 --> 00:39:21.230
for it so include a generator which gives
you a attribution for this information. And

00:39:21.230 --> 00:39:23.130
as also use webfinger.

00:39:23.130 --> 00:39:28.310
Now when you are consuming activities, same
thing in reverse. You want to map the verbs

00:39:28.310 --> 00:39:32.420
and the objects to your own data types. Provide
a good UI so if you've got a, if you're getting

00:39:32.420 --> 00:39:36.720
this information, if you know somebody is
sharing a video with you, you can customize

00:39:36.720 --> 00:39:41.220
a UI. They can customize the heck out of the
UI because you know that your friend shares

00:39:41.220 --> 00:39:44.380
the video, it's not like an email which you've
got like 27 attachments and you don't know

00:39:44.380 --> 00:39:48.260
what to do with it. So, you can share photos,
you can display the thumbnails, you can do

00:39:48.260 --> 00:39:55.250
cool things with it. In the fallback, the
very worst case, you can always just play

00:39:55.250 --> 00:40:00.560
the unstructured content which is likely going
to be fairly good because it's what the producer

00:40:00.560 --> 00:40:06.490
wanted you to show. And then display the activity:generator
for attribution. And webfinger as always,

00:40:06.490 --> 00:40:10.230
you can go off, if you can't find the data
you need, you can go and do webfinger discover

00:40:10.230 --> 00:40:19.230
to get more data as we saw with Kate's profile
photo. Next, if you're doing feeds, you really

00:40:19.230 --> 00:40:23.180
want to do PubSubHubbub because that will
make sure these things happen in real time.

00:40:23.180 --> 00:40:28.570
And when that video gets shared out, all of
those people get to see it right away. And

00:40:28.570 --> 00:40:33.980
for some videos, that's actually very important.
For things like party and events that's really,

00:40:33.980 --> 00:40:39.240
really important. So, this is pretty standard
in that you add a link. You post a ping post

00:40:39.240 --> 00:40:46.390
to your hub when you have updates. You can
either run your hub or use a public one, we've

00:40:46.390 --> 00:40:53.119
got a public one at Google which everyone
can use. And when your subscribing to feeds,

00:40:53.119 --> 00:40:57.950
look for the hub link, if it's there so that
means you can use it to subscribe and get

00:40:57.950 --> 00:41:02.550
content pushed to you without you having to
do anything. So, this is almost, there's almost

00:41:02.550 --> 00:41:08.480
no downside to this. So, you get things immediately
you do less work, you spend less money, and

00:41:08.480 --> 00:41:15.869
you have a better user experience. So, next,
Salmon, which is one of the newer technologies

00:41:15.869 --> 00:41:19.630
here, and by the way I'm going to, I'm happy
to kind of go over into more depth in and

00:41:19.630 --> 00:41:23.160
question and answer session later I just want
to make sure we cover all these things at

00:41:23.160 --> 00:41:30.680
a medium level. So, if you want to produce
Salmon, and produce a stream which Salmon

00:41:30.680 --> 00:41:38.230
can swim up to. If you want Salmon comments,
if someone is commenting on something in your

00:41:38.230 --> 00:41:42.440
stream and you want to know about it, and
you want to add it to your comments. So you

00:41:42.440 --> 00:41:47.700
add a &lt;link rel='salmon'&gt;, there's a pattern
here, links are really, really useful. Point

00:41:47.700 --> 00:41:52.980
to the Salmon endpoint you accept a POST,
you take the POST, you add a comment when

00:41:52.980 --> 00:41:57.359
you see a Salmon that's valid and then you
do the same thing for mentions. Mentions are

00:41:57.359 --> 00:42:01.750
really almost the same thing as comments except
that they're not a comment on something, they're

00:42:01.750 --> 00:42:05.869
just a mention of somebody. So, you can check
to see if their mentioned on there and then

00:42:05.869 --> 00:42:13.550
tell them about it or display it, whatever
makes sense for your use case. Okay so that's,

00:42:13.550 --> 00:42:17.930
that's accepting Salmon from downstream, but
if you want to send Salmon, for example you

00:42:17.930 --> 00:42:21.440
have something that does comments, so you
look for the link, you post to it, you-you're

00:42:21.440 --> 00:42:26.820
going to sign the content before you send
it so you can get out, verify that it came

00:42:26.820 --> 00:42:35.280
from the person, it's not just a spam bot
or something. And also if it's, depending

00:42:35.280 --> 00:42:38.589
on your service, you need to make sure that
your users understand that their comments

00:42:38.589 --> 00:42:39.600
are being broadcast potentially throughout
the web. Salmon is intended for public content

00:42:39.600 --> 00:42:51.160
right now and they, users, should know that
their comment stream is being pushed upstream.

00:42:51.160 --> 00:42:58.210
So that's fairly, at a high level, a very,
very simple, Salmon mentions are almost the

00:42:58.210 --> 00:43:03.680
same thing except that you're doing discover
on the person that's being talked about. So,

00:43:03.680 --> 00:43:08.630
anytime you see an identifier, which can be
something from somebody's address book, it

00:43:08.630 --> 00:43:12.950
can be somebody typing in an actual email
address, in the body of the message with a

00:43:12.950 --> 00:43:17.140
special character, whatever the UI is, and
you know that the writer is intending to call

00:43:17.140 --> 00:43:22.950
attention, to call that person's attention
to the message, then you can look to see if

00:43:22.950 --> 00:43:27.970
the recipient wants to know about it. And
if they do you post a Salmon.

00:43:27.970 --> 00:43:37.440
So, here what I’m going to do next is show
an example of an activity, and how it gets

00:43:37.440 --> 00:43:43.070
signed as a Salmon. Because you can sign anything,
with this protocol called Magic Signatures

00:43:43.070 --> 00:44:00.680
that Salmon uses. And we'll see both at once.
Let's see here... Why am I signing in again?

00:44:00.680 --> 00:44:06.750
[pause]
Okay great, so I just want to show a real

00:44:06.750 --> 00:44:11.910
quickly here, this is an example of a generic
atom entry which is a valid, a hopefully valid

00:44:11.910 --> 00:44:16.330
salmon. It's not letting, it's not accepting
the salmon right now because the author is

00:44:16.330 --> 00:44:24.110
bogus. The author is your user ID here, which
does not match the person I'm logged in as.

00:44:24.110 --> 00:44:29.830
So, I can't, this application is not letting
me sign in. If I actually go through and

00:44:29.830 --> 00:44:39.250
[pause]
and I put my true user into it. Okay, great.

00:44:39.250 --> 00:44:43.760
So, what this is doing is behind the scenes
it's dynamically checking, and its saying

00:44:43.760 --> 00:44:51.730
is this person, does the author match the
person who's actually signed in. And it does,

00:44:51.730 --> 00:44:54.240
so I'm saying, great, I’m vouching for,
and then signing it for me, it's turning it

00:44:54.240 --> 00:45:01.070
into a Salmon. Which down here is a little
hard to see, but is a

00:45:01.070 --> 00:45:05.930
[pause]
turns into a chunk of, basics farmcoded text

00:45:05.930 --> 00:45:10.150
which isn't actually encrypted, it's just
signed. And there's a signature down here

00:45:10.150 --> 00:45:14.390
at the bottom. And the key point of Salmon
in this form is that when you get one of these,

00:45:14.390 --> 00:45:16.210
you check the signature and if it doesn't
match then you drop the Salmon immediately.

00:45:16.210 --> 00:45:22.840
It means it's a bad fish, and you sniff it
and it's gone. If it passes then you can do

00:45:22.840 --> 00:45:27.340
a bunch of other tests and see if that person
is the, is a legitimate person, or if he's

00:45:27.340 --> 00:45:30.820
marked as a spammer, but at least you know
for certain that the person who is the author,

00:45:30.820 --> 00:45:36.380
actually sent the thing. It's not like email
where you can just type whatever you want

00:45:36.380 --> 00:45:38.040
in the from field. So, what you can do is
verify the signature and behind the scenes

00:45:38.040 --> 00:45:43.790
is actually going through a public key verification
process and going off and doing webfinger

00:45:43.790 --> 00:45:47.931
to retrieve that public key I showed you before
and checking it against the signature and

00:45:47.931 --> 00:45:54.190
it's getting an A-OK. And then when you actually
want to look at the data, you can unfold this,

00:45:54.190 --> 00:46:03.350
in this case in an atom. This also works for
JSON activity streams and it shows the data,

00:46:03.350 --> 00:46:07.960
there's original author, you can look at everything,
it's been verified. And you can also carry

00:46:07.960 --> 00:46:12.520
along the original signature when you want
to re-syndicate this back out and prove, and

00:46:12.520 --> 00:46:19.170
keep the proof that the author signed it.
So, this helps combat spam and abuse in this

00:46:19.170 --> 00:46:22.730
whole system which is one of the big problems
with a totally distributed system with no

00:46:22.730 --> 00:46:31.150
central authority.
So, let me do one other quick demo. Actually

00:46:31.150 --> 00:46:37.490
we're kind of running out of time here, but
activ- I won't go into showing the whole glory

00:46:37.490 --> 00:46:42.810
of activity streams here, but it's an extension
of this where you are adding verbs and objects.

00:46:42.810 --> 00:46:47.720
And if you've seen Chris' talk, he's gone
into a lot more detail on this structure.

00:46:47.720 --> 00:46:57.530
But rest assured, this can sign activities
just as well as it can it can plain atom.

00:46:57.530 --> 00:47:03.071
Alright...okay so, now the islanders, back
to our island story. They solved their problems,

00:47:03.071 --> 00:47:09.700
they've got a series of tubes that are pubbing
and subbing and when they want to send messages

00:47:09.700 --> 00:47:15.650
they just pop it in and they come, and it
goes immediately in real time to the, whoever

00:47:15.650 --> 00:47:20.600
is subscribed to them. And that could have
gone through a hundred tubes to all the recipients.

00:47:20.600 --> 00:47:25.099
Now with Salmon you can now reply and the
reply can go, the reply doesn't have to back

00:47:25.099 --> 00:47:29.830
through the tubes, it can actually go to the
original source which can be in a number of

00:47:29.830 --> 00:47:35.160
tubes back removed. And so she calls the magic
Salmon hands it the message, Salmon signs

00:47:35.160 --> 00:47:41.400
it, and delivers it and the recipient knows
it's a good message because its Salmon protected,

00:47:41.400 --> 00:47:44.910
it's salmonized. You can do the same thing
for mentions. So, if I'm just writing a message

00:47:44.910 --> 00:47:49.790
and I want to tell people about that cool
video, I don't have to get out of my hammock.

00:47:49.790 --> 00:47:56.400
I just write that message and I call my magic
Salmon and it splits it into two magic Salmon

00:47:56.400 --> 00:48:00.640
and delivers it simultaneously to via HTP
posts to the recipients and they verify them

00:48:00.640 --> 00:48:06.560
and they, they know the recipient sent it.
This means that, by the way, given that you

00:48:06.560 --> 00:48:10.900
have social networks, you can use this for
access control because you can believe the

00:48:10.900 --> 00:48:15.230
sender, that means you can check to see if
the person is really on my buddy list, and

00:48:15.230 --> 00:48:21.150
therefore it's okay for them to send me messages
and wake me up in the middle of the night.

00:48:21.150 --> 00:48:26.339
So, all of these technologies build on each
other. Alright? So, great the islanders have

00:48:26.339 --> 00:48:32.990
solved their problems, they're happy, everything
is awesome and now everybody is having a great

00:48:32.990 --> 00:48:39.870
party. Party time. Everybody lived happily
ever after. Now, here to wrap things up and

00:48:39.870 --> 00:48:44.050
to summarize everything that we've learned
so far I'm going to hand it back over to Joseph.

00:48:44.050 --> 00:48:47.890
&gt;&gt;Joseph Smarr:
Thanks John. That's pretty cool stuff right?

00:48:47.890 --> 00:48:52.190
Every story needs a moral and so let's take
a moment to pause and reflect on the moral

00:48:52.190 --> 00:48:57.690
of the story of these islanders here. They
had a problem visiting each other and trying

00:48:57.690 --> 00:49:01.040
to go to new islands. And that's bad because
people should be able to live where they want

00:49:01.040 --> 00:49:06.930
right? And with OpenID, they were able to
go where they wanted without all that friction.

00:49:06.930 --> 00:49:10.320
But then once people were living in different
places, they really wanted to be able to still

00:49:10.320 --> 00:49:14.339
stay in touch with each other, and find each
other, and get in touch. And with webfinger

00:49:14.339 --> 00:49:19.050
they were able to do that as well. You shouldn't
have to only communicate with people, and

00:49:19.050 --> 00:49:23.290
there's a reason we use the @ symbol here.
I mean email didn't used to have an @ symbol.

00:49:23.290 --> 00:49:26.810
You used to only be able to email people on
the same server as you. And then they invented

00:49:26.810 --> 00:49:31.099
the @ symbol so you could send email to other
computers. And we're essentially reinventing

00:49:31.099 --> 00:49:35.990
that today with webfinger. And lastly they
wanted to not just get in touch with each

00:49:35.990 --> 00:49:40.400
other, but actually send rich content in real
time. And so activity streams allowed them

00:49:40.400 --> 00:49:43.730
to send photos and videos and locations and
all those stuff that people are really doing

00:49:43.730 --> 00:49:47.820
today. And to share in real time, and to have
conversations that actually span these different

00:49:47.820 --> 00:49:51.720
islands. And similarly, I should be able to
share with just as much fidelity, if you and

00:49:51.720 --> 00:49:55.579
I are on different services, just like if
I'm on Gmail and you're on Yahoo! Mail, we

00:49:55.579 --> 00:49:59.940
should be able to email back and forth including
rich attachments and HTML and so forth, and

00:49:59.940 --> 00:50:03.140
the messages should show up with same speed
that they do within a closed service. There's

00:50:03.140 --> 00:50:06.119
really no reason we can't solve these problems
and I hope you've seen we've actually made

00:50:06.119 --> 00:50:11.500
a lot of progress. And I'll just sort of conclude
by saying that we've used this island metaphor

00:50:11.500 --> 00:50:15.329
a lot, and you know this is an xkcd cartoon
from a few years ago, and what's interesting

00:50:15.329 --> 00:50:19.450
to me is that it still more or less rings
true. We're still basically in these different

00:50:19.450 --> 00:50:23.690
islands. And from Google's perspective, we
think it's great that there's lots of different

00:50:23.690 --> 00:50:27.680
social websites out there. The web has tons
of different websites too, and what made the

00:50:27.680 --> 00:50:32.510
web work was everybody could put their own
website and they could all link to each other

00:50:32.510 --> 00:50:36.300
and so anybody that came along with a new
idea could just get involved and it could

00:50:36.300 --> 00:50:39.980
take off and everybody was better. And that's
exactly what we want to see on the social

00:50:39.980 --> 00:50:44.010
web. We want there to be a lots of different
cool social sites, niche social content, other

00:50:44.010 --> 00:50:47.670
sites that have social features, and users
be able to play with them, choose the ones

00:50:47.670 --> 00:50:51.609
they want, not have to start over from scratch
every time. And we are getting really far,

00:50:51.609 --> 00:50:55.950
I mean, I can say we've been talking about
this for years it seems like, but each year

00:50:55.950 --> 00:50:59.710
there's just an amazing progress going on
in terms of not only how much capability there

00:50:59.710 --> 00:51:04.630
is, to actually have rich experiences across
sites, but how many big players are actually

00:51:04.630 --> 00:51:08.060
getting involved and doing this, and how many
small players are coming up and using this

00:51:08.060 --> 00:51:12.170
from day one. And increasingly how much is
based on open standards that you really can

00:51:12.170 --> 00:51:16.000
just work with the standards and work with
anybody that supports them instead of having

00:51:16.000 --> 00:51:19.320
to try and pick winners and losers today.
So I think that's really exciting and it's

00:51:19.320 --> 00:51:22.440
got us really excited, and I hope you can
see now it's something you can actually jump

00:51:22.440 --> 00:51:26.270
in and start playing with today. And so to
conclude, we've put a bunch of helpful links

00:51:26.270 --> 00:51:31.150
if you want to learn more and play with things.
And of course we'll be around to answer questions

00:51:31.150 --> 00:51:38.800
and send Salmons if you'd like. Thank you
very much and we'll open up to questions now.

00:51:38.800 --> 00:51:44.460
[audience clapping]
So please come to the mic if you have a question,

00:51:44.460 --> 00:51:47.950
I think there might also be some questions
on Google Wave, so feel free to shout those

00:51:47.950 --> 00:51:49.060
out in between. Go ahead.

00:51:49.060 --> 00:51:52.440
&gt;&gt;male questioner #1:
So, as someone's who's on the Salmon developer

00:51:52.440 --> 00:51:58.070
list, I see all the connect comments and some
of the discussion and was really eager to

00:51:58.070 --> 00:52:00.630
use Salmon. How long do you think it'll be
until we get to the point where there's just-

00:52:00.630 --> 00:52:03.680
or where we are with OAuth, where's there's
a bunch of language libraries already out

00:52:03.680 --> 00:52:12.369
there, to make it, so you don't have to really
understand the workings of the protocol very

00:52:12.369 --> 00:52:13.369
intensely?

00:52:13.369 --> 00:52:14.369
&gt;&gt;Joseph Smarr:
--Salmon!

00:52:14.369 --> 00:52:15.369
&gt;&gt;John Panzer:
Everyone that asks a Salmon question, gets

00:52:15.369 --> 00:52:17.100
a salmon. Thank you. Yes, so the-

00:52:17.100 --> 00:52:18.100
&gt;&gt;Joseph Smarr:
--That works.

00:52:18.100 --> 00:52:19.630
&gt;&gt;John Panzer:
I'm very optimistic, we're making good progress

00:52:19.630 --> 00:52:30.320
 . There are already Java, Python, and PHP
libraries available for Salmon and some people

00:52:30.320 --> 00:52:35.310
are talking about Ruby. Which I think is an
awesome start. So it's gaining a lot of traction.

00:52:35.310 --> 00:52:39.280
We have interop, as you saw, which is the
most important thing with this stuff and there

00:52:39.280 --> 00:52:43.150
are services which have deployed, which are
using these libraries. And we're working to

00:52:43.150 --> 00:52:49.190
collect them, put them up and have them be
an open source, in a central location. So,

00:52:49.190 --> 00:52:53.770
I think that'll be very, very soon, and we
are planning to use these for our own deployments

00:52:53.770 --> 00:52:56.300
for our production services at Google as well.

00:52:56.300 --> 00:52:58.690
&gt;&gt;Joseph Smarr:
And all these building blocks, almost all

00:52:58.690 --> 00:53:01.570
the libraries have come from developers who
got excited and wanted to contribute one.

00:53:01.570 --> 00:53:04.660
So none of these specs are that hard so it'd
be great to jump in and if it's not in the

00:53:04.660 --> 00:53:07.540
language of your choice or you don't like
the existing libraries, build a better one,

00:53:07.540 --> 00:53:10.109
open source it, share it with the community,
and that's how we all grow. Great question.

00:53:10.109 --> 00:53:11.109
Thanks. Next.

00:53:11.109 --> 00:53:12.109
&gt;&gt;male questioner #1:
Thank You

00:53:12.109 --> 00:53:15.500
&gt;&gt;male questioner #2:
Slight bit of background, I have a friend

00:53:15.500 --> 00:53:24.800
of mine who came from a very abusive family,
so privacy for her is a very touchy subject.

00:53:24.800 --> 00:53:30.880
Similarly, there's a lot of applications that
want to ask for access to the contacts, so

00:53:30.880 --> 00:53:39.320
you know, they say can I have access to the
Google contacts and I didn't hear anything

00:53:39.320 --> 00:53:45.570
in the protocol that allowed me as a user,
and also me as an app developer too, because

00:53:45.570 --> 00:53:52.570
I would like to ask for a number of things
and then if the user goes over to Google to

00:53:52.570 --> 00:53:56.560
authenticate themselves, for Google to be
able to, as part of the protocol specification

00:53:56.560 --> 00:54:04.540
with that, they would be able to unselect
options. For example, say that Amplifeed,

00:54:04.540 --> 00:54:13.079
my product, can access the contacts but only
these 25 contacts, in only this once. And

00:54:13.079 --> 00:54:17.500
I would like to be able to support that as
a way to reduce the friction, because if I

00:54:17.500 --> 00:54:20.000
ask for more than what they're comfortable
for they just go away

00:54:20.000 --> 00:54:21.000
&gt;&gt;Joseph Smarr:
Right.

00:54:21.000 --> 00:54:23.600
&gt;&gt;male questioner #2:
as opposed to just giving a generated experience.

00:54:23.600 --> 00:54:24.600
&gt;&gt;Joseph Smarr:
Yep.

00:54:24.600 --> 00:54:27.200
&gt;&gt;male questioner #2:
But I haven't heard anything about that that

00:54:27.200 --> 00:54:33.670
would allow Google to enforce it because obviously
I as the developer can kind of bandage it

00:54:33.670 --> 00:54:36.980
myself but I'm not to be trusted because

00:54:36.980 --> 00:54:38.220
&gt;&gt;Joseph Smarr:
Right.

00:54:38.220 --> 00:54:41.300
&gt;&gt;male questioner #2:
I have incentive to lie.

00:54:41.300 --> 00:54:45.200
&gt;&gt;Joseph Smarr:
Yep, very good question. Here you get a salmon

00:54:45.200 --> 00:54:47.560
even though it's not a Salmon question. Look
you are not going to bring a bunch of salmon

00:54:47.560 --> 00:54:49.109
to stage and not going to throw them alright?
If anybody wants one just put your hand up.

00:54:49.109 --> 00:54:54.130
So, yes very good questions, so actually you
can do what you are talking about, it's not

00:54:54.130 --> 00:54:58.190
something that is, the policy isn't really
baked into the specs but the specs allow for

00:54:58.190 --> 00:55:03.720
it. So when you are making an OAuth request,
you basically are passing in the scopes that

00:55:03.720 --> 00:55:07.160
you want that token to be for. And there's
nothing that says how fine or coarsely grained

00:55:07.160 --> 00:55:12.859
the scopes can be. So, it's up to services
that allow you to specify that level of granularity

00:55:12.859 --> 00:55:17.630
in those scopes. But different services can
take different ideas. So, for example, I know

00:55:17.630 --> 00:55:20.359
Microsoft's services tend to have a lot more
of that fine grained. Is it just for an hour,

00:55:20.359 --> 00:55:24.120
is it for the whole time, is it just one folder,
is it all folders? And the OAuth token they

00:55:24.120 --> 00:55:28.730
give back it just encodes what scopes were
granted in that token and then when you use

00:55:28.730 --> 00:55:32.470
that token you just can't fetch anything that's
not in those scopes. And so at that point

00:55:32.470 --> 00:55:36.369
it really becomes a choices of the provider,
and there is a trade-off. If you make the

00:55:36.369 --> 00:55:41.550
consent UI too complicated, you often have
greater drop-off just from user confusion.

00:55:41.550 --> 00:55:44.850
But as you say if you make it too rigid, and
the user is not happy with the offer, then

00:55:44.850 --> 00:55:48.550
they can drop off that way too. So there's
kind of some fine-tuning that can go on and

00:55:48.550 --> 00:55:51.630
that's really an opportunity for services
to compete and differentiate each other based

00:55:51.630 --> 00:55:56.260
on that level of customizability versus kind
of a quick thing you can up and running with.

00:55:56.260 --> 00:55:59.410
But the specs actually support all of that
very flexiblly. And I think your use cases

00:55:59.410 --> 00:56:03.850
are very good ones that people are going to
have to figure out how to do in general. All

00:56:03.850 --> 00:56:05.200
of these things need to get more refined over
time.

00:56:05.200 --> 00:56:08.300
&gt;&gt;male questioner #2:
But it didn't sound like, it sounds like it's

00:56:08.300 --> 00:56:10.880
up to each individual OAuth provider.

00:56:10.880 --> 00:56:14.000
&gt;&gt;Joseph Smarr:
Right, in terms of exactly how fine a grain

00:56:14.000 --> 00:56:15.000
scope they are and what they return.

00:56:15.000 --> 00:56:16.000
&gt;&gt;male questioner #2:
Oh, okay.

00:56:16.000 --> 00:56:17.000
&gt;&gt;Joseph Smarr:
And one could imagine if a bunch of sites

00:56:17.000 --> 00:56:19.790
want to offer similar types of primatives,
you could imagine those getting standardized

00:56:19.790 --> 00:56:23.069
too, there's nothing that prevents that. That's
just still early days for a lot of that. Now

00:56:23.069 --> 00:56:27.120
I know there was a Wave, so if anybody has
their computer open, and there are questions

00:56:27.120 --> 00:56:31.640
in there that you think are worth asking,
please ask them on their behalf as well. Or

00:56:31.640 --> 00:56:32.960
come up to the mic.

00:56:32.960 --> 00:56:34.550
&gt;&gt;female questioner #1:
Hi.

00:56:34.550 --> 00:56:35.740
&gt;&gt;Joseph Smarr:
Hello!

00:56:35.740 --> 00:56:40.520
&gt;&gt;female questioner #1:
So, in relation to that question, I may have

00:56:40.520 --> 00:56:50.440
just missed it, but I didn't hear where Google
lets their users use Google Gmail as a login

00:56:50.440 --> 00:56:54.890
without giving away their contacts. Is that
something Google does?

00:56:54.890 --> 00:56:56.290
&gt;&gt;Joseph Smarr:
Yes, yes.

00:56:56.290 --> 00:56:57.290
&gt;&gt;female questioner #1:
--How?

00:56:57.290 --> 00:56:58.980
&gt;&gt;Joseph Smarr:
You have to ask for each individual piece

00:56:58.980 --> 00:57:03.240
you want and so you can just login and say
I'm going to be anonymous, or I'll just give

00:57:03.240 --> 00:57:06.569
you my name but not my address book, or I'll
just give you my calendar, it's fully customizable.

00:57:06.569 --> 00:57:07.660
&gt;&gt;female questioner #1:
I didn't see that.

00:57:07.660 --> 00:57:10.109
&gt;&gt;Joseph Smarr:
--Yeah, in that demo I just did, I did everything

00:57:10.109 --> 00:57:11.109
to kind of just make the point.

00:57:11.109 --> 00:57:12.109
&gt;&gt;female questioner #1:
--Okay.

00:57:12.109 --> 00:57:13.109
&gt;&gt;Joseph Smarr:
But yes, you have complete control over what

00:57:13.109 --> 00:57:14.109
you give out.

00:57:14.109 --> 00:57:15.109
&gt;&gt;female questioner #1:
Okay.

00:57:15.109 --> 00:57:16.220
&gt;&gt;Joseph Smarr:
Yep, good question. She ran away before she

00:57:16.220 --> 00:57:17.670
got a salmon, they're getting smarter.

00:57:17.670 --> 00:57:18.670
&gt;&gt;John Panzer:
Yeah.

00:57:18.670 --> 00:57:19.670
[laughs]

00:57:19.670 --> 00:57:20.670
&gt;&gt;Joseph Smarr:
You alright?

00:57:20.670 --> 00:57:24.030
&gt;&gt;female questioner #1:
I thought you were out!

00:57:24.030 --> 00:57:25.339
&gt;&gt;Joseph Smarr:
Never! No.

00:57:25.339 --> 00:57:26.420
[salmon being thrown by John]

00:57:26.420 --> 00:57:27.500
&gt;&gt;female questioner #1:
Ahhh! No.

00:57:27.500 --> 00:57:28.500
&gt;&gt;John Panzer:
Whoops, whoops.

00:57:28.500 --> 00:57:30.099
&gt;&gt;Joseph Smarr:
Any other questions? Any moderator questions?

00:57:30.099 --> 00:57:32.100
You now know everything about distributed
social networking?

00:57:32.100 --> 00:57:36.455
&gt;&gt;male questioner #3:
What do you do when a Salmon endpoint is down

00:57:36.455 --> 00:57:37.455
temporarily?

00:57:37.455 --> 00:57:38.455
&gt;&gt;Joseph Smarr:
Good, what do you do when a Salmon endpoint

00:57:38.455 --> 00:57:39.455
is down temporarily?

00:57:39.455 --> 00:57:43.580
&gt;&gt;John Panzer:
Good question, we're...should I throw it?

00:57:43.580 --> 00:57:49.859
[salmon thrown] [laughs] So if you're uh,
the question is where the Salmon you want

00:57:49.859 --> 00:57:51.599
to post it to? Is that one down temporarily?

00:57:51.599 --> 00:57:52.599
&gt;&gt;male questioner #3:
Yeah.

00:57:52.599 --> 00:57:55.430
&gt;&gt;John Panzer:
So, you can queue. Same as I'm sure you have

00:57:55.430 --> 00:58:01.440
for other services. Or you can tell the user
sorry we can't, we couldn't deliver your Salmon,

00:58:01.440 --> 00:58:10.500
and it didn't work. So that's a quality service
that. If things like the webfinger protocol,

00:58:10.500 --> 00:58:15.380
endpoints aren't available, then you have
to make some decisions about what to do next.

00:58:15.380 --> 00:58:20.430
You may not be able to access the user, maybe
they don't exist, you can't really tell. So,

00:58:20.430 --> 00:58:24.530
a lot of this information is cacheable though.
So the host-meta, the webfinger, all that

00:58:24.530 --> 00:58:28.040
stuff, you can set the cache headers on that
stuff so that you can, for whatever meets

00:58:28.040 --> 00:58:39.100
your needs. And so you can ride out a lot
of service interruptions that way.

00:58:39.100 --> 00:58:40.100
&gt;&gt;Joseph Smarr:
Okay so we have time for maybe one more question,

00:58:40.100 --> 00:58:43.470
one more salmon. Did you guys catch that the
endpoint was salmon slap, I think that's awesome.

00:58:43.470 --> 00:58:45.640
[John laughs]
Go ahead.

00:58:45.640 --> 00:58:50.000
&gt;&gt;male questioner #4:
Have you talked something about groups? I

00:58:50.000 --> 00:58:52.310
want to publish something about Salmon to
a group-

00:58:52.310 --> 00:58:53.310
&gt;&gt;Joseph Smarr:
--Groups, mhmm.

00:58:53.310 --> 00:58:54.310
&gt;&gt;male questioner #4:
-of people?

00:58:54.310 --> 00:58:56.070
&gt;&gt;John Panzer:
So the question is you want to publish a Salmon

00:58:56.070 --> 00:58:57.070
to a group?

00:58:57.070 --> 00:58:58.070
&gt;&gt;male questioner #4:
Yeah.

00:58:58.070 --> 00:58:59.070
&gt;&gt;Joseph Smarr:
Or share with a group,

00:58:59.070 --> 00:59:01.730
&gt;&gt;John Panzer:
--Ah, share with a group, right. So I don't

00:59:01.730 --> 00:59:05.730
think that anyone has gone into very great
detail on this but a little bit of thing is

00:59:05.730 --> 00:59:10.079
that your groups are first class citizens
on the web, in a way, and they should be able

00:59:10.079 --> 00:59:14.000
to have webfinger ID's which is perfectly
reasonable. Then when you mention them, or

00:59:14.000 --> 00:59:17.550
you share to them, or send to them, you can
do group-like things with them. The difference

00:59:17.550 --> 00:59:20.089
is from an email address, is that all you
can do with an email address, you can just

00:59:20.089 --> 00:59:23.329
shove things to it. With a group, you can
discover things about it, like for example,

00:59:23.329 --> 00:59:25.829
how to join the group without spamming people.

00:59:25.829 --> 00:59:27.790
&gt;&gt;Joseph Smarr:
This also works with Portable Contacts so

00:59:27.790 --> 00:59:31.290
in, if I give you my contacts I can say what
groups are part of in the Portable Contacts

00:59:31.290 --> 00:59:34.880
data so maybe my family or my friends, or
my business. And then when you prove who you

00:59:34.880 --> 00:59:38.170
are, we can check and actually see are you
in the family group. So, you can set policies

00:59:38.170 --> 00:59:41.863
that say only let people share this with me
if people they're in the family or only share

00:59:41.863 --> 00:59:44.440
it out to people who I've tagged as family
on a different network. Things like that,

00:59:44.440 --> 00:59:47.720
so it's pretty good to compose. Salmon for
you. Yes sir.

00:59:47.720 --> 00:59:52.920
&gt;&gt;male questioner #5:
Another question is for a use case for Salmon,

00:59:52.920 --> 00:59:58.130
one thing that you mentioned is basically
collecting all the comments that you make

00:59:58.130 --> 01:00:03.740
on the web, trying to, keeping ownership of
that repository of comments that you make.

01:00:03.740 --> 01:00:04.740
&gt;&gt;Joseph Smarr:
Yep.

01:00:04.740 --> 01:00:05.900
&gt;&gt;male questioner #5:
Could you explain how you would go about doing

01:00:05.900 --> 01:00:06.900
that?

01:00:06.900 --> 01:00:07.900
&gt;&gt;John Panzer:
Yeah.

01:00:07.900 --> 01:00:08.900
&gt;&gt;Joseph Smarr:
You want to take that one?

01:00:08.900 --> 01:00:10.270
&gt;&gt;John Panzer:
Okay, sure. So this has been talked about

01:00:10.270 --> 01:00:14.109
a little bit, it hasn't been fully spec’d
out, but the idea is that you have the same

01:00:14.109 --> 01:00:19.970
sort of endpoint that you do for mentions.
So, instead of someone mentioning you, you’re

01:00:19.970 --> 01:00:24.520
doing, you’re having activity on the web
and it gets posted back to you at whatever

01:00:24.520 --> 01:00:31.560
endpoint you've published in your webfinger
information. And it's signed so it's, it's

01:00:31.560 --> 01:00:36.080
spam resistant. And that way it doesn't matter
what site you are on, you can get a carbon

01:00:36.080 --> 01:00:38.619
copy of all your activities. And you can store
it, you can just store it on your hard drive

01:00:38.619 --> 01:00:41.080
if you want to. Which is kind of cool and
useful because you have searchability and

01:00:41.080 --> 01:00:43.000
history of what you are doing.

01:00:43.000 --> 01:00:46.240
&gt;&gt;Joseph Smarr:
Yeah, you could think of the author of the

01:00:46.240 --> 01:00:49.599
comment as sort of automatically mentioning
themselves right?

01:00:49.599 --> 01:00:50.599
&gt;&gt;male questioner #5:
Right...

01:00:50.599 --> 01:00:52.180
&gt;&gt;Joseph Smarr:
And actually if you login with your OpenID,

01:00:52.180 --> 01:00:55.900
your endpoint is discoverable, that can just
work automatically. So, I've logged in with

01:00:55.900 --> 01:00:59.250
my OpenID, you know who I am, you know my
public key, and every time I comment you can

01:00:59.250 --> 01:01:00.550
post back to that. So it's actually a very
powerful combination.

01:01:00.550 --> 01:01:02.540
&gt;&gt;male questioner #5:
So it's really depends on each, the service

01:01:02.540 --> 01:01:05.190
that you use, them doing that for you.

01:01:05.190 --> 01:01:06.200
&gt;&gt;John Panzer:
They

01:01:06.200 --> 01:01:07.210
&gt;&gt;Joseph Smarr:
--Right.

01:01:07.210 --> 01:01:09.670
&gt;&gt;John Panzer:
They're the ones actually generating the content,

01:01:09.670 --> 01:01:10.670
&gt;&gt;male questioner #5:
--Right.

01:01:10.670 --> 01:01:11.670
&gt;&gt;John Panzer:
The activities,

01:01:11.670 --> 01:01:12.670
&gt;&gt;Joseph Smarr:
--Right.

01:01:12.670 --> 01:01:14.839
&gt;&gt;John Panzer:
On your behalf and so they have to be kind

01:01:14.839 --> 01:01:15.839
of the ones to submit it for signing...

01:01:15.839 --> 01:01:16.839
&gt;&gt;Joseph Smarr:
--Although, there have been people, you know,

01:01:16.839 --> 01:01:19.540
lots of sites run, things like discussed or
intensedebate, you can imagine if they added

01:01:19.540 --> 01:01:22.330
it would work for lots of sites. There are
even browser plugins and a number of co-comment

01:01:22.330 --> 01:01:25.050
and these things that would actually see when
you are posting a comment and they would grab

01:01:25.050 --> 01:01:28.619
it and send it back up. So, maybe there are
things like that that will get you that, before

01:01:28.619 --> 01:01:30.220
even people have done it all themselves.

01:01:30.220 --> 01:01:32.310
&gt;&gt;John Panzer:
Yeah, and following "me links" can also help

01:01:32.310 --> 01:01:33.310
you find this, these end points

01:01:33.310 --> 01:01:35.079
&gt;&gt;Joseph Smarr:
All right folks we are out of time, we are

01:01:35.079 --> 01:01:37.270
out of salmon, and thank you very much for
your time and I hope that was helpful

01:01:37.270 --> 01:01:38.270
&gt;&gt;John Panzer:
--One more salmon.

01:01:38.270 --> 01:01:39.270
&gt;&gt;Joseph Smarr:
and we'll be around.

01:01:39.270 --> 01:01:40.270
[audience clapping]

01:01:40.270 --> 01:01:40.273
Male #6:
John!

