WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:00.914
LEE DENNISON: You ready?

00:00:00.914 --> 00:00:01.830
IAN BARBER: Hm-mm.

00:00:01.830 --> 00:00:03.080
LEE DENNISON: Go.

00:00:09.260 --> 00:00:13.680
IAN BARBER: Hello everybody,
and welcome to the second

00:00:13.680 --> 00:00:18.550
attempt at the Google+ EMEA
platform office hours.

00:00:18.550 --> 00:00:20.670
We had a bit of a technical
difficulties last time.

00:00:20.670 --> 00:00:24.130
And this time, we've attempted
to resolve those technical

00:00:24.130 --> 00:00:24.740
difficulties.

00:00:24.740 --> 00:00:26.570
Hopefully, if we have any more
problems this time, they'll be

00:00:26.570 --> 00:00:29.020
entirely new and unexpected.

00:00:29.020 --> 00:00:31.800
With me, as always,
is Lee Dennison.

00:00:31.800 --> 00:00:32.740
LEE DENNISON: Hi, everybody.

00:00:32.740 --> 00:00:35.460
IAN BARBER: And over on
Hangouts, joining us from

00:00:35.460 --> 00:00:38.290
Spain is Silvano Luciani.

00:00:38.290 --> 00:00:39.220
SILVANO LUCIANI: Hola!

00:00:39.220 --> 00:00:40.800
IAN BARBER: [CHUCKLING]

00:00:40.800 --> 00:00:41.490
OK, cool.

00:00:41.490 --> 00:00:44.040
So, today, what we're going to
talk about a little bit is

00:00:44.040 --> 00:00:46.950
DevFest, which is sort of
happening at the moment in

00:00:46.950 --> 00:00:48.350
various places around
the world.

00:00:48.350 --> 00:00:50.230
Then we're going to look at
something that came out of the

00:00:50.230 --> 00:00:53.570
London DevFest, which is a
Hangout application that

00:00:53.570 --> 00:00:56.070
Silvano built, so he's going
to take us through that.

00:00:56.070 --> 00:00:58.170
And then finally, if you've
got any questions, we'll

00:00:58.170 --> 00:00:58.660
handle that.

00:00:58.660 --> 00:01:01.240
Otherwise, we'll say goodbye
and catch up

00:01:01.240 --> 00:01:02.640
with you next time.

00:01:02.640 --> 00:01:06.430
So DevFest is our sort of
first point of call, and

00:01:06.430 --> 00:01:11.500
that's something that was kicked
off the weekend before

00:01:11.500 --> 00:01:16.110
last, in fact, in London, and
is a global event with

00:01:16.110 --> 00:01:19.020
conferences happening all over
the world just to investigate

00:01:19.020 --> 00:01:22.480
and celebrate very bits of
Google technology, and web

00:01:22.480 --> 00:01:24.690
technology, and mobile
technology, and all the kind

00:01:24.690 --> 00:01:26.280
of cool stuff that's
being built.

00:01:26.280 --> 00:01:28.770
So they're organized by the
local Google Develop Groups in

00:01:28.770 --> 00:01:32.000
different regions, and we have
the advantage of going along

00:01:32.000 --> 00:01:33.610
to the London one.

00:01:33.610 --> 00:01:35.750
But in between them,
we've had events in

00:01:35.750 --> 00:01:37.895
[INAUDIBLE], in India.

00:01:37.895 --> 00:01:41.120
We've had events in Shanghai--

00:01:41.120 --> 00:01:42.340
all over the place.

00:01:42.340 --> 00:01:43.300
It's been really amazing.

00:01:43.300 --> 00:01:45.440
And over the next few months,
we've got them coming up

00:01:45.440 --> 00:01:47.620
across the world.

00:01:47.620 --> 00:01:49.290
I think the next
one's in Kyoto,

00:01:49.290 --> 00:01:50.920
which might be tomorrow--

00:01:50.920 --> 00:01:51.830
pretty soon.

00:01:51.830 --> 00:01:54.200
And if you want any more
information on that, go to

00:01:54.200 --> 00:01:57.880
DevFest.info, where you can see
all the upcoming events.

00:01:57.880 --> 00:01:59.780
We thought it might be
interesting to show you some

00:01:59.780 --> 00:02:01.540
of the pictures from DevFest
London, so you can get a

00:02:01.540 --> 00:02:04.030
little bit of a feel for what
it was like and also to talk

00:02:04.030 --> 00:02:07.490
about what some of our favorite
sessions were there.

00:02:07.490 --> 00:02:11.066
So, Lee, I believe you've got
some photos you can stick up.

00:02:11.066 --> 00:02:11.860
LEE DENISON: Yep.

00:02:11.860 --> 00:02:13.110
IAN BARBER: So, if we--

00:03:16.870 --> 00:03:18.340
--simplifying your life, making
things a bit easier

00:03:18.340 --> 00:03:21.630
while making web apps
of all kinds.

00:03:21.630 --> 00:03:25.870
So it comes with a whole bunch
of tools already out of the

00:03:25.870 --> 00:03:27.020
box, configurable for you.

00:03:27.020 --> 00:03:30.630
It's a package manager, and it's
a build tool that can get

00:03:30.630 --> 00:03:35.020
your application ready to go
up-- very, very fantastic, and

00:03:35.020 --> 00:03:38.210
a useful set of functionality,
and a really interesting talk

00:03:38.210 --> 00:03:40.480
from [INAUDIBLE], not just about
Yeoman, but also about

00:03:40.480 --> 00:03:44.260
how you integrate a tool chain
into your process, looking at

00:03:44.260 --> 00:03:49.210
how he uses sublime text in
his editor to improve what

00:03:49.210 --> 00:03:52.310
he's doing to make it a little
bit more powerful to allow him

00:03:52.310 --> 00:03:54.780
to get more done in the same
amount of time-- very, very

00:03:54.780 --> 00:03:56.190
interesting talk and
definitely worth

00:03:56.190 --> 00:03:57.030
checking out Yeoman.io.

00:03:57.030 --> 00:03:59.393
There's some good intro
videos on the site.

00:04:06.191 --> 00:04:09.310
LEE DENISON: --talk, he was
getting tips and tricks to

00:04:09.310 --> 00:04:12.280
developers who were looking to
get the most out of Jelly

00:04:12.280 --> 00:04:15.460
Bean, and to take advantage of
the new features that have

00:04:15.460 --> 00:04:18.620
been released in Jelly Bean,
and help their applications

00:04:18.620 --> 00:04:24.070
really fit in with the look,
and feel, and the UI that's

00:04:24.070 --> 00:04:25.165
coming in Jelly Bean.

00:04:25.165 --> 00:04:27.320
So, yeah, that was a
great, great talk.

00:04:27.320 --> 00:04:29.070
IAN BARBER: Excellent.

00:04:29.070 --> 00:04:29.450
Cool.

00:04:29.450 --> 00:04:34.130
So one of the things that we
actually presented as part of

00:04:34.130 --> 00:04:39.200
DevFest was a Hangout
application that Silvano and I

00:04:39.200 --> 00:04:40.760
talked about on stage there.

00:04:40.760 --> 00:04:42.590
But if you're interested about
any of the other things that

00:04:42.590 --> 00:04:45.870
are happening at the DevFests,
or you'd like to check out

00:04:45.870 --> 00:04:49.920
some more events in London, do
check out gdg-london.com,

00:04:49.920 --> 00:04:53.470
which is the site of
the London GDG

00:04:53.470 --> 00:04:54.680
Google Developer Group.

00:04:54.680 --> 00:04:56.310
Unfortunately, the next meeting,
which is next week,

00:04:56.310 --> 00:04:57.080
is all sold out.

00:04:57.080 --> 00:04:58.050
It's about cloud technologies.

00:04:58.050 --> 00:04:59.690
But stay tuned.

00:04:59.690 --> 00:05:01.290
There'll be further things
coming up, so

00:05:01.290 --> 00:05:02.570
it's worth a look.

00:05:02.570 --> 00:05:04.630
But I think now, one of the best
things to do would be to

00:05:04.630 --> 00:05:06.470
just switch over to Silvano.

00:05:06.470 --> 00:05:08.860
And, Silvano, perhaps you could
take us through the

00:05:08.860 --> 00:05:11.567
application which you built.

00:05:11.567 --> 00:05:12.561
SILVANO LUCIANI: Yeah.

00:05:12.561 --> 00:05:13.750
Sure, Ian.

00:05:13.750 --> 00:05:16.720
So just let me quickly
introduce the

00:05:16.720 --> 00:05:18.760
story of the app.

00:05:18.760 --> 00:05:22.640
The app is called "Being Paul
Irish." Paul Irish is a

00:05:22.640 --> 00:05:26.780
developer advocate for Chrome
based in the United States,

00:05:26.780 --> 00:05:30.760
and in July, he came to London--
visiting with members

00:05:30.760 --> 00:05:33.890
based in London with
other team members

00:05:33.890 --> 00:05:35.530
coming from the US.

00:05:35.530 --> 00:05:39.210
And they did one of these Google
Developers Live events

00:05:39.210 --> 00:05:42.160
for the Chrome platform.

00:05:42.160 --> 00:05:44.710
And when they came back to that
area where we sit all

00:05:44.710 --> 00:05:46.570
together in the office,
[INAUDIBLE]

00:05:46.570 --> 00:05:49.810
was saying, oh, it could be
really cool if we could have

00:05:49.810 --> 00:05:52.925
Paul Irish up here in
all of our Hangouts.

00:05:52.925 --> 00:05:56.340
And I was there listening, and
I said, yeah, we can do that.

00:05:56.340 --> 00:06:00.160
So we took a couple of pictures
of Paul, and then I

00:06:00.160 --> 00:06:02.600
wrote this, and now I
will show it to you.

00:06:02.600 --> 00:06:03.070
MALE SPEAKER: Hey there.

00:06:03.070 --> 00:06:03.915
I'm Paul Irish.

00:06:03.915 --> 00:06:07.340
SILVANO LUCIANI: --in the
Hangout, so you can see this

00:06:07.340 --> 00:06:11.590
nice overlay of Paul's face,
and the animation of the

00:06:11.590 --> 00:06:16.730
mouth, which is more or less
going on when I'm speaking.

00:06:16.730 --> 00:06:20.050
The app is actually
a very simple app.

00:06:20.050 --> 00:06:23.980
And I'd like to show the source
code to you if we can

00:06:23.980 --> 00:06:28.730
go with the slides.

00:06:32.330 --> 00:06:36.200
This is from the slide
pack that Ian and

00:06:36.200 --> 00:06:38.300
I used at the GDG--

00:06:38.300 --> 00:06:40.020
at the DevFest London--

00:06:40.020 --> 00:06:43.630
and this is the way you can
launch the app, so you're

00:06:43.630 --> 00:06:46.240
seeing a Hangout [INAUDIBLE].

00:06:46.240 --> 00:06:48.010
It's very, very simple code.

00:06:48.010 --> 00:06:51.120
It's mostly boilerplate.

00:06:51.120 --> 00:06:54.630
And the only thing that you need
to personalize is the ID

00:06:54.630 --> 00:06:59.990
of your app that you can get
from the Google API console.

00:06:59.990 --> 00:07:01.330
If we can go to the
next slide--

00:07:07.620 --> 00:07:11.630
so this is an example of
a standard Hangout App.

00:07:11.630 --> 00:07:16.050
And when I say standard, I mean
that this is XML code.

00:07:16.050 --> 00:07:18.690
But we have published the
service, which is called the

00:07:18.690 --> 00:07:20.360
Hangout iframer.

00:07:20.360 --> 00:07:24.810
That will allow you to write
your app using your HTML, and

00:07:24.810 --> 00:07:28.955
then the Hangout iframer will
take care of grafting your

00:07:28.955 --> 00:07:33.020
code into an XML in an iframe
inside the Hangout.

00:07:33.020 --> 00:07:36.860
And you can find more about this
at hangout [INAUDIBLE]

00:07:36.860 --> 00:07:38.850
.blogspot.com.

00:07:38.850 --> 00:07:46.550
And I personally recommend to
use it because I like HTML way

00:07:46.550 --> 00:07:50.570
better than the XML code
in my [INAUDIBLE].

00:07:50.570 --> 00:08:00.530
If we go to the next, we can see
this is the beginning in

00:08:00.530 --> 00:08:02.190
the head of the code.

00:08:02.190 --> 00:08:05.150
One thing that I'm doing and
that I wanted to show with

00:08:05.150 --> 00:08:09.690
this app is initializing
Google Analytics.

00:08:09.690 --> 00:08:12.630
It's very important when you
write a Hangout app to be able

00:08:12.630 --> 00:08:14.720
to measure the engagement
that the app is

00:08:14.720 --> 00:08:16.510
generating with your user.

00:08:16.510 --> 00:08:19.130
And Google Analytics is the
most straightforward

00:08:19.130 --> 00:08:20.390
way of doing it.

00:08:20.390 --> 00:08:24.270
And you don't need anything
special when it comes to

00:08:24.270 --> 00:08:25.690
Hangout Apps.

00:08:25.690 --> 00:08:29.410
It's just another web property,
as any website, so

00:08:29.410 --> 00:08:34.070
this is the plain, standard,
boilerplate code that you can

00:08:34.070 --> 00:08:36.789
get when you create a property
on Google Analytics.

00:08:36.789 --> 00:08:39.870
And the only thing that you
will need to change, of

00:08:39.870 --> 00:08:42.490
course, is the code
for your property.

00:08:42.490 --> 00:08:48.160
And we will see later how to be
able to push events, to be

00:08:48.160 --> 00:08:51.480
able to track, for instance,
when users are performing some

00:08:51.480 --> 00:08:54.780
actions on your Hangout App.

00:08:54.780 --> 00:08:58.300
The most important part is at
the end of the code, and we

00:08:58.300 --> 00:09:02.010
include the [INAUDIBLE] for the
Hangout API and then the

00:09:02.010 --> 00:09:03.350
Hangout API itself.

00:09:18.730 --> 00:09:20.880
Next slide please.

00:09:20.880 --> 00:09:24.610
So this is all my initilization
code.

00:09:24.610 --> 00:09:30.460
It's a bunch of variables that
I use to store the frames for

00:09:30.460 --> 00:09:31.790
the animation.

00:09:31.790 --> 00:09:33.400
It's very simple.

00:09:33.400 --> 00:09:34.450
We have six frames.

00:09:34.450 --> 00:09:37.930
It's basically Paul's face,
and then Paul's face with

00:09:37.930 --> 00:09:43.140
different degrees of openness,
let's say of his mouth.

00:09:43.140 --> 00:09:46.240
Then we have a couple of
messages that we use for the

00:09:46.240 --> 00:09:48.900
button that enables
and activates the

00:09:48.900 --> 00:09:50.720
overlay on the face.

00:09:50.720 --> 00:09:53.960
And then the most important
part is at the end.

00:09:53.960 --> 00:09:57.400
Before we start doing anything
inside a Hangout App, we need

00:09:57.400 --> 00:10:01.870
first to be sure that we
have loaded the API.

00:10:01.870 --> 00:10:03.820
And for this, we used
the [INAUDIBLE]

00:10:03.820 --> 00:10:07.650
API ready event, and we add
the listnet, which in this

00:10:07.650 --> 00:10:11.330
case is the function initApp.

00:10:11.330 --> 00:10:13.561
If we can move to the
next slide, please.

00:10:19.920 --> 00:10:21.540
This is initApp.

00:10:21.540 --> 00:10:24.790
And once again, all I'm doing
is just organizing my logic

00:10:24.790 --> 00:10:28.050
for reverting some of the
things like getting the

00:10:28.050 --> 00:10:31.700
participant ID for the local
participant, which we will use

00:10:31.700 --> 00:10:34.550
later to get the changes in
the volume for the local

00:10:34.550 --> 00:10:36.040
participant.

00:10:36.040 --> 00:10:40.640
And then the unit functions for
the overlays, the sounds,

00:10:40.640 --> 00:10:43.375
and the events that we add
to the user interface.

00:10:46.410 --> 00:10:47.660
Next slide--

00:10:50.210 --> 00:10:55.760
now, unit overlays is the most
important function in this

00:10:55.760 --> 00:10:59.145
application where the main part
is played by the overlay

00:10:59.145 --> 00:11:04.480
of Paul Irish's face over the
local participant's face.

00:11:04.480 --> 00:11:08.070
As you might know if you've used
already the API, first,

00:11:08.070 --> 00:11:13.640
you need to create an image of
sorts from a PNG file on http,

00:11:13.640 --> 00:11:14.700
preferably.

00:11:14.700 --> 00:11:18.540
And then once we have the image
results on top of the

00:11:18.540 --> 00:11:23.070
image results, we can create the
overlay, specifying where

00:11:23.070 --> 00:11:25.610
we want the overlay to be put.

00:11:25.610 --> 00:11:29.400
In this case, it's the nose
[INAUDIBLE], because it's more

00:11:29.400 --> 00:11:34.070
or less in the center of the
face so that our face overlay

00:11:34.070 --> 00:11:37.090
will be centered all
over the face.

00:11:37.090 --> 00:11:41.240
One thing that I wanted to show
is one edition from the

00:11:41.240 --> 00:11:43.140
latest version of the API--

00:11:43.140 --> 00:11:45.140
v1.2.

00:11:45.140 --> 00:11:50.780
And this effect that we can
now manage the resources.

00:11:50.780 --> 00:11:57.140
So we can decide to perform
some action just when the

00:11:57.140 --> 00:11:59.790
state of the image
results change.

00:11:59.790 --> 00:12:02.710
And we can use this also for
sounds and overlays.

00:12:02.710 --> 00:12:09.120
So in this case, what we do is
we check, and when an image is

00:12:09.120 --> 00:12:11.830
actually loaded, we call the
image loaded function.

00:12:11.830 --> 00:12:15.650
As we will see later, what this
does is making sure that

00:12:15.650 --> 00:12:20.630
the button that enables to show
the overlay is activated

00:12:20.630 --> 00:12:24.285
only when we have already loaded
all the images that are

00:12:24.285 --> 00:12:26.620
the frames for our animation.

00:12:26.620 --> 00:12:31.490
In this case, I'm not doing
anything particularly useful

00:12:31.490 --> 00:12:33.740
in the case that the image
is not loaded.

00:12:33.740 --> 00:12:37.070
I'm just writing a message
to the console.

00:12:37.070 --> 00:12:40.390
But, of course, you could try,
for instance, to reload the

00:12:40.390 --> 00:12:44.370
image resource if there's been
some problem, or send more

00:12:44.370 --> 00:12:47.552
meaningful messages
to the user.

00:12:47.552 --> 00:12:51.680
In initsounds, it shows
another edition

00:12:51.680 --> 00:12:54.480
of v1.2 of the API.

00:12:54.480 --> 00:12:57.780
And in this case, initsounds
when I show the

00:12:57.780 --> 00:12:59.416
face of Paul Irish.

00:12:59.416 --> 00:13:04.470
That's also a salute from Paul
that I read of one of his

00:13:04.470 --> 00:13:05.940
very, very interesting video.

00:13:05.940 --> 00:13:07.470
It is the one on [INAUDIBLE]

00:13:07.470 --> 00:13:12.280
from the [INAUDIBLE], that I
strongly recommend to watch.

00:13:12.280 --> 00:13:16.410
And the addition from the v1.2
is the possibility of great

00:13:16.410 --> 00:13:19.730
sounds which are global, meaning
that they are not

00:13:19.730 --> 00:13:22.790
played only on the local
instance of the app, but they

00:13:22.790 --> 00:13:26.480
are, let's say, broadcasted, so
every instance of the app

00:13:26.480 --> 00:13:29.010
will play the sound.

00:13:29.010 --> 00:13:32.420
And in this case, as you see,
we used the [INAUDIBLE]

00:13:32.420 --> 00:13:35.800
parameter set [INAUDIBLE], and
this means that the sound will

00:13:35.800 --> 00:13:39.830
be global, and everyone will
be saluted by Paul in the

00:13:39.830 --> 00:13:41.350
moment where we apply
the overlay.

00:13:44.080 --> 00:13:45.330
Next slide, please.

00:13:51.370 --> 00:13:56.610
So this is the function
that actually

00:13:56.610 --> 00:13:59.290
activates the overlay.

00:13:59.290 --> 00:14:00.360
It's very simple.

00:14:00.360 --> 00:14:06.590
So we add or remove a listener
to the volume change event.

00:14:06.590 --> 00:14:10.690
With the Hangouts API, we can
get updates on the volume of

00:14:10.690 --> 00:14:12.200
each participant.

00:14:12.200 --> 00:14:15.580
In this case, the volume is the
input from the microphone.

00:14:15.580 --> 00:14:19.640
So what we do is if the
overlay's active, we have the

00:14:19.640 --> 00:14:22.410
[INAUDIBLE] that will animate
the mouth when the volume

00:14:22.410 --> 00:14:25.180
changes, and otherwise, we
remove the [INAUDIBLE]

00:14:25.180 --> 00:14:27.480
so that there's no animation.

00:14:27.480 --> 00:14:30.100
One important thing
is at the end.

00:14:30.100 --> 00:14:35.830
There you can see how it is to
track events with Analytics.

00:14:35.830 --> 00:14:39.205
It's just calling the push
function with track event

00:14:39.205 --> 00:14:42.900
parameter, and then you can
define your own event.

00:14:42.900 --> 00:14:45.770
In this case, our label
is [INAUDIBLE]--

00:14:45.770 --> 00:14:48.290
is the way I call this event.

00:14:48.290 --> 00:14:50.625
And I'm tracking with
event [INAUDIBLE]

00:14:50.625 --> 00:14:54.100
if people feel like Paul, or if
they don't feel like Paul,

00:14:54.100 --> 00:14:57.830
meaning that I will see how many
times they click to show

00:14:57.830 --> 00:15:01.140
or write the overlay.

00:15:01.140 --> 00:15:04.540
And as you can see, it's very
simple, and you can use it for

00:15:04.540 --> 00:15:07.910
all kinds of interactions and
actions that the user can

00:15:07.910 --> 00:15:10.040
perform on your app.

00:15:10.040 --> 00:15:13.640
And this is the function that
animates the mouth.

00:15:13.640 --> 00:15:16.030
Once again, it's quite easy.

00:15:16.030 --> 00:15:18.870
So what we do, we check the
volumes of our local

00:15:18.870 --> 00:15:20.420
participant.

00:15:20.420 --> 00:15:24.090
To do so, we need the
participant ID because on this

00:15:24.090 --> 00:15:28.530
event, the parameter for this
event is an array [INAUDIBLE]

00:15:28.530 --> 00:15:30.700
by participant ID.

00:15:30.700 --> 00:15:35.350
What we do, if the volume
is more than zero,

00:15:35.350 --> 00:15:36.820
we animate the mouth.

00:15:36.820 --> 00:15:40.885
Otherwise, we just show the
frame with the mouth closed,

00:15:40.885 --> 00:15:43.050
meaning that we are
not speaking.

00:15:51.479 --> 00:15:52.760
And that's all.

00:15:52.760 --> 00:15:54.520
IAN BARBER: Cool.

00:15:54.520 --> 00:15:55.020
All right, Silvano.

00:15:55.020 --> 00:15:57.050
Thanks.

00:15:57.050 --> 00:16:02.100
So that just goes to show you,
really, how simple it is to

00:16:02.100 --> 00:16:06.570
put together a app
using Hangouts.

00:16:06.570 --> 00:16:09.970
It's really something that you
can do very, very easily--

00:16:09.970 --> 00:16:11.220
very, very quickly.

00:16:11.220 --> 00:16:15.070
And it's not something that
really requires a great deal

00:16:15.070 --> 00:16:17.230
of investment of time
to get going.

00:16:17.230 --> 00:16:18.890
That's one of the nice things--
you can do it,

00:16:18.890 --> 00:16:22.220
basically, as a joke, which is
what the results of the Paul

00:16:22.220 --> 00:16:23.430
Irish app is.

00:16:23.430 --> 00:16:24.960
The other thing that's really
important to remember with

00:16:24.960 --> 00:16:27.750
Hangouts is that kind of app,
with doing something like a

00:16:27.750 --> 00:16:32.040
facial overlay or something on
the screen works, but it's not

00:16:32.040 --> 00:16:33.340
the only kind of app
you can build.

00:16:33.340 --> 00:16:37.540
You also have the flexibility to
put a A-frame into the main

00:16:37.540 --> 00:16:39.010
section of the Hangout
app and build

00:16:39.010 --> 00:16:40.330
whatever you want to there.

00:16:40.330 --> 00:16:42.450
So that last slide, you just
saw a little bit of at the

00:16:42.450 --> 00:16:44.800
end, that was from a game called
WarLight, which is a

00:16:44.800 --> 00:16:48.310
really fun kind of risk style
game that you can play via

00:16:48.310 --> 00:16:49.600
Hangouts with your friends.

00:16:49.600 --> 00:16:52.020
And you can build anything
like that into your

00:16:52.020 --> 00:16:52.680
application.

00:16:52.680 --> 00:16:54.790
So you can go and take an
application which exists

00:16:54.790 --> 00:16:57.420
somewhere else and add video
chat to it with a Hangout, or

00:16:57.420 --> 00:17:00.630
you can go and build some crazy
new experience or new

00:17:00.630 --> 00:17:02.610
kind of game that works
within the Hangout.

00:17:02.610 --> 00:17:05.109
So it's very, very flexible
and definitely something

00:17:05.109 --> 00:17:06.780
that's worth looking into.

00:17:06.780 --> 00:17:10.400
If you're interested in doing
more with Hangouts, or you'd

00:17:10.400 --> 00:17:12.195
like to try something out, if
you go to developers.googl

00:17:12.195 --> 00:17:14.510
e.com/+/hangouts--

00:17:14.510 --> 00:17:16.460
that's the plus sign--

00:17:16.460 --> 00:17:19.930
then you'll find sample apps,
you'll find API documentation,

00:17:19.930 --> 00:17:23.230
you'll find lots and lots of
stuff to help you get started.

00:17:23.230 --> 00:17:26.540
And we'll put a link to that
in the [INAUDIBLE]

00:17:26.540 --> 00:17:28.210
about the show.

00:17:28.210 --> 00:17:30.940
So that was the kind of Google+
presentation at

00:17:30.940 --> 00:17:32.210
DevFest London.

00:17:32.210 --> 00:17:35.520
I hope it was interesting
for everyone.

00:17:35.520 --> 00:17:39.560
And the rest of the day on
Friday actually was filled up

00:17:39.560 --> 00:17:42.790
with a couple more
presentations, and then we

00:17:42.790 --> 00:17:45.260
went down and did some
enlightening talks with people

00:17:45.260 --> 00:17:47.810
like Ilmari Heikkinen, gave a
really, really great talk

00:17:47.810 --> 00:17:49.940
about doing images--

00:17:49.940 --> 00:17:51.970
multiple resolution images--

00:17:51.970 --> 00:17:55.150
and a few other people talking
about some things that made a

00:17:55.150 --> 00:17:56.340
difference to them or
that they wanted

00:17:56.340 --> 00:17:57.430
to share with people.

00:17:57.430 --> 00:18:00.120
And then on a Saturday, we
actually had a hackathon.

00:18:00.120 --> 00:18:03.110
So the hackathon was a really
interesting day full of

00:18:03.110 --> 00:18:05.460
coding, building projects based
on all these different

00:18:05.460 --> 00:18:08.720
technologies, and people came
up with games, with

00:18:08.720 --> 00:18:12.820
applications for doing video
streaming, via get user media

00:18:12.820 --> 00:18:13.580
in the browser--

00:18:13.580 --> 00:18:15.870
with all sorts of different
things, which made it just a

00:18:15.870 --> 00:18:18.330
really, really great day to be
around, so I would definitely

00:18:18.330 --> 00:18:21.700
say if there is a DevFest near
you, get along to it.

00:18:21.700 --> 00:18:24.270
Check it out, and see if there's
anywhere you want to

00:18:24.270 --> 00:18:27.920
speak or anywhere you just
want to go along to.

00:18:27.920 --> 00:18:35.520
So I think that's probably about
it from me, unless we've

00:18:35.520 --> 00:18:36.235
got any questions.

00:18:36.235 --> 00:18:38.780
LEE DENNISON: I just had a quick
look, and I've not seen

00:18:38.780 --> 00:18:39.950
any questions on the
[INAUDIBLE], so I

00:18:39.950 --> 00:18:42.400
think that's it.

00:18:42.400 --> 00:18:43.550
IAN BARBER: Excellent.

00:18:43.550 --> 00:18:46.850
Well, apologies again to
everyone that turned up last

00:18:46.850 --> 00:18:49.520
week and suffered through our
technical difficulties, but

00:18:49.520 --> 00:18:51.160
hopefully, we've gotten
it sorted out.

00:18:51.160 --> 00:18:53.890
It looks like this
week has gone OK.

00:18:53.890 --> 00:18:57.470
Particular apologies to the
amazing Gavin [INAUDIBLE], who

00:18:57.470 --> 00:18:59.300
we brought along last week
and then completely

00:18:59.300 --> 00:19:00.370
failed to get on air.

00:19:00.370 --> 00:19:03.320
So, Gavin, we will get back
with you in the future.

00:19:03.320 --> 00:19:06.420
We'd love to have you on now
that we have some idea of what

00:19:06.420 --> 00:19:07.550
we're doing.

00:19:07.550 --> 00:19:09.905
So, thank you, and that's
it from me.

00:19:09.905 --> 00:19:10.890
LEE DENNISON: And that's
it from me.

00:19:10.890 --> 00:19:11.720
IAN BARBER: All right.

00:19:11.720 --> 00:19:13.030
See you later guys.

00:19:13.030 --> 00:19:14.280
SILVANO LUCIANI: Bye.

