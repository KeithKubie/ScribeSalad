WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
Now we've got our new successor function. We know how to deal with costs.

00:00:04.000 --> 00:00:06.000
Now it's time to put it all together.

00:00:06.000 --> 00:00:10.000
It's a little bit tricky, so I'm not going to ask you to do this as a quiz.

00:00:10.000 --> 00:00:13.000
If you want to you can pause the video now and do it on your own.

00:00:13.000 --> 00:00:15.000
You're certainly welcome to give it a try.

00:00:15.000 --> 00:00:17.000
I'm going to go ahead and show it to you.

00:00:17.000 --> 00:00:20.000
Okay, here it is. The tricky part is just keeping track

00:00:20.000 --> 00:00:23.000
of the costs and putting them in the right location.

00:00:23.000 --> 00:00:27.000
Just like before we're popping paths off the frontier.

00:00:27.000 --> 00:00:30.000
We're checking to see if we hit a goal.

00:00:30.000 --> 00:00:33.000
We're keeping track of states that we've already explored.

00:00:33.000 --> 00:00:35.000
But now we're doing something new.

00:00:35.000 --> 00:00:39.000
We're computing the cost of the path that we just popped off,

00:00:39.000 --> 00:00:41.000
and that's just pulling the cost out,

00:00:41.000 --> 00:00:45.000
because we've already computed it and stored it in the final action.

00:00:45.000 --> 00:00:48.000
Then for each of the successors, we figure out the total cost

00:00:48.000 --> 00:00:51.000
is the cost of the path that we already computed

00:00:51.000 --> 00:00:56.000
so far plus the bride cost of the individual action.

00:00:56.000 --> 00:00:59.000
Total cost so far plus cost for one more action,

00:00:59.000 --> 00:01:01.000
and then we just throw that into the path.

00:01:01.000 --> 00:01:06.000
The new path is equal to the old path plus the action total cost tuple

00:01:06.000 --> 00:01:10.000
plus the state that we end up with. Add that to the frontier and we're done.

00:01:10.000 --> 00:01:14.000
I just define this simple one-line function here.

00:01:14.000 --> 00:01:19.000
The final_state of a path is the last element of the path. I use that there.

00:01:19.000 --> 00:01:22.000
Here is adding to the frontier.

00:01:22.000 --> 00:01:25.000
Now, it could just be throwing it on there the way we did before,

00:01:25.000 --> 00:01:27.000
but there's a tricky part here.

00:01:27.000 --> 00:01:31.000
The complication that I want to deal with here that we haven't dealt with before

00:01:31.000 --> 00:01:36.000
was there may be two different paths that end up in the same state.

00:01:36.000 --> 00:01:38.000
If that's the case, we want to choose the best one.

00:01:38.000 --> 00:01:42.000
We don't want to get to the state from a path that's more expensive.

00:01:42.000 --> 00:01:48.000
We look at see--is there a path that gets to the state that is already on the frontier?

00:01:48.000 --> 09:59:59.000
If there is, then check to see which one has a better path cost and use that.

