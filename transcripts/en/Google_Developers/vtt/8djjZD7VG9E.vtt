WEBVTT
Kind: captions
Language: en

00:00:05.247 --> 00:00:08.680
JJ BEHRENS: The YouTube API
team's hanging out on

00:00:08.680 --> 00:00:09.765
[INAUDIBLE].

00:00:09.765 --> 00:00:11.180
I'm JJ Behrens.

00:00:11.180 --> 00:00:15.070
This is Jarek Wilkiewicz, who
is so connected to email, he

00:00:15.070 --> 00:00:17.970
is currently replying to emails
that I sent while I was

00:00:17.970 --> 00:00:18.740
driving over.

00:00:18.740 --> 00:00:20.920
JAREK WILKIEWICZ: My mobile
is in my pocket.

00:00:20.920 --> 00:00:22.940
JJ BEHRENS: You don't want to
know how he controls the

00:00:22.940 --> 00:00:23.940
mobile in his pocket.

00:00:23.940 --> 00:00:24.690
JAREK WILKIEWICZ: With
my thoughts.

00:00:24.690 --> 00:00:27.260
JJ BEHRENS: It's
pretty amazing.

00:00:27.260 --> 00:00:31.350
In the red there is
Jeffrey Posnick.

00:00:31.350 --> 00:00:35.400
Jeffrey Posnick, after having
mastered client-side

00:00:35.400 --> 00:00:38.390
programming and server-side
programming, is currently

00:00:38.390 --> 00:00:41.235
designing new sides to
programming, when it comes to

00:00:41.235 --> 00:00:43.790
structured web development.

00:00:43.790 --> 00:00:48.920
And then the two people there.

00:00:48.920 --> 00:00:53.920
There's Dror Shimshowitz
and A.J. Crane.

00:00:53.920 --> 00:00:57.090
And they're going to start us
off with the first thing we're

00:00:57.090 --> 00:00:58.950
going to be talking about.

00:00:58.950 --> 00:01:01.275
And since we have two visitors,
let me go ahead and

00:01:01.275 --> 00:01:02.525
ask you guys to introduce
yourselves.

00:01:04.940 --> 00:01:05.900
ALEXANDRE PASSANT: Yeah, sure.

00:01:05.900 --> 00:01:07.275
JJ BEHRENS: Yeah, go ahead.

00:01:07.275 --> 00:01:08.090
ALEXANDRE PASSANT:
Should I start?

00:01:08.090 --> 00:01:08.300
OK.

00:01:08.300 --> 00:01:09.480
Hi.

00:01:09.480 --> 00:01:10.320
My name's Alex.

00:01:10.320 --> 00:01:13.170
I'm the founder of a company
called seevl.

00:01:13.170 --> 00:01:16.930
We built a YouTube extension
for Chrome that has music

00:01:16.930 --> 00:01:18.160
[INAUDIBLE].

00:01:18.160 --> 00:01:21.140
So I'd like to hear what
you're working

00:01:21.140 --> 00:01:23.080
in the files extension.

00:01:23.080 --> 00:01:27.290
I think this is an extension
of the Google [INAUDIBLE]

00:01:27.290 --> 00:01:29.520
in Paris that [INAUDIBLE]

00:01:29.520 --> 00:01:32.821
there, so I'm working on that
right now for the [INAUDIBLE].

00:01:32.821 --> 00:01:33.850
JJ BEHRENS: Great.

00:01:33.850 --> 00:01:36.250
So you saw the presentation
in Paris.

00:01:36.250 --> 00:01:37.170
You and I were there.

00:01:37.170 --> 00:01:37.630
JAREK WILKIEWICZ: Yeah.

00:01:37.630 --> 00:01:38.090
JJ BEHRENS: Awesome.

00:01:38.090 --> 00:01:38.550
JAREK WILKIEWICZ: [INAUDIBLE]

00:01:38.550 --> 00:01:39.750
I think I know what we're
talking about.

00:01:39.750 --> 00:01:41.280
JJ BEHRENS: Right on.

00:01:41.280 --> 00:01:42.920
And another visitor we have.

00:01:42.920 --> 00:01:44.030
BRETT GILES: Hello there.

00:01:44.030 --> 00:01:46.625
And my name's Brett Giles.

00:01:46.625 --> 00:01:48.870
I'm kind of new to all
this Hangout stuff.

00:01:48.870 --> 00:01:51.150
This is my first one.

00:01:51.150 --> 00:01:55.350
So I thought I'd just pop in
and have a look around.

00:01:55.350 --> 00:01:57.210
JJ BEHRENS: Say your
name again.

00:01:57.210 --> 00:01:58.075
BRETT GILES: Brett Giles.

00:01:58.075 --> 00:01:59.720
JJ BEHRENS: Brett Giles,
nice to meet you.

00:01:59.720 --> 00:02:01.566
Thank you for coming.

00:02:01.566 --> 00:02:02.940
Turn up a couple of them.

00:02:02.940 --> 00:02:04.176
My hearing is terrible.

00:02:04.176 --> 00:02:05.510
MALE SPEAKER: You want
to turn it up?

00:02:05.510 --> 00:02:07.873
JJ BEHRENS: And then turn it.

00:02:07.873 --> 00:02:09.139
There we go.

00:02:09.139 --> 00:02:15.120
So the first thing we wanted to
talk about is Dror and A.J.

00:02:15.120 --> 00:02:18.510
Wanted to talk about their
session that they wanted to do

00:02:18.510 --> 00:02:21.440
a Google I/O. You guys want to
tell us about what you're

00:02:21.440 --> 00:02:22.520
working on?

00:02:22.520 --> 00:02:25.135
DROR SCHIMSHOWITZ: Yeah,
so Google I/O is

00:02:25.135 --> 00:02:26.870
at the end of June.

00:02:26.870 --> 00:02:29.380
Hopefully, a lot of
folks can make it.

00:02:29.380 --> 00:02:34.420
What we wanted to do was
introduce and catch people up

00:02:34.420 --> 00:02:37.570
on all the big changes that
have been happening to the

00:02:37.570 --> 00:02:38.045
YouTube site.

00:02:38.045 --> 00:02:41.750
We've been busy redesigning the
site all around channels

00:02:41.750 --> 00:02:45.790
and really trying to promote
YouTube as the platform for

00:02:45.790 --> 00:02:50.310
the next great set
of channels.

00:02:50.310 --> 00:02:53.990
Now a lot of developers and
startups may not naturally

00:02:53.990 --> 00:02:57.020
think that they should have
their own TV channel, their

00:02:57.020 --> 00:02:58.640
own YouTube channel.

00:02:58.640 --> 00:03:01.490
But there are a lot of great
opportunities to leverage this

00:03:01.490 --> 00:03:07.160
platform to help developers and
startups with software,

00:03:07.160 --> 00:03:09.630
hardware, or other kind of
products that they're

00:03:09.630 --> 00:03:11.120
developing.

00:03:11.120 --> 00:03:17.360
So what we wanted to do was
showcase how some startups and

00:03:17.360 --> 00:03:21.680
developers are already
successfully using YouTube.

00:03:21.680 --> 00:03:24.630
For example, there are a bunch
of startups who are doing

00:03:24.630 --> 00:03:28.780
crowd funding, looking to secure
funding on Kickstarter

00:03:28.780 --> 00:03:33.170
and other platforms. And
projects that have added

00:03:33.170 --> 00:03:39.490
YouTube videos have had an
additional way to spread the

00:03:39.490 --> 00:03:42.980
word about their crowd
funding efforts.

00:03:42.980 --> 00:03:46.490
Also, a lot of startups can
promote their products and

00:03:46.490 --> 00:03:48.550
start to advertise on YouTube.

00:03:48.550 --> 00:03:52.260
And of course, we have paid
advertising products, but

00:03:52.260 --> 00:03:54.665
there are also a lot of free
ways of getting the word out

00:03:54.665 --> 00:03:58.310
on YouTube by uploading videos
and creating a channel that's

00:03:58.310 --> 00:04:02.660
all about your company and
what you're trying to do.

00:04:02.660 --> 00:04:06.280
There are a couple other ways
that we're thinking startups

00:04:06.280 --> 00:04:07.700
and developers can
use YouTube.

00:04:07.700 --> 00:04:11.800
So we're seeing some companies
use the platform as a way to

00:04:11.800 --> 00:04:14.645
educate users how to
use your product.

00:04:14.645 --> 00:04:19.779
So doing screenshots and product
demos with Hangouts on

00:04:19.779 --> 00:04:21.839
air, like what we're
doing right now.

00:04:21.839 --> 00:04:26.570
They can potentially provide
office hours for users who

00:04:26.570 --> 00:04:29.690
have questions about how
to use the product.

00:04:29.690 --> 00:04:33.060
Or even bring together users
who can educate each other

00:04:33.060 --> 00:04:36.510
about how to best use
their offering.

00:04:36.510 --> 00:04:41.010
And then the final one is we see
YouTube as potentially the

00:04:41.010 --> 00:04:43.890
world's largest focus group.

00:04:43.890 --> 00:04:48.590
So a lot of people may be
talking about your product,

00:04:48.590 --> 00:04:51.000
showing the world
how to use it.

00:04:51.000 --> 00:04:53.070
For example, every time there's
a new gadget out,

00:04:53.070 --> 00:04:57.370
there are videos on YouTube
of people unwrapping it,

00:04:57.370 --> 00:05:00.770
explaining how they're using the
product, and just showing

00:05:00.770 --> 00:05:02.290
what they're doing with it.

00:05:02.290 --> 00:05:06.330
And this is a great opportunity
for developers to

00:05:06.330 --> 00:05:08.410
see what people are doing
with their products.

00:05:08.410 --> 00:05:13.050
But also to pull that content
into their own channel and

00:05:13.050 --> 00:05:18.460
have all this user generated
content created out there,

00:05:18.460 --> 00:05:20.000
free of charge.

00:05:20.000 --> 00:05:25.160
Pull that into your presence on
YouTube and just show the

00:05:25.160 --> 00:05:31.210
world how people are using your
product without you even

00:05:31.210 --> 00:05:33.470
have asked them to do it.

00:05:33.470 --> 00:05:36.080
So that's kind of a high
level overview.

00:05:36.080 --> 00:05:39.330
But if there are other topics
or things that would be of

00:05:39.330 --> 00:05:43.250
interest, then we would love to
hear from developers about

00:05:43.250 --> 00:05:46.600
how we can further customize
our talk.

00:05:46.600 --> 00:05:51.140
We're just getting started on
it, so it's not too late to

00:05:51.140 --> 00:05:52.750
ask us to include things.

00:05:52.750 --> 00:05:54.430
JJ BEHRENS: Great, Dror.

00:05:54.430 --> 00:05:56.850
Do you want to tell us a little
bit more about you

00:05:56.850 --> 00:05:59.390
expected audience?

00:05:59.390 --> 00:06:01.540
What type of person do you
expect to show up, and are

00:06:01.540 --> 00:06:04.520
there any prerequisites?

00:06:04.520 --> 00:06:09.160
DROR SCHIMSHOWITZ: So who we
expect to show up are startups

00:06:09.160 --> 00:06:14.050
and developers who are thinking
beyond just coding

00:06:14.050 --> 00:06:14.460
their product.

00:06:14.460 --> 00:06:18.020
But they're thinking about how
to introduce their product to

00:06:18.020 --> 00:06:20.690
the world, how to get
users, how to get

00:06:20.690 --> 00:06:24.210
feedback from users.

00:06:24.210 --> 00:06:29.170
And more of what we call the
cross functional aspects of

00:06:29.170 --> 00:06:31.730
building a business.

00:06:31.730 --> 00:06:36.000
What we're not going to dive
deep on in this talk is how to

00:06:36.000 --> 00:06:37.600
integrate with the
YouTube API.

00:06:37.600 --> 00:06:39.710
So it's not going to
be about that.

00:06:39.710 --> 00:06:44.310
There are other sessions that
Jar, I think, is leading that

00:06:44.310 --> 00:06:46.650
will talk more about that.

00:06:46.650 --> 00:06:49.900
So it's folks at startups or
developers who have their own

00:06:49.900 --> 00:06:55.540
startups, who want to learn
how to leverage YouTube to

00:06:55.540 --> 00:06:57.120
connect with the world
through video.

00:06:59.670 --> 00:07:02.180
In terms of prerequisites,
none really.

00:07:02.180 --> 00:07:05.540
Although to the extent that
folks are familiar with the

00:07:05.540 --> 00:07:08.810
YouTube site and have played
around with it, it'll make the

00:07:08.810 --> 00:07:11.170
talk even more informative.

00:07:11.170 --> 00:07:12.952
But it's not a requirement.

00:07:12.952 --> 00:07:14.370
JJ BEHRENS: Great.

00:07:14.370 --> 00:07:16.250
Wait a sec, I think I'm
getting a phone call.

00:07:21.430 --> 00:07:23.770
Apparently, Jarek just finished
with all of this

00:07:23.770 --> 00:07:27.530
email and is currently writing
his Google I/O talks.

00:07:27.530 --> 00:07:29.250
Crap.

00:07:29.250 --> 00:07:31.480
Jeffrey, I think you're
kind of behind.

00:07:31.480 --> 00:07:32.730
JEFFREY POSNICK: I
know I'm behind.

00:07:36.410 --> 00:07:38.380
JJ BEHRENS: The next Google
I/O talk we wanted to talk

00:07:38.380 --> 00:07:40.430
about was getting direct
feedback from

00:07:40.430 --> 00:07:41.550
your YouTube community.

00:07:41.550 --> 00:07:42.730
And I might have
lost you, Dror.

00:07:42.730 --> 00:07:44.996
Did you already cover that?

00:07:44.996 --> 00:07:47.801
I didn't know if you covered
both of those or not?

00:07:47.801 --> 00:07:48.813
JEFFREY POSNICK: No, I
think I was going to

00:07:48.813 --> 00:07:49.670
talk about that, JJ.

00:07:49.670 --> 00:07:50.460
JJ BEHRENS: Oh, sorry.

00:07:50.460 --> 00:07:52.070
Thanks, Jeffrey.

00:07:52.070 --> 00:07:52.820
JEFFREY POSNICK: Yeah,
absolutely.

00:07:52.820 --> 00:07:54.390
No problem.

00:07:54.390 --> 00:07:56.900
So yeah, this is one of the
talks I should be putting

00:07:56.900 --> 00:08:01.240
together right now, but I'm
happy to describe it instead.

00:08:01.240 --> 00:08:08.740
So I also do not want to veer
into any sort of unannounced,

00:08:08.740 --> 00:08:11.350
unreleased technologies, though
it might be showing up.

00:08:11.350 --> 00:08:11.910
JJ BEHRENS: Wait a second.

00:08:11.910 --> 00:08:14.460
I thought the whole point of
doing Hangouts on air was to

00:08:14.460 --> 00:08:15.570
subtly leak things.

00:08:15.570 --> 00:08:15.860
I mean--

00:08:15.860 --> 00:08:16.530
JEFFREY POSNICK: I know.

00:08:16.530 --> 00:08:17.915
JJ BEHRENS: That's why
they're waiting here.

00:08:17.915 --> 00:08:21.570
JEFFREY POSNICK: That was
kind of a metaleak.

00:08:21.570 --> 00:08:23.880
Let me just make it known that
this is one of the sessions

00:08:23.880 --> 00:08:28.310
that you're going to want to
check out either live or after

00:08:28.310 --> 00:08:30.360
the fact, where I'll
be posting videos

00:08:30.360 --> 00:08:31.130
for all these sessions.

00:08:31.130 --> 00:08:34.700
So people who can't attend
Google I/O will be able to

00:08:34.700 --> 00:08:37.890
watch it pretty soon after the
session actually happens.

00:08:37.890 --> 00:08:40.510
And yeah, we're going to be
announcing something pretty

00:08:40.510 --> 00:08:44.650
exciting that's related to
soliciting feedback from

00:08:44.650 --> 00:08:44.996
developers.

00:08:44.996 --> 00:08:47.140
And this is obviously
video feedback.

00:08:47.140 --> 00:08:48.760
So that's one piece.

00:08:48.760 --> 00:08:50.680
That's one hint as to what
might be going on.

00:08:50.680 --> 00:08:53.525
And we make it easier
for people to--

00:08:53.525 --> 00:08:55.570
JJ BEHRENS: So much video
feedback from your community.

00:08:58.105 --> 00:08:59.410
I can't think of any
way to do that.

00:08:59.410 --> 00:09:01.200
JEFFREY POSNICK: So this ties
a little bit into YouTube

00:09:01.200 --> 00:09:03.460
Direct, which is
not unreleased.

00:09:03.460 --> 00:09:09.120
This is our existing platform
for deploying a solution that

00:09:09.120 --> 00:09:13.670
lets you let people upload
videos from your website and

00:09:13.670 --> 00:09:15.980
lets you moderate the videos
that you want to add to

00:09:15.980 --> 00:09:18.280
playlists in your own account.

00:09:18.280 --> 00:09:22.640
And we're going to be talking
about the next generation of

00:09:22.640 --> 00:09:23.370
YouTube Direct.

00:09:23.370 --> 00:09:26.070
And I don't want to give
away, again, too much.

00:09:26.070 --> 00:09:28.810
But if you're a current YouTube
Direct user or if your

00:09:28.810 --> 00:09:31.770
somebody who's thought about
using YouTube direct, but the

00:09:31.770 --> 00:09:34.640
barriers of getting started
were a little too high, I

00:09:34.640 --> 00:09:36.330
think they'll be happy
after this session.

00:09:36.330 --> 00:09:37.270
JJ BEHRENS: Yeah.

00:09:37.270 --> 00:09:39.170
And I should point out, YouTube
Direct is an open

00:09:39.170 --> 00:09:43.260
source project we have that
companies can use to solicit

00:09:43.260 --> 00:09:46.630
feedback from their users.

00:09:46.630 --> 00:09:50.300
They could post and say, we'd
like videos about such and

00:09:50.300 --> 00:09:50.840
such a subject.

00:09:50.840 --> 00:09:53.440
And all the users can run out
with their Android phones and

00:09:53.440 --> 00:09:56.700
iPhones, take videos, and
then submit them.

00:09:56.700 --> 00:10:00.290
And then the company can approve
them, in which case

00:10:00.290 --> 00:10:02.350
they'll show up on their
own website.

00:10:02.350 --> 00:10:08.050
And so that's a great way to get
videos from your users to

00:10:08.050 --> 00:10:11.160
show up on your own web page.

00:10:11.160 --> 00:10:15.555
So the next talk we want to
talk about is from Jarek,

00:10:15.555 --> 00:10:20.820
"Mobile YouTube API Apps For
Content Creators, Curators,

00:10:20.820 --> 00:10:22.330
And Consumers."

00:10:22.330 --> 00:10:23.040
JAREK WILKIEWICZ:
That's right.

00:10:23.040 --> 00:10:24.500
JJ BEHRENS: Tell me more
about what I'm going

00:10:24.500 --> 00:10:25.370
to be talking about.

00:10:25.370 --> 00:10:26.275
JAREK WILKIEWICZ: Sure.

00:10:26.275 --> 00:10:27.940
I'm sure you're very
curious already.

00:10:27.940 --> 00:10:34.350
So we are planning to cover
API that is useful for

00:10:34.350 --> 00:10:36.620
developing mobile
applications.

00:10:36.620 --> 00:10:40.530
And, specifically, content
creation applications, which

00:10:40.530 --> 00:10:44.050
is kind of the traditional
YouTube focus.

00:10:44.050 --> 00:10:46.360
Content curation applications,
which is

00:10:46.360 --> 00:10:48.080
new and very exciting.

00:10:48.080 --> 00:10:51.340
And we have quite a few very
interesting companies that

00:10:51.340 --> 00:10:52.980
have partnered with
us and implemented

00:10:52.980 --> 00:10:53.860
these type of apps.

00:10:53.860 --> 00:10:56.820
And then we'll talk about how
to implement best YouTube

00:10:56.820 --> 00:11:00.540
consumption experience in
your mobile application.

00:11:00.540 --> 00:11:05.960
We will have three API
developers joining us at I/O,

00:11:05.960 --> 00:11:11.120
showing their applications and
describing their experience,

00:11:11.120 --> 00:11:14.820
both with YouTube API
as well as mobile

00:11:14.820 --> 00:11:16.590
development in general.

00:11:16.590 --> 00:11:19.680
So this talk is really for
people that want to learn more

00:11:19.680 --> 00:11:24.430
about what we have available
for mobile application

00:11:24.430 --> 00:11:28.430
developers and then learn from
some very interesting

00:11:28.430 --> 00:11:31.480
companies that have successfully
launched products

00:11:31.480 --> 00:11:33.800
on these APIs in the
mobile space.

00:11:33.800 --> 00:11:38.040
So it's a very mobile
focused session.

00:11:38.040 --> 00:11:40.470
So if you're thinking about
mobile development, you're

00:11:40.470 --> 00:11:43.260
doing mobile development right
now, this would be a great

00:11:43.260 --> 00:11:44.490
session to attend.

00:11:44.490 --> 00:11:48.770
If you don't care too much about
mobile development, then

00:11:48.770 --> 00:11:51.815
I won't be upset if
you skip that one.

00:11:51.815 --> 00:11:54.250
JJ BEHRENS: Can you tell me
a little bit more about

00:11:54.250 --> 00:11:55.940
creators, curators,
and consumers?

00:11:55.940 --> 00:11:57.930
JAREK WILKIEWICZ: Sure.

00:11:57.930 --> 00:12:01.610
So as I mentioned before,
creation applications are

00:12:01.610 --> 00:12:04.060
those that allow you
to capture, edit,

00:12:04.060 --> 00:12:06.880
and upload the video.

00:12:06.880 --> 00:12:11.100
So we've seen, historically,
desktop applications, web

00:12:11.100 --> 00:12:13.200
applications that allow
you to do that.

00:12:13.200 --> 00:12:16.870
But now, with the high growth
of mobile, there's more and

00:12:16.870 --> 00:12:20.470
more functionality available
in mobile applications.

00:12:20.470 --> 00:12:27.820
So one of the API developers
that we'll be featuring at the

00:12:27.820 --> 00:12:31.360
talk has actually developed
a tablet and a smartphone

00:12:31.360 --> 00:12:35.710
application that works very
nicely in concert to allow you

00:12:35.710 --> 00:12:38.530
to capture content and then edit
it prior to uploading it

00:12:38.530 --> 00:12:39.960
to YouTube.

00:12:39.960 --> 00:12:43.250
So again, the functionality that
used to be confined to

00:12:43.250 --> 00:12:47.950
high-powered desktops or web
apps at best, now is actually

00:12:47.950 --> 00:12:51.180
being transitioned to mobile so
that you can do that from

00:12:51.180 --> 00:12:52.840
your device on the go.

00:12:52.840 --> 00:12:55.390
Curation applications are those
that really help with

00:12:55.390 --> 00:12:56.900
content discovery.

00:12:56.900 --> 00:13:00.010
So as we all know, there's a lot
of content being uploaded

00:13:00.010 --> 00:13:02.645
to YouTube every minute
How many hours, JJ?

00:13:02.645 --> 00:13:05.120
JJ BEHRENS: 60 hours
every minute.

00:13:05.120 --> 00:13:07.380
And we have interns watching
those at all times.

00:13:07.380 --> 00:13:08.890
That's how we do our
porn detection.

00:13:08.890 --> 00:13:11.610
JAREK WILKIEWICZ: Yes, right.

00:13:11.610 --> 00:13:14.200
So the question becomes how do
you actually find interesting

00:13:14.200 --> 00:13:16.470
content out of those 60
hours per minute?

00:13:16.470 --> 00:13:19.690
And we have algorithms, and
we look at a number of

00:13:19.690 --> 00:13:20.640
methods to do that.

00:13:20.640 --> 00:13:23.580
But we also have an open API
that allows developers to

00:13:23.580 --> 00:13:25.000
innovate around it.

00:13:25.000 --> 00:13:28.480
So this is really where the
curation applications come

00:13:28.480 --> 00:13:29.740
into place.

00:13:29.740 --> 00:13:33.190
Where either the apps help you
discover content through

00:13:33.190 --> 00:13:37.120
whatever algorithms that the
app is developing, or they

00:13:37.120 --> 00:13:39.860
leverage your social graph to
really help with friends'

00:13:39.860 --> 00:13:40.195
recommendations.

00:13:40.195 --> 00:13:42.470
So there's many approaches
at that.

00:13:42.470 --> 00:13:46.610
And we'll be talking about some
of them at the session.

00:13:46.610 --> 00:13:48.440
We'll also have some interesting
applications in

00:13:48.440 --> 00:13:52.110
our developer sandbox at Google
I/O. So you can come

00:13:52.110 --> 00:13:54.840
out and talk to the developers
of these applications to learn

00:13:54.840 --> 00:13:56.150
more from them.

00:13:56.150 --> 00:14:01.360
So the advantages that we see to
these apps is, A, they help

00:14:01.360 --> 00:14:05.500
to really find content that
might be really finely

00:14:05.500 --> 00:14:07.830
tailored to you and
your needs.

00:14:07.830 --> 00:14:11.485
We think video on the web
is a big business.

00:14:11.485 --> 00:14:14.670
So most of these applications
actually curate content that

00:14:14.670 --> 00:14:17.650
is YouTube and not
only YouTube.

00:14:17.650 --> 00:14:20.490
And that's totally cool.

00:14:20.490 --> 00:14:24.380
I think the web is
a big place.

00:14:24.380 --> 00:14:29.440
And then we also are interested
in really

00:14:29.440 --> 00:14:34.340
increasing the time that people
spend with their mobile

00:14:34.340 --> 00:14:37.870
devices watching video, as
opposed to sitting in front of

00:14:37.870 --> 00:14:39.560
a TV. Or maybe both.

00:14:39.560 --> 00:14:43.040
So that's really where these
developers help us.

00:14:43.040 --> 00:14:46.570
And then consumers, really, the
reason why we mention that

00:14:46.570 --> 00:14:50.460
in the talk is because we wanted
to describe some of the

00:14:50.460 --> 00:14:53.470
approaches people have taken to
incorporate YouTube video

00:14:53.470 --> 00:14:57.120
playback in your mobile
applications, for example, iOS

00:14:57.120 --> 00:14:58.630
applications, Android
applications.

00:14:58.630 --> 00:15:01.470
So there will be some
new, interesting

00:15:01.470 --> 00:15:03.430
information at that talk.

00:15:03.430 --> 00:15:07.540
And again, as Jeff mentioned,
I don't want to pre-announce

00:15:07.540 --> 00:15:11.120
it right here, because I was
told that this is a career

00:15:11.120 --> 00:15:11.960
limiting move.

00:15:11.960 --> 00:15:13.860
JJ BEHRENS: Career
[? ending. ?]

00:15:13.860 --> 00:15:15.430
JAREK WILKIEWICZ: But
I would like you to

00:15:15.430 --> 00:15:17.370
join us for the talk.

00:15:17.370 --> 00:15:20.210
JJ BEHRENS: And I know the A.J.
and Dror probably have to

00:15:20.210 --> 00:15:22.700
get going before too long,
because they have to design

00:15:22.700 --> 00:15:25.345
the features that we're going to
talk about at the next I/O.

00:15:25.345 --> 00:15:27.770
But A.J., did you have anything
you wanted to talk

00:15:27.770 --> 00:15:30.390
about, about what's coming up
at next Google I/O, at this

00:15:30.390 --> 00:15:32.376
current Google I/O?

00:15:32.376 --> 00:15:34.345
A.J. CRANE: I think Dror
pretty much covered it.

00:15:34.345 --> 00:15:37.241
I think that I'm really
excited about the

00:15:37.241 --> 00:15:37.480
presentation.

00:15:37.480 --> 00:15:39.328
We're definitely going to be
going through a whole bunch of

00:15:39.328 --> 00:15:41.410
great examples of people
who are using

00:15:41.410 --> 00:15:42.880
the tool really well.

00:15:42.880 --> 00:15:45.990
And showing some things that
work and some things that

00:15:45.990 --> 00:15:49.380
don't for getting the word out
about your apps and showing

00:15:49.380 --> 00:15:50.504
people how to use them.

00:15:50.504 --> 00:15:52.140
So looking forward to it.

00:15:52.140 --> 00:15:52.990
JJ BEHRENS: Great.

00:15:52.990 --> 00:15:53.330
Thanks.

00:15:53.330 --> 00:15:54.160
JAREK WILKIEWICZ:
Thanks, guys.

00:15:54.160 --> 00:15:58.340
JJ BEHRENS: I noticed having
gone to just a couple of

00:15:58.340 --> 00:16:03.060
YouTube talks myself, the PMs
are always the best at finding

00:16:03.060 --> 00:16:05.280
the most amazing videos
that you can just

00:16:05.280 --> 00:16:06.355
sit there and watch.

00:16:06.355 --> 00:16:09.460
And then Jarek, somehow, is able
to connect to every hot

00:16:09.460 --> 00:16:12.520
startup and get them to come
show their cool YouTube API

00:16:12.520 --> 00:16:12.985
integration.

00:16:12.985 --> 00:16:14.935
And I'm always left
scratching.

00:16:14.935 --> 00:16:17.160
How the heck did they even
think of doing that?

00:16:17.160 --> 00:16:18.880
That's fricking amazing.

00:16:18.880 --> 00:16:21.260
So I'm definitely looking
forward to that.

00:16:21.260 --> 00:16:24.770
DROR SCHIMSHOWITZ: Our job is
to watch videos all day.

00:16:24.770 --> 00:16:28.830
JJ BEHRENS: I want your job.

00:16:28.830 --> 00:16:32.400
So next at Google I/O, we have
a talk from Greg, who

00:16:32.400 --> 00:16:35.640
unfortunately is not here,
called, "HTML5 At YouTube,

00:16:35.640 --> 00:16:38.820
Stories From The Front Line."
Greg and Zoltan are

00:16:38.820 --> 00:16:40.150
going to give that.

00:16:40.150 --> 00:16:41.830
Jeff, do you want to talk
about that one?

00:16:41.830 --> 00:16:44.220
JEFFREY POSNICK: Yeah, I mean
I'll just give the quick blurb

00:16:44.220 --> 00:16:47.830
based on what they have in their
session description.

00:16:47.830 --> 00:16:52.310
For those of you who saw our
I/O talk last year, it was

00:16:52.310 --> 00:16:57.080
Greg, and me, and Jarek talking
about the new, at the

00:16:57.080 --> 00:17:02.560
time, HTML5 video playback
via the iFrame embed.

00:17:02.560 --> 00:17:05.980
So this is Greg coming back
again for another year with

00:17:05.980 --> 00:17:08.750
Zoltan, who is one of his
fellow engineers.

00:17:08.750 --> 00:17:11.730
And they're going to talk about
some new things having

00:17:11.730 --> 00:17:17.849
to do with HTML5 video and some
other aspects of HTML5.

00:17:17.849 --> 00:17:20.800
Not directly the video type
itself, but other things that

00:17:20.800 --> 00:17:26.859
they've been using to build a
really cool desktop and web

00:17:26.859 --> 00:17:28.430
browsing experience.

00:17:28.430 --> 00:17:31.060
Sorry, desktop and mobile
web browsing experience.

00:17:31.060 --> 00:17:36.803
So I'm personally looking
forward to this talk.

00:17:36.803 --> 00:17:38.160
JJ BEHRENS: I'll
take that one.

00:17:38.160 --> 00:17:39.973
And we got a question
from Brian.

00:17:39.973 --> 00:17:43.620
Will the I/O sessions be
live-streamed again?

00:17:43.620 --> 00:17:46.910
Maybe dubbed questions
streaming to mobile?

00:17:46.910 --> 00:17:48.035
What about that, Jarek?

00:17:48.035 --> 00:17:50.350
JAREK WILKIEWICZ: So there will
be a fair amount of the

00:17:50.350 --> 00:17:51.840
sessions streamed.

00:17:51.840 --> 00:17:53.920
I don't think all of them
will be streamed.

00:17:53.920 --> 00:17:57.230
And I'm not sure exactly about
the sessions that we're

00:17:57.230 --> 00:17:58.450
describing here.

00:17:58.450 --> 00:18:01.660
We will, however, very quickly
upload the videos from these

00:18:01.660 --> 00:18:04.250
sessions and make slides
available.

00:18:04.250 --> 00:18:08.330
So if you miss a session or if
you're not planning to come to

00:18:08.330 --> 00:18:10.190
I/O, we'll publish the
videos of these

00:18:10.190 --> 00:18:12.220
sessions very quickly.

00:18:12.220 --> 00:18:14.700
And then some of the sessions
will live streamed as well.

00:18:14.700 --> 00:18:17.965
I think the limiting factor
there might be actually the

00:18:17.965 --> 00:18:22.130
uplink bandwidth from the
Moscone Center that we'll have

00:18:22.130 --> 00:18:23.010
at the event.

00:18:23.010 --> 00:18:25.240
So not all the sessions
going on in parallel

00:18:25.240 --> 00:18:25.790
will be live streamed.

00:18:25.790 --> 00:18:28.460
But they will all be recorded,
including ours.

00:18:28.460 --> 00:18:30.240
JJ BEHRENS: Are they going
to post the videos to

00:18:30.240 --> 00:18:32.340
something like Vevo?

00:18:32.340 --> 00:18:33.620
JAREK WILKIEWICZ:
We'll post it to

00:18:33.620 --> 00:18:37.810
Google Developers Channel.

00:18:37.810 --> 00:18:41.282
If you want to watch it on Vevo,
I think it might be a

00:18:41.282 --> 00:18:43.220
little difficult to find
these videos there.

00:18:43.220 --> 00:18:45.345
But I'm sure they'll be plenty
of bootleg videos from these

00:18:45.345 --> 00:18:50.430
sessions that will be available
all over the web.

00:18:50.430 --> 00:18:53.880
JJ BEHRENS: The next talk we
have is "YouTube API Plus

00:18:53.880 --> 00:18:57.145
Cloud Rendering Equals
Happy Mobile Gamers."

00:18:57.145 --> 00:19:00.690
JAREK WILKIEWICZ: Yes, so I'm
a happy mobile gamer.

00:19:00.690 --> 00:19:05.470
And what we are trying to cover
in this talk is really

00:19:05.470 --> 00:19:09.950
how do you solve the problem of
capturing, and coding, and

00:19:09.950 --> 00:19:14.450
uploading video game play
footage on a mobile device.

00:19:14.450 --> 00:19:16.940
So gaming is really
big on YouTube.

00:19:16.940 --> 00:19:19.740
And if you are a gamer, you know
that there's tons of very

00:19:19.740 --> 00:19:21.370
interesting gaming content.

00:19:21.370 --> 00:19:26.380
Anything from [INAUDIBLE] clips,
to tutorials, to bugs

00:19:26.380 --> 00:19:28.190
that are captured
in the games.

00:19:28.190 --> 00:19:30.620
And all that is very interesting
to watch.

00:19:30.620 --> 00:19:33.840
So historically, again, we have
a lot of content coming

00:19:33.840 --> 00:19:39.450
from desktops, consoles, and
not as much from mobile

00:19:39.450 --> 00:19:40.680
devices yet.

00:19:40.680 --> 00:19:45.900
So in this session, really, we
want to cover how do you

00:19:45.900 --> 00:19:48.970
implement video capture
on the mobile device.

00:19:48.970 --> 00:19:51.180
I'll give you a couple of
example architectures that

00:19:51.180 --> 00:19:54.550
support this, show you
a couple of demos.

00:19:54.550 --> 00:19:58.290
And then really focus on the
cloud-based approach that we

00:19:58.290 --> 00:20:03.190
have been prototyping for quite
some time that allows

00:20:03.190 --> 00:20:06.220
you to really offload some
of the heavy, intensive

00:20:06.220 --> 00:20:09.640
processing from the mobile
device into your data center

00:20:09.640 --> 00:20:11.010
if you have one.

00:20:11.010 --> 00:20:15.486
So that's the focus
of that talk.

00:20:15.486 --> 00:20:17.900
JJ BEHRENS: And if they don't
have a data center?

00:20:17.900 --> 00:20:20.770
JAREK WILKIEWICZ: If they don't
have a data center,

00:20:20.770 --> 00:20:26.320
there's, fortunately, processing
capability

00:20:26.320 --> 00:20:28.660
available for purchase.

00:20:28.660 --> 00:20:30.810
So you don't have to
build your own.

00:20:30.810 --> 00:20:34.796
You can use something
off the shelf.

00:20:34.796 --> 00:20:38.190
JJ BEHRENS: And then we have
one called, "New YouTube

00:20:38.190 --> 00:20:42.170
Android Player Tools Session
And Code Lab." Boy, that's

00:20:42.170 --> 00:20:43.615
especially vague.

00:20:43.615 --> 00:20:47.700
But I know that's an
exciting session.

00:20:47.700 --> 00:20:49.846
Let's talk about that one.

00:20:49.846 --> 00:20:54.610
JAREK WILKIEWICZ: Maybe I could
take a stab at this one.

00:20:54.610 --> 00:20:59.290
Again, we can't really go into
details, but there's two

00:20:59.290 --> 00:21:00.540
things I wanted to talk about.

00:21:00.540 --> 00:21:05.300
One is, if you're building a
mobile Android application and

00:21:05.300 --> 00:21:07.240
you want to incorporate YouTube
video playback in your

00:21:07.240 --> 00:21:09.960
app, you probably know that
there's a bunch of different

00:21:09.960 --> 00:21:13.850
approaches ranging from
embedding your web view to

00:21:13.850 --> 00:21:15.740
kicking off the YouTube app.

00:21:15.740 --> 00:21:18.420
And they all have advantages
and disadvantages.

00:21:18.420 --> 00:21:28.450
But none of them are exactly
what is needed to develop a

00:21:28.450 --> 00:21:33.230
good user experience with the
large flexibility as far as

00:21:33.230 --> 00:21:34.510
the control over it.

00:21:34.510 --> 00:21:37.560
This is something that we
are planning to address.

00:21:37.560 --> 00:21:40.690
And we'll go into details
in the session.

00:21:40.690 --> 00:21:46.990
And so that'll be on day two
of I/O. And on day three,

00:21:46.990 --> 00:21:48.390
we'll have a code
lab around it.

00:21:48.390 --> 00:21:52.030
So if you come to this session,
you will learn more

00:21:52.030 --> 00:21:55.850
about what we actually are in
the process of building.

00:21:55.850 --> 00:21:59.030
And the following day, you will
have a chance to get your

00:21:59.030 --> 00:22:03.860
hands dirty and start working
with some of the content that

00:22:03.860 --> 00:22:04.570
we are covering.

00:22:04.570 --> 00:22:12.160
I did want to mention that if
you are in Europe and you

00:22:12.160 --> 00:22:14.300
would like to learn more about
this technology, we are

00:22:14.300 --> 00:22:19.190
planning to have a Hackathon
around this in London.

00:22:19.190 --> 00:22:21.870
That will be on July
6, 7, and 8.

00:22:21.870 --> 00:22:23.290
So it's a weekend.

00:22:23.290 --> 00:22:26.500
We'll soon be sharing more
information about it.

00:22:26.500 --> 00:22:29.410
But again, since is the forum
where we pre-announce

00:22:29.410 --> 00:22:33.050
interesting things, accidentally
or not, I thought

00:22:33.050 --> 00:22:34.180
I'll take advantage of that.

00:22:34.180 --> 00:22:38.210
So we'll post some more
information about this on our

00:22:38.210 --> 00:22:41.000
developer forum and on G+.

00:22:41.000 --> 00:22:43.760
But I would encourage
you to check it out.

00:22:43.760 --> 00:22:48.450
If you are not coming to I/O,
but you still would like to do

00:22:48.450 --> 00:22:50.920
some hacking with us--

00:22:50.920 --> 00:22:55.486
my t-shirt, by the way,
says, hack [? you. ?]

00:22:55.486 --> 00:22:58.146
And yes, so there'll be more
information coming.

00:22:58.146 --> 00:23:01.230
JJ BEHRENS: Unfortunately, the
timing doesn't line up right

00:23:01.230 --> 00:23:04.160
to give a talk on live-streaming
at the same

00:23:04.160 --> 00:23:05.170
time as the Olympics.

00:23:05.170 --> 00:23:07.600
But you can't do everything.

00:23:07.600 --> 00:23:09.260
JAREK WILKIEWICZ: Yeah, although
that would be an

00:23:09.260 --> 00:23:11.546
expensive talk, because I'm
sure the hotel prices

00:23:11.546 --> 00:23:14.100
especially in London are going
to go through the roof.

00:23:14.100 --> 00:23:16.410
JJ BEHRENS: Probably.

00:23:16.410 --> 00:23:19.325
And then, Jeffrey, you want to
talk about, "Master The Latest

00:23:19.325 --> 00:23:22.075
YouTube Data API Code Lab."

00:23:22.075 --> 00:23:23.090
JEFFREY POSNICK: Yeah.

00:23:23.090 --> 00:23:26.140
I'm not going to go into too
much details about what we're

00:23:26.140 --> 00:23:29.900
going to be covering, the new
or the latest in the title.

00:23:29.900 --> 00:23:30.305
JJ BEHRENS: You [INAUDIBLE]

00:23:30.305 --> 00:23:30.450
API.

00:23:30.450 --> 00:23:32.080
You're not even going to
tell us what it is?

00:23:32.080 --> 00:23:33.330
JEFFREY POSNICK: Yeah.

00:23:35.260 --> 00:23:36.570
It's exciting.

00:23:36.570 --> 00:23:37.840
We'll leave it at that.

00:23:37.840 --> 00:23:40.500
So we have some new stuff that
we're going to be unveiling at

00:23:40.500 --> 00:23:41.290
Google I/O.

00:23:41.290 --> 00:23:45.570
And for those who are going to
be attending in person, I'm

00:23:45.570 --> 00:23:49.590
going to be running a code lab
that'll give folks a chance to

00:23:49.590 --> 00:23:53.460
see things before the general
programmer community, give

00:23:53.460 --> 00:23:56.920
some feedback on some new things
that I have available,

00:23:56.920 --> 00:24:00.500
and write some pretty cool
applications based on that

00:24:00.500 --> 00:24:01.560
technology.

00:24:01.560 --> 00:24:03.030
So definitely worth
checking out if

00:24:03.030 --> 00:24:03.990
you're going to be there.

00:24:03.990 --> 00:24:07.350
JJ BEHRENS: And I know that it's
pretty hard to get into

00:24:07.350 --> 00:24:09.990
Google I/O this year,
considering it sold out in

00:24:09.990 --> 00:24:13.060
like 10 nanoseconds.

00:24:13.060 --> 00:24:16.300
If people want to follow along
and figure out what the

00:24:16.300 --> 00:24:20.730
coolest, newest YouTube API
is from home, what do you

00:24:20.730 --> 00:24:22.281
suggest they do?

00:24:22.281 --> 00:24:25.320
JEFFREY POSNICK: Yeah,
definitely watch the videos

00:24:25.320 --> 00:24:27.420
that we're going to be posting
of the I/O sessions

00:24:27.420 --> 00:24:29.100
soon after the fact.

00:24:29.100 --> 00:24:30.710
For the code labs, we're
not going to be

00:24:30.710 --> 00:24:32.830
posting videos of those.

00:24:32.830 --> 00:24:36.140
But I think information about
what we're going to be talking

00:24:36.140 --> 00:24:40.040
about is going to make it into
our public both Google Group,

00:24:40.040 --> 00:24:42.610
and we have our blog, which
is apiblog.youtube.com.

00:24:45.240 --> 00:24:48.520
We have, all of us,
on Google+.

00:24:48.520 --> 00:24:51.230
I tend to link to all the
cool stuff that I find.

00:24:51.230 --> 00:24:53.640
So follow us on Google+.

00:24:53.640 --> 00:24:55.940
That's probably the recommended
ways of doing

00:24:55.940 --> 00:24:57.630
things nowadays.

00:24:57.630 --> 00:25:01.630
JJ BEHRENS: The downside to not
making it to Google I/O,

00:25:01.630 --> 00:25:03.050
you don't get all
the cool toys.

00:25:03.050 --> 00:25:05.020
But the upside is, you
don't have to pay.

00:25:05.020 --> 00:25:05.845
JAREK WILKIEWICZ: I'll probably
[? stay, J. ?]

00:25:05.845 --> 00:25:06.280
Would you like to come?

00:25:06.280 --> 00:25:07.530
JJ BEHRENS: I know.

00:25:09.810 --> 00:25:12.290
And the Googlers, we
never get the toys.

00:25:12.290 --> 00:25:13.710
We show up, and we work.

00:25:13.710 --> 00:25:18.335
And we watch everyone else
get the cool toys.

00:25:18.335 --> 00:25:21.170
Then we have two webinars, which
you can watch before

00:25:21.170 --> 00:25:22.080
Google I/O.

00:25:22.080 --> 00:25:26.520
The first one is called "You
Tube For Your Business".

00:25:26.520 --> 00:25:29.070
Then we'll start a very
non-technical examples of how

00:25:29.070 --> 00:25:31.400
you can use YouTube
for your business.

00:25:31.400 --> 00:25:34.600
And then unlike Dror and A.J.'s
talk, I will go all the

00:25:34.600 --> 00:25:38.100
way to the opposite spectrum
and talk about extremely

00:25:38.100 --> 00:25:41.990
technical ways to tie into
YouTube for your business.

00:25:41.990 --> 00:25:44.900
And I'll give simple
applications

00:25:44.900 --> 00:25:45.730
all along the way.

00:25:45.730 --> 00:25:47.700
And I'll also be showing
a little bit of code

00:25:47.700 --> 00:25:50.575
all along the way.

00:25:50.575 --> 00:25:53.740
It's the very broad
spectrum of ways

00:25:53.740 --> 00:25:55.505
that you can integrate.

00:25:55.505 --> 00:25:56.610
That's a fun talk.

00:25:56.610 --> 00:25:58.855
I've given that a couple
times before.

00:25:58.855 --> 00:26:00.900
And then the last talk--

00:26:00.900 --> 00:26:03.160
excuse me--

00:26:03.160 --> 00:26:06.880
we'll be talking about using
YouTube APIs and Ruby on Rails

00:26:06.880 --> 00:26:08.470
for educational apps.

00:26:08.470 --> 00:26:13.220
Everyone always asks me, what
does Ruby on Rails have to do

00:26:13.220 --> 00:26:15.080
with educational apps?

00:26:15.080 --> 00:26:17.000
And I always say, what
does peanut butter

00:26:17.000 --> 00:26:18.660
have to do with jelly?

00:26:18.660 --> 00:26:21.330
Absolutely nothing, but they
go together really well.

00:26:21.330 --> 00:26:23.297
So that ought to
be a fun talk.

00:26:27.260 --> 00:26:30.070
Fairly soon, we're going to be
opening up to questions.

00:26:30.070 --> 00:26:33.740
And so if you want to start
typing questions into the

00:26:33.740 --> 00:26:40.230
comment area of the Google
Hangout, I will start doling

00:26:40.230 --> 00:26:41.190
out those questions.

00:26:41.190 --> 00:26:45.772
But in the meantime, Jeffrey is
going to talk about one of

00:26:45.772 --> 00:26:49.540
my favorite subjects, which is
using the YouTube API from

00:26:49.540 --> 00:26:50.560
JavaScript.

00:26:50.560 --> 00:26:53.546
And he's going to talk about
our new CORS support.

00:26:53.546 --> 00:26:55.140
I think he might even
have a demo.

00:26:55.140 --> 00:26:57.680
And we might even be able to see
this with screen sharing.

00:26:57.680 --> 00:26:59.950
But go ahead, take
it away, Jeffrey.

00:26:59.950 --> 00:27:00.830
JEFFREY POSNICK: Absolutely.

00:27:00.830 --> 00:27:01.990
Thanks JJ.

00:27:01.990 --> 00:27:06.460
So those of you who do subscribe
to our blog or our

00:27:06.460 --> 00:27:09.180
Google Group might have seen an
announcement sometime last

00:27:09.180 --> 00:27:12.126
week, where we officially
told the world that

00:27:12.126 --> 00:27:14.000
we had turned on--

00:27:14.000 --> 00:27:14.990
or we are going--

00:27:14.990 --> 00:27:18.850
CORS support for the
YouTube API.

00:27:18.850 --> 00:27:20.290
JJ BEHRENS: What's CORS
support, Jeffrey?

00:27:20.290 --> 00:27:26.300
JEFFREY POSNICK: So CORS is a
way of enabling [INAUDIBLE]

00:27:26.300 --> 00:27:30.350
service, like the YouTube API,
to receive requests from

00:27:30.350 --> 00:27:35.060
JavaScript clients that are not
served on the same domain

00:27:35.060 --> 00:27:36.150
as the API itself.

00:27:36.150 --> 00:27:39.970
So CORS stands for Cross Origin
Resource Sharing.

00:27:39.970 --> 00:27:43.420
And it works around the
normal limitations

00:27:43.420 --> 00:27:46.100
on JavaScript code.

00:27:46.100 --> 00:27:48.930
The security model, basically,
does not let the JavaScript

00:27:48.930 --> 00:27:53.250
make a promote HTTP request
to an arbitrary server.

00:27:53.250 --> 00:27:55.980
And that was all well and good
especially in the early days

00:27:55.980 --> 00:27:56.760
of JavaScript.

00:27:56.760 --> 00:28:00.720
But now we have a situation
where there's tons of

00:28:00.720 --> 00:28:02.600
web-based APIs out there.

00:28:02.600 --> 00:28:06.980
And having to deploy server-side
code, having to

00:28:06.980 --> 00:28:11.650
spin up an app engine instance
or run your code from some

00:28:11.650 --> 00:28:14.190
other arbitrary server
[INAUDIBLE]

00:28:14.190 --> 00:28:18.465
overkill if you're primarily
developing a web-based API.

00:28:18.465 --> 00:28:20.890
It requires extra
infrastructure.

00:28:20.890 --> 00:28:23.910
It requires an additional skill
set if you happen to

00:28:23.910 --> 00:28:26.530
just be a JavaScript
programmer.

00:28:26.530 --> 00:28:30.790
So I'm personally really excited
that you can do pretty

00:28:30.790 --> 00:28:35.870
much everything having to do
with the YouTube API now

00:28:35.870 --> 00:28:39.770
purely from client-side
JavaScript.

00:28:39.770 --> 00:28:44.150
So I wanted to show off one of
the demos of something that

00:28:44.150 --> 00:28:46.870
you can do now that you were
not able to do before.

00:28:46.870 --> 00:28:47.820
JJ BEHRENS: That's
pretty sweet.

00:28:47.820 --> 00:28:48.870
JEFFREY POSNICK: Yeah.

00:28:48.870 --> 00:28:50.965
And I think that this is really
just the tip of the

00:28:50.965 --> 00:28:53.095
iceberg, what I'm going to
be showing here now.

00:28:55.770 --> 00:28:57.230
The YouTube API is huge.

00:28:57.230 --> 00:29:00.210
You can do a very wide variety
of different things.

00:29:00.210 --> 00:29:04.480
So hopefully your imagination
will be inspired a bit by what

00:29:04.480 --> 00:29:06.038
we're showing off.

00:29:06.038 --> 00:29:11.000
So do you want to switch
the focus to my

00:29:11.000 --> 00:29:13.005
screenshare right now?

00:29:13.005 --> 00:29:14.130
JJ BEHRENS: We can see it.

00:29:14.130 --> 00:29:15.440
JEFFREY POSNICK:
You can see it?

00:29:15.440 --> 00:29:16.690
I just wanted to make sure
it gets recorded.

00:29:19.070 --> 00:29:22.090
So this is just a sample page
that we have set up here.

00:29:22.090 --> 00:29:26.384
And if you go to the blog
post [? announced-- ?]

00:29:26.384 --> 00:29:28.360
here, let me pull up that
blog post here.

00:29:28.360 --> 00:29:32.120
Go to the blog post, there's a
link to this page if you want

00:29:32.120 --> 00:29:35.520
to try it yourself.

00:29:35.520 --> 00:29:39.010
And what this sample shows
is a few things.

00:29:39.010 --> 00:29:42.510
First, it'll show how you could
use OAuth 2, which is

00:29:42.510 --> 00:29:46.500
our recommended authorization
slash authentication mechanism

00:29:46.500 --> 00:29:50.800
for doing purely client-side
authorization.

00:29:50.800 --> 00:29:53.125
So you don't have to have
any server-side code.

00:29:53.125 --> 00:29:54.850
And you don't have to ask
the user for their

00:29:54.850 --> 00:29:55.840
username and password.

00:29:55.840 --> 00:29:58.480
It goes through purely
web-based flow.

00:29:58.480 --> 00:30:03.232
And the credentials are entered
on Google's site.

00:30:03.232 --> 00:30:04.040
So you know what?

00:30:04.040 --> 00:30:07.660
Let me just share
that screen now.

00:30:07.660 --> 00:30:10.560
Because I want to show people
what the login looks like.

00:30:10.560 --> 00:30:13.974
I do not want to show people
my password though.

00:30:13.974 --> 00:30:17.250
But hopefully, this
will work fine.

00:30:17.250 --> 00:30:18.890
Let me actually login with
my personal account.

00:30:21.890 --> 00:30:23.580
I clicked on the Authorize
Access button.

00:30:23.580 --> 00:30:26.100
I get taken to this
web page that's

00:30:26.100 --> 00:30:28.780
hosted on Google's structure.

00:30:28.780 --> 00:30:31.590
It's all accessed via
HTTPS obviously.

00:30:31.590 --> 00:30:32.415
You're not giving
your credentials

00:30:32.415 --> 00:30:35.210
to any third party.

00:30:35.210 --> 00:30:39.400
It's a really nice, clean way
of doing authorization.

00:30:39.400 --> 00:30:42.050
A lot better than older
approaches like client login,

00:30:42.050 --> 00:30:46.590
where you have to give your
username and password directly

00:30:46.590 --> 00:30:49.530
to a third party application.

00:30:49.530 --> 00:30:51.040
So I'm going to sign in.

00:30:51.040 --> 00:30:55.200
I'm going to make this window
a little bit bigger.

00:30:55.200 --> 00:30:58.340
Add that account, and then I get
taken automatically back

00:30:58.340 --> 00:31:00.020
to the other page.

00:31:00.020 --> 00:31:05.760
So let me share that
window now.

00:31:05.760 --> 00:31:08.895
And you can see that
I am now logged in.

00:31:08.895 --> 00:31:11.840
So the first thing it does is it
knows who I'm logged in as.

00:31:11.840 --> 00:31:15.250
It says I'm logged in as Jeffrey
Posnick over here.

00:31:15.250 --> 00:31:19.960
And that's done via a call to
the YouTube data API made from

00:31:19.960 --> 00:31:24.190
JavaScript that, basically,
passes in my

00:31:24.190 --> 00:31:25.560
authorization token.

00:31:25.560 --> 00:31:27.910
And it gets back my user
profile, and it gets back my

00:31:27.910 --> 00:31:29.994
display name.

00:31:29.994 --> 00:31:32.170
We can take a quick look
at the code later.

00:31:32.170 --> 00:31:34.970
But I want to run through what
the app actually does.

00:31:34.970 --> 00:31:36.960
So basic metadata here.

00:31:36.960 --> 00:31:39.310
And we're going to be uploading
a new video file.

00:31:39.310 --> 00:31:42.075
It just asks for the title,
asks for the description.

00:31:42.075 --> 00:31:45.170
We load the list of different
categories that are supported.

00:31:45.170 --> 00:31:46.810
And that category list
is actually loaded

00:31:46.810 --> 00:31:48.670
dynamically as well.

00:31:48.670 --> 00:31:53.500
And I don't think these
video picker--

00:31:53.500 --> 00:31:56.130
so I don't think the Open File
Up dialog box is being shared

00:31:56.130 --> 00:31:56.530
with you guys.

00:31:56.530 --> 00:31:58.705
But I basically clicked
on Choose File.

00:31:58.705 --> 00:32:00.070
I clicked on Choose File.

00:32:00.070 --> 00:32:02.530
I got an Open File dialog box.

00:32:02.530 --> 00:32:05.530
I chose a local movie file.

00:32:05.530 --> 00:32:07.910
At this point, I can
just click Upload.

00:32:07.910 --> 00:32:11.260
And what's happening here
is using our standard

00:32:11.260 --> 00:32:14.990
browser-based upload
flow-- and that has

00:32:14.990 --> 00:32:17.190
existed for a while.

00:32:17.190 --> 00:32:21.460
But one piece of that flow
requires doing an HTTP post to

00:32:21.460 --> 00:32:24.400
our servers and passing
the metadata.

00:32:24.400 --> 00:32:28.470
And that was never possible to
do before via JavaScript.

00:32:28.470 --> 00:32:32.340
So you would be in a situation
where the upload flow was

00:32:32.340 --> 00:32:34.460
mostly web-based, but you still
had to have this little

00:32:34.460 --> 00:32:40.810
bit of server-side code in order
to actually perform this

00:32:40.810 --> 00:32:41.820
browser-based upload.

00:32:41.820 --> 00:32:44.250
So now, there's no server-side
code at all.

00:32:44.250 --> 00:32:47.700
The full source code
is on this page.

00:32:47.700 --> 00:32:56.100
I stuck it all as part of the
same big documents just

00:32:56.100 --> 00:32:57.510
because it's basically
a sample code.

00:32:57.510 --> 00:32:59.250
Obviously, you might want to
break this out into different

00:32:59.250 --> 00:33:00.180
JavaScript files.

00:33:00.180 --> 00:33:03.050
And I'm not going to claim that
this is the absolute best

00:33:03.050 --> 00:33:05.490
practices for doing this
sort of thing.

00:33:05.490 --> 00:33:08.120
But I think it gives you a good
example and code that you

00:33:08.120 --> 00:33:11.850
could steal and use
in your own code.

00:33:11.850 --> 00:33:13.895
So this takes care of things
like you [? turning off ?]

00:33:13.895 --> 00:33:19.900
OAuth2, setting the appropriate
request headers

00:33:19.900 --> 00:33:22.910
for making your YouTube
API requests.

00:33:22.910 --> 00:33:27.890
It's using jQuery for doing
the actually Ajax calls.

00:33:27.890 --> 00:33:30.650
Let me pull up one specific
Ajax call here.

00:33:36.000 --> 00:33:38.350
So this is, for instance, how
it's getting the display name.

00:33:38.350 --> 00:33:41.970
So it's making an Ajax call
saying, this is the URL I'd

00:33:41.970 --> 00:33:43.580
like to get.

00:33:43.580 --> 00:33:45.740
It's generating the headers
that include your

00:33:45.740 --> 00:33:47.510
authentication token.

00:33:47.510 --> 00:33:49.690
And it gets a response
back and parses

00:33:49.690 --> 00:33:50.895
out the display name.

00:33:50.895 --> 00:33:53.305
So it's all nice, based
on call backs.

00:33:53.305 --> 00:33:56.210
It's just doing Ajax as if you
were doing it against a local

00:33:56.210 --> 00:33:58.330
server except it's going
against our own

00:33:58.330 --> 00:33:59.460
server in this case.

00:33:59.460 --> 00:34:03.020
So that's pretty much
what's going on.

00:34:03.020 --> 00:34:08.110
I encourage folks to steal this
code, get inspired, by

00:34:08.110 --> 00:34:09.139
what I'm doing.

00:34:09.139 --> 00:34:11.260
Hopefully, improve
it a bit too.

00:34:11.260 --> 00:34:14.173
And go out and hack
some JavaScript.

00:34:14.173 --> 00:34:16.329
JJ BEHRENS: That's fantastic.

00:34:16.329 --> 00:34:20.022
I'm super excited about that
client side, all client side.

00:34:22.849 --> 00:34:26.070
Let's go ahead and take some
questions and hopefully

00:34:26.070 --> 00:34:27.679
provide some answers.

00:34:27.679 --> 00:34:31.000
Jeffrey is already
providing them.

00:34:31.000 --> 00:34:34.190
So Alexandre Passant at--

00:34:34.190 --> 00:34:35.079
he has two questions.

00:34:35.079 --> 00:34:37.360
This is for the Q&amp;A session.

00:34:37.360 --> 00:34:39.639
One, is there any music related

00:34:39.639 --> 00:34:41.580
features in the new API?

00:34:41.580 --> 00:34:47.085
For example, search by artist.
Jeffrey, what do you think?

00:34:47.085 --> 00:34:48.060
JEFFREY POSNICK: No.

00:34:48.060 --> 00:34:51.179
So this is certainly something
we hear about a lot, and

00:34:51.179 --> 00:34:54.260
people wanting to find, for
instance, like the official

00:34:54.260 --> 00:34:58.040
music videos for a given
account, which is somewhat

00:34:58.040 --> 00:35:00.110
easier because they're all
uploaded in the same account.

00:35:00.110 --> 00:35:05.260
But sometimes official music
videos might be spread across

00:35:05.260 --> 00:35:07.320
different accounts, and you just
want to find everything

00:35:07.320 --> 00:35:10.860
that's a Lady Gaga video
or something like that.

00:35:10.860 --> 00:35:14.310
So you can kind of do that
now based on the publicly

00:35:14.310 --> 00:35:16.480
available metadata.

00:35:16.480 --> 00:35:19.320
But you get false positives
if you try to search for

00:35:19.320 --> 00:35:21.480
everything from Lady Gaga.

00:35:21.480 --> 00:35:24.440
There's nothing stopping an
arbitrary person from

00:35:24.440 --> 00:35:28.410
uploading a video and tagging
it as Lady Gaga.

00:35:28.410 --> 00:35:32.520
That situation is probably going
to be the same for what

00:35:32.520 --> 00:35:35.310
we're talking about
with this new API.

00:35:35.310 --> 00:35:39.300
There's not directly anything
new and certainly not anything

00:35:39.300 --> 00:35:42.820
we can announce, right here
related to that unfortunately.

00:35:42.820 --> 00:35:44.090
JJ BEHRENS: Good
guess, though.

00:35:44.090 --> 00:35:45.316
JEFFREY POSNICK: Yeah.

00:35:45.316 --> 00:35:47.830
JJ BEHRENS: The next question
is, you mentioned helping

00:35:47.830 --> 00:35:50.290
businesses to interact
with users.

00:35:50.290 --> 00:35:51.460
Any plans to direct

00:35:51.460 --> 00:35:53.940
screencasting features in YouTube?

00:35:53.940 --> 00:35:56.146
Jarek?

00:35:56.146 --> 00:35:57.810
JAREK WILKIEWICZ: Screencasting
features like

00:35:57.810 --> 00:36:01.507
the ones we were using
here in G+?

00:36:01.507 --> 00:36:03.000
JJ BEHRENS: I don't know.

00:36:03.000 --> 00:36:05.210
Do you want to talk about
Wirecast for YouTube

00:36:05.210 --> 00:36:05.390
[INAUDIBLE]?

00:36:05.390 --> 00:36:08.060
JEFFREY POSNICK: Well, Alex,
you're on the call.

00:36:08.060 --> 00:36:11.210
Do you want to clarify
what you wanted?

00:36:11.210 --> 00:36:14.260
ALEXANDRE PASSANT: Yes, I was
thinking actually two things

00:36:14.260 --> 00:36:16.552
like easy screencast. Because
right now, if you want to do a

00:36:16.552 --> 00:36:18.910
screencast for a product, you
just use ScreenFlow or

00:36:18.910 --> 00:36:20.440
something like that, and
then you upload.

00:36:20.440 --> 00:36:22.670
So that may be good, but
something direct

00:36:22.670 --> 00:36:23.510
to do that on YouTube.

00:36:23.510 --> 00:36:25.316
And the other thing is--

00:36:25.316 --> 00:36:28.411
and since we're using user
testing to have resource

00:36:28.411 --> 00:36:31.002
[? code ?] the software, that
will be good as well if you

00:36:31.002 --> 00:36:31.370
get something--

00:36:31.370 --> 00:36:32.224
I don't know--

00:36:32.224 --> 00:36:35.850
YouTube or Android to
do that [INAUDIBLE]

00:36:35.850 --> 00:36:37.600
as well this way for
the product.

00:36:37.600 --> 00:36:43.300
JEFFREY POSNICK: Yeah, we don't
have it out of the box.

00:36:43.300 --> 00:36:45.610
We have partners that
implemented this.

00:36:45.610 --> 00:36:50.350
And it's also very platform
specific.

00:36:50.350 --> 00:36:54.730
So no plans right
now, I think.

00:36:54.730 --> 00:36:56.590
And JJ alluded to that.

00:36:56.590 --> 00:37:02.000
We have several app developers
that implement this

00:37:02.000 --> 00:37:02.450
functionality.

00:37:02.450 --> 00:37:05.265
In fact, one of the companies
that builds that will be at

00:37:05.265 --> 00:37:07.340
our developer's sandbox
at Google I/O

00:37:07.340 --> 00:37:09.090
showing their solution.

00:37:09.090 --> 00:37:12.520
So they use YouTube API
to upload in the end.

00:37:12.520 --> 00:37:17.920
But typically, what happens is
people want a lot more than

00:37:17.920 --> 00:37:20.720
just a basic recording.

00:37:20.720 --> 00:37:26.940
So what their soliciting us to
do is edit, modify, change

00:37:26.940 --> 00:37:30.230
things, before you actually
perform the upload.

00:37:30.230 --> 00:37:34.380
But we don't have anything that
would make it simple for

00:37:34.380 --> 00:37:35.760
a simple use case.

00:37:35.760 --> 00:37:37.390
It's an interesting
idea though.

00:37:37.390 --> 00:37:42.050
We will definitely pass that
on to product management.

00:37:42.050 --> 00:37:44.870
JJ BEHRENS: In general, if
people have good ideas, what

00:37:44.870 --> 00:37:46.856
should they do with
them, Jeffrey?

00:37:46.856 --> 00:37:49.100
JEFFREY POSNICK: They could post
it in the Google Group.

00:37:49.100 --> 00:37:52.690
They could approach us
on Google+ also.

00:37:52.690 --> 00:37:54.760
And there's all sorts
of different ways

00:37:54.760 --> 00:37:57.750
of engaging us nowadays.

00:37:57.750 --> 00:38:00.850
A possible approach is putting
it in our Issue Tracker as a

00:38:00.850 --> 00:38:04.960
feature request. And there's a
link to Issue Tracker from our

00:38:04.960 --> 00:38:06.830
developer website.

00:38:06.830 --> 00:38:10.400
But I tend to like seeing things
in the Google Group.

00:38:10.400 --> 00:38:12.480
I pay a little bit more
attention to that than the

00:38:12.480 --> 00:38:12.885
Issue Tracker.

00:38:12.885 --> 00:38:15.900
JJ BEHRENS: Yeah, Jeffrey is
currently responding to the

00:38:15.900 --> 00:38:17.550
Google Group.

00:38:17.550 --> 00:38:21.565
We have like a two minute
latency some

00:38:21.565 --> 00:38:22.460
days, not every day.

00:38:22.460 --> 00:38:26.735
Some days, it's like three
days when he's out.

00:38:26.735 --> 00:38:30.291
JEFFREY POSNICK: I take
weekends off.

00:38:30.291 --> 00:38:32.900
JJ BEHRENS: So do we have
any more questions?

00:38:32.900 --> 00:38:35.690
We've got two guys live
and any others?

00:38:35.690 --> 00:38:37.300
Otherwise, I'm just going
to make them up.

00:38:43.012 --> 00:38:45.350
No, no questions.

00:38:45.350 --> 00:38:46.710
What's the best question you've
seen on the Google

00:38:46.710 --> 00:38:47.960
Group this week, Jeffrey?

00:38:50.520 --> 00:38:52.320
JEFFREY POSNICK: Yikes.

00:38:52.320 --> 00:38:53.570
Best question.

00:38:53.570 --> 00:38:54.992
Let me take a quick look.

00:38:54.992 --> 00:38:58.410
JJ BEHRENS: Well, see, part of
the problem with responding

00:38:58.410 --> 00:39:02.210
very quickly to questions, as
Jeffrey does, is you really

00:39:02.210 --> 00:39:03.770
have to be [INAUDIBLE].

00:39:03.770 --> 00:39:05.950
If you try to store any
[INAUDIBLE] about the

00:39:05.950 --> 00:39:10.000
questions before answering
them, it slows you down.

00:39:10.000 --> 00:39:13.540
And so it's kind of like
an internet router.

00:39:13.540 --> 00:39:16.230
You want to be routing the
packets not saving information

00:39:16.230 --> 00:39:17.490
about the packets.

00:39:17.490 --> 00:39:17.990
JEFFREY POSNICK: Indeed.

00:39:17.990 --> 00:39:20.870
So actually, something that came
up a couple times in the

00:39:20.870 --> 00:39:24.770
Google Group in the past week--
and hopefully will be

00:39:24.770 --> 00:39:29.780
fixed tonight as part of our
Wednesday night YouTube push--

00:39:29.780 --> 00:39:33.740
is the new restrictions that
we had in place on minimum

00:39:33.740 --> 00:39:36.385
sizes for YouTube embedded
players.

00:39:36.385 --> 00:39:40.700
Jarek had a nice blog post a few
weeks ago where he spelled

00:39:40.700 --> 00:39:41.760
out what those restrictions
are.

00:39:41.760 --> 00:39:44.840
Basically, you need to make
sure that you have your

00:39:44.840 --> 00:39:49.440
embedded player at 200
pixels wide by 200

00:39:49.440 --> 00:39:52.040
pixels high at the minimum.

00:39:52.040 --> 00:39:53.995
Obviously, you can make it
bigger than that, change the

00:39:53.995 --> 00:39:55.250
aspect ratio.

00:39:55.250 --> 00:39:56.710
But that's the bare minimum.

00:39:56.710 --> 00:40:00.360
And we've had some developers
who have been posting, saying,

00:40:00.360 --> 00:40:05.040
I have an embedded player that's
either exactly 200 by

00:40:05.040 --> 00:40:07.810
200 or a little bit bigger,
and yet I'm still getting

00:40:07.810 --> 00:40:10.490
playback errors, saying that
my player is too small.

00:40:10.490 --> 00:40:14.760
So starting tonight, we're going
to actually change the

00:40:14.760 --> 00:40:17.690
logic a little bit that we use
for calculating whether the

00:40:17.690 --> 00:40:21.950
player is too small and,
basically, fix it so that the

00:40:21.950 --> 00:40:26.050
size of the control bar doesn't
count against you when

00:40:26.050 --> 00:40:27.430
making that calculation.

00:40:27.430 --> 00:40:31.130
So you can't really be expected
to know how big the

00:40:31.130 --> 00:40:33.130
YouTube control bar
is going to be.

00:40:33.130 --> 00:40:35.900
And I think that's the way we're
going to address this is

00:40:35.900 --> 00:40:37.970
by hiding the control bar a
little bit more aggressively

00:40:37.970 --> 00:40:43.190
in those scenarios to make sure
that there is 200 pixels,

00:40:43.190 --> 00:40:46.385
in each way that's available
for playback.

00:40:46.385 --> 00:40:47.510
JJ BEHRENS: I see.

00:40:47.510 --> 00:40:50.470
And I really don't
understand this.

00:40:50.470 --> 00:40:55.610
I mean, I want my playbacks
as large as possible.

00:40:55.610 --> 00:41:00.640
Why would anyone want a YouTube
player smaller than

00:41:00.640 --> 00:41:03.210
200 by 200?

00:41:03.210 --> 00:41:06.300
You can't even fit Lady Gaga
into such a small image.

00:41:06.300 --> 00:41:09.300
JEFFREY POSNICK: She will
not be contained.

00:41:09.300 --> 00:41:11.390
I don't know.

00:41:11.390 --> 00:41:13.010
There are legitimate reasons
for wanting a

00:41:13.010 --> 00:41:13.930
really small player.

00:41:13.930 --> 00:41:17.300
I'm actually working right now
on something that displays a

00:41:17.300 --> 00:41:21.210
whole bunch of thumbnails for
videos that are uploaded in

00:41:21.210 --> 00:41:21.790
your account.

00:41:21.790 --> 00:41:26.070
And I want those thumbnails to
turn into playable embeds when

00:41:26.070 --> 00:41:30.340
you click on them, basically,
which is all doable via the

00:41:30.340 --> 00:41:31.650
YouTube player API.

00:41:31.650 --> 00:41:34.200
But I don't want to have to--

00:41:34.200 --> 00:41:36.370
I'm actually doing inline
playback in this case.

00:41:36.370 --> 00:41:39.142
I'm not making a letterbox or
anything where it takes over

00:41:39.142 --> 00:41:41.590
the whole screen and shows
the really big embeds.

00:41:41.590 --> 00:41:45.120
So I want the embed to be still
small enough that it's

00:41:45.120 --> 00:41:50.840
not crowding out everything
on the rest of the page.

00:41:50.840 --> 00:41:54.610
JJ BEHRENS: I know a question
that comes up that I have to

00:41:54.610 --> 00:41:59.060
answer a lot is should people be
using the old object embeds

00:41:59.060 --> 00:42:02.830
with the new iFrame API
especially when they want to

00:42:02.830 --> 00:42:05.020
mix in some JavaScripts?

00:42:05.020 --> 00:42:06.520
Jarek, what do you think?

00:42:06.520 --> 00:42:08.780
JAREK WILKIEWICZ: Yeah, this
is a very good question.

00:42:08.780 --> 00:42:13.650
So we have released the iFrame
embed a long time ago.

00:42:13.650 --> 00:42:15.280
I think it's been over a year.

00:42:15.280 --> 00:42:19.515
And then we have then followed
up with an iFrame API.

00:42:19.515 --> 00:42:24.430
In fact, we spoke in detail
about iFrame API at Google I/O

00:42:24.430 --> 00:42:28.230
last year with Greg and Jeff.

00:42:28.230 --> 00:42:31.510
One thing that we're looking
into right now is what it

00:42:31.510 --> 00:42:34.260
would take for us to remove
the beta status

00:42:34.260 --> 00:42:35.100
of the iFrame API.

00:42:35.100 --> 00:42:38.830
So there's a lot of concern at
that point to make sure that

00:42:38.830 --> 00:42:42.620
we can comfortably say,
hey, this is ready

00:42:42.620 --> 00:42:44.160
for production apps.

00:42:44.160 --> 00:42:47.535
Since as of today, it's still
in the experimental stage.

00:42:47.535 --> 00:42:52.910
So we're working very hard to
make sure that there's really

00:42:52.910 --> 00:42:56.210
no need for you to use the
object embed in the old

00:42:56.210 --> 00:42:58.660
JavaScript API anymore.

00:42:58.660 --> 00:43:04.430
And then get the iFrame API
ready for production.

00:43:04.430 --> 00:43:09.010
So I would rather not discuss
specific timelines, other than

00:43:09.010 --> 00:43:11.950
say that it's very soon.

00:43:11.950 --> 00:43:15.510
And I'm personally very
excited about it.

00:43:15.510 --> 00:43:20.110
Because, really, what it means
is that applications that need

00:43:20.110 --> 00:43:24.120
cross-platform functionality
will be able to comfortably

00:43:24.120 --> 00:43:27.050
use the iFrame API and then work
reliably no matter what

00:43:27.050 --> 00:43:30.920
the platform is, whether it's a
desktop, a web browser, or a

00:43:30.920 --> 00:43:33.360
mobile web browser on
a platform that

00:43:33.360 --> 00:43:34.660
doesn't support Flash.

00:43:34.660 --> 00:43:37.570
JJ BEHRENS: So tell me, when
would the object embed not

00:43:37.570 --> 00:43:40.835
work if you're using the
JavaScript API for it?

00:43:40.835 --> 00:43:43.410
JAREK WILKIEWICZ: If you don't
have Flash, then typically

00:43:43.410 --> 00:43:46.420
object embed won't work or, at
best, it will work, but there

00:43:46.420 --> 00:43:47.440
won't be API support.

00:43:47.440 --> 00:43:53.330
So say, on the iOS, you can
embed a video into a web app

00:43:53.330 --> 00:43:55.170
or a web view.

00:43:55.170 --> 00:43:56.920
It will render properly.

00:43:56.920 --> 00:43:58.180
The playback will work.

00:43:58.180 --> 00:44:00.476
But you can't actually get
to it and control it.

00:44:00.476 --> 00:44:04.855
Because there's no API exposed
through a Safari plug-in that

00:44:04.855 --> 00:44:08.650
is implemented as a part
of the Mobile Safari.

00:44:08.650 --> 00:44:11.370
So while playback works, there's
no way to get at the

00:44:11.370 --> 00:44:12.930
video and use it with an API.

00:44:12.930 --> 00:44:14.200
So that's really
the case here.

00:44:14.200 --> 00:44:17.720
Plus, we really want to
transition as much as we can

00:44:17.720 --> 00:44:22.070
toward the iFrame embed so that
as new platforms appear,

00:44:22.070 --> 00:44:26.990
we can figure out how to offer
best playback experience for

00:44:26.990 --> 00:44:29.970
them, rather than forcing a
developer to go through the

00:44:29.970 --> 00:44:34.390
motions and do some weird things
with the embed format

00:44:34.390 --> 00:44:35.580
depending on what
the platform is.

00:44:35.580 --> 00:44:38.040
So that's the advantage of
using the iFrame embed.

00:44:38.040 --> 00:44:41.670
And then if you have a platform
that you work with

00:44:41.670 --> 00:44:45.730
and you find that the iFrame
embed is not working as

00:44:45.730 --> 00:44:47.420
expected, let us know.

00:44:47.420 --> 00:44:50.370
Because that's something that we
intend to fix and optimize.

00:44:50.370 --> 00:44:53.530
There's a fair amount of
platform specific work that

00:44:53.530 --> 00:44:55.225
goes into the iFrame embed
implementation.

00:44:55.225 --> 00:44:58.350
But then the advantage is
again, it fits everyone.

00:44:58.350 --> 00:45:01.048
So we don't actually have to
force the developers to think

00:45:01.048 --> 00:45:06.100
about all these different mobile
platforms and others.

00:45:06.100 --> 00:45:08.645
JEFFREY POSNICK: I wanted to
add something to what Jarek

00:45:08.645 --> 00:45:09.260
was saying.

00:45:09.260 --> 00:45:15.550
We still do plan on having the
ActionScript 3 version of the

00:45:15.550 --> 00:45:20.640
Flash player accessible
via the object tag.

00:45:20.640 --> 00:45:23.920
It's still fully supported, so
this is not us deprecating it.

00:45:23.920 --> 00:45:28.410
And we know that one important
use case for that is if you

00:45:28.410 --> 00:45:32.660
happen to be a Flash developer
and you're writing a Flash

00:45:32.660 --> 00:45:36.910
application, you're writing a
Flash app, something that

00:45:36.910 --> 00:45:39.850
requires the host to be in
Flash, and yet you want to

00:45:39.850 --> 00:45:43.440
playback a YouTube video from
within that application, you

00:45:43.440 --> 00:45:47.370
still do need to use
our older player.

00:45:47.370 --> 00:45:50.440
It's not the exact same syntax
as the object tag.

00:45:50.440 --> 00:45:53.350
But it is directly requesting
the Flash

00:45:53.350 --> 00:45:54.200
version of the player.

00:45:54.200 --> 00:45:57.246
And you are going to continue
to be able to do that.

00:45:57.246 --> 00:45:58.020
JJ BEHRENS: Great.

00:45:58.020 --> 00:46:00.480
That's really helpful, because
I like to code

00:46:00.480 --> 00:46:02.690
HTML5 five days a week.

00:46:02.690 --> 00:46:06.871
And then I do Flash Tuesdays
and Thursdays.

00:46:06.871 --> 00:46:08.800
Do we have any other
questions, or

00:46:08.800 --> 00:46:12.130
shall we wrap it up?

00:46:12.130 --> 00:46:15.270
Well, thank you guys
for joining it.

00:46:15.270 --> 00:46:16.250
It makes it a lot
more interesting

00:46:16.250 --> 00:46:18.750
when people are watching.

00:46:18.750 --> 00:46:20.020
Thank you, Jarek.

00:46:20.020 --> 00:46:20.900
Thank you, [? Pong, ?]

00:46:20.900 --> 00:46:21.900
who you can't see.

00:46:21.900 --> 00:46:23.260
Maybe you can wave?

00:46:23.260 --> 00:46:25.880
[? Pong ?] is our software
engineer pretending to be a

00:46:25.880 --> 00:46:28.830
technical, audio visual
engineer.

00:46:28.830 --> 00:46:30.360
Thanks a lot, Jeffrey.

00:46:30.360 --> 00:46:31.465
Thanks a lot to our
two visitors.

00:46:31.465 --> 00:46:34.980
And Dror and A.J. who went back
to work, figuring out

00:46:34.980 --> 00:46:37.450
what we're going to
do next quarter.

00:46:37.450 --> 00:46:38.670
So thanks a lot guys.

00:46:38.670 --> 00:46:39.570
JAREK WILKIEWICZ:
See you, guys.

00:46:39.570 --> 00:46:40.170
ALEXANDRE PASSANT: Thanks.

00:46:40.170 --> 00:46:41.420
JEFFREY POSNICK: Thanks.

