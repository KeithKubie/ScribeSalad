WEBVTT
Kind: captions
Language: en

00:00:00.120 --> 00:00:04.820
So in the previous quiz we have seen that we can fetch these instructions then

00:00:04.820 --> 00:00:09.120
we rename them to eliminate false dependencies. So let's see whether we have any

00:00:09.120 --> 00:00:14.360
false dependencies after renaming and what does that do to our IPC or

00:00:14.360 --> 00:00:19.190
instructions per cycle which is the opposite of CPI. Well here we have a true

00:00:19.190 --> 00:00:25.200
dependence. And that true dependence is still there in our renamed program.

00:00:25.200 --> 00:00:30.550
Similarly here we have a true dependence and it is still there in our renamed

00:00:30.550 --> 00:00:36.820
program. And then here we have another one, and it is still there.

00:00:36.820 --> 00:00:41.730
However here we also have an output dependence from R2 here to R2 here and

00:00:41.730 --> 00:00:44.780
then another one to here. And

00:00:44.780 --> 00:00:50.400
we have an anti-dependence here and one here. So if

00:00:50.400 --> 00:00:56.460
we look at all of the dependencies then basically this is a sequential program.

00:00:56.460 --> 00:01:02.030
So for our fetched program, we have the CPI of one which is also the IPC of one.

00:01:02.030 --> 00:01:07.040
For our renamed program, however, this anti-dependence is no longer there,

00:01:07.040 --> 00:01:11.050
this output-dependence is no longer there, there is no anti-dependence here and

00:01:11.050 --> 00:01:17.090
there is no output dependence here. So really, here we can execute this,

00:01:17.090 --> 00:01:20.450
this, and this instruction in the first cycle and this, this and

00:01:20.450 --> 00:01:24.180
this instruction in the second cycle. So, for our rename program now,

00:01:24.180 --> 00:01:28.580
we have, that we can execute, this, this, and this instruction. Three

00:01:28.580 --> 00:01:33.030
instructions in the first cycle, these three can be done in the second cycle, so

00:01:33.030 --> 00:01:38.890
overall we have six instructions over two cycles. The cycles per instruction

00:01:38.890 --> 00:01:44.260
is two cycles for six instructions, giving us a much lower CPI,

00:01:44.260 --> 00:01:49.290
it's only 0.33. Or we can write it as IPC of three,

00:01:49.290 --> 00:01:53.990
meaning we execute three instructions per cycle. As you can see,

00:01:53.990 --> 00:01:59.360
our renaming gave us a much better potential for executing this program quickly.

