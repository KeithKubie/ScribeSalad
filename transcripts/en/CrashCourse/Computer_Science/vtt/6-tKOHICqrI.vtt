WEBVTT
Kind: captions
Language: en

00:00:03.220 --> 00:00:06.160
This episode is brought to you by Curiosity Stream.

00:00:06.160 --> 00:00:09.300
Hi, I’m Carrie Anne, and welcome to CrashCourse Computer Science!

00:00:09.300 --> 00:00:13.200
Over the past six episodes, we delved into
software, from early programming efforts to

00:00:13.200 --> 00:00:15.460
modern software engineering practices.

00:00:15.460 --> 00:00:19.740
Within about 50 years, software grew in complexity from machine code punched by hand onto paper

00:00:19.740 --> 00:00:25.250
tape, to object oriented programming languages, compiled in integrated development environments.

00:00:25.250 --> 00:00:29.440
But this growth in sophistication would not
have been possible without improvements in hardware.

00:00:29.640 --> 00:00:38.860
INTRO

00:00:38.860 --> 00:00:42.969
To appreciate computing hardware’s explosive
growth in power and sophistication, we need

00:00:42.969 --> 00:00:45.699
to go back to the birth of electronic computing.

00:00:45.699 --> 00:00:51.170
From roughly the 1940’s through the mid-1960s,
every computer was built from individual parts,

00:00:51.170 --> 00:00:54.280
called discrete components, which were all
wired together.

00:00:54.280 --> 00:00:59.100
For example, the ENIAC, consisted of more
than 17,000 vacuum tubes, 70,000 resistors,

00:00:59.100 --> 00:01:05.540
10,000 capacitors, and 7,000 diodes, all of
which required 5 million hand-soldered connections.

00:01:05.540 --> 00:01:10.210
Adding more components to increase performance
meant more connections, more wires, and just

00:01:10.210 --> 00:01:13.060
more complexity, what was dubbed the Tyranny
of Numbers.

00:01:13.060 --> 00:01:17.500
By the mid 1950s, transistors were becoming
commercially available and being incorporated

00:01:17.500 --> 00:01:18.820
into computers.

00:01:18.820 --> 00:01:23.640
These were much smaller, faster and more reliable
than vacuum tubes, but each transistor was

00:01:23.640 --> 00:01:25.280
still one discrete component.

00:01:25.290 --> 00:01:31.450
In 1959, IBM upgraded their vacuum-tube-based
“709” computers to transistors by replacing

00:01:31.450 --> 00:01:34.869
all the discrete vacuum tubes with discrete
transistors.

00:01:34.869 --> 00:01:40.170
The new machine, the IBM 7090, was six times
faster and half the cost.

00:01:40.170 --> 00:01:44.530
These transistorized computers marked the
second generation of electronic computing.

00:01:44.530 --> 00:01:48.110
However, although faster and smaller, discrete
transistors didn’t solve the Tyranny of

00:01:48.110 --> 00:01:49.110
Numbers.

00:01:49.110 --> 00:01:52.630
It was getting unwieldy to design, let alone
physically manufacture computers with hundreds

00:01:52.630 --> 00:01:54.719
of thousands of individual components.

00:01:54.719 --> 00:01:57.399
By the the 1960s, this was reaching a breaking
point.

00:01:57.399 --> 00:02:00.810
The insides of computers were often just huge
tangles of wires.

00:02:00.810 --> 00:02:04.039
Just look at what the inside of a PDP-8 from
1965 looked like!

00:02:04.039 --> 00:02:08.960
The answer was to bump up a new level of abstraction,
and package up underlying complexity!

00:02:08.960 --> 00:02:13.740
The breakthrough came in 1958, when Jack Kilby,
working at Texas Instruments, demonstrated

00:02:13.740 --> 00:02:18.820
such an electronic part, “wherein all the
components of the electronic circuit are completely

00:02:18.820 --> 00:02:19.820
integrated."

00:02:19.820 --> 00:02:24.040
Put simply: instead of building computer parts
out of many discrete components and wiring

00:02:24.040 --> 00:02:28.790
them all together, you put many components
together, inside of a new, single component.

00:02:28.790 --> 00:02:31.170
These are called Integrated Circuits, or ICs.

00:02:31.170 --> 00:02:37.070
A few months later in 1959, Fairchild Semiconductor,
lead by Robert Noyce, made ICs practical.

00:02:37.070 --> 00:02:41.120
Kilby built his ICs out of germanium, a rare
and unstable material.

00:02:41.120 --> 00:02:45.300
But, Fairchild used the abundant silicon,
which makes up about a quarter of the earth's crust!

00:02:45.460 --> 00:02:47.920
It’s also more stable, therefore more reliable.

00:02:47.920 --> 00:02:52.380
For this reason, Noyce is widely regarded
as the father of modern ICs, ushering in the

00:02:52.390 --> 00:02:56.980
electronics era... and also Silicon Valley,
where Fairchild was based and where many other

00:02:56.980 --> 00:02:59.110
semiconductor companies would soon pop up.

00:02:59.110 --> 00:03:03.170
In the early days, an IC might only contain
a simple circuit with just a few transistors,

00:03:03.170 --> 00:03:05.190
like this early Westinghouse example.

00:03:05.190 --> 00:03:09.060
But even this allowed simple circuits, like
the logic gates from Episode 3, to be packaged

00:03:09.060 --> 00:03:10.440
up into a single component.

00:03:10.440 --> 00:03:14.280
ICs are sort of like lego for computer engineers
“building blocks” that can be arranged

00:03:14.280 --> 00:03:16.380
into an infinite array of possible designs.

00:03:16.380 --> 00:03:20.500
However, they still have to be wired together
at some point to create even bigger and more

00:03:20.500 --> 00:03:22.890
complex circuits, like a whole computer.

00:03:22.890 --> 00:03:26.960
For this, engineers had another innovation:
printed circuit boards, or PCBs.

00:03:26.960 --> 00:03:32.320
Instead of soldering and bundling up bazillions
of wires, PCBs, which could be mass manufactured,

00:03:32.320 --> 00:03:36.200
have all the metal wires etched right into
them* to connect components together.

00:03:36.200 --> 00:03:40.890
By using PCBs and ICs together, one could
achieve exactly the same functional circuit

00:03:40.890 --> 00:03:45.440
as that made from discrete components, but
with far fewer individual components and tangled

00:03:45.440 --> 00:03:46.440
wires.

00:03:46.440 --> 00:03:48.780
Plus, it’s smaller, cheaper and more reliable.

00:03:48.780 --> 00:03:49.780
Triple win!

00:03:49.780 --> 00:03:53.970
Many early ICs were manufactured using teeny
tiny discrete components packaged up as a

00:03:53.970 --> 00:03:56.970
single unit, like this IBM example from 1964.

00:03:56.970 --> 00:04:02.090
However, even when using really really itty-bitty
components, it was hard to get much more than

00:04:02.090 --> 00:04:04.750
around five transistors onto a single IC.

00:04:04.750 --> 00:04:08.770
To achieve more complex designs, a radically
different fabrication process was needed that

00:04:08.770 --> 00:04:11.280
changed everything: Photolithography!

00:04:11.400 --> 00:04:16.840
In short, it’s a way to use light to transfer
complex patterns to a material, like a semiconductor.

00:04:16.840 --> 00:04:21.600
It only has a few basic operations, but these
can be used to create incredibly complex circuits.

00:04:21.609 --> 00:04:26.010
Let’s walk through a simple, although extensive
example, to make one of these!

00:04:26.010 --> 00:04:30.040
We start with a slice of silicon, which, like
a thin cookie, is called a wafer.

00:04:30.040 --> 00:04:31.040
Delicious!

00:04:31.040 --> 00:04:35.460
Silicon, as we discussed briefly in episode
2, is special because it’s a semiconductor,

00:04:35.460 --> 00:04:39.470
that is, a material that can sometimes conduct
electricity and other times does not.

00:04:39.470 --> 00:04:43.410
We can control where and when this happens,
making Silicon the perfect raw material for

00:04:43.410 --> 00:04:44.820
making transistors.

00:04:44.820 --> 00:04:50.540
We can also use a wafer as a base to lay down
complex metal circuits, so everything is integrated,

00:04:50.540 --> 00:04:52.850
perfect for... integrated circuits!

00:04:52.850 --> 00:04:57.130
The next step is to add a thin oxide layer
on top of the silicon, which acts as a protective

00:04:57.130 --> 00:04:58.130
coating.

00:04:58.130 --> 00:05:00.260
Then, we apply a special chemical called a
photoresist.

00:05:00.260 --> 00:05:04.340
When exposed to light, the chemical changes,
and becomes soluble, so it can be washed away

00:05:04.340 --> 00:05:06.100
with a different special chemical.

00:05:06.100 --> 00:05:10.310
Photoresists aren’t very useful by themselves,
but are super powerful when used in conjunction

00:05:10.310 --> 00:05:11.310
with a photomask.

00:05:11.310 --> 00:05:14.740
This is just like a piece of photographic
film, but instead of a photo of a hamster

00:05:14.740 --> 00:05:18.660
eating a tiny burrito, it contains a pattern
to be transferred onto the wafer.

00:05:18.660 --> 00:05:22.240
We do this by putting a photomask over the
wafer, and turning on a powerful light.

00:05:22.240 --> 00:05:25.280
Where the mask blocks the light, the photoresist
is unchanged.

00:05:25.280 --> 00:05:29.800
But where the light does hit the photoresist
it changes chemically which lets us wash away

00:05:29.800 --> 00:05:34.630
only the photoresist that was exposed to light,
selectively revealing areas of our oxide layer.

00:05:34.630 --> 00:05:39.030
Now, by using another special chemical, often
an acid, we can remove any exposed oxide,

00:05:39.030 --> 00:05:42.320
and etch a little hole the entire way down
to the raw silicon.

00:05:42.320 --> 00:05:45.730
Note that the oxide layer under the photoresist
is protected.

00:05:45.730 --> 00:05:50.010
To clean up, we use yet another special chemical
that washes away any remaining photoresist.

00:05:50.010 --> 00:05:55.270
Yep, there are a lot of special chemicals
in photolithography, each with a very specific

00:05:55.270 --> 00:05:56.270
function!

00:05:56.270 --> 00:05:59.740
So now we can see the silicon again, we want
to modify only the exposed areas to better

00:05:59.740 --> 00:06:00.740
conduct electricity.

00:06:00.740 --> 00:06:04.660
To do that, we need to change it chemically
through a process called: doping.

00:06:04.660 --> 00:06:06.550
I’m not even going to make a joke.

00:06:06.550 --> 00:06:07.550
Let’s move on.

00:06:07.550 --> 00:06:11.220
Most often this is done with a high temperature
gas, something like Phosphorus, which penetrates

00:06:11.220 --> 00:06:12.919
into the exposed area of silicon.

00:06:12.919 --> 00:06:14.320
This alters its electrical properties.

00:06:14.320 --> 00:06:18.010
We’re not going to wade into the physics
and chemistry of semiconductors, but if you’re

00:06:18.010 --> 00:06:21.550
interested, there’s a link in the description
to an excellent video by our friend Derek

00:06:21.550 --> 00:06:22.620
Muller from Veritasium.

00:06:22.620 --> 00:06:26.800
But, we still need a few more rounds of photolithography
to build a transistor.

00:06:26.800 --> 00:06:31.080
The process essentially starts again, first
by building up a fresh oxide layer ...which

00:06:31.080 --> 00:06:32.300
we coat in photoresist.

00:06:32.300 --> 00:06:37.120
Now, we use a photomask with a new and different
pattern, allowing us to open a small window

00:06:37.120 --> 00:06:38.770
above the doped area.

00:06:38.770 --> 00:06:41.680
Once again, we wash away remaining photoresist.

00:06:41.680 --> 00:06:45.430
Now we dope, and avoid telling a hilarious
joke, again, but with a different gas that

00:06:45.430 --> 00:06:48.370
converts part of the silicon into yet a different
form.

00:06:48.370 --> 00:06:52.400
Timing is super important in photolithography
in order to control things like doping diffusion

00:06:52.400 --> 00:06:53.580
and etch depth.

00:06:53.580 --> 00:06:57.240
In this case, we only want to dope a little
region nested inside the other.

00:06:57.240 --> 00:07:00.060
Now we have all the pieces we need to create
our transistor!

00:07:00.060 --> 00:07:03.930
The final step is to make channels in the
oxide layer so that we can run little metal

00:07:03.930 --> 00:07:06.220
wires to different parts of our transistor.

00:07:06.220 --> 00:07:11.040
Once more, we apply a photoresist, and use
a new photomask to etch little channels.

00:07:11.040 --> 00:07:15.669
Now, we use a new process, called metalization,
that allows us to deposit a thin layer of

00:07:15.669 --> 00:07:17.400
metal, like aluminium or copper.

00:07:17.400 --> 00:07:19.490
But we don’t want to cover everything in
metal.

00:07:19.490 --> 00:07:21.950
We want to etch a very specific circuit design.

00:07:21.950 --> 00:07:27.900
So, very similar to before, we apply a photoresist,
use a photomask, dissolve the exposed resist,

00:07:27.900 --> 00:07:30.510
and use a chemical to remove any exposed metal.

00:07:30.510 --> 00:07:31.510
Whew!

00:07:31.510 --> 00:07:32.990
Our transistor is finally complete!

00:07:32.990 --> 00:07:36.460
It has three little wires that connect to
three different parts of the silicon, each

00:07:36.460 --> 00:07:41.940
doped a particular way to create, in this
example, what’s called a bipolar junction transistor.

00:07:42.000 --> 00:07:46.320
Here’s the actual patent from 1962, an invention
that changed our world forever!

00:07:46.330 --> 00:07:50.449
Using similar steps, photolithography can
create other useful electronic elements, like

00:07:50.449 --> 00:07:54.680
resistors and capacitors, all on a single
piece of silicon (plus all the wires needed

00:07:54.680 --> 00:07:56.570
to hook them up into circuits).

00:07:56.570 --> 00:07:58.190
Goodbye discrete components!

00:07:58.190 --> 00:08:02.360
In our example, we made one transistor, but
in the real world, photomasks lay down millions

00:08:02.360 --> 00:08:03.980
of little details all at once.

00:08:03.980 --> 00:08:08.240
Here is what an IC might look like from above,
with wires crisscrossing above and below each

00:08:08.240 --> 00:08:12.200
other, interconnecting all the individual
elements together into complex circuits.

00:08:12.200 --> 00:08:16.190
Although we could create a photomask for an
entire wafer, we can take advantage of the

00:08:16.190 --> 00:08:19.540
fact that light can be focused and projected
to any size we want.

00:08:19.540 --> 00:08:23.300
In the same way that a film can be projected to fill an entire movie screen, we can focus

00:08:23.300 --> 00:08:28.130
a photomask onto a very small patch of silicon, creating incredibly fine details.

00:08:28.130 --> 00:08:31.070
A single silicon wafer is generally used to
create dozens of ICs.

00:08:31.070 --> 00:08:35.069
Then, once you’ve got a whole wafer full,
you cut them up and package them into microchips,

00:08:35.069 --> 00:08:38.349
those little black rectangles you see in electronics
all the time.

00:08:38.349 --> 00:08:42.479
Just remember: at the heart of each of those
chips is one of these small pieces of silicon.

00:08:42.479 --> 00:08:46.620
As photolithography techniques improved, the
size of transistors shrunk, allowing for greater

00:08:46.620 --> 00:08:47.649
densities.

00:08:47.649 --> 00:08:52.740
At the start of the 1960s, an IC rarely contained
more than 5 transistors, they just couldn’t

00:08:52.740 --> 00:08:53.740
possibly fit.

00:08:53.740 --> 00:08:59.170
But, by the mid 1960s, we were starting to
see ICs with over 100 transistors on the market.

00:08:59.170 --> 00:09:03.230
In 1965, Gordon Moore could see the trend:
that approximately every two years, thanks

00:09:03.230 --> 00:09:07.600
to advances in materials and manufacturing,
you could fit twice the number of transistors

00:09:07.600 --> 00:09:09.340
into the same amount of space.

00:09:09.340 --> 00:09:10.820
This is  called Moore’s Law.

00:09:10.820 --> 00:09:12.350
The term is a bit of a misnomer though.

00:09:12.350 --> 00:09:14.619
It’s not really a law at all, more of a
trend.

00:09:14.619 --> 00:09:15.620
But it’s a good one.

00:09:15.620 --> 00:09:21.910
IC prices also fell dramatically, from an
average of $50 in 1962 to around $2 in 1968.

00:09:21.910 --> 00:09:24.440
Today, you can buy ICs for cents.

00:09:24.440 --> 00:09:27.880
Smaller transistors and higher densities had
other benefits too.

00:09:27.890 --> 00:09:32.020
The smaller the transistor, the less charge
you have to move around, allowing it to switch

00:09:32.029 --> 00:09:33.939
states faster and consume less power.

00:09:33.940 --> 00:09:38.100
Plus, more compact circuits meant less delay in signals resulting in faster clock speeds.

00:09:38.160 --> 00:09:42.970
In 1968, Robert Noyce and Gordon Moore teamed
up and founded a new company, combining the

00:09:42.970 --> 00:09:45.139
words Integrated and Electronics...

00:09:45.139 --> 00:09:47.610
Intel... the largest chip maker today.

00:09:47.610 --> 00:09:52.750
The Intel 4004 CPU, from Episodes 7 and 8,
was a major milestone.

00:09:52.750 --> 00:09:58.410
Released in 1971, it was the first processor
that shipped as an IC, what’s called a microprocessor,

00:09:58.410 --> 00:10:00.449
because it was so beautifully small!

00:10:00.449 --> 00:10:02.809
It contained 2,300 transistors.

00:10:02.809 --> 00:10:07.800
People marveled at the level of integration,
an entire CPU in one chip, which just two

00:10:07.800 --> 00:10:11.780
decades earlier would have filled an entire
room using discrete components.

00:10:11.780 --> 00:10:16.819
This era of integrated circuits, especially
microprocessors, ushered in the third generation

00:10:16.820 --> 00:10:17.580
of computing.

00:10:17.580 --> 00:10:20.400
And the Intel 4004 was just the start.

00:10:20.410 --> 00:10:22.420
CPU transistor count exploded!

00:10:22.430 --> 00:10:26.660
By 1980, CPUs contained 30 thousand transistors.

00:10:26.660 --> 00:10:30.420
By 1990, CPUs breached the 1 million transistor
count.

00:10:30.420 --> 00:10:34.440
By 2000, 30 million transistors, and by 2010,

00:10:34.540 --> 00:10:39.660
ONE. BILLION. TRANSISTORS. IN ONE. IC. OMG!

00:10:39.720 --> 00:10:44.180
To achieve this density, the finest resolution
possible with photolithography has improved

00:10:44.190 --> 00:10:48.520
from roughly 10 thousand nanometers, that’s
about 1/10th the thickness of a human hair,

00:10:48.529 --> 00:10:50.550
to around 14 nanometers today.

00:10:50.550 --> 00:10:53.199
That’s over 400 times smaller than a red
blood cell!

00:10:53.199 --> 00:10:56.559
And of course, CPU’s weren’t the only
components to benefit.

00:10:56.559 --> 00:11:01.670
Most electronics advanced essentially exponentially:
RAM, graphics cards, solid state hard drives,

00:11:01.670 --> 00:11:03.220
camera sensors, you name it.

00:11:03.240 --> 00:11:09.060
Today’s processors, like the A10 CPU inside Of an iPhone 7, contains a mind melting 3.3 BILLION

00:11:09.060 --> 00:11:12.480
transistors in an IC roughly 1cm by 1cm.

00:11:12.490 --> 00:11:14.310
That’s smaller than a postage stamp!

00:11:14.310 --> 00:11:18.149
And modern engineers aren’t laying out these
designs by hand, one transistor at a time

00:11:18.149 --> 00:11:19.700
- it’s not humanly possible.

00:11:19.700 --> 00:11:25.269
Starting in the 1970’s, very-large-scale
integration, or VLSI software, has been used

00:11:25.269 --> 00:11:27.899
to automatically generate chip designs instead.

00:11:27.899 --> 00:11:31.779
Using techniques like logic synthesis, where
whole, high-level components can be laid down,

00:11:31.780 --> 00:11:36.140
like a memory cache, the software generates
the circuit in the most efficient way possible.

00:11:36.140 --> 00:11:39.300
Many consider this to be the start of fourth
generation computers.

00:11:39.300 --> 00:11:42.840
Unfortunately, experts have been predicting
the end of Moore’s Law for decades, and

00:11:42.840 --> 00:11:44.850
we might finally be getting close to it.

00:11:44.850 --> 00:11:48.220
There are two significant issues holding us
back from further miniaturization.

00:11:48.220 --> 00:11:52.200
First, we’re bumping into limits on how
fine we can make features on a photomask and

00:11:52.209 --> 00:11:56.160
it’s resultant wafer due to the wavelengths
of light used in photolithography.

00:11:56.160 --> 00:12:00.429
In response, scientists have been developing
light sources with smaller and smaller wavelengths

00:12:00.429 --> 00:12:02.619
that can project smaller and smaller features.

00:12:02.619 --> 00:12:06.170
The second issue is that when transistors
get really really small, where electrodes

00:12:06.170 --> 00:12:11.089
might be separated by only a few dozen atoms,
electrons can jump the gap, a phenomenon called

00:12:11.089 --> 00:12:12.459
quantum tunneling.

00:12:12.460 --> 00:12:15.160
If transistors leak current, they don’t
make very good switches.

00:12:15.160 --> 00:12:19.700
Nonetheless, scientists and engineers are
hard at work figuring out ways around these problems.

00:12:19.760 --> 00:12:23.720
Transistors as small as 1 nanometer have been
demonstrated in research labs.

00:12:23.720 --> 00:12:27.430
Whether this will ever be commercially feasible
remains MASKED in mystery.

00:12:27.440 --> 00:12:29.720
But maybe we’ll be able to RESOLVE it in
the future.

00:12:29.720 --> 00:12:31.360
I’m DIEING to know.

00:12:31.360 --> 00:12:32.600
See you next week.

00:12:32.600 --> 00:12:35.720
Hey guys, this week’s episode was brought to you by CuriosityStream

00:12:36.000 --> 00:12:39.400
which is a streaming service full of documentaries and non­fiction titles from

00:12:39.640 --> 00:12:43.040
some really great filmmakers, including exclusive originals.

00:12:43.200 --> 00:12:46.120
Like a short documentary called “Birth of The Internet”

00:12:46.200 --> 00:12:52.800
that tells the story of the first ever Internet message transferred in 1969 between UCLA and Stanford University.

00:12:52.800 --> 00:12:55.360
This was a pivotal moment in computing history,

00:12:55.360 --> 00:12:59.400
but unlike Samuel Morse’s first telegraph or Neil Armstrong’s famous words on the moon

00:12:59.480 --> 00:13:02.560
the first message wasn’t quite so...ambitious.

00:13:02.560 --> 00:13:05.880
Anyway, get unlimited access today, and your first two months are free

00:13:05.880 --> 00:13:09.320
if you sign up at curiositystream.com/crashcourse

00:13:09.320 --> 00:13:12.800
and use the promo code "crashcourse" during the sign-up process.

