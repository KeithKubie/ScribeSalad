WEBVTT
Kind: captions
Language: en

00:00:08.269 --> 00:00:08.450
&gt;&gt; So I'm here with Pentaho. Who are you guys
and what do guys do?

00:00:08.450 --> 00:00:14.160
&gt;&gt; So, we're an open source business intelligence
company. We build applications for people

00:00:14.160 --> 00:00:20.090
interested in doing reporting, analysis, data
integration, and data mining. And we have

00:00:20.090 --> 00:00:26.180
a lot of thick client applications as well
as a lot of growing number of thin client

00:00:26.180 --> 00:00:34.770
applications. Primarily, using or lately GWT
or GWT for the development of this.

00:00:34.770 --> 00:00:47.460
&gt;&gt; I know that you used GWT, do you use any
other APIs? And then, what were your reasons

00:00:47.460 --> 00:00:49.640
for using Google Web Toolkit?
&gt;&gt; In addition to using GWT, we also integrate

00:00:49.640 --> 00:00:55.420
with some of the Google data APIs, including
Google Analytics, which we just now used today

00:00:55.420 --> 00:01:01.480
and Google Docs. We're also--we were one of
the first BI companies to integrate with Google

00:01:01.480 --> 00:01:07.450
Maps, making it easy to build location with
Dashboards within our products.

00:01:07.450 --> 00:01:13.560
&gt;&gt; So, what were the reasons behind, you know,
most of the Google Wave guys which is [INDISTINCT]

00:01:13.560 --> 00:01:22.649
&gt;&gt; Well, I guess, looking at it from the GWT
perspective that was something that I perceived

00:01:22.649 --> 00:01:30.119
as, "What can I use to get something done
with the limited amount of time that I have

00:01:30.119 --> 00:01:36.459
to do with them?" And so, I basically, went
on vacation for a week and I had a lot of

00:01:36.459 --> 00:01:43.509
ideas for what I wanted to do and I wouldn't
advertise myself as a JavaScript to developer,

00:01:43.509 --> 00:01:47.859
simply because I don't actually enjoy that.
I'm able to do it, but I don't necessarily

00:01:47.859 --> 00:01:55.490
enjoy it. I wanted to get something done rather
than fight a war against Web browsers. So,

00:01:55.490 --> 00:02:00.139
I wanted to--if it was going to be on my own
time, my own spare time, I wanted to actually

00:02:00.139 --> 00:02:06.529
enjoy it and I wanted to get something done.
That's primarily why I chose that technology

00:02:06.529 --> 00:02:11.190
and it was also the fact that I could use
all the Java tools that I'm already familiar

00:02:11.190 --> 00:02:15.090
with.
&gt;&gt; So GWT--that's great. Do you [INDISTINCT]

00:02:15.090 --> 00:02:19.560
and if you are familiar with the maintenance?
&gt;&gt; Yes.

00:02:19.560 --> 00:02:24.990
&gt;&gt; Absolutely, we're--most of our products
are Java based, so it was very natural for

00:02:24.990 --> 00:02:31.790
our teams of Java developers to migrate towards
using GWT for our clients' side, thin client

00:02:31.790 --> 00:02:36.390
development.
&gt;&gt; So, did you guys encounter any difficulties

00:02:36.390 --> 00:02:42.360
building your software with GWT? Or any, like,
interesting anecdotes from that?

00:02:42.360 --> 00:02:50.310
&gt;&gt; Yeah, there's probably been plenty of those.
We have a situation--we actually have an iFrame

00:02:50.310 --> 00:02:57.780
in our application, which displays our reports,
our content, that could be PDFs. And the different

00:02:57.780 --> 00:03:07.260
browsers are actually handling those plug-ins
differently than others. So for example, if

00:03:07.260 --> 00:03:13.530
we have an overlap of a menu item, it would
get clipped behind the PDF and there's a bunch

00:03:13.530 --> 00:03:22.190
of cases where it's not necessarily the fault
of GWT, it's just the fact that we got a more

00:03:22.190 --> 00:03:26.770
or less a native plug-in sitting on top of
there and it makes it look like it is. So,

00:03:26.770 --> 00:03:32.290
we had some workarounds that we're able to
put in place. Probably, one of the biggest

00:03:32.290 --> 00:03:39.069
things that always gets us is CSS--I mean,
I heard somebody talking about it in the Keynote

00:03:39.069 --> 00:03:44.530
or something earlier today, and it really
is the thing that you can sit there and you

00:03:44.530 --> 00:03:50.310
can assume, "Oh, you know, it's something
with GWT, you know, GWT compiler must not

00:03:50.310 --> 00:03:56.010
have produced this correctly." And you sit
there and you want to blame it, but in the

00:03:56.010 --> 00:04:03.030
end, you'll find a lot of times you're actually
getting a CSS issue. We had one recently where

00:04:03.030 --> 00:04:07.120
we're getting a Scroll Bar on the right hand
side of our application. We couldn't get rid

00:04:07.120 --> 00:04:14.290
of it and it turned out to be a CSS issue.
And it only happened in--it was either IE

00:04:14.290 --> 00:04:18.250
or Firefox, but it was one of those things
that only happened in one browser and it was

00:04:18.250 --> 00:04:24.379
like, "Oh, great." You know, "We finally found
the thing that GWT can't handle, but, nope,

00:04:24.379 --> 00:04:28.999
CSS again."
&gt;&gt; So, it seems like you have some tips and

00:04:28.999 --> 00:04:34.180
tricks from other developers, is there any
others you would care to share?

00:04:34.180 --> 00:04:42.960
&gt;&gt; One of the areas that we've come across
is, trying to transport our Java Models and

00:04:42.960 --> 00:04:48.620
Java Objects over to the thin client, and
one tip that I would definitely recommend,

00:04:48.620 --> 00:04:53.139
if you are transferring those objects, be
very careful that they're all referenced directly

00:04:53.139 --> 00:04:58.819
in your GWT and if they're referenced directly,
then make them somehow be referenced. Otherwise,

00:04:58.819 --> 00:05:02.789
GWT RPC won't actually serialize these objects
across where it goes, and you'll get very

00:05:02.789 --> 00:05:09.129
odd airs that aren't intuitively, obviously
RPC, you know, RPC issue, so. For instance,

00:05:09.129 --> 00:05:14.330
we had a HashMap of objects, we were, we're
passing a lot of different types of Java objects

00:05:14.330 --> 00:05:19.479
over the wire and all those are serializable,
but we haven't exclusively call them out in

00:05:19.479 --> 00:05:24.979
the GWT as servlet code. So, they weren't
making their way into our GWT environment

00:05:24.979 --> 00:05:31.080
from by, basically adding some stuffed out
method that referred to those objects it was

00:05:31.080 --> 00:05:39.139
able to transport. That was fine.
&gt;&gt; So, what are the features that I missed

00:05:39.139 --> 00:05:45.050
about [INDISTINCT]?
&gt;&gt; Well, as I said before one of the primary

00:05:45.050 --> 00:05:51.300
reason that I chose it was the fact that it
has a pretty large tool set behind it because

00:05:51.300 --> 00:06:00.469
it is Java. So, I could develop an Eclipse
and use all of the debugging and all the re-factoring

00:06:00.469 --> 00:06:06.020
of the features that are built-in to that.
So, the fact that it's written in Java I don't

00:06:06.020 --> 00:06:10.520
know if I would call that a feature of it,
but that's just--that is just the way it is.

00:06:10.520 --> 00:06:21.830
But that's big enough for me that I called
it a feature. I'm a big fan of the Image Bundle

00:06:21.830 --> 00:06:27.960
and there's a term on that. We talked about
as well.

00:06:27.960 --> 00:06:33.089
&gt;&gt; GWT RPC, you know.
&gt;&gt; The--as I--you call it really simple RPC.

00:06:33.089 --> 00:06:36.150
&gt;&gt; Yup.
&gt;&gt; I mean, it is, it is that. Yeah.

00:06:36.150 --> 00:06:39.210
&gt;&gt; What do you think that you can improve
upon?

00:06:39.210 --> 00:06:43.169
&gt;&gt; Of the what?
&gt;&gt; What do you think could be improved upon?

00:06:43.169 --> 00:06:52.680
&gt;&gt; Improved upon, well, one thing that actually
got a lot better in I6 due to parallel compilation.

00:06:52.680 --> 00:07:00.490
Historically our problem was waiting for it
to compile. Still an issue but depending on

00:07:00.490 --> 00:07:07.089
how powerful our machines are with multi-course,
like our continuous integration machine has

00:07:07.089 --> 00:07:15.309
a--it's a four core box and it sees a really
big improvement from the parallel compilation.

00:07:15.309 --> 00:07:25.229
But there's--it's still an issue that, that
affects us. And so, I would say, okay, that's

00:07:25.229 --> 00:07:30.219
an area that, if it can be improved on it
will be great if it was improved upon, but

00:07:30.219 --> 00:07:36.869
I know that area is being pushed pretty hard.
&gt;&gt; I think it's on the list. So, would you

00:07:36.869 --> 00:07:42.539
recommend GWT to develop these other features?
&gt;&gt; Yeah, yes, absolutely and that's what we

00:07:42.539 --> 00:07:47.979
were doing today. We got a lot of folks to
come up to the GWT area asking lots of great

00:07:47.979 --> 00:07:55.369
questions. Job developers and non-job developers
seeing a value in GWT and why, developing

00:07:55.369 --> 00:08:02.369
and GWT can increase your velocity. And basically
make it a lot easier to develop true rich

00:08:02.369 --> 00:08:07.599
apps that used some of these new capabilities
like Google Gears and some of this other,

00:08:07.599 --> 00:08:13.819
richer client. I think client capabilities
with java, with the enterprise capabilities

00:08:13.819 --> 00:08:20.189
that you get from Java.
&gt;&gt; Is anything else that you guys want to

00:08:20.189 --> 00:08:22.369
pass?
&gt;&gt; You can check out our open source software

00:08:22.369 --> 00:08:31.319
at Pentaho.com. We have a great community.
We have forums, IRC, lots of voice to contribute.

00:08:31.319 --> 00:08:37.200
&gt;&gt; How do you spell Pentaho?
&gt;&gt; Pentaho, is P-E-E-N-T-A-H-O.com. Okay.

00:08:37.200 --> 00:08:38.390
&gt;&gt; Great. Thank you guys for coming out here
at I/O.

00:08:38.390 --> 00:08:38.419
&gt;&gt; Thank you.
&gt;&gt; Great.

