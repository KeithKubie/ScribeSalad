WEBVTT
Kind: captions
Language: en

00:00:07.616 --> 00:00:10.650
DANIEL GALPIN: Hi, I'm Dan
Galpin, and with me is Bruno

00:00:10.650 --> 00:00:12.410
Oliveira and Todd Kerpelman.

00:00:12.410 --> 00:00:15.340
And today, we're going to be
talking about the top seven

00:00:15.340 --> 00:00:17.620
developer mistakes people
make in setting

00:00:17.620 --> 00:00:18.505
up Google Play services.

00:00:18.505 --> 00:00:20.310
BRUNO OLIVEIRA: So our show
today is going to be entirely

00:00:20.310 --> 00:00:21.230
about mistakes.

00:00:21.230 --> 00:00:22.530
DANIEL GALPIN: Your mistakes.

00:00:22.530 --> 00:00:23.811
BRUNO OLIVEIRA: Exactly.

00:00:23.811 --> 00:00:26.870
DANIEL GALPIN: So before we
start talking about your

00:00:26.870 --> 00:00:29.590
mistakes, let's do a little
summary of what Google Play

00:00:29.590 --> 00:00:31.560
game services actually are.

00:00:31.560 --> 00:00:35.200
This, of course, is Google's
backend to do achievements and

00:00:35.200 --> 00:00:39.580
leader boards, real time
multiplayer, cloud save, as

00:00:39.580 --> 00:00:42.280
well as some anti-piracy
features that are on Android,

00:00:42.280 --> 00:00:45.690
to help you game developers
implement best-of-breed

00:00:45.690 --> 00:00:47.740
services scaling to
Google scale.

00:00:47.740 --> 00:00:48.510
BRUNO OLIVEIRA: Exactly.

00:00:48.510 --> 00:00:51.230
And I think especially with a
real time multiplayer, I mean,

00:00:51.230 --> 00:00:53.880
this is one big piece of
infrastructure that we are

00:00:53.880 --> 00:00:58.400
taking into our own hands so
that you can actually focus on

00:00:58.400 --> 00:01:00.310
what makes your games awesome.

00:01:00.310 --> 00:01:00.590
DANIEL GALPIN: Yeah.

00:01:00.590 --> 00:01:03.450
Instead of writing all that
boring infrastructure code,

00:01:03.450 --> 00:01:04.980
let us write the boring code.

00:01:04.980 --> 00:01:05.820
BRUNO OLIVEIRA: We like
boring stuff.

00:01:05.820 --> 00:01:07.670
DANIEL GALPIN: Yea, exactly.

00:01:07.670 --> 00:01:11.000
And we like thinking about
scale, and you guys

00:01:11.000 --> 00:01:12.180
can think about fun.

00:01:12.180 --> 00:01:13.570
And I think that's a good way
of dividing things up.

00:01:13.570 --> 00:01:15.820
BRUNO OLIVEIRA: Yeah, exactly.

00:01:15.820 --> 00:01:18.970
So with that, let's dive
into our list of

00:01:18.970 --> 00:01:20.810
top 7 developer mistakes.

00:01:20.810 --> 00:01:23.460
First of all, let's talk about
using the JAR file instead of

00:01:23.460 --> 00:01:24.450
the library project.

00:01:24.450 --> 00:01:26.820
As you know, when you're using
Google Play game services, you

00:01:26.820 --> 00:01:30.180
have to include the Google Play
services library project.

00:01:30.180 --> 00:01:32.100
And then if you're using our
samples, you have to include

00:01:32.100 --> 00:01:33.860
the BaseGameUtils
library project.

00:01:33.860 --> 00:01:37.080
The mistake that some developers
do is thinking that

00:01:37.080 --> 00:01:39.360
library projects actually don't
mean anything, and they

00:01:39.360 --> 00:01:40.950
can just include
the JAR files.

00:01:40.950 --> 00:01:44.020
Well, JAR files are just
classes, while library

00:01:44.020 --> 00:01:46.420
projects are something that
wraps classes and resources

00:01:46.420 --> 00:01:47.790
into the same bundle.

00:01:47.790 --> 00:01:50.840
So the worst thing is that they
won't really notice if

00:01:50.840 --> 00:01:51.960
they make this mistake.

00:01:51.960 --> 00:01:52.320
DANIEL GALPIN: Yeah.

00:01:52.320 --> 00:01:55.040
We don't actually go and
validate the APK to make sure

00:01:55.040 --> 00:01:58.020
the resources are there that
you're actually referencing

00:01:58.020 --> 00:02:00.440
when you're doing one
of these projects.

00:02:00.440 --> 00:02:03.190
That JAR file actually contains
references to

00:02:03.190 --> 00:02:05.850
resources that we're providing
in that library project, and

00:02:05.850 --> 00:02:08.030
if you don't put those resources
in, there's nothing

00:02:08.030 --> 00:02:10.030
in the compiler, there's
nothing in the deck, so

00:02:10.030 --> 00:02:11.310
there's nothing in the packager
that's actually going

00:02:11.310 --> 00:02:12.740
to catch that mistake.

00:02:12.740 --> 00:02:14.120
Who going to catch
that mistake?

00:02:14.120 --> 00:02:15.935
Your users are going to
catch that mistake.

00:02:15.935 --> 00:02:16.430
BRUNO OLIVEIRA: Exactly.

00:02:16.430 --> 00:02:20.020
And you might not even catch it
during testing because the

00:02:20.020 --> 00:02:22.020
only place where you're going to
see this mistake is if the

00:02:22.020 --> 00:02:25.710
library actually wants to use
a resource from that bundle.

00:02:25.710 --> 00:02:27.760
And that's going to happen,
for example, when the user

00:02:27.760 --> 00:02:30.570
can't sign in and it has
to show a dialog box.

00:02:30.570 --> 00:02:33.400
So ironically enough, when the
library is trying to show an

00:02:33.400 --> 00:02:35.720
error message, then it's going
to figure out that it doesn't

00:02:35.720 --> 00:02:36.460
have that resource.

00:02:36.460 --> 00:02:38.290
And then it's going to have to
show an error message saying

00:02:38.290 --> 00:02:40.260
that it can't show their
message, and it's going to

00:02:40.260 --> 00:02:41.190
look something like that.

00:02:41.190 --> 00:02:42.820
I mean, that's everyone's
favorite screen.

00:02:42.820 --> 00:02:43.230
DANIEL GALPIN: Absolutely.

00:02:43.230 --> 00:02:48.690
And the best part is it's
not a crash in our code.

00:02:48.690 --> 00:02:50.340
It looks like a crash
in your code.

00:02:50.340 --> 00:02:51.400
BRUNO OLIVEIRA: It's going
to totally look

00:02:51.400 --> 00:02:52.150
like it's your fault.

00:02:52.150 --> 00:02:53.445
DANIEL GALPIN: Or
your mistake.

00:02:53.445 --> 00:02:54.740
BRUNO OLIVEIRA: Or
your mistake.

00:02:54.740 --> 00:02:56.340
DANIEL GALPIN: So there's
mistake number seven.

00:02:56.340 --> 00:02:56.850
BRUNO OLIVEIRA: Exactly.

00:02:56.850 --> 00:02:59.530
DANIEL GALPIN: So I think we
should take it over to Todd

00:02:59.530 --> 00:03:05.051
Kerpelman, who is in Studio
I. Todd, are you there?

00:03:05.051 --> 00:03:06.390
TODD KERPELMAN: Hi, I'm here.

00:03:06.390 --> 00:03:06.940
Yeah, sorry.

00:03:06.940 --> 00:03:09.540
I'm getting a little
tape delay.

00:03:09.540 --> 00:03:11.550
I'm kind of far away.

00:03:11.550 --> 00:03:13.480
But I'll try and stay current.

00:03:13.480 --> 00:03:16.230
BRUNO OLIVEIRA: And now we're
going to use our confidential

00:03:16.230 --> 00:03:19.070
teleporting technology to pass
this laptop all the way over

00:03:19.070 --> 00:03:19.780
to Studio I.

00:03:19.780 --> 00:03:20.700
TODD KERPELMAN: All
right, thanks.

00:03:20.700 --> 00:03:21.340
BRUNO OLIVEIRA: There we go.

00:03:21.340 --> 00:03:22.590
That worked.

00:03:22.590 --> 00:03:23.335
Is it the same laptop?

00:03:23.335 --> 00:03:25.175
TODD KERPELMAN: It is, in
fact, the same laptop.

00:03:25.175 --> 00:03:27.250
DANIEL GALPIN: That's our
Pixelante at work here.

00:03:27.250 --> 00:03:27.980
TODD KERPELMAN: There you go.

00:03:27.980 --> 00:03:30.870
This is a pretty laptop.

00:03:30.870 --> 00:03:31.900
That wasn't a product plug.

00:03:31.900 --> 00:03:32.766
It really is a nice laptop.

00:03:32.766 --> 00:03:33.560
DANIEL GALPIN: It is.

00:03:33.560 --> 00:03:34.310
It's beautiful.

00:03:34.310 --> 00:03:36.690
TODD KERPELMAN: So our next
mistake is using the Google

00:03:36.690 --> 00:03:41.060
APIs Console instead of the
Google Play Developer Console.

00:03:41.060 --> 00:03:45.860
And let's explain why this
matters and why you care.

00:03:45.860 --> 00:03:48.390
On the backend, we've got a set
of games services, right?

00:03:48.390 --> 00:03:52.820
And we also have on their
backend a whole bunch of other

00:03:52.820 --> 00:03:54.110
API-related stuff.

00:03:54.110 --> 00:03:55.310
BRUNO OLIVEIRA: And that's
a technical term.

00:03:55.310 --> 00:03:56.050
TODD KERPELMAN: That's
a technical term.

00:03:56.050 --> 00:03:58.330
That's what we call
it, API stuff.

00:03:58.330 --> 00:04:02.590
So the other API stuff is
generally set up using the

00:04:02.590 --> 00:04:04.620
Google APIs Developer Console.

00:04:04.620 --> 00:04:08.540
If you have added any Google
services in the past,

00:04:08.540 --> 00:04:11.590
generally on the web, but
certainly other devices, you

00:04:11.590 --> 00:04:13.050
may have seen this Developer
Console.

00:04:13.050 --> 00:04:18.040
It's at
code.google.com/api/console.

00:04:18.040 --> 00:04:20.620
Game services is generally
set up-- oh, sorry.

00:04:20.620 --> 00:04:23.900
And yes, this is generally where
you would set up your

00:04:23.900 --> 00:04:27.410
OAuth 2.0 client IDs, you could
review your quotas, you

00:04:27.410 --> 00:04:30.780
could add other team members
to your project, and so on.

00:04:30.780 --> 00:04:33.100
The game services are
generally set up and

00:04:33.100 --> 00:04:35.710
administered through the Google
Play Developer Console.

00:04:35.710 --> 00:04:37.980
This is the developer console
that you would be used to

00:04:37.980 --> 00:04:41.360
visiting if you're an Android
developer, but iOS and web

00:04:41.360 --> 00:04:43.275
guys, you're going to
have to go here too.

00:04:43.275 --> 00:04:45.940
At the Game Services Console,
this is where you would set up

00:04:45.940 --> 00:04:49.400
your leader boards, your
achievements, and then also

00:04:49.400 --> 00:04:51.280
where you would associate
these leader boards and

00:04:51.280 --> 00:04:53.790
achievements with the
OAuth 2.0 client IDs

00:04:53.790 --> 00:04:54.940
that you set up.

00:04:54.940 --> 00:04:56.810
So how does this work?

00:04:56.810 --> 00:05:00.190
In general, the Game Services
Developer Console manages all

00:05:00.190 --> 00:05:01.360
this for you.

00:05:01.360 --> 00:05:05.500
I go, I visit the Developer
Console, and I would say I

00:05:05.500 --> 00:05:06.485
want to link an application.

00:05:06.485 --> 00:05:08.910
I'm going to link an iOS
application or an Android

00:05:08.910 --> 00:05:11.200
application or a web
application.

00:05:11.200 --> 00:05:14.430
When I do that, the Play
Developer Console

00:05:14.430 --> 00:05:17.800
automatically sets up an OAuth
2.0 client ID for me.

00:05:17.800 --> 00:05:21.310
I don't need to go and visit
the Google APIs console.

00:05:21.310 --> 00:05:24.090
When it sets up that client
ID, it also sets up an

00:05:24.090 --> 00:05:28.397
association to that client ID
so that when I log in using

00:05:28.397 --> 00:05:31.900
that client ID, the service
knows, OK, this is associated

00:05:31.900 --> 00:05:34.000
with the leader boards and
achievements that the

00:05:34.000 --> 00:05:36.000
developer has created.

00:05:36.000 --> 00:05:40.450
If I were to go and visit the
Google APIs Console, because

00:05:40.450 --> 00:05:42.900
maybe I'm a web developer and
this is what I've done in the

00:05:42.900 --> 00:05:46.090
past, and I know all about
creating client IDs, I'll be

00:05:46.090 --> 00:05:48.590
able to create an OAuth 2.0
client ID, but on the game

00:05:48.590 --> 00:05:51.870
services side, it has no idea
that I've gone and done this.

00:05:51.870 --> 00:05:56.840
And so when a user signs in to
this client ID, the system is

00:05:56.840 --> 00:05:58.760
going to get confused and say,
well, it looks like a valid

00:05:58.760 --> 00:06:00.820
login, but I have no
idea what set of

00:06:00.820 --> 00:06:02.300
achievements this goes with.

00:06:02.300 --> 00:06:05.160
And you'll run into probably
some funky and hard to

00:06:05.160 --> 00:06:08.170
diagnose errors, which
are my favorite.

00:06:08.170 --> 00:06:10.330
There's one exception to this
rule, which is if you have

00:06:10.330 --> 00:06:15.330
created any Google APIs for your
game in the past, when

00:06:15.330 --> 00:06:18.240
you create a new project, a
brand new project, on the

00:06:18.240 --> 00:06:20.670
Google Play Developer Console,
it will give you a chance to

00:06:20.670 --> 00:06:26.040
say, hey, I've already created
some services, maybe using

00:06:26.040 --> 00:06:29.440
Drive or something,
with this game.

00:06:29.440 --> 00:06:32.910
And during creation time, it
will give you a moment to

00:06:32.910 --> 00:06:36.440
specify that project, and it
will go and create some

00:06:36.440 --> 00:06:39.240
associations during project
creation time.

00:06:39.240 --> 00:06:40.650
But this is the only
time that works.

00:06:40.650 --> 00:06:43.290
If after I create this project,
I then go and visit

00:06:43.290 --> 00:06:46.010
the Google APIs Console and
create another client, maybe,

00:06:46.010 --> 00:06:47.500
I'm going to cause confusion.

00:06:47.500 --> 00:06:50.360
So kind of a confusing subject,
particularly because

00:06:50.360 --> 00:06:52.520
at some point, you may actually
need to go and visit

00:06:52.520 --> 00:06:55.760
the Google APIs Console to do
sort of some weird, tweaky

00:06:55.760 --> 00:06:58.500
things, like you need to change
your OAuth redirect or

00:06:58.500 --> 00:07:02.200
something, and so it
does get confusing.

00:07:02.200 --> 00:07:06.340
But as a general rule, when at
all possible, do everything

00:07:06.340 --> 00:07:09.340
from the Google Play Developer
Console and forget that that

00:07:09.340 --> 00:07:10.155
old one exists.

00:07:10.155 --> 00:07:12.770
DANIEL GALPIN: It was our
opportunity to make things

00:07:12.770 --> 00:07:14.740
easier, allow you to do
everything all in one

00:07:14.740 --> 00:07:17.350
interface, and I think for some
people it actually made

00:07:17.350 --> 00:07:19.070
things more confusing.

00:07:19.070 --> 00:07:22.290
And one other thing that's
important to know is just

00:07:22.290 --> 00:07:25.230
understanding how OAuth works
is a little bit helpful in

00:07:25.230 --> 00:07:27.650
understanding why you have to do
some of the things you have

00:07:27.650 --> 00:07:31.030
to do in setting up your game
for Play Game services.

00:07:31.030 --> 00:07:33.650
BRUNO OLIVEIRA: It's important
to notice that if the same

00:07:33.650 --> 00:07:36.260
feature is available through
the APIs Console and the

00:07:36.260 --> 00:07:38.260
Developer Console, you should
always prefer to do it from

00:07:38.260 --> 00:07:40.510
the Developer Console, because
that's going to set up your

00:07:40.510 --> 00:07:42.070
game in the right way
to use your API.

00:07:42.070 --> 00:07:43.230
TODD KERPELMAN: It also doesn't
help that we call the

00:07:43.230 --> 00:07:44.030
Developer Console the
Developer Console.

00:07:44.030 --> 00:07:44.810
That sounds very generic.

00:07:44.810 --> 00:07:46.226
BRUNO OLIVEIRA: And the API
Console the API Console.

00:07:46.226 --> 00:07:46.950
TODD KERPELMAN: Yeah.

00:07:46.950 --> 00:07:49.480
I mean, really, we should be
calling it the Games Console

00:07:49.480 --> 00:07:50.280
or something.

00:07:50.280 --> 00:07:50.660
DANIEL GALPIN: Exactly.

00:07:50.660 --> 00:07:53.630
We've got to have some slick
name for it, like we have for

00:07:53.630 --> 00:07:54.240
this laptop.

00:07:54.240 --> 00:07:56.830
TODD KERPELMAN: We'll
work on that.

00:07:56.830 --> 00:07:59.950
So our next common mistake that
developers run into is

00:07:59.950 --> 00:08:00.300
getting throttled.

00:08:00.300 --> 00:08:01.355
DANIEL GALPIN: That
sounds painful.

00:08:01.355 --> 00:08:02.440
TODD KERPELMAN: It is.

00:08:02.440 --> 00:08:04.530
It is very painful

00:08:04.530 --> 00:08:05.780
So here's the issue.

00:08:08.010 --> 00:08:11.110
When you set up your service,
you'll probably notice, if you

00:08:11.110 --> 00:08:13.830
go and visit the Google APIs
Console-- which you generally,

00:08:13.830 --> 00:08:15.820
probably shouldn't, because we
just talked about that--

00:08:15.820 --> 00:08:18.170
you might notice that your
quota is set to some

00:08:18.170 --> 00:08:24.280
incredibly high QPD,
Quota Per Day.

00:08:24.280 --> 00:08:27.140
And so you'll get, hey, look
you've 80 gazillion calls you

00:08:27.140 --> 00:08:27.870
can make a day.

00:08:27.870 --> 00:08:29.260
And developer's, like, great,
I'm going to make

00:08:29.260 --> 00:08:30.770
calls all the time.

00:08:30.770 --> 00:08:36.260
However, we do throttle similar
calls to a few per

00:08:36.260 --> 00:08:39.620
minute, so calls of the exact
same type will get throttled.

00:08:39.620 --> 00:08:40.520
What does this mean?

00:08:40.520 --> 00:08:43.929
Well, if you're incrementing
four different achievements at

00:08:43.929 --> 00:08:45.510
once, that's actually OK.

00:08:45.510 --> 00:08:47.570
We have different
limits for that.

00:08:47.570 --> 00:08:49.900
And in general, as long as
you're acting reasonable

00:08:49.900 --> 00:08:51.770
there, you're OK.

00:08:51.770 --> 00:08:53.720
However, if you were to try
and increment the same

00:08:53.720 --> 00:08:57.840
achievement, say, four times
in 10 seconds or 10 times a

00:08:57.840 --> 00:09:01.370
minute, that's bad, and that
would probably cause about

00:09:01.370 --> 00:09:03.330
half of your calls to fail.

00:09:03.330 --> 00:09:05.860
What's even more interesting is
half your calls will fail,

00:09:05.860 --> 00:09:07.990
but if you were to go and look
up your quota, it would still

00:09:07.990 --> 00:09:11.620
say, oh, you're using 0% or 1%
of your quota because that's

00:09:11.620 --> 00:09:14.600
really talking about your 80
gazillion calls per day and

00:09:14.600 --> 00:09:17.490
not mentioning the fact
that half of your

00:09:17.490 --> 00:09:18.800
calls are getting throttled.

00:09:18.800 --> 00:09:20.220
The only way you would actually
know you're getting

00:09:20.220 --> 00:09:23.170
throttled is to look for error
messages that get returned by

00:09:23.170 --> 00:09:26.370
the service and make a note
of those, or log those, or

00:09:26.370 --> 00:09:27.150
something like that.

00:09:27.150 --> 00:09:29.750
BRUNO OLIVEIRA: What if I have
a game that it's a game where

00:09:29.750 --> 00:09:31.910
I have to kill enemies, and
then I have an incremental

00:09:31.910 --> 00:09:34.560
achievement which is to kill
10 gazillion enemies?

00:09:34.560 --> 00:09:35.850
And then how do I do that?

00:09:35.850 --> 00:09:37.810
TODD KERPELMAN: That is a very
good question, and that

00:09:37.810 --> 00:09:39.190
actually brings us to
our next slide.

00:09:39.190 --> 00:09:40.286
Hey, look at that!

00:09:40.286 --> 00:09:41.510
Wow.

00:09:41.510 --> 00:09:43.500
It's almost like you knew
what my presentation

00:09:43.500 --> 00:09:45.110
was going to be about.

00:09:45.110 --> 00:09:46.620
So we've got our incremental
achievement.

00:09:46.620 --> 00:09:48.830
That's kill 5,000 enemies.

00:09:48.830 --> 00:09:51.180
The wrong way to do it, the bad
way to do it, would be to

00:09:51.180 --> 00:09:54.110
make an achievement.increment
call every time the player

00:09:54.110 --> 00:09:55.040
shoots an enemy.

00:09:55.040 --> 00:09:57.870
Let's assume this happens pretty
often, and I'm shooting

00:09:57.870 --> 00:09:58.980
enemies left and right.

00:09:58.980 --> 00:10:00.390
You don't want to be making
that increment

00:10:00.390 --> 00:10:01.860
call all the time.

00:10:01.860 --> 00:10:05.170
The best way to do it would be
wait until the end of a round,

00:10:05.170 --> 00:10:07.690
or wait until a few seconds have
passed, or something like

00:10:07.690 --> 00:10:10.540
that, and then make an increment
call based on the

00:10:10.540 --> 00:10:13.860
number of enemies I've killed
up to that point.

00:10:13.860 --> 00:10:15.950
So at the end of a round, it
says, oh, look, you've killed

00:10:15.950 --> 00:10:20.910
38 enemies, then I can submit
that increment call.

00:10:20.910 --> 00:10:23.980
Another mistake I've seen some
developers make is constantly

00:10:23.980 --> 00:10:25.570
submitting high scores.

00:10:25.570 --> 00:10:28.190
If you're playing a game, and
throughout the game my score

00:10:28.190 --> 00:10:31.150
keeps getting higher and higher,
you don't want to be

00:10:31.150 --> 00:10:33.930
calling, hey, submit new
high score every time

00:10:33.930 --> 00:10:35.150
my score goes up.

00:10:35.150 --> 00:10:36.610
Wait until the end of
the game, and then

00:10:36.610 --> 00:10:37.710
make that one call.

00:10:37.710 --> 00:10:40.290
It is true that, I suppose,
if my game crashes halfway

00:10:40.290 --> 00:10:42.440
through, I won't get a chance
to get that partial high

00:10:42.440 --> 00:10:45.710
score, but in general, I think
you're better off.

00:10:45.710 --> 00:10:47.170
Just wait until the end
of the round, submit

00:10:47.170 --> 00:10:47.830
that final high score.

00:10:47.830 --> 00:10:48.110
BRUNO OLIVEIRA: Yeah.

00:10:48.110 --> 00:10:50.330
If you're writing a game, and
you don't expect the game to

00:10:50.330 --> 00:10:52.770
last for five minutes,
you're pretty much

00:10:52.770 --> 00:10:53.480
in trouble, I think.

00:10:53.480 --> 00:10:56.310
DANIEL GALPIN: I would say don't
code around the fact

00:10:56.310 --> 00:10:57.730
that you expect your game
to crash regularly.

00:10:57.730 --> 00:10:58.520
TODD KERPELMAN: Yeah.

00:10:58.520 --> 00:11:00.330
I supposed you be better off
just making sure your game

00:11:00.330 --> 00:11:01.020
doesn't crash.

00:11:01.020 --> 00:11:04.380
DANIEL GALPIN: And just to be
clear, at some point we

00:11:04.380 --> 00:11:06.180
actually hope to
make it easier.

00:11:06.180 --> 00:11:10.320
We actually hope to do some of
this packaging up of multiple

00:11:10.320 --> 00:11:12.180
increment.achievement calls
so that you don't have to.

00:11:12.180 --> 00:11:13.760
BRUNO OLIVEIRA: It looks like
there's room for improvement

00:11:13.760 --> 00:11:14.590
on our side there.

00:11:14.590 --> 00:11:15.790
TODD KERPELMAN: There's room for
improvement on our side.

00:11:15.790 --> 00:11:18.270
We definitely could do a better
job, both in terms of

00:11:18.270 --> 00:11:22.050
the library helping to mitigate
this, as well as

00:11:22.050 --> 00:11:24.930
letting developers
know that their

00:11:24.930 --> 00:11:25.930
calls are being throttled.

00:11:25.930 --> 00:11:29.580
Right now, unless you're
analyzing the responses that

00:11:29.580 --> 00:11:31.140
come back, it's pretty
hard for you as a

00:11:31.140 --> 00:11:32.360
developer to know.

00:11:32.360 --> 00:11:33.920
BRUNO OLIVEIRA: One thing to
remember is definitely make

00:11:33.920 --> 00:11:35.690
sure to submit the high
score when you

00:11:35.690 --> 00:11:36.760
get an onStop, though.

00:11:36.760 --> 00:11:38.530
Because when you get an onStop,
it might be that your

00:11:38.530 --> 00:11:39.720
applicaton's going
to be killed.

00:11:39.720 --> 00:11:42.210
So in that case, you definitely
do want to make a

00:11:42.210 --> 00:11:42.490
call to that.

00:11:42.490 --> 00:11:43.810
DANIEL GALPIN: You really want
to honor the life cycle

00:11:43.810 --> 00:11:46.430
whenever possible in all these
things, avoid data loss.

00:11:46.430 --> 00:11:48.820
But don't just keep incrementing
the high score

00:11:48.820 --> 00:11:51.390
every time you kill the next
alien, because that's just

00:11:51.390 --> 00:11:53.630
going to be ridiculous, and our
servers are going to say,

00:11:53.630 --> 00:11:54.640
down on that.

00:11:54.640 --> 00:11:55.250
TODD KERPELMAN: Right.

00:11:55.250 --> 00:11:59.760
By the way, one other issue I've
seen rarely was an issue

00:11:59.760 --> 00:12:01.630
where a developer was
constantly checking

00:12:01.630 --> 00:12:02.520
achievements.

00:12:02.520 --> 00:12:04.520
I believe to actually--

00:12:04.520 --> 00:12:07.400
this was sort of as a weird way
of making sure they were

00:12:07.400 --> 00:12:09.540
submitting the right number of
incremental achievements, is

00:12:09.540 --> 00:12:12.380
they were constantly pinging
our server to be, like, how

00:12:12.380 --> 00:12:15.150
much achievement progress
have you made so far?

00:12:15.150 --> 00:12:17.140
OK, now that I have this number,
now I know the exact

00:12:17.140 --> 00:12:19.140
right amount to increment.

00:12:19.140 --> 00:12:23.500
I think this was kind of a bug
that they forgot to cache the

00:12:23.500 --> 00:12:24.740
data or something like that.

00:12:24.740 --> 00:12:29.670
But if you're calling the same
read multiple times, that can

00:12:29.670 --> 00:12:30.680
be just as bad as a write.

00:12:30.680 --> 00:12:32.120
DANIEL GALPIN: The thing I
love about working with

00:12:32.120 --> 00:12:36.470
platforms is that you really
find incredibly creative ways

00:12:36.470 --> 00:12:40.370
that people tend to
misuse your APIs.

00:12:40.370 --> 00:12:43.580
So even though this may look
like our mistake, this is

00:12:43.580 --> 00:12:45.050
actually your mistake.

00:12:45.050 --> 00:12:48.220
So do try to avoid doing
these things.

00:12:48.220 --> 00:12:51.420
TODD KERPELMAN: We're sounding
a little defensive.

00:12:51.420 --> 00:12:54.280
DANIEL GALPIN: Well, this is
a show about mistakes.

00:12:54.280 --> 00:12:55.700
We're making plenty
of mistakes.

00:12:55.700 --> 00:12:59.478
So mistake one, we're acting
too defensive.

00:12:59.478 --> 00:13:01.360
BRUNO OLIVEIRA: Let's make
note of our mistakes.

00:13:01.360 --> 00:13:03.530
DANIEL GALPIN: Exactly, during
the show about mistakes.

00:13:03.530 --> 00:13:05.320
BRUNO OLIVEIRA: All right,
so onto the next

00:13:05.320 --> 00:13:06.470
mistake, if you will.

00:13:06.470 --> 00:13:09.680
Number four, publishing apk but
not the game services, or

00:13:09.680 --> 00:13:10.990
vice versa.

00:13:10.990 --> 00:13:14.290
So this may be a little
counterintuitive, but an

00:13:14.290 --> 00:13:16.310
application and the game
settings are things that are

00:13:16.310 --> 00:13:19.250
linked, but they also exist
separately, so you might

00:13:19.250 --> 00:13:22.100
actually be able to publish
one without the other.

00:13:22.100 --> 00:13:24.290
If you just publish your app,
what's going to happen is that

00:13:24.290 --> 00:13:26.380
you're going to have a game
that's published, but your

00:13:26.380 --> 00:13:27.520
game settings are not.

00:13:27.520 --> 00:13:31.150
Which means that anytime anybody
tries to use a game

00:13:31.150 --> 00:13:33.610
API from you game, you're going
to go this weird error

00:13:33.610 --> 00:13:35.620
because the game settings
are not published.

00:13:35.620 --> 00:13:37.890
You might not see the error
because you probably listed

00:13:37.890 --> 00:13:40.880
yourself as a trusted tester on
your own games where you're

00:13:40.880 --> 00:13:43.110
going to be able to use
the game's API.

00:13:43.110 --> 00:13:46.350
But then whenever anybody else
tries to use that, they're

00:13:46.350 --> 00:13:47.660
going to get an error.

00:13:47.660 --> 00:13:50.100
So it's important to make sure
that both are published.

00:13:50.100 --> 00:13:51.620
The other situation
is also possible.

00:13:51.620 --> 00:13:53.450
You might just end up publishing
the game settings,

00:13:53.450 --> 00:13:55.040
but then forgetting to
publish the app.

00:13:55.040 --> 00:13:56.700
DANIEL GALPIN: But then people
won't see that on Google Play.

00:13:56.700 --> 00:13:57.280
BRUNO OLIVEIRA: Exactly.

00:13:57.280 --> 00:13:59.480
It's less serious than
the other scenario,

00:13:59.480 --> 00:14:01.390
but it's also possible.

00:14:01.390 --> 00:14:03.490
So you'll definitely want to
make sure that if you're

00:14:03.490 --> 00:14:05.740
publishing your game, you want
to publish both the app and

00:14:05.740 --> 00:14:07.540
the game settings.

00:14:07.540 --> 00:14:10.730
Just taking a look at what the
screens look like, on this

00:14:10.730 --> 00:14:12.330
screen, you're publishing
the game setting.

00:14:12.330 --> 00:14:15.070
So this is the game setting
screen, And you have this

00:14:15.070 --> 00:14:17.070
Publish Game item over there.

00:14:17.070 --> 00:14:18.880
So that's publishing
the game settings.

00:14:18.880 --> 00:14:21.870
Now this other screen is where
you publish the actual app.

00:14:21.870 --> 00:14:23.770
So notice that you are in store
listing, and they don't

00:14:23.770 --> 00:14:26.710
even have the Publish App option
over there, and that

00:14:26.710 --> 00:14:28.200
causes the actual app
to be published.

00:14:28.200 --> 00:14:30.950
So you want to make sure to do
both steps to make sure that

00:14:30.950 --> 00:14:32.910
your game can be used outside
of your company.

00:14:32.910 --> 00:14:33.250
DANIEL GALPIN: Exactly.

00:14:33.250 --> 00:14:35.560
And people may ask, well, why do
you even bother doing this?

00:14:35.560 --> 00:14:38.450
And the reality is when you look
at the game life cycle,

00:14:38.450 --> 00:14:40.480
you're actually going to want
to do things like add

00:14:40.480 --> 00:14:43.730
achievements that your trusted
testers can see before your

00:14:43.730 --> 00:14:45.190
actual end users can see it.

00:14:45.190 --> 00:14:47.180
So in order to do that, we
actually like to create those

00:14:47.180 --> 00:14:49.160
achievements that your trusted
testers can see them

00:14:49.160 --> 00:14:52.890
immediately, and then once you
actually publish the game

00:14:52.890 --> 00:14:55.797
services with the game data,
then your real users will be

00:14:55.797 --> 00:14:56.180
able to see it.

00:14:56.180 --> 00:14:56.760
BRUNO OLIVEIRA: Exactly.

00:14:56.760 --> 00:14:59.370
Suppose, for instance, you
have an existing game on

00:14:59.370 --> 00:15:02.345
Google Play, and then you just
want to start working on the

00:15:02.345 --> 00:15:03.810
game services, but without
publishing it.

00:15:03.810 --> 00:15:05.780
So it makes sense to have the
app published, but not the

00:15:05.780 --> 00:15:06.340
game settings.

00:15:06.340 --> 00:15:09.430
And then when you're ready to
launch the game services, then

00:15:09.430 --> 00:15:12.280
you do that.

00:15:12.280 --> 00:15:14.330
Next common mistake is signing
in with an account

00:15:14.330 --> 00:15:15.580
that isn't a tester.

00:15:17.640 --> 00:15:18.960
TODD KERPELMAN: This is related
to what we were

00:15:18.960 --> 00:15:19.830
talking about before.

00:15:19.830 --> 00:15:22.940
If you have a set of
achievements or leader boards

00:15:22.940 --> 00:15:26.590
that have not been published,
they are only available to

00:15:26.590 --> 00:15:29.540
users that are listed
as testers.

00:15:29.540 --> 00:15:33.310
Now that means that you need
to go here in this little

00:15:33.310 --> 00:15:37.430
testing section of the Google
Play Developer Console and

00:15:37.430 --> 00:15:40.320
confirm that the account you're
testing with is, in

00:15:40.320 --> 00:15:43.430
fact, listed here among
the test accounts.

00:15:43.430 --> 00:15:47.160
Basically, if this doesn't
happen, you'll get sort of

00:15:47.160 --> 00:15:49.720
mysterious errors where it'll
sort of be like, yeah, I'm

00:15:49.720 --> 00:15:52.130
logged in, but I don't see
any game services.

00:15:52.130 --> 00:15:53.220
I don't know what you're
talking about.

00:15:53.220 --> 00:15:54.580
These achievements
don't exist.

00:15:54.580 --> 00:15:56.940
DANIEL GALPIN: This game
doesn't exist.

00:15:56.940 --> 00:15:59.980
You'll actually end up getting
back 404-looking errors.

00:15:59.980 --> 00:16:01.900
BRUNO OLIVEIRA: It's going to
pretend that it doesn't know

00:16:01.900 --> 00:16:02.630
anything about your game.

00:16:02.630 --> 00:16:03.080
Like, your game?

00:16:03.080 --> 00:16:03.770
Never heard of it.

00:16:03.770 --> 00:16:05.990
TODD KERPELMAN: Which is
sort of correct, right?

00:16:05.990 --> 00:16:08.385
Like you don't want random
people to try and submit

00:16:08.385 --> 00:16:08.670
achievements.

00:16:08.670 --> 00:16:09.535
BRUNO OLIVEIRA: And
probe your game.

00:16:09.535 --> 00:16:11.040
TODD KERPELMAN: And
probe your game.

00:16:11.040 --> 00:16:14.220
And so, if your set of services,
your achievements,

00:16:14.220 --> 00:16:16.890
your leader boards are in a
testable but not published

00:16:16.890 --> 00:16:19.550
state, they can only be accessed
by accounts that

00:16:19.550 --> 00:16:20.640
you've listed here as testers.

00:16:20.640 --> 00:16:22.700
BRUNO OLIVEIRA: And notice that
even the developer who

00:16:22.700 --> 00:16:25.600
published the game settings is
not automatically a tester

00:16:25.600 --> 00:16:27.630
unless they have an account
on Google+.

00:16:27.630 --> 00:16:30.300
So if your developer account
doesn't have an account on

00:16:30.300 --> 00:16:32.410
Google+, you have to also list
yourself as a tester.

00:16:32.410 --> 00:16:35.260
So just a general rule, just
list yourself as a tester,

00:16:35.260 --> 00:16:38.270
because that prevents
those corner cases.

00:16:38.270 --> 00:16:40.570
TODD KERPELMAN: Basically always
go to that Tester tab,

00:16:40.570 --> 00:16:43.420
make sure that all the accounts
that you're actually

00:16:43.420 --> 00:16:45.010
planning on testing with
are listed there.

00:16:45.010 --> 00:16:47.610
Because chances are, some
of them might not be.

00:16:47.610 --> 00:16:49.200
DANIEL GALPIN: And that is an
important corner case, though,

00:16:49.200 --> 00:16:52.350
to note, that if your publisher
account is Plus

00:16:52.350 --> 00:16:58.340
enabled and you try to use it,
bad things will happen.

00:16:58.340 --> 00:17:01.442
So do note that.

00:17:01.442 --> 00:17:06.190
BRUNO OLIVEIRA: Next is another
common mistake is to

00:17:06.190 --> 00:17:09.250
mistake your client ID for
your app ID in Android.

00:17:09.250 --> 00:17:10.780
This is a pretty common one.

00:17:10.780 --> 00:17:13.589
And it doesn't help that the
Developer Console gives you

00:17:13.589 --> 00:17:16.589
the client ID because the client
ID is what you need for

00:17:16.589 --> 00:17:19.410
web and is what you need
for iOS, but for

00:17:19.410 --> 00:17:20.609
Android, it's different.

00:17:20.609 --> 00:17:24.099
So if you look at an Android
manifest file, you're going to

00:17:24.099 --> 00:17:27.619
see that metadata tag that
points to a resource file, and

00:17:27.619 --> 00:17:29.310
that resource file
has your app ID.

00:17:29.310 --> 00:17:31.420
So the app ID that you want to
make sure is there is this

00:17:31.420 --> 00:17:33.690
numerical portion of
your client ID, so

00:17:33.690 --> 00:17:35.035
this is only digits.

00:17:35.035 --> 00:17:36.720
Now it is a mistake to use the

00:17:36.720 --> 00:17:39.330
.apps.googleusercontent.com there.

00:17:39.330 --> 00:17:40.760
You only want the numbers
in there.

00:17:40.760 --> 00:17:41.900
So that's a pretty
common mistake.

00:17:41.900 --> 00:17:43.520
DANIEL GALPIN: And the other
thing to note about this is

00:17:43.520 --> 00:17:45.450
there's a reason we put it
into a string resource.

00:17:45.450 --> 00:17:48.010
You think, oh, I can just take
that number, and I can paste

00:17:48.010 --> 00:17:49.370
it right into the metadata
[INAUDIBLE]

00:17:49.370 --> 00:17:51.616
manifest, and it won't work.

00:17:51.616 --> 00:17:53.350
BRUNO OLIVEIRA: Because it
needs to be a string.

00:17:53.350 --> 00:17:54.430
DANIEL GALPIN: Because it
needs to be a string.

00:17:54.430 --> 00:17:57.730
And if the XML parser sees
a number in there, it'll

00:17:57.730 --> 00:17:59.030
actually turn it into
an integer.

00:17:59.030 --> 00:18:00.450
BRUNO OLIVEIRA: Very
helpfully.

00:18:00.450 --> 00:18:01.710
DANIEL GALPIN: Very helpfully.

00:18:01.710 --> 00:18:04.330
And then our services will say,
wait, it's not a string,

00:18:04.330 --> 00:18:06.770
and will do bad things.

00:18:06.770 --> 00:18:07.700
So leave it as a string.

00:18:07.700 --> 00:18:09.640
And some people are like,
well, I have to make

00:18:09.640 --> 00:18:10.700
resources for this?

00:18:10.700 --> 00:18:14.740
But you do, and this is just
part of using it, and it'll

00:18:14.740 --> 00:18:15.920
make everything really happy.

00:18:15.920 --> 00:18:18.650
BRUNO OLIVEIRA: Plus it's much
more organized to have this as

00:18:18.650 --> 00:18:21.120
a separate resource rather than
having it hard coded into

00:18:21.120 --> 00:18:22.370
your Android manifest.

00:18:22.370 --> 00:18:23.565
It just looks better.

00:18:23.565 --> 00:18:24.640
DANIEL GALPIN: Yeah, right.

00:18:24.640 --> 00:18:25.070
Right.

00:18:25.070 --> 00:18:25.740
Absolutely.

00:18:25.740 --> 00:18:27.440
Because people looking in the
manifest can tell that's the

00:18:27.440 --> 00:18:30.440
app ID instead of looking at the
manifest data, which also

00:18:30.440 --> 00:18:33.760
says that it's the app ID.

00:18:33.760 --> 00:18:37.280
BRUNO OLIVEIRA: And so,
onto the last mistake

00:18:37.280 --> 00:18:38.050
we're going to cover.

00:18:38.050 --> 00:18:39.840
Certainly not the last mistake
that we're going to make.

00:18:39.840 --> 00:18:40.870
DANIEL GALPIN: No, no.

00:18:40.870 --> 00:18:43.140
Several, at least, I've
already made in this

00:18:43.140 --> 00:18:43.465
presentation.

00:18:43.465 --> 00:18:45.490
BRUNO OLIVEIRA: So it's
using the wrong

00:18:45.490 --> 00:18:46.560
certificate in Android.

00:18:46.560 --> 00:18:50.250
This is actually kind of a deep
topic, so it's useful to

00:18:50.250 --> 00:18:52.570
have something of an
understanding of how these

00:18:52.570 --> 00:18:53.790
things actually work.

00:18:53.790 --> 00:18:55.410
On your device, you
have your game.

00:18:55.410 --> 00:18:58.750
So like any Android app, your
game has a package name.

00:18:58.750 --> 00:19:00.810
Let's suppose it's
com.example.yourgame, very

00:19:00.810 --> 00:19:02.035
creatively.

00:19:02.035 --> 00:19:02.970
[INAUDIBLE]

00:19:02.970 --> 00:19:04.335
DANIEL GALPIN: It won't let you
publish that package name.

00:19:04.335 --> 00:19:05.340
BRUNO OLIVEIRA: No, it won't.

00:19:05.340 --> 00:19:07.880
DANIEL GALPIN: But this
is just this example.

00:19:07.880 --> 00:19:08.700
Don't use this.

00:19:08.700 --> 00:19:09.830
BRUNO OLIVEIRA: Exactly.

00:19:09.830 --> 00:19:13.020
And then your game is, of
course, signed by a certain

00:19:13.020 --> 00:19:15.900
certificate, so let's just
assume that that's the

00:19:15.900 --> 00:19:16.700
certificate you're
signing with.

00:19:16.700 --> 00:19:17.510
DANIEL GALPIN: Very short one.

00:19:17.510 --> 00:19:18.680
BRUNO OLIVEIRA: Very
short one.

00:19:18.680 --> 00:19:21.600
And then of course, when you try
to make a game's API call,

00:19:21.600 --> 00:19:24.120
what's going to happen is that
the server is going to see if

00:19:24.120 --> 00:19:25.820
this game is actually
authorized to

00:19:25.820 --> 00:19:27.040
make games API calls.

00:19:27.040 --> 00:19:29.520
And the way it does that is it's
going to check your list

00:19:29.520 --> 00:19:32.030
of linked apps in the
Developer Console.

00:19:32.030 --> 00:19:35.220
So in order for the call to be
authenticated, there needs to

00:19:35.220 --> 00:19:38.630
be a linked app that exactly
matches that package name and

00:19:38.630 --> 00:19:40.980
certificate fingerprint in
the Developer Console.

00:19:40.980 --> 00:19:43.470
So over here, we see that
there's a match because

00:19:43.470 --> 00:19:45.930
there's a linked app with
exactly that package name and

00:19:45.930 --> 00:19:49.090
exactly that certificate
fingerprint, so the games API

00:19:49.090 --> 00:19:50.890
call is going to succeed.

00:19:50.890 --> 00:19:52.640
Now if there isn't such a thing,
then you're going to

00:19:52.640 --> 00:19:53.380
see an error.

00:19:53.380 --> 00:19:57.550
So this is by far the most
common cause of errors.

00:19:57.550 --> 00:20:01.590
So to make sure that you're
setting this up right, when

00:20:01.590 --> 00:20:03.710
you add a linked app,
you see this screen.

00:20:03.710 --> 00:20:05.640
And then you go Save and
Continue, and then the next

00:20:05.640 --> 00:20:07.550
step is Authorizing Your App.

00:20:07.550 --> 00:20:09.400
And then when you click on
Authorize Your App Now, you're

00:20:09.400 --> 00:20:12.210
going to see this
dialogue box.

00:20:12.210 --> 00:20:14.360
In this dialogue box, you have
to fill in your package name

00:20:14.360 --> 00:20:16.080
and the certificate
fingerprint.

00:20:16.080 --> 00:20:20.490
Now this is the step where many
people make a mistake.

00:20:20.490 --> 00:20:23.680
You have to take a certificate
fingerprint from your release

00:20:23.680 --> 00:20:25.850
certificate that you have
on your machine.

00:20:25.850 --> 00:20:28.680
You see, there is this example
there, so this is not an

00:20:28.680 --> 00:20:30.840
example that you should use.

00:20:30.840 --> 00:20:33.350
It's just here to show you
what it should look like.

00:20:33.350 --> 00:20:34.270
DANIEL GALPIN: That's why it
has "example" next to it.

00:20:34.270 --> 00:20:35.050
BRUNO OLIVEIRA: Exactly.

00:20:35.050 --> 00:20:35.900
It's an example.

00:20:35.900 --> 00:20:38.410
DANIEL GALPIN: But
unfortunately, a lot of people

00:20:38.410 --> 00:20:42.410
will just paste that right in,
and what we should do is we

00:20:42.410 --> 00:20:42.910
should catch that.

00:20:42.910 --> 00:20:45.310
We should say, hey, don't
use the example string.

00:20:45.310 --> 00:20:47.260
BRUNO OLIVEIRA: But then what
happens if their certificate

00:20:47.260 --> 00:20:48.880
is actually identical
to the example?

00:20:48.880 --> 00:20:50.050
DANIEL GALPIN: That's true.

00:20:50.050 --> 00:20:50.760
Unlikely, but possible.

00:20:50.760 --> 00:20:52.120
BRUNO OLIVEIRA: Unlikely,
but possible.

00:20:52.120 --> 00:20:54.590
Also, you may notice that if you
have an APK that's already

00:20:54.590 --> 00:20:58.240
published, maybe there's going
to be a certificate

00:20:58.240 --> 00:20:59.310
suggestion over here.

00:20:59.310 --> 00:21:02.820
But then you should always make
sure, don't trust that,

00:21:02.820 --> 00:21:05.330
and make sure that you're
checking that your certificate

00:21:05.330 --> 00:21:06.360
is actually that one.

00:21:06.360 --> 00:21:06.570
DANIEL GALPIN: Yeah.

00:21:06.570 --> 00:21:08.780
If that suggestion is wrong,
that's our mistake,

00:21:08.780 --> 00:21:09.340
unfortunately.

00:21:09.340 --> 00:21:12.350
But if you publish it, people
are going to be confused and

00:21:12.350 --> 00:21:13.120
not be able to log in.

00:21:13.120 --> 00:21:14.550
BRUNO OLIVEIRA: It's
always worth

00:21:14.550 --> 00:21:16.630
checking out if it's right.

00:21:16.630 --> 00:21:20.880
And to do that, you can use the
keytool command line tool.

00:21:20.880 --> 00:21:23.530
Essentially to get your debug
certificate fingerprint, this

00:21:23.530 --> 00:21:24.250
is the command line.

00:21:24.250 --> 00:21:28.610
You just go keytool -exportcert,
and the alias

00:21:28.610 --> 00:21:31.660
option is the name of your
certificate, which for your

00:21:31.660 --> 00:21:34.110
debug certificate is going
to be androiddebugkey.

00:21:34.110 --> 00:21:36.060
And then this is a keystore
file, which is usually in

00:21:36.060 --> 00:21:37.890
.android/debug.keystore.

00:21:37.890 --> 00:21:40.440
So this is how you get your
debug certificate's

00:21:40.440 --> 00:21:41.600
fingerprint.

00:21:41.600 --> 00:21:44.100
And then of course, you should
also get your release

00:21:44.100 --> 00:21:46.710
certificate's fingerprints,
which you can do using this

00:21:46.710 --> 00:21:47.630
command line.

00:21:47.630 --> 00:21:49.440
In this case, you're going to
have to replace your keyname

00:21:49.440 --> 00:21:52.220
over there and then give the
path to your keystore.

00:21:52.220 --> 00:21:54.570
Once you have those two
fingerprints, what we

00:21:54.570 --> 00:21:57.890
recommend is that you have two
different client IDs in the

00:21:57.890 --> 00:22:00.060
same product with the
same package name.

00:22:00.060 --> 00:22:02.980
But those two different client
IDs, one of them has your

00:22:02.980 --> 00:22:05.830
debug certificate fingerprint,
and the other one has your

00:22:05.830 --> 00:22:07.360
release certificate
fingerprint.

00:22:07.360 --> 00:22:09.710
And they exist side by side,
and what this means is that

00:22:09.710 --> 00:22:12.430
you can either sign into your
game using your debug

00:22:12.430 --> 00:22:14.575
certificate or using your
release certificate.

00:22:14.575 --> 00:22:17.470
DANIEL GALPIN: And because we
only allow a limited number of

00:22:17.470 --> 00:22:22.540
client IDs for each game, you
should consider using that

00:22:22.540 --> 00:22:26.750
debug certificate for all of
your development devices and

00:22:26.750 --> 00:22:28.440
for all of your developers.

00:22:28.440 --> 00:22:31.360
Because otherwise, you're going
to run out of those

00:22:31.360 --> 00:22:32.990
client IDs very, very quickly.

00:22:32.990 --> 00:22:34.890
BRUNO OLIVEIRA: And also if
you delete client IDs,

00:22:34.890 --> 00:22:36.740
remember that it takes a really
long time for them to

00:22:36.740 --> 00:22:37.920
actually go away.

00:22:37.920 --> 00:22:40.670
Because after you delete them,
it takes almost a week until

00:22:40.670 --> 00:22:41.650
they actually disappear.

00:22:41.650 --> 00:22:42.110
DANIEL GALPIN: Yeah.

00:22:42.110 --> 00:22:45.710
This causes a lot of confusion,
and the mistake on

00:22:45.710 --> 00:22:48.080
our side is that we don't make
it really clear enough that if

00:22:48.080 --> 00:22:51.890
you delete, the delete doesn't
quite automatically happen.

00:22:51.890 --> 00:22:55.180
So the best thing to do is
never delete client IDs.

00:22:55.180 --> 00:22:56.540
BRUNO OLIVEIRA: Always create
one with your debug

00:22:56.540 --> 00:22:59.030
certificate, one with your
release certificate, and then

00:22:59.030 --> 00:23:03.395
hopefully, you're never going to
have to touch those again.

00:23:03.395 --> 00:23:05.930
TODD KERPELMAN: As the
non-Android guy in the group,

00:23:05.930 --> 00:23:07.470
why do you need two
certificates

00:23:07.470 --> 00:23:08.080
in the first place?

00:23:08.080 --> 00:23:09.860
Why can't I just use my
release certificate

00:23:09.860 --> 00:23:10.200
everywhere?

00:23:10.200 --> 00:23:11.690
BRUNO OLIVEIRA: You could, but
then this means that during

00:23:11.690 --> 00:23:13.680
debugging, you would always have
to sign your app with the

00:23:13.680 --> 00:23:14.700
release keys.

00:23:14.700 --> 00:23:16.910
And for some companies,
especially for large

00:23:16.910 --> 00:23:19.040
companies, they want to keep
their release keys,

00:23:19.040 --> 00:23:22.230
certificates, in a very secure
way, so only certain people

00:23:22.230 --> 00:23:23.230
have access to it.

00:23:23.230 --> 00:23:25.630
This is to prevent somebody from
grabbing a signed APK and

00:23:25.630 --> 00:23:27.760
uploading it into Google Play.

00:23:27.760 --> 00:23:30.720
So you might want to safeguard
your release certificate, and

00:23:30.720 --> 00:23:33.380
then only work with the debug
certificate during debugging.

00:23:33.380 --> 00:23:35.290
And then only at the last step,
when you're actually

00:23:35.290 --> 00:23:37.470
going to launch, you sign it
with your release certificate.

00:23:37.470 --> 00:23:39.200
DANIEL GALPIN: And it's very,
very easy to take that debug

00:23:39.200 --> 00:23:41.690
keystore and simply copy it into
every single one of your

00:23:41.690 --> 00:23:44.510
developer's machines and
just use it there.

00:23:44.510 --> 00:23:45.440
BRUNO OLIVEIRA: It's just
copying a file.

00:23:45.440 --> 00:23:46.080
It's easy.

00:23:46.080 --> 00:23:46.790
DANIEL GALPIN: Exactly.

00:23:46.790 --> 00:23:50.950
And so that's definitely
what we recommend.

00:23:50.950 --> 00:23:53.060
And also really do safeguard
your release certificate

00:23:53.060 --> 00:23:54.360
because it's really, really
important that

00:23:54.360 --> 00:23:57.490
you never lose it.

00:23:57.490 --> 00:24:01.250
And that's a non-gameplay
services kind of developer

00:24:01.250 --> 00:24:04.015
mistake, but it's a really,
really bad mistake.

00:24:04.015 --> 00:24:05.120
BRUNO OLIVEIRA: Exactly.

00:24:05.120 --> 00:24:08.770
And also, we recommend that
you take a look at our

00:24:08.770 --> 00:24:10.210
documentation.

00:24:10.210 --> 00:24:13.700
We have all of our API calls,
we have the concepts, and we

00:24:13.700 --> 00:24:16.530
also have the step-by-step
troubleshooting guide.

00:24:16.530 --> 00:24:18.890
So when things go wrong,
you can go into that

00:24:18.890 --> 00:24:20.910
troubleshooting guide and go
step-by-step, and then

00:24:20.910 --> 00:24:22.150
hopefully, that's going
to help you figure

00:24:22.150 --> 00:24:23.770
out what went wrong.

00:24:23.770 --> 00:24:26.220
DANIEL GALPIN: And we're not
just saying that because Bruno

00:24:26.220 --> 00:24:28.130
and Todd wrote large
chunks of that.

00:24:28.130 --> 00:24:31.570
It actually is really helpful.

00:24:31.570 --> 00:24:34.140
And you really want to make sure
that when you put a game

00:24:34.140 --> 00:24:36.280
out, that you're not ending
up getting bad reviews and

00:24:36.280 --> 00:24:39.430
confused users because of simple
mistakes that you could

00:24:39.430 --> 00:24:41.720
have corrected early on.

00:24:41.720 --> 00:24:44.355
And of course, as we see more
things that happen, we're

00:24:44.355 --> 00:24:45.460
going to try to make the

00:24:45.460 --> 00:24:47.460
documentation better and better.

00:24:47.460 --> 00:24:49.420
BRUNO OLIVEIRA: The whole UI
better and better, to make

00:24:49.420 --> 00:24:51.410
sure that those mistakes are
more difficult to make.

00:24:51.410 --> 00:24:52.350
DANIEL GALPIN: Exactly.

00:24:52.350 --> 00:24:57.410
Because ultimately, these
mistakes are a result of

00:24:57.410 --> 00:24:59.620
people not understanding
how to implement

00:24:59.620 --> 00:25:01.420
our code in our examples.

00:25:01.420 --> 00:25:04.170
We really do want to make sure
that the word gets out there

00:25:04.170 --> 00:25:06.080
and that things go
very smoothly.

00:25:06.080 --> 00:25:07.950
And we've seen a lot of really
excellent implementations

00:25:07.950 --> 00:25:12.670
already in the market, and
so we want to keep the

00:25:12.670 --> 00:25:14.860
implementations really, really
high quality and keep the user

00:25:14.860 --> 00:25:15.580
experience high quality.

00:25:15.580 --> 00:25:16.400
TODD KERPELMAN: So what
should developers do

00:25:16.400 --> 00:25:18.510
if they have questions?

00:25:18.510 --> 00:25:21.590
DANIEL GALPIN: If they have
questions, it really depends

00:25:21.590 --> 00:25:23.570
on what platform you're
developing on.

00:25:23.570 --> 00:25:26.940
You can always look at the
Android tag and then look up

00:25:26.940 --> 00:25:29.970
games or play games services,
as well, when

00:25:29.970 --> 00:25:33.000
you're on Stack Overflow.

00:25:33.000 --> 00:25:35.090
And we actually regularly
look at these things.

00:25:35.090 --> 00:25:37.690
BRUNO OLIVEIRA: I usually search
the Android tag and

00:25:37.690 --> 00:25:41.030
then anything that has to do
with games, and then just look

00:25:41.030 --> 00:25:43.360
at the newest questions there.

00:25:43.360 --> 00:25:46.290
DANIEL GALPIN: And you're doing
a similar thing on iOS?

00:25:46.290 --> 00:25:46.790
TODD KERPELMAN: Yea.

00:25:46.790 --> 00:25:50.280
On iOS, it's hard to look for
iOS in games because there

00:25:50.280 --> 00:25:53.410
tends to be a lot of stuff that
isn't Google material.

00:25:53.410 --> 00:25:57.330
So I generally look for the
Google Play game services tag.

00:25:57.330 --> 00:25:59.750
I've seen that start to
be used fairly often.

00:25:59.750 --> 00:26:01.660
And then just look for anything
that doesn't include

00:26:01.660 --> 00:26:04.195
Android, which tends
to be a little less

00:26:04.195 --> 00:26:05.080
than the Android stuff.

00:26:05.080 --> 00:26:06.450
BRUNO OLIVEIRA: And as always,
of course, make sure to ask

00:26:06.450 --> 00:26:07.260
high quality questions.

00:26:07.260 --> 00:26:10.870
So include very specific details
about what your setup

00:26:10.870 --> 00:26:13.730
looks like, what are the error
message that you're seeing.

00:26:13.730 --> 00:26:19.570
If possible include logcat and
everything that might make

00:26:19.570 --> 00:26:21.800
your question easier to
understand and debug.

00:26:21.800 --> 00:26:22.120
DANIEL GALPIN: Yeah.

00:26:22.120 --> 00:26:24.990
There's instructions also in
the game services on how to

00:26:24.990 --> 00:26:27.450
turn on logging.

00:26:27.450 --> 00:26:28.840
That will help a lot.

00:26:28.840 --> 00:26:32.850
Because otherwise, we won't see
anything at all in terms

00:26:32.850 --> 00:26:33.850
of errors coming
through logcat.

00:26:33.850 --> 00:26:37.220
So you at least want to turn
on logging when you are

00:26:37.220 --> 00:26:40.441
submitting questions
to Stack Overflow.

00:26:40.441 --> 00:26:42.570
BRUNO OLIVEIRA: And I guess
that's pretty much it.

00:26:42.570 --> 00:26:43.360
DANIEL GALPIN: I think
that's it.

00:26:43.360 --> 00:26:46.270
So I hope you've enjoyed
watching our mistakes, and we

00:26:46.270 --> 00:26:49.440
hope that this helps prevent you
from making the same kind

00:26:49.440 --> 00:26:51.190
of mistakes that a bunch
of other game

00:26:51.190 --> 00:26:52.500
developers have made.

00:26:52.500 --> 00:26:53.675
And thank you for your time.

00:26:53.675 --> 00:26:54.860
BRUNO OLIVEIRA: Thank
you very much.

00:26:54.860 --> 00:26:56.110
TODD KERPELMAN: Thanks,
everyone.

