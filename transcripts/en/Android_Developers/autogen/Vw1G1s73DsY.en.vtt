WEBVTT
Kind: captions
Language: en

00:00:01.669 --> 00:00:05.570
 
and go you know what this timer means

00:00:05.570 --> 00:00:05.580
and go you know what this timer means
 

00:00:05.580 --> 00:00:07.460
and go you know what this timer means
every quarter second a user spends

00:00:07.460 --> 00:00:07.470
every quarter second a user spends
 

00:00:07.470 --> 00:00:08.990
every quarter second a user spends
staring at a blank screen instead of

00:00:08.990 --> 00:00:09.000
staring at a blank screen instead of
 

00:00:09.000 --> 00:00:10.730
staring at a blank screen instead of
interfacing with your app is a quarter

00:00:10.730 --> 00:00:10.740
interfacing with your app is a quarter
 

00:00:10.740 --> 00:00:12.080
interfacing with your app is a quarter
second more they're willing to close

00:00:12.080 --> 00:00:12.090
second more they're willing to close
 

00:00:12.090 --> 00:00:13.490
second more they're willing to close
your app and give their attention to

00:00:13.490 --> 00:00:13.500
your app and give their attention to
 

00:00:13.500 --> 00:00:15.680
your app and give their attention to
something else my name is Colt McAnlis

00:00:15.680 --> 00:00:15.690
something else my name is Colt McAnlis
 

00:00:15.690 --> 00:00:17.689
something else my name is Colt McAnlis
and misunderstanding all the complex

00:00:17.689 --> 00:00:17.699
and misunderstanding all the complex
 

00:00:17.699 --> 00:00:19.070
and misunderstanding all the complex
things that happen during your app

00:00:19.070 --> 00:00:19.080
things that happen during your app
 

00:00:19.080 --> 00:00:20.630
things that happen during your app
startup can lead to some serious

00:00:20.630 --> 00:00:20.640
startup can lead to some serious
 

00:00:20.640 --> 00:00:22.939
startup can lead to some serious
performance problems now see Android is

00:00:22.939 --> 00:00:22.949
performance problems now see Android is
 

00:00:22.949 --> 00:00:24.050
performance problems now see Android is
pretty smart when it comes to

00:00:24.050 --> 00:00:24.060
pretty smart when it comes to
 

00:00:24.060 --> 00:00:25.310
pretty smart when it comes to
understanding human performance

00:00:25.310 --> 00:00:25.320
understanding human performance
 

00:00:25.320 --> 00:00:27.259
understanding human performance
perception as soon as the user launches

00:00:27.259 --> 00:00:27.269
perception as soon as the user launches
 

00:00:27.269 --> 00:00:29.089
perception as soon as the user launches
your application Android will

00:00:29.089 --> 00:00:29.099
your application Android will
 

00:00:29.099 --> 00:00:30.800
your application Android will
immediately display a start window which

00:00:30.800 --> 00:00:30.810
immediately display a start window which
 

00:00:30.810 --> 00:00:32.630
immediately display a start window which
will stay around until your application

00:00:32.630 --> 00:00:32.640
will stay around until your application
 

00:00:32.640 --> 00:00:34.700
will stay around until your application
is fully loaded initialized and can draw

00:00:34.700 --> 00:00:34.710
is fully loaded initialized and can draw
 

00:00:34.710 --> 00:00:37.069
is fully loaded initialized and can draw
its first frame this behavior is most

00:00:37.069 --> 00:00:37.079
its first frame this behavior is most
 

00:00:37.079 --> 00:00:38.930
its first frame this behavior is most
often seen when your app is booted for

00:00:38.930 --> 00:00:38.940
often seen when your app is booted for
 

00:00:38.940 --> 00:00:41.389
often seen when your app is booted for
the first time but it can easily happen

00:00:41.389 --> 00:00:41.399
the first time but it can easily happen
 

00:00:41.399 --> 00:00:43.130
the first time but it can easily happen
other times as well like when the

00:00:43.130 --> 00:00:43.140
other times as well like when the
 

00:00:43.140 --> 00:00:45.139
other times as well like when the
activity is brought to the foreground or

00:00:45.139 --> 00:00:45.149
activity is brought to the foreground or
 

00:00:45.149 --> 00:00:46.580
activity is brought to the foreground or
after the user backs out of your app or

00:00:46.580 --> 00:00:46.590
after the user backs out of your app or
 

00:00:46.590 --> 00:00:48.290
after the user backs out of your app or
after some portion of your app has been

00:00:48.290 --> 00:00:48.300
after some portion of your app has been
 

00:00:48.300 --> 00:00:49.940
after some portion of your app has been
purged by the system to save memory

00:00:49.940 --> 00:00:49.950
purged by the system to save memory
 

00:00:49.950 --> 00:00:52.100
purged by the system to save memory
basically any time the user moves from

00:00:52.100 --> 00:00:52.110
basically any time the user moves from
 

00:00:52.110 --> 00:00:54.020
basically any time the user moves from
something else to your application

00:00:54.020 --> 00:00:54.030
something else to your application
 

00:00:54.030 --> 00:00:55.549
something else to your application
there's a chance you can see this type

00:00:55.549 --> 00:00:55.559
there's a chance you can see this type
 

00:00:55.559 --> 00:00:57.709
there's a chance you can see this type
of behavior the important point is -

00:00:57.709 --> 00:00:57.719
of behavior the important point is -
 

00:00:57.719 --> 00:00:59.720
of behavior the important point is -
here is this letting the user spend too

00:00:59.720 --> 00:00:59.730
here is this letting the user spend too
 

00:00:59.730 --> 00:01:01.369
here is this letting the user spend too
much time looking at the start window

00:01:01.369 --> 00:01:01.379
much time looking at the start window
 

00:01:01.379 --> 00:01:02.810
much time looking at the start window
gives them ample opportunity to get

00:01:02.810 --> 00:01:02.820
gives them ample opportunity to get
 

00:01:02.820 --> 00:01:04.579
gives them ample opportunity to get
bored and move on to other things and

00:01:04.579 --> 00:01:04.589
bored and move on to other things and
 

00:01:04.589 --> 00:01:07.280
bored and move on to other things and
taking too long in general could even

00:01:07.280 --> 00:01:07.290
taking too long in general could even
 

00:01:07.290 --> 00:01:08.539
taking too long in general could even
cause the application not responding

00:01:08.539 --> 00:01:08.549
cause the application not responding
 

00:01:08.549 --> 00:01:11.270
cause the application not responding
dialog to pop up neither of these are

00:01:11.270 --> 00:01:11.280
dialog to pop up neither of these are
 

00:01:11.280 --> 00:01:13.580
dialog to pop up neither of these are
very good for user retention so from a

00:01:13.580 --> 00:01:13.590
very good for user retention so from a
 

00:01:13.590 --> 00:01:15.200
very good for user retention so from a
technical side the whole process works

00:01:15.200 --> 00:01:15.210
technical side the whole process works
 

00:01:15.210 --> 00:01:16.850
technical side the whole process works
something like this when the user

00:01:16.850 --> 00:01:16.860
something like this when the user
 

00:01:16.860 --> 00:01:18.560
something like this when the user
launches your app the system does a bit

00:01:18.560 --> 00:01:18.570
launches your app the system does a bit
 

00:01:18.570 --> 00:01:19.789
launches your app the system does a bit
of work to load your application

00:01:19.789 --> 00:01:19.799
of work to load your application
 

00:01:19.799 --> 00:01:21.770
of work to load your application
information and create a unique process

00:01:21.770 --> 00:01:21.780
information and create a unique process
 

00:01:21.780 --> 00:01:23.810
information and create a unique process
for your app from there the system

00:01:23.810 --> 00:01:23.820
for your app from there the system
 

00:01:23.820 --> 00:01:25.340
for your app from there the system
process will display the starting window

00:01:25.340 --> 00:01:25.350
process will display the starting window
 

00:01:25.350 --> 00:01:26.510
process will display the starting window
and basically hang out until the

00:01:26.510 --> 00:01:26.520
and basically hang out until the
 

00:01:26.520 --> 00:01:27.649
and basically hang out until the
application is up and running

00:01:27.649 --> 00:01:27.659
application is up and running
 

00:01:27.659 --> 00:01:29.660
application is up and running
meanwhile the application process will

00:01:29.660 --> 00:01:29.670
meanwhile the application process will
 

00:01:29.670 --> 00:01:31.789
meanwhile the application process will
create the application object and launch

00:01:31.789 --> 00:01:31.799
create the application object and launch
 

00:01:31.799 --> 00:01:33.830
create the application object and launch
the main thread this is where your

00:01:33.830 --> 00:01:33.840
the main thread this is where your
 

00:01:33.840 --> 00:01:35.300
the main thread this is where your
startup activity will be initialized

00:01:35.300 --> 00:01:35.310
startup activity will be initialized
 

00:01:35.310 --> 00:01:38.030
startup activity will be initialized
created inflated and finally drawn it's

00:01:38.030 --> 00:01:38.040
created inflated and finally drawn it's
 

00:01:38.040 --> 00:01:39.770
created inflated and finally drawn it's
only at this point after the application

00:01:39.770 --> 00:01:39.780
only at this point after the application
 

00:01:39.780 --> 00:01:41.569
only at this point after the application
has drawn its first frame that the

00:01:41.569 --> 00:01:41.579
has drawn its first frame that the
 

00:01:41.579 --> 00:01:43.249
has drawn its first frame that the
system process then goes and swaps out

00:01:43.249 --> 00:01:43.259
system process then goes and swaps out
 

00:01:43.259 --> 00:01:45.950
system process then goes and swaps out
the start window for the application now

00:01:45.950 --> 00:01:45.960
the start window for the application now
 

00:01:45.960 --> 00:01:47.990
the start window for the application now
to be clear the majority of that entire

00:01:47.990 --> 00:01:48.000
to be clear the majority of that entire
 

00:01:48.000 --> 00:01:49.969
to be clear the majority of that entire
process happens pretty cleanly now

00:01:49.969 --> 00:01:49.979
process happens pretty cleanly now
 

00:01:49.979 --> 00:01:51.469
process happens pretty cleanly now
there's not really much chance that

00:01:51.469 --> 00:01:51.479
there's not really much chance that
 

00:01:51.479 --> 00:01:53.090
there's not really much chance that
performance can go off the rails however

00:01:53.090 --> 00:01:53.100
performance can go off the rails however
 

00:01:53.100 --> 00:01:54.889
performance can go off the rails however
there are three big areas where things

00:01:54.889 --> 00:01:54.899
there are three big areas where things
 

00:01:54.899 --> 00:01:57.410
there are three big areas where things
could become problematic that you should

00:01:57.410 --> 00:01:57.420
could become problematic that you should
 

00:01:57.420 --> 00:01:58.999
could become problematic that you should
keep an eye on the first thing you

00:01:58.999 --> 00:01:59.009
keep an eye on the first thing you
 

00:01:59.009 --> 00:02:00.350
keep an eye on the first thing you
should really take a look at is all the

00:02:00.350 --> 00:02:00.360
should really take a look at is all the
 

00:02:00.360 --> 00:02:01.520
should really take a look at is all the
work that goes into creating your

00:02:01.520 --> 00:02:01.530
work that goes into creating your
 

00:02:01.530 --> 00:02:03.859
work that goes into creating your
activity class most often there's lots

00:02:03.859 --> 00:02:03.869
activity class most often there's lots
 

00:02:03.869 --> 00:02:05.600
activity class most often there's lots
of heavy lifting that occurs during this

00:02:05.600 --> 00:02:05.610
of heavy lifting that occurs during this
 

00:02:05.610 --> 00:02:07.670
of heavy lifting that occurs during this
process but heaviest has to be the

00:02:07.670 --> 00:02:07.680
process but heaviest has to be the
 

00:02:07.680 --> 00:02:09.320
process but heaviest has to be the
inflation of layouts and loading of

00:02:09.320 --> 00:02:09.330
inflation of layouts and loading of
 

00:02:09.330 --> 00:02:11.270
inflation of layouts and loading of
resources that goes along with it this

00:02:11.270 --> 00:02:11.280
resources that goes along with it this
 

00:02:11.280 --> 00:02:13.309
resources that goes along with it this
is not a cheap process and if you're

00:02:13.309 --> 00:02:13.319
is not a cheap process and if you're
 

00:02:13.319 --> 00:02:14.780
is not a cheap process and if you're
layouts are too complex or you've got

00:02:14.780 --> 00:02:14.790
layouts are too complex or you've got
 

00:02:14.790 --> 00:02:16.910
layouts are too complex or you've got
some blocking logic in there this can

00:02:16.910 --> 00:02:16.920
some blocking logic in there this can
 

00:02:16.920 --> 00:02:18.530
some blocking logic in there this can
cause some really big problems on a

00:02:18.530 --> 00:02:18.540
cause some really big problems on a
 

00:02:18.540 --> 00:02:20.509
cause some really big problems on a
similar note make sure you take a look

00:02:20.509 --> 00:02:20.519
similar note make sure you take a look
 

00:02:20.519 --> 00:02:23.000
similar note make sure you take a look
at your application initialization for

00:02:23.000 --> 00:02:23.010
at your application initialization for
 

00:02:23.010 --> 00:02:25.819
at your application initialization for
really complex apps the initialization

00:02:25.819 --> 00:02:25.829
really complex apps the initialization
 

00:02:25.829 --> 00:02:28.009
really complex apps the initialization
of the app object often becomes a junk

00:02:28.009 --> 00:02:28.019
of the app object often becomes a junk
 

00:02:28.019 --> 00:02:30.349
of the app object often becomes a junk
drawer for lots of global classes that

00:02:30.349 --> 00:02:30.359
drawer for lots of global classes that
 

00:02:30.359 --> 00:02:32.599
drawer for lots of global classes that
might be used between activities so

00:02:32.599 --> 00:02:32.609
might be used between activities so
 

00:02:32.609 --> 00:02:34.399
might be used between activities so
there tends to be lots of work here that

00:02:34.399 --> 00:02:34.409
there tends to be lots of work here that
 

00:02:34.409 --> 00:02:35.929
there tends to be lots of work here that
could be deferred to later times or

00:02:35.929 --> 00:02:35.939
could be deferred to later times or
 

00:02:35.939 --> 00:02:38.629
could be deferred to later times or
perhaps loaded in a lazy load fashion

00:02:38.629 --> 00:02:38.639
perhaps loaded in a lazy load fashion
 

00:02:38.639 --> 00:02:40.670
perhaps loaded in a lazy load fashion
now there's lots of applications out

00:02:40.670 --> 00:02:40.680
now there's lots of applications out
 

00:02:40.680 --> 00:02:43.220
now there's lots of applications out
there which provide custom start windows

00:02:43.220 --> 00:02:43.230
there which provide custom start windows
 

00:02:43.230 --> 00:02:44.899
there which provide custom start windows
this is either done to help brand the

00:02:44.899 --> 00:02:44.909
this is either done to help brand the
 

00:02:44.909 --> 00:02:47.720
this is either done to help brand the
application or to make a slow load look

00:02:47.720 --> 00:02:47.730
application or to make a slow load look
 

00:02:47.730 --> 00:02:49.970
application or to make a slow load look
like a custom branded application now if

00:02:49.970 --> 00:02:49.980
like a custom branded application now if
 

00:02:49.980 --> 00:02:51.470
like a custom branded application now if
you're doing this to hide bad load times

00:02:51.470 --> 00:02:51.480
you're doing this to hide bad load times
 

00:02:51.480 --> 00:02:53.539
you're doing this to hide bad load times
obviously you should fix that first but

00:02:53.539 --> 00:02:53.549
obviously you should fix that first but
 

00:02:53.549 --> 00:02:55.309
obviously you should fix that first but
if you're doing it for branding then you

00:02:55.309 --> 00:02:55.319
if you're doing it for branding then you
 

00:02:55.319 --> 00:02:56.390
if you're doing it for branding then you
need to be aware that there's a right

00:02:56.390 --> 00:02:56.400
need to be aware that there's a right
 

00:02:56.400 --> 00:02:58.369
need to be aware that there's a right
and a wrong way to set this up so that

00:02:58.369 --> 00:02:58.379
and a wrong way to set this up so that
 

00:02:58.379 --> 00:03:00.020
and a wrong way to set this up so that
it doesn't influence the user perception

00:03:00.020 --> 00:03:00.030
it doesn't influence the user perception
 

00:03:00.030 --> 00:03:03.140
it doesn't influence the user perception
too negatively but before you run off

00:03:03.140 --> 00:03:03.150
too negatively but before you run off
 

00:03:03.150 --> 00:03:04.339
too negatively but before you run off
into the weeds and try to fix these

00:03:04.339 --> 00:03:04.349
into the weeds and try to fix these
 

00:03:04.349 --> 00:03:06.199
into the weeds and try to fix these
types of common patterns you need to sit

00:03:06.199 --> 00:03:06.209
types of common patterns you need to sit
 

00:03:06.209 --> 00:03:07.759
types of common patterns you need to sit
down and figure out if you have a

00:03:07.759 --> 00:03:07.769
down and figure out if you have a
 

00:03:07.769 --> 00:03:09.920
down and figure out if you have a
problem in the first place thankfully

00:03:09.920 --> 00:03:09.930
problem in the first place thankfully
 

00:03:09.930 --> 00:03:13.009
problem in the first place thankfully
Android has a few tools to help firstly

00:03:13.009 --> 00:03:13.019
Android has a few tools to help firstly
 

00:03:13.019 --> 00:03:15.500
Android has a few tools to help firstly
is displayed time for releases after

00:03:15.500 --> 00:03:15.510
is displayed time for releases after
 

00:03:15.510 --> 00:03:18.890
is displayed time for releases after
KitKat logcat will include an output

00:03:18.890 --> 00:03:18.900
KitKat logcat will include an output
 

00:03:18.900 --> 00:03:20.270
KitKat logcat will include an output
line which displays the amount of time

00:03:20.270 --> 00:03:20.280
line which displays the amount of time
 

00:03:20.280 --> 00:03:21.830
line which displays the amount of time
between when the process was launched

00:03:21.830 --> 00:03:21.840
between when the process was launched
 

00:03:21.840 --> 00:03:23.990
between when the process was launched
and the activity finally drawn to the

00:03:23.990 --> 00:03:24.000
and the activity finally drawn to the
 

00:03:24.000 --> 00:03:25.819
and the activity finally drawn to the
screen this can be helpful because it

00:03:25.819 --> 00:03:25.829
screen this can be helpful because it
 

00:03:25.829 --> 00:03:27.379
screen this can be helpful because it
gives you a general idea how long it

00:03:27.379 --> 00:03:27.389
gives you a general idea how long it
 

00:03:27.389 --> 00:03:29.179
gives you a general idea how long it
takes to occur for your application

00:03:29.179 --> 00:03:29.189
takes to occur for your application
 

00:03:29.189 --> 00:03:31.429
takes to occur for your application
oh by the way note if you want to see

00:03:31.429 --> 00:03:31.439
oh by the way note if you want to see
 

00:03:31.439 --> 00:03:33.830
oh by the way note if you want to see
this value inside of Android studio you

00:03:33.830 --> 00:03:33.840
this value inside of Android studio you
 

00:03:33.840 --> 00:03:36.229
this value inside of Android studio you
need to turn off filters for the logcat

00:03:36.229 --> 00:03:36.239
need to turn off filters for the logcat
 

00:03:36.239 --> 00:03:37.909
need to turn off filters for the logcat
output so keep that in mind

00:03:37.909 --> 00:03:37.919
output so keep that in mind
 

00:03:37.919 --> 00:03:41.300
output so keep that in mind
secondly is report fully drawn function

00:03:41.300 --> 00:03:41.310
secondly is report fully drawn function
 

00:03:41.310 --> 00:03:43.729
secondly is report fully drawn function
the displayed metric that's reported in

00:03:43.729 --> 00:03:43.739
the displayed metric that's reported in
 

00:03:43.739 --> 00:03:45.439
the displayed metric that's reported in
logcat is useful for most situations

00:03:45.439 --> 00:03:45.449
logcat is useful for most situations
 

00:03:45.449 --> 00:03:47.360
logcat is useful for most situations
where you'd like to track down the time

00:03:47.360 --> 00:03:47.370
where you'd like to track down the time
 

00:03:47.370 --> 00:03:48.860
where you'd like to track down the time
it takes to go from applications start

00:03:48.860 --> 00:03:48.870
it takes to go from applications start
 

00:03:48.870 --> 00:03:50.920
it takes to go from applications start
to first visible however in modern

00:03:50.920 --> 00:03:50.930
to first visible however in modern
 

00:03:50.930 --> 00:03:53.089
to first visible however in modern
application development there's often a

00:03:53.089 --> 00:03:53.099
application development there's often a
 

00:03:53.099 --> 00:03:54.890
application development there's often a
great deal of lazy loading that is

00:03:54.890 --> 00:03:54.900
great deal of lazy loading that is
 

00:03:54.900 --> 00:03:56.689
great deal of lazy loading that is
rather than blocking the initial drawing

00:03:56.689 --> 00:03:56.699
rather than blocking the initial drawing
 

00:03:56.699 --> 00:03:58.879
rather than blocking the initial drawing
of the window asynchronously loading

00:03:58.879 --> 00:03:58.889
of the window asynchronously loading
 

00:03:58.889 --> 00:04:00.439
of the window asynchronously loading
resources and views in the background

00:04:00.439 --> 00:04:00.449
resources and views in the background
 

00:04:00.449 --> 00:04:01.520
resources and views in the background
and updating the view hierarchy

00:04:01.520 --> 00:04:01.530
and updating the view hierarchy
 

00:04:01.530 --> 00:04:04.129
and updating the view hierarchy
accordingly the result is that while the

00:04:04.129 --> 00:04:04.139
accordingly the result is that while the
 

00:04:04.139 --> 00:04:06.349
accordingly the result is that while the
initial activity may be visible it may

00:04:06.349 --> 00:04:06.359
initial activity may be visible it may
 

00:04:06.359 --> 00:04:08.449
initial activity may be visible it may
not yet be fully loaded with respect to

00:04:08.449 --> 00:04:08.459
not yet be fully loaded with respect to
 

00:04:08.459 --> 00:04:10.189
not yet be fully loaded with respect to
resources which could be considered a

00:04:10.189 --> 00:04:10.199
resources which could be considered a
 

00:04:10.199 --> 00:04:11.779
resources which could be considered a
separate metric to use when evaluating

00:04:11.779 --> 00:04:11.789
separate metric to use when evaluating
 

00:04:11.789 --> 00:04:13.939
separate metric to use when evaluating
launch time performance to address this

00:04:13.939 --> 00:04:13.949
launch time performance to address this
 

00:04:13.949 --> 00:04:15.800
launch time performance to address this
concern you can manually call the

00:04:15.800 --> 00:04:15.810
concern you can manually call the
 

00:04:15.810 --> 00:04:18.860
concern you can manually call the
activity report fully drawn function to

00:04:18.860 --> 00:04:18.870
activity report fully drawn function to
 

00:04:18.870 --> 00:04:20.300
activity report fully drawn function to
let the system know that your activity

00:04:20.300 --> 00:04:20.310
let the system know that your activity
 

00:04:20.310 --> 00:04:21.909
let the system know that your activity
is finished with its laid easy loading

00:04:21.909 --> 00:04:21.919
is finished with its laid easy loading
 

00:04:21.919 --> 00:04:25.250
is finished with its laid easy loading
third is method tracing while displayed

00:04:25.250 --> 00:04:25.260
third is method tracing while displayed
 

00:04:25.260 --> 00:04:27.360
third is method tracing while displayed
time and report fully drawn give a good

00:04:27.360 --> 00:04:27.370
time and report fully drawn give a good
 

00:04:27.370 --> 00:04:28.740
time and report fully drawn give a good
understanding of the overall load time

00:04:28.740 --> 00:04:28.750
understanding of the overall load time
 

00:04:28.750 --> 00:04:31.020
understanding of the overall load time
of your application they do not provide

00:04:31.020 --> 00:04:31.030
of your application they do not provide
 

00:04:31.030 --> 00:04:32.760
of your application they do not provide
details into what may be causing

00:04:32.760 --> 00:04:32.770
details into what may be causing
 

00:04:32.770 --> 00:04:34.860
details into what may be causing
particular parts of that pipeline to go

00:04:34.860 --> 00:04:34.870
particular parts of that pipeline to go
 

00:04:34.870 --> 00:04:36.990
particular parts of that pipeline to go
longer than expect it to gain more

00:04:36.990 --> 00:04:37.000
longer than expect it to gain more
 

00:04:37.000 --> 00:04:38.580
longer than expect it to gain more
insight in this area you can use the

00:04:38.580 --> 00:04:38.590
insight in this area you can use the
 

00:04:38.590 --> 00:04:40.500
insight in this area you can use the
start method tracing tool inside of

00:04:40.500 --> 00:04:40.510
start method tracing tool inside of
 

00:04:40.510 --> 00:04:42.930
start method tracing tool inside of
Android studio and finally as the big

00:04:42.930 --> 00:04:42.940
Android studio and finally as the big
 

00:04:42.940 --> 00:04:45.330
Android studio and finally as the big
one systrace when you add trace

00:04:45.330 --> 00:04:45.340
one systrace when you add trace
 

00:04:45.340 --> 00:04:47.040
one systrace when you add trace
functions inside of your on create

00:04:47.040 --> 00:04:47.050
functions inside of your on create
 

00:04:47.050 --> 00:04:48.990
functions inside of your on create
methods it will augment your logging

00:04:48.990 --> 00:04:49.000
methods it will augment your logging
 

00:04:49.000 --> 00:04:51.150
methods it will augment your logging
such that the systrace tool can properly

00:04:51.150 --> 00:04:51.160
such that the systrace tool can properly
 

00:04:51.160 --> 00:04:53.189
such that the systrace tool can properly
discover all the subsections and display

00:04:53.189 --> 00:04:53.199
discover all the subsections and display
 

00:04:53.199 --> 00:04:55.530
discover all the subsections and display
them in its graphing process and if

00:04:55.530 --> 00:04:55.540
them in its graphing process and if
 

00:04:55.540 --> 00:04:56.400
them in its graphing process and if
you're looking for more great

00:04:56.400 --> 00:04:56.410
you're looking for more great
 

00:04:56.410 --> 00:04:57.990
you're looking for more great
performance insight don't forget to

00:04:57.990 --> 00:04:58.000
performance insight don't forget to
 

00:04:58.000 --> 00:04:59.159
performance insight don't forget to
check out the rest of the Android

00:04:59.159 --> 00:04:59.169
check out the rest of the Android
 

00:04:59.169 --> 00:05:00.930
check out the rest of the Android
performance patterns content and be sure

00:05:00.930 --> 00:05:00.940
performance patterns content and be sure
 

00:05:00.940 --> 00:05:02.460
performance patterns content and be sure
to join the Google+ community to ask

00:05:02.460 --> 00:05:02.470
to join the Google+ community to ask
 

00:05:02.470 --> 00:05:05.430
to join the Google+ community to ask
questions from other perf groups so keep

00:05:05.430 --> 00:05:05.440
questions from other perf groups so keep
 

00:05:05.440 --> 00:05:06.990
questions from other perf groups so keep
calm profile your code and always

00:05:06.990 --> 00:05:07.000
calm profile your code and always
 

00:05:07.000 --> 00:05:11.129
calm profile your code and always
remember perf matters

00:05:11.129 --> 00:05:11.139
 
 

00:05:11.139 --> 00:05:13.199
 
you

