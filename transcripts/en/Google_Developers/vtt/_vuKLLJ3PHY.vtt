WEBVTT
Kind: captions
Language: en

00:00:08.750 --> 00:00:12.180
&gt;&gt; SAUER: Maybe you can start by telling us
why you chose Google web toolkit for your

00:00:12.180 --> 00:00:12.930
project.

00:00:12.930 --> 00:00:17.680
&gt;&gt; GUANG: I think we chose Google web toolkit
because it's open sourced...

00:00:17.680 --> 00:00:18.670
&gt;&gt; SAUER: Yeah.

00:00:18.670 --> 00:00:21.290
&gt;&gt; GUANG: Which is very important for developers,
right? They want to have--they don't want

00:00:21.290 --> 00:00:23.320
to be locked in to any, to the vendor.

00:00:23.320 --> 00:00:24.250
&gt;&gt; SAUER: Right.

00:00:24.250 --> 00:00:27.500
&gt;&gt; GUANG: And open source is going. And the
other fact that we chose Google web toolkit

00:00:27.500 --> 00:00:28.330
is that we just unlock Google's domain knowledge.

00:00:28.330 --> 00:00:28.650
&gt;&gt; SAUER: Okay.

00:00:28.650 --> 00:00:35.820
&gt;&gt; GUANG: And the other thing that is really
key to us that we had our problems was browser

00:00:35.820 --> 00:00:40.550
compatibility. So what would happen is Naveen
will be coding or Vikram will be coding on

00:00:40.550 --> 00:00:45.770
one version of Firefox and I will be debugging
on IE. And then he will fix that bug and then

00:00:45.770 --> 00:00:49.610
it breaks on Firefox and then vice versa and
it keeps going that whole round.

00:00:49.610 --> 00:00:49.809
&gt;&gt; SAUER: Sure.

00:00:49.809 --> 00:00:52.170
&gt;&gt; GUANG: So one feature could take us like
days...

00:00:52.170 --> 00:00:52.690
&gt;&gt; SAUER: Wow.

00:00:52.690 --> 00:00:53.640
&gt;&gt; GUANG: To fix.

00:00:53.640 --> 00:00:55.180
&gt;&gt; RANGNEKAR: And you can easily waste time
on that.

00:00:55.180 --> 00:00:55.530
&gt;&gt; GUANG: Yeah.

00:00:55.530 --> 00:00:55.950
&gt;&gt; SAUER: Yeah, because...

00:00:55.950 --> 00:01:00.879
&gt;&gt; GUANG: And so when GWT, which my colleagues
will talk more about, it actually solves a

00:01:00.879 --> 00:01:06.350
lot of those problems. Right? We can actually
code once, deploy it, test in a few browsers

00:01:06.350 --> 00:01:07.649
and it usually works fine.

00:01:07.649 --> 00:01:08.580
&gt;&gt; SAUER: Okay.

00:01:08.580 --> 00:01:14.360
&gt;&gt; GUANG: And then we can go next to the features.
So it allows us to focus on the app and the

00:01:14.360 --> 00:01:18.689
feature set and the UI experience without
needing to worry about stupid stuff like it

00:01:18.689 --> 00:01:21.780
doesn't bring an IE, it doesn't bring in Firefox
or it brings Safari and things like that.

00:01:21.780 --> 00:01:25.560
&gt;&gt; SAUER: Okay. Is that where the Google domain
knowledge comes in or what do you mean by

00:01:25.560 --> 00:01:26.810
that?

00:01:26.810 --> 00:01:29.049
&gt;&gt; GUANG: I think Google...

00:01:29.049 --> 00:01:29.720
&gt;&gt; RANGNEKAR: Yeah.

00:01:29.720 --> 00:01:32.229
&gt;&gt; GUANG: Vikram always tells me, yeah, you
know, Google is probably the best web application

00:01:32.229 --> 00:01:38.560
campaign of all and we agree. And over the
years, right, you guys have built so many

00:01:38.560 --> 00:01:43.380
web applications, my guess is that's why you
guys created Google Web Toolkit, right, to--because

00:01:43.380 --> 00:01:47.189
you face all these problems. So that is how
we are standing on the shores of the giants,

00:01:47.189 --> 00:01:51.110
right. We leverage on your domain knowledge
with respect to creating web application.

00:01:51.110 --> 00:01:57.840
&gt;&gt; RANGNEKAR: So to be specific about domain
knowledge like the GWT loads, it uses iframes,

00:01:57.840 --> 00:02:03.840
which is the way they have done it is it speeds
up JavaScript loading. And then there are

00:02:03.840 --> 00:02:09.479
certain tools in GWT that allow, for example,
if anyone use a lot of small images across

00:02:09.479 --> 00:02:17.140
your website, you end up having to, you know,
do that manually. But in GWT, you know, you

00:02:17.140 --> 00:02:20.220
can actually create a resource. You put them
in a resource and when the--when your GWT

00:02:20.220 --> 00:02:25.599
code is compiled for deployment, those images
actually combine together into one image automatically.

00:02:25.599 --> 00:02:30.780
And, you know, and then position using CSS
3 codes, which is great. It speeds up loading

00:02:30.780 --> 00:02:33.190
and makes your app a lot more responsive.

00:02:33.190 --> 00:02:36.700
&gt;&gt; KUMAR: And basically you're--everyone is
developing in one programming language Java,

00:02:36.700 --> 00:02:42.160
but you get, you get basically six different
versions for each browser, each language,

00:02:42.160 --> 00:02:47.739
each--very, basically, each in every different
combination, you get a fully working version.

00:02:47.739 --> 00:02:53.170
And that really helps, you know, with browser
compatibilities. You know, you know, you get

00:02:53.170 --> 00:02:56.900
the fastest performance with your browser.
So that's the coolest thing. You know, you

00:02:56.900 --> 00:02:59.739
don't have to worry about, you know, slowing
your code down just to handle one IE bulk

00:02:59.739 --> 00:02:59.860
here and there.

00:02:59.860 --> 00:03:07.190
&gt;&gt; RANGNEKAR: Also GWT is, it doesn't really
have GWT [INDISTINCT] loads. It's--what is

00:03:07.190 --> 00:03:14.440
compiled in the output it what you get. It's
the final product. And that actually is great

00:03:14.440 --> 00:03:20.750
because your code, not only can you improve
your code but every time GWT improves, the

00:03:20.750 --> 00:03:26.680
compilation will make your final result better.
So your code improves even without you really

00:03:26.680 --> 00:03:33.099
doing anything, the final result which is
really great. And like Naveen said, having

00:03:33.099 --> 00:03:36.299
Java on the back end, Java from the front
end, really speeds up things. You know, your

00:03:36.299 --> 00:03:41.239
chain of thought is not broken and you just
get better in, you know, one combined platform

00:03:41.239 --> 00:03:44.290
as opposed to, you know, figuring out multiple
things.

00:03:44.290 --> 00:03:48.280
&gt;&gt; SAUER: Okay, that's a great story. So you
mentioned six different versions. Does that

00:03:48.280 --> 00:03:51.700
mean that you as developer now have six versions
to manage and deal with?

00:03:51.700 --> 00:03:56.940
&gt;&gt; KUMAR: No, you only have one because you're
writing everything in Java. So you're maintaining

00:03:56.940 --> 00:04:03.019
one code base in Java but your compiled output
is JavaScript, HTML, all these stuff. That

00:04:03.019 --> 00:04:08.400
stuff, if you're going to look at it, it looks
like, you know, you know, gibberish almost.

00:04:08.400 --> 00:04:12.890
You probably couldn't even follow it if you
were, you know, even the smartest guy in the

00:04:12.890 --> 00:04:15.269
world. But we don't care because that's just
the output of what we've, you know, what we've

00:04:15.269 --> 00:04:20.680
already been. So, for us, we're just writing
one code base, working on one code base, the

00:04:20.680 --> 00:04:24.349
Java and the six different, you know, you
can think of it in almost like six different

00:04:24.349 --> 00:04:27.350
binary executables that you would get out
of any compiler if you're across compiling

00:04:27.350 --> 00:04:29.820
over several different architectures.

00:04:29.820 --> 00:04:36.710
&gt;&gt; RANGNEKAR: So GWT actually compiles a different
version for each browser and it auto, you

00:04:36.710 --> 00:04:41.330
know, figures out which one needs to be downloaded,
so, which is great.

00:04:41.330 --> 00:04:45.639
&gt;&gt; SAUER: It sounds like the, the source code
is really optimized for the developer. You

00:04:45.639 --> 00:04:49.940
become really productive, but the output is
optimized for the browser and for the user.

00:04:49.940 --> 00:04:52.870
So an IE user only gets an IE download.

00:04:52.870 --> 00:04:53.840
&gt;&gt; RANGNEKAR: Correct.

00:04:53.840 --> 00:04:57.389
&gt;&gt; SAUER: A Firefox user in English has a
different code than, say, a Firefox user in

00:04:57.389 --> 00:04:58.330
Japanese.

00:04:58.330 --> 00:05:00.210
&gt;&gt; RANGNEKAR: Yes, absolutely.

00:05:00.210 --> 00:05:02.540
&gt;&gt; SAUER: That's okay. I think that's great.

00:05:02.540 --> 00:05:09.240
&gt;&gt; GUANG: And I also want to add something
that GWT allowed us to have internationalization,

00:05:09.240 --> 00:05:13.970
like, in a few days. [INDISTINCT] unicode
for Japanese, Hindi on Socialwok. And also

00:05:13.970 --> 00:05:19.160
it took us very quickly one added benefit
as we went mobile, mobile web, like, in a

00:05:19.160 --> 00:05:24.440
week also. So all these, the reason why you
should use GWT...

00:05:24.440 --> 00:05:29.110
&gt;&gt; RANGNEKAR: Mobile web wasn't part of the
Woks but the time to develop it was really

00:05:29.110 --> 00:05:33.669
short. I think it must have been 10 percent
of the time it took to develop the rest of

00:05:33.669 --> 00:05:34.570
the application. So...

00:05:34.570 --> 00:05:37.440
&gt;&gt; KUMAR: I mean, one of the beauties is that
since you're just working with the Java code,

00:05:37.440 --> 00:05:43.490
you know, manipulating Java code is pretty,
you know, pretty straightforward once you've

00:05:43.490 --> 00:05:47.350
learned it and you can just say, "Okay, let
me make a slightly different version of the

00:05:47.350 --> 00:05:51.500
same Java code that maybe is more optimal
for the mobile interface." But, you know,

00:05:51.500 --> 00:05:56.050
so, one thing that really is great about that
is that, you're just, you're still maintaining

00:05:56.050 --> 00:06:01.289
this one Java code. And the beauty is, is
that you can even reuse code. You know, sometimes

00:06:01.289 --> 00:06:13.620
we have codes that's not necessarily backend
per se is just code that's not, that doesn't

00:06:13.620 --> 00:06:14.650
display anything visual. It's a code that
interacts with our backend, you know, AJAX

00:06:14.650 --> 00:06:17.150
services, things like that and we can share
that code. It's a code that just stores data,

00:06:17.150 --> 00:06:21.479
you know, stuff that basically marshals and
Javas with objects, things like that that

00:06:21.479 --> 00:06:33.419
we can just, you know, use that same code.
We don't have to, you know, build a mobile

00:06:33.419 --> 00:06:35.600
version of that or anything like that.

00:06:35.600 --> 00:06:37.020
&gt;&gt; SAUER: Okay. So you really have code reuse
between the client and the server.

00:06:37.020 --> 00:06:37.460
&gt;&gt; KUMAR: Yeah.

00:06:37.460 --> 00:06:38.819
&gt;&gt; RANGNEKAR: I also wanted to make this point
that this is a cycle in development that's

00:06:38.819 --> 00:06:39.220
kind of important for most developers, they
do this all day, where they make a change,

00:06:39.220 --> 00:06:43.870
they want to test it; then they make another
change or--so that cycle needs to really fast

00:06:43.870 --> 00:06:49.759
for a developer to be comfortable in an environment.
And the GWT environment, the plug-ins that

00:06:49.759 --> 00:06:53.460
they have for Eclipse and stuff actually allow
you to do that. So if we change our code,

00:06:53.460 --> 00:06:57.819
I don't have to hit a compile button and then
wait around until my whole code is compiled.

00:06:57.819 --> 00:07:03.550
I actually make a change in Java and just
go up to the web browser and I just hit reload

00:07:03.550 --> 00:07:09.069
on the browser and the change is displayed.
So it's almost, you know, in-time compilation

00:07:09.069 --> 00:07:14.610
or something; not entirely clear on how the
backend works but it works great stuff.

00:07:14.610 --> 00:07:21.910
&gt;&gt; SAUER: Okay. Did you add any extensions
to GWT that are specific to Socialwok?

00:07:21.910 --> 00:07:26.389
&gt;&gt; KUMAR: Yeah, I mean, one of the--one of
the things, from our old JavaScript programming

00:07:26.389 --> 00:07:29.789
days and even from our old sort of server
site programming days, we used the--we used

00:07:29.789 --> 00:07:36.770
a concept called deferred execution. So one
of the things that we needed to do is we basically

00:07:36.770 --> 00:07:41.360
needed to duplicate that same functionality
in GWT. Deferred execution, if any of you

00:07:41.360 --> 00:07:46.520
aren't familiar, is a programming model where
call backs are basically added on to certain

00:07:46.520 --> 00:07:52.509
events. The programming model is called asynchronous
programming. It's a--it's very, you're pretty--if

00:07:52.509 --> 00:07:57.330
you're familiar with twisted Python which
is a great networking sort of stack for Python

00:07:57.330 --> 00:08:02.460
developers, it's very familiar to you. And
the beauty is, is that you don't have to worry

00:08:02.460 --> 00:08:07.139
about when something happens when you--to
add the call back. You just add the call back.

00:08:07.139 --> 00:08:12.580
And then, whenever it completes, that call
back is executed, it's guaranteed. So we basically

00:08:12.580 --> 00:08:17.440
did not have that functionality originally
in GWT and now we, and now we've added it.

00:08:17.440 --> 00:08:19.259
And we probably will be able to contribute
it back because it's open source. It's another

00:08:19.259 --> 00:08:19.310
great thing.

00:08:19.310 --> 00:08:25.340
&gt;&gt; RANGNEKAR: So much of the web is asynchronous
that it really helped us, you know, having

00:08:25.340 --> 00:08:31.539
that kind of functionality where we can chain
call backs or chain deferred objects together

00:08:31.539 --> 00:08:33.669
which is tough.

00:08:33.669 --> 00:08:38.069
&gt;&gt; SAUER: Okay. What are the, maybe, some
of the features that are up and coming that

00:08:38.069 --> 00:08:46.180
are in line GWT distribution but that you've
had a preview of watching the subversion code

00:08:46.180 --> 00:08:48.450
combined. What are the things you're excited
about?

00:08:48.450 --> 00:08:52.950
&gt;&gt; KUMAR: We, we are actually tend to limit
the edge of things. We use the trunks so we

00:08:52.950 --> 00:08:57.190
already experienced a lot of the new features
that--we've seen, one of the newest features

00:08:57.190 --> 00:09:03.149
that we've seen is the client bundle, which
is a great system that allows us to do sort

00:09:03.149 --> 00:09:07.839
of resource allocation based on a standard
Java development or standard C, you know,

00:09:07.839 --> 00:09:15.370
almost like writing CSS that can be browser
specific that's only loaded for each browser

00:09:15.370 --> 00:09:20.810
just like our JavaScript. So we use those
things as well already. One of the things

00:09:20.810 --> 00:09:23.910
that we're really interested in is this code
splitting which is developer guiding code

00:09:23.910 --> 00:09:25.410
splitting which is a great way for us to break
up our application when, you know, to basically

00:09:25.410 --> 00:09:33.459
speed up the volume and time, you know. One
of the things that we worry about is that

00:09:33.459 --> 00:09:36.570
we're always concerned about performance.
We donÃ­t want our users to experience,

00:09:36.570 --> 00:09:38.200
basically, a horrible experience where he's
waiting a few seconds for his app to load.

00:09:38.200 --> 00:09:46.350
We want it to load very quickly and the user
can just use the application. And with GWT's

00:09:46.350 --> 00:09:53.890
philosophy is almost aligned with that. So
we want to actually take advantage of those

00:09:53.890 --> 00:09:54.190
features.

00:09:54.190 --> 00:09:55.990
&gt;&gt; GUANG: I think I will add one more thing
to encourage people to use GWT. As developers,

00:09:55.990 --> 00:10:01.070
I think, what you want is documentation and
stuff. And so from our end, we have benefitted

00:10:01.070 --> 00:10:05.550
from GWT today, right? And what we would love
to do and soon we will have what we call wave.google.com

00:10:05.550 --> 00:10:11.500
if you love to contribute articles of what
we found on issues that we face on a new paradigm

00:10:11.500 --> 00:10:16.800
of programming, we have used with GWT. So
Fred look out for more articles from us.

00:10:16.800 --> 00:10:17.279
&gt;&gt; SAUER: Okay. I'll look forward to.

00:10:17.279 --> 00:10:17.550
&gt;&gt; GUANG: Yeah.

00:10:17.550 --> 00:10:18.540
&gt;&gt; SAUER: Thanks guys for coming here and...

00:10:18.540 --> 00:10:19.570
&gt;&gt; RANGNEKAR: Thank you. Thank you.

00:10:19.570 --> 00:10:20.089
&gt;&gt; GUANG: Thank you.

