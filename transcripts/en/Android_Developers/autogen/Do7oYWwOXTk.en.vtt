WEBVTT
Kind: captions
Language: en

00:00:01.420 --> 00:00:05.019
 
[Music]

00:00:05.019 --> 00:00:05.029
[Music]
 

00:00:05.029 --> 00:00:08.089
[Music]
today I'm gonna be talking about Android

00:00:08.089 --> 00:00:08.099
today I'm gonna be talking about Android
 

00:00:08.099 --> 00:00:11.060
today I'm gonna be talking about Android
memory and specifically Android memory

00:00:11.060 --> 00:00:11.070
memory and specifically Android memory
 

00:00:11.070 --> 00:00:15.499
memory and specifically Android memory
and games from a games perspective my

00:00:15.499 --> 00:00:15.509
and games from a games perspective my
 

00:00:15.509 --> 00:00:18.080
and games from a games perspective my
name is Bill villedieu and I work with

00:00:18.080 --> 00:00:18.090
name is Bill villedieu and I work with
 

00:00:18.090 --> 00:00:19.929
name is Bill villedieu and I work with
game developers I'm a developer advocate

00:00:19.929 --> 00:00:19.939
game developers I'm a developer advocate
 

00:00:19.939 --> 00:00:24.650
game developers I'm a developer advocate
and working with game developers often

00:00:24.650 --> 00:00:24.660
and working with game developers often
 

00:00:24.660 --> 00:00:27.700
and working with game developers often
times I hear things about memory

00:00:27.700 --> 00:00:27.710
times I hear things about memory
 

00:00:27.710 --> 00:00:30.230
times I hear things about memory
problems that they have running out of

00:00:30.230 --> 00:00:30.240
problems that they have running out of
 

00:00:30.240 --> 00:00:33.889
problems that they have running out of
memory so I want to talk about some of

00:00:33.889 --> 00:00:33.899
memory so I want to talk about some of
 

00:00:33.899 --> 00:00:38.000
memory so I want to talk about some of
the things about memory and Android but

00:00:38.000 --> 00:00:38.010
the things about memory and Android but
 

00:00:38.010 --> 00:00:39.860
the things about memory and Android but
specifically about one of the things I

00:00:39.860 --> 00:00:39.870
specifically about one of the things I
 

00:00:39.870 --> 00:00:41.360
specifically about one of the things I
first want to mention before I go into

00:00:41.360 --> 00:00:41.370
first want to mention before I go into
 

00:00:41.370 --> 00:00:45.319
first want to mention before I go into
that is there have been some

00:00:45.319 --> 00:00:45.329
that is there have been some
 

00:00:45.329 --> 00:00:48.459
that is there have been some
improvements in Q with respect to memory

00:00:48.459 --> 00:00:48.469
improvements in Q with respect to memory
 

00:00:48.469 --> 00:00:53.330
improvements in Q with respect to memory
so during my slides I'm gonna be showing

00:00:53.330 --> 00:00:53.340
so during my slides I'm gonna be showing
 

00:00:53.340 --> 00:00:56.060
so during my slides I'm gonna be showing
this Q logo and that will kind of help

00:00:56.060 --> 00:00:56.070
this Q logo and that will kind of help
 

00:00:56.070 --> 00:00:58.849
this Q logo and that will kind of help
you remember that this is a new

00:00:58.849 --> 00:00:58.859
you remember that this is a new
 

00:00:58.859 --> 00:01:03.709
you remember that this is a new
something new and cute all right so what

00:01:03.709 --> 00:01:03.719
something new and cute all right so what
 

00:01:03.719 --> 00:01:06.109
something new and cute all right so what
are some of the problems that developers

00:01:06.109 --> 00:01:06.119
are some of the problems that developers
 

00:01:06.119 --> 00:01:10.609
are some of the problems that developers
face with memory the biggest problem is

00:01:10.609 --> 00:01:10.619
face with memory the biggest problem is
 

00:01:10.619 --> 00:01:12.500
face with memory the biggest problem is
of course running out of memory and

00:01:12.500 --> 00:01:12.510
of course running out of memory and
 

00:01:12.510 --> 00:01:17.210
of course running out of memory and
having your game just crash now Android

00:01:17.210 --> 00:01:17.220
having your game just crash now Android
 

00:01:17.220 --> 00:01:20.060
having your game just crash now Android
is different than other platforms if you

00:01:20.060 --> 00:01:20.070
is different than other platforms if you
 

00:01:20.070 --> 00:01:24.140
is different than other platforms if you
take for example consoles you have a

00:01:24.140 --> 00:01:24.150
take for example consoles you have a
 

00:01:24.150 --> 00:01:26.630
take for example consoles you have a
fixed amount of memory and it's much

00:01:26.630 --> 00:01:26.640
fixed amount of memory and it's much
 

00:01:26.640 --> 00:01:29.420
fixed amount of memory and it's much
easier to predict how much memory you

00:01:29.420 --> 00:01:29.430
easier to predict how much memory you
 

00:01:29.430 --> 00:01:32.630
easier to predict how much memory you
can use and how much memory to budget

00:01:32.630 --> 00:01:32.640
can use and how much memory to budget
 

00:01:32.640 --> 00:01:36.710
can use and how much memory to budget
for in the case of the PC you have a lot

00:01:36.710 --> 00:01:36.720
for in the case of the PC you have a lot
 

00:01:36.720 --> 00:01:39.620
for in the case of the PC you have a lot
of swap space so if you start running

00:01:39.620 --> 00:01:39.630
of swap space so if you start running
 

00:01:39.630 --> 00:01:41.840
of swap space so if you start running
low on memory you know a lot of that

00:01:41.840 --> 00:01:41.850
low on memory you know a lot of that
 

00:01:41.850 --> 00:01:45.289
low on memory you know a lot of that
memory can be swapped to disk however in

00:01:45.289 --> 00:01:45.299
memory can be swapped to disk however in
 

00:01:45.299 --> 00:01:48.200
memory can be swapped to disk however in
the case of Android when it runs low on

00:01:48.200 --> 00:01:48.210
the case of Android when it runs low on
 

00:01:48.210 --> 00:01:50.870
the case of Android when it runs low on
memory about the only thing that happens

00:01:50.870 --> 00:01:50.880
memory about the only thing that happens
 

00:01:50.880 --> 00:01:53.510
memory about the only thing that happens
it can happen to you that it can do

00:01:53.510 --> 00:01:53.520
it can happen to you that it can do
 

00:01:53.520 --> 00:01:56.870
it can happen to you that it can do
about it is your game gets killed okay

00:01:56.870 --> 00:01:56.880
about it is your game gets killed okay
 

00:01:56.880 --> 00:01:59.660
about it is your game gets killed okay
so it's not not not good so you want to

00:01:59.660 --> 00:01:59.670
so it's not not not good so you want to
 

00:01:59.670 --> 00:02:02.420
so it's not not not good so you want to
avoid that situation and I'm gonna be

00:02:02.420 --> 00:02:02.430
avoid that situation and I'm gonna be
 

00:02:02.430 --> 00:02:04.490
avoid that situation and I'm gonna be
talking about that today how to avoid

00:02:04.490 --> 00:02:04.500
talking about that today how to avoid
 

00:02:04.500 --> 00:02:07.460
talking about that today how to avoid
that now

00:02:07.460 --> 00:02:07.470
that now
 

00:02:07.470 --> 00:02:11.010
that now
ideally game developers would like to

00:02:11.010 --> 00:02:11.020
ideally game developers would like to
 

00:02:11.020 --> 00:02:14.100
ideally game developers would like to
have fixed memory budgets it makes it

00:02:14.100 --> 00:02:14.110
have fixed memory budgets it makes it
 

00:02:14.110 --> 00:02:15.900
have fixed memory budgets it makes it
much easier when you're developing the

00:02:15.900 --> 00:02:15.910
much easier when you're developing the
 

00:02:15.910 --> 00:02:18.000
much easier when you're developing the
game you know we tell your artists I

00:02:18.000 --> 00:02:18.010
game you know we tell your artists I
 

00:02:18.010 --> 00:02:19.590
game you know we tell your artists I
have a certain amount for textures

00:02:19.590 --> 00:02:19.600
have a certain amount for textures
 

00:02:19.600 --> 00:02:22.920
have a certain amount for textures
geometry you know you can set aside a

00:02:22.920 --> 00:02:22.930
geometry you know you can set aside a
 

00:02:22.930 --> 00:02:25.710
geometry you know you can set aside a
certain amount for code but in order to

00:02:25.710 --> 00:02:25.720
certain amount for code but in order to
 

00:02:25.720 --> 00:02:28.979
certain amount for code but in order to
do this you need to know how big that

00:02:28.979 --> 00:02:28.989
do this you need to know how big that
 

00:02:28.989 --> 00:02:32.400
do this you need to know how big that
whole pie is and and that's the hard

00:02:32.400 --> 00:02:32.410
whole pie is and and that's the hard
 

00:02:32.410 --> 00:02:36.540
whole pie is and and that's the hard
thing to do because in order to do this

00:02:36.540 --> 00:02:36.550
thing to do because in order to do this
 

00:02:36.550 --> 00:02:41.340
thing to do because in order to do this
you need to know the size of memory how

00:02:41.340 --> 00:02:41.350
you need to know the size of memory how
 

00:02:41.350 --> 00:02:44.610
you need to know the size of memory how
much memory is available so in the case

00:02:44.610 --> 00:02:44.620
much memory is available so in the case
 

00:02:44.620 --> 00:02:48.780
much memory is available so in the case
of Android you can set one one answer to

00:02:48.780 --> 00:02:48.790
of Android you can set one one answer to
 

00:02:48.790 --> 00:02:52.590
of Android you can set one one answer to
this question is as much as possible but

00:02:52.590 --> 00:02:52.600
this question is as much as possible but
 

00:02:52.600 --> 00:02:55.650
this question is as much as possible but
that's still kind of vague because it

00:02:55.650 --> 00:02:55.660
that's still kind of vague because it
 

00:02:55.660 --> 00:02:59.670
that's still kind of vague because it
depends a lot on the system you know the

00:02:59.670 --> 00:02:59.680
depends a lot on the system you know the
 

00:02:59.680 --> 00:03:03.240
depends a lot on the system you know the
system can't be taken out of memory it

00:03:03.240 --> 00:03:03.250
system can't be taken out of memory it
 

00:03:03.250 --> 00:03:06.870
system can't be taken out of memory it
still has to be there so your game has

00:03:06.870 --> 00:03:06.880
still has to be there so your game has
 

00:03:06.880 --> 00:03:09.479
still has to be there so your game has
to share that memory with with the

00:03:09.479 --> 00:03:09.489
to share that memory with with the
 

00:03:09.489 --> 00:03:14.430
to share that memory with with the
system so what this means is there's

00:03:14.430 --> 00:03:14.440
system so what this means is there's
 

00:03:14.440 --> 00:03:17.370
system so what this means is there's
really no definite fixed size on how

00:03:17.370 --> 00:03:17.380
really no definite fixed size on how
 

00:03:17.380 --> 00:03:22.560
really no definite fixed size on how
much available memory you have I'm

00:03:22.560 --> 00:03:22.570
much available memory you have I'm
 

00:03:22.570 --> 00:03:26.699
much available memory you have I'm
hoping that by seeing this talk and

00:03:26.699 --> 00:03:26.709
hoping that by seeing this talk and
 

00:03:26.709 --> 00:03:29.729
hoping that by seeing this talk and
learning more about Android memory and

00:03:29.729 --> 00:03:29.739
learning more about Android memory and
 

00:03:29.739 --> 00:03:32.550
learning more about Android memory and
understanding how it works that you'll

00:03:32.550 --> 00:03:32.560
understanding how it works that you'll
 

00:03:32.560 --> 00:03:35.220
understanding how it works that you'll
be able to prevent the bad things from

00:03:35.220 --> 00:03:35.230
be able to prevent the bad things from
 

00:03:35.230 --> 00:03:39.780
be able to prevent the bad things from
happening like crashes now before it

00:03:39.780 --> 00:03:39.790
happening like crashes now before it
 

00:03:39.790 --> 00:03:43.470
happening like crashes now before it
gone I did this memory test I put

00:03:43.470 --> 00:03:43.480
gone I did this memory test I put
 

00:03:43.480 --> 00:03:46.259
gone I did this memory test I put
together this little app that allocates

00:03:46.259 --> 00:03:46.269
together this little app that allocates
 

00:03:46.269 --> 00:03:48.690
together this little app that allocates
memory and every time you press on this

00:03:48.690 --> 00:03:48.700
memory and every time you press on this
 

00:03:48.700 --> 00:03:50.550
memory and every time you press on this
red button and allocates a hundred

00:03:50.550 --> 00:03:50.560
red button and allocates a hundred
 

00:03:50.560 --> 00:03:55.229
red button and allocates a hundred
megabytes and I was able to allocate 4.1

00:03:55.229 --> 00:03:55.239
megabytes and I was able to allocate 4.1
 

00:03:55.239 --> 00:03:59.099
megabytes and I was able to allocate 4.1
gigabytes on a device that only has four

00:03:59.099 --> 00:03:59.109
gigabytes on a device that only has four
 

00:03:59.109 --> 00:04:03.470
gigabytes on a device that only has four
gigabytes of RAM how is that possible so

00:04:03.470 --> 00:04:03.480
gigabytes of RAM how is that possible so
 

00:04:03.480 --> 00:04:05.819
gigabytes of RAM how is that possible so
first of all I don't recommend that

00:04:05.819 --> 00:04:05.829
first of all I don't recommend that
 

00:04:05.829 --> 00:04:08.099
first of all I don't recommend that
games do this it's you're gonna run into

00:04:08.099 --> 00:04:08.109
games do this it's you're gonna run into
 

00:04:08.109 --> 00:04:10.020
games do this it's you're gonna run into
other problems if you try to allocate

00:04:10.020 --> 00:04:10.030
other problems if you try to allocate
 

00:04:10.030 --> 00:04:12.509
other problems if you try to allocate
that much memory but I want you to think

00:04:12.509 --> 00:04:12.519
that much memory but I want you to think
 

00:04:12.519 --> 00:04:15.659
that much memory but I want you to think
about that and we'll come back to that

00:04:15.659 --> 00:04:15.669
about that and we'll come back to that
 

00:04:15.669 --> 00:04:18.240
about that and we'll come back to that
later

00:04:18.240 --> 00:04:18.250
 
 

00:04:18.250 --> 00:04:20.379
 
so here are some of the things that I

00:04:20.379 --> 00:04:20.389
so here are some of the things that I
 

00:04:20.389 --> 00:04:22.420
so here are some of the things that I
think game developers should know about

00:04:22.420 --> 00:04:22.430
think game developers should know about
 

00:04:22.430 --> 00:04:27.310
think game developers should know about
Android memory first of all the Android

00:04:27.310 --> 00:04:27.320
Android memory first of all the Android
 

00:04:27.320 --> 00:04:30.909
Android memory first of all the Android
memory philosophy it's similar to Linux

00:04:30.909 --> 00:04:30.919
memory philosophy it's similar to Linux
 

00:04:30.919 --> 00:04:35.800
memory philosophy it's similar to Linux
because Android is based on Linux it

00:04:35.800 --> 00:04:35.810
because Android is based on Linux it
 

00:04:35.810 --> 00:04:38.770
because Android is based on Linux it
wants to use all of RAM if you think

00:04:38.770 --> 00:04:38.780
wants to use all of RAM if you think
 

00:04:38.780 --> 00:04:39.370
wants to use all of RAM if you think
about it

00:04:39.370 --> 00:04:39.380
about it
 

00:04:39.380 --> 00:04:42.490
about it
free RAM is really doing no one any good

00:04:42.490 --> 00:04:42.500
free RAM is really doing no one any good
 

00:04:42.500 --> 00:04:45.240
free RAM is really doing no one any good
it's just sitting there doing nothing

00:04:45.240 --> 00:04:45.250
it's just sitting there doing nothing
 

00:04:45.250 --> 00:04:49.629
it's just sitting there doing nothing
so the way Android uses the all of this

00:04:49.629 --> 00:04:49.639
so the way Android uses the all of this
 

00:04:49.639 --> 00:04:54.790
so the way Android uses the all of this
Ram is to keep apps in memory the result

00:04:54.790 --> 00:04:54.800
Ram is to keep apps in memory the result
 

00:04:54.800 --> 00:04:57.490
Ram is to keep apps in memory the result
of this is you've never really have a

00:04:57.490 --> 00:04:57.500
of this is you've never really have a
 

00:04:57.500 --> 00:05:02.350
of this is you've never really have a
lot of free memory on Android devices so

00:05:02.350 --> 00:05:02.360
lot of free memory on Android devices so
 

00:05:02.360 --> 00:05:04.060
lot of free memory on Android devices so
why do you keep all of these apps in

00:05:04.060 --> 00:05:04.070
why do you keep all of these apps in
 

00:05:04.070 --> 00:05:06.040
why do you keep all of these apps in
memory is so you can do things like fast

00:05:06.040 --> 00:05:06.050
memory is so you can do things like fast
 

00:05:06.050 --> 00:05:08.650
memory is so you can do things like fast
app switching if you have an app that

00:05:08.650 --> 00:05:08.660
app switching if you have an app that
 

00:05:08.660 --> 00:05:10.180
app switching if you have an app that
you started and you put it in the

00:05:10.180 --> 00:05:10.190
you started and you put it in the
 

00:05:10.190 --> 00:05:11.800
you started and you put it in the
background and you go to another app

00:05:11.800 --> 00:05:11.810
background and you go to another app
 

00:05:11.810 --> 00:05:14.110
background and you go to another app
you're able to switch to different apps

00:05:14.110 --> 00:05:14.120
you're able to switch to different apps
 

00:05:14.120 --> 00:05:19.090
you're able to switch to different apps
because they stay resident in memory now

00:05:19.090 --> 00:05:19.100
because they stay resident in memory now
 

00:05:19.100 --> 00:05:21.070
because they stay resident in memory now
the nice thing about queue a new

00:05:21.070 --> 00:05:21.080
the nice thing about queue a new
 

00:05:21.080 --> 00:05:23.950
the nice thing about queue a new
improvement in queue is that we're doing

00:05:23.950 --> 00:05:23.960
improvement in queue is that we're doing
 

00:05:23.960 --> 00:05:26.350
improvement in queue is that we're doing
very active compaction of these

00:05:26.350 --> 00:05:26.360
very active compaction of these
 

00:05:26.360 --> 00:05:29.020
very active compaction of these
background apps so that if you have a

00:05:29.020 --> 00:05:29.030
background apps so that if you have a
 

00:05:29.030 --> 00:05:31.240
background apps so that if you have a
very large app like your game for

00:05:31.240 --> 00:05:31.250
very large app like your game for
 

00:05:31.250 --> 00:05:34.150
very large app like your game for
example you can actually put your game

00:05:34.150 --> 00:05:34.160
example you can actually put your game
 

00:05:34.160 --> 00:05:35.980
example you can actually put your game
into the background the users can put

00:05:35.980 --> 00:05:35.990
into the background the users can put
 

00:05:35.990 --> 00:05:38.230
into the background the users can put
your game into the background and it'll

00:05:38.230 --> 00:05:38.240
your game into the background and it'll
 

00:05:38.240 --> 00:05:40.360
your game into the background and it'll
still be resident and running when it

00:05:40.360 --> 00:05:40.370
still be resident and running when it
 

00:05:40.370 --> 00:05:46.930
still be resident and running when it
comes back so let's look at some of the

00:05:46.930 --> 00:05:46.940
comes back so let's look at some of the
 

00:05:46.940 --> 00:05:50.560
comes back so let's look at some of the
specifics about device memory there's

00:05:50.560 --> 00:05:50.570
specifics about device memory there's
 

00:05:50.570 --> 00:05:52.390
specifics about device memory there's
different types of memory you can

00:05:52.390 --> 00:05:52.400
different types of memory you can
 

00:05:52.400 --> 00:05:55.719
different types of memory you can
categorize them by size and also by how

00:05:55.719 --> 00:05:55.729
categorize them by size and also by how
 

00:05:55.729 --> 00:05:59.110
categorize them by size and also by how
fast that memory is so for example RAM

00:05:59.110 --> 00:05:59.120
fast that memory is so for example RAM
 

00:05:59.120 --> 00:06:02.290
fast that memory is so for example RAM
is the fast memory it's limited in size

00:06:02.290 --> 00:06:02.300
is the fast memory it's limited in size
 

00:06:02.300 --> 00:06:04.590
is the fast memory it's limited in size
it's smaller than other types of memory

00:06:04.590 --> 00:06:04.600
it's smaller than other types of memory
 

00:06:04.600 --> 00:06:08.290
it's smaller than other types of memory
one thing to consider about RAM is that

00:06:08.290 --> 00:06:08.300
one thing to consider about RAM is that
 

00:06:08.300 --> 00:06:11.040
one thing to consider about RAM is that
it's shared between the CPU and the GPU

00:06:11.040 --> 00:06:11.050
it's shared between the CPU and the GPU
 

00:06:11.050 --> 00:06:15.629
it's shared between the CPU and the GPU
so they both are using that memory

00:06:15.629 --> 00:06:15.639
so they both are using that memory
 

00:06:15.639 --> 00:06:18.070
so they both are using that memory
Android devices also have secondary

00:06:18.070 --> 00:06:18.080
Android devices also have secondary
 

00:06:18.080 --> 00:06:20.590
Android devices also have secondary
storage right this is where your apps

00:06:20.590 --> 00:06:20.600
storage right this is where your apps
 

00:06:20.600 --> 00:06:23.339
storage right this is where your apps
are stored when they're not being used

00:06:23.339 --> 00:06:23.349
are stored when they're not being used
 

00:06:23.349 --> 00:06:26.920
are stored when they're not being used
this is non-volatile Ram it's slower

00:06:26.920 --> 00:06:26.930
this is non-volatile Ram it's slower
 

00:06:26.930 --> 00:06:28.000
this is non-volatile Ram it's slower
than Ram

00:06:28.000 --> 00:06:28.010
than Ram
 

00:06:28.010 --> 00:06:31.030
than Ram
and but you have a lot more of it so

00:06:31.030 --> 00:06:31.040
and but you have a lot more of it so
 

00:06:31.040 --> 00:06:34.470
and but you have a lot more of it so
this diagram really isn't to scale

00:06:34.470 --> 00:06:34.480
this diagram really isn't to scale
 

00:06:34.480 --> 00:06:36.940
this diagram really isn't to scale
another type of RAM that I want to

00:06:36.940 --> 00:06:36.950
another type of RAM that I want to
 

00:06:36.950 --> 00:06:38.320
another type of RAM that I want to
mention or memory that I might want to

00:06:38.320 --> 00:06:38.330
mention or memory that I might want to
 

00:06:38.330 --> 00:06:42.340
mention or memory that I might want to
mention is Z RAM and this is compressed

00:06:42.340 --> 00:06:42.350
mention is Z RAM and this is compressed
 

00:06:42.350 --> 00:06:45.190
mention is Z RAM and this is compressed
memory that the system set aside sets

00:06:45.190 --> 00:06:45.200
memory that the system set aside sets
 

00:06:45.200 --> 00:06:51.190
memory that the system set aside sets
aside for swapping so go into a little

00:06:51.190 --> 00:06:51.200
aside for swapping so go into a little
 

00:06:51.200 --> 00:06:52.930
aside for swapping so go into a little
bit more detail here what are the

00:06:52.930 --> 00:06:52.940
bit more detail here what are the
 

00:06:52.940 --> 00:06:56.140
bit more detail here what are the
different types of memory obviously we

00:06:56.140 --> 00:06:56.150
different types of memory obviously we
 

00:06:56.150 --> 00:06:58.240
different types of memory obviously we
have three memory three free memory

00:06:58.240 --> 00:06:58.250
have three memory three free memory
 

00:06:58.250 --> 00:07:01.180
have three memory three free memory
pages we also have pages that are

00:07:01.180 --> 00:07:01.190
pages we also have pages that are
 

00:07:01.190 --> 00:07:05.100
pages we also have pages that are
storage back so this is these are pages

00:07:05.100 --> 00:07:05.110
storage back so this is these are pages
 

00:07:05.110 --> 00:07:09.670
storage back so this is these are pages
that are stored on that storage the

00:07:09.670 --> 00:07:09.680
that are stored on that storage the
 

00:07:09.680 --> 00:07:12.520
that are stored on that storage the
secondary storage device and also are in

00:07:12.520 --> 00:07:12.530
secondary storage device and also are in
 

00:07:12.530 --> 00:07:15.370
secondary storage device and also are in
memory note I just want to point out

00:07:15.370 --> 00:07:15.380
memory note I just want to point out
 

00:07:15.380 --> 00:07:16.510
memory note I just want to point out
when I say memory

00:07:16.510 --> 00:07:16.520
when I say memory
 

00:07:16.520 --> 00:07:18.910
when I say memory
I'm usually referring to RAM so I'm

00:07:18.910 --> 00:07:18.920
I'm usually referring to RAM so I'm
 

00:07:18.920 --> 00:07:21.400
I'm usually referring to RAM so I'm
using those terms interchangeably when I

00:07:21.400 --> 00:07:21.410
using those terms interchangeably when I
 

00:07:21.410 --> 00:07:23.470
using those terms interchangeably when I
talk about storage memory I'll usually

00:07:23.470 --> 00:07:23.480
talk about storage memory I'll usually
 

00:07:23.480 --> 00:07:26.940
talk about storage memory I'll usually
try to refer to it as storage

00:07:26.940 --> 00:07:26.950
try to refer to it as storage
 

00:07:26.950 --> 00:07:30.010
try to refer to it as storage
now there's also clean pages clean pages

00:07:30.010 --> 00:07:30.020
now there's also clean pages clean pages
 

00:07:30.020 --> 00:07:32.950
now there's also clean pages clean pages
or pages that are storage back but have

00:07:32.950 --> 00:07:32.960
or pages that are storage back but have
 

00:07:32.960 --> 00:07:34.960
or pages that are storage back but have
not been modified and you also have

00:07:34.960 --> 00:07:34.970
not been modified and you also have
 

00:07:34.970 --> 00:07:37.570
not been modified and you also have
dirty pages which pages that have been

00:07:37.570 --> 00:07:37.580
dirty pages which pages that have been
 

00:07:37.580 --> 00:07:42.220
dirty pages which pages that have been
modified anonymous memory you might have

00:07:42.220 --> 00:07:42.230
modified anonymous memory you might have
 

00:07:42.230 --> 00:07:42.820
modified anonymous memory you might have
heard about that

00:07:42.820 --> 00:07:42.830
heard about that
 

00:07:42.830 --> 00:07:45.040
heard about that
that's memory that you're allocating

00:07:45.040 --> 00:07:45.050
that's memory that you're allocating
 

00:07:45.050 --> 00:07:50.380
that's memory that you're allocating
that you allocate through malloc so what

00:07:50.380 --> 00:07:50.390
that you allocate through malloc so what
 

00:07:50.390 --> 00:07:52.180
that you allocate through malloc so what
happens when you run low on memory on

00:07:52.180 --> 00:07:52.190
happens when you run low on memory on
 

00:07:52.190 --> 00:07:57.520
happens when you run low on memory on
Android first of all there's something

00:07:57.520 --> 00:07:57.530
Android first of all there's something
 

00:07:57.530 --> 00:08:00.100
Android first of all there's something
in a kernel called kernel swap demon or

00:08:00.100 --> 00:08:00.110
in a kernel called kernel swap demon or
 

00:08:00.110 --> 00:08:04.330
in a kernel called kernel swap demon or
K swap D and this is responsible for

00:08:04.330 --> 00:08:04.340
K swap D and this is responsible for
 

00:08:04.340 --> 00:08:08.410
K swap D and this is responsible for
reclaiming memory so it turns pages that

00:08:08.410 --> 00:08:08.420
reclaiming memory so it turns pages that
 

00:08:08.420 --> 00:08:12.400
reclaiming memory so it turns pages that
are used in to free memory it does this

00:08:12.400 --> 00:08:12.410
are used in to free memory it does this
 

00:08:12.410 --> 00:08:14.650
are used in to free memory it does this
by swapping pages or in some cases

00:08:14.650 --> 00:08:14.660
by swapping pages or in some cases
 

00:08:14.660 --> 00:08:17.920
by swapping pages or in some cases
deleting the pages the interesting thing

00:08:17.920 --> 00:08:17.930
deleting the pages the interesting thing
 

00:08:17.930 --> 00:08:22.020
deleting the pages the interesting thing
is it runs asynchronously from your game

00:08:22.020 --> 00:08:22.030
is it runs asynchronously from your game
 

00:08:22.030 --> 00:08:24.820
is it runs asynchronously from your game
so here's an example where we've got a

00:08:24.820 --> 00:08:24.830
so here's an example where we've got a
 

00:08:24.830 --> 00:08:28.330
so here's an example where we've got a
storage back page it's clean we'll say

00:08:28.330 --> 00:08:28.340
storage back page it's clean we'll say
 

00:08:28.340 --> 00:08:31.030
storage back page it's clean we'll say
is clean not modified and it's this pink

00:08:31.030 --> 00:08:31.040
is clean not modified and it's this pink
 

00:08:31.040 --> 00:08:34.450
is clean not modified and it's this pink
rectangle here and let's say we want to

00:08:34.450 --> 00:08:34.460
rectangle here and let's say we want to
 

00:08:34.460 --> 00:08:37.360
rectangle here and let's say we want to
reclaim this memory so what K swap D

00:08:37.360 --> 00:08:37.370
reclaim this memory so what K swap D
 

00:08:37.370 --> 00:08:39.850
reclaim this memory so what K swap D
does is it just deletes the page right

00:08:39.850 --> 00:08:39.860
does is it just deletes the page right
 

00:08:39.860 --> 00:08:41.620
does is it just deletes the page right
because it hasn't been modified if

00:08:41.620 --> 00:08:41.630
because it hasn't been modified if
 

00:08:41.630 --> 00:08:43.149
because it hasn't been modified if
needs it again it'll just read it in

00:08:43.149 --> 00:08:43.159
needs it again it'll just read it in
 

00:08:43.159 --> 00:08:46.749
needs it again it'll just read it in
from storage suppose you have modified

00:08:46.749 --> 00:08:46.759
from storage suppose you have modified
 

00:08:46.759 --> 00:08:50.499
from storage suppose you have modified
memory and even if it was storage back

00:08:50.499 --> 00:08:50.509
memory and even if it was storage back
 

00:08:50.509 --> 00:08:53.019
memory and even if it was storage back
you couldn't just delete it because it

00:08:53.019 --> 00:08:53.029
you couldn't just delete it because it
 

00:08:53.029 --> 00:08:55.689
you couldn't just delete it because it
would it would that those changes would

00:08:55.689 --> 00:08:55.699
would it would that those changes would
 

00:08:55.699 --> 00:08:56.470
would it would that those changes would
be lost

00:08:56.470 --> 00:08:56.480
be lost
 

00:08:56.480 --> 00:09:00.850
be lost
so what Android can do is swap it into Z

00:09:00.850 --> 00:09:00.860
so what Android can do is swap it into Z
 

00:09:00.860 --> 00:09:03.550
so what Android can do is swap it into Z
room so that partition of memory that's

00:09:03.550 --> 00:09:03.560
room so that partition of memory that's
 

00:09:03.560 --> 00:09:07.059
room so that partition of memory that's
used for compressed memory now because

00:09:07.059 --> 00:09:07.069
used for compressed memory now because
 

00:09:07.069 --> 00:09:08.949
used for compressed memory now because
it's compressed it's going to take up

00:09:08.949 --> 00:09:08.959
it's compressed it's going to take up
 

00:09:08.959 --> 00:09:14.309
it's compressed it's going to take up
less space so this is a good thing

00:09:14.309 --> 00:09:14.319
less space so this is a good thing
 

00:09:14.319 --> 00:09:17.319
less space so this is a good thing
Android keeps track of certain memory

00:09:17.319 --> 00:09:17.329
Android keeps track of certain memory
 

00:09:17.329 --> 00:09:20.199
Android keeps track of certain memory
thresholds both low memory thresholds

00:09:20.199 --> 00:09:20.209
thresholds both low memory thresholds
 

00:09:20.209 --> 00:09:22.930
thresholds both low memory thresholds
and high memory thresholds and it uses

00:09:22.930 --> 00:09:22.940
and high memory thresholds and it uses
 

00:09:22.940 --> 00:09:25.480
and high memory thresholds and it uses
these thresholds as triggers on when to

00:09:25.480 --> 00:09:25.490
these thresholds as triggers on when to
 

00:09:25.490 --> 00:09:30.309
these thresholds as triggers on when to
do reclaims here's an example of how K

00:09:30.309 --> 00:09:30.319
do reclaims here's an example of how K
 

00:09:30.319 --> 00:09:32.650
do reclaims here's an example of how K
swap D reclaims memory say your

00:09:32.650 --> 00:09:32.660
swap D reclaims memory say your
 

00:09:32.660 --> 00:09:34.809
swap D reclaims memory say your
application is allocating memory and

00:09:34.809 --> 00:09:34.819
application is allocating memory and
 

00:09:34.819 --> 00:09:37.120
application is allocating memory and
this blue line here is the amount of

00:09:37.120 --> 00:09:37.130
this blue line here is the amount of
 

00:09:37.130 --> 00:09:39.699
this blue line here is the amount of
free memory that you have so as you keep

00:09:39.699 --> 00:09:39.709
free memory that you have so as you keep
 

00:09:39.709 --> 00:09:42.280
free memory that you have so as you keep
allocating memory over time that blue

00:09:42.280 --> 00:09:42.290
allocating memory over time that blue
 

00:09:42.290 --> 00:09:44.410
allocating memory over time that blue
line goes down until it eventually hits

00:09:44.410 --> 00:09:44.420
line goes down until it eventually hits
 

00:09:44.420 --> 00:09:48.100
line goes down until it eventually hits
the low memory threshold at that point K

00:09:48.100 --> 00:09:48.110
the low memory threshold at that point K
 

00:09:48.110 --> 00:09:50.290
the low memory threshold at that point K
swap D kicks in and starts reclaiming

00:09:50.290 --> 00:09:50.300
swap D kicks in and starts reclaiming
 

00:09:50.300 --> 00:09:53.319
swap D kicks in and starts reclaiming
pages so your memory your free memory

00:09:53.319 --> 00:09:53.329
pages so your memory your free memory
 

00:09:53.329 --> 00:09:56.139
pages so your memory your free memory
goes back up but you don't want to keep

00:09:56.139 --> 00:09:56.149
goes back up but you don't want to keep
 

00:09:56.149 --> 00:09:58.269
goes back up but you don't want to keep
reclaiming page pages you know because

00:09:58.269 --> 00:09:58.279
reclaiming page pages you know because
 

00:09:58.279 --> 00:09:59.860
reclaiming page pages you know because
some of those pages you want to keep in

00:09:59.860 --> 00:09:59.870
some of those pages you want to keep in
 

00:09:59.870 --> 00:10:01.990
some of those pages you want to keep in
memory because your your game might need

00:10:01.990 --> 00:10:02.000
memory because your your game might need
 

00:10:02.000 --> 00:10:05.079
memory because your your game might need
them so it stops for claiming memory and

00:10:05.079 --> 00:10:05.089
them so it stops for claiming memory and
 

00:10:05.089 --> 00:10:08.769
them so it stops for claiming memory and
then if your game keeps reclaim it if

00:10:08.769 --> 00:10:08.779
then if your game keeps reclaim it if
 

00:10:08.779 --> 00:10:10.809
then if your game keeps reclaim it if
your game keeps allocating memory this

00:10:10.809 --> 00:10:10.819
your game keeps allocating memory this
 

00:10:10.819 --> 00:10:15.360
your game keeps allocating memory this
whole process is gonna repeat itself I

00:10:15.360 --> 00:10:15.370
 
 

00:10:15.370 --> 00:10:18.220
 
also want to introduce this concept here

00:10:18.220 --> 00:10:18.230
also want to introduce this concept here
 

00:10:18.230 --> 00:10:22.120
also want to introduce this concept here
of available RAM versus free RAM so I

00:10:22.120 --> 00:10:22.130
of available RAM versus free RAM so I
 

00:10:22.130 --> 00:10:24.939
of available RAM versus free RAM so I
consider available RAM to be the free

00:10:24.939 --> 00:10:24.949
consider available RAM to be the free
 

00:10:24.949 --> 00:10:28.809
consider available RAM to be the free
RAM plus any kind of RAM that can be

00:10:28.809 --> 00:10:28.819
RAM plus any kind of RAM that can be
 

00:10:28.819 --> 00:10:34.960
RAM plus any kind of RAM that can be
reclaimed by case floppy so another part

00:10:34.960 --> 00:10:34.970
reclaimed by case floppy so another part
 

00:10:34.970 --> 00:10:36.910
reclaimed by case floppy so another part
of the kernel that helps to free up

00:10:36.910 --> 00:10:36.920
of the kernel that helps to free up
 

00:10:36.920 --> 00:10:38.470
of the kernel that helps to free up
memory is something called low memory

00:10:38.470 --> 00:10:38.480
memory is something called low memory
 

00:10:38.480 --> 00:10:41.439
memory is something called low memory
killer and it's also called LMK

00:10:41.439 --> 00:10:41.449
killer and it's also called LMK
 

00:10:41.449 --> 00:10:47.980
killer and it's also called LMK
abbreviated LMK and for each process it

00:10:47.980 --> 00:10:47.990
abbreviated LMK and for each process it
 

00:10:47.990 --> 00:10:50.799
abbreviated LMK and for each process it
keeps track of an out of memory adjust

00:10:50.799 --> 00:10:50.809
keeps track of an out of memory adjust
 

00:10:50.809 --> 00:10:53.500
keeps track of an out of memory adjust
score and a score ranges from minus one

00:10:53.500 --> 00:10:53.510
score and a score ranges from minus one
 

00:10:53.510 --> 00:10:54.400
score and a score ranges from minus one
thousand to one

00:10:54.400 --> 00:10:54.410
thousand to one
 

00:10:54.410 --> 00:10:58.300
thousand to one
mm to higher the score the more likely

00:10:58.300 --> 00:10:58.310
mm to higher the score the more likely
 

00:10:58.310 --> 00:11:00.879
mm to higher the score the more likely
to get killed so those get those with a

00:11:00.879 --> 00:11:00.889
to get killed so those get those with a
 

00:11:00.889 --> 00:11:03.699
to get killed so those get those with a
score of a thousand get killed first the

00:11:03.699 --> 00:11:03.709
score of a thousand get killed first the
 

00:11:03.709 --> 00:11:06.730
score of a thousand get killed first the
ones at the bottom at minus 1,000 a very

00:11:06.730 --> 00:11:06.740
ones at the bottom at minus 1,000 a very
 

00:11:06.740 --> 00:11:09.519
ones at the bottom at minus 1,000 a very
low score and are highly unlikely to get

00:11:09.519 --> 00:11:09.529
low score and are highly unlikely to get
 

00:11:09.529 --> 00:11:13.269
low score and are highly unlikely to get
killed so the background apps have these

00:11:13.269 --> 00:11:13.279
killed so the background apps have these
 

00:11:13.279 --> 00:11:15.490
killed so the background apps have these
high scores so they're more likely

00:11:15.490 --> 00:11:15.500
high scores so they're more likely
 

00:11:15.500 --> 00:11:17.999
high scores so they're more likely
they're the first ones to get killed

00:11:17.999 --> 00:11:18.009
they're the first ones to get killed
 

00:11:18.009 --> 00:11:21.009
they're the first ones to get killed
your foreground app is going to get

00:11:21.009 --> 00:11:21.019
your foreground app is going to get
 

00:11:21.019 --> 00:11:23.079
your foreground app is going to get
killed if it has to get killed

00:11:23.079 --> 00:11:23.089
killed if it has to get killed
 

00:11:23.089 --> 00:11:26.829
killed if it has to get killed
after all the background apps and this

00:11:26.829 --> 00:11:26.839
after all the background apps and this
 

00:11:26.839 --> 00:11:29.259
after all the background apps and this
system is almost never gonna get killed

00:11:29.259 --> 00:11:29.269
system is almost never gonna get killed
 

00:11:29.269 --> 00:11:32.619
system is almost never gonna get killed
so all of these system processes you

00:11:32.619 --> 00:11:32.629
so all of these system processes you
 

00:11:32.629 --> 00:11:34.179
so all of these system processes you
know they're not going to get killed

00:11:34.179 --> 00:11:34.189
know they're not going to get killed
 

00:11:34.189 --> 00:11:38.710
know they're not going to get killed
before your game one thing to consider

00:11:38.710 --> 00:11:38.720
before your game one thing to consider
 

00:11:38.720 --> 00:11:42.819
before your game one thing to consider
is that om can modify the behavior of

00:11:42.819 --> 00:11:42.829
is that om can modify the behavior of
 

00:11:42.829 --> 00:11:45.460
is that om can modify the behavior of
low memory killer so it can vary from

00:11:45.460 --> 00:11:45.470
low memory killer so it can vary from
 

00:11:45.470 --> 00:11:49.329
low memory killer so it can vary from
different devices there's an example of

00:11:49.329 --> 00:11:49.339
different devices there's an example of
 

00:11:49.339 --> 00:11:52.590
different devices there's an example of
how low memory killer works with a game

00:11:52.590 --> 00:11:52.600
how low memory killer works with a game
 

00:11:52.600 --> 00:11:55.210
how low memory killer works with a game
so you have your game here running in a

00:11:55.210 --> 00:11:55.220
so you have your game here running in a
 

00:11:55.220 --> 00:11:57.850
so you have your game here running in a
foreground and it has a out of memory

00:11:57.850 --> 00:11:57.860
foreground and it has a out of memory
 

00:11:57.860 --> 00:12:00.249
foreground and it has a out of memory
adjust score of zero and you have these

00:12:00.249 --> 00:12:00.259
adjust score of zero and you have these
 

00:12:00.259 --> 00:12:03.220
adjust score of zero and you have these
other two apps in the background and

00:12:03.220 --> 00:12:03.230
other two apps in the background and
 

00:12:03.230 --> 00:12:06.040
other two apps in the background and
they have out of memory of score of nine

00:12:06.040 --> 00:12:06.050
they have out of memory of score of nine
 

00:12:06.050 --> 00:12:09.910
they have out of memory of score of nine
oh five and nine hundred

00:12:09.910 --> 00:12:09.920
 
 

00:12:09.920 --> 00:12:13.059
 
on the right here is a little chart

00:12:13.059 --> 00:12:13.069
on the right here is a little chart
 

00:12:13.069 --> 00:12:17.470
on the right here is a little chart
showing the available memory and we'll

00:12:17.470 --> 00:12:17.480
showing the available memory and we'll
 

00:12:17.480 --> 00:12:19.689
showing the available memory and we'll
see what happens when your game starts

00:12:19.689 --> 00:12:19.699
see what happens when your game starts
 

00:12:19.699 --> 00:12:20.710
see what happens when your game starts
allocating memory

00:12:20.710 --> 00:12:20.720
allocating memory
 

00:12:20.720 --> 00:12:24.790
allocating memory
okay so you've allocated memory below

00:12:24.790 --> 00:12:24.800
okay so you've allocated memory below
 

00:12:24.800 --> 00:12:28.030
okay so you've allocated memory below
this 9:05 threshold the core it's a

00:12:28.030 --> 00:12:28.040
this 9:05 threshold the core it's a
 

00:12:28.040 --> 00:12:31.090
this 9:05 threshold the core it's a
memory threshold corresponding to the

00:12:31.090 --> 00:12:31.100
memory threshold corresponding to the
 

00:12:31.100 --> 00:12:33.280
memory threshold corresponding to the
out of memory just score at that point

00:12:33.280 --> 00:12:33.290
out of memory just score at that point
 

00:12:33.290 --> 00:12:36.160
out of memory just score at that point
low memory killer knows that it can kill

00:12:36.160 --> 00:12:36.170
low memory killer knows that it can kill
 

00:12:36.170 --> 00:12:39.400
low memory killer knows that it can kill
that process and because of that it

00:12:39.400 --> 00:12:39.410
that process and because of that it
 

00:12:39.410 --> 00:12:42.249
that process and because of that it
frees up memory okay this is great so

00:12:42.249 --> 00:12:42.259
frees up memory okay this is great so
 

00:12:42.259 --> 00:12:45.299
frees up memory okay this is great so
your app just keeps on allocating memory

00:12:45.299 --> 00:12:45.309
your app just keeps on allocating memory
 

00:12:45.309 --> 00:12:47.230
your app just keeps on allocating memory
eventually it'll get to the point where

00:12:47.230 --> 00:12:47.240
eventually it'll get to the point where
 

00:12:47.240 --> 00:12:50.319
eventually it'll get to the point where
it hits this threshold and now the

00:12:50.319 --> 00:12:50.329
it hits this threshold and now the
 

00:12:50.329 --> 00:12:52.389
it hits this threshold and now the
Chrome App in the background will get

00:12:52.389 --> 00:12:52.399
Chrome App in the background will get
 

00:12:52.399 --> 00:12:55.569
Chrome App in the background will get
killed by low memory killer if your game

00:12:55.569 --> 00:12:55.579
killed by low memory killer if your game
 

00:12:55.579 --> 00:12:58.299
killed by low memory killer if your game
keeps allocating it'll it'll eventually

00:12:58.299 --> 00:12:58.309
keeps allocating it'll it'll eventually
 

00:12:58.309 --> 00:13:00.910
keeps allocating it'll it'll eventually
get to the point where well sorry it

00:13:00.910 --> 00:13:00.920
get to the point where well sorry it
 

00:13:00.920 --> 00:13:02.470
get to the point where well sorry it
gets more memory back because it killed

00:13:02.470 --> 00:13:02.480
gets more memory back because it killed
 

00:13:02.480 --> 00:13:04.120
gets more memory back because it killed
a chrome but it'll eventually get to the

00:13:04.120 --> 00:13:04.130
a chrome but it'll eventually get to the
 

00:13:04.130 --> 00:13:07.840
a chrome but it'll eventually get to the
point where it gets below that

00:13:07.840 --> 00:13:07.850
point where it gets below that
 

00:13:07.850 --> 00:13:10.720
point where it gets below that
zero thresholds and at that point low

00:13:10.720 --> 00:13:10.730
zero thresholds and at that point low
 

00:13:10.730 --> 00:13:12.999
zero thresholds and at that point low
memory killer will come in and kill your

00:13:12.999 --> 00:13:13.009
memory killer will come in and kill your
 

00:13:13.009 --> 00:13:16.870
memory killer will come in and kill your
your game so that's how games get killed

00:13:16.870 --> 00:13:16.880
your game so that's how games get killed
 

00:13:16.880 --> 00:13:20.439
your game so that's how games get killed
because they run low on memory Android

00:13:20.439 --> 00:13:20.449
because they run low on memory Android
 

00:13:20.449 --> 00:13:21.910
because they run low on memory Android
knows that it has to keep a certain

00:13:21.910 --> 00:13:21.920
knows that it has to keep a certain
 

00:13:21.920 --> 00:13:24.939
knows that it has to keep a certain
amount of free memory around and it'll

00:13:24.939 --> 00:13:24.949
amount of free memory around and it'll
 

00:13:24.949 --> 00:13:27.519
amount of free memory around and it'll
even kill your game to make sure that

00:13:27.519 --> 00:13:27.529
even kill your game to make sure that
 

00:13:27.529 --> 00:13:32.370
even kill your game to make sure that
that amount of free memory is available

00:13:32.370 --> 00:13:32.380
 
 

00:13:32.380 --> 00:13:35.050
 
fortunately Android does have something

00:13:35.050 --> 00:13:35.060
fortunately Android does have something
 

00:13:35.060 --> 00:13:39.040
fortunately Android does have something
called on term memory on term memory is

00:13:39.040 --> 00:13:39.050
called on term memory on term memory is
 

00:13:39.050 --> 00:13:43.090
called on term memory on term memory is
a warning about low memory that your the

00:13:43.090 --> 00:13:43.100
a warning about low memory that your the
 

00:13:43.100 --> 00:13:45.910
a warning about low memory that your the
system is running low on memory and it's

00:13:45.910 --> 00:13:45.920
system is running low on memory and it's
 

00:13:45.920 --> 00:13:48.309
system is running low on memory and it's
a callback to your game to tell it to do

00:13:48.309 --> 00:13:48.319
a callback to your game to tell it to do
 

00:13:48.319 --> 00:13:53.470
a callback to your game to tell it to do
something now in Android P and earlier

00:13:53.470 --> 00:13:53.480
something now in Android P and earlier
 

00:13:53.480 --> 00:13:57.249
something now in Android P and earlier
versions it's it wasn't that reliable

00:13:57.249 --> 00:13:57.259
versions it's it wasn't that reliable
 

00:13:57.259 --> 00:14:02.040
versions it's it wasn't that reliable
they were problems where it was not

00:14:02.040 --> 00:14:02.050
they were problems where it was not
 

00:14:02.050 --> 00:14:04.210
they were problems where it was not
signaling this on trend memory even

00:14:04.210 --> 00:14:04.220
signaling this on trend memory even
 

00:14:04.220 --> 00:14:05.860
signaling this on trend memory even
though you're in a critical stage where

00:14:05.860 --> 00:14:05.870
though you're in a critical stage where
 

00:14:05.870 --> 00:14:11.050
though you're in a critical stage where
you're going to get killed so games or

00:14:11.050 --> 00:14:11.060
you're going to get killed so games or
 

00:14:11.060 --> 00:14:12.400
you're going to get killed so games or
apps may not have been paying attention

00:14:12.400 --> 00:14:12.410
apps may not have been paying attention
 

00:14:12.410 --> 00:14:15.879
apps may not have been paying attention
to this now this has been improved in

00:14:15.879 --> 00:14:15.889
to this now this has been improved in
 

00:14:15.889 --> 00:14:21.129
to this now this has been improved in
queue and it's using a new trigger now -

00:14:21.129 --> 00:14:21.139
queue and it's using a new trigger now -
 

00:14:21.139 --> 00:14:25.420
queue and it's using a new trigger now -
oh let the on term memory know when to

00:14:25.420 --> 00:14:25.430
oh let the on term memory know when to
 

00:14:25.430 --> 00:14:27.790
oh let the on term memory know when to
send its call went to the system to send

00:14:27.790 --> 00:14:27.800
send its call went to the system to send
 

00:14:27.800 --> 00:14:30.189
send its call went to the system to send
this on to memory call it's called

00:14:30.189 --> 00:14:30.199
this on to memory call it's called
 

00:14:30.199 --> 00:14:33.160
this on to memory call it's called
pressure stall information pressure

00:14:33.160 --> 00:14:33.170
pressure stall information pressure
 

00:14:33.170 --> 00:14:34.870
pressure stall information pressure
stall information was something

00:14:34.870 --> 00:14:34.880
stall information was something
 

00:14:34.880 --> 00:14:37.809
stall information was something
introduced in Linux and it was modified

00:14:37.809 --> 00:14:37.819
introduced in Linux and it was modified
 

00:14:37.819 --> 00:14:43.720
introduced in Linux and it was modified
by Android to measure the the time it

00:14:43.720 --> 00:14:43.730
by Android to measure the the time it
 

00:14:43.730 --> 00:14:48.879
by Android to measure the the time it
takes to obtain memory so if you

00:14:48.879 --> 00:14:48.889
takes to obtain memory so if you
 

00:14:48.889 --> 00:14:51.160
takes to obtain memory so if you
remember I was talking about case floppy

00:14:51.160 --> 00:14:51.170
remember I was talking about case floppy
 

00:14:51.170 --> 00:14:53.439
remember I was talking about case floppy
and low memory killer these things take

00:14:53.439 --> 00:14:53.449
and low memory killer these things take
 

00:14:53.449 --> 00:14:57.429
and low memory killer these things take
time and so as the system runs low on

00:14:57.429 --> 00:14:57.439
time and so as the system runs low on
 

00:14:57.439 --> 00:15:00.699
time and so as the system runs low on
memory these take more time to reclaim

00:15:00.699 --> 00:15:00.709
memory these take more time to reclaim
 

00:15:00.709 --> 00:15:04.389
memory these take more time to reclaim
memory and give the app more memory so

00:15:04.389 --> 00:15:04.399
memory and give the app more memory so
 

00:15:04.399 --> 00:15:06.999
memory and give the app more memory so
pressure stall information measures that

00:15:06.999 --> 00:15:07.009
pressure stall information measures that
 

00:15:07.009 --> 00:15:09.309
pressure stall information measures that
and the longer it takes when it gets to

00:15:09.309 --> 00:15:09.319
and the longer it takes when it gets to
 

00:15:09.319 --> 00:15:11.980
and the longer it takes when it gets to
a certain point it'll say ok now I'm

00:15:11.980 --> 00:15:11.990
a certain point it'll say ok now I'm
 

00:15:11.990 --> 00:15:13.509
a certain point it'll say ok now I'm
gonna warn the app that we're really

00:15:13.509 --> 00:15:13.519
gonna warn the app that we're really
 

00:15:13.519 --> 00:15:15.850
gonna warn the app that we're really
running low on memory

00:15:15.850 --> 00:15:15.860
running low on memory
 

00:15:15.860 --> 00:15:17.680
running low on memory
and that's where an aunt rumor gets

00:15:17.680 --> 00:15:17.690
and that's where an aunt rumor gets
 

00:15:17.690 --> 00:15:22.150
and that's where an aunt rumor gets
called so I just want to kind of

00:15:22.150 --> 00:15:22.160
called so I just want to kind of
 

00:15:22.160 --> 00:15:23.889
called so I just want to kind of
summarize here you've got low memory

00:15:23.889 --> 00:15:23.899
summarize here you've got low memory
 

00:15:23.899 --> 00:15:26.350
summarize here you've got low memory
killer case flop D and then you have

00:15:26.350 --> 00:15:26.360
killer case flop D and then you have
 

00:15:26.360 --> 00:15:29.170
killer case flop D and then you have
your game and these are all these are

00:15:29.170 --> 00:15:29.180
your game and these are all these are
 

00:15:29.180 --> 00:15:32.290
your game and these are all these are
running asynchronously and the problem

00:15:32.290 --> 00:15:32.300
running asynchronously and the problem
 

00:15:32.300 --> 00:15:35.040
running asynchronously and the problem
with that is things tend to happen

00:15:35.040 --> 00:15:35.050
with that is things tend to happen
 

00:15:35.050 --> 00:15:37.650
with that is things tend to happen
unexpected

00:15:37.650 --> 00:15:37.660
unexpected
 

00:15:37.660 --> 00:15:40.210
unexpected
fortunately changes in queue like

00:15:40.210 --> 00:15:40.220
fortunately changes in queue like
 

00:15:40.220 --> 00:15:42.670
fortunately changes in queue like
pressure stall information should help

00:15:42.670 --> 00:15:42.680
pressure stall information should help
 

00:15:42.680 --> 00:15:47.380
pressure stall information should help
with this so what things should your

00:15:47.380 --> 00:15:47.390
with this so what things should your
 

00:15:47.390 --> 00:15:51.389
with this so what things should your
game do to avoid low memory situations

00:15:51.389 --> 00:15:51.399
game do to avoid low memory situations
 

00:15:51.399 --> 00:15:54.639
game do to avoid low memory situations
the first thing is respond to long term

00:15:54.639 --> 00:15:54.649
the first thing is respond to long term
 

00:15:54.649 --> 00:15:57.699
the first thing is respond to long term
memory now we feel that this is more

00:15:57.699 --> 00:15:57.709
memory now we feel that this is more
 

00:15:57.709 --> 00:15:58.569
memory now we feel that this is more
reliable

00:15:58.569 --> 00:15:58.579
reliable
 

00:15:58.579 --> 00:16:00.940
reliable
it provides reliable signals so it's

00:16:00.940 --> 00:16:00.950
it provides reliable signals so it's
 

00:16:00.950 --> 00:16:02.949
it provides reliable signals so it's
something you really should respond to

00:16:02.949 --> 00:16:02.959
something you really should respond to
 

00:16:02.959 --> 00:16:05.620
something you really should respond to
because it's probably the only warning

00:16:05.620 --> 00:16:05.630
because it's probably the only warning
 

00:16:05.630 --> 00:16:10.870
because it's probably the only warning
you're gonna get now entree memory still

00:16:10.870 --> 00:16:10.880
you're gonna get now entree memory still
 

00:16:10.880 --> 00:16:14.440
you're gonna get now entree memory still
has high latency so it could you could

00:16:14.440 --> 00:16:14.450
has high latency so it could you could
 

00:16:14.450 --> 00:16:16.750
has high latency so it could you could
be running into a critical situation and

00:16:16.750 --> 00:16:16.760
be running into a critical situation and
 

00:16:16.760 --> 00:16:18.819
be running into a critical situation and
it may take some time for entre memory

00:16:18.819 --> 00:16:18.829
it may take some time for entre memory
 

00:16:18.829 --> 00:16:22.210
it may take some time for entre memory
to notify your game so when you do get

00:16:22.210 --> 00:16:22.220
to notify your game so when you do get
 

00:16:22.220 --> 00:16:24.250
to notify your game so when you do get
it you want to make sure you take action

00:16:24.250 --> 00:16:24.260
it you want to make sure you take action
 

00:16:24.260 --> 00:16:27.880
it you want to make sure you take action
and I mean doing things like trying to

00:16:27.880 --> 00:16:27.890
and I mean doing things like trying to
 

00:16:27.890 --> 00:16:30.250
and I mean doing things like trying to
reduce the allocations you know slow

00:16:30.250 --> 00:16:30.260
reduce the allocations you know slow
 

00:16:30.260 --> 00:16:33.550
reduce the allocations you know slow
down your allocations try to remove

00:16:33.550 --> 00:16:33.560
down your allocations try to remove
 

00:16:33.560 --> 00:16:36.250
down your allocations try to remove
things from memory as possible maybe if

00:16:36.250 --> 00:16:36.260
things from memory as possible maybe if
 

00:16:36.260 --> 00:16:38.590
things from memory as possible maybe if
you've got a lot of shaders resident in

00:16:38.590 --> 00:16:38.600
you've got a lot of shaders resident in
 

00:16:38.600 --> 00:16:40.420
you've got a lot of shaders resident in
memory you want to evict some of those

00:16:40.420 --> 00:16:40.430
memory you want to evict some of those
 

00:16:40.430 --> 00:16:43.590
memory you want to evict some of those
shaders maybe you want to use lower res

00:16:43.590 --> 00:16:43.600
shaders maybe you want to use lower res
 

00:16:43.600 --> 00:16:47.730
shaders maybe you want to use lower res
textures things like that and also

00:16:47.730 --> 00:16:47.740
textures things like that and also
 

00:16:47.740 --> 00:16:50.530
textures things like that and also
because you're running in a low memory

00:16:50.530 --> 00:16:50.540
because you're running in a low memory
 

00:16:50.540 --> 00:16:52.990
because you're running in a low memory
situation you have a greater probability

00:16:52.990 --> 00:16:53.000
situation you have a greater probability
 

00:16:53.000 --> 00:16:55.990
situation you have a greater probability
that the game might get killed so at

00:16:55.990 --> 00:16:56.000
that the game might get killed so at
 

00:16:56.000 --> 00:16:57.400
that the game might get killed so at
this point you might want to consider

00:16:57.400 --> 00:16:57.410
this point you might want to consider
 

00:16:57.410 --> 00:17:00.639
this point you might want to consider
saving the state of the game so if it

00:17:00.639 --> 00:17:00.649
saving the state of the game so if it
 

00:17:00.649 --> 00:17:03.610
saving the state of the game so if it
does get killed at least you know the

00:17:03.610 --> 00:17:03.620
does get killed at least you know the
 

00:17:03.620 --> 00:17:05.470
does get killed at least you know the
players were playing this game are not

00:17:05.470 --> 00:17:05.480
players were playing this game are not
 

00:17:05.480 --> 00:17:07.390
players were playing this game are not
going to be so frustrated when the game

00:17:07.390 --> 00:17:07.400
going to be so frustrated when the game
 

00:17:07.400 --> 00:17:09.250
going to be so frustrated when the game
gets launched again and they haven't

00:17:09.250 --> 00:17:09.260
gets launched again and they haven't
 

00:17:09.260 --> 00:17:13.710
gets launched again and they haven't
lost lost much

00:17:13.710 --> 00:17:13.720
 
 

00:17:13.720 --> 00:17:17.309
 
so here's some Java code that shows how

00:17:17.309 --> 00:17:17.319
so here's some Java code that shows how
 

00:17:17.319 --> 00:17:21.509
so here's some Java code that shows how
you can use on term memory so in a main

00:17:21.509 --> 00:17:21.519
you can use on term memory so in a main
 

00:17:21.519 --> 00:17:24.600
you can use on term memory so in a main
activity what you can do is make sure

00:17:24.600 --> 00:17:24.610
activity what you can do is make sure
 

00:17:24.610 --> 00:17:29.789
activity what you can do is make sure
you implement components callback - and

00:17:29.789 --> 00:17:29.799
you implement components callback - and
 

00:17:29.799 --> 00:17:32.519
you implement components callback - and
then you just implement this on term

00:17:32.519 --> 00:17:32.529
then you just implement this on term
 

00:17:32.529 --> 00:17:36.450
then you just implement this on term
memory call and notice that on term

00:17:36.450 --> 00:17:36.460
memory call and notice that on term
 

00:17:36.460 --> 00:17:39.480
memory call and notice that on term
memory gets passed a level and this

00:17:39.480 --> 00:17:39.490
memory gets passed a level and this
 

00:17:39.490 --> 00:17:42.600
memory gets passed a level and this
level corresponds to the severity of the

00:17:42.600 --> 00:17:42.610
level corresponds to the severity of the
 

00:17:42.610 --> 00:17:45.480
level corresponds to the severity of the
memory situation so it can be either

00:17:45.480 --> 00:17:45.490
memory situation so it can be either
 

00:17:45.490 --> 00:17:49.470
memory situation so it can be either
moderate or low and critical which is

00:17:49.470 --> 00:17:49.480
moderate or low and critical which is
 

00:17:49.480 --> 00:17:52.889
moderate or low and critical which is
the last one there are a few other

00:17:52.889 --> 00:17:52.899
the last one there are a few other
 

00:17:52.899 --> 00:17:55.169
the last one there are a few other
levels but these are the ones I think

00:17:55.169 --> 00:17:55.179
levels but these are the ones I think
 

00:17:55.179 --> 00:17:57.480
levels but these are the ones I think
are important once I've looked at and in

00:17:57.480 --> 00:17:57.490
are important once I've looked at and in
 

00:17:57.490 --> 00:17:59.700
are important once I've looked at and in
my case the only thing I did was here is

00:17:59.700 --> 00:17:59.710
my case the only thing I did was here is
 

00:17:59.710 --> 00:18:02.730
my case the only thing I did was here is
pop up a message showing what the memory

00:18:02.730 --> 00:18:02.740
pop up a message showing what the memory
 

00:18:02.740 --> 00:18:05.220
pop up a message showing what the memory
level is but in your case what you would

00:18:05.220 --> 00:18:05.230
level is but in your case what you would
 

00:18:05.230 --> 00:18:06.930
level is but in your case what you would
want to do is actually take actions and

00:18:06.930 --> 00:18:06.940
want to do is actually take actions and
 

00:18:06.940 --> 00:18:10.649
want to do is actually take actions and
try to reduce the memory so for unity

00:18:10.649 --> 00:18:10.659
try to reduce the memory so for unity
 

00:18:10.659 --> 00:18:13.889
try to reduce the memory so for unity
developers here's an example of a

00:18:13.889 --> 00:18:13.899
developers here's an example of a
 

00:18:13.899 --> 00:18:17.700
developers here's an example of a
c-sharp script and there's something

00:18:17.700 --> 00:18:17.710
c-sharp script and there's something
 

00:18:17.710 --> 00:18:20.909
c-sharp script and there's something
called application low memory events in

00:18:20.909 --> 00:18:20.919
called application low memory events in
 

00:18:20.919 --> 00:18:24.990
called application low memory events in
unity and these correspond to on term

00:18:24.990 --> 00:18:25.000
unity and these correspond to on term
 

00:18:25.000 --> 00:18:28.259
unity and these correspond to on term
memory calls so you want to subscribe to

00:18:28.259 --> 00:18:28.269
memory calls so you want to subscribe to
 

00:18:28.269 --> 00:18:31.350
memory calls so you want to subscribe to
this event and then have a callback that

00:18:31.350 --> 00:18:31.360
this event and then have a callback that
 

00:18:31.360 --> 00:18:34.950
this event and then have a callback that
gets called when this event happens so

00:18:34.950 --> 00:18:34.960
gets called when this event happens so
 

00:18:34.960 --> 00:18:37.230
gets called when this event happens so
unity does have this resource unload

00:18:37.230 --> 00:18:37.240
unity does have this resource unload
 

00:18:37.240 --> 00:18:39.299
unity does have this resource unload
call what you can make that's one

00:18:39.299 --> 00:18:39.309
call what you can make that's one
 

00:18:39.309 --> 00:18:43.289
call what you can make that's one
possible thing you can do to reduce the

00:18:43.289 --> 00:18:43.299
possible thing you can do to reduce the
 

00:18:43.299 --> 00:18:48.269
possible thing you can do to reduce the
memory pressure so another thing that

00:18:48.269 --> 00:18:48.279
memory pressure so another thing that
 

00:18:48.279 --> 00:18:52.169
memory pressure so another thing that
games should do and in most games do

00:18:52.169 --> 00:18:52.179
games should do and in most games do
 

00:18:52.179 --> 00:18:53.639
games should do and in most games do
this typically it's just to be

00:18:53.639 --> 00:18:53.649
this typically it's just to be
 

00:18:53.649 --> 00:18:56.570
this typically it's just to be
conservative about their memory budgets

00:18:56.570 --> 00:18:56.580
conservative about their memory budgets
 

00:18:56.580 --> 00:19:00.299
conservative about their memory budgets
what things should you consider well you

00:19:00.299 --> 00:19:00.309
what things should you consider well you
 

00:19:00.309 --> 00:19:02.129
what things should you consider well you
should take into account the physical

00:19:02.129 --> 00:19:02.139
should take into account the physical
 

00:19:02.139 --> 00:19:06.330
should take into account the physical
RAM size and also you want to look at

00:19:06.330 --> 00:19:06.340
RAM size and also you want to look at
 

00:19:06.340 --> 00:19:08.490
RAM size and also you want to look at
how much typically does the operating

00:19:08.490 --> 00:19:08.500
how much typically does the operating
 

00:19:08.500 --> 00:19:11.549
how much typically does the operating
system and system processes use in this

00:19:11.549 --> 00:19:11.559
system and system processes use in this
 

00:19:11.559 --> 00:19:13.499
system and system processes use in this
case it's about one and a half gigabytes

00:19:13.499 --> 00:19:13.509
case it's about one and a half gigabytes
 

00:19:13.509 --> 00:19:17.970
case it's about one and a half gigabytes
and it's on a 4 gigabyte device these

00:19:17.970 --> 00:19:17.980
and it's on a 4 gigabyte device these
 

00:19:17.980 --> 00:19:20.820
and it's on a 4 gigabyte device these
can vary over times or remember I was

00:19:20.820 --> 00:19:20.830
can vary over times or remember I was
 

00:19:20.830 --> 00:19:23.220
can vary over times or remember I was
saying you don't have definite amounts

00:19:23.220 --> 00:19:23.230
saying you don't have definite amounts
 

00:19:23.230 --> 00:19:24.690
saying you don't have definite amounts
for these so that's where you want to be

00:19:24.690 --> 00:19:24.700
for these so that's where you want to be
 

00:19:24.700 --> 00:19:26.190
for these so that's where you want to be
conservative

00:19:26.190 --> 00:19:26.200
conservative
 

00:19:26.200 --> 00:19:29.379
conservative
and you also want to look at the maximum

00:19:29.379 --> 00:19:29.389
and you also want to look at the maximum
 

00:19:29.389 --> 00:19:33.729
and you also want to look at the maximum
amount of Z RAM size so as I mentioned Z

00:19:33.729 --> 00:19:33.739
amount of Z RAM size so as I mentioned Z
 

00:19:33.739 --> 00:19:36.009
amount of Z RAM size so as I mentioned Z
Ram is something is used as compressed

00:19:36.009 --> 00:19:36.019
Ram is something is used as compressed
 

00:19:36.019 --> 00:19:37.869
Ram is something is used as compressed
memory it's used for swapping when

00:19:37.869 --> 00:19:37.879
memory it's used for swapping when
 

00:19:37.879 --> 00:19:40.509
memory it's used for swapping when
memory gets low so the more Z Ram that

00:19:40.509 --> 00:19:40.519
memory gets low so the more Z Ram that
 

00:19:40.519 --> 00:19:43.419
memory gets low so the more Z Ram that
you can have the better your device will

00:19:43.419 --> 00:19:43.429
you can have the better your device will
 

00:19:43.429 --> 00:19:45.149
you can have the better your device will
be able to handle low memory situations

00:19:45.149 --> 00:19:45.159
be able to handle low memory situations
 

00:19:45.159 --> 00:19:48.009
be able to handle low memory situations
how do you tell how much Z room you have

00:19:48.009 --> 00:19:48.019
how do you tell how much Z room you have
 

00:19:48.019 --> 00:19:51.310
how do you tell how much Z room you have
well if you look in the proc mem info

00:19:51.310 --> 00:19:51.320
well if you look in the proc mem info
 

00:19:51.320 --> 00:19:55.330
well if you look in the proc mem info
file you can see the swap total is shown

00:19:55.330 --> 00:19:55.340
file you can see the swap total is shown
 

00:19:55.340 --> 00:19:57.999
file you can see the swap total is shown
here and that's the the max amount of Z

00:19:57.999 --> 00:19:58.009
here and that's the the max amount of Z
 

00:19:58.009 --> 00:20:00.580
here and that's the the max amount of Z
Ram your device can have so in this case

00:20:00.580 --> 00:20:00.590
Ram your device can have so in this case
 

00:20:00.590 --> 00:20:05.320
Ram your device can have so in this case
it's about a gigabyte if we look at some

00:20:05.320 --> 00:20:05.330
it's about a gigabyte if we look at some
 

00:20:05.330 --> 00:20:07.180
it's about a gigabyte if we look at some
typical games this is like kind of a

00:20:07.180 --> 00:20:07.190
typical games this is like kind of a
 

00:20:07.190 --> 00:20:10.299
typical games this is like kind of a
random sampling of games on a 4 gigabyte

00:20:10.299 --> 00:20:10.309
random sampling of games on a 4 gigabyte
 

00:20:10.309 --> 00:20:14.710
random sampling of games on a 4 gigabyte
device the most that these games

00:20:14.710 --> 00:20:14.720
device the most that these games
 

00:20:14.720 --> 00:20:17.979
device the most that these games
allocate these are peak memory usage is

00:20:17.979 --> 00:20:17.989
allocate these are peak memory usage is
 

00:20:17.989 --> 00:20:21.369
allocate these are peak memory usage is
only about one point two three gigabytes

00:20:21.369 --> 00:20:21.379
only about one point two three gigabytes
 

00:20:21.379 --> 00:20:24.759
only about one point two three gigabytes
so they're really not pushing the amount

00:20:24.759 --> 00:20:24.769
so they're really not pushing the amount
 

00:20:24.769 --> 00:20:26.979
so they're really not pushing the amount
of physical memory up to the limit of

00:20:26.979 --> 00:20:26.989
of physical memory up to the limit of
 

00:20:26.989 --> 00:20:31.570
of physical memory up to the limit of
physical memory very much now if you

00:20:31.570 --> 00:20:31.580
physical memory very much now if you
 

00:20:31.580 --> 00:20:34.299
physical memory very much now if you
can't be really conservative the other

00:20:34.299 --> 00:20:34.309
can't be really conservative the other
 

00:20:34.309 --> 00:20:37.840
can't be really conservative the other
thing is you should be flexible so this

00:20:37.840 --> 00:20:37.850
thing is you should be flexible so this
 

00:20:37.850 --> 00:20:40.299
thing is you should be flexible so this
means you need to be more dynamic with

00:20:40.299 --> 00:20:40.309
means you need to be more dynamic with
 

00:20:40.309 --> 00:20:43.330
means you need to be more dynamic with
the memory instead of fixed of course

00:20:43.330 --> 00:20:43.340
the memory instead of fixed of course
 

00:20:43.340 --> 00:20:44.619
the memory instead of fixed of course
this means you're going to need to

00:20:44.619 --> 00:20:44.629
this means you're going to need to
 

00:20:44.629 --> 00:20:46.889
this means you're going to need to
respond to those on term memory calls

00:20:46.889 --> 00:20:46.899
respond to those on term memory calls
 

00:20:46.899 --> 00:20:51.999
respond to those on term memory calls
and because you're now taking into

00:20:51.999 --> 00:20:52.009
and because you're now taking into
 

00:20:52.009 --> 00:20:54.759
and because you're now taking into
account low memory situations and and

00:20:54.759 --> 00:20:54.769
account low memory situations and and
 

00:20:54.769 --> 00:20:57.249
account low memory situations and and
hitting up against that limit you need

00:20:57.249 --> 00:20:57.259
hitting up against that limit you need
 

00:20:57.259 --> 00:20:59.379
hitting up against that limit you need
to do more game memory management and

00:20:59.379 --> 00:20:59.389
to do more game memory management and
 

00:20:59.389 --> 00:21:01.749
to do more game memory management and
really design your game to have a

00:21:01.749 --> 00:21:01.759
really design your game to have a
 

00:21:01.759 --> 00:21:07.210
really design your game to have a
variable amount of memory now beat

00:21:07.210 --> 00:21:07.220
variable amount of memory now beat
 

00:21:07.220 --> 00:21:08.830
variable amount of memory now beat
crashing when you run out of memory

00:21:08.830 --> 00:21:08.840
crashing when you run out of memory
 

00:21:08.840 --> 00:21:10.779
crashing when you run out of memory
isn't the only thing that can happen so

00:21:10.779 --> 00:21:10.789
isn't the only thing that can happen so
 

00:21:10.789 --> 00:21:13.359
isn't the only thing that can happen so
at some point when you have lots of

00:21:13.359 --> 00:21:13.369
at some point when you have lots of
 

00:21:13.369 --> 00:21:15.220
at some point when you have lots of
memory and everything's working fine and

00:21:15.220 --> 00:21:15.230
memory and everything's working fine and
 

00:21:15.230 --> 00:21:17.739
memory and everything's working fine and
the point when you crash because he ran

00:21:17.739 --> 00:21:17.749
the point when you crash because he ran
 

00:21:17.749 --> 00:21:20.409
the point when you crash because he ran
out of memory you could hit thrashing

00:21:20.409 --> 00:21:20.419
out of memory you could hit thrashing
 

00:21:20.419 --> 00:21:23.049
out of memory you could hit thrashing
and thrashing is when you have just

00:21:23.049 --> 00:21:23.059
and thrashing is when you have just
 

00:21:23.059 --> 00:21:27.399
and thrashing is when you have just
continuous swapping this main symptom of

00:21:27.399 --> 00:21:27.409
continuous swapping this main symptom of
 

00:21:27.409 --> 00:21:30.220
continuous swapping this main symptom of
it is you have very long delays frames

00:21:30.220 --> 00:21:30.230
it is you have very long delays frames
 

00:21:30.230 --> 00:21:33.360
it is you have very long delays frames
could take seconds to execute

00:21:33.360 --> 00:21:33.370
could take seconds to execute
 

00:21:33.370 --> 00:21:35.580
could take seconds to execute
then basically the only thing you can do

00:21:35.580 --> 00:21:35.590
then basically the only thing you can do
 

00:21:35.590 --> 00:21:37.740
then basically the only thing you can do
about that is reduce the working set of

00:21:37.740 --> 00:21:37.750
about that is reduce the working set of
 

00:21:37.750 --> 00:21:40.200
about that is reduce the working set of
your game you know reduce the memory

00:21:40.200 --> 00:21:40.210
your game you know reduce the memory
 

00:21:40.210 --> 00:21:45.060
your game you know reduce the memory
footprint of it so here's an example of

00:21:45.060 --> 00:21:45.070
footprint of it so here's an example of
 

00:21:45.070 --> 00:21:49.049
footprint of it so here's an example of
how to look for thrashing we have this

00:21:49.049 --> 00:21:49.059
how to look for thrashing we have this
 

00:21:49.059 --> 00:21:52.680
how to look for thrashing we have this
tool called systrace hopefully you've

00:21:52.680 --> 00:21:52.690
tool called systrace hopefully you've
 

00:21:52.690 --> 00:21:55.320
tool called systrace hopefully you've
used it and I've seen it before is part

00:21:55.320 --> 00:21:55.330
used it and I've seen it before is part
 

00:21:55.330 --> 00:21:59.820
used it and I've seen it before is part
of the Android SDK and if you notice

00:21:59.820 --> 00:21:59.830
of the Android SDK and if you notice
 

00:21:59.830 --> 00:22:02.940
of the Android SDK and if you notice
here it shows processes being executed

00:22:02.940 --> 00:22:02.950
here it shows processes being executed
 

00:22:02.950 --> 00:22:05.280
here it shows processes being executed
on the CPU cores and you notice this one

00:22:05.280 --> 00:22:05.290
on the CPU cores and you notice this one
 

00:22:05.290 --> 00:22:08.280
on the CPU cores and you notice this one
core is just continuously using

00:22:08.280 --> 00:22:08.290
core is just continuously using
 

00:22:08.290 --> 00:22:11.010
core is just continuously using
executing K swap D K swap do you

00:22:11.010 --> 00:22:11.020
executing K swap D K swap do you
 

00:22:11.020 --> 00:22:12.330
executing K swap D K swap do you
remember is the one that does the

00:22:12.330 --> 00:22:12.340
remember is the one that does the
 

00:22:12.340 --> 00:22:16.230
remember is the one that does the
swapping it reclaims memory so when you

00:22:16.230 --> 00:22:16.240
swapping it reclaims memory so when you
 

00:22:16.240 --> 00:22:18.659
swapping it reclaims memory so when you
see it active that much it's you should

00:22:18.659 --> 00:22:18.669
see it active that much it's you should
 

00:22:18.669 --> 00:22:20.669
see it active that much it's you should
be suspicious the other thing to look

00:22:20.669 --> 00:22:20.679
be suspicious the other thing to look
 

00:22:20.679 --> 00:22:24.720
be suspicious the other thing to look
for is your processes are getting into a

00:22:24.720 --> 00:22:24.730
for is your processes are getting into a
 

00:22:24.730 --> 00:22:26.190
for is your processes are getting into a
state where they're blocked on i/o

00:22:26.190 --> 00:22:26.200
state where they're blocked on i/o
 

00:22:26.200 --> 00:22:28.470
state where they're blocked on i/o
because these pages

00:22:28.470 --> 00:22:28.480
because these pages
 

00:22:28.480 --> 00:22:30.570
because these pages
remember these memory back paid storage

00:22:30.570 --> 00:22:30.580
remember these memory back paid storage
 

00:22:30.580 --> 00:22:33.720
remember these memory back paid storage
back pages have been deleted so it needs

00:22:33.720 --> 00:22:33.730
back pages have been deleted so it needs
 

00:22:33.730 --> 00:22:35.700
back pages have been deleted so it needs
to they need to read them back into

00:22:35.700 --> 00:22:35.710
to they need to read them back into
 

00:22:35.710 --> 00:22:40.650
to they need to read them back into
memory when executing all right another

00:22:40.650 --> 00:22:40.660
memory when executing all right another
 

00:22:40.660 --> 00:22:45.299
memory when executing all right another
tip don't try to don't allocate too much

00:22:45.299 --> 00:22:45.309
tip don't try to don't allocate too much
 

00:22:45.309 --> 00:22:48.870
tip don't try to don't allocate too much
too fast so the speed of allocations

00:22:48.870 --> 00:22:48.880
too fast so the speed of allocations
 

00:22:48.880 --> 00:22:51.180
too fast so the speed of allocations
can actually matter when you get into

00:22:51.180 --> 00:22:51.190
can actually matter when you get into
 

00:22:51.190 --> 00:22:54.470
can actually matter when you get into
really sensitive low memory situations

00:22:54.470 --> 00:22:54.480
really sensitive low memory situations
 

00:22:54.480 --> 00:22:57.030
really sensitive low memory situations
as I mentioned reclaiming memory takes

00:22:57.030 --> 00:22:57.040
as I mentioned reclaiming memory takes
 

00:22:57.040 --> 00:22:58.680
as I mentioned reclaiming memory takes
time so you don't want to your

00:22:58.680 --> 00:22:58.690
time so you don't want to your
 

00:22:58.690 --> 00:23:01.890
time so you don't want to your
allocations to outpace how fast you can

00:23:01.890 --> 00:23:01.900
allocations to outpace how fast you can
 

00:23:01.900 --> 00:23:05.430
allocations to outpace how fast you can
reclaim memory and the result of this

00:23:05.430 --> 00:23:05.440
reclaim memory and the result of this
 

00:23:05.440 --> 00:23:07.500
reclaim memory and the result of this
the game gets killed gets killed

00:23:07.500 --> 00:23:07.510
the game gets killed gets killed
 

00:23:07.510 --> 00:23:09.419
the game gets killed gets killed
potentially sooner than it it really

00:23:09.419 --> 00:23:09.429
potentially sooner than it it really
 

00:23:09.429 --> 00:23:12.860
potentially sooner than it it really
needs to get killed

00:23:12.860 --> 00:23:12.870
 
 

00:23:12.870 --> 00:23:16.440
 
now I'm going to talk about some of the

00:23:16.440 --> 00:23:16.450
now I'm going to talk about some of the
 

00:23:16.450 --> 00:23:21.570
now I'm going to talk about some of the
tools that we have for for debugging and

00:23:21.570 --> 00:23:21.580
tools that we have for for debugging and
 

00:23:21.580 --> 00:23:24.750
tools that we have for for debugging and
for profiling native memory and I just

00:23:24.750 --> 00:23:24.760
for profiling native memory and I just
 

00:23:24.760 --> 00:23:26.700
for profiling native memory and I just
turn native here of course because we're

00:23:26.700 --> 00:23:26.710
turn native here of course because we're
 

00:23:26.710 --> 00:23:28.740
turn native here of course because we're
look talking about games and these are

00:23:28.740 --> 00:23:28.750
look talking about games and these are
 

00:23:28.750 --> 00:23:31.500
look talking about games and these are
this is memory that's allocated by C++

00:23:31.500 --> 00:23:31.510
this is memory that's allocated by C++
 

00:23:31.510 --> 00:23:35.669
this is memory that's allocated by C++
as opposed to like the Java heap so one

00:23:35.669 --> 00:23:35.679
as opposed to like the Java heap so one
 

00:23:35.679 --> 00:23:37.830
as opposed to like the Java heap so one
of the tools you can use is a kind of a

00:23:37.830 --> 00:23:37.840
of the tools you can use is a kind of a
 

00:23:37.840 --> 00:23:40.860
of the tools you can use is a kind of a
class of tools mem info and these are

00:23:40.860 --> 00:23:40.870
class of tools mem info and these are
 

00:23:40.870 --> 00:23:42.960
class of tools mem info and these are
just memory statistics

00:23:42.960 --> 00:23:42.970
just memory statistics
 

00:23:42.970 --> 00:23:45.660
just memory statistics
so they include things like adb shell

00:23:45.660 --> 00:23:45.670
so they include things like adb shell
 

00:23:45.670 --> 00:23:48.990
so they include things like adb shell
dumps this mem info right and that gives

00:23:48.990 --> 00:23:49.000
dumps this mem info right and that gives
 

00:23:49.000 --> 00:23:52.910
dumps this mem info right and that gives
you some statistics on memory and

00:23:52.910 --> 00:23:52.920
you some statistics on memory and
 

00:23:52.920 --> 00:23:55.550
you some statistics on memory and
similarly there's something called debug

00:23:55.550 --> 00:23:55.560
similarly there's something called debug
 

00:23:55.560 --> 00:23:57.960
similarly there's something called debug
memory info which gives you basically

00:23:57.960 --> 00:23:57.970
memory info which gives you basically
 

00:23:57.970 --> 00:24:02.660
memory info which gives you basically
the same information problem is it slow

00:24:02.660 --> 00:24:02.670
the same information problem is it slow
 

00:24:02.670 --> 00:24:05.460
the same information problem is it slow
and the reason why is collecting what's

00:24:05.460 --> 00:24:05.470
and the reason why is collecting what's
 

00:24:05.470 --> 00:24:10.230
and the reason why is collecting what's
called PSS storage and another problem

00:24:10.230 --> 00:24:10.240
called PSS storage and another problem
 

00:24:10.240 --> 00:24:12.930
called PSS storage and another problem
is it's not always consistent

00:24:12.930 --> 00:24:12.940
is it's not always consistent
 

00:24:12.940 --> 00:24:16.290
is it's not always consistent
it takes an it gathers information say

00:24:16.290 --> 00:24:16.300
it takes an it gathers information say
 

00:24:16.300 --> 00:24:20.070
it takes an it gathers information say
of graphics memory and graphics memory

00:24:20.070 --> 00:24:20.080
of graphics memory and graphics memory
 

00:24:20.080 --> 00:24:23.730
of graphics memory and graphics memory
is collected by the GPU driver which is

00:24:23.730 --> 00:24:23.740
is collected by the GPU driver which is
 

00:24:23.740 --> 00:24:25.320
is collected by the GPU driver which is
something Android really doesn't have

00:24:25.320 --> 00:24:25.330
something Android really doesn't have
 

00:24:25.330 --> 00:24:29.100
something Android really doesn't have
control over and it's differs it's

00:24:29.100 --> 00:24:29.110
control over and it's differs it's
 

00:24:29.110 --> 00:24:30.900
control over and it's differs it's
different with different GPU vendors

00:24:30.900 --> 00:24:30.910
different with different GPU vendors
 

00:24:30.910 --> 00:24:33.480
different with different GPU vendors
they not they may be reporting memory

00:24:33.480 --> 00:24:33.490
they not they may be reporting memory
 

00:24:33.490 --> 00:24:35.670
they not they may be reporting memory
differently than another vendor does or

00:24:35.670 --> 00:24:35.680
differently than another vendor does or
 

00:24:35.680 --> 00:24:37.410
differently than another vendor does or
they may even be reporting at different

00:24:37.410 --> 00:24:37.420
they may even be reporting at different
 

00:24:37.420 --> 00:24:41.450
they may even be reporting at different
depending on the version of the driver

00:24:41.450 --> 00:24:41.460
 
 

00:24:41.460 --> 00:24:44.220
 
so here's an example of what you would

00:24:44.220 --> 00:24:44.230
so here's an example of what you would
 

00:24:44.230 --> 00:24:46.470
so here's an example of what you would
see with dumps this amendment foe

00:24:46.470 --> 00:24:46.480
see with dumps this amendment foe
 

00:24:46.480 --> 00:24:48.420
see with dumps this amendment foe
obviously it shows the Java heap which

00:24:48.420 --> 00:24:48.430
obviously it shows the Java heap which
 

00:24:48.430 --> 00:24:51.330
obviously it shows the Java heap which
usually isn't a big part of a game

00:24:51.330 --> 00:24:51.340
usually isn't a big part of a game
 

00:24:51.340 --> 00:24:53.970
usually isn't a big part of a game
because it uses native memory the native

00:24:53.970 --> 00:24:53.980
because it uses native memory the native
 

00:24:53.980 --> 00:24:55.740
because it uses native memory the native
heap is is probably where most of your

00:24:55.740 --> 00:24:55.750
heap is is probably where most of your
 

00:24:55.750 --> 00:24:57.120
heap is is probably where most of your
memory allocations are going to be

00:24:57.120 --> 00:24:57.130
memory allocations are going to be
 

00:24:57.130 --> 00:24:59.730
memory allocations are going to be
coming from and also the graphics memory

00:24:59.730 --> 00:24:59.740
coming from and also the graphics memory
 

00:24:59.740 --> 00:25:03.740
coming from and also the graphics memory
because games do a lot of graphics and

00:25:03.740 --> 00:25:03.750
because games do a lot of graphics and
 

00:25:03.750 --> 00:25:06.660
because games do a lot of graphics and
it gives you the total here and I

00:25:06.660 --> 00:25:06.670
it gives you the total here and I
 

00:25:06.670 --> 00:25:08.910
it gives you the total here and I
mentioned before it's slow because it's

00:25:08.910 --> 00:25:08.920
mentioned before it's slow because it's
 

00:25:08.920 --> 00:25:13.230
mentioned before it's slow because it's
using PSS the other type of memory is

00:25:13.230 --> 00:25:13.240
using PSS the other type of memory is
 

00:25:13.240 --> 00:25:16.650
using PSS the other type of memory is
called RSS so what's the difference

00:25:16.650 --> 00:25:16.660
called RSS so what's the difference
 

00:25:16.660 --> 00:25:21.120
called RSS so what's the difference
between PSS and RSS so PSS is

00:25:21.120 --> 00:25:21.130
between PSS and RSS so PSS is
 

00:25:21.130 --> 00:25:25.320
between PSS and RSS so PSS is
proportional set size so it includes the

00:25:25.320 --> 00:25:25.330
proportional set size so it includes the
 

00:25:25.330 --> 00:25:27.660
proportional set size so it includes the
private memory that your game is using

00:25:27.660 --> 00:25:27.670
private memory that your game is using
 

00:25:27.670 --> 00:25:31.050
private memory that your game is using
and it also includes the shared memory

00:25:31.050 --> 00:25:31.060
and it also includes the shared memory
 

00:25:31.060 --> 00:25:34.230
and it also includes the shared memory
so if different processes are sharing

00:25:34.230 --> 00:25:34.240
so if different processes are sharing
 

00:25:34.240 --> 00:25:35.550
so if different processes are sharing
some of that memory that you're using

00:25:35.550 --> 00:25:35.560
some of that memory that you're using
 

00:25:35.560 --> 00:25:38.970
some of that memory that you're using
it'll include that but it'll measure it

00:25:38.970 --> 00:25:38.980
it'll include that but it'll measure it
 

00:25:38.980 --> 00:25:41.030
it'll include that but it'll measure it
proportionally based on how many

00:25:41.030 --> 00:25:41.040
proportionally based on how many
 

00:25:41.040 --> 00:25:45.000
proportionally based on how many
processes are sharing that memory RSS is

00:25:45.000 --> 00:25:45.010
processes are sharing that memory RSS is
 

00:25:45.010 --> 00:25:47.570
processes are sharing that memory RSS is
much simpler it's just the total pages

00:25:47.570 --> 00:25:47.580
much simpler it's just the total pages
 

00:25:47.580 --> 00:25:51.710
much simpler it's just the total pages
that your game is using

00:25:51.710 --> 00:25:51.720
 
 

00:25:51.720 --> 00:25:53.749
 
we think that RSS is probably more

00:25:53.749 --> 00:25:53.759
we think that RSS is probably more
 

00:25:53.759 --> 00:25:56.599
we think that RSS is probably more
useful for games one of the reasons this

00:25:56.599 --> 00:25:56.609
useful for games one of the reasons this
 

00:25:56.609 --> 00:25:58.279
useful for games one of the reasons this
is much easier to collect that

00:25:58.279 --> 00:25:58.289
is much easier to collect that
 

00:25:58.289 --> 00:26:01.489
is much easier to collect that
information it's faster the other reason

00:26:01.489 --> 00:26:01.499
information it's faster the other reason
 

00:26:01.499 --> 00:26:03.289
information it's faster the other reason
is it just gives you all of the memory

00:26:03.289 --> 00:26:03.299
is it just gives you all of the memory
 

00:26:03.299 --> 00:26:05.989
is it just gives you all of the memory
that you that you're using here's an

00:26:05.989 --> 00:26:05.999
that you that you're using here's an
 

00:26:05.999 --> 00:26:09.739
that you that you're using here's an
example of how those get calculated this

00:26:09.739 --> 00:26:09.749
example of how those get calculated this
 

00:26:09.749 --> 00:26:13.700
example of how those get calculated this
game here has five pages three of them

00:26:13.700 --> 00:26:13.710
game here has five pages three of them
 

00:26:13.710 --> 00:26:16.129
game here has five pages three of them
are private just to the game and then

00:26:16.129 --> 00:26:16.139
are private just to the game and then
 

00:26:16.139 --> 00:26:18.289
are private just to the game and then
two of the pages in yellow here are

00:26:18.289 --> 00:26:18.299
two of the pages in yellow here are
 

00:26:18.299 --> 00:26:21.139
two of the pages in yellow here are
shared with other processes so if we

00:26:21.139 --> 00:26:21.149
shared with other processes so if we
 

00:26:21.149 --> 00:26:24.649
shared with other processes so if we
wanted to calculate PSS we would take

00:26:24.649 --> 00:26:24.659
wanted to calculate PSS we would take
 

00:26:24.659 --> 00:26:27.799
wanted to calculate PSS we would take
the private pages or three and then we

00:26:27.799 --> 00:26:27.809
the private pages or three and then we
 

00:26:27.809 --> 00:26:29.450
the private pages or three and then we
have one page is shared between two

00:26:29.450 --> 00:26:29.460
have one page is shared between two
 

00:26:29.460 --> 00:26:32.239
have one page is shared between two
processes so that's one half and then

00:26:32.239 --> 00:26:32.249
processes so that's one half and then
 

00:26:32.249 --> 00:26:34.519
processes so that's one half and then
one process that's shared I sorry one

00:26:34.519 --> 00:26:34.529
one process that's shared I sorry one
 

00:26:34.529 --> 00:26:36.469
one process that's shared I sorry one
page that's shared between two three

00:26:36.469 --> 00:26:36.479
page that's shared between two three
 

00:26:36.479 --> 00:26:39.919
page that's shared between two three
processes so that's one third then you

00:26:39.919 --> 00:26:39.929
processes so that's one third then you
 

00:26:39.929 --> 00:26:41.810
processes so that's one third then you
multiply at all times the page size and

00:26:41.810 --> 00:26:41.820
multiply at all times the page size and
 

00:26:41.820 --> 00:26:44.210
multiply at all times the page size and
that gives you a total amount of PSS now

00:26:44.210 --> 00:26:44.220
that gives you a total amount of PSS now
 

00:26:44.220 --> 00:26:46.909
that gives you a total amount of PSS now
RSS they said much simpler we have five

00:26:46.909 --> 00:26:46.919
RSS they said much simpler we have five
 

00:26:46.919 --> 00:26:49.099
RSS they said much simpler we have five
pages and then just multiply times the

00:26:49.099 --> 00:26:49.109
pages and then just multiply times the
 

00:26:49.109 --> 00:26:53.570
pages and then just multiply times the
page size now one of the new things

00:26:53.570 --> 00:26:53.580
page size now one of the new things
 

00:26:53.580 --> 00:26:56.089
page size now one of the new things
we've added in queue this is I think

00:26:56.089 --> 00:26:56.099
we've added in queue this is I think
 

00:26:56.099 --> 00:26:58.190
we've added in queue this is I think
really going to be useful for people who

00:26:58.190 --> 00:26:58.200
really going to be useful for people who
 

00:26:58.200 --> 00:27:00.049
really going to be useful for people who
want to trace memory or track their

00:27:00.049 --> 00:27:00.059
want to trace memory or track their
 

00:27:00.059 --> 00:27:04.070
want to trace memory or track their
memory is RSS trace points and I

00:27:04.070 --> 00:27:04.080
memory is RSS trace points and I
 

00:27:04.080 --> 00:27:07.279
memory is RSS trace points and I
mentioned RSS is much faster to collect

00:27:07.279 --> 00:27:07.289
mentioned RSS is much faster to collect
 

00:27:07.289 --> 00:27:09.440
mentioned RSS is much faster to collect
than PSS memory so you don't have these

00:27:09.440 --> 00:27:09.450
than PSS memory so you don't have these
 

00:27:09.450 --> 00:27:12.139
than PSS memory so you don't have these
delays and because you don't have these

00:27:12.139 --> 00:27:12.149
delays and because you don't have these
 

00:27:12.149 --> 00:27:14.950
delays and because you don't have these
delays you're not gonna miss those peaks

00:27:14.950 --> 00:27:14.960
delays you're not gonna miss those peaks
 

00:27:14.960 --> 00:27:17.989
delays you're not gonna miss those peaks
where the memory might reach a peak and

00:27:17.989 --> 00:27:17.999
where the memory might reach a peak and
 

00:27:17.999 --> 00:27:19.639
where the memory might reach a peak and
they go go down but you might miss it

00:27:19.639 --> 00:27:19.649
they go go down but you might miss it
 

00:27:19.649 --> 00:27:21.229
they go go down but you might miss it
because it takes so long to collect that

00:27:21.229 --> 00:27:21.239
because it takes so long to collect that
 

00:27:21.239 --> 00:27:25.820
because it takes so long to collect that
PSS information and it's great for this

00:27:25.820 --> 00:27:25.830
PSS information and it's great for this
 

00:27:25.830 --> 00:27:27.109
PSS information and it's great for this
new tool called

00:27:27.109 --> 00:27:27.119
new tool called
 

00:27:27.119 --> 00:27:31.159
new tool called
perfetto what is perfetto well if you

00:27:31.159 --> 00:27:31.169
perfetto what is perfetto well if you
 

00:27:31.169 --> 00:27:34.249
perfetto what is perfetto well if you
haven't heard of perfetto it's a new

00:27:34.249 --> 00:27:34.259
haven't heard of perfetto it's a new
 

00:27:34.259 --> 00:27:37.509
haven't heard of perfetto it's a new
tool that actually resides on the device

00:27:37.509 --> 00:27:37.519
tool that actually resides on the device
 

00:27:37.519 --> 00:27:39.859
tool that actually resides on the device
and it collects information on the

00:27:39.859 --> 00:27:39.869
and it collects information on the
 

00:27:39.869 --> 00:27:41.629
and it collects information on the
device it can do things like heap

00:27:41.629 --> 00:27:41.639
device it can do things like heap
 

00:27:41.639 --> 00:27:44.659
device it can do things like heap
profiling which also later and the

00:27:44.659 --> 00:27:44.669
profiling which also later and the
 

00:27:44.669 --> 00:27:46.820
profiling which also later and the
really really interesting thing I think

00:27:46.820 --> 00:27:46.830
really really interesting thing I think
 

00:27:46.830 --> 00:27:50.210
really really interesting thing I think
for games particularly is it can collect

00:27:50.210 --> 00:27:50.220
for games particularly is it can collect
 

00:27:50.220 --> 00:27:53.749
for games particularly is it can collect
arbitrarily long traces so this means

00:27:53.749 --> 00:27:53.759
arbitrarily long traces so this means
 

00:27:53.759 --> 00:27:56.570
arbitrarily long traces so this means
that you can run your game through an

00:27:56.570 --> 00:27:56.580
that you can run your game through an
 

00:27:56.580 --> 00:27:59.479
that you can run your game through an
entire level and be collecting all of

00:27:59.479 --> 00:27:59.489
entire level and be collecting all of
 

00:27:59.489 --> 00:28:02.620
entire level and be collecting all of
this trace information you can see all

00:28:02.620 --> 00:28:02.630
this trace information you can see all
 

00:28:02.630 --> 00:28:05.770
this trace information you can see all
your memory changes in with very high

00:28:05.770 --> 00:28:05.780
your memory changes in with very high
 

00:28:05.780 --> 00:28:09.299
your memory changes in with very high
detail over the entire length of that

00:28:09.299 --> 00:28:09.309
detail over the entire length of that
 

00:28:09.309 --> 00:28:13.270
detail over the entire length of that
session that you're collecting some of

00:28:13.270 --> 00:28:13.280
session that you're collecting some of
 

00:28:13.280 --> 00:28:14.770
session that you're collecting some of
the other things that can do it has

00:28:14.770 --> 00:28:14.780
the other things that can do it has
 

00:28:14.780 --> 00:28:16.750
the other things that can do it has
offline you can do offline processing

00:28:16.750 --> 00:28:16.760
offline you can do offline processing
 

00:28:16.760 --> 00:28:20.440
offline you can do offline processing
because it has an SQL query that you can

00:28:20.440 --> 00:28:20.450
because it has an SQL query that you can
 

00:28:20.450 --> 00:28:23.200
because it has an SQL query that you can
do on the data and you can collect an

00:28:23.200 --> 00:28:23.210
do on the data and you can collect an
 

00:28:23.210 --> 00:28:25.000
do on the data and you can collect an
information yourself and do your own

00:28:25.000 --> 00:28:25.010
information yourself and do your own
 

00:28:25.010 --> 00:28:27.940
information yourself and do your own
analysis of it also it has a new UI

00:28:27.940 --> 00:28:27.950
analysis of it also it has a new UI
 

00:28:27.950 --> 00:28:31.620
analysis of it also it has a new UI
similar to systrace called perfetto UI

00:28:31.620 --> 00:28:31.630
similar to systrace called perfetto UI
 

00:28:31.630 --> 00:28:34.600
similar to systrace called perfetto UI
so to enable it on your device in the

00:28:34.600 --> 00:28:34.610
so to enable it on your device in the
 

00:28:34.610 --> 00:28:37.210
so to enable it on your device in the
developer settings go to system tracing

00:28:37.210 --> 00:28:37.220
developer settings go to system tracing
 

00:28:37.220 --> 00:28:40.320
developer settings go to system tracing
and make sure you enable perfetto here

00:28:40.320 --> 00:28:40.330
and make sure you enable perfetto here
 

00:28:40.330 --> 00:28:44.039
and make sure you enable perfetto here
you also want to enable long traces and

00:28:44.039 --> 00:28:44.049
you also want to enable long traces and
 

00:28:44.049 --> 00:28:47.440
you also want to enable long traces and
also trace debuggable applications then

00:28:47.440 --> 00:28:47.450
also trace debuggable applications then
 

00:28:47.450 --> 00:28:52.779
also trace debuggable applications then
go to the categories section and make

00:28:52.779 --> 00:28:52.789
go to the categories section and make
 

00:28:52.789 --> 00:28:55.659
go to the categories section and make
sure memory is checked because if you're

00:28:55.659 --> 00:28:55.669
sure memory is checked because if you're
 

00:28:55.669 --> 00:28:57.220
sure memory is checked because if you're
collecting memory you want to make sure

00:28:57.220 --> 00:28:57.230
collecting memory you want to make sure
 

00:28:57.230 --> 00:29:01.090
collecting memory you want to make sure
that's checked then you just hit record

00:29:01.090 --> 00:29:01.100
that's checked then you just hit record
 

00:29:01.100 --> 00:29:05.080
that's checked then you just hit record
trace and it starts tracing and you'll

00:29:05.080 --> 00:29:05.090
trace and it starts tracing and you'll
 

00:29:05.090 --> 00:29:08.140
trace and it starts tracing and you'll
get this notification and when you're

00:29:08.140 --> 00:29:08.150
get this notification and when you're
 

00:29:08.150 --> 00:29:10.890
get this notification and when you're
done tracing just tap that notification

00:29:10.890 --> 00:29:10.900
done tracing just tap that notification
 

00:29:10.900 --> 00:29:16.630
done tracing just tap that notification
here's an example of perfetto UI for

00:29:16.630 --> 00:29:16.640
here's an example of perfetto UI for
 

00:29:16.640 --> 00:29:19.690
here's an example of perfetto UI for
tracing memory and you can see how it

00:29:19.690 --> 00:29:19.700
tracing memory and you can see how it
 

00:29:19.700 --> 00:29:22.060
tracing memory and you can see how it
collects this memory information about

00:29:22.060 --> 00:29:22.070
collects this memory information about
 

00:29:22.070 --> 00:29:24.520
collects this memory information about
anonymous memory and at various types of

00:29:24.520 --> 00:29:24.530
anonymous memory and at various types of
 

00:29:24.530 --> 00:29:27.100
anonymous memory and at various types of
RSS memory over time so you can see how

00:29:27.100 --> 00:29:27.110
RSS memory over time so you can see how
 

00:29:27.110 --> 00:29:35.110
RSS memory over time so you can see how
the memory is growing over time so now

00:29:35.110 --> 00:29:35.120
the memory is growing over time so now
 

00:29:35.120 --> 00:29:38.770
the memory is growing over time so now
that we have these tools to collect all

00:29:38.770 --> 00:29:38.780
that we have these tools to collect all
 

00:29:38.780 --> 00:29:40.330
that we have these tools to collect all
of this information I want you to

00:29:40.330 --> 00:29:40.340
of this information I want you to
 

00:29:40.340 --> 00:29:43.060
of this information I want you to
remember back when I talked about this

00:29:43.060 --> 00:29:43.070
remember back when I talked about this
 

00:29:43.070 --> 00:29:47.260
remember back when I talked about this
test app and why does it why is it able

00:29:47.260 --> 00:29:47.270
test app and why does it why is it able
 

00:29:47.270 --> 00:29:51.640
test app and why does it why is it able
to allocate 4.1 gigabytes so let's look

00:29:51.640 --> 00:29:51.650
to allocate 4.1 gigabytes so let's look
 

00:29:51.650 --> 00:29:56.380
to allocate 4.1 gigabytes so let's look
at it with perfetto if you look at the

00:29:56.380 --> 00:29:56.390
at it with perfetto if you look at the
 

00:29:56.390 --> 00:29:58.570
at it with perfetto if you look at the
memory over time and this is more

00:29:58.570 --> 00:29:58.580
memory over time and this is more
 

00:29:58.580 --> 00:30:01.000
memory over time and this is more
towards the end of the collect of the

00:30:01.000 --> 00:30:01.010
towards the end of the collect of the
 

00:30:01.010 --> 00:30:03.880
towards the end of the collect of the
allocations we can see how the anonymous

00:30:03.880 --> 00:30:03.890
allocations we can see how the anonymous
 

00:30:03.890 --> 00:30:07.090
allocations we can see how the anonymous
memory the the malloc memory starts to

00:30:07.090 --> 00:30:07.100
memory the the malloc memory starts to
 

00:30:07.100 --> 00:30:08.830
memory the the malloc memory starts to
flatten out that's the part on the top

00:30:08.830 --> 00:30:08.840
flatten out that's the part on the top
 

00:30:08.840 --> 00:30:11.560
flatten out that's the part on the top
here however

00:30:11.560 --> 00:30:11.570
here however
 

00:30:11.570 --> 00:30:15.070
here however
the swap memory continues to go up

00:30:15.070 --> 00:30:15.080
the swap memory continues to go up
 

00:30:15.080 --> 00:30:17.740
the swap memory continues to go up
now remember swap is stored in Z room

00:30:17.740 --> 00:30:17.750
now remember swap is stored in Z room
 

00:30:17.750 --> 00:30:20.890
now remember swap is stored in Z room
and Z room is compressed mam or memory

00:30:20.890 --> 00:30:20.900
and Z room is compressed mam or memory
 

00:30:20.900 --> 00:30:23.440
and Z room is compressed mam or memory
so all of this memory is compressed so

00:30:23.440 --> 00:30:23.450
so all of this memory is compressed so
 

00:30:23.450 --> 00:30:25.690
so all of this memory is compressed so
even though it says 4.2 gigabytes that

00:30:25.690 --> 00:30:25.700
even though it says 4.2 gigabytes that
 

00:30:25.700 --> 00:30:28.000
even though it says 4.2 gigabytes that
one point seven is all compressed memory

00:30:28.000 --> 00:30:28.010
one point seven is all compressed memory
 

00:30:28.010 --> 00:30:34.240
one point seven is all compressed memory
so it takes up less space so here's this

00:30:34.240 --> 00:30:34.250
so it takes up less space so here's this
 

00:30:34.250 --> 00:30:37.780
so it takes up less space so here's this
app running you can see as I'm tapping

00:30:37.780 --> 00:30:37.790
app running you can see as I'm tapping
 

00:30:37.790 --> 00:30:39.640
app running you can see as I'm tapping
here in the bottom the memory keeps

00:30:39.640 --> 00:30:39.650
here in the bottom the memory keeps
 

00:30:39.650 --> 00:30:42.040
here in the bottom the memory keeps
going up and I want you to notice here

00:30:42.040 --> 00:30:42.050
going up and I want you to notice here
 

00:30:42.050 --> 00:30:44.530
going up and I want you to notice here
as we get around to two gigabytes we get

00:30:44.530 --> 00:30:44.540
as we get around to two gigabytes we get
 

00:30:44.540 --> 00:30:46.780
as we get around to two gigabytes we get
our first entre memory warning it says

00:30:46.780 --> 00:30:46.790
our first entre memory warning it says
 

00:30:46.790 --> 00:30:50.350
our first entre memory warning it says
it's running low we keep allocating

00:30:50.350 --> 00:30:50.360
it's running low we keep allocating
 

00:30:50.360 --> 00:30:52.240
it's running low we keep allocating
memory and a three gigabytes it gets

00:30:52.240 --> 00:30:52.250
memory and a three gigabytes it gets
 

00:30:52.250 --> 00:30:55.270
memory and a three gigabytes it gets
critical I start to slow down on the

00:30:55.270 --> 00:30:55.280
critical I start to slow down on the
 

00:30:55.280 --> 00:30:58.210
critical I start to slow down on the
tapping to allocate slower and notice

00:30:58.210 --> 00:30:58.220
tapping to allocate slower and notice
 

00:30:58.220 --> 00:31:01.600
tapping to allocate slower and notice
now we can hit 4.1 gigabytes so it

00:31:01.600 --> 00:31:01.610
now we can hit 4.1 gigabytes so it
 

00:31:01.610 --> 00:31:04.120
now we can hit 4.1 gigabytes so it
really does work once again I don't

00:31:04.120 --> 00:31:04.130
really does work once again I don't
 

00:31:04.130 --> 00:31:05.950
really does work once again I don't
recommend allocating that much memory

00:31:05.950 --> 00:31:05.960
recommend allocating that much memory
 

00:31:05.960 --> 00:31:07.870
recommend allocating that much memory
more than likely you're gonna start

00:31:07.870 --> 00:31:07.880
more than likely you're gonna start
 

00:31:07.880 --> 00:31:09.610
more than likely you're gonna start
thrashing when you get to that much

00:31:09.610 --> 00:31:09.620
thrashing when you get to that much
 

00:31:09.620 --> 00:31:13.630
thrashing when you get to that much
memory so at the other tool I wanted to

00:31:13.630 --> 00:31:13.640
memory so at the other tool I wanted to
 

00:31:13.640 --> 00:31:15.460
memory so at the other tool I wanted to
mention here another tool is heap

00:31:15.460 --> 00:31:15.470
mention here another tool is heap
 

00:31:15.470 --> 00:31:17.800
mention here another tool is heap
property and this is also part of

00:31:17.800 --> 00:31:17.810
property and this is also part of
 

00:31:17.810 --> 00:31:18.520
property and this is also part of
perfetto

00:31:18.520 --> 00:31:18.530
perfetto
 

00:31:18.530 --> 00:31:21.280
perfetto
it's used for memory tracking memory

00:31:21.280 --> 00:31:21.290
it's used for memory tracking memory
 

00:31:21.290 --> 00:31:24.400
it's used for memory tracking memory
debugging finding memory leaks it's much

00:31:24.400 --> 00:31:24.410
debugging finding memory leaks it's much
 

00:31:24.410 --> 00:31:26.410
debugging finding memory leaks it's much
easier to use than malloc debug you

00:31:26.410 --> 00:31:26.420
easier to use than malloc debug you
 

00:31:26.420 --> 00:31:28.330
easier to use than malloc debug you
basically just run a script you don't

00:31:28.330 --> 00:31:28.340
basically just run a script you don't
 

00:31:28.340 --> 00:31:31.360
basically just run a script you don't
have to instrument your game so very

00:31:31.360 --> 00:31:31.370
have to instrument your game so very
 

00:31:31.370 --> 00:31:32.920
have to instrument your game so very
easy to use and the other nice feature

00:31:32.920 --> 00:31:32.930
easy to use and the other nice feature
 

00:31:32.930 --> 00:31:36.070
easy to use and the other nice feature
about it it has very low overhead so you

00:31:36.070 --> 00:31:36.080
about it it has very low overhead so you
 

00:31:36.080 --> 00:31:38.590
about it it has very low overhead so you
can run your game much faster doesn't

00:31:38.590 --> 00:31:38.600
can run your game much faster doesn't
 

00:31:38.600 --> 00:31:41.110
can run your game much faster doesn't
get slowed down like it does with malloc

00:31:41.110 --> 00:31:41.120
get slowed down like it does with malloc
 

00:31:41.120 --> 00:31:46.480
get slowed down like it does with malloc
debug here's an example of some output

00:31:46.480 --> 00:31:46.490
debug here's an example of some output
 

00:31:46.490 --> 00:31:49.890
debug here's an example of some output
from heap property if i zoom in here

00:31:49.890 --> 00:31:49.900
from heap property if i zoom in here
 

00:31:49.900 --> 00:31:52.360
from heap property if i zoom in here
hopefully you can see this every line

00:31:52.360 --> 00:31:52.370
hopefully you can see this every line
 

00:31:52.370 --> 00:31:55.840
hopefully you can see this every line
here is an allocation that hasn't been

00:31:55.840 --> 00:31:55.850
here is an allocation that hasn't been
 

00:31:55.850 --> 00:31:58.480
here is an allocation that hasn't been
freed yet and it shows the function

00:31:58.480 --> 00:31:58.490
freed yet and it shows the function
 

00:31:58.490 --> 00:32:01.140
freed yet and it shows the function
associated with that memory allocation

00:32:01.140 --> 00:32:01.150
associated with that memory allocation
 

00:32:01.150 --> 00:32:04.390
associated with that memory allocation
so you know if you see some memory here

00:32:04.390 --> 00:32:04.400
so you know if you see some memory here
 

00:32:04.400 --> 00:32:06.160
so you know if you see some memory here
that's been that's still allocated

00:32:06.160 --> 00:32:06.170
that's been that's still allocated
 

00:32:06.170 --> 00:32:08.620
that's been that's still allocated
that's not free where you expected it to

00:32:08.620 --> 00:32:08.630
that's not free where you expected it to
 

00:32:08.630 --> 00:32:10.660
that's not free where you expected it to
be free that would be an indication of a

00:32:10.660 --> 00:32:10.670
be free that would be an indication of a
 

00:32:10.670 --> 00:32:16.480
be free that would be an indication of a
memory leak another tool that's often

00:32:16.480 --> 00:32:16.490
memory leak another tool that's often
 

00:32:16.490 --> 00:32:19.120
memory leak another tool that's often
overlooked is bug report

00:32:19.120 --> 00:32:19.130
overlooked is bug report
 

00:32:19.130 --> 00:32:21.760
overlooked is bug report
now when I say bug report I don't mean

00:32:21.760 --> 00:32:21.770
now when I say bug report I don't mean
 

00:32:21.770 --> 00:32:24.380
now when I say bug report I don't mean
taking you know making or

00:32:24.380 --> 00:32:24.390
taking you know making or
 

00:32:24.390 --> 00:32:27.230
taking you know making or
and sending to us as a bug what I'm

00:32:27.230 --> 00:32:27.240
and sending to us as a bug what I'm
 

00:32:27.240 --> 00:32:29.980
and sending to us as a bug what I'm
talking about is the tool that's

00:32:29.980 --> 00:32:29.990
talking about is the tool that's
 

00:32:29.990 --> 00:32:33.320
talking about is the tool that's
collects log information it's similar to

00:32:33.320 --> 00:32:33.330
collects log information it's similar to
 

00:32:33.330 --> 00:32:35.600
collects log information it's similar to
look something like adb logcat only it's

00:32:35.600 --> 00:32:35.610
look something like adb logcat only it's
 

00:32:35.610 --> 00:32:38.630
look something like adb logcat only it's
much more detailed and then really good

00:32:38.630 --> 00:32:38.640
much more detailed and then really good
 

00:32:38.640 --> 00:32:40.610
much more detailed and then really good
thing about it is it shows low memory

00:32:40.610 --> 00:32:40.620
thing about it is it shows low memory
 

00:32:40.620 --> 00:32:44.210
thing about it is it shows low memory
killer activity the other nice thing

00:32:44.210 --> 00:32:44.220
killer activity the other nice thing
 

00:32:44.220 --> 00:32:46.940
killer activity the other nice thing
about it it can be captured after a

00:32:46.940 --> 00:32:46.950
about it it can be captured after a
 

00:32:46.950 --> 00:32:49.160
about it it can be captured after a
crash happens so you don't you don't

00:32:49.160 --> 00:32:49.170
crash happens so you don't you don't
 

00:32:49.170 --> 00:32:51.169
crash happens so you don't you don't
need to inter instrument your game and

00:32:51.169 --> 00:32:51.179
need to inter instrument your game and
 

00:32:51.179 --> 00:32:54.169
need to inter instrument your game and
you know expect when a crash is gonna

00:32:54.169 --> 00:32:54.179
you know expect when a crash is gonna
 

00:32:54.179 --> 00:32:56.780
you know expect when a crash is gonna
happen if a crash happens and you just

00:32:56.780 --> 00:32:56.790
happen if a crash happens and you just
 

00:32:56.790 --> 00:32:58.400
happen if a crash happens and you just
noticed it you then just take a bug

00:32:58.400 --> 00:32:58.410
noticed it you then just take a bug
 

00:32:58.410 --> 00:33:02.390
noticed it you then just take a bug
report so to capture a bug report you

00:33:02.390 --> 00:33:02.400
report so to capture a bug report you
 

00:33:02.400 --> 00:33:03.710
report so to capture a bug report you
once again going to the developer

00:33:03.710 --> 00:33:03.720
once again going to the developer
 

00:33:03.720 --> 00:33:06.980
once again going to the developer
options and you tap on this take bug

00:33:06.980 --> 00:33:06.990
options and you tap on this take bug
 

00:33:06.990 --> 00:33:10.070
options and you tap on this take bug
report and in a couple minutes this

00:33:10.070 --> 00:33:10.080
report and in a couple minutes this
 

00:33:10.080 --> 00:33:12.470
report and in a couple minutes this
notification will come up telling you

00:33:12.470 --> 00:33:12.480
notification will come up telling you
 

00:33:12.480 --> 00:33:14.210
notification will come up telling you
that a bug report has been captured and

00:33:14.210 --> 00:33:14.220
that a bug report has been captured and
 

00:33:14.220 --> 00:33:16.310
that a bug report has been captured and
you can tap on it and then share it with

00:33:16.310 --> 00:33:16.320
you can tap on it and then share it with
 

00:33:16.320 --> 00:33:19.280
you can tap on it and then share it with
yourself another way to do this is to

00:33:19.280 --> 00:33:19.290
yourself another way to do this is to
 

00:33:19.290 --> 00:33:22.340
yourself another way to do this is to
just call ad or just run a DB bug report

00:33:22.340 --> 00:33:22.350
just call ad or just run a DB bug report
 

00:33:22.350 --> 00:33:26.230
just call ad or just run a DB bug report
and you can get the information that way

00:33:26.230 --> 00:33:26.240
and you can get the information that way
 

00:33:26.240 --> 00:33:31.340
and you can get the information that way
here's an example of a bug report log

00:33:31.340 --> 00:33:31.350
here's an example of a bug report log
 

00:33:31.350 --> 00:33:35.270
here's an example of a bug report log
file and if we're looking for memory

00:33:35.270 --> 00:33:35.280
file and if we're looking for memory
 

00:33:35.280 --> 00:33:37.580
file and if we're looking for memory
killing we can search for this low

00:33:37.580 --> 00:33:37.590
killing we can search for this low
 

00:33:37.590 --> 00:33:40.610
killing we can search for this low
memory killer kill and in your package

00:33:40.610 --> 00:33:40.620
memory killer kill and in your package
 

00:33:40.620 --> 00:33:43.850
memory killer kill and in your package
name to see if your game was killed and

00:33:43.850 --> 00:33:43.860
name to see if your game was killed and
 

00:33:43.860 --> 00:33:46.070
name to see if your game was killed and
if you can see this there's a whole

00:33:46.070 --> 00:33:46.080
if you can see this there's a whole
 

00:33:46.080 --> 00:33:48.409
if you can see this there's a whole
bunch of low memory killer activity

00:33:48.409 --> 00:33:48.419
bunch of low memory killer activity
 

00:33:48.419 --> 00:33:50.180
bunch of low memory killer activity
going on here because we're running low

00:33:50.180 --> 00:33:50.190
going on here because we're running low
 

00:33:50.190 --> 00:33:51.890
going on here because we're running low
on memory and it's killing those

00:33:51.890 --> 00:33:51.900
on memory and it's killing those
 

00:33:51.900 --> 00:33:54.409
on memory and it's killing those
processes that aren't needed so it can

00:33:54.409 --> 00:33:54.419
processes that aren't needed so it can
 

00:33:54.419 --> 00:34:01.520
processes that aren't needed so it can
free up memory for your game so in this

00:34:01.520 --> 00:34:01.530
free up memory for your game so in this
 

00:34:01.530 --> 00:34:04.880
free up memory for your game so in this
instance yes the game the app was killed

00:34:04.880 --> 00:34:04.890
instance yes the game the app was killed
 

00:34:04.890 --> 00:34:07.789
instance yes the game the app was killed
by low memory killer so in case your

00:34:07.789 --> 00:34:07.799
by low memory killer so in case your
 

00:34:07.799 --> 00:34:09.710
by low memory killer so in case your
your game is crashing for some unknown

00:34:09.710 --> 00:34:09.720
your game is crashing for some unknown
 

00:34:09.720 --> 00:34:12.770
your game is crashing for some unknown
reason this will let you know it was

00:34:12.770 --> 00:34:12.780
reason this will let you know it was
 

00:34:12.780 --> 00:34:17.430
reason this will let you know it was
killed because it ran low on memory

00:34:17.430 --> 00:34:17.440
 
 

00:34:17.440 --> 00:34:21.150
 
so just to summarize here some things I

00:34:21.150 --> 00:34:21.160
so just to summarize here some things I
 

00:34:21.160 --> 00:34:24.150
so just to summarize here some things I
think are good to remember Android

00:34:24.150 --> 00:34:24.160
think are good to remember Android
 

00:34:24.160 --> 00:34:27.390
think are good to remember Android
unfortunately has no guarantees for the

00:34:27.390 --> 00:34:27.400
unfortunately has no guarantees for the
 

00:34:27.400 --> 00:34:31.460
unfortunately has no guarantees for the
amount of available memory that you have

00:34:31.460 --> 00:34:31.470
amount of available memory that you have
 

00:34:31.470 --> 00:34:34.770
amount of available memory that you have
the things to look out for are obviously

00:34:34.770 --> 00:34:34.780
the things to look out for are obviously
 

00:34:34.780 --> 00:34:36.840
the things to look out for are obviously
crashing that's the really bad one and

00:34:36.840 --> 00:34:36.850
crashing that's the really bad one and
 

00:34:36.850 --> 00:34:39.330
crashing that's the really bad one and
then also thrashing can happen and that

00:34:39.330 --> 00:34:39.340
then also thrashing can happen and that
 

00:34:39.340 --> 00:34:44.820
then also thrashing can happen and that
really is bad for performance I and I've

00:34:44.820 --> 00:34:44.830
really is bad for performance I and I've
 

00:34:44.830 --> 00:34:47.160
really is bad for performance I and I've
mentioned some of the new tools in queue

00:34:47.160 --> 00:34:47.170
mentioned some of the new tools in queue
 

00:34:47.170 --> 00:34:50.040
mentioned some of the new tools in queue
and hopefully you can use them to find

00:34:50.040 --> 00:34:50.050
and hopefully you can use them to find
 

00:34:50.050 --> 00:34:53.010
and hopefully you can use them to find
out what's going on and prevent these

00:34:53.010 --> 00:34:53.020
out what's going on and prevent these
 

00:34:53.020 --> 00:34:55.680
out what's going on and prevent these
bad things from happening in low memory

00:34:55.680 --> 00:34:55.690
bad things from happening in low memory
 

00:34:55.690 --> 00:34:59.940
bad things from happening in low memory
situations and finally you know I'm

00:34:59.940 --> 00:34:59.950
situations and finally you know I'm
 

00:34:59.950 --> 00:35:03.300
situations and finally you know I'm
hoping that now that you understand how

00:35:03.300 --> 00:35:03.310
hoping that now that you understand how
 

00:35:03.310 --> 00:35:06.300
hoping that now that you understand how
Android memory works you can put this to

00:35:06.300 --> 00:35:06.310
Android memory works you can put this to
 

00:35:06.310 --> 00:35:11.550
Android memory works you can put this to
use in your game also I want to remind

00:35:11.550 --> 00:35:11.560
use in your game also I want to remind
 

00:35:11.560 --> 00:35:13.410
use in your game also I want to remind
people that we're doing game reviews so

00:35:13.410 --> 00:35:13.420
people that we're doing game reviews so
 

00:35:13.420 --> 00:35:15.000
people that we're doing game reviews so
if you have a game you'd like us to

00:35:15.000 --> 00:35:15.010
if you have a game you'd like us to
 

00:35:15.010 --> 00:35:18.780
if you have a game you'd like us to
review you can go back here in the

00:35:18.780 --> 00:35:18.790
review you can go back here in the
 

00:35:18.790 --> 00:35:21.330
review you can go back here in the
garage section to have us look at your

00:35:21.330 --> 00:35:21.340
garage section to have us look at your
 

00:35:21.340 --> 00:35:26.040
garage section to have us look at your
game and that's it and I have some links

00:35:26.040 --> 00:35:26.050
game and that's it and I have some links
 

00:35:26.050 --> 00:35:28.560
game and that's it and I have some links
here in particular you might be

00:35:28.560 --> 00:35:28.570
here in particular you might be
 

00:35:28.570 --> 00:35:30.630
here in particular you might be
interested in the perfetto link it's

00:35:30.630 --> 00:35:30.640
interested in the perfetto link it's
 

00:35:30.640 --> 00:35:31.410
interested in the perfetto link it's
just

00:35:31.410 --> 00:35:31.420
just
 

00:35:31.420 --> 00:35:34.500
just
perfetto got dev pretty easy link here

00:35:34.500 --> 00:35:34.510
perfetto got dev pretty easy link here
 

00:35:34.510 --> 00:35:38.010
perfetto got dev pretty easy link here
and also in that perfetto documentation

00:35:38.010 --> 00:35:38.020
and also in that perfetto documentation
 

00:35:38.020 --> 00:35:42.650
and also in that perfetto documentation
is some description of he prof d so

00:35:42.650 --> 00:35:42.660
is some description of he prof d so
 

00:35:42.660 --> 00:35:44.380
is some description of he prof d so
that's it thank you

00:35:44.380 --> 00:35:44.390
that's it thank you
 

00:35:44.390 --> 00:35:47.370
that's it thank you
[Applause]

00:35:47.370 --> 00:35:47.380
[Applause]
 

00:35:47.380 --> 00:36:08.750
[Applause]
[Music]

