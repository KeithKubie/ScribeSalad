WEBVTT
Kind: captions
Language: en

00:00:00.830 --> 00:00:02.890
The intent of the visitor pattern,

00:00:02.890 --> 00:00:07.290
is to vary the operation to be performed on the elements of a complex structure,

00:00:07.290 --> 00:00:11.180
without changing the classes of the elements of the structure itself.

00:00:11.180 --> 00:00:14.480
As an example use, imagine that you have an abstract syntax tree,

00:00:14.480 --> 00:00:18.920
it might be in a compiler, useful for representing a program.

00:00:18.920 --> 00:00:21.860
You might wish to walk the tree for various reasons.

00:00:21.860 --> 00:00:26.290
For example, to generate code, to pretty print the, the program or

00:00:26.290 --> 00:00:27.360
to do type checking.

00:00:27.360 --> 00:00:30.680
This would result in three different visitors,

00:00:30.680 --> 00:00:33.600
all walking the same composite data structure.

00:00:33.600 --> 00:00:37.270
The motivation that the pattern addresses is to be able to

00:00:37.270 --> 00:00:41.790
decouple the structural elements that is, the data structures.

00:00:41.790 --> 00:00:44.050
&gt;From the operations applies to them.

00:00:44.050 --> 00:00:44.820
You think about this.

00:00:44.820 --> 00:00:47.720
This means that there are two factors that control how you

00:00:47.720 --> 00:00:50.350
are applying the operations.

00:00:50.350 --> 00:00:52.574
One is the data structure itself which may have, may,

00:00:52.574 --> 00:00:54.720
may have many different kinds of nodes.

00:00:54.720 --> 00:00:56.970
And the other is the class of operations such as,

00:00:56.970 --> 00:00:59.020
the code generation, pre-printing, and type checking

