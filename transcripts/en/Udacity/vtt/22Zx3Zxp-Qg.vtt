WEBVTT
Kind: captions
Language: en

00:00:00.410 --> 00:00:05.960
Up to now, we talked about mechanisms for virtualizing the memory resource.

00:00:07.120 --> 00:00:09.940
In particular for dealing with dynamic

00:00:09.940 --> 00:00:13.425
memory pressure and sharing machine pages across

00:00:13.425 --> 00:00:20.240
VM's. A higher level issue is the policies we have to use for

00:00:20.240 --> 00:00:25.570
allocating and reclaiming memory from the domains to which we've allocated them

00:00:25.570 --> 00:00:31.475
in the first place. Ultimately, the goal of virtualization is maximizing the

00:00:31.475 --> 00:00:34.820
utilization of the resources. Memory is

00:00:34.820 --> 00:00:38.740
a precious resource. Virtualized environments may use

00:00:38.740 --> 00:00:45.000
different policies for memory allocation. One can be a pure share

00:00:45.000 --> 00:00:51.080
based policy. The idea here is, you pay less, you get less. That's the idea.

00:00:51.080 --> 00:00:53.780
So if you have a service level agreement with

00:00:53.780 --> 00:00:56.590
the data center, then the data center gives you a

00:00:56.590 --> 00:01:00.140
certain amount of resources based on, the more of dollars

00:01:00.140 --> 00:01:02.630
you put on a table. So that is a pure

00:01:02.630 --> 00:01:06.170
share based approach. The problem with a share based approach,

00:01:06.170 --> 00:01:08.430
is of course the fact that it could lead to

00:01:08.430 --> 00:01:12.960
hoarding. If a virtual machine gets a bunch of resources

00:01:12.960 --> 00:01:16.770
and it's not really using it, it's just wasting it.

00:01:16.770 --> 00:01:21.728
Now, the desired behavior is if the working-set

00:01:21.728 --> 00:01:24.240
of a virtual machine goes up, you give it

00:01:24.240 --> 00:01:27.840
more memory. If it's working-set shrinks, get back

00:01:27.840 --> 00:01:29.140
the memory so that you can give it to

00:01:29.140 --> 00:01:32.310
somebody else. So working-set-based approach would be the

00:01:32.310 --> 00:01:35.260
saner approach. But at the same time, if I

00:01:35.260 --> 00:01:41.970
paid money, I need my resources. So, one thing that can be done is sort of put

00:01:41.970 --> 00:01:47.488
these two ideas together in implementing a dynamic idle-adjusted

00:01:47.488 --> 00:01:50.540
shares approach. In other words, you're going to tax

00:01:50.540 --> 00:01:53.010
the guys that are hoarders, so you tax the

00:01:53.010 --> 00:01:57.195
idle pages more than active pages. If I've given you

00:01:57.195 --> 00:01:59.580
a bunch of resources, if you're actively using it,

00:01:59.580 --> 00:02:02.970
more power to you. But if you're hoarding it,

00:02:02.970 --> 00:02:04.720
I'm going to tax you. I'm going to take away the

00:02:04.720 --> 00:02:07.000
resources that I gave you. And you may not even

00:02:07.000 --> 00:02:09.169
notice it because you're not using it anyway.

00:02:09.169 --> 00:02:13.008
So that's the idea in this dynamic idle-adjusted

00:02:13.008 --> 00:02:18.960
shares approach. And now what is this tax? Well, we could make the tax rate 0%,

00:02:18.960 --> 00:02:25.190
that is plutocracy, meaning you paid for it, you got it, you can sit on it,

00:02:25.190 --> 00:02:27.500
I'm not going to tax you, that's one approach.

00:02:27.500 --> 00:02:32.490
Or, I could make the tax 100%, meaning that

00:02:32.490 --> 00:02:35.320
if you've got some resources and you're not

00:02:35.320 --> 00:02:37.105
using it, I'm going to take all of it away.

00:02:37.105 --> 00:02:40.860
[LAUGH] So that's the wealth redistribution. Sort of

00:02:40.860 --> 00:02:45.350
a socialistic policy, use it or lose it. And

00:02:45.350 --> 00:02:47.535
in other words, if you make the tax

00:02:47.535 --> 00:02:52.450
100%, we are ignoring shares altogether. Now something in

00:02:52.450 --> 00:02:57.570
between is probably the best way to do it, so for instance if you use a tax rate

00:02:57.570 --> 00:03:03.490
of 50% or 75% saying if you have idle pages, then the tax rate is 50%, there's

00:03:03.490 --> 00:03:09.060
a 50% chance I'll take it away. And that's what is being done in

00:03:09.060 --> 00:03:12.740
the VMware ESX server today in terms of

00:03:12.740 --> 00:03:16.765
how to allocate memory to the domains that

00:03:16.765 --> 00:03:19.738
need it. You are going to use share based

00:03:19.738 --> 00:03:22.552
approach, but if you're not actively using it,

00:03:22.552 --> 00:03:27.046
we're going to take it away from you. And of course we'll give it back to you if

00:03:27.046 --> 00:03:29.698
you start using it, and that's the reason why

00:03:29.698 --> 00:03:32.282
you don't want to make the tax 100%, but

00:03:32.282 --> 00:03:36.380
have it somewhat smaller. So by having a tax

00:03:36.380 --> 00:03:40.790
rate that is not quite 100% but maybe 50%

00:03:40.790 --> 00:03:43.980
or 75%, we can reclaim most of the idle

00:03:43.980 --> 00:03:47.490
memory from the VM's that are not actively using it.

00:03:47.490 --> 00:03:52.820
But at the same time, since we're not taxing idle pages 100%, it allows

00:03:52.820 --> 00:03:56.380
for sudden working set increases that might

00:03:56.380 --> 00:04:00.750
be experienced by a particular domain. Suddenly, a

00:04:00.750 --> 00:04:07.480
domain starts needing more memory, at that point it may still have some reserves

00:04:07.480 --> 00:04:13.000
in terms of the idle pages that I did not take away from that particular domain.

00:04:13.000 --> 00:04:16.228
So the key point is that, you don't want to tax

00:04:16.228 --> 00:04:20.760
at 100% because this allows for sudden working set increases

00:04:20.760 --> 00:04:24.440
that may be there, in a virtual machine that happens

00:04:24.440 --> 00:04:26.870
to be idle for some time, but suddenly work picks up.

