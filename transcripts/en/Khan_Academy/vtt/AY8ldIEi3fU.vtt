WEBVTT
Kind: captions
Language: en

00:00:00.418 --> 00:00:03.066
- [Voiceover] Agent Hunt is
transferring classified files

00:00:03.066 --> 00:00:06.107
from the CIA mainframe
into his flash drive.

00:00:06.107 --> 00:00:08.881
This is the formula for
the size of the files

00:00:08.881 --> 00:00:13.281
on Agent Hunt's drive S,
measured in megabytes,

00:00:13.281 --> 00:00:16.793
as a function of time t,

00:00:16.793 --> 00:00:18.603
measured in seconds.

00:00:18.603 --> 00:00:20.322
Complete the following sentences

00:00:20.322 --> 00:00:22.840
with the appropriate missing values.

00:00:22.840 --> 00:00:24.792
When the transfer began,

00:00:24.792 --> 00:00:28.784
the drive had blank
megabytes of files on it.

00:00:28.784 --> 00:00:30.920
So, when the transfer began,

00:00:30.920 --> 00:00:33.416
that would be t equals zero.

00:00:33.416 --> 00:00:36.655
T equals zero was right
when the transfer began.

00:00:36.655 --> 00:00:38.145
So t equals zero.

00:00:38.145 --> 00:00:42.688
S of zero is going to be five times zero,

00:00:42.688 --> 00:00:46.043
five times zero plus 45,

00:00:46.043 --> 00:00:49.537
which of course is just
going to be equal to 45.

00:00:49.537 --> 00:00:51.000
And S is measured,

00:00:51.000 --> 00:00:52.659
and they tell us, measured in megabytes.

00:00:52.659 --> 00:00:55.843
So there were 45 megabytes of files

00:00:55.843 --> 00:00:58.611
on his drive before,

00:00:58.611 --> 00:01:00.732
or right when the transfer began.

00:01:00.732 --> 00:01:03.000
Then they say, every 10 seconds,

00:01:03.000 --> 00:01:06.599
every 10 seconds, an
additional blank megabytes

00:01:06.599 --> 00:01:09.199
are transferred into the drive.

00:01:09.199 --> 00:01:11.834
So every 10 seconds, how many?

00:01:11.834 --> 00:01:12.930
Well, one way to think about,

00:01:12.930 --> 00:01:14.479
there's a bunch of ways
you could think about this

00:01:14.479 --> 00:01:17.160
one is, we know that
there were 45 megabytes

00:01:17.160 --> 00:01:19.006
at time equals zero.

00:01:19.006 --> 00:01:21.003
Let's think about what
happens 10 seconds later.

00:01:21.003 --> 00:01:23.313
How many megabytes are in his drive?

00:01:23.313 --> 00:01:26.703
So we can say S of 10 is going to be

00:01:26.703 --> 00:01:31.242
five times 10 plus 45,

00:01:31.242 --> 00:01:35.270
which is equal to 50 plus 45.

00:01:35.270 --> 00:01:38.504
So, time equals zero
there were 45 megabytes

00:01:38.504 --> 00:01:41.186
and 10 seconds later there's now

00:01:41.186 --> 00:01:43.474
50 plus 45 megabytes.

00:01:43.474 --> 00:01:46.641
So in 10 seconds an extra 50 megabytes

00:01:46.641 --> 00:01:48.534
are transferred into the drive.

00:01:48.534 --> 00:01:52.318
And that's expected,
because as t increases one,

00:01:52.318 --> 00:01:54.535
this function goes up by five,

00:01:54.535 --> 00:01:58.599
so if t increases by 10, this
is going to increase by 50.

00:01:58.599 --> 00:02:00.340
So for every 10 seconds you would have,

00:02:00.340 --> 00:02:03.402
50 megabytes are
transferred into the drive.

00:02:03.402 --> 00:02:04.830
And you can test that more if you want.

00:02:04.830 --> 00:02:07.416
You can say okay, let's
go another 10 seconds.

00:02:07.416 --> 00:02:09.691
S of 20 seconds,

00:02:09.691 --> 00:02:14.532
that's going to be 5 times 20 plus 45,

00:02:14.532 --> 00:02:18.236
which is equal to 100 plus 45.

00:02:18.236 --> 00:02:21.602
So notice, when 10 seconds
have passed in time,

00:02:21.602 --> 00:02:23.842
when we've increased time by 10 seconds,

00:02:23.842 --> 00:02:26.508
we've increased memory, our
memory that we're using,

00:02:26.508 --> 00:02:29.026
the megabytes we're
using has increased by,

00:02:29.026 --> 00:02:33.392
has increased by, has increased by 50.

