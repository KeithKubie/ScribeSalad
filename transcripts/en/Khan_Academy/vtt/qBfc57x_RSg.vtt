WEBVTT
Kind: captions
Language: en

00:00:00.470 --> 00:00:03.420
I've got this matrix, A, here,
it's a 2 by 3 matrix.

00:00:03.420 --> 00:00:06.210
And just as a bit of review,
let's figure out its nullspace

00:00:06.210 --> 00:00:07.920
and its columnspace.

00:00:07.920 --> 00:00:13.300
So the nullspace of A is the set
of all vectors x that are

00:00:13.300 --> 00:00:16.550
member of-- let's see we have
3 columns here-- so a member

00:00:16.550 --> 00:00:22.580
of R3, such that A times the
vector are going to be equal

00:00:22.580 --> 00:00:25.210
to the 0 vector.

00:00:25.210 --> 00:00:26.820
So we can just set this up.

00:00:26.820 --> 00:00:29.800
Let me just-- we just need to
figure out all of the x's that

00:00:29.800 --> 00:00:31.990
satisfy this in R3.

00:00:31.990 --> 00:00:35.710
So we take our matrix
A 2, minus 1, minus

00:00:35.710 --> 00:00:39.120
3, minus 4, 2, 6.

00:00:39.120 --> 00:00:42.965
Multiply them times some
arbitrary vector in R3 here.

00:00:42.965 --> 00:00:47.060
So you get x1, x2, x3.

00:00:47.060 --> 00:00:49.210
And you set them equal
to the 0 vector.

00:00:49.210 --> 00:00:50.930
It's going to be the
0 vector in R2.

00:00:50.930 --> 00:00:52.120
Because we have 2 rows here.

00:00:52.120 --> 00:00:55.770
You multiply a 2 by 3 matrix
times a vector in R3, you're

00:00:55.770 --> 00:00:59.250
going to get a 2 by 1 vector
or 2 by 1 matrix.

00:00:59.250 --> 00:01:02.560
So you're going to get
the 0 vector in R3.

00:01:02.560 --> 00:01:04.590
And to solve what is essentially
a system of

00:01:04.590 --> 00:01:08.570
equations-- you get 2 x1 minus
x2 minus 3 x3 is equal to 0

00:01:08.570 --> 00:01:09.930
and so on and so forth.

00:01:09.930 --> 00:01:12.610
We can just set up an
augmented matrix.

00:01:12.610 --> 00:01:15.890
So we can just set up this
augmented matrix right here.

00:01:15.890 --> 00:01:21.240
2 minus 1 minus 3
minus 4, 2, 6.

00:01:21.240 --> 00:01:24.140
And then augment it with what
we're trying to set it equal

00:01:24.140 --> 00:01:26.420
to to solve the system.

00:01:26.420 --> 00:01:29.690
And you know we're going to
perform a bunch of row

00:01:29.690 --> 00:01:32.690
operations here to put this in
reduced row echelon form.

00:01:32.690 --> 00:01:35.610
And they're not going to change
the right-hand side of

00:01:35.610 --> 00:01:36.560
this augmented matrix.

00:01:36.560 --> 00:01:38.700
And that's essentially the
argument as to why the

00:01:38.700 --> 00:01:42.390
nullspace of the reduced row
echelon form of A is the same

00:01:42.390 --> 00:01:43.600
thing as the nullspace of A.

00:01:43.600 --> 00:01:45.430
But anyway, that's just
a bit of review.

00:01:45.430 --> 00:01:48.690
So let's perform some row
operations to solve this a

00:01:48.690 --> 00:01:50.680
little bit better.

00:01:50.680 --> 00:01:54.600
So, the first thing I might
want to do is divide the

00:01:54.600 --> 00:01:57.145
first row by 2.

00:01:57.145 --> 00:02:02.970
So if I divide the first row by
2 I get a 1 minus 1/2 minus

00:02:02.970 --> 00:02:07.220
3/2 and then of course
0 divided by 2 is 0.

00:02:07.220 --> 00:02:14.200
And let's just divide this row
right here by-- I don't know

00:02:14.200 --> 00:02:18.680
just to simplify things--
let's divide it by 4.

00:02:18.680 --> 00:02:20.890
So I'm doing two row operations
in one step.

00:02:20.890 --> 00:02:21.560
And you can do that.

00:02:21.560 --> 00:02:23.510
I could have done it in
two separate steps.

00:02:23.510 --> 00:02:29.100
So if we divide it by 4, this
becomes minus 1, 1/2 and then

00:02:29.100 --> 00:02:33.640
you get 3/2 and then
you get 0.

00:02:33.640 --> 00:02:36.570
And now, let's keep my
first row the same.

00:02:36.570 --> 00:02:38.150
I'm going to keep my
first row the same.

00:02:38.150 --> 00:02:43.960
It's 1 minus 1/2 minus 3/2 and
of course the 0 is the

00:02:43.960 --> 00:02:45.070
right-hand side.

00:02:45.070 --> 00:02:47.420
Now let's replace my second
row with my second row

00:02:47.420 --> 00:02:49.550
plus my first row.

00:02:49.550 --> 00:02:52.580
So these are just linear
operations on these guys.

00:02:52.580 --> 00:02:55.170
So negative 1 plus 1 is 0.

00:02:55.170 --> 00:02:58.190
1/2 plus minus 1/2 is 0.

00:02:58.190 --> 00:03:00.400
3/2 plus minus 3/2 is 0.

00:03:00.400 --> 00:03:04.190
And of course, 0 plus 0 is 0.

00:03:04.190 --> 00:03:05.800
So what are we left with?

00:03:05.800 --> 00:03:07.430
we're left with this
right here.

00:03:07.430 --> 00:03:13.310
This is another way of saying
that x1-- let me write it this

00:03:13.310 --> 00:03:19.940
way-- x1-- I guess the easiest
way to think about it is--

00:03:19.940 --> 00:03:23.070
you're multiplying the reduced
row echelon form of A now.

00:03:23.070 --> 00:03:26.750
1 minus 1/2 minus 3/2.

00:03:26.750 --> 00:03:28.950
You have a bunch of 0's here.

00:03:28.950 --> 00:03:37.310
Times x1, x2, x3 is equal
to the R2 0 vector.

00:03:37.310 --> 00:03:40.680
This is another interpretation
of this augmented matrix.

00:03:40.680 --> 00:03:43.150
So this is just saying,
this is useless.

00:03:43.150 --> 00:03:45.540
This is saying 0 times that plus
0 times that plus 0 times

00:03:45.540 --> 00:03:46.680
that is equal to 0.

00:03:46.680 --> 00:03:47.690
So it's giving us
no information.

00:03:47.690 --> 00:03:54.280
But this first row tells us
that-- let me switch colors--

00:03:54.280 --> 00:04:04.740
1 times x1 minus 1/2 times
x2 minus 3/2 times

00:04:04.740 --> 00:04:07.010
x3 is equal to 0.

00:04:07.010 --> 00:04:10.240
All of the vectors whose
components satisfy this are in

00:04:10.240 --> 00:04:11.580
my nullspace.

00:04:11.580 --> 00:04:13.950
If I want to write it a little
bit differently I could write

00:04:13.950 --> 00:04:22.079
as, x1 is equal to 1/2
x2 plus 3/2 x3.

00:04:22.079 --> 00:04:25.450
Or if I wanted to write my
solution set in vector form, I

00:04:25.450 --> 00:04:29.170
could write that my nullspace is
going to be the set of all

00:04:29.170 --> 00:04:34.960
the vectors x1, x2, x3 that
satisfy these conditions.

00:04:34.960 --> 00:04:37.150
That are equal to what?

00:04:37.150 --> 00:04:39.950
Well, x2 and x3 are
free variables.

00:04:39.950 --> 00:04:42.760
They're associated with the
non-pivot entries, or the

00:04:42.760 --> 00:04:45.670
non-pivot columns in our reduced
row echelon form.

00:04:45.670 --> 00:04:50.500
That is a pivot column
right there.

00:04:54.720 --> 00:04:55.595
So let me write it this way.

00:04:55.595 --> 00:04:59.670
It's going to be x2
times something

00:04:59.670 --> 00:05:03.100
plus x3 times something.

00:05:03.100 --> 00:05:05.180
Those are my two
free variables.

00:05:05.180 --> 00:05:08.270
And we have here,
x1 is 1/2 x2.

00:05:08.270 --> 00:05:11.690
1/2 times x2 plus
3/2 times x3.

00:05:14.850 --> 00:05:19.790
x2 is just going to be x2
times 1 plus 0 times x3.

00:05:19.790 --> 00:05:25.060
x3 is going to be 0 times
x2 plus 1 times x3.

00:05:25.060 --> 00:05:29.310
So, our nullspace, these
can be any real

00:05:29.310 --> 00:05:30.470
numbers right here.

00:05:30.470 --> 00:05:31.780
They're free variables.

00:05:31.780 --> 00:05:34.440
So our nullspace is essentially
all of the linear

00:05:34.440 --> 00:05:37.420
combinations of this
guy and that guy.

00:05:37.420 --> 00:05:45.430
Or another way to write it, the
nullspace of A is equal to

00:05:45.430 --> 00:05:48.730
the span, which is the same
thing as all the linear

00:05:48.730 --> 00:05:55.280
combinations of the
span of 1/2, 1, 0.

00:05:55.280 --> 00:05:57.050
Notice these are
vectors in R3.

00:05:57.050 --> 00:05:59.620
And that makes sense because the
nullspace is going to be a

00:05:59.620 --> 00:06:00.710
set of vectors in R3.

00:06:00.710 --> 00:06:02.310
So it's the span of that.

00:06:02.310 --> 00:06:03.560
And that right there.

00:06:06.080 --> 00:06:10.850
So 3/2, 0, and 1.

00:06:10.850 --> 00:06:12.460
Just like that.

00:06:12.460 --> 00:06:20.600
And what is the columnspace
of our original matrix, A?

00:06:20.600 --> 00:06:27.850
So the columnspace of A is equal
to just, the subspace

00:06:27.850 --> 00:06:30.430
created by all of the linear
combinations of these guys.

00:06:30.430 --> 00:06:32.830
Or essentially the span
of the column vectors.

00:06:32.830 --> 00:06:39.310
Is equal to the span
of 2 minus 4 minus

00:06:39.310 --> 00:06:42.550
1, 2, minus 3, 6.

00:06:42.550 --> 00:06:45.180
These are all each
separate vectors.

00:06:45.180 --> 00:06:48.360
So it's the span of
these 3 vectors.

00:06:48.360 --> 00:06:51.540
Now, these guys might not
be linearly independent.

00:06:51.540 --> 00:06:54.394
And actually, when you put
this guy in reduced row

00:06:54.394 --> 00:06:57.960
echelon form, you know that the
basis vectors for this are

00:06:57.960 --> 00:07:00.010
the vectors that are associated

00:07:00.010 --> 00:07:01.530
with our pivot columns.

00:07:01.530 --> 00:07:02.760
So we have one pivot
column here.

00:07:02.760 --> 00:07:03.740
It's our first column.

00:07:03.740 --> 00:07:07.900
So we could say that we could
use this as a basis vector.

00:07:07.900 --> 00:07:08.780
And it makes sense.

00:07:08.780 --> 00:07:11.280
Because this guy right here
is minus 2 times this guy.

00:07:11.280 --> 00:07:15.660
This guy right here is minus
3/2 times that guy.

00:07:15.660 --> 00:07:18.030
So these two guys can definitely
be represented as

00:07:18.030 --> 00:07:19.870
linear combinations
of that guy.

00:07:19.870 --> 00:07:30.670
So it's equal to the span of
just the vector, 2, minus 4.

00:07:30.670 --> 00:07:34.570
So if you were to ask me, and
this is the basis for our

00:07:34.570 --> 00:07:35.300
columnspace.

00:07:35.300 --> 00:07:37.160
So if you wanted to know the
rank-- and this is all a bit

00:07:37.160 --> 00:07:43.050
of review-- the rank of A is
equal to the number of vectors

00:07:43.050 --> 00:07:45.290
in our basis for our
columnspace.

00:07:45.290 --> 00:07:48.370
So it's going to
be equal to 1.

00:07:48.370 --> 00:07:51.580
Now, everything I just did
is a bit of review.

00:07:51.580 --> 00:07:53.740
But with the last couple of
videos, we've been dealing

00:07:53.740 --> 00:07:55.520
with transposes.

00:07:55.520 --> 00:07:58.540
So let's actually figure out
the same ideas for the

00:07:58.540 --> 00:07:59.790
transpose of A.

00:08:03.120 --> 00:08:08.160
So A transpose looks
like this.

00:08:08.160 --> 00:08:18.790
A transpose is equal to the
matrix 2, minus 1, minus 3 is

00:08:18.790 --> 00:08:20.470
the first column right there.

00:08:20.470 --> 00:08:25.910
And then the second column is
going to be minus 4, 2 and 6.

00:08:25.910 --> 00:08:28.240
That is our transpose.

00:08:28.240 --> 00:08:31.100
So let's figure out the
nullspace and the columnspace

00:08:31.100 --> 00:08:32.350
of our transpose.

00:08:37.080 --> 00:08:38.940
Let me put this in reduced
row echelon form so

00:08:38.940 --> 00:08:41.159
we can get the nullspace.

00:08:41.159 --> 00:08:42.919
Let me get the nullspace
of this guy.

00:08:42.919 --> 00:08:46.900
So we could do the exact
same exercise.

00:08:46.900 --> 00:08:47.660
Let me write it this way.

00:08:47.660 --> 00:08:51.090
The nullspace of
A transpose-- A

00:08:51.090 --> 00:08:53.480
transpose is a 3 by 2 matrix.

00:08:53.480 --> 00:08:57.350
So it's equal to all of
the vectors, x, that

00:08:57.350 --> 00:09:00.540
are members of R2.

00:09:00.540 --> 00:09:03.040
Not R3 anymore-- because now we
are taking the transpose's

00:09:03.040 --> 00:09:08.810
nullspace-- such that A
transpose times R vectors are

00:09:08.810 --> 00:09:10.880
equal to the 0 vector in R3.

00:09:15.210 --> 00:09:17.930
And we can do that the same
exact way we did before.

00:09:17.930 --> 00:09:20.230
We set up an augmented matrix.

00:09:20.230 --> 00:09:23.740
We could just put it in reduced
row echelon form and

00:09:23.740 --> 00:09:24.770
set them all equal to 0.

00:09:24.770 --> 00:09:25.980
So let's just do that.

00:09:25.980 --> 00:09:29.480
So if we-- let me just put it
in reduced row echelon form.

00:09:29.480 --> 00:09:35.460
So let me divide my
first row by 2.

00:09:35.460 --> 00:09:39.460
Let's divide the
first row by 2.

00:09:39.460 --> 00:09:40.770
I'm just going to put it in
reduced row echelon form.

00:09:40.770 --> 00:09:44.760
The first row divided
by 2 is 1 minus 2.

00:09:44.760 --> 00:09:48.090
And then the second row, let
me divide it-- let me just,

00:09:48.090 --> 00:09:51.900
I'll just keep it the same--
so minus 1, 2.

00:09:51.900 --> 00:09:54.460
And then this last row,
let me divide it by 3.

00:09:54.460 --> 00:09:57.490
So it becomes minus 1 and 2.

00:09:57.490 --> 00:10:00.420
And now, let me keep my
first row the same.

00:10:00.420 --> 00:10:02.910
1 minus 2.

00:10:02.910 --> 00:10:05.190
And now let me replace my second
row with my second row

00:10:05.190 --> 00:10:06.050
plus my first row.

00:10:06.050 --> 00:10:07.480
So minus 1 plus 1 is 0.

00:10:07.480 --> 00:10:09.440
2 plus minus 2 is 0.

00:10:09.440 --> 00:10:10.830
You get some 0's.

00:10:10.830 --> 00:10:12.160
I'm going to do the same thing
with the third row.

00:10:12.160 --> 00:10:14.420
Replace it with it plus
the first row.

00:10:14.420 --> 00:10:16.800
Once again you're going
to get some 0's.

00:10:16.800 --> 00:10:19.840
So this is the reduced row
echelon form of A transpose.

00:10:24.830 --> 00:10:28.190
And its nullspace is the same
as A transpose's nullspace.

00:10:30.990 --> 00:10:36.770
We could say, to find this
nullspace we can find all of

00:10:36.770 --> 00:10:42.740
the solutions to this equation
times the vectors x1 and x2 is

00:10:42.740 --> 00:10:50.060
equal to 0, 0, and 0.

00:10:50.060 --> 00:10:50.830
These aren't vectors.

00:10:50.830 --> 00:10:52.650
These are just entries
right here.

00:10:52.650 --> 00:10:54.830
0, 0, 0.

00:10:54.830 --> 00:10:57.190
So these two lines give
us no information, but

00:10:57.190 --> 00:10:58.140
this first one does.

00:10:58.140 --> 00:11:00.620
So we get 1 times x1-- and
notice, this is the pivot

00:11:00.620 --> 00:11:02.580
column right here.

00:11:02.580 --> 00:11:03.640
It's associated.

00:11:03.640 --> 00:11:06.930
So x1 is going to be
a pivot variable.

00:11:06.930 --> 00:11:08.530
x2 will be a free variable.

00:11:08.530 --> 00:11:10.390
And just to be clear that
the first column

00:11:10.390 --> 00:11:11.260
is our pivot column.

00:11:11.260 --> 00:11:14.420
So if we go back to A transpose,
it's this first

00:11:14.420 --> 00:11:17.470
column here that is associated
with the pivot column.

00:11:17.470 --> 00:11:21.770
So when we talk about its
columnspace, this by itself

00:11:21.770 --> 00:11:23.660
will span the columnspace.

00:11:23.660 --> 00:11:25.310
This is all a review of
what we did before.

00:11:25.310 --> 00:11:28.190
We're just applying it
to the transpose.

00:11:28.190 --> 00:11:30.600
Let's go back to
our nullspace.

00:11:30.600 --> 00:11:37.610
So this tells us that 1 times
x1, so x1, minus 2 times x2,

00:11:37.610 --> 00:11:41.030
is equal to 0.

00:11:41.030 --> 00:11:44.830
Or we could say that x1 is
equal to 2 times x2.

00:11:44.830 --> 00:11:48.620
So all of the vectors in R2 that
satisfy these conditions

00:11:48.620 --> 00:11:52.190
with these entries will be in
the nullspace of A transpose.

00:11:52.190 --> 00:11:53.440
Let me write it this way.

00:11:57.010 --> 00:12:02.700
So the nullspace of A is going
to be the set of all the

00:12:02.700 --> 00:12:05.930
vectors-- let me write it here--
the set of all the

00:12:05.930 --> 00:12:12.130
vectors, x1, x2, that are member
of R2, clearly, such

00:12:12.130 --> 00:12:19.670
that x1, x2 is going to be
equal to-- well, our free

00:12:19.670 --> 00:12:26.800
variable is x2-- so it's
x2 times the vector.

00:12:26.800 --> 00:12:28.860
So x1 has to be 2 times x2.

00:12:28.860 --> 00:12:34.140
And obviously x2-- that's a 2--
is going to be 1 times x2.

00:12:34.140 --> 00:12:35.710
So what is this going to be?

00:12:35.710 --> 00:12:38.100
Well this is all of the linear
combinations of this vector

00:12:38.100 --> 00:12:40.080
right here.

00:12:40.080 --> 00:12:50.460
So we could say it's equal to
the span of our vector 2, 1.

00:12:50.460 --> 00:12:51.540
Now, that's the nullspace.

00:12:51.540 --> 00:12:54.200
Sorry, this was the nullspace
of A transpose.

00:12:54.200 --> 00:12:56.090
I have to be very
careful there.

00:12:56.090 --> 00:12:57.970
Now what is the columnspace?

00:12:57.970 --> 00:13:01.210
The columnspace of A tranpose?

00:13:01.210 --> 00:13:05.690
Well, the columnspace of A
transpose is the set of all

00:13:05.690 --> 00:13:07.795
vectors spanned by
the columns of A.

00:13:07.795 --> 00:13:10.590
So you could just say the span
of this column vector and this

00:13:10.590 --> 00:13:11.570
column vector.

00:13:11.570 --> 00:13:14.020
But we know, when we put it into
reduced row echelon form,

00:13:14.020 --> 00:13:17.620
only this column vector
was associated

00:13:17.620 --> 00:13:20.210
with a pivot column.

00:13:20.210 --> 00:13:22.750
So this by itself, this
guy is a linear

00:13:22.750 --> 00:13:23.640
combination of this guy.

00:13:23.640 --> 00:13:26.690
If you multiply him by
minus 2, you get

00:13:26.690 --> 00:13:27.523
that guy right there.

00:13:27.523 --> 00:13:29.960
So it's consistent with
everything we've learned.

00:13:29.960 --> 00:13:37.610
So it equals the span of just
this guy right here.

00:13:37.610 --> 00:13:47.380
Of just the vector 2, minus
1, and minus 3.

00:13:47.380 --> 00:13:50.620
That's just a nice, neat
exercise that we did.

00:13:50.620 --> 00:13:54.260
Notice that your span here,
it's in R3, but it's just

00:13:54.260 --> 00:13:57.190
going to be a line in R3.

00:13:57.190 --> 00:14:00.490
Maybe in the next video I'll
do a more graphical

00:14:00.490 --> 00:14:02.130
representation of it.

00:14:02.130 --> 00:14:06.700
But I did this whole exercise to
introduce you to the ideas

00:14:06.700 --> 00:14:09.760
of the nullspace of your
transpose and the columnspace

00:14:09.760 --> 00:14:10.900
of your transpose.

00:14:10.900 --> 00:14:12.140
Think about what the
columnspace of

00:14:12.140 --> 00:14:13.580
your transpose is.

00:14:13.580 --> 00:14:19.390
It's the subspace spanned by
that vector-- sorry-- spanned

00:14:19.390 --> 00:14:21.810
by this vector and
that vector.

00:14:21.810 --> 00:14:24.880
And it turns out that this guy
is a multiple of that guy.

00:14:24.880 --> 00:14:26.890
So we could say just
by that guy.

00:14:26.890 --> 00:14:31.370
But these were the rows of
our original matrix, A.

00:14:31.370 --> 00:14:40.080
So we could also view this as
the span of the row vectors of

00:14:40.080 --> 00:14:41.420
our original guy.

00:14:41.420 --> 00:14:46.190
This is that column that is the
basis for the column span

00:14:46.190 --> 00:14:48.410
of the R transpose matrix.

00:14:48.410 --> 00:14:51.250
And of course this guy was a
linear combination of that.

00:14:51.250 --> 00:14:54.600
So we could also view
the column span of

00:14:54.600 --> 00:14:56.750
our transpose matrix.

00:14:56.750 --> 00:14:58.570
It's equivalent to the subspace

00:14:58.570 --> 00:15:01.010
spanned by these rows.

00:15:01.010 --> 00:15:04.320
Or we could call that
the row space of A.

00:15:04.320 --> 00:15:06.750
Let me write that down.

00:15:06.750 --> 00:15:09.110
So the columnspace of
A transpose-- and

00:15:09.110 --> 00:15:10.000
this is just general.

00:15:10.000 --> 00:15:10.840
Let me write this generally.

00:15:10.840 --> 00:15:13.870
It doesn't just apply
to this example.

00:15:13.870 --> 00:15:18.310
So the columnspace of the
transpose of any matrix, this

00:15:18.310 --> 00:15:24.030
is called the rowspace of A.

00:15:24.030 --> 00:15:26.370
And it's a very natural name.

00:15:26.370 --> 00:15:29.850
Because if A's got a bunch of
rows, we could call them the

00:15:29.850 --> 00:15:31.360
transpose of some vectors.

00:15:31.360 --> 00:15:33.150
So that's first row.

00:15:33.150 --> 00:15:34.390
You got the second row.

00:15:34.390 --> 00:15:38.430
All the way to, maybe,
the nth row.

00:15:38.430 --> 00:15:39.290
Just like that.

00:15:39.290 --> 00:15:40.530
These are vector transposes.

00:15:40.530 --> 00:15:42.890
They're really just rows.

00:15:42.890 --> 00:15:45.680
If you imagine the space
that's spanned by these

00:15:45.680 --> 00:15:48.830
vectors, by the different rows,
that's essentially the

00:15:48.830 --> 00:15:50.320
columnspace of the transpose.

00:15:50.320 --> 00:15:51.660
Because when you transpose
it, each of

00:15:51.660 --> 00:15:53.550
these guys become columns.

00:15:53.550 --> 00:15:56.210
So that's what the
rowspace is.

00:15:56.210 --> 00:16:01.100
Now, the nullspace of our
transpose-- let's write it

00:16:01.100 --> 00:16:04.430
like this-- it was all
of the vectors x that

00:16:04.430 --> 00:16:06.770
satisfied this equation.

00:16:06.770 --> 00:16:11.870
Equals the 0 vector
right there.

00:16:11.870 --> 00:16:18.460
Now, what happens if we take the
transpose of both sides of

00:16:18.460 --> 00:16:19.710
this equation?

00:16:24.360 --> 00:16:26.900
Well, we've learned from our
transpose properties, this is

00:16:26.900 --> 00:16:30.375
equal to the reverse product of
each of those transposes.

00:16:30.375 --> 00:16:33.950
So this is going to be equal
to, this is a vector, the

00:16:33.950 --> 00:16:38.890
vector x transpose.

00:16:38.890 --> 00:16:41.260
If this is a column vector
before, now it's going to

00:16:41.260 --> 00:16:42.830
become a row vector.

00:16:42.830 --> 00:16:47.610
And then, times A transpose
transpose.

00:16:47.610 --> 00:16:49.210
And that's going to
be equal to the

00:16:49.210 --> 00:16:52.300
transpose of the 0 vector.

00:16:52.300 --> 00:16:56.130
Or, we could just write
this like this.

00:16:56.130 --> 00:16:59.910
We could write this as some
matrix-- well let me just

00:16:59.910 --> 00:17:01.070
write it like this.

00:17:01.070 --> 00:17:06.130
Some column vector x-- what's
the transpose of A transpose?

00:17:06.130 --> 00:17:09.290
Well that's just equal to A.

00:17:09.290 --> 00:17:11.940
So you take the transpose
of this column vector.

00:17:11.940 --> 00:17:13.000
You now get a row vector.

00:17:13.000 --> 00:17:16.079
You could view it as a
matrix if you want.

00:17:16.079 --> 00:17:21.790
If this was a member of Rn, this
is now going to be an 1

00:17:21.790 --> 00:17:23.349
by n matrix.

00:17:23.349 --> 00:17:26.170
If this was a member of Rn.

00:17:31.550 --> 00:17:32.930
We kind of switched
the orders.

00:17:32.930 --> 00:17:35.990
And we multiply it times the
transpose of the transpose.

00:17:35.990 --> 00:17:37.580
We just get the matrix, A.

00:17:37.580 --> 00:17:41.230
And we set that equal to the
transpose of the 0 vector.

00:17:41.230 --> 00:17:44.080
Now this is interesting.

00:17:44.080 --> 00:17:47.290
We now have it in terms of
our original matrix, A.

00:17:47.290 --> 00:17:49.540
Now what did the nullspace of
our matrix, A look like?

00:17:49.540 --> 00:17:52.140
The nullspace where all of the
vectors x that satisfied this

00:17:52.140 --> 00:17:54.180
equation is equal to 0.

00:17:54.180 --> 00:17:56.170
So the x was on the right.

00:17:56.170 --> 00:17:59.230
So the nullspace is all the
x's that satisfy this.

00:17:59.230 --> 00:18:03.780
The nullspace of our transpose
is all of the x's that satisfy

00:18:03.780 --> 00:18:05.030
this equation.

00:18:07.610 --> 00:18:14.260
So let me say the set of all
of the x's such that A

00:18:14.260 --> 00:18:18.560
transpose times x
is equal to 0.

00:18:18.560 --> 00:18:20.730
That is the nullspace
of A transpose.

00:18:24.380 --> 00:18:28.700
Or we could also write this as
the set of all of the x's such

00:18:28.700 --> 00:18:33.620
that the transpose of our x
times A is equal to the

00:18:33.620 --> 00:18:35.970
transpose of the 0 vector.

00:18:35.970 --> 00:18:37.880
And we have another
name for this.

00:18:37.880 --> 00:18:48.390
This is called the left
nullspace of A.

00:18:48.390 --> 00:18:50.490
Why is it called the
left nullspace?

00:18:50.490 --> 00:18:52.270
Because now we have
x on our left.

00:18:52.270 --> 00:18:54.920
In just a regular nullspace
you have x on the right.

00:18:54.920 --> 00:18:59.660
But now, if you take the
nullspace of the transpose,

00:18:59.660 --> 00:19:02.690
using just our transpose
properties, that's equivalent

00:19:02.690 --> 00:19:04.890
to this transpose vector
right here.

00:19:04.890 --> 00:19:05.800
Actually let me write this.

00:19:05.800 --> 00:19:07.380
The transpose right there.

00:19:07.380 --> 00:19:10.140
This transpose vector
multiplying A from the

00:19:10.140 --> 00:19:11.080
left-hand side.

00:19:11.080 --> 00:19:14.360
So all of the x's that satisfy
this is the left nullspace.

00:19:14.360 --> 00:19:17.730
And it's going to be different
than your nullspace.

00:19:17.730 --> 00:19:21.400
Notice, your nullspace of A
transpose was the span of this

00:19:21.400 --> 00:19:22.750
right here.

00:19:22.750 --> 00:19:31.040
This is also the left
nullspace of A.

00:19:31.040 --> 00:19:33.690
Now what was just the regular
nullspace of A?

00:19:33.690 --> 00:19:38.500
The regular nullspace of A was
essentially a plane in R3.

00:19:38.500 --> 00:19:41.150
That's the nullspace of A.

00:19:41.150 --> 00:19:48.070
The left nullspace of A
is just a line in R2.

00:19:48.070 --> 00:19:51.320
Very different things.

00:19:51.320 --> 00:19:57.330
And if you go to the rowspace,
what is the rowspace of A?

00:19:57.330 --> 00:20:01.570
The rowspace of A
is a line in R3.

00:20:01.570 --> 00:20:03.980
The rowspace of A
is a line in R3.

00:20:03.980 --> 00:20:06.590
Well what is the columnspace
of A?

00:20:06.590 --> 00:20:12.700
The columnspace of A, right
here, where did I have it?

00:20:12.700 --> 00:20:16.100
Well, this is the only linearly
independent vector.

00:20:16.100 --> 00:20:18.600
It was essentially
a line in R2.

00:20:18.600 --> 00:20:20.290
So they're all very
different things.

00:20:20.290 --> 00:20:23.450
And we'll study a little bit
more how they're all related.

00:20:23.450 --> 00:20:26.330
Now there's one thing I
want to relate to you.

00:20:26.330 --> 00:20:29.980
We figured out that the
rank of this vector

00:20:29.980 --> 00:20:32.290
right here is 1.

00:20:32.290 --> 00:20:36.210
Because when you put it in
reduced row echelon form there

00:20:36.210 --> 00:20:40.130
was one pivot column.

00:20:40.130 --> 00:20:43.780
And the basis vectors are those
associated with that

00:20:43.780 --> 00:20:44.610
pivot column.

00:20:44.610 --> 00:20:47.400
And if you count your basis
vectors, that's your dimension

00:20:47.400 --> 00:20:48.180
of your space.

00:20:48.180 --> 00:20:50.870
So the dimension of your
columnspace is 1.

00:20:50.870 --> 00:20:52.760
And that's the same thing
as your rank.

00:20:52.760 --> 00:20:55.620
Now what is the rank
of A transpose?

00:20:55.620 --> 00:20:58.460
The rank of A transpose in the
example, when you put it in

00:20:58.460 --> 00:21:02.260
reduced row echelon form, you
got one linearly independent

00:21:02.260 --> 00:21:03.050
column vector.

00:21:03.050 --> 00:21:05.770
So the basis for our
columnspace was

00:21:05.770 --> 00:21:07.500
also equal to 1.

00:21:07.500 --> 00:21:09.840
And in general, that's always
going to be the case.

00:21:12.860 --> 00:21:17.340
That the rank of A, which
is the dimension of its

00:21:17.340 --> 00:21:22.590
columnspace, is equal to the
rank of A transpose.

00:21:22.590 --> 00:21:25.360
And if you think about it,
it makes a lot of sense.

00:21:25.360 --> 00:21:28.140
To figure out the rank of A, you
essentially figure out how

00:21:28.140 --> 00:21:34.200
many pivot columns they have.
Or another way to say it is

00:21:34.200 --> 00:21:45.030
how many pivot entries they
have. When you want to find

00:21:45.030 --> 00:21:51.760
the rank of your transpose
vector, you're essentially

00:21:51.760 --> 00:21:53.810
just saying-- and I know this is
maybe getting a little bit

00:21:53.810 --> 00:21:56.150
confusing-- but when you want
the rank of your transpose

00:21:56.150 --> 00:21:59.090
vector, you're saying, how
many of these columns are

00:21:59.090 --> 00:22:00.080
linearly independent?

00:22:00.080 --> 00:22:02.880
Or which of these are linearly
independent?

00:22:02.880 --> 00:22:05.730
And that's the same question
as saying, how many of your

00:22:05.730 --> 00:22:08.250
rows up here are linearly
independent?

00:22:08.250 --> 00:22:10.410
If you want to know how many
columns in your transpose are

00:22:10.410 --> 00:22:13.320
linearly independent, that's
equivalent to asking how many

00:22:13.320 --> 00:22:16.300
rows in your original matrix
are linearly independent.

00:22:16.300 --> 00:22:19.770
And when you put this matrix in
reduced row echelon form,

00:22:19.770 --> 00:22:22.180
everything in reduced row
echelon form are just row

00:22:22.180 --> 00:22:22.810
operations.

00:22:22.810 --> 00:22:24.240
So they are just linear
combinations of

00:22:24.240 --> 00:22:25.560
these things up here.

00:22:25.560 --> 00:22:27.130
Or you could go vice versa.

00:22:27.130 --> 00:22:29.680
Everything up here is just
linear combinations of your

00:22:29.680 --> 00:22:31.830
matrix in reduced row
echelon form.

00:22:31.830 --> 00:22:36.940
So if you only have one pivot
entry, then this guy right

00:22:36.940 --> 00:22:41.560
here, by himself, or one pivot
row, that guy by himself can

00:22:41.560 --> 00:22:46.780
represent a basis for
your rowspace.

00:22:46.780 --> 00:22:49.480
Or, all of your rows can be
represented by a linear

00:22:49.480 --> 00:22:51.570
combination of your
pivot rows.

00:22:51.570 --> 00:22:53.570
And because of that, you
just count that.

00:22:53.570 --> 00:22:55.530
You say, OK there's
one in this case.

00:22:55.530 --> 00:22:59.190
So the dimension of
my rowspace is 1.

00:22:59.190 --> 00:23:05.980
And that's the same thing
as the dimension of my

00:23:05.980 --> 00:23:07.430
transpose's columnspace.

00:23:07.430 --> 00:23:08.890
I know it's getting all
confusing and it's late in the

00:23:08.890 --> 00:23:10.270
day for me as well.

00:23:10.270 --> 00:23:13.820
So that, hopefully, will
convince you that the rank of

00:23:13.820 --> 00:23:16.280
our transpose is the
same as the rank of

00:23:16.280 --> 00:23:17.950
our original matrix.

