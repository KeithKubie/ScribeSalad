WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:07.980
[MUSIC PLAYING]

00:01:30.019 --> 00:01:33.250
[MUSIC - DRAKE, "ICE MELTS"]

00:02:04.503 --> 00:02:07.497
[CLOCK TICKING]

00:02:51.908 --> 00:02:54.902
[FEET PATTERING]

00:02:59.393 --> 00:03:01.888
[WHISTLE]

00:03:01.888 --> 00:03:04.614
[NON-ENGLISH WHISPERING]

00:03:07.810 --> 00:03:10.780
[NON-ENGLISH SPEECH]

00:03:19.195 --> 00:03:22.165
[CLATTERING]

00:03:31.570 --> 00:03:35.030
[CARTOON CHARACTERS WHOOPING]

00:03:35.530 --> 00:03:38.500
[MUSIC PLAYING]

00:03:38.500 --> 00:03:41.470
[CROWD CHEERING]

00:03:45.867 --> 00:03:46.950
JASON TITUS: Hi, everyone.

00:03:46.950 --> 00:03:49.560
I'm Jason, and I run our
developer product group

00:03:49.560 --> 00:03:52.350
here at Google, and it is so
great to be back at Shoreline

00:03:52.350 --> 00:03:54.360
again this year.

00:03:54.360 --> 00:03:57.810
And for those of you joining
via our 400 I/O Extended

00:03:57.810 --> 00:04:00.900
sessions across 85
countries, as well as

00:04:00.900 --> 00:04:05.970
you joining over the live
stream, thank you and welcome.

00:04:05.970 --> 00:04:10.970
Earlier, Sundar talked about our
various billion-user platforms,

00:04:10.970 --> 00:04:14.880
and whether it's Android
or the web through Chrome,

00:04:14.880 --> 00:04:19.890
our success here would not
be possible without you.

00:04:19.890 --> 00:04:22.920
So we're going to spend the
next half an hour diving

00:04:22.920 --> 00:04:27.570
deep into exactly what
we're doing for all of you,

00:04:27.570 --> 00:04:30.820
the developers who build
on our platforms every day.

00:04:30.820 --> 00:04:33.600
[CHEERS]

00:04:33.600 --> 00:04:37.040
And no matter what platform
you're building on,

00:04:37.040 --> 00:04:40.130
our goal is to make
your job easier,

00:04:40.130 --> 00:04:42.410
to allow you to focus
on the problems you're

00:04:42.410 --> 00:04:45.320
trying to solve, by
minimizing the pain

00:04:45.320 --> 00:04:46.640
points of building a product.

00:04:49.990 --> 00:04:52.930
We want to simplify
repetitive tasks,

00:04:52.930 --> 00:04:54.760
whether that means
dealing with user log

00:04:54.760 --> 00:05:00.670
in or instrumenting analytics
or synchronizing real-time data.

00:05:00.670 --> 00:05:03.640
We want to give you the
tools to make it easy

00:05:03.640 --> 00:05:06.460
for you to solve everyday
problems in simple and powerful

00:05:06.460 --> 00:05:12.220
ways, as well as create entirely
new products using technologies

00:05:12.220 --> 00:05:18.560
like machine learning and VR
and voice-enabled interactions.

00:05:18.560 --> 00:05:22.490
It is important to us
that you are successful.

00:05:22.490 --> 00:05:25.150
So in addition to
building products that

00:05:25.150 --> 00:05:28.390
help you build your
apps, we are also

00:05:28.390 --> 00:05:32.500
on the ground in
over 130 countries

00:05:32.500 --> 00:05:34.810
with programs like
Women Techmakers,

00:05:34.810 --> 00:05:36.658
and the Google Developer Groups.

00:05:36.658 --> 00:05:39.526
[CHEERS]

00:05:42.400 --> 00:05:44.158
Many of whom are here today.

00:05:44.158 --> 00:05:47.146
[CROWD CHANTING EXCITEDLY]

00:05:52.126 --> 00:05:52.640
[LAUGHTER]

00:05:52.640 --> 00:05:58.210
So I believe we have GDGs
from 79 countries here today.

00:05:58.210 --> 00:05:59.776
So that's pretty exciting.

00:05:59.776 --> 00:06:03.200
[CHEERING]

00:06:03.200 --> 00:06:06.120
So we're also investing
in training programs,

00:06:06.120 --> 00:06:08.550
like Google developer
certifications and courses

00:06:08.550 --> 00:06:10.560
through Udacity
and other partners,

00:06:10.560 --> 00:06:14.640
to help you deepen your
technological capabilities.

00:06:14.640 --> 00:06:17.340
And from this work
around the world,

00:06:17.340 --> 00:06:20.610
we're seeing firsthand
that developers

00:06:20.610 --> 00:06:24.630
are at the forefront
of technological change

00:06:24.630 --> 00:06:27.010
and innovation.

00:06:27.010 --> 00:06:29.310
We see you solving
challenging problems in ways

00:06:29.310 --> 00:06:31.950
that could not be done before.

00:06:31.950 --> 00:06:34.830
For example, last year
on a trip to Indonesia,

00:06:34.830 --> 00:06:37.020
I met Gibran Huzaifah.

00:06:37.020 --> 00:06:38.700
Having watched
aquaculture become

00:06:38.700 --> 00:06:42.270
an increasingly important
part of his country's economy,

00:06:42.270 --> 00:06:45.690
he left a career in biology
to become one of the nation's

00:06:45.690 --> 00:06:49.530
3.5 billion fish farmers.

00:06:49.530 --> 00:06:52.590
What he found was a
400-year-old trade

00:06:52.590 --> 00:06:54.930
that was mired in
inefficiency, where

00:06:54.930 --> 00:07:00.270
farmers were frequently over
or under-feeding their fish.

00:07:00.270 --> 00:07:04.350
With his co-founder, Muhammad,
they decided they could help,

00:07:04.350 --> 00:07:06.590
and they started
eFishery which builds

00:07:06.590 --> 00:07:09.150
a smart, automated
fish-feeder that

00:07:09.150 --> 00:07:13.540
can sense when fish are
hungry and feed them.

00:07:13.540 --> 00:07:15.690
As a result, they
can save the farmers

00:07:15.690 --> 00:07:19.050
up to 20% of their
annual cost, as well

00:07:19.050 --> 00:07:22.530
as reducing harmful
environmental runoff.

00:07:22.530 --> 00:07:24.930
And this is just
one of many stories

00:07:24.930 --> 00:07:27.330
of how our global developer
community is making

00:07:27.330 --> 00:07:31.830
an impact in unexpected ways.

00:07:31.830 --> 00:07:34.440
Now, I'd like to bring up some
colleagues to give updates

00:07:34.440 --> 00:07:37.020
across our developer platforms.

00:07:37.020 --> 00:07:38.430
Let's get started
with what we're

00:07:38.430 --> 00:07:40.770
doing to make Android
development easier.

00:07:40.770 --> 00:07:42.403
Please welcome Steph.

00:07:42.403 --> 00:07:45.361
[MUSIC PLAYING]

00:07:51.334 --> 00:07:53.250
STEPHANIE SAAD CUTHBERTSON:
As Sundar and Dave

00:07:53.250 --> 00:07:57.750
said, with two billion
active devices on Android

00:07:57.750 --> 00:08:01.510
and 82 billion apps
installed from Play,

00:08:01.510 --> 00:08:05.100
Android's momentum is amazing.

00:08:05.100 --> 00:08:08.490
What I like even more is how
Android's momentum is making

00:08:08.490 --> 00:08:10.680
so many developers successful.

00:08:10.680 --> 00:08:15.360
The number of developers
with over a million installs

00:08:15.360 --> 00:08:19.140
grew 35% just in the past year.

00:08:19.140 --> 00:08:22.590
And we're making it easier
to grow revenue, too.

00:08:22.590 --> 00:08:25.500
In addition to credit cards,
gift cards, everything else,

00:08:25.500 --> 00:08:28.530
we've expanded direct
carrier billing

00:08:28.530 --> 00:08:34.380
to reach 900 million devices
with over 140 operators.

00:08:34.380 --> 00:08:37.500
Altogether, the number
of people buying on Play

00:08:37.500 --> 00:08:41.039
grew by almost 30%
in the past year.

00:08:41.039 --> 00:08:43.350
Now, to support
this vast ecosystem

00:08:43.350 --> 00:08:45.900
we're working hard to
help developers build

00:08:45.900 --> 00:08:48.300
great apps at every stage--

00:08:48.300 --> 00:08:52.020
writing your app, tuning,
and growing your business.

00:08:52.020 --> 00:08:55.720
Today, we'll walk
through four big themes.

00:08:55.720 --> 00:08:58.404
The first is languages.

00:08:58.404 --> 00:09:01.368
[CHEERING AND APPLAUSE]

00:09:03.840 --> 00:09:06.780
Next is making Android
development faster and easier

00:09:06.780 --> 00:09:09.300
with the IDE and Libraries.

00:09:09.300 --> 00:09:12.600
Third, we'll show you even
more tools for building

00:09:12.600 --> 00:09:15.150
high-quality experiences.

00:09:15.150 --> 00:09:18.120
Finally, we want to help you
grow and reach new users,

00:09:18.120 --> 00:09:19.950
leveraging Android Instant Apps.

00:09:19.950 --> 00:09:22.230
So let's go straight in.

00:09:22.230 --> 00:09:27.090
We have been so excited to
announce first-class support

00:09:27.090 --> 00:09:28.656
for Kotlin.

00:09:28.656 --> 00:09:32.037
[APPLAUSE]

00:09:34.460 --> 00:09:35.240
This starts now.

00:09:35.240 --> 00:09:37.730
In Android Studio, Kotlin
support is now built-in.

00:09:37.730 --> 00:09:40.310
We'll support building
apps with as much Kotlin

00:09:40.310 --> 00:09:43.176
as you want, from
zero to 100 percent.

00:09:43.176 --> 00:09:45.050
Now, all of you who've
written code in Kotlin

00:09:45.050 --> 00:09:47.030
know why we did this already.

00:09:47.030 --> 00:09:50.210
But for everyone, we
did it because Kotlin

00:09:50.210 --> 00:09:52.520
is a beautiful
programming language.

00:09:52.520 --> 00:09:54.980
We asked one Googler how
he felt after writing

00:09:54.980 --> 00:09:56.630
Kotlin for a couple of weeks.

00:09:56.630 --> 00:09:59.420
While I would never
embarrass Adam Powell

00:09:59.420 --> 00:10:04.994
by using his name on stage, he
said, "I think I am in love."

00:10:04.994 --> 00:10:06.290
[LAUGHTER]

00:10:06.290 --> 00:10:08.960
So, many of you told me Kotlin
makes programming fun again,

00:10:08.960 --> 00:10:12.020
with so many wonderful features
like you're going to see here.

00:10:12.020 --> 00:10:14.780
And Tor will show you
more in just a moment.

00:10:14.780 --> 00:10:17.300
As developers,
languages are the tools

00:10:17.300 --> 00:10:19.730
we use to express our thoughts.

00:10:19.730 --> 00:10:23.030
With Kotlin, there's just
so much less syntactic noise

00:10:23.030 --> 00:10:28.100
that stands between what I
want to say and how I say it.

00:10:28.100 --> 00:10:30.650
Now, for those of you who are
wondering what this may mean

00:10:30.650 --> 00:10:33.800
for the Java programming
language and C++,

00:10:33.800 --> 00:10:36.530
our commitment
there is unchanged.

00:10:36.530 --> 00:10:39.560
We're adding Kotlin and
enhancing our existing

00:10:39.560 --> 00:10:40.550
languages.

00:10:40.550 --> 00:10:43.340
For instance, in Android
Studio, Java 8 features

00:10:43.340 --> 00:10:46.780
are now directly supported
with the Java C compiler

00:10:46.780 --> 00:10:51.320
and we've added more Java
8 Language APIs in O.

00:10:51.320 --> 00:10:54.530
So if you wish, you can
ignore Kotlin completely

00:10:54.530 --> 00:10:56.750
and your existing
language support

00:10:56.750 --> 00:11:00.985
will keep getting better.

00:11:00.985 --> 00:11:05.150
But if you can't wait to
get started with Kotlin,

00:11:05.150 --> 00:11:06.660
it is incredibly easy.

00:11:06.660 --> 00:11:09.480
Kotlin works 100% with the
Java programming language,

00:11:09.480 --> 00:11:11.600
which means it is
completely interoperable.

00:11:11.600 --> 00:11:14.360
That means you can
keep every line of code

00:11:14.360 --> 00:11:16.640
in your existing project.

00:11:16.640 --> 00:11:18.890
You can seamlessly
call from Kotlin

00:11:18.890 --> 00:11:21.710
into the Java programming
language and back, which means

00:11:21.710 --> 00:11:23.400
it is very easy to get started.

00:11:23.400 --> 00:11:26.780
You can add as little as
a single Kotlin class.

00:11:26.780 --> 00:11:30.200
Another reason why Kotlin is
such an amazing fit for Android

00:11:30.200 --> 00:11:33.140
is it's mature and
production-ready.

00:11:33.140 --> 00:11:35.240
Kotlin has been
around for five years

00:11:35.240 --> 00:11:39.080
and major apps like Flipboard,
Pinterest, Square Cash,

00:11:39.080 --> 00:11:44.330
Expedia, and more are all
using Kotlin in production.

00:11:44.330 --> 00:11:46.440
Now, Kotlin's not
just a great language.

00:11:46.440 --> 00:11:49.130
It has outstanding IDE support.

00:11:49.130 --> 00:11:52.040
The team that brought you
Kotlin is the same team

00:11:52.040 --> 00:11:54.080
behind IntelliJ
which, as you know,

00:11:54.080 --> 00:11:57.500
is what powers Android
Studio, our IDE.

00:11:57.500 --> 00:11:59.870
Finally, Android has
committed to Kotlin

00:11:59.870 --> 00:12:02.930
as a first-class language,
and, as you heard,

00:12:02.930 --> 00:12:05.480
we're announcing our plans
to partner with JetBrains

00:12:05.480 --> 00:12:08.480
to move Kotlin into a
nonprofit foundation.

00:12:08.480 --> 00:12:12.080
Kotlin is already open-source
under Apache 2, which means it

00:12:12.080 --> 00:12:15.050
is open and will remain open.

00:12:15.050 --> 00:12:18.440
We love how Kotlin fits with
our ethos around community.

00:12:18.440 --> 00:12:22.130
And now, Tor would love to
show you Kotlin in action.

00:12:22.130 --> 00:12:23.315
So, Tor.

00:12:23.315 --> 00:12:26.165
[CHEERING AND APPLAUSE]

00:12:27.590 --> 00:12:28.890
TOR NORBYE: Thanks, Steph.

00:12:28.890 --> 00:12:32.190
So here's a pretty typical data
class with three properties

00:12:32.190 --> 00:12:33.450
implemented in Java.

00:12:33.450 --> 00:12:35.790
As you can see, there is
a lot of boilerplate code

00:12:35.790 --> 00:12:37.650
here with fields,
scatters, setters, equals,

00:12:37.650 --> 00:12:39.610
hashCode, and so on.

00:12:39.610 --> 00:12:42.090
Let's take a look at how we
would implement this in Kotlin.

00:12:42.090 --> 00:12:45.000
So I'm going to go ahead
and delete this class,

00:12:45.000 --> 00:12:47.860
and now I'm going to write
the equivalent Kotlin code.

00:12:47.860 --> 00:12:50.880
So here's the first line, and
that is also the last line.

00:12:50.880 --> 00:12:52.470
That is all you have to write.

00:12:52.470 --> 00:12:53.518
This code--

00:12:53.518 --> 00:12:54.474
[LAUGHTER]

00:12:54.474 --> 00:12:57.342
[CHEERING AND APPLAUSE]

00:12:59.740 --> 00:13:02.490
This code is completely
equivalent to the 87 lines

00:13:02.490 --> 00:13:03.450
I just deleted.

00:13:03.450 --> 00:13:05.160
The compiler does all the work.

00:13:05.160 --> 00:13:06.990
It generates the
same code as before,

00:13:06.990 --> 00:13:08.520
plus some extra goodies.

00:13:08.520 --> 00:13:13.110
So from Java, I can call
into my new Kotlin class

00:13:13.110 --> 00:13:15.870
and access the same
getters as before.

00:13:15.870 --> 00:13:18.300
But look what happens in Kotlin.

00:13:18.300 --> 00:13:21.190
Here we have a really
nice property syntax.

00:13:21.190 --> 00:13:23.550
So I can, for example,
use assignment

00:13:23.550 --> 00:13:26.834
to assign to this property
instead of calling a setter.

00:13:26.834 --> 00:13:28.500
Now, as you're starting
out with Kotlin,

00:13:28.500 --> 00:13:30.480
you might find yourself
stuck, realizing you

00:13:30.480 --> 00:13:31.771
don't know how to do something.

00:13:31.771 --> 00:13:34.620
So let's say that I'm about
to do some image processing

00:13:34.620 --> 00:13:36.700
and I realize that I
don't know how to declare

00:13:36.700 --> 00:13:38.600
a two-dimensional array.

00:13:38.600 --> 00:13:43.380
Well, what I can do is
open up a Java file,

00:13:43.380 --> 00:13:47.160
write the code in Java,
which I know how to do,

00:13:47.160 --> 00:13:53.069
go back to Kotlin, and look
what happens when I paste.

00:13:53.069 --> 00:13:53.610
That's right.

00:13:53.610 --> 00:13:55.960
The IDE converts it for me.

00:13:55.960 --> 00:13:58.930
[APPLAUSE]

00:14:00.920 --> 00:14:03.490
That is a huge help when
you're starting out.

00:14:03.490 --> 00:14:06.561
So as Steph can attest, I could
literally stand for three hours

00:14:06.561 --> 00:14:08.560
and tell you all the
things I love about Kotlin.

00:14:08.560 --> 00:14:09.610
And I think I have.

00:14:09.610 --> 00:14:10.390
STEPHANIE SAAD CUTHBERTSON: Yes.

00:14:10.390 --> 00:14:11.600
TOR NORBYE: But we don't
have time for that.

00:14:11.600 --> 00:14:13.180
So instead, I will
encourage you all

00:14:13.180 --> 00:14:15.414
to come to our excellent
talks on Friday, where

00:14:15.414 --> 00:14:17.080
you'll learn everything
you need to know

00:14:17.080 --> 00:14:18.204
to get started with Kotlin.

00:14:18.204 --> 00:14:21.140
And I hope you'll love coding
in Kotlin as much as I do.

00:14:21.140 --> 00:14:21.660
STEPHANIE SAAD
CUTHBERTSON: Thanks, Tor.

00:14:21.660 --> 00:14:22.830
TOR NORBYE: Thanks.

00:14:22.830 --> 00:14:25.770
[APPLAUSE]

00:14:26.074 --> 00:14:27.990
STEPHANIE SAAD CUTHBERTSON:
For us at Android,

00:14:27.990 --> 00:14:31.820
adding Kotlin feels like
a moment in history.

00:14:31.820 --> 00:14:33.457
We are excited today.

00:14:33.457 --> 00:14:34.790
It's just the beginning, though.

00:14:34.790 --> 00:14:37.340
We're even more excited
about the possibilities

00:14:37.340 --> 00:14:40.370
that Kotlin creates
for the future.

00:14:40.370 --> 00:14:42.440
But there's more.

00:14:42.440 --> 00:14:45.590
Our second theme is making
development faster and easier

00:14:45.590 --> 00:14:47.540
with our tools and libraries.

00:14:47.540 --> 00:14:49.610
Android studios
are official IDE.

00:14:49.610 --> 00:14:52.700
It is purpose-built
for Android, and we

00:14:52.700 --> 00:14:55.100
keep increasing investment.

00:14:55.100 --> 00:14:59.930
Today, we're releasing Android
Studio 3.0's first Canary,

00:14:59.930 --> 00:15:03.560
focusing on speed and smarts,
and Android platform support,

00:15:03.560 --> 00:15:07.560
plus new libraries
for app architecture.

00:15:07.560 --> 00:15:09.490
So let's go straight to a demo.

00:15:09.490 --> 00:15:12.431
It's more fun.

00:15:12.431 --> 00:15:12.930
All right.

00:15:12.930 --> 00:15:15.420
So here I have
Android Studio 3.0,

00:15:15.420 --> 00:15:18.420
and I've just built
and deployed my app.

00:15:18.420 --> 00:15:21.170
And what you'll see
are the new profilers--

00:15:21.170 --> 00:15:24.984
CPU, memory, and network.

00:15:24.984 --> 00:15:26.400
So I'm just going
to open the app.

00:15:29.389 --> 00:15:30.930
And let me do a
little bit of network

00:15:30.930 --> 00:15:34.080
here so you can see
it on the graph.

00:15:34.080 --> 00:15:36.900
What you can see is
the network profiler,

00:15:36.900 --> 00:15:39.960
and it's really cool that you
can see all of the requests,

00:15:39.960 --> 00:15:43.380
but particularly cool would
be if you could click and see

00:15:43.380 --> 00:15:45.660
the actual payload
of the request.

00:15:45.660 --> 00:15:49.020
Even better than that would
be if you could look and see

00:15:49.020 --> 00:15:51.360
the headers, but
I actually think

00:15:51.360 --> 00:15:54.150
it would be very cool if you
could click on the call stack

00:15:54.150 --> 00:15:57.325
and select and go
to the line of code.

00:15:57.325 --> 00:16:00.175
[APPLAUSE]

00:16:03.510 --> 00:16:05.870
So those are the
three new profilers.

00:16:05.870 --> 00:16:08.780
3.0 also includes
a preview feature

00:16:08.780 --> 00:16:13.670
for debugging any APK, so
you can build in any IDE

00:16:13.670 --> 00:16:16.370
and debug in Android
Studio, including using

00:16:16.370 --> 00:16:20.100
these profilers for Java code.

00:16:20.100 --> 00:16:21.740
So to say more on
speed and smarts,

00:16:21.740 --> 00:16:23.750
your feedback has
made driving down sync

00:16:23.750 --> 00:16:26.810
and build time our
number one priority.

00:16:26.810 --> 00:16:30.950
Benchmarking with a real life,
100 module project since 2.2,

00:16:30.950 --> 00:16:32.840
the build config
time has dropped

00:16:32.840 --> 00:16:34.520
from three seconds down--

00:16:34.520 --> 00:16:37.520
sorry-- from three minutes
down to two seconds.

00:16:37.520 --> 00:16:40.550
And we will keep
working on build speed.

00:16:40.550 --> 00:16:43.610
On the emulators, we've added
Play Store for Android testing.

00:16:43.610 --> 00:16:45.992
And there's so much more here.

00:16:45.992 --> 00:16:47.450
The next thing I
want to talk about

00:16:47.450 --> 00:16:49.160
is Android platform support.

00:16:49.160 --> 00:16:52.400
You will find awesome
features for Android and O,

00:16:52.400 --> 00:16:56.600
like end-to-end instant app
support, O system images,

00:16:56.600 --> 00:16:58.880
and tons of helper tools.

00:16:58.880 --> 00:17:01.400
For instance, Dave talked about
adaptive icons, which we all

00:17:01.400 --> 00:17:03.860
need to build now,
so our team has built

00:17:03.860 --> 00:17:06.329
tools that make that easy.

00:17:06.329 --> 00:17:08.180
And one of my personal
favorite features

00:17:08.180 --> 00:17:11.180
is, to download Android
dependencies for build,

00:17:11.180 --> 00:17:14.540
you don't have to go through
the Android SDK manager anymore.

00:17:14.540 --> 00:17:17.420
We're now distributing through
our own Maven repository.

00:17:17.420 --> 00:17:20.276
[CHEERING AND APPLAUSE]

00:17:25.040 --> 00:17:29.360
Finally, you have asked us to
make Android Frameworks easier,

00:17:29.360 --> 00:17:31.040
like providing an
opinionated guide

00:17:31.040 --> 00:17:35.660
to best practices or a better
way of dealing with lifecycles.

00:17:35.660 --> 00:17:39.170
We're launching a preview of
new Architecture Components,

00:17:39.170 --> 00:17:41.330
libraries for common tasks.

00:17:41.330 --> 00:17:44.690
This starts with libraries
for the ViewModel pattern,

00:17:44.690 --> 00:17:48.320
Data Storage, and managing
activity and fragment

00:17:48.320 --> 00:17:49.310
lifecycles.

00:17:49.310 --> 00:17:54.110
We would love if you'd download
and try all of this today.

00:17:54.110 --> 00:17:57.350
Now, as we move from coding over
into how to tune your quality

00:17:57.350 --> 00:18:00.410
and grow, I'd like you to
hear from Ellie Powers.

00:18:00.410 --> 00:18:01.471
Please welcome Ellie.

00:18:01.471 --> 00:18:01.970
Thank you.

00:18:01.970 --> 00:18:03.464
[MUSIC PLAYING]

00:18:03.464 --> 00:18:06.452
[APPLAUSE]

00:18:09.940 --> 00:18:11.320
ELLIE POWERS: Thank you, Steph.

00:18:11.320 --> 00:18:14.480
As all of you know, building
a successful business on Play

00:18:14.480 --> 00:18:16.780
starts with a high-quality app.

00:18:16.780 --> 00:18:18.730
And you've told us
that sometimes you

00:18:18.730 --> 00:18:22.480
need to target the right devices
in order to ensure the best

00:18:22.480 --> 00:18:24.020
user experience.

00:18:24.020 --> 00:18:28.270
So we're making it easier to
understand Android's devices

00:18:28.270 --> 00:18:30.730
and target them in
the Play console.

00:18:30.730 --> 00:18:34.210
Now, you can browse a
detailed device catalog.

00:18:34.210 --> 00:18:37.210
No more searching for
specs one device at a time.

00:18:37.210 --> 00:18:39.160
If you need a
certain amount of RAM

00:18:39.160 --> 00:18:42.250
or you have a problem with
a specific system on a chip,

00:18:42.250 --> 00:18:45.760
you can now set targeting
rules to address that.

00:18:45.760 --> 00:18:48.010
Before excluding
devices, you can even

00:18:48.010 --> 00:18:51.830
see your installs, rating,
and revenue per device.

00:18:51.830 --> 00:18:55.660
Now, ensuring quality
experiences really matters.

00:18:55.660 --> 00:18:57.790
The Play team took
a sample of apps

00:18:57.790 --> 00:19:00.850
and analyzed the correlation
between app quality

00:19:00.850 --> 00:19:02.440
and business success.

00:19:02.440 --> 00:19:05.170
When apps moved from
average to good quality,

00:19:05.170 --> 00:19:07.750
we saw an amazing
six-fold increase

00:19:07.750 --> 00:19:11.380
in spend and a seven-fold
increase in retention.

00:19:11.380 --> 00:19:13.430
That is phenomenal.

00:19:13.430 --> 00:19:14.980
We are always
looking for new ways

00:19:14.980 --> 00:19:17.920
to bring users to your
apps, and Instant Apps

00:19:17.920 --> 00:19:20.290
is our big bet in this area.

00:19:20.290 --> 00:19:23.720
Last year, we previewed
Android Instant Apps.

00:19:23.720 --> 00:19:26.050
Instant Apps allows you
to experience everything

00:19:26.050 --> 00:19:29.650
you love about apps, but without
the hurdle of installation.

00:19:29.650 --> 00:19:31.600
Since then, we've been
working with partners

00:19:31.600 --> 00:19:33.280
to refine the product.

00:19:33.280 --> 00:19:36.040
They have launched
50 Instant Apps,

00:19:36.040 --> 00:19:39.610
from immersive video with Vimeo
to mobile commerce with Jet

00:19:39.610 --> 00:19:42.250
to apartment hunting
with HotPads.

00:19:42.250 --> 00:19:44.295
And while it's still
early days, developers

00:19:44.295 --> 00:19:46.790
are reporting positive results.

00:19:46.790 --> 00:19:49.630
For example, Jet,
HotPads, and Vimeo

00:19:49.630 --> 00:19:53.530
are seeing double-digit
increases in purchases,

00:19:53.530 --> 00:19:56.680
leads generated,
and videos watched.

00:19:56.680 --> 00:20:01.090
So today, we are opening
up Android Instant Apps

00:20:01.090 --> 00:20:03.760
to all Android developers.

00:20:03.760 --> 00:20:04.910
This means anyone--

00:20:04.910 --> 00:20:05.410
[APPLAUSE]

00:20:05.410 --> 00:20:06.282
Thank you.

00:20:10.140 --> 00:20:14.250
This means anyone can now build
and publish an instant app.

00:20:14.250 --> 00:20:16.800
Feedback from our partners has
shaped the development tools

00:20:16.800 --> 00:20:20.500
that we're making available to
all Android developers today.

00:20:20.500 --> 00:20:21.930
Let's take a look.

00:20:21.930 --> 00:20:25.560
You build Instant Apps
in Android Studio 3.0.

00:20:25.560 --> 00:20:27.720
Many of you wondered if
building an instant app

00:20:27.720 --> 00:20:30.540
means maintaining two
forks of your code, right?

00:20:30.540 --> 00:20:32.490
The answer is no.

00:20:32.490 --> 00:20:34.290
You can use exactly
the same code

00:20:34.290 --> 00:20:38.250
for your instant app and
your installable app.

00:20:38.250 --> 00:20:41.520
Your instant app is downloaded
as needed, feature by feature.

00:20:41.520 --> 00:20:44.730
So you'll organize your
project into feature modules

00:20:44.730 --> 00:20:48.060
and then use that code
in both your instant app

00:20:48.060 --> 00:20:50.130
and your installable app.

00:20:50.130 --> 00:20:52.950
Now we know refactoring
your app into features

00:20:52.950 --> 00:20:54.610
can sometimes be
a bit of a pain,

00:20:54.610 --> 00:20:57.340
so we're providing tools
to ease the process.

00:20:57.340 --> 00:21:00.900
For example, the new
modularized refactoring action

00:21:00.900 --> 00:21:04.290
helps you move code and
resources between modules.

00:21:04.290 --> 00:21:06.090
Every app is
different, but we've

00:21:06.090 --> 00:21:08.790
seen, with our early partners,
that instant app development

00:21:08.790 --> 00:21:12.030
typically takes about four
to six weeks with the latest

00:21:12.030 --> 00:21:13.500
tools.

00:21:13.500 --> 00:21:15.570
As you all know, the
faster your product

00:21:15.570 --> 00:21:18.840
is, the more usage you'll get,
so you'll want each module

00:21:18.840 --> 00:21:21.070
to load as quickly as possible.

00:21:21.070 --> 00:21:23.280
We're providing
optimization tools,

00:21:23.280 --> 00:21:25.400
from space-saving
shared libraries,

00:21:25.400 --> 00:21:27.400
to more efficient
asset delivery,

00:21:27.400 --> 00:21:29.550
to on-the-wire compression.

00:21:29.550 --> 00:21:32.180
And when you're ready, you'll
just upload your instant app

00:21:32.180 --> 00:21:35.910
APKs, together with your
installable APK in the Play

00:21:35.910 --> 00:21:37.350
console.

00:21:37.350 --> 00:21:39.660
If you're getting ready
to build for Android O,

00:21:39.660 --> 00:21:44.100
we're introducing new APIs and
behaviors for Instant Apps.

00:21:44.100 --> 00:21:46.890
There's a new, more-efficient
runtime sandbox

00:21:46.890 --> 00:21:49.620
and users will be able to
find Instant Apps directly

00:21:49.620 --> 00:21:52.890
in the launcher and then add
them to their home screens.

00:21:52.890 --> 00:21:54.900
Let's look at an example.

00:21:54.900 --> 00:21:57.890
I heard about "The New York
Times" crossword app recently.

00:21:57.890 --> 00:22:00.540
And I can search for
it in the launcher

00:22:00.540 --> 00:22:02.280
and then open it
with a single tap.

00:22:02.280 --> 00:22:04.530
I can even drag it
to the home screen

00:22:04.530 --> 00:22:06.570
so it's easy to come back later.

00:22:06.570 --> 00:22:08.850
By the way, in early
testing "The Times"

00:22:08.850 --> 00:22:11.340
is seeing significantly
more engagement from people

00:22:11.340 --> 00:22:13.800
playing and completing puzzles.

00:22:13.800 --> 00:22:16.560
To get started building
an instant app today,

00:22:16.560 --> 00:22:21.540
go to g.co/InstantApps and come
visit us at our I/O sessions

00:22:21.540 --> 00:22:24.210
or at the Android sandbox.

00:22:24.210 --> 00:22:26.100
With Android in so
many places it's

00:22:26.100 --> 00:22:28.980
enabled us to create new
types of experiences,

00:22:28.980 --> 00:22:31.740
like the Google Assistant,
bringing Google's intelligence

00:22:31.740 --> 00:22:33.540
to billions of people.

00:22:33.540 --> 00:22:36.930
It's been really cool to see the
Assistant really coming to life

00:22:36.930 --> 00:22:40.390
and rolling out on so
many devices this year.

00:22:40.390 --> 00:22:43.560
Next up, we'll learn what the
Google Assistant means to you,

00:22:43.560 --> 00:22:45.900
as a developer,
from Brad Abrams.

00:22:45.900 --> 00:22:46.810
Thank you.

00:22:46.810 --> 00:22:48.280
[MUSIC PLAYING]

00:22:48.280 --> 00:22:51.220
[APPLAUSE]

00:22:54.650 --> 00:22:56.220
BRAD ABRAMS: Thanks, Ellie.

00:22:56.220 --> 00:22:59.160
In December last year, we
launched an early version

00:22:59.160 --> 00:23:02.550
of the Actions on Google
developer platform.

00:23:02.550 --> 00:23:06.000
This version lets you
build apps for Google Home.

00:23:06.000 --> 00:23:07.950
But since then,
we've been focused

00:23:07.950 --> 00:23:11.490
on growing your audience,
expanding the platform feature

00:23:11.490 --> 00:23:15.180
set, and improving the
developer experience.

00:23:15.180 --> 00:23:17.430
As you heard in the
keynote this morning,

00:23:17.430 --> 00:23:20.610
your apps are now available
to Google Assistant users

00:23:20.610 --> 00:23:23.610
across Android and the iPhone.

00:23:23.610 --> 00:23:26.250
And as we continue to
expand the Assistant's reach

00:23:26.250 --> 00:23:31.290
to more surfaces, the
developer platform will follow.

00:23:31.290 --> 00:23:34.090
With apps for the Assistant
now available on the phone,

00:23:34.090 --> 00:23:37.230
you'll have the opportunity
to grow your user base.

00:23:37.230 --> 00:23:39.990
But more importantly,
you'll be able to build apps

00:23:39.990 --> 00:23:44.970
for entirely new assistive use
cases, things that previously

00:23:44.970 --> 00:23:48.480
weren't well-suited to
a voice-only interface,

00:23:48.480 --> 00:23:51.600
such as shopping for
clothes or ordering food

00:23:51.600 --> 00:23:53.760
from a lengthy menu.

00:23:53.760 --> 00:23:55.950
In addition, with
our new UI elements

00:23:55.950 --> 00:23:59.970
such as image carousels,
lists, and suggestion chips,

00:23:59.970 --> 00:24:03.390
users can easily get
things done with your app.

00:24:03.390 --> 00:24:06.570
They can seamlessly
transition between voice,

00:24:06.570 --> 00:24:11.160
typing, and taps, all in
the same conversation.

00:24:11.160 --> 00:24:14.670
You can build and deploy apps
for the Assistant on the phone

00:24:14.670 --> 00:24:17.190
starting today.

00:24:17.190 --> 00:24:18.000
[WHOOPING]

00:24:18.000 --> 00:24:19.120
Thank you.

00:24:19.120 --> 00:24:19.620
[APPLAUSE]

00:24:19.620 --> 00:24:22.950
We also want to make it
easy to complete purchases

00:24:22.950 --> 00:24:26.520
through the Assistant to
help you grow your business.

00:24:26.520 --> 00:24:29.970
We designed a transaction
experience on the Assistant

00:24:29.970 --> 00:24:35.280
to be easy and lightweight for
users and developers alike.

00:24:35.280 --> 00:24:38.280
You heard about Transactions
this morning from Valerie,

00:24:38.280 --> 00:24:43.470
but let me expand a little bit
from a developer point of view.

00:24:43.470 --> 00:24:46.050
For payments, you
can choose to use

00:24:46.050 --> 00:24:50.580
Google-facilitated payments,
which are easy to integrate,

00:24:50.580 --> 00:24:54.120
allow you to leverage
hundreds of millions of cards

00:24:54.120 --> 00:24:56.490
that users have already
stored with Google,

00:24:56.490 --> 00:25:01.020
and are available to
developers for free.

00:25:01.020 --> 00:25:04.110
Or you can choose to use a
payment method that users

00:25:04.110 --> 00:25:06.300
have already provided you.

00:25:06.300 --> 00:25:10.440
To do so, we recommend using
our new, seamless Account

00:25:10.440 --> 00:25:12.030
Linking support.

00:25:12.030 --> 00:25:16.410
That allows users to sign
in to an existing account

00:25:16.410 --> 00:25:21.730
or even create a new
account in just two tabs.

00:25:21.730 --> 00:25:25.440
However, the transaction
isn't over when a user pays.

00:25:25.440 --> 00:25:28.470
Users may want to check
on the status of an order,

00:25:28.470 --> 00:25:32.070
modify an order, or
even re-order an item.

00:25:32.070 --> 00:25:34.320
That's why the
assistant now allows

00:25:34.320 --> 00:25:37.140
users to see all
their transactions

00:25:37.140 --> 00:25:40.840
in a single history view.

00:25:40.840 --> 00:25:44.640
Finally, we built a new
orders update feature

00:25:44.640 --> 00:25:48.510
to make it easy for users
to reengage with your app.

00:25:48.510 --> 00:25:53.100
You're now able to send status
updates to users asynchronously

00:25:53.100 --> 00:25:55.980
like, for example, when a
car arrives to pick them up,

00:25:55.980 --> 00:26:00.610
when their food is delivered,
or when a prescription is ready.

00:26:00.610 --> 00:26:03.750
You can start building and
testing transactional apps

00:26:03.750 --> 00:26:06.870
today, and they'll be
available to Google Assistant

00:26:06.870 --> 00:26:10.650
users on the phone soon.

00:26:10.650 --> 00:26:12.930
But what good are these
transactional features

00:26:12.930 --> 00:26:16.480
if users can't
discover your app?

00:26:16.480 --> 00:26:20.610
Today, we're rolling
out a new app directory.

00:26:20.610 --> 00:26:23.850
Users can access it with a
single tap from the Google

00:26:23.850 --> 00:26:25.110
Assistant.

00:26:25.110 --> 00:26:28.050
It not only has categories
and user ratings,

00:26:28.050 --> 00:26:32.250
it also allows users to try your
app right from the directory

00:26:32.250 --> 00:26:33.420
page.

00:26:33.420 --> 00:26:37.290
Users can also create a shortcut
to your app for an easy way

00:26:37.290 --> 00:26:38.670
to invoke it.

00:26:38.670 --> 00:26:41.730
For example, instead
of saying, "OK, Google,

00:26:41.730 --> 00:26:44.490
ask forecaster Joe, what's
the surf report for the Outer

00:26:44.490 --> 00:26:47.340
Banks," you can just
say your shortcut.

00:26:47.340 --> 00:26:50.670
"OK, Google, is the surf up?"

00:26:50.670 --> 00:26:54.780
Each apps directory page is
also shareable on the web

00:26:54.780 --> 00:26:58.020
so that you can promote
your app to new users,

00:26:58.020 --> 00:27:03.090
and your existing users can
share it with their friends.

00:27:03.090 --> 00:27:05.400
And to make finding
your app easier,

00:27:05.400 --> 00:27:08.520
the Assistant is also
learning from the directory

00:27:08.520 --> 00:27:11.940
and other information
provided by the developer.

00:27:11.940 --> 00:27:13.980
Thanks to these
additional signals,

00:27:13.980 --> 00:27:15.960
the Assistant can
often present users

00:27:15.960 --> 00:27:20.460
with a few different options
for general requests like,

00:27:20.460 --> 00:27:22.980
play a game.

00:27:22.980 --> 00:27:24.810
While we are confident
these features will

00:27:24.810 --> 00:27:27.570
help improve discoverability
of your apps,

00:27:27.570 --> 00:27:29.550
our work is not done.

00:27:29.550 --> 00:27:34.030
Improving discoverability
is important to all of us,

00:27:34.030 --> 00:27:37.170
and you can expect ongoing
investments and improvements

00:27:37.170 --> 00:27:40.270
in this area.

00:27:40.270 --> 00:27:43.740
We're equally invested in
providing a great developer

00:27:43.740 --> 00:27:45.630
experience.

00:27:45.630 --> 00:27:49.680
Today, we're launching
a new developer console.

00:27:49.680 --> 00:27:53.790
The Actions Console helps
you work better as a team,

00:27:53.790 --> 00:27:55.830
collect data about
your app's usage,

00:27:55.830 --> 00:27:58.810
performance, and
discovery patterns.

00:27:58.810 --> 00:28:02.190
This new console is well
integrated with Firebase

00:28:02.190 --> 00:28:04.740
and the Google Cloud
console so you can easily

00:28:04.740 --> 00:28:07.470
share data with your apps.

00:28:07.470 --> 00:28:09.360
In addition to the
brand new console,

00:28:09.360 --> 00:28:12.630
we're also providing you
access to developer tools

00:28:12.630 --> 00:28:17.940
that let you quickly and easily
build apps for the Assistant.

00:28:17.940 --> 00:28:19.710
Since launching
our platform, we've

00:28:19.710 --> 00:28:23.460
worked with an expanding number
of developer tools companies

00:28:23.460 --> 00:28:26.040
to make their solutions
compatible with actions

00:28:26.040 --> 00:28:27.510
on Google.

00:28:27.510 --> 00:28:29.970
We're also expanding
the capabilities

00:28:29.970 --> 00:28:34.470
of api.ai, our own
conversation-building tool,

00:28:34.470 --> 00:28:36.540
launching new features
such as follow-up

00:28:36.540 --> 00:28:42.210
intents, pre-built agents,
and in-dialogue analytics.

00:28:42.210 --> 00:28:44.520
While we're still at the
early days of the Actions

00:28:44.520 --> 00:28:48.120
on Google Platform, we're
focused on making it robust

00:28:48.120 --> 00:28:51.360
and expanding its
reach and capabilities.

00:28:51.360 --> 00:28:54.420
We're soon launching the
platform in UK English,

00:28:54.420 --> 00:28:57.390
with French and German and
other languages following

00:28:57.390 --> 00:28:59.650
later this year.

00:28:59.650 --> 00:29:03.330
We also intend to bring the
platform to many new devices,

00:29:03.330 --> 00:29:08.700
including all those powered
by the Google Assistant SDK.

00:29:08.700 --> 00:29:12.060
We're excited about the road
ahead and we want more of you

00:29:12.060 --> 00:29:15.810
to join us by developing
for the platform.

00:29:15.810 --> 00:29:19.680
With an addressable audience
of 100 million devices,

00:29:19.680 --> 00:29:21.900
new capabilities
like transactions

00:29:21.900 --> 00:29:24.400
and improved
developer experience,

00:29:24.400 --> 00:29:29.240
we think this is an incredible
opportunity for all of us.

00:29:29.240 --> 00:29:31.950
You know, the magic
of the Assistant

00:29:31.950 --> 00:29:34.710
is enabled by Google's
deep investments

00:29:34.710 --> 00:29:36.810
in AI and the cloud.

00:29:36.810 --> 00:29:40.350
And to tell you more about
how you can use that directly,

00:29:40.350 --> 00:29:41.670
please welcome Fei Fei.

00:29:41.670 --> 00:29:42.479
Thank you.

00:29:42.479 --> 00:29:43.916
[MUSIC PLAYING]

00:29:43.916 --> 00:29:46.790
[APPLAUSE]

00:29:50.630 --> 00:29:51.485
FEI FEI LI: Hi.

00:29:51.485 --> 00:29:52.910
I'm Fei Fei Li.

00:29:52.910 --> 00:29:55.360
I'm chief scientist
of AI and machine

00:29:55.360 --> 00:29:57.280
learning at Google Cloud.

00:29:57.280 --> 00:29:59.380
What an exciting day.

00:29:59.380 --> 00:30:03.950
I've been doing AI research
for almost two decades,

00:30:03.950 --> 00:30:08.080
and I can honestly say
these last few years have

00:30:08.080 --> 00:30:12.520
been the most exciting
of my entire career.

00:30:12.520 --> 00:30:16.850
AI is transforming
everything Google does.

00:30:16.850 --> 00:30:22.360
And as we speak, industries
from finance to health care

00:30:22.360 --> 00:30:25.420
are augmenting
human capabilities

00:30:25.420 --> 00:30:28.770
with machine insights.

00:30:28.770 --> 00:30:34.420
But building AI expertise
is a significant investment,

00:30:34.420 --> 00:30:37.200
and we know that
many of you simply

00:30:37.200 --> 00:30:39.930
haven't had the opportunity.

00:30:39.930 --> 00:30:43.860
I joined Google precisely
for this reason,

00:30:43.860 --> 00:30:47.550
to ensure that
everyone can leverage

00:30:47.550 --> 00:30:53.310
AI to stay competitive and solve
the problems that matter most

00:30:53.310 --> 00:30:54.910
to them.

00:30:54.910 --> 00:30:59.280
In other words, we're
meeting you where you are.

00:30:59.280 --> 00:31:03.250
We call this democratizing AI.

00:31:03.250 --> 00:31:08.460
And I'd like to share a
few examples in action.

00:31:08.460 --> 00:31:13.710
First, we're democratizing
the algorithms

00:31:13.710 --> 00:31:17.730
that make AI so powerful
with a collection

00:31:17.730 --> 00:31:20.880
of high-level
machine learning APIs

00:31:20.880 --> 00:31:24.150
that can help your
applications understand

00:31:24.150 --> 00:31:30.150
the content of images, videos,
audios, and natural language

00:31:30.150 --> 00:31:32.760
with minimal efforts.

00:31:32.760 --> 00:31:35.250
Whatever your
level of expertise,

00:31:35.250 --> 00:31:39.420
these are tools you can put
to use immediately and see

00:31:39.420 --> 00:31:41.430
results.

00:31:41.430 --> 00:31:46.950
At the same time, we're
equally focused on developers

00:31:46.950 --> 00:31:50.010
ready to build their own models.

00:31:50.010 --> 00:31:56.170
In November 2015, Google
open-sourced TensorFlow,

00:31:56.170 --> 00:31:59.640
a software framework
for machine learning

00:31:59.640 --> 00:32:03.660
that is used extensively
throughout Google.

00:32:03.660 --> 00:32:07.200
Today, we're continuing
the evolution

00:32:07.200 --> 00:32:13.410
by bringing you high-level
APIs in TensorFlow 1.2.

00:32:13.410 --> 00:32:17.760
That makes it easier for you to
start training machine learning

00:32:17.760 --> 00:32:21.450
models on your data
right away using the best

00:32:21.450 --> 00:32:24.270
hardware you have available.

00:32:24.270 --> 00:32:27.510
I encourage you to check
out our TensorFlow sessions

00:32:27.510 --> 00:32:29.590
to learn more.

00:32:29.590 --> 00:32:33.330
Additionally, we also
launched the Cloud machine

00:32:33.330 --> 00:32:38.790
learning engine to help you
manage large-scale TensorFlow

00:32:38.790 --> 00:32:44.010
training and prediction
jobs in the Cloud.

00:32:44.010 --> 00:32:48.180
Of course, there's no
getting around the fact

00:32:48.180 --> 00:32:53.490
that AI requires enormous
computational resources.

00:32:53.490 --> 00:32:57.600
And this represents one
of the steepest barriers

00:32:57.600 --> 00:33:00.150
to entry for developers.

00:33:00.150 --> 00:33:04.050
To address this, Sundar
announced this morning

00:33:04.050 --> 00:33:08.880
that Google has developed
a second-generation TPU,

00:33:08.880 --> 00:33:13.470
or Tensor Processing Unit,
that can train machine learning

00:33:13.470 --> 00:33:17.520
models, as well as run them.

00:33:17.520 --> 00:33:24.030
Our TPUs deliver a
staggering 180 teraflops

00:33:24.030 --> 00:33:28.290
and are built for just the
kind of number-crunching that

00:33:28.290 --> 00:33:31.380
drives machine learning today.

00:33:31.380 --> 00:33:36.060
To put this in perspective,
our new large-scale translation

00:33:36.060 --> 00:33:42.060
model takes a full day to
train on 32 of the world's best

00:33:42.060 --> 00:33:45.210
commercially-available GPUs.

00:33:45.210 --> 00:33:48.870
While only one
eighth of a TPU pod

00:33:48.870 --> 00:33:53.010
can do this just
in an afternoon.

00:33:53.010 --> 00:33:57.980
But TPU specs are only
part of the story.

00:33:57.980 --> 00:34:00.640
The real breakthrough
lies in how

00:34:00.640 --> 00:34:05.620
we're working to democratize
computation as a whole.

00:34:05.620 --> 00:34:09.219
Google Cloud Platform
allows us to make

00:34:09.219 --> 00:34:14.230
this incredible new hardware
available to everyone.

00:34:14.230 --> 00:34:17.409
You'll soon be able
to rent Cloud TPUs

00:34:17.409 --> 00:34:22.300
without any up-front capital
expenses, the same way you can

00:34:22.300 --> 00:34:26.620
rent other infrastructures
on Google Compute Engine,

00:34:26.620 --> 00:34:29.710
paying only for what you need.

00:34:29.710 --> 00:34:34.960
We strive to ensure consistent
experiences and painless

00:34:34.960 --> 00:34:38.170
interoperability,
whether you're running

00:34:38.170 --> 00:34:46.150
your cloud on CPUs, GPUs,
TPUs, or whatever comes next.

00:34:46.150 --> 00:34:49.870
If you're interested in being
one of the first developers

00:34:49.870 --> 00:34:54.040
to train machine learning
models on Cloud TPUs,

00:34:54.040 --> 00:35:00.220
please sign up at this link to
learn more about our Cloud TPU

00:35:00.220 --> 00:35:01.360
alpha programs.

00:35:01.360 --> 00:35:03.178
I see all the cell phones.

00:35:03.178 --> 00:35:04.810
[LAUGHTER]

00:35:04.810 --> 00:35:09.040
As an AI researcher
myself, I can tell you

00:35:09.040 --> 00:35:12.970
that the research
implications of TPUs

00:35:12.970 --> 00:35:18.250
are significant, as well, which
is why I'm so excited also

00:35:18.250 --> 00:35:21.430
about the TensorFlow
Research Cloud,

00:35:21.430 --> 00:35:26.440
a cluster of 1,000
Cloud TPUs that we're

00:35:26.440 --> 00:35:32.920
making available to top machine
learning researchers for free.

00:35:32.920 --> 00:35:37.420
As an example, we shared the
news about our cloud TPUs

00:35:37.420 --> 00:35:39.790
with Harvard Medical
School and they're

00:35:39.790 --> 00:35:44.200
eager to use our TensorFlow
Research Cloud to do research

00:35:44.200 --> 00:35:46.330
at the national scale.

00:35:46.330 --> 00:35:49.810
That just hasn't been
possible until now.

00:35:49.810 --> 00:35:55.270
We're setting up a program to
accept applications for access

00:35:55.270 --> 00:35:58.060
to the TensorFlow
Research Cloud,

00:35:58.060 --> 00:36:01.420
and you can sign up to
learn more about this.

00:36:01.420 --> 00:36:08.500
I especially encourage students
and Kaggle users to apply.

00:36:08.500 --> 00:36:10.900
These are exciting times.

00:36:10.900 --> 00:36:14.140
Google has spent
years developing

00:36:14.140 --> 00:36:18.400
some of the most
advanced AI in the world.

00:36:18.400 --> 00:36:21.490
And the emergence
of the Cloud means

00:36:21.490 --> 00:36:28.480
you can share it with everyone,
from start-ups to enterprises,

00:36:28.480 --> 00:36:33.910
from health care to retail,
and everything in between.

00:36:33.910 --> 00:36:40.360
We created the Cloud AI
team to make AI democratic,

00:36:40.360 --> 00:36:45.410
to meet you where you are
with Google's most powerful AI

00:36:45.410 --> 00:36:51.910
tools, and to share the
journey as you put them to use.

00:36:51.910 --> 00:36:55.330
Whether you're building state of
the art machine learning models

00:36:55.330 --> 00:36:59.470
from scratch or just
want turnkey solutions

00:36:59.470 --> 00:37:02.290
for immediate
results, we're here

00:37:02.290 --> 00:37:08.270
to support you at
every step of the way.

00:37:08.270 --> 00:37:11.170
Now, to tell you
more about how Google

00:37:11.170 --> 00:37:16.090
is improving development for
the web, please welcome Tal.

00:37:16.090 --> 00:37:16.919
Thank you.

00:37:16.919 --> 00:37:18.386
[MUSIC PLAYING]

00:37:18.386 --> 00:37:21.320
[APPLAUSE]

00:37:24.486 --> 00:37:25.860
TAL OPPENHEIMER:
Thanks, Fei Fei.

00:37:25.860 --> 00:37:26.700
Hi, everyone.

00:37:26.700 --> 00:37:28.740
I'm Tal from the
Chrome team, and I'm

00:37:28.740 --> 00:37:31.290
excited to tell you about
some of the great improvements

00:37:31.290 --> 00:37:34.260
we've made on the web
over this last year.

00:37:34.260 --> 00:37:35.790
The web is big.

00:37:35.790 --> 00:37:38.610
With over 2 billion
instances of Chrome,

00:37:38.610 --> 00:37:41.580
we know that the web
has tremendous reach.

00:37:41.580 --> 00:37:43.470
But one of the real
strengths of the web

00:37:43.470 --> 00:37:46.680
is that it's bigger
than a single browser.

00:37:46.680 --> 00:37:49.410
Various estimates show
that there are well

00:37:49.410 --> 00:37:53.220
over five billion
actively-used devices,

00:37:53.220 --> 00:37:55.260
and regardless of
whether that device is

00:37:55.260 --> 00:37:59.400
a smartphone or a laptop
or a desktop or a tablet,

00:37:59.400 --> 00:38:01.960
they all have a browser.

00:38:01.960 --> 00:38:04.110
And that means
that any web app is

00:38:04.110 --> 00:38:07.890
available on these
billions of devices today.

00:38:07.890 --> 00:38:10.740
And we've seen this have a
real impact on how many users

00:38:10.740 --> 00:38:12.450
web apps are reaching.

00:38:12.450 --> 00:38:15.455
We've all seen how quickly
mobile has been growing,

00:38:15.455 --> 00:38:16.830
and native apps
have been growing

00:38:16.830 --> 00:38:19.030
at a tremendous pace with it.

00:38:19.030 --> 00:38:21.720
But what's really remarkable
is that, even with the web's

00:38:21.720 --> 00:38:25.170
large initial reach, we've
seen the average monthly web

00:38:25.170 --> 00:38:28.085
audience growing even faster.

00:38:28.085 --> 00:38:29.460
And because of
this growth, we're

00:38:29.460 --> 00:38:31.980
seeing the web expand
into new areas,

00:38:31.980 --> 00:38:33.900
with experiences
like web VR being

00:38:33.900 --> 00:38:36.120
built on the web platform.

00:38:36.120 --> 00:38:39.540
And the web continues to pop
up in more and more places,

00:38:39.540 --> 00:38:42.450
even some we didn't
really expect.

00:38:42.450 --> 00:38:44.970
A couple of weeks ago,
McDonald's announced

00:38:44.970 --> 00:38:47.790
that they used the web and
Polymer to build their new menu

00:38:47.790 --> 00:38:48.326
boards.

00:38:48.326 --> 00:38:49.950
So now, when you're
looking at the menu

00:38:49.950 --> 00:38:53.080
at McDonald's, that's
built on the web, as well.

00:38:53.080 --> 00:38:55.890
So with the web pretty
much everywhere,

00:38:55.890 --> 00:38:57.990
we're constantly trying
to push the boundaries

00:38:57.990 --> 00:38:59.910
on what it can do.

00:38:59.910 --> 00:39:02.700
If you look at all of our
launches since last year's I/O,

00:39:02.700 --> 00:39:05.760
we've shipped 215
additional APIs

00:39:05.760 --> 00:39:08.160
that cover a range
of capabilities

00:39:08.160 --> 00:39:10.170
for making it easier
to integrate payments

00:39:10.170 --> 00:39:12.990
into your experience, to
making it possible to build

00:39:12.990 --> 00:39:16.080
fully-capable off-line
media experiences directly

00:39:16.080 --> 00:39:17.756
on the web.

00:39:17.756 --> 00:39:19.380
And with all of these
new capabilities,

00:39:19.380 --> 00:39:23.370
we've seen a massive growth in
experiences built on the web.

00:39:23.370 --> 00:39:26.160
Accelerated mobile
pages, or AMP pages,

00:39:26.160 --> 00:39:28.140
make it really
easy for publishers

00:39:28.140 --> 00:39:30.600
to easily create fast articles.

00:39:30.600 --> 00:39:32.100
And since launch,
we've seen this

00:39:32.100 --> 00:39:38.070
grow to over 2 billion AMP pages
from across 900,000 domains.

00:39:38.070 --> 00:39:40.740
And beyond AMP pages,
the modern mobile web

00:39:40.740 --> 00:39:45.570
also allows developers to build
deep, rich mobile experiences

00:39:45.570 --> 00:39:50.210
with something that we call
Progressive Web Apps, or PWAs.

00:39:50.210 --> 00:39:53.220
PWAs are about helping
web developers leverage

00:39:53.220 --> 00:39:56.430
the web's new capabilities to
build high-class experiences

00:39:56.430 --> 00:39:58.290
that feel immersive.

00:39:58.290 --> 00:40:00.510
They can load quickly
and work offline,

00:40:00.510 --> 00:40:03.450
and can even send
notifications to users.

00:40:03.450 --> 00:40:05.880
And we've seen a number of
amazing experiences taking

00:40:05.880 --> 00:40:08.130
advantage of these
new capabilities.

00:40:08.130 --> 00:40:11.220
As just one example, there's
Twitter who recently rebuilt

00:40:11.220 --> 00:40:13.080
their mobile web experience.

00:40:13.080 --> 00:40:16.980
Here, they have a polished,
fast, immersive experience that

00:40:16.980 --> 00:40:18.840
works on any connection type.

00:40:18.840 --> 00:40:21.030
And it can send
users notifications,

00:40:21.030 --> 00:40:23.610
and it's completely
built on the mobile web

00:40:23.610 --> 00:40:28.080
so it's already accessible
on billions of devices.

00:40:28.080 --> 00:40:30.360
And with an immersive
experience like this,

00:40:30.360 --> 00:40:31.860
we also want to
make sure that users

00:40:31.860 --> 00:40:34.290
can get back to it easily.

00:40:34.290 --> 00:40:36.360
Add to Home Screen has
always allowed users

00:40:36.360 --> 00:40:39.360
to add any experience on the web
directly to their Android home

00:40:39.360 --> 00:40:42.960
screen, but with our improved
Add to Home Screen flow,

00:40:42.960 --> 00:40:45.120
when you add a PWA
to your home screen,

00:40:45.120 --> 00:40:47.670
it's fully-integrated
into the platform.

00:40:47.670 --> 00:40:50.640
So to users, it feels like
any other app experience

00:40:50.640 --> 00:40:52.140
on their device.

00:40:52.140 --> 00:40:53.910
It will appear in
the Android launcher

00:40:53.910 --> 00:40:56.760
alongside your Android
apps, and it'll even appear

00:40:56.760 --> 00:40:58.860
in Android storage settings.

00:40:58.860 --> 00:41:01.920
But since it's a PWA,
it's inherently smaller,

00:41:01.920 --> 00:41:05.220
with Twitter's Progressive
Web App at under one megabyte.

00:41:05.220 --> 00:41:08.010
So users are getting a
comparable experience

00:41:08.010 --> 00:41:11.100
that requires significantly
less storage space.

00:41:11.100 --> 00:41:13.080
And the fact that it's
so small doesn't just

00:41:13.080 --> 00:41:15.840
reduce its storage
size, but also means

00:41:15.840 --> 00:41:19.980
that it loads almost instantly
on any connection type.

00:41:19.980 --> 00:41:23.130
And this fast, integrated,
improved Add to Home Screen

00:41:23.130 --> 00:41:26.400
flow is rolling out now.

00:41:26.400 --> 00:41:28.710
With all of these
new capabilities,

00:41:28.710 --> 00:41:30.420
we've also been working
to make sure it's

00:41:30.420 --> 00:41:34.010
really easy for web developers
to build these experiences.

00:41:34.010 --> 00:41:38.070
We'll be going into a lot more
detail on how to develop PWAs

00:41:38.070 --> 00:41:40.920
throughout the mobile web
track over the next few days.

00:41:40.920 --> 00:41:43.680
But no matter how you're
building your web app,

00:41:43.680 --> 00:41:45.840
Lighthouse is a tool
that can show you how

00:41:45.840 --> 00:41:48.780
to improve your web experience.

00:41:48.780 --> 00:41:51.420
Lighthouse is a Chrome
extension and command line

00:41:51.420 --> 00:41:54.870
tool that runs almost
100 audits on your site

00:41:54.870 --> 00:41:57.720
to identify how you can
improve your app's performance,

00:41:57.720 --> 00:42:01.920
accessibility, and
Progressive Web App-iness.

00:42:01.920 --> 00:42:04.200
And we're excited to
announce that Lighthouse

00:42:04.200 --> 00:42:07.480
will be integrated
directly into Dev Tools.

00:42:07.480 --> 00:42:10.500
So now you can quickly see
how your website is doing

00:42:10.500 --> 00:42:13.563
and what to do next
directly in Chrome.

00:42:13.563 --> 00:42:16.450
[CHEERING AND APPLAUSE]

00:42:16.950 --> 00:42:19.260
And with all of
these tools, we've

00:42:19.260 --> 00:42:21.780
seen just how easy it
can be for companies

00:42:21.780 --> 00:42:24.240
to take advantage of these
new capabilities for their web

00:42:24.240 --> 00:42:25.590
experience.

00:42:25.590 --> 00:42:28.830
To give one example, there's
wego, one of the biggest travel

00:42:28.830 --> 00:42:31.320
players in Southeast
Asia and the Middle East,

00:42:31.320 --> 00:42:34.740
that built one of the most
polished PWAs we've seen.

00:42:34.740 --> 00:42:36.780
Their experience works
quickly whether you're

00:42:36.780 --> 00:42:38.700
online or offline.

00:42:38.700 --> 00:42:41.940
They link off to AMP pages to
ensure that pages load quickly,

00:42:41.940 --> 00:42:44.730
as well, and they leverage
some of the newest web

00:42:44.730 --> 00:42:47.610
APIs to make payments
and identity really

00:42:47.610 --> 00:42:49.650
easy for their users.

00:42:49.650 --> 00:42:54.120
But what's really remarkable is
that this core PWA experience

00:42:54.120 --> 00:42:56.550
was built in just
over two months

00:42:56.550 --> 00:43:00.870
by a single engineer who
was new to web development.

00:43:00.870 --> 00:43:03.540
And this is just
one example of many.

00:43:03.540 --> 00:43:05.970
Leveraging the modern
mobile web is now

00:43:05.970 --> 00:43:08.380
the norm around the world.

00:43:08.380 --> 00:43:11.130
We've seen companies everywhere
building progressive web apps

00:43:11.130 --> 00:43:14.700
and seeing a tangible
impact on their key metrics.

00:43:14.700 --> 00:43:17.880
With the modern mobile web,
it's possible to easily build

00:43:17.880 --> 00:43:20.910
immersive, fully-capable
experiences that

00:43:20.910 --> 00:43:25.020
can reach billions of people
around the world today.

00:43:25.020 --> 00:43:26.850
And now, let's turn
our focus to what

00:43:26.850 --> 00:43:29.280
we're doing to help make
it easier to develop apps

00:43:29.280 --> 00:43:30.330
and grow your business.

00:43:30.330 --> 00:43:32.181
Please join me in welcoming Ben.

00:43:32.181 --> 00:43:33.594
[MUSIC PLAYING]

00:43:33.594 --> 00:43:36.420
[APPLAUSE]

00:43:39.730 --> 00:43:41.090
BEN GALBRAITH: Thanks, Tal.

00:43:41.090 --> 00:43:42.430
Hey, everyone.

00:43:42.430 --> 00:43:46.620
Last year at I/O, we introduced
an expanded Firebase,

00:43:46.620 --> 00:43:49.060
a mobile development
platform that helps you

00:43:49.060 --> 00:43:51.730
with things like storing
data in the Cloud

00:43:51.730 --> 00:43:53.920
and synchronizing
it across devices,

00:43:53.920 --> 00:43:57.820
pinpointing app crashes, sending
targeted notifications to just

00:43:57.820 --> 00:44:01.870
the right users, serving
ads in your apps, and more.

00:44:01.870 --> 00:44:04.930
All of this is bundled together
in a single, easy-to-use,

00:44:04.930 --> 00:44:07.510
cross-platform SDK.

00:44:07.510 --> 00:44:10.900
Firebase also includes a
powerful, free, and unlimited

00:44:10.900 --> 00:44:14.860
analytics tool purpose-built
for the needs of native apps.

00:44:14.860 --> 00:44:18.722
And new this year, Analytics
gives you real-time views

00:44:18.722 --> 00:44:20.680
into what's happening
inside of your app, which

00:44:20.680 --> 00:44:24.949
opens up a live window into
what's happening right now.

00:44:24.949 --> 00:44:26.990
Firebase is also integrated
with the Google Cloud

00:44:26.990 --> 00:44:31.420
Platform, which means it scales
with you as your needs grow.

00:44:31.420 --> 00:44:34.030
For example, Analytics
connects seamlessly

00:44:34.030 --> 00:44:35.980
with BigQuery,
which means you can

00:44:35.980 --> 00:44:41.140
execute fast SQL-like queries
over your data at scale.

00:44:41.140 --> 00:44:43.840
Since last year's launch,
over a million developers

00:44:43.840 --> 00:44:45.580
are using Firebase.

00:44:45.580 --> 00:44:47.590
We are so humbled
that so many of you

00:44:47.590 --> 00:44:49.330
have taken this journey
with us and have

00:44:49.330 --> 00:44:51.680
chosen to use us in your app.

00:44:51.680 --> 00:44:53.740
We are deeply
committed to Firebase

00:44:53.740 --> 00:44:55.630
and we're doubling
down on our efforts

00:44:55.630 --> 00:44:59.470
to simplify more everyday
developer challenges.

00:44:59.470 --> 00:45:04.300
To that end, in January, the
Fabric team joined Google.

00:45:04.300 --> 00:45:06.790
Since first launching
Crashlytics in 2011,

00:45:06.790 --> 00:45:09.370
the Fabric team has been on
a similar mission to ours

00:45:09.370 --> 00:45:12.190
and have built a remarkable set
of products that have achieved

00:45:12.190 --> 00:45:14.530
widespread developer adoption.

00:45:14.530 --> 00:45:16.120
The Firebase and
Fabric teams are

00:45:16.120 --> 00:45:18.880
hard at work integrating
these two platforms together

00:45:18.880 --> 00:45:22.750
in a thoughtful way to
bring you the best of both.

00:45:22.750 --> 00:45:27.020
We'll have more to share on
this front in the coming months.

00:45:27.020 --> 00:45:29.200
Over the past year,
we've been continuously

00:45:29.200 --> 00:45:31.182
improving and
expanding Firebase,

00:45:31.182 --> 00:45:33.640
and today, I want to highlight
a couple of the enhancements

00:45:33.640 --> 00:45:37.390
that we've made, starting
with Cloud Functions.

00:45:37.390 --> 00:45:39.850
One of our goals with
Firebase is freeing you

00:45:39.850 --> 00:45:42.220
from having to think about
servers and infrastructure

00:45:42.220 --> 00:45:45.340
so that you can focus
on creating great apps.

00:45:45.340 --> 00:45:48.430
But something's been missing
for us to truly accomplish

00:45:48.430 --> 00:45:50.470
this goal, and it's
a gap that we're now

00:45:50.470 --> 00:45:53.650
able to fill with Cloud
Functions for Firebase, which

00:45:53.650 --> 00:45:56.440
we just recently
released into beta.

00:45:56.440 --> 00:45:58.840
Cloud Functions
gives you an easy way

00:45:58.840 --> 00:46:01.390
to deploy JavaScript
code into the Cloud,

00:46:01.390 --> 00:46:04.510
and this deployed code is
automatically mapped to a URL,

00:46:04.510 --> 00:46:07.840
but it can also integrate
with Firebase events.

00:46:07.840 --> 00:46:11.050
And these functions are run in
a managed, Node.js environment

00:46:11.050 --> 00:46:15.760
so you can easily tap in to the
vast node package ecosystem.

00:46:15.760 --> 00:46:17.440
You can use these
functions to do things

00:46:17.440 --> 00:46:19.750
like respond to
a database update

00:46:19.750 --> 00:46:22.240
by sending a notification
with Cloud Messaging,

00:46:22.240 --> 00:46:24.670
or you can resize images
uploaded by your users

00:46:24.670 --> 00:46:27.520
before saving them
with Cloud Storage.

00:46:27.520 --> 00:46:30.520
And today, we're opening
up a new integration

00:46:30.520 --> 00:46:34.000
between functions
and Firebase Hosting.

00:46:34.000 --> 00:46:37.060
Now, hosting lets you
serve static content

00:46:37.060 --> 00:46:40.480
like HTML and CSS files that
are automatically backed

00:46:40.480 --> 00:46:42.610
by a global caching network.

00:46:42.610 --> 00:46:44.680
By combining this
with Cloud Functions,

00:46:44.680 --> 00:46:47.590
you can now generate
dynamic web content

00:46:47.590 --> 00:46:50.260
that you can serve on your own
domain with the static content

00:46:50.260 --> 00:46:54.970
and is both accelerated by
this global caching network.

00:46:54.970 --> 00:46:58.720
So with Cloud Functions, you can
deploy individual units of code

00:46:58.720 --> 00:47:02.380
as you need them, which gives
you a really elegant way

00:47:02.380 --> 00:47:04.424
to factor code
out from your apps

00:47:04.424 --> 00:47:06.340
and share them across
your web and native apps

00:47:06.340 --> 00:47:09.250
as you need without having
to worry about app servers

00:47:09.250 --> 00:47:11.530
or server site applications.

00:47:11.530 --> 00:47:14.830
And it enables true
server list development.

00:47:14.830 --> 00:47:16.821
We are really
excited about this.

00:47:16.821 --> 00:47:17.320
All right.

00:47:17.320 --> 00:47:19.361
I've got one more thing
I want to share with you,

00:47:19.361 --> 00:47:22.540
and this has to do with
your native apps quality.

00:47:22.540 --> 00:47:24.402
As developers, we
spend a lot of time

00:47:24.402 --> 00:47:26.860
optimizing and testing our apps
to get them to perform just

00:47:26.860 --> 00:47:29.422
right, but once we release
them into the wild,

00:47:29.422 --> 00:47:30.880
it's really only
our users who know

00:47:30.880 --> 00:47:32.202
how well they're performing.

00:47:32.202 --> 00:47:34.660
That's because it's pretty hard
to know exactly how they're

00:47:34.660 --> 00:47:37.600
behaving across a
huge array of devices

00:47:37.600 --> 00:47:40.870
and widely-variable network
conditions across the world.

00:47:40.870 --> 00:47:42.790
And not having our
apps perform well

00:47:42.790 --> 00:47:44.652
is frustrating for everyone.

00:47:44.652 --> 00:47:46.360
So today, I'm pleased
to share that we're

00:47:46.360 --> 00:47:50.020
releasing a new product to help,
called Firebase Performance

00:47:50.020 --> 00:47:51.700
Monitoring.

00:47:51.700 --> 00:47:53.281
After you add
Firebase Performance--

00:47:53.281 --> 00:47:53.780
[APPLAUSE]

00:47:53.780 --> 00:47:54.590
Thank you.

00:47:54.590 --> 00:47:56.506
After you add Firebase
Performance to your app

00:47:56.506 --> 00:47:59.350
with one line of code, Firebase
Performance automatically

00:47:59.350 --> 00:48:02.650
provides insights into two
of the most critical aspects

00:48:02.650 --> 00:48:05.710
of app performance--
startup time and network

00:48:05.710 --> 00:48:07.240
responsiveness.

00:48:07.240 --> 00:48:08.650
You can then use
its simple API--

00:48:08.650 --> 00:48:10.030
[APPLAUSE]

00:48:10.030 --> 00:48:11.050
Thank you.

00:48:11.050 --> 00:48:13.270
You can use its
simple API to measure

00:48:13.270 --> 00:48:14.596
virtually anything in your app.

00:48:14.596 --> 00:48:15.970
As you see on the
slide, you just

00:48:15.970 --> 00:48:18.640
invoke a function at the
beginning and then at the end,

00:48:18.640 --> 00:48:20.780
and Firebase Performance
does the heavy-lifting

00:48:20.780 --> 00:48:23.530
of collecting all of the
performance metrics for you

00:48:23.530 --> 00:48:26.440
across all of your
app instances.

00:48:26.440 --> 00:48:28.210
And then you can
filter these metrics

00:48:28.210 --> 00:48:32.290
by country, device type,
OS, and app version

00:48:32.290 --> 00:48:36.650
to get a clear view of where
you need to focus your efforts.

00:48:36.650 --> 00:48:42.020
The beta version of Firebase
Performance is available today.

00:48:42.020 --> 00:48:44.520
[CHEERING AND APPLAUSE]

00:48:44.520 --> 00:48:48.020
Thank you.

00:48:48.020 --> 00:48:50.510
We hope this makes a big
difference in your efforts

00:48:50.510 --> 00:48:53.762
to create high-performing
native apps.

00:48:53.762 --> 00:48:55.970
We have a bunch of other
Firebase announcements today

00:48:55.970 --> 00:48:58.130
at sessions here at
I/O, including support

00:48:58.130 --> 00:49:01.760
for phone number authentication,
and we're open-sourcing

00:49:01.760 --> 00:49:05.118
many of our Firebase SDKs.

00:49:05.118 --> 00:49:07.548
[CHEERS AND APPLAUSE]

00:49:07.548 --> 00:49:08.520
Thank you.

00:49:11.087 --> 00:49:13.420
Thanks to new enhancements,
we've also made the Firebase

00:49:13.420 --> 00:49:17.070
Test Lab for Android, and our
recently-released Unity and C++

00:49:17.070 --> 00:49:21.280
SDKs, Firebase is great
for games developers too.

00:49:21.280 --> 00:49:24.190
We want Firebase to be
the best place for you

00:49:24.190 --> 00:49:27.520
to start your next app,
freeing your energies

00:49:27.520 --> 00:49:29.860
to focus on making
your app awesome, which

00:49:29.860 --> 00:49:32.110
is where you should be
spending all your time.

00:49:32.110 --> 00:49:33.460
Thank you.

00:49:33.460 --> 00:49:35.817
Now I'd like to
bring Jason back out.

00:49:35.817 --> 00:49:36.317
[APPLAUSE]

00:49:36.317 --> 00:49:39.311
[MUSIC PLAYING]

00:49:43.810 --> 00:49:45.460
JASON TITUS: Thanks, Ben.

00:49:45.460 --> 00:49:47.710
As you can see,
at Google we have

00:49:47.710 --> 00:49:50.590
been working across
a range of teams

00:49:50.590 --> 00:49:53.380
to make it easier
to build products.

00:49:53.380 --> 00:49:55.660
During I/O, you'll
have an opportunity

00:49:55.660 --> 00:49:59.590
to go deep into a number of
these, with 14 content tracks

00:49:59.590 --> 00:50:03.520
and over 140 breakout
sessions covering everything

00:50:03.520 --> 00:50:07.750
from Android, to
the Cloud, to VR.

00:50:07.750 --> 00:50:11.170
We also have Sandboxes to help
you get hands-on experience

00:50:11.170 --> 00:50:15.340
with our products, as well as
over 70 code labs to get you up

00:50:15.340 --> 00:50:19.750
and running with our
latest APIs today.

00:50:19.750 --> 00:50:25.000
In addition, the Googlers that
built these products are here.

00:50:25.000 --> 00:50:27.940
So grab them for one-on-one
consultations in office hours

00:50:27.940 --> 00:50:29.800
or at the Sandboxes.

00:50:29.800 --> 00:50:32.900
Not only can they help you
understand our products,

00:50:32.900 --> 00:50:35.350
but more importantly,
they can get your feedback

00:50:35.350 --> 00:50:39.100
on how we're doing.

00:50:39.100 --> 00:50:41.245
I do have one other
announcement before we go out

00:50:41.245 --> 00:50:42.940
to breakout sessions.

00:50:42.940 --> 00:50:47.020
As you can tell, we're really
excited about the future of AI,

00:50:47.020 --> 00:50:50.170
and particularly our
Google Assistant platform.

00:50:50.170 --> 00:50:51.820
And so to get you
ramped up, we're

00:50:51.820 --> 00:50:56.920
hosting our first-ever Actions
on Google developer challenge.

00:50:56.920 --> 00:50:59.470
By building creative,
useful, or simply

00:50:59.470 --> 00:51:01.270
fun apps for the
Google Assistant,

00:51:01.270 --> 00:51:04.900
you can compete to win
one of over 20 prizes.

00:51:04.900 --> 00:51:07.480
And for those of you
here at Shoreline,

00:51:07.480 --> 00:51:11.500
we're giving you a Google Home
device and $700 of Cloud credit

00:51:11.500 --> 00:51:12.340
to get you started.

00:51:12.340 --> 00:51:15.286
[CHEERING AND APPLAUSE]

00:51:23.150 --> 00:51:25.630
We cannot wait to
see what you build.

00:51:29.360 --> 00:51:37.540
So Sundar talked about the
technological shift to AI,

00:51:37.540 --> 00:51:41.920
as well as the power
of open platforms.

00:51:41.920 --> 00:51:45.130
It's a really exciting
time in computing.

00:51:45.130 --> 00:51:48.670
We hope you're as inspired
as we are about the future.

00:51:48.670 --> 00:51:50.470
And remember, all
of us here at Google

00:51:50.470 --> 00:51:54.070
are here to help you this week,
so please take advantage of it.

00:51:54.070 --> 00:51:56.320
Let's build great
things together.

00:51:56.320 --> 00:51:58.007
Thank you, and have fun.

00:51:58.007 --> 00:51:58.981
[CHEERING AND APPLAUSE]

00:51:58.981 --> 00:52:03.153
[MUSIC PLAYING]

