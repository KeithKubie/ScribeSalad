WEBVTT
Kind: captions
Language: en

00:00:07.880 --> 00:00:10.070
hello my name is Vernon Oliveira and I

00:00:10.070 --> 00:00:10.080
hello my name is Vernon Oliveira and I
 

00:00:10.080 --> 00:00:11.749
hello my name is Vernon Oliveira and I
work in the Play Games team today we're

00:00:11.749 --> 00:00:11.759
work in the Play Games team today we're
 

00:00:11.759 --> 00:00:13.129
work in the Play Games team today we're
here to talk about two of my favorite

00:00:13.129 --> 00:00:13.139
here to talk about two of my favorite
 

00:00:13.139 --> 00:00:14.900
here to talk about two of my favorite
things which are the play games API and

00:00:14.900 --> 00:00:14.910
things which are the play games API and
 

00:00:14.910 --> 00:00:16.790
things which are the play games API and
the NDK and how to use those to dinner

00:00:16.790 --> 00:00:16.800
the NDK and how to use those to dinner
 

00:00:16.800 --> 00:00:19.250
the NDK and how to use those to dinner
to make a game so when you're writing a

00:00:19.250 --> 00:00:19.260
to make a game so when you're writing a
 

00:00:19.260 --> 00:00:20.510
to make a game so when you're writing a
game using the play games API you

00:00:20.510 --> 00:00:20.520
game using the play games API you
 

00:00:20.520 --> 00:00:22.160
game using the play games API you
normally have to worry about connecting

00:00:22.160 --> 00:00:22.170
normally have to worry about connecting
 

00:00:22.170 --> 00:00:23.929
normally have to worry about connecting
all these callbacks that the Android

00:00:23.929 --> 00:00:23.939
all these callbacks that the Android
 

00:00:23.939 --> 00:00:25.400
all these callbacks that the Android
lifecycle gives you so we have uncrate

00:00:25.400 --> 00:00:25.410
lifecycle gives you so we have uncrate
 

00:00:25.410 --> 00:00:26.779
lifecycle gives you so we have uncrate
they have on store they have on stop on

00:00:26.779 --> 00:00:26.789
they have on store they have on stop on
 

00:00:26.789 --> 00:00:28.400
they have on store they have on stop on
activity result in several other

00:00:28.400 --> 00:00:28.410
activity result in several other
 

00:00:28.410 --> 00:00:31.009
activity result in several other
callbacks normally if you're writing a

00:00:31.009 --> 00:00:31.019
callbacks normally if you're writing a
 

00:00:31.019 --> 00:00:32.749
callbacks normally if you're writing a
game that's not native you can usually

00:00:32.749 --> 00:00:32.759
game that's not native you can usually
 

00:00:32.759 --> 00:00:34.250
game that's not native you can usually
get away with just subclassing

00:00:34.250 --> 00:00:34.260
get away with just subclassing
 

00:00:34.260 --> 00:00:35.660
get away with just subclassing
basegameactivity which is the class that

00:00:35.660 --> 00:00:35.670
basegameactivity which is the class that
 

00:00:35.670 --> 00:00:37.459
basegameactivity which is the class that
we have in the samples when you subclass

00:00:37.459 --> 00:00:37.469
we have in the samples when you subclass
 

00:00:37.469 --> 00:00:39.410
we have in the samples when you subclass
basegameactivity all that lifecycle is

00:00:39.410 --> 00:00:39.420
basegameactivity all that lifecycle is
 

00:00:39.420 --> 00:00:41.180
basegameactivity all that lifecycle is
connected for you now of course if

00:00:41.180 --> 00:00:41.190
connected for you now of course if
 

00:00:41.190 --> 00:00:42.590
connected for you now of course if
you're writing a native game as you know

00:00:42.590 --> 00:00:42.600
you're writing a native game as you know
 

00:00:42.600 --> 00:00:44.630
you're writing a native game as you know
you can subclass basegameactivity why

00:00:44.630 --> 00:00:44.640
you can subclass basegameactivity why
 

00:00:44.640 --> 00:00:46.459
you can subclass basegameactivity why
because you have to use native activity

00:00:46.459 --> 00:00:46.469
because you have to use native activity
 

00:00:46.469 --> 00:00:48.889
because you have to use native activity
for in it for a native game so we're

00:00:48.889 --> 00:00:48.899
for in it for a native game so we're
 

00:00:48.899 --> 00:00:50.330
for in it for a native game so we're
going to talk about how to setup native

00:00:50.330 --> 00:00:50.340
going to talk about how to setup native
 

00:00:50.340 --> 00:00:52.910
going to talk about how to setup native
activity to do exactly that so first of

00:00:52.910 --> 00:00:52.920
activity to do exactly that so first of
 

00:00:52.920 --> 00:00:54.080
activity to do exactly that so first of
all you don't have to use native

00:00:54.080 --> 00:00:54.090
all you don't have to use native
 

00:00:54.090 --> 00:00:55.310
all you don't have to use native
activity as it is you can actually

00:00:55.310 --> 00:00:55.320
activity as it is you can actually
 

00:00:55.320 --> 00:00:57.170
activity as it is you can actually
subclass it so this is what we do here

00:00:57.170 --> 00:00:57.180
subclass it so this is what we do here
 

00:00:57.180 --> 00:00:59.660
subclass it so this is what we do here
so before anything we start with base

00:00:59.660 --> 00:00:59.670
so before anything we start with base
 

00:00:59.670 --> 00:01:01.580
so before anything we start with base
game it actually native activity and

00:01:01.580 --> 00:01:01.590
game it actually native activity and
 

00:01:01.590 --> 00:01:03.380
game it actually native activity and
then we derive our activity class from

00:01:03.380 --> 00:01:03.390
then we derive our activity class from
 

00:01:03.390 --> 00:01:05.030
then we derive our activity class from
it so in this case our game is called

00:01:05.030 --> 00:01:05.040
it so in this case our game is called
 

00:01:05.040 --> 00:01:07.520
it so in this case our game is called
awesome game so we are deriving awesome

00:01:07.520 --> 00:01:07.530
awesome game so we are deriving awesome
 

00:01:07.530 --> 00:01:09.980
awesome game so we are deriving awesome
game activity from base gaming from from

00:01:09.980 --> 00:01:09.990
game activity from base gaming from from
 

00:01:09.990 --> 00:01:11.990
game activity from base gaming from from
native activity since we're going to use

00:01:11.990 --> 00:01:12.000
native activity since we're going to use
 

00:01:12.000 --> 00:01:13.640
native activity since we're going to use
the the game helper which is also in the

00:01:13.640 --> 00:01:13.650
the the game helper which is also in the
 

00:01:13.650 --> 00:01:15.620
the the game helper which is also in the
samples we also implement game helper

00:01:15.620 --> 00:01:15.630
samples we also implement game helper
 

00:01:15.630 --> 00:01:17.840
samples we also implement game helper
dot game helper listener which is d

00:01:17.840 --> 00:01:17.850
dot game helper listener which is d
 

00:01:17.850 --> 00:01:19.850
dot game helper listener which is d
which is the the listener class that

00:01:19.850 --> 00:01:19.860
which is the the listener class that
 

00:01:19.860 --> 00:01:22.550
which is the the listener class that
game helper uses so next we with the

00:01:22.550 --> 00:01:22.560
game helper uses so next we with the
 

00:01:22.560 --> 00:01:24.140
game helper uses so next we with the
clerk game helper inside of our of our

00:01:24.140 --> 00:01:24.150
clerk game helper inside of our of our
 

00:01:24.150 --> 00:01:25.730
clerk game helper inside of our of our
activity and we have to manage its

00:01:25.730 --> 00:01:25.740
activity and we have to manage its
 

00:01:25.740 --> 00:01:27.440
activity and we have to manage its
lifecycle remember this is actually done

00:01:27.440 --> 00:01:27.450
lifecycle remember this is actually done
 

00:01:27.450 --> 00:01:28.940
lifecycle remember this is actually done
by base game activity but it's not

00:01:28.940 --> 00:01:28.950
by base game activity but it's not
 

00:01:28.950 --> 00:01:31.249
by base game activity but it's not
actually very hard to do it yourself to

00:01:31.249 --> 00:01:31.259
actually very hard to do it yourself to
 

00:01:31.259 --> 00:01:32.840
actually very hard to do it yourself to
do this all you have to do first of all

00:01:32.840 --> 00:01:32.850
do this all you have to do first of all
 

00:01:32.850 --> 00:01:34.700
do this all you have to do first of all
you want to load your your game library

00:01:34.700 --> 00:01:34.710
you want to load your your game library
 

00:01:34.710 --> 00:01:36.380
you want to load your your game library
because it's an antique a game so reload

00:01:36.380 --> 00:01:36.390
because it's an antique a game so reload
 

00:01:36.390 --> 00:01:38.749
because it's an antique a game so reload
et the game library using systems load

00:01:38.749 --> 00:01:38.759
et the game library using systems load
 

00:01:38.759 --> 00:01:42.289
et the game library using systems load
library next we want to hook up the game

00:01:42.289 --> 00:01:42.299
library next we want to hook up the game
 

00:01:42.299 --> 00:01:44.690
library next we want to hook up the game
helper to do this for it for example

00:01:44.690 --> 00:01:44.700
helper to do this for it for example
 

00:01:44.700 --> 00:01:46.730
helper to do this for it for example
when I have on create so first of all

00:01:46.730 --> 00:01:46.740
when I have on create so first of all
 

00:01:46.740 --> 00:01:48.109
when I have on create so first of all
you create your game helper here and

00:01:48.109 --> 00:01:48.119
you create your game helper here and
 

00:01:48.119 --> 00:01:50.300
you create your game helper here and
then what you have to do is call game

00:01:50.300 --> 00:01:50.310
then what you have to do is call game
 

00:01:50.310 --> 00:01:52.789
then what you have to do is call game
helper like M helper set up and this is

00:01:52.789 --> 00:01:52.799
helper like M helper set up and this is
 

00:01:52.799 --> 00:01:53.840
helper like M helper set up and this is
when you do the setup for the game

00:01:53.840 --> 00:01:53.850
when you do the setup for the game
 

00:01:53.850 --> 00:01:55.460
when you do the setup for the game
helper here we're specifying that we

00:01:55.460 --> 00:01:55.470
helper here we're specifying that we
 

00:01:55.470 --> 00:01:58.100
helper here we're specifying that we
want the games client and we also want

00:01:58.100 --> 00:01:58.110
want the games client and we also want
 

00:01:58.110 --> 00:01:59.870
want the games client and we also want
the f state client and we're going to

00:01:59.870 --> 00:01:59.880
the f state client and we're going to
 

00:01:59.880 --> 00:02:02.719
the f state client and we're going to
use those in our game after you don't

00:02:02.719 --> 00:02:02.729
use those in our game after you don't
 

00:02:02.729 --> 00:02:04.249
use those in our game after you don't
create all you have to do is do the same

00:02:04.249 --> 00:02:04.259
create all you have to do is do the same
 

00:02:04.259 --> 00:02:06.469
create all you have to do is do the same
on start so whenever you get the on

00:02:06.469 --> 00:02:06.479
on start so whenever you get the on
 

00:02:06.479 --> 00:02:08.510
on start so whenever you get the on
start callback the game Hepler needs to

00:02:08.510 --> 00:02:08.520
start callback the game Hepler needs to
 

00:02:08.520 --> 00:02:10.130
start callback the game Hepler needs to
know that the answer has happened so

00:02:10.130 --> 00:02:10.140
know that the answer has happened so
 

00:02:10.140 --> 00:02:13.040
know that the answer has happened so
this is how you hook it up on unstop

00:02:13.040 --> 00:02:13.050
this is how you hook it up on unstop
 

00:02:13.050 --> 00:02:13.820
this is how you hook it up on unstop
it's pretty much

00:02:13.820 --> 00:02:13.830
it's pretty much
 

00:02:13.830 --> 00:02:15.680
it's pretty much
same thing so on on stop you just call

00:02:15.680 --> 00:02:15.690
same thing so on on stop you just call
 

00:02:15.690 --> 00:02:17.630
same thing so on on stop you just call
em hell produc on stop and that connects

00:02:17.630 --> 00:02:17.640
em hell produc on stop and that connects
 

00:02:17.640 --> 00:02:21.260
em hell produc on stop and that connects
it correctly next you'll also need on

00:02:21.260 --> 00:02:21.270
it correctly next you'll also need on
 

00:02:21.270 --> 00:02:23.150
it correctly next you'll also need on
activity result you'll do just the same

00:02:23.150 --> 00:02:23.160
activity result you'll do just the same
 

00:02:23.160 --> 00:02:24.410
activity result you'll do just the same
thing you're just calling helper to

00:02:24.410 --> 00:02:24.420
thing you're just calling helper to
 

00:02:24.420 --> 00:02:26.690
thing you're just calling helper to
notify that the result has come in

00:02:26.690 --> 00:02:26.700
notify that the result has come in
 

00:02:26.700 --> 00:02:28.700
notify that the result has come in
because that's necessary for that for

00:02:28.700 --> 00:02:28.710
because that's necessary for that for
 

00:02:28.710 --> 00:02:30.800
because that's necessary for that for
the whole sign-in process with the with

00:02:30.800 --> 00:02:30.810
the whole sign-in process with the with
 

00:02:30.810 --> 00:02:32.600
the whole sign-in process with the with
the dialogues and so on so you need to

00:02:32.600 --> 00:02:32.610
the dialogues and so on so you need to
 

00:02:32.610 --> 00:02:35.440
the dialogues and so on so you need to
get the other results to the helper next

00:02:35.440 --> 00:02:35.450
get the other results to the helper next
 

00:02:35.450 --> 00:02:37.370
get the other results to the helper next
you have to wait for the sign-in

00:02:37.370 --> 00:02:37.380
you have to wait for the sign-in
 

00:02:37.380 --> 00:02:38.720
you have to wait for the sign-in
callback so you're going to be notified

00:02:38.720 --> 00:02:38.730
callback so you're going to be notified
 

00:02:38.730 --> 00:02:41.570
callback so you're going to be notified
that sign-in succeeded or fails through

00:02:41.570 --> 00:02:41.580
that sign-in succeeded or fails through
 

00:02:41.580 --> 00:02:43.040
that sign-in succeeded or fails through
the sign-in callbacks like consignee

00:02:43.040 --> 00:02:43.050
the sign-in callbacks like consignee
 

00:02:43.050 --> 00:02:44.960
the sign-in callbacks like consignee
succeeded in on sign-in failed so that's

00:02:44.960 --> 00:02:44.970
succeeded in on sign-in failed so that's
 

00:02:44.970 --> 00:02:46.550
succeeded in on sign-in failed so that's
when you probably want to notify your

00:02:46.550 --> 00:02:46.560
when you probably want to notify your
 

00:02:46.560 --> 00:02:49.520
when you probably want to notify your
your native code that this onion has

00:02:49.520 --> 00:02:49.530
your native code that this onion has
 

00:02:49.530 --> 00:02:51.949
your native code that this onion has
succeeded or failed so next so let's

00:02:51.949 --> 00:02:51.959
succeeded or failed so next so let's
 

00:02:51.959 --> 00:02:53.840
succeeded or failed so next so let's
let's talk about how to do how to

00:02:53.840 --> 00:02:53.850
let's talk about how to do how to
 

00:02:53.850 --> 00:02:55.940
let's talk about how to do how to
actually do sign-in so first of all

00:02:55.940 --> 00:02:55.950
actually do sign-in so first of all
 

00:02:55.950 --> 00:02:58.400
actually do sign-in so first of all
we're not going to talk in into great

00:02:58.400 --> 00:02:58.410
we're not going to talk in into great
 

00:02:58.410 --> 00:03:00.800
we're not going to talk in into great
length about the about the J&amp;I but you

00:03:00.800 --> 00:03:00.810
length about the about the J&amp;I but you
 

00:03:00.810 --> 00:03:03.140
length about the about the J&amp;I but you
have to initialize J&amp;I so first of all

00:03:03.140 --> 00:03:03.150
have to initialize J&amp;I so first of all
 

00:03:03.150 --> 00:03:04.580
have to initialize J&amp;I so first of all
you can do that using attach current

00:03:04.580 --> 00:03:04.590
you can do that using attach current
 

00:03:04.590 --> 00:03:06.100
you can do that using attach current
thread and then you have a working

00:03:06.100 --> 00:03:06.110
thread and then you have a working
 

00:03:06.110 --> 00:03:07.910
thread and then you have a working
attachment to the thread that you can

00:03:07.910 --> 00:03:07.920
attachment to the thread that you can
 

00:03:07.920 --> 00:03:10.310
attachment to the thread that you can
use to make GI calls of course don't

00:03:10.310 --> 00:03:10.320
use to make GI calls of course don't
 

00:03:10.320 --> 00:03:12.290
use to make GI calls of course don't
forget because that I made that mistake

00:03:12.290 --> 00:03:12.300
forget because that I made that mistake
 

00:03:12.300 --> 00:03:13.970
forget because that I made that mistake
don't forget to detach the current

00:03:13.970 --> 00:03:13.980
don't forget to detach the current
 

00:03:13.980 --> 00:03:15.230
don't forget to detach the current
thread otherwise we're gonna get strange

00:03:15.230 --> 00:03:15.240
thread otherwise we're gonna get strange
 

00:03:15.240 --> 00:03:17.600
thread otherwise we're gonna get strange
crashes in the background after you're

00:03:17.600 --> 00:03:17.610
crashes in the background after you're
 

00:03:17.610 --> 00:03:19.880
crashes in the background after you're
done setting up the J&amp;I you probably

00:03:19.880 --> 00:03:19.890
done setting up the J&amp;I you probably
 

00:03:19.890 --> 00:03:22.160
done setting up the J&amp;I you probably
you're you're probably gonna want to

00:03:22.160 --> 00:03:22.170
you're you're probably gonna want to
 

00:03:22.170 --> 00:03:23.690
you're you're probably gonna want to
have a sign-in button somewhere in your

00:03:23.690 --> 00:03:23.700
have a sign-in button somewhere in your
 

00:03:23.700 --> 00:03:24.949
have a sign-in button somewhere in your
game so the sign-in button

00:03:24.949 --> 00:03:24.959
game so the sign-in button
 

00:03:24.959 --> 00:03:26.810
game so the sign-in button
pretty much looks like that you have

00:03:26.810 --> 00:03:26.820
pretty much looks like that you have
 

00:03:26.820 --> 00:03:28.820
pretty much looks like that you have
some Liberty to customize it but when

00:03:28.820 --> 00:03:28.830
some Liberty to customize it but when
 

00:03:28.830 --> 00:03:30.350
some Liberty to customize it but when
the when the player clicks on it you

00:03:30.350 --> 00:03:30.360
the when the player clicks on it you
 

00:03:30.360 --> 00:03:32.240
the when the player clicks on it you
should start the sign-in flow so the

00:03:32.240 --> 00:03:32.250
should start the sign-in flow so the
 

00:03:32.250 --> 00:03:33.560
should start the sign-in flow so the
sign-in flow is the whole is the whole

00:03:33.560 --> 00:03:33.570
sign-in flow is the whole is the whole
 

00:03:33.570 --> 00:03:34.910
sign-in flow is the whole is the whole
set of dialogues that the player has to

00:03:34.910 --> 00:03:34.920
set of dialogues that the player has to
 

00:03:34.920 --> 00:03:36.800
set of dialogues that the player has to
click through to actually authorize your

00:03:36.800 --> 00:03:36.810
click through to actually authorize your
 

00:03:36.810 --> 00:03:38.720
click through to actually authorize your
game to access the play games API so

00:03:38.720 --> 00:03:38.730
game to access the play games API so
 

00:03:38.730 --> 00:03:40.310
game to access the play games API so
when the user clicks that what you want

00:03:40.310 --> 00:03:40.320
when the user clicks that what you want
 

00:03:40.320 --> 00:03:42.500
when the user clicks that what you want
to call this is a job of course you want

00:03:42.500 --> 00:03:42.510
to call this is a job of course you want
 

00:03:42.510 --> 00:03:43.759
to call this is a job of course you want
to call em help order begin user

00:03:43.759 --> 00:03:43.769
to call em help order begin user
 

00:03:43.769 --> 00:03:45.620
to call em help order begin user
initiated sign-in so that's gonna begin

00:03:45.620 --> 00:03:45.630
initiated sign-in so that's gonna begin
 

00:03:45.630 --> 00:03:47.720
initiated sign-in so that's gonna begin
the whole sign-in flow however since

00:03:47.720 --> 00:03:47.730
the whole sign-in flow however since
 

00:03:47.730 --> 00:03:49.070
the whole sign-in flow however since
you're gonna be calling it from the game

00:03:49.070 --> 00:03:49.080
you're gonna be calling it from the game
 

00:03:49.080 --> 00:03:50.509
you're gonna be calling it from the game
thread so remember that the game's gonna

00:03:50.509 --> 00:03:50.519
thread so remember that the game's gonna
 

00:03:50.519 --> 00:03:51.979
thread so remember that the game's gonna
be running on a separate thread it's not

00:03:51.979 --> 00:03:51.989
be running on a separate thread it's not
 

00:03:51.989 --> 00:03:53.509
be running on a separate thread it's not
the UI thread so you need to wrap that

00:03:53.509 --> 00:03:53.519
the UI thread so you need to wrap that
 

00:03:53.519 --> 00:03:56.420
the UI thread so you need to wrap that
with a run on a UI thread call so that

00:03:56.420 --> 00:03:56.430
with a run on a UI thread call so that
 

00:03:56.430 --> 00:03:58.009
with a run on a UI thread call so that
you can actually call that method from

00:03:58.009 --> 00:03:58.019
you can actually call that method from
 

00:03:58.019 --> 00:03:59.660
you can actually call that method from
the game thread and have it execute on

00:03:59.660 --> 00:03:59.670
the game thread and have it execute on
 

00:03:59.670 --> 00:04:01.940
the game thread and have it execute on
the UI thread so this is why we have

00:04:01.940 --> 00:04:01.950
the UI thread so this is why we have
 

00:04:01.950 --> 00:04:04.580
the UI thread so this is why we have
this method which is called post post

00:04:04.580 --> 00:04:04.590
this method which is called post post
 

00:04:04.590 --> 00:04:06.410
this method which is called post post
start sign in which essentially can be

00:04:06.410 --> 00:04:06.420
start sign in which essentially can be
 

00:04:06.420 --> 00:04:08.030
start sign in which essentially can be
called from any thread and post to the

00:04:08.030 --> 00:04:08.040
called from any thread and post to the
 

00:04:08.040 --> 00:04:10.250
called from any thread and post to the
UI thread and there we call him helper

00:04:10.250 --> 00:04:10.260
UI thread and there we call him helper
 

00:04:10.260 --> 00:04:13.430
UI thread and there we call him helper
to begin user initiated sign in now

00:04:13.430 --> 00:04:13.440
to begin user initiated sign in now
 

00:04:13.440 --> 00:04:15.289
to begin user initiated sign in now
let's show how to actually start the

00:04:15.289 --> 00:04:15.299
let's show how to actually start the
 

00:04:15.299 --> 00:04:17.390
let's show how to actually start the
flow from C++ so nobody is afraid of J

00:04:17.390 --> 00:04:17.400
flow from C++ so nobody is afraid of J
 

00:04:17.400 --> 00:04:20.150
flow from C++ so nobody is afraid of J
and I right so this is how we invoke we

00:04:20.150 --> 00:04:20.160
and I right so this is how we invoke we
 

00:04:20.160 --> 00:04:21.800
and I right so this is how we invoke we
invoke that method using j'ni it's just

00:04:21.800 --> 00:04:21.810
invoke that method using j'ni it's just
 

00:04:21.810 --> 00:04:23.719
invoke that method using j'ni it's just
standard J and I just get the the

00:04:23.719 --> 00:04:23.729
standard J and I just get the the
 

00:04:23.729 --> 00:04:26.090
standard J and I just get the the
activity object the activity class and

00:04:26.090 --> 00:04:26.100
activity object the activity class and
 

00:04:26.100 --> 00:04:27.500
activity object the activity class and
then we get the method ID

00:04:27.500 --> 00:04:27.510
then we get the method ID
 

00:04:27.510 --> 00:04:29.420
then we get the method ID
for for our method and then invoke it

00:04:29.420 --> 00:04:29.430
for for our method and then invoke it
 

00:04:29.430 --> 00:04:31.910
for for our method and then invoke it
notice that when we do that when we do

00:04:31.910 --> 00:04:31.920
notice that when we do that when we do
 

00:04:31.920 --> 00:04:33.470
notice that when we do that when we do
this we actually sidestep one of the

00:04:33.470 --> 00:04:33.480
this we actually sidestep one of the
 

00:04:33.480 --> 00:04:35.180
this we actually sidestep one of the
major difficulties of using j'ni in

00:04:35.180 --> 00:04:35.190
major difficulties of using j'ni in
 

00:04:35.190 --> 00:04:37.550
major difficulties of using j'ni in
android which is that if you just try to

00:04:37.550 --> 00:04:37.560
android which is that if you just try to
 

00:04:37.560 --> 00:04:39.170
android which is that if you just try to
find a class by a name it's not going to

00:04:39.170 --> 00:04:39.180
find a class by a name it's not going to
 

00:04:39.180 --> 00:04:40.520
find a class by a name it's not going to
find it because you can only find the

00:04:40.520 --> 00:04:40.530
find it because you can only find the
 

00:04:40.530 --> 00:04:42.320
find it because you can only find the
actual frame or classes using fine class

00:04:42.320 --> 00:04:42.330
actual frame or classes using fine class
 

00:04:42.330 --> 00:04:43.910
actual frame or classes using fine class
unless you do funny stuff with class

00:04:43.910 --> 00:04:43.920
unless you do funny stuff with class
 

00:04:43.920 --> 00:04:45.710
unless you do funny stuff with class
loaders so notice that we are completely

00:04:45.710 --> 00:04:45.720
loaders so notice that we are completely
 

00:04:45.720 --> 00:04:47.540
loaders so notice that we are completely
sidestepping this whole difficulty by

00:04:47.540 --> 00:04:47.550
sidestepping this whole difficulty by
 

00:04:47.550 --> 00:04:49.490
sidestepping this whole difficulty by
just using our own activity as a

00:04:49.490 --> 00:04:49.500
just using our own activity as a
 

00:04:49.500 --> 00:04:51.830
just using our own activity as a
starting point so we're using our own

00:04:51.830 --> 00:04:51.840
starting point so we're using our own
 

00:04:51.840 --> 00:04:53.270
starting point so we're using our own
activity and calling method that we

00:04:53.270 --> 00:04:53.280
activity and calling method that we
 

00:04:53.280 --> 00:04:56.390
activity and calling method that we
wrote after we call this then we get the

00:04:56.390 --> 00:04:56.400
wrote after we call this then we get the
 

00:04:56.400 --> 00:04:58.790
wrote after we call this then we get the
sign-in flow alright so after you do the

00:04:58.790 --> 00:04:58.800
sign-in flow alright so after you do the
 

00:04:58.800 --> 00:05:00.230
sign-in flow alright so after you do the
sign-in flow you have to know when

00:05:00.230 --> 00:05:00.240
sign-in flow you have to know when
 

00:05:00.240 --> 00:05:01.640
sign-in flow you have to know when
you're actually signed in so that your

00:05:01.640 --> 00:05:01.650
you're actually signed in so that your
 

00:05:01.650 --> 00:05:03.310
you're actually signed in so that your
game can respond to that appropriately

00:05:03.310 --> 00:05:03.320
game can respond to that appropriately
 

00:05:03.320 --> 00:05:05.840
game can respond to that appropriately
you're going to know that when on the

00:05:05.840 --> 00:05:05.850
you're going to know that when on the
 

00:05:05.850 --> 00:05:07.520
you're going to know that when on the
Java side you get this onsigninsucceeded

00:05:07.520 --> 00:05:07.530
Java side you get this onsigninsucceeded
 

00:05:07.530 --> 00:05:09.710
Java side you get this onsigninsucceeded
callback so that's the callback title

00:05:09.710 --> 00:05:09.720
callback so that's the callback title
 

00:05:09.720 --> 00:05:10.940
callback so that's the callback title
that tells you that sign-in has

00:05:10.940 --> 00:05:10.950
that tells you that sign-in has
 

00:05:10.950 --> 00:05:13.460
that tells you that sign-in has
succeeded or else that this onion has

00:05:13.460 --> 00:05:13.470
succeeded or else that this onion has
 

00:05:13.470 --> 00:05:15.770
succeeded or else that this onion has
failed so how do you actually notify the

00:05:15.770 --> 00:05:15.780
failed so how do you actually notify the
 

00:05:15.780 --> 00:05:19.940
failed so how do you actually notify the
code you have well you can to notify the

00:05:19.940 --> 00:05:19.950
code you have well you can to notify the
 

00:05:19.950 --> 00:05:22.820
code you have well you can to notify the
native code that this has happened what

00:05:22.820 --> 00:05:22.830
native code that this has happened what
 

00:05:22.830 --> 00:05:24.980
native code that this has happened what
you usually gonna have to do is to write

00:05:24.980 --> 00:05:24.990
you usually gonna have to do is to write
 

00:05:24.990 --> 00:05:27.170
you usually gonna have to do is to write
the native method that the Java side can

00:05:27.170 --> 00:05:27.180
the native method that the Java side can
 

00:05:27.180 --> 00:05:28.970
the native method that the Java side can
call and then notify your native code

00:05:28.970 --> 00:05:28.980
call and then notify your native code
 

00:05:28.980 --> 00:05:31.340
call and then notify your native code
that this happened whether one of the

00:05:31.340 --> 00:05:31.350
that this happened whether one of the
 

00:05:31.350 --> 00:05:33.650
that this happened whether one of the
ways to do this actually I think it's

00:05:33.650 --> 00:05:33.660
ways to do this actually I think it's
 

00:05:33.660 --> 00:05:35.450
ways to do this actually I think it's
pretty useful pattern it's not to have

00:05:35.450 --> 00:05:35.460
pretty useful pattern it's not to have
 

00:05:35.460 --> 00:05:37.070
pretty useful pattern it's not to have
just a boolean saying yes or no is

00:05:37.070 --> 00:05:37.080
just a boolean saying yes or no is
 

00:05:37.080 --> 00:05:39.470
just a boolean saying yes or no is
actually to have a three state variable

00:05:39.470 --> 00:05:39.480
actually to have a three state variable
 

00:05:39.480 --> 00:05:41.290
actually to have a three state variable
saying it's either Semyon has failed

00:05:41.290 --> 00:05:41.300
saying it's either Semyon has failed
 

00:05:41.300 --> 00:05:44.150
saying it's either Semyon has failed
Semyon has succeeded or sign-in is in

00:05:44.150 --> 00:05:44.160
Semyon has succeeded or sign-in is in
 

00:05:44.160 --> 00:05:46.010
Semyon has succeeded or sign-in is in
progress and then from native code he

00:05:46.010 --> 00:05:46.020
progress and then from native code he
 

00:05:46.020 --> 00:05:47.420
progress and then from native code he
can react appropriately to those states

00:05:47.420 --> 00:05:47.430
can react appropriately to those states
 

00:05:47.430 --> 00:05:49.730
can react appropriately to those states
so we're declaring these states as

00:05:49.730 --> 00:05:49.740
so we're declaring these states as
 

00:05:49.740 --> 00:05:51.350
so we're declaring these states as
constants here and then we're calling

00:05:51.350 --> 00:05:51.360
constants here and then we're calling
 

00:05:51.360 --> 00:05:52.940
constants here and then we're calling
we're also declaring a native method

00:05:52.940 --> 00:05:52.950
we're also declaring a native method
 

00:05:52.950 --> 00:05:56.000
we're also declaring a native method
from Java which is reports any result so

00:05:56.000 --> 00:05:56.010
from Java which is reports any result so
 

00:05:56.010 --> 00:05:57.170
from Java which is reports any result so
we're going to call that method whenever

00:05:57.170 --> 00:05:57.180
we're going to call that method whenever
 

00:05:57.180 --> 00:05:59.300
we're going to call that method whenever
we want to report a sign-in results or

00:05:59.300 --> 00:05:59.310
we want to report a sign-in results or
 

00:05:59.310 --> 00:06:02.210
we want to report a sign-in results or
progress to to native code so this is

00:06:02.210 --> 00:06:02.220
progress to to native code so this is
 

00:06:02.220 --> 00:06:05.360
progress to to native code so this is
how we do it so when we when we are on

00:06:05.360 --> 00:06:05.370
how we do it so when we when we are on
 

00:06:05.370 --> 00:06:07.520
how we do it so when we when we are on
on start we say that sign-in is in

00:06:07.520 --> 00:06:07.530
on start we say that sign-in is in
 

00:06:07.530 --> 00:06:09.230
on start we say that sign-in is in
progress why because every time your

00:06:09.230 --> 00:06:09.240
progress why because every time your
 

00:06:09.240 --> 00:06:11.270
progress why because every time your
application gets an on starts like comes

00:06:11.270 --> 00:06:11.280
application gets an on starts like comes
 

00:06:11.280 --> 00:06:12.410
application gets an on starts like comes
back from the background or anything

00:06:12.410 --> 00:06:12.420
back from the background or anything
 

00:06:12.420 --> 00:06:12.950
back from the background or anything
like that

00:06:12.950 --> 00:06:12.960
like that
 

00:06:12.960 --> 00:06:16.100
like that
sign-in is not ready yet so Simon is in

00:06:16.100 --> 00:06:16.110
sign-in is not ready yet so Simon is in
 

00:06:16.110 --> 00:06:17.900
sign-in is not ready yet so Simon is in
progress because the the play gives the

00:06:17.900 --> 00:06:17.910
progress because the the play gives the
 

00:06:17.910 --> 00:06:20.660
progress because the the play gives the
API has to reconnect it's only when you

00:06:20.660 --> 00:06:20.670
API has to reconnect it's only when you
 

00:06:20.670 --> 00:06:22.520
API has to reconnect it's only when you
get onsigninsucceeded after on start

00:06:22.520 --> 00:06:22.530
get onsigninsucceeded after on start
 

00:06:22.530 --> 00:06:23.810
get onsigninsucceeded after on start
that you can actually start to make a

00:06:23.810 --> 00:06:23.820
that you can actually start to make a
 

00:06:23.820 --> 00:06:25.700
that you can actually start to make a
call so whenever you get on start this

00:06:25.700 --> 00:06:25.710
call so whenever you get on start this
 

00:06:25.710 --> 00:06:27.080
call so whenever you get on start this
is when you report a native code that

00:06:27.080 --> 00:06:27.090
is when you report a native code that
 

00:06:27.090 --> 00:06:28.940
is when you report a native code that
said that the sign-in is currently in

00:06:28.940 --> 00:06:28.950
said that the sign-in is currently in
 

00:06:28.950 --> 00:06:32.390
said that the sign-in is currently in
progress then of course when you get on

00:06:32.390 --> 00:06:32.400
progress then of course when you get on
 

00:06:32.400 --> 00:06:33.860
progress then of course when you get on
stop it's the same thing you also say

00:06:33.860 --> 00:06:33.870
stop it's the same thing you also say
 

00:06:33.870 --> 00:06:35.510
stop it's the same thing you also say
that sign-in is in progress even though

00:06:35.510 --> 00:06:35.520
that sign-in is in progress even though
 

00:06:35.520 --> 00:06:38.390
that sign-in is in progress even though
it had succeeded before why because when

00:06:38.390 --> 00:06:38.400
it had succeeded before why because when
 

00:06:38.400 --> 00:06:40.430
it had succeeded before why because when
you get on stop a sign-in is no longer

00:06:40.430 --> 00:06:40.440
you get on stop a sign-in is no longer
 

00:06:40.440 --> 00:06:41.060
you get on stop a sign-in is no longer
working and

00:06:41.060 --> 00:06:41.070
working and
 

00:06:41.070 --> 00:06:42.620
working and
it's in progress because it's gonna come

00:06:42.620 --> 00:06:42.630
it's in progress because it's gonna come
 

00:06:42.630 --> 00:06:47.020
it's in progress because it's gonna come
back later then when you get on sign-in

00:06:47.020 --> 00:06:47.030
back later then when you get on sign-in
 

00:06:47.030 --> 00:06:49.040
back later then when you get on sign-in
actually when you start the sign-in

00:06:49.040 --> 00:06:49.050
actually when you start the sign-in
 

00:06:49.050 --> 00:06:50.660
actually when you start the sign-in
process using post starts I mean which

00:06:50.660 --> 00:06:50.670
process using post starts I mean which
 

00:06:50.670 --> 00:06:52.490
process using post starts I mean which
is the method that we just showed you

00:06:52.490 --> 00:06:52.500
is the method that we just showed you
 

00:06:52.500 --> 00:06:53.810
is the method that we just showed you
also say that it's in progress because

00:06:53.810 --> 00:06:53.820
also say that it's in progress because
 

00:06:53.820 --> 00:06:56.060
also say that it's in progress because
well the your UI flow is happening right

00:06:56.060 --> 00:06:56.070
well the your UI flow is happening right
 

00:06:56.070 --> 00:06:57.200
well the your UI flow is happening right
now and at the end of it you're gonna

00:06:57.200 --> 00:06:57.210
now and at the end of it you're gonna
 

00:06:57.210 --> 00:07:00.620
now and at the end of it you're gonna
get on sign it succeeded or fails next

00:07:00.620 --> 00:07:00.630
get on sign it succeeded or fails next
 

00:07:00.630 --> 00:07:01.850
get on sign it succeeded or fails next
of course when you get on Sammy

00:07:01.850 --> 00:07:01.860
of course when you get on Sammy
 

00:07:01.860 --> 00:07:03.320
of course when you get on Sammy
succeeded that's when you report that

00:07:03.320 --> 00:07:03.330
succeeded that's when you report that
 

00:07:03.330 --> 00:07:05.120
succeeded that's when you report that
the sign-in state is success when you

00:07:05.120 --> 00:07:05.130
the sign-in state is success when you
 

00:07:05.130 --> 00:07:06.590
the sign-in state is success when you
get on sign-in failed to report that

00:07:06.590 --> 00:07:06.600
get on sign-in failed to report that
 

00:07:06.600 --> 00:07:08.570
get on sign-in failed to report that
sign-in was a failure and then your

00:07:08.570 --> 00:07:08.580
sign-in was a failure and then your
 

00:07:08.580 --> 00:07:10.130
sign-in was a failure and then your
native code is where it's going to have

00:07:10.130 --> 00:07:10.140
native code is where it's going to have
 

00:07:10.140 --> 00:07:14.060
native code is where it's going to have
to know how to handle those states so

00:07:14.060 --> 00:07:14.070
to know how to handle those states so
 

00:07:14.070 --> 00:07:16.850
to know how to handle those states so
next how do you actually handle that

00:07:16.850 --> 00:07:16.860
next how do you actually handle that
 

00:07:16.860 --> 00:07:19.040
next how do you actually handle that
from native code it's just a j9 in a

00:07:19.040 --> 00:07:19.050
from native code it's just a j9 in a
 

00:07:19.050 --> 00:07:21.350
from native code it's just a j9 in a
native method so all you have to do is

00:07:21.350 --> 00:07:21.360
native method so all you have to do is
 

00:07:21.360 --> 00:07:23.450
native method so all you have to do is
write the that method signature that you

00:07:23.450 --> 00:07:23.460
write the that method signature that you
 

00:07:23.460 --> 00:07:26.150
write the that method signature that you
can generate with java h and then when

00:07:26.150 --> 00:07:26.160
can generate with java h and then when
 

00:07:26.160 --> 00:07:27.890
can generate with java h and then when
in that method gets called all you have

00:07:27.890 --> 00:07:27.900
in that method gets called all you have
 

00:07:27.900 --> 00:07:30.980
in that method gets called all you have
to do is react to that one caveat is

00:07:30.980 --> 00:07:30.990
to do is react to that one caveat is
 

00:07:30.990 --> 00:07:32.180
to do is react to that one caveat is
that you're going to be running on the

00:07:32.180 --> 00:07:32.190
that you're going to be running on the
 

00:07:32.190 --> 00:07:35.000
that you're going to be running on the
UI thread on that method so be careful

00:07:35.000 --> 00:07:35.010
UI thread on that method so be careful
 

00:07:35.010 --> 00:07:36.740
UI thread on that method so be careful
not to try to like manipulate your game

00:07:36.740 --> 00:07:36.750
not to try to like manipulate your game
 

00:07:36.750 --> 00:07:38.840
not to try to like manipulate your game
state and so on in a way that make lash

00:07:38.840 --> 00:07:38.850
state and so on in a way that make lash
 

00:07:38.850 --> 00:07:42.800
state and so on in a way that make lash
with your game thread so usually one of

00:07:42.800 --> 00:07:42.810
with your game thread so usually one of
 

00:07:42.810 --> 00:07:44.720
with your game thread so usually one of
the useful methods they're just use some

00:07:44.720 --> 00:07:44.730
the useful methods they're just use some
 

00:07:44.730 --> 00:07:47.090
the useful methods they're just use some
sort of synchronization or write to a

00:07:47.090 --> 00:07:47.100
sort of synchronization or write to a
 

00:07:47.100 --> 00:07:48.170
sort of synchronization or write to a
right one's variable or something

00:07:48.170 --> 00:07:48.180
right one's variable or something
 

00:07:48.180 --> 00:07:49.400
right one's variable or something
something like that but it's important

00:07:49.400 --> 00:07:49.410
something like that but it's important
 

00:07:49.410 --> 00:07:50.900
something like that but it's important
to note is that it's got to be on the UI

00:07:50.900 --> 00:07:50.910
to note is that it's got to be on the UI
 

00:07:50.910 --> 00:07:52.580
to note is that it's got to be on the UI
thread so don't do anything funny there

00:07:52.580 --> 00:07:52.590
thread so don't do anything funny there
 

00:07:52.590 --> 00:07:54.650
thread so don't do anything funny there
all right so that's pretty much all

00:07:54.650 --> 00:07:54.660
all right so that's pretty much all
 

00:07:54.660 --> 00:07:56.330
all right so that's pretty much all
there is for for thee for this first

00:07:56.330 --> 00:07:56.340
there is for for thee for this first
 

00:07:56.340 --> 00:07:58.730
there is for for thee for this first
episode please watch the the other ones

00:07:58.730 --> 00:07:58.740
episode please watch the the other ones
 

00:07:58.740 --> 00:08:00.530
episode please watch the the other ones
because then I'm gonna go more in-depth

00:08:00.530 --> 00:08:00.540
because then I'm gonna go more in-depth
 

00:08:00.540 --> 00:08:01.850
because then I'm gonna go more in-depth
into achievements leaderboards and to

00:08:01.850 --> 00:08:01.860
into achievements leaderboards and to
 

00:08:01.860 --> 00:08:04.760
into achievements leaderboards and to
how we can actually do this on a deeper

00:08:04.760 --> 00:08:04.770
how we can actually do this on a deeper
 

00:08:04.770 --> 00:08:08.420
how we can actually do this on a deeper
level thank you very much

