WEBVTT
Kind: captions
Language: en

00:00:00.290 --> 00:00:04.040
Furthermore, we wouldn't expect those bindings to remain true across every

00:00:04.040 --> 00:00:06.600
single invocation of this function.

00:00:06.600 --> 00:00:08.480
If all of this seems completely obvious to you,

00:00:08.480 --> 00:00:11.620
then you're in a great position for understanding the parameter this.

00:00:11.620 --> 00:00:13.010
Because in JavaScript,

00:00:13.010 --> 00:00:18.210
the keyword this behaves like a parameter in most of the important ways.

00:00:18.210 --> 00:00:21.810
The intuitions that you've built up around how to pass values into a function

00:00:21.810 --> 00:00:25.820
and how they'll get bound to the arguments being passed in at call time,

00:00:25.820 --> 00:00:28.780
all those same intuitions will hold true for the parameter this.

00:00:28.780 --> 00:00:31.750
So let's keep track of the output that we're expecting to see by putting it

00:00:31.750 --> 00:00:34.600
in a code comment here to the right of the line they created.

00:00:34.600 --> 00:00:37.620
We're ready to investigate what would happen if our function referred to

00:00:37.620 --> 00:00:40.810
the parameter this inside the function body.

00:00:40.810 --> 00:00:44.380
If we pass this as an additional input parameter at the beginning of

00:00:44.380 --> 00:00:49.100
the logging function call, in this case, what should we expect to be logged and

00:00:49.100 --> 00:00:52.260
bound to the parameter this while the fn function is running?

00:00:52.260 --> 00:00:53.500
Go ahead and write out your answer.

