WEBVTT
Kind: captions
Language: en

00:00:00.170 --> 00:00:02.840
As we begin now looking
at how to evaluate

00:00:02.840 --> 00:00:07.200
various machine learning algorithms,
let's start back with KNN and

00:00:07.200 --> 00:00:12.425
look a little more closely at
the sorts of solutions it provides.

00:00:12.425 --> 00:00:17.380
Let's start with our training data,
and remember we've got pairs of X and

00:00:17.380 --> 00:00:21.530
Y, so each one of these dots
represents one training tuple.

00:00:21.530 --> 00:00:23.590
And I'm just making this data up,
of course.

00:00:24.590 --> 00:00:30.130
But suppose we were going to query
this KNN model over in this region.

00:00:30.130 --> 00:00:32.540
Say right here at this point.

00:00:32.540 --> 00:00:34.290
Well, the nearest three.

00:00:34.290 --> 00:00:36.260
Let's use K=3 here.

00:00:37.350 --> 00:00:39.219
The nearest three are going to be these.

00:00:40.520 --> 00:00:41.270
And remember,

00:00:41.270 --> 00:00:45.860
we take the mean of their value to
get the value at that query point.

00:00:45.860 --> 00:00:49.350
So if we query from here
all the way to about here,

00:00:50.390 --> 00:00:53.380
our model is going to take
the mean y value of those,

00:00:53.380 --> 00:00:56.960
so the output of our model is
going to look something like this.

00:00:58.130 --> 00:01:02.380
And notice it gives the same
value at all these points.

00:01:02.380 --> 00:01:08.160
Eventually, as we query from left
to right, we get to a point where

00:01:08.160 --> 00:01:13.490
this one gets dropped out,
and this one gets added in.

00:01:13.490 --> 00:01:20.210
And at that point we'll have a sudden
drop about like that in the model.

00:01:20.210 --> 00:01:22.850
And we continue on like this.

00:01:22.850 --> 00:01:24.560
We'll have another drop like that.

00:01:25.790 --> 00:01:28.680
If we query our model now
from left to right in very,

00:01:28.680 --> 00:01:33.290
very tiny increments we'll get the
result that looks something like this.

00:01:33.290 --> 00:01:37.530
Note that indeed there
are sort of jump points here.

00:01:37.530 --> 00:01:41.160
Some nice things about this are that
it's not over fitting the data.

00:01:41.160 --> 00:01:43.800
In other words,
it's not tagging each point.

00:01:43.800 --> 00:01:48.550
A negative aspect though is at
the ends there we have these

00:01:48.550 --> 00:01:53.830
horizontal lines that are no longer
changing or essentially this

00:01:53.830 --> 00:01:58.630
model is not able to extrapolate like
we might if we had a parametric model.

