WEBVTT
Kind: captions
Language: en

00:00:00.520 --> 00:00:03.250
JOANNA G. SMITH: Users worry
about battery constantly.

00:00:03.250 --> 00:00:06.110
And that means that we, as
developers, should constantly

00:00:06.110 --> 00:00:07.800
be vigilant about battery use.

00:00:07.800 --> 00:00:11.120
So we decided to build that
vigilance into the framework.

00:00:11.120 --> 00:00:14.106
In Marshmallow, we introduced
Doze because, at some point,

00:00:14.106 --> 00:00:16.480
the user will probably place
the device on a coffee table

00:00:16.480 --> 00:00:17.460
or nightstand.

00:00:17.460 --> 00:00:19.260
This means they've
turned the screen off,

00:00:19.260 --> 00:00:22.300
the device isn't plugged
in, but it is stationary.

00:00:22.300 --> 00:00:25.370
So when they pick the device
up again off of that table,

00:00:25.370 --> 00:00:29.070
their battery should not have
magically dropped by 30%.

00:00:29.070 --> 00:00:31.960
And that's why Android will
defer background jobs and syncs

00:00:31.960 --> 00:00:33.890
as well as alarms
and Wi-Fi scans

00:00:33.890 --> 00:00:36.310
until a scheduled
maintenance window

00:00:36.310 --> 00:00:39.510
so that all background
activity happens in one batch.

00:00:39.510 --> 00:00:41.460
By having these specific
maintenance windows,

00:00:41.460 --> 00:00:44.540
we can extend the battery
quite significantly.

00:00:44.540 --> 00:00:47.470
But now we have extended
Doze for a more common use

00:00:47.470 --> 00:00:50.000
case-- leaving your
phone in your pocket.

00:00:50.000 --> 00:00:52.080
When the screen is off,
after a short while,

00:00:52.080 --> 00:00:54.490
a light version of Doze
will trigger with a smaller

00:00:54.490 --> 00:00:55.510
set of restrictions.

00:00:55.510 --> 00:00:57.480
And we will have regular
maintenance windows

00:00:57.480 --> 00:00:58.730
during this time.

00:00:58.730 --> 00:01:01.359
But all of our advice
still applies here.

00:01:01.359 --> 00:01:03.150
If you've done the work
to account for Doze

00:01:03.150 --> 00:01:04.760
and app standby in
Marshmallow, you

00:01:04.760 --> 00:01:07.540
won't need to do
anything extra now.

00:01:07.540 --> 00:01:11.020
Note that this does not replace
Doze as it was in Marshmallow.

00:01:11.020 --> 00:01:13.460
If the device becomes stationary
for some period of time,

00:01:13.460 --> 00:01:16.270
the full set of restrictions
will apply again.

00:01:16.270 --> 00:01:18.726
So it helps to understand
what the distinction is.

00:01:18.726 --> 00:01:20.600
The lighter Doze mode
has maintenance windows

00:01:20.600 --> 00:01:22.210
that trigger on
shorter intervals

00:01:22.210 --> 00:01:24.470
so that your app can be
ready when the user returns

00:01:24.470 --> 00:01:25.830
to using their device.

00:01:25.830 --> 00:01:30.130
And wakelocks, GPS, Wi-Fi scans,
and alarms all work normally

00:01:30.130 --> 00:01:31.300
in the lighter mode.

00:01:31.300 --> 00:01:34.170
Here we are focusing on
background syncs and jobs

00:01:34.170 --> 00:01:36.630
and, more generally,
network access

00:01:36.630 --> 00:01:39.420
because these are both
large drains on the battery

00:01:39.420 --> 00:01:41.530
while being the most
flexible things to differ

00:01:41.530 --> 00:01:45.280
and optimize when a
user is out and about.

00:01:45.280 --> 00:01:47.810
As expected, though, a
high-priority GCM message

00:01:47.810 --> 00:01:50.480
is still the best way to deliver
time-critical information

00:01:50.480 --> 00:01:51.280
to your app.

00:01:51.280 --> 00:01:53.520
When you do, your app
gets a brief reprieve

00:01:53.520 --> 00:01:55.510
to use the network
and see what's up.

00:01:55.510 --> 00:01:57.280
This allows your
server to be confident

00:01:57.280 --> 00:01:59.370
that the important
things reach the user.

00:01:59.370 --> 00:02:01.820
And, of course, any
foreground service

00:02:01.820 --> 00:02:05.349
will continue to work regardless
of battery optimizations.

00:02:05.349 --> 00:02:07.140
So whether the device
is stationary or not,

00:02:07.140 --> 00:02:09.098
if that screen has been
turned off for a while,

00:02:09.098 --> 00:02:11.260
we intend to honor the
fact that the user isn't

00:02:11.260 --> 00:02:12.470
engaged with the device.

00:02:12.470 --> 00:02:15.150
And that is an opportunity
to conserve power.

00:02:15.150 --> 00:02:17.570
So test your app to be sure
it works how you expect it to,

00:02:17.570 --> 00:02:19.560
and consider tweaking
a few behaviors so

00:02:19.560 --> 00:02:23.120
that you can continue
to build better apps.

00:02:23.120 --> 00:02:25.570
[MUSIC PLAYING]

