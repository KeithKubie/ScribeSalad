WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.455
[MUSIC PLAYING]

00:00:08.602 --> 00:00:10.060
BEN MORSS: Who here
in the audience

00:00:10.060 --> 00:00:13.791
has heard the
acronym PWA before?

00:00:13.791 --> 00:00:14.290
All right.

00:00:14.290 --> 00:00:15.190
About 2/3, maybe.

00:00:15.190 --> 00:00:17.330
How about AMP?

00:00:17.330 --> 00:00:17.830
OK.

00:00:17.830 --> 00:00:18.529
Very good.

00:00:18.529 --> 00:00:20.320
In the context of
Accelerated Mobile Pages,

00:00:20.320 --> 00:00:21.650
not a guitar amp, perhaps.

00:00:21.650 --> 00:00:23.650
I guess Mike and the
Mechanics were playing here

00:00:23.650 --> 00:00:24.310
a couple of days ago.

00:00:24.310 --> 00:00:25.499
They had amps back here.

00:00:25.499 --> 00:00:26.790
This is the other kind of AMP--

00:00:26.790 --> 00:00:28.600
Accelerated Mobile Pages.

00:00:28.600 --> 00:00:31.120
And we're going to discuss
something today called

00:00:31.120 --> 00:00:32.830
PWA and AMP--

00:00:32.830 --> 00:00:37.810
putting them together-- how this
pattern is powerful, elegant,

00:00:37.810 --> 00:00:39.250
and easy to do.

00:00:39.250 --> 00:00:41.440
And I'll show you an
example of how to do

00:00:41.440 --> 00:00:44.710
this called the shadow reader.

00:00:44.710 --> 00:00:48.550
The first question is, why?

00:00:48.550 --> 00:00:52.660
Progressive Web Apps are
these immersive, full-screen,

00:00:52.660 --> 00:00:54.900
app-like experiences on the web.

00:00:54.900 --> 00:00:57.010
And Accelerated
Mobile Pages are best

00:00:57.010 --> 00:01:00.580
known for somewhat
simpler kinds of pages,

00:01:00.580 --> 00:01:02.690
maybe for publishers,
maybe a way

00:01:02.690 --> 00:01:05.920
to get into Google's AMP
cache, and, in general,

00:01:05.920 --> 00:01:08.830
kind of a simplification of the
web for performance reasons.

00:01:08.830 --> 00:01:13.190
So how do these
things fit together

00:01:13.190 --> 00:01:14.860
and why bother with this?

00:01:14.860 --> 00:01:18.155
It's because of what I
call the web app dilemma.

00:01:20.830 --> 00:01:23.590
So let's go back
about 18 years ago.

00:01:23.590 --> 00:01:26.440
Back then, web
pages were simple.

00:01:26.440 --> 00:01:29.220
If there was any complexity,
it was on the back end.

00:01:29.220 --> 00:01:32.820
You had your pearl, maybe
some PHP making things happen,

00:01:32.820 --> 00:01:34.440
generating HTML.

00:01:34.440 --> 00:01:36.600
The front end was HTML--

00:01:36.600 --> 00:01:41.040
just HTML, maybe some CSS,
which was brand new back then,

00:01:41.040 --> 00:01:44.310
and not a whole lot of this
little cute little language

00:01:44.310 --> 00:01:45.930
called JavaScript.

00:01:45.930 --> 00:01:48.210
And JavaScript wasn't
like a real language.

00:01:48.210 --> 00:01:50.160
It was like a toy
language back then.

00:01:50.160 --> 00:01:52.310
It was used for little things.

00:01:52.310 --> 00:01:53.880
Remember this thing over here--

00:01:53.880 --> 00:01:55.740
you could move your
cursor over the button

00:01:55.740 --> 00:01:57.450
and it would change color.

00:01:57.450 --> 00:01:59.010
That was pretty cool.

00:01:59.010 --> 00:02:00.690
That was JavaScript.

00:02:00.690 --> 00:02:03.120
That was pretty easy.

00:02:03.120 --> 00:02:05.170
Today, it's more complicated.

00:02:05.170 --> 00:02:07.210
There's a lot to learn,
a lot of choices.

00:02:07.210 --> 00:02:09.460
You can make a very, very
full-featured front-end, web

00:02:09.460 --> 00:02:11.970
app with many, many
different frameworks,

00:02:11.970 --> 00:02:13.470
all kinds of JavaScript.

00:02:13.470 --> 00:02:15.440
It can get pretty complicated.

00:02:15.440 --> 00:02:17.150
And when it gets
complicated, there

00:02:17.150 --> 00:02:19.200
are some downsides to that.

00:02:19.200 --> 00:02:20.740
This might be you.

00:02:20.740 --> 00:02:23.670
Maybe you're spending a lot of
time learning new technologies,

00:02:23.670 --> 00:02:25.710
maintaining a
complicated app, trying

00:02:25.710 --> 00:02:28.620
to follow all your callbacks,
tracing through all the code,

00:02:28.620 --> 00:02:32.760
trying to use various tweaks to
get things to perform better.

00:02:32.760 --> 00:02:35.190
And, speaking of
performance, unfortunately,

00:02:35.190 --> 00:02:37.230
for your convenience
as a developer,

00:02:37.230 --> 00:02:39.650
the user pays a price.

00:02:39.650 --> 00:02:43.730
So notice how web apps have
gotten bigger in the last six

00:02:43.730 --> 00:02:44.570
years.

00:02:44.570 --> 00:02:46.370
They've more than
tripled in size.

00:02:46.370 --> 00:02:48.780
A lot of those things
like images, video--

00:02:48.780 --> 00:02:52.190
but also JavaScript has
gotten very, very big.

00:02:52.190 --> 00:02:55.710
Do you have a site right
now that has 15, 20,

00:02:55.710 --> 00:02:59.290
maybe 30 JavaScript files
on it, 400k of JavaScript,

00:02:59.290 --> 00:03:00.790
maybe some large
frameworks that are

00:03:00.790 --> 00:03:03.830
loading before anything
happens, using up CPU time,

00:03:03.830 --> 00:03:05.510
using up battery power?

00:03:05.510 --> 00:03:10.071
It takes a lot these
days for a good web app.

00:03:10.071 --> 00:03:11.570
I was thinking about
this, actually,

00:03:11.570 --> 00:03:13.670
yesterday while walking
around the city.

00:03:13.670 --> 00:03:17.820
And this is the picture
I took here in Krakow.

00:03:17.820 --> 00:03:19.570
And there's music
supposed to be playing--

00:03:19.570 --> 00:03:21.827
oh, there it is, lovely Mozart.

00:03:21.827 --> 00:03:23.410
So why are we playing
Mozart right now

00:03:23.410 --> 00:03:25.150
at a developers' conference?

00:03:25.150 --> 00:03:26.920
Because when I saw
the architecture here,

00:03:26.920 --> 00:03:29.290
it reminded me of
the movie "Amadeus."

00:03:29.290 --> 00:03:31.510
Anybody seen the movie
"Amadeus" before?

00:03:31.510 --> 00:03:32.970
"Amadeus," anybody?

00:03:32.970 --> 00:03:34.500
It's about Mozart's life.

00:03:34.500 --> 00:03:36.539
I used to be a music
professor and I showed this

00:03:36.539 --> 00:03:38.830
to my students every year
because otherwise they didn't

00:03:38.830 --> 00:03:40.150
really grasp classical music.

00:03:40.150 --> 00:03:42.380
They couldn't stand
classical music.

00:03:42.380 --> 00:03:45.820
But, Mozart-- I was thinking
about elegance and beauty

00:03:45.820 --> 00:03:47.057
and things like that.

00:03:47.057 --> 00:03:49.390
And maybe you can make it a
little quieter-- the music--

00:03:49.390 --> 00:03:51.220
Mozart's getting
louder and louder.

00:03:51.220 --> 00:03:54.400
Elegant, beautiful
things are important.

00:03:54.400 --> 00:03:55.510
They endure.

00:03:55.510 --> 00:03:56.644
Simplicity is good.

00:03:56.644 --> 00:03:59.060
Because when things are simple,
they're more maintainable,

00:03:59.060 --> 00:04:00.670
also, for your users.

00:04:00.670 --> 00:04:03.520
Elegance also means
you have fewer bugs.

00:04:03.520 --> 00:04:05.720
In five years, your
code will still work.

00:04:05.720 --> 00:04:07.900
So simplicity actually matters.

00:04:07.900 --> 00:04:08.944
Elegance matters.

00:04:08.944 --> 00:04:10.360
And isn't one of
the goals of life

00:04:10.360 --> 00:04:13.340
making something beautiful?

00:04:13.340 --> 00:04:16.490
That's one of the goals, also,
of this PWA-AMP pattern--

00:04:16.490 --> 00:04:18.950
helping make things beautiful
and simple and elegant

00:04:18.950 --> 00:04:20.899
again on the web.

00:04:20.899 --> 00:04:23.220
So, well, if the
web is too hard,

00:04:23.220 --> 00:04:24.740
can I make an app instead?

00:04:24.740 --> 00:04:26.627
Wouldn't that be easier?

00:04:26.627 --> 00:04:29.210
If you saw Sam's talk today, you
know that almost all the time

00:04:29.210 --> 00:04:32.590
users spend in apps is
in a few major apps--

00:04:32.590 --> 00:04:34.790
their GMail, their
Facebook, their WhatsApp.

00:04:34.790 --> 00:04:36.440
If you're making
an app out there,

00:04:36.440 --> 00:04:39.410
the chances are very small
people will ever, ever

00:04:39.410 --> 00:04:40.790
use it or download it.

00:04:40.790 --> 00:04:42.680
Because, as Sam
was saying before,

00:04:42.680 --> 00:04:44.210
the average number
of apps a user

00:04:44.210 --> 00:04:47.150
installs in the
average month is zero.

00:04:47.150 --> 00:04:49.490
So the web is still a
pretty important thing

00:04:49.490 --> 00:04:53.850
on mobile phones and will
not go away anytime soon.

00:04:53.850 --> 00:04:55.640
So maybe make a simple website.

00:04:55.640 --> 00:04:56.750
That's not going to work.

00:04:56.750 --> 00:04:58.800
Users expect something
better these days.

00:04:58.800 --> 00:05:01.310
They want a real
web app experience.

00:05:01.310 --> 00:05:02.900
What do we do?

00:05:02.900 --> 00:05:05.240
Like a baby, we can cry.

00:05:05.240 --> 00:05:08.030
Or maybe there's an easier way--

00:05:08.030 --> 00:05:10.690
happy baby-- is there one?

00:05:10.690 --> 00:05:11.232
There is not.

00:05:11.232 --> 00:05:11.731
OK.

00:05:11.731 --> 00:05:12.710
Thanks a lot, guys.

00:05:12.710 --> 00:05:13.430
Wait, wait, wait, wait, wait--

00:05:13.430 --> 00:05:15.050
I've got some more
slides to show.

00:05:15.050 --> 00:05:16.160
I'm just kidding.

00:05:16.160 --> 00:05:20.490
I think the easier way
here is PWA and AMP.

00:05:20.490 --> 00:05:22.560
What is that?

00:05:22.560 --> 00:05:25.740
PWA-- you've seen before
in the talks today--

00:05:25.740 --> 00:05:28.359
provides an app-like
experience on the web.

00:05:28.359 --> 00:05:29.650
I won't go into this in detail.

00:05:29.650 --> 00:05:30.750
You've seen this before.

00:05:30.750 --> 00:05:32.100
But things load quickly.

00:05:32.100 --> 00:05:34.320
They're engaging-- as
a good app would be.

00:05:34.320 --> 00:05:35.340
They're quick.

00:05:35.340 --> 00:05:36.990
Users aren't waiting around.

00:05:36.990 --> 00:05:38.460
They work offline.

00:05:38.460 --> 00:05:41.430
All these things people expect
from mobile phone experiences,

00:05:41.430 --> 00:05:44.370
like they're on Messaging,
like they're on some other app.

00:05:44.370 --> 00:05:46.850
They want these things
also from a website--

00:05:46.850 --> 00:05:49.860
a fast, good experience.

00:05:49.860 --> 00:05:51.570
So what is AMP--

00:05:51.570 --> 00:05:53.447
Accelerated Mobile Pages?

00:05:53.447 --> 00:05:55.530
People think about it
sometimes as this thing that

00:05:55.530 --> 00:05:57.120
was started for publishers.

00:05:57.120 --> 00:05:59.070
Most major publishers
in the world

00:05:59.070 --> 00:06:01.820
use AMP in some way or another.

00:06:01.820 --> 00:06:02.820
But it's more than that.

00:06:02.820 --> 00:06:04.410
It's not just for publishers.

00:06:04.410 --> 00:06:08.280
It isn't just a way to actually
make simple, live web pages,

00:06:08.280 --> 00:06:11.640
or to get into Google's
search AMP carousel,

00:06:11.640 --> 00:06:13.380
or make Google
happy in some way.

00:06:13.380 --> 00:06:16.380
It's a new pattern to
make the web easier

00:06:16.380 --> 00:06:23.510
and simpler and faster for
users and also for all of you.

00:06:23.510 --> 00:06:25.060
What is AMP?

00:06:25.060 --> 00:06:27.430
A brief summary--
it's an ecosystem

00:06:27.430 --> 00:06:30.370
for fast, beautiful,
responsive pages.

00:06:30.370 --> 00:06:32.050
As you heard earlier
today, there's

00:06:32.050 --> 00:06:34.870
over 2 billion pages on
the web that use AMP.

00:06:34.870 --> 00:06:37.630
Over a million
domains now use AMP.

00:06:37.630 --> 00:06:41.110
AMP helps enforce good
performance and good looks.

00:06:41.110 --> 00:06:43.540
It's basically a response
to the bloat on the web.

00:06:43.540 --> 00:06:46.210
It's making things
simpler, easier again.

00:06:46.210 --> 00:06:50.170
It doesn't cover all cases
but it covers most cases.

00:06:50.170 --> 00:06:52.870
Very few web pages
right now would

00:06:52.870 --> 00:06:57.130
lose that much if converted
to AMP, even though--

00:06:57.130 --> 00:06:58.900
the first thing up there--

00:06:58.900 --> 00:07:02.170
AMP allows you to
write no JavaScript.

00:07:02.170 --> 00:07:04.662
No JavaScript at all.

00:07:04.662 --> 00:07:06.370
So, yeah, I got a
little bit of applause.

00:07:06.370 --> 00:07:07.360
Probably some people are crying.

00:07:07.360 --> 00:07:08.020
[APPLAUSE]

00:07:08.020 --> 00:07:09.490
People are clapping.

00:07:09.490 --> 00:07:11.200
Yes, you're free, you're free.

00:07:11.200 --> 00:07:13.870
You can still use JavaScript
but not on an AMP page.

00:07:13.870 --> 00:07:15.370
It's already there.

00:07:15.370 --> 00:07:17.634
Because if you want things
that are interactive,

00:07:17.634 --> 00:07:19.300
that are easy to use,
or you want things

00:07:19.300 --> 00:07:22.330
like an image carousel where
the images slide around

00:07:22.330 --> 00:07:23.136
on the screen--

00:07:23.136 --> 00:07:25.510
users can't stand these things
but they're very popular--

00:07:25.510 --> 00:07:28.150
or you want a video embedded
or you want a menu--

00:07:28.150 --> 00:07:30.490
all of these things
come with AMP.

00:07:30.490 --> 00:07:32.130
You just insert web components.

00:07:32.130 --> 00:07:33.670
So that second thing up there--

00:07:33.670 --> 00:07:37.120
it's a superset of HTML, a
set of custom web components

00:07:37.120 --> 00:07:39.760
that do all those things
that don't come with HTML,

00:07:39.760 --> 00:07:40.930
but should.

00:07:40.930 --> 00:07:44.020
HTML was designed a long
time ago for documents,

00:07:44.020 --> 00:07:46.340
not for making
complicated web apps--

00:07:46.340 --> 00:07:47.860
though with AMP,
you can get back

00:07:47.860 --> 00:07:51.790
to actually putting all those
things that you want into HTML.

00:07:51.790 --> 00:07:55.240
You lose some flexibility but
you gain a lot of ease of use.

00:07:55.240 --> 00:07:56.560
And you're coding less.

00:07:56.560 --> 00:07:58.640
You can code other places.

00:07:58.640 --> 00:08:01.930
And if you love CSS, I'm
sorry to tell you this--

00:08:01.930 --> 00:08:05.320
it also restricts your
CSS to 50 k or less--

00:08:05.320 --> 00:08:08.080
which, really, honestly,
is enough for most pages

00:08:08.080 --> 00:08:10.120
out there, probably all pages.

00:08:10.120 --> 00:08:12.010
The idea behind
all these things--

00:08:12.010 --> 00:08:16.140
no JavaScript, web
components, and less CSS--

00:08:16.140 --> 00:08:18.030
is to make the pages faster.

00:08:18.030 --> 00:08:21.160
So for users, AMP
pages tend to load--

00:08:21.160 --> 00:08:23.140
even on 3G connections--

00:08:23.140 --> 00:08:26.230
in a second, in
two seconds, which

00:08:26.230 --> 00:08:28.360
users tend to like
quite a bit, and which

00:08:28.360 --> 00:08:30.795
makes your companies money.

00:08:30.795 --> 00:08:32.260
It's good.

00:08:32.260 --> 00:08:34.510
And don't forget the
elegance thing as well.

00:08:34.510 --> 00:08:37.330
Your pages, your code,
is more beautiful.

00:08:37.330 --> 00:08:38.370
It's simpler.

00:08:38.370 --> 00:08:40.090
You're not trying to
reinvent the wheel.

00:08:40.090 --> 00:08:42.260
The wheel is already there
for you as part of AMP.

00:08:44.930 --> 00:08:46.470
It sounds kind of hard, right?

00:08:46.470 --> 00:08:48.110
I've got to learn
two new things--

00:08:48.110 --> 00:08:49.980
PWA and AMP?

00:08:49.980 --> 00:08:51.280
I can't do that.

00:08:51.280 --> 00:08:52.110
I don't have time.

00:08:52.110 --> 00:08:54.990
Well, actually, it's not
as hard as it sounds.

00:08:54.990 --> 00:08:57.360
And to prove that, we've
created a simple example

00:08:57.360 --> 00:08:59.920
called the shadow reader.

00:08:59.920 --> 00:09:01.650
Whenever I say
"shadow," I'll say

00:09:01.650 --> 00:09:03.270
it like this
typeface over here--

00:09:03.270 --> 00:09:07.350
the shadow reader,
because I have no shame.

00:09:07.350 --> 00:09:10.680
So let's say that you work
for a major news publisher

00:09:10.680 --> 00:09:13.630
and you've got a web
site that's out there.

00:09:13.630 --> 00:09:15.944
But the boss knows people
want to use a web app.

00:09:15.944 --> 00:09:18.360
They're sick of the web site,
sick of the slow transitions

00:09:18.360 --> 00:09:19.620
between pages.

00:09:19.620 --> 00:09:21.970
He wants a news reader app.

00:09:21.970 --> 00:09:25.380
So your assignment, from this
very, very stern looking boss

00:09:25.380 --> 00:09:26.617
over here--

00:09:26.617 --> 00:09:28.200
you're the person
there with the hat--

00:09:28.200 --> 00:09:33.500
is to make a web app out
of existing web pages.

00:09:33.500 --> 00:09:35.820
The site already uses AMP.

00:09:35.820 --> 00:09:37.470
So how do we do that?

00:09:37.470 --> 00:09:39.420
How do we take things
that already exist--

00:09:39.420 --> 00:09:42.680
those AMP pages-- and get
those into a nice, immersive,

00:09:42.680 --> 00:09:45.880
Progressive Web App experience?

00:09:45.880 --> 00:09:51.050
Well, PWA slash
AMP is your answer.

00:09:51.050 --> 00:09:55.952
So why are AMPs useful in a
Progressive Web App context?

00:09:55.952 --> 00:09:57.410
Let's discuss a
couple ways AMP can

00:09:57.410 --> 00:10:00.740
be used that haven't
been used so much so far,

00:10:00.740 --> 00:10:02.870
but ways AMP is
starting to be used now

00:10:02.870 --> 00:10:06.632
which play on AMP's strengths
as web components library.

00:10:06.632 --> 00:10:08.090
So, first of all,
we'll discuss how

00:10:08.090 --> 00:10:11.660
AMP can be used as web
components, second, as

00:10:11.660 --> 00:10:16.070
rich data, and third, AMP
pages can be portable,

00:10:16.070 --> 00:10:21.140
embeddable content units that
you can embed in other pages,

00:10:21.140 --> 00:10:25.530
thanks to the magic
of Shadow DOM.

00:10:25.530 --> 00:10:26.370
I love that name--

00:10:26.370 --> 00:10:28.080
Shadow DOM.

00:10:28.080 --> 00:10:31.860
First of all, AMP
as web components.

00:10:31.860 --> 00:10:33.480
This, actually, is
kind of obvious.

00:10:33.480 --> 00:10:35.970
AMP is really a library
of web components.

00:10:35.970 --> 00:10:37.830
Here are some examples
of those things.

00:10:37.830 --> 00:10:38.705
Here's one over here.

00:10:38.705 --> 00:10:41.205
Let's say you want to make one
of those lovely image sliders

00:10:41.205 --> 00:10:43.080
that users, again,
tend to object to,

00:10:43.080 --> 00:10:44.550
but people love these things.

00:10:44.550 --> 00:10:46.620
And there it is--

00:10:46.620 --> 00:10:48.120
that's an entire carousel.

00:10:48.120 --> 00:10:48.870
That's done.

00:10:48.870 --> 00:10:52.160
So AMP carousel-- you must
specify width and height in AMP

00:10:52.160 --> 00:10:54.930
because the pages are
laid out in advance.

00:10:54.930 --> 00:10:58.600
So as things load and lazy load,
the pages would shift around.

00:10:58.600 --> 00:11:01.590
So all of your dimensions for
images, ads, everything else,

00:11:01.590 --> 00:11:03.920
are specified in advance.

00:11:03.920 --> 00:11:07.290
And there is a couple of
images with the AMP image tag.

00:11:07.290 --> 00:11:08.970
And you're done.

00:11:08.970 --> 00:11:10.560
There it is-- your carousel.

00:11:10.560 --> 00:11:11.850
Things lazy load.

00:11:11.850 --> 00:11:12.940
It's all good.

00:11:12.940 --> 00:11:15.370
You're done.

00:11:15.370 --> 00:11:18.430
Number two-- AMP as rich data.

00:11:18.430 --> 00:11:20.210
This is kind of a weirder idea.

00:11:20.210 --> 00:11:22.558
but kind of a cool idea
once you get the idea.

00:11:22.558 --> 00:11:25.990
Idea, idea-- that's a good word
to say several times in a row.

00:11:25.990 --> 00:11:27.620
AMP can be used as rich data.

00:11:27.620 --> 00:11:29.320
So, often, if you're
making a web app,

00:11:29.320 --> 00:11:31.120
you've got your app
shell of some sort.

00:11:31.120 --> 00:11:33.400
And you're loading
in JSON and then

00:11:33.400 --> 00:11:37.510
converting that JSON to
HTML using templates,

00:11:37.510 --> 00:11:39.100
using some sort of logic.

00:11:39.100 --> 00:11:41.690
This can be a fragile,
difficult process.

00:11:41.690 --> 00:11:44.770
So, instead of
doing that, you can

00:11:44.770 --> 00:11:47.800
use HTML itself as the data.

00:11:47.800 --> 00:11:51.790
It's a rich data source that
includes layout information,

00:11:51.790 --> 00:11:53.170
includes components.

00:11:53.170 --> 00:11:55.000
It's like a whole page layout.

00:11:55.000 --> 00:11:57.650
It's kind of like
mark down on steroids.

00:11:57.650 --> 00:12:02.170
It's this really powerful,
rich, beautiful data set.

00:12:02.170 --> 00:12:04.340
So what I mean by that--

00:12:04.340 --> 00:12:05.382
here's a typical example.

00:12:05.382 --> 00:12:07.340
Let's say you have this
article on your web app

00:12:07.340 --> 00:12:08.950
that you're making
over here and there

00:12:08.950 --> 00:12:10.870
are some [INAUDIBLE] ancient
babies I've heard of that,

00:12:10.870 --> 00:12:12.092
apparently, aren't very good.

00:12:12.092 --> 00:12:14.050
And you have an article
about that-- usual data

00:12:14.050 --> 00:12:16.030
sources, data whatever.

00:12:16.030 --> 00:12:18.380
Here is how it might look
on the bottom over here.

00:12:18.380 --> 00:12:20.260
Maybe you have an
image of a guitar.

00:12:20.260 --> 00:12:22.810
Maybe you've got an H2, a link.

00:12:22.810 --> 00:12:24.640
Maybe you've got an ad in there.

00:12:24.640 --> 00:12:26.370
This is like data.

00:12:26.370 --> 00:12:29.480
So you can pull this
in to your web app--

00:12:32.780 --> 00:12:35.180
which goes along with the
idea that AMP can be portable,

00:12:35.180 --> 00:12:37.170
embeddable content units.

00:12:37.170 --> 00:12:40.730
So you can grab some part
of the page which is AMP

00:12:40.730 --> 00:12:42.980
and stick it into your
Progressive Web App.

00:12:42.980 --> 00:12:46.490
So, again, taking an AMP
page or some AMP stuff

00:12:46.490 --> 00:12:50.910
and using that in a
different application.

00:12:50.910 --> 00:12:54.210
So you can actually take your
web pages already that exist

00:12:54.210 --> 00:12:57.270
and cram those things
into a web app.

00:12:57.270 --> 00:13:00.270
And here you are, with your
hat, thinking, oh, this

00:13:00.270 --> 00:13:02.130
is the key to my
project over here.

00:13:02.130 --> 00:13:03.550
I don't have much time.

00:13:03.550 --> 00:13:07.140
I can use this pattern,
taking our existing AMP pages

00:13:07.140 --> 00:13:11.150
and putting those into
my new, immersive PWA.

00:13:11.150 --> 00:13:12.990
But how?

00:13:12.990 --> 00:13:16.420
The first key to this is
the magic of Shadow DOM.

00:13:16.420 --> 00:13:20.670
So Shadow DOM is simple and
kind of cool and magical.

00:13:20.670 --> 00:13:23.010
It's simply a DOM
sub-tree that's

00:13:23.010 --> 00:13:26.780
fully encapsulated
inside an HTML element.

00:13:26.780 --> 00:13:30.390
All the HTML, all
the CSS, is living

00:13:30.390 --> 00:13:33.650
inside an element in the DOM--

00:13:33.650 --> 00:13:35.380
Shadow DOM.

00:13:35.380 --> 00:13:38.670
It's part of the
web components idea.

00:13:38.670 --> 00:13:42.220
And AMP comes in a version
called Shadow AMP, which

00:13:42.220 --> 00:13:45.820
allows an entirely valid
Accelerated Mobile Page

00:13:45.820 --> 00:13:49.280
to exist inside another page.

00:13:49.280 --> 00:13:53.560
This allows you to AMP just one
subsection of a web page, which

00:13:53.560 --> 00:13:56.810
we're going to need in our
app we're making today.

00:13:56.810 --> 00:13:59.000
How does this work?

00:13:59.000 --> 00:14:00.750
On the top over
there you see we're

00:14:00.750 --> 00:14:04.470
loading up not the usual AMP
library, but the Shadow AMP

00:14:04.470 --> 00:14:06.210
library.

00:14:06.210 --> 00:14:09.570
And then, on the bottom, you
see, we're going to actually--

00:14:09.570 --> 00:14:12.840
once AMP exists-- we're
going to just attachShadowDoc

00:14:12.840 --> 00:14:15.930
over there, three
arguments, the container

00:14:15.930 --> 00:14:19.410
where the shadow root should
be, the document itself,

00:14:19.410 --> 00:14:22.920
and the URL from which the
document came originally.

00:14:22.920 --> 00:14:25.800
The complicated thing here is
this is loaded asynchronously.

00:14:25.800 --> 00:14:29.850
So you can't attach ShadowDoc
until it's actually loaded.

00:14:29.850 --> 00:14:33.231
So we use this asynchronous,
callback pattern to do that.

00:14:33.231 --> 00:14:35.730
You see, in the middle, that
function means if I [INAUDIBLE]

00:14:35.730 --> 00:14:38.100
AMP ready, which
takes the callback.

00:14:38.100 --> 00:14:41.350
And, simply, it looks
for a global called AMP.

00:14:41.350 --> 00:14:45.300
If that global already
exists, it adds that callback

00:14:45.300 --> 00:14:47.100
to an array of callbacks.

00:14:47.100 --> 00:14:50.880
If it doesn't exist, it
defines that as empty array.

00:14:50.880 --> 00:14:53.490
So this way, as AMP
is still loading,

00:14:53.490 --> 00:14:56.430
you can keep on attaching
callbacks to this object.

00:14:56.430 --> 00:14:59.700
When AMP actually loads up,
it then finds these callbacks,

00:14:59.700 --> 00:15:01.852
and then it runs everything.

00:15:01.852 --> 00:15:03.560
It may sound complicated,
but it actually

00:15:03.560 --> 00:15:04.700
isn't that complicated.

00:15:04.700 --> 00:15:06.830
I'll say it again more
simply with fewer words--

00:15:06.830 --> 00:15:09.620
you load the Shadow
AMP asynchronously.

00:15:09.620 --> 00:15:11.345
Once it's loaded,
you can then use

00:15:11.345 --> 00:15:15.260
the attachedShadowDoc method
to actually attach your AMP

00:15:15.260 --> 00:15:18.400
document somewhere
inside an existing page.

00:15:20.690 --> 00:15:22.440
Let's take a look at
this now because it's

00:15:22.440 --> 00:15:24.070
getting pretty abstract.

00:15:24.070 --> 00:15:29.270
Let's go over to
demo over here and--

00:15:29.270 --> 00:15:32.850
interesting-- my computer
logged out during this time.

00:15:32.850 --> 00:15:33.350
There it is.

00:15:33.350 --> 00:15:34.290
It's back.

00:15:34.290 --> 00:15:36.510
So this is the Shadow Reader.

00:15:36.510 --> 00:15:37.810
Here it is.

00:15:37.810 --> 00:15:40.725
In this case, it uses "The
Guardian" as data backend.

00:15:40.725 --> 00:15:42.600
All the news here is
kind of depressing today

00:15:42.600 --> 00:15:44.310
so I apologize for that.

00:15:44.310 --> 00:15:45.495
There's two modes for this.

00:15:45.495 --> 00:15:47.440
This is the cards mode.

00:15:47.440 --> 00:15:50.340
So this just shows top
stories from "The Guardian"

00:15:50.340 --> 00:15:52.170
as a series of cards.

00:15:52.170 --> 00:15:53.470
And then clicking into a card--

00:15:53.470 --> 00:15:55.740
I'll look for one that's
not bad and scary.

00:15:55.740 --> 00:15:56.640
Here we go.

00:15:56.640 --> 00:15:59.470
A black hole--
that's kind of cool.

00:15:59.470 --> 00:16:00.850
It's not scary yet.

00:16:00.850 --> 00:16:03.250
Clicking on that, you
see a bit of an animation

00:16:03.250 --> 00:16:04.540
and it pops out.

00:16:04.540 --> 00:16:06.670
And there is the article
mode, the second mode

00:16:06.670 --> 00:16:08.440
of this application.

00:16:08.440 --> 00:16:11.230
There it is-- an
enormous black hole, not

00:16:11.230 --> 00:16:13.960
a problem for a long time
as far as we can tell.

00:16:13.960 --> 00:16:18.100
And, by the way, this bottom
over here is all the AMP page.

00:16:18.100 --> 00:16:19.800
That's all AMP.

00:16:19.800 --> 00:16:22.660
If you go back over
here, you're back here.

00:16:22.660 --> 00:16:24.820
There are sections and so on.

00:16:24.820 --> 00:16:29.230
If you look at this here,
we can see in HTML--

00:16:29.230 --> 00:16:31.440
which is very small,
unfortunately--

00:16:31.440 --> 00:16:33.220
if you can see this,
at the very bottom

00:16:33.220 --> 00:16:35.230
there's a thing called
article over here.

00:16:35.230 --> 00:16:37.270
And somewhere in there,
if you can see it,

00:16:37.270 --> 00:16:39.190
this is called Shadow Root.

00:16:39.190 --> 00:16:44.300
And in there is an entire AMP
page just hiding in there.

00:16:44.300 --> 00:16:46.550
And there's the
body, all the content

00:16:46.550 --> 00:16:48.430
there on the Shadow Root.

00:16:48.430 --> 00:16:50.000
I know this is very hard to see.

00:16:50.000 --> 00:16:51.080
But try it out.

00:16:51.080 --> 00:16:52.460
AMP.cards is out there.

00:16:52.460 --> 00:16:52.960
It's public.

00:16:52.960 --> 00:16:54.450
You can use it.

00:16:54.450 --> 00:16:56.960
Check this out-- the
code is out there, too.

00:16:56.960 --> 00:16:57.710
Check it out.

00:16:57.710 --> 00:17:00.410
See how it's built. Let's
get back to the slides now.

00:17:00.410 --> 00:17:06.730
We're going to talk more
about how this thing is built.

00:17:06.730 --> 00:17:07.900
How is this thing built?

00:17:07.900 --> 00:17:09.990
As we had discussed
already before,

00:17:09.990 --> 00:17:12.880
there is your AMP page
living within the PWA.

00:17:12.880 --> 00:17:14.349
That's the real key.

00:17:14.349 --> 00:17:16.433
And three things happen--

00:17:16.433 --> 00:17:18.099
the first thing is
that AMP content gets

00:17:18.099 --> 00:17:21.680
pulled in from an RSS feed.

00:17:21.680 --> 00:17:26.520
And then we inject the AMP
HTML right into the DOM.

00:17:26.520 --> 00:17:29.477
And then around all that, is
a lovely Progressive Web App,

00:17:29.477 --> 00:17:31.060
making this nice,
immersive experience

00:17:31.060 --> 00:17:33.000
we're talking about here.

00:17:33.000 --> 00:17:34.440
Here's the first step--

00:17:34.440 --> 00:17:37.050
not that complicated--
you pull the AMP content

00:17:37.050 --> 00:17:38.655
in from the feed.

00:17:38.655 --> 00:17:40.030
And you can see
here, we actually

00:17:40.030 --> 00:17:42.370
use the good old SHR over here.

00:17:42.370 --> 00:17:45.800
Because you can use fetch,
but the advantage of SHR

00:17:45.800 --> 00:17:49.900
is that the response to XML
is actually a parsed DOM.

00:17:49.900 --> 00:17:51.430
So once you get
this back, you've

00:17:51.430 --> 00:17:52.960
got a whole document object.

00:17:52.960 --> 00:17:56.810
You can just tick that right
into the DOM of the main page.

00:17:56.810 --> 00:17:58.412
This is very convenient.

00:17:58.412 --> 00:18:00.120
And we're going to
remove parts we're not

00:18:00.120 --> 00:18:01.540
going to use over here.

00:18:01.540 --> 00:18:03.650
So, notice on the
top, for example,

00:18:03.650 --> 00:18:05.450
"The Guardian" has this header.

00:18:05.450 --> 00:18:08.750
We don't want to see that as
part of this app experience.

00:18:08.750 --> 00:18:10.930
You just remove things from
the DOM you don't want.

00:18:10.930 --> 00:18:13.640
You can take out sidebars,
take out headers,

00:18:13.640 --> 00:18:16.470
just to get the part
they actually need.

00:18:16.470 --> 00:18:21.000
Step two, we inject the
AMP HTML into the DOM--

00:18:21.000 --> 00:18:22.440
not that complicated.

00:18:22.440 --> 00:18:26.835
We create a Shadow Root and use
that magical attachShadowDoc

00:18:26.835 --> 00:18:29.550
to actually, again,
take that AMP document

00:18:29.550 --> 00:18:34.140
and stick it right there
into the Shadow DOM.

00:18:34.140 --> 00:18:37.131
And then, all around that, is
a nice Progressive Web App,

00:18:37.131 --> 00:18:39.630
which has the kind of features
you want from Progressive Web

00:18:39.630 --> 00:18:40.560
Apps.

00:18:40.560 --> 00:18:44.370
It loads quickly
with an app shell.

00:18:44.370 --> 00:18:47.130
As the app moves around, as
you navigate through the app,

00:18:47.130 --> 00:18:49.740
things go on loading quickly.

00:18:49.740 --> 00:18:52.170
The experience is
immersive throughout,

00:18:52.170 --> 00:18:54.300
like an app would be.

00:18:54.300 --> 00:18:55.950
You have the
possibility on Android

00:18:55.950 --> 00:18:59.550
adding to the home screen
and an app-like display,

00:18:59.550 --> 00:19:02.870
taking away the whole URL bar.

00:19:02.870 --> 00:19:06.030
And content is
available also offline.

00:19:06.030 --> 00:19:08.070
How do those things work?

00:19:08.070 --> 00:19:09.810
Quickly, the first
thing over here

00:19:09.810 --> 00:19:12.126
is that the initial
load is pretty simple.

00:19:12.126 --> 00:19:13.500
Let me show you
over here again--

00:19:13.500 --> 00:19:16.030
if I can get back to
the computer here--

00:19:16.030 --> 00:19:20.740
the actual, original payload
over here that comes with this.

00:19:20.740 --> 00:19:23.270
A lot of CSS.

00:19:23.270 --> 00:19:25.630
The HTML is pretty simple.

00:19:25.630 --> 00:19:26.820
A couple of things here.

00:19:26.820 --> 00:19:28.935
And then, notice as
we go along here--

00:19:28.935 --> 00:19:31.350
let's see if I can zoom
there a little bit--

00:19:31.350 --> 00:19:33.030
you see these little
tildes over there.

00:19:33.030 --> 00:19:34.230
See those things?

00:19:34.230 --> 00:19:36.810
If you use Facebook, for
example, and you've seen,

00:19:36.810 --> 00:19:39.000
when you're loading your
feed, those little things

00:19:39.000 --> 00:19:40.833
appear with rectangles
that kind of resemble

00:19:40.833 --> 00:19:42.510
actual things in
your feed, but they

00:19:42.510 --> 00:19:42.960
aren't things in your feed.

00:19:42.960 --> 00:19:44.419
They're just actually
an animation.

00:19:44.419 --> 00:19:46.710
So it gives the user the
impression things are loading,

00:19:46.710 --> 00:19:49.260
when they're actually not
really there quite yet.

00:19:49.260 --> 00:19:51.540
Users like that, if things
are partially loaded

00:19:51.540 --> 00:19:53.680
and they get to see
it kind of load.

00:19:53.680 --> 00:19:55.990
This is like that,
but just pure text.

00:19:55.990 --> 00:19:58.100
So before any
images load at all--

00:19:58.100 --> 00:20:00.600
anything loads at all-- you've
got something there that kind

00:20:00.600 --> 00:20:02.900
of resembles how the
app's going to look,

00:20:02.900 --> 00:20:05.360
a set of lovely tildes.

00:20:05.360 --> 00:20:08.210
Let's go back now to
the slides, please.

00:20:08.210 --> 00:20:10.070
Thank you very much.

00:20:10.070 --> 00:20:15.170
So, yeah, simple
initial load over there.

00:20:15.170 --> 00:20:16.805
And that thing at
the top over there

00:20:16.805 --> 00:20:20.360
is so I can tell whether it's
actually from the URL in cards

00:20:20.360 --> 00:20:24.310
mode or article mode, and apply
the right kind of UI skeleton

00:20:24.310 --> 00:20:29.240
so you have that nice kind
of loading in the beginning.

00:20:29.240 --> 00:20:32.270
And then, of course,
as the app moves along,

00:20:32.270 --> 00:20:34.610
things load fast because
you've AMP pages.

00:20:34.610 --> 00:20:36.240
AMP pages load very fast.

00:20:36.240 --> 00:20:37.730
They're very simple.

00:20:37.730 --> 00:20:41.780
And you use Shadow DOM to get
those things into your PWA.

00:20:44.610 --> 00:20:47.410
Then the immersive experience
is pretty easy to do.

00:20:47.410 --> 00:20:50.810
I'm going to go back to the
demo here one last time.

00:20:50.810 --> 00:20:53.860
We can see these lovely
animations over here.

00:20:53.860 --> 00:20:55.990
Again, this is just
a normal web app

00:20:55.990 --> 00:20:57.620
so you can make
nice things happen.

00:20:57.620 --> 00:20:59.930
You click on this
black hole over here.

00:20:59.930 --> 00:21:01.900
It animates upwards nicely.

00:21:01.900 --> 00:21:03.000
And you change articles.

00:21:03.000 --> 00:21:05.240
Things merge around smoothly.

00:21:05.240 --> 00:21:07.350
There's also stuff
here for accessibility,

00:21:07.350 --> 00:21:09.150
for screen readers,
all of those things

00:21:09.150 --> 00:21:13.080
were easy to do because you've
got all the power of PWAs

00:21:13.080 --> 00:21:14.760
and CSS and all those things.

00:21:18.270 --> 00:21:20.800
Again, try it out yourselves
at home if you'd like to.

00:21:20.800 --> 00:21:24.020
Let's get back to
the slides over here.

00:21:24.020 --> 00:21:26.140
And this part is
easy for the PWA.

00:21:26.140 --> 00:21:27.410
You've got a manifest.

00:21:27.410 --> 00:21:30.290
For Android, those icons
over there let you add things

00:21:30.290 --> 00:21:32.420
to the screen-- the
home screen, that is--

00:21:32.420 --> 00:21:34.970
and then, display
standalone just

00:21:34.970 --> 00:21:39.110
tells Android to display the
app in a full, immersive app

00:21:39.110 --> 00:21:40.440
experience.

00:21:40.440 --> 00:21:43.770
And this part is super simple.

00:21:43.770 --> 00:21:46.350
Finally, offline content.

00:21:46.350 --> 00:21:50.160
This can be a little challenging
when you do service worker.

00:21:50.160 --> 00:21:52.860
The cache thing may be a little
bit complicated sometimes

00:21:52.860 --> 00:21:56.260
and involve some coding, some
promises, things like that.

00:21:56.260 --> 00:21:58.150
But, in this case,
it was very simple.

00:21:58.150 --> 00:22:01.440
We use Workbox as a bit of
a work-around over here.

00:22:01.440 --> 00:22:03.930
I recommend trying out
Workbox.js, a great service

00:22:03.930 --> 00:22:04.802
worker library.

00:22:04.802 --> 00:22:06.510
And this, by the way,
is the only library

00:22:06.510 --> 00:22:08.850
that was used in the making
of this whole web app.

00:22:08.850 --> 00:22:13.020
There is no angular, no
react, not even jQuery.

00:22:13.020 --> 00:22:15.320
The code here is incredibly
small to make this happen.

00:22:15.320 --> 00:22:17.787
And, in fact,
minimize is about 10 k

00:22:17.787 --> 00:22:19.120
of JavaScript behind the scenes.

00:22:19.120 --> 00:22:22.260
That's it-- about 10 k.

00:22:22.260 --> 00:22:24.300
Workbox makes
things very simple.

00:22:24.300 --> 00:22:29.400
Over here is the code to
cache our lovely yql queries.

00:22:29.400 --> 00:22:30.450
That's all you do.

00:22:30.450 --> 00:22:33.810
Register your route,
declare your strategy,

00:22:33.810 --> 00:22:35.310
and you're all done.

00:22:35.310 --> 00:22:38.720
The service worker stuff here
is maybe 30 lines of code.

00:22:38.720 --> 00:22:40.650
So there is offline content.

00:22:40.650 --> 00:22:43.420
We also pre-cached some things
like images, other things

00:22:43.420 --> 00:22:46.830
that are important for the app.

00:22:46.830 --> 00:22:48.750
And like I was just
saying a minute ago,

00:22:48.750 --> 00:22:51.210
there was no framework used
in the making of this app, not

00:22:51.210 --> 00:22:52.140
even jQuery.

00:22:52.140 --> 00:22:54.570
I mean, these things over here
are samples from the code.

00:22:54.570 --> 00:22:56.850
They're a little bit
ponderous in some cases--

00:22:56.850 --> 00:22:59.880
document.doc.queryselector,
remove attribute,

00:22:59.880 --> 00:23:01.080
all these things.

00:23:01.080 --> 00:23:03.430
JQuery makes it
a little simpler,

00:23:03.430 --> 00:23:06.220
but this is just to show we
didn't need jQuery for this.

00:23:06.220 --> 00:23:08.010
You still have
pretty small code.

00:23:08.010 --> 00:23:09.880
It's pretty simple.

00:23:09.880 --> 00:23:12.965
It's just JavaScript--
but not much JavaScript--

00:23:12.965 --> 00:23:15.780
a little bit like the old days.

00:23:15.780 --> 00:23:17.100
So this is good.

00:23:17.100 --> 00:23:18.060
You made the web app.

00:23:18.060 --> 00:23:19.190
The boss likes you.

00:23:19.190 --> 00:23:20.940
You can keep your job--

00:23:20.940 --> 00:23:23.730
triumph, happiness,
all those things.

00:23:23.730 --> 00:23:24.700
So you're happy.

00:23:24.700 --> 00:23:27.750
Than you think-- great,
I made this awesome PWA.

00:23:27.750 --> 00:23:29.119
But is this AMP, though?

00:23:29.119 --> 00:23:30.660
I thought this AMP
thing is important

00:23:30.660 --> 00:23:33.600
because I have to get
into Google's search

00:23:33.600 --> 00:23:36.370
carousel and the AMP
cache and all those things

00:23:36.370 --> 00:23:38.490
and make Google
happy in some way.

00:23:38.490 --> 00:23:40.110
But this is not
an AMP over here.

00:23:40.110 --> 00:23:41.970
I've made this normal web page.

00:23:41.970 --> 00:23:43.600
So is that OK?

00:23:43.600 --> 00:23:44.430
Can I do that?

00:23:47.000 --> 00:23:48.770
And, yes, you can.

00:23:48.770 --> 00:23:50.030
Who cares?

00:23:50.030 --> 00:23:51.440
Go ahead and do it.

00:23:51.440 --> 00:23:54.170
In this case, the main app
would not pass AMP validation.

00:23:54.170 --> 00:23:55.370
It isn't supposed to.

00:23:55.370 --> 00:23:56.630
But it's fast.

00:23:56.630 --> 00:24:00.720
It uses AMP and just
works really, really well.

00:24:00.720 --> 00:24:03.240
If you want to actually
get into Google AMP cache

00:24:03.240 --> 00:24:05.100
on the first page
of your application,

00:24:05.100 --> 00:24:06.330
there's a pattern for that.

00:24:06.330 --> 00:24:08.600
The first page can
also be an AMP.

00:24:08.600 --> 00:24:10.860
The entry page-- landing
page-- can be AMP.

00:24:10.860 --> 00:24:13.650
Actually, AMP has an install
service worker component.

00:24:13.650 --> 00:24:15.450
You can use install
service worker

00:24:15.450 --> 00:24:18.000
to get your PWA started
behind the scenes.

00:24:18.000 --> 00:24:21.000
They can navigate to the
next page, which is the PWA,

00:24:21.000 --> 00:24:23.400
and then you can use
AMP within that again.

00:24:23.400 --> 00:24:25.800
So, again, you can use
these things in various ways

00:24:25.800 --> 00:24:27.460
to get all the benefits of AMP--

00:24:27.460 --> 00:24:29.580
to get the pre-rendering
and all those things that

00:24:29.580 --> 00:24:32.730
come from the magic of finding
your link in Google Search

00:24:32.730 --> 00:24:34.740
or elsewhere that
has an AMP cache.

00:24:34.740 --> 00:24:36.780
And then the PWA starts up.

00:24:36.780 --> 00:24:41.350
You can use AMP components in
there to make your life easier

00:24:41.350 --> 00:24:43.210
And it's more than
just publishing.

00:24:43.210 --> 00:24:46.120
The same pattern applies in
more, other kinds of ways.

00:24:46.120 --> 00:24:49.090
What if you've got a site that's
like a leadgen site, where

00:24:49.090 --> 00:24:51.080
users are filling
out this long form--

00:24:51.080 --> 00:24:53.080
one of those things with
five different screens,

00:24:53.080 --> 00:24:56.710
your name, your address, your
birthday, your neighbors name,

00:24:56.710 --> 00:24:58.534
your dog's name,
your cat's name,

00:24:58.534 --> 00:25:00.200
the name of the tree
in your front yard,

00:25:00.200 --> 00:25:01.408
all of those kinds of things.

00:25:01.408 --> 00:25:02.590
This happens sometimes.

00:25:02.590 --> 00:25:04.180
It can be hard for users.

00:25:04.180 --> 00:25:08.860
If you use AMP, AMP comes with
nice, validated form fields.

00:25:08.860 --> 00:25:10.420
So it makes your life easier.

00:25:10.420 --> 00:25:13.300
And, like with the
articles just back there,

00:25:13.300 --> 00:25:15.280
imagine instead of
articles, imagine

00:25:15.280 --> 00:25:17.960
pages of the form in a PWA.

00:25:17.960 --> 00:25:19.710
So you control the experience.

00:25:19.710 --> 00:25:22.380
Users can't stand it when
they're working on a long form

00:25:22.380 --> 00:25:25.600
and they go to the next page
and they face a long load.

00:25:25.600 --> 00:25:27.410
They abandon in those cases.

00:25:27.410 --> 00:25:30.680
In a PWA, things can
load more quickly,

00:25:30.680 --> 00:25:32.430
especially if they're AMP.

00:25:32.430 --> 00:25:34.690
You can go back and forth,
you can control the screen,

00:25:34.690 --> 00:25:37.760
make it fun for the user
to fill out this long form.

00:25:37.760 --> 00:25:39.930
Register now.

00:25:39.930 --> 00:25:41.760
Another idea-- e-commerce.

00:25:41.760 --> 00:25:44.017
E-commerce is a new thing
that's happening with AMP.

00:25:44.017 --> 00:25:46.350
Various e-commerce sites are
now using AMP for all kinds

00:25:46.350 --> 00:25:47.220
of things--

00:25:47.220 --> 00:25:50.850
product pages, listing
pages, up to and now

00:25:50.850 --> 00:25:52.860
also including the
checkout process,

00:25:52.860 --> 00:25:55.215
is just now possible
also with AMP,

00:25:55.215 --> 00:25:57.910
thanks to the
payment request API.

00:25:57.910 --> 00:25:59.790
So, in this case over
here, I imagine instead

00:25:59.790 --> 00:26:03.030
of your news articles, a
series of product pages,

00:26:03.030 --> 00:26:05.190
which are all written
with AMP so they're fast.

00:26:05.190 --> 00:26:08.730
The user isn't waiting around
to actually have things load.

00:26:08.730 --> 00:26:11.540
And dynamic content is
possible with AMP as well.

00:26:11.540 --> 00:26:12.630
There's AMP state.

00:26:12.630 --> 00:26:13.810
There's AMP lists.

00:26:13.810 --> 00:26:16.410
There's various components that
let you actually change things

00:26:16.410 --> 00:26:17.819
on the screen dynamically.

00:26:17.819 --> 00:26:19.860
So you change the number
of things you're buying,

00:26:19.860 --> 00:26:21.660
the prices can
change, shipping costs

00:26:21.660 --> 00:26:26.810
can change with user input,
and so on and so forth.

00:26:26.810 --> 00:26:28.580
Or imagine the
travel application.

00:26:28.580 --> 00:26:31.550
Instead of these articles,
you've got hotels--

00:26:31.550 --> 00:26:34.700
hotel information-- and
you go back between hotels.

00:26:34.700 --> 00:26:39.620
So, again, all possible
with AMP in a PWA context.

00:26:39.620 --> 00:26:42.290
The upshot is this
makes you money.

00:26:42.290 --> 00:26:44.690
Because the users are happy,
because they have a better

00:26:44.690 --> 00:26:47.570
experience, they're not
abandoning the pages as much.

00:26:47.570 --> 00:26:49.760
And a lot of data
shows us, AMP pages

00:26:49.760 --> 00:26:51.770
tend to get better
user engagement.

00:26:51.770 --> 00:26:53.840
A lot of data shows
us that faster pages

00:26:53.840 --> 00:26:56.750
get better user engagement,
get better conversions,

00:26:56.750 --> 00:26:57.860
lower bounce.

00:26:57.860 --> 00:27:01.070
So your users are staying
on for longer on your app

00:27:01.070 --> 00:27:03.380
and they're converting--
they're buying something

00:27:03.380 --> 00:27:05.860
or they're viewing an
ad, whatever it is.

00:27:05.860 --> 00:27:09.440
Ad support in AMP is also
very, very advanced these days.

00:27:09.440 --> 00:27:11.210
So you gain money
from the users.

00:27:11.210 --> 00:27:13.940
And you also make money
because developers are spending

00:27:13.940 --> 00:27:16.070
less time working on their app.

00:27:16.070 --> 00:27:17.870
Things are simpler for them.

00:27:17.870 --> 00:27:20.450
So you can make things more
quickly so you make money

00:27:20.450 --> 00:27:22.095
on both sides of the coin--

00:27:22.095 --> 00:27:23.720
which, of course,
isn't your motivation

00:27:23.720 --> 00:27:24.560
because you're programmers.

00:27:24.560 --> 00:27:25.880
You don't care about the money.

00:27:25.880 --> 00:27:28.100
You care about the
beauty of your code,

00:27:28.100 --> 00:27:29.540
the integrity of your work.

00:27:29.540 --> 00:27:32.039
Money is just kind of one of
those things that gets you rent

00:27:32.039 --> 00:27:35.270
and maybe occasional
Doritos and ramen soup--

00:27:35.270 --> 00:27:38.540
or I guess kielbasa and
dumplings over here.

00:27:38.540 --> 00:27:41.246
But, also, don't forget that--

00:27:41.246 --> 00:27:43.550
oh, we went backwards
instead of forwards--

00:27:43.550 --> 00:27:45.470
don't forget, also,
that this is better

00:27:45.470 --> 00:27:48.879
for you, the programmer--
not just because of the money

00:27:48.879 --> 00:27:51.170
you're making now and you're
retiring early or becoming

00:27:51.170 --> 00:27:53.570
a manager or something--
but because you didn't just

00:27:53.570 --> 00:27:56.090
create this terrible,
Frankenstein web app that

00:27:56.090 --> 00:27:57.830
was a hodgepodge of
various JavaScript

00:27:57.830 --> 00:28:01.430
you found on the internet
and kind of copied things

00:28:01.430 --> 00:28:03.230
and pasted them together.

00:28:03.230 --> 00:28:04.970
You don't have to panic.

00:28:04.970 --> 00:28:07.700
This was something else I
found in old town as well.

00:28:07.700 --> 00:28:11.460
Instead, you have this lovely,
maintainable, elegant code

00:28:11.460 --> 00:28:14.240
that's going to work
for longer, that people

00:28:14.240 --> 00:28:15.722
will like in a couple of years.

00:28:15.722 --> 00:28:17.930
Future programmers at your
company will see your code

00:28:17.930 --> 00:28:20.150
and they will smile,
instead of thinking, why

00:28:20.150 --> 00:28:21.316
did you make all this stuff?

00:28:21.316 --> 00:28:21.955
This is crazy.

00:28:21.955 --> 00:28:22.580
They'll see it.

00:28:22.580 --> 00:28:23.660
It looks easy.

00:28:23.660 --> 00:28:26.060
It's elegant and maintainable.

00:28:26.060 --> 00:28:28.010
And, in conclusion,
isn't life that

00:28:28.010 --> 00:28:29.990
creating something beautiful?

00:28:29.990 --> 00:28:31.750
This is your chance to do that--

00:28:31.750 --> 00:28:34.267
PWA and AMP.

00:28:34.267 --> 00:28:35.100
Thank you very much.

00:28:35.100 --> 00:28:36.000
[APPLAUSE]

00:28:36.000 --> 00:28:39.050
[MUSIC PLAYING]

