WEBVTT
Kind: captions
Language: en

00:00:00.380 --> 00:00:04.800
To improve performance, clients often cache

00:00:04.800 --> 00:00:08.880
parts of a webpage. Caching can occur

00:00:08.880 --> 00:00:11.830
in multiple places. Your browser can cache

00:00:11.830 --> 00:00:15.860
some objects locally on your very machine.

00:00:15.860 --> 00:00:21.080
Caches can also be deployed in the network. Sometimes your local ISP may

00:00:21.080 --> 00:00:26.140
have a web cache, and later we'll also look at how content distribution networks

00:00:26.140 --> 00:00:30.950
are a special type of webcast that can be used to improve performance. To see

00:00:30.950 --> 00:00:34.290
how caching can improve performance, consider the case

00:00:34.290 --> 00:00:38.000
where the origin web server, may host the

00:00:38.000 --> 00:00:41.180
content for a particular website, but it's particularly

00:00:41.180 --> 00:00:44.470
far away. Now, we already know that TCP

00:00:44.470 --> 00:00:48.300
throughput is inversely proportional to round-trip times. So,

00:00:48.300 --> 00:00:51.690
the further away that this web content is,

00:00:51.690 --> 00:00:54.200
the slower the web page will load, both

00:00:54.200 --> 00:00:57.520
because latency is bigger, and because throughput is

00:00:57.520 --> 00:01:00.460
lower. If, instead, the client could fetch content

00:01:00.460 --> 00:01:04.170
from the local cache, performance could be drastically improved,

00:01:04.170 --> 00:01:08.110
by fetching content from a more nearby location.

00:01:08.110 --> 00:01:11.170
Caching can also improve the performance when multiple

00:01:11.170 --> 00:01:14.630
clients are requesting the same content. In this

00:01:14.630 --> 00:01:17.120
case, not only do all of the local clients

00:01:17.120 --> 00:01:20.170
benefit from the content being cached locally. But

00:01:20.170 --> 00:01:23.970
the ISP also saves costs on transit, because

00:01:23.970 --> 00:01:26.370
it doesn't have to pay to keep transferring

00:01:26.370 --> 00:01:30.200
the same content over these expensive links. Instead,

00:01:30.200 --> 00:01:32.290
it can simply serve the content to the

00:01:32.290 --> 00:01:35.530
clients locally. To ensure that clients are seeing

00:01:35.530 --> 00:01:38.550
the most recent version of a page, caches

00:01:38.550 --> 00:01:42.310
periodically expire content, based on the expire setter

00:01:42.310 --> 00:01:45.130
that we already saw. Caches can also check

00:01:45.130 --> 00:01:48.160
with the origin server to see whether the

00:01:48.160 --> 00:01:51.030
original content has been modified. If the content

00:01:51.030 --> 00:01:53.770
has not been modified, the origin server would

00:01:53.770 --> 00:01:56.670
respond to a cache check request with a

00:01:56.670 --> 00:02:00.900
304 or a not modified response. Clients can

00:02:00.900 --> 00:02:04.530
be directed to a cache in multiple ways.

00:02:04.530 --> 00:02:07.430
One is with browser configuration. So you can open

00:02:07.430 --> 00:02:11.060
your browser and explicitly configure the browser

00:02:11.060 --> 00:02:13.750
to point to a local cache so that

00:02:13.750 --> 00:02:17.670
all HTTP requests first are directed to the

00:02:17.670 --> 00:02:21.368
local cache, before the request is forwarded to

00:02:21.368 --> 00:02:23.896
the origin. In the second approach, the

00:02:23.896 --> 00:02:27.078
origin server or the service hosting the content,

00:02:27.078 --> 00:02:30.790
might actually direct your browser to a cache.

00:02:30.790 --> 00:02:33.270
This can be done with a special reply

00:02:33.270 --> 00:02:36.180
to a DNS request. We can see these effects,

00:02:36.180 --> 00:02:38.940
for example, when we do a DNS look up

00:02:38.940 --> 00:02:42.660
for Google.com. The response returns a number of IP

00:02:42.660 --> 00:02:45.950
addresses and when I ping the IP address, we

00:02:45.950 --> 00:02:48.720
see that the resulting IP address is only one

00:02:48.720 --> 00:02:52.860
millisecond away. Which indicates that that server is, not

00:02:52.860 --> 00:02:55.720
far away, but is in fact, very likely on

00:02:55.720 --> 00:02:58.390
a local network, probably even, the Georgia Tech campus

00:02:58.390 --> 00:02:59.440
network, in this case.

