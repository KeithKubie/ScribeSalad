WEBVTT
Kind: captions
Language: en

00:00:03.304 --> 00:00:04.890
THOMAS KOTZMANN: Hello,
everybody.

00:00:04.890 --> 00:00:06.380
Thanks for coming.

00:00:06.380 --> 00:00:09.260
Welcome to our talk.

00:00:09.260 --> 00:00:11.120
My name is Thomas Kotzmann.

00:00:11.120 --> 00:00:12.770
I'm the tech lead
for the Google

00:00:12.770 --> 00:00:14.595
Content API for shopping.

00:00:14.595 --> 00:00:17.390
CLAUDIA CIORASCU: And I am
Claudia Ciorascu from Google

00:00:17.390 --> 00:00:18.840
Merchant Center.

00:00:18.840 --> 00:00:22.170
We are both from Zurich,
Switzerland.

00:00:22.170 --> 00:00:24.305
I just remembered how
someone described

00:00:24.305 --> 00:00:26.130
Switzerland to me earlier--

00:00:26.130 --> 00:00:29.240
very little country with
narrow streets.

00:00:29.240 --> 00:00:30.500
Yes, very little country.

00:00:30.500 --> 00:00:34.070
But you know we have very tasty
cakes, chocolates, and

00:00:34.070 --> 00:00:36.550
wonderful desserts.

00:00:36.550 --> 00:00:38.840
THOMAS KOTZMANN: And today,
we two are talking about

00:00:38.840 --> 00:00:43.050
empowering local shopping
through Google Shopping.

00:00:43.050 --> 00:00:45.750
Just out of curiosity, how many
of you have attended the

00:00:45.750 --> 00:00:47.400
previous talk about
the Content API?

00:00:47.400 --> 00:00:49.380
Please raise your hands.

00:00:49.380 --> 00:00:50.610
Good, excellent.

00:00:50.610 --> 00:00:53.010
So we presume some
basic familiarity

00:00:53.010 --> 00:00:55.010
with the Content API.

00:00:55.010 --> 00:00:58.310
But even if you're just
generally interested in local

00:00:58.310 --> 00:01:03.120
shopping, you will surely find
our presentation interesting

00:01:03.120 --> 00:01:05.700
and enjoy our live demos.

00:01:05.700 --> 00:01:08.180
This is a technical
presentation.

00:01:08.180 --> 00:01:09.870
So we go into details--

00:01:09.870 --> 00:01:12.680
how to configure your accounts,
how to use the

00:01:12.680 --> 00:01:17.720
Content API to upload products
and to update your inventory,

00:01:17.720 --> 00:01:21.740
and how to verify your
data freshness.

00:01:21.740 --> 00:01:25.290
Before I dive into the details,
though, let me give

00:01:25.290 --> 00:01:27.620
you some motivation for
local shopping.

00:01:30.690 --> 00:01:33.390
I also want to point out why
it is important both to

00:01:33.390 --> 00:01:36.730
merchants and to Google.

00:01:36.730 --> 00:01:39.080
Google's mission is to
organize the world's

00:01:39.080 --> 00:01:40.470
information.

00:01:40.470 --> 00:01:45.750
And that does not just include
web pages, images, and videos,

00:01:45.750 --> 00:01:47.745
but also information
about products.

00:01:50.290 --> 00:01:54.610
An important question in this
context is, which stores in my

00:01:54.610 --> 00:01:57.750
neighborhood sell a
certain product?

00:01:57.750 --> 00:01:59.270
Do they have it in stock?

00:01:59.270 --> 00:02:00.520
And what does it cost there?

00:02:04.000 --> 00:02:08.320
In 2011, Forrester Research
did a study.

00:02:08.320 --> 00:02:14.610
And they concluded that about
46.5% of all retail sales in

00:02:14.610 --> 00:02:19.270
the US, up to some extent,
were web-influenced.

00:02:19.270 --> 00:02:24.840
That means that from 100 people,
about 46 to 47 either

00:02:24.840 --> 00:02:28.890
order a product online and get
it delivered to their home or

00:02:28.890 --> 00:02:33.130
they do some online research on
the web but then go to some

00:02:33.130 --> 00:02:37.510
local, physical store and
get the product there.

00:02:37.510 --> 00:02:41.000
So I would like to let
you take a guess.

00:02:41.000 --> 00:02:44.860
From these 47, or 46 to 47
people, what do you think?

00:02:44.860 --> 00:02:47.860
How many still go to a local,
physical store?

00:02:47.860 --> 00:02:50.700
Just shout out some numbers.

00:02:50.700 --> 00:02:50.800
Ideas?

00:02:50.800 --> 00:02:52.630
AUDIENCE: 30.

00:02:52.630 --> 00:02:54.045
THOMAS KOTZMANN: OK, 30.

00:02:54.045 --> 00:02:56.344
Other ideas?

00:02:56.344 --> 00:02:57.180
AUDIENCE: 100%.

00:02:57.180 --> 00:02:57.600
THOMAS KOTZMANN: Huh?

00:02:57.600 --> 00:03:00.490
100%?

00:03:00.490 --> 00:03:02.980
What else?

00:03:02.980 --> 00:03:08.300
So it's about 40 people of the
46 still buy in local stores.

00:03:08.300 --> 00:03:14.400
That relates to about $1.2
trillion of retail sales.

00:03:14.400 --> 00:03:19.970
That's about six times as much
as people ordering online and

00:03:19.970 --> 00:03:21.360
get it delivered
to their home.

00:03:21.360 --> 00:03:26.870
So $1.2 trillion still by
selling in local stores.

00:03:26.870 --> 00:03:28.310
Why is that so?

00:03:28.310 --> 00:03:32.590
Well, people want to try out
things before they buy it,

00:03:32.590 --> 00:03:33.490
touch them.

00:03:33.490 --> 00:03:36.430
Maybe they want still some
personal advice.

00:03:36.430 --> 00:03:39.380
Or they want to take it home
right away and not wait for

00:03:39.380 --> 00:03:42.220
the delivery.

00:03:42.220 --> 00:03:47.100
Now, how can merchants benefit
from this user behavior?

00:03:47.100 --> 00:03:48.430
The answer is simple.

00:03:48.430 --> 00:03:51.620
Instead of just providing the
user with information about

00:03:51.620 --> 00:03:56.360
the product itself, they also
tell the user where he can

00:03:56.360 --> 00:04:00.320
find it, where he can buy it,
and whether the product is in

00:04:00.320 --> 00:04:03.650
stock there and what it costs.

00:04:03.650 --> 00:04:08.130
And this is what local
shopping is about.

00:04:08.130 --> 00:04:12.200
As you can imagine, it takes
different types of information

00:04:12.200 --> 00:04:15.090
to answer that question.

00:04:15.090 --> 00:04:18.940
First of all, you need local
product data, information

00:04:18.940 --> 00:04:20.579
about the product itself--

00:04:20.579 --> 00:04:25.290
a title, a description, brand,
the condition that the product

00:04:25.290 --> 00:04:28.530
is in, and so on.

00:04:28.530 --> 00:04:31.840
From this information, Google
Shopping renders a product

00:04:31.840 --> 00:04:36.030
page that reflects exactly
this information.

00:04:36.030 --> 00:04:39.630
So far, there's no big
difference to online shopping

00:04:39.630 --> 00:04:41.790
experience.

00:04:41.790 --> 00:04:45.670
When it comes to local shopping,
merchants also need

00:04:45.670 --> 00:04:50.360
to provide Google with their
store locations and price and

00:04:50.360 --> 00:04:54.320
inventory data, which associates
the stores with the

00:04:54.320 --> 00:04:58.860
product and adds store-specific
product

00:04:58.860 --> 00:05:03.175
properties like price, quantity,
and availability.

00:05:05.900 --> 00:05:10.720
In the Merchant Center, the
merchants get, then,

00:05:10.720 --> 00:05:12.810
information about the
quality and the

00:05:12.810 --> 00:05:14.635
freshness of that data.

00:05:17.250 --> 00:05:21.590
The user can then enter location
into the web browser

00:05:21.590 --> 00:05:26.110
and will see stores in the
neighborhood that sell the

00:05:26.110 --> 00:05:30.530
product that he or she is
currently browsing.

00:05:30.530 --> 00:05:34.090
The user can also see additional
information about

00:05:34.090 --> 00:05:37.790
the stores, like an address
or a phone number.

00:05:37.790 --> 00:05:41.460
And it's possible to see what
the product costs in that

00:05:41.460 --> 00:05:44.860
store and whether it's currently
available in stock

00:05:44.860 --> 00:05:47.980
or out of stock.

00:05:47.980 --> 00:05:50.090
So for the user, it's
nicely laid out.

00:05:50.090 --> 00:05:53.490
At the top of the page, he sees
the product information.

00:05:53.490 --> 00:05:57.910
And at the bottom, you can see
the nearby stores and whether

00:05:57.910 --> 00:05:59.330
it's in stock there--

00:05:59.330 --> 00:06:01.210
the local availability,
whether it's in

00:06:01.210 --> 00:06:04.860
stock or out of stock.

00:06:04.860 --> 00:06:07.920
So let us sum up that
for a second.

00:06:07.920 --> 00:06:10.470
Local shopping answers
two questions--

00:06:10.470 --> 00:06:14.700
where can I buy something, and
what do I want to buy?

00:06:14.700 --> 00:06:18.320
The first part is driven by
store locations, also known as

00:06:18.320 --> 00:06:19.130
business listings.

00:06:19.130 --> 00:06:21.410
It's just another term.

00:06:21.410 --> 00:06:24.025
They want part by products
listings--

00:06:24.025 --> 00:06:26.860
either online product listings
for the online products that

00:06:26.860 --> 00:06:30.410
you can get delivered to your
home, or local product

00:06:30.410 --> 00:06:33.350
listings for those products
that you can buy in some

00:06:33.350 --> 00:06:35.820
physical store.

00:06:35.820 --> 00:06:39.140
Let us distinguish a few
use cases that the

00:06:39.140 --> 00:06:40.750
merchant could be in.

00:06:40.750 --> 00:06:45.250
A merchant could have online
stores with pickup

00:06:45.250 --> 00:06:45.940
possibility.

00:06:45.940 --> 00:06:48.710
So you can order online, but
you can then go to some

00:06:48.710 --> 00:06:51.890
physical store and pick
up the product there.

00:06:51.890 --> 00:06:54.600
This merchant would obviously
upload business listings for

00:06:54.600 --> 00:06:57.780
the location, where can I pick
up the product, and online

00:06:57.780 --> 00:06:59.150
product listings.

00:06:59.150 --> 00:07:02.290
No local product listings
because everything needs to be

00:07:02.290 --> 00:07:03.540
ordered online.

00:07:05.610 --> 00:07:08.880
Another use case are
local stores only.

00:07:08.880 --> 00:07:12.660
So a merchant would then upload
business listings and

00:07:12.660 --> 00:07:18.090
local products, but no online
products because he requires

00:07:18.090 --> 00:07:22.000
the consumer to go to
some local store.

00:07:22.000 --> 00:07:25.870
Finally, the ideal case is that
the merchant has both an

00:07:25.870 --> 00:07:28.180
online store and local stores.

00:07:28.180 --> 00:07:31.860
And this merchant would upload
all three types of

00:07:31.860 --> 00:07:34.140
information.

00:07:34.140 --> 00:07:37.060
As you can already see from
the color coding on that

00:07:37.060 --> 00:07:41.350
slide, business listings are
managed with a different

00:07:41.350 --> 00:07:44.900
application than products
listings.

00:07:44.900 --> 00:07:48.050
The reason is that business
listings are also used

00:07:48.050 --> 00:07:51.360
somewhere else on Google,
like on Maps and so on.

00:07:51.360 --> 00:07:54.350
So business listings are managed
with Google Places and

00:07:54.350 --> 00:07:59.710
products listings with the
Google Merchant Center.

00:07:59.710 --> 00:08:03.650
And Claudia will now talk you
through the steps that it

00:08:03.650 --> 00:08:06.040
takes to participate
in local shopping.

00:08:06.040 --> 00:08:08.800
CLAUDIA CIORASCU: Thank
you, Thomas.

00:08:08.800 --> 00:08:13.710
So to make full use of Local
Shopping, the merchants have

00:08:13.710 --> 00:08:17.280
to do some preparation steps
at the beginning.

00:08:17.280 --> 00:08:22.060
This includes to sign up in the
local shopping program, to

00:08:22.060 --> 00:08:25.770
provide the necessary
information about the stores

00:08:25.770 --> 00:08:31.030
that they own, and to do the
necessary configuration in

00:08:31.030 --> 00:08:33.820
Google Merchant Center
account.

00:08:33.820 --> 00:08:38.409
After that, they can regularly
update information about their

00:08:38.409 --> 00:08:43.760
product via Google Content API,
as we'll see later for

00:08:43.760 --> 00:08:49.040
example, to keep up to date
information about the local

00:08:49.040 --> 00:08:52.830
products that they have, about
their price and inventory.

00:08:52.830 --> 00:08:55.630
And of course, they can all
the time monitor the

00:08:55.630 --> 00:08:58.000
performance and quality
of those products.

00:09:00.960 --> 00:09:03.890
Local Shopping program
is in beta and is

00:09:03.890 --> 00:09:06.210
open on request only.

00:09:06.210 --> 00:09:10.870
That means the merchant can
contact and send a request to

00:09:10.870 --> 00:09:16.060
Google sales representatives
and apply for the program.

00:09:16.060 --> 00:09:18.640
They will give you the
application and do the

00:09:18.640 --> 00:09:22.920
necessary configurations to
include the merchant in the

00:09:22.920 --> 00:09:24.170
Local Shopping program.

00:09:27.850 --> 00:09:31.380
As my colleague explained
earlier, Local Shopping

00:09:31.380 --> 00:09:34.130
depends on two sources
of information--

00:09:34.130 --> 00:09:38.215
one which handles data about
the stores owned by the

00:09:38.215 --> 00:09:42.160
merchant via Google Places, and
the other one which keeps

00:09:42.160 --> 00:09:48.050
track of the product listings
that are sold in those stores.

00:09:48.050 --> 00:09:52.820
And those are managed in
Google Merchant Center.

00:09:52.820 --> 00:09:56.640
For the next steps, we prepared
a demo account, a

00:09:56.640 --> 00:09:59.960
demo user, and we'll show
you exactly how

00:09:59.960 --> 00:10:02.670
this has to be done.

00:10:02.670 --> 00:10:09.030
Please let me introduce you
our imaginary lady, Geneva

00:10:09.030 --> 00:10:09.860
Matterhorn.

00:10:09.860 --> 00:10:13.740
By the way, her name matches
with the two most touristic

00:10:13.740 --> 00:10:17.510
places in Switzerland, the town
of Geneva and the highest

00:10:17.510 --> 00:10:21.440
peak, Matterhorn,
from Swiss Alps.

00:10:21.440 --> 00:10:28.900
She prepares very delicious
cakes, and she has a small

00:10:28.900 --> 00:10:33.640
business where she sells
those cakes.

00:10:33.640 --> 00:10:37.260
By chance, she has some shops
around San Francisco.

00:10:37.260 --> 00:10:39.680
But please don't run to
those shops because

00:10:39.680 --> 00:10:40.930
they are just imaginary.

00:10:43.560 --> 00:10:45.770
She keeps the information
about her

00:10:45.770 --> 00:10:48.700
shops in Google Places.

00:10:48.700 --> 00:10:51.270
Google Places is
an application.

00:10:51.270 --> 00:10:53.320
It's quite a young
product which

00:10:53.320 --> 00:10:55.560
already proved its potential.

00:10:55.560 --> 00:10:57.760
It handles the necessary
information

00:10:57.760 --> 00:10:59.440
about business listings.

00:10:59.440 --> 00:11:03.630
Business listings can be seen
as a presentation, or as a

00:11:03.630 --> 00:11:07.980
business card, about a physical
entity that can be

00:11:07.980 --> 00:11:10.740
identified by its location
in the real world.

00:11:13.810 --> 00:11:17.110
In the case of the merchants,
usually the business listing

00:11:17.110 --> 00:11:20.470
represents the stores
that they own.

00:11:20.470 --> 00:11:24.090
Each business listing will
finally appear either on

00:11:24.090 --> 00:11:29.700
Google Search, Google Maps,
or recently on Google+.

00:11:29.700 --> 00:11:35.140
A business listing contains
the information about the

00:11:35.140 --> 00:11:38.910
location of the store, like
the country, like

00:11:38.910 --> 00:11:42.930
the state or address.

00:11:42.930 --> 00:11:48.450
It also provides information
about how the potential

00:11:48.450 --> 00:11:52.780
customers can contact the
representatives of the store.

00:11:52.780 --> 00:11:56.160
It has a description which
promotes the store on the

00:11:56.160 --> 00:11:57.970
Search Results page.

00:11:57.970 --> 00:12:02.710
And usually, it is classified
in at least one pre-defined

00:12:02.710 --> 00:12:09.670
category to better describe
the store depending on the

00:12:09.670 --> 00:12:14.450
services and the store type.

00:12:14.450 --> 00:12:17.230
Besides the basic information
about the location, the

00:12:17.230 --> 00:12:20.760
merchant can annotate the
business listing with

00:12:20.760 --> 00:12:25.030
additional data like opening
hours, with pictures and

00:12:25.030 --> 00:12:29.640
videos to better promote the
store on the results page, or

00:12:29.640 --> 00:12:34.440
with information about the
facilities inside or outside

00:12:34.440 --> 00:12:37.950
the store to give a complete
image of the store and to help

00:12:37.950 --> 00:12:39.200
the customer to decide.

00:12:41.350 --> 00:12:44.360
Each store has to
be confirmed--

00:12:44.360 --> 00:12:46.820
validated and confirmed--

00:12:46.820 --> 00:12:56.620
in order to give the correct
information about the stores

00:12:56.620 --> 00:12:58.430
that they own.

00:12:58.430 --> 00:13:01.970
We didn't validate our stores
because we don't really want

00:13:01.970 --> 00:13:04.740
to make them appear
on Google Search.

00:13:04.740 --> 00:13:07.730
For the stores that appear on
the Search Results page, the

00:13:07.730 --> 00:13:11.420
merchants can actually monitor
the visibility and the impact

00:13:11.420 --> 00:13:15.380
of the business listing, looking
at the metrics under

00:13:15.380 --> 00:13:17.890
Impressions and Actions
columns.

00:13:17.890 --> 00:13:21.090
Impressions gives how many times
the stores have been

00:13:21.090 --> 00:13:25.150
listed on the results page while
the Action represents

00:13:25.150 --> 00:13:29.310
how many times the business
listing has been clicked by

00:13:29.310 --> 00:13:30.560
the potential customers.

00:13:33.130 --> 00:13:36.940
Each store is identified
by a store code.

00:13:36.940 --> 00:13:40.660
While this is internal
information and it's not

00:13:40.660 --> 00:13:44.650
displayed to the final customer,
it is actually very

00:13:44.650 --> 00:13:48.450
important for the merchants
because they can refer to the

00:13:48.450 --> 00:13:51.180
business listing from
an external source,

00:13:51.180 --> 00:13:54.390
as we'll see later.

00:13:54.390 --> 00:13:59.080
So this is how the dashboard
looks in Google Places for our

00:13:59.080 --> 00:14:01.530
lady, Geneva Matterhorn,
and shows all the

00:14:01.530 --> 00:14:04.100
shops that she owns.

00:14:04.100 --> 00:14:07.980
Complementary, Google Merchant
Center handles information

00:14:07.980 --> 00:14:10.460
about the product listings.

00:14:10.460 --> 00:14:13.970
Product listings are a rich
description of the products

00:14:13.970 --> 00:14:18.830
that can be purchased from those
stores or that can be

00:14:18.830 --> 00:14:22.405
purchased by the customer either
online or locally.

00:14:25.200 --> 00:14:29.200
Google Merchant Center provides
different mechanisms

00:14:29.200 --> 00:14:33.950
to upload data about the product
listings either via a

00:14:33.950 --> 00:14:38.510
[? flat ?] file in the data
fields page, either via

00:14:38.510 --> 00:14:42.830
Content API, as we'll
see later.

00:14:42.830 --> 00:14:46.270
To assure the quality of the
data and to check if the

00:14:46.270 --> 00:14:50.390
content of the data conforms
to the policy from Google

00:14:50.390 --> 00:14:54.220
Merchant Center, the merchants
can check the data quality

00:14:54.220 --> 00:14:58.370
page which shows the details
about the potential errors

00:14:58.370 --> 00:15:02.270
related to the upload process
or to the content of the

00:15:02.270 --> 00:15:08.780
product listings with details
on a case by case basis.

00:15:08.780 --> 00:15:12.840
At any time, the merchant can
monitor the state and the

00:15:12.840 --> 00:15:16.520
performance of the product
listings, looking at the

00:15:16.520 --> 00:15:21.940
Performance page or on
the Dashboard page.

00:15:21.940 --> 00:15:26.370
Once the merchant is included in
the Local Shopping program,

00:15:26.370 --> 00:15:31.150
he has access to the Local
Shopping Settings page.

00:15:31.150 --> 00:15:34.530
He has to finish the process
by confirming the

00:15:34.530 --> 00:15:38.840
participation in the program by
enabling the Local Shopping

00:15:38.840 --> 00:15:40.590
on this page.

00:15:40.590 --> 00:15:44.560
In this way, he will be able
actually to upload information

00:15:44.560 --> 00:15:50.590
about the local products and,
in addition, also he can

00:15:50.590 --> 00:15:53.800
upload information about the
business listings from Google

00:15:53.800 --> 00:15:58.040
Places but via Google
Merchant Center.

00:15:58.040 --> 00:16:02.180
As I said, Local Shopping on
both data from Google Places

00:16:02.180 --> 00:16:04.010
and Google Merchant Center.

00:16:04.010 --> 00:16:08.600
To make the link between the two
accounts, the merchant has

00:16:08.600 --> 00:16:12.780
to provide information about the
Google Places account that

00:16:12.780 --> 00:16:15.760
contains information
about his stores.

00:16:15.760 --> 00:16:19.460
If he doesn't have a Google
Places account yet, then he

00:16:19.460 --> 00:16:23.180
can defer this at a later stage
and in this moment just

00:16:23.180 --> 00:16:25.010
use the first option.

00:16:25.010 --> 00:16:30.070
But usually, the merchants have
a Google Places account

00:16:30.070 --> 00:16:32.620
which is owned by the
same user as the

00:16:32.620 --> 00:16:34.100
Google Merchant account.

00:16:34.100 --> 00:16:37.310
In this case, lady Geneva has
the same Google Places

00:16:37.310 --> 00:16:41.900
account, which means she's using
the second option to

00:16:41.900 --> 00:16:44.930
make the link between
the two accounts.

00:16:44.930 --> 00:16:49.650
If the Google Places account
is owned by another person,

00:16:49.650 --> 00:16:53.825
then the merchant can specify
the email address of the owner

00:16:53.825 --> 00:16:55.950
of the Google Places account.

00:16:55.950 --> 00:17:00.570
Then, the system will send a
confirmation email to the

00:17:00.570 --> 00:17:03.060
owner of the Google
Places account.

00:17:03.060 --> 00:17:07.920
And the person has to accept
and to agree to share the

00:17:07.920 --> 00:17:11.599
information about his stores
with this Google Merchant

00:17:11.599 --> 00:17:12.849
Center account.

00:17:15.380 --> 00:17:18.750
When everything is ready,
the merchant can upload

00:17:18.750 --> 00:17:23.060
information about his products
online and locally.

00:17:23.060 --> 00:17:25.720
As you can see, in this moment,
we have no products

00:17:25.720 --> 00:17:26.874
for our lady Geneva.

00:17:26.874 --> 00:17:29.255
Thomas, can you help her
to upload some data?

00:17:29.255 --> 00:17:31.310
THOMAS KOTZMANN: Yes,
I will be happy to.

00:17:34.110 --> 00:17:39.150
We have seen the sign up process
for Local Shopping and

00:17:39.150 --> 00:17:42.200
how to manage business
listings and

00:17:42.200 --> 00:17:44.110
link the two accounts.

00:17:44.110 --> 00:17:47.350
And now, let's upload some
products for Geneva.

00:17:50.920 --> 00:17:55.360
Local Product Listings is
information about products

00:17:55.360 --> 00:18:00.890
across stores without any
store-specific properties

00:18:00.890 --> 00:18:04.010
because the store-specific
properties will be provided

00:18:04.010 --> 00:18:07.660
later via the price and
inventory updates.

00:18:07.660 --> 00:18:08.910
I will get back to that.

00:18:13.670 --> 00:18:18.630
Local products are sent as XML
to our Content API for

00:18:18.630 --> 00:18:22.770
Shopping server, either via
PUT or POST depending on

00:18:22.770 --> 00:18:25.470
whether you insert or
update the products.

00:18:28.860 --> 00:18:30.930
Local products are
uploaded the same

00:18:30.930 --> 00:18:32.310
way as online products.

00:18:32.310 --> 00:18:34.940
So if you're familiar with the
Content API or have been to

00:18:34.940 --> 00:18:39.130
the previous session, then
there's no surprise in there.

00:18:42.130 --> 00:18:47.050
Local products are linked with
online products via reference

00:18:47.050 --> 00:18:49.880
so that they show up, that
they can be associated

00:18:49.880 --> 00:18:54.330
correctly and show up
on the same page.

00:18:54.330 --> 00:18:57.400
So assuming that you already
know about online products,

00:18:57.400 --> 00:19:00.680
let me now focus here on
the differences with

00:19:00.680 --> 00:19:03.390
local product data.

00:19:03.390 --> 00:19:06.090
First, there's the
channel element.

00:19:06.090 --> 00:19:08.000
This is an optional element.

00:19:08.000 --> 00:19:11.370
If you omit it, it defaults
to online.

00:19:11.370 --> 00:19:14.530
So if you want to upload local
products, you have to

00:19:14.530 --> 00:19:16.460
explicitly set it to Local.

00:19:19.620 --> 00:19:23.690
Then, as mentioned before, if
the merchant has both online

00:19:23.690 --> 00:19:30.080
and local stores, he's advised
to link the local products

00:19:30.080 --> 00:19:32.690
with the corresponding
online ones via

00:19:32.690 --> 00:19:34.855
the web item ID element.

00:19:37.750 --> 00:19:42.290
The link to some landing page
of the merchant's own web

00:19:42.290 --> 00:19:45.275
presence is optional
for local products.

00:19:48.030 --> 00:19:49.980
The price is optional as well.

00:19:49.980 --> 00:19:53.670
But if given, it defines a
default national price.

00:19:53.670 --> 00:19:56.580
So it's actually a good thing
because if you do not specify

00:19:56.580 --> 00:20:01.030
a price during price inventory
updates, then the price for

00:20:01.030 --> 00:20:05.230
this particular store defaults
back to the price that was

00:20:05.230 --> 00:20:09.600
given when you uploaded
the product.

00:20:09.600 --> 00:20:13.680
Finally, there's no quantity or
availability on the product

00:20:13.680 --> 00:20:17.210
level because this is
store-specific information.

00:20:17.210 --> 00:20:20.060
It will differ from
store to store.

00:20:20.060 --> 00:20:23.810
In San Francisco, you may
have five pieces left.

00:20:23.810 --> 00:20:29.530
In New York, maybe 100.

00:20:29.530 --> 00:20:32.530
So now that you know the
differences between online and

00:20:32.530 --> 00:20:35.830
local products, there's really
not much behind it.

00:20:35.830 --> 00:20:41.650
Let's upload some products via
the [? email ?] page that you

00:20:41.650 --> 00:20:45.250
also have seen in the previous
session, some simple tools

00:20:45.250 --> 00:20:49.040
that we provide to allow to
play around with the API.

00:20:49.040 --> 00:20:52.180
It's probably not for your
production uses, but it's a

00:20:52.180 --> 00:20:56.560
very nice way to issue real
Content API requests and see

00:20:56.560 --> 00:20:59.180
the result immediately.

00:20:59.180 --> 00:21:00.510
So we do a batch request.

00:21:00.510 --> 00:21:03.470
We upload items, local
products or items.

00:21:03.470 --> 00:21:04.750
And we do a batch request.

00:21:04.750 --> 00:21:07.200
You should do the same for
better performance.

00:21:07.200 --> 00:21:11.467
And we upload to the URL
content.googleap

00:21:11.467 --> 00:21:16.740
is.com/content/v1.

00:21:16.740 --> 00:21:22.880
Then, the Merchant Center
account IP of our cake stores,

00:21:22.880 --> 00:21:25.990
followed by
/items/products/schema, which

00:21:25.990 --> 00:21:30.505
just means we upload items, and
then /batch because we do

00:21:30.505 --> 00:21:33.480
a batch request.

00:21:33.480 --> 00:21:37.720
We upload four entries in this
batch request, two online

00:21:37.720 --> 00:21:41.790
products and two corresponding
local products.

00:21:41.790 --> 00:21:44.510
The first entry corresponds
to an online product.

00:21:44.510 --> 00:21:45.410
It has a title.

00:21:45.410 --> 00:21:50.560
So Geneva sells very good
strawberry cakes, actually the

00:21:50.560 --> 00:21:54.340
best ones in the world, as the
description indicates.

00:21:54.340 --> 00:21:58.240
There's a link to the web
presence of this store.

00:21:58.240 --> 00:22:01.080
We set the channel to online
here because we uploaded an

00:22:01.080 --> 00:22:02.450
online product.

00:22:02.450 --> 00:22:05.110
We could have just as well
omitted this element because

00:22:05.110 --> 00:22:06.430
this is the default.

00:22:06.430 --> 00:22:10.720
But this is just to show you
explicitly the difference.

00:22:10.720 --> 00:22:12.770
Then, we have some ID.

00:22:12.770 --> 00:22:15.830
The merchant can pick any ID.

00:22:15.830 --> 00:22:19.350
So our online product
has the ID 01.

00:22:19.350 --> 00:22:22.070
And then, the standard
attributes, the content

00:22:22.070 --> 00:22:26.880
language, the country, some
product category which is in

00:22:26.880 --> 00:22:29.380
this case, bakery cakes.

00:22:29.380 --> 00:22:33.540
The condition, new-- well, I
would hope so for cakes.

00:22:33.540 --> 00:22:37.170
The price-- so if you ordered
online, it costs $14.

00:22:37.170 --> 00:22:40.500
And it's in stock, so you
can order it online.

00:22:40.500 --> 00:22:44.520
And then, for online products,
we also specified tax and

00:22:44.520 --> 00:22:47.030
shipping information.

00:22:47.030 --> 00:22:50.700
So that should look
familiar to you.

00:22:50.700 --> 00:22:53.640
It becomes more interesting with
the second entry, which

00:22:53.640 --> 00:22:56.910
corresponds to the
local product.

00:22:56.910 --> 00:23:00.070
We have, again, a title,
strawberry cake.

00:23:00.070 --> 00:23:01.850
Again, the same description.

00:23:01.850 --> 00:23:04.020
But now, the channel is local.

00:23:04.020 --> 00:23:07.820
So we tell the Content API we
uploaded a local product.

00:23:07.820 --> 00:23:10.710
Then again, content language
and country

00:23:10.710 --> 00:23:12.350
and a different ID.

00:23:12.350 --> 00:23:15.920
Now, our ID is 11
instead of 01.

00:23:15.920 --> 00:23:20.330
But we use, as a twist, the web
item ID to link this local

00:23:20.330 --> 00:23:24.130
product to the corresponding
online product.

00:23:24.130 --> 00:23:26.590
Then, we have a default
national price.

00:23:26.590 --> 00:23:29.390
So if we later on, for a
particular store, do not

00:23:29.390 --> 00:23:33.330
specify any price, then for
this store, the price will

00:23:33.330 --> 00:23:34.750
default to $15.50.

00:23:34.750 --> 00:23:38.030
So it seems to be a bit more
expensive than if you were to

00:23:38.030 --> 00:23:39.990
order it online.

00:23:39.990 --> 00:23:42.300
Then, we have, again,
the product

00:23:42.300 --> 00:23:43.790
category and the condition.

00:23:43.790 --> 00:23:45.950
And that's pretty much
all it takes to

00:23:45.950 --> 00:23:48.080
submit a local product.

00:23:48.080 --> 00:23:52.600
We have the same below again
for pineapple cakes just to

00:23:52.600 --> 00:23:55.430
make the experiment a bit
more interesting.

00:23:55.430 --> 00:23:58.120
But these entries have all
the same structure.

00:23:58.120 --> 00:24:00.370
So I will not go into
details there.

00:24:00.370 --> 00:24:02.500
So let us execute
this request.

00:24:02.500 --> 00:24:04.660
Claudia, please press
the button.

00:24:04.660 --> 00:24:07.620
And we'll see how it works.

00:24:07.620 --> 00:24:10.610
So this is the request that we
send to the Content API.

00:24:10.610 --> 00:24:12.070
And we got the response back.

00:24:12.070 --> 00:24:16.450
We see from the status code
200 it was successful.

00:24:16.450 --> 00:24:21.940
And the response just echoes the
request and tells us that

00:24:21.940 --> 00:24:24.950
all four entries have been
uploaded successfully.

00:24:29.200 --> 00:24:30.744
CLAUDIA CIORASCU: Let's see
how this looks like in

00:24:30.744 --> 00:24:32.480
Merchant Center.

00:24:32.480 --> 00:24:35.272
If we look at the
products page--

00:24:35.272 --> 00:24:36.840
Thomas, can you refresh,
please?

00:24:36.840 --> 00:24:39.830
THOMAS KOTZMANN: Yes.

00:24:39.830 --> 00:24:42.540
CLAUDIA CIORASCU: Voila,
Content API exists.

00:24:42.540 --> 00:24:46.540
We have the four products that
Thomas just uploaded via the

00:24:46.540 --> 00:24:47.990
Content API.

00:24:47.990 --> 00:24:51.610
As you can see, there
are four products.

00:24:51.610 --> 00:24:56.970
We can see the titles, the price
for those products, the

00:24:56.970 --> 00:25:01.270
availability for the online
products, the condition--

00:25:01.270 --> 00:25:03.850
which is new for all of them.

00:25:03.850 --> 00:25:07.930
And what's important is the
channel, which actually makes

00:25:07.930 --> 00:25:11.570
the distinction between which
products are online and which

00:25:11.570 --> 00:25:14.050
products are local.

00:25:14.050 --> 00:25:17.590
For all the products, the
merchant can also see the

00:25:17.590 --> 00:25:21.070
visibility and impact of those
products on the Search Results

00:25:21.070 --> 00:25:26.140
page and in the Impression
and Clicks columns.

00:25:26.140 --> 00:25:30.250
If we look in more details at
one of the local products, we

00:25:30.250 --> 00:25:33.880
can see the Status of the
product which, in this case,

00:25:33.880 --> 00:25:37.810
it's not yet searchable because
we just uploaded it.

00:25:37.810 --> 00:25:42.120
But also, we can verify the
information that has been

00:25:42.120 --> 00:25:45.050
provided when doing the
API [? call ?].

00:25:45.050 --> 00:25:48.910
We can see the ID, which
in this case is 11.

00:25:48.910 --> 00:25:51.730
We can see all the other
attributes like description,

00:25:51.730 --> 00:25:56.060
condition, price, et cetera,
but also the web item ID,

00:25:56.060 --> 00:25:59.260
which actually makes
the match with the

00:25:59.260 --> 00:26:00.904
corresponding online product.

00:26:04.540 --> 00:26:07.360
On the local data quality page,
the merchant can now

00:26:07.360 --> 00:26:12.270
have an overview of his
products, online and local, in

00:26:12.270 --> 00:26:15.750
a side-by-side comparison
format.

00:26:15.750 --> 00:26:19.260
In the first table, they can see
how many online products

00:26:19.260 --> 00:26:22.750
they have and how many local
products they have.

00:26:22.750 --> 00:26:26.730
This gives them an idea about
the products and which channel

00:26:26.730 --> 00:26:30.350
they are covering and how
much they are covering.

00:26:30.350 --> 00:26:33.320
In our case, we have
two online products

00:26:33.320 --> 00:26:36.290
and two local products.

00:26:36.290 --> 00:26:42.450
This is detailed day by day
for the first week.

00:26:42.450 --> 00:26:46.930
This can be detailed later with
day by day for the entire

00:26:46.930 --> 00:26:51.457
month, but there is also a trend
graph which quickly can

00:26:51.457 --> 00:26:55.170
show you the status
of the products.

00:26:55.170 --> 00:26:58.830
The last two columns highlight
the matching between the

00:26:58.830 --> 00:27:02.570
online and local products.

00:27:02.570 --> 00:27:05.950
The number of online products
matching to local products

00:27:05.950 --> 00:27:08.200
show many online actually
have a correspondent

00:27:08.200 --> 00:27:09.770
in the local channel.

00:27:09.770 --> 00:27:12.290
And the last column shows how
many local products have a

00:27:12.290 --> 00:27:16.300
correspondent in the
online channel.

00:27:16.300 --> 00:27:21.010
Usually for the merchants that
sell both online and local and

00:27:21.010 --> 00:27:24.740
that are selling all items
online and local, they will

00:27:24.740 --> 00:27:28.810
have similar numbers in the
two columns, and they will

00:27:28.810 --> 00:27:31.470
have around 100% matching.

00:27:31.470 --> 00:27:34.810
But these numbers actually
depend on the business model

00:27:34.810 --> 00:27:37.360
that the merchant has.

00:27:37.360 --> 00:27:41.200
For example, we can imagine that
our lady Geneva, since

00:27:41.200 --> 00:27:45.190
she's selling cakes and some
cakes cannot be sold online,

00:27:45.190 --> 00:27:49.320
she probably has more local
products than online products

00:27:49.320 --> 00:27:52.970
which means the number of local
products would be higher

00:27:52.970 --> 00:27:54.590
than the number of online.

00:27:54.590 --> 00:27:57.470
But it also means that the
number of local products

00:27:57.470 --> 00:28:00.700
matching with the online would
be actually smaller because

00:28:00.700 --> 00:28:03.420
there are smaller
online products.

00:28:03.420 --> 00:28:07.640
And thus, the matching will
not really be 100%.

00:28:07.640 --> 00:28:13.070
This is OK as long as this
pattern is constant over time.

00:28:13.070 --> 00:28:16.450
If it is a change in this
pattern, actually it indicates

00:28:16.450 --> 00:28:19.260
there could be an error
with the data

00:28:19.260 --> 00:28:21.050
that has been provided.

00:28:21.050 --> 00:28:24.790
Either the products don't match
any longer, either the

00:28:24.790 --> 00:28:29.580
IDs of the products have
changed, et cetera.

00:28:29.580 --> 00:28:34.910
Until now, Thomas helped lady
Geneva to upload data about

00:28:34.910 --> 00:28:38.140
the local and online products.

00:28:38.140 --> 00:28:42.610
But we have no information
about where the local

00:28:42.610 --> 00:28:45.920
products, where the cakes can
be bought, from which store

00:28:45.920 --> 00:28:48.240
and with which price?

00:28:48.240 --> 00:28:50.490
So, Thomas, you can--

00:28:50.490 --> 00:28:55.470
THOMAS KOTZMANN: And we add this
information right now via

00:28:55.470 --> 00:28:59.100
Price-Inventory Updates.

00:28:59.100 --> 00:29:02.300
Price-Inventory Updates
differ significantly

00:29:02.300 --> 00:29:04.870
from product requests.

00:29:04.870 --> 00:29:08.725
So they are submitted via
separate Price-Inventory API

00:29:08.725 --> 00:29:12.630
feed, which just means
it's a different URL,

00:29:12.630 --> 00:29:15.100
different XML structure.

00:29:15.100 --> 00:29:18.160
You can think of price-inventory
data as a

00:29:18.160 --> 00:29:22.240
mapping of store product peers
to store-specific product

00:29:22.240 --> 00:29:26.770
properties like price, quantity,
and availability.

00:29:26.770 --> 00:29:30.570
As mentioned before, some
products may have a different

00:29:30.570 --> 00:29:34.900
price in San Francisco than in
New York, so you want to

00:29:34.900 --> 00:29:39.230
specify it on a store
by store basis.

00:29:39.230 --> 00:29:42.950
Each entry must specify
at least a quantity.

00:29:42.950 --> 00:29:46.050
This is a required field.

00:29:46.050 --> 00:29:50.250
The price is mandatory only if
you have submitted the local

00:29:50.250 --> 00:29:53.530
product without the
default price.

00:29:53.530 --> 00:29:58.230
If you did submit the local
product with a price, you can

00:29:58.230 --> 00:30:00.830
override it with a
price-inventory update.

00:30:00.830 --> 00:30:04.970
But if you do not specify one,
then it will default to this

00:30:04.970 --> 00:30:07.400
national price.

00:30:07.400 --> 00:30:09.900
Something that's also different
to product uploads

00:30:09.900 --> 00:30:14.420
is that the only supported
operation is update.

00:30:14.420 --> 00:30:17.030
You cannot insert inventory.

00:30:17.030 --> 00:30:19.860
And you cannot really
delete inventory.

00:30:19.860 --> 00:30:23.410
If a product is no longer sold
in a certain store, you will

00:30:23.410 --> 00:30:25.950
just set the quantity
to 0 and the

00:30:25.950 --> 00:30:27.670
availability to out of stock.

00:30:27.670 --> 00:30:30.240
That's it.

00:30:30.240 --> 00:30:34.480
Another difference that is
notable is that updates are

00:30:34.480 --> 00:30:35.810
incremental.

00:30:35.810 --> 00:30:39.530
Remember, if you upload the
product, the latest version

00:30:39.530 --> 00:30:42.440
replaces any previous one.

00:30:42.440 --> 00:30:47.000
So if you omit an element there,
it also will not be

00:30:47.000 --> 00:30:49.200
there in the final result.

00:30:49.200 --> 00:30:52.440
This is not true for
inventory updates.

00:30:52.440 --> 00:30:53.990
They're incremental.

00:30:53.990 --> 00:30:56.240
So if you omit an element
here, the

00:30:56.240 --> 00:30:58.450
value remains unchanged.

00:30:58.450 --> 00:31:01.570
And if you want to delete a
certain value, you would

00:31:01.570 --> 00:31:03.646
specify an empty XML element.

00:31:06.460 --> 00:31:10.775
Something that is again similar
to product uploads, is

00:31:10.775 --> 00:31:14.530
that they can be grouped
in batch requests.

00:31:14.530 --> 00:31:17.010
And they should be grouped in
batch requests for better

00:31:17.010 --> 00:31:18.080
performance.

00:31:18.080 --> 00:31:20.360
Here, I can give you a hint.

00:31:20.360 --> 00:31:24.840
Rather group by product
than by store.

00:31:24.840 --> 00:31:28.920
So rather update a few products
across many of your

00:31:28.920 --> 00:31:33.090
stores than many products
across few stores.

00:31:33.090 --> 00:31:34.500
It will simply be
more efficient.

00:31:37.570 --> 00:31:41.460
Let us look now how to really
technically do a

00:31:41.460 --> 00:31:43.840
Price-Inventory Update.

00:31:43.840 --> 00:31:46.010
As I said, the URL
is different.

00:31:46.010 --> 00:31:48.290
Only the beginning
is the same.

00:31:48.290 --> 00:31:53.910
content.googleap
is.com/content/v1, and the

00:31:53.910 --> 00:31:56.540
account ID.

00:31:56.540 --> 00:31:59.190
But then, followed by /inventory
because we want to

00:31:59.190 --> 00:32:04.010
do an inventory request,
followed by the store code.

00:32:04.010 --> 00:32:06.800
Remember, that's the one that
Claudia pointed out when we

00:32:06.800 --> 00:32:09.810
went through the Google
Places demo.

00:32:09.810 --> 00:32:14.470
Followed by the literal /items
and the ID of the local

00:32:14.470 --> 00:32:18.970
product whose inventory
you want to update.

00:32:18.970 --> 00:32:21.360
And this ID consists
of four components.

00:32:21.360 --> 00:32:25.000
It will also sound familiar to
those of you that already use

00:32:25.000 --> 00:32:26.450
the Content API.

00:32:26.450 --> 00:32:28.140
The first one is the channel.

00:32:28.140 --> 00:32:30.340
Obviously, it's local here.

00:32:30.340 --> 00:32:34.990
Then, the language, English,
the country, US, and the

00:32:34.990 --> 00:32:38.600
merchant specific ID of
the local product.

00:32:38.600 --> 00:32:42.820
Here, 11, which relates to
our strawberry cake.

00:32:42.820 --> 00:32:47.775
We update just the inventory of
this single item, so we do

00:32:47.775 --> 00:32:50.290
a PUT request because
we do an update.

00:32:50.290 --> 00:32:52.650
PUT corresponds to update.

00:32:52.650 --> 00:32:55.170
And then, we send
some XML entry.

00:32:55.170 --> 00:32:56.795
And how that looks
like, I will show

00:32:56.795 --> 00:33:00.300
you on the next slide.

00:33:00.300 --> 00:33:03.730
In contrast, for batch requests,
you would replace

00:33:03.730 --> 00:33:08.200
everything after "inventory"
by /batch.

00:33:08.200 --> 00:33:12.630
And then, instead of sending a
single entry, you would send a

00:33:12.630 --> 00:33:16.370
feed of multiple entries.

00:33:16.370 --> 00:33:20.240
Each entry needs to specify the
operation because we can

00:33:20.240 --> 00:33:24.800
no longer infer that from the
HTTP method because you can--

00:33:24.800 --> 00:33:29.480
so for products, you can merge,
delete, and update and

00:33:29.480 --> 00:33:31.710
insertions into one
batch request.

00:33:31.710 --> 00:33:34.720
So you'll need to specify
the operation here.

00:33:34.720 --> 00:33:37.530
For Price-Inventory Updates,
remember the only

00:33:37.530 --> 00:33:39.270
operation is Update.

00:33:39.270 --> 00:33:43.750
But for consistency across the
API feeds, we require it to be

00:33:43.750 --> 00:33:46.630
specified here as well.

00:33:46.630 --> 00:33:50.600
And since the URL that we send
this request to does no longer

00:33:50.600 --> 00:33:53.520
encode the ID of the item whose
inventory we want to

00:33:53.520 --> 00:33:57.750
update, you'll need to include
this information in the entry

00:33:57.750 --> 00:33:59.820
via the ID element.

00:33:59.820 --> 00:34:03.470
Good thing, though, is that this
ID has exactly the same

00:34:03.470 --> 00:34:07.550
structure as the URL that you
would use if you would update

00:34:07.550 --> 00:34:12.300
the inventory only of this
one, single item.

00:34:12.300 --> 00:34:14.190
So it's as easy as that.

00:34:14.190 --> 00:34:17.770
Now, how does the
entry look like?

00:34:17.770 --> 00:34:19.800
There are actually not so
many attributes in a

00:34:19.800 --> 00:34:21.800
price-inventory update.

00:34:21.800 --> 00:34:24.060
You have the price,
what does it cost?

00:34:24.060 --> 00:34:27.230
If you do not have a default
national price, you need to

00:34:27.230 --> 00:34:28.560
specify that here.

00:34:28.560 --> 00:34:33.429
The quantity, the mandatory
field to say how many pieces

00:34:33.429 --> 00:34:37.800
are still left in this store to
avoid that then consumers

00:34:37.800 --> 00:34:41.989
go somewhere and do not find
the product anymore.

00:34:41.989 --> 00:34:46.389
The availability in stock, and
here please make sure to make

00:34:46.389 --> 00:34:48.050
it consistent with quantity.

00:34:48.050 --> 00:34:50.570
So if the quantity's nonzero,
the availability

00:34:50.570 --> 00:34:52.320
should be in stock.

00:34:52.320 --> 00:34:56.010
And if it's zero, it should
be out of stock.

00:34:56.010 --> 00:35:00.010
And then, you can even
specify sale prices.

00:35:00.010 --> 00:35:03.930
So for example, you
sell the product--

00:35:03.930 --> 00:35:05.810
in our case, the strawberry
cake--

00:35:05.810 --> 00:35:11.030
for a special discount at $12.90
during that conference.

00:35:11.030 --> 00:35:15.820
So you can even specify the
interval during which the sale

00:35:15.820 --> 00:35:20.120
is effective via the sale
price effective date.

00:35:20.120 --> 00:35:23.870
This element consists of
two date-time specs.

00:35:23.870 --> 00:35:27.920
You can set either of them to
null for an open-ended sale

00:35:27.920 --> 00:35:33.090
price that either started way in
the past or ends somewhere

00:35:33.090 --> 00:35:34.480
in the future.

00:35:34.480 --> 00:35:38.030
So here, I made our sale start
at the beginning of the

00:35:38.030 --> 00:35:39.040
conference.

00:35:39.040 --> 00:35:40.510
And it's open-ended.

00:35:40.510 --> 00:35:45.260
So at some point, I will have to
do an inventory update with

00:35:45.260 --> 00:35:51.380
an empty sale price element to
stop the sale, to delete the

00:35:51.380 --> 00:35:55.770
value because if I do in between
some Price-Inventory

00:35:55.770 --> 00:36:00.160
Updates and do not mention the
sale price at all, it will

00:36:00.160 --> 00:36:03.280
keep unchanged because remember,
Price-Inventory

00:36:03.280 --> 00:36:06.050
Updates are incremental.

00:36:06.050 --> 00:36:10.970
Each date-time spec in the sale
price effective date can,

00:36:10.970 --> 00:36:13.910
but does not have to have,
a time portion.

00:36:13.910 --> 00:36:17.130
It can also be just a date.

00:36:17.130 --> 00:36:19.500
When it has a time portion,
you can also

00:36:19.500 --> 00:36:20.820
specify a time zone.

00:36:20.820 --> 00:36:22.730
But you do not have to.

00:36:22.730 --> 00:36:25.840
And if you don't specify a
time zone, the time is

00:36:25.840 --> 00:36:30.740
interpreted in the local time
of each and every store.

00:36:30.740 --> 00:36:34.170
So in this case, our sale starts
at 9 o'clock in New

00:36:34.170 --> 00:36:37.220
York and also at 9 o'clock
in San Francisco.

00:36:37.220 --> 00:36:39.660
Although, strictly speaking,
these are two

00:36:39.660 --> 00:36:43.190
different points in time.

00:36:43.190 --> 00:36:46.550
So let us now see how that
looks like in practice.

00:36:46.550 --> 00:36:49.740
Let us do an inventory update.

00:36:49.740 --> 00:36:51.800
We again use the demo
page that also

00:36:51.800 --> 00:36:53.310
supports inventory updates.

00:36:53.310 --> 00:36:56.080
We just pick the
tab, Inventory.

00:36:56.080 --> 00:37:00.060
We again do a Batch Request.

00:37:00.060 --> 00:37:07.120
So the URL is content.googleap
is.com/content/v1 and the

00:37:07.120 --> 00:37:14.270
familiar account ID of our lady
Geneva /inventory/batch.

00:37:14.270 --> 00:37:15.790
And we send two entries.

00:37:15.790 --> 00:37:18.250
So we do two Price-Inventory
Updates.

00:37:18.250 --> 00:37:22.380
But if you look closely, we
update only one item, namely

00:37:22.380 --> 00:37:28.890
our strawberry cake, with the
ID 11, across two stores,

00:37:28.890 --> 00:37:32.150
namely store1 and store2.

00:37:32.150 --> 00:37:35.880
So we followed our own advice to
rather update few products,

00:37:35.880 --> 00:37:38.750
only one product, across
many stores than

00:37:38.750 --> 00:37:41.170
the other way around.

00:37:41.170 --> 00:37:46.590
The first entry corresponds to
the store1 and specifies the

00:37:46.590 --> 00:37:49.100
price, $15.50.

00:37:49.100 --> 00:37:51.260
There are eight pieces
of this delicious

00:37:51.260 --> 00:37:53.640
strawberry cake left.

00:37:53.640 --> 00:37:57.470
It costs $12.90 in this
particular store.

00:37:57.470 --> 00:37:59.000
And we define a sale price.

00:37:59.000 --> 00:38:01.820
So this is exactly what
you saw on the slides.

00:38:01.820 --> 00:38:05.700
The second entry
is for store2.

00:38:05.700 --> 00:38:09.860
There, the cake is
a bit cheaper, so

00:38:09.860 --> 00:38:12.350
$14 instead of $15.50.

00:38:12.350 --> 00:38:14.960
But, maybe because it's
cheaper, they

00:38:14.960 --> 00:38:16.300
ran out of the cakes.

00:38:16.300 --> 00:38:20.620
So they have zero pieces left,
and it's now out of stock.

00:38:20.620 --> 00:38:21.560
So let us now--

00:38:21.560 --> 00:38:23.530
Claudia, please press
the button--

00:38:23.530 --> 00:38:25.170
execute this inventory update.

00:38:27.950 --> 00:38:29.800
We again see it was
successful.

00:38:29.800 --> 00:38:31.470
The status code is 200.

00:38:31.470 --> 00:38:35.480
And similar to product uploads,
the response echoes

00:38:35.480 --> 00:38:39.880
the input just to tell you that
both entries have been

00:38:39.880 --> 00:38:41.460
updated successfully.

00:38:49.360 --> 00:38:53.170
If you do not want to assemble
the XML yourself, you can also

00:38:53.170 --> 00:38:55.760
use client libraries.

00:38:55.760 --> 00:38:59.500
I have just as an example
picked Python here.

00:38:59.500 --> 00:39:03.550
You would create an inventory
entry and set all the

00:39:03.550 --> 00:39:07.370
attributes that you
want to change.

00:39:07.370 --> 00:39:09.740
If you do not want to change
one attribute,

00:39:09.740 --> 00:39:10.880
just don't set it.

00:39:10.880 --> 00:39:16.630
If you want to delete it, set
it to an empty value.

00:39:16.630 --> 00:39:20.640
Then, we retrieve the content
for Shopping client, and we

00:39:20.640 --> 00:39:24.770
call the update inventory entry
method where we pass in

00:39:24.770 --> 00:39:29.440
the inventory entry and the ID
of the item whose inventory we

00:39:29.440 --> 00:39:32.450
want to change.

00:39:32.450 --> 00:39:35.300
It's similar for
batch requests.

00:39:35.300 --> 00:39:40.290
There, you would just set the
ID on the entry itself.

00:39:40.290 --> 00:39:43.180
And you would call a method that
does not take a single

00:39:43.180 --> 00:39:45.300
entry, but a list of entries.

00:39:45.300 --> 00:39:48.460
Otherwise, it's the same.

00:39:48.460 --> 00:39:51.530
So let us now look at
the data freshness.

00:39:55.840 --> 00:39:58.480
CLAUDIA CIORASCU: Now that we
have information about the

00:39:58.480 --> 00:40:08.250
products per store, we can see
in the Local Data Quality page

00:40:08.250 --> 00:40:11.430
more information about
the local products.

00:40:11.430 --> 00:40:15.270
For example, the first column
will show the number of stores

00:40:15.270 --> 00:40:19.090
that have local products
available.

00:40:19.090 --> 00:40:22.110
Because merchants usually don't
close-- hopefully--

00:40:22.110 --> 00:40:26.540
or don't open stores every day,
here, normally it's a

00:40:26.540 --> 00:40:28.300
constant number over time.

00:40:28.300 --> 00:40:30.770
In this case, for example, two
stores because we uploaded

00:40:30.770 --> 00:40:32.730
data for two stores.

00:40:32.730 --> 00:40:37.720
But any drop in the graph at
the beginning or any number

00:40:37.720 --> 00:40:41.130
which is lower than the expected
number of stores is

00:40:41.130 --> 00:40:44.090
actually an indication that
something went wrong with

00:40:44.090 --> 00:40:45.200
uploading the data.

00:40:45.200 --> 00:40:49.820
Maybe the match with the store
ID was wrong, or maybe the

00:40:49.820 --> 00:40:54.500
information was not the
expected amount.

00:40:54.500 --> 00:40:57.690
Besides that, the user
can also check the

00:40:57.690 --> 00:40:59.390
freshness of the data.

00:40:59.390 --> 00:41:03.250
It is recommended that the price
and inventory data be

00:41:03.250 --> 00:41:06.320
uploaded at least
once per day.

00:41:06.320 --> 00:41:10.670
Compare with the information
about the online products that

00:41:10.670 --> 00:41:15.140
can be uploaded once per week,
or the ones related to the

00:41:15.140 --> 00:41:19.310
stores, which can be provided
at least once per month.

00:41:19.310 --> 00:41:22.210
So because we are expecting
that the data is uploaded

00:41:22.210 --> 00:41:25.140
every day, usually the merchants
will see that all

00:41:25.140 --> 00:41:29.910
the stores have refreshed data
in the last 12 hours.

00:41:29.910 --> 00:41:31.430
It can be in the
last 12 hours.

00:41:31.430 --> 00:41:33.680
It can be in the
last 24 hours.

00:41:33.680 --> 00:41:37.875
But if it gets too old, then the
merchants should actually

00:41:37.875 --> 00:41:39.980
re-upload information
about the local

00:41:39.980 --> 00:41:41.600
products and the stores.

00:41:44.290 --> 00:41:47.450
There's also information
of similar

00:41:47.450 --> 00:41:49.120
metrics, but per stores.

00:41:49.120 --> 00:41:52.270
Which stores actually
have fresh data?

00:41:52.270 --> 00:41:55.430
And again, we are expecting--

00:41:55.430 --> 00:41:56.460
the merchants are expecting--

00:41:56.460 --> 00:41:59.860
to see that all the stores have
fresh data in the last 12

00:41:59.860 --> 00:42:04.080
hours to be sure that the local
products will appear

00:42:04.080 --> 00:42:07.510
with up to date price
and inventory.

00:42:07.510 --> 00:42:12.430
If there is at least one store
or there are some stores which

00:42:12.430 --> 00:42:16.160
are classified in one of the
48 hours, for example, or

00:42:16.160 --> 00:42:19.330
seven days, it means that the
data is stale, and it's old.

00:42:19.330 --> 00:42:23.160
And it should be re-uploaded
by the merchant.

00:42:23.160 --> 00:42:26.830
Because in most of the cases,
the matching between the

00:42:26.830 --> 00:42:31.720
online and the local product
listing is important, we also

00:42:31.720 --> 00:42:37.230
show the number of stores that
have matching between the

00:42:37.230 --> 00:42:40.180
local and product items.

00:42:40.180 --> 00:42:43.260
In our case, we have only two
local products and two online

00:42:43.260 --> 00:42:44.540
stores that we are matching.

00:42:44.540 --> 00:42:49.750
So both stores actually appear
with 100% matching.

00:42:49.750 --> 00:42:53.350
But this actually depends,
again, on the business model

00:42:53.350 --> 00:42:54.920
that the merchant has.

00:42:54.920 --> 00:43:01.020
So if it is more like an online
merchant with pick-up,

00:43:01.020 --> 00:43:04.260
then it means has more
online products.

00:43:04.260 --> 00:43:06.530
The matching will be less
because it doesn't really have

00:43:06.530 --> 00:43:07.560
local products.

00:43:07.560 --> 00:43:10.630
Or, for example, if we can
imagine for our lady Geneva

00:43:10.630 --> 00:43:13.880
that she sells more of her local
products than online,

00:43:13.880 --> 00:43:17.110
again, the matching is less
because actually it has less

00:43:17.110 --> 00:43:18.290
online products.

00:43:18.290 --> 00:43:20.920
So this depends on the model
of the business.

00:43:20.920 --> 00:43:24.120
But it's important to be
constant over time.

00:43:24.120 --> 00:43:26.820
Any change in this pattern
could actually be an

00:43:26.820 --> 00:43:29.530
indication that it is a
problem with the data.

00:43:29.530 --> 00:43:33.040
And in this case, the merchant
should actually look more into

00:43:33.040 --> 00:43:35.135
the data and fix the
potential errors.

00:43:39.480 --> 00:43:43.560
In a real situation, lady Geneva
will actually be happy

00:43:43.560 --> 00:43:47.300
to help the potential customers,
to give them that

00:43:47.300 --> 00:43:48.420
delicious cake.

00:43:48.420 --> 00:43:51.750
But since now it's imaginary,
we'll just demonstrate how

00:43:51.750 --> 00:43:53.000
[? we see this ?] now.

00:43:55.750 --> 00:43:57.910
THOMAS KOTZMANN: So that brings
us to the end of our

00:43:57.910 --> 00:43:59.380
presentation.

00:43:59.380 --> 00:44:03.990
You have seen that you have to
sign up for Local Shopping,

00:44:03.990 --> 00:44:07.610
how to upload and manage store
locations, also known as

00:44:07.610 --> 00:44:11.560
business listings, how to link
the Google Places account to

00:44:11.560 --> 00:44:15.480
your Merchant Center Account,
how to upload product data,

00:44:15.480 --> 00:44:18.060
local product data, and what
the difference to online

00:44:18.060 --> 00:44:23.420
product data is, how to do price
and inventory updates,

00:44:23.420 --> 00:44:26.780
and how to verify the freshness
of your data in

00:44:26.780 --> 00:44:28.030
Merchant Center.

00:44:31.880 --> 00:44:34.880
Local Shopping on Google
Shopping helps consumers to

00:44:34.880 --> 00:44:37.830
find stores in their
neighborhood where they can

00:44:37.830 --> 00:44:39.260
pick up the product.

00:44:39.260 --> 00:44:42.980
So it's really a good experience
for the user.

00:44:42.980 --> 00:44:48.370
It also enables local stores to
compete with online stores

00:44:48.370 --> 00:44:50.180
and therefore has a significant

00:44:50.180 --> 00:44:53.070
benefit for the merchant.

00:44:53.070 --> 00:44:58.060
The program is currently in beta
and has been launched in

00:44:58.060 --> 00:45:02.230
US, UK, Germany, France,
and Japan.

00:45:02.230 --> 00:45:05.530
If you are in the US, then
just follow this short

00:45:05.530 --> 00:45:08.320
link to sign up.

00:45:08.320 --> 00:45:11.980
This will lead you to the
Merchant Center Help Center

00:45:11.980 --> 00:45:14.530
pages, so you can also
find it there.

00:45:14.530 --> 00:45:19.710
Fill in the form to apply to
participate in Local Shopping.

00:45:19.710 --> 00:45:23.700
If you are in one of the other
countries, then please contact

00:45:23.700 --> 00:45:26.480
your Google sales
representative.

00:45:26.480 --> 00:45:29.160
You'll find more information,
in particular how to use the

00:45:29.160 --> 00:45:32.615
Content API both for the upload
of local products and

00:45:32.615 --> 00:45:37.590
for price-inventory updates on
this URL on the developer's

00:45:37.590 --> 00:45:41.660
page, the documentation
for the Content API.

00:45:41.660 --> 00:45:43.680
And that is the end
of our session.

00:45:43.680 --> 00:45:45.490
I have, again, included
the links here.

00:45:45.490 --> 00:45:48.500
I think we will also
publish the slides.

00:45:48.500 --> 00:45:51.330
So thank you very much
for your attention.

00:45:51.330 --> 00:45:55.400
And now, we have some time
left for questions.

00:45:55.400 --> 00:46:01.100
[APPLAUSE]

00:46:01.100 --> 00:46:03.240
THOMAS KOTZMANN:
Any questions?

00:46:03.240 --> 00:46:04.840
Yeah, please use the mic.

00:46:09.090 --> 00:46:10.810
AUDIENCE: Is there any
particular method for

00:46:10.810 --> 00:46:14.140
representing deals, promotional
deals, like buy

00:46:14.140 --> 00:46:17.030
one get one, at least showing
some kind of flag of that

00:46:17.030 --> 00:46:18.370
information?

00:46:18.370 --> 00:46:20.300
THOMAS KOTZMANN:
Currently not.

00:46:20.300 --> 00:46:22.760
What you can do is to
define a sale price.

00:46:22.760 --> 00:46:23.870
That will be highlighted.

00:46:23.870 --> 00:46:25.600
It's on sale now.

00:46:25.600 --> 00:46:28.440
We will show the
special price.

00:46:28.440 --> 00:46:33.190
So this is your opportunity to
promote a particular store via

00:46:33.190 --> 00:46:36.645
the sale price and the sale
price effective date.

00:46:36.645 --> 00:46:39.210
AUDIENCE: I have one more
question, unrelated.

00:46:39.210 --> 00:46:40.065
THOMAS KOTZMANN: Absolutely,
go for it.

00:46:40.065 --> 00:46:42.820
AUDIENCE: It relates
to frequency.

00:46:42.820 --> 00:46:45.630
So would it be realistic to
think that a large retailer

00:46:45.630 --> 00:46:49.130
could maintain a perpetual
inventory, in other words

00:46:49.130 --> 00:46:51.320
somewhat frequent inventory
updates?

00:46:51.320 --> 00:46:53.040
THOMAS KOTZMANN: Yes,
yes, absolutely.

00:46:53.040 --> 00:46:54.950
So what we set, this update--

00:46:54.950 --> 00:46:56.460
that's an excellent question--

00:46:56.460 --> 00:47:00.030
this update frequency that we
set were some recommendations.

00:47:00.030 --> 00:47:04.060
At least once a month, update
the store locations.

00:47:04.060 --> 00:47:05.820
Probably once a week
or once a day,

00:47:05.820 --> 00:47:07.820
update the local products.

00:47:07.820 --> 00:47:10.560
And then, the inventory,
at least once a day.

00:47:10.560 --> 00:47:14.160
But if it changes, update it
immediately because that's

00:47:14.160 --> 00:47:15.870
good for the user, right?

00:47:15.870 --> 00:47:19.680
We need fresh data because
otherwise, the user thinks

00:47:19.680 --> 00:47:22.840
it's in stock because you have
not updated it, goes to the

00:47:22.840 --> 00:47:24.950
store, and is very disappointed
because it ran

00:47:24.950 --> 00:47:25.940
out of stock.

00:47:25.940 --> 00:47:29.710
So absolutely, we always
recommend update this

00:47:29.710 --> 00:47:31.950
inventory data as soon
as it changes.

00:47:31.950 --> 00:47:34.650
With how many requests
you can do,

00:47:34.650 --> 00:47:36.900
that's also a good question.

00:47:36.900 --> 00:47:39.640
And that's one of the reasons
why this program is in beta.

00:47:39.640 --> 00:47:43.510
We actually want to work with
merchants to get that right.

00:47:43.510 --> 00:47:47.510
And as I said, the different
costs associated with a

00:47:47.510 --> 00:47:49.780
request, therefore in
a batch request--

00:47:49.780 --> 00:47:53.510
I told you, rather group by
products than by stores.

00:47:53.510 --> 00:47:55.530
And different quotas apply.

00:47:55.530 --> 00:47:57.900
And we just need to get
the numbers right.

00:47:57.900 --> 00:48:00.590
But if you apply and we contact
you, then we will work

00:48:00.590 --> 00:48:02.486
with you and make sure that
it fits your use case.

00:48:02.486 --> 00:48:03.400
AUDIENCE: Thank you.

00:48:03.400 --> 00:48:05.840
THOMAS KOTZMANN: Sure.

00:48:05.840 --> 00:48:07.090
Any other questions?

00:48:11.070 --> 00:48:13.550
Take your time.

00:48:13.550 --> 00:48:15.400
AUDIENCE: Thank you guys
for the information.

00:48:15.400 --> 00:48:21.430
Can you speak to how this
content fed up into your

00:48:21.430 --> 00:48:27.490
system might be tied into
product listing ads?

00:48:27.490 --> 00:48:31.080
THOMAS KOTZMANN: Yeah, for the
time being, Local Shopping is

00:48:31.080 --> 00:48:34.290
not affected by listing ads.

00:48:34.290 --> 00:48:38.490
So it will continue to show up
on the products pages, will

00:48:38.490 --> 00:48:40.000
stay free for the time being.

00:48:40.000 --> 00:48:44.060
So it's not really affected
by product listing ads.

00:48:47.310 --> 00:48:48.560
Any other questions?

00:48:50.620 --> 00:48:52.950
OK, then, thanks again
for coming.

00:48:52.950 --> 00:48:55.370
Enjoy the rest of
the conference.

00:48:55.370 --> 00:48:55.880
See you around.

00:48:55.880 --> 00:48:57.140
Thank you.

00:48:57.140 --> 00:49:00.673
[APPLAUSE]

