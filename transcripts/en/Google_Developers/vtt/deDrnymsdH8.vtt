WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:01:13.580
[MUSIC PLAYING]

00:01:21.580 --> 00:01:23.000
Hey, everyone.

00:01:23.000 --> 00:01:24.150
My name is Andrew Wales.

00:01:24.150 --> 00:01:26.420
I'm a Developer Programs
Engineer on the Google

00:01:26.420 --> 00:01:29.100
Analytics Developer
Relations Team.

00:01:29.100 --> 00:01:32.120
And today I'm going to be
talking all about campaigns

00:01:32.120 --> 00:01:35.980
and attribution for Android.

00:01:35.980 --> 00:01:39.450
Just to give you look at the
agenda, so first I'm going to

00:01:39.450 --> 00:01:43.400
talk a little bit about how
campaigns work generally in

00:01:43.400 --> 00:01:44.970
Universal Analytics.

00:01:44.970 --> 00:01:48.210
In our V2 SDKs, which is what
I'll be talking about today,

00:01:48.210 --> 00:01:50.540
those are all built on top
of Universal Analytics.

00:01:50.540 --> 00:01:54.470
So what's true for campaigns and
attributions generally in

00:01:54.470 --> 00:01:55.880
Universal Analytics is
going to be true

00:01:55.880 --> 00:01:58.020
for Android as well.

00:01:58.020 --> 00:01:59.602
So we'll start there.

00:01:59.602 --> 00:02:03.270
I'll then walk through how
Google Play Campaign

00:02:03.270 --> 00:02:04.460
Measurement works.

00:02:04.460 --> 00:02:07.740
This is really the main use case
for most people in doing

00:02:07.740 --> 00:02:09.160
attribution on Android.

00:02:09.160 --> 00:02:13.070
So tracking installs from Google
Play Store, and being

00:02:13.070 --> 00:02:15.910
able to attribute those back
to campaigns or other

00:02:15.910 --> 00:02:17.470
marketing efforts, et cetera.

00:02:17.470 --> 00:02:20.400
So I'll walk through a little
bit, show you how that works.

00:02:20.400 --> 00:02:22.420
I'll show you how to
implement that.

00:02:22.420 --> 00:02:24.500
It's actually really simple.

00:02:24.500 --> 00:02:26.630
I'll show you how you can
actually test it to make sure

00:02:26.630 --> 00:02:29.800
it's working before you publish
your app, which is a

00:02:29.800 --> 00:02:30.930
good thing always.

00:02:30.930 --> 00:02:33.860
And then I'll also show you a
couple common issues that I

00:02:33.860 --> 00:02:37.110
hear about a lot that you can
hopefully avoid by taking a

00:02:37.110 --> 00:02:40.130
look at in this GDL.

00:02:40.130 --> 00:02:42.000
And then thirdly I'll talk
about general campaign

00:02:42.000 --> 00:02:43.300
measurement.

00:02:43.300 --> 00:02:45.070
This is a little bit of a less
common use case, but it's for

00:02:45.070 --> 00:02:49.640
cases where you have--

00:02:49.640 --> 00:02:51.720
cases where you want to do
attribution after the app is

00:02:51.720 --> 00:02:52.520
already installed.

00:02:52.520 --> 00:02:56.410
So if you have deep links going
into your app, and you

00:02:56.410 --> 00:03:00.570
want to be able to attribute the
opens of that app because

00:03:00.570 --> 00:03:03.130
of those deep links back to
those sources, you can do that

00:03:03.130 --> 00:03:04.730
with General Campaign
Management.

00:03:04.730 --> 00:03:07.050
And I'll show you how
that works as well.

00:03:07.050 --> 00:03:09.670
So let's jump right in.

00:03:09.670 --> 00:03:10.630
So let's start with
campaigns and

00:03:10.630 --> 00:03:13.930
Universal Analytics generally.

00:03:13.930 --> 00:03:16.070
So it's probably, most of you
know, and this has been the

00:03:16.070 --> 00:03:19.090
case for some time, there's
really five main campaign

00:03:19.090 --> 00:03:20.150
dimensions.

00:03:20.150 --> 00:03:23.150
And these are source, medium,
campaign, campaign, content,

00:03:23.150 --> 00:03:24.960
and keyword.

00:03:24.960 --> 00:03:28.870
And these five dimensions can
be used to sort of describe

00:03:28.870 --> 00:03:30.720
any of your marketing
campaigns.

00:03:30.720 --> 00:03:34.290
In this example, I'm showing you
like an AdWords campaign,

00:03:34.290 --> 00:03:35.830
a CPC campaign.

00:03:35.830 --> 00:03:39.910
But it could be used to track
marketing emails, or

00:03:39.910 --> 00:03:43.460
newsletters, or links from your
website to Google Play

00:03:43.460 --> 00:03:44.680
Store, whatever it is.

00:03:44.680 --> 00:03:47.020
You can use these five
dimensions and give them

00:03:47.020 --> 00:03:48.350
values that describe
the source.

00:03:51.320 --> 00:03:55.450
So just a little primer
on how campaigns work

00:03:55.450 --> 00:03:56.410
in Universal Analytics.

00:03:56.410 --> 00:04:00.060
It's a little bit different
than how it was before.

00:04:00.060 --> 00:04:02.770
So you can see here, you'll
see all these

00:04:02.770 --> 00:04:03.730
gray dots on the bottom.

00:04:03.730 --> 00:04:07.090
These represent sessions with
your application, or with your

00:04:07.090 --> 00:04:08.040
website, whatever it is.

00:04:08.040 --> 00:04:10.400
We're speaking broadly here.

00:04:10.400 --> 00:04:13.280
So each of these dots here
represents one user

00:04:13.280 --> 00:04:16.920
interaction with a site or an
app, and contains a bunch of

00:04:16.920 --> 00:04:20.589
views, and events, and
e-commerce, and other things.

00:04:20.589 --> 00:04:22.550
And we're looking at this
for given property

00:04:22.550 --> 00:04:25.490
ID and client ID.

00:04:25.490 --> 00:04:29.190
So the way this works is once
you send campaign information

00:04:29.190 --> 00:04:33.380
to GA, it's going
to stay valid.

00:04:33.380 --> 00:04:36.180
So every time I come back, and
as long as I have the same

00:04:36.180 --> 00:04:38.440
property and client ID--

00:04:38.440 --> 00:04:41.820
and by the way, this will also
be true for user ID when

00:04:41.820 --> 00:04:44.110
that's available--

00:04:44.110 --> 00:04:46.970
I'm going to keep having my
sessions attributed back to

00:04:46.970 --> 00:04:49.130
this original campaign
information.

00:04:49.130 --> 00:04:51.550
Until one of two
things happen.

00:04:51.550 --> 00:04:54.890
Either there's new campaign
info received.

00:04:54.890 --> 00:04:56.380
So if I click through
on another ad, for

00:04:56.380 --> 00:04:58.130
example, and I come back.

00:04:58.130 --> 00:05:01.270
Or if the campaign timeout
period expires.

00:05:01.270 --> 00:05:02.330
So you can configure--

00:05:02.330 --> 00:05:04.030
and I'll show you just in
a sec how to do this.

00:05:04.030 --> 00:05:07.720
But you can configure at the
property level how long you

00:05:07.720 --> 00:05:09.740
want campaign information
to stay valid.

00:05:09.740 --> 00:05:11.440
So by default, it's
six months.

00:05:11.440 --> 00:05:14.490
So if I clicked on an ad six
months ago, and I get up to

00:05:14.490 --> 00:05:18.280
six months and a day, I'll show
up as direct after that

00:05:18.280 --> 00:05:20.425
point, because the timeout's
been expired.

00:05:20.425 --> 00:05:21.820
Now, you can change
that around.

00:05:21.820 --> 00:05:24.290
So I'll show you that in
a sec how you do that.

00:05:24.290 --> 00:05:26.820
So when one of those things
happens, that's when the

00:05:26.820 --> 00:05:30.900
campaign information
stops being valid.

00:05:30.900 --> 00:05:33.670
So for Android, which is what
we're talking about today,

00:05:33.670 --> 00:05:35.150
what this really means
in practice is

00:05:35.150 --> 00:05:36.850
that when you click--

00:05:36.850 --> 00:05:41.420
suppose you track, for example,
an ad that drives

00:05:41.420 --> 00:05:44.060
someone to Google Play Store,
that then downloads your app.

00:05:44.060 --> 00:05:48.500
And that's the smiley face
mobile device right there.

00:05:48.500 --> 00:05:52.440
What this means is that once you
get that original campaign

00:05:52.440 --> 00:05:55.150
information in there, at the
time of install, all the

00:05:55.150 --> 00:05:57.880
subsequent downstream user
activity, like screen views,

00:05:57.880 --> 00:06:00.850
events, goals, and app revenue,
et cetera, all that's

00:06:00.850 --> 00:06:04.620
going to get attributed back
to that original ad.

00:06:04.620 --> 00:06:07.690
Until again, there's either
new campaign information

00:06:07.690 --> 00:06:11.470
received, or that campaign
information times out.

00:06:11.470 --> 00:06:14.000
Now, most of the time, unless
you're doing this general

00:06:14.000 --> 00:06:17.110
campaign management where you
want to track deep links in

00:06:17.110 --> 00:06:20.100
your app or something else, most
of the time you're only

00:06:20.100 --> 00:06:22.540
ever going to really have that
install information.

00:06:22.540 --> 00:06:24.970
So the original campaign
that drove the install.

00:06:24.970 --> 00:06:26.920
And then the campaign
information is really not

00:06:26.920 --> 00:06:28.780
going to change too much.

00:06:28.780 --> 00:06:32.900
Furthermore, the client ID and
the property ID are going to

00:06:32.900 --> 00:06:34.310
stay constant.

00:06:34.310 --> 00:06:37.980
The client ID's generated at the
time that the SDK first--

00:06:37.980 --> 00:06:39.920
basically when your app first
runs, we're going to generate

00:06:39.920 --> 00:06:41.580
a random client ID.

00:06:41.580 --> 00:06:43.640
So as long as the user doesn't
uninstall the app, you can

00:06:43.640 --> 00:06:47.370
really expect that original
install information to be

00:06:47.370 --> 00:06:50.020
constant all the way up until
whenever that campaign

00:06:50.020 --> 00:06:53.180
information times out.

00:06:53.180 --> 00:06:55.180
So with that, I just wanted to
show you really quickly how

00:06:55.180 --> 00:06:58.450
you can configure that campaign
timeout period.

00:06:58.450 --> 00:07:00.590
So by default, it's going
to be six months.

00:07:00.590 --> 00:07:01.800
But if you want--

00:07:01.800 --> 00:07:04.470
for example, if somebody
installs your app and keeps it

00:07:04.470 --> 00:07:07.840
around for a year, for example,
if you still want

00:07:07.840 --> 00:07:10.390
everything they're doing in
terms of events, goals,

00:07:10.390 --> 00:07:12.750
e-commerce, et cetera,
everything after that six

00:07:12.750 --> 00:07:14.890
month period, so six to 12
months, if you want all of

00:07:14.890 --> 00:07:16.720
that information still
attributed back to that

00:07:16.720 --> 00:07:19.640
original campaign, you should go
into your Property settings

00:07:19.640 --> 00:07:21.930
and change this campaign
timeout.

00:07:21.930 --> 00:07:24.620
And by the way, you'll only
see this campaign timeout

00:07:24.620 --> 00:07:27.890
period if you have a Universal
Analytics enabled property.

00:07:27.890 --> 00:07:31.200
So if you're already using
V2 of the SDKs, you

00:07:31.200 --> 00:07:31.860
already have one.

00:07:31.860 --> 00:07:33.610
So that shouldn't
be a problem.

00:07:37.840 --> 00:07:38.160
Cool.

00:07:38.160 --> 00:07:42.060
So now we've covered like a
little bit about how campaigns

00:07:42.060 --> 00:07:43.880
work in Universal Analytics
in general.

00:07:43.880 --> 00:07:45.650
And what that's going
to mean for Android.

00:07:45.650 --> 00:07:47.690
I'm going to show you a little
bit about how Google Play

00:07:47.690 --> 00:07:50.060
Campaign Measurement works.

00:07:50.060 --> 00:07:51.350
It's actually pretty simple.

00:07:51.350 --> 00:07:56.420
So the way it's going to work
is that any ads or marketing

00:07:56.420 --> 00:07:59.630
efforts that you have you can
link to Google Play from those

00:07:59.630 --> 00:08:02.610
things, but you're going to link
to your app's download

00:08:02.610 --> 00:08:05.160
page, for your app's-- whatever
page on Google Play

00:08:05.160 --> 00:08:07.780
Store with the Download
button.

00:08:07.780 --> 00:08:10.140
And you attach this
refer parameter.

00:08:10.140 --> 00:08:14.430
And as the value of that
parameter, it's going to be a

00:08:14.430 --> 00:08:18.630
URL encoded string of
these UTM tags.

00:08:18.630 --> 00:08:21.950
UTM source, UTM media, and
term, content, campaign.

00:08:21.950 --> 00:08:24.880
And these all equate to
those five dimensions

00:08:24.880 --> 00:08:28.170
I showed you earlier.

00:08:28.170 --> 00:08:31.430
And that's going to send the
user to your apps page on

00:08:31.430 --> 00:08:32.090
Google Play Store.

00:08:32.090 --> 00:08:33.889
So in this example, I'm
showing Google Drive.

00:08:36.460 --> 00:08:38.470
What happens from there, if they
choose to install the app

00:08:38.470 --> 00:08:43.049
right then, what happens there
is that the Google Play Store

00:08:43.049 --> 00:08:47.130
app on the device is going
to broadcast this

00:08:47.130 --> 00:08:48.890
install refer intent.

00:08:48.890 --> 00:08:51.350
And as part of that refer
intent, it's going to grab

00:08:51.350 --> 00:08:55.780
that refer parameter, the value
of it, from the link

00:08:55.780 --> 00:08:57.360
that you used to send
people there.

00:08:57.360 --> 00:09:00.810
And it's going to include that
as a string extra in that

00:09:00.810 --> 00:09:03.970
bundle with the intent.

00:09:03.970 --> 00:09:05.970
The way this normally works
if you do a standard GA

00:09:05.970 --> 00:09:08.280
implementation is that
you'll have a

00:09:08.280 --> 00:09:09.670
Analytics Broadcast Receiver.

00:09:09.670 --> 00:09:12.170
And I'll show you how to
implement that in a second.

00:09:12.170 --> 00:09:15.490
And that's going to be able to
receive that intent, and it's

00:09:15.490 --> 00:09:17.740
going to store that
refer information.

00:09:17.740 --> 00:09:20.820
And then when the app actually
runs, the SDK is going to send

00:09:20.820 --> 00:09:24.510
that out with the first
hit that's dispatched.

00:09:24.510 --> 00:09:26.740
And that's how your campaign
information is going to get

00:09:26.740 --> 00:09:27.700
back to GA.

00:09:27.700 --> 00:09:30.720
And then everything that the
user does from then on is

00:09:30.720 --> 00:09:34.570
going to be attributed back to
that original campaign source.

00:09:34.570 --> 00:09:36.080
Whatever was in that
refer parameter.

00:09:39.250 --> 00:09:41.040
So you'll see in your Google
Play sources, this

00:09:41.040 --> 00:09:42.050
is kind of a look.

00:09:42.050 --> 00:09:43.490
You'll see something that looks
like this, where you

00:09:43.490 --> 00:09:46.270
have the source and medium,
and you have your new user

00:09:46.270 --> 00:09:47.430
sessions, duration.

00:09:47.430 --> 00:09:50.800
All the metrics and dimensions
and stuff you want to use will

00:09:50.800 --> 00:09:52.050
be available there.

00:09:54.540 --> 00:09:55.150
So really quick.

00:09:55.150 --> 00:09:56.970
There's basically four
steps to doing

00:09:56.970 --> 00:09:57.840
implementation on this.

00:09:57.840 --> 00:09:59.970
And it's pretty straightforward.

00:09:59.970 --> 00:10:01.330
First, obviously you
need to add the

00:10:01.330 --> 00:10:04.570
Analytics SDK to your project.

00:10:04.570 --> 00:10:05.965
Then you need to add this
GA Broadcast Receiver.

00:10:08.730 --> 00:10:11.650
This is optional really, but
it's a good idea to test the

00:10:11.650 --> 00:10:13.170
implementation just to
make sure it works.

00:10:13.170 --> 00:10:16.810
A lot of times, if it doesn't
work and you push the app to

00:10:16.810 --> 00:10:18.950
Google Play store, then you've
got to push it all over again

00:10:18.950 --> 00:10:20.560
just to start getting campaign
information.

00:10:20.560 --> 00:10:21.480
And that's a pain.

00:10:21.480 --> 00:10:23.290
So it's good to test.

00:10:23.290 --> 00:10:26.290
And then four, to generate
your Google Play URLs.

00:10:26.290 --> 00:10:29.570
So the URLs you're going to be
using to send people to your

00:10:29.570 --> 00:10:33.250
apps page on Google Play.

00:10:33.250 --> 00:10:37.090
So to add the Analytics SDK,
it's pretty straightforward.

00:10:37.090 --> 00:10:41.420
I'll show you really quickly
just an example.

00:10:41.420 --> 00:10:44.880
I use the note pad example.

00:10:44.880 --> 00:10:48.400
So if you have the Android SDK
installed, you should be able

00:10:48.400 --> 00:10:52.540
to create this sample
app as well.

00:10:52.540 --> 00:10:54.690
If you want to do a really
basic Analytics

00:10:54.690 --> 00:10:56.800
implementation, it's pretty
straightforward.

00:10:56.800 --> 00:11:01.330
You just need to go ahead and
create a folder called Libs,

00:11:01.330 --> 00:11:04.150
and add this, our JAR file.

00:11:04.150 --> 00:11:07.820
The Analytics V2 JAR file.

00:11:07.820 --> 00:11:10.455
At that point, you can go in
and you basically just tag,

00:11:10.455 --> 00:11:12.080
sort of just like you
would on the web.

00:11:12.080 --> 00:11:17.170
So in this example, I have the
notes list, and also the note

00:11:17.170 --> 00:11:21.660
editor activities I tagged with
just these simple tags.

00:11:21.660 --> 00:11:25.690
So you can see overriding the on
start and on stop methods,

00:11:25.690 --> 00:11:29.780
and adding the Easy Tacker
activity start and activity

00:11:29.780 --> 00:11:31.800
stop methods.

00:11:31.800 --> 00:11:33.440
So you'd want to do that across
all activities that

00:11:33.440 --> 00:11:34.270
you're using.

00:11:34.270 --> 00:11:37.320
And that's probably the most
basically way to install, to

00:11:37.320 --> 00:11:37.910
implement GA.

00:11:37.910 --> 00:11:41.030
Of course, you can make
it much more complex.

00:11:41.030 --> 00:11:44.110
But just for the sake of this
example, that's all you need

00:11:44.110 --> 00:11:46.980
to do is the bare minimum.

00:11:46.980 --> 00:11:50.730
And then the next step, just to
be sure, you want to make

00:11:50.730 --> 00:11:54.440
sure you have the permissions in
your Android manifest file

00:11:54.440 --> 00:11:57.740
to use the internet and access
the network state.

00:11:57.740 --> 00:12:00.845
And then also, the nice thing
about Easy Tracker is that you

00:12:00.845 --> 00:12:03.050
can create this Analytics
XML file.

00:12:03.050 --> 00:12:05.560
And here you can manage all your
configuration settings.

00:12:05.560 --> 00:12:08.370
So your property ID, whether
or not you want to do auto

00:12:08.370 --> 00:12:12.790
activity tracking, turning on
and off debug mode, et cetera.

00:12:12.790 --> 00:12:14.230
So that's just a really
basic implementation.

00:12:14.230 --> 00:12:16.420
Obviously, you can do a much
more advanced one.

00:12:16.420 --> 00:12:17.870
But I just wanted to give you
a quick sense of what that

00:12:17.870 --> 00:12:20.890
would look like.

00:12:20.890 --> 00:12:22.820
So once the SDK is implemented,
however you're

00:12:22.820 --> 00:12:25.350
going to do that, the next step
is to make sure that the

00:12:25.350 --> 00:12:27.720
Broadcast Receiver actually
gets implemented as well.

00:12:27.720 --> 00:12:30.080
And this is going to be the
receiver that takes that

00:12:30.080 --> 00:12:32.450
install refer intent that the
Google Play Store is going to

00:12:32.450 --> 00:12:34.970
send to your app.

00:12:34.970 --> 00:12:36.640
So really quickly, what that's
going to look like.

00:12:39.560 --> 00:12:42.450
If we go to the Android manifest
file, you can see

00:12:42.450 --> 00:12:44.400
I've already added it here.

00:12:44.400 --> 00:12:46.800
And you can get this from the
developer site, or it's in the

00:12:46.800 --> 00:12:48.230
Java doc as well.

00:12:48.230 --> 00:12:51.670
But basically, it's a service
and a receiver.

00:12:51.670 --> 00:12:54.990
And what the service is going
to do is when that install

00:12:54.990 --> 00:12:56.890
refer intent comes through, the
service is actually going

00:12:56.890 --> 00:12:59.290
to write that refer information
to a file.

00:12:59.290 --> 00:13:03.620
And then when the app actually
is running and fully

00:13:03.620 --> 00:13:05.280
installed, the SDK is going
to read from that

00:13:05.280 --> 00:13:07.230
file and send it.

00:13:07.230 --> 00:13:11.370
Whatever information's there,
if any, with the first hit.

00:13:11.370 --> 00:13:11.990
So that's it.

00:13:11.990 --> 00:13:16.020
So just copy and pasting this
receiver and the service into

00:13:16.020 --> 00:13:19.390
your Android manifest file.

00:13:19.390 --> 00:13:23.330
And then, technically, you
should be good to go.

00:13:23.330 --> 00:13:24.995
Unless you have a more advance
implementation, which we'll go

00:13:24.995 --> 00:13:28.530
into in a sec, you should be
able to receive that intent,

00:13:28.530 --> 00:13:31.360
and the SDK should be able
to read it and send

00:13:31.360 --> 00:13:32.610
it with hits .

00:13:35.170 --> 00:13:37.640
Let me just show you a blown
up view, just in case you

00:13:37.640 --> 00:13:39.570
couldn't see it on my screen.

00:13:39.570 --> 00:13:41.550
And again, this is available on
the developer site, so if

00:13:41.550 --> 00:13:46.730
you go to developers.googl
e.com/analytics, and go to

00:13:46.730 --> 00:13:50.300
Android, you'll be able to get
this in our campaigns dev

00:13:50.300 --> 00:13:51.550
guide there.

00:13:54.110 --> 00:13:57.660
So the next step would be
testing the implementation.

00:13:57.660 --> 00:13:59.640
This, again, is always
a good idea to

00:13:59.640 --> 00:14:00.430
make sure it's working.

00:14:00.430 --> 00:14:02.830
Again, you don't want to have to
push your application twice

00:14:02.830 --> 00:14:05.650
to Google Play Store
just to get the

00:14:05.650 --> 00:14:08.650
campaign measurement working.

00:14:08.650 --> 00:14:13.680
So I'm going to show you one way
to test to make sure this

00:14:13.680 --> 00:14:14.140
is working.

00:14:14.140 --> 00:14:17.140
What it's going to do is
basically you're going to

00:14:17.140 --> 00:14:21.900
broadcast that install refer
intent to your application

00:14:21.900 --> 00:14:25.140
from the Android Debug Bridge
command line tool.

00:14:25.140 --> 00:14:28.150
And you can include the refer
extra, and you can give it

00:14:28.150 --> 00:14:32.000
some sample UTM parameters
and values.

00:14:32.000 --> 00:14:33.790
And then you can just see if you
can run your application

00:14:33.790 --> 00:14:34.860
and make sure--

00:14:34.860 --> 00:14:37.380
because it will print it to logs
whether or not it found

00:14:37.380 --> 00:14:38.720
campaign information.

00:14:38.720 --> 00:14:41.760
So you can use this process to
make sure that the receiver's

00:14:41.760 --> 00:14:45.620
properly configured, that it's
going to receive that intent,

00:14:45.620 --> 00:14:47.870
and that the SDK is picking up
the campaign information

00:14:47.870 --> 00:14:49.450
that's there.

00:14:49.450 --> 00:14:53.410
So there's basically three
steps to this.

00:14:53.410 --> 00:14:57.080
First one is once you're ready
to test, you want to install

00:14:57.080 --> 00:14:59.320
your application on the device
that you're using to test.

00:14:59.320 --> 00:15:00.750
So it could be an emulator,
or it could

00:15:00.750 --> 00:15:02.000
be a connected device.

00:15:04.860 --> 00:15:05.860
Yeah, and it's a pretty
simple command.

00:15:05.860 --> 00:15:08.540
You just use whatever your path
to ADB is, the Android

00:15:08.540 --> 00:15:09.230
Debug Bridge.

00:15:09.230 --> 00:15:11.650
I think for most people, they
have a SIM link, so it's

00:15:11.650 --> 00:15:17.820
usually ADB install, and then
the path to your APK file.

00:15:17.820 --> 00:15:20.320
Step two is make sure the
app isn't running.

00:15:20.320 --> 00:15:24.890
That causes problems with the
way that the Google Play

00:15:24.890 --> 00:15:27.270
Broadcast Receiver and service
are designed to work.

00:15:27.270 --> 00:15:28.820
So just make sure the
app isn't running.

00:15:28.820 --> 00:15:32.090
Just install it, but don't
actually open it.

00:15:32.090 --> 00:15:33.395
And then the third is we're
actually going to broadcast

00:15:33.395 --> 00:15:35.000
the intent.

00:15:35.000 --> 00:15:37.630
So again, it's kind
of the same thing.

00:15:37.630 --> 00:15:40.050
You're going to have
your path to ADB.

00:15:40.050 --> 00:15:43.020
When you broadcast the intent,
you have to specify your

00:15:43.020 --> 00:15:46.370
package name, and also the
path to the receiver.

00:15:46.370 --> 00:15:50.930
Then you tack on this string
extra that's named refer.

00:15:50.930 --> 00:15:56.130
And then you can add your UTM
parameters and values.

00:15:56.130 --> 00:15:58.510
You don't really need
to do too much here.

00:15:58.510 --> 00:16:00.890
You can actually just
do UTM source equals

00:16:00.890 --> 00:16:02.200
whatever value you want.

00:16:02.200 --> 00:16:04.330
That's really the only
required field.

00:16:04.330 --> 00:16:06.890
And that's good enough for
the purposes of testing.

00:16:12.860 --> 00:16:17.720
And when you're going to be able
to see in logs is that if

00:16:17.720 --> 00:16:19.045
the campaign information's
found, you see a

00:16:19.045 --> 00:16:21.190
message like this.

00:16:21.190 --> 00:16:24.580
So you'll see GA, the SDK
spitting things out to logs.

00:16:24.580 --> 00:16:26.690
And one of those things is going
to say Campaign Found.

00:16:26.690 --> 00:16:29.330
I'll say UTM source, and it
should have the value that you

00:16:29.330 --> 00:16:31.240
broadcast to it.

00:16:31.240 --> 00:16:33.340
If it does not say Campaign
Found, it'll say

00:16:33.340 --> 00:16:34.810
Campaign Not Found.

00:16:34.810 --> 00:16:39.430
And if that's the case, it's
usually either a problem with

00:16:39.430 --> 00:16:40.370
the receiver.

00:16:40.370 --> 00:16:41.580
It may not be implemented,
or it's

00:16:41.580 --> 00:16:43.140
not implemented correctly.

00:16:43.140 --> 00:16:44.520
You might have multiple
receivers.

00:16:44.520 --> 00:16:46.660
And I'll talk about
that in a second.

00:16:46.660 --> 00:16:49.900
So with the install refer
intent, you can actually only

00:16:49.900 --> 00:16:52.790
receive it in one Broadcast
Receiver.

00:16:52.790 --> 00:16:55.810
So if you already have one, and
then you try to paste the

00:16:55.810 --> 00:16:59.050
Analytics Receiver in, the
Analytics Receiver might not

00:16:59.050 --> 00:17:02.700
actually get called
in that case.

00:17:02.700 --> 00:17:06.569
Or the broadcast wasn't
actually successful.

00:17:06.569 --> 00:17:08.250
So you'd want to go back and
just make sure that you're

00:17:08.250 --> 00:17:09.670
actually seeing--

00:17:09.670 --> 00:17:12.349
ADB will tell you that
the broadcast was

00:17:12.349 --> 00:17:14.800
successfully done.

00:17:14.800 --> 00:17:16.540
So you should go back and
double check that.

00:17:21.210 --> 00:17:22.690
So that's the first
three steps.

00:17:22.690 --> 00:17:24.710
You've implemented the
Analytics SDK.

00:17:24.710 --> 00:17:26.640
You've added the Broadcast
Receiver.

00:17:26.640 --> 00:17:27.720
You've tested the
implementation.

00:17:27.720 --> 00:17:30.450
So hopefully, everything
looks good there.

00:17:30.450 --> 00:17:32.050
And then the last step
is just to generate

00:17:32.050 --> 00:17:34.012
those Google Play URLs.

00:17:34.012 --> 00:17:36.620
And this is really easy to do.

00:17:36.620 --> 00:17:38.960
Again, the format is basically,
it's going to be

00:17:38.960 --> 00:17:42.720
the link to your apps' Google
Play Store page.

00:17:42.720 --> 00:17:46.980
So it's Google Play Store, and
then you have as ID equals

00:17:46.980 --> 00:17:48.250
your package name.

00:17:48.250 --> 00:17:50.420
And then you're going to have
this refer parameter.

00:17:50.420 --> 00:17:53.180
And the value of that refer
parameter is going to be a URL

00:17:53.180 --> 00:17:55.240
encoded campaign parameter
string.

00:17:55.240 --> 00:17:58.380
So a string of these UTM source
equals whatever UTM

00:17:58.380 --> 00:18:01.260
medium equals test
medim, et cetera.

00:18:01.260 --> 00:18:02.540
All separated by ampersands.

00:18:05.190 --> 00:18:08.550
We actually have a tool on
the developer site, so

00:18:08.550 --> 00:18:10.255
developers.googl
e.com/analytics.

00:18:10.255 --> 00:18:13.380
If you go to the campaign dev
guide for Android, we have a

00:18:13.380 --> 00:18:14.810
Google Play URL builder.

00:18:14.810 --> 00:18:17.610
So you can just pop in your
package name, the campaign

00:18:17.610 --> 00:18:20.020
source, medium term,
content, et cetera.

00:18:20.020 --> 00:18:21.740
And we'll generate
that URL for you.

00:18:24.326 --> 00:18:28.430
And just so you know, if
you're using AdWords or

00:18:28.430 --> 00:18:31.520
DoubleClick and you have these
click IDs, like gclid or

00:18:31.520 --> 00:18:35.350
dclid, you can pass those
values as well

00:18:35.350 --> 00:18:37.200
in that refer parameter.

00:18:37.200 --> 00:18:41.440
So you just enable auto tagging,
for example, for

00:18:41.440 --> 00:18:43.910
AdWords, and send users
to Google Play Store.

00:18:43.910 --> 00:18:46.130
And that should be sufficient.

00:18:46.130 --> 00:18:48.870
And then the SDK is able to pick
up on that click ID, and

00:18:48.870 --> 00:18:51.810
then we'll join it with the ads
data, so we can bring in

00:18:51.810 --> 00:18:55.080
your campaign term, et cetera,
all automatically.

00:18:59.260 --> 00:19:00.090
Cool.

00:19:00.090 --> 00:19:00.880
So that's basically it.

00:19:00.880 --> 00:19:03.080
It's a pretty straightforward
implementation.

00:19:03.080 --> 00:19:05.590
You can test it, and we have the
tools to help you generate

00:19:05.590 --> 00:19:09.070
the Google Play URLs as well.

00:19:09.070 --> 00:19:11.935
So next I want to talk about
two common issues.

00:19:14.930 --> 00:19:19.340
One of which is that people
oftentimes will see more

00:19:19.340 --> 00:19:23.150
sessions attributed to
direct/none, so source direct

00:19:23.150 --> 00:19:25.830
medium none than they expect.

00:19:25.830 --> 00:19:28.070
And to be sure, you're
definitely going to see a lot.

00:19:28.070 --> 00:19:32.420
It might even be the most,
like the top source.

00:19:32.420 --> 00:19:34.550
For you, that may be normal.

00:19:34.550 --> 00:19:38.460
It may be that everything's
working as expected.

00:19:38.460 --> 00:19:41.960
But one reason why it might be
higher than you expect--

00:19:41.960 --> 00:19:43.640
this is just a view of
what that would look

00:19:43.640 --> 00:19:45.240
like in your reports.

00:19:45.240 --> 00:19:47.310
One reason why it might be
higher is because of the way

00:19:47.310 --> 00:19:53.660
that the Google Play Store app
works in terms of that URL and

00:19:53.660 --> 00:19:55.480
the refer parameter.

00:19:55.480 --> 00:19:58.190
So if we go back to this example
where you drive from

00:19:58.190 --> 00:20:02.800
an ad, via that link with the
refer parameter, to the apps

00:20:02.800 --> 00:20:06.160
page on Google Play Store.

00:20:06.160 --> 00:20:08.760
As long as they choose to
download right from there,

00:20:08.760 --> 00:20:10.070
it'll be fine.

00:20:10.070 --> 00:20:13.110
And that refer parameter will
get bundled up and sent off

00:20:13.110 --> 00:20:14.060
with that intent,
and everything

00:20:14.060 --> 00:20:16.650
works as I just described.

00:20:16.650 --> 00:20:21.450
The tricky part comes when
people, actually, if users

00:20:21.450 --> 00:20:22.910
move away from that page.

00:20:22.910 --> 00:20:26.430
For example, if they go out to
the Google Play homepage, and

00:20:26.430 --> 00:20:29.700
then they navigate back to your
app download page and

00:20:29.700 --> 00:20:31.960
then install, the refer
information is

00:20:31.960 --> 00:20:33.410
gone at that point.

00:20:33.410 --> 00:20:36.050
So that install is going to be
attributed to direct/none.

00:20:38.660 --> 00:20:40.660
And that's just kind of the way
it works on Google Play

00:20:40.660 --> 00:20:41.640
Store at the moment.

00:20:41.640 --> 00:20:43.950
So you're only ever going to get
campaign information for

00:20:43.950 --> 00:20:48.050
those users who follow one of
your links that's tagged, land

00:20:48.050 --> 00:20:50.110
on Google Play, and then
download right there.

00:20:50.110 --> 00:20:52.130
If they do anything else, if
they navigate around Google

00:20:52.130 --> 00:20:54.520
Play Store, that refer
information gets lost.

00:20:54.520 --> 00:20:57.900
We don't keep it with them
and then send it

00:20:57.900 --> 00:20:59.140
on when they download.

00:20:59.140 --> 00:21:02.020
So that's usually the main
reason why you see more

00:21:02.020 --> 00:21:04.000
direct/none than you
might expect.

00:21:04.000 --> 00:21:06.870
But with that said, for most
people, as far as I've seen,

00:21:06.870 --> 00:21:08.590
direct/none is usually
the top.

00:21:08.590 --> 00:21:12.070
So usually most people are
discovering the application by

00:21:12.070 --> 00:21:15.100
going directly, or they already
know what it's called.

00:21:15.100 --> 00:21:17.000
So it's not unusual to see that
at the top, but this is

00:21:17.000 --> 00:21:18.850
one reason why it might be
higher than you expect.

00:21:21.850 --> 00:21:24.290
Another common issue, the second
one that I alluded to

00:21:24.290 --> 00:21:27.350
earlier, is when you have
multiple receivers that are

00:21:27.350 --> 00:21:29.460
all trying to receive that
install refer intent.

00:21:32.580 --> 00:21:34.750
So the thing about that intent
is that it can only be

00:21:34.750 --> 00:21:37.270
received by one Broadcast
Receiver.

00:21:37.270 --> 00:21:40.270
So you want to make sure that
you don't run into the

00:21:40.270 --> 00:21:42.720
situation where you already
have, for example here, you

00:21:42.720 --> 00:21:46.060
already have some receiver
that's receiving that install

00:21:46.060 --> 00:21:48.790
refer intent and doing
some work with it.

00:21:48.790 --> 00:21:51.150
And then you just copy
and paste in the

00:21:51.150 --> 00:21:53.100
Google Analytics receiver.

00:21:53.100 --> 00:21:56.380
And this will either not work
or it won't work reliably.

00:21:56.380 --> 00:21:59.500
Because again, only one of these
is going to get called.

00:21:59.500 --> 00:22:01.085
So the solution for this, it's
pretty straightforward.

00:22:03.820 --> 00:22:04.900
Sad face icon.

00:22:04.900 --> 00:22:06.890
You don't want to do this.

00:22:06.890 --> 00:22:12.240
What you want to do instead
is, at least in the last

00:22:12.240 --> 00:22:15.840
example, you would take the
receiver that you already had,

00:22:15.840 --> 00:22:17.660
and you do whatever work you're
going to do with the

00:22:17.660 --> 00:22:19.640
install refer intent, right?

00:22:19.640 --> 00:22:21.440
And then at the end, as soon
as you're done with all the

00:22:21.440 --> 00:22:23.440
work that you're going to do
otherwise, you can just

00:22:23.440 --> 00:22:26.575
instantiate this Google Campaign
Tracking receiver, so

00:22:26.575 --> 00:22:27.940
it's just
campaigntrackingreceiver.

00:22:27.940 --> 00:22:31.430
You can call, it's on receive,
and then pass it the context

00:22:31.430 --> 00:22:32.150
and intent.

00:22:32.150 --> 00:22:33.410
So you're just doing--

00:22:33.410 --> 00:22:35.630
you're not adding a new receiver
to your Android

00:22:35.630 --> 00:22:39.900
manifest file, you're just going
to take what you already

00:22:39.900 --> 00:22:42.000
have, and then when you're
done with whatever you're

00:22:42.000 --> 00:22:45.950
doing with that intent, just
instantiate the GA receiver.

00:22:45.950 --> 00:22:49.340
And pass call on receive,
and pass it the intent.

00:22:49.340 --> 00:22:50.590
And that will be good enough.

00:22:56.700 --> 00:22:59.160
Yep, and that's exactly
what you want to do.

00:22:59.160 --> 00:23:04.120
So at this point, you should
know how to implement Google

00:23:04.120 --> 00:23:05.560
Play campaign measurement.

00:23:05.560 --> 00:23:08.220
You implement it with the
Broadcast Receiver.

00:23:08.220 --> 00:23:09.600
You can test it.

00:23:09.600 --> 00:23:12.000
Know how to generate the
Google Play URLs.

00:23:12.000 --> 00:23:15.870
And the two things you want to
avoid are forgetting that if

00:23:15.870 --> 00:23:17.870
people move around Google Play
Store, that their refer

00:23:17.870 --> 00:23:19.390
information is lost.

00:23:19.390 --> 00:23:21.420
And that's just the way
it works currently.

00:23:21.420 --> 00:23:23.750
And then, two, that if you
already have a receiver,

00:23:23.750 --> 00:23:30.080
you'll want to do go ahead and
just make sure you instantiate

00:23:30.080 --> 00:23:32.560
the GA and receiver as
part of the work that

00:23:32.560 --> 00:23:33.450
your receiver does.

00:23:33.450 --> 00:23:36.300
Rather than registering both
and having them called

00:23:36.300 --> 00:23:38.080
inconsistently.

00:23:38.080 --> 00:23:40.380
So we have a couple resources
that I recommend everybody

00:23:40.380 --> 00:23:42.500
check out if they have more
questions about this.

00:23:42.500 --> 00:23:44.280
Or if you're going to do an
implementation and you want to

00:23:44.280 --> 00:23:46.370
have some documentation
next to you.

00:23:46.370 --> 00:23:49.200
The first is our Campaign
Measurement Developer Guide.

00:23:49.200 --> 00:23:52.430
So that's at the
developer site.

00:23:52.430 --> 00:23:54.900
And if you'll just look on the
left nav, it will be under the

00:23:54.900 --> 00:23:58.090
Android SDK, and
then Campaigns.

00:23:58.090 --> 00:24:00.600
We also have that Google Play
URL Builder, and that tool's

00:24:00.600 --> 00:24:07.040
actually embedded into the
campaign dev guide as well.

00:24:07.040 --> 00:24:09.720
And then we also recently just
published a testing guide, so

00:24:09.720 --> 00:24:13.340
you'll see all of the ADB
commands that I just used.

00:24:13.340 --> 00:24:14.500
We published all
those as well.

00:24:14.500 --> 00:24:16.470
So it's in our Solution
section.

00:24:16.470 --> 00:24:18.160
So you can go check that out,
and you should have everything

00:24:18.160 --> 00:24:20.210
you need to implement
and test.

00:24:23.800 --> 00:24:25.990
So that's Google Play Campaign
Measurement.

00:24:25.990 --> 00:24:28.660
That's the primary use
case for doing

00:24:28.660 --> 00:24:30.930
attribution on Android.

00:24:30.930 --> 00:24:33.010
But I did want to talk just
really briefly about general

00:24:33.010 --> 00:24:35.040
campaign management.

00:24:35.040 --> 00:24:38.670
So this would be, again, for
cases where you have some

00:24:38.670 --> 00:24:40.640
intent that's opening
up your application.

00:24:40.640 --> 00:24:42.170
Maybe you're deep
linking into it.

00:24:42.170 --> 00:24:43.850
Maybe it's some other app.

00:24:43.850 --> 00:24:45.590
Whatever it is, you have some
intent that's opening your

00:24:45.590 --> 00:24:47.690
application after it's already
been installed.

00:24:47.690 --> 00:24:50.400
And you want to be able to
do attribution there.

00:24:50.400 --> 00:24:52.570
So that's what General Campaign
Measurement is for.

00:24:55.830 --> 00:24:59.420
And just to show you a quick
example of how this works,

00:24:59.420 --> 00:25:03.340
there's a helper method in the
tracker class that's called

00:25:03.340 --> 00:25:05.280
Set Campaign.

00:25:05.280 --> 00:25:08.560
And Set Campaign basically just
takes a string of those

00:25:08.560 --> 00:25:12.270
campaign parameters, so UTM
source, UTM medium, all of

00:25:12.270 --> 00:25:13.730
that stuff.

00:25:13.730 --> 00:25:19.020
So if you can get that parameter
string into your

00:25:19.020 --> 00:25:19.700
application--

00:25:19.700 --> 00:25:22.490
again, it's usually via some
intent-- you can just pass it

00:25:22.490 --> 00:25:23.940
to that tracker.

00:25:23.940 --> 00:25:26.990
Set campaign, and if it's valid,
we'll set that new

00:25:26.990 --> 00:25:27.910
campaign information.

00:25:27.910 --> 00:25:30.900
And the next hit that goes out
will include that campaign

00:25:30.900 --> 00:25:32.220
information.

00:25:32.220 --> 00:25:35.910
And then that session and any
subsequent sessions, will be

00:25:35.910 --> 00:25:38.430
attributed to that new
campaign information.

00:25:38.430 --> 00:25:42.920
So this example is just a really
quick demonstration of

00:25:42.920 --> 00:25:45.510
how you could do this in
a sample activity.

00:25:45.510 --> 00:25:47.150
So basically, you just
get the intent

00:25:47.150 --> 00:25:49.440
that started the activity.

00:25:49.440 --> 00:25:52.390
You get the URI from
the intent.

00:25:52.390 --> 00:25:55.030
And then you can just check to
see-- again, UTM source is the

00:25:55.030 --> 00:25:56.740
only required parameter.

00:25:56.740 --> 00:26:00.530
So you could just check to see
if UTM source is present in

00:26:00.530 --> 00:26:02.980
that URI or not.

00:26:02.980 --> 00:26:06.280
And if it is present, you can
assume that there's valid

00:26:06.280 --> 00:26:07.900
campaign information there.

00:26:07.900 --> 00:26:10.480
So you can just get your
tracker, if you already use

00:26:10.480 --> 00:26:13.880
EasyTracker, the gettracker
method of EasyTracker.

00:26:13.880 --> 00:26:16.630
But if you have a reference to
your tracker any other way,

00:26:16.630 --> 00:26:17.370
you can do that.

00:26:17.370 --> 00:26:20.690
And then set campaign, and then
you just pass it, that

00:26:20.690 --> 00:26:21.940
string of campaign parameters.

00:26:24.730 --> 00:26:26.550
And just to show you what's
going to happen, to return to

00:26:26.550 --> 00:26:29.100
this slide.

00:26:29.100 --> 00:26:31.440
What will have happened is that
you will have-- up until

00:26:31.440 --> 00:26:35.020
that point, all the sessions
that the user had in that

00:26:35.020 --> 00:26:39.090
application will be attributed
to whatever was sent through

00:26:39.090 --> 00:26:41.010
at install time.

00:26:41.010 --> 00:26:44.940
And then as soon as you do that
next attribution step, so

00:26:44.940 --> 00:26:48.420
if it's a deep link or whatever
else, as soon as you

00:26:48.420 --> 00:26:52.570
call set campaign and then
send a hit, all of that

00:26:52.570 --> 00:26:55.050
session and any subsequent
sessions will be tagged with

00:26:55.050 --> 00:26:56.470
that new source.

00:26:56.470 --> 00:27:01.230
So that does mean that if you
do this, for example, if you

00:27:01.230 --> 00:27:03.260
tagged a deep link, and then
you set the campaign

00:27:03.260 --> 00:27:07.720
information that way, it means
their subsequent activity, if

00:27:07.720 --> 00:27:09.990
it's e-commerce or events or
whatever, are now going to be

00:27:09.990 --> 00:27:11.100
attributed to that new source.

00:27:11.100 --> 00:27:12.960
And you won't have that
attribution back to the

00:27:12.960 --> 00:27:14.850
original install source.

00:27:14.850 --> 00:27:16.020
So it's just something
to be aware.

00:27:16.020 --> 00:27:18.562
Usually that's what you want,
but just so you know, you

00:27:18.562 --> 00:27:19.690
won't have access--

00:27:19.690 --> 00:27:23.840
there is no install campaign
dimension where you can always

00:27:23.840 --> 00:27:26.880
see back to whatever the
original install campaign was.

00:27:30.440 --> 00:27:31.620
Cool.

00:27:31.620 --> 00:27:33.120
That's pretty much it.

00:27:33.120 --> 00:27:35.100
So we talked about
a couple things.

00:27:35.100 --> 00:27:38.785
Google Play Campaign
Measurement, how to implement

00:27:38.785 --> 00:27:40.160
it and test it.

00:27:40.160 --> 00:27:41.630
Generator those URLs.

00:27:41.630 --> 00:27:43.780
Some common pitfalls to avoid.

00:27:43.780 --> 00:27:46.480
Then also, the second use case,
mainly for Android, is

00:27:46.480 --> 00:27:49.520
that general campaign
measurement,

00:27:49.520 --> 00:27:50.270
which I showed you.

00:27:50.270 --> 00:27:51.760
Which you can do really
easily with that set

00:27:51.760 --> 00:27:53.700
tracker helper method.

00:27:53.700 --> 00:27:58.120
And that should cover most
cases for doing Android

00:27:58.120 --> 00:27:59.370
attribution and campaigns.

00:28:02.740 --> 00:28:04.030
Let me just check to
see if we have any

00:28:04.030 --> 00:28:07.285
questions on the Dory.

00:28:11.270 --> 00:28:12.080
OK.

00:28:12.080 --> 00:28:13.540
Well, if you guys have any
questions, you can always

00:28:13.540 --> 00:28:16.010
catch me on G+.

00:28:16.010 --> 00:28:18.760
You do g+.2/AWales and
that will take

00:28:18.760 --> 00:28:20.310
your right to my page.

00:28:20.310 --> 00:28:22.900
And I hope to see you around
on the next Analytics Live.

00:28:22.900 --> 00:28:24.150
Thanks.

00:28:30.700 --> 00:29:43.037
[MUSIC PLAYING]

