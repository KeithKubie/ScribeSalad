WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:03.020
yeah hey I means I'm the senior

00:00:03.020 --> 00:00:03.030
yeah hey I means I'm the senior
 

00:00:03.030 --> 00:00:05.749
yeah hey I means I'm the senior
rendering engineer for Crytek and I'm

00:00:05.749 --> 00:00:05.759
rendering engineer for Crytek and I'm
 

00:00:05.759 --> 00:00:07.309
rendering engineer for Crytek and I'm
here to share a bit of the experience

00:00:07.309 --> 00:00:07.319
here to share a bit of the experience
 

00:00:07.319 --> 00:00:10.220
here to share a bit of the experience
what happens when you drop Robin zone on

00:00:10.220 --> 00:00:10.230
what happens when you drop Robin zone on
 

00:00:10.230 --> 00:00:13.030
what happens when you drop Robin zone on
a mobile phone

00:00:13.030 --> 00:00:13.040
 

00:00:13.040 --> 00:00:17.630
Robin zone is actually a VR game that is

00:00:17.630 --> 00:00:17.640
Robin zone is actually a VR game that is
 

00:00:17.640 --> 00:00:20.810
Robin zone is actually a VR game that is
about little boys training on the planet

00:00:20.810 --> 00:00:20.820
about little boys training on the planet
 

00:00:20.820 --> 00:00:27.609
about little boys training on the planet
and we published that in 2016 for psvr

00:00:27.609 --> 00:00:27.619
and we published that in 2016 for psvr
 

00:00:27.619 --> 00:00:32.900
and we published that in 2016 for psvr
and then later for HTC vive and oculus

00:00:32.900 --> 00:00:32.910
and then later for HTC vive and oculus
 

00:00:32.910 --> 00:00:35.090
and then later for HTC vive and oculus
rift so that are actually very different

00:00:35.090 --> 00:00:35.100
rift so that are actually very different
 

00:00:35.100 --> 00:00:38.119
rift so that are actually very different
platforms that ps4 is my architecture

00:00:38.119 --> 00:00:38.129
platforms that ps4 is my architecture
 

00:00:38.129 --> 00:00:41.720
platforms that ps4 is my architecture
just like mobile phone and the other

00:00:41.720 --> 00:00:41.730
just like mobile phone and the other
 

00:00:41.730 --> 00:00:48.770
just like mobile phone and the other
ones are PC we had numerous differences

00:00:48.770 --> 00:00:48.780
ones are PC we had numerous differences
 

00:00:48.780 --> 00:00:53.209
ones are PC we had numerous differences
built into the engine so when we tackle

00:00:53.209 --> 00:00:53.219
built into the engine so when we tackle
 

00:00:53.219 --> 00:00:56.630
built into the engine so when we tackle
working on the mobile phone we didn't

00:00:56.630 --> 00:00:56.640
working on the mobile phone we didn't
 

00:00:56.640 --> 00:00:59.479
working on the mobile phone we didn't
have to change very much to get optimal

00:00:59.479 --> 00:00:59.489
have to change very much to get optimal
 

00:00:59.489 --> 00:01:01.029
have to change very much to get optimal
streaming and stuff like that because

00:01:01.029 --> 00:01:01.039
streaming and stuff like that because
 

00:01:01.039 --> 00:01:03.650
streaming and stuff like that because
memory management is very important and

00:01:03.650 --> 00:01:03.660
memory management is very important and
 

00:01:03.660 --> 00:01:05.600
memory management is very important and
you don't want to copy stuff around

00:01:05.600 --> 00:01:05.610
you don't want to copy stuff around
 

00:01:05.610 --> 00:01:09.020
you don't want to copy stuff around
which you already have in your mobile

00:01:09.020 --> 00:01:09.030
which you already have in your mobile
 

00:01:09.030 --> 00:01:13.850
which you already have in your mobile
device for us that was basically a

00:01:13.850 --> 00:01:13.860
device for us that was basically a
 

00:01:13.860 --> 00:01:18.130
device for us that was basically a
learning experience we had the hope to

00:01:18.130 --> 00:01:18.140
learning experience we had the hope to
 

00:01:18.140 --> 00:01:23.120
learning experience we had the hope to
support DVR with Vulcan which wasn't the

00:01:23.120 --> 00:01:23.130
support DVR with Vulcan which wasn't the
 

00:01:23.130 --> 00:01:27.740
support DVR with Vulcan which wasn't the
case back then GDC 2017 and still today

00:01:27.740 --> 00:01:27.750
case back then GDC 2017 and still today
 

00:01:27.750 --> 00:01:32.870
case back then GDC 2017 and still today
working has where no connection to any

00:01:32.870 --> 00:01:32.880
working has where no connection to any
 

00:01:32.880 --> 00:01:39.530
working has where no connection to any
VR interface at the moment the in droid

00:01:39.530 --> 00:01:39.540
VR interface at the moment the in droid
 

00:01:39.540 --> 00:01:44.660
VR interface at the moment the in droid
system part of the CryEngine we didn't

00:01:44.660 --> 00:01:44.670
system part of the CryEngine we didn't
 

00:01:44.670 --> 00:01:49.330
system part of the CryEngine we didn't
need to touch because in 2015 for GDC we

00:01:49.330 --> 00:01:49.340
need to touch because in 2015 for GDC we
 

00:01:49.340 --> 00:01:53.240
need to touch because in 2015 for GDC we
made an equally quick and dirty hack for

00:01:53.240 --> 00:01:53.250
made an equally quick and dirty hack for
 

00:01:53.250 --> 00:01:57.560
made an equally quick and dirty hack for
our Crysis 3 MP multiplayer on a Tegra

00:01:57.560 --> 00:01:57.570
our Crysis 3 MP multiplayer on a Tegra
 

00:01:57.570 --> 00:02:01.160
our Crysis 3 MP multiplayer on a Tegra
device that Tegra device was much more

00:02:01.160 --> 00:02:01.170
device that Tegra device was much more
 

00:02:01.170 --> 00:02:04.730
device that Tegra device was much more
powerful than Android mobile device

00:02:04.730 --> 00:02:04.740
powerful than Android mobile device
 

00:02:04.740 --> 00:02:09.949
powerful than Android mobile device
and OpenGL so basically that was an

00:02:09.949 --> 00:02:09.959
and OpenGL so basically that was an
 

00:02:09.959 --> 00:02:14.720
and OpenGL so basically that was an
exercise and orientation and evaluating

00:02:14.720 --> 00:02:14.730
exercise and orientation and evaluating
 

00:02:14.730 --> 00:02:17.710
exercise and orientation and evaluating
I was the performance of the GPU what

00:02:17.710 --> 00:02:17.720
I was the performance of the GPU what
 

00:02:17.720 --> 00:02:21.979
I was the performance of the GPU what
what are the tools that we have and how

00:02:21.979 --> 00:02:21.989
what are the tools that we have and how
 

00:02:21.989 --> 00:02:26.270
what are the tools that we have and how
we can improve on that and I brought the

00:02:26.270 --> 00:02:26.280
we can improve on that and I brought the
 

00:02:26.280 --> 00:02:40.270
we can improve on that and I brought the
demon yeah so I think it runs at 1920 by

00:02:40.270 --> 00:02:40.280
demon yeah so I think it runs at 1920 by
 

00:02:40.280 --> 00:02:53.750
demon yeah so I think it runs at 1920 by
1080 this is a loading screen and this

00:02:53.750 --> 00:02:53.760
1080 this is a loading screen and this
 

00:02:53.760 --> 00:02:56.030
1080 this is a loading screen and this
is a sequence from the beginning of the

00:02:56.030 --> 00:02:56.040
is a sequence from the beginning of the
 

00:02:56.040 --> 00:03:01.130
is a sequence from the beginning of the
game obviously not VR because we don't

00:03:01.130 --> 00:03:01.140
game obviously not VR because we don't
 

00:03:01.140 --> 00:03:04.220
game obviously not VR because we don't
want we have we don't have the

00:03:04.220 --> 00:03:04.230
want we have we don't have the
 

00:03:04.230 --> 00:03:06.320
want we have we don't have the
capability to write everything which is

00:03:06.320 --> 00:03:06.330
capability to write everything which is
 

00:03:06.330 --> 00:03:08.870
capability to write everything which is
in the regular oculus driver was as on

00:03:08.870 --> 00:03:08.880
in the regular oculus driver was as on
 

00:03:08.880 --> 00:03:11.750
in the regular oculus driver was as on
chroma submissions and air tracking and

00:03:11.750 --> 00:03:11.760
chroma submissions and air tracking and
 

00:03:11.760 --> 00:03:13.340
chroma submissions and air tracking and
all of this which we would have to make

00:03:13.340 --> 00:03:13.350
all of this which we would have to make
 

00:03:13.350 --> 00:03:17.810
all of this which we would have to make
ourselves which obviously is possible by

00:03:17.810 --> 00:03:17.820
ourselves which obviously is possible by
 

00:03:17.820 --> 00:03:24.470
ourselves which obviously is possible by
default it's on Rails and you can't hear

00:03:24.470 --> 00:03:24.480
default it's on Rails and you can't hear
 

00:03:24.480 --> 00:03:27.470
default it's on Rails and you can't hear
it sadly that actually Hix which is this

00:03:27.470 --> 00:03:27.480
it sadly that actually Hix which is this
 

00:03:27.480 --> 00:03:32.060
it sadly that actually Hix which is this
little AI in in the ball with AI is

00:03:32.060 --> 00:03:32.070
little AI in in the ball with AI is
 

00:03:32.070 --> 00:03:34.729
little AI in in the ball with AI is
talking to us and there sounds in the

00:03:34.729 --> 00:03:34.739
talking to us and there sounds in the
 

00:03:34.739 --> 00:03:41.800
talking to us and there sounds in the
background and for fun he also made it

00:03:41.800 --> 00:03:41.810
background and for fun he also made it
 

00:03:41.810 --> 00:03:48.770
background and for fun he also made it
very difficult to see made it react to

00:03:48.770 --> 00:03:48.780
very difficult to see made it react to
 

00:03:48.780 --> 00:03:56.000
very difficult to see made it react to
the orientation of the cellphone

00:03:56.000 --> 00:03:56.010
 

00:03:56.010 --> 00:04:00.780
it's kind of sad but I mean you you can

00:04:00.780 --> 00:04:00.790
it's kind of sad but I mean you you can
 

00:04:00.790 --> 00:04:04.289
it's kind of sad but I mean you you can
come forward after the talk and then you

00:04:04.289 --> 00:04:04.299
come forward after the talk and then you
 

00:04:04.299 --> 00:04:08.330
come forward after the talk and then you
can try to save it's not a big deal

00:04:08.330 --> 00:04:08.340
can try to save it's not a big deal
 

00:04:08.340 --> 00:04:12.270
can try to save it's not a big deal
as you saw it runs about at 45 frames

00:04:12.270 --> 00:04:12.280
as you saw it runs about at 45 frames
 

00:04:12.280 --> 00:04:13.979
as you saw it runs about at 45 frames
per second sometimes a bit better

00:04:13.979 --> 00:04:13.989
per second sometimes a bit better
 

00:04:13.989 --> 00:04:18.090
per second sometimes a bit better
sometimes it was we also experimented

00:04:18.090 --> 00:04:18.100
sometimes it was we also experimented
 

00:04:18.100 --> 00:04:24.060
sometimes it was we also experimented
with the Nexus 6p which was I would say

00:04:24.060 --> 00:04:24.070
with the Nexus 6p which was I would say
 

00:04:24.070 --> 00:04:27.689
with the Nexus 6p which was I would say
a failure in the Samsung s7 this is a

00:04:27.689 --> 00:04:27.699
a failure in the Samsung s7 this is a
 

00:04:27.699 --> 00:04:32.090
a failure in the Samsung s7 this is a
version with an X in US and Mali T 880

00:04:32.090 --> 00:04:32.100
version with an X in US and Mali T 880
 

00:04:32.100 --> 00:04:36.300
version with an X in US and Mali T 880
the Nexus 6p has an inertia which has

00:04:36.300 --> 00:04:36.310
the Nexus 6p has an inertia which has
 

00:04:36.310 --> 00:04:43.460
the Nexus 6p has an inertia which has
severe limitations

00:04:43.460 --> 00:04:43.470
 

00:04:43.470 --> 00:04:49.170
okay so regarding workin' we reworked

00:04:49.170 --> 00:04:49.180
okay so regarding workin' we reworked
 

00:04:49.180 --> 00:04:52.370
okay so regarding workin' we reworked
the entire cranium over the last years

00:04:52.370 --> 00:04:52.380
the entire cranium over the last years
 

00:04:52.380 --> 00:04:56.570
the entire cranium over the last years
to be more abstract and usually it was

00:04:56.570 --> 00:04:56.580
to be more abstract and usually it was
 

00:04:56.580 --> 00:04:59.640
to be more abstract and usually it was
entirely dx11 models or even though

00:04:59.640 --> 00:04:59.650
entirely dx11 models or even though
 

00:04:59.650 --> 00:05:03.180
entirely dx11 models or even though
general that we used on the Tegra device

00:05:03.180 --> 00:05:03.190
general that we used on the Tegra device
 

00:05:03.190 --> 00:05:06.750
general that we used on the Tegra device
was actually on G DX xi o nga

00:05:06.750 --> 00:05:06.760
was actually on G DX xi o nga
 

00:05:06.760 --> 00:05:11.670
was actually on G DX xi o nga
translation so this time we made

00:05:11.670 --> 00:05:11.680
translation so this time we made
 

00:05:11.680 --> 00:05:14.010
translation so this time we made
everything abstract and all our the API

00:05:14.010 --> 00:05:14.020
everything abstract and all our the API
 

00:05:14.020 --> 00:05:16.409
everything abstract and all our the API
said we are supporting like eleven and

00:05:16.409 --> 00:05:16.419
said we are supporting like eleven and
 

00:05:16.419 --> 00:05:19.350
said we are supporting like eleven and
twelve and we can and so on as natively

00:05:19.350 --> 00:05:19.360
twelve and we can and so on as natively
 

00:05:19.360 --> 00:05:21.830
twelve and we can and so on as natively
integrated and has all the optimizations

00:05:21.830 --> 00:05:21.840
integrated and has all the optimizations
 

00:05:21.840 --> 00:05:28.110
integrated and has all the optimizations
ps4 Xbox and so on so this was not our

00:05:28.110 --> 00:05:28.120
ps4 Xbox and so on so this was not our
 

00:05:28.120 --> 00:05:32.100
ps4 Xbox and so on so this was not our
first attempt at weaken our PC version

00:05:32.100 --> 00:05:32.110
first attempt at weaken our PC version
 

00:05:32.110 --> 00:05:36.510
first attempt at weaken our PC version
ran relatively stable at the time but it

00:05:36.510 --> 00:05:36.520
ran relatively stable at the time but it
 

00:05:36.520 --> 00:05:38.219
ran relatively stable at the time but it
was our first attempt

00:05:38.219 --> 00:05:38.229
was our first attempt
 

00:05:38.229 --> 00:05:42.560
was our first attempt
we're running working on a mobile device

00:05:42.560 --> 00:05:42.570
 

00:05:42.570 --> 00:05:46.980
our Android preach is sta open-source

00:05:46.980 --> 00:05:46.990
our Android preach is sta open-source
 

00:05:46.990 --> 00:05:50.219
our Android preach is sta open-source
project and there was no mmm no

00:05:50.219 --> 00:05:50.229
project and there was no mmm no
 

00:05:50.229 --> 00:05:53.399
project and there was no mmm no
support at that time so I ripped out an

00:05:53.399 --> 00:05:53.409
support at that time so I ripped out an
 

00:05:53.409 --> 00:05:56.060
support at that time so I ripped out an
entire default OpenGL context

00:05:56.060 --> 00:05:56.070
entire default OpenGL context
 

00:05:56.070 --> 00:05:57.870
entire default OpenGL context
initialization which happens by default

00:05:57.870 --> 00:05:57.880
initialization which happens by default
 

00:05:57.880 --> 00:06:04.200
initialization which happens by default
and used our regular VK surface in the

00:06:04.200 --> 00:06:04.210
and used our regular VK surface in the
 

00:06:04.210 --> 00:06:05.480
and used our regular VK surface in the
casebook chain

00:06:05.480 --> 00:06:05.490
casebook chain
 

00:06:05.490 --> 00:06:10.280
casebook chain
functionality that we had to create the

00:06:10.280 --> 00:06:10.290
functionality that we had to create the
 

00:06:10.290 --> 00:06:13.520
functionality that we had to create the
necessary objects working objects to run

00:06:13.520 --> 00:06:13.530
necessary objects working objects to run
 

00:06:13.530 --> 00:06:18.080
necessary objects working objects to run
on an android window when we ran it just

00:06:18.080 --> 00:06:18.090
on an android window when we ran it just
 

00:06:18.090 --> 00:06:23.200
on an android window when we ran it just
like that a lot of bad things and no

00:06:23.200 --> 00:06:23.210
like that a lot of bad things and no
 

00:06:23.210 --> 00:06:29.900
like that a lot of bad things and no
validation errors were generated the in

00:06:29.900 --> 00:06:29.910
validation errors were generated the in
 

00:06:29.910 --> 00:06:33.140
validation errors were generated the in
the rest introspection when we tried to

00:06:33.140 --> 00:06:33.150
the rest introspection when we tried to
 

00:06:33.150 --> 00:06:38.090
the rest introspection when we tried to
find out what happened on the the under

00:06:38.090 --> 00:06:38.100
find out what happened on the the under
 

00:06:38.100 --> 00:06:42.730
find out what happened on the the under
a chip it only supported for the script

00:06:42.730 --> 00:06:42.740
a chip it only supported for the script
 

00:06:42.740 --> 00:06:47.990
a chip it only supported for the script
tables stage and stuff like that without

00:06:47.990 --> 00:06:48.000
tables stage and stuff like that without
 

00:06:48.000 --> 00:06:55.430
tables stage and stuff like that without
any validation validation there besides

00:06:55.430 --> 00:06:55.440
any validation validation there besides
 

00:06:55.440 --> 00:06:57.770
any validation validation there besides
that there were tons of formats which

00:06:57.770 --> 00:06:57.780
that there were tons of formats which
 

00:06:57.780 --> 00:07:00.439
that there were tons of formats which
were not supported I mean Robinson ran

00:07:00.439 --> 00:07:00.449
were not supported I mean Robinson ran
 

00:07:00.449 --> 00:07:06.170
were not supported I mean Robinson ran
on the regular PC GPUs which one support

00:07:06.170 --> 00:07:06.180
on the regular PC GPUs which one support
 

00:07:06.180 --> 00:07:09.260
on the regular PC GPUs which one support
block compression so we had to find

00:07:09.260 --> 00:07:09.270
block compression so we had to find
 

00:07:09.270 --> 00:07:14.379
block compression so we had to find
corresponding mappings to yeah

00:07:14.379 --> 00:07:14.389
 

00:07:14.389 --> 00:07:17.060
luckily the the a support film was

00:07:17.060 --> 00:07:17.070
luckily the the a support film was
 

00:07:17.070 --> 00:07:21.010
luckily the the a support film was
already in place because our open G

00:07:21.010 --> 00:07:21.020
already in place because our open G
 

00:07:21.020 --> 00:07:24.730
already in place because our open G
implementation had all the EAC

00:07:24.730 --> 00:07:24.740
implementation had all the EAC
 

00:07:24.740 --> 00:07:28.610
implementation had all the EAC
coatings enabled then there were some

00:07:28.610 --> 00:07:28.620
coatings enabled then there were some
 

00:07:28.620 --> 00:07:31.969
coatings enabled then there were some
surprising fails there were specific

00:07:31.969 --> 00:07:31.979
surprising fails there were specific
 

00:07:31.979 --> 00:07:35.110
surprising fails there were specific
Esmond targets which weren't available

00:07:35.110 --> 00:07:35.120
Esmond targets which weren't available
 

00:07:35.120 --> 00:07:43.339
Esmond targets which weren't available
we met them to have performance were

00:07:43.339 --> 00:07:43.349
we met them to have performance were
 

00:07:43.349 --> 00:07:46.700
we met them to have performance were
some I think under in both I'm not sure

00:07:46.700 --> 00:07:46.710
some I think under in both I'm not sure
 

00:07:46.710 --> 00:07:49.250
some I think under in both I'm not sure
which of them didn't support 32-bit

00:07:49.250 --> 00:07:49.260
which of them didn't support 32-bit
 

00:07:49.260 --> 00:07:55.250
which of them didn't support 32-bit
float that stands and then we had to go

00:07:55.250 --> 00:07:55.260
float that stands and then we had to go
 

00:07:55.260 --> 00:07:59.839
float that stands and then we had to go
back to the 16 there was also a problem

00:07:59.839 --> 00:07:59.849
back to the 16 there was also a problem
 

00:07:59.849 --> 00:08:03.649
back to the 16 there was also a problem
getting something as basic as red 16

00:08:03.649 --> 00:08:03.659
getting something as basic as red 16
 

00:08:03.659 --> 00:08:05.469
getting something as basic as red 16
which was an integral format seeing a

00:08:05.469 --> 00:08:05.479
which was an integral format seeing a
 

00:08:05.479 --> 00:08:07.879
which was an integral format seeing a
single channel and check out format

00:08:07.879 --> 00:08:07.889
single channel and check out format
 

00:08:07.889 --> 00:08:12.980
single channel and check out format
which would actually aliens the D 16 so

00:08:12.980 --> 00:08:12.990
which would actually aliens the D 16 so
 

00:08:12.990 --> 00:08:15.590
which would actually aliens the D 16 so
we had problems actually accessing the

00:08:15.590 --> 00:08:15.600
we had problems actually accessing the
 

00:08:15.600 --> 00:08:19.730
we had problems actually accessing the
stick 16 by awliyas interviews we didn't

00:08:19.730 --> 00:08:19.740
stick 16 by awliyas interviews we didn't
 

00:08:19.740 --> 00:08:24.290
stick 16 by awliyas interviews we didn't
pick ASTC over AC because where we just

00:08:24.290 --> 00:08:24.300
pick ASTC over AC because where we just
 

00:08:24.300 --> 00:08:29.960
pick ASTC over AC because where we just
worked one month on it and it was just

00:08:29.960 --> 00:08:29.970
worked one month on it and it was just
 

00:08:29.970 --> 00:08:32.659
worked one month on it and it was just
an experiment so it's not that that we

00:08:32.659 --> 00:08:32.669
an experiment so it's not that that we
 

00:08:32.669 --> 00:08:35.480
an experiment so it's not that that we
have to make the whole featureless

00:08:35.480 --> 00:08:35.490
have to make the whole featureless
 

00:08:35.490 --> 00:08:44.089
have to make the whole featureless
complete so basically we ran through the

00:08:44.089 --> 00:08:44.099
complete so basically we ran through the
 

00:08:44.099 --> 00:08:49.550
complete so basically we ran through the
code and made large part of the code

00:08:49.550 --> 00:08:49.560
code and made large part of the code
 

00:08:49.560 --> 00:08:54.949
code and made large part of the code
base flex was the situation where the

00:08:54.949 --> 00:08:54.959
base flex was the situation where the
 

00:08:54.959 --> 00:08:58.639
base flex was the situation where the
requested swaption mode of FIFO wasn't

00:08:58.639 --> 00:08:58.649
requested swaption mode of FIFO wasn't
 

00:08:58.649 --> 00:09:00.050
requested swaption mode of FIFO wasn't
available and we had to get back to

00:09:00.050 --> 00:09:00.060
available and we had to get back to
 

00:09:00.060 --> 00:09:03.170
available and we had to get back to
mailbox there was a situation that you

00:09:03.170 --> 00:09:03.180
mailbox there was a situation that you
 

00:09:03.180 --> 00:09:05.030
mailbox there was a situation that you
asked for triple buffering as well that

00:09:05.030 --> 00:09:05.040
asked for triple buffering as well that
 

00:09:05.040 --> 00:09:06.800
asked for triple buffering as well that
you get three back buffers and you

00:09:06.800 --> 00:09:06.810
you get three back buffers and you
 

00:09:06.810 --> 00:09:11.180
you get three back buffers and you
actually got four there was the problem

00:09:11.180 --> 00:09:11.190
actually got four there was the problem
 

00:09:11.190 --> 00:09:14.620
actually got four there was the problem
with the specific texture formats and

00:09:14.620 --> 00:09:14.630
with the specific texture formats and
 

00:09:14.630 --> 00:09:19.690
with the specific texture formats and
like for example the Mali t-80 on this

00:09:19.690 --> 00:09:19.700
like for example the Mali t-80 on this
 

00:09:19.700 --> 00:09:23.260
like for example the Mali t-80 on this
s7 does not have anisotropic filtering

00:09:23.260 --> 00:09:23.270
s7 does not have anisotropic filtering
 

00:09:23.270 --> 00:09:26.540
s7 does not have anisotropic filtering
on the Andre no we don't have any cube

00:09:26.540 --> 00:09:26.550
on the Andre no we don't have any cube
 

00:09:26.550 --> 00:09:32.600
on the Andre no we don't have any cube
arrays or 3d samplers and where the

00:09:32.600 --> 00:09:32.610
arrays or 3d samplers and where the
 

00:09:32.610 --> 00:09:34.100
arrays or 3d samplers and where the
geometry shader and tessellation

00:09:34.100 --> 00:09:34.110
geometry shader and tessellation
 

00:09:34.110 --> 00:09:36.290
geometry shader and tessellation
subfolders all over the place most of

00:09:36.290 --> 00:09:36.300
subfolders all over the place most of
 

00:09:36.300 --> 00:09:39.170
subfolders all over the place most of
them basically don't support any of that

00:09:39.170 --> 00:09:39.180
them basically don't support any of that
 

00:09:39.180 --> 00:09:42.889
them basically don't support any of that
and there's a problem as well if you're

00:09:42.889 --> 00:09:42.899
and there's a problem as well if you're
 

00:09:42.899 --> 00:09:46.100
and there's a problem as well if you're
from a PC environment you know that you

00:09:46.100 --> 00:09:46.110
from a PC environment you know that you
 

00:09:46.110 --> 00:09:49.220
from a PC environment you know that you
always combined a trainer targets and

00:09:49.220 --> 00:09:49.230
always combined a trainer targets and
 

00:09:49.230 --> 00:09:53.230
always combined a trainer targets and
you basically have unlimited descriptors

00:09:53.230 --> 00:09:53.240
you basically have unlimited descriptors
 

00:09:53.240 --> 00:09:58.069
you basically have unlimited descriptors
and/or you have 256 HLS area slots and

00:09:58.069 --> 00:09:58.079
and/or you have 256 HLS area slots and
 

00:09:58.079 --> 00:10:02.510
and/or you have 256 HLS area slots and
all of this the numbers are not very

00:10:02.510 --> 00:10:02.520
all of this the numbers are not very
 

00:10:02.520 --> 00:10:05.000
all of this the numbers are not very
much most of the time it's foreign no

00:10:05.000 --> 00:10:05.010
much most of the time it's foreign no
 

00:10:05.010 --> 00:10:09.260
much most of the time it's foreign no
targets sometimes you have because of a

00:10:09.260 --> 00:10:09.270
targets sometimes you have because of a
 

00:10:09.270 --> 00:10:11.990
targets sometimes you have because of a
bug just run descriptor table sometimes

00:10:11.990 --> 00:10:12.000
bug just run descriptor table sometimes
 

00:10:12.000 --> 00:10:14.000
bug just run descriptor table sometimes
you have few descriptor a for descriptor

00:10:14.000 --> 00:10:14.010
you have few descriptor a for descriptor
 

00:10:14.010 --> 00:10:18.889
you have few descriptor a for descriptor
table so you have to keep the engine

00:10:18.889 --> 00:10:18.899
table so you have to keep the engine
 

00:10:18.899 --> 00:10:22.670
table so you have to keep the engine
running and all of these restrictions

00:10:22.670 --> 00:10:22.680
running and all of these restrictions
 

00:10:22.680 --> 00:10:25.270
running and all of these restrictions
and just not quit and say oh sorry

00:10:25.270 --> 00:10:25.280
and just not quit and say oh sorry
 

00:10:25.280 --> 00:10:29.530
and just not quit and say oh sorry
you can't run that is not necessarily

00:10:29.530 --> 00:10:29.540
you can't run that is not necessarily
 

00:10:29.540 --> 00:10:33.780
you can't run that is not necessarily
problem to allow the system to downcast

00:10:33.780 --> 00:10:33.790
problem to allow the system to downcast
 

00:10:33.790 --> 00:10:37.120
problem to allow the system to downcast
the smoker mode that's not a big deal if

00:10:37.120 --> 00:10:37.130
the smoker mode that's not a big deal if
 

00:10:37.130 --> 00:10:38.920
the smoker mode that's not a big deal if
you're using FIFO or mailbox or

00:10:38.920 --> 00:10:38.930
you're using FIFO or mailbox or
 

00:10:38.930 --> 00:10:42.790
you're using FIFO or mailbox or
something like that you can write the

00:10:42.790 --> 00:10:42.800
something like that you can write the
 

00:10:42.800 --> 00:10:45.540
something like that you can write the
code so that the texture formats can

00:10:45.540 --> 00:10:45.550
code so that the texture formats can
 

00:10:45.550 --> 00:10:48.700
code so that the texture formats can
downcast to compatible formats that are

00:10:48.700 --> 00:10:48.710
downcast to compatible formats that are
 

00:10:48.710 --> 00:10:51.580
downcast to compatible formats that are
available it's just you have to make a

00:10:51.580 --> 00:10:51.590
available it's just you have to make a
 

00:10:51.590 --> 00:10:55.240
available it's just you have to make a
lot of reflection and on the device and

00:10:55.240 --> 00:10:55.250
lot of reflection and on the device and
 

00:10:55.250 --> 00:10:58.240
lot of reflection and on the device and
see what you can do in the case if you

00:10:58.240 --> 00:10:58.250
see what you can do in the case if you
 

00:10:58.250 --> 00:11:00.250
see what you can do in the case if you
really need a 3d texture it becomes a

00:11:00.250 --> 00:11:00.260
really need a 3d texture it becomes a
 

00:11:00.260 --> 00:11:03.750
really need a 3d texture it becomes a
bit complicated but I mean having

00:11:03.750 --> 00:11:03.760
bit complicated but I mean having
 

00:11:03.760 --> 00:11:06.240
bit complicated but I mean having
alternatives that really the algorithmic

00:11:06.240 --> 00:11:06.250
alternatives that really the algorithmic
 

00:11:06.250 --> 00:11:10.680
alternatives that really the algorithmic
alternatives is always a good thing

00:11:10.680 --> 00:11:10.690
alternatives is always a good thing
 

00:11:10.690 --> 00:11:19.970
alternatives is always a good thing
our shaders

00:11:19.970 --> 00:11:19.980
 

00:11:19.980 --> 00:11:21.600
[Music]

00:11:21.600 --> 00:11:21.610
[Music]
 

00:11:21.610 --> 00:11:28.990
[Music]
so when we supported the opengl we had a

00:11:28.990 --> 00:11:29.000
so when we supported the opengl we had a
 

00:11:29.000 --> 00:11:33.340
so when we supported the opengl we had a
transcoder that translated HLS 800 GLSL

00:11:33.340 --> 00:11:33.350
transcoder that translated HLS 800 GLSL
 

00:11:33.350 --> 00:11:36.130
transcoder that translated HLS 800 GLSL
which was a child SNCC which was also

00:11:36.130 --> 00:11:36.140
which was a child SNCC which was also
 

00:11:36.140 --> 00:11:43.120
which was a child SNCC which was also
used in unity we heavily modified it we

00:11:43.120 --> 00:11:43.130
used in unity we heavily modified it we
 

00:11:43.130 --> 00:11:45.370
used in unity we heavily modified it we
added to compute rate a support and all

00:11:45.370 --> 00:11:45.380
added to compute rate a support and all
 

00:11:45.380 --> 00:11:47.710
added to compute rate a support and all
kinds of different sample type supports

00:11:47.710 --> 00:11:47.720
kinds of different sample type supports
 

00:11:47.720 --> 00:11:51.670
kinds of different sample type supports
and so on so that thing became feature

00:11:51.670 --> 00:11:51.680
and so on so that thing became feature
 

00:11:51.680 --> 00:11:56.950
and so on so that thing became feature
complete and the end basically the

00:11:56.950 --> 00:11:56.960
complete and the end basically the
 

00:11:56.960 --> 00:12:00.820
complete and the end basically the
problem is that an avoiding GLSL is not

00:12:00.820 --> 00:12:00.830
problem is that an avoiding GLSL is not
 

00:12:00.830 --> 00:12:03.670
problem is that an avoiding GLSL is not
really enough work until as a week in

00:12:03.670 --> 00:12:03.680
really enough work until as a week in
 

00:12:03.680 --> 00:12:06.100
really enough work until as a week in
specific year less air with different

00:12:06.100 --> 00:12:06.110
specific year less air with different
 

00:12:06.110 --> 00:12:08.310
specific year less air with different
annotations and different syntaxes and

00:12:08.310 --> 00:12:08.320
annotations and different syntaxes and
 

00:12:08.320 --> 00:12:13.660
annotations and different syntaxes and
so I had to go over HL SLCC again and

00:12:13.660 --> 00:12:13.670
so I had to go over HL SLCC again and
 

00:12:13.670 --> 00:12:18.460
so I had to go over HL SLCC again and
make a lot of adjustments like how to

00:12:18.460 --> 00:12:18.470
make a lot of adjustments like how to
 

00:12:18.470 --> 00:12:22.270
make a lot of adjustments like how to
pass metadata from HLSL to Spivey

00:12:22.270 --> 00:12:22.280
pass metadata from HLSL to Spivey
 

00:12:22.280 --> 00:12:23.920
pass metadata from HLSL to Spivey
because you want to reflect on the

00:12:23.920 --> 00:12:23.930
because you want to reflect on the
 

00:12:23.930 --> 00:12:27.640
because you want to reflect on the
sperry basically this is an exercise and

00:12:27.640 --> 00:12:27.650
sperry basically this is an exercise and
 

00:12:27.650 --> 00:12:33.579
sperry basically this is an exercise and
masochism I would say so luckily

00:12:33.579 --> 00:12:33.589
 

00:12:33.589 --> 00:12:37.460
luckily this is over because now we have

00:12:37.460 --> 00:12:37.470
luckily this is over because now we have
 

00:12:37.470 --> 00:12:41.139
luckily this is over because now we have
I think it's called

00:12:41.139 --> 00:12:41.149
I think it's called
 

00:12:41.149 --> 00:12:45.530
I think it's called
DXE odbc we have a native HLSL test baby

00:12:45.530 --> 00:12:45.540
DXE odbc we have a native HLSL test baby
 

00:12:45.540 --> 00:12:47.569
DXE odbc we have a native HLSL test baby
translator which has been developed by

00:12:47.569 --> 00:12:47.579
translator which has been developed by
 

00:12:47.579 --> 00:12:51.379
translator which has been developed by
Kronos together with a few folks of

00:12:51.379 --> 00:12:51.389
Kronos together with a few folks of
 

00:12:51.389 --> 00:12:57.889
Kronos together with a few folks of
Google so this is not anymore but we

00:12:57.889 --> 00:12:57.899
Google so this is not anymore but we
 

00:12:57.899 --> 00:13:03.739
Google so this is not anymore but we
don't wanna repeat it so we are ending a

00:13:03.739 --> 00:13:03.749
don't wanna repeat it so we are ending a
 

00:13:03.749 --> 00:13:06.619
don't wanna repeat it so we are ending a
lot of adopt early adopter issues even

00:13:06.619 --> 00:13:06.629
lot of adopt early adopter issues even
 

00:13:06.629 --> 00:13:11.269
lot of adopt early adopter issues even
after we thought we make everything

00:13:11.269 --> 00:13:11.279
after we thought we make everything
 

00:13:11.279 --> 00:13:14.090
after we thought we make everything
right and we adapt to all the different

00:13:14.090 --> 00:13:14.100
right and we adapt to all the different
 

00:13:14.100 --> 00:13:18.610
right and we adapt to all the different
parameters of these devices like we said

00:13:18.610 --> 00:13:18.620
parameters of these devices like we said
 

00:13:18.620 --> 00:13:21.829
parameters of these devices like we said
on the PC I ran the 100 validation

00:13:21.829 --> 00:13:21.839
on the PC I ran the 100 validation
 

00:13:21.839 --> 00:13:24.470
on the PC I ran the 100 validation
errors on the devices there were no

00:13:24.470 --> 00:13:24.480
errors on the devices there were no
 

00:13:24.480 --> 00:13:29.660
errors on the devices there were no
validation errors but sometimes it was

00:13:29.660 --> 00:13:29.670
validation errors but sometimes it was
 

00:13:29.670 --> 00:13:31.699
validation errors but sometimes it was
completely broken or it looked slightly

00:13:31.699 --> 00:13:31.709
completely broken or it looked slightly
 

00:13:31.709 --> 00:13:34.790
completely broken or it looked slightly
different specific parts of it look

00:13:34.790 --> 00:13:34.800
different specific parts of it look
 

00:13:34.800 --> 00:13:37.850
different specific parts of it look
different flickered or some constant

00:13:37.850 --> 00:13:37.860
different flickered or some constant
 

00:13:37.860 --> 00:13:39.919
different flickered or some constant
puffs are various when translated

00:13:39.919 --> 00:13:39.929
puffs are various when translated
 

00:13:39.929 --> 00:13:43.549
puffs are various when translated
transferred to the to the draw in a

00:13:43.549 --> 00:13:43.559
transferred to the to the draw in a
 

00:13:43.559 --> 00:13:45.470
transferred to the to the draw in a
correct way or something again you know

00:13:45.470 --> 00:13:45.480
correct way or something again you know
 

00:13:45.480 --> 00:13:46.999
correct way or something again you know
we don't know really what happened there

00:13:46.999 --> 00:13:47.009
we don't know really what happened there
 

00:13:47.009 --> 00:13:52.069
we don't know really what happened there
so on the Andrea like I said there was

00:13:52.069 --> 00:13:52.079
so on the Andrea like I said there was
 

00:13:52.079 --> 00:13:54.530
so on the Andrea like I said there was
absolutely humid area supports or we

00:13:54.530 --> 00:13:54.540
absolutely humid area supports or we
 

00:13:54.540 --> 00:14:02.030
absolutely humid area supports or we
limited to one cube map there were

00:14:02.030 --> 00:14:02.040
limited to one cube map there were
 

00:14:02.040 --> 00:14:06.230
limited to one cube map there were
problems with with the constant buffers

00:14:06.230 --> 00:14:06.240
problems with with the constant buffers
 

00:14:06.240 --> 00:14:10.759
problems with with the constant buffers
so we actually made big areas in the

00:14:10.759 --> 00:14:10.769
so we actually made big areas in the
 

00:14:10.769 --> 00:14:13.460
so we actually made big areas in the
shaders where we had coded lights like

00:14:13.460 --> 00:14:13.470
shaders where we had coded lights like
 

00:14:13.470 --> 00:14:17.389
shaders where we had coded lights like
for example for this demo this is not

00:14:17.389 --> 00:14:17.399
for example for this demo this is not
 

00:14:17.399 --> 00:14:19.249
for example for this demo this is not
because of performance reasons this is

00:14:19.249 --> 00:14:19.259
because of performance reasons this is
 

00:14:19.259 --> 00:14:23.720
because of performance reasons this is
really because the device just didn't or

00:14:23.720 --> 00:14:23.730
really because the device just didn't or
 

00:14:23.730 --> 00:14:26.509
really because the device just didn't or
the driver just didn't do what we told

00:14:26.509 --> 00:14:26.519
the driver just didn't do what we told
 

00:14:26.519 --> 00:14:31.579
the driver just didn't do what we told
him to do yeah and then there was a

00:14:31.579 --> 00:14:31.589
him to do yeah and then there was a
 

00:14:31.589 --> 00:14:33.799
him to do yeah and then there was a
problem on andrina which was a relative

00:14:33.799 --> 00:14:33.809
problem on andrina which was a relative
 

00:14:33.809 --> 00:14:36.350
problem on andrina which was a relative
severe we couldn't actually toggle the

00:14:36.350 --> 00:14:36.360
severe we couldn't actually toggle the
 

00:14:36.360 --> 00:14:39.980
severe we couldn't actually toggle the
script or tables so we bound one

00:14:39.980 --> 00:14:39.990
script or tables so we bound one
 

00:14:39.990 --> 00:14:42.230
script or tables so we bound one
monstrous descriptor table and we

00:14:42.230 --> 00:14:42.240
monstrous descriptor table and we
 

00:14:42.240 --> 00:14:45.380
monstrous descriptor table and we
dynamically offset it with

00:14:45.380 --> 00:14:45.390
dynamically offset it with
 

00:14:45.390 --> 00:14:51.740
dynamically offset it with
well coil which is a solution several

00:14:51.740 --> 00:14:51.750
well coil which is a solution several
 

00:14:51.750 --> 00:14:54.530
well coil which is a solution several
basic all of us solutions just to make

00:14:54.530 --> 00:14:54.540
basic all of us solutions just to make
 

00:14:54.540 --> 00:14:56.420
basic all of us solutions just to make
the demo running yet I kind of recommend

00:14:56.420 --> 00:14:56.430
the demo running yet I kind of recommend
 

00:14:56.430 --> 00:15:00.010
the demo running yet I kind of recommend
that you try something like that for

00:15:00.010 --> 00:15:00.020
that you try something like that for
 

00:15:00.020 --> 00:15:08.750
that you try something like that for
delivering a game so after it ran with

00:15:08.750 --> 00:15:08.760
delivering a game so after it ran with
 

00:15:08.760 --> 00:15:11.240
delivering a game so after it ran with
the expected result the next problem was

00:15:11.240 --> 00:15:11.250
the expected result the next problem was
 

00:15:11.250 --> 00:15:15.500
the expected result the next problem was
performance where this is Robinson which

00:15:15.500 --> 00:15:15.510
performance where this is Robinson which
 

00:15:15.510 --> 00:15:19.880
performance where this is Robinson which
means that our baseline performance is a

00:15:19.880 --> 00:15:19.890
means that our baseline performance is a
 

00:15:19.890 --> 00:15:25.190
means that our baseline performance is a
ps4 the subsequent releases on on Steam

00:15:25.190 --> 00:15:25.200
ps4 the subsequent releases on on Steam
 

00:15:25.200 --> 00:15:29.840
ps4 the subsequent releases on on Steam
and on the oculus tour for PCs which

00:15:29.840 --> 00:15:29.850
and on the oculus tour for PCs which
 

00:15:29.850 --> 00:15:33.590
and on the oculus tour for PCs which
means open-ended you can run it on a

00:15:33.590 --> 00:15:33.600
means open-ended you can run it on a
 

00:15:33.600 --> 00:15:38.240
means open-ended you can run it on a
Titan so there were no problems this is

00:15:38.240 --> 00:15:38.250
Titan so there were no problems this is
 

00:15:38.250 --> 00:15:40.640
Titan so there were no problems this is
a comparison between an s7 and my ps4

00:15:40.640 --> 00:15:40.650
a comparison between an s7 and my ps4
 

00:15:40.650 --> 00:15:50.090
a comparison between an s7 and my ps4
which is in some ways very severe here

00:15:50.090 --> 00:15:50.100
which is in some ways very severe here
 

00:15:50.100 --> 00:15:57.800
which is in some ways very severe here
the CPU is a Exynos MP 12 which is a 2.3

00:15:57.800 --> 00:15:57.810
the CPU is a Exynos MP 12 which is a 2.3
 

00:15:57.810 --> 00:16:01.970
the CPU is a Exynos MP 12 which is a 2.3
gigahertz 4 core it runs and big.little

00:16:01.970 --> 00:16:01.980
gigahertz 4 core it runs and big.little
 

00:16:01.980 --> 00:16:04.250
gigahertz 4 core it runs and big.little
I think so in theory we could have eight

00:16:04.250 --> 00:16:04.260
I think so in theory we could have eight
 

00:16:04.260 --> 00:16:08.300
I think so in theory we could have eight
but we could only use for these

00:16:08.300 --> 00:16:08.310
but we could only use for these
 

00:16:08.310 --> 00:16:11.690
but we could only use for these
gigaflops are without neon neon as is a

00:16:11.690 --> 00:16:11.700
gigaflops are without neon neon as is a
 

00:16:11.700 --> 00:16:16.430
gigaflops are without neon neon as is a
vectorization instruction for which if

00:16:16.430 --> 00:16:16.440
vectorization instruction for which if
 

00:16:16.440 --> 00:16:19.580
vectorization instruction for which if
you would use it what quadruple the Jiva

00:16:19.580 --> 00:16:19.590
you would use it what quadruple the Jiva
 

00:16:19.590 --> 00:16:25.420
you would use it what quadruple the Jiva
gigaflops which means you would be at

00:16:25.420 --> 00:16:25.430
 

00:16:25.430 --> 00:16:32.750
9.2 there's a hundred 2.4 gigahertz in

00:16:32.750 --> 00:16:32.760
9.2 there's a hundred 2.4 gigahertz in
 

00:16:32.760 --> 00:16:34.370
9.2 there's a hundred 2.4 gigahertz in
this demo it's not such a big problem

00:16:34.370 --> 00:16:34.380
this demo it's not such a big problem
 

00:16:34.380 --> 00:16:35.930
this demo it's not such a big problem
because we don't have any collision

00:16:35.930 --> 00:16:35.940
because we don't have any collision
 

00:16:35.940 --> 00:16:39.110
because we don't have any collision
detection we don't have any complex CPU

00:16:39.110 --> 00:16:39.120
detection we don't have any complex CPU
 

00:16:39.120 --> 00:16:44.040
detection we don't have any complex CPU
code but if you were to actually

00:16:44.040 --> 00:16:44.050
code but if you were to actually
 

00:16:44.050 --> 00:16:47.850
code but if you were to actually
try to calculate any of that and there

00:16:47.850 --> 00:16:47.860
try to calculate any of that and there
 

00:16:47.860 --> 00:16:53.519
try to calculate any of that and there
are some problems with water cure the

00:16:53.519 --> 00:16:53.529
are some problems with water cure the
 

00:16:53.529 --> 00:16:56.669
are some problems with water cure the
GPU is in the similar ballpark the Molly

00:16:56.669 --> 00:16:56.679
GPU is in the similar ballpark the Molly
 

00:16:56.679 --> 00:17:02.869
GPU is in the similar ballpark the Molly
T 880 has 260 gigaflops vs. 1.8

00:17:02.869 --> 00:17:02.879
T 880 has 260 gigaflops vs. 1.8
 

00:17:02.879 --> 00:17:08.600
T 880 has 260 gigaflops vs. 1.8
teraflops of the ps4 mmm basically that

00:17:08.600 --> 00:17:08.610
teraflops of the ps4 mmm basically that
 

00:17:08.610 --> 00:17:12.510
teraflops of the ps4 mmm basically that
this gigaflops don't necessarily mean

00:17:12.510 --> 00:17:12.520
this gigaflops don't necessarily mean
 

00:17:12.520 --> 00:17:14.460
this gigaflops don't necessarily mean
that much

00:17:14.460 --> 00:17:14.470
that much
 

00:17:14.470 --> 00:17:17.069
that much
you also have favorite limitations you

00:17:17.069 --> 00:17:17.079
you also have favorite limitations you
 

00:17:17.079 --> 00:17:21.299
you also have favorite limitations you
have that extra pot leaping limitations

00:17:21.299 --> 00:17:21.309
have that extra pot leaping limitations
 

00:17:21.309 --> 00:17:24.510
have that extra pot leaping limitations
and so on so this is just like a rough

00:17:24.510 --> 00:17:24.520
and so on so this is just like a rough
 

00:17:24.520 --> 00:17:28.139
and so on so this is just like a rough
rough idea about what this the biggest

00:17:28.139 --> 00:17:28.149
rough idea about what this the biggest
 

00:17:28.149 --> 00:17:30.750
rough idea about what this the biggest
problem actually even if it doesn't

00:17:30.750 --> 00:17:30.760
problem actually even if it doesn't
 

00:17:30.760 --> 00:17:32.789
problem actually even if it doesn't
really look like that is the memory

00:17:32.789 --> 00:17:32.799
really look like that is the memory
 

00:17:32.799 --> 00:17:37.850
really look like that is the memory
bandwidth on the ps4 we have gddr5

00:17:37.850 --> 00:17:37.860
bandwidth on the ps4 we have gddr5
 

00:17:37.860 --> 00:17:41.970
bandwidth on the ps4 we have gddr5
shared between CPU and GPU and on the sm

00:17:41.970 --> 00:17:41.980
shared between CPU and GPU and on the sm
 

00:17:41.980 --> 00:17:47.360
shared between CPU and GPU and on the sm
we have NDP ddr4 which has low power

00:17:47.360 --> 00:17:47.370
we have NDP ddr4 which has low power
 

00:17:47.370 --> 00:17:56.460
we have NDP ddr4 which has low power
ddr4 which is actually double rate so

00:17:56.460 --> 00:17:56.470
ddr4 which is actually double rate so
 

00:17:56.470 --> 00:18:00.870
ddr4 which is actually double rate so
it's 28.7 gigabyte per second was 176

00:18:00.870 --> 00:18:00.880
it's 28.7 gigabyte per second was 176
 

00:18:00.880 --> 00:18:07.529
it's 28.7 gigabyte per second was 176
given per second and this because we're

00:18:07.529 --> 00:18:07.539
given per second and this because we're
 

00:18:07.539 --> 00:18:09.690
given per second and this because we're
having we implement in the for trading

00:18:09.690 --> 00:18:09.700
having we implement in the for trading
 

00:18:09.700 --> 00:18:11.850
having we implement in the for trading
we have a lot of post-processing effects

00:18:11.850 --> 00:18:11.860
we have a lot of post-processing effects
 

00:18:11.860 --> 00:18:15.950
we have a lot of post-processing effects
which are fullscreen effects our Costas

00:18:15.950 --> 00:18:15.960
which are fullscreen effects our Costas
 

00:18:15.960 --> 00:18:19.860
which are fullscreen effects our Costas
basically proposed our deport the cost

00:18:19.860 --> 00:18:19.870
basically proposed our deport the cost
 

00:18:19.870 --> 00:18:22.350
basically proposed our deport the cost
of everything after the G buffer is as

00:18:22.350 --> 00:18:22.360
of everything after the G buffer is as
 

00:18:22.360 --> 00:18:28.529
of everything after the G buffer is as
proportional to the resolution and the

00:18:28.529 --> 00:18:28.539
proportional to the resolution and the
 

00:18:28.539 --> 00:18:31.690
proportional to the resolution and the
band of cost is proportional to

00:18:31.690 --> 00:18:31.700
band of cost is proportional to
 

00:18:31.700 --> 00:18:37.180
band of cost is proportional to
the resolution as well so you can run a

00:18:37.180 --> 00:18:37.190
the resolution as well so you can run a
 

00:18:37.190 --> 00:18:39.400
the resolution as well so you can run a
very small resolution and run the whole

00:18:39.400 --> 00:18:39.410
very small resolution and run the whole
 

00:18:39.410 --> 00:18:45.640
very small resolution and run the whole
pipeline or you have to make cuts and

00:18:45.640 --> 00:18:45.650
pipeline or you have to make cuts and
 

00:18:45.650 --> 00:18:48.130
pipeline or you have to make cuts and
then there are the thermal issues which

00:18:48.130 --> 00:18:48.140
then there are the thermal issues which
 

00:18:48.140 --> 00:18:53.790
then there are the thermal issues which
we completely ignored but this device

00:18:53.790 --> 00:18:53.800
we completely ignored but this device
 

00:18:53.800 --> 00:18:58.750
we completely ignored but this device
behaves very nice the Tegra that we ran

00:18:58.750 --> 00:18:58.760
behaves very nice the Tegra that we ran
 

00:18:58.760 --> 00:19:02.410
behaves very nice the Tegra that we ran
three years ago was running hot after

00:19:02.410 --> 00:19:02.420
three years ago was running hot after
 

00:19:02.420 --> 00:19:06.130
three years ago was running hot after
five minutes and was throttling which

00:19:06.130 --> 00:19:06.140
five minutes and was throttling which
 

00:19:06.140 --> 00:19:08.050
five minutes and was throttling which
didn't happen with this which is pretty

00:19:08.050 --> 00:19:08.060
didn't happen with this which is pretty
 

00:19:08.060 --> 00:19:09.750
didn't happen with this which is pretty
nice

00:19:09.750 --> 00:19:09.760
nice
 

00:19:09.760 --> 00:19:12.640
nice
so the rendering framework of Robinson

00:19:12.640 --> 00:19:12.650
so the rendering framework of Robinson
 

00:19:12.650 --> 00:19:18.600
so the rendering framework of Robinson
is a fully tired if our trading pipeline

00:19:18.600 --> 00:19:18.610
is a fully tired if our trading pipeline
 

00:19:18.610 --> 00:19:22.020
is a fully tired if our trading pipeline
we're running Jeevitha pass which means

00:19:22.020 --> 00:19:22.030
we're running Jeevitha pass which means
 

00:19:22.030 --> 00:19:27.610
we're running Jeevitha pass which means
all the drawers are writing out material

00:19:27.610 --> 00:19:27.620
all the drawers are writing out material
 

00:19:27.620 --> 00:19:30.250
all the drawers are writing out material
attributes in two different render

00:19:30.250 --> 00:19:30.260
attributes in two different render
 

00:19:30.260 --> 00:19:32.320
attributes in two different render
targets and we are storing depth and

00:19:32.320 --> 00:19:32.330
targets and we are storing depth and
 

00:19:32.330 --> 00:19:36.250
targets and we are storing depth and
then afterwards we can do all kinds of

00:19:36.250 --> 00:19:36.260
then afterwards we can do all kinds of
 

00:19:36.260 --> 00:19:40.030
then afterwards we can do all kinds of
magic things with like you know screen

00:19:40.030 --> 00:19:40.040
magic things with like you know screen
 

00:19:40.040 --> 00:19:44.770
magic things with like you know screen
space I do the lighting depth of motion

00:19:44.770 --> 00:19:44.780
space I do the lighting depth of motion
 

00:19:44.780 --> 00:19:47.290
space I do the lighting depth of motion
all of these things can be done on this

00:19:47.290 --> 00:19:47.300
all of these things can be done on this
 

00:19:47.300 --> 00:19:54.550
all of these things can be done on this
tree buffer here we have three three

00:19:54.550 --> 00:19:54.560
tree buffer here we have three three
 

00:19:54.560 --> 00:19:58.030
tree buffer here we have three three
bound Rhino targets each one is

00:19:58.030 --> 00:19:58.040
bound Rhino targets each one is
 

00:19:58.040 --> 00:20:01.030
bound Rhino targets each one is
fortunate 8-bit which means we have

00:20:01.030 --> 00:20:01.040
fortunate 8-bit which means we have
 

00:20:01.040 --> 00:20:05.740
fortunate 8-bit which means we have
about 24 bytes in three render targets

00:20:05.740 --> 00:20:05.750
about 24 bytes in three render targets
 

00:20:05.750 --> 00:20:10.330
about 24 bytes in three render targets
and its relative few rate heavy use a

00:20:10.330 --> 00:20:10.340
and its relative few rate heavy use a
 

00:20:10.340 --> 00:20:17.980
and its relative few rate heavy use a
lot of capacities of the ROPS and if you

00:20:17.980 --> 00:20:17.990
lot of capacities of the ROPS and if you
 

00:20:17.990 --> 00:20:22.000
lot of capacities of the ROPS and if you
look at the pure memory bandwidth

00:20:22.000 --> 00:20:22.010
look at the pure memory bandwidth
 

00:20:22.010 --> 00:20:25.360
look at the pure memory bandwidth
occupation just looking at it that's

00:20:25.360 --> 00:20:25.370
occupation just looking at it that's
 

00:20:25.370 --> 00:20:28.030
occupation just looking at it that's
about almost a gigabyte per second you

00:20:28.030 --> 00:20:28.040
about almost a gigabyte per second you
 

00:20:28.040 --> 00:20:31.180
about almost a gigabyte per second you
can just look 28 times at such a buffer

00:20:31.180 --> 00:20:31.190
can just look 28 times at such a buffer
 

00:20:31.190 --> 00:20:34.090
can just look 28 times at such a buffer
on mobile device and then you eat up all

00:20:34.090 --> 00:20:34.100
on mobile device and then you eat up all
 

00:20:34.100 --> 00:20:37.240
on mobile device and then you eat up all
your bandwidth so that is pretty

00:20:37.240 --> 00:20:37.250
your bandwidth so that is pretty
 

00:20:37.250 --> 00:20:40.930
your bandwidth so that is pretty
problematic that is just one two five

00:20:40.930 --> 00:20:40.940
problematic that is just one two five
 

00:20:40.940 --> 00:20:42.769
problematic that is just one two five
sixty by fourteen

00:20:42.769 --> 00:20:42.779
sixty by fourteen
 

00:20:42.779 --> 00:20:45.899
sixty by fourteen
so we had to find an alternative

00:20:45.899 --> 00:20:45.909
so we had to find an alternative
 

00:20:45.909 --> 00:20:47.570
so we had to find an alternative
in the beginning we experimented with

00:20:47.570 --> 00:20:47.580
in the beginning we experimented with
 

00:20:47.580 --> 00:20:50.430
in the beginning we experimented with
4-bit render targets decide between a

00:20:50.430 --> 00:20:50.440
4-bit render targets decide between a
 

00:20:50.440 --> 00:20:54.029
4-bit render targets decide between a
target so that would then go to 1212

00:20:54.029 --> 00:20:54.039
target so that would then go to 1212
 

00:20:54.039 --> 00:20:56.759
target so that would then go to 1212
bite but we still would be robbed

00:20:56.759 --> 00:20:56.769
bite but we still would be robbed
 

00:20:56.769 --> 00:20:58.649
bite but we still would be robbed
limited because we still have three men

00:20:58.649 --> 00:20:58.659
limited because we still have three men
 

00:20:58.659 --> 00:21:05.159
limited because we still have three men
that hangs bound so our idea was we

00:21:05.159 --> 00:21:05.169
that hangs bound so our idea was we
 

00:21:05.169 --> 00:21:10.200
that hangs bound so our idea was we
reduced the entire 3/3 render target in

00:21:10.200 --> 00:21:10.210
reduced the entire 3/3 render target in
 

00:21:10.210 --> 00:21:15.839
reduced the entire 3/3 render target in
buffer to singer four component render

00:21:15.839 --> 00:21:15.849
buffer to singer four component render
 

00:21:15.849 --> 00:21:22.940
buffer to singer four component render
target in a previous version of crisis

00:21:22.940 --> 00:21:22.950
 

00:21:22.950 --> 00:21:28.190
we already employed the technique that

00:21:28.190 --> 00:21:28.200
we already employed the technique that
 

00:21:28.200 --> 00:21:31.379
we already employed the technique that
we are storing some information just on

00:21:31.379 --> 00:21:31.389
we are storing some information just on
 

00:21:31.389 --> 00:21:34.799
we are storing some information just on
even and returning information on

00:21:34.799 --> 00:21:34.809
even and returning information on
 

00:21:34.809 --> 00:21:43.339
even and returning information on
offenses which results in a half size

00:21:43.339 --> 00:21:43.349
offenses which results in a half size
 

00:21:43.349 --> 00:21:45.659
offenses which results in a half size
rendering and not a quarter size running

00:21:45.659 --> 00:21:45.669
rendering and not a quarter size running
 

00:21:45.669 --> 00:21:49.589
rendering and not a quarter size running
but a half size rendering here we saw a

00:21:49.589 --> 00:21:49.599
but a half size rendering here we saw a
 

00:21:49.599 --> 00:21:55.260
but a half size rendering here we saw a
video at full resolution so

00:21:55.260 --> 00:21:55.270
 

00:21:55.270 --> 00:22:01.270
the basic nonmetallic surface color is

00:22:01.270 --> 00:22:01.280
the basic nonmetallic surface color is
 

00:22:01.280 --> 00:22:05.050
the basic nonmetallic surface color is
full resolution and then we are storing

00:22:05.050 --> 00:22:05.060
full resolution and then we are storing
 

00:22:05.060 --> 00:22:09.040
full resolution and then we are storing
normal smoothness and reflectance at all

00:22:09.040 --> 00:22:09.050
normal smoothness and reflectance at all
 

00:22:09.050 --> 00:22:13.930
normal smoothness and reflectance at all
turning positions like you see in the

00:22:13.930 --> 00:22:13.940
turning positions like you see in the
 

00:22:13.940 --> 00:22:17.850
turning positions like you see in the
little square there the reflectance is

00:22:17.850 --> 00:22:17.860
little square there the reflectance is
 

00:22:17.860 --> 00:22:21.100
little square there the reflectance is
non-color we could get away with it in

00:22:21.100 --> 00:22:21.110
non-color we could get away with it in
 

00:22:21.110 --> 00:22:23.500
non-color we could get away with it in
this demo but normally you would

00:22:23.500 --> 00:22:23.510
this demo but normally you would
 

00:22:23.510 --> 00:22:26.680
this demo but normally you would
actually have want to have color to

00:22:26.680 --> 00:22:26.690
actually have want to have color to
 

00:22:26.690 --> 00:22:32.950
actually have want to have color to
reflectance which needs more time so we

00:22:32.950 --> 00:22:32.960
reflectance which needs more time so we
 

00:22:32.960 --> 00:22:38.050
reflectance which needs more time so we
just wanted to see how fast what we get

00:22:38.050 --> 00:22:38.060
just wanted to see how fast what we get
 

00:22:38.060 --> 00:22:41.170
just wanted to see how fast what we get
CryEngine running without major

00:22:41.170 --> 00:22:41.180
CryEngine running without major
 

00:22:41.180 --> 00:22:47.800
CryEngine running without major
modifications can we actually get into

00:22:47.800 --> 00:22:47.810
modifications can we actually get into
 

00:22:47.810 --> 00:22:52.600
modifications can we actually get into
the direction of your performance so

00:22:52.600 --> 00:22:52.610
the direction of your performance so
 

00:22:52.610 --> 00:22:56.710
the direction of your performance so
here we have examples of this tiny micro

00:22:56.710 --> 00:22:56.720
here we have examples of this tiny micro
 

00:22:56.720 --> 00:23:00.400
here we have examples of this tiny micro
G bhava so they are the three render

00:23:00.400 --> 00:23:00.410
G bhava so they are the three render
 

00:23:00.410 --> 00:23:02.620
G bhava so they are the three render
times double one is the RGB part and the

00:23:02.620 --> 00:23:02.630
times double one is the RGB part and the
 

00:23:02.630 --> 00:23:04.870
times double one is the RGB part and the
lower one is the a part so this really

00:23:04.870 --> 00:23:04.880
lower one is the a part so this really
 

00:23:04.880 --> 00:23:09.310
lower one is the a part so this really
just three render targets and everything

00:23:09.310 --> 00:23:09.320
just three render targets and everything
 

00:23:09.320 --> 00:23:16.600
just three render targets and everything
all these six things in those two zoom a

00:23:16.600 --> 00:23:16.610
all these six things in those two zoom a
 

00:23:16.610 --> 00:23:21.340
all these six things in those two zoom a
bit nearer you see the cost the cost is

00:23:21.340 --> 00:23:21.350
bit nearer you see the cost the cost is
 

00:23:21.350 --> 00:23:23.110
bit nearer you see the cost the cost is
that of course your under sampling your

00:23:23.110 --> 00:23:23.120
that of course your under sampling your
 

00:23:23.120 --> 00:23:27.780
that of course your under sampling your
edges and you sometimes see that every

00:23:27.780 --> 00:23:27.790
edges and you sometimes see that every
 

00:23:27.790 --> 00:23:31.210
edges and you sometimes see that every
even odd line just forms a diagonal

00:23:31.210 --> 00:23:31.220
even odd line just forms a diagonal
 

00:23:31.220 --> 00:23:35.470
even odd line just forms a diagonal
except instead of like the regular

00:23:35.470 --> 00:23:35.480
except instead of like the regular
 

00:23:35.480 --> 00:23:37.360
except instead of like the regular
diagonal that you have in the full

00:23:37.360 --> 00:23:37.370
diagonal that you have in the full
 

00:23:37.370 --> 00:23:43.780
diagonal that you have in the full
resolution G buffer the meaning of the

00:23:43.780 --> 00:23:43.790
resolution G buffer the meaning of the
 

00:23:43.790 --> 00:23:45.850
resolution G buffer the meaning of the
returning pixels years are also not

00:23:45.850 --> 00:23:45.860
returning pixels years are also not
 

00:23:45.860 --> 00:23:50.110
returning pixels years are also not
always the same so it's a bit difficult

00:23:50.110 --> 00:23:50.120
always the same so it's a bit difficult
 

00:23:50.120 --> 00:23:53.290
always the same so it's a bit difficult
to label this it's just that you get

00:23:53.290 --> 00:23:53.300
to label this it's just that you get
 

00:23:53.300 --> 00:23:58.060
to label this it's just that you get
idea what's the price we actually have a

00:23:58.060 --> 00:23:58.070
idea what's the price we actually have a
 

00:23:58.070 --> 00:24:01.190
idea what's the price we actually have a
tree where a reconstruction of this

00:24:01.190 --> 00:24:01.200
tree where a reconstruction of this
 

00:24:01.200 --> 00:24:07.160
tree where a reconstruction of this
in the in the knighting pass it comes

00:24:07.160 --> 00:24:07.170
in the in the knighting pass it comes
 

00:24:07.170 --> 00:24:13.040
in the in the knighting pass it comes
out in acceptable quality in other areas

00:24:13.040 --> 00:24:13.050
out in acceptable quality in other areas
 

00:24:13.050 --> 00:24:17.600
out in acceptable quality in other areas
like we render HDR and we tone with the

00:24:17.600 --> 00:24:17.610
like we render HDR and we tone with the
 

00:24:17.610 --> 00:24:21.710
like we render HDR and we tone with the
HDR later other bandwidth savings we

00:24:21.710 --> 00:24:21.720
HDR later other bandwidth savings we
 

00:24:21.720 --> 00:24:25.790
HDR later other bandwidth savings we
reach by reducing the the precision of

00:24:25.790 --> 00:24:25.800
reach by reducing the the precision of
 

00:24:25.800 --> 00:24:32.390
reach by reducing the the precision of
the HDR buffer from regular half to 11

00:24:32.390 --> 00:24:32.400
the HDR buffer from regular half to 11
 

00:24:32.400 --> 00:24:37.610
the HDR buffer from regular half to 11
bit half even lower precision floating

00:24:37.610 --> 00:24:37.620
bit half even lower precision floating
 

00:24:37.620 --> 00:24:41.930
bit half even lower precision floating
point representations we kicked stencil

00:24:41.930 --> 00:24:41.940
point representations we kicked stencil
 

00:24:41.940 --> 00:24:46.550
point representations we kicked stencil
out so that we could use 16 instead of D

00:24:46.550 --> 00:24:46.560
out so that we could use 16 instead of D
 

00:24:46.560 --> 00:24:55.850
out so that we could use 16 instead of D
24 s 8 and Robinson is a VR game already

00:24:55.850 --> 00:24:55.860
24 s 8 and Robinson is a VR game already
 

00:24:55.860 --> 00:24:57.620
24 s 8 and Robinson is a VR game already
for fights a lot of the effects we don't

00:24:57.620 --> 00:24:57.630
for fights a lot of the effects we don't
 

00:24:57.630 --> 00:25:00.680
for fights a lot of the effects we don't
have depth of field we don't have motion

00:25:00.680 --> 00:25:00.690
have depth of field we don't have motion
 

00:25:00.690 --> 00:25:03.590
have depth of field we don't have motion
blur because all of this stuff just in

00:25:03.590 --> 00:25:03.600
blur because all of this stuff just in
 

00:25:03.600 --> 00:25:07.370
blur because all of this stuff just in
the VR device environment breaks the

00:25:07.370 --> 00:25:07.380
the VR device environment breaks the
 

00:25:07.380 --> 00:25:09.590
the VR device environment breaks the
illusion that you are really in the same

00:25:09.590 --> 00:25:09.600
illusion that you are really in the same
 

00:25:09.600 --> 00:25:17.060
illusion that you are really in the same
breaks immersiveness so we had to turn

00:25:17.060 --> 00:25:17.070
breaks immersiveness so we had to turn
 

00:25:17.070 --> 00:25:22.550
breaks immersiveness so we had to turn
off a lot of the additional nice making

00:25:22.550 --> 00:25:22.560
off a lot of the additional nice making
 

00:25:22.560 --> 00:25:24.410
off a lot of the additional nice making
post-processing effects like the

00:25:24.410 --> 00:25:24.420
post-processing effects like the
 

00:25:24.420 --> 00:25:26.420
post-processing effects like the
subsurface scattering because of a

00:25:26.420 --> 00:25:26.430
subsurface scattering because of a
 

00:25:26.430 --> 00:25:28.420
subsurface scattering because of a
require space and Jeevitha

00:25:28.420 --> 00:25:28.430
require space and Jeevitha
 

00:25:28.430 --> 00:25:31.280
require space and Jeevitha
we also don't have a nice green space

00:25:31.280 --> 00:25:31.290
we also don't have a nice green space
 

00:25:31.290 --> 00:25:35.390
we also don't have a nice green space
reflection because it eats way too much

00:25:35.390 --> 00:25:35.400
reflection because it eats way too much
 

00:25:35.400 --> 00:25:39.380
reflection because it eats way too much
bandwidth it's basically right racing

00:25:39.380 --> 00:25:39.390
bandwidth it's basically right racing
 

00:25:39.390 --> 00:25:43.610
bandwidth it's basically right racing
race and screen space which probably

00:25:43.610 --> 00:25:43.620
race and screen space which probably
 

00:25:43.620 --> 00:25:45.740
race and screen space which probably
eats up the entire bandwidth that we

00:25:45.740 --> 00:25:45.750
eats up the entire bandwidth that we
 

00:25:45.750 --> 00:25:51.410
eats up the entire bandwidth that we
have no volumetric fog that's the 3d

00:25:51.410 --> 00:25:51.420
have no volumetric fog that's the 3d
 

00:25:51.420 --> 00:25:55.670
have no volumetric fog that's the 3d
texture back then we wouldn't have had

00:25:55.670 --> 00:25:55.680
texture back then we wouldn't have had
 

00:25:55.680 --> 00:25:57.920
texture back then we wouldn't have had
an alternative like two-dimensional fork

00:25:57.920 --> 00:25:57.930
an alternative like two-dimensional fork
 

00:25:57.930 --> 00:25:58.940
an alternative like two-dimensional fork
or something like that

00:25:58.940 --> 00:25:58.950
or something like that
 

00:25:58.950 --> 00:26:02.660
or something like that
and of all the madness out of all the

00:26:02.660 --> 00:26:02.670
and of all the madness out of all the
 

00:26:02.670 --> 00:26:04.190
and of all the madness out of all the
other post-processing effects we only

00:26:04.190 --> 00:26:04.200
other post-processing effects we only
 

00:26:04.200 --> 00:26:05.930
other post-processing effects we only
need a tone mapping and the vignette

00:26:05.930 --> 00:26:05.940
need a tone mapping and the vignette
 

00:26:05.940 --> 00:26:09.260
need a tone mapping and the vignette
effect so that you you have the

00:26:09.260 --> 00:26:09.270
effect so that you you have the
 

00:26:09.270 --> 00:26:11.380
effect so that you you have the
simulation of a reduced rate of you

00:26:11.380 --> 00:26:11.390
simulation of a reduced rate of you
 

00:26:11.390 --> 00:26:16.330
simulation of a reduced rate of you
and we made one one uber shader out of

00:26:16.330 --> 00:26:16.340
and we made one one uber shader out of
 

00:26:16.340 --> 00:26:21.340
and we made one one uber shader out of
this which looking at the bandwidth is I

00:26:21.340 --> 00:26:21.350
this which looking at the bandwidth is I
 

00:26:21.350 --> 00:26:26.020
this which looking at the bandwidth is I
think the correct suggestion that you

00:26:26.020 --> 00:26:26.030
think the correct suggestion that you
 

00:26:26.030 --> 00:26:28.390
think the correct suggestion that you
merge or the post-processing audio

00:26:28.390 --> 00:26:28.400
merge or the post-processing audio
 

00:26:28.400 --> 00:26:31.720
merge or the post-processing audio
screen space passes if possible into one

00:26:31.720 --> 00:26:31.730
screen space passes if possible into one
 

00:26:31.730 --> 00:26:37.060
screen space passes if possible into one
big shader because the ALU capacity of

00:26:37.060 --> 00:26:37.070
big shader because the ALU capacity of
 

00:26:37.070 --> 00:26:40.330
big shader because the ALU capacity of
the mobile GPU is way above the

00:26:40.330 --> 00:26:40.340
the mobile GPU is way above the
 

00:26:40.340 --> 00:26:43.060
the mobile GPU is way above the
bandwidth so instead of read/write

00:26:43.060 --> 00:26:43.070
bandwidth so instead of read/write
 

00:26:43.070 --> 00:26:44.980
bandwidth so instead of read/write
read/write read/write it's better to

00:26:44.980 --> 00:26:44.990
read/write read/write it's better to
 

00:26:44.990 --> 00:26:48.370
read/write read/write it's better to
just read once and then drop 5,000

00:26:48.370 --> 00:26:48.380
just read once and then drop 5,000
 

00:26:48.380 --> 00:26:50.200
just read once and then drop 5,000
instruction shader and then only right

00:26:50.200 --> 00:26:50.210
instruction shader and then only right
 

00:26:50.210 --> 00:26:58.030
instruction shader and then only right
ones all right so our conclusion of the

00:26:58.030 --> 00:26:58.040
ones all right so our conclusion of the
 

00:26:58.040 --> 00:27:04.090
ones all right so our conclusion of the
project regarding games on Android the

00:27:04.090 --> 00:27:04.100
project regarding games on Android the
 

00:27:04.100 --> 00:27:08.710
project regarding games on Android the
effort to make woken run on the mobile

00:27:08.710 --> 00:27:08.720
effort to make woken run on the mobile
 

00:27:08.720 --> 00:27:13.320
effort to make woken run on the mobile
platform from our PC platform was

00:27:13.320 --> 00:27:13.330
platform from our PC platform was
 

00:27:13.330 --> 00:27:17.440
platform from our PC platform was
relative minor we were four people

00:27:17.440 --> 00:27:17.450
relative minor we were four people
 

00:27:17.450 --> 00:27:21.220
relative minor we were four people
working one month on it so you could

00:27:21.220 --> 00:27:21.230
working one month on it so you could
 

00:27:21.230 --> 00:27:25.690
working one month on it so you could
basically say one of us worked one month

00:27:25.690 --> 00:27:25.700
basically say one of us worked one month
 

00:27:25.700 --> 00:27:30.340
basically say one of us worked one month
on polishing or the problematic cases of

00:27:30.340 --> 00:27:30.350
on polishing or the problematic cases of
 

00:27:30.350 --> 00:27:35.890
on polishing or the problematic cases of
working on mobile the biggest problem is

00:27:35.890 --> 00:27:35.900
working on mobile the biggest problem is
 

00:27:35.900 --> 00:27:40.360
working on mobile the biggest problem is
the variety of targetable Hardware like

00:27:40.360 --> 00:27:40.370
the variety of targetable Hardware like
 

00:27:40.370 --> 00:27:42.130
the variety of targetable Hardware like
me hat in the talks before you can make

00:27:42.130 --> 00:27:42.140
me hat in the talks before you can make
 

00:27:42.140 --> 00:27:44.350
me hat in the talks before you can make
a business decision like oh it's not

00:27:44.350 --> 00:27:44.360
a business decision like oh it's not
 

00:27:44.360 --> 00:27:46.900
a business decision like oh it's not
viable to target this and that much

00:27:46.900 --> 00:27:46.910
viable to target this and that much
 

00:27:46.910 --> 00:27:48.970
viable to target this and that much
harder but there's a software engineer

00:27:48.970 --> 00:27:48.980
harder but there's a software engineer
 

00:27:48.980 --> 00:27:53.380
harder but there's a software engineer
you also have the problem there's tons

00:27:53.380 --> 00:27:53.390
you also have the problem there's tons
 

00:27:53.390 --> 00:27:55.900
you also have the problem there's tons
of hardware which is almost equivalent

00:27:55.900 --> 00:27:55.910
of hardware which is almost equivalent
 

00:27:55.910 --> 00:27:58.450
of hardware which is almost equivalent
and there's just one checkbox missing or

00:27:58.450 --> 00:27:58.460
and there's just one checkbox missing or
 

00:27:58.460 --> 00:28:00.520
and there's just one checkbox missing or
he is just one checkbox missing so you

00:28:00.520 --> 00:28:00.530
he is just one checkbox missing so you
 

00:28:00.530 --> 00:28:02.620
he is just one checkbox missing so you
have to write your engine relative

00:28:02.620 --> 00:28:02.630
have to write your engine relative
 

00:28:02.630 --> 00:28:04.180
have to write your engine relative
flexible that you can adapt yourself to

00:28:04.180 --> 00:28:04.190
flexible that you can adapt yourself to
 

00:28:04.190 --> 00:28:16.170
flexible that you can adapt yourself to
it we also didn't really believe that

00:28:16.170 --> 00:28:16.180
 

00:28:16.180 --> 00:28:18.660
like every what right now this in stereo

00:28:18.660 --> 00:28:18.670
like every what right now this in stereo
 

00:28:18.670 --> 00:28:22.520
like every what right now this in stereo
then we would be at 20:20 fps maybe

00:28:22.520 --> 00:28:22.530
then we would be at 20:20 fps maybe
 

00:28:22.530 --> 00:28:28.190
then we would be at 20:20 fps maybe
which was way way below what is

00:28:28.190 --> 00:28:28.200
which was way way below what is
 

00:28:28.200 --> 00:28:30.690
which was way way below what is
supported by by a person an AVR device

00:28:30.690 --> 00:28:30.700
supported by by a person an AVR device
 

00:28:30.700 --> 00:28:33.510
supported by by a person an AVR device
but if we didn't really expect that that

00:28:33.510 --> 00:28:33.520
but if we didn't really expect that that
 

00:28:33.520 --> 00:28:38.160
but if we didn't really expect that that
happen but basically if we have GPU that

00:28:38.160 --> 00:28:38.170
happen but basically if we have GPU that
 

00:28:38.170 --> 00:28:43.500
happen but basically if we have GPU that
is twice as powerful as t8 84 moly then

00:28:43.500 --> 00:28:43.510
is twice as powerful as t8 84 moly then
 

00:28:43.510 --> 00:28:45.780
is twice as powerful as t8 84 moly then
we actually might get into the direction

00:28:45.780 --> 00:28:45.790
we actually might get into the direction
 

00:28:45.790 --> 00:28:51.030
we actually might get into the direction
of having something like this in VR on a

00:28:51.030 --> 00:28:51.040
of having something like this in VR on a
 

00:28:51.040 --> 00:28:55.980
of having something like this in VR on a
mobile device we were very happy that in

00:28:55.980 --> 00:28:55.990
mobile device we were very happy that in
 

00:28:55.990 --> 00:28:59.880
mobile device we were very happy that in
principle it was possible to run fully

00:28:59.880 --> 00:28:59.890
principle it was possible to run fully
 

00:28:59.890 --> 00:29:04.080
principle it was possible to run fully
fully physically based shading pipeline

00:29:04.080 --> 00:29:04.090
fully physically based shading pipeline
 

00:29:04.090 --> 00:29:08.250
fully physically based shading pipeline
on a mobile device with actually higher

00:29:08.250 --> 00:29:08.260
on a mobile device with actually higher
 

00:29:08.260 --> 00:29:12.590
on a mobile device with actually higher
deferred rendering and forward plus and

00:29:12.590 --> 00:29:12.600
deferred rendering and forward plus and
 

00:29:12.600 --> 00:29:16.170
deferred rendering and forward plus and
while I didn't observe any compute Q and

00:29:16.170 --> 00:29:16.180
while I didn't observe any compute Q and
 

00:29:16.180 --> 00:29:18.840
while I didn't observe any compute Q and
working on any of these test devices I'm

00:29:18.840 --> 00:29:18.850
working on any of these test devices I'm
 

00:29:18.850 --> 00:29:23.520
working on any of these test devices I'm
pretty sure that the modern mobile

00:29:23.520 --> 00:29:23.530
pretty sure that the modern mobile
 

00:29:23.530 --> 00:29:26.010
pretty sure that the modern mobile
devices are coming up with a complete

00:29:26.010 --> 00:29:26.020
devices are coming up with a complete
 

00:29:26.020 --> 00:29:30.630
devices are coming up with a complete
queue earlier than later

00:29:30.630 --> 00:29:30.640
queue earlier than later
 

00:29:30.640 --> 00:29:34.850
queue earlier than later
working is very well positioned because

00:29:34.850 --> 00:29:34.860
working is very well positioned because
 

00:29:34.860 --> 00:29:40.140
working is very well positioned because
the CPU overhead is very low you have a

00:29:40.140 --> 00:29:40.150
the CPU overhead is very low you have a
 

00:29:40.150 --> 00:29:42.630
the CPU overhead is very low you have a
lot possibility to control your GPU

00:29:42.630 --> 00:29:42.640
lot possibility to control your GPU
 

00:29:42.640 --> 00:29:45.300
lot possibility to control your GPU
performance you can submit stuff in

00:29:45.300 --> 00:29:45.310
performance you can submit stuff in
 

00:29:45.310 --> 00:29:49.200
performance you can submit stuff in
different ways that's contrary to OpenGL

00:29:49.200 --> 00:29:49.210
different ways that's contrary to OpenGL
 

00:29:49.210 --> 00:29:55.550
different ways that's contrary to OpenGL
which has very large black box it's

00:29:55.550 --> 00:29:55.560
which has very large black box it's
 

00:29:55.560 --> 00:29:59.070
which has very large black box it's
difficult to optimize for it because I

00:29:59.070 --> 00:29:59.080
difficult to optimize for it because I
 

00:29:59.080 --> 00:30:01.740
difficult to optimize for it because I
mean the driver can make something and

00:30:01.740 --> 00:30:01.750
mean the driver can make something and
 

00:30:01.750 --> 00:30:03.210
mean the driver can make something and
then you don't know about it and

00:30:03.210 --> 00:30:03.220
then you don't know about it and
 

00:30:03.220 --> 00:30:07.080
then you don't know about it and
everything it did was wasn't wayne why

00:30:07.080 --> 00:30:07.090
everything it did was wasn't wayne why
 

00:30:07.090 --> 00:30:09.510
everything it did was wasn't wayne why
for working everything is relative way

00:30:09.510 --> 00:30:09.520
for working everything is relative way
 

00:30:09.520 --> 00:30:14.310
for working everything is relative way
defined the conclusion for working on

00:30:14.310 --> 00:30:14.320
defined the conclusion for working on
 

00:30:14.320 --> 00:30:18.670
defined the conclusion for working on
Android

00:30:18.670 --> 00:30:18.680
 

00:30:18.680 --> 00:30:23.470
already announced a few of those the

00:30:23.470 --> 00:30:23.480
already announced a few of those the
 

00:30:23.480 --> 00:30:27.040
already announced a few of those the
good part is that in working you can do

00:30:27.040 --> 00:30:27.050
good part is that in working you can do
 

00:30:27.050 --> 00:30:28.720
good part is that in working you can do
multi-threaded rendering now entire

00:30:28.720 --> 00:30:28.730
multi-threaded rendering now entire
 

00:30:28.730 --> 00:30:34.890
multi-threaded rendering now entire
renderer is actually submitting the big

00:30:34.890 --> 00:30:34.900
renderer is actually submitting the big
 

00:30:34.900 --> 00:30:40.020
renderer is actually submitting the big
scene graphs in a multi-threaded way

00:30:40.020 --> 00:30:40.030
 

00:30:40.030 --> 00:30:43.870
this is very very difficult in OpenGL

00:30:43.870 --> 00:30:43.880
this is very very difficult in OpenGL
 

00:30:43.880 --> 00:30:48.030
this is very very difficult in OpenGL
you can open concurrent contexts but I

00:30:48.030 --> 00:30:48.040
you can open concurrent contexts but I
 

00:30:48.040 --> 00:30:51.720
you can open concurrent contexts but I
wouldn't I wouldn't suggest that it's

00:30:51.720 --> 00:30:51.730
wouldn't I wouldn't suggest that it's
 

00:30:51.730 --> 00:30:56.200
wouldn't I wouldn't suggest that it's
probably not rather what's very nice is

00:30:56.200 --> 00:30:56.210
probably not rather what's very nice is
 

00:30:56.210 --> 00:31:00.100
probably not rather what's very nice is
actually the renderer sub passes of

00:31:00.100 --> 00:31:00.110
actually the renderer sub passes of
 

00:31:00.110 --> 00:31:05.260
actually the renderer sub passes of
working which requires usually factoring

00:31:05.260 --> 00:31:05.270
working which requires usually factoring
 

00:31:05.270 --> 00:31:11.850
working which requires usually factoring
of your engine it basically means that

00:31:11.850 --> 00:31:11.860
 

00:31:11.860 --> 00:31:17.620
little tiles of your shader one one's

00:31:17.620 --> 00:31:17.630
little tiles of your shader one one's
 

00:31:17.630 --> 00:31:20.650
little tiles of your shader one one's
through the whole process let's say you

00:31:20.650 --> 00:31:20.660
through the whole process let's say you
 

00:31:20.660 --> 00:31:27.070
through the whole process let's say you
have ten passes so then this tyre has

00:31:27.070 --> 00:31:27.080
have ten passes so then this tyre has
 

00:31:27.080 --> 00:31:30.460
have ten passes so then this tyre has
run ten times and then another tile has

00:31:30.460 --> 00:31:30.470
run ten times and then another tile has
 

00:31:30.470 --> 00:31:34.240
run ten times and then another tile has
run ten times and so on so you're having

00:31:34.240 --> 00:31:34.250
run ten times and so on so you're having
 

00:31:34.250 --> 00:31:35.890
run ten times and so on so you're having
the possibility in the driver to

00:31:35.890 --> 00:31:35.900
the possibility in the driver to
 

00:31:35.900 --> 00:31:38.350
the possibility in the driver to
actually merge parts of that using

00:31:38.350 --> 00:31:38.360
actually merge parts of that using
 

00:31:38.360 --> 00:31:42.540
actually merge parts of that using
optimal memory i/o and stuff like that

00:31:42.540 --> 00:31:42.550
optimal memory i/o and stuff like that
 

00:31:42.550 --> 00:31:48.520
optimal memory i/o and stuff like that
but that requires making dedicated

00:31:48.520 --> 00:31:48.530
but that requires making dedicated
 

00:31:48.530 --> 00:31:54.940
but that requires making dedicated
changes in the architecture so at the

00:31:54.940 --> 00:31:54.950
changes in the architecture so at the
 

00:31:54.950 --> 00:31:58.060
changes in the architecture so at the
end I want to thank everyone who

00:31:58.060 --> 00:31:58.070
end I want to thank everyone who
 

00:31:58.070 --> 00:32:01.810
end I want to thank everyone who
participated Alex by myself

00:32:01.810 --> 00:32:01.820
participated Alex by myself
 

00:32:01.820 --> 00:32:06.220
participated Alex by myself
Te'o Matias Nicole and the other Nicol

00:32:06.220 --> 00:32:06.230
Te'o Matias Nicole and the other Nicol
 

00:32:06.230 --> 00:32:11.890
Te'o Matias Nicole and the other Nicol
and without the guys working on these

00:32:11.890 --> 00:32:11.900
and without the guys working on these
 

00:32:11.900 --> 00:32:14.320
and without the guys working on these
tools almost nothing of this would have

00:32:14.320 --> 00:32:14.330
tools almost nothing of this would have
 

00:32:14.330 --> 00:32:17.350
tools almost nothing of this would have
been possible HLS CC is an open-source

00:32:17.350 --> 00:32:17.360
been possible HLS CC is an open-source
 

00:32:17.360 --> 00:32:21.020
been possible HLS CC is an open-source
project

00:32:21.020 --> 00:32:21.030
 

00:32:21.030 --> 00:32:25.610
which we could manipulate give back

00:32:25.610 --> 00:32:25.620
which we could manipulate give back
 

00:32:25.620 --> 00:32:34.070
which we could manipulate give back
speed across yes I think from Kronos now

00:32:34.070 --> 00:32:34.080
 

00:32:34.080 --> 00:32:38.330
STL to done that stuff since years and

00:32:38.330 --> 00:32:38.340
STL to done that stuff since years and
 

00:32:38.340 --> 00:32:41.880
STL to done that stuff since years and
we have probably used a few more open

00:32:41.880 --> 00:32:41.890
we have probably used a few more open
 

00:32:41.890 --> 00:32:45.690
we have probably used a few more open
source to chains to make all this weird

00:32:45.690 --> 00:32:45.700
source to chains to make all this weird
 

00:32:45.700 --> 00:32:46.710
source to chains to make all this weird
stuff happen

00:32:46.710 --> 00:32:46.720
stuff happen
 

00:32:46.720 --> 00:32:48.570
stuff happen
well we don't have any official support

00:32:48.570 --> 00:32:48.580
well we don't have any official support
 

00:32:48.580 --> 00:32:53.280
well we don't have any official support
and special things to Liam and is on the

00:32:53.280 --> 00:32:53.290
and special things to Liam and is on the
 

00:32:53.290 --> 00:32:58.560
and special things to Liam and is on the
theory why actually they are working on

00:32:58.560 --> 00:32:58.570
theory why actually they are working on
 

00:32:58.570 --> 00:33:02.280
theory why actually they are working on
the DX e which is this new speed

00:33:02.280 --> 00:33:02.290
the DX e which is this new speed
 

00:33:02.290 --> 00:33:06.320
the DX e which is this new speed
back-end which removes all the

00:33:06.320 --> 00:33:06.330
back-end which removes all the
 

00:33:06.330 --> 00:33:14.700
back-end which removes all the
problematic things with shaders and try

00:33:14.700 --> 00:33:14.710
problematic things with shaders and try
 

00:33:14.710 --> 00:33:17.100
problematic things with shaders and try
attack us hiring so if you want to work

00:33:17.100 --> 00:33:17.110
attack us hiring so if you want to work
 

00:33:17.110 --> 00:33:26.270
attack us hiring so if you want to work
on mobile for for the CryEngine

00:33:26.270 --> 00:33:26.280
 

00:33:26.280 --> 00:33:40.710
questions is it looks to me that most of

00:33:40.710 --> 00:33:40.720
questions is it looks to me that most of
 

00:33:40.720 --> 00:33:43.200
questions is it looks to me that most of
some of your bandwidth problems could be

00:33:43.200 --> 00:33:43.210
some of your bandwidth problems could be
 

00:33:43.210 --> 00:33:46.740
some of your bandwidth problems could be
alleviated by most peeling the tile

00:33:46.740 --> 00:33:46.750
alleviated by most peeling the tile
 

00:33:46.750 --> 00:33:48.810
alleviated by most peeling the tile
after every pass when you mentioned that

00:33:48.810 --> 00:33:48.820
after every pass when you mentioned that
 

00:33:48.820 --> 00:33:51.270
after every pass when you mentioned that
that would require a react attack

00:33:51.270 --> 00:33:51.280
that would require a react attack
 

00:33:51.280 --> 00:33:54.630
that would require a react attack
shirring of the of the engine is that a

00:33:54.630 --> 00:33:54.640
shirring of the of the engine is that a
 

00:33:54.640 --> 00:33:58.260
shirring of the of the engine is that a
problem of resources in a sense that it

00:33:58.260 --> 00:33:58.270
problem of resources in a sense that it
 

00:33:58.270 --> 00:33:59.790
problem of resources in a sense that it
would take you a long time to react it

00:33:59.790 --> 00:33:59.800
would take you a long time to react it
 

00:33:59.800 --> 00:34:01.800
would take you a long time to react it
at the engine or is the problem of the

00:34:01.800 --> 00:34:01.810
at the engine or is the problem of the
 

00:34:01.810 --> 00:34:03.770
at the engine or is the problem of the
API that is not making your life easier

00:34:03.770 --> 00:34:03.780
API that is not making your life easier
 

00:34:03.780 --> 00:34:08.030
API that is not making your life easier
no the problem is that

00:34:08.030 --> 00:34:08.040
no the problem is that
 

00:34:08.040 --> 00:34:10.190
no the problem is that
the last missing piece and the CryEngine

00:34:10.190 --> 00:34:10.200
the last missing piece and the CryEngine
 

00:34:10.200 --> 00:34:14.090
the last missing piece and the CryEngine
is that we don't have a render graph the

00:34:14.090 --> 00:34:14.100
is that we don't have a render graph the
 

00:34:14.100 --> 00:34:19.280
is that we don't have a render graph the
big API makers evangelizing the idea

00:34:19.280 --> 00:34:19.290
big API makers evangelizing the idea
 

00:34:19.290 --> 00:34:26.570
big API makers evangelizing the idea
that you submit the whole frame work as

00:34:26.570 --> 00:34:26.580
that you submit the whole frame work as
 

00:34:26.580 --> 00:34:30.740
that you submit the whole frame work as
a render graph and if you generate the

00:34:30.740 --> 00:34:30.750
a render graph and if you generate the
 

00:34:30.750 --> 00:34:34.520
a render graph and if you generate the
render graph dynamically every frame

00:34:34.520 --> 00:34:34.530
render graph dynamically every frame
 

00:34:34.530 --> 00:34:36.139
render graph dynamically every frame
like you don't write the render graph

00:34:36.139 --> 00:34:36.149
like you don't write the render graph
 

00:34:36.149 --> 00:34:38.629
like you don't write the render graph
and code and you're CPP and it's static

00:34:38.629 --> 00:34:38.639
and code and you're CPP and it's static
 

00:34:38.639 --> 00:34:41.270
and code and you're CPP and it's static
if you have a manager that generates a

00:34:41.270 --> 00:34:41.280
if you have a manager that generates a
 

00:34:41.280 --> 00:34:43.639
if you have a manager that generates a
render graph every frame to schedule all

00:34:43.639 --> 00:34:43.649
render graph every frame to schedule all
 

00:34:43.649 --> 00:34:46.690
render graph every frame to schedule all
of this then you can actually generate

00:34:46.690 --> 00:34:46.700
of this then you can actually generate
 

00:34:46.700 --> 00:34:49.010
of this then you can actually generate
random sub passes for work on

00:34:49.010 --> 00:34:49.020
random sub passes for work on
 

00:34:49.020 --> 00:34:51.050
random sub passes for work on
automatically because you have to

00:34:51.050 --> 00:34:51.060
automatically because you have to
 

00:34:51.060 --> 00:34:55.700
automatically because you have to
specify okay this is an input which

00:34:55.700 --> 00:34:55.710
specify okay this is an input which
 

00:34:55.710 --> 00:34:58.190
specify okay this is an input which
state is this input is this clear

00:34:58.190 --> 00:34:58.200
state is this input is this clear
 

00:34:58.200 --> 00:35:02.600
state is this input is this clear
do I read from it is a read modify write

00:35:02.600 --> 00:35:02.610
do I read from it is a read modify write
 

00:35:02.610 --> 00:35:05.390
do I read from it is a read modify write
and so on saying you have to annotate a

00:35:05.390 --> 00:35:05.400
and so on saying you have to annotate a
 

00:35:05.400 --> 00:35:08.800
and so on saying you have to annotate a
lot of the struts that you use

00:35:08.800 --> 00:35:08.810
lot of the struts that you use
 

00:35:08.810 --> 00:35:14.660
lot of the struts that you use
generating so passes on working and it's

00:35:14.660 --> 00:35:14.670
generating so passes on working and it's
 

00:35:14.670 --> 00:35:16.790
generating so passes on working and it's
not recommendable to make this manually

00:35:16.790 --> 00:35:16.800
not recommendable to make this manually
 

00:35:16.800 --> 00:35:19.400
not recommendable to make this manually
so you have to have an automated system

00:35:19.400 --> 00:35:19.410
so you have to have an automated system
 

00:35:19.410 --> 00:35:25.130
so you have to have an automated system
to generate random graphs in in data in

00:35:25.130 --> 00:35:25.140
to generate random graphs in in data in
 

00:35:25.140 --> 00:35:28.000
to generate random graphs in in data in
memory and then it's the trivial thing

00:35:28.000 --> 00:35:28.010
memory and then it's the trivial thing
 

00:35:28.010 --> 00:35:37.880
memory and then it's the trivial thing
yes and then move on to the next title

00:35:37.880 --> 00:35:37.890
yes and then move on to the next title
 

00:35:37.890 --> 00:35:40.580
yes and then move on to the next title
yeah that's that's yeah that's even

00:35:40.580 --> 00:35:40.590
yeah that's that's yeah that's even
 

00:35:40.590 --> 00:35:45.020
yeah that's that's yeah that's even
independent in working you have the

00:35:45.020 --> 00:35:45.030
independent in working you have the
 

00:35:45.030 --> 00:35:49.610
independent in working you have the
possibility like what we saw in in this

00:35:49.610 --> 00:35:49.620
possibility like what we saw in in this
 

00:35:49.620 --> 00:35:52.730
possibility like what we saw in in this
capture tools you had the render targets

00:35:52.730 --> 00:35:52.740
capture tools you had the render targets
 

00:35:52.740 --> 00:35:54.080
capture tools you had the render targets
where you write to and you have the

00:35:54.080 --> 00:35:54.090
where you write to and you have the
 

00:35:54.090 --> 00:35:57.140
where you write to and you have the
depth sensor and if you express

00:35:57.140 --> 00:35:57.150
depth sensor and if you express
 

00:35:57.150 --> 00:36:00.710
depth sensor and if you express
something sub passes and workin' you're

00:36:00.710 --> 00:36:00.720
something sub passes and workin' you're
 

00:36:00.720 --> 00:36:04.910
something sub passes and workin' you're
basically describing a chain of shaders

00:36:04.910 --> 00:36:04.920
basically describing a chain of shaders
 

00:36:04.920 --> 00:36:07.130
basically describing a chain of shaders
how they interact with each other how

00:36:07.130 --> 00:36:07.140
how they interact with each other how
 

00:36:07.140 --> 00:36:12.320
how they interact with each other how
they feeling data from one shader pass

00:36:12.320 --> 00:36:12.330
they feeling data from one shader pass
 

00:36:12.330 --> 00:36:15.590
they feeling data from one shader pass
to a next shader facets similar to how

00:36:15.590 --> 00:36:15.600
to a next shader facets similar to how
 

00:36:15.600 --> 00:36:17.900
to a next shader facets similar to how
do we describe in the shader stages

00:36:17.900 --> 00:36:17.910
do we describe in the shader stages
 

00:36:17.910 --> 00:36:20.030
do we describe in the shader stages
between vertex shader and

00:36:20.030 --> 00:36:20.040
between vertex shader and
 

00:36:20.040 --> 00:36:21.650
between vertex shader and
shade and how they interacting with each

00:36:21.650 --> 00:36:21.660
shade and how they interacting with each
 

00:36:21.660 --> 00:36:25.430
shade and how they interacting with each
other in the data transportation way so

00:36:25.430 --> 00:36:25.440
other in the data transportation way so
 

00:36:25.440 --> 00:36:28.550
other in the data transportation way so
on working you have one step above that

00:36:28.550 --> 00:36:28.560
on working you have one step above that
 

00:36:28.560 --> 00:36:34.600
on working you have one step above that
so that you're basically putting entire

00:36:34.600 --> 00:36:34.610
 

00:36:34.610 --> 00:36:38.000
draw us into relation to subsequent

00:36:38.000 --> 00:36:38.010
draw us into relation to subsequent
 

00:36:38.010 --> 00:36:40.250
draw us into relation to subsequent
roles and that brings a lot of

00:36:40.250 --> 00:36:40.260
roles and that brings a lot of
 

00:36:40.260 --> 00:36:43.610
roles and that brings a lot of
performance can potentially bring a lot

00:36:43.610 --> 00:36:43.620
performance can potentially bring a lot
 

00:36:43.620 --> 00:36:46.250
performance can potentially bring a lot
of performance like we have the

00:36:46.250 --> 00:36:46.260
of performance like we have the
 

00:36:46.260 --> 00:36:49.100
of performance like we have the
imagination ships which actually ships

00:36:49.100 --> 00:36:49.110
imagination ships which actually ships
 

00:36:49.110 --> 00:36:53.300
imagination ships which actually ships
which have hardware support for for this

00:36:53.300 --> 00:36:53.310
which have hardware support for for this
 

00:36:53.310 --> 00:36:55.910
which have hardware support for for this
mechanism so it doesn't spill to memory

00:36:55.910 --> 00:36:55.920
mechanism so it doesn't spill to memory
 

00:36:55.920 --> 00:37:00.200
mechanism so it doesn't spill to memory
we have this problem that a p/e ddr4 is

00:37:00.200 --> 00:37:00.210
we have this problem that a p/e ddr4 is
 

00:37:00.210 --> 00:37:03.590
we have this problem that a p/e ddr4 is
very slow so the imagination ship has an

00:37:03.590 --> 00:37:03.600
very slow so the imagination ship has an
 

00:37:03.600 --> 00:37:07.250
very slow so the imagination ship has an
on-chip pasa where he spills the data

00:37:07.250 --> 00:37:07.260
on-chip pasa where he spills the data
 

00:37:07.260 --> 00:37:11.720
on-chip pasa where he spills the data
between the different sub passes not

00:37:11.720 --> 00:37:11.730
between the different sub passes not
 

00:37:11.730 --> 00:37:14.030
between the different sub passes not
into main memory he spills into a

00:37:14.030 --> 00:37:14.040
into main memory he spills into a
 

00:37:14.040 --> 00:37:16.570
into main memory he spills into a
special dedicated piece of hardware and

00:37:16.570 --> 00:37:16.580
special dedicated piece of hardware and
 

00:37:16.580 --> 00:37:20.510
special dedicated piece of hardware and
you can maybe get away with ten times

00:37:20.510 --> 00:37:20.520
you can maybe get away with ten times
 

00:37:20.520 --> 00:37:24.290
you can maybe get away with ten times
speed up by that as the bandwidth of

00:37:24.290 --> 00:37:24.300
speed up by that as the bandwidth of
 

00:37:24.300 --> 00:37:27.200
speed up by that as the bandwidth of
this internal area of the chip is just

00:37:27.200 --> 00:37:27.210
this internal area of the chip is just
 

00:37:27.210 --> 00:37:41.730
this internal area of the chip is just
ten times faster than ap ddr4

00:37:41.730 --> 00:37:41.740
 

00:37:41.740 --> 00:37:46.810
you mentioned texture formats did you

00:37:46.810 --> 00:37:46.820
you mentioned texture formats did you
 

00:37:46.820 --> 00:37:48.220
you mentioned texture formats did you
guys use etc' too

00:37:48.220 --> 00:37:48.230
guys use etc' too
 

00:37:48.230 --> 00:37:50.710
guys use etc' too
or did you find that not sufficient or I

00:37:50.710 --> 00:37:50.720
or did you find that not sufficient or I
 

00:37:50.720 --> 00:37:53.950
or did you find that not sufficient or I
mean inside is DC know for us it's not

00:37:53.950 --> 00:37:53.960
mean inside is DC know for us it's not
 

00:37:53.960 --> 00:37:55.960
mean inside is DC know for us it's not
sufficient we are almost using every

00:37:55.960 --> 00:37:55.970
sufficient we are almost using every
 

00:37:55.970 --> 00:38:01.090
sufficient we are almost using every
texture format Under the Sun I believe

00:38:01.090 --> 00:38:01.100
texture format Under the Sun I believe
 

00:38:01.100 --> 00:38:03.720
texture format Under the Sun I believe
it's the only one across all Android

00:38:03.720 --> 00:38:03.730
it's the only one across all Android
 

00:38:03.730 --> 00:38:11.500
it's the only one across all Android
yeah no there we had permutations of the

00:38:11.500 --> 00:38:11.510
yeah no there we had permutations of the
 

00:38:11.510 --> 00:38:14.740
yeah no there we had permutations of the
etc' - which provides one channel to

00:38:14.740 --> 00:38:14.750
etc' - which provides one channel to
 

00:38:14.750 --> 00:38:20.940
etc' - which provides one channel to
channel and addition a bit depth until

00:38:20.940 --> 00:38:20.950
channel and addition a bit depth until
 

00:38:20.950 --> 00:38:28.530
channel and addition a bit depth until
11 bit and and are you going to continue

00:38:28.530 --> 00:38:28.540
11 bit and and are you going to continue
 

00:38:28.540 --> 00:38:30.760
11 bit and and are you going to continue
with your experimentation are you gonna

00:38:30.760 --> 00:38:30.770
with your experimentation are you gonna
 

00:38:30.770 --> 00:38:33.550
with your experimentation are you gonna
wait for mobile to get a little bit

00:38:33.550 --> 00:38:33.560
wait for mobile to get a little bit
 

00:38:33.560 --> 00:38:42.970
wait for mobile to get a little bit
better maybe a defense on how fast of XR

00:38:42.970 --> 00:38:42.980
better maybe a defense on how fast of XR
 

00:38:42.980 --> 00:38:45.760
better maybe a defense on how fast of XR
is going to finalize there is an

00:38:45.760 --> 00:38:45.770
is going to finalize there is an
 

00:38:45.770 --> 00:38:49.900
is going to finalize there is an
initiative from Chronos called open XR

00:38:49.900 --> 00:38:49.910
initiative from Chronos called open XR
 

00:38:49.910 --> 00:38:55.750
initiative from Chronos called open XR
which encapsulate open a are open mr and

00:38:55.750 --> 00:38:55.760
which encapsulate open a are open mr and
 

00:38:55.760 --> 00:39:02.290
which encapsulate open a are open mr and
open vr where they wanna attach welcome

00:39:02.290 --> 00:39:02.300
open vr where they wanna attach welcome
 

00:39:02.300 --> 00:39:03.940
open vr where they wanna attach welcome
to and then we have a really our

00:39:03.940 --> 00:39:03.950
to and then we have a really our
 

00:39:03.950 --> 00:39:10.290
to and then we have a really our
interface and then we definitely back

00:39:10.290 --> 00:39:10.300
interface and then we definitely back
 

00:39:10.300 --> 00:39:12.580
interface and then we definitely back
experimenting I mean the problem for us

00:39:12.580 --> 00:39:12.590
experimenting I mean the problem for us
 

00:39:12.590 --> 00:39:17.410
experimenting I mean the problem for us
is it's the gap between the ps4 which is

00:39:17.410 --> 00:39:17.420
is it's the gap between the ps4 which is
 

00:39:17.420 --> 00:39:20.080
is it's the gap between the ps4 which is
our regular min spec and the next

00:39:20.080 --> 00:39:20.090
our regular min spec and the next
 

00:39:20.090 --> 00:39:26.610
our regular min spec and the next
movement anyways

00:39:26.610 --> 00:39:26.620
 

00:39:26.620 --> 00:39:30.510
it's great to see working on with our

00:39:30.510 --> 00:39:30.520
it's great to see working on with our
 

00:39:30.520 --> 00:39:32.160
it's great to see working on with our
open source teams on the shader compiler

00:39:32.160 --> 00:39:32.170
open source teams on the shader compiler
 

00:39:32.170 --> 00:39:34.800
open source teams on the shader compiler
stuff have on the validation errors you

00:39:34.800 --> 00:39:34.810
stuff have on the validation errors you
 

00:39:34.810 --> 00:39:38.070
stuff have on the validation errors you
were seeing with the device physical

00:39:38.070 --> 00:39:38.080
were seeing with the device physical
 

00:39:38.080 --> 00:39:40.380
were seeing with the device physical
limits have you submitted an issue to

00:39:40.380 --> 00:39:40.390
limits have you submitted an issue to
 

00:39:40.390 --> 00:39:42.210
limits have you submitted an issue to
the open source get a project for the

00:39:42.210 --> 00:39:42.220
the open source get a project for the
 

00:39:42.220 --> 00:39:46.200
the open source get a project for the
Vulcan validation layers mmm there's a

00:39:46.200 --> 00:39:46.210
Vulcan validation layers mmm there's a
 

00:39:46.210 --> 00:39:48.630
Vulcan validation layers mmm there's a
github project for Vulcan validation

00:39:48.630 --> 00:39:48.640
github project for Vulcan validation
 

00:39:48.640 --> 00:39:51.300
github project for Vulcan validation
layers alright and you were saying there

00:39:51.300 --> 00:39:51.310
layers alright and you were saying there
 

00:39:51.310 --> 00:39:54.210
layers alright and you were saying there
was what they were not catching issues

00:39:54.210 --> 00:39:54.220
was what they were not catching issues
 

00:39:54.220 --> 00:39:57.330
was what they were not catching issues
with physical limits yes have you

00:39:57.330 --> 00:39:57.340
with physical limits yes have you
 

00:39:57.340 --> 00:40:00.170
with physical limits yes have you
submitted a bug to that github project

00:40:00.170 --> 00:40:00.180
submitted a bug to that github project
 

00:40:00.180 --> 00:40:04.440
submitted a bug to that github project
no because the state of the andrina

00:40:04.440 --> 00:40:04.450
no because the state of the andrina
 

00:40:04.450 --> 00:40:12.000
no because the state of the andrina
driver was so shaky that way okay I

00:40:12.000 --> 00:40:12.010
driver was so shaky that way okay I
 

00:40:12.010 --> 00:40:13.650
driver was so shaky that way okay I
understand that the validation leader

00:40:13.650 --> 00:40:13.660
understand that the validation leader
 

00:40:13.660 --> 00:40:16.380
understand that the validation leader
there's a different part from the driver

00:40:16.380 --> 00:40:16.390
there's a different part from the driver
 

00:40:16.390 --> 00:40:20.340
there's a different part from the driver
but for us that is it's not transparent

00:40:20.340 --> 00:40:20.350
but for us that is it's not transparent
 

00:40:20.350 --> 00:40:22.440
but for us that is it's not transparent
if we if we fought the validation layer

00:40:22.440 --> 00:40:22.450
if we if we fought the validation layer
 

00:40:22.450 --> 00:40:27.780
if we if we fought the validation layer
before the driver but this is one year

00:40:27.780 --> 00:40:27.790
before the driver but this is one year
 

00:40:27.790 --> 00:40:30.150
before the driver but this is one year
ago right even on the PC the validation

00:40:30.150 --> 00:40:30.160
ago right even on the PC the validation
 

00:40:30.160 --> 00:40:33.690
ago right even on the PC the validation
layer was not firing for some stuff

00:40:33.690 --> 00:40:33.700
layer was not firing for some stuff
 

00:40:33.700 --> 00:40:37.620
layer was not firing for some stuff
which was obvious then half a year ago

00:40:37.620 --> 00:40:37.630
which was obvious then half a year ago
 

00:40:37.630 --> 00:40:39.330
which was obvious then half a year ago
there was a moment where the validation

00:40:39.330 --> 00:40:39.340
there was a moment where the validation
 

00:40:39.340 --> 00:40:42.960
there was a moment where the validation
died a fire too much and now we have a

00:40:42.960 --> 00:40:42.970
died a fire too much and now we have a
 

00:40:42.970 --> 00:40:44.580
died a fire too much and now we have a
moment where the validation day is

00:40:44.580 --> 00:40:44.590
moment where the validation day is
 

00:40:44.590 --> 00:40:46.110
moment where the validation day is
probably in a good place

00:40:46.110 --> 00:40:46.120
probably in a good place
 

00:40:46.120 --> 00:40:50.280
probably in a good place
okay thanks regarding the PC validation

00:40:50.280 --> 00:40:50.290
okay thanks regarding the PC validation
 

00:40:50.290 --> 00:40:53.100
okay thanks regarding the PC validation
layer problems I think we submitted a

00:40:53.100 --> 00:40:53.110
layer problems I think we submitted a
 

00:40:53.110 --> 00:40:55.670
layer problems I think we submitted a
proposal they should be unified so

00:40:55.670 --> 00:40:55.680
proposal they should be unified so
 

00:40:55.680 --> 00:40:57.870
proposal they should be unified so
whatever you're seeing on PC should work

00:40:57.870 --> 00:40:57.880
whatever you're seeing on PC should work
 

00:40:57.880 --> 00:41:00.450
whatever you're seeing on PC should work
on Android as well

