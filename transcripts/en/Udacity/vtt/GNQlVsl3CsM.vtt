WEBVTT
Kind: captions
Language: en

00:00:00.330 --> 00:00:02.900
So, with any row of five, at the end

00:00:02.900 --> 00:00:06.810
of round two, every processor has heard from every

00:00:06.810 --> 00:00:09.730
other processor in the entire system. Right? So you

00:00:09.730 --> 00:00:12.670
can eyeball this figure and see that every processor

00:00:12.670 --> 00:00:15.610
has gotten the message from every other processor, and

00:00:15.610 --> 00:00:18.520
so it's common knowledge that for every processor that

00:00:18.520 --> 00:00:22.440
every one else has also arrived. Add the barrier.

00:00:22.440 --> 00:00:25.480
So, how many rounds does it take to know that

00:00:25.480 --> 00:00:28.700
everybody has arrived at the barrier? Well its ceiling

00:00:28.700 --> 00:00:30.940
of log N to the base two. You add the

00:00:30.940 --> 00:00:34.220
ceiling because it's N need not be a part of

00:00:34.220 --> 00:00:38.220
two. So at this point, everybody is awake. So, barrier

00:00:38.220 --> 00:00:41.720
completion here there is no distinction between arrival and

00:00:41.720 --> 00:00:44.750
wake up as you, as you saw. In the case

00:00:44.750 --> 00:00:47.200
of the tree barrier or the MCS barrier or the

00:00:47.200 --> 00:00:51.030
tournament barrier. In the dissemination barrier, because it is happening

00:00:51.030 --> 00:00:57.170
by information diffusion, at the end of a ceiling of log n rounds, everybody

00:00:57.170 --> 00:00:59.240
has heard from everyone else in the

00:00:59.240 --> 00:01:02.020
entire system So everyone knows that that barrier

00:01:02.020 --> 00:01:04.459
has been breached. So in other words,

00:01:04.459 --> 00:01:07.830
in every zone of communication in the dissemination

00:01:07.830 --> 00:01:11.590
barrier, every processor, you eyeball any particular

00:01:11.590 --> 00:01:15.510
processor. Every processor is receiving exactly one message,

00:01:16.560 --> 00:01:19.920
exactly one message in every round of the

00:01:19.920 --> 00:01:25.570
dissemination barrier. So overall During the entire dissemination barrier

00:01:25.570 --> 00:01:30.070
information diffusion that's going on, every processor is receiving

00:01:30.070 --> 00:01:31.970
a total of a ceiling of log n to

00:01:31.970 --> 00:01:35.410
the base two messages. Every round one message,

00:01:35.410 --> 00:01:38.300
and so they are ceiling of log n rounds

00:01:38.300 --> 00:01:41.740
and so a ceiling of log n to the base two is a number of messages that any

00:01:41.740 --> 00:01:46.160
given processor is receiving and once. Every processor

00:01:46.160 --> 00:01:49.620
has received this ceil N log to the base

00:01:49.620 --> 00:01:51.490
2 number of messages. It knows that the

00:01:51.490 --> 00:01:54.480
barrier is complete. It can move on. And I've

00:01:54.480 --> 00:01:57.740
been using the word message in describing this

00:01:57.740 --> 00:02:00.740
dissemination barrier. It's convenient to do, to use that

00:02:00.740 --> 00:02:04.340
word because it is information diffusion but if you

00:02:04.340 --> 00:02:06.820
think about a shared memory machine, a message is

00:02:06.820 --> 00:02:11.370
basically a spin locatoin. And, once again because

00:02:11.370 --> 00:02:14.780
I know an ordained processor is going to

00:02:14.780 --> 00:02:17.050
talk to me in every round, the spin

00:02:17.050 --> 00:02:19.670
location for this guy is statically determined. Spin

00:02:19.670 --> 00:02:22.500
location, statically determined, and so on. So every

00:02:22.500 --> 00:02:25.560
round of the tournament, we can statically determine

00:02:25.560 --> 00:02:28.720
the spin location that a particular processor has

00:02:28.720 --> 00:02:32.910
to wait on, in order to receive a message.

00:02:32.910 --> 00:02:35.380
Which is really a signal from its ordained

00:02:35.380 --> 00:02:39.020
peer, for that particular round of the dissemination

00:02:39.020 --> 00:02:42.680
barrier. So, again static determination of spin location

00:02:42.680 --> 00:02:46.170
becomes extremely important if the multiprocessor happens to be

00:02:46.170 --> 00:02:52.930
an NCC NUMA machine. In that case, what you want to do is to locate the

00:02:52.930 --> 00:02:55.660
spin location. In the memory that is closest

00:02:55.660 --> 00:02:59.040
to the particular processor. So that becomes more efficient.

00:02:59.040 --> 00:03:02.160
And as always, in every one of these barried algorithms, you

00:03:02.160 --> 00:03:05.910
have to do sense reversal. That once this barrier is complete,

00:03:05.910 --> 00:03:08.115
everybody is going on to, to the next phase of the

00:03:08.115 --> 00:03:11.210
competition. And when they go to the next phase of the competition.

00:03:11.210 --> 00:03:13.560
They have to make sure that the barrier that they arrive

00:03:13.560 --> 00:03:16.950
is the next barrier. So you need sense reversal then, it needs

00:03:16.950 --> 00:03:20.430
to happen at the end of. Everybody algorithm. So now let's

00:03:20.430 --> 00:03:24.390
talk about some of the virtues of the dissemination barrier. The first

00:03:24.390 --> 00:03:26.390
thing that you'll notice is in the structure, there

00:03:26.390 --> 00:03:30.230
is no hierarchy. In the tree algorithms, the root

00:03:30.230 --> 00:03:32.750
of the tree automatically gives you a hierarchy in

00:03:32.750 --> 00:03:36.520
terms of The organization of the tree in the

00:03:36.520 --> 00:03:38.960
dissemination barrier, there's no such thing. And I already

00:03:38.960 --> 00:03:43.570
mentioned that this algorithm works for both NCC NUMA

00:03:43.570 --> 00:03:47.010
machine, as well as clusters. That's also a good

00:03:47.010 --> 00:03:49.380
thing. And there is no waiting on anybody else.

00:03:49.380 --> 00:03:52.870
So every processor is independently making a decision to send

00:03:52.870 --> 00:03:54.990
a message. As soon as it arrives at the barrier.

00:03:54.990 --> 00:03:57.500
Is ready to send a message to its peer for

00:03:57.500 --> 00:04:00.840
that particular round. And of course, every processor can move to

00:04:00.840 --> 00:04:04.770
the next round only after it has received a corresponding

00:04:04.770 --> 00:04:07.770
message from its peer for this particular round. So as

00:04:07.770 --> 00:04:09.950
soon as that happens, it can move on to the

00:04:09.950 --> 00:04:14.630
next round of the dissemination barrier. And all the processes will

00:04:14.630 --> 00:04:17.380
realize that the barrier is complete when they

00:04:17.380 --> 00:04:21.290
received Ceil (Log N) messages in the entire

00:04:21.290 --> 00:04:23.550
structure of this organism. So if you think

00:04:23.550 --> 00:04:25.400
about the total amount of communication, because the

00:04:25.400 --> 00:04:27.900
communication in every round is fixed, it's N

00:04:27.900 --> 00:04:30.720
messages in every round and since there are

00:04:30.720 --> 00:04:35.400
Ceil (Log N) rounds, the communication complexity. Of

00:04:35.400 --> 00:04:39.747
this algorithm is order and log in. Compare that

00:04:39.747 --> 00:04:43.836
to the communication complexity of the tournament, or

00:04:43.836 --> 00:04:47.670
the the Tree barrier. In both of those cases,

00:04:47.670 --> 00:04:51.680
the communication complexity was only log in, because of

00:04:51.680 --> 00:04:53.930
the hierarchy, as you go toward the root of

00:04:53.930 --> 00:04:56.710
the tree, the amount of communication shrinks, so. The

00:04:56.710 --> 00:04:59.110
amount of communication in those algorithms is only order

00:04:59.110 --> 00:05:01.790
of log N. Where as, in this, this simulation

00:05:01.790 --> 00:05:05.020
down here, since there is no hierarchy, the total

00:05:05.020 --> 00:05:09.310
amount of communication in the, algorathim is order of analog N.

