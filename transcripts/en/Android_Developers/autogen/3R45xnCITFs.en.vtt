WEBVTT
Kind: captions
Language: en

00:00:03.649 --> 00:00:06.349
good morning and welcome to Android for

00:00:06.349 --> 00:00:06.359
good morning and welcome to Android for
 

00:00:06.359 --> 00:00:10.550
good morning and welcome to Android for
Java developers this talk is a wrap

00:00:10.550 --> 00:00:10.560
Java developers this talk is a wrap
 

00:00:10.560 --> 00:00:13.370
Java developers this talk is a wrap
around a series of very long articles

00:00:13.370 --> 00:00:13.380
around a series of very long articles
 

00:00:13.380 --> 00:00:14.570
around a series of very long articles
that I hope everyone will read

00:00:14.570 --> 00:00:14.580
that I hope everyone will read
 

00:00:14.580 --> 00:00:16.700
that I hope everyone will read
eventually called developing for Android

00:00:16.700 --> 00:00:16.710
eventually called developing for Android
 

00:00:16.710 --> 00:00:18.529
eventually called developing for Android
so if you go to medium.com and search

00:00:18.529 --> 00:00:18.539
so if you go to medium.com and search
 

00:00:18.539 --> 00:00:20.450
so if you go to medium.com and search
for that phrase or if you just go to the

00:00:20.450 --> 00:00:20.460
for that phrase or if you just go to the
 

00:00:20.460 --> 00:00:21.770
for that phrase or if you just go to the
internet and search for that phrase

00:00:21.770 --> 00:00:21.780
internet and search for that phrase
 

00:00:21.780 --> 00:00:24.320
internet and search for that phrase
you'll wind up on the series of 10

00:00:24.320 --> 00:00:24.330
you'll wind up on the series of 10
 

00:00:24.330 --> 00:00:27.500
you'll wind up on the series of 10
articles these came out of an incredibly

00:00:27.500 --> 00:00:27.510
articles these came out of an incredibly
 

00:00:27.510 --> 00:00:30.140
articles these came out of an incredibly
long dock that we wrote internally at

00:00:30.140 --> 00:00:30.150
long dock that we wrote internally at
 

00:00:30.150 --> 00:00:33.229
long dock that we wrote internally at
Google when we were faced with a bunch

00:00:33.229 --> 00:00:33.239
Google when we were faced with a bunch
 

00:00:33.239 --> 00:00:35.180
Google when we were faced with a bunch
of app developers we would meet with on

00:00:35.180 --> 00:00:35.190
of app developers we would meet with on
 

00:00:35.190 --> 00:00:37.520
of app developers we would meet with on
a regular basis and someone said so

00:00:37.520 --> 00:00:37.530
a regular basis and someone said so
 

00:00:37.530 --> 00:00:39.020
a regular basis and someone said so
every time we talked to the framework

00:00:39.020 --> 00:00:39.030
every time we talked to the framework
 

00:00:39.030 --> 00:00:40.759
every time we talked to the framework
team and we say we're doing this thing

00:00:40.759 --> 00:00:40.769
team and we say we're doing this thing
 

00:00:40.769 --> 00:00:42.139
team and we say we're doing this thing
and then the framework team says no no

00:00:42.139 --> 00:00:42.149
and then the framework team says no no
 

00:00:42.149 --> 00:00:44.180
and then the framework team says no no
no don't do it that way do it this other

00:00:44.180 --> 00:00:44.190
no don't do it that way do it this other
 

00:00:44.190 --> 00:00:46.009
no don't do it that way do it this other
way instead and then they'd go away and

00:00:46.009 --> 00:00:46.019
way instead and then they'd go away and
 

00:00:46.019 --> 00:00:47.090
way instead and then they'd go away and
they do that and they come back with

00:00:47.090 --> 00:00:47.100
they do that and they come back with
 

00:00:47.100 --> 00:00:49.189
they do that and they come back with
another question and we would say no no

00:00:49.189 --> 00:00:49.199
another question and we would say no no
 

00:00:49.199 --> 00:00:50.569
another question and we would say no no
that you shouldn't do that what you

00:00:50.569 --> 00:00:50.579
that you shouldn't do that what you
 

00:00:50.579 --> 00:00:51.799
that you shouldn't do that what you
should actually do is this other thing

00:00:51.799 --> 00:00:51.809
should actually do is this other thing
 

00:00:51.809 --> 00:00:54.169
should actually do is this other thing
instead and they said ok so where do we

00:00:54.169 --> 00:00:54.179
instead and they said ok so where do we
 

00:00:54.179 --> 00:00:55.669
instead and they said ok so where do we
go for the information that sort of

00:00:55.669 --> 00:00:55.679
go for the information that sort of
 

00:00:55.679 --> 00:00:57.229
go for the information that sort of
collects all these tips and tricks and

00:00:57.229 --> 00:00:57.239
collects all these tips and tricks and
 

00:00:57.239 --> 00:00:59.539
collects all these tips and tricks and
techniques so that we can stop getting

00:00:59.539 --> 00:00:59.549
techniques so that we can stop getting
 

00:00:59.549 --> 00:01:01.609
techniques so that we can stop getting
slapped by the platform team for the way

00:01:01.609 --> 00:01:01.619
slapped by the platform team for the way
 

00:01:01.619 --> 00:01:03.709
slapped by the platform team for the way
that we're approaching this stuff so

00:01:03.709 --> 00:01:03.719
that we're approaching this stuff so
 

00:01:03.719 --> 00:01:05.540
that we're approaching this stuff so
that was the genesis of the article we

00:01:05.540 --> 00:01:05.550
that was the genesis of the article we
 

00:01:05.550 --> 00:01:07.460
that was the genesis of the article we
decided to actually take a step back and

00:01:07.460 --> 00:01:07.470
decided to actually take a step back and
 

00:01:07.470 --> 00:01:08.960
decided to actually take a step back and
say ok what are all the things that we

00:01:08.960 --> 00:01:08.970
say ok what are all the things that we
 

00:01:08.970 --> 00:01:12.230
say ok what are all the things that we
think are obvious but typical Java

00:01:12.230 --> 00:01:12.240
think are obvious but typical Java
 

00:01:12.240 --> 00:01:14.660
think are obvious but typical Java
developers do not and the problem is

00:01:14.660 --> 00:01:14.670
developers do not and the problem is
 

00:01:14.670 --> 00:01:16.970
developers do not and the problem is
that a lot of developers most developers

00:01:16.970 --> 00:01:16.980
that a lot of developers most developers
 

00:01:16.980 --> 00:01:20.030
that a lot of developers most developers
writing Java code at Google come from

00:01:20.030 --> 00:01:20.040
writing Java code at Google come from
 

00:01:20.040 --> 00:01:21.620
writing Java code at Google come from
the server world or even you know the

00:01:21.620 --> 00:01:21.630
the server world or even you know the
 

00:01:21.630 --> 00:01:23.570
the server world or even you know the
desktop world sort of traditional Java

00:01:23.570 --> 00:01:23.580
desktop world sort of traditional Java
 

00:01:23.580 --> 00:01:25.760
desktop world sort of traditional Java
platform and then they say ok well this

00:01:25.760 --> 00:01:25.770
platform and then they say ok well this
 

00:01:25.770 --> 00:01:27.440
platform and then they say ok well this
is the same language so I'll carry over

00:01:27.440 --> 00:01:27.450
is the same language so I'll carry over
 

00:01:27.450 --> 00:01:29.330
is the same language so I'll carry over
all my patterns and practices from that

00:01:29.330 --> 00:01:29.340
all my patterns and practices from that
 

00:01:29.340 --> 00:01:32.090
all my patterns and practices from that
other world into this little tiny mobile

00:01:32.090 --> 00:01:32.100
other world into this little tiny mobile
 

00:01:32.100 --> 00:01:35.440
other world into this little tiny mobile
device with a constrained CPU GPU memory

00:01:35.440 --> 00:01:35.450
device with a constrained CPU GPU memory
 

00:01:35.450 --> 00:01:39.230
device with a constrained CPU GPU memory
limited memory a limited bandwidth like

00:01:39.230 --> 00:01:39.240
limited memory a limited bandwidth like
 

00:01:39.240 --> 00:01:40.700
limited memory a limited bandwidth like
very very different programming

00:01:40.700 --> 00:01:40.710
very very different programming
 

00:01:40.710 --> 00:01:42.170
very very different programming
environment really the only thing that

00:01:42.170 --> 00:01:42.180
environment really the only thing that
 

00:01:42.180 --> 00:01:44.240
environment really the only thing that
is the same is the programming language

00:01:44.240 --> 00:01:44.250
is the same is the programming language
 

00:01:44.250 --> 00:01:47.480
is the same is the programming language
itself so the way that you use that

00:01:47.480 --> 00:01:47.490
itself so the way that you use that
 

00:01:47.490 --> 00:01:49.880
itself so the way that you use that
programming language is very important

00:01:49.880 --> 00:01:49.890
programming language is very important
 

00:01:49.890 --> 00:01:52.220
programming language is very important
in terms of the performance and the

00:01:52.220 --> 00:01:52.230
in terms of the performance and the
 

00:01:52.230 --> 00:01:53.510
in terms of the performance and the
experience you're going to get in the

00:01:53.510 --> 00:01:53.520
experience you're going to get in the
 

00:01:53.520 --> 00:01:55.760
experience you're going to get in the
end result of your application so we

00:01:55.760 --> 00:01:55.770
end result of your application so we
 

00:01:55.770 --> 00:01:57.500
end result of your application so we
wrote this huge article we put it out

00:01:57.500 --> 00:01:57.510
wrote this huge article we put it out
 

00:01:57.510 --> 00:01:59.990
wrote this huge article we put it out
internally and then for the short

00:01:59.990 --> 00:02:00.000
internally and then for the short
 

00:02:00.000 --> 00:02:01.730
internally and then for the short
attention span public we broke it into

00:02:01.730 --> 00:02:01.740
attention span public we broke it into
 

00:02:01.740 --> 00:02:04.790
attention span public we broke it into
ten still very long articles on medium

00:02:04.790 --> 00:02:04.800
ten still very long articles on medium
 

00:02:04.800 --> 00:02:06.500
ten still very long articles on medium
so please check those out in the

00:02:06.500 --> 00:02:06.510
so please check those out in the
 

00:02:06.510 --> 00:02:08.149
so please check those out in the
meantime I wanted to walk through some

00:02:08.149 --> 00:02:08.159
meantime I wanted to walk through some
 

00:02:08.159 --> 00:02:10.339
meantime I wanted to walk through some
of those today if if I tried to go

00:02:10.339 --> 00:02:10.349
of those today if if I tried to go
 

00:02:10.349 --> 00:02:12.229
of those today if if I tried to go
through everything this would be about a

00:02:12.229 --> 00:02:12.239
through everything this would be about a
 

00:02:12.239 --> 00:02:13.700
through everything this would be about a
three hour talk we tried

00:02:13.700 --> 00:02:13.710
three hour talk we tried
 

00:02:13.710 --> 00:02:16.790
three hour talk we tried
once we gave a talk at a user group in

00:02:16.790 --> 00:02:16.800
once we gave a talk at a user group in
 

00:02:16.800 --> 00:02:19.190
once we gave a talk at a user group in
the Bay Area and we put together this a

00:02:19.190 --> 00:02:19.200
the Bay Area and we put together this a
 

00:02:19.200 --> 00:02:21.410
the Bay Area and we put together this a
version of this talk and we made it

00:02:21.410 --> 00:02:21.420
version of this talk and we made it
 

00:02:21.420 --> 00:02:23.420
version of this talk and we made it
about a quarter of the way through in an

00:02:23.420 --> 00:02:23.430
about a quarter of the way through in an
 

00:02:23.430 --> 00:02:25.040
about a quarter of the way through in an
hour and 20 minutes so yeah actually

00:02:25.040 --> 00:02:25.050
hour and 20 minutes so yeah actually
 

00:02:25.050 --> 00:02:26.810
hour and 20 minutes so yeah actually
three hours is an underestimate as well

00:02:26.810 --> 00:02:26.820
three hours is an underestimate as well
 

00:02:26.820 --> 00:02:28.940
three hours is an underestimate as well
because each of the topics like their

00:02:28.940 --> 00:02:28.950
because each of the topics like their
 

00:02:28.950 --> 00:02:30.140
because each of the topics like their
little tiny bullets but they're kind of

00:02:30.140 --> 00:02:30.150
little tiny bullets but they're kind of
 

00:02:30.150 --> 00:02:32.120
little tiny bullets but they're kind of
deep crevices that you can go on at

00:02:32.120 --> 00:02:32.130
deep crevices that you can go on at
 

00:02:32.130 --> 00:02:34.160
deep crevices that you can go on at
length about so I thought instead today

00:02:34.160 --> 00:02:34.170
length about so I thought instead today
 

00:02:34.170 --> 00:02:36.560
length about so I thought instead today
instead of trying and failing to cover

00:02:36.560 --> 00:02:36.570
instead of trying and failing to cover
 

00:02:36.570 --> 00:02:38.660
instead of trying and failing to cover
everything that those articles cover I

00:02:38.660 --> 00:02:38.670
everything that those articles cover I
 

00:02:38.670 --> 00:02:40.460
everything that those articles cover I
wanted to talk about the memory

00:02:40.460 --> 00:02:40.470
wanted to talk about the memory
 

00:02:40.470 --> 00:02:41.840
wanted to talk about the memory
situation because a lot of the

00:02:41.840 --> 00:02:41.850
situation because a lot of the
 

00:02:41.850 --> 00:02:43.730
situation because a lot of the
performance concerns and a lot of the

00:02:43.730 --> 00:02:43.740
performance concerns and a lot of the
 

00:02:43.740 --> 00:02:46.730
performance concerns and a lot of the
problems that people hit are in the

00:02:46.730 --> 00:02:46.740
problems that people hit are in the
 

00:02:46.740 --> 00:02:48.860
problems that people hit are in the
specific area of memory that's really

00:02:48.860 --> 00:02:48.870
specific area of memory that's really
 

00:02:48.870 --> 00:02:50.900
specific area of memory that's really
where a lot of the performance problems

00:02:50.900 --> 00:02:50.910
where a lot of the performance problems
 

00:02:50.910 --> 00:02:53.000
where a lot of the performance problems
and bottlenecks come from partly because

00:02:53.000 --> 00:02:53.010
and bottlenecks come from partly because
 

00:02:53.010 --> 00:02:54.800
and bottlenecks come from partly because
the runtime and the garbage collector

00:02:54.800 --> 00:02:54.810
the runtime and the garbage collector
 

00:02:54.810 --> 00:02:56.450
the runtime and the garbage collector
are vastly different than what you might

00:02:56.450 --> 00:02:56.460
are vastly different than what you might
 

00:02:56.460 --> 00:02:59.060
are vastly different than what you might
expect so I wanted to start out first by

00:02:59.060 --> 00:02:59.070
expect so I wanted to start out first by
 

00:02:59.070 --> 00:03:00.950
expect so I wanted to start out first by
talking a little bit about how garbage

00:03:00.950 --> 00:03:00.960
talking a little bit about how garbage
 

00:03:00.960 --> 00:03:02.660
talking a little bit about how garbage
collection now occasion actually works

00:03:02.660 --> 00:03:02.670
collection now occasion actually works
 

00:03:02.670 --> 00:03:05.210
collection now occasion actually works
on Android and then we'll talk about

00:03:05.210 --> 00:03:05.220
on Android and then we'll talk about
 

00:03:05.220 --> 00:03:06.680
on Android and then we'll talk about
some of the tips and tricks about memory

00:03:06.680 --> 00:03:06.690
some of the tips and tricks about memory
 

00:03:06.690 --> 00:03:08.330
some of the tips and tricks about memory
in particular and then maybe we'll talk

00:03:08.330 --> 00:03:08.340
in particular and then maybe we'll talk
 

00:03:08.340 --> 00:03:09.740
in particular and then maybe we'll talk
about some other stuff as well we'll see

00:03:09.740 --> 00:03:09.750
about some other stuff as well we'll see
 

00:03:09.750 --> 00:03:12.380
about some other stuff as well we'll see
how far we get so first of all I want to

00:03:12.380 --> 00:03:12.390
how far we get so first of all I want to
 

00:03:12.390 --> 00:03:13.970
how far we get so first of all I want to
mention that's one of the important

00:03:13.970 --> 00:03:13.980
mention that's one of the important
 

00:03:13.980 --> 00:03:17.710
mention that's one of the important
things that we see in terms of device

00:03:17.710 --> 00:03:17.720
things that we see in terms of device
 

00:03:17.720 --> 00:03:21.190
things that we see in terms of device
usefulness or application niceness is

00:03:21.190 --> 00:03:21.200
usefulness or application niceness is
 

00:03:21.200 --> 00:03:24.050
usefulness or application niceness is
what we call the tragedy of Commons and

00:03:24.050 --> 00:03:24.060
what we call the tragedy of Commons and
 

00:03:24.060 --> 00:03:26.270
what we call the tragedy of Commons and
this is an effect where every

00:03:26.270 --> 00:03:26.280
this is an effect where every
 

00:03:26.280 --> 00:03:28.190
this is an effect where every
application will work in its best

00:03:28.190 --> 00:03:28.200
application will work in its best
 

00:03:28.200 --> 00:03:30.380
application will work in its best
interests it will be necessarily greedy

00:03:30.380 --> 00:03:30.390
interests it will be necessarily greedy
 

00:03:30.390 --> 00:03:32.450
interests it will be necessarily greedy
because obviously if someone has

00:03:32.450 --> 00:03:32.460
because obviously if someone has
 

00:03:32.460 --> 00:03:34.400
because obviously if someone has
installed my video playing application

00:03:34.400 --> 00:03:34.410
installed my video playing application
 

00:03:34.410 --> 00:03:36.440
installed my video playing application
it's really important to them for them

00:03:36.440 --> 00:03:36.450
it's really important to them for them
 

00:03:36.450 --> 00:03:38.810
it's really important to them for them
for the the user to actually watch the

00:03:38.810 --> 00:03:38.820
for the the user to actually watch the
 

00:03:38.820 --> 00:03:40.340
for the the user to actually watch the
videos in my application so I'm going to

00:03:40.340 --> 00:03:40.350
videos in my application so I'm going to
 

00:03:40.350 --> 00:03:41.570
videos in my application so I'm going to
sync all the time and I'm going to make

00:03:41.570 --> 00:03:41.580
sync all the time and I'm going to make
 

00:03:41.580 --> 00:03:43.010
sync all the time and I'm going to make
sure they get the most up-to-date data

00:03:43.010 --> 00:03:43.020
sure they get the most up-to-date data
 

00:03:43.020 --> 00:03:44.990
sure they get the most up-to-date data
and I'm gonna allocate tons and tons of

00:03:44.990 --> 00:03:45.000
and I'm gonna allocate tons and tons of
 

00:03:45.000 --> 00:03:46.130
and I'm gonna allocate tons and tons of
memory so that I have all the stuff

00:03:46.130 --> 00:03:46.140
memory so that I have all the stuff
 

00:03:46.140 --> 00:03:47.690
memory so that I have all the stuff
cache and it's just ready to go all the

00:03:47.690 --> 00:03:47.700
cache and it's just ready to go all the
 

00:03:47.700 --> 00:03:50.720
cache and it's just ready to go all the
time the fact is the user has many many

00:03:50.720 --> 00:03:50.730
time the fact is the user has many many
 

00:03:50.730 --> 00:03:53.030
time the fact is the user has many many
applications installed yours is one of

00:03:53.030 --> 00:03:53.040
applications installed yours is one of
 

00:03:53.040 --> 00:03:55.280
applications installed yours is one of
them and if it's too greedy yours will

00:03:55.280 --> 00:03:55.290
them and if it's too greedy yours will
 

00:03:55.290 --> 00:03:57.770
them and if it's too greedy yours will
not be one of them for long right if

00:03:57.770 --> 00:03:57.780
not be one of them for long right if
 

00:03:57.780 --> 00:03:59.990
not be one of them for long right if
every application acts in this way and

00:03:59.990 --> 00:04:00.000
every application acts in this way and
 

00:04:00.000 --> 00:04:02.270
every application acts in this way and
they do tend to by default then it makes

00:04:02.270 --> 00:04:02.280
they do tend to by default then it makes
 

00:04:02.280 --> 00:04:05.120
they do tend to by default then it makes
the overall device experience suck right

00:04:05.120 --> 00:04:05.130
the overall device experience suck right
 

00:04:05.130 --> 00:04:07.130
the overall device experience suck right
if every application is allocating too

00:04:07.130 --> 00:04:07.140
if every application is allocating too
 

00:04:07.140 --> 00:04:08.780
if every application is allocating too
much memory if it takes up too much heap

00:04:08.780 --> 00:04:08.790
much memory if it takes up too much heap
 

00:04:08.790 --> 00:04:11.120
much memory if it takes up too much heap
if every process is huge

00:04:11.120 --> 00:04:11.130
if every process is huge
 

00:04:11.130 --> 00:04:13.220
if every process is huge
then the task manager will continually

00:04:13.220 --> 00:04:13.230
then the task manager will continually
 

00:04:13.230 --> 00:04:15.050
then the task manager will continually
be killing all of the background

00:04:15.050 --> 00:04:15.060
be killing all of the background
 

00:04:15.060 --> 00:04:16.849
be killing all of the background
applications in order to make the

00:04:16.849 --> 00:04:16.859
applications in order to make the
 

00:04:16.859 --> 00:04:18.289
applications in order to make the
foreground application have enough

00:04:18.289 --> 00:04:18.299
foreground application have enough
 

00:04:18.299 --> 00:04:20.599
foreground application have enough
memory to run itself and then when your

00:04:20.599 --> 00:04:20.609
memory to run itself and then when your
 

00:04:20.609 --> 00:04:22.580
memory to run itself and then when your
rather greedy and bloated application

00:04:22.580 --> 00:04:22.590
rather greedy and bloated application
 

00:04:22.590 --> 00:04:24.380
rather greedy and bloated application
goes into the background and the task

00:04:24.380 --> 00:04:24.390
goes into the background and the task
 

00:04:24.390 --> 00:04:25.850
goes into the background and the task
manager says well I'm running out of

00:04:25.850 --> 00:04:25.860
manager says well I'm running out of
 

00:04:25.860 --> 00:04:26.200
manager says well I'm running out of
memory

00:04:26.200 --> 00:04:26.210
memory
 

00:04:26.210 --> 00:04:27.909
memory
I better go look for some large memory

00:04:27.909 --> 00:04:27.919
I better go look for some large memory
 

00:04:27.919 --> 00:04:29.950
I better go look for some large memory
users it's gonna find yours and it's

00:04:29.950 --> 00:04:29.960
users it's gonna find yours and it's
 

00:04:29.960 --> 00:04:31.480
users it's gonna find yours and it's
gonna kill it and the next time the user

00:04:31.480 --> 00:04:31.490
gonna kill it and the next time the user
 

00:04:31.490 --> 00:04:33.340
gonna kill it and the next time the user
goes back to it it's gonna have to

00:04:33.340 --> 00:04:33.350
goes back to it it's gonna have to
 

00:04:33.350 --> 00:04:36.370
goes back to it it's gonna have to
relaunch and do a cold start because it

00:04:36.370 --> 00:04:36.380
relaunch and do a cold start because it
 

00:04:36.380 --> 00:04:38.469
relaunch and do a cold start because it
was killed right wouldn't it be nicer if

00:04:38.469 --> 00:04:38.479
was killed right wouldn't it be nicer if
 

00:04:38.479 --> 00:04:40.749
was killed right wouldn't it be nicer if
all the applications were more slim and

00:04:40.749 --> 00:04:40.759
all the applications were more slim and
 

00:04:40.759 --> 00:04:42.670
all the applications were more slim and
trim so that whenever the applica the

00:04:42.670 --> 00:04:42.680
trim so that whenever the applica the
 

00:04:42.680 --> 00:04:45.339
trim so that whenever the applica the
user switches between them they can do

00:04:45.339 --> 00:04:45.349
user switches between them they can do
 

00:04:45.349 --> 00:04:46.960
user switches between them they can do
so easily because they just have to page

00:04:46.960 --> 00:04:46.970
so easily because they just have to page
 

00:04:46.970 --> 00:04:49.360
so easily because they just have to page
them in instead of actually reloading

00:04:49.360 --> 00:04:49.370
them in instead of actually reloading
 

00:04:49.370 --> 00:04:51.820
them in instead of actually reloading
and relaunching everything from storage

00:04:51.820 --> 00:04:51.830
and relaunching everything from storage
 

00:04:51.830 --> 00:04:54.159
and relaunching everything from storage
so there's there's sort of two effects

00:04:54.159 --> 00:04:54.169
so there's there's sort of two effects
 

00:04:54.169 --> 00:04:56.439
so there's there's sort of two effects
that we see there's the tragedy of the

00:04:56.439 --> 00:04:56.449
that we see there's the tragedy of the
 

00:04:56.449 --> 00:04:58.540
that we see there's the tragedy of the
Commons where every thing is greedy and

00:04:58.540 --> 00:04:58.550
Commons where every thing is greedy and
 

00:04:58.550 --> 00:05:00.100
Commons where every thing is greedy and
then there is the every device as a

00:05:00.100 --> 00:05:00.110
then there is the every device as a
 

00:05:00.110 --> 00:05:02.050
then there is the every device as a
village so not only are all the

00:05:02.050 --> 00:05:02.060
village so not only are all the
 

00:05:02.060 --> 00:05:03.640
village so not only are all the
applications greedy and they are

00:05:03.640 --> 00:05:03.650
applications greedy and they are
 

00:05:03.650 --> 00:05:05.529
applications greedy and they are
suffering for it but then the overall

00:05:05.529 --> 00:05:05.539
suffering for it but then the overall
 

00:05:05.539 --> 00:05:07.450
suffering for it but then the overall
device is suffering for it you know now

00:05:07.450 --> 00:05:07.460
device is suffering for it you know now
 

00:05:07.460 --> 00:05:09.040
device is suffering for it you know now
the user experience from all these

00:05:09.040 --> 00:05:09.050
the user experience from all these
 

00:05:09.050 --> 00:05:10.689
the user experience from all these
greedy applications on the device is

00:05:10.689 --> 00:05:10.699
greedy applications on the device is
 

00:05:10.699 --> 00:05:12.909
greedy applications on the device is
that they're constantly relaunching all

00:05:12.909 --> 00:05:12.919
that they're constantly relaunching all
 

00:05:12.919 --> 00:05:15.279
that they're constantly relaunching all
of the activities there or some service

00:05:15.279 --> 00:05:15.289
of the activities there or some service
 

00:05:15.289 --> 00:05:16.689
of the activities there or some service
running in the background is sinking

00:05:16.689 --> 00:05:16.699
running in the background is sinking
 

00:05:16.699 --> 00:05:19.060
running in the background is sinking
causing performance problems and the CPU

00:05:19.060 --> 00:05:19.070
causing performance problems and the CPU
 

00:05:19.070 --> 00:05:21.310
causing performance problems and the CPU
to be doing things for absolutely no

00:05:21.310 --> 00:05:21.320
to be doing things for absolutely no
 

00:05:21.320 --> 00:05:23.290
to be doing things for absolutely no
reason whatsoever I'm not using that

00:05:23.290 --> 00:05:23.300
reason whatsoever I'm not using that
 

00:05:23.300 --> 00:05:25.270
reason whatsoever I'm not using that
service right now I haven't used that

00:05:25.270 --> 00:05:25.280
service right now I haven't used that
 

00:05:25.280 --> 00:05:28.270
service right now I haven't used that
eReader for a month why is it actually

00:05:28.270 --> 00:05:28.280
eReader for a month why is it actually
 

00:05:28.280 --> 00:05:29.649
eReader for a month why is it actually
sinking in the background when I'm

00:05:29.649 --> 00:05:29.659
sinking in the background when I'm
 

00:05:29.659 --> 00:05:32.140
sinking in the background when I'm
trying to use another application in the

00:05:32.140 --> 00:05:32.150
trying to use another application in the
 

00:05:32.150 --> 00:05:34.779
trying to use another application in the
foreground so these two effects are very

00:05:34.779 --> 00:05:34.789
foreground so these two effects are very
 

00:05:34.789 --> 00:05:36.520
foreground so these two effects are very
interrelated and contribute to the

00:05:36.520 --> 00:05:36.530
interrelated and contribute to the
 

00:05:36.530 --> 00:05:38.409
interrelated and contribute to the
overall user experience of Android so

00:05:38.409 --> 00:05:38.419
overall user experience of Android so
 

00:05:38.419 --> 00:05:40.450
overall user experience of Android so
that the goal of this article and of

00:05:40.450 --> 00:05:40.460
that the goal of this article and of
 

00:05:40.460 --> 00:05:42.610
that the goal of this article and of
these tips and practices in general is

00:05:42.610 --> 00:05:42.620
these tips and practices in general is
 

00:05:42.620 --> 00:05:44.800
these tips and practices in general is
to help application developers write

00:05:44.800 --> 00:05:44.810
to help application developers write
 

00:05:44.810 --> 00:05:46.899
to help application developers write
better applications so that we can make

00:05:46.899 --> 00:05:46.909
better applications so that we can make
 

00:05:46.909 --> 00:05:49.839
better applications so that we can make
the overall platform better so let's go

00:05:49.839 --> 00:05:49.849
the overall platform better so let's go
 

00:05:49.849 --> 00:05:54.430
the overall platform better so let's go
talk about memory 3 dynamics to be aware

00:05:54.430 --> 00:05:54.440
talk about memory 3 dynamics to be aware
 

00:05:54.440 --> 00:05:57.249
talk about memory 3 dynamics to be aware
of is that memory is limited and this is

00:05:57.249 --> 00:05:57.259
of is that memory is limited and this is
 

00:05:57.259 --> 00:05:59.189
of is that memory is limited and this is
far more limited than you might realize

00:05:59.189 --> 00:05:59.199
far more limited than you might realize
 

00:05:59.199 --> 00:06:03.430
far more limited than you might realize
living here with our less constrained

00:06:03.430 --> 00:06:03.440
living here with our less constrained
 

00:06:03.440 --> 00:06:05.740
living here with our less constrained
financial resources and more available

00:06:05.740 --> 00:06:05.750
financial resources and more available
 

00:06:05.750 --> 00:06:08.409
financial resources and more available
technology we tend to think of like one

00:06:08.409 --> 00:06:08.419
technology we tend to think of like one
 

00:06:08.419 --> 00:06:10.180
technology we tend to think of like one
gig as being the low ends you know there

00:06:10.180 --> 00:06:10.190
gig as being the low ends you know there
 

00:06:10.190 --> 00:06:12.550
gig as being the low ends you know there
are devices with two gig or more readily

00:06:12.550 --> 00:06:12.560
are devices with two gig or more readily
 

00:06:12.560 --> 00:06:14.230
are devices with two gig or more readily
available so surely this is what people

00:06:14.230 --> 00:06:14.240
available so surely this is what people
 

00:06:14.240 --> 00:06:16.800
available so surely this is what people
have in the real world in the real world

00:06:16.800 --> 00:06:16.810
have in the real world in the real world
 

00:06:16.810 --> 00:06:20.140
have in the real world in the real world
low-end devices are a still being used

00:06:20.140 --> 00:06:20.150
low-end devices are a still being used
 

00:06:20.150 --> 00:06:21.730
low-end devices are a still being used
because they were sold several years ago

00:06:21.730 --> 00:06:21.740
because they were sold several years ago
 

00:06:21.740 --> 00:06:24.310
because they were sold several years ago
and people don't just ditch devices for

00:06:24.310 --> 00:06:24.320
and people don't just ditch devices for
 

00:06:24.320 --> 00:06:26.350
and people don't just ditch devices for
new ones unless they're like the people

00:06:26.350 --> 00:06:26.360
new ones unless they're like the people
 

00:06:26.360 --> 00:06:28.330
new ones unless they're like the people
in this room maybe they don't actually

00:06:28.330 --> 00:06:28.340
in this room maybe they don't actually
 

00:06:28.340 --> 00:06:30.100
in this room maybe they don't actually
you know have enough money to go buy a

00:06:30.100 --> 00:06:30.110
you know have enough money to go buy a
 

00:06:30.110 --> 00:06:31.779
you know have enough money to go buy a
new phone whenever they're excited by it

00:06:31.779 --> 00:06:31.789
new phone whenever they're excited by it
 

00:06:31.789 --> 00:06:34.029
new phone whenever they're excited by it
so they may keep that device around a

00:06:34.029 --> 00:06:34.039
so they may keep that device around a
 

00:06:34.039 --> 00:06:36.700
so they may keep that device around a
lot longer than you the developer want

00:06:36.700 --> 00:06:36.710
lot longer than you the developer want
 

00:06:36.710 --> 00:06:38.260
lot longer than you the developer want
them to so they're running with a low

00:06:38.260 --> 00:06:38.270
them to so they're running with a low
 

00:06:38.270 --> 00:06:39.579
them to so they're running with a low
memory device because they bought it a

00:06:39.579 --> 00:06:39.589
memory device because they bought it a
 

00:06:39.589 --> 00:06:39.980
memory device because they bought it a
while

00:06:39.980 --> 00:06:39.990
while
 

00:06:39.990 --> 00:06:43.190
while
but that the more insidious dynamic is

00:06:43.190 --> 00:06:43.200
but that the more insidious dynamic is
 

00:06:43.200 --> 00:06:45.350
but that the more insidious dynamic is
that there are still devices being sold

00:06:45.350 --> 00:06:45.360
that there are still devices being sold
 

00:06:45.360 --> 00:06:48.920
that there are still devices being sold
with low memory in markets where money

00:06:48.920 --> 00:06:48.930
with low memory in markets where money
 

00:06:48.930 --> 00:06:50.630
with low memory in markets where money
or technology is not as readily

00:06:50.630 --> 00:06:50.640
or technology is not as readily
 

00:06:50.640 --> 00:06:53.330
or technology is not as readily
available they may be selling these

00:06:53.330 --> 00:06:53.340
available they may be selling these
 

00:06:53.340 --> 00:06:56.780
available they may be selling these
phones to people that you know are

00:06:56.780 --> 00:06:56.790
phones to people that you know are
 

00:06:56.790 --> 00:06:57.980
phones to people that you know are
really excited about getting this new

00:06:57.980 --> 00:06:57.990
really excited about getting this new
 

00:06:57.990 --> 00:07:01.070
really excited about getting this new
device that only has 512 on it right not

00:07:01.070 --> 00:07:01.080
device that only has 512 on it right not
 

00:07:01.080 --> 00:07:02.990
device that only has 512 on it right not
much memory it's a new phone what are

00:07:02.990 --> 00:07:03.000
much memory it's a new phone what are
 

00:07:03.000 --> 00:07:04.130
much memory it's a new phone what are
they doing coming out with that amount

00:07:04.130 --> 00:07:04.140
they doing coming out with that amount
 

00:07:04.140 --> 00:07:05.660
they doing coming out with that amount
of memory well this is the configuration

00:07:05.660 --> 00:07:05.670
of memory well this is the configuration
 

00:07:05.670 --> 00:07:07.970
of memory well this is the configuration
that made sense in that market and there

00:07:07.970 --> 00:07:07.980
that made sense in that market and there
 

00:07:07.980 --> 00:07:09.290
that made sense in that market and there
are a lot of these phones still being

00:07:09.290 --> 00:07:09.300
are a lot of these phones still being
 

00:07:09.300 --> 00:07:11.660
are a lot of these phones still being
sold out there so even though you are

00:07:11.660 --> 00:07:11.670
sold out there so even though you are
 

00:07:11.670 --> 00:07:13.580
sold out there so even though you are
running a device that you don't consider

00:07:13.580 --> 00:07:13.590
running a device that you don't consider
 

00:07:13.590 --> 00:07:15.470
running a device that you don't consider
high-end and you think the memory

00:07:15.470 --> 00:07:15.480
high-end and you think the memory
 

00:07:15.480 --> 00:07:16.910
high-end and you think the memory
problems have gone away they actually

00:07:16.910 --> 00:07:16.920
problems have gone away they actually
 

00:07:16.920 --> 00:07:18.260
problems have gone away they actually
haven't and they're gonna be here for a

00:07:18.260 --> 00:07:18.270
haven't and they're gonna be here for a
 

00:07:18.270 --> 00:07:20.510
haven't and they're gonna be here for a
while because of those two dynamics so

00:07:20.510 --> 00:07:20.520
while because of those two dynamics so
 

00:07:20.520 --> 00:07:22.280
while because of those two dynamics so
it's very important for you the

00:07:22.280 --> 00:07:22.290
it's very important for you the
 

00:07:22.290 --> 00:07:24.230
it's very important for you the
developer to realize there are these low

00:07:24.230 --> 00:07:24.240
developer to realize there are these low
 

00:07:24.240 --> 00:07:25.850
developer to realize there are these low
memory situations and to make sure that

00:07:25.850 --> 00:07:25.860
memory situations and to make sure that
 

00:07:25.860 --> 00:07:27.860
memory situations and to make sure that
your application behaves reasonably well

00:07:27.860 --> 00:07:27.870
your application behaves reasonably well
 

00:07:27.870 --> 00:07:30.140
your application behaves reasonably well
when one of those situations occurs for

00:07:30.140 --> 00:07:30.150
when one of those situations occurs for
 

00:07:30.150 --> 00:07:33.350
when one of those situations occurs for
the user the other issue is I alluded to

00:07:33.350 --> 00:07:33.360
the user the other issue is I alluded to
 

00:07:33.360 --> 00:07:35.540
the user the other issue is I alluded to
before is that that memory is shared

00:07:35.540 --> 00:07:35.550
before is that that memory is shared
 

00:07:35.550 --> 00:07:37.760
before is that that memory is shared
everybody is swimming in the same pool I

00:07:37.760 --> 00:07:37.770
everybody is swimming in the same pool I
 

00:07:37.770 --> 00:07:41.300
everybody is swimming in the same pool I
don't really like that metaphor so

00:07:41.300 --> 00:07:41.310
don't really like that metaphor so
 

00:07:41.310 --> 00:07:44.510
don't really like that metaphor so
everybody has to behave if you want the

00:07:44.510 --> 00:07:44.520
everybody has to behave if you want the
 

00:07:44.520 --> 00:07:46.580
everybody has to behave if you want the
overall experience to be good if your

00:07:46.580 --> 00:07:46.590
overall experience to be good if your
 

00:07:46.590 --> 00:07:48.200
overall experience to be good if your
application is greedy and every other

00:07:48.200 --> 00:07:48.210
application is greedy and every other
 

00:07:48.210 --> 00:07:50.450
application is greedy and every other
application is greedy the entire

00:07:50.450 --> 00:07:50.460
application is greedy the entire
 

00:07:50.460 --> 00:07:51.980
application is greedy the entire
experience of the device will be

00:07:51.980 --> 00:07:51.990
experience of the device will be
 

00:07:51.990 --> 00:07:53.690
experience of the device will be
horrible right because everybody is

00:07:53.690 --> 00:07:53.700
horrible right because everybody is
 

00:07:53.700 --> 00:07:55.190
horrible right because everybody is
constantly going to be shoving everybody

00:07:55.190 --> 00:07:55.200
constantly going to be shoving everybody
 

00:07:55.200 --> 00:07:57.710
constantly going to be shoving everybody
out of you know CPU cycles as well as

00:07:57.710 --> 00:07:57.720
out of you know CPU cycles as well as
 

00:07:57.720 --> 00:08:00.410
out of you know CPU cycles as well as
memory and then finally memory equals

00:08:00.410 --> 00:08:00.420
memory and then finally memory equals
 

00:08:00.420 --> 00:08:02.600
memory and then finally memory equals
performance and this is the one that I

00:08:02.600 --> 00:08:02.610
performance and this is the one that I
 

00:08:02.610 --> 00:08:03.770
performance and this is the one that I
want to spend a little bit of quality

00:08:03.770 --> 00:08:03.780
want to spend a little bit of quality
 

00:08:03.780 --> 00:08:06.020
want to spend a little bit of quality
time on today and explain what we mean

00:08:06.020 --> 00:08:06.030
time on today and explain what we mean
 

00:08:06.030 --> 00:08:09.080
time on today and explain what we mean
by that so first of all let's talk about

00:08:09.080 --> 00:08:09.090
by that so first of all let's talk about
 

00:08:09.090 --> 00:08:10.400
by that so first of all let's talk about
memory let's talk about the garbage

00:08:10.400 --> 00:08:10.410
memory let's talk about the garbage
 

00:08:10.410 --> 00:08:13.430
memory let's talk about the garbage
collector and how it actually works and

00:08:13.430 --> 00:08:13.440
collector and how it actually works and
 

00:08:13.440 --> 00:08:14.660
collector and how it actually works and
why we see some of the performance

00:08:14.660 --> 00:08:14.670
why we see some of the performance
 

00:08:14.670 --> 00:08:17.330
why we see some of the performance
issues that we do so there are three

00:08:17.330 --> 00:08:17.340
issues that we do so there are three
 

00:08:17.340 --> 00:08:20.960
issues that we do so there are three
things that cause memory to be expensive

00:08:20.960 --> 00:08:20.970
things that cause memory to be expensive
 

00:08:20.970 --> 00:08:24.290
things that cause memory to be expensive
in terms of performance on Android one

00:08:24.290 --> 00:08:24.300
in terms of performance on Android one
 

00:08:24.300 --> 00:08:25.940
in terms of performance on Android one
is the allocation the process of

00:08:25.940 --> 00:08:25.950
is the allocation the process of
 

00:08:25.950 --> 00:08:28.760
is the allocation the process of
actually creating memory for the new

00:08:28.760 --> 00:08:28.770
actually creating memory for the new
 

00:08:28.770 --> 00:08:30.920
actually creating memory for the new
objects that are being allocated the

00:08:30.920 --> 00:08:30.930
objects that are being allocated the
 

00:08:30.930 --> 00:08:32.810
objects that are being allocated the
next is concurrent collection or just

00:08:32.810 --> 00:08:32.820
next is concurrent collection or just
 

00:08:32.820 --> 00:08:34.280
next is concurrent collection or just
collection in general and we actually

00:08:34.280 --> 00:08:34.290
collection in general and we actually
 

00:08:34.290 --> 00:08:36.650
collection in general and we actually
need to clear things out so that we can

00:08:36.650 --> 00:08:36.660
need to clear things out so that we can
 

00:08:36.660 --> 00:08:38.450
need to clear things out so that we can
make room for other allocations that

00:08:38.450 --> 00:08:38.460
make room for other allocations that
 

00:08:38.460 --> 00:08:40.550
make room for other allocations that
need to happen and then the third tends

00:08:40.550 --> 00:08:40.560
need to happen and then the third tends
 

00:08:40.560 --> 00:08:41.960
need to happen and then the third tends
to be the most painful one which is

00:08:41.960 --> 00:08:41.970
to be the most painful one which is
 

00:08:41.970 --> 00:08:44.090
to be the most painful one which is
collection for allocation if anybody has

00:08:44.090 --> 00:08:44.100
collection for allocation if anybody has
 

00:08:44.100 --> 00:08:46.010
collection for allocation if anybody has
taken a look at log and looked at the GC

00:08:46.010 --> 00:08:46.020
taken a look at log and looked at the GC
 

00:08:46.020 --> 00:08:47.750
taken a look at log and looked at the GC
information in there this is commonly

00:08:47.750 --> 00:08:47.760
information in there this is commonly
 

00:08:47.760 --> 00:08:50.120
information in there this is commonly
referred to as GC for alloc it's a

00:08:50.120 --> 00:08:50.130
referred to as GC for alloc it's a
 

00:08:50.130 --> 00:08:51.770
referred to as GC for alloc it's a
situation where you go to allocate

00:08:51.770 --> 00:08:51.780
situation where you go to allocate
 

00:08:51.780 --> 00:08:53.769
situation where you go to allocate
something there is not a free space

00:08:53.769 --> 00:08:53.779
something there is not a free space
 

00:08:53.779 --> 00:08:54.850
something there is not a free space
in the heap and then the garbage

00:08:54.850 --> 00:08:54.860
in the heap and then the garbage
 

00:08:54.860 --> 00:08:56.439
in the heap and then the garbage
collector needs to run synchronously

00:08:56.439 --> 00:08:56.449
collector needs to run synchronously
 

00:08:56.449 --> 00:08:59.619
collector needs to run synchronously
right then to free up enough memory to

00:08:59.619 --> 00:08:59.629
right then to free up enough memory to
 

00:08:59.629 --> 00:09:01.720
right then to free up enough memory to
store your object there so let's go into

00:09:01.720 --> 00:09:01.730
store your object there so let's go into
 

00:09:01.730 --> 00:09:03.579
store your object there so let's go into
some of the details there we can see the

00:09:03.579 --> 00:09:03.589
some of the details there we can see the
 

00:09:03.589 --> 00:09:07.059
some of the details there we can see the
four phases of normal allocations and

00:09:07.059 --> 00:09:07.069
four phases of normal allocations and
 

00:09:07.069 --> 00:09:08.710
four phases of normal allocations and
collections here you have this new

00:09:08.710 --> 00:09:08.720
collections here you have this new
 

00:09:08.720 --> 00:09:11.319
collections here you have this new
object on the left next to the squiggles

00:09:11.319 --> 00:09:11.329
object on the left next to the squiggles
 

00:09:11.329 --> 00:09:13.869
object on the left next to the squiggles
and we need to find space for that Oh

00:09:13.869 --> 00:09:13.879
and we need to find space for that Oh
 

00:09:13.879 --> 00:09:15.519
and we need to find space for that Oh
fortunately there's a space right there

00:09:15.519 --> 00:09:15.529
fortunately there's a space right there
 

00:09:15.529 --> 00:09:17.410
fortunately there's a space right there
well we'll pop it in at the top this is

00:09:17.410 --> 00:09:17.420
well we'll pop it in at the top this is
 

00:09:17.420 --> 00:09:19.299
well we'll pop it in at the top this is
an unusual situation where it was really

00:09:19.299 --> 00:09:19.309
an unusual situation where it was really
 

00:09:19.309 --> 00:09:21.670
an unusual situation where it was really
easy to do that so once that's there

00:09:21.670 --> 00:09:21.680
easy to do that so once that's there
 

00:09:21.680 --> 00:09:23.559
easy to do that so once that's there
then we enumerate all the objects to

00:09:23.559 --> 00:09:23.569
then we enumerate all the objects to
 

00:09:23.569 --> 00:09:25.090
then we enumerate all the objects to
figure out what's still referred to in

00:09:25.090 --> 00:09:25.100
figure out what's still referred to in
 

00:09:25.100 --> 00:09:26.860
figure out what's still referred to in
the heap you can see the red one doesn't

00:09:26.860 --> 00:09:26.870
the heap you can see the red one doesn't
 

00:09:26.870 --> 00:09:29.079
the heap you can see the red one doesn't
have a reference there we mark all of

00:09:29.079 --> 00:09:29.089
have a reference there we mark all of
 

00:09:29.089 --> 00:09:31.509
have a reference there we mark all of
those to make sure that we know what

00:09:31.509 --> 00:09:31.519
those to make sure that we know what
 

00:09:31.519 --> 00:09:32.980
those to make sure that we know what
things are still referred to and what

00:09:32.980 --> 00:09:32.990
things are still referred to and what
 

00:09:32.990 --> 00:09:34.569
things are still referred to and what
things can actually be collected and

00:09:34.569 --> 00:09:34.579
things can actually be collected and
 

00:09:34.579 --> 00:09:36.069
things can actually be collected and
then we collect and you see the red

00:09:36.069 --> 00:09:36.079
then we collect and you see the red
 

00:09:36.079 --> 00:09:37.569
then we collect and you see the red
object goes away there because there was

00:09:37.569 --> 00:09:37.579
object goes away there because there was
 

00:09:37.579 --> 00:09:39.429
object goes away there because there was
no reference to it so we can collect

00:09:39.429 --> 00:09:39.439
no reference to it so we can collect
 

00:09:39.439 --> 00:09:41.579
no reference to it so we can collect
that now and free up space in the heap

00:09:41.579 --> 00:09:41.589
that now and free up space in the heap
 

00:09:41.589 --> 00:09:44.379
that now and free up space in the heap
okay so on dalvik there's actually two

00:09:44.379 --> 00:09:44.389
okay so on dalvik there's actually two
 

00:09:44.389 --> 00:09:46.869
okay so on dalvik there's actually two
pause times that occur in the normal

00:09:46.869 --> 00:09:46.879
pause times that occur in the normal
 

00:09:46.879 --> 00:09:49.239
pause times that occur in the normal
process of simply allocating and

00:09:49.239 --> 00:09:49.249
process of simply allocating and
 

00:09:49.249 --> 00:09:50.590
process of simply allocating and
collecting there's a pause time to

00:09:50.590 --> 00:09:50.600
collecting there's a pause time to
 

00:09:50.600 --> 00:09:52.509
collecting there's a pause time to
enumerate so we basically stopped the

00:09:52.509 --> 00:09:52.519
enumerate so we basically stopped the
 

00:09:52.519 --> 00:09:55.119
enumerate so we basically stopped the
world the GC thread runs alone in the

00:09:55.119 --> 00:09:55.129
world the GC thread runs alone in the
 

00:09:55.129 --> 00:09:57.639
world the GC thread runs alone in the
process everything else is paused while

00:09:57.639 --> 00:09:57.649
process everything else is paused while
 

00:09:57.649 --> 00:10:00.069
process everything else is paused while
it figures out what the things are in

00:10:00.069 --> 00:10:00.079
it figures out what the things are in
 

00:10:00.079 --> 00:10:01.660
it figures out what the things are in
the heap during the enumeration phase

00:10:01.660 --> 00:10:01.670
the heap during the enumeration phase
 

00:10:01.670 --> 00:10:03.999
the heap during the enumeration phase
and then there's the mark phase where at

00:10:03.999 --> 00:10:04.009
and then there's the mark phase where at
 

00:10:04.009 --> 00:10:06.249
and then there's the mark phase where at
the end of that so it'll mark all the

00:10:06.249 --> 00:10:06.259
the end of that so it'll mark all the
 

00:10:06.259 --> 00:10:08.829
the end of that so it'll mark all the
things to figure out what doesn't have a

00:10:08.829 --> 00:10:08.839
things to figure out what doesn't have a
 

00:10:08.839 --> 00:10:11.170
things to figure out what doesn't have a
reference there and then it needs to run

00:10:11.170 --> 00:10:11.180
reference there and then it needs to run
 

00:10:11.180 --> 00:10:13.389
reference there and then it needs to run
one smaller mark phase at the end of

00:10:13.389 --> 00:10:13.399
one smaller mark phase at the end of
 

00:10:13.399 --> 00:10:14.920
one smaller mark phase at the end of
that in case there were allocations

00:10:14.920 --> 00:10:14.930
that in case there were allocations
 

00:10:14.930 --> 00:10:17.350
that in case there were allocations
while that concurrent marking was going

00:10:17.350 --> 00:10:17.360
while that concurrent marking was going
 

00:10:17.360 --> 00:10:19.119
while that concurrent marking was going
on and there's another pause there so

00:10:19.119 --> 00:10:19.129
on and there's another pause there so
 

00:10:19.129 --> 00:10:20.799
on and there's another pause there so
there's a large pause potentially in the

00:10:20.799 --> 00:10:20.809
there's a large pause potentially in the
 

00:10:20.809 --> 00:10:22.389
there's a large pause potentially in the
enumeration phase and then there's a

00:10:22.389 --> 00:10:22.399
enumeration phase and then there's a
 

00:10:22.399 --> 00:10:23.889
enumeration phase and then there's a
smaller pause at the end of the mark

00:10:23.889 --> 00:10:23.899
smaller pause at the end of the mark
 

00:10:23.899 --> 00:10:25.869
smaller pause at the end of the mark
phase and then it can collect everything

00:10:25.869 --> 00:10:25.879
phase and then it can collect everything
 

00:10:25.879 --> 00:10:29.350
phase and then it can collect everything
and it does that concurrently in art

00:10:29.350 --> 00:10:29.360
and it does that concurrently in art
 

00:10:29.360 --> 00:10:30.699
and it does that concurrently in art
it's a little bit different we

00:10:30.699 --> 00:10:30.709
it's a little bit different we
 

00:10:30.709 --> 00:10:32.170
it's a little bit different we
eliminated the first pause that there's

00:10:32.170 --> 00:10:32.180
eliminated the first pause that there's
 

00:10:32.180 --> 00:10:34.090
eliminated the first pause that there's
no synchronous pause during the

00:10:34.090 --> 00:10:34.100
no synchronous pause during the
 

00:10:34.100 --> 00:10:35.410
no synchronous pause during the
enumeration phase it can do that

00:10:35.410 --> 00:10:35.420
enumeration phase it can do that
 

00:10:35.420 --> 00:10:37.150
enumeration phase it can do that
concurrently there is still a small

00:10:37.150 --> 00:10:37.160
concurrently there is still a small
 

00:10:37.160 --> 00:10:39.579
concurrently there is still a small
pause at the end of the mark phase is a

00:10:39.579 --> 00:10:39.589
pause at the end of the mark phase is a
 

00:10:39.589 --> 00:10:40.809
pause at the end of the mark phase is a
little bit smaller because there's been

00:10:40.809 --> 00:10:40.819
little bit smaller because there's been
 

00:10:40.819 --> 00:10:42.970
little bit smaller because there's been
a lot of optimization work going into

00:10:42.970 --> 00:10:42.980
a lot of optimization work going into
 

00:10:42.980 --> 00:10:44.919
a lot of optimization work going into
the collector in art so it's better in

00:10:44.919 --> 00:10:44.929
the collector in art so it's better in
 

00:10:44.929 --> 00:10:47.139
the collector in art so it's better in
art but we still have a pause there and

00:10:47.139 --> 00:10:47.149
art but we still have a pause there and
 

00:10:47.149 --> 00:10:49.059
art but we still have a pause there and
I should point out too that like even

00:10:49.059 --> 00:10:49.069
I should point out too that like even
 

00:10:49.069 --> 00:10:50.860
I should point out too that like even
when there's not a pause here there's

00:10:50.860 --> 00:10:50.870
when there's not a pause here there's
 

00:10:50.870 --> 00:10:52.960
when there's not a pause here there's
still stuff happening right so all of

00:10:52.960 --> 00:10:52.970
still stuff happening right so all of
 

00:10:52.970 --> 00:10:56.259
still stuff happening right so all of
this is causing CPU to do things in the

00:10:56.259 --> 00:10:56.269
this is causing CPU to do things in the
 

00:10:56.269 --> 00:10:58.360
this is causing CPU to do things in the
background whether it's I just turn down

00:10:58.360 --> 00:10:58.370
background whether it's I just turn down
 

00:10:58.370 --> 00:11:04.030
background whether it's I just turn down
the audio on my screen so look out even

00:11:04.030 --> 00:11:04.040
the audio on my screen so look out even
 

00:11:04.040 --> 00:11:06.340
the audio on my screen so look out even
even if it can happen concurrently it

00:11:06.340 --> 00:11:06.350
even if it can happen concurrently it
 

00:11:06.350 --> 00:11:07.510
even if it can happen concurrently it
still means it's happening

00:11:07.510 --> 00:11:07.520
still means it's happening
 

00:11:07.520 --> 00:11:08.980
still means it's happening
you're still taking up cycles to do

00:11:08.980 --> 00:11:08.990
you're still taking up cycles to do
 

00:11:08.990 --> 00:11:10.720
you're still taking up cycles to do
these things and in general it's it's

00:11:10.720 --> 00:11:10.730
these things and in general it's it's
 

00:11:10.730 --> 00:11:12.070
these things and in general it's it's
good to not spend the cycles if you

00:11:12.070 --> 00:11:12.080
good to not spend the cycles if you
 

00:11:12.080 --> 00:11:14.590
good to not spend the cycles if you
don't have to okay so now let's talk

00:11:14.590 --> 00:11:14.600
don't have to okay so now let's talk
 

00:11:14.600 --> 00:11:16.240
don't have to okay so now let's talk
about the one that's more problematic

00:11:16.240 --> 00:11:16.250
about the one that's more problematic
 

00:11:16.250 --> 00:11:19.720
about the one that's more problematic
this is the GC for alloc situation where

00:11:19.720 --> 00:11:19.730
this is the GC for alloc situation where
 

00:11:19.730 --> 00:11:21.880
this is the GC for alloc situation where
a new object comes in and we pop that

00:11:21.880 --> 00:11:21.890
a new object comes in and we pop that
 

00:11:21.890 --> 00:11:23.590
a new object comes in and we pop that
onto the heap and another one comes in

00:11:23.590 --> 00:11:23.600
onto the heap and another one comes in
 

00:11:23.600 --> 00:11:25.120
onto the heap and another one comes in
and we walk down the heap and we look

00:11:25.120 --> 00:11:25.130
and we walk down the heap and we look
 

00:11:25.130 --> 00:11:27.400
and we walk down the heap and we look
for space in there and there is no space

00:11:27.400 --> 00:11:27.410
for space in there and there is no space
 

00:11:27.410 --> 00:11:29.560
for space in there and there is no space
right and then we have to actually run a

00:11:29.560 --> 00:11:29.570
right and then we have to actually run a
 

00:11:29.570 --> 00:11:32.290
right and then we have to actually run a
GC synchronously we stop the world so we

00:11:32.290 --> 00:11:32.300
GC synchronously we stop the world so we
 

00:11:32.300 --> 00:11:35.139
GC synchronously we stop the world so we
got a huge pause in the middle while we

00:11:35.139 --> 00:11:35.149
got a huge pause in the middle while we
 

00:11:35.149 --> 00:11:37.000
got a huge pause in the middle while we
actually go and free up the stuff that

00:11:37.000 --> 00:11:37.010
actually go and free up the stuff that
 

00:11:37.010 --> 00:11:38.530
actually go and free up the stuff that
we need to in order to fit this into the

00:11:38.530 --> 00:11:38.540
we need to in order to fit this into the
 

00:11:38.540 --> 00:11:40.269
we need to in order to fit this into the
heap and then we can put it in there and

00:11:40.269 --> 00:11:40.279
heap and then we can put it in there and
 

00:11:40.279 --> 00:11:41.889
heap and then we can put it in there and
go on about our business and the GC for

00:11:41.889 --> 00:11:41.899
go on about our business and the GC for
 

00:11:41.899 --> 00:11:43.630
go on about our business and the GC for
alloc tends to be painful both in terms

00:11:43.630 --> 00:11:43.640
alloc tends to be painful both in terms
 

00:11:43.640 --> 00:11:47.019
alloc tends to be painful both in terms
of time on dalvik this can take 10 to 20

00:11:47.019 --> 00:11:47.029
of time on dalvik this can take 10 to 20
 

00:11:47.029 --> 00:11:49.210
of time on dalvik this can take 10 to 20
milliseconds which is easily more than a

00:11:49.210 --> 00:11:49.220
milliseconds which is easily more than a
 

00:11:49.220 --> 00:11:51.910
milliseconds which is easily more than a
frame so you're gonna skip potentially

00:11:51.910 --> 00:11:51.920
frame so you're gonna skip potentially
 

00:11:51.920 --> 00:11:53.470
frame so you're gonna skip potentially
skip an animation frame in the middle

00:11:53.470 --> 00:11:53.480
skip an animation frame in the middle
 

00:11:53.480 --> 00:11:57.810
skip an animation frame in the middle
and cause a hiccup and then they're

00:11:57.810 --> 00:11:57.820
and cause a hiccup and then they're
 

00:11:57.820 --> 00:12:02.889
and cause a hiccup and then they're
totally lost my train of thought yeah I

00:12:02.889 --> 00:12:02.899
totally lost my train of thought yeah I
 

00:12:02.899 --> 00:12:05.260
totally lost my train of thought yeah I
just gone come on it turns out you

00:12:05.260 --> 00:12:05.270
just gone come on it turns out you
 

00:12:05.270 --> 00:12:09.519
just gone come on it turns out you
should sleep at night so it also means

00:12:09.519 --> 00:12:09.529
should sleep at night so it also means
 

00:12:09.529 --> 00:12:10.870
should sleep at night so it also means
that none of your other stuff is running

00:12:10.870 --> 00:12:10.880
that none of your other stuff is running
 

00:12:10.880 --> 00:12:12.280
that none of your other stuff is running
right so it's just gonna pause in the

00:12:12.280 --> 00:12:12.290
right so it's just gonna pause in the
 

00:12:12.290 --> 00:12:13.600
right so it's just gonna pause in the
middle it's gonna do all this work and

00:12:13.600 --> 00:12:13.610
middle it's gonna do all this work and
 

00:12:13.610 --> 00:12:15.430
middle it's gonna do all this work and
nothing else can happen at the same time

00:12:15.430 --> 00:12:15.440
nothing else can happen at the same time
 

00:12:15.440 --> 00:12:17.560
nothing else can happen at the same time
so in general that's a good thing to try

00:12:17.560 --> 00:12:17.570
so in general that's a good thing to try
 

00:12:17.570 --> 00:12:19.870
so in general that's a good thing to try
to avoid art makes this a little bit

00:12:19.870 --> 00:12:19.880
to avoid art makes this a little bit
 

00:12:19.880 --> 00:12:21.699
to avoid art makes this a little bit
better no a lot better because it has a

00:12:21.699 --> 00:12:21.709
better no a lot better because it has a
 

00:12:21.709 --> 00:12:23.710
better no a lot better because it has a
separate heap for large objects one of

00:12:23.710 --> 00:12:23.720
separate heap for large objects one of
 

00:12:23.720 --> 00:12:27.100
separate heap for large objects one of
the causes of of having to do too many

00:12:27.100 --> 00:12:27.110
the causes of of having to do too many
 

00:12:27.110 --> 00:12:29.230
the causes of of having to do too many
collections was that all of the all of

00:12:29.230 --> 00:12:29.240
collections was that all of the all of
 

00:12:29.240 --> 00:12:30.610
collections was that all of the all of
the objects were stored together so

00:12:30.610 --> 00:12:30.620
the objects were stored together so
 

00:12:30.620 --> 00:12:32.019
the objects were stored together so
you'd have these little tiny temporary

00:12:32.019 --> 00:12:32.029
you'd have these little tiny temporary
 

00:12:32.029 --> 00:12:34.480
you'd have these little tiny temporary
objects you know knew of you know object

00:12:34.480 --> 00:12:34.490
objects you know knew of you know object
 

00:12:34.490 --> 00:12:36.639
objects you know knew of you know object
or float or integer or whatever and then

00:12:36.639 --> 00:12:36.649
or float or integer or whatever and then
 

00:12:36.649 --> 00:12:38.110
or float or integer or whatever and then
you'd have this bitmap taking up a

00:12:38.110 --> 00:12:38.120
you'd have this bitmap taking up a
 

00:12:38.120 --> 00:12:39.579
you'd have this bitmap taking up a
massive amount of space in the middle

00:12:39.579 --> 00:12:39.589
massive amount of space in the middle
 

00:12:39.589 --> 00:12:41.829
massive amount of space in the middle
and it would just it would cause the

00:12:41.829 --> 00:12:41.839
and it would just it would cause the
 

00:12:41.839 --> 00:12:43.660
and it would just it would cause the
heap to get really large the amount of

00:12:43.660 --> 00:12:43.670
heap to get really large the amount of
 

00:12:43.670 --> 00:12:45.430
heap to get really large the amount of
space that would have to be walked to be

00:12:45.430 --> 00:12:45.440
space that would have to be walked to be
 

00:12:45.440 --> 00:12:48.610
space that would have to be walked to be
really big and the fragmentation issues

00:12:48.610 --> 00:12:48.620
really big and the fragmentation issues
 

00:12:48.620 --> 00:12:51.910
really big and the fragmentation issues
to be much greater in the heap and now

00:12:51.910 --> 00:12:51.920
to be much greater in the heap and now
 

00:12:51.920 --> 00:12:53.769
to be much greater in the heap and now
art takes all the large objects all the

00:12:53.769 --> 00:12:53.779
art takes all the large objects all the
 

00:12:53.779 --> 00:12:55.090
art takes all the large objects all the
bitmaps and they live in a separate

00:12:55.090 --> 00:12:55.100
bitmaps and they live in a separate
 

00:12:55.100 --> 00:12:56.530
bitmaps and they live in a separate
piece of memory over there so all the

00:12:56.530 --> 00:12:56.540
piece of memory over there so all the
 

00:12:56.540 --> 00:12:58.180
piece of memory over there so all the
big ones go out there all the little

00:12:58.180 --> 00:12:58.190
big ones go out there all the little
 

00:12:58.190 --> 00:13:01.180
big ones go out there all the little
more temporary objects go in the main

00:13:01.180 --> 00:13:01.190
more temporary objects go in the main
 

00:13:01.190 --> 00:13:03.699
more temporary objects go in the main
heap and it means that there are far

00:13:03.699 --> 00:13:03.709
heap and it means that there are far
 

00:13:03.709 --> 00:13:05.800
heap and it means that there are far
less pauses it means that also that the

00:13:05.800 --> 00:13:05.810
less pauses it means that also that the
 

00:13:05.810 --> 00:13:08.590
less pauses it means that also that the
pauses are much smaller so whereas the

00:13:08.590 --> 00:13:08.600
pauses are much smaller so whereas the
 

00:13:08.600 --> 00:13:10.150
pauses are much smaller so whereas the
previous doll that causes may have been

00:13:10.150 --> 00:13:10.160
previous doll that causes may have been
 

00:13:10.160 --> 00:13:11.829
previous doll that causes may have been
on the order of 10 to 20 milliseconds

00:13:11.829 --> 00:13:11.839
on the order of 10 to 20 milliseconds
 

00:13:11.839 --> 00:13:14.319
on the order of 10 to 20 milliseconds
now we see pauses of like 3 to 5

00:13:14.319 --> 00:13:14.329
now we see pauses of like 3 to 5
 

00:13:14.329 --> 00:13:16.780
now we see pauses of like 3 to 5
milliseconds which is much better it's

00:13:16.780 --> 00:13:16.790
milliseconds which is much better it's
 

00:13:16.790 --> 00:13:18.699
milliseconds which is much better it's
way under the frame boundary limit which

00:13:18.699 --> 00:13:18.709
way under the frame boundary limit which
 

00:13:18.709 --> 00:13:20.500
way under the frame boundary limit which
is great but it's still significant

00:13:20.500 --> 00:13:20.510
is great but it's still significant
 

00:13:20.510 --> 00:13:21.220
is great but it's still significant
enough they

00:13:21.220 --> 00:13:21.230
enough they
 

00:13:21.230 --> 00:13:22.960
enough they
push you over the frame boundary limit

00:13:22.960 --> 00:13:22.970
push you over the frame boundary limit
 

00:13:22.970 --> 00:13:25.390
push you over the frame boundary limit
anyway so it's still a good thing to

00:13:25.390 --> 00:13:25.400
anyway so it's still a good thing to
 

00:13:25.400 --> 00:13:28.360
anyway so it's still a good thing to
avoid meanwhile you know while all this

00:13:28.360 --> 00:13:28.370
avoid meanwhile you know while all this
 

00:13:28.370 --> 00:13:29.890
avoid meanwhile you know while all this
churning is going on of actually

00:13:29.890 --> 00:13:29.900
churning is going on of actually
 

00:13:29.900 --> 00:13:31.360
churning is going on of actually
allocating objects and needing to

00:13:31.360 --> 00:13:31.370
allocating objects and needing to
 

00:13:31.370 --> 00:13:33.190
allocating objects and needing to
collect them to free up the space for

00:13:33.190 --> 00:13:33.200
collect them to free up the space for
 

00:13:33.200 --> 00:13:35.650
collect them to free up the space for
them you're also growing your heap so

00:13:35.650 --> 00:13:35.660
them you're also growing your heap so
 

00:13:35.660 --> 00:13:38.520
them you're also growing your heap so
the more allocations you're asking for

00:13:38.520 --> 00:13:38.530
the more allocations you're asking for
 

00:13:38.530 --> 00:13:42.520
the more allocations you're asking for
the more you're causing the heap to grow

00:13:42.520 --> 00:13:42.530
the more you're causing the heap to grow
 

00:13:42.530 --> 00:13:44.260
the more you're causing the heap to grow
over time so if you just allocate more

00:13:44.260 --> 00:13:44.270
over time so if you just allocate more
 

00:13:44.270 --> 00:13:45.580
over time so if you just allocate more
and more objects eventually the heap is

00:13:45.580 --> 00:13:45.590
and more objects eventually the heap is
 

00:13:45.590 --> 00:13:47.110
and more objects eventually the heap is
going to say well I'm out of room but

00:13:47.110 --> 00:13:47.120
going to say well I'm out of room but
 

00:13:47.120 --> 00:13:48.610
going to say well I'm out of room but
you're not up to your process limit yet

00:13:48.610 --> 00:13:48.620
you're not up to your process limit yet
 

00:13:48.620 --> 00:13:50.440
you're not up to your process limit yet
so I'll grow the heap there so it'll go

00:13:50.440 --> 00:13:50.450
so I'll grow the heap there so it'll go
 

00:13:50.450 --> 00:13:53.410
so I'll grow the heap there so it'll go
through a the work to do that on B it'll

00:13:53.410 --> 00:13:53.420
through a the work to do that on B it'll
 

00:13:53.420 --> 00:13:55.660
through a the work to do that on B it'll
take up more memory on the device to

00:13:55.660 --> 00:13:55.670
take up more memory on the device to
 

00:13:55.670 --> 00:13:58.720
take up more memory on the device to
allocate that larger heap and larger

00:13:58.720 --> 00:13:58.730
allocate that larger heap and larger
 

00:13:58.730 --> 00:14:01.930
allocate that larger heap and larger
heap means now your task your process is

00:14:01.930 --> 00:14:01.940
heap means now your task your process is
 

00:14:01.940 --> 00:14:03.250
heap means now your task your process is
taking up more memory there's less

00:14:03.250 --> 00:14:03.260
taking up more memory there's less
 

00:14:03.260 --> 00:14:06.510
taking up more memory there's less
available for the rest of the system and

00:14:06.510 --> 00:14:06.520
available for the rest of the system and
 

00:14:06.520 --> 00:14:09.490
available for the rest of the system and
you're also causing your app to be

00:14:09.490 --> 00:14:09.500
you're also causing your app to be
 

00:14:09.500 --> 00:14:11.890
you're also causing your app to be
killed because you're gonna be taking up

00:14:11.890 --> 00:14:11.900
killed because you're gonna be taking up
 

00:14:11.900 --> 00:14:14.050
killed because you're gonna be taking up
more space when the task manager is

00:14:14.050 --> 00:14:14.060
more space when the task manager is
 

00:14:14.060 --> 00:14:15.850
more space when the task manager is
looking for background apps to kill it's

00:14:15.850 --> 00:14:15.860
looking for background apps to kill it's
 

00:14:15.860 --> 00:14:17.290
looking for background apps to kill it's
going to look for large ones because

00:14:17.290 --> 00:14:17.300
going to look for large ones because
 

00:14:17.300 --> 00:14:18.880
going to look for large ones because
that's a lot of memory that it could

00:14:18.880 --> 00:14:18.890
that's a lot of memory that it could
 

00:14:18.890 --> 00:14:22.690
that's a lot of memory that it could
take back there's an important point to

00:14:22.690 --> 00:14:22.700
take back there's an important point to
 

00:14:22.700 --> 00:14:25.540
take back there's an important point to
note about this is that under dalvik

00:14:25.540 --> 00:14:25.550
note about this is that under dalvik
 

00:14:25.550 --> 00:14:27.760
note about this is that under dalvik
there was no compaction right which

00:14:27.760 --> 00:14:27.770
there was no compaction right which
 

00:14:27.770 --> 00:14:31.150
there was no compaction right which
means that when this causes big problems

00:14:31.150 --> 00:14:31.160
means that when this causes big problems
 

00:14:31.160 --> 00:14:33.670
means that when this causes big problems
with fragmentation of the heap where you

00:14:33.670 --> 00:14:33.680
with fragmentation of the heap where you
 

00:14:33.680 --> 00:14:34.900
with fragmentation of the heap where you
would allocate these temporary things

00:14:34.900 --> 00:14:34.910
would allocate these temporary things
 

00:14:34.910 --> 00:14:36.220
would allocate these temporary things
over time and then you would remove the

00:14:36.220 --> 00:14:36.230
over time and then you would remove the
 

00:14:36.230 --> 00:14:37.780
over time and then you would remove the
things that weren't there anymore but

00:14:37.780 --> 00:14:37.790
things that weren't there anymore but
 

00:14:37.790 --> 00:14:39.430
things that weren't there anymore but
the things that were permanent or

00:14:39.430 --> 00:14:39.440
the things that were permanent or
 

00:14:39.440 --> 00:14:40.900
the things that were permanent or
long-lived would still be in the heap

00:14:40.900 --> 00:14:40.910
long-lived would still be in the heap
 

00:14:40.910 --> 00:14:42.670
long-lived would still be in the heap
somewhere and we could never actually

00:14:42.670 --> 00:14:42.680
somewhere and we could never actually
 

00:14:42.680 --> 00:14:46.090
somewhere and we could never actually
get back that memory there is a certain

00:14:46.090 --> 00:14:46.100
get back that memory there is a certain
 

00:14:46.100 --> 00:14:47.380
get back that memory there is a certain
amount of trimming that happens under

00:14:47.380 --> 00:14:47.390
amount of trimming that happens under
 

00:14:47.390 --> 00:14:50.230
amount of trimming that happens under
dalvik where if we if we get rid of

00:14:50.230 --> 00:14:50.240
dalvik where if we if we get rid of
 

00:14:50.240 --> 00:14:52.870
dalvik where if we if we get rid of
enough of the objects that occupy an

00:14:52.870 --> 00:14:52.880
enough of the objects that occupy an
 

00:14:52.880 --> 00:14:54.850
enough of the objects that occupy an
entire page eventually we can hand that

00:14:54.850 --> 00:14:54.860
entire page eventually we can hand that
 

00:14:54.860 --> 00:14:57.820
entire page eventually we can hand that
page back to memory but in general

00:14:57.820 --> 00:14:57.830
page back to memory but in general
 

00:14:57.830 --> 00:14:59.140
page back to memory but in general
you're stuck in this situation where you

00:14:59.140 --> 00:14:59.150
you're stuck in this situation where you
 

00:14:59.150 --> 00:15:00.880
you're stuck in this situation where you
basically grow without bound the heap

00:15:00.880 --> 00:15:00.890
basically grow without bound the heap
 

00:15:00.890 --> 00:15:03.640
basically grow without bound the heap
gets larger and we can never really get

00:15:03.640 --> 00:15:03.650
gets larger and we can never really get
 

00:15:03.650 --> 00:15:05.860
gets larger and we can never really get
back all of that space even if you only

00:15:05.860 --> 00:15:05.870
back all of that space even if you only
 

00:15:05.870 --> 00:15:08.020
back all of that space even if you only
grew it to a large size very temporarily

00:15:08.020 --> 00:15:08.030
grew it to a large size very temporarily
 

00:15:08.030 --> 00:15:10.450
grew it to a large size very temporarily
under art this improves because we do

00:15:10.450 --> 00:15:10.460
under art this improves because we do
 

00:15:10.460 --> 00:15:14.350
under art this improves because we do
actually compact the heap eventually

00:15:14.350 --> 00:15:14.360
actually compact the heap eventually
 

00:15:14.360 --> 00:15:16.450
actually compact the heap eventually
when your app goes into the background

00:15:16.450 --> 00:15:16.460
when your app goes into the background
 

00:15:16.460 --> 00:15:18.160
when your app goes into the background
when it senses that it's an idle time

00:15:18.160 --> 00:15:18.170
when it senses that it's an idle time
 

00:15:18.170 --> 00:15:20.710
when it senses that it's an idle time
that it can do this operation then it'll

00:15:20.710 --> 00:15:20.720
that it can do this operation then it'll
 

00:15:20.720 --> 00:15:22.780
that it can do this operation then it'll
take a look at the heap and realize well

00:15:22.780 --> 00:15:22.790
take a look at the heap and realize well
 

00:15:22.790 --> 00:15:23.980
take a look at the heap and realize well
there's a lot of objects that went away

00:15:23.980 --> 00:15:23.990
there's a lot of objects that went away
 

00:15:23.990 --> 00:15:25.450
there's a lot of objects that went away
in the mean time and we can compact the

00:15:25.450 --> 00:15:25.460
in the mean time and we can compact the
 

00:15:25.460 --> 00:15:28.210
in the mean time and we can compact the
heap so it gets better under art but

00:15:28.210 --> 00:15:28.220
heap so it gets better under art but
 

00:15:28.220 --> 00:15:30.190
heap so it gets better under art but
it's still a problem right especially if

00:15:30.190 --> 00:15:30.200
it's still a problem right especially if
 

00:15:30.200 --> 00:15:31.500
it's still a problem right especially if
you are just the foreground a

00:15:31.500 --> 00:15:31.510
you are just the foreground a
 

00:15:31.510 --> 00:15:33.530
you are just the foreground a
application we're not going to

00:15:33.530 --> 00:15:33.540
application we're not going to
 

00:15:33.540 --> 00:15:35.780
application we're not going to
compact the heap at that time all right

00:15:35.780 --> 00:15:35.790
compact the heap at that time all right
 

00:15:35.790 --> 00:15:38.780
compact the heap at that time all right
so there's a few points that come out of

00:15:38.780 --> 00:15:38.790
so there's a few points that come out of
 

00:15:38.790 --> 00:15:42.980
so there's a few points that come out of
this there are so when you have fewer

00:15:42.980 --> 00:15:42.990
this there are so when you have fewer
 

00:15:42.990 --> 00:15:46.250
this there are so when you have fewer
allocations you get a smaller heat you

00:15:46.250 --> 00:15:46.260
allocations you get a smaller heat you
 

00:15:46.260 --> 00:15:49.190
allocations you get a smaller heat you
also get faster allocation times because

00:15:49.190 --> 00:15:49.200
also get faster allocation times because
 

00:15:49.200 --> 00:15:52.130
also get faster allocation times because
there's simply less work to do to figure

00:15:52.130 --> 00:15:52.140
there's simply less work to do to figure
 

00:15:52.140 --> 00:15:54.140
there's simply less work to do to figure
out where the free space is you get

00:15:54.140 --> 00:15:54.150
out where the free space is you get
 

00:15:54.150 --> 00:15:56.630
out where the free space is you get
faster collection times because again

00:15:56.630 --> 00:15:56.640
faster collection times because again
 

00:15:56.640 --> 00:15:58.460
faster collection times because again
smaller heap less things to keep track

00:15:58.460 --> 00:15:58.470
smaller heap less things to keep track
 

00:15:58.470 --> 00:16:01.130
smaller heap less things to keep track
of you get fewer pauses because there's

00:16:01.130 --> 00:16:01.140
of you get fewer pauses because there's
 

00:16:01.140 --> 00:16:04.610
of you get fewer pauses because there's
less to do over time and there's less

00:16:04.610 --> 00:16:04.620
less to do over time and there's less
 

00:16:04.620 --> 00:16:06.680
less to do over time and there's less
CPU usage because you're not causing the

00:16:06.680 --> 00:16:06.690
CPU usage because you're not causing the
 

00:16:06.690 --> 00:16:09.020
CPU usage because you're not causing the
CPU to actually continually do this you

00:16:09.020 --> 00:16:09.030
CPU to actually continually do this you
 

00:16:09.030 --> 00:16:10.580
CPU to actually continually do this you
know mark-and-sweep and collect in the

00:16:10.580 --> 00:16:10.590
know mark-and-sweep and collect in the
 

00:16:10.590 --> 00:16:13.130
know mark-and-sweep and collect in the
background and then overall you get west

00:16:13.130 --> 00:16:13.140
background and then overall you get west
 

00:16:13.140 --> 00:16:15.590
background and then overall you get west
jank especially for the GC for alloc if

00:16:15.590 --> 00:16:15.600
jank especially for the GC for alloc if
 

00:16:15.600 --> 00:16:17.330
jank especially for the GC for alloc if
you're constantly allocating things and

00:16:17.330 --> 00:16:17.340
you're constantly allocating things and
 

00:16:17.340 --> 00:16:19.190
you're constantly allocating things and
then you run into a situation where

00:16:19.190 --> 00:16:19.200
then you run into a situation where
 

00:16:19.200 --> 00:16:20.660
then you run into a situation where
there's not enough free space for a new

00:16:20.660 --> 00:16:20.670
there's not enough free space for a new
 

00:16:20.670 --> 00:16:23.120
there's not enough free space for a new
object then you're gonna cause a GC for

00:16:23.120 --> 00:16:23.130
object then you're gonna cause a GC for
 

00:16:23.130 --> 00:16:25.040
object then you're gonna cause a GC for
alloc which in general will cause jank

00:16:25.040 --> 00:16:25.050
alloc which in general will cause jank
 

00:16:25.050 --> 00:16:27.080
alloc which in general will cause jank
it'll cause you to miss a frame

00:16:27.080 --> 00:16:27.090
it'll cause you to miss a frame
 

00:16:27.090 --> 00:16:29.360
it'll cause you to miss a frame
particularly on dalvik but also on art

00:16:29.360 --> 00:16:29.370
particularly on dalvik but also on art
 

00:16:29.370 --> 00:16:31.130
particularly on dalvik but also on art
because you're basically causing a whole

00:16:31.130 --> 00:16:31.140
because you're basically causing a whole
 

00:16:31.140 --> 00:16:33.170
because you're basically causing a whole
lot of work to happen that are super

00:16:33.170 --> 00:16:33.180
lot of work to happen that are super
 

00:16:33.180 --> 00:16:36.320
lot of work to happen that are super
inconvenient time and then all of this

00:16:36.320 --> 00:16:36.330
inconvenient time and then all of this
 

00:16:36.330 --> 00:16:38.450
inconvenient time and then all of this
in general I would posit leads to

00:16:38.450 --> 00:16:38.460
in general I would posit leads to
 

00:16:38.460 --> 00:16:42.470
in general I would posit leads to
happier users and world peace I leave

00:16:42.470 --> 00:16:42.480
happier users and world peace I leave
 

00:16:42.480 --> 00:16:44.300
happier users and world peace I leave
the last item is an exercise for the

00:16:44.300 --> 00:16:44.310
the last item is an exercise for the
 

00:16:44.310 --> 00:16:47.180
the last item is an exercise for the
reader okay so let's talk about some of

00:16:47.180 --> 00:16:47.190
reader okay so let's talk about some of
 

00:16:47.190 --> 00:16:49.820
reader okay so let's talk about some of
the tips and tricks about using memory

00:16:49.820 --> 00:16:49.830
the tips and tricks about using memory
 

00:16:49.830 --> 00:16:54.040
the tips and tricks about using memory
more effectively we we meaning me and

00:16:54.040 --> 00:16:54.050
more effectively we we meaning me and
 

00:16:54.050 --> 00:16:57.620
more effectively we we meaning me and
Romo he gave a talk years ago at devoxx

00:16:57.620 --> 00:16:57.630
Romo he gave a talk years ago at devoxx
 

00:16:57.630 --> 00:16:59.290
Romo he gave a talk years ago at devoxx
and it's up on prozis.com

00:16:59.290 --> 00:16:59.300
and it's up on prozis.com
 

00:16:59.300 --> 00:17:02.090
and it's up on prozis.com
that goes over a lot of the details here

00:17:02.090 --> 00:17:02.100
that goes over a lot of the details here
 

00:17:02.100 --> 00:17:04.670
that goes over a lot of the details here
like some of the the sizes and

00:17:04.670 --> 00:17:04.680
like some of the the sizes and
 

00:17:04.680 --> 00:17:06.470
like some of the the sizes and
quantities involved so I would encourage

00:17:06.470 --> 00:17:06.480
quantities involved so I would encourage
 

00:17:06.480 --> 00:17:07.970
quantities involved so I would encourage
you to check out the video it has a lot

00:17:07.970 --> 00:17:07.980
you to check out the video it has a lot
 

00:17:07.980 --> 00:17:09.319
you to check out the video it has a lot
of the details behind some of these

00:17:09.319 --> 00:17:09.329
of the details behind some of these
 

00:17:09.329 --> 00:17:12.160
of the details behind some of these
items first of all avoid allocations

00:17:12.160 --> 00:17:12.170
items first of all avoid allocations
 

00:17:12.170 --> 00:17:15.800
items first of all avoid allocations
when possible one of the things that

00:17:15.800 --> 00:17:15.810
when possible one of the things that
 

00:17:15.810 --> 00:17:17.630
when possible one of the things that
we've seen and there's actually a lint

00:17:17.630 --> 00:17:17.640
we've seen and there's actually a lint
 

00:17:17.640 --> 00:17:20.150
we've seen and there's actually a lint
check for this now is don't allocate in

00:17:20.150 --> 00:17:20.160
check for this now is don't allocate in
 

00:17:20.160 --> 00:17:21.650
check for this now is don't allocate in
the middle of your inner loop in

00:17:21.650 --> 00:17:21.660
the middle of your inner loop in
 

00:17:21.660 --> 00:17:23.720
the middle of your inner loop in
particular if you're in like on draw and

00:17:23.720 --> 00:17:23.730
particular if you're in like on draw and
 

00:17:23.730 --> 00:17:25.760
particular if you're in like on draw and
you realize well I need to draw to this

00:17:25.760 --> 00:17:25.770
you realize well I need to draw to this
 

00:17:25.770 --> 00:17:27.470
you realize well I need to draw to this
canvas and I need a paint object let's

00:17:27.470 --> 00:17:27.480
canvas and I need a paint object let's
 

00:17:27.480 --> 00:17:29.240
canvas and I need a paint object let's
get a paint object so we'll create a new

00:17:29.240 --> 00:17:29.250
get a paint object so we'll create a new
 

00:17:29.250 --> 00:17:30.710
get a paint object so we'll create a new
paint object and we'll do this

00:17:30.710 --> 00:17:30.720
paint object and we'll do this
 

00:17:30.720 --> 00:17:32.720
paint object and we'll do this
incredibly common so there's like a lint

00:17:32.720 --> 00:17:32.730
incredibly common so there's like a lint
 

00:17:32.730 --> 00:17:34.850
incredibly common so there's like a lint
check for that specific pattern just

00:17:34.850 --> 00:17:34.860
check for that specific pattern just
 

00:17:34.860 --> 00:17:36.410
check for that specific pattern just
because so many people are doing this

00:17:36.410 --> 00:17:36.420
because so many people are doing this
 

00:17:36.420 --> 00:17:38.630
because so many people are doing this
it seems dumb you're like how how big

00:17:38.630 --> 00:17:38.640
it seems dumb you're like how how big
 

00:17:38.640 --> 00:17:40.400
it seems dumb you're like how how big
can it be there's only five letters in

00:17:40.400 --> 00:17:40.410
can it be there's only five letters in
 

00:17:40.410 --> 00:17:43.940
can it be there's only five letters in
the word paint right it turns out it's a

00:17:43.940 --> 00:17:43.950
the word paint right it turns out it's a
 

00:17:43.950 --> 00:17:45.560
the word paint right it turns out it's a
problem it's a it's a problem for two

00:17:45.560 --> 00:17:45.570
problem it's a it's a problem for two
 

00:17:45.570 --> 00:17:46.870
problem it's a it's a problem for two
reasons one

00:17:46.870 --> 00:17:46.880
reasons one
 

00:17:46.880 --> 00:17:50.410
reasons one
not as obvious is that the the Java

00:17:50.410 --> 00:17:50.420
not as obvious is that the the Java
 

00:17:50.420 --> 00:17:52.120
not as obvious is that the the Java
level object that we're allocating the

00:17:52.120 --> 00:17:52.130
level object that we're allocating the
 

00:17:52.130 --> 00:17:53.950
level object that we're allocating the
paint object is kind of the tip of the

00:17:53.950 --> 00:17:53.960
paint object is kind of the tip of the
 

00:17:53.960 --> 00:17:55.630
paint object is kind of the tip of the
iceberg we're also allocating stuff at

00:17:55.630 --> 00:17:55.640
iceberg we're also allocating stuff at
 

00:17:55.640 --> 00:17:57.520
iceberg we're also allocating stuff at
the native level which then needs to be

00:17:57.520 --> 00:17:57.530
the native level which then needs to be
 

00:17:57.530 --> 00:17:59.380
the native level which then needs to be
finalized and collected later which is

00:17:59.380 --> 00:17:59.390
finalized and collected later which is
 

00:17:59.390 --> 00:18:01.060
finalized and collected later which is
kind of an arduous process to go through

00:18:01.060 --> 00:18:01.070
kind of an arduous process to go through
 

00:18:01.070 --> 00:18:01.570
kind of an arduous process to go through
as well

00:18:01.570 --> 00:18:01.580
as well
 

00:18:01.580 --> 00:18:03.850
as well
I'll talk about finalizar later so

00:18:03.850 --> 00:18:03.860
I'll talk about finalizar later so
 

00:18:03.860 --> 00:18:05.200
I'll talk about finalizar later so
there's a lot of stuff that's happening

00:18:05.200 --> 00:18:05.210
there's a lot of stuff that's happening
 

00:18:05.210 --> 00:18:07.630
there's a lot of stuff that's happening
underneath paint that you're causing to

00:18:07.630 --> 00:18:07.640
underneath paint that you're causing to
 

00:18:07.640 --> 00:18:09.310
underneath paint that you're causing to
happen just by allocating a temporary

00:18:09.310 --> 00:18:09.320
happen just by allocating a temporary
 

00:18:09.320 --> 00:18:11.620
happen just by allocating a temporary
paint object the other one is the churn

00:18:11.620 --> 00:18:11.630
paint object the other one is the churn
 

00:18:11.630 --> 00:18:13.540
paint object the other one is the churn
that I was talking about if you are in

00:18:13.540 --> 00:18:13.550
that I was talking about if you are in
 

00:18:13.550 --> 00:18:15.220
that I was talking about if you are in
ondraw and if you're on draw is being

00:18:15.220 --> 00:18:15.230
ondraw and if you're on draw is being
 

00:18:15.230 --> 00:18:17.020
ondraw and if you're on draw is being
called on every frame of an animation

00:18:17.020 --> 00:18:17.030
called on every frame of an animation
 

00:18:17.030 --> 00:18:19.150
called on every frame of an animation
and on every frame you're allocating a

00:18:19.150 --> 00:18:19.160
and on every frame you're allocating a
 

00:18:19.160 --> 00:18:21.880
and on every frame you're allocating a
paint object well at some point that

00:18:21.880 --> 00:18:21.890
paint object well at some point that
 

00:18:21.890 --> 00:18:23.890
paint object well at some point that
means that your heap will fill up maybe

00:18:23.890 --> 00:18:23.900
means that your heap will fill up maybe
 

00:18:23.900 --> 00:18:25.660
means that your heap will fill up maybe
not in that animation but maybe in a

00:18:25.660 --> 00:18:25.670
not in that animation but maybe in a
 

00:18:25.670 --> 00:18:27.640
not in that animation but maybe in a
future animation at some point you're

00:18:27.640 --> 00:18:27.650
future animation at some point you're
 

00:18:27.650 --> 00:18:29.350
future animation at some point you're
gonna go to allocate that paint object

00:18:29.350 --> 00:18:29.360
gonna go to allocate that paint object
 

00:18:29.360 --> 00:18:32.740
gonna go to allocate that paint object
and it won't find enough space and then

00:18:32.740 --> 00:18:32.750
and it won't find enough space and then
 

00:18:32.750 --> 00:18:34.210
and it won't find enough space and then
it's gonna have to make the space so

00:18:34.210 --> 00:18:34.220
it's gonna have to make the space so
 

00:18:34.220 --> 00:18:35.170
it's gonna have to make the space so
you're in the middle of an animation

00:18:35.170 --> 00:18:35.180
you're in the middle of an animation
 

00:18:35.180 --> 00:18:36.970
you're in the middle of an animation
you're in your draw loop you're on the

00:18:36.970 --> 00:18:36.980
you're in your draw loop you're on the
 

00:18:36.980 --> 00:18:37.570
you're in your draw loop you're on the
UI thread

00:18:37.570 --> 00:18:37.580
UI thread
 

00:18:37.580 --> 00:18:39.520
UI thread
and GC says you know what I'm gonna have

00:18:39.520 --> 00:18:39.530
and GC says you know what I'm gonna have
 

00:18:39.530 --> 00:18:40.900
and GC says you know what I'm gonna have
to collect right now would you please

00:18:40.900 --> 00:18:40.910
to collect right now would you please
 

00:18:40.910 --> 00:18:42.580
to collect right now would you please
hang on for a few milliseconds and

00:18:42.580 --> 00:18:42.590
hang on for a few milliseconds and
 

00:18:42.590 --> 00:18:45.280
hang on for a few milliseconds and
that's what causes jank for the user so

00:18:45.280 --> 00:18:45.290
that's what causes jank for the user so
 

00:18:45.290 --> 00:18:48.250
that's what causes jank for the user so
don't do that when you don't need to one

00:18:48.250 --> 00:18:48.260
don't do that when you don't need to one
 

00:18:48.260 --> 00:18:50.260
don't do that when you don't need to one
of the strategies that we use internally

00:18:50.260 --> 00:18:50.270
of the strategies that we use internally
 

00:18:50.270 --> 00:18:51.580
of the strategies that we use internally
on the framework that I would encourage

00:18:51.580 --> 00:18:51.590
on the framework that I would encourage
 

00:18:51.590 --> 00:18:53.920
on the framework that I would encourage
people to look into in specific inner

00:18:53.920 --> 00:18:53.930
people to look into in specific inner
 

00:18:53.930 --> 00:18:56.410
people to look into in specific inner
loop situations like this is caching

00:18:56.410 --> 00:18:56.420
loop situations like this is caching
 

00:18:56.420 --> 00:18:59.680
loop situations like this is caching
objects so one of the one of the tricks

00:18:59.680 --> 00:18:59.690
objects so one of the one of the tricks
 

00:18:59.690 --> 00:19:01.750
objects so one of the one of the tricks
if you ever look at the source code or

00:19:01.750 --> 00:19:01.760
if you ever look at the source code or
 

00:19:01.760 --> 00:19:03.640
if you ever look at the source code or
the framework like you know view job or

00:19:03.640 --> 00:19:03.650
the framework like you know view job or
 

00:19:03.650 --> 00:19:05.800
the framework like you know view job or
any of the core classes there we will

00:19:05.800 --> 00:19:05.810
any of the core classes there we will
 

00:19:05.810 --> 00:19:07.690
any of the core classes there we will
keep around either instance classes or

00:19:07.690 --> 00:19:07.700
keep around either instance classes or
 

00:19:07.700 --> 00:19:10.390
keep around either instance classes or
in some limited cases static objects

00:19:10.390 --> 00:19:10.400
in some limited cases static objects
 

00:19:10.400 --> 00:19:14.350
in some limited cases static objects
that only get allocated lazily so when

00:19:14.350 --> 00:19:14.360
that only get allocated lazily so when
 

00:19:14.360 --> 00:19:16.000
that only get allocated lazily so when
we see the first time that okay we're

00:19:16.000 --> 00:19:16.010
we see the first time that okay we're
 

00:19:16.010 --> 00:19:18.100
we see the first time that okay we're
going to need a paint object or a rect

00:19:18.100 --> 00:19:18.110
going to need a paint object or a rect
 

00:19:18.110 --> 00:19:19.840
going to need a paint object or a rect
object or a point object for this

00:19:19.840 --> 00:19:19.850
object or a point object for this
 

00:19:19.850 --> 00:19:22.330
object or a point object for this
particular call if it's null we'll go

00:19:22.330 --> 00:19:22.340
particular call if it's null we'll go
 

00:19:22.340 --> 00:19:23.890
particular call if it's null we'll go
ahead and allocate it then and then

00:19:23.890 --> 00:19:23.900
ahead and allocate it then and then
 

00:19:23.900 --> 00:19:25.390
ahead and allocate it then and then
thereafter we'll just use that shared

00:19:25.390 --> 00:19:25.400
thereafter we'll just use that shared
 

00:19:25.400 --> 00:19:27.550
thereafter we'll just use that shared
object in a lot of cases so in the

00:19:27.550 --> 00:19:27.560
object in a lot of cases so in the
 

00:19:27.560 --> 00:19:30.010
object in a lot of cases so in the
ondraw situation chances are you don't

00:19:30.010 --> 00:19:30.020
ondraw situation chances are you don't
 

00:19:30.020 --> 00:19:31.930
ondraw situation chances are you don't
need that paint object for anything else

00:19:31.930 --> 00:19:31.940
need that paint object for anything else
 

00:19:31.940 --> 00:19:33.550
need that paint object for anything else
in that class so you could have an

00:19:33.550 --> 00:19:33.560
in that class so you could have an
 

00:19:33.560 --> 00:19:36.160
in that class so you could have an
instance variable or a static if you

00:19:36.160 --> 00:19:36.170
instance variable or a static if you
 

00:19:36.170 --> 00:19:38.560
instance variable or a static if you
want to manage it that way that only

00:19:38.560 --> 00:19:38.570
want to manage it that way that only
 

00:19:38.570 --> 00:19:40.900
want to manage it that way that only
gets used when you're actually in that

00:19:40.900 --> 00:19:40.910
gets used when you're actually in that
 

00:19:40.910 --> 00:19:43.120
gets used when you're actually in that
on draw method so it seems a little

00:19:43.120 --> 00:19:43.130
on draw method so it seems a little
 

00:19:43.130 --> 00:19:44.500
on draw method so it seems a little
silly you might as well have a local

00:19:44.500 --> 00:19:44.510
silly you might as well have a local
 

00:19:44.510 --> 00:19:46.170
silly you might as well have a local
field but because the memory concerns

00:19:46.170 --> 00:19:46.180
field but because the memory concerns
 

00:19:46.180 --> 00:19:48.760
field but because the memory concerns
you really want a cached object instead

00:19:48.760 --> 00:19:48.770
you really want a cached object instead
 

00:19:48.770 --> 00:19:50.650
you really want a cached object instead
so allocate it lazily and then use it

00:19:50.650 --> 00:19:50.660
so allocate it lazily and then use it
 

00:19:50.660 --> 00:19:52.360
so allocate it lazily and then use it
whenever you need to in that specific

00:19:52.360 --> 00:19:52.370
whenever you need to in that specific
 

00:19:52.370 --> 00:19:53.950
whenever you need to in that specific
method you have to be careful with this

00:19:53.950 --> 00:19:53.960
method you have to be careful with this
 

00:19:53.960 --> 00:19:55.840
method you have to be careful with this
obviously if you're actually accessing

00:19:55.840 --> 00:19:55.850
obviously if you're actually accessing
 

00:19:55.850 --> 00:19:58.000
obviously if you're actually accessing
that shared variable either instance or

00:19:58.000 --> 00:19:58.010
that shared variable either instance or
 

00:19:58.010 --> 00:20:00.070
that shared variable either instance or
static from multiple places that can

00:20:00.070 --> 00:20:00.080
static from multiple places that can
 

00:20:00.080 --> 00:20:02.380
static from multiple places that can
a little tricky so it's not a blanket

00:20:02.380 --> 00:20:02.390
a little tricky so it's not a blanket
 

00:20:02.390 --> 00:20:04.180
a little tricky so it's not a blanket
pattern just like all of these tips

00:20:04.180 --> 00:20:04.190
pattern just like all of these tips
 

00:20:04.190 --> 00:20:06.580
pattern just like all of these tips
these are not like hard and fast rules

00:20:06.580 --> 00:20:06.590
these are not like hard and fast rules
 

00:20:06.590 --> 00:20:09.130
these are not like hard and fast rules
but in general it's an approach that can

00:20:09.130 --> 00:20:09.140
but in general it's an approach that can
 

00:20:09.140 --> 00:20:12.610
but in general it's an approach that can
avoid the kind of expensive insidiously

00:20:12.610 --> 00:20:12.620
avoid the kind of expensive insidiously
 

00:20:12.620 --> 00:20:15.880
avoid the kind of expensive insidiously
expensive allocations that we see in

00:20:15.880 --> 00:20:15.890
expensive allocations that we see in
 

00:20:15.890 --> 00:20:19.810
expensive allocations that we see in
inner loops pools so object pools are

00:20:19.810 --> 00:20:19.820
inner loops pools so object pools are
 

00:20:19.820 --> 00:20:22.630
inner loops pools so object pools are
something that's traditional Java

00:20:22.630 --> 00:20:22.640
something that's traditional Java
 

00:20:22.640 --> 00:20:24.370
something that's traditional Java
certainly server developers kind of

00:20:24.370 --> 00:20:24.380
certainly server developers kind of
 

00:20:24.380 --> 00:20:26.610
certainly server developers kind of
walked away from years ago you know what

00:20:26.610 --> 00:20:26.620
walked away from years ago you know what
 

00:20:26.620 --> 00:20:29.320
walked away from years ago you know what
what the memory manager managed your

00:20:29.320 --> 00:20:29.330
what the memory manager managed your
 

00:20:29.330 --> 00:20:31.419
what the memory manager managed your
objects for you you don't need to but

00:20:31.419 --> 00:20:31.429
objects for you you don't need to but
 

00:20:31.429 --> 00:20:33.129
objects for you you don't need to but
because the allocation concerns that we

00:20:33.129 --> 00:20:33.139
because the allocation concerns that we
 

00:20:33.139 --> 00:20:34.690
because the allocation concerns that we
have on Android sometimes it's a good

00:20:34.690 --> 00:20:34.700
have on Android sometimes it's a good
 

00:20:34.700 --> 00:20:36.370
have on Android sometimes it's a good
idea to actually do this if these are

00:20:36.370 --> 00:20:36.380
idea to actually do this if these are
 

00:20:36.380 --> 00:20:40.269
idea to actually do this if these are
expensive objects to allocate maybe it's

00:20:40.269 --> 00:20:40.279
expensive objects to allocate maybe it's
 

00:20:40.279 --> 00:20:41.680
expensive objects to allocate maybe it's
better to actually have a small pool

00:20:41.680 --> 00:20:41.690
better to actually have a small pool
 

00:20:41.690 --> 00:20:43.000
better to actually have a small pool
with these things and keep them around

00:20:43.000 --> 00:20:43.010
with these things and keep them around
 

00:20:43.010 --> 00:20:45.070
with these things and keep them around
instead of having to reallocate one

00:20:45.070 --> 00:20:45.080
instead of having to reallocate one
 

00:20:45.080 --> 00:20:47.320
instead of having to reallocate one
every time you need it this also can be

00:20:47.320 --> 00:20:47.330
every time you need it this also can be
 

00:20:47.330 --> 00:20:49.120
every time you need it this also can be
tricky if they're being accessed from

00:20:49.120 --> 00:20:49.130
tricky if they're being accessed from
 

00:20:49.130 --> 00:20:51.399
tricky if they're being accessed from
different places in the code then

00:20:51.399 --> 00:20:51.409
different places in the code then
 

00:20:51.409 --> 00:20:52.990
different places in the code then
there's a bit of management overhead to

00:20:52.990 --> 00:20:53.000
there's a bit of management overhead to
 

00:20:53.000 --> 00:20:55.960
there's a bit of management overhead to
go with this this is not as easy thing

00:20:55.960 --> 00:20:55.970
go with this this is not as easy thing
 

00:20:55.970 --> 00:20:58.060
go with this this is not as easy thing
as the cached approach I was talking

00:20:58.060 --> 00:20:58.070
as the cached approach I was talking
 

00:20:58.070 --> 00:20:59.830
as the cached approach I was talking
about easier that's easy there's just a

00:20:59.830 --> 00:20:59.840
about easier that's easy there's just a
 

00:20:59.840 --> 00:21:01.750
about easier that's easy there's just a
single field to manage object pools

00:21:01.750 --> 00:21:01.760
single field to manage object pools
 

00:21:01.760 --> 00:21:03.370
single field to manage object pools
there's a bit more to it there's things

00:21:03.370 --> 00:21:03.380
there's a bit more to it there's things
 

00:21:03.380 --> 00:21:05.259
there's a bit more to it there's things
like LRU cache is that you can use to

00:21:05.259 --> 00:21:05.269
like LRU cache is that you can use to
 

00:21:05.269 --> 00:21:07.899
like LRU cache is that you can use to
make this easier but you know figure out

00:21:07.899 --> 00:21:07.909
make this easier but you know figure out
 

00:21:07.909 --> 00:21:11.820
make this easier but you know figure out
the right trade-off for your code arrays

00:21:11.820 --> 00:21:11.830
the right trade-off for your code arrays
 

00:21:11.830 --> 00:21:14.139
the right trade-off for your code arrays
ArrayList is pretty good I tend to use

00:21:14.139 --> 00:21:14.149
ArrayList is pretty good I tend to use
 

00:21:14.149 --> 00:21:16.000
ArrayList is pretty good I tend to use
it a lot it's it's one of the nicer and

00:21:16.000 --> 00:21:16.010
it a lot it's it's one of the nicer and
 

00:21:16.010 --> 00:21:18.009
it a lot it's it's one of the nicer and
more streamlined collections for storing

00:21:18.009 --> 00:21:18.019
more streamlined collections for storing
 

00:21:18.019 --> 00:21:20.259
more streamlined collections for storing
stuff there you keep adding to it it'll

00:21:20.259 --> 00:21:20.269
stuff there you keep adding to it it'll
 

00:21:20.269 --> 00:21:22.690
stuff there you keep adding to it it'll
reallocate when necessary but if you

00:21:22.690 --> 00:21:22.700
reallocate when necessary but if you
 

00:21:22.700 --> 00:21:26.370
reallocate when necessary but if you
just have a statically determined size

00:21:26.370 --> 00:21:26.380
just have a statically determined size
 

00:21:26.380 --> 00:21:29.560
just have a statically determined size
collection that you need array itself

00:21:29.560 --> 00:21:29.570
collection that you need array itself
 

00:21:29.570 --> 00:21:31.960
collection that you need array itself
tends to be more optimal than ArrayList

00:21:31.960 --> 00:21:31.970
tends to be more optimal than ArrayList
 

00:21:31.970 --> 00:21:32.950
tends to be more optimal than ArrayList
right

00:21:32.950 --> 00:21:32.960
right
 

00:21:32.960 --> 00:21:34.720
right
it doesn't need to allocate things in

00:21:34.720 --> 00:21:34.730
it doesn't need to allocate things in
 

00:21:34.730 --> 00:21:37.060
it doesn't need to allocate things in
there it's just got the the array itself

00:21:37.060 --> 00:21:37.070
there it's just got the the array itself
 

00:21:37.070 --> 00:21:38.919
there it's just got the the array itself
and then the objects that you put in it

00:21:38.919 --> 00:21:38.929
and then the objects that you put in it
 

00:21:38.929 --> 00:21:41.080
and then the objects that you put in it
so consider using arrays they're just a

00:21:41.080 --> 00:21:41.090
so consider using arrays they're just a
 

00:21:41.090 --> 00:21:43.539
so consider using arrays they're just a
bit more streamlined and optimal and

00:21:43.539 --> 00:21:43.549
bit more streamlined and optimal and
 

00:21:43.549 --> 00:21:45.669
bit more streamlined and optimal and
don't do as much turn for you no

00:21:45.669 --> 00:21:45.679
don't do as much turn for you no
 

00:21:45.679 --> 00:21:47.379
don't do as much turn for you no
reallocation that collections would do

00:21:47.379 --> 00:21:47.389
reallocation that collections would do
 

00:21:47.389 --> 00:21:50.350
reallocation that collections would do
automatically speaking of collections I

00:21:50.350 --> 00:21:50.360
automatically speaking of collections I
 

00:21:50.360 --> 00:21:51.850
automatically speaking of collections I
would encourage you to check out the

00:21:51.850 --> 00:21:51.860
would encourage you to check out the
 

00:21:51.860 --> 00:21:54.700
would encourage you to check out the
Android collections so their traditional

00:21:54.700 --> 00:21:54.710
Android collections so their traditional
 

00:21:54.710 --> 00:21:57.070
Android collections so their traditional
Java programming language collections

00:21:57.070 --> 00:21:57.080
Java programming language collections
 

00:21:57.080 --> 00:21:59.049
Java programming language collections
they're all very powerful and useful and

00:21:59.049 --> 00:21:59.059
they're all very powerful and useful and
 

00:21:59.059 --> 00:22:01.210
they're all very powerful and useful and
there's probably still the right thing

00:22:01.210 --> 00:22:01.220
there's probably still the right thing
 

00:22:01.220 --> 00:22:03.129
there's probably still the right thing
to use for large collections like

00:22:03.129 --> 00:22:03.139
to use for large collections like
 

00:22:03.139 --> 00:22:05.500
to use for large collections like
hashmap awesome if you have a really

00:22:05.500 --> 00:22:05.510
hashmap awesome if you have a really
 

00:22:05.510 --> 00:22:06.909
hashmap awesome if you have a really
large amount of data that you need to

00:22:06.909 --> 00:22:06.919
large amount of data that you need to
 

00:22:06.919 --> 00:22:10.720
large amount of data that you need to
store but check out a ray map instead if

00:22:10.720 --> 00:22:10.730
store but check out a ray map instead if
 

00:22:10.730 --> 00:22:12.190
store but check out a ray map instead if
you actually just have a smaller

00:22:12.190 --> 00:22:12.200
you actually just have a smaller
 

00:22:12.200 --> 00:22:14.840
you actually just have a smaller
collection it avoids a lot of the

00:22:14.840 --> 00:22:14.850
collection it avoids a lot of the
 

00:22:14.850 --> 00:22:19.100
collection it avoids a lot of the
of the boxing as well as the allocations

00:22:19.100 --> 00:22:19.110
of the boxing as well as the allocations
 

00:22:19.110 --> 00:22:22.670
of the boxing as well as the allocations
that are inherent in hashmap itself so

00:22:22.670 --> 00:22:22.680
that are inherent in hashmap itself so
 

00:22:22.680 --> 00:22:24.290
that are inherent in hashmap itself so
there's there's a bunch of collections

00:22:24.290 --> 00:22:24.300
there's there's a bunch of collections
 

00:22:24.300 --> 00:22:25.790
there's there's a bunch of collections
in Android there's a ray map in the

00:22:25.790 --> 00:22:25.800
in Android there's a ray map in the
 

00:22:25.800 --> 00:22:27.970
in Android there's a ray map in the
support library there's simpler a map

00:22:27.970 --> 00:22:27.980
support library there's simpler a map
 

00:22:27.980 --> 00:22:31.250
support library there's simpler a map
then there's a sparse array there's

00:22:31.250 --> 00:22:31.260
then there's a sparse array there's
 

00:22:31.260 --> 00:22:33.470
then there's a sparse array there's
actually a bunch of sparse things long

00:22:33.470 --> 00:22:33.480
actually a bunch of sparse things long
 

00:22:33.480 --> 00:22:38.000
actually a bunch of sparse things long
sparse long in sparse long in lots of

00:22:38.000 --> 00:22:38.010
sparse long in sparse long in lots of
 

00:22:38.010 --> 00:22:39.140
sparse long in sparse long in lots of
different combinations but they

00:22:39.140 --> 00:22:39.150
different combinations but they
 

00:22:39.150 --> 00:22:42.560
different combinations but they
basically use primitives as keys instead

00:22:42.560 --> 00:22:42.570
basically use primitives as keys instead
 

00:22:42.570 --> 00:22:47.540
basically use primitives as keys instead
of the auto boxed Java language versions

00:22:47.540 --> 00:22:47.550
of the auto boxed Java language versions
 

00:22:47.550 --> 00:22:49.190
of the auto boxed Java language versions
of those like you know not capital L

00:22:49.190 --> 00:22:49.200
of those like you know not capital L
 

00:22:49.200 --> 00:22:51.770
of those like you know not capital L
long but instead a primitive long

00:22:51.770 --> 00:22:51.780
long but instead a primitive long
 

00:22:51.780 --> 00:22:55.460
long but instead a primitive long
wouldn't it be nice methods that mutate

00:22:55.460 --> 00:22:55.470
wouldn't it be nice methods that mutate
 

00:22:55.470 --> 00:22:57.010
wouldn't it be nice methods that mutate
this is another pattern that I think

00:22:57.010 --> 00:22:57.020
this is another pattern that I think
 

00:22:57.020 --> 00:22:59.090
this is another pattern that I think
traditional Java programmers walked away

00:22:59.090 --> 00:22:59.100
traditional Java programmers walked away
 

00:22:59.100 --> 00:23:02.950
traditional Java programmers walked away
from years ago maybe holding their nose

00:23:02.950 --> 00:23:02.960
from years ago maybe holding their nose
 

00:23:02.960 --> 00:23:05.990
from years ago maybe holding their nose
in general so so let's say you want to

00:23:05.990 --> 00:23:06.000
in general so so let's say you want to
 

00:23:06.000 --> 00:23:08.060
in general so so let's say you want to
pass in an X Y and you want to get a

00:23:08.060 --> 00:23:08.070
pass in an X Y and you want to get a
 

00:23:08.070 --> 00:23:11.210
pass in an X Y and you want to get a
point return because you need that point

00:23:11.210 --> 00:23:11.220
point return because you need that point
 

00:23:11.220 --> 00:23:12.800
point return because you need that point
data structure to pass into some other

00:23:12.800 --> 00:23:12.810
data structure to pass into some other
 

00:23:12.810 --> 00:23:14.270
data structure to pass into some other
method right so you have this utility

00:23:14.270 --> 00:23:14.280
method right so you have this utility
 

00:23:14.280 --> 00:23:16.130
method right so you have this utility
function I'm gonna pass in X Y I'm gonna

00:23:16.130 --> 00:23:16.140
function I'm gonna pass in X Y I'm gonna
 

00:23:16.140 --> 00:23:18.140
function I'm gonna pass in X Y I'm gonna
get point back really stupid example you

00:23:18.140 --> 00:23:18.150
get point back really stupid example you
 

00:23:18.150 --> 00:23:20.080
get point back really stupid example you
could create your point on your own but

00:23:20.080 --> 00:23:20.090
could create your point on your own but
 

00:23:20.090 --> 00:23:29.210
could create your point on your own but
to illustrate the point so traditionally

00:23:29.210 --> 00:23:29.220
to illustrate the point so traditionally
 

00:23:29.220 --> 00:23:30.800
to illustrate the point so traditionally
you would pass in X Y and it would

00:23:30.800 --> 00:23:30.810
you would pass in X Y and it would
 

00:23:30.810 --> 00:23:32.210
you would pass in X Y and it would
allocate a point it would pass it back

00:23:32.210 --> 00:23:32.220
allocate a point it would pass it back
 

00:23:32.220 --> 00:23:33.380
allocate a point it would pass it back
to you not a big deal it's just

00:23:33.380 --> 00:23:33.390
to you not a big deal it's just
 

00:23:33.390 --> 00:23:35.360
to you not a big deal it's just
temporary object right again if you're

00:23:35.360 --> 00:23:35.370
temporary object right again if you're
 

00:23:35.370 --> 00:23:37.580
temporary object right again if you're
in your inner loop allocating is in

00:23:37.580 --> 00:23:37.590
in your inner loop allocating is in
 

00:23:37.590 --> 00:23:39.260
in your inner loop allocating is in
general bad wouldn't it be nice if you

00:23:39.260 --> 00:23:39.270
general bad wouldn't it be nice if you
 

00:23:39.270 --> 00:23:40.940
general bad wouldn't it be nice if you
didn't have to reallocate that thing all

00:23:40.940 --> 00:23:40.950
didn't have to reallocate that thing all
 

00:23:40.950 --> 00:23:42.530
didn't have to reallocate that thing all
the time that's just a temporary object

00:23:42.530 --> 00:23:42.540
the time that's just a temporary object
 

00:23:42.540 --> 00:23:44.360
the time that's just a temporary object
so instead what you can do is keep a

00:23:44.360 --> 00:23:44.370
so instead what you can do is keep a
 

00:23:44.370 --> 00:23:47.180
so instead what you can do is keep a
cached object in the caller and then

00:23:47.180 --> 00:23:47.190
cached object in the caller and then
 

00:23:47.190 --> 00:23:51.110
cached object in the caller and then
call a mutate a mutating version of that

00:23:51.110 --> 00:23:51.120
call a mutate a mutating version of that
 

00:23:51.120 --> 00:23:52.820
call a mutate a mutating version of that
method instead so instead of passing in

00:23:52.820 --> 00:23:52.830
method instead so instead of passing in
 

00:23:52.830 --> 00:23:55.880
method instead so instead of passing in
X Y maybe you pass in X Y and a point

00:23:55.880 --> 00:23:55.890
X Y maybe you pass in X Y and a point
 

00:23:55.890 --> 00:23:57.830
X Y maybe you pass in X Y and a point
data structure and then it fills in the

00:23:57.830 --> 00:23:57.840
data structure and then it fills in the
 

00:23:57.840 --> 00:23:59.540
data structure and then it fills in the
data structure and then that gives you

00:23:59.540 --> 00:23:59.550
data structure and then that gives you
 

00:23:59.550 --> 00:24:01.880
data structure and then that gives you
the option to you know allocate it on

00:24:01.880 --> 00:24:01.890
the option to you know allocate it on
 

00:24:01.890 --> 00:24:03.920
the option to you know allocate it on
the fly if you really want to or to keep

00:24:03.920 --> 00:24:03.930
the fly if you really want to or to keep
 

00:24:03.930 --> 00:24:06.830
the fly if you really want to or to keep
it and use and reuse a cached object

00:24:06.830 --> 00:24:06.840
it and use and reuse a cached object
 

00:24:06.840 --> 00:24:08.480
it and use and reuse a cached object
instead so if you look through the

00:24:08.480 --> 00:24:08.490
instead so if you look through the
 

00:24:08.490 --> 00:24:09.890
instead so if you look through the
Android source code especially in the

00:24:09.890 --> 00:24:09.900
Android source code especially in the
 

00:24:09.900 --> 00:24:12.140
Android source code especially in the
framework you'll see a lot of instances

00:24:12.140 --> 00:24:12.150
framework you'll see a lot of instances
 

00:24:12.150 --> 00:24:14.660
framework you'll see a lot of instances
of this internally where we'll pass an

00:24:14.660 --> 00:24:14.670
of this internally where we'll pass an
 

00:24:14.670 --> 00:24:17.090
of this internally where we'll pass an
erect that gets filled in during you

00:24:17.090 --> 00:24:17.100
erect that gets filled in during you
 

00:24:17.100 --> 00:24:19.640
erect that gets filled in during you
know layouts or whatever and this is

00:24:19.640 --> 00:24:19.650
know layouts or whatever and this is
 

00:24:19.650 --> 00:24:21.170
know layouts or whatever and this is
specifically to avoid the temporary

00:24:21.170 --> 00:24:21.180
specifically to avoid the temporary
 

00:24:21.180 --> 00:24:23.330
specifically to avoid the temporary
allocations that are necessary to pass

00:24:23.330 --> 00:24:23.340
allocations that are necessary to pass
 

00:24:23.340 --> 00:24:25.730
allocations that are necessary to pass
back richer data than simply a single

00:24:25.730 --> 00:24:25.740
back richer data than simply a single
 

00:24:25.740 --> 00:24:27.769
back richer data than simply a single
primitive to return value

00:24:27.769 --> 00:24:27.779
primitive to return value
 

00:24:27.779 --> 00:24:30.149
primitive to return value
and speaking of primitives we have

00:24:30.149 --> 00:24:30.159
and speaking of primitives we have
 

00:24:30.159 --> 00:24:32.039
and speaking of primitives we have
primitive types we really like them in

00:24:32.039 --> 00:24:32.049
primitive types we really like them in
 

00:24:32.049 --> 00:24:34.769
primitive types we really like them in
Android in general if you use primitive

00:24:34.769 --> 00:24:34.779
Android in general if you use primitive
 

00:24:34.779 --> 00:24:36.839
Android in general if you use primitive
types you're going to avoid all the

00:24:36.839 --> 00:24:36.849
types you're going to avoid all the
 

00:24:36.849 --> 00:24:38.489
types you're going to avoid all the
boxing that's inherent in using the

00:24:38.489 --> 00:24:38.499
boxing that's inherent in using the
 

00:24:38.499 --> 00:24:40.320
boxing that's inherent in using the
object equivalents so if you write a

00:24:40.320 --> 00:24:40.330
object equivalents so if you write a
 

00:24:40.330 --> 00:24:42.329
object equivalents so if you write a
method that takes a capital F float and

00:24:42.329 --> 00:24:42.339
method that takes a capital F float and
 

00:24:42.339 --> 00:24:44.700
method that takes a capital F float and
you're you know running an animation or

00:24:44.700 --> 00:24:44.710
you're you know running an animation or
 

00:24:44.710 --> 00:24:46.259
you're you know running an animation or
doing calculation that has a primitive

00:24:46.259 --> 00:24:46.269
doing calculation that has a primitive
 

00:24:46.269 --> 00:24:47.820
doing calculation that has a primitive
float when you call that method it's

00:24:47.820 --> 00:24:47.830
float when you call that method it's
 

00:24:47.830 --> 00:24:49.289
float when you call that method it's
automatically going to box it's gonna

00:24:49.289 --> 00:24:49.299
automatically going to box it's gonna
 

00:24:49.299 --> 00:24:51.149
automatically going to box it's gonna
create a capital F float out of it

00:24:51.149 --> 00:24:51.159
create a capital F float out of it
 

00:24:51.159 --> 00:24:53.700
create a capital F float out of it
there's slightly more overhead in

00:24:53.700 --> 00:24:53.710
there's slightly more overhead in
 

00:24:53.710 --> 00:24:55.469
there's slightly more overhead in
getting the value of that I'm not as

00:24:55.469 --> 00:24:55.479
getting the value of that I'm not as
 

00:24:55.479 --> 00:24:57.089
getting the value of that I'm not as
concerned about that I am concerned

00:24:57.089 --> 00:24:57.099
concerned about that I am concerned
 

00:24:57.099 --> 00:24:58.950
concerned about that I am concerned
about creating garbage creating the

00:24:58.950 --> 00:24:58.960
about creating garbage creating the
 

00:24:58.960 --> 00:25:00.959
about creating garbage creating the
small temporary object when you really

00:25:00.959 --> 00:25:00.969
small temporary object when you really
 

00:25:00.969 --> 00:25:03.180
small temporary object when you really
didn't need to so as much as you can

00:25:03.180 --> 00:25:03.190
didn't need to so as much as you can
 

00:25:03.190 --> 00:25:05.399
didn't need to so as much as you can
stick to the primitives the the

00:25:05.399 --> 00:25:05.409
stick to the primitives the the
 

00:25:05.409 --> 00:25:07.289
stick to the primitives the the
collection classes obviously use the

00:25:07.289 --> 00:25:07.299
collection classes obviously use the
 

00:25:07.299 --> 00:25:08.849
collection classes obviously use the
object types instead so you can't really

00:25:08.849 --> 00:25:08.859
object types instead so you can't really
 

00:25:08.859 --> 00:25:11.879
object types instead so you can't really
get around it there but for all of your

00:25:11.879 --> 00:25:11.889
get around it there but for all of your
 

00:25:11.889 --> 00:25:13.139
get around it there but for all of your
internal methods that aren't using

00:25:13.139 --> 00:25:13.149
internal methods that aren't using
 

00:25:13.149 --> 00:25:15.209
internal methods that aren't using
collections there's no reason to not use

00:25:15.209 --> 00:25:15.219
collections there's no reason to not use
 

00:25:15.219 --> 00:25:17.099
collections there's no reason to not use
the parameters instead they just tend to

00:25:17.099 --> 00:25:17.109
the parameters instead they just tend to
 

00:25:17.109 --> 00:25:18.899
the parameters instead they just tend to
be a lot more streamlined and avoid the

00:25:18.899 --> 00:25:18.909
be a lot more streamlined and avoid the
 

00:25:18.909 --> 00:25:20.430
be a lot more streamlined and avoid the
memory situations that we're talking

00:25:20.430 --> 00:25:20.440
memory situations that we're talking
 

00:25:20.440 --> 00:25:22.680
memory situations that we're talking
about there are a lot of language things

00:25:22.680 --> 00:25:22.690
about there are a lot of language things
 

00:25:22.690 --> 00:25:24.180
about there are a lot of language things
that you can trip over without really

00:25:24.180 --> 00:25:24.190
that you can trip over without really
 

00:25:24.190 --> 00:25:27.719
that you can trip over without really
realizing why iterators is one of my

00:25:27.719 --> 00:25:27.729
realizing why iterators is one of my
 

00:25:27.729 --> 00:25:30.329
realizing why iterators is one of my
favorite examples so I love the for each

00:25:30.329 --> 00:25:30.339
favorite examples so I love the for each
 

00:25:30.339 --> 00:25:32.609
favorite examples so I love the for each
syntax I don't know why it's called the

00:25:32.609 --> 00:25:32.619
syntax I don't know why it's called the
 

00:25:32.619 --> 00:25:34.799
syntax I don't know why it's called the
for each syntax since there's no each in

00:25:34.799 --> 00:25:34.809
for each syntax since there's no each in
 

00:25:34.809 --> 00:25:37.379
for each syntax since there's no each in
the language somehow we adopted that

00:25:37.379 --> 00:25:37.389
the language somehow we adopted that
 

00:25:37.389 --> 00:25:39.119
the language somehow we adopted that
that way of referring to it and then you

00:25:39.119 --> 00:25:39.129
that way of referring to it and then you
 

00:25:39.129 --> 00:25:40.469
that way of referring to it and then you
go looking for the primitive and it's

00:25:40.469 --> 00:25:40.479
go looking for the primitive and it's
 

00:25:40.479 --> 00:25:41.339
go looking for the primitive and it's
not there

00:25:41.339 --> 00:25:41.349
not there
 

00:25:41.349 --> 00:25:44.159
not there
they should just maybe call it a four so

00:25:44.159 --> 00:25:44.169
they should just maybe call it a four so
 

00:25:44.169 --> 00:25:45.810
they should just maybe call it a four so
it's very it's very convenient came out

00:25:45.810 --> 00:25:45.820
it's very it's very convenient came out
 

00:25:45.820 --> 00:25:48.570
it's very it's very convenient came out
in JDK one five and you say you know for

00:25:48.570 --> 00:25:48.580
in JDK one five and you say you know for
 

00:25:48.580 --> 00:25:53.129
in JDK one five and you say you know for
object Oh in this thing and then it in

00:25:53.129 --> 00:25:53.139
object Oh in this thing and then it in
 

00:25:53.139 --> 00:25:54.450
object Oh in this thing and then it in
rates through that collection very

00:25:54.450 --> 00:25:54.460
rates through that collection very
 

00:25:54.460 --> 00:25:56.700
rates through that collection very
convenient what's going on under the

00:25:56.700 --> 00:25:56.710
convenient what's going on under the
 

00:25:56.710 --> 00:25:58.289
convenient what's going on under the
hood though this is syntactic sugar it

00:25:58.289 --> 00:25:58.299
hood though this is syntactic sugar it
 

00:25:58.299 --> 00:26:00.839
hood though this is syntactic sugar it
is creating an iterator for you right so

00:26:00.839 --> 00:26:00.849
is creating an iterator for you right so
 

00:26:00.849 --> 00:26:02.279
is creating an iterator for you right so
it's allocating that object then it's

00:26:02.279 --> 00:26:02.289
it's allocating that object then it's
 

00:26:02.289 --> 00:26:04.979
it's allocating that object then it's
doing the normal iteration using that

00:26:04.979 --> 00:26:04.989
doing the normal iteration using that
 

00:26:04.989 --> 00:26:08.249
doing the normal iteration using that
iterator object the iterator approach

00:26:08.249 --> 00:26:08.259
iterator object the iterator approach
 

00:26:08.259 --> 00:26:10.709
iterator object the iterator approach
was kind of ugly and obtuse I don't

00:26:10.709 --> 00:26:10.719
was kind of ugly and obtuse I don't
 

00:26:10.719 --> 00:26:12.599
was kind of ugly and obtuse I don't
think people enjoy using that the for

00:26:12.599 --> 00:26:12.609
think people enjoy using that the for
 

00:26:12.609 --> 00:26:14.999
think people enjoy using that the for
each works around that it makes a nice

00:26:14.999 --> 00:26:15.009
each works around that it makes a nice
 

00:26:15.009 --> 00:26:16.289
each works around that it makes a nice
streamlined thing but it's still doing

00:26:16.289 --> 00:26:16.299
streamlined thing but it's still doing
 

00:26:16.299 --> 00:26:17.789
streamlined thing but it's still doing
the same thing under under the hood in

00:26:17.789 --> 00:26:17.799
the same thing under under the hood in
 

00:26:17.799 --> 00:26:20.700
the same thing under under the hood in
particular if your collection is empty

00:26:20.700 --> 00:26:20.710
particular if your collection is empty
 

00:26:20.710 --> 00:26:22.909
particular if your collection is empty
it's gonna create an iterator anyway

00:26:22.909 --> 00:26:22.919
it's gonna create an iterator anyway
 

00:26:22.919 --> 00:26:25.349
it's gonna create an iterator anyway
right it does not know that it's empty

00:26:25.349 --> 00:26:25.359
right it does not know that it's empty
 

00:26:25.359 --> 00:26:26.909
right it does not know that it's empty
until it creates the iterator and then

00:26:26.909 --> 00:26:26.919
until it creates the iterator and then
 

00:26:26.919 --> 00:26:28.799
until it creates the iterator and then
tries to get the first item and then

00:26:28.799 --> 00:26:28.809
tries to get the first item and then
 

00:26:28.809 --> 00:26:30.119
tries to get the first item and then
says oh you're empty you don't need to

00:26:30.119 --> 00:26:30.129
says oh you're empty you don't need to
 

00:26:30.129 --> 00:26:31.769
says oh you're empty you don't need to
do this so one of the optimization

00:26:31.769 --> 00:26:31.779
do this so one of the optimization
 

00:26:31.779 --> 00:26:34.229
do this so one of the optimization
optimizations that we did along the way

00:26:34.229 --> 00:26:34.239
optimizations that we did along the way
 

00:26:34.239 --> 00:26:35.909
optimizations that we did along the way
to creating the new animation system in

00:26:35.909 --> 00:26:35.919
to creating the new animation system in
 

00:26:35.919 --> 00:26:39.389
to creating the new animation system in
honeycomb was to eliminate all the

00:26:39.389 --> 00:26:39.399
honeycomb was to eliminate all the
 

00:26:39.399 --> 00:26:40.620
honeycomb was to eliminate all the
allocations that were going on

00:26:40.620 --> 00:26:40.630
allocations that were going on
 

00:26:40.630 --> 00:26:42.390
allocations that were going on
every frame so we have this new

00:26:42.390 --> 00:26:42.400
every frame so we have this new
 

00:26:42.400 --> 00:26:43.920
every frame so we have this new
animation system we use this tool

00:26:43.920 --> 00:26:43.930
animation system we use this tool
 

00:26:43.930 --> 00:26:45.960
animation system we use this tool
internally called allocation tracker I

00:26:45.960 --> 00:26:45.970
internally called allocation tracker I
 

00:26:45.970 --> 00:26:47.820
internally called allocation tracker I
would encourage everybody to use this to

00:26:47.820 --> 00:26:47.830
would encourage everybody to use this to
 

00:26:47.830 --> 00:26:48.900
would encourage everybody to use this to
make sure that you're actually using

00:26:48.900 --> 00:26:48.910
make sure that you're actually using
 

00:26:48.910 --> 00:26:51.060
make sure that you're actually using
memory correct correctly so I would

00:26:51.060 --> 00:26:51.070
memory correct correctly so I would
 

00:26:51.070 --> 00:26:52.830
memory correct correctly so I would
start the animation I would start

00:26:52.830 --> 00:26:52.840
start the animation I would start
 

00:26:52.840 --> 00:26:55.170
start the animation I would start
allocation tracking I would collect the

00:26:55.170 --> 00:26:55.180
allocation tracking I would collect the
 

00:26:55.180 --> 00:26:56.820
allocation tracking I would collect the
allocations and then the animation would

00:26:56.820 --> 00:26:56.830
allocations and then the animation would
 

00:26:56.830 --> 00:26:58.080
allocations and then the animation would
finish right I don't care if we're

00:26:58.080 --> 00:26:58.090
finish right I don't care if we're
 

00:26:58.090 --> 00:26:59.160
finish right I don't care if we're
allocating at the beginning in the end

00:26:59.160 --> 00:26:59.170
allocating at the beginning in the end
 

00:26:59.170 --> 00:27:01.470
allocating at the beginning in the end
to some extent that's unavoidable right

00:27:01.470 --> 00:27:01.480
to some extent that's unavoidable right
 

00:27:01.480 --> 00:27:03.930
to some extent that's unavoidable right
this is Java it's a memory garbage

00:27:03.930 --> 00:27:03.940
this is Java it's a memory garbage
 

00:27:03.940 --> 00:27:05.220
this is Java it's a memory garbage
collecting language you're going to

00:27:05.220 --> 00:27:05.230
collecting language you're going to
 

00:27:05.230 --> 00:27:06.660
collecting language you're going to
allocate objects what you don't want to

00:27:06.660 --> 00:27:06.670
allocate objects what you don't want to
 

00:27:06.670 --> 00:27:08.700
allocate objects what you don't want to
do is allocate during the animation like

00:27:08.700 --> 00:27:08.710
do is allocate during the animation like
 

00:27:08.710 --> 00:27:10.740
do is allocate during the animation like
during the actual frames and then I saw

00:27:10.740 --> 00:27:10.750
during the actual frames and then I saw
 

00:27:10.750 --> 00:27:13.020
during the actual frames and then I saw
that on every single frame we were

00:27:13.020 --> 00:27:13.030
that on every single frame we were
 

00:27:13.030 --> 00:27:15.600
that on every single frame we were
allocating objects for listeners what

00:27:15.600 --> 00:27:15.610
allocating objects for listeners what
 

00:27:15.610 --> 00:27:17.700
allocating objects for listeners what
was going on was we have this view tree

00:27:17.700 --> 00:27:17.710
was going on was we have this view tree
 

00:27:17.710 --> 00:27:19.260
was going on was we have this view tree
observer where you can listen to various

00:27:19.260 --> 00:27:19.270
observer where you can listen to various
 

00:27:19.270 --> 00:27:22.500
observer where you can listen to various
events going on layouts pre draw draw

00:27:22.500 --> 00:27:22.510
events going on layouts pre draw draw
 

00:27:22.510 --> 00:27:24.120
events going on layouts pre draw draw
the things that are happening in the

00:27:24.120 --> 00:27:24.130
the things that are happening in the
 

00:27:24.130 --> 00:27:26.130
the things that are happening in the
interview hierarchy down on every frame

00:27:26.130 --> 00:27:26.140
interview hierarchy down on every frame
 

00:27:26.140 --> 00:27:29.070
interview hierarchy down on every frame
we would say for you know view tree

00:27:29.070 --> 00:27:29.080
we would say for you know view tree
 

00:27:29.080 --> 00:27:31.860
we would say for you know view tree
observer listener whatever in this

00:27:31.860 --> 00:27:31.870
observer listener whatever in this
 

00:27:31.870 --> 00:27:33.690
observer listener whatever in this
collection then we would iterate through

00:27:33.690 --> 00:27:33.700
collection then we would iterate through
 

00:27:33.700 --> 00:27:35.550
collection then we would iterate through
and we would do something in general

00:27:35.550 --> 00:27:35.560
and we would do something in general
 

00:27:35.560 --> 00:27:37.380
and we would do something in general
nobody actually added a listener it's

00:27:37.380 --> 00:27:37.390
nobody actually added a listener it's
 

00:27:37.390 --> 00:27:39.210
nobody actually added a listener it's
not typical to have a listener there but

00:27:39.210 --> 00:27:39.220
not typical to have a listener there but
 

00:27:39.220 --> 00:27:40.830
not typical to have a listener there but
we would create an iterator on every

00:27:40.830 --> 00:27:40.840
we would create an iterator on every
 

00:27:40.840 --> 00:27:42.840
we would create an iterator on every
single frame anyway because that's what

00:27:42.840 --> 00:27:42.850
single frame anyway because that's what
 

00:27:42.850 --> 00:27:45.900
single frame anyway because that's what
4-h did for us so there's one specific

00:27:45.900 --> 00:27:45.910
4-h did for us so there's one specific
 

00:27:45.910 --> 00:27:47.670
4-h did for us so there's one specific
case where it doesn't do that which is

00:27:47.670 --> 00:27:47.680
case where it doesn't do that which is
 

00:27:47.680 --> 00:27:49.350
case where it doesn't do that which is
if it's a primitive array it actually

00:27:49.350 --> 00:27:49.360
if it's a primitive array it actually
 

00:27:49.360 --> 00:27:51.480
if it's a primitive array it actually
does the right thing and will not create

00:27:51.480 --> 00:27:51.490
does the right thing and will not create
 

00:27:51.490 --> 00:27:54.270
does the right thing and will not create
a iterator for you so yeh but otherwise

00:27:54.270 --> 00:27:54.280
a iterator for you so yeh but otherwise
 

00:27:54.280 --> 00:27:57.360
a iterator for you so yeh but otherwise
it's it's kind of a good thing to maybe

00:27:57.360 --> 00:27:57.370
it's it's kind of a good thing to maybe
 

00:27:57.370 --> 00:27:59.970
it's it's kind of a good thing to maybe
avoid if you're not really sure whether

00:27:59.970 --> 00:27:59.980
avoid if you're not really sure whether
 

00:27:59.980 --> 00:28:02.040
avoid if you're not really sure whether
it's going to create things or you can

00:28:02.040 --> 00:28:02.050
it's going to create things or you can
 

00:28:02.050 --> 00:28:04.740
it's going to create things or you can
certainly go back to to the old approach

00:28:04.740 --> 00:28:04.750
certainly go back to to the old approach
 

00:28:04.750 --> 00:28:07.350
certainly go back to to the old approach
of doing an actual for loop instead and

00:28:07.350 --> 00:28:07.360
of doing an actual for loop instead and
 

00:28:07.360 --> 00:28:09.120
of doing an actual for loop instead and
just get the items in the array and then

00:28:09.120 --> 00:28:09.130
just get the items in the array and then
 

00:28:09.130 --> 00:28:10.710
just get the items in the array and then
it doesn't advance to the first one if

00:28:10.710 --> 00:28:10.720
it doesn't advance to the first one if
 

00:28:10.720 --> 00:28:14.400
it doesn't advance to the first one if
it didn't need it or if you use it just

00:28:14.400 --> 00:28:14.410
it didn't need it or if you use it just
 

00:28:14.410 --> 00:28:15.780
it didn't need it or if you use it just
be aware of when it's actually going to

00:28:15.780 --> 00:28:15.790
be aware of when it's actually going to
 

00:28:15.790 --> 00:28:17.190
be aware of when it's actually going to
cause an allocation when you don't want

00:28:17.190 --> 00:28:17.200
cause an allocation when you don't want
 

00:28:17.200 --> 00:28:21.330
cause an allocation when you don't want
it to wait let's go back yeah this one

00:28:21.330 --> 00:28:21.340
it to wait let's go back yeah this one
 

00:28:21.340 --> 00:28:23.810
it to wait let's go back yeah this one
so let's talk about a news

00:28:23.810 --> 00:28:23.820
so let's talk about a news
 

00:28:23.820 --> 00:28:27.060
so let's talk about a news
no more I'm really tired of this topic

00:28:27.060 --> 00:28:27.070
no more I'm really tired of this topic
 

00:28:27.070 --> 00:28:29.040
no more I'm really tired of this topic
at this conference go to the article and

00:28:29.040 --> 00:28:29.050
at this conference go to the article and
 

00:28:29.050 --> 00:28:30.930
at this conference go to the article and
reads there's nuances to using them

00:28:30.930 --> 00:28:30.940
reads there's nuances to using them
 

00:28:30.940 --> 00:28:32.850
reads there's nuances to using them
please understand the overhead inherent

00:28:32.850 --> 00:28:32.860
please understand the overhead inherent
 

00:28:32.860 --> 00:28:34.680
please understand the overhead inherent
in a news and make the right decision

00:28:34.680 --> 00:28:34.690
in a news and make the right decision
 

00:28:34.690 --> 00:28:40.020
in a news and make the right decision
for your code moving on finalizar z' so

00:28:40.020 --> 00:28:40.030
for your code moving on finalizar z' so
 

00:28:40.030 --> 00:28:41.730
for your code moving on finalizar z' so
one of the things is not obvious about

00:28:41.730 --> 00:28:41.740
one of the things is not obvious about
 

00:28:41.740 --> 00:28:44.250
one of the things is not obvious about
finalized errs is nuances in the

00:28:44.250 --> 00:28:44.260
finalized errs is nuances in the
 

00:28:44.260 --> 00:28:46.980
finalized errs is nuances in the
language spec means that to finalize any

00:28:46.980 --> 00:28:46.990
language spec means that to finalize any
 

00:28:46.990 --> 00:28:49.800
language spec means that to finalize any
object we actually need to do a GC twice

00:28:49.800 --> 00:28:49.810
object we actually need to do a GC twice
 

00:28:49.810 --> 00:28:52.050
object we actually need to do a GC twice
so whenever you have a finalized are

00:28:52.050 --> 00:28:52.060
so whenever you have a finalized are
 

00:28:52.060 --> 00:28:53.580
so whenever you have a finalized are
declared on your class you're basically

00:28:53.580 --> 00:28:53.590
declared on your class you're basically
 

00:28:53.590 --> 00:28:54.400
declared on your class you're basically
forcing

00:28:54.400 --> 00:28:54.410
forcing
 

00:28:54.410 --> 00:28:57.250
forcing
a future G C twice and you kind of want

00:28:57.250 --> 00:28:57.260
a future G C twice and you kind of want
 

00:28:57.260 --> 00:28:59.080
a future G C twice and you kind of want
to avoid every single one so why are you

00:28:59.080 --> 00:28:59.090
to avoid every single one so why are you
 

00:28:59.090 --> 00:29:00.970
to avoid every single one so why are you
forcing two on the system there are

00:29:00.970 --> 00:29:00.980
forcing two on the system there are
 

00:29:00.980 --> 00:29:02.650
forcing two on the system there are
particular situations that really

00:29:02.650 --> 00:29:02.660
particular situations that really
 

00:29:02.660 --> 00:29:04.810
particular situations that really
require finalized errs we do use them

00:29:04.810 --> 00:29:04.820
require finalized errs we do use them
 

00:29:04.820 --> 00:29:07.090
require finalized errs we do use them
internally specifically when we have

00:29:07.090 --> 00:29:07.100
internally specifically when we have
 

00:29:07.100 --> 00:29:08.770
internally specifically when we have
NATO native objects that need to be

00:29:08.770 --> 00:29:08.780
NATO native objects that need to be
 

00:29:08.780 --> 00:29:10.810
NATO native objects that need to be
cleared so we need to know when that

00:29:10.810 --> 00:29:10.820
cleared so we need to know when that
 

00:29:10.820 --> 00:29:12.910
cleared so we need to know when that
thing went away so that on the native

00:29:12.910 --> 00:29:12.920
thing went away so that on the native
 

00:29:12.920 --> 00:29:15.070
thing went away so that on the native
side we can go ahead and free the native

00:29:15.070 --> 00:29:15.080
side we can go ahead and free the native
 

00:29:15.080 --> 00:29:16.960
side we can go ahead and free the native
memory associated with it so that's a

00:29:16.960 --> 00:29:16.970
memory associated with it so that's a
 

00:29:16.970 --> 00:29:18.700
memory associated with it so that's a
valid use case for it but I would say

00:29:18.700 --> 00:29:18.710
valid use case for it but I would say
 

00:29:18.710 --> 00:29:20.410
valid use case for it but I would say
try to limit the number of valid use

00:29:20.410 --> 00:29:20.420
try to limit the number of valid use
 

00:29:20.420 --> 00:29:23.230
try to limit the number of valid use
cases and definitely eliminate finalized

00:29:23.230 --> 00:29:23.240
cases and definitely eliminate finalized
 

00:29:23.240 --> 00:29:25.030
cases and definitely eliminate finalized
errs when you don't need them in other

00:29:25.030 --> 00:29:25.040
errs when you don't need them in other
 

00:29:25.040 --> 00:29:27.010
errs when you don't need them in other
cases they may be convenient but there

00:29:27.010 --> 00:29:27.020
cases they may be convenient but there
 

00:29:27.020 --> 00:29:28.720
cases they may be convenient but there
are better ways certainly from the

00:29:28.720 --> 00:29:28.730
are better ways certainly from the
 

00:29:28.730 --> 00:29:30.340
are better ways certainly from the
memory standpoint to do what you want to

00:29:30.340 --> 00:29:30.350
memory standpoint to do what you want to
 

00:29:30.350 --> 00:29:33.730
memory standpoint to do what you want to
do static leaks this is one of my

00:29:33.730 --> 00:29:33.740
do static leaks this is one of my
 

00:29:33.740 --> 00:29:36.280
do static leaks this is one of my
favorites I may or may not have caused

00:29:36.280 --> 00:29:36.290
favorites I may or may not have caused
 

00:29:36.290 --> 00:29:40.120
favorites I may or may not have caused
leaks and activities in some of my coat

00:29:40.120 --> 00:29:40.130
leaks and activities in some of my coat
 

00:29:40.130 --> 00:29:43.030
leaks and activities in some of my coat
I should I should do a deep dive into

00:29:43.030 --> 00:29:43.040
I should I should do a deep dive into
 

00:29:43.040 --> 00:29:46.180
I should I should do a deep dive into
the way that that hash map or weak hash

00:29:46.180 --> 00:29:46.190
the way that that hash map or weak hash
 

00:29:46.190 --> 00:29:48.550
the way that that hash map or weak hash
map works so there's there's a situation

00:29:48.550 --> 00:29:48.560
map works so there's there's a situation
 

00:29:48.560 --> 00:29:50.680
map works so there's there's a situation
where I needed to store information

00:29:50.680 --> 00:29:50.690
where I needed to store information
 

00:29:50.690 --> 00:29:52.930
where I needed to store information
about listeners associated with views

00:29:52.930 --> 00:29:52.940
about listeners associated with views
 

00:29:52.940 --> 00:29:56.560
about listeners associated with views
and I said well I know that weak hash

00:29:56.560 --> 00:29:56.570
and I said well I know that weak hash
 

00:29:56.570 --> 00:29:59.290
and I said well I know that weak hash
map uses a weak reference so when that

00:29:59.290 --> 00:29:59.300
map uses a weak reference so when that
 

00:29:59.300 --> 00:30:01.840
map uses a weak reference so when that
view goes away which is what I was using

00:30:01.840 --> 00:30:01.850
view goes away which is what I was using
 

00:30:01.850 --> 00:30:04.330
view goes away which is what I was using
for Mikey then I know this you know

00:30:04.330 --> 00:30:04.340
for Mikey then I know this you know
 

00:30:04.340 --> 00:30:05.890
for Mikey then I know this you know
everything will be collect it turns out

00:30:05.890 --> 00:30:05.900
everything will be collect it turns out
 

00:30:05.900 --> 00:30:07.360
everything will be collect it turns out
that's not true the way that we cache

00:30:07.360 --> 00:30:07.370
that's not true the way that we cache
 

00:30:07.370 --> 00:30:10.180
that's not true the way that we cache
map works it actually had a hard

00:30:10.180 --> 00:30:10.190
map works it actually had a hard
 

00:30:10.190 --> 00:30:12.190
map works it actually had a hard
reference to the key it had a weak

00:30:12.190 --> 00:30:12.200
reference to the key it had a weak
 

00:30:12.200 --> 00:30:15.100
reference to the key it had a weak
reference to the value which kind of

00:30:15.100 --> 00:30:15.110
reference to the value which kind of
 

00:30:15.110 --> 00:30:18.670
reference to the value which kind of
turns my head in knots but the the end

00:30:18.670 --> 00:30:18.680
turns my head in knots but the the end
 

00:30:18.680 --> 00:30:21.940
turns my head in knots but the the end
result was that I would the activity

00:30:21.940 --> 00:30:21.950
result was that I would the activity
 

00:30:21.950 --> 00:30:24.250
result was that I would the activity
would undergo a configuration change so

00:30:24.250 --> 00:30:24.260
would undergo a configuration change so
 

00:30:24.260 --> 00:30:26.380
would undergo a configuration change so
the phone would rotate and it would tear

00:30:26.380 --> 00:30:26.390
the phone would rotate and it would tear
 

00:30:26.390 --> 00:30:27.850
the phone would rotate and it would tear
down the activity it would come up with

00:30:27.850 --> 00:30:27.860
down the activity it would come up with
 

00:30:27.860 --> 00:30:30.490
down the activity it would come up with
a new activity and all that old stuff

00:30:30.490 --> 00:30:30.500
a new activity and all that old stuff
 

00:30:30.500 --> 00:30:32.980
a new activity and all that old stuff
went away except that I had a static

00:30:32.980 --> 00:30:32.990
went away except that I had a static
 

00:30:32.990 --> 00:30:35.500
went away except that I had a static
week hash map which had a reference to

00:30:35.500 --> 00:30:35.510
week hash map which had a reference to
 

00:30:35.510 --> 00:30:37.600
week hash map which had a reference to
the view which implicitly has a

00:30:37.600 --> 00:30:37.610
the view which implicitly has a
 

00:30:37.610 --> 00:30:40.930
the view which implicitly has a
reference to its activity bad thing in

00:30:40.930 --> 00:30:40.940
reference to its activity bad thing in
 

00:30:40.940 --> 00:30:44.230
reference to its activity bad thing in
general so beware of static leaks in

00:30:44.230 --> 00:30:44.240
general so beware of static leaks in
 

00:30:44.240 --> 00:30:46.960
general so beware of static leaks in
general the real problem here besides my

00:30:46.960 --> 00:30:46.970
general the real problem here besides my
 

00:30:46.970 --> 00:30:48.730
general the real problem here besides my
ineptitude and misunderstanding of how

00:30:48.730 --> 00:30:48.740
ineptitude and misunderstanding of how
 

00:30:48.740 --> 00:30:51.040
ineptitude and misunderstanding of how
weak hash map worked at the time was

00:30:51.040 --> 00:30:51.050
weak hash map worked at the time was
 

00:30:51.050 --> 00:30:53.920
weak hash map worked at the time was
that the lifetime of the process is

00:30:53.920 --> 00:30:53.930
that the lifetime of the process is
 

00:30:53.930 --> 00:30:55.300
that the lifetime of the process is
different than the lifetime of your

00:30:55.300 --> 00:30:55.310
different than the lifetime of your
 

00:30:55.310 --> 00:30:57.070
different than the lifetime of your
activity this is something I've hit

00:30:57.070 --> 00:30:57.080
activity this is something I've hit
 

00:30:57.080 --> 00:30:58.630
activity this is something I've hit
again and again an Android I tend to

00:30:58.630 --> 00:30:58.640
again and again an Android I tend to
 

00:30:58.640 --> 00:31:00.280
again and again an Android I tend to
think of you know when a window comes up

00:31:00.280 --> 00:31:00.290
think of you know when a window comes up
 

00:31:00.290 --> 00:31:02.050
think of you know when a window comes up
when that you know that basically that

00:31:02.050 --> 00:31:02.060
when that you know that basically that
 

00:31:02.060 --> 00:31:04.120
when that you know that basically that
application object that I'm working with

00:31:04.120 --> 00:31:04.130
application object that I'm working with
 

00:31:04.130 --> 00:31:05.890
application object that I'm working with
which is you know the activity in my

00:31:05.890 --> 00:31:05.900
which is you know the activity in my
 

00:31:05.900 --> 00:31:07.510
which is you know the activity in my
mind is sort of synonymous with

00:31:07.510 --> 00:31:07.520
mind is sort of synonymous with
 

00:31:07.520 --> 00:31:08.379
mind is sort of synonymous with
application

00:31:08.379 --> 00:31:08.389
application
 

00:31:08.389 --> 00:31:11.229
application
that's the first problem when that comes

00:31:11.229 --> 00:31:11.239
that's the first problem when that comes
 

00:31:11.239 --> 00:31:12.849
that's the first problem when that comes
up you know surely that is you know

00:31:12.849 --> 00:31:12.859
up you know surely that is you know
 

00:31:12.859 --> 00:31:14.499
up you know surely that is you know
that's where all my static objects live

00:31:14.499 --> 00:31:14.509
that's where all my static objects live
 

00:31:14.509 --> 00:31:16.029
that's where all my static objects live
they don't they live in the process

00:31:16.029 --> 00:31:16.039
they don't they live in the process
 

00:31:16.039 --> 00:31:18.609
they don't they live in the process
itself and the process is long-lived so

00:31:18.609 --> 00:31:18.619
itself and the process is long-lived so
 

00:31:18.619 --> 00:31:20.169
itself and the process is long-lived so
when you undergo a configuration change

00:31:20.169 --> 00:31:20.179
when you undergo a configuration change
 

00:31:20.179 --> 00:31:22.299
when you undergo a configuration change
we rip down the activity and we pop up

00:31:22.299 --> 00:31:22.309
we rip down the activity and we pop up
 

00:31:22.309 --> 00:31:23.709
we rip down the activity and we pop up
another one and it's in the same process

00:31:23.709 --> 00:31:23.719
another one and it's in the same process
 

00:31:23.719 --> 00:31:25.989
another one and it's in the same process
so if you have a static object there

00:31:25.989 --> 00:31:25.999
so if you have a static object there
 

00:31:25.999 --> 00:31:27.789
so if you have a static object there
whether it's a weak hashmap or something

00:31:27.789 --> 00:31:27.799
whether it's a weak hashmap or something
 

00:31:27.799 --> 00:31:29.560
whether it's a weak hashmap or something
else that's holding onto something it

00:31:29.560 --> 00:31:29.570
else that's holding onto something it
 

00:31:29.570 --> 00:31:31.539
else that's holding onto something it
shouldn't in the old activity it will

00:31:31.539 --> 00:31:31.549
shouldn't in the old activity it will
 

00:31:31.549 --> 00:31:34.959
shouldn't in the old activity it will
continue to hold on to it so static can

00:31:34.959 --> 00:31:34.969
continue to hold on to it so static can
 

00:31:34.969 --> 00:31:36.489
continue to hold on to it so static can
be the right thing to use in some

00:31:36.489 --> 00:31:36.499
be the right thing to use in some
 

00:31:36.499 --> 00:31:37.839
be the right thing to use in some
situations but is really dangerous

00:31:37.839 --> 00:31:37.849
situations but is really dangerous
 

00:31:37.849 --> 00:31:40.029
situations but is really dangerous
because just know that it's gonna live a

00:31:40.029 --> 00:31:40.039
because just know that it's gonna live a
 

00:31:40.039 --> 00:31:41.739
because just know that it's gonna live a
lot longer than the activity that you

00:31:41.739 --> 00:31:41.749
lot longer than the activity that you
 

00:31:41.749 --> 00:31:43.119
lot longer than the activity that you
think you're storing things associated

00:31:43.119 --> 00:31:43.129
think you're storing things associated
 

00:31:43.129 --> 00:31:46.119
think you're storing things associated
with static initialization is a good

00:31:46.119 --> 00:31:46.129
with static initialization is a good
 

00:31:46.129 --> 00:31:48.839
with static initialization is a good
thing to avoid in general especially for

00:31:48.839 --> 00:31:48.849
thing to avoid in general especially for
 

00:31:48.849 --> 00:31:51.190
thing to avoid in general especially for
expensive allocations or expensive

00:31:51.190 --> 00:31:51.200
expensive allocations or expensive
 

00:31:51.200 --> 00:31:53.769
expensive allocations or expensive
operations the problem that we see is

00:31:53.769 --> 00:31:53.779
operations the problem that we see is
 

00:31:53.779 --> 00:31:55.749
operations the problem that we see is
that when a class gets loaded and then

00:31:55.749 --> 00:31:55.759
that when a class gets loaded and then
 

00:31:55.759 --> 00:31:58.060
that when a class gets loaded and then
does a bunch of static work it's gonna

00:31:58.060 --> 00:31:58.070
does a bunch of static work it's gonna
 

00:31:58.070 --> 00:32:00.969
does a bunch of static work it's gonna
do all that stuff right now this causes

00:32:00.969 --> 00:32:00.979
do all that stuff right now this causes
 

00:32:00.979 --> 00:32:02.859
do all that stuff right now this causes
a problem for instance when you launch

00:32:02.859 --> 00:32:02.869
a problem for instance when you launch
 

00:32:02.869 --> 00:32:04.599
a problem for instance when you launch
your activity right so we're gonna go

00:32:04.599 --> 00:32:04.609
your activity right so we're gonna go
 

00:32:04.609 --> 00:32:05.649
your activity right so we're gonna go
we're gonna launch we're gonna try to

00:32:05.649 --> 00:32:05.659
we're gonna launch we're gonna try to
 

00:32:05.659 --> 00:32:06.969
we're gonna launch we're gonna try to
launch as fast as possible and then it

00:32:06.969 --> 00:32:06.979
launch as fast as possible and then it
 

00:32:06.979 --> 00:32:08.680
launch as fast as possible and then it
loads this class which does a whole lot

00:32:08.680 --> 00:32:08.690
loads this class which does a whole lot
 

00:32:08.690 --> 00:32:09.999
loads this class which does a whole lot
of work that it really didn't need to

00:32:09.999 --> 00:32:10.009
of work that it really didn't need to
 

00:32:10.009 --> 00:32:12.249
of work that it really didn't need to
why not do some of that stuff lazily if

00:32:12.249 --> 00:32:12.259
why not do some of that stuff lazily if
 

00:32:12.259 --> 00:32:13.869
why not do some of that stuff lazily if
you didn't actually need to you know

00:32:13.869 --> 00:32:13.879
you didn't actually need to you know
 

00:32:13.879 --> 00:32:17.019
you didn't actually need to you know
initialize the database whatever at that

00:32:17.019 --> 00:32:17.029
initialize the database whatever at that
 

00:32:17.029 --> 00:32:18.549
initialize the database whatever at that
point why don't you wait until a better

00:32:18.549 --> 00:32:18.559
point why don't you wait until a better
 

00:32:18.559 --> 00:32:20.440
point why don't you wait until a better
time instead of forcing that to happen

00:32:20.440 --> 00:32:20.450
time instead of forcing that to happen
 

00:32:20.450 --> 00:32:22.859
time instead of forcing that to happen
immediately

00:32:22.859 --> 00:32:22.869
 

00:32:22.869 --> 00:32:25.869
okay so third party code we've seen this

00:32:25.869 --> 00:32:25.879
okay so third party code we've seen this
 

00:32:25.879 --> 00:32:27.849
okay so third party code we've seen this
one a lot where again something that

00:32:27.849 --> 00:32:27.859
one a lot where again something that
 

00:32:27.859 --> 00:32:30.039
one a lot where again something that
traditional Java developers will do is

00:32:30.039 --> 00:32:30.049
traditional Java developers will do is
 

00:32:30.049 --> 00:32:32.440
traditional Java developers will do is
bring over their libraries and their

00:32:32.440 --> 00:32:32.450
bring over their libraries and their
 

00:32:32.450 --> 00:32:35.049
bring over their libraries and their
approaches from the old world oh I

00:32:35.049 --> 00:32:35.059
approaches from the old world oh I
 

00:32:35.059 --> 00:32:37.299
approaches from the old world oh I
really like this dependency injection

00:32:37.299 --> 00:32:37.309
really like this dependency injection
 

00:32:37.309 --> 00:32:39.430
really like this dependency injection
library so a common one that we've seen

00:32:39.430 --> 00:32:39.440
library so a common one that we've seen
 

00:32:39.440 --> 00:32:42.219
library so a common one that we've seen
is juice really powerful very flexible

00:32:42.219 --> 00:32:42.229
is juice really powerful very flexible
 

00:32:42.229 --> 00:32:44.139
is juice really powerful very flexible
people love to use this and then they'll

00:32:44.139 --> 00:32:44.149
people love to use this and then they'll
 

00:32:44.149 --> 00:32:45.669
people love to use this and then they'll
start using that it was not written for

00:32:45.669 --> 00:32:45.679
start using that it was not written for
 

00:32:45.679 --> 00:32:47.769
start using that it was not written for
mobile right it does a whole lot of

00:32:47.769 --> 00:32:47.779
mobile right it does a whole lot of
 

00:32:47.779 --> 00:32:49.209
mobile right it does a whole lot of
reflection and I haven't really talked

00:32:49.209 --> 00:32:49.219
reflection and I haven't really talked
 

00:32:49.219 --> 00:32:51.789
reflection and I haven't really talked
about reflection yet big secret

00:32:51.789 --> 00:32:51.799
about reflection yet big secret
 

00:32:51.799 --> 00:32:54.489
about reflection yet big secret
reflection sucks okay it has a lot of

00:32:54.489 --> 00:32:54.499
reflection sucks okay it has a lot of
 

00:32:54.499 --> 00:32:56.049
reflection sucks okay it has a lot of
overhead associated with it a lot of

00:32:56.049 --> 00:32:56.059
overhead associated with it a lot of
 

00:32:56.059 --> 00:32:58.779
overhead associated with it a lot of
allocations as well as just performance

00:32:58.779 --> 00:32:58.789
allocations as well as just performance
 

00:32:58.789 --> 00:32:59.409
allocations as well as just performance
overhead

00:32:59.409 --> 00:32:59.419
overhead
 

00:32:59.419 --> 00:33:01.749
overhead
so in general we tend to avoid it

00:33:01.749 --> 00:33:01.759
so in general we tend to avoid it
 

00:33:01.759 --> 00:33:03.339
so in general we tend to avoid it
everybody kind of knows that right you

00:33:03.339 --> 00:33:03.349
everybody kind of knows that right you
 

00:33:03.349 --> 00:33:04.719
everybody kind of knows that right you
don't really do reflection unless you

00:33:04.719 --> 00:33:04.729
don't really do reflection unless you
 

00:33:04.729 --> 00:33:06.339
don't really do reflection unless you
need to but a lot of these libraries

00:33:06.339 --> 00:33:06.349
need to but a lot of these libraries
 

00:33:06.349 --> 00:33:08.379
need to but a lot of these libraries
that you're dragging and are doing it on

00:33:08.379 --> 00:33:08.389
that you're dragging and are doing it on
 

00:33:08.389 --> 00:33:10.810
that you're dragging and are doing it on
your behalf so the general tip here is

00:33:10.810 --> 00:33:10.820
your behalf so the general tip here is
 

00:33:10.820 --> 00:33:13.329
your behalf so the general tip here is
to not use a library or third-party code

00:33:13.329 --> 00:33:13.339
to not use a library or third-party code
 

00:33:13.339 --> 00:33:15.009
to not use a library or third-party code
in general unless you know that it was

00:33:15.009 --> 00:33:15.019
in general unless you know that it was
 

00:33:15.019 --> 00:33:16.779
in general unless you know that it was
actually written for mobile because if

00:33:16.779 --> 00:33:16.789
actually written for mobile because if
 

00:33:16.789 --> 00:33:18.279
actually written for mobile because if
it wasn't written for mobile it's

00:33:18.279 --> 00:33:18.289
it wasn't written for mobile it's
 

00:33:18.289 --> 00:33:19.930
it wasn't written for mobile it's
probably using a lot of the patterns

00:33:19.930 --> 00:33:19.940
probably using a lot of the patterns
 

00:33:19.940 --> 00:33:20.360
probably using a lot of the patterns
that

00:33:20.360 --> 00:33:20.370
that
 

00:33:20.370 --> 00:33:22.460
that
we're telling you not to in your code so

00:33:22.460 --> 00:33:22.470
we're telling you not to in your code so
 

00:33:22.470 --> 00:33:23.930
we're telling you not to in your code so
why are you using it indirectly in

00:33:23.930 --> 00:33:23.940
why are you using it indirectly in
 

00:33:23.940 --> 00:33:26.420
why are you using it indirectly in
someone else's code if for a dependency

00:33:26.420 --> 00:33:26.430
someone else's code if for a dependency
 

00:33:26.430 --> 00:33:27.680
someone else's code if for a dependency
injection there have been a couple of

00:33:27.680 --> 00:33:27.690
injection there have been a couple of
 

00:33:27.690 --> 00:33:29.150
injection there have been a couple of
libraries written since that are more

00:33:29.150 --> 00:33:29.160
libraries written since that are more
 

00:33:29.160 --> 00:33:31.010
libraries written since that are more
tuned to Android there was the dagger

00:33:31.010 --> 00:33:31.020
tuned to Android there was the dagger
 

00:33:31.020 --> 00:33:32.570
tuned to Android there was the dagger
library and more recently there's the

00:33:32.570 --> 00:33:32.580
library and more recently there's the
 

00:33:32.580 --> 00:33:35.060
library and more recently there's the
dagger 2 library I would suggest you

00:33:35.060 --> 00:33:35.070
dagger 2 library I would suggest you
 

00:33:35.070 --> 00:33:36.500
dagger 2 library I would suggest you
check those out if you really want that

00:33:36.500 --> 00:33:36.510
check those out if you really want that
 

00:33:36.510 --> 00:33:38.780
check those out if you really want that
functionality and in general just look

00:33:38.780 --> 00:33:38.790
functionality and in general just look
 

00:33:38.790 --> 00:33:40.970
functionality and in general just look
for a libraries that I wish we had like

00:33:40.970 --> 00:33:40.980
for a libraries that I wish we had like
 

00:33:40.980 --> 00:33:43.910
for a libraries that I wish we had like
a logo saying mobile-friendly but you

00:33:43.910 --> 00:33:43.920
a logo saying mobile-friendly but you
 

00:33:43.920 --> 00:33:45.410
a logo saying mobile-friendly but you
can look for that logo it doesn't exist

00:33:45.410 --> 00:33:45.420
can look for that logo it doesn't exist
 

00:33:45.420 --> 00:33:47.000
can look for that logo it doesn't exist
but look for the logo otherwise just

00:33:47.000 --> 00:33:47.010
but look for the logo otherwise just
 

00:33:47.010 --> 00:33:49.070
but look for the logo otherwise just
make sure that you actually know what

00:33:49.070 --> 00:33:49.080
make sure that you actually know what
 

00:33:49.080 --> 00:33:51.680
make sure that you actually know what
that library is doing the other problem

00:33:51.680 --> 00:33:51.690
that library is doing the other problem
 

00:33:51.690 --> 00:33:53.240
that library is doing the other problem
that we've seen with third-party code is

00:33:53.240 --> 00:33:53.250
that we've seen with third-party code is
 

00:33:53.250 --> 00:33:55.900
that we've seen with third-party code is
if you're using a really large library

00:33:55.900 --> 00:33:55.910
if you're using a really large library
 

00:33:55.910 --> 00:33:58.010
if you're using a really large library
chances are there's a dependency graph

00:33:58.010 --> 00:33:58.020
chances are there's a dependency graph
 

00:33:58.020 --> 00:33:59.780
chances are there's a dependency graph
in there where you're dragging a lot of

00:33:59.780 --> 00:33:59.790
in there where you're dragging a lot of
 

00:33:59.790 --> 00:34:01.610
in there where you're dragging a lot of
stuff that you don't necessarily need

00:34:01.610 --> 00:34:01.620
stuff that you don't necessarily need
 

00:34:01.620 --> 00:34:04.370
stuff that you don't necessarily need
like if you are using you know library

00:34:04.370 --> 00:34:04.380
like if you are using you know library
 

00:34:04.380 --> 00:34:06.200
like if you are using you know library
foo because you really like that you

00:34:06.200 --> 00:34:06.210
foo because you really like that you
 

00:34:06.210 --> 00:34:07.790
foo because you really like that you
know collection class for managing this

00:34:07.790 --> 00:34:07.800
know collection class for managing this
 

00:34:07.800 --> 00:34:09.560
know collection class for managing this
particular thing and then all of a

00:34:09.560 --> 00:34:09.570
particular thing and then all of a
 

00:34:09.570 --> 00:34:11.780
particular thing and then all of a
sudden it added you know 20,000 methods

00:34:11.780 --> 00:34:11.790
sudden it added you know 20,000 methods
 

00:34:11.790 --> 00:34:13.730
sudden it added you know 20,000 methods
to your method count and a whole lot of

00:34:13.730 --> 00:34:13.740
to your method count and a whole lot of
 

00:34:13.740 --> 00:34:16.430
to your method count and a whole lot of
AP apk size just so that you could use

00:34:16.430 --> 00:34:16.440
AP apk size just so that you could use
 

00:34:16.440 --> 00:34:18.230
AP apk size just so that you could use
that one collection probably not what

00:34:18.230 --> 00:34:18.240
that one collection probably not what
 

00:34:18.240 --> 00:34:21.139
that one collection probably not what
you want in your application so just be

00:34:21.139 --> 00:34:21.149
you want in your application so just be
 

00:34:21.149 --> 00:34:23.210
you want in your application so just be
as concerned about your library code as

00:34:23.210 --> 00:34:23.220
as concerned about your library code as
 

00:34:23.220 --> 00:34:28.040
as concerned about your library code as
you are about your own code so there are

00:34:28.040 --> 00:34:28.050
you are about your own code so there are
 

00:34:28.050 --> 00:34:31.070
you are about your own code so there are
mechanisms that Android provides to help

00:34:31.070 --> 00:34:31.080
mechanisms that Android provides to help
 

00:34:31.080 --> 00:34:33.080
mechanisms that Android provides to help
you with memory concerns one of them is

00:34:33.080 --> 00:34:33.090
you with memory concerns one of them is
 

00:34:33.090 --> 00:34:35.750
you with memory concerns one of them is
trimming memory so the system will tell

00:34:35.750 --> 00:34:35.760
trimming memory so the system will tell
 

00:34:35.760 --> 00:34:37.190
trimming memory so the system will tell
you when it's getting low on memory and

00:34:37.190 --> 00:34:37.200
you when it's getting low on memory and
 

00:34:37.200 --> 00:34:38.600
you when it's getting low on memory and
you should really respond to that

00:34:38.600 --> 00:34:38.610
you should really respond to that
 

00:34:38.610 --> 00:34:40.490
you should really respond to that
because it's not just telling you you

00:34:40.490 --> 00:34:40.500
because it's not just telling you you
 

00:34:40.500 --> 00:34:42.320
because it's not just telling you you
know like oh by the way I'd really love

00:34:42.320 --> 00:34:42.330
know like oh by the way I'd really love
 

00:34:42.330 --> 00:34:44.210
know like oh by the way I'd really love
some memory it's it's not a casual

00:34:44.210 --> 00:34:44.220
some memory it's it's not a casual
 

00:34:44.220 --> 00:34:46.700
some memory it's it's not a casual
conversation it's saying I need memory

00:34:46.700 --> 00:34:46.710
conversation it's saying I need memory
 

00:34:46.710 --> 00:34:49.250
conversation it's saying I need memory
now could you please free some because

00:34:49.250 --> 00:34:49.260
now could you please free some because
 

00:34:49.260 --> 00:34:51.440
now could you please free some because
otherwise bad stuff is going to happen

00:34:51.440 --> 00:34:51.450
otherwise bad stuff is going to happen
 

00:34:51.450 --> 00:34:53.600
otherwise bad stuff is going to happen
right so when it goes out it reaches out

00:34:53.600 --> 00:34:53.610
right so when it goes out it reaches out
 

00:34:53.610 --> 00:34:56.659
right so when it goes out it reaches out
to the activities running on the system

00:34:56.659 --> 00:34:56.669
to the activities running on the system
 

00:34:56.669 --> 00:34:58.880
to the activities running on the system
the processes and says we're running low

00:34:58.880 --> 00:34:58.890
the processes and says we're running low
 

00:34:58.890 --> 00:35:00.380
the processes and says we're running low
on memory can you do something about

00:35:00.380 --> 00:35:00.390
on memory can you do something about
 

00:35:00.390 --> 00:35:02.870
on memory can you do something about
this and there's various levels of it so

00:35:02.870 --> 00:35:02.880
this and there's various levels of it so
 

00:35:02.880 --> 00:35:04.460
this and there's various levels of it so
you can sort of you know set your your

00:35:04.460 --> 00:35:04.470
you can sort of you know set your your
 

00:35:04.470 --> 00:35:06.320
you can sort of you know set your your
warning and panic appropriately but if

00:35:06.320 --> 00:35:06.330
warning and panic appropriately but if
 

00:35:06.330 --> 00:35:08.210
warning and panic appropriately but if
you're keeping thick cached thumbnails

00:35:08.210 --> 00:35:08.220
you're keeping thick cached thumbnails
 

00:35:08.220 --> 00:35:10.490
you're keeping thick cached thumbnails
around just in case you know the user

00:35:10.490 --> 00:35:10.500
around just in case you know the user
 

00:35:10.500 --> 00:35:12.680
around just in case you know the user
wanted to do a fling but right now

00:35:12.680 --> 00:35:12.690
wanted to do a fling but right now
 

00:35:12.690 --> 00:35:13.730
wanted to do a fling but right now
you're running in the background you

00:35:13.730 --> 00:35:13.740
you're running in the background you
 

00:35:13.740 --> 00:35:15.680
you're running in the background you
don't need those anymore maybe you'd be

00:35:15.680 --> 00:35:15.690
don't need those anymore maybe you'd be
 

00:35:15.690 --> 00:35:17.930
don't need those anymore maybe you'd be
a good time to jettison those because if

00:35:17.930 --> 00:35:17.940
a good time to jettison those because if
 

00:35:17.940 --> 00:35:19.850
a good time to jettison those because if
you can make yourself smaller then maybe

00:35:19.850 --> 00:35:19.860
you can make yourself smaller then maybe
 

00:35:19.860 --> 00:35:21.440
you can make yourself smaller then maybe
the system can get back the memory that

00:35:21.440 --> 00:35:21.450
the system can get back the memory that
 

00:35:21.450 --> 00:35:22.670
the system can get back the memory that
it needs so that it doesn't have to go

00:35:22.670 --> 00:35:22.680
it needs so that it doesn't have to go
 

00:35:22.680 --> 00:35:25.730
it needs so that it doesn't have to go
killing activities like yours right so

00:35:25.730 --> 00:35:25.740
killing activities like yours right so
 

00:35:25.740 --> 00:35:27.590
killing activities like yours right so
pay attention to the trim callbacks and

00:35:27.590 --> 00:35:27.600
pay attention to the trim callbacks and
 

00:35:27.600 --> 00:35:29.720
pay attention to the trim callbacks and
do something about them is load ram

00:35:29.720 --> 00:35:29.730
do something about them is load ram
 

00:35:29.730 --> 00:35:32.920
do something about them is load ram
device is a method on I think

00:35:32.920 --> 00:35:32.930
device is a method on I think
 

00:35:32.930 --> 00:35:36.670
device is a method on I think
activity activity manager that tells you

00:35:36.670 --> 00:35:36.680
activity activity manager that tells you
 

00:35:36.680 --> 00:35:39.520
activity activity manager that tells you
whether the system at the moment it

00:35:39.520 --> 00:35:39.530
whether the system at the moment it
 

00:35:39.530 --> 00:35:43.180
whether the system at the moment it
means this has 512 memory in it so if

00:35:43.180 --> 00:35:43.190
means this has 512 memory in it so if
 

00:35:43.190 --> 00:35:46.390
means this has 512 memory in it so if
you really need more memory to you know

00:35:46.390 --> 00:35:46.400
you really need more memory to you know
 

00:35:46.400 --> 00:35:48.010
you really need more memory to you know
have the best user experience but you

00:35:48.010 --> 00:35:48.020
have the best user experience but you
 

00:35:48.020 --> 00:35:50.980
have the best user experience but you
also want to work adequately on 512 Meg

00:35:50.980 --> 00:35:50.990
also want to work adequately on 512 Meg
 

00:35:50.990 --> 00:35:53.829
also want to work adequately on 512 Meg
devices then you might call this method

00:35:53.829 --> 00:35:53.839
devices then you might call this method
 

00:35:53.839 --> 00:35:55.930
devices then you might call this method
and set the way that your application

00:35:55.930 --> 00:35:55.940
and set the way that your application
 

00:35:55.940 --> 00:36:00.160
and set the way that your application
behaves accordingly avoid large heaps

00:36:00.160 --> 00:36:00.170
behaves accordingly avoid large heaps
 

00:36:00.170 --> 00:36:02.740
behaves accordingly avoid large heaps
there is a way to ask the system for

00:36:02.740 --> 00:36:02.750
there is a way to ask the system for
 

00:36:02.750 --> 00:36:04.420
there is a way to ask the system for
more memory and sometimes this is

00:36:04.420 --> 00:36:04.430
more memory and sometimes this is
 

00:36:04.430 --> 00:36:06.280
more memory and sometimes this is
necessary you know you're a video

00:36:06.280 --> 00:36:06.290
necessary you know you're a video
 

00:36:06.290 --> 00:36:07.839
necessary you know you're a video
playing application where the videos

00:36:07.839 --> 00:36:07.849
playing application where the videos
 

00:36:07.849 --> 00:36:09.700
playing application where the videos
simply won't fit into the standard heap

00:36:09.700 --> 00:36:09.710
simply won't fit into the standard heap
 

00:36:09.710 --> 00:36:11.650
simply won't fit into the standard heap
or you know you're doing image

00:36:11.650 --> 00:36:11.660
or you know you're doing image
 

00:36:11.660 --> 00:36:13.480
or you know you're doing image
manipulation with massive images

00:36:13.480 --> 00:36:13.490
manipulation with massive images
 

00:36:13.490 --> 00:36:15.520
manipulation with massive images
whatever it is there are some corner

00:36:15.520 --> 00:36:15.530
whatever it is there are some corner
 

00:36:15.530 --> 00:36:16.990
whatever it is there are some corner
case situations for which this was

00:36:16.990 --> 00:36:17.000
case situations for which this was
 

00:36:17.000 --> 00:36:19.720
case situations for which this was
introduced but it also tends to be a

00:36:19.720 --> 00:36:19.730
introduced but it also tends to be a
 

00:36:19.730 --> 00:36:22.839
introduced but it also tends to be a
backdoor for lazy developers like well I

00:36:22.839 --> 00:36:22.849
backdoor for lazy developers like well I
 

00:36:22.849 --> 00:36:24.819
backdoor for lazy developers like well I
just up but I want more memory it's

00:36:24.819 --> 00:36:24.829
just up but I want more memory it's
 

00:36:24.829 --> 00:36:27.490
just up but I want more memory it's
easier yes it is easier and it makes a

00:36:27.490 --> 00:36:27.500
easier yes it is easier and it makes a
 

00:36:27.500 --> 00:36:29.230
easier yes it is easier and it makes a
horrible experience because the more you

00:36:29.230 --> 00:36:29.240
horrible experience because the more you
 

00:36:29.240 --> 00:36:31.510
horrible experience because the more you
allocate for your process the less

00:36:31.510 --> 00:36:31.520
allocate for your process the less
 

00:36:31.520 --> 00:36:33.160
allocate for your process the less
everybody else gets and then it goes

00:36:33.160 --> 00:36:33.170
everybody else gets and then it goes
 

00:36:33.170 --> 00:36:35.170
everybody else gets and then it goes
back to the original point so don't use

00:36:35.170 --> 00:36:35.180
back to the original point so don't use
 

00:36:35.180 --> 00:36:36.849
back to the original point so don't use
it unless you actually really need it

00:36:36.849 --> 00:36:36.859
it unless you actually really need it
 

00:36:36.859 --> 00:36:39.819
it unless you actually really need it
please don't keep your services running

00:36:39.819 --> 00:36:39.829
please don't keep your services running
 

00:36:39.829 --> 00:36:41.829
please don't keep your services running
they can continue to run in the

00:36:41.829 --> 00:36:41.839
they can continue to run in the
 

00:36:41.839 --> 00:36:43.539
they can continue to run in the
background but if they exist just for a

00:36:43.539 --> 00:36:43.549
background but if they exist just for a
 

00:36:43.549 --> 00:36:44.829
background but if they exist just for a
particular reason

00:36:44.829 --> 00:36:44.839
particular reason
 

00:36:44.839 --> 00:36:48.130
particular reason
then finish that purpose and then get

00:36:48.130 --> 00:36:48.140
then finish that purpose and then get
 

00:36:48.140 --> 00:36:49.900
then finish that purpose and then get
out of them right otherwise they're just

00:36:49.900 --> 00:36:49.910
out of them right otherwise they're just
 

00:36:49.910 --> 00:36:51.010
out of them right otherwise they're just
sitting there doing stuff

00:36:51.010 --> 00:36:51.020
sitting there doing stuff
 

00:36:51.020 --> 00:36:52.599
sitting there doing stuff
if nothing else they're taking up memory

00:36:52.599 --> 00:36:52.609
if nothing else they're taking up memory
 

00:36:52.609 --> 00:36:54.520
if nothing else they're taking up memory
in the background meaning that there's

00:36:54.520 --> 00:36:54.530
in the background meaning that there's
 

00:36:54.530 --> 00:36:56.140
in the background meaning that there's
less available for everybody else on the

00:36:56.140 --> 00:36:56.150
less available for everybody else on the
 

00:36:56.150 --> 00:36:59.020
less available for everybody else on the
system and then finally optimized for

00:36:59.020 --> 00:36:59.030
system and then finally optimized for
 

00:36:59.030 --> 00:37:01.750
system and then finally optimized for
code size so this comes in in a lot of

00:37:01.750 --> 00:37:01.760
code size so this comes in in a lot of
 

00:37:01.760 --> 00:37:05.890
code size so this comes in in a lot of
ways but it's it makes your your apk

00:37:05.890 --> 00:37:05.900
ways but it's it makes your your apk
 

00:37:05.900 --> 00:37:07.359
ways but it's it makes your your apk
download better certainly but it also

00:37:07.359 --> 00:37:07.369
download better certainly but it also
 

00:37:07.369 --> 00:37:09.190
download better certainly but it also
decreases the amount of stuff they are

00:37:09.190 --> 00:37:09.200
decreases the amount of stuff they are
 

00:37:09.200 --> 00:37:11.819
decreases the amount of stuff they are
loading into memory for your system so

00:37:11.819 --> 00:37:11.829
loading into memory for your system so
 

00:37:11.829 --> 00:37:14.650
loading into memory for your system so
just be smart about how much memory

00:37:14.650 --> 00:37:14.660
just be smart about how much memory
 

00:37:14.660 --> 00:37:17.020
just be smart about how much memory
you're taking up so I want to go over

00:37:17.020 --> 00:37:17.030
you're taking up so I want to go over
 

00:37:17.030 --> 00:37:18.280
you're taking up so I want to go over
some of the tips that we have in user

00:37:18.280 --> 00:37:18.290
some of the tips that we have in user
 

00:37:18.290 --> 00:37:20.079
some of the tips that we have in user
interface this is sort of a grab bag of

00:37:20.079 --> 00:37:20.089
interface this is sort of a grab bag of
 

00:37:20.089 --> 00:37:24.400
interface this is sort of a grab bag of
things don't overdraw there are there's

00:37:24.400 --> 00:37:24.410
things don't overdraw there are there's
 

00:37:24.410 --> 00:37:27.609
things don't overdraw there are there's
a tool on the device called profile

00:37:27.609 --> 00:37:27.619
a tool on the device called profile
 

00:37:27.619 --> 00:37:30.359
a tool on the device called profile
overdraw I don't know what it is cult

00:37:30.359 --> 00:37:30.369
overdraw I don't know what it is cult
 

00:37:30.369 --> 00:37:33.240
overdraw I don't know what it is cult
profile what

00:37:33.240 --> 00:37:33.250
profile what
 

00:37:33.250 --> 00:37:36.550
profile what
profile GPU overdraw so you can see what

00:37:36.550 --> 00:37:36.560
profile GPU overdraw so you can see what
 

00:37:36.560 --> 00:37:38.620
profile GPU overdraw so you can see what
the overdraw is on the device it paints

00:37:38.620 --> 00:37:38.630
the overdraw is on the device it paints
 

00:37:38.630 --> 00:37:42.609
the overdraw is on the device it paints
in a lovely palette of pastel colors it

00:37:42.609 --> 00:37:42.619
in a lovely palette of pastel colors it
 

00:37:42.619 --> 00:37:45.040
in a lovely palette of pastel colors it
will indicate to you how many times each

00:37:45.040 --> 00:37:45.050
will indicate to you how many times each
 

00:37:45.050 --> 00:37:47.800
will indicate to you how many times each
of the pixels is being drawn on the

00:37:47.800 --> 00:37:47.810
of the pixels is being drawn on the
 

00:37:47.810 --> 00:37:51.460
of the pixels is being drawn on the
screen the problem is so Android uses a

00:37:51.460 --> 00:37:51.470
screen the problem is so Android uses a
 

00:37:51.470 --> 00:37:53.319
screen the problem is so Android uses a
common rendering technique called

00:37:53.319 --> 00:37:53.329
common rendering technique called
 

00:37:53.329 --> 00:37:55.359
common rendering technique called
painters fill algorithm

00:37:55.359 --> 00:37:55.369
painters fill algorithm
 

00:37:55.369 --> 00:37:57.190
painters fill algorithm
I guess because painters used a lot of

00:37:57.190 --> 00:37:57.200
I guess because painters used a lot of
 

00:37:57.200 --> 00:37:58.930
I guess because painters used a lot of
rectangles or something where basically

00:37:58.930 --> 00:37:58.940
rectangles or something where basically
 

00:37:58.940 --> 00:38:00.490
rectangles or something where basically
we will paint all the stuff that you

00:38:00.490 --> 00:38:00.500
we will paint all the stuff that you
 

00:38:00.500 --> 00:38:02.530
we will paint all the stuff that you
tell us to in the order of back-to-front

00:38:02.530 --> 00:38:02.540
tell us to in the order of back-to-front
 

00:38:02.540 --> 00:38:04.510
tell us to in the order of back-to-front
right because that's going to result in

00:38:04.510 --> 00:38:04.520
right because that's going to result in
 

00:38:04.520 --> 00:38:05.950
right because that's going to result in
the correct display for the user so you

00:38:05.950 --> 00:38:05.960
the correct display for the user so you
 

00:38:05.960 --> 00:38:07.270
the correct display for the user so you
got a window background great will paint

00:38:07.270 --> 00:38:07.280
got a window background great will paint
 

00:38:07.280 --> 00:38:08.380
got a window background great will paint
the window background you have a

00:38:08.380 --> 00:38:08.390
the window background you have a
 

00:38:08.390 --> 00:38:09.760
the window background you have a
container covering the window great will

00:38:09.760 --> 00:38:09.770
container covering the window great will
 

00:38:09.770 --> 00:38:11.109
container covering the window great will
paint the container with its opaque

00:38:11.109 --> 00:38:11.119
paint the container with its opaque
 

00:38:11.119 --> 00:38:12.579
paint the container with its opaque
background oh you have another container

00:38:12.579 --> 00:38:12.589
background oh you have another container
 

00:38:12.589 --> 00:38:13.780
background oh you have another container
covering now that's great we'll paint

00:38:13.780 --> 00:38:13.790
covering now that's great we'll paint
 

00:38:13.790 --> 00:38:15.520
covering now that's great we'll paint
that one too you have a ListView which

00:38:15.520 --> 00:38:15.530
that one too you have a ListView which
 

00:38:15.530 --> 00:38:16.630
that one too you have a ListView which
has a background we're gonna paint the

00:38:16.630 --> 00:38:16.640
has a background we're gonna paint the
 

00:38:16.640 --> 00:38:17.980
has a background we're gonna paint the
background oh all of your items have

00:38:17.980 --> 00:38:17.990
background oh all of your items have
 

00:38:17.990 --> 00:38:19.750
background oh all of your items have
background and all of a sudden when you

00:38:19.750 --> 00:38:19.760
background and all of a sudden when you
 

00:38:19.760 --> 00:38:21.550
background and all of a sudden when you
finally get to like the text in a

00:38:21.550 --> 00:38:21.560
finally get to like the text in a
 

00:38:21.560 --> 00:38:23.710
finally get to like the text in a
ListView you've painted each of the

00:38:23.710 --> 00:38:23.720
ListView you've painted each of the
 

00:38:23.720 --> 00:38:26.500
ListView you've painted each of the
pixels in those characters five or six

00:38:26.500 --> 00:38:26.510
pixels in those characters five or six
 

00:38:26.510 --> 00:38:28.540
pixels in those characters five or six
times that's something that the GPU

00:38:28.540 --> 00:38:28.550
times that's something that the GPU
 

00:38:28.550 --> 00:38:30.400
times that's something that the GPU
doesn't really like to do right that was

00:38:30.400 --> 00:38:30.410
doesn't really like to do right that was
 

00:38:30.410 --> 00:38:32.230
doesn't really like to do right that was
a lot of wasted effort in there so what

00:38:32.230 --> 00:38:32.240
a lot of wasted effort in there so what
 

00:38:32.240 --> 00:38:33.760
a lot of wasted effort in there so what
you really need to do is actually figure

00:38:33.760 --> 00:38:33.770
you really need to do is actually figure
 

00:38:33.770 --> 00:38:37.089
you really need to do is actually figure
out what opaque objects are completely

00:38:37.089 --> 00:38:37.099
out what opaque objects are completely
 

00:38:37.099 --> 00:38:39.339
out what opaque objects are completely
covering what other opaque objects and

00:38:39.339 --> 00:38:39.349
covering what other opaque objects and
 

00:38:39.349 --> 00:38:40.780
covering what other opaque objects and
maybe eliminate some of that overhead

00:38:40.780 --> 00:38:40.790
maybe eliminate some of that overhead
 

00:38:40.790 --> 00:38:42.309
maybe eliminate some of that overhead
there so you've got the window

00:38:42.309 --> 00:38:42.319
there so you've got the window
 

00:38:42.319 --> 00:38:44.680
there so you've got the window
background great use it set it to the

00:38:44.680 --> 00:38:44.690
background great use it set it to the
 

00:38:44.690 --> 00:38:45.970
background great use it set it to the
background color that you want and then

00:38:45.970 --> 00:38:45.980
background color that you want and then
 

00:38:45.980 --> 00:38:47.980
background color that you want and then
don't have an opaque background on the

00:38:47.980 --> 00:38:47.990
don't have an opaque background on the
 

00:38:47.990 --> 00:38:49.660
don't have an opaque background on the
containers that are sitting on top of it

00:38:49.660 --> 00:38:49.670
containers that are sitting on top of it
 

00:38:49.670 --> 00:38:51.760
containers that are sitting on top of it
so take a look at your nested hierarchy

00:38:51.760 --> 00:38:51.770
so take a look at your nested hierarchy
 

00:38:51.770 --> 00:38:53.710
so take a look at your nested hierarchy
there see what the see what the

00:38:53.710 --> 00:38:53.720
there see what the see what the
 

00:38:53.720 --> 00:38:55.870
there see what the see what the
organization is of containers as well as

00:38:55.870 --> 00:38:55.880
organization is of containers as well as
 

00:38:55.880 --> 00:38:58.150
organization is of containers as well as
the the opacity the backgrounds that

00:38:58.150 --> 00:38:58.160
the the opacity the backgrounds that
 

00:38:58.160 --> 00:38:59.319
the the opacity the backgrounds that
they're using and then do the right

00:38:59.319 --> 00:38:59.329
they're using and then do the right
 

00:38:59.329 --> 00:39:00.579
they're using and then do the right
thing there to make sure that we're

00:39:00.579 --> 00:39:00.589
thing there to make sure that we're
 

00:39:00.589 --> 00:39:03.280
thing there to make sure that we're
drawing as few times as possible on

00:39:03.280 --> 00:39:03.290
drawing as few times as possible on
 

00:39:03.290 --> 00:39:05.710
drawing as few times as possible on
every pixel so use the tools see what

00:39:05.710 --> 00:39:05.720
every pixel so use the tools see what
 

00:39:05.720 --> 00:39:07.900
every pixel so use the tools see what
your overdraw is like red is bad I'll

00:39:07.900 --> 00:39:07.910
your overdraw is like red is bad I'll
 

00:39:07.910 --> 00:39:09.940
your overdraw is like red is bad I'll
give you a little tip red is bad and

00:39:09.940 --> 00:39:09.950
give you a little tip red is bad and
 

00:39:09.950 --> 00:39:11.640
give you a little tip red is bad and
then do something about it

00:39:11.640 --> 00:39:11.650
then do something about it
 

00:39:11.650 --> 00:39:14.230
then do something about it
avoiding null window backgrounds so one

00:39:14.230 --> 00:39:14.240
avoiding null window backgrounds so one
 

00:39:14.240 --> 00:39:16.059
avoiding null window backgrounds so one
of the tricks to avoid overdraw ends up

00:39:16.059 --> 00:39:16.069
of the tricks to avoid overdraw ends up
 

00:39:16.069 --> 00:39:17.530
of the tricks to avoid overdraw ends up
in some artifacts that you should be

00:39:17.530 --> 00:39:17.540
in some artifacts that you should be
 

00:39:17.540 --> 00:39:20.319
in some artifacts that you should be
aware of so people will eliminate the

00:39:20.319 --> 00:39:20.329
aware of so people will eliminate the
 

00:39:20.329 --> 00:39:21.339
aware of so people will eliminate the
window background because they're like

00:39:21.339 --> 00:39:21.349
window background because they're like
 

00:39:21.349 --> 00:39:22.750
window background because they're like
great then then I don't have the

00:39:22.750 --> 00:39:22.760
great then then I don't have the
 

00:39:22.760 --> 00:39:24.309
great then then I don't have the
overdraw of like painting the window and

00:39:24.309 --> 00:39:24.319
overdraw of like painting the window and
 

00:39:24.319 --> 00:39:26.349
overdraw of like painting the window and
then also painting the first container

00:39:26.349 --> 00:39:26.359
then also painting the first container
 

00:39:26.359 --> 00:39:27.849
then also painting the first container
on top of it it'll just paint the

00:39:27.849 --> 00:39:27.859
on top of it it'll just paint the
 

00:39:27.859 --> 00:39:30.880
on top of it it'll just paint the
container that's true on the other hand

00:39:30.880 --> 00:39:30.890
container that's true on the other hand
 

00:39:30.890 --> 00:39:33.640
container that's true on the other hand
sometimes then you have an artifact

00:39:33.640 --> 00:39:33.650
sometimes then you have an artifact
 

00:39:33.650 --> 00:39:36.220
sometimes then you have an artifact
where all we have to paint is the window

00:39:36.220 --> 00:39:36.230
where all we have to paint is the window
 

00:39:36.230 --> 00:39:38.770
where all we have to paint is the window
itself so like we're animating in you

00:39:38.770 --> 00:39:38.780
itself so like we're animating in you
 

00:39:38.780 --> 00:39:40.569
itself so like we're animating in you
know the keyboard the IME is animating

00:39:40.569 --> 00:39:40.579
know the keyboard the IME is animating
 

00:39:40.579 --> 00:39:42.460
know the keyboard the IME is animating
in and the window manager is going to

00:39:42.460 --> 00:39:42.470
in and the window manager is going to
 

00:39:42.470 --> 00:39:44.339
in and the window manager is going to
handle painting the window or when we're

00:39:44.339 --> 00:39:44.349
handle painting the window or when we're
 

00:39:44.349 --> 00:39:46.229
handle painting the window or when we're
launching the window itself the activity

00:39:46.229 --> 00:39:46.239
launching the window itself the activity
 

00:39:46.239 --> 00:39:47.249
launching the window itself the activity
is not running yet we're gonna be

00:39:47.249 --> 00:39:47.259
is not running yet we're gonna be
 

00:39:47.259 --> 00:39:48.779
is not running yet we're gonna be
animating in the starting window and

00:39:48.779 --> 00:39:48.789
animating in the starting window and
 

00:39:48.789 --> 00:39:51.809
animating in the starting window and
it's empty there's like no the window

00:39:51.809 --> 00:39:51.819
it's empty there's like no the window
 

00:39:51.819 --> 00:39:53.130
it's empty there's like no the window
manager has nothing to pain you're gonna

00:39:53.130 --> 00:39:53.140
manager has nothing to pain you're gonna
 

00:39:53.140 --> 00:39:54.479
manager has nothing to pain you're gonna
end up with an artifact on the screen

00:39:54.479 --> 00:39:54.489
end up with an artifact on the screen
 

00:39:54.489 --> 00:39:56.789
end up with an artifact on the screen
either it's gonna draw black or on some

00:39:56.789 --> 00:39:56.799
either it's gonna draw black or on some
 

00:39:56.799 --> 00:39:58.680
either it's gonna draw black or on some
GPUs it may draw a garbage on the screen

00:39:58.680 --> 00:39:58.690
GPUs it may draw a garbage on the screen
 

00:39:58.690 --> 00:40:01.380
GPUs it may draw a garbage on the screen
because there's undefined contents in

00:40:01.380 --> 00:40:01.390
because there's undefined contents in
 

00:40:01.390 --> 00:40:03.150
because there's undefined contents in
that buffer so the window background is

00:40:03.150 --> 00:40:03.160
that buffer so the window background is
 

00:40:03.160 --> 00:40:04.890
that buffer so the window background is
there for a reason it's there to tell

00:40:04.890 --> 00:40:04.900
there for a reason it's there to tell
 

00:40:04.900 --> 00:40:06.960
there for a reason it's there to tell
the window manager what to paint on the

00:40:06.960 --> 00:40:06.970
the window manager what to paint on the
 

00:40:06.970 --> 00:40:08.789
the window manager what to paint on the
screen when it has no other information

00:40:08.789 --> 00:40:08.799
screen when it has no other information
 

00:40:08.799 --> 00:40:11.099
screen when it has no other information
about the activity so keep the window

00:40:11.099 --> 00:40:11.109
about the activity so keep the window
 

00:40:11.109 --> 00:40:13.440
about the activity so keep the window
background but to avoid the overdraw

00:40:13.440 --> 00:40:13.450
background but to avoid the overdraw
 

00:40:13.450 --> 00:40:15.809
background but to avoid the overdraw
issues see how you can use that window

00:40:15.809 --> 00:40:15.819
issues see how you can use that window
 

00:40:15.819 --> 00:40:18.150
issues see how you can use that window
background to do the right thing instead

00:40:18.150 --> 00:40:18.160
background to do the right thing instead
 

00:40:18.160 --> 00:40:20.460
background to do the right thing instead
of then having an opaque background on

00:40:20.460 --> 00:40:20.470
of then having an opaque background on
 

00:40:20.470 --> 00:40:22.880
of then having an opaque background on
the container that overlays the window

00:40:22.880 --> 00:40:22.890
the container that overlays the window
 

00:40:22.890 --> 00:40:25.769
the container that overlays the window
also avoiding disabling the starting

00:40:25.769 --> 00:40:25.779
also avoiding disabling the starting
 

00:40:25.779 --> 00:40:29.279
also avoiding disabling the starting
window this is another situation that

00:40:29.279 --> 00:40:29.289
window this is another situation that
 

00:40:29.289 --> 00:40:31.289
window this is another situation that
results in some artifacts where people

00:40:31.289 --> 00:40:31.299
results in some artifacts where people
 

00:40:31.299 --> 00:40:34.410
results in some artifacts where people
will disable the starting window because

00:40:34.410 --> 00:40:34.420
will disable the starting window because
 

00:40:34.420 --> 00:40:35.789
will disable the starting window because
you know they didn't want that blank

00:40:35.789 --> 00:40:35.799
you know they didn't want that blank
 

00:40:35.799 --> 00:40:37.529
you know they didn't want that blank
window up before their activity launched

00:40:37.529 --> 00:40:37.539
window up before their activity launched
 

00:40:37.539 --> 00:40:39.029
window up before their activity launched
but again the window manager doesn't

00:40:39.029 --> 00:40:39.039
but again the window manager doesn't
 

00:40:39.039 --> 00:40:40.979
but again the window manager doesn't
know what to paint if we don't have a

00:40:40.979 --> 00:40:40.989
know what to paint if we don't have a
 

00:40:40.989 --> 00:40:43.259
know what to paint if we don't have a
starting window I would say instead

00:40:43.259 --> 00:40:43.269
starting window I would say instead
 

00:40:43.269 --> 00:40:44.819
starting window I would say instead
actually use the starting window more

00:40:44.819 --> 00:40:44.829
actually use the starting window more
 

00:40:44.829 --> 00:40:46.079
actually use the starting window more
effectively you can brand your

00:40:46.079 --> 00:40:46.089
effectively you can brand your
 

00:40:46.089 --> 00:40:47.640
effectively you can brand your
application with this we've seen

00:40:47.640 --> 00:40:47.650
application with this we've seen
 

00:40:47.650 --> 00:40:49.319
application with this we've seen
particularly ineffective approaches

00:40:49.319 --> 00:40:49.329
particularly ineffective approaches
 

00:40:49.329 --> 00:40:51.410
particularly ineffective approaches
where someone wants a splash screen

00:40:51.410 --> 00:40:51.420
where someone wants a splash screen
 

00:40:51.420 --> 00:40:53.489
where someone wants a splash screen
before they get into their activity you

00:40:53.489 --> 00:40:53.499
before they get into their activity you
 

00:40:53.499 --> 00:40:55.259
before they get into their activity you
know maybe that gain took you know a

00:40:55.259 --> 00:40:55.269
know maybe that gain took you know a
 

00:40:55.269 --> 00:40:57.120
know maybe that gain took you know a
couple seconds to launch or whatever so

00:40:57.120 --> 00:40:57.130
couple seconds to launch or whatever so
 

00:40:57.130 --> 00:40:58.079
couple seconds to launch or whatever so
they're like okay well we'll have a

00:40:58.079 --> 00:40:58.089
they're like okay well we'll have a
 

00:40:58.089 --> 00:41:01.049
they're like okay well we'll have a
splash screen experience here but then

00:41:01.049 --> 00:41:01.059
splash screen experience here but then
 

00:41:01.059 --> 00:41:02.219
splash screen experience here but then
they get this weird experience where

00:41:02.219 --> 00:41:02.229
they get this weird experience where
 

00:41:02.229 --> 00:41:03.630
they get this weird experience where
window manager doesn't know what to

00:41:03.630 --> 00:41:03.640
window manager doesn't know what to
 

00:41:03.640 --> 00:41:03.959
window manager doesn't know what to
paint

00:41:03.959 --> 00:41:03.969
paint
 

00:41:03.969 --> 00:41:05.880
paint
so it doesn't do anything for a while

00:41:05.880 --> 00:41:05.890
so it doesn't do anything for a while
 

00:41:05.890 --> 00:41:07.259
so it doesn't do anything for a while
because there's no starting window and

00:41:07.259 --> 00:41:07.269
because there's no starting window and
 

00:41:07.269 --> 00:41:09.359
because there's no starting window and
then a splash screen starts after a

00:41:09.359 --> 00:41:09.369
then a splash screen starts after a
 

00:41:09.369 --> 00:41:11.219
then a splash screen starts after a
second or so with this completely

00:41:11.219 --> 00:41:11.229
second or so with this completely
 

00:41:11.229 --> 00:41:12.930
second or so with this completely
different experience and then the game

00:41:12.930 --> 00:41:12.940
different experience and then the game
 

00:41:12.940 --> 00:41:14.450
different experience and then the game
starts with a completely different look

00:41:14.450 --> 00:41:14.460
starts with a completely different look
 

00:41:14.460 --> 00:41:17.400
starts with a completely different look
pretty awful or in some situations it

00:41:17.400 --> 00:41:17.410
pretty awful or in some situations it
 

00:41:17.410 --> 00:41:18.779
pretty awful or in some situations it
gets even worse where like they kept the

00:41:18.779 --> 00:41:18.789
gets even worse where like they kept the
 

00:41:18.789 --> 00:41:20.969
gets even worse where like they kept the
starting window cuz they didn't actually

00:41:20.969 --> 00:41:20.979
starting window cuz they didn't actually
 

00:41:20.979 --> 00:41:22.620
starting window cuz they didn't actually
understand what it was they have a

00:41:22.620 --> 00:41:22.630
understand what it was they have a
 

00:41:22.630 --> 00:41:23.849
understand what it was they have a
starting window and then they have a

00:41:23.849 --> 00:41:23.859
starting window and then they have a
 

00:41:23.859 --> 00:41:25.469
starting window and then they have a
splash screen that's completely separate

00:41:25.469 --> 00:41:25.479
splash screen that's completely separate
 

00:41:25.479 --> 00:41:27.329
splash screen that's completely separate
and then they have the game screen so

00:41:27.329 --> 00:41:27.339
and then they have the game screen so
 

00:41:27.339 --> 00:41:28.920
and then they have the game screen so
then you have three completely different

00:41:28.920 --> 00:41:28.930
then you have three completely different
 

00:41:28.930 --> 00:41:31.109
then you have three completely different
experiences over time which is you know

00:41:31.109 --> 00:41:31.119
experiences over time which is you know
 

00:41:31.119 --> 00:41:32.910
experiences over time which is you know
nice if you want different experiences

00:41:32.910 --> 00:41:32.920
nice if you want different experiences
 

00:41:32.920 --> 00:41:34.349
nice if you want different experiences
but kind of sucks

00:41:34.349 --> 00:41:34.359
but kind of sucks
 

00:41:34.359 --> 00:41:35.849
but kind of sucks
what they should actually do instead is

00:41:35.849 --> 00:41:35.859
what they should actually do instead is
 

00:41:35.859 --> 00:41:37.829
what they should actually do instead is
remove their splash screen and take

00:41:37.829 --> 00:41:37.839
remove their splash screen and take
 

00:41:37.839 --> 00:41:39.539
remove their splash screen and take
their logo take their branding situation

00:41:39.539 --> 00:41:39.549
their logo take their branding situation
 

00:41:39.549 --> 00:41:40.920
their logo take their branding situation
and use that as the background on the

00:41:40.920 --> 00:41:40.930
and use that as the background on the
 

00:41:40.930 --> 00:41:42.359
and use that as the background on the
starting window instead then they get

00:41:42.359 --> 00:41:42.369
starting window instead then they get
 

00:41:42.369 --> 00:41:43.559
starting window instead then they get
the benefit of having the starting

00:41:43.559 --> 00:41:43.569
the benefit of having the starting
 

00:41:43.569 --> 00:41:45.779
the benefit of having the starting
window so that the system knows what to

00:41:45.779 --> 00:41:45.789
window so that the system knows what to
 

00:41:45.789 --> 00:41:47.430
window so that the system knows what to
do before the activity is actually up

00:41:47.430 --> 00:41:47.440
do before the activity is actually up
 

00:41:47.440 --> 00:41:49.709
do before the activity is actually up
and running and then they also get to

00:41:49.709 --> 00:41:49.719
and running and then they also get to
 

00:41:49.719 --> 00:41:51.239
and running and then they also get to
brand that as well and have the splash

00:41:51.239 --> 00:41:51.249
brand that as well and have the splash
 

00:41:51.249 --> 00:41:52.529
brand that as well and have the splash
screen experience before their

00:41:52.529 --> 00:41:52.539
screen experience before their
 

00:41:52.539 --> 00:41:55.109
screen experience before their
application starts there's some tips

00:41:55.109 --> 00:41:55.119
application starts there's some tips
 

00:41:55.119 --> 00:41:57.269
application starts there's some tips
about avoiding UI stalls so the UI

00:41:57.269 --> 00:41:57.279
about avoiding UI stalls so the UI
 

00:41:57.279 --> 00:41:58.180
about avoiding UI stalls so the UI
thread

00:41:58.180 --> 00:41:58.190
thread
 

00:41:58.190 --> 00:41:59.650
thread
really likes to run and keep running

00:41:59.650 --> 00:41:59.660
really likes to run and keep running
 

00:41:59.660 --> 00:42:01.330
really likes to run and keep running
otherwise the user is gonna sit there

00:42:01.330 --> 00:42:01.340
otherwise the user is gonna sit there
 

00:42:01.340 --> 00:42:04.120
otherwise the user is gonna sit there
looking at a skip frame while it's

00:42:04.120 --> 00:42:04.130
looking at a skip frame while it's
 

00:42:04.130 --> 00:42:06.010
looking at a skip frame while it's
actually busy doing something that it

00:42:06.010 --> 00:42:06.020
actually busy doing something that it
 

00:42:06.020 --> 00:42:08.830
actually busy doing something that it
shouldn't be so inflation tends to be

00:42:08.830 --> 00:42:08.840
shouldn't be so inflation tends to be
 

00:42:08.840 --> 00:42:12.280
shouldn't be so inflation tends to be
expensive so try not to inflate when you

00:42:12.280 --> 00:42:12.290
expensive so try not to inflate when you
 

00:42:12.290 --> 00:42:14.320
expensive so try not to inflate when you
don't have to or try to minimize the

00:42:14.320 --> 00:42:14.330
don't have to or try to minimize the
 

00:42:14.330 --> 00:42:16.000
don't have to or try to minimize the
amount of inflation happening if you

00:42:16.000 --> 00:42:16.010
amount of inflation happening if you
 

00:42:16.010 --> 00:42:17.620
amount of inflation happening if you
have a really complex view hierarchy

00:42:17.620 --> 00:42:17.630
have a really complex view hierarchy
 

00:42:17.630 --> 00:42:19.600
have a really complex view hierarchy
maybe you didn't need all of that all

00:42:19.600 --> 00:42:19.610
maybe you didn't need all of that all
 

00:42:19.610 --> 00:42:21.550
maybe you didn't need all of that all
the time maybe you could actually use

00:42:21.550 --> 00:42:21.560
the time maybe you could actually use
 

00:42:21.560 --> 00:42:23.110
the time maybe you could actually use
view stubs in there and inflate other

00:42:23.110 --> 00:42:23.120
view stubs in there and inflate other
 

00:42:23.120 --> 00:42:25.930
view stubs in there and inflate other
stuff on the fly as necessary instead of

00:42:25.930 --> 00:42:25.940
stuff on the fly as necessary instead of
 

00:42:25.940 --> 00:42:29.080
stuff on the fly as necessary instead of
having like I don't know Play Store like

00:42:29.080 --> 00:42:29.090
having like I don't know Play Store like
 

00:42:29.090 --> 00:42:30.910
having like I don't know Play Store like
hierarchy that gets inflated on the fly

00:42:30.910 --> 00:42:30.920
hierarchy that gets inflated on the fly
 

00:42:30.920 --> 00:42:33.190
hierarchy that gets inflated on the fly
whenever you want your activity that

00:42:33.190 --> 00:42:33.200
whenever you want your activity that
 

00:42:33.200 --> 00:42:39.400
whenever you want your activity that
would be nice no handling events when

00:42:39.400 --> 00:42:39.410
would be nice no handling events when
 

00:42:39.410 --> 00:42:42.430
would be nice no handling events when
you get an event it's nice to do less

00:42:42.430 --> 00:42:42.440
you get an event it's nice to do less
 

00:42:42.440 --> 00:42:43.630
you get an event it's nice to do less
expensive operations

00:42:43.630 --> 00:42:43.640
expensive operations
 

00:42:43.640 --> 00:42:45.130
expensive operations
it's nice when someone clicks a button

00:42:45.130 --> 00:42:45.140
it's nice when someone clicks a button
 

00:42:45.140 --> 00:42:46.600
it's nice when someone clicks a button
if you don't actually make a network

00:42:46.600 --> 00:42:46.610
if you don't actually make a network
 

00:42:46.610 --> 00:42:48.460
if you don't actually make a network
call in general or go to the database

00:42:48.460 --> 00:42:48.470
call in general or go to the database
 

00:42:48.470 --> 00:42:49.870
call in general or go to the database
you kind of want to do that stuff

00:42:49.870 --> 00:42:49.880
you kind of want to do that stuff
 

00:42:49.880 --> 00:42:51.490
you kind of want to do that stuff
a synchronously off the UI thread

00:42:51.490 --> 00:42:51.500
a synchronously off the UI thread
 

00:42:51.500 --> 00:42:53.500
a synchronously off the UI thread
because those events are being processed

00:42:53.500 --> 00:42:53.510
because those events are being processed
 

00:42:53.510 --> 00:42:56.290
because those events are being processed
in the same thread that's handling your

00:42:56.290 --> 00:42:56.300
in the same thread that's handling your
 

00:42:56.300 --> 00:42:59.080
in the same thread that's handling your
animation events your input events as

00:42:59.080 --> 00:42:59.090
animation events your input events as
 

00:42:59.090 --> 00:43:00.880
animation events your input events as
well as your rendering events and layout

00:43:00.880 --> 00:43:00.890
well as your rendering events and layout
 

00:43:00.890 --> 00:43:02.410
well as your rendering events and layout
like all of that stuff has to happen on

00:43:02.410 --> 00:43:02.420
like all of that stuff has to happen on
 

00:43:02.420 --> 00:43:03.670
like all of that stuff has to happen on
the UI thread so anything that you're

00:43:03.670 --> 00:43:03.680
the UI thread so anything that you're
 

00:43:03.680 --> 00:43:05.620
the UI thread so anything that you're
doing that's not visual that's not UI

00:43:05.620 --> 00:43:05.630
doing that's not visual that's not UI
 

00:43:05.630 --> 00:43:07.750
doing that's not visual that's not UI
related should really happen elsewhere

00:43:07.750 --> 00:43:07.760
related should really happen elsewhere
 

00:43:07.760 --> 00:43:11.110
related should really happen elsewhere
even if it will end up in data that does

00:43:11.110 --> 00:43:11.120
even if it will end up in data that does
 

00:43:11.120 --> 00:43:13.420
even if it will end up in data that does
populate the UI which a lot of this does

00:43:13.420 --> 00:43:13.430
populate the UI which a lot of this does
 

00:43:13.430 --> 00:43:14.710
populate the UI which a lot of this does
like you know they click on the button

00:43:14.710 --> 00:43:14.720
like you know they click on the button
 

00:43:14.720 --> 00:43:16.180
like you know they click on the button
that means you know some transaction

00:43:16.180 --> 00:43:16.190
that means you know some transaction
 

00:43:16.190 --> 00:43:17.920
that means you know some transaction
where we need to repopulate the data

00:43:17.920 --> 00:43:17.930
where we need to repopulate the data
 

00:43:17.930 --> 00:43:19.360
where we need to repopulate the data
that the user is looking at that's great

00:43:19.360 --> 00:43:19.370
that the user is looking at that's great
 

00:43:19.370 --> 00:43:20.380
that the user is looking at that's great
but you don't have to do it

00:43:20.380 --> 00:43:20.390
but you don't have to do it
 

00:43:20.390 --> 00:43:22.300
but you don't have to do it
synchronously right so you could spawn

00:43:22.300 --> 00:43:22.310
synchronously right so you could spawn
 

00:43:22.310 --> 00:43:24.400
synchronously right so you could spawn
an asynchronous task async task or

00:43:24.400 --> 00:43:24.410
an asynchronous task async task or
 

00:43:24.410 --> 00:43:27.190
an asynchronous task async task or
loader or whatever to go get that data

00:43:27.190 --> 00:43:27.200
loader or whatever to go get that data
 

00:43:27.200 --> 00:43:29.260
loader or whatever to go get that data
and then when it's back then you can

00:43:29.260 --> 00:43:29.270
and then when it's back then you can
 

00:43:29.270 --> 00:43:31.600
and then when it's back then you can
populate the UI in the meantime the user

00:43:31.600 --> 00:43:31.610
populate the UI in the meantime the user
 

00:43:31.610 --> 00:43:33.130
populate the UI in the meantime the user
was actually able to interact with your

00:43:33.130 --> 00:43:33.140
was actually able to interact with your
 

00:43:33.140 --> 00:43:35.940
was actually able to interact with your
application and it didn't seem so janky

00:43:35.940 --> 00:43:35.950
application and it didn't seem so janky
 

00:43:35.950 --> 00:43:38.740
application and it didn't seem so janky
measuring in layouts is quite expensive

00:43:38.740 --> 00:43:38.750
measuring in layouts is quite expensive
 

00:43:38.750 --> 00:43:40.600
measuring in layouts is quite expensive
it's good to avoid it particularly

00:43:40.600 --> 00:43:40.610
it's good to avoid it particularly
 

00:43:40.610 --> 00:43:44.020
it's good to avoid it particularly
during animations so if you wanted to

00:43:44.020 --> 00:43:44.030
during animations so if you wanted to
 

00:43:44.030 --> 00:43:48.070
during animations so if you wanted to
let's say animate an object to move from

00:43:48.070 --> 00:43:48.080
let's say animate an object to move from
 

00:43:48.080 --> 00:43:49.960
let's say animate an object to move from
one location to another you could

00:43:49.960 --> 00:43:49.970
one location to another you could
 

00:43:49.970 --> 00:43:51.850
one location to another you could
actually animate the layout params right

00:43:51.850 --> 00:43:51.860
actually animate the layout params right
 

00:43:51.860 --> 00:43:54.130
actually animate the layout params right
you could change the the layout params

00:43:54.130 --> 00:43:54.140
you could change the the layout params
 

00:43:54.140 --> 00:43:55.240
you could change the the layout params
that were causing that thing to be

00:43:55.240 --> 00:43:55.250
that were causing that thing to be
 

00:43:55.250 --> 00:43:58.270
that were causing that thing to be
positioned in the window you could and

00:43:58.270 --> 00:43:58.280
positioned in the window you could and
 

00:43:58.280 --> 00:43:59.620
positioned in the window you could and
that's kind of the the physically

00:43:59.620 --> 00:43:59.630
that's kind of the the physically
 

00:43:59.630 --> 00:44:01.240
that's kind of the the physically
correct thing to do well change the

00:44:01.240 --> 00:44:01.250
correct thing to do well change the
 

00:44:01.250 --> 00:44:03.610
correct thing to do well change the
layout params that forces a real layout

00:44:03.610 --> 00:44:03.620
layout params that forces a real layout
 

00:44:03.620 --> 00:44:05.290
layout params that forces a real layout
and then it'll figure out where it's

00:44:05.290 --> 00:44:05.300
and then it'll figure out where it's
 

00:44:05.300 --> 00:44:06.640
and then it'll figure out where it's
supposed to be and then it'll draw it at

00:44:06.640 --> 00:44:06.650
supposed to be and then it'll draw it at
 

00:44:06.650 --> 00:44:07.600
supposed to be and then it'll draw it at
the correct place and in the meantime

00:44:07.600 --> 00:44:07.610
the correct place and in the meantime
 

00:44:07.610 --> 00:44:09.910
the correct place and in the meantime
it's going to run a lot slower than you

00:44:09.910 --> 00:44:09.920
it's going to run a lot slower than you
 

00:44:09.920 --> 00:44:11.290
it's going to run a lot slower than you
wanted it to you're going to miss frames

00:44:11.290 --> 00:44:11.300
wanted it to you're going to miss frames
 

00:44:11.300 --> 00:44:11.920
wanted it to you're going to miss frames
in there depend

00:44:11.920 --> 00:44:11.930
in there depend
 

00:44:11.930 --> 00:44:13.960
in there depend
the complexity of your hierarchy it's a

00:44:13.960 --> 00:44:13.970
the complexity of your hierarchy it's a
 

00:44:13.970 --> 00:44:16.480
the complexity of your hierarchy it's a
lot better to actually animate with post

00:44:16.480 --> 00:44:16.490
lot better to actually animate with post
 

00:44:16.490 --> 00:44:18.039
lot better to actually animate with post
layout values like translation X

00:44:18.039 --> 00:44:18.049
layout values like translation X
 

00:44:18.049 --> 00:44:20.349
layout values like translation X
translation Y don't change the layout

00:44:20.349 --> 00:44:20.359
translation Y don't change the layout
 

00:44:20.359 --> 00:44:22.690
translation Y don't change the layout
params which force a layout instead

00:44:22.690 --> 00:44:22.700
params which force a layout instead
 

00:44:22.700 --> 00:44:24.789
params which force a layout instead
animate something that makes it visually

00:44:24.789 --> 00:44:24.799
animate something that makes it visually
 

00:44:24.799 --> 00:44:27.670
animate something that makes it visually
correct and then fix up the layout at

00:44:27.670 --> 00:44:27.680
correct and then fix up the layout at
 

00:44:27.680 --> 00:44:29.380
correct and then fix up the layout at
the end or a typical technique that we

00:44:29.380 --> 00:44:29.390
the end or a typical technique that we
 

00:44:29.390 --> 00:44:32.200
the end or a typical technique that we
use in animations is run layout figure

00:44:32.200 --> 00:44:32.210
use in animations is run layout figure
 

00:44:32.210 --> 00:44:33.579
use in animations is run layout figure
out where it's going to be at the end of

00:44:33.579 --> 00:44:33.589
out where it's going to be at the end of
 

00:44:33.589 --> 00:44:34.329
out where it's going to be at the end of
the animation

00:44:34.329 --> 00:44:34.339
the animation
 

00:44:34.339 --> 00:44:36.880
the animation
so it'll run layout it'll figure out

00:44:36.880 --> 00:44:36.890
so it'll run layout it'll figure out
 

00:44:36.890 --> 00:44:38.170
so it'll run layout it'll figure out
where it needs to be and then you've set

00:44:38.170 --> 00:44:38.180
where it needs to be and then you've set
 

00:44:38.180 --> 00:44:40.480
where it needs to be and then you've set
a non pre-draw listener on it and then

00:44:40.480 --> 00:44:40.490
a non pre-draw listener on it and then
 

00:44:40.490 --> 00:44:41.980
a non pre-draw listener on it and then
in your own pre-draw listener you say

00:44:41.980 --> 00:44:41.990
in your own pre-draw listener you say
 

00:44:41.990 --> 00:44:43.990
in your own pre-draw listener you say
okay well I know I want to animate to

00:44:43.990 --> 00:44:44.000
okay well I know I want to animate to
 

00:44:44.000 --> 00:44:45.460
okay well I know I want to animate to
this other spot down there so I'm gonna

00:44:45.460 --> 00:44:45.470
this other spot down there so I'm gonna
 

00:44:45.470 --> 00:44:47.289
this other spot down there so I'm gonna
run an animation basically rewind to

00:44:47.289 --> 00:44:47.299
run an animation basically rewind to
 

00:44:47.299 --> 00:44:49.750
run an animation basically rewind to
where it was before and then run forward

00:44:49.750 --> 00:44:49.760
where it was before and then run forward
 

00:44:49.760 --> 00:44:52.480
where it was before and then run forward
to the new layout location so basically

00:44:52.480 --> 00:44:52.490
to the new layout location so basically
 

00:44:52.490 --> 00:44:54.819
to the new layout location so basically
running translation Y from negative

00:44:54.819 --> 00:44:54.829
running translation Y from negative
 

00:44:54.829 --> 00:44:57.069
running translation Y from negative
hundred to zero this is essentially the

00:44:57.069 --> 00:44:57.079
hundred to zero this is essentially the
 

00:44:57.079 --> 00:44:58.599
hundred to zero this is essentially the
approach that we use in the transitions

00:44:58.599 --> 00:44:58.609
approach that we use in the transitions
 

00:44:58.609 --> 00:45:01.000
approach that we use in the transitions
package right we put it on pre-draw

00:45:01.000 --> 00:45:01.010
package right we put it on pre-draw
 

00:45:01.010 --> 00:45:02.890
package right we put it on pre-draw
listener we figure out where it was we

00:45:02.890 --> 00:45:02.900
listener we figure out where it was we
 

00:45:02.900 --> 00:45:04.000
listener we figure out where it was we
figure out where it's going and then we

00:45:04.000 --> 00:45:04.010
figure out where it's going and then we
 

00:45:04.010 --> 00:45:05.769
figure out where it's going and then we
set up the animation to rewind and then

00:45:05.769 --> 00:45:05.779
set up the animation to rewind and then
 

00:45:05.779 --> 00:45:10.809
set up the animation to rewind and then
play forward in general that's related

00:45:10.809 --> 00:45:10.819
play forward in general that's related
 

00:45:10.819 --> 00:45:12.789
play forward in general that's related
to the allocation concerns and the

00:45:12.789 --> 00:45:12.799
to the allocation concerns and the
 

00:45:12.799 --> 00:45:14.109
to the allocation concerns and the
amount of operations you're actually

00:45:14.109 --> 00:45:14.119
amount of operations you're actually
 

00:45:14.119 --> 00:45:16.150
amount of operations you're actually
doing in the ondraw and then the

00:45:16.150 --> 00:45:16.160
doing in the ondraw and then the
 

00:45:16.160 --> 00:45:18.789
doing in the ondraw and then the
animation concerns in general just be

00:45:18.789 --> 00:45:18.799
animation concerns in general just be
 

00:45:18.799 --> 00:45:20.260
animation concerns in general just be
aware that when you're in the middle of

00:45:20.260 --> 00:45:20.270
aware that when you're in the middle of
 

00:45:20.270 --> 00:45:22.569
aware that when you're in the middle of
an animation every expensive operation

00:45:22.569 --> 00:45:22.579
an animation every expensive operation
 

00:45:22.579 --> 00:45:24.609
an animation every expensive operation
you're doing or every memory allocation

00:45:24.609 --> 00:45:24.619
you're doing or every memory allocation
 

00:45:24.619 --> 00:45:26.859
you're doing or every memory allocation
could be contributing to missing a frame

00:45:26.859 --> 00:45:26.869
could be contributing to missing a frame
 

00:45:26.869 --> 00:45:28.630
could be contributing to missing a frame
it may not seem like that big a deal

00:45:28.630 --> 00:45:28.640
it may not seem like that big a deal
 

00:45:28.640 --> 00:45:30.579
it may not seem like that big a deal
like 30 frames a second 60 frames a

00:45:30.579 --> 00:45:30.589
like 30 frames a second 60 frames a
 

00:45:30.589 --> 00:45:32.140
like 30 frames a second 60 frames a
second it's still moving on the screen

00:45:32.140 --> 00:45:32.150
second it's still moving on the screen
 

00:45:32.150 --> 00:45:34.180
second it's still moving on the screen
the real problem comes in when it's

00:45:34.180 --> 00:45:34.190
the real problem comes in when it's
 

00:45:34.190 --> 00:45:36.309
the real problem comes in when it's
inconsistent so if you're typically able

00:45:36.309 --> 00:45:36.319
inconsistent so if you're typically able
 

00:45:36.319 --> 00:45:38.410
inconsistent so if you're typically able
to get 60 frames a second but eventually

00:45:38.410 --> 00:45:38.420
to get 60 frames a second but eventually
 

00:45:38.420 --> 00:45:40.029
to get 60 frames a second but eventually
a GC kicks in because you were

00:45:40.029 --> 00:45:40.039
a GC kicks in because you were
 

00:45:40.039 --> 00:45:41.920
a GC kicks in because you were
allocating a bunch of stuff in ondraw or

00:45:41.920 --> 00:45:41.930
allocating a bunch of stuff in ondraw or
 

00:45:41.930 --> 00:45:45.400
allocating a bunch of stuff in ondraw or
whatever then there will be a skip frame

00:45:45.400 --> 00:45:45.410
whatever then there will be a skip frame
 

00:45:45.410 --> 00:45:47.529
whatever then there will be a skip frame
in the middle so yeah 30 frames a second

00:45:47.529 --> 00:45:47.539
in the middle so yeah 30 frames a second
 

00:45:47.539 --> 00:45:49.510
in the middle so yeah 30 frames a second
is reasonably smooth if it was

00:45:49.510 --> 00:45:49.520
is reasonably smooth if it was
 

00:45:49.520 --> 00:45:52.510
is reasonably smooth if it was
consistent but going from 60 down to 30

00:45:52.510 --> 00:45:52.520
consistent but going from 60 down to 30
 

00:45:52.520 --> 00:45:54.579
consistent but going from 60 down to 30
and then back to 60 causes a hiccup

00:45:54.579 --> 00:45:54.589
and then back to 60 causes a hiccup
 

00:45:54.589 --> 00:45:56.200
and then back to 60 causes a hiccup
that's very noticeable to the user in

00:45:56.200 --> 00:45:56.210
that's very noticeable to the user in
 

00:45:56.210 --> 00:45:57.640
that's very noticeable to the user in
the middle it's going to pause just

00:45:57.640 --> 00:45:57.650
the middle it's going to pause just
 

00:45:57.650 --> 00:45:59.799
the middle it's going to pause just
slightly and then skip forward longer

00:45:59.799 --> 00:45:59.809
slightly and then skip forward longer
 

00:45:59.809 --> 00:46:01.390
slightly and then skip forward longer
than it would have if it had a smooth

00:46:01.390 --> 00:46:01.400
than it would have if it had a smooth
 

00:46:01.400 --> 00:46:05.500
than it would have if it had a smooth
frame rate instead avoid complex view

00:46:05.500 --> 00:46:05.510
frame rate instead avoid complex view
 

00:46:05.510 --> 00:46:07.029
frame rate instead avoid complex view
hierarchies I alluded to this before

00:46:07.029 --> 00:46:07.039
hierarchies I alluded to this before
 

00:46:07.039 --> 00:46:08.799
hierarchies I alluded to this before
like don't have more views than you need

00:46:08.799 --> 00:46:08.809
like don't have more views than you need
 

00:46:08.809 --> 00:46:10.870
like don't have more views than you need
don't have deeper nested layouts than

00:46:10.870 --> 00:46:10.880
don't have deeper nested layouts than
 

00:46:10.880 --> 00:46:12.609
don't have deeper nested layouts than
you need I pull up some applications in

00:46:12.609 --> 00:46:12.619
you need I pull up some applications in
 

00:46:12.619 --> 00:46:14.620
you need I pull up some applications in
hierarchy viewer hos use hierarchy

00:46:14.620 --> 00:46:14.630
hierarchy viewer hos use hierarchy
 

00:46:14.630 --> 00:46:18.339
hierarchy viewer hos use hierarchy
viewer okay good getting there

00:46:18.339 --> 00:46:18.349
viewer okay good getting there
 

00:46:18.349 --> 00:46:19.750
viewer okay good getting there
okay there we'd like a hundred percent

00:46:19.750 --> 00:46:19.760
okay there we'd like a hundred percent
 

00:46:19.760 --> 00:46:21.640
okay there we'd like a hundred percent
someday it's a really good way to sort

00:46:21.640 --> 00:46:21.650
someday it's a really good way to sort
 

00:46:21.650 --> 00:46:23.500
someday it's a really good way to sort
of get a mental model of what your

00:46:23.500 --> 00:46:23.510
of get a mental model of what your
 

00:46:23.510 --> 00:46:25.120
of get a mental model of what your
application looks like on the inside

00:46:25.120 --> 00:46:25.130
application looks like on the inside
 

00:46:25.130 --> 00:46:25.720
application looks like on the inside
with a ma

00:46:25.720 --> 00:46:25.730
with a ma
 

00:46:25.730 --> 00:46:28.620
with a ma
and the containment hierarchies like

00:46:28.620 --> 00:46:28.630
and the containment hierarchies like
 

00:46:28.630 --> 00:46:31.720
and the containment hierarchies like
I've seen some applications that have

00:46:31.720 --> 00:46:31.730
I've seen some applications that have
 

00:46:31.730 --> 00:46:34.660
I've seen some applications that have
this you know long tail of containers

00:46:34.660 --> 00:46:34.670
this you know long tail of containers
 

00:46:34.670 --> 00:46:36.010
this you know long tail of containers
where they've got a relative layout and

00:46:36.010 --> 00:46:36.020
where they've got a relative layout and
 

00:46:36.020 --> 00:46:37.300
where they've got a relative layout and
then there's a linear layout inside of

00:46:37.300 --> 00:46:37.310
then there's a linear layout inside of
 

00:46:37.310 --> 00:46:38.530
then there's a linear layout inside of
that and then there's a frame layout and

00:46:38.530 --> 00:46:38.540
that and then there's a frame layout and
 

00:46:38.540 --> 00:46:39.940
that and then there's a frame layout and
like each one of these things like it

00:46:39.940 --> 00:46:39.950
like each one of these things like it
 

00:46:39.950 --> 00:46:41.440
like each one of these things like it
had a purpose somebody had a reason for

00:46:41.440 --> 00:46:41.450
had a purpose somebody had a reason for
 

00:46:41.450 --> 00:46:43.630
had a purpose somebody had a reason for
that like I want to you know have this

00:46:43.630 --> 00:46:43.640
that like I want to you know have this
 

00:46:43.640 --> 00:46:44.830
that like I want to you know have this
background here and then there's this

00:46:44.830 --> 00:46:44.840
background here and then there's this
 

00:46:44.840 --> 00:46:46.570
background here and then there's this
other layout that's tuned to you know

00:46:46.570 --> 00:46:46.580
other layout that's tuned to you know
 

00:46:46.580 --> 00:46:48.700
other layout that's tuned to you know
have the right fringe effect on I don't

00:46:48.700 --> 00:46:48.710
have the right fringe effect on I don't
 

00:46:48.710 --> 00:46:50.380
have the right fringe effect on I don't
know what their reasoning was I'm sure

00:46:50.380 --> 00:46:50.390
know what their reasoning was I'm sure
 

00:46:50.390 --> 00:46:52.300
know what their reasoning was I'm sure
there was a good one but not good enough

00:46:52.300 --> 00:46:52.310
there was a good one but not good enough
 

00:46:52.310 --> 00:46:53.920
there was a good one but not good enough
right what you want to do is figure out

00:46:53.920 --> 00:46:53.930
right what you want to do is figure out
 

00:46:53.930 --> 00:46:55.480
right what you want to do is figure out
how to have you know the single

00:46:55.480 --> 00:46:55.490
how to have you know the single
 

00:46:55.490 --> 00:46:57.130
how to have you know the single
container that you needed instead of the

00:46:57.130 --> 00:46:57.140
container that you needed instead of the
 

00:46:57.140 --> 00:46:58.690
container that you needed instead of the
long nested thing that's simply going to

00:46:58.690 --> 00:46:58.700
long nested thing that's simply going to
 

00:46:58.700 --> 00:47:02.320
long nested thing that's simply going to
cause more overhead for inflation for

00:47:02.320 --> 00:47:02.330
cause more overhead for inflation for
 

00:47:02.330 --> 00:47:04.750
cause more overhead for inflation for
layout traversal for rendering all of

00:47:04.750 --> 00:47:04.760
layout traversal for rendering all of
 

00:47:04.760 --> 00:47:08.020
layout traversal for rendering all of
this stuff every layer is in hierarchies

00:47:08.020 --> 00:47:08.030
this stuff every layer is in hierarchies
 

00:47:08.030 --> 00:47:09.160
this stuff every layer is in hierarchies
just causing more work for their

00:47:09.160 --> 00:47:09.170
just causing more work for their
 

00:47:09.170 --> 00:47:10.990
just causing more work for their
framework every time we need to redraw

00:47:10.990 --> 00:47:11.000
framework every time we need to redraw
 

00:47:11.000 --> 00:47:14.650
framework every time we need to redraw
you also relative layout is probably the

00:47:14.650 --> 00:47:14.660
you also relative layout is probably the
 

00:47:14.660 --> 00:47:17.380
you also relative layout is probably the
most flexible layout it allows you to do

00:47:17.380 --> 00:47:17.390
most flexible layout it allows you to do
 

00:47:17.390 --> 00:47:19.170
most flexible layout it allows you to do
the association with you know sibling

00:47:19.170 --> 00:47:19.180
the association with you know sibling
 

00:47:19.180 --> 00:47:22.720
the association with you know sibling
views and the stuff on the side and I

00:47:22.720 --> 00:47:22.730
views and the stuff on the side and I
 

00:47:22.730 --> 00:47:24.250
views and the stuff on the side and I
want to align this next to that so it's

00:47:24.250 --> 00:47:24.260
want to align this next to that so it's
 

00:47:24.260 --> 00:47:26.250
want to align this next to that so it's
it's the most flexible which is why

00:47:26.250 --> 00:47:26.260
it's the most flexible which is why
 

00:47:26.260 --> 00:47:28.300
it's the most flexible which is why
unfortunately it is the layout that we

00:47:28.300 --> 00:47:28.310
unfortunately it is the layout that we
 

00:47:28.310 --> 00:47:30.520
unfortunately it is the layout that we
use when you create a new project in

00:47:30.520 --> 00:47:30.530
use when you create a new project in
 

00:47:30.530 --> 00:47:34.150
use when you create a new project in
Android studio this is not something I'm

00:47:34.150 --> 00:47:34.160
Android studio this is not something I'm
 

00:47:34.160 --> 00:47:36.460
Android studio this is not something I'm
real happy about right now we would like

00:47:36.460 --> 00:47:36.470
real happy about right now we would like
 

00:47:36.470 --> 00:47:38.230
real happy about right now we would like
to change this eventually the problem is

00:47:38.230 --> 00:47:38.240
to change this eventually the problem is
 

00:47:38.240 --> 00:47:40.450
to change this eventually the problem is
that relative layout causes us to

00:47:40.450 --> 00:47:40.460
that relative layout causes us to
 

00:47:40.460 --> 00:47:42.910
that relative layout causes us to
measure twice right so if you are

00:47:42.910 --> 00:47:42.920
measure twice right so if you are
 

00:47:42.920 --> 00:47:44.920
measure twice right so if you are
associating views with other views that

00:47:44.920 --> 00:47:44.930
associating views with other views that
 

00:47:44.930 --> 00:47:47.050
associating views with other views that
means we're going to ask all the views

00:47:47.050 --> 00:47:47.060
means we're going to ask all the views
 

00:47:47.060 --> 00:47:49.270
means we're going to ask all the views
how big they want to be and where they

00:47:49.270 --> 00:47:49.280
how big they want to be and where they
 

00:47:49.280 --> 00:47:52.090
how big they want to be and where they
want to be well we're gonna we're gonna

00:47:52.090 --> 00:47:52.100
want to be well we're gonna we're gonna
 

00:47:52.100 --> 00:47:53.410
want to be well we're gonna we're gonna
ask how big they want to be because we

00:47:53.410 --> 00:47:53.420
ask how big they want to be because we
 

00:47:53.420 --> 00:47:54.610
ask how big they want to be because we
need to figure out where to put them so

00:47:54.610 --> 00:47:54.620
need to figure out where to put them so
 

00:47:54.620 --> 00:47:56.230
need to figure out where to put them so
we're gonna ask all of them and we're

00:47:56.230 --> 00:47:56.240
we're gonna ask all of them and we're
 

00:47:56.240 --> 00:47:57.490
we're gonna ask all of them and we're
going to take all this information and

00:47:57.490 --> 00:47:57.500
going to take all this information and
 

00:47:57.500 --> 00:47:58.690
going to take all this information and
we'll crunch on it a little bit and

00:47:58.690 --> 00:47:58.700
we'll crunch on it a little bit and
 

00:47:58.700 --> 00:48:00.070
we'll crunch on it a little bit and
we'll say okay we know how big everyone

00:48:00.070 --> 00:48:00.080
we'll say okay we know how big everyone
 

00:48:00.080 --> 00:48:02.260
we'll say okay we know how big everyone
wants to be now we we have more

00:48:02.260 --> 00:48:02.270
wants to be now we we have more
 

00:48:02.270 --> 00:48:03.760
wants to be now we we have more
information about all the relative

00:48:03.760 --> 00:48:03.770
information about all the relative
 

00:48:03.770 --> 00:48:05.590
information about all the relative
locations and sizes of things we're

00:48:05.590 --> 00:48:05.600
locations and sizes of things we're
 

00:48:05.600 --> 00:48:06.880
locations and sizes of things we're
gonna ask you one more time so it's

00:48:06.880 --> 00:48:06.890
gonna ask you one more time so it's
 

00:48:06.890 --> 00:48:08.740
gonna ask you one more time so it's
gonna measure twice before it actually

00:48:08.740 --> 00:48:08.750
gonna measure twice before it actually
 

00:48:08.750 --> 00:48:12.100
gonna measure twice before it actually
lays out so if you have a relative

00:48:12.100 --> 00:48:12.110
lays out so if you have a relative
 

00:48:12.110 --> 00:48:13.660
lays out so if you have a relative
layout at the top basically you're

00:48:13.660 --> 00:48:13.670
layout at the top basically you're
 

00:48:13.670 --> 00:48:16.210
layout at the top basically you're
measuring every view in the hierarchy

00:48:16.210 --> 00:48:16.220
measuring every view in the hierarchy
 

00:48:16.220 --> 00:48:18.670
measuring every view in the hierarchy
twice or even worse what we've seen is

00:48:18.670 --> 00:48:18.680
twice or even worse what we've seen is
 

00:48:18.680 --> 00:48:20.740
twice or even worse what we've seen is
nested relative layouts and then you

00:48:20.740 --> 00:48:20.750
nested relative layouts and then you
 

00:48:20.750 --> 00:48:23.050
nested relative layouts and then you
basically double it for every layer in

00:48:23.050 --> 00:48:23.060
basically double it for every layer in
 

00:48:23.060 --> 00:48:24.460
basically double it for every layer in
the hierarchy so a relative layout

00:48:24.460 --> 00:48:24.470
the hierarchy so a relative layout
 

00:48:24.470 --> 00:48:26.530
the hierarchy so a relative layout
sitting beneath another relative layout

00:48:26.530 --> 00:48:26.540
sitting beneath another relative layout
 

00:48:26.540 --> 00:48:27.940
sitting beneath another relative layout
you're measuring all the children of

00:48:27.940 --> 00:48:27.950
you're measuring all the children of
 

00:48:27.950 --> 00:48:30.550
you're measuring all the children of
that nested one four times probably a

00:48:30.550 --> 00:48:30.560
that nested one four times probably a
 

00:48:30.560 --> 00:48:31.330
that nested one four times probably a
bad idea

00:48:31.330 --> 00:48:31.340
bad idea
 

00:48:31.340 --> 00:48:33.490
bad idea
so if you don't need a relative layout

00:48:33.490 --> 00:48:33.500
so if you don't need a relative layout
 

00:48:33.500 --> 00:48:34.990
so if you don't need a relative layout
we understand that in some situations

00:48:34.990 --> 00:48:35.000
we understand that in some situations
 

00:48:35.000 --> 00:48:38.080
we understand that in some situations
you need it usually not at the top level

00:48:38.080 --> 00:48:38.090
you need it usually not at the top level
 

00:48:38.090 --> 00:48:38.260
you need it usually not at the top level
of

00:48:38.260 --> 00:48:38.270
of
 

00:48:38.270 --> 00:48:40.210
of
our hierarchy it's usually needed at a

00:48:40.210 --> 00:48:40.220
our hierarchy it's usually needed at a
 

00:48:40.220 --> 00:48:41.950
our hierarchy it's usually needed at a
container level where you actually need

00:48:41.950 --> 00:48:41.960
container level where you actually need
 

00:48:41.960 --> 00:48:43.690
container level where you actually need
the association of the siblings or

00:48:43.690 --> 00:48:43.700
the association of the siblings or
 

00:48:43.700 --> 00:48:46.240
the association of the siblings or
whatever so go ahead and use it when you

00:48:46.240 --> 00:48:46.250
whatever so go ahead and use it when you
 

00:48:46.250 --> 00:48:47.950
whatever so go ahead and use it when you
need it but be aware of the overhead of

00:48:47.950 --> 00:48:47.960
need it but be aware of the overhead of
 

00:48:47.960 --> 00:48:50.920
need it but be aware of the overhead of
it and try not to put it at a really

00:48:50.920 --> 00:48:50.930
it and try not to put it at a really
 

00:48:50.930 --> 00:48:52.690
it and try not to put it at a really
high level and certainly try not to nest

00:48:52.690 --> 00:48:52.700
high level and certainly try not to nest
 

00:48:52.700 --> 00:49:00.340
high level and certainly try not to nest
it yes is it better to have a relative

00:49:00.340 --> 00:49:00.350
it yes is it better to have a relative
 

00:49:00.350 --> 00:49:02.380
it yes is it better to have a relative
layout with a lot of views or a nested

00:49:02.380 --> 00:49:02.390
layout with a lot of views or a nested
 

00:49:02.390 --> 00:49:04.930
layout with a lot of views or a nested
linear layout it probably depends on so

00:49:04.930 --> 00:49:04.940
linear layout it probably depends on so
 

00:49:04.940 --> 00:49:07.210
linear layout it probably depends on so
the answer is always it depends it

00:49:07.210 --> 00:49:07.220
the answer is always it depends it
 

00:49:07.220 --> 00:49:08.860
the answer is always it depends it
depends on how high up in the hierarchy

00:49:08.860 --> 00:49:08.870
depends on how high up in the hierarchy
 

00:49:08.870 --> 00:49:12.520
depends on how high up in the hierarchy
it is so if it's sitting at the top and

00:49:12.520 --> 00:49:12.530
it is so if it's sitting at the top and
 

00:49:12.530 --> 00:49:14.260
it is so if it's sitting at the top and
then it's gonna cause all of that

00:49:14.260 --> 00:49:14.270
then it's gonna cause all of that
 

00:49:14.270 --> 00:49:15.490
then it's gonna cause all of that
overhead to everything sitting

00:49:15.490 --> 00:49:15.500
overhead to everything sitting
 

00:49:15.500 --> 00:49:17.140
overhead to everything sitting
underneath it at the bottom of your

00:49:17.140 --> 00:49:17.150
underneath it at the bottom of your
 

00:49:17.150 --> 00:49:19.330
underneath it at the bottom of your
hierarchy it's not going to cause that

00:49:19.330 --> 00:49:19.340
hierarchy it's not going to cause that
 

00:49:19.340 --> 00:49:20.860
hierarchy it's not going to cause that
much right you're gonna be measuring all

00:49:20.860 --> 00:49:20.870
much right you're gonna be measuring all
 

00:49:20.870 --> 00:49:23.350
much right you're gonna be measuring all
the views but you wanted to do that

00:49:23.350 --> 00:49:23.360
the views but you wanted to do that
 

00:49:23.360 --> 00:49:24.850
the views but you wanted to do that
anyway like you wanted those sibling

00:49:24.850 --> 00:49:24.860
anyway like you wanted those sibling
 

00:49:24.860 --> 00:49:27.070
anyway like you wanted those sibling
associations that's probably fine nested

00:49:27.070 --> 00:49:27.080
associations that's probably fine nested
 

00:49:27.080 --> 00:49:29.440
associations that's probably fine nested
linearlayout also has its own overhead

00:49:29.440 --> 00:49:29.450
linearlayout also has its own overhead
 

00:49:29.450 --> 00:49:30.820
linearlayout also has its own overhead
associated with it so it doesn't measure

00:49:30.820 --> 00:49:30.830
associated with it so it doesn't measure
 

00:49:30.830 --> 00:49:32.740
associated with it so it doesn't measure
twice but you just added a bunch of

00:49:32.740 --> 00:49:32.750
twice but you just added a bunch of
 

00:49:32.750 --> 00:49:34.870
twice but you just added a bunch of
layers in there it's also worth

00:49:34.870 --> 00:49:34.880
layers in there it's also worth
 

00:49:34.880 --> 00:49:37.510
layers in there it's also worth
considering custom layouts at some point

00:49:37.510 --> 00:49:37.520
considering custom layouts at some point
 

00:49:37.520 --> 00:49:39.400
considering custom layouts at some point
too if you find yourself tying yourself

00:49:39.400 --> 00:49:39.410
too if you find yourself tying yourself
 

00:49:39.410 --> 00:49:41.470
too if you find yourself tying yourself
in knots and adding more and more nested

00:49:41.470 --> 00:49:41.480
in knots and adding more and more nested
 

00:49:41.480 --> 00:49:43.180
in knots and adding more and more nested
lettering or layouts to get the

00:49:43.180 --> 00:49:43.190
lettering or layouts to get the
 

00:49:43.190 --> 00:49:45.070
lettering or layouts to get the
particular effect you wanted you know

00:49:45.070 --> 00:49:45.080
particular effect you wanted you know
 

00:49:45.080 --> 00:49:46.120
particular effect you wanted you know
with all the right padding and

00:49:46.120 --> 00:49:46.130
with all the right padding and
 

00:49:46.130 --> 00:49:47.800
with all the right padding and
associations between all the different

00:49:47.800 --> 00:49:47.810
associations between all the different
 

00:49:47.810 --> 00:49:49.450
associations between all the different
sub views and sub containment

00:49:49.450 --> 00:49:49.460
sub views and sub containment
 

00:49:49.460 --> 00:49:51.280
sub views and sub containment
hierarchies at some point it's much more

00:49:51.280 --> 00:49:51.290
hierarchies at some point it's much more
 

00:49:51.290 --> 00:49:53.770
hierarchies at some point it's much more
optimal to simply create a custom layout

00:49:53.770 --> 00:49:53.780
optimal to simply create a custom layout
 

00:49:53.780 --> 00:49:55.990
optimal to simply create a custom layout
so you use subclass view group or you

00:49:55.990 --> 00:49:56.000
so you use subclass view group or you
 

00:49:56.000 --> 00:49:57.730
so you use subclass view group or you
subclass some layout that does most of

00:49:57.730 --> 00:49:57.740
subclass some layout that does most of
 

00:49:57.740 --> 00:49:59.380
subclass some layout that does most of
what you want and then you do your own

00:49:59.380 --> 00:49:59.390
what you want and then you do your own
 

00:49:59.390 --> 00:50:01.030
what you want and then you do your own
measure and layout and that'll probably

00:50:01.030 --> 00:50:01.040
measure and layout and that'll probably
 

00:50:01.040 --> 00:50:04.840
measure and layout and that'll probably
save you time in the long run launch

00:50:04.840 --> 00:50:04.850
save you time in the long run launch
 

00:50:04.850 --> 00:50:06.850
save you time in the long run launch
fast go ahead and try to get the UI up

00:50:06.850 --> 00:50:06.860
fast go ahead and try to get the UI up
 

00:50:06.860 --> 00:50:08.890
fast go ahead and try to get the UI up
as quickly as possible this pertains to

00:50:08.890 --> 00:50:08.900
as quickly as possible this pertains to
 

00:50:08.900 --> 00:50:09.940
as quickly as possible this pertains to
some of the stuff I was talking about

00:50:09.940 --> 00:50:09.950
some of the stuff I was talking about
 

00:50:09.950 --> 00:50:12.340
some of the stuff I was talking about
before like not doing too much in static

00:50:12.340 --> 00:50:12.350
before like not doing too much in static
 

00:50:12.350 --> 00:50:15.010
before like not doing too much in static
initializers like not inflating all of

00:50:15.010 --> 00:50:15.020
initializers like not inflating all of
 

00:50:15.020 --> 00:50:16.540
initializers like not inflating all of
the views that you might possibly need

00:50:16.540 --> 00:50:16.550
the views that you might possibly need
 

00:50:16.550 --> 00:50:18.640
the views that you might possibly need
in the future instead just get up and

00:50:18.640 --> 00:50:18.650
in the future instead just get up and
 

00:50:18.650 --> 00:50:20.440
in the future instead just get up and
face the user with something quickly

00:50:20.440 --> 00:50:20.450
face the user with something quickly
 

00:50:20.450 --> 00:50:22.150
face the user with something quickly
otherwise you know they've clicked the

00:50:22.150 --> 00:50:22.160
otherwise you know they've clicked the
 

00:50:22.160 --> 00:50:23.440
otherwise you know they've clicked the
button they've seen the starting window

00:50:23.440 --> 00:50:23.450
button they've seen the starting window
 

00:50:23.450 --> 00:50:26.050
button they've seen the starting window
and then four seconds later they see

00:50:26.050 --> 00:50:26.060
and then four seconds later they see
 

00:50:26.060 --> 00:50:27.640
and then four seconds later they see
your application horrible experience

00:50:27.640 --> 00:50:27.650
your application horrible experience
 

00:50:27.650 --> 00:50:29.380
your application horrible experience
right wouldn't it be better to be faced

00:50:29.380 --> 00:50:29.390
right wouldn't it be better to be faced
 

00:50:29.390 --> 00:50:30.790
right wouldn't it be better to be faced
with a simple UI that could then

00:50:30.790 --> 00:50:30.800
with a simple UI that could then
 

00:50:30.800 --> 00:50:34.330
with a simple UI that could then
populate itself later as necessary defer

00:50:34.330 --> 00:50:34.340
populate itself later as necessary defer
 

00:50:34.340 --> 00:50:36.190
populate itself later as necessary defer
the extra work if you didn't need those

00:50:36.190 --> 00:50:36.200
the extra work if you didn't need those
 

00:50:36.200 --> 00:50:37.600
the extra work if you didn't need those
fields initialized maybe you could

00:50:37.600 --> 00:50:37.610
fields initialized maybe you could
 

00:50:37.610 --> 00:50:39.460
fields initialized maybe you could
actually initialize them lazily instead

00:50:39.460 --> 00:50:39.470
actually initialize them lazily instead
 

00:50:39.470 --> 00:50:44.350
actually initialize them lazily instead
and also measure cold starts so when

00:50:44.350 --> 00:50:44.360
and also measure cold starts so when
 

00:50:44.360 --> 00:50:46.690
and also measure cold starts so when
your application starts it's important

00:50:46.690 --> 00:50:46.700
your application starts it's important
 

00:50:46.700 --> 00:50:48.250
your application starts it's important
to understand the different dynamics of

00:50:48.250 --> 00:50:48.260
to understand the different dynamics of
 

00:50:48.260 --> 00:50:50.830
to understand the different dynamics of
what state it was starting from so when

00:50:50.830 --> 00:50:50.840
what state it was starting from so when
 

00:50:50.840 --> 00:50:52.160
what state it was starting from so when
it is started from the

00:50:52.160 --> 00:50:52.170
it is started from the
 

00:50:52.170 --> 00:50:53.990
it is started from the
first time after a reboot that's what we

00:50:53.990 --> 00:50:54.000
first time after a reboot that's what we
 

00:50:54.000 --> 00:50:56.359
first time after a reboot that's what we
refer to as a cold start this means it's

00:50:56.359 --> 00:50:56.369
refer to as a cold start this means it's
 

00:50:56.369 --> 00:50:57.620
refer to as a cold start this means it's
all the work that we had to do to

00:50:57.620 --> 00:50:57.630
all the work that we had to do to
 

00:50:57.630 --> 00:50:59.450
all the work that we had to do to
actually read in the apk to load all the

00:50:59.450 --> 00:50:59.460
actually read in the apk to load all the
 

00:50:59.460 --> 00:51:01.250
actually read in the apk to load all the
classes to initialize all the stuff and

00:51:01.250 --> 00:51:01.260
classes to initialize all the stuff and
 

00:51:01.260 --> 00:51:03.049
classes to initialize all the stuff and
then to do the first layout and

00:51:03.049 --> 00:51:03.059
then to do the first layout and
 

00:51:03.059 --> 00:51:04.760
then to do the first layout and
rendering of that thing there's the

00:51:04.760 --> 00:51:04.770
rendering of that thing there's the
 

00:51:04.770 --> 00:51:06.230
rendering of that thing there's the
window animation but you know what the

00:51:06.230 --> 00:51:06.240
window animation but you know what the
 

00:51:06.240 --> 00:51:07.819
window animation but you know what the
window manager deal with that it's all

00:51:07.819 --> 00:51:07.829
window manager deal with that it's all
 

00:51:07.829 --> 00:51:09.289
window manager deal with that it's all
the stuff that we're doing inside of

00:51:09.289 --> 00:51:09.299
the stuff that we're doing inside of
 

00:51:09.299 --> 00:51:11.599
the stuff that we're doing inside of
your application to simply get to the

00:51:11.599 --> 00:51:11.609
your application to simply get to the
 

00:51:11.609 --> 00:51:14.480
your application to simply get to the
first frame that is displayed so it's

00:51:14.480 --> 00:51:14.490
first frame that is displayed so it's
 

00:51:14.490 --> 00:51:16.160
first frame that is displayed so it's
important to understand how much time

00:51:16.160 --> 00:51:16.170
important to understand how much time
 

00:51:16.170 --> 00:51:18.049
important to understand how much time
that takes and to measure it or purple

00:51:18.049 --> 00:51:18.059
that takes and to measure it or purple
 

00:51:18.059 --> 00:51:19.250
that takes and to measure it or purple
leave so if you launch your application

00:51:19.250 --> 00:51:19.260
leave so if you launch your application
 

00:51:19.260 --> 00:51:21.200
leave so if you launch your application
and then you hit the home button and

00:51:21.200 --> 00:51:21.210
and then you hit the home button and
 

00:51:21.210 --> 00:51:22.640
and then you hit the home button and
then you launch it again your

00:51:22.640 --> 00:51:22.650
then you launch it again your
 

00:51:22.650 --> 00:51:24.380
then you launch it again your
application depending on the amount of

00:51:24.380 --> 00:51:24.390
application depending on the amount of
 

00:51:24.390 --> 00:51:26.240
application depending on the amount of
memory available in the system was

00:51:26.240 --> 00:51:26.250
memory available in the system was
 

00:51:26.250 --> 00:51:28.069
memory available in the system was
probably still resident in memory so all

00:51:28.069 --> 00:51:28.079
probably still resident in memory so all
 

00:51:28.079 --> 00:51:29.720
probably still resident in memory so all
we really needed to do was display it

00:51:29.720 --> 00:51:29.730
we really needed to do was display it
 

00:51:29.730 --> 00:51:31.579
we really needed to do was display it
again weary rendered it period

00:51:31.579 --> 00:51:31.589
again weary rendered it period
 

00:51:31.589 --> 00:51:33.920
again weary rendered it period
right we didn't reload it we didn't you

00:51:33.920 --> 00:51:33.930
right we didn't reload it we didn't you
 

00:51:33.930 --> 00:51:35.960
right we didn't reload it we didn't you
know I in a lot of cases we didn't need

00:51:35.960 --> 00:51:35.970
know I in a lot of cases we didn't need
 

00:51:35.970 --> 00:51:37.280
know I in a lot of cases we didn't need
to do another way we're basically just

00:51:37.280 --> 00:51:37.290
to do another way we're basically just
 

00:51:37.290 --> 00:51:38.510
to do another way we're basically just
you know showing the same thing that we

00:51:38.510 --> 00:51:38.520
you know showing the same thing that we
 

00:51:38.520 --> 00:51:39.200
you know showing the same thing that we
had before

00:51:39.200 --> 00:51:39.210
had before
 

00:51:39.210 --> 00:51:41.150
had before
this is great I can start in 50

00:51:41.150 --> 00:51:41.160
this is great I can start in 50
 

00:51:41.160 --> 00:51:43.400
this is great I can start in 50
milliseconds I'm super fast and then the

00:51:43.400 --> 00:51:43.410
milliseconds I'm super fast and then the
 

00:51:43.410 --> 00:51:44.870
milliseconds I'm super fast and then the
next time you reboot it takes four

00:51:44.870 --> 00:51:44.880
next time you reboot it takes four
 

00:51:44.880 --> 00:51:47.539
next time you reboot it takes four
seconds so what you want to do to really

00:51:47.539 --> 00:51:47.549
seconds so what you want to do to really
 

00:51:47.549 --> 00:51:49.069
seconds so what you want to do to really
get a better measurement is actually

00:51:49.069 --> 00:51:49.079
get a better measurement is actually
 

00:51:49.079 --> 00:51:51.530
get a better measurement is actually
kill the task right so go into recents

00:51:51.530 --> 00:51:51.540
kill the task right so go into recents
 

00:51:51.540 --> 00:51:52.789
kill the task right so go into recents
and swipe it out of the way and that'll

00:51:52.789 --> 00:51:52.799
and swipe it out of the way and that'll
 

00:51:52.799 --> 00:51:54.319
and swipe it out of the way and that'll
get you most of the way toward the

00:51:54.319 --> 00:51:54.329
get you most of the way toward the
 

00:51:54.329 --> 00:51:56.750
get you most of the way toward the
situation of a cold start from reboot so

00:51:56.750 --> 00:51:56.760
situation of a cold start from reboot so
 

00:51:56.760 --> 00:51:58.010
situation of a cold start from reboot so
get it out of memory make sure that

00:51:58.010 --> 00:51:58.020
get it out of memory make sure that
 

00:51:58.020 --> 00:52:00.859
get it out of memory make sure that
we're actually dragging in all of the

00:52:00.859 --> 00:52:00.869
we're actually dragging in all of the
 

00:52:00.869 --> 00:52:03.740
we're actually dragging in all of the
stuff again to really understand how

00:52:03.740 --> 00:52:03.750
stuff again to really understand how
 

00:52:03.750 --> 00:52:05.240
stuff again to really understand how
much time your application is taking the

00:52:05.240 --> 00:52:05.250
much time your application is taking the
 

00:52:05.250 --> 00:52:07.099
much time your application is taking the
launch I want to talk about some of the

00:52:07.099 --> 00:52:07.109
launch I want to talk about some of the
 

00:52:07.109 --> 00:52:08.270
launch I want to talk about some of the
tools that are important to use

00:52:08.270 --> 00:52:08.280
tools that are important to use
 

00:52:08.280 --> 00:52:10.660
tools that are important to use
hopefully everybody uses most of these

00:52:10.660 --> 00:52:10.670
hopefully everybody uses most of these
 

00:52:10.670 --> 00:52:12.980
hopefully everybody uses most of these
systrace talked about a little bit

00:52:12.980 --> 00:52:12.990
systrace talked about a little bit
 

00:52:12.990 --> 00:52:15.400
systrace talked about a little bit
yesterday Cole talked about it as well

00:52:15.400 --> 00:52:15.410
yesterday Cole talked about it as well
 

00:52:15.410 --> 00:52:18.260
yesterday Cole talked about it as well
super powerful tool super confusing

00:52:18.260 --> 00:52:18.270
super powerful tool super confusing
 

00:52:18.270 --> 00:52:19.520
super powerful tool super confusing
there's so much information in there

00:52:19.520 --> 00:52:19.530
there's so much information in there
 

00:52:19.530 --> 00:52:21.380
there's so much information in there
there's so many options you look at it

00:52:21.380 --> 00:52:21.390
there's so many options you look at it
 

00:52:21.390 --> 00:52:23.120
there's so many options you look at it
and you're like I see a lot of green I

00:52:23.120 --> 00:52:23.130
and you're like I see a lot of green I
 

00:52:23.130 --> 00:52:24.500
and you're like I see a lot of green I
see a lot of red I don't know what to do

00:52:24.500 --> 00:52:24.510
see a lot of red I don't know what to do
 

00:52:24.510 --> 00:52:27.049
see a lot of red I don't know what to do
about it we added the the tips the

00:52:27.049 --> 00:52:27.059
about it we added the the tips the
 

00:52:27.059 --> 00:52:29.270
about it we added the the tips the
little circular bubbles in the middle I

00:52:29.270 --> 00:52:29.280
little circular bubbles in the middle I
 

00:52:29.280 --> 00:52:30.500
little circular bubbles in the middle I
would encourage you to get the latest

00:52:30.500 --> 00:52:30.510
would encourage you to get the latest
 

00:52:30.510 --> 00:52:32.900
would encourage you to get the latest
systrace and play with that click on the

00:52:32.900 --> 00:52:32.910
systrace and play with that click on the
 

00:52:32.910 --> 00:52:33.950
systrace and play with that click on the
tips and see what it's trying to tell

00:52:33.950 --> 00:52:33.960
tips and see what it's trying to tell
 

00:52:33.960 --> 00:52:35.809
tips and see what it's trying to tell
you in general the problems that we've

00:52:35.809 --> 00:52:35.819
you in general the problems that we've
 

00:52:35.819 --> 00:52:37.160
you in general the problems that we've
seen that we can do some amount of

00:52:37.160 --> 00:52:37.170
seen that we can do some amount of
 

00:52:37.170 --> 00:52:40.849
seen that we can do some amount of
analysis on in the tool now for you tend

00:52:40.849 --> 00:52:40.859
analysis on in the tool now for you tend
 

00:52:40.859 --> 00:52:43.069
analysis on in the tool now for you tend
to be common issues like you're in the

00:52:43.069 --> 00:52:43.079
to be common issues like you're in the
 

00:52:43.079 --> 00:52:44.450
to be common issues like you're in the
middle of an animation and you ran

00:52:44.450 --> 00:52:44.460
middle of an animation and you ran
 

00:52:44.460 --> 00:52:46.880
middle of an animation and you ran
layout or you're not reusing the view

00:52:46.880 --> 00:52:46.890
layout or you're not reusing the view
 

00:52:46.890 --> 00:52:49.640
layout or you're not reusing the view
when getview is called on your ListView

00:52:49.640 --> 00:52:49.650
when getview is called on your ListView
 

00:52:49.650 --> 00:52:52.010
when getview is called on your ListView
so some some simple things that we

00:52:52.010 --> 00:52:52.020
so some some simple things that we
 

00:52:52.020 --> 00:52:53.270
so some some simple things that we
noticed over and over and over again

00:52:53.270 --> 00:52:53.280
noticed over and over and over again
 

00:52:53.280 --> 00:52:54.859
noticed over and over and over again
that we now fed into the tools that you

00:52:54.859 --> 00:52:54.869
that we now fed into the tools that you
 

00:52:54.869 --> 00:52:57.200
that we now fed into the tools that you
can get for free and then once you start

00:52:57.200 --> 00:52:57.210
can get for free and then once you start
 

00:52:57.210 --> 00:52:59.299
can get for free and then once you start
using systrace more you start to

00:52:59.299 --> 00:52:59.309
using systrace more you start to
 

00:52:59.309 --> 00:53:01.039
using systrace more you start to
understand okay well these are the vsync

00:53:01.039 --> 00:53:01.049
understand okay well these are the vsync
 

00:53:01.049 --> 00:53:03.480
understand okay well these are the vsync
pulses this is you know the

00:53:03.480 --> 00:53:03.490
pulses this is you know the
 

00:53:03.490 --> 00:53:08.160
pulses this is you know the
the CPU usage that was going on at the

00:53:08.160 --> 00:53:08.170
the CPU usage that was going on at the
 

00:53:08.170 --> 00:53:09.990
the CPU usage that was going on at the
time my threat is sleeping because you

00:53:09.990 --> 00:53:10.000
time my threat is sleeping because you
 

00:53:10.000 --> 00:53:11.310
time my threat is sleeping because you
know it's tied to this other event and

00:53:11.310 --> 00:53:11.320
know it's tied to this other event and
 

00:53:11.320 --> 00:53:13.410
know it's tied to this other event and
surface flinger which was processing the

00:53:13.410 --> 00:53:13.420
surface flinger which was processing the
 

00:53:13.420 --> 00:53:15.390
surface flinger which was processing the
GL like there's a lot of associations

00:53:15.390 --> 00:53:15.400
GL like there's a lot of associations
 

00:53:15.400 --> 00:53:16.770
GL like there's a lot of associations
that you can get over time and practice

00:53:16.770 --> 00:53:16.780
that you can get over time and practice
 

00:53:16.780 --> 00:53:18.690
that you can get over time and practice
with using the tool but it's really the

00:53:18.690 --> 00:53:18.700
with using the tool but it's really the
 

00:53:18.700 --> 00:53:20.220
with using the tool but it's really the
only tool that we have that gives you

00:53:20.220 --> 00:53:20.230
only tool that we have that gives you
 

00:53:20.230 --> 00:53:23.070
only tool that we have that gives you
sort of the the big picture of what was

00:53:23.070 --> 00:53:23.080
sort of the the big picture of what was
 

00:53:23.080 --> 00:53:24.840
sort of the the big picture of what was
actually going on in the device that was

00:53:24.840 --> 00:53:24.850
actually going on in the device that was
 

00:53:24.850 --> 00:53:26.250
actually going on in the device that was
causing the jank that you see and you

00:53:26.250 --> 00:53:26.260
causing the jank that you see and you
 

00:53:26.260 --> 00:53:28.530
causing the jank that you see and you
can see the jank in the output there you

00:53:28.530 --> 00:53:28.540
can see the jank in the output there you
 

00:53:28.540 --> 00:53:30.120
can see the jank in the output there you
can see you know I've got regular pulses

00:53:30.120 --> 00:53:30.130
can see you know I've got regular pulses
 

00:53:30.130 --> 00:53:32.820
can see you know I've got regular pulses
I'm I'm doing my perform traversals

00:53:32.820 --> 00:53:32.830
I'm I'm doing my perform traversals
 

00:53:32.830 --> 00:53:34.440
I'm I'm doing my perform traversals
which is the the rendering loop and the

00:53:34.440 --> 00:53:34.450
which is the the rendering loop and the
 

00:53:34.450 --> 00:53:36.390
which is the the rendering loop and the
UI thread on every single frame and then

00:53:36.390 --> 00:53:36.400
UI thread on every single frame and then
 

00:53:36.400 --> 00:53:39.060
UI thread on every single frame and then
I skip three frames why that's what you

00:53:39.060 --> 00:53:39.070
I skip three frames why that's what you
 

00:53:39.070 --> 00:53:40.440
I skip three frames why that's what you
need to figure out so that you can fix

00:53:40.440 --> 00:53:40.450
need to figure out so that you can fix
 

00:53:40.450 --> 00:53:42.359
need to figure out so that you can fix
the jank in your application allocation

00:53:42.359 --> 00:53:42.369
the jank in your application allocation
 

00:53:42.369 --> 00:53:44.490
the jank in your application allocation
tracker super useful for all of the

00:53:44.490 --> 00:53:44.500
tracker super useful for all of the
 

00:53:44.500 --> 00:53:45.690
tracker super useful for all of the
memory stuff that I was talking about

00:53:45.690 --> 00:53:45.700
memory stuff that I was talking about
 

00:53:45.700 --> 00:53:50.310
memory stuff that I was talking about
before so obviously we're using a VM

00:53:50.310 --> 00:53:50.320
before so obviously we're using a VM
 

00:53:50.320 --> 00:53:52.590
before so obviously we're using a VM
here runtime that's going to be

00:53:52.590 --> 00:53:52.600
here runtime that's going to be
 

00:53:52.600 --> 00:53:54.030
here runtime that's going to be
allocating objects you can't avoid

00:53:54.030 --> 00:53:54.040
allocating objects you can't avoid
 

00:53:54.040 --> 00:53:55.830
allocating objects you can't avoid
allocations what you should try to do is

00:53:55.830 --> 00:53:55.840
allocations what you should try to do is
 

00:53:55.840 --> 00:53:57.990
allocations what you should try to do is
avoid allocating during times when you

00:53:57.990 --> 00:53:58.000
avoid allocating during times when you
 

00:53:58.000 --> 00:53:59.970
avoid allocating during times when you
know it could cause jank for the user so

00:53:59.970 --> 00:53:59.980
know it could cause jank for the user so
 

00:53:59.980 --> 00:54:03.180
know it could cause jank for the user so
run that animation and then see what's

00:54:03.180 --> 00:54:03.190
run that animation and then see what's
 

00:54:03.190 --> 00:54:04.830
run that animation and then see what's
being allocated during the animation and

00:54:04.830 --> 00:54:04.840
being allocated during the animation and
 

00:54:04.840 --> 00:54:06.630
being allocated during the animation and
make sure that all of the objects are

00:54:06.630 --> 00:54:06.640
make sure that all of the objects are
 

00:54:06.640 --> 00:54:08.099
make sure that all of the objects are
not actually coming from your code

00:54:08.099 --> 00:54:08.109
not actually coming from your code
 

00:54:08.109 --> 00:54:10.050
not actually coming from your code
ideally there would be no allocations

00:54:10.050 --> 00:54:10.060
ideally there would be no allocations
 

00:54:10.060 --> 00:54:11.280
ideally there would be no allocations
during the animation but if you can't

00:54:11.280 --> 00:54:11.290
during the animation but if you can't
 

00:54:11.290 --> 00:54:13.109
during the animation but if you can't
fix that you can at least fix the ones

00:54:13.109 --> 00:54:13.119
fix that you can at least fix the ones
 

00:54:13.119 --> 00:54:14.490
fix that you can at least fix the ones
that are coming from your code that

00:54:14.490 --> 00:54:14.500
that are coming from your code that
 

00:54:14.500 --> 00:54:16.380
that are coming from your code that
don't actually need to happen during the

00:54:16.380 --> 00:54:16.390
don't actually need to happen during the
 

00:54:16.390 --> 00:54:18.960
don't actually need to happen during the
animation trace view there's two

00:54:18.960 --> 00:54:18.970
animation trace view there's two
 

00:54:18.970 --> 00:54:20.430
animation trace view there's two
versions of it there's a sampling as

00:54:20.430 --> 00:54:20.440
versions of it there's a sampling as
 

00:54:20.440 --> 00:54:24.060
versions of it there's a sampling as
well as a non sampling instrumented

00:54:24.060 --> 00:54:24.070
well as a non sampling instrumented
 

00:54:24.070 --> 00:54:26.220
well as a non sampling instrumented
what's the other way they refer to it

00:54:26.220 --> 00:54:26.230
what's the other way they refer to it
 

00:54:26.230 --> 00:54:29.130
what's the other way they refer to it
what the sampling means okay it's gonna

00:54:29.130 --> 00:54:29.140
what the sampling means okay it's gonna
 

00:54:29.140 --> 00:54:30.570
what the sampling means okay it's gonna
look occasionally and see where it's at

00:54:30.570 --> 00:54:30.580
look occasionally and see where it's at
 

00:54:30.580 --> 00:54:33.359
look occasionally and see where it's at
this has very low overhead which means

00:54:33.359 --> 00:54:33.369
this has very low overhead which means
 

00:54:33.369 --> 00:54:35.550
this has very low overhead which means
you're gonna get reasonable times back

00:54:35.550 --> 00:54:35.560
you're gonna get reasonable times back
 

00:54:35.560 --> 00:54:37.170
you're gonna get reasonable times back
for you know how long these these

00:54:37.170 --> 00:54:37.180
for you know how long these these
 

00:54:37.180 --> 00:54:39.090
for you know how long these these
various things are taking but it's not

00:54:39.090 --> 00:54:39.100
various things are taking but it's not
 

00:54:39.100 --> 00:54:40.620
various things are taking but it's not
going to give you the full call stack

00:54:40.620 --> 00:54:40.630
going to give you the full call stack
 

00:54:40.630 --> 00:54:42.750
going to give you the full call stack
for where the code was at any point in

00:54:42.750 --> 00:54:42.760
for where the code was at any point in
 

00:54:42.760 --> 00:54:44.220
for where the code was at any point in
time so you want to use the instrumented

00:54:44.220 --> 00:54:44.230
time so you want to use the instrumented
 

00:54:44.230 --> 00:54:45.750
time so you want to use the instrumented
version instead if you're trying to

00:54:45.750 --> 00:54:45.760
version instead if you're trying to
 

00:54:45.760 --> 00:54:47.640
version instead if you're trying to
understand the code flow in how you

00:54:47.640 --> 00:54:47.650
understand the code flow in how you
 

00:54:47.650 --> 00:54:49.380
understand the code flow in how you
actually got to this at that particular

00:54:49.380 --> 00:54:49.390
actually got to this at that particular
 

00:54:49.390 --> 00:54:52.680
actually got to this at that particular
time however that has a fair amount of

00:54:52.680 --> 00:54:52.690
time however that has a fair amount of
 

00:54:52.690 --> 00:54:54.870
time however that has a fair amount of
overhead associated with it just in each

00:54:54.870 --> 00:54:54.880
overhead associated with it just in each
 

00:54:54.880 --> 00:54:56.700
overhead associated with it just in each
of the method calls so make sure that

00:54:56.700 --> 00:54:56.710
of the method calls so make sure that
 

00:54:56.710 --> 00:54:59.609
of the method calls so make sure that
you're not optimizing the wrong thing

00:54:59.609 --> 00:54:59.619
you're not optimizing the wrong thing
 

00:54:59.619 --> 00:55:01.320
you're not optimizing the wrong thing
don't look at the raw absolute times

00:55:01.320 --> 00:55:01.330
don't look at the raw absolute times
 

00:55:01.330 --> 00:55:02.490
don't look at the raw absolute times
you're getting out of trace view if

00:55:02.490 --> 00:55:02.500
you're getting out of trace view if
 

00:55:02.500 --> 00:55:03.930
you're getting out of trace view if
you're using the instrumented version

00:55:03.930 --> 00:55:03.940
you're using the instrumented version
 

00:55:03.940 --> 00:55:05.849
you're using the instrumented version
because the times that it's reporting

00:55:05.849 --> 00:55:05.859
because the times that it's reporting
 

00:55:05.859 --> 00:55:07.950
because the times that it's reporting
for method calls is really out of whack

00:55:07.950 --> 00:55:07.960
for method calls is really out of whack
 

00:55:07.960 --> 00:55:09.840
for method calls is really out of whack
with reality I have optimized stuff

00:55:09.840 --> 00:55:09.850
with reality I have optimized stuff
 

00:55:09.850 --> 00:55:12.420
with reality I have optimized stuff
before and saved zero time and the end

00:55:12.420 --> 00:55:12.430
before and saved zero time and the end
 

00:55:12.430 --> 00:55:15.359
before and saved zero time and the end
result just because it wasn't really

00:55:15.359 --> 00:55:15.369
result just because it wasn't really
 

00:55:15.369 --> 00:55:16.770
result just because it wasn't really
giving me the right information so it's

00:55:16.770 --> 00:55:16.780
giving me the right information so it's
 

00:55:16.780 --> 00:55:17.460
giving me the right information so it's
useful

00:55:17.460 --> 00:55:17.470
useful
 

00:55:17.470 --> 00:55:19.470
useful
understanding the flow and for kind of

00:55:19.470 --> 00:55:19.480
understanding the flow and for kind of
 

00:55:19.480 --> 00:55:21.450
understanding the flow and for kind of
relative times but don't take the

00:55:21.450 --> 00:55:21.460
relative times but don't take the
 

00:55:21.460 --> 00:55:23.099
relative times but don't take the
numbers too seriously if you're using

00:55:23.099 --> 00:55:23.109
numbers too seriously if you're using
 

00:55:23.109 --> 00:55:25.080
numbers too seriously if you're using
the instrumented version hierarchy

00:55:25.080 --> 00:55:25.090
the instrumented version hierarchy
 

00:55:25.090 --> 00:55:26.970
the instrumented version hierarchy
viewer we talked about that Matt I would

00:55:26.970 --> 00:55:26.980
viewer we talked about that Matt I would
 

00:55:26.980 --> 00:55:29.130
viewer we talked about that Matt I would
also call out the new memory analysis

00:55:29.130 --> 00:55:29.140
also call out the new memory analysis
 

00:55:29.140 --> 00:55:32.940
also call out the new memory analysis
tool in Android studio memory monitor I

00:55:32.940 --> 00:55:32.950
tool in Android studio memory monitor I
 

00:55:32.950 --> 00:55:35.160
tool in Android studio memory monitor I
think there's a couple of new memory

00:55:35.160 --> 00:55:35.170
think there's a couple of new memory
 

00:55:35.170 --> 00:55:36.900
think there's a couple of new memory
tools woman is memory monitor that just

00:55:36.900 --> 00:55:36.910
tools woman is memory monitor that just
 

00:55:36.910 --> 00:55:38.790
tools woman is memory monitor that just
shows you the use of memory over time

00:55:38.790 --> 00:55:38.800
shows you the use of memory over time
 

00:55:38.800 --> 00:55:41.190
shows you the use of memory over time
the other one actually analyzes leaks

00:55:41.190 --> 00:55:41.200
the other one actually analyzes leaks
 

00:55:41.200 --> 00:55:44.430
the other one actually analyzes leaks
and dependencies in the graph so check

00:55:44.430 --> 00:55:44.440
and dependencies in the graph so check
 

00:55:44.440 --> 00:55:46.349
and dependencies in the graph so check
that one out should be a lot easier to

00:55:46.349 --> 00:55:46.359
that one out should be a lot easier to
 

00:55:46.359 --> 00:55:48.599
that one out should be a lot easier to
use and more tuned for android dynamics

00:55:48.599 --> 00:55:48.609
use and more tuned for android dynamics
 

00:55:48.609 --> 00:55:51.270
use and more tuned for android dynamics
than Matt which is an eclipse tool so

00:55:51.270 --> 00:55:51.280
than Matt which is an eclipse tool so
 

00:55:51.280 --> 00:55:53.550
than Matt which is an eclipse tool so
basically you you to use Matt you take a

00:55:53.550 --> 00:55:53.560
basically you you to use Matt you take a
 

00:55:53.560 --> 00:55:56.339
basically you you to use Matt you take a
heap dump and then you go into Matt and

00:55:56.339 --> 00:55:56.349
heap dump and then you go into Matt and
 

00:55:56.349 --> 00:55:58.620
heap dump and then you go into Matt and
you basically see where see what objects

00:55:58.620 --> 00:55:58.630
you basically see where see what objects
 

00:55:58.630 --> 00:56:00.480
you basically see where see what objects
are still alive that you didn't expect

00:56:00.480 --> 00:56:00.490
are still alive that you didn't expect
 

00:56:00.490 --> 00:56:02.070
are still alive that you didn't expect
so this is where you find out things

00:56:02.070 --> 00:56:02.080
so this is where you find out things
 

00:56:02.080 --> 00:56:04.920
so this is where you find out things
like activity leaks but as I said

00:56:04.920 --> 00:56:04.930
like activity leaks but as I said
 

00:56:04.930 --> 00:56:06.780
like activity leaks but as I said
there's there's a possibly an easier

00:56:06.780 --> 00:56:06.790
there's there's a possibly an easier
 

00:56:06.790 --> 00:56:09.000
there's there's a possibly an easier
tool to use in Android studio for that

00:56:09.000 --> 00:56:09.010
tool to use in Android studio for that
 

00:56:09.010 --> 00:56:10.710
tool to use in Android studio for that
there's also an external tool put out by

00:56:10.710 --> 00:56:10.720
there's also an external tool put out by
 

00:56:10.720 --> 00:56:12.960
there's also an external tool put out by
the folks at square called weak canary

00:56:12.960 --> 00:56:12.970
the folks at square called weak canary
 

00:56:12.970 --> 00:56:14.310
the folks at square called weak canary
that I would suggest you check out as

00:56:14.310 --> 00:56:14.320
that I would suggest you check out as
 

00:56:14.320 --> 00:56:15.540
that I would suggest you check out as
well

00:56:15.540 --> 00:56:15.550
well
 

00:56:15.550 --> 00:56:17.550
well
memory monitor I just mentioned that for

00:56:17.550 --> 00:56:17.560
memory monitor I just mentioned that for
 

00:56:17.560 --> 00:56:19.410
memory monitor I just mentioned that for
Android studio and then there's on

00:56:19.410 --> 00:56:19.420
Android studio and then there's on
 

00:56:19.420 --> 00:56:20.970
Android studio and then there's on
device tools so those were tools that

00:56:20.970 --> 00:56:20.980
device tools so those were tools that
 

00:56:20.980 --> 00:56:24.150
device tools so those were tools that
you run on the host on your desktop

00:56:24.150 --> 00:56:24.160
you run on the host on your desktop
 

00:56:24.160 --> 00:56:25.829
you run on the host on your desktop
machine but then there's device tools

00:56:25.829 --> 00:56:25.839
machine but then there's device tools
 

00:56:25.839 --> 00:56:27.540
machine but then there's device tools
where you can see in real time some of

00:56:27.540 --> 00:56:27.550
where you can see in real time some of
 

00:56:27.550 --> 00:56:29.520
where you can see in real time some of
the information that you need to to tune

00:56:29.520 --> 00:56:29.530
the information that you need to to tune
 

00:56:29.530 --> 00:56:31.440
the information that you need to to tune
performance there's strict modes you can

00:56:31.440 --> 00:56:31.450
performance there's strict modes you can
 

00:56:31.450 --> 00:56:33.030
performance there's strict modes you can
enable that and it'll do a red flash

00:56:33.030 --> 00:56:33.040
enable that and it'll do a red flash
 

00:56:33.040 --> 00:56:34.829
enable that and it'll do a red flash
whenever your code is doing something

00:56:34.829 --> 00:56:34.839
whenever your code is doing something
 

00:56:34.839 --> 00:56:37.050
whenever your code is doing something
that it shouldn't on the UI thread like

00:56:37.050 --> 00:56:37.060
that it shouldn't on the UI thread like
 

00:56:37.060 --> 00:56:39.089
that it shouldn't on the UI thread like
making a network access or disk access

00:56:39.089 --> 00:56:39.099
making a network access or disk access
 

00:56:39.099 --> 00:56:42.240
making a network access or disk access
or whatever GPU profiling there's the

00:56:42.240 --> 00:56:42.250
or whatever GPU profiling there's the
 

00:56:42.250 --> 00:56:43.560
or whatever GPU profiling there's the
overdraw set that we talked about

00:56:43.560 --> 00:56:43.570
overdraw set that we talked about
 

00:56:43.570 --> 00:56:46.140
overdraw set that we talked about
there's also the raw performance it'll

00:56:46.140 --> 00:56:46.150
there's also the raw performance it'll
 

00:56:46.150 --> 00:56:47.609
there's also the raw performance it'll
put colored bars on the screen to show

00:56:47.609 --> 00:56:47.619
put colored bars on the screen to show
 

00:56:47.619 --> 00:56:49.500
put colored bars on the screen to show
you how much time you're taking in each

00:56:49.500 --> 00:56:49.510
you how much time you're taking in each
 

00:56:49.510 --> 00:56:51.990
you how much time you're taking in each
of the various phases of rendering so

00:56:51.990 --> 00:56:52.000
of the various phases of rendering so
 

00:56:52.000 --> 00:56:53.970
of the various phases of rendering so
it'll show you you know whether there's

00:56:53.970 --> 00:56:53.980
it'll show you you know whether there's
 

00:56:53.980 --> 00:56:55.440
it'll show you you know whether there's
a spike at a particular time because

00:56:55.440 --> 00:56:55.450
a spike at a particular time because
 

00:56:55.450 --> 00:56:57.020
a spike at a particular time because
you're getting you know inconsistent

00:56:57.020 --> 00:56:57.030
you're getting you know inconsistent
 

00:56:57.030 --> 00:56:59.670
you're getting you know inconsistent
results from this thing or whether

00:56:59.670 --> 00:56:59.680
results from this thing or whether
 

00:56:59.680 --> 00:57:01.530
results from this thing or whether
you're just consistently taking too much

00:57:01.530 --> 00:57:01.540
you're just consistently taking too much
 

00:57:01.540 --> 00:57:03.750
you're just consistently taking too much
time you know creating all the rendering

00:57:03.750 --> 00:57:03.760
time you know creating all the rendering
 

00:57:03.760 --> 00:57:06.180
time you know creating all the rendering
objects or whatever it is

00:57:06.180 --> 00:57:06.190
objects or whatever it is
 

00:57:06.190 --> 00:57:08.460
objects or whatever it is
duration scale this is useful if you

00:57:08.460 --> 00:57:08.470
duration scale this is useful if you
 

00:57:08.470 --> 00:57:09.930
duration scale this is useful if you
want to just slow down your animations

00:57:09.930 --> 00:57:09.940
want to just slow down your animations
 

00:57:09.940 --> 00:57:11.280
want to just slow down your animations
so you can see what's actually going on

00:57:11.280 --> 00:57:11.290
so you can see what's actually going on
 

00:57:11.290 --> 00:57:13.109
so you can see what's actually going on
on the screen I actually find screen

00:57:13.109 --> 00:57:13.119
on the screen I actually find screen
 

00:57:13.119 --> 00:57:15.180
on the screen I actually find screen
record to be a much more useful tool for

00:57:15.180 --> 00:57:15.190
record to be a much more useful tool for
 

00:57:15.190 --> 00:57:18.089
record to be a much more useful tool for
debugging animations because I really

00:57:18.089 --> 00:57:18.099
debugging animations because I really
 

00:57:18.099 --> 00:57:19.560
debugging animations because I really
wanted to see it run in real time is

00:57:19.560 --> 00:57:19.570
wanted to see it run in real time is
 

00:57:19.570 --> 00:57:22.140
wanted to see it run in real time is
just in my eyes don't work that fast so

00:57:22.140 --> 00:57:22.150
just in my eyes don't work that fast so
 

00:57:22.150 --> 00:57:24.599
just in my eyes don't work that fast so
I'll do a screen record and then upload

00:57:24.599 --> 00:57:24.609
I'll do a screen record and then upload
 

00:57:24.609 --> 00:57:27.420
I'll do a screen record and then upload
the the mp4 from the device and then I

00:57:27.420 --> 00:57:27.430
the the mp4 from the device and then I
 

00:57:27.430 --> 00:57:30.610
the the mp4 from the device and then I
can frame step it in some animation tool

00:57:30.610 --> 00:57:30.620
can frame step it in some animation tool
 

00:57:30.620 --> 00:57:33.430
can frame step it in some animation tool
or just a movie player and then I can

00:57:33.430 --> 00:57:33.440
or just a movie player and then I can
 

00:57:33.440 --> 00:57:34.810
or just a movie player and then I can
see what happened on every single frame

00:57:34.810 --> 00:57:34.820
see what happened on every single frame
 

00:57:34.820 --> 00:57:36.700
see what happened on every single frame
just try to attract the artifacts or the

00:57:36.700 --> 00:57:36.710
just try to attract the artifacts or the
 

00:57:36.710 --> 00:57:38.590
just try to attract the artifacts or the
problems they're in Hardware layer

00:57:38.590 --> 00:57:38.600
problems they're in Hardware layer
 

00:57:38.600 --> 00:57:40.300
problems they're in Hardware layer
updates this is another visual tool on

00:57:40.300 --> 00:57:40.310
updates this is another visual tool on
 

00:57:40.310 --> 00:57:41.860
updates this is another visual tool on
the device that shows you when you're

00:57:41.860 --> 00:57:41.870
the device that shows you when you're
 

00:57:41.870 --> 00:57:43.420
the device that shows you when you're
updating information that is currently

00:57:43.420 --> 00:57:43.430
updating information that is currently
 

00:57:43.430 --> 00:57:45.460
updating information that is currently
cached in a layer which is generally

00:57:45.460 --> 00:57:45.470
cached in a layer which is generally
 

00:57:45.470 --> 00:57:47.890
cached in a layer which is generally
unknown oh I would say that there's time

00:57:47.890 --> 00:57:47.900
unknown oh I would say that there's time
 

00:57:47.900 --> 00:57:48.520
unknown oh I would say that there's time
for Q&amp;A

00:57:48.520 --> 00:57:48.530
for Q&amp;A
 

00:57:48.530 --> 00:57:49.990
for Q&amp;A
except for the fact that the timer is

00:57:49.990 --> 00:57:50.000
except for the fact that the timer is
 

00:57:50.000 --> 00:57:52.660
except for the fact that the timer is
running out right now so thanks for

00:57:52.660 --> 00:57:52.670
running out right now so thanks for
 

00:57:52.670 --> 00:58:06.570
running out right now so thanks for
coming

00:58:06.570 --> 00:58:06.580
 

00:58:06.580 --> 00:58:08.640
you

