WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:05.419
&gt;&gt;Matt Lowrie: Thanks to coming to this session.
My name is Matt Lowrie and I'll be talking

00:00:05.419 --> 00:00:16.299
about using Google 3D Geospatial Data, in
particular with the SketchUp API.

00:00:16.299 --> 00:00:22.500
Like all the other sessions here, you can
join the live Wave and post questions. The

00:00:22.500 --> 00:00:29.210
link is here. I'll give you a couple seconds
to jot it down if you wanna a--follow it live

00:00:29.210 --> 00:00:32.710
and ask questions there.

00:00:32.710 --> 00:00:37.140
And as, while you're lookin' at this, I'll
just give disclosure, I'm not showing any

00:00:37.140 --> 00:00:44.820
HTML 5 or Android demos here, so nobody left,
so that's good. So you're here definitely

00:00:44.820 --> 00:00:46.830
for Geospatial Data.

00:00:46.830 --> 00:00:54.000
So before I get into all the fancy demos,
let's first answer the question of why 3D?

00:00:54.000 --> 00:01:00.420
Well if you've gone outside recently and looked
around you'll understand that we live in a

00:01:00.420 --> 00:01:07.009
three dimensional world which is good 'cause
as humans we inherently grasp the concept

00:01:07.009 --> 00:01:12.530
of three dimensional space. And you know that
if you've ever seen a dog try to walk through

00:01:12.530 --> 00:01:18.749
a plate glass window or a squirrel get a bucket
stuck on its head in the woods, you'll know

00:01:18.749 --> 00:01:26.340
that as humans we have this special ability
to understand three dimensional data. People

00:01:26.340 --> 00:01:30.159
getting stuff stuck on their head notwithstanding.

00:01:30.159 --> 00:01:40.630
But with that we can use this inherent ability
to understand 3D data to describe geolocated

00:01:40.630 --> 00:01:48.539
data or geolocated information. And I'm sure
you've all used this in-in conversations that

00:01:48.539 --> 00:01:51.429
you've had with other people.

00:01:51.429 --> 00:01:56.179
For instance, if you're describing where your
apartment is you can say, "Well, I'm in the

00:01:56.179 --> 00:02:01.869
rounded building on the corner," or if you're
giving directions to somebody you can say,

00:02:01.869 --> 00:02:05.490
"Well, that office is down the street, you
wanna look for the building that looks like

00:02:05.490 --> 00:02:08.500
a giant elephant."

00:02:08.500 --> 00:02:16.159
A few years ago I was in New Orleans for SIGGRAPH,
not this past one, but the previous one, and

00:02:16.159 --> 00:02:20.239
a colleague of mine were touring around and
we wanted to find Anne Rice's house, who lived

00:02:20.239 --> 00:02:26.349
there at the time; she's the author of the,
some of the vampire novels in the 80's, you

00:02:26.349 --> 00:02:28.730
know the previous vampire craze.

00:02:28.730 --> 00:02:34.650
So we asked a local on the street, "How can
we find Anne Rice's house?" and his description

00:02:34.650 --> 00:02:42.430
to us was, "You wanna go 500, 500 paces as
the crow flies and look for the house what

00:02:42.430 --> 00:02:47.439
you would think Anne Rice's house looks like."
And from that description we could make a

00:02:47.439 --> 00:02:55.220
mental 3D image in our heads and we saw what
we thought was Anne Rice's house. We're not

00:02:55.220 --> 00:02:59.219
sure, but at least we got a good story out
of it.

00:02:59.219 --> 00:03:02.750
So that's the reason for 3D.

00:03:02.750 --> 00:03:11.140
Google understands this and that's why we
try to build 3D information into our Geo Products.

00:03:11.140 --> 00:03:21.140
And this can come in the form of 3D footprints
of buildings on maps, as you'll see in a lot

00:03:21.140 --> 00:03:22.140
of cities.

00:03:22.140 --> 00:03:31.750
This also pertains to street view which gives
you this 2 1/2D vision of the--the surrounding

00:03:31.750 --> 00:03:37.870
3D world around you so you can get the same
feeling of your three dimensional space in

00:03:37.870 --> 00:03:46.760
this 2 1/2D environment. And that's just with
a 2D product like Maps.

00:03:46.760 --> 00:03:52.500
Google also has a whole suite of products
that deal specifically with 3D data. And that's

00:03:52.500 --> 00:03:56.370
what this talk will--will be focused on.

00:03:56.370 --> 00:03:59.540
These products are in order.

00:03:59.540 --> 00:04:07.230
Building Maker which allows you to create
3D geolocated data from scratch.

00:04:07.230 --> 00:04:12.900
We also have SketchUp which also allows you
to create 3D data from scratch, but also lets

00:04:12.900 --> 00:04:20.110
you take data you've created in Building Maker
or some other source or data that somebody

00:04:20.110 --> 00:04:27.250
else has created and refine that and build
upon it and improve it as you see.

00:04:27.250 --> 00:04:34.310
We have the 3D warehouse which is our storage
repository for all things 3D.

00:04:34.310 --> 00:04:42.090
We also have Earth which you're probably familiar
with is, which is a great product to actually

00:04:42.090 --> 00:04:46.850
visualize geolocated 3D data.

00:04:46.850 --> 00:04:54.830
These products are all located at these URLs.
I was going to suggest that you could go to

00:04:54.830 --> 00:05:00.060
these URLs during my presentation, download
'em, and play along with me, but then with

00:05:00.060 --> 00:05:05.130
all the band width issues we've been having,
I realized it's maybe not the best idea to

00:05:05.130 --> 00:05:12.000
have you download tens of megabytes of client
applications while I'm tryin' to give my presentation,

00:05:12.000 --> 00:05:18.349
so after this presentation at your hotel or
at home, please go download some of the applications

00:05:18.349 --> 00:05:25.550
and give 'em a try and that's where they're
located.

00:05:25.550 --> 00:05:34.520
And with that I wanna mainly go into demos
here. And let's hope I don't have a Google

00:05:34.520 --> 00:05:36.380
TV moment while I'm doing this.

00:05:36.380 --> 00:05:44.820
I'm gonna go through these, these 3D products
in reverse order and show you how each of

00:05:44.820 --> 00:05:48.780
'em uses 3D Geospatial Data.

00:05:48.780 --> 00:05:54.090
And the first one being Earth. You're probably
familiar with Earth, but if you didn't know

00:05:54.090 --> 00:05:56.479
Earth also has ?

00:05:56.479 --> 00:05:57.680
[pause]

00:05:57.680 --> 00:06:03.880
a 3D buildings layer built right into it that
I think comes, it comes turned on as default

00:06:03.880 --> 00:06:09.830
when you install Earth, but if not you can
turn it on yourself and that gives you -- I'll

00:06:09.830 --> 00:06:18.629
zoom into where we're located -- what this
gives you is the ability to go into any location

00:06:18.629 --> 00:06:24.990
and actually get the immersive feel of the
entire 3D space as you--you would see it if

00:06:24.990 --> 00:06:25.990
you were there.

00:06:25.990 --> 00:06:33.889
So from this you can see what it would take
to actually walk to different places and what

00:06:33.889 --> 00:06:39.540
different places are located around your area,
what the perspective of buildings, the size

00:06:39.540 --> 00:06:44.160
of buildings, natural landmarks that you wanna
look for.

00:06:44.160 --> 00:06:50.509
Just show of hands, how many people knew about
3D buildings in Earth? Very good. Let the

00:06:50.509 --> 00:06:56.590
record show that that was most everybody for
the YouTu--YouTube audience.

00:06:56.590 --> 00:06:58.001
So yeah, you're familiar with that.

00:06:58.001 --> 00:07:03.550
One of the questions you may have had when
looking at these 3D buildings is: where do

00:07:03.550 --> 00:07:11.330
they all come from? And that's the next product:
3D warehouse.

00:07:11.330 --> 00:07:19.000
So this is our online rep--repository that
stores all the 3D buildings that are located

00:07:19.000 --> 00:07:26.069
in Earth. They're contributed by users like
you who wanna build this geolocated data.

00:07:26.069 --> 00:07:30.960
They, you submit it to 3D warehouse and then
it's taken through our pipeline to be considered

00:07:30.960 --> 00:07:35.060
to be put into the Google Earth 3D layer.

00:07:35.060 --> 00:07:42.050
You can see there's certainly lots of buildings,
lots of collections of buildings, but we also

00:07:42.050 --> 00:07:50.289
store any other types of 3D data: interiors,
furnishings, cars, anything like that. It's

00:07:50.289 --> 00:08:00.289
not restricted only to 3D buildings. Any sort
of 3D can be warehoused in--in this place.

00:08:00.289 --> 00:08:06.389
What's nice about 3D warehouse as well is
you actually have a user account to it in

00:08:06.389 --> 00:08:08.419
which you can see --

00:08:08.419 --> 00:08:13.240
[pause - sound of typing on computer]

00:08:13.240 --> 00:08:14.610
it'll give you statistics on --

00:08:14.610 --> 00:08:21.189
Did somebody download Earth 'cause I'm, this
is takin' a long time.

00:08:21.189 --> 00:08:26.759
But it'll give you, it'll keep statistics
on all the geolocated buildings that you actually

00:08:26.759 --> 00:08:32.470
store within here. So you can see how many
you've actually submitted. it'll keep track

00:08:32.470 --> 00:08:37.979
of how many are actually in Earth at the moment.
So you get a--you can build up nice score

00:08:37.979 --> 00:08:43.240
cards of how much you've contributed to the
3D buildings layer that people are, around

00:08:43.240 --> 00:08:48.220
the world are using to visualize Earth.

00:08:48.220 --> 00:08:55.910
If you don't -- it'll give you feedback saying
that you're building has been selected if

00:08:55.910 --> 00:09:01.630
it-if it does get in the layer. If it hasn't
we also have reasoning in there that tells

00:09:01.630 --> 00:09:08.570
you, "Well, it wasn't accepted at this time
for a variety of reasons," in which case you

00:09:08.570 --> 00:09:16.400
can go back and fix the model, try to correct
any of the reasoning that it might not have

00:09:16.400 --> 00:09:17.700
been included in Earth.

00:09:17.700 --> 00:09:23.700
This one was not accepted because we--we don't
know if that building is there or not. That's

00:09:23.700 --> 00:09:30.200
a harder one to fix, but some of the other
ones are easy if textures are missing or--or

00:09:30.200 --> 00:09:35.580
if your building's floating above the Earth,
things like that you can fix and then it will

00:09:35.580 --> 00:09:39.230
be reevaluated to put--put back into Earth.

00:09:39.230 --> 00:09:48.100
From here too, if you're just interested in
buildings that are only shown within Google

00:09:48.100 --> 00:09:51.220
Earth, you can actually search for those buildings
around any location.

00:09:51.220 --> 00:09:58.730
[pause -- sound of typing on computer]

00:09:58.730 --> 00:10:02.480
So this restricts the search to yes, these
are all the buildings that actually show in

00:10:02.480 --> 00:10:07.779
Earth now and it's around this location that
we're interested in. So if you go into any

00:10:07.779 --> 00:10:16.760
of these you actually then have access to
the model to view locally on Earth or to import

00:10:16.760 --> 00:10:25.300
into SketchUp for whatever 3D presentation
you wanna do beyond that.

00:10:25.300 --> 00:10:26.410
[pause]

00:10:26.410 --> 00:10:29.581
And how 'bout a show of hands, how 'bout who's
familiar with 3D warehouse?

00:10:29.581 --> 00:10:30.581
[pause]

00:10:30.581 --> 00:10:37.470
A little less than Earth, but still respectable.
I like it.

00:10:37.470 --> 00:10:41.510
Going backwards again, let's talk about the
authoring tools.

00:10:41.510 --> 00:10:45.290
[pause]

00:10:45.290 --> 00:10:48.410
the first one being Building Maker.

00:10:48.410 --> 00:10:57.190
So this tool is, is relatively new. It came
out recently. But this allows you to create

00:10:57.190 --> 00:11:04.649
a lot of the building and 3D geolocated data
that you saw in the 3D warehouse all from

00:11:04.649 --> 00:11:13.660
scratch. You can do it right--right in a Web
browser. You only need the Google Earth Plug-in

00:11:13.660 --> 00:11:21.370
in order to--to use it. We check for that
first. And you'll see why you need that in

00:11:21.370 --> 00:11:22.370
a minute.

00:11:22.370 --> 00:11:26.750
But what's nice about Building Maker is it
is a Google property, but it's also a great

00:11:26.750 --> 00:11:35.040
example of using other geo APIs to build a
geospatial product in itself.

00:11:35.040 --> 00:11:41.580
One of the, a couple of the APIs we use I'll
demonstrate here, the first one being the

00:11:41.580 --> 00:11:43.440
Maps API.

00:11:43.440 --> 00:11:49.500
Building Maker starts off by giving you a
series of locations in which we have available

00:11:49.500 --> 00:11:56.339
to model right now and we use that by the
familiar map pins on the--on the map of the

00:11:56.339 --> 00:12:01.750
world. And this lets you pick any of these
locations that are available in the model

00:12:01.750 --> 00:12:12.699
right now. I will pick my preselected location
for this demo to show you an example of this.

00:12:12.699 --> 00:12:20.500
From here we show you, we put the little blue
measles all over the map showing you places

00:12:20.500 --> 00:12:27.510
that people have models already pending to
be in--in Google Earth right now. These are

00:12:27.510 --> 00:12:31.839
in the pipeline. So you know that all these
ones showing up here somebody's has already

00:12:31.839 --> 00:12:42.840
modeled. So from that you can pick a new location
to start, start building where nobody has

00:12:42.840 --> 00:12:44.010
touched yet.

00:12:44.010 --> 00:12:51.800
So those markers were pending models; there's
also models that are already in the 3D layer

00:12:51.800 --> 00:12:55.339
in Earth and those you can see -- whoop

00:12:55.339 --> 00:12:57.010
[pause]

00:12:57.010 --> 00:13:02.610
you can see those by going to the Earth view
in which we highlight all the 3D buildings

00:13:02.610 --> 00:13:08.690
that are already in there. So this is a good
example of using the Earth API.

00:13:08.690 --> 00:13:09.690
[pause]

00:13:09.690 --> 00:13:19.480
And this is why you need a, need the Plug-in
in order to use Building Maker.

00:13:19.480 --> 00:13:20.810
[pause]

00:13:20.810 --> 00:13:25.780
So with this I can see what people have already
modeled and I know I'm not around pending

00:13:25.780 --> 00:13:31.890
models, so I can find a brand new location
that nobody has modeled yet, and from this

00:13:31.890 --> 00:13:40.810
I get a series of images at that location
that are-- that are slowing loading.

00:13:40.810 --> 00:13:48.140
But if I pick this location, you're given
a bunch of oblique aerial imagery which you

00:13:48.140 --> 00:13:53.110
can then model on top of to create your 3D
building.

00:13:53.110 --> 00:14:01.269
So if I zoom into this one, I choose this
location, this building, we give you a series

00:14:01.269 --> 00:14:09.990
of primitives, blocks, very common for post-modern
buildings; different roof types, hip roof,

00:14:09.990 --> 00:14:18.389
gable roof, pyramids, flattened pyramids type
roofs. Also free-form primitives so that allows

00:14:18.389 --> 00:14:25.250
you to go into more high end architecture
where they're doing all sorts of fancy shapes.

00:14:25.250 --> 00:14:31.630
The free form shapes allow you to model all
those as well, which we have a lot of examples

00:14:31.630 --> 00:14:32.630
of.

00:14:32.630 --> 00:14:37.529
This one's pretty blocky luckily so I'm able
to easily right within the browser just take

00:14:37.529 --> 00:14:42.241
a block, superimpose it over the boundaries
of the building,

00:14:42.241 --> 00:14:44.370
[pause]

00:14:44.370 --> 00:14:55.790
I can then constrain where I wanna put the
next block on top of that one and I'm gonna

00:14:55.790 --> 00:15:02.430
add a flattened pyramid roof on top of there
and then I can constrain--constrain that –-

00:15:02.430 --> 00:15:03.430
[pause]

00:15:03.430 --> 00:15:04.430
to the roof profile --

00:15:04.430 --> 00:15:08.149
[pause]

00:15:08.149 --> 00:15:10.519
very quickly and easily.

00:15:10.519 --> 00:15:11.839
[pause]

00:15:11.839 --> 00:15:22.810
And that gives me one, one perspective of
it. I can then go to through all these additional

00:15:22.810 --> 00:15:24.660
images, images that give me each side of the
building.

00:15:24.660 --> 00:15:25.660
[pause]

00:15:25.660 --> 00:15:42.140
That one's a little fuzzy. I don't like that
one. Let's try this.

00:15:42.140 --> 00:15:43.470
[pause]

00:15:43.470 --> 00:15:44.800
Loading.

00:15:44.800 --> 00:15:46.130
[pause]

00:15:46.130 --> 00:15:48.790
Connectivity. Slow.

00:15:48.790 --> 00:15:53.420
But, if it had loaded here I could then in
each of these views they give you a different

00:15:53.420 --> 00:15:58.110
side of the building which you use then to-to
model it. Here it comes.

00:15:58.110 --> 00:16:02.690
So I put that in place.

00:16:02.690 --> 00:16:04.360
[pause]

00:16:04.360 --> 00:16:19.829
As refined as I can and then from here I can
preview it directly in the location in Earth

00:16:19.829 --> 00:16:26.040
and what Building Maker will do is take those
oblique aerial images and use that as the

00:16:26.040 --> 00:16:27.890
texture for your building –

00:16:27.890 --> 00:16:28.890
[pause]

00:16:28.890 --> 00:16:36.319
on the sides that I constrain 'em in. So there's
my textured building which --

00:16:36.319 --> 00:16:38.560
[applause]

00:16:38.560 --> 00:16:41.319
Oh. Thank you very much.

00:16:41.319 --> 00:16:50.130
So you--you'll get, you can be as detailed
as you want with this. With the, all the primitives

00:16:50.130 --> 00:16:58.490
that are provided you can go in, model some
of the, the roofing elements here, awnings

00:16:58.490 --> 00:17:04.930
things like that and the texturing service
will then texture over all that geometry and

00:17:04.930 --> 00:17:11.960
warn you when you need to fix things like
if you've missed some sides it'll warn you,

00:17:11.960 --> 00:17:14.580
"Hey, go to those sides and texture those
as well."

00:17:14.580 --> 00:17:23.480
But in the interest of time and in getting
to lunch on time, I'll just save this one

00:17:23.480 --> 00:17:30.500
and when you save it, it's automatically put
into the 3D warehouse for you. It's put into

00:17:30.500 --> 00:17:38.420
the queue to be considered in the Google Earth
3D Layer and you're on your way. You wait.

00:17:38.420 --> 00:17:45.740
We try to get the process down to a week in
or, not--notifying you, but after that we'll

00:17:45.740 --> 00:17:52.190
let you know if it's accepted or not and you
can feel so empowered that you go and model

00:17:52.190 --> 00:17:55.220
entire cities. That's the hope.

00:17:55.220 --> 00:18:03.510
So there it is in 3D warehouse with mapping,
street view, different information about what

00:18:03.510 --> 00:18:09.380
you've just modeled. So that's Building Maker.

00:18:09.380 --> 00:18:16.010
The other authoring tool that we have and
the one that relates to this conference -- let

00:18:16.010 --> 00:18:21.530
me put it out of Earth to save the GPU --

00:18:21.530 --> 00:18:22.530
[pause]

00:18:22.530 --> 00:18:26.000
and go into SketchUp.

00:18:26.000 --> 00:18:33.260
We have SketchUp which is another authoring
tool; let's you create, easily create 3D geometry

00:18:33.260 --> 00:18:38.930
from scratch; allows you to import 3D data
like the building you just created in Building

00:18:38.930 --> 00:18:50.310
Maker; and what it also provides which relates
to Google I/O is an actual API to get at all

00:18:50.310 --> 00:18:59.730
of that 3D data and the Geospatial Data as
well, which I'll be going through and blasting

00:18:59.730 --> 00:19:07.920
a whole bunch of code on screen. So if you're
in the back you may, you may need to squint.

00:19:07.920 --> 00:19:18.180
So here is, here is SketchUp and there's several
ways to access the API. The SketchUp API is

00:19:18.180 --> 00:19:24.460
actually in the Ruby programming language.
We've compiled in an actual Ruby interpreter

00:19:24.460 --> 00:19:32.641
within SketchUp so you can access that either
through a interactive terminal in which you

00:19:32.641 --> 00:19:38.900
can in real time access the entire 3D scene
from the API.

00:19:38.900 --> 00:19:45.790
You can save your code out to an actual Ruby
Script in which SketchUp can re, load that

00:19:45.790 --> 00:19:54.250
whenever you, whenever you define it, as I'll
show it gives you access to the--the GUI so

00:19:54.250 --> 00:20:01.190
you can have build your Plug-in into the GUI
and have a user invoke it whenever they feel

00:20:01.190 --> 00:20:03.540
like it.

00:20:03.540 --> 00:20:10.260
Another way you can invoke it which I'll demo
is that from the command line of launching

00:20:10.260 --> 00:20:18.530
SketchUp you can tell it to load a Ruby Script
and it can load that at run time and-and actually

00:20:18.530 --> 00:20:22.070
batch process jobs. So I'll demo all those.

00:20:22.070 --> 00:20:27.200
Let me go back to the slides real quick --

00:20:27.200 --> 00:20:28.200
[pause]

00:20:28.200 --> 00:20:38.650
and first show where SketchUp API exists in
the Maps, or the Geo API landscape. As you

00:20:38.650 --> 00:20:47.170
can see it's down here in the bottom corner
in nice ruby red. It's not built on any of

00:20:47.170 --> 00:20:55.550
the Google Maps infrastructure, but as I'll
demonstrate it works very cleanly with any

00:20:55.550 --> 00:20:58.730
of these other APIs.

00:20:58.730 --> 00:21:08.790
As an introduction to the API as well, I'm
gonna go over some of the terms that the SketchUp

00:21:08.790 --> 00:21:17.840
API uses that might be different from what
you're used to either working with 3D or other--other,

00:21:17.840 --> 00:21:19.000
or with Ruby specifically.

00:21:19.000 --> 00:21:27.090
If you're used to 3D you know you have a 3D
environment or a 3D scene. That's referred

00:21:27.090 --> 00:21:30.920
to as the model in SketchUp.

00:21:30.920 --> 00:21:37.610
Within that model or 3D scene you have all
your 3D geometry. We defer, we refer to those

00:21:37.610 --> 00:21:38.610
as Entities.

00:21:38.610 --> 00:21:45.710
We have vertices which are Points in space;
three dimensional space. We call those vertices

00:21:45.710 --> 00:21:48.460
or Points.

00:21:48.460 --> 00:21:56.510
We have Edges which are the line segments
that connect vertices to create actual defined

00:21:56.510 --> 00:21:59.290
areas in 3D space.

00:21:59.290 --> 00:22:06.630
We have Faces which you're probably familiar
with. Faces are just polygons that are defined

00:22:06.630 --> 00:22:10.350
by these Edges or line segments.

00:22:10.350 --> 00:22:16.130
We also have the concept of a Loop which is
the series of line segments that go around

00:22:16.130 --> 00:22:17.540
a Face.

00:22:17.540 --> 00:22:25.610
So I'll demo all of those directly in SketchUp
so you can see what it's all about.

00:22:25.610 --> 00:22:26.610
[pause]

00:22:26.610 --> 00:22:31.140
So I'm gonna pull up a special interactive
console --

00:22:31.140 --> 00:22:34.790
[pause]

00:22:34.790 --> 00:22:44.010
that will give me acc--direct access to the,
to the Ruby interpreter and the actual SketchUp

00:22:44.010 --> 00:22:48.000
scene that I have right here. Right here it's
empty right now, but we'll-we'll fix that.

00:22:48.000 --> 00:22:59.230
So I mentioned model, and that we have a SketchUp
top level module. If you're familiar with

00:22:59.230 --> 00:23:02.710
Ruby at all it deals with modules which are
basically name spaces.

00:23:02.710 --> 00:23:08.670
So we have the SketchUp name space or module
and from that I can get the active model which

00:23:08.670 --> 00:23:13.140
is the entire 3D scene. I'll pump up –-

00:23:13.140 --> 00:23:14.140
[pause]

00:23:14.140 --> 00:23:18.610
can you see, is that visible?

00:23:18.610 --> 00:23:19.610
[pause]

00:23:19.610 --> 00:23:25.950
So I have the model in this local variable
m and I can check the Entities –

00:23:25.950 --> 00:23:27.520
[pause]

00:23:27.520 --> 00:23:32.510
which are in here right now. Right now I have
nothing 'cause it's an empty scene, but on

00:23:32.510 --> 00:23:38.920
that Entities collection we have helper methods.
Ent-ti-ties; very verbose.

00:23:38.920 --> 00:23:50.120
I can add a Face and by, if I wanna add a
vase--Fa--four pointed Face I can just give

00:23:50.120 --> 00:24:00.020
it a--an array of three dimensional coordinates
so I'll start at the origin, I'll go out a

00:24:00.020 --> 00:24:01.020
hundred units --

00:24:01.020 --> 00:24:02.020
[pause]

00:24:02.020 --> 00:24:12.920
make another one at a hundred hundred, but
I'll stay zero in the z axis and back around.

00:24:12.920 --> 00:24:19.390
[pause - sound of typing on computer]

00:24:19.390 --> 00:24:24.970
And this will return the Face that I'm creating
so I'll store that as well –

00:24:24.970 --> 00:24:25.970
[pause]

00:24:25.970 --> 00:24:27.330
in f.

00:24:27.330 --> 00:24:29.230
[pause]

00:24:29.230 --> 00:24:38.250
So add a Face; Ruby takes the command and
puts it in my 3D scene.

00:24:38.250 --> 00:24:44.460
SketchUp, what's nice about SketchUp too and
what makes it easy to--to create 3D within

00:24:44.460 --> 00:24:54.930
it, is we give very conceptual 3D tools so
we have things like Eraser to delete geometry.

00:24:54.930 --> 00:24:59.280
We have squares and circles which are easy
to understand. We also have this tool that's

00:24:59.280 --> 00:25:08.500
called a push/pull tool which allows you to
quickly and easily extrude 3D geometry from,

00:25:08.500 --> 00:25:17.580
from any 2D primitive. And that same terminology
exists in the Ruby API as well.

00:25:17.580 --> 00:25:26.170
So on my Face I can actually push/pull it
the direction of the normal of that Face is

00:25:26.170 --> 00:25:31.160
pointing down as I created. So if I wanna
push/pull it up a hundred units I'm actually

00:25:31.160 --> 00:25:36.480
gonna go negative here and that'll give me
a cube.

00:25:36.480 --> 00:25:47.390
And just to be interesting what I can do now
is iterate using the Ruby syntax over all

00:25:47.390 --> 00:25:55.180
the Entities in the scene. Ruby allows you
to call each if you in a collection and give

00:25:55.180 --> 00:26:00.310
it a code block in which you can operate on
any of those elements.

00:26:00.310 --> 00:26:07.080
So I'm gonna iterate over everything in my
Entities scene now which if I do a count --

00:26:07.080 --> 00:26:08.080
[pause]

00:26:08.080 --> 00:26:15.640
I now have 18 Entities which includes all
the Edges and all the Faces. So if I iterate

00:26:15.640 --> 00:26:18.530
o-through over all of 'em --

00:26:18.530 --> 00:26:19.530
[pause]

00:26:19.530 --> 00:26:25.541
and get each Entity. I'm gonna check if that
 –

00:26:25.541 --> 00:26:28.490
[pause]

00:26:28.490 --> 00:26:29.490
is a SketchUp Face --

00:26:29.490 --> 00:26:36.390
[pause - sound of typing on computer]

00:26:36.390 --> 00:26:38.250
I'm going to set the material –

00:26:38.250 --> 00:26:41.090
[pause - sound of typing on computer]

00:26:41.090 --> 00:26:51.230
to a new color and I'll just take random values
for that.

00:26:51.230 --> 00:26:55.600
[pause - sound of typing on computer]

00:26:55.600 --> 00:27:04.870
And then, so if I do that then I can just
aerate over everything that's in a Face in

00:27:04.870 --> 00:27:12.020
that, in this scene and give it a random color.
The random colors weren't that interesting,

00:27:12.020 --> 00:27:13.020
but oftentimes it is.

00:27:13.020 --> 00:27:15.500
[sound of pages turning]

00:27:15.500 --> 00:27:21.680
So other things you can access here which
are nice: Face has its collection of Edges.

00:27:21.680 --> 00:27:28.200
Oop. That is length.

00:27:28.200 --> 00:27:31.490
So four Edges around that Face.

00:27:31.490 --> 00:27:36.290
If I look at each of those, or if I look in
an actual Edge object --

00:27:36.290 --> 00:27:42.210
[pause - sound of typing on computer]

00:27:42.210 --> 00:27:48.580
I'll get the first one, the Edge object has
its 3D data like a position.

00:27:48.580 --> 00:27:49.580
[pause]

00:27:49.580 --> 00:27:50.580
Oh, whoop.

00:27:50.580 --> 00:27:51.580
[pause]

00:27:51.580 --> 00:28:02.740
Did I get it, yeah, got the Edge.

00:28:02.740 --> 00:28:03.740
[pause]

00:28:03.740 --> 00:28:07.100
Position, oh, it didn't do it.

00:28:07.100 --> 00:28:19.340
But it has positional information contained
within that position. Oh, I know what I need

00:28:19.340 --> 00:28:20.340
to do.

00:28:20.340 --> 00:28:26.680
Actually so an Edge has two vertices. You
wanna get the position of those vertices.

00:28:26.680 --> 00:28:33.470
What's nice about Ruby is that we can, Ruby
is a language that tries to give you some

00:28:33.470 --> 00:28:38.710
human readable context which is the reason
why we used it as a scripting language 'cause

00:28:38.710 --> 00:28:42.900
it makes your, tries to make your scripts
human readable.

00:28:42.900 --> 00:28:53.330
So for a lot of these terms for 3D, all the
3D geometry in here, we can actually use human

00:28:53.330 --> 00:28:59.530
readable terms. So an Edge which is a line
segment has two vertices, one on either end.

00:28:59.530 --> 00:29:07.130
We can actually store those in very, methods
called start and end.

00:29:07.130 --> 00:29:08.990
[pause]

00:29:08.990 --> 00:29:15.210
And those are what you'd think of if you're
thinking of a line segment and actually if

00:29:15.210 --> 00:29:23.410
I look at the position of that, oop --

00:29:23.410 --> 00:29:24.410
[pause]

00:29:24.410 --> 00:29:25.410
I have to spell it right. There is it. Okay.

00:29:25.410 --> 00:29:27.835
So the start position is at the origin. I
can look at the end position on this line

00:29:27.835 --> 00:29:36.650
segment and that's the one that goes from
zero zero to one hundred zero zero.

00:29:36.650 --> 00:29:49.390
So with this then you can easily look at this
Face. I wanna get the length in x so for the

00:29:49.390 --> 00:29:57.330
Face I'm gonna look at the Edges, get the
first one, first Edge, I'm gonna get the length

00:29:57.330 --> 00:30:06.550
of it; that's a hundred units as you, as you
would imagine. I've made this asymmetrical,

00:30:06.550 --> 00:30:10.290
asymmetrical it would have given me different,
but if I get the next Edge in order --

00:30:10.290 --> 00:30:14.660
[pause - sound of typing on computer]

00:30:14.660 --> 00:30:23.070
get its length, which is also a hundred, I
now have the length of one side of the Face

00:30:23.070 --> 00:30:28.320
and the length of the other side. So from
that I can just multiply and get the area

00:30:28.320 --> 00:30:29.320
of that Face.

00:30:29.320 --> 00:30:35.860
So this is an easy way if you're given any
sort of 3D geometry you can inspect it, actually

00:30:35.860 --> 00:30:40.870
calculate things that might be interesting
for geolocated data like areas and volumes

00:30:40.870 --> 00:30:42.850
and things like that.

00:30:42.850 --> 00:30:47.880
But as I mentioned, Ruby allows you to define
all that in human readable terms. So Face

00:30:47.880 --> 00:30:53.750
already has area method on it which gives
you that same information.

00:30:53.750 --> 00:30:54.790
[pause]

00:30:54.790 --> 00:31:02.370
What it doesn't have though is volume, which
is easy to get as well. What we need there

00:31:02.370 --> 00:31:08.050
is just to get the length of any of these
Edges that go up in the z direction and from

00:31:08.050 --> 00:31:16.240
those the way to find those is if we iterate
over all the Edges and find out the ones whose

00:31:16.240 --> 00:31:25.870
start vertice at z position does not equal
the z position of the ending vertice then

00:31:25.870 --> 00:31:29.650
we know we have one of these line segments.

00:31:29.650 --> 00:31:37.330
So from that I can get the Face. There's an
all connected meth--collection which gives

00:31:37.330 --> 00:31:42.280
me all the Entities that are connected to
that Face so I can iterate through each of

00:31:42.280 --> 00:31:43.280
those.

00:31:43.280 --> 00:31:45.920
[pause]

00:31:45.920 --> 00:31:50.130
As I'm iterating through those I can check
if it's an Edge –

00:31:50.130 --> 00:31:51.400
[pause]

00:31:51.400 --> 00:32:02.110
is this a SketchUp Edge? Oh, before I do that
what I wanna do is define lz so I can store

00:32:02.110 --> 00:32:09.610
it in there. So on my Face I iterate through
all connected each --

00:32:09.610 --> 00:32:10.910
[pause]

00:32:10.910 --> 00:32:19.560
I'm going to look for is this a SketchUp Edge?

00:32:19.560 --> 00:32:24.350
[pause - sound of typing on computer]

00:32:24.350 --> 00:32:30.930
And if so, does this, does the start, oh,
automatic screen saver.

00:32:30.930 --> 00:32:37.210
[pause - sound of typing on computer on computer]

00:32:37.210 --> 00:32:52.400
I look at the start position z if it does
not equal the end position in z then I know

00:32:52.400 --> 00:32:55.790
that's what I got so I'm gonna store the length
in there.

00:32:55.790 --> 00:32:56.790
[pause - sound of typing on computer]

00:32:56.790 --> 00:33:08.230
And just to make sure this works you might
wanna turn off your Bluetooth or --

00:33:08.230 --> 00:33:09.230
[laughter]

00:33:09.230 --> 00:33:12.220
that. I don't know if it'll help but --

00:33:12.220 --> 00:33:13.220
[laughter]

00:33:13.220 --> 00:33:14.920
we'll see.

00:33:14.920 --> 00:33:15.920
[pause]

00:33:15.920 --> 00:33:18.510
Syntax error. Oh I forgot an end somewhere
in there so let's get it back.

00:33:18.510 --> 00:33:19.510
[pause]

00:33:19.510 --> 00:33:23.940
Do en, does, is Edge and en position z?

00:33:23.940 --> 00:33:25.660
[pause]

00:33:25.660 --> 00:33:40.990
&gt;&gt;voice in audience: [unintelligible]

00:33:40.990 --> 00:33:45.350
&gt;&gt;Matt Lowrie: Ah, thank you. Now that guy's
awake. Thank you very much.

00:33:45.350 --> 00:33:46.350
[pause]

00:33:46.350 --> 00:33:53.550
There we go. Aerating through all of 'em,
I get the length of that. Now I have the length

00:33:53.550 --> 00:33:56.670
in x, y, z, I get my volume.

00:33:56.670 --> 00:34:04.940
So there we go, there's examples in real time
of how to work with 3D data within the API.

00:34:04.940 --> 00:34:07.290
So that's basic 3D geometry.

00:34:07.290 --> 00:34:15.440
Let's go over some terms that are specific
to SketchUp and not just 3D in general. And

00:34:15.440 --> 00:34:20.710
this will show us how we can get ads, actual
Geospatial Data.

00:34:20.710 --> 00:34:29.669
SketchUp has this idea of a Component which
is basically like a object class instance

00:34:29.669 --> 00:34:34.380
relationship. So you can have this ideal definition
of a Component and then within your 3D scene

00:34:34.380 --> 00:34:41.590
you can instance it all around. It will always
refer to that--that ideal definition of the

00:34:41.590 --> 00:34:43.360
Component.

00:34:43.360 --> 00:34:49.480
We also have an AttributeDictionary which
allows you to store custom data into your

00:34:49.480 --> 00:34:54.169
model. That way when it gets saved out and
passed around and given to somebody else,

00:34:54.169 --> 00:34:59.530
you can look in those AttributeDictionaries
which are just key value pairs that store

00:34:59.530 --> 00:35:05.080
whatever custom information you wanna keep
with that model.

00:35:05.080 --> 00:35:12.160
We also have a WebDialog which as you, as
the name suggests, is just within SketchUp,

00:35:12.160 --> 00:35:13.740
gives you a Web browser.

00:35:13.740 --> 00:35:16.250
So I will demonstrate each of those.

00:35:16.250 --> 00:35:19.950
[pause - sound of typing on computer]

00:35:19.950 --> 00:35:24.260
We'll start with one you've seen here.

00:35:24.260 --> 00:35:25.260
[pause]

00:35:25.260 --> 00:35:28.571
I'm gonna import an actual kmz model.

00:35:28.571 --> 00:35:31.730
[pause]

00:35:31.730 --> 00:35:38.150
So this came out of the 3D warehouse.

00:35:38.150 --> 00:35:41.280
[pause - sound of typing on computer]

00:35:41.280 --> 00:35:43.890
I can just import it.

00:35:43.890 --> 00:35:44.890
[pause]

00:35:44.890 --> 00:35:53.070
And this, this is a good example of how to
demonstrate this Component and ComponentInstance

00:35:53.070 --> 00:35:54.730
relationship.

00:35:54.730 --> 00:35:58.750
So since I started a new scene I'll get that
active model again.

00:35:58.750 --> 00:36:02.410
[pause - sound of typing on computer]

00:36:02.410 --> 00:36:10.220
The active model has its DefinitionList in
defi-ni-tions. So if I look at the count of

00:36:10.220 --> 00:36:16.650
that there's one ideal Definition in that
DefinitionList. And if I look at what that

00:36:16.650 --> 00:36:17.650
is—

00:36:17.650 --> 00:36:19.120
[pause – sound of typing on computer]

00:36:19.120 --> 00:36:27.410
the one object in there, it's my ComponentDefinition.
If I look at Entities right now there's one

00:36:27.410 --> 00:36:28.560
Entity in there.

00:36:28.560 --> 00:36:29.560
[pause]

00:36:29.560 --> 00:36:38.870
And if I look at what that is, that's my ComponentInstance.
And what this relationship gives you is if

00:36:38.870 --> 00:36:46.780
I take this and duplicate it, any edits that
go on—

00:36:46.780 --> 00:36:58.220
[pause]

00:36:58.220 --> 00:36:59.220
to this now --

00:36:59.220 --> 00:37:01.340
[pause – sound of typing on computer]

00:37:01.340 --> 00:37:02.340
Let go!

00:37:02.340 --> 00:37:04.470
[pause – sound of typing on computer]

00:37:04.470 --> 00:37:12.130
Any edits that I do to the one will take place
in all the others. So that's what Components

00:37:12.130 --> 00:37:19.960
are all about. And you'll see that if you
bring in kmz files they'll be set up as a

00:37:19.960 --> 00:37:24.750
Component to start with which is why, which
why I'm explaining it here.

00:37:24.750 --> 00:37:33.310
So let's look at AttributeDictionaries as
well. Let's start another new line. I'm gonna

00:37:33.310 --> 00:37:34.310
import—

00:37:34.310 --> 00:37:35.310
[pause]

00:37:35.310 --> 00:37:36.310
another building.

00:37:36.310 --> 00:37:37.310
[pause]

00:37:37.310 --> 00:37:42.320
Oh, actually that's a model so I don't have
to import it, I can open it.

00:37:42.320 --> 00:37:43.320
[pause]

00:37:43.320 --> 00:37:46.650
I got the Trump World Tower here.

00:37:46.650 --> 00:37:47.650
[pause]

00:37:47.650 --> 00:37:50.490
There it is.

00:37:50.490 --> 00:37:51.490
[pause]

00:37:51.490 --> 00:37:57.510
So this was also got off the 3D warehouse—

00:37:57.510 --> 00:37:58.790
[pause]

00:37:58.790 --> 00:38:05.840
and somebody built it in a geolocated position
and I--I have a sample of a environmental

00:38:05.840 --> 00:38:10.310
skirt here which shows the location that they
actually pulled it from.

00:38:10.310 --> 00:38:16.500
So this is where it all ties together as far
as using the Ruby AP--API with geolocated

00:38:16.500 --> 00:38:20.810
data in this, in the AttributeDictionaries
that I mentioned.

00:38:20.810 --> 00:38:24.150
Let's get the model again.

00:38:24.150 --> 00:38:28.340
[pause – sound of typing on computer]

00:38:28.340 --> 00:38:29.340
Whoops.

00:38:29.340 --> 00:38:33.230
[pause – sound of typing on computer]

00:38:33.230 --> 00:38:34.761
It ha, the active model --

00:38:34.761 --> 00:38:39.590
[pause – sound of typing on computer]

00:38:39.590 --> 00:38:49.350
has this very, very, very long term associated
for getting AttributeDictionaries. And these,

00:38:49.350 --> 00:38:55.430
as I mentioned, are key value pairs so I'm
gonna, since it's so long, I'm just gonna

00:38:55.430 --> 00:39:00.340
store it this member variable.

00:39:00.340 --> 00:39:09.110
Let's look at what each of these keys are.
If I get each item in this AttributeDictionary

00:39:09.110 --> 00:39:10.110
 –

00:39:10.110 --> 00:39:11.110
[pause]

00:39:11.110 --> 00:39:20.120
I'm going to put the name of each one that's
in here.

00:39:20.120 --> 00:39:29.760
So this comes with a couple dictionaries of,
of custom information that was included with

00:39:29.760 --> 00:39:34.430
it when I pulled it down from the 3D warehouse.
The most important here being GeoReference.

00:39:34.430 --> 00:39:40.930
So in the AttributeDictionary's collection
any of the one's that are GeoReferenced in

00:39:40.930 --> 00:39:47.140
the 3D warehouse is gonna have this GeoReference
AttributeDictionary.

00:39:47.140 --> 00:39:48.140
So if I get that --

00:39:48.140 --> 00:39:53.540
[pause – sound of typing on computer]

00:39:53.540 --> 00:40:02.770
Geo-Re-fer-ence. I won't go over everything
in it, but it has what you would probably

00:40:02.770 --> 00:40:08.940
want from GeoReference information. We've
got the latitude of where this is located

00:40:08.940 --> 00:40:10.500
and longitude.

00:40:10.500 --> 00:40:13.490
[pause – sound of typing on computer]

00:40:13.490 --> 00:40:14.490
So I can store each of those --

00:40:14.490 --> 00:40:15.490
[pause]

00:40:15.490 --> 00:40:16.490
let's get the latitude --

00:40:16.490 --> 00:40:22.120
[pause – sound of typing on computer]

00:40:22.120 --> 00:40:23.230
longitude --

00:40:23.230 --> 00:40:29.870
[pause – sound of typing on computer]

00:40:29.870 --> 00:40:34.640
Now I have those stored, what I can do is
that that WebDialog object that I mentioned.

00:40:34.640 --> 00:40:37.740
I'll create one of those. That's in the UI
name space or module.

00:40:37.740 --> 00:40:45.370
[pause – sound of typing on computer]

00:40:45.370 --> 00:40:46.370
Create a new one of those.

00:40:46.370 --> 00:40:54.550
[pause]

00:40:54.550 --> 00:41:06.210
&gt;&gt;voice in audience: [unintelligible]

00:41:06.210 --> 00:41:07.350
&gt;&gt;Matt Lowrie: Ah, the Wed. There we go. That's
better.

00:41:07.350 --> 00:41:10.350
Now that I have one, you're an excellent wing
man, if I hadn't mentioned it.

00:41:10.350 --> 00:41:15.200
I get the WebDialog, set a size that's big
enough to see for this screen, so thousand

00:41:15.200 --> 00:41:16.200
by eight hundred.

00:41:16.200 --> 00:41:18.040
[pause – sound of typing on computer]

00:41:18.040 --> 00:41:26.080
Let's just show it, show that it's there.
That's looks big enough. So now I can set

00:41:26.080 --> 00:41:28.900
the URL on it.

00:41:28.900 --> 00:41:37.910
[pause – sound of typing on computer]

00:41:37.910 --> 00:41:44.870
And I will use maps.google.com./maps. I'll
set the lat long too and use Ruby variable

00:41:44.870 --> 00:41:50.000
expansion here to set my lat and lon.

00:41:50.000 --> 00:41:51.000
[pause]

00:41:51.000 --> 00:41:55.770
Is that what I used l-o-n, yes.

00:41:55.770 --> 00:42:00.021
So I got that.

00:42:00.021 --> 00:42:10.310
Let's set hybrid and zoom level end of 19.

00:42:10.310 --> 00:42:11.310
[pause]

00:42:11.310 --> 00:42:12.310
So I'll set the URL to that.

00:42:12.310 --> 00:42:13.310
[pause]

00:42:13.310 --> 00:42:22.710
There's my WebDialog within SketchUp. So it's
that lat lon of that, of the Trump Tower and

00:42:22.710 --> 00:42:28.310
there it is, right there, Trump World Tower.
So I can actually, once I have a model, I

00:42:28.310 --> 00:42:31.810
have different tools for visualizing where
it is.

00:42:31.810 --> 00:42:38.220
So here's my WebDialog. It's easy to put Maps
into there. We're dealing with 3D though.

00:42:38.220 --> 00:42:46.160
What would be even nicer as you would extrapolate
is that we can put in the Earth API browser

00:42:46.160 --> 00:42:53.470
or Web browser Plugin. And that's what we've
done with this plug-in.

00:42:53.470 --> 00:42:58.390
So I've taken the Ruby Script in order to
do the same thing I just did here, pull up

00:42:58.390 --> 00:43:07.370
a WebDialog embed the Web, or the Earth browser
Plugin, take the lat lon of this model, show

00:43:07.370 --> 00:43:11.620
it, and also decorate it with other HTML.

00:43:11.620 --> 00:43:19.970
But what I did was save this in a Ruby Script
that when SketchUp loads I did, I get access

00:43:19.970 --> 00:43:24.810
to the SketchUp UI and I can actually put
it in this menu item. So now the user can

00:43:24.810 --> 00:43:29.530
invoke this script at any time they want by
just going to the Plugins menu and invoking

00:43:29.530 --> 00:43:31.070
it.

00:43:31.070 --> 00:43:32.620
[pause]

00:43:32.620 --> 00:43:40.040
So from that it'll actually invoke my script
which creates a WebDialog window, builds it

00:43:40.040 --> 00:43:49.330
with just basic HTML, takes the lat lon of
this model, puts into an Earth Plugin, decorate

00:43:49.330 --> 00:43:55.760
it with whatever your client needs are, and
that way what's nice about this is you have

00:43:55.760 --> 00:44:02.280
3D visualization right here for whoever you're
showing it to. But say you're showing this

00:44:02.280 --> 00:44:07.720
to somebody and they come in real time they
say, "No, no. I want it to be huge." Well

00:44:07.720 --> 00:44:14.750
then you can take it right there, build it
out, preview it again --

00:44:14.750 --> 00:44:16.370
[pause]

00:44:16.370 --> 00:44:21.220
There it is.

00:44:21.220 --> 00:44:22.830
[laughter]

00:44:22.830 --> 00:44:30.880
New. And your client is just as impressed
with these as he are, is with Bret Michaels'

00:44:30.880 --> 00:44:31.990
bandanas.

00:44:31.990 --> 00:44:33.110
[pause]

00:44:33.110 --> 00:44:38.710
So there you have it.

00:44:38.710 --> 00:44:39.830
[pause]

00:44:39.830 --> 00:44:42.810
One last demonstration that I wanna give here.

00:44:42.810 --> 00:44:46.380
[pause]

00:44:46.380 --> 00:44:55.250
There's lots of scripts actually out on the
Web. There's a Website called Smustard.com

00:44:55.250 --> 00:45:00.430
which is a warehouse for different Ruby Scripts
that people have given for free. The name

00:45:00.430 --> 00:45:06.390
of that comes from SketchUp is S-ketchup so
this is S-mustard, Smustard.

00:45:06.390 --> 00:45:16.100
They store a lot of scripts out there that
you can browse and use. One of them is a neat

00:45:16.100 --> 00:45:17.100
one --

00:45:17.100 --> 00:45:18.100
[pause]

00:45:18.100 --> 00:45:21.661
Let me import another building here to demonstrate
it.

00:45:21.661 --> 00:45:28.150
[pause]

00:45:28.150 --> 00:45:31.850
This script was written by a user that --

00:45:31.850 --> 00:45:36.430
[pause]

00:45:36.430 --> 00:45:37.430
actually --

00:45:37.430 --> 00:45:38.430
[pause]

00:45:38.430 --> 00:45:44.450
Let me explode the Component here to demonstrate
it.

00:45:44.450 --> 00:45:56.830
This Plugin can actually take geometry and
unfold it. So whatever three dimensional object

00:45:56.830 --> 00:46:02.590
you have in there it will give you an unfolded
template for it. Well, this exists in a Ruby

00:46:02.590 --> 00:46:03.590
Script --

00:46:03.590 --> 00:46:06.170
[pause]

00:46:06.170 --> 00:46:20.380
that I can then use to batch process SketchUp
by using -- if I call SketchUp with this dash

00:46:20.380 --> 00:46:29.410
RubyStartup command line flag and point it
to the Ruby Script that does this, I can actually

00:46:29.410 --> 00:46:30.410
 --

00:46:30.410 --> 00:46:35.450
yes I know I-I quit. Thank you, Apple.

00:46:35.450 --> 00:46:42.800
I can actually do batch process any unfolding
of buildings that I wanna do. If we take a

00:46:42.800 --> 00:46:48.060
look at the script real quick - because this
is Ruby and because is a Plugin architecture

00:46:48.060 --> 00:46:53.150
that people accept to actually install into
SketchUp, I actually through Ruby have access

00:46:53.150 --> 00:46:54.820
to the file system.

00:46:54.820 --> 00:47:02.550
So I can look at a directory of kmz buildings,
iterate through each of those, get my active

00:47:02.550 --> 00:47:10.390
model, import each of these buildings that
I'm iterating through off the file system

00:47:10.390 --> 00:47:16.490
into SketchUp, look at it, call my unfold
script on it, I can change the camera view

00:47:16.490 --> 00:47:22.400
to look straight down from a top view, I can
zoom extend so that I'm, got the ent--entire

00:47:22.400 --> 00:47:31.210
thing in view, and then I can save all of
that out to PDF or PNG file or whatever I

00:47:31.210 --> 00:47:32.210
wanna do --

00:47:32.210 --> 00:47:33.210
[pause]

00:47:33.210 --> 00:47:40.910
Let's on my file system here I've got my buildings,
I've got this printouts, let's delete it so

00:47:40.910 --> 00:47:43.600
somehow that there's no magic --

00:47:43.600 --> 00:47:46.820
[pause – sound of typing on computer]

00:47:46.820 --> 00:47:56.100
And if I just invoke this script with Ruby
or with SketchUp -- let me switch to SketchUp

00:47:56.100 --> 00:47:58.860
so you can see what's goin' on.

00:47:58.860 --> 00:48:07.580
This will actually use SketchUp to batch process
3D geometry by just executing the Ruby Script

00:48:07.580 --> 00:48:14.980
that I give it. So there's all my buildings;
went through, unfolded 'em all, checked the

00:48:14.980 --> 00:48:23.470
file system. There's all my printouts, there
I can batch process, send 'em to the printer,

00:48:23.470 --> 00:48:30.630
and all those to the intern to cut out and
build into actual 3D paper models and everyone

00:48:30.630 --> 00:48:34.860
goes out for beers 'cause it's done so quickly.

00:48:34.860 --> 00:48:41.950
So that is an introduction to all things Geospatial
3D.

00:48:41.950 --> 00:48:46.030
Thanks for coming and thanks for delaying
your lunch to see all this. I appreciate it

00:48:46.030 --> 00:48:51.230
and we'll take any questions you have.

00:48:51.230 --> 00:48:52.820
[applause]

00:48:52.820 --> 00:48:54.420
Yes.

00:48:54.420 --> 00:49:00.380
&gt;&gt;male in audience#1: I was gonna ask in Builder
Maker you have multiple views, multiple angle

00:49:00.380 --> 00:49:06.310
views, obviously it was a subset of Amsterdam.
Kind of two related questions. One of 'em

00:49:06.310 --> 00:49:11.210
is: what kinda defines, where do you get the
multiple angle views, and as a follow up is

00:49:11.210 --> 00:49:16.100
there any complication of using that technology
with Google Earth Enterprise server so long

00:49:16.100 --> 00:49:19.020
as we can connect up to cage.google.com?

00:49:19.020 --> 00:49:26.920
&gt;&gt;Matt Lowrie: Yep. So the question is the--the
oblique imagery from each side in Building

00:49:26.920 --> 00:49:34.119
Maker and if using that with, if you use that
to texture if you then can take that building

00:49:34.119 --> 00:49:35.200
into Earth Enterprise?

00:49:35.200 --> 00:49:36.200
&gt;&gt;male in audience#1: Yeah.

00:49:36.200 --> 00:49:37.200
&gt;&gt;Matt Lowrie: Yeah, I-I --

00:49:37.200 --> 00:49:40.390
&gt;&gt;male in audience#1: Why, actually the first
question is where, what defines, you don't

00:49:40.390 --> 00:49:45.260
usually have multiple oblique views. I noticed
in Amsterdam there was a subset is, how do

00:49:45.260 --> 00:49:51.880
we know which areas, or what causes you to
have multiple views of--of the same area?

00:49:51.880 --> 00:49:56.870
&gt;&gt;Matt Lowrie: Yes. So what causes you to
have that, well all those, how does, how do

00:49:56.870 --> 00:49:58.430
we give you all those multiple views --

00:49:58.430 --> 00:49:59.430
&gt;&gt;male in audience#1: Right.

00:49:59.430 --> 00:50:00.430
&gt;&gt;Matt Lowrie: when you're building at that
location?

00:50:00.430 --> 00:50:01.430
&gt;&gt;male in audience#1: Um-hum.

00:50:01.430 --> 00:50:04.490
&gt;&gt;Matt Lowrie: And the answer is that's a
secret. [laughs]

00:50:04.490 --> 00:50:05.490
&gt;&gt;male in audience#1: Really?

00:50:05.490 --> 00:50:10.100
&gt;&gt;Matt Lowrie: But no. A better answer to
that is that's just part of the product of

00:50:10.100 --> 00:50:15.480
Building Maker so we, actually Google owns
that oblique imagery –

00:50:15.480 --> 00:50:16.480
&gt;&gt;male in audience#1: Hum.

00:50:16.480 --> 00:50:23.191
&gt;&gt;Matt Lowrie: and that's certainly all--all
geolocated as well. So when you use the Maps

00:50:23.191 --> 00:50:29.760
or Earth API to pick a location that you wanna
model, we actually can derive that in, that

00:50:29.760 --> 00:50:34.560
information where you are and then figure
out what obliques you need --

00:50:34.560 --> 00:50:35.560
&gt;&gt;male in audience#1: Um-hum.

00:50:35.560 --> 00:50:37.450
&gt;&gt;Matt Lowrie: for that particular area. And
that's what Building Maker provides.

00:50:37.450 --> 00:50:38.450
&gt;&gt;Matt Lowrie: We just –

00:50:38.450 --> 00:50:39.450
&gt;&gt;male in audience#1: Um-hum.

00:50:39.450 --> 00:50:42.960
&gt;&gt;Matt Lowrie: put that into the application
to give you all that and then that's used

00:50:42.960 --> 00:50:44.550
to-to texture map on --

00:50:44.550 --> 00:50:48.030
&gt;&gt;male in audience#1: Is there is any-anyway
to replicate that capability in our own Google

00:50:48.030 --> 00:50:49.640
Earth Enterprise server that's --

00:50:49.640 --> 00:50:51.570
&gt;&gt;Matt Lowrie: There isn't.

00:50:51.570 --> 00:50:53.370
&gt;&gt;male in audience#1: Okay. Thanks.

00:50:53.370 --> 00:50:55.450
&gt;&gt;Matt Lowrie: But, but as far as --

00:50:55.450 --> 00:50:57.031
&gt;&gt;male in audience#1: I was hoping you we're
gonna say "yet."

00:50:57.031 --> 00:50:59.390
&gt;&gt;Matt Lowrie: [laughs] I can't say yes –

00:50:59.390 --> 00:51:01.460
&gt;&gt;male in audience#1: No, yet.

00:51:01.460 --> 00:51:07.930
&gt;&gt;Matt Lowrie: at this time, but if that,
the answer to if it works with Enterprise

00:51:07.930 --> 00:51:13.010
is yes 'cause we then take that as, and use
that as a texture map on the buildings. So

00:51:13.010 --> 00:51:19.360
once it's on the building it's actually removed
from that oblique imagery and then it's just

00:51:19.360 --> 00:51:24.000
a textured model at that point. So if you
use it with regular Earth or Enterprise Earth,

00:51:24.000 --> 00:51:25.160
it'll all work the same.

00:51:25.160 --> 00:51:26.380
&gt;&gt;female in audience#1: Hi.

00:51:26.380 --> 00:51:27.380
&gt;&gt;Matt Lowrie: Hi.

00:51:27.380 --> 00:51:31.890
&gt;&gt;female in audience#1: Since we're not in
the Android room, I'll ask an Android question.

00:51:31.890 --> 00:51:39.550
Is Earth supported on Android, the API? And
can you do this like for example could I have

00:51:39.550 --> 00:51:45.030
a 3D map of a building and let's say I wanna
go to that building then maybe I would press

00:51:45.030 --> 00:51:52.366
on the upper floor I could get like a little
layout that would show me the inside of the

00:51:52.366 --> 00:51:53.366
building; things like that.

00:51:53.366 --> 00:51:54.366
&gt;&gt;Matt Lowrie: That would be super awesome.

00:51:54.366 --> 00:51:55.660
&gt;&gt;female in audience: [laughs]

00:51:55.660 --> 00:52:01.770
&gt;&gt;Matt Lowrie: Which you might consider building.
Yeah, at this time there is, and I don't wanna

00:52:01.770 --> 00:52:08.730
say the wrong thing, I believe Earth for Android
or, yeah, I'm not, I'm actually not sure what's

00:52:08.730 --> 00:52:09.840
available. But all of that --

00:52:09.840 --> 00:52:11.900
&gt;&gt;female in audience: I know they got Maps.

00:52:11.900 --> 00:52:14.860
&gt;&gt;Matt Lowrie: But all of this I know is--is
not available on Android yet.

00:52:14.860 --> 00:52:15.860
&gt;&gt;female in audience#1: Okay.

00:52:15.860 --> 00:52:16.860
&gt;&gt;Matt Lowrie: And, yeah, I don't know when
 --

00:52:16.860 --> 00:52:20.940
&gt;&gt;female in audience#1: I mean we've done
3D rendering like in a game and then you're

00:52:20.940 --> 00:52:30.520
doing all kinds of matrices and, this seems
so much easier that you could just pull up

00:52:30.520 --> 00:52:31.520
stuff and --

00:52:31.520 --> 00:52:35.510
&gt;&gt;Matt Lowrie: Yeah. Yeah, it certainly, it's
certainly the way -- there is I know a lot

00:52:35.510 --> 00:52:41.470
of 3D in general there's a lot of momentum
building up in different areas of it. So some

00:52:41.470 --> 00:52:46.580
of it is figuring out which technologies are
right to go to these platforms with. There's

00:52:46.580 --> 00:52:47.720
WebGL. That's emerging.

00:52:47.720 --> 00:52:49.230
&gt;&gt;female in audience#1: Right.

00:52:49.230 --> 00:52:50.369
&gt;&gt;Matt Lowrie: And-and --

00:52:50.369 --> 00:52:51.890
&gt;&gt;female in audience#1: OpenGL

00:52:51.890 --> 00:52:57.530
&gt;&gt;Matt Lowrie: with the Java built in for
Android there's options there.

00:52:57.530 --> 00:52:58.530
&gt;&gt;female in audience#1: Oh, okay.

00:52:58.530 --> 00:53:02.570
&gt;&gt;Matt Lowrie: So as far as getting it to
these different platforms some of that is

00:53:02.570 --> 00:53:07.700
just making, finding out what's the best way
to do it. The desktop is at that point to

00:53:07.700 --> 00:53:11.810
where we can do stuff like this because the
graphics have just --

00:53:11.810 --> 00:53:15.960
&gt;&gt;female in audience#1: It-it's harder.

00:53:15.960 --> 00:53:18.610
&gt;&gt;Matt Lowrie: over the years have-have --

00:53:18.610 --> 00:53:19.610
&gt;&gt;female in audience#1: Yeah. Okay.

00:53:19.610 --> 00:53:20.610
&gt;&gt;Matt Lowrie: matured enough. Hopefully,
I answered your question, by saying nothing.

00:53:20.610 --> 00:53:27.320
&gt;&gt;male in audience#2: What determines which
locations Building Maker is supported in and

00:53:27.320 --> 00:53:28.320
is that increasing at a certain rate?

00:53:28.320 --> 00:53:34.920
&gt;&gt;Matt Lowrie: It is. It's basically, yeah,
we--we--we collect that data so, and--and

00:53:34.920 --> 00:53:43.170
we don't, we wanna make sure it's--it's accurate
data, it's good, it's good quality data to

00:53:43.170 --> 00:53:49.980
use so that determines what's--what's actually
available at what particular time.

00:53:49.980 --> 00:53:57.260
It's currently available right now for 89
cities around the world. Since we've launched

00:53:57.260 --> 00:54:04.840
it's just a progressive stream. We launched
with Wave fewer cities and then whenever we

00:54:04.840 --> 00:54:09.770
get data in the pipeline that's--that's quality
enough to present, that's when they'll, it'll

00:54:09.770 --> 00:54:11.400
show up in Building Maker.

00:54:11.400 --> 00:54:18.210
&gt;&gt;male in audience#3: Hi. I-I was just wondering,
this seems like it only works in Earth right

00:54:18.210 --> 00:54:28.250
now. Is there any push towards making it work
with all of the Maps APIs as-as far as the

00:54:28.250 --> 00:54:29.250
perspective 3D models go?

00:54:29.250 --> 00:54:30.390
&gt;&gt;Matt Lowrie: As far as the--the Building
Maker?

00:54:30.390 --> 00:54:31.660
&gt;&gt;male in audience#3: Right.

00:54:31.660 --> 00:54:38.060
&gt;&gt;Matt Lowrie: That is, I mean the--the resulting
buildings certainly work with Earth or with

00:54:38.060 --> 00:54:42.790
any, I mean they're available from 3D warehouse
to work with anything. As far the interface

00:54:42.790 --> 00:54:46.210
for creating 'em that's only available within
Building Maker and it's --

00:54:46.210 --> 00:54:50.730
&gt;&gt;male in audience#3: I guess I-I-I mean taking
these 3D buildings and putting them in the

00:54:50.730 --> 00:55:01.000
Maps APIs so that you could see them, kind
of make them available to more people.

00:55:01.000 --> 00:55:06.750
&gt;&gt;Matt Lowrie: They should, yeah, it should
be the, we just launched Earth View in Maps

00:55:06.750 --> 00:55:07.750
 –

00:55:07.750 --> 00:55:08.750
&gt;&gt;male in audience#3: Um-hum.

00:55:08.750 --> 00:55:15.400
&gt;&gt;Matt Lowrie: and through that is the same
collection of buildings that you see in Earth.

00:55:15.400 --> 00:55:21.070
So if you go to Maps now and turn on the--the
Earth View you'll get the same buildings available

00:55:21.070 --> 00:55:30.570
in Maps. That, in order to access 'em I would
imagine you have to go through the Earth API

00:55:30.570 --> 00:55:35.790
in order to present whatever view within Maps.

00:55:35.790 --> 00:55:43.810
But it-it's the same I'm not sure about Android
if it's the same, but yeah if you go to a

00:55:43.810 --> 00:55:49.060
desktop, go in a browser to Maps, you'll turn
on Earth and see the same view.

00:55:49.060 --> 00:55:50.990
&gt;&gt;male in audience#3: Thank you.

00:55:50.990 --> 00:55:57.200
&gt;&gt;male in audience#4: Does the Google, this
Building Maker, does it have an API?

00:55:57.200 --> 00:56:00.470
&gt;&gt;Matt Lowrie: It does not have an API --

00:56:00.470 --> 00:56:01.470
&gt;&gt;male in audience#4: Okay.

00:56:01.470 --> 00:56:02.470
&gt;&gt;Matt Lowrie: as of yet.

00:56:02.470 --> 00:56:03.930
&gt;&gt;male in audience: Uh-huh. Does it allow
you to save a building as a kmz?

00:56:03.930 --> 00:56:06.670
&gt;&gt;Matt Lowrie: Yes. So that's what automatically
happens --

00:56:06.670 --> 00:56:07.670
&gt;&gt;male in audience#4: Okay.

00:56:07.670 --> 00:56:11.960
&gt;&gt;Matt Lowrie: when you save a building in
Building Maker it's directly put into the

00:56:11.960 --> 00:56:12.980
3D warehouse --

00:56:12.980 --> 00:56:17.540
&gt;&gt;male in audience#4: I don't wanna put it
in the 3D warehouse that's --

00:56:17.540 --> 00:56:18.540
&gt;&gt;Matt Lowrie: Uh-huh. Yeah, that's --

00:56:18.540 --> 00:56:20.050
&gt;&gt;male in audience#4: I wanna save it as a
kmz to my c drive or whatever.

00:56:20.050 --> 00:56:26.230
&gt;&gt;Matt Lowrie: Yeah. The, there's no way to
go directly from Building Maker to say just

00:56:26.230 --> 00:56:32.920
download it. The--the process that actually
converts it to kmz runs on 3D warehouse. This

00:56:32.920 --> 00:56:37.436
is why it's actually put in there, that is
what converts it to kmz, and once you can

00:56:37.436 --> 00:56:44.840
download it from 3D warehouse in which case
if you don't want it in 3D warehouse at that

00:56:44.840 --> 00:56:48.310
point you can just delete it from 3D warehouse.

00:56:48.310 --> 00:56:54.970
&gt;&gt;male in audience#4: Hum. Okay. The, the-the
oblique images are, they are only available

00:56:54.970 --> 00:56:59.480
within Building Maker? I can't go view 3D
images from Google Maps, Google Earth or any

00:56:59.480 --> 00:57:00.480
other Google product?

00:57:00.480 --> 00:57:01.790
&gt;&gt;Matt Lowrie: Correct. Yeah, they're only
 --

00:57:01.790 --> 00:57:10.830
&gt;&gt;male in audience#4: Why would that be? I
mean I can go to Microsoft Live Earth or whatever

00:57:10.830 --> 00:57:11.990
and get obliques there?

00:57:11.990 --> 00:57:13.230
&gt;&gt;Matt Lowrie: Um-hum.

00:57:13.230 --> 00:57:19.020
&gt;&gt;male in audience#4: I work-work for a local
government, we spend 50,000, 100,000 bucks

00:57:19.020 --> 00:57:21.130
a year buying oblique images. Why wouldn't
you make these obliques available in the standard

00:57:21.130 --> 00:57:22.130
viewers?

00:57:22.130 --> 00:57:25.390
&gt;&gt;Matt Lowrie: That is a, the answer to that
is many faceted –

00:57:25.390 --> 00:57:26.390
&gt;&gt;male in audience#4: Right, right.

00:57:26.390 --> 00:57:27.390
&gt;&gt;Matt Lowrie: many of which I don't have
the facets to answer, but it is, yeah. Currently

00:57:27.390 --> 00:57:28.590
it's just available on Building Maker and
that's because we have this particular use

00:57:28.590 --> 00:57:29.590
case for it.

00:57:29.590 --> 00:57:34.210
&gt;&gt;male in audience#4: Is there any means to
add interior information about buildings,

00:57:34.210 --> 00:57:35.400
like floor plans?

00:57:35.400 --> 00:57:51.590
&gt;&gt;Matt Lowrie: Yeah, that's, I mean that's
certainly a big on a, on a wish list of--of

00:57:51.590 --> 00:57:56.960
many people. So it's certainly on our roadmap,
but currently yeah this first implementation

00:57:56.960 --> 00:58:02.280
is--is obviously just exteriors. But some
we're always researching.

00:58:02.280 --> 00:58:04.650
&gt;&gt;male in audience#4: Thank you.

00:58:04.650 --> 00:58:08.870
&gt;&gt;Matt Lowrie: Sure. Thank you.

00:58:08.870 --> 00:58:15.960
Thanks. It looks like there's no moderator
questions either. And I think we need to wrap

00:58:15.960 --> 00:58:19.550
it up to get back on schedule so if you have
any more questions I'll be at the back of

00:58:19.550 --> 00:58:20.550
the room.

00:58:20.550 --> 00:58:20.860
&gt;&gt;male voice: Thanks.

