WEBVTT
Kind: captions
Language: en

00:00:00.220 --> 00:00:03.220
Another common need in building such situation

00:00:03.220 --> 00:00:06.990
awareness applications is that a computation may need

00:00:06.990 --> 00:00:11.110
to get correspondingly timestamped items from several

00:00:11.110 --> 00:00:13.280
different sensor sources. So, for instance, in this

00:00:13.280 --> 00:00:15.420
picture I'm showing you a video source,

00:00:15.420 --> 00:00:18.860
an audio source, a text source, and gesture

00:00:18.860 --> 00:00:22.160
source. And this computation, in order to do

00:00:22.160 --> 00:00:25.810
its high level inferencing, it wants to use

00:00:25.810 --> 00:00:29.280
the multiple modalities of sensing that's available

00:00:29.280 --> 00:00:32.439
to generate high level inference that can

00:00:32.439 --> 00:00:39.730
be more robust. And this is where bundling of streams that PTS allows comes in

00:00:39.730 --> 00:00:43.390
handy. PTS allows streams to be grouped

00:00:43.390 --> 00:00:46.474
together, as a stream group. And any number

00:00:46.474 --> 00:00:51.310
of such streams can be grouped together and labelled as a group. And in creating

00:00:51.310 --> 00:00:54.190
a stream bundle like this, a computation

00:00:54.190 --> 00:00:57.560
can specify that, for this stream group, this

00:00:57.560 --> 00:01:03.390
guy is the anchor stream. For instance, we could name the video as the anchor

00:01:03.390 --> 00:01:06.150
stream for this particular stream group. All

00:01:06.150 --> 00:01:09.650
the other streams within the same stream group

00:01:09.650 --> 00:01:14.590
are dependent streams on the anchor stream. And

00:01:14.590 --> 00:01:16.450
in PTS there's a primitive for getting a

00:01:16.450 --> 00:01:24.090
group get, say, get corresponding timestamped items from all of the streams

00:01:24.090 --> 00:01:29.560
in a particular stream group. The group get primitive is once again a way

00:01:29.560 --> 00:01:36.180
of reducing the pain point for a domain expert. And having to go out and fetch

00:01:36.180 --> 00:01:41.750
individual items from each one of these streams, and selecting temporally

00:01:41.750 --> 00:01:46.670
correlated items from all the other dependent streams. That burden is

00:01:46.670 --> 00:01:52.030
taken away by PTS by providing this group get, where you can get

00:01:52.030 --> 00:01:56.800
correspondingly timestamped items from all the streams in a given group.

