WEBVTT
Kind: captions
Language: en

00:00:00.190 --> 00:00:04.482
Now this works, technically, but there's a problem. What if we have a dozen

00:00:04.482 --> 00:00:09.304
types of entities that we might need to spawn, or, 50, or even 100. Real time

00:00:09.304 --> 00:00:13.456
strategy games for instance contain many different entity definitions. Writing

00:00:13.456 --> 00:00:16.432
out a spawn entity function to represent all of these items would involve a

00:00:16.432 --> 00:00:19.744
large case statement that wouldn't really scale well for programmer maintenance

00:00:19.744 --> 00:00:24.344
over time. For instance, if a designer wanted to add a new type of entity,

00:00:24.344 --> 00:00:27.746
they'd actually need a programmer's help to do it, to go in and add a specific

00:00:27.746 --> 00:00:32.575
line of code for that entity type. The problem is further visible if you

00:00:32.575 --> 00:00:36.282
consider code maintenance. Adding reference to class definition throughout your

00:00:36.282 --> 00:00:40.147
code basis is just asking for problems. To address this issue, we're going to

00:00:40.147 --> 00:00:44.054
take advantage of an interesting property in JavaScript. Namely, that we can

00:00:44.054 --> 00:00:48.552
create a new object given a handle to its definition. To allow this, each

00:00:48.552 --> 00:00:52.773
overloaded entity definition will update a hash table with a pointer to its

00:00:52.773 --> 00:00:58.256
class definition. Once we have a hash table entry between the string name of

00:00:58.256 --> 00:01:02.472
the instance class, we can then use this instance to create a new version of

00:01:02.472 --> 00:01:08.700
that class. Remember that in grids, map development is done through a program

00:01:08.700 --> 00:01:12.860
called Tiled which allows our content creators to place objects in the world,

00:01:12.860 --> 00:01:18.662
and set their type via a string. This means the data that we'll be receiving

00:01:18.662 --> 00:01:22.082
from our map definition file, is a list of objects with a string property

00:01:22.082 --> 00:01:26.820
representing their class type. Our code needs to be able to react to this by

00:01:26.820 --> 00:01:29.844
using the hash table that maps these string values to the class definitions

00:01:29.844 --> 00:01:34.900
they represent. What this means is this previous definition of spawnEntity

00:01:34.900 --> 00:01:38.743
function needs to be replaced with a nice healthy reference to this factory

00:01:38.743 --> 00:01:42.420
object, and use it as we've defined.

