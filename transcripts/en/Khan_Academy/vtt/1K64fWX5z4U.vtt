WEBVTT
Kind: captions
Language: en

00:00:07.826 --> 00:00:08.894
- I'm Jasmine Lawrence

00:00:08.894 --> 00:00:10.291
and I'm a Program Manager

00:00:10.291 --> 00:00:12.675
on the Xbox One engineering team.

00:00:13.863 --> 00:00:16.956
One of our biggest features
is called Xbox Live.

00:00:16.956 --> 00:00:19.260
It's an online service
that connects gamers

00:00:19.260 --> 00:00:20.991
from all around the world,

00:00:20.991 --> 00:00:24.049
and we rely on the internet
to make that happen.

00:00:24.049 --> 00:00:26.591
This is no easy task and there are a lot

00:00:26.591 --> 00:00:29.939
of things happening behind the scenes.

00:00:29.939 --> 00:00:31.672
The internet is totally changing

00:00:31.672 --> 00:00:34.179
how people interact and connect.

00:00:34.179 --> 00:00:35.944
But how does it work?

00:00:35.944 --> 00:00:38.220
How do the computers all across the world

00:00:38.220 --> 00:00:41.215
actually communicate with each other?

00:00:41.215 --> 00:00:43.676
Let's look at web browsing.

00:00:43.676 --> 00:00:46.293
First, you open a web browser.

00:00:46.293 --> 00:00:49.318
It's the app you use to
access the web pages.

00:00:49.318 --> 00:00:52.743
Next, you type in the web address, or URL,

00:00:52.743 --> 00:00:55.285
which stands for Uniform Resource Locator,

00:00:55.285 --> 00:00:58.830
of a website you want to
visit like Tumblr.com.

00:00:58.830 --> 00:01:02.301
(upbeat electronic music)

00:01:04.354 --> 00:01:06.537
- Hi, I'm David Karp,
the founder of Tumblr,

00:01:06.537 --> 00:01:07.725
and we're here today to talk about

00:01:07.725 --> 00:01:09.987
how those web browsers we use every day

00:01:09.987 --> 00:01:11.923
actually work.

00:01:11.923 --> 00:01:13.038
So you've probably wondered what

00:01:13.038 --> 00:01:15.104
actually happens when you type an address

00:01:15.104 --> 00:01:17.490
into your web browser and then hit enter,

00:01:17.490 --> 00:01:19.493
and it really is about as
crazy as you can imagine.

00:01:19.493 --> 00:01:20.816
So in that moment,

00:01:20.816 --> 00:01:23.469
your computer starts
talking to another computer

00:01:23.469 --> 00:01:24.694
called a server

00:01:24.694 --> 00:01:27.364
that's usually thousands of miles away,

00:01:27.364 --> 00:01:29.391
and in milliseconds your computer

00:01:29.391 --> 00:01:31.927
asks that server for a website,

00:01:31.927 --> 00:01:33.896
and that server starts to talk back

00:01:33.896 --> 00:01:37.591
to your computer in a
language called HTTP.

00:01:37.591 --> 00:01:40.810
HTTP stands for Hypertext
Transfer Protocol.

00:01:40.810 --> 00:01:41.997
You can kind of think of it

00:01:41.997 --> 00:01:43.839
as the language that one computer uses

00:01:43.839 --> 00:01:46.232
to ask another computer for a document.

00:01:46.232 --> 00:01:47.959
It's actually really
pretty straightforward.

00:01:47.959 --> 00:01:49.459
If you were to intercept

00:01:49.459 --> 00:01:51.503
the conversation between your computer

00:01:51.503 --> 00:01:53.137
and a web server on the internet,

00:01:53.137 --> 00:01:54.507
it's mainly made up of something

00:01:54.507 --> 00:01:55.900
called "GET" requests.

00:01:55.900 --> 00:01:58.268
And those are really very
simply the word "GET"

00:01:58.268 --> 00:01:59.615
and then the name of the document

00:01:59.615 --> 00:02:00.754
that you're requesting.

00:02:00.754 --> 00:02:02.169
So if you're trying to log into Tumblr

00:02:02.169 --> 00:02:03.609
and load our login page,

00:02:03.609 --> 00:02:05.607
all you're doing is sending a GET request

00:02:05.607 --> 00:02:07.215
to Tumblr's server

00:02:07.215 --> 00:02:10.455
that says "GET /login"

00:02:10.455 --> 00:02:12.578
and that tells Tumblr's server that

00:02:12.578 --> 00:02:15.243
you want all of the HTML code

00:02:15.243 --> 00:02:18.318
for the Tumblr login page.

00:02:18.318 --> 00:02:21.464
HTML stands for HyperText Markup Language

00:02:21.464 --> 00:02:23.426
and you can think of that
as the language you use

00:02:23.426 --> 00:02:26.563
to tell a web browser
how to make a page look.

00:02:26.563 --> 00:02:28.383
So if you think about
something like Wikipedia,

00:02:28.383 --> 00:02:30.643
which is really just
a big simple document,

00:02:30.643 --> 00:02:32.702
and HTML is the language that you use

00:02:32.702 --> 00:02:34.815
to make that title big and bold,

00:02:34.815 --> 00:02:37.473
to make the font the right font,

00:02:37.473 --> 00:02:41.084
to link certain text
to certain other pages,

00:02:41.084 --> 00:02:42.431
to make some text bold,

00:02:42.431 --> 00:02:44.094
to make some text italic,

00:02:44.094 --> 00:02:45.496
to put an image in the middle of the page,

00:02:45.496 --> 00:02:46.773
to align the image to the right,

00:02:46.773 --> 00:02:49.034
to align the image to the left.

00:02:49.034 --> 00:02:50.958
- The text of a web page is included

00:02:50.958 --> 00:02:52.857
directly in the HTML,

00:02:52.857 --> 00:02:55.735
but other parts, images or videos,

00:02:55.735 --> 00:02:58.082
are separate files with their own URLs

00:02:58.082 --> 00:03:00.032
that need to be requested.

00:03:00.032 --> 00:03:02.852
The browser sends separate HTTP requests

00:03:02.852 --> 00:03:06.412
for each of these and
displays them as they arrive.

00:03:07.942 --> 00:03:10.736
If a web page has a lot
of different images,

00:03:10.736 --> 00:03:13.801
each of them causes a
separate HTTP request

00:03:13.801 --> 00:03:15.798
and the page loads slower.

00:03:18.708 --> 00:03:20.499
Now sometimes when you browse the web,

00:03:20.499 --> 00:03:22.054
you're not just requesting pages

00:03:22.054 --> 00:03:23.702
with GET requests.

00:03:23.702 --> 00:03:25.560
Sometimes you send information,

00:03:25.560 --> 00:03:29.300
like when you fill out a
form or type a search query.

00:03:29.300 --> 00:03:31.132
Your browser sends this information

00:03:31.132 --> 00:03:33.562
in plain text to the web server

00:03:33.562 --> 00:03:36.565
using an HTTP post request.

00:03:36.565 --> 00:03:38.678
- So let's say you log in to Tumblr.

00:03:38.678 --> 00:03:41.248
The first thing you do
is make a "POST" request

00:03:41.248 --> 00:03:44.620
That is, a "POST" to Tumblr's login page

00:03:44.620 --> 00:03:46.411
that has some data attached to it.

00:03:46.411 --> 00:03:49.065
It has your email address,
it has your password.

00:03:49.065 --> 00:03:50.799
That goes to Tumblr's server.

00:03:50.799 --> 00:03:54.364
Tumblr's server figures out
that, okay, you're David.

00:03:54.364 --> 00:03:56.278
It sends a web page back to your browser

00:03:56.278 --> 00:03:58.995
that says, "Success! Logged in as David."

00:03:58.995 --> 00:04:00.395
But along with that web page,

00:04:00.395 --> 00:04:03.825
it also attaches a little
bit of invisible cookie data

00:04:03.825 --> 00:04:07.215
that your browser sees and knows to save,

00:04:07.215 --> 00:04:08.386
and that's really important because

00:04:08.386 --> 00:04:09.746
it's really the only way that a website

00:04:09.746 --> 00:04:12.056
can remember who you are.

00:04:12.056 --> 00:04:13.414
All that cookie data really is

00:04:13.414 --> 00:04:15.829
is an ID card for Tumblr.

00:04:15.829 --> 00:04:18.789
It's a number that
identifies you as David.

00:04:18.789 --> 00:04:21.085
Your web browser holds onto that number,

00:04:21.085 --> 00:04:23.003
and then the next time you refresh Tumblr,

00:04:23.003 --> 00:04:24.813
the next time you go to Tumblr.com,

00:04:24.813 --> 00:04:26.719
your web browser knows to automatically

00:04:26.719 --> 00:04:29.226
attach that ID number with the request

00:04:29.226 --> 00:04:30.619
that it sends over to Tumblr's server,

00:04:30.619 --> 00:04:32.802
so now Tumblr's server sees the request

00:04:32.802 --> 00:04:35.722
coming from your browser,
sees the ID number,

00:04:35.722 --> 00:04:39.005
and knows, okay, this
is a request from David.

00:04:40.534 --> 00:04:43.474
- Now, the internet is completely open,

00:04:43.474 --> 00:04:45.474
all of its connections are shared,

00:04:45.474 --> 00:04:48.196
and information is sent in plain text.

00:04:48.196 --> 00:04:50.123
This makes it possible for hackers

00:04:50.123 --> 00:04:52.259
to snoop on any personal information

00:04:52.259 --> 00:04:54.860
that you send over the internet,

00:04:54.860 --> 00:04:57.344
but safe websites prevent this

00:04:57.344 --> 00:04:58.738
by asking your web browser

00:04:58.738 --> 00:05:01.045
to communicate on a secure channel

00:05:01.045 --> 00:05:03.962
using something called
Secure Sockets Layer

00:05:03.962 --> 00:05:07.510
and its successor
Transport Layer Security.

00:05:07.510 --> 00:05:11.949
You can think of SSL and
TLS as a layer of security

00:05:11.949 --> 00:05:14.219
wrapped around your communications

00:05:14.219 --> 00:05:17.319
to protect them from
snooping or tampering.

00:05:17.319 --> 00:05:20.842
SSL and TLS are active when
you see the little lock

00:05:20.842 --> 00:05:23.059
that appears in your browser address bar

00:05:23.059 --> 00:05:25.646
next to the HTTPS.

00:05:25.646 --> 00:05:28.193
The HTTPS protocols ensure that your

00:05:28.193 --> 00:05:32.243
HTTP requests are secure and protected.

00:05:32.243 --> 00:05:34.007
When a website asks your browser

00:05:34.007 --> 00:05:35.934
to engage in a secure connection,

00:05:35.934 --> 00:05:38.954
it first provides a digital certificate,

00:05:38.954 --> 00:05:41.340
which is like an official ID card

00:05:41.340 --> 00:05:44.247
proving that it's the
website it claims to be.

00:05:44.247 --> 00:05:45.686
Digital certificates are published

00:05:45.686 --> 00:05:47.683
by certificate authorities,

00:05:47.683 --> 00:05:50.503
which are trusted entities
that verify the identities

00:05:50.503 --> 00:05:53.872
of websites and issue
certificates for them,

00:05:53.872 --> 00:05:57.621
just like a government can
issue IDs or passports.

00:05:57.621 --> 00:06:00.114
Now, if a website tries to
start a secure connection

00:06:00.114 --> 00:06:02.830
without a properly issued
digital certificate,

00:06:02.830 --> 00:06:05.011
your browser will warn you.

00:06:07.171 --> 00:06:09.520
That's the basics of web browsing,

00:06:09.520 --> 00:06:12.527
the part of the internet
we see day to day.

00:06:12.527 --> 00:06:16.415
To summarize, HTTP and DNS manage

00:06:16.415 --> 00:06:19.144
the sending and receiving of HTML,

00:06:19.144 --> 00:06:22.221
media files, or anything on the web.

00:06:22.221 --> 00:06:24.429
What makes this possible under the hood

00:06:24.429 --> 00:06:27.549
are TCP/IP and router networks

00:06:27.549 --> 00:06:29.709
that break down and transport information

00:06:29.709 --> 00:06:31.787
in small packets.

00:06:31.787 --> 00:06:34.725
Those packets themselves
are made up of binary,

00:06:34.725 --> 00:06:36.558
sequences of ones and zeros

00:06:36.558 --> 00:06:39.101
that are physically sent
through electric wires,

00:06:39.101 --> 00:06:42.806
fiber optic cables, and wireless networks.

00:06:42.806 --> 00:06:45.103
Fortunately, once you've
learned how one layer

00:06:45.103 --> 00:06:47.580
of the internet works, you can rely on it

00:06:47.580 --> 00:06:49.816
without remembering all the details.

00:06:49.816 --> 00:06:52.812
We can trust that all those
layers will work together

00:06:52.812 --> 00:06:54.874
to successfully deliver information

00:06:54.874 --> 00:06:58.315
at scale and with reliability.

