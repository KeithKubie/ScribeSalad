WEBVTT
Kind: captions
Language: en

00:00:01.467 --> 00:00:08.320
[SWISHING]

00:00:08.320 --> 00:00:09.070
KALYAN REDDY: Hi, everyone.

00:00:09.070 --> 00:00:10.710
Welcome to Apps Script
Crash Course.

00:00:10.710 --> 00:00:13.360
Today, we're going to learn all
about data validation in

00:00:13.360 --> 00:00:14.360
Apps Script.

00:00:14.360 --> 00:00:18.020
Now, data validation, as a lot
of you know, is our top

00:00:18.020 --> 00:00:20.290
requested feature or has
been for a while.

00:00:20.290 --> 00:00:22.770
We recently implemented
this, in August.

00:00:22.770 --> 00:00:27.790
And there's a blog post
announcing the functionality

00:00:27.790 --> 00:00:30.355
on our blog,
googleappsdeveloper.blogspot.com

00:00:30.355 --> 00:00:31.650
You'll want to check that out.

00:00:31.650 --> 00:00:34.460
What we'll do in this crash
course is run through the

00:00:34.460 --> 00:00:37.250
basics of what data validation
is and how I can do it,

00:00:37.250 --> 00:00:40.990
programmatically, just to
get you up and running.

00:00:40.990 --> 00:00:45.180
So what I have here, if I can
switch the example here--

00:00:45.180 --> 00:00:47.290
so we have just a
new spreadsheet.

00:00:47.290 --> 00:00:50.100
All I did was rename it.

00:00:50.100 --> 00:00:51.690
What is data validation?

00:00:51.690 --> 00:00:58.320
So data validation is the act of
putting rules to a cell so

00:00:58.320 --> 00:01:00.060
that you can restrict
the contents of it.

00:01:00.060 --> 00:01:03.290
So in a regular spreadsheet, you
can type whatever you want

00:01:03.290 --> 00:01:06.850
in any of the cells, and
it accepts the input.

00:01:06.850 --> 00:01:10.840
But let's say I want to restrict
what's in B1, here.

00:01:10.840 --> 00:01:17.160
I can go to data validation in
the UI, and we can specify a

00:01:17.160 --> 00:01:19.410
criteria for this range, here.

00:01:19.410 --> 00:01:22.360
So we can say that we want
to have a list of items.

00:01:22.360 --> 00:01:26.240
Let's just do cat, hat, and
bat as the allowed items.

00:01:26.240 --> 00:01:28.700
And on invalid data, we'll
show a warning.

00:01:28.700 --> 00:01:30.213
We're not going to reject input,
because we don't want

00:01:30.213 --> 00:01:31.310
to be that mean.

00:01:31.310 --> 00:01:33.800
And let's just go ahead and
save that validation.

00:01:33.800 --> 00:01:35.600
Now what you'll see here
is these regular

00:01:35.600 --> 00:01:37.050
cells are just blank.

00:01:37.050 --> 00:01:39.920
But this validation cell has a
drop down that shows you the

00:01:39.920 --> 00:01:41.750
different allowed
inputs for that.

00:01:41.750 --> 00:01:45.750
So we can either go press
in and select these.

00:01:45.750 --> 00:01:48.720
Or if it's just a blank cell,
you can type in something, and

00:01:48.720 --> 00:01:49.810
it's selected, as well.

00:01:49.810 --> 00:01:52.130
Now just to prove that it works,
let me just type in

00:01:52.130 --> 00:01:53.710
some random nonsense here.

00:01:53.710 --> 00:01:57.370
And then you'll see that there's
a red mark here saying

00:01:57.370 --> 00:02:00.400
that the cell contents
are invalid.

00:02:00.400 --> 00:02:03.310
Now let me reset all of this,
here, and we'll run through a

00:02:03.310 --> 00:02:05.135
more useful example.

00:02:05.135 --> 00:02:06.020
Let's see.

00:02:06.020 --> 00:02:07.630
Now, in order to get rid of data
validation rules in the

00:02:07.630 --> 00:02:11.290
UI, you have to go back to data
validation and remove

00:02:11.290 --> 00:02:12.770
validation.

00:02:12.770 --> 00:02:13.710
So now we're back.

00:02:13.710 --> 00:02:15.460
This is just a normal
spreadsheet.

00:02:15.460 --> 00:02:17.860
And what we're going to do is
programmatically create the

00:02:17.860 --> 00:02:21.280
same thing in a slightly
more useful example.

00:02:21.280 --> 00:02:23.430
So let's say you're inviting
some people to come to your

00:02:23.430 --> 00:02:29.670
house for a party, and you want
an easy way to find out

00:02:29.670 --> 00:02:31.320
what someone's response is.

00:02:31.320 --> 00:02:34.440
Now this is in a world where
Google Calendar doesn't exist,

00:02:34.440 --> 00:02:36.760
and there's no other mechanisms
in order to do this

00:02:36.760 --> 00:02:38.490
more efficiently.

00:02:38.490 --> 00:02:40.830
So we're going to use a basic
spreadsheet for this.

00:02:40.830 --> 00:02:43.350
So now, we'll just set up
quickly two columns here.

00:02:43.350 --> 00:02:47.200
One will be Name, and one
will be Response.

00:02:47.200 --> 00:02:49.790
Let me just bold that.

00:02:49.790 --> 00:02:51.880
Now we can have our
invite list here.

00:02:51.880 --> 00:02:52.780
Let's invite Bob.

00:02:52.780 --> 00:02:54.290
Let's invite Tim.

00:02:54.290 --> 00:02:58.810
Let's invite Jane and
then Joe, also.

00:02:58.810 --> 00:03:01.250
Now what we want is, we don't
want to send this list to

00:03:01.250 --> 00:03:05.340
them, and then they can say,
"fo sho" or anything.

00:03:05.340 --> 00:03:09.780
We want to restrict it so that
maybe we can send emails

00:03:09.780 --> 00:03:13.120
automatically and take actions
programmatically based on what

00:03:13.120 --> 00:03:13.910
they wrote.

00:03:13.910 --> 00:03:16.440
So what we want to do is ideally
provide them choices

00:03:16.440 --> 00:03:20.300
saying, yes, no, or maybe
in this Response column.

00:03:20.300 --> 00:03:23.230
In order to do that, we
can use Apps Script.

00:03:23.230 --> 00:03:26.380
Go to Tools Script Editor
to pull that up.

00:03:26.380 --> 00:03:30.080
We need to get a reference
to this range.

00:03:30.080 --> 00:03:33.030
And then we need to create a
validation object, and then we

00:03:33.030 --> 00:03:35.070
join those two together in
order to apply it on the

00:03:35.070 --> 00:03:35.870
spreadsheet.

00:03:35.870 --> 00:03:37.690
I'll show you how that works.

00:03:37.690 --> 00:03:40.400
So let's get that range
first, not range.

00:03:40.400 --> 00:03:41.760
[LAUGHTER]

00:03:41.760 --> 00:03:43.010
Equals.

00:03:46.800 --> 00:03:48.880
Now SpreadsheetApp.getactive
gets you the active

00:03:48.880 --> 00:03:49.500
spreadsheet.

00:03:49.500 --> 00:03:54.550
And then you can further say get
range and give it the A1

00:03:54.550 --> 00:03:57.730
notation of B2 to B.

00:03:57.730 --> 00:03:59.810
Now, some of you are familiar
with this, but I'll just

00:03:59.810 --> 00:04:01.280
explain for everyone else.

00:04:01.280 --> 00:04:05.510
Now when I just say B here, it
means that start B2 and then

00:04:05.510 --> 00:04:08.990
go all the way down in that
column and apply to every

00:04:08.990 --> 00:04:10.530
single cell there.

00:04:10.530 --> 00:04:12.540
So now that I have the range,
let's create the validation

00:04:12.540 --> 00:04:18.810
object

00:04:18.810 --> 00:04:22.360
Now, data validation, the object
itself, lives within

00:04:22.360 --> 00:04:24.900
the spreadsheet app service.

00:04:24.900 --> 00:04:32.960
So we'll start by going into
Spreadsheet App and then New

00:04:32.960 --> 00:04:34.060
Data Validation.

00:04:34.060 --> 00:04:35.530
As you can see, this
returns a data

00:04:35.530 --> 00:04:37.200
validation builder object.

00:04:37.200 --> 00:04:39.530
And a builder object--

00:04:39.530 --> 00:04:41.670
it's a common paradigm that we
use in other places in Apps

00:04:41.670 --> 00:04:42.530
Script, as well.

00:04:42.530 --> 00:04:46.750
What it allows you to do is
apply operations over and over

00:04:46.750 --> 00:04:49.420
to this object when you're
constructing it.

00:04:49.420 --> 00:04:52.000
So you're the builder,
and you're making it.

00:04:52.000 --> 00:04:54.700
And so one thing we want to do
with data validation is we

00:04:54.700 --> 00:04:56.940
want to give it the type of data
validation, and we want

00:04:56.940 --> 00:05:00.970
to give it the validation list
or the validation source.

00:05:00.970 --> 00:05:03.810
In this example, the type of
data validation would be we

00:05:03.810 --> 00:05:06.090
want to provide it a list
of immediate values.

00:05:06.090 --> 00:05:10.020
And we want it to tell the user
if it's valid or not.

00:05:10.020 --> 00:05:12.860
So let's go select
the type first.

00:05:12.860 --> 00:05:16.620
Now we can say a dot and then
use autocomplete to see all

00:05:16.620 --> 00:05:17.510
the validation rules.

00:05:17.510 --> 00:05:20.670
And we'll say, Require
Value in List.

00:05:20.670 --> 00:05:22.410
And we'll select this overloaded
method with two

00:05:22.410 --> 00:05:24.680
parameters that I'll explain
in a second.

00:05:24.680 --> 00:05:28.020
The first one is an array, and
you can provide, in B,

00:05:28.020 --> 00:05:29.180
acceptable values.

00:05:29.180 --> 00:05:37.150
Here, there will be yes, no,
if I can type, and maybe.

00:05:37.150 --> 00:05:40.970
Now what we want in the second
column is we control if we're

00:05:40.970 --> 00:05:44.260
going to show the drop down
that these are valid

00:05:44.260 --> 00:05:45.250
[? assertions ?] or not.

00:05:45.250 --> 00:05:47.780
So now, let's just
make that true.

00:05:47.780 --> 00:05:48.970
So now, what do we do here?

00:05:48.970 --> 00:05:51.860
This method shows that we want
a list-based validation.

00:05:51.860 --> 00:05:56.550
We provided it the list, and we
set the dropdown to true.

00:05:56.550 --> 00:06:00.300
Now, what we need to do is
finally build the validation

00:06:00.300 --> 00:06:04.400
object, and we do that
by doing build.

00:06:04.400 --> 00:06:06.220
Now that we have the range and
then we have the validation,

00:06:06.220 --> 00:06:08.030
we can clump them together.

00:06:08.030 --> 00:06:12.170
Now, in the range object, you'll
find a method called

00:06:12.170 --> 00:06:15.150
Set Data Validation.

00:06:15.150 --> 00:06:18.450
Now, you can provide it the
validation that we just

00:06:18.450 --> 00:06:28.020
created, Save, and Run.

00:06:28.020 --> 00:06:34.660
You'll notice that it's going
to ask for authorization.

00:06:34.660 --> 00:06:36.340
This is because you need to
access the spreadsheet in

00:06:36.340 --> 00:06:38.220
order to make changes to
the validation rules.

00:06:38.220 --> 00:06:41.650
So now let's just go ahead and
continue and accept the

00:06:41.650 --> 00:06:43.380
authorization in the nice,
new authorization panel.

00:06:46.840 --> 00:06:50.080
Now when you go back to the
spreadsheet, these cells were

00:06:50.080 --> 00:06:52.720
blank before, and now they have
this little drop down in

00:06:52.720 --> 00:06:55.170
them with the list of
yes, no, and maybe.

00:06:55.170 --> 00:06:56.760
So when you share the
spreadsheet out through the

00:06:56.760 --> 00:07:01.720
power of Google Docs
collaboration, your invitees

00:07:01.720 --> 00:07:04.480
can say, no, Bob's
not going to go.

00:07:04.480 --> 00:07:07.300
Or Tim's going to say,
yes, I'll go, or Jane

00:07:07.300 --> 00:07:09.950
can type in, maybe.

00:07:09.950 --> 00:07:13.250
And we'll wait for Joe to
actually fill out this form.

00:07:13.250 --> 00:07:17.660
So this is the way that Joe can
later go in and say, cat,

00:07:17.660 --> 00:07:22.160
here, and screw up your
data analysis portion.

00:07:22.160 --> 00:07:23.610
Because cat is not valid.

00:07:23.610 --> 00:07:27.520
And it'll have this red
mark next to it.

00:07:27.520 --> 00:07:30.670
So it's a very simple example of
how to do data validation.

00:07:30.670 --> 00:07:33.680
If you take a look at our blog
post announcing this feature,

00:07:33.680 --> 00:07:36.740
we have a more complicated
example that shows you just

00:07:36.740 --> 00:07:39.120
how powerful it is too
programmatically be able to

00:07:39.120 --> 00:07:41.310
change all these validation
rules.

00:07:41.310 --> 00:07:46.080
And let me quickly show you the
power in an example, here.

00:07:46.080 --> 00:07:48.660
So now, I have a copy
of a spreadsheet

00:07:48.660 --> 00:07:49.830
from that blog post.

00:07:49.830 --> 00:07:52.870
And this spreadsheet applies
a validation rule

00:07:52.870 --> 00:07:54.260
to all of the cells.

00:07:54.260 --> 00:07:56.690
And right now, these
cells, in this row,

00:07:56.690 --> 00:07:58.580
are flagged as invalid.

00:07:58.580 --> 00:08:01.090
And that's because these
dates are in 2014.

00:08:01.090 --> 00:08:03.780
What these validation
rules are saying--

00:08:03.780 --> 00:08:05.630
the validation rules are
enforcing that the

00:08:05.630 --> 00:08:07.190
dates are in 2013.

00:08:07.190 --> 00:08:11.520
So now, with the data validation
object and the

00:08:11.520 --> 00:08:15.585
various methods within, you can
parse this entire document

00:08:15.585 --> 00:08:18.380
to get all of the old validation
rules, update them

00:08:18.380 --> 00:08:21.760
all so that instead of 2013,
they're looking for 2014, and

00:08:21.760 --> 00:08:24.930
then apply them again to the
spreadsheet, all in a very

00:08:24.930 --> 00:08:26.040
short number of steps.

00:08:26.040 --> 00:08:27.540
Now, let's see.

00:08:27.540 --> 00:08:30.370
I can go to this menu and
say, change the 2013

00:08:30.370 --> 00:08:33.480
validations to 2014.

00:08:33.480 --> 00:08:35.309
And there you go.

00:08:35.309 --> 00:08:38.760
Instantly, all of the 2014 dates
are now valid, and the

00:08:38.760 --> 00:08:40.559
2013 dates are invalid.

00:08:40.559 --> 00:08:43.080
Now, if you want to find out how
to do this, there's some

00:08:43.080 --> 00:08:45.370
great sample code attached
to this document.

00:08:45.370 --> 00:08:49.120
And once again, you can find
this by going to our blog post

00:08:49.120 --> 00:08:50.710
on the Apps Developer blog.

00:08:50.710 --> 00:08:55.540
We'll put up a link for that
so you can get into that.

00:08:55.540 --> 00:08:57.280
I want to thank you for
joining me on this.

00:08:57.280 --> 00:09:00.180
I hope you found it informative,
and I can't wait

00:09:00.180 --> 00:09:02.220
to see what you guys
come up with.

00:09:02.220 --> 00:09:02.630
Thanks.

00:09:02.630 --> 00:09:03.670
My name is Kalyan Reddy.

00:09:03.670 --> 00:09:04.920
Goodbye.

