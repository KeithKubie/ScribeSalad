WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:03.520
While general purpose computing
is all the rage these days,

00:00:03.520 --> 00:00:06.070
let's not forget about a
massive area of computing--

00:00:06.070 --> 00:00:08.440
single purpose machines.

00:00:08.440 --> 00:00:11.450
From point of sale devices to
vending machines and reception

00:00:11.450 --> 00:00:13.202
kiosks to in-flight
entertainment,

00:00:13.202 --> 00:00:15.410
computers that are produced
to serve a single purpose

00:00:15.410 --> 00:00:17.090
are everywhere.

00:00:17.090 --> 00:00:20.220
Often, these deployments
require a highly customized OS,

00:00:20.220 --> 00:00:22.590
but now Android packs enough
of a punch for bespoke app

00:00:22.590 --> 00:00:25.790
developers and enough control
for device administrators

00:00:25.790 --> 00:00:28.237
to meet all these
needs out of the box.

00:00:28.237 --> 00:00:29.820
I'm Rich Hyndman,
and I'm going to let

00:00:29.820 --> 00:00:31.770
you know how to cater
for single-use devices

00:00:31.770 --> 00:00:33.630
when writing your
apps and how they

00:00:33.630 --> 00:00:37.550
can be easily provisioned and
managed using Android for Work.

00:00:37.550 --> 00:00:39.670
With a new focus on
corporate-owned, single-use

00:00:39.670 --> 00:00:41.940
devices, one or more
apps gets installed

00:00:41.940 --> 00:00:44.740
when the device is initialized,
and it can be locked down

00:00:44.740 --> 00:00:45.940
into Single App Mode.

00:00:45.940 --> 00:00:48.231
That means things like the
home button and touch switch

00:00:48.231 --> 00:00:48.827
are gone.

00:00:48.827 --> 00:00:50.910
There are also enhanced
controls around the status

00:00:50.910 --> 00:00:53.690
bar, notifications, incoming
calls, and quick settings

00:00:53.690 --> 00:00:54.529
menus.

00:00:54.529 --> 00:00:56.820
And of course, at reboot, it
will launch you right back

00:00:56.820 --> 00:00:59.470
into your chosen application.

00:00:59.470 --> 00:01:02.100
Because updates on these
devices can be problematic,

00:01:02.100 --> 00:01:04.390
we've added APIs to give
IT admins the ability

00:01:04.390 --> 00:01:06.360
to accept them remotely.

00:01:06.360 --> 00:01:08.330
Admins can set an OTA
policy for a device

00:01:08.330 --> 00:01:10.270
and use these APIs
to control them.

00:01:10.270 --> 00:01:13.050
Remotely accepting OTAs,
scheduling maintenance windows,

00:01:13.050 --> 00:01:15.200
or even postponing them
to give them a chance

00:01:15.200 --> 00:01:18.302
to verify app compatibility.

00:01:18.302 --> 00:01:19.760
Like all Android
for Work features,

00:01:19.760 --> 00:01:21.900
COSU was designed to be
supported and managed

00:01:21.900 --> 00:01:24.360
by your enterprise
mobility management vendor.

00:01:24.360 --> 00:01:26.280
Once the supporting
EMM is configured,

00:01:26.280 --> 00:01:28.960
provisioning your COSU device
is as simple as an NFC bump,

00:01:28.960 --> 00:01:30.960
and you've got your own
interactive building map

00:01:30.960 --> 00:01:33.274
or hotel check-in session.

00:01:33.274 --> 00:01:34.690
As a developer,
there are a couple

00:01:34.690 --> 00:01:36.148
of things to consider
when building

00:01:36.148 --> 00:01:37.780
for single-use machines.

00:01:37.780 --> 00:01:40.160
Firstly, the power
state of the device.

00:01:40.160 --> 00:01:42.920
Many applications of COSU
devices will be plugged in

00:01:42.920 --> 00:01:45.630
and require the screen to
be kept on the whole time.

00:01:45.630 --> 00:01:47.950
There is a device policy
for it, but it's also worth

00:01:47.950 --> 00:01:49.440
ensuring it's in
your application,

00:01:49.440 --> 00:01:51.520
or at least make
it configurable,

00:01:51.520 --> 00:01:55.030
as you might end up in
a multi-app COSU system.

00:01:55.030 --> 00:01:57.620
The best way to do this is use
the Window Manager flag Keep

00:01:57.620 --> 00:01:59.355
Screen On in your activity.

00:01:59.355 --> 00:02:01.230
There's also the Keep
Screen On parameter you

00:02:01.230 --> 00:02:03.950
can use in your XML layouts.

00:02:03.950 --> 00:02:05.790
Your app should also
be self-contained.

00:02:05.790 --> 00:02:08.581
Avoid things like the send
intent for single use apps.

00:02:08.581 --> 00:02:10.580
Your app should work on
its own without the need

00:02:10.580 --> 00:02:12.380
for interactions with
other applications,

00:02:12.380 --> 00:02:14.770
as you want to be in full
control of the device

00:02:14.770 --> 00:02:16.437
the whole time.

00:02:16.437 --> 00:02:18.270
Probably goes without
saying, but it applies

00:02:18.270 --> 00:02:19.750
to in-app purchases as well.

00:02:19.750 --> 00:02:23.090
These devices won't have
access to the Play Store.

00:02:23.090 --> 00:02:25.310
Finally, we also
recommend keeping your app

00:02:25.310 --> 00:02:27.756
within one task.

00:02:27.756 --> 00:02:29.130
Support for COSU
deployments will

00:02:29.130 --> 00:02:32.180
mean you can now target a
huge range of new use cases

00:02:32.180 --> 00:02:34.700
with your applications, and
we're really looking forward

00:02:34.700 --> 00:02:36.590
to seeing the results.

00:02:36.590 --> 00:02:39.030
When considering the
reach of Android for Work,

00:02:39.030 --> 00:02:40.840
Enterprise Mobility
Management companies

00:02:40.840 --> 00:02:43.560
make up a critical part
of the availability.

00:02:43.560 --> 00:02:45.790
They integrate Android for
Work into their offerings

00:02:45.790 --> 00:02:49.620
so that IT admins can manage the
devices in their organizations.

00:02:49.620 --> 00:02:51.960
They install your apps
from Google Play for Work.

00:02:51.960 --> 00:02:53.470
They apply security
policies, set up

00:02:53.470 --> 00:02:56.350
corporate Wi-Fi networks,
application restrictions,

00:02:56.350 --> 00:02:58.470
and they can even
set up single sign-on

00:02:58.470 --> 00:03:01.090
by remotely installing
certificates.

00:03:01.090 --> 00:03:03.780
We're constantly updating
the APIs available to EMMs

00:03:03.780 --> 00:03:06.940
to give them more flexibility
in their offerings.

00:03:06.940 --> 00:03:09.140
For more information on
integrating Android for Work

00:03:09.140 --> 00:03:11.030
into your enterprise
management product,

00:03:11.030 --> 00:03:13.030
you can contact us through
the Partnerships form

00:03:13.030 --> 00:03:16.660
at google.com/work/android.

00:03:16.660 --> 00:03:18.790
To simplify the testing
of your enterprise apps,

00:03:18.790 --> 00:03:21.180
we've released and open-sourced
a new device policy

00:03:21.180 --> 00:03:23.816
client called Test-DPC.

00:03:23.816 --> 00:03:25.690
When developing
functionality for enterprise,

00:03:25.690 --> 00:03:27.620
you could use
Test-DPC to simulate

00:03:27.620 --> 00:03:30.630
the majority of features
of Android for Work.

00:03:30.630 --> 00:03:34.020
The applets you set up are work
profile, apply device policies,

00:03:34.020 --> 00:03:36.220
and set app and
intent restrictions.

00:03:36.220 --> 00:03:38.695
You can even set
up COSU devices.

00:03:38.695 --> 00:03:40.320
You can find the app
in our Github repo

00:03:40.320 --> 00:03:43.305
at github.com/googlesamples.

00:03:43.305 --> 00:03:45.430
It's ready for you to
incorporate into your testing

00:03:45.430 --> 00:03:46.670
workflow.

00:03:46.670 --> 00:03:48.410
These new updates
could revolutionize

00:03:48.410 --> 00:03:51.580
single-use devices whilst
keeping IT admins happy.

00:03:51.580 --> 00:03:53.770
For more developer
information, you can check out

00:03:53.770 --> 00:03:57.470
developer.android.com/work,
whilst I go look up so more

00:03:57.470 --> 00:03:58.300
acronyms.

00:03:58.300 --> 00:04:02.370
So for now, it's TTFN for
BYOD whilst your apps go COSU.

00:04:02.370 --> 00:04:05.720
[MUSIC PLAYING]

