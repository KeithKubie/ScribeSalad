WEBVTT
Kind: captions
Language: en

00:00:00.470 --> 00:00:05.950
In this lesson we'll be exploring consistent updates in SDN's.

00:00:05.950 --> 00:00:11.000
As a reminder from last lesson, we looked at how to update switch flow table

00:00:11.000 --> 00:00:16.460
entries using open flow control commands from the control. The

00:00:16.460 --> 00:00:21.530
open flow API however does not provide specific guarantees

00:00:21.530 --> 00:00:26.120
about the Level of consistency that

00:00:26.120 --> 00:00:29.820
packets along an end-to-end path can experience. So

00:00:29.820 --> 00:00:34.620
for example, updates to multiple switches along a

00:00:34.620 --> 00:00:36.430
path in a network that occur at different

00:00:36.430 --> 00:00:39.360
times may result in problems such as forwarding

00:00:39.360 --> 00:00:42.580
loops. Additionally, if updates to the switches along

00:00:42.580 --> 00:00:44.850
an end-to-end path occur in the middle of

00:00:44.850 --> 00:00:47.680
a flow, Packets from the same flow may

00:00:47.680 --> 00:00:52.090
be subjected to different network states. These two problems

00:00:52.090 --> 00:00:55.310
are known as consistency problems. The first problem

00:00:55.310 --> 00:00:57.900
is known as a packet level consistency problem and

00:00:57.900 --> 00:00:59.770
the second problem is known as a flow level

00:00:59.770 --> 00:01:03.760
consistency problem. In this lesson, we will explore these

00:01:03.760 --> 00:01:05.980
problems in more detail and look at various

00:01:05.980 --> 00:01:10.530
approaches to guaranteeing consistent updates in SDNs. To think

00:01:10.530 --> 00:01:13.220
about consistency properly, we first need a notion of

00:01:13.220 --> 00:01:17.280
a high level programming model that sits on top

00:01:17.280 --> 00:01:21.070
of what we would call the southbound interface.

00:01:21.070 --> 00:01:23.750
We'll talk about how to write applications, that

00:01:23.750 --> 00:01:26.180
use the controller interface that we learned about

00:01:26.180 --> 00:01:28.800
in the last lesson. That can rely on

00:01:28.800 --> 00:01:32.680
a better notion of consistency, than existing controller

00:01:32.680 --> 00:01:35.380
platforms currently provide. Let's first think about how

00:01:35.380 --> 00:01:38.140
we want to program these applications. And what

00:01:38.140 --> 00:01:42.340
type of abstraction the applications would require from the

00:01:42.340 --> 00:01:43.690
underlying control interface.

