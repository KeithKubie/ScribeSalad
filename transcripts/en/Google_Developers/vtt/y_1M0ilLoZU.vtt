WEBVTT
Kind: captions
Language: en

00:00:03.060 --> 00:00:04.770
MALE SPEAKER: Shanghai
GDG is a very

00:00:04.770 --> 00:00:06.850
interesting developer community.

00:00:06.850 --> 00:00:07.680
FEMALE SPEAKER: I'm
glad somebody

00:00:07.680 --> 00:00:08.910
has asked this question.

00:00:08.910 --> 00:00:10.090
MALE SPEAKER: This is where
the magic happens.

00:00:10.090 --> 00:00:11.400
FEMALE SPEAKER: This is
primarily a question and

00:00:11.400 --> 00:00:11.960
answer show.

00:00:11.960 --> 00:00:14.310
So if any of you out there would
like to ask questions.

00:00:17.840 --> 00:00:19.500
MALE SPEAKER: Shanghai
GDG is a very

00:00:19.500 --> 00:00:21.220
interesting developer community.

00:00:24.148 --> 00:00:26.160
JAN: Welcome to Google Apps
Script Office Hours.

00:00:26.160 --> 00:00:28.250
I'm Jan and this is Eric.

00:00:28.250 --> 00:00:29.470
Just a note before
we get started.

00:00:29.470 --> 00:00:31.920
If you're in the Hangout,
join with us.

00:00:31.920 --> 00:00:34.970
In just a few minutes we'll
actually bring you in.

00:00:34.970 --> 00:00:36.210
We're trying out something
new today.

00:00:36.210 --> 00:00:37.920
So if you're in the Hangout
right now, you probably won't

00:00:37.920 --> 00:00:39.560
be able to actually participate

00:00:39.560 --> 00:00:41.290
for a few more minutes.

00:00:41.290 --> 00:00:43.400
So what we're going to cover
today, we answered a few

00:00:43.400 --> 00:00:45.330
questions on our
moderator page.

00:00:45.330 --> 00:00:47.860
We can take some live questions
from those of you in

00:00:47.860 --> 00:00:50.595
the Hangouts, and then we're
also going to do some quick

00:00:50.595 --> 00:00:54.040
little reviews of some of the
web apps created with Apps

00:00:54.040 --> 00:00:56.770
Script that we've come across
in the Chrome Web Store.

00:00:56.770 --> 00:00:59.750
OK, so Eric, do you want to get
started with the questions

00:00:59.750 --> 00:01:00.400
that we have in Moderator?

00:01:00.400 --> 00:01:03.280
ERIC: Yeah sure, so Office
Hours, for people who are new,

00:01:03.280 --> 00:01:06.230
this is a time, really, for us
to just talk about Apps Script

00:01:06.230 --> 00:01:07.400
as well as answer
your questions.

00:01:07.400 --> 00:01:09.240
So if you have questions during
the week that aren't

00:01:09.240 --> 00:01:11.370
getting addressed, feel free
to bring them up right now.

00:01:11.370 --> 00:01:13.410
And the Moderator here is for
people who can't make it live

00:01:13.410 --> 00:01:15.275
or just don't feel like
asking on the air.

00:01:15.275 --> 00:01:17.750
So to get started, one of the
ones we have at the top is,

00:01:17.750 --> 00:01:20.610
"Is there an Apps Script to
receive email notifications

00:01:20.610 --> 00:01:25.250
whenever a collaborator edits
a text document?" That's

00:01:25.250 --> 00:01:27.490
definitely one of the things
people use Apps Script for,

00:01:27.490 --> 00:01:30.290
doing automatic sending of
emails and interacting with

00:01:30.290 --> 00:01:30.990
their Google Drive.

00:01:30.990 --> 00:01:33.120
So I think this is right
in the sweet spot

00:01:33.120 --> 00:01:34.390
of Google Apps Script.

00:01:34.390 --> 00:01:35.770
I'm not sure I've seen
a script that does

00:01:35.770 --> 00:01:37.210
this use case exactly.

00:01:37.210 --> 00:01:38.120
Have you run across one?

00:01:38.120 --> 00:01:40.690
JAN: I haven't seen anything for
a text document-- if, by

00:01:40.690 --> 00:01:45.220
that, you mean plain text as
opposed to a Google document.

00:01:45.220 --> 00:01:49.400
I'm not sure that we have, for
example, an event today, or a

00:01:49.400 --> 00:01:53.250
way to determine has somebody
edited a text document.

00:01:53.250 --> 00:01:55.150
It's something we've have a lot
of future requests for.

00:01:55.150 --> 00:01:57.670
ERIC: I think the best guess of
what you could probably do

00:01:57.670 --> 00:02:01.530
is, using triggers, set up a
trigger that runs at a certain

00:02:01.530 --> 00:02:05.380
interval, let's say every five
minutes, and checks the last

00:02:05.380 --> 00:02:07.480
edited date, the last updated
date of something in your

00:02:07.480 --> 00:02:10.900
drive Using the docs
list service.

00:02:10.900 --> 00:02:13.170
If you did that, it's not, like,
the instant they made

00:02:13.170 --> 00:02:15.730
the edit, but at least within
five minutes or so you could

00:02:15.730 --> 00:02:17.910
probably determine has
it updated since

00:02:17.910 --> 00:02:18.700
the last time I checked?

00:02:18.700 --> 00:02:19.060
JAN: That's a good point.

00:02:19.060 --> 00:02:21.290
ERIC: If you put that together,
I don't think it

00:02:21.290 --> 00:02:23.420
would be that much work
to put that together.

00:02:23.420 --> 00:02:25.520
And it would make definitely
a good app.

00:02:25.520 --> 00:02:27.350
JAN: What I'm not sure is
whether or not you'd be able

00:02:27.350 --> 00:02:30.930
to pull who the collaborator was
that made the last edit.

00:02:30.930 --> 00:02:33.700
I'm not sure if that's exposed
in the API or not.

00:02:33.700 --> 00:02:35.230
But it's worth looking into.

00:02:35.230 --> 00:02:38.480
And if you don't need that,
then this technique could

00:02:38.480 --> 00:02:38.930
probably work for you.

00:02:38.930 --> 00:02:39.580
ERIC: You just need to know
if it changed at all.

00:02:39.580 --> 00:02:39.990
JAN: Right.

00:02:39.990 --> 00:02:40.640
ERIC: That could work.

00:02:40.640 --> 00:02:42.950
JAN: This could work.

00:02:42.950 --> 00:02:45.030
ERIC: The next one we have here
is, "I'm trying to use

00:02:45.030 --> 00:02:47.180
Apps Script to archive
selected Gmails.

00:02:47.180 --> 00:02:49.730
My company doesn't want to
enable IMAP, and so Apps

00:02:49.730 --> 00:02:51.730
Script seems like it's a
reasonable alternative.

00:02:51.730 --> 00:02:54.420
Can I invoke Apps Script from
a contextual gadget.

00:02:54.420 --> 00:02:58.650
If not, is a web service using
Apps Script possible?" So,

00:02:58.650 --> 00:03:00.900
have you seen people use
contextual gadgets with Apps

00:03:00.900 --> 00:03:01.310
Script before, Jan?

00:03:01.310 --> 00:03:02.990
JAN: I don't know that
that's supported.

00:03:02.990 --> 00:03:04.530
So I don't think so.

00:03:04.530 --> 00:03:07.010
I don't think that the Gmail
contextual gadgets can

00:03:07.010 --> 00:03:08.380
currently work with
Apps Script.

00:03:08.380 --> 00:03:10.650
ERIC: I looked into
it briefly.

00:03:10.650 --> 00:03:13.070
And I think one of the
limitations with Apps Script

00:03:13.070 --> 00:03:16.550
today is you can't iframe it
within some other context.

00:03:16.550 --> 00:03:19.600
So you cannot create an Apps
Script app and embed it into a

00:03:19.600 --> 00:03:21.850
web page or a contextual
gadget.

00:03:21.850 --> 00:03:24.400
So I think that's going to limit
a lot of the use cases

00:03:24.400 --> 00:03:26.880
for contextual gadgets today.

00:03:26.880 --> 00:03:31.750
I think theoretically using the
content service to return

00:03:31.750 --> 00:03:35.760
JavaScript, JSON format, that
then some other JavaScript

00:03:35.760 --> 00:03:36.140
could parse.

00:03:36.140 --> 00:03:38.830
This is like at the fringes of
what's possible, but I don't

00:03:38.830 --> 00:03:39.950
know if it's been explored,
really.

00:03:39.950 --> 00:03:41.660
JAN: Yeah, that would be that
would be the best place to

00:03:41.660 --> 00:03:43.150
look, I think, would be
the content service.

00:03:43.150 --> 00:03:45.360
If you're not familiar with
content service, it's a way of

00:03:45.360 --> 00:03:49.230
serving up content that is
some sort of, basically,

00:03:49.230 --> 00:03:50.390
text-based content.

00:03:50.390 --> 00:03:53.310
So it could be XML, it could be
RSS, it could just be text,

00:03:53.310 --> 00:03:55.460
it could be JSON, any of
these types of things.

00:03:55.460 --> 00:03:59.940
So you can effectively write
your own web service, which is

00:03:59.940 --> 00:04:01.750
possibly what you're
looking for here.

00:04:01.750 --> 00:04:03.110
ERIC: I think it could
be some things.

00:04:03.110 --> 00:04:05.670
It uses redirects, which causes
problems sometimes--

00:04:05.670 --> 00:04:06.800
the content service.

00:04:06.800 --> 00:04:09.515
Also around authentication, and
making sure you're logged

00:04:09.515 --> 00:04:10.820
in when you're making
that request.

00:04:10.820 --> 00:04:12.600
I think there are some
challenges there, but it's

00:04:12.600 --> 00:04:13.250
worth exploring.

00:04:13.250 --> 00:04:13.680
JAN: Yeah.

00:04:13.680 --> 00:04:16.019
So, if you're the person who
entered this question and you

00:04:16.019 --> 00:04:19.190
try this out and you run into
any trouble, or you have

00:04:19.190 --> 00:04:21.230
things that you wish the content
service could do

00:04:21.230 --> 00:04:23.840
differently that would make
solving this problem easier

00:04:23.840 --> 00:04:26.130
for you, let us now on
the issue tracker.

00:04:26.130 --> 00:04:28.550
Or if you're just having
trouble, let us know on Stack

00:04:28.550 --> 00:04:29.790
Overflow and we'll
take a look.

00:04:29.790 --> 00:04:32.180
ERIC: That's a great
suggestion.

00:04:32.180 --> 00:04:34.460
The next one we have here is
related to ScriptDB, which is

00:04:34.460 --> 00:04:37.750
the built-in object store
in Google Apps Script.

00:04:37.750 --> 00:04:39.980
They want to know how
unique are the IDs.

00:04:39.980 --> 00:04:41.470
So they already asked this
question on Stack Overflow--

00:04:41.470 --> 00:04:43.400
great place to ask questions--

00:04:43.400 --> 00:04:46.980
and got some guesses from the
community but haven't exactly

00:04:46.980 --> 00:04:48.080
got a firm answer.

00:04:48.080 --> 00:04:51.400
So uniqueness, I think it's
definitely unique within a

00:04:51.400 --> 00:04:53.740
current script or within a
script database, right?

00:04:53.740 --> 00:04:56.350
JAN: And we believe it should
be unique, at least the way

00:04:56.350 --> 00:04:57.610
that Apps Script works
today, it should be

00:04:57.610 --> 00:04:59.350
unique globally as well.

00:04:59.350 --> 00:05:04.320
But I can't go so far as to say
I can guarantee that will

00:05:04.320 --> 00:05:05.530
always be the case.

00:05:05.530 --> 00:05:09.820
So I think you are safe to
assume that it's unique across

00:05:09.820 --> 00:05:10.730
that script.

00:05:10.730 --> 00:05:14.710
ERIC: Yeah and I think it may
always be a good idea to just

00:05:14.710 --> 00:05:16.860
create your own identify
within your object.

00:05:16.860 --> 00:05:20.130
So you can use the ScriptDB ID
to get access to that record,

00:05:20.130 --> 00:05:22.850
but if this represents a record
in some other system,

00:05:22.850 --> 00:05:25.810
or there's some other way of
creating an ID, use your own

00:05:25.810 --> 00:05:27.700
ID in addition to ScriptDB ID.

00:05:27.700 --> 00:05:30.590
That gives you flexibility in
the future to, let's say,

00:05:30.590 --> 00:05:32.780
clear out your ScriptDB and
repopulate it again.

00:05:32.780 --> 00:05:35.320
And if you repopulate it with
your custom IDs that you're

00:05:35.320 --> 00:05:37.540
maintaining, then you don't
need to worry about things

00:05:37.540 --> 00:05:38.030
getting wiped out.

00:05:38.030 --> 00:05:41.050
So you may not want to rely
on the ScriptDB ID for

00:05:41.050 --> 00:05:43.165
everything, although it can
be useful at times.

00:05:45.920 --> 00:05:47.850
So another question we have
here is really to

00:05:47.850 --> 00:05:48.850
Google Cloud Connect.

00:05:48.850 --> 00:05:50.975
I'm not familiar with
this, are you?

00:05:50.975 --> 00:05:51.240
JAN: I'm not either.

00:05:51.240 --> 00:05:56.180
My understanding is that it's a
tool that allows you to sync

00:05:56.180 --> 00:05:58.686
some of your Google services
with files

00:05:58.686 --> 00:06:00.750
in Windows, I believe.

00:06:00.750 --> 00:06:04.650
I haven't used it myself, so I'm
not really able to answer

00:06:04.650 --> 00:06:05.470
this question, right here.

00:06:05.470 --> 00:06:07.850
ERIC: Yeah, so the question
is going into sinking

00:06:07.850 --> 00:06:12.640
spreadsheets to and XLSX
and an import button.

00:06:12.640 --> 00:06:16.310
The one thing I do know is, we
have had people ask, how in an

00:06:16.310 --> 00:06:20.660
Apps Script can I take a file
and convert it into a Google

00:06:20.660 --> 00:06:20.980
spreadsheet.

00:06:20.980 --> 00:06:23.400
Like take an Excel document
and it into a Google

00:06:23.400 --> 00:06:24.370
spreadsheet.

00:06:24.370 --> 00:06:27.170
That's possible in the Drive
UI, but I don't think it's

00:06:27.170 --> 00:06:28.310
possible via Apps Script.

00:06:28.310 --> 00:06:31.810
It'll do the upload, but it'll
stay in its original format.

00:06:31.810 --> 00:06:32.560
It won't convert it.

00:06:32.560 --> 00:06:34.620
The conversion process I
don't think we expose

00:06:34.620 --> 00:06:35.720
in Apps Script today.

00:06:35.720 --> 00:06:37.290
JAN: Yeah, not programatically.

00:06:37.290 --> 00:06:39.830
So if you have questions
specifically about Google

00:06:39.830 --> 00:06:42.390
Cloud Connect, my suggestion
would be to try to find the

00:06:42.390 --> 00:06:44.710
support page or support link
from the Cloud Connect--

00:06:44.710 --> 00:06:46.650
wherever you downloaded
that tool.

00:06:46.650 --> 00:06:49.240
That would probably
be your best bet.

00:06:49.240 --> 00:06:50.970
Off the top of my head, from
the Apps Script side, I'm

00:06:50.970 --> 00:06:52.180
really not sure.

00:06:52.180 --> 00:06:53.580
ERIC: Yeah.

00:06:53.580 --> 00:06:56.240
The next one we have here is
someone using what I'm

00:06:56.240 --> 00:06:58.860
assuming is the UI app
to build a form

00:06:58.860 --> 00:06:59.910
with multiple fields.

00:06:59.910 --> 00:07:01.290
And they want to collect
up all of that

00:07:01.290 --> 00:07:03.350
data into an array.

00:07:03.350 --> 00:07:06.450
And they before were using some
sort of method based upon

00:07:06.450 --> 00:07:08.840
the name attribute, but
now it's not working.

00:07:08.840 --> 00:07:09.580
Is there a fix planned?

00:07:09.580 --> 00:07:10.770
Well, I'm actually
not familiar with

00:07:10.770 --> 00:07:11.590
this specific problem.

00:07:11.590 --> 00:07:13.210
Have you come across
this one yet?

00:07:13.210 --> 00:07:15.090
JAN: Not this one.

00:07:15.090 --> 00:07:17.790
For the person who entered this,
if you can link us-- if

00:07:17.790 --> 00:07:19.770
there's something in the issue
tracker related to this.

00:07:19.770 --> 00:07:21.750
Or if there's not, if you could
raise one, that would be

00:07:21.750 --> 00:07:24.180
really helpful for us to go back
and try to correlate this

00:07:24.180 --> 00:07:26.300
with anything that our engineers
are looking into.

00:07:29.620 --> 00:07:32.960
So there's the name and the ID
attribute you can use in

00:07:32.960 --> 00:07:36.960
different scenarios to identify
the different widgets

00:07:36.960 --> 00:07:39.190
on a form or a panel or
things like that.

00:07:39.190 --> 00:07:41.370
And they each serve a slightly
different purpose.

00:07:41.370 --> 00:07:42.610
If they're not working,
we definitely need

00:07:42.610 --> 00:07:44.430
to know about that.

00:07:44.430 --> 00:07:47.172
And I guess the question is--

00:07:47.172 --> 00:07:50.530
ERIC: How do you collect
multiples at once.

00:07:50.530 --> 00:07:51.835
JAN: I see.

00:07:51.835 --> 00:07:53.890
ERIC: Because I think we've seen
things where, like, check

00:07:53.890 --> 00:07:56.880
boxes, I think, typically, in
HTML, you name them the same

00:07:56.880 --> 00:07:58.840
but then give them
different values.

00:07:58.840 --> 00:08:00.780
And then when you're collecting
up, that name

00:08:00.780 --> 00:08:02.190
contains an array of
all the values.

00:08:02.190 --> 00:08:04.720
That's kind of I feel like
this person is doing .

00:08:04.720 --> 00:08:05.210
JAN: Right.

00:08:05.210 --> 00:08:07.210
I think we need a little more
details about what you're

00:08:07.210 --> 00:08:07.940
trying to accomplish.

00:08:07.940 --> 00:08:09.430
This would be actually
a really good

00:08:09.430 --> 00:08:10.210
one for Stack Overflow.

00:08:10.210 --> 00:08:13.310
If you can give us some of the
code that you're using, and

00:08:13.310 --> 00:08:15.810
what's not working, we can try
to point you towards a

00:08:15.810 --> 00:08:17.220
solution that will work.

00:08:17.220 --> 00:08:20.280
I know that it can be a little
challenging to figure out an

00:08:20.280 --> 00:08:22.900
approach to handle the
dynamically added elements

00:08:22.900 --> 00:08:26.080
when you don't already know all
the names of the elements

00:08:26.080 --> 00:08:29.300
on your form before it's
actually submitted.

00:08:29.300 --> 00:08:31.100
But there are solutions
to that.

00:08:31.100 --> 00:08:33.030
So we can point you towards
those if you give us a little

00:08:33.030 --> 00:08:34.896
more details about what
you're trying to do.

00:08:34.896 --> 00:08:37.080
ERIC: That's a good point.

00:08:37.080 --> 00:08:39.270
This is the last one I think
we have here today is, "I

00:08:39.270 --> 00:08:41.250
would like to know the
direction and plan on

00:08:41.250 --> 00:08:45.570
expanding or growing ScriptDB."
Well, ScriptDB is

00:08:45.570 --> 00:08:47.000
certainly growing usage
on its own.

00:08:47.000 --> 00:08:49.410
I think just the fact that it's
launched and its useful

00:08:49.410 --> 00:08:51.950
as we've seen people
start to go do it.

00:08:51.950 --> 00:08:53.424
I don't know if we have any
other specific plans for

00:08:53.424 --> 00:08:54.580
growing it.

00:08:54.580 --> 00:08:59.560
JAN: So basically we have a
roadmap for the plans of

00:08:59.560 --> 00:09:01.350
things that we want
to add to it.

00:09:01.350 --> 00:09:02.700
It's not really in a form
that we can share

00:09:02.700 --> 00:09:04.830
publicly right now.

00:09:04.830 --> 00:09:07.250
One thing I do want to point
out is if you have specific

00:09:07.250 --> 00:09:10.150
requests, things that you'd
like to see in ScriptDB,

00:09:10.150 --> 00:09:12.080
things that you want--

00:09:12.080 --> 00:09:14.750
basically, if there's certain
areas you would like us to

00:09:14.750 --> 00:09:16.300
focus on, please
do let us know.

00:09:16.300 --> 00:09:18.500
And the issue tracker, the
feature request there, are the

00:09:18.500 --> 00:09:19.530
way to do that.

00:09:19.530 --> 00:09:22.920
That's definitely the best
way to get to the ears

00:09:22.920 --> 00:09:24.770
and eyes of our team.

00:09:24.770 --> 00:09:26.030
So do let us know.

00:09:26.030 --> 00:09:27.040
ERIC: Yeah, for sure.

00:09:27.040 --> 00:09:30.350
I think one of the areas that
I've heard some people already

00:09:30.350 --> 00:09:33.740
say they want even more power
with is querying.

00:09:33.740 --> 00:09:37.150
So to query ScriptDB today uses
a model called query by

00:09:37.150 --> 00:09:40.570
example, where you pass in a
partial object that you want

00:09:40.570 --> 00:09:42.530
your results to match against.

00:09:42.530 --> 00:09:44.040
And I think today, for instance,
you can't do

00:09:44.040 --> 00:09:45.420
substring matching.

00:09:45.420 --> 00:09:48.540
So give me all of the objects
where the field name contains

00:09:48.540 --> 00:09:50.240
the letter A. You can't
do that kind

00:09:50.240 --> 00:09:51.115
of "contains" operation.

00:09:51.115 --> 00:09:54.220
It has to be either equal
to A or not equal to A.

00:09:54.220 --> 00:09:55.640
JAN: Right, so like "like,"
and "contains" and

00:09:55.640 --> 00:09:56.480
those types of things.

00:09:56.480 --> 00:09:58.215
ERIC: Yeah, things that if
you're using SQL, you may be

00:09:58.215 --> 00:09:59.225
familiar with today.

00:09:59.225 --> 00:10:02.680
So I think some of those kind
of gaps have already been

00:10:02.680 --> 00:10:05.000
identified and are ones that
we're already tracking.

00:10:05.000 --> 00:10:07.207
But if you have even more
of those, that'd be

00:10:07.207 --> 00:10:08.200
great to let us know.

00:10:08.200 --> 00:10:10.350
JAN: Yeah.

00:10:10.350 --> 00:10:11.810
ERIC: And it looks like we had
another question or two come

00:10:11.810 --> 00:10:14.830
in since I was chatting.

00:10:14.830 --> 00:10:17.280
So one that we have here is, "Is
the session variable now

00:10:17.280 --> 00:10:21.820
available to access user email
from non-domain accounts?"

00:10:21.820 --> 00:10:26.120
JAN: So without trying this,
just off the top of my head, I

00:10:26.120 --> 00:10:32.620
think that if you have an app
that is published as a web app

00:10:32.620 --> 00:10:36.110
in the way that it is executing
as the user rather

00:10:36.110 --> 00:10:39.500
than as the developer, then I
believe you can get access to

00:10:39.500 --> 00:10:43.550
the username, email
of that user.

00:10:43.550 --> 00:10:44.350
ERIC: That's correct, yeah.

00:10:44.350 --> 00:10:44.680
JAN: That's correct?

00:10:44.680 --> 00:10:44.790
OK.

00:10:44.790 --> 00:10:47.190
ERIC: I think I tried that
recently just to test it out.

00:10:47.190 --> 00:10:49.120
JAN: And the reason that it's
allowed, in that case, the

00:10:49.120 --> 00:10:52.300
user is actually presented with
some information when

00:10:52.300 --> 00:10:55.440
they install that application
that lets them know that this

00:10:55.440 --> 00:10:57.320
is something that's possible
so that they can choose to

00:10:57.320 --> 00:11:00.402
authorize that application
or not.

00:11:00.402 --> 00:11:04.400
So that would be the one case
where for a non-Google Apps

00:11:04.400 --> 00:11:06.670
account, you can access
that information.

00:11:06.670 --> 00:11:08.760
ERIC: Yeah, I think that's
something that people have

00:11:08.760 --> 00:11:09.940
been wanting for a long time.

00:11:09.940 --> 00:11:12.415
You know, who is this user
running my application?

00:11:12.415 --> 00:11:15.460
And now since they are presented
the opportunity to

00:11:15.460 --> 00:11:17.678
say yes or no to this app, it
allows you to get a little bit

00:11:17.678 --> 00:11:17.936
of extra information.

00:11:17.936 --> 00:11:21.340
JAN: Yeah, So this can
be really powerful.

00:11:21.340 --> 00:11:23.060
ERIC: That's great.

00:11:23.060 --> 00:11:23.960
All right, I think that's all
the questions we have in our

00:11:23.960 --> 00:11:25.480
moderator so far.

00:11:25.480 --> 00:11:28.290
What do you want to
jump to next?

00:11:28.290 --> 00:11:31.060
JAN: Let's jump first to-- well,
I want to run through a

00:11:31.060 --> 00:11:33.680
couple of like mini-reviews of
some of the web apps we've

00:11:33.680 --> 00:11:35.920
come across in the Chrome Web
Store that were built using

00:11:35.920 --> 00:11:36.840
Apps Script.

00:11:36.840 --> 00:11:39.360
And then we can use the
remaining time for any live

00:11:39.360 --> 00:11:41.450
questions that we have.

00:11:41.450 --> 00:11:43.820
So what I'm going to do is
probably just run through

00:11:43.820 --> 00:11:44.650
these briefly.

00:11:44.650 --> 00:11:47.890
I'm not going to actually run
the apps themselves in the

00:11:47.890 --> 00:11:48.920
interest of time.

00:11:48.920 --> 00:11:51.210
But I'll just show you four, and
then if you want you can

00:11:51.210 --> 00:11:55.280
check them out yourself
in your own account.

00:11:55.280 --> 00:11:57.210
So [INAUDIBLE], first of all,
this one is one-- if you've

00:11:57.210 --> 00:11:59.510
watched the Google I/O videos,
or if you were at Google I/O

00:11:59.510 --> 00:12:02.350
for our sessions, DriveBy is
kind of a sample application

00:12:02.350 --> 00:12:07.210
that we talked through
in the presentation.

00:12:07.210 --> 00:12:10.930
So what it is is basically a
way to keep an eye on your

00:12:10.930 --> 00:12:11.830
Google Drive.

00:12:11.830 --> 00:12:14.880
So if you have a shared folder,
and you want to know

00:12:14.880 --> 00:12:18.385
whenever a collaborator has
added files that shared

00:12:18.385 --> 00:12:21.800
folder, you can choose to watch
this folder in DriveBy,

00:12:21.800 --> 00:12:25.190
and it will notify you with
email alerts anytime a

00:12:25.190 --> 00:12:27.820
collaborator adds a file
to the folder.

00:12:27.820 --> 00:12:30.305
ERIC: It sounds almost all
similar to that question we

00:12:30.305 --> 00:12:32.370
had about watching for document
changes, except this

00:12:32.370 --> 00:12:34.730
is more like folder additions,
I guess.

00:12:34.730 --> 00:12:38.115
JAN: Right, so instead of edits
to a file, it's files

00:12:38.115 --> 00:12:39.110
added to a folder.

00:12:39.110 --> 00:12:40.860
But it's the same
kind of concept.

00:12:40.860 --> 00:12:43.180
We've also have a lot of
requests to have the source

00:12:43.180 --> 00:12:45.400
code for this [INAUDIBLE]
published.

00:12:45.400 --> 00:12:46.920
Something that we're
working on.

00:12:46.920 --> 00:12:48.840
So stay tuned.

00:12:48.840 --> 00:12:51.340
I think we'll try to add that,
probably, in our tutorial

00:12:51.340 --> 00:12:53.880
section or somewhere like that
so that, if you want to see

00:12:53.880 --> 00:12:57.652
how this app was created,
you can do that.

00:12:57.652 --> 00:12:59.880
JAN: Next one we have
here Gmail Meter.

00:12:59.880 --> 00:13:02.390
So for some reason I'm not
showing the video here.

00:13:02.390 --> 00:13:04.380
There should be a video when you
look at the overview page.

00:13:04.380 --> 00:13:07.150
Gmail Meter has actually been
around for a while it's been

00:13:07.150 --> 00:13:09.880
in the script gallery and it's
kind of gotten a lot of

00:13:09.880 --> 00:13:11.140
attention on its own.

00:13:11.140 --> 00:13:13.976
It's a really fantastic tool
for-- basically, on the first

00:13:13.976 --> 00:13:16.780
day of every month it will
create an email that has all

00:13:16.780 --> 00:13:20.210
sorts of charts and
stats about the

00:13:20.210 --> 00:13:21.230
email that you receive.

00:13:21.230 --> 00:13:24.780
So it's specific to your
own inbox in Gmail.

00:13:24.780 --> 00:13:27.280
And I really enjoy using it.

00:13:27.280 --> 00:13:29.965
Because I like stats and numbers
and I like to take a

00:13:29.965 --> 00:13:32.990
look and see who am I sending
email to, and who is sending

00:13:32.990 --> 00:13:35.100
email to me. and all of
those sorts of things.

00:13:35.100 --> 00:13:37.710
So I find it really useful.

00:13:37.710 --> 00:13:40.020
ERIC: I think it's a great
example of something that was

00:13:40.020 --> 00:13:43.750
in the Google Apps Script
Gallery, which is something

00:13:43.750 --> 00:13:46.890
that's only usable in Google
Spreadsheets, being promoted

00:13:46.890 --> 00:13:50.330
to, really, becoming a full
web app in the web store.

00:13:50.330 --> 00:13:50.960
This is not really a

00:13:50.960 --> 00:13:53.030
spreadsheet-based sort of script.

00:13:53.030 --> 00:13:56.320
It's not there to manipulate
cells, it's actually

00:13:56.320 --> 00:13:57.490
it's own web app.

00:13:57.490 --> 00:13:59.230
And before, it was kind of
limited to that box.

00:13:59.230 --> 00:14:03.350
But since we have now the
standalone scripts and the

00:14:03.350 --> 00:14:06.120
Chrome web store, it's really
allowed scripts like this to

00:14:06.120 --> 00:14:09.726
become their own powerful tool
separate from Google

00:14:09.726 --> 00:14:10.160
Spreadsheets.

00:14:10.160 --> 00:14:13.650
JAN: So as a developer, this
[INAUDIBLE] developer of this

00:14:13.650 --> 00:14:14.830
web app a lot more.

00:14:14.830 --> 00:14:16.840
It's more easily discoverable
because you don't have to be

00:14:16.840 --> 00:14:19.710
within a Google spreadsheet
to find it.

00:14:19.710 --> 00:14:24.250
And it's great for users
too because they can

00:14:24.250 --> 00:14:24.770
all check it out.

00:14:24.770 --> 00:14:25.495
And you can install it.

00:14:25.495 --> 00:14:27.120
When you install these, if
you're not familiar with the

00:14:27.120 --> 00:14:29.930
Chrome Web Store, you'll get an
icon on your new tab page.

00:14:29.930 --> 00:14:33.900
Or you can also just launch
it directly from here.

00:14:33.900 --> 00:14:35.585
ERIC: If you're out there and
you've written a really

00:14:35.585 --> 00:14:37.630
awesome script in the script
gallery, it may be worth

00:14:37.630 --> 00:14:40.660
taking just the half day it
takes to kind of convert that

00:14:40.660 --> 00:14:42.450
into something that's
appropriate for the Chrome Web

00:14:42.450 --> 00:14:45.370
Store, and get a lot more
eyeballs on it, a lot more

00:14:45.370 --> 00:14:46.880
useful functionality
out of it.

00:14:46.880 --> 00:14:48.706
JAN: Yeah, because there are
quite a few scripts in the

00:14:48.706 --> 00:14:51.450
script gallery today that aren't
really just spreadsheet

00:14:51.450 --> 00:14:53.810
extensions, if you think
about it that way.

00:14:53.810 --> 00:14:55.770
Some of them are, and some
things are custom functions,

00:14:55.770 --> 00:14:58.570
or some things need to be a
menu on a spreadsheet, but

00:14:58.570 --> 00:15:02.085
there's plenty of things which
could easily be ported over to

00:15:02.085 --> 00:15:04.410
a web app and published in
the Chrome Web Store.

00:15:04.410 --> 00:15:06.240
And if that's the case for
something you've written, we

00:15:06.240 --> 00:15:07.550
strongly encourage
you to do that.

00:15:07.550 --> 00:15:10.770
I think it's a great
opportunity.

00:15:10.770 --> 00:15:11.660
So moving on.

00:15:11.660 --> 00:15:13.430
So Gmail Print All for Chrome.

00:15:13.430 --> 00:15:14.840
This is another one
that I like.

00:15:14.840 --> 00:15:19.210
So what this does is it will
take a label that you've set

00:15:19.210 --> 00:15:24.070
up in Gmail, and then it will
basically get all of the

00:15:24.070 --> 00:15:27.420
messages from the threads, I
believe, and add those into a

00:15:27.420 --> 00:15:30.840
document and put it in
your Google Drive.

00:15:30.840 --> 00:15:35.890
So it's a way to kind of get all
of the messages from all

00:15:35.890 --> 00:15:39.660
of the emails under a label, put
them in a document so you

00:15:39.660 --> 00:15:44.050
can easily print them out or
just save them in that kind of

00:15:44.050 --> 00:15:45.810
long format for some
other purpose.

00:15:45.810 --> 00:15:47.540
ERIC: Yeah, I think as the
developer listed here, to do

00:15:47.540 --> 00:15:48.890
that in the UI, it's--

00:15:48.890 --> 00:15:50.820
every thread, print, go.

00:15:50.820 --> 00:15:51.960
And I can imagine, like,
let's say you

00:15:51.960 --> 00:15:53.820
are planning a wedding.

00:15:53.820 --> 00:15:55.115
It's go time, today's
the wedding.

00:15:55.115 --> 00:15:57.190
It would be helpful to have
every bit of communication on

00:15:57.190 --> 00:16:00.070
hand in one document that you
could just refer to make sure

00:16:00.070 --> 00:16:01.480
that all the details
that you've

00:16:01.480 --> 00:16:02.560
planned out are actually--

00:16:02.560 --> 00:16:03.450
JAN: Yes.

00:16:03.450 --> 00:16:04.000
ERIC: Actually working.

00:16:04.000 --> 00:16:05.830
So I think sort of like this,
really, is powerful.

00:16:05.830 --> 00:16:07.410
JAN: And for travel
planning for me.

00:16:07.410 --> 00:16:10.080
Like when I have a trip, and I
have my hotel reservation, and

00:16:10.080 --> 00:16:11.440
I have all of this stuff.

00:16:11.440 --> 00:16:13.600
I may not even need to print it,
but I want it all in one

00:16:13.600 --> 00:16:15.880
place where I can just pull
it up and glance.

00:16:15.880 --> 00:16:18.720
It's kind of useful
for that too.

00:16:18.720 --> 00:16:20.460
The final one I want look
at, I actually just

00:16:20.460 --> 00:16:21.230
learned about this one.

00:16:21.230 --> 00:16:23.660
So Drive forms, this is
really interesting.

00:16:23.660 --> 00:16:25.470
So this allows you
to build forms.

00:16:25.470 --> 00:16:27.250
And it's not a Google
Spreadsheet Form, it's a

00:16:27.250 --> 00:16:31.780
separate kind of form, using a
template that you create in a

00:16:31.780 --> 00:16:32.730
Google document.

00:16:32.730 --> 00:16:35.190
So you would create this
template that kind of is like

00:16:35.190 --> 00:16:36.610
a merge template.

00:16:36.610 --> 00:16:38.910
Then you would create the
form using this web app.

00:16:38.910 --> 00:16:41.990
And then you can send it out,
and it'll send it out to

00:16:41.990 --> 00:16:44.330
whoever you choose to email
it to you in PDF form.

00:16:44.330 --> 00:16:46.920
So that's also a
pretty useful.

00:16:46.920 --> 00:16:48.890
And again, it was created
with Apps Script.

00:16:48.890 --> 00:16:51.210
So these are some cool
ones to check out.

00:16:51.210 --> 00:16:52.610
Have you used this one?

00:16:52.610 --> 00:16:54.070
ERIC: I remember trying
it out once.

00:16:54.070 --> 00:16:56.410
I haven't actually used it
in a real-world scenario.

00:16:56.410 --> 00:16:57.310
But I did try it out.

00:16:57.310 --> 00:17:00.500
And I was impressed at how
powerful it is at reading in

00:17:00.500 --> 00:17:02.300
the different placeholders
that you have on your

00:17:02.300 --> 00:17:04.430
document, and creating
form fields for them.

00:17:04.430 --> 00:17:06.940
It's really very
nice that way.

00:17:06.940 --> 00:17:09.390
It's kind of along the same
lines as mail merge.

00:17:09.390 --> 00:17:11.000
Some of the mail merge scripts
people have seen

00:17:11.000 --> 00:17:12.050
and used in the past.

00:17:12.050 --> 00:17:14.740
But now it's standalone, and
it works primarily around a

00:17:14.740 --> 00:17:16.900
document, which I think
is a great way to kind

00:17:16.900 --> 00:17:17.869
of hold your template.

00:17:17.869 --> 00:17:20.109
Other mail merge scripts have
you embedding it in the source

00:17:20.109 --> 00:17:22.380
code, or putting it in a
spreadsheet cell, but actually

00:17:22.380 --> 00:17:24.130
creating a full Google document
is a great way to

00:17:24.130 --> 00:17:26.150
allow you to do all the
extra formatting you

00:17:26.150 --> 00:17:28.319
would want to do.

00:17:28.319 --> 00:17:31.720
JAN: OK, so now I think we can
jump over and take any live

00:17:31.720 --> 00:17:32.970
questions that we might have.

00:17:37.630 --> 00:17:38.117
ERIC: All right.

00:17:38.117 --> 00:17:39.100
JAN: OK.

00:17:39.100 --> 00:17:39.880
ERIC: Hello Hangout.

00:17:39.880 --> 00:17:42.355
Do we have any questions in
the Hangout, feel free to

00:17:42.355 --> 00:17:45.410
unmute and ask away.

00:17:45.410 --> 00:17:49.050
MALE SPEAKER: Please can
you open your chat?

00:17:49.050 --> 00:17:51.240
I think we have posted
some questions there.

00:17:51.240 --> 00:17:52.820
ERIC: Ah, some questions
in the chat.

00:17:52.820 --> 00:17:54.060
Unfortunately we're not
allowed into there.

00:17:54.060 --> 00:17:55.270
MALE SPEAKER: [INAUDIBLE]

00:17:55.270 --> 00:17:57.270
good working, thank you.

00:17:57.270 --> 00:17:59.740
ERIC: Sure, all right, well
one second, I can log into

00:17:59.740 --> 00:18:01.620
that chat in just a minute.

00:18:01.620 --> 00:18:06.560
We're trying a new format here
today, which means that we're

00:18:06.560 --> 00:18:07.715
going to have little bit
technical difficulties.

00:18:07.715 --> 00:18:08.940
But I think, so far, it's
been going well.

00:18:08.940 --> 00:18:11.670
JAN: So while Eric's logging
in to see the chat, does

00:18:11.670 --> 00:18:14.170
anyone else have any questions
they want to ask live?

00:18:14.170 --> 00:18:15.023
And then we'll jump
over to the chat

00:18:15.023 --> 00:18:16.625
in just a few minutes.

00:18:16.625 --> 00:18:19.750
MALE SPEAKER: I guess maybe
I can ask directly.

00:18:19.750 --> 00:18:29.130
Do you have any news of the
Google API form issue.

00:18:29.130 --> 00:18:32.270
JAN: I'm having a little
bit of trouble hearing.

00:18:32.270 --> 00:18:34.480
I can try to mess with the
volume a little bit.

00:18:34.480 --> 00:18:35.670
Can you ask that again
just a bit louder?

00:18:35.670 --> 00:18:39.056
MALE SPEAKER: Sorry it's
maybe my microphone.

00:18:39.056 --> 00:18:41.740
MALE SPEAKER: I can
hear you fine.

00:18:41.740 --> 00:18:44.860
ERIC: Yeah here, can
you ask us again?

00:18:44.860 --> 00:18:47.250
JAN: Yes, it's better for me.

00:18:47.250 --> 00:18:50.990
MALE SPEAKER: I'm wondering if
you have any news from the fix

00:18:50.990 --> 00:18:55.541
you said you've done for the
Google API form issue.

00:18:55.541 --> 00:18:58.265
ERIC: The Google
API form issue?

00:18:58.265 --> 00:19:01.060
MALE SPEAKER: Yeah, you know the
process form function who

00:19:01.060 --> 00:19:02.050
doesn't work?

00:19:02.050 --> 00:19:04.660
ERIC: Yeah, OK, yes, I know
what this is referring to.

00:19:04.660 --> 00:19:09.390
So if you're using the HTML
service and you want to take a

00:19:09.390 --> 00:19:13.200
form that you have and submit it
back into your server-side

00:19:13.200 --> 00:19:16.780
scripts. it used to be possible
to take the whole

00:19:16.780 --> 00:19:19.070
form element and just
pass it back.

00:19:19.070 --> 00:19:24.060
And that unfortunately, this
week or last week, broke and

00:19:24.060 --> 00:19:24.850
throws an error.

00:19:24.850 --> 00:19:29.120
So I know the engineer who is
working on that, and it's

00:19:29.120 --> 00:19:30.440
something that's definitely
in the pipeline.

00:19:30.440 --> 00:19:34.240
And that should be fixed
really soon.

00:19:34.240 --> 00:19:35.940
It should be coming out
within hopefully the

00:19:35.940 --> 00:19:37.190
next couple of days.

00:19:37.190 --> 00:19:39.720
We've been looking into some
workarounds and there's not a

00:19:39.720 --> 00:19:41.210
great ones at the moment,
especially if

00:19:41.210 --> 00:19:42.310
you're uploading files.

00:19:42.310 --> 00:19:46.580
But it shouldn't be too
much longer, we hope.

00:19:46.580 --> 00:19:49.210
MALE SPEAKER: I have
a question.

00:19:49.210 --> 00:19:53.160
Many of the scripts that I've
written are asking users to

00:19:53.160 --> 00:19:55.410
input HTML.

00:19:55.410 --> 00:19:59.360
Just curious is the rich text
editor ever going to work, or

00:19:59.360 --> 00:20:02.560
are there plans or even
a way to present

00:20:02.560 --> 00:20:04.670
users an HTML editor.

00:20:04.670 --> 00:20:06.460
JAN: So I think our
recommendation, there was

00:20:06.460 --> 00:20:09.450
actually something in the
issue tracker about this

00:20:09.450 --> 00:20:11.340
fairly recently--

00:20:11.340 --> 00:20:18.480
the rich text editor in UI app,
it would be extremely

00:20:18.480 --> 00:20:21.390
complicated to get that
up and running.

00:20:21.390 --> 00:20:24.700
But what we are recommending
is instead to

00:20:24.700 --> 00:20:26.350
use the HTML service.

00:20:26.350 --> 00:20:30.760
There are quite a few
jQuery-based rich text editor

00:20:30.760 --> 00:20:32.700
solutions that you can do.

00:20:32.700 --> 00:20:34.290
And those should work fine.

00:20:34.290 --> 00:20:37.130
So that's kind of our
recommended solution there.

00:20:37.130 --> 00:20:39.480
Is that if we want to have a
rich-- sorry , that's really

00:20:39.480 --> 00:20:40.350
hard to say--

00:20:40.350 --> 00:20:45.375
rich text editor in your user
interface that you're building

00:20:45.375 --> 00:20:49.520
with Apps Script, would be a go
with HTML service instead.

00:20:49.520 --> 00:20:51.230
MALE SPEAKER: I guess the issue
that I've encounters is

00:20:51.230 --> 00:20:53.620
that Caja is very fussy.

00:20:53.620 --> 00:20:58.710
And so I'd love to see an actual
worked example before

00:20:58.710 --> 00:21:03.120
investing dozens of hours to
discover that Kaha strips out

00:21:03.120 --> 00:21:05.414
some essential piece of code.

00:21:05.414 --> 00:21:07.960
JAN: OK, that's a totally
fair suggestion.

00:21:07.960 --> 00:21:09.220
And maybe that's something
that we can

00:21:09.220 --> 00:21:10.360
actually look into.

00:21:10.360 --> 00:21:14.160
Since there's multiple people
who are looking to be able to

00:21:14.160 --> 00:21:15.200
do rich text editors.

00:21:15.200 --> 00:21:17.610
So we'll take a look at that
and see if we can put

00:21:17.610 --> 00:21:18.640
something together.

00:21:18.640 --> 00:21:22.570
I also want to mention that if
you run into issues with Caja,

00:21:22.570 --> 00:21:25.870
I've found that the team that
works on that-- it's an open

00:21:25.870 --> 00:21:28.620
source project-- but the team
that works on it is very

00:21:28.620 --> 00:21:30.950
responsive.

00:21:30.950 --> 00:21:33.870
I've raised some issues there
myself and I find that they

00:21:33.870 --> 00:21:36.060
jump on them pretty quickly.

00:21:36.060 --> 00:21:38.890
So we'll take a look at that
and see if we can get an

00:21:38.890 --> 00:21:44.620
example of one of the many
JQuery-based rich text editors

00:21:44.620 --> 00:21:46.880
working in HTML service.

00:21:46.880 --> 00:21:51.220
And if we can, we'll update
here, or I'll update, maybe

00:21:51.220 --> 00:21:52.443
we'll add it as a tutorial
or something like htat.

00:21:52.443 --> 00:21:52.960
something like that.

00:21:52.960 --> 00:21:53.860
ERIC: Yeah, this is a note.

00:21:53.860 --> 00:21:57.010
If you're new to using the
HTML service, Caja is the

00:21:57.010 --> 00:22:00.400
project that sanitizes and makes
sure that all the HTML

00:22:00.400 --> 00:22:02.350
that's being served is safe
and not malicious.

00:22:02.350 --> 00:22:04.920
But sometimes it can be
a little restrictive.

00:22:04.920 --> 00:22:07.840
And some libraries that you
may pull out from the web,

00:22:07.840 --> 00:22:10.380
certain JavaScript libraries, it
may not be compatible with

00:22:10.380 --> 00:22:12.190
them right now.

00:22:12.190 --> 00:22:13.390
Definitely some more
investigation to be done.

00:22:13.390 --> 00:22:16.440
JAN: They definitely do support
JQuery and JQuery UI.

00:22:16.440 --> 00:22:18.580
So if what you're using is just
using kind of, plain,

00:22:18.580 --> 00:22:21.740
vanilla JQuery, you
should be OK.

00:22:21.740 --> 00:22:24.500
But again, we'll try
it out ourselves

00:22:24.500 --> 00:22:26.410
and see what we find.

00:22:26.410 --> 00:22:27.580
ERIC: Definitely.

00:22:27.580 --> 00:22:29.910
So I didn't get the chat open
here, unfortunately since I

00:22:29.910 --> 00:22:32.580
wasn't in the Hangout out at
the time that the chat

00:22:32.580 --> 00:22:34.300
questions were asked,
I don't see them.

00:22:34.300 --> 00:22:37.127
So you can either ask your
question on chat again, or if

00:22:37.127 --> 00:22:38.520
you feel like reading it
out loud, feel free.

00:22:43.320 --> 00:22:44.570
Oh, we have some typers here.

00:22:48.215 --> 00:22:49.230
Got a pretty full Hangout
today, too.

00:22:49.230 --> 00:22:50.620
JAN: We do, yeah.

00:22:50.620 --> 00:22:53.010
ERIC: Thanks everybody
for coming out.

00:22:53.010 --> 00:22:54.790
All right, so we've got a
question here from Andy.

00:22:54.790 --> 00:22:57.980
200 MB ScriptDB is too small
for business edition.

00:22:57.980 --> 00:22:59.900
JAN: OK.

00:22:59.900 --> 00:23:03.880
My question to you in
that case would be--

00:23:03.880 --> 00:23:07.330
what size would you want.

00:23:07.330 --> 00:23:11.100
This is something you'll find
us asking a lot with some of

00:23:11.100 --> 00:23:13.230
our quotas and limits.

00:23:13.230 --> 00:23:16.490
Is if it's the limits that we
have in place today don't work

00:23:16.490 --> 00:23:18.800
for your needs or for
your use case--

00:23:18.800 --> 00:23:22.870
let us know, ideally in the
issue tracker, as in this case

00:23:22.870 --> 00:23:24.920
a feature requests
would be best.

00:23:24.920 --> 00:23:28.660
Let us know what amount you
think you would need, and

00:23:28.660 --> 00:23:30.090
what's the reasoning
behind it.

00:23:30.090 --> 00:23:33.300
So it doesn't have to be your
very specific business case.

00:23:33.300 --> 00:23:35.000
But what sorts of data
are you storing.

00:23:35.000 --> 00:23:38.320
Why is this amount too small and
what amount would you need

00:23:38.320 --> 00:23:40.580
to see you have this be a
viable solution for you.

00:23:40.580 --> 00:23:43.360
So we take that sort of feedback
really seriously.

00:23:43.360 --> 00:23:45.750
And that helps us improve
the product.

00:23:45.750 --> 00:23:46.110
so do.

00:23:46.110 --> 00:23:49.390
You open up something in the
issue tracker for us on that.

00:23:49.390 --> 00:23:51.340
And if anybody else has
similar feelings

00:23:51.340 --> 00:23:52.990
towards it, chime in.

00:23:52.990 --> 00:23:57.480
We want to get the most
representative set of use

00:23:57.480 --> 00:23:58.910
cases possible.

00:23:58.910 --> 00:24:00.460
[INTERPOSING VOICES]

00:24:00.460 --> 00:24:04.000
MALE SPEAKER: Being a billable
you made a comment there,

00:24:04.000 --> 00:24:05.771
billable one.

00:24:05.771 --> 00:24:09.870
It might be interesting to see
if it's possible to tie your

00:24:09.870 --> 00:24:15.340
scriptd database size
to your Drive size.

00:24:15.340 --> 00:24:19.530
And therefore, if you can do
that, then by buying larger

00:24:19.530 --> 00:24:23.250
Drive size, you can pay
for the added storage.

00:24:23.250 --> 00:24:24.820
JAN: That's an interesting
idea as well.

00:24:24.820 --> 00:24:25.095
ERIC: It is.

00:24:25.095 --> 00:24:27.230
And something I was going to
mention is that I think part

00:24:27.230 --> 00:24:30.020
of understanding ScriptDB and
working around its limits, is

00:24:30.020 --> 00:24:32.930
understanding what it's good
at and what it's meant for.

00:24:32.930 --> 00:24:36.850
So if you're trying to store
image data or binary data in

00:24:36.850 --> 00:24:39.900
ScriptDB, it's really more
meant for our JavaScript

00:24:39.900 --> 00:24:42.660
objects, kind of like records
in a database--

00:24:42.660 --> 00:24:45.330
large pieces of blog content
are probably best stored in

00:24:45.330 --> 00:24:48.800
Drive using the Docs list API
and things like that.

00:24:48.800 --> 00:24:52.920
So I think if you're reaching
200 MB on just little pieces

00:24:52.920 --> 00:24:56.200
of script data, then that's
a real case that we

00:24:56.200 --> 00:24:56.730
need to look at.

00:24:56.730 --> 00:24:59.930
But if you're trying to store
files in ScriptDB, that's not

00:24:59.930 --> 00:25:01.160
really, I think,
its sweet spot.

00:25:01.160 --> 00:25:03.820
And you may want to look using
Google Drive and the Docs list

00:25:03.820 --> 00:25:05.718
service for that.

00:25:05.718 --> 00:25:07.090
JAN: Right.

00:25:07.090 --> 00:25:08.660
ERIC: And we had a question
there from Marcus.

00:25:08.660 --> 00:25:13.080
How can you implement Gmail
function on a WebApp?

00:25:13.080 --> 00:25:16.390
So if you've mean using
the Gmail service,

00:25:16.390 --> 00:25:19.590
it should be possible.

00:25:19.590 --> 00:25:22.070
If you want to actually
implement something that acts

00:25:22.070 --> 00:25:25.510
like the Gmail UI, I'm
not sure we can

00:25:25.510 --> 00:25:27.810
to answer that here.

00:25:27.810 --> 00:25:29.760
It definitely takes a lot of
manpower to create the Gmail

00:25:29.760 --> 00:25:33.060
UI, so it would not be
easily replicated.

00:25:33.060 --> 00:25:35.810
But the basic tools for
interacting with Gmail are

00:25:35.810 --> 00:25:37.160
there in the Gmail service--

00:25:37.160 --> 00:25:38.840
getting threads,
sending emails.

00:25:38.840 --> 00:25:40.650
JAN: Right.

00:25:40.650 --> 00:25:43.363
ERIC: And you could do that in
any form of script, whether it

00:25:43.363 --> 00:25:46.150
be a web app or something that
runs on our trigger.

00:25:46.150 --> 00:25:48.060
JAN: Right, so one clarification
to make if

00:25:48.060 --> 00:25:51.130
you're trying to use the Gmail
service in a web app, there

00:25:51.130 --> 00:25:53.560
will be a difference depending
on how you publish it.

00:25:53.560 --> 00:25:55.300
There's two ways that you
can publish web apps.

00:25:55.300 --> 00:25:56.890
We kind of alluded
to this before.

00:25:56.890 --> 00:25:59.650
So when you go to deploy
something as a web app,

00:25:59.650 --> 00:26:02.430
there's a selector that says
run this, execute this as--

00:26:02.430 --> 00:26:05.220
and you can execute it as
yourself, the developer--

00:26:05.220 --> 00:26:08.200
probably not what you want to
do in this case because that

00:26:08.200 --> 00:26:09.110
would be your inbox.

00:26:09.110 --> 00:26:12.010
Or you can publish it so that
executes as the user who's

00:26:12.010 --> 00:26:12.700
accessing the app.

00:26:12.700 --> 00:26:15.450
And that is generally what you
want to do in the case that

00:26:15.450 --> 00:26:18.190
you're using Gmail because you
probably want the user to be

00:26:18.190 --> 00:26:20.260
able to do something with their
own Gmail inbox rather

00:26:20.260 --> 00:26:21.970
than yours.

00:26:21.970 --> 00:26:23.860
So just something to
keep in mind there.

00:26:23.860 --> 00:26:25.950
ERIC: Definitely, when creating
a web app, always

00:26:25.950 --> 00:26:27.630
test it using a secondary
account.

00:26:27.630 --> 00:26:29.160
JAN: Right, make sure it
behaves how you expect.

00:26:29.160 --> 00:26:31.685
ERIC: Make sure it behaves
how you expect.

00:26:31.685 --> 00:26:32.350
That answers that question.

00:26:32.350 --> 00:26:33.400
MALE SPEAKER: Yeah, I had a
runaway script last night.

00:26:33.400 --> 00:26:34.260
ERIC: Oh really?

00:26:34.260 --> 00:26:35.550
[LAUGH]

00:26:35.550 --> 00:26:40.520
MALE SPEAKER: Yeah I used i
twice as an iterator, and so

00:26:40.520 --> 00:26:41.290
it just went.

00:26:41.290 --> 00:26:43.860
And it timed out.

00:26:43.860 --> 00:26:45.490
Fortunately I had it
on a demo account.

00:26:45.490 --> 00:26:48.520
So it threw the error, and I
can't send any more email

00:26:48.520 --> 00:26:50.870
through that one account
anymore.

00:26:50.870 --> 00:26:51.640
Until tomorrow.

00:26:51.640 --> 00:26:52.472
JAN: Until tomorrow, yes.

00:26:52.472 --> 00:26:57.410
ERIC: It's a good thing
to demo things on a--

00:26:57.410 --> 00:27:01.560
to have to have a development
account to work on in case you

00:27:01.560 --> 00:27:03.085
blow your limit.

00:27:03.085 --> 00:27:06.170
JAN: Yeah, that is
a good idea.

00:27:06.170 --> 00:27:07.650
ERIC: It looks like Andrew had
another question here in chat,

00:27:07.650 --> 00:27:10.240
do you want to ask
it live, too?

00:27:10.240 --> 00:27:14.130
MALE SPEAKER: Yeah I guess I'm
trying to figure out, in

00:27:14.130 --> 00:27:17.436
approaching the web app
framework, given that most of

00:27:17.436 --> 00:27:18.910
my scripts at this point have
been built in those

00:27:18.910 --> 00:27:22.540
container-bound scripts, what
are the exact limitations?

00:27:22.540 --> 00:27:24.200
Are there things that
I just definitely

00:27:24.200 --> 00:27:26.230
can't do in a web app?

00:27:26.230 --> 00:27:26.920
JAN: Yes.

00:27:26.920 --> 00:27:29.890
So one thing that a web
app can't do that a

00:27:29.890 --> 00:27:34.580
spreadsheet-bound script can do,
since those are, I think,

00:27:34.580 --> 00:27:36.400
the ones that you're probably
most familiar building.

00:27:36.400 --> 00:27:40.350
So in a spreadsheet-bound script
you have this notion of

00:27:40.350 --> 00:27:42.820
active spreadsheet
and active sheet.

00:27:42.820 --> 00:27:45.920
And there is not that automatic
notion of an active

00:27:45.920 --> 00:27:50.180
spreadsheet in the case
of a web app.

00:27:50.180 --> 00:27:52.390
If you had spreadsheet data you
wanted to access, you'd

00:27:52.390 --> 00:27:56.060
have to do open by ID and give
the spreadsheet ID into the

00:27:56.060 --> 00:27:58.480
web app before you could
then access ranges or

00:27:58.480 --> 00:27:59.180
anything like that.

00:27:59.180 --> 00:28:01.110
So that's one thing
that is different.

00:28:01.110 --> 00:28:05.600
Another would be, you can't
do, basically, any of the

00:28:05.600 --> 00:28:07.050
spreadsheet-specific things.

00:28:07.050 --> 00:28:11.770
So browser.messagebox or adding
a menu to spreadsheet--

00:28:11.770 --> 00:28:12.800
because there's no
spreadsheet.

00:28:12.800 --> 00:28:14.130
Things like that you can't do.

00:28:14.130 --> 00:28:17.910
But then there's a lot of things
that it opens up to you

00:28:17.910 --> 00:28:19.590
that you wouldn't be
able to do in a

00:28:19.590 --> 00:28:21.410
spreadsheet-bound script.

00:28:21.410 --> 00:28:23.490
ERIC: I think part of, maybe,
how you can make the decision

00:28:23.490 --> 00:28:25.710
is thinking about what
your script does.

00:28:25.710 --> 00:28:28.500
Is it primarily there to
modify and operate on a

00:28:28.500 --> 00:28:29.340
spreadsheet?

00:28:29.340 --> 00:28:32.370
Or is a spreadsheet either not
part of the script at all, or

00:28:32.370 --> 00:28:36.280
maybe just an input to the
script, and you'd want that to

00:28:36.280 --> 00:28:38.100
work on any number of
spreadsheets, right?

00:28:38.100 --> 00:28:40.730
So if you have some sort of
script that you may want to

00:28:40.730 --> 00:28:42.890
run on 100 different
spreadsheets, rather than

00:28:42.890 --> 00:28:46.050
install it 100 times, you could
create one web app that

00:28:46.050 --> 00:28:49.370
had a picker that allowed you to
pick which spreadsheet you

00:28:49.370 --> 00:28:50.900
wanted to operate on
at that moment.

00:28:50.900 --> 00:28:53.300
And then kick off the rest of
the process from there.

00:28:53.300 --> 00:28:55.290
So it's really, I guess,
thinking about is this

00:28:55.290 --> 00:28:57.440
primarily a spreadsheet
experience, or is it

00:28:57.440 --> 00:29:00.180
primarily, maybe some others
sort of standalone experience.

00:29:00.180 --> 00:29:02.170
JAN: Yeah, that's kind of
how I think of it too.

00:29:02.170 --> 00:29:05.150
Is it meant to extend what a
Google spreadsheet can do?

00:29:05.150 --> 00:29:08.090
Or is it just the fact that
when you created it in the

00:29:08.090 --> 00:29:13.580
past all app scripts were
spreadsheet-run scripts So now

00:29:13.580 --> 00:29:15.990
that we have these standalone
scripts, it's not necessary

00:29:15.990 --> 00:29:20.180
for all scripts to be bound to
a spreadsheet or Google site.

00:29:20.180 --> 00:29:22.836
They can be standalone and you
can publish them as a web app

00:29:22.836 --> 00:29:25.070
if that works for
your use case.

00:29:25.070 --> 00:29:27.290
MALE SPEAKER: And are there
restrictions on things like

00:29:27.290 --> 00:29:30.660
storing user data
in a web app?

00:29:30.660 --> 00:29:33.250
Like if I had ScriptDB running
and I want to actually create

00:29:33.250 --> 00:29:37.720
a user table that had
user-specific settings in it.

00:29:37.720 --> 00:29:40.030
Are there any restrictions
against that?

00:29:40.030 --> 00:29:41.440
JAN: So there are not.

00:29:41.440 --> 00:29:44.430
One thing to note is with
ScriptDB, regardless of how

00:29:44.430 --> 00:29:47.340
you publish your web app,
whether you publish it to run

00:29:47.340 --> 00:29:50.270
as you the developer or as the
user accessing it, there's

00:29:50.270 --> 00:29:53.580
only one DB for that script.

00:29:53.580 --> 00:29:59.040
So you have to do some work
yourself to figure out how you

00:29:59.040 --> 00:30:03.500
want a silo that data, how do
you want to identify this is

00:30:03.500 --> 00:30:05.720
the data for this user versus
this is the data for that

00:30:05.720 --> 00:30:09.110
user, but that's just
kind of up to the

00:30:09.110 --> 00:30:11.690
design of your program.

00:30:11.690 --> 00:30:14.190
You'd want to structure in such
a way that you would be

00:30:14.190 --> 00:30:16.700
able to identify, oh, these are
the settings for this user

00:30:16.700 --> 00:30:17.940
versus that user.

00:30:17.940 --> 00:30:21.490
And since, if you publish these
web apps to run as the

00:30:21.490 --> 00:30:24.590
user, you'll be able to get
the identity of the user.

00:30:24.590 --> 00:30:29.070
And so you can actually
key the data into

00:30:29.070 --> 00:30:31.504
ScriptDB that way.

00:30:31.504 --> 00:30:33.772
I hope that answers
your question.

00:30:33.772 --> 00:30:35.110
MALE SPEAKER: Cool,
thanks a lot.

00:30:35.110 --> 00:30:36.460
ERIC: I think are just
about out of time.

00:30:36.460 --> 00:30:37.490
JAN: Oh, we are, I
didn't realize.

00:30:37.490 --> 00:30:38.270
ERIC: It went by so
quickly today.

00:30:38.270 --> 00:30:39.520
JAN: It did.

00:30:41.460 --> 00:30:42.740
ERIC: All right, great,
well I mean, I think--

00:30:42.740 --> 00:30:44.570
I don't see any more questions
in the chat.

00:30:44.570 --> 00:30:46.630
We did get a thank you from
Marcus and wondering if we'll

00:30:46.630 --> 00:30:48.796
come to the Philippines
anytime soon.

00:30:48.796 --> 00:30:51.840
It's not on my travel plans, but
maybe we can work it in.

00:30:51.840 --> 00:30:53.870
JAN: Well I would love
to, we'll see.

00:30:53.870 --> 00:30:55.940
We'll keep on our
list of possible

00:30:55.940 --> 00:30:58.410
future hackathon locations.

00:30:58.410 --> 00:31:00.250
We'll see what we can do.

00:31:00.250 --> 00:31:02.480
ERIC: Well, thanks everyone
again for coming today.

00:31:02.480 --> 00:31:04.600
If you have any questions we
didn't get to, feel free to

00:31:04.600 --> 00:31:06.930
either add them on Stack
Overflow, where the whole

00:31:06.930 --> 00:31:08.930
community can pitch in, or chuck
them on the Moderator

00:31:08.930 --> 00:31:11.780
And we'll take a quick look at
them after the broadcast.

00:31:11.780 --> 00:31:14.310
JAN: And then we'll hopefully
see some of you next week.

00:31:14.310 --> 00:31:19.790
And next week will be 4:30 PM
Eastern time next Thursday.

00:31:19.790 --> 00:31:20.320
ERIC: All right, great.

00:31:20.320 --> 00:31:21.570
JAN: Thanks everybody.

