WEBVTT
Kind: captions
Language: en

00:00:00.866 --> 00:00:05.100
JULIA FERRAIOLI: Welcome to
the Google I/O session on

00:00:05.100 --> 00:00:08.840
Integrating Google+ into Your
Mobile Applications.

00:00:08.840 --> 00:00:10.690
My name is Julia Ferraioli.

00:00:10.690 --> 00:00:12.900
I am a developer advocate
working

00:00:12.900 --> 00:00:15.400
on the Google+ platform.

00:00:15.400 --> 00:00:18.250
Most of my time is spent making
sure that developers

00:00:18.250 --> 00:00:20.110
like you have what
you need to be

00:00:20.110 --> 00:00:23.430
successful with our platform.

00:00:23.430 --> 00:00:26.810
Before we get started, I'd
like to get a quick poll.

00:00:26.810 --> 00:00:32.880
Who here is working on a mobile
app or has built one?

00:00:32.880 --> 00:00:34.970
Fantastic.

00:00:34.970 --> 00:00:36.670
I think this is the right
room, the right

00:00:36.670 --> 00:00:38.530
session for us today.

00:00:38.530 --> 00:00:41.490
It's clear that we have some
really, really passionate

00:00:41.490 --> 00:00:42.700
mobile developers here.

00:00:42.700 --> 00:00:45.140
We've actually got another
one joining us today.

00:00:45.140 --> 00:00:47.386
I'd like to introduce
Francis Ma.

00:00:47.386 --> 00:00:49.082
FRANCIS MA: Thank you, Julia.

00:00:49.082 --> 00:00:50.880
Hi, everyone.

00:00:50.880 --> 00:00:53.670
My name is Francis Ma, and I'm
the product manager leading

00:00:53.670 --> 00:00:56.520
our mobile developer efforts
for the Google+ platform.

00:00:56.520 --> 00:00:59.290
It's a lot of fun here meeting
you guys face to face.

00:00:59.290 --> 00:01:00.770
You guys having a good time?

00:01:00.770 --> 00:01:01.470
AUDIENCE: Yeah.

00:01:01.470 --> 00:01:05.260
FRANCIS MA: Excellent, and today
we have some exciting

00:01:05.260 --> 00:01:07.160
stuff to share with you.

00:01:07.160 --> 00:01:11.360
Now, just before we go there, I
want to first take a moment

00:01:11.360 --> 00:01:14.550
to reflect on the reason
we're here and to share

00:01:14.550 --> 00:01:16.870
our vision with you.

00:01:16.870 --> 00:01:21.080
It was exactly a year ago when
we launched Google+ with two

00:01:21.080 --> 00:01:22.700
goals in mind.

00:01:22.700 --> 00:01:26.560
First, it was to build a social
destination to bring

00:01:26.560 --> 00:01:30.570
the richness of real-life
sharing to the Web.

00:01:30.570 --> 00:01:34.550
And second, it was to build a
platform that serves as the

00:01:34.550 --> 00:01:38.520
social spine across all of
Google products to make our

00:01:38.520 --> 00:01:43.100
services better with identity
and sharing.

00:01:43.100 --> 00:01:47.300
And in the last 12 months,
we have built an engaging

00:01:47.300 --> 00:01:53.170
community of over 150 million
monthly active users who come

00:01:53.170 --> 00:01:57.810
back to Google to engage one
another or participate in

00:01:57.810 --> 00:01:59.750
conversations.

00:01:59.750 --> 00:02:04.230
So now we're taking this next
step to extend the platform to

00:02:04.230 --> 00:02:08.490
mobile developers with the
vision of helping you create

00:02:08.490 --> 00:02:11.880
more engaging social experiences
and to connect

00:02:11.880 --> 00:02:14.520
with more users.

00:02:14.520 --> 00:02:18.110
Now, the reason we have chosen
to treat mobile as a

00:02:18.110 --> 00:02:19.860
first-class citizen--

00:02:19.860 --> 00:02:24.840
because we believe, and as many
of you probably also do,

00:02:24.840 --> 00:02:28.700
is that mobile is the future.

00:02:28.700 --> 00:02:31.415
Let's take a look at some
of the numbers.

00:02:31.415 --> 00:02:33.500
JULIA FERRAIOLI: So if you've
been to any of the other

00:02:33.500 --> 00:02:36.980
mobile sessions at Google I/O
this year, you may have seen

00:02:36.980 --> 00:02:38.170
some of these numbers.

00:02:38.170 --> 00:02:43.950
But just to refresh, we have
over 100 million smart devices

00:02:43.950 --> 00:02:46.590
active in the United
States today and

00:02:46.590 --> 00:02:51.700
over 950 million globally.

00:02:51.700 --> 00:02:55.090
But sometimes, that's kind of
hard to keep in my head--

00:02:55.090 --> 00:02:59.930
I don't really know what 950
million devices looks like.

00:02:59.930 --> 00:03:03.610
So I'm just going to put this
picture of a pink baby up on

00:03:03.610 --> 00:03:03.985
the screen.

00:03:03.985 --> 00:03:05.780
FRANCIS MA: What's that?

00:03:05.780 --> 00:03:10.990
JULIA FERRAIOLI: So for every
child born per minute, there

00:03:10.990 --> 00:03:15.280
are three smart devices
being activated.

00:03:15.280 --> 00:03:18.220
So to handle that, the kid would
have to use two hands

00:03:18.220 --> 00:03:19.240
and maybe a foot--

00:03:19.240 --> 00:03:20.465
something like that.

00:03:20.465 --> 00:03:21.620
FRANCIS MA: Wow, must
be expensive

00:03:21.620 --> 00:03:22.730
if you've got triplets.

00:03:22.730 --> 00:03:25.360
JULIA FERRAIOLI: Better
start planning now.

00:03:25.360 --> 00:03:28.205
But what does this mean
in terms of Google+?

00:03:28.205 --> 00:03:32.430
FRANCIS MA: So this exciting
growth on mobile, we're seeing

00:03:32.430 --> 00:03:34.500
that too on Google+.

00:03:34.500 --> 00:03:39.320
Today, more users access Google+
from a mobile device

00:03:39.320 --> 00:03:42.660
than they do from a
desktop computer.

00:03:42.660 --> 00:03:46.020
And with this incredible
momentum, we're very excited

00:03:46.020 --> 00:03:52.160
to announce the Google+ platform
for mobile and our

00:03:52.160 --> 00:03:56.680
very first release in developer
preview, Google+

00:03:56.680 --> 00:04:02.820
SDKs for iOS and for Android
coming soon.

00:04:02.820 --> 00:04:05.710
JULIA FERRAIOLI: So today, we
really could use more than the

00:04:05.710 --> 00:04:07.960
45 minutes we have.

00:04:07.960 --> 00:04:11.260
But we're going to use the
time we have to cover the

00:04:11.260 --> 00:04:15.200
overview of the platform, as
well as how what we're

00:04:15.200 --> 00:04:19.390
offering comprises a complete
mobile story, including

00:04:19.390 --> 00:04:23.580
meaningful identity, lightweight
social actions,

00:04:23.580 --> 00:04:28.920
and the ability to write moments
from within your app.

00:04:28.920 --> 00:04:31.450
We'll be telling this all
through an app that we've

00:04:31.450 --> 00:04:36.180
built just for this session
at Google I/O.

00:04:36.180 --> 00:04:40.170
We're going to leave about 15
minutes at the end for Q&amp;A. So

00:04:40.170 --> 00:04:42.370
please save your questions
till then.

00:04:42.370 --> 00:04:47.315
Or come see us at the Sandbox
office hours or on Google+.

00:04:52.060 --> 00:05:00.240
So Google Play services
is a broad--

00:05:00.240 --> 00:05:01.830
let's just give a
broad overview

00:05:01.830 --> 00:05:03.850
of Google Play services.

00:05:03.850 --> 00:05:09.240
It's how integration with
Google+ will work on Android.

00:05:09.240 --> 00:05:13.330
Google Play services will be an
extension of Google Play.

00:05:13.330 --> 00:05:19.010
And it's designed to make OA and
web services easier from

00:05:19.010 --> 00:05:22.220
your Android application.

00:05:22.220 --> 00:05:25.640
Now, all Froyo up devices
will have Google

00:05:25.640 --> 00:05:27.350
Play services installed.

00:05:27.350 --> 00:05:32.290
And that means that 95% of
Android devices will be able

00:05:32.290 --> 00:05:35.580
to take advantage of this.

00:05:35.580 --> 00:05:39.380
Now, it handles the complexity
of identifying the user so

00:05:39.380 --> 00:05:43.320
that you can focus on creating
a fantastic user experience

00:05:43.320 --> 00:05:46.280
within your own application.

00:05:46.280 --> 00:05:49.430
But what does it get you?

00:05:49.430 --> 00:05:54.390
Well, Francis really loves
playing games.

00:05:54.390 --> 00:05:58.660
And sometimes he's on a road
trip and he's had a really

00:05:58.660 --> 00:06:01.140
great high score on one
of his favorite games.

00:06:01.140 --> 00:06:03.870
And he wanted to share
it, maybe--

00:06:03.870 --> 00:06:04.820
FRANCIS MA: Show it off.

00:06:04.820 --> 00:06:07.570
JULIA FERRAIOLI: --show
it off a little bit.

00:06:07.570 --> 00:06:12.340
But right at that moment,
he entered a tunnel.

00:06:12.340 --> 00:06:16.170
Cell reception dropped
to nothing.

00:06:16.170 --> 00:06:20.270
Ordinarily, the app would have
to handle these instances

00:06:20.270 --> 00:06:22.570
where you lose connectivity.

00:06:22.570 --> 00:06:29.210
But with Google Play services,
the app can still try

00:06:29.210 --> 00:06:31.050
to share that out.

00:06:31.050 --> 00:06:35.010
The call will be automatically
queued until

00:06:35.010 --> 00:06:37.580
connectivity is regained.

00:06:37.580 --> 00:06:40.460
So your app no longer has
to handle that sort of

00:06:40.460 --> 00:06:41.710
complexity.

00:06:45.170 --> 00:06:48.710
It also handles updates.

00:06:48.710 --> 00:06:51.750
So that if you're picking up
an SDK that maybe has some

00:06:51.750 --> 00:06:59.150
image resources or client
libraries to an API, if those

00:06:59.150 --> 00:07:01.310
particular resources were
updated, you would have to

00:07:01.310 --> 00:07:04.650
pick up a new version of the
SDK, incorporate it into your

00:07:04.650 --> 00:07:10.050
app, test it, re-release,
et cetera.

00:07:10.050 --> 00:07:13.290
Now, with Google Play services,
that update will be

00:07:13.290 --> 00:07:16.240
handled within Google Play
services itself.

00:07:16.240 --> 00:07:19.760
So you no longer have to go
through that process and pick

00:07:19.760 --> 00:07:20.660
up new bits.

00:07:20.660 --> 00:07:22.920
It decreases time for
you as developers.

00:07:26.950 --> 00:07:31.070
So all you have to do is include
a thin client library

00:07:31.070 --> 00:07:33.155
within your app.

00:07:33.155 --> 00:07:35.870
And it decreases the app size
because you're no longer

00:07:35.870 --> 00:07:39.270
including those images
or client libraries.

00:07:39.270 --> 00:07:41.770
And you can keep the
size of it down.

00:07:41.770 --> 00:07:43.265
That's beneficial
to your users.

00:07:45.960 --> 00:07:47.730
FRANCIS MA: So it's really
exciting to give you this

00:07:47.730 --> 00:07:50.510
sneak peek of the Google Play
services coming soon.

00:07:50.510 --> 00:07:53.610
And to walk you through the
details of how you do this,

00:07:53.610 --> 00:07:57.040
we're going to show you an
example app that Julia's built

00:07:57.040 --> 00:07:59.770
called the hiking planner to
solve a little problem that we

00:07:59.770 --> 00:08:03.340
had with our friends who are a
little bit less organized and

00:08:03.340 --> 00:08:06.440
less motivated to come
hiking with us.

00:08:06.440 --> 00:08:09.140
And so Julia's built this hiking
planner app to help

00:08:09.140 --> 00:08:12.640
organize and to recommend apps
between our friends.

00:08:12.640 --> 00:08:16.000
Now, one of the things that she
wants to do was first to

00:08:16.000 --> 00:08:18.860
build a personalized
experience.

00:08:18.860 --> 00:08:21.840
And in order for her to do
that, she needed to add a

00:08:21.840 --> 00:08:25.150
sense of identity in the app.

00:08:25.150 --> 00:08:29.250
Now, she knows that there are
hundreds of millions of users

00:08:29.250 --> 00:08:34.179
with Google accounts using
services like Gmail, Android,

00:08:34.179 --> 00:08:35.770
and YouTube.

00:08:35.770 --> 00:08:40.049
And so instead of creating her
own login password and

00:08:40.049 --> 00:08:44.510
reinventing the wheel, she's
decided to use the Google+ SDK

00:08:44.510 --> 00:08:46.790
and plug in Sign in
with Google+.

00:08:46.790 --> 00:08:51.160
So that she can focus on her app
and let Google handle the

00:08:51.160 --> 00:08:53.210
authentication.

00:08:53.210 --> 00:08:57.410
Now from the user perspective,
what they get is Sign in with

00:08:57.410 --> 00:08:59.750
Google+ button.

00:08:59.750 --> 00:09:04.130
With this, we handle user
authentication and app

00:09:04.130 --> 00:09:06.940
authorization through OAuth 2.

00:09:06.940 --> 00:09:10.414
Let's take a look at
how this works.

00:09:10.414 --> 00:09:13.180
JULIA FERRAIOLI: So who here
has used OAuth in your

00:09:13.180 --> 00:09:15.590
applications?

00:09:15.590 --> 00:09:17.915
Who here absolutely loved
that experience?

00:09:21.756 --> 00:09:23.190
FRANCIS MA: We have one.

00:09:23.190 --> 00:09:24.380
JULIA FERRAIOLI: OK.

00:09:24.380 --> 00:09:28.920
So one of the great benefits of
using Sign in with Google+

00:09:28.920 --> 00:09:34.590
in the SDK is that you can
abstract away those details of

00:09:34.590 --> 00:09:37.560
implementing OAuth.

00:09:37.560 --> 00:09:42.120
So the first thing that you'll
want to do in your Android

00:09:42.120 --> 00:09:45.950
application is just make a
one-line change to your

00:09:45.950 --> 00:09:49.750
manifest file updating
the permissions.

00:09:49.750 --> 00:09:53.320
This allows you to make use of
the Android account manager

00:09:53.320 --> 00:09:55.550
that Francis just showed.

00:09:55.550 --> 00:09:57.780
So that if your user has
multiple accounts on the

00:09:57.780 --> 00:10:01.720
device, they can choose which
one they want to use with your

00:10:01.720 --> 00:10:02.970
application.

00:10:05.850 --> 00:10:09.610
The next thing is you're going
to want that button, right?

00:10:09.610 --> 00:10:12.770
You want to have your user
have some way to sign in.

00:10:12.770 --> 00:10:14.220
So this button--

00:10:14.220 --> 00:10:17.610
it's a predefined button that
allows you to have that nice

00:10:17.610 --> 00:10:20.910
look and feel of Sign in with
Google+ within your app.

00:10:28.180 --> 00:10:29.770
It's really quite simple.

00:10:29.770 --> 00:10:32.860
After that, you're just going
to want to implement the

00:10:32.860 --> 00:10:35.900
interface, the
ConnectionCallbacks, and the

00:10:35.900 --> 00:10:37.150
OnConnectionFailedListener.

00:10:39.230 --> 00:10:41.020
You're going to add
a few variables.

00:10:41.020 --> 00:10:44.440
Here we have the progress
dialogue that lets us know

00:10:44.440 --> 00:10:46.700
where we are in the
sign-in process.

00:10:46.700 --> 00:10:50.550
If your user is in the middle
of signing in, this is what

00:10:50.550 --> 00:10:52.510
will show that.

00:10:52.510 --> 00:10:55.085
The PlusClient and the
ConnectionStatus.

00:10:59.510 --> 00:11:03.010
In the onCreate method, we
simply want to initialize our

00:11:03.010 --> 00:11:04.410
PlusClient.

00:11:04.410 --> 00:11:08.145
And you'll notice that
here we're adding the

00:11:08.145 --> 00:11:10.480
Plus Profile scope.

00:11:10.480 --> 00:11:13.990
And this allows you to fetch
information from your user's

00:11:13.990 --> 00:11:18.770
Google+ profile to create this
nice, personalized experience

00:11:18.770 --> 00:11:21.310
within your app.

00:11:21.310 --> 00:11:25.300
We're just going to initialize
the progress dialogue and then

00:11:25.300 --> 00:11:26.940
go on to a few other methods.

00:11:30.140 --> 00:11:32.540
You're just going to override
these life-cycle methods,

00:11:32.540 --> 00:11:38.240
including onStart, onStop,
onConnected, and Disconnected.

00:11:38.240 --> 00:11:41.920
In the onConnectionFailed
method, you're just going to

00:11:41.920 --> 00:11:44.140
set the connection
status here.

00:11:44.140 --> 00:11:49.020
So if authentication fails for
whatever reason, this is where

00:11:49.020 --> 00:11:50.270
you'll get back that status.

00:11:57.400 --> 00:12:00.850
So once the user sees the
button, they're probably going

00:12:00.850 --> 00:12:02.010
to want to tap it, right?

00:12:02.010 --> 00:12:04.930
That's my inclination when I
see a button in my apps.

00:12:04.930 --> 00:12:05.830
So you're going to want to

00:12:05.830 --> 00:12:08.570
configure the onClick listener.

00:12:08.570 --> 00:12:12.010
Now, we're just going to pull
it out of the view here.

00:12:12.010 --> 00:12:15.180
And if it's not connected,
we're going to start that

00:12:15.180 --> 00:12:17.900
process of signing
the user in.

00:12:17.900 --> 00:12:24.500
And all we have to do is start
the ResolutionForResult in the

00:12:24.500 --> 00:12:26.210
connection status.

00:12:26.210 --> 00:12:28.770
Now we're going to give
it a code here,

00:12:28.770 --> 00:12:30.620
Request code for error.

00:12:30.620 --> 00:12:40.160
And this will allow us to find
out the result on activity

00:12:40.160 --> 00:12:42.210
result method.

00:12:42.210 --> 00:12:44.650
Now, if this was a sign-in
action, you're going to be

00:12:44.650 --> 00:12:46.780
able to see the response code.

00:12:46.780 --> 00:12:49.740
And here, we're just going to
assume that the user's signed

00:12:49.740 --> 00:12:51.130
in successfully.

00:12:51.130 --> 00:12:55.340
They've selected their account,
they've accepted the

00:12:55.340 --> 00:12:57.970
permissions of the app, and
everything is result A-OK.

00:13:00.480 --> 00:13:04.840
Once we know that, we can go
ahead and connect the user

00:13:04.840 --> 00:13:07.270
using the PlusClient object.

00:13:07.270 --> 00:13:09.000
Now, obviously, you're probably
going to want to do

00:13:09.000 --> 00:13:10.510
some error handling
in your own app.

00:13:10.510 --> 00:13:13.220
But for the sake of screen
size here, we're going to

00:13:13.220 --> 00:13:14.470
assume everything went well.

00:13:18.480 --> 00:13:21.430
FRANCIS MA: So let's take a
look at a real demo of how

00:13:21.430 --> 00:13:22.625
this works.

00:13:22.625 --> 00:13:24.951
JULIA FERRAIOLI: OK.

00:13:24.951 --> 00:13:26.140
FRANCIS MA: OK.

00:13:26.140 --> 00:13:29.230
Switch over this screen.

00:13:29.230 --> 00:13:34.280
JULIA FERRAIOLI: So here we
have our Hike Planner app.

00:13:34.280 --> 00:13:37.970
This is just a very simple app
to help us get involved in

00:13:37.970 --> 00:13:40.660
more hikes with our
connections.

00:13:40.660 --> 00:13:44.340
So here you see the Sign
in button here.

00:13:44.340 --> 00:13:48.010
And we're just going to
go ahead and tap that.

00:13:48.010 --> 00:13:49.930
It's going to pull up all
of the accounts that

00:13:49.930 --> 00:13:51.180
I have on my phone.

00:13:54.380 --> 00:13:59.200
I'm going to select the one
that I want to use.

00:13:59.200 --> 00:14:00.140
It's going to connect.

00:14:00.140 --> 00:14:04.460
We're operating over
Wi-Fi here, so OK.

00:14:07.130 --> 00:14:10.620
FRANCIS MA: So you saw earlier
in the screenshot, the user

00:14:10.620 --> 00:14:13.280
experience when they tap on
the Sign in with Google+

00:14:13.280 --> 00:14:16.690
button is they see the account
user, what you just saw.

00:14:16.690 --> 00:14:18.690
And it allows users to choose
the account they

00:14:18.690 --> 00:14:20.990
want to sign in with.

00:14:20.990 --> 00:14:23.770
And the next step after that
would've been the OAuth

00:14:23.770 --> 00:14:27.270
consent dialog to prompt the
user, hey, this is the

00:14:27.270 --> 00:14:29.590
permission we want from
you to integrate

00:14:29.590 --> 00:14:31.170
with the Google+ APIs.

00:14:31.170 --> 00:14:33.630
And from there, it goes
right back to the app.

00:14:33.630 --> 00:14:36.680
Now, one of the things you may
have noticed is that the user

00:14:36.680 --> 00:14:40.430
doesn't need to actually type
in their login and password.

00:14:40.430 --> 00:14:43.180
And as many of you may already
be familiar with, the Android

00:14:43.180 --> 00:14:47.220
account manager is that users
sign in to the phone.

00:14:47.220 --> 00:14:50.570
So with that, they won't have to
retype in their credentials

00:14:50.570 --> 00:14:51.315
every time.

00:14:51.315 --> 00:14:54.595
And they get a single sign-on
experience for your app.

00:14:54.595 --> 00:14:57.020
JULIA FERRAIOLI: Now, one of the
great things about having

00:14:57.020 --> 00:15:00.240
your users sign in with Google+
is the fact that it

00:15:00.240 --> 00:15:02.710
makes calling APIs,
particularly the

00:15:02.710 --> 00:15:05.430
Google+ APIs, a breeze.

00:15:05.430 --> 00:15:08.720
So then you can go and do such
great things like get their

00:15:08.720 --> 00:15:12.780
profile information and
personalize it with their name

00:15:12.780 --> 00:15:15.010
and their profile picture.

00:15:15.010 --> 00:15:18.020
And that, then, can give them a
really connected feeling to

00:15:18.020 --> 00:15:20.170
your application.

00:15:20.170 --> 00:15:27.240
FRANCIS MA: So now that we have
a sense of user identity

00:15:27.240 --> 00:15:31.640
in the app, the next step is
to make it more engaging by

00:15:31.640 --> 00:15:33.780
adding social interactions.

00:15:33.780 --> 00:15:37.610
Now, as I described before, that
Julia wants to make this

00:15:37.610 --> 00:15:40.910
app to one, help our
friends organize

00:15:40.910 --> 00:15:43.570
going on hiking trips.

00:15:43.570 --> 00:15:46.940
But we also wanted a way to let
our friends recommend or

00:15:46.940 --> 00:15:49.240
endorse particular hikes
that we like.

00:15:49.240 --> 00:15:53.660
So she's chosen to add
the +1 button.

00:15:53.660 --> 00:15:57.110
Now, as many of you may be
familiar with the +1 button--

00:15:57.110 --> 00:16:01.190
it's a way to let your users
publicly endorse or recommend

00:16:01.190 --> 00:16:04.870
any contents with a URL
associated with it.

00:16:04.870 --> 00:16:06.450
Now, in this particular
example that

00:16:06.450 --> 00:16:08.050
I've just put up--

00:16:08.050 --> 00:16:10.280
and something that you can do
for your apps, as well--

00:16:10.280 --> 00:16:14.470
is to point the +1 button to the
Google Play store URL so

00:16:14.470 --> 00:16:17.380
that your users can
+1 your app.

00:16:17.380 --> 00:16:20.670
So you can imagine that this is
really closing the loop of

00:16:20.670 --> 00:16:25.150
when new users come on to the
Google Play store, they can

00:16:25.150 --> 00:16:29.110
see social annotations as
a result of people they

00:16:29.110 --> 00:16:30.390
know who have +1'd.

00:16:30.390 --> 00:16:33.110
So here I've zoomed up the
text that says you

00:16:33.110 --> 00:16:34.420
and Julia +1'd this.

00:16:34.420 --> 00:16:37.450
So let's say if our friend
Jennifer comes on to the

00:16:37.450 --> 00:16:38.990
store, she might say, oh, hey,
look, this is pretty

00:16:38.990 --> 00:16:39.610
interesting.

00:16:39.610 --> 00:16:41.660
I may have not heard about
this app before, but my

00:16:41.660 --> 00:16:42.660
friends recommend it.

00:16:42.660 --> 00:16:45.380
So let me try it out.

00:16:45.380 --> 00:16:47.880
So with that, you can also,
of course, integrate

00:16:47.880 --> 00:16:48.790
that into your app.

00:16:48.790 --> 00:16:52.170
Let's take a look on
how to do this.

00:16:52.170 --> 00:16:56.400
JULIA FERRAIOLI: So when we were
trying to figure out what

00:16:56.400 --> 00:16:59.540
part of our app would benefit
the most from the +1 button,

00:16:59.540 --> 00:17:02.580
we thought, what a great way
to recommend the individual

00:17:02.580 --> 00:17:06.420
hikes than to put a +1 button
on the hike itself.

00:17:06.420 --> 00:17:13.160
So we decided to put it into
the individual hike view.

00:17:13.160 --> 00:17:16.490
So you're just going to
add it to the layout.

00:17:16.490 --> 00:17:19.930
Here again, it's already
defined for you.

00:17:19.930 --> 00:17:22.150
The look and feel is there.

00:17:22.150 --> 00:17:25.630
You'll notice some standard
Android layout elements.

00:17:25.630 --> 00:17:29.490
And at the bottom, you
see the plus:size.

00:17:29.490 --> 00:17:32.090
Now, just like on the
web, the +1 button

00:17:32.090 --> 00:17:34.720
comes in various sizes.

00:17:34.720 --> 00:17:37.580
You can have a small one, a
medium one, a large one.

00:17:37.580 --> 00:17:39.320
And you can set those
attributes

00:17:39.320 --> 00:17:41.060
directly in the XML file.

00:17:41.060 --> 00:17:43.700
You can also do this
programmatically, as well.

00:17:47.550 --> 00:17:50.540
In your onCreate function,
you'll simply pull it out of

00:17:50.540 --> 00:17:54.220
the layout, initialize
it with a URL.

00:17:54.220 --> 00:17:59.590
In this case, we're going to
target the URL to the Point

00:17:59.590 --> 00:18:02.870
Reyes hike that we have.

00:18:02.870 --> 00:18:08.790
Now, while we're pointing at
an HTML file that has some

00:18:08.790 --> 00:18:12.240
information, some nice
schema.org markup on it, as

00:18:12.240 --> 00:18:16.540
well as a picture description,
et cetera, you can also +1

00:18:16.540 --> 00:18:21.650
other types of content, such
as pictures, videos, music.

00:18:21.650 --> 00:18:23.330
All that matters is
that it have a

00:18:23.330 --> 00:18:26.100
publicly accessible URL.

00:18:26.100 --> 00:18:27.950
So you can include
this in various

00:18:27.950 --> 00:18:29.200
points within your app.

00:18:34.605 --> 00:18:38.400
FRANCIS MA: And so +1 is a
great way for people to

00:18:38.400 --> 00:18:41.590
recommend content that has
a URL associated with it.

00:18:41.590 --> 00:18:45.090
But sometimes on mobile, you may
have content that's stored

00:18:45.090 --> 00:18:48.420
on your device but not have
a URL associated with it.

00:18:48.420 --> 00:18:51.350
For example, I like to take
pictures and videos that are

00:18:51.350 --> 00:18:52.850
stored on my phone.

00:18:52.850 --> 00:18:55.440
And there isn't really
a way to +1 that.

00:18:55.440 --> 00:18:59.350
Or sometimes, there's content
that I would like my users to

00:18:59.350 --> 00:19:04.280
share more directly to Google+
without first having to +1 it.

00:19:04.280 --> 00:19:07.310
So with that, you can
use the Share plugin

00:19:07.310 --> 00:19:10.200
to share into Google+.

00:19:10.200 --> 00:19:13.830
With the Share plugin, we
provide a dialogue through our

00:19:13.830 --> 00:19:17.720
SDK for you to open the
Share plugin for users

00:19:17.720 --> 00:19:19.180
to share into Google+.

00:19:19.180 --> 00:19:23.570
Now, for this particular dialog,
we provide a way for

00:19:23.570 --> 00:19:26.400
users to select the circles that
they want to share to.

00:19:26.400 --> 00:19:29.950
There is an option to attach
their location, so you can use

00:19:29.950 --> 00:19:31.700
this as a form of checking in.

00:19:31.700 --> 00:19:35.480
And they can also attach
specific media that's stored

00:19:35.480 --> 00:19:37.370
on the device.

00:19:37.370 --> 00:19:39.900
Now, what's interesting about
this is when they share it

00:19:39.900 --> 00:19:43.950
from your app, we also put a
label attributing it to where

00:19:43.950 --> 00:19:46.534
it came from in the
specific post when

00:19:46.534 --> 00:19:48.000
it shows up on Google+.

00:19:48.000 --> 00:19:51.400
So here, you see this label
from the Hike Planner that

00:19:51.400 --> 00:19:53.350
I've shared from.

00:19:53.350 --> 00:19:58.030
And it shows this is where
the post was created.

00:19:58.030 --> 00:20:01.030
So when you share interesting
information on Google+ and as

00:20:01.030 --> 00:20:06.080
users converse around that, it
also helps drive awareness to

00:20:06.080 --> 00:20:07.330
your application.

00:20:10.347 --> 00:20:12.880
JULIA FERRAIOLI: So you may
have heard of intents on

00:20:12.880 --> 00:20:15.840
Android, specifically
share intents.

00:20:15.840 --> 00:20:19.250
The recently released
ShareCompat support package

00:20:19.250 --> 00:20:23.390
for Android made this even
easier and also supports the

00:20:23.390 --> 00:20:26.950
attribution that Francis
was showing you.

00:20:26.950 --> 00:20:28.370
So the first thing--

00:20:28.370 --> 00:20:31.130
we're just going to create
a really simple intent.

00:20:31.130 --> 00:20:34.100
And this is just to get our
friends up and excited about a

00:20:34.100 --> 00:20:36.940
hike and to prompt them to come
join because it's really

00:20:36.940 --> 00:20:39.750
a good time.

00:20:39.750 --> 00:20:42.210
So we're going to use the
ShareCompat support package.

00:20:42.210 --> 00:20:46.580
The Intent Builder will help
us construct this intent.

00:20:46.580 --> 00:20:49.060
Now here, we're just going
to set some text.

00:20:49.060 --> 00:20:50.600
Hey, I'm going on a hike.

00:20:50.600 --> 00:20:53.680
Who wants to join?

00:20:53.680 --> 00:20:59.080
Once we get the intent and start
it, it'll open up that

00:20:59.080 --> 00:21:02.490
Google+ dialogue that
allows you to modify

00:21:02.490 --> 00:21:04.670
it and select circles.

00:21:08.700 --> 00:21:14.840
But you can also really easily
share links in your intent as

00:21:14.840 --> 00:21:21.390
well, simply by adding in the
link within the set text part.

00:21:21.390 --> 00:21:24.720
You're just going to append it
onto the end of your text.

00:21:24.720 --> 00:21:28.020
Now, what will happen
is that it will go.

00:21:28.020 --> 00:21:31.480
And it will look at that link
and draw it out into a nice

00:21:31.480 --> 00:21:33.790
preview in the post.

00:21:33.790 --> 00:21:36.960
So here we are pulling
out a title,

00:21:36.960 --> 00:21:38.620
some text, and a picture.

00:21:38.620 --> 00:21:41.460
And that's what will be attached
within your post.

00:21:45.400 --> 00:21:48.970
But one of the great ways to
spark these really engaging

00:21:48.970 --> 00:21:54.500
conversations on Google+
is by attaching media.

00:21:54.500 --> 00:21:58.270
And we're just going to modify
that same intent to do that.

00:21:58.270 --> 00:22:03.620
We're going to add in setStream
and setType.

00:22:03.620 --> 00:22:07.390
And you're just going to set
the target to the data that

00:22:07.390 --> 00:22:08.360
you want to share.

00:22:08.360 --> 00:22:12.260
So say you have an app that
can share photos.

00:22:12.260 --> 00:22:16.040
What you'll do is once you get
the result of that camera

00:22:16.040 --> 00:22:19.460
action, you'll set the data
there and tell us what type of

00:22:19.460 --> 00:22:21.050
media you're sharing.

00:22:21.050 --> 00:22:25.650
And that's all that's to
it to share media.

00:22:25.650 --> 00:22:28.660
But your user has already
signed in with Google+.

00:22:28.660 --> 00:22:32.240
So why not make that even easier
for them by opening up

00:22:32.240 --> 00:22:35.150
the Google+ dialogue directly?

00:22:35.150 --> 00:22:38.960
You can do that with the
setPackage part here.

00:22:38.960 --> 00:22:42.780
So you simply specify which
application you want to handle

00:22:42.780 --> 00:22:49.605
this share intent, and it will
automatically open that up.

00:22:49.605 --> 00:22:52.418
FRANCIS MA: So let's take
a look with a demo.

00:22:56.634 --> 00:22:57.884
[INAUDIBLE].

00:23:03.082 --> 00:23:05.470
JULIA FERRAIOLI:
So here we go.

00:23:05.470 --> 00:23:09.160
We've got our Plan and
Share section here.

00:23:09.160 --> 00:23:11.520
It's going to organize
with my circle.

00:23:11.520 --> 00:23:14.980
So let's see how that
looks here.

00:23:14.980 --> 00:23:18.400
OK, so I'm trying to
corral my friends.

00:23:18.400 --> 00:23:21.740
I'm going to say, let's
go on a hike.

00:23:21.740 --> 00:23:22.920
You know what?

00:23:22.920 --> 00:23:26.330
It might be a really crowded
hike if I just add everybody.

00:23:26.330 --> 00:23:29.935
So let's just do this with--

00:23:32.560 --> 00:23:34.160
let's search for somebody.

00:23:34.160 --> 00:23:35.410
Let's search for Francis.

00:23:39.010 --> 00:23:41.510
There we go, and that's OK.

00:23:44.450 --> 00:23:45.160
You know what?

00:23:45.160 --> 00:23:46.430
I'm going to choose--

00:23:46.430 --> 00:23:47.980
location, we're actually
going to go on a

00:23:47.980 --> 00:23:49.060
hike someplace else.

00:23:49.060 --> 00:23:53.440
So let's not attach location
to this post.

00:23:53.440 --> 00:23:59.100
And once I send that off,
it will be sent to--

00:23:59.100 --> 00:24:00.270
my post has been shared.

00:24:00.270 --> 00:24:03.266
And it'll appear in
Francis's stream.

00:24:03.266 --> 00:24:06.220
FRANCIS MA: So why don't
we [INAUDIBLE]?

00:24:06.220 --> 00:24:07.442
JULIA FERRAIOLI: Excellent.

00:24:07.442 --> 00:24:09.734
FRANCIS MA: Let's
check that out.

00:24:09.734 --> 00:24:13.070
JULIA FERRAIOLI: So here we
have the Point Reyes hike.

00:24:13.070 --> 00:24:17.130
We've got it centered around
where it is on the map.

00:24:17.130 --> 00:24:20.950
And up here you can
see the +1 button.

00:24:20.950 --> 00:24:22.735
Let's go ahead and +1 that.

00:24:28.560 --> 00:24:32.870
So here you see it's got, you
publicly +1'd this as Julia

00:24:32.870 --> 00:24:39.404
Ferraioli and attribution
to the Hike Planner app.

00:24:39.404 --> 00:24:42.020
FRANCIS MA: And just like the
desktop +1 button, the user

00:24:42.020 --> 00:24:45.200
has the option to share
after they +1 as well.

00:24:52.850 --> 00:24:56.850
So now, while sharing to Google+
is great because it

00:24:56.850 --> 00:24:58.410
lets people comment
on it right away

00:24:58.410 --> 00:25:00.160
and all your circles--

00:25:00.160 --> 00:25:01.040
whoever it might be--

00:25:01.040 --> 00:25:04.530
can see it and interact around
that immediately.

00:25:04.530 --> 00:25:07.650
But sometimes, there are little
moments in life where

00:25:07.650 --> 00:25:11.270
you just want to remember but
not necessarily share it right

00:25:11.270 --> 00:25:14.580
then and there, or have it
shared automatically.

00:25:14.580 --> 00:25:17.040
So for example, Julia wants
to remember specific

00:25:17.040 --> 00:25:19.630
moments from her hikes.

00:25:19.630 --> 00:25:21.810
And she likes to use
Instant Upload.

00:25:21.810 --> 00:25:24.830
Because it's a great way for her
to capture photos and have

00:25:24.830 --> 00:25:28.270
it uploaded to the cloud
automatically into her private

00:25:28.270 --> 00:25:32.100
album, which then she can
share at a later time.

00:25:32.100 --> 00:25:35.870
But she wants to do that not
just with photos, with other

00:25:35.870 --> 00:25:36.960
things as well.

00:25:36.960 --> 00:25:40.340
And as a developer, she wants
the ability to hook this

00:25:40.340 --> 00:25:43.570
functionality into her app.

00:25:43.570 --> 00:25:47.810
So with that, she's chosen
to use Google+ history.

00:25:47.810 --> 00:25:51.090
So Google+ history is a new
feature that we've recently

00:25:51.090 --> 00:25:56.060
announced in Developer Preview
that lets your app write

00:25:56.060 --> 00:26:02.480
moments into Google+ and into
the user's private history and

00:26:02.480 --> 00:26:05.390
allow them to share that
at a later time.

00:26:05.390 --> 00:26:08.570
Now, on Android with Google
Play services, we have a

00:26:08.570 --> 00:26:14.120
special intent for you to write
moments from your app.

00:26:14.120 --> 00:26:16.980
So when these moments are
recorded into the user's

00:26:16.980 --> 00:26:20.680
history, they can go back onto
Google+ afterwards at a later

00:26:20.680 --> 00:26:23.810
time to then optionally share
to their circles.

00:26:28.058 --> 00:26:33.670
JULIA FERRAIOLI: So how do you
construct this moment within

00:26:33.670 --> 00:26:34.850
your Android app?

00:26:34.850 --> 00:26:37.610
Well, it's quite
straightforward.

00:26:37.610 --> 00:26:43.200
You're just going to construct
an intent with some JSON.

00:26:43.200 --> 00:26:47.840
So for our app, we wanted to add
the ability to check in to

00:26:47.840 --> 00:26:49.250
maybe a particular hike--

00:26:49.250 --> 00:26:51.390
maybe the start,
maybe the end.

00:26:51.390 --> 00:26:55.210
Hopefully they're the same
place, maybe not.

00:26:55.210 --> 00:26:57.210
So we're going to construct
in this

00:26:57.210 --> 00:27:00.590
example a check-in moment.

00:27:00.590 --> 00:27:03.150
The first thing that we're going
to do is create a JSON

00:27:03.150 --> 00:27:07.675
object for our place, where
we're going to check in.

00:27:07.675 --> 00:27:10.830
We're going to check in to
Point Reyes right here.

00:27:10.830 --> 00:27:15.860
And we're going to put that
in the URL for the place.

00:27:15.860 --> 00:27:19.536
Next, we're going to construct
the overall moment.

00:27:19.536 --> 00:27:23.520
And we're going to give it the
type of check-in activity.

00:27:23.520 --> 00:27:28.870
And then we're simply going to
put the place in the target of

00:27:28.870 --> 00:27:30.120
that moment.

00:27:32.240 --> 00:27:35.050
The next thing that we want to
do is actually go ahead and

00:27:35.050 --> 00:27:37.690
construct that intent.

00:27:37.690 --> 00:27:40.660
And we're simply going to create
a Write Moment intent

00:27:40.660 --> 00:27:45.220
here and put the stringified
JSON in the

00:27:45.220 --> 00:27:47.980
payload of that moment.

00:27:47.980 --> 00:27:52.830
Now once we send it off,
it's sent privately

00:27:52.830 --> 00:27:54.080
to the user's history.

00:27:56.610 --> 00:27:59.485
So should we take a
look at our app?

00:27:59.485 --> 00:28:02.125
FRANCIS MA: Yeah,
let's do a demo.

00:28:02.125 --> 00:28:06.630
JULIA FERRAIOLI: So Francis
and I went on a hike.

00:28:06.630 --> 00:28:09.200
We went on a hike out behind
the Google campus where

00:28:09.200 --> 00:28:12.060
there's actually a nice trail.

00:28:12.060 --> 00:28:14.122
It was really strenuous.

00:28:14.122 --> 00:28:16.477
FRANCIS MA: That was a nice
afternoon exercise.

00:28:16.477 --> 00:28:20.060
JULIA FERRAIOLI: So we
coordinated using Share.

00:28:20.060 --> 00:28:22.430
We took some pictures
and video.

00:28:22.430 --> 00:28:24.140
We checked in along the way--

00:28:24.140 --> 00:28:30.710
all written to our history
using moments.

00:28:30.710 --> 00:28:36.910
So on Android, here we
have a few options

00:28:36.910 --> 00:28:38.370
to create our moments.

00:28:38.370 --> 00:28:43.400
We can check in, and you
can see it was saved.

00:28:43.400 --> 00:28:46.640
If you were going to take a
photo, you could then write

00:28:46.640 --> 00:28:50.910
that into the user's history,
as well as for videos.

00:28:50.910 --> 00:28:53.100
But let's take a look at
the end result here.

00:28:55.812 --> 00:29:02.800
FRANCIS MA: So one of the things
that Julia mentioned

00:29:02.800 --> 00:29:11.460
earlier about Google Play
services is that it also

00:29:11.460 --> 00:29:14.190
remembers or queues us up
on the client side.

00:29:14.190 --> 00:29:18.580
So even though if you have
temporary connectivity loss,

00:29:18.580 --> 00:29:21.030
we automatically retry
that for you.

00:29:21.030 --> 00:29:24.140
JULIA FERRAIOLI: So if I were on
Mount Everest and I didn't

00:29:24.140 --> 00:29:28.345
have cell service, I could still
brag about it later?

00:29:28.345 --> 00:29:30.510
FRANCIS MA: You can still
brag about it later.

00:29:30.510 --> 00:29:31.330
JULIA FERRAIOLI: Cool.

00:29:31.330 --> 00:29:36.440
FRANCIS MA: So here's this
example of my history here.

00:29:36.440 --> 00:29:39.470
And so we went on the hike the
other day-- took an afternoon

00:29:39.470 --> 00:29:40.840
hike during work.

00:29:40.840 --> 00:29:44.400
And we checked in, recorded
some of this here.

00:29:44.400 --> 00:29:47.480
So this was from the +1 earlier
that we showed you

00:29:47.480 --> 00:29:49.000
from the hiking planner app.

00:29:49.000 --> 00:29:52.210
And we've also captured video.

00:29:52.210 --> 00:29:55.440
This is really awesome,
Oscar-winning stuff here.

00:29:55.440 --> 00:29:59.390
JULIA FERRAIOLI: We did
some slow mo here.

00:29:59.390 --> 00:30:04.680
FRANCIS MA: And so through the
history, I can then now choose

00:30:04.680 --> 00:30:09.400
which particular moments I want
to share with my circles.

00:30:09.400 --> 00:30:12.550
So let's take a look at what
happens when I hover over this

00:30:12.550 --> 00:30:14.700
moment and share it.

00:30:14.700 --> 00:30:18.600
Now, because we snuck out during
the day, I don't want

00:30:18.600 --> 00:30:20.200
to share to all my circles.

00:30:20.200 --> 00:30:24.438
I want to share it to
colleagues, but not my boss.

00:30:24.438 --> 00:30:26.310
I don't want to tell him.

00:30:26.310 --> 00:30:29.535
All right, and there it is.

00:30:29.535 --> 00:30:30.365
It is shared.

00:30:30.365 --> 00:30:33.770
I want to go back to the stream,
and there it is.

00:30:33.770 --> 00:30:35.510
JULIA FERRAIOLI: Francis, maybe
you want to share the

00:30:35.510 --> 00:30:38.665
check-in so they actually
know where we went.

00:30:38.665 --> 00:30:40.890
FRANCIS MA: I don't
know if I want to

00:30:40.890 --> 00:30:43.844
reveal that to my boss.

00:30:43.844 --> 00:30:44.700
JULIA FERRAIOLI: OK.

00:30:44.700 --> 00:30:45.950
FRANCIS MA: All right.

00:30:47.980 --> 00:30:49.230
[INAUDIBLE].

00:30:59.010 --> 00:31:02.900
So we've been spending the past
couple minutes talking

00:31:02.900 --> 00:31:04.590
about Android.

00:31:04.590 --> 00:31:09.120
But I did mention there was an
iOS Google+ SDK as well.

00:31:09.120 --> 00:31:13.430
So we're going to take a quick
peek at what that's about.

00:31:13.430 --> 00:31:16.290
JULIA FERRAIOLI: So we actually
developed the same

00:31:16.290 --> 00:31:20.810
app for iOS as well.

00:31:20.810 --> 00:31:22.140
Would you like to
switch the--?

00:31:25.220 --> 00:31:30.170
So as a word of caution, I am
not in any way a designer.

00:31:30.170 --> 00:31:35.160
So this is bare bones
Hike Planner app.

00:31:35.160 --> 00:31:37.160
So here we have the
Sign In button.

00:31:37.160 --> 00:31:42.200
I'm just going to go
ahead and sign in.

00:31:42.200 --> 00:31:46.760
Now, because I have the Google+
app installed on my

00:31:46.760 --> 00:31:53.060
phone and signed into it, it's
actually going to use that for

00:31:53.060 --> 00:31:54.310
my identity.

00:32:00.107 --> 00:32:03.310
FRANCIS MA: Well, the Wi-Fi's a
little bit funky here today.

00:32:03.310 --> 00:32:07.650
JULIA FERRAIOLI: We are
operating on Wi-Fi here.

00:32:07.650 --> 00:32:11.050
FRANCIS MA: So what happens is
very similar to the Android

00:32:11.050 --> 00:32:14.130
side, where, as Julia mentioned,
if the user-- if

00:32:14.130 --> 00:32:17.340
you have the Google+ app
installed and your user's

00:32:17.340 --> 00:32:21.970
already signed into that, we use
the Google+ app to handle

00:32:21.970 --> 00:32:25.520
the app authorization so that
the user won't have to

00:32:25.520 --> 00:32:28.880
re-enter their login
and password again.

00:32:28.880 --> 00:32:32.490
JULIA FERRAIOLI: So let's take
a look at Share on iOS.

00:32:35.290 --> 00:32:41.330
So here, we have the same
Organize with my circles here,

00:32:41.330 --> 00:32:44.990
and it's simply going to open
up the Share box with that

00:32:44.990 --> 00:32:48.060
text pre-populated
like on Android.

00:32:48.060 --> 00:32:52.670
And I can add who
I want to share.

00:32:52.670 --> 00:32:55.590
And it's going to show my
connections, my circles.

00:32:55.590 --> 00:32:59.490
And I can search as well.

00:32:59.490 --> 00:33:02.380
And then, of course, when you
finish or cancel, it'll go

00:33:02.380 --> 00:33:05.085
right back to your
application.

00:33:10.050 --> 00:33:13.320
FRANCIS MA: And with that, you
can also attach a location

00:33:13.320 --> 00:33:16.762
with your post through the
iOS Share plugin as well.

00:33:16.762 --> 00:33:19.630
JULIA FERRAIOLI: So let's take
a look at how you would go

00:33:19.630 --> 00:33:23.780
about doing this on iOS.

00:33:23.780 --> 00:33:26.150
So the first thing, just like
in your Android app, you're

00:33:26.150 --> 00:33:29.500
going to create and configure
your Sign in

00:33:29.500 --> 00:33:31.310
with Google+ button.

00:33:31.310 --> 00:33:33.420
Now, all of this is included
in our SDK.

00:33:37.100 --> 00:33:40.190
So once you add it to the view
that you want to handle sign

00:33:40.190 --> 00:33:43.620
in, you're simply going to
set a few things here.

00:33:43.620 --> 00:33:45.430
You're going to set the
delegate to your view

00:33:45.430 --> 00:33:48.710
controller that you
want to handle it.

00:33:48.710 --> 00:33:52.860
And then you're going to tell
us what your client ID is.

00:33:52.860 --> 00:33:58.740
Now, who here has seen the
Google APIs console this I/O?

00:33:58.740 --> 00:34:05.530
OK, so you will get your client
ID by going to the

00:34:05.530 --> 00:34:09.530
Google APIs console and
creating a project.

00:34:09.530 --> 00:34:11.719
Then you're going to tell us
what sorts of scopes that you

00:34:11.719 --> 00:34:14.850
want in your Sign in button.

00:34:14.850 --> 00:34:17.800
Now here, we're going to add the
plus.me scope, but you can

00:34:17.800 --> 00:34:21.719
also add other types
of scopes as well.

00:34:21.719 --> 00:34:24.440
And this could be if you want to
write moments, it'll be the

00:34:24.440 --> 00:34:26.219
write moments scope.

00:34:26.219 --> 00:34:30.130
Or if you want to add other
Google services scopes here,

00:34:30.130 --> 00:34:32.610
you could do that as well.

00:34:32.610 --> 00:34:34.380
And then you're simply going
to set the appDelegate

00:34:34.380 --> 00:34:38.679
delegate to the Sign
in button.

00:34:38.679 --> 00:34:44.130
Now, in your view controller,
you're going to add the sign

00:34:44.130 --> 00:34:45.900
in delegate here.

00:34:45.900 --> 00:34:50.510
And this simply tells you what
happened when your user

00:34:50.510 --> 00:34:52.320
completed authorization.

00:34:52.320 --> 00:34:55.690
And here, once you implement
this, you can do other things

00:34:55.690 --> 00:34:59.420
like populate the view, maybe
make an API call.

00:34:59.420 --> 00:35:01.280
And this is where you would
find out that result.

00:35:06.080 --> 00:35:09.960
In your apps delegate, you're
going to forward declare the

00:35:09.960 --> 00:35:14.410
class and simply declare
this property

00:35:14.410 --> 00:35:15.660
for the Sign in button.

00:35:17.980 --> 00:35:20.280
And you're going to want
to handle the result of

00:35:20.280 --> 00:35:24.360
authentication in your
app delegate as well.

00:35:24.360 --> 00:35:28.810
So whereas if you have the
Google+ app installed, it will

00:35:28.810 --> 00:35:30.160
go to the app.

00:35:30.160 --> 00:35:31.260
It may also--

00:35:31.260 --> 00:35:33.920
if you don't, if your user does
not have it installed, it

00:35:33.920 --> 00:35:36.390
will default to the web.

00:35:36.390 --> 00:35:38.240
And this is how you would
handle that result.

00:35:42.112 --> 00:35:45.830
Now, sharing on iOS
is very easy.

00:35:45.830 --> 00:35:50.050
All you're going to do is first
create the share object.

00:35:50.050 --> 00:35:53.000
You're going to initialize it
with your client ID and set

00:35:53.000 --> 00:35:54.250
its delegate.

00:35:56.370 --> 00:36:00.660
And then, you're just going to
simply tell us what you want

00:36:00.660 --> 00:36:05.820
to share and open
the share box.

00:36:05.820 --> 00:36:08.290
Here, we're just going to do
the let's go on a hike.

00:36:08.290 --> 00:36:12.310
We're going to actually share
where we want to go.

00:36:12.310 --> 00:36:13.660
And then we're going
to open it.

00:36:13.660 --> 00:36:18.390
Now, both of these properties
are optional.

00:36:18.390 --> 00:36:21.160
So you could simply open the
share box up with nothing

00:36:21.160 --> 00:36:23.540
there, or you can make it
as rich as you want.

00:36:27.880 --> 00:36:30.910
When you're thinking about
writing moments on iOS, it's

00:36:30.910 --> 00:36:35.220
actually going to look a lot
like it does on Android.

00:36:35.220 --> 00:36:38.500
You're just going to
construct the JSON

00:36:38.500 --> 00:36:40.520
object and send it off.

00:36:40.520 --> 00:36:44.100
So here, we're going to
construct the place, and this

00:36:44.100 --> 00:36:45.620
is simply an item scope.

00:36:45.620 --> 00:36:47.980
These are some open source
libraries that

00:36:47.980 --> 00:36:50.580
come with the SDK.

00:36:50.580 --> 00:36:56.010
We're going to set the
place to our hike.

00:36:56.010 --> 00:36:59.570
And then we're going to create
the moment with our hike there

00:36:59.570 --> 00:37:00.820
in the target.

00:37:02.860 --> 00:37:06.870
You'll then construct the query
and simply send it off

00:37:06.870 --> 00:37:08.555
through the Google+ service.

00:37:14.120 --> 00:37:18.690
So it's your turn to really go
out and empower your users to

00:37:18.690 --> 00:37:22.090
start making moments
within your app.

00:37:22.090 --> 00:37:26.280
Allow them to really engage with
each other and construct

00:37:26.280 --> 00:37:27.910
these moments.

00:37:27.910 --> 00:37:30.650
Now, you can get started by
visiting our mobile-centric

00:37:30.650 --> 00:37:35.110
documentation here on our site,
as well as engage with

00:37:35.110 --> 00:37:39.120
us on our Google+
developers page.

00:37:39.120 --> 00:37:41.410
We'll be posting the session
slides a little bit

00:37:41.410 --> 00:37:42.960
later at this URL.

00:37:42.960 --> 00:37:50.495
But you can also get to it on
the Google I/O session page.

00:37:50.495 --> 00:37:53.540
We'll also be posting the code
for both of these applications

00:37:53.540 --> 00:37:55.550
a little bit later, so
stay tuned for that.

00:37:58.530 --> 00:38:00.050
So thanks so much for
coming today.

00:38:00.050 --> 00:38:02.850
We're going to put our contact
information up on the slides

00:38:02.850 --> 00:38:04.280
while we take some questions.

00:38:04.280 --> 00:38:07.170
And we may have something for
people who ask questions.

00:38:12.520 --> 00:38:18.448
[APPLAUSE]

00:38:18.448 --> 00:38:19.440
AUDIENCE: Hi.

00:38:19.440 --> 00:38:21.350
Thanks for the presentation.

00:38:21.350 --> 00:38:24.160
I have a couple of questions.

00:38:24.160 --> 00:38:27.660
So you mentioned that we have
to have a Sign in button.

00:38:27.660 --> 00:38:30.280
Is it necessary for them
to click Sign in?

00:38:30.280 --> 00:38:33.250
Or can they just click on +1 and
you would automatically--

00:38:33.250 --> 00:38:36.792
if they're not signed in, you
would take care of it?

00:38:36.792 --> 00:38:40.980
FRANCIS MA: So on the Android
side, we do help the user sign

00:38:40.980 --> 00:38:44.365
in through the +1 button so
that they don't have to

00:38:44.365 --> 00:38:45.730
explicitly click Sign in.

00:38:45.730 --> 00:38:49.300
Also to note that we do provide
the standard button

00:38:49.300 --> 00:38:51.270
asset of Sign in with Google+.

00:38:51.270 --> 00:38:54.335
But we also give you the option
to hooking it into your

00:38:54.335 --> 00:38:56.510
app in a more appropriate
flow as well.

00:38:56.510 --> 00:38:57.420
So that's another option.

00:38:57.420 --> 00:39:00.370
AUDIENCE: And we can use
our own custom +1

00:39:00.370 --> 00:39:02.720
buttons and all also?

00:39:02.720 --> 00:39:05.890
Do we have to use--

00:39:05.890 --> 00:39:08.760
because the app may
not support.

00:39:08.760 --> 00:39:10.353
There's not much space.

00:39:10.353 --> 00:39:13.580
FRANCIS MA: We do have standard
branding guidelines

00:39:13.580 --> 00:39:15.840
around how the +1 button
can be used.

00:39:15.840 --> 00:39:18.020
And you can reference that in
our developer documentations.

00:39:18.020 --> 00:39:20.890
AUDIENCE: OK, and one
last question.

00:39:20.890 --> 00:39:25.410
Once you're signed in, are we
supposed to save some kind of

00:39:25.410 --> 00:39:27.630
credentials so that they
don't have to sign

00:39:27.630 --> 00:39:29.400
in again and again?

00:39:29.400 --> 00:39:32.470
FRANCIS MA: So the end result
of using the sign in is you

00:39:32.470 --> 00:39:34.360
get the OAuth token.

00:39:34.360 --> 00:39:37.850
And so you can use that much
like you would if you had

00:39:37.850 --> 00:39:40.050
manually integrated
OAuth 2 yourself.

00:39:40.050 --> 00:39:44.470
You can use that token to then
call the APIs with it.

00:39:44.470 --> 00:39:45.200
AUDIENCE: OK, great.

00:39:45.200 --> 00:39:45.660
Thank you.

00:39:45.660 --> 00:39:47.386
FRANCIS MA: Thank you.

00:39:47.386 --> 00:39:50.980
AUDIENCE: Thank you.

00:39:50.980 --> 00:39:53.980
I'm not sure if this is the
right place to ask, but can I

00:39:53.980 --> 00:39:56.350
post on behalf of
another user?

00:39:56.350 --> 00:39:57.480
For instance, let's say someone

00:39:57.480 --> 00:40:00.620
registers for a marathon.

00:40:00.620 --> 00:40:02.810
And we're doing the timing
of the marathon.

00:40:02.810 --> 00:40:06.000
And we know they finished, and
they've authorized us to post

00:40:06.000 --> 00:40:10.290
to their profile their time.

00:40:10.290 --> 00:40:11.180
Is that supported?

00:40:11.180 --> 00:40:12.570
I do that with Facebook
and Twitter.

00:40:12.570 --> 00:40:15.940
JULIA FERRAIOLI: So that's an
excellent use case for moments

00:40:15.940 --> 00:40:20.960
is the ability to post to a
user's private history from

00:40:20.960 --> 00:40:23.040
your app automatically.

00:40:23.040 --> 00:40:26.700
Then they can go and share that
out to their circles, in

00:40:26.700 --> 00:40:29.905
case it's an embarrassing
time or what have you.

00:40:29.905 --> 00:40:30.810
That would be me.

00:40:30.810 --> 00:40:31.990
AUDIENCE: Exactly.

00:40:31.990 --> 00:40:36.285
So they can authorize us to
post to their history?

00:40:36.285 --> 00:40:37.410
JULIA FERRAIOLI:
That's correct.

00:40:37.410 --> 00:40:40.910
In the Sign in button, you would
simply add the scope,

00:40:40.910 --> 00:40:42.820
the write moment scope.

00:40:42.820 --> 00:40:45.900
And then you would be able
to construct that moment.

00:40:45.900 --> 00:40:50.130
And I'm trying to think what a
time would be-- it might be

00:40:50.130 --> 00:40:56.360
just a generic object, create
activity item that you could

00:40:56.360 --> 00:41:00.220
then sent to their Google+
private history.

00:41:00.220 --> 00:41:01.430
AUDIENCE: I'll try that.

00:41:01.430 --> 00:41:06.560
And also another question is,
I see this Post to history.

00:41:06.560 --> 00:41:10.460
Does that mean that now
with Google+ app I can

00:41:10.460 --> 00:41:12.500
post without any--

00:41:12.500 --> 00:41:15.070
like right now, it seems like
it fails if I try to post

00:41:15.070 --> 00:41:17.430
without network connectivity.

00:41:17.430 --> 00:41:22.593
Is the Google+ app going to
support offline mode then?

00:41:22.593 --> 00:41:24.625
Or how do I do that?

00:41:24.625 --> 00:41:26.870
FRANCIS MA: It will be the
Google Play services that we

00:41:26.870 --> 00:41:29.856
showed much earlier on
in the presentation.

00:41:29.856 --> 00:41:35.380
So just to recap that, Google
Play services is a service

00:41:35.380 --> 00:41:38.490
that is provisioned through
Google Play.

00:41:38.490 --> 00:41:41.680
And it lives on the client
side of the device.

00:41:41.680 --> 00:41:45.990
So because you're interacting
with this client-side service,

00:41:45.990 --> 00:41:48.580
we handle the offline
queuing for you.

00:41:48.580 --> 00:41:51.260
So the answer for specifically
writing moments--

00:41:51.260 --> 00:41:53.380
yes, we provide an intent
on Android that you

00:41:53.380 --> 00:41:54.230
can write to it.

00:41:54.230 --> 00:41:57.720
And we also handle the offline
retries for you.

00:41:57.720 --> 00:42:01.230
AUDIENCE: But I guess I'm
asking, the Google+ app, by

00:42:01.230 --> 00:42:04.280
default, will it support
this too?

00:42:04.280 --> 00:42:06.480
Like the one that comes with--

00:42:06.480 --> 00:42:09.570
when you install Google+,
I try to post,

00:42:09.570 --> 00:42:10.600
and I'm in the subway.

00:42:10.600 --> 00:42:11.980
And it just fails.

00:42:11.980 --> 00:42:12.904
FRANCIS MA: I see.

00:42:12.904 --> 00:42:15.220
I'm sorry, I misunderstood
the question.

00:42:15.220 --> 00:42:20.330
The Google+ app currently
does not have the retry.

00:42:20.330 --> 00:42:21.580
Yep.

00:42:24.953 --> 00:42:28.370
AUDIENCE: Will you be exposing
support for integrating with

00:42:28.370 --> 00:42:31.460
the new Google+ event stuff?

00:42:31.460 --> 00:42:33.300
Because that would be awesome.

00:42:33.300 --> 00:42:36.510
Instead of making a post, come
join me, start an event with a

00:42:36.510 --> 00:42:39.230
TBD location.

00:42:39.230 --> 00:42:42.575
And then figure all that out.

00:42:42.575 --> 00:42:46.400
JULIA FERRAIOLI: Right now
what is supported is

00:42:46.400 --> 00:42:50.450
retrieving event information
through the RESTful API.

00:42:50.450 --> 00:42:53.070
You do retrieve events through--
you can retrieve

00:42:53.070 --> 00:42:54.660
events through the
RESTful API.

00:42:54.660 --> 00:43:00.210
But as for creation, we have
nothing to say at this time.

00:43:00.210 --> 00:43:01.210
AUDIENCE: OK.

00:43:01.210 --> 00:43:03.406
That works.

00:43:03.406 --> 00:43:05.230
AUDIENCE: Hey, Francis.

00:43:05.230 --> 00:43:07.330
This is Arthur from Flipboard.

00:43:07.330 --> 00:43:10.430
I have a question about
the OAuth token.

00:43:10.430 --> 00:43:14.680
Is that token associated with
my app or with Google Play?

00:43:14.680 --> 00:43:17.095
FRANCIS MA: It's a token
associated with your app.

00:43:17.095 --> 00:43:20.120
AUDIENCE: So we can use it on
the back end to make requests

00:43:20.120 --> 00:43:21.455
about the user?

00:43:21.455 --> 00:43:22.310
FRANCIS MA: That's right.

00:43:22.310 --> 00:43:26.030
So with this Google Auth
service, this token is

00:43:26.030 --> 00:43:29.050
associated with your app just
like it would be had you

00:43:29.050 --> 00:43:31.760
manually integrated
OAuth 2 yourself.

00:43:31.760 --> 00:43:36.670
Now for Android specifically,
this token is associated--

00:43:36.670 --> 00:43:40.680
well, it's meant for a
client-side API call.

00:43:40.680 --> 00:43:43.600
So in theory, you can pass
it to your server.

00:43:43.600 --> 00:43:47.260
But at this time, we primarily
focus on having the client

00:43:47.260 --> 00:43:50.941
speaking with the Google+
APIs directly.

00:43:50.941 --> 00:43:53.580
AUDIENCE: And in practice?

00:43:53.580 --> 00:43:57.340
We need to use it on the server
side because all of our

00:43:57.340 --> 00:44:00.176
API calls are made
on the server.

00:44:00.176 --> 00:44:01.620
FRANCIS MA: Absolutely.

00:44:01.620 --> 00:44:04.520
That's something that we're
looking to improve on.

00:44:04.520 --> 00:44:08.430
And so we can definitely talk
more about your specific use

00:44:08.430 --> 00:44:09.750
case and how we can
address that.

00:44:09.750 --> 00:44:12.000
AUDIENCE: So I have one
other question.

00:44:12.000 --> 00:44:16.260
So we support YouTube and Google
Reader and a ton of

00:44:16.260 --> 00:44:18.310
Google properties.

00:44:18.310 --> 00:44:21.600
Can we go through the same
mechanism for getting

00:44:21.600 --> 00:44:23.400
credentials for those
services?

00:44:23.400 --> 00:44:24.230
FRANCIS MA: Yeah.

00:44:24.230 --> 00:44:27.000
So one of the things that you
saw earlier was we give the

00:44:27.000 --> 00:44:30.100
user an option to pass in
the various scopes.

00:44:30.100 --> 00:44:33.130
Or we let the app pass in
whichever scopes it is that

00:44:33.130 --> 00:44:34.410
they want to ask for.

00:44:34.410 --> 00:44:36.060
So one option--

00:44:36.060 --> 00:44:38.590
just throwing this out there--
is that you can ask for, let's

00:44:38.590 --> 00:44:40.710
say, YouTube scopes
and also Google+

00:44:40.710 --> 00:44:42.500
scopes at the same time.

00:44:42.500 --> 00:44:45.200
So that user will only see
one consent screen.

00:44:45.200 --> 00:44:47.770
And they can just grant
the access once, and

00:44:47.770 --> 00:44:48.766
you're good to go.

00:44:48.766 --> 00:44:49.145
AUDIENCE: Thanks.

00:44:49.145 --> 00:44:50.610
FRANCIS MA: Thanks, Arthur.

00:44:50.610 --> 00:44:53.070
JULIA FERRAIOLI: You should
also come see us later for

00:44:53.070 --> 00:44:56.960
stickers, those people who
have asked questions.

00:44:56.960 --> 00:44:59.700
AUDIENCE: This is a little
more about privacy.

00:44:59.700 --> 00:45:01.550
The data that [? we ?] retrieve
through the API,

00:45:01.550 --> 00:45:06.200
especially on connect, what's
our right for storing it

00:45:06.200 --> 00:45:08.405
offline on our services?

00:45:08.405 --> 00:45:10.720
JULIA FERRAIOLI: Can you be a
little bit more specific about

00:45:10.720 --> 00:45:11.220
what you're talking about?

00:45:11.220 --> 00:45:13.080
AUDIENCE: Let's say if we
retrieve a user's name, for

00:45:13.080 --> 00:45:15.530
example, or their email address,
can we store that for

00:45:15.530 --> 00:45:17.820
later use associated with
another account?

00:45:17.820 --> 00:45:20.190
JULIA FERRAIOLI: So we do have
standard terms of service that

00:45:20.190 --> 00:45:27.250
cover these questions, even
with our web APIs.

00:45:27.250 --> 00:45:30.280
So we do ask that you have a
privacy policy for your app

00:45:30.280 --> 00:45:32.860
stating what you collect
and how you treat it.

00:45:35.695 --> 00:45:37.250
AUDIENCE: Can a user--

00:45:37.250 --> 00:45:41.570
or can my app go back and query
the user's history that

00:45:41.570 --> 00:45:44.660
they put in so I could see
which-- for instance, like

00:45:44.660 --> 00:45:45.970
with a badging application.

00:45:45.970 --> 00:45:48.620
If I want to save their badges
as a moment, and I want to

00:45:48.620 --> 00:45:51.025
show all badges that they've
earned, could I do that?

00:45:53.665 --> 00:45:55.170
FRANCIS MA: We're currently--

00:45:55.170 --> 00:45:58.960
for the history API, we're only
providing the ability to

00:45:58.960 --> 00:46:01.340
write into the history.

00:46:01.340 --> 00:46:04.670
And so currently the option
is just to write into it.

00:46:04.670 --> 00:46:05.310
AUDIENCE: OK.

00:46:05.310 --> 00:46:06.060
Thanks.

00:46:06.060 --> 00:46:09.170
JULIA FERRAIOLI: But that's
a great suggestion.

00:46:09.170 --> 00:46:10.816
Thanks.

00:46:10.816 --> 00:46:11.630
AUDIENCE: Hi.

00:46:11.630 --> 00:46:13.610
Just to finish your example.

00:46:13.610 --> 00:46:16.780
So you share the activity
of asking for a hike.

00:46:16.780 --> 00:46:21.000
And let's say five people +1
that activity, and three

00:46:21.000 --> 00:46:23.750
people commented asking
to move the date.

00:46:23.750 --> 00:46:26.330
How would my application
find out about it?

00:46:26.330 --> 00:46:27.680
JULIA FERRAIOLI: How would
your application

00:46:27.680 --> 00:46:28.920
find out about it?

00:46:28.920 --> 00:46:30.640
That's a great question.

00:46:30.640 --> 00:46:34.185
You can retrieve activities
through the API.

00:46:34.185 --> 00:46:36.440
AUDIENCE: But you have
to keep polling that.

00:46:36.440 --> 00:46:38.060
JULIA FERRAIOLI:
That's correct.

00:46:38.060 --> 00:46:43.490
Well, you could get the ID of
the activity and then poll for

00:46:43.490 --> 00:46:44.380
that specific--

00:46:44.380 --> 00:46:46.070
AUDIENCE: So [? this ?]
application will have

00:46:46.070 --> 00:46:47.190
to keep track of--

00:46:47.190 --> 00:46:48.242
JULIA FERRAIOLI: Correct.

00:46:48.242 --> 00:46:50.050
AUDIENCE: OK.

00:46:50.050 --> 00:46:50.750
All right.

00:46:50.750 --> 00:46:53.510
JULIA FERRAIOLI: OK, so
you would want some--

00:46:53.510 --> 00:46:54.330
I'd be happy to talk--

00:46:54.330 --> 00:46:55.070
AUDIENCE: Oh, it's a
feedback, right?

00:46:55.070 --> 00:46:58.250
If you engage something,
you want to know

00:46:58.250 --> 00:47:00.790
what's coming back.

00:47:00.790 --> 00:47:02.640
JULIA FERRAIOLI: Right,
you would have to

00:47:02.640 --> 00:47:04.075
poll for it, yes.

00:47:04.075 --> 00:47:08.840
AUDIENCE: And so the second
question is, once you sign in,

00:47:08.840 --> 00:47:12.250
the open auth is hidden from
you, but I assume that there

00:47:12.250 --> 00:47:15.990
is an open auth talking
return back.

00:47:15.990 --> 00:47:19.430
Is there any way to access
that talking directly?

00:47:19.430 --> 00:47:24.015
Or is it exposed to the app
or it's completely hidden?

00:47:24.015 --> 00:47:26.940
JULIA FERRAIOLI: It is
exposed to the app.

00:47:30.920 --> 00:47:34.350
The great part about signing
into Google+ is that you can

00:47:34.350 --> 00:47:37.310
simply use the object that
you get back for

00:47:37.310 --> 00:47:38.066
authenticator calls.

00:47:38.066 --> 00:47:42.810
AUDIENCE: And the client ID
which is used to do the open

00:47:42.810 --> 00:47:44.770
auth, essentially the
application doesn't have to

00:47:44.770 --> 00:47:47.516
store the private
key, or does it?

00:47:47.516 --> 00:47:52.830
JULIA FERRAIOLI: So when you
create the client ID, you give

00:47:52.830 --> 00:47:54.600
some information.

00:47:54.600 --> 00:47:56.270
And we can go over that later.

00:47:56.270 --> 00:48:00.000
I can show you what that flow
looks like that would identify

00:48:00.000 --> 00:48:00.435
your application.

00:48:00.435 --> 00:48:00.970
AUDIENCE: OK.

00:48:00.970 --> 00:48:01.430
All right.

00:48:01.430 --> 00:48:02.236
Thanks.

00:48:02.236 --> 00:48:03.090
FRANCIS MA: Thank you.

00:48:03.090 --> 00:48:04.826
JULIA FERRAIOLI: We had
a question over here.

00:48:04.826 --> 00:48:07.640
AUDIENCE: Are your services
going to expose other write

00:48:07.640 --> 00:48:12.130
actions for Google+, like
commenting on existing posts?

00:48:12.130 --> 00:48:16.180
JULIA FERRAIOLI: So actually,
comment activity is one of the

00:48:16.180 --> 00:48:17.570
moments that you can write--

00:48:17.570 --> 00:48:18.390
AUDIENCE: To the history.

00:48:18.390 --> 00:48:22.200
JULIA FERRAIOLI: To the user's
history, correct.

00:48:22.200 --> 00:48:23.340
AUDIENCE: Hi.

00:48:23.340 --> 00:48:29.130
I noticed there is attribution
for +1's.

00:48:29.130 --> 00:48:31.860
But on the web, I didn't see any
attribution for moments.

00:48:31.860 --> 00:48:38.055
Is that coming or
not supported?

00:48:38.055 --> 00:48:40.610
JULIA FERRAIOLI: There are
attribution for moments.

00:48:40.610 --> 00:48:41.520
AUDIENCE: Oh, there are?

00:48:41.520 --> 00:48:43.630
FRANCIS MA: Yeah, that's
something that we're actively

00:48:43.630 --> 00:48:44.880
looking into.

00:48:48.270 --> 00:48:52.060
AUDIENCE: I noticed that you
had the ability to add JSON

00:48:52.060 --> 00:48:54.290
and you construct whole
JSON objects and send

00:48:54.290 --> 00:48:56.050
the intent with that.

00:48:56.050 --> 00:48:58.585
I was wondering if there's any
particular reason why lot of

00:48:58.585 --> 00:49:00.850
that stuff can't just be
added to the intent

00:49:00.850 --> 00:49:03.400
itself, just as extras--

00:49:03.400 --> 00:49:05.890
as would have been
done in the past.

00:49:05.890 --> 00:49:08.110
JULIA FERRAIOLI: It
actually was.

00:49:08.110 --> 00:49:10.680
We stringified it first.

00:49:10.680 --> 00:49:13.380
It was just to make the
construction just a little bit

00:49:13.380 --> 00:49:14.320
more clear.

00:49:14.320 --> 00:49:15.282
AUDIENCE: OK.

00:49:15.282 --> 00:49:18.168
Thank you.

00:49:18.168 --> 00:49:19.418
JULIA FERRAIOLI: Any
other questions?

00:49:23.452 --> 00:49:23.936
FRANCIS MA: We have one more.

00:49:23.936 --> 00:49:25.910
AUDIENCE: One last question.

00:49:25.910 --> 00:49:30.180
So currently the session is
active for one hour, right?

00:49:30.180 --> 00:49:31.190
The [? document which ?]

00:49:31.190 --> 00:49:32.320
is returned.

00:49:32.320 --> 00:49:32.640
Auto renewal--

00:49:32.640 --> 00:49:37.365
does application have
to do it explicitly?

00:49:37.365 --> 00:49:40.860
JULIA FERRAIOLI: You can
actually try to sign in.

00:49:40.860 --> 00:49:42.860
And then I believe it just--

00:49:42.860 --> 00:49:43.540
AUDIENCE: Just auto
renews itself.

00:49:43.540 --> 00:49:44.435
[INTERPOSING VOICES]

00:49:44.435 --> 00:49:47.130
JULIA FERRAIOLI: Your user
shouldn't have to grant

00:49:47.130 --> 00:49:47.730
permissions again.

00:49:47.730 --> 00:49:48.510
AUDIENCE: Again?

00:49:48.510 --> 00:49:50.370
JULIA FERRAIOLI: No.

00:49:50.370 --> 00:49:50.840
They won't.

00:49:50.840 --> 00:49:51.350
AUDIENCE: OK.

00:49:51.350 --> 00:49:53.772
All right, thanks.

00:49:53.772 --> 00:49:55.390
JULIA FERRAIOLI: You're just
aiming for two stickers,

00:49:55.390 --> 00:49:56.640
aren't you?

00:50:02.200 --> 00:50:02.455
Thanks so much.

00:50:02.455 --> 00:50:03.705
FRANCIS MA: Thank
you very much.

