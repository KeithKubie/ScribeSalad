WEBVTT
Kind: captions
Language: en

00:00:00.330 --> 00:00:02.570
Okay Michael so you, let's make certain that

00:00:02.570 --> 00:00:05.120
you really grasp this concept of weak learning okay?

00:00:05.120 --> 00:00:05.883
&gt;&gt; Mm-hm.

00:00:05.883 --> 00:00:09.200
&gt;&gt; So, here's a little quiz that I put together to test your knowledge.

00:00:10.240 --> 00:00:13.170
So, here's the, here's the deal. I've got a little matrix here, it's a

00:00:13.170 --> 00:00:16.960
little table, and across the top. Are

00:00:16.960 --> 00:00:19.610
three different hypotheses. So, hypothesis one, hypothesis

00:00:19.610 --> 00:00:22.170
two, and hypothesis three. So your entire

00:00:22.170 --> 00:00:25.560
hypothesis base consists only of these three hypothesis,

00:00:25.560 --> 00:00:27.110
hypotheses. Got it?

00:00:27.110 --> 00:00:27.580
&gt;&gt; Got it.

00:00:27.580 --> 00:00:33.100
&gt;&gt; Okay, your entire instance space consists entirely of

00:00:33.100 --> 00:00:37.160
only four examples; X1, X2, X3, and X4. Got it?

00:00:37.160 --> 00:00:37.520
&gt;&gt; Got it.

00:00:37.520 --> 00:00:44.810
&gt;&gt; I have an X in a square, if that particular hypothesis does not get the

00:00:44.810 --> 00:00:48.410
correct label for that particular instance, and I

00:00:48.410 --> 00:00:50.870
have a green check mark if that particular

00:00:50.870 --> 00:00:54.290
hypothesis does in fact get the right label for that

00:00:54.290 --> 00:00:59.420
example. So, in this case hypothesis one gets examples 2, 3,

00:00:59.420 --> 00:01:03.100
and 4 correct. But gets example one wrong, while hypothesis

00:01:03.100 --> 00:01:06.160
three gets one in four correct, but two and three incorrect.

00:01:06.160 --> 00:01:09.320
&gt;&gt; I see. So, there's no hypothesis that gets everything right.

00:01:09.320 --> 00:01:10.050
&gt;&gt; Right.

00:01:10.050 --> 00:01:12.010
&gt;&gt; So does that mean that we don't have a weak

00:01:12.010 --> 00:01:16.120
learner, because then there's some distributions for which any given hypothesis

00:01:16.120 --> 00:01:17.210
is going to get things wrong.

00:01:17.210 --> 00:01:21.340
&gt;&gt; Maybe. Maybe not. Let's see. Here's what I want you to do. I want

00:01:21.340 --> 00:01:24.340
you to come up with the distribution over

00:01:24.340 --> 00:01:27.470
the 4 different examples, such that a learning

00:01:27.470 --> 00:01:29.850
algorithm that has to choose between one of

00:01:29.850 --> 00:01:32.280
those 3 hypotheses will in fact be able

00:01:32.280 --> 00:01:34.550
to find that does better than chance. That

00:01:34.550 --> 00:01:37.860
is, has an expected error greater than half.

00:01:37.860 --> 00:01:41.170
&gt;&gt; Okay. Then if you can do that, I want

00:01:41.170 --> 00:01:44.770
you to see if you can find a distribution which might not exist,

00:01:44.770 --> 00:01:47.210
such that if you have that distribution

00:01:47.210 --> 00:01:49.360
over the four examples, a learning algorithm

00:01:49.360 --> 00:01:53.380
that only looked at h1, h2 and h3 would not be

00:01:53.380 --> 00:01:57.349
able to return one of them that has an expected error greater than half.

00:01:57.349 --> 00:02:02.020
&gt;&gt; So greater than half in this case would mean three out of four, correct?

00:02:02.020 --> 00:02:04.190
Oh no, no. Oh, you're using, you want to

00:02:04.190 --> 00:02:06.210
use that definition that you, that actually took

00:02:06.210 --> 00:02:07.670
into consideration the distribution.

00:02:07.670 --> 00:02:10.960
&gt;&gt; Exactly. That's the whole point. If you, if you always need to

00:02:10.960 --> 00:02:13.000
have some distribution over your examples to

00:02:13.000 --> 00:02:14.475
really know what your expected error is.

00:02:14.475 --> 00:02:17.320
&gt;&gt; Alright. And if there is no such evil distribution, should I just fill in

00:02:17.320 --> 00:02:21.480
zeroes in all those boxes? Yes, all zeros means no such distribution. You can do

00:02:21.480 --> 00:02:24.480
it in either case. So if you put in all zeros you're saying no such

00:02:24.480 --> 00:02:26.700
distribution exists. But otherwise it should add

00:02:26.700 --> 00:02:28.260
up to one down each of the columns.

00:02:28.260 --> 00:02:30.470
&gt;&gt; It had better add up to one.

00:02:30.470 --> 00:02:31.250
&gt;&gt; Alright, I think I

00:02:31.250 --> 00:02:33.830
can give that a shot. Okay, go.

