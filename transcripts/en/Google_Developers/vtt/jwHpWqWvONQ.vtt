WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:34.450
[MUSIC PLAYING]

00:00:34.450 --> 00:00:34.762
ERIC KOLEDA: All right.

00:00:34.762 --> 00:00:37.270
Hello, and welcome to Google
Apps Unscripted.

00:00:37.270 --> 00:00:39.670
I'm Eric Koleda and this
is my co-host, Kalyan.

00:00:39.670 --> 00:00:40.470
KALYAN REDDY: Hey everyone.

00:00:40.470 --> 00:00:41.370
ERIC KOLEDA: All right.

00:00:41.370 --> 00:00:45.400
So this is our once a month,
approximately, show that we do

00:00:45.400 --> 00:00:48.130
to answer your questions
for Google Apps Script.

00:00:48.130 --> 00:00:51.430
So we're working on the
Developer Relations team.

00:00:51.430 --> 00:00:54.410
So we're engineers that help
people use Apps Script, learn

00:00:54.410 --> 00:00:57.000
about its features, help you
if you run into problems.

00:00:57.000 --> 00:01:00.200
And this is a great chance, if
you're using Apps Script or

00:01:00.200 --> 00:01:03.340
just getting started, to ask
us questions, talk about

00:01:03.340 --> 00:01:05.530
something you're working
on, or talk about any

00:01:05.530 --> 00:01:07.400
problems you have.

00:01:07.400 --> 00:01:10.240
So we have to start off with a
little bit of news and kind of

00:01:10.240 --> 00:01:12.430
like recent events in the
world of Apps Script.

00:01:12.430 --> 00:01:15.186
And so yeah, we have a few
different things that came out

00:01:15.186 --> 00:01:18.530
since our last episode, one of
which is a new blog post.

00:01:18.530 --> 00:01:20.280
So this one is actually
really cool.

00:01:20.280 --> 00:01:26.190
It's about the SETI Institute's
plans to name a

00:01:26.190 --> 00:01:27.070
new moon of Pluto.

00:01:27.070 --> 00:01:28.310
So they discovered
some new moons.

00:01:28.310 --> 00:01:30.550
And I'm sure they had some sort
of very boring numerical

00:01:30.550 --> 00:01:34.500
identifier, S/2001 13430.

00:01:34.500 --> 00:01:35.980
KALYAN REDDY: That's
a great name.

00:01:35.980 --> 00:01:38.300
ERIC KOLEDA: It rolls off
the tongue, right?

00:01:38.300 --> 00:01:41.630
And so they wanted to open it
up to the world and get some

00:01:41.630 --> 00:01:43.720
more interesting name
suggestions.

00:01:43.720 --> 00:01:45.360
Did you submit any votes?

00:01:45.360 --> 00:01:46.400
KALYAN REDDY: I actually
didn't.

00:01:46.400 --> 00:01:47.370
ERIC KOLEDA: Yeah, OK.

00:01:47.370 --> 00:01:48.840
Well, I think it could
be too late now.

00:01:48.840 --> 00:01:51.070
But obviously, there's a lot of
people who are interested

00:01:51.070 --> 00:01:51.800
in this kind of stuff.

00:01:51.800 --> 00:01:54.500
There's just people who are
interested in it in general.

00:01:54.500 --> 00:01:57.410
There's people in the astronomy
field, a lot of

00:01:57.410 --> 00:01:58.180
different opinions.

00:01:58.180 --> 00:02:01.850
So they wanted to create some
way to conduct a very large

00:02:01.850 --> 00:02:05.300
vote and also process
the data.

00:02:05.300 --> 00:02:08.280
And I guess using some kind
of normal methods

00:02:08.280 --> 00:02:09.020
really didn't work out.

00:02:09.020 --> 00:02:13.130
And so they used Apps Script
as a way to help collect,

00:02:13.130 --> 00:02:15.400
organize, and kind of collate
the data, as well as weed out

00:02:15.400 --> 00:02:19.480
things that are known funny
names or bad names or kind of

00:02:19.480 --> 00:02:21.000
get down to the meat of what
are some really good

00:02:21.000 --> 00:02:21.780
suggestions.

00:02:21.780 --> 00:02:22.530
KALYAN REDDY: Pretty cool.

00:02:22.530 --> 00:02:22.780
ERIC KOLEDA: Yeah.

00:02:22.780 --> 00:02:25.370
And so the blog post here goes
a little bit into how it was

00:02:25.370 --> 00:02:26.710
done, why it was done.

00:02:26.710 --> 00:02:28.880
And they said the results
are coming out soon.

00:02:28.880 --> 00:02:30.980
I still don't know if it's
been announced yet.

00:02:30.980 --> 00:02:32.140
I'll have to double check.

00:02:32.140 --> 00:02:33.800
But at least the time of this
writing, I don't think they

00:02:33.800 --> 00:02:36.590
announced the name.

00:02:36.590 --> 00:02:39.340
But the final decision should
be coming out soon.

00:02:39.340 --> 00:02:43.000
And I think Apps Script, we've
done our part to help make the

00:02:43.000 --> 00:02:43.980
galaxy a better place.

00:02:43.980 --> 00:02:47.070
KALYAN REDDY: And I think it
shows the simplicity and power

00:02:47.070 --> 00:02:50.910
of Apps Script, because this
looks like a very professional

00:02:50.910 --> 00:02:53.230
looking thing.

00:02:53.230 --> 00:02:55.870
It's not like, here's this
crappy form, go ahead.

00:02:55.870 --> 00:02:57.430
It looks really good.

00:02:57.430 --> 00:02:59.000
All the results sets are
presented and collected

00:02:59.000 --> 00:03:00.480
nicely, and it's very
easy to do.

00:03:00.480 --> 00:03:01.330
ERIC KOLEDA: Yeah.

00:03:01.330 --> 00:03:03.050
I mean, I think this is one of
the places where Apps Script

00:03:03.050 --> 00:03:06.935
really shines, which is you have
some sort of tasks that

00:03:06.935 --> 00:03:09.130
you need to do, but it's
not permanent, right?

00:03:09.130 --> 00:03:12.140
It's kind of a one time,
one off thing.

00:03:12.140 --> 00:03:15.440
You're not going to go hire a
company to build you a complex

00:03:15.440 --> 00:03:17.730
piece of software that
does your job.

00:03:17.730 --> 00:03:20.290
And you want to do something
better than just send us an

00:03:20.290 --> 00:03:22.170
email to this email address,
right, because who wants to

00:03:22.170 --> 00:03:23.030
deal with that?

00:03:23.030 --> 00:03:27.970
So it's right in that sweet spot
of lightweight, but still

00:03:27.970 --> 00:03:30.170
powerful and still getting your
job accomplished in a

00:03:30.170 --> 00:03:32.080
much more efficient way.

00:03:32.080 --> 00:03:33.440
So do take a look.

00:03:33.440 --> 00:03:37.010
And yeah, it's pretty cool.

00:03:37.010 --> 00:03:39.610
Another piece of news is coming
up directly after this

00:03:39.610 --> 00:03:43.320
broadcast, Arun Nagarajan, one
of our colleagues, he's over

00:03:43.320 --> 00:03:44.070
in London right now.

00:03:44.070 --> 00:03:46.710
And he's going to be doing
another Apps Script Google

00:03:46.710 --> 00:03:49.320
Developers Live episode
called Script It!

00:03:49.320 --> 00:03:50.260
With AdSense.

00:03:50.260 --> 00:03:54.930
So it's possible to make
requests to AdSense API in

00:03:54.930 --> 00:03:56.310
Apps Script, and you can do
some pretty neat things.

00:03:56.310 --> 00:03:58.710
So he's going to be sitting down
with Nick Johnson, one of

00:03:58.710 --> 00:04:01.750
our other engineers here at
Google, and kind of showing

00:04:01.750 --> 00:04:04.050
off some of the cool
things you can do.

00:04:04.050 --> 00:04:06.190
The Script It! series has
been really phenomenal.

00:04:06.190 --> 00:04:08.165
I know he did one recently
on Android.

00:04:08.165 --> 00:04:10.100
KALYAN REDDY: Yeah, that one's
really popular now.

00:04:10.100 --> 00:04:11.660
ERIC KOLEDA: Yeah,
that one blew up.

00:04:11.660 --> 00:04:12.488
KALYAN REDDY: I think
it's already up

00:04:12.488 --> 00:04:13.750
to over 5,000 views.

00:04:13.750 --> 00:04:14.520
So check that out.

00:04:14.520 --> 00:04:17.890
I think there's a lot of good
information in that one.

00:04:17.890 --> 00:04:21.650
More of like how to
very quickly get a

00:04:21.650 --> 00:04:23.550
proof of concept going.

00:04:23.550 --> 00:04:28.131
Someone posted as a comment
that they wanted to have

00:04:28.131 --> 00:04:31.640
something to keep track of
their characters on a

00:04:31.640 --> 00:04:33.850
"Dungeons and Dragons"
[? simulator. ?]

00:04:33.850 --> 00:04:36.220
And they were like, this is
perfect for me, because it

00:04:36.220 --> 00:04:39.320
doesn't require a whole lot of
back handling and setting all

00:04:39.320 --> 00:04:40.140
that infrastructure up.

00:04:40.140 --> 00:04:41.220
ERIC KOLEDA: Right.

00:04:41.220 --> 00:04:42.080
KALYAN REDDY: They can get
going really quickly.

00:04:42.080 --> 00:04:42.720
ERIC KOLEDA: Yeah, yeah.

00:04:42.720 --> 00:04:45.290
Arun is known for pulling off
some really awesome demos

00:04:45.290 --> 00:04:46.030
during these.

00:04:46.030 --> 00:04:49.130
And I think the killer one there
was having a spreadsheet

00:04:49.130 --> 00:04:51.760
that when you update it, live
pushed the changes to an

00:04:51.760 --> 00:04:52.840
Android app.

00:04:52.840 --> 00:04:54.400
So yeah, it was pretty
awesome.

00:04:54.400 --> 00:04:57.280
And I think you can expect just
as high quality demos

00:04:57.280 --> 00:04:59.820
today in his AdSense
Script It! episode.

00:04:59.820 --> 00:05:02.500
So do check that out directly
after this starting at noon

00:05:02.500 --> 00:05:03.920
Eastern time.

00:05:03.920 --> 00:05:05.500
All right, great.

00:05:05.500 --> 00:05:06.330
KALYAN REDDY: Should we do--

00:05:06.330 --> 00:05:07.880
ERIC KOLEDA: Yeah, want
to do release notes?

00:05:07.880 --> 00:05:09.500
KALYAN REDDY: All right, there's
some good stuff.

00:05:09.500 --> 00:05:12.350
ERIC KOLEDA: So if you're not
aware, we publish releases

00:05:12.350 --> 00:05:14.000
kind of like somewhat
on a weekly basis.

00:05:14.000 --> 00:05:16.790
And we capture some notes
about what's changed and

00:05:16.790 --> 00:05:19.150
what's been fixed, what new
features are there.

00:05:19.150 --> 00:05:20.490
So let's get it started.

00:05:20.490 --> 00:05:22.550
What do we have on
April 1, Kalyan?

00:05:22.550 --> 00:05:23.600
KALYAN REDDY: Let's see.

00:05:23.600 --> 00:05:28.310
April 1, we fixed a
bunch of issues.

00:05:28.310 --> 00:05:31.710
Well, first, I'll talk about the
new feature that we added.

00:05:31.710 --> 00:05:33.910
We added new methods for
Sheet.hideSheet,

00:05:33.910 --> 00:05:35.740
isSheetHidden, and showSheet.

00:05:35.740 --> 00:05:38.500
So basically, if you do have
a sheet object that you've

00:05:38.500 --> 00:05:40.660
gotten from your spreadsheet,
you can actually do operations

00:05:40.660 --> 00:05:44.430
like hide or see what the status
is and control the

00:05:44.430 --> 00:05:45.910
visibility of the individual
sheets.

00:05:45.910 --> 00:05:46.770
ERIC KOLEDA: Yeah, that's
pretty cool.

00:05:46.770 --> 00:05:48.110
I know a lot of people use--

00:05:48.110 --> 00:05:50.400
like when I have Apps Script, I
like to have a configuration

00:05:50.400 --> 00:05:53.120
sheet or maybe a sheet that
stores some data, but they

00:05:53.120 --> 00:05:54.740
don't want people mucking
around with it.

00:05:54.740 --> 00:05:57.315
And so this allows you to
programmatically create a

00:05:57.315 --> 00:06:00.830
sheet and then hide it so that
your script can bank on that,

00:06:00.830 --> 00:06:03.780
knowing that it's probably not
going to be changed by the end

00:06:03.780 --> 00:06:04.700
user accidentally.

00:06:04.700 --> 00:06:04.970
KALYAN REDDY: Right.

00:06:04.970 --> 00:06:07.750
And it also eliminates that
extra human step of going in

00:06:07.750 --> 00:06:10.060
in a minute and then hiding it
after your script runs through

00:06:10.060 --> 00:06:11.240
and sets up the spreadsheets.

00:06:11.240 --> 00:06:11.760
ERIC KOLEDA: Right, right.

00:06:11.760 --> 00:06:12.420
Yeah, it's pretty nice.

00:06:12.420 --> 00:06:12.960
KALYAN REDDY: Cool.

00:06:12.960 --> 00:06:14.080
Let's see.

00:06:14.080 --> 00:06:16.630
First fix, scripts that rely
on deleted libraries now

00:06:16.630 --> 00:06:17.910
display a clear error message.

00:06:17.910 --> 00:06:22.870
So this one, previously we had
a cryptic server, there has

00:06:22.870 --> 00:06:25.550
been an error, server
error message.

00:06:25.550 --> 00:06:28.580
And so that doesn't tell
you anything of

00:06:28.580 --> 00:06:29.100
what the problem is.

00:06:29.100 --> 00:06:32.450
The problem is that the script
was calling into some library

00:06:32.450 --> 00:06:33.950
that wasn't there anymore.

00:06:33.950 --> 00:06:36.120
And so we fixed it so that
now it says, hey,

00:06:36.120 --> 00:06:37.090
your library is deleted.

00:06:37.090 --> 00:06:38.050
ERIC KOLEDA: That's great.

00:06:38.050 --> 00:06:40.360
And I know the next one here
was a big issue for some

00:06:40.360 --> 00:06:42.760
people, which is that the script
gallery would sometimes

00:06:42.760 --> 00:06:44.180
return you an error when
you installed.

00:06:44.180 --> 00:06:45.640
And I think it actually
still installed

00:06:45.640 --> 00:06:47.010
correctly in those cases.

00:06:47.010 --> 00:06:48.620
KALYAN REDDY: Yeah, that was
another instance where the

00:06:48.620 --> 00:06:50.030
server error was displayed.

00:06:50.030 --> 00:06:53.115
So people would oftentimes
refresh the page to reinstall

00:06:53.115 --> 00:06:53.870
the script.

00:06:53.870 --> 00:06:57.020
But the original one did
eventually get installed, so

00:06:57.020 --> 00:06:58.540
they would have two copies.

00:06:58.540 --> 00:07:01.910
And there was a lot of strange
interactions with that.

00:07:01.910 --> 00:07:05.780
So we apologize if you had a lot
of users complaining about

00:07:05.780 --> 00:07:06.520
problems with this.

00:07:06.520 --> 00:07:09.670
But those concerns should
be alleviated now.

00:07:09.670 --> 00:07:10.020
ERIC KOLEDA: Cool.

00:07:10.020 --> 00:07:10.710
That's great.

00:07:10.710 --> 00:07:11.130
KALYAN REDDY: That's fixed.

00:07:11.130 --> 00:07:11.880
Let's see.

00:07:11.880 --> 00:07:13.780
Event parameter for spreadsheet
onEdit function

00:07:13.780 --> 00:07:16.410
now reports the affected range
correctly in a variety of

00:07:16.410 --> 00:07:19.152
situations where range was
previously incorrect.

00:07:19.152 --> 00:07:23.260
So this is kind of wordy, but
basically what it was is that

00:07:23.260 --> 00:07:28.180
the event parameter, we often
call it E, it gives you the

00:07:28.180 --> 00:07:30.720
range of the onEdit.

00:07:30.720 --> 00:07:33.700
And oftentimes, that range was
just the top-left cell, or it

00:07:33.700 --> 00:07:35.500
was some incorrect value that
didn't correspond to the

00:07:35.500 --> 00:07:37.010
actual edited range.

00:07:37.010 --> 00:07:37.660
ERIC KOLEDA: Yeah.

00:07:37.660 --> 00:07:38.730
KALYAN REDDY: And it
wasn't uniform.

00:07:38.730 --> 00:07:40.400
Oftentimes, it was giving
you the right answer,

00:07:40.400 --> 00:07:42.120
but not all the time.

00:07:42.120 --> 00:07:44.380
So now it should be
working uniformly.

00:07:44.380 --> 00:07:47.000
Every time you call e.range
or whatever, the

00:07:47.000 --> 00:07:50.095
eventparameter.range, you will
get the actual onEdit.

00:07:50.095 --> 00:07:52.260
ERIC KOLEDA: Yeah, I think
this is a good case where

00:07:52.260 --> 00:07:54.740
there are a lot of edge cases
when it comes to some of the

00:07:54.740 --> 00:07:58.270
functionality that's in Apps
Script, because Google Sheets

00:07:58.270 --> 00:08:00.420
provides so many different
ways to paste, so many

00:08:00.420 --> 00:08:01.180
different combinations.

00:08:01.180 --> 00:08:02.740
I remember, we were trying to
say, well, what if you take

00:08:02.740 --> 00:08:06.090
two rows and paste it into
a range of four rows?

00:08:06.090 --> 00:08:07.060
KALYAN REDDY: Right.

00:08:07.060 --> 00:08:09.970
ERIC KOLEDA: And so I think
although we strive for

00:08:09.970 --> 00:08:12.640
perfection, there's probably
going to be these little tiny

00:08:12.640 --> 00:08:14.570
inconsistencies that crop
up from time to time.

00:08:14.570 --> 00:08:16.770
They are important to us, and
we do know it creates

00:08:16.770 --> 00:08:19.690
frustration when you have
something that works 95% of

00:08:19.690 --> 00:08:22.170
the time, and then in that rare
case, it doesn't work

00:08:22.170 --> 00:08:22.490
quite right.

00:08:22.490 --> 00:08:24.750
So do report those to us
by the Issue Tracker.

00:08:24.750 --> 00:08:27.080
We'll hopefully get them into
these same release notes in

00:08:27.080 --> 00:08:30.780
the near future as fixed.

00:08:30.780 --> 00:08:33.280
And then on April 8, we did
some more exciting things.

00:08:33.280 --> 00:08:34.980
The first one here, I know
something that you've looked a

00:08:34.980 --> 00:08:37.089
lot into which is the
Document service.

00:08:37.089 --> 00:08:39.510
KALYAN REDDY: Yeah, so the
Document service, I don't know

00:08:39.510 --> 00:08:42.250
how many of you have used it
previously, but it can be a

00:08:42.250 --> 00:08:43.140
little complicated.

00:08:43.140 --> 00:08:45.070
There's a lot of
methods there.

00:08:45.070 --> 00:08:47.470
Unfortunately, when you're
trying to programmatically

00:08:47.470 --> 00:08:50.440
create a document, you do need
a lot of these methods.

00:08:50.440 --> 00:08:53.600
And it can be a simple, clean
interface like some of our

00:08:53.600 --> 00:08:54.610
other beans are.

00:08:54.610 --> 00:08:59.570
But there were areas where there
was a lot of extra stuff

00:08:59.570 --> 00:09:00.570
that you didn't need.

00:09:00.570 --> 00:09:04.840
And one great example was all of
these .asSomething methods,

00:09:04.840 --> 00:09:09.430
which is basically if you have
an object and it's like a

00:09:09.430 --> 00:09:13.370
generic object, and you want
it converted into the exact

00:09:13.370 --> 00:09:16.290
type of the object, then the
intention was you would do

00:09:16.290 --> 00:09:20.155
generic object .asParagraph
or .asText or

00:09:20.155 --> 00:09:24.080
whatever to get a sub-class.

00:09:24.080 --> 00:09:27.670
And a lot of those times, we
were having these for things

00:09:27.670 --> 00:09:28.790
that didn't make sense.

00:09:28.790 --> 00:09:32.976
So like paragraph .asBodyelement
or something.

00:09:32.976 --> 00:09:34.250
So that didn't need
to be there.

00:09:34.250 --> 00:09:35.480
So we got rid of
a lot of those.

00:09:35.480 --> 00:09:36.820
ERIC KOLEDA: Yeah, I mean, it
makes sense in the case where

00:09:36.820 --> 00:09:38.880
you say, you know,
get me all of the

00:09:38.880 --> 00:09:40.350
elements in this document.

00:09:40.350 --> 00:09:42.940
Or search for some text and tell
me what element you found

00:09:42.940 --> 00:09:45.815
it in, where you have an
element, but you don't know

00:09:45.815 --> 00:09:45.920
what it is.

00:09:45.920 --> 00:09:46.900
So you look at the type.

00:09:46.900 --> 00:09:49.520
And then you want to get the
rest of your autocomplete.

00:09:49.520 --> 00:09:52.080
So you do .as the real
type and then

00:09:52.080 --> 00:09:52.700
keep going from there.

00:09:52.700 --> 00:09:55.300
But once you know that it's a
paragraph, probably not going

00:09:55.300 --> 00:09:56.780
to want to try to transform
into an image.

00:09:56.780 --> 00:09:58.180
It's just not going to work.

00:09:58.180 --> 00:09:59.510
.asImage didn't make sense.

00:09:59.510 --> 00:10:01.260
So this was part of our
cleanup process.

00:10:01.260 --> 00:10:03.180
We're looking at doing even more
clean up in this space,

00:10:03.180 --> 00:10:04.905
but this was kind of like
our first step, kind

00:10:04.905 --> 00:10:05.710
of just pare down.

00:10:05.710 --> 00:10:08.450
Because we know that when you
can do a dot and you get an

00:10:08.450 --> 00:10:11.290
autocomplete that's 10 miles
long, it makes programming

00:10:11.290 --> 00:10:12.705
that much harder, because you're
like, oh, where do I

00:10:12.705 --> 00:10:14.390
even start to find
my function?

00:10:14.390 --> 00:10:16.440
KALYAN REDDY: And you're going
to continue seeing changes on

00:10:16.440 --> 00:10:19.020
this in the next couple
of weeks.

00:10:19.020 --> 00:10:20.930
We have pending changes
that are submitted.

00:10:20.930 --> 00:10:22.380
They're just waiting
to be rolled out.

00:10:22.380 --> 00:10:26.100
And then we're going to have it
be a nice, clean, efficient

00:10:26.100 --> 00:10:29.200
bean after a couple of weeks.

00:10:29.200 --> 00:10:29.460
ERIC KOLEDA: It's great.

00:10:29.460 --> 00:10:32.010
And then the next one here is
just kind of a little bit of a

00:10:32.010 --> 00:10:33.900
extra gloss on what we do,
which is we put some time

00:10:33.900 --> 00:10:35.770
stamps in the log output.

00:10:35.770 --> 00:10:40.180
So you can log to our log using
logger.log, which is

00:10:40.180 --> 00:10:43.290
saying the word log a
lot in one sentence.

00:10:43.290 --> 00:10:46.380
So you can just pick any value
you want, a variable, a

00:10:46.380 --> 00:10:49.080
string, some numbers you have,
stick it into a log, so that

00:10:49.080 --> 00:10:51.410
after you run, you can
see what things work.

00:10:51.410 --> 00:10:52.070
It helps you do debugging.

00:10:52.070 --> 00:10:53.940
It helps you figure out
if your script is

00:10:53.940 --> 00:10:55.620
running as it should.

00:10:55.620 --> 00:10:58.300
And so we've added just the
ability to automatically now

00:10:58.300 --> 00:11:02.140
add time stamps to that log so
that you can see the progress

00:11:02.140 --> 00:11:04.430
and see, wait, is this
the most recent run?

00:11:04.430 --> 00:11:06.080
Or did I not run it correctly?

00:11:06.080 --> 00:11:09.140
Or more of that information.

00:11:09.140 --> 00:11:11.920
And then a couple
other bug fixes.

00:11:11.920 --> 00:11:15.530
So these ones are about triggers
and about charts.

00:11:15.530 --> 00:11:18.420
And you can click into the
issues if you actually want

00:11:18.420 --> 00:11:20.126
more details.

00:11:20.126 --> 00:11:22.960
There are just some small issues
that we ran across.

00:11:22.960 --> 00:11:25.190
And we'll keep logging.

00:11:25.190 --> 00:11:26.040
We try to be complete.

00:11:26.040 --> 00:11:28.060
We want to make sure that every
time we close a bug, it

00:11:28.060 --> 00:11:29.690
gets logged into the
release notes.

00:11:29.690 --> 00:11:30.190
Occasionally, we miss them.

00:11:30.190 --> 00:11:32.415
But for completeness sake,
you'll usually find most of

00:11:32.415 --> 00:11:34.760
them in here.

00:11:34.760 --> 00:11:37.670
KALYAN REDDY: And just a quick
note, the time stamp feature,

00:11:37.670 --> 00:11:40.460
if someone was relying on the
output of the log to look a

00:11:40.460 --> 00:11:47.600
certain way, you should try to
make your scripts in such a

00:11:47.600 --> 00:11:51.170
way that that sort of thing
won't break them.

00:11:51.170 --> 00:11:54.490
But if that is the case, then
there's definitely ways to

00:11:54.490 --> 00:11:58.120
strip out that time stamp
portion and just return to the

00:11:58.120 --> 00:11:59.240
log output.

00:11:59.240 --> 00:12:02.160
Just use regular expressions,
if you know that.

00:12:02.160 --> 00:12:06.883
Just pass that into a string
formatting type thing and then

00:12:06.883 --> 00:12:07.740
you can get out the
original text.

00:12:07.740 --> 00:12:09.530
ERIC KOLEDA: Yeah, I mean,
this is kind of a larger

00:12:09.530 --> 00:12:11.620
problem, which is that when
something has always worked a

00:12:11.620 --> 00:12:14.390
certain way, sometimes you want
to add a new feature.

00:12:14.390 --> 00:12:15.550
You want to add a
new capability.

00:12:15.550 --> 00:12:18.630
But then what if someone relied
on it being that exact

00:12:18.630 --> 00:12:20.095
specific way that it
was in the past?

00:12:20.095 --> 00:12:21.530
KALYAN REDDY: It's kind of
a hard line to walk.

00:12:21.530 --> 00:12:22.490
ERIC KOLEDA: Yeah, it is.

00:12:22.490 --> 00:12:25.100
We want to make sure that we
continue to make progress and

00:12:25.100 --> 00:12:28.180
to enhance the features of
Apps Script, but we also

00:12:28.180 --> 00:12:30.390
understand that we don't want
to have something that

00:12:30.390 --> 00:12:31.950
previously worked all of
a sudden stop working

00:12:31.950 --> 00:12:32.870
because of a change.

00:12:32.870 --> 00:12:33.840
So we're trying to ride
that balance.

00:12:33.840 --> 00:12:36.600
And if you have more feedback
about a specific change,

00:12:36.600 --> 00:12:37.800
always do reach out to us.

00:12:37.800 --> 00:12:40.530
We are very conscious of that.

00:12:40.530 --> 00:12:41.090
All right.

00:12:41.090 --> 00:12:42.400
I think that brings us to
the question and answer

00:12:42.400 --> 00:12:44.310
portion of the show.

00:12:44.310 --> 00:12:46.570
So we have some folks
on the live Hangout.

00:12:46.570 --> 00:12:49.430
Let's go there first and see if
anybody has any questions.

00:12:49.430 --> 00:12:52.940
Hello, and welcome to Google
Apps Unscripted.

00:12:52.940 --> 00:12:54.210
HARRY OOSTERVEEN: Yeah.

00:12:54.210 --> 00:12:54.996
Thank you.

00:12:54.996 --> 00:12:56.020
I have a question.

00:12:56.020 --> 00:12:57.250
ERIC KOLEDA: Sure, go ahead.

00:12:57.250 --> 00:12:58.510
It's Harry, right?

00:12:58.510 --> 00:12:58.980
HARRY OOSTERVEEN: Yeah.

00:12:58.980 --> 00:13:00.660
It's Harry Oosterveen from
the Netherlands.

00:13:04.060 --> 00:13:08.080
I'm working on a script to--
well, I have a script moving

00:13:08.080 --> 00:13:10.350
messages from Gmail
to Evernote.

00:13:10.350 --> 00:13:17.030
And I tried to catch errors
that the users can't use

00:13:17.030 --> 00:13:19.910
anyway, like server, it
cannot be reached.

00:13:19.910 --> 00:13:22.890
And recently, I think you
mentioned it, it also gives

00:13:22.890 --> 00:13:28.960
errors if a library cannot be
found or is not reachable.

00:13:28.960 --> 00:13:33.040
Is there a way to catch those
errors, to avoid that people

00:13:33.040 --> 00:13:35.870
get emails about it?

00:13:35.870 --> 00:13:36.230
ERIC KOLEDA: Yes.

00:13:36.230 --> 00:13:37.540
KALYAN REDDY: You should be able
to, yeah, just put that

00:13:37.540 --> 00:13:38.640
in a [INAUDIBLE] catch, right?

00:13:38.640 --> 00:13:39.805
ERIC KOLEDA: So I
think there's--

00:13:39.805 --> 00:13:41.610
HARRY OOSTERVEEN: There's
no line number.

00:13:41.610 --> 00:13:43.410
Usually if there's an
error, it gives a

00:13:43.410 --> 00:13:44.210
line number, you know.

00:13:44.210 --> 00:13:46.323
OK, there I should
try and catch it.

00:13:46.323 --> 00:13:47.990
But for this one, there's
no line number.

00:13:47.990 --> 00:13:48.420
ERIC KOLEDA: Yeah.

00:13:48.420 --> 00:13:49.750
KALYAN REDDY: You as a
programmer though, you know

00:13:49.750 --> 00:13:53.310
when you're making the call to
the library that's missing?

00:13:53.310 --> 00:13:53.610
HARRY OOSTERVEEN: Yeah.

00:13:53.610 --> 00:13:55.130
KALYAN REDDY: So if
you do, wrap that.

00:13:55.130 --> 00:13:56.370
ERIC KOLEDA: Well,
it could be--

00:13:56.370 --> 00:13:58.380
HARRY OOSTERVEEN: Is it
not checked before?

00:13:58.380 --> 00:14:00.160
ERIC KOLEDA: That's what I'm
wondering, yeah, if perhaps

00:14:00.160 --> 00:14:04.173
when the script is first loaded,
when it's trying to

00:14:04.173 --> 00:14:06.670
load it for the first time to
begin execution, I wonder if

00:14:06.670 --> 00:14:08.255
that point, if it's actually
checking the library.

00:14:11.980 --> 00:14:15.170
I guess I always had assumed
that when this kind of weird

00:14:15.170 --> 00:14:18.210
library inaccessibility was more
of an edge case, not like

00:14:18.210 --> 00:14:20.810
a normal thing people
could run into.

00:14:20.810 --> 00:14:24.370
Is it something you're finding
cropping up a lot?

00:14:24.370 --> 00:14:25.720
HARRY OOSTERVEEN: I noticed
it popped up a few

00:14:25.720 --> 00:14:27.780
times in the past days.

00:14:27.780 --> 00:14:28.200
ERIC KOLEDA: I see.

00:14:28.200 --> 00:14:30.200
KALYAN REDDY: And is it that
the library was deleted in

00:14:30.200 --> 00:14:32.750
each case, or there was
a temporary transient

00:14:32.750 --> 00:14:32.800
[INAUDIBLE]?

00:14:32.800 --> 00:14:35.870
HARRY OOSTERVEEN: It's a script
that's running every

00:14:35.870 --> 00:14:37.015
quarter of an hour.

00:14:37.015 --> 00:14:42.170
And usually once every couple
of days it can't find it.

00:14:42.170 --> 00:14:45.050
So probably some server
or connection error.

00:14:45.050 --> 00:14:45.500
ERIC KOLEDA: Gotcha.

00:14:45.500 --> 00:14:45.750
Yeah.

00:14:45.750 --> 00:14:49.070
So I guess the first step
usually is like when we have

00:14:49.070 --> 00:14:51.825
an error, the first time that
it pops up it's usually that

00:14:51.825 --> 00:14:52.970
unknown script error.

00:14:52.970 --> 00:14:54.410
And we're like, well,
that's not helpful.

00:14:54.410 --> 00:14:57.350
So we try to categorize it,
display a good error message.

00:14:57.350 --> 00:15:00.210
But then that helps us figure
out how often it's occurring

00:15:00.210 --> 00:15:01.890
and helps people give
us more information.

00:15:01.890 --> 00:15:04.480
So I think now that we have a
good error message, you can

00:15:04.480 --> 00:15:07.870
help us by telling us that
you're getting these errors on

00:15:07.870 --> 00:15:10.110
a regular basis, even though
the script hasn't changed

00:15:10.110 --> 00:15:11.690
permissions, and it's
still available.

00:15:11.690 --> 00:15:13.780
And then we can kind of dig into
the fact about why is it

00:15:13.780 --> 00:15:15.295
that it's popping up when
it shouldn't be.

00:15:15.295 --> 00:15:16.265
HARRY OOSTERVEEN: It's
not regular.

00:15:16.265 --> 00:15:18.210
It's incidental.

00:15:18.210 --> 00:15:18.900
KALYAN REDDY: Right.

00:15:18.900 --> 00:15:22.470
If you're seeing that, then
please open an issue with your

00:15:22.470 --> 00:15:24.840
script and the library's key.

00:15:24.840 --> 00:15:27.940
And then we'll dig into those
specific instances and see why

00:15:27.940 --> 00:15:29.670
they're being flaky
in this case.

00:15:29.670 --> 00:15:30.652
HARRY OOSTERVEEN: Yeah.

00:15:30.652 --> 00:15:31.143
ERIC KOLEDA: Great.

00:15:31.143 --> 00:15:31.634
HARRY OOSTERVEEN: Good.

00:15:31.634 --> 00:15:32.125
Thank you.

00:15:32.125 --> 00:15:33.960
ERIC KOLEDA: Thank you.

00:15:33.960 --> 00:15:35.730
KALYAN REDDY: Anyone else on the
Hangout want to come in?

00:15:38.950 --> 00:15:40.050
All right.

00:15:40.050 --> 00:15:41.970
ERIC KOLEDA: Feel free to join
in when you have a question.

00:15:41.970 --> 00:15:43.780
If not, I think we have
a Google Moderator.

00:15:43.780 --> 00:15:45.620
So if you're watching on YouTube
and you don't feel

00:15:45.620 --> 00:15:48.860
like joining the Hangout or
don't have a webcam and mic,

00:15:48.860 --> 00:15:53.760
on our developers.google.com
page for this event, you can

00:15:53.760 --> 00:15:54.310
go in there.

00:15:54.310 --> 00:15:58.660
And there's a link to our Google
Moderator where you can

00:15:58.660 --> 00:16:00.490
then enter your questions.

00:16:00.490 --> 00:16:00.930
KALYAN REDDY: Let's see.

00:16:00.930 --> 00:16:03.350
We have a couple of questions
on there now.

00:16:03.350 --> 00:16:06.420
So let's take this top
question here.

00:16:06.420 --> 00:16:08.440
"Any time line on when
interactive Google Maps will

00:16:08.440 --> 00:16:11.810
be part of the APIs, so besides
the staticMaps class?"

00:16:11.810 --> 00:16:12.330
ERIC KOLEDA: Gotcha.

00:16:12.330 --> 00:16:16.040
So one of our services in Apps
Script is the Maps service,

00:16:16.040 --> 00:16:17.340
which provides a bunch
of different

00:16:17.340 --> 00:16:18.310
mapping related features.

00:16:18.310 --> 00:16:19.870
But one of them is the ability
to generate what are called

00:16:19.870 --> 00:16:20.970
Static Maps.

00:16:20.970 --> 00:16:22.400
So these are image maps.

00:16:22.400 --> 00:16:23.450
They're not draggable.

00:16:23.450 --> 00:16:26.090
They're not clickable
or resizable.

00:16:26.090 --> 00:16:27.380
They're just an image.

00:16:27.380 --> 00:16:30.365
It's useful when you want to
send it in an email or embed

00:16:30.365 --> 00:16:34.430
it into a doc, but it doesn't
give you the full power of the

00:16:34.430 --> 00:16:37.770
full Maps API that you
would see if you just

00:16:37.770 --> 00:16:39.740
did it on the web.

00:16:39.740 --> 00:16:41.860
So it is something that the team
has been looking into.

00:16:41.860 --> 00:16:45.210
Unfortunately, I can't give
you an exact timeline.

00:16:45.210 --> 00:16:46.710
Obviously, timelines in general
are hard to do in

00:16:46.710 --> 00:16:47.540
software development.

00:16:47.540 --> 00:16:50.430
And we don't want to get your
hopes up unnecessarily.

00:16:50.430 --> 00:16:53.760
So do continue to
ask us about it.

00:16:53.760 --> 00:16:56.810
And the more information you
can provide about how it's

00:16:56.810 --> 00:16:59.530
important to you, the more we
can take that information,

00:16:59.530 --> 00:17:02.930
give it to the actual product
and engineering teams, and get

00:17:02.930 --> 00:17:04.880
them to take more
action on it.

00:17:04.880 --> 00:17:08.599
But do thank you for
checking in.

00:17:08.599 --> 00:17:09.050
All right.

00:17:09.050 --> 00:17:10.800
I think we have some other
questions on here, too.

00:17:10.800 --> 00:17:13.900
So another one here, directed
specifically at me, which is

00:17:13.900 --> 00:17:15.460
pretty cool.

00:17:15.460 --> 00:17:18.280
Says that I'm the owner of
issue 917 on the issue

00:17:18.280 --> 00:17:19.480
tracker, which is
about getting an

00:17:19.480 --> 00:17:21.300
array of name ranges.

00:17:21.300 --> 00:17:23.319
Is there any progress on that?

00:17:23.319 --> 00:17:26.329
And apparently some other
issues that are related.

00:17:26.329 --> 00:17:27.400
So this is a good point.

00:17:27.400 --> 00:17:31.960
I think it is possible today
to get a named range if you

00:17:31.960 --> 00:17:32.610
know the name.

00:17:32.610 --> 00:17:32.940
KALYAN REDDY: Yeah.

00:17:32.940 --> 00:17:33.879
You can get range by
name, passing the

00:17:33.879 --> 00:17:34.460
string of the name.

00:17:34.460 --> 00:17:35.490
ERIC KOLEDA: Right.

00:17:35.490 --> 00:17:39.850
But there's no way for you to
discover a la the sidebar that

00:17:39.850 --> 00:17:42.330
appears in the UI what all
the name ranges are

00:17:42.330 --> 00:17:45.080
that have been defined.

00:17:45.080 --> 00:17:48.250
I do not know specifically about
that specific issue,

00:17:48.250 --> 00:17:50.790
about where they are, if
they're planning on it.

00:17:50.790 --> 00:17:53.180
But I'll revisit that again and
talk to them and see if

00:17:53.180 --> 00:17:54.890
there's any progress.

00:17:54.890 --> 00:17:58.440
And then we'll update you
again on that issue.

00:17:58.440 --> 00:17:59.340
KALYAN REDDY: Cool.

00:17:59.340 --> 00:18:01.560
ERIC KOLEDA: And feel free to
actually write a little

00:18:01.560 --> 00:18:03.760
message in the issue
tracker there.

00:18:03.760 --> 00:18:07.780
And that gets into my email,
and I take a look at those.

00:18:07.780 --> 00:18:09.070
Great.

00:18:09.070 --> 00:18:10.520
What else do we have Kalyan?

00:18:10.520 --> 00:18:11.920
KALYAN REDDY: Let's see.

00:18:11.920 --> 00:18:12.980
"Will it be possible
to use chart

00:18:12.980 --> 00:18:14.800
services from HTML service?

00:18:14.800 --> 00:18:17.210
For instance, use GeoChart
services?

00:18:17.210 --> 00:18:19.620
At the moment, Caja prevents me
from using something like

00:18:19.620 --> 00:18:21.321
this."

00:18:21.321 --> 00:18:23.070
ERIC KOLEDA: Yeah, so this is
actually kind of along the

00:18:23.070 --> 00:18:24.595
same lines as the maps, right?

00:18:24.595 --> 00:18:25.600
KALYAN REDDY: Yeah.

00:18:25.600 --> 00:18:27.850
So you want the dynamic
functionality

00:18:27.850 --> 00:18:28.950
of the Charts Service.

00:18:28.950 --> 00:18:31.990
We do have a Charts bean,
and it outputs a

00:18:31.990 --> 00:18:34.145
pre-populated graph.

00:18:34.145 --> 00:18:36.790
And you could add filters
to it, so it is

00:18:36.790 --> 00:18:37.620
a little bit dynamic--

00:18:37.620 --> 00:18:38.370
ERIC KOLEDA: A little
bit dynamic, yeah.

00:18:38.370 --> 00:18:38.850
KALYAN REDDY: --in a sense.

00:18:38.850 --> 00:18:41.380
But it doesn't have, you know,
like you can roll over and see

00:18:41.380 --> 00:18:42.380
fancy things.

00:18:42.380 --> 00:18:43.880
You can have the pie chart
that comes up.

00:18:43.880 --> 00:18:44.600
ERIC KOLEDA: Most likely.

00:18:44.600 --> 00:18:48.280
I know that the visualization
APIs have a ton of options,

00:18:48.280 --> 00:18:49.120
ton of options.

00:18:49.120 --> 00:18:50.280
KALYAN REDDY: And different
chart types as well.

00:18:50.280 --> 00:18:50.780
In GeoChart--

00:18:50.780 --> 00:18:51.440
ERIC KOLEDA: Yeah,
that's true.

00:18:51.440 --> 00:18:53.560
I think that's the chart we
don't support in the Chart

00:18:53.560 --> 00:18:54.800
Service today.

00:18:54.800 --> 00:18:56.940
So yeah, I think that's--

00:18:56.940 --> 00:19:00.930
we want to allow people to use
the full Google Developer

00:19:00.930 --> 00:19:04.700
stack in Apps Script as
much as possible.

00:19:04.700 --> 00:19:08.915
With Caja, there are some
limitations today, where

00:19:08.915 --> 00:19:10.590
Caja's very, very strict--

00:19:10.590 --> 00:19:12.900
that's our sanitization agent
for HTML service--

00:19:12.900 --> 00:19:15.680
very strict about what kind
of JavaScript you can use.

00:19:15.680 --> 00:19:18.280
And I think some of this
JavaScript doesn't quite

00:19:18.280 --> 00:19:19.870
conform correctly today.

00:19:19.870 --> 00:19:21.940
And we're working with all those
teams, and we're working

00:19:21.940 --> 00:19:24.800
with the Caja team to
kind of help make

00:19:24.800 --> 00:19:26.125
this story a lot better.

00:19:26.125 --> 00:19:28.700
So something that we're
actively looking into.

00:19:28.700 --> 00:19:30.480
KALYAN REDDY: So this falls
into a larger class of

00:19:30.480 --> 00:19:34.590
questions, as you mentioned, on
security and using Caja for

00:19:34.590 --> 00:19:35.355
sanitization.

00:19:35.355 --> 00:19:37.660
And yeah, we're definitely
looking into that.

00:19:37.660 --> 00:19:38.650
ERIC KOLEDA: Yeah.

00:19:38.650 --> 00:19:41.970
Unfortunately, no news today
about what you could do, but

00:19:41.970 --> 00:19:44.240
it is something that
we're aware of.

00:19:44.240 --> 00:19:44.480
All right.

00:19:44.480 --> 00:19:46.058
Let's just check in on the
Hangout again, since I know

00:19:46.058 --> 00:19:46.840
we've got some people
on there.

00:19:46.840 --> 00:19:48.330
Any other questions that
have popped up?

00:19:48.330 --> 00:19:48.830
Thoughts?

00:19:48.830 --> 00:19:50.190
Cool projects you're
working on?

00:19:54.046 --> 00:19:56.940
No?

00:19:56.940 --> 00:19:57.250
Oh.

00:19:57.250 --> 00:19:57.790
HARRY OOSTERVEEN: [INAUDIBLE].

00:19:57.790 --> 00:19:58.260
ERIC KOLEDA: Sure.

00:19:58.260 --> 00:20:00.938
Go ahead, Harry.

00:20:00.938 --> 00:20:02.160
HARRY OOSTERVEEN: I
had another issue

00:20:02.160 --> 00:20:04.500
that I bumped into.

00:20:04.500 --> 00:20:08.790
In my office, we tried to make
clear what groups we have

00:20:08.790 --> 00:20:12.240
within Google Apps and
what are the members.

00:20:12.240 --> 00:20:15.880
And we have organized a bit
with groups and subgroups.

00:20:15.880 --> 00:20:19.190
And on the web interface, if
you look at the groups, you

00:20:19.190 --> 00:20:20.510
can see the members.

00:20:20.510 --> 00:20:22.120
And also, the groups
that are member of

00:20:22.120 --> 00:20:23.540
another group are shown.

00:20:23.540 --> 00:20:28.670
But if you go to use the same
function getUser in Google

00:20:28.670 --> 00:20:32.140
Apps Script, you only get users
but not the groups that

00:20:32.140 --> 00:20:33.422
are a member of the group.

00:20:33.422 --> 00:20:34.778
ERIC KOLEDA: Yeah.

00:20:34.778 --> 00:20:36.000
HARRY OOSTERVEEN: I
didn't find a way

00:20:36.000 --> 00:20:37.760
to get those groups.

00:20:37.760 --> 00:20:40.230
ERIC KOLEDA: Yeah, I believe
that it is a limitation.

00:20:40.230 --> 00:20:42.950
You're talking about using
the Groups App?

00:20:42.950 --> 00:20:44.400
KALYAN REDDY: So this is
not the domain group?

00:20:44.400 --> 00:20:44.950
ERIC KOLEDA: Yeah.

00:20:44.950 --> 00:20:48.030
There's two different ways
to access groups

00:20:48.030 --> 00:20:49.530
in Google Apps Script.

00:20:49.530 --> 00:20:53.190
One is with the domain services,
and one is with the

00:20:53.190 --> 00:20:54.500
group services.

00:20:54.500 --> 00:20:57.510
The domain services, you need
to be a domain admin.

00:20:57.510 --> 00:21:00.290
And it allows you to access your
domain's groups, and it

00:21:00.290 --> 00:21:03.690
gives you a more complete
set of information.

00:21:03.690 --> 00:21:04.470
HARRY OOSTERVEEN: OK.

00:21:04.470 --> 00:21:05.720
ERIC KOLEDA: Yeah.

00:21:05.720 --> 00:21:07.500
So if you're a domain admin
and if these are domain

00:21:07.500 --> 00:21:08.490
groups, that could
be an interesting

00:21:08.490 --> 00:21:09.040
thing to look into.

00:21:09.040 --> 00:21:11.800
Because I think instead of
giving you user objects that

00:21:11.800 --> 00:21:14.610
correspond to users, like the
Groups App does, it gives you

00:21:14.610 --> 00:21:16.660
a list of email addresses that
could be another group or

00:21:16.660 --> 00:21:18.000
could be an individual.

00:21:18.000 --> 00:21:19.210
KALYAN REDDY: And
you'll actually

00:21:19.210 --> 00:21:20.700
recursively drill into that.

00:21:20.700 --> 00:21:23.015
That's one of the recent issues
that we fixed where

00:21:23.015 --> 00:21:25.500
there was a problem when you
recursively said, is this

00:21:25.500 --> 00:21:26.860
email a group or a user?

00:21:26.860 --> 00:21:29.930
And then go into, is
this sub-list of

00:21:29.930 --> 00:21:32.270
emails a user or a group?

00:21:32.270 --> 00:21:32.970
But we fixed that.

00:21:32.970 --> 00:21:35.810
And yeah, you could enumerate
each email.

00:21:35.810 --> 00:21:38.590
And if that email is an
expansion for more email

00:21:38.590 --> 00:21:40.640
addresses, if it's a group,
then you can enumerate all

00:21:40.640 --> 00:21:43.120
those until you have all of the
user lists, if you are a

00:21:43.120 --> 00:21:44.711
domain admin.

00:21:44.711 --> 00:21:46.120
HARRY OOSTERVEEN: Yeah, so it's
a domain service that

00:21:46.120 --> 00:21:47.206
they have to explore further.

00:21:47.206 --> 00:21:47.610
KALYAN REDDY: Right.

00:21:47.610 --> 00:21:48.260
ERIC KOLEDA: OK.

00:21:48.260 --> 00:21:51.190
But you did point out that is
a limitation of the Groups

00:21:51.190 --> 00:21:54.650
App, which is the one for
accessing all Google Groups,

00:21:54.650 --> 00:21:59.505
that it only returns concrete
individuals, not groups that

00:21:59.505 --> 00:22:01.980
are then members
of that group.

00:22:01.980 --> 00:22:02.590
HARRY OOSTERVEEN: Right.

00:22:02.590 --> 00:22:03.310
Thank you.

00:22:03.310 --> 00:22:03.920
That's helpful.

00:22:03.920 --> 00:22:06.635
ERIC KOLEDA: No problem.

00:22:06.635 --> 00:22:09.510
Anybody else in the Hangout,
feel free to chime in.

00:22:09.510 --> 00:22:13.630
And we'll just keep rolling with
the Moderator for now.

00:22:13.630 --> 00:22:14.880
So the next one here is--

00:22:17.090 --> 00:22:18.340
KALYAN REDDY: Someone
on the Hangout?

00:22:18.340 --> 00:22:20.200
ERIC KOLEDA: Do we have a
question on the Hangout?

00:22:20.200 --> 00:22:21.190
We do.

00:22:21.190 --> 00:22:22.440
Hey.

00:22:24.210 --> 00:22:27.010
KALYAN REDDY: Yeah, go ahead.

00:22:27.010 --> 00:22:30.750
ERIC KOLEDA: We can't
hear you.

00:22:30.750 --> 00:22:32.760
We are getting some sign
language, though.

00:22:32.760 --> 00:22:33.290
KALYAN REDDY: One second.

00:22:33.290 --> 00:22:34.890
ERIC KOLEDA: Oh, he's pointing
to the chat.

00:22:34.890 --> 00:22:37.265
Oh, I see.

00:22:37.265 --> 00:22:38.390
KALYAN REDDY: Oh, there's
some chat questions.

00:22:38.390 --> 00:22:39.400
ERIC KOLEDA: There's some
chat questions, yeah.

00:22:39.400 --> 00:22:41.070
Unfortunately, we can't get
the chat here in the room,

00:22:41.070 --> 00:22:42.450
only in our studio.

00:22:42.450 --> 00:22:44.510
So we'll have our producer
relay some of the chat

00:22:44.510 --> 00:22:45.500
questions to us.

00:22:45.500 --> 00:22:49.050
KALYAN REDDY: And we'll relay
that to everyone else.

00:22:49.050 --> 00:22:51.210
ERIC KOLEDA: Yes, we will
work on enabling

00:22:51.210 --> 00:22:52.730
better chat in the future.

00:22:52.730 --> 00:22:55.410
HARRY OOSTERVEEN: But we
could read the chat.

00:22:55.410 --> 00:22:56.050
ERIC KOLEDA: Oh, that's right.

00:22:56.050 --> 00:22:56.980
At least Harry has it.

00:22:56.980 --> 00:22:58.660
HARRY OOSTERVEEN: It's a bit too
long to read it for you.

00:22:58.660 --> 00:23:01.340
ERIC KOLEDA: Ah, OK.

00:23:01.340 --> 00:23:03.540
Well, Harry, can you
do us a favor and

00:23:03.540 --> 00:23:04.910
summarize the chat question?

00:23:09.230 --> 00:23:10.880
HARRY OOSTERVEEN: There's
a lot of code in it.

00:23:10.880 --> 00:23:11.730
ERIC KOLEDA: Oh, OK.

00:23:11.730 --> 00:23:12.560
KALYAN REDDY: I see.

00:23:12.560 --> 00:23:13.640
HARRY OOSTERVEEN: I
have to scroll up.

00:23:13.640 --> 00:23:17.040
I have an Apps Script that lets
users insert a link to a

00:23:17.040 --> 00:23:18.150
Google Drive file.

00:23:18.150 --> 00:23:22.240
But why is the padding around
select panel so big?

00:23:22.240 --> 00:23:25.710
Setting the width and height
doesn't seem to alter anything

00:23:25.710 --> 00:23:28.840
unless I display browser to
the message box, then the

00:23:28.840 --> 00:23:30.960
panel stays open.

00:23:30.960 --> 00:23:33.350
And if I click Cancel,
the panel stays open.

00:23:33.350 --> 00:23:35.526
The code is-- and I'm not
going to read that.

00:23:35.526 --> 00:23:36.776
ERIC KOLEDA: OK.

00:23:38.680 --> 00:23:41.410
So whenever there's a question
that involves us looking at

00:23:41.410 --> 00:23:44.910
code or going over something,
trying it out, it's probably a

00:23:44.910 --> 00:23:48.100
better way for us to handle
that question

00:23:48.100 --> 00:23:49.380
on the issue tracker.

00:23:49.380 --> 00:23:53.370
Obviously, here in a studio,
we're not at our best for

00:23:53.370 --> 00:23:54.920
debugging code on the spot.

00:23:54.920 --> 00:23:57.960
So do open an issue tracker
item if there isn't one.

00:23:57.960 --> 00:23:59.430
And if there is one--

00:23:59.430 --> 00:24:01.510
KALYAN REDDY: If there is an
issue that you determine with

00:24:01.510 --> 00:24:02.580
App Script.

00:24:02.580 --> 00:24:04.440
Otherwise, you know, on Stack
Overflow, it's another great

00:24:04.440 --> 00:24:05.080
place to answer.

00:24:05.080 --> 00:24:05.950
ERIC KOLEDA: That's a perfectly
good point.

00:24:05.950 --> 00:24:07.880
If you're trying to figure
out how to do

00:24:07.880 --> 00:24:09.450
something, Stack Overflow.

00:24:09.450 --> 00:24:12.170
If you found an actual
problem in Apps

00:24:12.170 --> 00:24:13.770
Script, the issue tracker.

00:24:13.770 --> 00:24:16.410
Excellent point, Kalyan.

00:24:16.410 --> 00:24:18.700
So unfortunately, I'm not
familiar with the exact

00:24:18.700 --> 00:24:20.300
problem that was described.

00:24:20.300 --> 00:24:23.140
But we can definitely take a
look at it once it's either on

00:24:23.140 --> 00:24:24.575
one of those two forums.

00:24:24.575 --> 00:24:25.590
KALYAN REDDY: Let's see.

00:24:25.590 --> 00:24:27.980
We've got about five
minutes here.

00:24:27.980 --> 00:24:28.580
ERIC KOLEDA: Yeah.

00:24:28.580 --> 00:24:29.440
We've got a couple
minutes left.

00:24:29.440 --> 00:24:30.130
And we actually have
a couple other

00:24:30.130 --> 00:24:30.800
questions on the Moderator.

00:24:30.800 --> 00:24:34.260
So one was menu items acting as
anchors for the redirect,

00:24:34.260 --> 00:24:37.150
similar to the way that in
Sheets, if you click on some

00:24:37.150 --> 00:24:39.412
menu items, it pops open a help
page or redirects you to

00:24:39.412 --> 00:24:41.050
a help page.

00:24:41.050 --> 00:24:42.890
I think we found out that that's
not going to be able to

00:24:42.890 --> 00:24:43.980
be possible.

00:24:43.980 --> 00:24:48.440
KALYAN REDDY: Yeah, I think you
can't directly say, you

00:24:48.440 --> 00:24:49.600
know, [? menuitem.redirect ?]

00:24:49.600 --> 00:24:50.100
something.

00:24:50.100 --> 00:24:51.470
We don't have that
functionality.

00:24:51.470 --> 00:24:57.490
But an alternative could be,
if it's a simple help page,

00:24:57.490 --> 00:25:00.240
then you can create that as an
HTML service page and then

00:25:00.240 --> 00:25:02.520
show that whenever someone
clicks the menu.

00:25:02.520 --> 00:25:06.800
ERIC KOLEDA: Yeah, so like when
you were in a spreadsheet

00:25:06.800 --> 00:25:10.410
and you have a menu item, you
can't redirect that whole tab

00:25:10.410 --> 00:25:12.960
or that whole window, right?

00:25:12.960 --> 00:25:15.640
You can pop up a dialogue and
then show your own content in

00:25:15.640 --> 00:25:16.595
that dialogue.

00:25:16.595 --> 00:25:18.596
And one of the things you can do
in that dialogue is show an

00:25:18.596 --> 00:25:20.360
anchor that someone could click
that could then open a

00:25:20.360 --> 00:25:23.240
new tab, where they can then
see some external content.

00:25:23.240 --> 00:25:25.520
So there are some options.

00:25:25.520 --> 00:25:28.290
It's probably not exactly what
you were looking for, but

00:25:28.290 --> 00:25:29.300
unfortunately, that's
what we have today.

00:25:29.300 --> 00:25:33.690
There is usability and security
concerns when a

00:25:33.690 --> 00:25:36.880
script can redirect a user
without them really being

00:25:36.880 --> 00:25:37.410
aware of it.

00:25:37.410 --> 00:25:39.690
So that's why it's
not possible.

00:25:39.690 --> 00:25:40.093
KALYAN REDDY: It's a tradeoff.

00:25:40.093 --> 00:25:40.900
ERIC KOLEDA: Yeah.

00:25:40.900 --> 00:25:41.310
KALYAN REDDY: Let's see.

00:25:41.310 --> 00:25:43.336
The last question that we had on
the moderator is, "Can you

00:25:43.336 --> 00:25:46.060
add a working example of how
to use the GmailAttachment

00:25:46.060 --> 00:25:50.040
class in combination with
.getSize method?" You know, we

00:25:50.040 --> 00:25:52.670
just revamped a lot of our
reference documentation and

00:25:52.670 --> 00:25:57.390
added a lot of sample code where
there wasn't any before.

00:25:57.390 --> 00:25:59.400
So I'm not particularly
familiar with this

00:25:59.400 --> 00:26:00.010
GmailAttachment class.

00:26:00.010 --> 00:26:02.970
But if there isn't a code
sample there, then we'll

00:26:02.970 --> 00:26:05.400
definitely look at
adding that.

00:26:05.400 --> 00:26:06.810
ERIC KOLEDA: I remember when
.getSize was added.

00:26:06.810 --> 00:26:08.945
And it had something to do with
that sometimes people

00:26:08.945 --> 00:26:10.780
just wanted to know the size
of their attachment without

00:26:10.780 --> 00:26:11.910
actually fetching the content.

00:26:11.910 --> 00:26:14.460
And so it was a way to be more
efficient on our side.

00:26:14.460 --> 00:26:16.775
Rather than have you download
all the bytes and then count

00:26:16.775 --> 00:26:18.840
them, we provided a .getSize
method that just

00:26:18.840 --> 00:26:20.320
tells you the number.

00:26:20.320 --> 00:26:23.380
And it's a little more efficient
on everybody.

00:26:23.380 --> 00:26:24.690
So that's what .getSize does.

00:26:24.690 --> 00:26:28.000
I don't know if there's anything
specifically hard or

00:26:28.000 --> 00:26:28.890
difficult about using it.

00:26:28.890 --> 00:26:31.450
It should just work as
if it was any other

00:26:31.450 --> 00:26:34.100
part of Apps Script.

00:26:34.100 --> 00:26:37.134
But if you do run into an issue,
Stack Overflow would be

00:26:37.134 --> 00:26:39.455
a good place to ask.

00:26:39.455 --> 00:26:42.410
And there's one more that just
phased in as we were talking,

00:26:42.410 --> 00:26:45.000
which is about transferring the
ownership of a file from

00:26:45.000 --> 00:26:47.910
Apps Script to another user.

00:26:47.910 --> 00:26:49.480
Do not think that is
possible today.

00:26:49.480 --> 00:26:52.080
So we have the Docs list service
that allows you to

00:26:52.080 --> 00:26:54.202
access things in your
Google Drive.

00:26:54.202 --> 00:26:56.360
But I don't believe it allows
for determining

00:26:56.360 --> 00:26:57.150
or setting the owner.

00:26:57.150 --> 00:26:58.660
Am I right on that?

00:26:58.660 --> 00:27:00.133
KALYAN REDDY: I think so.

00:27:00.133 --> 00:27:01.370
I think you are.

00:27:01.370 --> 00:27:02.450
ERIC KOLEDA: Well, that
would be the place

00:27:02.450 --> 00:27:03.340
where it would be.

00:27:03.340 --> 00:27:06.800
And I do not believe it's one
of the features there.

00:27:06.800 --> 00:27:08.940
We do know that ownership
transfer is a big thing,

00:27:08.940 --> 00:27:11.230
especially within organizations
where employees

00:27:11.230 --> 00:27:12.590
move and you want to make
sure that their

00:27:12.590 --> 00:27:15.070
documents don't all disappear.

00:27:15.070 --> 00:27:17.900
I know there are ways built
into the Google Apps for

00:27:17.900 --> 00:27:19.920
Business administrative
paddles that

00:27:19.920 --> 00:27:21.450
allow you to do various--

00:27:21.450 --> 00:27:24.210
like transfer all the ownership
for all this user's

00:27:24.210 --> 00:27:26.960
documents when you're disabling
their account.

00:27:26.960 --> 00:27:29.740
So if it's that use case,
there are some product

00:27:29.740 --> 00:27:30.850
features that will help you.

00:27:30.850 --> 00:27:33.180
In Apps Script, I don't
think that's a

00:27:33.180 --> 00:27:35.955
possibility today, though.

00:27:35.955 --> 00:27:36.390
All right.

00:27:36.390 --> 00:27:38.280
Well, I think we're just
about out of time.

00:27:38.280 --> 00:27:41.090
We want to make sure we leave
time for you guys to get over

00:27:41.090 --> 00:27:44.190
to our next Google Developer
Live episode, hosted by Arun

00:27:44.190 --> 00:27:47.760
in London, about Script
It! with AdSense.

00:27:47.760 --> 00:27:48.770
Head on over.

00:27:48.770 --> 00:27:51.020
You can find that link to that
broadcast on GoogleDevelopers

00:27:51.020 --> 00:27:55.160
.google.com/live.

00:27:55.160 --> 00:27:56.840
And it should be the
first one there.

00:27:56.840 --> 00:27:58.140
KALYAN REDDY: And it's the next
live event upcoming on

00:27:58.140 --> 00:28:00.920
the Google Developers channel
on YouTube as well.

00:28:00.920 --> 00:28:01.830
ERIC KOLEDA: Awesome.

00:28:01.830 --> 00:28:04.030
So that's it for us today.

00:28:04.030 --> 00:28:05.270
Thank you for joining live.

00:28:05.270 --> 00:28:06.840
Thanks for the questions
on the Moderator.

00:28:06.840 --> 00:28:08.570
And we'll see you again next
month for another episode.

00:28:08.570 --> 00:28:09.630
KALYAN REDDY: See you.

00:28:09.630 --> 00:28:10.880
ERIC KOLEDA: Bye bye.

