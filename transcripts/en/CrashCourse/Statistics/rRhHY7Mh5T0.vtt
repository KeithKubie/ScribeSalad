WEBVTT
Kind: captions
Language: en

00:00:03.160 --> 00:00:06.540
Hi, I’m Adriene Hill, and Welcome back to
Crash Course Statistics.

00:00:06.540 --> 00:00:10.160
Statistics and probability have been used
in applications beyond the ones we usually

00:00:10.160 --> 00:00:13.080
think of like research science and business
analytics.

00:00:13.089 --> 00:00:18.510
One of the most consequential applications
of statistics is helping countries survive

00:00:18.510 --> 00:00:19.550
and win wars.

00:00:19.550 --> 00:00:25.740
Today, we’ll talk about how people applied
statistics to break codes, locate sunken submarines,

00:00:25.740 --> 00:00:27.820
and even predict the next big war.

00:00:27.820 --> 00:00:37.180
INTRO

00:00:37.190 --> 00:00:41.720
Our first story is pretty well known in the
fields of computer science and statistics.

00:00:41.739 --> 00:00:47.170
In World War II, the Germans used what looked
like a complicated typewriter to encode their

00:00:47.170 --> 00:00:47.700
messages.

00:00:47.700 --> 00:00:53.360
These machines, called Enigmas, allowed the
Germans to type in messages and receive encoded

00:00:53.360 --> 00:00:54.360
ones back.

00:00:54.360 --> 00:00:56.100
You may have done some simple encoding in
your childhood.

00:00:56.100 --> 00:01:00.420
Like, if you wanted to send a message to your
friend that says “I like, like Alex” but

00:01:00.420 --> 00:01:05.030
you don’t want Alex or anyone else for that
matter to be able to read the message.

00:01:05.030 --> 00:01:09.760
You could create a key so that each letter
is represented by another letter like this:

00:01:09.760 --> 00:01:13.530
If you wanted to write “I like” you’d
find those letters in the top row, and write

00:01:13.530 --> 00:01:14.530
down their counterparts.

00:01:14.530 --> 00:01:19.140
“I like” becomes “Y tymf” which makes
no sense...unless you have the key.

00:01:19.140 --> 00:01:21.140
Your entire message would go from this:

00:01:21.140 --> 00:01:22.830
“I like, like Alex.”

00:01:22.830 --> 00:01:23.930
To this:

00:01:23.930 --> 00:01:26.119
“Y tymf, tymf ptfw.”

00:01:26.119 --> 00:01:27.789
So you’re safe to deliver your message.

00:01:27.789 --> 00:01:32.039
But sometimes decoding messages has much higher
stakes than protecting crushes.

00:01:32.039 --> 00:01:33.789
Like when there’s a war going on.

00:01:33.789 --> 00:01:38.210
So by necessity, the keys--or methods of encryption--are
much more complex.

00:01:38.210 --> 00:01:44.369
During the Enigma Encryption process, a letter
was sent through three rounds of encoding--similar

00:01:44.369 --> 00:01:46.130
to how we encoded our message about Alex.

00:01:46.130 --> 00:01:50.820
But the enigma had three Rotors, or wheels,
doing the encoding.

00:01:50.820 --> 00:01:55.869
And the enigma machines would rotate the wheels
systematically after EVERY LETTER.

00:01:55.869 --> 00:02:01.090
A letter that appeared in the original message
twice could get encoded as two totally different

00:02:01.090 --> 00:02:02.090
letters.

00:02:02.090 --> 00:02:05.749
There were 26 settings on each wheel, one
setting for every letter in the alphabet.

00:02:05.749 --> 00:02:12.650
So there were 17,576 possible starting settings
(just for the wheels!) making it impossible

00:02:12.650 --> 00:02:16.590
to figure out a message by manually trying
each start point.

00:02:16.590 --> 00:02:19.980
If you wanted to decode a message, you needed
to know how those wheels were set.

00:02:19.980 --> 00:02:25.280
The Germans also had multiple wheel options
AND plugboards, making things even more complicated.

00:02:25.280 --> 00:02:30.170
Alan Turing and his team developed a technique
called Banburismus for deciphering messages

00:02:30.170 --> 00:02:35.250
from the German Navy - which exploited the
fact that sometimes pairs of messages would

00:02:35.250 --> 00:02:39.150
have chunks of text within them that had been
encoded with the same settings.

00:02:39.150 --> 00:02:42.080
They used a very time-consuming method to
find these pairs.

00:02:42.080 --> 00:02:47.020
Every intercepted message got hole punched,
in order, into paper that was lined with horizontal

00:02:47.020 --> 00:02:48.020
alphabets.

00:02:48.020 --> 00:02:53.080
Then, one message was placed on top of another
message, so a person could see how often holes

00:02:53.080 --> 00:02:54.080
overlapped.

00:02:54.080 --> 00:02:55.080
Why?

00:02:55.080 --> 00:02:58.460
Well, two messages that were encoded with
different Enigma settings would only have

00:02:58.460 --> 00:03:00.910
letters that matched by random chance.

00:03:00.910 --> 00:03:04.989
The German navy had a primary Enigma that
they were using known as “Dolphin.”

00:03:04.989 --> 00:03:12.319
Two messages encoded by the same Dolphin settings
had a 1/17 chance of having randomly matching

00:03:12.319 --> 00:03:13.319
letters.

00:03:13.319 --> 00:03:18.870
If two messages were encoded using DIFFERENT
settings, there’s a 1/26 change of having

00:03:18.870 --> 00:03:20.220
randomly matching letters.

00:03:20.220 --> 00:03:25.510
So, more matches than 1/26 would be increasing
evidence that the messages were encoded using

00:03:25.510 --> 00:03:26.909
the same settings.

00:03:26.909 --> 00:03:32.319
The Enigma codebreakers used that knowledge
to determine whether two intercepted messages

00:03:32.319 --> 00:03:36.040
were more likely to be encoded using the same
or different settings.

00:03:36.040 --> 00:03:39.040
They were also able to use other knowledge
in the decoding process.

00:03:39.040 --> 00:03:44.720
Like, the team already knew that 90% of Enigma
messages contained the German word “ein,”

00:03:44.720 --> 00:03:46.810
which can mean “one,” “a,” or “an.”

00:03:46.810 --> 00:03:51.629
Plus, there were phrases about the weather
that were getting repeated often in messages.

00:03:51.629 --> 00:03:52.689
‘Cuz, boats.

00:03:52.689 --> 00:03:57.140
When Turing and his team determined it was
50 times more likely that the messages were

00:03:57.140 --> 00:04:02.469
encoded with the same settings than not, they
considered it almost certain they’d found

00:04:02.469 --> 00:04:03.469
a match.

00:04:03.469 --> 00:04:06.959
They had a machine called “the bombe”
that could automatically cycle through a bunch

00:04:06.959 --> 00:04:09.700
of those wheel settings in order to decode
messages.

00:04:09.700 --> 00:04:14.030
But it took a LONG time to go through all
of the possibilities, so being able to narrow

00:04:14.030 --> 00:04:16.340
them down was a necessary step.

00:04:16.340 --> 00:04:21.039
As Mike Lee and Benedict King put it in their
article in The Conversation, “Turing’s

00:04:21.039 --> 00:04:26.340
crucial Bayesian insight was that certain
messages were much more likely than other

00:04:26.340 --> 00:04:27.340
messages.”

00:04:27.340 --> 00:04:31.600
All this knowledge helped the team figure
out how the Enigma’s wheels were set when

00:04:31.600 --> 00:04:33.690
it encoded a given message.

00:04:33.690 --> 00:04:37.720
Using Bayesian reasoning helped Turing’s
team crack the Enigma code, and limited the

00:04:37.720 --> 00:04:40.340
amount of settings they had to test by hand.

00:04:40.340 --> 00:04:45.710
Some historians think cracking the Enigma
may have shortened the War by 2-3 years, saving

00:04:45.710 --> 00:04:47.139
millions of lives.

00:04:47.139 --> 00:04:52.800
In WWII, German U-boats were systematically
taking down Allied ships, including unarmed

00:04:52.800 --> 00:04:54.740
merchant ships with supplies.

00:04:54.740 --> 00:04:59.270
While some ships escaped unharmed like the
Empress of Scotland which carried Turing from

00:04:59.270 --> 00:05:03.289
New York back to Europe the Allied forces
suffered many losses.

00:05:03.289 --> 00:05:06.840
Locating the U-boats was not an easy task,
but the mathematician B.O.

00:05:06.840 --> 00:05:08.870
Koopman used Bayesian reasoning.

00:05:08.870 --> 00:05:13.889
Koopman would first ask experts where the
U-boat was likely headed.

00:05:13.889 --> 00:05:18.610
With limited time and resources, prior information
and beliefs about the U-boat were important.

00:05:18.610 --> 00:05:23.770
Koopman commented that: “Police will patrol
localities of high incidence of crime.

00:05:23.770 --> 00:05:28.490
Public health officials will have ideas in
advance of the likely sources of infection

00:05:28.490 --> 00:05:30.720
and will examine them first.”

00:05:30.720 --> 00:05:33.030
And he wanted to do the same with the German
U-boats.

00:05:33.030 --> 00:05:38.550
Using signals from the ship, Koopman was able
to target a 236 mile radius for planes to

00:05:38.550 --> 00:05:39.550
search.

00:05:39.550 --> 00:05:40.550
But that’s still big.

00:05:40.550 --> 00:05:45.340
He would assign a 50-50 probability that the
U-boat was inside the circle, then he would

00:05:45.340 --> 00:05:51.060
use all of the military information that he
had access to in order to update those beliefs.

00:05:51.060 --> 00:05:54.600
That way he could make the best decisions
with whatever information he currently had.

00:05:54.600 --> 00:05:56.539
Think about the last time you lost your keys.

00:05:56.539 --> 00:06:00.849
You could plot out a grid that represented
your apartment, and you could assign a probability

00:06:00.849 --> 00:06:05.740
that your keys are in each 1 foot by 1 foot
square based on the likelihood of possible

00:06:05.740 --> 00:06:07.220
ways you misplaced them.

00:06:07.220 --> 00:06:11.039
So maybe your keys fell out of your bag, which
would put them somewhere in this square.

00:06:11.039 --> 00:06:14.979
Or maybe your cat got into your bag and dumped
its contents onto the floor.

00:06:14.979 --> 00:06:16.759
Then they’d be in this square.

00:06:16.759 --> 00:06:18.590
Or maybe you left them in your jacket pocket.

00:06:18.590 --> 00:06:19.910
Then they’d be here.

00:06:19.910 --> 00:06:23.190
Based on how likely you think these scenarios
are...and the knowledge that your cat loves

00:06:23.190 --> 00:06:28.220
to push things off of tables... the best guess
is that the cat knocked over your bag again...you

00:06:28.220 --> 00:06:33.710
can use Bayesian reasoning to create a probability
map of where your keys are most likely to

00:06:33.710 --> 00:06:34.710
be.

00:06:34.710 --> 00:06:38.600
You could also include information about how
likely you are to find your keys if you searched

00:06:38.600 --> 00:06:40.610
for them in that square.

00:06:40.610 --> 00:06:45.660
Keys that fell behind the refrigerator might
be hard to find even if you did search there.

00:06:45.660 --> 00:06:50.030
It’d also be really hard to find your keys
if they went down a drain outside your door.

00:06:50.030 --> 00:06:54.380
Combining all this information would leave
you with a map of your apartment that tells

00:06:54.380 --> 00:06:56.560
you the best places to search.

00:06:56.560 --> 00:07:01.919
This same theory--called Bayesian Search Theory--
was also applied by John Craven to find a

00:07:01.919 --> 00:07:05.129
missing nuclear submarine in 1968.

00:07:05.129 --> 00:07:11.370
Craven collected experts’ opinions on what
happened to the USS Scorpion, and used Bayesian

00:07:11.370 --> 00:07:15.680
Search Theory to create a map of where the
sub would likely be found.

00:07:15.680 --> 00:07:19.690
And it worked! Craven found the sub right
next to where he expected it.

00:07:19.690 --> 00:07:25.470
Often in war it’s also essential to know
approximately how MANY of these vehicles exist.

00:07:25.470 --> 00:07:30.840
Your strategy might be different if your enemy
had 1000 tanks than if they had only 200.

00:07:30.840 --> 00:07:36.030
During WWII, Allied forces used traditional
techniques such as spying and interrogating

00:07:36.030 --> 00:07:42.039
captured German soldiers and estimated that
the Germans were producing about 1,400 tanks

00:07:42.039 --> 00:07:43.039
a MONTH.

00:07:43.039 --> 00:07:44.599
But that seemed high.

00:07:44.599 --> 00:07:49.129
Luckily, the Allies had already captured some
tanks with serial numbers on them.

00:07:49.129 --> 00:07:53.830
So they used some clever math to estimate
the actual total number of tanks.

00:07:53.830 --> 00:07:58.120
Assuming that the tanks’ serial numbers
went in order which was a reasonable assumption

00:07:58.120 --> 00:08:02.430
they could use the range of the serial numbers
to estimate how many there were.

00:08:02.430 --> 00:08:08.020
For example, if we found 4 tanks with the
serial numbers 7, 17, 47, and 65.

00:08:08.020 --> 00:08:11.940
We’d know there are at LEAST 65 tanks.

00:08:11.940 --> 00:08:13.780
But it’s possible there are 67 tanks.

00:08:13.780 --> 00:08:14.940
Or 102 tanks.

00:08:14.940 --> 00:08:16.400
Or 500 tanks.

00:08:16.400 --> 00:08:19.990
We need a way to estimate what the most likely
maximum is.

00:08:19.990 --> 00:08:26.250
There are many ways to do this, but one simple
one is to use this formula, where m is the

00:08:26.250 --> 00:08:32.520
maximum serial number you observed ours is
65 and n is the number of observations you

00:08:32.520 --> 00:08:33.520
made.

00:08:33.520 --> 00:08:34.520
We made 4.

00:08:34.520 --> 00:08:38.780
So our best guess at how many tanks there
are based on the data we collected is 80.25

00:08:38.780 --> 00:08:40.830
we’ll round that to 80.

00:08:40.830 --> 00:08:42.610
Because you can’t have .25 tanks.

00:08:42.610 --> 00:08:47.660
When the Allies used similar techniques, they
estimated that there were 256 tanks being

00:08:47.660 --> 00:08:49.040
made per month.

00:08:49.040 --> 00:08:51.660
A much more accurate estimate.

00:08:51.660 --> 00:08:56.610
The Germans were actually making about 255
tanks a month at the time.

00:08:56.610 --> 00:09:00.870
And note to self: when fighting a war, do
not use sequential serial numbers - unless

00:09:00.870 --> 00:09:02.820
you’re fighting raccoons - they can’t
read.

00:09:02.820 --> 00:09:05.100
Jumping forward in time, to today.

00:09:05.100 --> 00:09:09.000
Some researchers use statistical models to
predict when the next big war will be.

00:09:09.000 --> 00:09:12.120
It has been a long time since the last major
World War.

00:09:12.120 --> 00:09:16.660
Aaron Clauset of the University of Colorado
has set out to examine other stretches of

00:09:16.660 --> 00:09:17.660
peace.

00:09:17.660 --> 00:09:22.200
And this isn’t as simple as just counting
the years between major wars and calculating

00:09:22.200 --> 00:09:24.240
the average time of peace.

00:09:24.240 --> 00:09:29.040
Clauset looked for trends and correlations
that might predict the number of years between

00:09:29.040 --> 00:09:30.510
major conflicts..

00:09:30.510 --> 00:09:33.700
He found that across history, huge stretches
of peace were not unusual.

00:09:33.700 --> 00:09:40.240
In fact it was downright common to see 100
to 140 years of peace following a large scale

00:09:40.240 --> 00:09:41.240
war.

00:09:41.240 --> 00:09:46.890
This long stretch of time without large-scale
world war is more rule than exception.

00:09:46.890 --> 00:09:48.500
Statistics has many important applications.

00:09:48.500 --> 00:09:52.830
War being one particularly high stakes application.

00:09:52.830 --> 00:09:57.310
Mathematicians and Statisticians played a
huge role in WWII, and they continue to be

00:09:57.310 --> 00:10:00.920
a part of defense departments and military
planning to this day.

00:10:00.920 --> 00:10:05.910
Out of necessity, we often make huge strides
in the fields of math and statistics during

00:10:05.910 --> 00:10:07.030
wars.

00:10:07.030 --> 00:10:11.910
They force us to solve problems we may not
have needed to solve in times of peace.

00:10:11.910 --> 00:10:16.590
Things like the Bayesian Search Theory that
Koopman worked is also used in times of peace

00:10:16.590 --> 00:10:18.710
like in helping us find missing planes.

00:10:18.710 --> 00:10:22.530
And the code breaking done by Turing and his
team was not only important in introducing

00:10:22.530 --> 00:10:29.000
statisticians to Bayesian inference, but it
provided foundations for future code breaking

00:10:29.000 --> 00:10:31.420
and encryption work that’s being done today.

00:10:31.420 --> 00:10:32.800
Thanks for watching, I’ll see you next time.

