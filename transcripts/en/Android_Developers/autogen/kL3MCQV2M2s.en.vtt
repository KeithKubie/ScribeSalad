WEBVTT
Kind: captions
Language: en

00:00:05.990 --> 00:00:08.360 align:start position:0%
 
writing<00:00:06.990><c> good</c><00:00:07.020><c> tests</c><00:00:07.620><c> can</c><00:00:07.799><c> be</c><00:00:07.919><c> a</c><00:00:07.950><c> challenge</c>

00:00:08.360 --> 00:00:08.370 align:start position:0%
writing good tests can be a challenge
 

00:00:08.370 --> 00:00:10.669 align:start position:0%
writing good tests can be a challenge
and<00:00:08.550><c> writing</c><00:00:09.210><c> reliable</c><00:00:09.719><c> UI</c><00:00:09.870><c> tests</c><00:00:10.320><c> it's</c>

00:00:10.669 --> 00:00:10.679 align:start position:0%
and writing reliable UI tests it's
 

00:00:10.679 --> 00:00:12.709 align:start position:0%
and writing reliable UI tests it's
substantially<00:00:11.400><c> more</c><00:00:11.550><c> difficult</c><00:00:11.719><c> user</c>

00:00:12.709 --> 00:00:12.719 align:start position:0%
substantially more difficult user
 

00:00:12.719 --> 00:00:15.020 align:start position:0%
substantially more difficult user
interfaces<00:00:13.530><c> are</c><00:00:13.679><c> asynchronous</c><00:00:13.980><c> driven</c><00:00:14.910><c> by</c>

00:00:15.020 --> 00:00:15.030 align:start position:0%
interfaces are asynchronous driven by
 

00:00:15.030 --> 00:00:17.120 align:start position:0%
interfaces are asynchronous driven by
events<00:00:15.450><c> transitions</c><00:00:16.049><c> and</c><00:00:16.320><c> data</c><00:00:16.529><c> loaded</c><00:00:16.949><c> from</c>

00:00:17.120 --> 00:00:17.130 align:start position:0%
events transitions and data loaded from
 

00:00:17.130 --> 00:00:19.400 align:start position:0%
events transitions and data loaded from
background<00:00:17.550><c> threads</c><00:00:17.960><c> coding</c><00:00:18.960><c> around</c><00:00:19.199><c> that</c>

00:00:19.400 --> 00:00:19.410 align:start position:0%
background threads coding around that
 

00:00:19.410 --> 00:00:21.290 align:start position:0%
background threads coding around that
without<00:00:19.830><c> any</c><00:00:20.039><c> help</c><00:00:20.310><c> from</c><00:00:20.369><c> a</c><00:00:20.609><c> UI</c><00:00:20.760><c> testing</c>

00:00:21.290 --> 00:00:21.300 align:start position:0%
without any help from a UI testing
 

00:00:21.300 --> 00:00:23.060 align:start position:0%
without any help from a UI testing
framework<00:00:21.720><c> would</c><00:00:22.170><c> require</c><00:00:22.500><c> a</c><00:00:22.740><c> lot</c><00:00:22.980><c> of</c>

00:00:23.060 --> 00:00:23.070 align:start position:0%
framework would require a lot of
 

00:00:23.070 --> 00:00:24.980 align:start position:0%
framework would require a lot of
boilerplate<00:00:23.310><c> and</c><00:00:23.850><c> handling</c><00:00:24.420><c> of</c><00:00:24.539><c> edge</c><00:00:24.720><c> cases</c>

00:00:24.980 --> 00:00:24.990 align:start position:0%
boilerplate and handling of edge cases
 

00:00:24.990 --> 00:00:27.950 align:start position:0%
boilerplate and handling of edge cases
on<00:00:25.320><c> the</c><00:00:26.189><c> other</c><00:00:26.340><c> hand</c><00:00:26.640><c> say</c><00:00:27.240><c> I</c><00:00:27.269><c> give</c><00:00:27.510><c> you</c><00:00:27.599><c> a</c><00:00:27.630><c> phone</c>

00:00:27.950 --> 00:00:27.960 align:start position:0%
on the other hand say I give you a phone
 

00:00:27.960 --> 00:00:30.439 align:start position:0%
on the other hand say I give you a phone
with<00:00:28.289><c> a</c><00:00:28.320><c> sample</c><00:00:28.769><c> app</c><00:00:28.949><c> and</c><00:00:29.189><c> tell</c><00:00:29.910><c> you</c><00:00:30.000><c> to</c><00:00:30.119><c> test</c><00:00:30.330><c> a</c>

00:00:30.439 --> 00:00:30.449 align:start position:0%
with a sample app and tell you to test a
 

00:00:30.449 --> 00:00:31.400 align:start position:0%
with a sample app and tell you to test a
feature<00:00:30.660><c> of</c><00:00:30.750><c> the</c><00:00:30.990><c> app</c><00:00:31.109><c> that</c><00:00:31.260><c> I</c><00:00:31.380><c> just</c>

00:00:31.400 --> 00:00:31.410 align:start position:0%
feature of the app that I just
 

00:00:31.410 --> 00:00:33.889 align:start position:0%
feature of the app that I just
implemented<00:00:32.219><c> for</c><00:00:32.730><c> example</c><00:00:33.149><c> please</c><00:00:33.630><c> make</c><00:00:33.870><c> sure</c>

00:00:33.889 --> 00:00:33.899 align:start position:0%
implemented for example please make sure
 

00:00:33.899 --> 00:00:35.959 align:start position:0%
implemented for example please make sure
that<00:00:34.230><c> saving</c><00:00:34.739><c> a</c><00:00:34.800><c> new</c><00:00:34.950><c> note</c><00:00:35.130><c> in</c><00:00:35.309><c> my</c><00:00:35.370><c> note-taking</c>

00:00:35.959 --> 00:00:35.969 align:start position:0%
that saving a new note in my note-taking
 

00:00:35.969 --> 00:00:38.510 align:start position:0%
that saving a new note in my note-taking
app<00:00:36.239><c> works</c><00:00:36.600><c> what</c><00:00:37.440><c> would</c><00:00:37.590><c> you</c><00:00:37.710><c> do</c><00:00:37.829><c> well</c><00:00:38.340><c> I'm</c>

00:00:38.510 --> 00:00:38.520 align:start position:0%
app works what would you do well I'm
 

00:00:38.520 --> 00:00:39.979 align:start position:0%
app works what would you do well I'm
pretty<00:00:38.879><c> sure</c><00:00:39.000><c> that</c><00:00:39.360><c> you</c><00:00:39.450><c> would</c><00:00:39.600><c> look</c><00:00:39.750><c> for</c><00:00:39.809><c> a</c>

00:00:39.979 --> 00:00:39.989 align:start position:0%
pretty sure that you would look for a
 

00:00:39.989 --> 00:00:42.319 align:start position:0%
pretty sure that you would look for a
Save<00:00:40.260><c> button</c><00:00:40.290><c> once</c><00:00:41.250><c> you've</c><00:00:41.399><c> found</c><00:00:41.610><c> it</c><00:00:41.820><c> you</c><00:00:42.059><c> tap</c>

00:00:42.319 --> 00:00:42.329 align:start position:0%
Save button once you've found it you tap
 

00:00:42.329 --> 00:00:44.150 align:start position:0%
Save button once you've found it you tap
on<00:00:42.360><c> it</c><00:00:42.600><c> and</c><00:00:42.780><c> then</c><00:00:43.350><c> check</c><00:00:43.710><c> if</c><00:00:43.860><c> the</c><00:00:43.950><c> note</c><00:00:44.129><c> is</c>

00:00:44.150 --> 00:00:44.160 align:start position:0%
on it and then check if the note is
 

00:00:44.160 --> 00:00:45.740 align:start position:0%
on it and then check if the note is
present<00:00:44.700><c> in</c><00:00:44.820><c> the</c><00:00:44.969><c> list</c><00:00:45.149><c> of</c><00:00:45.300><c> saved</c><00:00:45.480><c> notes</c>

00:00:45.740 --> 00:00:45.750 align:start position:0%
present in the list of saved notes
 

00:00:45.750 --> 00:00:47.869 align:start position:0%
present in the list of saved notes
that's<00:00:46.620><c> actually</c><00:00:47.070><c> a</c><00:00:47.100><c> pretty</c><00:00:47.370><c> good</c><00:00:47.550><c> scenario</c>

00:00:47.869 --> 00:00:47.879 align:start position:0%
that's actually a pretty good scenario
 

00:00:47.879 --> 00:00:49.970 align:start position:0%
that's actually a pretty good scenario
for<00:00:48.329><c> a</c><00:00:48.360><c> UI</c><00:00:48.510><c> test</c><00:00:48.899><c> and</c><00:00:49.140><c> it's</c><00:00:49.530><c> simple</c><00:00:49.920><c> to</c>

00:00:49.970 --> 00:00:49.980 align:start position:0%
for a UI test and it's simple to
 

00:00:49.980 --> 00:00:52.459 align:start position:0%
for a UI test and it's simple to
understand<00:00:50.520><c> for</c><00:00:50.730><c> a</c><00:00:50.760><c> person</c><00:00:51.180><c> but</c><00:00:51.780><c> how</c><00:00:52.110><c> would</c><00:00:52.320><c> we</c>

00:00:52.459 --> 00:00:52.469 align:start position:0%
understand for a person but how would we
 

00:00:52.469 --> 00:00:54.889 align:start position:0%
understand for a person but how would we
go<00:00:52.620><c> about</c><00:00:52.649><c> expressing</c><00:00:53.190><c> it</c><00:00:53.550><c> in</c><00:00:53.670><c> code</c><00:00:53.940><c> the</c>

00:00:54.889 --> 00:00:54.899 align:start position:0%
go about expressing it in code the
 

00:00:54.899 --> 00:00:56.450 align:start position:0%
go about expressing it in code the
espresso<00:00:55.140><c> framework</c><00:00:55.770><c> was</c><00:00:56.100><c> created</c>

00:00:56.450 --> 00:00:56.460 align:start position:0%
espresso framework was created
 

00:00:56.460 --> 00:00:58.639 align:start position:0%
espresso framework was created
specifically<00:00:57.000><c> for</c><00:00:57.120><c> this</c><00:00:57.390><c> purpose</c><00:00:57.629><c> to</c><00:00:58.320><c> enable</c>

00:00:58.639 --> 00:00:58.649 align:start position:0%
specifically for this purpose to enable
 

00:00:58.649 --> 00:01:00.229 align:start position:0%
specifically for this purpose to enable
developers<00:00:59.070><c> to</c><00:00:59.100><c> write</c><00:00:59.340><c> UI</c><00:00:59.579><c> tests</c><00:01:00.000><c> that</c><00:01:00.090><c> are</c>

00:01:00.229 --> 00:01:00.239 align:start position:0%
developers to write UI tests that are
 

00:01:00.239 --> 00:01:02.810 align:start position:0%
developers to write UI tests that are
concise<00:01:00.690><c> reliable</c><00:01:01.410><c> and</c><00:01:01.559><c> using</c><00:01:02.039><c> a</c><00:01:02.160><c> fluent</c><00:01:02.489><c> API</c>

00:01:02.810 --> 00:01:02.820 align:start position:0%
concise reliable and using a fluent API
 

00:01:02.820 --> 00:01:05.899 align:start position:0%
concise reliable and using a fluent API
and<00:01:03.149><c> most</c><00:01:03.989><c> importantly</c><00:01:04.559><c> espresso</c><00:01:05.339><c> takes</c><00:01:05.670><c> care</c>

00:01:05.899 --> 00:01:05.909 align:start position:0%
and most importantly espresso takes care
 

00:01:05.909 --> 00:01:08.330 align:start position:0%
and most importantly espresso takes care
of<00:01:05.939><c> synchronization</c><00:01:06.720><c> with</c><00:01:06.900><c> any</c><00:01:07.110><c> UI</c><00:01:07.409><c> events</c><00:01:07.560><c> so</c>

00:01:08.330 --> 00:01:08.340 align:start position:0%
of synchronization with any UI events so
 

00:01:08.340 --> 00:01:10.370 align:start position:0%
of synchronization with any UI events so
that<00:01:08.520><c> in</c><00:01:08.700><c> most</c><00:01:08.939><c> cases</c><00:01:09.150><c> you</c><00:01:09.840><c> don't</c><00:01:10.049><c> have</c><00:01:10.229><c> to</c>

00:01:10.370 --> 00:01:10.380 align:start position:0%
that in most cases you don't have to
 

00:01:10.380 --> 00:01:12.200 align:start position:0%
that in most cases you don't have to
worry<00:01:10.590><c> about</c><00:01:10.920><c> any</c><00:01:11.130><c> viewstate</c><00:01:11.670><c> transitions</c>

00:01:12.200 --> 00:01:12.210 align:start position:0%
worry about any viewstate transitions
 

00:01:12.210 --> 00:01:15.080 align:start position:0%
worry about any viewstate transitions
and<00:01:12.420><c> implementation</c><00:01:13.080><c> details</c><00:01:13.909><c> looking</c><00:01:14.909><c> back</c>

00:01:15.080 --> 00:01:15.090 align:start position:0%
and implementation details looking back
 

00:01:15.090 --> 00:01:17.600 align:start position:0%
and implementation details looking back
at<00:01:15.270><c> the</c><00:01:15.420><c> simple</c><00:01:15.780><c> UI</c><00:01:16.020><c> test</c><00:01:16.290><c> we</c><00:01:16.470><c> just</c><00:01:16.680><c> defined</c><00:01:17.040><c> we</c>

00:01:17.600 --> 00:01:17.610 align:start position:0%
at the simple UI test we just defined we
 

00:01:17.610 --> 00:01:19.130 align:start position:0%
at the simple UI test we just defined we
can<00:01:17.640><c> see</c><00:01:17.909><c> that</c><00:01:18.030><c> the</c><00:01:18.150><c> basic</c><00:01:18.360><c> flow</c><00:01:18.689><c> when</c><00:01:18.869><c> using</c>

00:01:19.130 --> 00:01:19.140 align:start position:0%
can see that the basic flow when using
 

00:01:19.140 --> 00:01:21.289 align:start position:0%
can see that the basic flow when using
espresso<00:01:19.380><c> is</c><00:01:19.740><c> exactly</c><00:01:20.310><c> the</c><00:01:20.520><c> same</c><00:01:20.700><c> as</c><00:01:20.939><c> in</c><00:01:21.210><c> our</c>

00:01:21.289 --> 00:01:21.299 align:start position:0%
espresso is exactly the same as in our
 

00:01:21.299 --> 00:01:24.140 align:start position:0%
espresso is exactly the same as in our
real<00:01:21.570><c> life</c><00:01:21.720><c> scenario</c><00:01:22.250><c> first</c><00:01:23.250><c> find</c><00:01:23.880><c> a</c><00:01:24.000><c> view</c>

00:01:24.140 --> 00:01:24.150 align:start position:0%
real life scenario first find a view
 

00:01:24.150 --> 00:01:26.420 align:start position:0%
real life scenario first find a view
using<00:01:24.509><c> some</c><00:01:24.689><c> matching</c><00:01:25.020><c> rules</c><00:01:25.229><c> then</c><00:01:25.799><c> perform</c>

00:01:26.420 --> 00:01:26.430 align:start position:0%
using some matching rules then perform
 

00:01:26.430 --> 00:01:28.730 align:start position:0%
using some matching rules then perform
an<00:01:26.580><c> action</c><00:01:26.729><c> on</c><00:01:26.970><c> it</c><00:01:27.150><c> and</c><00:01:27.270><c> finally</c><00:01:27.960><c> verify</c><00:01:28.680><c> the</c>

00:01:28.730 --> 00:01:28.740 align:start position:0%
an action on it and finally verify the
 

00:01:28.740 --> 00:01:31.340 align:start position:0%
an action on it and finally verify the
resulting<00:01:29.250><c> state</c><00:01:29.600><c> before</c><00:01:30.600><c> I</c><00:01:30.840><c> go</c><00:01:31.049><c> any</c><00:01:31.259><c> further</c>

00:01:31.340 --> 00:01:31.350 align:start position:0%
resulting state before I go any further
 

00:01:31.350 --> 00:01:34.249 align:start position:0%
resulting state before I go any further
and<00:01:31.920><c> start</c><00:01:32.400><c> writing</c><00:01:32.610><c> actual</c><00:01:33.090><c> test</c><00:01:33.360><c> code</c><00:01:33.600><c> let's</c>

00:01:34.249 --> 00:01:34.259 align:start position:0%
and start writing actual test code let's
 

00:01:34.259 --> 00:01:35.810 align:start position:0%
and start writing actual test code let's
make<00:01:34.439><c> sure</c><00:01:34.470><c> that</c><00:01:34.829><c> the</c><00:01:34.979><c> Android</c><00:01:35.310><c> test</c><00:01:35.579><c> Runner</c>

00:01:35.810 --> 00:01:35.820 align:start position:0%
make sure that the Android test Runner
 

00:01:35.820 --> 00:01:38.060 align:start position:0%
make sure that the Android test Runner
and<00:01:35.909><c> espresso</c><00:01:36.360><c> dependencies</c><00:01:37.140><c> are</c><00:01:37.470><c> configured</c>

00:01:38.060 --> 00:01:38.070 align:start position:0%
and espresso dependencies are configured
 

00:01:38.070 --> 00:01:40.550 align:start position:0%
and espresso dependencies are configured
in<00:01:38.189><c> build.gradle</c><00:01:39.079><c> I'll</c><00:01:40.079><c> add</c><00:01:40.409><c> the</c>

00:01:40.550 --> 00:01:40.560 align:start position:0%
in build.gradle I'll add the
 

00:01:40.560 --> 00:01:42.920 align:start position:0%
in build.gradle I'll add the
dependencies<00:01:41.220><c> and</c><00:01:41.490><c> setup</c><00:01:42.210><c> the</c><00:01:42.329><c> runner</c><00:01:42.479><c> here</c>

00:01:42.920 --> 00:01:42.930 align:start position:0%
dependencies and setup the runner here
 

00:01:42.930 --> 00:01:45.499 align:start position:0%
dependencies and setup the runner here
if<00:01:43.549><c> you're</c><00:01:44.549><c> using</c><00:01:44.579><c> a</c><00:01:44.939><c> version</c><00:01:45.060><c> of</c><00:01:45.270><c> Android</c>

00:01:45.499 --> 00:01:45.509 align:start position:0%
if you're using a version of Android
 

00:01:45.509 --> 00:01:47.210 align:start position:0%
if you're using a version of Android
studio<00:01:45.689><c> that</c><00:01:46.229><c> lets</c><00:01:46.409><c> you</c><00:01:46.530><c> select</c><00:01:46.710><c> the</c><00:01:46.979><c> test</c>

00:01:47.210 --> 00:01:47.220 align:start position:0%
studio that lets you select the test
 

00:01:47.220 --> 00:01:49.340 align:start position:0%
studio that lets you select the test
artifact<00:01:47.790><c> remember</c><00:01:48.479><c> to</c><00:01:48.630><c> switch</c><00:01:48.899><c> to</c><00:01:49.079><c> Android</c>

00:01:49.340 --> 00:01:49.350 align:start position:0%
artifact remember to switch to Android
 

00:01:49.350 --> 00:01:51.050 align:start position:0%
artifact remember to switch to Android
instrumentation<00:01:50.189><c> tests</c><00:01:50.549><c> under</c><00:01:50.700><c> build</c>

00:01:51.050 --> 00:01:51.060 align:start position:0%
instrumentation tests under build
 

00:01:51.060 --> 00:01:53.719 align:start position:0%
instrumentation tests under build
variants<00:01:51.479><c> I'm</c><00:01:52.170><c> using</c><00:01:52.500><c> Android</c><00:01:52.890><c> studio</c><00:01:53.100><c> 2.0</c>

00:01:53.719 --> 00:01:53.729 align:start position:0%
variants I'm using Android studio 2.0
 

00:01:53.729 --> 00:01:55.700 align:start position:0%
variants I'm using Android studio 2.0
which<00:01:54.000><c> has</c><00:01:54.180><c> a</c><00:01:54.210><c> combined</c><00:01:54.659><c> view</c><00:01:54.840><c> for</c><00:01:55.140><c> both</c><00:01:55.290><c> local</c>

00:01:55.700 --> 00:01:55.710 align:start position:0%
which has a combined view for both local
 

00:01:55.710 --> 00:01:57.740 align:start position:0%
which has a combined view for both local
and<00:01:55.860><c> instrumentation</c><00:01:56.640><c> tests</c><00:01:57.000><c> so</c><00:01:57.479><c> I</c><00:01:57.509><c> can</c>

00:01:57.740 --> 00:01:57.750 align:start position:0%
and instrumentation tests so I can
 

00:01:57.750 --> 00:02:00.100 align:start position:0%
and instrumentation tests so I can
already<00:01:58.020><c> see</c><00:01:58.350><c> both</c><00:01:58.590><c> in</c><00:01:58.799><c> my</c><00:01:58.979><c> project</c><00:01:59.369><c> view</c>

00:02:00.100 --> 00:02:00.110 align:start position:0%
already see both in my project view
 

00:02:00.110 --> 00:02:02.179 align:start position:0%
already see both in my project view
instrumentation<00:02:01.110><c> tests</c><00:02:01.500><c> go</c><00:02:01.770><c> under</c><00:02:02.040><c> the</c>

00:02:02.179 --> 00:02:02.189 align:start position:0%
instrumentation tests go under the
 

00:02:02.189 --> 00:02:04.580 align:start position:0%
instrumentation tests go under the
Android<00:02:02.579><c> test</c><00:02:02.880><c> source</c><00:02:03.180><c> set</c><00:02:03.509><c> so</c><00:02:04.049><c> I'll</c><00:02:04.170><c> create</c><00:02:04.409><c> a</c>

00:02:04.580 --> 00:02:04.590 align:start position:0%
Android test source set so I'll create a
 

00:02:04.590 --> 00:02:07.069 align:start position:0%
Android test source set so I'll create a
sample<00:02:04.979><c> test</c><00:02:05.250><c> glass</c><00:02:05.460><c> here</c><00:02:05.820><c> a</c><00:02:05.939><c> name</c><00:02:06.479><c> it</c><00:02:06.630><c> notes</c>

00:02:07.069 --> 00:02:07.079 align:start position:0%
sample test glass here a name it notes
 

00:02:07.079 --> 00:02:10.550 align:start position:0%
sample test glass here a name it notes
screen<00:02:07.530><c> tests</c>

00:02:10.550 --> 00:02:10.560 align:start position:0%
 
 

00:02:10.560 --> 00:02:13.339 align:start position:0%
 
I<00:02:10.849><c> have</c><00:02:11.849><c> to</c><00:02:12.000><c> add</c><00:02:12.150><c> an</c><00:02:12.270><c> annotation</c><00:02:12.660><c> on</c><00:02:12.959><c> the</c><00:02:13.140><c> test</c>

00:02:13.339 --> 00:02:13.349 align:start position:0%
I have to add an annotation on the test
 

00:02:13.349 --> 00:02:15.199 align:start position:0%
I have to add an annotation on the test
class<00:02:13.620><c> to</c><00:02:14.099><c> specify</c><00:02:14.580><c> that</c><00:02:14.730><c> I</c><00:02:14.849><c> will</c><00:02:14.970><c> be</c><00:02:15.060><c> writing</c>

00:02:15.199 --> 00:02:15.209 align:start position:0%
class to specify that I will be writing
 

00:02:15.209 --> 00:02:17.479 align:start position:0%
class to specify that I will be writing
Ju<00:02:15.630><c> ins</c><00:02:15.840><c> for</c><00:02:16.050><c> tests</c><00:02:16.440><c> and</c><00:02:16.560><c> running</c><00:02:17.099><c> them</c><00:02:17.280><c> with</c>

00:02:17.479 --> 00:02:17.489 align:start position:0%
Ju ins for tests and running them with
 

00:02:17.489 --> 00:02:20.809 align:start position:0%
Ju ins for tests and running them with
the<00:02:17.610><c> Android</c><00:02:17.970><c> J</c><00:02:18.180><c> unit</c><00:02:18.330><c> forerunner</c><00:02:18.900><c> the</c><00:02:19.819><c> notes</c>

00:02:20.809 --> 00:02:20.819 align:start position:0%
the Android J unit forerunner the notes
 

00:02:20.819 --> 00:02:22.850 align:start position:0%
the Android J unit forerunner the notes
screen<00:02:21.120><c> in</c><00:02:21.300><c> our</c><00:02:21.420><c> app</c><00:02:21.630><c> is</c><00:02:21.930><c> contained</c><00:02:22.590><c> in</c><00:02:22.739><c> the</c>

00:02:22.850 --> 00:02:22.860 align:start position:0%
screen in our app is contained in the
 

00:02:22.860 --> 00:02:25.070 align:start position:0%
screen in our app is contained in the
notes<00:02:23.069><c> activity</c><00:02:23.640><c> by</c><00:02:24.480><c> adding</c><00:02:24.810><c> an</c><00:02:24.930><c> activity</c>

00:02:25.070 --> 00:02:25.080 align:start position:0%
notes activity by adding an activity
 

00:02:25.080 --> 00:02:27.440 align:start position:0%
notes activity by adding an activity
test<00:02:25.620><c> role</c><00:02:25.920><c> I'm</c><00:02:26.130><c> telling</c><00:02:26.849><c> the</c><00:02:27.000><c> runner</c><00:02:27.180><c> to</c>

00:02:27.440 --> 00:02:27.450 align:start position:0%
test role I'm telling the runner to
 

00:02:27.450 --> 00:02:29.509 align:start position:0%
test role I'm telling the runner to
launch<00:02:27.660><c> the</c><00:02:27.840><c> activity</c><00:02:28.290><c> before</c><00:02:28.560><c> any</c><00:02:28.950><c> tests</c><00:02:29.370><c> and</c>

00:02:29.509 --> 00:02:29.519 align:start position:0%
launch the activity before any tests and
 

00:02:29.519 --> 00:02:32.390 align:start position:0%
launch the activity before any tests and
turn<00:02:30.000><c> it</c><00:02:30.120><c> down</c><00:02:30.269><c> after</c><00:02:30.630><c> they</c><00:02:30.780><c> finish</c><00:02:31.110><c> all</c><00:02:32.099><c> this</c>

00:02:32.390 --> 00:02:32.400 align:start position:0%
turn it down after they finish all this
 

00:02:32.400 --> 00:02:36.350 align:start position:0%
turn it down after they finish all this
is<00:02:32.610><c> taken</c><00:02:32.940><c> care</c><00:02:32.970><c> of</c><00:02:33.180><c> with</c><00:02:33.450><c> this</c><00:02:33.599><c> line</c><00:02:35.090><c> now</c><00:02:36.090><c> I'll</c>

00:02:36.350 --> 00:02:36.360 align:start position:0%
is taken care of with this line now I'll
 

00:02:36.360 --> 00:02:38.059 align:start position:0%
is taken care of with this line now I'll
add<00:02:36.599><c> a</c><00:02:36.630><c> new</c><00:02:36.870><c> method</c><00:02:37.019><c> with</c><00:02:37.470><c> a</c><00:02:37.500><c> descriptive</c><00:02:38.010><c> name</c>

00:02:38.059 --> 00:02:38.069 align:start position:0%
add a new method with a descriptive name
 

00:02:38.069 --> 00:02:40.400 align:start position:0%
add a new method with a descriptive name
for<00:02:38.519><c> the</c><00:02:38.610><c> actual</c><00:02:38.880><c> test</c><00:02:39.150><c> and</c><00:02:39.420><c> start</c><00:02:40.140><c> with</c><00:02:40.319><c> the</c>

00:02:40.400 --> 00:02:40.410 align:start position:0%
for the actual test and start with the
 

00:02:40.410 --> 00:02:42.009 align:start position:0%
for the actual test and start with the
basic<00:02:40.739><c> structure</c><00:02:41.130><c> I</c><00:02:41.160><c> explained</c><00:02:41.580><c> before</c>

00:02:42.009 --> 00:02:42.019 align:start position:0%
basic structure I explained before
 

00:02:42.019 --> 00:02:44.600 align:start position:0%
basic structure I explained before
notice<00:02:43.019><c> that</c><00:02:43.230><c> on</c><00:02:43.440><c> view</c><00:02:43.739><c> is</c><00:02:43.860><c> actually</c><00:02:44.340><c> a</c><00:02:44.370><c> method</c>

00:02:44.600 --> 00:02:44.610 align:start position:0%
notice that on view is actually a method
 

00:02:44.610 --> 00:02:47.000 align:start position:0%
notice that on view is actually a method
on<00:02:44.910><c> the</c><00:02:45.090><c> espresso</c><00:02:45.360><c> class</c><00:02:45.810><c> but</c><00:02:46.590><c> across</c><00:02:46.769><c> my</c>

00:02:47.000 --> 00:02:47.010 align:start position:0%
on the espresso class but across my
 

00:02:47.010 --> 00:02:49.009 align:start position:0%
on the espresso class but across my
testing<00:02:47.430><c> code</c><00:02:47.610><c> I</c><00:02:47.790><c> will</c><00:02:47.880><c> use</c><00:02:48.150><c> static</c><00:02:48.450><c> imports</c>

00:02:49.009 --> 00:02:49.019 align:start position:0%
testing code I will use static imports
 

00:02:49.019 --> 00:02:51.229 align:start position:0%
testing code I will use static imports
to<00:02:49.590><c> be</c><00:02:49.709><c> able</c><00:02:49.799><c> to</c><00:02:50.100><c> express</c><00:02:50.400><c> the</c><00:02:50.610><c> tests</c><00:02:50.970><c> in</c><00:02:51.090><c> a</c>

00:02:51.229 --> 00:02:51.239 align:start position:0%
to be able to express the tests in a
 

00:02:51.239 --> 00:02:54.590 align:start position:0%
to be able to express the tests in a
more<00:02:51.420><c> concise</c><00:02:51.780><c> way</c><00:02:53.090><c> alright</c><00:02:54.090><c> let's</c><00:02:54.420><c> go</c>

00:02:54.590 --> 00:02:54.600 align:start position:0%
more concise way alright let's go
 

00:02:54.600 --> 00:02:56.780 align:start position:0%
more concise way alright let's go
through<00:02:54.630><c> the</c><00:02:54.930><c> arguments</c><00:02:55.440><c> next</c><00:02:55.590><c> we</c><00:02:56.459><c> need</c><00:02:56.610><c> a</c>

00:02:56.780 --> 00:02:56.790 align:start position:0%
through the arguments next we need a
 

00:02:56.790 --> 00:02:58.940 align:start position:0%
through the arguments next we need a
matter<00:02:57.090><c> in</c><00:02:57.420><c> order</c><00:02:57.870><c> to</c><00:02:57.989><c> find</c><00:02:58.290><c> a</c><00:02:58.410><c> view</c><00:02:58.620><c> in</c><00:02:58.769><c> the</c>

00:02:58.940 --> 00:02:58.950 align:start position:0%
matter in order to find a view in the
 

00:02:58.950 --> 00:03:01.250 align:start position:0%
matter in order to find a view in the
current<00:02:59.250><c> view</c><00:02:59.430><c> hierarchy</c><00:02:59.989><c> espresso</c><00:03:00.989><c> comes</c>

00:03:01.250 --> 00:03:01.260 align:start position:0%
current view hierarchy espresso comes
 

00:03:01.260 --> 00:03:03.110 align:start position:0%
current view hierarchy espresso comes
with<00:03:01.470><c> a</c><00:03:01.500><c> set</c><00:03:01.739><c> of</c><00:03:01.860><c> built-in</c><00:03:02.099><c> matters</c><00:03:02.640><c> for</c>

00:03:03.110 --> 00:03:03.120 align:start position:0%
with a set of built-in matters for
 

00:03:03.120 --> 00:03:05.420 align:start position:0%
with a set of built-in matters for
common<00:03:03.420><c> view</c><00:03:03.630><c> properties</c><00:03:04.110><c> like</c><00:03:04.380><c> with</c><00:03:04.680><c> ID</c><00:03:04.890><c> with</c>

00:03:05.420 --> 00:03:05.430 align:start position:0%
common view properties like with ID with
 

00:03:05.430 --> 00:03:08.030 align:start position:0%
common view properties like with ID with
text<00:03:05.880><c> is</c><00:03:06.030><c> checked</c><00:03:06.390><c> and</c><00:03:06.630><c> many</c><00:03:06.840><c> others</c><00:03:07.170><c> we</c>

00:03:08.030 --> 00:03:08.040 align:start position:0%
text is checked and many others we
 

00:03:08.040 --> 00:03:09.979 align:start position:0%
text is checked and many others we
provide<00:03:08.430><c> a</c><00:03:08.459><c> simple</c><00:03:08.970><c> cheat</c><00:03:09.209><c> sheet</c><00:03:09.480><c> so</c><00:03:09.930><c> you</c>

00:03:09.979 --> 00:03:09.989 align:start position:0%
provide a simple cheat sheet so you
 

00:03:09.989 --> 00:03:11.539 align:start position:0%
provide a simple cheat sheet so you
don't<00:03:10.260><c> have</c><00:03:10.440><c> to</c><00:03:10.620><c> go</c><00:03:10.769><c> digging</c><00:03:11.099><c> through</c><00:03:11.340><c> the</c>

00:03:11.539 --> 00:03:11.549 align:start position:0%
don't have to go digging through the
 

00:03:11.549 --> 00:03:15.050 align:start position:0%
don't have to go digging through the
documentation<00:03:12.060><c> every</c><00:03:12.630><c> time</c><00:03:12.870><c> in</c><00:03:13.400><c> my</c><00:03:14.400><c> case</c><00:03:14.790><c> I</c>

00:03:15.050 --> 00:03:15.060 align:start position:0%
documentation every time in my case I
 

00:03:15.060 --> 00:03:16.699 align:start position:0%
documentation every time in my case I
want<00:03:15.480><c> to</c><00:03:15.540><c> locate</c><00:03:15.930><c> the</c><00:03:16.109><c> floating</c><00:03:16.260><c> action</c>

00:03:16.699 --> 00:03:16.709 align:start position:0%
want to locate the floating action
 

00:03:16.709 --> 00:03:19.190 align:start position:0%
want to locate the floating action
button<00:03:17.190><c> which</c><00:03:17.790><c> fortunately</c><00:03:18.359><c> is</c><00:03:18.660><c> the</c><00:03:18.930><c> only</c>

00:03:19.190 --> 00:03:19.200 align:start position:0%
button which fortunately is the only
 

00:03:19.200 --> 00:03:21.560 align:start position:0%
button which fortunately is the only
item<00:03:19.560><c> on</c><00:03:19.650><c> the</c><00:03:19.799><c> screen</c><00:03:20.100><c> with</c><00:03:20.430><c> the</c><00:03:20.459><c> ID</c><00:03:20.760><c> fab</c><00:03:21.359><c> add</c>

00:03:21.560 --> 00:03:21.570 align:start position:0%
item on the screen with the ID fab add
 

00:03:21.570 --> 00:03:24.229 align:start position:0%
item on the screen with the ID fab add
notes<00:03:21.930><c> now</c><00:03:22.799><c> that</c><00:03:23.010><c> I've</c><00:03:23.130><c> isolated</c><00:03:23.400><c> the</c><00:03:23.910><c> view</c>

00:03:24.229 --> 00:03:24.239 align:start position:0%
notes now that I've isolated the view
 

00:03:24.239 --> 00:03:26.720 align:start position:0%
notes now that I've isolated the view
that<00:03:24.359><c> I</c><00:03:24.480><c> need</c><00:03:24.690><c> using</c><00:03:25.079><c> matters</c><00:03:25.650><c> it's</c><00:03:26.310><c> time</c><00:03:26.549><c> to</c>

00:03:26.720 --> 00:03:26.730 align:start position:0%
that I need using matters it's time to
 

00:03:26.730 --> 00:03:28.880 align:start position:0%
that I need using matters it's time to
apply<00:03:26.940><c> a</c><00:03:27.150><c> view</c><00:03:27.359><c> action</c><00:03:27.720><c> or</c><00:03:27.900><c> in</c><00:03:28.170><c> other</c><00:03:28.319><c> words</c><00:03:28.620><c> a</c>

00:03:28.880 --> 00:03:28.890 align:start position:0%
apply a view action or in other words a
 

00:03:28.890 --> 00:03:30.949 align:start position:0%
apply a view action or in other words a
user<00:03:29.220><c> interaction</c><00:03:29.940><c> that</c><00:03:30.090><c> will</c><00:03:30.239><c> be</c><00:03:30.390><c> simulated</c>

00:03:30.949 --> 00:03:30.959 align:start position:0%
user interaction that will be simulated
 

00:03:30.959 --> 00:03:33.860 align:start position:0%
user interaction that will be simulated
by<00:03:30.989><c> espresso</c><00:03:31.680><c> I</c><00:03:31.970><c> just</c><00:03:32.970><c> want</c><00:03:33.180><c> to</c><00:03:33.299><c> click</c><00:03:33.510><c> the</c><00:03:33.660><c> fab</c>

00:03:33.860 --> 00:03:33.870 align:start position:0%
by espresso I just want to click the fab
 

00:03:33.870 --> 00:03:36.080 align:start position:0%
by espresso I just want to click the fab
but<00:03:34.440><c> again</c><00:03:34.680><c> there</c><00:03:34.980><c> are</c><00:03:35.010><c> many</c><00:03:35.370><c> more</c><00:03:35.609><c> built-in</c>

00:03:36.080 --> 00:03:36.090 align:start position:0%
but again there are many more built-in
 

00:03:36.090 --> 00:03:38.120 align:start position:0%
but again there are many more built-in
actions<00:03:36.480><c> like</c><00:03:36.750><c> typing</c><00:03:37.230><c> and</c><00:03:37.470><c> even</c><00:03:37.769><c> finger</c>

00:03:38.120 --> 00:03:38.130 align:start position:0%
actions like typing and even finger
 

00:03:38.130 --> 00:03:40.069 align:start position:0%
actions like typing and even finger
swipes<00:03:38.430><c> that</c><00:03:38.850><c> I</c><00:03:38.880><c> can</c><00:03:39.120><c> use</c><00:03:39.329><c> to</c><00:03:39.480><c> interact</c><00:03:39.840><c> with</c>

00:03:40.069 --> 00:03:40.079 align:start position:0%
swipes that I can use to interact with
 

00:03:40.079 --> 00:03:43.699 align:start position:0%
swipes that I can use to interact with
views<00:03:40.440><c> and</c><00:03:41.090><c> finally</c><00:03:42.090><c> I</c><00:03:42.269><c> verified</c><00:03:43.170><c> the</c><00:03:43.200><c> outcome</c>

00:03:43.699 --> 00:03:43.709 align:start position:0%
views and finally I verified the outcome
 

00:03:43.709 --> 00:03:45.710 align:start position:0%
views and finally I verified the outcome
of<00:03:43.829><c> my</c><00:03:43.980><c> actions</c><00:03:44.370><c> by</c><00:03:44.579><c> using</c><00:03:44.790><c> a</c><00:03:45.030><c> view</c><00:03:45.239><c> assertion</c>

00:03:45.710 --> 00:03:45.720 align:start position:0%
of my actions by using a view assertion
 

00:03:45.720 --> 00:03:48.170 align:start position:0%
of my actions by using a view assertion
since<00:03:46.620><c> I</c><00:03:46.739><c> want</c><00:03:46.950><c> to</c><00:03:47.069><c> check</c><00:03:47.280><c> if</c><00:03:47.430><c> an</c><00:03:47.549><c> input</c><00:03:47.819><c> field</c>

00:03:48.170 --> 00:03:48.180 align:start position:0%
since I want to check if an input field
 

00:03:48.180 --> 00:03:49.940 align:start position:0%
since I want to check if an input field
is<00:03:48.450><c> shown</c><00:03:48.480><c> on</c><00:03:48.750><c> screen</c><00:03:48.989><c> after</c><00:03:49.440><c> pressing</c><00:03:49.680><c> the</c>

00:03:49.940 --> 00:03:49.950 align:start position:0%
is shown on screen after pressing the
 

00:03:49.950 --> 00:03:51.920 align:start position:0%
is shown on screen after pressing the
fab<00:03:50.220><c> I'll</c><00:03:50.730><c> move</c><00:03:51.090><c> this</c><00:03:51.269><c> block</c><00:03:51.510><c> of</c><00:03:51.690><c> code</c><00:03:51.900><c> here</c>

00:03:51.920 --> 00:03:51.930 align:start position:0%
fab I'll move this block of code here
 

00:03:51.930 --> 00:03:54.470 align:start position:0%
fab I'll move this block of code here
and<00:03:52.530><c> I</c><00:03:53.160><c> use</c><00:03:53.400><c> the</c><00:03:53.579><c> matches</c><00:03:53.970><c> assertion</c><00:03:54.450><c> that</c>

00:03:54.470 --> 00:03:54.480 align:start position:0%
and I use the matches assertion that
 

00:03:54.480 --> 00:03:57.860 align:start position:0%
and I use the matches assertion that
accepts<00:03:55.049><c> a</c><00:03:55.109><c> view</c><00:03:55.319><c> matter</c><00:03:56.120><c> so</c><00:03:57.120><c> to</c><00:03:57.150><c> summarize</c>

00:03:57.860 --> 00:03:57.870 align:start position:0%
accepts a view matter so to summarize
 

00:03:57.870 --> 00:04:00.199 align:start position:0%
accepts a view matter so to summarize
what<00:03:58.019><c> we</c><00:03:58.200><c> have</c><00:03:58.350><c> so</c><00:03:58.560><c> far</c><00:03:58.859><c> the</c><00:03:59.430><c> first</c><00:03:59.700><c> statement</c>

00:04:00.199 --> 00:04:00.209 align:start position:0%
what we have so far the first statement
 

00:04:00.209 --> 00:04:02.000 align:start position:0%
what we have so far the first statement
matches<00:04:00.510><c> a</c><00:04:00.690><c> floating</c><00:04:01.170><c> action</c><00:04:01.350><c> button</c><00:04:01.829><c> and</c>

00:04:02.000 --> 00:04:02.010 align:start position:0%
matches a floating action button and
 

00:04:02.010 --> 00:04:04.069 align:start position:0%
matches a floating action button and
clicks<00:04:02.310><c> it</c><00:04:02.489><c> which</c><00:04:03.030><c> should</c><00:04:03.269><c> bring</c><00:04:03.510><c> up</c><00:04:03.690><c> the</c><00:04:03.900><c> add</c>

00:04:04.069 --> 00:04:04.079 align:start position:0%
clicks it which should bring up the add
 

00:04:04.079 --> 00:04:06.860 align:start position:0%
clicks it which should bring up the add
note<00:04:04.319><c> screen</c><00:04:04.769><c> the</c><00:04:05.519><c> second</c><00:04:05.910><c> statement</c><00:04:06.090><c> finds</c>

00:04:06.860 --> 00:04:06.870 align:start position:0%
note screen the second statement finds
 

00:04:06.870 --> 00:04:08.930 align:start position:0%
note screen the second statement finds
the<00:04:06.989><c> edit</c><00:04:07.319><c> text</c><00:04:07.530><c> that</c><00:04:07.889><c> lets</c><00:04:08.130><c> a</c><00:04:08.280><c> user</c><00:04:08.310><c> enter</c><00:04:08.910><c> a</c>

00:04:08.930 --> 00:04:08.940 align:start position:0%
the edit text that lets a user enter a
 

00:04:08.940 --> 00:04:11.059 align:start position:0%
the edit text that lets a user enter a
note<00:04:09.209><c> title</c><00:04:09.480><c> and</c><00:04:09.810><c> verifies</c><00:04:10.590><c> that</c><00:04:10.620><c> it</c><00:04:10.950><c> is</c>

00:04:11.059 --> 00:04:11.069 align:start position:0%
note title and verifies that it is
 

00:04:11.069 --> 00:04:12.740 align:start position:0%
note title and verifies that it is
displayed<00:04:11.519><c> using</c><00:04:11.819><c> the</c><00:04:12.120><c> matches</c><00:04:12.510><c> view</c>

00:04:12.740 --> 00:04:12.750 align:start position:0%
displayed using the matches view
 

00:04:12.750 --> 00:04:15.440 align:start position:0%
displayed using the matches view
assertion<00:04:13.519><c> notice</c><00:04:14.519><c> that</c><00:04:14.639><c> I</c><00:04:14.760><c> didn't</c><00:04:15.090><c> have</c><00:04:15.239><c> to</c>

00:04:15.440 --> 00:04:15.450 align:start position:0%
assertion notice that I didn't have to
 

00:04:15.450 --> 00:04:17.300 align:start position:0%
assertion notice that I didn't have to
write<00:04:15.600><c> any</c><00:04:15.840><c> code</c><00:04:15.930><c> in</c><00:04:16.139><c> between</c><00:04:16.289><c> to</c><00:04:16.950><c> wait</c><00:04:17.070><c> for</c>

00:04:17.300 --> 00:04:17.310 align:start position:0%
write any code in between to wait for
 

00:04:17.310 --> 00:04:19.610 align:start position:0%
write any code in between to wait for
previous<00:04:17.700><c> events</c><00:04:18.030><c> to</c><00:04:18.150><c> finish</c><00:04:18.479><c> as</c><00:04:18.659><c> espresso</c>

00:04:19.610 --> 00:04:19.620 align:start position:0%
previous events to finish as espresso
 

00:04:19.620 --> 00:04:22.420 align:start position:0%
previous events to finish as espresso
already<00:04:20.039><c> takes</c><00:04:20.280><c> care</c><00:04:20.549><c> of</c><00:04:20.669><c> that</c><00:04:20.849><c> for</c><00:04:21.120><c> me</c>

00:04:22.420 --> 00:04:22.430 align:start position:0%
already takes care of that for me
 

00:04:22.430 --> 00:04:24.760 align:start position:0%
already takes care of that for me
to<00:04:23.030><c> run</c><00:04:23.210><c> the</c><00:04:23.360><c> test</c><00:04:23.600><c> I</c><00:04:23.840><c> right-click</c><00:04:24.259><c> on</c><00:04:24.650><c> the</c>

00:04:24.760 --> 00:04:24.770 align:start position:0%
to run the test I right-click on the
 

00:04:24.770 --> 00:04:27.490 align:start position:0%
to run the test I right-click on the
test<00:04:25.009><c> class</c><00:04:25.250><c> and</c><00:04:25.520><c> select</c><00:04:25.910><c> run</c><00:04:26.169><c> because</c><00:04:27.169><c> it's</c>

00:04:27.490 --> 00:04:27.500 align:start position:0%
test class and select run because it's
 

00:04:27.500 --> 00:04:28.840 align:start position:0%
test class and select run because it's
an<00:04:27.620><c> instrumentation</c><00:04:28.190><c> test</c>

00:04:28.840 --> 00:04:28.850 align:start position:0%
an instrumentation test
 

00:04:28.850 --> 00:04:31.060 align:start position:0%
an instrumentation test
it<00:04:29.120><c> requires</c><00:04:29.479><c> an</c><00:04:29.720><c> emulator</c><00:04:30.320><c> or</c><00:04:30.560><c> physical</c>

00:04:31.060 --> 00:04:31.070 align:start position:0%
it requires an emulator or physical
 

00:04:31.070 --> 00:04:33.640 align:start position:0%
it requires an emulator or physical
device<00:04:31.370><c> I</c><00:04:31.630><c> can</c><00:04:32.630><c> see</c><00:04:32.930><c> the</c><00:04:33.050><c> actions</c><00:04:33.410><c> on</c><00:04:33.560><c> the</c>

00:04:33.640 --> 00:04:33.650 align:start position:0%
device I can see the actions on the
 

00:04:33.650 --> 00:04:37.050 align:start position:0%
device I can see the actions on the
screen<00:04:33.889><c> as</c><00:04:34.130><c> they</c><00:04:34.280><c> execute</c>

00:04:37.050 --> 00:04:37.060 align:start position:0%
 
 

00:04:37.060 --> 00:04:39.429 align:start position:0%
 
here's<00:04:38.060><c> a</c><00:04:38.150><c> slightly</c><00:04:38.479><c> longer</c><00:04:38.810><c> test</c><00:04:39.139><c> that</c>

00:04:39.429 --> 00:04:39.439 align:start position:0%
here's a slightly longer test that
 

00:04:39.439 --> 00:04:41.409 align:start position:0%
here's a slightly longer test that
includes<00:04:39.740><c> typing</c><00:04:40.219><c> into</c><00:04:40.460><c> the</c><00:04:40.580><c> ED</c><00:04:40.759><c> notes</c><00:04:41.030><c> screen</c>

00:04:41.409 --> 00:04:41.419 align:start position:0%
includes typing into the ED notes screen
 

00:04:41.419 --> 00:04:43.800 align:start position:0%
includes typing into the ED notes screen
and<00:04:41.689><c> saving</c><00:04:42.349><c> a</c><00:04:42.439><c> note</c><00:04:42.620><c> all</c><00:04:42.860><c> using</c><00:04:43.310><c> espresso</c>

00:04:43.800 --> 00:04:43.810 align:start position:0%
and saving a note all using espresso
 

00:04:43.810 --> 00:04:46.300 align:start position:0%
and saving a note all using espresso
unless<00:04:44.810><c> you're</c><00:04:44.990><c> writing</c><00:04:45.169><c> end-to-end</c><00:04:45.740><c> tests</c>

00:04:46.300 --> 00:04:46.310 align:start position:0%
unless you're writing end-to-end tests
 

00:04:46.310 --> 00:04:48.100 align:start position:0%
unless you're writing end-to-end tests
you<00:04:46.729><c> should</c><00:04:46.759><c> keep</c><00:04:47.060><c> your</c><00:04:47.240><c> test</c><00:04:47.509><c> small</c><00:04:47.870><c> and</c>

00:04:48.100 --> 00:04:48.110 align:start position:0%
you should keep your test small and
 

00:04:48.110 --> 00:04:49.869 align:start position:0%
you should keep your test small and
scoped<00:04:48.439><c> which</c><00:04:49.129><c> will</c><00:04:49.310><c> make</c><00:04:49.460><c> them</c><00:04:49.610><c> more</c>

00:04:49.869 --> 00:04:49.879 align:start position:0%
scoped which will make them more
 

00:04:49.879 --> 00:04:52.420 align:start position:0%
scoped which will make them more
reliable<00:04:50.389><c> if</c><00:04:50.569><c> you</c><00:04:51.439><c> want</c><00:04:51.620><c> to</c><00:04:51.710><c> practice</c><00:04:51.949><c> adding</c>

00:04:52.420 --> 00:04:52.430 align:start position:0%
reliable if you want to practice adding
 

00:04:52.430 --> 00:04:54.249 align:start position:0%
reliable if you want to practice adding
and<00:04:52.580><c> running</c><00:04:52.849><c> UI</c><00:04:53.090><c> tests</c><00:04:53.569><c> on</c><00:04:53.689><c> your</c><00:04:53.810><c> own</c><00:04:54.020><c> I</c>

00:04:54.249 --> 00:04:54.259 align:start position:0%
and running UI tests on your own I
 

00:04:54.259 --> 00:04:56.080 align:start position:0%
and running UI tests on your own I
suggest<00:04:54.949><c> you</c><00:04:55.069><c> check</c><00:04:55.249><c> out</c><00:04:55.400><c> our</c><00:04:55.580><c> Android</c>

00:04:56.080 --> 00:04:56.090 align:start position:0%
suggest you check out our Android
 

00:04:56.090 --> 00:04:57.969 align:start position:0%
suggest you check out our Android
testing<00:04:56.509><c> code</c><00:04:56.779><c> lab</c><00:04:57.020><c> which</c><00:04:57.409><c> I</c><00:04:57.529><c> based</c><00:04:57.770><c> this</c>

00:04:57.969 --> 00:04:57.979 align:start position:0%
testing code lab which I based this
 

00:04:57.979 --> 00:05:00.399 align:start position:0%
testing code lab which I based this
video<00:04:58.310><c> on</c><00:04:58.520><c> it</c><00:04:59.330><c> contains</c><00:04:59.779><c> a</c><00:04:59.930><c> downloadable</c>

00:05:00.399 --> 00:05:00.409 align:start position:0%
video on it contains a downloadable
 

00:05:00.409 --> 00:05:02.649 align:start position:0%
video on it contains a downloadable
project<00:05:00.949><c> and</c><00:05:01.159><c> step-by-step</c><00:05:01.490><c> instructions</c><00:05:02.449><c> to</c>

00:05:02.649 --> 00:05:02.659 align:start position:0%
project and step-by-step instructions to
 

00:05:02.659 --> 00:05:03.719 align:start position:0%
project and step-by-step instructions to
get<00:05:02.779><c> you</c><00:05:02.930><c> started</c>

00:05:03.719 --> 00:05:03.729 align:start position:0%
get you started
 

00:05:03.729 --> 00:05:06.159 align:start position:0%
get you started
join<00:05:04.729><c> me</c><00:05:04.909><c> for</c><00:05:04.939><c> the</c><00:05:05.210><c> next</c><00:05:05.449><c> episode</c><00:05:05.870><c> of</c><00:05:05.900><c> Android</c>

00:05:06.159 --> 00:05:06.169 align:start position:0%
join me for the next episode of Android
 

00:05:06.169 --> 00:05:08.290 align:start position:0%
join me for the next episode of Android
testing<00:05:06.680><c> patterns</c><00:05:07.069><c> to</c><00:05:07.550><c> learn</c><00:05:07.699><c> how</c><00:05:07.939><c> to</c><00:05:07.969><c> handle</c>

00:05:08.290 --> 00:05:08.300 align:start position:0%
testing patterns to learn how to handle
 

00:05:08.300 --> 00:05:10.779 align:start position:0%
testing patterns to learn how to handle
adapter<00:05:08.930><c> views</c><00:05:09.199><c> in</c><00:05:09.349><c> your</c><00:05:09.560><c> tests</c><00:05:09.949><c> good</c><00:05:10.610><c> luck</c>

00:05:10.779 --> 00:05:10.789 align:start position:0%
adapter views in your tests good luck
 

00:05:10.789 --> 00:05:31.020 align:start position:0%
adapter views in your tests good luck
and<00:05:11.000><c> happy</c><00:05:11.419><c> testing</c>

00:05:31.020 --> 00:05:31.030 align:start position:0%
 
 

00:05:31.030 --> 00:05:33.090 align:start position:0%
 
you

