WEBVTT
Kind: captions
Language: en

00:00:01.420 --> 00:00:04.360 align:start position:0%
 
[Music]

00:00:04.360 --> 00:00:04.370 align:start position:0%
[Music]
 

00:00:04.370 --> 00:00:07.880 align:start position:0%
[Music]
hello<00:00:05.370><c> everyone</c><00:00:06.140><c> thank</c><00:00:07.140><c> you</c><00:00:07.230><c> all</c><00:00:07.350><c> for</c><00:00:07.529><c> coming</c>

00:00:07.880 --> 00:00:07.890 align:start position:0%
hello everyone thank you all for coming
 

00:00:07.890 --> 00:00:12.589 align:start position:0%
hello everyone thank you all for coming
and<00:00:08.040><c> let's</c><00:00:08.370><c> get</c><00:00:08.519><c> started</c><00:00:09.030><c> so</c><00:00:10.849><c> I'm</c><00:00:11.849><c> Matthew</c><00:00:12.179><c> and</c>

00:00:12.589 --> 00:00:12.599 align:start position:0%
and let's get started so I'm Matthew and
 

00:00:12.599 --> 00:00:15.530 align:start position:0%
and let's get started so I'm Matthew and
today<00:00:13.049><c> my</c><00:00:13.980><c> colleagues</c><00:00:14.429><c> and</c><00:00:14.549><c> I</c><00:00:14.700><c> will</c><00:00:15.389><c> be</c>

00:00:15.530 --> 00:00:15.540 align:start position:0%
today my colleagues and I will be
 

00:00:15.540 --> 00:00:17.000 align:start position:0%
today my colleagues and I will be
talking<00:00:15.690><c> about</c><00:00:16.020><c> how</c><00:00:16.320><c> we</c><00:00:16.379><c> are</c><00:00:16.650><c> making</c><00:00:16.830><c> the</c>

00:00:17.000 --> 00:00:17.010 align:start position:0%
talking about how we are making the
 

00:00:17.010 --> 00:00:20.060 align:start position:0%
talking about how we are making the
Android<00:00:17.609><c> runtime</c><00:00:17.850><c> also</c><00:00:18.539><c> known</c><00:00:18.660><c> as</c><00:00:18.810><c> art</c><00:00:19.070><c> faster</c>

00:00:20.060 --> 00:00:20.070 align:start position:0%
Android runtime also known as art faster
 

00:00:20.070 --> 00:00:24.040 align:start position:0%
Android runtime also known as art faster
in<00:00:20.310><c> Android</c><00:00:20.789><c> Q</c><00:00:21.590><c> we</c><00:00:22.590><c> will</c><00:00:22.740><c> also</c><00:00:22.980><c> be</c><00:00:23.460><c> showing</c><00:00:23.789><c> you</c>

00:00:24.040 --> 00:00:24.050 align:start position:0%
in Android Q we will also be showing you
 

00:00:24.050 --> 00:00:26.689 align:start position:0%
in Android Q we will also be showing you
some<00:00:25.050><c> both</c><00:00:25.289><c> some</c><00:00:25.560><c> internal</c><00:00:26.039><c> knowledge</c><00:00:26.250><c> about</c>

00:00:26.689 --> 00:00:26.699 align:start position:0%
some both some internal knowledge about
 

00:00:26.699 --> 00:00:29.839 align:start position:0%
some both some internal knowledge about
art<00:00:27.000><c> as</c><00:00:27.180><c> well</c><00:00:27.630><c> as</c><00:00:27.900><c> some</c><00:00:28.170><c> best</c><00:00:28.380><c> practices</c><00:00:29.010><c> such</c>

00:00:29.839 --> 00:00:29.849 align:start position:0%
art as well as some best practices such
 

00:00:29.849 --> 00:00:32.179 align:start position:0%
art as well as some best practices such
as<00:00:30.060><c> using</c><00:00:30.300><c> the</c><00:00:30.660><c> report</c><00:00:31.019><c> fully</c><00:00:31.289><c> drawn</c><00:00:31.500><c> API</c><00:00:31.830><c> as</c>

00:00:32.179 --> 00:00:32.189 align:start position:0%
as using the report fully drawn API as
 

00:00:32.189 --> 00:00:35.139 align:start position:0%
as using the report fully drawn API as
well<00:00:32.790><c> as</c><00:00:32.969><c> when</c><00:00:33.180><c> to</c><00:00:33.329><c> use</c><00:00:33.420><c> object</c><00:00:33.899><c> pooling</c><00:00:34.110><c> and</c>

00:00:35.139 --> 00:00:35.149 align:start position:0%
well as when to use object pooling and
 

00:00:35.149 --> 00:00:39.889 align:start position:0%
well as when to use object pooling and
now<00:00:36.149><c> a</c><00:00:36.420><c> recap</c><00:00:36.930><c> about</c><00:00:37.170><c> how</c><00:00:37.500><c> art</c><00:00:37.800><c> works</c><00:00:38.480><c> so</c><00:00:39.480><c> art</c>

00:00:39.889 --> 00:00:39.899 align:start position:0%
now a recap about how art works so art
 

00:00:39.899 --> 00:00:41.990 align:start position:0%
now a recap about how art works so art
is<00:00:40.110><c> the</c><00:00:40.530><c> software</c><00:00:40.950><c> layer</c><00:00:41.129><c> in</c><00:00:41.399><c> between</c><00:00:41.879><c> the</c>

00:00:41.990 --> 00:00:42.000 align:start position:0%
is the software layer in between the
 

00:00:42.000 --> 00:00:43.639 align:start position:0%
is the software layer in between the
Android<00:00:42.360><c> operating</c><00:00:42.480><c> system</c><00:00:42.899><c> and</c><00:00:43.440><c> the</c>

00:00:43.639 --> 00:00:43.649 align:start position:0%
Android operating system and the
 

00:00:43.649 --> 00:00:46.940 align:start position:0%
Android operating system and the
applications<00:00:43.940><c> it</c><00:00:45.110><c> provides</c><00:00:46.110><c> an</c><00:00:46.379><c> execution</c>

00:00:46.940 --> 00:00:46.950 align:start position:0%
applications it provides an execution
 

00:00:46.950 --> 00:00:47.660 align:start position:0%
applications it provides an execution
environment

00:00:47.660 --> 00:00:47.670 align:start position:0%
environment
 

00:00:47.670 --> 00:00:50.299 align:start position:0%
environment
for<00:00:48.420><c> running</c><00:00:48.629><c> both</c><00:00:48.989><c> Kotlin</c><00:00:49.710><c> and</c><00:00:49.950><c> Java</c>

00:00:50.299 --> 00:00:50.309 align:start position:0%
for running both Kotlin and Java
 

00:00:50.309 --> 00:00:54.170 align:start position:0%
for running both Kotlin and Java
language<00:00:50.520><c> applications</c><00:00:51.329><c> on</c><00:00:51.510><c> Android</c><00:00:53.030><c> to</c><00:00:54.030><c> do</c>

00:00:54.170 --> 00:00:54.180 align:start position:0%
language applications on Android to do
 

00:00:54.180 --> 00:00:57.260 align:start position:0%
language applications on Android to do
this<00:00:54.329><c> art</c><00:00:54.690><c> does</c><00:00:54.960><c> two</c><00:00:55.230><c> things</c><00:00:55.260><c> it</c><00:00:56.270><c> processes</c>

00:00:57.260 --> 00:00:57.270 align:start position:0%
this art does two things it processes
 

00:00:57.270 --> 00:00:59.660 align:start position:0%
this art does two things it processes
Dex<00:00:57.570><c> files</c><00:00:57.870><c> the</c><00:00:58.230><c> internal</c><00:00:58.710><c> format</c><00:00:59.100><c> of</c><00:00:59.309><c> Android</c>

00:00:59.660 --> 00:00:59.670 align:start position:0%
Dex files the internal format of Android
 

00:00:59.670 --> 00:01:01.869 align:start position:0%
Dex files the internal format of Android
applications<00:01:00.270><c> through</c><00:01:01.109><c> a</c><00:01:01.140><c> hybrid</c><00:01:01.530><c> model</c>

00:01:01.869 --> 00:01:01.879 align:start position:0%
applications through a hybrid model
 

00:01:01.879 --> 00:01:03.850 align:start position:0%
applications through a hybrid model
consisting<00:01:02.879><c> of</c><00:01:02.969><c> interpretation</c>

00:01:03.850 --> 00:01:03.860 align:start position:0%
consisting of interpretation
 

00:01:03.860 --> 00:01:06.980 align:start position:0%
consisting of interpretation
just-in-time<00:01:04.860><c> compilation</c><00:01:05.220><c> and</c><00:01:05.990><c> profile</c>

00:01:06.980 --> 00:01:06.990 align:start position:0%
just-in-time compilation and profile
 

00:01:06.990 --> 00:01:10.969 align:start position:0%
just-in-time compilation and profile
based<00:01:07.260><c> ahead</c><00:01:07.650><c> of</c><00:01:07.740><c> time</c><00:01:07.950><c> compilation</c><00:01:09.650><c> art</c><00:01:10.650><c> also</c>

00:01:10.969 --> 00:01:10.979 align:start position:0%
based ahead of time compilation art also
 

00:01:10.979 --> 00:01:12.969 align:start position:0%
based ahead of time compilation art also
manages<00:01:11.580><c> memory</c><00:01:11.760><c> by</c><00:01:12.420><c> having</c><00:01:12.720><c> automatic</c>

00:01:12.969 --> 00:01:12.979 align:start position:0%
manages memory by having automatic
 

00:01:12.979 --> 00:01:15.440 align:start position:0%
manages memory by having automatic
reclamation<00:01:13.979><c> through</c><00:01:14.760><c> a</c><00:01:14.790><c> concurrent</c>

00:01:15.440 --> 00:01:15.450 align:start position:0%
reclamation through a concurrent
 

00:01:15.450 --> 00:01:17.149 align:start position:0%
reclamation through a concurrent
compacting<00:01:15.900><c> garbage</c><00:01:16.229><c> collector</c><00:01:16.650><c> that</c><00:01:17.040><c> we</c>

00:01:17.149 --> 00:01:17.159 align:start position:0%
compacting garbage collector that we
 

00:01:17.159 --> 00:01:23.929 align:start position:0%
compacting garbage collector that we
introduced<00:01:17.549><c> in</c><00:01:17.759><c> Android</c><00:01:18.119><c> Oreo</c><00:01:21.170><c> so</c><00:01:22.549><c> an</c><00:01:23.549><c> update</c>

00:01:23.929 --> 00:01:23.939 align:start position:0%
introduced in Android Oreo so an update
 

00:01:23.939 --> 00:01:27.260 align:start position:0%
introduced in Android Oreo so an update
on<00:01:23.970><c> profiles</c><00:01:24.479><c> in</c><00:01:24.659><c> the</c><00:01:24.720><c> cloud</c><00:01:25.549><c> so</c><00:01:26.549><c> art</c><00:01:26.880><c> has</c><00:01:27.090><c> had</c>

00:01:27.260 --> 00:01:27.270 align:start position:0%
on profiles in the cloud so art has had
 

00:01:27.270 --> 00:01:29.230 align:start position:0%
on profiles in the cloud so art has had
profiles<00:01:27.750><c> that</c><00:01:28.020><c> contain</c><00:01:28.409><c> information</c><00:01:28.439><c> about</c>

00:01:29.230 --> 00:01:29.240 align:start position:0%
profiles that contain information about
 

00:01:29.240 --> 00:01:32.569 align:start position:0%
profiles that contain information about
application<00:01:30.240><c> usage</c><00:01:30.680><c> on</c><00:01:31.680><c> Android</c><00:01:32.250><c> since</c>

00:01:32.569 --> 00:01:32.579 align:start position:0%
application usage on Android since
 

00:01:32.579 --> 00:01:36.319 align:start position:0%
application usage on Android since
nougat<00:01:33.329><c> and</c><00:01:34.009><c> until</c><00:01:35.009><c> recently</c><00:01:35.430><c> these</c><00:01:35.909><c> profiles</c>

00:01:36.319 --> 00:01:36.329 align:start position:0%
nougat and until recently these profiles
 

00:01:36.329 --> 00:01:39.440 align:start position:0%
nougat and until recently these profiles
are<00:01:36.479><c> only</c><00:01:36.630><c> local</c><00:01:37.140><c> to</c><00:01:37.290><c> the</c><00:01:37.380><c> device</c><00:01:38.450><c> these</c>

00:01:39.440 --> 00:01:39.450 align:start position:0%
are only local to the device these
 

00:01:39.450 --> 00:01:41.359 align:start position:0%
are only local to the device these
profiles<00:01:39.900><c> are</c><00:01:40.020><c> collected</c><00:01:40.530><c> by</c><00:01:40.560><c> the</c><00:01:40.799><c> distant</c>

00:01:41.359 --> 00:01:41.369 align:start position:0%
profiles are collected by the distant
 

00:01:41.369 --> 00:01:44.149 align:start position:0%
profiles are collected by the distant
time<00:01:41.579><c> compiler</c><00:01:42.299><c> and</c><00:01:42.479><c> are</c><00:01:43.320><c> saved</c><00:01:43.649><c> to</c><00:01:43.860><c> device</c>

00:01:44.149 --> 00:01:44.159 align:start position:0%
time compiler and are saved to device
 

00:01:44.159 --> 00:01:46.370 align:start position:0%
time compiler and are saved to device
storage<00:01:44.520><c> during</c><00:01:44.939><c> application</c><00:01:45.180><c> execution</c><00:01:45.990><c> and</c>

00:01:46.370 --> 00:01:46.380 align:start position:0%
storage during application execution and
 

00:01:46.380 --> 00:01:48.260 align:start position:0%
storage during application execution and
later<00:01:47.040><c> are</c><00:01:47.280><c> used</c><00:01:47.520><c> to</c><00:01:47.670><c> optimize</c><00:01:48.090><c> the</c>

00:01:48.260 --> 00:01:48.270 align:start position:0%
later are used to optimize the
 

00:01:48.270 --> 00:01:51.530 align:start position:0%
later are used to optimize the
application<00:01:50.119><c> since</c><00:01:51.119><c> these</c><00:01:51.299><c> were</c><00:01:51.420><c> only</c>

00:01:51.530 --> 00:01:51.540 align:start position:0%
application since these were only
 

00:01:51.540 --> 00:01:53.330 align:start position:0%
application since these were only
locally<00:01:52.110><c> stored</c><00:01:52.320><c> on</c><00:01:52.470><c> the</c><00:01:52.560><c> device</c><00:01:52.680><c> until</c>

00:01:53.330 --> 00:01:53.340 align:start position:0%
locally stored on the device until
 

00:01:53.340 --> 00:01:55.340 align:start position:0%
locally stored on the device until
recently<00:01:53.700><c> this</c><00:01:54.329><c> meant</c><00:01:54.630><c> that</c><00:01:54.780><c> applications</c>

00:01:55.340 --> 00:01:55.350 align:start position:0%
recently this meant that applications
 

00:01:55.350 --> 00:01:57.200 align:start position:0%
recently this meant that applications
have<00:01:55.500><c> to</c><00:01:55.530><c> run</c><00:01:55.799><c> a</c><00:01:55.829><c> while</c><00:01:56.100><c> have</c><00:01:56.700><c> their</c><00:01:56.850><c> profile</c>

00:01:57.200 --> 00:01:57.210 align:start position:0%
have to run a while have their profile
 

00:01:57.210 --> 00:01:59.389 align:start position:0%
have to run a while have their profile
saved<00:01:57.570><c> and</c><00:01:57.899><c> then</c><00:01:58.320><c> we</c><00:01:58.439><c> have</c><00:01:58.560><c> to</c><00:01:58.649><c> optimize</c><00:01:58.799><c> the</c>

00:01:59.389 --> 00:01:59.399 align:start position:0%
saved and then we have to optimize the
 

00:01:59.399 --> 00:02:01.700 align:start position:0%
saved and then we have to optimize the
application<00:01:59.960><c> when</c><00:02:00.960><c> the</c><00:02:01.320><c> phone</c><00:02:01.500><c> was</c><00:02:01.680><c> charging</c>

00:02:01.700 --> 00:02:01.710 align:start position:0%
application when the phone was charging
 

00:02:01.710 --> 00:02:03.679 align:start position:0%
application when the phone was charging
or<00:02:02.280><c> when</c><00:02:02.399><c> the</c><00:02:02.490><c> device</c><00:02:02.729><c> was</c><00:02:02.759><c> charging</c><00:02:03.210><c> in</c><00:02:03.479><c> the</c>

00:02:03.679 --> 00:02:03.689 align:start position:0%
or when the device was charging in the
 

00:02:03.689 --> 00:02:07.490 align:start position:0%
or when the device was charging in the
background<00:02:04.759><c> to</c><00:02:05.759><c> address</c><00:02:06.060><c> this</c><00:02:06.329><c> we</c><00:02:06.960><c> introduced</c>

00:02:07.490 --> 00:02:07.500 align:start position:0%
background to address this we introduced
 

00:02:07.500 --> 00:02:09.859 align:start position:0%
background to address this we introduced
a<00:02:07.649><c> new</c><00:02:07.799><c> service</c><00:02:08.250><c> called</c><00:02:08.629><c> profiles</c><00:02:09.629><c> in</c><00:02:09.840><c> the</c>

00:02:09.859 --> 00:02:09.869 align:start position:0%
a new service called profiles in the
 

00:02:09.869 --> 00:02:11.479 align:start position:0%
a new service called profiles in the
cloud

00:02:11.479 --> 00:02:11.489 align:start position:0%
cloud
 

00:02:11.489 --> 00:02:13.070 align:start position:0%
cloud
which<00:02:11.909><c> was</c><00:02:12.060><c> announced</c><00:02:12.480><c> last</c><00:02:12.659><c> year</c><00:02:12.959><c> at</c><00:02:13.050><c> Google</c>

00:02:13.070 --> 00:02:13.080 align:start position:0%
which was announced last year at Google
 

00:02:13.080 --> 00:02:15.740 align:start position:0%
which was announced last year at Google
i/o<00:02:13.379><c> and</c><00:02:14.120><c> today</c><00:02:15.120><c> we're</c><00:02:15.269><c> gonna</c><00:02:15.330><c> be</c><00:02:15.569><c> providing</c>

00:02:15.740 --> 00:02:15.750 align:start position:0%
i/o and today we're gonna be providing
 

00:02:15.750 --> 00:02:19.300 align:start position:0%
i/o and today we're gonna be providing
some<00:02:16.140><c> more</c><00:02:16.170><c> updates</c><00:02:16.590><c> about</c><00:02:16.739><c> how</c><00:02:16.980><c> that's</c><00:02:17.159><c> going</c>

00:02:19.300 --> 00:02:19.310 align:start position:0%
some more updates about how that's going
 

00:02:19.310 --> 00:02:23.780 align:start position:0%
some more updates about how that's going
so<00:02:20.310><c> before</c><00:02:20.700><c> we</c><00:02:20.819><c> dip</c><00:02:21.799><c> dive</c><00:02:22.799><c> into</c><00:02:23.040><c> profiles</c><00:02:23.670><c> in</c>

00:02:23.780 --> 00:02:23.790 align:start position:0%
so before we dip dive into profiles in
 

00:02:23.790 --> 00:02:25.880 align:start position:0%
so before we dip dive into profiles in
the<00:02:23.879><c> cloud</c><00:02:24.120><c> let's</c><00:02:24.930><c> take</c><00:02:25.110><c> a</c><00:02:25.140><c> closer</c><00:02:25.440><c> look</c><00:02:25.680><c> at</c>

00:02:25.880 --> 00:02:25.890 align:start position:0%
the cloud let's take a closer look at
 

00:02:25.890 --> 00:02:29.330 align:start position:0%
the cloud let's take a closer look at
what's<00:02:26.069><c> inside</c><00:02:26.250><c> of</c><00:02:26.459><c> a</c><00:02:26.610><c> profile</c><00:02:28.340><c> profiles</c>

00:02:29.330 --> 00:02:29.340 align:start position:0%
what's inside of a profile profiles
 

00:02:29.340 --> 00:02:30.920 align:start position:0%
what's inside of a profile profiles
contain<00:02:29.580><c> detailed</c><00:02:30.239><c> information</c><00:02:30.780><c> about</c>

00:02:30.920 --> 00:02:30.930 align:start position:0%
contain detailed information about
 

00:02:30.930 --> 00:02:33.470 align:start position:0%
contain detailed information about
application<00:02:31.650><c> usage</c><00:02:32.010><c> including</c><00:02:32.549><c> what</c><00:02:33.090><c> methods</c>

00:02:33.470 --> 00:02:33.480 align:start position:0%
application usage including what methods
 

00:02:33.480 --> 00:02:35.900 align:start position:0%
application usage including what methods
are<00:02:33.599><c> run</c><00:02:33.840><c> and</c><00:02:34.110><c> what</c><00:02:34.860><c> classes</c><00:02:35.160><c> are</c><00:02:35.519><c> loaded</c>

00:02:35.900 --> 00:02:35.910 align:start position:0%
are run and what classes are loaded
 

00:02:35.910 --> 00:02:38.690 align:start position:0%
are run and what classes are loaded
during<00:02:36.330><c> bolts</c><00:02:36.780><c> startup</c><00:02:37.470><c> and</c><00:02:37.650><c> during</c><00:02:38.250><c> a</c><00:02:38.340><c> steady</c>

00:02:38.690 --> 00:02:38.700 align:start position:0%
during bolts startup and during a steady
 

00:02:38.700 --> 00:02:42.170 align:start position:0%
during bolts startup and during a steady
state<00:02:39.000><c> of</c><00:02:39.180><c> the</c><00:02:39.540><c> application</c><00:02:39.629><c> usage</c><00:02:41.180><c> this</c>

00:02:42.170 --> 00:02:42.180 align:start position:0%
state of the application usage this
 

00:02:42.180 --> 00:02:44.240 align:start position:0%
state of the application usage this
enables<00:02:42.720><c> art</c><00:02:42.959><c> to</c><00:02:43.319><c> compile</c><00:02:43.650><c> the</c><00:02:43.920><c> methods</c><00:02:44.220><c> that</c>

00:02:44.240 --> 00:02:44.250 align:start position:0%
enables art to compile the methods that
 

00:02:44.250 --> 00:02:46.009 align:start position:0%
enables art to compile the methods that
are<00:02:44.459><c> the</c><00:02:44.549><c> most</c><00:02:44.730><c> important</c><00:02:45.329><c> to</c><00:02:45.480><c> machine</c><00:02:45.780><c> code</c>

00:02:46.009 --> 00:02:46.019 align:start position:0%
are the most important to machine code
 

00:02:46.019 --> 00:02:49.520 align:start position:0%
are the most important to machine code
as<00:02:46.290><c> well</c><00:02:47.129><c> as</c><00:02:47.720><c> optimize</c><00:02:48.720><c> the</c><00:02:48.870><c> application</c><00:02:49.349><c> for</c>

00:02:49.520 --> 00:02:49.530 align:start position:0%
as well as optimize the application for
 

00:02:49.530 --> 00:02:52.520 align:start position:0%
as well as optimize the application for
startup<00:02:49.920><c> by</c><00:02:50.819><c> prioritizing</c><00:02:51.450><c> code</c><00:02:51.989><c> that</c><00:02:52.200><c> is</c><00:02:52.319><c> run</c>

00:02:52.520 --> 00:02:52.530 align:start position:0%
startup by prioritizing code that is run
 

00:02:52.530 --> 00:02:56.630 align:start position:0%
startup by prioritizing code that is run
during<00:02:52.680><c> startup</c><00:02:53.129><c> for</c><00:02:53.640><c> performance</c><00:02:55.640><c> profiles</c>

00:02:56.630 --> 00:02:56.640 align:start position:0%
during startup for performance profiles
 

00:02:56.640 --> 00:02:59.119 align:start position:0%
during startup for performance profiles
in<00:02:56.940><c> the</c><00:02:57.000><c> cloud</c><00:02:57.359><c> enabled</c><00:02:58.170><c> downloading</c><00:02:58.739><c> the</c>

00:02:59.119 --> 00:02:59.129 align:start position:0%
in the cloud enabled downloading the
 

00:02:59.129 --> 00:03:01.580 align:start position:0%
in the cloud enabled downloading the
profile<00:02:59.489><c> alongside</c><00:02:59.879><c> the</c><00:03:00.269><c> application</c><00:03:00.840><c> during</c>

00:03:01.580 --> 00:03:01.590 align:start position:0%
profile alongside the application during
 

00:03:01.590 --> 00:03:03.949 align:start position:0%
profile alongside the application during
installation<00:03:02.579><c> and</c><00:03:03.090><c> then</c><00:03:03.239><c> optimizing</c><00:03:03.840><c> the</c>

00:03:03.949 --> 00:03:03.959 align:start position:0%
installation and then optimizing the
 

00:03:03.959 --> 00:03:06.500 align:start position:0%
installation and then optimizing the
application<00:03:04.410><c> during</c><00:03:04.739><c> installation</c><00:03:05.510><c> this</c>

00:03:06.500 --> 00:03:06.510 align:start position:0%
application during installation this
 

00:03:06.510 --> 00:03:08.390 align:start position:0%
application during installation this
means<00:03:06.840><c> that</c><00:03:07.200><c> the</c><00:03:07.440><c> users</c><00:03:07.739><c> get</c><00:03:07.980><c> the</c><00:03:08.129><c> performance</c>

00:03:08.390 --> 00:03:08.400 align:start position:0%
means that the users get the performance
 

00:03:08.400 --> 00:03:10.670 align:start position:0%
means that the users get the performance
directly<00:03:09.150><c> after</c><00:03:09.510><c> installation</c><00:03:09.750><c> and</c><00:03:10.260><c> no</c>

00:03:10.670 --> 00:03:10.680 align:start position:0%
directly after installation and no
 

00:03:10.680 --> 00:03:12.530 align:start position:0%
directly after installation and no
longer<00:03:11.040><c> have</c><00:03:11.220><c> to</c><00:03:11.400><c> wait</c><00:03:11.519><c> for</c><00:03:11.579><c> the</c><00:03:12.060><c> application</c>

00:03:12.530 --> 00:03:12.540 align:start position:0%
longer have to wait for the application
 

00:03:12.540 --> 00:03:14.509 align:start position:0%
longer have to wait for the application
to<00:03:12.660><c> get</c><00:03:12.750><c> optimized</c><00:03:13.290><c> when</c><00:03:13.890><c> the</c><00:03:14.099><c> device</c><00:03:14.340><c> is</c>

00:03:14.509 --> 00:03:14.519 align:start position:0%
to get optimized when the device is
 

00:03:14.519 --> 00:03:17.599 align:start position:0%
to get optimized when the device is
charging<00:03:14.549><c> in</c><00:03:14.970><c> the</c><00:03:15.060><c> background</c><00:03:16.040><c> so</c><00:03:17.040><c> here</c><00:03:17.310><c> we've</c>

00:03:17.599 --> 00:03:17.609 align:start position:0%
charging in the background so here we've
 

00:03:17.609 --> 00:03:20.120 align:start position:0%
charging in the background so here we've
observed<00:03:17.970><c> speed</c><00:03:18.450><c> ups</c><00:03:18.630><c> of</c><00:03:18.870><c> around</c><00:03:19.200><c> 15%</c><00:03:19.620><c> faster</c>

00:03:20.120 --> 00:03:20.130 align:start position:0%
observed speed ups of around 15% faster
 

00:03:20.130 --> 00:03:21.740 align:start position:0%
observed speed ups of around 15% faster
applications<00:03:20.940><c> start</c><00:03:21.150><c> up</c><00:03:21.299><c> directly</c><00:03:21.660><c> after</c>

00:03:21.740 --> 00:03:21.750 align:start position:0%
applications start up directly after
 

00:03:21.750 --> 00:03:26.900 align:start position:0%
applications start up directly after
installation<00:03:24.169><c> so</c><00:03:25.169><c> now</c><00:03:25.319><c> let's</c><00:03:25.560><c> dive</c><00:03:26.400><c> into</c><00:03:26.669><c> how</c>

00:03:26.900 --> 00:03:26.910 align:start position:0%
installation so now let's dive into how
 

00:03:26.910 --> 00:03:28.640 align:start position:0%
installation so now let's dive into how
the<00:03:26.970><c> whole</c><00:03:27.180><c> profile</c><00:03:27.660><c> and</c><00:03:27.840><c> the</c><00:03:27.900><c> cloud</c><00:03:28.139><c> process</c>

00:03:28.640 --> 00:03:28.650 align:start position:0%
the whole profile and the cloud process
 

00:03:28.650 --> 00:03:32.409 align:start position:0%
the whole profile and the cloud process
works<00:03:29.690><c> so</c><00:03:30.690><c> the</c><00:03:30.870><c> main</c><00:03:31.019><c> idea</c><00:03:31.049><c> here</c><00:03:31.829><c> is</c><00:03:32.010><c> that</c>

00:03:32.409 --> 00:03:32.419 align:start position:0%
works so the main idea here is that
 

00:03:32.419 --> 00:03:34.520 align:start position:0%
works so the main idea here is that
applications<00:03:33.419><c> usually</c><00:03:33.660><c> have</c><00:03:34.049><c> commonly</c>

00:03:34.520 --> 00:03:34.530 align:start position:0%
applications usually have commonly
 

00:03:34.530 --> 00:03:36.650 align:start position:0%
applications usually have commonly
shared<00:03:34.769><c> code</c><00:03:35.099><c> paths</c><00:03:35.370><c> between</c><00:03:35.669><c> a</c><00:03:35.880><c> multitude</c><00:03:36.299><c> of</c>

00:03:36.650 --> 00:03:36.660 align:start position:0%
shared code paths between a multitude of
 

00:03:36.660 --> 00:03:39.680 align:start position:0%
shared code paths between a multitude of
users<00:03:37.260><c> and</c><00:03:37.530><c> devices</c><00:03:38.180><c> so</c><00:03:39.180><c> this</c><00:03:39.329><c> means</c><00:03:39.599><c> that</c>

00:03:39.680 --> 00:03:39.690 align:start position:0%
users and devices so this means that
 

00:03:39.690 --> 00:03:41.449 align:start position:0%
users and devices so this means that
most<00:03:39.989><c> users</c><00:03:40.169><c> are</c><00:03:40.440><c> gonna</c><00:03:40.560><c> have</c><00:03:40.769><c> generally</c><00:03:41.340><c> the</c>

00:03:41.449 --> 00:03:41.459 align:start position:0%
most users are gonna have generally the
 

00:03:41.459 --> 00:03:43.940 align:start position:0%
most users are gonna have generally the
same<00:03:41.669><c> use</c><00:03:41.910><c> case</c><00:03:42.030><c> for</c><00:03:42.359><c> startup</c><00:03:42.959><c> and</c><00:03:43.200><c> app</c><00:03:43.769><c> the</c>

00:03:43.940 --> 00:03:43.950 align:start position:0%
same use case for startup and app the
 

00:03:43.950 --> 00:03:47.569 align:start position:0%
same use case for startup and app the
application<00:03:44.400><c> usage</c><00:03:44.669><c> in</c><00:03:44.849><c> general</c><00:03:46.280><c> so</c><00:03:47.280><c> what</c><00:03:47.430><c> we</c>

00:03:47.569 --> 00:03:47.579 align:start position:0%
application usage in general so what we
 

00:03:47.579 --> 00:03:49.190 align:start position:0%
application usage in general so what we
want<00:03:47.790><c> to</c><00:03:47.880><c> do</c><00:03:48.000><c> with</c><00:03:48.120><c> profiles</c><00:03:48.480><c> in</c><00:03:48.630><c> the</c><00:03:48.720><c> cloud</c><00:03:48.959><c> is</c>

00:03:49.190 --> 00:03:49.200 align:start position:0%
want to do with profiles in the cloud is
 

00:03:49.200 --> 00:03:51.379 align:start position:0%
want to do with profiles in the cloud is
have<00:03:49.889><c> the</c><00:03:50.069><c> initial</c><00:03:50.400><c> users</c><00:03:50.760><c> bootstrap</c>

00:03:51.379 --> 00:03:51.389 align:start position:0%
have the initial users bootstrap
 

00:03:51.389 --> 00:03:52.940 align:start position:0%
have the initial users bootstrap
performance<00:03:51.930><c> for</c><00:03:52.200><c> the</c><00:03:52.260><c> rest</c><00:03:52.440><c> of</c><00:03:52.560><c> the</c><00:03:52.650><c> users</c>

00:03:52.940 --> 00:03:52.950 align:start position:0%
performance for the rest of the users
 

00:03:52.950 --> 00:03:56.390 align:start position:0%
performance for the rest of the users
and<00:03:53.190><c> this</c><00:03:53.730><c> is</c><00:03:53.910><c> often</c><00:03:54.090><c> a</c><00:03:54.769><c> takes</c><00:03:55.769><c> advantage</c><00:03:56.220><c> or</c>

00:03:56.390 --> 00:03:56.400 align:start position:0%
and this is often a takes advantage or
 

00:03:56.400 --> 00:03:58.220 align:start position:0%
and this is often a takes advantage or
benefits<00:03:57.030><c> from</c><00:03:57.180><c> the</c><00:03:57.299><c> fact</c><00:03:57.510><c> that</c><00:03:57.599><c> developers</c>

00:03:58.220 --> 00:03:58.230 align:start position:0%
benefits from the fact that developers
 

00:03:58.230 --> 00:04:00.409 align:start position:0%
benefits from the fact that developers
roll<00:03:58.950><c> out</c><00:03:59.099><c> the</c><00:03:59.280><c> applications</c><00:03:59.790><c> incrementally</c>

00:04:00.409 --> 00:04:00.419 align:start position:0%
roll out the applications incrementally
 

00:04:00.419 --> 00:04:04.159 align:start position:0%
roll out the applications incrementally
with<00:04:00.629><c> alpha</c><00:04:00.930><c> beta</c><00:04:01.109><c> channels</c><00:04:02.629><c> so</c><00:04:03.629><c> once</c><00:04:04.019><c> an</c>

00:04:04.159 --> 00:04:04.169 align:start position:0%
with alpha beta channels so once an
 

00:04:04.169 --> 00:04:06.440 align:start position:0%
with alpha beta channels so once an
application<00:04:04.680><c> is</c><00:04:04.829><c> installed</c><00:04:05.310><c> the</c><00:04:06.030><c> profiles</c>

00:04:06.440 --> 00:04:06.450 align:start position:0%
application is installed the profiles
 

00:04:06.450 --> 00:04:08.330 align:start position:0%
application is installed the profiles
are<00:04:06.599><c> uploaded</c><00:04:07.079><c> to</c><00:04:07.109><c> play</c><00:04:07.379><c> and</c><00:04:07.650><c> are</c><00:04:07.769><c> aggregated</c>

00:04:08.330 --> 00:04:08.340 align:start position:0%
are uploaded to play and are aggregated
 

00:04:08.340 --> 00:04:10.699 align:start position:0%
are uploaded to play and are aggregated
into<00:04:08.669><c> what</c><00:04:08.819><c> we</c><00:04:08.970><c> call</c><00:04:09.209><c> a</c><00:04:09.449><c> common</c><00:04:10.019><c> core</c><00:04:10.260><c> profile</c>

00:04:10.699 --> 00:04:10.709 align:start position:0%
into what we call a common core profile
 

00:04:10.709 --> 00:04:13.520 align:start position:0%
into what we call a common core profile
for<00:04:10.980><c> the</c><00:04:11.099><c> application</c><00:04:11.609><c> and</c><00:04:12.290><c> in</c><00:04:13.290><c> future</c>

00:04:13.520 --> 00:04:13.530 align:start position:0%
for the application and in future
 

00:04:13.530 --> 00:04:15.770 align:start position:0%
for the application and in future
installs<00:04:14.010><c> this</c><00:04:14.609><c> common</c><00:04:15.030><c> core</c><00:04:15.209><c> profile</c><00:04:15.569><c> is</c>

00:04:15.770 --> 00:04:15.780 align:start position:0%
installs this common core profile is
 

00:04:15.780 --> 00:04:17.509 align:start position:0%
installs this common core profile is
downloaded<00:04:16.289><c> alongside</c><00:04:16.590><c> the</c><00:04:16.859><c> application</c><00:04:17.340><c> and</c>

00:04:17.509 --> 00:04:17.519 align:start position:0%
downloaded alongside the application and
 

00:04:17.519 --> 00:04:19.819 align:start position:0%
downloaded alongside the application and
used<00:04:17.760><c> optimize</c><00:04:18.359><c> the</c><00:04:18.989><c> application</c><00:04:19.469><c> during</c>

00:04:19.819 --> 00:04:19.829 align:start position:0%
used optimize the application during
 

00:04:19.829 --> 00:04:21.690 align:start position:0%
used optimize the application during
installation

00:04:21.690 --> 00:04:21.700 align:start position:0%
installation
 

00:04:21.700 --> 00:04:23.830 align:start position:0%
installation
this<00:04:22.700><c> improves</c><00:04:23.060><c> both</c><00:04:23.300><c> the</c><00:04:23.540><c> steady-state</c>

00:04:23.830 --> 00:04:23.840 align:start position:0%
this improves both the steady-state
 

00:04:23.840 --> 00:04:27.310 align:start position:0%
this improves both the steady-state
performance<00:04:24.380><c> as</c><00:04:24.860><c> well</c><00:04:25.040><c> as</c><00:04:25.220><c> the</c><00:04:25.310><c> startup</c><00:04:26.320><c> I'd</c>

00:04:27.310 --> 00:04:27.320 align:start position:0%
performance as well as the startup I'd
 

00:04:27.320 --> 00:04:29.530 align:start position:0%
performance as well as the startup I'd
like<00:04:27.530><c> to</c><00:04:27.680><c> note</c><00:04:27.860><c> that</c><00:04:27.890><c> Android</c><00:04:28.460><c> P</c><00:04:28.670><c> also</c><00:04:28.940><c> has</c><00:04:29.270><c> API</c>

00:04:29.530 --> 00:04:29.540 align:start position:0%
like to note that Android P also has API
 

00:04:29.540 --> 00:04:31.480 align:start position:0%
like to note that Android P also has API
support<00:04:30.080><c> that</c><00:04:30.320><c> non</c><00:04:30.500><c> play</c><00:04:30.740><c> devices</c><00:04:31.040><c> can</c>

00:04:31.480 --> 00:04:31.490 align:start position:0%
support that non play devices can
 

00:04:31.490 --> 00:04:36.790 align:start position:0%
support that non play devices can
leverage<00:04:34.360><c> as</c><00:04:35.360><c> for</c><00:04:35.720><c> numbers</c><00:04:36.020><c> as</c><00:04:36.290><c> you</c><00:04:36.500><c> can</c><00:04:36.650><c> see</c>

00:04:36.790 --> 00:04:36.800 align:start position:0%
leverage as for numbers as you can see
 

00:04:36.800 --> 00:04:38.650 align:start position:0%
leverage as for numbers as you can see
here<00:04:37.100><c> YouTube</c><00:04:37.790><c> has</c><00:04:38.000><c> a</c><00:04:38.030><c> large</c><00:04:38.300><c> startup</c>

00:04:38.650 --> 00:04:38.660 align:start position:0%
here YouTube has a large startup
 

00:04:38.660 --> 00:04:40.840 align:start position:0%
here YouTube has a large startup
improvement<00:04:39.080><c> around</c><00:04:39.290><c> 18%</c><00:04:39.620><c> from</c><00:04:40.250><c> profiles</c><00:04:40.700><c> in</c>

00:04:40.840 --> 00:04:40.850 align:start position:0%
improvement around 18% from profiles in
 

00:04:40.850 --> 00:04:42.970 align:start position:0%
improvement around 18% from profiles in
the<00:04:40.880><c> cloud</c><00:04:41.150><c> and</c><00:04:41.450><c> other</c><00:04:42.110><c> applications</c><00:04:42.560><c> also</c>

00:04:42.970 --> 00:04:42.980 align:start position:0%
the cloud and other applications also
 

00:04:42.980 --> 00:04:45.910 align:start position:0%
the cloud and other applications also
have<00:04:43.340><c> substantial</c><00:04:44.330><c> improvement</c><00:04:44.810><c> this</c><00:04:45.770><c> is</c>

00:04:45.910 --> 00:04:45.920 align:start position:0%
have substantial improvement this is
 

00:04:45.920 --> 00:04:47.860 align:start position:0%
have substantial improvement this is
field<00:04:46.190><c> data</c><00:04:46.400><c> of</c><00:04:46.700><c> Google</c><00:04:47.570><c> applications</c>

00:04:47.860 --> 00:04:47.870 align:start position:0%
field data of Google applications
 

00:04:47.870 --> 00:04:55.150 align:start position:0%
field data of Google applications
collected<00:04:48.800><c> from</c><00:04:48.980><c> pixel</c><00:04:49.910><c> devices</c><00:04:52.780><c> and</c><00:04:54.040><c> one</c><00:04:55.040><c> of</c>

00:04:55.150 --> 00:04:55.160 align:start position:0%
collected from pixel devices and one of
 

00:04:55.160 --> 00:04:56.290 align:start position:0%
collected from pixel devices and one of
the<00:04:55.220><c> best</c><00:04:55.430><c> parts</c><00:04:55.700><c> of</c><00:04:55.790><c> all</c><00:04:55.940><c> this</c><00:04:56.060><c> is</c><00:04:56.270><c> that</c>

00:04:56.290 --> 00:04:56.300 align:start position:0%
the best parts of all this is that
 

00:04:56.300 --> 00:04:58.240 align:start position:0%
the best parts of all this is that
developers<00:04:56.930><c> and</c><00:04:57.140><c> users</c><00:04:57.320><c> get</c><00:04:57.770><c> the</c><00:04:57.860><c> benefits</c>

00:04:58.240 --> 00:04:58.250 align:start position:0%
developers and users get the benefits
 

00:04:58.250 --> 00:05:00.940 align:start position:0%
developers and users get the benefits
for<00:04:58.400><c> free</c><00:04:59.260><c> developers</c><00:05:00.260><c> don't</c><00:05:00.440><c> have</c><00:05:00.560><c> to</c><00:05:00.770><c> write</c>

00:05:00.940 --> 00:05:00.950 align:start position:0%
for free developers don't have to write
 

00:05:00.950 --> 00:05:02.650 align:start position:0%
for free developers don't have to write
a<00:05:00.980><c> single</c><00:05:01.250><c> line</c><00:05:01.430><c> of</c><00:05:01.550><c> code</c><00:05:01.670><c> to</c><00:05:02.210><c> enable</c><00:05:02.390><c> the</c>

00:05:02.650 --> 00:05:02.660 align:start position:0%
a single line of code to enable the
 

00:05:02.660 --> 00:05:04.150 align:start position:0%
a single line of code to enable the
profiles<00:05:03.050><c> for</c><00:05:03.260><c> their</c><00:05:03.380><c> applications</c><00:05:03.920><c> and</c>

00:05:04.150 --> 00:05:04.160 align:start position:0%
profiles for their applications and
 

00:05:04.160 --> 00:05:06.010 align:start position:0%
profiles for their applications and
users<00:05:04.700><c> don't</c><00:05:04.790><c> have</c><00:05:04.910><c> to</c><00:05:05.090><c> take</c><00:05:05.240><c> any</c><00:05:05.420><c> action</c><00:05:05.870><c> to</c>

00:05:06.010 --> 00:05:06.020 align:start position:0%
users don't have to take any action to
 

00:05:06.020 --> 00:05:10.150 align:start position:0%
users don't have to take any action to
get<00:05:06.200><c> the</c><00:05:06.320><c> benefits</c><00:05:06.740><c> and</c><00:05:08.110><c> right</c><00:05:09.110><c> now</c><00:05:09.290><c> around</c><00:05:09.770><c> 80</c>

00:05:10.150 --> 00:05:10.160 align:start position:0%
get the benefits and right now around 80
 

00:05:10.160 --> 00:05:12.700 align:start position:0%
get the benefits and right now around 80
percent<00:05:10.580><c> of</c><00:05:10.730><c> installations</c><00:05:11.360><c> on</c><00:05:11.570><c> devices</c><00:05:12.530><c> with</c>

00:05:12.700 --> 00:05:12.710 align:start position:0%
percent of installations on devices with
 

00:05:12.710 --> 00:05:15.580 align:start position:0%
percent of installations on devices with
Google<00:05:13.280><c> Play</c><00:05:13.460><c> services</c><00:05:13.870><c> use</c><00:05:14.870><c> profiles</c><00:05:15.380><c> in</c><00:05:15.560><c> the</c>

00:05:15.580 --> 00:05:15.590 align:start position:0%
Google Play services use profiles in the
 

00:05:15.590 --> 00:05:19.120 align:start position:0%
Google Play services use profiles in the
cloud<00:05:16.720><c> another</c><00:05:17.720><c> interesting</c><00:05:18.290><c> observation</c><00:05:18.440><c> is</c>

00:05:19.120 --> 00:05:19.130 align:start position:0%
cloud another interesting observation is
 

00:05:19.130 --> 00:05:21.790 align:start position:0%
cloud another interesting observation is
that<00:05:19.850><c> the</c><00:05:19.970><c> profiles</c><00:05:20.330><c> in</c><00:05:20.510><c> the</c><00:05:20.540><c> cloud</c><00:05:20.810><c> seems</c><00:05:21.620><c> to</c>

00:05:21.790 --> 00:05:21.800 align:start position:0%
that the profiles in the cloud seems to
 

00:05:21.800 --> 00:05:24.220 align:start position:0%
that the profiles in the cloud seems to
show<00:05:21.980><c> that</c><00:05:22.010><c> only</c><00:05:22.550><c> around</c><00:05:22.790><c> 20%</c><00:05:23.270><c> of</c><00:05:23.690><c> application</c>

00:05:24.220 --> 00:05:24.230 align:start position:0%
show that only around 20% of application
 

00:05:24.230 --> 00:05:26.440 align:start position:0%
show that only around 20% of application
code<00:05:24.380><c> is</c><00:05:24.560><c> commonly</c><00:05:24.920><c> used</c><00:05:25.190><c> this</c><00:05:26.150><c> could</c>

00:05:26.440 --> 00:05:26.450 align:start position:0%
code is commonly used this could
 

00:05:26.450 --> 00:05:28.270 align:start position:0%
code is commonly used this could
indicate<00:05:26.720><c> that</c><00:05:27.080><c> there</c><00:05:27.290><c> are</c><00:05:27.350><c> opportunities</c><00:05:27.980><c> to</c>

00:05:28.270 --> 00:05:28.280 align:start position:0%
indicate that there are opportunities to
 

00:05:28.280 --> 00:05:30.370 align:start position:0%
indicate that there are opportunities to
reduce<00:05:28.400><c> code</c><00:05:28.820><c> size</c><00:05:29.060><c> by</c><00:05:29.420><c> removing</c><00:05:29.870><c> unused</c><00:05:30.170><c> code</c>

00:05:30.370 --> 00:05:30.380 align:start position:0%
reduce code size by removing unused code
 

00:05:30.380 --> 00:05:35.800 align:start position:0%
reduce code size by removing unused code
in<00:05:30.650><c> applications</c><00:05:31.220><c> and</c><00:05:33.610><c> now</c><00:05:34.610><c> let's</c><00:05:35.420><c> go</c><00:05:35.570><c> to</c><00:05:35.660><c> app</c>

00:05:35.800 --> 00:05:35.810 align:start position:0%
in applications and now let's go to app
 

00:05:35.810 --> 00:05:38.650 align:start position:0%
in applications and now let's go to app
startup<00:05:36.730><c> we</c><00:05:37.730><c> have</c><00:05:37.820><c> done</c><00:05:38.000><c> some</c><00:05:38.180><c> improvements</c>

00:05:38.650 --> 00:05:38.660 align:start position:0%
startup we have done some improvements
 

00:05:38.660 --> 00:05:40.540 align:start position:0%
startup we have done some improvements
in<00:05:38.720><c> queue</c><00:05:38.990><c> and</c><00:05:39.230><c> I'll</c><00:05:39.380><c> be</c><00:05:39.530><c> going</c><00:05:39.680><c> over</c><00:05:39.919><c> some</c><00:05:40.520><c> of</c>

00:05:40.540 --> 00:05:40.550 align:start position:0%
in queue and I'll be going over some of
 

00:05:40.550 --> 00:05:44.590 align:start position:0%
in queue and I'll be going over some of
those<00:05:41.380><c> in</c><00:05:42.380><c> Android</c><00:05:42.800><c> q</c><00:05:43.070><c> we</c><00:05:43.880><c> have</c><00:05:44.030><c> done</c><00:05:44.210><c> three</c>

00:05:44.590 --> 00:05:44.600 align:start position:0%
those in Android q we have done three
 

00:05:44.600 --> 00:05:47.830 align:start position:0%
those in Android q we have done three
major<00:05:44.870><c> new</c><00:05:45.620><c> improvements</c><00:05:46.419><c> we've</c><00:05:47.419><c> improved</c>

00:05:47.830 --> 00:05:47.840 align:start position:0%
major new improvements we've improved
 

00:05:47.840 --> 00:05:49.690 align:start position:0%
major new improvements we've improved
the<00:05:48.080><c> application</c><00:05:48.620><c> images</c><00:05:49.040><c> originally</c>

00:05:49.690 --> 00:05:49.700 align:start position:0%
the application images originally
 

00:05:49.700 --> 00:05:52.330 align:start position:0%
the application images originally
introduced<00:05:50.270><c> in</c><00:05:50.480><c> Android</c><00:05:50.960><c> nougat</c><00:05:51.350><c> to</c><00:05:52.040><c> provide</c>

00:05:52.330 --> 00:05:52.340 align:start position:0%
introduced in Android nougat to provide
 

00:05:52.340 --> 00:05:55.330 align:start position:0%
introduced in Android nougat to provide
a<00:05:52.550><c> larger</c><00:05:52.910><c> startup</c><00:05:53.270><c> improvement</c><00:05:54.220><c> we</c><00:05:55.220><c> have</c>

00:05:55.330 --> 00:05:55.340 align:start position:0%
a larger startup improvement we have
 

00:05:55.340 --> 00:05:57.040 align:start position:0%
a larger startup improvement we have
added<00:05:55.730><c> free</c><00:05:55.970><c> forking</c><00:05:56.360><c> of</c><00:05:56.480><c> application</c>

00:05:57.040 --> 00:05:57.050 align:start position:0%
added free forking of application
 

00:05:57.050 --> 00:05:59.290 align:start position:0%
added free forking of application
processes<00:05:57.680><c> to</c><00:05:58.010><c> accelerate</c><00:05:58.550><c> process</c><00:05:58.970><c> creation</c>

00:05:59.290 --> 00:05:59.300 align:start position:0%
processes to accelerate process creation
 

00:05:59.300 --> 00:06:01.870 align:start position:0%
processes to accelerate process creation
on<00:05:59.630><c> Android</c><00:06:00.110><c> and</c><00:06:00.340><c> we</c><00:06:01.340><c> have</c><00:06:01.460><c> added</c><00:06:01.580><c> a</c><00:06:01.850><c> new</c>

00:06:01.870 --> 00:06:01.880 align:start position:0%
on Android and we have added a new
 

00:06:01.880 --> 00:06:06.550 align:start position:0%
on Android and we have added a new
generational<00:06:02.570><c> garbage</c><00:06:02.750><c> collector</c><00:06:05.560><c> so</c>

00:06:06.550 --> 00:06:06.560 align:start position:0%
generational garbage collector so
 

00:06:06.560 --> 00:06:10.060 align:start position:0%
generational garbage collector so
starting<00:06:07.190><c> with</c><00:06:07.310><c> application</c><00:06:07.850><c> images</c><00:06:09.070><c> recall</c>

00:06:10.060 --> 00:06:10.070 align:start position:0%
starting with application images recall
 

00:06:10.070 --> 00:06:13.330 align:start position:0%
starting with application images recall
that<00:06:10.370><c> application</c><00:06:10.910><c> images</c><00:06:11.360><c> as</c><00:06:11.990><c> you</c><00:06:12.410><c> see</c><00:06:12.830><c> other</c>

00:06:13.330 --> 00:06:13.340 align:start position:0%
that application images as you see other
 

00:06:13.340 --> 00:06:16.060 align:start position:0%
that application images as you see other
year's<00:06:13.940><c> i/o</c><00:06:14.090><c> talks</c><00:06:14.480><c> are</c><00:06:15.050><c> actually</c><00:06:15.530><c> C</c><00:06:15.770><c> realized</c>

00:06:16.060 --> 00:06:16.070 align:start position:0%
year's i/o talks are actually C realized
 

00:06:16.070 --> 00:06:17.140 align:start position:0%
year's i/o talks are actually C realized
heap<00:06:16.400><c> snapshots</c>

00:06:17.140 --> 00:06:17.150 align:start position:0%
heap snapshots
 

00:06:17.150 --> 00:06:19.090 align:start position:0%
heap snapshots
containing<00:06:17.960><c> the</c><00:06:18.080><c> classes</c><00:06:18.530><c> that</c><00:06:18.560><c> are</c><00:06:18.770><c> the</c><00:06:18.950><c> most</c>

00:06:19.090 --> 00:06:19.100 align:start position:0%
containing the classes that are the most
 

00:06:19.100 --> 00:06:20.920 align:start position:0%
containing the classes that are the most
commonly<00:06:19.550><c> used</c><00:06:19.610><c> during</c><00:06:20.030><c> startup</c><00:06:20.540><c> of</c><00:06:20.690><c> an</c>

00:06:20.920 --> 00:06:20.930 align:start position:0%
commonly used during startup of an
 

00:06:20.930 --> 00:06:23.860 align:start position:0%
commonly used during startup of an
application<00:06:21.940><c> so</c><00:06:22.940><c> this</c><00:06:23.150><c> optimizes</c><00:06:23.630><c> the</c>

00:06:23.860 --> 00:06:23.870 align:start position:0%
application so this optimizes the
 

00:06:23.870 --> 00:06:26.680 align:start position:0%
application so this optimizes the
performance<00:06:24.530><c> by</c><00:06:25.180><c> shifting</c><00:06:26.180><c> the</c><00:06:26.360><c> work</c><00:06:26.510><c> of</c>

00:06:26.680 --> 00:06:26.690 align:start position:0%
performance by shifting the work of
 

00:06:26.690 --> 00:06:28.750 align:start position:0%
performance by shifting the work of
loading<00:06:27.020><c> those</c><00:06:27.169><c> classes</c><00:06:27.680><c> from</c><00:06:28.310><c> happening</c>

00:06:28.750 --> 00:06:28.760 align:start position:0%
loading those classes from happening
 

00:06:28.760 --> 00:06:30.520 align:start position:0%
loading those classes from happening
during<00:06:29.120><c> startup</c><00:06:29.539><c> to</c><00:06:29.780><c> happening</c><00:06:30.140><c> ahead</c><00:06:30.410><c> of</c>

00:06:30.520 --> 00:06:30.530 align:start position:0%
during startup to happening ahead of
 

00:06:30.530 --> 00:06:34.409 align:start position:0%
during startup to happening ahead of
time<00:06:30.770><c> in</c><00:06:31.010><c> the</c><00:06:31.700><c> art</c><00:06:31.910><c> ahead</c><00:06:32.270><c> of</c><00:06:32.390><c> time</c><00:06:32.570><c> compile</c>

00:06:34.409 --> 00:06:34.419 align:start position:0%
time in the art ahead of time compile
 

00:06:34.419 --> 00:06:37.360 align:start position:0%
time in the art ahead of time compile
so<00:06:35.419><c> the</c><00:06:35.539><c> application</c><00:06:36.020><c> image</c><00:06:36.229><c> is</c><00:06:36.560><c> generated</c><00:06:37.220><c> by</c>

00:06:37.360 --> 00:06:37.370 align:start position:0%
so the application image is generated by
 

00:06:37.370 --> 00:06:39.309 align:start position:0%
so the application image is generated by
the<00:06:37.430><c> compiler</c><00:06:37.849><c> taking</c><00:06:38.330><c> both</c><00:06:38.539><c> the</c><00:06:38.930><c> application</c>

00:06:39.309 --> 00:06:39.319 align:start position:0%
the compiler taking both the application
 

00:06:39.319 --> 00:06:42.700 align:start position:0%
the compiler taking both the application
apk<00:06:40.069><c> and</c><00:06:40.310><c> the</c><00:06:40.699><c> profile</c><00:06:41.090><c> as</c><00:06:41.330><c> inputs</c><00:06:41.870><c> and</c><00:06:42.139><c> then</c>

00:06:42.700 --> 00:06:42.710 align:start position:0%
apk and the profile as inputs and then
 

00:06:42.710 --> 00:06:44.920 align:start position:0%
apk and the profile as inputs and then
using<00:06:43.129><c> the</c><00:06:43.250><c> profile</c><00:06:43.669><c> to</c><00:06:44.210><c> know</c><00:06:44.330><c> specifically</c>

00:06:44.920 --> 00:06:44.930 align:start position:0%
using the profile to know specifically
 

00:06:44.930 --> 00:06:46.899 align:start position:0%
using the profile to know specifically
what<00:06:45.229><c> classes</c><00:06:45.740><c> are</c><00:06:45.889><c> loaded</c><00:06:46.250><c> during</c><00:06:46.520><c> startup</c>

00:06:46.899 --> 00:06:46.909 align:start position:0%
what classes are loaded during startup
 

00:06:46.909 --> 00:06:48.610 align:start position:0%
what classes are loaded during startup
and<00:06:47.180><c> including</c><00:06:47.840><c> only</c><00:06:47.990><c> these</c><00:06:48.289><c> in</c><00:06:48.530><c> the</c>

00:06:48.610 --> 00:06:48.620 align:start position:0%
and including only these in the
 

00:06:48.620 --> 00:06:52.600 align:start position:0%
and including only these in the
application<00:06:49.129><c> images</c><00:06:49.550><c> this</c><00:06:50.449><c> is</c><00:06:50.509><c> done</c><00:06:51.610><c> during</c>

00:06:52.600 --> 00:06:52.610 align:start position:0%
application images this is done during
 

00:06:52.610 --> 00:06:54.309 align:start position:0%
application images this is done during
installation<00:06:52.969><c> if</c><00:06:53.479><c> there</c><00:06:53.689><c> is</c><00:06:53.780><c> a</c><00:06:53.810><c> profile</c><00:06:54.229><c> from</c>

00:06:54.309 --> 00:06:54.319 align:start position:0%
installation if there is a profile from
 

00:06:54.319 --> 00:06:56.170 align:start position:0%
installation if there is a profile from
the<00:06:54.500><c> cloud</c><00:06:54.680><c> presence</c><00:06:55.129><c> otherwise</c><00:06:55.879><c> it's</c>

00:06:56.170 --> 00:06:56.180 align:start position:0%
the cloud presence otherwise it's
 

00:06:56.180 --> 00:06:57.700 align:start position:0%
the cloud presence otherwise it's
normally<00:06:56.449><c> done</c><00:06:56.599><c> in</c><00:06:56.810><c> the</c><00:06:56.840><c> background</c><00:06:57.110><c> when</c><00:06:57.590><c> the</c>

00:06:57.700 --> 00:06:57.710 align:start position:0%
normally done in the background when the
 

00:06:57.710 --> 00:07:01.029 align:start position:0%
normally done in the background when the
device<00:06:57.949><c> is</c><00:06:57.979><c> charging</c><00:06:58.580><c> so</c><00:06:59.800><c> how</c><00:07:00.800><c> have</c><00:07:01.009><c> we</c>

00:07:01.029 --> 00:07:01.039 align:start position:0%
device is charging so how have we
 

00:07:01.039 --> 00:07:02.830 align:start position:0%
device is charging so how have we
improved<00:07:01.400><c> application</c><00:07:01.520><c> images</c><00:07:02.270><c> in</c><00:07:02.449><c> Android</c>

00:07:02.830 --> 00:07:02.840 align:start position:0%
improved application images in Android
 

00:07:02.840 --> 00:07:06.279 align:start position:0%
improved application images in Android
queue<00:07:03.939><c> well</c><00:07:04.939><c> we</c><00:07:05.120><c> recently</c><00:07:05.300><c> observed</c><00:07:05.930><c> that</c>

00:07:06.279 --> 00:07:06.289 align:start position:0%
queue well we recently observed that
 

00:07:06.289 --> 00:07:08.499 align:start position:0%
queue well we recently observed that
string<00:07:06.889><c> interning</c><00:07:07.400><c> cause</c><00:07:07.699><c> specifically</c><00:07:08.330><c> by</c>

00:07:08.499 --> 00:07:08.509 align:start position:0%
string interning cause specifically by
 

00:07:08.509 --> 00:07:10.300 align:start position:0%
string interning cause specifically by
using<00:07:08.870><c> string</c><00:07:09.169><c> literals</c><00:07:09.530><c> in</c><00:07:09.770><c> application</c>

00:07:10.300 --> 00:07:10.310 align:start position:0%
using string literals in application
 

00:07:10.310 --> 00:07:12.159 align:start position:0%
using string literals in application
startup<00:07:10.729><c> was</c><00:07:11.240><c> taking</c><00:07:11.569><c> a</c><00:07:11.629><c> large</c><00:07:11.810><c> amount</c><00:07:12.080><c> of</c>

00:07:12.159 --> 00:07:12.169 align:start position:0%
startup was taking a large amount of
 

00:07:12.169 --> 00:07:14.830 align:start position:0%
startup was taking a large amount of
time<00:07:12.440><c> so</c><00:07:13.250><c> we</c><00:07:13.370><c> added</c><00:07:13.580><c> an</c><00:07:13.819><c> optimization</c><00:07:14.479><c> to</c>

00:07:14.830 --> 00:07:14.840 align:start position:0%
time so we added an optimization to
 

00:07:14.840 --> 00:07:16.990 align:start position:0%
time so we added an optimization to
include<00:07:15.469><c> the</c><00:07:15.979><c> string</c><00:07:16.370><c> literals</c><00:07:16.729><c> that</c><00:07:16.909><c> are</c>

00:07:16.990 --> 00:07:17.000 align:start position:0%
include the string literals that are
 

00:07:17.000 --> 00:07:18.730 align:start position:0%
include the string literals that are
commonly<00:07:17.419><c> used</c><00:07:17.719><c> during</c><00:07:17.930><c> startup</c><00:07:18.440><c> for</c><00:07:18.650><c> the</c>

00:07:18.730 --> 00:07:18.740 align:start position:0%
commonly used during startup for the
 

00:07:18.740 --> 00:07:21.010 align:start position:0%
commonly used during startup for the
application<00:07:19.280><c> inside</c><00:07:20.090><c> of</c><00:07:20.389><c> the</c><00:07:20.539><c> application</c>

00:07:21.010 --> 00:07:21.020 align:start position:0%
application inside of the application
 

00:07:21.020 --> 00:07:24.550 align:start position:0%
application inside of the application
image<00:07:22.300><c> this</c><00:07:23.300><c> is</c><00:07:23.509><c> accomplished</c><00:07:24.080><c> by</c><00:07:24.169><c> leveraging</c>

00:07:24.550 --> 00:07:24.560 align:start position:0%
image this is accomplished by leveraging
 

00:07:24.560 --> 00:07:26.860 align:start position:0%
image this is accomplished by leveraging
the<00:07:24.800><c> profile</c><00:07:25.279><c> to</c><00:07:25.460><c> know</c><00:07:25.580><c> specifically</c><00:07:26.120><c> what</c>

00:07:26.860 --> 00:07:26.870 align:start position:0%
the profile to know specifically what
 

00:07:26.870 --> 00:07:31.300 align:start position:0%
the profile to know specifically what
methods<00:07:27.289><c> are</c><00:07:27.409><c> executed</c><00:07:28.009><c> during</c><00:07:28.219><c> startup</c><00:07:30.310><c> so</c>

00:07:31.300 --> 00:07:31.310 align:start position:0%
methods are executed during startup so
 

00:07:31.310 --> 00:07:33.640 align:start position:0%
methods are executed during startup so
as<00:07:31.520><c> you</c><00:07:31.699><c> can</c><00:07:31.849><c> see</c><00:07:32.060><c> here</c><00:07:32.419><c> there's</c><00:07:32.750><c> around</c><00:07:33.020><c> a</c><00:07:33.169><c> 2.5</c>

00:07:33.640 --> 00:07:33.650 align:start position:0%
as you can see here there's around a 2.5
 

00:07:33.650 --> 00:07:35.409 align:start position:0%
as you can see here there's around a 2.5
percent<00:07:34.009><c> improvement</c><00:07:34.219><c> on</c><00:07:34.610><c> some</c><00:07:34.849><c> applications</c>

00:07:35.409 --> 00:07:35.419 align:start position:0%
percent improvement on some applications
 

00:07:35.419 --> 00:07:37.869 align:start position:0%
percent improvement on some applications
and<00:07:35.689><c> this</c><00:07:36.229><c> is</c><00:07:36.379><c> a</c><00:07:36.409><c> selection</c><00:07:36.919><c> of</c><00:07:37.190><c> first</c><00:07:37.610><c> party</c>

00:07:37.869 --> 00:07:37.879 align:start position:0%
and this is a selection of first party
 

00:07:37.879 --> 00:07:40.469 align:start position:0%
and this is a selection of first party
applications<00:07:38.479><c> running</c><00:07:38.750><c> on</c><00:07:38.930><c> a</c><00:07:38.990><c> pixel</c><00:07:39.349><c> to</c><00:07:39.500><c> excel</c>

00:07:40.469 --> 00:07:40.479 align:start position:0%
applications running on a pixel to excel
 

00:07:40.479 --> 00:07:43.869 align:start position:0%
applications running on a pixel to excel
and<00:07:41.479><c> now</c><00:07:41.800><c> let</c><00:07:42.800><c> me</c><00:07:42.889><c> hand</c><00:07:43.069><c> it</c><00:07:43.129><c> off</c><00:07:43.279><c> to</c><00:07:43.310><c> Chris</c><00:07:43.669><c> for</c>

00:07:43.869 --> 00:07:43.879 align:start position:0%
and now let me hand it off to Chris for
 

00:07:43.879 --> 00:07:47.619 align:start position:0%
and now let me hand it off to Chris for
pre<00:07:44.330><c> forking</c><00:07:44.659><c> application</c><00:07:45.139><c> processes</c><00:07:46.629><c> Thank</c>

00:07:47.619 --> 00:07:47.629 align:start position:0%
pre forking application processes Thank
 

00:07:47.629 --> 00:07:48.249 align:start position:0%
pre forking application processes Thank
You<00:07:47.750><c> Matthew</c>

00:07:48.249 --> 00:07:48.259 align:start position:0%
You Matthew
 

00:07:48.259 --> 00:07:51.070 align:start position:0%
You Matthew
hello<00:07:48.949><c> everyone</c><00:07:49.430><c> my</c><00:07:49.610><c> name</c><00:07:49.819><c> is</c><00:07:50.000><c> Chris</c><00:07:50.300><c> and</c><00:07:50.569><c> I</c><00:07:50.960><c> am</c>

00:07:51.070 --> 00:07:51.080 align:start position:0%
hello everyone my name is Chris and I am
 

00:07:51.080 --> 00:07:52.779 align:start position:0%
hello everyone my name is Chris and I am
here<00:07:51.349><c> to</c><00:07:51.500><c> talk</c><00:07:51.680><c> about</c><00:07:52.039><c> some</c><00:07:52.279><c> of</c><00:07:52.310><c> the</c><00:07:52.430><c> changes</c>

00:07:52.779 --> 00:07:52.789 align:start position:0%
here to talk about some of the changes
 

00:07:52.789 --> 00:07:54.730 align:start position:0%
here to talk about some of the changes
we<00:07:52.909><c> have</c><00:07:52.940><c> made</c><00:07:53.060><c> to</c><00:07:53.330><c> the</c><00:07:53.449><c> zygote</c><00:07:53.870><c> in</c><00:07:54.080><c> Android</c>

00:07:54.730 --> 00:07:54.740 align:start position:0%
we have made to the zygote in Android
 

00:07:54.740 --> 00:07:56.890 align:start position:0%
we have made to the zygote in Android
queue<00:07:55.009><c> to</c><00:07:55.190><c> help</c><00:07:55.520><c> improve</c><00:07:55.879><c> a</c><00:07:56.089><c> application</c>

00:07:56.890 --> 00:07:56.900 align:start position:0%
queue to help improve a application
 

00:07:56.900 --> 00:07:58.990 align:start position:0%
queue to help improve a application
starter<00:07:57.319><c> performance</c><00:07:57.830><c> for</c><00:07:58.520><c> those</c><00:07:58.759><c> of</c><00:07:58.909><c> you</c>

00:07:58.990 --> 00:07:59.000 align:start position:0%
starter performance for those of you
 

00:07:59.000 --> 00:08:00.879 align:start position:0%
starter performance for those of you
unfamiliar<00:07:59.509><c> with</c><00:07:59.629><c> the</c><00:07:59.839><c> zygote</c><00:08:00.229><c> this</c><00:08:00.680><c> is</c><00:08:00.800><c> the</c>

00:08:00.879 --> 00:08:00.889 align:start position:0%
unfamiliar with the zygote this is the
 

00:08:00.889 --> 00:08:03.189 align:start position:0%
unfamiliar with the zygote this is the
process<00:08:01.400><c> in</c><00:08:01.669><c> Android</c><00:08:02.270><c> that</c><00:08:02.300><c> all</c><00:08:02.659><c> applications</c>

00:08:03.189 --> 00:08:03.199 align:start position:0%
process in Android that all applications
 

00:08:03.199 --> 00:08:06.010 align:start position:0%
process in Android that all applications
are<00:08:03.500><c> spawned</c><00:08:03.830><c> from</c><00:08:04.099><c> this</c><00:08:05.029><c> design</c><00:08:05.360><c> allows</c><00:08:05.539><c> us</c>

00:08:06.010 --> 00:08:06.020 align:start position:0%
are spawned from this design allows us
 

00:08:06.020 --> 00:08:09.550 align:start position:0%
are spawned from this design allows us
to<00:08:06.440><c> take</c><00:08:06.650><c> several</c><00:08:07.279><c> application</c><00:08:08.560><c> several</c>

00:08:09.550 --> 00:08:09.560 align:start position:0%
to take several application several
 

00:08:09.560 --> 00:08:10.749 align:start position:0%
to take several application several
steps<00:08:09.740><c> that</c><00:08:09.860><c> are</c><00:08:09.949><c> common</c><00:08:10.159><c> to</c><00:08:10.250><c> all</c><00:08:10.279><c> Android</c>

00:08:10.749 --> 00:08:10.759 align:start position:0%
steps that are common to all Android
 

00:08:10.759 --> 00:08:13.209 align:start position:0%
steps that are common to all Android
applications<00:08:11.360><c> and</c><00:08:11.599><c> perform</c><00:08:12.379><c> them</c><00:08:12.620><c> before</c><00:08:13.099><c> the</c>

00:08:13.209 --> 00:08:13.219 align:start position:0%
applications and perform them before the
 

00:08:13.219 --> 00:08:15.089 align:start position:0%
applications and perform them before the
applications<00:08:13.699><c> are</c><00:08:13.819><c> launched</c>

00:08:15.089 --> 00:08:15.099 align:start position:0%
applications are launched
 

00:08:15.099 --> 00:08:17.439 align:start position:0%
applications are launched
unfortunately<00:08:16.099><c> in</c><00:08:16.279><c> previous</c><00:08:16.729><c> versions</c><00:08:17.180><c> of</c>

00:08:17.439 --> 00:08:17.449 align:start position:0%
unfortunately in previous versions of
 

00:08:17.449 --> 00:08:19.059 align:start position:0%
unfortunately in previous versions of
Android<00:08:17.870><c> there</c><00:08:18.289><c> were</c><00:08:18.379><c> still</c><00:08:18.680><c> several</c>

00:08:19.059 --> 00:08:19.069 align:start position:0%
Android there were still several
 

00:08:19.069 --> 00:08:21.339 align:start position:0%
Android there were still several
application<00:08:19.819><c> agnostic</c><00:08:20.270><c> steps</c><00:08:20.539><c> that</c><00:08:20.990><c> had</c><00:08:21.199><c> to</c>

00:08:21.339 --> 00:08:21.349 align:start position:0%
application agnostic steps that had to
 

00:08:21.349 --> 00:08:23.260 align:start position:0%
application agnostic steps that had to
be<00:08:21.440><c> performed</c><00:08:21.770><c> after</c><00:08:22.099><c> the</c><00:08:22.430><c> application</c><00:08:23.089><c> was</c>

00:08:23.260 --> 00:08:23.270 align:start position:0%
be performed after the application was
 

00:08:23.270 --> 00:08:25.290 align:start position:0%
be performed after the application was
launched

00:08:25.290 --> 00:08:25.300 align:start position:0%
launched
 

00:08:25.300 --> 00:08:27.910 align:start position:0%
launched
these<00:08:26.300><c> include</c><00:08:26.630><c> such</c><00:08:26.870><c> things</c><00:08:26.900><c> as</c><00:08:27.260><c> process</c>

00:08:27.910 --> 00:08:27.920 align:start position:0%
these include such things as process
 

00:08:27.920 --> 00:08:30.370 align:start position:0%
these include such things as process
spawning<00:08:28.160><c> thread</c><00:08:28.790><c> creation</c><00:08:29.080><c> driver</c><00:08:30.080><c> loading</c>

00:08:30.370 --> 00:08:30.380 align:start position:0%
spawning thread creation driver loading
 

00:08:30.380 --> 00:08:33.640 align:start position:0%
spawning thread creation driver loading
and<00:08:30.830><c> resource</c><00:08:31.340><c> cleanup</c><00:08:31.760><c> in</c><00:08:32.479><c> android</c><00:08:32.990><c> q</c><00:08:33.260><c> we're</c>

00:08:33.640 --> 00:08:33.650 align:start position:0%
and resource cleanup in android q we're
 

00:08:33.650 --> 00:08:35.320 align:start position:0%
and resource cleanup in android q we're
introducing<00:08:34.250><c> the</c><00:08:34.430><c> unspecialized</c><00:08:35.090><c> app</c>

00:08:35.320 --> 00:08:35.330 align:start position:0%
introducing the unspecialized app
 

00:08:35.330 --> 00:08:38.110 align:start position:0%
introducing the unspecialized app
process<00:08:35.900><c> pool</c><00:08:36.400><c> unspecial</c><00:08:37.400><c> ID</c><00:08:37.520><c> app</c><00:08:37.669><c> and</c>

00:08:38.110 --> 00:08:38.120 align:start position:0%
process pool unspecial ID app and
 

00:08:38.120 --> 00:08:40.210 align:start position:0%
process pool unspecial ID app and
specialized<00:08:38.539><c> app</c><00:08:38.660><c> processes</c><00:08:39.320><c> are</c><00:08:39.620><c> created</c>

00:08:40.210 --> 00:08:40.220 align:start position:0%
specialized app processes are created
 

00:08:40.220 --> 00:08:41.950 align:start position:0%
specialized app processes are created
and<00:08:40.460><c> performed</c><00:08:40.760><c> these</c><00:08:40.970><c> application</c><00:08:41.510><c> agnostic</c>

00:08:41.950 --> 00:08:41.960 align:start position:0%
and performed these application agnostic
 

00:08:41.960 --> 00:08:43.980 align:start position:0%
and performed these application agnostic
steps<00:08:42.229><c> off</c><00:08:42.440><c> the</c><00:08:42.979><c> critical</c><00:08:43.340><c> path</c><00:08:43.550><c> of</c>

00:08:43.980 --> 00:08:43.990 align:start position:0%
steps off the critical path of
 

00:08:43.990 --> 00:08:47.020 align:start position:0%
steps off the critical path of
application<00:08:44.990><c> startup</c><00:08:45.460><c> this</c><00:08:46.460><c> produces</c><00:08:46.820><c> an</c>

00:08:47.020 --> 00:08:47.030 align:start position:0%
application startup this produces an
 

00:08:47.030 --> 00:08:48.760 align:start position:0%
application startup this produces an
average<00:08:47.330><c> speed</c><00:08:47.630><c> up</c><00:08:47.780><c> of</c><00:08:47.900><c> approximately</c><00:08:48.050><c> five</c>

00:08:48.760 --> 00:08:48.770 align:start position:0%
average speed up of approximately five
 

00:08:48.770 --> 00:08:51.700 align:start position:0%
average speed up of approximately five
milliseconds<00:08:49.520><c> for</c><00:08:50.330><c> most</c><00:08:50.540><c> applications</c><00:08:51.440><c> on</c><00:08:51.650><c> a</c>

00:08:51.700 --> 00:08:51.710 align:start position:0%
milliseconds for most applications on a
 

00:08:51.710 --> 00:08:54.190 align:start position:0%
milliseconds for most applications on a
pixel<00:08:52.190><c> to</c><00:08:52.340><c> device</c><00:08:52.610><c> but</c><00:08:53.210><c> more</c><00:08:53.390><c> importantly</c><00:08:53.900><c> it</c>

00:08:54.190 --> 00:08:54.200 align:start position:0%
pixel to device but more importantly it
 

00:08:54.200 --> 00:08:55.540 align:start position:0%
pixel to device but more importantly it
forms<00:08:54.680><c> a</c><00:08:54.770><c> foundation</c><00:08:54.890><c> for</c><00:08:55.370><c> further</c>

00:08:55.540 --> 00:08:55.550 align:start position:0%
forms a foundation for further
 

00:08:55.550 --> 00:08:58.570 align:start position:0%
forms a foundation for further
improvements<00:08:56.300><c> to</c><00:08:56.330><c> applications</c><00:08:57.200><c> startup</c><00:08:57.580><c> so</c>

00:08:58.570 --> 00:08:58.580 align:start position:0%
improvements to applications startup so
 

00:08:58.580 --> 00:08:59.680 align:start position:0%
improvements to applications startup so
now<00:08:58.730><c> let's</c><00:08:58.880><c> take</c><00:08:59.060><c> a</c><00:08:59.090><c> look</c><00:08:59.300><c> at</c><00:08:59.390><c> some</c><00:08:59.540><c> of</c><00:08:59.630><c> the</c>

00:08:59.680 --> 00:08:59.690 align:start position:0%
now let's take a look at some of the
 

00:08:59.690 --> 00:09:01.000 align:start position:0%
now let's take a look at some of the
changes<00:09:00.020><c> we've</c><00:09:00.170><c> made</c><00:09:00.200><c> to</c><00:09:00.320><c> the</c><00:09:00.500><c> early</c><00:09:00.770><c> stages</c>

00:09:01.000 --> 00:09:01.010 align:start position:0%
changes we've made to the early stages
 

00:09:01.010 --> 00:09:05.470 align:start position:0%
changes we've made to the early stages
of<00:09:01.190><c> app</c><00:09:01.550><c> startup</c><00:09:02.030><c> to</c><00:09:02.810><c> make</c><00:09:02.960><c> it</c><00:09:03.080><c> faster</c><00:09:03.790><c> on</c><00:09:04.790><c> the</c>

00:09:05.470 --> 00:09:05.480 align:start position:0%
of app startup to make it faster on the
 

00:09:05.480 --> 00:09:07.300 align:start position:0%
of app startup to make it faster on the
Left<00:09:05.690><c> we</c><00:09:06.020><c> can</c><00:09:06.050><c> see</c><00:09:06.290><c> the</c><00:09:06.440><c> launching</c><00:09:06.800><c> process</c>

00:09:07.300 --> 00:09:07.310 align:start position:0%
Left we can see the launching process
 

00:09:07.310 --> 00:09:09.880 align:start position:0%
Left we can see the launching process
from<00:09:07.850><c> previous</c><00:09:08.240><c> versions</c><00:09:08.420><c> of</c><00:09:08.690><c> Android</c><00:09:08.890><c> it</c>

00:09:09.880 --> 00:09:09.890 align:start position:0%
from previous versions of Android it
 

00:09:09.890 --> 00:09:11.350 align:start position:0%
from previous versions of Android it
involves<00:09:10.280><c> three</c><00:09:10.490><c> communicating</c><00:09:11.120><c> processes</c>

00:09:11.350 --> 00:09:11.360 align:start position:0%
involves three communicating processes
 

00:09:11.360 --> 00:09:13.990 align:start position:0%
involves three communicating processes
one<00:09:12.320><c> of</c><00:09:12.470><c> which</c><00:09:12.620><c> must</c><00:09:13.070><c> be</c><00:09:13.190><c> created</c><00:09:13.640><c> during</c><00:09:13.880><c> this</c>

00:09:13.990 --> 00:09:14.000 align:start position:0%
one of which must be created during this
 

00:09:14.000 --> 00:09:17.020 align:start position:0%
one of which must be created during this
critical<00:09:14.270><c> launch</c><00:09:14.660><c> window</c><00:09:15.250><c> it</c><00:09:16.250><c> also</c><00:09:16.460><c> involves</c>

00:09:17.020 --> 00:09:17.030 align:start position:0%
critical launch window it also involves
 

00:09:17.030 --> 00:09:19.330 align:start position:0%
critical launch window it also involves
inter<00:09:17.270><c> process</c><00:09:17.570><c> communication</c><00:09:17.750><c> or</c><00:09:18.500><c> IPC</c><00:09:19.070><c> and</c>

00:09:19.330 --> 00:09:19.340 align:start position:0%
inter process communication or IPC and
 

00:09:19.340 --> 00:09:22.180 align:start position:0%
inter process communication or IPC and
this<00:09:20.030><c> requires</c><00:09:20.510><c> the</c><00:09:20.630><c> zygote</c><00:09:21.140><c> to</c><00:09:21.590><c> wake</c><00:09:21.980><c> up</c>

00:09:22.180 --> 00:09:22.190 align:start position:0%
this requires the zygote to wake up
 

00:09:22.190 --> 00:09:25.030 align:start position:0%
this requires the zygote to wake up
block<00:09:22.820><c> unblock</c><00:09:23.780><c> and</c><00:09:24.080><c> send</c><00:09:24.500><c> a</c><00:09:24.560><c> message</c><00:09:24.590><c> to</c><00:09:24.860><c> the</c>

00:09:25.030 --> 00:09:25.040 align:start position:0%
block unblock and send a message to the
 

00:09:25.040 --> 00:09:27.550 align:start position:0%
block unblock and send a message to the
system<00:09:25.400><c> server</c><00:09:25.640><c> all</c><00:09:25.940><c> of</c><00:09:26.600><c> these</c><00:09:26.750><c> steps</c><00:09:27.140><c> take</c>

00:09:27.550 --> 00:09:27.560 align:start position:0%
system server all of these steps take
 

00:09:27.560 --> 00:09:29.380 align:start position:0%
system server all of these steps take
resources<00:09:27.950><c> away</c><00:09:28.160><c> from</c><00:09:28.400><c> the</c><00:09:28.940><c> operating</c><00:09:29.330><c> system</c>

00:09:29.380 --> 00:09:29.390 align:start position:0%
resources away from the operating system
 

00:09:29.390 --> 00:09:32.710 align:start position:0%
resources away from the operating system
and<00:09:29.930><c> the</c><00:09:30.880><c> application</c><00:09:31.880><c> that</c><00:09:32.240><c> the</c><00:09:32.330><c> users</c><00:09:32.600><c> are</c>

00:09:32.710 --> 00:09:32.720 align:start position:0%
and the application that the users are
 

00:09:32.720 --> 00:09:35.470 align:start position:0%
and the application that the users are
trying<00:09:32.900><c> to</c><00:09:32.990><c> launch</c><00:09:33.170><c> on</c><00:09:34.100><c> the</c><00:09:34.760><c> right</c><00:09:34.970><c> we</c><00:09:35.180><c> can</c><00:09:35.210><c> see</c>

00:09:35.470 --> 00:09:35.480 align:start position:0%
trying to launch on the right we can see
 

00:09:35.480 --> 00:09:37.840 align:start position:0%
trying to launch on the right we can see
the<00:09:35.510><c> new</c><00:09:35.870><c> much</c><00:09:36.290><c> simpler</c><00:09:36.770><c> app</c><00:09:37.010><c> launch</c><00:09:37.340><c> process</c>

00:09:37.840 --> 00:09:37.850 align:start position:0%
the new much simpler app launch process
 

00:09:37.850 --> 00:09:40.870 align:start position:0%
the new much simpler app launch process
in<00:09:38.030><c> android</c><00:09:38.780><c> q</c><00:09:39.190><c> the</c><00:09:40.190><c> zygote</c><00:09:40.550><c> has</c><00:09:40.580><c> been</c>

00:09:40.870 --> 00:09:40.880 align:start position:0%
in android q the zygote has been
 

00:09:40.880 --> 00:09:42.910 align:start position:0%
in android q the zygote has been
completely<00:09:41.330><c> removed</c><00:09:41.780><c> from</c><00:09:42.170><c> this</c><00:09:42.500><c> critical</c>

00:09:42.910 --> 00:09:42.920 align:start position:0%
completely removed from this critical
 

00:09:42.920 --> 00:09:47.290 align:start position:0%
completely removed from this critical
path<00:09:44.230><c> the</c><00:09:45.230><c> new</c><00:09:45.350><c> also</c><00:09:45.680><c> the</c><00:09:46.250><c> new</c><00:09:46.370><c> process</c><00:09:46.940><c> that</c>

00:09:47.290 --> 00:09:47.300 align:start position:0%
path the new also the new process that
 

00:09:47.300 --> 00:09:49.000 align:start position:0%
path the new also the new process that
will<00:09:47.420><c> become</c><00:09:47.540><c> the</c><00:09:47.720><c> application</c><00:09:48.470><c> already</c>

00:09:49.000 --> 00:09:49.010 align:start position:0%
will become the application already
 

00:09:49.010 --> 00:09:50.830 align:start position:0%
will become the application already
exists<00:09:49.520><c> in</c><00:09:49.610><c> the</c><00:09:49.640><c> system</c><00:09:49.700><c> and</c><00:09:50.270><c> has</c><00:09:50.630><c> performed</c>

00:09:50.830 --> 00:09:50.840 align:start position:0%
exists in the system and has performed
 

00:09:50.840 --> 00:09:53.580 align:start position:0%
exists in the system and has performed
these<00:09:51.230><c> application</c><00:09:51.800><c> agnostic</c><00:09:52.250><c> steps</c><00:09:52.520><c> already</c>

00:09:53.580 --> 00:09:53.590 align:start position:0%
these application agnostic steps already
 

00:09:53.590 --> 00:09:56.230 align:start position:0%
these application agnostic steps already
by<00:09:54.590><c> removing</c><00:09:54.980><c> the</c><00:09:55.070><c> zygote</c><00:09:55.460><c> we</c><00:09:55.670><c> also</c><00:09:55.880><c> eliminate</c>

00:09:56.230 --> 00:09:56.240 align:start position:0%
by removing the zygote we also eliminate
 

00:09:56.240 --> 00:09:58.360 align:start position:0%
by removing the zygote we also eliminate
an<00:09:56.600><c> entire</c><00:09:56.690><c> inter-process</c><00:09:57.530><c> communication</c>

00:09:58.360 --> 00:09:58.370 align:start position:0%
an entire inter-process communication
 

00:09:58.370 --> 00:10:00.040 align:start position:0%
an entire inter-process communication
round<00:09:58.640><c> and</c><00:09:59.240><c> this</c><00:09:59.480><c> means</c><00:09:59.720><c> that</c><00:09:59.810><c> the</c><00:09:59.930><c> new</c>

00:10:00.040 --> 00:10:00.050 align:start position:0%
round and this means that the new
 

00:10:00.050 --> 00:10:01.750 align:start position:0%
round and this means that the new
application<00:10:00.650><c> can</c><00:10:00.890><c> talk</c><00:10:01.070><c> directly</c><00:10:01.190><c> to</c><00:10:01.580><c> the</c>

00:10:01.750 --> 00:10:01.760 align:start position:0%
application can talk directly to the
 

00:10:01.760 --> 00:10:04.660 align:start position:0%
application can talk directly to the
system<00:10:02.150><c> server</c><00:10:02.390><c> and</c><00:10:02.690><c> not</c><00:10:03.200><c> wake</c><00:10:03.950><c> up</c><00:10:03.980><c> the</c><00:10:04.310><c> zygote</c>

00:10:04.660 --> 00:10:04.670 align:start position:0%
system server and not wake up the zygote
 

00:10:04.670 --> 00:10:07.650 align:start position:0%
system server and not wake up the zygote
and<00:10:04.940><c> consume</c><00:10:05.540><c> system</c><00:10:05.870><c> resources</c>

00:10:07.650 --> 00:10:07.660 align:start position:0%
and consume system resources
 

00:10:07.660 --> 00:10:09.780 align:start position:0%
and consume system resources
in<00:10:08.230><c> a</c><00:10:08.380><c> couple</c><00:10:08.620><c> slides</c><00:10:08.770><c> I'm</c><00:10:09.250><c> gonna</c><00:10:09.460><c> be</c><00:10:09.580><c> talk</c>

00:10:09.780 --> 00:10:09.790 align:start position:0%
in a couple slides I'm gonna be talk
 

00:10:09.790 --> 00:10:11.760 align:start position:0%
in a couple slides I'm gonna be talk
about<00:10:09.820><c> some</c><00:10:10.300><c> of</c><00:10:10.330><c> the</c><00:10:10.620><c> metric</c><00:10:11.620><c> and</c>

00:10:11.760 --> 00:10:11.770 align:start position:0%
about some of the metric and
 

00:10:11.770 --> 00:10:13.410 align:start position:0%
about some of the metric and
investigation<00:10:12.430><c> we've</c><00:10:12.580><c> worked</c><00:10:12.820><c> work</c><00:10:13.210><c> we've</c>

00:10:13.410 --> 00:10:13.420 align:start position:0%
investigation we've worked work we've
 

00:10:13.420 --> 00:10:16.050 align:start position:0%
investigation we've worked work we've
done<00:10:13.450><c> in</c><00:10:13.750><c> Android</c><00:10:14.050><c> queue</c><00:10:14.290><c> to</c><00:10:14.800><c> help</c><00:10:15.760><c> improve</c>

00:10:16.050 --> 00:10:16.060 align:start position:0%
done in Android queue to help improve
 

00:10:16.060 --> 00:10:18.330 align:start position:0%
done in Android queue to help improve
applications<00:10:17.020><c> startup</c><00:10:17.380><c> performance</c><00:10:17.500><c> but</c><00:10:18.310><c> I</c>

00:10:18.330 --> 00:10:18.340 align:start position:0%
applications startup performance but I
 

00:10:18.340 --> 00:10:20.310 align:start position:0%
applications startup performance but I
wanted<00:10:18.550><c> to</c><00:10:18.640><c> briefly</c><00:10:18.940><c> mention</c><00:10:19.060><c> the</c><00:10:19.600><c> metrics</c>

00:10:20.310 --> 00:10:20.320 align:start position:0%
wanted to briefly mention the metrics
 

00:10:20.320 --> 00:10:21.570 align:start position:0%
wanted to briefly mention the metrics
that<00:10:20.440><c> is</c><00:10:20.560><c> directly</c><00:10:20.980><c> impacted</c><00:10:21.430><c> by</c><00:10:21.460><c> these</c>

00:10:21.570 --> 00:10:21.580 align:start position:0%
that is directly impacted by these
 

00:10:21.580 --> 00:10:23.960 align:start position:0%
that is directly impacted by these
changes<00:10:21.700><c> which</c><00:10:22.660><c> is</c><00:10:22.810><c> time</c><00:10:23.110><c> to</c><00:10:23.290><c> first</c><00:10:23.500><c> slice</c>

00:10:23.960 --> 00:10:23.970 align:start position:0%
changes which is time to first slice
 

00:10:23.970 --> 00:10:26.520 align:start position:0%
changes which is time to first slice
time<00:10:24.970><c> to</c><00:10:25.090><c> first</c><00:10:25.270><c> slice</c><00:10:25.570><c> as</c><00:10:25.810><c> a</c><00:10:25.840><c> measure</c><00:10:26.110><c> of</c><00:10:26.380><c> how</c>

00:10:26.520 --> 00:10:26.530 align:start position:0%
time to first slice as a measure of how
 

00:10:26.530 --> 00:10:28.710 align:start position:0%
time to first slice as a measure of how
quickly<00:10:27.070><c> we</c><00:10:27.400><c> can</c><00:10:27.490><c> begin</c><00:10:27.670><c> running</c><00:10:28.090><c> application</c>

00:10:28.710 --> 00:10:28.720 align:start position:0%
quickly we can begin running application
 

00:10:28.720 --> 00:10:32.310 align:start position:0%
quickly we can begin running application
specific<00:10:29.260><c> code</c><00:10:29.470><c> and</c><00:10:30.570><c> as</c><00:10:31.570><c> we</c><00:10:31.810><c> can</c><00:10:31.930><c> see</c><00:10:32.110><c> in</c><00:10:32.230><c> this</c>

00:10:32.310 --> 00:10:32.320 align:start position:0%
specific code and as we can see in this
 

00:10:32.320 --> 00:10:34.350 align:start position:0%
specific code and as we can see in this
graph<00:10:32.620><c> there</c><00:10:33.610><c> is</c><00:10:33.640><c> a</c><00:10:33.730><c> fairly</c><00:10:34.090><c> uniform</c>

00:10:34.350 --> 00:10:34.360 align:start position:0%
graph there is a fairly uniform
 

00:10:34.360 --> 00:10:36.540 align:start position:0%
graph there is a fairly uniform
improvement<00:10:35.290><c> again</c><00:10:35.680><c> of</c><00:10:35.800><c> approximately</c><00:10:36.370><c> five</c>

00:10:36.540 --> 00:10:36.550 align:start position:0%
improvement again of approximately five
 

00:10:36.550 --> 00:10:38.490 align:start position:0%
improvement again of approximately five
milliseconds<00:10:37.270><c> to</c><00:10:37.570><c> the</c><00:10:37.660><c> time</c><00:10:37.840><c> to</c><00:10:37.960><c> first</c><00:10:38.170><c> slice</c>

00:10:38.490 --> 00:10:38.500 align:start position:0%
milliseconds to the time to first slice
 

00:10:38.500 --> 00:10:40.530 align:start position:0%
milliseconds to the time to first slice
metric<00:10:38.920><c> for</c><00:10:39.040><c> these</c><00:10:39.190><c> seven</c><00:10:39.490><c> apps</c><00:10:39.670><c> on</c><00:10:39.910><c> a</c><00:10:39.970><c> pixel</c>

00:10:40.530 --> 00:10:40.540 align:start position:0%
metric for these seven apps on a pixel
 

00:10:40.540 --> 00:10:43.770 align:start position:0%
metric for these seven apps on a pixel
to<00:10:40.740><c> device</c><00:10:42.180><c> however</c><00:10:43.180><c> this</c><00:10:43.420><c> is</c><00:10:43.540><c> just</c><00:10:43.690><c> the</c>

00:10:43.770 --> 00:10:43.780 align:start position:0%
to device however this is just the
 

00:10:43.780 --> 00:10:45.630 align:start position:0%
to device however this is just the
beginning<00:10:44.200><c> for</c><00:10:44.410><c> the</c><00:10:44.500><c> speed</c><00:10:45.280><c> ups</c><00:10:45.460><c> and</c>

00:10:45.630 --> 00:10:45.640 align:start position:0%
beginning for the speed ups and
 

00:10:45.640 --> 00:10:47.400 align:start position:0%
beginning for the speed ups and
improvements<00:10:46.060><c> we</c><00:10:46.150><c> can</c><00:10:46.180><c> see</c><00:10:46.450><c> from</c><00:10:46.630><c> the</c><00:10:46.780><c> using</c>

00:10:47.400 --> 00:10:47.410 align:start position:0%
improvements we can see from the using
 

00:10:47.410 --> 00:10:49.800 align:start position:0%
improvements we can see from the using
unspecialized<00:10:47.950><c> app</c><00:10:48.160><c> processes</c><00:10:48.880><c> follow-up</c>

00:10:49.800 --> 00:10:49.810 align:start position:0%
unspecialized app processes follow-up
 

00:10:49.810 --> 00:10:52.110 align:start position:0%
unspecialized app processes follow-up
work<00:10:50.050><c> that</c><00:10:50.230><c> is</c><00:10:50.290><c> currently</c><00:10:50.500><c> in</c><00:10:50.860><c> testing</c><00:10:51.120><c> shows</c>

00:10:52.110 --> 00:10:52.120 align:start position:0%
work that is currently in testing shows
 

00:10:52.120 --> 00:10:53.970 align:start position:0%
work that is currently in testing shows
an<00:10:52.270><c> additional</c><00:10:52.690><c> speed-up</c><00:10:53.140><c> on</c><00:10:53.350><c> the</c><00:10:53.710><c> order</c><00:10:53.950><c> of</c>

00:10:53.970 --> 00:10:53.980 align:start position:0%
an additional speed-up on the order of
 

00:10:53.980 --> 00:10:57.210 align:start position:0%
an additional speed-up on the order of
ten<00:10:54.880><c> of</c><00:10:55.150><c> tens</c><00:10:55.450><c> of</c><00:10:55.570><c> milliseconds</c><00:10:56.170><c> the</c><00:10:57.010><c> best</c>

00:10:57.210 --> 00:10:57.220 align:start position:0%
ten of tens of milliseconds the best
 

00:10:57.220 --> 00:10:59.370 align:start position:0%
ten of tens of milliseconds the best
news<00:10:57.460><c> for</c><00:10:57.490><c> users</c><00:10:58.090><c> and</c><00:10:58.360><c> developers</c><00:10:58.660><c> alike</c><00:10:59.110><c> is</c>

00:10:59.370 --> 00:10:59.380 align:start position:0%
news for users and developers alike is
 

00:10:59.380 --> 00:11:01.380 align:start position:0%
news for users and developers alike is
that<00:10:59.710><c> all</c><00:10:59.860><c> applications</c><00:11:00.310><c> will</c><00:11:00.970><c> see</c><00:11:01.180><c> these</c>

00:11:01.380 --> 00:11:01.390 align:start position:0%
that all applications will see these
 

00:11:01.390 --> 00:11:02.790 align:start position:0%
that all applications will see these
improvements<00:11:01.780><c> without</c><00:11:02.050><c> requiring</c><00:11:02.470><c> any</c>

00:11:02.790 --> 00:11:02.800 align:start position:0%
improvements without requiring any
 

00:11:02.800 --> 00:11:04.980 align:start position:0%
improvements without requiring any
changes<00:11:03.430><c> to</c><00:11:03.730><c> their</c><00:11:03.880><c> application</c><00:11:04.480><c> or</c><00:11:04.600><c> they</c><00:11:04.840><c> way</c>

00:11:04.980 --> 00:11:04.990 align:start position:0%
changes to their application or they way
 

00:11:04.990 --> 00:11:07.920 align:start position:0%
changes to their application or they way
that<00:11:05.290><c> they</c><00:11:05.410><c> use</c><00:11:05.560><c> their</c><00:11:05.800><c> advice</c><00:11:06.390><c> so</c><00:11:07.390><c> now</c><00:11:07.810><c> I'm</c>

00:11:07.920 --> 00:11:07.930 align:start position:0%
that they use their advice so now I'm
 

00:11:07.930 --> 00:11:09.450 align:start position:0%
that they use their advice so now I'm
going<00:11:08.080><c> to</c><00:11:08.170><c> talk</c><00:11:08.350><c> briefly</c><00:11:08.620><c> about</c><00:11:08.890><c> the</c>

00:11:09.450 --> 00:11:09.460 align:start position:0%
going to talk briefly about the
 

00:11:09.460 --> 00:11:10.740 align:start position:0%
going to talk briefly about the
measurement<00:11:09.940><c> work</c><00:11:10.090><c> that</c><00:11:10.480><c> we've</c><00:11:10.600><c> been</c><00:11:10.630><c> doing</c>

00:11:10.740 --> 00:11:10.750 align:start position:0%
measurement work that we've been doing
 

00:11:10.750 --> 00:11:14.490 align:start position:0%
measurement work that we've been doing
an<00:11:11.020><c> Android</c><00:11:11.320><c> q</c><00:11:12.210><c> when</c><00:11:13.210><c> performance</c><00:11:14.110><c> tuning</c>

00:11:14.490 --> 00:11:14.500 align:start position:0%
an Android q when performance tuning
 

00:11:14.500 --> 00:11:16.080 align:start position:0%
an Android q when performance tuning
software's<00:11:15.070><c> complicated</c><00:11:15.580><c> as</c><00:11:15.640><c> an</c><00:11:15.730><c> operating</c>

00:11:16.080 --> 00:11:16.090 align:start position:0%
software's complicated as an operating
 

00:11:16.090 --> 00:11:18.840 align:start position:0%
software's complicated as an operating
system<00:11:16.210><c> it's</c><00:11:16.750><c> very</c><00:11:17.050><c> important</c><00:11:17.650><c> to</c><00:11:18.100><c> get</c><00:11:18.250><c> a</c><00:11:18.310><c> deep</c>

00:11:18.840 --> 00:11:18.850 align:start position:0%
system it's very important to get a deep
 

00:11:18.850 --> 00:11:21.120 align:start position:0%
system it's very important to get a deep
understanding<00:11:19.000><c> of</c><00:11:19.600><c> what</c><00:11:19.990><c> is</c><00:11:20.110><c> happening</c><00:11:20.140><c> when</c>

00:11:21.120 --> 00:11:21.130 align:start position:0%
understanding of what is happening when
 

00:11:21.130 --> 00:11:23.390 align:start position:0%
understanding of what is happening when
it's<00:11:21.310><c> happening</c><00:11:21.370><c> and</c><00:11:21.910><c> how</c><00:11:22.240><c> long</c><00:11:22.450><c> it</c><00:11:22.570><c> is</c><00:11:22.630><c> taking</c>

00:11:23.390 --> 00:11:23.400 align:start position:0%
it's happening and how long it is taking
 

00:11:23.400 --> 00:11:26.010 align:start position:0%
it's happening and how long it is taking
to<00:11:24.400><c> this</c><00:11:24.550><c> end</c><00:11:24.790><c> we</c><00:11:25.120><c> have</c><00:11:25.240><c> spent</c><00:11:25.390><c> a</c><00:11:25.450><c> lot</c><00:11:25.660><c> of</c><00:11:25.720><c> time</c>

00:11:26.010 --> 00:11:26.020 align:start position:0%
to this end we have spent a lot of time
 

00:11:26.020 --> 00:11:28.770 align:start position:0%
to this end we have spent a lot of time
looking<00:11:26.320><c> at</c><00:11:26.680><c> traces</c><00:11:27.340><c> and</c><00:11:27.460><c> log</c><00:11:27.700><c> files</c><00:11:28.030><c> over</c><00:11:28.690><c> the</c>

00:11:28.770 --> 00:11:28.780 align:start position:0%
looking at traces and log files over the
 

00:11:28.780 --> 00:11:31.470 align:start position:0%
looking at traces and log files over the
last<00:11:28.960><c> couple</c><00:11:29.200><c> months</c><00:11:29.670><c> we've</c><00:11:30.670><c> also</c><00:11:31.150><c> developed</c>

00:11:31.470 --> 00:11:31.480 align:start position:0%
last couple months we've also developed
 

00:11:31.480 --> 00:11:33.600 align:start position:0%
last couple months we've also developed
several<00:11:31.960><c> new</c><00:11:32.230><c> tools</c><00:11:32.530><c> for</c><00:11:32.800><c> extracting</c>

00:11:33.600 --> 00:11:33.610 align:start position:0%
several new tools for extracting
 

00:11:33.610 --> 00:11:36.240 align:start position:0%
several new tools for extracting
actionable<00:11:34.510><c> and</c><00:11:34.690><c> useful</c><00:11:35.140><c> insights</c><00:11:35.770><c> from</c><00:11:36.100><c> this</c>

00:11:36.240 --> 00:11:36.250 align:start position:0%
actionable and useful insights from this
 

00:11:36.250 --> 00:11:38.760 align:start position:0%
actionable and useful insights from this
large<00:11:36.490><c> corpus</c><00:11:36.910><c> of</c><00:11:37.000><c> data</c><00:11:37.240><c> one</c><00:11:38.230><c> of</c><00:11:38.260><c> these</c><00:11:38.500><c> tools</c>

00:11:38.760 --> 00:11:38.770 align:start position:0%
large corpus of data one of these tools
 

00:11:38.770 --> 00:11:41.730 align:start position:0%
large corpus of data one of these tools
is<00:11:39.760><c> publicly</c><00:11:40.540><c> available</c><00:11:40.660><c> to</c><00:11:41.110><c> you</c><00:11:41.290><c> and</c><00:11:41.590><c> that's</c>

00:11:41.730 --> 00:11:41.740 align:start position:0%
is publicly available to you and that's
 

00:11:41.740 --> 00:11:44.250 align:start position:0%
is publicly available to you and that's
the<00:11:41.860><c> start</c><00:11:42.160><c> up</c><00:11:42.250><c> analyzer</c><00:11:42.670><c> script</c><00:11:43.150><c> this</c><00:11:43.900><c> script</c>

00:11:44.250 --> 00:11:44.260 align:start position:0%
the start up analyzer script this script
 

00:11:44.260 --> 00:11:46.440 align:start position:0%
the start up analyzer script this script
will<00:11:44.860><c> extract</c><00:11:45.220><c> detailed</c><00:11:45.760><c> information</c><00:11:46.300><c> about</c>

00:11:46.440 --> 00:11:46.450 align:start position:0%
will extract detailed information about
 

00:11:46.450 --> 00:11:48.690 align:start position:0%
will extract detailed information about
startup<00:11:46.960><c> events</c><00:11:47.380><c> from</c><00:11:48.040><c> trace</c><00:11:48.400><c> files</c>

00:11:48.690 --> 00:11:48.700 align:start position:0%
startup events from trace files
 

00:11:48.700 --> 00:11:51.300 align:start position:0%
startup events from trace files
including<00:11:49.570><c> start-up</c><00:11:49.960><c> duration</c><00:11:50.440><c> scheduling</c>

00:11:51.300 --> 00:11:51.310 align:start position:0%
including start-up duration scheduling
 

00:11:51.310 --> 00:11:56.580 align:start position:0%
including start-up duration scheduling
status<00:11:51.790><c> and</c><00:11:52.320><c> binder</c><00:11:53.320><c> transactions</c><00:11:55.440><c> one</c><00:11:56.440><c> of</c>

00:11:56.580 --> 00:11:56.590 align:start position:0%
status and binder transactions one of
 

00:11:56.590 --> 00:11:58.740 align:start position:0%
status and binder transactions one of
the<00:11:56.740><c> most</c><00:11:57.190><c> important</c><00:11:57.820><c> questions</c><00:11:58.120><c> that</c><00:11:58.450><c> this</c>

00:11:58.740 --> 00:11:58.750 align:start position:0%
the most important questions that this
 

00:11:58.750 --> 00:12:01.200 align:start position:0%
the most important questions that this
work<00:11:58.990><c> made</c><00:11:59.290><c> us</c><00:11:59.440><c> ask</c><00:11:59.620><c> ourself</c><00:11:59.890><c> is</c><00:12:00.370><c> when</c><00:12:01.090><c> does</c>

00:12:01.200 --> 00:12:01.210 align:start position:0%
work made us ask ourself is when does
 

00:12:01.210 --> 00:12:04.650 align:start position:0%
work made us ask ourself is when does
application<00:12:01.840><c> startup</c><00:12:02.350><c> end</c><00:12:03.150><c> well</c><00:12:04.150><c> there</c><00:12:04.570><c> are</c>

00:12:04.650 --> 00:12:04.660 align:start position:0%
application startup end well there are
 

00:12:04.660 --> 00:12:07.440 align:start position:0%
application startup end well there are
many<00:12:04.750><c> criteria</c><00:12:05.350><c> that</c><00:12:05.440><c> we</c><00:12:05.560><c> can</c><00:12:05.710><c> use</c><00:12:05.950><c> to</c><00:12:06.450><c> that</c>

00:12:07.440 --> 00:12:07.450 align:start position:0%
many criteria that we can use to that
 

00:12:07.450 --> 00:12:09.800 align:start position:0%
many criteria that we can use to that
might<00:12:07.600><c> signal</c><00:12:08.050><c> when</c><00:12:08.560><c> startup</c><00:12:09.070><c> is</c><00:12:09.190><c> finished</c>

00:12:09.800 --> 00:12:09.810 align:start position:0%
might signal when startup is finished
 

00:12:09.810 --> 00:12:11.790 align:start position:0%
might signal when startup is finished
including<00:12:10.810><c> when</c><00:12:11.080><c> the</c><00:12:11.170><c> first</c><00:12:11.380><c> frame</c><00:12:11.620><c> of</c><00:12:11.650><c> the</c>

00:12:11.790 --> 00:12:11.800 align:start position:0%
including when the first frame of the
 

00:12:11.800 --> 00:12:14.310 align:start position:0%
including when the first frame of the
user<00:12:11.950><c> interface</c><00:12:12.400><c> is</c><00:12:12.580><c> drawn</c><00:12:12.880><c> and</c><00:12:13.840><c> this</c><00:12:14.140><c> is</c>

00:12:14.310 --> 00:12:14.320 align:start position:0%
user interface is drawn and this is
 

00:12:14.320 --> 00:12:15.930 align:start position:0%
user interface is drawn and this is
certainly<00:12:14.530><c> a</c><00:12:14.620><c> useful</c><00:12:14.800><c> definition</c><00:12:15.490><c> it's</c><00:12:15.730><c> one</c>

00:12:15.930 --> 00:12:15.940 align:start position:0%
certainly a useful definition it's one
 

00:12:15.940 --> 00:12:17.790 align:start position:0%
certainly a useful definition it's one
we<00:12:16.060><c> can</c><00:12:16.210><c> use</c><00:12:16.240><c> to</c><00:12:16.570><c> optimize</c>

00:12:17.790 --> 00:12:17.800 align:start position:0%
we can use to optimize
 

00:12:17.800 --> 00:12:20.310 align:start position:0%
we can use to optimize
moments<00:12:18.040><c> but</c><00:12:18.580><c> it</c><00:12:19.089><c> doesn't</c><00:12:19.420><c> tell</c><00:12:19.570><c> us</c><00:12:19.600><c> when</c><00:12:19.990><c> the</c>

00:12:20.310 --> 00:12:20.320 align:start position:0%
moments but it doesn't tell us when the
 

00:12:20.320 --> 00:12:22.259 align:start position:0%
moments but it doesn't tell us when the
user<00:12:20.560><c> perceives</c><00:12:21.130><c> the</c><00:12:21.370><c> application</c><00:12:22.029><c> to</c><00:12:22.180><c> be</c>

00:12:22.259 --> 00:12:22.269 align:start position:0%
user perceives the application to be
 

00:12:22.269 --> 00:12:24.360 align:start position:0%
user perceives the application to be
usable<00:12:22.690><c> which</c><00:12:23.380><c> is</c><00:12:23.529><c> what</c><00:12:23.709><c> we</c><00:12:23.830><c> consider</c><00:12:23.950><c> to</c><00:12:24.250><c> be</c>

00:12:24.360 --> 00:12:24.370 align:start position:0%
usable which is what we consider to be
 

00:12:24.370 --> 00:12:26.579 align:start position:0%
usable which is what we consider to be
the<00:12:24.550><c> gold</c><00:12:24.820><c> standard</c><00:12:24.940><c> for</c><00:12:25.779><c> applications</c><00:12:26.350><c> start</c>

00:12:26.579 --> 00:12:26.589 align:start position:0%
the gold standard for applications start
 

00:12:26.589 --> 00:12:31.050 align:start position:0%
the gold standard for applications start
up<00:12:26.709><c> endpoint</c><00:12:29.640><c> unfortunately</c><00:12:30.640><c> we</c><00:12:30.730><c> don't</c><00:12:30.880><c> have</c>

00:12:31.050 --> 00:12:31.060 align:start position:0%
up endpoint unfortunately we don't have
 

00:12:31.060 --> 00:12:32.730 align:start position:0%
up endpoint unfortunately we don't have
a<00:12:31.089><c> way</c><00:12:31.269><c> to</c><00:12:31.330><c> automatically</c><00:12:31.959><c> detect</c><00:12:32.320><c> when</c><00:12:32.589><c> this</c>

00:12:32.730 --> 00:12:32.740 align:start position:0%
a way to automatically detect when this
 

00:12:32.740 --> 00:12:35.850 align:start position:0%
a way to automatically detect when this
happens<00:12:33.160><c> we</c><00:12:33.880><c> do</c><00:12:34.209><c> however</c><00:12:34.540><c> have</c><00:12:34.810><c> an</c><00:12:35.050><c> API</c><00:12:35.470><c> call</c>

00:12:35.850 --> 00:12:35.860 align:start position:0%
happens we do however have an API call
 

00:12:35.860 --> 00:12:38.130 align:start position:0%
happens we do however have an API call
the<00:12:36.070><c> developers</c><00:12:36.550><c> can</c><00:12:36.730><c> use</c><00:12:36.940><c> to</c><00:12:37.360><c> tell</c><00:12:37.570><c> us</c><00:12:37.810><c> when</c>

00:12:38.130 --> 00:12:38.140 align:start position:0%
the developers can use to tell us when
 

00:12:38.140 --> 00:12:41.040 align:start position:0%
the developers can use to tell us when
you<00:12:38.410><c> think</c><00:12:38.769><c> it</c><00:12:38.890><c> happens</c><00:12:39.690><c> this</c><00:12:40.690><c> makes</c><00:12:40.930><c> it</c>

00:12:41.040 --> 00:12:41.050 align:start position:0%
you think it happens this makes it
 

00:12:41.050 --> 00:12:42.300 align:start position:0%
you think it happens this makes it
easier<00:12:41.320><c> for</c><00:12:41.380><c> us</c><00:12:41.620><c> to</c><00:12:41.740><c> identify</c><00:12:41.860><c> the</c>

00:12:42.300 --> 00:12:42.310 align:start position:0%
easier for us to identify the
 

00:12:42.310 --> 00:12:44.009 align:start position:0%
easier for us to identify the
application<00:12:42.820><c> startup</c><00:12:43.329><c> process</c><00:12:43.540><c> for</c>

00:12:44.009 --> 00:12:44.019 align:start position:0%
application startup process for
 

00:12:44.019 --> 00:12:45.750 align:start position:0%
application startup process for
individual<00:12:44.440><c> apps</c><00:12:44.620><c> and</c><00:12:44.950><c> make</c><00:12:45.399><c> sure</c><00:12:45.550><c> that</c><00:12:45.670><c> we</c>

00:12:45.750 --> 00:12:45.760 align:start position:0%
individual apps and make sure that we
 

00:12:45.760 --> 00:12:47.250 align:start position:0%
individual apps and make sure that we
optimize<00:12:46.209><c> the</c><00:12:46.240><c> things</c><00:12:46.600><c> that</c><00:12:46.750><c> are</c><00:12:46.839><c> important</c>

00:12:47.250 --> 00:12:47.260 align:start position:0%
optimize the things that are important
 

00:12:47.260 --> 00:12:49.829 align:start position:0%
optimize the things that are important
to<00:12:47.470><c> your</c><00:12:48.070><c> app</c><00:12:48.220><c> so</c><00:12:49.060><c> if</c><00:12:49.240><c> you</c><00:12:49.360><c> would</c><00:12:49.480><c> like</c><00:12:49.600><c> to</c><00:12:49.750><c> help</c>

00:12:49.829 --> 00:12:49.839 align:start position:0%
to your app so if you would like to help
 

00:12:49.839 --> 00:12:51.870 align:start position:0%
to your app so if you would like to help
us<00:12:50.140><c> speed</c><00:12:51.070><c> up</c><00:12:51.220><c> the</c><00:12:51.310><c> performance</c><00:12:51.579><c> of</c><00:12:51.850><c> your</c>

00:12:51.870 --> 00:12:51.880 align:start position:0%
us speed up the performance of your
 

00:12:51.880 --> 00:12:54.449 align:start position:0%
us speed up the performance of your
application<00:12:52.540><c> I</c><00:12:52.720><c> highly</c><00:12:53.440><c> recommend</c><00:12:53.920><c> that</c><00:12:54.130><c> you</c>

00:12:54.449 --> 00:12:54.459 align:start position:0%
application I highly recommend that you
 

00:12:54.459 --> 00:12:57.680 align:start position:0%
application I highly recommend that you
use<00:12:54.490><c> this</c><00:12:54.790><c> report</c><00:12:55.209><c> fully</c><00:12:55.540><c> draw</c><00:12:55.870><c> an</c><00:12:55.930><c> API</c><00:12:56.290><c> call</c>

00:12:57.680 --> 00:12:57.690 align:start position:0%
use this report fully draw an API call
 

00:12:57.690 --> 00:13:00.840 align:start position:0%
use this report fully draw an API call
so<00:12:58.690><c> thank</c><00:12:59.140><c> you</c><00:12:59.230><c> for</c><00:12:59.380><c> your</c><00:12:59.500><c> time</c><00:12:59.709><c> and</c><00:12:59.950><c> at</c><00:13:00.730><c> this</c>

00:13:00.840 --> 00:13:00.850 align:start position:0%
so thank you for your time and at this
 

00:13:00.850 --> 00:13:02.280 align:start position:0%
so thank you for your time and at this
point<00:13:01.029><c> I'm</c><00:13:01.180><c> gonna</c><00:13:01.269><c> hand</c><00:13:01.570><c> the</c><00:13:01.660><c> state</c><00:13:01.839><c> over</c><00:13:02.079><c> to</c>

00:13:02.280 --> 00:13:02.290 align:start position:0%
point I'm gonna hand the state over to
 

00:13:02.290 --> 00:13:04.170 align:start position:0%
point I'm gonna hand the state over to
Roland<00:13:02.620><c> for</c><00:13:02.890><c> a</c><00:13:02.920><c> discussion</c><00:13:03.250><c> of</c><00:13:03.579><c> the</c><00:13:03.820><c> garbage</c>

00:13:04.170 --> 00:13:04.180 align:start position:0%
Roland for a discussion of the garbage
 

00:13:04.180 --> 00:13:06.380 align:start position:0%
Roland for a discussion of the garbage
collection<00:13:04.420><c> work</c><00:13:04.660><c> that</c><00:13:04.810><c> we've</c><00:13:04.899><c> done</c><00:13:05.019><c> in</c><00:13:05.170><c> queue</c>

00:13:06.380 --> 00:13:06.390 align:start position:0%
collection work that we've done in queue
 

00:13:06.390 --> 00:13:14.790 align:start position:0%
collection work that we've done in queue
thank<00:13:07.390><c> you</c><00:13:07.480><c> Chris</c><00:13:12.930><c> hi</c><00:13:13.930><c> everyone</c><00:13:14.260><c> my</c><00:13:14.620><c> name</c><00:13:14.769><c> is</c>

00:13:14.790 --> 00:13:14.800 align:start position:0%
thank you Chris hi everyone my name is
 

00:13:14.800 --> 00:13:16.319 align:start position:0%
thank you Chris hi everyone my name is
Hollow<00:13:15.160><c> and</c><00:13:15.339><c> I'm</c><00:13:15.670><c> going</c><00:13:15.850><c> to</c><00:13:15.970><c> present</c><00:13:16.269><c> the</c>

00:13:16.319 --> 00:13:16.329 align:start position:0%
Hollow and I'm going to present the
 

00:13:16.329 --> 00:13:17.850 align:start position:0%
Hollow and I'm going to present the
improvements<00:13:16.870><c> we've</c><00:13:17.050><c> made</c><00:13:17.230><c> in</c><00:13:17.350><c> our</c><00:13:17.500><c> cabbage</c>

00:13:17.850 --> 00:13:17.860 align:start position:0%
improvements we've made in our cabbage
 

00:13:17.860 --> 00:13:21.630 align:start position:0%
improvements we've made in our cabbage
collector<00:13:18.250><c> for</c><00:13:18.519><c> Android</c><00:13:18.760><c> cute</c><00:13:20.519><c> another</c><00:13:21.519><c> word</c>

00:13:21.630 --> 00:13:21.640 align:start position:0%
collector for Android cute another word
 

00:13:21.640 --> 00:13:23.730 align:start position:0%
collector for Android cute another word
queue<00:13:21.940><c> we've</c><00:13:22.390><c> improved</c><00:13:22.660><c> our</c><00:13:22.959><c> concurrent</c><00:13:23.440><c> copy</c>

00:13:23.730 --> 00:13:23.740 align:start position:0%
queue we've improved our concurrent copy
 

00:13:23.740 --> 00:13:26.730 align:start position:0%
queue we've improved our concurrent copy
garbage<00:13:24.070><c> collector</c><00:13:24.430><c> in</c><00:13:24.579><c> two</c><00:13:24.820><c> ways</c><00:13:25.230><c> first</c><00:13:26.230><c> by</c>

00:13:26.730 --> 00:13:26.740 align:start position:0%
garbage collector in two ways first by
 

00:13:26.740 --> 00:13:28.199 align:start position:0%
garbage collector in two ways first by
adding<00:13:27.010><c> support</c><00:13:27.160><c> for</c><00:13:27.399><c> generational</c><00:13:27.760><c> garbage</c>

00:13:28.199 --> 00:13:28.209 align:start position:0%
adding support for generational garbage
 

00:13:28.209 --> 00:13:30.449 align:start position:0%
adding support for generational garbage
collection<00:13:28.410><c> which</c><00:13:29.410><c> makes</c><00:13:29.709><c> GC</c><00:13:30.070><c> cheaper</c>

00:13:30.449 --> 00:13:30.459 align:start position:0%
collection which makes GC cheaper
 

00:13:30.459 --> 00:13:33.269 align:start position:0%
collection which makes GC cheaper
overall<00:13:30.760><c> and</c><00:13:31.120><c> second</c><00:13:32.050><c> by</c><00:13:32.440><c> using</c><00:13:32.649><c> a</c><00:13:32.920><c> two-phase</c>

00:13:33.269 --> 00:13:33.279 align:start position:0%
overall and second by using a two-phase
 

00:13:33.279 --> 00:13:35.699 align:start position:0%
overall and second by using a two-phase
collection<00:13:33.790><c> strategy</c><00:13:34.240><c> which</c><00:13:35.110><c> makes</c><00:13:35.380><c> garbage</c>

00:13:35.699 --> 00:13:35.709 align:start position:0%
collection strategy which makes garbage
 

00:13:35.709 --> 00:13:37.829 align:start position:0%
collection strategy which makes garbage
collection<00:13:36.190><c> more</c><00:13:36.459><c> precise</c><00:13:36.880><c> and</c><00:13:37.209><c> able</c><00:13:37.810><c> to</c>

00:13:37.829 --> 00:13:37.839 align:start position:0%
collection more precise and able to
 

00:13:37.839 --> 00:13:40.710 align:start position:0%
collection more precise and able to
reclaim<00:13:38.140><c> more</c><00:13:38.440><c> objects</c><00:13:39.480><c> during</c><00:13:40.480><c> the</c>

00:13:40.710 --> 00:13:40.720 align:start position:0%
reclaim more objects during the
 

00:13:40.720 --> 00:13:42.660 align:start position:0%
reclaim more objects during the
development<00:13:41.200><c> of</c><00:13:41.320><c> Android</c><00:13:41.620><c> queue</c><00:13:41.920><c> we've</c><00:13:42.459><c> also</c>

00:13:42.660 --> 00:13:42.670 align:start position:0%
development of Android queue we've also
 

00:13:42.670 --> 00:13:44.880 align:start position:0%
development of Android queue we've also
reevaluated<00:13:43.570><c> the</c><00:13:43.870><c> benefits</c><00:13:44.320><c> of</c><00:13:44.500><c> object</c>

00:13:44.880 --> 00:13:44.890 align:start position:0%
reevaluated the benefits of object
 

00:13:44.890 --> 00:13:46.769 align:start position:0%
reevaluated the benefits of object
pooling<00:13:45.100><c> versus</c><00:13:45.760><c> standard</c><00:13:46.089><c> allocation</c><00:13:46.660><c> in</c>

00:13:46.769 --> 00:13:46.779 align:start position:0%
pooling versus standard allocation in
 

00:13:46.779 --> 00:13:49.410 align:start position:0%
pooling versus standard allocation in
arts<00:13:47.170><c> in</c><00:13:47.770><c> the</c><00:13:48.490><c> last</c><00:13:48.700><c> section</c><00:13:49.000><c> of</c><00:13:49.060><c> this</c><00:13:49.180><c> talk</c>

00:13:49.410 --> 00:13:49.420 align:start position:0%
arts in the last section of this talk
 

00:13:49.420 --> 00:13:51.980 align:start position:0%
arts in the last section of this talk
would<00:13:50.079><c> share</c><00:13:50.350><c> with</c><00:13:50.500><c> you</c><00:13:50.709><c> our</c><00:13:50.920><c> findings</c><00:13:51.220><c> and</c>

00:13:51.980 --> 00:13:51.990 align:start position:0%
would share with you our findings and
 

00:13:51.990 --> 00:13:54.480 align:start position:0%
would share with you our findings and
new<00:13:52.990><c> recommendation</c><00:13:53.589><c> regarding</c><00:13:53.770><c> object</c>

00:13:54.480 --> 00:13:54.490 align:start position:0%
new recommendation regarding object
 

00:13:54.490 --> 00:13:55.749 align:start position:0%
new recommendation regarding object
pooling

00:13:55.749 --> 00:13:55.759 align:start position:0%
pooling
 

00:13:55.759 --> 00:13:58.160 align:start position:0%
pooling
but<00:13:56.759><c> for</c><00:13:56.910><c> now</c><00:13:57.029><c> let's</c><00:13:57.389><c> have</c><00:13:57.480><c> a</c><00:13:57.569><c> look</c><00:13:57.689><c> at</c><00:13:57.839><c> garbage</c>

00:13:58.160 --> 00:13:58.170 align:start position:0%
but for now let's have a look at garbage
 

00:13:58.170 --> 00:13:59.389 align:start position:0%
but for now let's have a look at garbage
collection<00:13:58.800><c> generational</c><00:13:59.279><c> garbage</c>

00:13:59.389 --> 00:13:59.399 align:start position:0%
collection generational garbage
 

00:13:59.399 --> 00:14:03.530 align:start position:0%
collection generational garbage
collection<00:14:00.889><c> in</c><00:14:01.889><c> android</c><00:14:02.189><c> 800</c><00:14:02.610><c> we</c><00:14:03.180><c> introduced</c>

00:14:03.530 --> 00:14:03.540 align:start position:0%
collection in android 800 we introduced
 

00:14:03.540 --> 00:14:04.549 align:start position:0%
collection in android 800 we introduced
the<00:14:03.629><c> concurrent</c><00:14:03.990><c> covering</c><00:14:04.290><c> garbage</c>

00:14:04.549 --> 00:14:04.559 align:start position:0%
the concurrent covering garbage
 

00:14:04.559 --> 00:14:07.549 align:start position:0%
the concurrent covering garbage
collector<00:14:04.980><c> or</c><00:14:05.189><c> CC</c><00:14:05.790><c> collector</c><00:14:06.180><c> in</c><00:14:06.420><c> arts</c><00:14:06.839><c> this</c>

00:14:07.549 --> 00:14:07.559 align:start position:0%
collector or CC collector in arts this
 

00:14:07.559 --> 00:14:09.710 align:start position:0%
collector or CC collector in arts this
year<00:14:07.920><c> we</c><00:14:08.399><c> added</c><00:14:08.610><c> support</c><00:14:08.850><c> for</c><00:14:09.119><c> generational</c>

00:14:09.710 --> 00:14:09.720 align:start position:0%
year we added support for generational
 

00:14:09.720 --> 00:14:11.989 align:start position:0%
year we added support for generational
collection<00:14:10.139><c> to</c><00:14:10.319><c> this</c><00:14:10.439><c> collector</c><00:14:10.889><c> in</c><00:14:11.129><c> anyway</c>

00:14:11.989 --> 00:14:11.999 align:start position:0%
collection to this collector in anyway
 

00:14:11.999 --> 00:14:13.999 align:start position:0%
collection to this collector in anyway
queue<00:14:12.329><c> the</c><00:14:12.629><c> CC</c><00:14:12.869><c> collector</c><00:14:13.199><c> alternates</c><00:14:13.679><c> Fulop</c>

00:14:13.999 --> 00:14:14.009 align:start position:0%
queue the CC collector alternates Fulop
 

00:14:14.009 --> 00:14:16.249 align:start position:0%
queue the CC collector alternates Fulop
collections<00:14:14.490><c> and</c><00:14:14.809><c> young</c><00:14:15.809><c> generation</c>

00:14:16.249 --> 00:14:16.259 align:start position:0%
collections and young generation
 

00:14:16.259 --> 00:14:18.410 align:start position:0%
collections and young generation
collections<00:14:16.740><c> these</c><00:14:17.579><c> young</c><00:14:17.910><c> generation</c>

00:14:18.410 --> 00:14:18.420 align:start position:0%
collections these young generation
 

00:14:18.420 --> 00:14:20.569 align:start position:0%
collections these young generation
collections<00:14:18.869><c> only</c><00:14:19.290><c> process</c><00:14:19.740><c> a</c><00:14:19.949><c> fraction</c><00:14:20.459><c> of</c>

00:14:20.569 --> 00:14:20.579 align:start position:0%
collections only process a fraction of
 

00:14:20.579 --> 00:14:22.850 align:start position:0%
collections only process a fraction of
the<00:14:20.639><c> heap</c><00:14:20.850><c> they</c><00:14:21.600><c> are</c><00:14:21.660><c> cheaper</c><00:14:22.050><c> and</c><00:14:22.259><c> almost</c><00:14:22.740><c> as</c>

00:14:22.850 --> 00:14:22.860 align:start position:0%
the heap they are cheaper and almost as
 

00:14:22.860 --> 00:14:25.699 align:start position:0%
the heap they are cheaper and almost as
effective<00:14:23.069><c> as</c><00:14:23.399><c> full</c><00:14:23.610><c> hip</c><00:14:23.790><c> collections</c><00:14:24.709><c> before</c>

00:14:25.699 --> 00:14:25.709 align:start position:0%
effective as full hip collections before
 

00:14:25.709 --> 00:14:27.619 align:start position:0%
effective as full hip collections before
look<00:14:25.860><c> at</c><00:14:25.980><c> generation</c><00:14:26.490><c> collection</c><00:14:27.059><c> let's</c><00:14:27.420><c> have</c>

00:14:27.619 --> 00:14:27.629 align:start position:0%
look at generation collection let's have
 

00:14:27.629 --> 00:14:28.850 align:start position:0%
look at generation collection let's have
a<00:14:27.660><c> look</c><00:14:27.809><c> at</c><00:14:27.929><c> look</c><00:14:28.139><c> at</c><00:14:28.199><c> how</c><00:14:28.350><c> the</c><00:14:28.410><c> concurrent</c>

00:14:28.850 --> 00:14:28.860 align:start position:0%
a look at look at how the concurrent
 

00:14:28.860 --> 00:14:32.720 align:start position:0%
a look at look at how the concurrent
copying<00:14:29.220><c> garbage</c><00:14:29.519><c> collector</c><00:14:29.850><c> works</c><00:14:31.730><c> the</c>

00:14:32.720 --> 00:14:32.730 align:start position:0%
copying garbage collector works the
 

00:14:32.730 --> 00:14:34.069 align:start position:0%
copying garbage collector works the
garbage<00:14:32.999><c> collector</c><00:14:33.329><c> in</c><00:14:33.389><c> arts</c><00:14:33.839><c> is</c><00:14:34.019><c> a</c>

00:14:34.069 --> 00:14:34.079 align:start position:0%
garbage collector in arts is a
 

00:14:34.079 --> 00:14:36.470 align:start position:0%
garbage collector in arts is a
concurrent<00:14:34.649><c> copying</c><00:14:34.980><c> one</c><00:14:35.189><c> it</c><00:14:35.939><c> is</c><00:14:36.119><c> concurrent</c>

00:14:36.470 --> 00:14:36.480 align:start position:0%
concurrent copying one it is concurrent
 

00:14:36.480 --> 00:14:38.329 align:start position:0%
concurrent copying one it is concurrent
because<00:14:36.929><c> it</c><00:14:37.050><c> runs</c><00:14:37.259><c> at</c><00:14:37.379><c> the</c><00:14:37.410><c> same</c><00:14:37.619><c> time</c><00:14:37.949><c> and</c><00:14:38.249><c> an</c>

00:14:38.329 --> 00:14:38.339 align:start position:0%
because it runs at the same time and an
 

00:14:38.339 --> 00:14:40.429 align:start position:0%
because it runs at the same time and an
app's<00:14:38.490><c> thread</c><00:14:38.790><c> and</c><00:14:39.059><c> it</c><00:14:39.600><c> does</c><00:14:39.720><c> not</c><00:14:39.869><c> require</c><00:14:40.079><c> a</c>

00:14:40.429 --> 00:14:40.439 align:start position:0%
app's thread and it does not require a
 

00:14:40.439 --> 00:14:43.040 align:start position:0%
app's thread and it does not require a
long<00:14:40.709><c> stop</c><00:14:41.069><c> the</c><00:14:41.189><c> world</c><00:14:41.399><c> pause</c><00:14:41.779><c> this</c><00:14:42.779><c> work</c>

00:14:43.040 --> 00:14:43.050 align:start position:0%
long stop the world pause this work
 

00:14:43.050 --> 00:14:45.139 align:start position:0%
long stop the world pause this work
thanks<00:14:43.800><c> to</c><00:14:43.889><c> a</c><00:14:43.920><c> cooperation</c><00:14:44.459><c> between</c><00:14:44.610><c> the</c><00:14:44.790><c> GC</c>

00:14:45.139 --> 00:14:45.149 align:start position:0%
thanks to a cooperation between the GC
 

00:14:45.149 --> 00:14:47.720 align:start position:0%
thanks to a cooperation between the GC
and<00:14:45.389><c> the</c><00:14:45.480><c> apps</c><00:14:45.629><c> code</c><00:14:45.929><c> all</c><00:14:46.619><c> accesses</c><00:14:47.129><c> to</c><00:14:47.249><c> object</c>

00:14:47.720 --> 00:14:47.730 align:start position:0%
and the apps code all accesses to object
 

00:14:47.730 --> 00:14:49.400 align:start position:0%
and the apps code all accesses to object
references<00:14:48.269><c> are</c><00:14:48.540><c> instrumented</c><00:14:49.139><c> in</c><00:14:49.319><c> the</c>

00:14:49.400 --> 00:14:49.410 align:start position:0%
references are instrumented in the
 

00:14:49.410 --> 00:14:51.739 align:start position:0%
references are instrumented in the
runtime<00:14:49.790><c> with</c><00:14:50.790><c> what</c><00:14:50.970><c> we</c><00:14:51.059><c> call</c><00:14:51.240><c> read</c><00:14:51.420><c> barriers</c>

00:14:51.739 --> 00:14:51.749 align:start position:0%
runtime with what we call read barriers
 

00:14:51.749 --> 00:14:53.509 align:start position:0%
runtime with what we call read barriers
and<00:14:51.990><c> they</c><00:14:52.559><c> ensure</c><00:14:52.860><c> that</c><00:14:52.889><c> the</c><00:14:53.129><c> app</c><00:14:53.249><c> does</c><00:14:53.490><c> not</c>

00:14:53.509 --> 00:14:53.519 align:start position:0%
and they ensure that the app does not
 

00:14:53.519 --> 00:14:56.780 align:start position:0%
and they ensure that the app does not
see<00:14:53.939><c> a</c><00:14:54.119><c> stale</c><00:14:54.420><c> object</c><00:14:54.949><c> the</c><00:14:55.949><c> GC</c><00:14:56.279><c> is</c><00:14:56.339><c> also</c><00:14:56.610><c> said</c>

00:14:56.780 --> 00:14:56.790 align:start position:0%
see a stale object the GC is also said
 

00:14:56.790 --> 00:14:59.419 align:start position:0%
see a stale object the GC is also said
to<00:14:56.819><c> be</c><00:14:57.029><c> copying</c><00:14:57.679><c> because</c><00:14:58.679><c> it</c><00:14:58.920><c> moves</c><00:14:59.129><c> live</c>

00:14:59.419 --> 00:14:59.429 align:start position:0%
to be copying because it moves live
 

00:14:59.429 --> 00:15:01.369 align:start position:0%
to be copying because it moves live
objects<00:14:59.999><c> in</c><00:15:00.120><c> memory</c><00:15:00.240><c> by</c><00:15:00.660><c> making</c><00:15:00.929><c> a</c><00:15:01.019><c> copy</c><00:15:01.230><c> of</c>

00:15:01.369 --> 00:15:01.379 align:start position:0%
objects in memory by making a copy of
 

00:15:01.379 --> 00:15:03.319 align:start position:0%
objects in memory by making a copy of
them<00:15:01.559><c> and</c><00:15:01.800><c> reclaiming</c><00:15:02.279><c> the</c><00:15:02.429><c> space</c><00:15:02.730><c> that</c><00:15:03.089><c> held</c>

00:15:03.319 --> 00:15:03.329 align:start position:0%
them and reclaiming the space that held
 

00:15:03.329 --> 00:15:05.540 align:start position:0%
them and reclaiming the space that held
the<00:15:03.509><c> original</c><00:15:03.929><c> objects</c><00:15:04.410><c> including</c><00:15:05.249><c> the</c><00:15:05.370><c> data</c>

00:15:05.540 --> 00:15:05.550 align:start position:0%
the original objects including the data
 

00:15:05.550 --> 00:15:08.179 align:start position:0%
the original objects including the data
objects<00:15:06.029><c> this</c><00:15:06.990><c> copying</c><00:15:07.350><c> strategy</c><00:15:07.769><c> means</c><00:15:07.980><c> that</c>

00:15:08.179 --> 00:15:08.189 align:start position:0%
objects this copying strategy means that
 

00:15:08.189 --> 00:15:09.739 align:start position:0%
objects this copying strategy means that
the<00:15:08.279><c> GC</c><00:15:08.579><c> is</c><00:15:08.699><c> compacting</c><00:15:09.300><c> the</c><00:15:09.329><c> heap</c><00:15:09.569><c> and</c>

00:15:09.739 --> 00:15:09.749 align:start position:0%
the GC is compacting the heap and
 

00:15:09.749 --> 00:15:12.619 align:start position:0%
the GC is compacting the heap and
preventing<00:15:10.620><c> fragmentation</c><00:15:11.420><c> let's</c><00:15:12.420><c> see</c><00:15:12.540><c> how</c>

00:15:12.619 --> 00:15:12.629 align:start position:0%
preventing fragmentation let's see how
 

00:15:12.629 --> 00:15:14.889 align:start position:0%
preventing fragmentation let's see how
this<00:15:12.779><c> works</c>

00:15:14.889 --> 00:15:14.899 align:start position:0%
this works
 

00:15:14.899 --> 00:15:17.540 align:start position:0%
this works
copying<00:15:15.899><c> collector</c><00:15:16.319><c> traditionally</c><00:15:17.189><c> splits</c>

00:15:17.540 --> 00:15:17.550 align:start position:0%
copying collector traditionally splits
 

00:15:17.550 --> 00:15:19.759 align:start position:0%
copying collector traditionally splits
the<00:15:17.850><c> managed</c><00:15:18.179><c> heap</c><00:15:18.389><c> into</c><00:15:18.600><c> spaces</c><00:15:19.019><c> a</c><00:15:19.379><c> from</c>

00:15:19.759 --> 00:15:19.769 align:start position:0%
the managed heap into spaces a from
 

00:15:19.769 --> 00:15:22.249 align:start position:0%
the managed heap into spaces a from
space<00:15:20.360><c> which</c><00:15:21.360><c> contains</c><00:15:21.509><c> the</c><00:15:21.899><c> object</c>

00:15:22.249 --> 00:15:22.259 align:start position:0%
space which contains the object
 

00:15:22.259 --> 00:15:24.230 align:start position:0%
space which contains the object
currently<00:15:22.620><c> allocated</c><00:15:22.769><c> and</c><00:15:23.189><c> used</c><00:15:23.220><c> and</c><00:15:23.759><c> a</c><00:15:24.059><c> to</c>

00:15:24.230 --> 00:15:24.240 align:start position:0%
currently allocated and used and a to
 

00:15:24.240 --> 00:15:26.419 align:start position:0%
currently allocated and used and a to
space<00:15:24.509><c> to</c><00:15:25.110><c> each</c><00:15:25.259><c> live</c><00:15:25.529><c> objects</c><00:15:25.949><c> a</c><00:15:26.009><c> move</c><00:15:26.220><c> during</c>

00:15:26.419 --> 00:15:26.429 align:start position:0%
space to each live objects a move during
 

00:15:26.429 --> 00:15:29.689 align:start position:0%
space to each live objects a move during
garbage<00:15:26.790><c> collection</c><00:15:27.529><c> during</c><00:15:28.529><c> a</c><00:15:28.709><c> GC</c><00:15:28.980><c> cycle</c><00:15:29.160><c> the</c>

00:15:29.689 --> 00:15:29.699 align:start position:0%
garbage collection during a GC cycle the
 

00:15:29.699 --> 00:15:31.730 align:start position:0%
garbage collection during a GC cycle the
collector<00:15:30.029><c> traces</c><00:15:30.480><c> the</c><00:15:30.569><c> heat</c><00:15:30.809><c> it</c><00:15:31.350><c> follows</c>

00:15:31.730 --> 00:15:31.740 align:start position:0%
collector traces the heat it follows
 

00:15:31.740 --> 00:15:34.790 align:start position:0%
collector traces the heat it follows
route<00:15:31.980><c> references</c><00:15:32.579><c> to</c><00:15:32.879><c> manage</c><00:15:33.120><c> objects</c><00:15:33.800><c> for</c>

00:15:34.790 --> 00:15:34.800 align:start position:0%
route references to manage objects for
 

00:15:34.800 --> 00:15:36.590 align:start position:0%
route references to manage objects for
instance<00:15:35.069><c> from</c><00:15:35.160><c> its</c><00:15:35.339><c> thread</c><00:15:35.519><c> stack</c><00:15:35.819><c> and</c><00:15:36.089><c> marks</c>

00:15:36.590 --> 00:15:36.600 align:start position:0%
instance from its thread stack and marks
 

00:15:36.600 --> 00:15:38.509 align:start position:0%
instance from its thread stack and marks
all<00:15:36.809><c> objects</c><00:15:37.350><c> reachable</c><00:15:37.889><c> from</c><00:15:38.040><c> these</c><00:15:38.249><c> routes</c>

00:15:38.509 --> 00:15:38.519 align:start position:0%
all objects reachable from these routes
 

00:15:38.519 --> 00:15:43.280 align:start position:0%
all objects reachable from these routes
to<00:15:39.120><c> compute</c><00:15:39.509><c> the</c><00:15:39.629><c> set</c><00:15:39.839><c> of</c><00:15:39.990><c> live</c><00:15:40.139><c> objects</c><00:15:42.290><c> they</c>

00:15:43.280 --> 00:15:43.290 align:start position:0%
to compute the set of live objects they
 

00:15:43.290 --> 00:15:45.139 align:start position:0%
to compute the set of live objects they
are<00:15:43.319><c> reachable</c><00:15:43.649><c> objects</c><00:15:44.249><c> in</c><00:15:44.429><c> dark</c><00:15:44.699><c> red</c><00:15:44.879><c> in</c>

00:15:45.139 --> 00:15:45.149 align:start position:0%
are reachable objects in dark red in
 

00:15:45.149 --> 00:15:46.999 align:start position:0%
are reachable objects in dark red in
this<00:15:45.269><c> illustration</c><00:15:45.420><c> are</c><00:15:46.350><c> the</c><00:15:46.559><c> ones</c><00:15:46.740><c> which</c><00:15:46.920><c> are</c>

00:15:46.999 --> 00:15:47.009 align:start position:0%
this illustration are the ones which are
 

00:15:47.009 --> 00:15:51.079 align:start position:0%
this illustration are the ones which are
not<00:15:47.220><c> visited</c><00:15:47.879><c> by</c><00:15:48.059><c> the</c><00:15:48.120><c> collector</c><00:15:50.089><c> reachable</c>

00:15:51.079 --> 00:15:51.089 align:start position:0%
not visited by the collector reachable
 

00:15:51.089 --> 00:15:53.239 align:start position:0%
not visited by the collector reachable
objects<00:15:51.689><c> are</c><00:15:51.899><c> copied</c><00:15:52.319><c> to</c><00:15:52.350><c> the</c><00:15:52.499><c> to</c><00:15:52.679><c> space</c><00:15:52.980><c> as</c>

00:15:53.239 --> 00:15:53.249 align:start position:0%
objects are copied to the to space as
 

00:15:53.249 --> 00:15:55.570 align:start position:0%
objects are copied to the to space as
they<00:15:53.490><c> are</c><00:15:53.579><c> being</c><00:15:53.759><c> marked</c><00:15:54.089><c> by</c><00:15:54.209><c> the</c><00:15:54.269><c> GC</c>

00:15:55.570 --> 00:15:55.580 align:start position:0%
they are being marked by the GC
 

00:15:55.580 --> 00:15:58.990 align:start position:0%
they are being marked by the GC
and<00:15:56.590><c> likewise</c><00:15:57.590><c> all</c><00:15:57.890><c> other</c><00:15:58.070><c> reachable</c><00:15:58.520><c> objects</c>

00:15:58.990 --> 00:15:59.000 align:start position:0%
and likewise all other reachable objects
 

00:15:59.000 --> 00:16:00.670 align:start position:0%
and likewise all other reachable objects
living<00:15:59.420><c> in</c><00:15:59.600><c> the</c><00:15:59.690><c> front</c><00:15:59.900><c> spacer</c><00:16:00.170><c> could</c><00:16:00.470><c> be</c><00:16:00.560><c> to</c>

00:16:00.670 --> 00:16:00.680 align:start position:0%
living in the front spacer could be to
 

00:16:00.680 --> 00:16:02.500 align:start position:0%
living in the front spacer could be to
the<00:16:00.770><c> to</c><00:16:00.950><c> space</c><00:16:01.220><c> they're</c><00:16:01.700><c> being</c><00:16:01.880><c> marked</c><00:16:02.240><c> thus</c>

00:16:02.500 --> 00:16:02.510 align:start position:0%
the to space they're being marked thus
 

00:16:02.510 --> 00:16:06.130 align:start position:0%
the to space they're being marked thus
compacting<00:16:03.020><c> the</c><00:16:03.110><c> heat</c><00:16:03.850><c> and</c><00:16:04.900><c> the</c><00:16:05.900><c> other</c><00:16:05.930><c> the</c>

00:16:06.130 --> 00:16:06.140 align:start position:0%
compacting the heat and the other the
 

00:16:06.140 --> 00:16:07.660 align:start position:0%
compacting the heat and the other the
collection<00:16:06.530><c> the</c><00:16:06.830><c> object</c><00:16:07.130><c> that</c><00:16:07.220><c> haven't</c><00:16:07.550><c> been</c>

00:16:07.660 --> 00:16:07.670 align:start position:0%
collection the object that haven't been
 

00:16:07.670 --> 00:16:09.970 align:start position:0%
collection the object that haven't been
moved<00:16:07.940><c> are</c><00:16:08.210><c> the</c><00:16:08.300><c> dead</c><00:16:08.480><c> ones</c><00:16:08.690><c> and</c><00:16:09.050><c> because</c><00:16:09.890><c> they</c>

00:16:09.970 --> 00:16:09.980 align:start position:0%
moved are the dead ones and because they
 

00:16:09.980 --> 00:16:12.070 align:start position:0%
moved are the dead ones and because they
are<00:16:10.040><c> not</c><00:16:10.160><c> reachable</c><00:16:10.490><c> and</c><00:16:10.880><c> the</c><00:16:11.390><c> GC</c><00:16:11.720><c> can</c><00:16:11.900><c> then</c>

00:16:12.070 --> 00:16:12.080 align:start position:0%
are not reachable and the GC can then
 

00:16:12.080 --> 00:16:13.720 align:start position:0%
are not reachable and the GC can then
reclaim<00:16:12.440><c> the</c><00:16:12.590><c> memory</c><00:16:12.860><c> used</c><00:16:13.160><c> by</c><00:16:13.280><c> the</c><00:16:13.460><c> from</c>

00:16:13.720 --> 00:16:13.730 align:start position:0%
reclaim the memory used by the from
 

00:16:13.730 --> 00:16:18.310 align:start position:0%
reclaim the memory used by the from
space<00:16:16.030><c> finally</c><00:16:17.030><c> the</c><00:16:17.480><c> front</c><00:16:17.630><c> space</c><00:16:17.960><c> and</c><00:16:18.140><c> the</c><00:16:18.200><c> to</c>

00:16:18.310 --> 00:16:18.320 align:start position:0%
space finally the front space and the to
 

00:16:18.320 --> 00:16:19.990 align:start position:0%
space finally the front space and the to
space<00:16:18.500><c> are</c><00:16:18.680><c> swapped</c><00:16:18.920><c> and</c><00:16:19.310><c> new</c><00:16:19.460><c> locations</c>

00:16:19.990 --> 00:16:20.000 align:start position:0%
space are swapped and new locations
 

00:16:20.000 --> 00:16:22.050 align:start position:0%
space are swapped and new locations
happen<00:16:20.600><c> in</c><00:16:20.720><c> the</c><00:16:20.810><c> new</c><00:16:20.960><c> from</c><00:16:21.200><c> space</c>

00:16:22.050 --> 00:16:22.060 align:start position:0%
happen in the new from space
 

00:16:22.060 --> 00:16:24.610 align:start position:0%
happen in the new from space
so<00:16:23.060><c> that's</c><00:16:23.240><c> heap</c><00:16:23.810><c> compaction</c><00:16:24.290><c> in</c><00:16:24.410><c> a</c><00:16:24.470><c> nutshell</c>

00:16:24.610 --> 00:16:24.620 align:start position:0%
so that's heap compaction in a nutshell
 

00:16:24.620 --> 00:16:28.840 align:start position:0%
so that's heap compaction in a nutshell
let's<00:16:25.520><c> see</c><00:16:25.670><c> how</c><00:16:25.790><c> this</c><00:16:25.940><c> works</c><00:16:26.180><c> in</c><00:16:26.330><c> arts</c><00:16:27.700><c> so</c><00:16:28.700><c> for</c>

00:16:28.840 --> 00:16:28.850 align:start position:0%
let's see how this works in arts so for
 

00:16:28.850 --> 00:16:29.740 align:start position:0%
let's see how this works in arts so for
practical<00:16:29.000><c> reasons</c>

00:16:29.740 --> 00:16:29.750 align:start position:0%
practical reasons
 

00:16:29.750 --> 00:16:31.930 align:start position:0%
practical reasons
RCC<00:16:30.260><c> collector</c><00:16:30.740><c> does</c><00:16:31.010><c> not</c><00:16:31.160><c> use</c><00:16:31.460><c> two</c><00:16:31.730><c> semi</c>

00:16:31.930 --> 00:16:31.940 align:start position:0%
RCC collector does not use two semi
 

00:16:31.940 --> 00:16:34.420 align:start position:0%
RCC collector does not use two semi
spaces<00:16:32.390><c> for</c><00:16:32.750><c> a</c><00:16:32.780><c> region</c><00:16:33.110><c> space</c><00:16:33.380><c> composed</c><00:16:34.280><c> of</c>

00:16:34.420 --> 00:16:34.430 align:start position:0%
spaces for a region space composed of
 

00:16:34.430 --> 00:16:38.110 align:start position:0%
spaces for a region space composed of
256<00:16:35.330><c> kilobyte</c><00:16:35.870><c> regions</c><00:16:36.320><c> as</c><00:16:36.710><c> an</c><00:16:37.640><c> app's</c><00:16:37.820><c> memory</c>

00:16:38.110 --> 00:16:38.120 align:start position:0%
256 kilobyte regions as an app's memory
 

00:16:38.120 --> 00:16:39.970 align:start position:0%
256 kilobyte regions as an app's memory
needs<00:16:38.360><c> grow</c><00:16:38.540><c> over</c><00:16:38.780><c> time</c><00:16:38.810><c> new</c><00:16:39.500><c> regions</c><00:16:39.890><c> are</c>

00:16:39.970 --> 00:16:39.980 align:start position:0%
needs grow over time new regions are
 

00:16:39.980 --> 00:16:41.800 align:start position:0%
needs grow over time new regions are
located<00:16:40.340><c> to</c><00:16:40.370><c> Co</c><00:16:40.610><c> spec</c><00:16:40.910><c> to</c><00:16:41.090><c> create</c><00:16:41.360><c> space</c><00:16:41.600><c> for</c>

00:16:41.800 --> 00:16:41.810 align:start position:0%
located to Co spec to create space for
 

00:16:41.810 --> 00:16:46.030 align:start position:0%
located to Co spec to create space for
new<00:16:41.840><c> objects</c><00:16:42.440><c> I</c><00:16:44.170><c> think</c><00:16:45.170><c> the</c><00:16:45.260><c> previous</c><00:16:45.440><c> example</c>

00:16:46.030 --> 00:16:46.040 align:start position:0%
new objects I think the previous example
 

00:16:46.040 --> 00:16:48.040 align:start position:0%
new objects I think the previous example
we're<00:16:46.700><c> highlighting</c><00:16:46.970><c> unreachable</c><00:16:47.480><c> objects</c>

00:16:48.040 --> 00:16:48.050 align:start position:0%
we're highlighting unreachable objects
 

00:16:48.050 --> 00:16:50.590 align:start position:0%
we're highlighting unreachable objects
in<00:16:48.200><c> dark</c><00:16:48.590><c> red</c><00:16:48.770><c> color</c><00:16:49.120><c> at</c><00:16:50.120><c> the</c><00:16:50.180><c> beginning</c><00:16:50.450><c> of</c><00:16:50.540><c> a</c>

00:16:50.590 --> 00:16:50.600 align:start position:0%
in dark red color at the beginning of a
 

00:16:50.600 --> 00:16:52.420 align:start position:0%
in dark red color at the beginning of a
cheesy<00:16:50.840><c> cycle</c><00:16:51.290><c> the</c><00:16:51.620><c> garbage</c><00:16:51.890><c> collector</c><00:16:52.220><c> max</c>

00:16:52.420 --> 00:16:52.430 align:start position:0%
cheesy cycle the garbage collector max
 

00:16:52.430 --> 00:16:55.180 align:start position:0%
cheesy cycle the garbage collector max
decision<00:16:52.910><c> for</c><00:16:53.180><c> each</c><00:16:53.210><c> region</c><00:16:54.020><c> in</c><00:16:54.170><c> use</c><00:16:54.410><c> the</c>

00:16:55.180 --> 00:16:55.190 align:start position:0%
decision for each region in use the
 

00:16:55.190 --> 00:16:57.090 align:start position:0%
decision for each region in use the
first<00:16:55.430><c> option</c><00:16:55.580><c> is</c><00:16:55.820><c> to</c><00:16:56.000><c> evacuate</c><00:16:56.540><c> a</c><00:16:56.630><c> region</c>

00:16:57.090 --> 00:16:57.100 align:start position:0%
first option is to evacuate a region
 

00:16:57.100 --> 00:16:59.680 align:start position:0%
first option is to evacuate a region
which<00:16:58.100><c> means</c><00:16:58.130><c> moving</c><00:16:58.580><c> all</c><00:16:58.940><c> live</c><00:16:59.120><c> objects</c><00:16:59.480><c> out</c>

00:16:59.680 --> 00:16:59.690 align:start position:0%
which means moving all live objects out
 

00:16:59.690 --> 00:17:02.020 align:start position:0%
which means moving all live objects out
of<00:16:59.720><c> it</c><00:16:59.960><c> and</c><00:17:00.230><c> reclaim</c><00:17:00.770><c> the</c><00:17:00.800><c> memory</c><00:17:01.190><c> backing</c><00:17:01.910><c> the</c>

00:17:02.020 --> 00:17:02.030 align:start position:0%
of it and reclaim the memory backing the
 

00:17:02.030 --> 00:17:04.480 align:start position:0%
of it and reclaim the memory backing the
region<00:17:02.360><c> at</c><00:17:02.510><c> the</c><00:17:02.660><c> end</c><00:17:02.780><c> of</c><00:17:02.870><c> the</c><00:17:02.930><c> cycle</c><00:17:03.490><c> this</c>

00:17:04.480 --> 00:17:04.490 align:start position:0%
region at the end of the cycle this
 

00:17:04.490 --> 00:17:06.250 align:start position:0%
region at the end of the cycle this
makes<00:17:04.730><c> sense</c><00:17:04.910><c> if</c><00:17:05.240><c> there's</c><00:17:05.540><c> a</c><00:17:05.600><c> good</c><00:17:05.750><c> proportion</c>

00:17:06.250 --> 00:17:06.260 align:start position:0%
makes sense if there's a good proportion
 

00:17:06.260 --> 00:17:09.730 align:start position:0%
makes sense if there's a good proportion
of<00:17:06.490><c> data</c><00:17:07.490><c> objects</c><00:17:07.940><c> in</c><00:17:08.060><c> this</c><00:17:08.209><c> region</c><00:17:08.740><c> because</c>

00:17:09.730 --> 00:17:09.740 align:start position:0%
of data objects in this region because
 

00:17:09.740 --> 00:17:12.760 align:start position:0%
of data objects in this region because
evacuating<00:17:10.459><c> it</c><00:17:10.580><c> means</c><00:17:11.110><c> it</c><00:17:12.110><c> will</c><00:17:12.260><c> have</c><00:17:12.320><c> compact</c>

00:17:12.760 --> 00:17:12.770 align:start position:0%
evacuating it means it will have compact
 

00:17:12.770 --> 00:17:16.110 align:start position:0%
evacuating it means it will have compact
the<00:17:12.830><c> heap</c><00:17:12.980><c> and</c><00:17:13.190><c> fit</c><00:17:13.700><c> some</c><00:17:13.910><c> physical</c><00:17:14.390><c> memory</c>

00:17:16.110 --> 00:17:16.120 align:start position:0%
the heap and fit some physical memory
 

00:17:16.120 --> 00:17:18.490 align:start position:0%
the heap and fit some physical memory
but<00:17:17.120><c> if</c><00:17:17.240><c> most</c><00:17:17.480><c> of</c><00:17:17.600><c> the</c><00:17:17.690><c> allocated</c><00:17:18.020><c> object</c><00:17:18.380><c> in</c>

00:17:18.490 --> 00:17:18.500 align:start position:0%
but if most of the allocated object in
 

00:17:18.500 --> 00:17:20.590 align:start position:0%
but if most of the allocated object in
these<00:17:18.589><c> regions</c><00:17:19.010><c> are</c><00:17:19.220><c> actually</c><00:17:19.550><c> alive</c><00:17:19.850><c> there</c>

00:17:20.590 --> 00:17:20.600 align:start position:0%
these regions are actually alive there
 

00:17:20.600 --> 00:17:23.560 align:start position:0%
these regions are actually alive there
will<00:17:20.690><c> be</c><00:17:20.720><c> little</c><00:17:21.110><c> benefits</c><00:17:21.500><c> to</c><00:17:22.370><c> evacuated</c><00:17:23.270><c> and</c>

00:17:23.560 --> 00:17:23.570 align:start position:0%
will be little benefits to evacuated and
 

00:17:23.570 --> 00:17:25.900 align:start position:0%
will be little benefits to evacuated and
maybe<00:17:24.440><c> some</c><00:17:24.650><c> costs</c><00:17:25.070><c> because</c><00:17:25.370><c> of</c><00:17:25.490><c> the</c><00:17:25.610><c> object</c>

00:17:25.900 --> 00:17:25.910 align:start position:0%
maybe some costs because of the object
 

00:17:25.910 --> 00:17:28.540 align:start position:0%
maybe some costs because of the object
copies<00:17:26.240><c> in</c><00:17:26.570><c> that</c><00:17:27.320><c> case</c><00:17:27.560><c> did</c><00:17:28.160><c> you</c><00:17:28.280><c> see</c><00:17:28.430><c> my</c>

00:17:28.540 --> 00:17:28.550 align:start position:0%
copies in that case did you see my
 

00:17:28.550 --> 00:17:30.520 align:start position:0%
copies in that case did you see my
decide<00:17:28.820><c> to</c><00:17:28.940><c> keep</c><00:17:29.060><c> the</c><00:17:29.150><c> region</c><00:17:29.420><c> as</c><00:17:29.630><c> is</c><00:17:29.780><c> and</c><00:17:30.020><c> we</c>

00:17:30.520 --> 00:17:30.530 align:start position:0%
decide to keep the region as is and we
 

00:17:30.530 --> 00:17:33.100 align:start position:0%
decide to keep the region as is and we
call<00:17:30.680><c> that</c><00:17:30.710><c> an</c><00:17:31.040><c> an</c><00:17:31.220><c> evacuated</c><00:17:31.610><c> region</c><00:17:32.060><c> in</c><00:17:32.240><c> dark</c>

00:17:33.100 --> 00:17:33.110 align:start position:0%
call that an an evacuated region in dark
 

00:17:33.110 --> 00:17:36.280 align:start position:0%
call that an an evacuated region in dark
green<00:17:33.320><c> in</c><00:17:33.560><c> this</c><00:17:33.740><c> diagram</c><00:17:34.480><c> until</c><00:17:35.480><c> Android</c><00:17:35.990><c> cue</c>

00:17:36.280 --> 00:17:36.290 align:start position:0%
green in this diagram until Android cue
 

00:17:36.290 --> 00:17:39.220 align:start position:0%
green in this diagram until Android cue
the<00:17:36.770><c> decision</c><00:17:37.100><c> to</c><00:17:37.190><c> evacuate</c><00:17:37.610><c> a</c><00:17:37.640><c> region</c><00:17:38.090><c> or</c><00:17:38.960><c> not</c>

00:17:39.220 --> 00:17:39.230 align:start position:0%
the decision to evacuate a region or not
 

00:17:39.230 --> 00:17:41.320 align:start position:0%
the decision to evacuate a region or not
was<00:17:39.620><c> based</c><00:17:39.890><c> on</c><00:17:40.130><c> information</c><00:17:40.370><c> from</c><00:17:40.910><c> a</c><00:17:41.030><c> previous</c>

00:17:41.320 --> 00:17:41.330 align:start position:0%
was based on information from a previous
 

00:17:41.330 --> 00:17:44.560 align:start position:0%
was based on information from a previous
duty<00:17:41.570><c> cycle</c><00:17:41.990><c> which</c><00:17:42.590><c> is</c><00:17:42.740><c> not</c><00:17:42.890><c> optimal</c><00:17:43.570><c> later</c>

00:17:44.560 --> 00:17:44.570 align:start position:0%
duty cycle which is not optimal later
 

00:17:44.570 --> 00:17:46.090 align:start position:0%
duty cycle which is not optimal later
and<00:17:44.750><c> is</c><00:17:44.840><c> thought</c><00:17:45.020><c> my</c><00:17:45.260><c> colleague</c><00:17:45.560><c> Lokesh</c><00:17:45.890><c> will</c>

00:17:46.090 --> 00:17:46.100 align:start position:0%
and is thought my colleague Lokesh will
 

00:17:46.100 --> 00:17:49.020 align:start position:0%
and is thought my colleague Lokesh will
talk<00:17:46.280><c> more</c><00:17:46.430><c> about</c><00:17:46.490><c> this</c>

00:17:49.020 --> 00:17:49.030 align:start position:0%
 
 

00:17:49.030 --> 00:17:51.430 align:start position:0%
 
tracing<00:17:50.030><c> and</c><00:17:50.150><c> marking</c><00:17:50.540><c> works</c><00:17:50.900><c> similarly</c><00:17:51.260><c> to</c>

00:17:51.430 --> 00:17:51.440 align:start position:0%
tracing and marking works similarly to
 

00:17:51.440 --> 00:17:52.750 align:start position:0%
tracing and marking works similarly to
the<00:17:51.500><c> priests</c><00:17:51.710><c> example</c><00:17:52.160><c> but</c><00:17:52.460><c> instead</c><00:17:52.669><c> of</c>

00:17:52.750 --> 00:17:52.760 align:start position:0%
the priests example but instead of
 

00:17:52.760 --> 00:17:56.260 align:start position:0%
the priests example but instead of
copying<00:17:53.380><c> our</c><00:17:54.380><c> mercury</c><00:17:54.830><c> object</c><00:17:55.190><c> to</c><00:17:55.309><c> a</c><00:17:55.340><c> fixed</c><00:17:55.730><c> -</c>

00:17:56.260 --> 00:17:56.270 align:start position:0%
copying our mercury object to a fixed -
 

00:17:56.270 --> 00:17:58.539 align:start position:0%
copying our mercury object to a fixed -
space<00:17:56.540><c> area</c><00:17:56.900><c> they</c><00:17:57.590><c> are</c><00:17:57.620><c> copied</c><00:17:57.950><c> to</c><00:17:58.070><c> a</c><00:17:58.100><c> freshly</c>

00:17:58.539 --> 00:17:58.549 align:start position:0%
space area they are copied to a freshly
 

00:17:58.549 --> 00:18:00.310 align:start position:0%
space area they are copied to a freshly
allocated<00:17:59.030><c> region</c><00:17:59.390><c> called</c><00:17:59.660><c> an</c><00:17:59.870><c> evacuation</c>

00:18:00.310 --> 00:18:00.320 align:start position:0%
allocated region called an evacuation
 

00:18:00.320 --> 00:18:05.790 align:start position:0%
allocated region called an evacuation
region

00:18:05.790 --> 00:18:05.800 align:start position:0%
 
 

00:18:05.800 --> 00:18:07.830 align:start position:0%
 
if<00:18:06.070><c> this</c><00:18:06.520><c> region</c><00:18:06.730><c> speeds</c><00:18:07.150><c> up</c><00:18:07.330><c> during</c><00:18:07.510><c> garbage</c>

00:18:07.830 --> 00:18:07.840 align:start position:0%
if this region speeds up during garbage
 

00:18:07.840 --> 00:18:09.630 align:start position:0%
if this region speeds up during garbage
collection<00:18:08.230><c> another</c><00:18:08.740><c> region</c><00:18:09.070><c> is</c><00:18:09.160><c> allocated</c>

00:18:09.630 --> 00:18:09.640 align:start position:0%
collection another region is allocated
 

00:18:09.640 --> 00:18:11.640 align:start position:0%
collection another region is allocated
and<00:18:09.910><c> so</c><00:18:10.090><c> on</c><00:18:10.210><c> and</c><00:18:10.480><c> so</c><00:18:10.630><c> the</c><00:18:10.720><c> whole</c><00:18:10.930><c> heap</c><00:18:11.140><c> has</c><00:18:11.440><c> been</c>

00:18:11.640 --> 00:18:11.650 align:start position:0%
and so on and so the whole heap has been
 

00:18:11.650 --> 00:18:14.460 align:start position:0%
and so on and so the whole heap has been
traced<00:18:11.950><c> and</c><00:18:12.280><c> the</c><00:18:13.030><c> energy</c><00:18:13.360><c> GC</c><00:18:13.570><c> cycle</c><00:18:13.810><c> the</c><00:18:14.320><c> to</c>

00:18:14.460 --> 00:18:14.470 align:start position:0%
traced and the energy GC cycle the to
 

00:18:14.470 --> 00:18:16.620 align:start position:0%
traced and the energy GC cycle the to
space<00:18:14.710><c> is</c><00:18:14.980><c> the</c><00:18:15.100><c> union</c><00:18:15.460><c> of</c><00:18:15.670><c> all</c><00:18:15.970><c> the</c><00:18:16.120><c> evacuation</c>

00:18:16.620 --> 00:18:16.630 align:start position:0%
space is the union of all the evacuation
 

00:18:16.630 --> 00:18:18.690 align:start position:0%
space is the union of all the evacuation
regions<00:18:17.050><c> and</c><00:18:17.230><c> the</c><00:18:17.590><c> region</c><00:18:17.920><c> that</c><00:18:18.490><c> had</c><00:18:18.670><c> been</c>

00:18:18.690 --> 00:18:18.700 align:start position:0%
regions and the region that had been
 

00:18:18.700 --> 00:18:22.760 align:start position:0%
regions and the region that had been
allocated<00:18:19.240><c> for</c><00:18:19.630><c> new</c><00:18:20.170><c> object</c><00:18:20.500><c> allocations</c>

00:18:22.760 --> 00:18:22.770 align:start position:0%
 
 

00:18:22.770 --> 00:18:25.080 align:start position:0%
 
evacuated<00:18:23.770><c> regions</c><00:18:24.160><c> eventually</c><00:18:24.820><c> are</c>

00:18:25.080 --> 00:18:25.090 align:start position:0%
evacuated regions eventually are
 

00:18:25.090 --> 00:18:27.900 align:start position:0%
evacuated regions eventually are
reclaimed<00:18:25.510><c> and</c><00:18:26.260><c> their</c><00:18:26.470><c> memory</c><00:18:26.710><c> the</c><00:18:27.400><c> pages</c><00:18:27.790><c> are</c>

00:18:27.900 --> 00:18:27.910 align:start position:0%
reclaimed and their memory the pages are
 

00:18:27.910 --> 00:18:32.220 align:start position:0%
reclaimed and their memory the pages are
returned<00:18:28.150><c> to</c><00:18:28.180><c> the</c><00:18:28.330><c> system</c><00:18:30.870><c> now</c><00:18:31.870><c> that</c><00:18:31.900><c> we've</c>

00:18:32.220 --> 00:18:32.230 align:start position:0%
returned to the system now that we've
 

00:18:32.230 --> 00:18:34.680 align:start position:0%
returned to the system now that we've
seen<00:18:32.410><c> how</c><00:18:32.620><c> arts</c><00:18:33.130><c> concurrent</c><00:18:33.460><c> collector</c><00:18:33.820><c> works</c>

00:18:34.680 --> 00:18:34.690 align:start position:0%
seen how arts concurrent collector works
 

00:18:34.690 --> 00:18:36.900 align:start position:0%
seen how arts concurrent collector works
let's<00:18:35.320><c> see</c><00:18:35.500><c> at</c><00:18:35.770><c> let's</c><00:18:36.490><c> have</c><00:18:36.580><c> a</c><00:18:36.610><c> look</c><00:18:36.730><c> at</c><00:18:36.820><c> the</c>

00:18:36.900 --> 00:18:36.910 align:start position:0%
let's see at let's have a look at the
 

00:18:36.910 --> 00:18:40.890 align:start position:0%
let's see at let's have a look at the
generational<00:18:37.480><c> version</c><00:18:39.390><c> even</c><00:18:40.390><c> if</c><00:18:40.510><c> the</c><00:18:40.600><c> CC</c>

00:18:40.890 --> 00:18:40.900 align:start position:0%
generational version even if the CC
 

00:18:40.900 --> 00:18:42.720 align:start position:0%
generational version even if the CC
collector<00:18:41.320><c> does</c><00:18:41.500><c> not</c><00:18:41.710><c> evacuate</c><00:18:42.130><c> all</c><00:18:42.310><c> regions</c>

00:18:42.720 --> 00:18:42.730 align:start position:0%
collector does not evacuate all regions
 

00:18:42.730 --> 00:18:45.270 align:start position:0%
collector does not evacuate all regions
it<00:18:42.970><c> has</c><00:18:43.150><c> to</c><00:18:43.330><c> trace</c><00:18:43.540><c> all</c><00:18:43.840><c> the</c><00:18:43.870><c> objects</c><00:18:44.560><c> this</c><00:18:45.220><c> is</c>

00:18:45.270 --> 00:18:45.280 align:start position:0%
it has to trace all the objects this is
 

00:18:45.280 --> 00:18:47.550 align:start position:0%
it has to trace all the objects this is
known<00:18:45.550><c> as</c><00:18:45.580><c> a</c><00:18:45.700><c> full</c><00:18:45.970><c> hip</c><00:18:46.180><c> collection</c><00:18:46.690><c> but</c>

00:18:47.550 --> 00:18:47.560 align:start position:0%
known as a full hip collection but
 

00:18:47.560 --> 00:18:49.950 align:start position:0%
known as a full hip collection but
consider<00:18:47.890><c> this</c><00:18:48.130><c> if</c><00:18:48.850><c> the</c><00:18:49.030><c> GC</c><00:18:49.360><c> what</c><00:18:49.480><c> you</c><00:18:49.600><c> process</c>

00:18:49.950 --> 00:18:49.960 align:start position:0%
consider this if the GC what you process
 

00:18:49.960 --> 00:18:52.140 align:start position:0%
consider this if the GC what you process
only<00:18:50.200><c> recently</c><00:18:50.860><c> allocated</c><00:18:51.040><c> objects</c><00:18:51.700><c> it</c><00:18:51.940><c> will</c>

00:18:52.140 --> 00:18:52.150 align:start position:0%
only recently allocated objects it will
 

00:18:52.150 --> 00:18:54.060 align:start position:0%
only recently allocated objects it will
in<00:18:52.240><c> general</c><00:18:52.330><c> collect</c><00:18:52.810><c> most</c><00:18:53.050><c> of</c><00:18:53.230><c> them</c><00:18:53.410><c> and</c><00:18:53.590><c> for</c>

00:18:54.060 --> 00:18:54.070 align:start position:0%
in general collect most of them and for
 

00:18:54.070 --> 00:18:55.920 align:start position:0%
in general collect most of them and for
a<00:18:54.100><c> fraction</c><00:18:54.460><c> of</c><00:18:54.550><c> the</c><00:18:54.670><c> costs</c><00:18:55.060><c> of</c><00:18:55.210><c> a</c><00:18:55.540><c> food</c><00:18:55.750><c> heap</c>

00:18:55.920 --> 00:18:55.930 align:start position:0%
a fraction of the costs of a food heap
 

00:18:55.930 --> 00:18:59.370 align:start position:0%
a fraction of the costs of a food heap
collection<00:18:57.150><c> this</c><00:18:58.150><c> is</c><00:18:58.210><c> this</c><00:18:58.870><c> is</c><00:18:59.020><c> what</c><00:18:59.140><c> we</c><00:18:59.230><c> call</c>

00:18:59.370 --> 00:18:59.380 align:start position:0%
collection this is this is what we call
 

00:18:59.380 --> 00:19:01.200 align:start position:0%
collection this is this is what we call
the<00:18:59.500><c> generational</c><00:19:00.070><c> hypothesis</c><00:19:00.730><c> in</c><00:19:00.970><c> most</c>

00:19:01.200 --> 00:19:01.210 align:start position:0%
the generational hypothesis in most
 

00:19:01.210 --> 00:19:03.270 align:start position:0%
the generational hypothesis in most
cases<00:19:01.450><c> young</c><00:19:01.930><c> objects</c><00:19:02.380><c> emerged</c><00:19:02.680><c> more</c><00:19:02.950><c> likely</c>

00:19:03.270 --> 00:19:03.280 align:start position:0%
cases young objects emerged more likely
 

00:19:03.280 --> 00:19:06.180 align:start position:0%
cases young objects emerged more likely
to<00:19:03.580><c> die</c><00:19:03.760><c> than</c><00:19:03.790><c> old</c><00:19:04.180><c> objects</c><00:19:04.710><c> art</c><00:19:05.710><c> generational</c>

00:19:06.180 --> 00:19:06.190 align:start position:0%
to die than old objects art generational
 

00:19:06.190 --> 00:19:08.550 align:start position:0%
to die than old objects art generational
CC<00:19:06.760><c> collector</c><00:19:07.150><c> introducing</c><00:19:07.870><c> the</c><00:19:07.960><c> concept</c><00:19:08.440><c> of</c>

00:19:08.550 --> 00:19:08.560 align:start position:0%
CC collector introducing the concept of
 

00:19:08.560 --> 00:19:11.250 align:start position:0%
CC collector introducing the concept of
young<00:19:08.980><c> generation</c><00:19:09.520><c> collection</c><00:19:09.850><c> only</c><00:19:10.510><c> tracing</c>

00:19:11.250 --> 00:19:11.260 align:start position:0%
young generation collection only tracing
 

00:19:11.260 --> 00:19:13.800 align:start position:0%
young generation collection only tracing
recently<00:19:11.980><c> allocated</c><00:19:12.160><c> regions</c><00:19:12.850><c> these</c><00:19:13.630><c> are</c>

00:19:13.800 --> 00:19:13.810 align:start position:0%
recently allocated regions these are
 

00:19:13.810 --> 00:19:15.990 align:start position:0%
recently allocated regions these are
called<00:19:13.990><c> minor</c><00:19:14.200><c> collections</c><00:19:14.770><c> are</c><00:19:15.640><c> supposed</c><00:19:15.940><c> to</c>

00:19:15.990 --> 00:19:16.000 align:start position:0%
called minor collections are supposed to
 

00:19:16.000 --> 00:19:17.460 align:start position:0%
called minor collections are supposed to
fool<00:19:16.180><c> hip</c><00:19:16.360><c> collections</c><00:19:16.810><c> with</c><00:19:16.960><c> a</c><00:19:16.990><c> called</c><00:19:17.230><c> major</c>

00:19:17.460 --> 00:19:17.470 align:start position:0%
fool hip collections with a called major
 

00:19:17.470 --> 00:19:20.610 align:start position:0%
fool hip collections with a called major
collections<00:19:18.690><c> there's</c><00:19:19.690><c> a</c><00:19:19.750><c> GC</c><00:19:20.140><c> heuristics</c>

00:19:20.610 --> 00:19:20.620 align:start position:0%
collections there's a GC heuristics
 

00:19:20.620 --> 00:19:23.100 align:start position:0%
collections there's a GC heuristics
which<00:19:20.860><c> tries</c><00:19:21.160><c> to</c><00:19:21.490><c> use</c><00:19:22.360><c> minor</c><00:19:22.690><c> collection</c>

00:19:23.100 --> 00:19:23.110 align:start position:0%
which tries to use minor collection
 

00:19:23.110 --> 00:19:25.860 align:start position:0%
which tries to use minor collection
firsts<00:19:23.560><c> and</c><00:19:23.740><c> it</c><00:19:24.460><c> runs</c><00:19:24.670><c> major</c><00:19:24.940><c> collections</c><00:19:25.450><c> if</c>

00:19:25.860 --> 00:19:25.870 align:start position:0%
firsts and it runs major collections if
 

00:19:25.870 --> 00:19:29.790 align:start position:0%
firsts and it runs major collections if
needed<00:19:27.150><c> in</c><00:19:28.150><c> a</c><00:19:28.900><c> young</c><00:19:29.050><c> generation</c><00:19:29.290><c> collection</c>

00:19:29.790 --> 00:19:29.800 align:start position:0%
needed in a young generation collection
 

00:19:29.800 --> 00:19:31.740 align:start position:0%
needed in a young generation collection
we<00:19:30.190><c> handle</c><00:19:30.460><c> newly</c><00:19:30.730><c> allocated</c><00:19:30.880><c> ijen</c><00:19:31.300><c> specially</c>

00:19:31.740 --> 00:19:31.750 align:start position:0%
we handle newly allocated ijen specially
 

00:19:31.750 --> 00:19:33.900 align:start position:0%
we handle newly allocated ijen specially
these<00:19:32.290><c> regions</c><00:19:32.710><c> are</c><00:19:32.980><c> the</c><00:19:33.100><c> ones</c><00:19:33.340><c> which</c><00:19:33.760><c> have</c>

00:19:33.900 --> 00:19:33.910 align:start position:0%
these regions are the ones which have
 

00:19:33.910 --> 00:19:35.730 align:start position:0%
these regions are the ones which have
been<00:19:34.030><c> allocated</c><00:19:34.210><c> in</c><00:19:34.630><c> the</c><00:19:34.750><c> previous</c><00:19:35.110><c> GC</c><00:19:35.290><c> cycle</c>

00:19:35.730 --> 00:19:35.740 align:start position:0%
been allocated in the previous GC cycle
 

00:19:35.740 --> 00:19:37.650 align:start position:0%
been allocated in the previous GC cycle
and<00:19:35.950><c> the</c><00:19:36.490><c> objects</c><00:19:36.880><c> are</c><00:19:37.000><c> much</c><00:19:37.090><c> more</c><00:19:37.300><c> likely</c><00:19:37.480><c> to</c>

00:19:37.650 --> 00:19:37.660 align:start position:0%
and the objects are much more likely to
 

00:19:37.660 --> 00:19:38.750 align:start position:0%
and the objects are much more likely to
be<00:19:37.960><c> unreachable</c>

00:19:38.750 --> 00:19:38.760 align:start position:0%
be unreachable
 

00:19:38.760 --> 00:19:41.580 align:start position:0%
be unreachable
therefore<00:19:39.760><c> these</c><00:19:40.300><c> regions</c><00:19:40.780><c> are</c><00:19:40.990><c> the</c><00:19:41.200><c> only</c><00:19:41.380><c> one</c>

00:19:41.580 --> 00:19:41.590 align:start position:0%
therefore these regions are the only one
 

00:19:41.590 --> 00:19:43.650 align:start position:0%
therefore these regions are the only one
evacuated<00:19:42.220><c> during</c><00:19:42.490><c> a</c><00:19:42.670><c> minor</c><00:19:42.880><c> collection</c><00:19:43.390><c> and</c>

00:19:43.650 --> 00:19:43.660 align:start position:0%
evacuated during a minor collection and
 

00:19:43.660 --> 00:19:45.870 align:start position:0%
evacuated during a minor collection and
they're<00:19:44.560><c> also</c><00:19:44.710><c> the</c><00:19:44.950><c> only</c><00:19:45.190><c> regions</c><00:19:45.580><c> which</c><00:19:45.730><c> are</c>

00:19:45.870 --> 00:19:45.880 align:start position:0%
they're also the only regions which are
 

00:19:45.880 --> 00:19:47.490 align:start position:0%
they're also the only regions which are
being<00:19:46.120><c> traced</c><00:19:46.390><c> during</c><00:19:46.780><c> a</c><00:19:46.870><c> minor</c><00:19:47.020><c> collection</c>

00:19:47.490 --> 00:19:47.500 align:start position:0%
being traced during a minor collection
 

00:19:47.500 --> 00:19:50.220 align:start position:0%
being traced during a minor collection
all<00:19:48.130><c> generation</c><00:19:48.790><c> objects</c><00:19:49.540><c> have</c><00:19:49.660><c> survived</c><00:19:50.020><c> at</c>

00:19:50.220 --> 00:19:50.230 align:start position:0%
all generation objects have survived at
 

00:19:50.230 --> 00:19:51.840 align:start position:0%
all generation objects have survived at
least<00:19:50.470><c> one</c><00:19:50.740><c> collection</c><00:19:51.190><c> and</c><00:19:51.370><c> they</c><00:19:51.610><c> are</c><00:19:51.670><c> more</c>

00:19:51.840 --> 00:19:51.850 align:start position:0%
least one collection and they are more
 

00:19:51.850 --> 00:19:54.090 align:start position:0%
least one collection and they are more
likely<00:19:52.030><c> to</c><00:19:52.420><c> be</c><00:19:52.780><c> still</c><00:19:53.020><c> alive</c><00:19:53.050><c> so</c><00:19:53.860><c> they're</c><00:19:54.010><c> not</c>

00:19:54.090 --> 00:19:54.100 align:start position:0%
likely to be still alive so they're not
 

00:19:54.100 --> 00:19:54.720 align:start position:0%
likely to be still alive so they're not
traced

00:19:54.720 --> 00:19:54.730 align:start position:0%
traced
 

00:19:54.730 --> 00:19:58.170 align:start position:0%
traced
during<00:19:55.000><c> a</c><00:19:55.180><c> minor</c><00:19:55.390><c> collection</c><00:19:56.490><c> overall</c><00:19:57.490><c> this</c>

00:19:58.170 --> 00:19:58.180 align:start position:0%
during a minor collection overall this
 

00:19:58.180 --> 00:20:07.290 align:start position:0%
during a minor collection overall this
results<00:19:58.660><c> in</c><00:19:58.750><c> a</c><00:19:58.840><c> much</c><00:19:58.930><c> faster</c><00:19:58.990><c> GC</c><00:19:59.590><c> cycle</c>

00:20:07.290 --> 00:20:07.300 align:start position:0%
 
 

00:20:07.300 --> 00:20:09.420 align:start position:0%
 
by<00:20:07.840><c> tracing</c><00:20:08.110><c> young</c><00:20:08.440><c> generation</c><00:20:08.890><c> regions</c><00:20:09.310><c> from</c>

00:20:09.420 --> 00:20:09.430 align:start position:0%
by tracing young generation regions from
 

00:20:09.430 --> 00:20:15.780 align:start position:0%
by tracing young generation regions from
the<00:20:09.520><c> roots</c><00:20:09.790><c> and</c><00:20:10.090><c> also</c><00:20:14.010><c> in</c><00:20:15.010><c> other</c><00:20:15.220><c> to</c><00:20:15.400><c> any</c><00:20:15.520><c> trace</c>

00:20:15.780 --> 00:20:15.790 align:start position:0%
the roots and also in other to any trace
 

00:20:15.790 --> 00:20:18.540 align:start position:0%
the roots and also in other to any trace
objects<00:20:16.480><c> in</c><00:20:16.720><c> the</c><00:20:16.870><c> young</c><00:20:16.990><c> generation</c><00:20:17.520><c> we</c><00:20:18.520><c> need</c>

00:20:18.540 --> 00:20:18.550 align:start position:0%
objects in the young generation we need
 

00:20:18.550 --> 00:20:21.060 align:start position:0%
objects in the young generation we need
to<00:20:18.730><c> determine</c><00:20:18.940><c> the</c><00:20:19.120><c> reach</c><00:20:19.360><c> ability</c><00:20:19.720><c> to</c><00:20:20.710><c> do</c><00:20:20.830><c> so</c>

00:20:21.060 --> 00:20:21.070 align:start position:0%
to determine the reach ability to do so
 

00:20:21.070 --> 00:20:22.560 align:start position:0%
to determine the reach ability to do so
we<00:20:21.280><c> need</c><00:20:21.400><c> to</c><00:20:21.520><c> track</c><00:20:21.730><c> references</c><00:20:22.240><c> from</c><00:20:22.450><c> the</c>

00:20:22.560 --> 00:20:22.570 align:start position:0%
we need to track references from the
 

00:20:22.570 --> 00:20:24.360 align:start position:0%
we need to track references from the
roots<00:20:22.750><c> to</c><00:20:23.050><c> the</c><00:20:23.080><c> young</c><00:20:23.290><c> object</c><00:20:23.470><c> as</c><00:20:23.860><c> we</c><00:20:24.010><c> did</c><00:20:24.190><c> in</c>

00:20:24.360 --> 00:20:24.370 align:start position:0%
roots to the young object as we did in
 

00:20:24.370 --> 00:20:26.250 align:start position:0%
roots to the young object as we did in
the<00:20:24.460><c> full</c><00:20:24.610><c> hippo</c><00:20:24.880><c> actions</c><00:20:25.210><c> but</c><00:20:25.750><c> we</c><00:20:25.870><c> also</c><00:20:26.050><c> need</c>

00:20:26.250 --> 00:20:26.260 align:start position:0%
the full hippo actions but we also need
 

00:20:26.260 --> 00:20:28.590 align:start position:0%
the full hippo actions but we also need
to<00:20:26.380><c> trace</c><00:20:26.670><c> references</c><00:20:27.670><c> from</c><00:20:27.790><c> old</c><00:20:28.060><c> object</c><00:20:28.450><c> to</c>

00:20:28.590 --> 00:20:28.600 align:start position:0%
to trace references from old object to
 

00:20:28.600 --> 00:20:30.180 align:start position:0%
to trace references from old object to
young<00:20:28.780><c> objects</c><00:20:29.260><c> because</c><00:20:29.500><c> the</c><00:20:29.620><c> old</c><00:20:29.800><c> objects</c>

00:20:30.180 --> 00:20:30.190 align:start position:0%
young objects because the old objects
 

00:20:30.190 --> 00:20:33.090 align:start position:0%
young objects because the old objects
are<00:20:30.250><c> not</c><00:20:30.340><c> race</c><00:20:30.660><c> we</c><00:20:31.660><c> track</c><00:20:31.930><c> such</c><00:20:32.170><c> young</c><00:20:32.650><c> young</c>

00:20:33.090 --> 00:20:33.100 align:start position:0%
are not race we track such young young
 

00:20:33.100 --> 00:20:35.520 align:start position:0%
are not race we track such young young
to<00:20:33.250><c> the</c><00:20:33.280><c> old</c><00:20:33.910><c> Auto</c><00:20:34.480><c> young</c><00:20:34.810><c> object</c><00:20:34.960><c> references</c>

00:20:35.520 --> 00:20:35.530 align:start position:0%
to the old Auto young object references
 

00:20:35.530 --> 00:20:38.370 align:start position:0%
to the old Auto young object references
using<00:20:35.770><c> a</c><00:20:35.830><c> remember</c><00:20:36.220><c> sets</c><00:20:37.020><c> mechanism</c><00:20:38.020><c> which</c>

00:20:38.370 --> 00:20:38.380 align:start position:0%
using a remember sets mechanism which
 

00:20:38.380 --> 00:20:42.600 align:start position:0%
using a remember sets mechanism which
keeps<00:20:38.620><c> tracks</c><00:20:38.920><c> of</c><00:20:39.480><c> references</c><00:20:41.430><c> object</c><00:20:42.430><c> whose</c>

00:20:42.600 --> 00:20:42.610 align:start position:0%
keeps tracks of references object whose
 

00:20:42.610 --> 00:20:44.850 align:start position:0%
keeps tracks of references object whose
field<00:20:42.940><c> i've</c><00:20:43.780><c> been</c><00:20:43.960><c> modified</c><00:20:44.350><c> since</c><00:20:44.620><c> the</c><00:20:44.740><c> last</c>

00:20:44.850 --> 00:20:44.860 align:start position:0%
field i've been modified since the last
 

00:20:44.860 --> 00:20:49.340 align:start position:0%
field i've been modified since the last
GC<00:20:45.100><c> cycle</c>

00:20:49.340 --> 00:20:49.350 align:start position:0%
 
 

00:20:49.350 --> 00:20:55.170 align:start position:0%
 
minor<00:20:50.350><c> collection</c><00:20:53.580><c> yeah</c><00:20:54.580><c> by</c><00:20:54.760><c> tracing</c><00:20:54.970><c> the</c>

00:20:55.170 --> 00:20:55.180 align:start position:0%
minor collection yeah by tracing the
 

00:20:55.180 --> 00:20:56.970 align:start position:0%
minor collection yeah by tracing the
young<00:20:55.330><c> generations</c><00:20:55.960><c> from</c><00:20:56.470><c> the</c><00:20:56.620><c> roots</c><00:20:56.800><c> and</c>

00:20:56.970 --> 00:20:56.980 align:start position:0%
young generations from the roots and
 

00:20:56.980 --> 00:20:59.280 align:start position:0%
young generations from the roots and
remember<00:20:57.370><c> sets</c><00:20:57.610><c> we</c><00:20:58.240><c> can</c><00:20:58.270><c> identify</c><00:20:58.600><c> live</c><00:20:59.140><c> young</c>

00:20:59.280 --> 00:20:59.290 align:start position:0%
remember sets we can identify live young
 

00:20:59.290 --> 00:21:00.930 align:start position:0%
remember sets we can identify live young
objects<00:20:59.800><c> and</c><00:20:59.950><c> copy</c><00:21:00.130><c> them</c><00:21:00.310><c> out</c><00:21:00.520><c> of</c><00:21:00.700><c> the</c><00:21:00.790><c> region</c>

00:21:00.930 --> 00:21:00.940 align:start position:0%
objects and copy them out of the region
 

00:21:00.940 --> 00:21:03.000 align:start position:0%
objects and copy them out of the region
without<00:21:01.840><c> the</c><00:21:01.960><c> need</c><00:21:02.110><c> to</c><00:21:02.140><c> trade</c><00:21:02.470><c> the</c><00:21:02.590><c> whole</c><00:21:02.770><c> heap</c>

00:21:03.000 --> 00:21:03.010 align:start position:0%
without the need to trade the whole heap
 

00:21:03.010 --> 00:21:05.160 align:start position:0%
without the need to trade the whole heap
and<00:21:03.280><c> this</c><00:21:03.730><c> is</c><00:21:03.820><c> the</c><00:21:03.910><c> main</c><00:21:04.090><c> benefit</c><00:21:04.750><c> of</c><00:21:04.810><c> minor</c>

00:21:05.160 --> 00:21:05.170 align:start position:0%
and this is the main benefit of minor
 

00:21:05.170 --> 00:21:07.980 align:start position:0%
and this is the main benefit of minor
collections<00:21:06.240><c> minor</c><00:21:07.240><c> collection</c><00:21:07.630><c> do</c><00:21:07.840><c> not</c>

00:21:07.980 --> 00:21:07.990 align:start position:0%
collections minor collection do not
 

00:21:07.990 --> 00:21:09.810 align:start position:0%
collections minor collection do not
process<00:21:08.350><c> all</c><00:21:08.620><c> generation</c><00:21:09.040><c> object</c><00:21:09.430><c> that</c><00:21:09.670><c> could</c>

00:21:09.810 --> 00:21:09.820 align:start position:0%
process all generation object that could
 

00:21:09.820 --> 00:21:10.980 align:start position:0%
process all generation object that could
have<00:21:09.910><c> been</c><00:21:10.060><c> reclaimed</c><00:21:10.510><c> in</c><00:21:10.750><c> the</c><00:21:10.810><c> food</c>

00:21:10.980 --> 00:21:10.990 align:start position:0%
have been reclaimed in the food
 

00:21:10.990 --> 00:21:13.520 align:start position:0%
have been reclaimed in the food
collection<00:21:11.560><c> we</c><00:21:12.370><c> call</c><00:21:12.550><c> that</c><00:21:12.670><c> floating</c><00:21:13.240><c> garbage</c>

00:21:13.520 --> 00:21:13.530 align:start position:0%
collection we call that floating garbage
 

00:21:13.530 --> 00:21:15.750 align:start position:0%
collection we call that floating garbage
they<00:21:14.530><c> will</c><00:21:14.680><c> eventually</c><00:21:14.860><c> be</c><00:21:15.130><c> collected</c><00:21:15.730><c> during</c>

00:21:15.750 --> 00:21:15.760 align:start position:0%
they will eventually be collected during
 

00:21:15.760 --> 00:21:18.600 align:start position:0%
they will eventually be collected during
the<00:21:16.060><c> next</c><00:21:16.270><c> full</c><00:21:16.480><c> hip</c><00:21:16.660><c> collection</c><00:21:17.460><c> let's</c><00:21:18.460><c> now</c>

00:21:18.600 --> 00:21:18.610 align:start position:0%
the next full hip collection let's now
 

00:21:18.610 --> 00:21:20.520 align:start position:0%
the next full hip collection let's now
see<00:21:18.790><c> the</c><00:21:18.820><c> impact</c><00:21:19.150><c> of</c><00:21:19.330><c> generation</c><00:21:19.840><c> CC</c><00:21:20.170><c> on</c><00:21:20.350><c> our</c>

00:21:20.520 --> 00:21:20.530 align:start position:0%
see the impact of generation CC on our
 

00:21:20.530 --> 00:21:23.850 align:start position:0%
see the impact of generation CC on our
own<00:21:20.740><c> arts</c><00:21:21.040><c> performance</c><00:21:22.560><c> to</c><00:21:23.560><c> assess</c><00:21:23.770><c> the</c>

00:21:23.850 --> 00:21:23.860 align:start position:0%
own arts performance to assess the
 

00:21:23.860 --> 00:21:25.860 align:start position:0%
own arts performance to assess the
impact<00:21:24.160><c> of</c><00:21:24.280><c> generational</c><00:21:24.850><c> CC</c><00:21:25.270><c> collection</c><00:21:25.690><c> on</c>

00:21:25.860 --> 00:21:25.870 align:start position:0%
impact of generational CC collection on
 

00:21:25.870 --> 00:21:27.780 align:start position:0%
impact of generational CC collection on
arts<00:21:26.200><c> we've</c><00:21:26.470><c> measured</c><00:21:26.620><c> the</c><00:21:26.920><c> average</c><00:21:27.040><c> CPU</c><00:21:27.550><c> time</c>

00:21:27.780 --> 00:21:27.790 align:start position:0%
arts we've measured the average CPU time
 

00:21:27.790 --> 00:21:29.550 align:start position:0%
arts we've measured the average CPU time
spent<00:21:28.120><c> in</c><00:21:28.210><c> the</c><00:21:28.300><c> garbage</c><00:21:28.570><c> collector</c><00:21:28.900><c> thread</c><00:21:29.170><c> on</c>

00:21:29.550 --> 00:21:29.560 align:start position:0%
spent in the garbage collector thread on
 

00:21:29.560 --> 00:21:32.310 align:start position:0%
spent in the garbage collector thread on
some<00:21:29.950><c> GC</c><00:21:30.220><c> internship</c><00:21:30.640><c> benchmarks</c><00:21:31.180><c> we</c><00:21:31.990><c> use</c><00:21:32.170><c> the</c>

00:21:32.310 --> 00:21:32.320 align:start position:0%
some GC internship benchmarks we use the
 

00:21:32.320 --> 00:21:33.720 align:start position:0%
some GC internship benchmarks we use the
edge<00:21:32.470><c> to</c><00:21:32.710><c> benchmark</c><00:21:33.130><c> from</c><00:21:33.280><c> the</c><00:21:33.430><c> deck</c><00:21:33.580><c> above</c>

00:21:33.720 --> 00:21:33.730 align:start position:0%
edge to benchmark from the deck above
 

00:21:33.730 --> 00:21:35.580 align:start position:0%
edge to benchmark from the deck above
sweets<00:21:34.090><c> which</c><00:21:34.390><c> is</c><00:21:34.480><c> an</c><00:21:34.600><c> in-memory</c><00:21:34.780><c> database</c>

00:21:35.580 --> 00:21:35.590 align:start position:0%
sweets which is an in-memory database
 

00:21:35.590 --> 00:21:37.920 align:start position:0%
sweets which is an in-memory database
benchmark<00:21:36.190><c> as</c><00:21:36.730><c> well</c><00:21:37.030><c> as</c><00:21:37.300><c> our</c><00:21:37.450><c> internal</c>

00:21:37.920 --> 00:21:37.930 align:start position:0%
benchmark as well as our internal
 

00:21:37.930 --> 00:21:40.200 align:start position:0%
benchmark as well as our internal
village<00:21:38.230><c> seeds</c><00:21:38.440><c> benchmark</c><00:21:38.920><c> because</c><00:21:39.640><c> both</c><00:21:40.030><c> are</c>

00:21:40.200 --> 00:21:40.210 align:start position:0%
village seeds benchmark because both are
 

00:21:40.210 --> 00:21:42.690 align:start position:0%
village seeds benchmark because both are
good<00:21:40.360><c> examples</c><00:21:40.690><c> of</c><00:21:41.280><c> allocation</c><00:21:42.280><c> and</c><00:21:42.400><c> garbage</c>

00:21:42.690 --> 00:21:42.700 align:start position:0%
good examples of allocation and garbage
 

00:21:42.700 --> 00:21:45.990 align:start position:0%
good examples of allocation and garbage
collection<00:21:42.850><c> workloads</c><00:21:44.160><c> on</c><00:21:45.160><c> average</c><00:21:45.520><c> the</c>

00:21:45.990 --> 00:21:46.000 align:start position:0%
collection workloads on average the
 

00:21:46.000 --> 00:21:49.080 align:start position:0%
collection workloads on average the
generational<00:21:46.600><c> CC</c><00:21:47.170><c> collector</c><00:21:47.560><c> is</c><00:21:47.800><c> 38%</c><00:21:48.550><c> faster</c>

00:21:49.080 --> 00:21:49.090 align:start position:0%
generational CC collector is 38% faster
 

00:21:49.090 --> 00:21:52.260 align:start position:0%
generational CC collector is 38% faster
on<00:21:49.240><c> h2</c><00:21:49.690><c> and</c><00:21:50.100><c> 33%</c><00:21:51.100><c> faster</c><00:21:51.220><c> on</c><00:21:51.550><c> sheets</c><00:21:51.850><c> while</c>

00:21:52.260 --> 00:21:52.270 align:start position:0%
on h2 and 33% faster on sheets while
 

00:21:52.270 --> 00:21:53.280 align:start position:0%
on h2 and 33% faster on sheets while
compared<00:21:52.630><c> with</c><00:21:52.750><c> the</c><00:21:52.840><c> non</c><00:21:52.960><c> generational</c>

00:21:53.280 --> 00:21:53.290 align:start position:0%
compared with the non generational
 

00:21:53.290 --> 00:21:55.350 align:start position:0%
compared with the non generational
garbage<00:21:53.800><c> collector</c><00:21:54.340><c> that</c><00:21:54.820><c> we</c><00:21:55.000><c> shipped</c><00:21:55.210><c> in</c>

00:21:55.350 --> 00:21:55.360 align:start position:0%
garbage collector that we shipped in
 

00:21:55.360 --> 00:21:57.600 align:start position:0%
garbage collector that we shipped in
under<00:21:55.540><c> 8</c><00:21:55.630><c> P</c>

00:21:57.600 --> 00:21:57.610 align:start position:0%
under 8 P
 

00:21:57.610 --> 00:22:00.180 align:start position:0%
under 8 P
now<00:21:58.120><c> this</c><00:21:58.300><c> is</c><00:21:58.390><c> the</c><00:21:58.450><c> direct</c><00:21:58.720><c> results</c><00:21:59.170><c> of</c><00:21:59.290><c> a</c>

00:22:00.180 --> 00:22:00.190 align:start position:0%
now this is the direct results of a
 

00:22:00.190 --> 00:22:02.220 align:start position:0%
now this is the direct results of a
younger<00:22:00.580><c> generation</c><00:22:01.020><c> collection</c><00:22:02.020><c> being</c>

00:22:02.220 --> 00:22:02.230 align:start position:0%
younger generation collection being
 

00:22:02.230 --> 00:22:05.280 align:start position:0%
younger generation collection being
cheaper<00:22:02.620><c> in</c><00:22:02.770><c> terms</c><00:22:02.800><c> of</c><00:22:03.040><c> CPU</c><00:22:03.610><c> time</c><00:22:04.050><c> so</c><00:22:05.050><c> to</c><00:22:05.170><c> put</c>

00:22:05.280 --> 00:22:05.290 align:start position:0%
cheaper in terms of CPU time so to put
 

00:22:05.290 --> 00:22:07.740 align:start position:0%
cheaper in terms of CPU time so to put
it<00:22:05.380><c> in</c><00:22:05.650><c> a</c><00:22:05.740><c> nutshell</c><00:22:05.860><c> using</c><00:22:06.820><c> short</c><00:22:07.090><c> of</c><00:22:07.240><c> objects</c>

00:22:07.740 --> 00:22:07.750 align:start position:0%
it in a nutshell using short of objects
 

00:22:07.750 --> 00:22:11.940 align:start position:0%
it in a nutshell using short of objects
is<00:22:07.870><c> now</c><00:22:08.080><c> cheaper</c><00:22:09.210><c> and</c><00:22:10.230><c> also</c><00:22:11.230><c> as</c><00:22:11.440><c> a</c><00:22:11.500><c> consequence</c>

00:22:11.940 --> 00:22:11.950 align:start position:0%
is now cheaper and also as a consequence
 

00:22:11.950 --> 00:22:14.040 align:start position:0%
is now cheaper and also as a consequence
of<00:22:12.220><c> these</c><00:22:12.430><c> improvements</c><00:22:12.850><c> we</c><00:22:13.570><c> expect</c><00:22:13.930><c> that</c>

00:22:14.040 --> 00:22:14.050 align:start position:0%
of these improvements we expect that
 

00:22:14.050 --> 00:22:15.900 align:start position:0%
of these improvements we expect that
because<00:22:14.200><c> we're</c><00:22:14.530><c> spending</c><00:22:14.710><c> less</c><00:22:14.980><c> time</c><00:22:15.010><c> in</c><00:22:15.490><c> the</c>

00:22:15.900 --> 00:22:15.910 align:start position:0%
because we're spending less time in the
 

00:22:15.910 --> 00:22:17.940 align:start position:0%
because we're spending less time in the
garbage<00:22:16.150><c> collector</c><00:22:16.600><c> this</c><00:22:17.200><c> will</c><00:22:17.380><c> benefits</c><00:22:17.800><c> the</c>

00:22:17.940 --> 00:22:17.950 align:start position:0%
garbage collector this will benefits the
 

00:22:17.950 --> 00:22:21.630 align:start position:0%
garbage collector this will benefits the
device<00:22:18.190><c> battery</c><00:22:18.430><c> life</c><00:22:20.580><c> improvements</c><00:22:21.580><c> in</c>

00:22:21.630 --> 00:22:21.640 align:start position:0%
device battery life improvements in
 

00:22:21.640 --> 00:22:23.420 align:start position:0%
device battery life improvements in
garbage<00:22:21.880><c> collection</c><00:22:22.000><c> often</c><00:22:22.570><c> I</c><00:22:22.690><c> lights</c>

00:22:23.420 --> 00:22:23.430 align:start position:0%
garbage collection often I lights
 

00:22:23.430 --> 00:22:25.680 align:start position:0%
garbage collection often I lights
shredders<00:22:24.430><c> between</c><00:22:24.730><c> CPU</c><00:22:25.030><c> and</c><00:22:25.270><c> RAM</c><00:22:25.330><c> usage</c>

00:22:25.680 --> 00:22:25.690 align:start position:0%
shredders between CPU and RAM usage
 

00:22:25.690 --> 00:22:28.050 align:start position:0%
shredders between CPU and RAM usage
generational<00:22:26.680><c> garbage</c><00:22:27.040><c> collector</c><00:22:27.580><c> may</c><00:22:27.880><c> keep</c>

00:22:28.050 --> 00:22:28.060 align:start position:0%
generational garbage collector may keep
 

00:22:28.060 --> 00:22:30.510 align:start position:0%
generational garbage collector may keep
some<00:22:28.300><c> objects</c><00:22:28.690><c> a</c><00:22:28.720><c> bit</c><00:22:28.840><c> longer</c><00:22:29.050><c> in</c><00:22:29.860><c> order</c><00:22:30.310><c> to</c>

00:22:30.510 --> 00:22:30.520 align:start position:0%
some objects a bit longer in order to
 

00:22:30.520 --> 00:22:33.450 align:start position:0%
some objects a bit longer in order to
speed<00:22:30.730><c> up</c><00:22:30.760><c> the</c><00:22:30.910><c> overall</c><00:22:31.240><c> GC</c><00:22:32.050><c> execution</c><00:22:32.620><c> to</c>

00:22:33.450 --> 00:22:33.460 align:start position:0%
speed up the overall GC execution to
 

00:22:33.460 --> 00:22:35.340 align:start position:0%
speed up the overall GC execution to
talk<00:22:33.610><c> more</c><00:22:33.820><c> about</c><00:22:33.880><c> these</c><00:22:34.240><c> how</c><00:22:34.840><c> we</c><00:22:34.900><c> can</c><00:22:35.110><c> improve</c>

00:22:35.340 --> 00:22:35.350 align:start position:0%
talk more about these how we can improve
 

00:22:35.350 --> 00:22:37.710 align:start position:0%
talk more about these how we can improve
these<00:22:35.620><c> trade-offs</c><00:22:35.890><c> and</c><00:22:36.250><c> heap</c><00:22:37.000><c> compaction</c><00:22:37.510><c> I'm</c>

00:22:37.710 --> 00:22:37.720 align:start position:0%
these trade-offs and heap compaction I'm
 

00:22:37.720 --> 00:22:43.880 align:start position:0%
these trade-offs and heap compaction I'm
handing<00:22:38.350><c> it</c><00:22:38.470><c> over</c><00:22:38.800><c> to</c><00:22:39.070><c> Lokesh</c>

00:22:43.880 --> 00:22:43.890 align:start position:0%
 
 

00:22:43.890 --> 00:22:46.740 align:start position:0%
 
[Applause]

00:22:46.740 --> 00:22:46.750 align:start position:0%
[Applause]
 

00:22:46.750 --> 00:22:49.350 align:start position:0%
[Applause]
hi<00:22:47.290><c> everyone</c><00:22:47.620><c> I</c><00:22:47.980><c> hope</c><00:22:48.640><c> you</c><00:22:48.790><c> still</c><00:22:49.030><c> have</c><00:22:49.060><c> some</c>

00:22:49.350 --> 00:22:49.360 align:start position:0%
hi everyone I hope you still have some
 

00:22:49.360 --> 00:22:52.130 align:start position:0%
hi everyone I hope you still have some
stamina<00:22:49.600><c> left</c><00:22:49.900><c> for</c><00:22:50.170><c> more</c><00:22:50.380><c> technical</c><00:22:50.830><c> stuff</c><00:22:51.040><c> so</c>

00:22:52.130 --> 00:22:52.140 align:start position:0%
stamina left for more technical stuff so
 

00:22:52.140 --> 00:22:55.500 align:start position:0%
stamina left for more technical stuff so
let's<00:22:53.140><c> start</c><00:22:53.440><c> off</c><00:22:53.650><c> with</c><00:22:54.330><c> talking</c><00:22:55.330><c> a</c><00:22:55.420><c> little</c>

00:22:55.500 --> 00:22:55.510 align:start position:0%
let's start off with talking a little
 

00:22:55.510 --> 00:22:57.540 align:start position:0%
let's start off with talking a little
bit<00:22:55.690><c> more</c><00:22:55.810><c> about</c><00:22:56.290><c> how</c><00:22:56.590><c> hip</c><00:22:56.830><c> compaction</c><00:22:57.340><c> works</c>

00:22:57.540 --> 00:22:57.550 align:start position:0%
bit more about how hip compaction works
 

00:22:57.550 --> 00:22:58.640 align:start position:0%
bit more about how hip compaction works
in<00:22:57.760><c> CeCe</c>

00:22:58.640 --> 00:22:58.650 align:start position:0%
in CeCe
 

00:22:58.650 --> 00:23:02.610 align:start position:0%
in CeCe
so<00:22:59.650><c> as</c><00:22:59.770><c> you</c><00:22:59.890><c> can</c><00:23:00.070><c> imagine</c><00:23:01.110><c> the</c><00:23:02.110><c> more</c><00:23:02.320><c> live</c>

00:23:02.610 --> 00:23:02.620 align:start position:0%
so as you can imagine the more live
 

00:23:02.620 --> 00:23:05.720 align:start position:0%
so as you can imagine the more live
objects<00:23:03.130><c> there</c><00:23:03.310><c> are</c><00:23:03.340><c> in</c><00:23:03.790><c> a</c><00:23:03.940><c> compacting</c><00:23:04.570><c> region</c>

00:23:05.720 --> 00:23:05.730 align:start position:0%
objects there are in a compacting region
 

00:23:05.730 --> 00:23:09.180 align:start position:0%
objects there are in a compacting region
the<00:23:06.730><c> lesser</c><00:23:07.110><c> memory</c><00:23:08.110><c> you</c><00:23:08.260><c> would</c><00:23:08.440><c> reclaim</c><00:23:08.710><c> if</c>

00:23:09.180 --> 00:23:09.190 align:start position:0%
the lesser memory you would reclaim if
 

00:23:09.190 --> 00:23:12.150 align:start position:0%
the lesser memory you would reclaim if
you<00:23:09.610><c> were</c><00:23:09.730><c> to</c><00:23:09.880><c> compact</c><00:23:10.210><c> it</c><00:23:10.330><c> and</c><00:23:10.830><c> so</c><00:23:11.830><c> it</c><00:23:11.950><c> makes</c>

00:23:12.150 --> 00:23:12.160 align:start position:0%
you were to compact it and so it makes
 

00:23:12.160 --> 00:23:15.270 align:start position:0%
you were to compact it and so it makes
more<00:23:12.430><c> sense</c><00:23:12.490><c> to</c><00:23:12.940><c> only</c><00:23:13.390><c> for</c><00:23:14.200><c> a</c><00:23:14.380><c> higher</c><00:23:14.890><c> rate</c><00:23:15.250><c> of</c>

00:23:15.270 --> 00:23:15.280 align:start position:0%
more sense to only for a higher rate of
 

00:23:15.280 --> 00:23:17.970 align:start position:0%
more sense to only for a higher rate of
interest<00:23:15.760><c> meant</c><00:23:16.090><c> to</c><00:23:16.540><c> only</c><00:23:17.080><c> compact</c><00:23:17.650><c> those</c>

00:23:17.970 --> 00:23:17.980 align:start position:0%
interest meant to only compact those
 

00:23:17.980 --> 00:23:19.710 align:start position:0%
interest meant to only compact those
regions<00:23:18.460><c> which</c><00:23:18.670><c> have</c><00:23:18.700><c> considerable</c><00:23:19.390><c> garbage</c>

00:23:19.710 --> 00:23:19.720 align:start position:0%
regions which have considerable garbage
 

00:23:19.720 --> 00:23:21.510 align:start position:0%
regions which have considerable garbage
in<00:23:19.840><c> them</c><00:23:19.990><c> and</c><00:23:20.230><c> that's</c><00:23:20.860><c> exactly</c><00:23:21.160><c> what</c>

00:23:21.510 --> 00:23:21.520 align:start position:0%
in them and that's exactly what
 

00:23:21.520 --> 00:23:24.930 align:start position:0%
in them and that's exactly what
concurrent<00:23:22.450><c> coping</c><00:23:22.840><c> collector</c><00:23:23.200><c> does</c><00:23:23.940><c> we</c>

00:23:24.930 --> 00:23:24.940 align:start position:0%
concurrent coping collector does we
 

00:23:24.940 --> 00:23:27.780 align:start position:0%
concurrent coping collector does we
maintain<00:23:25.540><c> a</c><00:23:25.720><c> Perth</c><00:23:26.200><c> Region</c><00:23:26.980><c> liveness</c><00:23:27.310><c> stat</c>

00:23:27.780 --> 00:23:27.790 align:start position:0%
maintain a Perth Region liveness stat
 

00:23:27.790 --> 00:23:31.350 align:start position:0%
maintain a Perth Region liveness stat
which<00:23:29.130><c> indicates</c><00:23:30.130><c> how</c><00:23:30.370><c> much</c><00:23:30.520><c> live</c><00:23:30.790><c> data</c><00:23:31.060><c> is</c>

00:23:31.350 --> 00:23:31.360 align:start position:0%
which indicates how much live data is
 

00:23:31.360 --> 00:23:33.270 align:start position:0%
which indicates how much live data is
there<00:23:31.630><c> in</c><00:23:31.840><c> a</c><00:23:31.930><c> particular</c><00:23:32.320><c> region</c><00:23:32.470><c> and</c><00:23:32.770><c> based</c>

00:23:33.270 --> 00:23:33.280 align:start position:0%
there in a particular region and based
 

00:23:33.280 --> 00:23:35.040 align:start position:0%
there in a particular region and based
on<00:23:33.460><c> that</c><00:23:33.640><c> decide</c><00:23:34.030><c> which</c><00:23:34.240><c> regions</c><00:23:34.630><c> are</c><00:23:34.840><c> worth</c>

00:23:35.040 --> 00:23:35.050 align:start position:0%
on that decide which regions are worth
 

00:23:35.050 --> 00:23:38.520 align:start position:0%
on that decide which regions are worth
evacuating<00:23:35.740><c> and</c><00:23:35.890><c> which</c><00:23:36.580><c> are</c><00:23:36.730><c> not</c><00:23:37.530><c> another</c>

00:23:38.520 --> 00:23:38.530 align:start position:0%
evacuating and which are not another
 

00:23:38.530 --> 00:23:40.830 align:start position:0%
evacuating and which are not another
interesting<00:23:39.040><c> fact</c><00:23:39.280><c> about</c><00:23:39.400><c> the</c><00:23:39.850><c> CC</c><00:23:40.360><c> algorithm</c>

00:23:40.830 --> 00:23:40.840 align:start position:0%
interesting fact about the CC algorithm
 

00:23:40.840 --> 00:23:43.890 align:start position:0%
interesting fact about the CC algorithm
is<00:23:41.020><c> that</c><00:23:41.050><c> it</c><00:23:41.770><c> during</c><00:23:42.610><c> a</c><00:23:42.670><c> GC</c><00:23:42.970><c> cycle</c><00:23:43.150><c> it</c><00:23:43.540><c> only</c>

00:23:43.890 --> 00:23:43.900 align:start position:0%
is that it during a GC cycle it only
 

00:23:43.900 --> 00:23:46.170 align:start position:0%
is that it during a GC cycle it only
goes<00:23:44.410><c> through</c><00:23:44.440><c> all</c><00:23:45.010><c> the</c><00:23:45.220><c> reachable</c><00:23:45.370><c> objects</c>

00:23:46.170 --> 00:23:46.180 align:start position:0%
goes through all the reachable objects
 

00:23:46.180 --> 00:23:52.130 align:start position:0%
goes through all the reachable objects
only<00:23:46.540><c> once</c><00:23:47.310><c> while</c><00:23:48.310><c> this</c><00:23:48.520><c> is</c><00:23:48.670><c> a</c><00:23:48.700><c> very</c><00:23:50.280><c> useful</c>

00:23:52.130 --> 00:23:52.140 align:start position:0%
only once while this is a very useful
 

00:23:52.140 --> 00:23:55.590 align:start position:0%
only once while this is a very useful
fact<00:23:53.140><c> about</c><00:23:53.410><c> any</c><00:23:53.650><c> GC</c><00:23:54.490><c> algorithm</c><00:23:54.940><c> because</c><00:23:55.330><c> it</c>

00:23:55.590 --> 00:23:55.600 align:start position:0%
fact about any GC algorithm because it
 

00:23:55.600 --> 00:23:58.770 align:start position:0%
fact about any GC algorithm because it
it<00:23:56.290><c> shows</c><00:23:56.590><c> how</c><00:23:56.800><c> efficient</c><00:23:57.790><c> the</c><00:23:57.940><c> algorithm</c><00:23:58.630><c> is</c>

00:23:58.770 --> 00:23:58.780 align:start position:0%
it shows how efficient the algorithm is
 

00:23:58.780 --> 00:24:01.380 align:start position:0%
it shows how efficient the algorithm is
let's<00:23:59.500><c> see</c><00:23:59.680><c> how</c><00:23:59.830><c> it</c><00:24:00.010><c> affects</c><00:24:00.340><c> the</c><00:24:00.670><c> heap</c>

00:24:01.380 --> 00:24:01.390 align:start position:0%
let's see how it affects the heap
 

00:24:01.390 --> 00:24:05.550 align:start position:0%
let's see how it affects the heap
compaction<00:24:02.160><c> decisions</c><00:24:03.160><c> that</c><00:24:03.340><c> we</c><00:24:03.490><c> make</c><00:24:04.560><c> so</c>

00:24:05.550 --> 00:24:05.560 align:start position:0%
compaction decisions that we make so
 

00:24:05.560 --> 00:24:07.980 align:start position:0%
compaction decisions that we make so
this<00:24:05.740><c> is</c><00:24:05.890><c> a</c><00:24:05.920><c> hypothetical</c><00:24:06.450><c> timeline</c><00:24:07.450><c> of</c><00:24:07.690><c> some</c>

00:24:07.980 --> 00:24:07.990 align:start position:0%
this is a hypothetical timeline of some
 

00:24:07.990 --> 00:24:11.400 align:start position:0%
this is a hypothetical timeline of some
Z<00:24:08.200><c> some</c><00:24:08.650><c> apps</c><00:24:08.860><c> execution</c><00:24:09.490><c> and</c><00:24:09.690><c> as</c><00:24:10.690><c> you</c><00:24:11.290><c> can</c>

00:24:11.400 --> 00:24:11.410 align:start position:0%
Z some apps execution and as you can
 

00:24:11.410 --> 00:24:13.040 align:start position:0%
Z some apps execution and as you can
imagine<00:24:11.560><c> during</c><00:24:12.010><c> the</c><00:24:12.250><c> execution</c>

00:24:13.040 --> 00:24:13.050 align:start position:0%
imagine during the execution
 

00:24:13.050 --> 00:24:15.210 align:start position:0%
imagine during the execution
periodically<00:24:14.050><c> we</c><00:24:14.200><c> need</c><00:24:14.350><c> to</c><00:24:14.470><c> perform</c><00:24:14.650><c> GC</c>

00:24:15.210 --> 00:24:15.220 align:start position:0%
periodically we need to perform GC
 

00:24:15.220 --> 00:24:17.190 align:start position:0%
periodically we need to perform GC
cycles<00:24:15.640><c> in</c><00:24:15.850><c> order</c><00:24:16.090><c> to</c><00:24:16.240><c> reclaim</c><00:24:16.510><c> memory</c><00:24:16.960><c> which</c>

00:24:17.190 --> 00:24:17.200 align:start position:0%
cycles in order to reclaim memory which
 

00:24:17.200 --> 00:24:19.230 align:start position:0%
cycles in order to reclaim memory which
is<00:24:17.350><c> consumed</c><00:24:17.770><c> by</c><00:24:17.800><c> unreachable</c><00:24:18.550><c> objects</c><00:24:19.030><c> so</c>

00:24:19.230 --> 00:24:19.240 align:start position:0%
is consumed by unreachable objects so
 

00:24:19.240 --> 00:24:22.140 align:start position:0%
is consumed by unreachable objects so
that<00:24:19.420><c> future</c><00:24:20.310><c> object</c><00:24:21.310><c> allocations</c><00:24:21.820><c> can</c><00:24:22.000><c> be</c>

00:24:22.140 --> 00:24:22.150 align:start position:0%
that future object allocations can be
 

00:24:22.150 --> 00:24:22.560 align:start position:0%
that future object allocations can be
served

00:24:22.560 --> 00:24:22.570 align:start position:0%
served
 

00:24:22.570 --> 00:24:26.400 align:start position:0%
served
and<00:24:22.860><c> since</c><00:24:24.160><c> CC</c><00:24:25.030><c> hill</c><00:24:25.270><c> Android</c><00:24:25.630><c> P</c><00:24:25.840><c> was</c><00:24:26.140><c> not</c>

00:24:26.400 --> 00:24:26.410 align:start position:0%
and since CC hill Android P was not
 

00:24:26.410 --> 00:24:29.490 align:start position:0%
and since CC hill Android P was not
generational<00:24:26.980><c> so</c><00:24:27.520><c> all</c><00:24:27.760><c> these</c><00:24:28.000><c> GC</c><00:24:28.420><c> cycles</c><00:24:28.840><c> work</c>

00:24:29.490 --> 00:24:29.500 align:start position:0%
generational so all these GC cycles work
 

00:24:29.500 --> 00:24:31.320 align:start position:0%
generational so all these GC cycles work
on<00:24:29.740><c> all</c><00:24:29.980><c> the</c><00:24:30.280><c> reachable</c><00:24:30.670><c> objects</c><00:24:31.060><c> and</c>

00:24:31.320 --> 00:24:31.330 align:start position:0%
on all the reachable objects and
 

00:24:31.330 --> 00:24:34.140 align:start position:0%
on all the reachable objects and
therefore<00:24:31.770><c> I'm</c><00:24:32.770><c> calling</c><00:24:33.250><c> them</c><00:24:33.400><c> full</c><00:24:33.640><c> heap</c><00:24:33.850><c> GC</c>

00:24:34.140 --> 00:24:34.150 align:start position:0%
therefore I'm calling them full heap GC
 

00:24:34.150 --> 00:24:37.320 align:start position:0%
therefore I'm calling them full heap GC
cycles<00:24:35.250><c> so</c><00:24:36.250><c> when</c><00:24:36.400><c> we</c><00:24:36.550><c> start</c><00:24:36.820><c> off</c><00:24:37.000><c> with</c><00:24:37.210><c> the</c>

00:24:37.320 --> 00:24:37.330 align:start position:0%
cycles so when we start off with the
 

00:24:37.330 --> 00:24:41.130 align:start position:0%
cycles so when we start off with the
first<00:24:37.510><c> GC</c><00:24:38.500><c> cycle</c><00:24:39.150><c> by</c><00:24:40.150><c> the</c><00:24:40.210><c> time</c><00:24:40.540><c> we</c><00:24:40.720><c> revisit</c>

00:24:41.130 --> 00:24:41.140 align:start position:0%
first GC cycle by the time we revisit
 

00:24:41.140 --> 00:24:43.440 align:start position:0%
first GC cycle by the time we revisit
all<00:24:41.320><c> the</c><00:24:41.470><c> reachable</c><00:24:41.590><c> objects</c><00:24:42.280><c> we</c><00:24:43.180><c> know</c>

00:24:43.440 --> 00:24:43.450 align:start position:0%
all the reachable objects we know
 

00:24:43.450 --> 00:24:46.050 align:start position:0%
all the reachable objects we know
precisely<00:24:44.140><c> which</c><00:24:44.650><c> region</c><00:24:45.190><c> has</c><00:24:45.400><c> how</c><00:24:45.640><c> many</c><00:24:45.820><c> live</c>

00:24:46.050 --> 00:24:46.060 align:start position:0%
precisely which region has how many live
 

00:24:46.060 --> 00:24:47.880 align:start position:0%
precisely which region has how many live
bytes<00:24:46.330><c> in</c><00:24:46.510><c> them</c><00:24:46.660><c> and</c><00:24:46.870><c> therefore</c><00:24:47.620><c> we</c><00:24:47.710><c> can</c>

00:24:47.880 --> 00:24:47.890 align:start position:0%
bytes in them and therefore we can
 

00:24:47.890 --> 00:24:49.380 align:start position:0%
bytes in them and therefore we can
gather<00:24:48.070><c> the</c><00:24:48.310><c> liveness</c><00:24:48.520><c> stats</c><00:24:48.910><c> that</c><00:24:49.060><c> I</c><00:24:49.120><c> talked</c>

00:24:49.380 --> 00:24:49.390 align:start position:0%
gather the liveness stats that I talked
 

00:24:49.390 --> 00:24:52.800 align:start position:0%
gather the liveness stats that I talked
about<00:24:49.510><c> in</c><00:24:49.780><c> the</c><00:24:49.870><c> previous</c><00:24:50.050><c> slide</c><00:24:51.300><c> as</c><00:24:52.300><c> a</c><00:24:52.420><c> time</c>

00:24:52.800 --> 00:24:52.810 align:start position:0%
about in the previous slide as a time
 

00:24:52.810 --> 00:24:53.280 align:start position:0%
about in the previous slide as a time
goes<00:24:53.020><c> by</c>

00:24:53.280 --> 00:24:53.290 align:start position:0%
goes by
 

00:24:53.290 --> 00:24:55.500 align:start position:0%
goes by
due<00:24:53.830><c> to</c><00:24:53.890><c> the</c><00:24:54.160><c> execution</c><00:24:54.910><c> of</c><00:24:55.030><c> application</c>

00:24:55.500 --> 00:24:55.510 align:start position:0%
due to the execution of application
 

00:24:55.510 --> 00:24:58.410 align:start position:0%
due to the execution of application
threads<00:24:55.810><c> the</c><00:24:56.200><c> Hume</c><00:24:56.470><c> you</c><00:24:56.650><c> tation</c><00:24:56.980><c> would</c><00:24:57.910><c> result</c>

00:24:58.410 --> 00:24:58.420 align:start position:0%
threads the Hume you tation would result
 

00:24:58.420 --> 00:24:59.410 align:start position:0%
threads the Hume you tation would result
in<00:24:58.720><c> more</c><00:24:58.960><c> of</c>

00:24:59.410 --> 00:24:59.420 align:start position:0%
in more of
 

00:24:59.420 --> 00:25:00.630 align:start position:0%
in more of
it's<00:24:59.510><c> becoming</c><00:24:59.810><c> unreachable</c><00:25:00.290><c> and</c>

00:25:00.630 --> 00:25:00.640 align:start position:0%
it's becoming unreachable and
 

00:25:00.640 --> 00:25:05.860 align:start position:0%
it's becoming unreachable and
unreachable<00:25:03.400><c> however</c><00:25:04.400><c> by</c><00:25:05.000><c> the</c><00:25:05.060><c> time</c><00:25:05.390><c> the</c><00:25:05.630><c> next</c>

00:25:05.860 --> 00:25:05.870 align:start position:0%
unreachable however by the time the next
 

00:25:05.870 --> 00:25:08.800 align:start position:0%
unreachable however by the time the next
DC<00:25:06.260><c> cycle</c><00:25:06.650><c> is</c><00:25:07.040><c> executed</c><00:25:07.820><c> where</c><00:25:08.360><c> you</c><00:25:08.630><c> would</c>

00:25:08.800 --> 00:25:08.810 align:start position:0%
DC cycle is executed where you would
 

00:25:08.810 --> 00:25:10.990 align:start position:0%
DC cycle is executed where you would
actually<00:25:09.050><c> use</c><00:25:09.320><c> the</c><00:25:09.860><c> stats</c><00:25:10.160><c> that</c><00:25:10.430><c> you</c><00:25:10.490><c> gathered</c>

00:25:10.990 --> 00:25:11.000 align:start position:0%
actually use the stats that you gathered
 

00:25:11.000 --> 00:25:14.530 align:start position:0%
actually use the stats that you gathered
in<00:25:11.180><c> the</c><00:25:11.270><c> previous</c><00:25:11.600><c> DC</c><00:25:11.870><c> cycle</c><00:25:12.880><c> those</c><00:25:13.880><c> Klieman</c>

00:25:14.530 --> 00:25:14.540 align:start position:0%
in the previous DC cycle those Klieman
 

00:25:14.540 --> 00:25:18.040 align:start position:0%
in the previous DC cycle those Klieman
stats<00:25:14.810><c> no</c><00:25:15.110><c> longer</c><00:25:15.470><c> show</c><00:25:16.250><c> you</c><00:25:16.310><c> the</c><00:25:17.050><c> the</c>

00:25:18.040 --> 00:25:18.050 align:start position:0%
stats no longer show you the the
 

00:25:18.050 --> 00:25:21.610 align:start position:0%
stats no longer show you the the
liveness<00:25:18.290><c> at</c><00:25:18.860><c> that</c><00:25:19.610><c> point</c><00:25:19.940><c> in</c><00:25:20.060><c> time</c><00:25:20.620><c> this</c>

00:25:21.610 --> 00:25:21.620 align:start position:0%
liveness at that point in time this
 

00:25:21.620 --> 00:25:23.950 align:start position:0%
liveness at that point in time this
leads<00:25:21.890><c> to</c><00:25:22.070><c> what</c><00:25:22.640><c> Roland</c><00:25:23.300><c> earlier</c><00:25:23.510><c> described</c>

00:25:23.950 --> 00:25:23.960 align:start position:0%
leads to what Roland earlier described
 

00:25:23.960 --> 00:25:26.680 align:start position:0%
leads to what Roland earlier described
floating<00:25:24.770><c> garbage</c><00:25:24.980><c> which</c><00:25:25.760><c> is</c><00:25:25.970><c> the</c>

00:25:26.680 --> 00:25:26.690 align:start position:0%
floating garbage which is the
 

00:25:26.690 --> 00:25:28.720 align:start position:0%
floating garbage which is the
unreachable<00:25:27.290><c> objects</c><00:25:27.860><c> that</c><00:25:28.220><c> the</c><00:25:28.520><c> garbage</c>

00:25:28.720 --> 00:25:28.730 align:start position:0%
unreachable objects that the garbage
 

00:25:28.730 --> 00:25:30.640 align:start position:0%
unreachable objects that the garbage
collector<00:25:29.270><c> knows</c><00:25:29.510><c> about</c><00:25:29.810><c> but</c><00:25:30.200><c> it</c><00:25:30.350><c> cannot</c>

00:25:30.640 --> 00:25:30.650 align:start position:0%
collector knows about but it cannot
 

00:25:30.650 --> 00:25:34.900 align:start position:0%
collector knows about but it cannot
collect<00:25:30.920><c> them</c><00:25:32.530><c> and</c><00:25:33.530><c> of</c><00:25:33.950><c> course</c><00:25:34.160><c> as</c><00:25:34.370><c> in</c><00:25:34.790><c> the</c>

00:25:34.900 --> 00:25:34.910 align:start position:0%
collect them and of course as in the
 

00:25:34.910 --> 00:25:37.120 align:start position:0%
collect them and of course as in the
previous<00:25:35.060><c> DC</c><00:25:35.390><c> cycle</c><00:25:35.870><c> by</c><00:25:36.260><c> the</c><00:25:36.320><c> end</c><00:25:36.530><c> of</c><00:25:36.680><c> this</c><00:25:36.830><c> GC</c>

00:25:37.120 --> 00:25:37.130 align:start position:0%
previous DC cycle by the end of this GC
 

00:25:37.130 --> 00:25:38.950 align:start position:0%
previous DC cycle by the end of this GC
cycle<00:25:37.310><c> also</c><00:25:37.670><c> since</c><00:25:38.450><c> we</c><00:25:38.600><c> have</c><00:25:38.750><c> gone</c><00:25:38.900><c> through</c>

00:25:38.950 --> 00:25:38.960 align:start position:0%
cycle also since we have gone through
 

00:25:38.960 --> 00:25:40.930 align:start position:0%
cycle also since we have gone through
all<00:25:39.350><c> the</c><00:25:39.530><c> live</c><00:25:39.710><c> objects</c><00:25:40.160><c> we</c><00:25:40.430><c> gather</c><00:25:40.670><c> the</c>

00:25:40.930 --> 00:25:40.940 align:start position:0%
all the live objects we gather the
 

00:25:40.940 --> 00:25:43.210 align:start position:0%
all the live objects we gather the
liveness<00:25:41.120><c> stats</c><00:25:41.570><c> which</c><00:25:42.290><c> then</c><00:25:42.530><c> are</c><00:25:42.740><c> used</c><00:25:42.980><c> in</c>

00:25:43.210 --> 00:25:43.220 align:start position:0%
liveness stats which then are used in
 

00:25:43.220 --> 00:25:45.330 align:start position:0%
liveness stats which then are used in
the<00:25:43.310><c> next</c><00:25:43.490><c> CC</c><00:25:43.820><c> cycle</c><00:25:44.210><c> and</c><00:25:44.420><c> this</c><00:25:44.570><c> goes</c><00:25:44.780><c> and</c><00:25:44.990><c> on</c>

00:25:45.330 --> 00:25:45.340 align:start position:0%
the next CC cycle and this goes and on
 

00:25:45.340 --> 00:25:48.010 align:start position:0%
the next CC cycle and this goes and on
this<00:25:46.340><c> is</c><00:25:46.490><c> how</c><00:25:46.610><c> decision-making</c><00:25:47.270><c> works</c><00:25:47.810><c> in</c>

00:25:48.010 --> 00:25:48.020 align:start position:0%
this is how decision-making works in
 

00:25:48.020 --> 00:25:49.900 align:start position:0%
this is how decision-making works in
Android<00:25:48.350><c> people</c><00:25:48.530><c> now</c><00:25:49.010><c> let's</c><00:25:49.310><c> see</c><00:25:49.520><c> how</c>

00:25:49.900 --> 00:25:49.910 align:start position:0%
Android people now let's see how
 

00:25:49.910 --> 00:25:51.780 align:start position:0%
Android people now let's see how
introducing<00:25:50.630><c> generations</c><00:25:51.200><c> into</c><00:25:51.410><c> this</c>

00:25:51.780 --> 00:25:51.790 align:start position:0%
introducing generations into this
 

00:25:51.790 --> 00:25:55.960 align:start position:0%
introducing generations into this
affects<00:25:52.790><c> the</c><00:25:54.130><c> the</c><00:25:55.130><c> decision-making</c><00:25:55.700><c> for</c>

00:25:55.960 --> 00:25:55.970 align:start position:0%
affects the the decision-making for
 

00:25:55.970 --> 00:25:59.530 align:start position:0%
affects the the decision-making for
region<00:25:56.390><c> selection</c><00:25:56.840><c> as</c><00:25:58.150><c> Roland</c><00:25:59.150><c> described</c>

00:25:59.530 --> 00:25:59.540 align:start position:0%
region selection as Roland described
 

00:25:59.540 --> 00:26:02.410 align:start position:0%
region selection as Roland described
earlier<00:25:59.720><c> the</c><00:26:00.170><c> benefits</c><00:26:01.160><c> of</c><00:26:01.340><c> generation</c><00:26:01.820><c> GC</c><00:26:02.180><c> is</c>

00:26:02.410 --> 00:26:02.420 align:start position:0%
earlier the benefits of generation GC is
 

00:26:02.420 --> 00:26:04.840 align:start position:0%
earlier the benefits of generation GC is
that<00:26:02.960><c> we</c><00:26:03.560><c> can</c><00:26:03.740><c> reduce</c><00:26:03.890><c> the</c><00:26:04.100><c> number</c><00:26:04.280><c> of</c><00:26:04.640><c> full</c>

00:26:04.840 --> 00:26:04.850 align:start position:0%
that we can reduce the number of full
 

00:26:04.850 --> 00:26:07.570 align:start position:0%
that we can reduce the number of full
heap<00:26:05.060><c> GC</c><00:26:05.450><c> cycles</c><00:26:05.930><c> by</c><00:26:06.680><c> replacing</c><00:26:07.370><c> them</c><00:26:07.550><c> with</c>

00:26:07.570 --> 00:26:07.580 align:start position:0%
heap GC cycles by replacing them with
 

00:26:07.580 --> 00:26:10.060 align:start position:0%
heap GC cycles by replacing them with
more<00:26:08.060><c> frequent</c><00:26:08.600><c> young</c><00:26:08.840><c> collections</c><00:26:09.350><c> which</c>

00:26:10.060 --> 00:26:10.070 align:start position:0%
more frequent young collections which
 

00:26:10.070 --> 00:26:11.590 align:start position:0%
more frequent young collections which
are<00:26:10.280><c> much</c><00:26:10.460><c> more</c><00:26:10.640><c> light</c><00:26:10.850><c> weighted</c><00:26:11.270><c> as</c><00:26:11.450><c> they</c>

00:26:11.590 --> 00:26:11.600 align:start position:0%
are much more light weighted as they
 

00:26:11.600 --> 00:26:13.570 align:start position:0%
are much more light weighted as they
only<00:26:11.720><c> work</c><00:26:12.050><c> on</c><00:26:12.170><c> young</c><00:26:12.650><c> objects</c><00:26:13.130><c> young</c>

00:26:13.570 --> 00:26:13.580 align:start position:0%
only work on young objects young
 

00:26:13.580 --> 00:26:17.020 align:start position:0%
only work on young objects young
reachable<00:26:14.000><c> objects</c><00:26:14.360><c> and</c><00:26:14.860><c> therefore</c><00:26:16.030><c> what</c>

00:26:17.020 --> 00:26:17.030 align:start position:0%
reachable objects and therefore what
 

00:26:17.030 --> 00:26:19.540 align:start position:0%
reachable objects and therefore what
this<00:26:17.210><c> leads</c><00:26:17.450><c> to</c><00:26:17.660><c> is</c><00:26:17.990><c> that</c><00:26:18.710><c> you</c><00:26:19.160><c> would</c><00:26:19.340><c> have</c>

00:26:19.540 --> 00:26:19.550 align:start position:0%
this leads to is that you would have
 

00:26:19.550 --> 00:26:22.540 align:start position:0%
this leads to is that you would have
lesser<00:26:19.880><c> G</c><00:26:20.210><c> full</c><00:26:20.510><c> heap</c><00:26:20.720><c> GC</c><00:26:21.080><c> cycles</c><00:26:21.530><c> but</c><00:26:22.310><c> also</c>

00:26:22.540 --> 00:26:22.550 align:start position:0%
lesser G full heap GC cycles but also
 

00:26:22.550 --> 00:26:25.090 align:start position:0%
lesser G full heap GC cycles but also
that<00:26:23.150><c> the</c><00:26:23.360><c> time</c><00:26:23.660><c> lag</c><00:26:23.930><c> between</c><00:26:23.960><c> two</c><00:26:24.560><c> full</c><00:26:24.890><c> heap</c>

00:26:25.090 --> 00:26:25.100 align:start position:0%
that the time lag between two full heap
 

00:26:25.100 --> 00:26:30.130 align:start position:0%
that the time lag between two full heap
GC<00:26:25.430><c> cycles</c><00:26:25.820><c> would</c><00:26:25.970><c> increase</c><00:26:26.330><c> and</c><00:26:28.120><c> so</c><00:26:29.140><c> given</c>

00:26:30.130 --> 00:26:30.140 align:start position:0%
GC cycles would increase and so given
 

00:26:30.140 --> 00:26:32.800 align:start position:0%
GC cycles would increase and so given
that<00:26:30.170><c> when</c><00:26:30.950><c> we</c><00:26:31.130><c> start</c><00:26:31.430><c> execution</c><00:26:31.970><c> the</c><00:26:32.540><c> first</c>

00:26:32.800 --> 00:26:32.810 align:start position:0%
that when we start execution the first
 

00:26:32.810 --> 00:26:35.470 align:start position:0%
that when we start execution the first
GC<00:26:33.410><c> cycle</c><00:26:33.590><c> being</c><00:26:34.070><c> full</c><00:26:34.310><c> heap</c><00:26:34.520><c> DC</c><00:26:34.760><c> cycle</c><00:26:35.180><c> we</c>

00:26:35.470 --> 00:26:35.480 align:start position:0%
GC cycle being full heap DC cycle we
 

00:26:35.480 --> 00:26:37.060 align:start position:0%
GC cycle being full heap DC cycle we
compute<00:26:35.930><c> the</c><00:26:36.080><c> liveness</c><00:26:36.290><c> stats</c><00:26:36.710><c> as</c><00:26:37.040><c> I</c>

00:26:37.060 --> 00:26:37.070 align:start position:0%
compute the liveness stats as I
 

00:26:37.070 --> 00:26:39.780 align:start position:0%
compute the liveness stats as I
described<00:26:37.610><c> in</c><00:26:37.790><c> the</c><00:26:37.820><c> previous</c><00:26:37.970><c> case</c><00:26:38.510><c> however</c>

00:26:39.780 --> 00:26:39.790 align:start position:0%
described in the previous case however
 

00:26:39.790 --> 00:26:43.270 align:start position:0%
described in the previous case however
every<00:26:40.790><c> time</c><00:26:40.820><c> when</c><00:26:41.390><c> we</c><00:26:41.600><c> perform</c><00:26:42.280><c> young</c>

00:26:43.270 --> 00:26:43.280 align:start position:0%
every time when we perform young
 

00:26:43.280 --> 00:26:45.610 align:start position:0%
every time when we perform young
collection<00:26:43.790><c> we</c><00:26:44.240><c> cannot</c><00:26:44.660><c> update</c><00:26:45.080><c> these</c><00:26:45.260><c> stats</c>

00:26:45.610 --> 00:26:45.620 align:start position:0%
collection we cannot update these stats
 

00:26:45.620 --> 00:26:48.310 align:start position:0%
collection we cannot update these stats
because<00:26:46.040><c> we</c><00:26:46.610><c> only</c><00:26:46.850><c> go</c><00:26:47.180><c> through</c><00:26:47.480><c> young</c><00:26:47.810><c> objects</c>

00:26:48.310 --> 00:26:48.320 align:start position:0%
because we only go through young objects
 

00:26:48.320 --> 00:26:51.310 align:start position:0%
because we only go through young objects
and<00:26:49.030><c> since</c><00:26:50.030><c> we</c><00:26:50.180><c> don't</c><00:26:50.420><c> go</c><00:26:50.630><c> through</c><00:26:50.870><c> all</c><00:26:51.080><c> the</c>

00:26:51.310 --> 00:26:51.320 align:start position:0%
and since we don't go through all the
 

00:26:51.320 --> 00:26:53.530 align:start position:0%
and since we don't go through all the
reachable<00:26:51.470><c> objects</c><00:26:52.190><c> it's</c><00:26:52.610><c> not</c><00:26:52.850><c> possible</c><00:26:53.330><c> to</c>

00:26:53.530 --> 00:26:53.540 align:start position:0%
reachable objects it's not possible to
 

00:26:53.540 --> 00:26:56.670 align:start position:0%
reachable objects it's not possible to
you<00:26:54.110><c> know</c><00:26:54.190><c> update</c><00:26:55.190><c> the</c><00:26:55.430><c> liveness</c><00:26:55.730><c> stats</c><00:26:56.150><c> and</c>

00:26:56.670 --> 00:26:56.680 align:start position:0%
you know update the liveness stats and
 

00:26:56.680 --> 00:26:59.980 align:start position:0%
you know update the liveness stats and
by<00:26:57.680><c> the</c><00:26:57.740><c> time</c><00:26:58.070><c> we</c><00:26:58.700><c> reach</c><00:26:58.910><c> the</c><00:26:59.270><c> next</c><00:26:59.480><c> full</c><00:26:59.810><c> heap</c>

00:26:59.980 --> 00:26:59.990 align:start position:0%
by the time we reach the next full heap
 

00:26:59.990 --> 00:27:01.900 align:start position:0%
by the time we reach the next full heap
GC<00:27:00.290><c> cycle</c><00:27:00.440><c> where</c><00:27:00.860><c> we</c><00:27:00.890><c> actually</c><00:27:01.520><c> use</c><00:27:01.730><c> the</c>

00:27:01.900 --> 00:27:01.910 align:start position:0%
GC cycle where we actually use the
 

00:27:01.910 --> 00:27:04.420 align:start position:0%
GC cycle where we actually use the
lioness<00:27:02.300><c> stats</c><00:27:02.540><c> they</c><00:27:03.500><c> become</c><00:27:03.920><c> much</c><00:27:04.160><c> more</c>

00:27:04.420 --> 00:27:04.430 align:start position:0%
lioness stats they become much more
 

00:27:04.430 --> 00:27:06.580 align:start position:0%
lioness stats they become much more
stale<00:27:04.820><c> than</c><00:27:05.360><c> what</c><00:27:05.810><c> it</c><00:27:06.020><c> would</c><00:27:06.170><c> have</c><00:27:06.230><c> happened</c>

00:27:06.580 --> 00:27:06.590 align:start position:0%
stale than what it would have happened
 

00:27:06.590 --> 00:27:09.540 align:start position:0%
stale than what it would have happened
in<00:27:06.950><c> case</c><00:27:07.190><c> of</c><00:27:07.400><c> Android</c><00:27:07.850><c> B</c><00:27:08.150><c> or</c><00:27:08.360><c> earlier</c><00:27:08.690><c> and</c>

00:27:09.540 --> 00:27:09.550 align:start position:0%
in case of Android B or earlier and
 

00:27:09.550 --> 00:27:12.880 align:start position:0%
in case of Android B or earlier and
therefore<00:27:10.550><c> it</c><00:27:10.670><c> leads</c><00:27:11.390><c> to</c><00:27:11.500><c> larger</c><00:27:12.500><c> amount</c><00:27:12.770><c> of</c>

00:27:12.880 --> 00:27:12.890 align:start position:0%
therefore it leads to larger amount of
 

00:27:12.890 --> 00:27:13.120 align:start position:0%
therefore it leads to larger amount of
flow

00:27:13.120 --> 00:27:13.130 align:start position:0%
flow
 

00:27:13.130 --> 00:27:17.400 align:start position:0%
flow
in<00:27:13.250><c> garbage</c><00:27:14.020><c> and</c><00:27:15.190><c> this</c><00:27:16.190><c> goes</c><00:27:16.400><c> on</c><00:27:16.430><c> on</c><00:27:16.730><c> and</c><00:27:16.910><c> on</c>

00:27:17.400 --> 00:27:17.410 align:start position:0%
in garbage and this goes on on and on
 

00:27:17.410 --> 00:27:20.500 align:start position:0%
in garbage and this goes on on and on
given<00:27:18.410><c> the</c><00:27:18.530><c> limited</c><00:27:18.920><c> availability</c><00:27:19.100><c> of</c><00:27:19.790><c> memory</c>

00:27:20.500 --> 00:27:20.510 align:start position:0%
given the limited availability of memory
 

00:27:20.510 --> 00:27:23.650 align:start position:0%
given the limited availability of memory
on<00:27:20.780><c> you</c><00:27:21.110><c> know</c><00:27:21.260><c> for</c><00:27:21.800><c> mobile</c><00:27:22.190><c> devices</c><00:27:22.700><c> it</c><00:27:23.300><c> makes</c>

00:27:23.650 --> 00:27:23.660 align:start position:0%
on you know for mobile devices it makes
 

00:27:23.660 --> 00:27:27.040 align:start position:0%
on you know for mobile devices it makes
sense<00:27:23.990><c> to</c><00:27:25.210><c> ensure</c><00:27:26.210><c> that</c><00:27:26.390><c> this</c><00:27:26.840><c> floating</c>

00:27:27.040 --> 00:27:27.050 align:start position:0%
sense to ensure that this floating
 

00:27:27.050 --> 00:27:30.400 align:start position:0%
sense to ensure that this floating
garbage<00:27:27.350><c> is</c><00:27:27.650><c> minimally</c><00:27:28.130><c> and</c><00:27:29.050><c> and</c><00:27:30.050><c> the</c><00:27:30.230><c> cause</c>

00:27:30.400 --> 00:27:30.410 align:start position:0%
garbage is minimally and and the cause
 

00:27:30.410 --> 00:27:33.010 align:start position:0%
garbage is minimally and and the cause
of<00:27:30.440><c> that</c><00:27:30.800><c> we</c><00:27:31.040><c> identified</c><00:27:31.610><c> is</c><00:27:31.880><c> clear</c><00:27:32.390><c> that</c><00:27:32.780><c> the</c>

00:27:33.010 --> 00:27:33.020 align:start position:0%
of that we identified is clear that the
 

00:27:33.020 --> 00:27:35.710 align:start position:0%
of that we identified is clear that the
outer<00:27:33.190><c> outdated</c><00:27:34.190><c> liveness</c><00:27:34.400><c> stats</c><00:27:34.940><c> is</c><00:27:35.240><c> what</c><00:27:35.570><c> is</c>

00:27:35.710 --> 00:27:35.720 align:start position:0%
outer outdated liveness stats is what is
 

00:27:35.720 --> 00:27:40.000 align:start position:0%
outer outdated liveness stats is what is
hurting<00:27:36.020><c> us</c><00:27:37.030><c> so</c><00:27:38.030><c> we</c><00:27:38.840><c> fix</c><00:27:39.080><c> the</c><00:27:39.260><c> issue</c><00:27:39.380><c> by</c>

00:27:40.000 --> 00:27:40.010 align:start position:0%
hurting us so we fix the issue by
 

00:27:40.010 --> 00:27:42.910 align:start position:0%
hurting us so we fix the issue by
improving<00:27:40.520><c> the</c><00:27:40.820><c> heap</c><00:27:41.510><c> compaction</c><00:27:42.080><c> by</c>

00:27:42.910 --> 00:27:42.920 align:start position:0%
improving the heap compaction by
 

00:27:42.920 --> 00:27:46.060 align:start position:0%
improving the heap compaction by
replacing<00:27:43.400><c> the</c><00:27:43.820><c> full</c><00:27:44.060><c> heap</c><00:27:44.300><c> GC</c><00:27:44.750><c> cycle</c><00:27:45.070><c> with</c>

00:27:46.060 --> 00:27:46.070 align:start position:0%
replacing the full heap GC cycle with
 

00:27:46.070 --> 00:27:48.490 align:start position:0%
replacing the full heap GC cycle with
another<00:27:47.000><c> algorithm</c><00:27:47.570><c> which</c><00:27:47.750><c> you</c><00:27:47.930><c> which</c><00:27:48.260><c> is</c>

00:27:48.490 --> 00:27:48.500 align:start position:0%
another algorithm which you which is
 

00:27:48.500 --> 00:27:50.980 align:start position:0%
another algorithm which you which is
two-faced<00:27:49.070><c> where</c><00:27:49.940><c> the</c><00:27:50.210><c> first</c><00:27:50.480><c> phase</c><00:27:50.720><c> would</c>

00:27:50.980 --> 00:27:50.990 align:start position:0%
two-faced where the first phase would
 

00:27:50.990 --> 00:27:54.450 align:start position:0%
two-faced where the first phase would
trace<00:27:51.740><c> all</c><00:27:52.010><c> the</c><00:27:52.310><c> life</c><00:27:52.520><c> reachable</c><00:27:53.510><c> objects</c><00:27:54.020><c> and</c>

00:27:54.450 --> 00:27:54.460 align:start position:0%
trace all the life reachable objects and
 

00:27:54.460 --> 00:27:57.640 align:start position:0%
trace all the life reachable objects and
compute<00:27:55.460><c> the</c><00:27:55.580><c> liveness</c><00:27:55.790><c> stats</c><00:27:56.270><c> and</c><00:27:56.570><c> then</c><00:27:57.380><c> the</c>

00:27:57.640 --> 00:27:57.650 align:start position:0%
compute the liveness stats and then the
 

00:27:57.650 --> 00:27:59.860 align:start position:0%
compute the liveness stats and then the
second<00:27:58.070><c> phase</c><00:27:58.220><c> based</c><00:27:58.730><c> on</c><00:27:58.970><c> these</c><00:27:59.120><c> up-to-date</c>

00:27:59.860 --> 00:27:59.870 align:start position:0%
second phase based on these up-to-date
 

00:27:59.870 --> 00:28:02.830 align:start position:0%
second phase based on these up-to-date
liveness<00:28:00.170><c> stats</c><00:28:00.940><c> figures</c><00:28:01.940><c> out</c><00:28:02.120><c> feed</c><00:28:02.480><c> region</c>

00:28:02.830 --> 00:28:02.840 align:start position:0%
liveness stats figures out feed region
 

00:28:02.840 --> 00:28:04.870 align:start position:0%
liveness stats figures out feed region
which<00:28:03.140><c> regions</c><00:28:03.620><c> deserve</c><00:28:04.070><c> to</c><00:28:04.250><c> be</c><00:28:04.370><c> compacted</c>

00:28:04.870 --> 00:28:04.880 align:start position:0%
which regions deserve to be compacted
 

00:28:04.880 --> 00:28:07.690 align:start position:0%
which regions deserve to be compacted
and<00:28:05.090><c> then</c><00:28:05.300><c> performs</c><00:28:05.690><c> compaction</c><00:28:06.490><c> this</c><00:28:07.490><c> way</c>

00:28:07.690 --> 00:28:07.700 align:start position:0%
and then performs compaction this way
 

00:28:07.700 --> 00:28:10.690 align:start position:0%
and then performs compaction this way
very<00:28:08.390><c> both</c><00:28:08.780><c> the</c><00:28:08.930><c> benefits</c><00:28:09.530><c> of</c><00:28:09.740><c> generations</c><00:28:10.340><c> GC</c>

00:28:10.690 --> 00:28:10.700 align:start position:0%
very both the benefits of generations GC
 

00:28:10.700 --> 00:28:12.790 align:start position:0%
very both the benefits of generations GC
by<00:28:11.360><c> ensuring</c><00:28:11.870><c> that</c><00:28:11.930><c> young</c><00:28:12.320><c> collection</c>

00:28:12.790 --> 00:28:12.800 align:start position:0%
by ensuring that young collection
 

00:28:12.800 --> 00:28:15.820 align:start position:0%
by ensuring that young collection
remains<00:28:13.160><c> as</c><00:28:13.400><c> it</c><00:28:13.580><c> is</c><00:28:13.640><c> as</c><00:28:14.180><c> well</c><00:28:15.020><c> as</c><00:28:15.200><c> we</c><00:28:15.500><c> fix</c><00:28:15.680><c> the</c>

00:28:15.820 --> 00:28:15.830 align:start position:0%
remains as it is as well as we fix the
 

00:28:15.830 --> 00:28:20.230 align:start position:0%
remains as it is as well as we fix the
problem<00:28:16.190><c> of</c><00:28:16.310><c> outdated</c><00:28:16.820><c> lamina</c><00:28:17.360><c> stats</c><00:28:19.240><c> let's</c>

00:28:20.230 --> 00:28:20.240 align:start position:0%
problem of outdated lamina stats let's
 

00:28:20.240 --> 00:28:22.540 align:start position:0%
problem of outdated lamina stats let's
see<00:28:20.450><c> using</c><00:28:21.200><c> the</c><00:28:21.320><c> same</c><00:28:21.500><c> example</c><00:28:21.830><c> that</c><00:28:22.010><c> rollin</c>

00:28:22.540 --> 00:28:22.550 align:start position:0%
see using the same example that rollin
 

00:28:22.550 --> 00:28:25.480 align:start position:0%
see using the same example that rollin
was<00:28:22.760><c> earlier</c><00:28:23.060><c> using</c><00:28:23.450><c> how</c><00:28:24.170><c> this</c><00:28:24.890><c> new</c><00:28:25.160><c> algorithm</c>

00:28:25.480 --> 00:28:25.490 align:start position:0%
was earlier using how this new algorithm
 

00:28:25.490 --> 00:28:29.410 align:start position:0%
was earlier using how this new algorithm
works<00:28:25.910><c> so</c><00:28:26.660><c> let's</c><00:28:27.200><c> for</c><00:28:27.500><c> let's</c><00:28:28.220><c> assume</c><00:28:28.700><c> that</c><00:28:28.760><c> our</c>

00:28:29.410 --> 00:28:29.420 align:start position:0%
works so let's for let's assume that our
 

00:28:29.420 --> 00:28:31.960 align:start position:0%
works so let's for let's assume that our
evacuation<00:28:29.840><c> criteria</c><00:28:30.800><c> criteria</c><00:28:31.640><c> for</c><00:28:31.820><c> any</c>

00:28:31.960 --> 00:28:31.970 align:start position:0%
evacuation criteria criteria for any
 

00:28:31.970 --> 00:28:35.020 align:start position:0%
evacuation criteria criteria for any
region<00:28:32.450><c> is</c><00:28:32.690><c> that</c><00:28:33.410><c> if</c><00:28:33.830><c> it</c><00:28:33.980><c> has</c><00:28:34.190><c> less</c><00:28:34.550><c> than</c><00:28:34.580><c> three</c>

00:28:35.020 --> 00:28:35.030 align:start position:0%
region is that if it has less than three
 

00:28:35.030 --> 00:28:37.390 align:start position:0%
region is that if it has less than three
live<00:28:35.330><c> objects</c><00:28:35.750><c> in</c><00:28:35.900><c> it</c><00:28:36.050><c> then</c><00:28:36.770><c> it</c><00:28:36.950><c> deserves</c><00:28:37.310><c> to</c>

00:28:37.390 --> 00:28:37.400 align:start position:0%
live objects in it then it deserves to
 

00:28:37.400 --> 00:28:40.630 align:start position:0%
live objects in it then it deserves to
be<00:28:37.490><c> compacted</c><00:28:38.060><c> so</c><00:28:38.930><c> in</c><00:28:39.050><c> this</c><00:28:39.170><c> example</c><00:28:39.380><c> as</c><00:28:39.920><c> you</c>

00:28:40.630 --> 00:28:40.640 align:start position:0%
be compacted so in this example as you
 

00:28:40.640 --> 00:28:43.150 align:start position:0%
be compacted so in this example as you
can<00:28:40.820><c> see</c><00:28:41.060><c> that</c><00:28:41.750><c> all</c><00:28:41.960><c> the</c><00:28:42.140><c> four</c><00:28:42.380><c> regions</c><00:28:42.800><c> which</c>

00:28:43.150 --> 00:28:43.160 align:start position:0%
can see that all the four regions which
 

00:28:43.160 --> 00:28:45.370 align:start position:0%
can see that all the four regions which
are<00:28:43.340><c> in</c><00:28:43.520><c> use</c><00:28:43.730><c> they</c><00:28:44.360><c> have</c><00:28:44.390><c> less</c><00:28:44.810><c> than</c><00:28:44.990><c> three</c>

00:28:45.370 --> 00:28:45.380 align:start position:0%
are in use they have less than three
 

00:28:45.380 --> 00:28:48.850 align:start position:0%
are in use they have less than three
live<00:28:46.220><c> objects</c><00:28:46.610><c> in</c><00:28:46.730><c> them</c><00:28:47.140><c> so</c><00:28:48.140><c> by</c><00:28:48.290><c> the</c><00:28:48.350><c> time</c><00:28:48.650><c> we</c>

00:28:48.850 --> 00:28:48.860 align:start position:0%
live objects in them so by the time we
 

00:28:48.860 --> 00:28:50.830 align:start position:0%
live objects in them so by the time we
finish<00:28:49.190><c> the</c><00:28:49.340><c> first</c><00:28:49.520><c> phase</c><00:28:49.850><c> which</c><00:28:50.600><c> goes</c>

00:28:50.830 --> 00:28:50.840 align:start position:0%
finish the first phase which goes
 

00:28:50.840 --> 00:28:53.020 align:start position:0%
finish the first phase which goes
through<00:28:50.870><c> all</c><00:28:51.110><c> the</c><00:28:51.320><c> reachable</c><00:28:51.470><c> objects</c><00:28:52.070><c> we</c>

00:28:53.020 --> 00:28:53.030 align:start position:0%
through all the reachable objects we
 

00:28:53.030 --> 00:28:55.480 align:start position:0%
through all the reachable objects we
have<00:28:53.360><c> determined</c><00:28:53.960><c> that</c><00:28:54.230><c> all</c><00:28:55.070><c> the</c><00:28:55.280><c> four</c>

00:28:55.480 --> 00:28:55.490 align:start position:0%
have determined that all the four
 

00:28:55.490 --> 00:28:58.480 align:start position:0%
have determined that all the four
regions<00:28:55.880><c> have</c><00:28:56.810><c> the</c><00:28:57.140><c> liveness</c><00:28:57.320><c> stats</c><00:28:57.830><c> less</c>

00:28:58.480 --> 00:28:58.490 align:start position:0%
regions have the liveness stats less
 

00:28:58.490 --> 00:29:01.060 align:start position:0%
regions have the liveness stats less
than<00:28:58.790><c> three</c><00:28:59.240><c> objects</c><00:28:59.780><c> and</c><00:28:59.930><c> therefore</c><00:29:00.620><c> they</c>

00:29:01.060 --> 00:29:01.070 align:start position:0%
than three objects and therefore they
 

00:29:01.070 --> 00:29:04.180 align:start position:0%
than three objects and therefore they
deserve<00:29:01.430><c> to</c><00:29:01.460><c> be</c><00:29:01.900><c> evacuated</c><00:29:02.900><c> and</c><00:29:03.110><c> by</c><00:29:03.830><c> the</c><00:29:03.920><c> time</c>

00:29:04.180 --> 00:29:04.190 align:start position:0%
deserve to be evacuated and by the time
 

00:29:04.190 --> 00:29:06.640 align:start position:0%
deserve to be evacuated and by the time
we<00:29:04.340><c> finish</c><00:29:04.640><c> our</c><00:29:04.790><c> fully</c><00:29:05.030><c> DC</c><00:29:05.420><c> cycle</c><00:29:05.780><c> we</c><00:29:06.290><c> managed</c>

00:29:06.640 --> 00:29:06.650 align:start position:0%
we finish our fully DC cycle we managed
 

00:29:06.650 --> 00:29:08.530 align:start position:0%
we finish our fully DC cycle we managed
to<00:29:06.800><c> move</c><00:29:06.950><c> all</c><00:29:07.190><c> of</c><00:29:07.340><c> them</c><00:29:07.520><c> into</c><00:29:07.730><c> a</c><00:29:07.850><c> single</c><00:29:08.090><c> region</c>

00:29:08.530 --> 00:29:08.540 align:start position:0%
to move all of them into a single region
 

00:29:08.540 --> 00:29:10.270 align:start position:0%
to move all of them into a single region
thereby<00:29:09.050><c> reclaiming</c><00:29:09.530><c> all</c><00:29:09.860><c> the</c><00:29:10.040><c> four</c>

00:29:10.270 --> 00:29:10.280 align:start position:0%
thereby reclaiming all the four
 

00:29:10.280 --> 00:29:14.700 align:start position:0%
thereby reclaiming all the four
previously<00:29:10.820><c> used</c><00:29:11.090><c> regions</c><00:29:11.480><c> back</c><00:29:13.360><c> coming</c><00:29:14.360><c> to</c>

00:29:14.700 --> 00:29:14.710 align:start position:0%
previously used regions back coming to
 

00:29:14.710 --> 00:29:18.430 align:start position:0%
previously used regions back coming to
what<00:29:15.710><c> should</c><00:29:16.010><c> it</c><00:29:16.190><c> lead</c><00:29:16.430><c> to</c><00:29:16.670><c> the</c><00:29:16.850><c> in</c><00:29:17.720><c> in</c><00:29:18.170><c> terms</c>

00:29:18.430 --> 00:29:18.440 align:start position:0%
what should it lead to the in in terms
 

00:29:18.440 --> 00:29:21.130 align:start position:0%
what should it lead to the in in terms
of<00:29:18.590><c> improvement</c><00:29:19.130><c> the</c><00:29:20.030><c> direct</c><00:29:20.450><c> improvement</c><00:29:21.020><c> of</c>

00:29:21.130 --> 00:29:21.140 align:start position:0%
of improvement the direct improvement of
 

00:29:21.140 --> 00:29:23.290 align:start position:0%
of improvement the direct improvement of
this<00:29:21.380><c> change</c><00:29:21.680><c> is</c><00:29:21.980><c> that</c><00:29:22.340><c> after</c><00:29:22.730><c> every</c><00:29:23.090><c> full</c>

00:29:23.290 --> 00:29:23.300 align:start position:0%
this change is that after every full
 

00:29:23.300 --> 00:29:26.380 align:start position:0%
this change is that after every full
heap<00:29:23.480><c> GC</c><00:29:23.810><c> cycle</c><00:29:23.990><c> we</c><00:29:24.800><c> should</c><00:29:25.010><c> be</c>

00:29:26.380 --> 00:29:26.390 align:start position:0%
heap GC cycle we should be
 

00:29:26.390 --> 00:29:29.020 align:start position:0%
heap GC cycle we should be
collecting<00:29:26.720><c> more</c><00:29:26.930><c> free</c><00:29:27.320><c> bytes</c><00:29:27.800><c> BRAC</c><00:29:28.730><c> back</c>

00:29:29.020 --> 00:29:29.030 align:start position:0%
collecting more free bytes BRAC back
 

00:29:29.030 --> 00:29:31.780 align:start position:0%
collecting more free bytes BRAC back
from<00:29:29.270><c> the</c><00:29:29.450><c> garbage</c><00:29:30.350><c> collector</c><00:29:30.680><c> and</c><00:29:30.920><c> to</c>

00:29:31.780 --> 00:29:31.790 align:start position:0%
from the garbage collector and to
 

00:29:31.790 --> 00:29:33.640 align:start position:0%
from the garbage collector and to
measure<00:29:32.000><c> that</c><00:29:32.270><c> we</c><00:29:32.630><c> use</c><00:29:32.660><c> the</c><00:29:33.080><c> same</c><00:29:33.290><c> set</c><00:29:33.530><c> of</c>

00:29:33.640 --> 00:29:33.650 align:start position:0%
measure that we use the same set of
 

00:29:33.650 --> 00:29:35.620 align:start position:0%
measure that we use the same set of
applications<00:29:34.310><c> and</c><00:29:34.580><c> benchmark</c><00:29:35.030><c> that</c><00:29:35.090><c> Roland</c>

00:29:35.620 --> 00:29:35.630 align:start position:0%
applications and benchmark that Roland
 

00:29:35.630 --> 00:29:37.720 align:start position:0%
applications and benchmark that Roland
is<00:29:35.750><c> earlier</c><00:29:36.050><c> described</c><00:29:36.440><c> and</c><00:29:36.710><c> as</c><00:29:37.430><c> you</c><00:29:37.550><c> can</c><00:29:37.670><c> see</c>

00:29:37.720 --> 00:29:37.730 align:start position:0%
is earlier described and as you can see
 

00:29:37.730 --> 00:29:40.840 align:start position:0%
is earlier described and as you can see
that<00:29:38.240><c> 4-h</c><00:29:38.870><c> to</c><00:29:38.900><c> the</c><00:29:39.830><c> average</c><00:29:40.310><c> freed</c><00:29:40.580><c> bytes</c>

00:29:40.840 --> 00:29:40.850 align:start position:0%
that 4-h to the average freed bytes
 

00:29:40.850 --> 00:29:42.940 align:start position:0%
that 4-h to the average freed bytes
improved<00:29:41.480><c> by</c><00:29:42.080><c> more</c><00:29:42.350><c> than</c><00:29:42.530><c> one</c><00:29:42.620><c> hundred</c><00:29:42.860><c> and</c>

00:29:42.940 --> 00:29:42.950 align:start position:0%
improved by more than one hundred and
 

00:29:42.950 --> 00:29:45.130 align:start position:0%
improved by more than one hundred and
seventy<00:29:43.310><c> eight</c><00:29:43.340><c> percent</c><00:29:43.750><c> whereas</c><00:29:44.750><c> four</c>

00:29:45.130 --> 00:29:45.140 align:start position:0%
seventy eight percent whereas four
 

00:29:45.140 --> 00:29:46.690 align:start position:0%
seventy eight percent whereas four
sheets<00:29:45.380><c> it</c><00:29:45.620><c> improved</c><00:29:45.980><c> by</c><00:29:46.190><c> sixty</c><00:29:46.580><c> eight</c>

00:29:46.690 --> 00:29:46.700 align:start position:0%
sheets it improved by sixty eight
 

00:29:46.700 --> 00:29:51.760 align:start position:0%
sheets it improved by sixty eight
percent<00:29:47.380><c> that's</c><00:29:48.380><c> pretty</c><00:29:48.500><c> good</c><00:29:50.200><c> in</c><00:29:51.200><c> terms</c><00:29:51.530><c> of</c>

00:29:51.760 --> 00:29:51.770 align:start position:0%
percent that's pretty good in terms of
 

00:29:51.770 --> 00:29:54.190 align:start position:0%
percent that's pretty good in terms of
impact<00:29:52.340><c> of</c><00:29:52.640><c> all</c><00:29:53.120><c> the</c><00:29:53.480><c> both</c><00:29:53.690><c> the</c><00:29:53.870><c> DC</c>

00:29:54.190 --> 00:29:54.200 align:start position:0%
impact of all the both the DC
 

00:29:54.200 --> 00:29:56.140 align:start position:0%
impact of all the both the DC
improvements<00:29:54.860><c> that</c><00:29:55.040><c> Roland</c><00:29:55.610><c> and</c><00:29:55.760><c> I</c><00:29:55.880><c> talked</c>

00:29:56.140 --> 00:29:56.150 align:start position:0%
improvements that Roland and I talked
 

00:29:56.150 --> 00:29:59.280 align:start position:0%
improvements that Roland and I talked
about<00:29:56.450><c> on</c><00:29:56.750><c> the</c><00:29:57.350><c> overall</c><00:29:57.710><c> improvement</c><00:29:58.100><c> on</c><00:29:58.580><c> the</c>

00:29:59.280 --> 00:29:59.290 align:start position:0%
about on the overall improvement on the
 

00:29:59.290 --> 00:30:02.860 align:start position:0%
about on the overall improvement on the
benchmark<00:30:00.290><c> score</c><00:30:01.030><c> we</c><00:30:02.030><c> again</c><00:30:02.360><c> ran</c><00:30:02.630><c> some</c>

00:30:02.860 --> 00:30:02.870 align:start position:0%
benchmark score we again ran some
 

00:30:02.870 --> 00:30:06.520 align:start position:0%
benchmark score we again ran some
benchmarks<00:30:03.620><c> and</c><00:30:04.030><c> we</c><00:30:05.030><c> observed</c><00:30:05.480><c> that</c><00:30:05.630><c> 4-h</c><00:30:06.500><c> to</c>

00:30:06.520 --> 00:30:06.530 align:start position:0%
benchmarks and we observed that 4-h to
 

00:30:06.530 --> 00:30:10.320 align:start position:0%
benchmarks and we observed that 4-h to
the<00:30:07.240><c> the</c><00:30:08.240><c> spore</c><00:30:08.690><c> improved</c><00:30:09.140><c> by</c><00:30:09.380><c> more</c><00:30:09.710><c> than</c><00:30:09.860><c> 15%</c>

00:30:10.320 --> 00:30:10.330 align:start position:0%
the the spore improved by more than 15%
 

00:30:10.330 --> 00:30:13.630 align:start position:0%
the the spore improved by more than 15%
for<00:30:11.330><c> both</c><00:30:11.480><c> arm</c><00:30:11.780><c> and</c><00:30:11.960><c> I'm</c><00:30:12.050><c> 64</c><00:30:12.620><c> whereas</c><00:30:13.430><c> four</c>

00:30:13.630 --> 00:30:13.640 align:start position:0%
for both arm and I'm 64 whereas four
 

00:30:13.640 --> 00:30:16.260 align:start position:0%
for both arm and I'm 64 whereas four
sheets<00:30:13.850><c> is</c><00:30:14.030><c> improved</c><00:30:14.390><c> by</c><00:30:14.540><c> more</c><00:30:14.720><c> than</c><00:30:14.900><c> 5%</c>

00:30:16.260 --> 00:30:16.270 align:start position:0%
sheets is improved by more than 5%
 

00:30:16.270 --> 00:30:19.240 align:start position:0%
sheets is improved by more than 5%
all<00:30:17.270><c> right</c><00:30:17.720><c> enough</c><00:30:18.530><c> dragging</c><00:30:18.950><c> about</c>

00:30:19.240 --> 00:30:19.250 align:start position:0%
all right enough dragging about
 

00:30:19.250 --> 00:30:21.820 align:start position:0%
all right enough dragging about
improvements<00:30:19.970><c> in</c><00:30:20.060><c> you</c><00:30:20.240><c> let</c><00:30:20.930><c> me</c><00:30:21.110><c> touch</c><00:30:21.560><c> about</c>

00:30:21.820 --> 00:30:21.830 align:start position:0%
improvements in you let me touch about
 

00:30:21.830 --> 00:30:24.130 align:start position:0%
improvements in you let me touch about
touch<00:30:22.220><c> a</c><00:30:22.460><c> different</c><00:30:22.850><c> operator</c><00:30:23.180><c> let's</c><00:30:23.930><c> talk</c>

00:30:24.130 --> 00:30:24.140 align:start position:0%
touch a different operator let's talk
 

00:30:24.140 --> 00:30:26.740 align:start position:0%
touch a different operator let's talk
about<00:30:24.260><c> object</c><00:30:24.830><c> allocation</c><00:30:25.370><c> and</c><00:30:25.750><c> object</c>

00:30:26.740 --> 00:30:26.750 align:start position:0%
about object allocation and object
 

00:30:26.750 --> 00:30:30.070 align:start position:0%
about object allocation and object
pooling<00:30:26.930><c> before</c><00:30:27.650><c> I</c><00:30:27.680><c> conclude</c><00:30:27.950><c> I'm</c><00:30:28.730><c> sure</c><00:30:29.390><c> many</c>

00:30:30.070 --> 00:30:30.080 align:start position:0%
pooling before I conclude I'm sure many
 

00:30:30.080 --> 00:30:32.170 align:start position:0%
pooling before I conclude I'm sure many
of<00:30:30.290><c> you</c><00:30:30.470><c> must</c><00:30:30.620><c> have</c><00:30:30.830><c> experienced</c><00:30:31.370><c> this</c><00:30:31.460><c> you</c>

00:30:32.170 --> 00:30:32.180 align:start position:0%
of you must have experienced this you
 

00:30:32.180 --> 00:30:35.530 align:start position:0%
of you must have experienced this you
start<00:30:32.480><c> writing</c><00:30:32.810><c> an</c><00:30:33.080><c> app</c><00:30:33.410><c> and</c><00:30:34.150><c> with</c><00:30:35.150><c> standard</c>

00:30:35.530 --> 00:30:35.540 align:start position:0%
start writing an app and with standard
 

00:30:35.540 --> 00:30:37.240 align:start position:0%
start writing an app and with standard
object<00:30:35.870><c> allocation</c><00:30:36.350><c> you</c><00:30:36.530><c> know</c><00:30:36.650><c> simple</c><00:30:37.130><c> way</c>

00:30:37.240 --> 00:30:37.250 align:start position:0%
object allocation you know simple way
 

00:30:37.250 --> 00:30:40.030 align:start position:0%
object allocation you know simple way
using<00:30:37.640><c> new</c><00:30:37.910><c> operator</c><00:30:38.110><c> but</c><00:30:39.110><c> as</c><00:30:39.290><c> it</c><00:30:39.530><c> blows</c><00:30:39.770><c> more</c>

00:30:40.030 --> 00:30:40.040 align:start position:0%
using new operator but as it blows more
 

00:30:40.040 --> 00:30:42.820 align:start position:0%
using new operator but as it blows more
and<00:30:40.280><c> more</c><00:30:40.430><c> you</c><00:30:41.150><c> start</c><00:30:41.510><c> either</c><00:30:41.810><c> observing</c><00:30:42.500><c> that</c>

00:30:42.820 --> 00:30:42.830 align:start position:0%
and more you start either observing that
 

00:30:42.830 --> 00:30:45.130 align:start position:0%
and more you start either observing that
there's<00:30:43.220><c> just</c><00:30:43.610><c> too</c><00:30:43.820><c> much</c><00:30:44.090><c> GC</c><00:30:44.420><c> activity</c><00:30:44.870><c> going</c>

00:30:45.130 --> 00:30:45.140 align:start position:0%
there's just too much GC activity going
 

00:30:45.140 --> 00:30:47.080 align:start position:0%
there's just too much GC activity going
on<00:30:45.320><c> or</c><00:30:45.890><c> you</c><00:30:46.220><c> are</c><00:30:46.280><c> spending</c><00:30:46.610><c> too</c><00:30:46.880><c> much</c><00:30:46.910><c> time</c>

00:30:47.080 --> 00:30:47.090 align:start position:0%
on or you are spending too much time
 

00:30:47.090 --> 00:30:49.660 align:start position:0%
on or you are spending too much time
allocating<00:30:47.870><c> new</c><00:30:47.900><c> objects</c><00:30:48.590><c> or</c><00:30:48.980><c> maybe</c><00:30:49.370><c> just</c>

00:30:49.660 --> 00:30:49.670 align:start position:0%
allocating new objects or maybe just
 

00:30:49.670 --> 00:30:52.600 align:start position:0%
allocating new objects or maybe just
somebody<00:30:50.420><c> said</c><00:30:50.720><c> that</c><00:30:51.470><c> GC</c><00:30:52.010><c> is</c><00:30:52.160><c> in</c><00:30:52.310><c> effect</c>

00:30:52.600 --> 00:30:52.610 align:start position:0%
somebody said that GC is in effect
 

00:30:52.610 --> 00:30:54.490 align:start position:0%
somebody said that GC is in effect
inefficient<00:30:53.480><c> in</c><00:30:53.600><c> general</c><00:30:54.020><c> and</c><00:30:54.230><c> we</c><00:30:54.350><c> should</c>

00:30:54.490 --> 00:30:54.500 align:start position:0%
inefficient in general and we should
 

00:30:54.500 --> 00:30:57.820 align:start position:0%
inefficient in general and we should
avoid<00:30:54.740><c> it</c><00:30:54.950><c> and</c><00:30:55.990><c> then</c><00:30:56.990><c> an</c><00:30:57.140><c> idea</c><00:30:57.410><c> comes</c><00:30:57.620><c> to</c><00:30:57.770><c> a</c>

00:30:57.820 --> 00:30:57.830 align:start position:0%
avoid it and then an idea comes to a
 

00:30:57.830 --> 00:31:00.850 align:start position:0%
avoid it and then an idea comes to a
mind<00:30:58.240><c> what</c><00:30:59.240><c> if</c><00:30:59.420><c> I</c><00:30:59.780><c> can</c><00:31:00.110><c> cheat</c><00:31:00.380><c> the</c><00:31:00.410><c> garbage</c>

00:31:00.850 --> 00:31:00.860 align:start position:0%
mind what if I can cheat the garbage
 

00:31:00.860 --> 00:31:03.250 align:start position:0%
mind what if I can cheat the garbage
collector<00:31:01.300><c> what</c><00:31:02.300><c> if</c><00:31:02.480><c> instead</c><00:31:02.720><c> of</c><00:31:02.900><c> giving</c>

00:31:03.250 --> 00:31:03.260 align:start position:0%
collector what if instead of giving
 

00:31:03.260 --> 00:31:05.830 align:start position:0%
collector what if instead of giving
those<00:31:03.650><c> L</c><00:31:04.010><c> objects</c><00:31:04.670><c> once</c><00:31:04.850><c> there</c><00:31:05.030><c> once</c><00:31:05.630><c> I</c><00:31:05.780><c> am</c>

00:31:05.830 --> 00:31:05.840 align:start position:0%
those L objects once there once I am
 

00:31:05.840 --> 00:31:08.740 align:start position:0%
those L objects once there once I am
done<00:31:05.870><c> using</c><00:31:06.380><c> them</c><00:31:06.610><c> when</c><00:31:07.610><c> moving</c><00:31:08.090><c> them</c><00:31:08.330><c> back</c><00:31:08.540><c> to</c>

00:31:08.740 --> 00:31:08.750 align:start position:0%
done using them when moving them back to
 

00:31:08.750 --> 00:31:10.960 align:start position:0%
done using them when moving them back to
the<00:31:08.870><c> garbage</c><00:31:09.050><c> collector</c><00:31:09.620><c> I</c><00:31:09.830><c> could</c><00:31:10.400><c> just</c><00:31:10.610><c> keep</c>

00:31:10.960 --> 00:31:10.970 align:start position:0%
the garbage collector I could just keep
 

00:31:10.970 --> 00:31:14.350 align:start position:0%
the garbage collector I could just keep
them<00:31:11.150><c> around</c><00:31:11.360><c> in</c><00:31:11.720><c> pools</c><00:31:12.020><c> and</c><00:31:12.820><c> use</c><00:31:13.820><c> them</c><00:31:14.090><c> again</c>

00:31:14.350 --> 00:31:14.360 align:start position:0%
them around in pools and use them again
 

00:31:14.360 --> 00:31:16.020 align:start position:0%
them around in pools and use them again
and<00:31:14.510><c> again</c>

00:31:16.020 --> 00:31:16.030 align:start position:0%
and again
 

00:31:16.030 --> 00:31:18.760 align:start position:0%
and again
isn't<00:31:17.030><c> it</c><00:31:17.150><c> obvious</c><00:31:17.570><c> that</c><00:31:18.200><c> they</c><00:31:18.350><c> should</c><00:31:18.560><c> lead</c>

00:31:18.760 --> 00:31:18.770 align:start position:0%
isn't it obvious that they should lead
 

00:31:18.770 --> 00:31:20.800 align:start position:0%
isn't it obvious that they should lead
to<00:31:18.800><c> less</c><00:31:19.220><c> garbage</c><00:31:19.490><c> and</c><00:31:19.880><c> therefore</c><00:31:20.330><c> less</c><00:31:20.510><c> GC</c>

00:31:20.800 --> 00:31:20.810 align:start position:0%
to less garbage and therefore less GC
 

00:31:20.810 --> 00:31:23.560 align:start position:0%
to less garbage and therefore less GC
activity<00:31:21.290><c> and</c><00:31:21.530><c> also</c><00:31:22.430><c> that</c><00:31:23.060><c> we</c><00:31:23.270><c> would</c><00:31:23.450><c> be</c>

00:31:23.560 --> 00:31:23.570 align:start position:0%
activity and also that we would be
 

00:31:23.570 --> 00:31:26.500 align:start position:0%
activity and also that we would be
avoiding<00:31:24.020><c> the</c><00:31:24.050><c> allocation</c><00:31:24.560><c> cost</c><00:31:25.180><c> given</c><00:31:26.180><c> that</c>

00:31:26.500 --> 00:31:26.510 align:start position:0%
avoiding the allocation cost given that
 

00:31:26.510 --> 00:31:29.110 align:start position:0%
avoiding the allocation cost given that
in<00:31:26.720><c> the</c><00:31:26.780><c> last</c><00:31:26.960><c> few</c><00:31:27.140><c> years</c><00:31:27.440><c> the</c><00:31:28.120><c> garbage</c>

00:31:29.110 --> 00:31:29.120 align:start position:0%
in the last few years the garbage
 

00:31:29.120 --> 00:31:30.670 align:start position:0%
in the last few years the garbage
collector<00:31:29.450><c> Android</c><00:31:29.840><c> garbage</c><00:31:30.170><c> collector</c><00:31:30.500><c> has</c>

00:31:30.670 --> 00:31:30.680 align:start position:0%
collector Android garbage collector has
 

00:31:30.680 --> 00:31:33.190 align:start position:0%
collector Android garbage collector has
him<00:31:30.890><c> has</c><00:31:31.400><c> made</c><00:31:31.610><c> several</c><00:31:31.910><c> improvements</c><00:31:32.240><c> we</c>

00:31:33.190 --> 00:31:33.200 align:start position:0%
him has made several improvements we
 

00:31:33.200 --> 00:31:35.530 align:start position:0%
him has made several improvements we
thought<00:31:33.440><c> it's</c><00:31:33.590><c> nice</c><00:31:33.860><c> time</c><00:31:34.190><c> to</c><00:31:34.430><c> actually</c><00:31:34.820><c> real</c>

00:31:35.530 --> 00:31:35.540 align:start position:0%
thought it's nice time to actually real
 

00:31:35.540 --> 00:31:37.780 align:start position:0%
thought it's nice time to actually real
open<00:31:35.840><c> to</c><00:31:35.990><c> it</c><00:31:36.140><c> and</c><00:31:36.380><c> see</c><00:31:36.560><c> if</c><00:31:36.860><c> it</c><00:31:37.160><c> really</c><00:31:37.400><c> makes</c>

00:31:37.780 --> 00:31:37.790 align:start position:0%
open to it and see if it really makes
 

00:31:37.790 --> 00:31:40.620 align:start position:0%
open to it and see if it really makes
sense<00:31:37.970><c> to</c><00:31:38.180><c> cool</c><00:31:38.510><c> objects</c><00:31:38.930><c> or</c><00:31:39.110><c> not</c>

00:31:40.620 --> 00:31:40.630 align:start position:0%
sense to cool objects or not
 

00:31:40.630 --> 00:31:44.350 align:start position:0%
sense to cool objects or not
so<00:31:41.630><c> we</c><00:31:41.780><c> developed</c><00:31:42.170><c> a</c><00:31:42.230><c> micro</c><00:31:42.560><c> benchmark</c><00:31:43.360><c> with</c>

00:31:44.350 --> 00:31:44.360 align:start position:0%
so we developed a micro benchmark with
 

00:31:44.360 --> 00:31:48.160 align:start position:0%
so we developed a micro benchmark with
the<00:31:44.540><c> idea</c><00:31:45.050><c> of</c><00:31:45.230><c> basically</c><00:31:45.970><c> gathering</c><00:31:46.970><c> two</c><00:31:47.180><c> sets</c>

00:31:48.160 --> 00:31:48.170 align:start position:0%
the idea of basically gathering two sets
 

00:31:48.170 --> 00:31:50.650 align:start position:0%
the idea of basically gathering two sets
of<00:31:48.290><c> metrics</c><00:31:48.500><c> one</c><00:31:49.100><c> is</c><00:31:49.340><c> what</c><00:31:49.700><c> is</c><00:31:49.850><c> the</c><00:31:50.090><c> allocation</c>

00:31:50.650 --> 00:31:50.660 align:start position:0%
of metrics one is what is the allocation
 

00:31:50.660 --> 00:31:54.460 align:start position:0%
of metrics one is what is the allocation
overhead<00:31:52.000><c> for</c><00:31:53.000><c> standard</c><00:31:53.360><c> allocation</c><00:31:53.870><c> versus</c>

00:31:54.460 --> 00:31:54.470 align:start position:0%
overhead for standard allocation versus
 

00:31:54.470 --> 00:31:58.240 align:start position:0%
overhead for standard allocation versus
acquiring<00:31:55.070><c> from</c><00:31:55.450><c> object</c><00:31:56.450><c> pool</c><00:31:56.630><c> and</c><00:31:57.010><c> second</c><00:31:58.010><c> is</c>

00:31:58.240 --> 00:31:58.250 align:start position:0%
acquiring from object pool and second is
 

00:31:58.250 --> 00:32:00.970 align:start position:0%
acquiring from object pool and second is
that<00:31:58.550><c> what</c><00:31:58.970><c> is</c><00:31:59.150><c> the</c><00:31:59.330><c> overall</c><00:31:59.540><c> CPU</c><00:32:00.320><c> overhead</c><00:32:00.590><c> of</c>

00:32:00.970 --> 00:32:00.980 align:start position:0%
that what is the overall CPU overhead of
 

00:32:00.980 --> 00:32:04.360 align:start position:0%
that what is the overall CPU overhead of
completing<00:32:01.520><c> the</c><00:32:01.610><c> micro</c><00:32:01.880><c> benchmark</c><00:32:03.370><c> so</c>

00:32:04.360 --> 00:32:04.370 align:start position:0%
completing the micro benchmark so
 

00:32:04.370 --> 00:32:07.030 align:start position:0%
completing the micro benchmark so
starting<00:32:04.820><c> with</c><00:32:04.910><c> or</c><00:32:05.060><c> location</c><00:32:05.630><c> overhead</c><00:32:06.040><c> as</c>

00:32:07.030 --> 00:32:07.040 align:start position:0%
starting with or location overhead as
 

00:32:07.040 --> 00:32:09.550 align:start position:0%
starting with or location overhead as
you<00:32:07.250><c> can</c><00:32:07.430><c> see</c><00:32:07.640><c> in</c><00:32:07.790><c> this</c><00:32:07.940><c> chart</c><00:32:08.000><c> that</c><00:32:08.510><c> as</c><00:32:09.350><c> you</c>

00:32:09.550 --> 00:32:09.560 align:start position:0%
you can see in this chart that as you
 

00:32:09.560 --> 00:32:10.960 align:start position:0%
you can see in this chart that as you
increase<00:32:09.830><c> the</c><00:32:09.920><c> number</c><00:32:10.100><c> of</c><00:32:10.310><c> fields</c><00:32:10.610><c> of</c><00:32:10.820><c> the</c>

00:32:10.960 --> 00:32:10.970 align:start position:0%
increase the number of fields of the
 

00:32:10.970 --> 00:32:13.690 align:start position:0%
increase the number of fields of the
object<00:32:11.330><c> that</c><00:32:11.450><c> you</c><00:32:11.600><c> are</c><00:32:11.630><c> pooling</c><00:32:12.130><c> the</c><00:32:13.130><c> overhead</c>

00:32:13.690 --> 00:32:13.700 align:start position:0%
object that you are pooling the overhead
 

00:32:13.700 --> 00:32:16.780 align:start position:0%
object that you are pooling the overhead
of<00:32:13.940><c> pooling</c><00:32:14.840><c> and</c><00:32:15.110><c> object</c><00:32:15.530><c> versus</c><00:32:15.980><c> standard</c>

00:32:16.780 --> 00:32:16.790 align:start position:0%
of pooling and object versus standard
 

00:32:16.790 --> 00:32:19.060 align:start position:0%
of pooling and object versus standard
allocation<00:32:17.360><c> is</c><00:32:17.570><c> almost</c><00:32:18.530><c> the</c><00:32:18.650><c> same</c>

00:32:19.060 --> 00:32:19.070 align:start position:0%
allocation is almost the same
 

00:32:19.070 --> 00:32:21.550 align:start position:0%
allocation is almost the same
so<00:32:19.910><c> from</c><00:32:20.240><c> allocation</c><00:32:20.780><c> overheads</c><00:32:21.170><c> point</c><00:32:21.410><c> of</c>

00:32:21.550 --> 00:32:21.560 align:start position:0%
so from allocation overheads point of
 

00:32:21.560 --> 00:32:23.230 align:start position:0%
so from allocation overheads point of
view<00:32:21.710><c> it</c><00:32:21.830><c> actually</c><00:32:22.250><c> does</c><00:32:22.430><c> not</c><00:32:22.640><c> make</c><00:32:22.970><c> much</c>

00:32:23.230 --> 00:32:23.240 align:start position:0%
view it actually does not make much
 

00:32:23.240 --> 00:32:27.970 align:start position:0%
view it actually does not make much
sense<00:32:23.480><c> to</c><00:32:23.840><c> pool</c><00:32:24.440><c> the</c><00:32:24.650><c> objects</c><00:32:26.650><c> going</c><00:32:27.650><c> to</c><00:32:27.830><c> the</c>

00:32:27.970 --> 00:32:27.980 align:start position:0%
sense to pool the objects going to the
 

00:32:27.980 --> 00:32:31.750 align:start position:0%
sense to pool the objects going to the
CPU<00:32:28.310><c> overhead</c><00:32:28.900><c> this</c><00:32:29.900><c> chart</c><00:32:30.200><c> shows</c><00:32:30.470><c> the</c><00:32:31.190><c> best</c>

00:32:31.750 --> 00:32:31.760 align:start position:0%
CPU overhead this chart shows the best
 

00:32:31.760 --> 00:32:35.440 align:start position:0%
CPU overhead this chart shows the best
case<00:32:32.030><c> for</c><00:32:32.240><c> cooling</c><00:32:32.540><c> and</c><00:32:34.240><c> obviously</c><00:32:35.240><c> as</c>

00:32:35.440 --> 00:32:35.450 align:start position:0%
case for cooling and obviously as
 

00:32:35.450 --> 00:32:37.420 align:start position:0%
case for cooling and obviously as
expected<00:32:35.540><c> the</c><00:32:36.470><c> best</c><00:32:36.680><c> case</c><00:32:36.920><c> was</c><00:32:37.160><c> that</c>

00:32:37.420 --> 00:32:37.430 align:start position:0%
expected the best case was that
 

00:32:37.430 --> 00:32:39.130 align:start position:0%
expected the best case was that
basically<00:32:37.910><c> there</c><00:32:38.150><c> is</c><00:32:38.180><c> no</c><00:32:38.420><c> garbage</c><00:32:38.600><c> collector</c>

00:32:39.130 --> 00:32:39.140 align:start position:0%
basically there is no garbage collector
 

00:32:39.140 --> 00:32:41.710 align:start position:0%
basically there is no garbage collector
collection<00:32:39.680><c> activity</c><00:32:40.130><c> at</c><00:32:40.250><c> all</c><00:32:40.430><c> and</c><00:32:40.760><c> therefore</c>

00:32:41.710 --> 00:32:41.720 align:start position:0%
collection activity at all and therefore
 

00:32:41.720 --> 00:32:44.980 align:start position:0%
collection activity at all and therefore
the<00:32:42.530><c> total</c><00:32:42.920><c> CPU</c><00:32:43.580><c> overhead</c><00:32:43.820><c> of</c><00:32:44.180><c> completing</c><00:32:44.870><c> the</c>

00:32:44.980 --> 00:32:44.990 align:start position:0%
the total CPU overhead of completing the
 

00:32:44.990 --> 00:32:48.490 align:start position:0%
the total CPU overhead of completing the
benchmark<00:32:45.410><c> in</c><00:32:45.860><c> case</c><00:32:46.220><c> of</c><00:32:46.570><c> pooling</c><00:32:47.570><c> was</c><00:32:48.020><c> lesser</c>

00:32:48.490 --> 00:32:48.500 align:start position:0%
benchmark in case of pooling was lesser
 

00:32:48.500 --> 00:32:52.510 align:start position:0%
benchmark in case of pooling was lesser
than<00:32:48.830><c> standard</c><00:32:49.700><c> allocation</c><00:32:50.500><c> however</c><00:32:51.520><c> there</c>

00:32:52.510 --> 00:32:52.520 align:start position:0%
than standard allocation however there
 

00:32:52.520 --> 00:32:55.030 align:start position:0%
than standard allocation however there
is<00:32:52.580><c> a</c><00:32:52.640><c> catch</c><00:32:52.880><c> the</c><00:32:53.390><c> catch</c><00:32:53.600><c> is</c><00:32:53.870><c> that</c><00:32:54.200><c> the</c><00:32:54.860><c> best</c>

00:32:55.030 --> 00:32:55.040 align:start position:0%
is a catch the catch is that the best
 

00:32:55.040 --> 00:32:57.280 align:start position:0%
is a catch the catch is that the best
case<00:32:55.250><c> loses</c><00:32:55.670><c> its</c><00:32:55.850><c> practicality</c><00:32:56.750><c> as</c><00:32:56.900><c> soon</c><00:32:57.140><c> as</c>

00:32:57.280 --> 00:32:57.290 align:start position:0%
case loses its practicality as soon as
 

00:32:57.290 --> 00:32:59.530 align:start position:0%
case loses its practicality as soon as
you<00:32:57.440><c> go</c><00:32:57.590><c> beyond</c><00:32:57.920><c> a</c><00:32:58.040><c> test</c><00:32:58.250><c> program</c><00:32:58.400><c> and</c><00:32:58.850><c> start</c>

00:32:59.530 --> 00:32:59.540 align:start position:0%
you go beyond a test program and start
 

00:32:59.540 --> 00:33:02.140 align:start position:0%
you go beyond a test program and start
having<00:32:59.810><c> more</c><00:33:00.110><c> and</c><00:33:00.230><c> more</c><00:33:00.410><c> complicated</c><00:33:00.740><c> code</c><00:33:01.190><c> by</c>

00:33:02.140 --> 00:33:02.150 align:start position:0%
having more and more complicated code by
 

00:33:02.150 --> 00:33:04.810 align:start position:0%
having more and more complicated code by
because<00:33:02.720><c> you</c><00:33:02.870><c> can't</c><00:33:03.080><c> be</c><00:33:03.230><c> pulling</c><00:33:03.440><c> every</c><00:33:04.220><c> type</c>

00:33:04.810 --> 00:33:04.820 align:start position:0%
because you can't be pulling every type
 

00:33:04.820 --> 00:33:07.690 align:start position:0%
because you can't be pulling every type
of<00:33:05.090><c> object</c><00:33:05.540><c> in</c><00:33:05.690><c> your</c><00:33:05.750><c> app</c><00:33:06.050><c> you</c><00:33:06.470><c> just</c><00:33:07.190><c> can't</c><00:33:07.580><c> do</c>

00:33:07.690 --> 00:33:07.700 align:start position:0%
of object in your app you just can't do
 

00:33:07.700 --> 00:33:07.900 align:start position:0%
of object in your app you just can't do
that

00:33:07.900 --> 00:33:07.910 align:start position:0%
that
 

00:33:07.910 --> 00:33:10.720 align:start position:0%
that
and<00:33:08.590><c> therefore</c><00:33:09.590><c> we</c><00:33:09.800><c> thought</c><00:33:10.040><c> we'll</c><00:33:10.250><c> make</c><00:33:10.460><c> the</c>

00:33:10.720 --> 00:33:10.730 align:start position:0%
and therefore we thought we'll make the
 

00:33:10.730 --> 00:33:14.200 align:start position:0%
and therefore we thought we'll make the
benchmark<00:33:11.450><c> more</c><00:33:12.430><c> reasonable</c><00:33:13.430><c> and</c><00:33:13.610><c> so</c><00:33:14.060><c> we</c>

00:33:14.200 --> 00:33:14.210 align:start position:0%
benchmark more reasonable and so we
 

00:33:14.210 --> 00:33:16.900 align:start position:0%
benchmark more reasonable and so we
added<00:33:14.410><c> constant</c><00:33:15.410><c> short-lived</c><00:33:16.040><c> allocations</c>

00:33:16.900 --> 00:33:16.910 align:start position:0%
added constant short-lived allocations
 

00:33:16.910 --> 00:33:20.650 align:start position:0%
added constant short-lived allocations
in<00:33:17.120><c> between</c><00:33:17.480><c> each</c><00:33:18.230><c> iteration</c><00:33:19.180><c> to</c><00:33:20.180><c> see</c><00:33:20.360><c> how</c><00:33:20.510><c> it</c>

00:33:20.650 --> 00:33:20.660 align:start position:0%
in between each iteration to see how it
 

00:33:20.660 --> 00:33:23.620 align:start position:0%
in between each iteration to see how it
effects<00:33:20.960><c> it</c><00:33:21.110><c> and</c><00:33:21.400><c> as</c><00:33:22.400><c> you</c><00:33:22.520><c> can</c><00:33:22.640><c> see</c><00:33:22.880><c> that</c><00:33:23.270><c> the</c>

00:33:23.620 --> 00:33:23.630 align:start position:0%
effects it and as you can see that the
 

00:33:23.630 --> 00:33:26.290 align:start position:0%
effects it and as you can see that the
gap<00:33:23.930><c> between</c><00:33:24.550><c> pooling</c><00:33:25.550><c> versus</c><00:33:26.000><c> standard</c>

00:33:26.290 --> 00:33:26.300 align:start position:0%
gap between pooling versus standard
 

00:33:26.300 --> 00:33:30.340 align:start position:0%
gap between pooling versus standard
allocation<00:33:26.810><c> has</c><00:33:27.020><c> reduced</c><00:33:28.930><c> we've</c><00:33:29.930><c> been</c><00:33:30.110><c> one</c>

00:33:30.340 --> 00:33:30.350 align:start position:0%
allocation has reduced we've been one
 

00:33:30.350 --> 00:33:32.890 align:start position:0%
allocation has reduced we've been one
step<00:33:30.380><c> further</c><00:33:30.770><c> and</c><00:33:31.150><c> we</c><00:33:32.150><c> made</c><00:33:32.390><c> that</c><00:33:32.630><c> a</c>

00:33:32.890 --> 00:33:32.900 align:start position:0%
step further and we made that a
 

00:33:32.900 --> 00:33:35.350 align:start position:0%
step further and we made that a
short-lived<00:33:33.650><c> allocation</c><00:33:34.580><c> proportional</c><00:33:35.270><c> to</c>

00:33:35.350 --> 00:33:35.360 align:start position:0%
short-lived allocation proportional to
 

00:33:35.360 --> 00:33:36.730 align:start position:0%
short-lived allocation proportional to
the<00:33:35.480><c> size</c><00:33:35.720><c> of</c><00:33:35.900><c> the</c><00:33:36.080><c> object</c><00:33:36.440><c> that</c><00:33:36.530><c> you</c><00:33:36.680><c> are</c>

00:33:36.730 --> 00:33:36.740 align:start position:0%
the size of the object that you are
 

00:33:36.740 --> 00:33:39.790 align:start position:0%
the size of the object that you are
pulling<00:33:36.890><c> and</c><00:33:37.480><c> now</c><00:33:38.480><c> as</c><00:33:38.870><c> you</c><00:33:39.020><c> can</c><00:33:39.200><c> see</c><00:33:39.380><c> after</c><00:33:39.620><c> a</c>

00:33:39.790 --> 00:33:39.800 align:start position:0%
pulling and now as you can see after a
 

00:33:39.800 --> 00:33:43.330 align:start position:0%
pulling and now as you can see after a
certain<00:33:40.190><c> size</c><00:33:40.480><c> the</c><00:33:41.480><c> overhead</c><00:33:42.440><c> of</c><00:33:42.680><c> cooling</c><00:33:43.160><c> is</c>

00:33:43.330 --> 00:33:43.340 align:start position:0%
certain size the overhead of cooling is
 

00:33:43.340 --> 00:33:47.320 align:start position:0%
certain size the overhead of cooling is
more<00:33:43.730><c> than</c><00:33:44.170><c> standard</c><00:33:45.170><c> allocation</c><00:33:45.680><c> and</c><00:33:46.460><c> the</c>

00:33:47.320 --> 00:33:47.330 align:start position:0%
more than standard allocation and the
 

00:33:47.330 --> 00:33:49.840 align:start position:0%
more than standard allocation and the
main<00:33:47.510><c> reason</c><00:33:47.900><c> behind</c><00:33:48.020><c> this</c><00:33:48.380><c> is</c><00:33:48.440><c> that</c><00:33:48.920><c> even</c>

00:33:49.840 --> 00:33:49.850 align:start position:0%
main reason behind this is that even
 

00:33:49.850 --> 00:33:52.120 align:start position:0%
main reason behind this is that even
though<00:33:50.060><c> by</c><00:33:50.240><c> pooling</c><00:33:50.540><c> you</c><00:33:51.260><c> are</c><00:33:51.410><c> reducing</c><00:33:51.980><c> the</c>

00:33:52.120 --> 00:33:52.130 align:start position:0%
though by pooling you are reducing the
 

00:33:52.130 --> 00:33:52.649 align:start position:0%
though by pooling you are reducing the
number<00:33:52.429><c> of</c>

00:33:52.649 --> 00:33:52.659 align:start position:0%
number of
 

00:33:52.659 --> 00:33:56.159 align:start position:0%
number of
GC<00:33:53.019><c> cycles</c><00:33:53.499><c> that</c><00:33:53.859><c> that's</c><00:33:54.279><c> involved</c><00:33:55.019><c> but</c><00:33:56.019><c> you</c>

00:33:56.159 --> 00:33:56.169 align:start position:0%
GC cycles that that's involved but you
 

00:33:56.169 --> 00:33:58.229 align:start position:0%
GC cycles that that's involved but you
are<00:33:56.289><c> increasing</c><00:33:56.679><c> the</c><00:33:57.129><c> memory</c><00:33:57.519><c> footprint</c><00:33:58.029><c> of</c>

00:33:58.229 --> 00:33:58.239 align:start position:0%
are increasing the memory footprint of
 

00:33:58.239 --> 00:34:00.690 align:start position:0%
are increasing the memory footprint of
your<00:33:58.419><c> program</c><00:33:58.840><c> you</c><00:33:59.440><c> have</c><00:33:59.649><c> more</c><00:33:59.979><c> objects</c><00:34:00.549><c> each</c>

00:34:00.690 --> 00:34:00.700 align:start position:0%
your program you have more objects each
 

00:34:00.700 --> 00:34:06.330 align:start position:0%
your program you have more objects each
time<00:34:01.179><c> to</c><00:34:02.109><c> collect</c><00:34:02.409><c> or</c><00:34:02.649><c> to</c><00:34:03.159><c> process</c><00:34:04.229><c> and</c><00:34:05.340><c> of</c>

00:34:06.330 --> 00:34:06.340 align:start position:0%
time to collect or to process and of
 

00:34:06.340 --> 00:34:07.859 align:start position:0%
time to collect or to process and of
course<00:34:06.789><c> in</c><00:34:06.909><c> addition</c><00:34:07.149><c> to</c><00:34:07.450><c> higher</c><00:34:07.629><c> more</c>

00:34:07.859 --> 00:34:07.869 align:start position:0%
course in addition to higher more
 

00:34:07.869 --> 00:34:09.089 align:start position:0%
course in addition to higher more
footprints<00:34:08.289><c> there</c><00:34:08.559><c> are</c><00:34:08.740><c> many</c><00:34:08.919><c> other</c>

00:34:09.089 --> 00:34:09.099 align:start position:0%
footprints there are many other
 

00:34:09.099 --> 00:34:12.210 align:start position:0%
footprints there are many other
disadvantages<00:34:09.849><c> too</c><00:34:10.030><c> like</c><00:34:10.839><c> you</c><00:34:11.740><c> bring</c><00:34:11.980><c> back</c>

00:34:12.210 --> 00:34:12.220 align:start position:0%
disadvantages too like you bring back
 

00:34:12.220 --> 00:34:14.039 align:start position:0%
disadvantages too like you bring back
all<00:34:12.399><c> the</c><00:34:12.460><c> nightmares</c><00:34:13.059><c> of</c><00:34:13.270><c> double</c><00:34:13.599><c> free</c><00:34:13.809><c> and</c>

00:34:14.039 --> 00:34:14.049 align:start position:0%
all the nightmares of double free and
 

00:34:14.049 --> 00:34:17.089 align:start position:0%
all the nightmares of double free and
memory<00:34:14.740><c> leaks</c><00:34:14.919><c> back</c><00:34:15.099><c> and</c><00:34:15.539><c> also</c><00:34:16.539><c> given</c><00:34:16.929><c> the</c>

00:34:17.089 --> 00:34:17.099 align:start position:0%
memory leaks back and also given the
 

00:34:17.099 --> 00:34:20.279 align:start position:0%
memory leaks back and also given the
narrow<00:34:18.099><c> gap</c><00:34:18.460><c> between</c><00:34:18.730><c> allocation</c><00:34:19.480><c> standard</c>

00:34:20.279 --> 00:34:20.289 align:start position:0%
narrow gap between allocation standard
 

00:34:20.289 --> 00:34:22.559 align:start position:0%
narrow gap between allocation standard
allocation<00:34:20.710><c> and</c><00:34:20.859><c> pooling</c><00:34:21.159><c> it</c><00:34:21.399><c> may</c><00:34:21.609><c> it</c><00:34:21.940><c> is</c><00:34:22.240><c> very</c>

00:34:22.559 --> 00:34:22.569 align:start position:0%
allocation and pooling it may it is very
 

00:34:22.569 --> 00:34:25.020 align:start position:0%
allocation and pooling it may it is very
critical<00:34:22.899><c> that</c><00:34:23.200><c> your</c><00:34:23.980><c> implementation</c><00:34:24.399><c> of</c><00:34:24.879><c> the</c>

00:34:25.020 --> 00:34:25.030 align:start position:0%
critical that your implementation of the
 

00:34:25.030 --> 00:34:27.240 align:start position:0%
critical that your implementation of the
pool<00:34:25.240><c> itself</c><00:34:25.629><c> is</c><00:34:25.990><c> efficient</c><00:34:26.440><c> otherwise</c>

00:34:27.240 --> 00:34:27.250 align:start position:0%
pool itself is efficient otherwise
 

00:34:27.250 --> 00:34:31.639 align:start position:0%
pool itself is efficient otherwise
pooling<00:34:28.119><c> would</c><00:34:28.299><c> very</c><00:34:29.200><c> quickly</c><00:34:30.329><c> become</c><00:34:31.329><c> more</c>

00:34:31.639 --> 00:34:31.649 align:start position:0%
pooling would very quickly become more
 

00:34:31.649 --> 00:34:34.529 align:start position:0%
pooling would very quickly become more
more<00:34:32.649><c> inefficient</c><00:34:33.129><c> as</c><00:34:33.789><c> compared</c><00:34:34.210><c> to</c><00:34:34.240><c> standard</c>

00:34:34.529 --> 00:34:34.539 align:start position:0%
more inefficient as compared to standard
 

00:34:34.539 --> 00:34:39.210 align:start position:0%
more inefficient as compared to standard
allocation<00:34:36.000><c> so</c><00:34:37.000><c> our</c><00:34:37.240><c> recommendation</c><00:34:37.990><c> is</c><00:34:38.289><c> that</c>

00:34:39.210 --> 00:34:39.220 align:start position:0%
allocation so our recommendation is that
 

00:34:39.220 --> 00:34:40.889 align:start position:0%
allocation so our recommendation is that
please<00:34:39.490><c> don't</c><00:34:39.789><c> use</c><00:34:39.940><c> it</c><00:34:40.179><c> unless</c><00:34:40.329><c> you</c><00:34:40.780><c> are</c>

00:34:40.889 --> 00:34:40.899 align:start position:0%
please don't use it unless you are
 

00:34:40.899 --> 00:34:43.200 align:start position:0%
please don't use it unless you are
really<00:34:41.379><c> sure</c><00:34:41.409><c> of</c><00:34:41.589><c> the</c><00:34:41.799><c> benefits</c><00:34:42.339><c> and</c><00:34:42.520><c> the</c><00:34:43.030><c> best</c>

00:34:43.200 --> 00:34:43.210 align:start position:0%
really sure of the benefits and the best
 

00:34:43.210 --> 00:34:45.619 align:start position:0%
really sure of the benefits and the best
way<00:34:43.389><c> to</c><00:34:43.450><c> be</c><00:34:43.690><c> sure</c><00:34:43.720><c> of</c><00:34:44.020><c> benefits</c><00:34:44.440><c> is</c><00:34:44.589><c> to</c><00:34:44.799><c> measure</c>

00:34:45.619 --> 00:34:45.629 align:start position:0%
way to be sure of benefits is to measure
 

00:34:45.629 --> 00:34:50.639 align:start position:0%
way to be sure of benefits is to measure
if<00:34:47.010><c> measure</c><00:34:48.010><c> when</c><00:34:48.789><c> you</c><00:34:48.909><c> want</c><00:34:49.329><c> to</c><00:34:49.510><c> introduce</c><00:34:50.319><c> a</c>

00:34:50.639 --> 00:34:50.649 align:start position:0%
if measure when you want to introduce a
 

00:34:50.649 --> 00:34:52.740 align:start position:0%
if measure when you want to introduce a
new<00:34:50.799><c> pool</c><00:34:51.039><c> to</c><00:34:51.250><c> a</c><00:34:51.280><c> program</c><00:34:51.700><c> see</c><00:34:52.240><c> if</c><00:34:52.359><c> it</c><00:34:52.510><c> benefits</c>

00:34:52.740 --> 00:34:52.750 align:start position:0%
new pool to a program see if it benefits
 

00:34:52.750 --> 00:34:58.559 align:start position:0%
new pool to a program see if it benefits
you<00:34:53.139><c> and</c><00:34:53.349><c> then</c><00:34:53.559><c> only</c><00:34:55.109><c> use</c><00:34:56.109><c> it</c><00:34:56.430><c> however</c><00:34:57.430><c> I</c><00:34:57.700><c> still</c>

00:34:58.559 --> 00:34:58.569 align:start position:0%
you and then only use it however I still
 

00:34:58.569 --> 00:35:00.630 align:start position:0%
you and then only use it however I still
would<00:34:59.260><c> say</c><00:34:59.500><c> that</c><00:34:59.740><c> there</c><00:34:59.890><c> are</c><00:35:00.039><c> some</c><00:35:00.279><c> corner</c>

00:35:00.630 --> 00:35:00.640 align:start position:0%
would say that there are some corner
 

00:35:00.640 --> 00:35:02.160 align:start position:0%
would say that there are some corner
cases<00:35:00.670><c> where</c><00:35:01.119><c> it</c><00:35:01.270><c> could</c><00:35:01.420><c> be</c><00:35:01.510><c> useful</c><00:35:01.809><c> right</c><00:35:01.930><c> so</c>

00:35:02.160 --> 00:35:02.170 align:start position:0%
cases where it could be useful right so
 

00:35:02.170 --> 00:35:04.950 align:start position:0%
cases where it could be useful right so
for<00:35:02.349><c> instance</c><00:35:02.650><c> if</c><00:35:02.829><c> you</c><00:35:02.980><c> are</c><00:35:03.180><c> if</c><00:35:04.180><c> your</c><00:35:04.450><c> app</c><00:35:04.660><c> has</c>

00:35:04.950 --> 00:35:04.960 align:start position:0%
for instance if you are if your app has
 

00:35:04.960 --> 00:35:07.859 align:start position:0%
for instance if you are if your app has
a<00:35:05.349><c> requirement</c><00:35:06.279><c> where</c><00:35:06.460><c> very</c><00:35:07.000><c> large</c><00:35:07.299><c> objects</c>

00:35:07.859 --> 00:35:07.869 align:start position:0%
a requirement where very large objects
 

00:35:07.869 --> 00:35:11.190 align:start position:0%
a requirement where very large objects
need<00:35:08.710><c> to</c><00:35:08.829><c> be</c><00:35:08.950><c> used</c><00:35:09.160><c> and</c><00:35:09.660><c> then</c><00:35:10.660><c> it</c><00:35:10.839><c> may</c><00:35:10.990><c> make</c>

00:35:11.190 --> 00:35:11.200 align:start position:0%
need to be used and then it may make
 

00:35:11.200 --> 00:35:13.049 align:start position:0%
need to be used and then it may make
sense<00:35:11.230><c> to</c><00:35:11.680><c> pull</c><00:35:11.920><c> them</c><00:35:12.099><c> or</c><00:35:12.279><c> if</c><00:35:12.640><c> there</c><00:35:12.880><c> are</c>

00:35:13.049 --> 00:35:13.059 align:start position:0%
sense to pull them or if there are
 

00:35:13.059 --> 00:35:16.049 align:start position:0%
sense to pull them or if there are
thread-local<00:35:13.750><c> objects</c><00:35:14.440><c> which</c><00:35:14.619><c> get</c><00:35:15.460><c> allocated</c>

00:35:16.049 --> 00:35:16.059 align:start position:0%
thread-local objects which get allocated
 

00:35:16.059 --> 00:35:18.059 align:start position:0%
thread-local objects which get allocated
and<00:35:16.270><c> then</c><00:35:16.539><c> dropped</c><00:35:17.200><c> on</c><00:35:17.349><c> the</c><00:35:17.440><c> floor</c><00:35:17.650><c> at</c><00:35:17.829><c> a</c><00:35:17.859><c> very</c>

00:35:18.059 --> 00:35:18.069 align:start position:0%
and then dropped on the floor at a very
 

00:35:18.069 --> 00:35:20.130 align:start position:0%
and then dropped on the floor at a very
high<00:35:18.250><c> frequency</c><00:35:18.819><c> then</c><00:35:19.329><c> also</c><00:35:19.660><c> it</c><00:35:19.809><c> may</c><00:35:19.960><c> make</c>

00:35:20.130 --> 00:35:20.140 align:start position:0%
high frequency then also it may make
 

00:35:20.140 --> 00:35:22.410 align:start position:0%
high frequency then also it may make
sense<00:35:20.170><c> to</c><00:35:20.500><c> pull</c><00:35:20.740><c> them</c><00:35:20.920><c> but</c><00:35:21.609><c> the</c><00:35:21.730><c> the</c><00:35:22.150><c> peak</c>

00:35:22.410 --> 00:35:22.420 align:start position:0%
sense to pull them but the the peak
 

00:35:22.420 --> 00:35:25.260 align:start position:0%
sense to pull them but the the peak
point<00:35:22.690><c> is</c><00:35:23.020><c> please</c><00:35:23.740><c> measure</c><00:35:24.130><c> before</c><00:35:24.549><c> deciding</c>

00:35:25.260 --> 00:35:25.270 align:start position:0%
point is please measure before deciding
 

00:35:25.270 --> 00:35:32.250 align:start position:0%
point is please measure before deciding
to<00:35:25.359><c> use</c><00:35:25.390><c> them</c><00:35:27.569><c> okay</c><00:35:28.569><c> so</c><00:35:28.779><c> to</c><00:35:29.410><c> pre</c><00:35:29.829><c> cap</c><00:35:30.039><c> we</c><00:35:31.260><c> talked</c>

00:35:32.250 --> 00:35:32.260 align:start position:0%
to use them okay so to pre cap we talked
 

00:35:32.260 --> 00:35:33.900 align:start position:0%
to use them okay so to pre cap we talked
about<00:35:32.410><c> how</c><00:35:32.770><c> we</c><00:35:32.829><c> improve</c><00:35:33.069><c> the</c><00:35:33.430><c> app</c><00:35:33.549><c> startup</c>

00:35:33.900 --> 00:35:33.910 align:start position:0%
about how we improve the app startup
 

00:35:33.910 --> 00:35:37.589 align:start position:0%
about how we improve the app startup
time<00:35:34.119><c> by</c><00:35:34.359><c> into</c><00:35:34.839><c> by</c><00:35:35.520><c> using</c><00:35:36.520><c> cloud</c><00:35:36.730><c> profiles</c><00:35:37.210><c> by</c>

00:35:37.589 --> 00:35:37.599 align:start position:0%
time by into by using cloud profiles by
 

00:35:37.599 --> 00:35:40.230 align:start position:0%
time by into by using cloud profiles by
introduced<00:35:38.289><c> improving</c><00:35:38.829><c> the</c><00:35:39.099><c> app</c><00:35:39.369><c> images</c><00:35:39.940><c> and</c>

00:35:40.230 --> 00:35:40.240 align:start position:0%
introduced improving the app images and
 

00:35:40.240 --> 00:35:43.589 align:start position:0%
introduced improving the app images and
by<00:35:40.690><c> introducing</c><00:35:41.020><c> the</c><00:35:41.410><c> app</c><00:35:41.650><c> process</c><00:35:42.069><c> pools</c><00:35:42.599><c> on</c>

00:35:43.589 --> 00:35:43.599 align:start position:0%
by introducing the app process pools on
 

00:35:43.599 --> 00:35:46.049 align:start position:0%
by introducing the app process pools on
the<00:35:43.809><c> GCS</c><00:35:44.170><c> front</c><00:35:44.440><c> we</c><00:35:45.069><c> already</c><00:35:45.460><c> have</c><00:35:45.700><c> fast</c>

00:35:46.049 --> 00:35:46.059 align:start position:0%
the GCS front we already have fast
 

00:35:46.059 --> 00:35:48.269 align:start position:0%
the GCS front we already have fast
object<00:35:46.450><c> allocations</c><00:35:46.960><c> since</c><00:35:47.200><c> or</c><00:35:47.829><c> Android</c>

00:35:48.269 --> 00:35:48.279 align:start position:0%
object allocations since or Android
 

00:35:48.279 --> 00:35:51.150 align:start position:0%
object allocations since or Android
audio<00:35:48.549><c> and</c><00:35:49.500><c> starting</c><00:35:50.500><c> with</c><00:35:50.619><c> you</c><00:35:50.829><c> we</c><00:35:51.010><c> have</c>

00:35:51.150 --> 00:35:51.160 align:start position:0%
audio and starting with you we have
 

00:35:51.160 --> 00:35:52.710 align:start position:0%
audio and starting with you we have
introduced<00:35:51.549><c> the</c><00:35:51.730><c> concept</c><00:35:51.760><c> of</c><00:35:52.180><c> generational</c>

00:35:52.710 --> 00:35:52.720 align:start position:0%
introduced the concept of generational
 

00:35:52.720 --> 00:35:54.839 align:start position:0%
introduced the concept of generational
garbage<00:35:52.839><c> collection</c><00:35:53.440><c> and</c><00:35:53.619><c> also</c><00:35:54.220><c> we</c><00:35:54.490><c> improve</c>

00:35:54.839 --> 00:35:54.849 align:start position:0%
garbage collection and also we improve
 

00:35:54.849 --> 00:35:56.579 align:start position:0%
garbage collection and also we improve
the<00:35:55.059><c> heap</c><00:35:55.240><c> compaction</c><00:35:55.779><c> using</c><00:35:56.109><c> the</c><00:35:56.230><c> two</c><00:35:56.380><c> phase</c>

00:35:56.579 --> 00:35:56.589 align:start position:0%
the heap compaction using the two phase
 

00:35:56.589 --> 00:35:59.220 align:start position:0%
the heap compaction using the two phase
algorithm<00:35:57.250><c> that</c><00:35:57.430><c> I</c><00:35:57.460><c> talked</c><00:35:57.730><c> about</c><00:35:57.970><c> and</c><00:35:58.270><c> since</c>

00:35:59.220 --> 00:35:59.230 align:start position:0%
algorithm that I talked about and since
 

00:35:59.230 --> 00:36:01.200 align:start position:0%
algorithm that I talked about and since
it<00:35:59.410><c> is</c><00:35:59.529><c> our</c><00:35:59.710><c> endeavour</c><00:36:00.250><c> to</c><00:36:00.369><c> always</c><00:36:01.000><c> keep</c>

00:36:01.200 --> 00:36:01.210 align:start position:0%
it is our endeavour to always keep
 

00:36:01.210 --> 00:36:05.010 align:start position:0%
it is our endeavour to always keep
improving<00:36:01.599><c> the</c><00:36:01.839><c> arts</c><00:36:02.079><c> performance</c><00:36:02.789><c> we</c><00:36:03.789><c> expect</c>

00:36:05.010 --> 00:36:05.020 align:start position:0%
improving the arts performance we expect
 

00:36:05.020 --> 00:36:07.680 align:start position:0%
improving the arts performance we expect
we<00:36:05.110><c> will</c><00:36:05.710><c> continue</c><00:36:06.040><c> to</c><00:36:06.100><c> work</c><00:36:06.940><c> on</c><00:36:07.120><c> these</c><00:36:07.300><c> areas</c>

00:36:07.680 --> 00:36:07.690 align:start position:0%
we will continue to work on these areas
 

00:36:07.690 --> 00:36:08.970 align:start position:0%
we will continue to work on these areas
and<00:36:07.930><c> you</c><00:36:07.990><c> can</c><00:36:08.020><c> expect</c><00:36:08.500><c> to</c><00:36:08.590><c> have</c><00:36:08.770><c> more</c>

00:36:08.970 --> 00:36:08.980 align:start position:0%
and you can expect to have more
 

00:36:08.980 --> 00:36:11.480 align:start position:0%
and you can expect to have more
improvements<00:36:09.550><c> in</c><00:36:09.640><c> the</c><00:36:09.730><c> future</c><00:36:10.240><c> to</c><00:36:10.360><c> follow</c>

00:36:11.480 --> 00:36:11.490 align:start position:0%
improvements in the future to follow
 

00:36:11.490 --> 00:36:14.190 align:start position:0%
improvements in the future to follow
with<00:36:12.490><c> that</c><00:36:12.730><c> thanks</c><00:36:13.300><c> a</c><00:36:13.360><c> lot</c><00:36:13.540><c> for</c><00:36:13.720><c> ending</c><00:36:14.050><c> the</c>

00:36:14.190 --> 00:36:14.200 align:start position:0%
with that thanks a lot for ending the
 

00:36:14.200 --> 00:36:15.960 align:start position:0%
with that thanks a lot for ending the
presentation<00:36:14.980><c> I</c><00:36:15.130><c> hope</c><00:36:15.310><c> it</c><00:36:15.460><c> was</c><00:36:15.610><c> useful</c>

00:36:15.960 --> 00:36:15.970 align:start position:0%
presentation I hope it was useful
 

00:36:15.970 --> 00:36:34.020 align:start position:0%
presentation I hope it was useful
[Music]

00:36:34.020 --> 00:36:34.030 align:start position:0%
[Music]
 

00:36:34.030 --> 00:36:34.840 align:start position:0%
[Music]
you

00:36:34.840 --> 00:36:34.850 align:start position:0%
you
 

00:36:34.850 --> 00:36:37.869 align:start position:0%
you
[Music]

