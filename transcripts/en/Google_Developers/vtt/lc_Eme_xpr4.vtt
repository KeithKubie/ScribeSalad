WEBVTT
Kind: captions
Language: en

00:00:06.690 --> 00:00:09.910
NICOLAS GARNER: All right, so
hello everyone and welcome.

00:00:09.910 --> 00:00:12.740
My name is Nicolas, and I'm the
Developer Advocate working

00:00:12.740 --> 00:00:14.570
on Google Drive.

00:00:14.570 --> 00:00:17.680
During the session, we're going
to see what is possible

00:00:17.680 --> 00:00:21.200
with the Google Drive SDK, and
especially what some companies

00:00:21.200 --> 00:00:26.040
have accomplished by integrating
with the SDK.

00:00:26.040 --> 00:00:28.430
As you all probably know by now,
Google Drive launched a

00:00:28.430 --> 00:00:29.560
couple months ago.

00:00:29.560 --> 00:00:31.920
And what's interesting is it
launched with an [? AZK ?]

00:00:31.920 --> 00:00:35.840
that doesn't only allow you to
you interact with files, like

00:00:35.840 --> 00:00:40.050
read and write files on Drive,
but that also allows

00:00:40.050 --> 00:00:42.870
third-party application to
deeply integrate with the

00:00:42.870 --> 00:00:45.780
Google Drive user interface.

00:00:45.780 --> 00:00:49.390
For instance, you can now, using
third-party application,

00:00:49.390 --> 00:00:53.490
open files directly from the
Google Drive UI, and these

00:00:53.490 --> 00:00:57.310
files that handle the file
formats that you click on will

00:00:57.310 --> 00:01:00.570
appear in the Open With
contextual menu.

00:01:00.570 --> 00:01:03.850
For example here on the
screen, a user could

00:01:03.850 --> 00:01:07.860
right-click on this PNG file
and choose to open it with

00:01:07.860 --> 00:01:13.110
Pixlr Editor, for instance, if
the user has installed it.

00:01:13.110 --> 00:01:17.960
In the same way, we let users
create files directly from the

00:01:17.960 --> 00:01:19.890
Google Drive user interface.

00:01:19.890 --> 00:01:22.970
So inside of Create Menu,
alongside creating a new

00:01:22.970 --> 00:01:26.240
Google Document, a new Google
Presentation, or a new Google

00:01:26.240 --> 00:01:31.470
Spreadsheet, we also list the
application that the user has

00:01:31.470 --> 00:01:34.960
installed that support
creating new files.

00:01:34.960 --> 00:01:38.200
Again, for instance,
Pixlr Editor.

00:01:38.200 --> 00:01:41.700
And we currently have a little
bit more than 40 applications

00:01:41.700 --> 00:01:44.940
on the Chrome Web Store today
that handle a wide variety of

00:01:44.940 --> 00:01:46.110
file formats.

00:01:46.110 --> 00:01:49.900
And I'm actually going to show
you a few of these, explain

00:01:49.900 --> 00:01:51.150
you a few of these.

00:01:51.150 --> 00:01:55.070
The first one, which I already
mentioned quickly before, is

00:01:55.070 --> 00:01:55.770
the Pixlr Editor.

00:01:55.770 --> 00:02:00.110
So Pixlr Editor is actually a
really cool, feature-compete,

00:02:00.110 --> 00:02:01.970
online image editor.

00:02:01.970 --> 00:02:06.590
It lets you open many, many
file formats, and even

00:02:06.590 --> 00:02:09.419
professional ones, because
it has features

00:02:09.419 --> 00:02:11.910
like layers or filters.

00:02:11.910 --> 00:02:14.390
Basically, lots of the features
that you can find in

00:02:14.390 --> 00:02:17.380
a professional image editor
on your desktop today is

00:02:17.380 --> 00:02:18.500
available on Pixlr Editor.

00:02:18.500 --> 00:02:22.300
So using Pixlr and its drive
integration today, you can

00:02:22.300 --> 00:02:26.860
very quickly edit and create
new images on your Drive.

00:02:26.860 --> 00:02:29.950
So within a few clicks, you can
simply edit an image and

00:02:29.950 --> 00:02:31.950
save it back to Drive.

00:02:31.950 --> 00:02:34.640
Another interesting
app is Balsamiq.

00:02:34.640 --> 00:02:38.150
Balsamiq is this mockup editor,
[? mocks ?] editor.

00:02:38.150 --> 00:02:41.690
So whenever you're, for example,
designing a website,

00:02:41.690 --> 00:02:44.850
a web application, or a desktop
application, you can

00:02:44.850 --> 00:02:47.960
use Balsamiq to quickly mock
the user interface.

00:02:47.960 --> 00:02:50.880
So if you're brainstorming or
designing, you should really

00:02:50.880 --> 00:02:52.780
give Balsamiq Mockup a try.

00:02:52.780 --> 00:02:56.600
And what's interesting is
Balsamiq chose to create a

00:02:56.600 --> 00:02:58.950
Drive only version
of their app.

00:02:58.950 --> 00:03:01.380
They have, for example, a
desktop version of their app.

00:03:01.380 --> 00:03:03.380
They had already an online
version of their app, and they

00:03:03.380 --> 00:03:06.760
made a standalone Drive only
version of their app, so that

00:03:06.760 --> 00:03:08.670
allowed them to ship
that even faster.

00:03:08.670 --> 00:03:12.100
They didn't have to handle
merging Google Drive users

00:03:12.100 --> 00:03:14.540
with their users, and adding
the Drive feature.

00:03:14.540 --> 00:03:19.000
People who use their Drive
version of their app are

00:03:19.000 --> 00:03:22.360
always Google Drive users, and
that made things a little bit

00:03:22.360 --> 00:03:24.560
easier for them during
the implementation.

00:03:24.560 --> 00:03:28.230
And what's cool with their Drive
integration now is that

00:03:28.230 --> 00:03:31.670
you can, for example, interact
on the same file using their

00:03:31.670 --> 00:03:35.140
desktop app and their
online app.

00:03:35.140 --> 00:03:37.050
So whenever you're, for example,
on the plane, you

00:03:37.050 --> 00:03:40.250
could edit a mockup using
the desktop up.

00:03:40.250 --> 00:03:43.000
And whenever you're traveling,
or at a friend's house, you

00:03:43.000 --> 00:03:45.120
could open the same file that
got synchronized through their

00:03:45.120 --> 00:03:48.040
Google Drive sync client
using the online

00:03:48.040 --> 00:03:50.680
version of their app.

00:03:50.680 --> 00:03:52.610
And have you heard
of Hello Fax?

00:03:52.610 --> 00:03:54.870
Who has used Hello Fax
here in the room?

00:03:54.870 --> 00:03:57.700
It's a pretty popular
app on Google Drive.

00:03:57.700 --> 00:04:01.590
It allows you to actually
quickly fax documents online,

00:04:01.590 --> 00:04:05.150
and the Drive integration makes
it actually even better

00:04:05.150 --> 00:04:05.970
and even faster.

00:04:05.970 --> 00:04:09.990
So actually, I'm going to fax
a document right now.

00:04:09.990 --> 00:04:13.420
So let me switch to my Google
Drive here, and I've displayed

00:04:13.420 --> 00:04:16.930
a bunch of the PDFs that
were on my Drive.

00:04:16.930 --> 00:04:20.459
And this is a simple PDF
that just says hello

00:04:20.459 --> 00:04:21.329
that I want to fax.

00:04:21.329 --> 00:04:24.000
So all I have to do is
right-click on it and choose

00:04:24.000 --> 00:04:26.640
Open With Hello Fax.

00:04:26.640 --> 00:04:28.630
I installed Hello Fax before
on my Drive, and I get

00:04:28.630 --> 00:04:30.060
redirected to Hello Fax.

00:04:30.060 --> 00:04:32.830
So Hello Fax has actually
these two features.

00:04:32.830 --> 00:04:36.690
It has an online signature
management feature and an

00:04:36.690 --> 00:04:38.360
online faxing feature.

00:04:38.360 --> 00:04:41.720
What I want to do is fax the
document, so one click here.

00:04:41.720 --> 00:04:44.480
And as you can see here, Hello
Fax is fetching the PDF

00:04:44.480 --> 00:04:46.210
version my file.

00:04:46.210 --> 00:04:47.110
Here it got it.

00:04:47.110 --> 00:04:49.820
And all I have to do is Copy,
Paste a phone number.

00:04:49.820 --> 00:04:53.850
Here is our Mountain View office
fax, and I'm simply

00:04:53.850 --> 00:04:56.570
going to fax that to the
Mountain View office in here.

00:04:56.570 --> 00:04:58.370
The fax is being sent.

00:04:58.370 --> 00:05:00.230
So Hello Fax has a lot
of cool features.

00:05:00.230 --> 00:05:02.870
It's going to let you know if
the fax was successful with an

00:05:02.870 --> 00:05:04.730
email, or if it failed
for any reason.

00:05:07.580 --> 00:05:10.260
And I don't know if you've saw
that, but I didn't have to

00:05:10.260 --> 00:05:11.120
sign into Hello Fax.

00:05:11.120 --> 00:05:14.140
I didn't sign into Hello Fax
before the demo here.

00:05:14.140 --> 00:05:17.230
Hello Fax automatically signed
me in using our OpenID Connect

00:05:17.230 --> 00:05:18.060
end points.

00:05:18.060 --> 00:05:23.510
So the same time it getting
access to the Drive file, it

00:05:23.510 --> 00:05:26.940
also fetched my user
information, knew who I was,

00:05:26.940 --> 00:05:29.760
and automatically signed me
in my Hello Fax account.

00:05:29.760 --> 00:05:32.230
And actually even better, if
you don't have a Hello Fax

00:05:32.230 --> 00:05:35.400
account and you open Hello Fax
from Drive the first time,

00:05:35.400 --> 00:05:37.650
it's automatically going to
create an account for you,

00:05:37.650 --> 00:05:40.380
again using our OpenID
connecting points.

00:05:40.380 --> 00:05:43.540
So that makes a really, really
good first-time user

00:05:43.540 --> 00:05:48.620
experience, and actually even
give you free fax credits.

00:05:48.620 --> 00:05:52.040
So you can open any file from
Drive using Hello Fax and

00:05:52.040 --> 00:05:53.750
start faxing it right away.

00:05:53.750 --> 00:05:56.530
So here my fax was successful.

00:05:56.530 --> 00:05:58.160
Another cool feature
is you can receive

00:05:58.160 --> 00:06:00.230
faxes from Hello Fax.

00:06:00.230 --> 00:06:02.290
I think that's a paying feature,
but you can get a

00:06:02.290 --> 00:06:04.950
number, and when people send
you faxes, they're going to

00:06:04.950 --> 00:06:07.970
write that fax as a PDF file
inside your Google Drive.

00:06:07.970 --> 00:06:11.275
So that's one of the really
cool things with the Drive

00:06:11.275 --> 00:06:12.525
version of Hello Fax.

00:06:14.650 --> 00:06:15.900
Let me switch back to
the presentation.

00:06:19.070 --> 00:06:22.430
We have here with us today
three people that worked

00:06:22.430 --> 00:06:24.640
really hard on integrating
Google Drive with their

00:06:24.640 --> 00:06:25.700
application.

00:06:25.700 --> 00:06:30.040
And they're going to show you a
bit more of what you can do

00:06:30.040 --> 00:06:32.740
by integrating with Hello Fax.

00:06:32.740 --> 00:06:38.660
And actually they are going to
go a little bit more deeper,

00:06:38.660 --> 00:06:39.970
show you a bit of code.

00:06:39.970 --> 00:06:40.970
So it's going to be nice.

00:06:40.970 --> 00:06:45.390
And they're going to use both
versions of the SDK, you

00:06:45.390 --> 00:06:48.350
you'll see what was already
possible with version one of

00:06:48.350 --> 00:06:50.750
the SDK, what is now possible
with the newly-launched-- we

00:06:50.750 --> 00:06:52.310
launched that this morning--

00:06:52.310 --> 00:06:56.080
version two of the SDK, and
they'll also showcase some

00:06:56.080 --> 00:06:59.110
mobile usage of the version
two of our SDK.

00:06:59.110 --> 00:07:04.190
And the first person I'd like
to invite on stage has been

00:07:04.190 --> 00:07:08.500
part of our version one Trusted
Tester program.

00:07:08.500 --> 00:07:11.610
And actually, I think it's fair
to say that they have the

00:07:11.610 --> 00:07:15.530
deepest version one integration,
and the most

00:07:15.530 --> 00:07:17.180
complete and deepest version
one integration.

00:07:17.180 --> 00:07:21.610
So please welcome Till Vollmer,
the CEO and Founder

00:07:21.610 --> 00:07:22.600
of my MindMeister.

00:07:22.600 --> 00:07:23.850
Thank you.

00:07:30.180 --> 00:07:30.480
TILL VOLLMER: Thank you.

00:07:30.480 --> 00:07:34.050
My name is Till Vollmer, and
I'm the CEO and Founder of

00:07:34.050 --> 00:07:37.470
MindMeister, which is an online
collaboration platform,

00:07:37.470 --> 00:07:40.350
online mind mapping platform.

00:07:40.350 --> 00:07:43.660
In case you don't know what mind
mapping, a little, short

00:07:43.660 --> 00:07:44.910
introduction to that.

00:07:44.910 --> 00:07:49.420
You see on the screen a mind
map, which is actually

00:07:49.420 --> 00:07:54.370
graphical form of representation
of structured

00:07:54.370 --> 00:07:55.280
information.

00:07:55.280 --> 00:07:58.340
On this mind map, for example,
we see meeting minutes with

00:07:58.340 --> 00:08:02.280
participants, with agenda, with
the goals of the meeting,

00:08:02.280 --> 00:08:06.730
and you structure all your
thoughts around the meeting in

00:08:06.730 --> 00:08:07.780
this mind map.

00:08:07.780 --> 00:08:10.540
There are lots of use cases
for mind mapping.

00:08:10.540 --> 00:08:13.290
For example innovation
management, project planning,

00:08:13.290 --> 00:08:17.300
even website planning, like how
to structure my website

00:08:17.300 --> 00:08:19.780
with all the sub pages,
et cetera.

00:08:19.780 --> 00:08:23.330
And there are some personal
usages of mind maps.

00:08:23.330 --> 00:08:27.820
For example vacation planning,
or even people who plan their

00:08:27.820 --> 00:08:30.640
wedding with MindMeister.

00:08:30.640 --> 00:08:35.309
On the technical side, we are
using Ruby on Rails with

00:08:35.309 --> 00:08:40.850
Apache in front and with MySQL
in the background.

00:08:40.850 --> 00:08:43.390
We also have mobile clients.

00:08:43.390 --> 00:08:44.850
You see our Android
version here.

00:08:44.850 --> 00:08:48.620
Of course we have iPhone, iPad,
and we will soon launch

00:08:48.620 --> 00:08:50.385
an Android tablet version.

00:08:52.940 --> 00:08:57.500
A few words to MindMeister
itself, or the company behind

00:08:57.500 --> 00:08:59.215
it is called Meister Labs.

00:08:59.215 --> 00:09:01.680
It was established in 2006.

00:09:01.680 --> 00:09:08.200
We nearly needed one year to
bring up the first version of

00:09:08.200 --> 00:09:14.470
MindMeister, and we had a soft
beta launch in February 2007.

00:09:14.470 --> 00:09:18.710
And since then, we are now
nearly at 1.5 million

00:09:18.710 --> 00:09:20.220
registered users.

00:09:20.220 --> 00:09:23.310
We are profitable since two and
a half years, and we are

00:09:23.310 --> 00:09:25.660
working with a premium model, of
course, which means we have

00:09:25.660 --> 00:09:31.010
a free version, and we have
three paid editions to get

00:09:31.010 --> 00:09:35.810
revenue and to continue
developing our product.

00:09:35.810 --> 00:09:42.190
We were very honored to be one
of the first beta testers with

00:09:42.190 --> 00:09:46.020
Google Apps Marketplace
a couple of years ago.

00:09:46.020 --> 00:09:49.130
That was the first time we were
in contact with Google,

00:09:49.130 --> 00:09:53.030
and also Google Chrome Web Store
integration, and we are

00:09:53.030 --> 00:09:58.150
very pleased to be part
of the Google Drive

00:09:58.150 --> 00:09:59.640
beta test as well.

00:09:59.640 --> 00:10:03.540
And I have to say really that we
get a lot of users through

00:10:03.540 --> 00:10:07.950
all the source, Google, so it
actually is a really great

00:10:07.950 --> 00:10:09.090
integration so far.

00:10:09.090 --> 00:10:10.970
And we are looking forward
for version two.

00:10:14.180 --> 00:10:17.600
When the beta test was
conducted, we looked at the

00:10:17.600 --> 00:10:20.930
API to actually try to
figure out what can

00:10:20.930 --> 00:10:22.450
we do with the API?

00:10:22.450 --> 00:10:27.870
Where are the best pinpoints to
create a great experience

00:10:27.870 --> 00:10:28.880
for the users?

00:10:28.880 --> 00:10:32.510
And so we came up with a list
of things that we could do.

00:10:32.510 --> 00:10:36.000
Of course the obvious things
that we already have seen is

00:10:36.000 --> 00:10:39.930
to Create new thing, like for
us it's Create new mind map.

00:10:39.930 --> 00:10:42.610
Edit existing mind maps, in
there we also wanted to

00:10:42.610 --> 00:10:46.370
support various different
formats.

00:10:46.370 --> 00:10:48.670
There are a lot of mind mapping
formats out there.

00:10:48.670 --> 00:10:51.230
For example, mind manager
[? former ?], or iXmind or

00:10:51.230 --> 00:10:53.940
Free Mind, so we wanted
to be also the

00:10:53.940 --> 00:10:57.400
editor for these formats.

00:10:57.400 --> 00:10:59.927
Then Import mind maps
to Drive, of

00:10:59.927 --> 00:11:02.140
course, from our platform.

00:11:02.140 --> 00:11:07.070
Indexing, that was available
through the API.

00:11:07.070 --> 00:11:09.040
Export mind maps to Drive.

00:11:09.040 --> 00:11:11.260
Adding attachments from Drive.

00:11:11.260 --> 00:11:13.840
And then, of course, MindMeister
supports real time

00:11:13.840 --> 00:11:16.470
collaboration like, for example,
Google Docs or Google

00:11:16.470 --> 00:11:20.200
Spreadsheets, and we wanted
to even take this

00:11:20.200 --> 00:11:21.910
level to the platform.

00:11:21.910 --> 00:11:25.190
And I hope to show you
that in a minute.

00:11:25.190 --> 00:11:29.400
And then we added-- because we
already were in a run, let's

00:11:29.400 --> 00:11:32.240
say, or in a sprint of
implementing features, so we

00:11:32.240 --> 00:11:36.930
thought, OK let's do the whole
thing, syncing mind maps,

00:11:36.930 --> 00:11:38.180
backup, et cetera.

00:11:40.640 --> 00:11:45.220
What kind of APIs did we use
through the integration?

00:11:45.220 --> 00:11:49.340
Because we created the use in
the background as well, we

00:11:49.340 --> 00:11:51.760
needed to access the
information.

00:11:51.760 --> 00:11:54.570
So we had OAuth 2.0,
OpenID Connect.

00:11:54.570 --> 00:11:58.330
We also used user info profile
and user info email to get the

00:11:58.330 --> 00:12:02.620
email address of the user and
to get access to his first

00:12:02.620 --> 00:12:06.000
name, last name to create the
credentials on our side.

00:12:06.000 --> 00:12:14.870
And then we used the Drive file
API to store and get the

00:12:14.870 --> 00:12:16.450
files from Drive.

00:12:16.450 --> 00:12:20.140
We also used the contact
API just to invite

00:12:20.140 --> 00:12:23.220
people to our mind maps.

00:12:23.220 --> 00:12:26.740
And last but not least, the
Picker API to actually get

00:12:26.740 --> 00:12:29.350
content from Drive
into our product.

00:12:32.740 --> 00:12:34.290
Let's switch to the
demonstration.

00:12:39.580 --> 00:12:43.570
First of all, before you can use
MindMeister in Drive, you

00:12:43.570 --> 00:12:45.310
need to install the application
through

00:12:45.310 --> 00:12:46.680
the Chrome Web Store.

00:12:46.680 --> 00:12:52.060
And once this is done, you can
actually go to Drive and

00:12:52.060 --> 00:12:53.620
create a mind map from there.

00:12:53.620 --> 00:12:57.390
So we just press the Create
button, go to More, and then

00:12:57.390 --> 00:13:01.280
we should just say Mind Map.

00:13:01.280 --> 00:13:03.790
And in case the user doesn't
exist at this point, it's

00:13:03.790 --> 00:13:04.770
created the background.

00:13:04.770 --> 00:13:07.560
The user on our side is created
in the background.

00:13:07.560 --> 00:13:12.510
Everything is set up, and the
editor shows up, and we can

00:13:12.510 --> 00:13:15.060
start creating the mind map.

00:13:15.060 --> 00:13:16.480
Let's plan a vacation.

00:13:20.830 --> 00:13:24.040
And let's do a trip to New
York, for example.

00:13:24.040 --> 00:13:26.920
You can just outline
your whole--

00:13:26.920 --> 00:13:27.720
we say [INAUDIBLE]

00:13:27.720 --> 00:13:28.450
for example.

00:13:28.450 --> 00:13:35.340
And continue mind map
your vacation.

00:13:35.340 --> 00:13:37.750
I'm doing the whole
thing here.

00:13:37.750 --> 00:13:44.160
And if we switch back to the
listing, we immediately see

00:13:44.160 --> 00:13:46.970
our mind map in Drive, so it's
already synced in the

00:13:46.970 --> 00:13:49.250
background to Drive.

00:13:49.250 --> 00:13:52.810
And I can also open it
from there again.

00:13:52.810 --> 00:13:57.360
But let's take another mind
map that I created

00:13:57.360 --> 00:13:58.610
previously--

00:13:58.610 --> 00:14:01.930
MindMeister Google integration
here, which is actually a

00:14:01.930 --> 00:14:07.360
summary of what I told you
before in the slides.

00:14:07.360 --> 00:14:15.610
And you see all the information
also visually here

00:14:15.610 --> 00:14:18.710
with icons, with graphics,
et cetera.

00:14:18.710 --> 00:14:23.220
And from here I can do various
things through Drive, or with

00:14:23.220 --> 00:14:23.920
the help of Drive.

00:14:23.920 --> 00:14:29.050
For example I can export this
into various formats.

00:14:29.050 --> 00:14:33.580
And let's take for example a
PowerPoint file, which is

00:14:33.580 --> 00:14:35.830
basically slides.

00:14:35.830 --> 00:14:39.480
And I can just press a button
here, Export to Google Drive,

00:14:39.480 --> 00:14:46.050
and the mind map is converted
into slides and then stored in

00:14:46.050 --> 00:14:47.240
the Google drive.

00:14:47.240 --> 00:14:51.920
Hold on, if I go back here we
see here it is, and if I open

00:14:51.920 --> 00:14:55.800
it, it's basically a conversion
of the mind map

00:14:55.800 --> 00:15:01.330
into slides that I can probably
edit, pep up a little

00:15:01.330 --> 00:15:05.830
bit and have a nice
presentation

00:15:05.830 --> 00:15:09.070
out of the mind map.

00:15:09.070 --> 00:15:15.630
So back to the mind map, we can
also import files that are

00:15:15.630 --> 00:15:18.230
in Google Drive, for
example images.

00:15:18.230 --> 00:15:22.690
So let's upload a file
here from Drive.

00:15:22.690 --> 00:15:26.510
I have prepared a little Android
tablet screenshot from

00:15:26.510 --> 00:15:28.500
our upcoming release.

00:15:28.500 --> 00:15:33.900
Just take that, and see it's
here as an attachment, and you

00:15:33.900 --> 00:15:38.765
see a nice tablet version of
MindMeister on the tablet.

00:15:43.660 --> 00:15:47.940
I can also invite people to do
the [INAUDIBLE] collaboration.

00:15:47.940 --> 00:15:53.030
So I already set up this mind
map to have a collaborator.

00:15:53.030 --> 00:15:55.320
I can do that through
Drive as well.

00:15:55.320 --> 00:15:58.840
I just go to the Share button
in Drive and invite someone

00:15:58.840 --> 00:16:01.510
else, which is my colleague
here in the first row.

00:16:01.510 --> 00:16:04.590
And he just joined me,
Mr. [INAUDIBLE].

00:16:04.590 --> 00:16:13.350
And we can mind map together on
the mind map, or let him do

00:16:13.350 --> 00:16:17.560
the work by adding new
ideas to the product

00:16:17.560 --> 00:16:18.720
section, for example.

00:16:18.720 --> 00:16:24.090
So we have an iPad version and
an iPhone version, so we

00:16:24.090 --> 00:16:27.010
support all of the real
time collaboration.

00:16:27.010 --> 00:16:29.850
And all the content is stored
in Google Drive.

00:16:35.490 --> 00:16:40.630
Last but not least, if we
go back to our product,

00:16:40.630 --> 00:16:48.150
MindMeister, we have a couple of
features here as well that

00:16:48.150 --> 00:16:51.140
are based on Drive.

00:16:51.140 --> 00:16:52.506
If I go to the Settings,
for example--

00:16:55.750 --> 00:16:59.957
first of all, you see all the
mind maps that are actually in

00:16:59.957 --> 00:17:03.180
sync or that are stored in
Google Drive from here.

00:17:03.180 --> 00:17:08.780
And you can enable sync mode.

00:17:08.780 --> 00:17:14.329
So on our Tools tab we have
Google Drive sync.

00:17:14.329 --> 00:17:18.869
And this syncs the mind maps
back and forth, which means

00:17:18.869 --> 00:17:21.589
that they are stored in Google
Drive, but they also stored in

00:17:21.589 --> 00:17:22.260
our product.

00:17:22.260 --> 00:17:28.200
And we have a kind of table
that maps the IDs from

00:17:28.200 --> 00:17:31.980
MindMeister to the IDs of
the Google Document.

00:17:31.980 --> 00:17:35.220
We also have an export feature
here where you can export to

00:17:35.220 --> 00:17:37.070
Google Drive.

00:17:37.070 --> 00:17:39.930
So it packs all your MindMeister
files into one zip

00:17:39.930 --> 00:17:46.420
file and stores it as a backup
in Google Drive.

00:17:46.420 --> 00:17:50.270
Last but not least, the last
thing I want to show is you

00:17:50.270 --> 00:17:53.880
can also share from
MindMeister.

00:17:53.880 --> 00:17:59.770
We can actually share a mind map
here, and we get through

00:17:59.770 --> 00:18:06.320
the Contacts API my friends
from Google.

00:18:06.320 --> 00:18:07.770
So I can--

00:18:07.770 --> 00:18:11.410
the Google Contacts, and I can
share the mind map, and

00:18:11.410 --> 00:18:13.950
they'll get notification
and can join me in the

00:18:13.950 --> 00:18:16.360
collaborative session.

00:18:16.360 --> 00:18:20.020
I think there's one thing
that I forgot, which

00:18:20.020 --> 00:18:22.560
is basically the--

00:18:22.560 --> 00:18:25.740
oh the Picker API, I showed
that already.

00:18:25.740 --> 00:18:27.250
That's it for the demo.

00:18:27.250 --> 00:18:29.070
Thanks for listening.

00:18:29.070 --> 00:18:30.320
Back to Nicolas.

00:18:39.540 --> 00:18:40.610
NICOLAS GARNER: Thank
you Till.

00:18:40.610 --> 00:18:43.870
I'd like to thank Till and his
team for doing such great work

00:18:43.870 --> 00:18:45.040
on their integration.

00:18:45.040 --> 00:18:47.480
I know they've worked
really hard.

00:18:47.480 --> 00:18:50.360
And I really like this real
time collaboration

00:18:50.360 --> 00:18:51.280
feature they have.

00:18:51.280 --> 00:18:53.210
And now with their Drive
integration, it really feels

00:18:53.210 --> 00:18:55.870
that you're using any
other native Google

00:18:55.870 --> 00:18:57.500
Document format, right?

00:18:57.500 --> 00:18:59.350
You can just share a
mind map on a Drive

00:18:59.350 --> 00:19:00.700
with any other users.

00:19:00.700 --> 00:19:03.880
If both of them open it from
Drive, they will be put in

00:19:03.880 --> 00:19:05.460
collaboration.

00:19:05.460 --> 00:19:07.480
That's really cool, and that's
the same kind of experience we

00:19:07.480 --> 00:19:10.510
have in Google Documents, or
Google Spreadsheets, or Google

00:19:10.510 --> 00:19:11.790
Presentation.

00:19:11.790 --> 00:19:15.880
And now it feels the same, for
example, on MindMeister.

00:19:15.880 --> 00:19:18.660
So thanks again.

00:19:18.660 --> 00:19:22.330
Now, well I've already
unveiled who it was.

00:19:22.330 --> 00:19:27.340
The second company who's here
with us today is Cloud9 IDE.

00:19:27.340 --> 00:19:31.570
They've been part of our Drive
SDK version two Trusted Tester

00:19:31.570 --> 00:19:35.670
program, so they have some
really cool stuff to show you.

00:19:35.670 --> 00:19:38.310
So please welcome Rik
Arends, the CTO and

00:19:38.310 --> 00:19:39.680
Founder of Cloud9 IDE.

00:19:45.830 --> 00:19:48.200
RIK ARENDS: I think I have
a few slides here.

00:19:52.910 --> 00:19:54.090
Oh, wrong computer?

00:19:54.090 --> 00:19:57.480
This computer.

00:19:57.480 --> 00:20:00.050
So what is Cloud9 IDE?

00:20:00.050 --> 00:20:02.520
We're building a complete
IDE in the cloud.

00:20:02.520 --> 00:20:06.700
That means collaborative
editing, running your code--

00:20:06.700 --> 00:20:10.280
Python, Ruby, PHP,
and Node.js.

00:20:10.280 --> 00:20:13.310
Cloud9 is built on HTML5
and Node.js.

00:20:13.310 --> 00:20:16.320
So those are our native
technologies.

00:20:16.320 --> 00:20:19.000
We have code completion for
JavaScript, which is a fairly

00:20:19.000 --> 00:20:21.300
unique feature, because
JavaScript is weekly typed, so

00:20:21.300 --> 00:20:24.820
we have a lot of effort in
code analysis going on.

00:20:24.820 --> 00:20:30.970
And all your code is
running in your

00:20:30.970 --> 00:20:32.440
workspace in the cloud.

00:20:32.440 --> 00:20:36.230
So you don't have any
differences anymore between

00:20:36.230 --> 00:20:39.150
workspaces, which is really
great if you're trying to work

00:20:39.150 --> 00:20:39.930
instead of trying to

00:20:39.930 --> 00:20:41.400
synchronize environment variables.

00:20:46.620 --> 00:20:50.060
You get your own little bit of
Compute and Run for your code

00:20:50.060 --> 00:20:54.920
online exactly geared
towards development.

00:20:54.920 --> 00:20:59.450
Teams can avoid configuration
issues, management issues.

00:20:59.450 --> 00:21:00.960
We have a full terminal now.

00:21:00.960 --> 00:21:02.290
We just released this today.

00:21:02.290 --> 00:21:04.940
So you can do Vim and all
these kinds of editing.

00:21:04.940 --> 00:21:09.790
And the workspace URL
is a sharable URL.

00:21:09.790 --> 00:21:12.520
So one of the really cool
features I just saw was that

00:21:12.520 --> 00:21:16.120
if you integrate from Drive,
you can enable your

00:21:16.120 --> 00:21:17.890
collaboration features
in a similar way.

00:21:17.890 --> 00:21:20.200
That's not an integration that
we've done yet, but it looks

00:21:20.200 --> 00:21:21.373
very interesting.

00:21:21.373 --> 00:21:25.760
So I said we use Node.js as our
back end technology, which

00:21:25.760 --> 00:21:30.180
is awesome and a challenge,
because it means that we can

00:21:30.180 --> 00:21:33.260
scale very well, but we
also have full dynamic

00:21:33.260 --> 00:21:34.210
code base in the back.

00:21:34.210 --> 00:21:39.290
So that means you have to think
about how you do things.

00:21:39.290 --> 00:21:45.090
So the Google Drive integration
API, Cloud9 uses a

00:21:45.090 --> 00:21:50.370
virtual file system
behind the IDE.

00:21:50.370 --> 00:21:53.940
And this virtual file system
effectively abstracts all our

00:21:53.940 --> 00:21:55.490
file access.

00:21:55.490 --> 00:21:59.880
So that means that to make a
very nice mapping to Google

00:21:59.880 --> 00:22:02.810
Drive, we effectively mapped our
virtual file system in the

00:22:02.810 --> 00:22:05.880
back to the Google Drive API.

00:22:05.880 --> 00:22:08.920
So here you can see that you
can then save a JavaScript

00:22:08.920 --> 00:22:15.790
file from Cloud9 directly onto
your Google Drive, which is of

00:22:15.790 --> 00:22:16.990
course very basic.

00:22:16.990 --> 00:22:21.650
But it is nonetheless very
useful to be able to use a

00:22:21.650 --> 00:22:23.540
full IDE on your Drive.

00:22:23.540 --> 00:22:25.710
Right now we've virtualized
access, so that means that

00:22:25.710 --> 00:22:28.400
where accessing the API
for every file.

00:22:28.400 --> 00:22:32.950
We don't actually sync your
entire Drive contents to a

00:22:32.950 --> 00:22:35.755
server of ours, but that could
definitely be a cool feature

00:22:35.755 --> 00:22:40.270
if you also want to run
your Java source.

00:22:40.270 --> 00:22:44.810
But it will take extra time if
you just want to edit it.

00:22:44.810 --> 00:22:48.550
Another thing is images
and upload.

00:22:48.550 --> 00:22:56.080
Here we're going to upload an
image and show it in Drive.

00:23:00.030 --> 00:23:01.110
My video cut short.

00:23:01.110 --> 00:23:06.790
But I want to show you some
code, some actual code that we

00:23:06.790 --> 00:23:08.040
use for this integration.

00:23:13.920 --> 00:23:16.030
This is effectively our
Drive integration

00:23:16.030 --> 00:23:18.450
code that we're using.

00:23:18.450 --> 00:23:20.030
This is Node.js.

00:23:20.030 --> 00:23:27.160
We talk to OAuth with a token,
and then we effectively just

00:23:27.160 --> 00:23:31.410
talk against the HTTP APIs here,
iteratively to get our

00:23:31.410 --> 00:23:33.770
files and build up the
virtual file system.

00:23:36.710 --> 00:23:39.990
One of the optimizations that
we run into is that maybe I

00:23:39.990 --> 00:23:43.990
didn't look at the 2.0 APIs yet,
but maybe one of the APIs

00:23:43.990 --> 00:23:46.940
can make it a lot easier to do
batch processing of lists of

00:23:46.940 --> 00:23:48.985
files, because everything
is stored by ID.

00:23:48.985 --> 00:23:51.960
You have to do a lot of
requests to get IDs.

00:23:51.960 --> 00:23:55.220
There are definitely
ways to get more

00:23:55.220 --> 00:23:56.600
tight integration going.

00:23:56.600 --> 00:24:00.400
So if you do it really in a
basic way, it might take too

00:24:00.400 --> 00:24:02.410
long to get all the information
from Drive that

00:24:02.410 --> 00:24:04.300
you want to represent
in your UI.

00:24:04.300 --> 00:24:06.800
So there's different
ways to do it.

00:24:06.800 --> 00:24:10.150
I definitely could say that we
still have some optimization

00:24:10.150 --> 00:24:12.580
here, but it's actually
a pretty clean and

00:24:12.580 --> 00:24:13.850
simple API to talk to.

00:24:17.440 --> 00:24:23.240
And another thing I wanted to
show was what was coming up

00:24:23.240 --> 00:24:27.440
for Cloud9, because it's
a nice demo moment.

00:24:27.440 --> 00:24:31.920
And you can all see that this
text editor starts to become a

00:24:31.920 --> 00:24:34.590
little bit chuggy
when it scrolls.

00:24:34.590 --> 00:24:38.480
For that reason, we have used
another cool feature that

00:24:38.480 --> 00:24:42.330
Google is enabling for many
developers, and that is to use

00:24:42.330 --> 00:24:45.840
WebGL as a text viewer.

00:24:45.840 --> 00:24:50.160
So this is actually sub-pixel
anti-aliased text now.

00:24:50.160 --> 00:24:53.500
So the browser is becoming an
actual really cool platform

00:24:53.500 --> 00:24:58.380
with Drive in Chrome,
as you can see.

00:24:58.380 --> 00:25:02.260
You can do this kind of
performance on a MacBook Air,

00:25:02.260 --> 00:25:06.360
which is not necessarily the
most overpowered video card.

00:25:06.360 --> 00:25:08.310
I think we can see where
we're going in terms of

00:25:08.310 --> 00:25:10.510
responsiveness of
the application.

00:25:10.510 --> 00:25:15.150
So soon with Google Drive and
an application like Cloud9,

00:25:15.150 --> 00:25:17.370
the whole experience of the
application will actually

00:25:17.370 --> 00:25:19.120
start improving desktop
applications.

00:25:19.120 --> 00:25:21.850
You don't have to bother where
your files are anymore.

00:25:21.850 --> 00:25:23.090
They're in the cloud.

00:25:23.090 --> 00:25:25.650
You don't have to actually get
a lesser experience, because

00:25:25.650 --> 00:25:30.110
we can now get a better
experience on the web.

00:25:30.110 --> 00:25:32.310
And another really cool feature
that's a little bit of

00:25:32.310 --> 00:25:35.650
a lab project-- this will make
it out into the release pretty

00:25:35.650 --> 00:25:39.170
quickly, but this one is a
real bit more tricky--

00:25:39.170 --> 00:25:45.160
and that is that because you
have now more screen space,

00:25:45.160 --> 00:25:46.910
you can actually start
to do full code

00:25:46.910 --> 00:25:48.160
traces of all your code.

00:25:52.370 --> 00:25:54.570
It's two different screens.

00:25:54.570 --> 00:25:56.880
But as you can see, I just
reloaded the server, and it

00:25:56.880 --> 00:26:02.040
dumped a full code trace of
what is going on in the

00:26:02.040 --> 00:26:03.270
Node.js code here.

00:26:03.270 --> 00:26:05.710
This is a very simple Node
example that is just loading

00:26:05.710 --> 00:26:08.860
files, and doing web sockets,
and that kind of stuff.

00:26:08.860 --> 00:26:12.830
But you can see that as soon as
we get more and more lines

00:26:12.830 --> 00:26:16.320
of information that are useful
to see what's going on, we

00:26:16.320 --> 00:26:20.120
might also want to get a more

00:26:20.120 --> 00:26:22.670
high-detailed view on the data.

00:26:22.670 --> 00:26:28.610
So if you can scroll through
code tracings like this, then

00:26:28.610 --> 00:26:30.190
it's going to be
pretty awesome.

00:26:30.190 --> 00:26:32.660
The only problem is as soon
as I turn on tracing, I

00:26:32.660 --> 00:26:34.860
effectively blowout of virtual
NIC somewhere.

00:26:34.860 --> 00:26:37.990
So we're going to have to make
sure that we stream the data

00:26:37.990 --> 00:26:41.140
to the client in a cloud
appropriate manner.

00:26:41.140 --> 00:26:44.650
But other than that, these
are the two features

00:26:44.650 --> 00:26:47.680
that I wanted to show.

00:26:47.680 --> 00:26:51.810
I think I also have a video
of collaboration.

00:26:51.810 --> 00:26:57.270
That's going on, let's see,
did I fall out of my

00:26:57.270 --> 00:26:58.520
presentation somehow?

00:27:04.440 --> 00:27:07.120
All right, well then
collaboration will have to

00:27:07.120 --> 00:27:07.820
wait online.

00:27:07.820 --> 00:27:09.595
You can try it out
right now online.

00:27:09.595 --> 00:27:13.790
We will release the Google Drive
integration as soon as

00:27:13.790 --> 00:27:18.730
we think it's performance
ready to go, but it's

00:27:18.730 --> 00:27:19.980
going to come out.

00:27:22.430 --> 00:27:25.110
You can try Cloud9
online right now.

00:27:25.110 --> 00:27:27.750
We had a big launch today,
so I'm a little bit tired

00:27:27.750 --> 00:27:30.030
actually after working
all night.

00:27:30.030 --> 00:27:33.410
But it's pretty awesome.

00:27:33.410 --> 00:27:37.000
We have real time collaboration
on code, your

00:27:37.000 --> 00:27:40.160
own terminal, and the cloud
is going to be awesome.

00:27:40.160 --> 00:27:41.410
Thanks Google.

00:27:45.780 --> 00:27:47.700
NICOLAS GARNER: All right,
thank you Rik.

00:27:47.700 --> 00:27:50.250
What I actually really like
about Cloud9 integrating with

00:27:50.250 --> 00:27:55.160
Drive is that you can use Cloud9
to edit your code, your

00:27:55.160 --> 00:27:56.580
Java files for example.

00:27:56.580 --> 00:27:59.850
But you'll be able to use
other applications, for

00:27:59.850 --> 00:28:03.850
example Pixlr Editor to create
the image assets of your

00:28:03.850 --> 00:28:07.300
project if you're creating a
website or webapp, or even

00:28:07.300 --> 00:28:09.690
[INAUDIBLE]

00:28:09.690 --> 00:28:13.180
to schedule the development of
your website, and any other

00:28:13.180 --> 00:28:14.990
applications you could think
of that are integrated with

00:28:14.990 --> 00:28:17.910
Google Drive, and keep all these
files inside the same

00:28:17.910 --> 00:28:18.900
drive folder.

00:28:18.900 --> 00:28:20.960
So that's what's going to be
really cool is all this

00:28:20.960 --> 00:28:23.090
interaction between
all these apps.

00:28:23.090 --> 00:28:25.200
And Cloud9, thanks
for integrating.

00:28:25.200 --> 00:28:28.140
I was really waiting for this
actually, personally.

00:28:28.140 --> 00:28:31.090
I think it's an awesome think
what you just did.

00:28:33.670 --> 00:28:36.560
The third company who is here
with us today is actually

00:28:36.560 --> 00:28:40.550
pretty known to most Android
users in the room, since they

00:28:40.550 --> 00:28:46.130
were developing the official
image gallery that was shipped

00:28:46.130 --> 00:28:47.680
with most Android phones.

00:28:47.680 --> 00:28:49.400
And they're now extending
their horizon and have

00:28:49.400 --> 00:28:52.160
prepared some really cool stuff
to show you, using the

00:28:52.160 --> 00:28:54.640
version two of our SDK.

00:28:54.640 --> 00:28:58.260
So please welcome Austin
Shoemaker, the CTO and Founder

00:28:58.260 --> 00:28:59.510
of Cooliris.

00:29:02.730 --> 00:29:03.570
AUSTIN SHOEMAKER: Thanks.

00:29:03.570 --> 00:29:06.620
So quick introduction
to Cooliris.

00:29:06.620 --> 00:29:09.160
We're a Palo Alto based
company of 14.

00:29:09.160 --> 00:29:11.730
Two things that we're mostly
known for, one is

00:29:11.730 --> 00:29:12.990
the Cooliris 3D wall.

00:29:12.990 --> 00:29:15.480
This is a browser plug-in that
has seen about 45 million

00:29:15.480 --> 00:29:17.090
installs on desktop browsers.

00:29:17.090 --> 00:29:19.970
And also, as Nicolas mentioned,
we develop Android

00:29:19.970 --> 00:29:24.660
Gallery app that shipped with
Nexus phones back in the day,

00:29:24.660 --> 00:29:28.500
and even through today.

00:29:28.500 --> 00:29:31.400
What we're now focused on is
enabling a better, more

00:29:31.400 --> 00:29:34.070
personally relevant, more
immersive experience to

00:29:34.070 --> 00:29:37.590
discover media on mobile
and web platforms.

00:29:37.590 --> 00:29:40.750
And so we think we can really
bring together your personal

00:29:40.750 --> 00:29:44.130
cloud with the social networking
space, and create a

00:29:44.130 --> 00:29:46.710
much more intertwined
experience.

00:29:46.710 --> 00:29:50.840
And we'll show you some
of that today.

00:29:50.840 --> 00:29:53.590
When we were deciding how to
integrate with Google Drive,

00:29:53.590 --> 00:29:55.970
we had four goals
for this demo.

00:29:55.970 --> 00:29:58.520
The first is to build a visual
timeline of all of your media

00:29:58.520 --> 00:29:59.620
that's in Drive.

00:29:59.620 --> 00:30:02.080
The second is to enable
you to search by name

00:30:02.080 --> 00:30:04.010
or text in the images.

00:30:04.010 --> 00:30:07.020
So one really cool thing Drive
does is indexes your images

00:30:07.020 --> 00:30:12.380
for text using OCR, and also
recognizes landmarks in images

00:30:12.380 --> 00:30:13.940
and indexes those
as text as well.

00:30:13.940 --> 00:30:15.120
Super cool.

00:30:15.120 --> 00:30:17.420
And the third is instant
upload from

00:30:17.420 --> 00:30:18.940
camera directly to drive.

00:30:18.940 --> 00:30:22.190
And finally, the app is enabled
to update in real time

00:30:22.190 --> 00:30:23.690
as things change in the Drive.

00:30:23.690 --> 00:30:25.600
And then after the demo,
I'll explain how we

00:30:25.600 --> 00:30:27.860
built all these things.

00:30:27.860 --> 00:30:29.500
So this is our tablet
app here.

00:30:29.500 --> 00:30:32.240
So I can just jump into
Google Drive.

00:30:32.240 --> 00:30:34.750
This shows me all of the media
that's in my Drive, so I can

00:30:34.750 --> 00:30:37.100
browse through it in
this timeline.

00:30:37.100 --> 00:30:40.560
I can select any photo to view
it in high resolution.

00:30:40.560 --> 00:30:43.030
So I don't have to navigate in
and out of folders and go

00:30:43.030 --> 00:30:45.560
forward and back
in my browser.

00:30:45.560 --> 00:30:47.550
And, in addition to
just browsing

00:30:47.550 --> 00:30:49.070
content, I can search.

00:30:49.070 --> 00:30:52.590
So the first thing I'll
search for is flower.

00:30:52.590 --> 00:30:55.760
So the cool thing is
that these are not

00:30:55.760 --> 00:30:57.130
actually called flower.

00:30:57.130 --> 00:31:00.540
It's recognizing that there are
flowers in these pictures.

00:31:00.540 --> 00:31:02.110
This is all Google's demo.

00:31:02.110 --> 00:31:04.960
So we get credit for this, but
this is fricken cool, right?

00:31:07.570 --> 00:31:10.380
So if it can recognize objects,
another thing it can

00:31:10.380 --> 00:31:12.460
recognize actually
is landmarks.

00:31:12.460 --> 00:31:17.680
So if I search for Taj Mahal,
it will go through and find

00:31:17.680 --> 00:31:19.280
all of the images that actually

00:31:19.280 --> 00:31:20.510
contain the Taj Mahal.

00:31:20.510 --> 00:31:22.340
And one really cool thing--

00:31:22.340 --> 00:31:23.860
we just dumped a bunch
of photos from our

00:31:23.860 --> 00:31:24.860
India trip on here.

00:31:24.860 --> 00:31:27.540
In this photo it recognized the
Taj Mahal behind a bunch

00:31:27.540 --> 00:31:28.790
of my teammates.

00:31:28.790 --> 00:31:31.440
So this technology is just
amazing, and we're able to

00:31:31.440 --> 00:31:34.640
leverage it automatically
by just doing a query.

00:31:34.640 --> 00:31:37.550
And finally I'll do a
search for a place.

00:31:37.550 --> 00:31:40.180
So I can look for Germany.

00:31:40.180 --> 00:31:43.310
And we found this almost
by coincidence.

00:31:43.310 --> 00:31:45.360
It's actually finding landmarks
in the images.

00:31:45.360 --> 00:31:46.840
It knows they're in Germany,
and then it's

00:31:46.840 --> 00:31:48.540
showing them in the app.

00:31:48.540 --> 00:31:52.410
So these are all pictures
of places in Germany.

00:31:52.410 --> 00:31:55.070
So it's really powerful
and automatic.

00:31:55.070 --> 00:31:58.210
So that's an example of browsing
and searching media

00:31:58.210 --> 00:32:01.870
on my drive using the v2 API.

00:32:01.870 --> 00:32:03.640
The next thing I'd like to
show you is how this

00:32:03.640 --> 00:32:06.300
integrates with sharing
in Google Drive.

00:32:06.300 --> 00:32:09.640
So I'll switch over here.

00:32:09.640 --> 00:32:11.850
Here I have two different
Google Drive

00:32:11.850 --> 00:32:12.990
accounts logged in.

00:32:12.990 --> 00:32:17.130
I have this folder of images
from Barcelona, and I'd like

00:32:17.130 --> 00:32:19.410
to share that to the account
that's signed in over here.

00:32:22.760 --> 00:32:25.800
So I can just go to the standard
Google Drive Sharing

00:32:25.800 --> 00:32:33.785
API, and then Add the
demo accounts.

00:32:37.640 --> 00:32:52.940
And now that that's been
shared, I believe

00:32:52.940 --> 00:32:55.900
those photos are new.

00:32:55.900 --> 00:32:57.150
I think so.

00:33:03.850 --> 00:33:06.600
Yep, so you can see that the
photos from this folder have

00:33:06.600 --> 00:33:10.920
been shared into my
primary feed.

00:33:10.920 --> 00:33:13.970
So the next thing I'd like to
show is actually camera

00:33:13.970 --> 00:33:15.110
integration.

00:33:15.110 --> 00:33:17.680
We've built a very simple
camera app.

00:33:21.500 --> 00:33:29.950
And I can take pictures, and
that's uploading now, and just

00:33:29.950 --> 00:33:30.990
finished uploading.

00:33:30.990 --> 00:33:33.760
So now it appears in the
Drive pretty instantly.

00:33:33.760 --> 00:33:40.210
So I'll take another couple
pictures over here, and then

00:33:40.210 --> 00:33:43.000
as those upload, those will
stream through the Drive, and

00:33:43.000 --> 00:33:47.220
then we get changes from the
API, and they'll appear in the

00:33:47.220 --> 00:33:50.150
tablet screen.

00:33:50.150 --> 00:33:52.020
So those are the photos
that I just took.

00:33:57.290 --> 00:33:59.750
And one really cool thing you
can do with this integration,

00:33:59.750 --> 00:34:03.100
because we use Google APIs to
do single sign on with our

00:34:03.100 --> 00:34:05.860
account, in our app you can
share photos to private

00:34:05.860 --> 00:34:06.690
conversations.

00:34:06.690 --> 00:34:10.600
So here I can select one of
these photos I just took, and

00:34:10.600 --> 00:34:15.630
actually say I want to share
these photos into one of my

00:34:15.630 --> 00:34:16.679
conversations.

00:34:16.679 --> 00:34:18.719
So I have this conversation
going on with people back at

00:34:18.719 --> 00:34:22.060
the office for Google I/O, so
I can just tap here and it

00:34:22.060 --> 00:34:24.250
drops my photos into
the conversation.

00:34:24.250 --> 00:34:28.389
And now I can go out and view
that conversation here, and

00:34:28.389 --> 00:34:30.080
here are all the photos
that I just shared.

00:34:30.080 --> 00:34:32.989
So all of these files came from
my camera, through Google

00:34:32.989 --> 00:34:36.270
Drive, into our back end
service, and to the users that

00:34:36.270 --> 00:34:37.080
were in that group.

00:34:37.080 --> 00:34:40.365
So really easy to integrate
between the two services.

00:34:43.380 --> 00:34:45.770
And that is what I
wanted to demo.

00:34:45.770 --> 00:34:49.679
So now we'll get into how did
we build this, and a couple

00:34:49.679 --> 00:34:52.260
things that we learned while
doing it that maybe will be

00:34:52.260 --> 00:34:54.520
helpful for those of you who
are planning on doing some

00:34:54.520 --> 00:34:55.780
integrations.

00:34:55.780 --> 00:34:59.360
So things that we used, the
Objective-C client library is

00:34:59.360 --> 00:35:00.960
in alpha now, so you
can get that.

00:35:00.960 --> 00:35:03.380
That will handle OAuth
authentication, authorization,

00:35:03.380 --> 00:35:06.130
and then provides a wrapper
around the API that makes it a

00:35:06.130 --> 00:35:07.730
bit easier to use.

00:35:07.730 --> 00:35:11.420
So we use OpenID Connect with
OAuth 2.0, so that gives us

00:35:11.420 --> 00:35:14.080
the user's email address
and profile, very easy.

00:35:14.080 --> 00:35:16.100
We request the drive scope.

00:35:16.100 --> 00:35:17.830
So there are different scopes
that you can request to

00:35:17.830 --> 00:35:20.160
authorize to different things
in Google Drive.

00:35:20.160 --> 00:35:21.270
The drive scope gives
you access to

00:35:21.270 --> 00:35:22.030
all the user's files.

00:35:22.030 --> 00:35:24.990
This lets you build something
that accesses everything.

00:35:24.990 --> 00:35:27.260
The drive.file scope gives you
access to files that are

00:35:27.260 --> 00:35:30.340
created or opened by the app,
but since we wanted to let you

00:35:30.340 --> 00:35:32.990
access everything, we
request this scope.

00:35:32.990 --> 00:35:38.050
And we're using API's from the
v2 release of the API.

00:35:38.050 --> 00:35:41.610
For browsing and searching
images, this is our recipe.

00:35:41.610 --> 00:35:45.610
We request the files list, and
you can specify a query.

00:35:45.610 --> 00:35:47.010
One cool thing about
Google Drive

00:35:47.010 --> 00:35:48.470
Queries is their structure.

00:35:48.470 --> 00:35:51.130
You can actually give it a
conjunction of search terms.

00:35:51.130 --> 00:35:55.030
So here what we do is we request
from the full text

00:35:55.030 --> 00:35:57.250
index something that contains
what user types, so like

00:35:57.250 --> 00:36:00.735
"sunset." We request only
images, and we request things

00:36:00.735 --> 00:36:02.490
that haven't been trashed.

00:36:02.490 --> 00:36:04.830
And then when this response
comes back, you get a list of

00:36:04.830 --> 00:36:07.600
file objects, and it includes
the next link that you can use

00:36:07.600 --> 00:36:08.290
to paginate through.

00:36:08.290 --> 00:36:11.810
So really easy to get a
paginateable list of results

00:36:11.810 --> 00:36:13.660
for a specific query.

00:36:13.660 --> 00:36:16.830
And a couple of things to note,
you can go and make your

00:36:16.830 --> 00:36:19.320
requests way faster if you
do these things, and it's

00:36:19.320 --> 00:36:21.390
documented on the API,
but I just wanted to

00:36:21.390 --> 00:36:22.640
quickly point it out.

00:36:22.640 --> 00:36:24.160
Partial responses--

00:36:24.160 --> 00:36:26.770
there's a ton of metadata that
gets returned with every file,

00:36:26.770 --> 00:36:29.420
so if you say which attributes
you care about, it can return

00:36:29.420 --> 00:36:31.590
a partial response which is
much more compact, and it

00:36:31.590 --> 00:36:33.110
loads a lot faster.

00:36:33.110 --> 00:36:34.420
You can reduce the page size.

00:36:34.420 --> 00:36:37.550
So if you say maxResults and set
it to something like 20,

00:36:37.550 --> 00:36:39.770
the page sizes will be smaller,
and then you can page

00:36:39.770 --> 00:36:43.040
more frequently and lower
your initial load time.

00:36:43.040 --> 00:36:46.030
Enabling Gzip responses is easy,
and it makes responses

00:36:46.030 --> 00:36:47.040
come back faster.

00:36:47.040 --> 00:36:49.140
And they're more tips
on the API website,

00:36:49.140 --> 00:36:51.140
which is really cool.

00:36:51.140 --> 00:36:52.640
This is the next thing
that we did.

00:36:52.640 --> 00:36:54.440
You saw the real
time updating.

00:36:54.440 --> 00:36:57.780
There's not yet a push API, but
we're able to implement

00:36:57.780 --> 00:37:01.110
efficient change pulling by
synchronizing from the change

00:37:01.110 --> 00:37:03.890
list that's built
into the API.

00:37:03.890 --> 00:37:08.670
This is basically the best way
to load a collection and then

00:37:08.670 --> 00:37:09.900
bring it up to date.

00:37:09.900 --> 00:37:12.750
So About basically tells you
about the status of the Drive.

00:37:12.750 --> 00:37:15.130
So all of the information
that you need to know.

00:37:15.130 --> 00:37:17.860
The most interesting one for
this is largestChangeid.

00:37:17.860 --> 00:37:19.810
So every update to Drive
increments the

00:37:19.810 --> 00:37:21.430
Changeid for the Drive.

00:37:21.430 --> 00:37:23.886
And that gives you
a number you can

00:37:23.886 --> 00:37:25.450
use to pull for changes.

00:37:25.450 --> 00:37:28.360
So you first get the
largestChangeid, which is then

00:37:28.360 --> 00:37:30.570
going to be a lower bound
for the changes in

00:37:30.570 --> 00:37:31.990
any subsequent request.

00:37:31.990 --> 00:37:35.270
So when you get files, then any
changes that occur after

00:37:35.270 --> 00:37:37.800
that will be since the
largestChangeid that you got

00:37:37.800 --> 00:37:38.810
in step one.

00:37:38.810 --> 00:37:41.460
So after you start paging
through files, you can start

00:37:41.460 --> 00:37:45.160
to actually pull changes at
whatever rate you want, or

00:37:45.160 --> 00:37:48.980
when people hit refresh, and
you pass startChangeid with

00:37:48.980 --> 00:37:51.080
the one greater than the
largest Changeid

00:37:51.080 --> 00:37:52.660
that you got before.

00:37:52.660 --> 00:37:55.540
And this way you can, instead of
re-querying and pulling the

00:37:55.540 --> 00:37:57.570
entire list of results
back, you can

00:37:57.570 --> 00:37:59.750
get just what's changed.

00:37:59.750 --> 00:38:01.760
And so if you say includeDeleted
equals true,

00:38:01.760 --> 00:38:03.660
it'll give you tombstones, which
you can use to remove

00:38:03.660 --> 00:38:05.300
stuff that has been removed
from the Drive

00:38:05.300 --> 00:38:07.500
from your local cache.

00:38:07.500 --> 00:38:11.000
So if you use the ID of the
file, it's really easy to do

00:38:11.000 --> 00:38:11.620
correspondence.

00:38:11.620 --> 00:38:14.320
You can see, OK here's
a change file.

00:38:14.320 --> 00:38:15.710
This is the local
cache I have.

00:38:15.710 --> 00:38:18.040
I can either update it or
move it if the deleted

00:38:18.040 --> 00:38:19.660
flag is set to true.

00:38:19.660 --> 00:38:21.800
And then it returns a new
largestChangeid which you can

00:38:21.800 --> 00:38:24.100
use in your next request.

00:38:24.100 --> 00:38:26.820
So this is the recipe
for that.

00:38:26.820 --> 00:38:30.630
It's pretty quick to implement
and very fast.

00:38:30.630 --> 00:38:33.790
And there are rumors that they
push channel will come in the

00:38:33.790 --> 00:38:36.520
future, and then we will be
able to avoid the evil of

00:38:36.520 --> 00:38:41.040
polling, but in the meantime,
that's how you do it.

00:38:41.040 --> 00:38:42.630
And then for uploading, there
are three ways you

00:38:42.630 --> 00:38:43.780
can upload to Drive.

00:38:43.780 --> 00:38:47.390
So for our camera app we looked
at these possibilities.

00:38:47.390 --> 00:38:49.770
Media is the simplest one,
though it's limited to two

00:38:49.770 --> 00:38:51.500
megabytes, and you
add megadata.

00:38:51.500 --> 00:38:53.090
So we picked multipart.

00:38:53.090 --> 00:38:56.460
It's a simple HTTP request
multipart MIME document.

00:38:56.460 --> 00:38:59.710
The first part is metadata, so
you can specify the title and

00:38:59.710 --> 00:39:00.990
any other information
you want.

00:39:00.990 --> 00:39:02.730
And then the other part
is the binary data.

00:39:02.730 --> 00:39:04.480
So we use that.

00:39:04.480 --> 00:39:08.110
There's also a resumable upload
type, which is useful

00:39:08.110 --> 00:39:10.210
if you have a large upload and
you want to be able to

00:39:10.210 --> 00:39:12.650
continue from where you left
off if you get interrupted.

00:39:12.650 --> 00:39:13.920
So that's great for
large uploads

00:39:13.920 --> 00:39:15.170
on unreliable networks.

00:39:17.820 --> 00:39:20.140
Using the API has been a really
great experience.

00:39:20.140 --> 00:39:23.340
And I think that the search
powered by OCR and image

00:39:23.340 --> 00:39:27.560
recognition is really, really
useful and awesome, and it's

00:39:27.560 --> 00:39:29.110
great to get that for free.

00:39:29.110 --> 00:39:31.170
And looking forward to--

00:39:31.170 --> 00:39:34.370
push notifications will be
great; getting more metadata

00:39:34.370 --> 00:39:39.640
around files, like image
metadata, Exif; and actually

00:39:39.640 --> 00:39:41.405
getting information from
the recognizer

00:39:41.405 --> 00:39:43.930
are on my wish list.

00:39:43.930 --> 00:39:45.690
Though there's a lot
of work with now.

00:39:45.690 --> 00:39:48.460
And it's very exciting to be
able to build experiences

00:39:48.460 --> 00:39:50.000
around this product.

00:39:50.000 --> 00:39:52.560
So that is all I have today.

00:39:52.560 --> 00:39:53.830
Thank you for your time.

00:40:00.210 --> 00:40:00.880
NICOLAS GARNER: All
right, Austin.

00:40:00.880 --> 00:40:02.630
Thank you, Austin.

00:40:02.630 --> 00:40:05.710
It's actually a really cool
showcase of the OCR image

00:40:05.710 --> 00:40:09.080
recognition that is built in
Google Drive and not available

00:40:09.080 --> 00:40:12.000
to you through the API.

00:40:12.000 --> 00:40:17.740
So everyone, there is still a
lot of space left for you to

00:40:17.740 --> 00:40:18.420
build [INAUDIBLE]

00:40:18.420 --> 00:40:19.140
apps.

00:40:19.140 --> 00:40:22.880
For example, as far as I know,
there is no application that

00:40:22.880 --> 00:40:27.260
handles the following file
formats that are listed here.

00:40:27.260 --> 00:40:30.670
Personally I'd really like to
see an animated GIF editor.

00:40:30.670 --> 00:40:31.800
That'd be pretty cool.

00:40:31.800 --> 00:40:35.500
But most generally, I think most
apps could make good use

00:40:35.500 --> 00:40:38.600
of integrating with a user
managed storage, such as

00:40:38.600 --> 00:40:41.610
Google Drive, And we really,
really need you guys to build

00:40:41.610 --> 00:40:45.650
cool and useful Drive apps that
will make Google Drive a

00:40:45.650 --> 00:40:48.120
really interesting
online storage

00:40:48.120 --> 00:40:49.590
solution for our users.

00:40:49.590 --> 00:40:52.060
That's going to be one of the
big, big selling points for

00:40:52.060 --> 00:40:53.860
Google Drives is your
apps actually.

00:40:53.860 --> 00:40:56.640
So please guys, build
great apps.

00:40:56.640 --> 00:40:58.210
And that's it actually.

00:40:58.210 --> 00:40:59.460
Thank you very much
for coming.

00:41:05.770 --> 00:41:08.605
And of course I'd like to thank
again Till, Rik, and

00:41:08.605 --> 00:41:09.850
Austin for all the work
they've done.

00:41:09.850 --> 00:41:12.550
And we'll be happy to take
questions, all of us.

00:41:12.550 --> 00:41:16.070
So guys, if you can
come on stage.

00:41:16.070 --> 00:41:19.870
And if anyone has questions,
please feel free to walk close

00:41:19.870 --> 00:41:21.880
to the microphones
in the room.

00:41:28.190 --> 00:41:29.440
They're all fleeing.

00:41:35.470 --> 00:41:37.070
All right, cool, we have
one question here.

00:41:37.070 --> 00:41:40.490
AUDIENCE: The Objective-C
client API.

00:41:40.490 --> 00:41:41.995
Is that something you
built yourself,

00:41:41.995 --> 00:41:43.900
or is it open source?

00:41:43.900 --> 00:41:45.620
NICOLAS GARNER: Sorry,
could you repeat?

00:41:45.620 --> 00:41:47.210
I didn't get the beginning.

00:41:47.210 --> 00:41:50.780
AUDIENCE: The [? iPad ?] app
with what the Objective-C

00:41:50.780 --> 00:41:51.480
client API.

00:41:51.480 --> 00:41:54.990
Is it a open source client--

00:41:54.990 --> 00:41:56.030
AUSTIN SHOEMAKER: The
Objective-C client library?

00:41:56.030 --> 00:41:57.230
It's open source.

00:41:57.230 --> 00:41:58.070
AUDIENCE: OK.

00:41:58.070 --> 00:42:02.760
NICOLAS GARNER: Yes, I think we
released it this week, or

00:42:02.760 --> 00:42:04.640
like a few days ago.

00:42:04.640 --> 00:42:06.920
It's built by Google,
and it's available--

00:42:06.920 --> 00:42:10.400
I mean, it was already available
for our other APIs

00:42:10.400 --> 00:42:16.330
we had, and we just released a
Google Drive version of it.

00:42:16.330 --> 00:42:21.710
It allows you to easily do
things like authorization and

00:42:21.710 --> 00:42:23.890
authentication using OS/2.

00:42:23.890 --> 00:42:26.980
That's all built in for you, and
then all the useful Drive

00:42:26.980 --> 00:42:28.130
API access.

00:42:28.130 --> 00:42:31.650
We made that really
easy as well.

00:42:31.650 --> 00:42:34.290
Thank you.

00:42:34.290 --> 00:42:36.880
Yeah, OK in front.

00:42:36.880 --> 00:42:41.970
AUDIENCE: Does Cloud9 support
regular Java?

00:42:41.970 --> 00:42:42.870
I didn't see it on the list
of supported languages.

00:42:42.870 --> 00:42:45.790
RIK ARENDS: We've just released
the fact that you

00:42:45.790 --> 00:42:49.355
have your own workspace where
you can run Java, and C, and

00:42:49.355 --> 00:42:50.550
anything you want.

00:42:50.550 --> 00:42:54.990
We actually have a Java debug
integration that is very far

00:42:54.990 --> 00:42:58.710
along, but we're just trying to
figure out how to actually

00:42:58.710 --> 00:43:01.790
deliver this in cloud scale,
because it requires a lot more

00:43:01.790 --> 00:43:05.720
server side processing than
what we're used to do.

00:43:05.720 --> 00:43:11.210
So with the new VM support you
can run it, and when we get

00:43:11.210 --> 00:43:15.120
the right data streams wired
up you can also debug it.

00:43:15.120 --> 00:43:16.020
AUDIENCE: Thank you.

00:43:16.020 --> 00:43:17.100
I'll also be using Mindmeld.

00:43:17.100 --> 00:43:19.410
I've been using [INAUDIBLE]
to do the exact

00:43:19.410 --> 00:43:20.740
same thing for years.

00:43:20.740 --> 00:43:22.110
So that looks really cool.

00:43:22.110 --> 00:43:22.400
Thank you.

00:43:22.400 --> 00:43:22.730
NICOLAS GARNER: Awesome.

00:43:22.730 --> 00:43:23.880
RIK ARENDS: Thank you.

00:43:23.880 --> 00:43:26.420
AUDIENCE: All right, this is
kind of a more general

00:43:26.420 --> 00:43:28.940
question for just Drive
in general.

00:43:28.940 --> 00:43:33.110
So I know you guys have Picasa
and Google+ photos that you

00:43:33.110 --> 00:43:36.000
guys store photos and videos,
but that's kind of separate

00:43:36.000 --> 00:43:36.520
from Drive.

00:43:36.520 --> 00:43:39.040
Is there any plans to
integrate that?

00:43:39.040 --> 00:43:43.675
Because right now there's a cool
video editor application

00:43:43.675 --> 00:43:47.460
that uses Drive, but you can't
access any of the videos or

00:43:47.460 --> 00:43:48.290
photos in Google+.

00:43:48.290 --> 00:43:51.730
NICOLAS GARNER: So your question
is about a possible

00:43:51.730 --> 00:43:55.000
Picasa and YouTube merge
with Google Drive.

00:43:55.000 --> 00:43:58.120
AUDIENCE: Or just even videos
from Picasa that you

00:43:58.120 --> 00:43:58.430
[INAUDIBLE].

00:43:58.430 --> 00:44:00.480
NICOLAS GARNER: So actually,
we have the program manager

00:44:00.480 --> 00:44:03.430
from Drive right there.

00:44:03.430 --> 00:44:06.450
You can probably reply to this
question in a more appropriate

00:44:06.450 --> 00:44:08.340
way that I can.

00:44:08.340 --> 00:44:10.690
GOOGLE DRIVE PROGRAM MANAGER:
[INAUDIBLE].

00:44:10.690 --> 00:44:11.630
AUDIENCE: All right.

00:44:11.630 --> 00:44:13.240
NICOLAS GARNER: Can you share
the answer with us for the

00:44:13.240 --> 00:44:15.240
video on the microphone.

00:44:19.740 --> 00:44:21.170
GOOGLE DRIVE PROGRAM MANAGER:
So nothing too specific, but

00:44:21.170 --> 00:44:22.940
these are definitely things
we're thinking about doing,

00:44:22.940 --> 00:44:26.410
because we'd want to bring the
power of Drive apps to all

00:44:26.410 --> 00:44:27.390
this different content.

00:44:27.390 --> 00:44:30.180
But still very early
in that process.

00:44:30.180 --> 00:44:30.760
NICOLAS GARNER: All right.

00:44:30.760 --> 00:44:32.820
Thank you very much.

00:44:32.820 --> 00:44:34.740
Next question.

00:44:34.740 --> 00:44:37.340
AUDIENCE: I'm working on an
app that asks the user to

00:44:37.340 --> 00:44:40.590
upload images to then be used
later to be displayed on the

00:44:40.590 --> 00:44:43.110
web on behalf of that user.

00:44:43.110 --> 00:44:46.040
And in the past, I've worked
with Picasa web to do that

00:44:46.040 --> 00:44:49.176
work, or they'll publish their
images to Picasa web, and then

00:44:49.176 --> 00:44:51.050
that will get pulled
into the app.

00:44:51.050 --> 00:44:52.980
Should I continue to use Picasa
web for that, or should

00:44:52.980 --> 00:44:57.780
I switch that over
to Google Drive?

00:44:57.780 --> 00:45:01.610
NICOLAS GARNER: Could you repeat
again your question,

00:45:01.610 --> 00:45:03.950
especially the beginning?

00:45:03.950 --> 00:45:06.950
It's just that we get bad
feedback from here.

00:45:06.950 --> 00:45:07.590
AUDIENCE: Sure.

00:45:07.590 --> 00:45:12.520
So I have an app that allows the
user to upload images that

00:45:12.520 --> 00:45:18.410
they would then later use to
share with other people.

00:45:18.410 --> 00:45:21.010
Should I continue to use Picasa
web for that, or should

00:45:21.010 --> 00:45:23.460
I switch that over to
use Google Drive?

00:45:23.460 --> 00:45:24.710
NICOLAS GARNER: That's
a good question.

00:45:29.310 --> 00:45:32.570
Picasa is really nice to share
your image publicly.

00:45:32.570 --> 00:45:35.660
Google Drive is really powerful
to share your images

00:45:35.660 --> 00:45:39.670
only to a selected set of
people, and you get nice

00:45:39.670 --> 00:45:41.640
integration like what you've
seen with Pixlr

00:45:41.640 --> 00:45:43.250
Editor, where you can--

00:45:43.250 --> 00:45:44.060
people--

00:45:44.060 --> 00:45:46.530
I mean if you share your image
was someone in Google Drive,

00:45:46.530 --> 00:45:49.930
these people will be able to
edit it or open it with Pixlr

00:45:49.930 --> 00:45:50.870
for example.

00:45:50.870 --> 00:45:54.210
That's something you don't get
the right now on Picasa.

00:45:54.210 --> 00:45:57.500
The pica size is a little bit
better for sharing the image

00:45:57.500 --> 00:45:58.710
just publicly.

00:45:58.710 --> 00:46:01.740
People can see your albums,
and stuff like this.

00:46:01.740 --> 00:46:05.510
So for now, it's up to you
to make that choice, and

00:46:05.510 --> 00:46:09.850
hopefully we can work on some
better Picasa and Google Drive

00:46:09.850 --> 00:46:13.260
integration in the future and
provide an even better

00:46:13.260 --> 00:46:16.090
experience, the better
of both.

00:46:16.090 --> 00:46:18.280
Thank you.

00:46:18.280 --> 00:46:21.360
AUDIENCE: My question
is about the--

00:46:21.360 --> 00:46:26.350
how granular is the scope
limitation on applications

00:46:26.350 --> 00:46:29.490
that use Google Drive?

00:46:29.490 --> 00:46:35.000
In the example that was shown,
you have a scope for your

00:46:35.000 --> 00:46:36.710
entire Google Drive.

00:46:36.710 --> 00:46:42.520
Can you limit by, let's say,
file type, like only images,

00:46:42.520 --> 00:46:43.920
for example?

00:46:43.920 --> 00:46:45.820
NICOLAS GARNER: So
not right now.

00:46:45.820 --> 00:46:50.180
Right now the only scopes that
are available are the full

00:46:50.180 --> 00:46:51.480
access scope.

00:46:51.480 --> 00:46:55.130
So for example the one you guys
are using at Cooliris and

00:46:55.130 --> 00:46:56.830
you guys are using at Cloud9.

00:46:56.830 --> 00:47:01.130
And for example, MindMeister
here is using the other type

00:47:01.130 --> 00:47:03.080
of scope, which is the
profile scope.

00:47:03.080 --> 00:47:06.810
And in here, you have to
actually use the Google Drive

00:47:06.810 --> 00:47:09.000
UI to open files.

00:47:09.000 --> 00:47:11.950
And only the file that has been
opened through to Drive

00:47:11.950 --> 00:47:15.260
UI, or through the picker--
there's also a little

00:47:15.260 --> 00:47:18.190
JavaScript widget which
you can integrate

00:47:18.190 --> 00:47:20.280
into your web app--

00:47:20.280 --> 00:47:22.980
and only the files that the user
has manually selected to

00:47:22.980 --> 00:47:26.750
open through our UI will be wait
listed for you to access

00:47:26.750 --> 00:47:27.470
through the API.

00:47:27.470 --> 00:47:34.750
So this is the profile scope,
only accesses the files that

00:47:34.750 --> 00:47:36.100
the user has chosen to open.

00:47:36.100 --> 00:47:38.030
But we're working on more
scopes as well.

00:47:38.030 --> 00:47:42.450
That's actually a really good
idea, for example, allowing an

00:47:42.450 --> 00:47:47.770
app only to access images, or
allowing an app to only access

00:47:47.770 --> 00:47:51.600
files that are in a specific
folder, for example.

00:47:51.600 --> 00:47:54.440
That's a pretty good feature
request and definitely some

00:47:54.440 --> 00:47:56.940
things that we are considering
which might get

00:47:56.940 --> 00:47:57.750
added in the future.

00:47:57.750 --> 00:48:01.264
So thank you.

00:48:01.264 --> 00:48:02.120
Yes?

00:48:02.120 --> 00:48:05.690
AUDIENCE: So, just interested
in the Google Drive offline

00:48:05.690 --> 00:48:06.480
experience.

00:48:06.480 --> 00:48:08.960
And so if I'm collaborating with
somebody else, and I go

00:48:08.960 --> 00:48:11.720
jump on a plane, and then
they're changing the document,

00:48:11.720 --> 00:48:15.590
I'm just wondering with each
application what I could

00:48:15.590 --> 00:48:16.260
experience.

00:48:16.260 --> 00:48:21.750
In other words, is it like
[? GitHub ?] like replication?

00:48:21.750 --> 00:48:24.220
Is it like a paragraph
level replication?

00:48:24.220 --> 00:48:26.160
Is it document level
replication

00:48:26.160 --> 00:48:28.510
when I sync back up?

00:48:28.510 --> 00:48:29.940
NICOLAS GARNER: So you're
talking when you're using

00:48:29.940 --> 00:48:33.160
specifically the sync clients,
right, and all the files get

00:48:33.160 --> 00:48:35.630
synced to your hard disk?

00:48:35.630 --> 00:48:38.420
So actually if you modify them
with anything and you come

00:48:38.420 --> 00:48:41.820
back online, this file will
automatically detect the

00:48:41.820 --> 00:48:44.770
changes, and when you get your
connection back we'll start

00:48:44.770 --> 00:48:47.190
syncing them back
to Google Drive.

00:48:47.190 --> 00:48:48.200
It's currently how it works.

00:48:48.200 --> 00:48:50.870
So as soon as you get back
online, the sync client will

00:48:50.870 --> 00:48:56.360
start sending the changed files
back to Google Drive.

00:48:56.360 --> 00:48:57.550
Does that answer your
question, sir?

00:48:57.550 --> 00:49:01.350
AUDIENCE: Not quite, because
I'm interested in Federated

00:49:01.350 --> 00:49:06.030
databases, at what level
I'm able to merge.

00:49:06.030 --> 00:49:08.320
Is it at the document level, so
in other words, if we both

00:49:08.320 --> 00:49:09.000
make a change--

00:49:09.000 --> 00:49:10.580
NICOLAS GARNER: You mean, if
two persons change the same

00:49:10.580 --> 00:49:14.640
file, and in a different
way, and want to

00:49:14.640 --> 00:49:16.220
merge that doc, right?

00:49:16.220 --> 00:49:21.080
So currently, actually I don't
really know how that works.

00:49:21.080 --> 00:49:24.540
I think it's probably the latest
that's going to win.

00:49:24.540 --> 00:49:30.450
So the one with the latest date
that we're going to keep.

00:49:30.450 --> 00:49:34.390
We don't currently merge, as far
as I know, the content of

00:49:34.390 --> 00:49:37.150
the files themselves.

00:49:37.150 --> 00:49:41.660
Though we're working on some
stuff in that area that are

00:49:41.660 --> 00:49:44.940
going to be available in the
API, but I can't tell you more

00:49:44.940 --> 00:49:46.830
at that point.

00:49:46.830 --> 00:49:49.510
So that will be useful
in that area.

00:49:49.510 --> 00:49:50.120
AUDIENCE: Thanks very much.

00:49:50.120 --> 00:49:51.560
It's a good answer.

00:49:51.560 --> 00:49:53.150
NICOLAS GARNER: Thank you.

00:49:53.150 --> 00:49:56.040
AUDIENCE: A related question,
on the Cloud9 app that you

00:49:56.040 --> 00:49:58.140
were showing earlier, it looked
like you had multiple

00:49:58.140 --> 00:50:01.860
people coordinating on
the same workspace.

00:50:01.860 --> 00:50:04.430
Is there any synchronization
going on through your Drive

00:50:04.430 --> 00:50:07.370
API, or is that all
out of band?

00:50:07.370 --> 00:50:10.210
RIK ARENDS: Well we were just
accessing, effectively, the

00:50:10.210 --> 00:50:12.210
API like a virtual
file system.

00:50:12.210 --> 00:50:15.560
So another way to do it is to
sync to your local drive,

00:50:15.560 --> 00:50:17.760
which is actually a really
good idea if

00:50:17.760 --> 00:50:19.860
you want to run code.

00:50:19.860 --> 00:50:22.490
The way to think of the
collaborative workspace is

00:50:22.490 --> 00:50:25.440
that it's really a single
workspace, so

00:50:25.440 --> 00:50:26.860
you're working together.

00:50:26.860 --> 00:50:30.230
It's not a synchronization thing
like get or anything.

00:50:30.230 --> 00:50:33.020
You're working together
on the same files.

00:50:33.020 --> 00:50:35.710
Or you're working on your own
workspace, and then you use

00:50:35.710 --> 00:50:37.630
get to sync source.

00:50:37.630 --> 00:50:37.825
Right?

00:50:37.825 --> 00:50:39.920
It's two different ways
of collaboration.

00:50:39.920 --> 00:50:43.350
AUDIENCE: Right, but in the
virtual file system case in

00:50:43.350 --> 00:50:46.290
prior systems that do things
like that, if you have

00:50:46.290 --> 00:50:50.320
multiple users on the virtual
file system at the same time,

00:50:50.320 --> 00:50:53.150
and this is a connectionless
kind of environment on the

00:50:53.150 --> 00:50:57.070
web, what happens if the
connection drops for a little

00:50:57.070 --> 00:50:58.790
bit, so both of--

00:50:58.790 --> 00:51:01.180
RIK ARENDS: We have a
collaboration algorithm that

00:51:01.180 --> 00:51:02.040
deals with that.

00:51:02.040 --> 00:51:04.770
So it's like OT but different.

00:51:04.770 --> 00:51:06.520
It's a different algorithm
that's behind

00:51:06.520 --> 00:51:08.400
the actual text syncing.

00:51:08.400 --> 00:51:09.510
It's actually really
interesting.

00:51:09.510 --> 00:51:10.210
We can talk about that.

00:51:10.210 --> 00:51:13.270
But that's more of a--

00:51:13.270 --> 00:51:16.500
you're collaboratively working
on the document, and if

00:51:16.500 --> 00:51:18.810
something dies, and you go
offline, and you close your

00:51:18.810 --> 00:51:25.020
browser, then your edit stuff
in that browser will be gone

00:51:25.020 --> 00:51:26.270
unless you have been online.

00:51:28.920 --> 00:51:31.480
It's ethereal, so you do need
to make sure that you save

00:51:31.480 --> 00:51:36.000
your file, or that one
person takes the

00:51:36.000 --> 00:51:36.970
authority on the file.

00:51:36.970 --> 00:51:40.350
It will autosave, but it
doesn't really take the

00:51:40.350 --> 00:51:43.770
responsibility away that you're
actually writing code.

00:51:43.770 --> 00:51:44.630
AUDIENCE: Right.

00:51:44.630 --> 00:51:46.910
Yeah I think I'll have
to take it offline.

00:51:46.910 --> 00:51:50.510
RIK ARENDS: So it works for the
real case, but you could

00:51:50.510 --> 00:51:52.770
always find an edge case, like,
yeah I went offline, and

00:51:52.770 --> 00:51:55.510
then I flew there, and then I
wrote some code, and then I

00:51:55.510 --> 00:51:58.190
flipped my computer, and now I
have two de-synced things.

00:51:58.190 --> 00:52:00.000
You could also just copy
some code over.

00:52:00.000 --> 00:52:03.760
You don't have to implement get
to have use cases that are

00:52:03.760 --> 00:52:05.090
really far out solved.

00:52:05.090 --> 00:52:06.500
AUDIENCE: Right, well that's
why recent file systems

00:52:06.500 --> 00:52:09.100
usually don't do multiple users
mapping the same file

00:52:09.100 --> 00:52:10.430
for right at the same time.

00:52:10.430 --> 00:52:13.050
RIK ARENDS: Yes, I think we
need to separate those use

00:52:13.050 --> 00:52:15.880
cases pretty clearly, so you can
have two different ways of

00:52:15.880 --> 00:52:17.130
dealing with synchronization.

00:52:20.415 --> 00:52:22.210
NICOLAS GARNER: Thank you.

00:52:22.210 --> 00:52:25.400
RIK ARENDS: Can only use offline
files on a Chromebook,

00:52:25.400 --> 00:52:29.830
or can I view pictures through
a Cooliris plug-in on a

00:52:29.830 --> 00:52:32.870
Chromebook if they're offline?

00:52:32.870 --> 00:52:35.440
AUSTIN SHOEMAKER: So how would
the user access Google Drive

00:52:35.440 --> 00:52:36.750
if they're offline
in Cooliris?

00:52:36.750 --> 00:52:39.160
AUDIENCE: On the Chromebook.

00:52:39.160 --> 00:52:40.530
AUSTIN SHOEMAKER: Well right
now, this is an online demo.

00:52:40.530 --> 00:52:42.940
So every time you do something
it makes an API request.

00:52:42.940 --> 00:52:46.400
So if we wanted to, we could
synchronize the image metadata

00:52:46.400 --> 00:52:48.970
and thumbnails to the local
device and let you browse

00:52:48.970 --> 00:52:52.880
through it, and then use the
changes API to sync and bring

00:52:52.880 --> 00:52:53.390
it up to date.

00:52:53.390 --> 00:52:57.530
So we could do an incremental
update when you come online.

00:52:57.530 --> 00:52:59.400
So we haven't built that, but
it would be easy to build

00:52:59.400 --> 00:53:01.451
using the API.

00:53:01.451 --> 00:53:01.920
AUDIENCE: OK.

00:53:01.920 --> 00:53:08.870
And the second question was,
for the scope in the Drive

00:53:08.870 --> 00:53:13.990
list, it's limited to the files
you've registered, is

00:53:13.990 --> 00:53:15.170
that correct?

00:53:15.170 --> 00:53:18.340
Or you can see other files
that you have registered?

00:53:18.340 --> 00:53:20.400
NICOLAS GARNER: Sorry, can you
again say the beginning of

00:53:20.400 --> 00:53:20.760
your question?

00:53:20.760 --> 00:53:21.396
Sorry.

00:53:21.396 --> 00:53:26.550
AUDIENCE: Yes, for the Google
Drive list API, if I've

00:53:26.550 --> 00:53:35.100
registered my plug in with one
particular file type, is the

00:53:35.100 --> 00:53:37.870
scope limited to only seeing
that particular file type, or

00:53:37.870 --> 00:53:39.130
can I see other file types?

00:53:39.130 --> 00:53:43.220
So for example, let's say
I have registered jpeg.

00:53:43.220 --> 00:53:46.970
Can I see PDFs as well?

00:53:46.970 --> 00:53:50.270
NICOLAS GARNER: If you're
listing files using the API--

00:53:50.270 --> 00:53:51.860
so there is actually--

00:53:51.860 --> 00:53:52.980
I think you guys
are doing that.

00:53:52.980 --> 00:53:57.960
You're filtering
on the images.

00:53:57.960 --> 00:54:01.710
You're probably using the
search query parameter?

00:54:01.710 --> 00:54:03.560
AUSTIN SHOEMAKER: We use files
list, and in the query

00:54:03.560 --> 00:54:06.140
parameters you can say MIME type
equals and then specify

00:54:06.140 --> 00:54:08.100
the MIME type that you
want to filter by.

00:54:08.100 --> 00:54:10.710
In terms of access control,
the drive scope gives you

00:54:10.710 --> 00:54:12.170
access to all files.

00:54:12.170 --> 00:54:14.320
The drive dot file scope gives
you access only to files

00:54:14.320 --> 00:54:16.730
opened or created by
the Google Drive

00:54:16.730 --> 00:54:17.940
API, as Nicolas said.

00:54:17.940 --> 00:54:21.430
So you can filter using the API,
but there's no way to get

00:54:21.430 --> 00:54:25.102
permission to a single file type
via [INAUDIBLE] scope.

00:54:25.102 --> 00:54:25.950
NICOLAS GARNER: Yes.

00:54:25.950 --> 00:54:28.360
Not just scope, but when you
search, specifically you can

00:54:28.360 --> 00:54:34.570
search and list files of only
certain MIME types, which you

00:54:34.570 --> 00:54:38.303
can list, and you can list
multiple MIME types, right?

00:54:38.303 --> 00:54:39.553
AUSTIN SHOEMAKER: Yeah.

00:54:41.480 --> 00:54:42.470
Another question?

00:54:42.470 --> 00:54:45.100
AUDIENCE: Last question maybe.

00:54:45.100 --> 00:54:46.530
Cloud9 is great.

00:54:46.530 --> 00:54:51.250
I use it for Node.js
development, thank you.

00:54:51.250 --> 00:54:54.340
Is there any chance that you
will actually build in the

00:54:54.340 --> 00:54:56.930
synchronization to
Google Drive?

00:54:56.930 --> 00:54:59.840
It would be a really nice and
quick way to get a local

00:54:59.840 --> 00:55:04.410
instance of my Node.js app
running as a snapshot or

00:55:04.410 --> 00:55:07.360
working directly, instead
of using get.

00:55:07.360 --> 00:55:09.286
RIK ARENDS: Yeah totally.

00:55:09.286 --> 00:55:12.075
I really like the idea of
synchronizing the Google Drive

00:55:12.075 --> 00:55:14.480
or part of a sub-directory
of Google Drive--

00:55:14.480 --> 00:55:16.760
preferably not the
whole thing--

00:55:16.760 --> 00:55:21.040
to one of our cloud
workspaces.

00:55:21.040 --> 00:55:22.680
I think that's a really
cool way to do it.

00:55:25.530 --> 00:55:28.800
We do have to put some fences
up, as I said, about the use

00:55:28.800 --> 00:55:31.850
cases because, DVCS doesn't
exist for no reason.

00:55:31.850 --> 00:55:36.350
And so you need to make sure
that if you collaborate, you

00:55:36.350 --> 00:55:40.520
collaborate with different
people in different time

00:55:40.520 --> 00:55:45.470
zones, you can use DVCS because
you're not pair

00:55:45.470 --> 00:55:46.280
programming.

00:55:46.280 --> 00:55:50.180
And when you're actively on
Skype or on a new fancy HTML 5

00:55:50.180 --> 00:55:53.440
audio link, which we'll
hopefully have soon, you can

00:55:53.440 --> 00:55:56.050
use clicks, Cloud9 to pair
program and to do that.

00:55:56.050 --> 00:56:00.770
So the gradient between this
asynchronous collaboration and

00:56:00.770 --> 00:56:03.390
a synchronous collaboration will
fill in over time with

00:56:03.390 --> 00:56:06.470
different types of code
review, asynchronous,

00:56:06.470 --> 00:56:08.430
integration with issues, there's
a whole gradient in

00:56:08.430 --> 00:56:10.825
between, but that
will take time.

00:56:10.825 --> 00:56:13.500
All right, thank you.

00:56:13.500 --> 00:56:14.630
AUDIENCE: All right.

00:56:14.630 --> 00:56:16.340
NICOLAS GARNER: All right, if
this is it, thank you very

00:56:16.340 --> 00:56:20.625
much again everyone for staying
and for attending.

00:56:20.625 --> 00:56:22.500
And Thank you guys
in implementing

00:56:22.500 --> 00:56:23.750
Drive on your product.

