WEBVTT
Kind: captions
Language: en

00:00:00.180 --> 00:00:01.460
Alright. Up to this point I've been talking

00:00:01.460 --> 00:00:03.969
about regression in the context of a scalar

00:00:03.969 --> 00:00:07.980
input and continuous output. Sorry. Scalar input and

00:00:07.980 --> 00:00:11.880
continuous input. So basically this x variable. But

00:00:11.880 --> 00:00:15.730
the truth of the matter is we could actually have vector inputs as well. So what

00:00:15.730 --> 00:00:17.490
would might, what might be an example of

00:00:17.490 --> 00:00:19.440
where we might want to use a vector input?

00:00:19.440 --> 00:00:21.680
&gt;&gt; A couple of things. One if you look at

00:00:21.680 --> 00:00:25.180
the housing example, like we said earlier, there are a bunch

00:00:25.180 --> 00:00:26.630
of features that we weren't keeping track off.

00:00:26.630 --> 00:00:28.170
So we could have added some of those.

00:00:28.170 --> 00:00:30.530
&gt;&gt; Great yeah, we could include more input features

00:00:30.530 --> 00:00:33.340
and therefore combine more things to get it. But how

00:00:33.340 --> 00:00:36.010
would we do that? So let's say for example,

00:00:36.010 --> 00:00:40.050
that we have. Two input variables that we think might

00:00:40.050 --> 00:00:42.490
be relevant for figuring out housing costs. The size,

00:00:42.490 --> 00:00:44.810
which we've been looking at already, But also let's say

00:00:44.810 --> 00:00:47.240
the distance to the nearest zoo. We, we think that

00:00:47.240 --> 00:00:50.230
that's a really important thing. People like to live close

00:00:50.230 --> 00:00:51.460
to the zoo and so.

00:00:51.460 --> 00:00:54.138
&gt;&gt; But probably not too close to the zoo.

00:00:54.138 --> 00:00:57.600
&gt;&gt; [LAUGH] Possibly not too close to the zoo. But let's let's imagine that

00:00:57.600 --> 00:01:00.430
it's like size, something that actually Or

00:01:00.430 --> 00:01:01.710
actually, let, let's do it the other way,

00:01:01.710 --> 00:01:06.240
let's sort of imagine that, that, that the further away from the zoo, you are,

00:01:06.240 --> 00:01:09.190
the better it is. Just like the bigger the size is, the better it is.

00:01:09.190 --> 00:01:09.551
&gt;&gt; Mm-hm.

00:01:09.551 --> 00:01:12.030
&gt;&gt; So how do we combine these two variables into one

00:01:12.030 --> 00:01:15.340
in the context of the kinds of function classes that we've

00:01:15.340 --> 00:01:16.020
been talking about?

00:01:16.020 --> 00:01:17.320
&gt;&gt; Well, if you think about lines, we can

00:01:17.320 --> 00:01:21.140
just generalize the planes and hyper planes. Right so,

00:01:21.140 --> 00:01:24.010
in the case of, of a 1 dimensional input.

00:01:24.010 --> 00:01:27.410
That 1, 1 dimensional input gets mapped to the cost.

00:01:28.650 --> 00:01:31.110
But in the case of 2 dimensional inputs, like

00:01:31.110 --> 00:01:34.160
size and distance to the zoo. We have something that's

00:01:34.160 --> 00:01:36.740
more like a plane, combining these two things together

00:01:36.740 --> 00:01:41.510
in, in the linear fashion to actually predict what the.

00:01:41.510 --> 00:01:44.470
Cost is going to be. So right, so these,

00:01:44.470 --> 00:01:47.530
this notion of linear functions generalizes, this notion of polynomial

00:01:47.530 --> 00:01:51.050
function function generalizes too very, very nicely. All right,

00:01:51.050 --> 00:01:54.580
there is another kind of input that's important too, that,

00:01:54.580 --> 00:01:56.960
let's think about a slightly different example to help

00:01:56.960 --> 00:01:59.260
drive the idea home. So let's imagine we are trying

00:01:59.260 --> 00:02:02.660
to predict. Credit score, what are some things that

00:02:02.660 --> 00:02:04.500
we might want to use as features to do that.

00:02:06.390 --> 00:02:06.550
&gt;&gt; Do you

00:02:06.550 --> 00:02:07.130
have a job?

00:02:07.130 --> 00:02:08.310
&gt;&gt; I do, actually.

00:02:08.310 --> 00:02:09.788
&gt;&gt; [LAUGH] yes.

00:02:09.788 --> 00:02:11.250
&gt;&gt; Oh, I am sorry, I am sorry,

00:02:11.250 --> 00:02:13.230
I misunderstood. So you are asking, you are saying

00:02:13.230 --> 00:02:15.250
one [UNKNOWN] that could be important for predicting someone's

00:02:15.250 --> 00:02:16.990
credit score is just to know do they currently

00:02:16.990 --> 00:02:20.450
have a job. Right another thing might be

00:02:22.370 --> 00:02:24.360
well you, you can ask instead how much money

00:02:24.360 --> 00:02:26.300
they actually, how, how much, how many assets they

00:02:26.300 --> 00:02:29.520
have. How much money do they have? Credit cards.

00:02:29.520 --> 00:02:31.840
&gt;&gt; Great. So, so, right. So things

00:02:31.840 --> 00:02:34.930
like, what is the value of the assets that, that they own,

00:02:34.930 --> 00:02:38.690
right? So this is a continuous quantity like we've been talking about.

00:02:38.690 --> 00:02:40.800
But something like do you have a job, yes or no, is

00:02:40.800 --> 00:02:43.860
a discreet quantity. And one of the nice things about these kinds of

00:02:43.860 --> 00:02:45.980
regression approaches that we've talking about,

00:02:45.980 --> 00:02:48.020
like polynomial regression, is that we

00:02:48.020 --> 00:02:51.360
can actually feed in these discrete variables as well. Certainly if they're,

00:02:51.360 --> 00:02:53.900
if they're Boolean variables like, do you have a job or not?

00:02:53.900 --> 00:02:57.210
It, you can just think of that as being a kind of number

00:02:57.210 --> 00:02:59.850
that's just zero or one. No, I don't have a job. Yes, I have

00:02:59.850 --> 00:03:03.600
a job. What if it's something like, you know, how many houses do you own?

00:03:03.600 --> 00:03:03.670
&gt;&gt; Hmm.

00:03:03.670 --> 00:03:06.210
&gt;&gt; That's pretty easy because that's, you could just treat that

00:03:06.210 --> 00:03:12.310
as a As a quantity, a scalar type quantity. What about

00:03:12.310 --> 00:03:12.700
&gt;&gt; Are you.

00:03:12.700 --> 00:03:13.630
&gt;&gt; Type of job.

00:03:13.630 --> 00:03:17.040
&gt;&gt; Type of job, I like that. How about hair color?

00:03:17.040 --> 00:03:20.510
&gt;&gt; So, yeah, how would we do that? If we,

00:03:20.510 --> 00:03:22.280
if we're trying to feed it in to some kind of

00:03:22.280 --> 00:03:24.220
regression type algorithm, it needs to be a

00:03:24.220 --> 00:03:25.850
number or a vector of numbers, and they can

00:03:25.850 --> 00:03:28.140
be discrete. So right. So how do we

00:03:28.140 --> 00:03:30.190
encode this as some kind of a numerical value?

00:03:30.190 --> 00:03:33.380
&gt;&gt; Well, we could do something ridiculous like actually write

00:03:33.380 --> 00:03:37.390
down the RGB value which would make it kind of continuous.

00:03:37.390 --> 00:03:39.330
&gt;&gt; Interesting.

00:03:39.330 --> 00:03:41.320
&gt;&gt; That seems insane, but you could do that. Or you could just

00:03:41.320 --> 00:03:44.860
enumerate them and just assign them values one through six in this case.

00:03:47.160 --> 00:03:49.510
Right, 1, 2, 6 or they could be vectors like,

00:03:49.510 --> 00:03:51.230
is it red, yes or no? Is it beige, yes or

00:03:51.230 --> 00:03:52.680
no? Is it brown, yes or no? Have it be

00:03:52.680 --> 00:03:57.530
a vector and actually for different kinds of discreet quantities like

00:03:57.530 --> 00:04:00.280
this it can make it different, right? So in particular

00:04:00.280 --> 00:04:03.430
if we just gave the numbers. Then it's kind of signalling

00:04:03.430 --> 00:04:07.540
to the algorithm that blonde is halfway between brown and black,

00:04:07.540 --> 00:04:12.390
which doesn't really make sense. We could reorder these. Actually the

00:04:12.390 --> 00:04:14.210
RGB idea doesn't seem so bad to me.

00:04:14.210 --> 00:04:17.140
&gt;&gt; [UNKNOWN] of course, you have an interesting question of what's the

00:04:17.140 --> 00:04:21.980
real RGB value. It implies that somehow interpreting between them Make sense.

00:04:21.980 --> 00:04:23.380
&gt;&gt; That's right, that's right.

00:04:23.380 --> 00:04:26.050
&gt;&gt; It also implies an order right. It implies that the

00:04:26.050 --> 00:04:30.860
scalar order of RGB is somehow mean something that it's no

00:04:30.860 --> 00:04:33.920
different from saying red is one and beige is two. So,

00:04:33.920 --> 00:04:37.480
if we multiply it, for example, by a positive coefficient then

00:04:37.480 --> 00:04:41.600
the more RGB you have The better or the worse, right?

00:04:41.600 --> 00:04:45.060
&gt;&gt; Hmm. Interesting. Though, in fact what I had in

00:04:45.060 --> 00:04:48.540
mind here is for RGB, it's three different hair colors.

00:04:48.540 --> 00:04:58.332
&gt;&gt; I thought the g stood for green.

00:04:58.332 --> 00:04:59.018
&gt;&gt; There's, people don't have green hair, they have gray hair.

00:04:59.018 --> 00:04:59.410
&gt;&gt; But I thought the g in RGB stood for

00:04:59.410 --> 00:05:02.885
green. Yeah it does usually but I'm making a hair joke.

00:05:02.885 --> 00:05:04.190
[LAUGH]

00:05:04.190 --> 00:05:08.440
&gt;&gt; Oh oh. I am sorry. I am glad you explained that. You know Michael.

00:05:08.440 --> 00:05:09.110
&gt;&gt; No problem sir.

00:05:09.110 --> 00:05:11.090
&gt;&gt; I really, I really like the [UNKNOWN] factor idea.

00:05:11.090 --> 00:05:13.040
&gt;&gt; Yeah so I think. I think. I imaging that we are going to

00:05:13.040 --> 00:05:14.560
return to this issues when we start

00:05:14.560 --> 00:05:17.350
actually encoding problems as mission learning problems.

00:05:17.350 --> 00:05:18.660
&gt;&gt; I think your right.

00:05:18.660 --> 00:05:20.410
&gt;&gt; But I think that's I think

00:05:20.410 --> 00:05:22.320
that's said about regression for the time being.

00:05:22.320 --> 00:05:23.040
&gt;&gt; I agree.

