WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:02.149 align:start position:0%
 
welcome<00:00:00.780><c> to</c><00:00:00.960><c> the</c><00:00:01.050><c> last</c><00:00:01.230><c> video</c><00:00:01.439><c> for</c><00:00:01.800><c> this</c><00:00:01.890><c> week</c>

00:00:02.149 --> 00:00:02.159 align:start position:0%
welcome to the last video for this week
 

00:00:02.159 --> 00:00:04.579 align:start position:0%
welcome to the last video for this week
there<00:00:02.850><c> are</c><00:00:02.939><c> many</c><00:00:03.120><c> great</c><00:00:03.510><c> deep</c><00:00:04.200><c> learning</c>

00:00:04.579 --> 00:00:04.589 align:start position:0%
there are many great deep learning
 

00:00:04.589 --> 00:00:06.680 align:start position:0%
there are many great deep learning
programming<00:00:04.980><c> frameworks</c><00:00:05.549><c> one</c><00:00:06.180><c> of</c><00:00:06.330><c> them</c><00:00:06.480><c> is</c>

00:00:06.680 --> 00:00:06.690 align:start position:0%
programming frameworks one of them is
 

00:00:06.690 --> 00:00:08.900 align:start position:0%
programming frameworks one of them is
tensorflow<00:00:07.080><c> I'm</c><00:00:07.830><c> excited</c><00:00:08.250><c> to</c><00:00:08.340><c> the</c><00:00:08.460><c> help</c><00:00:08.700><c> you</c>

00:00:08.900 --> 00:00:08.910 align:start position:0%
tensorflow I'm excited to the help you
 

00:00:08.910 --> 00:00:11.509 align:start position:0%
tensorflow I'm excited to the help you
start<00:00:09.300><c> to</c><00:00:09.450><c> learn</c><00:00:09.660><c> to</c><00:00:09.690><c> use</c><00:00:10.080><c> tender</c><00:00:10.500><c> flow</c><00:00:10.679><c> what</c><00:00:11.490><c> I</c>

00:00:11.509 --> 00:00:11.519 align:start position:0%
start to learn to use tender flow what I
 

00:00:11.519 --> 00:00:13.220 align:start position:0%
start to learn to use tender flow what I
want<00:00:11.730><c> to</c><00:00:11.790><c> do</c><00:00:11.969><c> in</c><00:00:12.090><c> this</c><00:00:12.210><c> video</c><00:00:12.360><c> is</c><00:00:12.570><c> show</c><00:00:12.840><c> you</c><00:00:13.110><c> the</c>

00:00:13.220 --> 00:00:13.230 align:start position:0%
want to do in this video is show you the
 

00:00:13.230 --> 00:00:15.589 align:start position:0%
want to do in this video is show you the
basic<00:00:13.769><c> structure</c><00:00:14.309><c> of</c><00:00:14.340><c> a</c><00:00:14.849><c> tensor</c><00:00:15.179><c> flow</c><00:00:15.269><c> program</c>

00:00:15.589 --> 00:00:15.599 align:start position:0%
basic structure of a tensor flow program
 

00:00:15.599 --> 00:00:18.019 align:start position:0%
basic structure of a tensor flow program
and<00:00:16.020><c> then</c><00:00:16.440><c> leave</c><00:00:16.650><c> you</c><00:00:16.890><c> to</c><00:00:17.130><c> practice</c><00:00:17.670><c> and</c><00:00:17.880><c> learn</c>

00:00:18.019 --> 00:00:18.029 align:start position:0%
and then leave you to practice and learn
 

00:00:18.029 --> 00:00:20.090 align:start position:0%
and then leave you to practice and learn
more<00:00:18.240><c> details</c><00:00:18.480><c> and</c><00:00:18.900><c> practice</c><00:00:19.350><c> on</c><00:00:19.500><c> yourself</c><00:00:19.590><c> in</c>

00:00:20.090 --> 00:00:20.100 align:start position:0%
more details and practice on yourself in
 

00:00:20.100 --> 00:00:22.429 align:start position:0%
more details and practice on yourself in
this<00:00:20.580><c> week's</c><00:00:20.789><c> projects</c><00:00:21.240><c> designs</c><00:00:21.539><c> this</c><00:00:22.170><c> week's</c>

00:00:22.429 --> 00:00:22.439 align:start position:0%
this week's projects designs this week's
 

00:00:22.439 --> 00:00:24.200 align:start position:0%
this week's projects designs this week's
Pro<00:00:22.560><c> exercise</c><00:00:23.070><c> will</c><00:00:23.340><c> take</c><00:00:23.550><c> some</c><00:00:23.730><c> time</c><00:00:23.910><c> to</c><00:00:24.060><c> do</c>

00:00:24.200 --> 00:00:24.210 align:start position:0%
Pro exercise will take some time to do
 

00:00:24.210 --> 00:00:26.060 align:start position:0%
Pro exercise will take some time to do
so<00:00:24.510><c> please</c><00:00:24.720><c> be</c><00:00:24.930><c> sure</c><00:00:24.960><c> to</c><00:00:25.380><c> leave</c><00:00:25.500><c> some</c><00:00:25.560><c> extra</c>

00:00:26.060 --> 00:00:26.070 align:start position:0%
so please be sure to leave some extra
 

00:00:26.070 --> 00:00:28.880 align:start position:0%
so please be sure to leave some extra
time<00:00:26.220><c> to</c><00:00:26.460><c> do</c><00:00:26.609><c> it</c><00:00:26.760><c> as</c><00:00:26.939><c> the</c><00:00:27.779><c> motivating</c><00:00:28.410><c> problem</c>

00:00:28.880 --> 00:00:28.890 align:start position:0%
time to do it as the motivating problem
 

00:00:28.890 --> 00:00:31.429 align:start position:0%
time to do it as the motivating problem
let's<00:00:29.400><c> say</c><00:00:29.640><c> that</c><00:00:30.029><c> you</c><00:00:30.720><c> have</c><00:00:30.929><c> some</c><00:00:31.170><c> cost</c>

00:00:31.429 --> 00:00:31.439 align:start position:0%
let's say that you have some cost
 

00:00:31.439 --> 00:00:34.100 align:start position:0%
let's say that you have some cost
function<00:00:31.949><c> J</c><00:00:32.279><c> that</c><00:00:32.880><c> you</c><00:00:33.030><c> want</c><00:00:33.239><c> to</c><00:00:33.360><c> minimize</c><00:00:33.540><c> and</c>

00:00:34.100 --> 00:00:34.110 align:start position:0%
function J that you want to minimize and
 

00:00:34.110 --> 00:00:35.810 align:start position:0%
function J that you want to minimize and
for<00:00:34.350><c> this</c><00:00:34.500><c> example</c><00:00:34.829><c> I'm</c><00:00:35.190><c> going</c><00:00:35.309><c> to</c><00:00:35.370><c> use</c><00:00:35.460><c> this</c>

00:00:35.810 --> 00:00:35.820 align:start position:0%
for this example I'm going to use this
 

00:00:35.820 --> 00:00:38.990 align:start position:0%
for this example I'm going to use this
highly<00:00:36.660><c> simple</c><00:00:37.200><c> cost</c><00:00:37.469><c> function</c><00:00:37.950><c> J</c><00:00:38.730><c> of</c><00:00:38.940><c> W</c>

00:00:38.990 --> 00:00:39.000 align:start position:0%
highly simple cost function J of W
 

00:00:39.000 --> 00:00:45.020 align:start position:0%
highly simple cost function J of W
equals<00:00:40.070><c> W</c><00:00:41.070><c> squared</c><00:00:41.430><c> minus</c><00:00:41.969><c> 10</c><00:00:42.270><c> W</c><00:00:42.690><c> plus</c><00:00:43.730><c> 25</c><00:00:44.730><c> so</c>

00:00:45.020 --> 00:00:45.030 align:start position:0%
equals W squared minus 10 W plus 25 so
 

00:00:45.030 --> 00:00:47.029 align:start position:0%
equals W squared minus 10 W plus 25 so
that's<00:00:45.480><c> the</c><00:00:45.600><c> cost</c><00:00:45.840><c> function</c><00:00:46.110><c> you</c><00:00:46.860><c> might</c>

00:00:47.029 --> 00:00:47.039 align:start position:0%
that's the cost function you might
 

00:00:47.039 --> 00:00:50.319 align:start position:0%
that's the cost function you might
notice<00:00:47.399><c> that</c><00:00:47.640><c> this</c><00:00:47.879><c> function</c><00:00:48.360><c> is</c><00:00:48.539><c> actually</c><00:00:49.280><c> W</c>

00:00:50.319 --> 00:00:50.329 align:start position:0%
notice that this function is actually W
 

00:00:50.329 --> 00:00:54.529 align:start position:0%
notice that this function is actually W
minus<00:00:51.329><c> 5</c><00:00:52.610><c> squared</c><00:00:53.610><c> if</c><00:00:53.820><c> you</c><00:00:53.940><c> expand</c><00:00:54.239><c> out</c><00:00:54.360><c> this</c>

00:00:54.529 --> 00:00:54.539 align:start position:0%
minus 5 squared if you expand out this
 

00:00:54.539 --> 00:00:56.420 align:start position:0%
minus 5 squared if you expand out this
quadratic<00:00:54.870><c> together</c><00:00:55.410><c> expression</c><00:00:55.949><c> above</c><00:00:56.190><c> and</c>

00:00:56.420 --> 00:00:56.430 align:start position:0%
quadratic together expression above and
 

00:00:56.430 --> 00:00:59.360 align:start position:0%
quadratic together expression above and
so<00:00:56.940><c> the</c><00:00:57.090><c> value</c><00:00:57.449><c> of</c><00:00:57.570><c> W</c><00:00:58.079><c> that</c><00:00:58.230><c> minimizes</c><00:00:58.890><c> this</c><00:00:59.129><c> is</c>

00:00:59.360 --> 00:00:59.370 align:start position:0%
so the value of W that minimizes this is
 

00:00:59.370 --> 00:01:02.420 align:start position:0%
so the value of W that minimizes this is
w<00:01:00.239><c> equals</c><00:01:00.629><c> 5</c><00:01:00.960><c> but</c><00:01:01.739><c> let's</c><00:01:01.949><c> say</c><00:01:02.039><c> we</c><00:01:02.129><c> didn't</c><00:01:02.340><c> know</c>

00:01:02.420 --> 00:01:02.430 align:start position:0%
w equals 5 but let's say we didn't know
 

00:01:02.430 --> 00:01:05.119 align:start position:0%
w equals 5 but let's say we didn't know
that<00:01:02.609><c> and</c><00:01:02.910><c> you</c><00:01:03.239><c> just</c><00:01:03.510><c> have</c><00:01:03.690><c> this</c><00:01:04.379><c> function</c>

00:01:05.119 --> 00:01:05.129 align:start position:0%
that and you just have this function
 

00:01:05.129 --> 00:01:06.800 align:start position:0%
that and you just have this function
let's<00:01:05.820><c> see</c><00:01:06.030><c> how</c><00:01:06.240><c> you</c><00:01:06.299><c> can</c><00:01:06.540><c> implement</c>

00:01:06.800 --> 00:01:06.810 align:start position:0%
let's see how you can implement
 

00:01:06.810 --> 00:01:09.560 align:start position:0%
let's see how you can implement
something<00:01:07.409><c> intensive</c><00:01:08.040><c> low</c><00:01:08.189><c> to</c><00:01:08.760><c> minimize</c><00:01:09.270><c> this</c>

00:01:09.560 --> 00:01:09.570 align:start position:0%
something intensive low to minimize this
 

00:01:09.570 --> 00:01:11.810 align:start position:0%
something intensive low to minimize this
because<00:01:10.439><c> a</c><00:01:10.470><c> very</c><00:01:10.740><c> similar</c><00:01:11.130><c> structure</c><00:01:11.610><c> a</c>

00:01:11.810 --> 00:01:11.820 align:start position:0%
because a very similar structure a
 

00:01:11.820 --> 00:01:13.760 align:start position:0%
because a very similar structure a
program<00:01:11.970><c> can</c><00:01:12.840><c> be</c><00:01:12.869><c> used</c><00:01:13.200><c> to</c><00:01:13.350><c> train</c><00:01:13.590><c> your</c>

00:01:13.760 --> 00:01:13.770 align:start position:0%
program can be used to train your
 

00:01:13.770 --> 00:01:15.950 align:start position:0%
program can be used to train your
network<00:01:14.340><c> where</c><00:01:14.640><c> you</c><00:01:14.790><c> can</c><00:01:14.970><c> have</c><00:01:15.210><c> some</c>

00:01:15.950 --> 00:01:15.960 align:start position:0%
network where you can have some
 

00:01:15.960 --> 00:01:19.039 align:start position:0%
network where you can have some
complicated<00:01:16.530><c> cost</c><00:01:17.250><c> function</c><00:01:17.729><c> J</c><00:01:18.299><c> of</c><00:01:18.330><c> W</c><00:01:18.479><c> B</c>

00:01:19.039 --> 00:01:19.049 align:start position:0%
complicated cost function J of W B
 

00:01:19.049 --> 00:01:21.980 align:start position:0%
complicated cost function J of W B
depending<00:01:19.619><c> on</c><00:01:19.799><c> all</c><00:01:20.040><c> the</c><00:01:20.549><c> parameters</c><00:01:21.180><c> of</c><00:01:21.390><c> your</c>

00:01:21.980 --> 00:01:21.990 align:start position:0%
depending on all the parameters of your
 

00:01:21.990 --> 00:01:24.920 align:start position:0%
depending on all the parameters of your
neural<00:01:22.259><c> network</c><00:01:22.619><c> and</c><00:01:22.920><c> then</c><00:01:23.670><c> similarly</c><00:01:24.299><c> you</c><00:01:24.689><c> be</c>

00:01:24.920 --> 00:01:24.930 align:start position:0%
neural network and then similarly you be
 

00:01:24.930 --> 00:01:27.499 align:start position:0%
neural network and then similarly you be
able<00:01:25.049><c> to</c><00:01:25.140><c> use</c><00:01:25.350><c> tensorflow</c><00:01:25.979><c> to</c><00:01:26.790><c> automatically</c>

00:01:27.499 --> 00:01:27.509 align:start position:0%
able to use tensorflow to automatically
 

00:01:27.509 --> 00:01:31.039 align:start position:0%
able to use tensorflow to automatically
try<00:01:27.990><c> to</c><00:01:28.049><c> find</c><00:01:28.470><c> values</c><00:01:29.400><c> of</c><00:01:29.670><c> W</c><00:01:30.060><c> and</c><00:01:30.270><c> B</c><00:01:30.509><c> then</c>

00:01:31.039 --> 00:01:31.049 align:start position:0%
try to find values of W and B then
 

00:01:31.049 --> 00:01:33.230 align:start position:0%
try to find values of W and B then
minimize<00:01:31.500><c> this</c><00:01:31.770><c> cost</c><00:01:31.979><c> function</c><00:01:32.159><c> but</c><00:01:33.060><c> let's</c>

00:01:33.230 --> 00:01:33.240 align:start position:0%
minimize this cost function but let's
 

00:01:33.240 --> 00:01:34.999 align:start position:0%
minimize this cost function but let's
start<00:01:33.450><c> with</c><00:01:33.570><c> the</c><00:01:33.780><c> simpler</c><00:01:34.200><c> example</c><00:01:34.710><c> on</c><00:01:34.860><c> the</c>

00:01:34.999 --> 00:01:35.009 align:start position:0%
start with the simpler example on the
 

00:01:35.009 --> 00:01:38.450 align:start position:0%
start with the simpler example on the
left<00:01:35.220><c> so</c><00:01:36.210><c> I'm</c><00:01:36.360><c> running</c><00:01:36.540><c> Python</c><00:01:37.320><c> in</c><00:01:37.560><c> my</c><00:01:37.920><c> jupiter</c>

00:01:38.450 --> 00:01:38.460 align:start position:0%
left so I'm running Python in my jupiter
 

00:01:38.460 --> 00:01:41.749 align:start position:0%
left so I'm running Python in my jupiter
notebook<00:01:38.850><c> and</c><00:01:39.079><c> so</c><00:01:40.079><c> start-up</c><00:01:40.560><c> tender</c><00:01:40.920><c> so</c><00:01:41.130><c> you</c>

00:01:41.749 --> 00:01:41.759 align:start position:0%
notebook and so start-up tender so you
 

00:01:41.759 --> 00:01:44.960 align:start position:0%
notebook and so start-up tender so you
import<00:01:42.420><c> numpy</c><00:01:42.899><c> as</c><00:01:43.259><c> empty</c><00:01:43.740><c> and</c><00:01:44.009><c> is</c><00:01:44.250><c> idiomatic</c>

00:01:44.960 --> 00:01:44.970 align:start position:0%
import numpy as empty and is idiomatic
 

00:01:44.970 --> 00:01:48.800 align:start position:0%
import numpy as empty and is idiomatic
to<00:01:45.149><c> use</c><00:01:45.329><c> import</c><00:01:45.899><c> into</c><00:01:46.170><c> flow</c><00:01:46.470><c> as</c><00:01:46.680><c> TF</c><00:01:47.640><c> next</c><00:01:48.570><c> let</c>

00:01:48.800 --> 00:01:48.810 align:start position:0%
to use import into flow as TF next let
 

00:01:48.810 --> 00:01:54.469 align:start position:0%
to use import into flow as TF next let
me<00:01:48.899><c> define</c><00:01:49.290><c> the</c><00:01:50.479><c> parameter</c><00:01:51.479><c> W</c><00:01:52.439><c> so</c><00:01:53.329><c> intent</c><00:01:54.329><c> of</c>

00:01:54.469 --> 00:01:54.479 align:start position:0%
me define the parameter W so intent of
 

00:01:54.479 --> 00:01:56.870 align:start position:0%
me define the parameter W so intent of
flow<00:01:54.630><c> you're</c><00:01:54.869><c> going</c><00:01:55.049><c> to</c><00:01:55.170><c> use</c><00:01:55.409><c> TF</c><00:01:55.979><c> dot</c><00:01:56.250><c> variable</c>

00:01:56.870 --> 00:01:56.880 align:start position:0%
flow you're going to use TF dot variable
 

00:01:56.880 --> 00:02:03.380 align:start position:0%
flow you're going to use TF dot variable
to<00:01:57.479><c> define</c><00:01:57.840><c> a</c><00:01:57.869><c> parameter</c><00:02:01.130><c> title</c><00:02:02.130><c> equals</c><00:02:02.240><c> T</c><00:02:03.240><c> F</c>

00:02:03.380 --> 00:02:03.390 align:start position:0%
to define a parameter title equals T F
 

00:02:03.390 --> 00:02:05.240 align:start position:0%
to define a parameter title equals T F
dot<00:02:03.810><c> float</c>

00:02:05.240 --> 00:02:05.250 align:start position:0%
dot float
 

00:02:05.250 --> 00:02:09.800 align:start position:0%
dot float
32<00:02:06.120><c> and</c><00:02:07.759><c> then</c><00:02:08.759><c> let's</c><00:02:09.090><c> define</c><00:02:09.390><c> the</c><00:02:09.570><c> cost</c>

00:02:09.800 --> 00:02:09.810 align:start position:0%
32 and then let's define the cost
 

00:02:09.810 --> 00:02:11.600 align:start position:0%
32 and then let's define the cost
function<00:02:10.080><c> so</c><00:02:10.619><c> remember</c><00:02:11.040><c> the</c><00:02:11.130><c> cost</c><00:02:11.400><c> function</c>

00:02:11.600 --> 00:02:11.610 align:start position:0%
function so remember the cost function
 

00:02:11.610 --> 00:02:15.530 align:start position:0%
function so remember the cost function
was<00:02:12.120><c> w</c><00:02:12.660><c> squared</c><00:02:12.960><c> minus</c><00:02:13.440><c> 10</c><00:02:13.740><c> W</c><00:02:14.160><c> plus</c><00:02:14.460><c> 25</c>

00:02:15.530 --> 00:02:15.540 align:start position:0%
was w squared minus 10 W plus 25
 

00:02:15.540 --> 00:02:20.510 align:start position:0%
was w squared minus 10 W plus 25
so<00:02:16.050><c> you</c><00:02:16.230><c> just</c><00:02:16.350><c> PF</c><00:02:16.830><c> dot</c><00:02:17.160><c> add</c><00:02:18.470><c> some</c><00:02:19.470><c> would</c><00:02:19.590><c> have</c><00:02:19.710><c> W</c>

00:02:20.510 --> 00:02:20.520 align:start position:0%
so you just PF dot add some would have W
 

00:02:20.520 --> 00:02:27.350 align:start position:0%
so you just PF dot add some would have W
squared<00:02:22.280><c> plus</c><00:02:24.080><c> TF</c><00:02:25.080><c> dot</c><00:02:25.320><c> multiply</c><00:02:26.150><c> so</c><00:02:27.150><c> the</c>

00:02:27.350 --> 00:02:27.360 align:start position:0%
squared plus TF dot multiply so the
 

00:02:27.360 --> 00:02:31.040 align:start position:0%
squared plus TF dot multiply so the
second<00:02:27.780><c> term</c><00:02:27.960><c> was</c><00:02:28.200><c> minus</c><00:02:28.680><c> 10</c><00:02:29.240><c> times</c><00:02:30.240><c> W</c><00:02:30.780><c> and</c>

00:02:31.040 --> 00:02:31.050 align:start position:0%
second term was minus 10 times W and
 

00:02:31.050 --> 00:02:35.750 align:start position:0%
second term was minus 10 times W and
then<00:02:32.010><c> I'm</c><00:02:32.190><c> going</c><00:02:32.400><c> to</c><00:02:32.490><c> add</c><00:02:32.700><c> that</c><00:02:33.030><c> to</c><00:02:33.950><c> 25</c><00:02:34.950><c> so</c><00:02:35.670><c> let</c>

00:02:35.750 --> 00:02:35.760 align:start position:0%
then I'm going to add that to 25 so let
 

00:02:35.760 --> 00:02:40.520 align:start position:0%
then I'm going to add that to 25 so let
me<00:02:35.910><c> put</c><00:02:36.120><c> another</c><00:02:36.470><c> GF</c><00:02:37.470><c> dot</c><00:02:37.740><c> ad</c><00:02:38.400><c> over</c><00:02:39.030><c> there</c><00:02:39.530><c> so</c>

00:02:40.520 --> 00:02:40.530 align:start position:0%
me put another GF dot ad over there so
 

00:02:40.530 --> 00:02:42.770 align:start position:0%
me put another GF dot ad over there so
that<00:02:40.709><c> defines</c><00:02:40.860><c> the</c><00:02:41.250><c> cost</c><00:02:41.520><c> J</c><00:02:41.880><c> that</c><00:02:42.060><c> we</c><00:02:42.180><c> had</c><00:02:42.420><c> and</c>

00:02:42.770 --> 00:02:42.780 align:start position:0%
that defines the cost J that we had and
 

00:02:42.780 --> 00:02:46.340 align:start position:0%
that defines the cost J that we had and
then<00:02:43.470><c> I'm</c><00:02:43.620><c> going</c><00:02:43.770><c> to</c><00:02:43.830><c> write</c><00:02:44.010><c> train</c><00:02:44.880><c> equals</c><00:02:45.750><c> T</c><00:02:46.140><c> f</c>

00:02:46.340 --> 00:02:46.350 align:start position:0%
then I'm going to write train equals T f
 

00:02:46.350 --> 00:02:53.080 align:start position:0%
then I'm going to write train equals T f
dot<00:02:46.800><c> train</c><00:02:47.220><c> dot</c><00:02:47.720><c> gradient</c><00:02:49.580><c> descent</c><00:02:51.170><c> optimizer</c>

00:02:53.080 --> 00:02:53.090 align:start position:0%
dot train dot gradient descent optimizer
 

00:02:53.090 --> 00:02:56.030 align:start position:0%
dot train dot gradient descent optimizer
let's<00:02:54.090><c> use</c><00:02:54.240><c> a</c><00:02:54.270><c> learning</c><00:02:54.660><c> rate</c><00:02:54.780><c> of</c><00:02:54.959><c> 0.01</c><00:02:55.800><c> and</c>

00:02:56.030 --> 00:02:56.040 align:start position:0%
let's use a learning rate of 0.01 and
 

00:02:56.040 --> 00:03:01.780 align:start position:0%
let's use a learning rate of 0.01 and
the<00:02:56.910><c> goal</c><00:02:57.150><c> is</c><00:02:57.180><c> to</c><00:02:57.450><c> minimize</c><00:02:58.260><c> the</c><00:02:59.250><c> cost</c><00:02:59.280><c> and</c>

00:03:01.780 --> 00:03:01.790 align:start position:0%
the goal is to minimize the cost and
 

00:03:01.790 --> 00:03:04.670 align:start position:0%
the goal is to minimize the cost and
finally<00:03:02.790><c> the</c><00:03:03.660><c> following</c><00:03:04.050><c> few</c><00:03:04.200><c> lines</c><00:03:04.440><c> are</c>

00:03:04.670 --> 00:03:04.680 align:start position:0%
finally the following few lines are
 

00:03:04.680 --> 00:03:07.990 align:start position:0%
finally the following few lines are
quite<00:03:04.890><c> idiomatic</c><00:03:05.610><c> in</c><00:03:05.790><c> it</c><00:03:06.060><c> equals</c><00:03:06.780><c> P</c><00:03:07.110><c> f</c><00:03:07.200><c> dot</c>

00:03:07.990 --> 00:03:08.000 align:start position:0%
quite idiomatic in it equals P f dot
 

00:03:08.000 --> 00:03:14.680 align:start position:0%
quite idiomatic in it equals P f dot
global<00:03:09.650><c> variables</c><00:03:11.090><c> initializer</c><00:03:12.090><c> and</c><00:03:13.160><c> then</c><00:03:14.160><c> on</c>

00:03:14.680 --> 00:03:14.690 align:start position:0%
global variables initializer and then on
 

00:03:14.690 --> 00:03:18.110 align:start position:0%
global variables initializer and then on
session<00:03:15.690><c> equals</c><00:03:16.530><c> T</c><00:03:16.890><c> F</c><00:03:17.070><c> dot</c><00:03:17.519><c> the</c><00:03:17.700><c> profession</c>

00:03:18.110 --> 00:03:18.120 align:start position:0%
session equals T F dot the profession
 

00:03:18.120 --> 00:03:21.229 align:start position:0%
session equals T F dot the profession
from<00:03:18.390><c> starter</c><00:03:19.019><c> sensical</c><00:03:19.860><c> session</c><00:03:20.400><c> session</c>

00:03:21.229 --> 00:03:21.239 align:start position:0%
from starter sensical session session
 

00:03:21.239 --> 00:03:24.229 align:start position:0%
from starter sensical session session
you<00:03:21.570><c> got</c><00:03:21.750><c> to</c><00:03:21.959><c> run</c><00:03:22.170><c> a</c><00:03:22.470><c> lit</c><00:03:23.130><c> to</c><00:03:23.790><c> initialize</c><00:03:24.209><c> a</c>

00:03:24.229 --> 00:03:24.239 align:start position:0%
you got to run a lit to initialize a
 

00:03:24.239 --> 00:03:27.560 align:start position:0%
you got to run a lit to initialize a
global<00:03:24.630><c> variables</c><00:03:25.019><c> and</c><00:03:25.290><c> then</c><00:03:26.239><c> for</c><00:03:27.239><c> tend</c><00:03:27.480><c> to</c>

00:03:27.560 --> 00:03:27.570 align:start position:0%
global variables and then for tend to
 

00:03:27.570 --> 00:03:29.449 align:start position:0%
global variables and then for tend to
filter<00:03:27.989><c> you</c><00:03:28.200><c> value</c><00:03:28.620><c> the</c><00:03:28.739><c> variable</c><00:03:29.070><c> we're</c>

00:03:29.449 --> 00:03:29.459 align:start position:0%
filter you value the variable we're
 

00:03:29.459 --> 00:03:33.530 align:start position:0%
filter you value the variable we're
going<00:03:29.610><c> to</c><00:03:29.670><c> use</c><00:03:29.880><c> set</c><00:03:30.510><c> start</c><00:03:30.959><c> run</c><00:03:32.090><c> W</c><00:03:33.090><c> we</c><00:03:33.269><c> haven't</c>

00:03:33.530 --> 00:03:33.540 align:start position:0%
going to use set start run W we haven't
 

00:03:33.540 --> 00:03:35.870 align:start position:0%
going to use set start run W we haven't
done<00:03:33.630><c> anything</c><00:03:33.900><c> yet</c><00:03:34.200><c> so</c><00:03:34.410><c> with</c><00:03:34.670><c> this</c><00:03:35.670><c> line</c>

00:03:35.870 --> 00:03:35.880 align:start position:0%
done anything yet so with this line
 

00:03:35.880 --> 00:03:38.180 align:start position:0%
done anything yet so with this line
above<00:03:36.180><c> initialize</c><00:03:36.810><c> W</c><00:03:37.170><c> to</c><00:03:37.320><c> zero</c><00:03:37.620><c> and</c><00:03:37.860><c> define</c><00:03:38.160><c> a</c>

00:03:38.180 --> 00:03:38.190 align:start position:0%
above initialize W to zero and define a
 

00:03:38.190 --> 00:03:40.820 align:start position:0%
above initialize W to zero and define a
cost<00:03:38.489><c> function</c><00:03:38.700><c> will</c><00:03:39.570><c> define</c><00:03:39.930><c> train</c><00:03:40.380><c> to</c><00:03:40.680><c> be</c>

00:03:40.820 --> 00:03:40.830 align:start position:0%
cost function will define train to be
 

00:03:40.830 --> 00:03:42.680 align:start position:0%
cost function will define train to be
our<00:03:41.040><c> learning</c><00:03:41.459><c> algorithm</c><00:03:42.030><c> which</c><00:03:42.269><c> uses</c><00:03:42.480><c> a</c>

00:03:42.680 --> 00:03:42.690 align:start position:0%
our learning algorithm which uses a
 

00:03:42.690 --> 00:03:45.020 align:start position:0%
our learning algorithm which uses a
gradient<00:03:43.019><c> descent</c><00:03:43.470><c> optimizer</c><00:03:43.890><c> to</c><00:03:44.640><c> minimize</c>

00:03:45.020 --> 00:03:45.030 align:start position:0%
gradient descent optimizer to minimize
 

00:03:45.030 --> 00:03:46.820 align:start position:0%
gradient descent optimizer to minimize
the<00:03:45.180><c> cost</c><00:03:45.330><c> function</c><00:03:45.630><c> but</c><00:03:46.440><c> we</c><00:03:46.560><c> haven't</c>

00:03:46.820 --> 00:03:46.830 align:start position:0%
the cost function but we haven't
 

00:03:46.830 --> 00:03:48.890 align:start position:0%
the cost function but we haven't
actually<00:03:46.950><c> run</c><00:03:47.730><c> the</c><00:03:48.000><c> learning</c><00:03:48.330><c> algorithm</c><00:03:48.720><c> yet</c>

00:03:48.890 --> 00:03:48.900 align:start position:0%
actually run the learning algorithm yet
 

00:03:48.900 --> 00:03:52.190 align:start position:0%
actually run the learning algorithm yet
so<00:03:49.250><c> sessions</c><00:03:50.250><c> are</c><00:03:50.430><c> run</c><00:03:50.730><c> we</c><00:03:51.180><c> evaluate</c><00:03:51.660><c> W</c><00:03:51.840><c> and</c>

00:03:52.190 --> 00:03:52.200 align:start position:0%
so sessions are run we evaluate W and
 

00:03:52.200 --> 00:03:56.060 align:start position:0%
so sessions are run we evaluate W and
then<00:03:52.290><c> we</c><00:03:52.410><c> print</c><00:03:53.330><c> session</c><00:03:54.330><c> run</c><00:03:54.840><c> so</c><00:03:55.769><c> if</c><00:03:55.830><c> you</c><00:03:55.890><c> run</c>

00:03:56.060 --> 00:03:56.070 align:start position:0%
then we print session run so if you run
 

00:03:56.070 --> 00:03:58.699 align:start position:0%
then we print session run so if you run
that<00:03:56.310><c> evaluate</c><00:03:57.030><c> W</c><00:03:57.330><c> to</c><00:03:57.720><c> be</c><00:03:57.810><c> equal</c><00:03:58.170><c> to</c><00:03:58.320><c> zero</c>

00:03:58.699 --> 00:03:58.709 align:start position:0%
that evaluate W to be equal to zero
 

00:03:58.709 --> 00:04:00.199 align:start position:0%
that evaluate W to be equal to zero
because<00:03:58.860><c> you</c><00:03:59.070><c> haven't</c><00:03:59.280><c> done</c><00:03:59.519><c> anything</c><00:03:59.820><c> yet</c>

00:04:00.199 --> 00:04:00.209 align:start position:0%
because you haven't done anything yet
 

00:04:00.209 --> 00:04:05.960 align:start position:0%
because you haven't done anything yet
now<00:04:01.519><c> let's</c><00:04:02.519><c> do</c><00:04:02.730><c> sessions</c><00:04:03.030><c> are</c><00:04:03.480><c> run</c><00:04:03.780><c> on</c><00:04:04.970><c> train</c>

00:04:05.960 --> 00:04:05.970 align:start position:0%
now let's do sessions are run on train
 

00:04:05.970 --> 00:04:09.440 align:start position:0%
now let's do sessions are run on train
so<00:04:06.480><c> what</c><00:04:06.660><c> this</c><00:04:06.780><c> will</c><00:04:07.019><c> do</c><00:04:07.230><c> is</c><00:04:07.530><c> run</c><00:04:08.250><c> one</c><00:04:08.880><c> step</c><00:04:09.209><c> of</c>

00:04:09.440 --> 00:04:09.450 align:start position:0%
so what this will do is run one step of
 

00:04:09.450 --> 00:04:13.000 align:start position:0%
so what this will do is run one step of
gradient<00:04:09.720><c> descent</c><00:04:10.049><c> and</c><00:04:10.590><c> then</c><00:04:11.459><c> let's</c>

00:04:13.000 --> 00:04:13.010 align:start position:0%
gradient descent and then let's
 

00:04:13.010 --> 00:04:16.670 align:start position:0%
gradient descent and then let's
evaluate<00:04:14.010><c> the</c><00:04:14.220><c> value</c><00:04:14.580><c> of</c><00:04:14.670><c> W</c><00:04:15.030><c> after</c><00:04:15.330><c> one</c><00:04:16.320><c> step</c>

00:04:16.670 --> 00:04:16.680 align:start position:0%
evaluate the value of W after one step
 

00:04:16.680 --> 00:04:20.030 align:start position:0%
evaluate the value of W after one step
of<00:04:16.950><c> gradient</c><00:04:17.310><c> descent</c><00:04:17.640><c> and</c><00:04:18.209><c> print</c><00:04:18.959><c> that</c><00:04:19.170><c> so</c><00:04:19.980><c> we</c>

00:04:20.030 --> 00:04:20.040 align:start position:0%
of gradient descent and print that so we
 

00:04:20.040 --> 00:04:22.039 align:start position:0%
of gradient descent and print that so we
do<00:04:20.190><c> that</c><00:04:20.370><c> after</c><00:04:21.030><c> one</c><00:04:21.209><c> step</c><00:04:21.329><c> agreeing</c><00:04:21.720><c> to</c><00:04:21.840><c> send</c>

00:04:22.039 --> 00:04:22.049 align:start position:0%
do that after one step agreeing to send
 

00:04:22.049 --> 00:04:26.660 align:start position:0%
do that after one step agreeing to send
W<00:04:22.230><c> is</c><00:04:22.560><c> now</c><00:04:22.710><c> zero</c><00:04:23.520><c> point</c><00:04:23.760><c> one</c><00:04:24.980><c> let's</c><00:04:25.980><c> now</c><00:04:26.130><c> run</c><00:04:26.400><c> a</c>

00:04:26.660 --> 00:04:26.670 align:start position:0%
W is now zero point one let's now run a
 

00:04:26.670 --> 00:04:28.310 align:start position:0%
W is now zero point one let's now run a
thousand<00:04:27.120><c> iterations</c><00:04:27.330><c> of</c><00:04:27.870><c> gradient</c><00:04:27.930><c> descent</c>

00:04:28.310 --> 00:04:28.320 align:start position:0%
thousand iterations of gradient descent
 

00:04:28.320 --> 00:04:37.310 align:start position:0%
thousand iterations of gradient descent
so<00:04:29.960><c> run</c><00:04:31.610><c> train</c><00:04:33.380><c> and</c><00:04:35.540><c> let's</c><00:04:36.540><c> then</c><00:04:36.840><c> print</c>

00:04:37.310 --> 00:04:37.320 align:start position:0%
so run train and let's then print
 

00:04:37.320 --> 00:04:42.410 align:start position:0%
so run train and let's then print
session<00:04:38.310><c> that</c><00:04:38.730><c> and</c><00:04:38.910><c> run</c><00:04:39.560><c> W</c><00:04:40.910><c> so</c><00:04:41.910><c> this</c><00:04:42.090><c> is</c><00:04:42.240><c> run</c><00:04:42.390><c> a</c>

00:04:42.410 --> 00:04:42.420 align:start position:0%
session that and run W so this is run a
 

00:04:42.420 --> 00:04:44.030 align:start position:0%
session that and run W so this is run a
thousand<00:04:42.930><c> iterations</c><00:04:43.110><c> of</c><00:04:43.470><c> grande</c><00:04:43.710><c> descent</c>

00:04:44.030 --> 00:04:44.040 align:start position:0%
thousand iterations of grande descent
 

00:04:44.040 --> 00:04:46.850 align:start position:0%
thousand iterations of grande descent
and<00:04:44.250><c> at</c><00:04:44.430><c> the</c><00:04:44.550><c> end</c><00:04:44.700><c> W</c><00:04:45.570><c> ends</c><00:04:45.810><c> up</c><00:04:45.930><c> being</c><00:04:46.169><c> four</c>

00:04:46.850 --> 00:04:46.860 align:start position:0%
and at the end W ends up being four
 

00:04:46.860 --> 00:04:48.590 align:start position:0%
and at the end W ends up being four
point<00:04:47.100><c> nine</c><00:04:47.400><c> nine</c><00:04:47.430><c> nine</c><00:04:47.580><c> nine</c><00:04:47.730><c> remember</c><00:04:48.390><c> we</c>

00:04:48.590 --> 00:04:48.600 align:start position:0%
point nine nine nine nine remember we
 

00:04:48.600 --> 00:04:51.409 align:start position:0%
point nine nine nine nine remember we
said<00:04:48.840><c> that</c><00:04:48.870><c> we're</c><00:04:49.320><c> minimizing</c><00:04:49.669><c> W</c><00:04:50.669><c> minus</c><00:04:51.090><c> five</c>

00:04:51.409 --> 00:04:51.419 align:start position:0%
said that we're minimizing W minus five
 

00:04:51.419 --> 00:04:53.750 align:start position:0%
said that we're minimizing W minus five
squared<00:04:52.140><c> so</c><00:04:52.410><c> the</c><00:04:52.560><c> optimal</c><00:04:52.830><c> value</c><00:04:53.190><c> of</c><00:04:53.220><c> W</c><00:04:53.610><c> is</c>

00:04:53.750 --> 00:04:53.760 align:start position:0%
squared so the optimal value of W is
 

00:04:53.760 --> 00:04:57.110 align:start position:0%
squared so the optimal value of W is
five<00:04:54.030><c> and</c><00:04:54.300><c> got</c><00:04:54.450><c> very</c><00:04:54.510><c> close</c><00:04:55.050><c> to</c><00:04:55.290><c> this</c><00:04:55.440><c> so</c><00:04:56.340><c> hope</c>

00:04:57.110 --> 00:04:57.120 align:start position:0%
five and got very close to this so hope
 

00:04:57.120 --> 00:04:59.090 align:start position:0%
five and got very close to this so hope
this<00:04:57.390><c> gives</c><00:04:57.690><c> you</c><00:04:57.750><c> a</c><00:04:57.840><c> sense</c><00:04:58.230><c> of</c><00:04:58.500><c> the</c><00:04:58.650><c> broad</c>

00:04:59.090 --> 00:04:59.100 align:start position:0%
this gives you a sense of the broad
 

00:04:59.100 --> 00:05:02.090 align:start position:0%
this gives you a sense of the broad
structure<00:04:59.790><c> of</c><00:05:00.000><c> a</c><00:05:00.480><c> tensor</c><00:05:00.900><c> flow</c><00:05:01.020><c> program</c><00:05:01.500><c> and</c>

00:05:02.090 --> 00:05:02.100 align:start position:0%
structure of a tensor flow program and
 

00:05:02.100 --> 00:05:04.790 align:start position:0%
structure of a tensor flow program and
as<00:05:02.970><c> you</c><00:05:03.270><c> do</c><00:05:03.419><c> therefore</c><00:05:03.660><c> we</c><00:05:03.870><c> exercise</c><00:05:04.320><c> and</c><00:05:04.650><c> play</c>

00:05:04.790 --> 00:05:04.800 align:start position:0%
as you do therefore we exercise and play
 

00:05:04.800 --> 00:05:08.900 align:start position:0%
as you do therefore we exercise and play
with<00:05:05.100><c> more</c><00:05:05.640><c> tensorflow</c><00:05:06.800><c> close</c><00:05:07.800><c> yourself</c><00:05:08.220><c> some</c>

00:05:08.900 --> 00:05:08.910 align:start position:0%
with more tensorflow close yourself some
 

00:05:08.910 --> 00:05:10.580 align:start position:0%
with more tensorflow close yourself some
of<00:05:08.940><c> these</c><00:05:09.120><c> functions</c><00:05:09.450><c> that</c><00:05:09.960><c> I'm</c><00:05:10.080><c> using</c><00:05:10.320><c> here</c>

00:05:10.580 --> 00:05:10.590 align:start position:0%
of these functions that I'm using here
 

00:05:10.590 --> 00:05:13.280 align:start position:0%
of these functions that I'm using here
will<00:05:10.890><c> become</c><00:05:11.220><c> more</c><00:05:11.370><c> familiar</c><00:05:11.900><c> some</c><00:05:12.900><c> things</c><00:05:13.140><c> to</c>

00:05:13.280 --> 00:05:13.290 align:start position:0%
will become more familiar some things to
 

00:05:13.290 --> 00:05:16.100 align:start position:0%
will become more familiar some things to
notice<00:05:13.470><c> about</c><00:05:13.650><c> this</c><00:05:14.100><c> w</c><00:05:14.970><c> is</c><00:05:15.030><c> the</c><00:05:15.510><c> parameter</c>

00:05:16.100 --> 00:05:16.110 align:start position:0%
notice about this w is the parameter
 

00:05:16.110 --> 00:05:17.510 align:start position:0%
notice about this w is the parameter
we're<00:05:16.230><c> trying</c><00:05:16.440><c> to</c><00:05:16.500><c> optimize</c><00:05:16.530><c> so</c><00:05:17.280><c> we're</c><00:05:17.400><c> going</c>

00:05:17.510 --> 00:05:17.520 align:start position:0%
we're trying to optimize so we're going
 

00:05:17.520 --> 00:05:20.120 align:start position:0%
we're trying to optimize so we're going
to<00:05:17.580><c> declare</c><00:05:17.940><c> that</c><00:05:18.120><c> as</c><00:05:18.390><c> a</c><00:05:18.419><c> variable</c><00:05:18.900><c> and</c><00:05:19.350><c> notice</c>

00:05:20.120 --> 00:05:20.130 align:start position:0%
to declare that as a variable and notice
 

00:05:20.130 --> 00:05:22.190 align:start position:0%
to declare that as a variable and notice
that<00:05:20.220><c> all</c><00:05:20.280><c> we</c><00:05:20.520><c> had</c><00:05:20.669><c> to</c><00:05:20.760><c> do</c><00:05:20.910><c> was</c><00:05:21.180><c> define</c><00:05:21.600><c> a</c><00:05:21.840><c> cost</c>

00:05:22.190 --> 00:05:22.200 align:start position:0%
that all we had to do was define a cost
 

00:05:22.200 --> 00:05:24.469 align:start position:0%
that all we had to do was define a cost
function<00:05:22.440><c> using</c><00:05:23.160><c> these</c><00:05:23.340><c> add</c><00:05:23.940><c> and</c><00:05:24.360><c> multiply</c>

00:05:24.469 --> 00:05:24.479 align:start position:0%
function using these add and multiply
 

00:05:24.479 --> 00:05:28.270 align:start position:0%
function using these add and multiply
and<00:05:24.840><c> so</c><00:05:25.080><c> on</c><00:05:25.169><c> functions</c><00:05:25.650><c> and</c><00:05:26.419><c> tend</c><00:05:27.419><c> to</c><00:05:27.540><c> throws</c>

00:05:28.270 --> 00:05:28.280 align:start position:0%
and so on functions and tend to throws
 

00:05:28.280 --> 00:05:30.500 align:start position:0%
and so on functions and tend to throws
automatically<00:05:29.280><c> how</c><00:05:29.550><c> to</c><00:05:29.610><c> take</c><00:05:29.910><c> derivatives</c>

00:05:30.500 --> 00:05:30.510 align:start position:0%
automatically how to take derivatives
 

00:05:30.510 --> 00:05:32.990 align:start position:0%
automatically how to take derivatives
respect<00:05:31.020><c> to</c><00:05:31.140><c> the</c><00:05:31.260><c> add</c><00:05:31.470><c> and</c><00:05:31.830><c> multiply</c><00:05:31.950><c> as</c><00:05:32.520><c> well</c>

00:05:32.990 --> 00:05:33.000 align:start position:0%
respect to the add and multiply as well
 

00:05:33.000 --> 00:05:35.420 align:start position:0%
respect to the add and multiply as well
as<00:05:33.060><c> other</c><00:05:33.270><c> functions</c><00:05:33.840><c> which</c><00:05:34.410><c> is</c><00:05:34.560><c> why</c><00:05:34.770><c> you</c><00:05:35.400><c> only</c>

00:05:35.420 --> 00:05:35.430 align:start position:0%
as other functions which is why you only
 

00:05:35.430 --> 00:05:37.640 align:start position:0%
as other functions which is why you only
have<00:05:35.910><c> to</c><00:05:36.030><c> implement</c><00:05:36.180><c> basically</c><00:05:36.990><c> forward</c><00:05:37.380><c> prop</c>

00:05:37.640 --> 00:05:37.650 align:start position:0%
have to implement basically forward prop
 

00:05:37.650 --> 00:05:40.850 align:start position:0%
have to implement basically forward prop
and<00:05:37.979><c> it</c><00:05:38.640><c> can</c><00:05:38.790><c> figure</c><00:05:39.060><c> out</c><00:05:39.210><c> how</c><00:05:39.510><c> to</c><00:05:39.570><c> do</c><00:05:40.320><c> the</c><00:05:40.500><c> back</c>

00:05:40.850 --> 00:05:40.860 align:start position:0%
and it can figure out how to do the back
 

00:05:40.860 --> 00:05:42.760 align:start position:0%
and it can figure out how to do the back
problem<00:05:41.310><c> of</c><00:05:41.400><c> the</c><00:05:41.490><c> gradient</c><00:05:41.910><c> computation</c>

00:05:42.760 --> 00:05:42.770 align:start position:0%
problem of the gradient computation
 

00:05:42.770 --> 00:05:46.510 align:start position:0%
problem of the gradient computation
because<00:05:43.770><c> that's</c><00:05:44.040><c> already</c><00:05:44.250><c> built</c><00:05:44.760><c> in</c><00:05:44.970><c> to</c><00:05:45.240><c> the</c>

00:05:46.510 --> 00:05:46.520 align:start position:0%
because that's already built in to the
 

00:05:46.520 --> 00:05:49.490 align:start position:0%
because that's already built in to the
add<00:05:47.520><c> and</c><00:05:47.940><c> multiply</c><00:05:48.090><c> as</c><00:05:48.750><c> well</c><00:05:49.020><c> as</c><00:05:49.110><c> the</c><00:05:49.169><c> squaring</c>

00:05:49.490 --> 00:05:49.500 align:start position:0%
add and multiply as well as the squaring
 

00:05:49.500 --> 00:05:51.800 align:start position:0%
add and multiply as well as the squaring
functions<00:05:50.070><c> by</c><00:05:50.970><c> the</c><00:05:51.030><c> way</c><00:05:51.210><c> in</c><00:05:51.419><c> case</c><00:05:51.479><c> this</c>

00:05:51.800 --> 00:05:51.810 align:start position:0%
functions by the way in case this
 

00:05:51.810 --> 00:05:54.590 align:start position:0%
functions by the way in case this
notation<00:05:52.169><c> seems</c><00:05:52.650><c> really</c><00:05:53.070><c> ugly</c><00:05:53.550><c> since</c><00:05:54.450><c> the</c>

00:05:54.590 --> 00:05:54.600 align:start position:0%
notation seems really ugly since the
 

00:05:54.600 --> 00:05:56.480 align:start position:0%
notation seems really ugly since the
flow<00:05:54.780><c> actually</c><00:05:55.260><c> has</c><00:05:55.470><c> overloaded</c><00:05:56.310><c> the</c>

00:05:56.480 --> 00:05:56.490 align:start position:0%
flow actually has overloaded the
 

00:05:56.490 --> 00:06:02.300 align:start position:0%
flow actually has overloaded the
computation<00:05:57.180><c> for</c><00:05:59.090><c> the</c><00:06:00.090><c> usual</c><00:06:00.620><c> plus</c><00:06:01.620><c> minus</c><00:06:02.130><c> and</c>

00:06:02.300 --> 00:06:02.310 align:start position:0%
computation for the usual plus minus and
 

00:06:02.310 --> 00:06:04.730 align:start position:0%
computation for the usual plus minus and
so<00:06:02.490><c> on</c><00:06:02.700><c> so</c><00:06:03.390><c> you</c><00:06:03.450><c> can</c><00:06:03.600><c> also</c><00:06:03.780><c> just</c><00:06:03.990><c> write</c><00:06:04.530><c> this</c>

00:06:04.730 --> 00:06:04.740 align:start position:0%
so on so you can also just write this
 

00:06:04.740 --> 00:06:07.909 align:start position:0%
so on so you can also just write this
nicer<00:06:05.700><c> format</c><00:06:06.090><c> so</c><00:06:06.360><c> it</c><00:06:06.419><c> cost</c><00:06:06.720><c> to</c><00:06:07.350><c> comment</c><00:06:07.770><c> that</c>

00:06:07.909 --> 00:06:07.919 align:start position:0%
nicer format so it cost to comment that
 

00:06:07.919 --> 00:06:10.370 align:start position:0%
nicer format so it cost to comment that
out<00:06:08.070><c> and</c><00:06:08.100><c> if</c><00:06:08.880><c> you</c><00:06:09.000><c> run</c><00:06:09.240><c> this</c><00:06:09.450><c> and</c><00:06:09.750><c> get</c><00:06:10.229><c> the</c><00:06:10.350><c> same</c>

00:06:10.370 --> 00:06:10.380 align:start position:0%
out and if you run this and get the same
 

00:06:10.380 --> 00:06:11.180 align:start position:0%
out and if you run this and get the same
result

00:06:11.180 --> 00:06:11.190 align:start position:0%
result
 

00:06:11.190 --> 00:06:13.730 align:start position:0%
result
so<00:06:11.610><c> once</c><00:06:11.880><c> W</c><00:06:12.330><c> is</c><00:06:12.570><c> declared</c><00:06:12.960><c> to</c><00:06:13.110><c> be</c><00:06:13.140><c> attentive</c><00:06:13.470><c> so</c>

00:06:13.730 --> 00:06:13.740 align:start position:0%
so once W is declared to be attentive so
 

00:06:13.740 --> 00:06:16.250 align:start position:0%
so once W is declared to be attentive so
variable<00:06:14.250><c> these</c><00:06:14.760><c> squaring</c><00:06:15.450><c> multiplication</c>

00:06:16.250 --> 00:06:16.260 align:start position:0%
variable these squaring multiplication
 

00:06:16.260 --> 00:06:17.990 align:start position:0%
variable these squaring multiplication
adding<00:06:16.710><c> and</c><00:06:16.860><c> subtraction</c><00:06:17.220><c> operations</c><00:06:17.850><c> are</c>

00:06:17.990 --> 00:06:18.000 align:start position:0%
adding and subtraction operations are
 

00:06:18.000 --> 00:06:19.969 align:start position:0%
adding and subtraction operations are
over<00:06:18.030><c> though</c><00:06:18.390><c> this</c><00:06:18.630><c> you</c><00:06:18.840><c> don't</c><00:06:18.990><c> need</c><00:06:19.169><c> to</c><00:06:19.380><c> use</c>

00:06:19.969 --> 00:06:19.979 align:start position:0%
over though this you don't need to use
 

00:06:19.979 --> 00:06:21.350 align:start position:0%
over though this you don't need to use
this<00:06:20.160><c> a</c><00:06:20.370><c> griffon</c><00:06:20.820><c> check</c>

00:06:21.350 --> 00:06:21.360 align:start position:0%
this a griffon check
 

00:06:21.360 --> 00:06:23.749 align:start position:0%
this a griffon check
had<00:06:21.539><c> above</c><00:06:22.080><c> now</c><00:06:22.770><c> there's</c><00:06:23.189><c> just</c><00:06:23.250><c> one</c><00:06:23.430><c> more</c>

00:06:23.749 --> 00:06:23.759 align:start position:0%
had above now there's just one more
 

00:06:23.759 --> 00:06:25.279 align:start position:0%
had above now there's just one more
feature<00:06:24.000><c> of</c><00:06:24.300><c> ten</c><00:06:24.479><c> to</c><00:06:24.599><c> fill</c><00:06:24.780><c> that</c><00:06:24.930><c> I</c><00:06:25.020><c> want</c><00:06:25.169><c> to</c>

00:06:25.279 --> 00:06:25.289 align:start position:0%
feature of ten to fill that I want to
 

00:06:25.289 --> 00:06:28.429 align:start position:0%
feature of ten to fill that I want to
show<00:06:25.469><c> you</c><00:06:25.530><c> which</c><00:06:25.979><c> is</c><00:06:26.189><c> this</c><00:06:26.909><c> example</c><00:06:27.659><c> minimize</c>

00:06:28.429 --> 00:06:28.439 align:start position:0%
show you which is this example minimize
 

00:06:28.439 --> 00:06:31.670 align:start position:0%
show you which is this example minimize
a<00:06:28.710><c> fixed</c><00:06:29.189><c> function</c><00:06:29.370><c> of</c><00:06:29.849><c> W</c><00:06:30.479><c> one</c><00:06:31.439><c> of</c><00:06:31.560><c> the</c>

00:06:31.670 --> 00:06:31.680 align:start position:0%
a fixed function of W one of the
 

00:06:31.680 --> 00:06:33.140 align:start position:0%
a fixed function of W one of the
function<00:06:32.069><c> you</c><00:06:32.159><c> want</c><00:06:32.340><c> to</c><00:06:32.460><c> minimize</c><00:06:32.639><c> is</c><00:06:33.120><c> a</c>

00:06:33.140 --> 00:06:33.150 align:start position:0%
function you want to minimize is a
 

00:06:33.150 --> 00:06:35.059 align:start position:0%
function you want to minimize is a
function<00:06:33.659><c> of</c><00:06:33.930><c> your</c><00:06:34.050><c> training</c><00:06:34.379><c> set</c><00:06:34.740><c> so</c>

00:06:35.059 --> 00:06:35.069 align:start position:0%
function of your training set so
 

00:06:35.069 --> 00:06:37.629 align:start position:0%
function of your training set so
whatever<00:06:35.430><c> you</c><00:06:35.520><c> have</c><00:06:35.550><c> some</c><00:06:35.849><c> training</c><00:06:36.300><c> data</c><00:06:36.330><c> X</c>

00:06:37.629 --> 00:06:37.639 align:start position:0%
whatever you have some training data X
 

00:06:37.639 --> 00:06:40.040 align:start position:0%
whatever you have some training data X
and<00:06:38.639><c> when</c><00:06:39.030><c> you</c><00:06:39.120><c> train</c><00:06:39.300><c> your</c><00:06:39.479><c> neural</c><00:06:39.689><c> network</c>

00:06:40.040 --> 00:06:40.050 align:start position:0%
and when you train your neural network
 

00:06:40.050 --> 00:06:43.550 align:start position:0%
and when you train your neural network
the<00:06:40.590><c> training</c><00:06:41.009><c> data</c><00:06:41.159><c> X</c><00:06:41.520><c> can</c><00:06:41.969><c> change</c><00:06:42.270><c> so</c><00:06:43.139><c> how</c><00:06:43.500><c> do</c>

00:06:43.550 --> 00:06:43.560 align:start position:0%
the training data X can change so how do
 

00:06:43.560 --> 00:06:47.170 align:start position:0%
the training data X can change so how do
you<00:06:43.740><c> get</c><00:06:43.949><c> training</c><00:06:44.400><c> data</c><00:06:44.759><c> into</c><00:06:45.569><c> a</c><00:06:45.810><c> 10-2</c><00:06:46.710><c> phone</c>

00:06:47.170 --> 00:06:47.180 align:start position:0%
you get training data into a 10-2 phone
 

00:06:47.180 --> 00:06:51.230 align:start position:0%
you get training data into a 10-2 phone
program<00:06:48.259><c> so</c><00:06:49.259><c> I'm</c><00:06:49.319><c> going</c><00:06:49.469><c> to</c><00:06:49.530><c> find</c><00:06:49.770><c> key</c><00:06:50.129><c> X</c><00:06:50.610><c> which</c>

00:06:51.230 --> 00:06:51.240 align:start position:0%
program so I'm going to find key X which
 

00:06:51.240 --> 00:06:52.850 align:start position:0%
program so I'm going to find key X which
is<00:06:51.389><c> think</c><00:06:51.599><c> of</c><00:06:51.689><c> this</c><00:06:51.810><c> as</c><00:06:52.020><c> playing</c><00:06:52.349><c> a</c><00:06:52.439><c> role</c><00:06:52.620><c> of</c><00:06:52.650><c> a</c>

00:06:52.850 --> 00:06:52.860 align:start position:0%
is think of this as playing a role of a
 

00:06:52.860 --> 00:06:55.309 align:start position:0%
is think of this as playing a role of a
training<00:06:53.159><c> data</c><00:06:53.729><c> or</c><00:06:54.060><c> really</c><00:06:54.810><c> the</c><00:06:54.930><c> training</c>

00:06:55.309 --> 00:06:55.319 align:start position:0%
training data or really the training
 

00:06:55.319 --> 00:06:58.369 align:start position:0%
training data or really the training
data<00:06:55.500><c> with</c><00:06:56.340><c> both</c><00:06:56.550><c> x</c><00:06:56.849><c> and</c><00:06:57.120><c> y</c><00:06:57.270><c> but</c><00:06:57.719><c> we</c><00:06:57.870><c> only</c><00:06:57.990><c> get</c><00:06:58.110><c> X</c>

00:06:58.369 --> 00:06:58.379 align:start position:0%
data with both x and y but we only get X
 

00:06:58.379 --> 00:07:01.309 align:start position:0%
data with both x and y but we only get X
in<00:06:58.590><c> this</c><00:06:58.710><c> example</c><00:06:59.240><c> so</c><00:07:00.240><c> there's</c><00:07:00.840><c> going</c><00:07:01.259><c> to</c>

00:07:01.309 --> 00:07:01.319 align:start position:0%
in this example so there's going to
 

00:07:01.319 --> 00:07:03.589 align:start position:0%
in this example so there's going to
define<00:07:01.620><c> exterior</c><00:07:02.009><c> placeholder</c><00:07:02.759><c> and</c><00:07:02.969><c> it's</c>

00:07:03.589 --> 00:07:03.599 align:start position:0%
define exterior placeholder and it's
 

00:07:03.599 --> 00:07:07.249 align:start position:0%
define exterior placeholder and it's
going<00:07:03.719><c> to</c><00:07:03.779><c> be</c><00:07:03.870><c> of</c><00:07:03.990><c> type</c><00:07:04.259><c> float</c><00:07:04.729><c> 32</c><00:07:05.729><c> and</c><00:07:06.419><c> let's</c>

00:07:07.249 --> 00:07:07.259 align:start position:0%
going to be of type float 32 and let's
 

00:07:07.259 --> 00:07:10.399 align:start position:0%
going to be of type float 32 and let's
make<00:07:07.500><c> those</c><00:07:07.680><c> a</c><00:07:07.889><c> three</c><00:07:08.310><c> by</c><00:07:08.520><c> one</c><00:07:08.550><c> array</c><00:07:09.300><c> and</c><00:07:09.629><c> what</c>

00:07:10.399 --> 00:07:10.409 align:start position:0%
make those a three by one array and what
 

00:07:10.409 --> 00:07:13.279 align:start position:0%
make those a three by one array and what
I'm<00:07:10.560><c> going</c><00:07:10.740><c> to</c><00:07:10.800><c> do</c><00:07:11.009><c> is</c><00:07:11.539><c> whereas</c><00:07:12.539><c> the</c><00:07:12.659><c> cost</c><00:07:12.990><c> here</c>

00:07:13.279 --> 00:07:13.289 align:start position:0%
I'm going to do is whereas the cost here
 

00:07:13.289 --> 00:07:15.830 align:start position:0%
I'm going to do is whereas the cost here
has<00:07:13.469><c> fixed</c><00:07:13.770><c> coefficients</c><00:07:14.580><c> in</c><00:07:14.729><c> front</c><00:07:14.789><c> of</c><00:07:15.479><c> the</c><00:07:15.599><c> V</c>

00:07:15.830 --> 00:07:15.840 align:start position:0%
has fixed coefficients in front of the V
 

00:07:15.840 --> 00:07:18.619 align:start position:0%
has fixed coefficients in front of the V
terms<00:07:16.469><c> in</c><00:07:16.680><c> this</c><00:07:16.889><c> quadratic</c><00:07:17.400><c> use</c><00:07:17.699><c> one</c><00:07:18.060><c> times</c><00:07:18.360><c> W</c>

00:07:18.619 --> 00:07:18.629 align:start position:0%
terms in this quadratic use one times W
 

00:07:18.629 --> 00:07:21.409 align:start position:0%
terms in this quadratic use one times W
squared<00:07:18.900><c> minus</c><00:07:18.990><c> ten</c><00:07:19.500><c> times</c><00:07:19.710><c> W</c><00:07:20.039><c> plus</c><00:07:20.069><c> 25</c><00:07:20.699><c> we</c>

00:07:21.409 --> 00:07:21.419 align:start position:0%
squared minus ten times W plus 25 we
 

00:07:21.419 --> 00:07:24.260 align:start position:0%
squared minus ten times W plus 25 we
could<00:07:21.599><c> turn</c><00:07:21.750><c> these</c><00:07:21.960><c> numbers</c><00:07:22.590><c> 1</c><00:07:23.250><c> minus</c><00:07:23.759><c> 10</c><00:07:24.029><c> and</c>

00:07:24.260 --> 00:07:24.270 align:start position:0%
could turn these numbers 1 minus 10 and
 

00:07:24.270 --> 00:07:27.890 align:start position:0%
could turn these numbers 1 minus 10 and
25<00:07:24.870><c> into</c><00:07:25.500><c> data</c><00:07:26.310><c> so</c><00:07:27.000><c> what</c><00:07:27.180><c> I'm</c><00:07:27.270><c> going</c><00:07:27.389><c> to</c><00:07:27.449><c> do</c><00:07:27.629><c> is</c>

00:07:27.890 --> 00:07:27.900 align:start position:0%
25 into data so what I'm going to do is
 

00:07:27.900 --> 00:07:33.290 align:start position:0%
25 into data so what I'm going to do is
replace<00:07:28.110><c> the</c><00:07:28.469><c> cost</c><00:07:28.770><c> with</c><00:07:29.580><c> cost</c><00:07:29.969><c> equals</c><00:07:30.629><c> x</c><00:07:31.550><c> 0</c><00:07:32.550><c> 0</c>

00:07:33.290 --> 00:07:33.300 align:start position:0%
replace the cost with cost equals x 0 0
 

00:07:33.300 --> 00:07:42.649 align:start position:0%
replace the cost with cost equals x 0 0
times<00:07:34.259><c> W</c><00:07:34.979><c> squared</c><00:07:35.569><c> plus</c><00:07:37.009><c> x10</c><00:07:38.629><c> times</c><00:07:39.629><c> W</c><00:07:40.229><c> plus</c><00:07:41.659><c> x2</c>

00:07:42.649 --> 00:07:42.659 align:start position:0%
times W squared plus x10 times W plus x2
 

00:07:42.659 --> 00:07:54.230 align:start position:0%
times W squared plus x10 times W plus x2
0<00:07:44.000><c> o</c><00:07:47.000><c> times</c><00:07:48.000><c> 1</c><00:07:48.620><c> so</c><00:07:49.620><c> now</c><00:07:49.879><c> X</c><00:07:51.439><c> becomes</c><00:07:53.150><c> sort</c><00:07:54.150><c> of</c>

00:07:54.230 --> 00:07:54.240 align:start position:0%
0 o times 1 so now X becomes sort of
 

00:07:54.240 --> 00:07:56.629 align:start position:0%
0 o times 1 so now X becomes sort of
like<00:07:54.300><c> data</c><00:07:54.779><c> that</c><00:07:55.259><c> controls</c><00:07:55.740><c> the</c><00:07:55.979><c> coefficients</c>

00:07:56.629 --> 00:07:56.639 align:start position:0%
like data that controls the coefficients
 

00:07:56.639 --> 00:07:59.600 align:start position:0%
like data that controls the coefficients
of<00:07:56.729><c> this</c><00:07:56.849><c> quadratic</c><00:07:57.300><c> function</c><00:07:57.900><c> and</c><00:07:58.610><c> this</c>

00:07:59.600 --> 00:07:59.610 align:start position:0%
of this quadratic function and this
 

00:07:59.610 --> 00:08:03.860 align:start position:0%
of this quadratic function and this
placeholder<00:08:01.969><c> function</c><00:08:02.969><c> tells</c><00:08:03.389><c> tensorflow</c>

00:08:03.860 --> 00:08:03.870 align:start position:0%
placeholder function tells tensorflow
 

00:08:03.870 --> 00:08:07.159 align:start position:0%
placeholder function tells tensorflow
that<00:08:04.319><c> X</c><00:08:04.589><c> is</c><00:08:04.860><c> something</c><00:08:05.849><c> that</c><00:08:06.180><c> you</c><00:08:06.419><c> provide</c><00:08:06.990><c> the</c>

00:08:07.159 --> 00:08:07.169 align:start position:0%
that X is something that you provide the
 

00:08:07.169 --> 00:08:10.429 align:start position:0%
that X is something that you provide the
values<00:08:07.560><c> for</c><00:08:07.830><c> the</c><00:08:08.099><c> retailer</c><00:08:08.930><c> so</c><00:08:09.930><c> let's</c><00:08:10.199><c> define</c>

00:08:10.429 --> 00:08:10.439 align:start position:0%
values for the retailer so let's define
 

00:08:10.439 --> 00:08:15.170 align:start position:0%
values for the retailer so let's define
another<00:08:12.529><c> arrays</c><00:08:13.529><c> coefficient</c><00:08:14.339><c> equals</c><00:08:14.729><c> NP</c>

00:08:15.170 --> 00:08:15.180 align:start position:0%
another arrays coefficient equals NP
 

00:08:15.180 --> 00:08:21.520 align:start position:0%
another arrays coefficient equals NP
dot<00:08:16.020><c> array</c><00:08:18.199><c> 1</c>

00:08:21.520 --> 00:08:21.530 align:start position:0%
 
 

00:08:21.530 --> 00:08:27.740 align:start position:0%
 
-<00:08:22.530><c> 10</c><00:08:22.890><c> and</c><00:08:24.020><c> yes</c><00:08:25.020><c> the</c><00:08:25.230><c> last</c><00:08:25.380><c> value</c><00:08:25.710><c> is</c><00:08:25.980><c> 25</c><00:08:26.750><c> so</c>

00:08:27.740 --> 00:08:27.750 align:start position:0%
- 10 and yes the last value is 25 so
 

00:08:27.750 --> 00:08:29.570 align:start position:0%
- 10 and yes the last value is 25 so
that's<00:08:27.990><c> going</c><00:08:28.230><c> to</c><00:08:28.320><c> be</c><00:08:28.470><c> the</c><00:08:28.710><c> data</c><00:08:29.010><c> that</c><00:08:29.490><c> we're</c>

00:08:29.570 --> 00:08:29.580 align:start position:0%
that's going to be the data that we're
 

00:08:29.580 --> 00:08:33.110 align:start position:0%
that's going to be the data that we're
going<00:08:29.700><c> to</c><00:08:29.790><c> plug</c><00:08:30.000><c> into</c><00:08:30.210><c> X</c><00:08:31.310><c> so</c><00:08:32.310><c> finally</c><00:08:32.820><c> we</c><00:08:33.000><c> need</c>

00:08:33.110 --> 00:08:33.120 align:start position:0%
going to plug into X so finally we need
 

00:08:33.120 --> 00:08:36.980 align:start position:0%
going to plug into X so finally we need
a<00:08:33.180><c> way</c><00:08:33.450><c> to</c><00:08:33.510><c> get</c><00:08:33.990><c> this</c><00:08:34.250><c> a</c><00:08:35.250><c> very</c><00:08:36.120><c> coefficients</c>

00:08:36.980 --> 00:08:36.990 align:start position:0%
a way to get this a very coefficients
 

00:08:36.990 --> 00:08:39.650 align:start position:0%
a way to get this a very coefficients
into<00:08:37.410><c> the</c><00:08:37.530><c> variable</c><00:08:37.979><c> X</c><00:08:38.190><c> and</c><00:08:38.580><c> the</c><00:08:38.880><c> syntax</c><00:08:39.270><c> to</c><00:08:39.479><c> do</c>

00:08:39.650 --> 00:08:39.660 align:start position:0%
into the variable X and the syntax to do
 

00:08:39.660 --> 00:08:43.820 align:start position:0%
into the variable X and the syntax to do
that<00:08:39.870><c> is</c><00:08:41.030><c> doing</c><00:08:42.030><c> the</c><00:08:42.150><c> training</c><00:08:42.630><c> step</c><00:08:42.870><c> that</c><00:08:43.260><c> the</c>

00:08:43.820 --> 00:08:43.830 align:start position:0%
that is doing the training step that the
 

00:08:43.830 --> 00:08:46.880 align:start position:0%
that is doing the training step that the
value<00:08:44.280><c> 4</c><00:08:44.850><c> will</c><00:08:45.630><c> need</c><00:08:45.780><c> to</c><00:08:45.900><c> be</c><00:08:45.990><c> provided</c><00:08:46.500><c> for</c><00:08:46.650><c> X</c>

00:08:46.880 --> 00:08:46.890 align:start position:0%
value 4 will need to be provided for X
 

00:08:46.890 --> 00:08:53.110 align:start position:0%
value 4 will need to be provided for X
so<00:08:47.220><c> I'm</c><00:08:47.280><c> going</c><00:08:47.340><c> to</c><00:08:48.440><c> set</c><00:08:49.440><c> here</c><00:08:49.850><c> 6</c><00:08:50.850><c> equals</c><00:08:51.510><c> x</c>

00:08:53.110 --> 00:08:53.120 align:start position:0%
so I'm going to set here 6 equals x
 

00:08:53.120 --> 00:08:58.280 align:start position:0%
so I'm going to set here 6 equals x
that's<00:08:54.120><c> through</c><00:08:54.980><c> coefficients</c><00:08:56.690><c> and</c><00:08:57.690><c> I'm</c>

00:08:58.280 --> 00:08:58.290 align:start position:0%
that's through coefficients and I'm
 

00:08:58.290 --> 00:09:02.450 align:start position:0%
that's through coefficients and I'm
going<00:08:58.530><c> to</c><00:08:59.270><c> change</c><00:09:00.270><c> this</c><00:09:00.620><c> in</c><00:09:01.620><c> a</c><00:09:01.680><c> copy</c><00:09:01.980><c> and</c><00:09:02.220><c> paste</c>

00:09:02.450 --> 00:09:02.460 align:start position:0%
going to change this in a copy and paste
 

00:09:02.460 --> 00:09:04.520 align:start position:0%
going to change this in a copy and paste
and<00:09:02.700><c> put</c><00:09:02.790><c> that</c><00:09:03.090><c> here</c><00:09:03.390><c> as</c><00:09:03.510><c> well</c><00:09:03.750><c> all</c><00:09:04.170><c> right</c>

00:09:04.520 --> 00:09:04.530 align:start position:0%
and put that here as well all right
 

00:09:04.530 --> 00:09:05.630 align:start position:0%
and put that here as well all right
hopefully<00:09:04.800><c> I</c><00:09:04.950><c> didn't</c><00:09:05.160><c> have</c><00:09:05.250><c> any</c><00:09:05.400><c> syntax</c>

00:09:05.630 --> 00:09:05.640 align:start position:0%
hopefully I didn't have any syntax
 

00:09:05.640 --> 00:09:09.160 align:start position:0%
hopefully I didn't have any syntax
errors<00:09:05.970><c> let's</c><00:09:06.390><c> try</c><00:09:06.570><c> to</c><00:09:06.630><c> be</c><00:09:06.780><c> running</c><00:09:07.080><c> this</c><00:09:07.260><c> and</c>

00:09:09.160 --> 00:09:09.170 align:start position:0%
errors let's try to be running this and
 

00:09:09.170 --> 00:09:12.190 align:start position:0%
errors let's try to be running this and
we<00:09:10.170><c> get</c><00:09:10.350><c> the</c><00:09:10.500><c> same</c><00:09:10.710><c> results</c><00:09:11.220><c> hopefully</c><00:09:11.760><c> as</c>

00:09:12.190 --> 00:09:12.200 align:start position:0%
we get the same results hopefully as
 

00:09:12.200 --> 00:09:15.890 align:start position:0%
we get the same results hopefully as
before<00:09:13.200><c> and</c><00:09:13.950><c> now</c><00:09:14.910><c> if</c><00:09:15.120><c> you</c><00:09:15.240><c> want</c><00:09:15.450><c> to</c><00:09:15.540><c> change</c><00:09:15.750><c> the</c>

00:09:15.890 --> 00:09:15.900 align:start position:0%
before and now if you want to change the
 

00:09:15.900 --> 00:09:17.360 align:start position:0%
before and now if you want to change the
coefficients<00:09:16.500><c> of</c><00:09:16.560><c> this</c><00:09:16.710><c> quadratic</c><00:09:17.070><c> function</c>

00:09:17.360 --> 00:09:17.370 align:start position:0%
coefficients of this quadratic function
 

00:09:17.370 --> 00:09:20.090 align:start position:0%
coefficients of this quadratic function
let's<00:09:17.850><c> say</c><00:09:18.000><c> you</c><00:09:18.060><c> take</c><00:09:18.330><c> this</c><00:09:18.510><c> 10</c><00:09:18.840><c> and</c><00:09:19.050><c> change</c><00:09:19.890><c> it</c>

00:09:20.090 --> 00:09:20.100 align:start position:0%
let's say you take this 10 and change it
 

00:09:20.100 --> 00:09:25.750 align:start position:0%
let's say you take this 10 and change it
to<00:09:20.310><c> 20</c><00:09:21.270><c> minus</c><00:09:21.960><c> 20</c><00:09:22.200><c> and</c><00:09:23.720><c> let's</c><00:09:24.720><c> change</c><00:09:24.990><c> this</c><00:09:25.260><c> to</c>

00:09:25.750 --> 00:09:25.760 align:start position:0%
to 20 minus 20 and let's change this to
 

00:09:25.760 --> 00:09:29.390 align:start position:0%
to 20 minus 20 and let's change this to
100<00:09:26.760><c> so</c><00:09:27.000><c> this</c><00:09:27.210><c> is</c><00:09:27.360><c> now</c><00:09:27.540><c> the</c><00:09:28.170><c> function</c><00:09:28.590><c> X</c><00:09:28.830><c> minus</c>

00:09:29.390 --> 00:09:29.400 align:start position:0%
100 so this is now the function X minus
 

00:09:29.400 --> 00:09:34.430 align:start position:0%
100 so this is now the function X minus
10<00:09:29.760><c> squared</c><00:09:30.030><c> and</c><00:09:30.510><c> if</c><00:09:31.440><c> I</c><00:09:31.730><c> rerun</c><00:09:32.730><c> this</c><00:09:33.440><c> hopefully</c>

00:09:34.430 --> 00:09:34.440 align:start position:0%
10 squared and if I rerun this hopefully
 

00:09:34.440 --> 00:09:36.920 align:start position:0%
10 squared and if I rerun this hopefully
I<00:09:34.470><c> find</c><00:09:34.650><c> that</c><00:09:35.070><c> the</c><00:09:35.190><c> value</c><00:09:35.370><c> that</c><00:09:36.090><c> minimizes</c><00:09:36.270><c> X</c>

00:09:36.920 --> 00:09:36.930 align:start position:0%
I find that the value that minimizes X
 

00:09:36.930 --> 00:09:39.830 align:start position:0%
I find that the value that minimizes X
minus<00:09:37.260><c> 10</c><00:09:37.530><c> squared</c><00:09:37.740><c> this</c><00:09:38.070><c> w</c><00:09:38.460><c> equals</c><00:09:38.820><c> 10</c><00:09:39.210><c> let's</c>

00:09:39.830 --> 00:09:39.840 align:start position:0%
minus 10 squared this w equals 10 let's
 

00:09:39.840 --> 00:09:42.710 align:start position:0%
minus 10 squared this w equals 10 let's
see<00:09:40.020><c> cool</c><00:09:40.500><c> great</c><00:09:40.950><c> we</c><00:09:41.250><c> got</c><00:09:41.430><c> W</c><00:09:41.820><c> very</c><00:09:42.060><c> close</c><00:09:42.360><c> to</c><00:09:42.510><c> 10</c>

00:09:42.710 --> 00:09:42.720 align:start position:0%
see cool great we got W very close to 10
 

00:09:42.720 --> 00:09:44.900 align:start position:0%
see cool great we got W very close to 10
after<00:09:43.290><c> running</c><00:09:43.650><c> a</c><00:09:43.830><c> thousand</c><00:09:44.250><c> iterations</c><00:09:44.430><c> of</c>

00:09:44.900 --> 00:09:44.910 align:start position:0%
after running a thousand iterations of
 

00:09:44.910 --> 00:09:47.780 align:start position:0%
after running a thousand iterations of
gradient<00:09:44.970><c> descent</c><00:09:45.710><c> so</c><00:09:46.710><c> what</c><00:09:46.980><c> you</c><00:09:47.070><c> see</c><00:09:47.310><c> more</c><00:09:47.550><c> of</c>

00:09:47.780 --> 00:09:47.790 align:start position:0%
gradient descent so what you see more of
 

00:09:47.790 --> 00:09:50.170 align:start position:0%
gradient descent so what you see more of
when<00:09:48.090><c> you</c><00:09:48.210><c> do</c><00:09:48.360><c> the</c><00:09:48.510><c> exercise</c><00:09:48.620><c> is</c><00:09:49.620><c> that</c><00:09:49.650><c> a</c>

00:09:50.170 --> 00:09:50.180 align:start position:0%
when you do the exercise is that a
 

00:09:50.180 --> 00:09:52.640 align:start position:0%
when you do the exercise is that a
placeholder<00:09:51.180><c> in</c><00:09:51.870><c> terms</c><00:09:52.110><c> of</c><00:09:52.230><c> flow</c><00:09:52.380><c> is</c><00:09:52.620><c> a</c>

00:09:52.640 --> 00:09:52.650 align:start position:0%
placeholder in terms of flow is a
 

00:09:52.650 --> 00:09:54.710 align:start position:0%
placeholder in terms of flow is a
variable<00:09:53.190><c> whose</c><00:09:53.430><c> value</c><00:09:53.490><c> you</c><00:09:54.060><c> assign</c><00:09:54.360><c> later</c>

00:09:54.710 --> 00:09:54.720 align:start position:0%
variable whose value you assign later
 

00:09:54.720 --> 00:09:59.180 align:start position:0%
variable whose value you assign later
and<00:09:55.140><c> this</c><00:09:55.710><c> is</c><00:09:55.860><c> a</c><00:09:55.890><c> convenient</c><00:09:56.490><c> way</c><00:09:56.640><c> to</c><00:09:56.880><c> get</c><00:09:58.190><c> your</c>

00:09:59.180 --> 00:09:59.190 align:start position:0%
and this is a convenient way to get your
 

00:09:59.190 --> 00:10:02.270 align:start position:0%
and this is a convenient way to get your
training<00:09:59.550><c> data</c><00:10:00.230><c> into</c><00:10:01.230><c> the</c><00:10:01.350><c> cost</c><00:10:01.620><c> function</c><00:10:02.100><c> and</c>

00:10:02.270 --> 00:10:02.280 align:start position:0%
training data into the cost function and
 

00:10:02.280 --> 00:10:05.420 align:start position:0%
training data into the cost function and
the<00:10:02.460><c> way</c><00:10:02.490><c> you</c><00:10:02.670><c> get</c><00:10:03.060><c> your</c><00:10:03.330><c> data</c><00:10:04.140><c> into</c><00:10:05.130><c> the</c><00:10:05.220><c> cost</c>

00:10:05.420 --> 00:10:05.430 align:start position:0%
the way you get your data into the cost
 

00:10:05.430 --> 00:10:07.850 align:start position:0%
the way you get your data into the cost
function<00:10:05.880><c> is</c><00:10:06.030><c> with</c><00:10:06.210><c> this</c><00:10:06.420><c> syntax</c><00:10:06.870><c> on</c><00:10:07.380><c> when</c>

00:10:07.850 --> 00:10:07.860 align:start position:0%
function is with this syntax on when
 

00:10:07.860 --> 00:10:10.310 align:start position:0%
function is with this syntax on when
you're<00:10:08.010><c> running</c><00:10:08.190><c> a</c><00:10:08.570><c> training</c><00:10:09.570><c> iteration</c><00:10:10.140><c> to</c>

00:10:10.310 --> 00:10:10.320 align:start position:0%
you're running a training iteration to
 

00:10:10.320 --> 00:10:13.100 align:start position:0%
you're running a training iteration to
use<00:10:10.470><c> the</c><00:10:10.650><c> feet</c><00:10:10.890><c> dip</c><00:10:11.130><c> to</c><00:10:11.400><c> set</c><00:10:11.640><c> X</c><00:10:12.240><c> to</c><00:10:12.480><c> be</c><00:10:12.720><c> equal</c><00:10:13.080><c> to</c>

00:10:13.100 --> 00:10:13.110 align:start position:0%
use the feet dip to set X to be equal to
 

00:10:13.110 --> 00:10:15.470 align:start position:0%
use the feet dip to set X to be equal to
the<00:10:13.560><c> coefficients</c><00:10:14.250><c> here</c><00:10:14.370><c> and</c><00:10:14.670><c> if</c><00:10:15.360><c> you're</c>

00:10:15.470 --> 00:10:15.480 align:start position:0%
the coefficients here and if you're
 

00:10:15.480 --> 00:10:17.390 align:start position:0%
the coefficients here and if you're
doing<00:10:15.810><c> mini-batch</c><00:10:16.290><c> gradient</c><00:10:16.320><c> descent</c><00:10:17.100><c> where</c>

00:10:17.390 --> 00:10:17.400 align:start position:0%
doing mini-batch gradient descent where
 

00:10:17.400 --> 00:10:19.430 align:start position:0%
doing mini-batch gradient descent where
on<00:10:17.550><c> each</c><00:10:17.790><c> iteration</c><00:10:18.000><c> you</c><00:10:18.450><c> need</c><00:10:18.810><c> to</c><00:10:18.960><c> plug</c><00:10:19.200><c> in</c><00:10:19.350><c> a</c>

00:10:19.430 --> 00:10:19.440 align:start position:0%
on each iteration you need to plug in a
 

00:10:19.440 --> 00:10:21.590 align:start position:0%
on each iteration you need to plug in a
different<00:10:19.620><c> mini</c><00:10:20.040><c> batch</c><00:10:20.340><c> then</c><00:10:21.090><c> on</c><00:10:21.240><c> different</c>

00:10:21.590 --> 00:10:21.600 align:start position:0%
different mini batch then on different
 

00:10:21.600 --> 00:10:23.690 align:start position:0%
different mini batch then on different
iterations<00:10:22.110><c> you</c><00:10:22.290><c> use</c><00:10:22.500><c> the</c><00:10:22.680><c> feet</c><00:10:22.920><c> thick</c><00:10:23.160><c> to</c>

00:10:23.690 --> 00:10:23.700 align:start position:0%
iterations you use the feet thick to
 

00:10:23.700 --> 00:10:25.790 align:start position:0%
iterations you use the feet thick to
feed<00:10:23.940><c> in</c><00:10:24.150><c> different</c><00:10:24.720><c> subsets</c><00:10:25.470><c> of</c><00:10:25.650><c> your</c>

00:10:25.790 --> 00:10:25.800 align:start position:0%
feed in different subsets of your
 

00:10:25.800 --> 00:10:27.480 align:start position:0%
feed in different subsets of your
training<00:10:26.040><c> set</c><00:10:26.340><c> different</c><00:10:26.790><c> meaning</c>

00:10:27.480 --> 00:10:27.490 align:start position:0%
training set different meaning
 

00:10:27.490 --> 00:10:29.620 align:start position:0%
training set different meaning
into<00:10:28.490><c> where</c><00:10:28.730><c> your</c><00:10:28.880><c> cost</c><00:10:29.090><c> function</c><00:10:29.510><c> is</c>

00:10:29.620 --> 00:10:29.630 align:start position:0%
into where your cost function is
 

00:10:29.630 --> 00:10:32.740 align:start position:0%
into where your cost function is
expecting<00:10:30.200><c> to</c><00:10:30.680><c> see</c><00:10:30.890><c> data</c><00:10:31.220><c> so</c><00:10:31.970><c> hopefully</c><00:10:32.510><c> this</c>

00:10:32.740 --> 00:10:32.750 align:start position:0%
expecting to see data so hopefully this
 

00:10:32.750 --> 00:10:34.900 align:start position:0%
expecting to see data so hopefully this
gives<00:10:32.780><c> you</c><00:10:33.140><c> a</c><00:10:33.170><c> sense</c><00:10:33.470><c> of</c><00:10:33.740><c> what</c><00:10:34.010><c> tens</c><00:10:34.340><c> of</c><00:10:34.490><c> so</c><00:10:34.640><c> can</c>

00:10:34.900 --> 00:10:34.910 align:start position:0%
gives you a sense of what tens of so can
 

00:10:34.910 --> 00:10:37.180 align:start position:0%
gives you a sense of what tens of so can
do<00:10:35.180><c> and</c><00:10:35.540><c> the</c><00:10:36.290><c> thing</c><00:10:36.500><c> that</c><00:10:36.530><c> makes</c><00:10:36.860><c> it</c><00:10:37.040><c> so</c>

00:10:37.180 --> 00:10:37.190 align:start position:0%
do and the thing that makes it so
 

00:10:37.190 --> 00:10:39.310 align:start position:0%
do and the thing that makes it so
powerful<00:10:37.490><c> is</c><00:10:38.000><c> all</c><00:10:38.240><c> you</c><00:10:38.510><c> need</c><00:10:38.630><c> to</c><00:10:38.780><c> do</c><00:10:38.960><c> is</c>

00:10:39.310 --> 00:10:39.320 align:start position:0%
powerful is all you need to do is
 

00:10:39.320 --> 00:10:41.410 align:start position:0%
powerful is all you need to do is
specify<00:10:39.560><c> how</c><00:10:40.010><c> to</c><00:10:40.070><c> compute</c><00:10:40.580><c> the</c><00:10:40.880><c> cost</c><00:10:41.120><c> function</c>

00:10:41.410 --> 00:10:41.420 align:start position:0%
specify how to compute the cost function
 

00:10:41.420 --> 00:10:44.530 align:start position:0%
specify how to compute the cost function
and<00:10:41.870><c> then</c><00:10:42.740><c> it</c><00:10:42.890><c> takes</c><00:10:43.100><c> derivatives</c><00:10:43.730><c> and</c><00:10:44.150><c> it</c><00:10:44.390><c> can</c>

00:10:44.530 --> 00:10:44.540 align:start position:0%
and then it takes derivatives and it can
 

00:10:44.540 --> 00:10:47.980 align:start position:0%
and then it takes derivatives and it can
apply<00:10:44.780><c> a</c><00:10:45.170><c> gradient</c><00:10:45.650><c> optimizer</c><00:10:46.310><c> or</c><00:10:46.730><c> an</c><00:10:47.660><c> atom</c>

00:10:47.980 --> 00:10:47.990 align:start position:0%
apply a gradient optimizer or an atom
 

00:10:47.990 --> 00:10:50.050 align:start position:0%
apply a gradient optimizer or an atom
optimizer<00:10:48.410><c> or</c><00:10:48.620><c> some</c><00:10:48.920><c> other</c><00:10:49.070><c> optimizer</c><00:10:49.550><c> with</c>

00:10:50.050 --> 00:10:50.060 align:start position:0%
optimizer or some other optimizer with
 

00:10:50.060 --> 00:10:52.000 align:start position:0%
optimizer or some other optimizer with
just<00:10:50.360><c> you</c><00:10:50.660><c> know</c><00:10:50.780><c> pretty</c><00:10:51.170><c> much</c><00:10:51.290><c> one</c><00:10:51.710><c> or</c><00:10:51.860><c> two</c>

00:10:52.000 --> 00:10:52.010 align:start position:0%
just you know pretty much one or two
 

00:10:52.010 --> 00:10:55.630 align:start position:0%
just you know pretty much one or two
lines<00:10:52.220><c> of</c><00:10:52.370><c> code</c><00:10:52.580><c> so</c><00:10:53.270><c> here's</c><00:10:53.840><c> the</c><00:10:54.280><c> code</c><00:10:55.280><c> again</c>

00:10:55.630 --> 00:10:55.640 align:start position:0%
lines of code so here's the code again
 

00:10:55.640 --> 00:10:57.340 align:start position:0%
lines of code so here's the code again
I've<00:10:55.880><c> cleaned</c><00:10:56.240><c> this</c><00:10:56.420><c> up</c><00:10:56.480><c> just</c><00:10:56.930><c> a</c><00:10:57.020><c> little</c><00:10:57.050><c> bit</c>

00:10:57.340 --> 00:10:57.350 align:start position:0%
I've cleaned this up just a little bit
 

00:10:57.350 --> 00:10:59.740 align:start position:0%
I've cleaned this up just a little bit
and<00:10:57.740><c> in</c><00:10:57.950><c> case</c><00:10:58.100><c> some</c><00:10:58.310><c> of</c><00:10:58.340><c> these</c><00:10:58.520><c> functions</c><00:10:59.480><c> or</c>

00:10:59.740 --> 00:10:59.750 align:start position:0%
and in case some of these functions or
 

00:10:59.750 --> 00:11:01.120 align:start position:0%
and in case some of these functions or
variables<00:11:00.170><c> seem</c><00:11:00.470><c> a</c><00:11:00.500><c> little</c><00:11:00.740><c> bit</c><00:11:00.950><c> mysterious</c>

00:11:01.120 --> 00:11:01.130 align:start position:0%
variables seem a little bit mysterious
 

00:11:01.130 --> 00:11:03.400 align:start position:0%
variables seem a little bit mysterious
to<00:11:01.550><c> you</c><00:11:01.670><c> still</c><00:11:01.970><c> they</c><00:11:02.720><c> will</c><00:11:02.900><c> become</c><00:11:03.260><c> more</c>

00:11:03.400 --> 00:11:03.410 align:start position:0%
to you still they will become more
 

00:11:03.410 --> 00:11:05.320 align:start position:0%
to you still they will become more
familiar<00:11:03.590><c> after</c><00:11:04.340><c> you</c><00:11:04.430><c> practice</c><00:11:04.940><c> with</c><00:11:05.090><c> it</c><00:11:05.150><c> a</c>

00:11:05.320 --> 00:11:05.330 align:start position:0%
familiar after you practice with it a
 

00:11:05.330 --> 00:11:07.240 align:start position:0%
familiar after you practice with it a
couple<00:11:05.360><c> times</c><00:11:05.810><c> by</c><00:11:06.380><c> working</c><00:11:06.680><c> through</c><00:11:06.860><c> their</c>

00:11:07.240 --> 00:11:07.250 align:start position:0%
couple times by working through their
 

00:11:07.250 --> 00:11:10.480 align:start position:0%
couple times by working through their
programming<00:11:07.640><c> exercise</c><00:11:08.920><c> just</c><00:11:09.920><c> one</c><00:11:10.130><c> last</c><00:11:10.310><c> thing</c>

00:11:10.480 --> 00:11:10.490 align:start position:0%
programming exercise just one last thing
 

00:11:10.490 --> 00:11:12.640 align:start position:0%
programming exercise just one last thing
I<00:11:10.700><c> want</c><00:11:10.880><c> to</c><00:11:10.970><c> mention</c><00:11:11.090><c> these</c><00:11:11.840><c> three</c><00:11:12.170><c> lines</c><00:11:12.410><c> of</c>

00:11:12.640 --> 00:11:12.650 align:start position:0%
I want to mention these three lines of
 

00:11:12.650 --> 00:11:15.340 align:start position:0%
I want to mention these three lines of
code<00:11:12.920><c> are</c><00:11:13.190><c> quite</c><00:11:13.490><c> idiomatic</c><00:11:14.300><c> in</c><00:11:14.690><c> terms</c><00:11:15.230><c> of</c>

00:11:15.340 --> 00:11:15.350 align:start position:0%
code are quite idiomatic in terms of
 

00:11:15.350 --> 00:11:18.520 align:start position:0%
code are quite idiomatic in terms of
flow<00:11:15.590><c> and</c><00:11:16.240><c> what</c><00:11:17.240><c> some</c><00:11:17.420><c> program</c><00:11:17.720><c> is</c><00:11:17.840><c> will</c><00:11:18.170><c> do</c><00:11:18.350><c> is</c>

00:11:18.520 --> 00:11:18.530 align:start position:0%
flow and what some program is will do is
 

00:11:18.530 --> 00:11:21.010 align:start position:0%
flow and what some program is will do is
use<00:11:18.740><c> this</c><00:11:18.950><c> alternative</c><00:11:19.730><c> format</c><00:11:20.270><c> which</c>

00:11:21.010 --> 00:11:21.020 align:start position:0%
use this alternative format which
 

00:11:21.020 --> 00:11:22.960 align:start position:0%
use this alternative format which
basically<00:11:21.410><c> does</c><00:11:21.650><c> the</c><00:11:21.710><c> same</c><00:11:22.010><c> thing</c><00:11:22.280><c> set</c>

00:11:22.960 --> 00:11:22.970 align:start position:0%
basically does the same thing set
 

00:11:22.970 --> 00:11:25.000 align:start position:0%
basically does the same thing set
session<00:11:23.420><c> to</c><00:11:23.600><c> TF</c><00:11:23.900><c> dot</c><00:11:24.110><c> session</c><00:11:24.500><c> to</c><00:11:24.650><c> start</c><00:11:24.890><c> the</c>

00:11:25.000 --> 00:11:25.010 align:start position:0%
session to TF dot session to start the
 

00:11:25.010 --> 00:11:28.150 align:start position:0%
session to TF dot session to start the
session<00:11:25.400><c> and</c><00:11:25.550><c> use</c><00:11:26.180><c> the</c><00:11:26.330><c> session</c><00:11:26.750><c> to</c><00:11:27.050><c> run</c><00:11:27.800><c> in</c><00:11:28.010><c> it</c>

00:11:28.150 --> 00:11:28.160 align:start position:0%
session and use the session to run in it
 

00:11:28.160 --> 00:11:31.120 align:start position:0%
session and use the session to run in it
and<00:11:28.400><c> then</c><00:11:28.940><c> use</c><00:11:29.120><c> the</c><00:11:29.240><c> session</c><00:11:29.450><c> to</c><00:11:29.810><c> evaluate</c><00:11:30.380><c> CW</c>

00:11:31.120 --> 00:11:31.130 align:start position:0%
and then use the session to evaluate CW
 

00:11:31.130 --> 00:11:33.370 align:start position:0%
and then use the session to evaluate CW
and<00:11:31.340><c> in</c><00:11:31.430><c> print</c><00:11:31.700><c> of</c><00:11:31.820><c> result</c><00:11:32.150><c> but</c><00:11:32.690><c> this</c><00:11:32.840><c> with</c>

00:11:33.370 --> 00:11:33.380 align:start position:0%
and in print of result but this with
 

00:11:33.380 --> 00:11:36.490 align:start position:0%
and in print of result but this with
construction<00:11:33.950><c> is</c><00:11:34.570><c> used</c><00:11:35.570><c> in</c><00:11:35.810><c> a</c><00:11:35.900><c> number</c><00:11:35.930><c> of</c><00:11:36.290><c> tens</c>

00:11:36.490 --> 00:11:36.500 align:start position:0%
construction is used in a number of tens
 

00:11:36.500 --> 00:11:38.500 align:start position:0%
construction is used in a number of tens
of<00:11:36.650><c> flow</c><00:11:36.800><c> programs</c><00:11:37.250><c> as</c><00:11:37.400><c> well</c><00:11:37.580><c> it</c><00:11:37.970><c> more</c><00:11:38.360><c> or</c><00:11:38.480><c> less</c>

00:11:38.500 --> 00:11:38.510 align:start position:0%
of flow programs as well it more or less
 

00:11:38.510 --> 00:11:40.810 align:start position:0%
of flow programs as well it more or less
means<00:11:38.960><c> the</c><00:11:39.140><c> same</c><00:11:39.380><c> thing</c><00:11:39.650><c> as</c><00:11:39.950><c> the</c><00:11:40.370><c> thing</c><00:11:40.550><c> on</c><00:11:40.700><c> the</c>

00:11:40.810 --> 00:11:40.820 align:start position:0%
means the same thing as the thing on the
 

00:11:40.820 --> 00:11:45.070 align:start position:0%
means the same thing as the thing on the
left<00:11:41.090><c> but</c><00:11:41.800><c> the</c><00:11:42.800><c> words</c><00:11:43.100><c> command</c><00:11:43.550><c> in</c><00:11:43.910><c> Python</c><00:11:44.870><c> is</c>

00:11:45.070 --> 00:11:45.080 align:start position:0%
left but the words command in Python is
 

00:11:45.080 --> 00:11:47.740 align:start position:0%
left but the words command in Python is
a<00:11:45.140><c> little</c><00:11:45.680><c> bit</c><00:11:45.830><c> better</c><00:11:46.010><c> and</c><00:11:46.520><c> cleaning</c><00:11:47.060><c> up</c><00:11:47.240><c> in</c>

00:11:47.740 --> 00:11:47.750 align:start position:0%
a little bit better and cleaning up in
 

00:11:47.750 --> 00:11:50.320 align:start position:0%
a little bit better and cleaning up in
cases<00:11:48.320><c> an</c><00:11:48.470><c> error</c><00:11:48.710><c> on</c><00:11:48.950><c> exception</c><00:11:49.520><c> what</c><00:11:50.120><c> we're</c>

00:11:50.320 --> 00:11:50.330 align:start position:0%
cases an error on exception what we're
 

00:11:50.330 --> 00:11:53.230 align:start position:0%
cases an error on exception what we're
accusing<00:11:50.690><c> this</c><00:11:51.080><c> in</c><00:11:51.560><c> a</c><00:11:51.710><c> loop</c><00:11:51.860><c> so</c><00:11:52.640><c> you</c><00:11:52.670><c> see</c><00:11:53.060><c> this</c>

00:11:53.230 --> 00:11:53.240 align:start position:0%
accusing this in a loop so you see this
 

00:11:53.240 --> 00:11:55.990 align:start position:0%
accusing this in a loop so you see this
in<00:11:53.570><c> there</c><00:11:53.810><c> from</c><00:11:54.020><c> an</c><00:11:54.110><c> exercise</c><00:11:54.560><c> as</c><00:11:54.740><c> well</c><00:11:55.000><c> so</c>

00:11:55.990 --> 00:11:56.000 align:start position:0%
in there from an exercise as well so
 

00:11:56.000 --> 00:11:58.930 align:start position:0%
in there from an exercise as well so
what<00:11:56.420><c> is</c><00:11:56.570><c> this</c><00:11:56.780><c> code</c><00:11:57.140><c> really</c><00:11:57.500><c> doing</c><00:11:58.100><c> let's</c>

00:11:58.930 --> 00:11:58.940 align:start position:0%
what is this code really doing let's
 

00:11:58.940 --> 00:12:02.830 align:start position:0%
what is this code really doing let's
focus<00:11:59.210><c> on</c><00:11:59.830><c> this</c><00:12:00.830><c> equation</c><00:12:01.490><c> the</c><00:12:02.270><c> heart</c><00:12:02.540><c> of</c><00:12:02.750><c> a</c>

00:12:02.830 --> 00:12:02.840 align:start position:0%
focus on this equation the heart of a
 

00:12:02.840 --> 00:12:05.890 align:start position:0%
focus on this equation the heart of a
tentacle<00:12:03.380><c> program</c><00:12:03.860><c> is</c><00:12:04.240><c> something</c><00:12:05.240><c> to</c><00:12:05.420><c> compute</c>

00:12:05.890 --> 00:12:05.900 align:start position:0%
tentacle program is something to compute
 

00:12:05.900 --> 00:12:08.620 align:start position:0%
tentacle program is something to compute
a<00:12:05.930><c> cost</c><00:12:06.500><c> and</c><00:12:06.860><c> then</c><00:12:07.580><c> ten</c><00:12:08.270><c> to</c><00:12:08.390><c> flow</c>

00:12:08.620 --> 00:12:08.630 align:start position:0%
a cost and then ten to flow
 

00:12:08.630 --> 00:12:10.090 align:start position:0%
a cost and then ten to flow
automatically<00:12:09.320><c> figures</c><00:12:09.680><c> out</c><00:12:09.830><c> the</c>

00:12:10.090 --> 00:12:10.100 align:start position:0%
automatically figures out the
 

00:12:10.100 --> 00:12:11.950 align:start position:0%
automatically figures out the
derivatives<00:12:10.700><c> and</c><00:12:11.000><c> how</c><00:12:11.300><c> to</c><00:12:11.360><c> minimize</c><00:12:11.930><c> that</c>

00:12:11.950 --> 00:12:11.960 align:start position:0%
derivatives and how to minimize that
 

00:12:11.960 --> 00:12:16.270 align:start position:0%
derivatives and how to minimize that
cost<00:12:12.290><c> so</c><00:12:12.920><c> what</c><00:12:13.760><c> this</c><00:12:14.080><c> equation</c><00:12:15.080><c> or</c><00:12:15.620><c> what</c><00:12:16.010><c> does</c>

00:12:16.270 --> 00:12:16.280 align:start position:0%
cost so what this equation or what does
 

00:12:16.280 --> 00:12:19.360 align:start position:0%
cost so what this equation or what does
some<00:12:16.580><c> line</c><00:12:17.210><c> of</c><00:12:17.390><c> code</c><00:12:17.600><c> is</c><00:12:17.780><c> doing</c><00:12:17.990><c> is</c><00:12:18.370><c> its</c>

00:12:19.360 --> 00:12:19.370 align:start position:0%
some line of code is doing is its
 

00:12:19.370 --> 00:12:21.940 align:start position:0%
some line of code is doing is its
allowing<00:12:19.490><c> tender</c><00:12:20.360><c> flow</c><00:12:20.570><c> to</c><00:12:21.200><c> construct</c><00:12:21.740><c> a</c>

00:12:21.940 --> 00:12:21.950 align:start position:0%
allowing tender flow to construct a
 

00:12:21.950 --> 00:12:24.250 align:start position:0%
allowing tender flow to construct a
computation<00:12:22.850><c> graph</c><00:12:23.120><c> and</c><00:12:23.450><c> a</c><00:12:23.750><c> computation</c>

00:12:24.250 --> 00:12:24.260 align:start position:0%
computation graph and a computation
 

00:12:24.260 --> 00:12:25.540 align:start position:0%
computation graph and a computation
drought<00:12:24.680><c> does</c><00:12:24.950><c> the</c><00:12:25.130><c> following</c>

00:12:25.540 --> 00:12:25.550 align:start position:0%
drought does the following
 

00:12:25.550 --> 00:12:30.130 align:start position:0%
drought does the following
it<00:12:25.730><c> takes</c><00:12:25.940><c> X</c><00:12:26.210><c> 0</c><00:12:26.540><c> 0</c><00:12:27.220><c> it</c><00:12:28.220><c> takes</c><00:12:28.460><c> W</c><00:12:29.000><c> and</c><00:12:29.270><c> then</c><00:12:30.110><c> I</c>

00:12:30.130 --> 00:12:30.140 align:start position:0%
it takes X 0 0 it takes W and then I
 

00:12:30.140 --> 00:12:36.130 align:start position:0%
it takes X 0 0 it takes W and then I
guess<00:12:30.440><c> W</c><00:12:30.920><c> gets</c><00:12:31.640><c> squared</c><00:12:32.090><c> and</c><00:12:32.890><c> then</c><00:12:33.890><c> X</c><00:12:34.220><c> 0</c><00:12:34.400><c> 0</c><00:12:35.140><c> gets</c>

00:12:36.130 --> 00:12:36.140 align:start position:0%
guess W gets squared and then X 0 0 gets
 

00:12:36.140 --> 00:12:38.530 align:start position:0%
guess W gets squared and then X 0 0 gets
multiplied<00:12:36.620><c> with</c><00:12:36.800><c> W</c><00:12:37.160><c> squared</c>

00:12:38.530 --> 00:12:38.540 align:start position:0%
multiplied with W squared
 

00:12:38.540 --> 00:12:43.290 align:start position:0%
multiplied with W squared
you<00:12:38.600><c> have</c><00:12:38.750><c> X</c><00:12:38.990><c> zero</c><00:12:39.380><c> zero</c><00:12:40.150><c> times</c><00:12:41.150><c> W</c><00:12:41.960><c> squared</c><00:12:42.350><c> and</c>

00:12:43.290 --> 00:12:43.300 align:start position:0%
you have X zero zero times W squared and
 

00:12:43.300 --> 00:12:46.750 align:start position:0%
you have X zero zero times W squared and
so<00:12:44.300><c> on</c><00:12:44.510><c> right</c><00:12:44.870><c> and</c><00:12:45.170><c> eventually</c><00:12:45.560><c> you</c><00:12:46.400><c> know</c><00:12:46.520><c> this</c>

00:12:46.750 --> 00:12:46.760 align:start position:0%
so on right and eventually you know this
 

00:12:46.760 --> 00:12:50.560 align:start position:0%
so on right and eventually you know this
gets<00:12:47.030><c> built</c><00:12:47.330><c> up</c><00:12:47.510><c> to</c><00:12:48.470><c> compute</c><00:12:48.920><c> this</c><00:12:49.100><c> xw</c><00:12:50.030><c> x</c><00:12:50.270><c> zero</c>

00:12:50.560 --> 00:12:50.570 align:start position:0%
gets built up to compute this xw x zero
 

00:12:50.570 --> 00:12:53.230 align:start position:0%
gets built up to compute this xw x zero
zero<00:12:50.810><c> times</c><00:12:51.020><c> W</c><00:12:51.380><c> squared</c><00:12:51.680><c> plus</c><00:12:51.980><c> x10</c><00:12:52.460><c> times</c><00:12:52.820><c> W</c>

00:12:53.230 --> 00:12:53.240 align:start position:0%
zero times W squared plus x10 times W
 

00:12:53.240 --> 00:12:56.260 align:start position:0%
zero times W squared plus x10 times W
plus<00:12:53.420><c> and</c><00:12:54.020><c> so</c><00:12:54.170><c> on</c><00:12:54.230><c> and</c><00:12:54.590><c> so</c><00:12:54.860><c> eventually</c><00:12:55.250><c> you</c><00:12:56.060><c> get</c>

00:12:56.260 --> 00:12:56.270 align:start position:0%
plus and so on and so eventually you get
 

00:12:56.270 --> 00:12:58.810 align:start position:0%
plus and so on and so eventually you get
your<00:12:56.990><c> the</c><00:12:57.170><c> cost</c><00:12:57.440><c> function</c><00:12:57.680><c> right</c><00:12:58.400><c> now</c><00:12:58.490><c> against</c>

00:12:58.810 --> 00:12:58.820 align:start position:0%
your the cost function right now against
 

00:12:58.820 --> 00:13:02.050 align:start position:0%
your the cost function right now against
the<00:12:58.970><c> last</c><00:12:59.150><c> term</c><00:12:59.450><c> to</c><00:12:59.600><c> be</c><00:12:59.690><c> added</c><00:13:00.080><c> would</c><00:13:00.260><c> be</c><00:13:00.470><c> a</c><00:13:01.060><c> x2</c>

00:13:02.050 --> 00:13:02.060 align:start position:0%
the last term to be added would be a x2
 

00:13:02.060 --> 00:13:05.620 align:start position:0%
the last term to be added would be a x2
0<00:13:02.890><c> where</c><00:13:03.890><c> it</c><00:13:03.980><c> gets</c><00:13:04.190><c> added</c><00:13:04.430><c> to</c><00:13:04.940><c> be</c><00:13:05.060><c> the</c><00:13:05.180><c> cost</c><00:13:05.420><c> I</c>

00:13:05.620 --> 00:13:05.630 align:start position:0%
0 where it gets added to be the cost I
 

00:13:05.630 --> 00:13:06.730 align:start position:0%
0 where it gets added to be the cost I
won't<00:13:05.840><c> write</c><00:13:05.990><c> the</c><00:13:06.020><c> other</c><00:13:06.170><c> form</c><00:13:06.440><c> under</c><00:13:06.680><c> the</c>

00:13:06.730 --> 00:13:06.740 align:start position:0%
won't write the other form under the
 

00:13:06.740 --> 00:13:10.900 align:start position:0%
won't write the other form under the
cost<00:13:06.950><c> and</c><00:13:07.280><c> and</c><00:13:08.240><c> the</c><00:13:08.930><c> nice</c><00:13:09.140><c> thing</c><00:13:09.440><c> about</c><00:13:09.910><c> center</c>

00:13:10.900 --> 00:13:10.910 align:start position:0%
cost and and the nice thing about center
 

00:13:10.910 --> 00:13:13.420 align:start position:0%
cost and and the nice thing about center
flow<00:13:11.060><c> is</c><00:13:11.420><c> that</c><00:13:11.720><c> by</c><00:13:12.110><c> implementing</c><00:13:12.650><c> maybe</c>

00:13:13.420 --> 00:13:13.430 align:start position:0%
flow is that by implementing maybe
 

00:13:13.430 --> 00:13:15.100 align:start position:0%
flow is that by implementing maybe
forward<00:13:13.910><c> propagation</c><00:13:14.420><c> through</c><00:13:14.960><c> this</c>

00:13:15.100 --> 00:13:15.110 align:start position:0%
forward propagation through this
 

00:13:15.110 --> 00:13:18.370 align:start position:0%
forward propagation through this
computation<00:13:15.980><c> graph</c><00:13:16.220><c> the</c><00:13:16.460><c> computed</c><00:13:16.970><c> cost</c><00:13:17.380><c> tens</c>

00:13:18.370 --> 00:13:18.380 align:start position:0%
computation graph the computed cost tens
 

00:13:18.380 --> 00:13:21.040 align:start position:0%
computation graph the computed cost tens
of<00:13:18.530><c> flow</c><00:13:18.680><c> has</c><00:13:18.950><c> already</c><00:13:19.340><c> back</c><00:13:19.640><c> built</c><00:13:19.970><c> in</c><00:13:20.180><c> all</c>

00:13:21.040 --> 00:13:21.050 align:start position:0%
of flow has already back built in all
 

00:13:21.050 --> 00:13:24.310 align:start position:0%
of flow has already back built in all
the<00:13:21.530><c> necessary</c><00:13:22.330><c> backward</c><00:13:23.330><c> functions</c><00:13:23.870><c> so</c>

00:13:24.310 --> 00:13:24.320 align:start position:0%
the necessary backward functions so
 

00:13:24.320 --> 00:13:26.740 align:start position:0%
the necessary backward functions so
remember<00:13:24.860><c> how</c><00:13:25.190><c> training</c><00:13:26.090><c> a</c><00:13:26.210><c> thief</c><00:13:26.540><c> new</c>

00:13:26.740 --> 00:13:26.750 align:start position:0%
remember how training a thief new
 

00:13:26.750 --> 00:13:28.600 align:start position:0%
remember how training a thief new
network<00:13:27.200><c> has</c><00:13:27.500><c> a</c><00:13:27.530><c> set</c><00:13:27.800><c> of</c><00:13:27.920><c> forward</c><00:13:28.190><c> functions</c>

00:13:28.600 --> 00:13:28.610 align:start position:0%
network has a set of forward functions
 

00:13:28.610 --> 00:13:30.750 align:start position:0%
network has a set of forward functions
instead<00:13:28.910><c> of</c><00:13:29.090><c> backward</c><00:13:29.510><c> functions</c><00:13:29.960><c> and</c>

00:13:30.750 --> 00:13:30.760 align:start position:0%
instead of backward functions and
 

00:13:30.760 --> 00:13:32.950 align:start position:0%
instead of backward functions and
programming<00:13:31.760><c> frameworks</c><00:13:32.150><c> Blake</c><00:13:32.390><c> tensorflow</c>

00:13:32.950 --> 00:13:32.960 align:start position:0%
programming frameworks Blake tensorflow
 

00:13:32.960 --> 00:13:35.110 align:start position:0%
programming frameworks Blake tensorflow
have<00:13:33.290><c> already</c><00:13:33.740><c> built</c><00:13:34.040><c> in</c><00:13:34.280><c> the</c><00:13:34.880><c> necessary</c>

00:13:35.110 --> 00:13:35.120 align:start position:0%
have already built in the necessary
 

00:13:35.120 --> 00:13:38.380 align:start position:0%
have already built in the necessary
backward<00:13:36.110><c> functions</c><00:13:36.590><c> which</c><00:13:37.280><c> is</c><00:13:37.430><c> why</c><00:13:37.640><c> by</c><00:13:38.000><c> using</c>

00:13:38.380 --> 00:13:38.390 align:start position:0%
backward functions which is why by using
 

00:13:38.390 --> 00:13:40.720 align:start position:0%
backward functions which is why by using
the<00:13:39.080><c> built-in</c><00:13:39.470><c> functions</c><00:13:39.980><c> to</c><00:13:40.250><c> compute</c><00:13:40.640><c> the</c>

00:13:40.720 --> 00:13:40.730 align:start position:0%
the built-in functions to compute the
 

00:13:40.730 --> 00:13:43.300 align:start position:0%
the built-in functions to compute the
forward<00:13:41.090><c> function</c><00:13:41.510><c> it</c><00:13:42.200><c> can</c><00:13:42.410><c> automatically</c><00:13:43.010><c> do</c>

00:13:43.300 --> 00:13:43.310 align:start position:0%
forward function it can automatically do
 

00:13:43.310 --> 00:13:45.430 align:start position:0%
forward function it can automatically do
the<00:13:43.490><c> backward</c><00:13:44.000><c> functions</c><00:13:44.480><c> as</c><00:13:44.630><c> well</c><00:13:44.840><c> to</c>

00:13:45.430 --> 00:13:45.440 align:start position:0%
the backward functions as well to
 

00:13:45.440 --> 00:13:47.890 align:start position:0%
the backward functions as well to
implement<00:13:45.890><c> back</c><00:13:46.100><c> propagation</c><00:13:46.400><c> through</c><00:13:47.120><c> even</c>

00:13:47.890 --> 00:13:47.900 align:start position:0%
implement back propagation through even
 

00:13:47.900 --> 00:13:49.900 align:start position:0%
implement back propagation through even
very<00:13:48.140><c> complicated</c><00:13:48.740><c> functions</c><00:13:49.250><c> and</c><00:13:49.550><c> compute</c>

00:13:49.900 --> 00:13:49.910 align:start position:0%
very complicated functions and compute
 

00:13:49.910 --> 00:13:52.120 align:start position:0%
very complicated functions and compute
derivatives<00:13:50.060><c> for</c><00:13:50.630><c> you</c><00:13:50.810><c> so</c><00:13:51.560><c> that's</c><00:13:51.830><c> why</c><00:13:52.070><c> you</c>

00:13:52.120 --> 00:13:52.130 align:start position:0%
derivatives for you so that's why you
 

00:13:52.130 --> 00:13:54.130 align:start position:0%
derivatives for you so that's why you
don't<00:13:52.430><c> need</c><00:13:52.640><c> to</c><00:13:52.760><c> explicitly</c><00:13:53.180><c> implement</c><00:13:53.900><c> back</c>

00:13:54.130 --> 00:13:54.140 align:start position:0%
don't need to explicitly implement back
 

00:13:54.140 --> 00:13:56.260 align:start position:0%
don't need to explicitly implement back
prop<00:13:54.410><c> and</c><00:13:54.710><c> this</c><00:13:55.310><c> is</c><00:13:55.460><c> one</c><00:13:55.640><c> of</c><00:13:55.670><c> the</c><00:13:55.820><c> things</c><00:13:56.000><c> that</c>

00:13:56.260 --> 00:13:56.270 align:start position:0%
prop and this is one of the things that
 

00:13:56.270 --> 00:13:57.910 align:start position:0%
prop and this is one of the things that
make<00:13:56.450><c> the</c><00:13:56.720><c> proving</c><00:13:57.410><c> framework</c>

00:13:57.910 --> 00:13:57.920 align:start position:0%
make the proving framework
 

00:13:57.920 --> 00:14:00.520 align:start position:0%
make the proving framework
help<00:13:58.280><c> you</c><00:13:58.400><c> become</c><00:13:58.580><c> really</c><00:13:58.910><c> efficient</c><00:13:59.510><c> if</c><00:14:00.080><c> you</c>

00:14:00.520 --> 00:14:00.530 align:start position:0%
help you become really efficient if you
 

00:14:00.530 --> 00:14:03.280 align:start position:0%
help you become really efficient if you
look<00:14:00.830><c> at</c><00:14:01.040><c> the</c><00:14:01.250><c> terms</c><00:14:01.640><c> of</c><00:14:01.820><c> so</c><00:14:02.050><c> documentation</c>

00:14:03.280 --> 00:14:03.290 align:start position:0%
look at the terms of so documentation
 

00:14:03.290 --> 00:14:04.840 align:start position:0%
look at the terms of so documentation
I<00:14:03.320><c> just</c><00:14:03.620><c> don't</c><00:14:03.770><c> point</c><00:14:03.980><c> out</c><00:14:04.190><c> that</c><00:14:04.670><c> the</c>

00:14:04.840 --> 00:14:04.850 align:start position:0%
I just don't point out that the
 

00:14:04.850 --> 00:14:06.850 align:start position:0%
I just don't point out that the
tentacled<00:14:05.180><c> documentation</c><00:14:06.110><c> uses</c><00:14:06.500><c> a</c><00:14:06.530><c> slightly</c>

00:14:06.850 --> 00:14:06.860 align:start position:0%
tentacled documentation uses a slightly
 

00:14:06.860 --> 00:14:09.220 align:start position:0%
tentacled documentation uses a slightly
different<00:14:07.160><c> notation</c><00:14:07.730><c> then</c><00:14:08.480><c> I</c><00:14:08.630><c> did</c><00:14:08.900><c> for</c>

00:14:09.220 --> 00:14:09.230 align:start position:0%
different notation then I did for
 

00:14:09.230 --> 00:14:12.130 align:start position:0%
different notation then I did for
drawing<00:14:09.860><c> the</c><00:14:09.920><c> computation</c><00:14:10.580><c> graph</c><00:14:10.820><c> that</c><00:14:11.150><c> uses</c>

00:14:12.130 --> 00:14:12.140 align:start position:0%
drawing the computation graph that uses
 

00:14:12.140 --> 00:14:15.550 align:start position:0%
drawing the computation graph that uses
X<00:14:12.380><c> 0</c><00:14:12.710><c> 0</c><00:14:13.090><c> W</c><00:14:14.090><c> and</c><00:14:14.330><c> then</c><00:14:14.480><c> rather</c><00:14:14.690><c> than</c><00:14:14.990><c> writing</c><00:14:15.230><c> the</c>

00:14:15.550 --> 00:14:15.560 align:start position:0%
X 0 0 W and then rather than writing the
 

00:14:15.560 --> 00:14:18.220 align:start position:0%
X 0 0 W and then rather than writing the
value<00:14:16.010><c> like</c><00:14:16.370><c> W</c><00:14:16.760><c> squared</c><00:14:17.090><c> the</c><00:14:17.690><c> tension-filled</c>

00:14:18.220 --> 00:14:18.230 align:start position:0%
value like W squared the tension-filled
 

00:14:18.230 --> 00:14:20.200 align:start position:0%
value like W squared the tension-filled
documentation<00:14:18.950><c> tends</c><00:14:19.220><c> to</c><00:14:19.340><c> just</c><00:14:19.580><c> write</c><00:14:20.090><c> the</c>

00:14:20.200 --> 00:14:20.210 align:start position:0%
documentation tends to just write the
 

00:14:20.210 --> 00:14:22.630 align:start position:0%
documentation tends to just write the
operations<00:14:20.960><c> so</c><00:14:21.230><c> this</c><00:14:21.440><c> would</c><00:14:21.590><c> be</c><00:14:21.770><c> a</c><00:14:21.800><c> square</c>

00:14:22.630 --> 00:14:22.640 align:start position:0%
operations so this would be a square
 

00:14:22.640 --> 00:14:25.540 align:start position:0%
operations so this would be a square
operation<00:14:23.300><c> and</c><00:14:23.570><c> these</c><00:14:24.170><c> two</c><00:14:24.470><c> get</c><00:14:24.710><c> combined</c><00:14:25.220><c> in</c>

00:14:25.540 --> 00:14:25.550 align:start position:0%
operation and these two get combined in
 

00:14:25.550 --> 00:14:28.660 align:start position:0%
operation and these two get combined in
a<00:14:25.730><c> multiplication</c><00:14:26.510><c> operation</c><00:14:27.410><c> and</c><00:14:27.650><c> so</c><00:14:28.220><c> on</c><00:14:28.400><c> and</c>

00:14:28.660 --> 00:14:28.670 align:start position:0%
a multiplication operation and so on and
 

00:14:28.670 --> 00:14:30.430 align:start position:0%
a multiplication operation and so on and
then<00:14:28.760><c> the</c><00:14:28.850><c> final</c><00:14:29.300><c> note</c><00:14:29.540><c> I</c><00:14:29.810><c> get</c><00:14:30.020><c> there'd</c><00:14:30.260><c> be</c><00:14:30.380><c> a</c>

00:14:30.430 --> 00:14:30.440 align:start position:0%
then the final note I get there'd be a
 

00:14:30.440 --> 00:14:33.910 align:start position:0%
then the final note I get there'd be a
addition<00:14:31.340><c> operation</c><00:14:31.940><c> when</c><00:14:32.180><c> you</c><00:14:32.300><c> add</c><00:14:32.510><c> X</c><00:14:32.960><c> to</c><00:14:33.140><c> 0</c>

00:14:33.910 --> 00:14:33.920 align:start position:0%
addition operation when you add X to 0
 

00:14:33.920 --> 00:14:36.790 align:start position:0%
addition operation when you add X to 0
to<00:14:34.580><c> find</c><00:14:34.820><c> a</c><00:14:34.910><c> final</c><00:14:35.300><c> value</c><00:14:35.720><c> so</c><00:14:36.440><c> for</c><00:14:36.710><c> the</c>

00:14:36.790 --> 00:14:36.800 align:start position:0%
to find a final value so for the
 

00:14:36.800 --> 00:14:38.560 align:start position:0%
to find a final value so for the
purposes<00:14:37.220><c> of</c><00:14:37.280><c> this</c><00:14:37.550><c> clause</c><00:14:37.790><c> I</c><00:14:38.060><c> thought</c><00:14:38.300><c> that</c>

00:14:38.560 --> 00:14:38.570 align:start position:0%
purposes of this clause I thought that
 

00:14:38.570 --> 00:14:41.020 align:start position:0%
purposes of this clause I thought that
this<00:14:39.110><c> notation</c><00:14:39.770><c> for</c><00:14:40.010><c> the</c><00:14:40.100><c> compensation</c><00:14:40.430><c> drop</c>

00:14:41.020 --> 00:14:41.030 align:start position:0%
this notation for the compensation drop
 

00:14:41.030 --> 00:14:42.940 align:start position:0%
this notation for the compensation drop
would<00:14:41.240><c> be</c><00:14:41.390><c> easier</c><00:14:41.780><c> for</c><00:14:41.870><c> you</c><00:14:42.200><c> to</c><00:14:42.230><c> understand</c>

00:14:42.940 --> 00:14:42.950 align:start position:0%
would be easier for you to understand
 

00:14:42.950 --> 00:14:45.840 align:start position:0%
would be easier for you to understand
but<00:14:43.670><c> if</c><00:14:44.420><c> you</c><00:14:44.600><c> look</c><00:14:44.780><c> at</c><00:14:44.900><c> the</c><00:14:45.110><c> tensorflow</c>

00:14:45.840 --> 00:14:45.850 align:start position:0%
but if you look at the tensorflow
 

00:14:45.850 --> 00:14:48.190 align:start position:0%
but if you look at the tensorflow
documentation<00:14:46.850><c> as</c><00:14:47.030><c> we</c><00:14:47.150><c> look</c><00:14:47.330><c> at</c><00:14:47.480><c> the</c>

00:14:48.190 --> 00:14:48.200 align:start position:0%
documentation as we look at the
 

00:14:48.200 --> 00:14:51.160 align:start position:0%
documentation as we look at the
computation<00:14:48.950><c> graphs</c><00:14:49.220><c> in</c><00:14:50.120><c> the</c><00:14:50.420><c> documentation</c>

00:14:51.160 --> 00:14:51.170 align:start position:0%
computation graphs in the documentation
 

00:14:51.170 --> 00:14:53.860 align:start position:0%
computation graphs in the documentation
you<00:14:51.800><c> see</c><00:14:52.130><c> this</c><00:14:52.430><c> alternative</c><00:14:53.240><c> convention</c>

00:14:53.860 --> 00:14:53.870 align:start position:0%
you see this alternative convention
 

00:14:53.870 --> 00:14:55.780 align:start position:0%
you see this alternative convention
where<00:14:54.079><c> the</c><00:14:54.200><c> nodes</c><00:14:54.440><c> are</c><00:14:54.620><c> labeled</c><00:14:54.769><c> with</c><00:14:55.640><c> the</c>

00:14:55.780 --> 00:14:55.790 align:start position:0%
where the nodes are labeled with the
 

00:14:55.790 --> 00:14:58.569 align:start position:0%
where the nodes are labeled with the
operations<00:14:56.649><c> rather</c><00:14:57.649><c> than</c><00:14:57.890><c> with</c><00:14:58.070><c> the</c><00:14:58.100><c> value</c>

00:14:58.569 --> 00:14:58.579 align:start position:0%
operations rather than with the value
 

00:14:58.579 --> 00:15:01.389 align:start position:0%
operations rather than with the value
but<00:14:58.940><c> both</c><00:14:59.300><c> of</c><00:14:59.329><c> these</c><00:14:59.570><c> representations</c><00:15:00.440><c> you</c>

00:15:01.389 --> 00:15:01.399 align:start position:0%
but both of these representations you
 

00:15:01.399 --> 00:15:02.980 align:start position:0%
but both of these representations you
represent<00:15:01.940><c> basically</c><00:15:02.149><c> the</c><00:15:02.480><c> same</c><00:15:02.600><c> computation</c>

00:15:02.980 --> 00:15:02.990 align:start position:0%
represent basically the same computation
 

00:15:02.990 --> 00:15:05.710 align:start position:0%
represent basically the same computation
graph<00:15:03.529><c> and</c><00:15:03.860><c> a</c><00:15:04.430><c> lot</c><00:15:04.640><c> of</c><00:15:04.790><c> things</c><00:15:05.029><c> they</c><00:15:05.240><c> can</c><00:15:05.269><c> do</c>

00:15:05.710 --> 00:15:05.720 align:start position:0%
graph and a lot of things they can do
 

00:15:05.720 --> 00:15:07.300 align:start position:0%
graph and a lot of things they can do
with<00:15:05.750><c> just</c><00:15:06.140><c> one</c><00:15:06.440><c> line</c><00:15:06.649><c> of</c><00:15:06.680><c> code</c><00:15:06.890><c> in</c>

00:15:07.300 --> 00:15:07.310 align:start position:0%
with just one line of code in
 

00:15:07.310 --> 00:15:09.220 align:start position:0%
with just one line of code in
programming<00:15:07.640><c> frameworks</c><00:15:08.089><c> for</c><00:15:08.390><c> example</c><00:15:08.899><c> if</c>

00:15:09.220 --> 00:15:09.230 align:start position:0%
programming frameworks for example if
 

00:15:09.230 --> 00:15:10.420 align:start position:0%
programming frameworks for example if
you<00:15:09.440><c> don't</c><00:15:09.620><c> want</c><00:15:09.740><c> to</c><00:15:09.829><c> use</c><00:15:09.950><c> gradient</c><00:15:10.370><c> descent</c>

00:15:10.420 --> 00:15:10.430 align:start position:0%
you don't want to use gradient descent
 

00:15:10.430 --> 00:15:13.210 align:start position:0%
you don't want to use gradient descent
but<00:15:11.390><c> instead</c><00:15:11.779><c> you</c><00:15:11.930><c> want</c><00:15:12.140><c> to</c><00:15:12.230><c> use</c><00:15:12.470><c> the</c><00:15:12.740><c> atom</c>

00:15:13.210 --> 00:15:13.220 align:start position:0%
but instead you want to use the atom
 

00:15:13.220 --> 00:15:15.699 align:start position:0%
but instead you want to use the atom
optimizer<00:15:13.700><c> by</c><00:15:14.420><c> changing</c><00:15:14.899><c> this</c><00:15:15.140><c> line</c><00:15:15.380><c> of</c><00:15:15.529><c> code</c>

00:15:15.699 --> 00:15:15.709 align:start position:0%
optimizer by changing this line of code
 

00:15:15.709 --> 00:15:18.759 align:start position:0%
optimizer by changing this line of code
you<00:15:15.980><c> can</c><00:15:16.250><c> very</c><00:15:16.579><c> quickly</c><00:15:16.790><c> swap</c><00:15:17.450><c> it</c><00:15:17.660><c> swap</c><00:15:18.290><c> in</c><00:15:18.470><c> a</c>

00:15:18.759 --> 00:15:18.769 align:start position:0%
you can very quickly swap it swap in a
 

00:15:18.769 --> 00:15:22.269 align:start position:0%
you can very quickly swap it swap in a
better<00:15:19.670><c> optimization</c><00:15:20.329><c> algorithm</c><00:15:21.079><c> so</c><00:15:21.740><c> all</c><00:15:22.040><c> the</c>

00:15:22.269 --> 00:15:22.279 align:start position:0%
better optimization algorithm so all the
 

00:15:22.279 --> 00:15:24.550 align:start position:0%
better optimization algorithm so all the
modern<00:15:22.790><c> deep</c><00:15:23.390><c> learning</c><00:15:23.600><c> program</c><00:15:24.079><c> frameworks</c>

00:15:24.550 --> 00:15:24.560 align:start position:0%
modern deep learning program frameworks
 

00:15:24.560 --> 00:15:27.310 align:start position:0%
modern deep learning program frameworks
support<00:15:25.550><c> things</c><00:15:26.029><c> like</c><00:15:26.149><c> this</c><00:15:26.510><c> and</c><00:15:26.779><c> makes</c><00:15:27.170><c> it</c>

00:15:27.310 --> 00:15:27.320 align:start position:0%
support things like this and makes it
 

00:15:27.320 --> 00:15:29.740 align:start position:0%
support things like this and makes it
really<00:15:27.500><c> easy</c><00:15:27.620><c> for</c><00:15:28.130><c> you</c><00:15:28.279><c> to</c><00:15:28.610><c> code</c><00:15:29.029><c> up</c><00:15:29.060><c> even</c>

00:15:29.740 --> 00:15:29.750 align:start position:0%
really easy for you to code up even
 

00:15:29.750 --> 00:15:32.620 align:start position:0%
really easy for you to code up even
pretty<00:15:30.019><c> complex</c><00:15:30.560><c> neural</c><00:15:31.370><c> networks</c><00:15:31.790><c> so</c><00:15:32.360><c> I</c><00:15:32.420><c> hope</c>

00:15:32.620 --> 00:15:32.630 align:start position:0%
pretty complex neural networks so I hope
 

00:15:32.630 --> 00:15:34.480 align:start position:0%
pretty complex neural networks so I hope
this<00:15:32.810><c> was</c><00:15:32.990><c> helpful</c><00:15:33.410><c> for</c><00:15:33.440><c> giving</c><00:15:33.980><c> you</c><00:15:34.100><c> a</c><00:15:34.130><c> sense</c>

00:15:34.480 --> 00:15:34.490 align:start position:0%
this was helpful for giving you a sense
 

00:15:34.490 --> 00:15:36.730 align:start position:0%
this was helpful for giving you a sense
of<00:15:34.760><c> the</c><00:15:34.880><c> typical</c><00:15:35.329><c> structure</c><00:15:35.750><c> of</c><00:15:35.959><c> a</c><00:15:36.410><c> tensor</c>

00:15:36.730 --> 00:15:36.740 align:start position:0%
of the typical structure of a tensor
 

00:15:36.740 --> 00:15:39.400 align:start position:0%
of the typical structure of a tensor
field<00:15:36.769><c> program</c><00:15:37.370><c> to</c><00:15:38.240><c> recap</c><00:15:38.720><c> the</c><00:15:38.899><c> material</c><00:15:39.320><c> from</c>

00:15:39.400 --> 00:15:39.410 align:start position:0%
field program to recap the material from
 

00:15:39.410 --> 00:15:41.380 align:start position:0%
field program to recap the material from
this<00:15:39.620><c> week</c><00:15:39.800><c> you</c><00:15:40.339><c> saw</c><00:15:40.579><c> how</c><00:15:40.880><c> to</c><00:15:40.910><c> systematically</c>

00:15:41.380 --> 00:15:41.390 align:start position:0%
this week you saw how to systematically
 

00:15:41.390 --> 00:15:43.720 align:start position:0%
this week you saw how to systematically
organize<00:15:42.230><c> the</c><00:15:42.589><c> hyper</c><00:15:43.070><c> parameter</c><00:15:43.519><c> search</c>

00:15:43.720 --> 00:15:43.730 align:start position:0%
organize the hyper parameter search
 

00:15:43.730 --> 00:15:45.759 align:start position:0%
organize the hyper parameter search
process<00:15:44.209><c> we</c><00:15:44.899><c> also</c><00:15:44.990><c> talked</c><00:15:45.350><c> about</c><00:15:45.440><c> batch</c>

00:15:45.759 --> 00:15:45.769 align:start position:0%
process we also talked about batch
 

00:15:45.769 --> 00:15:47.500 align:start position:0%
process we also talked about batch
normalization<00:15:46.640><c> and</c><00:15:46.850><c> how</c><00:15:46.940><c> you</c><00:15:47.000><c> can</c><00:15:47.149><c> use</c><00:15:47.329><c> that</c>

00:15:47.500 --> 00:15:47.510 align:start position:0%
normalization and how you can use that
 

00:15:47.510 --> 00:15:49.269 align:start position:0%
normalization and how you can use that
to<00:15:47.720><c> speed</c><00:15:47.959><c> up</c><00:15:48.079><c> training</c><00:15:48.350><c> of</c><00:15:48.589><c> your</c><00:15:48.860><c> networks</c>

00:15:49.269 --> 00:15:49.279 align:start position:0%
to speed up training of your networks
 

00:15:49.279 --> 00:15:51.940 align:start position:0%
to speed up training of your networks
and<00:15:49.550><c> finally</c><00:15:50.120><c> we</c><00:15:50.600><c> talked</c><00:15:50.870><c> about</c><00:15:50.990><c> programming</c>

00:15:51.940 --> 00:15:51.950 align:start position:0%
and finally we talked about programming
 

00:15:51.950 --> 00:15:53.680 align:start position:0%
and finally we talked about programming
frameworks<00:15:52.430><c> so</c><00:15:52.610><c> deep</c><00:15:52.790><c> learning</c><00:15:53.000><c> there</c><00:15:53.630><c> are</c>

00:15:53.680 --> 00:15:53.690 align:start position:0%
frameworks so deep learning there are
 

00:15:53.690 --> 00:15:56.410 align:start position:0%
frameworks so deep learning there are
many<00:15:53.899><c> great</c><00:15:54.230><c> program</c><00:15:54.620><c> frameworks</c><00:15:55.070><c> and</c><00:15:55.850><c> we</c><00:15:56.149><c> had</c>

00:15:56.410 --> 00:15:56.420 align:start position:0%
many great program frameworks and we had
 

00:15:56.420 --> 00:15:58.810 align:start position:0%
many great program frameworks and we had
this<00:15:56.570><c> last</c><00:15:56.779><c> video</c><00:15:57.079><c> focusing</c><00:15:57.800><c> on</c><00:15:57.949><c> tens</c><00:15:58.519><c> of</c><00:15:58.670><c> so</c>

00:15:58.810 --> 00:15:58.820 align:start position:0%
this last video focusing on tens of so
 

00:15:58.820 --> 00:16:01.930 align:start position:0%
this last video focusing on tens of so
with<00:15:59.750><c> that</c><00:15:59.959><c> I</c><00:16:00.260><c> hope</c><00:16:00.740><c> you</c><00:16:00.949><c> enjoyed</c><00:16:01.430><c> this</c><00:16:01.730><c> week's</c>

00:16:01.930 --> 00:16:01.940 align:start position:0%
with that I hope you enjoyed this week's
 

00:16:01.940 --> 00:16:04.329 align:start position:0%
with that I hope you enjoyed this week's
pro<00:16:02.240><c> exercise</c><00:16:02.779><c> and</c><00:16:03.050><c> that</c><00:16:03.470><c> helps</c><00:16:03.860><c> you</c><00:16:03.980><c> gain</c>

00:16:04.329 --> 00:16:04.339 align:start position:0%
pro exercise and that helps you gain
 

00:16:04.339 --> 00:16:08.290 align:start position:0%
pro exercise and that helps you gain
even<00:16:04.579><c> more</c><00:16:04.760><c> familiarity</c><00:16:05.329><c> with</c><00:16:05.899><c> these</c><00:16:06.079><c> ideas</c>

