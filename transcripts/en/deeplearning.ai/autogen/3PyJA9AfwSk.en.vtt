WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:02.330
in the last video you saw the building

00:00:02.330 --> 00:00:02.340
in the last video you saw the building
 

00:00:02.340 --> 00:00:04.220
in the last video you saw the building
boss of a single layer the single

00:00:04.220 --> 00:00:04.230
boss of a single layer the single
 

00:00:04.230 --> 00:00:07.039
boss of a single layer the single
convolutional layer in a confident now

00:00:07.039 --> 00:00:07.049
convolutional layer in a confident now
 

00:00:07.049 --> 00:00:10.009
convolutional layer in a confident now
let's go through a concrete example of a

00:00:10.009 --> 00:00:10.019
let's go through a concrete example of a
 

00:00:10.019 --> 00:00:12.379
let's go through a concrete example of a
deep convolutional neural network and

00:00:12.379 --> 00:00:12.389
deep convolutional neural network and
 

00:00:12.389 --> 00:00:13.970
deep convolutional neural network and
this will give you some practice with

00:00:13.970 --> 00:00:13.980
this will give you some practice with
 

00:00:13.980 --> 00:00:15.829
this will give you some practice with
the notation that we introduced to at

00:00:15.829 --> 00:00:15.839
the notation that we introduced to at
 

00:00:15.839 --> 00:00:20.120
the notation that we introduced to at
the end of the last video as well let's

00:00:20.120 --> 00:00:20.130
the end of the last video as well let's
 

00:00:20.130 --> 00:00:24.080
the end of the last video as well let's
say you have an image and you want to do

00:00:24.080 --> 00:00:24.090
say you have an image and you want to do
 

00:00:24.090 --> 00:00:26.390
say you have an image and you want to do
image classification or image

00:00:26.390 --> 00:00:26.400
image classification or image
 

00:00:26.400 --> 00:00:28.310
image classification or image
recognition we want to take as input an

00:00:28.310 --> 00:00:28.320
recognition we want to take as input an
 

00:00:28.320 --> 00:00:31.339
recognition we want to take as input an
image X and decide is this a cat or not

00:00:31.339 --> 00:00:31.349
image X and decide is this a cat or not
 

00:00:31.349 --> 00:00:33.139
image X and decide is this a cat or not
zero or one so it's a complication

00:00:33.139 --> 00:00:33.149
zero or one so it's a complication
 

00:00:33.149 --> 00:00:37.280
zero or one so it's a complication
problem so let's do the notional let's

00:00:37.280 --> 00:00:37.290
problem so let's do the notional let's
 

00:00:37.290 --> 00:00:39.110
problem so let's do the notional let's
build an example of a confident you

00:00:39.110 --> 00:00:39.120
build an example of a confident you
 

00:00:39.120 --> 00:00:41.869
build an example of a confident you
could use for this task for the sake of

00:00:41.869 --> 00:00:41.879
could use for this task for the sake of
 

00:00:41.879 --> 00:00:44.690
could use for this task for the sake of
this example I'm going to use a fairly

00:00:44.690 --> 00:00:44.700
this example I'm going to use a fairly
 

00:00:44.700 --> 00:00:47.720
this example I'm going to use a fairly
small image let's say this image is 39

00:00:47.720 --> 00:00:47.730
small image let's say this image is 39
 

00:00:47.730 --> 00:00:52.369
small image let's say this image is 39
by 39 by 3 this noise just make some of

00:00:52.369 --> 00:00:52.379
by 39 by 3 this noise just make some of
 

00:00:52.379 --> 00:00:54.740
by 39 by 3 this noise just make some of
the numbers work all a bit better and so

00:00:54.740 --> 00:00:54.750
the numbers work all a bit better and so
 

00:00:54.750 --> 00:01:00.200
the numbers work all a bit better and so
an itch it layer 0 would be equal to M W

00:01:00.200 --> 00:01:00.210
an itch it layer 0 would be equal to M W
 

00:01:00.210 --> 00:01:04.070
an itch it layer 0 would be equal to M W
height and width equal to 39 and the

00:01:04.070 --> 00:01:04.080
height and width equal to 39 and the
 

00:01:04.080 --> 00:01:06.530
height and width equal to 39 and the
number of channels and there a 0 is

00:01:06.530 --> 00:01:06.540
number of channels and there a 0 is
 

00:01:06.540 --> 00:01:11.530
number of channels and there a 0 is
equal to 3 let's say the first layer

00:01:11.530 --> 00:01:11.540
equal to 3 let's say the first layer
 

00:01:11.540 --> 00:01:15.429
equal to 3 let's say the first layer
uses a set of 3 by 3 filters to detect

00:01:15.429 --> 00:01:15.439
uses a set of 3 by 3 filters to detect
 

00:01:15.439 --> 00:01:19.940
uses a set of 3 by 3 filters to detect
features so f is equal to 3 already F 1

00:01:19.940 --> 00:01:19.950
features so f is equal to 3 already F 1
 

00:01:19.950 --> 00:01:22.760
features so f is equal to 3 already F 1
is equal to 3 because we're using 3 by 3

00:01:22.760 --> 00:01:22.770
is equal to 3 because we're using 3 by 3
 

00:01:22.770 --> 00:01:25.190
is equal to 3 because we're using 3 by 3
filters and let's say we're using a

00:01:25.190 --> 00:01:25.200
filters and let's say we're using a
 

00:01:25.200 --> 00:01:30.230
filters and let's say we're using a
Ghost Rider 1 and no padding so using a

00:01:30.230 --> 00:01:30.240
Ghost Rider 1 and no padding so using a
 

00:01:30.240 --> 00:01:33.490
Ghost Rider 1 and no padding so using a
same convolution and let's say you have

00:01:33.490 --> 00:01:33.500
same convolution and let's say you have
 

00:01:33.500 --> 00:01:39.020
same convolution and let's say you have
10 filters then the activations in this

00:01:39.020 --> 00:01:39.030
10 filters then the activations in this
 

00:01:39.030 --> 00:01:42.850
10 filters then the activations in this
next layer of the neural network will be

00:01:42.850 --> 00:01:42.860
next layer of the neural network will be
 

00:01:42.860 --> 00:01:48.679
next layer of the neural network will be
37 by 30 7 by 10 and this 10 comes from

00:01:48.679 --> 00:01:48.689
37 by 30 7 by 10 and this 10 comes from
 

00:01:48.689 --> 00:01:53.389
37 by 30 7 by 10 and this 10 comes from
the fact that you use 10 filters and 37

00:01:53.389 --> 00:01:53.399
the fact that you use 10 filters and 37
 

00:01:53.399 --> 00:01:59.209
the fact that you use 10 filters and 37
comes from this formula n + 2 P minus F

00:01:59.209 --> 00:01:59.219
comes from this formula n + 2 P minus F
 

00:01:59.219 --> 00:02:02.690
comes from this formula n + 2 P minus F
/ s plus 1 all right then I guess you

00:02:02.690 --> 00:02:02.700
/ s plus 1 all right then I guess you
 

00:02:02.700 --> 00:02:12.080
/ s plus 1 all right then I guess you
have a 39 + 0 - 3 / 1 + 1 that's equal

00:02:12.080 --> 00:02:12.090
have a 39 + 0 - 3 / 1 + 1 that's equal
 

00:02:12.090 --> 00:02:13.580
have a 39 + 0 - 3 / 1 + 1 that's equal
to the 37 so that's

00:02:13.580 --> 00:02:13.590
to the 37 so that's
 

00:02:13.590 --> 00:02:15.740
to the 37 so that's
like Oprah studies have invited in seven

00:02:15.740 --> 00:02:15.750
like Oprah studies have invited in seven
 

00:02:15.750 --> 00:02:18.470
like Oprah studies have invited in seven
it's a valid convolution and that's the

00:02:18.470 --> 00:02:18.480
it's a valid convolution and that's the
 

00:02:18.480 --> 00:02:22.640
it's a valid convolution and that's the
output size so in our notation you would

00:02:22.640 --> 00:02:22.650
output size so in our notation you would
 

00:02:22.650 --> 00:02:30.339
output size so in our notation you would
have an h1 equals n w1 equals 37 and MC

00:02:30.339 --> 00:02:30.349
have an h1 equals n w1 equals 37 and MC
 

00:02:30.349 --> 00:02:34.789
have an h1 equals n w1 equals 37 and MC
1 is equal to 10 so and C 1 is also

00:02:34.789 --> 00:02:34.799
1 is equal to 10 so and C 1 is also
 

00:02:34.799 --> 00:02:37.460
1 is equal to 10 so and C 1 is also
equal to the number of filters from the

00:02:37.460 --> 00:02:37.470
equal to the number of filters from the
 

00:02:37.470 --> 00:02:40.820
equal to the number of filters from the
first layer and so this becomes the

00:02:40.820 --> 00:02:40.830
first layer and so this becomes the
 

00:02:40.830 --> 00:02:44.300
first layer and so this becomes the
dimension of the activation at the first

00:02:44.300 --> 00:02:44.310
dimension of the activation at the first
 

00:02:44.310 --> 00:02:46.880
dimension of the activation at the first
layer let's say you now have another

00:02:46.880 --> 00:02:46.890
layer let's say you now have another
 

00:02:46.890 --> 00:02:49.069
layer let's say you now have another
convolutional layer and let's say this

00:02:49.069 --> 00:02:49.079
convolutional layer and let's say this
 

00:02:49.079 --> 00:02:51.949
convolutional layer and let's say this
time you use five by five filters so in

00:02:51.949 --> 00:02:51.959
time you use five by five filters so in
 

00:02:51.959 --> 00:02:55.280
time you use five by five filters so in
our notation F 2 and the Knicks there in

00:02:55.280 --> 00:02:55.290
our notation F 2 and the Knicks there in
 

00:02:55.290 --> 00:02:58.729
our notation F 2 and the Knicks there in
your network is equal to 5 and let's say

00:02:58.729 --> 00:02:58.739
your network is equal to 5 and let's say
 

00:02:58.739 --> 00:03:02.420
your network is equal to 5 and let's say
use a stride of two this time and maybe

00:03:02.420 --> 00:03:02.430
use a stride of two this time and maybe
 

00:03:02.430 --> 00:03:11.110
use a stride of two this time and maybe
you have no padding and say 20 filters

00:03:11.110 --> 00:03:11.120
you have no padding and say 20 filters
 

00:03:11.120 --> 00:03:17.289
you have no padding and say 20 filters
so then the output of this will be

00:03:17.289 --> 00:03:17.299
so then the output of this will be
 

00:03:17.299 --> 00:03:20.690
so then the output of this will be
another volume this time will be 17 by

00:03:20.690 --> 00:03:20.700
another volume this time will be 17 by
 

00:03:20.700 --> 00:03:24.710
another volume this time will be 17 by
17 by 20 notice that because you're now

00:03:24.710 --> 00:03:24.720
17 by 20 notice that because you're now
 

00:03:24.720 --> 00:03:27.170
17 by 20 notice that because you're now
using a stride of to the dimension has

00:03:27.170 --> 00:03:27.180
using a stride of to the dimension has
 

00:03:27.180 --> 00:03:30.559
using a stride of to the dimension has
shrunk much faster and 37 by 37 has gone

00:03:30.559 --> 00:03:30.569
shrunk much faster and 37 by 37 has gone
 

00:03:30.569 --> 00:03:32.839
shrunk much faster and 37 by 37 has gone
down in size by slightly more than a

00:03:32.839 --> 00:03:32.849
down in size by slightly more than a
 

00:03:32.849 --> 00:03:36.199
down in size by slightly more than a
factor of 2 to 17 by 17 and because

00:03:36.199 --> 00:03:36.209
factor of 2 to 17 by 17 and because
 

00:03:36.209 --> 00:03:38.599
factor of 2 to 17 by 17 and because
you're using 20 filters the number of

00:03:38.599 --> 00:03:38.609
you're using 20 filters the number of
 

00:03:38.609 --> 00:03:42.309
you're using 20 filters the number of
channels now is 20 so this activation a

00:03:42.309 --> 00:03:42.319
channels now is 20 so this activation a
 

00:03:42.319 --> 00:03:48.229
channels now is 20 so this activation a
2 would be that dimension and so an h2

00:03:48.229 --> 00:03:48.239
2 would be that dimension and so an h2
 

00:03:48.239 --> 00:03:55.819
2 would be that dimension and so an h2
equals n W 2 equal 17 and and C 2 equals

00:03:55.819 --> 00:03:55.829
equals n W 2 equal 17 and and C 2 equals
 

00:03:55.829 --> 00:03:59.330
equals n W 2 equal 17 and and C 2 equals
20 all right let's apply one last

00:03:59.330 --> 00:03:59.340
20 all right let's apply one last
 

00:03:59.340 --> 00:04:02.319
20 all right let's apply one last
convolutional layer so let's say that

00:04:02.319 --> 00:04:02.329
convolutional layer so let's say that
 

00:04:02.329 --> 00:04:06.289
convolutional layer so let's say that
you use a 5 by 5 filter again and again

00:04:06.289 --> 00:04:06.299
you use a 5 by 5 filter again and again
 

00:04:06.299 --> 00:04:11.990
you use a 5 by 5 filter again and again
is stride of 2 so if you do that I'll

00:04:11.990 --> 00:04:12.000
is stride of 2 so if you do that I'll
 

00:04:12.000 --> 00:04:15.379
is stride of 2 so if you do that I'll
skip the math but you end up with a 7 by

00:04:15.379 --> 00:04:15.389
skip the math but you end up with a 7 by
 

00:04:15.389 --> 00:04:19.879
skip the math but you end up with a 7 by
7 and let's say you use 40 filters nope

00:04:19.879 --> 00:04:19.889
7 and let's say you use 40 filters nope
 

00:04:19.889 --> 00:04:23.529
7 and let's say you use 40 filters nope
adding 40 filters you end up with 7 by 7

00:04:23.529 --> 00:04:23.539
adding 40 filters you end up with 7 by 7
 

00:04:23.539 --> 00:04:27.320
adding 40 filters you end up with 7 by 7
by 14 so now what you've done is

00:04:27.320 --> 00:04:27.330
by 14 so now what you've done is
 

00:04:27.330 --> 00:04:31.390
by 14 so now what you've done is
in your 39 by 39 by 3 input image and

00:04:31.390 --> 00:04:31.400
in your 39 by 39 by 3 input image and
 

00:04:31.400 --> 00:04:35.420
in your 39 by 39 by 3 input image and
computed you know 7 by 7 by 40 features

00:04:35.420 --> 00:04:35.430
computed you know 7 by 7 by 40 features
 

00:04:35.430 --> 00:04:38.869
computed you know 7 by 7 by 40 features
for this image and then finally what's

00:04:38.869 --> 00:04:38.879
for this image and then finally what's
 

00:04:38.879 --> 00:04:42.170
for this image and then finally what's
commonly done is if you take the 7 by 7

00:04:42.170 --> 00:04:42.180
commonly done is if you take the 7 by 7
 

00:04:42.180 --> 00:04:46.760
commonly done is if you take the 7 by 7
by 47 times 7 times 40 is actually 1 9 6

00:04:46.760 --> 00:04:46.770
by 47 times 7 times 40 is actually 1 9 6
 

00:04:46.770 --> 00:04:49.610
by 47 times 7 times 40 is actually 1 9 6
0 and so we continuous take this volume

00:04:49.610 --> 00:04:49.620
0 and so we continuous take this volume
 

00:04:49.620 --> 00:04:53.179
0 and so we continuous take this volume
and fatten it will unroll it into you

00:04:53.179 --> 00:04:53.189
and fatten it will unroll it into you
 

00:04:53.189 --> 00:04:56.719
and fatten it will unroll it into you
know just a hundred and tau into 1960

00:04:56.719 --> 00:04:56.729
know just a hundred and tau into 1960
 

00:04:56.729 --> 00:05:00.950
know just a hundred and tau into 1960
units right just as a fashion that out

00:05:00.950 --> 00:05:00.960
units right just as a fashion that out
 

00:05:00.960 --> 00:05:04.540
units right just as a fashion that out
into a vector and then feed this to a

00:05:04.540 --> 00:05:04.550
into a vector and then feed this to a
 

00:05:04.550 --> 00:05:06.950
into a vector and then feed this to a
logistic regression unit or a softmax

00:05:06.950 --> 00:05:06.960
logistic regression unit or a softmax
 

00:05:06.960 --> 00:05:11.600
logistic regression unit or a softmax
unit depend on whether you're trying to

00:05:11.600 --> 00:05:11.610
unit depend on whether you're trying to
 

00:05:11.610 --> 00:05:13.760
unit depend on whether you're trying to
recognize the cat no cat or trying to

00:05:13.760 --> 00:05:13.770
recognize the cat no cat or trying to
 

00:05:13.770 --> 00:05:16.790
recognize the cat no cat or trying to
recognize any one of K different objects

00:05:16.790 --> 00:05:16.800
recognize any one of K different objects
 

00:05:16.800 --> 00:05:19.790
recognize any one of K different objects
and then just have this give the final

00:05:19.790 --> 00:05:19.800
and then just have this give the final
 

00:05:19.800 --> 00:05:21.830
and then just have this give the final
output to find the predicted output for

00:05:21.830 --> 00:05:21.840
output to find the predicted output for
 

00:05:21.840 --> 00:05:25.369
output to find the predicted output for
the neural network and so just be clear

00:05:25.369 --> 00:05:25.379
the neural network and so just be clear
 

00:05:25.379 --> 00:05:27.649
the neural network and so just be clear
this last step is just taking all of

00:05:27.649 --> 00:05:27.659
this last step is just taking all of
 

00:05:27.659 --> 00:05:31.279
this last step is just taking all of
these numbers 100 or 1000 1960 numbers

00:05:31.279 --> 00:05:31.289
these numbers 100 or 1000 1960 numbers
 

00:05:31.289 --> 00:05:34.100
these numbers 100 or 1000 1960 numbers
and unrolling them into a very long

00:05:34.100 --> 00:05:34.110
and unrolling them into a very long
 

00:05:34.110 --> 00:05:36.350
and unrolling them into a very long
vector so then you just have one long

00:05:36.350 --> 00:05:36.360
vector so then you just have one long
 

00:05:36.360 --> 00:05:39.019
vector so then you just have one long
vector you can feed into softmax into

00:05:39.019 --> 00:05:39.029
vector you can feed into softmax into
 

00:05:39.029 --> 00:05:41.180
vector you can feed into softmax into
logistic regression in order to make a

00:05:41.180 --> 00:05:41.190
logistic regression in order to make a
 

00:05:41.190 --> 00:05:44.540
logistic regression in order to make a
prediction for the final output so this

00:05:44.540 --> 00:05:44.550
prediction for the final output so this
 

00:05:44.550 --> 00:05:46.399
prediction for the final output so this
would be a pretty you know typical

00:05:46.399 --> 00:05:46.409
would be a pretty you know typical
 

00:05:46.409 --> 00:05:50.600
would be a pretty you know typical
example of a confident but all of the

00:05:50.600 --> 00:05:50.610
example of a confident but all of the
 

00:05:50.610 --> 00:05:52.279
example of a confident but all of the
work in designing convolutional neural

00:05:52.279 --> 00:05:52.289
work in designing convolutional neural
 

00:05:52.289 --> 00:05:55.579
work in designing convolutional neural
net is selecting hyper parameters like

00:05:55.579 --> 00:05:55.589
net is selecting hyper parameters like
 

00:05:55.589 --> 00:05:57.680
net is selecting hyper parameters like
these society what's the filter size was

00:05:57.680 --> 00:05:57.690
these society what's the filter size was
 

00:05:57.690 --> 00:06:00.409
these society what's the filter size was
destroy what's the padding and how many

00:06:00.409 --> 00:06:00.419
destroy what's the padding and how many
 

00:06:00.419 --> 00:06:03.980
destroy what's the padding and how many
filters to use and both later this week

00:06:03.980 --> 00:06:03.990
filters to use and both later this week
 

00:06:03.990 --> 00:06:05.809
filters to use and both later this week
as well as next we will give some

00:06:05.809 --> 00:06:05.819
as well as next we will give some
 

00:06:05.819 --> 00:06:07.670
as well as next we will give some
suggestions and some guidelines for how

00:06:07.670 --> 00:06:07.680
suggestions and some guidelines for how
 

00:06:07.680 --> 00:06:11.990
suggestions and some guidelines for how
to make these choices but for now maybe

00:06:11.990 --> 00:06:12.000
to make these choices but for now maybe
 

00:06:12.000 --> 00:06:14.329
to make these choices but for now maybe
one thing to take away from this is that

00:06:14.329 --> 00:06:14.339
one thing to take away from this is that
 

00:06:14.339 --> 00:06:16.339
one thing to take away from this is that
as we go deeper in the neural network

00:06:16.339 --> 00:06:16.349
as we go deeper in the neural network
 

00:06:16.349 --> 00:06:18.559
as we go deeper in the neural network
typically you start off with larger

00:06:18.559 --> 00:06:18.569
typically you start off with larger
 

00:06:18.569 --> 00:06:21.950
typically you start off with larger
images 39 by 39 and then the height and

00:06:21.950 --> 00:06:21.960
images 39 by 39 and then the height and
 

00:06:21.960 --> 00:06:24.529
images 39 by 39 and then the height and
width will you know stay the same for a

00:06:24.529 --> 00:06:24.539
width will you know stay the same for a
 

00:06:24.539 --> 00:06:27.379
width will you know stay the same for a
while and gradually trend down as you go

00:06:27.379 --> 00:06:27.389
while and gradually trend down as you go
 

00:06:27.389 --> 00:06:28.820
while and gradually trend down as you go
deeper in the neural networks we've gone

00:06:28.820 --> 00:06:28.830
deeper in the neural networks we've gone
 

00:06:28.830 --> 00:06:32.839
deeper in the neural networks we've gone
from 39 to 37 to 17 to 40

00:06:32.839 --> 00:06:32.849
from 39 to 37 to 17 to 40
 

00:06:32.849 --> 00:06:35.919
from 39 to 37 to 17 to 40
since gone from 39 to 37 to 17 to 7

00:06:35.919 --> 00:06:35.929
since gone from 39 to 37 to 17 to 7
 

00:06:35.929 --> 00:06:38.209
since gone from 39 to 37 to 17 to 7
where as the number of channels which

00:06:38.209 --> 00:06:38.219
where as the number of channels which
 

00:06:38.219 --> 00:06:41.659
where as the number of channels which
generally increases come from 3 to 10 to

00:06:41.659 --> 00:06:41.669
generally increases come from 3 to 10 to
 

00:06:41.669 --> 00:06:45.949
generally increases come from 3 to 10 to
20 to 14 and you see this general trend

00:06:45.949 --> 00:06:45.959
20 to 14 and you see this general trend
 

00:06:45.959 --> 00:06:47.809
20 to 14 and you see this general trend
in a lot of other convolutional neural

00:06:47.809 --> 00:06:47.819
in a lot of other convolutional neural
 

00:06:47.819 --> 00:06:50.359
in a lot of other convolutional neural
networks as well but we'll give more

00:06:50.359 --> 00:06:50.369
networks as well but we'll give more
 

00:06:50.369 --> 00:06:52.100
networks as well but we'll give more
guidelines about how to design these

00:06:52.100 --> 00:06:52.110
guidelines about how to design these
 

00:06:52.110 --> 00:06:55.909
guidelines about how to design these
parameters in later videos but you've

00:06:55.909 --> 00:06:55.919
parameters in later videos but you've
 

00:06:55.919 --> 00:06:58.249
parameters in later videos but you've
now seen your first example of a

00:06:58.249 --> 00:06:58.259
now seen your first example of a
 

00:06:58.259 --> 00:06:59.839
now seen your first example of a
convolutional neural network more

00:06:59.839 --> 00:06:59.849
convolutional neural network more
 

00:06:59.849 --> 00:07:02.359
convolutional neural network more
confident for short so congratulations

00:07:02.359 --> 00:07:02.369
confident for short so congratulations
 

00:07:02.369 --> 00:07:07.070
confident for short so congratulations
from that and it turns out that in a

00:07:07.070 --> 00:07:07.080
from that and it turns out that in a
 

00:07:07.080 --> 00:07:08.809
from that and it turns out that in a
typical confident there are usually

00:07:08.809 --> 00:07:08.819
typical confident there are usually
 

00:07:08.819 --> 00:07:10.909
typical confident there are usually
three types of layers one is the

00:07:10.909 --> 00:07:10.919
three types of layers one is the
 

00:07:10.919 --> 00:07:13.669
three types of layers one is the
convolutional Meir and often we'll

00:07:13.669 --> 00:07:13.679
convolutional Meir and often we'll
 

00:07:13.679 --> 00:07:18.079
convolutional Meir and often we'll
denote that as a conflation in the

00:07:18.079 --> 00:07:18.089
denote that as a conflation in the
 

00:07:18.089 --> 00:07:20.509
denote that as a conflation in the
previous network it turns out that there

00:07:20.509 --> 00:07:20.519
previous network it turns out that there
 

00:07:20.519 --> 00:07:22.279
previous network it turns out that there
are two other common types of layers

00:07:22.279 --> 00:07:22.289
are two other common types of layers
 

00:07:22.289 --> 00:07:24.409
are two other common types of layers
that you haven't seen yet but we talked

00:07:24.409 --> 00:07:24.419
that you haven't seen yet but we talked
 

00:07:24.419 --> 00:07:26.839
that you haven't seen yet but we talked
about in the next cover video one is

00:07:26.839 --> 00:07:26.849
about in the next cover video one is
 

00:07:26.849 --> 00:07:29.899
about in the next cover video one is
called a pooling layer off now call this

00:07:29.899 --> 00:07:29.909
called a pooling layer off now call this
 

00:07:29.909 --> 00:07:32.329
called a pooling layer off now call this
pool and then the last is a fully

00:07:32.329 --> 00:07:32.339
pool and then the last is a fully
 

00:07:32.339 --> 00:07:35.719
pool and then the last is a fully
connected layer call FC and although

00:07:35.719 --> 00:07:35.729
connected layer call FC and although
 

00:07:35.729 --> 00:07:37.609
connected layer call FC and although
it's possible to design a pretty good

00:07:37.609 --> 00:07:37.619
it's possible to design a pretty good
 

00:07:37.619 --> 00:07:39.889
it's possible to design a pretty good
neural network using just convolutional

00:07:39.889 --> 00:07:39.899
neural network using just convolutional
 

00:07:39.899 --> 00:07:42.439
neural network using just convolutional
layers most neural network architectures

00:07:42.439 --> 00:07:42.449
layers most neural network architectures
 

00:07:42.449 --> 00:07:44.389
layers most neural network architectures
will also have a few pooling layers and

00:07:44.389 --> 00:07:44.399
will also have a few pooling layers and
 

00:07:44.399 --> 00:07:49.759
will also have a few pooling layers and
a few fully connected layers fortunately

00:07:49.759 --> 00:07:49.769
a few fully connected layers fortunately
 

00:07:49.769 --> 00:07:51.649
a few fully connected layers fortunately
pulling layers at Flickr mental layers

00:07:51.649 --> 00:07:51.659
pulling layers at Flickr mental layers
 

00:07:51.659 --> 00:07:53.779
pulling layers at Flickr mental layers
are a bit simpler than convolutional

00:07:53.779 --> 00:07:53.789
are a bit simpler than convolutional
 

00:07:53.789 --> 00:07:57.290
are a bit simpler than convolutional
layers to define so we'll do that

00:07:57.290 --> 00:07:57.300
layers to define so we'll do that
 

00:07:57.300 --> 00:07:59.749
layers to define so we'll do that
quickly in the next two videos and then

00:07:59.749 --> 00:07:59.759
quickly in the next two videos and then
 

00:07:59.759 --> 00:08:02.629
quickly in the next two videos and then
you have a sense of all of the most

00:08:02.629 --> 00:08:02.639
you have a sense of all of the most
 

00:08:02.639 --> 00:08:04.279
you have a sense of all of the most
common types of layers in a

00:08:04.279 --> 00:08:04.289
common types of layers in a
 

00:08:04.289 --> 00:08:06.199
common types of layers in a
convolutional neural network and you

00:08:06.199 --> 00:08:06.209
convolutional neural network and you
 

00:08:06.209 --> 00:08:08.239
convolutional neural network and you
really put together even more powerful

00:08:08.239 --> 00:08:08.249
really put together even more powerful
 

00:08:08.249 --> 00:08:11.719
really put together even more powerful
networks than the one we just saw so

00:08:11.719 --> 00:08:11.729
networks than the one we just saw so
 

00:08:11.729 --> 00:08:14.480
networks than the one we just saw so
congrats again on seeing your first full

00:08:14.480 --> 00:08:14.490
congrats again on seeing your first full
 

00:08:14.490 --> 00:08:16.219
congrats again on seeing your first full
convolutional neural network

00:08:16.219 --> 00:08:16.229
convolutional neural network
 

00:08:16.229 --> 00:08:19.309
convolutional neural network
we're also talk later in this week about

00:08:19.309 --> 00:08:19.319
we're also talk later in this week about
 

00:08:19.319 --> 00:08:21.290
we're also talk later in this week about
how to train these networks but first

00:08:21.290 --> 00:08:21.300
how to train these networks but first
 

00:08:21.300 --> 00:08:23.119
how to train these networks but first
let's talk briefly about pooling and

00:08:23.119 --> 00:08:23.129
let's talk briefly about pooling and
 

00:08:23.129 --> 00:08:25.489
let's talk briefly about pooling and
fully connected layers and then training

00:08:25.489 --> 00:08:25.499
fully connected layers and then training
 

00:08:25.499 --> 00:08:26.719
fully connected layers and then training
these will be using back propagation

00:08:26.719 --> 00:08:26.729
these will be using back propagation
 

00:08:26.729 --> 00:08:29.299
these will be using back propagation
which are already familiar with but in

00:08:29.299 --> 00:08:29.309
which are already familiar with but in
 

00:08:29.309 --> 00:08:31.549
which are already familiar with but in
the next video let's quickly go over how

00:08:31.549 --> 00:08:31.559
the next video let's quickly go over how
 

00:08:31.559 --> 00:08:33.499
the next video let's quickly go over how
to implement a pooling layer for your

00:08:33.499 --> 00:08:33.509
to implement a pooling layer for your
 

00:08:33.509 --> 00:08:36.110
to implement a pooling layer for your
confident

