WEBVTT
Kind: captions
Language: en-GB

00:00:00.280 --> 00:00:02.040
I'm going to talk about why

00:00:02.520 --> 00:00:03.560
web links break

00:00:03.600 --> 00:00:06.000
Now, I'm sure this is something that

00:00:06.000 --> 00:00:08.980
everybody is familiar with and has annoyed everybody

00:00:09.060 --> 00:00:13.140
If you're browsing the web and you're doing your clicky stuff

00:00:13.140 --> 00:00:16.540
You follow a link, follow another link, follow another link

00:00:16.540 --> 00:00:17.680
and then all of a sudden

00:00:18.320 --> 00:00:20.080
it doesnt work, it breaks.

00:00:20.420 --> 00:00:25.680
You get the dreaded 404 error message

00:00:28.160 --> 00:00:29.840
It's at best an annoyance

00:00:30.140 --> 00:00:32.060
but it can be a major problem

00:00:33.000 --> 00:00:35.720
because in the case of old websites

00:00:35.720 --> 00:00:38.280
that aren't continually being maintained and updated

00:00:38.280 --> 00:00:40.300
it could make them completely unusable.

00:00:40.740 --> 00:00:44.180
I've certainly, quite often, seen websites

00:00:44.180 --> 00:00:45.600
that might have useful information on them

00:00:45.600 --> 00:00:47.040
but none of the links work

00:00:47.040 --> 00:00:49.720
everything gives you a 404 error

00:00:50.320 --> 00:00:52.800
The reason it's 404 is that comes from

00:00:52.800 --> 00:00:55.840
the protocol underpinning the World Wide Web

00:00:55.840 --> 00:00:57.760
It's one of the error messages

00:00:57.760 --> 00:01:00.560
and it just means that there's a missing file

00:01:00.820 --> 00:01:03.040
At one level that might seem quite trivial

00:01:03.040 --> 00:01:05.500
somebody has deleted the page you're pointed at

00:01:06.200 --> 00:01:09.240
But information systems don't necessarily have to behave like that

00:01:10.260 --> 00:01:14.960
If you are browsing through the files on your PC

00:01:15.220 --> 00:01:18.960
using Windows Explorer or Mac Finder or whatever,

00:01:19.320 --> 00:01:21.800
and you move a file

00:01:22.540 --> 00:01:24.160
you don't suddenly start getting error messages

00:01:24.160 --> 00:01:25.820
because you've moved a file

00:01:27.000 --> 00:01:29.720
Where as you do on the Web

00:01:30.700 --> 00:01:33.500
and this comes down to quite a fundamental

00:01:33.500 --> 00:01:35.200
way in which the Web is designed

00:01:37.640 --> 00:01:39.300
Really, the problem is

00:01:39.560 --> 00:01:41.400
that links on the web

00:01:42.000 --> 00:01:43.240
aren't actually links

00:01:43.660 --> 00:01:45.020
at all, they're misnamed.

00:01:45.440 --> 00:01:46.720
Because if we think about it for a moment

00:01:46.960 --> 00:01:49.500
a link, the word link,

00:01:49.800 --> 00:01:54.180
is a metaphor in design and it's taken from the links of a chain

00:01:54.380 --> 00:01:55.420
and a link

00:01:55.720 --> 00:02:01.540
implies that two things are actually attached, if you move one

00:02:01.940 --> 00:02:03.540
you can't separate them

00:02:03.960 --> 00:02:06.020
That's not the way the Web behaves

00:02:06.980 --> 00:02:10.220
What you've actually got on the Web is not links at all

00:02:10.220 --> 00:02:11.180
but pointers

00:02:11.280 --> 00:02:14.220
You've got a pointer from one document to another

00:02:14.680 --> 00:02:16.220
Or in fact you don't even have that

00:02:16.280 --> 00:02:19.680
you have a pointer from one document to where you hope another is going to be

00:02:20.480 --> 00:02:22.360
and that's why things break

00:02:22.440 --> 00:02:28.080
Let's take a webpage. I'm going to just take my personal webpage

00:02:29.860 --> 00:02:31.660
Webpages are identified by URLs

00:02:31.780 --> 00:02:33.220
the URL is this

00:02:33.440 --> 00:02:38.480
Now, if I want to put in a link into that page

00:02:38.740 --> 00:02:40.420
I would just put in

00:02:40.780 --> 00:02:44.080
'&lt;a' which stands for anchor

00:02:44.080 --> 00:02:46.580
because this is the anchoring end of the link

00:02:46.820 --> 00:02:49.360
'href='

00:02:50.020 --> 00:02:50.780
like that

00:02:51.020 --> 00:02:53.980
and href just stands for hypertext reference

00:02:54.280 --> 00:02:58.420
it's referencing this webpage

00:02:58.860 --> 00:03:02.360
then I can just put in the text from the links so

00:03:02.480 --> 00:03:03.680
'click here'

00:03:04.360 --> 00:03:06.280
and just finish that

00:03:06.560 --> 00:03:11.060
So that now is the HTML [code] to create a link

00:03:11.460 --> 00:03:13.500
but, you can see what it is

00:03:13.880 --> 00:03:16.480
it's a hypertext reference

00:03:16.740 --> 00:03:17.780
to this webpage

00:03:18.220 --> 00:03:20.780
There is no way that this webpage

00:03:20.940 --> 00:03:25.260
has any knowledge of the fact that it's being referenced

00:03:26.120 --> 00:03:29.060
If I put a link in to your webpage

00:03:29.420 --> 00:03:31.880
Your webpage doesn't know about it

00:03:32.220 --> 00:03:34.220
and neither do you unless I tell you

00:03:34.480 --> 00:03:37.600
as far as the mechanics of the Web are concerned

00:03:37.860 --> 00:03:39.020
it's purely

00:03:39.980 --> 00:03:40.860
the href

00:03:41.220 --> 00:03:43.580
it's a pointer

00:03:44.200 --> 00:03:46.080
to where something

00:03:46.380 --> 00:03:47.620
possibly is

00:03:47.620 --> 00:03:50.580
because it's up to me when I put it in to actually get that right

00:03:51.060 --> 00:03:52.560
and if it was right at the time

00:03:52.560 --> 00:03:55.500
but then you changed the name of your document

00:03:55.500 --> 00:03:57.500
then all of a sudden its wrong

00:03:59.640 --> 00:04:02.360
This is why the Web is very brittle

00:04:02.600 --> 00:04:04.080
it's why it can break

00:04:04.220 --> 00:04:06.420
Now, I mean there are ways around that

00:04:07.220 --> 00:04:08.420
but they're not particularly easy

00:04:08.460 --> 00:04:12.100
a lot of the web these days isn't just HTML documents

00:04:12.160 --> 00:04:15.820
a lot of the web is data driven and there's databases underpinning it

00:04:16.020 --> 00:04:19.080
and if you're careful enough with the design of your system

00:04:19.260 --> 00:04:22.280
you can have a system that manages its own links internally

00:04:22.280 --> 00:04:24.780
that will be fairly careful not to break

00:04:26.380 --> 00:04:28.740
but one thing that is quite hard to do

00:04:29.820 --> 00:04:32.520
another thing is that

00:04:33.180 --> 00:04:34.760
even if you do that

00:04:35.000 --> 00:04:39.340
the moment you have a link that goes out to somebody elses' webpage

00:04:39.340 --> 00:04:44.580
you want to link one of my pages or you want to link something on the BBC News site or what-have-you

00:04:45.200 --> 00:04:48.640
then the moment that somebody else

00:04:48.880 --> 00:04:51.240
outside of your control

00:04:51.240 --> 00:04:52.960
changes things

00:04:53.400 --> 00:04:54.780
it's gonna break

00:04:56.020 --> 00:04:57.380
that is

00:04:57.400 --> 00:04:58.920
a fundamental problem

00:04:59.280 --> 00:05:00.420
to the way that the Web works

00:05:00.420 --> 00:05:01.860
because any solution

00:05:02.060 --> 00:05:03.600
is retro-fitted

00:05:03.840 --> 00:05:05.120
to the way that the web works

00:05:05.760 --> 00:05:07.860
and so I'm afraid although there are

00:05:08.140 --> 00:05:09.860
very very annoying

00:05:10.800 --> 00:05:12.740
404's are going to be with us for the foreseeable future

00:05:12.740 --> 00:05:15.400
and they're an annoyance you have to live with

00:05:15.620 --> 00:05:17.200
if you use the Web

00:05:20.800 --> 00:05:26.600
people could create new material and new content by quoting original sources

00:05:26.600 --> 00:05:30.100
and taking the original material and putting it into a new context

00:05:30.220 --> 00:05:35.960
but an interesting part of this is Ted also envisioned a micro charging

