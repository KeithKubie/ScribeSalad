WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
Okay, we also had questions about various web frameworks.

00:00:03.000 --> 00:00:06.000
What exactly is a web framework, what makes something a web framework,

00:00:06.000 --> 00:00:10.000
and what are some of the other popular web frameworks for Python

00:00:10.000 --> 00:00:12.000
and popular web frameworks in general?

00:00:12.000 --> 00:00:18.000
Sure. A web framework is basically the piece of your program that is speaking HTTP,

00:00:18.000 --> 00:00:22.000
parsing URLs into a path, into a query,

00:00:22.000 --> 00:00:25.000
and passing that into some handier functions that you define.

00:00:25.000 --> 00:00:30.000
A web framework can do more or less things.

00:00:30.000 --> 00:00:33.000
The type of web framework we're using in Google App Engine

00:00:33.000 --> 00:00:37.000
actually, its lineage kind of dates back to a web framework we built at Reddit.

00:00:37.000 --> 00:00:41.000
It's about the level of detail that I like to work at,

00:00:41.000 --> 00:00:45.000
which is I don't think we should be implementing HTTP, but it's nice to be aware

00:00:45.000 --> 00:00:47.000
what the headers are, of what the query parameters are,

00:00:47.000 --> 00:00:49.000
and having direct control over the URLs.

00:00:49.000 --> 00:00:54.000
Some frameworks--a very popular one on Python is called Django. It does a little bit more.

00:00:54.000 --> 00:00:59.000
It'll add on sessions and user handling and form control and all sorts of stuff like that.

00:00:59.000 --> 00:01:02.000
It's not very good for this class because I'm trying to teach you how that stuff works.

00:01:02.000 --> 00:01:07.000
Now, with an understanding of how those things work that I think you can get out of this class,

00:01:07.000 --> 00:01:11.000
knowing you'll have better understanding of the tradeoffs those frameworks make,

00:01:11.000 --> 00:01:13.000
and what they're hiding from you and what they're exposing to you,

00:01:13.000 --> 00:01:15.000
Some of which is convenient,

00:01:15.000 --> 00:01:17.000
some of which can be tedious when you're trying to do something custom.

00:01:17.000 --> 00:01:20.000
Outside of Python, really popular frameworks--

00:01:20.000 --> 00:01:23.000
Ruby on Rails is probably one of the most popular ones.

00:01:23.000 --> 00:01:27.000
Ruby on Rails and Django are actually fairly similar

00:01:27.000 --> 00:01:30.000
in that they do a lot of stuff for you.

00:01:30.000 --> 00:01:37.000
They hide a lot of the HTTP and a lot of the URL handling and parsing and all that stuff.

00:01:37.000 --> 00:01:40.000
I don't like to work at quite that high a level, because I feel like

00:01:40.000 --> 00:01:43.000
when you writing web applications it should to be so simple.

00:01:43.000 --> 00:01:45.000
Tou should be close to it, because then you can do some neat stuff

00:01:45.000 --> 00:01:47.000
when you're setting your own headers

00:01:47.000 --> 00:01:49.000
and fiddling with your own cookies and hashing your own things.

00:01:49.000 --> 00:01:51.000
There are lots of frameworks out there.

00:01:51.000 --> 00:01:54.000
I think the Google App Engine is really kind of a nice layer for teaching.

00:01:54.000 --> 00:01:58.000
It's actually the layer that I work in or that we used at Reddit

00:01:58.000 --> 00:02:01.000
and Hipmunk in terms of the design of that framework.

