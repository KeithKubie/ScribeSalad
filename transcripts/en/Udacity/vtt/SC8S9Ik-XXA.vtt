WEBVTT
Kind: captions
Language: en

00:00:00.410 --> 00:00:05.310
So here is a private key crypto system in action. Two entities, A

00:00:05.310 --> 00:00:10.700
and B, have exchanged keys. A will use the key KA to

00:00:10.700 --> 00:00:16.140
send a message to B, and B can decrypt the message

00:00:16.140 --> 00:00:20.990
using the same key KA. And similarly, when

00:00:20.990 --> 00:00:25.940
B wants to send a message to A it encrypts it let's say using

00:00:25.940 --> 00:00:31.700
another private key key B and when the message comes over here A will decrypt

00:00:31.700 --> 00:00:37.960
the message using the same key that was used for encryption namely key B. So one

00:00:37.960 --> 00:00:40.020
of the things that should be obvious is

00:00:40.020 --> 00:00:44.120
that, in order for this private key encryption

00:00:44.120 --> 00:00:47.620
system to work, both the entities need to

00:00:47.620 --> 00:00:51.160
know when they get an encrypted message who

00:00:51.160 --> 00:00:56.590
is the author of the message, because that is the only way they know what key to

00:00:56.590 --> 00:00:59.550
use in order to decrypt this message. So

00:00:59.550 --> 00:01:02.950
if a sends a message to b,it's sending this

00:01:02.950 --> 00:01:07.550
encrypted message. When this cyphertext arrives here, for

00:01:07.550 --> 00:01:09.300
B to know that it has to use this

00:01:09.300 --> 00:01:13.410
key KA, it needs to know the identity of

00:01:13.410 --> 00:01:16.480
the sender. So the identity of the sender has

00:01:16.480 --> 00:01:21.250
to be sent in cleartext. So this is the format of a message that is going from A

00:01:21.250 --> 00:01:26.240
to B. The identity of the sender in cleartext Meaning that, looking at

00:01:26.240 --> 00:01:31.390
this, we will immediately know, this message is from sender A, and

00:01:31.390 --> 00:01:36.520
therefore, I should use key k A to decrypt the cyphertext, and

00:01:36.520 --> 00:01:41.610
vice versa when A gets a message from B. Of course, k A and

00:01:41.610 --> 00:01:46.160
k B can be the same, or in other words, it is the same key that is used

00:01:46.160 --> 00:01:50.810
for, A to send a message to B as well as for B to send a message to

00:01:50.810 --> 00:01:53.770
A. But the important thing to take away is

00:01:53.770 --> 00:01:56.620
that the key that is used for encryption and

00:01:56.620 --> 00:01:59.300
decryption of a given message is exactly the same,

00:01:59.300 --> 00:02:02.560
that's the idea behind the private key encryption system.

