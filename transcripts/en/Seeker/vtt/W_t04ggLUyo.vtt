WEBVTT
Kind: captions
Language: en

00:00:00.130 --> 00:00:04.770
The US government is unable to hack iPhones
that use an encryption standard they helped

00:00:04.770 --> 00:00:05.770
create.

00:00:05.770 --> 00:00:11.540
Oh the irony.

00:00:11.540 --> 00:00:13.990
Hi haxors, Julian here for DNews.

00:00:13.990 --> 00:00:18.349
Way way back in 2001, the National Institute
of Standards and Technology announced their

00:00:18.349 --> 00:00:21.570
new standard for....encryption technology.

00:00:21.570 --> 00:00:25.720
The Advanced Encryption Standard, or AES,
was the product of years of testing competing

00:00:25.720 --> 00:00:28.359
designs with open public scrutiny and feedback.

00:00:28.359 --> 00:00:32.390
The winner was made by belgian cryptographers
Vincent Rijmen and Joan Daemen, who called

00:00:32.390 --> 00:00:34.490
it the Rijndael (rain-dahl) Cipher.

00:00:34.490 --> 00:00:35.490
And it is a doozy.

00:00:35.490 --> 00:00:39.280
The goal of cryptography is to make a message
so scrambled the original message can’t

00:00:39.280 --> 00:00:40.280
be divined.

00:00:40.280 --> 00:00:44.610
Rijndael does this by taking the data and
breaking it into 128 bit chunks, a bit being

00:00:44.610 --> 00:00:47.940
the smallest unit of data in a computer, either
a 1 or a 0.

00:00:47.940 --> 00:00:49.940
It then substitutes these bits with other
bits.

00:00:49.940 --> 00:00:53.940
It’s not as simple as a zero goes in and
a 1 comes out: changing any one of the input

00:00:53.940 --> 00:00:58.400
bits should cause an avalanche effect, changing
about half the output bits.

00:00:58.400 --> 00:01:01.980
Once the bits are swapped, they’re moved
around in a process called permutation.

00:01:01.980 --> 00:01:06.880
The substitutions and permutations are repeated,
up to fourteen times at the highest AES level,

00:01:06.880 --> 00:01:11.299
which makes analyzing the jumbled data for
statistical fingerprints almost impossible.

00:01:11.299 --> 00:01:15.439
But you may be seeing a problem here: the
AES was developed in plain view of everyone,

00:01:15.439 --> 00:01:19.100
so if you know the math behind the steps,
you could just reverse any jumbling, right?

00:01:19.100 --> 00:01:21.219
Well that’s where the key comes in.

00:01:21.219 --> 00:01:25.289
In between each round of swapping and swirling,
a key is added to the data to confound the

00:01:25.289 --> 00:01:26.729
information further.

00:01:26.729 --> 00:01:30.999
If you have that key and run the steps in
reverse, you can decrypt the data almost instantly.

00:01:30.999 --> 00:01:35.219
The key itself is a set of bits - and they
can up to 256 bits long!

00:01:35.219 --> 00:01:39.630
If you don’t have the key, that’s 256
ones and zeros that you’d have to guess

00:01:39.630 --> 00:01:44.460
correctly to brute force your way in....and
that would take over 1077 tries (2256 = 1.157

00:01:44.460 --> 00:01:45.460
x 1077).

00:01:45.460 --> 00:01:47.859
That’s 1 with 77 zeroes after it.

00:01:47.859 --> 00:01:54.119
Security architect Mohit Arora estimates that
would take 3 x 1056 years with a supercomputer.

00:01:54.119 --> 00:01:56.630
For our purposes, let’s call that “forever.”

00:01:56.630 --> 00:02:00.710
The AES is so successful, the government has
been using it to encrypt top secret documents

00:02:00.710 --> 00:02:02.109
since 2003.

00:02:02.109 --> 00:02:06.590
The knowledge that JFK was actually assassinated
by the roswell alien is probably guarded by

00:02:06.590 --> 00:02:07.590
this cipher.

00:02:07.590 --> 00:02:12.030
So it’s not a big surprise that some companies,
like Apple, use the AES too.

00:02:12.030 --> 00:02:16.860
Apple has implemented it on iphones to encrypt
your photos, texts, emails, and health info.

00:02:16.860 --> 00:02:21.710
But obviously you can’t remember a 256 bit
password, so that is actually burned into

00:02:21.710 --> 00:02:22.710
the hardware.

00:02:22.710 --> 00:02:26.330
It’s a Unique ID for each phone, and Apple
claims they don’t keep a record of the keys

00:02:26.330 --> 00:02:28.100
and no software can read it.

00:02:28.100 --> 00:02:31.830
When you set a passcode on your phone, it
combines that with the key and your data is

00:02:31.830 --> 00:02:32.830
protected.

00:02:32.830 --> 00:02:37.031
So obviously guessing the 4 digit PIN is much
easier than the whole key because there are

00:02:37.031 --> 00:02:39.120
only 10,000 (104) possibilities.

00:02:39.120 --> 00:02:43.560
Apple counters that with a 80 millisecond
hardware delay, and, crucially, a software

00:02:43.560 --> 00:02:44.560
delay too.

00:02:44.560 --> 00:02:48.220
If you put in the wrong PIN too many times,
your phone will make you wait longer and longer

00:02:48.220 --> 00:02:49.251
before you can try again.

00:02:49.251 --> 00:02:53.080
Get it wrong ten times, and the phone will
wipe its knowledge of the key and the data

00:02:53.080 --> 00:02:55.870
is lost forever, if that setting is turned
on.

00:02:55.870 --> 00:03:00.090
But here’s the catch: if Apple were to create
and sign an “update” that disabled those

00:03:00.090 --> 00:03:05.110
delays and automatic wipe, AND let you enter
PIN attempts quickly through a computer, breaking

00:03:05.110 --> 00:03:07.070
into a device a doddle.

00:03:07.070 --> 00:03:10.090
And that’s exactly what the FBI is asking
Apple to do.

00:03:10.090 --> 00:03:14.230
Right now the FBI is attempting to unlock
an iPhone 5C that belonged to a suspect in

00:03:14.230 --> 00:03:16.070
the San Bernardino terrorist attack.

00:03:16.070 --> 00:03:20.560
The FBI asked Apple to write an update that
could only be applied to this particular device,

00:03:20.560 --> 00:03:23.570
but Apple CEO Tim Cook is worried that won’t
be the case.

00:03:23.570 --> 00:03:25.180
What if the firmware update leaks?

00:03:25.180 --> 00:03:29.760
It’s digital, so even though the FBI wants
it to only be usable for this particular phone,

00:03:29.760 --> 00:03:32.860
it’s possible it could be changed and used
for more.

00:03:32.860 --> 00:03:36.700
Newer iPhones have a piece of hardware called
the Secure Enclave that would need a separate

00:03:36.700 --> 00:03:41.790
firmware update, but anything older than a
5s would be vulnerable to this skeleton key.

00:03:41.790 --> 00:03:45.290
If the FBI does end up getting their way,
you can still protect yourself.

00:03:45.290 --> 00:03:49.790
Longer alphanumeric passcodes will take exponentially
longer to crack because of the hardware delay.

00:03:49.790 --> 00:03:54.250
A 6 character passcode of letters and numbers
could take over 5 and a half years!

00:03:54.250 --> 00:03:57.110
Apple lets you use those instead of a 4 digit
PINs… for now.

00:03:57.110 --> 00:03:58.110
Sponsorship?

00:03:58.110 --> 00:03:59.610
CTA video
So just how powerful does producing a leading

00:03:59.610 --> 00:04:02.070
smartphone with tough security make Apple?

00:04:02.070 --> 00:04:16.690
Check out our sister show Test Tube here for
the answer.

00:04:16.690 --> 00:04:19.299
Tim Cook’s open letter talked about a need
for discussion.

00:04:19.299 --> 00:04:22.320
Well, you know how the encryption works, you
know what’s at stake.

00:04:22.320 --> 00:04:23.400
Go on, discuss!

00:04:23.400 --> 00:04:27.560
There’s the comments section down there
or our facebook or twitter @DNews.

00:04:27.560 --> 00:04:32.090
Subscribe for more and I’ll see you next
time, on DNews.

