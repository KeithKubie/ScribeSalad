WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.259
 in this capsule we will see how to comment 

00:00:02.040 --> 00:00:08.490
 what can be formulated a problem of 

00:00:04.259 --> 00:00:10.590
 search in a grace so we 

00:00:08.490 --> 00:00:14.040
 would like to do is solve a 

00:00:10.590 --> 00:00:16.379
 problem by avoiding enumerating all 

00:00:14.040 --> 00:00:19.529
 possible solutions one after the other 

00:00:16.379 --> 00:00:22.020
 others have actually preferred to go through 

00:00:19.529 --> 00:00:24.480
 this list implicitly but so 

00:00:22.020 --> 00:00:26.420
 more effective by actually browsing 

00:00:24.480 --> 00:00:28.740
 while exploring a number of solutions 

00:00:26.420 --> 00:00:30.500
 reduced rather than looking at the number 

00:00:28.740 --> 00:00:33.059
 possible solutions 

00:00:30.500 --> 00:00:34.200
 exponentially high and so the 

00:00:33.059 --> 00:00:36.270
 we are going to take is that we are going 

00:00:34.200 --> 00:00:38.820
 formulate our problem as a premium 

00:00:36.270 --> 00:00:41.879
 search in a serious or check 

00:00:38.820 --> 00:00:46.410
 is going to be a state of my environment 

00:00:41.879 --> 00:00:47.700
 in which my agent can move 

00:00:46.410 --> 00:00:49.860
 each of the links between dummies in 

00:00:47.700 --> 00:00:51.809
 correspond to actions that my 

00:00:49.860 --> 00:00:54.300
 agent can take and in the end 

00:00:51.809 --> 00:00:56.969
 finally a path between two levels 

00:00:54.300 --> 00:00:59.250
 corresponding series of actions for that 

00:00:56.969 --> 00:01:06.060
 the beach you can follow to pass a 

00:00:59.250 --> 00:01:08.070
 initial state to an end state so for 

00:01:06.060 --> 00:01:10.530
 solve that kind of problem there we go 

00:01:08.070 --> 00:01:11.360
 invoke research agriates in 

00:01:10.530 --> 00:01:14.520
 a graph 

00:01:11.360 --> 00:01:16.770
 it was water take in input 

00:01:14.520 --> 00:01:19.710
 firstly an initial null 

00:01:16.770 --> 00:01:23.340
 so the initial state of our age at a 

00:01:19.710 --> 00:01:26.610
 purpose but our goal hate that goes 

00:01:23.340 --> 00:01:30.570
 return true if the goal is reached at 

00:01:26.610 --> 00:01:33.720
 the state or not n would also have a 

00:01:30.570 --> 00:01:35.970
 transition function transition n which 

00:01:33.720 --> 00:01:39.950
 will turn the list where all of our 

00:01:35.970 --> 00:01:42.990
 successors to a null data input n 

00:01:39.950 --> 00:01:44.369
 would also have a function that's who 

00:01:42.990 --> 00:01:46.890
 takes two arguments n 

00:01:44.369 --> 00:01:48.630
 and as a bonus it's a function that goes 

00:01:46.890 --> 00:01:50.790
 to be strictly positive so what 

00:01:48.630 --> 00:01:53.640
 is returned it's a real strictly 

00:01:50.790 --> 00:01:57.590
 positive and who will we return the shot 

00:01:53.640 --> 00:02:00.990
 to move from one channel to honor between 

00:01:57.590 --> 00:02:03.899
 so that will allow us to consider 

00:02:00.990 --> 00:02:06.390
 variable costs in our actions 

00:02:03.899 --> 00:02:08.759
 between our different states so of 

00:02:06.390 --> 00:02:11.459
 move from different menus to others 

00:02:08.759 --> 00:02:13.319
 we are what our algorithm is going 

00:02:11.459 --> 00:02:16.709
 give out is a field 

00:02:13.319 --> 00:02:20.579
 but in a graffiti is so a sequence 

00:02:16.709 --> 00:02:24.389
 of art and craft is an initiative r 

00:02:20.579 --> 00:02:28.200
 a place that satisfies purpose so they 

00:02:24.389 --> 00:02:31.799
 return true when applying the 

00:02:28.200 --> 00:02:34.049
 gaulle function to this final draw 2 and 

00:02:31.799 --> 00:02:38.879
 finally the cost of a path is going 

00:02:34.049 --> 00:02:40.739
 to be the sum of the edges and we wait 

00:02:38.879 --> 00:02:43.439
 too much that can have multiple stages 

00:02:40.739 --> 00:02:45.329
 end who can the bus function or 

00:02:43.439 --> 00:02:48.900
 gaulle can return true for 

00:02:45.329 --> 00:02:52.049
 several of us different an algorithm 

00:02:48.900 --> 00:02:53.579
 search in a graph actually one 

00:02:52.049 --> 00:02:55.230
 can use it for different things 

00:02:53.579 --> 00:02:56.699
 we can first be interested 

00:02:55.230 --> 00:02:59.599
 only to what we need to turn 

00:02:56.699 --> 00:03:03.180
 a path to a solution 

00:02:59.599 --> 00:03:04.680
 what we will, however, often want 

00:03:03.180 --> 00:03:06.090
 it's that not only is it the way 

00:03:04.680 --> 00:03:08.310
 to the solution but in addition the way 

00:03:06.090 --> 00:03:12.930
 getting his revenge - which minimize the 

00:03:08.310 --> 00:03:15.180
 sum of the costs associated with the edges or 

00:03:12.930 --> 00:03:16.680
 in fact sometimes we will be interested in 

00:03:15.180 --> 00:03:18.329
 see a solution but have a 

00:03:16.680 --> 00:03:20.370
 solution as quickly as possible 

00:03:18.329 --> 00:03:24.139
 so we're ready maybe will be ready to 

00:03:20.370 --> 00:03:26.759
 sacrifice the optimality of the found path 

00:03:24.139 --> 00:03:28.439
 to get a solution so that our 

00:03:26.759 --> 00:03:31.970
 talent grid runs faster he 

00:03:28.439 --> 00:03:31.970
 return a solution faster 

00:03:32.810 --> 00:03:36.989
 so here's an example of problems 

00:03:35.099 --> 00:03:38.849
 that could be formulated as a 

00:03:36.989 --> 00:03:41.639
 search problem in a graph 

00:03:38.849 --> 00:03:43.500
 so let's imagine we have several cities 

00:03:41.639 --> 00:03:45.419
 in a road network that we want 

00:03:43.500 --> 00:03:47.879
 determine which path is the most 

00:03:45.419 --> 00:03:49.919
 short between two cities well in this case 

00:03:47.879 --> 00:03:51.239
 also to formulate this problem as a 

00:03:49.919 --> 00:03:53.310
 search problem in a graph 

00:03:51.239 --> 00:03:56.129
 would start with a city hall cities 

00:03:53.310 --> 00:03:57.900
 of our network and to each city we 

00:03:56.129 --> 00:04:01.889
 would associate topless in our case 

00:03:57.900 --> 00:04:05.849
 so n 0 it would be a node associated with 

00:04:01.889 --> 00:04:07.040
 a first city another city and in 

00:04:05.849 --> 00:04:10.319
 2008 

00:04:07.040 --> 00:04:12.539
 then it stops them in our graph 

00:04:10.319 --> 00:04:14.250
 who will connect the two together that's going 

00:04:12.539 --> 00:04:16.259
 match to make paths of 

00:04:14.250 --> 00:04:18.780
 roads between each of these cities 

00:04:16.259 --> 00:04:20.070
 so we ask ourselves here that there is a way 

00:04:18.780 --> 00:04:21.400
 we can take for 

00:04:20.070 --> 00:04:26.979
 to pass from the city 

00:04:21.400 --> 00:04:29.169
 zero to the city 

00:04:26.979 --> 00:04:31.270
 also determine what is our 

00:04:29.169 --> 00:04:34.710
 initial city of our departure city 

00:04:31.270 --> 00:04:37.900
 from which one wishes to make 

00:04:34.710 --> 00:04:39.900
 our our trajectory for 

00:04:37.900 --> 00:04:42.310
 return to our destination city 

00:04:39.900 --> 00:04:42.880
 destination city in this case 

00:04:42.310 --> 00:04:49.210
 will be 

00:04:42.880 --> 00:04:51.669
 m6 the cost associated with transitions between 

00:04:49.210 --> 00:04:55.539
 the vines which is illustrated here that's it 

00:04:51.669 --> 00:04:56.949
 will then match the function c is 

00:04:55.539 --> 00:04:59.740
 what correspond to them 

00:04:56.949 --> 00:05:03.039
 let's say the distance makes it all the time 

00:04:59.740 --> 00:05:05.350
 that it takes two past of 1,013 if in 

00:05:03.039 --> 00:05:07.150
 makes the least long way if we 

00:05:05.350 --> 00:05:08.550
 wants to measure it in terms of time 

00:05:07.150 --> 00:05:11.440
 course 

00:05:08.550 --> 00:05:12.520
 it could also be desired 

00:05:11.440 --> 00:05:14.050
 take the shortest way in term 

00:05:12.520 --> 00:05:16.120
 from distance that to be rather a shot 

00:05:14.050 --> 00:05:19.270
 formulated as a distance 

00:05:16.120 --> 00:05:21.130
 in kilometers for example is finally 

00:05:19.270 --> 00:05:22.810
 see our transition function who she 

00:05:21.130 --> 00:05:23.800
 will give the information on what are 

00:05:22.810 --> 00:05:25.510
 the cities that are directly 

00:05:23.800 --> 00:05:28.570
 directly accessible from 

00:05:25.510 --> 00:05:32.650
 other cities via a path where a 

00:05:28.570 --> 00:05:34.240
 route so for example for l0 but in 

00:05:32.650 --> 00:05:36.970
 our problem we will assume that one 

00:05:34.240 --> 00:05:42.159
 route that directly connects 1 0 or 

00:05:36.970 --> 00:05:43.539
 city ​​n1 n2 and n3 for saïfi good in a 

00:05:42.159 --> 00:05:45.580
 true network tools in fact we would have 

00:05:43.539 --> 00:05:47.470
 probably arts she will come back 

00:05:45.580 --> 00:05:48.220
 that is, a road parliament not 

00:05:47.470 --> 00:05:49.990
 one-way 

00:05:48.220 --> 00:05:52.750
 and we could take the same route 

00:05:49.990 --> 00:05:55.570
 to go into this example 6 2 1 0 1 3 

00:05:52.750 --> 00:05:57.760
 or 3 0 but for this exemption does not 

00:05:55.570 --> 00:05:59.169
 simplified formerly in a 

00:05:57.760 --> 00:06:01.479
 direction that allowed us to 

00:05:59.169 --> 00:06:03.370
 get closer to 1.6 just to simplify 

00:06:01.479 --> 00:06:04.720
 but in practice we could have 

00:06:03.370 --> 00:06:06.070
 connections in both directions plus the 

00:06:04.720 --> 00:06:08.139
 two would probably have the same shot 

00:06:06.070 --> 00:06:10.630
 when a cost of 2.6 is 

00:06:08.139 --> 00:06:13.449
 exactly the same route but with two 

00:06:10.630 --> 00:06:15.220
 different ways and finally our 

00:06:13.449 --> 00:06:17.050
 goal function that will determine if one 

00:06:15.220 --> 00:06:18.820
 has achieved another goal that we have 

00:06:17.050 --> 00:06:20.919
 returned to our destination it's a 

00:06:18.820 --> 00:06:22.780
 function that will return true if the 

00:06:20.919 --> 00:06:25.210
 end node for which we evaluate the 

00:06:22.780 --> 00:06:29.919
 purpose function matches or instead of 

00:06:25.210 --> 00:06:30.849
 destination know m6 in the final and so 

00:06:29.919 --> 00:06:32.830
 so here you see in 

00:06:30.849 --> 00:06:34.580
 the graffiti illustration we have 

00:06:32.830 --> 00:06:36.169
 the information the necks when 

00:06:34.580 --> 00:06:39.169
 we have the cities the stops that 

00:06:36.169 --> 00:06:40.939
 correspond to roads that connects 

00:06:39.169 --> 00:06:42.770
 the cities the cost that's right at 

00:06:40.939 --> 00:06:44.900
 above that corresponds to the associated costs 

00:06:42.770 --> 00:06:47.210
 to move from one city to another than this 

00:06:44.900 --> 00:06:50.960
 either land measure or a measure of 

00:06:47.210 --> 00:06:53.719
 distance according to our problem is safe 

00:06:50.960 --> 00:06:56.240
 this structure we are going to be 

00:06:53.719 --> 00:06:57.740
 possible to run an algorithm of 

00:06:56.240 --> 00:07:00.289
 search in a serious way to find 

00:06:57.740 --> 00:07:03.289
 what is the path that allows with the 

00:07:00.289 --> 00:07:04.849
 minimum cost of this round 2 es10 to es16 

00:07:03.289 --> 00:07:07.250
 and so find the way the most 

00:07:04.849 --> 00:07:12.770
 short between our city associated with 1 0 

00:07:07.250 --> 00:07:14.719
 and our city associated with m6 so that's 

00:07:12.770 --> 00:07:16.460
 the kind of structure or the kind of 

00:07:14.719 --> 00:07:18.289
 problem that I will be able to give to 

00:07:16.460 --> 00:07:19.190
 solve to search algorithms 

00:07:18.289 --> 00:07:21.650
 be serious 

00:07:19.190 --> 00:07:23.870
 there are several types of flu from 

00:07:21.650 --> 00:07:26.629
 search in a serious some of which 

00:07:23.870 --> 00:07:30.560
 you already know there is looking 

00:07:26.629 --> 00:07:32.360
 without ristic and uniformly shot like the 

00:07:30.560 --> 00:07:32.860
 in-depth research or in English 

00:07:32.360 --> 00:07:35.139
 depp 

00:07:32.860 --> 00:07:38.449
 fairsearch so that's the type of 

00:07:35.139 --> 00:07:41.469
 research that will explore children in 

00:07:38.449 --> 00:07:43.159
 first before exploring their brothers 

00:07:41.469 --> 00:07:45.949
 on the contrary we could have a 

00:07:43.159 --> 00:07:49.099
 in-depth search puff for 

00:07:45.949 --> 00:07:51.589
 search that will rather explore the whole 

00:07:49.099 --> 00:07:54.740
 brothers of a knot before exploring 

00:07:51.589 --> 00:07:56.240
 their children and that's so 

00:07:54.740 --> 00:07:59.360
 fertilizers that do not use hardy 

00:07:56.240 --> 00:08:02.990
 and who in fact does not handle the existence 

00:07:59.360 --> 00:08:05.089
 of a variable cost of dinars is to 

00:08:02.990 --> 00:08:07.129
 the other equally unpleasant of 

00:08:05.089 --> 00:08:08.599
 research that are sometimes without rustic 

00:08:07.129 --> 00:08:10.729
 but at variable costs that allow 

00:08:08.599 --> 00:08:13.129
 to integrate the concept of variable cost 

00:08:10.729 --> 00:08:15.949
 between the different do not know 

00:08:13.129 --> 00:08:17.180
 probably the astra algorithm that 

00:08:15.949 --> 00:08:19.219
 actually allows to find the path of 

00:08:17.180 --> 00:08:21.020
 more than a source safe place 

00:08:19.219 --> 00:08:22.610
 and all the others us so it's a 

00:08:21.020 --> 00:08:25.009
 algorithm that could use for 

00:08:22.610 --> 00:08:29.180
 find among other things the most 

00:08:25.009 --> 00:08:32.899
 short between 1 initial node 1 is a 

00:08:29.180 --> 00:08:34.579
 destination but in this one we go 

00:08:32.899 --> 00:08:37.190
 actually focus on research 

00:08:34.579 --> 00:08:40.050
 with rustic that will also be able to 

00:08:37.190 --> 00:08:42.269
 deal with variable costs 

00:08:40.050 --> 00:08:43.860
 two relatively simple algorithms 

00:08:42.269 --> 00:08:47.700
 we will see very quickly if the bret 

00:08:43.860 --> 00:08:49.589
 best for search and the gray deeper search 

00:08:47.700 --> 00:08:51.839
 and the one we're going to spend more 

00:08:49.589 --> 00:08:54.899
 quickly to more time not good it's 

00:08:51.839 --> 00:08:56.579
 the star algorithm and we can in 

00:08:54.899 --> 00:08:58.680
 does that drink the stars grita like 

00:08:56.579 --> 00:09:00.690
 a way to improve the cure of dice 

00:08:58.680 --> 00:09:03.510
 3 to find the path between a mini 

00:09:00.690 --> 00:09:05.790
 heaven and a final goal and its 

00:09:03.510 --> 00:09:07.800
 improvements his accelerations there are going 

00:09:05.790 --> 00:09:10.920
 be obtained through incorporation 

00:09:07.800 --> 00:09:13.070
 of a nurse tic in the procedure of 

00:09:10.920 --> 00:09:13.070
 research 

