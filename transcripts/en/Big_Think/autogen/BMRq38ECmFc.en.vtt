WEBVTT
Kind: captions
Language: en

00:00:05.890 --> 00:00:11.330
The thing about building a company
is that inevitably things go wrong, and bad

00:00:11.330 --> 00:00:12.330
things happen.

00:00:12.330 --> 00:00:16.130
You don’t want that to happen, you don’t
anticipate when that happens, but it is inevitable

00:00:16.130 --> 00:00:19.110
in the lifecycle of any company.

00:00:19.110 --> 00:00:25.699
When that happens the best way to react to
that is to use it as a learning lab.

00:00:25.699 --> 00:00:30.810
Use it as an opportunity to call everybody
together and really have a laboratory, have

00:00:30.810 --> 00:00:37.140
a workshop, have an understanding of: how
do we unpack what happened and why it all

00:00:37.140 --> 00:00:42.710
happened with no blame but with understanding
of the systems that got us here, and then

00:00:42.710 --> 00:00:47.960
how do we think about how do you respond right
now together, and then how do you move forward

00:00:47.960 --> 00:00:51.879
from there, both in terms of establishing
maybe new procedures, establishing some new

00:00:51.879 --> 00:00:56.690
policies, some even new ways of thinking,
some new operational tactics, but then also

00:00:56.690 --> 00:01:02.899
this is equally important, how does the company
and the CEO and the team around him or her

00:01:02.899 --> 00:01:08.100
successfully move on emotionally, kind of
create a new point of view recognizing that

00:01:08.100 --> 00:01:11.659
that was in the past and there’s the future
to look too?

00:01:11.659 --> 00:01:14.970
You can’t change the past, you can only
change the future.

00:01:14.970 --> 00:01:21.110
So the best way to debrief any bad thing that
happened, any problem is just to go down the

00:01:21.110 --> 00:01:22.610
tiers of “Why.”

00:01:22.610 --> 00:01:27.280
And so you start with—so let’s assume
that the project that you’re working on

00:01:27.280 --> 00:01:32.369
is late, let’s assume it’s a product release,
and that it is now definitely not going to

00:01:32.369 --> 00:01:36.329
make its deadline, and it’s probably three
or six months late.

00:01:36.329 --> 00:01:40.350
First of all it’s important just to create
an environment where people can talk freely

00:01:40.350 --> 00:01:45.659
and not feel blamed, because we’re just
debriefing to understand what happened.

00:01:45.659 --> 00:01:50.560
So it’s about understanding the structure
of it not looking to finger point.

00:01:50.560 --> 00:01:52.219
But the first question is, why?

00:01:52.219 --> 00:01:54.770
So why was the release late?

00:01:54.770 --> 00:02:01.509
Well, engineering, for example, didn’t deliver
the code on time.

00:02:01.509 --> 00:02:04.350
Why didn’t engineering deliver the code
on time?

00:02:04.350 --> 00:02:07.039
Because they weren’t given the specs early
enough.

00:02:07.039 --> 00:02:09.289
Why weren’t they given the specs early enough?

00:02:09.289 --> 00:02:12.180
Because product didn’t get them to them
early enough.

00:02:12.180 --> 00:02:15.681
Why didn’t product to get them to them early
enough Because product didn’t understand

00:02:15.681 --> 00:02:18.290
from marketing the requirements early enough.

00:02:18.290 --> 00:02:23.260
So if you keep going down those and you understand
why did marketing not get them early enough,

00:02:23.260 --> 00:02:29.230
it’s because they didn’t have a good plan
to get the customer data they needed to, then

00:02:29.230 --> 00:02:33.290
you can take a look at what went wrong here.

00:02:33.290 --> 00:02:38.930
Is it about we need to tighten up our process
(which is very often true, especially with

00:02:38.930 --> 00:02:39.930
startups)?

00:02:39.930 --> 00:02:44.290
Is it that we need to have a better timeframe
for deliverables (which is often very true

00:02:44.290 --> 00:02:49.120
when you’re working on complicated multi-domain
projects)?

00:02:49.120 --> 00:02:51.080
Or do we just forecast incorrectly?

00:02:51.080 --> 00:02:57.150
Did we not take into account all the multiple
steps that leads to the product release, and

00:02:57.150 --> 00:02:59.400
that’s often very true as well?

00:02:59.400 --> 00:03:02.870
And maybe why didn’t we take into account
the multiple steps?

00:03:02.870 --> 00:03:05.019
Because there wasn’t one person in charge.

00:03:05.019 --> 00:03:06.019
Great.

00:03:06.019 --> 00:03:10.160
So going forward we know that we need to all
take into account the multiple steps, and

00:03:10.160 --> 00:03:15.989
declare one person the owner of the project
overall, and let’s try those two interventions,

00:03:15.989 --> 00:03:23.840
those two changes, and that’s going to help
us have more excellence in operations.

