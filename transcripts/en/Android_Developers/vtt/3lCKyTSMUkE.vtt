WEBVTT
Kind: captions
Language: en

00:00:05.270 --> 00:00:08.640
RICH: Welcome to the first
Android Developer Office Hours

00:00:08.640 --> 00:00:09.910
of the new year.

00:00:09.910 --> 00:00:18.580
Happy new year,
[FOREIGN LANGUAGE], and any

00:00:18.580 --> 00:00:20.580
other, or maybe Dutch.

00:00:20.580 --> 00:00:22.580
Johan, can you jump in with a
Dutch Happy New Year for us?

00:00:22.580 --> 00:00:24.570
JOHAN: [SPEAKING DUTCH]

00:00:24.570 --> 00:00:26.530
RICH: [DUTCH], to
you too as well.

00:00:26.530 --> 00:00:29.450
So happy new Android year
kicked off by CES.

00:00:29.450 --> 00:00:32.549
As you may notice, we're joined
by Chris Banes in the

00:00:32.549 --> 00:00:35.200
Android studio today.

00:00:35.200 --> 00:00:35.952
CHRIS: Ta-da.

00:00:35.952 --> 00:00:38.010
RICH: And that's because he's
the newest member of the

00:00:38.010 --> 00:00:42.460
Android Developer Relations
team based out of London.

00:00:42.460 --> 00:00:45.340
Welcome, Chris.

00:00:45.340 --> 00:00:47.340
And we've got Sparky with us.

00:00:47.340 --> 00:00:48.300
Hey, Sparky.

00:00:48.300 --> 00:00:49.970
SPARKY: I'm here, yes.

00:00:49.970 --> 00:00:51.785
I'm here largely to acknowledge
my departure,

00:00:51.785 --> 00:00:55.730
since I am moving out of Android
Developer Relations

00:00:55.730 --> 00:00:58.580
and into internal
Google projects.

00:00:58.580 --> 00:01:01.990
I'll be doing much the same
thing as I did before, but for

00:01:01.990 --> 00:01:05.044
inward facing stuff rather
than external.

00:01:05.044 --> 00:01:07.570
RICH: I hope that works
out very well.

00:01:07.570 --> 00:01:09.100
I'm sure we'll still see you
in the Android scene and

00:01:09.100 --> 00:01:09.830
around, Sparky.

00:01:09.830 --> 00:01:11.910
And, of course, Nick
Butcher as well.

00:01:11.910 --> 00:01:13.232
Hey, Nick.

00:01:13.232 --> 00:01:15.430
NICK: Hi, happy New Year.

00:01:18.410 --> 00:01:21.870
RICH: So it's been kicked off
the new year with CES.

00:01:21.870 --> 00:01:26.020
I guess we've seen lots and lots
of new Android stories.

00:01:26.020 --> 00:01:28.160
Have you got any favorites
from over there

00:01:28.160 --> 00:01:31.310
in the London office?

00:01:31.310 --> 00:01:34.840
CHRIS: It seems to be the big
CES of big, big phones, so

00:01:34.840 --> 00:01:38.265
lots of 1080p, 5 inch,
6 inch devices.

00:01:38.265 --> 00:01:40.260
NICK: Can we call it a phone
if it's 6 inches?

00:01:40.260 --> 00:01:40.880
CHRIS: Tablet, maybe?

00:01:40.880 --> 00:01:41.920
NICK: Oh, I hate that word.

00:01:41.920 --> 00:01:43.546
CHRIS: Yeah, it's a bad word.

00:01:43.546 --> 00:01:45.900
SPARKY: Vizio, is that
who made that?

00:01:45.900 --> 00:01:49.890
CHRIS: Vizio, Zed TE, Xperia,
Sony, Lenovo,

00:01:49.890 --> 00:01:51.500
they're all up there.

00:01:51.500 --> 00:01:55.260
NICK: It seemed like 1080p
is the new table stakes

00:01:55.260 --> 00:01:55.515
resolution.

00:01:55.515 --> 00:01:58.500
When you read a review of the
phone, it says 720p screen.

00:01:58.500 --> 00:02:01.140
You go, oh.

00:02:01.140 --> 00:02:04.210
RICH: I just want 1080p at 4.7
inches, I really don't want to

00:02:04.210 --> 00:02:07.780
stretch to that 5 inches.

00:02:07.780 --> 00:02:10.729
CHRIS: It's weird, because
previously, with the 720p, you

00:02:10.729 --> 00:02:14.060
had that tablet and then
phones caught up.

00:02:14.060 --> 00:02:18.640
Whereas now, it's phones have
gone 1080p, but tablets

00:02:18.640 --> 00:02:20.200
haven't quite got there yet.

00:02:20.200 --> 00:02:22.860
Obviously, you've got the Nexus
10, but most tablets are

00:02:22.860 --> 00:02:24.105
still at the 1280.

00:02:24.105 --> 00:02:26.090
RICH: Yeah, funnily enough I saw
one this morning on "The

00:02:26.090 --> 00:02:32.410
Verge" that was 1,920
by 1,200, so gone

00:02:32.410 --> 00:02:35.080
past 1080p, a 7 inch.

00:02:35.080 --> 00:02:36.930
So maybe that's what the 7
inches are going to set.

00:02:36.930 --> 00:02:38.710
Rather than 10 inches,
it'll be 1080p.

00:02:38.710 --> 00:02:42.855
SPARKY: I think 2,560 is where
it's at for tablets now.

00:02:42.855 --> 00:02:43.880
What can I say?

00:02:43.880 --> 00:02:44.960
I'm spoiled.

00:02:44.960 --> 00:02:47.190
NICK: That's your new year's
resolution, get it?

00:02:47.190 --> 00:02:48.350
RICH: No, that's a good point.

00:02:48.350 --> 00:02:53.050
With the Tegra 4, the Quad-core
A15, and the new

00:02:53.050 --> 00:02:56.390
SnapDragons, the S800, S600, and
all those chips coming out

00:02:56.390 --> 00:02:59.440
in the next few months, we could
definitely be seeing

00:02:59.440 --> 00:03:03.046
those high resolutions getting
pushed around.

00:03:03.046 --> 00:03:04.020
YOSSI: Hi, guys.

00:03:04.020 --> 00:03:06.090
SPARKY: That said, I do have
to acknowledge that Santa

00:03:06.090 --> 00:03:08.510
Claus was very, very
busy hauling around

00:03:08.510 --> 00:03:11.020
Nexus 7's in my family.

00:03:11.020 --> 00:03:11.720
RICH: Mine too.

00:03:11.720 --> 00:03:13.230
Mine too.

00:03:13.230 --> 00:03:17.270
Definitely, Nexus 7, a popular
gift this year.

00:03:17.270 --> 00:03:19.452
NICK: I think one of my
stand-outs from CES, I've

00:03:19.452 --> 00:03:22.190
seen, is Vizio and some other
manufacturers seem to be

00:03:22.190 --> 00:03:26.630
backing off their OEM
customizations and recognizing

00:03:26.630 --> 00:03:31.830
that stock Android has got to a
point where it's a fantastic

00:03:31.830 --> 00:03:32.125
experience.

00:03:32.125 --> 00:03:34.850
And you don't need to put
layers on top of it.

00:03:34.850 --> 00:03:36.930
It just slows down upgrade
cycles and so forth.

00:03:36.930 --> 00:03:38.490
So, for me, I think that's
a wonderful sign.

00:03:38.490 --> 00:03:41.322
I think we're really
rounding a corner.

00:03:41.322 --> 00:03:43.665
RICH: Yeah, it's excellent
news, isn't it?

00:03:43.665 --> 00:03:45.630
I was hoping to see
more of that.

00:03:45.630 --> 00:03:49.155
And goodbye, goodbye
to Cupcake.

00:03:51.780 --> 00:03:54.510
The Android dashboard updated
last week and Cupcake has

00:03:54.510 --> 00:03:55.465
fallen off the bottom.

00:03:55.465 --> 00:03:57.430
I assume that means
it's less than

00:03:57.430 --> 00:04:01.720
half of 0.1% or something.

00:04:01.720 --> 00:04:02.600
Sorry?

00:04:02.600 --> 00:04:04.110
NICK: And 40% of users
are on Ice Cream

00:04:04.110 --> 00:04:06.040
Sandwich and above, right?

00:04:06.040 --> 00:04:08.072
RICH: Yeah, over 40%
[INAUDIBLE].

00:04:08.072 --> 00:04:12.200
And most of that is Ice
Cream Sandwich.

00:04:12.200 --> 00:04:15.080
SPARKY: Given that Cupcake had
some noteworthy security

00:04:15.080 --> 00:04:19.190
problems, and even the G1 was
upgradable to Donut, I never

00:04:19.190 --> 00:04:20.620
wanted anyone to support
Cupcake anyhow.

00:04:24.830 --> 00:04:29.580
RICH: OK, just having
browser issues.

00:04:29.580 --> 00:04:31.680
NICK: And unfortunately, Matt's
not here because he's

00:04:31.680 --> 00:04:32.820
at CES, lucky guy.

00:04:32.820 --> 00:04:35.280
So what, he's probably
asleep right now.

00:04:35.280 --> 00:04:38.510
But there's a few new
announcements

00:04:38.510 --> 00:04:39.560
on the GTV as well.

00:04:39.560 --> 00:04:42.100
So the ASUS device and
a new high sense

00:04:42.100 --> 00:04:44.140
device, I think, right?

00:04:44.140 --> 00:04:45.240
Pretty exciting.

00:04:45.240 --> 00:04:47.170
CHRIS: The Qube looks
good, the ASUS one

00:04:47.170 --> 00:04:49.360
looks very nice device.

00:04:49.360 --> 00:04:51.476
Very home-orientated.

00:04:51.476 --> 00:04:53.010
That's good.

00:04:53.010 --> 00:04:56.130
Your big thing is Nvidia's
Project Shield, a new game

00:04:56.130 --> 00:04:56.670
controller device.

00:04:56.670 --> 00:04:59.490
NICK: Yeah, of course,
anyone excited?

00:04:59.490 --> 00:05:00.740
YOSSI: That was really
cool to see.

00:05:03.080 --> 00:05:05.860
NICK: He said it's going to get
24 hours of HD playback,

00:05:05.860 --> 00:05:07.200
video playback.

00:05:07.200 --> 00:05:09.130
That's got to be a good sign
for the Tegra 4, I hope.

00:05:11.720 --> 00:05:15.300
I think, didn't they say it's a
new 28 nanometer processor?

00:05:15.300 --> 00:05:16.500
CHRIS: Also, it's
in a controller.

00:05:16.500 --> 00:05:17.510
You can keep a bigger
battery anyway.

00:05:17.510 --> 00:05:18.750
NICK: Yeah, I guess so.

00:05:18.750 --> 00:05:20.280
CHRIS: So that might be why.

00:05:20.280 --> 00:05:22.220
It's also not a big screen.

00:05:22.220 --> 00:05:23.460
It's about 4 inches.

00:05:23.460 --> 00:05:26.060
YOSSI: Yeah, it's still a big
screen for a controller you

00:05:26.060 --> 00:05:27.730
just put in your hands.

00:05:27.730 --> 00:05:29.700
CHRIS: Oh yeah, definitely.

00:05:29.700 --> 00:05:31.770
SPARKY: But you know they're
just going to use that

00:05:31.770 --> 00:05:34.510
increased efficiency just to
give you a smaller battery and

00:05:34.510 --> 00:05:36.280
chipping devices.

00:05:36.280 --> 00:05:37.530
NICK: Yeah, probably.

00:05:39.990 --> 00:05:42.130
It's a good thing, right?

00:05:42.130 --> 00:05:44.900
I guess they're all having the
4-PLUS-1 cores now as well,

00:05:44.900 --> 00:05:45.400
aren't they?

00:05:45.400 --> 00:05:48.590
So they're having the low crowd
core, which tips over

00:05:48.590 --> 00:05:50.750
when you're not really taxing it
and then spins up the high

00:05:50.750 --> 00:05:53.670
performance one, so I think I
would like to see more focus

00:05:53.670 --> 00:05:56.530
on battery life this year.

00:05:56.530 --> 00:05:57.780
RICH: Absolutely.

00:05:59.336 --> 00:06:00.550
What else was it?

00:06:00.550 --> 00:06:02.364
It wasn't just the--

00:06:02.364 --> 00:06:03.750
I can't remember what
I was going to say.

00:06:03.750 --> 00:06:05.000
Just skip that one.

00:06:08.090 --> 00:06:09.100
NICK: That's hardware, right?

00:06:09.100 --> 00:06:11.270
The CES, so we're on the Android
developer on the

00:06:11.270 --> 00:06:12.100
software side of things.

00:06:12.100 --> 00:06:15.860
We had an exciting blog post
yesterday talking about some

00:06:15.860 --> 00:06:19.770
new authentication steps
that you can do.

00:06:19.770 --> 00:06:22.830
RICH: Yeah, you can use GMS Core
to authenticate against

00:06:22.830 --> 00:06:24.630
your own back-end servers
now, endpoints,

00:06:24.630 --> 00:06:26.165
things that like that.

00:06:26.165 --> 00:06:29.630
I haven't delved into
it myself yet.

00:06:29.630 --> 00:06:30.500
NICK: I'm pretty excited
about it.

00:06:30.500 --> 00:06:33.770
I think it relieves a need to
handle things like usernames

00:06:33.770 --> 00:06:36.520
and passwords in your app, and
still be sure of who you're

00:06:36.520 --> 00:06:37.330
talking to.

00:06:37.330 --> 00:06:40.180
So I think this is really,
really, awesome.

00:06:40.180 --> 00:06:42.000
CHRIS: Yeah, it's a nice
way of doing it.

00:06:42.000 --> 00:06:45.920
Because having to get users
to register and login, it

00:06:45.920 --> 00:06:47.230
disrupts the user flow.

00:06:47.230 --> 00:06:50.567
So anything to make our apps
as seamless as possible is

00:06:50.567 --> 00:06:52.130
always a good thing.

00:06:52.130 --> 00:06:55.610
YOSSI: Is there a demo app
for that to see the flow

00:06:55.610 --> 00:06:56.590
and stuff like that?

00:06:56.590 --> 00:06:59.250
Or is it just a blog post?

00:06:59.250 --> 00:07:02.990
CHRIS: It's a blog post, but it
goes through the whole flow

00:07:02.990 --> 00:07:04.656
using the Google
Play services.

00:07:04.656 --> 00:07:07.216
YOSSI: Oh, I will look
it up later.

00:07:07.216 --> 00:07:10.150
CHRIS: Yeah, it's on Google+
and on the blog site.

00:07:10.150 --> 00:07:13.315
NICK: Yeah, top of the
blog right now.

00:07:13.315 --> 00:07:17.610
RICH: OK, welcome Guiseppe
as well, from Italy.

00:07:17.610 --> 00:07:18.500
GUISEPPE: Thank you very much.

00:07:18.500 --> 00:07:21.000
Happy New Year to everybody.

00:07:21.000 --> 00:07:22.230
RICH: Happy New Year.

00:07:22.230 --> 00:07:23.610
And Lucas, as well.

00:07:23.610 --> 00:07:24.340
Hey there.

00:07:24.340 --> 00:07:25.390
Happy New Year, Lucas.

00:07:25.390 --> 00:07:28.970
OK, does anyone in the Hangout
have a question before we jump

00:07:28.970 --> 00:07:31.400
into the 14 questions
we have lined up in

00:07:31.400 --> 00:07:32.130
the moderators today?

00:07:32.130 --> 00:07:34.554
I wonder if Andrew Kelly
put all of them in.

00:07:34.554 --> 00:07:37.225
SPARKY: Not all, but
maybe a third.

00:07:37.225 --> 00:07:39.300
RICH: OK.

00:07:39.300 --> 00:07:43.350
JOHAN: I posed a question
in the moderator, guys.

00:07:43.350 --> 00:07:50.160
I've ran into an issue where
my app is causing a force

00:07:50.160 --> 00:07:53.730
close on a Sony Xperia device.

00:07:53.730 --> 00:08:01.630
And it turns out the Sony Xperia
framework is referring

00:08:01.630 --> 00:08:08.730
to a resource ID, which I have
also defined in my app.

00:08:08.730 --> 00:08:13.000
So it looks like it's, I don't
know, using an app resource ID

00:08:13.000 --> 00:08:14.250
or something.

00:08:16.720 --> 00:08:22.430
Have you encountered such things
where device failures--

00:08:22.430 --> 00:08:23.690
RICH: [INAUDIBLE].

00:08:23.690 --> 00:08:24.260
JOHAN: Yeah.

00:08:24.260 --> 00:08:26.650
RICH: No, I mean, it's a very
large pool of resource ID's.

00:08:26.650 --> 00:08:29.435
And the chances of them clashing
are very small.

00:08:29.435 --> 00:08:31.650
But I guess it is possible
that they could clash.

00:08:31.650 --> 00:08:36.799
I mean, they are generated at
random in the resources.java

00:08:36.799 --> 00:08:38.130
file, right?

00:08:38.130 --> 00:08:41.990
JOHAN: Yeah, but in this case,
it's for setting the font

00:08:41.990 --> 00:08:48.160
scroll thump drawable, which
apparently Sony is using its

00:08:48.160 --> 00:08:51.940
own skin or theme or whatever.

00:08:51.940 --> 00:08:58.420
But still, I've read a post
by Dianne Hackborn,

00:08:58.420 --> 00:09:00.860
which states the--

00:09:00.860 --> 00:09:06.950
what's it called-- the 7F, the
first two x numbers in the

00:09:06.950 --> 00:09:08.870
resource identifier
are for apps only.

00:09:08.870 --> 00:09:15.530
So is it then a block by Sony
using, I don't know,

00:09:15.530 --> 00:09:17.710
hard-coded resource
identifiers?

00:09:17.710 --> 00:09:21.720
Or how did it get generated
getting into their framework?

00:09:21.720 --> 00:09:26.250
Has anybody encountered
that with other OSes?

00:09:26.250 --> 00:09:27.030
RICH: I haven't no.

00:09:27.030 --> 00:09:30.280
But if Sony are building on top
of the Android framework

00:09:30.280 --> 00:09:32.990
and putting their own apps in,
maybe they're not using the

00:09:32.990 --> 00:09:35.506
reserved resource IDs
for their own apps.

00:09:35.506 --> 00:09:38.300
JOHAN: Oh, OK, that could be.

00:09:38.300 --> 00:09:42.200
YOSSI: I think you can
do a workaround by

00:09:42.200 --> 00:09:47.090
using public IDs XMLs.

00:09:47.090 --> 00:09:59.460
And generate your own IDs and
set the IDs and the XML to be

00:09:59.460 --> 00:10:02.470
sequentially added.

00:10:02.470 --> 00:10:07.640
And I think that should do a
workaround on all devices.

00:10:07.640 --> 00:10:11.460
Because on the public
XML, you can define

00:10:11.460 --> 00:10:14.420
IDs you want to expose.

00:10:14.420 --> 00:10:18.290
And if you want to expose
them, then the system

00:10:18.290 --> 00:10:23.720
generates different linkage
or something, I'm not

00:10:23.720 --> 00:10:25.380
sure where it is.

00:10:25.380 --> 00:10:28.970
I just read about it
a few years ago.

00:10:32.500 --> 00:10:34.640
NICK: So I think I saw a
blog post about this.

00:10:34.640 --> 00:10:36.810
Weren't you saying it was only
happening when they introduced

00:10:36.810 --> 00:10:38.910
ActionBar Sherlock into it?

00:10:38.910 --> 00:10:42.530
JOHAN: Yeah, but I don't
know if that's the--

00:10:42.530 --> 00:10:43.902
NICK: Well, that makes me think
it's something to do

00:10:43.902 --> 00:10:46.630
with theme, perhaps.

00:10:46.630 --> 00:10:50.490
Because if you're using the
Sherlock themes, then they may

00:10:50.490 --> 00:10:52.050
be trying to theme some
of the attributes.

00:10:52.050 --> 00:10:54.590
And if they're just trying to
alias them to underlying

00:10:54.590 --> 00:10:57.306
resources and Sony's changed
something, then--

00:10:57.306 --> 00:11:01.220
JOHAN: Yeah, but there's a blog
post about that as well.

00:11:01.220 --> 00:11:03.470
And then you have to move
that specific attribute.

00:11:03.470 --> 00:11:05.870
But it's still attributed
to a values dash

00:11:05.870 --> 00:11:09.060
v11 resource folder.

00:11:09.060 --> 00:11:13.300
And then I think you're out of
the loop, not clashing those

00:11:13.300 --> 00:11:19.920
on older Android OS devices.

00:11:19.920 --> 00:11:25.110
So I'm not sure if it's
ActionBar Sherlock specific.

00:11:25.110 --> 00:11:29.520
Because in my view, it's a Sony
framework resource, it's

00:11:29.520 --> 00:11:31.680
apps list view.

00:11:31.680 --> 00:11:33.130
So it could be in
their framework.

00:11:33.130 --> 00:11:36.930
Or it could be in their app,
like Rich was saying, in one

00:11:36.930 --> 00:11:38.180
of their apps, I don't know.

00:11:41.060 --> 00:11:45.090
So yeah, it pops up with
ActionBar Sherlock, that's

00:11:45.090 --> 00:11:46.180
definitely true, Nick.

00:11:46.180 --> 00:11:50.325
But I'm not sure if that
is the real issue here.

00:11:50.325 --> 00:11:51.610
RICH: Well, it sounds
very bad.

00:11:51.610 --> 00:11:53.867
If it's a resource that you
can use inside your

00:11:53.867 --> 00:11:57.156
application that they're
providing that's terrible for

00:11:57.156 --> 00:12:01.233
them to use a 7F ID
for it, isn't it?

00:12:01.233 --> 00:12:04.490
[INAUDIBLE] will clash, right?

00:12:04.490 --> 00:12:06.700
Maybe just email me
the details of it.

00:12:06.700 --> 00:12:09.300
I know that Dianne knows
about it now, as well.

00:12:09.300 --> 00:12:12.436
And we'll see if we can send
it off to our Sony partner

00:12:12.436 --> 00:12:13.560
manager and see what happens.

00:12:13.560 --> 00:12:15.294
JOHAN: OK, will do.

00:12:15.294 --> 00:12:17.714
RICH: Do you know which
device it was on?

00:12:17.714 --> 00:12:18.200
JOHAN: Yup.

00:12:18.200 --> 00:12:21.030
RICH: Is it a new firmware
or old firmware?

00:12:21.030 --> 00:12:22.815
JOHAN: Old firmware, 2.3.4.

00:12:22.815 --> 00:12:26.210
RICH: OK, but it's already
been reported and fixed.

00:12:26.210 --> 00:12:27.800
JOHAN: Yeah, that's what
I'm afraid of.

00:12:27.800 --> 00:12:31.310
But then you still have to
have workarounds for this

00:12:31.310 --> 00:12:32.100
particular device--

00:12:32.100 --> 00:12:33.090
RICH: What a crazy case.

00:12:33.090 --> 00:12:34.455
JOHAN: Affecting all
Sony devices.

00:12:40.540 --> 00:12:41.660
OK, that should--

00:12:41.660 --> 00:12:42.530
OK, curious.

00:12:42.530 --> 00:12:44.150
OK, thanks guys.

00:12:44.150 --> 00:12:45.436
RICH: But it would good to find
out the details because

00:12:45.436 --> 00:12:49.050
it could affect everyone.

00:12:49.050 --> 00:12:51.490
Are Nick and Chris live?

00:12:51.490 --> 00:12:51.990
NICK: We're back.

00:12:51.990 --> 00:12:55.610
We dropped out, but
we're back.

00:12:55.610 --> 00:12:58.540
RICH: OK, any other--

00:12:58.540 --> 00:12:59.790
CHRIS: [INAUDIBLE] muted?

00:13:03.820 --> 00:13:04.340
Oops.

00:13:04.340 --> 00:13:05.500
RICH: Any other questions
from the Hangout?

00:13:05.500 --> 00:13:09.394
Or should we jump into
this moderator?

00:13:09.394 --> 00:13:11.960
Sounds like we're going to
jump into the moderator.

00:13:11.960 --> 00:13:15.580
SPARKY: You already did, because
Johan's question was

00:13:15.580 --> 00:13:17.380
one of our moderator
questions.

00:13:17.380 --> 00:13:20.446
RICH: Absolutely, it's always
nice when people who are going

00:13:20.446 --> 00:13:22.355
to ask questions in Hangout
put them in the moderator

00:13:22.355 --> 00:13:24.950
first, though, so we get a
chance to pre-read them, not

00:13:24.950 --> 00:13:26.200
that I did.

00:13:33.310 --> 00:13:34.710
It looks like you've already
had a look through some of

00:13:34.710 --> 00:13:35.200
these, Sparky.

00:13:35.200 --> 00:13:37.440
Do you want to jump on one?

00:13:37.440 --> 00:13:40.770
SPARKY: Oh, I could.

00:13:40.770 --> 00:13:43.150
I didn't have much to say
about this first one.

00:13:43.150 --> 00:13:48.140
Jamie says, "when using a
multi-autotext view, I process

00:13:48.140 --> 00:13:50.980
the list when user selects
an item by clicking.

00:13:50.980 --> 00:13:53.860
But I also want to detect new
items added manually, ones not

00:13:53.860 --> 00:13:58.810
on the list, and do the same
process, as it's one words

00:13:58.810 --> 00:14:02.580
when user press space or
punctuation, et cetera." He

00:14:02.580 --> 00:14:04.920
goes on to say, "I used
KeyListener, but this only

00:14:04.920 --> 00:14:08.190
works with Android IME options
set to something, which is

00:14:08.190 --> 00:14:11.000
annoying, as in landscape on
smaller devices, it fills the

00:14:11.000 --> 00:14:13.700
screen, gives a button.

00:14:13.700 --> 00:14:15.510
I either want to stop it
filling the screen or

00:14:15.510 --> 00:14:16.840
not have it be set.

00:14:16.840 --> 00:14:20.590
Am I doing it completely
wrong?"

00:14:20.590 --> 00:14:23.180
I don't have a lot to contribute
on that one.

00:14:23.180 --> 00:14:26.190
I don't have experience with
that particular control.

00:14:31.320 --> 00:14:35.640
Any of you guys work with
multi-autotext view before?

00:14:35.640 --> 00:14:37.900
CHRIS: I have, but I'm trying
to work out what

00:14:37.900 --> 00:14:39.150
he's trying to do.

00:14:44.894 --> 00:14:47.260
I might skip that one and
do it after I have

00:14:47.260 --> 00:14:48.510
another read through.

00:14:52.570 --> 00:14:54.040
SPARKY: Well, we can always come
back to that one later.

00:14:54.040 --> 00:14:54.480
Should we--

00:14:54.480 --> 00:14:56.260
RICH: I mean, the IME always
fills the screen landscape in

00:14:56.260 --> 00:14:56.790
landscape mode, right?

00:14:56.790 --> 00:14:59.240
That's just the default
behavior?

00:14:59.240 --> 00:15:00.640
CHRIS: You can have variety,
though, from what I remember.

00:15:00.640 --> 00:15:03.140
RICH: You can indeed have
variety and use your own

00:15:03.140 --> 00:15:04.390
custom one.

00:15:07.271 --> 00:15:10.200
SPARKY: Well, here's
an easy one.

00:15:10.200 --> 00:15:13.240
Shivano from Egypt says, "are
there any news regarding

00:15:13.240 --> 00:15:17.490
augmented reality APIs for
Android camera?" I know of

00:15:17.490 --> 00:15:20.150
some third party augmented
reality APIs.

00:15:20.150 --> 00:15:25.100
Most of the augmented reality
stacks have one, like Junaio's

00:15:25.100 --> 00:15:29.800
got one, and I think Layar's
got one, and Wikitude.

00:15:29.800 --> 00:15:32.680
But I don't know of any actually
from Android itself.

00:15:35.230 --> 00:15:37.400
NICK: That's definitely new
in the developer space.

00:15:37.400 --> 00:15:41.230
I wouldn't expect to see
SDs, I know that.

00:15:41.230 --> 00:15:41.990
SPARKY: [INAUDIBLE]

00:15:41.990 --> 00:15:43.000
at some point in the future.

00:15:43.000 --> 00:15:49.850
I mean, taking off my "knows
anything" hat and putting on

00:15:49.850 --> 00:15:52.740
my "wild speculation" hat, I'm
thinking that some sort AR

00:15:52.740 --> 00:15:55.680
will probably have to go with
Google Glass, otherwise what

00:15:55.680 --> 00:15:59.010
good would it be for?

00:15:59.010 --> 00:16:02.020
RICH: Maybe, but maybe they
would also use to use AR

00:16:02.020 --> 00:16:02.680
Toolkit or something.

00:16:02.680 --> 00:16:05.450
We could divert the entire
Android engineering's team

00:16:05.450 --> 00:16:07.640
resources to building an AR
library if we wanted.

00:16:07.640 --> 00:16:09.720
But there's some excellent ones
out there already that

00:16:09.720 --> 00:16:12.640
many apps and games are being
built on top of and

00:16:12.640 --> 00:16:14.320
professional software.

00:16:14.320 --> 00:16:18.950
Just have a search for it, hit
up AR Toolkit or something.

00:16:18.950 --> 00:16:20.750
It's a complex area to
be delving into.

00:16:24.570 --> 00:16:26.340
SPARKY: Of course, there's many
different kinds of AR,

00:16:26.340 --> 00:16:26.910
too, right?

00:16:26.910 --> 00:16:29.660
I mean, there's real
world stuff

00:16:29.660 --> 00:16:30.870
overlaid on top of video.

00:16:30.870 --> 00:16:34.940
But then there's also actually
looking at codes and specific

00:16:34.940 --> 00:16:37.290
recognized items.

00:16:37.290 --> 00:16:40.470
So there's the geo-stuff, and
then there's also the image

00:16:40.470 --> 00:16:41.720
processing stuff.

00:16:50.350 --> 00:16:54.100
CHRIS: Andrew Kelly's put a good
question in saying, "with

00:16:54.100 --> 00:16:55.500
fragments, what's the
correct way to

00:16:55.500 --> 00:16:57.160
move from one to another?

00:16:57.160 --> 00:17:02.380
As in, one to two to three
to four for a data entry?

00:17:02.380 --> 00:17:04.870
And then the fourth fragment, or
pressing back?" You want to

00:17:04.870 --> 00:17:07.570
go back to the start rather than
going back through the

00:17:07.570 --> 00:17:10.359
fragments, so there's a
wizard touch thing.

00:17:10.359 --> 00:17:12.700
The best way to do that, I'd
say, is each time you add a

00:17:12.700 --> 00:17:17.440
fragment, add a backstack ID.

00:17:17.440 --> 00:17:20.547
So usually you add an ID, and
so it can be any string you

00:17:20.547 --> 00:17:23.040
want, really.

00:17:23.040 --> 00:17:26.130
And then, when the user
does press back--

00:17:26.130 --> 00:17:27.359
it's probably better
to have a button,

00:17:27.359 --> 00:17:29.180
actually, saying finished.

00:17:29.180 --> 00:17:32.200
And then when they press
finish, you can call--

00:17:32.200 --> 00:17:33.960
what's the call?

00:17:33.960 --> 00:17:35.610
NICK: Yeah, fragment manager,
or something.

00:17:38.261 --> 00:17:38.710
CHRIS: I can't remember.

00:17:38.710 --> 00:17:41.080
There's a method call which
takes you back to that

00:17:41.080 --> 00:17:43.370
particular ID, so you remove
all the fragments from the

00:17:43.370 --> 00:17:45.930
backstack and you go back
to the original ID.

00:17:45.930 --> 00:17:48.940
You can also do it with the back
button by not adding add

00:17:48.940 --> 00:17:50.790
to backstack when you
add a fragment.

00:17:54.520 --> 00:17:56.230
SPARKY: I'm not entirely
sure if I agree

00:17:56.230 --> 00:17:58.420
with that user flow.

00:17:58.420 --> 00:18:01.960
I think, either you go with
the paradigm that says

00:18:01.960 --> 00:18:04.490
fragments don't do backstack.

00:18:04.490 --> 00:18:08.570
Say you're reading through your
emails, if you have a

00:18:08.570 --> 00:18:11.125
navigation pane and a detail
pane, usually you don't stick

00:18:11.125 --> 00:18:12.480
those on the backstack.

00:18:12.480 --> 00:18:15.880
Or they do, in which case, maybe
you should go backwards

00:18:15.880 --> 00:18:21.900
through the sequence of input
dialogues or whatever.

00:18:21.900 --> 00:18:25.820
I don't really agree with
changing the behavior just

00:18:25.820 --> 00:18:27.530
because the user's completed
all the input.

00:18:27.530 --> 00:18:31.850
I would usually interpret the
back button, in an input

00:18:31.850 --> 00:18:37.190
scenario like that, as saying
cancel, forget it all.

00:18:37.190 --> 00:18:40.060
Either meaning, go back and
correct the previous page, or,

00:18:40.060 --> 00:18:44.520
I suppose, just wipe
the whole mess.

00:18:44.520 --> 00:18:45.780
I don't know.

00:18:45.780 --> 00:18:49.010
I'm not really liking changing
it just because

00:18:49.010 --> 00:18:50.405
it's on the last page.

00:18:50.405 --> 00:18:52.460
RICH: Personally, if I was going
to do a wizard flow, I'd

00:18:52.460 --> 00:18:56.176
use Roman's wizard sample.

00:18:56.176 --> 00:18:58.580
Just use that, because he's
put a lot of effort into

00:18:58.580 --> 00:19:00.940
making a wizard flow that looks
nice and works well.

00:19:00.940 --> 00:19:03.190
And you can go through stage by
stage without being able to

00:19:03.190 --> 00:19:05.710
skip stages and all
that good stuff.

00:19:05.710 --> 00:19:09.120
So I'd probably just let Roman
do the work and go and grab

00:19:09.120 --> 00:19:11.210
his wizard flow sample.

00:19:11.210 --> 00:19:13.660
SPARKY: Plus one for not
reinventing the wheel.

00:19:13.660 --> 00:19:14.570
NICK: Yeah, that's at
code.google.com/

00:19:14.570 --> 00:19:15.820
p/romannurik-code.

00:19:22.990 --> 00:19:25.070
YOSSI: I just wanted to add
something about what Sparky

00:19:25.070 --> 00:19:32.750
said about the flow for the
fragments and don't use the

00:19:32.750 --> 00:19:34.240
backstack for everything.

00:19:34.240 --> 00:19:40.850
If we want to show the user a
tutorial and we want him to go

00:19:40.850 --> 00:19:45.170
back to the main screen of the
app, then that's the best use

00:19:45.170 --> 00:19:51.710
case for not using the backstack
or overriding the

00:19:51.710 --> 00:19:57.230
simple behavior for the
backstack for fragments.

00:19:57.230 --> 00:20:01.490
SPARKY: Yeah, that does seem to
be the obvious control to

00:20:01.490 --> 00:20:02.950
use for closing out
a tutorial.

00:20:05.710 --> 00:20:10.422
Either that, or maybe
the up chevron.

00:20:10.422 --> 00:20:13.460
NICK: I'd want a explicit skip
button in any tutorial.

00:20:19.800 --> 00:20:21.560
SPARKY: Yeah, that's
a fair point too.

00:20:21.560 --> 00:20:26.030
Although I'm actually pretty
OK with using back to just

00:20:26.030 --> 00:20:29.520
close out a tutorial.

00:20:29.520 --> 00:20:32.925
I don't feel the need for
a skip button there.

00:20:32.925 --> 00:20:36.105
NICK: I feel if it's the first
thing I see when I launch the

00:20:36.105 --> 00:20:38.530
app, it feels like back would
close the app to me.

00:20:38.530 --> 00:20:41.880
CHRIS: You don't know
something's behind it.

00:20:41.880 --> 00:20:47.340
YOSSI: No, but I think the best
use case is what Sparky

00:20:47.340 --> 00:20:53.570
said, just back from the first
screen of the tutorial puts

00:20:53.570 --> 00:20:56.700
you back into the main
screen of the app.

00:20:56.700 --> 00:20:59.810
CHRIS: But only if you've showed
the user the main bit

00:20:59.810 --> 00:21:02.150
of the app first.

00:21:02.150 --> 00:21:04.090
Otherwise they don't know what's
behind the tutorial.

00:21:07.060 --> 00:21:11.390
YOSSI: So the best use case to
show a tutorial then, I'll do

00:21:11.390 --> 00:21:15.366
something like, first
screen the user sees

00:21:15.366 --> 00:21:17.450
the tutorial screen.

00:21:17.450 --> 00:21:22.210
And instead of a skip, the home
navigation will get you

00:21:22.210 --> 00:21:28.660
back to the main screen of the
app from any screen you're in

00:21:28.660 --> 00:21:29.320
the tutorial.

00:21:29.320 --> 00:21:33.260
Say you have eight screens for
the tutorial, every time you

00:21:33.260 --> 00:21:38.080
press on the home navigation you
go back to the home screen

00:21:38.080 --> 00:21:40.920
for the app.

00:21:40.920 --> 00:21:43.610
NICK: Yeah, I'm fine with the
back button closing the

00:21:43.610 --> 00:21:46.090
tutorial and taking you
back to the launch

00:21:46.090 --> 00:21:46.920
screen of the app.

00:21:46.920 --> 00:21:48.136
I think it should do
that, in fact.

00:21:48.136 --> 00:21:52.400
But I also would like a skip
button just because there's no

00:21:52.400 --> 00:21:56.680
obvious avoidance
for going back.

00:21:56.680 --> 00:21:58.220
SPARKY: I could see how maybe
this is a case where you want

00:21:58.220 --> 00:22:01.560
to do different behavior for
your tablet and your phone UI.

00:22:01.560 --> 00:22:04.366
Your phone UI fills the whole
screen, in which case, maybe

00:22:04.366 --> 00:22:06.010
having a skip button is the
obvious thing to do.

00:22:06.010 --> 00:22:09.730
But if you have a tablet UI,
maybe your tutorial is just a

00:22:09.730 --> 00:22:14.620
little inset dialogue, in which
case it's obvious that

00:22:14.620 --> 00:22:16.440
there's an app behind there,
and then that could just

00:22:16.440 --> 00:22:19.440
dismiss it.

00:22:19.440 --> 00:22:19.900
NICK: That works.

00:22:19.900 --> 00:22:20.730
CHRIS: Sounds good.

00:22:20.730 --> 00:22:21.980
YOSSI: That's nice.

00:22:25.060 --> 00:22:27.175
NICK: Cool, all right, should we
go to the next question in

00:22:27.175 --> 00:22:29.840
the moderator?

00:22:29.840 --> 00:22:30.190
Redier--

00:22:30.190 --> 00:22:32.290
I guess I'm probably not
saying that right--

00:22:32.290 --> 00:22:35.360
is asking if there's any
pointers for implementing a

00:22:35.360 --> 00:22:38.960
chips type UI on pre-ICS
devices, and are there any

00:22:38.960 --> 00:22:40.870
proper libraries available?

00:22:40.870 --> 00:22:45.170
So the chips UI, I guess, is
the UI we use in Gmail and

00:22:45.170 --> 00:22:47.710
Messaging and so forth, so
that, as you enter a

00:22:47.710 --> 00:22:50.640
recipient's name, and then you
pick one from the list, it

00:22:50.640 --> 00:22:53.115
turns it into a nice little
box with their name and a

00:22:53.115 --> 00:22:53.990
little avatar on them.

00:22:53.990 --> 00:22:56.440
It's quite a nice little UI to
echo that they've understood

00:22:56.440 --> 00:22:57.210
what you meant.

00:22:57.210 --> 00:23:00.940
And to that end, I would say
probably look into the SMS

00:23:00.940 --> 00:23:04.920
application, MMS.get, which is
open source so that's going to

00:23:04.920 --> 00:23:07.120
be probably your best best.

00:23:07.120 --> 00:23:11.400
He explicitly asked about
pre-ICS, so I'm wondering if

00:23:11.400 --> 00:23:12.830
there's anything in there
that's dependent on it.

00:23:12.830 --> 00:23:13.490
I'm not sure.

00:23:13.490 --> 00:23:14.540
I'd have to have a look
and see if there's

00:23:14.540 --> 00:23:16.390
dependencies on UI stuff.

00:23:16.390 --> 00:23:18.362
Anyone know of any other--

00:23:18.362 --> 00:23:20.800
CHRIS: Can't think
of anything.

00:23:20.800 --> 00:23:23.070
NICK: There's a nice answer
as well if someone's--

00:23:23.070 --> 00:23:23.920
oh no, it's himself.

00:23:23.920 --> 00:23:26.630
He's saying he's started
creating his own one.

00:23:26.630 --> 00:23:28.280
But I guess he's wondering
if there's any

00:23:28.280 --> 00:23:29.010
better sample codes.

00:23:29.010 --> 00:23:31.390
But I would take a look
at the MMS app.

00:23:35.490 --> 00:23:36.740
No one else got any
experience here?

00:23:39.897 --> 00:23:42.450
CHRIS: It looks like something
about Track Anywhere, because

00:23:42.450 --> 00:23:44.075
he's using autocomplete text
view, which is what you'll

00:23:44.075 --> 00:23:45.170
more than likely need.

00:23:45.170 --> 00:23:46.420
NICK: That's what I'd do.

00:23:58.080 --> 00:23:59.310
Any other questions live
from the room?

00:23:59.310 --> 00:24:02.880
We've got new joiners.

00:24:02.880 --> 00:24:05.330
Ah, there you are.

00:24:05.330 --> 00:24:06.130
Is that Redier?

00:24:06.130 --> 00:24:07.120
It's your question.

00:24:07.120 --> 00:24:07.840
Hi, welcome.

00:24:07.840 --> 00:24:09.550
Have you had a look
at the MMS app?

00:24:09.550 --> 00:24:10.800
REDIER: I haven't yet, no.

00:24:13.970 --> 00:24:15.960
But it works fairly well.

00:24:15.960 --> 00:24:18.214
It's a bit misty,
but it works.

00:24:18.214 --> 00:24:23.680
You use low CPU spec, low RAM
spec, the bulk on reference

00:24:23.680 --> 00:24:27.100
design devices, so it needs to
be as lightweight as possible.

00:24:27.100 --> 00:24:30.075
And this one works well.

00:24:30.075 --> 00:24:32.220
NICK: Yeah, from your
description, it sounds like

00:24:32.220 --> 00:24:33.720
you're absolutely on
the right track.

00:24:40.750 --> 00:24:42.520
RICH: I just saw one--

00:24:42.520 --> 00:24:43.770
sorry--

00:24:46.315 --> 00:24:49.560
I just saw a question in the
moderator that says that video

00:24:49.560 --> 00:24:55.360
calendar dot getInstance and
getYear on it, it's returning

00:24:55.360 --> 00:24:59.260
2012, if you're on Android 4.1.2
and 2013 if you're on

00:24:59.260 --> 00:25:03.980
Android 4.2, which is crazy.

00:25:03.980 --> 00:25:05.235
Obviously I have no idea why.

00:25:05.235 --> 00:25:07.592
But it should definitely be
raised as a bug, if it is

00:25:07.592 --> 00:25:09.470
true, with repro steps.

00:25:09.470 --> 00:25:13.266
And more details, are you
running one on an emulator and

00:25:13.266 --> 00:25:14.130
one on a device?

00:25:14.130 --> 00:25:16.360
And maybe the clock is set
wrong on one of them.

00:25:16.360 --> 00:25:16.720
I don't know.

00:25:16.720 --> 00:25:18.970
The clock on an emulator
maybe?

00:25:18.970 --> 00:25:22.120
But it seems very strange.

00:25:22.120 --> 00:25:24.390
I would have thought we'd have
heard about it if it was

00:25:24.390 --> 00:25:27.760
always the case that the
Calendar classes in Android

00:25:27.760 --> 00:25:32.040
where returning the
wrong year on 4.1.

00:25:32.040 --> 00:25:34.614
Anybody heard anything
about that before?

00:25:34.614 --> 00:25:36.006
CHRIS: That is odd.

00:25:36.006 --> 00:25:37.250
RICH: Then again, if you told
me that we were missing

00:25:37.250 --> 00:25:39.530
December last year, I would have
laughed and said, hey.

00:25:43.380 --> 00:25:44.480
Definitely check the
bug tracker.

00:25:44.480 --> 00:25:46.430
This is from Etienne.

00:25:46.430 --> 00:25:51.890
And I might actually go and try
it myself, because that's

00:25:51.890 --> 00:25:53.360
just crazy if it's true.

00:25:56.270 --> 00:25:57.815
NICK: He says, both
are on a device.

00:26:01.291 --> 00:26:02.200
CHRIS: Does it?

00:26:02.200 --> 00:26:04.050
RICH: Oh yeah, he's commented
on his own thing saying both

00:26:04.050 --> 00:26:05.610
are on a device.

00:26:05.610 --> 00:26:08.735
And the clock's set right on the
device, on both of them?

00:26:12.710 --> 00:26:13.960
NICK: [INAUDIBLE].

00:26:17.480 --> 00:26:20.350
YOSSI: Maybe a different
time zone?

00:26:20.350 --> 00:26:24.548
[LAUGHTER]

00:26:24.548 --> 00:26:26.099
RICH: Very close to the
new year when he

00:26:26.099 --> 00:26:27.349
was doing it, maybe?

00:26:29.917 --> 00:26:31.470
SPARKY: Etienne, this
sounds familiar.

00:26:31.470 --> 00:26:33.060
I think this is someone we've
heard from before.

00:26:39.753 --> 00:26:41.860
RICH: "Day getYear returns a
value that the results are

00:26:41.860 --> 00:26:45.225
subtracting 1900 from the year
that contains or begins with

00:26:45.225 --> 00:26:47.780
the instance in time represented
by this date

00:26:47.780 --> 00:26:52.580
object as interpreted in
the local time zone.

00:26:52.580 --> 00:26:59.380
This is deprecated for
a good reason."

00:26:59.380 --> 00:27:01.618
YOSSI: Y2K again?

00:27:01.618 --> 00:27:03.400
RICH: Thanks for the
rapid response.

00:27:03.400 --> 00:27:05.920
So maybe, actually, this is
a known issue and you

00:27:05.920 --> 00:27:07.170
shouldn't be using--

00:27:09.620 --> 00:27:12.630
I mean, it's documented
in Java Docs, and

00:27:12.630 --> 00:27:15.040
JDK 6 is Java Doc.

00:27:15.040 --> 00:27:16.595
But I can't see the
same documentation

00:27:16.595 --> 00:27:18.610
in the Android docs.

00:27:18.610 --> 00:27:21.320
YOSSI: Or in JD.

00:27:21.320 --> 00:27:23.808
RICH: I wonder.

00:27:23.808 --> 00:27:25.058
Weird.

00:27:28.290 --> 00:27:29.540
YOSSI: Johan needs coffee.

00:27:32.310 --> 00:27:35.380
CHRIS: Some of the values return
at zero index and some

00:27:35.380 --> 00:27:38.110
are actual values.

00:27:38.110 --> 00:27:40.610
So month is zero indexed,
from what I remember.

00:27:40.610 --> 00:27:44.650
So it's day, the day of
month, and year isn't.

00:27:58.800 --> 00:28:01.050
RICH: Anything else from
inside the Hangout?

00:28:01.050 --> 00:28:05.070
YOSSI: Yeah, can I send
you a YouTube video

00:28:05.070 --> 00:28:06.170
to see for a second?

00:28:06.170 --> 00:28:07.770
RICH: Yeah, put it in
the group chat.

00:28:07.770 --> 00:28:09.290
Go for it.

00:28:09.290 --> 00:28:13.310
Is this kittens or something
or "Gangnam Style"?

00:28:13.310 --> 00:28:15.665
YOSSI: No, I think
it's a good--

00:28:23.250 --> 00:28:26.145
RICH: You've got a slide
bar orientation

00:28:26.145 --> 00:28:27.490
sliding in and out.

00:28:27.490 --> 00:28:29.800
YOSSI: Yeah, the sliding
menus to show

00:28:29.800 --> 00:28:31.530
that you have swiping--

00:28:31.530 --> 00:28:32.750
RICH: Like a tutorial?

00:28:32.750 --> 00:28:36.370
YOSSI: Yeah, what do
you think about it?

00:28:36.370 --> 00:28:43.400
Is this good way to persuade
users to use the sliding menu

00:28:43.400 --> 00:28:47.084
or use the slide or
swipe feature?

00:28:47.084 --> 00:28:48.905
RICH: Yeah, I've seen a few of
them now, actually, which, on

00:28:48.905 --> 00:28:51.810
first run of the application,
they force that slide just to

00:28:51.810 --> 00:28:53.060
show the user that it's there.

00:28:55.600 --> 00:28:58.060
Maybe our UI designer
can comment on that.

00:28:58.060 --> 00:28:59.440
Can you see the video, Nick?

00:28:59.440 --> 00:29:01.130
NICK: Yeah, we're just
looking at it now.

00:29:01.130 --> 00:29:02.380
So you have a little hint?

00:29:04.680 --> 00:29:06.434
Come on, click me.

00:29:06.434 --> 00:29:08.630
RICH: Nice that the ActionBar
is there.

00:29:08.630 --> 00:29:12.420
And it's all very
smooth, anyway.

00:29:12.420 --> 00:29:15.118
YOSSI: First of all,
I love the app--

00:29:15.118 --> 00:29:20.580
[NOISE]

00:29:20.580 --> 00:29:21.830
CHRIS: Everyone mute Etienne.

00:29:23.640 --> 00:29:26.115
SPARKY: Oh, we have Etienne
in the Hangout.

00:29:26.115 --> 00:29:28.820
Did we just talk about
your question?

00:29:28.820 --> 00:29:30.960
ETIENNE: Actually,
you just did.

00:29:30.960 --> 00:29:33.470
I don't know if we got
a response, though.

00:29:36.470 --> 00:29:38.120
NICK: Is it the Calendar
bug issue?

00:29:38.120 --> 00:29:40.090
ETIENNE: Yeah, it's
the Calendar bug.

00:29:40.090 --> 00:29:40.900
NICK: Yeah, we have no idea.

00:29:40.900 --> 00:29:43.270
We'll have to go and try
and repro it, I guess.

00:29:43.270 --> 00:29:44.450
ETIENNE: Sure.

00:29:44.450 --> 00:29:48.670
How do I go about that,
if I'm filing bug?

00:29:48.670 --> 00:29:50.740
NICK: Actually, you go
to b.android.com.

00:29:50.740 --> 00:29:52.820
And all the steps
are right there.

00:29:52.820 --> 00:29:53.760
ETIENNE: Oh, OK.

00:29:53.760 --> 00:29:55.522
Yeah, I've never
done it before.

00:29:58.070 --> 00:30:02.332
NICK: Yeah, the key is just to
have a simple test case that

00:30:02.332 --> 00:30:04.842
we can use to replicate it.

00:30:04.842 --> 00:30:05.910
ETIENNE: OK, I was looking--

00:30:05.910 --> 00:30:10.720
because you said check the set
time on the Nexus S, and I

00:30:10.720 --> 00:30:15.330
don't know where to see
potentially the date.

00:30:15.330 --> 00:30:17.620
And the date's set to
the current date,

00:30:17.620 --> 00:30:19.750
January 9 of this year.

00:30:22.660 --> 00:30:24.540
RICH: But you're not sure
what the year's set to?

00:30:24.540 --> 00:30:27.620
ETIENNE: Well, I would believe
it's set to the current year.

00:30:27.620 --> 00:30:32.190
But there's nothing to
suggest that it's--

00:30:32.190 --> 00:30:35.170
RICH: If you go into Menu,
Settings, then Date and Time.

00:30:35.170 --> 00:30:40.482
It's worth double-checking
before raising the bug.

00:30:40.482 --> 00:30:44.322
ETIENNE: Yeah, date and time.

00:30:44.322 --> 00:30:46.600
RICH: You don't know how
much I hope this is

00:30:46.600 --> 00:30:51.390
going to say 2012.

00:30:51.390 --> 00:30:53.390
YOSSI: 1992.

00:30:53.390 --> 00:30:54.120
ETIENNE: That's strange.

00:30:54.120 --> 00:30:58.930
I guess my date was
set to 2012.

00:30:58.930 --> 00:31:00.180
Thank you.

00:31:03.020 --> 00:31:09.010
It could have something to do
with I took the SIM card out.

00:31:09.010 --> 00:31:12.660
And placed it into my Nexus
4, because I just got it.

00:31:12.660 --> 00:31:15.655
So that could be the issue.

00:31:15.655 --> 00:31:19.240
The time isn't synced
up because of the

00:31:19.240 --> 00:31:21.660
SIM card being removed.

00:31:21.660 --> 00:31:22.430
NICK: [INAUDIBLE]

00:31:22.430 --> 00:31:28.020
has set the right date and
month, but not the right year.

00:31:28.020 --> 00:31:33.410
YOSSI: If you check the
automatic network update time

00:31:33.410 --> 00:31:38.900
and you log in to Wi-Fi or
something, then it goes to the

00:31:38.900 --> 00:31:43.540
time servers and updates
according to the time zone.

00:31:43.540 --> 00:31:46.360
ETIENNE: Yeah, I think I'm
testing on a device that's

00:31:46.360 --> 00:31:47.640
without a SIM card.

00:31:47.640 --> 00:31:50.610
So it's not really
a real scenario.

00:31:53.710 --> 00:31:55.110
So I guess I shouldn't
account for that.

00:31:58.030 --> 00:31:59.440
NICK: Listen, we should go
back to Yossi's question,

00:31:59.440 --> 00:32:01.120
because we interrupted.

00:32:01.120 --> 00:32:02.120
RICH: Yes, absolutely.

00:32:02.120 --> 00:32:04.860
NICK: So your question was
basically, is it cool to use

00:32:04.860 --> 00:32:07.890
some kind of animation to hint
at how you interact?

00:32:07.890 --> 00:32:08.610
YOSSI: Yes.

00:32:08.610 --> 00:32:12.820
NICK: So where do you envision
showing that?

00:32:12.820 --> 00:32:14.990
Just on first run?

00:32:14.990 --> 00:32:20.290
YOSSI: Basically, on
two occasions.

00:32:20.290 --> 00:32:24.875
On first run because we're
going to do a UI change.

00:32:29.240 --> 00:32:31.970
The example I posted was
specific for swiping.

00:32:31.970 --> 00:32:37.720
But I'm talking generally on
all the swiping, double

00:32:37.720 --> 00:32:42.110
tapping, you name it, whatever
gesture you want us

00:32:42.110 --> 00:32:44.150
to do on your app.

00:32:44.150 --> 00:32:51.070
I'm talking about making a
simple two seconds demo of the

00:32:51.070 --> 00:32:59.040
gesture and showing that to the
user as here you can click

00:32:59.040 --> 00:33:03.270
on me, here you can scratch me,
here you can kick me, I

00:33:03.270 --> 00:33:04.520
don't know, whatever.

00:33:09.030 --> 00:33:11.100
NICK: Yeah, generally I'm OK
with using some kind of

00:33:11.100 --> 00:33:15.540
animation as an affordance,
essentially, to say, this is

00:33:15.540 --> 00:33:16.860
how you interact with me.

00:33:16.860 --> 00:33:21.010
I think what you need to be wary
of is getting annoying.

00:33:21.010 --> 00:33:24.850
So showing it every time
might become annoying.

00:33:24.850 --> 00:33:26.760
I saw some iterations of the
YouTube application, for

00:33:26.760 --> 00:33:29.890
example, when they moved to the
sliding draw, similar to

00:33:29.890 --> 00:33:30.590
this application.

00:33:30.590 --> 00:33:32.762
It used to open with that and
then the menu eye would fold

00:33:32.762 --> 00:33:33.990
in, just hint at it.

00:33:33.990 --> 00:33:35.870
And we played around with
some iterations of that.

00:33:35.870 --> 00:33:37.650
And I think it was decided that
it was just unnecessary,

00:33:37.650 --> 00:33:41.280
that the sliding in menu
was becoming a

00:33:41.280 --> 00:33:42.470
well-known pattern now.

00:33:42.470 --> 00:33:47.135
And that it was an unnecessary
road bump to go over in order

00:33:47.135 --> 00:33:49.580
to get to what you really want
to, which is the content.

00:33:49.580 --> 00:33:52.420
I think as these introductions
become more and more popular--

00:33:52.420 --> 00:33:55.080
some of the top applications out
there are using it, like

00:33:55.080 --> 00:33:58.710
YouTube, G+, Facebook, things
like this are using these

00:33:58.710 --> 00:34:01.443
slidey menus, some with with
swipe, some without--

00:34:01.443 --> 00:34:03.720
that people are getting
used to it.

00:34:03.720 --> 00:34:06.275
And it becomes unnecessary.

00:34:06.275 --> 00:34:10.800
But yeah, generally if you have
gestures that are hard,

00:34:10.800 --> 00:34:16.199
that there aren't any natural
way to hint that it's

00:34:16.199 --> 00:34:19.035
available, that you do need to
provide either some tutorial

00:34:19.035 --> 00:34:22.814
or some way to bootstrap the
user's mental model already.

00:34:22.814 --> 00:34:26.420
So yeah, I'm cool with that,
as long as you try to only

00:34:26.420 --> 00:34:29.429
show it at first, a couple of
times, or something like that.

00:34:29.429 --> 00:34:34.679
YOSSI: Some apps basically use
overlay on the layout with

00:34:34.679 --> 00:34:37.960
some arrows, and pointers,
and text.

00:34:37.960 --> 00:34:44.350
And I think I prefer this way,
the user sees the real

00:34:44.350 --> 00:34:49.400
interaction with the UI, instead
of an image showing

00:34:49.400 --> 00:34:51.132
with text and stuff.

00:34:51.132 --> 00:34:54.210
CHRIS: I think it totally
depends on the interaction.

00:34:54.210 --> 00:34:57.590
So if there's something where
you have to swipe, showing the

00:34:57.590 --> 00:34:59.230
user is probably better.

00:34:59.230 --> 00:35:01.650
There's a good library called
showcase view, which is based

00:35:01.650 --> 00:35:03.110
off the launches.

00:35:06.450 --> 00:35:08.710
So that's where you could
put buttons and

00:35:08.710 --> 00:35:09.960
something you have to click.

00:35:12.280 --> 00:35:16.790
I personally like showing the
user small interactions.

00:35:16.790 --> 00:35:20.430
So in some of the personal
source libraries I write, I

00:35:20.430 --> 00:35:24.990
always add an easy way for the
developer to a show demo.

00:35:24.990 --> 00:35:27.530
So yeah, I personally like it.

00:35:27.530 --> 00:35:28.720
LUCAS: This is actually--

00:35:28.720 --> 00:35:31.220
can you hear me?

00:35:31.220 --> 00:35:35.680
This is actually one of the
reasons I'm not entirely

00:35:35.680 --> 00:35:39.150
convinced about this pattern.

00:35:39.150 --> 00:35:43.370
Because it leads to trial
and error, in general.

00:35:43.370 --> 00:35:48.250
Suppose that there are lots of
top apps using it, but then

00:35:48.250 --> 00:35:51.970
you always wonder if
it's there or not.

00:35:51.970 --> 00:35:54.900
So we will always have to do
something like this, show the

00:35:54.900 --> 00:35:57.500
user that it's there,
and then you do it.

00:35:57.500 --> 00:36:01.560
So this is one of the reasons I
didn't like the menu button

00:36:01.560 --> 00:36:04.095
approach from previous
Android releases.

00:36:04.095 --> 00:36:07.410
Because some apps just-- the
hardware button, I mean--

00:36:07.410 --> 00:36:09.280
some apps just didn't have it.

00:36:09.280 --> 00:36:12.350
So you had to try to see if
there's something there.

00:36:12.350 --> 00:36:15.720
And for any pattern that you
have to try to see if it's

00:36:15.720 --> 00:36:19.490
there, it's a sign that there's
something that needs

00:36:19.490 --> 00:36:20.470
to be improved.

00:36:20.470 --> 00:36:25.000
Either a standard hint that it's
there, like the app menu,

00:36:25.000 --> 00:36:26.560
it's the three dot thing.

00:36:26.560 --> 00:36:27.250
It's there.

00:36:27.250 --> 00:36:28.210
You know you click.

00:36:28.210 --> 00:36:29.040
You see something.

00:36:29.040 --> 00:36:31.740
If it's not there, there's
no option.

00:36:31.740 --> 00:36:35.240
But with sliding menus, you have
to try, or you have to

00:36:35.240 --> 00:36:36.910
give a hint.

00:36:36.910 --> 00:36:38.635
It's just a sign that there's
something that

00:36:38.635 --> 00:36:41.120
is not ready yet.

00:36:41.120 --> 00:36:45.420
YOSSI: No, on your ActionBar, on
the top you can say that if

00:36:45.420 --> 00:36:50.620
you have an app error, or maybe
a change of the home

00:36:50.620 --> 00:36:54.900
logo, then you have
a sliding menu.

00:36:54.900 --> 00:37:00.190
LUCAS: But I mean, maybe
if we changed the icon.

00:37:00.190 --> 00:37:04.980
It's just that I think it's
abusing the standard behavior

00:37:04.980 --> 00:37:09.590
because right now it's going
up in the hierarchy.

00:37:09.590 --> 00:37:16.430
And I mean, you might argue that
a sliding-in menu is the

00:37:16.430 --> 00:37:20.440
upper, or the top level node
in your hierarchy.

00:37:20.440 --> 00:37:22.740
But it's not really, is it?

00:37:29.960 --> 00:37:32.358
RICH: When people do a slide-in
menu from the left

00:37:32.358 --> 00:37:34.250
and to the right--

00:37:34.250 --> 00:37:35.980
NICK: Somewhat tricky.

00:37:35.980 --> 00:37:38.220
SPARKY: Doesn't the design site
say that the slide-in

00:37:38.220 --> 00:37:40.906
menu can only be at
the top level?

00:37:40.906 --> 00:37:47.410
YOSSI: Yeah, it's like an
activity group of some sort,

00:37:47.410 --> 00:37:57.060
because you can refer to it as
the root holder for all the

00:37:57.060 --> 00:38:02.260
other actions you can do
on your application.

00:38:02.260 --> 00:38:07.040
LUCAS: Yeah, and the other thing
I dislike about it is,

00:38:07.040 --> 00:38:12.030
when you have such a big space
for options, I think people

00:38:12.030 --> 00:38:16.760
will tend to overload
in terms of options.

00:38:16.760 --> 00:38:19.950
So you just have too many nodes
into a hierarchy just

00:38:19.950 --> 00:38:22.390
because you have space for it.

00:38:22.390 --> 00:38:27.700
And if you see things like
Facebook, it has a huge thing.

00:38:27.700 --> 00:38:32.340
Google+, you see it in a smarter
way because it uses

00:38:32.340 --> 00:38:36.150
the space for showing more
notifications, so that's fine.

00:38:36.150 --> 00:38:39.970
But still it's tempting, because
you have this huge,

00:38:39.970 --> 00:38:43.230
infinite vertical space
for adding options.

00:38:43.230 --> 00:38:46.900
And in the case of mobile apps,
I don't think that's a

00:38:46.900 --> 00:38:51.240
good thing to do.

00:38:51.240 --> 00:38:54.840
Constraints are a good
thing on mobile,

00:38:54.840 --> 00:38:56.090
in general, I think.

00:38:58.350 --> 00:38:59.990
NICK: Yeah, we dropped out, so
we might have missed some of

00:38:59.990 --> 00:39:00.330
the conversation.

00:39:00.330 --> 00:39:01.830
But we're back now.

00:39:01.830 --> 00:39:03.290
I think two things I want
to touch with that.

00:39:03.290 --> 00:39:08.470
Firstly, I think the gesture
is like a power user thing.

00:39:08.470 --> 00:39:09.280
That's how I think of it.

00:39:09.280 --> 00:39:11.780
I think you need to have some
onscreen affordance, like you

00:39:11.780 --> 00:39:13.820
were saying, that you can't
have this, you have

00:39:13.820 --> 00:39:14.940
to try it and see.

00:39:14.940 --> 00:39:16.795
I think you need to have some
onscreen affordance.

00:39:16.795 --> 00:39:18.850
So our preference would
be to use the up

00:39:18.850 --> 00:39:20.220
carrot to disclose it.

00:39:20.220 --> 00:39:22.490
That's our guidelines.

00:39:22.490 --> 00:39:24.860
Some people use the [INAUDIBLE]
menu, which is

00:39:24.860 --> 00:39:27.160
gaining some traction as well.

00:39:27.160 --> 00:39:30.330
I very much see the bezel swipe,
or the swiping, as a

00:39:30.330 --> 00:39:33.510
secondary way of launching.

00:39:33.510 --> 00:39:36.730
So in that way, I'm not so
bothered if people don't know

00:39:36.730 --> 00:39:41.530
about it because it's more about
once you hit menu, the

00:39:41.530 --> 00:39:43.720
primary way of opening it, the
button, and you see it slide

00:39:43.720 --> 00:39:45.140
out, that is your hint.

00:39:45.140 --> 00:39:46.550
That is your animation.

00:39:46.550 --> 00:39:49.830
That's the cue that this
thing moves that way.

00:39:49.830 --> 00:39:52.640
And if you swipe it and discover
it, that you can do

00:39:52.640 --> 00:39:54.510
it with your finger rather than
hitting the button, then

00:39:54.510 --> 00:39:56.930
that's power user
bonus, in a way.

00:39:56.930 --> 00:39:59.370
As long as there is one obvious
on screen button,

00:39:59.370 --> 00:40:02.100
which is the default way to open
it, I think that's the

00:40:02.100 --> 00:40:03.891
most important thing.

00:40:03.891 --> 00:40:06.980
And for the second thing I was
going to say is about the

00:40:06.980 --> 00:40:07.460
dumping ground.

00:40:07.460 --> 00:40:11.910
I very prefer if the slide-in
menu just is used for

00:40:11.910 --> 00:40:12.500
navigation.

00:40:12.500 --> 00:40:17.800
I see it as an alternative to
the drop down navigation you

00:40:17.800 --> 00:40:21.030
might see on Google Maps, or if
there's more tabs that you

00:40:21.030 --> 00:40:21.890
might want to have on screen.

00:40:21.890 --> 00:40:24.100
I see it as a direct replacement
for that.

00:40:24.100 --> 00:40:28.240
I'd rather not see it combined
with actions.

00:40:28.240 --> 00:40:30.060
Some people start putting
extra things in there.

00:40:30.060 --> 00:40:33.675
And I think, in a way, G+'s
notifications almost fall into

00:40:33.675 --> 00:40:35.150
that bucket for me.

00:40:35.150 --> 00:40:39.010
I'd rather see it's just about a
navigation thing rather than

00:40:39.010 --> 00:40:40.870
oh, I've got some extra
space, I'll dump some

00:40:40.870 --> 00:40:42.220
extra stuff in there.

00:40:42.220 --> 00:40:44.520
CHRIS: Yeah, I agree
with that.

00:40:44.520 --> 00:40:47.810
I'd prefer it if the Google+
version showed just your

00:40:47.810 --> 00:40:50.090
unread notifications, rather
than all of them.

00:40:50.090 --> 00:40:51.310
And then if you click on the
unread notification, it'll

00:40:51.310 --> 00:40:54.540
take you to a list.

00:40:54.540 --> 00:40:56.980
That would be the way I'd do
it if I was the developer.

00:41:01.690 --> 00:41:04.220
SPARKY: Teasing Google+
aside, empty space is

00:41:04.220 --> 00:41:05.470
important for layout.

00:41:09.710 --> 00:41:14.090
CHRIS: Going back to what you
said about dumping ground,

00:41:14.090 --> 00:41:17.060
sure, that's up to the app
developer to make their app as

00:41:17.060 --> 00:41:19.960
cognitively easy to
use as possible.

00:41:19.960 --> 00:41:23.450
So you should design your
app so that it has--

00:41:23.450 --> 00:41:24.280
NICK: A structure.

00:41:24.280 --> 00:41:25.590
CHRIS: Yeah, well, a
structure, yeah.

00:41:25.590 --> 00:41:28.940
Three or four, or less, main
sections to your app.

00:41:28.940 --> 00:41:31.365
And the user can then delve
deeper if they want to.

00:41:31.365 --> 00:41:34.350
So that's up to the app
developer to do that.

00:41:34.350 --> 00:41:36.180
NICK: I think the problem is
when you get to apps like

00:41:36.180 --> 00:41:40.220
Facebook and Google+, they're
such huge apps.

00:41:40.220 --> 00:41:42.610
They're basically like
an OS, in a way.

00:41:42.610 --> 00:41:43.930
They offer so many functions.

00:41:43.930 --> 00:41:45.700
There are messaging.

00:41:45.700 --> 00:41:46.525
There's newsfeeds.

00:41:46.525 --> 00:41:47.250
There's photos.

00:41:47.250 --> 00:41:48.120
There's communities.

00:41:48.120 --> 00:41:50.560
There's so much going on.

00:41:50.560 --> 00:41:53.680
LUCAS: There's a reason why
Facebook is splitting their

00:41:53.680 --> 00:41:56.730
app into different functions,
the camera,

00:41:56.730 --> 00:41:58.140
Messenger, and all that.

00:41:58.140 --> 00:42:00.700
And I think that's probably
the right approach.

00:42:00.700 --> 00:42:05.330
I wouldn't do this huge
thing in one place.

00:42:05.330 --> 00:42:07.640
CHRIS: What I've got from
Facebook is that the reason

00:42:07.640 --> 00:42:09.550
they've got separate apps
is so they can test

00:42:09.550 --> 00:42:10.480
stuff out on users.

00:42:10.480 --> 00:42:12.990
So Messenger, all the stuff
that's in Messenger has been

00:42:12.990 --> 00:42:15.370
backported to the
Facebook app.

00:42:15.370 --> 00:42:18.460
So it's the same code base now
in the actual Facebook app for

00:42:18.460 --> 00:42:21.310
messages as it is
for Messenger.

00:42:21.310 --> 00:42:23.550
Same with the camera stuff.

00:42:23.550 --> 00:42:24.910
I do agree with you.

00:42:24.910 --> 00:42:27.190
I think with Facebook
that they have

00:42:27.190 --> 00:42:29.240
overlaid the sliding menu.

00:42:29.240 --> 00:42:31.480
They have got all these
separate sections.

00:42:31.480 --> 00:42:32.200
NICK: Or layers, right?

00:42:32.200 --> 00:42:34.760
You can go back within the
sliding menu, right?

00:42:34.760 --> 00:42:37.450
CHRIS: Yeah, but they've also
got groups, and then you've

00:42:37.450 --> 00:42:38.430
got a sub-list of your groups.

00:42:38.430 --> 00:42:41.690
Whereas, for me, it should be
just one group item where you

00:42:41.690 --> 00:42:43.300
can click and delve in.

00:42:48.080 --> 00:42:51.520
RICH: OK, maybe we should take
one from the G+ stream now,

00:42:51.520 --> 00:42:54.470
instead of from the Hangout
or the Moderator.

00:42:54.470 --> 00:42:58.720
Alessandro Capra is asking,
"I've made an application,

00:42:58.720 --> 00:43:00.710
which is a music quiz.

00:43:00.710 --> 00:43:03.340
And it requires registration
from the user with username

00:43:03.340 --> 00:43:05.870
and password and other details,
should I provide a

00:43:05.870 --> 00:43:07.500
privacy policy?"

00:43:07.500 --> 00:43:09.040
And the answer is, yes.

00:43:09.040 --> 00:43:09.780
Yes, you should.

00:43:09.780 --> 00:43:14.770
Our developer distribution
agreement in section 4.3 says

00:43:14.770 --> 00:43:18.485
that if users are providing
you or your product with

00:43:18.485 --> 00:43:20.740
access to username, details,
products, email addresses,

00:43:20.740 --> 00:43:24.415
personal information, then you
must make the users aware that

00:43:24.415 --> 00:43:26.580
the information will be
available to your products.

00:43:26.580 --> 00:43:30.850
And you must provide a legally
adequate privacy notice and

00:43:30.850 --> 00:43:32.720
protection for those users.

00:43:32.720 --> 00:43:36.620
So if you don't put a privacy
policy in and you are

00:43:36.620 --> 00:43:40.430
requesting personal details,
then it may be grounds to get

00:43:40.430 --> 00:43:42.650
your application suspended
from the Play Store.

00:43:42.650 --> 00:43:45.590
You'll be violating the
DDA if you don't.

00:43:45.590 --> 00:43:48.340
So definitely, please do put a
privacy policy in if you're

00:43:48.340 --> 00:43:49.970
requesting personal
information.

00:43:49.970 --> 00:43:54.015
Also, there's a slot in the
developer console at the

00:43:54.015 --> 00:43:56.520
bottom of your store listing
where you can link to your

00:43:56.520 --> 00:43:57.580
privacy policy online.

00:43:57.580 --> 00:44:00.010
So users can see it before
they've gone and downloaded

00:44:00.010 --> 00:44:01.970
the application and installed
it and given you

00:44:01.970 --> 00:44:03.345
some of their details.

00:44:03.345 --> 00:44:05.275
Because you may be getting some
details off the handset

00:44:05.275 --> 00:44:09.630
automatically, so it's quite
good if you can put the link

00:44:09.630 --> 00:44:10.500
in to the privacy policy.

00:44:10.500 --> 00:44:14.200
I know that the latest version
2 of the publisher site

00:44:14.200 --> 00:44:16.110
doesn't let you publish your app
until you've either put a

00:44:16.110 --> 00:44:18.240
privacy policy in or explicitly
told the system

00:44:18.240 --> 00:44:20.310
that you're not going
to have one.

00:44:20.310 --> 00:44:24.590
So it became mandatory to do the
flag one way or the other

00:44:24.590 --> 00:44:27.660
in the latest version.

00:44:27.660 --> 00:44:29.800
Hopefully that answers your
question, Alessandro.

00:44:32.900 --> 00:44:34.370
CHRIS: Looks like Guiseppe's
got a question.

00:44:34.370 --> 00:44:35.560
RICH: Has Guiseppe got
a question, or is

00:44:35.560 --> 00:44:36.756
he on a phone call?

00:44:36.756 --> 00:44:38.065
CHRIS: No, he's got
a question.

00:44:41.146 --> 00:44:42.030
RICH: Guiseppe?

00:44:42.030 --> 00:44:43.280
GUISEPPE: Yes.

00:44:45.100 --> 00:44:48.950
Well, I have a question about
In-app Billing version number

00:44:48.950 --> 00:44:55.140
three, and especially about
the local caching.

00:44:55.140 --> 00:44:59.790
I would like to understand how
this local caching work, if

00:44:59.790 --> 00:45:04.080
the local caching mean that
the information about the

00:45:04.080 --> 00:45:09.840
purchaser are riding inside some
database or inside some

00:45:09.840 --> 00:45:11.650
other protection mode.

00:45:11.650 --> 00:45:14.560
Because in the documentation
I didn't find

00:45:14.560 --> 00:45:16.990
nothing about that.

00:45:16.990 --> 00:45:21.940
The question is because I want
to understand what happens

00:45:21.940 --> 00:45:29.570
exactly when, for example, a
user buys some item using the

00:45:29.570 --> 00:45:31.500
In-app system.

00:45:31.500 --> 00:45:38.120
And after we make the refund to
the users for any reason,

00:45:38.120 --> 00:45:42.770
I'd like to know if the local
caching would take into

00:45:42.770 --> 00:45:47.980
account that the purchase has
been refunded and then will be

00:45:47.980 --> 00:45:50.760
not useful anymore for
the application?

00:45:50.760 --> 00:45:54.072
NICK: How do you mean refunded
in an In-app purchase?

00:45:54.072 --> 00:45:55.600
Do you mean through--

00:45:55.600 --> 00:45:59.250
GUISEPPE: I mean, for example,
that the user writes to us and

00:45:59.250 --> 00:46:01.990
ask for the refund,
not that he can

00:46:01.990 --> 00:46:03.300
make the refund himself.

00:46:03.300 --> 00:46:06.602
Because this is not possible,
as everybody knows.

00:46:06.602 --> 00:46:08.695
NICK: Exactly correct.

00:46:08.695 --> 00:46:11.440
I don't think the app Billing
API has the concept of

00:46:11.440 --> 00:46:12.540
refunding, so I doubt--

00:46:12.540 --> 00:46:13.900
RICH: I don't think
it does either.

00:46:13.900 --> 00:46:15.450
No, I agree.

00:46:15.450 --> 00:46:17.990
So if you're trying to refund
an In-app Billing item, then

00:46:17.990 --> 00:46:18.730
they still own it.

00:46:18.730 --> 00:46:19.980
You've just given them
their money back.

00:46:22.520 --> 00:46:29.830
GUISEPPE: So when I will use the
method to get purchases,

00:46:29.830 --> 00:46:31.450
the purchase will
be not refreshed

00:46:31.450 --> 00:46:32.700
in the local history?

00:46:35.450 --> 00:46:38.716
RICH: No, I think the user will
still own that item that

00:46:38.716 --> 00:46:40.337
they've purchased through
In-app Billing.

00:46:40.337 --> 00:46:44.386
But I will have look,
just in case.

00:46:44.386 --> 00:46:46.880
CHRIS: Yeah, I don't think it
matters if it's cached.

00:46:46.880 --> 00:46:49.300
GUISEPPE: In the documentation,
I didn't find

00:46:49.300 --> 00:46:52.120
any useful about this.

00:46:52.120 --> 00:46:53.920
NICK: Yeah, I don't think
caching changes anything here.

00:46:53.920 --> 00:46:56.780
I think, even without the
caching, if you refresh it

00:46:56.780 --> 00:46:59.450
from the server it will still
say, yes, the user has

00:46:59.450 --> 00:47:01.600
purchased item.

00:47:01.600 --> 00:47:05.261
Like I say, I don't think the
In-app purchase API has any

00:47:05.261 --> 00:47:06.400
concept of refund.

00:47:06.400 --> 00:47:08.170
RICH: Slightly contrary
to that, the

00:47:08.170 --> 00:47:11.330
documentation does say that.

00:47:11.330 --> 00:47:13.670
In-app Billing doesn't allow
users to request refunds.

00:47:13.670 --> 00:47:18.770
But if you refund them through
Google Checkout, Google Play

00:47:18.770 --> 00:47:21.980
receives a refund notification
from check out and sends a

00:47:21.980 --> 00:47:23.540
refund notification to
the application.

00:47:26.060 --> 00:47:26.300
GUISEPPE: That is good.

00:47:26.300 --> 00:47:29.620
RICH: In which case, as long as
the device is connected to

00:47:29.620 --> 00:47:33.120
the network, the local cache
will be updated straight away,

00:47:33.120 --> 00:47:35.050
and your application will
receive the refund

00:47:35.050 --> 00:47:36.430
notification.

00:47:36.430 --> 00:47:37.790
GUISEPPE: That's very good.

00:47:37.790 --> 00:47:41.510
And do you know, Richard,
if the local caching is

00:47:41.510 --> 00:47:46.520
maintained by some SQL like
database or any way?

00:47:46.520 --> 00:47:48.160
RICH: I don't know where
they keep the data.

00:47:48.160 --> 00:47:51.110
I don't know.

00:47:51.110 --> 00:47:55.900
GUISEPPE: Because I am thinking
if we have just to

00:47:55.900 --> 00:47:57.150
come back to [INAUDIBLE]

00:47:59.380 --> 00:48:04.170
license [INAUDIBLE], or we
have also to come back to

00:48:04.170 --> 00:48:07.660
[INAUDIBLE] the people that we
try to write some rove inside

00:48:07.660 --> 00:48:09.264
the database.

00:48:09.264 --> 00:48:10.675
RICH: If it is a database,
my guess is

00:48:10.675 --> 00:48:11.765
it's quite well encrypted.

00:48:11.765 --> 00:48:13.880
I doubt there's anything on
there that's easy to attack.

00:48:21.020 --> 00:48:22.950
I wouldn't be worried about
our side of it.

00:48:26.940 --> 00:48:28.300
I just put a link in
the chat window as

00:48:28.300 --> 00:48:29.420
well to handling refunds.

00:48:29.420 --> 00:48:32.690
And that then links off and
shows you the flow.

00:48:35.860 --> 00:48:41.000
GUISEPPE: What exactly is the
reason why in In-app items are

00:48:41.000 --> 00:48:44.140
not refundable?

00:48:44.140 --> 00:48:46.206
Why Google decide that?

00:48:46.206 --> 00:48:50.040
RICH: Well, because the user
may have already spent it.

00:48:50.040 --> 00:48:52.922
They may be buying calling
credit, things like that, on

00:48:52.922 --> 00:48:54.350
your In-app Billing.

00:48:54.350 --> 00:48:55.900
And then they may make
a phone call and

00:48:55.900 --> 00:48:58.475
then refund the credit.

00:48:58.475 --> 00:49:00.920
If we had a 15 minute refund
window, they could totally

00:49:00.920 --> 00:49:04.970
abuse that for In-app Billing,
because we don't know what

00:49:04.970 --> 00:49:06.220
they've just purchased
from you.

00:49:08.790 --> 00:49:10.640
If they can consume it in the
first 15 minutes and then

00:49:10.640 --> 00:49:13.070
refund it, they could just
continue doing that and have

00:49:13.070 --> 00:49:17.690
infinite free service
on your service.

00:49:17.690 --> 00:49:18.940
GUISEPPE: Correct.

00:49:21.360 --> 00:49:23.225
RICH: I mean, app developers
expected applications for that

00:49:23.225 --> 00:49:24.010
first 15 minutes.

00:49:24.010 --> 00:49:26.735
But for In-app Billing,
we don't know

00:49:26.735 --> 00:49:27.750
what you've just sold.

00:49:27.750 --> 00:49:30.490
So it's not reasonable.

00:49:30.490 --> 00:49:31.301
NICK: Cool, all right, we've got
10 minutes to go, should

00:49:31.301 --> 00:49:33.020
we go back to the Moderator and

00:49:33.020 --> 00:49:36.340
pick up any more questions?

00:49:36.340 --> 00:49:37.650
Who's got the Moderator
at hand?

00:49:37.650 --> 00:49:38.970
Do you have that?

00:49:53.340 --> 00:49:55.700
Dave S. In London says, "I'm
working on improving the

00:49:55.700 --> 00:49:56.595
testing of my apps.

00:49:56.595 --> 00:50:00.130
Right now I test on a few
devices that run using Monkey.

00:50:00.130 --> 00:50:02.376
I started adding some unit tests
as well, but I'm not

00:50:02.376 --> 00:50:03.770
sure how to far to
go with them.

00:50:03.770 --> 00:50:05.050
Are there any other good
testing methods?

00:50:08.510 --> 00:50:10.990
How did you test
Friendcaster?"

00:50:10.990 --> 00:50:12.510
Let's see, this isn't
a very good answer.

00:50:12.510 --> 00:50:15.390
But we didn't as such.

00:50:15.390 --> 00:50:16.130
Well, I did.

00:50:16.130 --> 00:50:17.610
I spent a lot of
time using it.

00:50:17.610 --> 00:50:18.610
So that was my main test.

00:50:18.610 --> 00:50:20.590
And I used it a helluva lot.

00:50:20.590 --> 00:50:23.580
But in terms of formal testing,
there wasn't a whole

00:50:23.580 --> 00:50:26.460
lot done, just because it
was made by myself.

00:50:26.460 --> 00:50:29.772
And I had to spend more
developing than testing.

00:50:29.772 --> 00:50:32.450
RICH: Yeah, my answer was--

00:50:32.450 --> 00:50:34.680
CHRIS: That was about
it, really.

00:50:34.680 --> 00:50:36.900
We did a bit of Monkey stuff
because it's easy

00:50:36.900 --> 00:50:40.150
and cheap to do.

00:50:40.150 --> 00:50:42.660
Unit testing's, it's
hard to do anyway.

00:50:42.660 --> 00:50:46.390
But you can only really do
proper unit testing on utility

00:50:46.390 --> 00:50:48.630
casting, because that's
the easiest to do.

00:50:48.630 --> 00:50:51.830
If you're going to start doing
UI testing, it becomes very

00:50:51.830 --> 00:50:54.110
hard very quickly.

00:50:54.110 --> 00:50:57.020
NICK: So there's the UI
automator tool now, which has

00:50:57.020 --> 00:50:59.480
been launched, which is
an interesting tool.

00:50:59.480 --> 00:51:02.000
It also helps you make sure
you add all your content

00:51:02.000 --> 00:51:03.400
descriptions and stuff,
which is a good thing.

00:51:07.110 --> 00:51:11.230
Johan, any other advice
on testing tools?

00:51:11.230 --> 00:51:14.570
I know you're a fan of these.

00:51:14.570 --> 00:51:15.820
JOHAN: No, no, no.

00:51:18.770 --> 00:51:22.104
No, I'm mighty difficult
as well.

00:51:22.104 --> 00:51:25.970
I'm currently writing an
app using a network

00:51:25.970 --> 00:51:27.170
and it needs a server.

00:51:27.170 --> 00:51:35.010
And I'm dependent
on that server.

00:51:35.010 --> 00:51:36.480
And so I'm not using Robo.

00:51:42.468 --> 00:51:44.460
RICH: Yeah, Etienne has
just linked to a--

00:51:44.460 --> 00:51:47.840
JOHAN: I use unit
testing a lot.

00:51:47.840 --> 00:51:52.020
But I'm not into user interface
automatic testing

00:51:52.020 --> 00:51:54.860
yet for this app.

00:51:54.860 --> 00:51:57.930
RICH: You know, there's services
out there as well,

00:51:57.930 --> 00:52:00.520
Testdroid and other such cloud
services where you can record

00:52:00.520 --> 00:52:01.820
scripts and send them
up and get all the

00:52:01.820 --> 00:52:03.942
results back again.

00:52:03.942 --> 00:52:08.860
If it's a personal project, I
test on an HTC Desire, the

00:52:08.860 --> 00:52:09.960
Nexus 4, 7, and 10.

00:52:09.960 --> 00:52:12.355
And if it works on those, I just
put it out there along

00:52:12.355 --> 00:52:16.770
with a link to the bug tracker,
and hope that people

00:52:16.770 --> 00:52:19.620
file bugs before
I make it live.

00:52:19.620 --> 00:52:21.435
CHRIS: Did everyone see the blog
post yesterday by Android

00:52:21.435 --> 00:52:23.240
developers saying if you've
got a Nexus 10 or other

00:52:23.240 --> 00:52:27.382
high-res device you can call a
couple of ADB commands and you

00:52:27.382 --> 00:52:31.490
can emulate pretty much any
device specification, in terms

00:52:31.490 --> 00:52:32.538
of display?

00:52:32.538 --> 00:52:34.980
RICH: Yeah, basically, if you
own the highest resolution

00:52:34.980 --> 00:52:37.340
device that's available, then
you can test every single

00:52:37.340 --> 00:52:39.321
resolution.

00:52:39.321 --> 00:52:41.430
CHRIS: Pretty handy.

00:52:41.430 --> 00:52:43.230
RICH: No, it's not just
for the Nexus 10.

00:52:43.230 --> 00:52:44.390
It's for whatever the
highest resolution

00:52:44.390 --> 00:52:46.740
device is at any time.

00:52:46.740 --> 00:52:51.720
The Nexus 7 I imagine to run
the same ADB commands.

00:52:51.720 --> 00:52:53.310
The Motorola Xoom did as well.

00:52:53.310 --> 00:52:55.582
I'm not sure of those yet.

00:52:55.582 --> 00:52:57.610
I've never tried it
on a Nexus 4.

00:52:57.610 --> 00:52:59.458
I guess it does as
well, though.

00:52:59.458 --> 00:53:00.890
CHRIS: Yeah, it will.

00:53:00.890 --> 00:53:02.970
RICH: But you can set the
resolution to anything smaller

00:53:02.970 --> 00:53:06.270
than that for matching the
native resolution.

00:53:06.270 --> 00:53:09.200
CHRIS: You can set the screen
size as well, so so you can

00:53:09.200 --> 00:53:11.030
change it to normal,
large, extra large.

00:53:11.030 --> 00:53:12.280
[INAUDIBLE].

00:53:14.540 --> 00:53:16.420
SPARKY: Once upon a time, didn't
it require root to use

00:53:16.420 --> 00:53:18.390
that command?

00:53:18.390 --> 00:53:21.630
A few versions back?

00:53:21.630 --> 00:53:22.880
CHRIS: What, ADB?

00:53:24.800 --> 00:53:28.380
ADB runs fine as you're
a normal user.

00:53:28.380 --> 00:53:29.240
SPARKY: Not ADB, but

00:53:29.240 --> 00:53:32.240
specifically the display emulation?

00:53:37.180 --> 00:53:37.960
ETIENNE: I have a question.

00:53:37.960 --> 00:53:40.340
Have you guys played around
with the overdraw?

00:53:40.340 --> 00:53:45.930
It's part of the newest
Jellybean, if you go to

00:53:45.930 --> 00:53:47.340
developer settings--

00:53:47.340 --> 00:53:50.144
NICK: Yeah, I left it
on for a week once.

00:53:50.144 --> 00:53:52.655
And it was really interesting if
you leave it on for a while

00:53:52.655 --> 00:53:53.920
and see what apps are doing.

00:53:53.920 --> 00:53:57.450
ETIENNE: Yeah, I noticed you're
allowed to, I think,

00:53:57.450 --> 00:54:00.350
select an app to debug.

00:54:00.350 --> 00:54:03.560
But you can't select any
app, it's only a

00:54:03.560 --> 00:54:07.880
certain list of apps.

00:54:07.880 --> 00:54:09.910
Anyway, I turned it on.

00:54:09.910 --> 00:54:14.080
And I was noticing it was
explaining the overdraw.

00:54:14.080 --> 00:54:17.280
But to disable it,
I turned it off.

00:54:17.280 --> 00:54:21.370
And it looked like it was still
displaying on not only

00:54:21.370 --> 00:54:23.550
the app I set, but
some other apps.

00:54:23.550 --> 00:54:27.600
The only way to get rid of it
was to turn off the device.

00:54:27.600 --> 00:54:32.380
NICK: No, basically the setting,
if you have overdraw

00:54:32.380 --> 00:54:35.190
turned on, it will be caching
on the start up.

00:54:35.190 --> 00:54:37.870
So you'll just have to kill
the app and re-start it.

00:54:37.870 --> 00:54:39.260
ETIENNE: Oh, OK, I
didn't know that.

00:54:39.260 --> 00:54:42.780
I thought you could just turn
the setting off and then--

00:54:42.780 --> 00:54:44.470
NICK: No, and it's on put
for the whole device.

00:54:44.470 --> 00:54:45.870
You don't turn it on for
a particular app.

00:54:45.870 --> 00:54:47.430
You turn it on for the device.

00:54:47.430 --> 00:54:49.490
If it's not working for certain
apps, it's because

00:54:49.490 --> 00:54:51.750
they're not using the hardware

00:54:51.750 --> 00:54:53.012
acceleration rendering framework.

00:54:53.012 --> 00:54:55.982
They must explicitly be turning
it off somehow.

00:54:58.750 --> 00:55:00.040
So that's the only time
you wouldn't see

00:55:00.040 --> 00:55:00.940
the overdraw stuff.

00:55:00.940 --> 00:55:04.720
But yeah, you need to just kill
the app, turn it on, run

00:55:04.720 --> 00:55:06.630
the apps you want to do,
then turn it off,

00:55:06.630 --> 00:55:07.490
kill the app again.

00:55:07.490 --> 00:55:08.370
And you're good.

00:55:08.370 --> 00:55:09.420
ETIENNE: Gotcha, yeah.

00:55:09.420 --> 00:55:13.372
I was just doing a hard
boot, or reboot.

00:55:13.372 --> 00:55:16.204
RICH: That would certainly
do it as well.

00:55:16.204 --> 00:55:17.950
SPARKY: I'm wondering if
maybe there was some

00:55:17.950 --> 00:55:21.620
misunderstanding on what
the set app for

00:55:21.620 --> 00:55:25.170
debugging setting was for.

00:55:25.170 --> 00:55:27.830
I assumed that was more just
for connecting up to an ADB

00:55:27.830 --> 00:55:29.755
debugger when you're
on the device.

00:55:32.330 --> 00:55:34.202
I've never actually used
that setting, have

00:55:34.202 --> 00:55:35.850
you guys used it?

00:55:35.850 --> 00:55:38.468
RICH: In the manifest, turning
debuggable on and off.

00:55:38.468 --> 00:55:41.463
NICK: No, there's a thing
in the debug--

00:55:41.463 --> 00:55:43.180
RICH: How does this [INAUDIBLE]
which app is going

00:55:43.180 --> 00:55:44.430
to be debugged?

00:55:46.044 --> 00:55:47.020
NICK: I've not used that.

00:55:47.020 --> 00:55:52.020
SPARKY: I mean, I don't think
it's for targeting these on

00:55:52.020 --> 00:55:52.600
device diagnostics.

00:55:52.600 --> 00:55:58.390
I think that's for specifically
what the remote

00:55:58.390 --> 00:56:01.020
debugger is going to attach to
on your device, like you're

00:56:01.020 --> 00:56:02.940
specifically trying
to debug an app

00:56:02.940 --> 00:56:04.620
you're writing, I assume.

00:56:08.204 --> 00:56:10.280
ETIENNE: Yeah, by default
it says, no debug

00:56:10.280 --> 00:56:12.015
applications set.

00:56:12.015 --> 00:56:18.401
But you can choose only from a
small list of applications.

00:56:18.401 --> 00:56:20.950
CHRIS: I'm guessing apps that
have Android debuggable equals

00:56:20.950 --> 00:56:22.110
true in the manifest.

00:56:22.110 --> 00:56:23.550
ETIENNE: Oh, that's
probably true.

00:56:23.550 --> 00:56:27.350
Because the app I'm working
on is debug true.

00:56:27.350 --> 00:56:29.665
RICH: So it lets you debug apps
that you haven't written

00:56:29.665 --> 00:56:32.340
yourself maybe?

00:56:32.340 --> 00:56:33.968
SPARKY: Possibly.

00:56:33.968 --> 00:56:34.900
RICH: I don't know.

00:56:34.900 --> 00:56:36.475
Perhaps [INAUDIBLE] something
will find out.

00:56:39.160 --> 00:56:43.320
CHRIS: I'll look in the source
code, see if I just--

00:56:43.320 --> 00:56:44.830
NICK: Use the source.

00:56:44.830 --> 00:56:46.270
ETIENNE: I just had
a question.

00:56:46.270 --> 00:56:51.430
I know from reading on a lot of
different blogs, they say

00:56:51.430 --> 00:56:57.700
that the MMS, SMS content
provider is not really open

00:56:57.700 --> 00:56:59.338
source, or it's not really
publicly available.

00:56:59.338 --> 00:57:00.588
RICH: No, not at all.

00:57:02.420 --> 00:57:07.350
ETIENNE: So if you can't really
rely on that being a

00:57:07.350 --> 00:57:13.670
way to grab things like MMS or
SMS saved on your phone, is

00:57:13.670 --> 00:57:14.900
there an alternative?

00:57:14.900 --> 00:57:17.580
Or is that the only way
to go about it?

00:57:17.580 --> 00:57:18.830
NICK: Correct.

00:57:22.060 --> 00:57:25.340
There's documented APIs for SMS
and MMS document APIs for

00:57:25.340 --> 00:57:26.550
the incoming and stuff.

00:57:26.550 --> 00:57:28.000
So you can register for
the incoming ones

00:57:28.000 --> 00:57:28.840
and purchase those.

00:57:28.840 --> 00:57:31.980
But as for the actual content
provider, it's much like

00:57:31.980 --> 00:57:33.440
Calendar used to be pre-ICS.

00:57:33.440 --> 00:57:36.450
They're undocumented, but
they're in the code.

00:57:36.450 --> 00:57:39.094
So use at your own risk.

00:57:39.094 --> 00:57:41.650
ETIENNE: Yeah, I know I'm
using it at my own risk.

00:57:41.650 --> 00:57:43.990
But I'm wondering
how frequently

00:57:43.990 --> 00:57:45.700
does that get updated?

00:57:45.700 --> 00:57:51.370
I heard the paths of the MMS
SMS DB is different on

00:57:51.370 --> 00:57:52.852
different devices.

00:57:52.852 --> 00:57:54.180
I don't know if that's--

00:57:54.180 --> 00:57:55.264
NICK: It's kind of
the whole point.

00:57:55.264 --> 00:57:56.416
It's not documented,
so it could, and

00:57:56.416 --> 00:57:57.666
probably has, changed.

00:58:00.750 --> 00:58:05.115
ETIENNE: Manufacturers
can change that path?

00:58:05.115 --> 00:58:06.580
CHRIS: If they wish too.

00:58:06.580 --> 00:58:07.830
NICK: They're free to change.

00:58:10.470 --> 00:58:12.630
ETIENNE: So the only way to
really feel comfortable about

00:58:12.630 --> 00:58:16.290
using it is to test it
on a lot of different

00:58:16.290 --> 00:58:17.040
manufacturers.

00:58:17.040 --> 00:58:18.600
RICH: Absolutely, yeah.

00:58:18.600 --> 00:58:20.610
Yeah, read new SMSes come in.

00:58:20.610 --> 00:58:22.330
Just start from the current
time and build up

00:58:22.330 --> 00:58:24.121
your SMS from now.

00:58:24.121 --> 00:58:26.630
But try to read all the previous
SMSes and do things

00:58:26.630 --> 00:58:27.300
with those.

00:58:27.300 --> 00:58:29.530
Then it's not a happy
place to be.

00:58:32.170 --> 00:58:34.350
ETIENNE: I'm wondering is
there a way to emulate

00:58:34.350 --> 00:58:36.630
different manufacturer phones?

00:58:36.630 --> 00:58:37.860
CHRIS: No.

00:58:37.860 --> 00:58:39.382
ETIENNE: No.

00:58:39.382 --> 00:58:41.120
RICH: No, Samsung--

00:58:41.120 --> 00:58:41.700
ETIENNE: Got to buy
a bunch of phones?

00:58:41.700 --> 00:58:44.960
RICH: While testing online
service, a Samsung developer--

00:58:44.960 --> 00:58:45.804
what's it called?

00:58:45.804 --> 00:58:48.450
Maybe it's just called
Samsung Developer.

00:58:48.450 --> 00:58:51.202
You can use devices there online
and check them out,

00:58:51.202 --> 00:58:51.663
things like that.

00:58:51.663 --> 00:58:53.850
NICK: So like, Testdroid?

00:58:53.850 --> 00:58:55.370
RICH: Yeah, you could try it
on Testdroid, get access to

00:58:55.370 --> 00:58:56.620
some devices.

00:58:59.990 --> 00:59:03.081
But yeah, I mean, you may test
it on one device and then a

00:59:03.081 --> 00:59:04.780
firmware update will apply on
that device and it'll change

00:59:04.780 --> 00:59:06.450
the SMS app.

00:59:06.450 --> 00:59:08.680
It's going to be a tricky
thing to maintain.

00:59:08.680 --> 00:59:10.070
ETIENNE: Kind of scary.

00:59:10.070 --> 00:59:10.860
RICH: Yes.

00:59:10.860 --> 00:59:16.040
I would try and avoid the need
to read all the previous

00:59:16.040 --> 00:59:17.290
SMSes, if possible.

00:59:20.820 --> 00:59:22.590
NICK: OK, we're just
about out of time.

00:59:22.590 --> 00:59:25.150
So unless there's any burning
questions that people would

00:59:25.150 --> 00:59:27.002
like to ask right now?

00:59:27.002 --> 00:59:30.690
JOHAN: Well, I have a burning
question for a friend which

00:59:30.690 --> 00:59:34.170
raised the question
in Moderator.

00:59:34.170 --> 00:59:36.940
He's trying to achieve something
like Airplay on

00:59:36.940 --> 00:59:41.940
Android, where he wants to play
audio from his the device

00:59:41.940 --> 00:59:46.270
on a server he simply
implements himself.

00:59:46.270 --> 00:59:50.430
So like the Bluetooth standard,
which overrides the

00:59:50.430 --> 00:59:55.672
audio output to any device
listening on

00:59:55.672 --> 00:59:56.800
Bluetooth as well.

00:59:56.800 --> 01:00:03.380
Is there any way, or indication,
or does anybody

01:00:03.380 --> 01:00:07.330
know about any tips about
playing via a Wi-Fi direct?

01:00:10.730 --> 01:00:11.700
NICK: I don't quite understand
the question.

01:00:11.700 --> 01:00:14.143
So you want to redirect all
sound output away from the

01:00:14.143 --> 01:00:15.930
phone to another audio sync?

01:00:15.930 --> 01:00:18.380
JOHAN: Yeah.

01:00:18.380 --> 01:00:19.910
CHRIS: I doubt you
can do that.

01:00:22.810 --> 01:00:26.925
YOSSI: You can do it if you're
using the Bluetooth headsets.

01:00:29.770 --> 01:00:31.780
RICH: I would look at the
Bluetooth code and see what's

01:00:31.780 --> 01:00:32.430
going on there.

01:00:32.430 --> 01:00:33.990
But you'll probably
find there's

01:00:33.990 --> 01:00:36.210
something secure in there.

01:00:36.210 --> 01:00:39.680
YOSSI: On Jellybean you cannot
re-route all the audio.

01:00:39.680 --> 01:00:47.740
But if you switch your phone
to mode "in communication,"

01:00:47.740 --> 01:00:50.550
then it will think
you're in a call.

01:00:50.550 --> 01:00:55.170
So basically all the input and
output voices, or audio will

01:00:55.170 --> 01:00:57.350
go through the headsets.

01:00:57.350 --> 01:00:59.920
JOHAN: OK, I've heard that.

01:00:59.920 --> 01:01:04.770
Yeah, but still, he wants
to redirect the audio.

01:01:04.770 --> 01:01:07.585
RICH: Yeah, it has to be
done in Audio Player.

01:01:07.585 --> 01:01:10.180
Well, maybe not has to but
that's really where I'd start.

01:01:10.180 --> 01:01:14.379
Have a look in the source,
if it is secure.

01:01:14.379 --> 01:01:15.740
CHRIS: There's [INAUDIBLE]

01:01:15.740 --> 01:01:19.250
and it's called Bubble Dna.

01:01:19.250 --> 01:01:20.385
So have a look at that.

01:01:20.385 --> 01:01:22.930
Try and look at the source,
because that does pretty much

01:01:22.930 --> 01:01:24.176
what you're asking.

01:01:24.176 --> 01:01:26.088
RICH: I don't know if
they use the custom

01:01:26.088 --> 01:01:26.566
media player, though?

01:01:26.566 --> 01:01:27.050
They use their own
media player?

01:01:27.050 --> 01:01:28.500
CHRIS: They do.

01:01:28.500 --> 01:01:31.780
But they do all the network
stuff as well.

01:01:31.780 --> 01:01:34.570
JOHAN: Great, thanks.

01:01:34.570 --> 01:01:35.420
NICK: Well, thanks for
joining us, everyone.

01:01:35.420 --> 01:01:37.900
And we will see you same
time next week.

