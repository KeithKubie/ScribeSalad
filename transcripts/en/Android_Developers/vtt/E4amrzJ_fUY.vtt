WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.500
[MUSIC]

00:00:05.500 --> 00:00:07.420
ALIN JERPELEA: Hi guys.

00:00:07.420 --> 00:00:10.920
My name is Alin Jerpelea and
I'm presenting the Open Devices

00:00:10.920 --> 00:00:15.200
Program How many of you have
heard before about the Open

00:00:15.200 --> 00:00:18.920
Devices Program from Sony?

00:00:18.920 --> 00:00:20.110
OK, nice.

00:00:20.110 --> 00:00:25.730
How many of you
are ROM developers

00:00:25.730 --> 00:00:28.052
or have built a ROM before?

00:00:30.650 --> 00:00:33.080
Nice, thank you.

00:00:33.080 --> 00:00:36.020
So, who am I?

00:00:36.020 --> 00:00:38.280
I'm a software and
hardware engineer

00:00:38.280 --> 00:00:41.900
that has started the
development with community

00:00:41.900 --> 00:00:45.400
in 2006 with the on XDA.

00:00:45.400 --> 00:00:48.690
I have played with HTC
windows and Android devices

00:00:48.690 --> 00:00:52.890
and then I have switched to Sony
windows and Android devices.

00:00:52.890 --> 00:00:55.960
I have created the
FreeXperiaProject in 2010,

00:00:55.960 --> 00:00:59.350
with the ambition of unlocking
the experience of phones

00:00:59.350 --> 00:01:02.160
and provide an open
source alternative.

00:01:02.160 --> 00:01:10.580
In 2014, I have joined Sony as
the manager of the Open Devices

00:01:10.580 --> 00:01:11.080
Program.

00:01:15.350 --> 00:01:20.500
The Open Devices Program goal
is to provide an innovation

00:01:20.500 --> 00:01:21.850
and development platform.

00:01:21.850 --> 00:01:25.980
We offer support for 21
devices, and more will come,

00:01:25.980 --> 00:01:31.720
all based on Qualcomm
platform, starting from 2014.

00:01:31.720 --> 00:01:36.880
This project uses one kernel
for all devices, one camera

00:01:36.880 --> 00:01:42.630
framework for all devices,
which is still work in progress,

00:01:42.630 --> 00:01:46.310
and needs zero patches
to compile and work.

00:01:46.310 --> 00:01:50.500
We provide basic connectivity
like GSM, Bluetooth, NFC,

00:01:50.500 --> 00:01:53.030
wireless-- everything that
you get when you compile

00:01:53.030 --> 00:01:59.800
the Android from Google.

00:02:02.660 --> 00:02:04.620
Those are the supported devices.

00:02:04.620 --> 00:02:11.480
We support everything from
the old dual core MS8226,

00:02:11.480 --> 00:02:19.430
like M2, E2, T3, T2Ultra,
up to the newest devices

00:02:19.430 --> 00:02:21.190
that we have just launched.

00:02:21.190 --> 00:02:26.110
And that is the MSM8994.

00:02:26.110 --> 00:02:32.180
Including the Z3+ Z5Compact,
Z5, Z5Premium and tablet.

00:02:32.180 --> 00:02:34.700
Since all those
devices are supported

00:02:34.700 --> 00:02:38.740
in the same repository
and the same kernel,

00:02:38.740 --> 00:02:43.180
the features that work
on one, will work on all.

00:02:43.180 --> 00:02:47.740
And if you apply a patch to
fix something on one of them,

00:02:47.740 --> 00:02:50.840
you will actually
fix all devices.

00:02:50.840 --> 00:02:53.070
The same thing, if
you add a feature,

00:02:53.070 --> 00:02:56.490
it will be on all devices.

00:02:56.490 --> 00:03:03.310
What are the steps toward to
build and flash this software?

00:03:03.310 --> 00:03:06.890
You have to go to our website
and unlock your bootloader.

00:03:06.890 --> 00:03:10.590
You have to download
and build the AOSP code.

00:03:10.590 --> 00:03:14.760
You can, after that, start
experimenting with open source

00:03:14.760 --> 00:03:17.340
possibilities and
start innovation.

00:03:17.340 --> 00:03:22.280
And in the end you can think
about future IOT and, why not,

00:03:22.280 --> 00:03:22.780
repurposing.

00:03:26.630 --> 00:03:30.560
As I was saying before, it's
enough to go to our website.

00:03:30.560 --> 00:03:36.530
The address is in the
down part of my slide.

00:03:36.530 --> 00:03:39.830
And you will simply
get the ability

00:03:39.830 --> 00:03:43.370
to run unsigned kernel
images after you

00:03:43.370 --> 00:03:45.320
unlock your bootloader.

00:03:45.320 --> 00:03:50.360
You can use our hardware
to flash custom ROMs

00:03:50.360 --> 00:03:55.170
and create new experience and
to innovate on our hardware.

00:03:55.170 --> 00:03:58.370
Please note that unlocking
bootloader will activate

00:03:58.370 --> 00:03:59.775
proprietary Sony functions.

00:04:04.340 --> 00:04:07.010
Our goal with this
program is to provide

00:04:07.010 --> 00:04:13.240
as good as possible
Vanilla AOSP experience

00:04:13.240 --> 00:04:15.520
for unlocked devices.

00:04:15.520 --> 00:04:20.880
We want to provide a
base for custom ROMs.

00:04:20.880 --> 00:04:24.150
We prioritize the latest models.

00:04:24.150 --> 00:04:28.950
We provide long term
support for all devices,

00:04:28.950 --> 00:04:36.020
including the old ones like
I said-- the 2014 dual core

00:04:36.020 --> 00:04:37.860
devices.

00:04:37.860 --> 00:04:40.880
And you also get the
latest version of Android.

00:04:40.880 --> 00:04:44.120
We have published the guide,
"How to Build Android M",

00:04:44.120 --> 00:04:48.580
seven days after Google has
released the open source code.

00:04:48.580 --> 00:04:51.870
Our ambition is to
drive innovation

00:04:51.870 --> 00:04:54.220
to work with external
community and developers.

00:05:00.410 --> 00:05:03.190
This is the kernel layout.

00:05:03.190 --> 00:05:06.350
We have based it
on several branches

00:05:06.350 --> 00:05:09.830
so that you can easily
follow the changes,

00:05:09.830 --> 00:05:16.780
and so that you can easily
rebase on maybe a new kernel

00:05:16.780 --> 00:05:18.340
version.

00:05:18.340 --> 00:05:24.810
So you have a Qualcomm base,
you have misc Qualcomm branch,

00:05:24.810 --> 00:05:27.370
which is patches
from Qualcomm that

00:05:27.370 --> 00:05:29.600
fix various platform support.

00:05:29.600 --> 00:05:37.312
Misc-up is patches that come
from different kernel projects.

00:05:37.312 --> 00:05:42.630
and misc-dev is patches from us
or other community developers.

00:05:42.630 --> 00:05:46.450
Then you have drivers,
which is the drivers used

00:05:46.450 --> 00:05:48.730
by our hardware.

00:05:48.730 --> 00:05:50.990
And you have platform
configuration, which

00:05:50.990 --> 00:05:52.770
is mostly DTS configuration.

00:05:56.520 --> 00:05:59.580
In the same time, you have the
hardware abstraction layer,

00:05:59.580 --> 00:06:03.380
and we are trying to
provide compatibility

00:06:03.380 --> 00:06:05.300
with existing Google one.

00:06:05.300 --> 00:06:11.250
Where it's not possible, we
are open sourcing the HAL.

00:06:11.250 --> 00:06:15.920
And our goal is to
use as few binaries as

00:06:15.920 --> 00:06:20.640
possible because having binaries
can limit your innovation.

00:06:20.640 --> 00:06:25.370
So even if you get a HAL
with less functionality,

00:06:25.370 --> 00:06:29.510
you can still innovate
since you have the code.

00:06:29.510 --> 00:06:32.200
But if you get only
binaries, let's say,

00:06:32.200 --> 00:06:35.960
you cannot do anything.

00:06:35.960 --> 00:06:42.190
And then, as I have
promised a long time ago,

00:06:42.190 --> 00:06:46.180
we have looked into
one of the most desired

00:06:46.180 --> 00:06:48.040
parts of the open source.

00:06:48.040 --> 00:06:51.710
And that is the open
source camera solution.

00:06:51.710 --> 00:06:56.890
We are still working on it,
but as you can see in my slide,

00:06:56.890 --> 00:07:03.210
it supports all the
platforms in one code.

00:07:03.210 --> 00:07:05.920
It also rewrites
everything clean so

00:07:05.920 --> 00:07:10.500
that you can reuse it
and innovate on it.

00:07:10.500 --> 00:07:16.120
And we will release
the camera binaries,

00:07:16.120 --> 00:07:18.790
which implement our sensors.

00:07:18.790 --> 00:07:24.520
I don't have a specific
timeframe for it, but soon.

00:07:24.520 --> 00:07:27.300
It's all I can say
in this moment.

00:07:27.300 --> 00:07:31.030
You will have a complete
hardware platform

00:07:31.030 --> 00:07:33.700
with a complete software
stack so that you

00:07:33.700 --> 00:07:36.590
can start innovating on it.

00:07:36.590 --> 00:07:40.560
Since we want it to be as
transparent as possible,

00:07:40.560 --> 00:07:42.430
this is the current status.

00:07:42.430 --> 00:07:47.020
And probably this is how it
will look on the initial launch.

00:07:47.020 --> 00:07:50.430
Please note that the
camera is developer grade.

00:07:50.430 --> 00:07:55.960
It is not matching the
Sony stock camera quality.

00:07:55.960 --> 00:07:59.750
And also it has
issues with stability.

00:07:59.750 --> 00:08:03.250
The whole reason for
releasing this camera

00:08:03.250 --> 00:08:08.090
early is so that community
can start innovating and so

00:08:08.090 --> 00:08:13.480
that you can adjust your custom
ROM trees to our new solution.

00:08:13.480 --> 00:08:15.410
I know that in the
past, a lot of you

00:08:15.410 --> 00:08:20.240
have hacked the camera
with worse results,

00:08:20.240 --> 00:08:25.770
or lots of fisheye bug and
a lot of other problems.

00:08:25.770 --> 00:08:31.180
With this camera solution you
have the code, or most of it.

00:08:31.180 --> 00:08:34.299
And that means that you
can start innovating,

00:08:34.299 --> 00:08:39.730
and there is no longer
the need to hack and lose

00:08:39.730 --> 00:08:42.648
a lot of weeks just trying
to figure out how it works.

00:08:45.930 --> 00:08:47.590
And then you have the Android.

00:08:47.590 --> 00:08:51.750
The Android part, it's
the one that you always

00:08:51.750 --> 00:08:55.790
want to have the latest,
and with this program,

00:08:55.790 --> 00:08:59.390
since everything is open source,
you can always have the latest.

00:08:59.390 --> 00:09:02.570
As I was mentioning, we
have launched seven days

00:09:02.570 --> 00:09:04.840
after Google M released.

00:09:04.840 --> 00:09:07.700
We have launched the guide
so that you can build.

00:09:07.700 --> 00:09:10.500
The same happened
with the Lollipop MR1.

00:09:10.500 --> 00:09:12.760
Seven days after the
release, you had the guide,

00:09:12.760 --> 00:09:17.270
you had the new binaries, so
that you can start innovating.

00:09:17.270 --> 00:09:20.530
Our goal is to drive innovation.

00:09:20.530 --> 00:09:25.360
And here I have some ideas
of what you can actually do

00:09:25.360 --> 00:09:28.660
with the open devices program.

00:09:28.660 --> 00:09:30.660
You can build custom ROMs.

00:09:30.660 --> 00:09:34.270
And we have a good example and
good support from [INAUDIBLE]

00:09:34.270 --> 00:09:38.860
AOKP, and paranoid Android.

00:09:38.860 --> 00:09:41.210
But at the same
time maybe you don't

00:09:41.210 --> 00:09:44.970
want to build just
another custom ROM.

00:09:44.970 --> 00:09:48.890
Maybe you want to experiment
with different operating

00:09:48.890 --> 00:09:50.000
systems.

00:09:50.000 --> 00:09:54.200
And then you can start
looking on Sailfish,

00:09:54.200 --> 00:09:57.750
you can start looking on
Ubuntu, and you can start

00:09:57.750 --> 00:10:01.005
looking on Mozilla Firefox OS.

00:10:01.005 --> 00:10:04.040
AUDIENCE: There's a
bluetooth ROM or Sony's?

00:10:04.040 --> 00:10:07.880
ALIN JERPELEA: No, there
is not a built ROM.

00:10:07.880 --> 00:10:11.660
It is the possibilities
for you to innovate.

00:10:11.660 --> 00:10:15.340
So you can basically
build any operating system

00:10:15.340 --> 00:10:17.560
since everything is open source.

00:10:17.560 --> 00:10:20.810
And in my next slide,
I have something

00:10:20.810 --> 00:10:25.450
that is already built. Mozilla
has published a nice article

00:10:25.450 --> 00:10:30.300
about how to build
Firefox OS on our devices.

00:10:30.300 --> 00:10:35.330
And the instructions are in
the down of my page, down part.

00:10:35.330 --> 00:10:41.340
You can go and build your own
Firefox OS for 21 Sony devices.

00:10:41.340 --> 00:10:45.180
For some of them you have to add
small differences because they

00:10:45.180 --> 00:10:47.210
don't support all devices.

00:10:47.210 --> 00:10:49.670
But you have
everything on the top

00:10:49.670 --> 00:10:54.950
and also you can see somebody,
actually two developers,

00:10:54.950 --> 00:10:59.060
have [? ported ?]
Firefox OS on our devices

00:10:59.060 --> 00:11:03.920
based on the same program, open
devices, and it works nice.

00:11:03.920 --> 00:11:07.450
It is still as buggy
as hell, but it

00:11:07.450 --> 00:11:12.590
shows the potential of
investigating, or innovating,

00:11:12.590 --> 00:11:14.360
on this hardware.

00:11:17.350 --> 00:11:21.960
And now, because I have
talked a lot about innovation,

00:11:21.960 --> 00:11:25.580
let's talk a little
about repurposing.

00:11:25.580 --> 00:11:30.680
Usually, when your phone is
old and you no longer use it,

00:11:30.680 --> 00:11:33.240
it just ends up in a drawer.

00:11:33.240 --> 00:11:36.660
Or if you smash the
screen, then you always

00:11:36.660 --> 00:11:40.120
count how much it will
cost for you to repair it.

00:11:40.120 --> 00:11:43.070
And if the cost for a
new screen is too high,

00:11:43.070 --> 00:11:46.100
you will simply
throw it in a drawer.

00:11:46.100 --> 00:11:48.940
What happens if we
think outside the box

00:11:48.940 --> 00:11:53.810
and we think that we
have very powerful,

00:11:53.810 --> 00:12:00.200
from two to eight core platform,
that has embodied connectivity,

00:12:00.200 --> 00:12:04.000
it has wireless and
Bluetooth, it has a GSM,

00:12:04.000 --> 00:12:09.150
and you have all the sensors,
cameras, maybe a battery.

00:12:09.150 --> 00:12:12.720
Or maybe you want to replace
the battery for repurposing,

00:12:12.720 --> 00:12:13.840
and a display.

00:12:13.840 --> 00:12:15.770
Or maybe the display
is also broken.

00:12:15.770 --> 00:12:18.600
But you have HDMI.

00:12:18.600 --> 00:12:22.290
Compare this one to
a regular development

00:12:22.290 --> 00:12:26.870
board, which is
usually weak, and you

00:12:26.870 --> 00:12:30.200
can think of a lot of projects.

00:12:30.200 --> 00:12:36.460
While I was in Moscow
for our Droid Con Moscow,

00:12:36.460 --> 00:12:40.040
a developer asked me
if he can build a web

00:12:40.040 --> 00:12:43.780
server on a board like this.

00:12:43.780 --> 00:12:49.250
With eight core system and
three gigabytes of RAM,

00:12:49.250 --> 00:12:53.620
I think that you can build
a really nice web server.

00:12:53.620 --> 00:12:56.620
You can do a lot more than that.

00:12:56.620 --> 00:13:01.680
Your mind sets the innovation
bounds for this one.

00:13:01.680 --> 00:13:05.470
You just have a powerful
hardware and everything

00:13:05.470 --> 00:13:06.770
is open source.

00:13:06.770 --> 00:13:12.170
What you can do with it,
it's simply up to you.

00:13:12.170 --> 00:13:18.070
This project was started in
2014 by Sony for community,

00:13:18.070 --> 00:13:22.970
and we try to work as much
as possible with community.

00:13:26.170 --> 00:13:32.490
So we have published source
code repositories on GITHub.

00:13:32.490 --> 00:13:36.180
We are active on XTA
forum, so that you can

00:13:36.180 --> 00:13:40.000
post questions and get replies.

00:13:40.000 --> 00:13:45.400
We have our own forum
on the Sony website,

00:13:45.400 --> 00:13:48.720
but that one is
only for developers.

00:13:48.720 --> 00:13:53.120
And then we have created the
reward developer program.

00:13:53.120 --> 00:13:58.470
Reward developer program rewards
developers that work with us.

00:13:58.470 --> 00:14:03.070
So if a developer contributes
comments back to Sony,

00:14:03.070 --> 00:14:05.910
those comments are
counted every two months,

00:14:05.910 --> 00:14:08.370
and the person that
has the most accepted

00:14:08.370 --> 00:14:13.180
comments every two months
gets a new Sony device.

00:14:13.180 --> 00:14:15.400
Those are the people
that, til now,

00:14:15.400 --> 00:14:17.710
since the program
has started, have

00:14:17.710 --> 00:14:21.190
won one of our devices
and the respect

00:14:21.190 --> 00:14:25.660
from community, because they
have fixed and helped community

00:14:25.660 --> 00:14:27.822
get a better software.

00:14:30.750 --> 00:14:36.430
As many of you have already
been part of the XDA or Android

00:14:36.430 --> 00:14:39.850
barbecue, my slides
usually are short

00:14:39.850 --> 00:14:43.760
and then I'm happy to
hear more about what

00:14:43.760 --> 00:14:47.590
do you think, what do you
like, and what would you

00:14:47.590 --> 00:14:52.950
like from this program, and
what would you actually want

00:14:52.950 --> 00:14:56.380
from us to help you.

00:14:56.380 --> 00:15:00.788
So if you have any
ideas please speak.

00:15:00.788 --> 00:15:01.704
AUDIENCE: Spare parts.

00:15:04.750 --> 00:15:07.000
ALIN JERPELEA: The part with
spare parts, I would say,

00:15:07.000 --> 00:15:13.200
that it's easy to
find them online sales

00:15:13.200 --> 00:15:16.430
from broken devices.

00:15:16.430 --> 00:15:19.419
We are selling phones.

00:15:19.419 --> 00:15:19.960
AUDIENCE: OK.

00:15:27.980 --> 00:15:31.550
ALIN JERPELEA: OK, so no ideas.

00:15:31.550 --> 00:15:32.350
OK, guys.

00:15:32.350 --> 00:15:37.040
Thank you, and see
you online then.

00:15:37.040 --> 00:15:40.990
[MUSIC]

