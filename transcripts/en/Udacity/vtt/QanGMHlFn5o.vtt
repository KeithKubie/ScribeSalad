WEBVTT
Kind: captions
Language: en

00:00:00.280 --> 00:00:03.680
And what we're going to do,
actually, is do clustering twice.

00:00:03.680 --> 00:00:05.140
The first thing we do is,

00:00:05.140 --> 00:00:09.710
we're going to cluster in that big
feature space I was just showing you.

00:00:09.710 --> 00:00:13.800
And those clusters are going to
be referred to as textons.

00:00:13.800 --> 00:00:18.270
Now this is a word, I think it's a word
that was coined by Bela Julesz who was

00:00:18.270 --> 00:00:21.830
a psychophysicist, guy who did random
autostereograms quite a while ago.

00:00:21.830 --> 00:00:25.322
And they were referring to
things like T-junctions and

00:00:25.322 --> 00:00:29.705
little end-stops and
other textural descriptors that ex,

00:00:29.705 --> 00:00:33.040
existed in,
in images as sort of he saw them.

00:00:33.040 --> 00:00:38.320
And the idea is that these clusters
in the feature space would

00:00:38.320 --> 00:00:43.610
be different little textural elements
that were found in these images, right?

00:00:43.610 --> 00:00:48.050
And so you would describe
each little window, okay,

00:00:48.050 --> 00:00:51.370
by what's referred to as
its texton histogram.

00:00:51.370 --> 00:00:53.760
That's what this thing is
going to be showing here.

00:00:53.760 --> 00:00:55.790
We'll, we'll take a little
bit more of that.

00:00:55.790 --> 00:01:01.620
But the idea is that, here there is
just a single value at every pixel,

00:01:01.620 --> 00:01:06.450
which is the single texton that's
tends to be present at that pixel.

00:01:06.450 --> 00:01:09.580
That is, which cluster it got mapped to.

00:01:09.580 --> 00:01:13.510
And you can see that, you know, if you
were to just cluster based upon this,

00:01:13.510 --> 00:01:15.500
it would be kind of weird because, yeah,

00:01:15.500 --> 00:01:18.900
this is not one nice thing
because it's a single texture.

00:01:18.900 --> 00:01:22.580
But the idea here is that,
even though this is a single texture,

00:01:22.580 --> 00:01:26.110
there are all these different
little textons that are present.

00:01:26.110 --> 00:01:30.710
So instead of segmenting the image based
upon which single cluster you're mapped

00:01:30.710 --> 00:01:34.510
to, instead what we're going to do is
we're going to take little windows.

00:01:34.510 --> 00:01:40.330
So here's a little circular window and
we compute its texton histogram.

00:01:40.330 --> 00:01:44.930
Okay, so now we've got a whole
bunch of different textons and

00:01:44.930 --> 00:01:48.770
this is the count of
the number of those textons.

00:01:48.770 --> 00:01:50.670
So I get a histogram at every window.

00:01:50.670 --> 00:01:55.540
So here's another window, and
it has kind of a similar histogram.

00:01:55.540 --> 00:01:56.570
And here's a third window.

00:01:56.570 --> 00:01:59.230
Well, its histogram
looks nothing like that.

00:01:59.230 --> 00:02:04.500
And the idea is that you're now
going to cluster in the histogram

00:02:04.500 --> 00:02:10.430
space of these textons in order to
be able to get your segmentation.

00:02:10.430 --> 00:02:12.160
All right, and how well does that work?

00:02:12.160 --> 00:02:13.430
Well, let me show you an example.

00:02:13.430 --> 00:02:17.500
So here is a picture of a rhinoceros,
no, a zebra, I guess.

00:02:17.500 --> 00:02:20.810
I don't know,
a thing with stripes, okay.

00:02:20.810 --> 00:02:22.890
So suppose I cluster
it based upon color.

00:02:22.890 --> 00:02:24.370
What would that look like?

00:02:24.370 --> 00:02:26.080
Well, it would be a mess.

00:02:26.080 --> 00:02:26.600
Okay?

00:02:26.600 --> 00:02:29.463
And there's your mess, color-based
regions, and you'd say, well,

00:02:29.463 --> 00:02:30.700
that's a terrible idea.

00:02:30.700 --> 00:02:33.600
&gt;&gt; That's a terrible idea
&gt;&gt; So what would be a better idea?

00:02:33.600 --> 00:02:37.110
Well, how about we cluster
based upon texture?

00:02:37.110 --> 00:02:41.972
And you can see that you get these
broad clusters that seem to do,

00:02:41.972 --> 00:02:43.280
you know, a reasonable job.

00:02:43.280 --> 00:02:47.420
I mean, it, it does make the entire,
you know, this region here,

00:02:47.420 --> 00:02:49.980
which is sort of this big region there.

00:02:49.980 --> 00:02:53.480
You'll notice that it's not, you know,
because of the scales that got used in

00:02:53.480 --> 00:02:57.440
this case, it didn't find these legs
here, or, or this one there, but

00:02:57.440 --> 00:03:00.450
that's a function of sort of
how you go about describing it.

00:03:00.450 --> 00:03:03.940
And I will say that in general,
this is kind of an under-segmented

00:03:03.940 --> 00:03:08.650
result that probably should be more
segments, but clearly this is way better

00:03:08.650 --> 00:03:12.400
than this color-based approach, because
it allows us to describe the texture.

