WEBVTT
Kind: captions
Language: en

00:00:00.540 --> 00:00:01.920
The one thing that you do need to pay

00:00:01.920 --> 00:00:05.230
attention, to ,with touch on mobile, is the click delay.

00:00:05.230 --> 00:00:08.560
Touch supporting mobile browsers, usually interpret double tapping, as

00:00:08.560 --> 00:00:12.450
a zoom into this element gesture. Unfortunately, this means the

00:00:12.450 --> 00:00:15.250
platform, delays finds click of it until it can

00:00:15.250 --> 00:00:18.300
decide whether, the user is double tapping, about a third

00:00:18.300 --> 00:00:21.630
of a second, chrome has recently checked in some changes,

00:00:21.630 --> 00:00:25.230
that minimize this behavior. But, pretty much, all mobile browsers,

00:00:25.230 --> 00:00:28.910
have this click delay feature, to some degree. There are

00:00:28.910 --> 00:00:31.190
a few ways to fix this problem, and, get clicks

00:00:31.190 --> 00:00:33.760
without a delay, you can set the view port, to

00:00:33.760 --> 00:00:38.500
be non-scalable. Either, set user scalable, to no, or set minimum

00:00:38.500 --> 00:00:40.870
scale and maximum scale, to one, which has the same

00:00:40.870 --> 00:00:44.740
effect. This can cause accessibility problems, though, so be careful jumping,

00:00:44.740 --> 00:00:47.540
to this solution. You need to make sure, if you

00:00:47.540 --> 00:00:50.830
do this, that your site will never ,need to be zoomed.

00:00:50.830 --> 00:00:54.400
You can use a fast click library, like the ft labs one, that we've linked

00:00:54.400 --> 00:00:55.860
down below. But ,you do have to

00:00:55.860 --> 00:00:58.010
be careful, about how this impacts, your scrolling

00:00:58.010 --> 00:01:00.020
performance, be sure to read the directions,

00:01:00.020 --> 00:01:03.105
very carefully. Where finally, of course, you can

00:01:03.105 --> 00:01:06.160
implement tech support yourself directly, if you consume

00:01:06.160 --> 00:01:08.010
the touch events, you won't have this issue.

