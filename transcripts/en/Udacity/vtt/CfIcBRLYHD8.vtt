WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.000
Welcome to the first problem of Unit 4. In this situation, we're going to pretend that we are fishermen.

00:00:05.000 --> 00:00:09.000
And we're interested in catching this red type of fish right here.

00:00:09.000 --> 00:00:12.000
However, whenever we try to catch the red fish we also end up catching

00:00:12.000 --> 00:00:17.000
a bunch of these smaller green fish, as you can see from the contents of the net right here.

00:00:17.000 --> 00:00:22.000
What we're going to do in this problem is model logistic growth for both species of fish--

00:00:22.000 --> 00:00:24.000
the red and the green with the constants and initial values

00:00:24.000 --> 00:00:27.000
that we've already included in the supplied code.

00:00:27.000 --> 00:00:30.000
Just a reference--I included a general equation from logistic growth right here.

00:00:30.000 --> 00:00:36.000
F is the population that we're looking at, r is the growth rate of the population,

00:00:36.000 --> 00:00:39.000
and c is the carrying capacity of the surrounding environment.

00:00:39.000 --> 00:00:43.000
Now, remember when we model the change in population for both types of fish,

00:00:43.000 --> 00:00:47.000
we need to include both population growth, which is dictated by this equation,

00:00:47.000 --> 00:00:49.000
but also the harvesting rate.

00:00:49.000 --> 00:00:55.000
We've created this parameter called p to represent the fraction of the total fish that we catch

00:00:55.000 --> 00:01:00.000
that are part of the green fish population, so we might also call this the fraction of the by-catch.

00:01:00.000 --> 00:01:04.000
Just to start, we've inserted a value of 0.5 for p.

00:01:04.000 --> 00:01:09.000
What you're going to do is calculate the threshold value of p for fish 2 to not go extinct.

00:01:09.000 --> 00:01:11.000
In other words, what is the highest possible value of p

00:01:11.000 --> 00:01:16.000
that will allow for equilibrium situation in the population of fish 2?

00:01:16.000 --> 00:01:19.000
After you've calculated the correct value of p, come down to the for loop

00:01:19.000 --> 00:01:23.000
and use, as we've done so many times before, the forward Euler method.

00:01:23.000 --> 00:01:26.000
You'll notice that we've already included a line for you to prevent the population

00:01:26.000 --> 09:59:59.000
of either type of fish from becoming negative--good luck.

