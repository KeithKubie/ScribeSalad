WEBVTT
Kind: captions
Language: en

00:00:00.540 --> 00:00:04.720
Let's take a break from our project for
a bit and talk about a very specific,

00:00:04.720 --> 00:00:07.152
but useful feature of
the Google Maps APIs.

00:00:07.152 --> 00:00:11.934
&gt;&gt; Here at Google, we have offices all
over the world, from New York to London,

00:00:11.934 --> 00:00:14.007
to India, to China, to Sidney.

00:00:14.007 --> 00:00:17.787
Just yesterday, I scheduled
a meeting with my teammate in Japan.

00:00:17.787 --> 00:00:20.345
&gt;&gt; What if you wanted
a quick way to find out what

00:00:20.345 --> 00:00:22.912
time zone you're in
based on the location?

00:00:22.912 --> 00:00:24.782
&gt;&gt; That would be really useful.

00:00:24.782 --> 00:00:29.400
Luckily, the Google Maps APIs
includes a Time Zone API web service.

00:00:29.400 --> 00:00:31.068
This feature is pretty simple,

00:00:31.068 --> 00:00:34.768
you can pass in a location in the form
of a lat-long and a day time stamp,

00:00:34.768 --> 00:00:38.535
which tells a service whether or
not to adjust for daylight savings, and

00:00:38.535 --> 00:00:42.083
the service will give you back a time
zone based on that coordinate.

00:00:42.083 --> 00:00:46.546
It'll also tell you whether or not
that time zone is currently offset due

00:00:46.546 --> 00:00:50.643
to daylight savings time and
the offset of that time zone from UTC,

00:00:50.643 --> 00:00:53.586
which stands for
Coordinated Universal Time.

00:00:53.586 --> 00:00:59.794
Don't ask me why it's UTC and CUT,
maybe they didn't want to name it cut.

00:00:59.794 --> 00:01:02.310
Let's do a quick example
of the Time Zone API.

00:01:02.310 --> 00:01:05.900
I'm going to make a quick
Time Zone API request.

00:01:05.900 --> 00:01:07.210
Notice the same name space again.

00:01:07.210 --> 00:01:10.401
I'm going to request
the response in JSON format, and

00:01:10.401 --> 00:01:13.966
I'm going to make the request for
this specific lat-long.

00:01:13.966 --> 00:01:19.159
I'm passing in the time stamp in seconds
which you can usually find converters

00:01:19.159 --> 00:01:24.193
online for, or a new code, you can
use the JavaScript date.now function,

00:01:24.193 --> 00:01:26.253
and I'm passing in my API key.

00:01:26.253 --> 00:01:29.334
Turns out,
this is in Japan standard time.

00:01:29.334 --> 00:01:34.895
We see that there's currently no
offset for daylight savings time here,

00:01:34.895 --> 00:01:40.466
and that the offset from UTC is
32,400 seconds, which is 9 hours.

00:01:40.466 --> 00:01:43.364
Yeah, totally just did that in my head.

00:01:43.364 --> 00:01:47.401
Incidentally, this location is
actually to Shiro-jima in Japan,

00:01:47.401 --> 00:01:51.379
better known as Cat Island,
where there are more cats than humans.

00:01:51.379 --> 00:01:52.650
Let's take a quiz meow.

