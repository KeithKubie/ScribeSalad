WEBVTT
Kind: captions
Language: en

00:00:02.880 --> 00:00:06.519 align:start position:0%
 
[Music]

00:00:06.519 --> 00:00:06.529 align:start position:0%
[Music]
 

00:00:06.529 --> 00:00:09.860 align:start position:0%
[Music]
hello<00:00:07.529><c> everyone</c><00:00:07.950><c> I'm</c><00:00:08.340><c> Matthew</c><00:00:08.639><c> and</c><00:00:09.059><c> this</c><00:00:09.690><c> is</c>

00:00:09.860 --> 00:00:09.870 align:start position:0%
hello everyone I'm Matthew and this is
 

00:00:09.870 --> 00:00:12.140 align:start position:0%
hello everyone I'm Matthew and this is
my<00:00:10.019><c> colleague</c><00:00:10.260><c> Colleen</c><00:00:10.769><c> and</c><00:00:11.010><c> today</c><00:00:11.880><c> we're</c>

00:00:12.140 --> 00:00:12.150 align:start position:0%
my colleague Colleen and today we're
 

00:00:12.150 --> 00:00:14.240 align:start position:0%
my colleague Colleen and today we're
going<00:00:12.330><c> to</c><00:00:12.389><c> be</c><00:00:12.630><c> going</c><00:00:12.780><c> over</c><00:00:13.019><c> what's</c><00:00:13.679><c> new</c><00:00:13.889><c> with</c>

00:00:14.240 --> 00:00:14.250 align:start position:0%
going to be going over what's new with
 

00:00:14.250 --> 00:00:16.430 align:start position:0%
going to be going over what's new with
the<00:00:14.400><c> Android</c><00:00:14.670><c> runtime</c><00:00:14.910><c> on</c><00:00:15.480><c> Android</c><00:00:15.960><c> also</c>

00:00:16.430 --> 00:00:16.440 align:start position:0%
the Android runtime on Android also
 

00:00:16.440 --> 00:00:23.420 align:start position:0%
the Android runtime on Android also
known<00:00:16.800><c> as</c><00:00:16.949><c> art</c><00:00:19.430><c> so</c><00:00:20.430><c> what</c><00:00:21.210><c> is</c><00:00:21.420><c> art</c><00:00:21.830><c> well</c><00:00:22.830><c> art</c><00:00:23.220><c> is</c>

00:00:23.420 --> 00:00:23.430 align:start position:0%
known as art so what is art well art is
 

00:00:23.430 --> 00:00:25.730 align:start position:0%
known as art so what is art well art is
the<00:00:23.670><c> software</c><00:00:24.150><c> layer</c><00:00:24.359><c> in</c><00:00:24.630><c> between</c><00:00:24.740><c> the</c>

00:00:25.730 --> 00:00:25.740 align:start position:0%
the software layer in between the
 

00:00:25.740 --> 00:00:28.640 align:start position:0%
the software layer in between the
applications<00:00:26.340><c> and</c><00:00:26.519><c> the</c><00:00:26.580><c> operating</c><00:00:27.269><c> system</c><00:00:27.689><c> it</c>

00:00:28.640 --> 00:00:28.650 align:start position:0%
applications and the operating system it
 

00:00:28.650 --> 00:00:31.370 align:start position:0%
applications and the operating system it
provides<00:00:29.099><c> mechanisms</c><00:00:29.789><c> for</c><00:00:30.449><c> executing</c><00:00:30.900><c> java</c>

00:00:31.370 --> 00:00:31.380 align:start position:0%
provides mechanisms for executing java
 

00:00:31.380 --> 00:00:35.450 align:start position:0%
provides mechanisms for executing java
language<00:00:31.619><c> and</c><00:00:32.160><c> call</c><00:00:32.940><c> in</c><00:00:33.149><c> applications</c><00:00:34.460><c> to</c>

00:00:35.450 --> 00:00:35.460 align:start position:0%
language and call in applications to
 

00:00:35.460 --> 00:00:38.619 align:start position:0%
language and call in applications to
accomplish<00:00:35.880><c> this</c><00:00:36.120><c> art</c><00:00:37.020><c> does</c><00:00:37.350><c> two</c><00:00:37.590><c> things</c><00:00:37.620><c> it</c>

00:00:38.619 --> 00:00:38.629 align:start position:0%
accomplish this art does two things it
 

00:00:38.629 --> 00:00:41.660 align:start position:0%
accomplish this art does two things it
executes<00:00:39.629><c> text</c><00:00:40.050><c> files</c><00:00:40.260><c> the</c><00:00:41.070><c> intermediate</c>

00:00:41.660 --> 00:00:41.670 align:start position:0%
executes text files the intermediate
 

00:00:41.670 --> 00:00:43.790 align:start position:0%
executes text files the intermediate
representation<00:00:42.480><c> of</c><00:00:42.629><c> android</c><00:00:43.170><c> applications</c>

00:00:43.790 --> 00:00:43.800 align:start position:0%
representation of android applications
 

00:00:43.800 --> 00:00:46.479 align:start position:0%
representation of android applications
through<00:00:44.579><c> a</c><00:00:44.610><c> hybrid</c><00:00:45.149><c> model</c><00:00:45.329><c> consisting</c><00:00:46.200><c> of</c>

00:00:46.479 --> 00:00:46.489 align:start position:0%
through a hybrid model consisting of
 

00:00:46.489 --> 00:00:49.700 align:start position:0%
through a hybrid model consisting of
interpretation<00:00:48.260><c> just-in-time</c><00:00:49.260><c> compilation</c>

00:00:49.700 --> 00:00:49.710 align:start position:0%
interpretation just-in-time compilation
 

00:00:49.710 --> 00:00:52.490 align:start position:0%
interpretation just-in-time compilation
and<00:00:50.480><c> profile</c><00:00:51.480><c> based</c><00:00:51.750><c> ahead</c><00:00:52.170><c> of</c><00:00:52.289><c> time</c>

00:00:52.490 --> 00:00:52.500 align:start position:0%
and profile based ahead of time
 

00:00:52.500 --> 00:00:56.810 align:start position:0%
and profile based ahead of time
compilation<00:00:54.620><c> art</c><00:00:55.620><c> also</c><00:00:56.160><c> does</c><00:00:56.489><c> memory</c>

00:00:56.810 --> 00:00:56.820 align:start position:0%
compilation art also does memory
 

00:00:56.820 --> 00:00:58.520 align:start position:0%
compilation art also does memory
management<00:00:57.180><c> for</c><00:00:57.629><c> Android</c><00:00:57.960><c> applications</c>

00:00:58.520 --> 00:00:58.530 align:start position:0%
management for Android applications
 

00:00:58.530 --> 00:01:01.160 align:start position:0%
management for Android applications
through<00:00:58.890><c> an</c><00:00:59.100><c> automatic</c><00:01:00.170><c> automatic</c>

00:01:01.160 --> 00:01:01.170 align:start position:0%
through an automatic automatic
 

00:01:01.170 --> 00:01:04.539 align:start position:0%
through an automatic automatic
reclamation<00:01:02.129><c> through</c><00:01:02.489><c> a</c><00:01:02.579><c> garbage</c><00:01:02.910><c> collector</c>

00:01:04.539 --> 00:01:04.549 align:start position:0%
reclamation through a garbage collector
 

00:01:04.549 --> 00:01:07.280 align:start position:0%
reclamation through a garbage collector
this<00:01:05.549><c> is</c><00:01:05.729><c> a</c><00:01:05.760><c> concurrent</c><00:01:06.360><c> compacting</c><00:01:06.900><c> garbage</c>

00:01:07.280 --> 00:01:07.290 align:start position:0%
this is a concurrent compacting garbage
 

00:01:07.290 --> 00:01:09.020 align:start position:0%
this is a concurrent compacting garbage
collector<00:01:07.710><c> so</c><00:01:08.040><c> that</c><00:01:08.189><c> there</c><00:01:08.310><c> is</c><00:01:08.400><c> less</c><00:01:08.430><c> jank</c><00:01:08.850><c> for</c>

00:01:09.020 --> 00:01:09.030 align:start position:0%
collector so that there is less jank for
 

00:01:09.030 --> 00:01:14.480 align:start position:0%
collector so that there is less jank for
your<00:01:09.119><c> applications</c><00:01:12.680><c> now</c><00:01:13.680><c> let's</c><00:01:14.070><c> look</c><00:01:14.250><c> at</c><00:01:14.310><c> how</c>

00:01:14.480 --> 00:01:14.490 align:start position:0%
your applications now let's look at how
 

00:01:14.490 --> 00:01:16.429 align:start position:0%
your applications now let's look at how
art<00:01:14.820><c> has</c><00:01:14.880><c> changed</c><00:01:15.360><c> over</c><00:01:15.540><c> the</c><00:01:15.659><c> last</c><00:01:15.750><c> few</c><00:01:16.200><c> years</c>

00:01:16.429 --> 00:01:16.439 align:start position:0%
art has changed over the last few years
 

00:01:16.439 --> 00:01:19.429 align:start position:0%
art has changed over the last few years
over<00:01:17.600><c> the</c><00:01:18.600><c> years</c><00:01:18.630><c> there</c><00:01:19.110><c> have</c><00:01:19.140><c> been</c><00:01:19.229><c> many</c>

00:01:19.429 --> 00:01:19.439 align:start position:0%
over the years there have been many
 

00:01:19.439 --> 00:01:22.550 align:start position:0%
over the years there have been many
improvements<00:01:19.799><c> to</c><00:01:20.130><c> art</c><00:01:20.280><c> in</c><00:01:20.700><c> new</c><00:01:21.200><c> got</c><00:01:22.200><c> we</c>

00:01:22.550 --> 00:01:22.560 align:start position:0%
improvements to art in new got we
 

00:01:22.560 --> 00:01:25.100 align:start position:0%
improvements to art in new got we
introduced<00:01:23.040><c> profile</c><00:01:23.790><c> guided</c><00:01:24.210><c> compilation</c><00:01:24.869><c> to</c>

00:01:25.100 --> 00:01:25.110 align:start position:0%
introduced profile guided compilation to
 

00:01:25.110 --> 00:01:27.710 align:start position:0%
introduced profile guided compilation to
improve<00:01:25.439><c> applications</c><00:01:26.159><c> startup</c><00:01:26.610><c> time</c><00:01:26.850><c> reduce</c>

00:01:27.710 --> 00:01:27.720 align:start position:0%
improve applications startup time reduce
 

00:01:27.720 --> 00:01:29.840 align:start position:0%
improve applications startup time reduce
memory<00:01:28.110><c> usage</c><00:01:28.500><c> and</c><00:01:28.710><c> reduce</c><00:01:29.460><c> storage</c>

00:01:29.840 --> 00:01:29.850 align:start position:0%
memory usage and reduce storage
 

00:01:29.850 --> 00:01:34.640 align:start position:0%
memory usage and reduce storage
requirements<00:01:31.970><c> also</c><00:01:32.970><c> in</c><00:01:33.390><c> new</c><00:01:33.479><c> got</c><00:01:33.689><c> we</c><00:01:34.170><c> added</c><00:01:34.530><c> a</c>

00:01:34.640 --> 00:01:34.650 align:start position:0%
requirements also in new got we added a
 

00:01:34.650 --> 00:01:38.090 align:start position:0%
requirements also in new got we added a
a<00:01:34.979><c> gyp</c><00:01:35.460><c> much</c><00:01:36.270><c> like</c><00:01:36.479><c> dalvik</c><00:01:36.840><c> used</c><00:01:36.990><c> to</c><00:01:37.110><c> have</c><00:01:37.290><c> this</c>

00:01:38.090 --> 00:01:38.100 align:start position:0%
a gyp much like dalvik used to have this
 

00:01:38.100 --> 00:01:39.230 align:start position:0%
a gyp much like dalvik used to have this
was<00:01:38.310><c> done</c><00:01:38.490><c> to</c><00:01:38.640><c> remove</c><00:01:38.909><c> the</c><00:01:39.060><c> need</c><00:01:39.180><c> for</c>

00:01:39.230 --> 00:01:39.240 align:start position:0%
was done to remove the need for
 

00:01:39.240 --> 00:01:42.050 align:start position:0%
was done to remove the need for
optimizing<00:01:39.960><c> apps</c><00:01:40.320><c> that</c><00:01:41.070><c> was</c><00:01:41.220><c> kind</c><00:01:41.670><c> of</c><00:01:41.759><c> a</c><00:01:41.850><c> big</c>

00:01:42.050 --> 00:01:42.060 align:start position:0%
optimizing apps that was kind of a big
 

00:01:42.060 --> 00:01:44.679 align:start position:0%
optimizing apps that was kind of a big
problem<00:01:42.240><c> during</c><00:01:42.720><c> Android</c><00:01:43.110><c> system</c><00:01:43.439><c> updates</c>

00:01:44.679 --> 00:01:44.689 align:start position:0%
problem during Android system updates
 

00:01:44.689 --> 00:01:49.190 align:start position:0%
problem during Android system updates
and<00:01:46.310><c> in</c><00:01:47.310><c> Oreo</c><00:01:47.670><c> we</c><00:01:48.090><c> added</c><00:01:48.390><c> a</c><00:01:48.479><c> new</c><00:01:48.509><c> concurrent</c>

00:01:49.190 --> 00:01:49.200 align:start position:0%
and in Oreo we added a new concurrent
 

00:01:49.200 --> 00:01:51.710 align:start position:0%
and in Oreo we added a new concurrent
compacting<00:01:49.770><c> garbage</c><00:01:50.130><c> collector</c><00:01:50.579><c> to</c><00:01:51.420><c> reduce</c>

00:01:51.710 --> 00:01:51.720 align:start position:0%
compacting garbage collector to reduce
 

00:01:51.720 --> 00:01:54.830 align:start position:0%
compacting garbage collector to reduce
ram<00:01:51.990><c> requirements</c><00:01:52.710><c> have</c><00:01:53.490><c> less</c><00:01:54.000><c> jank</c><00:01:54.329><c> as</c><00:01:54.570><c> well</c>

00:01:54.830 --> 00:01:54.840 align:start position:0%
ram requirements have less jank as well
 

00:01:54.840 --> 00:01:58.340 align:start position:0%
ram requirements have less jank as well
as<00:01:54.990><c> accelerate</c><00:01:55.470><c> allocations</c><00:01:56.180><c> as</c><00:01:57.180><c> you</c><00:01:58.049><c> can</c><00:01:58.200><c> see</c>

00:01:58.340 --> 00:01:58.350 align:start position:0%
as accelerate allocations as you can see
 

00:01:58.350 --> 00:02:00.679 align:start position:0%
as accelerate allocations as you can see
here<00:01:58.500><c> on</c><00:01:58.590><c> the</c><00:01:58.710><c> slide</c><00:01:59.149><c> this</c><00:02:00.149><c> new</c><00:02:00.420><c> garbage</c>

00:02:00.679 --> 00:02:00.689 align:start position:0%
here on the slide this new garbage
 

00:02:00.689 --> 00:02:03.109 align:start position:0%
here on the slide this new garbage
collector<00:02:01.259><c> and</c><00:02:01.409><c> they</c><00:02:01.860><c> build</c><00:02:02.040><c> a</c><00:02:02.159><c> new</c><00:02:02.310><c> one</c>

00:02:03.109 --> 00:02:03.119 align:start position:0%
collector and they build a new one
 

00:02:03.119 --> 00:02:05.810 align:start position:0%
collector and they build a new one
pointer<00:02:03.420><c> allocator</c><00:02:03.869><c> that</c><00:02:04.619><c> is</c><00:02:04.770><c> 17</c><00:02:05.460><c> times</c>

00:02:05.810 --> 00:02:05.820 align:start position:0%
pointer allocator that is 17 times
 

00:02:05.820 --> 00:02:08.449 align:start position:0%
pointer allocator that is 17 times
faster<00:02:06.479><c> than</c><00:02:06.960><c> the</c><00:02:07.110><c> allocator</c><00:02:07.469><c> in</c><00:02:07.710><c> dalvik</c><00:02:07.920><c> or</c>

00:02:08.449 --> 00:02:08.459 align:start position:0%
faster than the allocator in dalvik or
 

00:02:08.459 --> 00:02:11.260 align:start position:0%
faster than the allocator in dalvik or
in<00:02:08.759><c> KitKat</c>

00:02:11.260 --> 00:02:11.270 align:start position:0%
 
 

00:02:11.270 --> 00:02:14.240 align:start position:0%
 
now<00:02:12.290><c> we</c><00:02:13.290><c> talked</c><00:02:13.530><c> about</c><00:02:13.650><c> what</c><00:02:13.860><c> happened</c><00:02:14.100><c> in</c><00:02:14.190><c> the</c>

00:02:14.240 --> 00:02:14.250 align:start position:0%
now we talked about what happened in the
 

00:02:14.250 --> 00:02:18.050 align:start position:0%
now we talked about what happened in the
past<00:02:14.430><c> the</c><00:02:14.790><c> West</c><00:02:14.970><c> Loop</c><00:02:15.240><c> in</c><00:02:15.420><c> Android</c><00:02:15.720><c> P</c><00:02:16.910><c> first</c><00:02:17.910><c> of</c>

00:02:18.050 --> 00:02:18.060 align:start position:0%
past the West Loop in Android P first of
 

00:02:18.060 --> 00:02:20.540 align:start position:0%
past the West Loop in Android P first of
all<00:02:18.210><c> there</c><00:02:18.600><c> are</c><00:02:18.630><c> new</c><00:02:18.960><c> compiler</c><00:02:19.590><c> optimizations</c>

00:02:20.540 --> 00:02:20.550 align:start position:0%
all there are new compiler optimizations
 

00:02:20.550 --> 00:02:22.910 align:start position:0%
all there are new compiler optimizations
to<00:02:20.790><c> help</c><00:02:21.360><c> accelerate</c><00:02:21.780><c> the</c><00:02:22.080><c> performance</c><00:02:22.320><c> of</c>

00:02:22.910 --> 00:02:22.920 align:start position:0%
to help accelerate the performance of
 

00:02:22.920 --> 00:02:26.240 align:start position:0%
to help accelerate the performance of
calling<00:02:23.340><c> code</c><00:02:23.550><c> in</c><00:02:23.760><c> Android</c><00:02:24.950><c> this</c><00:02:25.950><c> is</c>

00:02:26.240 --> 00:02:26.250 align:start position:0%
calling code in Android this is
 

00:02:26.250 --> 00:02:28.520 align:start position:0%
calling code in Android this is
especially<00:02:26.640><c> important</c><00:02:27.510><c> since</c><00:02:27.690><c> Collin</c><00:02:28.380><c> is</c><00:02:28.500><c> a</c>

00:02:28.520 --> 00:02:28.530 align:start position:0%
especially important since Collin is a
 

00:02:28.530 --> 00:02:31.040 align:start position:0%
especially important since Collin is a
first-class<00:02:29.240><c> programming</c><00:02:30.240><c> language</c><00:02:30.630><c> for</c>

00:02:31.040 --> 00:02:31.050 align:start position:0%
first-class programming language for
 

00:02:31.050 --> 00:02:35.210 align:start position:0%
first-class programming language for
Android<00:02:31.500><c> development</c><00:02:33.380><c> next</c><00:02:34.380><c> up</c><00:02:34.560><c> we</c><00:02:35.190><c> have</c>

00:02:35.210 --> 00:02:35.220 align:start position:0%
Android development next up we have
 

00:02:35.220 --> 00:02:38.180 align:start position:0%
Android development next up we have
memory<00:02:35.760><c> and</c><00:02:36.030><c> storage</c><00:02:36.330><c> optimizations</c><00:02:37.290><c> to</c><00:02:37.530><c> help</c>

00:02:38.180 --> 00:02:38.190 align:start position:0%
memory and storage optimizations to help
 

00:02:38.190 --> 00:02:40.640 align:start position:0%
memory and storage optimizations to help
entry-level<00:02:38.550><c> devices</c><00:02:39.330><c> such</c><00:02:39.990><c> as</c><00:02:40.140><c> Android</c><00:02:40.380><c> Go</c>

00:02:40.640 --> 00:02:40.650 align:start position:0%
entry-level devices such as Android Go
 

00:02:40.650 --> 00:02:43.130 align:start position:0%
entry-level devices such as Android Go
devices<00:02:41.240><c> this</c><00:02:42.240><c> is</c><00:02:42.300><c> important</c><00:02:42.900><c> to</c><00:02:43.050><c> help</c>

00:02:43.130 --> 00:02:43.140 align:start position:0%
devices this is important to help
 

00:02:43.140 --> 00:02:44.480 align:start position:0%
devices this is important to help
improve<00:02:43.470><c> the</c><00:02:43.680><c> performance</c><00:02:43.830><c> for</c><00:02:44.400><c> the</c><00:02:44.460><c> next</c>

00:02:44.480 --> 00:02:44.490 align:start position:0%
improve the performance for the next
 

00:02:44.490 --> 00:02:49.250 align:start position:0%
improve the performance for the next
billion<00:02:44.910><c> users</c><00:02:45.180><c> and</c><00:02:47.210><c> finally</c><00:02:48.210><c> we</c><00:02:48.720><c> have</c><00:02:48.900><c> cloud</c>

00:02:49.250 --> 00:02:49.260 align:start position:0%
billion users and finally we have cloud
 

00:02:49.260 --> 00:02:53.000 align:start position:0%
billion users and finally we have cloud
profiles<00:02:50.690><c> device</c><00:02:51.690><c> collected</c><00:02:52.290><c> profiles</c><00:02:52.740><c> from</c>

00:02:53.000 --> 00:02:53.010 align:start position:0%
profiles device collected profiles from
 

00:02:53.010 --> 00:02:55.250 align:start position:0%
profiles device collected profiles from
the<00:02:53.100><c> just-in-time</c><00:02:53.580><c> compiler</c><00:02:54.240><c> are</c><00:02:54.630><c> uploaded</c>

00:02:55.250 --> 00:02:55.260 align:start position:0%
the just-in-time compiler are uploaded
 

00:02:55.260 --> 00:02:58.190 align:start position:0%
the just-in-time compiler are uploaded
and<00:02:55.440><c> aggregated</c><00:02:56.400><c> in</c><00:02:56.550><c> the</c><00:02:56.730><c> cloud</c><00:02:57.000><c> to</c><00:02:57.810><c> enable</c>

00:02:58.190 --> 00:02:58.200 align:start position:0%
and aggregated in the cloud to enable
 

00:02:58.200 --> 00:03:00.290 align:start position:0%
and aggregated in the cloud to enable
faster<00:02:58.740><c> performance</c><00:02:59.370><c> directly</c><00:02:59.820><c> after</c>

00:03:00.290 --> 00:03:00.300 align:start position:0%
faster performance directly after
 

00:03:00.300 --> 00:03:06.080 align:start position:0%
faster performance directly after
installation<00:03:00.630><c> of</c><00:03:01.110><c> applications</c><00:03:04.700><c> ok</c><00:03:05.700><c> so</c><00:03:05.760><c> let's</c>

00:03:06.080 --> 00:03:06.090 align:start position:0%
installation of applications ok so let's
 

00:03:06.090 --> 00:03:09.920 align:start position:0%
installation of applications ok so let's
start<00:03:06.180><c> with</c><00:03:06.420><c> Collin</c><00:03:08.240><c> last</c><00:03:09.240><c> year</c><00:03:09.510><c> we</c><00:03:09.780><c> announced</c>

00:03:09.920 --> 00:03:09.930 align:start position:0%
start with Collin last year we announced
 

00:03:09.930 --> 00:03:11.960 align:start position:0%
start with Collin last year we announced
Collin<00:03:10.440><c> as</c><00:03:10.590><c> a</c><00:03:10.650><c> first</c><00:03:11.070><c> class</c><00:03:11.280><c> officially</c>

00:03:11.960 --> 00:03:11.970 align:start position:0%
Collin as a first class officially
 

00:03:11.970 --> 00:03:13.580 align:start position:0%
Collin as a first class officially
supported<00:03:12.450><c> programming</c><00:03:12.900><c> language</c><00:03:13.290><c> for</c>

00:03:13.580 --> 00:03:13.590 align:start position:0%
supported programming language for
 

00:03:13.590 --> 00:03:15.140 align:start position:0%
supported programming language for
Android<00:03:13.890><c> development</c><00:03:14.280><c> and</c><00:03:14.550><c> then</c><00:03:14.700><c> we</c><00:03:14.730><c> began</c><00:03:15.090><c> to</c>

00:03:15.140 --> 00:03:15.150 align:start position:0%
Android development and then we began to
 

00:03:15.150 --> 00:03:18.620 align:start position:0%
Android development and then we began to
investigate<00:03:15.870><c> the</c><00:03:15.990><c> performance</c><00:03:17.120><c> why</c><00:03:18.120><c> Collin</c>

00:03:18.620 --> 00:03:18.630 align:start position:0%
investigate the performance why Collin
 

00:03:18.630 --> 00:03:21.100 align:start position:0%
investigate the performance why Collin
you<00:03:18.750><c> might</c><00:03:18.900><c> ask</c><00:03:19.080><c> well</c><00:03:19.830><c> Collin</c><00:03:20.340><c> is</c><00:03:20.490><c> a</c><00:03:20.520><c> safe</c>

00:03:21.100 --> 00:03:21.110 align:start position:0%
you might ask well Collin is a safe
 

00:03:21.110 --> 00:03:23.540 align:start position:0%
you might ask well Collin is a safe
expressive<00:03:22.110><c> concise</c><00:03:22.680><c> object-oriented</c>

00:03:23.540 --> 00:03:23.550 align:start position:0%
expressive concise object-oriented
 

00:03:23.550 --> 00:03:26.360 align:start position:0%
expressive concise object-oriented
language<00:03:24.180><c> that</c><00:03:24.900><c> is</c><00:03:25.050><c> designed</c><00:03:25.980><c> to</c><00:03:26.280><c> be</c>

00:03:26.360 --> 00:03:26.370 align:start position:0%
language that is designed to be
 

00:03:26.370 --> 00:03:30.890 align:start position:0%
language that is designed to be
interoperable<00:03:26.670><c> with</c><00:03:27.090><c> Java</c><00:03:27.300><c> language</c><00:03:29.900><c> the</c>

00:03:30.890 --> 00:03:30.900 align:start position:0%
interoperable with Java language the
 

00:03:30.900 --> 00:03:33.980 align:start position:0%
interoperable with Java language the
reason<00:03:31.220><c> art</c><00:03:32.220><c> focuses</c><00:03:32.730><c> on</c><00:03:32.850><c> optimizing</c><00:03:33.450><c> Collin</c>

00:03:33.980 --> 00:03:33.990 align:start position:0%
reason art focuses on optimizing Collin
 

00:03:33.990 --> 00:03:36.890 align:start position:0%
reason art focuses on optimizing Collin
so<00:03:34.560><c> that</c><00:03:34.710><c> the</c><00:03:34.860><c> developers</c><00:03:35.460><c> can</c><00:03:36.300><c> leverage</c><00:03:36.540><c> all</c>

00:03:36.890 --> 00:03:36.900 align:start position:0%
so that the developers can leverage all
 

00:03:36.900 --> 00:03:38.780 align:start position:0%
so that the developers can leverage all
of<00:03:36.930><c> these</c><00:03:37.170><c> language</c><00:03:37.560><c> features</c><00:03:37.890><c> while</c><00:03:38.430><c> still</c>

00:03:38.780 --> 00:03:38.790 align:start position:0%
of these language features while still
 

00:03:38.790 --> 00:03:43.840 align:start position:0%
of these language features while still
having<00:03:38.970><c> fast</c><00:03:39.450><c> and</c><00:03:39.780><c> jank-free</c><00:03:40.110><c> applications</c>

00:03:43.840 --> 00:03:43.850 align:start position:0%
 
 

00:03:43.850 --> 00:03:46.250 align:start position:0%
 
let's<00:03:44.850><c> see</c><00:03:45.000><c> how</c><00:03:45.180><c> it</c><00:03:45.300><c> Collin</c><00:03:45.630><c> optimizations</c>

00:03:46.250 --> 00:03:46.260 align:start position:0%
let's see how it Collin optimizations
 

00:03:46.260 --> 00:03:47.930 align:start position:0%
let's see how it Collin optimizations
are<00:03:46.470><c> normally</c><00:03:46.800><c> performed</c><00:03:47.340><c> inside</c><00:03:47.700><c> of</c><00:03:47.850><c> the</c>

00:03:47.930 --> 00:03:47.940 align:start position:0%
are normally performed inside of the
 

00:03:47.940 --> 00:03:51.350 align:start position:0%
are normally performed inside of the
Android<00:03:48.210><c> runtime</c><00:03:49.550><c> usually</c><00:03:50.550><c> optimizations</c>

00:03:51.350 --> 00:03:51.360 align:start position:0%
Android runtime usually optimizations
 

00:03:51.360 --> 00:03:53.120 align:start position:0%
Android runtime usually optimizations
are<00:03:51.540><c> performed</c><00:03:51.990><c> in</c><00:03:52.080><c> an</c><00:03:52.230><c> investigative</c><00:03:52.890><c> manner</c>

00:03:53.120 --> 00:03:53.130 align:start position:0%
are performed in an investigative manner
 

00:03:53.130 --> 00:03:55.310 align:start position:0%
are performed in an investigative manner
and<00:03:53.430><c> there's</c><00:03:54.060><c> an</c><00:03:54.150><c> order</c><00:03:54.450><c> of</c><00:03:54.540><c> preference</c><00:03:54.840><c> for</c>

00:03:55.310 --> 00:03:55.320 align:start position:0%
and there's an order of preference for
 

00:03:55.320 --> 00:03:57.200 align:start position:0%
and there's an order of preference for
fixing<00:03:55.650><c> performance</c><00:03:56.220><c> issues</c><00:03:56.580><c> so</c><00:03:56.970><c> that</c><00:03:57.000><c> the</c>

00:03:57.200 --> 00:03:57.210 align:start position:0%
fixing performance issues so that the
 

00:03:57.210 --> 00:03:59.690 align:start position:0%
fixing performance issues so that the
most<00:03:57.420><c> amount</c><00:03:57.780><c> of</c><00:03:57.930><c> Collin</c><00:03:58.320><c> applications</c><00:03:58.950><c> can</c>

00:03:59.690 --> 00:03:59.700 align:start position:0%
most amount of Collin applications can
 

00:03:59.700 --> 00:04:02.380 align:start position:0%
most amount of Collin applications can
actually<00:04:00.090><c> benefit</c><00:04:00.540><c> from</c><00:04:00.780><c> the</c><00:04:00.900><c> optimization</c>

00:04:02.380 --> 00:04:02.390 align:start position:0%
actually benefit from the optimization
 

00:04:02.390 --> 00:04:05.630 align:start position:0%
actually benefit from the optimization
the<00:04:03.390><c> preferred</c><00:04:03.750><c> option</c><00:04:03.960><c> is</c><00:04:04.490><c> fixing</c><00:04:05.490><c> a</c>

00:04:05.630 --> 00:04:05.640 align:start position:0%
the preferred option is fixing a
 

00:04:05.640 --> 00:04:07.520 align:start position:0%
the preferred option is fixing a
performance<00:04:06.150><c> issue</c><00:04:06.330><c> inside</c><00:04:06.870><c> of</c><00:04:07.080><c> call</c><00:04:07.260><c> link</c>

00:04:07.520 --> 00:04:07.530 align:start position:0%
performance issue inside of call link
 

00:04:07.530 --> 00:04:10.280 align:start position:0%
performance issue inside of call link
and<00:04:07.740><c> calling</c><00:04:08.730><c> is</c><00:04:08.910><c> the</c><00:04:08.940><c> compiler</c><00:04:09.360><c> developed</c><00:04:10.170><c> to</c>

00:04:10.280 --> 00:04:10.290 align:start position:0%
and calling is the compiler developed to
 

00:04:10.290 --> 00:04:13.520 align:start position:0%
and calling is the compiler developed to
byte<00:04:10.470><c> jetbrains</c><00:04:11.930><c> Google</c><00:04:12.930><c> and</c><00:04:13.080><c> Jeff</c><00:04:13.200><c> reigns</c><00:04:13.380><c> of</c>

00:04:13.520 --> 00:04:13.530 align:start position:0%
byte jetbrains Google and Jeff reigns of
 

00:04:13.530 --> 00:04:15.560 align:start position:0%
byte jetbrains Google and Jeff reigns of
course<00:04:13.770><c> work</c><00:04:13.980><c> closely</c><00:04:14.280><c> together</c><00:04:14.550><c> on</c><00:04:14.970><c> all</c>

00:04:15.560 --> 00:04:15.570 align:start position:0%
course work closely together on all
 

00:04:15.570 --> 00:04:17.750 align:start position:0%
course work closely together on all
kinds<00:04:15.900><c> of</c><00:04:15.990><c> optimizations</c><00:04:16.739><c> and</c><00:04:16.980><c> fixes</c><00:04:17.549><c> for</c>

00:04:17.750 --> 00:04:17.760 align:start position:0%
kinds of optimizations and fixes for
 

00:04:17.760 --> 00:04:20.720 align:start position:0%
kinds of optimizations and fixes for
issues<00:04:18.500><c> if</c><00:04:19.500><c> we</c><00:04:19.590><c> fix</c><00:04:19.980><c> a</c><00:04:20.160><c> performance</c><00:04:20.580><c> issue</c>

00:04:20.720 --> 00:04:20.730 align:start position:0%
issues if we fix a performance issue
 

00:04:20.730 --> 00:04:22.909 align:start position:0%
issues if we fix a performance issue
here<00:04:21.060><c> it'll</c><00:04:21.419><c> be</c><00:04:21.690><c> able</c><00:04:21.870><c> to</c><00:04:22.020><c> be</c><00:04:22.290><c> deployed</c><00:04:22.440><c> to</c><00:04:22.890><c> the</c>

00:04:22.909 --> 00:04:22.919 align:start position:0%
here it'll be able to be deployed to the
 

00:04:22.919 --> 00:04:23.750 align:start position:0%
here it'll be able to be deployed to the
most<00:04:23.190><c> amount</c><00:04:23.430><c> of</c>

00:04:23.750 --> 00:04:23.760 align:start position:0%
most amount of
 

00:04:23.760 --> 00:04:27.500 align:start position:0%
most amount of
applications<00:04:25.940><c> alternatively</c><00:04:26.940><c> if</c><00:04:27.300><c> that</c>

00:04:27.500 --> 00:04:27.510 align:start position:0%
applications alternatively if that
 

00:04:27.510 --> 00:04:29.990 align:start position:0%
applications alternatively if that
doesn't<00:04:27.870><c> work</c><00:04:28.020><c> then</c><00:04:28.950><c> we</c><00:04:29.100><c> consider</c><00:04:29.490><c> fixing</c><00:04:29.760><c> the</c>

00:04:29.990 --> 00:04:30.000 align:start position:0%
doesn't work then we consider fixing the
 

00:04:30.000 --> 00:04:31.640 align:start position:0%
doesn't work then we consider fixing the
performance<00:04:30.480><c> issue</c><00:04:30.630><c> inside</c><00:04:31.140><c> of</c><00:04:31.260><c> byte</c><00:04:31.440><c> code</c>

00:04:31.640 --> 00:04:31.650 align:start position:0%
performance issue inside of byte code
 

00:04:31.650 --> 00:04:34.880 align:start position:0%
performance issue inside of byte code
converters<00:04:33.350><c> fixing</c><00:04:34.350><c> in</c><00:04:34.470><c> the</c><00:04:34.500><c> by</c><00:04:34.680><c> code</c>

00:04:34.880 --> 00:04:34.890 align:start position:0%
converters fixing in the by code
 

00:04:34.890 --> 00:04:36.860 align:start position:0%
converters fixing in the by code
converter<00:04:35.250><c> will</c><00:04:35.580><c> enable</c><00:04:35.760><c> existing</c><00:04:36.480><c> versions</c>

00:04:36.860 --> 00:04:36.870 align:start position:0%
converter will enable existing versions
 

00:04:36.870 --> 00:04:38.660 align:start position:0%
converter will enable existing versions
of<00:04:36.990><c> the</c><00:04:37.080><c> Android</c><00:04:37.350><c> platform</c><00:04:37.530><c> to</c><00:04:38.430><c> get</c><00:04:38.550><c> the</c>

00:04:38.660 --> 00:04:38.670 align:start position:0%
of the Android platform to get the
 

00:04:38.670 --> 00:04:42.560 align:start position:0%
of the Android platform to get the
performance<00:04:38.970><c> fix</c><00:04:40.040><c> and</c><00:04:41.180><c> if</c><00:04:42.180><c> that</c><00:04:42.330><c> option</c>

00:04:42.560 --> 00:04:42.570 align:start position:0%
performance fix and if that option
 

00:04:42.570 --> 00:04:45.500 align:start position:0%
performance fix and if that option
doesn't<00:04:42.930><c> work</c><00:04:43.250><c> the</c><00:04:44.250><c> last</c><00:04:44.490><c> option</c><00:04:44.730><c> is</c><00:04:45.090><c> to</c><00:04:45.210><c> fix</c>

00:04:45.500 --> 00:04:45.510 align:start position:0%
doesn't work the last option is to fix
 

00:04:45.510 --> 00:04:47.120 align:start position:0%
doesn't work the last option is to fix
the<00:04:45.600><c> performance</c><00:04:46.140><c> issue</c><00:04:46.320><c> and</c><00:04:46.680><c> the</c><00:04:46.860><c> Android</c>

00:04:47.120 --> 00:04:47.130 align:start position:0%
the performance issue and the Android
 

00:04:47.130 --> 00:04:50.450 align:start position:0%
the performance issue and the Android
runtime<00:04:47.340><c> also</c><00:04:47.940><c> known</c><00:04:48.060><c> as</c><00:04:48.210><c> art</c><00:04:48.680><c> so</c><00:04:49.680><c> the</c><00:04:50.160><c> reason</c>

00:04:50.450 --> 00:04:50.460 align:start position:0%
runtime also known as art so the reason
 

00:04:50.460 --> 00:04:52.640 align:start position:0%
runtime also known as art so the reason
that<00:04:50.490><c> we</c><00:04:51.390><c> might</c><00:04:51.780><c> not</c><00:04:51.930><c> want</c><00:04:52.110><c> to</c><00:04:52.170><c> fix</c><00:04:52.350><c> an</c><00:04:52.500><c> art</c>

00:04:52.640 --> 00:04:52.650 align:start position:0%
that we might not want to fix an art
 

00:04:52.650 --> 00:04:54.800 align:start position:0%
that we might not want to fix an art
right<00:04:52.890><c> away</c><00:04:53.100><c> is</c><00:04:53.310><c> because</c><00:04:53.400><c> art</c><00:04:53.970><c> is</c><00:04:54.240><c> updated</c><00:04:54.690><c> as</c>

00:04:54.800 --> 00:04:54.810 align:start position:0%
right away is because art is updated as
 

00:04:54.810 --> 00:04:57.110 align:start position:0%
right away is because art is updated as
part<00:04:55.260><c> of</c><00:04:55.350><c> the</c><00:04:55.470><c> android</c><00:04:55.740><c> platform</c><00:04:56.280><c> so</c><00:04:56.970><c> that</c>

00:04:57.110 --> 00:04:57.120 align:start position:0%
part of the android platform so that
 

00:04:57.120 --> 00:04:59.060 align:start position:0%
part of the android platform so that
means<00:04:57.330><c> that</c><00:04:57.570><c> not</c><00:04:57.930><c> all</c><00:04:58.080><c> devices</c><00:04:58.260><c> will</c><00:04:58.740><c> get</c><00:04:58.920><c> the</c>

00:04:59.060 --> 00:04:59.070 align:start position:0%
means that not all devices will get the
 

00:04:59.070 --> 00:05:05.300 align:start position:0%
means that not all devices will get the
fix<00:05:00.290><c> now</c><00:05:01.290><c> let's</c><00:05:01.560><c> look</c><00:05:01.680><c> at</c><00:05:01.770><c> an</c><00:05:01.920><c> example</c><00:05:04.310><c> one</c>

00:05:05.300 --> 00:05:05.310 align:start position:0%
fix now let's look at an example one
 

00:05:05.310 --> 00:05:07.280 align:start position:0%
fix now let's look at an example one
example<00:05:05.430><c> of</c><00:05:05.940><c> the</c><00:05:06.060><c> calling</c><00:05:06.420><c> optimization</c><00:05:07.140><c> is</c>

00:05:07.280 --> 00:05:07.290 align:start position:0%
example of the calling optimization is
 

00:05:07.290 --> 00:05:10.400 align:start position:0%
example of the calling optimization is
the<00:05:07.470><c> parameter</c><00:05:07.890><c> null</c><00:05:08.160><c> check</c><00:05:08.430><c> as</c><00:05:09.300><c> you</c><00:05:09.900><c> can</c><00:05:10.230><c> see</c>

00:05:10.400 --> 00:05:10.410 align:start position:0%
the parameter null check as you can see
 

00:05:10.410 --> 00:05:12.770 align:start position:0%
the parameter null check as you can see
here<00:05:10.650><c> this</c><00:05:11.280><c> is</c><00:05:11.340><c> a</c><00:05:11.520><c> simple</c><00:05:11.760><c> method</c><00:05:12.300><c> that</c><00:05:12.480><c> just</c>

00:05:12.770 --> 00:05:12.780 align:start position:0%
here this is a simple method that just
 

00:05:12.780 --> 00:05:15.590 align:start position:0%
here this is a simple method that just
returns<00:05:12.930><c> the</c><00:05:13.260><c> length</c><00:05:13.560><c> of</c><00:05:13.800><c> a</c><00:05:13.920><c> string</c><00:05:14.360><c> but</c><00:05:15.360><c> the</c>

00:05:15.590 --> 00:05:15.600 align:start position:0%
returns the length of a string but the
 

00:05:15.600 --> 00:05:19.820 align:start position:0%
returns the length of a string but the
string<00:05:16.050><c> is</c><00:05:16.260><c> nullable</c><00:05:17.900><c> so</c><00:05:18.900><c> what</c><00:05:19.050><c> this</c><00:05:19.230><c> means</c><00:05:19.590><c> is</c>

00:05:19.820 --> 00:05:19.830 align:start position:0%
string is nullable so what this means is
 

00:05:19.830 --> 00:05:21.980 align:start position:0%
string is nullable so what this means is
that<00:05:19.860><c> the</c><00:05:20.070><c> compiler</c><00:05:20.340><c> inserts</c><00:05:21.270><c> a</c><00:05:21.450><c> null</c><00:05:21.690><c> check</c>

00:05:21.980 --> 00:05:21.990 align:start position:0%
that the compiler inserts a null check
 

00:05:21.990 --> 00:05:25.610 align:start position:0%
that the compiler inserts a null check
into<00:05:22.530><c> the</c><00:05:22.650><c> function</c><00:05:23.010><c> byte</c><00:05:23.520><c> code</c><00:05:23.820><c> to</c><00:05:24.630><c> actually</c>

00:05:25.610 --> 00:05:25.620 align:start position:0%
into the function byte code to actually
 

00:05:25.620 --> 00:05:27.290 align:start position:0%
into the function byte code to actually
verify<00:05:26.040><c> that</c><00:05:26.250><c> the</c><00:05:26.370><c> string</c><00:05:26.550><c> is</c><00:05:26.640><c> not</c><00:05:26.670><c> null</c><00:05:27.030><c> and</c>

00:05:27.290 --> 00:05:27.300 align:start position:0%
verify that the string is not null and
 

00:05:27.300 --> 00:05:29.150 align:start position:0%
verify that the string is not null and
throw<00:05:27.810><c> the</c><00:05:27.990><c> corresponding</c><00:05:28.590><c> exception</c><00:05:29.070><c> if</c>

00:05:29.150 --> 00:05:29.160 align:start position:0%
throw the corresponding exception if
 

00:05:29.160 --> 00:05:31.490 align:start position:0%
throw the corresponding exception if
required<00:05:30.110><c> implemented</c><00:05:31.110><c> in</c><00:05:31.200><c> the</c><00:05:31.290><c> byte</c><00:05:31.470><c> code</c>

00:05:31.490 --> 00:05:31.500 align:start position:0%
required implemented in the byte code
 

00:05:31.500 --> 00:05:33.710 align:start position:0%
required implemented in the byte code
the<00:05:31.950><c> first</c><00:05:32.220><c> step</c><00:05:32.430><c> is</c><00:05:32.610><c> loading</c><00:05:33.060><c> the</c><00:05:33.390><c> name</c><00:05:33.570><c> of</c>

00:05:33.710 --> 00:05:33.720 align:start position:0%
the first step is loading the name of
 

00:05:33.720 --> 00:05:35.780 align:start position:0%
the first step is loading the name of
the<00:05:33.810><c> parameter</c><00:05:34.290><c> and</c><00:05:34.410><c> then</c><00:05:35.130><c> invoking</c><00:05:35.670><c> a</c>

00:05:35.780 --> 00:05:35.790 align:start position:0%
the parameter and then invoking a
 

00:05:35.790 --> 00:05:38.630 align:start position:0%
the parameter and then invoking a
separate<00:05:36.240><c> function</c><00:05:36.800><c> to</c><00:05:37.800><c> do</c><00:05:37.950><c> the</c><00:05:37.980><c> actual</c><00:05:38.370><c> null</c>

00:05:38.630 --> 00:05:38.640 align:start position:0%
separate function to do the actual null
 

00:05:38.640 --> 00:05:41.630 align:start position:0%
separate function to do the actual null
check<00:05:39.440><c> there's</c><00:05:40.440><c> some</c><00:05:40.620><c> extra</c><00:05:40.980><c> overhead</c><00:05:41.340><c> here</c>

00:05:41.630 --> 00:05:41.640 align:start position:0%
check there's some extra overhead here
 

00:05:41.640 --> 00:05:43.370 align:start position:0%
check there's some extra overhead here
as<00:05:41.820><c> you</c><00:05:42.060><c> might</c><00:05:42.210><c> see</c><00:05:42.450><c> because</c><00:05:42.810><c> the</c><00:05:43.020><c> invocation</c>

00:05:43.370 --> 00:05:43.380 align:start position:0%
as you might see because the invocation
 

00:05:43.380 --> 00:05:45.710 align:start position:0%
as you might see because the invocation
in<00:05:44.040><c> the</c><00:05:44.520><c> common</c><00:05:44.820><c> case</c><00:05:45.000><c> you</c><00:05:45.150><c> do</c><00:05:45.270><c> the</c><00:05:45.390><c> extra</c>

00:05:45.710 --> 00:05:45.720 align:start position:0%
in the common case you do the extra
 

00:05:45.720 --> 00:05:47.390 align:start position:0%
in the common case you do the extra
invocation<00:05:46.140><c> that</c><00:05:46.410><c> goes</c><00:05:46.620><c> to</c><00:05:46.830><c> the</c><00:05:46.920><c> function</c><00:05:47.310><c> to</c>

00:05:47.390 --> 00:05:47.400 align:start position:0%
invocation that goes to the function to
 

00:05:47.400 --> 00:05:49.580 align:start position:0%
invocation that goes to the function to
do<00:05:47.490><c> the</c><00:05:47.550><c> null</c><00:05:47.730><c> check</c><00:05:48.000><c> in</c><00:05:48.300><c> this</c><00:05:48.990><c> function</c><00:05:49.410><c> in</c>

00:05:49.580 --> 00:05:49.590 align:start position:0%
do the null check in this function in
 

00:05:49.590 --> 00:05:51.590 align:start position:0%
do the null check in this function in
turns<00:05:49.830><c> if</c><00:05:50.100><c> required</c><00:05:50.550><c> called</c><00:05:51.240><c> the</c><00:05:51.390><c> third</c>

00:05:51.590 --> 00:05:51.600 align:start position:0%
turns if required called the third
 

00:05:51.600 --> 00:05:54.080 align:start position:0%
turns if required called the third
function<00:05:51.840><c> the</c><00:05:52.560><c> throw</c><00:05:52.800><c> the</c><00:05:52.950><c> actual</c><00:05:53.370><c> parameter</c>

00:05:54.080 --> 00:05:54.090 align:start position:0%
function the throw the actual parameter
 

00:05:54.090 --> 00:05:58.010 align:start position:0%
function the throw the actual parameter
is<00:05:54.330><c> null</c><00:05:54.660><c> exception</c><00:05:56.450><c> checks</c><00:05:57.450><c> such</c><00:05:57.660><c> as</c><00:05:57.810><c> these</c>

00:05:58.010 --> 00:05:58.020 align:start position:0%
is null exception checks such as these
 

00:05:58.020 --> 00:06:00.170 align:start position:0%
is null exception checks such as these
are<00:05:58.200><c> commonly</c><00:05:58.590><c> required</c><00:05:58.920><c> for</c><00:05:59.460><c> Java</c><00:05:59.700><c> language</c>

00:06:00.170 --> 00:06:00.180 align:start position:0%
are commonly required for Java language
 

00:06:00.180 --> 00:06:02.450 align:start position:0%
are commonly required for Java language
and<00:06:00.630><c> call</c><00:06:00.810><c> an</c><00:06:00.960><c> interoperability</c><00:06:01.590><c> because</c>

00:06:02.450 --> 00:06:02.460 align:start position:0%
and call an interoperability because
 

00:06:02.460 --> 00:06:03.860 align:start position:0%
and call an interoperability because
Java<00:06:02.730><c> language</c><00:06:02.910><c> does</c><00:06:03.300><c> not</c><00:06:03.330><c> have</c><00:06:03.600><c> a</c><00:06:03.630><c> non</c>

00:06:03.860 --> 00:06:03.870 align:start position:0%
Java language does not have a non
 

00:06:03.870 --> 00:06:07.310 align:start position:0%
Java language does not have a non
nullable<00:06:04.260><c> property</c><00:06:05.750><c> now</c><00:06:06.750><c> let's</c><00:06:07.020><c> see</c><00:06:07.140><c> how</c><00:06:07.260><c> we</c>

00:06:07.310 --> 00:06:07.320 align:start position:0%
nullable property now let's see how we
 

00:06:07.320 --> 00:06:10.610 align:start position:0%
nullable property now let's see how we
can<00:06:07.500><c> optimize</c><00:06:07.530><c> this</c><00:06:09.080><c> if</c><00:06:10.080><c> we</c><00:06:10.260><c> look</c><00:06:10.440><c> at</c><00:06:10.530><c> the</c>

00:06:10.610 --> 00:06:10.620 align:start position:0%
can optimize this if we look at the
 

00:06:10.620 --> 00:06:12.260 align:start position:0%
can optimize this if we look at the
bytecode<00:06:10.830><c> one</c><00:06:11.370><c> of</c><00:06:11.460><c> the</c><00:06:11.550><c> first</c><00:06:11.760><c> things</c><00:06:11.970><c> we</c><00:06:12.150><c> can</c>

00:06:12.260 --> 00:06:12.270 align:start position:0%
bytecode one of the first things we can
 

00:06:12.270 --> 00:06:14.420 align:start position:0%
bytecode one of the first things we can
do<00:06:12.420><c> is</c><00:06:12.630><c> actually</c><00:06:12.960><c> inline</c><00:06:13.560><c> the</c><00:06:13.950><c> method</c><00:06:14.310><c> that</c>

00:06:14.420 --> 00:06:14.430 align:start position:0%
do is actually inline the method that
 

00:06:14.430 --> 00:06:16.900 align:start position:0%
do is actually inline the method that
does<00:06:14.580><c> the</c><00:06:14.730><c> null</c><00:06:14.880><c> check</c><00:06:15.090><c> into</c><00:06:15.360><c> the</c><00:06:15.450><c> caller</c>

00:06:16.900 --> 00:06:16.910 align:start position:0%
does the null check into the caller
 

00:06:16.910 --> 00:06:20.420 align:start position:0%
does the null check into the caller
after<00:06:17.910><c> inlining</c><00:06:18.920><c> this</c><00:06:19.920><c> improves</c><00:06:20.280><c> performance</c>

00:06:20.420 --> 00:06:20.430 align:start position:0%
after inlining this improves performance
 

00:06:20.430 --> 00:06:22.550 align:start position:0%
after inlining this improves performance
because<00:06:21.150><c> there's</c><00:06:21.390><c> one</c><00:06:21.570><c> less</c><00:06:21.720><c> invocation</c><00:06:22.200><c> and</c>

00:06:22.550 --> 00:06:22.560 align:start position:0%
because there's one less invocation and
 

00:06:22.560 --> 00:06:24.650 align:start position:0%
because there's one less invocation and
from<00:06:23.100><c> here</c><00:06:23.310><c> you</c><00:06:23.550><c> can</c><00:06:23.670><c> see</c><00:06:23.910><c> one</c><00:06:24.150><c> other</c><00:06:24.270><c> thing</c><00:06:24.570><c> we</c>

00:06:24.650 --> 00:06:24.660 align:start position:0%
from here you can see one other thing we
 

00:06:24.660 --> 00:06:27.020 align:start position:0%
from here you can see one other thing we
can<00:06:24.810><c> do</c><00:06:24.960><c> is</c><00:06:25.200><c> that</c><00:06:25.830><c> the</c><00:06:26.010><c> the</c><00:06:26.580><c> name</c><00:06:26.760><c> of</c><00:06:26.940><c> the</c>

00:06:27.020 --> 00:06:27.030 align:start position:0%
can do is that the the name of the
 

00:06:27.030 --> 00:06:28.850 align:start position:0%
can do is that the the name of the
parameter<00:06:27.210><c> is</c><00:06:27.690><c> not</c><00:06:28.080><c> actually</c><00:06:28.440><c> required</c>

00:06:28.850 --> 00:06:28.860 align:start position:0%
parameter is not actually required
 

00:06:28.860 --> 00:06:32.060 align:start position:0%
parameter is not actually required
unless<00:06:29.460><c> as</c><00:06:29.720><c> argument</c><00:06:30.720><c> is</c><00:06:30.810><c> null</c><00:06:31.020><c> so</c><00:06:31.680><c> from</c><00:06:31.860><c> here</c>

00:06:32.060 --> 00:06:32.070 align:start position:0%
unless as argument is null so from here
 

00:06:32.070 --> 00:06:34.129 align:start position:0%
unless as argument is null so from here
we<00:06:32.550><c> can</c><00:06:32.670><c> do</c><00:06:32.820><c> code</c><00:06:33.060><c> syncing</c>

00:06:34.129 --> 00:06:34.139 align:start position:0%
we can do code syncing
 

00:06:34.139 --> 00:06:36.050 align:start position:0%
we can do code syncing
to<00:06:34.259><c> move</c><00:06:34.469><c> loading</c><00:06:35.159><c> of</c><00:06:35.280><c> the</c><00:06:35.310><c> parameter</c><00:06:35.819><c> name</c>

00:06:36.050 --> 00:06:36.060 align:start position:0%
to move loading of the parameter name
 

00:06:36.060 --> 00:06:39.379 align:start position:0%
to move loading of the parameter name
inside<00:06:36.599><c> of</c><00:06:36.719><c> the</c><00:06:36.810><c> conditional</c><00:06:38.120><c> so</c><00:06:39.120><c> overall</c>

00:06:39.379 --> 00:06:39.389 align:start position:0%
inside of the conditional so overall
 

00:06:39.389 --> 00:06:41.420 align:start position:0%
inside of the conditional so overall
these<00:06:39.689><c> two</c><00:06:39.900><c> optimizations</c><00:06:40.650><c> help</c><00:06:40.949><c> performance</c>

00:06:41.420 --> 00:06:41.430 align:start position:0%
these two optimizations help performance
 

00:06:41.430 --> 00:06:43.550 align:start position:0%
these two optimizations help performance
by<00:06:41.580><c> removing</c><00:06:42.030><c> one</c><00:06:42.180><c> indication</c><00:06:42.599><c> and</c><00:06:43.349><c> Wynonna</c>

00:06:43.550 --> 00:06:43.560 align:start position:0%
by removing one indication and Wynonna
 

00:06:43.560 --> 00:06:48.429 align:start position:0%
by removing one indication and Wynonna
loadings<00:06:44.249><c> of</c><00:06:44.460><c> a</c><00:06:44.580><c> string</c><00:06:44.849><c> literal</c>

00:06:48.429 --> 00:06:48.439 align:start position:0%
 
 

00:06:48.439 --> 00:06:50.869 align:start position:0%
 
apart<00:06:49.439><c> from</c><00:06:49.499><c> this</c><00:06:49.680><c> optimization</c><00:06:50.400><c> we</c><00:06:50.669><c> also</c>

00:06:50.869 --> 00:06:50.879 align:start position:0%
apart from this optimization we also
 

00:06:50.879 --> 00:06:52.730 align:start position:0%
apart from this optimization we also
track<00:06:51.240><c> collin</c><00:06:51.599><c> performance</c><00:06:52.080><c> on</c><00:06:52.259><c> various</c>

00:06:52.730 --> 00:06:52.740 align:start position:0%
track collin performance on various
 

00:06:52.740 --> 00:06:55.489 align:start position:0%
track collin performance on various
benchmarks<00:06:53.749><c> other</c><00:06:54.749><c> improvements</c><00:06:55.289><c> here</c>

00:06:55.489 --> 00:06:55.499 align:start position:0%
benchmarks other improvements here
 

00:06:55.499 --> 00:06:57.739 align:start position:0%
benchmarks other improvements here
include<00:06:56.039><c> improved</c><00:06:56.639><c> auto</c><00:06:56.819><c> vectorization</c><00:06:57.300><c> of</c>

00:06:57.739 --> 00:06:57.749 align:start position:0%
include improved auto vectorization of
 

00:06:57.749 --> 00:07:00.739 align:start position:0%
include improved auto vectorization of
loops<00:06:58.400><c> also</c><00:06:59.400><c> intrinsic</c><00:06:59.879><c> methods</c><00:07:00.360><c> that</c><00:07:00.629><c> are</c>

00:07:00.739 --> 00:07:00.749 align:start position:0%
loops also intrinsic methods that are
 

00:07:00.749 --> 00:07:02.989 align:start position:0%
loops also intrinsic methods that are
specifically<00:07:01.249><c> tailored</c><00:07:02.249><c> for</c><00:07:02.279><c> call</c><00:07:02.610><c> encode</c>

00:07:02.989 --> 00:07:02.999 align:start position:0%
specifically tailored for call encode
 

00:07:02.999 --> 00:07:05.540 align:start position:0%
specifically tailored for call encode
help<00:07:03.360><c> improve</c><00:07:03.629><c> performance</c><00:07:03.749><c> there</c><00:07:04.379><c> so</c><00:07:05.370><c> the</c>

00:07:05.540 --> 00:07:05.550 align:start position:0%
help improve performance there so the
 

00:07:05.550 --> 00:07:06.890 align:start position:0%
help improve performance there so the
art<00:07:05.699><c> team</c><00:07:05.849><c> is</c><00:07:05.969><c> always</c><00:07:06.120><c> working</c><00:07:06.449><c> on</c><00:07:06.569><c> improving</c>

00:07:06.890 --> 00:07:06.900 align:start position:0%
art team is always working on improving
 

00:07:06.900 --> 00:07:12.080 align:start position:0%
art team is always working on improving
this<00:07:07.080><c> performance</c><00:07:10.400><c> okay</c><00:07:11.400><c> now</c><00:07:11.849><c> that</c><00:07:12.000><c> we're</c>

00:07:12.080 --> 00:07:12.090 align:start position:0%
this performance okay now that we're
 

00:07:12.090 --> 00:07:13.610 align:start position:0%
this performance okay now that we're
done<00:07:12.180><c> Colin</c><00:07:12.599><c> what</c><00:07:12.810><c> about</c><00:07:13.020><c> memory</c><00:07:13.319><c> and</c><00:07:13.349><c> storage</c>

00:07:13.610 --> 00:07:13.620 align:start position:0%
done Colin what about memory and storage
 

00:07:13.620 --> 00:07:15.219 align:start position:0%
done Colin what about memory and storage
improvements

00:07:15.219 --> 00:07:15.229 align:start position:0%
improvements
 

00:07:15.229 --> 00:07:17.839 align:start position:0%
improvements
so<00:07:16.229><c> since</c><00:07:16.560><c> art</c><00:07:16.800><c> is</c><00:07:16.919><c> responsible</c><00:07:17.490><c> for</c><00:07:17.520><c> Java</c>

00:07:17.839 --> 00:07:17.849 align:start position:0%
so since art is responsible for Java
 

00:07:17.849 --> 00:07:20.420 align:start position:0%
so since art is responsible for Java
language<00:07:18.060><c> and</c><00:07:18.479><c> Colin</c><00:07:18.840><c> applications</c><00:07:19.439><c> also</c>

00:07:20.420 --> 00:07:20.430 align:start position:0%
language and Colin applications also
 

00:07:20.430 --> 00:07:21.740 align:start position:0%
language and Colin applications also
pretty<00:07:20.610><c> important</c><00:07:21.090><c> to</c><00:07:21.180><c> just</c><00:07:21.360><c> kind</c><00:07:21.539><c> of</c><00:07:21.569><c> make</c>

00:07:21.740 --> 00:07:21.750 align:start position:0%
pretty important to just kind of make
 

00:07:21.750 --> 00:07:23.029 align:start position:0%
pretty important to just kind of make
sure<00:07:21.779><c> that</c><00:07:22.050><c> the</c><00:07:22.169><c> programs</c><00:07:22.529><c> don't</c><00:07:22.740><c> use</c><00:07:22.889><c> too</c>

00:07:23.029 --> 00:07:23.039 align:start position:0%
sure that the programs don't use too
 

00:07:23.039 --> 00:07:24.709 align:start position:0%
sure that the programs don't use too
much<00:07:23.069><c> memory</c><00:07:23.550><c> I'd</c><00:07:23.699><c> take</c><00:07:23.909><c> too</c><00:07:24.060><c> much</c><00:07:24.180><c> space</c><00:07:24.240><c> on</c>

00:07:24.709 --> 00:07:24.719 align:start position:0%
much memory I'd take too much space on
 

00:07:24.719 --> 00:07:27.079 align:start position:0%
much memory I'd take too much space on
the<00:07:24.750><c> device</c><00:07:25.520><c> there</c><00:07:26.520><c> have</c><00:07:26.639><c> been</c><00:07:26.759><c> several</c>

00:07:27.079 --> 00:07:27.089 align:start position:0%
the device there have been several
 

00:07:27.089 --> 00:07:29.140 align:start position:0%
the device there have been several
improvements<00:07:27.659><c> focusing</c><00:07:28.500><c> on</c><00:07:28.650><c> this</c><00:07:28.800><c> area</c>

00:07:29.140 --> 00:07:29.150 align:start position:0%
improvements focusing on this area
 

00:07:29.150 --> 00:07:31.339 align:start position:0%
improvements focusing on this area
including<00:07:30.150><c> reducing</c><00:07:30.599><c> the</c><00:07:30.750><c> amount</c><00:07:30.960><c> of</c><00:07:31.080><c> space</c>

00:07:31.339 --> 00:07:31.349 align:start position:0%
including reducing the amount of space
 

00:07:31.349 --> 00:07:36.700 align:start position:0%
including reducing the amount of space
and<00:07:31.620><c> memory</c><00:07:32.069><c> usage</c><00:07:32.249><c> required</c><00:07:32.909><c> by</c><00:07:33.150><c> Dex</c><00:07:33.360><c> files</c>

00:07:36.700 --> 00:07:36.710 align:start position:0%
 
 

00:07:36.710 --> 00:07:39.559 align:start position:0%
 
now<00:07:37.710><c> why</c><00:07:37.889><c> are</c><00:07:38.069><c> a</c><00:07:38.250><c> mass</c><00:07:38.430><c> storage</c><00:07:38.610><c> import</c><00:07:39.060><c> up</c><00:07:39.360><c> in</c>

00:07:39.559 --> 00:07:39.569 align:start position:0%
now why are a mass storage import up in
 

00:07:39.569 --> 00:07:42.079 align:start position:0%
now why are a mass storage import up in
storage<00:07:40.229><c> optimizations</c><00:07:40.919><c> important</c><00:07:41.370><c> well</c>

00:07:42.079 --> 00:07:42.089 align:start position:0%
storage optimizations important well
 

00:07:42.089 --> 00:07:44.029 align:start position:0%
storage optimizations important well
recall<00:07:42.419><c> a</c><00:07:42.479><c> lot</c><00:07:42.689><c> last</c><00:07:42.870><c> year</c><00:07:43.080><c> we</c><00:07:43.500><c> introduced</c><00:07:43.919><c> a</c>

00:07:44.029 --> 00:07:44.039 align:start position:0%
recall a lot last year we introduced a
 

00:07:44.039 --> 00:07:44.990 align:start position:0%
recall a lot last year we introduced a
new<00:07:44.189><c> initiative</c><00:07:44.400><c> called</c>

00:07:44.990 --> 00:07:45.000 align:start position:0%
new initiative called
 

00:07:45.000 --> 00:07:47.329 align:start position:0%
new initiative called
Android<00:07:45.300><c> go</c><00:07:45.509><c> aiming</c><00:07:46.500><c> at</c><00:07:46.680><c> running</c><00:07:47.039><c> the</c><00:07:47.159><c> latest</c>

00:07:47.329 --> 00:07:47.339 align:start position:0%
Android go aiming at running the latest
 

00:07:47.339 --> 00:07:48.860 align:start position:0%
Android go aiming at running the latest
versions<00:07:47.849><c> of</c><00:07:47.939><c> Android</c><00:07:48.330><c> on</c><00:07:48.539><c> entry-level</c>

00:07:48.860 --> 00:07:48.870 align:start position:0%
versions of Android on entry-level
 

00:07:48.870 --> 00:07:53.119 align:start position:0%
versions of Android on entry-level
devices<00:07:50.870><c> since</c><00:07:51.870><c> these</c><00:07:52.080><c> devices</c><00:07:52.589><c> typically</c>

00:07:53.119 --> 00:07:53.129 align:start position:0%
devices since these devices typically
 

00:07:53.129 --> 00:07:55.399 align:start position:0%
devices since these devices typically
have<00:07:53.399><c> one</c><00:07:53.939><c> gigabyte</c><00:07:54.419><c> or</c><00:07:54.449><c> less</c><00:07:54.750><c> of</c><00:07:54.930><c> RAM</c><00:07:55.139><c> and</c>

00:07:55.399 --> 00:07:55.409 align:start position:0%
have one gigabyte or less of RAM and
 

00:07:55.409 --> 00:07:57.860 align:start position:0%
have one gigabyte or less of RAM and
eight<00:07:55.770><c> gigabytes</c><00:07:56.279><c> or</c><00:07:56.520><c> or</c><00:07:57.029><c> less</c><00:07:57.330><c> of</c><00:07:57.479><c> storage</c>

00:07:57.860 --> 00:07:57.870 align:start position:0%
eight gigabytes or or less of storage
 

00:07:57.870 --> 00:07:59.839 align:start position:0%
eight gigabytes or or less of storage
it's<00:07:58.620><c> kind</c><00:07:58.800><c> of</c><00:07:58.860><c> important</c><00:07:59.339><c> to</c><00:07:59.430><c> focus</c><00:07:59.639><c> on</c>

00:07:59.839 --> 00:07:59.849 align:start position:0%
it's kind of important to focus on
 

00:07:59.849 --> 00:08:02.629 align:start position:0%
it's kind of important to focus on
optimizing<00:08:00.029><c> these</c><00:08:00.539><c> areas</c><00:08:00.979><c> so</c><00:08:01.979><c> that</c><00:08:02.159><c> the</c><00:08:02.310><c> users</c>

00:08:02.629 --> 00:08:02.639 align:start position:0%
optimizing these areas so that the users
 

00:08:02.639 --> 00:08:04.969 align:start position:0%
optimizing these areas so that the users
can<00:08:02.939><c> run</c><00:08:03.360><c> enough</c><00:08:03.779><c> applications</c><00:08:04.409><c> and</c><00:08:04.589><c> install</c>

00:08:04.969 --> 00:08:04.979 align:start position:0%
can run enough applications and install
 

00:08:04.979 --> 00:08:06.800 align:start position:0%
can run enough applications and install
as<00:08:05.129><c> many</c><00:08:05.310><c> applications</c><00:08:05.520><c> as</c><00:08:05.969><c> they</c><00:08:06.240><c> or</c><00:08:06.479><c> more</c>

00:08:06.800 --> 00:08:06.810 align:start position:0%
as many applications as they or more
 

00:08:06.810 --> 00:08:08.779 align:start position:0%
as many applications as they or more
applications<00:08:07.379><c> than</c><00:08:07.620><c> they</c><00:08:08.250><c> would</c><00:08:08.729><c> otherwise</c>

00:08:08.779 --> 00:08:08.789 align:start position:0%
applications than they would otherwise
 

00:08:08.789 --> 00:08:12.079 align:start position:0%
applications than they would otherwise
be<00:08:09.060><c> able</c><00:08:09.300><c> to</c><00:08:10.099><c> now</c><00:08:11.099><c> this</c><00:08:11.580><c> isn't</c><00:08:11.729><c> just</c><00:08:11.879><c> for</c>

00:08:12.079 --> 00:08:12.089 align:start position:0%
be able to now this isn't just for
 

00:08:12.089 --> 00:08:14.839 align:start position:0%
be able to now this isn't just for
Android<00:08:12.389><c> go</c><00:08:12.620><c> premium</c><00:08:13.620><c> devices</c><00:08:13.919><c> also</c><00:08:14.310><c> benefit</c>

00:08:14.839 --> 00:08:14.849 align:start position:0%
Android go premium devices also benefit
 

00:08:14.849 --> 00:08:16.339 align:start position:0%
Android go premium devices also benefit
from<00:08:14.879><c> optimizations</c><00:08:15.659><c> in</c><00:08:15.810><c> these</c><00:08:15.930><c> two</c><00:08:16.110><c> areas</c>

00:08:16.339 --> 00:08:16.349 align:start position:0%
from optimizations in these two areas
 

00:08:16.349 --> 00:08:18.309 align:start position:0%
from optimizations in these two areas
but<00:08:17.279><c> since</c><00:08:17.490><c> they</c><00:08:17.580><c> have</c><00:08:17.610><c> more</c><00:08:18.029><c> resources</c>

00:08:18.309 --> 00:08:18.319 align:start position:0%
but since they have more resources
 

00:08:18.319 --> 00:08:23.749 align:start position:0%
but since they have more resources
normally<00:08:19.319><c> is</c><00:08:19.439><c> to</c><00:08:19.620><c> a</c><00:08:19.649><c> lesser</c><00:08:19.860><c> degree</c><00:08:22.759><c> anyways</c>

00:08:23.749 --> 00:08:23.759 align:start position:0%
normally is to a lesser degree anyways
 

00:08:23.759 --> 00:08:26.059 align:start position:0%
normally is to a lesser degree anyways
before<00:08:24.029><c> we</c><00:08:24.270><c> talk</c><00:08:24.449><c> about</c><00:08:24.770><c> RAM</c><00:08:25.770><c> and</c><00:08:26.009><c> storage</c>

00:08:26.059 --> 00:08:26.069 align:start position:0%
before we talk about RAM and storage
 

00:08:26.069 --> 00:08:28.010 align:start position:0%
before we talk about RAM and storage
optimizations<00:08:27.000><c> let's</c><00:08:27.389><c> do</c><00:08:27.479><c> a</c><00:08:27.539><c> little</c><00:08:27.689><c> bit</c><00:08:27.870><c> of</c><00:08:27.990><c> a</c>

00:08:28.010 --> 00:08:28.020 align:start position:0%
optimizations let's do a little bit of a
 

00:08:28.020 --> 00:08:30.379 align:start position:0%
optimizations let's do a little bit of a
review<00:08:28.409><c> about</c><00:08:29.069><c> how</c><00:08:29.250><c> applications</c><00:08:29.759><c> work</c><00:08:30.120><c> on</c>

00:08:30.379 --> 00:08:30.389 align:start position:0%
review about how applications work on
 

00:08:30.389 --> 00:08:34.370 align:start position:0%
review about how applications work on
your<00:08:30.509><c> Android</c><00:08:30.810><c> devices</c><00:08:32.510><c> an</c><00:08:33.510><c> application</c>

00:08:34.370 --> 00:08:34.380 align:start position:0%
your Android devices an application
 

00:08:34.380 --> 00:08:36.259 align:start position:0%
your Android devices an application
normally<00:08:35.010><c> comes</c><00:08:35.279><c> in</c><00:08:35.459><c> an</c><00:08:35.550><c> application</c><00:08:36.060><c> package</c>

00:08:36.259 --> 00:08:36.269 align:start position:0%
normally comes in an application package
 

00:08:36.269 --> 00:08:39.769 align:start position:0%
normally comes in an application package
kit<00:08:36.719><c> also</c><00:08:37.140><c> known</c><00:08:37.409><c> as</c><00:08:37.529><c> an</c><00:08:37.649><c> apk</c><00:08:38.570><c> inside</c><00:08:39.570><c> of</c><00:08:39.690><c> the</c>

00:08:39.769 --> 00:08:39.779 align:start position:0%
kit also known as an apk inside of the
 

00:08:39.779 --> 00:08:41.959 align:start position:0%
kit also known as an apk inside of the
apk<00:08:40.199><c> there</c><00:08:40.500><c> are</c><00:08:40.589><c> usually</c><00:08:40.860><c> one</c><00:08:41.039><c> or</c><00:08:41.070><c> more</c><00:08:41.430><c> dalvik</c>

00:08:41.959 --> 00:08:41.969 align:start position:0%
apk there are usually one or more dalvik
 

00:08:41.969 --> 00:08:44.300 align:start position:0%
apk there are usually one or more dalvik
executable<00:08:42.599><c> files</c><00:08:42.810><c> also</c><00:08:43.500><c> known</c><00:08:43.680><c> as</c><00:08:43.800><c> Dex</c><00:08:44.039><c> files</c>

00:08:44.300 --> 00:08:44.310 align:start position:0%
executable files also known as Dex files
 

00:08:44.310 --> 00:08:46.810 align:start position:0%
executable files also known as Dex files
that<00:08:45.029><c> contain</c><00:08:45.180><c> instructions</c><00:08:46.079><c> that</c><00:08:46.230><c> art</c>

00:08:46.810 --> 00:08:46.820 align:start position:0%
that contain instructions that art
 

00:08:46.820 --> 00:08:48.370 align:start position:0%
that contain instructions that art
use<00:08:46.910><c> this</c><00:08:47.030><c> to</c><00:08:47.180><c> either</c><00:08:47.360><c> interpret</c><00:08:47.930><c> or</c><00:08:48.080><c> compile</c>

00:08:48.370 --> 00:08:48.380 align:start position:0%
use this to either interpret or compile
 

00:08:48.380 --> 00:08:52.150 align:start position:0%
use this to either interpret or compile
your<00:08:48.500><c> application</c><00:08:50.350><c> this</c><00:08:51.350><c> Dex</c><00:08:51.650><c> files</c><00:08:51.860><c> are</c>

00:08:52.150 --> 00:08:52.160 align:start position:0%
your application this Dex files are
 

00:08:52.160 --> 00:08:54.010 align:start position:0%
your application this Dex files are
required<00:08:52.550><c> to</c><00:08:52.730><c> be</c><00:08:52.850><c> quickly</c><00:08:53.120><c> accessed</c><00:08:53.390><c> during</c>

00:08:54.010 --> 00:08:54.020 align:start position:0%
required to be quickly accessed during
 

00:08:54.020 --> 00:08:57.100 align:start position:0%
required to be quickly accessed during
execution<00:08:55.030><c> they</c><00:08:56.030><c> were</c><00:08:56.090><c> mapped</c><00:08:56.360><c> directly</c><00:08:56.510><c> into</c>

00:08:57.100 --> 00:08:57.110 align:start position:0%
execution they were mapped directly into
 

00:08:57.110 --> 00:09:00.160 align:start position:0%
execution they were mapped directly into
memory<00:08:57.440><c> during</c><00:08:57.740><c> applications</c><00:08:58.400><c> startup</c><00:08:59.170><c> so</c>

00:09:00.160 --> 00:09:00.170 align:start position:0%
memory during applications startup so
 

00:09:00.170 --> 00:09:02.380 align:start position:0%
memory during applications startup so
that<00:09:00.350><c> art</c><00:09:00.530><c> can</c><00:09:00.710><c> have</c><00:09:00.800><c> quick</c><00:09:00.980><c> access</c><00:09:01.390><c> this</c>

00:09:02.380 --> 00:09:02.390 align:start position:0%
that art can have quick access this
 

00:09:02.390 --> 00:09:04.060 align:start position:0%
that art can have quick access this
means<00:09:02.690><c> that</c><00:09:02.870><c> this</c><00:09:02.990><c> there</c><00:09:03.260><c> is</c><00:09:03.350><c> a</c><00:09:03.380><c> startup</c><00:09:03.830><c> cost</c>

00:09:04.060 --> 00:09:04.070 align:start position:0%
means that this there is a startup cost
 

00:09:04.070 --> 00:09:06.340 align:start position:0%
means that this there is a startup cost
as<00:09:04.310><c> well</c><00:09:04.460><c> as</c><00:09:04.550><c> a</c><00:09:04.610><c> ram</c><00:09:04.820><c> cost</c><00:09:05.170><c> proportional</c><00:09:06.170><c> to</c>

00:09:06.340 --> 00:09:06.350 align:start position:0%
as well as a ram cost proportional to
 

00:09:06.350 --> 00:09:08.580 align:start position:0%
as well as a ram cost proportional to
the<00:09:06.440><c> size</c><00:09:06.620><c> of</c><00:09:06.650><c> the</c><00:09:06.860><c> Dex</c><00:09:07.070><c> file</c>

00:09:08.580 --> 00:09:08.590 align:start position:0%
the size of the Dex file
 

00:09:08.590 --> 00:09:10.930 align:start position:0%
the size of the Dex file
finally<00:09:09.590><c> Dex</c><00:09:10.130><c> files</c><00:09:10.370><c> are</c><00:09:10.520><c> usually</c><00:09:10.790><c> stored</c>

00:09:10.930 --> 00:09:10.940 align:start position:0%
finally Dex files are usually stored
 

00:09:10.940 --> 00:09:13.750 align:start position:0%
finally Dex files are usually stored
twice<00:09:11.300><c> on</c><00:09:11.510><c> the</c><00:09:11.600><c> device</c><00:09:12.040><c> the</c><00:09:13.040><c> first</c><00:09:13.280><c> place</c><00:09:13.580><c> they</c>

00:09:13.750 --> 00:09:13.760 align:start position:0%
twice on the device the first place they
 

00:09:13.760 --> 00:09:14.830 align:start position:0%
twice on the device the first place they
are<00:09:13.790><c> stored</c><00:09:14.120><c> is</c><00:09:14.270><c> inside</c><00:09:14.510><c> of</c><00:09:14.630><c> the</c><00:09:14.720><c> application</c>

00:09:14.830 --> 00:09:14.840 align:start position:0%
are stored is inside of the application
 

00:09:14.840 --> 00:09:17.410 align:start position:0%
are stored is inside of the application
package<00:09:15.530><c> kit</c><00:09:15.770><c> and</c><00:09:16.070><c> then</c><00:09:16.820><c> the</c><00:09:16.940><c> second</c><00:09:17.240><c> place</c>

00:09:17.410 --> 00:09:17.420 align:start position:0%
package kit and then the second place
 

00:09:17.420 --> 00:09:19.180 align:start position:0%
package kit and then the second place
they<00:09:17.600><c> are</c><00:09:17.660><c> stored</c><00:09:17.960><c> is</c><00:09:18.080><c> in</c><00:09:18.200><c> an</c><00:09:18.320><c> extracted</c><00:09:18.860><c> form</c>

00:09:19.180 --> 00:09:19.190 align:start position:0%
they are stored is in an extracted form
 

00:09:19.190 --> 00:09:20.890 align:start position:0%
they are stored is in an extracted form
so<00:09:19.880><c> that</c><00:09:20.000><c> art</c><00:09:20.210><c> can</c><00:09:20.390><c> have</c><00:09:20.480><c> faster</c><00:09:20.870><c> access</c>

00:09:20.890 --> 00:09:20.900 align:start position:0%
so that art can have faster access
 

00:09:20.900 --> 00:09:22.750 align:start position:0%
so that art can have faster access
during<00:09:21.560><c> application</c><00:09:22.130><c> startup</c><00:09:22.490><c> without</c>

00:09:22.750 --> 00:09:22.760 align:start position:0%
during application startup without
 

00:09:22.760 --> 00:09:24.160 align:start position:0%
during application startup without
needing<00:09:23.030><c> to</c><00:09:23.060><c> extract</c><00:09:23.540><c> from</c><00:09:23.690><c> the</c><00:09:23.840><c> zip</c><00:09:23.990><c> file</c>

00:09:24.160 --> 00:09:24.170 align:start position:0%
needing to extract from the zip file
 

00:09:24.170 --> 00:09:28.510 align:start position:0%
needing to extract from the zip file
each<00:09:24.350><c> time</c><00:09:25.990><c> now</c><00:09:26.990><c> let's</c><00:09:27.650><c> take</c><00:09:27.860><c> a</c><00:09:27.890><c> closer</c><00:09:28.220><c> look</c>

00:09:28.510 --> 00:09:28.520 align:start position:0%
each time now let's take a closer look
 

00:09:28.520 --> 00:09:32.710 align:start position:0%
each time now let's take a closer look
at<00:09:28.730><c> the</c><00:09:28.850><c> contents</c><00:09:29.240><c> of</c><00:09:29.330><c> Dex</c><00:09:29.540><c> files</c><00:09:31.570><c> within</c><00:09:32.570><c> a</c>

00:09:32.710 --> 00:09:32.720 align:start position:0%
at the contents of Dex files within a
 

00:09:32.720 --> 00:09:34.030 align:start position:0%
at the contents of Dex files within a
Dex<00:09:32.930><c> file</c><00:09:33.140><c> there</c><00:09:33.410><c> are</c><00:09:33.440><c> several</c><00:09:33.740><c> sections</c>

00:09:34.030 --> 00:09:34.040 align:start position:0%
Dex file there are several sections
 

00:09:34.040 --> 00:09:35.620 align:start position:0%
Dex file there are several sections
containing<00:09:34.670><c> different</c><00:09:34.910><c> types</c><00:09:35.270><c> of</c><00:09:35.450><c> data</c>

00:09:35.620 --> 00:09:35.630 align:start position:0%
containing different types of data
 

00:09:35.630 --> 00:09:39.520 align:start position:0%
containing different types of data
related<00:09:36.170><c> to</c><00:09:36.260><c> the</c><00:09:36.350><c> applications</c><00:09:37.750><c> but</c><00:09:38.750><c> where</c><00:09:39.440><c> is</c>

00:09:39.520 --> 00:09:39.530 align:start position:0%
related to the applications but where is
 

00:09:39.530 --> 00:09:43.060 align:start position:0%
related to the applications but where is
the<00:09:39.620><c> space</c><00:09:39.800><c> going</c><00:09:40.160><c> into</c><00:09:40.340><c> Dex</c><00:09:40.520><c> file</c><00:09:41.830><c> one</c><00:09:42.830><c> way</c><00:09:43.010><c> to</c>

00:09:43.060 --> 00:09:43.070 align:start position:0%
the space going into Dex file one way to
 

00:09:43.070 --> 00:09:44.860 align:start position:0%
the space going into Dex file one way to
do<00:09:43.280><c> this</c><00:09:43.430><c> is</c><00:09:43.640><c> you</c><00:09:43.760><c> can</c><00:09:43.790><c> kind</c><00:09:44.210><c> of</c><00:09:44.360><c> calculate</c>

00:09:44.860 --> 00:09:44.870 align:start position:0%
do this is you can kind of calculate
 

00:09:44.870 --> 00:09:46.390 align:start position:0%
do this is you can kind of calculate
where<00:09:45.080><c> the</c><00:09:45.110><c> space</c><00:09:45.410><c> is</c><00:09:45.560><c> going</c><00:09:45.770><c> for</c><00:09:46.040><c> you</c><00:09:46.100><c> to</c><00:09:46.190><c> Dex</c>

00:09:46.390 --> 00:09:46.400 align:start position:0%
where the space is going for you to Dex
 

00:09:46.400 --> 00:09:49.030 align:start position:0%
where the space is going for you to Dex
file<00:09:46.610><c> and</c><00:09:46.880><c> average</c><00:09:47.120><c> out</c><00:09:47.270><c> the</c><00:09:47.390><c> results</c><00:09:48.040><c> this</c>

00:09:49.030 --> 00:09:49.040 align:start position:0%
file and average out the results this
 

00:09:49.040 --> 00:09:50.950 align:start position:0%
file and average out the results this
chart<00:09:49.340><c> here</c><00:09:49.580><c> is</c><00:09:49.790><c> for</c><00:09:50.090><c> the</c><00:09:50.180><c> top</c><00:09:50.390><c> 99</c><00:09:50.780><c> most</c>

00:09:50.950 --> 00:09:50.960 align:start position:0%
chart here is for the top 99 most
 

00:09:50.960 --> 00:09:52.630 align:start position:0%
chart here is for the top 99 most
downloaded<00:09:51.770><c> applications</c><00:09:52.280><c> in</c><00:09:52.370><c> the</c><00:09:52.460><c> Play</c>

00:09:52.630 --> 00:09:52.640 align:start position:0%
downloaded applications in the Play
 

00:09:52.640 --> 00:09:54.790 align:start position:0%
downloaded applications in the Play
Store<00:09:52.670><c> and</c><00:09:53.180><c> you</c><00:09:53.720><c> can</c><00:09:53.870><c> see</c><00:09:54.110><c> that</c><00:09:54.410><c> the</c><00:09:54.530><c> largest</c>

00:09:54.790 --> 00:09:54.800 align:start position:0%
Store and you can see that the largest
 

00:09:54.800 --> 00:09:56.680 align:start position:0%
Store and you can see that the largest
section<00:09:55.400><c> is</c><00:09:55.820><c> the</c><00:09:56.000><c> code</c><00:09:56.180><c> item</c><00:09:56.360><c> section</c>

00:09:56.680 --> 00:09:56.690 align:start position:0%
section is the code item section
 

00:09:56.690 --> 00:09:58.900 align:start position:0%
section is the code item section
containing<00:09:57.290><c> the</c><00:09:57.500><c> Dex</c><00:09:57.710><c> instructions</c><00:09:58.340><c> used</c><00:09:58.760><c> by</c>

00:09:58.900 --> 00:09:58.910 align:start position:0%
containing the Dex instructions used by
 

00:09:58.910 --> 00:10:02.920 align:start position:0%
containing the Dex instructions used by
art<00:10:00.550><c> the</c><00:10:01.550><c> next</c><00:10:01.880><c> largest</c><00:10:02.120><c> section</c><00:10:02.600><c> is</c><00:10:02.720><c> the</c>

00:10:02.920 --> 00:10:02.930 align:start position:0%
art the next largest section is the
 

00:10:02.930 --> 00:10:04.930 align:start position:0%
art the next largest section is the
string<00:10:03.170><c> data</c><00:10:03.350><c> section</c><00:10:03.830><c> and</c><00:10:04.010><c> this</c><00:10:04.880><c> section</c>

00:10:04.930 --> 00:10:04.940 align:start position:0%
string data section and this section
 

00:10:04.940 --> 00:10:06.940 align:start position:0%
string data section and this section
contains<00:10:05.600><c> the</c><00:10:05.690><c> string</c><00:10:05.930><c> literals</c><00:10:06.410><c> loaded</c><00:10:06.800><c> from</c>

00:10:06.940 --> 00:10:06.950 align:start position:0%
contains the string literals loaded from
 

00:10:06.950 --> 00:10:09.820 align:start position:0%
contains the string literals loaded from
code<00:10:07.190><c> method</c><00:10:07.850><c> names</c><00:10:08.240><c> class</c><00:10:08.810><c> names</c><00:10:09.140><c> and</c><00:10:09.440><c> field</c>

00:10:09.820 --> 00:10:09.830 align:start position:0%
code method names class names and field
 

00:10:09.830 --> 00:10:13.990 align:start position:0%
code method names class names and field
names<00:10:11.590><c> combined</c><00:10:12.590><c> these</c><00:10:13.070><c> two</c><00:10:13.340><c> sections</c><00:10:13.850><c> are</c>

00:10:13.990 --> 00:10:14.000 align:start position:0%
names combined these two sections are
 

00:10:14.000 --> 00:10:16.960 align:start position:0%
names combined these two sections are
around<00:10:14.270><c> 64%</c><00:10:15.170><c> of</c><00:10:15.710><c> the</c><00:10:16.220><c> Dex</c><00:10:16.400><c> file</c><00:10:16.610><c> so</c><00:10:16.820><c> they're</c>

00:10:16.960 --> 00:10:16.970 align:start position:0%
around 64% of the Dex file so they're
 

00:10:16.970 --> 00:10:21.040 align:start position:0%
around 64% of the Dex file so they're
pretty<00:10:17.120><c> important</c><00:10:17.630><c> areas</c><00:10:17.960><c> to</c><00:10:18.110><c> optimise</c><00:10:20.050><c> let's</c>

00:10:21.040 --> 00:10:21.050 align:start position:0%
pretty important areas to optimise let's
 

00:10:21.050 --> 00:10:22.240 align:start position:0%
pretty important areas to optimise let's
see<00:10:21.170><c> if</c><00:10:21.230><c> there's</c><00:10:21.440><c> a</c><00:10:21.500><c> way</c><00:10:21.620><c> we</c><00:10:21.770><c> can</c><00:10:21.890><c> reduce</c><00:10:22.010><c> the</c>

00:10:22.240 --> 00:10:22.250 align:start position:0%
see if there's a way we can reduce the
 

00:10:22.250 --> 00:10:26.080 align:start position:0%
see if there's a way we can reduce the
size<00:10:22.430><c> of</c><00:10:22.580><c> these</c><00:10:22.640><c> sections</c><00:10:24.640><c> one</c><00:10:25.640><c> new</c><00:10:25.850><c> feature</c>

00:10:26.080 --> 00:10:26.090 align:start position:0%
size of these sections one new feature
 

00:10:26.090 --> 00:10:28.540 align:start position:0%
size of these sections one new feature
introduced<00:10:26.840><c> in</c><00:10:27.050><c> Android</c><00:10:27.410><c> P</c><00:10:27.620><c> is</c><00:10:27.830><c> called</c>

00:10:28.540 --> 00:10:28.550 align:start position:0%
introduced in Android P is called
 

00:10:28.550 --> 00:10:32.110 align:start position:0%
introduced in Android P is called
compact<00:10:28.970><c> Dex</c><00:10:29.830><c> the</c><00:10:30.830><c> goal</c><00:10:31.010><c> of</c><00:10:31.250><c> compact</c><00:10:31.670><c> Dex</c><00:10:31.910><c> is</c>

00:10:32.110 --> 00:10:32.120 align:start position:0%
compact Dex the goal of compact Dex is
 

00:10:32.120 --> 00:10:35.140 align:start position:0%
compact Dex the goal of compact Dex is
simple<00:10:32.590><c> reduce</c><00:10:33.590><c> the</c><00:10:33.770><c> size</c><00:10:33.980><c> of</c><00:10:34.160><c> Dex</c><00:10:34.400><c> files</c><00:10:34.670><c> to</c>

00:10:35.140 --> 00:10:35.150 align:start position:0%
simple reduce the size of Dex files to
 

00:10:35.150 --> 00:10:37.210 align:start position:0%
simple reduce the size of Dex files to
get<00:10:35.330><c> memory</c><00:10:35.690><c> and</c><00:10:35.900><c> storage</c><00:10:36.290><c> savings</c><00:10:36.830><c> on</c><00:10:37.040><c> the</c>

00:10:37.210 --> 00:10:37.220 align:start position:0%
get memory and storage savings on the
 

00:10:37.220 --> 00:10:41.350 align:start position:0%
get memory and storage savings on the
device<00:10:38.950><c> from</c><00:10:39.950><c> the</c><00:10:40.070><c> previous</c><00:10:40.430><c> slide</c><00:10:40.670><c> we</c><00:10:41.210><c> saw</c>

00:10:41.350 --> 00:10:41.360 align:start position:0%
device from the previous slide we saw
 

00:10:41.360 --> 00:10:42.760 align:start position:0%
device from the previous slide we saw
that<00:10:41.510><c> some</c><00:10:41.720><c> sections</c><00:10:41.930><c> are</c><00:10:42.290><c> larger</c><00:10:42.650><c> than</c>

00:10:42.760 --> 00:10:42.770 align:start position:0%
that some sections are larger than
 

00:10:42.770 --> 00:10:45.130 align:start position:0%
that some sections are larger than
others<00:10:43.030><c> so</c><00:10:44.030><c> it's</c><00:10:44.180><c> important</c><00:10:44.570><c> to</c><00:10:44.600><c> just</c><00:10:44.750><c> focus</c>

00:10:45.130 --> 00:10:45.140 align:start position:0%
others so it's important to just focus
 

00:10:45.140 --> 00:10:46.630 align:start position:0%
others so it's important to just focus
on<00:10:45.260><c> the</c><00:10:45.440><c> large</c><00:10:45.620><c> sections</c><00:10:46.100><c> to</c><00:10:46.280><c> get</c><00:10:46.400><c> the</c><00:10:46.490><c> most</c>

00:10:46.630 --> 00:10:46.640 align:start position:0%
on the large sections to get the most
 

00:10:46.640 --> 00:10:51.070 align:start position:0%
on the large sections to get the most
savings<00:10:47.920><c> where's</c><00:10:48.920><c> our</c><00:10:49.010><c> code</c><00:10:49.160><c> items</c><00:10:49.990><c> there</c><00:10:50.990><c> are</c>

00:10:51.070 --> 00:10:51.080 align:start position:0%
savings where's our code items there are
 

00:10:51.080 --> 00:10:52.870 align:start position:0%
savings where's our code items there are
more<00:10:51.230><c> often</c><00:10:51.410><c> deduplicated</c><00:10:52.310><c> and</c><00:10:52.520><c> there</c><00:10:52.700><c> also</c>

00:10:52.870 --> 00:10:52.880 align:start position:0%
more often deduplicated and there also
 

00:10:52.880 --> 00:10:55.420 align:start position:0%
more often deduplicated and there also
have<00:10:53.420><c> their</c><00:10:53.600><c> headers</c><00:10:53.870><c> from</c><00:10:54.080><c> save</c><00:10:54.590><c> a</c><00:10:54.920><c> space</c><00:10:55.250><c> for</c>

00:10:55.420 --> 00:10:55.430 align:start position:0%
have their headers from save a space for
 

00:10:55.430 --> 00:10:57.070 align:start position:0%
have their headers from save a space for
each<00:10:55.550><c> method</c><00:10:55.820><c> essentially</c><00:10:56.300><c> inside</c><00:10:56.750><c> of</c><00:10:56.900><c> the</c>

00:10:57.070 --> 00:10:57.080 align:start position:0%
each method essentially inside of the
 

00:10:57.080 --> 00:10:58.590 align:start position:0%
each method essentially inside of the
application

00:10:58.590 --> 00:10:58.600 align:start position:0%
application
 

00:10:58.600 --> 00:11:01.020 align:start position:0%
application
and<00:10:59.070><c> another</c><00:11:00.070><c> thing</c><00:11:00.280><c> here</c><00:11:00.490><c> worth</c><00:11:00.670><c> noting</c>

00:11:01.020 --> 00:11:01.030 align:start position:0%
and another thing here worth noting
 

00:11:01.030 --> 00:11:02.880 align:start position:0%
and another thing here worth noting
about<00:11:01.270><c> the</c><00:11:01.390><c> string</c><00:11:01.630><c> Deena</c><00:11:01.810><c> is</c><00:11:02.110><c> that</c><00:11:02.680><c> large</c>

00:11:02.880 --> 00:11:02.890 align:start position:0%
about the string Deena is that large
 

00:11:02.890 --> 00:11:04.980 align:start position:0%
about the string Deena is that large
applications<00:11:03.610><c> frequently</c><00:11:04.210><c> shipped</c><00:11:04.450><c> multiple</c>

00:11:04.980 --> 00:11:04.990 align:start position:0%
applications frequently shipped multiple
 

00:11:04.990 --> 00:11:07.140 align:start position:0%
applications frequently shipped multiple
Dex<00:11:05.320><c> files</c><00:11:05.590><c> in</c><00:11:05.860><c> their</c><00:11:06.070><c> apk</c><00:11:06.520><c> because</c><00:11:07.000><c> of</c>

00:11:07.140 --> 00:11:07.150 align:start position:0%
Dex files in their apk because of
 

00:11:07.150 --> 00:11:08.810 align:start position:0%
Dex files in their apk because of
dx-format<00:11:07.570><c> limitations</c>

00:11:08.810 --> 00:11:08.820 align:start position:0%
dx-format limitations
 

00:11:08.820 --> 00:11:11.880 align:start position:0%
dx-format limitations
specifically<00:11:09.820><c> the</c><00:11:10.000><c> 64k</c><00:11:10.660><c> method</c><00:11:10.960><c> limit</c><00:11:11.290><c> means</c>

00:11:11.880 --> 00:11:11.890 align:start position:0%
specifically the 64k method limit means
 

00:11:11.890 --> 00:11:13.860 align:start position:0%
specifically the 64k method limit means
that<00:11:12.100><c> you</c><00:11:12.160><c> can</c><00:11:12.280><c> only</c><00:11:12.400><c> have</c><00:11:12.600><c> 64,000</c><00:11:13.600><c> kind</c><00:11:13.780><c> of</c>

00:11:13.860 --> 00:11:13.870 align:start position:0%
that you can only have 64,000 kind of
 

00:11:13.870 --> 00:11:15.480 align:start position:0%
that you can only have 64,000 kind of
method<00:11:14.140><c> references</c><00:11:14.590><c> in</c><00:11:14.740><c> a</c><00:11:14.800><c> single</c><00:11:15.070><c> dex</c><00:11:15.250><c> file</c>

00:11:15.480 --> 00:11:15.490 align:start position:0%
method references in a single dex file
 

00:11:15.490 --> 00:11:17.040 align:start position:0%
method references in a single dex file
before<00:11:16.000><c> needing</c><00:11:16.330><c> to</c><00:11:16.450><c> add</c><00:11:16.540><c> another</c><00:11:16.780><c> one</c><00:11:17.020><c> to</c>

00:11:17.040 --> 00:11:17.050 align:start position:0%
before needing to add another one to
 

00:11:17.050 --> 00:11:20.520 align:start position:0%
before needing to add another one to
your<00:11:17.230><c> application</c><00:11:18.540><c> and</c><00:11:19.540><c> every</c><00:11:20.140><c> time</c><00:11:20.320><c> you</c><00:11:20.410><c> add</c>

00:11:20.520 --> 00:11:20.530 align:start position:0%
your application and every time you add
 

00:11:20.530 --> 00:11:22.620 align:start position:0%
your application and every time you add
another<00:11:20.560><c> dex</c><00:11:21.040><c> file</c><00:11:21.310><c> this</c><00:11:21.610><c> causes</c><00:11:21.850><c> duplication</c>

00:11:22.620 --> 00:11:22.630 align:start position:0%
another dex file this causes duplication
 

00:11:22.630 --> 00:11:24.750 align:start position:0%
another dex file this causes duplication
specifically<00:11:23.350><c> a</c><00:11:23.380><c> string</c><00:11:23.740><c> data</c><00:11:23.920><c> that</c><00:11:24.610><c> could</c>

00:11:24.750 --> 00:11:24.760 align:start position:0%
specifically a string data that could
 

00:11:24.760 --> 00:11:27.810 align:start position:0%
specifically a string data that could
otherwise<00:11:24.850><c> be</c><00:11:25.330><c> stored</c><00:11:25.630><c> only</c><00:11:25.750><c> once</c><00:11:26.820><c> compact</c>

00:11:27.810 --> 00:11:27.820 align:start position:0%
otherwise be stored only once compact
 

00:11:27.820 --> 00:11:29.790 align:start position:0%
otherwise be stored only once compact
Dex<00:11:28.140><c> shrinks</c><00:11:29.140><c> this</c><00:11:29.350><c> by</c><00:11:29.560><c> providing</c>

00:11:29.790 --> 00:11:29.800 align:start position:0%
Dex shrinks this by providing
 

00:11:29.800 --> 00:11:31.890 align:start position:0%
Dex shrinks this by providing
deduplication<00:11:30.700><c> across</c><00:11:31.150><c> the</c><00:11:31.330><c> Dex</c><00:11:31.510><c> files</c><00:11:31.720><c> in</c>

00:11:31.890 --> 00:11:31.900 align:start position:0%
deduplication across the Dex files in
 

00:11:31.900 --> 00:11:36.180 align:start position:0%
deduplication across the Dex files in
the<00:11:31.990><c> apk</c><00:11:33.180><c> now</c><00:11:34.290><c> let's</c><00:11:35.290><c> go</c><00:11:35.500><c> to</c><00:11:35.590><c> the</c><00:11:35.680><c> generation</c>

00:11:36.180 --> 00:11:36.190 align:start position:0%
the apk now let's go to the generation
 

00:11:36.190 --> 00:11:41.280 align:start position:0%
the apk now let's go to the generation
process<00:11:39.030><c> first</c><00:11:40.030><c> let's</c><00:11:40.390><c> look</c><00:11:40.540><c> at</c><00:11:40.690><c> how</c><00:11:40.990><c> Dex</c>

00:11:41.280 --> 00:11:41.290 align:start position:0%
process first let's look at how Dex
 

00:11:41.290 --> 00:11:44.820 align:start position:0%
process first let's look at how Dex
files<00:11:41.500><c> are</c><00:11:41.800><c> processed</c><00:11:42.250><c> on</c><00:11:42.400><c> android</c><00:11:42.730><c> oreo</c><00:11:43.830><c> the</c>

00:11:44.820 --> 00:11:44.830 align:start position:0%
files are processed on android oreo the
 

00:11:44.830 --> 00:11:47.100 align:start position:0%
files are processed on android oreo the
first<00:11:45.070><c> step</c><00:11:45.370><c> run</c><00:11:45.850><c> by</c><00:11:45.970><c> Dex</c><00:11:46.240><c> toad</c><00:11:46.450><c> a</c><00:11:46.720><c> head</c><00:11:47.020><c> of</c>

00:11:47.100 --> 00:11:47.110 align:start position:0%
first step run by Dex toad a head of
 

00:11:47.110 --> 00:11:49.140 align:start position:0%
first step run by Dex toad a head of
time<00:11:47.140><c> compiler</c><00:11:47.680><c> is</c><00:11:48.220><c> that</c><00:11:48.400><c> the</c><00:11:48.460><c> Dex</c><00:11:48.670><c> files</c><00:11:48.880><c> are</c>

00:11:49.140 --> 00:11:49.150 align:start position:0%
time compiler is that the Dex files are
 

00:11:49.150 --> 00:11:51.690 align:start position:0%
time compiler is that the Dex files are
extracted<00:11:49.780><c> from</c><00:11:49.810><c> the</c><00:11:50.110><c> apk</c><00:11:50.620><c> and</c><00:11:50.860><c> stored</c><00:11:51.430><c> in</c><00:11:51.580><c> a</c>

00:11:51.690 --> 00:11:51.700 align:start position:0%
extracted from the apk and stored in a
 

00:11:51.700 --> 00:11:54.360 align:start position:0%
extracted from the apk and stored in a
be<00:11:51.850><c> Dex</c><00:11:52.060><c> container</c><00:11:53.010><c> the</c><00:11:54.010><c> reason</c><00:11:54.250><c> they</c><00:11:54.340><c> are</c>

00:11:54.360 --> 00:11:54.370 align:start position:0%
be Dex container the reason they are
 

00:11:54.370 --> 00:11:56.070 align:start position:0%
be Dex container the reason they are
extracted<00:11:54.970><c> as</c><00:11:55.090><c> I</c><00:11:55.180><c> mentioned</c><00:11:55.480><c> earlier</c><00:11:55.750><c> is</c><00:11:55.930><c> so</c>

00:11:56.070 --> 00:11:56.080 align:start position:0%
extracted as I mentioned earlier is so
 

00:11:56.080 --> 00:11:57.450 align:start position:0%
extracted as I mentioned earlier is so
that<00:11:56.290><c> they</c><00:11:56.380><c> can</c><00:11:56.500><c> be</c><00:11:56.590><c> loaded</c><00:11:56.890><c> more</c><00:11:57.010><c> efficiently</c>

00:11:57.450 --> 00:11:57.460 align:start position:0%
that they can be loaded more efficiently
 

00:11:57.460 --> 00:12:02.100 align:start position:0%
that they can be loaded more efficiently
during<00:11:57.880><c> applications</c><00:11:58.540><c> startup</c><00:12:00.960><c> one</c><00:12:01.960><c> other</c>

00:12:02.100 --> 00:12:02.110 align:start position:0%
during applications startup one other
 

00:12:02.110 --> 00:12:03.840 align:start position:0%
during applications startup one other
thing<00:12:02.350><c> here</c><00:12:02.500><c> worth</c><00:12:02.740><c> noting</c><00:12:03.070><c> is</c><00:12:03.190><c> the</c><00:12:03.220><c> profile</c>

00:12:03.840 --> 00:12:03.850 align:start position:0%
thing here worth noting is the profile
 

00:12:03.850 --> 00:12:06.510 align:start position:0%
thing here worth noting is the profile
the<00:12:04.690><c> profile</c><00:12:05.080><c> as</c><00:12:05.260><c> introduced</c><00:12:05.830><c> in</c><00:12:05.980><c> nougat</c><00:12:06.310><c> is</c>

00:12:06.510 --> 00:12:06.520 align:start position:0%
the profile as introduced in nougat is
 

00:12:06.520 --> 00:12:09.660 align:start position:0%
the profile as introduced in nougat is
uh<00:12:07.380><c> essentially</c><00:12:08.380><c> data</c><00:12:09.100><c> about</c><00:12:09.550><c> the</c>

00:12:09.660 --> 00:12:09.670 align:start position:0%
uh essentially data about the
 

00:12:09.670 --> 00:12:11.400 align:start position:0%
uh essentially data about the
application<00:12:10.210><c> execution</c><00:12:10.630><c> including</c><00:12:10.960><c> which</c>

00:12:11.400 --> 00:12:11.410 align:start position:0%
application execution including which
 

00:12:11.410 --> 00:12:14.040 align:start position:0%
application execution including which
methods<00:12:11.830><c> are</c><00:12:11.950><c> executed</c><00:12:12.790><c> during</c><00:12:13.030><c> startup</c><00:12:13.510><c> what</c>

00:12:14.040 --> 00:12:14.050 align:start position:0%
methods are executed during startup what
 

00:12:14.050 --> 00:12:15.900 align:start position:0%
methods are executed during startup what
methods<00:12:14.410><c> are</c><00:12:14.530><c> hot</c><00:12:14.740><c> so</c><00:12:14.980><c> compiled</c><00:12:15.370><c> by</c><00:12:15.610><c> the</c><00:12:15.640><c> JIT</c>

00:12:15.900 --> 00:12:15.910 align:start position:0%
methods are hot so compiled by the JIT
 

00:12:15.910 --> 00:12:19.440 align:start position:0%
methods are hot so compiled by the JIT
compiler<00:12:16.240><c> and</c><00:12:16.660><c> what</c><00:12:17.020><c> classes</c><00:12:17.350><c> are</c><00:12:17.410><c> loaded</c><00:12:18.450><c> on</c>

00:12:19.440 --> 00:12:19.450 align:start position:0%
compiler and what classes are loaded on
 

00:12:19.450 --> 00:12:21.540 align:start position:0%
compiler and what classes are loaded on
Oreo<00:12:19.870><c> we</c><00:12:20.110><c> are</c><00:12:20.230><c> we're</c><00:12:20.410><c> already</c><00:12:20.590><c> optimizing</c><00:12:21.370><c> the</c>

00:12:21.540 --> 00:12:21.550 align:start position:0%
Oreo we are we're already optimizing the
 

00:12:21.550 --> 00:12:23.310 align:start position:0%
Oreo we are we're already optimizing the
Dex<00:12:21.730><c> file</c><00:12:21.940><c> stored</c><00:12:22.390><c> in</c><00:12:22.480><c> the</c><00:12:22.630><c> be</c><00:12:22.750><c> Dex</c><00:12:22.960><c> container</c>

00:12:23.310 --> 00:12:23.320 align:start position:0%
Dex file stored in the be Dex container
 

00:12:23.320 --> 00:12:25.920 align:start position:0%
Dex file stored in the be Dex container
by<00:12:24.010><c> late</c><00:12:24.310><c> applying</c><00:12:24.910><c> layout</c><00:12:25.210><c> optimizations</c>

00:12:25.920 --> 00:12:25.930 align:start position:0%
by late applying layout optimizations
 

00:12:25.930 --> 00:12:28.530 align:start position:0%
by late applying layout optimizations
and<00:12:26.410><c> also</c><00:12:27.160><c> we</c><00:12:27.310><c> were</c><00:12:27.430><c> deciding</c><00:12:27.850><c> which</c><00:12:28.120><c> methods</c>

00:12:28.530 --> 00:12:28.540 align:start position:0%
and also we were deciding which methods
 

00:12:28.540 --> 00:12:30.780 align:start position:0%
and also we were deciding which methods
to<00:12:28.660><c> compile</c><00:12:28.990><c> based</c><00:12:29.770><c> on</c><00:12:30.040><c> what</c><00:12:30.220><c> methods</c><00:12:30.550><c> are</c><00:12:30.610><c> hot</c>

00:12:30.780 --> 00:12:30.790 align:start position:0%
to compile based on what methods are hot
 

00:12:30.790 --> 00:12:36.570 align:start position:0%
to compile based on what methods are hot
in<00:12:30.940><c> the</c><00:12:31.000><c> Dex</c><00:12:31.210><c> file</c><00:12:34.560><c> now</c><00:12:35.560><c> let's</c><00:12:35.860><c> look</c><00:12:36.220><c> at</c><00:12:36.340><c> Dex</c>

00:12:36.570 --> 00:12:36.580 align:start position:0%
in the Dex file now let's look at Dex
 

00:12:36.580 --> 00:12:40.860 align:start position:0%
in the Dex file now let's look at Dex
processing<00:12:37.120><c> on</c><00:12:37.330><c> Android</c><00:12:37.720><c> pee</c><00:12:39.240><c> in</c><00:12:40.240><c> Android</c><00:12:40.690><c> pee</c>

00:12:40.860 --> 00:12:40.870 align:start position:0%
processing on Android pee in Android pee
 

00:12:40.870 --> 00:12:42.810 align:start position:0%
processing on Android pee in Android pee
the<00:12:41.290><c> out</c><00:12:41.470><c> of</c><00:12:41.590><c> time</c><00:12:41.740><c> compiler</c><00:12:42.130><c> now</c><00:12:42.370><c> converts</c>

00:12:42.810 --> 00:12:42.820 align:start position:0%
the out of time compiler now converts
 

00:12:42.820 --> 00:12:44.640 align:start position:0%
the out of time compiler now converts
the<00:12:42.970><c> Dex</c><00:12:43.150><c> files</c><00:12:43.420><c> to</c><00:12:43.900><c> a</c><00:12:43.930><c> more</c><00:12:44.170><c> efficient</c>

00:12:44.640 --> 00:12:44.650 align:start position:0%
the Dex files to a more efficient
 

00:12:44.650 --> 00:12:47.340 align:start position:0%
the Dex files to a more efficient
compact<00:12:45.040><c> Dex</c><00:12:45.810><c> representation</c><00:12:46.810><c> inside</c><00:12:47.170><c> of</c><00:12:47.290><c> the</c>

00:12:47.340 --> 00:12:47.350 align:start position:0%
compact Dex representation inside of the
 

00:12:47.350 --> 00:12:50.820 align:start position:0%
compact Dex representation inside of the
container<00:12:48.570><c> when</c><00:12:49.570><c> the</c><00:12:49.780><c> addition</c><00:12:50.170><c> here</c><00:12:50.410><c> is</c><00:12:50.590><c> the</c>

00:12:50.820 --> 00:12:50.830 align:start position:0%
container when the addition here is the
 

00:12:50.830 --> 00:12:52.880 align:start position:0%
container when the addition here is the
introduction<00:12:51.130><c> of</c><00:12:51.460><c> a</c><00:12:51.610><c> shared</c><00:12:51.880><c> data</c><00:12:52.030><c> section</c>

00:12:52.880 --> 00:12:52.890 align:start position:0%
introduction of a shared data section
 

00:12:52.890 --> 00:12:55.230 align:start position:0%
introduction of a shared data section
specifically<00:12:53.890><c> data</c><00:12:54.520><c> that's</c><00:12:54.790><c> present</c><00:12:55.210><c> in</c>

00:12:55.230 --> 00:12:55.240 align:start position:0%
specifically data that's present in
 

00:12:55.240 --> 00:12:57.300 align:start position:0%
specifically data that's present in
multiple<00:12:55.480><c> Dex</c><00:12:55.930><c> files</c><00:12:56.230><c> will</c><00:12:56.830><c> be</c><00:12:56.950><c> in</c><00:12:57.040><c> the</c><00:12:57.100><c> shared</c>

00:12:57.300 --> 00:12:57.310 align:start position:0%
multiple Dex files will be in the shared
 

00:12:57.310 --> 00:12:59.130 align:start position:0%
multiple Dex files will be in the shared
data<00:12:57.430><c> section</c><00:12:57.850><c> only</c><00:12:57.970><c> once</c><00:12:58.300><c> so</c><00:12:58.750><c> it</c><00:12:58.870><c> kind</c><00:12:59.080><c> of</c>

00:12:59.130 --> 00:12:59.140 align:start position:0%
data section only once so it kind of
 

00:12:59.140 --> 00:13:01.500 align:start position:0%
data section only once so it kind of
deduplicate<00:12:59.770><c> data</c><00:13:00.700><c> that's</c><00:13:00.910><c> commonly</c><00:13:01.270><c> shared</c>

00:13:01.500 --> 00:13:01.510 align:start position:0%
deduplicate data that's commonly shared
 

00:13:01.510 --> 00:13:03.600 align:start position:0%
deduplicate data that's commonly shared
and<00:13:02.050><c> one</c><00:13:02.590><c> of</c><00:13:02.680><c> the</c><00:13:02.740><c> most</c><00:13:02.950><c> commonly</c><00:13:03.340><c> shared</c>

00:13:03.600 --> 00:13:03.610 align:start position:0%
and one of the most commonly shared
 

00:13:03.610 --> 00:13:05.910 align:start position:0%
and one of the most commonly shared
things<00:13:04.000><c> here</c><00:13:04.330><c> is</c><00:13:04.480><c> the</c><00:13:04.750><c> string</c><00:13:04.990><c> data</c><00:13:05.170><c> so</c><00:13:05.830><c> this</c>

00:13:05.910 --> 00:13:05.920 align:start position:0%
things here is the string data so this
 

00:13:05.920 --> 00:13:07.770 align:start position:0%
things here is the string data so this
is<00:13:06.010><c> how</c><00:13:06.100><c> we</c><00:13:06.160><c> reduce</c><00:13:06.490><c> the</c><00:13:06.820><c> large</c><00:13:07.000><c> string</c><00:13:07.600><c> data</c>

00:13:07.770 --> 00:13:07.780 align:start position:0%
is how we reduce the large string data
 

00:13:07.780 --> 00:13:08.590 align:start position:0%
is how we reduce the large string data
section<00:13:08.170><c> that</c><00:13:08.320><c> we</c><00:13:08.380><c> saw</c>

00:13:08.590 --> 00:13:08.600 align:start position:0%
section that we saw
 

00:13:08.600 --> 00:13:12.189 align:start position:0%
section that we saw
earlier<00:13:09.610><c> finally</c><00:13:10.610><c> since</c><00:13:11.509><c> the</c><00:13:11.660><c> conversion</c><00:13:12.079><c> is</c>

00:13:12.189 --> 00:13:12.199 align:start position:0%
earlier finally since the conversion is
 

00:13:12.199 --> 00:13:14.439 align:start position:0%
earlier finally since the conversion is
automatically<00:13:12.740><c> done</c><00:13:12.980><c> on</c><00:13:13.100><c> device</c><00:13:13.430><c> this</c><00:13:14.149><c> means</c>

00:13:14.439 --> 00:13:14.449 align:start position:0%
automatically done on device this means
 

00:13:14.449 --> 00:13:16.240 align:start position:0%
automatically done on device this means
that<00:13:14.630><c> all</c><00:13:14.870><c> existing</c><00:13:15.350><c> applications</c><00:13:15.949><c> can</c><00:13:16.160><c> get</c>

00:13:16.240 --> 00:13:16.250 align:start position:0%
that all existing applications can get
 

00:13:16.250 --> 00:13:18.009 align:start position:0%
that all existing applications can get
the<00:13:16.339><c> benefits</c><00:13:16.730><c> of</c><00:13:16.880><c> compact</c><00:13:17.269><c> decks</c><00:13:17.509><c> without</c>

00:13:18.009 --> 00:13:18.019 align:start position:0%
the benefits of compact decks without
 

00:13:18.019 --> 00:13:23.860 align:start position:0%
the benefits of compact decks without
needing<00:13:18.380><c> to</c><00:13:18.560><c> recompile</c><00:13:19.220><c> their</c><00:13:19.490><c> apks</c><00:13:22.810><c> okay</c><00:13:23.810><c> so</c>

00:13:23.860 --> 00:13:23.870 align:start position:0%
needing to recompile their apks okay so
 

00:13:23.870 --> 00:13:25.389 align:start position:0%
needing to recompile their apks okay so
let's<00:13:24.170><c> look</c><00:13:24.500><c> at</c><00:13:24.620><c> one</c><00:13:24.769><c> example</c><00:13:24.800><c> of</c><00:13:25.250><c> how</c><00:13:25.339><c> we</c>

00:13:25.389 --> 00:13:25.399 align:start position:0%
let's look at one example of how we
 

00:13:25.399 --> 00:13:28.300 align:start position:0%
let's look at one example of how we
actually<00:13:25.639><c> shrink</c><00:13:26.089><c> the</c><00:13:26.180><c> Dex</c><00:13:26.360><c> code</c><00:13:26.600><c> items</c><00:13:27.310><c> apart</c>

00:13:28.300 --> 00:13:28.310 align:start position:0%
actually shrink the Dex code items apart
 

00:13:28.310 --> 00:13:30.129 align:start position:0%
actually shrink the Dex code items apart
from<00:13:28.399><c> the</c><00:13:28.519><c> instructions</c><00:13:29.089><c> each</c><00:13:29.329><c> code</c><00:13:29.540><c> item</c><00:13:29.750><c> has</c>

00:13:30.129 --> 00:13:30.139 align:start position:0%
from the instructions each code item has
 

00:13:30.139 --> 00:13:33.100 align:start position:0%
from the instructions each code item has
a<00:13:30.170><c> 16</c><00:13:30.949><c> byte</c><00:13:31.190><c> header</c><00:13:31.399><c> and</c><00:13:31.790><c> then</c><00:13:32.600><c> most</c><00:13:32.899><c> of</c><00:13:33.019><c> the</c>

00:13:33.100 --> 00:13:33.110 align:start position:0%
a 16 byte header and then most of the
 

00:13:33.110 --> 00:13:34.569 align:start position:0%
a 16 byte header and then most of the
values<00:13:33.440><c> in</c><00:13:33.560><c> the</c><00:13:33.649><c> header</c><00:13:33.829><c> are</c><00:13:34.040><c> usually</c><00:13:34.310><c> small</c>

00:13:34.569 --> 00:13:34.579 align:start position:0%
values in the header are usually small
 

00:13:34.579 --> 00:13:38.680 align:start position:0%
values in the header are usually small
values<00:13:35.620><c> so</c><00:13:36.620><c> what</c><00:13:36.800><c> we</c><00:13:36.949><c> do</c><00:13:37.100><c> here</c><00:13:37.130><c> is</c><00:13:37.670><c> we</c><00:13:38.360><c> shrink</c>

00:13:38.680 --> 00:13:38.690 align:start position:0%
values so what we do here is we shrink
 

00:13:38.690 --> 00:13:40.480 align:start position:0%
values so what we do here is we shrink
the<00:13:38.810><c> fields</c><00:13:39.350><c> in</c><00:13:39.440><c> the</c><00:13:39.529><c> header</c><00:13:39.620><c> to</c><00:13:39.920><c> be</c><00:13:40.009><c> four</c><00:13:40.279><c> bits</c>

00:13:40.480 --> 00:13:40.490 align:start position:0%
the fields in the header to be four bits
 

00:13:40.490 --> 00:13:42.460 align:start position:0%
the fields in the header to be four bits
each<00:13:40.699><c> and</c><00:13:41.000><c> then</c><00:13:41.449><c> we</c><00:13:41.540><c> have</c><00:13:41.690><c> an</c><00:13:41.810><c> optional</c><00:13:42.230><c> free</c>

00:13:42.460 --> 00:13:42.470 align:start position:0%
each and then we have an optional free
 

00:13:42.470 --> 00:13:47.110 align:start position:0%
each and then we have an optional free
header<00:13:42.649><c> to</c><00:13:42.949><c> extend</c><00:13:43.310><c> them</c><00:13:43.399><c> as</c><00:13:43.550><c> required</c><00:13:46.120><c> the</c>

00:13:47.110 --> 00:13:47.120 align:start position:0%
header to extend them as required the
 

00:13:47.120 --> 00:13:48.759 align:start position:0%
header to extend them as required the
pre<00:13:47.329><c> header</c><00:13:47.480><c> is</c><00:13:47.690><c> 0</c><00:13:47.899><c> bytes</c><00:13:48.170><c> in</c><00:13:48.319><c> most</c><00:13:48.529><c> of</c><00:13:48.680><c> the</c>

00:13:48.759 --> 00:13:48.769 align:start position:0%
pre header is 0 bytes in most of the
 

00:13:48.769 --> 00:13:50.680 align:start position:0%
pre header is 0 bytes in most of the
cases<00:13:48.980><c> but</c><00:13:49.370><c> can</c><00:13:49.579><c> be</c><00:13:49.699><c> up</c><00:13:49.819><c> to</c><00:13:49.970><c> 12</c><00:13:50.149><c> bytes</c><00:13:50.360><c> in</c><00:13:50.660><c> the</c>

00:13:50.680 --> 00:13:50.690 align:start position:0%
cases but can be up to 12 bytes in the
 

00:13:50.690 --> 00:13:54.759 align:start position:0%
cases but can be up to 12 bytes in the
worst<00:13:50.930><c> case</c><00:13:52.630><c> so</c><00:13:53.630><c> other</c><00:13:53.839><c> than</c><00:13:53.930><c> the</c><00:13:54.139><c> pre</c><00:13:54.589><c> header</c>

00:13:54.759 --> 00:13:54.769 align:start position:0%
worst case so other than the pre header
 

00:13:54.769 --> 00:13:57.120 align:start position:0%
worst case so other than the pre header
we<00:13:55.339><c> also</c><00:13:55.519><c> shrink</c><00:13:55.970><c> the</c><00:13:56.060><c> instruction</c><00:13:56.509><c> count</c>

00:13:57.120 --> 00:13:57.130 align:start position:0%
we also shrink the instruction count
 

00:13:57.130 --> 00:13:59.559 align:start position:0%
we also shrink the instruction count
since<00:13:58.130><c> the</c><00:13:58.579><c> average</c><00:13:58.699><c> method</c><00:13:59.000><c> is</c><00:13:59.209><c> not</c><00:13:59.329><c> going</c><00:13:59.509><c> to</c>

00:13:59.559 --> 00:13:59.569 align:start position:0%
since the average method is not going to
 

00:13:59.569 --> 00:14:01.870 align:start position:0%
since the average method is not going to
be<00:13:59.660><c> that</c><00:13:59.810><c> large</c><00:14:00.019><c> we</c><00:14:00.769><c> shrink</c><00:14:00.980><c> this</c><00:14:01.160><c> down</c><00:14:01.220><c> to</c><00:14:01.579><c> 11</c>

00:14:01.870 --> 00:14:01.880 align:start position:0%
be that large we shrink this down to 11
 

00:14:01.880 --> 00:14:04.300 align:start position:0%
be that large we shrink this down to 11
bits<00:14:02.089><c> instead</c><00:14:02.420><c> of</c><00:14:02.600><c> 32</c><00:14:02.959><c> bits</c><00:14:03.199><c> and</c><00:14:03.440><c> use</c><00:14:03.980><c> the</c><00:14:04.100><c> five</c>

00:14:04.300 --> 00:14:04.310 align:start position:0%
bits instead of 32 bits and use the five
 

00:14:04.310 --> 00:14:06.340 align:start position:0%
bits instead of 32 bits and use the five
remaining<00:14:04.550><c> this</c><00:14:04.910><c> four</c><00:14:05.389><c> flags</c><00:14:05.870><c> that</c><00:14:06.139><c> are</c><00:14:06.230><c> our</c>

00:14:06.340 --> 00:14:06.350 align:start position:0%
remaining this four flags that are our
 

00:14:06.350 --> 00:14:10.960 align:start position:0%
remaining this four flags that are our
specific<00:14:08.110><c> finally</c><00:14:09.110><c> we</c><00:14:10.009><c> move</c><00:14:10.279><c> the</c><00:14:10.670><c> debug</c>

00:14:10.960 --> 00:14:10.970 align:start position:0%
specific finally we move the debug
 

00:14:10.970 --> 00:14:12.639 align:start position:0%
specific finally we move the debug
information<00:14:11.269><c> into</c><00:14:11.870><c> a</c><00:14:11.899><c> separate</c><00:14:12.290><c> space</c>

00:14:12.639 --> 00:14:12.649 align:start position:0%
information into a separate space
 

00:14:12.649 --> 00:14:14.949 align:start position:0%
information into a separate space
sufficient<00:14:13.100><c> table</c><00:14:13.430><c> to</c><00:14:14.000><c> help</c><00:14:14.089><c> enable</c><00:14:14.569><c> more</c>

00:14:14.949 --> 00:14:14.959 align:start position:0%
sufficient table to help enable more
 

00:14:14.959 --> 00:14:18.249 align:start position:0%
sufficient table to help enable more
deduplication<00:14:15.620><c> of</c><00:14:15.920><c> the</c><00:14:16.189><c> code</c><00:14:16.339><c> items</c><00:14:17.259><c> overall</c>

00:14:18.249 --> 00:14:18.259 align:start position:0%
deduplication of the code items overall
 

00:14:18.259 --> 00:14:20.679 align:start position:0%
deduplication of the code items overall
this<00:14:18.920><c> optimization</c><00:14:19.519><c> saves</c><00:14:19.910><c> around</c><00:14:20.149><c> 12</c><00:14:20.420><c> bytes</c>

00:14:20.679 --> 00:14:20.689 align:start position:0%
this optimization saves around 12 bytes
 

00:14:20.689 --> 00:14:25.350 align:start position:0%
this optimization saves around 12 bytes
per<00:14:21.230><c> code</c><00:14:21.500><c> item</c><00:14:21.730><c> in</c><00:14:22.730><c> the</c><00:14:22.850><c> compact</c><00:14:23.120><c> Dex</c><00:14:23.360><c> file</c>

00:14:25.350 --> 00:14:25.360 align:start position:0%
per code item in the compact Dex file
 

00:14:25.360 --> 00:14:29.769 align:start position:0%
per code item in the compact Dex file
and<00:14:26.829><c> here</c><00:14:27.829><c> are</c><00:14:27.980><c> the</c><00:14:28.100><c> results</c><00:14:28.550><c> for</c><00:14:28.790><c> the</c><00:14:28.939><c> top</c><00:14:29.209><c> 99</c>

00:14:29.769 --> 00:14:29.779 align:start position:0%
and here are the results for the top 99
 

00:14:29.779 --> 00:14:32.829 align:start position:0%
and here are the results for the top 99
most<00:14:29.930><c> outlet</c><00:14:30.529><c> apks</c><00:14:31.040><c> so</c><00:14:31.699><c> the</c><00:14:31.819><c> average</c><00:14:32.000><c> space</c>

00:14:32.829 --> 00:14:32.839 align:start position:0%
most outlet apks so the average space
 

00:14:32.839 --> 00:14:34.929 align:start position:0%
most outlet apks so the average space
required<00:14:33.199><c> by</c><00:14:33.380><c> the</c><00:14:33.439><c> Dex</c><00:14:33.680><c> files</c><00:14:33.920><c> on</c><00:14:34.130><c> a</c><00:14:34.160><c> device</c><00:14:34.519><c> is</c>

00:14:34.929 --> 00:14:34.939 align:start position:0%
required by the Dex files on a device is
 

00:14:34.939 --> 00:14:37.679 align:start position:0%
required by the Dex files on a device is
around<00:14:35.569><c> 11</c><00:14:35.810><c> point</c><00:14:36.290><c> 6</c><00:14:36.350><c> percent</c><00:14:36.709><c> smaller</c><00:14:37.160><c> and</c>

00:14:37.679 --> 00:14:37.689 align:start position:0%
around 11 point 6 percent smaller and
 

00:14:37.689 --> 00:14:40.179 align:start position:0%
around 11 point 6 percent smaller and
then<00:14:38.689><c> also</c><00:14:38.899><c> other</c><00:14:39.230><c> than</c><00:14:39.439><c> the</c><00:14:39.500><c> storage</c><00:14:39.800><c> savings</c>

00:14:40.179 --> 00:14:40.189 align:start position:0%
then also other than the storage savings
 

00:14:40.189 --> 00:14:42.280 align:start position:0%
then also other than the storage savings
we<00:14:40.399><c> also</c><00:14:40.550><c> get</c><00:14:40.819><c> memory</c><00:14:41.149><c> savings</c><00:14:41.569><c> because</c><00:14:41.930><c> the</c>

00:14:42.280 --> 00:14:42.290 align:start position:0%
we also get memory savings because the
 

00:14:42.290 --> 00:14:44.710 align:start position:0%
we also get memory savings because the
Dex<00:14:42.740><c> files</c><00:14:43.009><c> are</c><00:14:43.189><c> resident</c><00:14:43.639><c> in</c><00:14:43.790><c> memory</c><00:14:43.819><c> during</c>

00:14:44.710 --> 00:14:44.720 align:start position:0%
Dex files are resident in memory during
 

00:14:44.720 --> 00:14:46.569 align:start position:0%
Dex files are resident in memory during
application<00:14:45.319><c> usage</c><00:14:45.680><c> at</c><00:14:45.889><c> least</c><00:14:46.069><c> partially</c>

00:14:46.569 --> 00:14:46.579 align:start position:0%
application usage at least partially
 

00:14:46.579 --> 00:14:51.040 align:start position:0%
application usage at least partially
resident<00:14:46.970><c> memory</c><00:14:47.800><c> and</c><00:14:49.329><c> one</c><00:14:50.329><c> more</c><00:14:50.540><c> thing</c><00:14:50.779><c> here</c>

00:14:51.040 --> 00:14:51.050 align:start position:0%
resident memory and one more thing here
 

00:14:51.050 --> 00:14:53.199 align:start position:0%
resident memory and one more thing here
let's<00:14:51.319><c> go</c><00:14:51.560><c> over</c><00:14:51.589><c> the</c><00:14:52.009><c> layout</c><00:14:52.279><c> optimizations</c><00:14:53.120><c> a</c>

00:14:53.199 --> 00:14:53.209 align:start position:0%
let's go over the layout optimizations a
 

00:14:53.209 --> 00:14:56.230 align:start position:0%
let's go over the layout optimizations a
little<00:14:53.420><c> bit</c><00:14:54.399><c> so</c><00:14:55.399><c> even</c><00:14:55.730><c> though</c><00:14:55.850><c> we</c><00:14:56.120><c> had</c>

00:14:56.230 --> 00:14:56.240 align:start position:0%
little bit so even though we had
 

00:14:56.240 --> 00:14:58.030 align:start position:0%
little bit so even though we had
introduced<00:14:56.630><c> the</c><00:14:56.959><c> JIT</c><00:14:57.170><c> profiles</c><00:14:57.560><c> in</c><00:14:57.740><c> Android</c>

00:14:58.030 --> 00:14:58.040 align:start position:0%
introduced the JIT profiles in Android
 

00:14:58.040 --> 00:14:59.740 align:start position:0%
introduced the JIT profiles in Android
and<00:14:58.250><c> we</c><00:14:59.000><c> did</c><00:14:59.149><c> not</c><00:14:59.209><c> have</c><00:14:59.360><c> any</c><00:14:59.540><c> layout</c>

00:14:59.740 --> 00:14:59.750 align:start position:0%
and we did not have any layout
 

00:14:59.750 --> 00:15:02.350 align:start position:0%
and we did not have any layout
optimizations<00:15:00.620><c> back</c><00:15:00.800><c> then</c><00:15:01.120><c> so</c><00:15:02.120><c> what</c><00:15:02.240><c> this</c>

00:15:02.350 --> 00:15:02.360 align:start position:0%
optimizations back then so what this
 

00:15:02.360 --> 00:15:04.150 align:start position:0%
optimizations back then so what this
means<00:15:02.420><c> the</c><00:15:03.019><c> Dex</c><00:15:03.380><c> is</c><00:15:03.529><c> kind</c><00:15:03.769><c> of</c><00:15:03.860><c> randomly</c>

00:15:04.150 --> 00:15:04.160 align:start position:0%
means the Dex is kind of randomly
 

00:15:04.160 --> 00:15:06.759 align:start position:0%
means the Dex is kind of randomly
ordered<00:15:04.610><c> and</c><00:15:04.819><c> not</c><00:15:05.410><c> disregarding</c><00:15:06.410><c> the</c><00:15:06.529><c> usage</c>

00:15:06.759 --> 00:15:06.769 align:start position:0%
ordered and not disregarding the usage
 

00:15:06.769 --> 00:15:11.590 align:start position:0%
ordered and not disregarding the usage
pattern<00:15:08.800><c> in</c><00:15:09.800><c> Android</c><00:15:10.279><c> oh</c><00:15:10.490><c> we</c><00:15:10.910><c> added</c><00:15:11.209><c> this</c><00:15:11.389><c> type</c>

00:15:11.590 --> 00:15:11.600 align:start position:0%
pattern in Android oh we added this type
 

00:15:11.600 --> 00:15:13.780 align:start position:0%
pattern in Android oh we added this type
of<00:15:11.630><c> layout</c><00:15:11.899><c> optimisation</c><00:15:12.589><c> that</c><00:15:13.160><c> groups</c><00:15:13.459><c> the</c>

00:15:13.780 --> 00:15:13.790 align:start position:0%
of layout optimisation that groups the
 

00:15:13.790 --> 00:15:15.400 align:start position:0%
of layout optimisation that groups the
methods<00:15:14.120><c> used</c><00:15:14.300><c> during</c><00:15:14.540><c> applications</c><00:15:15.170><c> start</c>

00:15:15.400 --> 00:15:15.410 align:start position:0%
methods used during applications start
 

00:15:15.410 --> 00:15:17.379 align:start position:0%
methods used during applications start
up<00:15:15.529><c> together</c><00:15:15.649><c> and</c><00:15:16.069><c> the</c><00:15:16.459><c> message</c><00:15:16.760><c> that</c><00:15:16.790><c> are</c><00:15:17.059><c> hot</c>

00:15:17.379 --> 00:15:17.389 align:start position:0%
up together and the message that are hot
 

00:15:17.389 --> 00:15:19.179 align:start position:0%
up together and the message that are hot
so<00:15:17.990><c> that</c><00:15:18.139><c> means</c><00:15:18.319><c> their</c><00:15:18.470><c> code</c><00:15:18.620><c> is</c><00:15:18.800><c> frequently</c>

00:15:19.179 --> 00:15:19.189 align:start position:0%
so that means their code is frequently
 

00:15:19.189 --> 00:15:20.110 align:start position:0%
so that means their code is frequently
accessed<00:15:19.699><c> during</c>

00:15:20.110 --> 00:15:20.120 align:start position:0%
accessed during
 

00:15:20.120 --> 00:15:23.140 align:start position:0%
accessed during
execution<00:15:20.660><c> together</c><00:15:21.700><c> this</c><00:15:22.700><c> seems</c><00:15:22.940><c> like</c><00:15:23.029><c> a</c>

00:15:23.140 --> 00:15:23.150 align:start position:0%
execution together this seems like a
 

00:15:23.150 --> 00:15:25.470 align:start position:0%
execution together this seems like a
pretty<00:15:23.360><c> good</c><00:15:23.480><c> a</c><00:15:23.630><c> pretty</c><00:15:24.020><c> big</c><00:15:24.500><c> win</c><00:15:25.250><c> so</c><00:15:25.430><c> far</c>

00:15:25.470 --> 00:15:25.480 align:start position:0%
pretty good a pretty big win so far
 

00:15:25.480 --> 00:15:30.400 align:start position:0%
pretty good a pretty big win so far
let's<00:15:26.480><c> see</c><00:15:26.600><c> what</c><00:15:26.810><c> we</c><00:15:26.900><c> did</c><00:15:27.050><c> for</c><00:15:27.350><c> Android</c><00:15:27.860><c> P</c><00:15:29.410><c> in</c>

00:15:30.400 --> 00:15:30.410 align:start position:0%
let's see what we did for Android P in
 

00:15:30.410 --> 00:15:32.860 align:start position:0%
let's see what we did for Android P in
Android<00:15:30.830><c> P</c><00:15:31.010><c> we</c><00:15:31.279><c> have</c><00:15:31.430><c> more</c><00:15:31.670><c> flexible</c><00:15:32.210><c> profile</c>

00:15:32.860 --> 00:15:32.870 align:start position:0%
Android P we have more flexible profile
 

00:15:32.870 --> 00:15:34.930 align:start position:0%
Android P we have more flexible profile
information<00:15:33.140><c> which</c><00:15:33.950><c> enables</c><00:15:34.370><c> us</c><00:15:34.520><c> to</c><00:15:34.580><c> put</c><00:15:34.820><c> the</c>

00:15:34.930 --> 00:15:34.940 align:start position:0%
information which enables us to put the
 

00:15:34.940 --> 00:15:35.920 align:start position:0%
information which enables us to put the
methods<00:15:35.240><c> that</c><00:15:35.300><c> are</c><00:15:35.450><c> used</c><00:15:35.480><c> only</c><00:15:35.779><c> during</c>

00:15:35.920 --> 00:15:35.930 align:start position:0%
methods that are used only during
 

00:15:35.930 --> 00:15:38.710 align:start position:0%
methods that are used only during
startup<00:15:36.470><c> together</c><00:15:37.089><c> this</c><00:15:38.089><c> helps</c><00:15:38.420><c> reduce</c><00:15:38.540><c> the</c>

00:15:38.710 --> 00:15:38.720 align:start position:0%
startup together this helps reduce the
 

00:15:38.720 --> 00:15:40.480 align:start position:0%
startup together this helps reduce the
amount<00:15:38.960><c> of</c><00:15:39.170><c> memory</c><00:15:39.500><c> used</c><00:15:39.680><c> because</c><00:15:39.980><c> the</c>

00:15:40.480 --> 00:15:40.490 align:start position:0%
amount of memory used because the
 

00:15:40.490 --> 00:15:42.220 align:start position:0%
amount of memory used because the
application<00:15:41.060><c> or</c><00:15:41.300><c> the</c><00:15:41.480><c> operating</c><00:15:41.720><c> system</c><00:15:42.050><c> can</c>

00:15:42.220 --> 00:15:42.230 align:start position:0%
application or the operating system can
 

00:15:42.230 --> 00:15:43.630 align:start position:0%
application or the operating system can
remove<00:15:42.529><c> those</c><00:15:42.680><c> pages</c><00:15:43.040><c> from</c><00:15:43.190><c> memory</c><00:15:43.430><c> after</c>

00:15:43.630 --> 00:15:43.640 align:start position:0%
remove those pages from memory after
 

00:15:43.640 --> 00:15:47.260 align:start position:0%
remove those pages from memory after
startup<00:15:45.310><c> we</c><00:15:46.310><c> also</c><00:15:46.460><c> put</c><00:15:46.760><c> the</c><00:15:46.850><c> hot</c><00:15:47.029><c> code</c>

00:15:47.260 --> 00:15:47.270 align:start position:0%
startup we also put the hot code
 

00:15:47.270 --> 00:15:48.910 align:start position:0%
startup we also put the hot code
together<00:15:47.450><c> since</c><00:15:47.900><c> it's</c><00:15:48.050><c> frequently</c><00:15:48.410><c> accessed</c>

00:15:48.910 --> 00:15:48.920 align:start position:0%
together since it's frequently accessed
 

00:15:48.920 --> 00:15:52.420 align:start position:0%
together since it's frequently accessed
during<00:15:49.370><c> execution</c><00:15:49.640><c> and</c><00:15:50.890><c> finally</c><00:15:51.890><c> we</c><00:15:52.190><c> put</c><00:15:52.339><c> the</c>

00:15:52.420 --> 00:15:52.430 align:start position:0%
during execution and finally we put the
 

00:15:52.430 --> 00:15:53.950 align:start position:0%
during execution and finally we put the
code<00:15:52.580><c> I</c><00:15:52.730><c> just</c><00:15:52.760><c> never</c><00:15:53.060><c> touched</c><00:15:53.420><c> at</c><00:15:53.570><c> all</c><00:15:53.660><c> during</c>

00:15:53.950 --> 00:15:53.960 align:start position:0%
code I just never touched at all during
 

00:15:53.960 --> 00:15:55.720 align:start position:0%
code I just never touched at all during
execution<00:15:54.230><c> at</c><00:15:54.680><c> the</c><00:15:54.860><c> end</c><00:15:55.010><c> so</c><00:15:55.310><c> that</c><00:15:55.430><c> is</c><00:15:55.550><c> not</c>

00:15:55.720 --> 00:15:55.730 align:start position:0%
execution at the end so that is not
 

00:15:55.730 --> 00:15:58.230 align:start position:0%
execution at the end so that is not
loaded<00:15:56.120><c> into</c><00:15:56.240><c> memory</c><00:15:56.390><c> unless</c><00:15:56.990><c> required</c><00:15:57.380><c> and</c>

00:15:58.230 --> 00:15:58.240 align:start position:0%
loaded into memory unless required and
 

00:15:58.240 --> 00:16:00.100 align:start position:0%
loaded into memory unless required and
the<00:15:59.240><c> reason</c><00:15:59.510><c> that</c><00:15:59.630><c> these</c><00:15:59.750><c> layout</c>

00:16:00.100 --> 00:16:00.110 align:start position:0%
the reason that these layout
 

00:16:00.110 --> 00:16:01.960 align:start position:0%
the reason that these layout
optimizations<00:16:00.770><c> are</c><00:16:00.920><c> important</c><00:16:01.430><c> is</c><00:16:01.580><c> because</c>

00:16:01.960 --> 00:16:01.970 align:start position:0%
optimizations are important is because
 

00:16:01.970 --> 00:16:03.970 align:start position:0%
optimizations are important is because
they<00:16:02.390><c> improve</c><00:16:02.690><c> locality</c><00:16:03.260><c> and</c><00:16:03.500><c> reduce</c><00:16:03.800><c> how</c>

00:16:03.970 --> 00:16:03.980 align:start position:0%
they improve locality and reduce how
 

00:16:03.980 --> 00:16:05.890 align:start position:0%
they improve locality and reduce how
many<00:16:04.190><c> parts</c><00:16:04.850><c> as</c><00:16:04.970><c> a</c><00:16:05.000><c> Dex</c><00:16:05.210><c> file</c><00:16:05.420><c> are</c><00:16:05.570><c> actually</c>

00:16:05.890 --> 00:16:05.900 align:start position:0%
many parts as a Dex file are actually
 

00:16:05.900 --> 00:16:08.680 align:start position:0%
many parts as a Dex file are actually
loaded<00:16:06.350><c> into</c><00:16:07.160><c> memory</c><00:16:07.400><c> during</c><00:16:07.970><c> an</c><00:16:08.210><c> application</c>

00:16:08.680 --> 00:16:08.690 align:start position:0%
loaded into memory during an application
 

00:16:08.690 --> 00:16:10.930 align:start position:0%
loaded into memory during an application
usage<00:16:09.020><c> and</c><00:16:09.230><c> startup</c><00:16:09.650><c> so</c><00:16:10.370><c> if</c><00:16:10.490><c> you</c><00:16:10.580><c> improve</c><00:16:10.790><c> the</c>

00:16:10.930 --> 00:16:10.940 align:start position:0%
usage and startup so if you improve the
 

00:16:10.940 --> 00:16:12.490 align:start position:0%
usage and startup so if you improve the
locality<00:16:11.390><c> here</c><00:16:11.600><c> you</c><00:16:11.900><c> can</c><00:16:12.050><c> get</c><00:16:12.170><c> startup</c>

00:16:12.490 --> 00:16:12.500 align:start position:0%
locality here you can get startup
 

00:16:12.500 --> 00:16:15.400 align:start position:0%
locality here you can get startup
benefits<00:16:12.980><c> memory</c><00:16:13.880><c> reduction</c><00:16:14.420><c> and</c><00:16:15.170><c> of</c>

00:16:15.400 --> 00:16:15.410 align:start position:0%
benefits memory reduction and of
 

00:16:15.410 --> 00:16:18.579 align:start position:0%
benefits memory reduction and of
production<00:16:15.950><c> and</c><00:16:16.100><c> memory</c><00:16:16.310><c> usage</c><00:16:16.610><c> and</c><00:16:17.050><c> now</c><00:16:18.050><c> the</c>

00:16:18.579 --> 00:16:18.589 align:start position:0%
production and memory usage and now the
 

00:16:18.589 --> 00:16:27.480 align:start position:0%
production and memory usage and now the
killeen<00:16:18.920><c> or</c><00:16:19.370><c> cloud</c><00:16:19.580><c> profiles</c>

00:16:27.480 --> 00:16:27.490 align:start position:0%
 
 

00:16:27.490 --> 00:16:30.810 align:start position:0%
 
Thank<00:16:28.420><c> You</c><00:16:28.510><c> Matthew</c><00:16:28.660><c> hello</c><00:16:29.620><c> everyone</c><00:16:29.980><c> my</c><00:16:30.670><c> name</c>

00:16:30.810 --> 00:16:30.820 align:start position:0%
Thank You Matthew hello everyone my name
 

00:16:30.820 --> 00:16:33.060 align:start position:0%
Thank You Matthew hello everyone my name
is<00:16:30.850><c> Colleen</c><00:16:31.360><c> and</c><00:16:31.930><c> I'm</c><00:16:32.050><c> here</c><00:16:32.320><c> today</c><00:16:32.530><c> to</c><00:16:32.710><c> present</c>

00:16:33.060 --> 00:16:33.070 align:start position:0%
is Colleen and I'm here today to present
 

00:16:33.070 --> 00:16:36.000 align:start position:0%
is Colleen and I'm here today to present
you<00:16:33.520><c> how</c><00:16:33.790><c> we</c><00:16:33.850><c> plan</c><00:16:34.240><c> to</c><00:16:34.450><c> improve</c><00:16:34.900><c> and</c><00:16:35.170><c> scale</c><00:16:35.710><c> up</c>

00:16:36.000 --> 00:16:36.010 align:start position:0%
you how we plan to improve and scale up
 

00:16:36.010 --> 00:16:37.950 align:start position:0%
you how we plan to improve and scale up
the<00:16:36.520><c> Android</c><00:16:36.940><c> runtime</c><00:16:37.030><c> profiling</c>

00:16:37.950 --> 00:16:37.960 align:start position:0%
the Android runtime profiling
 

00:16:37.960 --> 00:16:41.130 align:start position:0%
the Android runtime profiling
infrastructure<00:16:39.330><c> however</c><00:16:40.330><c> before</c><00:16:40.600><c> we</c><00:16:40.750><c> start</c>

00:16:41.130 --> 00:16:41.140 align:start position:0%
infrastructure however before we start
 

00:16:41.140 --> 00:16:43.070 align:start position:0%
infrastructure however before we start
profiling<00:16:41.740><c> is</c><00:16:41.890><c> a</c><00:16:41.920><c> rather</c><00:16:42.190><c> overloaded</c><00:16:42.880><c> term</c>

00:16:43.070 --> 00:16:43.080 align:start position:0%
profiling is a rather overloaded term
 

00:16:43.080 --> 00:16:45.630 align:start position:0%
profiling is a rather overloaded term
when<00:16:44.080><c> you</c><00:16:44.260><c> speak</c><00:16:44.500><c> about</c><00:16:44.530><c> profiling</c><00:16:45.280><c> in</c>

00:16:45.630 --> 00:16:45.640 align:start position:0%
when you speak about profiling in
 

00:16:45.640 --> 00:16:47.550 align:start position:0%
when you speak about profiling in
today's<00:16:46.090><c> presentation</c><00:16:46.320><c> we're</c><00:16:47.320><c> going</c><00:16:47.500><c> to</c>

00:16:47.550 --> 00:16:47.560 align:start position:0%
today's presentation we're going to
 

00:16:47.560 --> 00:16:49.440 align:start position:0%
today's presentation we're going to
refer<00:16:47.890><c> to</c><00:16:47.920><c> the</c><00:16:48.220><c> metadata</c><00:16:48.700><c> that</c><00:16:49.090><c> they're</c><00:16:49.360><c> on</c>

00:16:49.440 --> 00:16:49.450 align:start position:0%
refer to the metadata that they're on
 

00:16:49.450 --> 00:16:51.570 align:start position:0%
refer to the metadata that they're on
droids<00:16:49.720><c> runtime</c><00:16:50.230><c> captures</c><00:16:51.160><c> about</c><00:16:51.460><c> the</c>

00:16:51.570 --> 00:16:51.580 align:start position:0%
droids runtime captures about the
 

00:16:51.580 --> 00:16:54.030 align:start position:0%
droids runtime captures about the
application<00:16:52.090><c> execution</c><00:16:52.680><c> metadata</c><00:16:53.680><c> that</c><00:16:53.800><c> are</c>

00:16:54.030 --> 00:16:54.040 align:start position:0%
application execution metadata that are
 

00:16:54.040 --> 00:16:55.890 align:start position:0%
application execution metadata that are
going<00:16:54.160><c> to</c><00:16:54.250><c> be</c><00:16:54.370><c> feed</c><00:16:54.640><c> into</c><00:16:54.940><c> a</c><00:16:54.970><c> profile</c><00:16:55.450><c> guided</c>

00:16:55.890 --> 00:16:55.900 align:start position:0%
going to be feed into a profile guided
 

00:16:55.900 --> 00:16:59.670 align:start position:0%
going to be feed into a profile guided
optimization<00:16:56.620><c> process</c><00:16:57.930><c> we're</c><00:16:58.930><c> gonna</c><00:16:59.110><c> see</c><00:16:59.410><c> how</c>

00:16:59.670 --> 00:16:59.680 align:start position:0%
optimization process we're gonna see how
 

00:16:59.680 --> 00:17:02.790 align:start position:0%
optimization process we're gonna see how
we<00:16:59.740><c> extend</c><00:17:00.220><c> the</c><00:17:00.370><c> own</c><00:17:00.520><c> device</c><00:17:00.910><c> capabilities</c><00:17:01.800><c> in</c>

00:17:02.790 --> 00:17:02.800 align:start position:0%
we extend the own device capabilities in
 

00:17:02.800 --> 00:17:04.800 align:start position:0%
we extend the own device capabilities in
order<00:17:03.070><c> to</c><00:17:03.190><c> drive</c><00:17:03.400><c> performance</c><00:17:03.610><c> right</c><00:17:04.570><c> at</c>

00:17:04.800 --> 00:17:04.810 align:start position:0%
order to drive performance right at
 

00:17:04.810 --> 00:17:13.770 align:start position:0%
order to drive performance right at
install<00:17:05.170><c> time</c><00:17:10.860><c> before</c><00:17:11.860><c> we</c><00:17:12.850><c> jump</c><00:17:13.150><c> into</c><00:17:13.360><c> what</c><00:17:13.600><c> is</c>

00:17:13.770 --> 00:17:13.780 align:start position:0%
install time before we jump into what is
 

00:17:13.780 --> 00:17:16.230 align:start position:0%
install time before we jump into what is
new<00:17:14.050><c> and</c><00:17:14.260><c> how</c><00:17:14.740><c> much</c><00:17:14.920><c> it</c><00:17:15.190><c> was</c><00:17:15.490><c> let</c><00:17:15.820><c> me</c><00:17:15.940><c> briefly</c>

00:17:16.230 --> 00:17:16.240 align:start position:0%
new and how much it was let me briefly
 

00:17:16.240 --> 00:17:18.390 align:start position:0%
new and how much it was let me briefly
remind<00:17:16.750><c> you</c><00:17:16.900><c> how</c><00:17:17.080><c> Android</c><00:17:17.589><c> uses</c><00:17:18.010><c> profile</c>

00:17:18.390 --> 00:17:18.400 align:start position:0%
remind you how Android uses profile
 

00:17:18.400 --> 00:17:20.790 align:start position:0%
remind you how Android uses profile
guided<00:17:18.760><c> optimizations</c><00:17:19.540><c> this</c><00:17:20.500><c> is</c><00:17:20.650><c> an</c>

00:17:20.790 --> 00:17:20.800 align:start position:0%
guided optimizations this is an
 

00:17:20.800 --> 00:17:22.560 align:start position:0%
guided optimizations this is an
efficient<00:17:21.250><c> technique</c><00:17:21.640><c> that</c><00:17:22.030><c> we</c><00:17:22.180><c> introduced</c>

00:17:22.560 --> 00:17:22.570 align:start position:0%
efficient technique that we introduced
 

00:17:22.570 --> 00:17:24.750 align:start position:0%
efficient technique that we introduced
in<00:17:22.690><c> Android</c><00:17:23.110><c> luga</c><00:17:23.440><c> as</c><00:17:23.890><c> part</c><00:17:24.220><c> of</c><00:17:24.339><c> a</c><00:17:24.490><c> hybrid</c>

00:17:24.750 --> 00:17:24.760 align:start position:0%
in Android luga as part of a hybrid
 

00:17:24.760 --> 00:17:27.660 align:start position:0%
in Android luga as part of a hybrid
execution<00:17:25.570><c> model</c><00:17:26.040><c> hybrid</c><00:17:27.040><c> means</c><00:17:27.250><c> that</c><00:17:27.550><c> the</c>

00:17:27.660 --> 00:17:27.670 align:start position:0%
execution model hybrid means that the
 

00:17:27.670 --> 00:17:29.850 align:start position:0%
execution model hybrid means that the
code<00:17:27.970><c> being</c><00:17:28.330><c> executed</c><00:17:28.630><c> can</c><00:17:29.260><c> be</c><00:17:29.440><c> in</c><00:17:29.530><c> three</c>

00:17:29.850 --> 00:17:29.860 align:start position:0%
code being executed can be in three
 

00:17:29.860 --> 00:17:31.890 align:start position:0%
code being executed can be in three
different<00:17:30.250><c> optimization</c><00:17:31.180><c> States</c><00:17:31.510><c> at</c><00:17:31.780><c> the</c>

00:17:31.890 --> 00:17:31.900 align:start position:0%
different optimization States at the
 

00:17:31.900 --> 00:17:34.920 align:start position:0%
different optimization States at the
same<00:17:32.110><c> time</c><00:17:32.880><c> the</c><00:17:33.880><c> primary</c><00:17:34.180><c> goal</c><00:17:34.600><c> of</c><00:17:34.780><c> this</c>

00:17:34.920 --> 00:17:34.930 align:start position:0%
same time the primary goal of this
 

00:17:34.930 --> 00:17:37.800 align:start position:0%
same time the primary goal of this
technique<00:17:35.350><c> is</c><00:17:35.620><c> to</c><00:17:36.010><c> improve</c><00:17:36.580><c> all</c><00:17:36.850><c> key</c><00:17:37.270><c> metrics</c>

00:17:37.800 --> 00:17:37.810 align:start position:0%
technique is to improve all key metrics
 

00:17:37.810 --> 00:17:39.900 align:start position:0%
technique is to improve all key metrics
of<00:17:37.900><c> the</c><00:17:37.960><c> application</c><00:17:38.560><c> performance</c><00:17:39.100><c> we're</c>

00:17:39.900 --> 00:17:39.910 align:start position:0%
of the application performance we're
 

00:17:39.910 --> 00:17:42.060 align:start position:0%
of the application performance we're
talking<00:17:40.210><c> about</c><00:17:40.330><c> faster</c><00:17:41.080><c> application</c><00:17:41.230><c> startup</c>

00:17:42.060 --> 00:17:42.070 align:start position:0%
talking about faster application startup
 

00:17:42.070 --> 00:17:45.600 align:start position:0%
talking about faster application startup
time<00:17:42.630><c> reduce</c><00:17:43.630><c> memory</c><00:17:44.080><c> footprint</c><00:17:44.650><c> a</c><00:17:44.980><c> better</c>

00:17:45.600 --> 00:17:45.610 align:start position:0%
time reduce memory footprint a better
 

00:17:45.610 --> 00:17:48.150 align:start position:0%
time reduce memory footprint a better
user<00:17:46.000><c> experience</c><00:17:46.720><c> by</c><00:17:47.020><c> providing</c><00:17:47.200><c> less</c><00:17:47.800><c> junk</c>

00:17:48.150 --> 00:17:48.160 align:start position:0%
user experience by providing less junk
 

00:17:48.160 --> 00:17:51.960 align:start position:0%
user experience by providing less junk
during<00:17:48.730><c> usage</c><00:17:49.170><c> less</c><00:17:50.170><c> disk</c><00:17:50.530><c> space</c><00:17:50.800><c> used</c><00:17:51.700><c> by</c><00:17:51.850><c> the</c>

00:17:51.960 --> 00:17:51.970 align:start position:0%
during usage less disk space used by the
 

00:17:51.970 --> 00:17:54.240 align:start position:0%
during usage less disk space used by the
compiler<00:17:52.390><c> artifacts</c><00:17:53.200><c> which</c><00:17:53.410><c> means</c><00:17:53.650><c> more</c><00:17:53.980><c> disk</c>

00:17:54.240 --> 00:17:54.250 align:start position:0%
compiler artifacts which means more disk
 

00:17:54.250 --> 00:17:56.970 align:start position:0%
compiler artifacts which means more disk
space<00:17:54.310><c> for</c><00:17:54.790><c> our</c><00:17:54.880><c> users</c><00:17:55.390><c> and</c><00:17:55.600><c> nonetheless</c><00:17:56.500><c> an</c>

00:17:56.970 --> 00:17:56.980 align:start position:0%
space for our users and nonetheless an
 

00:17:56.980 --> 00:17:59.550 align:start position:0%
space for our users and nonetheless an
increased<00:17:57.400><c> battery</c><00:17:57.670><c> life</c><00:17:58.120><c> because</c><00:17:58.930><c> we</c><00:17:59.290><c> do</c>

00:17:59.550 --> 00:17:59.560 align:start position:0%
increased battery life because we do
 

00:17:59.560 --> 00:18:00.780 align:start position:0%
increased battery life because we do
heavy<00:17:59.740><c> optimizations</c>

00:18:00.780 --> 00:18:00.790 align:start position:0%
heavy optimizations
 

00:18:00.790 --> 00:18:02.580 align:start position:0%
heavy optimizations
when<00:18:01.000><c> the</c><00:18:01.090><c> device</c><00:18:01.330><c> is</c><00:18:01.360><c> not</c><00:18:01.660><c> used</c><00:18:01.960><c> rather</c><00:18:02.440><c> than</c>

00:18:02.580 --> 00:18:02.590 align:start position:0%
when the device is not used rather than
 

00:18:02.590 --> 00:18:08.100 align:start position:0%
when the device is not used rather than
at<00:18:02.860><c> the</c><00:18:02.950><c> use</c><00:18:03.100><c> time</c><00:18:05.430><c> how</c><00:18:06.430><c> does</c><00:18:06.640><c> this</c><00:18:06.820><c> work</c><00:18:07.120><c> it</c>

00:18:08.100 --> 00:18:08.110 align:start position:0%
at the use time how does this work it
 

00:18:08.110 --> 00:18:10.380 align:start position:0%
at the use time how does this work it
all<00:18:08.440><c> starts</c><00:18:09.100><c> when</c><00:18:09.280><c> the</c><00:18:09.520><c> Play</c><00:18:09.700><c> Store</c><00:18:09.940><c> installs</c>

00:18:10.380 --> 00:18:10.390 align:start position:0%
all starts when the Play Store installs
 

00:18:10.390 --> 00:18:13.440 align:start position:0%
all starts when the Play Store installs
the<00:18:10.600><c> application</c><00:18:11.230><c> but</c><00:18:12.100><c> first</c><00:18:12.490><c> we</c><00:18:12.970><c> do</c><00:18:13.120><c> very</c>

00:18:13.440 --> 00:18:13.450 align:start position:0%
the application but first we do very
 

00:18:13.450 --> 00:18:15.810 align:start position:0%
the application but first we do very
very<00:18:13.810><c> light</c><00:18:14.080><c> optimizations</c><00:18:14.920><c> and</c><00:18:15.370><c> we</c><00:18:15.520><c> have</c><00:18:15.700><c> the</c>

00:18:15.810 --> 00:18:15.820 align:start position:0%
very light optimizations and we have the
 

00:18:15.820 --> 00:18:19.050 align:start position:0%
very light optimizations and we have the
application<00:18:16.360><c> ready</c><00:18:16.630><c> to</c><00:18:16.810><c> go</c><00:18:16.960><c> for</c><00:18:17.170><c> the</c><00:18:17.290><c> user</c><00:18:18.060><c> but</c>

00:18:19.050 --> 00:18:19.060 align:start position:0%
application ready to go for the user but
 

00:18:19.060 --> 00:18:21.420 align:start position:0%
application ready to go for the user but
first<00:18:19.390><c> launch</c><00:18:19.720><c> the</c><00:18:20.410><c> application</c><00:18:20.980><c> we'll</c><00:18:21.100><c> start</c>

00:18:21.420 --> 00:18:21.430 align:start position:0%
first launch the application we'll start
 

00:18:21.430 --> 00:18:23.540 align:start position:0%
first launch the application we'll start
in<00:18:21.610><c> what</c><00:18:21.790><c> we</c><00:18:21.940><c> call</c><00:18:22.150><c> an</c><00:18:22.300><c> interpretation</c><00:18:22.840><c> mode</c>

00:18:23.540 --> 00:18:23.550 align:start position:0%
in what we call an interpretation mode
 

00:18:23.550 --> 00:18:26.280 align:start position:0%
in what we call an interpretation mode
but<00:18:24.550><c> the</c><00:18:24.700><c> runtime</c><00:18:25.090><c> execuse</c><00:18:25.570><c> the</c><00:18:25.720><c> application</c>

00:18:26.280 --> 00:18:26.290 align:start position:0%
but the runtime execuse the application
 

00:18:26.290 --> 00:18:28.380 align:start position:0%
but the runtime execuse the application
code<00:18:26.470><c> it</c><00:18:26.770><c> discovers</c><00:18:27.460><c> the</c><00:18:27.610><c> most</c><00:18:27.820><c> frequently</c>

00:18:28.380 --> 00:18:28.390 align:start position:0%
code it discovers the most frequently
 

00:18:28.390 --> 00:18:30.150 align:start position:0%
code it discovers the most frequently
used<00:18:28.450><c> methods</c><00:18:29.170><c> and</c><00:18:29.320><c> the</c><00:18:29.440><c> most</c><00:18:29.590><c> important</c>

00:18:30.150 --> 00:18:30.160 align:start position:0%
used methods and the most important
 

00:18:30.160 --> 00:18:32.790 align:start position:0%
used methods and the most important
methods<00:18:30.580><c> to</c><00:18:30.700><c> be</c><00:18:30.820><c> optimized</c><00:18:31.530><c> that's</c><00:18:32.530><c> when</c><00:18:32.770><c> a</c>

00:18:32.790 --> 00:18:32.800 align:start position:0%
methods to be optimized that's when a
 

00:18:32.800 --> 00:18:35.280 align:start position:0%
methods to be optimized that's when a
JIT<00:18:33.100><c> System</c><00:18:33.550><c> game</c><00:18:33.820><c> kicks</c><00:18:34.360><c> in</c><00:18:34.660><c> and</c><00:18:35.140><c> will</c>

00:18:35.280 --> 00:18:35.290 align:start position:0%
JIT System game kicks in and will
 

00:18:35.290 --> 00:18:39.660 align:start position:0%
JIT System game kicks in and will
optimize<00:18:35.620><c> the</c><00:18:35.950><c> code</c><00:18:37.170><c> during</c><00:18:38.170><c> this</c><00:18:38.470><c> time</c>

00:18:39.660 --> 00:18:39.670 align:start position:0%
optimize the code during this time
 

00:18:39.670 --> 00:18:41.670 align:start position:0%
optimize the code during this time
the<00:18:39.790><c> JIT</c><00:18:40.030><c> system</c><00:18:40.480><c> also</c><00:18:40.780><c> records</c><00:18:41.410><c> what</c><00:18:41.560><c> he</c>

00:18:41.670 --> 00:18:41.680 align:start position:0%
the JIT system also records what he
 

00:18:41.680 --> 00:18:44.850 align:start position:0%
the JIT system also records what he
called<00:18:41.920><c> a</c><00:18:42.100><c> profile</c><00:18:42.550><c> information</c><00:18:43.860><c> this</c>

00:18:44.850 --> 00:18:44.860 align:start position:0%
called a profile information this
 

00:18:44.860 --> 00:18:46.620 align:start position:0%
called a profile information this
profile<00:18:45.430><c> information</c><00:18:45.760><c> essentially</c>

00:18:46.620 --> 00:18:46.630 align:start position:0%
profile information essentially
 

00:18:46.630 --> 00:18:48.840 align:start position:0%
profile information essentially
encapsulates<00:18:47.200><c> data</c><00:18:47.500><c> about</c><00:18:47.800><c> the</c><00:18:47.980><c> methods</c><00:18:48.400><c> that</c>

00:18:48.840 --> 00:18:48.850 align:start position:0%
encapsulates data about the methods that
 

00:18:48.850 --> 00:18:51.060 align:start position:0%
encapsulates data about the methods that
are<00:18:49.030><c> being</c><00:18:49.240><c> executed</c><00:18:49.540><c> and</c><00:18:49.990><c> about</c><00:18:50.440><c> the</c><00:18:50.650><c> classes</c>

00:18:51.060 --> 00:18:51.070 align:start position:0%
are being executed and about the classes
 

00:18:51.070 --> 00:18:54.270 align:start position:0%
are being executed and about the classes
that<00:18:51.100><c> are</c><00:18:51.340><c> being</c><00:18:51.550><c> loaded</c><00:18:52.830><c> every</c><00:18:53.830><c> now</c><00:18:53.980><c> and</c><00:18:54.160><c> then</c>

00:18:54.270 --> 00:18:54.280 align:start position:0%
that are being loaded every now and then
 

00:18:54.280 --> 00:18:56.760 align:start position:0%
that are being loaded every now and then
we<00:18:54.520><c> dump</c><00:18:54.730><c> this</c><00:18:54.970><c> profile</c><00:18:55.540><c> to</c><00:18:55.870><c> disk</c><00:18:56.110><c> so</c><00:18:56.350><c> that</c><00:18:56.650><c> we</c>

00:18:56.760 --> 00:18:56.770 align:start position:0%
we dump this profile to disk so that we
 

00:18:56.770 --> 00:19:00.600 align:start position:0%
we dump this profile to disk so that we
can<00:18:56.950><c> reuse</c><00:18:57.280><c> it</c><00:18:57.430><c> later</c><00:18:59.190><c> once</c><00:19:00.190><c> the</c><00:19:00.310><c> device</c><00:19:00.580><c> is</c>

00:19:00.600 --> 00:19:00.610 align:start position:0%
can reuse it later once the device is
 

00:19:00.610 --> 00:19:03.660 align:start position:0%
can reuse it later once the device is
put<00:19:00.970><c> aside</c><00:19:01.330><c> and</c><00:19:01.660><c> is</c><00:19:01.840><c> not</c><00:19:01.990><c> in</c><00:19:02.140><c> used</c><00:19:02.380><c> a</c><00:19:02.710><c> state</c>

00:19:03.660 --> 00:19:03.670 align:start position:0%
put aside and is not in used a state
 

00:19:03.670 --> 00:19:05.610 align:start position:0%
put aside and is not in used a state
which<00:19:03.940><c> we</c><00:19:04.060><c> call</c><00:19:04.300><c> idle</c><00:19:04.840><c> maintenance</c><00:19:05.380><c> mode</c>

00:19:05.610 --> 00:19:05.620 align:start position:0%
which we call idle maintenance mode
 

00:19:05.620 --> 00:19:08.520 align:start position:0%
which we call idle maintenance mode
we're<00:19:06.280><c> gonna</c><00:19:06.460><c> use</c><00:19:06.760><c> that</c><00:19:07.000><c> profile</c><00:19:07.510><c> to</c><00:19:08.260><c> drive</c>

00:19:08.520 --> 00:19:08.530 align:start position:0%
we're gonna use that profile to drive
 

00:19:08.530 --> 00:19:10.910 align:start position:0%
we're gonna use that profile to drive
profile<00:19:09.100><c> guided</c><00:19:09.550><c> optimizations</c>

00:19:10.910 --> 00:19:10.920 align:start position:0%
profile guided optimizations
 

00:19:10.920 --> 00:19:14.700 align:start position:0%
profile guided optimizations
the<00:19:11.920><c> result</c><00:19:12.340><c> is</c><00:19:12.820><c> an</c><00:19:13.120><c> optimized</c><00:19:13.510><c> optimized</c><00:19:14.440><c> app</c>

00:19:14.700 --> 00:19:14.710 align:start position:0%
the result is an optimized optimized app
 

00:19:14.710 --> 00:19:16.890 align:start position:0%
the result is an optimized optimized app
it<00:19:15.160><c> will</c><00:19:15.280><c> eventually</c><00:19:15.550><c> replace</c><00:19:16.180><c> the</c><00:19:16.420><c> original</c>

00:19:16.890 --> 00:19:16.900 align:start position:0%
it will eventually replace the original
 

00:19:16.900 --> 00:19:20.820 align:start position:0%
it will eventually replace the original
state<00:19:17.790><c> now</c><00:19:18.870><c> when</c><00:19:19.870><c> the</c><00:19:19.990><c> user</c><00:19:20.140><c> really</c><00:19:20.470><c> launches</c>

00:19:20.820 --> 00:19:20.830 align:start position:0%
state now when the user really launches
 

00:19:20.830 --> 00:19:22.770 align:start position:0%
state now when the user really launches
the<00:19:21.010><c> app</c><00:19:21.100><c> it</c><00:19:21.640><c> will</c><00:19:21.790><c> have</c><00:19:21.970><c> a</c><00:19:22.000><c> much</c><00:19:22.300><c> snappier</c>

00:19:22.770 --> 00:19:22.780 align:start position:0%
the app it will have a much snappier
 

00:19:22.780 --> 00:19:25.290 align:start position:0%
the app it will have a much snappier
start<00:19:23.410><c> of</c><00:19:23.590><c> time</c><00:19:23.830><c> the</c><00:19:24.340><c> much</c><00:19:24.550><c> better</c><00:19:24.910><c> steady</c>

00:19:25.290 --> 00:19:25.300 align:start position:0%
start of time the much better steady
 

00:19:25.300 --> 00:19:28.260 align:start position:0%
start of time the much better steady
state<00:19:25.570><c> performance</c><00:19:25.720><c> execution</c><00:19:26.710><c> and</c><00:19:27.270><c> overall</c>

00:19:28.260 --> 00:19:28.270 align:start position:0%
state performance execution and overall
 

00:19:28.270 --> 00:19:31.890 align:start position:0%
state performance execution and overall
the<00:19:28.630><c> battery</c><00:19:28.990><c> will</c><00:19:29.140><c> drain</c><00:19:29.320><c> last</c><00:19:30.600><c> in</c><00:19:31.600><c> this</c>

00:19:31.890 --> 00:19:31.900 align:start position:0%
the battery will drain last in this
 

00:19:31.900 --> 00:19:34.520 align:start position:0%
the battery will drain last in this
state<00:19:32.200><c> the</c><00:19:32.770><c> application</c><00:19:33.150><c> will</c><00:19:34.150><c> be</c>

00:19:34.520 --> 00:19:34.530 align:start position:0%
state the application will be
 

00:19:34.530 --> 00:19:37.380 align:start position:0%
state the application will be
interpreted<00:19:35.530><c> just</c><00:19:35.740><c> in</c><00:19:36.190><c> time</c><00:19:36.340><c> compound</c><00:19:36.790><c> or</c>

00:19:37.380 --> 00:19:37.390 align:start position:0%
interpreted just in time compound or
 

00:19:37.390 --> 00:19:42.420 align:start position:0%
interpreted just in time compound or
pre-optimized<00:19:40.170><c> now</c><00:19:41.170><c> just</c><00:19:41.410><c> how</c><00:19:41.620><c> efficient</c><00:19:42.250><c> is</c>

00:19:42.420 --> 00:19:42.430 align:start position:0%
pre-optimized now just how efficient is
 

00:19:42.430 --> 00:19:45.990 align:start position:0%
pre-optimized now just how efficient is
this<00:19:42.640><c> technique</c><00:19:43.740><c> we</c><00:19:44.740><c> gather</c><00:19:44.980><c> some</c><00:19:45.280><c> data</c><00:19:45.310><c> from</c>

00:19:45.990 --> 00:19:46.000 align:start position:0%
this technique we gather some data from
 

00:19:46.000 --> 00:19:46.680 align:start position:0%
this technique we gather some data from
the<00:19:46.180><c> field</c>

00:19:46.680 --> 00:19:46.690 align:start position:0%
the field
 

00:19:46.690 --> 00:19:49.560 align:start position:0%
the field
for<00:19:46.900><c> Google</c><00:19:47.050><c> Maps</c><00:19:47.230><c> application</c><00:19:48.300><c> here</c><00:19:49.300><c> you</c><00:19:49.390><c> can</c>

00:19:49.560 --> 00:19:49.570 align:start position:0%
for Google Maps application here you can
 

00:19:49.570 --> 00:19:53.220 align:start position:0%
for Google Maps application here you can
see<00:19:49.750><c> two</c><00:19:49.960><c> charts</c><00:19:51.180><c> the</c><00:19:52.180><c> left</c><00:19:52.450><c> one</c><00:19:52.720><c> presents</c>

00:19:53.220 --> 00:19:53.230 align:start position:0%
see two charts the left one presents
 

00:19:53.230 --> 00:19:56.190 align:start position:0%
see two charts the left one presents
data<00:19:53.650><c> from</c><00:19:54.010><c> a</c><00:19:54.100><c> marshmallow</c><00:19:54.580><c> build</c><00:19:55.150><c> you</c><00:19:56.020><c> can</c>

00:19:56.190 --> 00:19:56.200 align:start position:0%
data from a marshmallow build you can
 

00:19:56.200 --> 00:19:58.020 align:start position:0%
data from a marshmallow build you can
see<00:19:56.350><c> that</c><00:19:56.500><c> the</c><00:19:56.590><c> startup</c><00:19:57.070><c> time</c><00:19:57.250><c> is</c><00:19:57.520><c> pretty</c>

00:19:58.020 --> 00:19:58.030 align:start position:0%
see that the startup time is pretty
 

00:19:58.030 --> 00:20:00.300 align:start position:0%
see that the startup time is pretty
constant<00:19:58.390><c> over</c><00:19:58.810><c> time</c><00:19:59.200><c> it</c><00:19:59.470><c> does</c><00:19:59.590><c> not</c><00:19:59.770><c> fluctuate</c>

00:20:00.300 --> 00:20:00.310 align:start position:0%
constant over time it does not fluctuate
 

00:20:00.310 --> 00:20:03.030 align:start position:0%
constant over time it does not fluctuate
and<00:20:00.820><c> this</c><00:20:01.570><c> is</c><00:20:01.690><c> pretty</c><00:20:02.110><c> much</c><00:20:02.230><c> expected</c><00:20:02.920><c> you</c>

00:20:03.030 --> 00:20:03.040 align:start position:0%
and this is pretty much expected you
 

00:20:03.040 --> 00:20:05.540 align:start position:0%
and this is pretty much expected you
don't<00:20:03.250><c> want</c><00:20:03.490><c> to</c><00:20:03.730><c> have</c><00:20:03.880><c> deviations</c><00:20:04.690><c> here</c>

00:20:05.540 --> 00:20:05.550 align:start position:0%
don't want to have deviations here
 

00:20:05.550 --> 00:20:08.130 align:start position:0%
don't want to have deviations here
however<00:20:06.550><c> on</c><00:20:07.090><c> the</c><00:20:07.180><c> right</c><00:20:07.390><c> hand</c><00:20:07.600><c> side</c><00:20:07.840><c> you</c><00:20:08.110><c> can</c>

00:20:08.130 --> 00:20:08.140 align:start position:0%
however on the right hand side you can
 

00:20:08.140 --> 00:20:10.440 align:start position:0%
however on the right hand side you can
see<00:20:08.320><c> that</c><00:20:08.470><c> in</c><00:20:08.740><c> nuga</c><00:20:09.130><c> the</c><00:20:09.370><c> startup</c><00:20:09.820><c> time</c><00:20:10.030><c> drops</c>

00:20:10.440 --> 00:20:10.450 align:start position:0%
see that in nuga the startup time drops
 

00:20:10.450 --> 00:20:14.010 align:start position:0%
see that in nuga the startup time drops
over<00:20:10.870><c> time</c><00:20:11.820><c> eventually</c><00:20:12.820><c> it</c><00:20:13.120><c> stabilizes</c><00:20:13.750><c> off</c>

00:20:14.010 --> 00:20:14.020 align:start position:0%
over time eventually it stabilizes off
 

00:20:14.020 --> 00:20:17.460 align:start position:0%
over time eventually it stabilizes off
of<00:20:14.170><c> being</c><00:20:14.440><c> about</c><00:20:15.330><c> 25%</c><00:20:16.330><c> faster</c><00:20:16.690><c> than</c><00:20:17.140><c> it</c><00:20:17.260><c> will</c>

00:20:17.460 --> 00:20:17.470 align:start position:0%
of being about 25% faster than it will
 

00:20:17.470 --> 00:20:19.800 align:start position:0%
of being about 25% faster than it will
used<00:20:17.770><c> to</c><00:20:17.920><c> be</c><00:20:18.040><c> at</c><00:20:18.130><c> install</c><00:20:18.520><c> time</c><00:20:18.550><c> and</c><00:20:19.510><c> this</c><00:20:19.660><c> is</c>

00:20:19.800 --> 00:20:19.810 align:start position:0%
used to be at install time and this is
 

00:20:19.810 --> 00:20:22.650 align:start position:0%
used to be at install time and this is
great<00:20:20.110><c> news</c><00:20:20.320><c> it</c><00:20:20.710><c> means</c><00:20:20.950><c> that</c><00:20:21.270><c> the</c><00:20:22.270><c> more</c><00:20:22.450><c> the</c>

00:20:22.650 --> 00:20:22.660 align:start position:0%
great news it means that the more the
 

00:20:22.660 --> 00:20:24.660 align:start position:0%
great news it means that the more the
user<00:20:22.810><c> uses</c><00:20:23.350><c> the</c><00:20:23.500><c> app</c><00:20:23.620><c> the</c><00:20:24.130><c> more</c><00:20:24.370><c> we</c><00:20:24.520><c> can</c>

00:20:24.660 --> 00:20:24.670 align:start position:0%
user uses the app the more we can
 

00:20:24.670 --> 00:20:26.400 align:start position:0%
user uses the app the more we can
optimize<00:20:25.150><c> it</c><00:20:25.180><c> and</c><00:20:25.510><c> over</c><00:20:25.900><c> time</c><00:20:26.170><c> the</c>

00:20:26.400 --> 00:20:26.410 align:start position:0%
optimize it and over time the
 

00:20:26.410 --> 00:20:32.850 align:start position:0%
optimize it and over time the
performance<00:20:26.740><c> gets</c><00:20:27.130><c> better</c><00:20:27.400><c> and</c><00:20:27.670><c> better</c><00:20:31.860><c> this</c>

00:20:32.850 --> 00:20:32.860 align:start position:0%
performance gets better and better this
 

00:20:32.860 --> 00:20:35.340 align:start position:0%
performance gets better and better this
is<00:20:33.040><c> great</c><00:20:33.310><c> but</c><00:20:34.240><c> we</c><00:20:34.360><c> can</c><00:20:34.540><c> do</c><00:20:34.690><c> better</c><00:20:34.720><c> and</c><00:20:35.200><c> we</c>

00:20:35.340 --> 00:20:35.350 align:start position:0%
is great but we can do better and we
 

00:20:35.350 --> 00:20:37.200 align:start position:0%
is great but we can do better and we
want<00:20:35.500><c> to</c><00:20:35.680><c> do</c><00:20:35.800><c> better</c><00:20:35.950><c> there</c><00:20:36.640><c> shouldn't</c><00:20:37.090><c> be</c>

00:20:37.200 --> 00:20:37.210 align:start position:0%
want to do better there shouldn't be
 

00:20:37.210 --> 00:20:39.150 align:start position:0%
want to do better there shouldn't be
needy<00:20:37.660><c> we</c><00:20:37.960><c> shouldn't</c><00:20:38.320><c> need</c><00:20:38.410><c> to</c><00:20:38.560><c> wait</c><00:20:38.800><c> for</c>

00:20:39.150 --> 00:20:39.160 align:start position:0%
needy we shouldn't need to wait for
 

00:20:39.160 --> 00:20:42.360 align:start position:0%
needy we shouldn't need to wait for
optimal<00:20:40.150><c> performance</c><00:20:40.180><c> and</c><00:20:41.010><c> our</c><00:20:42.010><c> goal</c><00:20:42.340><c> is</c>

00:20:42.360 --> 00:20:42.370 align:start position:0%
optimal performance and our goal is
 

00:20:42.370 --> 00:20:45.120 align:start position:0%
optimal performance and our goal is
called<00:20:42.880><c> profiles</c><00:20:43.540><c> is</c><00:20:44.140><c> to</c><00:20:44.500><c> deliver</c><00:20:44.800><c> near</c>

00:20:45.120 --> 00:20:45.130 align:start position:0%
called profiles is to deliver near
 

00:20:45.130 --> 00:20:47.010 align:start position:0%
called profiles is to deliver near
optimal<00:20:45.700><c> performance</c><00:20:45.880><c> -</c><00:20:46.420><c> right</c><00:20:46.600><c> after</c>

00:20:47.010 --> 00:20:47.020 align:start position:0%
optimal performance - right after
 

00:20:47.020 --> 00:20:49.680 align:start position:0%
optimal performance - right after
install<00:20:47.440><c> time</c><00:20:47.790><c> without</c><00:20:48.790><c> having</c><00:20:49.270><c> to</c><00:20:49.480><c> wait</c><00:20:49.660><c> for</c>

00:20:49.680 --> 00:20:49.690 align:start position:0%
install time without having to wait for
 

00:20:49.690 --> 00:20:53.000 align:start position:0%
install time without having to wait for
the<00:20:50.080><c> application</c><00:20:50.620><c> to</c><00:20:50.770><c> be</c><00:20:50.800><c> profile</c>

00:20:53.000 --> 00:20:53.010 align:start position:0%
the application to be profile
 

00:20:53.010 --> 00:20:55.590 align:start position:0%
the application to be profile
so<00:20:54.010><c> let's</c><00:20:54.190><c> see</c><00:20:54.400><c> how</c><00:20:54.610><c> it's</c><00:20:54.760><c> gonna</c><00:20:54.910><c> how</c><00:20:55.210><c> this</c><00:20:55.480><c> is</c>

00:20:55.590 --> 00:20:55.600 align:start position:0%
so let's see how it's gonna how this is
 

00:20:55.600 --> 00:20:56.960 align:start position:0%
so let's see how it's gonna how this is
gonna<00:20:55.720><c> work</c>

00:20:56.960 --> 00:20:56.970 align:start position:0%
gonna work
 

00:20:56.970 --> 00:20:59.520 align:start position:0%
gonna work
let<00:20:57.970><c> me</c><00:20:58.120><c> introduce</c><00:20:58.300><c> you</c><00:20:58.570><c> the</c><00:20:58.810><c> idea</c><00:20:59.080><c> of</c><00:20:59.260><c> cloud</c>

00:20:59.520 --> 00:20:59.530 align:start position:0%
let me introduce you the idea of cloud
 

00:20:59.530 --> 00:21:04.230 align:start position:0%
let me introduce you the idea of cloud
profiles<00:21:00.690><c> this</c><00:21:01.690><c> is</c><00:21:01.870><c> based</c><00:21:02.200><c> on</c><00:21:02.530><c> made</c><00:21:03.130><c> two</c><00:21:03.910><c> key</c>

00:21:04.230 --> 00:21:04.240 align:start position:0%
profiles this is based on made two key
 

00:21:04.240 --> 00:21:09.270 align:start position:0%
profiles this is based on made two key
observations<00:21:06.480><c> first</c><00:21:07.480><c> one</c><00:21:07.780><c> is</c><00:21:08.020><c> that</c><00:21:08.530><c> usually</c>

00:21:09.270 --> 00:21:09.280 align:start position:0%
observations first one is that usually
 

00:21:09.280 --> 00:21:12.180 align:start position:0%
observations first one is that usually
apps<00:21:09.520><c> have</c><00:21:10.210><c> many</c><00:21:10.630><c> commonly</c><00:21:11.230><c> used</c><00:21:11.590><c> code</c><00:21:11.860><c> paths</c>

00:21:12.180 --> 00:21:12.190 align:start position:0%
apps have many commonly used code paths
 

00:21:12.190 --> 00:21:14.760 align:start position:0%
apps have many commonly used code paths
that<00:21:12.670><c> are</c><00:21:12.850><c> shared</c><00:21:13.240><c> between</c><00:21:13.510><c> a</c><00:21:13.840><c> multitude</c><00:21:14.440><c> of</c>

00:21:14.760 --> 00:21:14.770 align:start position:0%
that are shared between a multitude of
 

00:21:14.770 --> 00:21:16.850 align:start position:0%
that are shared between a multitude of
users<00:21:15.310><c> and</c><00:21:15.610><c> devices</c>

00:21:16.850 --> 00:21:16.860 align:start position:0%
users and devices
 

00:21:16.860 --> 00:21:19.410 align:start position:0%
users and devices
take<00:21:17.860><c> for</c><00:21:18.040><c> example</c><00:21:18.160><c> classes</c><00:21:19.000><c> loading</c><00:21:19.330><c> the</c>

00:21:19.410 --> 00:21:19.420 align:start position:0%
take for example classes loading the
 

00:21:19.420 --> 00:21:22.410 align:start position:0%
take for example classes loading the
restart<00:21:19.810><c> up</c><00:21:19.990><c> time</c><00:21:20.520><c> eg</c><00:21:21.520><c> device</c><00:21:21.820><c> will</c><00:21:22.090><c> have</c><00:21:22.240><c> its</c>

00:21:22.410 --> 00:21:22.420 align:start position:0%
restart up time eg device will have its
 

00:21:22.420 --> 00:21:25.980 align:start position:0%
restart up time eg device will have its
own<00:21:22.660><c> specific</c><00:21:23.290><c> set</c><00:21:23.560><c> however</c><00:21:24.430><c> globally</c><00:21:25.360><c> we</c><00:21:25.810><c> can</c>

00:21:25.980 --> 00:21:25.990 align:start position:0%
own specific set however globally we can
 

00:21:25.990 --> 00:21:27.990 align:start position:0%
own specific set however globally we can
extract<00:21:26.380><c> a</c><00:21:26.590><c> common</c><00:21:26.980><c> intersection</c><00:21:27.220><c> of</c><00:21:27.760><c> all</c>

00:21:27.990 --> 00:21:28.000 align:start position:0%
extract a common intersection of all
 

00:21:28.000 --> 00:21:30.690 align:start position:0%
extract a common intersection of all
those<00:21:28.300><c> classes</c><00:21:28.840><c> and</c><00:21:29.080><c> that's</c><00:21:29.980><c> valuable</c><00:21:30.520><c> data</c>

00:21:30.690 --> 00:21:30.700 align:start position:0%
those classes and that's valuable data
 

00:21:30.700 --> 00:21:34.620 align:start position:0%
those classes and that's valuable data
for<00:21:30.880><c> us</c><00:21:31.180><c> to</c><00:21:31.360><c> optimize</c><00:21:31.480><c> upon</c><00:21:32.640><c> second</c><00:21:33.640><c> we</c><00:21:34.450><c> know</c>

00:21:34.620 --> 00:21:34.630 align:start position:0%
for us to optimize upon second we know
 

00:21:34.630 --> 00:21:37.230 align:start position:0%
for us to optimize upon second we know
that<00:21:34.810><c> most</c><00:21:35.140><c> app</c><00:21:35.410><c> developers</c><00:21:35.970><c> roll</c><00:21:36.970><c> out</c><00:21:37.090><c> their</c>

00:21:37.230 --> 00:21:37.240 align:start position:0%
that most app developers roll out their
 

00:21:37.240 --> 00:21:40.020 align:start position:0%
that most app developers roll out their
apps<00:21:37.480><c> incrementally</c><00:21:38.440><c> starting</c><00:21:39.430><c> with</c><00:21:39.580><c> alpha</c>

00:21:40.020 --> 00:21:40.030 align:start position:0%
apps incrementally starting with alpha
 

00:21:40.030 --> 00:21:43.260 align:start position:0%
apps incrementally starting with alpha
beta<00:21:40.270><c> channels</c><00:21:40.840><c> or</c><00:21:41.260><c> for</c><00:21:41.680><c> example</c><00:21:41.770><c> 1</c><00:21:42.280><c> 2</c><00:21:42.310><c> %</c><00:21:43.120><c> of</c>

00:21:43.260 --> 00:21:43.270 align:start position:0%
beta channels or for example 1 2 % of
 

00:21:43.270 --> 00:21:46.530 align:start position:0%
beta channels or for example 1 2 % of
the<00:21:43.420><c> user</c><00:21:43.660><c> base</c><00:21:43.930><c> and</c><00:21:44.580><c> the</c><00:21:45.580><c> idea</c><00:21:45.850><c> behind</c><00:21:46.060><c> toad</c>

00:21:46.530 --> 00:21:46.540 align:start position:0%
the user base and the idea behind toad
 

00:21:46.540 --> 00:21:49.530 align:start position:0%
the user base and the idea behind toad
profiles<00:21:47.020><c> is</c><00:21:47.680><c> to</c><00:21:47.950><c> use</c><00:21:48.160><c> this</c><00:21:48.430><c> initial</c><00:21:49.000><c> set</c><00:21:49.330><c> of</c>

00:21:49.530 --> 00:21:49.540 align:start position:0%
profiles is to use this initial set of
 

00:21:49.540 --> 00:21:52.380 align:start position:0%
profiles is to use this initial set of
alphabetic<00:21:50.230><c> Channel</c><00:21:50.590><c> users</c><00:21:50.950><c> to</c><00:21:51.850><c> bootstrap</c>

00:21:52.380 --> 00:21:52.390 align:start position:0%
alphabetic Channel users to bootstrap
 

00:21:52.390 --> 00:21:56.220 align:start position:0%
alphabetic Channel users to bootstrap
performance<00:21:53.110><c> for</c><00:21:53.320><c> the</c><00:21:53.470><c> rest</c><00:21:53.680><c> of</c><00:21:53.800><c> the</c><00:21:53.950><c> users</c><00:21:55.230><c> so</c>

00:21:56.220 --> 00:21:56.230 align:start position:0%
performance for the rest of the users so
 

00:21:56.230 --> 00:22:01.350 align:start position:0%
performance for the rest of the users so
how<00:21:56.440><c> is</c><00:21:56.500><c> gonna</c><00:21:56.740><c> work</c><00:21:59.910><c> once</c><00:22:00.910><c> we</c><00:22:01.030><c> have</c><00:22:01.210><c> an</c>

00:22:01.350 --> 00:22:01.360 align:start position:0%
how is gonna work once we have an
 

00:22:01.360 --> 00:22:03.840 align:start position:0%
how is gonna work once we have an
initial<00:22:01.780><c> set</c><00:22:01.990><c> of</c><00:22:02.140><c> devices</c><00:22:03.010><c> we're</c><00:22:03.640><c> gonna</c>

00:22:03.840 --> 00:22:03.850 align:start position:0%
initial set of devices we're gonna
 

00:22:03.850 --> 00:22:06.120 align:start position:0%
initial set of devices we're gonna
extract<00:22:04.300><c> the</c><00:22:04.570><c> profile</c><00:22:05.050><c> information</c><00:22:05.290><c> about</c>

00:22:06.120 --> 00:22:06.130 align:start position:0%
extract the profile information about
 

00:22:06.130 --> 00:22:09.090 align:start position:0%
extract the profile information about
your<00:22:06.370><c> apk</c><00:22:06.820><c> from</c><00:22:07.510><c> those</c><00:22:07.720><c> devices</c><00:22:08.050><c> we're</c><00:22:08.950><c> gonna</c>

00:22:09.090 --> 00:22:09.100 align:start position:0%
your apk from those devices we're gonna
 

00:22:09.100 --> 00:22:13.200 align:start position:0%
your apk from those devices we're gonna
upload<00:22:09.430><c> that</c><00:22:09.640><c> information</c><00:22:09.900><c> to</c><00:22:10.900><c> play</c><00:22:11.170><c> and</c><00:22:12.210><c> then</c>

00:22:13.200 --> 00:22:13.210 align:start position:0%
upload that information to play and then
 

00:22:13.210 --> 00:22:16.500 align:start position:0%
upload that information to play and then
we're<00:22:13.420><c> gonna</c><00:22:13.570><c> combine</c><00:22:13.870><c> everything</c><00:22:15.510><c> we're</c>

00:22:16.500 --> 00:22:16.510 align:start position:0%
we're gonna combine everything we're
 

00:22:16.510 --> 00:22:18.570 align:start position:0%
we're gonna combine everything we're
going<00:22:16.720><c> to</c><00:22:16.780><c> aggregate</c><00:22:17.140><c> whatever</c><00:22:17.860><c> comes</c><00:22:18.130><c> in</c><00:22:18.370><c> and</c>

00:22:18.570 --> 00:22:18.580 align:start position:0%
going to aggregate whatever comes in and
 

00:22:18.580 --> 00:22:20.490 align:start position:0%
going to aggregate whatever comes in and
we're<00:22:18.670><c> gonna</c><00:22:18.850><c> generate</c><00:22:19.330><c> what</c><00:22:19.600><c> we</c><00:22:19.720><c> call</c><00:22:19.930><c> a</c><00:22:20.110><c> core</c>

00:22:20.490 --> 00:22:20.500 align:start position:0%
we're gonna generate what we call a core
 

00:22:20.500 --> 00:22:24.960 align:start position:0%
we're gonna generate what we call a core
application<00:22:21.460><c> profile</c><00:22:22.650><c> this</c><00:22:23.650><c> 4</c><00:22:23.980><c> profile</c><00:22:24.520><c> will</c>

00:22:24.960 --> 00:22:24.970 align:start position:0%
application profile this 4 profile will
 

00:22:24.970 --> 00:22:27.120 align:start position:0%
application profile this 4 profile will
contain<00:22:25.420><c> information</c><00:22:26.110><c> she's</c><00:22:26.800><c> relevant</c>

00:22:27.120 --> 00:22:27.130 align:start position:0%
contain information she's relevant
 

00:22:27.130 --> 00:22:30.300 align:start position:0%
contain information she's relevant
across<00:22:27.580><c> all</c><00:22:27.790><c> devices</c><00:22:28.270><c> and</c><00:22:29.050><c> not</c><00:22:29.650><c> just</c><00:22:29.890><c> a</c><00:22:30.070><c> single</c>

00:22:30.300 --> 00:22:30.310 align:start position:0%
across all devices and not just a single
 

00:22:30.310 --> 00:22:34.560 align:start position:0%
across all devices and not just a single
one<00:22:31.440><c> when</c><00:22:32.440><c> a</c><00:22:32.470><c> new</c><00:22:32.650><c> device</c><00:22:32.980><c> requests</c><00:22:33.580><c> for</c><00:22:34.390><c> that</c>

00:22:34.560 --> 00:22:34.570 align:start position:0%
one when a new device requests for that
 

00:22:34.570 --> 00:22:37.380 align:start position:0%
one when a new device requests for that
application<00:22:35.170><c> to</c><00:22:35.290><c> be</c><00:22:35.440><c> installed</c><00:22:36.180><c> we're</c><00:22:37.180><c> gonna</c>

00:22:37.380 --> 00:22:37.390 align:start position:0%
application to be installed we're gonna
 

00:22:37.390 --> 00:22:40.560 align:start position:0%
application to be installed we're gonna
deliver<00:22:37.840><c> this</c><00:22:38.650><c> core</c><00:22:38.980><c> profile</c><00:22:39.520><c> alongside</c><00:22:40.210><c> the</c>

00:22:40.560 --> 00:22:40.570 align:start position:0%
deliver this core profile alongside the
 

00:22:40.570 --> 00:22:44.150 align:start position:0%
deliver this core profile alongside the
main<00:22:40.780><c> application</c><00:22:41.470><c> apk</c><00:22:41.920><c> to</c><00:22:42.430><c> the</c><00:22:42.550><c> device</c>

00:22:44.150 --> 00:22:44.160 align:start position:0%
main application apk to the device
 

00:22:44.160 --> 00:22:47.370 align:start position:0%
main application apk to the device
locally<00:22:45.160><c> the</c><00:22:45.880><c> device</c><00:22:46.210><c> will</c><00:22:46.480><c> be</c><00:22:46.510><c> able</c><00:22:46.870><c> to</c><00:22:47.230><c> use</c>

00:22:47.370 --> 00:22:47.380 align:start position:0%
locally the device will be able to use
 

00:22:47.380 --> 00:22:49.890 align:start position:0%
locally the device will be able to use
that<00:22:47.410><c> data</c><00:22:47.830><c> to</c><00:22:48.250><c> perform</c><00:22:48.670><c> profile</c><00:22:49.420><c> guided</c>

00:22:49.890 --> 00:22:49.900 align:start position:0%
that data to perform profile guided
 

00:22:49.900 --> 00:22:53.400 align:start position:0%
that data to perform profile guided
optimizations<00:22:50.710><c> right</c><00:22:51.400><c> at</c><00:22:51.610><c> install</c><00:22:52.000><c> time</c><00:22:52.410><c> that</c>

00:22:53.400 --> 00:22:53.410 align:start position:0%
optimizations right at install time that
 

00:22:53.410 --> 00:22:55.500 align:start position:0%
optimizations right at install time that
will<00:22:53.560><c> deliver</c><00:22:53.890><c> an</c><00:22:54.160><c> improved</c><00:22:54.670><c> code</c><00:22:54.910><c> startup</c>

00:22:55.500 --> 00:22:55.510 align:start position:0%
will deliver an improved code startup
 

00:22:55.510 --> 00:22:57.870 align:start position:0%
will deliver an improved code startup
performance<00:22:56.290><c> and</c><00:22:56.890><c> much</c><00:22:57.130><c> but</c><00:22:57.400><c> it's</c><00:22:57.580><c> better</c>

00:22:57.870 --> 00:22:57.880 align:start position:0%
performance and much but it's better
 

00:22:57.880 --> 00:23:02.120 align:start position:0%
performance and much but it's better
steady-state<00:22:58.330><c> performance</c><00:22:58.600><c> over</c><00:22:59.290><c> time</c>

00:23:02.120 --> 00:23:02.130 align:start position:0%
 
 

00:23:02.130 --> 00:23:05.610 align:start position:0%
 
now<00:23:03.130><c> having</c><00:23:03.430><c> profiles</c><00:23:04.060><c> in</c><00:23:04.300><c> the</c><00:23:04.420><c> cloud</c><00:23:04.660><c> offers</c>

00:23:05.610 --> 00:23:05.620 align:start position:0%
now having profiles in the cloud offers
 

00:23:05.620 --> 00:23:09.180 align:start position:0%
now having profiles in the cloud offers
much<00:23:06.280><c> more</c><00:23:06.570><c> opportunities</c><00:23:07.570><c> than</c><00:23:08.190><c> directly</c>

00:23:09.180 --> 00:23:09.190 align:start position:0%
much more opportunities than directly
 

00:23:09.190 --> 00:23:11.730 align:start position:0%
much more opportunities than directly
influencing<00:23:09.850><c> the</c><00:23:10.030><c> app</c><00:23:10.180><c> performance</c><00:23:10.590><c> with</c><00:23:11.590><c> a</c>

00:23:11.730 --> 00:23:11.740 align:start position:0%
influencing the app performance with a
 

00:23:11.740 --> 00:23:14.850 align:start position:0%
influencing the app performance with a
profile<00:23:12.190><c> guided</c><00:23:12.520><c> optimizations</c><00:23:13.560><c> the</c><00:23:14.560><c> core</c>

00:23:14.850 --> 00:23:14.860 align:start position:0%
profile guided optimizations the core
 

00:23:14.860 --> 00:23:18.060 align:start position:0%
profile guided optimizations the core
profiles<00:23:15.430><c> offers</c><00:23:16.330><c> available</c><00:23:16.900><c> data</c><00:23:17.140><c> for</c>

00:23:18.060 --> 00:23:18.070 align:start position:0%
profiles offers available data for
 

00:23:18.070 --> 00:23:21.900 align:start position:0%
profiles offers available data for
examples<00:23:18.610><c> were</c><00:23:18.760><c> developers</c><00:23:19.420><c> to</c><00:23:19.840><c> act</c><00:23:20.080><c> upon</c><00:23:20.910><c> and</c>

00:23:21.900 --> 00:23:21.910 align:start position:0%
examples were developers to act upon and
 

00:23:21.910 --> 00:23:23.220 align:start position:0%
examples were developers to act upon and
we<00:23:22.000><c> believe</c><00:23:22.360><c> there</c><00:23:22.570><c> is</c><00:23:22.690><c> enough</c><00:23:23.020><c> information</c>

00:23:23.220 --> 00:23:23.230 align:start position:0%
we believe there is enough information
 

00:23:23.230 --> 00:23:25.920 align:start position:0%
we believe there is enough information
there<00:23:23.800><c> so</c><00:23:24.220><c> that</c><00:23:24.610><c> developers</c><00:23:24.820><c> can</c><00:23:25.240><c> tune</c><00:23:25.660><c> their</c>

00:23:25.920 --> 00:23:25.930 align:start position:0%
there so that developers can tune their
 

00:23:25.930 --> 00:23:28.590 align:start position:0%
there so that developers can tune their
own<00:23:26.170><c> applications</c><00:23:26.970><c> we're</c><00:23:27.970><c> going</c><00:23:28.180><c> to</c><00:23:28.240><c> explore</c>

00:23:28.590 --> 00:23:28.600 align:start position:0%
own applications we're going to explore
 

00:23:28.600 --> 00:23:34.140 align:start position:0%
own applications we're going to explore
how<00:23:28.660><c> you</c><00:23:28.960><c> can</c><00:23:29.230><c> share</c><00:23:29.470><c> this</c><00:23:29.680><c> data</c><00:23:29.950><c> later</c><00:23:33.150><c> now</c>

00:23:34.140 --> 00:23:34.150 align:start position:0%
how you can share this data later now
 

00:23:34.150 --> 00:23:36.780 align:start position:0%
how you can share this data later now
you<00:23:34.210><c> can</c><00:23:34.450><c> see</c><00:23:34.660><c> in</c><00:23:34.810><c> this</c><00:23:34.960><c> workflow</c><00:23:35.680><c> that</c><00:23:36.040><c> to</c>

00:23:36.780 --> 00:23:36.790 align:start position:0%
you can see in this workflow that to
 

00:23:36.790 --> 00:23:38.370 align:start position:0%
you can see in this workflow that to
deliver<00:23:37.120><c> such</c><00:23:37.360><c> a</c><00:23:37.390><c> thing</c><00:23:37.690><c> we</c><00:23:37.870><c> need</c><00:23:37.990><c> support</c>

00:23:38.370 --> 00:23:38.380 align:start position:0%
deliver such a thing we need support
 

00:23:38.380 --> 00:23:41.360 align:start position:0%
deliver such a thing we need support
from<00:23:38.590><c> Android</c><00:23:39.100><c> platform</c><00:23:39.670><c> and</c><00:23:39.760><c> play</c><00:23:40.240><c> a</c><00:23:40.270><c> live</c><00:23:40.540><c> in</c>

00:23:41.360 --> 00:23:41.370 align:start position:0%
from Android platform and play a live in
 

00:23:41.370 --> 00:23:43.800 align:start position:0%
from Android platform and play a live in
today's<00:23:42.370><c> presentation</c><00:23:42.610><c> gonna</c><00:23:43.300><c> focus</c><00:23:43.540><c> on</c>

00:23:43.800 --> 00:23:43.810 align:start position:0%
today's presentation gonna focus on
 

00:23:43.810 --> 00:23:51.000 align:start position:0%
today's presentation gonna focus on
language<00:23:44.260><c> support</c><00:23:49.080><c> so</c><00:23:50.080><c> what</c><00:23:50.200><c> did</c><00:23:50.380><c> we</c><00:23:50.470><c> do</c><00:23:50.650><c> in</c><00:23:50.680><c> P</c>

00:23:51.000 --> 00:23:51.010 align:start position:0%
language support so what did we do in P
 

00:23:51.010 --> 00:23:54.450 align:start position:0%
language support so what did we do in P
to<00:23:51.190><c> support</c><00:23:51.580><c> this</c><00:23:51.730><c> lifecycle</c><00:23:53.040><c> we</c><00:23:54.040><c> added</c><00:23:54.430><c> new</c>

00:23:54.450 --> 00:23:54.460 align:start position:0%
to support this lifecycle we added new
 

00:23:54.460 --> 00:23:57.930 align:start position:0%
to support this lifecycle we added new
interfaces<00:23:55.360><c> that</c><00:23:55.840><c> will</c><00:23:56.020><c> allow</c><00:23:56.290><c> us</c><00:23:56.530><c> to</c><00:23:56.940><c> extract</c>

00:23:57.930 --> 00:23:57.940 align:start position:0%
interfaces that will allow us to extract
 

00:23:57.940 --> 00:23:59.940 align:start position:0%
interfaces that will allow us to extract
the<00:23:58.120><c> profile</c><00:23:58.630><c> and</c><00:23:58.960><c> bootstrap</c><00:23:59.440><c> the</c>

00:23:59.940 --> 00:23:59.950 align:start position:0%
the profile and bootstrap the
 

00:23:59.950 --> 00:24:02.730 align:start position:0%
the profile and bootstrap the
information<00:24:00.610><c> from</c><00:24:00.820><c> the</c><00:24:01.000><c> cloud</c><00:24:01.740><c> the</c>

00:24:02.730 --> 00:24:02.740 align:start position:0%
information from the cloud the
 

00:24:02.740 --> 00:24:04.920 align:start position:0%
information from the cloud the
functionality<00:24:03.460><c> is</c><00:24:03.520><c> available</c><00:24:04.090><c> to</c><00:24:04.300><c> all</c><00:24:04.360><c> system</c>

00:24:04.920 --> 00:24:04.930 align:start position:0%
functionality is available to all system
 

00:24:04.930 --> 00:24:07.770 align:start position:0%
functionality is available to all system
level<00:24:05.230><c> apps</c><00:24:06.060><c> which</c><00:24:07.060><c> acquire</c><00:24:07.480><c> the</c><00:24:07.660><c> necessary</c>

00:24:07.770 --> 00:24:07.780 align:start position:0%
level apps which acquire the necessary
 

00:24:07.780 --> 00:24:10.560 align:start position:0%
level apps which acquire the necessary
permissions<00:24:08.620><c> and</c><00:24:08.830><c> in</c><00:24:09.580><c> our</c><00:24:09.700><c> case</c><00:24:10.000><c> play</c><00:24:10.360><c> is</c><00:24:10.420><c> just</c>

00:24:10.560 --> 00:24:10.570 align:start position:0%
permissions and in our case play is just
 

00:24:10.570 --> 00:24:15.000 align:start position:0%
permissions and in our case play is just
a<00:24:10.870><c> consumer</c><00:24:12.450><c> the</c><00:24:13.450><c> to</c><00:24:13.630><c> ape</c><00:24:13.750><c> IP</c><00:24:14.350><c> is</c><00:24:14.620><c> I'm</c><00:24:14.800><c> talking</c>

00:24:15.000 --> 00:24:15.010 align:start position:0%
a consumer the to ape IP is I'm talking
 

00:24:15.010 --> 00:24:17.310 align:start position:0%
a consumer the to ape IP is I'm talking
about<00:24:15.280><c> our</c><00:24:15.790><c> profile</c><00:24:16.180><c> extractions</c><00:24:16.840><c> and</c><00:24:17.050><c> these</c>

00:24:17.310 --> 00:24:17.320 align:start position:0%
about our profile extractions and these
 

00:24:17.320 --> 00:24:19.560 align:start position:0%
about our profile extractions and these
are<00:24:17.470><c> exposed</c><00:24:17.950><c> here</c><00:24:18.340><c> a</c><00:24:18.370><c> new</c><00:24:18.610><c> platform</c><00:24:18.940><c> manager</c>

00:24:19.560 --> 00:24:19.570 align:start position:0%
are exposed here a new platform manager
 

00:24:19.570 --> 00:24:24.090 align:start position:0%
are exposed here a new platform manager
we<00:24:20.140><c> call</c><00:24:20.380><c> it</c><00:24:20.560><c> art</c><00:24:20.800><c> manager</c><00:24:22.320><c> the</c><00:24:23.320><c> second</c><00:24:23.680><c> API</c><00:24:23.950><c> is</c>

00:24:24.090 --> 00:24:24.100 align:start position:0%
we call it art manager the second API is
 

00:24:24.100 --> 00:24:27.420 align:start position:0%
we call it art manager the second API is
profile<00:24:25.000><c> installation</c><00:24:25.720><c> and</c><00:24:26.280><c> this</c><00:24:27.280><c> is</c>

00:24:27.420 --> 00:24:27.430 align:start position:0%
profile installation and this is
 

00:24:27.430 --> 00:24:29.430 align:start position:0%
profile installation and this is
seemingly<00:24:27.880><c> integrated</c><00:24:28.750><c> into</c><00:24:28.990><c> the</c><00:24:29.050><c> current</c>

00:24:29.430 --> 00:24:29.440 align:start position:0%
seemingly integrated into the current
 

00:24:29.440 --> 00:24:32.700 align:start position:0%
seemingly integrated into the current
installer<00:24:29.890><c> session</c><00:24:30.690><c> what</c><00:24:31.690><c> we</c><00:24:31.840><c> did</c><00:24:32.050><c> here</c><00:24:32.380><c> is</c><00:24:32.650><c> to</c>

00:24:32.700 --> 00:24:32.710 align:start position:0%
installer session what we did here is to
 

00:24:32.710 --> 00:24:35.100 align:start position:0%
installer session what we did here is to
add<00:24:33.070><c> a</c><00:24:33.100><c> new</c><00:24:33.400><c> kind</c><00:24:33.700><c> of</c><00:24:33.880><c> installation</c><00:24:34.240><c> artifact</c>

00:24:35.100 --> 00:24:35.110 align:start position:0%
add a new kind of installation artifact
 

00:24:35.110 --> 00:24:39.840 align:start position:0%
add a new kind of installation artifact
that<00:24:35.440><c> the</c><00:24:35.560><c> platform</c><00:24:36.010><c> understands</c><00:24:38.580><c> we</c><00:24:39.580><c> call</c>

00:24:39.840 --> 00:24:39.850 align:start position:0%
that the platform understands we call
 

00:24:39.850 --> 00:24:44.640 align:start position:0%
that the platform understands we call
this<00:24:40.030><c> text</c><00:24:40.510><c> metadata</c><00:24:40.930><c> files</c><00:24:42.900><c> essentially</c><00:24:43.900><c> in</c>

00:24:44.640 --> 00:24:44.650 align:start position:0%
this text metadata files essentially in
 

00:24:44.650 --> 00:24:46.980 align:start position:0%
this text metadata files essentially in
a<00:24:44.770><c> similar</c><00:24:45.100><c> way</c><00:24:45.160><c> to</c><00:24:45.460><c> the</c><00:24:45.790><c> case</c><00:24:46.240><c> the</c><00:24:46.780><c> text</c>

00:24:46.980 --> 00:24:46.990 align:start position:0%
a similar way to the case the text
 

00:24:46.990 --> 00:24:50.100 align:start position:0%
a similar way to the case the text
metadata<00:24:47.470><c> files</c><00:24:47.890><c> are</c><00:24:48.220><c> archives</c><00:24:48.900><c> which</c><00:24:49.900><c> will</c>

00:24:50.100 --> 00:24:50.110 align:start position:0%
metadata files are archives which will
 

00:24:50.110 --> 00:24:52.650 align:start position:0%
metadata files are archives which will
contain<00:24:50.440><c> information</c><00:24:50.800><c> in</c><00:24:51.400><c> how</c><00:24:51.940><c> the</c><00:24:52.000><c> runtime</c>

00:24:52.650 --> 00:24:52.660 align:start position:0%
contain information in how the runtime
 

00:24:52.660 --> 00:24:55.470 align:start position:0%
contain information in how the runtime
can<00:24:52.870><c> optimize</c><00:24:53.320><c> the</c><00:24:53.470><c> application</c><00:24:54.480><c> initially</c>

00:24:55.470 --> 00:24:55.480 align:start position:0%
can optimize the application initially
 

00:24:55.480 --> 00:24:57.960 align:start position:0%
can optimize the application initially
this<00:24:56.230><c> text</c><00:24:56.560><c> metadata</c><00:24:56.920><c> files</c><00:24:57.310><c> will</c><00:24:57.640><c> contain</c>

00:24:57.960 --> 00:24:57.970 align:start position:0%
this text metadata files will contain
 

00:24:57.970 --> 00:25:00.120 align:start position:0%
this text metadata files will contain
the<00:24:58.150><c> core</c><00:24:58.390><c> profile</c><00:24:58.960><c> that</c><00:24:59.470><c> I</c><00:24:59.620><c> mentioned</c><00:25:00.070><c> about</c>

00:25:00.120 --> 00:25:00.130 align:start position:0%
the core profile that I mentioned about
 

00:25:00.130 --> 00:25:04.050 align:start position:0%
the core profile that I mentioned about
earlier<00:25:01.320><c> but</c><00:25:02.320><c> install</c><00:25:02.710><c> time</c><00:25:02.980><c> play</c><00:25:03.820><c> will</c>

00:25:04.050 --> 00:25:04.060 align:start position:0%
earlier but install time play will
 

00:25:04.060 --> 00:25:05.910 align:start position:0%
earlier but install time play will
deliver<00:25:04.450><c> these</c><00:25:04.810><c> files</c><00:25:05.140><c> if</c><00:25:05.620><c> they</c><00:25:05.830><c> are</c>

00:25:05.910 --> 00:25:05.920 align:start position:0%
deliver these files if they are
 

00:25:05.920 --> 00:25:08.580 align:start position:0%
deliver these files if they are
available<00:25:06.070><c> to</c><00:25:07.000><c> the</c><00:25:07.120><c> device</c><00:25:07.450><c> where</c><00:25:08.350><c> they</c><00:25:08.470><c> will</c>

00:25:08.580 --> 00:25:08.590 align:start position:0%
available to the device where they will
 

00:25:08.590 --> 00:25:10.740 align:start position:0%
available to the device where they will
be<00:25:08.620><c> streamlined</c><00:25:09.100><c> into</c><00:25:09.790><c> the</c><00:25:09.880><c> text</c><00:25:10.180><c> optimizer</c>

00:25:10.740 --> 00:25:10.750 align:start position:0%
be streamlined into the text optimizer
 

00:25:10.750 --> 00:25:13.670 align:start position:0%
be streamlined into the text optimizer
on<00:25:11.110><c> device</c>

00:25:13.670 --> 00:25:13.680 align:start position:0%
 
 

00:25:13.680 --> 00:25:17.220 align:start position:0%
 
it<00:25:14.680><c> is</c><00:25:14.890><c> worthwhile</c><00:25:15.130><c> mentioning</c><00:25:15.660><c> that</c><00:25:16.660><c> we</c><00:25:17.110><c> will</c>

00:25:17.220 --> 00:25:17.230 align:start position:0%
it is worthwhile mentioning that we will
 

00:25:17.230 --> 00:25:19.440 align:start position:0%
it is worthwhile mentioning that we will
offer<00:25:17.410><c> support</c><00:25:17.770><c> for</c><00:25:18.220><c> Google</c><00:25:18.730><c> Play</c><00:25:18.940><c> dynamic</c>

00:25:19.440 --> 00:25:19.450 align:start position:0%
offer support for Google Play dynamic
 

00:25:19.450 --> 00:25:22.590 align:start position:0%
offer support for Google Play dynamic
delivery<00:25:20.130><c> so</c><00:25:21.130><c> if</c><00:25:21.220><c> you</c><00:25:21.370><c> plan</c><00:25:21.640><c> to</c><00:25:21.880><c> split</c><00:25:22.210><c> the</c>

00:25:22.590 --> 00:25:22.600 align:start position:0%
delivery so if you plan to split the
 

00:25:22.600 --> 00:25:24.840 align:start position:0%
delivery so if you plan to split the
functionality<00:25:23.320><c> of</c><00:25:23.350><c> your</c><00:25:23.550><c> application</c><00:25:24.550><c> of</c><00:25:24.670><c> the</c>

00:25:24.840 --> 00:25:24.850 align:start position:0%
functionality of your application of the
 

00:25:24.850 --> 00:25:28.080 align:start position:0%
functionality of your application of the
in<00:25:25.660><c> different</c><00:25:26.110><c> apks</c><00:25:26.440><c> all</c><00:25:26.920><c> DPS</c><00:25:27.550><c> will</c><00:25:27.910><c> have</c>

00:25:28.080 --> 00:25:28.090 align:start position:0%
in different apks all DPS will have
 

00:25:28.090 --> 00:25:33.750 align:start position:0%
in different apks all DPS will have
their<00:25:28.240><c> own</c><00:25:28.420><c> text</c><00:25:28.810><c> metadata</c><00:25:29.200><c> files</c><00:25:32.730><c> so</c><00:25:33.730><c> let's</c>

00:25:33.750 --> 00:25:33.760 align:start position:0%
their own text metadata files so let's
 

00:25:33.760 --> 00:25:35.460 align:start position:0%
their own text metadata files so let's
take<00:25:34.060><c> a</c><00:25:34.090><c> look</c><00:25:34.300><c> how</c><00:25:34.450><c> everything</c><00:25:34.990><c> fits</c><00:25:35.170><c> together</c>

00:25:35.460 --> 00:25:35.470 align:start position:0%
take a look how everything fits together
 

00:25:35.470 --> 00:25:39.300 align:start position:0%
take a look how everything fits together
from<00:25:35.980><c> the</c><00:25:36.130><c> device</c><00:25:36.400><c> perspective</c><00:25:37.950><c> you</c><00:25:38.950><c> remember</c>

00:25:39.300 --> 00:25:39.310 align:start position:0%
from the device perspective you remember
 

00:25:39.310 --> 00:25:41.250 align:start position:0%
from the device perspective you remember
that<00:25:39.400><c> I</c><00:25:39.520><c> presented</c><00:25:39.730><c> this</c><00:25:40.210><c> diagram</c><00:25:40.750><c> in</c><00:25:40.990><c> the</c>

00:25:41.250 --> 00:25:41.260 align:start position:0%
that I presented this diagram in the
 

00:25:41.260 --> 00:25:44.460 align:start position:0%
that I presented this diagram in the
beginning<00:25:41.730><c> showing</c><00:25:42.730><c> how</c><00:25:43.050><c> the</c><00:25:44.050><c> profiling</c>

00:25:44.460 --> 00:25:44.470 align:start position:0%
beginning showing how the profiling
 

00:25:44.470 --> 00:25:49.140 align:start position:0%
beginning showing how the profiling
works<00:25:44.830><c> locally</c><00:25:46.770><c> let's</c><00:25:47.770><c> focus</c><00:25:47.980><c> here</c><00:25:48.490><c> just</c><00:25:49.000><c> on</c>

00:25:49.140 --> 00:25:49.150 align:start position:0%
works locally let's focus here just on
 

00:25:49.150 --> 00:25:53.550 align:start position:0%
works locally let's focus here just on
the<00:25:49.270><c> profile</c><00:25:49.660><c> file</c><00:25:49.990><c> on</c><00:25:50.230><c> the</c><00:25:50.530><c> application</c><00:25:52.560><c> once</c>

00:25:53.550 --> 00:25:53.560 align:start position:0%
the profile file on the application once
 

00:25:53.560 --> 00:25:55.500 align:start position:0%
the profile file on the application once
we<00:25:53.710><c> will</c><00:25:53.860><c> give</c><00:25:54.130><c> once</c><00:25:54.490><c> we</c><00:25:54.640><c> managed</c><00:25:55.150><c> to</c><00:25:55.180><c> capture</c>

00:25:55.500 --> 00:25:55.510 align:start position:0%
we will give once we managed to capture
 

00:25:55.510 --> 00:25:57.930 align:start position:0%
we will give once we managed to capture
a<00:25:55.660><c> profile</c><00:25:56.170><c> file</c><00:25:56.500><c> we're</c><00:25:57.220><c> going</c><00:25:57.400><c> to</c><00:25:57.490><c> add</c><00:25:57.610><c> strip</c>

00:25:57.930 --> 00:25:57.940 align:start position:0%
a profile file we're going to add strip
 

00:25:57.940 --> 00:26:02.550 align:start position:0%
a profile file we're going to add strip
this<00:25:58.120><c> information</c><00:25:58.870><c> to</c><00:25:59.290><c> play</c><00:26:00.690><c> on</c><00:26:01.690><c> players</c><00:26:02.290><c> that</c>

00:26:02.550 --> 00:26:02.560 align:start position:0%
this information to play on players that
 

00:26:02.560 --> 00:26:04.890 align:start position:0%
this information to play on players that
mention<00:26:02.950><c> will</c><00:26:03.070><c> aggregate</c><00:26:03.460><c> this</c><00:26:03.700><c> data</c><00:26:03.760><c> if</c><00:26:04.360><c> many</c>

00:26:04.890 --> 00:26:04.900 align:start position:0%
mention will aggregate this data if many
 

00:26:04.900 --> 00:26:07.230 align:start position:0%
mention will aggregate this data if many
many<00:26:05.170><c> other</c><00:26:05.350><c> profiles</c><00:26:06.010><c> and</c><00:26:06.760><c> only</c><00:26:06.970><c> have</c><00:26:07.210><c> a</c>

00:26:07.230 --> 00:26:07.240 align:start position:0%
many other profiles and only have a
 

00:26:07.240 --> 00:26:09.330 align:start position:0%
many other profiles and only have a
called<00:26:07.570><c> profiles</c><00:26:08.050><c> we're</c><00:26:08.740><c> going</c><00:26:08.950><c> to</c><00:26:09.010><c> deliver</c>

00:26:09.330 --> 00:26:09.340 align:start position:0%
called profiles we're going to deliver
 

00:26:09.340 --> 00:26:14.960 align:start position:0%
called profiles we're going to deliver
it<00:26:09.610><c> to</c><00:26:09.880><c> our</c><00:26:10.210><c> new</c><00:26:10.540><c> users</c><00:26:11.310><c> as</c><00:26:12.310><c> a</c><00:26:12.340><c> call</c><00:26:12.670><c> profile</c>

00:26:14.960 --> 00:26:14.970 align:start position:0%
it to our new users as a call profile
 

00:26:14.970 --> 00:26:18.510 align:start position:0%
it to our new users as a call profile
the<00:26:15.970><c> idea</c><00:26:16.300><c> of</c><00:26:16.600><c> the</c><00:26:17.230><c> core</c><00:26:17.470><c> profile</c><00:26:17.920><c> is</c><00:26:18.100><c> not</c><00:26:18.340><c> to</c>

00:26:18.510 --> 00:26:18.520 align:start position:0%
the idea of the core profile is not to
 

00:26:18.520 --> 00:26:21.630 align:start position:0%
the idea of the core profile is not to
replace<00:26:18.670><c> own</c><00:26:19.240><c> device</c><00:26:19.660><c> profiling</c><00:26:20.530><c> it's</c><00:26:21.160><c> only</c>

00:26:21.630 --> 00:26:21.640 align:start position:0%
replace own device profiling it's only
 

00:26:21.640 --> 00:26:24.630 align:start position:0%
replace own device profiling it's only
to<00:26:21.790><c> bootstrap</c><00:26:22.390><c> the</c><00:26:23.350><c> profile</c><00:26:23.800><c> optimizations</c>

00:26:24.630 --> 00:26:24.640 align:start position:0%
to bootstrap the profile optimizations
 

00:26:24.640 --> 00:26:27.330 align:start position:0%
to bootstrap the profile optimizations
so<00:26:25.440><c> essentially</c><00:26:26.440><c> instead</c><00:26:26.710><c> of</c><00:26:26.860><c> starting</c><00:26:27.280><c> with</c>

00:26:27.330 --> 00:26:27.340 align:start position:0%
so essentially instead of starting with
 

00:26:27.340 --> 00:26:29.280 align:start position:0%
so essentially instead of starting with
a<00:26:27.610><c> completely</c><00:26:28.030><c> blank</c><00:26:28.120><c> state</c><00:26:28.720><c> about</c><00:26:29.080><c> your</c>

00:26:29.280 --> 00:26:29.290 align:start position:0%
a completely blank state about your
 

00:26:29.290 --> 00:26:31.440 align:start position:0%
a completely blank state about your
application<00:26:29.950><c> will</c><00:26:30.400><c> already</c><00:26:30.820><c> know</c><00:26:31.090><c> what</c><00:26:31.300><c> are</c>

00:26:31.440 --> 00:26:31.450 align:start position:0%
application will already know what are
 

00:26:31.450 --> 00:26:33.210 align:start position:0%
application will already know what are
the<00:26:31.570><c> most</c><00:26:31.750><c> commonly</c><00:26:32.230><c> executed</c><00:26:32.740><c> cause</c><00:26:32.950><c> paths</c>

00:26:33.210 --> 00:26:33.220 align:start position:0%
the most commonly executed cause paths
 

00:26:33.220 --> 00:26:35.430 align:start position:0%
the most commonly executed cause paths
and<00:26:33.640><c> we'll</c><00:26:33.850><c> be</c><00:26:34.000><c> able</c><00:26:34.300><c> to</c><00:26:34.450><c> start</c><00:26:34.660><c> optimizations</c>

00:26:35.430 --> 00:26:35.440 align:start position:0%
and we'll be able to start optimizations
 

00:26:35.440 --> 00:26:39.990 align:start position:0%
and we'll be able to start optimizations
from<00:26:35.650><c> there</c><00:26:37.500><c> so</c><00:26:38.500><c> now</c><00:26:38.680><c> essentially</c><00:26:39.130><c> what</c><00:26:39.520><c> was</c><00:26:39.820><c> a</c>

00:26:39.990 --> 00:26:40.000 align:start position:0%
from there so now essentially what was a
 

00:26:40.000 --> 00:26:43.800 align:start position:0%
from there so now essentially what was a
pure<00:26:40.480><c> on</c><00:26:40.840><c> device</c><00:26:41.380><c> profile</c><00:26:42.010><c> feedback</c><00:26:42.490><c> loop</c><00:26:42.810><c> it</c>

00:26:43.800 --> 00:26:43.810 align:start position:0%
pure on device profile feedback loop it
 

00:26:43.810 --> 00:26:50.850 align:start position:0%
pure on device profile feedback loop it
gets<00:26:44.170><c> extended</c><00:26:44.560><c> if</c><00:26:44.890><c> a</c><00:26:44.980><c> cloud</c><00:26:45.160><c> on</c><00:26:45.400><c> onand</c>

00:26:50.850 --> 00:26:50.860 align:start position:0%
 
 

00:26:50.860 --> 00:26:53.350 align:start position:0%
 
now<00:26:51.860><c> I</c><00:26:51.889><c> keep</c><00:26:52.249><c> talking</c><00:26:52.519><c> about</c><00:26:52.820><c> this</c><00:26:53.090><c> core</c>

00:26:53.350 --> 00:26:53.360 align:start position:0%
now I keep talking about this core
 

00:26:53.360 --> 00:26:55.869 align:start position:0%
now I keep talking about this core
profile<00:26:53.840><c> and</c><00:26:54.169><c> I</c><00:26:54.379><c> think</c><00:26:54.649><c> it's</c><00:26:54.830><c> important</c><00:26:55.789><c> to</c>

00:26:55.869 --> 00:26:55.879 align:start position:0%
profile and I think it's important to
 

00:26:55.879 --> 00:26:58.570 align:start position:0%
profile and I think it's important to
dedicate<00:26:56.269><c> a</c><00:26:56.299><c> bit</c><00:26:56.600><c> more</c><00:26:56.809><c> attention</c><00:26:57.080><c> to</c><00:26:57.379><c> it</c><00:26:57.580><c> so</c>

00:26:58.570 --> 00:26:58.580 align:start position:0%
dedicate a bit more attention to it so
 

00:26:58.580 --> 00:27:00.340 align:start position:0%
dedicate a bit more attention to it so
let's<00:26:58.610><c> talk</c><00:26:59.119><c> a</c><00:26:59.179><c> bit</c><00:26:59.450><c> how</c><00:26:59.749><c> we're</c><00:26:59.929><c> gonna</c><00:27:00.080><c> build</c>

00:27:00.340 --> 00:27:00.350 align:start position:0%
let's talk a bit how we're gonna build
 

00:27:00.350 --> 00:27:05.590 align:start position:0%
let's talk a bit how we're gonna build
it<00:27:02.139><c> we</c><00:27:03.139><c> already</c><00:27:03.289><c> know</c><00:27:03.740><c> that</c><00:27:03.769><c> on</c><00:27:04.159><c> device</c><00:27:04.600><c> from</c>

00:27:05.590 --> 00:27:05.600 align:start position:0%
it we already know that on device from
 

00:27:05.600 --> 00:27:08.440 align:start position:0%
it we already know that on device from
one<00:27:05.869><c> execution</c><00:27:06.499><c> to</c><00:27:06.649><c> the</c><00:27:06.679><c> other</c><00:27:06.919><c> the</c><00:27:07.909><c> profiles</c>

00:27:08.440 --> 00:27:08.450 align:start position:0%
one execution to the other the profiles
 

00:27:08.450 --> 00:27:10.960 align:start position:0%
one execution to the other the profiles
aggregated<00:27:09.169><c> quite</c><00:27:09.409><c> well</c><00:27:09.769><c> they</c><00:27:10.639><c> reach</c><00:27:10.820><c> a</c>

00:27:10.960 --> 00:27:10.970 align:start position:0%
aggregated quite well they reach a
 

00:27:10.970 --> 00:27:14.560 align:start position:0%
aggregated quite well they reach a
stable<00:27:11.419><c> point</c><00:27:11.659><c> pretty</c><00:27:12.559><c> fast</c><00:27:12.940><c> that</c><00:27:13.940><c> means</c><00:27:14.299><c> that</c>

00:27:14.560 --> 00:27:14.570 align:start position:0%
stable point pretty fast that means that
 

00:27:14.570 --> 00:27:16.539 align:start position:0%
stable point pretty fast that means that
it<00:27:14.659><c> was</c><00:27:14.779><c> not</c><00:27:14.929><c> reoccupied</c><00:27:15.200><c> the</c><00:27:15.889><c> application</c>

00:27:16.539 --> 00:27:16.549 align:start position:0%
it was not reoccupied the application
 

00:27:16.549 --> 00:27:20.019 align:start position:0%
it was not reoccupied the application
over<00:27:17.240><c> and</c><00:27:17.419><c> over</c><00:27:17.779><c> and</c><00:27:17.929><c> over</c><00:27:18.230><c> again</c><00:27:18.940><c> after</c><00:27:19.940><c> a</c><00:27:19.970><c> few</c>

00:27:20.019 --> 00:27:20.029 align:start position:0%
over and over and over again after a few
 

00:27:20.029 --> 00:27:24.070 align:start position:0%
over and over and over again after a few
optimization<00:27:20.899><c> steps</c><00:27:21.230><c> will</c><00:27:21.649><c> stop</c><00:27:23.080><c> however</c>

00:27:24.070 --> 00:27:24.080 align:start position:0%
optimization steps will stop however
 

00:27:24.080 --> 00:27:26.680 align:start position:0%
optimization steps will stop however
that's<00:27:24.259><c> data</c><00:27:24.559><c> from</c><00:27:24.919><c> one</c><00:27:25.129><c> device</c><00:27:25.429><c> how</c><00:27:26.389><c> well</c>

00:27:26.680 --> 00:27:26.690 align:start position:0%
that's data from one device how well
 

00:27:26.690 --> 00:27:28.539 align:start position:0%
that's data from one device how well
does<00:27:26.899><c> it</c><00:27:27.110><c> work</c><00:27:27.350><c> when</c><00:27:27.529><c> you</c><00:27:27.619><c> try</c><00:27:27.830><c> to</c><00:27:27.860><c> do</c><00:27:28.100><c> it</c><00:27:28.249><c> cross</c>

00:27:28.539 --> 00:27:28.549 align:start position:0%
does it work when you try to do it cross
 

00:27:28.549 --> 00:27:31.180 align:start position:0%
does it work when you try to do it cross
devices<00:27:29.090><c> how</c><00:27:29.840><c> many</c><00:27:30.139><c> samples</c><00:27:30.440><c> you</c><00:27:30.830><c> will</c><00:27:30.980><c> need</c>

00:27:31.180 --> 00:27:31.190 align:start position:0%
devices how many samples you will need
 

00:27:31.190 --> 00:27:33.100 align:start position:0%
devices how many samples you will need
in<00:27:31.610><c> order</c><00:27:31.730><c> to</c><00:27:31.879><c> get</c><00:27:32.090><c> to</c><00:27:32.119><c> a</c><00:27:32.269><c> robust</c><00:27:32.690><c> reliable</c>

00:27:33.100 --> 00:27:33.110 align:start position:0%
in order to get to a robust reliable
 

00:27:33.110 --> 00:27:39.820 align:start position:0%
in order to get to a robust reliable
profile<00:27:36.399><c> we</c><00:27:37.399><c> looked</c><00:27:37.899><c> at</c><00:27:38.899><c> our</c><00:27:39.110><c> own</c><00:27:39.350><c> Google</c>

00:27:39.820 --> 00:27:39.830 align:start position:0%
profile we looked at our own Google
 

00:27:39.830 --> 00:27:41.470 align:start position:0%
profile we looked at our own Google
applications<00:27:40.460><c> and</c><00:27:40.669><c> we</c><00:27:40.789><c> try</c><00:27:40.970><c> to</c><00:27:41.029><c> figure</c><00:27:41.269><c> that</c>

00:27:41.470 --> 00:27:41.480 align:start position:0%
applications and we try to figure that
 

00:27:41.480 --> 00:27:45.789 align:start position:0%
applications and we try to figure that
up<00:27:42.129><c> here</c><00:27:43.129><c> you</c><00:27:43.220><c> can</c><00:27:43.429><c> see</c><00:27:43.730><c> a</c><00:27:43.759><c> plot</c><00:27:44.799><c> which</c>

00:27:45.789 --> 00:27:45.799 align:start position:0%
up here you can see a plot which
 

00:27:45.799 --> 00:27:48.369 align:start position:0%
up here you can see a plot which
represents<00:27:46.700><c> the</c><00:27:46.970><c> amount</c><00:27:47.269><c> of</c><00:27:47.419><c> information</c><00:27:47.749><c> the</c>

00:27:48.369 --> 00:27:48.379 align:start position:0%
represents the amount of information the
 

00:27:48.379 --> 00:27:50.619 align:start position:0%
represents the amount of information the
core<00:27:48.619><c> profiles</c><00:27:49.220><c> relative</c><00:27:49.970><c> to</c><00:27:50.090><c> the</c><00:27:50.179><c> total</c>

00:27:50.619 --> 00:27:50.629 align:start position:0%
core profiles relative to the total
 

00:27:50.629 --> 00:27:56.200 align:start position:0%
core profiles relative to the total
number<00:27:50.659><c> of</c><00:27:51.019><c> aggregations</c><00:27:54.399><c> the</c><00:27:55.399><c> y</c><00:27:55.610><c> axis</c>

00:27:56.200 --> 00:27:56.210 align:start position:0%
number of aggregations the y axis
 

00:27:56.210 --> 00:27:58.180 align:start position:0%
number of aggregations the y axis
represents<00:27:56.929><c> the</c><00:27:56.990><c> amount</c><00:27:57.200><c> of</c><00:27:57.409><c> information</c><00:27:57.649><c> and</c>

00:27:58.180 --> 00:27:58.190 align:start position:0%
represents the amount of information and
 

00:27:58.190 --> 00:27:59.919 align:start position:0%
represents the amount of information and
the<00:27:58.970><c> actual</c><00:27:59.299><c> value</c>

00:27:59.919 --> 00:27:59.929 align:start position:0%
the actual value
 

00:27:59.929 --> 00:28:02.619 align:start position:0%
the actual value
marek<00:28:00.409><c> value</c><00:28:00.679><c> is</c><00:28:00.769><c> not</c><00:28:00.950><c> important</c><00:28:01.460><c> there</c><00:28:01.669><c> what</c>

00:28:02.619 --> 00:28:02.629 align:start position:0%
marek value is not important there what
 

00:28:02.629 --> 00:28:04.930 align:start position:0%
marek value is not important there what
is<00:28:02.779><c> important</c><00:28:03.470><c> from</c><00:28:03.619><c> this</c><00:28:03.740><c> graph</c><00:28:04.070><c> is</c><00:28:04.669><c> act</c>

00:28:04.930 --> 00:28:04.940 align:start position:0%
is important from this graph is act
 

00:28:04.940 --> 00:28:10.149 align:start position:0%
is important from this graph is act
actually<00:28:05.210><c> from</c><00:28:05.779><c> 20</c><00:28:07.570><c> 2014</c><00:28:08.570><c> and</c><00:28:08.869><c> of</c><00:28:08.960><c> a</c><00:28:09.110><c> number</c><00:28:10.070><c> of</c>

00:28:10.149 --> 00:28:10.159 align:start position:0%
actually from 20 2014 and of a number of
 

00:28:10.159 --> 00:28:13.299 align:start position:0%
actually from 20 2014 and of a number of
profile<00:28:10.519><c> aggregations</c><00:28:11.499><c> the</c><00:28:12.499><c> information</c><00:28:13.190><c> in</c>

00:28:13.299 --> 00:28:13.309 align:start position:0%
profile aggregations the information in
 

00:28:13.309 --> 00:28:17.049 align:start position:0%
profile aggregations the information in
the<00:28:13.460><c> profile</c><00:28:13.879><c> reaches</c><00:28:14.330><c> a</c><00:28:14.360><c> plateau</c><00:28:14.539><c> and</c><00:28:16.059><c> that's</c>

00:28:17.049 --> 00:28:17.059 align:start position:0%
the profile reaches a plateau and that's
 

00:28:17.059 --> 00:28:19.869 align:start position:0%
the profile reaches a plateau and that's
very<00:28:17.360><c> important</c><00:28:18.080><c> it</c><00:28:18.649><c> sends</c><00:28:19.009><c> a</c><00:28:19.070><c> very</c><00:28:19.100><c> important</c>

00:28:19.869 --> 00:28:19.879 align:start position:0%
very important it sends a very important
 

00:28:19.879 --> 00:28:22.359 align:start position:0%
very important it sends a very important
message<00:28:20.059><c> it</c><00:28:21.019><c> means</c><00:28:21.259><c> that</c><00:28:21.529><c> the</c><00:28:21.649><c> alpha</c><00:28:22.159><c> beta</c>

00:28:22.359 --> 00:28:22.369 align:start position:0%
message it means that the alpha beta
 

00:28:22.369 --> 00:28:24.639 align:start position:0%
message it means that the alpha beta
Channel<00:28:22.909><c> users</c><00:28:23.330><c> will</c><00:28:23.840><c> provide</c><00:28:24.230><c> us</c><00:28:24.619><c> with</c>

00:28:24.639 --> 00:28:24.649 align:start position:0%
Channel users will provide us with
 

00:28:24.649 --> 00:28:27.850 align:start position:0%
Channel users will provide us with
enough<00:28:25.159><c> data</c><00:28:25.429><c> to</c><00:28:26.389><c> build</c><00:28:26.570><c> a</c><00:28:26.779><c> poor</c><00:28:26.990><c> profile</c><00:28:27.499><c> and</c>

00:28:27.850 --> 00:28:27.860 align:start position:0%
enough data to build a poor profile and
 

00:28:27.860 --> 00:28:30.249 align:start position:0%
enough data to build a poor profile and
it<00:28:28.730><c> means</c><00:28:28.999><c> that</c><00:28:29.179><c> the</c><00:28:29.450><c> majority</c><00:28:29.600><c> of</c><00:28:30.080><c> the</c>

00:28:30.249 --> 00:28:30.259 align:start position:0%
it means that the majority of the
 

00:28:30.259 --> 00:28:32.190 align:start position:0%
it means that the majority of the
production<00:28:30.470><c> users</c><00:28:31.309><c> of</c><00:28:31.730><c> your</c><00:28:31.759><c> application</c>

00:28:32.190 --> 00:28:32.200 align:start position:0%
production users of your application
 

00:28:32.200 --> 00:28:34.930 align:start position:0%
production users of your application
will<00:28:33.200><c> always</c><00:28:33.649><c> have</c><00:28:33.860><c> the</c><00:28:34.009><c> best</c><00:28:34.309><c> possible</c>

00:28:34.930 --> 00:28:34.940 align:start position:0%
will always have the best possible
 

00:28:34.940 --> 00:28:40.250 align:start position:0%
will always have the best possible
experience

00:28:40.250 --> 00:28:40.260 align:start position:0%
 
 

00:28:40.260 --> 00:28:42.470 align:start position:0%
 
so<00:28:40.799><c> how</c><00:28:41.100><c> do</c><00:28:41.160><c> we</c><00:28:41.490><c> actually</c><00:28:41.669><c> aggregate</c><00:28:42.240><c> the</c>

00:28:42.470 --> 00:28:42.480 align:start position:0%
so how do we actually aggregate the
 

00:28:42.480 --> 00:28:47.240 align:start position:0%
so how do we actually aggregate the
information<00:28:43.110><c> I</c><00:28:45.380><c> mentioned</c><00:28:46.380><c> before</c><00:28:46.500><c> that</c><00:28:46.799><c> in</c>

00:28:47.240 --> 00:28:47.250 align:start position:0%
information I mentioned before that in
 

00:28:47.250 --> 00:28:48.440 align:start position:0%
information I mentioned before that in
the<00:28:47.280><c> profile</c><00:28:47.760><c> you</c><00:28:47.790><c> will</c><00:28:48.059><c> find</c><00:28:48.270><c> information</c>

00:28:48.440 --> 00:28:48.450 align:start position:0%
the profile you will find information
 

00:28:48.450 --> 00:28:53.000 align:start position:0%
the profile you will find information
about<00:28:49.110><c> classes</c><00:28:49.410><c> and</c><00:28:49.770><c> methods</c><00:28:51.200><c> on</c><00:28:52.200><c> device</c><00:28:52.679><c> this</c>

00:28:53.000 --> 00:28:53.010 align:start position:0%
about classes and methods on device this
 

00:28:53.010 --> 00:28:55.190 align:start position:0%
about classes and methods on device this
is<00:28:53.190><c> roughly</c><00:28:53.490><c> how</c><00:28:53.549><c> it</c><00:28:53.700><c> looks</c><00:28:54.000><c> like</c><00:28:54.240><c> we're</c><00:28:55.049><c> going</c>

00:28:55.190 --> 00:28:55.200 align:start position:0%
is roughly how it looks like we're going
 

00:28:55.200 --> 00:28:57.260 align:start position:0%
is roughly how it looks like we're going
to<00:28:55.290><c> take</c><00:28:55.470><c> all</c><00:28:55.710><c> the</c><00:28:56.070><c> executions</c><00:28:56.730><c> that</c><00:28:56.970><c> we</c><00:28:57.090><c> have</c>

00:28:57.260 --> 00:28:57.270 align:start position:0%
to take all the executions that we have
 

00:28:57.270 --> 00:29:00.320 align:start position:0%
to take all the executions that we have
seen<00:28:57.570><c> before</c><00:28:57.679><c> and</c><00:28:58.679><c> we'll</c><00:28:58.860><c> create</c><00:28:59.370><c> a</c><00:28:59.549><c> union</c><00:28:59.970><c> of</c>

00:29:00.320 --> 00:29:00.330 align:start position:0%
seen before and we'll create a union of
 

00:29:00.330 --> 00:29:02.930 align:start position:0%
seen before and we'll create a union of
everything<00:29:00.840><c> that</c><00:29:00.929><c> you've</c><00:29:01.080><c> seen</c><00:29:01.730><c> in</c><00:29:02.730><c> the</c>

00:29:02.930 --> 00:29:02.940 align:start position:0%
everything that you've seen in the
 

00:29:02.940 --> 00:29:04.700 align:start position:0%
everything that you've seen in the
aggregated<00:29:03.510><c> profile</c><00:29:03.990><c> you</c><00:29:04.320><c> will</c><00:29:04.380><c> have</c>

00:29:04.700 --> 00:29:04.710 align:start position:0%
aggregated profile you will have
 

00:29:04.710 --> 00:29:06.950 align:start position:0%
aggregated profile you will have
information<00:29:05.190><c> about</c><00:29:05.669><c> classes</c><00:29:05.940><c> methods</c><00:29:06.570><c> about</c>

00:29:06.950 --> 00:29:06.960 align:start position:0%
information about classes methods about
 

00:29:06.960 --> 00:29:11.090 align:start position:0%
information about classes methods about
everything<00:29:07.470><c> that</c><00:29:07.500><c> you've</c><00:29:07.770><c> seen</c><00:29:09.770><c> on</c><00:29:10.770><c> cloud</c>

00:29:11.090 --> 00:29:11.100 align:start position:0%
everything that you've seen on cloud
 

00:29:11.100 --> 00:29:14.210 align:start position:0%
everything that you've seen on cloud
however<00:29:11.940><c> we</c><00:29:12.870><c> don't</c><00:29:13.140><c> really</c><00:29:13.470><c> want</c><00:29:13.830><c> everything</c>

00:29:14.210 --> 00:29:14.220 align:start position:0%
however we don't really want everything
 

00:29:14.220 --> 00:29:17.270 align:start position:0%
however we don't really want everything
we<00:29:14.790><c> only</c><00:29:15.090><c> want</c><00:29:15.480><c> the</c><00:29:15.660><c> common</c><00:29:16.169><c> executed</c><00:29:16.980><c> code</c>

00:29:17.270 --> 00:29:17.280 align:start position:0%
we only want the common executed code
 

00:29:17.280 --> 00:29:21.500 align:start position:0%
we only want the common executed code
path<00:29:17.780><c> and</c><00:29:19.340><c> what</c><00:29:20.340><c> we</c><00:29:20.460><c> are</c><00:29:20.549><c> doing</c><00:29:20.790><c> instead</c><00:29:21.299><c> of</c>

00:29:21.500 --> 00:29:21.510 align:start position:0%
path and what we are doing instead of
 

00:29:21.510 --> 00:29:23.600 align:start position:0%
path and what we are doing instead of
having<00:29:21.720><c> a</c><00:29:21.960><c> union</c><00:29:22.230><c> will</c><00:29:22.770><c> have</c><00:29:23.010><c> be</c><00:29:23.190><c> having</c><00:29:23.490><c> a</c>

00:29:23.600 --> 00:29:23.610 align:start position:0%
having a union will have be having a
 

00:29:23.610 --> 00:29:26.750 align:start position:0%
having a union will have be having a
smart<00:29:23.970><c> intersection</c><00:29:24.980><c> with</c><00:29:25.980><c> the</c><00:29:26.130><c> only</c><00:29:26.460><c> keeping</c>

00:29:26.750 --> 00:29:26.760 align:start position:0%
smart intersection with the only keeping
 

00:29:26.760 --> 00:29:29.299 align:start position:0%
smart intersection with the only keeping
the<00:29:27.750><c> information</c><00:29:28.410><c> relevant</c><00:29:28.740><c> to</c><00:29:29.010><c> all</c>

00:29:29.299 --> 00:29:29.309 align:start position:0%
the information relevant to all
 

00:29:29.309 --> 00:29:31.880 align:start position:0%
the information relevant to all
executions<00:29:30.290><c> meaning</c><00:29:31.290><c> we're</c><00:29:31.440><c> going</c><00:29:31.620><c> to</c><00:29:31.710><c> filter</c>

00:29:31.880 --> 00:29:31.890 align:start position:0%
executions meaning we're going to filter
 

00:29:31.890 --> 00:29:35.990 align:start position:0%
executions meaning we're going to filter
out<00:29:32.040><c> all</c><00:29:32.250><c> the</c><00:29:32.850><c> outliers</c><00:29:34.220><c> the</c><00:29:35.220><c> result</c><00:29:35.610><c> is</c><00:29:35.790><c> what</c>

00:29:35.990 --> 00:29:36.000 align:start position:0%
out all the outliers the result is what
 

00:29:36.000 --> 00:29:38.060 align:start position:0%
out all the outliers the result is what
we<00:29:36.120><c> call</c><00:29:36.299><c> the</c><00:29:36.480><c> core</c><00:29:36.660><c> profile</c><00:29:37.140><c> which</c><00:29:37.710><c> only</c>

00:29:38.060 --> 00:29:38.070 align:start position:0%
we call the core profile which only
 

00:29:38.070 --> 00:29:40.520 align:start position:0%
we call the core profile which only
keeps<00:29:38.370><c> the</c><00:29:38.520><c> most</c><00:29:39.059><c> commonly</c><00:29:39.450><c> seen</c><00:29:39.750><c> samples</c><00:29:40.260><c> and</c>

00:29:40.520 --> 00:29:40.530 align:start position:0%
keeps the most commonly seen samples and
 

00:29:40.530 --> 00:29:42.440 align:start position:0%
keeps the most commonly seen samples and
this<00:29:41.309><c> is</c><00:29:41.490><c> what's</c><00:29:41.700><c> gonna</c><00:29:41.940><c> gonna</c><00:29:42.210><c> get</c>

00:29:42.440 --> 00:29:42.450 align:start position:0%
this is what's gonna gonna get
 

00:29:42.450 --> 00:29:47.539 align:start position:0%
this is what's gonna gonna get
eventually<00:29:42.900><c> to</c><00:29:43.260><c> the</c><00:29:43.350><c> device</c><00:29:46.130><c> how</c><00:29:47.130><c> will</c><00:29:47.370><c> that</c>

00:29:47.539 --> 00:29:47.549 align:start position:0%
eventually to the device how will that
 

00:29:47.549 --> 00:29:50.870 align:start position:0%
eventually to the device how will that
is<00:29:47.730><c> work</c><00:29:48.980><c> let's</c><00:29:49.980><c> look</c><00:29:50.160><c> again</c><00:29:50.250><c> at</c><00:29:50.460><c> data</c>

00:29:50.870 --> 00:29:50.880 align:start position:0%
is work let's look again at data
 

00:29:50.880 --> 00:29:54.140 align:start position:0%
is work let's look again at data
captured<00:29:51.600><c> from</c><00:29:51.780><c> Google</c><00:29:52.140><c> Apps</c><00:29:52.580><c> we</c><00:29:53.580><c> tasted</c><00:29:53.940><c> this</c>

00:29:54.140 --> 00:29:54.150 align:start position:0%
captured from Google Apps we tasted this
 

00:29:54.150 --> 00:29:56.270 align:start position:0%
captured from Google Apps we tasted this
across<00:29:54.450><c> a</c><00:29:54.510><c> variety</c><00:29:54.870><c> of</c><00:29:55.260><c> application</c><00:29:55.919><c> and</c><00:29:55.980><c> here</c>

00:29:56.270 --> 00:29:56.280 align:start position:0%
across a variety of application and here
 

00:29:56.280 --> 00:29:58.100 align:start position:0%
across a variety of application and here
are<00:29:56.400><c> the</c><00:29:56.549><c> results</c><00:29:57.030><c> of</c><00:29:57.120><c> some</c><00:29:57.360><c> representative</c>

00:29:58.100 --> 00:29:58.110 align:start position:0%
are the results of some representative
 

00:29:58.110 --> 00:30:00.440 align:start position:0%
are the results of some representative
ones<00:29:58.320><c> in</c><00:29:58.740><c> this</c><00:29:59.520><c> set</c><00:29:59.820><c> you</c><00:30:00.000><c> can</c><00:30:00.030><c> find</c>

00:30:00.440 --> 00:30:00.450 align:start position:0%
ones in this set you can find
 

00:30:00.450 --> 00:30:03.370 align:start position:0%
ones in this set you can find
application<00:30:01.049><c> which</c><00:30:01.200><c> relies</c><00:30:01.620><c> on</c><00:30:01.820><c> lated</c><00:30:02.820><c> code</c>

00:30:03.370 --> 00:30:03.380 align:start position:0%
application which relies on lated code
 

00:30:03.380 --> 00:30:06.710 align:start position:0%
application which relies on lated code
for<00:30:04.380><c> example</c><00:30:04.500><c> google</c><00:30:05.160><c> camera</c><00:30:05.720><c> or</c>

00:30:06.710 --> 00:30:06.720 align:start position:0%
for example google camera or
 

00:30:06.720 --> 00:30:09.799 align:start position:0%
for example google camera or
applications<00:30:07.500><c> which</c><00:30:08.309><c> have</c><00:30:08.610><c> much</c><00:30:09.270><c> which</c><00:30:09.660><c> are</c>

00:30:09.799 --> 00:30:09.809 align:start position:0%
applications which have much which are
 

00:30:09.809 --> 00:30:12.530 align:start position:0%
applications which have much which are
much<00:30:10.049><c> more</c><00:30:10.260><c> java</c><00:30:10.620><c> oriented</c><00:30:11.280><c> say</c><00:30:11.970><c> Google</c><00:30:12.179><c> Maps</c>

00:30:12.530 --> 00:30:12.540 align:start position:0%
much more java oriented say Google Maps
 

00:30:12.540 --> 00:30:15.919 align:start position:0%
much more java oriented say Google Maps
or<00:30:12.780><c> Google</c><00:30:12.809><c> Docs</c><00:30:13.260><c> for</c><00:30:14.390><c> google</c><00:30:15.390><c> camera</c><00:30:15.720><c> for</c>

00:30:15.919 --> 00:30:15.929 align:start position:0%
or Google Docs for google camera for
 

00:30:15.929 --> 00:30:17.930 align:start position:0%
or Google Docs for google camera for
example<00:30:16.320><c> get</c><00:30:16.500><c> a</c><00:30:16.530><c> start</c><00:30:16.919><c> of</c><00:30:17.100><c> time</c><00:30:17.309><c> improvement</c>

00:30:17.930 --> 00:30:17.940 align:start position:0%
example get a start of time improvement
 

00:30:17.940 --> 00:30:19.970 align:start position:0%
example get a start of time improvement
of<00:30:18.059><c> about</c><00:30:18.210><c> twelve</c><00:30:18.780><c> point</c><00:30:19.020><c> six</c><00:30:19.260><c> percent</c><00:30:19.440><c> and</c>

00:30:19.970 --> 00:30:19.980 align:start position:0%
of about twelve point six percent and
 

00:30:19.980 --> 00:30:21.770 align:start position:0%
of about twelve point six percent and
that's<00:30:20.640><c> excellent</c><00:30:21.030><c> given</c><00:30:21.540><c> that</c><00:30:21.690><c> the</c>

00:30:21.770 --> 00:30:21.780 align:start position:0%
that's excellent given that the
 

00:30:21.780 --> 00:30:24.080 align:start position:0%
that's excellent given that the
application<00:30:22.559><c> itself</c><00:30:22.860><c> doesn't</c><00:30:23.429><c> have</c><00:30:23.700><c> a</c><00:30:23.760><c> lot</c><00:30:24.059><c> of</c>

00:30:24.080 --> 00:30:24.090 align:start position:0%
application itself doesn't have a lot of
 

00:30:24.090 --> 00:30:25.000 align:start position:0%
application itself doesn't have a lot of
Java<00:30:24.450><c> code</c>

00:30:25.000 --> 00:30:25.010 align:start position:0%
Java code
 

00:30:25.010 --> 00:30:27.710 align:start position:0%
Java code
however<00:30:26.010><c> for</c><00:30:26.429><c> maps</c><00:30:26.730><c> or</c><00:30:27.030><c> dogs</c><00:30:27.390><c> which</c><00:30:27.570><c> are</c>

00:30:27.710 --> 00:30:27.720 align:start position:0%
however for maps or dogs which are
 

00:30:27.720 --> 00:30:30.620 align:start position:0%
however for maps or dogs which are
heavily<00:30:28.380><c> Java</c><00:30:28.860><c> based</c><00:30:29.130><c> we</c><00:30:29.970><c> can</c><00:30:30.150><c> see</c><00:30:30.390><c> that</c><00:30:30.540><c> the</c>

00:30:30.620 --> 00:30:30.630 align:start position:0%
heavily Java based we can see that the
 

00:30:30.630 --> 00:30:32.780 align:start position:0%
heavily Java based we can see that the
optimizations<00:30:31.500><c> improves</c><00:30:31.980><c> the</c><00:30:32.100><c> startup</c><00:30:32.580><c> time</c>

00:30:32.780 --> 00:30:32.790 align:start position:0%
optimizations improves the startup time
 

00:30:32.790 --> 00:30:35.690 align:start position:0%
optimizations improves the startup time
by<00:30:33.510><c> about</c><00:30:33.720><c> twenty</c><00:30:34.200><c> eight</c><00:30:34.230><c> percent</c><00:30:34.620><c> or</c><00:30:35.220><c> forty</c>

00:30:35.690 --> 00:30:35.700 align:start position:0%
by about twenty eight percent or forty
 

00:30:35.700 --> 00:30:38.930 align:start position:0%
by about twenty eight percent or forty
three<00:30:35.880><c> percent</c><00:30:37.250><c> across</c><00:30:38.250><c> the</c><00:30:38.400><c> board</c><00:30:38.640><c> you</c><00:30:38.790><c> can</c>

00:30:38.930 --> 00:30:38.940 align:start position:0%
three percent across the board you can
 

00:30:38.940 --> 00:30:40.820 align:start position:0%
three percent across the board you can
see<00:30:38.970><c> an</c><00:30:39.240><c> average</c><00:30:39.450><c> of</c><00:30:39.780><c> about</c><00:30:39.960><c> twenty</c><00:30:40.679><c> percent</c>

00:30:40.820 --> 00:30:40.830 align:start position:0%
see an average of about twenty percent
 

00:30:40.830 --> 00:30:43.700 align:start position:0%
see an average of about twenty percent
improvement<00:30:41.490><c> and</c><00:30:42.000><c> that</c><00:30:42.320><c> obviously</c><00:30:43.320><c> depends</c>

00:30:43.700 --> 00:30:43.710 align:start position:0%
improvement and that obviously depends
 

00:30:43.710 --> 00:30:45.560 align:start position:0%
improvement and that obviously depends
with<00:30:43.830><c> what</c><00:30:44.010><c> the</c><00:30:44.100><c> application</c><00:30:44.640><c> is</c><00:30:44.700><c> doing</c><00:30:44.760><c> how</c>

00:30:45.560 --> 00:30:45.570 align:start position:0%
with what the application is doing how
 

00:30:45.570 --> 00:30:51.730 align:start position:0%
with what the application is doing how
much<00:30:45.809><c> Java</c><00:30:46.080><c> code</c><00:30:46.350><c> is</c><00:30:46.500><c> being</c><00:30:46.679><c> used</c><00:30:47.070><c> and</c><00:30:47.280><c> so</c><00:30:47.340><c> on</c>

00:30:51.730 --> 00:30:51.740 align:start position:0%
 
 

00:30:51.740 --> 00:30:55.220 align:start position:0%
 
now<00:30:52.740><c> I</c><00:30:52.770><c> mention</c><00:30:53.190><c> in</c><00:30:53.280><c> the</c><00:30:53.400><c> beginning</c><00:30:54.230><c> that</c>

00:30:55.220 --> 00:30:55.230 align:start position:0%
now I mention in the beginning that
 

00:30:55.230 --> 00:30:57.200 align:start position:0%
now I mention in the beginning that
besides<00:30:55.830><c> improving</c><00:30:56.160><c> the</c><00:30:56.640><c> application</c>

00:30:57.200 --> 00:30:57.210 align:start position:0%
besides improving the application
 

00:30:57.210 --> 00:30:59.270 align:start position:0%
besides improving the application
performance<00:30:57.810><c> directly</c><00:30:58.290><c> via</c><00:30:58.500><c> profile</c><00:30:58.950><c> guided</c>

00:30:59.270 --> 00:30:59.280 align:start position:0%
performance directly via profile guided
 

00:30:59.280 --> 00:31:02.870 align:start position:0%
performance directly via profile guided
optimizations<00:31:00.320><c> the</c><00:31:01.320><c> profile</c><00:31:01.740><c> of</c><00:31:02.010><c> also</c><00:31:02.550><c> offer</c>

00:31:02.870 --> 00:31:02.880 align:start position:0%
optimizations the profile of also offer
 

00:31:02.880 --> 00:31:06.530 align:start position:0%
optimizations the profile of also offer
much<00:31:03.390><c> more</c><00:31:03.420><c> opportunities</c><00:31:04.730><c> I'm</c><00:31:05.730><c> gonna</c>

00:31:06.530 --> 00:31:06.540 align:start position:0%
much more opportunities I'm gonna
 

00:31:06.540 --> 00:31:09.380 align:start position:0%
much more opportunities I'm gonna
present<00:31:06.840><c> a</c><00:31:07.170><c> short</c><00:31:07.440><c> use</c><00:31:07.830><c> case</c><00:31:08.070><c> study</c><00:31:08.400><c> and</c><00:31:08.730><c> walk</c>

00:31:09.380 --> 00:31:09.390 align:start position:0%
present a short use case study and walk
 

00:31:09.390 --> 00:31:11.450 align:start position:0%
present a short use case study and walk
you<00:31:09.540><c> through</c><00:31:09.720><c> some</c><00:31:09.840><c> important</c><00:31:10.500><c> aspects</c><00:31:11.220><c> that</c>

00:31:11.450 --> 00:31:11.460 align:start position:0%
you through some important aspects that
 

00:31:11.460 --> 00:31:13.670 align:start position:0%
you through some important aspects that
the<00:31:12.300><c> profiles</c><00:31:12.660><c> can</c><00:31:12.900><c> reveal</c><00:31:13.230><c> about</c><00:31:13.380><c> your</c>

00:31:13.670 --> 00:31:13.680 align:start position:0%
the profiles can reveal about your
 

00:31:13.680 --> 00:31:17.120 align:start position:0%
the profiles can reveal about your
application<00:31:14.990><c> during</c><00:31:15.990><c> this</c><00:31:16.440><c> use</c><00:31:16.650><c> case</c><00:31:16.740><c> study</c>

00:31:17.120 --> 00:31:17.130 align:start position:0%
application during this use case study
 

00:31:17.130 --> 00:31:20.540 align:start position:0%
application during this use case study
I'm<00:31:17.310><c> gonna</c><00:31:17.520><c> focus</c><00:31:17.730><c> on</c><00:31:18.060><c> a</c><00:31:18.090><c> single</c><00:31:18.750><c> question</c><00:31:19.550><c> are</c>

00:31:20.540 --> 00:31:20.550 align:start position:0%
I'm gonna focus on a single question are
 

00:31:20.550 --> 00:31:22.400 align:start position:0%
I'm gonna focus on a single question are
we<00:31:20.610><c> shipping</c><00:31:21.090><c> unnecessary</c><00:31:21.750><c> code</c><00:31:22.020><c> to</c><00:31:22.320><c> the</c>

00:31:22.400 --> 00:31:22.410 align:start position:0%
we shipping unnecessary code to the
 

00:31:22.410 --> 00:31:30.980 align:start position:0%
we shipping unnecessary code to the
clients<00:31:25.520><c> are</c><00:31:26.520><c> you</c><00:31:29.480><c> let's</c><00:31:30.480><c> take</c><00:31:30.660><c> a</c><00:31:30.690><c> look</c><00:31:30.900><c> at</c>

00:31:30.980 --> 00:31:30.990 align:start position:0%
clients are you let's take a look at
 

00:31:30.990 --> 00:31:36.530 align:start position:0%
clients are you let's take a look at
some<00:31:31.170><c> data</c><00:31:32.390><c> again</c><00:31:33.390><c> this</c><00:31:34.340><c> case</c><00:31:35.340><c> study</c><00:31:35.640><c> reflects</c>

00:31:36.530 --> 00:31:36.540 align:start position:0%
some data again this case study reflects
 

00:31:36.540 --> 00:31:38.720 align:start position:0%
some data again this case study reflects
the<00:31:36.810><c> state</c><00:31:37.080><c> of</c><00:31:37.290><c> some</c><00:31:37.890><c> Google</c><00:31:38.220><c> Apps</c><00:31:38.370><c> that</c><00:31:38.490><c> it</c>

00:31:38.720 --> 00:31:38.730 align:start position:0%
the state of some Google Apps that it
 

00:31:38.730 --> 00:31:42.410 align:start position:0%
the state of some Google Apps that it
tested<00:31:39.530><c> we</c><00:31:40.530><c> see</c><00:31:40.770><c> that</c><00:31:40.890><c> on</c><00:31:41.070><c> average</c><00:31:41.310><c> we</c><00:31:41.940><c> profile</c>

00:31:42.410 --> 00:31:42.420 align:start position:0%
tested we see that on average we profile
 

00:31:42.420 --> 00:31:46.160 align:start position:0%
tested we see that on average we profile
about<00:31:43.040><c> 1415</c><00:31:44.040><c> percent</c><00:31:44.520><c> of</c><00:31:44.700><c> the</c><00:31:44.850><c> code</c><00:31:45.060><c> and</c><00:31:45.390><c> about</c>

00:31:46.160 --> 00:31:46.170 align:start position:0%
about 1415 percent of the code and about
 

00:31:46.170 --> 00:31:48.560 align:start position:0%
about 1415 percent of the code and about
85<00:31:46.860><c> percent</c><00:31:47.370><c> of</c><00:31:47.490><c> the</c><00:31:47.640><c> code</c><00:31:47.820><c> remains</c><00:31:48.210><c> on</c>

00:31:48.560 --> 00:31:48.570 align:start position:0%
85 percent of the code remains on
 

00:31:48.570 --> 00:31:51.470 align:start position:0%
85 percent of the code remains on
profile<00:31:49.700><c> when</c><00:31:50.700><c> you</c><00:31:50.820><c> spread</c><00:31:51.060><c> the</c><00:31:51.180><c> distribution</c>

00:31:51.470 --> 00:31:51.480 align:start position:0%
profile when you spread the distribution
 

00:31:51.480 --> 00:31:53.450 align:start position:0%
profile when you spread the distribution
you<00:31:51.840><c> can</c><00:31:51.900><c> see</c><00:31:52.230><c> for</c><00:31:52.440><c> example</c><00:31:52.530><c> that</c><00:31:52.980><c> in</c><00:31:53.250><c> some</c>

00:31:53.450 --> 00:31:53.460 align:start position:0%
you can see for example that in some
 

00:31:53.460 --> 00:31:55.310 align:start position:0%
you can see for example that in some
apps<00:31:53.700><c> five</c><00:31:54.150><c> to</c><00:31:54.360><c> ten</c><00:31:54.540><c> percent</c><00:31:54.900><c> of</c><00:31:55.020><c> the</c><00:31:55.110><c> code</c>

00:31:55.310 --> 00:31:55.320 align:start position:0%
apps five to ten percent of the code
 

00:31:55.320 --> 00:31:57.320 align:start position:0%
apps five to ten percent of the code
gets<00:31:55.500><c> profiled</c><00:31:56.070><c> in</c><00:31:56.160><c> some</c><00:31:56.430><c> otherwise</c><00:31:56.730><c> even</c><00:31:57.000><c> 50</c>

00:31:57.320 --> 00:31:57.330 align:start position:0%
gets profiled in some otherwise even 50
 

00:31:57.330 --> 00:32:01.310 align:start position:0%
gets profiled in some otherwise even 50
percent<00:31:57.720><c> of</c><00:31:57.840><c> the</c><00:31:57.930><c> code</c><00:31:58.110><c> gets</c><00:31:58.260><c> profile</c><00:32:00.320><c> and</c>

00:32:01.310 --> 00:32:01.320 align:start position:0%
percent of the code gets profile and
 

00:32:01.320 --> 00:32:05.260 align:start position:0%
percent of the code gets profile and
this<00:32:01.980><c> is</c><00:32:02.130><c> the</c><00:32:02.280><c> rather</c><00:32:02.460><c> intriguing</c><00:32:03.000><c> result</c><00:32:03.290><c> and</c>

00:32:05.260 --> 00:32:05.270 align:start position:0%
this is the rather intriguing result and
 

00:32:05.270 --> 00:32:08.930 align:start position:0%
this is the rather intriguing result and
the<00:32:06.270><c> reason</c><00:32:06.630><c> for</c><00:32:06.810><c> that</c><00:32:06.870><c> is</c><00:32:07.320><c> that</c><00:32:07.980><c> if</c><00:32:08.490><c> the</c><00:32:08.730><c> code</c>

00:32:08.930 --> 00:32:08.940 align:start position:0%
the reason for that is that if the code
 

00:32:08.940 --> 00:32:12.110 align:start position:0%
the reason for that is that if the code
is<00:32:08.970><c> not</c><00:32:09.330><c> profiled</c><00:32:10.110><c> that</c><00:32:10.520><c> most</c><00:32:11.520><c> likely</c><00:32:11.820><c> means</c>

00:32:12.110 --> 00:32:12.120 align:start position:0%
is not profiled that most likely means
 

00:32:12.120 --> 00:32:13.790 align:start position:0%
is not profiled that most likely means
that<00:32:12.600><c> it</c><00:32:12.750><c> might</c><00:32:13.080><c> not</c><00:32:13.230><c> have</c><00:32:13.470><c> ever</c><00:32:13.680><c> been</c>

00:32:13.790 --> 00:32:13.800 align:start position:0%
that it might not have ever been
 

00:32:13.800 --> 00:32:18.470 align:start position:0%
that it might not have ever been
executed<00:32:16.580><c> obviously</c><00:32:17.580><c> that's</c><00:32:17.760><c> it</c><00:32:18.000><c> for</c><00:32:18.270><c> a</c><00:32:18.300><c> good</c>

00:32:18.470 --> 00:32:18.480 align:start position:0%
executed obviously that's it for a good
 

00:32:18.480 --> 00:32:21.740 align:start position:0%
executed obviously that's it for a good
case<00:32:18.750><c> I</c><00:32:19.370><c> mean</c><00:32:20.370><c> the</c><00:32:20.550><c> code</c><00:32:20.760><c> for</c><00:32:20.940><c> example</c><00:32:21.030><c> can</c><00:32:21.600><c> be</c>

00:32:21.740 --> 00:32:21.750 align:start position:0%
case I mean the code for example can be
 

00:32:21.750 --> 00:32:24.800 align:start position:0%
case I mean the code for example can be
unexpected<00:32:22.440><c> error</c><00:32:22.680><c> code</c><00:32:23.040><c> pass</c><00:32:23.420><c> right</c><00:32:24.420><c> we</c><00:32:24.690><c> all</c>

00:32:24.800 --> 00:32:24.810 align:start position:0%
unexpected error code pass right we all
 

00:32:24.810 --> 00:32:26.780 align:start position:0%
unexpected error code pass right we all
want<00:32:25.080><c> the</c><00:32:25.200><c> applications</c><00:32:25.830><c> to</c><00:32:26.010><c> be</c><00:32:26.130><c> reliable</c><00:32:26.640><c> in</c>

00:32:26.780 --> 00:32:26.790 align:start position:0%
want the applications to be reliable in
 

00:32:26.790 --> 00:32:29.450 align:start position:0%
want the applications to be reliable in
a<00:32:26.820><c> robust</c><00:32:27.150><c> and</c><00:32:27.480><c> the</c><00:32:28.290><c> error</c><00:32:28.560><c> handling</c><00:32:28.980><c> must</c><00:32:29.310><c> be</c>

00:32:29.450 --> 00:32:29.460 align:start position:0%
a robust and the error handling must be
 

00:32:29.460 --> 00:32:32.780 align:start position:0%
a robust and the error handling must be
there<00:32:29.700><c> or</c><00:32:30.090><c> it</c><00:32:30.360><c> never</c><00:32:30.480><c> gets</c><00:32:30.690><c> executed</c><00:32:31.640><c> you</c><00:32:32.640><c> may</c>

00:32:32.780 --> 00:32:32.790 align:start position:0%
there or it never gets executed you may
 

00:32:32.790 --> 00:32:34.460 align:start position:0%
there or it never gets executed you may
have<00:32:33.000><c> backwards</c><00:32:33.480><c> compatibility</c><00:32:34.020><c> code</c>

00:32:34.460 --> 00:32:34.470 align:start position:0%
have backwards compatibility code
 

00:32:34.470 --> 00:32:37.640 align:start position:0%
have backwards compatibility code
support<00:32:35.310><c> for</c><00:32:35.490><c> previous</c><00:32:35.910><c> API</c><00:32:36.330><c> level</c><00:32:36.720><c> and</c><00:32:36.870><c> such</c>

00:32:37.640 --> 00:32:37.650 align:start position:0%
support for previous API level and such
 

00:32:37.650 --> 00:32:40.490 align:start position:0%
support for previous API level and such
you<00:32:38.460><c> may</c><00:32:38.610><c> have</c><00:32:38.790><c> features</c><00:32:39.270><c> which</c><00:32:39.840><c> are</c><00:32:40.050><c> not</c><00:32:40.230><c> used</c>

00:32:40.490 --> 00:32:40.500 align:start position:0%
you may have features which are not used
 

00:32:40.500 --> 00:32:43.730 align:start position:0%
you may have features which are not used
on<00:32:40.740><c> all</c><00:32:40.950><c> devices</c><00:32:41.130><c> may</c><00:32:41.610><c> have</c><00:32:41.790><c> very</c><00:32:42.740><c> features</c>

00:32:43.730 --> 00:32:43.740 align:start position:0%
on all devices may have very features
 

00:32:43.740 --> 00:32:47.060 align:start position:0%
on all devices may have very features
very<00:32:43.920><c> targeted</c><00:32:44.190><c> and</c><00:32:45.410><c> you</c><00:32:46.410><c> may</c><00:32:46.530><c> also</c><00:32:46.710><c> have</c><00:32:47.010><c> a</c>

00:32:47.060 --> 00:32:47.070 align:start position:0%
very targeted and you may also have a
 

00:32:47.070 --> 00:32:49.040 align:start position:0%
very targeted and you may also have a
lot<00:32:47.430><c> of</c><00:32:47.460><c> unnecessary</c><00:32:48.000><c> code</c><00:32:48.510><c> lying</c><00:32:48.810><c> around</c>

00:32:49.040 --> 00:32:49.050 align:start position:0%
lot of unnecessary code lying around
 

00:32:49.050 --> 00:32:51.200 align:start position:0%
lot of unnecessary code lying around
maybe<00:32:49.920><c> by</c><00:32:50.160><c> including</c><00:32:50.520><c> libraries</c><00:32:50.970><c> that</c><00:32:51.120><c> you</c>

00:32:51.200 --> 00:32:51.210 align:start position:0%
maybe by including libraries that you
 

00:32:51.210 --> 00:32:56.120 align:start position:0%
maybe by including libraries that you
don't<00:32:51.390><c> really</c><00:32:51.540><c> use</c><00:32:54.260><c> now</c><00:32:55.260><c> it's</c><00:32:55.470><c> a</c><00:32:55.590><c> bit</c><00:32:55.740><c> hard</c><00:32:56.040><c> to</c>

00:32:56.120 --> 00:32:56.130 align:start position:0%
don't really use now it's a bit hard to
 

00:32:56.130 --> 00:32:58.430 align:start position:0%
don't really use now it's a bit hard to
break<00:32:56.520><c> down</c><00:32:56.700><c> the</c><00:32:56.910><c> percentage</c><00:32:57.480><c> for</c><00:32:57.720><c> this</c><00:32:58.020><c> disk</c>

00:32:58.430 --> 00:32:58.440 align:start position:0%
break down the percentage for this disk
 

00:32:58.440 --> 00:32:59.600 align:start position:0%
break down the percentage for this disk
attacker<00:32:58.800><c> is</c><00:32:59.040><c> and</c><00:32:59.220><c> there</c><00:32:59.310><c> can</c><00:32:59.430><c> be</c><00:32:59.460><c> other</c>

00:32:59.600 --> 00:32:59.610 align:start position:0%
attacker is and there can be other
 

00:32:59.610 --> 00:33:02.340 align:start position:0%
attacker is and there can be other
reasons<00:33:00.240><c> why</c><00:33:00.510><c> we</c><00:33:00.810><c> didn't</c><00:33:01.110><c> profile</c><00:33:01.470><c> the</c><00:33:01.620><c> code</c>

00:33:02.340 --> 00:33:02.350 align:start position:0%
reasons why we didn't profile the code
 

00:33:02.350 --> 00:33:04.999 align:start position:0%
reasons why we didn't profile the code
but<00:33:02.710><c> the</c><00:33:02.860><c> skewed</c><00:33:03.250><c> distribution</c><00:33:04.000><c> here</c><00:33:04.389><c> is</c><00:33:04.539><c> a</c>

00:33:04.999 --> 00:33:05.009 align:start position:0%
but the skewed distribution here is a
 

00:33:05.009 --> 00:33:08.129 align:start position:0%
but the skewed distribution here is a
strong<00:33:06.009><c> indication</c><00:33:06.700><c> there</c><00:33:07.179><c> is</c><00:33:07.299><c> a</c><00:33:07.330><c> lot</c><00:33:07.690><c> of</c><00:33:07.870><c> room</c>

00:33:08.129 --> 00:33:08.139 align:start position:0%
strong indication there is a lot of room
 

00:33:08.139 --> 00:33:11.120 align:start position:0%
strong indication there is a lot of room
to<00:33:08.169><c> deal</c><00:33:08.590><c> true</c><00:33:08.919><c> of</c><00:33:09.070><c> improvement</c><00:33:09.850><c> for</c><00:33:10.240><c> a</c><00:33:10.299><c> decade</c>

00:33:11.120 --> 00:33:11.130 align:start position:0%
to deal true of improvement for a decade
 

00:33:11.130 --> 00:33:14.879 align:start position:0%
to deal true of improvement for a decade
the<00:33:12.130><c> code</c><00:33:12.429><c> can</c><00:33:12.700><c> be</c><00:33:12.730><c> reorganized</c><00:33:13.289><c> or</c><00:33:14.289><c> trim</c><00:33:14.649><c> down</c>

00:33:14.879 --> 00:33:14.889 align:start position:0%
the code can be reorganized or trim down
 

00:33:14.889 --> 00:33:18.899 align:start position:0%
the code can be reorganized or trim down
for<00:33:15.309><c> better</c><00:33:15.519><c> efficiency</c><00:33:17.309><c> for</c><00:33:18.309><c> example</c><00:33:18.759><c> Google</c>

00:33:18.899 --> 00:33:18.909 align:start position:0%
for better efficiency for example Google
 

00:33:18.909 --> 00:33:22.590 align:start position:0%
for better efficiency for example Google
Play<00:33:19.330><c> introduced</c><00:33:20.519><c> dynamic</c><00:33:21.519><c> delivery</c><00:33:21.820><c> schemes</c>

00:33:22.590 --> 00:33:22.600 align:start position:0%
Play introduced dynamic delivery schemes
 

00:33:22.600 --> 00:33:24.720 align:start position:0%
Play introduced dynamic delivery schemes
which<00:33:23.139><c> may</c><00:33:23.320><c> help</c><00:33:23.620><c> you</c><00:33:23.830><c> reduce</c><00:33:24.009><c> the</c><00:33:24.370><c> code</c><00:33:24.610><c> that</c>

00:33:24.720 --> 00:33:24.730 align:start position:0%
which may help you reduce the code that
 

00:33:24.730 --> 00:33:26.970 align:start position:0%
which may help you reduce the code that
you<00:33:24.909><c> share</c><00:33:25.210><c> by</c><00:33:25.419><c> targeting</c><00:33:25.960><c> features</c><00:33:26.440><c> only</c><00:33:26.679><c> to</c>

00:33:26.970 --> 00:33:26.980 align:start position:0%
you share by targeting features only to
 

00:33:26.980 --> 00:33:28.919 align:start position:0%
you share by targeting features only to
certain<00:33:27.669><c> users</c><00:33:27.700><c> and</c><00:33:28.210><c> that's</c><00:33:28.389><c> something</c><00:33:28.659><c> that</c>

00:33:28.919 --> 00:33:28.929 align:start position:0%
certain users and that's something that
 

00:33:28.929 --> 00:33:30.180 align:start position:0%
certain users and that's something that
you<00:33:28.990><c> might</c><00:33:29.139><c> want</c><00:33:29.200><c> to</c><00:33:29.440><c> look</c><00:33:29.649><c> at</c><00:33:29.830><c> and</c><00:33:30.039><c> take</c>

00:33:30.180 --> 00:33:30.190 align:start position:0%
you might want to look at and take
 

00:33:30.190 --> 00:33:35.850 align:start position:0%
you might want to look at and take
advantage<00:33:30.669><c> of</c><00:33:34.110><c> so</c><00:33:35.110><c> we</c><00:33:35.289><c> believe</c><00:33:35.470><c> that</c><00:33:35.679><c> the</c>

00:33:35.850 --> 00:33:35.860 align:start position:0%
advantage of so we believe that the
 

00:33:35.860 --> 00:33:37.919 align:start position:0%
advantage of so we believe that the
result<00:33:36.220><c> quite</c><00:33:36.610><c> a</c><00:33:36.669><c> bit</c><00:33:36.970><c> of</c><00:33:37.120><c> unnecessary</c><00:33:37.690><c> code</c>

00:33:37.919 --> 00:33:37.929 align:start position:0%
result quite a bit of unnecessary code
 

00:33:37.929 --> 00:33:42.200 align:start position:0%
result quite a bit of unnecessary code
lying<00:33:38.289><c> around</c><00:33:38.590><c> at</c><00:33:39.129><c> least</c><00:33:39.340><c> in</c><00:33:39.519><c> our</c><00:33:39.639><c> own</c><00:33:39.879><c> apks</c>

00:33:42.200 --> 00:33:42.210 align:start position:0%
lying around at least in our own apks
 

00:33:42.210 --> 00:33:44.909 align:start position:0%
lying around at least in our own apks
now<00:33:43.210><c> since</c><00:33:43.480><c> we</c><00:33:43.600><c> focus</c><00:33:43.990><c> on</c><00:33:44.139><c> the</c><00:33:44.289><c> proof</c><00:33:44.500><c> on</c><00:33:44.740><c> the</c>

00:33:44.909 --> 00:33:44.919 align:start position:0%
now since we focus on the proof on the
 

00:33:44.919 --> 00:33:46.549 align:start position:0%
now since we focus on the proof on the
code<00:33:45.129><c> that</c><00:33:45.250><c> actually</c><00:33:45.370><c> doesn't</c><00:33:45.879><c> get</c><00:33:46.000><c> profile</c>

00:33:46.549 --> 00:33:46.559 align:start position:0%
code that actually doesn't get profile
 

00:33:46.559 --> 00:33:48.899 align:start position:0%
code that actually doesn't get profile
is<00:33:47.559><c> there</c><00:33:47.799><c> anything</c><00:33:48.100><c> that</c><00:33:48.279><c> we</c><00:33:48.490><c> can</c><00:33:48.639><c> extract</c>

00:33:48.899 --> 00:33:48.909 align:start position:0%
is there anything that we can extract
 

00:33:48.909 --> 00:33:55.560 align:start position:0%
is there anything that we can extract
out<00:33:49.210><c> of</c><00:33:49.269><c> the</c><00:33:49.600><c> profile</c><00:33:50.049><c> code</c><00:33:54.120><c> to</c><00:33:55.120><c> understand</c>

00:33:55.560 --> 00:33:55.570 align:start position:0%
out of the profile code to understand
 

00:33:55.570 --> 00:33:58.470 align:start position:0%
out of the profile code to understand
this<00:33:55.750><c> let</c><00:33:56.200><c> me</c><00:33:56.320><c> talk</c><00:33:56.529><c> a</c><00:33:56.559><c> bit</c><00:33:57.240><c> about</c><00:33:58.240><c> different</c>

00:33:58.470 --> 00:33:58.480 align:start position:0%
this let me talk a bit about different
 

00:33:58.480 --> 00:34:02.970 align:start position:0%
this let me talk a bit about different
categories<00:33:59.259><c> of</c><00:33:59.289><c> profile</c><00:33:59.919><c> code</c><00:34:01.889><c> when</c><00:34:02.889><c> the</c>

00:34:02.970 --> 00:34:02.980 align:start position:0%
categories of profile code when the
 

00:34:02.980 --> 00:34:04.710 align:start position:0%
categories of profile code when the
application<00:34:03.460><c> code</c><00:34:03.639><c> is</c><00:34:03.789><c> being</c><00:34:03.940><c> profiled</c><00:34:04.450><c> the</c>

00:34:04.710 --> 00:34:04.720 align:start position:0%
application code is being profiled the
 

00:34:04.720 --> 00:34:06.840 align:start position:0%
application code is being profiled the
runtime<00:34:05.200><c> will</c><00:34:05.440><c> try</c><00:34:05.649><c> to</c><00:34:05.710><c> label</c><00:34:06.070><c> it</c><00:34:06.429><c> depending</c>

00:34:06.840 --> 00:34:06.850 align:start position:0%
runtime will try to label it depending
 

00:34:06.850 --> 00:34:09.119 align:start position:0%
runtime will try to label it depending
on<00:34:06.970><c> its</c><00:34:07.120><c> stage</c><00:34:07.360><c> and</c><00:34:07.720><c> you</c><00:34:08.470><c> will</c><00:34:08.589><c> have</c><00:34:08.770><c> a</c><00:34:08.800><c> label</c>

00:34:09.119 --> 00:34:09.129 align:start position:0%
on its stage and you will have a label
 

00:34:09.129 --> 00:34:11.579 align:start position:0%
on its stage and you will have a label
for<00:34:09.339><c> the</c><00:34:09.730><c> startup</c><00:34:10.119><c> category</c><00:34:10.690><c> for</c><00:34:11.260><c> the</c><00:34:11.349><c> post</c>

00:34:11.579 --> 00:34:11.589 align:start position:0%
for the startup category for the post
 

00:34:11.589 --> 00:34:13.470 align:start position:0%
for the startup category for the post
startup<00:34:11.950><c> Pat</c><00:34:12.099><c> aghori</c><00:34:12.429><c> and</c><00:34:12.669><c> for</c><00:34:13.149><c> the</c><00:34:13.240><c> hot</c>

00:34:13.470 --> 00:34:13.480 align:start position:0%
startup Pat aghori and for the hot
 

00:34:13.480 --> 00:34:15.540 align:start position:0%
startup Pat aghori and for the hot
category<00:34:13.889><c> obviously</c><00:34:14.889><c> these</c><00:34:15.010><c> are</c><00:34:15.190><c> pretty</c>

00:34:15.540 --> 00:34:15.550 align:start position:0%
category obviously these are pretty
 

00:34:15.550 --> 00:34:16.460 align:start position:0%
category obviously these are pretty
self-explanatory

00:34:16.460 --> 00:34:16.470 align:start position:0%
self-explanatory
 

00:34:16.470 --> 00:34:18.869 align:start position:0%
self-explanatory
the<00:34:17.470><c> hot</c><00:34:17.710><c> category</c><00:34:18.250><c> of</c><00:34:18.369><c> the</c><00:34:18.490><c> code</c><00:34:18.700><c> is</c>

00:34:18.869 --> 00:34:18.879 align:start position:0%
the hot category of the code is
 

00:34:18.879 --> 00:34:21.270 align:start position:0%
the hot category of the code is
essentially<00:34:19.329><c> what</c><00:34:19.450><c> the</c><00:34:19.569><c> runtimes</c><00:34:20.079><c> in</c><00:34:20.619><c> to</c><00:34:21.159><c> be</c>

00:34:21.270 --> 00:34:21.280 align:start position:0%
essentially what the runtimes in to be
 

00:34:21.280 --> 00:34:25.040 align:start position:0%
essentially what the runtimes in to be
the<00:34:21.399><c> most</c><00:34:21.639><c> important</c><00:34:22.210><c> part</c><00:34:22.419><c> of</c><00:34:22.569><c> your</c><00:34:22.629><c> code</c>

00:34:25.040 --> 00:34:25.050 align:start position:0%
 
 

00:34:25.050 --> 00:34:28.109 align:start position:0%
 
it's<00:34:26.050><c> important</c><00:34:26.589><c> to</c><00:34:26.740><c> keep</c><00:34:26.889><c> in</c><00:34:27.040><c> mind</c><00:34:27.119><c> that</c>

00:34:28.109 --> 00:34:28.119 align:start position:0%
it's important to keep in mind that
 

00:34:28.119 --> 00:34:30.419 align:start position:0%
it's important to keep in mind that
these<00:34:28.270><c> are</c><00:34:28.450><c> not</c><00:34:28.599><c> is</c><00:34:28.780><c> joined</c><00:34:29.139><c> say</c><00:34:29.740><c> for</c><00:34:29.950><c> example</c>

00:34:30.419 --> 00:34:30.429 align:start position:0%
these are not is joined say for example
 

00:34:30.429 --> 00:34:32.280 align:start position:0%
these are not is joined say for example
that<00:34:30.460><c> a</c><00:34:30.639><c> method</c><00:34:31.000><c> foo</c><00:34:31.240><c> is</c><00:34:31.359><c> being</c><00:34:31.629><c> executed</c>

00:34:32.280 --> 00:34:32.290 align:start position:0%
that a method foo is being executed
 

00:34:32.290 --> 00:34:34.829 align:start position:0%
that a method foo is being executed
this<00:34:32.919><c> can</c><00:34:33.099><c> be</c><00:34:33.250><c> executing</c><00:34:33.700><c> early</c><00:34:33.909><c> startup</c><00:34:34.359><c> can</c>

00:34:34.829 --> 00:34:34.839 align:start position:0%
this can be executing early startup can
 

00:34:34.839 --> 00:34:36.599 align:start position:0%
this can be executing early startup can
be<00:34:34.929><c> executing</c><00:34:35.379><c> during</c><00:34:35.679><c> post</c><00:34:35.980><c> sort</c><00:34:36.220><c> of</c><00:34:36.369><c> time</c>

00:34:36.599 --> 00:34:36.609 align:start position:0%
be executing during post sort of time
 

00:34:36.609 --> 00:34:39.240 align:start position:0%
be executing during post sort of time
and<00:34:36.879><c> can</c><00:34:37.389><c> also</c><00:34:37.569><c> be</c><00:34:37.869><c> marked</c><00:34:38.379><c> as</c><00:34:38.619><c> hot</c><00:34:38.859><c> for</c>

00:34:39.240 --> 00:34:39.250 align:start position:0%
and can also be marked as hot for
 

00:34:39.250 --> 00:34:40.680 align:start position:0%
and can also be marked as hot for
example<00:34:39.700><c> if</c><00:34:39.790><c> you</c><00:34:39.909><c> have</c><00:34:40.119><c> a</c><00:34:40.149><c> very</c><00:34:40.480><c> heavy</c>

00:34:40.680 --> 00:34:40.690 align:start position:0%
example if you have a very heavy
 

00:34:40.690 --> 00:34:45.359 align:start position:0%
example if you have a very heavy
computation<00:34:41.440><c> during</c><00:34:41.679><c> that</c><00:34:41.919><c> method</c><00:34:44.220><c> now</c><00:34:45.220><c> if</c>

00:34:45.359 --> 00:34:45.369 align:start position:0%
computation during that method now if
 

00:34:45.369 --> 00:34:46.919 align:start position:0%
computation during that method now if
you<00:34:45.520><c> know</c><00:34:45.669><c> the</c><00:34:45.849><c> code</c><00:34:46.060><c> which</c><00:34:46.240><c> is</c><00:34:46.359><c> executing</c><00:34:46.839><c> to</c>

00:34:46.919 --> 00:34:46.929 align:start position:0%
you know the code which is executing to
 

00:34:46.929 --> 00:34:48.839 align:start position:0%
you know the code which is executing to
the<00:34:47.020><c> in</c><00:34:47.079><c> startup</c><00:34:47.500><c> time</c><00:34:47.740><c> if</c><00:34:47.980><c> you</c><00:34:48.099><c> focus</c><00:34:48.460><c> on</c><00:34:48.579><c> that</c>

00:34:48.839 --> 00:34:48.849 align:start position:0%
the in startup time if you focus on that
 

00:34:48.849 --> 00:34:51.300 align:start position:0%
the in startup time if you focus on that
you'll<00:34:49.149><c> be</c><00:34:49.359><c> able</c><00:34:49.419><c> to</c><00:34:49.839><c> lower</c><00:34:50.349><c> the</c><00:34:50.530><c> startup</c><00:34:51.099><c> time</c>

00:34:51.300 --> 00:34:51.310 align:start position:0%
you'll be able to lower the startup time
 

00:34:51.310 --> 00:34:53.639 align:start position:0%
you'll be able to lower the startup time
of<00:34:51.429><c> the</c><00:34:51.550><c> application</c><00:34:51.929><c> as</c><00:34:52.929><c> such</c><00:34:53.200><c> the</c><00:34:53.409><c> first</c>

00:34:53.639 --> 00:34:53.649 align:start position:0%
of the application as such the first
 

00:34:53.649 --> 00:34:55.589 align:start position:0%
of the application as such the first
impression<00:34:54.280><c> that</c><00:34:54.310><c> the</c><00:34:54.460><c> users</c><00:34:54.849><c> will</c><00:34:55.119><c> have</c><00:34:55.329><c> upon</c>

00:34:55.589 --> 00:34:55.599 align:start position:0%
impression that the users will have upon
 

00:34:55.599 --> 00:35:00.180 align:start position:0%
impression that the users will have upon
your<00:34:55.780><c> application</c><00:34:55.839><c> will</c><00:34:56.349><c> be</c><00:34:56.470><c> very</c><00:34:56.740><c> good</c><00:34:59.190><c> if</c>

00:35:00.180 --> 00:35:00.190 align:start position:0%
your application will be very good if
 

00:35:00.190 --> 00:35:02.730 align:start position:0%
your application will be very good if
you<00:35:00.250><c> look</c><00:35:00.520><c> at</c><00:35:00.640><c> the</c><00:35:00.730><c> post</c><00:35:01.000><c> startup</c><00:35:01.420><c> code</c><00:35:01.740><c> it</c>

00:35:02.730 --> 00:35:02.740 align:start position:0%
you look at the post startup code it
 

00:35:02.740 --> 00:35:05.520 align:start position:0%
you look at the post startup code it
will<00:35:02.890><c> help</c><00:35:03.220><c> you</c><00:35:03.400><c> for</c><00:35:03.609><c> example</c><00:35:03.880><c> layout</c><00:35:04.530><c> the</c>

00:35:05.520 --> 00:35:05.530 align:start position:0%
will help you for example layout the
 

00:35:05.530 --> 00:35:07.950 align:start position:0%
will help you for example layout the
application<00:35:06.099><c> text</c><00:35:06.460><c> by</c><00:35:06.670><c> code</c><00:35:06.910><c> that</c><00:35:07.599><c> will</c><00:35:07.750><c> lead</c>

00:35:07.950 --> 00:35:07.960 align:start position:0%
application text by code that will lead
 

00:35:07.960 --> 00:35:10.920 align:start position:0%
application text by code that will lead
to<00:35:07.990><c> memory</c><00:35:08.410><c> improvements</c><00:35:09.310><c> and</c><00:35:09.730><c> will</c><00:35:10.510><c> be</c><00:35:10.720><c> much</c>

00:35:10.920 --> 00:35:10.930 align:start position:0%
to memory improvements and will be much
 

00:35:10.930 --> 00:35:16.080 align:start position:0%
to memory improvements and will be much
smoother<00:35:11.260><c> on</c><00:35:11.500><c> low-end</c><00:35:11.859><c> devices</c>

00:35:16.080 --> 00:35:16.090 align:start position:0%
 
 

00:35:16.090 --> 00:35:19.540 align:start position:0%
 
as<00:35:17.090><c> for</c><00:35:17.390><c> the</c><00:35:17.510><c> hot</c><00:35:17.720><c> code</c><00:35:18.130><c> this</c><00:35:19.130><c> is</c><00:35:19.370><c> the</c><00:35:19.400><c> code</c>

00:35:19.540 --> 00:35:19.550 align:start position:0%
as for the hot code this is the code
 

00:35:19.550 --> 00:35:21.610 align:start position:0%
as for the hot code this is the code
that<00:35:19.790><c> should</c><00:35:20.270><c> get</c><00:35:20.420><c> the</c><00:35:20.570><c> most</c><00:35:20.810><c> attention</c><00:35:21.230><c> for</c>

00:35:21.610 --> 00:35:21.620 align:start position:0%
that should get the most attention for
 

00:35:21.620 --> 00:35:23.970 align:start position:0%
that should get the most attention for
your<00:35:21.740><c> optimization</c><00:35:22.550><c> efforts</c>

00:35:23.970 --> 00:35:23.980 align:start position:0%
your optimization efforts
 

00:35:23.980 --> 00:35:27.550 align:start position:0%
your optimization efforts
it's<00:35:24.980><c> the</c><00:35:25.220><c> code</c><00:35:25.460><c> that</c><00:35:25.640><c> is</c><00:35:25.970><c> most</c><00:35:26.630><c> heavily</c>

00:35:27.550 --> 00:35:27.560 align:start position:0%
it's the code that is most heavily
 

00:35:27.560 --> 00:35:29.680 align:start position:0%
it's the code that is most heavily
optimized<00:35:28.130><c> by</c><00:35:28.310><c> the</c><00:35:28.370><c> runtime</c><00:35:28.700><c> and</c><00:35:29.240><c> it</c><00:35:29.480><c> might</c><00:35:29.660><c> be</c>

00:35:29.680 --> 00:35:29.690 align:start position:0%
optimized by the runtime and it might be
 

00:35:29.690 --> 00:35:32.350 align:start position:0%
optimized by the runtime and it might be
so<00:35:30.080><c> because</c><00:35:30.410><c> the</c><00:35:30.770><c> runtime</c><00:35:31.130><c> identified</c><00:35:31.820><c> that</c>

00:35:32.350 --> 00:35:32.360 align:start position:0%
so because the runtime identified that
 

00:35:32.360 --> 00:35:34.510 align:start position:0%
so because the runtime identified that
it<00:35:32.510><c> is</c><00:35:32.630><c> very</c><00:35:32.960><c> beneficial</c><00:35:33.200><c> to</c><00:35:33.920><c> invest</c><00:35:34.310><c> time</c>

00:35:34.510 --> 00:35:34.520 align:start position:0%
it is very beneficial to invest time
 

00:35:34.520 --> 00:35:38.140 align:start position:0%
it is very beneficial to invest time
there<00:35:35.110><c> and</c><00:35:36.110><c> it's</c><00:35:36.920><c> what</c><00:35:37.130><c> if</c><00:35:37.370><c> you</c><00:35:37.520><c> for</c><00:35:37.790><c> example</c>

00:35:38.140 --> 00:35:38.150 align:start position:0%
there and it's what if you for example
 

00:35:38.150 --> 00:35:40.240 align:start position:0%
there and it's what if you for example
start<00:35:38.420><c> to</c><00:35:38.660><c> it</c><00:35:38.780><c> try</c><00:35:39.620><c> to</c><00:35:39.680><c> improve</c><00:35:40.040><c> the</c><00:35:40.220><c> quality</c>

00:35:40.240 --> 00:35:40.250 align:start position:0%
start to it try to improve the quality
 

00:35:40.250 --> 00:35:41.890 align:start position:0%
start to it try to improve the quality
and<00:35:40.760><c> the</c><00:35:40.820><c> performance</c><00:35:40.940><c> of</c><00:35:41.390><c> your</c><00:35:41.540><c> app</c><00:35:41.660><c> this</c><00:35:41.840><c> is</c>

00:35:41.890 --> 00:35:41.900 align:start position:0%
and the performance of your app this is
 

00:35:41.900 --> 00:35:43.960 align:start position:0%
and the performance of your app this is
where<00:35:42.200><c> you</c><00:35:42.290><c> should</c><00:35:42.470><c> spend</c><00:35:43.250><c> your</c><00:35:43.400><c> effort</c><00:35:43.580><c> or</c>

00:35:43.960 --> 00:35:43.970 align:start position:0%
where you should spend your effort or
 

00:35:43.970 --> 00:35:47.290 align:start position:0%
where you should spend your effort or
your<00:35:44.090><c> initial</c><00:35:44.330><c> effort</c><00:35:45.790><c> now</c><00:35:46.790><c> for</c><00:35:47.000><c> this</c><00:35:47.150><c> is</c>

00:35:47.290 --> 00:35:47.300 align:start position:0%
your initial effort now for this is
 

00:35:47.300 --> 00:35:49.030 align:start position:0%
your initial effort now for this is
important<00:35:47.810><c> like</c><00:35:47.900><c> how</c><00:35:48.110><c> much</c><00:35:48.290><c> code</c><00:35:48.620><c> of</c><00:35:48.890><c> your</c>

00:35:49.030 --> 00:35:49.040 align:start position:0%
important like how much code of your
 

00:35:49.040 --> 00:35:50.680 align:start position:0%
important like how much code of your
applications<00:35:49.580><c> actually</c><00:35:49.790><c> being</c><00:35:50.210><c> marked</c><00:35:50.570><c> as</c>

00:35:50.680 --> 00:35:50.690 align:start position:0%
applications actually being marked as
 

00:35:50.690 --> 00:35:53.770 align:start position:0%
applications actually being marked as
hot<00:35:50.930><c> because</c><00:35:51.530><c> if</c><00:35:52.100><c> everything</c><00:35:52.730><c> is</c><00:35:52.880><c> hot</c><00:35:53.120><c> then</c>

00:35:53.770 --> 00:35:53.780 align:start position:0%
hot because if everything is hot then
 

00:35:53.780 --> 00:35:55.540 align:start position:0%
hot because if everything is hot then
everything<00:35:54.440><c> can</c><00:35:54.560><c> be</c><00:35:54.710><c> optimized</c><00:35:55.100><c> so</c><00:35:55.310><c> that's</c>

00:35:55.540 --> 00:35:55.550 align:start position:0%
everything can be optimized so that's
 

00:35:55.550 --> 00:36:01.090 align:start position:0%
everything can be optimized so that's
not<00:35:56.090><c> really</c><00:35:56.330><c> not</c><00:35:57.230><c> really</c><00:35:57.500><c> useful</c><00:35:59.740><c> let</c><00:36:00.740><c> me</c><00:36:00.890><c> show</c>

00:36:01.090 --> 00:36:01.100 align:start position:0%
not really not really useful let me show
 

00:36:01.100 --> 00:36:02.950 align:start position:0%
not really not really useful let me show
you<00:36:01.160><c> the</c><00:36:01.400><c> breakdown</c><00:36:01.730><c> of</c><00:36:02.210><c> these</c><00:36:02.690><c> three</c>

00:36:02.950 --> 00:36:02.960 align:start position:0%
you the breakdown of these three
 

00:36:02.960 --> 00:36:08.500 align:start position:0%
you the breakdown of these three
categories<00:36:03.110><c> in</c><00:36:05.380><c> this</c><00:36:06.380><c> graph</c><00:36:06.730><c> you</c><00:36:07.730><c> can</c><00:36:07.910><c> see</c><00:36:07.970><c> on</c>

00:36:08.500 --> 00:36:08.510 align:start position:0%
categories in this graph you can see on
 

00:36:08.510 --> 00:36:11.530 align:start position:0%
categories in this graph you can see on
the<00:36:08.960><c> red</c><00:36:09.140><c> columns</c><00:36:09.590><c> the</c><00:36:10.400><c> percentages</c><00:36:11.180><c> for</c><00:36:11.390><c> the</c>

00:36:11.530 --> 00:36:11.540 align:start position:0%
the red columns the percentages for the
 

00:36:11.540 --> 00:36:13.720 align:start position:0%
the red columns the percentages for the
profile<00:36:11.960><c> code</c><00:36:12.230><c> and</c><00:36:12.560><c> the</c><00:36:12.710><c> knot</c><00:36:12.890><c> profile</c><00:36:13.400><c> code</c>

00:36:13.720 --> 00:36:13.730 align:start position:0%
profile code and the knot profile code
 

00:36:13.730 --> 00:36:16.660 align:start position:0%
profile code and the knot profile code
this<00:36:14.480><c> will</c><00:36:14.660><c> sum</c><00:36:14.930><c> up</c><00:36:14.960><c> to</c><00:36:15.320><c> 100%</c><00:36:15.830><c> and</c><00:36:16.340><c> it's</c><00:36:16.490><c> what</c><00:36:16.640><c> I</c>

00:36:16.660 --> 00:36:16.670 align:start position:0%
this will sum up to 100% and it's what I
 

00:36:16.670 --> 00:36:18.790 align:start position:0%
this will sum up to 100% and it's what I
showed<00:36:17.000><c> you</c><00:36:17.150><c> earlier</c><00:36:17.230><c> they</c><00:36:18.230><c> are</c><00:36:18.320><c> here</c><00:36:18.560><c> just</c>

00:36:18.790 --> 00:36:18.800 align:start position:0%
showed you earlier they are here just
 

00:36:18.800 --> 00:36:22.180 align:start position:0%
showed you earlier they are here just
for<00:36:19.010><c> the</c><00:36:19.160><c> reference</c><00:36:19.960><c> the</c><00:36:20.960><c> blue</c><00:36:21.200><c> boxes</c><00:36:21.680><c> show</c>

00:36:22.180 --> 00:36:22.190 align:start position:0%
for the reference the blue boxes show
 

00:36:22.190 --> 00:36:24.640 align:start position:0%
for the reference the blue boxes show
the<00:36:22.370><c> percentages</c><00:36:23.210><c> of</c><00:36:23.270><c> the</c><00:36:23.600><c> startup</c><00:36:24.170><c> code</c><00:36:24.380><c> the</c>

00:36:24.640 --> 00:36:24.650 align:start position:0%
the percentages of the startup code the
 

00:36:24.650 --> 00:36:26.550 align:start position:0%
the percentages of the startup code the
post<00:36:24.890><c> startup</c><00:36:25.280><c> code</c><00:36:25.490><c> and</c><00:36:25.820><c> the</c><00:36:25.910><c> hot</c><00:36:26.150><c> one</c>

00:36:26.550 --> 00:36:26.560 align:start position:0%
post startup code and the hot one
 

00:36:26.560 --> 00:36:29.830 align:start position:0%
post startup code and the hot one
relative<00:36:27.560><c> to</c><00:36:27.590><c> the</c><00:36:27.800><c> total</c><00:36:28.160><c> text</c><00:36:28.700><c> by</c><00:36:28.910><c> code</c><00:36:29.270><c> so</c>

00:36:29.830 --> 00:36:29.840 align:start position:0%
relative to the total text by code so
 

00:36:29.840 --> 00:36:34.240 align:start position:0%
relative to the total text by code so
don't<00:36:29.870><c> expect</c><00:36:30.260><c> it</c><00:36:30.650><c> to</c><00:36:30.680><c> add</c><00:36:30.890><c> 100%</c><00:36:32.500><c> also</c><00:36:33.500><c> one</c><00:36:33.710><c> but</c>

00:36:34.240 --> 00:36:34.250 align:start position:0%
don't expect it to add 100% also one but
 

00:36:34.250 --> 00:36:35.860 align:start position:0%
don't expect it to add 100% also one but
one<00:36:34.610><c> piece</c><00:36:34.790><c> of</c><00:36:34.970><c> code</c><00:36:35.210><c> can</c><00:36:35.390><c> be</c><00:36:35.450><c> in</c><00:36:35.690><c> different</c>

00:36:35.860 --> 00:36:35.870 align:start position:0%
one piece of code can be in different
 

00:36:35.870 --> 00:36:39.880 align:start position:0%
one piece of code can be in different
categories<00:36:36.290><c> at</c><00:36:36.770><c> the</c><00:36:36.860><c> same</c><00:36:37.040><c> time</c><00:36:38.590><c> as</c><00:36:39.590><c> you</c><00:36:39.740><c> can</c>

00:36:39.880 --> 00:36:39.890 align:start position:0%
categories at the same time as you can
 

00:36:39.890 --> 00:36:43.230 align:start position:0%
categories at the same time as you can
see<00:36:40.070><c> here</c><00:36:40.370><c> the</c><00:36:40.550><c> average</c><00:36:40.960><c> on</c><00:36:41.960><c> average</c><00:36:42.470><c> about</c>

00:36:43.230 --> 00:36:43.240 align:start position:0%
see here the average on average about
 

00:36:43.240 --> 00:36:46.180 align:start position:0%
see here the average on average about
10%<00:36:44.240><c> of</c><00:36:44.360><c> the</c><00:36:44.540><c> application</c><00:36:45.110><c> Dex</c><00:36:45.380><c> by</c><00:36:45.650><c> code</c><00:36:45.920><c> is</c>

00:36:46.180 --> 00:36:46.190 align:start position:0%
10% of the application Dex by code is
 

00:36:46.190 --> 00:36:49.510 align:start position:0%
10% of the application Dex by code is
being<00:36:46.460><c> marked</c><00:36:46.850><c> as</c><00:36:46.970><c> hot</c><00:36:47.240><c> and</c><00:36:47.860><c> this</c><00:36:48.860><c> indicates</c>

00:36:49.510 --> 00:36:49.520 align:start position:0%
being marked as hot and this indicates
 

00:36:49.520 --> 00:36:51.580 align:start position:0%
being marked as hot and this indicates
that<00:36:49.880><c> when</c><00:36:50.690><c> you</c><00:36:50.780><c> focus</c><00:36:51.020><c> on</c><00:36:51.320><c> your</c><00:36:51.470><c> app</c>

00:36:51.580 --> 00:36:51.590 align:start position:0%
that when you focus on your app
 

00:36:51.590 --> 00:36:54.370 align:start position:0%
that when you focus on your app
optimizations<00:36:52.520><c> you</c><00:36:52.810><c> can</c><00:36:53.810><c> dedicate</c><00:36:54.260><c> the</c>

00:36:54.370 --> 00:36:54.380 align:start position:0%
optimizations you can dedicate the
 

00:36:54.380 --> 00:36:56.320 align:start position:0%
optimizations you can dedicate the
attentional<00:36:54.860><c> starting</c><00:36:55.550><c> with</c><00:36:55.670><c> just</c><00:36:55.910><c> a</c><00:36:56.030><c> small</c>

00:36:56.320 --> 00:36:56.330 align:start position:0%
attentional starting with just a small
 

00:36:56.330 --> 00:36:58.650 align:start position:0%
attentional starting with just a small
part<00:36:56.690><c> of</c><00:36:56.900><c> your</c><00:36:57.050><c> application</c><00:36:57.200><c> code</c><00:36:57.800><c> base</c><00:36:58.070><c> you</c>

00:36:58.650 --> 00:36:58.660 align:start position:0%
part of your application code base you
 

00:36:58.660 --> 00:37:01.510 align:start position:0%
part of your application code base you
can<00:36:59.660><c> obviously</c><00:37:00.020><c> spend</c><00:37:00.530><c> time</c><00:37:00.740><c> with</c><00:37:00.920><c> all</c><00:37:01.220><c> the</c>

00:37:01.510 --> 00:37:01.520 align:start position:0%
can obviously spend time with all the
 

00:37:01.520 --> 00:37:04.060 align:start position:0%
can obviously spend time with all the
other<00:37:01.550><c> partners</c><00:37:01.970><c> world</c><00:37:02.530><c> but</c><00:37:03.530><c> probably</c><00:37:03.920><c> this</c>

00:37:04.060 --> 00:37:04.070 align:start position:0%
other partners world but probably this
 

00:37:04.070 --> 00:37:07.510 align:start position:0%
other partners world but probably this
is<00:37:04.130><c> where</c><00:37:04.460><c> you</c><00:37:04.580><c> should</c><00:37:04.790><c> start</c><00:37:05.000><c> from</c><00:37:06.160><c> let</c><00:37:07.160><c> me</c><00:37:07.340><c> go</c>

00:37:07.510 --> 00:37:07.520 align:start position:0%
is where you should start from let me go
 

00:37:07.520 --> 00:37:09.400 align:start position:0%
is where you should start from let me go
over<00:37:07.670><c> a</c><00:37:07.880><c> quick</c><00:37:08.060><c> review</c><00:37:08.480><c> of</c><00:37:08.570><c> what</c><00:37:08.660><c> we</c><00:37:09.050><c> presented</c>

00:37:09.400 --> 00:37:09.410 align:start position:0%
over a quick review of what we presented
 

00:37:09.410 --> 00:37:14.710 align:start position:0%
over a quick review of what we presented
today<00:37:09.710><c> and</c><00:37:10.300><c> the</c><00:37:11.300><c> main</c><00:37:11.510><c> benefits</c><00:37:13.300><c> we</c><00:37:14.300><c> started</c>

00:37:14.710 --> 00:37:14.720 align:start position:0%
today and the main benefits we started
 

00:37:14.720 --> 00:37:17.110 align:start position:0%
today and the main benefits we started
with<00:37:14.900><c> Courtland</c><00:37:15.470><c> and</c><00:37:16.190><c> we</c><00:37:16.310><c> described</c><00:37:16.700><c> a</c><00:37:16.730><c> few</c>

00:37:17.110 --> 00:37:17.120 align:start position:0%
with Courtland and we described a few
 

00:37:17.120 --> 00:37:19.240 align:start position:0%
with Courtland and we described a few
new<00:37:17.330><c> compiler</c><00:37:17.690><c> optimizations</c><00:37:18.560><c> that</c><00:37:18.620><c> we</c><00:37:18.800><c> added</c>

00:37:19.240 --> 00:37:19.250 align:start position:0%
new compiler optimizations that we added
 

00:37:19.250 --> 00:37:22.750 align:start position:0%
new compiler optimizations that we added
that<00:37:19.400><c> focus</c><00:37:19.880><c> on</c><00:37:20.060><c> coding</c><00:37:20.510><c> performance</c><00:37:21.760><c> we</c>

00:37:22.750 --> 00:37:22.760 align:start position:0%
that focus on coding performance we
 

00:37:22.760 --> 00:37:25.810 align:start position:0%
that focus on coding performance we
describe<00:37:23.210><c> briefly</c><00:37:23.570><c> how</c><00:37:24.200><c> we</c><00:37:24.410><c> approach</c><00:37:24.820><c> costing</c>

00:37:25.810 --> 00:37:25.820 align:start position:0%
describe briefly how we approach costing
 

00:37:25.820 --> 00:37:26.900 align:start position:0%
describe briefly how we approach costing
optimizations

00:37:26.900 --> 00:37:26.910 align:start position:0%
optimizations
 

00:37:26.910 --> 00:37:28.549 align:start position:0%
optimizations
and<00:37:27.059><c> that</c><00:37:27.299><c> we</c><00:37:27.450><c> first</c><00:37:27.779><c> tried</c><00:37:28.109><c> to</c><00:37:28.140><c> seek</c>

00:37:28.549 --> 00:37:28.559 align:start position:0%
and that we first tried to seek
 

00:37:28.559 --> 00:37:33.829 align:start position:0%
and that we first tried to seek
improvement<00:37:28.890><c> in</c><00:37:29.309><c> the</c><00:37:29.430><c> cotton</c><00:37:29.789><c> compiler</c><00:37:32.839><c> we</c>

00:37:33.829 --> 00:37:33.839 align:start position:0%
improvement in the cotton compiler we
 

00:37:33.839 --> 00:37:34.880 align:start position:0%
improvement in the cotton compiler we
moved<00:37:34.079><c> to</c><00:37:34.200><c> memory</c><00:37:34.529><c> and</c><00:37:34.710><c> storage</c>

00:37:34.880 --> 00:37:34.890 align:start position:0%
moved to memory and storage
 

00:37:34.890 --> 00:37:37.640 align:start position:0%
moved to memory and storage
optimizations<00:37:35.789><c> and</c><00:37:36.690><c> my</c><00:37:36.869><c> colleague</c><00:37:37.140><c> mattress</c>

00:37:37.640 --> 00:37:37.650 align:start position:0%
optimizations and my colleague mattress
 

00:37:37.650 --> 00:37:39.529 align:start position:0%
optimizations and my colleague mattress
introduced<00:37:38.220><c> you</c><00:37:38.339><c> to</c><00:37:38.460><c> the</c><00:37:38.549><c> concept</c><00:37:38.579><c> of</c><00:37:39.029><c> compact</c>

00:37:39.529 --> 00:37:39.539 align:start position:0%
introduced you to the concept of compact
 

00:37:39.539 --> 00:37:43.220 align:start position:0%
introduced you to the concept of compact
X<00:37:40.579><c> this</c><00:37:41.579><c> is</c><00:37:41.759><c> a</c><00:37:41.789><c> new</c><00:37:41.970><c> text</c><00:37:42.299><c> format</c><00:37:42.720><c> available</c>

00:37:43.220 --> 00:37:43.230 align:start position:0%
X this is a new text format available
 

00:37:43.230 --> 00:37:46.220 align:start position:0%
X this is a new text format available
just<00:37:43.500><c> own</c><00:37:43.710><c> device</c><00:37:44.099><c> and</c><00:37:44.569><c> we</c><00:37:45.569><c> will</c><00:37:45.599><c> talk</c><00:37:45.960><c> which</c>

00:37:46.220 --> 00:37:46.230 align:start position:0%
just own device and we will talk which
 

00:37:46.230 --> 00:37:51.009 align:start position:0%
just own device and we will talk which
focuses<00:37:46.769><c> on</c><00:37:46.980><c> the</c><00:37:47.670><c> memory</c><00:37:47.970><c> savings</c><00:37:48.509><c> and</c>

00:37:51.009 --> 00:37:51.019 align:start position:0%
focuses on the memory savings and
 

00:37:51.019 --> 00:37:54.230 align:start position:0%
focuses on the memory savings and
finally<00:37:52.019><c> I</c><00:37:52.230><c> presented</c><00:37:53.220><c> you</c><00:37:53.519><c> the</c><00:37:53.579><c> idea</c><00:37:54.059><c> of</c>

00:37:54.230 --> 00:37:54.240 align:start position:0%
finally I presented you the idea of
 

00:37:54.240 --> 00:37:57.380 align:start position:0%
finally I presented you the idea of
cloud<00:37:54.480><c> profiles</c><00:37:55.140><c> and</c><00:37:55.759><c> we</c><00:37:56.759><c> talked</c><00:37:56.940><c> about</c><00:37:57.059><c> how</c>

00:37:57.380 --> 00:37:57.390 align:start position:0%
cloud profiles and we talked about how
 

00:37:57.390 --> 00:38:00.019 align:start position:0%
cloud profiles and we talked about how
we<00:37:57.450><c> can</c><00:37:57.690><c> bootstrap</c><00:37:58.349><c> the</c><00:37:59.069><c> profile</c><00:37:59.609><c> guided</c>

00:38:00.019 --> 00:38:00.029 align:start position:0%
we can bootstrap the profile guided
 

00:38:00.029 --> 00:38:03.049 align:start position:0%
we can bootstrap the profile guided
optimizations<00:38:00.980><c> using</c><00:38:01.980><c> a</c><00:38:02.099><c> small</c><00:38:02.400><c> percentage</c>

00:38:03.049 --> 00:38:03.059 align:start position:0%
optimizations using a small percentage
 

00:38:03.059 --> 00:38:06.170 align:start position:0%
optimizations using a small percentage
of<00:38:03.240><c> alpha</c><00:38:03.630><c> beta</c><00:38:03.809><c> channel</c><00:38:04.289><c> users</c><00:38:04.680><c> in</c><00:38:05.609><c> order</c><00:38:06.000><c> to</c>

00:38:06.170 --> 00:38:06.180 align:start position:0%
of alpha beta channel users in order to
 

00:38:06.180 --> 00:38:09.289 align:start position:0%
of alpha beta channel users in order to
lead<00:38:06.559><c> important</c><00:38:07.559><c> performance</c><00:38:08.299><c> improvement</c>

00:38:09.289 --> 00:38:09.299 align:start position:0%
lead important performance improvement
 

00:38:09.299 --> 00:38:10.999 align:start position:0%
lead important performance improvement
right<00:38:09.599><c> after</c><00:38:09.960><c> install</c><00:38:10.319><c> time</c><00:38:10.559><c> for</c><00:38:10.920><c> the</c>

00:38:10.999 --> 00:38:11.009 align:start position:0%
right after install time for the
 

00:38:11.009 --> 00:38:14.630 align:start position:0%
right after install time for the
majority<00:38:11.519><c> of</c><00:38:11.549><c> the</c><00:38:11.700><c> production</c><00:38:11.910><c> users</c><00:38:13.640><c> with</c>

00:38:14.630 --> 00:38:14.640 align:start position:0%
majority of the production users with
 

00:38:14.640 --> 00:38:16.309 align:start position:0%
majority of the production users with
this<00:38:14.849><c> I'd</c><00:38:15.359><c> like</c><00:38:15.539><c> to</c><00:38:15.690><c> thank</c><00:38:15.869><c> you</c><00:38:16.049><c> for</c><00:38:16.200><c> your</c>

00:38:16.309 --> 00:38:16.319 align:start position:0%
this I'd like to thank you for your
 

00:38:16.319 --> 00:38:19.130 align:start position:0%
this I'd like to thank you for your
attention<00:38:16.559><c> and</c><00:38:16.920><c> for</c><00:38:17.279><c> your</c><00:38:17.369><c> presence</c><00:38:18.019><c> and</c><00:38:19.019><c> I</c>

00:38:19.130 --> 00:38:19.140 align:start position:0%
attention and for your presence and I
 

00:38:19.140 --> 00:38:20.749 align:start position:0%
attention and for your presence and I
want<00:38:19.380><c> to</c><00:38:19.470><c> invite</c><00:38:19.619><c> you</c><00:38:19.920><c> all</c><00:38:20.130><c> to</c><00:38:20.160><c> Android</c>

00:38:20.749 --> 00:38:20.759 align:start position:0%
want to invite you all to Android
 

00:38:20.759 --> 00:38:22.849 align:start position:0%
want to invite you all to Android
runtime<00:38:21.000><c> office</c><00:38:21.509><c> hours</c><00:38:21.809><c> tomorrow</c><00:38:21.990><c> where</c><00:38:22.769><c> we</c>

00:38:22.849 --> 00:38:22.859 align:start position:0%
runtime office hours tomorrow where we
 

00:38:22.859 --> 00:38:24.380 align:start position:0%
runtime office hours tomorrow where we
can<00:38:23.009><c> answer</c><00:38:23.190><c> any</c><00:38:23.519><c> questions</c><00:38:24.000><c> that</c><00:38:24.210><c> you</c><00:38:24.240><c> would</c>

00:38:24.380 --> 00:38:24.390 align:start position:0%
can answer any questions that you would
 

00:38:24.390 --> 00:38:26.660 align:start position:0%
can answer any questions that you would
have<00:38:24.569><c> about</c><00:38:24.960><c> this</c><00:38:25.230><c> presentation</c><00:38:25.769><c> or</c><00:38:26.339><c> about</c>

00:38:26.660 --> 00:38:26.670 align:start position:0%
have about this presentation or about
 

00:38:26.670 --> 00:38:29.710 align:start position:0%
have about this presentation or about
the<00:38:26.759><c> runtime</c><00:38:27.180><c> in</c><00:38:27.329><c> general</c><00:38:27.750><c> we're</c><00:38:28.470><c> gonna</c><00:38:28.619><c> be</c><00:38:28.890><c> at</c>

00:38:29.710 --> 00:38:29.720 align:start position:0%
the runtime in general we're gonna be at
 

00:38:29.720 --> 00:38:33.680 align:start position:0%
the runtime in general we're gonna be at
half<00:38:30.720><c> past</c><00:38:30.930><c> five</c><00:38:31.230><c> in</c><00:38:31.589><c> Section</c><00:38:32.400><c> a</c><00:38:32.519><c> thank</c><00:38:33.480><c> you</c><00:38:33.539><c> so</c>

00:38:33.680 --> 00:38:33.690 align:start position:0%
half past five in Section a thank you so
 

00:38:33.690 --> 00:38:34.620 align:start position:0%
half past five in Section a thank you so
much

00:38:34.620 --> 00:38:34.630 align:start position:0%
much
 

00:38:34.630 --> 00:38:37.020 align:start position:0%
much
[Applause]

00:38:37.020 --> 00:38:37.030 align:start position:0%
[Applause]
 

00:38:37.030 --> 00:38:59.550 align:start position:0%
[Applause]
[Music]

