WEBVTT
Kind: captions
Language: en

00:00:00.120 --> 00:00:05.280
So now that we have seen how the BTB and the BHT work together, let's do a BTB &amp;

00:00:05.280 --> 00:00:10.640
BHT QUIZ on that. Suppose we have the following program. This is

00:00:10.640 --> 00:00:13.520
the address of the instruction. This is the

00:00:13.520 --> 00:00:16.860
instruction itself. And these are the labels for

00:00:16.860 --> 00:00:21.100
branches. So, what this program is doing is

00:00:21.100 --> 00:00:25.000
it's moving 100 into R2; it's moving 0

00:00:25.000 --> 00:00:30.330
into R1. And then as long as R1 and R2 are

00:00:30.330 --> 00:00:34.930
different, it's going to continue here. Once R1 and R2 are the same, it's

00:00:34.930 --> 00:00:39.972
going to jump to the Done label and exit this loop. In the loop, it's adding

00:00:39.972 --> 00:00:45.189
R1 to R3 to form R4, uses that to load a value from that

00:00:45.189 --> 00:00:50.295
address and then adds that R4 to R5, adds 1 to R1 and

00:00:50.295 --> 00:00:57.970
then unconditionally branches back to this loop. So this is the loop. This

00:00:57.970 --> 00:01:02.580
is where we exit from the loop. And this is the sort of initialization for the

00:01:02.580 --> 00:01:07.928
loop. Suppose that we have a branch history table that has only 16 entries

00:01:07.928 --> 00:01:12.240
and makes perfect predictions about branches. Suppose

00:01:12.240 --> 00:01:15.350
we also have a BTB with 4 entries.

00:01:15.350 --> 00:01:18.139
Also makes perfect predictions. And as you can

00:01:18.139 --> 00:01:20.676
see, all instructions are four bytes in size, and

00:01:20.676 --> 00:01:23.249
we know that. So the question for you is,

00:01:23.249 --> 00:01:25.202
how many times do we access the BHT for

00:01:25.202 --> 00:01:29.148
each instruction? Right here, how many times we access

00:01:29.148 --> 00:01:32.920
the BHT with this address because we are fetching

00:01:32.920 --> 00:01:36.431
this instruction? Here, how many times we access the

00:01:36.431 --> 00:01:40.530
BHT with this address because we're fetching this instruction?

00:01:40.530 --> 00:01:43.434
And so on. There are eight instructions here for each one of

00:01:43.434 --> 00:01:46.060
them. We need to say how many times we access the BHT.

