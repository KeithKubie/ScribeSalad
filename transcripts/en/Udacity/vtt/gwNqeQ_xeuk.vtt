WEBVTT
Kind: captions
Language: en

00:00:00.350 --> 00:00:05.530
Recall that in one of our earlier lectures, we discussed memory consistency

00:00:05.530 --> 00:00:10.330
model and the relationship of memory consistency model to cache

00:00:10.330 --> 00:00:15.480
coherence, in the context of shared memory systems. Memory consistency model is

00:00:15.480 --> 00:00:20.510
a contract between the application programmer and the

00:00:20.510 --> 00:00:25.590
system. It answers the when question, that is, when a shared

00:00:25.590 --> 00:00:32.420
memory location is modified by one processor, when, that is how soon, that

00:00:32.420 --> 00:00:37.790
change is going to be made visible to other processes that have the same memory

00:00:37.790 --> 00:00:41.280
location in their respective private caches. That's

00:00:41.280 --> 00:00:43.620
the question that is being answered by

00:00:43.620 --> 00:00:47.220
the memory consistency model. Cache coherence, on

00:00:47.220 --> 00:00:51.230
the other hand, is answering the how question,

00:00:51.230 --> 00:00:57.470
that is, how is the system, by system we mean the system software plus the

00:00:57.470 --> 00:01:01.270
hardware working together, implementing the contract of

00:01:01.270 --> 00:01:04.160
the memory consistency model? In other words, the

00:01:04.160 --> 00:01:05.680
guarantee that has been made by the

00:01:05.680 --> 00:01:09.380
memory consistency model, to the application programmer has

00:01:09.380 --> 00:01:12.700
to be fulfilled by the cache coherence

00:01:12.700 --> 00:01:16.400
mechanism. So coming back to writing a parallel

00:01:16.400 --> 00:01:20.640
program, when accesses are made to the shared memory,

00:01:20.640 --> 00:01:25.490
the underlying coherence mechanism has to ensure that all

00:01:25.490 --> 00:01:29.390
the processes see the changes that are being made

00:01:29.390 --> 00:01:32.960
to shared memory, commensurate with the memory consistency model.

