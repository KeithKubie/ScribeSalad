WEBVTT
Kind: captions
Language: en

00:00:01.760 --> 00:00:04.670 align:start position:0%
 
listen<00:00:02.760><c> we</c><00:00:03.030><c> know</c><00:00:03.330><c> that</c><00:00:03.659><c> you</c><00:00:03.899><c> love</c><00:00:04.170><c> threading</c>

00:00:04.670 --> 00:00:04.680 align:start position:0%
listen we know that you love threading
 

00:00:04.680 --> 00:00:06.559 align:start position:0%
listen we know that you love threading
and<00:00:04.920><c> we</c><00:00:05.130><c> know</c><00:00:05.250><c> that</c><00:00:05.370><c> for</c><00:00:05.549><c> 99%</c><00:00:06.210><c> of</c><00:00:06.450><c> your</c>

00:00:06.559 --> 00:00:06.569 align:start position:0%
and we know that for 99% of your
 

00:00:06.569 --> 00:00:08.419 align:start position:0%
and we know that for 99% of your
threading<00:00:06.899><c> needs</c><00:00:07.109><c> async</c><00:00:07.770><c> task</c><00:00:07.980><c> is</c><00:00:08.189><c> the</c><00:00:08.309><c> right</c>

00:00:08.419 --> 00:00:08.429 align:start position:0%
threading needs async task is the right
 

00:00:08.429 --> 00:00:10.040 align:start position:0%
threading needs async task is the right
solution<00:00:08.610><c> but</c><00:00:09.090><c> for</c><00:00:09.360><c> the</c><00:00:09.450><c> other</c><00:00:09.599><c> work</c><00:00:09.809><c> you</c>

00:00:10.040 --> 00:00:10.050 align:start position:0%
solution but for the other work you
 

00:00:10.050 --> 00:00:11.810 align:start position:0%
solution but for the other work you
might<00:00:10.200><c> need</c><00:00:10.380><c> a</c><00:00:10.530><c> different</c><00:00:10.800><c> kind</c><00:00:11.219><c> of</c><00:00:11.519><c> threading</c>

00:00:11.810 --> 00:00:11.820 align:start position:0%
might need a different kind of threading
 

00:00:11.820 --> 00:00:13.549 align:start position:0%
might need a different kind of threading
primitive<00:00:12.240><c> my</c><00:00:12.719><c> name</c><00:00:12.840><c> is</c><00:00:12.960><c> Colt</c><00:00:13.170><c> McAnlis</c><00:00:13.200><c> and</c>

00:00:13.549 --> 00:00:13.559 align:start position:0%
primitive my name is Colt McAnlis and
 

00:00:13.559 --> 00:00:14.990 align:start position:0%
primitive my name is Colt McAnlis and
for<00:00:13.769><c> the</c><00:00:13.830><c> types</c><00:00:14.070><c> of</c><00:00:14.219><c> work</c><00:00:14.400><c> that</c><00:00:14.429><c> might</c><00:00:14.820><c> not</c>

00:00:14.990 --> 00:00:15.000 align:start position:0%
for the types of work that might not
 

00:00:15.000 --> 00:00:17.420 align:start position:0%
for the types of work that might not
deal<00:00:15.240><c> with</c><00:00:15.389><c> UI</c><00:00:15.570><c> updates</c><00:00:15.890><c> handler</c><00:00:16.890><c> threads</c><00:00:17.220><c> are</c>

00:00:17.420 --> 00:00:17.430 align:start position:0%
deal with UI updates handler threads are
 

00:00:17.430 --> 00:00:19.580 align:start position:0%
deal with UI updates handler threads are
a<00:00:17.460><c> nifty</c><00:00:17.940><c> solution</c><00:00:18.630><c> see</c><00:00:19.050><c> when</c><00:00:19.199><c> it</c><00:00:19.289><c> comes</c><00:00:19.439><c> to</c>

00:00:19.580 --> 00:00:19.590 align:start position:0%
a nifty solution see when it comes to
 

00:00:19.590 --> 00:00:21.019 align:start position:0%
a nifty solution see when it comes to
threading<00:00:19.859><c> work</c><00:00:20.010><c> most</c><00:00:20.520><c> devs</c><00:00:20.760><c> have</c><00:00:20.970><c> a</c>

00:00:21.019 --> 00:00:21.029 align:start position:0%
threading work most devs have a
 

00:00:21.029 --> 00:00:23.300 align:start position:0%
threading work most devs have a
round-trip<00:00:21.810><c> model</c><00:00:22.410><c> now</c><00:00:22.529><c> you've</c><00:00:22.710><c> got</c><00:00:22.859><c> some</c>

00:00:23.300 --> 00:00:23.310 align:start position:0%
round-trip model now you've got some
 

00:00:23.310 --> 00:00:24.769 align:start position:0%
round-trip model now you've got some
work<00:00:23.580><c> you</c><00:00:23.609><c> want</c><00:00:24.000><c> it</c><00:00:24.060><c> tossed</c><00:00:24.269><c> from</c><00:00:24.449><c> the</c><00:00:24.600><c> UI</c>

00:00:24.769 --> 00:00:24.779 align:start position:0%
work you want it tossed from the UI
 

00:00:24.779 --> 00:00:26.179 align:start position:0%
work you want it tossed from the UI
thread<00:00:25.109><c> to</c><00:00:25.230><c> some</c><00:00:25.380><c> other</c><00:00:25.529><c> thread</c><00:00:25.740><c> and</c><00:00:26.099><c> then</c>

00:00:26.179 --> 00:00:26.189 align:start position:0%
thread to some other thread and then
 

00:00:26.189 --> 00:00:27.800 align:start position:0%
thread to some other thread and then
when<00:00:26.550><c> the</c><00:00:26.640><c> work</c><00:00:26.730><c> needs</c><00:00:26.970><c> to</c><00:00:27.090><c> come</c><00:00:27.240><c> back</c><00:00:27.539><c> to</c><00:00:27.720><c> the</c>

00:00:27.800 --> 00:00:27.810 align:start position:0%
when the work needs to come back to the
 

00:00:27.810 --> 00:00:29.419 align:start position:0%
when the work needs to come back to the
UI<00:00:27.960><c> thread</c><00:00:28.349><c> you've</c><00:00:28.590><c> got</c><00:00:28.740><c> to</c><00:00:28.830><c> update</c><00:00:29.160><c> some</c>

00:00:29.419 --> 00:00:29.429 align:start position:0%
UI thread you've got to update some
 

00:00:29.429 --> 00:00:31.790 align:start position:0%
UI thread you've got to update some
visual<00:00:29.880><c> thingamajigger</c><00:00:30.449><c> or</c><00:00:30.750><c> whatever</c><00:00:31.109><c> for</c>

00:00:31.790 --> 00:00:31.800 align:start position:0%
visual thingamajigger or whatever for
 

00:00:31.800 --> 00:00:34.430 align:start position:0%
visual thingamajigger or whatever for
these<00:00:32.250><c> types</c><00:00:32.730><c> of</c><00:00:32.969><c> situations</c><00:00:33.210><c> async</c><00:00:34.020><c> task</c><00:00:34.230><c> is</c>

00:00:34.430 --> 00:00:34.440 align:start position:0%
these types of situations async task is
 

00:00:34.440 --> 00:00:36.650 align:start position:0%
these types of situations async task is
obviously<00:00:35.219><c> the</c><00:00:35.399><c> easiest</c><00:00:35.550><c> solution</c><00:00:35.940><c> for</c><00:00:36.510><c> you</c><00:00:36.630><c> I</c>

00:00:36.650 --> 00:00:36.660 align:start position:0%
obviously the easiest solution for you I
 

00:00:36.660 --> 00:00:38.630 align:start position:0%
obviously the easiest solution for you I
mean<00:00:36.840><c> it</c><00:00:36.960><c> wraps</c><00:00:37.140><c> up</c><00:00:37.320><c> all</c><00:00:37.469><c> the</c><00:00:37.860><c> overhead</c><00:00:38.309><c> of</c>

00:00:38.630 --> 00:00:38.640 align:start position:0%
mean it wraps up all the overhead of
 

00:00:38.640 --> 00:00:40.190 align:start position:0%
mean it wraps up all the overhead of
pushing<00:00:38.969><c> work</c><00:00:39.120><c> from</c><00:00:39.390><c> the</c><00:00:39.510><c> UI</c><00:00:39.629><c> thread</c><00:00:39.989><c> to</c><00:00:40.170><c> a</c>

00:00:40.190 --> 00:00:40.200 align:start position:0%
pushing work from the UI thread to a
 

00:00:40.200 --> 00:00:41.330 align:start position:0%
pushing work from the UI thread to a
worker<00:00:40.469><c> thread</c><00:00:40.680><c> and</c><00:00:40.920><c> then</c><00:00:41.010><c> getting</c><00:00:41.190><c> the</c>

00:00:41.330 --> 00:00:41.340 align:start position:0%
worker thread and then getting the
 

00:00:41.340 --> 00:00:43.190 align:start position:0%
worker thread and then getting the
results<00:00:41.670><c> back</c><00:00:42.149><c> to</c><00:00:42.360><c> the</c><00:00:42.390><c> UI</c><00:00:42.570><c> thread</c>

00:00:43.190 --> 00:00:43.200 align:start position:0%
results back to the UI thread
 

00:00:43.200 --> 00:00:45.290 align:start position:0%
results back to the UI thread
but<00:00:43.620><c> async</c><00:00:44.040><c> task</c><00:00:44.250><c> isn't</c><00:00:44.579><c> the</c><00:00:44.850><c> right</c><00:00:44.969><c> threading</c>

00:00:45.290 --> 00:00:45.300 align:start position:0%
but async task isn't the right threading
 

00:00:45.300 --> 00:00:47.959 align:start position:0%
but async task isn't the right threading
primitive<00:00:45.660><c> for</c><00:00:45.899><c> every</c><00:00:46.379><c> situation</c><00:00:46.969><c> consider</c>

00:00:47.959 --> 00:00:47.969 align:start position:0%
primitive for every situation consider
 

00:00:47.969 --> 00:00:49.700 align:start position:0%
primitive for every situation consider
the<00:00:48.090><c> challenge</c><00:00:48.450><c> of</c><00:00:48.600><c> getting</c><00:00:48.719><c> preview</c><00:00:49.379><c> frames</c>

00:00:49.700 --> 00:00:49.710 align:start position:0%
the challenge of getting preview frames
 

00:00:49.710 --> 00:00:52.160 align:start position:0%
the challenge of getting preview frames
from<00:00:50.219><c> your</c><00:00:50.579><c> camera</c><00:00:51.090><c> these</c><00:00:51.570><c> previews</c><00:00:51.989><c> are</c>

00:00:52.160 --> 00:00:52.170 align:start position:0%
from your camera these previews are
 

00:00:52.170 --> 00:00:53.959 align:start position:0%
from your camera these previews are
given<00:00:52.350><c> back</c><00:00:52.469><c> to</c><00:00:52.620><c> you</c><00:00:52.710><c> via</c><00:00:52.920><c> the</c><00:00:53.070><c> on</c><00:00:53.250><c> preview</c>

00:00:53.959 --> 00:00:53.969 align:start position:0%
given back to you via the on preview
 

00:00:53.969 --> 00:00:55.939 align:start position:0%
given back to you via the on preview
frame<00:00:54.329><c> callback</c><00:00:54.809><c> which</c><00:00:54.989><c> is</c><00:00:55.140><c> a</c><00:00:55.170><c> vocht</c><00:00:55.469><c> on</c><00:00:55.620><c> the</c>

00:00:55.939 --> 00:00:55.949 align:start position:0%
frame callback which is a vocht on the
 

00:00:55.949 --> 00:00:57.650 align:start position:0%
frame callback which is a vocht on the
same<00:00:56.160><c> thread</c><00:00:56.430><c> that</c><00:00:56.610><c> the</c><00:00:56.730><c> camera</c><00:00:57.210><c> dot</c><00:00:57.449><c> open</c>

00:00:57.650 --> 00:00:57.660 align:start position:0%
same thread that the camera dot open
 

00:00:57.660 --> 00:01:00.200 align:start position:0%
same thread that the camera dot open
function<00:00:58.649><c> was</c><00:00:58.920><c> called</c><00:00:59.219><c> on</c><00:00:59.370><c> so</c><00:00:59.789><c> if</c><00:01:00.030><c> this</c>

00:01:00.200 --> 00:01:00.210 align:start position:0%
function was called on so if this
 

00:01:00.210 --> 00:01:01.639 align:start position:0%
function was called on so if this
callback<00:01:00.480><c> were</c><00:01:00.809><c> invoked</c><00:01:01.109><c> on</c><00:01:01.230><c> the</c><00:01:01.320><c> UI</c><00:01:01.469><c> thread</c>

00:01:01.639 --> 00:01:01.649 align:start position:0%
callback were invoked on the UI thread
 

00:01:01.649 --> 00:01:03.950 align:start position:0%
callback were invoked on the UI thread
then<00:01:02.550><c> the</c><00:01:02.640><c> task</c><00:01:02.910><c> of</c><00:01:03.120><c> dealing</c><00:01:03.239><c> with</c><00:01:03.480><c> those</c><00:01:03.570><c> huge</c>

00:01:03.950 --> 00:01:03.960 align:start position:0%
then the task of dealing with those huge
 

00:01:03.960 --> 00:01:05.750 align:start position:0%
then the task of dealing with those huge
pixel<00:01:04.409><c> arrays</c><00:01:04.589><c> would</c><00:01:04.949><c> be</c><00:01:05.070><c> interfering</c><00:01:05.400><c> with</c>

00:01:05.750 --> 00:01:05.760 align:start position:0%
pixel arrays would be interfering with
 

00:01:05.760 --> 00:01:07.850 align:start position:0%
pixel arrays would be interfering with
rendering<00:01:06.060><c> and</c><00:01:06.420><c> event</c><00:01:06.780><c> processing</c><00:01:07.290><c> work</c><00:01:07.439><c> and</c>

00:01:07.850 --> 00:01:07.860 align:start position:0%
rendering and event processing work and
 

00:01:07.860 --> 00:01:10.490 align:start position:0%
rendering and event processing work and
same<00:01:08.280><c> thing</c><00:01:08.310><c> goes</c><00:01:08.640><c> for</c><00:01:08.880><c> async</c><00:01:09.510><c> tasks</c><00:01:09.720><c> remember</c>

00:01:10.490 --> 00:01:10.500 align:start position:0%
same thing goes for async tasks remember
 

00:01:10.500 --> 00:01:12.980 align:start position:0%
same thing goes for async tasks remember
that<00:01:10.650><c> by</c><00:01:10.740><c> default</c><00:01:10.799><c> these</c><00:01:11.490><c> execute</c><00:01:12.180><c> serially</c>

00:01:12.980 --> 00:01:12.990 align:start position:0%
that by default these execute serially
 

00:01:12.990 --> 00:01:14.690 align:start position:0%
that by default these execute serially
on<00:01:13.200><c> another</c><00:01:13.799><c> thread</c><00:01:14.130><c> which</c><00:01:14.340><c> means</c><00:01:14.549><c> that</c>

00:01:14.690 --> 00:01:14.700 align:start position:0%
on another thread which means that
 

00:01:14.700 --> 00:01:16.999 align:start position:0%
on another thread which means that
dealing<00:01:14.970><c> with</c><00:01:15.090><c> an</c><00:01:15.210><c> 8</c><00:01:15.420><c> megapixels</c><00:01:16.140><c> block</c><00:01:16.740><c> of</c>

00:01:16.999 --> 00:01:17.009 align:start position:0%
dealing with an 8 megapixels block of
 

00:01:17.009 --> 00:01:19.310 align:start position:0%
dealing with an 8 megapixels block of
data<00:01:17.340><c> might</c><00:01:17.850><c> stall</c><00:01:18.180><c> other</c><00:01:18.479><c> async</c><00:01:19.080><c> task</c>

00:01:19.310 --> 00:01:19.320 align:start position:0%
data might stall other async task
 

00:01:19.320 --> 00:01:21.590 align:start position:0%
data might stall other async task
packets<00:01:19.860><c> that</c><00:01:20.009><c> the</c><00:01:20.100><c> UI</c><00:01:20.250><c> thread</c><00:01:20.640><c> is</c><00:01:20.970><c> waiting</c><00:01:21.509><c> on</c>

00:01:21.590 --> 00:01:21.600 align:start position:0%
packets that the UI thread is waiting on
 

00:01:21.600 --> 00:01:24.350 align:start position:0%
packets that the UI thread is waiting on
so<00:01:22.259><c> really</c><00:01:22.590><c> what</c><00:01:22.740><c> you</c><00:01:22.830><c> want</c><00:01:23.009><c> is</c><00:01:23.100><c> a</c><00:01:23.220><c> non</c><00:01:23.490><c> UI</c><00:01:23.729><c> non</c>

00:01:24.350 --> 00:01:24.360 align:start position:0%
so really what you want is a non UI non
 

00:01:24.360 --> 00:01:26.780 align:start position:0%
so really what you want is a non UI non
async<00:01:24.990><c> task</c><00:01:25.229><c> thread</c><00:01:25.650><c> they</c><00:01:26.070><c> can</c><00:01:26.220><c> receive</c><00:01:26.580><c> these</c>

00:01:26.780 --> 00:01:26.790 align:start position:0%
async task thread they can receive these
 

00:01:26.790 --> 00:01:28.580 align:start position:0%
async task thread they can receive these
callbacks<00:01:27.090><c> and</c><00:01:27.570><c> potentially</c><00:01:27.990><c> spend</c><00:01:28.140><c> a</c><00:01:28.320><c> long</c>

00:01:28.580 --> 00:01:28.590 align:start position:0%
callbacks and potentially spend a long
 

00:01:28.590 --> 00:01:30.649 align:start position:0%
callbacks and potentially spend a long
time<00:01:28.619><c> processing</c><00:01:29.460><c> that</c><00:01:29.579><c> work</c><00:01:29.790><c> and</c><00:01:29.939><c> this</c><00:01:30.479><c> is</c>

00:01:30.649 --> 00:01:30.659 align:start position:0%
time processing that work and this is
 

00:01:30.659 --> 00:01:33.679 align:start position:0%
time processing that work and this is
exactly<00:01:30.840><c> what</c><00:01:31.590><c> handler</c><00:01:32.280><c> thread</c><00:01:32.579><c> is</c><00:01:32.759><c> for</c><00:01:33.090><c> see</c><00:01:33.659><c> a</c>

00:01:33.679 --> 00:01:33.689 align:start position:0%
exactly what handler thread is for see a
 

00:01:33.689 --> 00:01:35.289 align:start position:0%
exactly what handler thread is for see a
handler<00:01:34.229><c> thread</c><00:01:34.500><c> is</c><00:01:34.590><c> effectively</c><00:01:35.009><c> a</c>

00:01:35.289 --> 00:01:35.299 align:start position:0%
handler thread is effectively a
 

00:01:35.299 --> 00:01:37.910 align:start position:0%
handler thread is effectively a
long-running<00:01:36.299><c> thread</c><00:01:36.720><c> that</c><00:01:37.110><c> grabs</c><00:01:37.439><c> work</c><00:01:37.740><c> from</c>

00:01:37.910 --> 00:01:37.920 align:start position:0%
long-running thread that grabs work from
 

00:01:37.920 --> 00:01:39.740 align:start position:0%
long-running thread that grabs work from
a<00:01:38.009><c> queue</c><00:01:38.280><c> and</c><00:01:38.520><c> operates</c><00:01:39.060><c> on</c><00:01:39.240><c> it</c><00:01:39.450><c> it's</c><00:01:39.630><c> a</c>

00:01:39.740 --> 00:01:39.750 align:start position:0%
a queue and operates on it it's a
 

00:01:39.750 --> 00:01:41.420 align:start position:0%
a queue and operates on it it's a
combination<00:01:40.380><c> of</c><00:01:40.680><c> a</c><00:01:40.770><c> few</c><00:01:40.950><c> other</c><00:01:41.100><c> Android</c>

00:01:41.420 --> 00:01:41.430 align:start position:0%
combination of a few other Android
 

00:01:41.430 --> 00:01:43.850 align:start position:0%
combination of a few other Android
primitives<00:01:41.909><c> namely</c><00:01:42.270><c> a</c><00:01:42.420><c> looper</c><00:01:43.290><c> which</c><00:01:43.560><c> keeps</c>

00:01:43.850 --> 00:01:43.860 align:start position:0%
primitives namely a looper which keeps
 

00:01:43.860 --> 00:01:45.350 align:start position:0%
primitives namely a looper which keeps
the<00:01:44.009><c> thread</c><00:01:44.280><c> alive</c><00:01:44.549><c> and</c><00:01:44.759><c> holds</c><00:01:45.030><c> a</c><00:01:45.090><c> message</c>

00:01:45.350 --> 00:01:45.360 align:start position:0%
the thread alive and holds a message
 

00:01:45.360 --> 00:01:48.050 align:start position:0%
the thread alive and holds a message
queue<00:01:45.600><c> and</c><00:01:45.780><c> a</c><00:01:46.170><c> handler</c><00:01:46.590><c> object</c><00:01:47.369><c> which</c><00:01:47.610><c> manages</c>

00:01:48.050 --> 00:01:48.060 align:start position:0%
queue and a handler object which manages
 

00:01:48.060 --> 00:01:50.719 align:start position:0%
queue and a handler object which manages
how<00:01:48.329><c> work</c><00:01:48.600><c> is</c><00:01:48.750><c> inserted</c><00:01:49.350><c> into</c><00:01:49.560><c> that</c><00:01:50.340><c> message</c>

00:01:50.719 --> 00:01:50.729 align:start position:0%
how work is inserted into that message
 

00:01:50.729 --> 00:01:53.300 align:start position:0%
how work is inserted into that message
queue<00:01:51.079><c> anyhow</c><00:01:52.079><c> getting</c><00:01:52.619><c> back</c><00:01:52.770><c> to</c><00:01:52.890><c> our</c><00:01:53.009><c> camera</c>

00:01:53.300 --> 00:01:53.310 align:start position:0%
queue anyhow getting back to our camera
 

00:01:53.310 --> 00:01:55.310 align:start position:0%
queue anyhow getting back to our camera
example<00:01:53.670><c> once</c><00:01:54.299><c> you've</c><00:01:54.420><c> created</c><00:01:54.630><c> a</c><00:01:54.869><c> handler</c>

00:01:55.310 --> 00:01:55.320 align:start position:0%
example once you've created a handler
 

00:01:55.320 --> 00:01:57.020 align:start position:0%
example once you've created a handler
thread<00:01:55.560><c> you</c><00:01:55.680><c> can</c><00:01:55.829><c> delegate</c><00:01:56.219><c> the</c><00:01:56.369><c> camera</c><00:01:56.820><c> dot</c>

00:01:57.020 --> 00:01:57.030 align:start position:0%
thread you can delegate the camera dot
 

00:01:57.030 --> 00:01:59.270 align:start position:0%
thread you can delegate the camera dot
open<00:01:57.270><c> command</c><00:01:57.899><c> to</c><00:01:58.049><c> it</c><00:01:58.200><c> and</c><00:01:58.350><c> know</c><00:01:58.799><c> that</c><00:01:58.829><c> the</c><00:01:59.130><c> on</c>

00:01:59.270 --> 00:01:59.280 align:start position:0%
open command to it and know that the on
 

00:01:59.280 --> 00:02:01.100 align:start position:0%
open command to it and know that the on
preview<00:01:59.820><c> frame</c><00:02:00.060><c> callback</c><00:02:00.540><c> will</c><00:02:00.780><c> land</c><00:02:00.930><c> on</c><00:02:01.020><c> the</c>

00:02:01.100 --> 00:02:01.110 align:start position:0%
preview frame callback will land on the
 

00:02:01.110 --> 00:02:03.020 align:start position:0%
preview frame callback will land on the
handler<00:02:01.469><c> thread</c><00:02:01.740><c> rather</c><00:02:02.250><c> than</c><00:02:02.490><c> the</c><00:02:02.640><c> UI</c><00:02:02.880><c> or</c>

00:02:03.020 --> 00:02:03.030 align:start position:0%
handler thread rather than the UI or
 

00:02:03.030 --> 00:02:05.240 align:start position:0%
handler thread rather than the UI or
async<00:02:03.899><c> task</c><00:02:04.140><c> threads</c><00:02:04.500><c> so</c><00:02:04.920><c> if</c><00:02:05.009><c> you're</c><00:02:05.100><c> going</c><00:02:05.189><c> to</c>

00:02:05.240 --> 00:02:05.250 align:start position:0%
async task threads so if you're going to
 

00:02:05.250 --> 00:02:07.399 align:start position:0%
async task threads so if you're going to
be<00:02:05.369><c> doing</c><00:02:05.520><c> a</c><00:02:05.790><c> long-running</c><00:02:06.600><c> block</c><00:02:06.930><c> of</c><00:02:07.110><c> work</c><00:02:07.259><c> on</c>

00:02:07.399 --> 00:02:07.409 align:start position:0%
be doing a long-running block of work on
 

00:02:07.409 --> 00:02:10.100 align:start position:0%
be doing a long-running block of work on
those<00:02:07.740><c> pixels</c><00:02:08.250><c> this</c><00:02:08.640><c> is</c><00:02:08.940><c> ideal</c><00:02:09.509><c> for</c><00:02:09.539><c> you</c><00:02:09.869><c> and</c>

00:02:10.100 --> 00:02:10.110 align:start position:0%
those pixels this is ideal for you and
 

00:02:10.110 --> 00:02:11.809 align:start position:0%
those pixels this is ideal for you and
to<00:02:10.410><c> be</c><00:02:10.500><c> clear</c><00:02:10.709><c> getting</c><00:02:11.190><c> the</c><00:02:11.250><c> results</c><00:02:11.610><c> of</c><00:02:11.790><c> that</c>

00:02:11.809 --> 00:02:11.819 align:start position:0%
to be clear getting the results of that
 

00:02:11.819 --> 00:02:13.309 align:start position:0%
to be clear getting the results of that
work<00:02:12.209><c> back</c><00:02:12.720><c> to</c><00:02:12.989><c> you</c>

00:02:13.309 --> 00:02:13.319 align:start position:0%
work back to you
 

00:02:13.319 --> 00:02:14.989 align:start position:0%
work back to you
my<00:02:13.379><c> thread</c><00:02:13.650><c> is</c><00:02:13.680><c> pretty</c><00:02:14.219><c> straightforward</c><00:02:14.549><c> just</c>

00:02:14.989 --> 00:02:14.999 align:start position:0%
my thread is pretty straightforward just
 

00:02:14.999 --> 00:02:17.599 align:start position:0%
my thread is pretty straightforward just
pass<00:02:15.599><c> it</c><00:02:15.810><c> along</c><00:02:15.900><c> with</c><00:02:16.290><c> V</c><00:02:16.439><c> run</c><00:02:16.769><c> on</c><00:02:16.980><c> UI</c><00:02:17.249><c> thread</c>

00:02:17.599 --> 00:02:17.609 align:start position:0%
pass it along with V run on UI thread
 

00:02:17.609 --> 00:02:19.759 align:start position:0%
pass it along with V run on UI thread
command<00:02:17.999><c> so</c><00:02:18.569><c> handler</c><00:02:18.989><c> threads</c><00:02:19.260><c> are</c><00:02:19.409><c> obviously</c>

00:02:19.759 --> 00:02:19.769 align:start position:0%
command so handler threads are obviously
 

00:02:19.769 --> 00:02:21.559 align:start position:0%
command so handler threads are obviously
helpful<00:02:20.040><c> for</c><00:02:20.310><c> other</c><00:02:20.519><c> Android</c><00:02:20.999><c> AP</c><00:02:21.269><c> eyes</c><00:02:21.389><c> that</c>

00:02:21.559 --> 00:02:21.569 align:start position:0%
helpful for other Android AP eyes that
 

00:02:21.569 --> 00:02:23.119 align:start position:0%
helpful for other Android AP eyes that
follow<00:02:21.749><c> a</c><00:02:21.810><c> similar</c><00:02:22.049><c> pattern</c><00:02:22.349><c> but</c><00:02:22.889><c> they</c><00:02:22.980><c> can</c>

00:02:23.119 --> 00:02:23.129 align:start position:0%
follow a similar pattern but they can
 

00:02:23.129 --> 00:02:25.759 align:start position:0%
follow a similar pattern but they can
also<00:02:23.400><c> be</c><00:02:23.670><c> useful</c><00:02:23.849><c> for</c><00:02:24.269><c> longer</c><00:02:24.780><c> running</c><00:02:24.989><c> non</c><00:02:25.499><c> UI</c>

00:02:25.759 --> 00:02:25.769 align:start position:0%
also be useful for longer running non UI
 

00:02:25.769 --> 00:02:28.309 align:start position:0%
also be useful for longer running non UI
work<00:02:26.159><c> like</c><00:02:26.430><c> a</c><00:02:26.459><c> compressing</c><00:02:27.359><c> a</c><00:02:27.450><c> batch</c><00:02:27.719><c> of</c><00:02:27.749><c> user</c>

00:02:28.309 --> 00:02:28.319 align:start position:0%
work like a compressing a batch of user
 

00:02:28.319 --> 00:02:29.869 align:start position:0%
work like a compressing a batch of user
metrics<00:02:28.590><c> before</c><00:02:29.099><c> uploading</c><00:02:29.400><c> it</c><00:02:29.639><c> to</c><00:02:29.700><c> your</c>

00:02:29.869 --> 00:02:29.879 align:start position:0%
metrics before uploading it to your
 

00:02:29.879 --> 00:02:32.300 align:start position:0%
metrics before uploading it to your
server<00:02:30.150><c> if</c><00:02:30.450><c> you've</c><00:02:30.810><c> got</c><00:02:31.019><c> other</c><00:02:31.200><c> UI</c><00:02:31.709><c> specific</c>

00:02:32.300 --> 00:02:32.310 align:start position:0%
server if you've got other UI specific
 

00:02:32.310 --> 00:02:34.699 align:start position:0%
server if you've got other UI specific
tasks<00:02:32.639><c> happening</c><00:02:33.150><c> on</c><00:02:33.299><c> async</c><00:02:33.840><c> tasks</c><00:02:34.109><c> then</c><00:02:34.590><c> you</c>

00:02:34.699 --> 00:02:34.709 align:start position:0%
tasks happening on async tasks then you
 

00:02:34.709 --> 00:02:36.379 align:start position:0%
tasks happening on async tasks then you
might<00:02:34.980><c> not</c><00:02:35.159><c> want</c><00:02:35.400><c> this</c><00:02:35.519><c> longer</c><00:02:36.120><c> running</c>

00:02:36.379 --> 00:02:36.389 align:start position:0%
might not want this longer running
 

00:02:36.389 --> 00:02:38.839 align:start position:0%
might not want this longer running
operation<00:02:36.930><c> to</c><00:02:37.079><c> stall</c><00:02:37.439><c> that</c><00:02:37.650><c> work</c><00:02:37.950><c> so</c><00:02:38.340><c> handler</c>

00:02:38.839 --> 00:02:38.849 align:start position:0%
operation to stall that work so handler
 

00:02:38.849 --> 00:02:41.509 align:start position:0%
operation to stall that work so handler
threads<00:02:39.120><c> are</c><00:02:39.299><c> a</c><00:02:39.329><c> good</c><00:02:39.870><c> place</c><00:02:40.319><c> for</c><00:02:40.680><c> it</c><00:02:40.739><c> oh</c><00:02:40.919><c> by</c>

00:02:41.509 --> 00:02:41.519 align:start position:0%
threads are a good place for it oh by
 

00:02:41.519 --> 00:02:43.129 align:start position:0%
threads are a good place for it oh by
the<00:02:41.549><c> way</c><00:02:41.639><c> when</c><00:02:42.060><c> you</c><00:02:42.150><c> create</c><00:02:42.510><c> a</c><00:02:42.540><c> hammer</c><00:02:42.810><c> thread</c>

00:02:43.129 --> 00:02:43.139 align:start position:0%
the way when you create a hammer thread
 

00:02:43.139 --> 00:02:45.229 align:start position:0%
the way when you create a hammer thread
don't<00:02:43.739><c> forget</c><00:02:44.010><c> to</c><00:02:44.129><c> set</c><00:02:44.310><c> its</c><00:02:44.459><c> thread</c><00:02:44.760><c> priority</c>

00:02:45.229 --> 00:02:45.239 align:start position:0%
don't forget to set its thread priority
 

00:02:45.239 --> 00:02:46.849 align:start position:0%
don't forget to set its thread priority
based<00:02:45.540><c> on</c><00:02:45.719><c> the</c><00:02:45.810><c> type</c><00:02:45.989><c> of</c><00:02:46.019><c> work</c><00:02:46.290><c> it's</c><00:02:46.500><c> doing</c><00:02:46.769><c> I</c>

00:02:46.849 --> 00:02:46.859 align:start position:0%
based on the type of work it's doing I
 

00:02:46.859 --> 00:02:49.159 align:start position:0%
based on the type of work it's doing I
mean<00:02:47.010><c> remember</c><00:02:47.430><c> CPUs</c><00:02:48.209><c> can</c><00:02:48.239><c> only</c><00:02:48.689><c> handle</c><00:02:49.049><c> a</c>

00:02:49.159 --> 00:02:49.169 align:start position:0%
mean remember CPUs can only handle a
 

00:02:49.169 --> 00:02:51.349 align:start position:0%
mean remember CPUs can only handle a
small<00:02:49.590><c> number</c><00:02:49.829><c> of</c><00:02:49.950><c> threads</c><00:02:50.340><c> in</c><00:02:50.489><c> parallel</c><00:02:50.519><c> so</c>

00:02:51.349 --> 00:02:51.359 align:start position:0%
small number of threads in parallel so
 

00:02:51.359 --> 00:02:53.119 align:start position:0%
small number of threads in parallel so
setting<00:02:51.870><c> the</c><00:02:51.900><c> priority</c><00:02:52.439><c> helps</c><00:02:52.709><c> the</c><00:02:52.829><c> system</c>

00:02:53.119 --> 00:02:53.129 align:start position:0%
setting the priority helps the system
 

00:02:53.129 --> 00:02:55.369 align:start position:0%
setting the priority helps the system
know<00:02:53.519><c> the</c><00:02:53.939><c> right</c><00:02:54.209><c> ways</c><00:02:54.510><c> to</c><00:02:54.780><c> schedule</c><00:02:55.230><c> this</c>

00:02:55.369 --> 00:02:55.379 align:start position:0%
know the right ways to schedule this
 

00:02:55.379 --> 00:02:57.020 align:start position:0%
know the right ways to schedule this
work<00:02:55.560><c> when</c><00:02:55.739><c> the</c><00:02:55.829><c> other</c><00:02:55.859><c> threads</c><00:02:56.340><c> are</c><00:02:56.549><c> fighting</c>

00:02:57.020 --> 00:02:57.030 align:start position:0%
work when the other threads are fighting
 

00:02:57.030 --> 00:02:59.270 align:start position:0%
work when the other threads are fighting
for<00:02:57.269><c> attention</c><00:02:57.599><c> and</c><00:02:57.959><c> that's</c><00:02:58.620><c> the</c><00:02:59.010><c> whole</c><00:02:59.250><c> thing</c>

00:02:59.270 --> 00:02:59.280 align:start position:0%
for attention and that's the whole thing
 

00:02:59.280 --> 00:03:01.399 align:start position:0%
for attention and that's the whole thing
when<00:02:59.939><c> it</c><00:03:00.060><c> comes</c><00:03:00.090><c> to</c><00:03:00.299><c> performance</c><00:03:00.689><c> coding</c><00:03:01.049><c> you</c>

00:03:01.399 --> 00:03:01.409 align:start position:0%
when it comes to performance coding you
 

00:03:01.409 --> 00:03:02.750 align:start position:0%
when it comes to performance coding you
have<00:03:01.530><c> to</c><00:03:01.680><c> understand</c><00:03:02.010><c> enough</c><00:03:02.430><c> about</c><00:03:02.639><c> the</c>

00:03:02.750 --> 00:03:02.760 align:start position:0%
have to understand enough about the
 

00:03:02.760 --> 00:03:04.429 align:start position:0%
have to understand enough about the
primitives<00:03:03.180><c> to</c><00:03:03.329><c> know</c><00:03:03.480><c> how</c><00:03:03.599><c> they</c><00:03:03.719><c> help</c><00:03:04.019><c> you</c><00:03:04.230><c> and</c>

00:03:04.429 --> 00:03:04.439 align:start position:0%
primitives to know how they help you and
 

00:03:04.439 --> 00:03:06.770 align:start position:0%
primitives to know how they help you and
how<00:03:05.280><c> they</c><00:03:05.459><c> might</c><00:03:05.639><c> hurt</c><00:03:05.909><c> you</c><00:03:06.090><c> and</c><00:03:06.269><c> if</c><00:03:06.540><c> it's</c><00:03:06.659><c> not</c>

00:03:06.770 --> 00:03:06.780 align:start position:0%
how they might hurt you and if it's not
 

00:03:06.780 --> 00:03:08.809 align:start position:0%
how they might hurt you and if it's not
working<00:03:06.989><c> move</c><00:03:07.500><c> on</c><00:03:07.709><c> to</c><00:03:07.919><c> a</c><00:03:07.949><c> better</c><00:03:08.340><c> pattern</c>

00:03:08.809 --> 00:03:08.819 align:start position:0%
working move on to a better pattern
 

00:03:08.819 --> 00:03:09.979 align:start position:0%
working move on to a better pattern
which<00:03:09.239><c> is</c><00:03:09.269><c> why</c><00:03:09.449><c> you</c><00:03:09.510><c> should</c><00:03:09.659><c> check</c><00:03:09.780><c> out</c><00:03:09.930><c> the</c>

00:03:09.979 --> 00:03:09.989 align:start position:0%
which is why you should check out the
 

00:03:09.989 --> 00:03:11.179 align:start position:0%
which is why you should check out the
rest<00:03:10.109><c> of</c><00:03:10.199><c> the</c><00:03:10.260><c> Android</c><00:03:10.620><c> performance</c><00:03:10.709><c> patterns</c>

00:03:11.179 --> 00:03:11.189 align:start position:0%
rest of the Android performance patterns
 

00:03:11.189 --> 00:03:13.580 align:start position:0%
rest of the Android performance patterns
videos<00:03:11.519><c> and</c><00:03:11.909><c> don't</c><00:03:12.329><c> forget</c><00:03:12.449><c> to</c><00:03:12.750><c> ask</c><00:03:12.900><c> the</c><00:03:13.230><c> hard</c>

00:03:13.580 --> 00:03:13.590 align:start position:0%
videos and don't forget to ask the hard
 

00:03:13.590 --> 00:03:15.770 align:start position:0%
videos and don't forget to ask the hard
threading<00:03:14.489><c> questions</c><00:03:14.849><c> on</c><00:03:15.060><c> the</c><00:03:15.209><c> Google+</c>

00:03:15.770 --> 00:03:15.780 align:start position:0%
threading questions on the Google+
 

00:03:15.780 --> 00:03:18.409 align:start position:0%
threading questions on the Google+
community<00:03:16.169><c> as</c><00:03:16.260><c> well</c><00:03:16.379><c> so</c><00:03:16.919><c> keep</c><00:03:17.519><c> calm</c><00:03:17.790><c> profile</c>

00:03:18.409 --> 00:03:18.419 align:start position:0%
community as well so keep calm profile
 

00:03:18.419 --> 00:03:19.879 align:start position:0%
community as well so keep calm profile
your<00:03:18.449><c> code</c><00:03:18.629><c> and</c><00:03:18.870><c> always</c><00:03:19.349><c> remember</c><00:03:19.530><c> perf</c>

00:03:19.879 --> 00:03:19.889 align:start position:0%
your code and always remember perf
 

00:03:19.889 --> 00:03:22.430 align:start position:0%
your code and always remember perf
matters

