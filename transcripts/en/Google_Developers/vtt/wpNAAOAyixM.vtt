WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:00.510
 

00:00:00.510 --> 00:00:03.930
Alexis Moussine-Pouchkine: Hello and
welcome back to Devoxx 2014.

00:00:03.930 --> 00:00:05.950
I'm here with
Ludovic Champenois,

00:00:05.950 --> 00:00:08.470
and we're here to talk about
something called Managed VM.

00:00:08.470 --> 00:00:09.670
Ludo, welcome.

00:00:09.670 --> 00:00:10.130
LUDOVIC CHAMPENOIS: Welcome.

00:00:10.130 --> 00:00:10.700
Thank you.

00:00:10.700 --> 00:00:12.810
MALE SPEAKER: And
actually, Managed VM

00:00:12.810 --> 00:00:16.295
is something I've heard
about a long time ago.

00:00:16.295 --> 00:00:18.420
Well, not that long ago,
but it's been in the works

00:00:18.420 --> 00:00:19.720
for a little while.

00:00:19.720 --> 00:00:21.290
And it kind of
changes the game, I

00:00:21.290 --> 00:00:25.050
think, for App Engine
users or the people that

00:00:25.050 --> 00:00:28.420
looked at App Engine
awhile back and maybe

00:00:28.420 --> 00:00:29.750
it didn't fit their needs.

00:00:29.750 --> 00:00:32.570
So maybe, I think,
Managed VM is a reason

00:00:32.570 --> 00:00:35.100
they should look at it, and
of course, for everybody else,

00:00:35.100 --> 00:00:36.240
it opens new possibilities.

00:00:36.240 --> 00:00:38.050
So walk us through some of that.

00:00:38.050 --> 00:00:40.300
LUDOVIC CHAMPENOIS: Managed
VM was announced last week

00:00:40.300 --> 00:00:42.117
in San Francisco,
so it's brand new.

00:00:42.117 --> 00:00:44.200
MALE SPEAKER: So everybody
has access to this now?

00:00:44.200 --> 00:00:46.158
LUDOVIC CHAMPENOIS:
Everybody has access to it.

00:00:46.158 --> 00:00:51.800
Before, we were running a
private trusted tester trial,

00:00:51.800 --> 00:00:54.500
but now everybody
can try Managed VM.

00:00:54.500 --> 00:00:57.870
Managed VM is really
App Engine V2.

00:00:57.870 --> 00:01:01.340
This is a new App
Engine 2.0, which

00:01:01.340 --> 00:01:07.960
is based on all the
cloud platform features

00:01:07.960 --> 00:01:11.370
that we launched over
the last few years.

00:01:11.370 --> 00:01:15.320
So it's basically you keep the
App Engine model, very simple,

00:01:15.320 --> 00:01:17.970
just work on your
application, you deploy it

00:01:17.970 --> 00:01:20.380
and it scales automatically.

00:01:20.380 --> 00:01:22.450
We do failover.

00:01:22.450 --> 00:01:23.480
We manage for it.

00:01:23.480 --> 00:01:24.150
MALE SPEAKER: So keep all
the goodness of App Engine.

00:01:24.150 --> 00:01:25.775
LUDOVIC CHAMPENOIS:
You keep everything

00:01:25.775 --> 00:01:30.070
that was a value of App
Engine as we know it today.

00:01:30.070 --> 00:01:35.220
And then, in order to run in
the old Google data centers,

00:01:35.220 --> 00:01:38.970
App Engine had to give you some
restrictions because you cannot

00:01:38.970 --> 00:01:41.800
write to a file system, you
could not use native code

00:01:41.800 --> 00:01:44.734
because, guess what, with
native code you can explore

00:01:44.734 --> 00:01:45.400
the environment.

00:01:45.400 --> 00:01:48.809
 

00:01:48.809 --> 00:01:50.350
MALE SPEAKER: So
for Java developers,

00:01:50.350 --> 00:01:51.350
there was a [INAUDIBLE].

00:01:51.350 --> 00:01:55.840
LUDOVIC CHAMPENOIS: Some people
were not very happy with this.

00:01:55.840 --> 00:01:59.310
I agree, but with
value added on terms

00:01:59.310 --> 00:02:01.600
of the scalability
of the platform,

00:02:01.600 --> 00:02:03.800
you had to give
away a few features.

00:02:03.800 --> 00:02:06.760
So App Engine v2,
or Managed VMs,

00:02:06.760 --> 00:02:10.759
is exactly removing
all those restrictions.

00:02:10.759 --> 00:02:13.430
Basically, you run a container.

00:02:13.430 --> 00:02:16.450
You have heard at
Devoxx this week,

00:02:16.450 --> 00:02:18.473
everybody's taking
about containers.

00:02:18.473 --> 00:02:21.050
MALE SPEAKER: It's kind
of a trending thing, yes.

00:02:21.050 --> 00:02:24.940
LUDOVIC CHAMPENOIS: So a
container is a new WAR format.

00:02:24.940 --> 00:02:27.630
It's a new unit of deployment,
but it's not a new Java.

00:02:27.630 --> 00:02:33.050
It's your unit of processing,
whether it's a JVM or a JVM

00:02:33.050 --> 00:02:35.530
plus native code that you
want to call because you want

00:02:35.530 --> 00:02:39.060
to access a native image
library, for example,

00:02:39.060 --> 00:02:42.470
or a PDF generator,
et cetera, et cetera.

00:02:42.470 --> 00:02:47.820
So you can keep the simplicity
of App Engine, deploy

00:02:47.820 --> 00:02:49.670
it to Managed VM,
and, for example,

00:02:49.670 --> 00:02:52.705
use native code or AWG or--

00:02:52.705 --> 00:02:54.080
MALE SPEAKER: All
the things that

00:02:54.080 --> 00:02:56.487
were forbidden, that you
could not use before.

00:02:56.487 --> 00:02:58.570
LUDOVIC CHAMPENOIS: While
upgrading to Managed VM,

00:02:58.570 --> 00:03:03.090
we also upgraded all the
Servlet specifications

00:03:03.090 --> 00:03:05.560
we are using in
classic, and now you

00:03:05.560 --> 00:03:07.870
can do Servlet 3.1
with annotation.

00:03:07.870 --> 00:03:09.980
We're extremely
efficient in terms

00:03:09.980 --> 00:03:13.690
of processing those
annotations at the SDK time,

00:03:13.690 --> 00:03:16.480
before we deploy the
container to the cloud.

00:03:16.480 --> 00:03:19.460
 

00:03:19.460 --> 00:03:21.350
Managed VM is based
on Compute Engine,

00:03:21.350 --> 00:03:24.700
so it's App Engine running
on top of Compute Engine

00:03:24.700 --> 00:03:28.490
and running inside of VM,
but instead of giving you

00:03:28.490 --> 00:03:30.990
pure access to the
VM, we are running

00:03:30.990 --> 00:03:33.140
a Docker system inside this VM.

00:03:33.140 --> 00:03:35.420
So what you really
develop locally

00:03:35.420 --> 00:03:39.010
on your desktop
is a Docker image,

00:03:39.010 --> 00:03:41.650
so you test it with
Docker containers,

00:03:41.650 --> 00:03:44.050
and then once you're
OK, you can deploy it

00:03:44.050 --> 00:03:47.280
to the cloud using the
same exact image you

00:03:47.280 --> 00:03:48.160
have been using.

00:03:48.160 --> 00:03:50.570
MALE SPEAKER: Which is part
of the value of Docker,

00:03:50.570 --> 00:03:52.900
is to be able to have the
same exact environment

00:03:52.900 --> 00:03:54.980
in development and
production, no longer

00:03:54.980 --> 00:03:56.120
it works on my machine.

00:03:56.120 --> 00:03:58.960
But walk us through a little
bit for the developer what

00:03:58.960 --> 00:03:59.660
it means.

00:03:59.660 --> 00:04:03.970
Are they exposed to Docker
as such on the client side?

00:04:03.970 --> 00:04:05.840
LUDOVIC CHAMPENOIS: No.

00:04:05.840 --> 00:04:10.090
If you do nothing except
changing one line in your App

00:04:10.090 --> 00:04:13.540
Engine weblet XML, and
the line is VM true.

00:04:13.540 --> 00:04:15.290
So basically, you
declare to the system,

00:04:15.290 --> 00:04:17.640
I want to run in a
VMware environment.

00:04:17.640 --> 00:04:25.730
Then the SDK will
create the Docker image,

00:04:25.730 --> 00:04:28.130
instantiate a Docker
container for you,

00:04:28.130 --> 00:04:31.360
and you are not
exposed to docker.

00:04:31.360 --> 00:04:32.880
MALE SPEAKER: So
the App Engine SDK

00:04:32.880 --> 00:04:36.767
or the cloud SDK actually
extracts all that.

00:04:36.767 --> 00:04:38.600
LUDOVIC CHAMPENOIS:
Same commands as before.

00:04:38.600 --> 00:04:42.940
You run or you deploy your
application, and underneath,

00:04:42.940 --> 00:04:46.860
we will use a Docker system
running on your desktop,

00:04:46.860 --> 00:04:50.850
and we will execute this
Docker container for you.

00:04:50.850 --> 00:04:53.870
This is the out of the box
experience for App Engine V2

00:04:53.870 --> 00:04:56.030
or Managed VM.

00:04:56.030 --> 00:05:00.610
One line in your code,
and then suddenly, you're

00:05:00.610 --> 00:05:02.240
running in the
Docker environment.

00:05:02.240 --> 00:05:04.760
So now, once you are running
in this Docker environment,

00:05:04.760 --> 00:05:07.890
we give you, again,
access to the full JVM,

00:05:07.890 --> 00:05:09.820
but we give you access
to other runtimes.

00:05:09.820 --> 00:05:12.195
So obviously, we have
Java, Python, and Go,

00:05:12.195 --> 00:05:13.320
like App Engine previously.

00:05:13.320 --> 00:05:15.450
MALE SPEAKER: Even more
recent versions of Java?

00:05:15.450 --> 00:05:17.870
LUDOVIC CHAMPENOIS:
Java 7 out of the box,

00:05:17.870 --> 00:05:21.880
but if you want to start
customizing those runtimes,

00:05:21.880 --> 00:05:26.580
you can as well, because you
can edit a Docker file, which

00:05:26.580 --> 00:05:32.280
is a unit of description of
what is your Docker container.

00:05:32.280 --> 00:05:35.060
Instead of downloading
the open JDK 7,

00:05:35.060 --> 00:05:38.060
you can download
JDK 8 if you want,

00:05:38.060 --> 00:05:42.900
or even JDK 9, or even your
own build of JDK if you want,

00:05:42.900 --> 00:05:48.345
and this Managed VM will run
with this new JVM if you want.

00:05:48.345 --> 00:05:49.970
MALE SPEAKER: But
you were about to say

00:05:49.970 --> 00:05:53.075
that we can have also
brand new runtimes.

00:05:53.075 --> 00:05:54.450
LUDOVIC CHAMPENOIS:
Of course, we

00:05:54.450 --> 00:06:00.645
can customize all the ways
JVM running in this container,

00:06:00.645 --> 00:06:02.680
and we can also
explore new runtime.

00:06:02.680 --> 00:06:05.650
So for example, we have a
custom runtime called NodeJS.

00:06:05.650 --> 00:06:10.490
I guess NodeJS is extremely
popular for mobile developers,

00:06:10.490 --> 00:06:11.600
mobile back ends.

00:06:11.600 --> 00:06:14.222
 

00:06:14.222 --> 00:06:17.030
We kept the simplicity
of App Engine.

00:06:17.030 --> 00:06:19.780
We provide JavaScript
or NodeJS App Engine

00:06:19.780 --> 00:06:23.930
APIs for datastore,
memcache, [INAUDIBLE].

00:06:23.930 --> 00:06:28.110
All the APIs that are part
of the App Engine ecosystem

00:06:28.110 --> 00:06:31.000
can be accessed from
a NodeJS application.

00:06:31.000 --> 00:06:33.560
And suddenly you have
a brand new runtime,

00:06:33.560 --> 00:06:39.250
but using the same unit of
deployment, unit of execution

00:06:39.250 --> 00:06:42.710
and management in App Engine
so that we can scale you

00:06:42.710 --> 00:06:46.780
to many more VMs, depending
on the traffic you have.

00:06:46.780 --> 00:06:49.170
MALE SPEAKER: So
NodeJS is even newer.

00:06:49.170 --> 00:06:52.480
So Managed VM allowed for
something like NodeJS to exist.

00:06:52.480 --> 00:06:53.980
This is something
that Google worked

00:06:53.980 --> 00:06:55.050
on that is being offered.

00:06:55.050 --> 00:06:56.740
LUDOVIC CHAMPENOIS: Yes.

00:06:56.740 --> 00:07:00.750
It's still beta, but we did
all the API bindings for NodeJS

00:07:00.750 --> 00:07:02.680
for App Engine.

00:07:02.680 --> 00:07:06.020
You can use also Google
Cloud APIs as well.

00:07:06.020 --> 00:07:10.810
So if you want to access
Cloud Storage or mapreduce,

00:07:10.810 --> 00:07:14.380
the big data capabilities
of the cloud platform,

00:07:14.380 --> 00:07:18.810
you can also use that from
a generic NodeJS library

00:07:18.810 --> 00:07:25.327
that you add packet JSON to
describe that you depend on it.

00:07:25.327 --> 00:07:26.660
MALE SPEAKER: Any other runtime?

00:07:26.660 --> 00:07:28.280
I think Dart is supported
on the server as well.

00:07:28.280 --> 00:07:30.488
LUDOVIC CHAMPENOIS: We have
dart as well because Dart

00:07:30.488 --> 00:07:32.640
has been very, very
popular on the client side,

00:07:32.640 --> 00:07:36.680
and guess what, it's a full
feature server side language

00:07:36.680 --> 00:07:37.800
as well.

00:07:37.800 --> 00:07:42.220
The Dart team worked with
us to deliver a Dart runtime

00:07:42.220 --> 00:07:45.136
for App Engine as well.

00:07:45.136 --> 00:07:48.730
And same, instead of using
Java or Node, you use Dart,

00:07:48.730 --> 00:07:53.320
but the cloud SDK we are using
for your local development is

00:07:53.320 --> 00:07:54.140
the same.

00:07:54.140 --> 00:07:56.760
Basically, it's just
a Docker file saying,

00:07:56.760 --> 00:07:58.990
I want to use a
Java image or I want

00:07:58.990 --> 00:08:01.651
to use a NodeJS image
or a Dart image.

00:08:01.651 --> 00:08:02.650
MALE SPEAKER: OK, great.

00:08:02.650 --> 00:08:05.630
So I guess Google in
the cloud is embracing

00:08:05.630 --> 00:08:07.850
Docker, obviously,
trying to [INAUDIBLE]?

00:08:07.850 --> 00:08:09.850
LUDOVIC CHAMPENOIS: We
are embracing containers.

00:08:09.850 --> 00:08:13.160
I mean, we have been
using containers forever.

00:08:13.160 --> 00:08:17.920
App Engine in 2008 was running
in a [INAUDIBLE] group isolated

00:08:17.920 --> 00:08:19.570
environment in the cloud.

00:08:19.570 --> 00:08:23.190
We cannot really talk about it,
but this is how we were able

00:08:23.190 --> 00:08:27.390
to scale App Engine
as we know it today.

00:08:27.390 --> 00:08:30.270
The nice thing about
Docker is finally,

00:08:30.270 --> 00:08:33.360
the entire world is
recognizing that containers

00:08:33.360 --> 00:08:35.539
is the way to go.

00:08:35.539 --> 00:08:38.110
We are very happy that the
Docker ecosystem is there

00:08:38.110 --> 00:08:41.610
because it's not only Google
doing private technology.

00:08:41.610 --> 00:08:45.940
It's the entire community
actively participating

00:08:45.940 --> 00:08:47.707
in the Docker ecosystem,
which is great.

00:08:47.707 --> 00:08:49.790
MALE SPEAKER: And Docker
is hitting the sweet spot

00:08:49.790 --> 00:08:52.729
of being relevant both to
developers and to production,

00:08:52.729 --> 00:08:54.020
and I think that's very useful.

00:08:54.020 --> 00:08:55.186
LUDOVIC CHAMPENOIS: Exactly.

00:08:55.186 --> 00:08:56.970
This is the perfect
model for the future

00:08:56.970 --> 00:08:59.385
of cloud for all
the cloud providers.

00:08:59.385 --> 00:09:01.010
MALE SPEAKER: And so
you mentioned also

00:09:01.010 --> 00:09:04.330
that, obviously, Google is
very invested in Docker.

00:09:04.330 --> 00:09:07.211
We're also investing in things,
I would say, on top of Docker,

00:09:07.211 --> 00:09:08.210
things like [INAUDIBLE].

00:09:08.210 --> 00:09:09.543
LUDOVIC CHAMPENOIS: [INAUDIBLE].

00:09:09.543 --> 00:09:11.660
MALE SPEAKER: But
that is a subject

00:09:11.660 --> 00:09:13.840
of another interview
we'll have soon.

00:09:13.840 --> 00:09:15.465
LUDOVIC CHAMPENOIS:
We have a continuum

00:09:15.465 --> 00:09:17.590
from bare metal VMs
to cluster management,

00:09:17.590 --> 00:09:21.820
and then the other side of
the spectrum, which is I

00:09:21.820 --> 00:09:24.860
only focus on my
application, I deploy it

00:09:24.860 --> 00:09:27.134
and Google, please do
the management for me.

00:09:27.134 --> 00:09:29.300
MALE SPEAKER: And the scaling
and the load balancing

00:09:29.300 --> 00:09:29.966
and all of that.

00:09:29.966 --> 00:09:32.370
LUDOVIC CHAMPENOIS: And
from those two extremes,

00:09:32.370 --> 00:09:35.700
you create a brand new
VM through Managed VM,

00:09:35.700 --> 00:09:38.960
we have a spectrum of
capabilities and technology

00:09:38.960 --> 00:09:40.967
that you can, if you
want, start using.

00:09:40.967 --> 00:09:41.800
MALE SPEAKER: Right.

00:09:41.800 --> 00:09:43.500
So Managed VM, now in beta.

00:09:43.500 --> 00:09:44.590
Anybody can use it.

00:09:44.590 --> 00:09:45.630
Try it out.

00:09:45.630 --> 00:09:48.600
I think if you've
looked at App Engine

00:09:48.600 --> 00:09:50.830
before, you probably
should look at it again.

00:09:50.830 --> 00:09:53.690
It removes pretty much
all of the restrictions

00:09:53.690 --> 00:09:55.320
you might have come across.

00:09:55.320 --> 00:09:56.370
So thank you, Ludo.

00:09:56.370 --> 00:09:56.930
LUDOVIC CHAMPENOIS: Thank you.

00:09:56.930 --> 00:09:58.310
MALE SPEAKER: And
looking forward

00:09:58.310 --> 00:10:01.100
to the feedback of
people using that.

00:10:01.100 --> 00:10:17.742
 

