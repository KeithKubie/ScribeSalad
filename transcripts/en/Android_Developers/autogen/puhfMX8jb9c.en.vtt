WEBVTT
Kind: captions
Language: en

00:00:00.260 --> 00:00:03.610
 When your app gets great new information your user may love 

00:00:03.630 --> 00:00:06.720
 How he can share this information without interrupting it 

00:00:06.720 --> 00:00:08.470
 I'm Joanna Smith, and I'm here to tell you 

00:00:08.470 --> 00:00:11.050
 How a snackbar can change your life forever 

00:00:11.050 --> 00:00:13.060
 Or at least the life of your application. 

00:00:13.060 --> 00:00:15.900
 One of the most important points in communicating information in your app 

00:00:15.900 --> 00:00:18.660
 Related to the notifications on the screen 

00:00:18.660 --> 00:00:21.210
 But when that information is vital 

00:00:21.210 --> 00:00:24.770
 Or require the user to make a decision, you often have to use an "alert" 

00:00:24.770 --> 00:00:26.540
 Historically, you have two options here. 

00:00:26.540 --> 00:00:29.810
 First, a dialogue should clarify that new information to users 

00:00:29.810 --> 00:00:31.280
 So that they can act accordingly 

00:00:31.280 --> 00:00:32.840
 But the dialogues are very intrusive 

00:00:32.840 --> 00:00:35.700
 And force users to stop what they do to deal with your dialogue. 

00:00:35.700 --> 00:00:37.810
 I mean, do you enjoy being interrupted? 

00:00:37.810 --> 00:00:41.210
 Do you like to confirm that you really wanted to do something that you were already doing? 

00:00:41.210 --> 00:00:42.610
 Do you like urgent dialogues? 

00:00:42.610 --> 00:00:44.840
 I mean, that's pretty annoying, is not it? 

00:00:44.840 --> 00:00:47.910
 Therefore, the use of dialogues should be minimized, 

00:00:47.910 --> 00:00:50.589
 Which brings us to the second choice .. Toast 

00:00:50.589 --> 00:00:53.530
 Which you can use to confirm that what the user has done, 

00:00:53.530 --> 00:00:54.530
 Has already occurred. 

00:00:54.530 --> 00:00:57.630
 But what if the act is destructive such as "cancel"? 

00:00:57.630 --> 00:00:59.570
 Your user may not have done that 

00:00:59.570 --> 00:01:01.820
 Now he is horrified to look for retreat 

00:01:01.820 --> 00:01:04.430
 He wonders why he was not sure twice before canceling 

00:01:04.430 --> 00:01:05.960
 That's the perfect picture 

00:01:05.960 --> 00:01:06.710
 My God! 

00:01:06.710 --> 00:01:09.120
 Are you trying to spoil my life? 

00:01:09.120 --> 00:01:11.440
 Here comes the role of Snackbar. 

00:01:11.440 --> 00:01:14.241
 "Snack bar" is similar to "toast" but more versatile 

00:01:14.241 --> 00:01:17.130
 Because it is more interactive, such as displaying the Undo option 

00:01:17.130 --> 00:01:18.705
 Which your users are still searching for. 

00:01:18.705 --> 00:01:21.080
 "Snack bar" moves up from the bottom of the screen 

00:01:21.080 --> 00:01:23.050
 You can also wipe it away with your finger, or not. 

00:01:23.050 --> 00:01:26.774
 If you do nothing with him, his time will end and he will disappear on his own 

00:01:26.774 --> 00:01:29.200
 The Snack Bar contains a short message 

00:01:29.200 --> 00:01:31.750
 And can display one action as "undo". 

00:01:31.750 --> 00:01:35.630
 So now you have three components that will help you better boycott your users 

00:01:35.630 --> 00:01:38.750
 Use the dialog when the user response is central to the performance of your app 

00:01:38.750 --> 00:01:41.560
 Because you need to be a breaker at those moments 

00:01:41.560 --> 00:01:45.780
 But, use "Toast" to give your user little information that will not change anything. 

00:01:45.780 --> 00:01:49.890
 And for everything between them, "Snackbar" is your new favorite friend 

00:01:49.890 --> 00:01:54.480
 And so, a wonderful principle for another physical design came back to life in your application. 

00:01:54.480 --> 00:01:55.910
 So check the design library 

00:01:55.910 --> 00:01:58.810
 To get all the support you need to use Snack Bar in your application 

00:01:58.810 --> 00:02:01.310
 Enjoy a world of non-interrupt alerts 

00:02:01.310 --> 00:02:04.340
 But what is more important is to continue to build better applications. 

