WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.493
Because scan isn't an interesting serial primitive,

00:00:02.493 --> 00:00:04.886
it's a little bit harder to find a real-life example.

00:00:04.886 --> 00:00:07.587
The best example I know is balancing your checkbook,

00:00:07.587 --> 00:00:11.599
which was useful back in the Paleolithic days when people still wrote checks to each other.

00:00:11.599 --> 00:00:13.655
So let's take a look at an example.

00:00:13.655 --> 00:00:16.428
When you manually balanced your checkbook, you had a list of transactions

00:00:16.428 --> 00:00:18.660
and you usually had a couple columns in your checkbook.

00:00:18.660 --> 00:00:21.830
The 1st column has your transactions--your deposits and withdrawals.

00:00:21.830 --> 00:00:26.838
The 2nd column has your account balance--the cumulative sum of all the transactions so far.

00:00:26.838 --> 00:00:29.070
So let's do this as an example.

00:00:29.070 --> 00:00:32.500
We start off with nothing in our bank, and our first deposit is $20.

00:00:32.500 --> 00:00:38.013
So our bank balance is now $20. We add another $5, then we make 3 withdrawals.

00:00:38.013 --> 00:00:44.668
Withdraw $11, withdraw 9 more dollars, withdraw 3 more dollars

00:00:44.668 --> 00:00:46.693
leaving us with $2 in our bank account.

00:00:46.693 --> 00:00:49.554
Add in another $15 and so on.

00:00:50.139 --> 00:00:54.295
Now, the input to scan is this column of transactions,

00:00:54.295 --> 00:00:57.851
and the output of scan is like your bank balance.

00:00:57.851 --> 00:01:00.072
What you can see is that at any given time

00:01:00.072 --> 00:01:04.319
your balance is the cumulative sum of all the transactions that you've seen so far.

00:01:04.319 --> 00:01:07.373
Scan here is calculating a running sum of its input.

00:01:07.373 --> 00:01:09.868
That's a perfectly cromulent way to think about scan.

00:01:09.868 --> 00:01:12.654
So now let's turn to the mathematical description.

