WEBVTT
Kind: captions
Language: en

00:00:04.019 --> 00:00:05.500
JULIA FERRAIOLI:
Hello, everyone.

00:00:05.500 --> 00:00:06.160
I'm Julia.

00:00:06.160 --> 00:00:08.880
I'm ready and willing
and able to talk to you

00:00:08.880 --> 00:00:13.260
about this concept of blurring
the infrastructure platform

00:00:13.260 --> 00:00:13.850
divide.

00:00:13.850 --> 00:00:16.230
It's something I'm
really excited about.

00:00:16.230 --> 00:00:17.910
We've been talking
about it for a while,

00:00:17.910 --> 00:00:19.618
because it seems like
there's this really

00:00:19.618 --> 00:00:21.790
big split in between the two.

00:00:21.790 --> 00:00:23.875
Who here works with
infrastructure as a service?

00:00:25.480 --> 00:00:26.260
A few people.

00:00:26.260 --> 00:00:28.430
How about platform as a service?

00:00:28.430 --> 00:00:29.390
A few people.

00:00:29.390 --> 00:00:31.940
And it tends-- it's
an interesting choice

00:00:31.940 --> 00:00:34.340
that people think that
they have to make.

00:00:34.340 --> 00:00:35.850
So let's dive in.

00:00:38.120 --> 00:00:41.110
So right now, if
you're trying to build

00:00:41.110 --> 00:00:43.540
a cloud-powered application--
whether you're building it

00:00:43.540 --> 00:00:46.800
from scratch, or you're maybe
trying to move something

00:00:46.800 --> 00:00:49.970
onto the cloud-- you feel like
you have to make this choice.

00:00:49.970 --> 00:00:51.645
And it's like
almost a reckoning.

00:00:51.645 --> 00:00:53.310
You have to decide.

00:00:53.310 --> 00:00:54.850
Put your money where your mouth.

00:00:54.850 --> 00:00:57.745
Say, OK, well, I'm going
to go with infrastructure.

00:00:58.930 --> 00:01:01.170
And for us on Google
Cloud Platform,

00:01:01.170 --> 00:01:03.870
that's our Compute
Engine, right?

00:01:03.870 --> 00:01:06.810
And it's a choice that a
lot of people tend to make.

00:01:06.810 --> 00:01:08.660
It's a familiar concept.

00:01:08.660 --> 00:01:12.580
You can develop against a Linux
operating system that you know,

00:01:12.580 --> 00:01:13.920
that's familiar to you.

00:01:13.920 --> 00:01:16.260
It's an easy sell to developers,
because they're already

00:01:16.260 --> 00:01:18.530
familiar working in
that environment.

00:01:18.530 --> 00:01:21.760
It's an easy sell to the people
that hold the purse strings,

00:01:21.760 --> 00:01:24.980
because they understand
it really well.

00:01:24.980 --> 00:01:26.480
They've had to buy servers.

00:01:26.480 --> 00:01:28.480
They've had to make
that investment.

00:01:28.480 --> 00:01:31.360
This is just in a slightly
different form factor.

00:01:31.360 --> 00:01:35.740
But there's a lot of the hidden
costs in terms of overhead.

00:01:35.740 --> 00:01:38.260
You have to manage
the operating system.

00:01:38.260 --> 00:01:39.720
You have to manage the updates.

00:01:40.830 --> 00:01:42.540
I'm seeing some nods
in the audience,

00:01:42.540 --> 00:01:43.792
and some like, oh, yeah.

00:01:45.126 --> 00:01:46.000
That's an investment.

00:01:46.000 --> 00:01:47.350
That's a lot to make.

00:01:47.350 --> 00:01:50.100
And so the amount of code--
the infrastructure code--

00:01:50.100 --> 00:01:53.860
that you have to write
dramatically expands.

00:01:53.860 --> 00:01:56.010
You have to hire Ops
people, or DevOps folks.

00:01:57.040 --> 00:02:00.250
People who fill the
function of DevOps.

00:02:00.250 --> 00:02:02.690
And you have to put
a lot of investment

00:02:02.690 --> 00:02:06.290
into maintaining your
various environments, right?

00:02:06.290 --> 00:02:08.500
Sometimes they're not the same.

00:02:08.500 --> 00:02:10.490
But you get a lot
of flexibility.

00:02:11.700 --> 00:02:15.430
Anything you could apt-get
install on your local machine

00:02:15.430 --> 00:02:17.950
is probably going
to be generally OK.

00:02:19.540 --> 00:02:20.580
On your virtual machine.

00:02:22.000 --> 00:02:25.030
But let's say you don't want
to make that investment.

00:02:25.030 --> 00:02:28.220
You don't want to
necessarily develop

00:02:28.220 --> 00:02:31.700
all of that surrounding code
that really doesn't contribute

00:02:31.700 --> 00:02:32.915
to your core features.

00:02:34.530 --> 00:02:36.700
Your offering-- the
product that you're

00:02:36.700 --> 00:02:39.510
trying to build-- probably
may not have something

00:02:39.510 --> 00:02:42.790
to do with the intricacies of
how the network is configured.

00:02:43.960 --> 00:02:46.070
So you go with the platform
as a service approach.

00:02:46.070 --> 00:02:48.590
This idea that you've
got these managed

00:02:48.590 --> 00:02:53.110
runtimes that take care of a
lot of the common scenarios.

00:02:53.110 --> 00:02:55.600
And for us, that's
Google App Engine.

00:02:55.600 --> 00:02:58.190
And Google App
Engine provides a ton

00:02:58.190 --> 00:03:03.170
of different APIs that make
common tasks really easy.

00:03:05.080 --> 00:03:10.430
And it's a great way to go if
you want to develop rapidly.

00:03:10.430 --> 00:03:11.730
Maybe you're a startup up.

00:03:11.730 --> 00:03:15.180
You want to get your minimum
viable product out the door.

00:03:15.180 --> 00:03:17.610
It's a great way
to go, because you

00:03:17.610 --> 00:03:20.460
don't have to worry about the
infrastructure surrounding it.

00:03:20.460 --> 00:03:22.320
You let Google
handle that for you.

00:03:22.320 --> 00:03:25.540
Let the platform as a service
provider handle it for you.

00:03:27.690 --> 00:03:29.650
So that's kind of
what's generally

00:03:29.650 --> 00:03:31.000
seen as the trade-off.

00:03:33.100 --> 00:03:35.620
But what if you didn't want
to make that trade-off?

00:03:38.620 --> 00:03:40.290
As we all say when
we're trying to think

00:03:40.290 --> 00:03:45.220
of new products or new features,
there's got to be a better way.

00:03:45.220 --> 00:03:46.185
And we think there is.

00:03:47.390 --> 00:03:49.870
So what if this wasn't
a choice that you

00:03:49.870 --> 00:03:51.205
had to make at the outset?

00:03:54.000 --> 00:03:57.460
And you saw this slide
just a few minutes ago.

00:03:57.460 --> 00:03:59.410
We crib notes from each
other all the time.

00:04:01.350 --> 00:04:05.860
So we think that the dichotomy
between infrastructure

00:04:05.860 --> 00:04:07.820
as a service and
platform as a service

00:04:07.820 --> 00:04:09.410
is actually a false dichotomy.

00:04:10.740 --> 00:04:12.560
We don't think it's real.

00:04:12.560 --> 00:04:15.860
We think that's the state
of how things have been,

00:04:15.860 --> 00:04:18.600
but it doesn't have
to be that way.

00:04:18.600 --> 00:04:21.490
And so that's our next
generation of cloud.

00:04:21.490 --> 00:04:24.440
Give you the flexibility
of infrastructure,

00:04:24.440 --> 00:04:29.010
but give you the ability to
be agile in your development

00:04:29.010 --> 00:04:30.095
with managed services.

00:04:31.940 --> 00:04:34.190
So we're going to talk
a little bit about some

00:04:34.190 --> 00:04:37.310
of the features that
allow you to bridge

00:04:37.310 --> 00:04:40.404
the gap between platform
and infrastructure.

00:04:40.404 --> 00:04:41.820
And we're really
excited about it.

00:04:41.820 --> 00:04:43.375
I'm really excited
about it myself.

00:04:45.640 --> 00:04:49.780
So let's start taking a look
at managed virtual machines.

00:04:52.600 --> 00:04:56.115
So I'm going to make my bad
pun here, so prepare yourself.

00:04:57.280 --> 00:04:59.870
At their core-- pun
definitely intended--

00:04:59.870 --> 00:05:03.250
they're based on Compute
Engine virtual machines.

00:05:03.250 --> 00:05:04.560
I'll be the one laughing at it.

00:05:04.560 --> 00:05:06.160
It's all good.

00:05:06.160 --> 00:05:08.920
So what you get is
the same strengths

00:05:08.920 --> 00:05:11.150
that Compute Engine has.

00:05:11.150 --> 00:05:13.310
The variety of machine types.

00:05:13.310 --> 00:05:15.045
The access to the
native resources.

00:05:17.120 --> 00:05:20.730
And the fact that it's simply a
virtual machine, except better.

00:05:22.000 --> 00:05:23.754
It has the same
strengths of App Engine,

00:05:23.754 --> 00:05:25.420
some of the same
strength of App Engine,

00:05:25.420 --> 00:05:30.040
like easy access to the managed
services that we provide there,

00:05:30.040 --> 00:05:31.760
and the developer productivity.

00:05:31.760 --> 00:05:33.420
The ability to develop quickly.

00:05:35.710 --> 00:05:37.580
How many of you have
heard the phrase,

00:05:37.580 --> 00:05:39.970
you get Google as your
site reliability engineer?

00:05:41.430 --> 00:05:41.930
Ooh.

00:05:41.930 --> 00:05:43.460
I get to introduce
something new.

00:05:43.460 --> 00:05:44.160
Yay!

00:05:44.160 --> 00:05:44.920
OK.

00:05:44.920 --> 00:05:49.952
So this is the idea that
with Google Managed Services,

00:05:49.952 --> 00:05:51.410
you should be able
to get something

00:05:51.410 --> 00:05:52.701
that's kind of meteorite-proof.

00:05:55.416 --> 00:05:57.290
It's kind of one of
those ridiculous things--

00:05:57.290 --> 00:06:00.550
I'm hearing laughter-- those
ridiculous things that we say.

00:06:00.550 --> 00:06:04.060
Because with Google
services, you

00:06:04.060 --> 00:06:07.200
can rest assured that
if, for some reason,

00:06:07.200 --> 00:06:10.730
a meteorite hits one
of our data centers,

00:06:10.730 --> 00:06:12.940
we're going to be
on call fixing it.

00:06:12.940 --> 00:06:15.320
We're going to be moving.

00:06:15.320 --> 00:06:17.610
We're going to be
managing the disaster.

00:06:17.610 --> 00:06:19.360
We're going to be
figuring out how

00:06:19.360 --> 00:06:20.710
to keep the services running.

00:06:20.710 --> 00:06:21.900
And we do that.

00:06:21.900 --> 00:06:27.220
And we have site reliability
engineers who do this for us.

00:06:27.220 --> 00:06:30.159
And so you don't have to handle
the pager anymore, right?

00:06:30.159 --> 00:06:32.200
Who here has been-- I
guess now it's a cellphone.

00:06:33.870 --> 00:06:34.740
Maybe text.

00:06:34.740 --> 00:06:36.270
I'm not sure.

00:06:36.270 --> 00:06:38.170
Who here's been woken
up by the pager,

00:06:38.170 --> 00:06:40.380
by the cellphone, when
your site goes down?

00:06:41.670 --> 00:06:42.890
We've got a few.

00:06:42.890 --> 00:06:44.040
We know how this goes.

00:06:44.040 --> 00:06:45.730
It makes us cry inside.

00:06:47.760 --> 00:06:50.700
But the idea with Google as
your site reliability engineer

00:06:50.700 --> 00:06:51.910
is that you can sleep.

00:06:53.200 --> 00:06:54.139
You can sleep through.

00:06:54.139 --> 00:06:55.930
Google is going to keep
everything running.

00:06:55.930 --> 00:06:56.971
It's going to be awesome.

00:06:59.540 --> 00:07:03.000
So if we take a look at
the graphic on the right

00:07:03.000 --> 00:07:05.670
here, with virtual
machines, it's really

00:07:05.670 --> 00:07:08.640
operates in between--
managed virtual machines--

00:07:08.640 --> 00:07:12.115
it operates in between
infrastructure and platform.

00:07:13.190 --> 00:07:16.840
With App Engine you can
say, oh, you know what?

00:07:16.840 --> 00:07:18.460
I have an app on App Engine.

00:07:18.460 --> 00:07:22.690
But all of a sudden I need to do
something that I traditionally

00:07:22.690 --> 00:07:26.450
couldn't do with a platform.

00:07:26.450 --> 00:07:29.000
Maybe it's access
to a library that's

00:07:29.000 --> 00:07:31.665
not allowed on the platform.

00:07:32.670 --> 00:07:36.312
Maybe it's some intense
data analysis in R.

00:07:36.312 --> 00:07:42.280
Or access to graphic
processing libraries in C.

00:07:42.280 --> 00:07:45.230
That you typically couldn't do
with the platform as a service

00:07:45.230 --> 00:07:46.210
approach.

00:07:46.210 --> 00:07:49.290
You can spin up a
managed virtual machine

00:07:49.290 --> 00:07:52.350
from App Engine, have
it take care of it,

00:07:52.350 --> 00:07:56.640
and all a sudden you've broken
out of platform as a service.

00:07:56.640 --> 00:07:58.775
Gotten the flexibility
of infrastructure.

00:08:02.850 --> 00:08:07.140
But it's not just
the other services

00:08:07.140 --> 00:08:10.510
that managed virtual
machines have access to.

00:08:10.510 --> 00:08:13.480
Because these
things are managed,

00:08:13.480 --> 00:08:17.770
we can do things like
co-locate your virtual machines

00:08:17.770 --> 00:08:19.690
near each other.

00:08:19.690 --> 00:08:21.307
So they have fast communication.

00:08:21.307 --> 00:08:23.140
So, again, you don't
have to worry about it.

00:08:26.070 --> 00:08:29.180
The second that we'll
talk about is this concept

00:08:29.180 --> 00:08:30.976
of replica pools that
you heard introduce

00:08:30.976 --> 00:08:32.059
just a little bit earlier.

00:08:33.100 --> 00:08:37.110
And this is the
idea that you give

00:08:37.110 --> 00:08:41.900
as a base template for what you
want your machine to look like.

00:08:43.610 --> 00:08:47.460
And we'll take that
template composed

00:08:47.460 --> 00:08:50.480
of the image, the metadata,
what you want going on

00:08:50.480 --> 00:08:53.615
in that virtual
machine, and make it so.

00:08:54.920 --> 00:08:58.900
So that's one template going
and spinning up many machines

00:08:58.900 --> 00:09:00.720
through this replica pool.

00:09:00.720 --> 00:09:03.220
And we also do things like
health-checking these instances

00:09:03.220 --> 00:09:05.370
to make sure that
they're responding.

00:09:05.370 --> 00:09:07.190
And we'll restart
them, so you don't

00:09:07.190 --> 00:09:09.410
have to, if something goes awry.

00:09:09.410 --> 00:09:12.640
If one of them stops
responding, you don't get paged.

00:09:12.640 --> 00:09:14.440
You don't get texted.

00:09:14.440 --> 00:09:16.030
We automatically restart them.

00:09:21.130 --> 00:09:25.000
And then, finally, because we
love developer productivity,

00:09:25.000 --> 00:09:27.970
your developer productivity
is our developer productivity.

00:09:27.970 --> 00:09:30.710
And so we've exposed
these features

00:09:30.710 --> 00:09:32.525
through the Deployment Manager.

00:09:34.150 --> 00:09:38.360
And this is within our
Google Cloud SDK, G Cloud.

00:09:38.360 --> 00:09:40.190
And the Deployment
Manager is basically

00:09:40.190 --> 00:09:44.500
a JSON-based template--
somewhat like you see here--

00:09:44.500 --> 00:09:47.750
that specify a set of
modules for deployment.

00:09:49.370 --> 00:09:52.680
And what it does is
it takes that template

00:09:52.680 --> 00:09:54.680
and builds a deployment
to that spec.

00:09:56.510 --> 00:09:58.620
So you can configure
and specify what

00:09:58.620 --> 00:10:01.630
you want you're managed
VMs to look like.

00:10:01.630 --> 00:10:05.780
You can specify the disks, the
network, the load balancer.

00:10:05.780 --> 00:10:08.880
You can configure how you
want it to load balance.

00:10:08.880 --> 00:10:11.835
You can configure auto-scaling
with Deployment Manager.

00:10:13.130 --> 00:10:16.440
And it's a really
simple way to create

00:10:16.440 --> 00:10:20.640
complex fleets of
virtual machines

00:10:20.640 --> 00:10:22.280
that can go out and
do your bidding.

00:10:22.280 --> 00:10:23.931
Like a minion.

00:10:23.931 --> 00:10:25.430
You'll hear that
word a couple times

00:10:25.430 --> 00:10:26.740
throughout the entire day.

00:10:26.740 --> 00:10:27.240
I promise.

00:10:30.380 --> 00:10:32.860
And within this-- we don't
have it on the slide--

00:10:32.860 --> 00:10:36.380
but you can configure
a health model.

00:10:36.380 --> 00:10:38.279
Define what you
think is unhealthy

00:10:38.279 --> 00:10:39.195
for a virtual machine.

00:10:40.550 --> 00:10:42.760
And once it fails
that check, we'll

00:10:42.760 --> 00:10:47.140
go and restart that virtual
machine, if, again, something

00:10:47.140 --> 00:10:47.730
goes wrong.

00:10:49.930 --> 00:10:51.090
So it's pretty cool.

00:10:51.090 --> 00:10:53.110
We're going to go back
to a couple of the slides

00:10:53.110 --> 00:10:57.255
that you saw in the keynote,
and go into a bit more depth.

00:10:58.600 --> 00:11:00.540
Let's look at computing
as a spectrum.

00:11:00.540 --> 00:11:03.390
I like to refer to it as
the continuum of computing,

00:11:03.390 --> 00:11:05.420
but that's because I
like alliteration, so.

00:11:06.740 --> 00:11:09.340
And so at the base we've
got Compute Engine.

00:11:09.340 --> 00:11:10.610
Those virtual machines.

00:11:10.610 --> 00:11:14.080
Those world-class
optimized virtual machines

00:11:14.080 --> 00:11:16.060
that we've done a
lot of work to make

00:11:16.060 --> 00:11:18.550
sure they're fast to start up.

00:11:18.550 --> 00:11:22.750
Seconds from command to
create to ready to go.

00:11:24.840 --> 00:11:28.095
Have fast, reliable
disk performance.

00:11:29.250 --> 00:11:30.950
And great networking.

00:11:30.950 --> 00:11:32.680
We've done a lot of
work to make sure

00:11:32.680 --> 00:11:34.710
that that's a good place
for you to develop.

00:11:34.710 --> 00:11:38.070
So if you want to go the
pure infrastructure route,

00:11:38.070 --> 00:11:39.240
you can do that.

00:11:39.240 --> 00:11:43.220
And you can configure the
networking and the disks,

00:11:43.220 --> 00:11:48.260
and manage it with your own code
or with open-source technology

00:11:48.260 --> 00:11:49.576
like Chef and Puppet.

00:11:51.920 --> 00:11:53.240
And that's a great way to go.

00:11:54.460 --> 00:11:55.710
But if you say, you know what?

00:11:55.710 --> 00:11:57.850
I don't really want
to manage all of it.

00:11:58.860 --> 00:12:00.140
It's a lot of work.

00:12:00.140 --> 00:12:02.270
I have better things
or other things

00:12:02.270 --> 00:12:04.140
that my developers can be doing.

00:12:04.140 --> 00:12:07.920
You can take a step
back and say, OK, well,

00:12:07.920 --> 00:12:11.657
let's ask Google to actually
manage our deployments for us.

00:12:11.657 --> 00:12:13.240
And you can do that
with Replica Pool.

00:12:14.500 --> 00:12:18.600
And then, you can still handle
the operating system updates

00:12:18.600 --> 00:12:20.720
and security patches,
but you could

00:12:20.720 --> 00:12:22.420
make it a little bit
easier on yourself.

00:12:24.620 --> 00:12:29.280
The amount of code to deal with
the infrastructure lessens.

00:12:29.280 --> 00:12:31.506
And you can concentrate
more on the code

00:12:31.506 --> 00:12:32.755
you write to develop features.

00:12:35.080 --> 00:12:39.400
But take a step back, and you
want to hand a little bit more

00:12:39.400 --> 00:12:39.910
off.

00:12:39.910 --> 00:12:40.910
Focus a little bit more.

00:12:40.910 --> 00:12:42.540
Maybe you have a smaller team.

00:12:42.540 --> 00:12:45.090
This is great use for when
you have a smaller team,

00:12:45.090 --> 00:12:46.415
so you can focus their efforts.

00:12:47.770 --> 00:12:50.449
You can move up the stack to
managed virtual machines, which

00:12:50.449 --> 00:12:50.990
we went into.

00:12:52.950 --> 00:12:53.450
OK.

00:12:54.990 --> 00:12:57.640
But you're just
starting out, maybe.

00:12:57.640 --> 00:13:00.850
You say, I just want
to write features.

00:13:00.850 --> 00:13:03.330
I'm going to write the
stuff that my user is going

00:13:03.330 --> 00:13:06.010
to see and play with
on a daily basis.

00:13:06.010 --> 00:13:08.050
You can do that with
App Engine today.

00:13:08.050 --> 00:13:10.060
You can do it with
managed runtimes.

00:13:10.060 --> 00:13:12.680
And we'll manage your
serving stack for you.

00:13:15.390 --> 00:13:20.030
But we talked about going up in
the level of abstraction here.

00:13:21.360 --> 00:13:25.760
You can get where you want
with agility and flexibility.

00:13:25.760 --> 00:13:28.190
Figure out where you
lie in that spectrum.

00:13:28.190 --> 00:13:30.950
But what happens if, say, you're
developing your App Engine

00:13:30.950 --> 00:13:36.780
application, and you want
to move down the stack.

00:13:36.780 --> 00:13:37.550
You can do that.

00:13:37.550 --> 00:13:42.030
You can so-called break the
glass beneath your feet,

00:13:42.030 --> 00:13:44.760
and get a little bit
more into the details.

00:13:45.826 --> 00:13:48.200
And you can do that all the
way down into Compute Engine.

00:13:49.670 --> 00:13:52.895
So you can grow your business.

00:13:54.210 --> 00:13:56.740
And when you want a
little bit more control,

00:13:56.740 --> 00:13:57.830
you can take that back.

00:14:01.230 --> 00:14:03.305
It's a really nifty
way to develop.

00:14:04.360 --> 00:14:05.200
So let's do a demo.

00:14:06.936 --> 00:14:07.435
Yeah.

00:14:08.740 --> 00:14:14.560
So we're going to do a demo
of managed virtual machines.

00:14:14.560 --> 00:14:19.070
We wanted something to
really illustrate the power

00:14:19.070 --> 00:14:21.060
and how awesome it is.

00:14:21.060 --> 00:14:24.657
So we thought about what
will be most applicable here.

00:14:24.657 --> 00:14:26.490
And we wanted it to be
something that people

00:14:26.490 --> 00:14:29.237
dealt with it a lot.

00:14:29.237 --> 00:14:30.820
And so this is a
problem-- we're going

00:14:30.820 --> 00:14:32.750
to solve a problem
that I've seen people

00:14:32.750 --> 00:14:37.980
deal with at the office, over
the lunch table, on planes.

00:14:37.980 --> 00:14:42.250
I even gave a tutorial on
my living room couch once.

00:14:42.250 --> 00:14:43.000
No joke.

00:14:43.000 --> 00:14:44.820
Have I set it up enough?

00:14:44.820 --> 00:14:45.531
Yeah.

00:14:45.531 --> 00:14:46.030
OK.

00:14:46.660 --> 00:14:48.035
We're going to
talk about Sudoku.

00:14:52.050 --> 00:14:56.650
So Sudoku is basically a logic
puzzle where you've got a 9

00:14:56.650 --> 00:15:00.590
by 9 grid, and you've got
the numbers one through nine,

00:15:00.590 --> 00:15:05.730
and they can only appear once in
row, column, and 3 by 3 square.

00:15:05.730 --> 00:15:08.200
The ones that are a little
bit darker shaded there.

00:15:09.520 --> 00:15:11.210
So I want to win
friends and influence

00:15:11.210 --> 00:15:12.950
people with my
mad Sudoku skills.

00:15:14.240 --> 00:15:16.895
So I want to make
this automated.

00:15:18.130 --> 00:15:19.725
I want something
to solve it for me.

00:15:19.725 --> 00:15:21.100
I've got good
skills, but they're

00:15:21.100 --> 00:15:24.900
like-- sometimes the
expert puzzles mystify me.

00:15:24.900 --> 00:15:29.120
So let's make it happen with
managed virtual machines.

00:15:29.120 --> 00:15:32.600
Well, luckily, we've
got Peter Norvig.

00:15:32.600 --> 00:15:36.180
Peter Norvig is
one of the parents

00:15:36.180 --> 00:15:37.990
of modern artificial
intelligence.

00:15:37.990 --> 00:15:40.880
He quite literally
wrote the book

00:15:40.880 --> 00:15:42.190
on artificial intelligence.

00:15:42.190 --> 00:15:43.940
And I actually
have it back home.

00:15:43.940 --> 00:15:45.670
Every 800 pages
was scintillating.

00:15:48.070 --> 00:15:51.140
And he wrote a fantastic essay--
I highly recommend you check it

00:15:51.140 --> 00:15:54.300
out afterwards-- on
solving any Sudoku puzzle.

00:15:54.300 --> 00:15:56.030
If it's solvable, it can do it.

00:15:57.400 --> 00:16:02.330
So we can transform a Sudoku
board into a data structure,

00:16:02.330 --> 00:16:04.950
feed it into the
algorithm, and it'll

00:16:04.950 --> 00:16:07.030
go and give us the answer.

00:16:07.030 --> 00:16:07.600
Pretty nifty.

00:16:09.010 --> 00:16:13.190
But I've got this.

00:16:13.190 --> 00:16:15.520
I've got the one in
the airline magazine.

00:16:15.520 --> 00:16:18.680
I've got the one in the booklet
that my parents gave me.

00:16:18.680 --> 00:16:20.530
And they're not
going to wait for me

00:16:20.530 --> 00:16:25.300
to go move it to a data
structure, run the algorithm,

00:16:25.300 --> 00:16:27.220
and then give them the answer.

00:16:27.220 --> 00:16:30.450
That's not going to be quite
as impressive as it could

00:16:30.450 --> 00:16:33.810
So what we want is to be
able to solve this one.

00:16:33.810 --> 00:16:35.670
This one on paper.

00:16:35.670 --> 00:16:37.660
And, luckily, there's
computer vision

00:16:37.660 --> 00:16:39.170
to help us along the way.

00:16:39.170 --> 00:16:42.016
There is a library-- an open
source library-- called OpenCV

00:16:42.016 --> 00:16:45.145
that implements a variety of
computer vision libraries.

00:16:46.410 --> 00:16:51.540
But my front end for my
application is on App Engine.

00:16:51.540 --> 00:16:54.580
And App Engine has
a lot of runtimes,

00:16:54.580 --> 00:17:00.886
but it doesn't do C and C+
code, which is what OpenCV is

00:17:00.886 --> 00:17:01.510
implemented in.

00:17:02.680 --> 00:17:05.940
So I'm in this bit
of a quandary here.

00:17:05.940 --> 00:17:09.290
Except I just gave this talk
about managed virtual machines.

00:17:09.290 --> 00:17:12.630
We can break the glass of App
Engine, and go to managed VMs.

00:17:13.819 --> 00:17:16.630
So this is what our architecture
somewhat looks like.

00:17:16.630 --> 00:17:20.290
As far as architecture diagrams
go, it's pretty simple.

00:17:20.290 --> 00:17:25.700
Requests for the images come
into the App Engine front end.

00:17:25.700 --> 00:17:29.150
We'll feed them into
the task queue, which

00:17:29.150 --> 00:17:30.930
is Google's distributed
queueing service.

00:17:32.010 --> 00:17:35.040
And that task queue
will farm out the image

00:17:35.040 --> 00:17:38.240
to a managed virtual
machine on our back end.

00:17:40.330 --> 00:17:42.570
That back end has
OpenCV installed.

00:17:42.570 --> 00:17:45.120
It'll solve the puzzle,
and then return it.

00:17:45.120 --> 00:17:47.880
And will impress a lot
of people, I'm positive.

00:17:49.220 --> 00:17:53.240
So if you've developed an
App Engine application,

00:17:53.240 --> 00:17:57.890
the app.yaml on the left
will be somewhat familiar.

00:17:57.890 --> 00:17:59.720
But it's not that complicated.

00:17:59.720 --> 00:18:02.590
What we're going to do is-- this
is talking about our front end

00:18:02.590 --> 00:18:04.870
here-- we've got
a Python runtime,

00:18:04.870 --> 00:18:06.370
because we at
Google love Python.

00:18:07.420 --> 00:18:09.530
We've got some
handlers for the URLs.

00:18:09.530 --> 00:18:11.270
And we're going to
use some libraries.

00:18:11.270 --> 00:18:12.360
It's not super-important.

00:18:14.270 --> 00:18:17.930
On the right-hand side is
our back end specification.

00:18:19.090 --> 00:18:22.000
And this is what we're running
on those virtual machines.

00:18:22.000 --> 00:18:25.307
And the things to
note here are these.

00:18:26.680 --> 00:18:29.170
This VM colon True
tells us that we're

00:18:29.170 --> 00:18:32.570
going to be running on a
managed virtual machine.

00:18:32.570 --> 00:18:34.800
And these VM settings
at the bottom

00:18:34.800 --> 00:18:37.860
tell us what's going on there.

00:18:37.860 --> 00:18:40.410
So we're going to run on
an n1-standard-1-- this

00:18:40.410 --> 00:18:45.400
is one of our standard instance
types for Compute Engine--

00:18:45.400 --> 00:18:47.100
and we're going to
install some software

00:18:47.100 --> 00:18:48.630
with this apt.get
install section.

00:18:50.230 --> 00:18:54.400
And we're obviously going
to be installing OpenCV,

00:18:54.400 --> 00:18:57.150
but you could install whatever
you want there, right?

00:18:57.150 --> 00:19:01.520
You can think of what
your use case would be.

00:19:03.919 --> 00:19:05.460
And then to deploy
it, it's one line.

00:19:07.090 --> 00:19:09.610
G Cloud app update,
and then the path

00:19:09.610 --> 00:19:11.870
to your application directory.

00:19:11.870 --> 00:19:14.600
In this case, we're in
our application directory.

00:19:16.680 --> 00:19:17.910
So let's do the live demo.

00:19:17.910 --> 00:19:20.120
And I think actually have
to unlock my machine now.

00:19:20.120 --> 00:19:21.940
So one second before we switch.

00:19:27.130 --> 00:19:27.680
OK.

00:19:27.680 --> 00:19:29.840
Can we switch to
the demo, please?

00:19:29.840 --> 00:19:31.170
Awesome.

00:19:31.170 --> 00:19:33.020
So this is our nifty--
where's my mouse?--

00:19:33.020 --> 00:19:34.500
App Engine front end.

00:19:34.500 --> 00:19:38.685
And what we're going to
do is capture a picture.

00:19:39.690 --> 00:19:42.640
And so you know
that it's live, hi.

00:19:43.650 --> 00:19:47.149
We're going to do some magic
and take a picture of our--

00:19:47.149 --> 00:19:48.899
AUDIENCE: [INAUDIBLE]
can't see your face.

00:19:48.899 --> 00:19:49.733
Let's see your face.

00:19:49.733 --> 00:19:50.774
JULIA FERRAIOLI: Aw, man.

00:19:50.774 --> 00:19:51.890
I had already set it up.

00:19:51.890 --> 00:19:52.389
Hi.

00:19:55.290 --> 00:19:56.180
OK.

00:19:56.180 --> 00:20:02.420
So let's capture
this Sudoku puzzle.

00:20:02.420 --> 00:20:06.900
And the image recognition
software is looking for lines.

00:20:08.040 --> 00:20:09.860
So it can do line detection.

00:20:09.860 --> 00:20:11.460
And it's going to
look for these lines

00:20:11.460 --> 00:20:14.480
on the outside to
recognize the puzzle.

00:20:14.480 --> 00:20:16.146
You could probably
do this in a bit more

00:20:16.146 --> 00:20:17.710
of a sophisticated way.

00:20:17.710 --> 00:20:18.560
But it's a demo.

00:20:18.560 --> 00:20:20.630
It illustrates the concept.

00:20:20.630 --> 00:20:23.410
So let's focus it, shall we?

00:20:24.800 --> 00:20:25.300
Yeah.

00:20:27.180 --> 00:20:28.300
So much better.

00:20:28.300 --> 00:20:30.020
Now nobody gets a migraine.

00:20:30.020 --> 00:20:32.020
So let's take an image.

00:20:32.020 --> 00:20:33.159
Looks pretty good.

00:20:33.159 --> 00:20:33.825
Could be better.

00:20:34.880 --> 00:20:38.394
But what we're going to do
now is tell it to solve it.

00:20:38.394 --> 00:20:39.935
We're going to pray
in the demo gods.

00:20:41.320 --> 00:20:42.075
Make a sacrifice.

00:20:43.895 --> 00:20:44.395
Oh, no.

00:20:46.140 --> 00:20:48.240
And this is how you
know it's a live demo.

00:20:51.320 --> 00:20:52.310
So let's try it again.

00:20:52.310 --> 00:20:53.893
We're going to use
a different puzzle.

00:20:55.280 --> 00:20:57.495
Mandy can confirm this
worked during rehearsal.

00:20:59.330 --> 00:21:00.540
She'll back me up here.

00:21:00.540 --> 00:21:01.456
AUDIENCE: [INAUDIBLE].

00:21:02.664 --> 00:21:04.080
JULIA FERRAIOLI:
Yeah, I think so.

00:21:05.870 --> 00:21:06.540
Let's see.

00:21:07.959 --> 00:21:08.875
AUDIENCE: [INAUDIBLE].

00:21:09.637 --> 00:21:12.220
JULIA FERRAIOLI: Could we maybe
lower the lights on the stage?

00:21:12.220 --> 00:21:13.178
Would that be possible?

00:21:18.790 --> 00:21:20.890
Let's see if that works
a little bit better.

00:21:25.264 --> 00:21:26.180
How's that look, guys?

00:21:27.320 --> 00:21:28.176
Let's try it.

00:21:28.176 --> 00:21:29.092
AUDIENCE: [INAUDIBLE].

00:21:30.790 --> 00:21:32.540
JULIA FERRAIOLI: Did
that actually change?

00:21:32.540 --> 00:21:32.830
AUDIENCE: Yeah.

00:21:32.830 --> 00:21:33.746
JULIA FERRAIOLI: Yeah.

00:21:33.746 --> 00:21:34.290
OK.

00:21:34.290 --> 00:21:34.790
Whoo!

00:21:34.790 --> 00:21:35.370
Sanity check.

00:21:37.294 --> 00:21:38.718
Yes!

00:21:38.718 --> 00:21:39.218
Oh!

00:21:39.218 --> 00:21:39.718
Woo-hoo!

00:21:41.142 --> 00:21:42.104
We got it!

00:21:42.104 --> 00:21:44.520
[APPLAUSE]

00:21:44.520 --> 00:21:47.770
So this is your day to
learn how to impress.

00:21:47.770 --> 00:21:48.770
Impress your colleagues.

00:21:48.770 --> 00:21:50.430
Impress your friends.

00:21:50.430 --> 00:21:54.080
And we'll go back to the
slides, if you get a chance.

00:21:54.080 --> 00:21:55.001
Thank you.

00:21:55.001 --> 00:21:55.917
AUDIENCE: [INAUDIBLE].

00:21:57.160 --> 00:21:58.500
JULIA FERRAIOLI: Was it correct?

00:21:58.500 --> 00:21:58.830
AUDIENCE: [INAUDIBLE].

00:21:58.830 --> 00:21:59.510
JULIA FERRAIOLI: You know what?

00:21:59.510 --> 00:22:00.670
AUDIENCE: Check these out here.

00:22:00.670 --> 00:22:02.545
JULIA FERRAIOLI: I'll
let you check that out.

00:22:04.672 --> 00:22:06.630
We'll file a bug with
Peter Norvig if it isn't.

00:22:08.660 --> 00:22:10.240
OK, so that's our live demo.

00:22:11.420 --> 00:22:15.480
But what happens if this
application gets under load?

00:22:17.140 --> 00:22:18.420
App Engine auto-scales.

00:22:18.420 --> 00:22:19.160
Problem solved!

00:22:21.310 --> 00:22:22.260
No.

00:22:22.260 --> 00:22:23.950
No, right?

00:22:23.950 --> 00:22:25.920
So App Engine does auto-scale.

00:22:25.920 --> 00:22:28.887
So once traffic
increases, we will

00:22:28.887 --> 00:22:31.220
increase the number of front
ends for you automatically.

00:22:32.152 --> 00:22:32.860
Which is awesome.

00:22:34.410 --> 00:22:39.950
But that task queue will just
get longer and longer, right?

00:22:39.950 --> 00:22:43.109
Because we have a number
of virtual machines.

00:22:43.109 --> 00:22:43.900
They'll keep going.

00:22:43.900 --> 00:22:45.191
They'll keep returning puzzles.

00:22:45.930 --> 00:22:47.840
But what we actually
need to do is

00:22:47.840 --> 00:22:50.220
increase the number
of virtual machines--

00:22:50.220 --> 00:22:53.530
the managed VMs--
on the back end.

00:22:53.530 --> 00:22:56.060
And you can actually do
this programmatically,

00:22:56.060 --> 00:22:58.180
simply with one line.

00:22:58.180 --> 00:23:01.095
We use the modules library and
set the number of instances.

00:23:02.100 --> 00:23:03.680
And because you
actually know what's

00:23:03.680 --> 00:23:06.210
going on on the back end--
we actually don't, right?

00:23:06.210 --> 00:23:10.360
We don't necessarily
know what your flow is.

00:23:10.360 --> 00:23:13.820
Do they know we're using
OpenCV to solve this puzzle?

00:23:14.910 --> 00:23:16.192
Probably not.

00:23:16.192 --> 00:23:17.650
They know we have
OpenCV installed.

00:23:19.270 --> 00:23:22.120
But you know what the
heuristic is going to be.

00:23:22.120 --> 00:23:26.100
And so you can tell
us when to scale up

00:23:26.100 --> 00:23:30.170
the number of instances--
and to scale down-- simply

00:23:30.170 --> 00:23:31.310
by calling this line.

00:23:33.640 --> 00:23:34.320
Cool.

00:23:34.320 --> 00:23:34.820
OK.

00:23:34.820 --> 00:23:38.260
So that's-- I think
we're at the end here.

00:23:38.260 --> 00:23:39.030
But don't worry.

00:23:39.030 --> 00:23:41.150
I return on stage
at some point today.

00:23:42.990 --> 00:23:45.121
So the thing to take
away is this choice

00:23:45.121 --> 00:23:47.620
that you've been told that you
have to make-- infrastructure

00:23:47.620 --> 00:23:50.870
or platform-- it's
a false dichotomy.

00:23:53.210 --> 00:23:55.080
It operates in between the two.

00:23:55.080 --> 00:23:57.580
We have a great
set of technology

00:23:57.580 --> 00:23:59.950
that helps you out doing that.

00:23:59.950 --> 00:24:01.660
And letting you
break the glass when

00:24:01.660 --> 00:24:05.150
you need to move up,
in terms of agility,

00:24:05.150 --> 00:24:08.579
or down, in terms
of flexibility.

00:24:08.579 --> 00:24:09.870
And we're only getting started.

00:24:09.870 --> 00:24:10.670
So we hope you join us.

00:24:10.670 --> 00:24:12.460
And we can't wait to
see what you build.

00:24:12.460 --> 00:24:14.380
So thank you.

