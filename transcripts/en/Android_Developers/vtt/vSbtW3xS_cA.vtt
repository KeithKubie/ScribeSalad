WEBVTT
Kind: captions
Language: en

00:00:03.816 --> 00:00:05.640
JAN-FELIX SCHMAKEIT: --Google
+ this week.

00:00:05.640 --> 00:00:09.665
This week we have a special
guest talking to us about the

00:00:09.665 --> 00:00:11.400
AdMob ads SDK.

00:00:11.400 --> 00:00:13.180
But, as you can see, something
happened to [? Anchor ?]

00:00:13.180 --> 00:00:13.530
last week.

00:00:13.530 --> 00:00:14.570
I'm not sure what happened.

00:00:14.570 --> 00:00:16.520
So he's not with us today.

00:00:16.520 --> 00:00:17.710
But we have Tony with us.

00:00:17.710 --> 00:00:18.950
So, Tony?

00:00:18.950 --> 00:00:19.660
TONY CHAN: Hey.

00:00:19.660 --> 00:00:20.160
I'm Tony.

00:00:20.160 --> 00:00:21.590
I'm from Hong Kong.

00:00:21.590 --> 00:00:23.942
I'm also a developer
of [? SDK. ?]

00:00:23.942 --> 00:00:26.800
How are you guys?

00:00:26.800 --> 00:00:28.860
JAN-FELIX SCHMAKEIT: And we have
Raj, our special guest

00:00:28.860 --> 00:00:31.230
joining us today from Mountain
View, I believe?

00:00:31.230 --> 00:00:31.770
RAJ PARAMESWARAN: Yes.

00:00:31.770 --> 00:00:32.380
Hey, I'm Raj.

00:00:32.380 --> 00:00:33.370
I'm from Mountain View.

00:00:33.370 --> 00:00:38.110
I work as part of the AdMob
developer relations team.

00:00:38.110 --> 00:00:38.590
JAN-FELIX SCHMAKEIT: Cool.

00:00:38.590 --> 00:00:40.630
I guess we can get started
straight away.

00:00:40.630 --> 00:00:47.215
So the Google AdMob ads SDK,
Raj, take it from here.

00:00:47.215 --> 00:00:47.510
RAJ PARAMESWARAN: Sure.

00:00:47.510 --> 00:00:50.340
So, like I said, I'm part of the
AdMob developer relations

00:00:50.340 --> 00:00:53.135
team and I'm going to be talking
about the AdMob ads

00:00:53.135 --> 00:00:55.110
SDK today to you guys.

00:00:55.110 --> 00:00:58.430
Next slide.

00:00:58.430 --> 00:00:58.900
Oh.

00:00:58.900 --> 00:01:01.420
So let's start at the
very beginning.

00:01:01.420 --> 00:01:04.190
You've just written your Android
application, now what?

00:01:04.190 --> 00:01:06.700
There's lots of apps out there
and sometimes they're really

00:01:06.700 --> 00:01:07.620
hard to distinguish.

00:01:07.620 --> 00:01:10.270
So how do you pull users
in to your app?

00:01:10.270 --> 00:01:12.980
One option is that you can
promote yourself by setting up

00:01:12.980 --> 00:01:16.330
an ad campaign through a network
to advertise on tens

00:01:16.330 --> 00:01:17.640
of thousands of apps.

00:01:17.640 --> 00:01:19.680
These are the kinds of ads that
you typically see that

00:01:19.680 --> 00:01:24.150
take users right into an
application's Play store page,

00:01:24.150 --> 00:01:26.470
where they can download
the app from there.

00:01:26.470 --> 00:01:27.720
Next slide.

00:01:29.830 --> 00:01:32.620
So now let's say that you've
already got users and they're

00:01:32.620 --> 00:01:34.240
using your application.

00:01:34.240 --> 00:01:36.440
Of course, one of the ways to
monetize here is to make your

00:01:36.440 --> 00:01:38.020
application a paid app.

00:01:38.020 --> 00:01:41.720
But the reality is that people
really love free apps.

00:01:41.720 --> 00:01:43.880
Advertising is a great
option here.

00:01:43.880 --> 00:01:46.180
It can give you the ongoing
revenue stream that

00:01:46.180 --> 00:01:47.780
continuously comes in.

00:01:47.780 --> 00:01:50.950
It's also generally easy to
implement, no matter how big

00:01:50.950 --> 00:01:53.120
your application is.

00:01:53.120 --> 00:01:56.050
Next slide.

00:01:56.050 --> 00:01:58.370
And this is what
AdMob comes in.

00:01:58.370 --> 00:01:59.945
So let's start with
the basics.

00:01:59.945 --> 00:02:02.130
AdMob's a mobile app advertising
network that

00:02:02.130 --> 00:02:05.250
allows you to monetize your app
and allows advertisers to

00:02:05.250 --> 00:02:06.780
promote their content.

00:02:06.780 --> 00:02:08.150
How does this work?

00:02:08.150 --> 00:02:12.170
Advertisers provide AdMob ads to
run on its mobile network.

00:02:12.170 --> 00:02:14.870
AdMob relies on you, the mobile
app developer, to serve

00:02:14.870 --> 00:02:16.490
these ads in your apps.

00:02:16.490 --> 00:02:20.096
We also recently announced
AdWords advertisers, which are

00:02:20.096 --> 00:02:23.690
in the millions, can actually
buy inventory from AdMob.

00:02:23.690 --> 00:02:26.040
This means that if you're an
AdMob ad developer, you've

00:02:26.040 --> 00:02:28.910
also got access to these
millions of advertisers.

00:02:28.910 --> 00:02:32.110
So on the left side of this
picture, you can also see that

00:02:32.110 --> 00:02:35.070
you as app developers can
actually become advertisers

00:02:35.070 --> 00:02:38.410
and promote your app with
mobile advertising.

00:02:38.410 --> 00:02:41.180
Next slide.

00:02:41.180 --> 00:02:43.310
So let's touch on the
promotion aspect

00:02:43.310 --> 00:02:44.290
of this for a bit.

00:02:44.290 --> 00:02:46.740
So promoting with AdMob lets you
set up an ad campaign and

00:02:46.740 --> 00:02:48.800
advertise on a plethora
of apps.

00:02:48.800 --> 00:02:50.920
You can target based on
different factors such as

00:02:50.920 --> 00:02:54.150
device, country, platform, or
even demographic such as

00:02:54.150 --> 00:02:56.560
gender, age, and other things.

00:02:56.560 --> 00:02:58.450
There's a number of benefits
for doing this.

00:02:58.450 --> 00:03:01.600
If your advertising gets you
in to the top 50 in the app

00:03:01.600 --> 00:03:04.200
store, for example, you're
likely to enjoy even more

00:03:04.200 --> 00:03:07.480
organic downloads from people
browsing the store.

00:03:07.480 --> 00:03:10.660
Cross-promotion is another way
to get users into your apps.

00:03:10.660 --> 00:03:13.020
Once you build a loyal user base
for one of your apps that

00:03:13.020 --> 00:03:15.950
you've built, you can actually
leverage this to promote

00:03:15.950 --> 00:03:16.820
another app.

00:03:16.820 --> 00:03:19.670
Your loyal users will probably
be more willing to try other

00:03:19.670 --> 00:03:21.040
apps as well.

00:03:21.040 --> 00:03:24.025
House ads specifically allow you
to promote any other app

00:03:24.025 --> 00:03:25.370
in your portfolio.

00:03:25.370 --> 00:03:27.220
So this can even be
used to actually

00:03:27.220 --> 00:03:29.760
promote apps beyond mobile.

00:03:29.760 --> 00:03:32.280
So that's definitely a thing
to think about as well.

00:03:32.280 --> 00:03:33.530
Next slide.

00:03:36.510 --> 00:03:38.440
So now back to the
monetizing side.

00:03:38.440 --> 00:03:40.930
Monetizing with AdMob
is super easy.

00:03:40.930 --> 00:03:44.330
All you need to do is include
the Google AdMob ads SDK in

00:03:44.330 --> 00:03:47.530
your app, create a banner view
within your application, and

00:03:47.530 --> 00:03:49.440
load ads into it.

00:03:49.440 --> 00:03:51.910
Ads from Google advertisers are
then displayed in your app

00:03:51.910 --> 00:03:54.530
and users click on the
ads that they deal.

00:03:54.530 --> 00:03:57.430
You get paid every time a user
clicks on ads in your

00:03:57.430 --> 00:03:58.660
application.

00:03:58.660 --> 00:04:01.810
An ad-based business model is a
continuing stream of revenue

00:04:01.810 --> 00:04:03.590
coming in to your app.

00:04:03.590 --> 00:04:04.785
It scales as you grow.

00:04:04.785 --> 00:04:08.370
So as your app gets bigger and
you get more users, you have

00:04:08.370 --> 00:04:11.240
much more opportunities
to monetize.

00:04:11.240 --> 00:04:14.330
Next slide.

00:04:14.330 --> 00:04:17.110
So let's break down how
the numbers work here.

00:04:17.110 --> 00:04:19.529
So using the AdMob SDK, you're
actually going to make

00:04:19.529 --> 00:04:22.300
requests to AdMob's
server for ads.

00:04:22.300 --> 00:04:24.490
In this particular example,
let's say that your

00:04:24.490 --> 00:04:28.020
application makes 120,000
requests to AdMob.

00:04:28.020 --> 00:04:31.040
AdMob typically can't fill
all of those requests.

00:04:31.040 --> 00:04:32.560
A number of factors
play in here,

00:04:32.560 --> 00:04:34.410
inventory is one of them.

00:04:34.410 --> 00:04:37.930
If we say that 83% of those
requests gets filled, you've

00:04:37.930 --> 00:04:39.860
got 100,000 impressions.

00:04:39.860 --> 00:04:42.230
An ad impression is actually
reported whenever an

00:04:42.230 --> 00:04:44.800
individual ad is displayed
in your app.

00:04:44.800 --> 00:04:47.660
CTR, or the Click Through Rate,
is a ratio that shows

00:04:47.660 --> 00:04:51.110
how often people who see your
ad end up clicking on it.

00:04:51.110 --> 00:04:53.320
Of course, a higher CTR
is a good thing.

00:04:53.320 --> 00:04:55.670
It's a good indication of
whether users find your ads

00:04:55.670 --> 00:04:57.630
helpful and relevant.

00:04:57.630 --> 00:05:02.070
In this example, we've
got a CTR of 1.5%.

00:05:02.070 --> 00:05:04.660
When you factor in your
impressions, this turns into

00:05:04.660 --> 00:05:06.850
1,500 clicks.

00:05:06.850 --> 00:05:09.790
AdMob actually pays out on
a cost per click basis.

00:05:09.790 --> 00:05:12.820
So your app earns money based on
the number of actual clicks

00:05:12.820 --> 00:05:14.630
that are received.

00:05:14.630 --> 00:05:17.470
Exactly how much you make per
click can actually vary

00:05:17.470 --> 00:05:20.040
substantially based on
a number of factors.

00:05:20.040 --> 00:05:23.570
These include the type of app,
your user base, and general

00:05:23.570 --> 00:05:24.850
market conditions.

00:05:24.850 --> 00:05:27.310
We actually operate an ad
marketplace, so the price of a

00:05:27.310 --> 00:05:29.890
click at any given moment is
determined by the bids that

00:05:29.890 --> 00:05:32.160
are being placed by
the advertisers.

00:05:32.160 --> 00:05:34.820
If we assume a CPC of $0.10
here, for the sake of

00:05:34.820 --> 00:05:37.750
simplicity, it's really easy to
calculate what your revenue

00:05:37.750 --> 00:05:39.900
is going to be at the end.

00:05:39.900 --> 00:05:41.150
Next slide.

00:05:43.550 --> 00:05:45.910
So we tried to make getting
started with the AdMob Android

00:05:45.910 --> 00:05:47.630
SDK as easy as possible.

00:05:47.630 --> 00:05:49.990
You can check out our
step-by-step tutorials as well

00:05:49.990 --> 00:05:53.320
as documentation on
developers.google.com.

00:05:53.320 --> 00:05:56.570
If you've got any issues with
it, me and the rest of the

00:05:56.570 --> 00:05:58.160
developer relations
team are always

00:05:58.160 --> 00:05:59.600
willing to hear you out.

00:05:59.600 --> 00:06:01.210
You also need to sign up for a

00:06:01.210 --> 00:06:03.890
publisher account on AdMob.com.

00:06:03.890 --> 00:06:06.010
AdMob.com is the front end where
you'll be controlling

00:06:06.010 --> 00:06:08.320
things related to actually
serving ads within your

00:06:08.320 --> 00:06:09.820
application.

00:06:09.820 --> 00:06:12.810
To get up and going with the
Android SDK, you've got to at

00:06:12.810 --> 00:06:15.460
least compile against Android
3.2, but we've got support all

00:06:15.460 --> 00:06:17.490
the way down to 1.5.

00:06:17.490 --> 00:06:18.740
Next slide.

00:06:20.790 --> 00:06:23.440
So the first step to getting
up and going is setting up

00:06:23.440 --> 00:06:24.530
your manifest.

00:06:24.530 --> 00:06:27.780
You've got to declare an ad
activity in your manifest.

00:06:27.780 --> 00:06:29.530
We've bolded out the
two things that

00:06:29.530 --> 00:06:30.460
you've got to do there.

00:06:30.460 --> 00:06:32.940
At the bottom you see declaring
the ad activity.

00:06:32.940 --> 00:06:35.260
You've also got to make sure
to declare the internet and

00:06:35.260 --> 00:06:37.760
access network state permissions
of course, because

00:06:37.760 --> 00:06:40.660
ad requests are going
to require these.

00:06:40.660 --> 00:06:42.800
We also give you the ability
to handle your own config

00:06:42.800 --> 00:06:45.330
changes, so the ad won't be
refreshed when some of the

00:06:45.330 --> 00:06:47.130
config changes occur.

00:06:47.130 --> 00:06:48.380
Next slide.

00:06:51.400 --> 00:06:53.930
So let's look at the code
to create your Adview.

00:06:53.930 --> 00:06:55.480
This also is very simple.

00:06:55.480 --> 00:06:57.790
You've got to import the
necessary classes from the

00:06:57.790 --> 00:06:58.600
[INAUDIBLE]

00:06:58.600 --> 00:06:59.860
ads package.

00:06:59.860 --> 00:07:02.530
Here we're declaring
an Adview instance.

00:07:02.530 --> 00:07:05.760
And you're going to have to
specify an ad unit ID there.

00:07:05.760 --> 00:07:08.310
This is the ad unit ID that you
get from AdMob.com when

00:07:08.310 --> 00:07:11.740
you sign up for a publisher
account.

00:07:11.740 --> 00:07:14.180
You can actually add the view
into the UI and load it with

00:07:14.180 --> 00:07:16.510
an ad by giving it an
ad request object.

00:07:16.510 --> 00:07:19.160
When you're developing though,
we ask you to make sure that

00:07:19.160 --> 00:07:21.990
you're in test mode to avoid
being disabled for clicking on

00:07:21.990 --> 00:07:23.450
your own ads.

00:07:23.450 --> 00:07:24.700
Next slide.

00:07:26.960 --> 00:07:30.460
So one of the things to keep in
mind is that before being

00:07:30.460 --> 00:07:32.880
passed to Adview dot load ad,
which we saw in the previous

00:07:32.880 --> 00:07:35.750
slide, an ad request can be
customized to allow Google to

00:07:35.750 --> 00:07:37.760
actually better target
those ads.

00:07:37.760 --> 00:07:40.110
So you can use the ad test
device method during

00:07:40.110 --> 00:07:42.900
development to avoid generating
false impressions

00:07:42.900 --> 00:07:44.760
by requesting test
ads for specific

00:07:44.760 --> 00:07:46.720
devices or your emulator.

00:07:46.720 --> 00:07:49.590
You can add any devices
that you've got there.

00:07:49.590 --> 00:07:50.280
[INAUDIBLE]

00:07:50.280 --> 00:07:51.710
should actually help
you out in this.

00:07:51.710 --> 00:07:52.965
It should print the device's
[INAUDIBLE]

00:07:52.965 --> 00:07:55.550
five hashed ID for
convenience.

00:07:55.550 --> 00:07:58.700
You can also specify location
and demographic targeting

00:07:58.700 --> 00:07:59.300
information.

00:07:59.300 --> 00:08:02.880
However, out of respect for user
privacy, we do ask that

00:08:02.880 --> 00:08:06.920
you only specify the location
and demographic targeting info

00:08:06.920 --> 00:08:10.570
if it's already being used
in your application.

00:08:10.570 --> 00:08:11.820
Next slide.

00:08:14.670 --> 00:08:18.180
You can also track ad life
cycle events like request

00:08:18.180 --> 00:08:21.980
failures or click throughs by
implementing ad listener in an

00:08:21.980 --> 00:08:24.150
object you passed
through to the

00:08:24.150 --> 00:08:26.080
Adview dot set ad listener.

00:08:26.080 --> 00:08:28.180
This interface can be
implemented by either your

00:08:28.180 --> 00:08:30.290
activity or any other object.

00:08:30.290 --> 00:08:32.580
These allow you to do certain
things in your application if

00:08:32.580 --> 00:08:35.980
an ad is received or an
ad request fails.

00:08:35.980 --> 00:08:39.100
You can also stop or pause
things in your app if an ad

00:08:39.100 --> 00:08:41.570
click is going to take a user
out of an application into the

00:08:41.570 --> 00:08:43.429
Play store, for example.

00:08:43.429 --> 00:08:44.679
Next slide.

00:08:47.300 --> 00:08:49.850
So an important thing we tried
to encourage users to do is

00:08:49.850 --> 00:08:52.620
use the right ad format
for the device that

00:08:52.620 --> 00:08:54.300
the users are on.

00:08:54.300 --> 00:08:56.730
We saw that the Adview
constructor earlier takes a

00:08:56.730 --> 00:08:58.560
primer which lets you
specify the type of

00:08:58.560 --> 00:08:59.730
format that you want.

00:08:59.730 --> 00:09:01.630
In our core examples
case earlier, it

00:09:01.630 --> 00:09:03.860
was ad size dot banner.

00:09:03.860 --> 00:09:07.565
So notice how on the example on
the left we've requested an

00:09:07.565 --> 00:09:09.940
ad that is way too big
for this screen.

00:09:09.940 --> 00:09:12.070
This is actually our medium
rectangle format.

00:09:12.070 --> 00:09:16.420
We recommend that people show
this only on tablets.

00:09:16.420 --> 00:09:18.580
It's not a great user experience
when an ad is

00:09:18.580 --> 00:09:22.210
taking up 50% of your
screen real estate.

00:09:22.210 --> 00:09:24.780
On the other hand, on the right
side, we've got a custom

00:09:24.780 --> 00:09:26.470
format that looks
way too small.

00:09:26.470 --> 00:09:29.290
You can't actually even
tell what it is.

00:09:29.290 --> 00:09:31.810
So at that point, the user
experience is suffering again.

00:09:31.810 --> 00:09:34.950
The format we typically
recommend for phones are 320

00:09:34.950 --> 00:09:37.890
by 50 banners, which is
the one we've got

00:09:37.890 --> 00:09:39.360
in the middle there.

00:09:39.360 --> 00:09:40.610
Next slide.

00:09:42.800 --> 00:09:47.510
So the most popular banner size
that we have is the 320

00:09:47.510 --> 00:09:49.420
by 50 banner, which
you can use on

00:09:49.420 --> 00:09:51.900
both phones and tablets.

00:09:51.900 --> 00:09:53.780
It's mainly used on applications
developed for

00:09:53.780 --> 00:09:54.660
phones though.

00:09:54.660 --> 00:09:58.570
For tablet ops, we do offer some
larger sizes such as the

00:09:58.570 --> 00:10:01.600
320 by 50 medium rectangle,
which we saw in the previous

00:10:01.600 --> 00:10:05.370
slide, and a 728 by 90
leader board ad.

00:10:05.370 --> 00:10:08.100
However, the smart banner format
is a new format we

00:10:08.100 --> 00:10:09.910
introduced back in April.

00:10:09.910 --> 00:10:12.760
These span the entire width of
the screen and have variable

00:10:12.760 --> 00:10:15.140
height depending on
the screen size.

00:10:15.140 --> 00:10:18.330
Next slide.

00:10:18.330 --> 00:10:21.710
So these smart banner ad units,
which we introduced in

00:10:21.710 --> 00:10:26.450
the 6.0 SDK, I believe, actually
render screen-wide

00:10:26.450 --> 00:10:30.750
banner ads across any screen
size for different devices in

00:10:30.750 --> 00:10:32.250
different orientations.

00:10:32.250 --> 00:10:35.120
So what these do is they help
deal with the increasing

00:10:35.120 --> 00:10:37.970
screen fragmentation across
different devices by detecting

00:10:37.970 --> 00:10:40.410
the width of the phone and it's
current orientation and

00:10:40.410 --> 00:10:43.050
making the Adview
that same size.

00:10:43.050 --> 00:10:45.060
This also solves another problem
of requesting the

00:10:45.060 --> 00:10:47.680
right type of format for the
screen mode, so this is

00:10:47.680 --> 00:10:49.390
whether the screen is
in landscape or

00:10:49.390 --> 00:10:51.230
whether it's in portrait.

00:10:51.230 --> 00:10:53.560
And requesting a smart banner
ad is super easy.

00:10:53.560 --> 00:10:55.840
We've got a smart banner ad size
constant that you just

00:10:55.840 --> 00:10:58.490
pass through to your
constructor.

00:10:58.490 --> 00:10:59.740
Next slide.

00:11:02.050 --> 00:11:04.330
So we've also got some
guidelines on where your

00:11:04.330 --> 00:11:08.050
applications should be placed
in your actual app.

00:11:08.050 --> 00:11:09.950
Where your ads should be
placed in the actual

00:11:09.950 --> 00:11:11.190
application.

00:11:11.190 --> 00:11:13.430
I've outlined some bad
placements on this slide.

00:11:13.430 --> 00:11:16.920
So we can start with the one
on the left actually.

00:11:16.920 --> 00:11:19.780
Needless to say, don't make your
ads transparent or cover

00:11:19.780 --> 00:11:21.910
touchable areas with your ads.

00:11:21.910 --> 00:11:23.590
That's generally a bad thing.

00:11:23.590 --> 00:11:26.850
The middle example deals with
something sort of similar.

00:11:26.850 --> 00:11:29.660
Ads shouldn't be placed where
users will randomly click or

00:11:29.660 --> 00:11:31.370
place their fingers
on the screen.

00:11:31.370 --> 00:11:34.200
In this example, if you're
playing this game, you're very

00:11:34.200 --> 00:11:38.770
likely to slip up and click
that ad erroneously.

00:11:38.770 --> 00:11:42.710
Another example of something
like this could be if you got

00:11:42.710 --> 00:11:46.540
a children's app, for example,
where bubbles are randomly

00:11:46.540 --> 00:11:48.270
appearing on the screen and
you're popping them.

00:11:48.270 --> 00:11:52.020
You probably don't want to ads
on a screen like that.

00:11:52.020 --> 00:11:54.780
The example on the right doesn't
necessarily cover a

00:11:54.780 --> 00:11:57.960
touchable area, but it is very
close to the buttons.

00:11:57.960 --> 00:12:01.290
So don't place the ads close to
or underneath the buttons

00:12:01.290 --> 00:12:03.600
or any other object
which users may

00:12:03.600 --> 00:12:05.360
accidentally click on.

00:12:05.360 --> 00:12:08.300
You don't want users to click
on the adds without knowing.

00:12:08.300 --> 00:12:11.820
Essentially, try not to put ads
anywhere where you may get

00:12:11.820 --> 00:12:13.120
erroneous clicks.

00:12:13.120 --> 00:12:16.720
Ultimately it leads to a bad
user experience and bad

00:12:16.720 --> 00:12:19.900
reviews for your
app typically.

00:12:19.900 --> 00:12:22.180
Next slide.

00:12:22.180 --> 00:12:23.760
So let's talk [INAUDIBLE]

00:12:26.810 --> 00:12:30.120
Another important facet of AdMob
ads are the filters that

00:12:30.120 --> 00:12:31.470
we've got set up.

00:12:31.470 --> 00:12:34.310
So the filters tab provides a
huge amount of control over

00:12:34.310 --> 00:12:37.130
the ads that show up
on your inventory.

00:12:37.130 --> 00:12:40.490
We've got URL, text, category,
and language filters.

00:12:40.490 --> 00:12:41.520
URL filters--

00:12:41.520 --> 00:12:44.810
pretty simple, they prevent ads
leaking to a specific URL

00:12:44.810 --> 00:12:47.050
or domain from appearing
in your app.

00:12:47.050 --> 00:12:51.140
Text filters prevent ads
containing or matching text

00:12:51.140 --> 00:12:53.520
phrases from being shown.

00:12:53.520 --> 00:12:55.947
Category and site filters
prevent certain categories of

00:12:55.947 --> 00:12:57.030
ads from being displayed.

00:12:57.030 --> 00:13:00.880
An example of this is you can
prevent image ads from being

00:13:00.880 --> 00:13:03.610
displayed, which would prevent
any type of image boundaries

00:13:03.610 --> 00:13:05.340
from being displayed
in your app.

00:13:05.340 --> 00:13:08.600
You can also enable
age-appropriate ads.

00:13:08.600 --> 00:13:12.420
So age-appropriate ads are
actually disabled by default.

00:13:12.420 --> 00:13:16.000
What enabling these allows you
to do is display ads that are

00:13:16.000 --> 00:13:19.245
rated as age-appropriate, so not
necessarily suitable for

00:13:19.245 --> 00:13:20.280
all audiences.

00:13:20.280 --> 00:13:23.500
Examples of these are gambling
and personal ads.

00:13:23.500 --> 00:13:26.700
AdMob actually doesn't accept
ads that promote any adult

00:13:26.700 --> 00:13:29.200
products or services.

00:13:29.200 --> 00:13:31.990
For the language filter, you
can prevent ads of certain

00:13:31.990 --> 00:13:33.770
languages from being displayed
on your app.

00:13:33.770 --> 00:13:37.080
Although we do recommend that
you make sure that none of

00:13:37.080 --> 00:13:40.230
these languages are relevant
to your user base.

00:13:40.230 --> 00:13:43.510
TONY CHAN: Raj, I just wanted
to interrupt a little bit.

00:13:43.510 --> 00:13:48.540
So in general for our policy
regarding ads on Android, I

00:13:48.540 --> 00:13:50.605
just wanted to add on top of--

00:13:50.605 --> 00:13:52.600
RAJ PARAMESWARAN: Sure.

00:13:52.600 --> 00:13:56.500
TONY CHAN: So one thing a
developer needs to remember

00:13:56.500 --> 00:14:01.440
now is that ads are really part
of the entire application

00:14:01.440 --> 00:14:02.210
experience.

00:14:02.210 --> 00:14:08.760
So as a policy, the content of
the ads is really part of the

00:14:08.760 --> 00:14:10.070
application itself.

00:14:10.070 --> 00:14:18.160
So if you use other advertising
networks, make

00:14:18.160 --> 00:14:22.060
sure you pay attention to that
because you may actually

00:14:22.060 --> 00:14:26.490
violate some content policy on
the Android phone if you're

00:14:26.490 --> 00:14:29.910
using ads that do not
comply with our

00:14:29.910 --> 00:14:31.780
general content policy.

00:14:31.780 --> 00:14:33.670
RAJ PARAMESWARAN:
No, definitely.

00:14:33.670 --> 00:14:35.690
No matter what ad network
you're looking at, it's

00:14:35.690 --> 00:14:39.070
something that you should make
sure that you're reading very

00:14:39.070 --> 00:14:40.210
explicitly.

00:14:40.210 --> 00:14:40.595
TONY CHAN: Cool.

00:14:40.595 --> 00:14:41.640
Thank you.

00:14:41.640 --> 00:14:41.920
RAJ PARAMESWARAN: Yeah.

00:14:41.920 --> 00:14:45.500
So going on, we actually usually
tell advertisers to be

00:14:45.500 --> 00:14:48.770
as permissive as possible using
all these filters, just

00:14:48.770 --> 00:14:50.980
because this does maximize the
amount of ads that are

00:14:50.980 --> 00:14:53.460
available to run on your
inventory and ensures that

00:14:53.460 --> 00:14:56.080
you're generating the highest
revenue potential that we can

00:14:56.080 --> 00:14:58.910
offer as an ad network.

00:14:58.910 --> 00:15:00.160
Next slide.

00:15:02.540 --> 00:15:04.380
So similarly, there's some
other things that you can

00:15:04.380 --> 00:15:07.170
actually do to optimize
your ad settings.

00:15:07.170 --> 00:15:09.550
You can also increase your fill
rate by taking advantage

00:15:09.550 --> 00:15:12.320
of Google certified ad
networks inventory.

00:15:12.320 --> 00:15:15.160
So with this option set, we will
actually attempt to fill

00:15:15.160 --> 00:15:18.740
your ad request with not only
ads from AdMob, which

00:15:18.740 --> 00:15:21.770
explicitly target mobile apps,
but also ads from Google

00:15:21.770 --> 00:15:25.150
certified ad networks and
general keyword targeted ads.

00:15:25.150 --> 00:15:29.130
So enabling these provides a
great opportunity to increase

00:15:29.130 --> 00:15:30.650
your fill rate and
your revenue.

00:15:30.650 --> 00:15:33.130
No code changes are actually
needed here.

00:15:33.130 --> 00:15:36.250
We conduct a pretty thorough
certification process before

00:15:36.250 --> 00:15:39.240
we let any network in for
third party ad survey.

00:15:39.240 --> 00:15:42.040
But you have to remember that
at this time you can't

00:15:42.040 --> 00:15:44.990
actually apply any of your ad
filters to these Google

00:15:44.990 --> 00:15:46.860
certified ad network ads.

00:15:46.860 --> 00:15:49.410
Just something to
keep in mind.

00:15:49.410 --> 00:15:52.960
It's also important to know
that you need to set your

00:15:52.960 --> 00:15:58.250
refresh rate at the
right amount.

00:15:58.250 --> 00:16:01.510
An ad that refreshes way too
often can definitely adversely

00:16:01.510 --> 00:16:03.030
affect your CTR.

00:16:03.030 --> 00:16:06.030
It doesn't give users a chance
to view the ad and decide if

00:16:06.030 --> 00:16:08.100
they are interested
in clicking it.

00:16:08.100 --> 00:16:10.810
We usually recommend that users
set their refresh rate

00:16:10.810 --> 00:16:12.970
between 45 and 60 seconds.

00:16:12.970 --> 00:16:15.935
This can all be managed within
the AdMob's front end

00:16:15.935 --> 00:16:17.640
interface actually.

00:16:17.640 --> 00:16:18.890
Next slide.

00:16:21.010 --> 00:16:24.850
So AdMob's great, but what if
you want to use a different ad

00:16:24.850 --> 00:16:27.590
network to actually
maximize your fill

00:16:27.590 --> 00:16:28.910
rate and your revenue.

00:16:28.910 --> 00:16:33.010
We actually offer a free
mediation service which

00:16:33.010 --> 00:16:35.480
developers can use to integrate
multiple ad networks

00:16:35.480 --> 00:16:38.550
into their application and make
service site decisions on

00:16:38.550 --> 00:16:40.430
how to distribute
their requests

00:16:40.430 --> 00:16:42.320
among those ad networks.

00:16:42.320 --> 00:16:45.590
So ad network ECPMs actually
usually vary over time, that's

00:16:45.590 --> 00:16:48.040
why your seeing that
graph right there.

00:16:48.040 --> 00:16:50.920
ECPMs are just your effective
cost per 1,000 impressions--

00:16:50.920 --> 00:16:52.890
how much money you're making.

00:16:52.890 --> 00:16:55.340
When you're using mediation,
you can actually find tune

00:16:55.340 --> 00:16:58.270
your mediation configuration
so that the ad network that

00:16:58.270 --> 00:17:00.800
performs the best gets
the most requests.

00:17:00.800 --> 00:17:02.780
If you keep track of how each
of your networks are

00:17:02.780 --> 00:17:04.900
performing and tune your
request distribution

00:17:04.900 --> 00:17:07.510
accordingly, you're essentially
optimizing your

00:17:07.510 --> 00:17:10.060
ECPM to make the most money.

00:17:10.060 --> 00:17:13.619
So keep in mind that some ad
networks do perform better in

00:17:13.619 --> 00:17:15.050
certain markets.

00:17:15.050 --> 00:17:18.109
AdMob mediation provides the
ability to enter regional and

00:17:18.109 --> 00:17:20.500
country level settings that
override the default ad

00:17:20.500 --> 00:17:22.520
network distribution centers.

00:17:22.520 --> 00:17:23.770
Next slide.

00:17:26.400 --> 00:17:28.780
Getting set up with mediation
is super easy.

00:17:28.780 --> 00:17:31.480
Just add your mediation ID,
which you can get in AdMob's

00:17:31.480 --> 00:17:34.060
front end, and you're all set.

00:17:34.060 --> 00:17:36.500
You don't need any additional
coding and you can even send

00:17:36.500 --> 00:17:37.960
special targeting parameters to

00:17:37.960 --> 00:17:40.660
specific ad network adapters.

00:17:40.660 --> 00:17:42.830
Remember though that if you
are adding third party

00:17:42.830 --> 00:17:45.310
networks to mediation, you'll
also need to include their

00:17:45.310 --> 00:17:48.912
SDKs and adaptors in
your projects.

00:17:48.912 --> 00:17:50.162
Next slide.

00:17:53.745 --> 00:17:55.750
That's it for me.

00:17:55.750 --> 00:17:57.010
JAN-FELIX SCHMAKEIT:
Yeah, fantastic.

00:17:57.010 --> 00:17:59.670
That looks really easy
to get started with.

00:17:59.670 --> 00:18:01.990
A lot of opportunities out
there for developers.

00:18:01.990 --> 00:18:02.360
Fantastic.

00:18:02.360 --> 00:18:03.750
Thank you very much.

00:18:03.750 --> 00:18:05.580
RAJ PARAMESWARAN:
You're welcome.

00:18:05.580 --> 00:18:07.180
JAN-FELIX SCHMAKEIT: So, Tony,
do we have anything on the

00:18:07.180 --> 00:18:09.010
moderator for this week?

00:18:09.010 --> 00:18:11.863
TONY CHAN: Yeah, so let
me take a quick look.

00:18:16.020 --> 00:18:21.200
Yes, I think we got two
questions on moderator.

00:18:21.200 --> 00:18:25.460
So let me read the
first one out.

00:18:25.460 --> 00:18:29.170
The first one is from
[? Eric, ?]

00:18:29.170 --> 00:18:32.950
so what are the benefits of
using AdMob over iAds or

00:18:32.950 --> 00:18:35.130
Millenial Media.

00:18:35.130 --> 00:18:36.050
So I guess, Raj?

00:18:36.050 --> 00:18:38.320
RAJ PARAMESWARAN: So iAd and
Millenial Media are competing

00:18:38.320 --> 00:18:41.050
ad networks and they differ in
a number of different ways--

00:18:41.050 --> 00:18:44.160
fill rate, ECPM, CPC are just
some of these factors.

00:18:44.160 --> 00:18:46.730
What I'd actually recommend is
that you can get set up with

00:18:46.730 --> 00:18:50.300
all of these networks using
mediation and see what works

00:18:50.300 --> 00:18:52.850
best for you on your specific
conditions.

00:18:52.850 --> 00:18:56.954
And that way you can best
optimize your own revenue.

00:18:56.954 --> 00:18:57.360
TONY CHAN: Cool.

00:18:57.360 --> 00:19:02.580
OK, so the next question
is from Simon.

00:19:02.580 --> 00:19:07.040
The question was, I want to
use Leap Bolt and AdMob.

00:19:07.040 --> 00:19:08.550
How can I do it?

00:19:08.550 --> 00:19:10.350
RAJ PARAMESWARAN: So mediation
is I guess

00:19:10.350 --> 00:19:12.270
the answer here again.

00:19:12.270 --> 00:19:15.350
So with mediation, we actually
do have out of the box support

00:19:15.350 --> 00:19:17.590
for a number of ad networks,
which means we've got

00:19:17.590 --> 00:19:18.700
adaptors for them.

00:19:18.700 --> 00:19:22.410
If there's an ad network that
we don't have some specific

00:19:22.410 --> 00:19:24.570
support for, you can actually
write something called a

00:19:24.570 --> 00:19:25.630
custom event.

00:19:25.630 --> 00:19:28.790
So what custom events allow you
to do is integrate custom

00:19:28.790 --> 00:19:32.150
code in to the mediation flow
so that they behave like any

00:19:32.150 --> 00:19:34.890
other ad network that
participates in mediation.

00:19:34.890 --> 00:19:38.540
We've got docs with this up on
developers.google.com, feel

00:19:38.540 --> 00:19:40.784
free to check them out.

00:19:40.784 --> 00:19:41.740
TONY CHAN: Thank you, Raj.

00:19:41.740 --> 00:19:45.180
I think that's all we have on
the moderator, Jan-Felix.

00:19:45.180 --> 00:19:45.800
JAN-FELIX SCHMAKEIT:
Yeah, fantastic.

00:19:45.800 --> 00:19:46.650
Thank you very much.

00:19:46.650 --> 00:19:49.850
So I think that's all we
have for this week.

00:19:49.850 --> 00:19:52.366
So thank you very much,
our special guest from

00:19:52.366 --> 00:19:53.600
Mountain View, Raj.

00:19:53.600 --> 00:19:54.400
Thank you, Tony.

00:19:54.400 --> 00:19:57.920
And yep, see you next time.

00:19:57.920 --> 00:19:59.130
RAJ PARAMESWARAN: Cool,
thanks a lot guys.

00:19:59.130 --> 00:20:00.380
JAN-FELIX SCHMAKEIT: Bye.

