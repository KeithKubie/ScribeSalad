WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:03:01.520
[MUSIC PLAYING]

00:03:01.520 --> 00:03:03.170
VAN RIPER: We're going to start
the live stream now, so

00:03:03.170 --> 00:03:04.460
for the benefit of the
live stream, I'd like

00:03:04.460 --> 00:03:06.810
to introduce this.

00:03:06.810 --> 00:03:10.570
We have Josh Woodward here from
the GDG Fresno who's also

00:03:10.570 --> 00:03:12.140
a member of the GDG[x]

00:03:12.140 --> 00:03:12.850
project.

00:03:12.850 --> 00:03:16.170
And the GDG[x] project, well,
he'll talk about it some more,

00:03:16.170 --> 00:03:19.040
but let me just say
it's way cool.

00:03:19.040 --> 00:03:21.730
We got a bunch of organizers,
not just here in the US but

00:03:21.730 --> 00:03:24.700
from all over the world, that
have been working on several

00:03:24.700 --> 00:03:27.210
open source projects
on GitHub.

00:03:27.210 --> 00:03:29.930
And one in particular that
just launched on the Play

00:03:29.930 --> 00:03:33.140
Store, the Frisbee project, is
that application that you can

00:03:33.140 --> 00:03:38.050
use here in Silicon Valley to
see what's going with our GDG,

00:03:38.050 --> 00:03:42.120
but also with the East Bay GDG,
the GDG in Fresno, the

00:03:42.120 --> 00:03:45.420
GDG in San Francisco, actually
a GDG anywhere in the world.

00:03:45.420 --> 00:03:47.570
I don't know if you realize it,
but we have GDGs in more

00:03:47.570 --> 00:03:51.110
than a hundred countries to
date, and this app actually

00:03:51.110 --> 00:03:53.920
locates you and tells you what
activities around the GDGs is

00:03:53.920 --> 00:03:54.880
happening where you are.

00:03:54.880 --> 00:03:58.750
So if you're traveling to the
East Coast, and you're kind of

00:03:58.750 --> 00:04:01.670
bored, and you want to find a
GDG event, you can look it up.

00:04:01.670 --> 00:04:05.660
So he's going to talk about that
tonight, and I'm get very

00:04:05.660 --> 00:04:08.500
proud of these people that
they're volunteering their

00:04:08.500 --> 00:04:10.850
time above and beyond their
organizer volunteer time

00:04:10.850 --> 00:04:12.730
already to work on
these projects.

00:04:12.730 --> 00:04:15.290
They're not being compensated
in any way for this.

00:04:15.290 --> 00:04:16.690
It's a free app they're
giving out.

00:04:16.690 --> 00:04:20.930
And I guess I'll just turn
it over to Josh.

00:04:20.930 --> 00:04:21.790
So take it away, Josh.

00:04:21.790 --> 00:06:01.700
[APPLAUSE]

00:06:01.700 --> 00:06:02.960
JOSH WOODWARD: OK.

00:06:02.960 --> 00:06:06.180
So like Van said, my name
is Josh Woodward.

00:06:06.180 --> 00:06:11.200
I organized GDG Fresno, which
is like two and a half hours

00:06:11.200 --> 00:06:13.600
away from here.

00:06:13.600 --> 00:06:20.110
Back at Google I/O last year,
we have a GDG organizer's

00:06:20.110 --> 00:06:22.950
summit where all the organizers
from all over the

00:06:22.950 --> 00:06:27.300
world come and share ideas
and stuff like that.

00:06:27.300 --> 00:06:32.460
And every year at this summit,
all the organizers say we need

00:06:32.460 --> 00:06:36.230
a tool to do this, and we need a
tool to do that, and help us

00:06:36.230 --> 00:06:40.030
organize our chapters,
and stuff like that.

00:06:40.030 --> 00:06:42.800
I've been doing this for over
three years now, and I hear

00:06:42.800 --> 00:06:47.540
the same requests for tools.

00:06:47.540 --> 00:06:51.290
Through I/O, I met other
organizers and stuff, and we

00:06:51.290 --> 00:06:55.170
got together and we decided to
actually do something now.

00:06:55.170 --> 00:07:00.010
And so we came up with GDG[x].

00:07:00.010 --> 00:07:04.360
Let me show a little
video here that one

00:07:04.360 --> 00:07:06.030
of our members made.

00:07:06.030 --> 00:07:06.710
It's pretty cool.

00:07:06.710 --> 00:07:08.240
So we'll show that real quick.

00:07:11.216 --> 00:07:12.704
[VIDEO PLAYBACK]

00:07:12.704 --> 00:07:52.880
[MUSIC PLAYING]

00:07:52.880 --> 00:07:54.368
[END VIDEO PLAYBACK]

00:07:54.368 --> 00:07:57.880
JOSH WOODWARD: So that's just
a little teaser video.

00:07:57.880 --> 00:08:03.210
We like to just have fun and
stuff, so I call ourselves a

00:08:03.210 --> 00:08:07.790
covert ops team, because
there's like over 400

00:08:07.790 --> 00:08:08.480
organizers.

00:08:08.480 --> 00:08:13.110
Well, 400 groups, over 1,000
organizers, and we're a group

00:08:13.110 --> 00:08:15.060
of like 15 of them.

00:08:15.060 --> 00:08:18.280
And so, we work in secret and
build these little projects

00:08:18.280 --> 00:08:19.650
and stuff like that.

00:08:19.650 --> 00:08:23.290
So I just make fun
a little bit.

00:08:23.290 --> 00:08:27.440
So why GDG[x]?

00:08:27.440 --> 00:08:29.260
I think it's fun.

00:08:29.260 --> 00:08:33.419
It is a play on the
Google[x] project.

00:08:33.419 --> 00:08:36.480
We're not building Google Glass
or self-driving cars,

00:08:36.480 --> 00:08:39.640
but when you're doing this
stuff in your spare time,

00:08:39.640 --> 00:08:42.989
building a website is a
pretty big project.

00:08:45.710 --> 00:08:50.560
And then Louis Gray said that
it's not just x, it's extreme.

00:08:50.560 --> 00:08:51.940
So I had to throw that
quote in there.

00:08:51.940 --> 00:08:52.825
That was funny.

00:08:52.825 --> 00:08:54.350
He put that on one
of his videos.

00:08:56.900 --> 00:09:01.020
Some of the projects we've
done is Project Glider.

00:09:01.020 --> 00:09:09.420
It's just the Google I/O HTML5
slides rebranded for GDG.

00:09:09.420 --> 00:09:12.430
We have a project called
Boomerang which is a

00:09:12.430 --> 00:09:19.550
boilerplate website template
for the GDG organizers, and

00:09:19.550 --> 00:09:24.634
Project Frisbee which
is the Android app.

00:09:24.634 --> 00:09:29.900
Like I said, Project Glider is
just the I/O slides rebranded.

00:09:29.900 --> 00:09:32.020
It's not mirrored here,
so I got to look

00:09:32.020 --> 00:09:33.950
over my shoulder here.

00:09:33.950 --> 00:09:36.650
But it's like the Google
I/O HTML5 slides.

00:09:36.650 --> 00:09:38.300
We just rebranded them.

00:09:38.300 --> 00:09:45.140
So this is all HTML5,
just real easy.

00:09:45.140 --> 00:09:46.050
Let's see.

00:09:46.050 --> 00:09:47.860
What else?

00:09:47.860 --> 00:09:49.110
Oops.

00:09:52.520 --> 00:09:57.040
And then Project Boomerang is
one that I was like the lead

00:09:57.040 --> 00:09:58.650
on and I worked on.

00:09:58.650 --> 00:10:04.080
It's a boilerplate for the other
chapters to easily build

00:10:04.080 --> 00:10:07.370
a website from nothing,
really.

00:10:07.370 --> 00:10:11.910
So here's GDG Fresno's
website.

00:10:11.910 --> 00:10:18.230
It pulls all of our information
from Google+, and

00:10:18.230 --> 00:10:20.360
stuff like that.

00:10:20.360 --> 00:10:21.810
It pulls news from Google+.

00:10:25.016 --> 00:10:27.390
These are all Google posts.

00:10:27.390 --> 00:10:29.040
They just get fed into
the website.

00:10:31.670 --> 00:10:36.710
And all of our events from the
Google Developer's site, past

00:10:36.710 --> 00:10:38.735
and future events.

00:10:38.735 --> 00:10:40.610
AUDIENCE: That's a lot
of future events.

00:10:40.610 --> 00:10:44.060
JOSH WOODWARD: We got
four planned.

00:10:44.060 --> 00:10:48.130
Are DevFest is in there, and
I think we have a recurring

00:10:48.130 --> 00:10:50.970
learning Android with
Android Studio.

00:10:50.970 --> 00:10:55.740
So that one's a repeat event
that happens every month.

00:10:55.740 --> 00:11:00.530
And then it goes photos from
Google+, so it's real easy.

00:11:00.530 --> 00:11:04.930
All someone has to do is change
three variables, and

00:11:04.930 --> 00:11:07.550
they have a full website.

00:11:07.550 --> 00:11:10.590
It's always up to date because
it's just pulling content from

00:11:10.590 --> 00:11:13.390
Google+ or the developers.com
site.

00:11:13.390 --> 00:11:15.755
It's written in AngularJS
and Twitter Bootstrap.

00:11:18.380 --> 00:11:21.600
Three lines of code, and
they can deploy it.

00:11:21.600 --> 00:11:23.700
It's all front end so they
can deploy it anywhere.

00:11:23.700 --> 00:11:26.000
You can host it on Google Drive,
you can host it on

00:11:26.000 --> 00:11:28.120
Google App Engine, whatever.

00:11:28.120 --> 00:11:32.600
And we also built a Yeoman
generator so it's

00:11:32.600 --> 00:11:34.870
even easier to deploy.

00:11:34.870 --> 00:11:38.240
You just have to answer three
questions, and you get a build

00:11:38.240 --> 00:11:42.450
script that builds up your
website for you.

00:11:42.450 --> 00:11:44.200
This is the reason
Van invited me to

00:11:44.200 --> 00:11:47.890
talk, was Project Frisbee.

00:11:47.890 --> 00:11:51.210
This has been a very
popular release.

00:11:51.210 --> 00:11:54.450
I think we released it a week
ago, and it already is over

00:11:54.450 --> 00:11:57.630
1,000 installs and
stuff like that.

00:11:57.630 --> 00:11:59.770
So it's pretty cool.

00:11:59.770 --> 00:12:01.920
It's a GDG Android app.

00:12:04.880 --> 00:12:09.170
It is location-based, so
you can open the app--

00:12:09.170 --> 00:12:12.050
say you travel a lot, and you're
sitting in your hotel,

00:12:12.050 --> 00:12:13.260
and you're bored.

00:12:13.260 --> 00:12:16.090
Maybe there's a GDG meetup
going on nearby.

00:12:16.090 --> 00:12:17.360
You can open up the app.

00:12:17.360 --> 00:12:20.470
It sees you, that you're
close to Boston, and

00:12:20.470 --> 00:12:22.350
there's the GDG in Boston.

00:12:22.350 --> 00:12:23.650
And maybe they're having
to meetup.

00:12:23.650 --> 00:12:26.860
You can go visit that meetup.

00:12:26.860 --> 00:12:30.730
We also added all the upcoming
DevFests to be app.

00:12:30.730 --> 00:12:34.550
So say you want to travel
somewhere else to visit a

00:12:34.550 --> 00:12:38.200
DevFest because the DevFests
are the larger event.

00:12:38.200 --> 00:12:42.040
You can search through all of
the DevFests on your Android

00:12:42.040 --> 00:12:47.090
app and find one, and book some
tickets, and fly out of,

00:12:47.090 --> 00:12:49.430
I don't know, wherever

00:12:49.430 --> 00:12:53.210
We also have all the Google
Developers Live videos on the

00:12:53.210 --> 00:12:57.390
Android app sorted by category,
like Android Chrome,

00:12:57.390 --> 00:12:59.150
Cloud, stuff like that.

00:12:59.150 --> 00:13:02.010
And I'll show you some
screenshots here.

00:13:02.010 --> 00:13:04.390
The app is live on
the Play Store.

00:13:04.390 --> 00:13:08.180
If you have an Android device,
you can go to this URL,

00:13:08.180 --> 00:13:15.960
gdg-x.com/frisbee, and it'll
redirect you to the Play Store

00:13:15.960 --> 00:13:17.240
app, and you can download
it right now.

00:13:20.680 --> 00:13:24.110
And here are the screenshots
for that.

00:13:24.110 --> 00:13:25.850
This is GDP Fresno.

00:13:25.850 --> 00:13:27.780
It may be hard to see
in the back there.

00:13:27.780 --> 00:13:31.660
This is GDG Fresno loaded, the
info about it, so it shows the

00:13:31.660 --> 00:13:35.760
organizers, the about, and
some links that we have.

00:13:35.760 --> 00:13:39.430
There's all of our events,
future and past events right

00:13:39.430 --> 00:13:41.770
on the Android app.

00:13:41.770 --> 00:13:45.370
There's the DevFest screen, so
you can find all the DevFests

00:13:45.370 --> 00:13:48.120
that are coming up.

00:13:48.120 --> 00:13:53.240
There's the Google Developers
Live screen, and that's the

00:13:53.240 --> 00:13:58.140
Android page so you can quickly
watch videos from

00:13:58.140 --> 00:14:01.630
Google Developers Live right
on your Android.

00:14:01.630 --> 00:14:04.990
And then there's the list
of contributors.

00:14:04.990 --> 00:14:09.540
This is a global effort.

00:14:09.540 --> 00:14:11.772
We have translations in--

00:14:11.772 --> 00:14:15.810
I don't know if that's the
language, but Ukraine.

00:14:15.810 --> 00:14:17.550
The Ukraine guy translated it.

00:14:17.550 --> 00:14:22.910
We have Spanish, French,
Russian.

00:14:22.910 --> 00:14:26.870
A lot of help has gone in from
the other organizers to

00:14:26.870 --> 00:14:30.890
translate the app for us.

00:14:30.890 --> 00:14:31.890
GDG[x]

00:14:31.890 --> 00:14:36.120
as a whole, we have a board
now, so that we're kind of

00:14:36.120 --> 00:14:38.090
like organized and structured.

00:14:38.090 --> 00:14:42.630
And then we also have a lot
of people involved.

00:14:42.630 --> 00:14:44.490
Kevin's up there, but he
doesn't do anything.

00:14:44.490 --> 00:14:46.450
He doesn't do anything.

00:14:46.450 --> 00:14:47.810
And that's GDG[x].

00:14:51.330 --> 00:14:56.720
[APPLAUSE]

00:15:05.920 --> 00:15:08.135
VAN RIPER: Any questions
for Josh?

00:15:11.045 --> 00:15:12.700
JOSH WOODWARD: One question.

00:15:12.700 --> 00:15:13.520
[INAUDIBLE]

00:15:13.520 --> 00:15:15.780
JOSH WOODWARD: Oh yeah, sorry.

00:15:15.780 --> 00:15:16.670
I think I ended it early.

00:15:16.670 --> 00:15:18.652
MALE SPEAKER: Yeah.

00:15:18.652 --> 00:15:20.570
That was the GitHub picture
in the last slide.

00:15:20.570 --> 00:15:23.370
JOSH WOODWARD: That was, huh?

00:15:23.370 --> 00:15:24.190
Let's see here.

00:15:24.190 --> 00:15:24.780
Real quick.

00:15:24.780 --> 00:15:26.110
MALE SPEAKER: That last
slide might have--

00:15:26.110 --> 00:15:28.250
JOSH WOODWARD: I think
it was all on there.

00:15:28.250 --> 00:15:29.500
I prematurely--

00:15:45.060 --> 00:15:47.570
I forgot about the last slide.

00:15:47.570 --> 00:15:49.890
So, yes, you can contribute.

00:15:49.890 --> 00:15:51.030
You can look at all
the source.

00:15:51.030 --> 00:15:53.660
You can do everything
on our GitHub page.

00:15:53.660 --> 00:15:58.530
You can circle us on Google+,
and we have a YouTube channel

00:15:58.530 --> 00:16:00.780
that we upload videos to
and stuff like that.

00:16:05.620 --> 00:16:07.180
Post the slides?

00:16:07.180 --> 00:16:08.590
They are posted.

00:16:08.590 --> 00:16:19.897
It's gdg-x.com/gdgsv.

00:16:19.897 --> 00:16:21.950
MALE SPEAKER: So just
quick housekeeping--

00:16:21.950 --> 00:16:23.320
yeah, thank you, Josh.

00:16:23.320 --> 00:16:25.118
Quick housekeeping before--

00:16:25.118 --> 00:16:27.588
[APPLAUSE]

00:16:27.588 --> 00:16:30.490
MALE SPEAKER: --before Wes hops
up here, just to remind

00:16:30.490 --> 00:16:32.980
everybody to turn off their cell
phones so there aren't

00:16:32.980 --> 00:16:34.880
any interruptions.

00:16:34.880 --> 00:16:38.080
And then the restrooms are
around the sides over there if

00:16:38.080 --> 00:16:39.290
anyone needs that.

00:16:39.290 --> 00:16:42.880
And you're welcome to take
pictures and things in this

00:16:42.880 --> 00:16:46.120
room, but outside of this
room, don't do that.

00:16:46.120 --> 00:16:47.470
Remember, you're a guest.

00:16:47.470 --> 00:16:48.960
Don't take pictures outside
of the room.

00:16:48.960 --> 00:16:51.526
Don't bother the people trying
to work and things like that.

00:16:56.044 --> 00:16:57.990
VAN RIPER: And I just want to
remind people, we are live

00:16:57.990 --> 00:17:01.150
streaming tonight, so if
it's a short question--

00:17:01.150 --> 00:17:04.880
and Wes is open to questions
while he's presenting--

00:17:04.880 --> 00:17:05.780
he'll need to repeat it.

00:17:05.780 --> 00:17:07.510
If it's a longer question,
you'll probably want

00:17:07.510 --> 00:17:08.150
to go to that mic.

00:17:08.150 --> 00:17:10.609
And when we actually get to the
Q&amp;A at the end, I would

00:17:10.609 --> 00:17:14.050
really ask that you use the mic
so that anyone in the live

00:17:14.050 --> 00:17:15.174
stream can also hear
the questions.

00:17:15.174 --> 00:17:15.720
All right?

00:17:15.720 --> 00:17:16.970
Thank you.

00:17:23.700 --> 00:17:24.696
MALE SPEAKER: OK.

00:17:24.696 --> 00:17:27.268
Here's Wesley.

00:17:27.268 --> 00:17:31.732
[APPLAUSE]

00:17:31.732 --> 00:17:32.860
WESLEY CHUN: Wait!

00:17:32.860 --> 00:17:36.890
I have to get the right
talk first.

00:17:36.890 --> 00:17:38.614
I think this is the right one.

00:17:43.751 --> 00:17:45.876
All right, welcome to DevFest.

00:17:45.876 --> 00:17:47.580
[LAUGHTER]

00:17:47.580 --> 00:17:49.530
WESLEY CHUN: I'm just kidding.

00:17:49.530 --> 00:17:52.160
No, seriously though, DevFest
season is coming up.

00:17:52.160 --> 00:17:53.920
We're really excited that we're
going to have these

00:17:53.920 --> 00:17:56.210
events, again, globally around
the world, supported by the

00:17:56.210 --> 00:17:59.690
GDGs such as yourselves.

00:17:59.690 --> 00:18:02.020
This will be a talk that some
of us on the team have

00:18:02.020 --> 00:18:06.600
designed to be delivered at GDGs
around the world, and I'm

00:18:06.600 --> 00:18:08.840
just giving one sample delivery
of it so that people

00:18:08.840 --> 00:18:12.540
get an idea of what the talk
is all about, the vibe and

00:18:12.540 --> 00:18:13.250
things like that.

00:18:13.250 --> 00:18:16.300
So that's what I'm here for.

00:18:16.300 --> 00:18:18.910
Tonight we're going to talk
about Google App Engine and

00:18:18.910 --> 00:18:21.580
give you an overview of other
cloud computing products,

00:18:21.580 --> 00:18:24.900
whether they're a part of our
Cloud Suite or other products

00:18:24.900 --> 00:18:26.280
that Google has.

00:18:26.280 --> 00:18:27.280
I'm Wesley Chun.

00:18:27.280 --> 00:18:30.440
I'm a developer advocate on the
Developer Relations team,

00:18:30.440 --> 00:18:33.730
and are we all ready
to get started?

00:18:33.730 --> 00:18:35.750
You're supposed to say, "Wait
a minute, wait a minute!

00:18:35.750 --> 00:18:39.780
This guy has a collar on, can't
trust him." People with

00:18:39.780 --> 00:18:41.630
collars, right, very scary.

00:18:41.630 --> 00:18:46.490
So let's get real here.

00:18:46.490 --> 00:18:48.582
I have to wear my
developer wear.

00:18:48.582 --> 00:18:49.454
[LAUGHTER]

00:18:49.454 --> 00:18:51.640
WESLEY CHUN: All right, now
you can believe me, right?

00:18:51.640 --> 00:18:52.700
OK, cool.

00:18:52.700 --> 00:18:57.520
So, years ago, I would say three
or four years ago, you

00:18:57.520 --> 00:19:00.620
would have somebody on my team
come up and give you a talk on

00:19:00.620 --> 00:19:04.020
App Engine, and introduced you
to cloud computing, and say

00:19:04.020 --> 00:19:07.790
what App Engine is, and hope
that you get on your way.

00:19:07.790 --> 00:19:10.760
That was the case a couple of
years ago, but since then lots

00:19:10.760 --> 00:19:12.130
of changes have happened.

00:19:12.130 --> 00:19:15.140
Most notably, we can't just talk
about App Engine anymore.

00:19:15.140 --> 00:19:16.420
That's not the complete
picture.

00:19:16.420 --> 00:19:21.360
It used to be our only cloud
product, but now we have a lot

00:19:21.360 --> 00:19:21.920
more things.

00:19:21.920 --> 00:19:25.000
We actually have a
real platform.

00:19:25.000 --> 00:19:27.450
App Engine is just one
component out of many

00:19:27.450 --> 00:19:30.540
different cloud services
that we have now.

00:19:30.540 --> 00:19:33.970
So the Cloud platform team
asked me to say a little

00:19:33.970 --> 00:19:35.750
something about the platform
just so that people

00:19:35.750 --> 00:19:36.300
are aware of it.

00:19:36.300 --> 00:19:38.270
I'm very happy to do so.

00:19:38.270 --> 00:19:40.670
Just because I'm talking about
App Engine tonight doesn't

00:19:40.670 --> 00:19:43.620
mean that you're limited to just
that one particular tool.

00:19:43.620 --> 00:19:46.210
There's plenty other
ones, all right?

00:19:46.210 --> 00:19:50.250
And hopefully as the year goes
by, you'll be hearing talks in

00:19:50.250 --> 00:19:52.300
each individual one of these
products, because they're all

00:19:52.300 --> 00:19:56.190
pretty exciting in
their own right.

00:19:56.190 --> 00:19:57.500
So a little bit more about me.

00:19:57.500 --> 00:19:58.580
I'm a software engineer.

00:19:58.580 --> 00:20:02.360
I've been an engineer
for 25 years now.

00:20:02.360 --> 00:20:05.230
I'm getting kine of
old, actually.

00:20:07.860 --> 00:20:10.830
If you don't believe it, how
many of you guys know what

00:20:10.830 --> 00:20:12.700
punch cards are?

00:20:12.700 --> 00:20:14.620
I learned FORTRAN
on punch cards.

00:20:14.620 --> 00:20:16.190
That's my age group.

00:20:16.190 --> 00:20:18.930
So I'm just like you guys.

00:20:18.930 --> 00:20:20.670
I guess a little bit
more about me.

00:20:20.670 --> 00:20:23.600
The thing that I built that most
people know about is I

00:20:23.600 --> 00:20:25.580
was one of the original
engineers the built Yahoo Mail

00:20:25.580 --> 00:20:28.960
about 15 years ago using Python
when no one ever heard

00:20:28.960 --> 00:20:29.460
of it before.

00:20:29.460 --> 00:20:32.280
And we created a web framework
before that term even existed.

00:20:32.280 --> 00:20:33.850
So that was pretty fun.

00:20:33.850 --> 00:20:36.210
I worked at all kinds of other
interesting places.

00:20:36.210 --> 00:20:38.910
Probably the strangest thing
that I've done is using Python

00:20:38.910 --> 00:20:40.870
to work on software for doctors
to help them analyze

00:20:40.870 --> 00:20:43.260
patients with spinal fractures,
so talk to me about

00:20:43.260 --> 00:20:46.270
osteoporosis later.

00:20:46.270 --> 00:20:47.940
Men get it, too.

00:20:47.940 --> 00:20:51.430
Don't think it's just
a woman thing.

00:20:51.430 --> 00:20:55.400
Work out, do weights,
don't smoke.

00:20:55.400 --> 00:20:58.140
Those things are all good
for your bones.

00:20:58.140 --> 00:21:00.530
I'm also a writer, so some of
you guys may know Python.

00:21:00.530 --> 00:21:01.480
Anybody out there, Python?

00:21:01.480 --> 00:21:02.650
Yes, yes, yes?

00:21:02.650 --> 00:21:02.920
OK, then.

00:21:02.920 --> 00:21:04.870
You may have seen or heard
one of my books.

00:21:04.870 --> 00:21:05.740
I like to write.

00:21:05.740 --> 00:21:07.500
Which is kind of weird, because
typically engineers

00:21:07.500 --> 00:21:09.660
don't like to document their
code, much less write a book,

00:21:09.660 --> 00:21:13.250
so I'm one of the mutants
out there.

00:21:13.250 --> 00:21:15.350
Another thing that I like to do
is I've been teaching for

00:21:15.350 --> 00:21:17.910
over 30 years now.

00:21:17.910 --> 00:21:20.220
I think 30 years ago exactly
I got my first

00:21:20.220 --> 00:21:22.310
paycheck as a teacher.

00:21:22.310 --> 00:21:23.310
I've been teaching locally.

00:21:23.310 --> 00:21:25.136
I give talks at conferences.

00:21:25.136 --> 00:21:28.310
I'm a part time faculty at
Foothill, which is close by.

00:21:28.310 --> 00:21:31.270
I really like teaching, and
talking to people, and getting

00:21:31.270 --> 00:21:34.110
developers excited about
technologies.

00:21:34.110 --> 00:21:35.140
But enough about me.

00:21:35.140 --> 00:21:37.070
This talk is actually about you
guys, so hopefully you're

00:21:37.070 --> 00:21:39.940
some sort of developer, or a
tech lead, or some sort of

00:21:39.940 --> 00:21:42.880
tech manager or product manager,
entrepreneur, QA

00:21:42.880 --> 00:21:45.570
tester, product manager,
something like that.

00:21:45.570 --> 00:21:48.300
You're curious about or you're
new to Google Tools.

00:21:48.300 --> 00:21:49.360
This may be your
first meeting.

00:21:49.360 --> 00:21:51.990
Whose first meaning
is it here today?

00:21:51.990 --> 00:21:53.810
Wow, great.

00:21:53.810 --> 00:21:55.810
That's roughly about a third.

00:21:55.810 --> 00:21:57.250
So welcome, everybody.

00:21:57.250 --> 00:21:59.430
Glad that you can came, and hope
that everybody makes you

00:21:59.430 --> 00:22:01.210
feel welcome.

00:22:01.210 --> 00:22:02.550
Don't feel shy.

00:22:02.550 --> 00:22:04.580
Go talk to people because,
hey, they may be doing

00:22:04.580 --> 00:22:07.730
something that you may be
interested in hearing about.

00:22:07.730 --> 00:22:10.300
Or you want to know more about
the Google Cloud Platform, so

00:22:10.300 --> 00:22:11.100
I'm going to start there.

00:22:11.100 --> 00:22:12.950
I'm going to talk a little about
the Platform first, then

00:22:12.950 --> 00:22:16.070
go into App Engine, and then
talk about how the whole

00:22:16.070 --> 00:22:19.610
ecosystem works, and then what
other Google tools and

00:22:19.610 --> 00:22:22.540
services are similar that you
may want to consider for

00:22:22.540 --> 00:22:26.060
applications that you
may want to build.

00:22:26.060 --> 00:22:27.570
Here's the structure
of the talk.

00:22:27.570 --> 00:22:30.160
It's really broken under
three main parts.

00:22:30.160 --> 00:22:32.170
I'll give a little bit
background, motivation, as to

00:22:32.170 --> 00:22:35.190
why we're in the cloud business,
why App Engine was

00:22:35.190 --> 00:22:37.070
created, things like that.

00:22:37.070 --> 00:22:39.680
Then most of the talk will be
focused on the App Engine

00:22:39.680 --> 00:22:43.020
product itself, and then I'll
talk a little bit more about

00:22:43.020 --> 00:22:45.240
each of the other cloud platform
tools that I think

00:22:45.240 --> 00:22:47.960
you should look at, as well as
other services from Google

00:22:47.960 --> 00:22:49.720
that are not part of the
Cloud Platform but

00:22:49.720 --> 00:22:53.230
they're cloudy in nature.

00:22:53.230 --> 00:22:55.360
And if there's lots of time
permitting, I can start doing

00:22:55.360 --> 00:22:57.840
some hands-on coding as well,
but at least I'll point you to

00:22:57.840 --> 00:22:59.770
a place that you can
get started with.

00:22:59.770 --> 00:23:03.270
And due to the hard work of one
of my coworkers, you can

00:23:03.270 --> 00:23:05.350
actually start playing around
with App Engine without doing

00:23:05.350 --> 00:23:06.630
any downloads whatsoever.

00:23:06.630 --> 00:23:10.210
You can just go straight from
a browser window to the

00:23:10.210 --> 00:23:13.390
website and start playing
around with App Engine.

00:23:13.390 --> 00:23:16.940
So I think that's a really
exciting change, and it's just

00:23:16.940 --> 00:23:19.470
reduces the barrier of entry
for people who want to just

00:23:19.470 --> 00:23:21.570
try and play with
the Platform.

00:23:21.570 --> 00:23:25.200
So that's really the structure
of the talk tonight.

00:23:25.200 --> 00:23:26.940
Let's talk a little
bit about scale.

00:23:26.940 --> 00:23:28.660
I know some of you guys are
going to know the answers to

00:23:28.660 --> 00:23:31.340
these because these numbers
were released around I/O

00:23:31.340 --> 00:23:34.000
timeframe, so I know you guys
keep your ears and eyes open

00:23:34.000 --> 00:23:38.230
to Google News every single day,
looking for information.

00:23:38.230 --> 00:23:40.950
But in case you don't know some
of these numbers, I want

00:23:40.950 --> 00:23:44.150
you to start thinking about
googley sized numbers.

00:23:44.150 --> 00:23:48.920
Like if I was to ask you on a
random day in 2012, what do

00:23:48.920 --> 00:23:50.740
you think the size of
our search index

00:23:50.740 --> 00:23:52.366
is in terms of bytes?

00:23:52.366 --> 00:23:55.120
What would be the kind of
number you would say?

00:23:55.120 --> 00:23:58.040
Another question I want you to
think about is, well, since

00:23:58.040 --> 00:24:00.790
we're talking about numbers, how
much video do you think is

00:24:00.790 --> 00:24:04.850
uploaded to YouTube in terms
of hours every minute?

00:24:04.850 --> 00:24:07.630
How many hours of video are
uploaded to YouTube every

00:24:07.630 --> 00:24:09.770
single minute?

00:24:09.770 --> 00:24:11.550
That would be a number
from this year, from

00:24:11.550 --> 00:24:13.240
Google I/O, of course.

00:24:13.240 --> 00:24:15.300
Then since we're talking about
YouTube anyway, how many

00:24:15.300 --> 00:24:18.590
people on this planet this
year watch at least one

00:24:18.590 --> 00:24:21.640
YouTube video a month, or at
least their IP address does?

00:24:21.640 --> 00:24:24.450
All right.

00:24:24.450 --> 00:24:25.550
So think about that.

00:24:25.550 --> 00:24:27.820
And then as you're thinking
about that, and I start

00:24:27.820 --> 00:24:31.490
talking about the App Engine
product, I'll ask you a

00:24:31.490 --> 00:24:35.220
related question, which is how
many hits do you think App

00:24:35.220 --> 00:24:38.000
Engine gets across all of its
apps every single day?

00:24:38.000 --> 00:24:42.120
And by that, I mean my page
views, or just any HTTP, Get,

00:24:42.120 --> 00:24:44.160
Post, or whatnot.

00:24:44.160 --> 00:24:46.230
So those are some numbers that
I want you to think about.

00:24:46.230 --> 00:24:49.180
I will go over that halfway
through the talk.

00:24:49.180 --> 00:24:52.090
And then the other thing I want
you to think about it is

00:24:52.090 --> 00:24:55.000
how many times have you gone to
google.com and not have it

00:24:55.000 --> 00:24:58.590
respond or gotten an internal
server error

00:24:58.590 --> 00:25:00.750
or some other 500?

00:25:00.750 --> 00:25:02.890
Probably doesn't happen
all that often.

00:25:02.890 --> 00:25:06.350
Maybe a couple of you may have
seen some of those, but really

00:25:06.350 --> 00:25:07.600
they're very rare.

00:25:07.600 --> 00:25:11.000
And the reason for that is we
have a staff of people who are

00:25:11.000 --> 00:25:14.950
up around the clock to make sure
that the system is up and

00:25:14.950 --> 00:25:17.540
it's responsive.

00:25:17.540 --> 00:25:20.240
That is the kind of reliability
that you would

00:25:20.240 --> 00:25:22.140
love to have for your
own apps, right?

00:25:22.140 --> 00:25:24.850
I mean, it just takes away some
of that worry and give

00:25:24.850 --> 00:25:27.740
you peace of mind
that you want.

00:25:27.740 --> 00:25:28.700
Let's go back to the top.

00:25:28.700 --> 00:25:32.590
What's a good approximate size
of our search index around

00:25:32.590 --> 00:25:34.430
last year in terms of bytes?

00:25:34.430 --> 00:25:37.010
Anybody?

00:25:37.010 --> 00:25:38.080
Rough number?

00:25:38.080 --> 00:25:40.660
100 bytes?

00:25:40.660 --> 00:25:43.290
100 million?

00:25:43.290 --> 00:25:44.250
A terabyte?

00:25:44.250 --> 00:25:45.440
A petabyte?

00:25:45.440 --> 00:25:46.860
What's the difference
between a terabyte

00:25:46.860 --> 00:25:48.305
and a petabyte, anyway?

00:25:48.305 --> 00:25:51.090
It's a p, a t, and the r?

00:25:51.090 --> 00:25:52.230
Right?

00:25:52.230 --> 00:25:57.590
Petabyte is another 10 to
the 3 higher than that.

00:25:57.590 --> 00:26:01.660
In 2012, it was 100 petabytes,
but I like to say 100 million

00:26:01.660 --> 00:26:04.570
gigs because that's sort of
easier to kind of understand.

00:26:04.570 --> 00:26:08.480
Because once you start using
peta, exa, all those things,

00:26:08.480 --> 00:26:10.360
it just becomes mumbo jumbo.

00:26:10.360 --> 00:26:11.500
So you really want
to start thinking

00:26:11.500 --> 00:26:13.250
about things like that.

00:26:13.250 --> 00:26:13.960
How about YouTube?

00:26:13.960 --> 00:26:17.860
How much video is uploaded
to YouTube every minute?

00:26:17.860 --> 00:26:20.240
AUDIENCE: 10,000 [INAUDIBLE].

00:26:20.240 --> 00:26:22.570
WESLEY CHUN: 6,000?

00:26:22.570 --> 00:26:23.980
10,000 7,000?

00:26:23.980 --> 00:26:26.720
OK, let's just round
it off for 100.

00:26:26.720 --> 00:26:29.770
100 hours a minute, which
is roughly about four

00:26:29.770 --> 00:26:32.240
days worth of video.

00:26:32.240 --> 00:26:34.210
When I gave this talk earlier,
somebody asked the question

00:26:34.210 --> 00:26:36.860
that I couldn't answer, which
was what percentage of those

00:26:36.860 --> 00:26:38.860
100 hours are cat videos?

00:26:38.860 --> 00:26:39.806
[LAUGHTER]

00:26:39.806 --> 00:26:41.310
WESLEY CHUN: I'm sorry.

00:26:41.310 --> 00:26:43.740
We may have some machine
learning code that has figured

00:26:43.740 --> 00:26:46.270
that out, but I haven't
been told yet.

00:26:46.270 --> 00:26:48.320
So I'm sorry I can't answer
that question.

00:26:48.320 --> 00:26:50.540
How many people on this planet
watch at least one YouTube

00:26:50.540 --> 00:26:52.930
video a month?

00:26:52.930 --> 00:26:54.480
Not that many.

00:26:54.480 --> 00:26:55.530
Just a billion.

00:26:55.530 --> 00:26:58.360
It's a small number.

00:26:58.360 --> 00:26:59.320
Those are just some numbers.

00:26:59.320 --> 00:27:02.810
I'm planting the seeds to have
you think about scale.

00:27:02.810 --> 00:27:05.310
That's the point
of this slide.

00:27:05.310 --> 00:27:10.030
Then another thing I want you to
think about is not only do

00:27:10.030 --> 00:27:12.690
we have out of this world
scaling, but we also have out

00:27:12.690 --> 00:27:14.770
of this world innovation,
and security.

00:27:14.770 --> 00:27:17.940
You can tell that's out of this
world security, right?

00:27:17.940 --> 00:27:22.540
That's actually a Street
View picture from

00:27:22.540 --> 00:27:23.850
one of our data centers.

00:27:23.850 --> 00:27:26.230
This is probably the one
in North Carolina.

00:27:26.230 --> 00:27:27.940
This one is what our data
centers look like with a

00:27:27.940 --> 00:27:30.600
professional photographer.

00:27:30.600 --> 00:27:32.830
That's Iowa, I believe.

00:27:32.830 --> 00:27:34.290
So you can find these
all online.

00:27:34.290 --> 00:27:37.500
You can use them, actually, as
backgrounds for your computer

00:27:37.500 --> 00:27:38.190
if you want.

00:27:38.190 --> 00:27:39.040
They're actually very pretty.

00:27:39.040 --> 00:27:41.790
But in reality, on an everyday
basis, they kind

00:27:41.790 --> 00:27:43.380
of look like this.

00:27:43.380 --> 00:27:46.580
Because I know, I've been
inside a couple of them.

00:27:46.580 --> 00:27:48.520
They're more blase, but
actually that one

00:27:48.520 --> 00:27:50.090
looks really good.

00:27:50.090 --> 00:27:53.470
Anyway, just kind of keep in
mind the scale that we have.

00:27:53.470 --> 00:27:56.100
The other thing is innovation.

00:27:56.100 --> 00:27:58.250
Google has spent many, many
years building a lot of

00:27:58.250 --> 00:28:01.605
technologies that have really
launched the era of big data.

00:28:01.605 --> 00:28:03.020
You the names.

00:28:03.020 --> 00:28:03.620
MapReduce.

00:28:03.620 --> 00:28:04.570
You hear BigTable.

00:28:04.570 --> 00:28:07.500
You hear all these things, but
when you realize that those

00:28:07.500 --> 00:28:11.490
things are six years old or
seven years old, it kind of

00:28:11.490 --> 00:28:13.710
blows your mind, right?

00:28:13.710 --> 00:28:16.620
And now, actually we've moved
beyond these technologies.

00:28:16.620 --> 00:28:18.060
Google File System, all
these things, we're

00:28:18.060 --> 00:28:18.970
moving beyond them now.

00:28:18.970 --> 00:28:20.060
We've got newer technologies.

00:28:20.060 --> 00:28:21.860
Dremel, Spanner, Colossus.

00:28:21.860 --> 00:28:24.610
That is what's going to take
us to the next level.

00:28:24.610 --> 00:28:26.340
Same goes for you guys.

00:28:26.340 --> 00:28:29.530
As we come up with these
innovations, we make them

00:28:29.530 --> 00:28:32.630
available to you guys, and you
can use them to build your

00:28:32.630 --> 00:28:35.950
next awesome app with.

00:28:35.950 --> 00:28:38.350
Before we start talking about
cloud products and things like

00:28:38.350 --> 00:28:41.260
that, let's talk a little bit
about service levels.

00:28:41.260 --> 00:28:44.740
Because what happens is as
I roamed the hallways--

00:28:44.740 --> 00:28:48.110
maybe not here, but in other
places, or at conferences--

00:28:48.110 --> 00:28:50.760
I hear people talking about
cloud computing.

00:28:50.760 --> 00:28:51.680
It's a big deal.

00:28:51.680 --> 00:28:54.300
They may throw around SaaS, and
infrastructure, and all

00:28:54.300 --> 00:28:54.870
these words.

00:28:54.870 --> 00:28:57.940
And sometimes people don't
really know exactly what

00:28:57.940 --> 00:28:59.750
they're saying except they're
just trying to make their

00:28:59.750 --> 00:29:03.070
conversation buzzword-compliant.

00:29:03.070 --> 00:29:06.720
That's fine if you think you
want to sound like you know

00:29:06.720 --> 00:29:09.650
what you're talking about, but
I think there should have a

00:29:09.650 --> 00:29:11.100
better understanding.

00:29:11.100 --> 00:29:13.030
So the purpose of this slide is
to make sure that we're all

00:29:13.030 --> 00:29:15.960
on the same page as to what is
a cloud service level, what

00:29:15.960 --> 00:29:18.490
products work at those levels
so that when you do want to

00:29:18.490 --> 00:29:21.380
talk about one product versus
another, one vendor versus

00:29:21.380 --> 00:29:23.430
another, that you're actually
making the appropriate

00:29:23.430 --> 00:29:26.370
connections and comparisons.

00:29:26.370 --> 00:29:28.570
Instead of just saying things
like, oh, should I use App

00:29:28.570 --> 00:29:31.870
Engine or should I use EC2?

00:29:31.870 --> 00:29:34.120
People used to ask that all the
time, but that question

00:29:34.120 --> 00:29:36.770
doesn't make sense because
that's an apples versus

00:29:36.770 --> 00:29:39.380
oranges type of comparison,
because both products serve

00:29:39.380 --> 00:29:41.420
very different levels.

00:29:41.420 --> 00:29:44.070
So just to kind of et everybody
on the same page, if

00:29:44.070 --> 00:29:46.470
you already know this
stuff, I apologize.

00:29:46.470 --> 00:29:49.330
You'll be a little bored, but
just hang with me here, and

00:29:49.330 --> 00:29:51.210
then we'll move on.

00:29:51.210 --> 00:29:54.260
At the highest layer, we have
Software as a Service.

00:29:54.260 --> 00:29:57.370
That simply describes an
application that requires you

00:29:57.370 --> 00:29:59.210
to have a web browser
to access.

00:29:59.210 --> 00:30:01.320
That's it.

00:30:01.320 --> 00:30:05.000
If I'm a user of Yahoo Mail,
Hotmail, or Gmail, I really

00:30:05.000 --> 00:30:06.730
need to have a web browser
to access them.

00:30:06.730 --> 00:30:09.420
Unless of course I have a mobile
version, but still it's

00:30:09.420 --> 00:30:11.570
not running on your server,
in your home, in

00:30:11.570 --> 00:30:12.520
your lab, or whatnot.

00:30:12.520 --> 00:30:15.980
You're not maintaining your
own mail server at home

00:30:15.980 --> 00:30:17.910
because you've decided that,
hey, you know what?

00:30:17.910 --> 00:30:19.110
That's too much trouble.

00:30:19.110 --> 00:30:23.090
I've got to run an IMAP
server, SMTP server.

00:30:23.090 --> 00:30:24.920
I really don't want to
do that in my house.

00:30:24.920 --> 00:30:27.310
I just trust one of these
third party vendors like

00:30:27.310 --> 00:30:30.660
Yahoo, Microsoft, or Google
to handle my email for me.

00:30:30.660 --> 00:30:34.050
You are outsourcing your email
to a third party vendor, and

00:30:34.050 --> 00:30:36.730
that's what those apps are.

00:30:36.730 --> 00:30:37.710
Of course, you notice
that you don't have

00:30:37.710 --> 00:30:38.890
control over that code.

00:30:38.890 --> 00:30:41.640
If you find a bug in Yahoo Mail,
or in Google Apps, or

00:30:41.640 --> 00:30:43.870
something like that, you really
need to file a ticket

00:30:43.870 --> 00:30:46.640
because it's the vendor's
responsibility to manage that

00:30:46.640 --> 00:30:47.370
source code.

00:30:47.370 --> 00:30:49.030
Same thing goes for
Salesforce, and

00:30:49.030 --> 00:30:49.980
NetSuite, and all those.

00:30:49.980 --> 00:30:53.990
Those are all Software
as a Service.

00:30:53.990 --> 00:30:55.870
At the very bottom
layer, we have

00:30:55.870 --> 00:30:57.630
Infrastructure as a Service.

00:30:57.630 --> 00:30:59.740
That's where you just
say, you know what?

00:30:59.740 --> 00:31:01.770
I'm going to outsource
everything because I just

00:31:01.770 --> 00:31:03.110
don't want to have anything
on premise.

00:31:03.110 --> 00:31:05.640
I don't want to maintain my
own labs, my own machines.

00:31:05.640 --> 00:31:08.740
I'm just going to rent
hardware from Amazon,

00:31:08.740 --> 00:31:11.120
Microsoft, Google,
or whomever.

00:31:11.120 --> 00:31:12.720
So I'm getting virtual
machines, or

00:31:12.720 --> 00:31:15.240
I'm renting big disks.

00:31:15.240 --> 00:31:17.590
And hopefully as a paying
customer, I'm going to get all

00:31:17.590 --> 00:31:20.430
those necessary things that I
must have in order for those

00:31:20.430 --> 00:31:24.100
services to work, like
networking, power, and

00:31:24.100 --> 00:31:25.340
cooling, right?

00:31:25.340 --> 00:31:28.280
It would be really boring if you
rented something and you

00:31:28.280 --> 00:31:29.620
had none of those three.

00:31:29.620 --> 00:31:30.870
You'd be stupid.

00:31:33.480 --> 00:31:36.490
So those are the things that
you get when you use

00:31:36.490 --> 00:31:38.220
Infrastructure as a Service.

00:31:38.220 --> 00:31:42.280
Now those two levels people
are pretty familiar with.

00:31:42.280 --> 00:31:44.630
The one that's still somewhat of
a mystery to people is the

00:31:44.630 --> 00:31:47.670
middle one, which is Platform
as a Service.

00:31:47.670 --> 00:31:52.440
This is where you've got
something like infrastructure,

00:31:52.440 --> 00:31:55.240
but you've got something
a little bit more.

00:31:55.240 --> 00:31:58.510
And the thing is, it's
really a lot more.

00:31:58.510 --> 00:32:01.500
If you're renting virtual
machines and disk, there are

00:32:01.500 --> 00:32:04.170
certain things that you have
to be responsible for in

00:32:04.170 --> 00:32:05.480
addition to your application.

00:32:05.480 --> 00:32:08.020
You've got to worry about
the operating system.

00:32:08.020 --> 00:32:09.230
Do I run Windows Server?

00:32:09.230 --> 00:32:10.520
Do I run Linux?

00:32:10.520 --> 00:32:12.660
If I choose Linux, which
distribution?

00:32:12.660 --> 00:32:14.190
And then once you choose a
distribution, you've got to

00:32:14.190 --> 00:32:15.600
pick kernel version.

00:32:15.600 --> 00:32:18.100
Those decisions have to be made,
then you have to decide

00:32:18.100 --> 00:32:21.460
what web server, what database
server, do I go with a

00:32:21.460 --> 00:32:23.740
traditional LAMP stack or
do I need something more

00:32:23.740 --> 00:32:24.890
specialized?

00:32:24.890 --> 00:32:29.250
So all those decisions have to
be made at the same time as

00:32:29.250 --> 00:32:32.440
you working on your app, and
those things are problems for

00:32:32.440 --> 00:32:34.370
every app, not just yours.

00:32:34.370 --> 00:32:37.840
So that's called cross cutting
functionality.

00:32:37.840 --> 00:32:42.390
So what Platform aims to do is
to solve all those problems

00:32:42.390 --> 00:32:44.430
for you and let you
focus on your app.

00:32:44.430 --> 00:32:46.540
You don't worry about the
operating system or the

00:32:46.540 --> 00:32:48.520
database server, any
of that stuff.

00:32:48.520 --> 00:32:52.320
The Platform takes care
of that stuff for you.

00:32:52.320 --> 00:32:55.930
Of course App Engine is the
subject of tonight's talk, but

00:32:55.930 --> 00:32:57.650
there's other, similar
systems.

00:32:57.650 --> 00:32:58.940
Azure from Microsoft.

00:32:58.940 --> 00:33:01.400
There's Cloud Foundry
from VMware.

00:33:01.400 --> 00:33:03.970
They've spun that off.

00:33:03.970 --> 00:33:05.630
OpenShift from Red Hat.

00:33:05.630 --> 00:33:07.560
So we've got these three
layers defined.

00:33:07.560 --> 00:33:09.880
And then of course in between
each layer is a bunch of gray

00:33:09.880 --> 00:33:12.500
area, and so you can
see the gray area.

00:33:12.500 --> 00:33:16.270
Typically, it's something like
a database type of service or

00:33:16.270 --> 00:33:18.450
some sort of data service.

00:33:18.450 --> 00:33:21.550
You can think of it as Data
as a Service if you want.

00:33:21.550 --> 00:33:24.940
So like BigQuery, Cloud SQL,
those are all querying

00:33:24.940 --> 00:33:27.430
mechanisms.

00:33:27.430 --> 00:33:28.710
Google Translate, Google
Prediction.

00:33:28.710 --> 00:33:32.300
There's also the Amazon
databases, and also Microsoft

00:33:32.300 --> 00:33:33.760
SQL Azure as well.

00:33:33.760 --> 00:33:35.610
So most of them are
database services.

00:33:35.610 --> 00:33:37.030
They're more than infrastructure
because you're

00:33:37.030 --> 00:33:40.310
getting more than hardware,
but you don't quite get an

00:33:40.310 --> 00:33:44.400
application platform that you
can actually build apps on.

00:33:44.400 --> 00:33:46.460
Those are building blocks.

00:33:46.460 --> 00:33:49.040
This grey area are building
blocks that you can use in

00:33:49.040 --> 00:33:52.190
your application, but they
themselves do not constitute

00:33:52.190 --> 00:33:53.810
an application.

00:33:53.810 --> 00:33:57.710
And then similarly, between
SaaS and Platform, we have

00:33:57.710 --> 00:34:00.490
products like Google Apps Script
And force.com, which

00:34:00.490 --> 00:34:04.020
while they are kind of like a
platform because they can host

00:34:04.020 --> 00:34:07.440
Apps Script apps or force.com
apps, they're really tied to a

00:34:07.440 --> 00:34:10.929
particular vendor's
information.

00:34:10.929 --> 00:34:14.100
Like force.com you use to build
apps to connect to your

00:34:14.100 --> 00:34:15.310
Salesforce data.

00:34:15.310 --> 00:34:18.280
Google Apps Script you use to
write JavaScript apps to

00:34:18.280 --> 00:34:21.880
access to your data
in Google Apps.

00:34:21.880 --> 00:34:26.219
So those are middle,
gray areas.

00:34:26.219 --> 00:34:28.409
They're more than PaaS, but
they're not quite SaaS either.

00:34:28.409 --> 00:34:32.320
They themselves provide you
the ability to code, so

00:34:32.320 --> 00:34:34.840
there's some kind
of coding there.

00:34:34.840 --> 00:34:36.949
The other cool thing, I think,
that makes Platform really

00:34:36.949 --> 00:34:40.320
powerful is that at the
software level, I just

00:34:40.320 --> 00:34:42.880
mentioned a minute ago that you
don't have access to that

00:34:42.880 --> 00:34:43.310
source code.

00:34:43.310 --> 00:34:44.530
You can't control it.

00:34:44.530 --> 00:34:46.530
But with Platform, you do.

00:34:46.530 --> 00:34:48.210
It is your code.

00:34:48.210 --> 00:34:50.710
In fact, you can think of it as
you're using Platform as a

00:34:50.710 --> 00:34:54.909
service, platforms, to create
the next SaaS app with.

00:34:54.909 --> 00:34:55.810
That's really what
you're doing.

00:34:55.810 --> 00:34:58.130
Your writing an app so that
other people can access it

00:34:58.130 --> 00:35:02.410
online, and they don't have
access to your source code.

00:35:02.410 --> 00:35:03.590
Everybody in the
same page now?

00:35:03.590 --> 00:35:06.110
You all know which levels we're
at so that when you get

00:35:06.110 --> 00:35:08.100
into these hallway
conversations, you really know

00:35:08.100 --> 00:35:09.320
what you're talking about?

00:35:09.320 --> 00:35:09.640
All right.

00:35:09.640 --> 00:35:13.160
Because I think that's
really important.

00:35:13.160 --> 00:35:15.180
Let's talk about Google
Cloud Platform.

00:35:15.180 --> 00:35:18.060
The Cloud Platform encompasses
things at

00:35:18.060 --> 00:35:19.400
the lower two levels.

00:35:19.400 --> 00:35:21.400
So of course, Google Apps
you can't code.

00:35:21.400 --> 00:35:23.540
For all you guys who are
developers, this is where you

00:35:23.540 --> 00:35:25.950
can do the coding, down here.

00:35:25.950 --> 00:35:28.350
So what is the Cloud Platform?

00:35:28.350 --> 00:35:32.050
The Cloud Platform is our
integrated platform that

00:35:32.050 --> 00:35:37.590
provides multiple services,
a compute service, stored

00:35:37.590 --> 00:35:39.330
service, and application
services.

00:35:39.330 --> 00:35:42.170
I'll show you that on the
diagram in the next slide.

00:35:42.170 --> 00:35:44.425
I already mentioned that it
covers just the platform and

00:35:44.425 --> 00:35:45.890
the infrastructure levels.

00:35:45.890 --> 00:35:49.070
It really is just an extension
of our own infrastructure.

00:35:49.070 --> 00:35:51.830
Before any of this ever existed,
Google had to do all

00:35:51.830 --> 00:35:54.060
this stuff to run
our business.

00:35:54.060 --> 00:35:55.570
We had to make things scale.

00:35:55.570 --> 00:35:57.970
We had to make search
fast and reliable.

00:35:57.970 --> 00:35:59.040
We had to make Gmail work.

00:35:59.040 --> 00:36:00.390
We had to make YouTube work.

00:36:00.390 --> 00:36:03.530
All those things we actually
built for ourselves, and so

00:36:03.530 --> 00:36:06.470
now we're basically creating
sort of like external

00:36:06.470 --> 00:36:09.130
endpoints so that you can access
the same technologies

00:36:09.130 --> 00:36:10.310
that we've built.

00:36:10.310 --> 00:36:13.340
And if you're running on a
Google network, now you have

00:36:13.340 --> 00:36:16.040
access to other Google services
and tools beyond the

00:36:16.040 --> 00:36:18.720
Cloud Platform.

00:36:18.720 --> 00:36:21.220
Things like Google Apps, and
Course Builder, Apps Script,

00:36:21.220 --> 00:36:22.050
and things like that.

00:36:22.050 --> 00:36:24.460
I'll mention some of those
tonight as well.

00:36:24.460 --> 00:36:26.960
And the best part is as we
make improvements to this

00:36:26.960 --> 00:36:29.070
cloud, to make it better, to
make it faster, to add more

00:36:29.070 --> 00:36:30.520
features, guess what?

00:36:30.520 --> 00:36:32.600
You guys get access
to those, too.

00:36:32.600 --> 00:36:34.630
Of course, we have to write
the endpoints for them and

00:36:34.630 --> 00:36:39.340
give you the APIs, but as we
find that certain features we

00:36:39.340 --> 00:36:41.860
think will be valuable to
users, or you tell us if

00:36:41.860 --> 00:36:44.830
things are valuable, then we
will go ahead and make those

00:36:44.830 --> 00:36:48.150
available for you as much
as we possibly can.

00:36:48.150 --> 00:36:52.020
So that's really what the main
idea of the Platform is.

00:36:52.020 --> 00:36:54.260
I mentioned there were three
different pillars

00:36:54.260 --> 00:36:55.790
of the Cloud Platform.

00:36:55.790 --> 00:36:58.820
The compute side, so that's
Compute Engine and App Engine.

00:36:58.820 --> 00:37:00.950
The storage stuff, which is
where you put all your data,

00:37:00.950 --> 00:37:03.590
whether they be files
or pure data.

00:37:03.590 --> 00:37:05.340
And also application services.

00:37:05.340 --> 00:37:09.910
These are the three
major areas.

00:37:09.910 --> 00:37:12.020
Also I didn't want to leave
this out, but you guys

00:37:12.020 --> 00:37:14.050
probably already know that
Google has a worldwide

00:37:14.050 --> 00:37:15.680
network, so I don't really
need to spend

00:37:15.680 --> 00:37:16.550
much time on this.

00:37:16.550 --> 00:37:18.560
Everything is well-connected.

00:37:18.560 --> 00:37:19.780
They're all fiber.

00:37:19.780 --> 00:37:22.650
Everything's very, very quick
even to really remote

00:37:22.650 --> 00:37:24.130
parts of the world.

00:37:24.130 --> 00:37:26.960
I think that the last mile is
usually where the bottlenecks

00:37:26.960 --> 00:37:29.210
always are.

00:37:29.210 --> 00:37:33.340
So, bottom line is
that we use this

00:37:33.340 --> 00:37:35.970
cloud to run our business.

00:37:35.970 --> 00:37:37.540
We want this business
to keep going.

00:37:37.540 --> 00:37:38.650
We want it to be successful.

00:37:38.650 --> 00:37:42.220
We want our apps and our
services to be reliable, to be

00:37:42.220 --> 00:37:43.780
quick, to be secure.

00:37:43.780 --> 00:37:47.200
We want to give that to you
guys, so use what we use.

00:37:47.200 --> 00:37:49.830
Build your software, run your
business in the same place

00:37:49.830 --> 00:37:53.650
that we do with the same scale,
performance, security,

00:37:53.650 --> 00:37:55.850
and value that we built
for ourselves.

00:37:55.850 --> 00:37:56.210
Really.

00:37:56.210 --> 00:37:57.920
I mean, we built for ourselves,
and guess what?

00:37:57.920 --> 00:37:59.610
Now we want to share
that with you.

00:37:59.610 --> 00:38:02.770
Take advantage of all the years,
all the man hours that

00:38:02.770 --> 00:38:05.560
we put into making the dog
gone thing scalable, and

00:38:05.560 --> 00:38:09.230
reliable, and fast,
and secure.

00:38:09.230 --> 00:38:12.190
In fact, I think personally that
scalability is the most

00:38:12.190 --> 00:38:15.030
difficult and the most expensive
thing to build.

00:38:15.030 --> 00:38:17.890
Because you got to hire really
smart people, you got to

00:38:17.890 --> 00:38:21.360
really know how to measure
performance as far as

00:38:21.360 --> 00:38:24.910
minimizing the latency for your
app, being able to handle

00:38:24.910 --> 00:38:28.370
sabotage and DoS attacks,
and things like that.

00:38:28.370 --> 00:38:30.540
All those things we've
had to already worry

00:38:30.540 --> 00:38:33.010
about and try to solve.

00:38:33.010 --> 00:38:36.920
And we got a really nice quote
from "Wired" magazine almost a

00:38:36.920 --> 00:38:43.720
year ago that really describes
how we see our data centers as

00:38:43.720 --> 00:38:46.530
at the core part of the company,
and we really want to

00:38:46.530 --> 00:38:49.720
make some of these services
available to you guys.

00:38:49.720 --> 00:38:51.360
So tonight, we're going to
focus on one part of the

00:38:51.360 --> 00:38:54.590
compute pillar, and that
is App Engine.

00:38:54.590 --> 00:38:56.560
That's really the background
I wanted to set.

00:38:56.560 --> 00:38:59.610
That's the backdrop.

00:38:59.610 --> 00:39:05.700
Moving forward, let's tell
you about App Engine.

00:39:05.700 --> 00:39:09.060
If you were to build another app
today, you got to do the

00:39:09.060 --> 00:39:09.830
LAMP stack.

00:39:09.830 --> 00:39:11.720
You're probably going to have
some sort of database with a

00:39:11.720 --> 00:39:13.340
master and a bunch of slaves.

00:39:13.340 --> 00:39:15.280
Probably going to have a bunch
of front end web servers, and

00:39:15.280 --> 00:39:17.740
then you're going to have some
proxies to do caching and

00:39:17.740 --> 00:39:19.960
things like that.

00:39:19.960 --> 00:39:23.790
But a couple things are missing
from this diagram,

00:39:23.790 --> 00:39:25.220
which is what about failures?

00:39:25.220 --> 00:39:27.930
What about traffic problems
and scaling?

00:39:27.930 --> 00:39:29.790
I don't even think my app shows
up in this picture.

00:39:29.790 --> 00:39:31.740
This is just the foundation
that my app is

00:39:31.740 --> 00:39:33.010
going to run on.

00:39:33.010 --> 00:39:34.910
So there's a lot of things
that you need to set up.

00:39:34.910 --> 00:39:37.520
And even if you've got things
perfectly done-- you've got

00:39:37.520 --> 00:39:40.060
this smart network architect,
he built everything

00:39:40.060 --> 00:39:40.770
perfectly--

00:39:40.770 --> 00:39:42.600
that still doesn't mean that
everything is going to work

00:39:42.600 --> 00:39:44.380
just right.

00:39:44.380 --> 00:39:48.690
So all those problems that I
mentioned, you do outsource

00:39:48.690 --> 00:39:51.310
all of your hardware and
get infrastructure.

00:39:51.310 --> 00:39:53.150
So yes, I got virtual machines,
I got storage.

00:39:53.150 --> 00:39:54.850
But I already mentioned you
have to worry about the

00:39:54.850 --> 00:39:57.500
operating system, and then the
web server, and then the

00:39:57.500 --> 00:39:59.110
database server.

00:39:59.110 --> 00:40:02.500
But I didn't even mention
configuration files, load

00:40:02.500 --> 00:40:07.420
balancing, monitoring,
reporting, software licenses,

00:40:07.420 --> 00:40:12.090
patches, upgrades,
license fees.

00:40:12.090 --> 00:40:14.260
All those things are things that
you need to worry about

00:40:14.260 --> 00:40:16.380
in addition to your
application.

00:40:16.380 --> 00:40:20.230
So the reason why App Engine
exists was because six, seven

00:40:20.230 --> 00:40:25.140
years ago, a couple of smart
people at Google felt that it

00:40:25.140 --> 00:40:29.280
took too long time to go from
concept and code all the way

00:40:29.280 --> 00:40:31.510
to having an app that's
available live around the

00:40:31.510 --> 00:40:33.420
world, and that was the problem

00:40:33.420 --> 00:40:34.860
you're trying to solve.

00:40:34.860 --> 00:40:39.440
And so hopefully, all these
little, brown boxes can be

00:40:39.440 --> 00:40:42.240
dropped into one large box
called App Engine, and

00:40:42.240 --> 00:40:44.310
hopefully we'll give you
familiar tools that you can

00:40:44.310 --> 00:40:48.320
use like Python, Java, PHP, and
Go that you can actually

00:40:48.320 --> 00:40:50.670
build these applications without
changing your skill

00:40:50.670 --> 00:40:53.110
set too much.

00:40:53.110 --> 00:40:56.160
The main idea is to let you
focus on your app, not have to

00:40:56.160 --> 00:40:58.410
worry about the sys admin stuff,
not have to worry about

00:40:58.410 --> 00:41:01.330
the networking, the machines,
and all that extra stuff, like

00:41:01.330 --> 00:41:07.520
I said, that is cross cutting
in relationship to your app.

00:41:07.520 --> 00:41:08.850
Focus on your app.

00:41:08.850 --> 00:41:11.710
Let us wear the pagers, and take
care of the system, and

00:41:11.710 --> 00:41:12.980
all that kind of stuff.

00:41:12.980 --> 00:41:16.870
And so because of that, again, I
want you to not get confused

00:41:16.870 --> 00:41:18.660
between App Engine and
infrastructure services.

00:41:18.660 --> 00:41:21.240
So I don't want to hear are you
going to use App Engine

00:41:21.240 --> 00:41:23.360
versus EC2?

00:41:23.360 --> 00:41:25.190
If you really want to make that
kind of a comparison,

00:41:25.190 --> 00:41:27.390
then you really should be
talking about let's compare

00:41:27.390 --> 00:41:30.790
Google Compute Engine
versus Amazon EC2.

00:41:30.790 --> 00:41:33.780
That's probably a more
fair assessment.

00:41:33.780 --> 00:41:36.470
Because now both of those are
at the infrastructure level,

00:41:36.470 --> 00:41:38.620
and now you can compare them.

00:41:38.620 --> 00:41:41.850
But App Engine is a completely
different beast because it

00:41:41.850 --> 00:41:44.060
handles so many things
for you.

00:41:44.060 --> 00:41:46.720
We're trying to get you to
market faster and not have to

00:41:46.720 --> 00:41:50.660
worry about this extra stuff
that may slow you down.

00:41:50.660 --> 00:41:52.660
If those four languages aren't
good enough for you, because

00:41:52.660 --> 00:41:55.750
we have a JVM, we support a lot
of other popular languages

00:41:55.750 --> 00:41:58.110
today, like Scala Ruby.

00:41:58.110 --> 00:42:01.290
Those are good alternatives
because we have a JVM.

00:42:01.290 --> 00:42:05.260
You can even run Jython,
too, which is Python.

00:42:05.260 --> 00:42:08.290
Even though we have a native
Python, I found out a lot of

00:42:08.290 --> 00:42:11.200
developers really like to use
Jython because they have a lot

00:42:11.200 --> 00:42:14.910
of legacy classes that are
written in Java, and a lot of

00:42:14.910 --> 00:42:16.770
their new development is
happening in Python but they

00:42:16.770 --> 00:42:18.430
don't want to port everything.

00:42:18.430 --> 00:42:21.360
So the nice thing about Jython
is Jython is basically a

00:42:21.360 --> 00:42:24.880
Python interpreter that's
written Java so that Python

00:42:24.880 --> 00:42:27.530
objects can talk to Java objects
and move things back

00:42:27.530 --> 00:42:29.810
and forth because everything
at the bottom level is just

00:42:29.810 --> 00:42:31.150
Java bytecode.

00:42:31.150 --> 00:42:36.970
So it's a really good solution
for software houses that use

00:42:36.970 --> 00:42:38.220
both Java and Python.

00:42:40.490 --> 00:42:44.480
One of the other tricky things
about running in the cloud is

00:42:44.480 --> 00:42:46.810
you're sitting next to a lot
of other people who are

00:42:46.810 --> 00:42:50.610
developers here, but maybe you
might not trust them with your

00:42:50.610 --> 00:42:52.840
source code or your data.

00:42:52.840 --> 00:42:55.330
It probably wouldn't be great
if you could access other

00:42:55.330 --> 00:42:58.410
people's source code
and their data.

00:42:58.410 --> 00:43:02.375
And so in order to make things
secure, we require that all of

00:43:02.375 --> 00:43:05.280
your applications run in a
restricted environment called

00:43:05.280 --> 00:43:06.530
the sandbox.

00:43:06.530 --> 00:43:08.440
And in the sandbox, you can
only play with your

00:43:08.440 --> 00:43:09.700
sand and your toys.

00:43:09.700 --> 00:43:12.590
You can't play with other
people's toys.

00:43:12.590 --> 00:43:15.470
This restricted environment
does not permit you to do

00:43:15.470 --> 00:43:19.160
certain things, like you can't
create a local file.

00:43:19.160 --> 00:43:22.300
You can't open an inbound
socket connection.

00:43:22.300 --> 00:43:25.560
You can't make an operating
system call.

00:43:25.560 --> 00:43:30.650
All those things are security
hazards, so the system

00:43:30.650 --> 00:43:33.360
prevents you from doing
those things.

00:43:33.360 --> 00:43:36.700
But the question you may be
asking me is, well, gee, if I

00:43:36.700 --> 00:43:38.940
can't open a socket connection,
I can't talk to

00:43:38.940 --> 00:43:42.970
another app online, I've got
a pretty useless app.

00:43:42.970 --> 00:43:45.710
I can't really do anything if
I can't talk on the network.

00:43:45.710 --> 00:43:47.110
Maybe I want to talk
to another app

00:43:47.110 --> 00:43:48.560
that's running online.

00:43:48.560 --> 00:43:51.150
Maybe I want to send email,
something really simple.

00:43:51.150 --> 00:43:54.760
I want to open up port
25 or something.

00:43:54.760 --> 00:43:56.970
The thing is, we're
aware of that.

00:43:56.970 --> 00:43:59.690
Why would you want that
low level access?

00:43:59.690 --> 00:44:01.420
Because you're going to have
to rebuild something that

00:44:01.420 --> 00:44:03.170
other people are going to
have the build also.

00:44:03.170 --> 00:44:07.310
So why not give you a higher
level API like the email API?

00:44:07.310 --> 00:44:10.570
You can use the mail API
and send messages.

00:44:10.570 --> 00:44:12.610
Even better is you can actually
have your application

00:44:12.610 --> 00:44:16.210
receive inbound email and
process it programmatically.

00:44:16.210 --> 00:44:19.320
Similarly, if you have to
execute another app that's

00:44:19.320 --> 00:44:22.100
online, there's URL Fetch.

00:44:22.100 --> 00:44:23.330
We give you a database.

00:44:23.330 --> 00:44:27.750
You can choose either the native
NoSQL datastore, or you

00:44:27.750 --> 00:44:31.240
can choose a MySQL compatible
relational database.

00:44:31.240 --> 00:44:33.160
You have two choices there.

00:44:33.160 --> 00:44:38.320
Of course, all of your data is
distributed globally, so the

00:44:38.320 --> 00:44:41.410
rights aren't going to be as
quick as the MySQL server that

00:44:41.410 --> 00:44:44.630
you have sitting on the
floor in your office.

00:44:44.630 --> 00:44:47.600
It's not going to
be that fast.

00:44:47.600 --> 00:44:50.910
Because your data is going to
be global everywhere, if you

00:44:50.910 --> 00:44:53.900
want speed, we recommend that
you cache as much as you

00:44:53.900 --> 00:44:57.140
possibly can, so use Memcache.

00:44:57.140 --> 00:44:59.360
Other services that you can
get access to, we have a

00:44:59.360 --> 00:45:01.350
simple Images API where
you can rotate,

00:45:01.350 --> 00:45:03.320
resize, crop images.

00:45:03.320 --> 00:45:05.700
If you want to store large
audio/video files to serve,

00:45:05.700 --> 00:45:08.680
you can use Cloud Storage
for that.

00:45:08.680 --> 00:45:11.520
We also provide authentication
service, so either you roll

00:45:11.520 --> 00:45:14.930
your own authentication
or you have no OAuth.

00:45:14.930 --> 00:45:17.480
Another option you have is you
can require your users to have

00:45:17.480 --> 00:45:21.510
Google accounts and have
them sign in with that.

00:45:21.510 --> 00:45:24.520
But if you want to be even more
broad and be more open,

00:45:24.520 --> 00:45:27.570
we also have Federated Login
which allows you to have your

00:45:27.570 --> 00:45:29.580
users log in using OpenID.

00:45:29.580 --> 00:45:31.800
So they can log in either with
their Google account, or with

00:45:31.800 --> 00:45:33.530
their Yahoo, or AOL,
or WordPress,

00:45:33.530 --> 00:45:35.310
or any OpenID provider.

00:45:35.310 --> 00:45:38.000
So that gives you some
flexibility there.

00:45:38.000 --> 00:45:40.650
Another restriction that I
didn't mention-- oh, the other

00:45:40.650 --> 00:45:43.720
one I wanted to talk about was
the Channel API which lets you

00:45:43.720 --> 00:45:45.790
maintain connections
to the browser.

00:45:45.790 --> 00:45:48.730
And the reason why I'm
mentioning the Task Queue and

00:45:48.730 --> 00:45:51.800
the Channel API last is because
one other restriction

00:45:51.800 --> 00:45:55.180
that I haven't told you about
yet is you can't hog all of

00:45:55.180 --> 00:45:57.060
the resources.

00:45:57.060 --> 00:46:00.160
There's other people running
on the same machine as you.

00:46:00.160 --> 00:46:03.350
You cannot run for more
than 60 seconds.

00:46:03.350 --> 00:46:07.880
When a user at their web browser
hits your app, you

00:46:07.880 --> 00:46:12.920
need to respond back to that
user in less than 60 seconds.

00:46:12.920 --> 00:46:16.970
As a human, you can to tell
whether or not it's slow by

00:46:16.970 --> 00:46:17.980
even one second.

00:46:17.980 --> 00:46:19.750
You know that.

00:46:19.750 --> 00:46:22.520
So 60 seconds is way long.

00:46:22.520 --> 00:46:25.770
But if for some reason you need
to fire off something

00:46:25.770 --> 00:46:28.030
that may take a long time, like
you need to talk to other

00:46:28.030 --> 00:46:31.070
APIs, the Facebook API, the
Twitter API, or you need to

00:46:31.070 --> 00:46:34.860
run a large batch job somewhere
in the background or

00:46:34.860 --> 00:46:38.760
elsewhere online, you don't
necessarily have to be

00:46:38.760 --> 00:46:43.520
restricted to that 60 seconds
if you don't want to.

00:46:43.520 --> 00:46:45.790
An alternative is to
use the Task Queue.

00:46:45.790 --> 00:46:48.460
We have different types of Task
Queues, but the one that

00:46:48.460 --> 00:46:52.440
I'm going to describe let's
you just fire off those

00:46:52.440 --> 00:46:54.330
background tasks using
the Task Queue.

00:46:54.330 --> 00:46:57.360
Those things, each individual
task, can run up to 10

00:46:57.360 --> 00:46:59.540
minutes, not 60 seconds.

00:46:59.540 --> 00:47:02.310
So you have 10 minutes of
execution time there.

00:47:02.310 --> 00:47:06.140
And the reason why the Channel
API is here is because if you

00:47:06.140 --> 00:47:08.620
fire off a background task,
you really want to respond

00:47:08.620 --> 00:47:11.980
back to your user in less
than a second or so.

00:47:11.980 --> 00:47:14.170
So you can actually fire off a
task, respond back to your

00:47:14.170 --> 00:47:16.370
user, but that doesn't mean
you need to lose all

00:47:16.370 --> 00:47:18.630
connectivity with your user.

00:47:18.630 --> 00:47:20.520
Maybe you want to tell them
when that thing is done or

00:47:20.520 --> 00:47:22.700
when it's ready, or maybe you
want to refresh their web

00:47:22.700 --> 00:47:25.560
page, or do something else with
their UI so that they can

00:47:25.560 --> 00:47:27.070
tell something's been done.

00:47:27.070 --> 00:47:28.390
That's what the Channel
API is.

00:47:28.390 --> 00:47:30.750
Because that lets you hold onto
to a connection to the

00:47:30.750 --> 00:47:34.100
user's browser, and when that
background job is done, you

00:47:34.100 --> 00:47:37.740
can actually send a message
through the Channel API, the

00:47:37.740 --> 00:47:40.860
channel that's connected to that
user's browser, and take

00:47:40.860 --> 00:47:42.600
whatever action you need to.

00:47:42.600 --> 00:47:44.860
So just because you fire up
off a background task or

00:47:44.860 --> 00:47:48.280
respond to a user doesn't mean
you have to have bad user

00:47:48.280 --> 00:47:49.840
experience.

00:47:49.840 --> 00:47:52.200
So these are just nine
of the core APIs.

00:47:52.200 --> 00:47:54.380
There's almost 40 of them.

00:47:54.380 --> 00:47:57.100
There's way more than I can
put on a slide here.

00:47:57.100 --> 00:47:58.910
There's the MapReduce API.

00:47:58.910 --> 00:48:02.000
There's the Search API that
lets you index your data,

00:48:02.000 --> 00:48:06.370
whether you're searching for
text, or for time stamps, or

00:48:06.370 --> 00:48:09.950
for geopoints for lat-long
searching.

00:48:09.950 --> 00:48:12.530
So there's lots of other
services that I don't have

00:48:12.530 --> 00:48:16.490
listed here, but these are
sort of the main nine.

00:48:16.490 --> 00:48:19.230
We give you these higher level
services to make up for what

00:48:19.230 --> 00:48:21.580
you can't get because you
don't have the same full

00:48:21.580 --> 00:48:25.940
control over the machine
that you used to.

00:48:25.940 --> 00:48:27.390
How does it work?

00:48:27.390 --> 00:48:29.010
It's very, very similar.

00:48:29.010 --> 00:48:30.770
This is not too much
rocket science.

00:48:30.770 --> 00:48:33.440
We have front end machines that
get the request, and then

00:48:33.440 --> 00:48:35.940
we have App Engine app servers
that run your app.

00:48:35.940 --> 00:48:39.130
And whenever they need to talk
to another service, like you

00:48:39.130 --> 00:48:41.450
need to request something from
them Memcache or you need to

00:48:41.450 --> 00:48:44.340
send something to the datastore,
it fires off those

00:48:44.340 --> 00:48:45.950
RPCs to the back end.

00:48:45.950 --> 00:48:47.730
They do their work, they get
back to the server, which

00:48:47.730 --> 00:48:49.710
responds back to your user.

00:48:49.710 --> 00:48:55.540
So it's not exactly rocket
science, but what you don't

00:48:55.540 --> 00:48:58.280
see here is the scalability
that's done

00:48:58.280 --> 00:48:59.950
automatically for you.

00:48:59.950 --> 00:49:02.990
It's autoscaling where you don't
think about how many

00:49:02.990 --> 00:49:05.130
instances of your app are up.

00:49:05.130 --> 00:49:07.460
You don't really
care, actually.

00:49:07.460 --> 00:49:09.330
You just want your app to be
working in responding to your

00:49:09.330 --> 00:49:13.900
users, and that's really all you
should be thinking about.

00:49:13.900 --> 00:49:16.520
Another thing you don't have
control over is I can't log in

00:49:16.520 --> 00:49:17.520
and download my logs.

00:49:17.520 --> 00:49:19.980
I can't SSH into my box because
there is no box,

00:49:19.980 --> 00:49:23.690
because you've decided to upload
your apps to Google.

00:49:23.690 --> 00:49:26.210
Your apps are actually running
in the same data centers, on

00:49:26.210 --> 00:49:28.910
the same machines, as what's
running Search, and YouTube ,

00:49:28.910 --> 00:49:31.090
and Gmail, and all those
different things.

00:49:31.090 --> 00:49:33.330
Those servers you don't
have access to.

00:49:33.330 --> 00:49:35.770
And so why would you want to
log in and get your logs?

00:49:35.770 --> 00:49:37.550
Well, maybe you want to do some
analysis like what kind

00:49:37.550 --> 00:49:39.790
of traffic am I getting?

00:49:39.790 --> 00:49:41.880
Have I gone over my
free quota yet?

00:49:41.880 --> 00:49:45.160
The team knows this stuff, so we
have a developer's console

00:49:45.160 --> 00:49:47.310
that shows you information about
your app that you would

00:49:47.310 --> 00:49:49.010
otherwise have to
build anyway.

00:49:49.010 --> 00:49:51.190
In fact, everybody that writes
apps should be building

00:49:51.190 --> 00:49:52.520
something like this.

00:49:52.520 --> 00:49:55.310
But instead, we created for you
on your behalf so that you

00:49:55.310 --> 00:49:56.340
don't have to worry about it.

00:49:56.340 --> 00:49:57.670
So you can measure
your traffic.

00:49:57.670 --> 00:49:58.920
You can your measure
traffic rate.

00:49:58.920 --> 00:50:01.410
If you can see the numbers, if
you squint really carefully,

00:50:01.410 --> 00:50:07.310
you can see that this app is
averaging about 0.2, and then

00:50:07.310 --> 00:50:09.140
the number is requests
per second.

00:50:09.140 --> 00:50:12.570
So 0.2 requests a second means
one user like every five

00:50:12.570 --> 00:50:13.900
seconds or so.

00:50:13.900 --> 00:50:17.060
And then there's a couple of
peaks here, and it looks like

00:50:17.060 --> 00:50:19.050
it's peaking about 0.5.

00:50:19.050 --> 00:50:20.580
So maybe at the peak
it's getting a

00:50:20.580 --> 00:50:22.820
user every other second.

00:50:22.820 --> 00:50:24.020
That's not a dead app.

00:50:24.020 --> 00:50:27.550
It's not exactly a hard core,
viral app, but it is getting

00:50:27.550 --> 00:50:29.090
some traffic.

00:50:29.090 --> 00:50:30.280
It is getting some traffic.

00:50:30.280 --> 00:50:32.470
So that's one thing
to recognize.

00:50:32.470 --> 00:50:35.630
This is a pull down, if you
could probably tell, but you

00:50:35.630 --> 00:50:37.320
can pull down a whole bunch
of other charts, too.

00:50:37.320 --> 00:50:39.480
Like what's my error
rate for my app?

00:50:39.480 --> 00:50:41.360
How many errors am I generating
per second?

00:50:41.360 --> 00:50:45.330
Or there's lots of other
different metrics that are

00:50:45.330 --> 00:50:46.950
measured graphs that you
can take a look at.

00:50:46.950 --> 00:50:48.610
You can also see your
billing settings.

00:50:48.610 --> 00:50:52.910
You can see how close am I to
the end of the free quota?

00:50:52.910 --> 00:50:54.350
Have I gone over
the free quota?

00:50:54.350 --> 00:50:55.760
How much of I budgeted?

00:50:55.760 --> 00:50:57.990
How much has it cost me today?

00:50:57.990 --> 00:51:02.270
The daily cost, of course,
refreshes every 24 hours.

00:51:02.270 --> 00:51:06.080
And we give you lots of knobs
and dials so that is actually

00:51:06.080 --> 00:51:08.280
tune your app in its
performance to

00:51:08.280 --> 00:51:10.170
control your budget.

00:51:10.170 --> 00:51:12.460
This screenshots, I don't know
if you guys recognize this,

00:51:12.460 --> 00:51:14.670
but this is from
four years ago.

00:51:14.670 --> 00:51:17.620
Today's admin console is way
more complex than this.

00:51:17.620 --> 00:51:20.760
There are so many features on it
that I don't really want to

00:51:20.760 --> 00:51:23.600
overwhelm you, but this
is the minimum of what

00:51:23.600 --> 00:51:24.520
you're going to get.

00:51:24.520 --> 00:51:27.090
If you take a look at your admin
console when you get

00:51:27.090 --> 00:51:29.430
back to your office or back home
tonight, you'll see that

00:51:29.430 --> 00:51:30.950
it has a lot more
features here.

00:51:30.950 --> 00:51:32.500
But in this admin console
you can do lots

00:51:32.500 --> 00:51:33.090
of different things.

00:51:33.090 --> 00:51:37.300
You can check what your
full quota usage is.

00:51:37.300 --> 00:51:39.100
Your billing settings,
you can adjust that.

00:51:39.100 --> 00:51:43.070
You can set who are your
developers, who can upload new

00:51:43.070 --> 00:51:46.820
versions of your app, who can
look at your app, who can

00:51:46.820 --> 00:51:49.250
operate in the admin console.

00:51:49.250 --> 00:51:51.730
You can take a look at your
data through here.

00:51:51.730 --> 00:51:53.750
So there's all kinds of things
that you can do from the admin

00:51:53.750 --> 00:51:57.020
console because you don't have
access to the machines.

00:51:57.020 --> 00:52:00.730
So we give you this
in lieu of that.

00:52:00.730 --> 00:52:02.380
So now we can talk about
some numbers.

00:52:02.380 --> 00:52:05.510
Usually when you ask a Google
employee can you tell me how

00:52:05.510 --> 00:52:07.810
much this, how much that,
usually we tell you,

00:52:07.810 --> 00:52:09.860
sorry, we can't say.

00:52:09.860 --> 00:52:11.590
These are actually numbers
we can talk about.

00:52:11.590 --> 00:52:13.080
Like how many people
are actually

00:52:13.080 --> 00:52:14.570
building App Engine apps?

00:52:14.570 --> 00:52:16.910
Well, there's more than a
quarter of a million people

00:52:16.910 --> 00:52:21.140
who are developing apps, and
this is on a monthly basis.

00:52:21.140 --> 00:52:23.530
Of these 3 million active
developers, they have more

00:52:23.530 --> 00:52:26.380
than 3 million active
applications.

00:52:26.380 --> 00:52:29.220
"Active" means not the Hello
World you tried two and a half

00:52:29.220 --> 00:52:31.630
years ago that no one's
checking out anymore.

00:52:31.630 --> 00:52:34.510
These are apps that are either
getting traffic and/or are

00:52:34.510 --> 00:52:37.350
getting new versions being
uploaded, people checking into

00:52:37.350 --> 00:52:38.910
the admin console,
things like that.

00:52:38.910 --> 00:52:40.160
Active.

00:52:42.470 --> 00:52:45.510
In fact, half of all the IP
addresses that are in

00:52:45.510 --> 00:52:48.120
circulation out there, public IP
address, will touch an App

00:52:48.120 --> 00:52:51.190
Engine server every
single week.

00:52:51.190 --> 00:52:54.020
That's not to say so
that App Engine

00:52:54.020 --> 00:52:55.540
runs half of the internet.

00:52:55.540 --> 00:52:58.940
It's that half of IP addresses
touch an App Engine server.

00:52:58.940 --> 00:53:01.830
What that really means is you
may be using App Engine and

00:53:01.830 --> 00:53:03.290
not know it.

00:53:03.290 --> 00:53:05.770
And I'll give you some
examples of when

00:53:05.770 --> 00:53:07.320
that may be the case.

00:53:07.320 --> 00:53:09.660
How about those big numbers?

00:53:09.660 --> 00:53:11.750
If you were to put all 3
million of these active

00:53:11.750 --> 00:53:15.190
applications together, how
many page views or

00:53:15.190 --> 00:53:15.970
application--

00:53:15.970 --> 00:53:20.850
HTTP hits do you think we get
on a daily basis, per day?

00:53:20.850 --> 00:53:23.460
Any ideas?

00:53:23.460 --> 00:53:27.560
How about 7.5 billion?

00:53:27.560 --> 00:53:30.740
And in fact, all the apps put
together in a month will

00:53:30.740 --> 00:53:34.500
generate 4 and 1/2 trillion
datastore requests, and this

00:53:34.500 --> 00:53:36.230
is in the native NoSQL
datastore.

00:53:36.230 --> 00:53:41.290
This is not with the MySQL
relational database.

00:53:41.290 --> 00:53:43.690
That's a lot of traffic,
without going

00:53:43.690 --> 00:53:47.310
down as well, either.

00:53:47.310 --> 00:53:49.750
So those are some of the
googley-sized numbers.

00:53:49.750 --> 00:53:52.920
Oh, by the way, you know how
we release products, they

00:53:52.920 --> 00:53:55.230
always come out as beta first?

00:53:55.230 --> 00:53:58.910
The thing that actually caused
us to get over that and become

00:53:58.910 --> 00:54:01.290
an official product is when
we passed a billion.

00:54:01.290 --> 00:54:03.430
That attracted the attention
of some of our vice

00:54:03.430 --> 00:54:04.390
presidents.

00:54:04.390 --> 00:54:06.670
So they really won't notice
you until you do something

00:54:06.670 --> 00:54:10.490
like a googley number like
that, a billion.

00:54:10.490 --> 00:54:13.700
And so of course, Google
products generally have one or

00:54:13.700 --> 00:54:15.680
two different ends.

00:54:15.680 --> 00:54:17.370
One is not so good.

00:54:17.370 --> 00:54:19.590
The other one is a wine
and cheese party.

00:54:19.590 --> 00:54:21.840
So when we got the wine and
cheese party, that was a good

00:54:21.840 --> 00:54:23.650
sign that App Engine
was on its way to

00:54:23.650 --> 00:54:24.920
become an official product.

00:54:24.920 --> 00:54:29.200
And as of November of 2011,
almost two years ago, it is an

00:54:29.200 --> 00:54:31.250
official product, which means
it has to go through our

00:54:31.250 --> 00:54:34.980
normal deprecation policy
and things like that.

00:54:34.980 --> 00:54:36.420
So those are some numbers.

00:54:36.420 --> 00:54:37.460
There's a bunch of users.

00:54:37.460 --> 00:54:39.520
I can't put them all
on the page.

00:54:39.520 --> 00:54:41.850
There's just too many
to list, but I will

00:54:41.850 --> 00:54:43.470
discuss a couple of them.

00:54:43.470 --> 00:54:47.370
Some are big names that you'll
recognize, but while it may be

00:54:47.370 --> 00:54:50.730
true that most of Khan Academy
runs on App Engine, not all of

00:54:50.730 --> 00:54:53.910
Best Buy or MTV or Evite
runs on App Engine.

00:54:53.910 --> 00:54:57.800
But some of them run a good
chunk of stuff, a good amount

00:54:57.800 --> 00:55:02.160
of traffic sent our way.

00:55:02.160 --> 00:55:05.280
I'm going to talk about a
variety of different apps from

00:55:05.280 --> 00:55:06.040
different developers.

00:55:06.040 --> 00:55:07.780
Some are old, some are
new, but just to

00:55:07.780 --> 00:55:09.450
give you a rough idea.

00:55:09.450 --> 00:55:12.120
I want to give you an idea of
the scaling, and then I want

00:55:12.120 --> 00:55:13.740
to tell you a little bit more
about current apps that are

00:55:13.740 --> 00:55:15.450
being built.

00:55:15.450 --> 00:55:20.200
Some of the older ones, one of
them is I want to talk about

00:55:20.200 --> 00:55:21.880
long-term scaling.

00:55:21.880 --> 00:55:24.720
We've got this app that's been
around since the early days of

00:55:24.720 --> 00:55:25.390
App Engine.

00:55:25.390 --> 00:55:28.890
It's called BuddyPoke.

00:55:28.890 --> 00:55:30.640
And it's a cutesy app.

00:55:30.640 --> 00:55:32.320
It's got avatars and
stuff like that.

00:55:32.320 --> 00:55:34.380
It's probably not for
my age group.

00:55:36.935 --> 00:55:39.770
It's probably not for
me, basically.

00:55:39.770 --> 00:55:45.845
But they have a lot of users,
and in 2011 they actually had

00:55:45.845 --> 00:55:48.700
more than 64 million
registered users.

00:55:48.700 --> 00:55:50.690
The 62 number is from 2010.

00:55:50.690 --> 00:55:53.110
So the year after, they had
more than 64 million

00:55:53.110 --> 00:55:54.110
registered users.

00:55:54.110 --> 00:55:56.840
What you should be thinking is,
oh, that means they have

00:55:56.840 --> 00:56:00.350
more than 64 million objects
in their datastore.

00:56:00.350 --> 00:56:02.750
That's what you really
should be thinking.

00:56:02.750 --> 00:56:04.860
Other people go, oh, I'm
really skeptical.

00:56:04.860 --> 00:56:06.160
I don't care about
registered users.

00:56:06.160 --> 00:56:09.280
Tell me how many people use
this app every single day.

00:56:09.280 --> 00:56:14.570
So back in 2011 when MySpace
was around, Facebook and

00:56:14.570 --> 00:56:19.630
MySpace, I'd probably say that
most of the traffic from

00:56:19.630 --> 00:56:21.480
MySpace has probably gone
Facebook by now.

00:56:21.480 --> 00:56:24.430
So roughly I'd say 5 and 1/2
to 6 billion daily, active

00:56:24.430 --> 00:56:27.080
users, people that log into
the app every day.

00:56:27.080 --> 00:56:28.980
So that's not too bad.

00:56:28.980 --> 00:56:31.260
So that's one type of scaling,
just a large,

00:56:31.260 --> 00:56:35.050
slowly growing datastore.

00:56:35.050 --> 00:56:37.090
Another type of scaling comes
from a different company

00:56:37.090 --> 00:56:41.460
called Gigya, and what they do
is they build apps for very

00:56:41.460 --> 00:56:45.620
specific purposes, like some
sporting event or a Hollywood

00:56:45.620 --> 00:56:46.700
movie promo.

00:56:46.700 --> 00:56:49.880
Their apps typically get no
traffic, then all off a sudden

00:56:49.880 --> 00:56:51.790
they get an obscene
amount of traffic.

00:56:51.790 --> 00:56:53.970
And then all off a sudden it
dies, and then they go back

00:56:53.970 --> 00:56:55.660
and reskin that app for
another purpose.

00:56:58.220 --> 00:57:00.110
Do you remember that picture
that I showed you from the

00:57:00.110 --> 00:57:03.420
admin console where they were
getting 0.2 requests per

00:57:03.420 --> 00:57:06.310
second and then peaking about
0.5 requests per second?

00:57:06.310 --> 00:57:08.090
If you look very carefully
at these numbers, they're

00:57:08.090 --> 00:57:11.330
slightly bigger than
0.2 and 0.5.

00:57:11.330 --> 00:57:13.200
This number is 400.

00:57:13.200 --> 00:57:16.920
So in your head, you're thinking
400 users per second

00:57:16.920 --> 00:57:18.870
accessing this app.

00:57:18.870 --> 00:57:22.790
So it has no traffic, and then
presumably some PR goes out

00:57:22.790 --> 00:57:24.690
for the event, and then
people go to the

00:57:24.690 --> 00:57:25.800
website, blah blah blah.

00:57:25.800 --> 00:57:28.515
So it actually climbs
pretty quickly.

00:57:28.515 --> 00:57:32.790
I'd say within half an hour,
it climbs to 800 QPS.

00:57:32.790 --> 00:57:35.900
That's 800 browsers submitting
a request to

00:57:35.900 --> 00:57:38.130
this app every second.

00:57:38.130 --> 00:57:42.380
Then the event looks like it
starts right here, and then it

00:57:42.380 --> 00:57:44.520
ramps up really, really
quickly now.

00:57:44.520 --> 00:57:48.180
And during the course of the--
it appears to be about an

00:57:48.180 --> 00:57:49.880
hour's worth.

00:57:49.880 --> 00:57:53.150
In the course of one hours,
it peaks at pretty

00:57:53.150 --> 00:57:55.060
much exactly 1,600.

00:57:55.060 --> 00:58:00.510
That's 1,600 users per second
accessing this app without

00:58:00.510 --> 00:58:01.810
having it go down.

00:58:01.810 --> 00:58:04.650
And then you can see probably
that the event ends just

00:58:04.650 --> 00:58:06.470
around here.

00:58:06.470 --> 00:58:11.850
And this event was, if I
remember correctly, a relief

00:58:11.850 --> 00:58:13.600
for the Haiti earthquake.

00:58:13.600 --> 00:58:16.770
It was a benefit for people
who survived and to help

00:58:16.770 --> 00:58:17.750
things out.

00:58:17.750 --> 00:58:22.680
And so that was one example of
an app that they did just to

00:58:22.680 --> 00:58:24.690
give you an idea
of the traffic.

00:58:24.690 --> 00:58:30.740
So 1,600 users, that's a lot of
requests, but let's say we

00:58:30.740 --> 00:58:32.810
want to get bigger, because
this is Google.

00:58:32.810 --> 00:58:35.720
We want to get bigger, better,
more traffic, more traffic.

00:58:35.720 --> 00:58:38.700
And so beyond short-term
scaling, I need to talk to you

00:58:38.700 --> 00:58:42.750
about royal scaling.

00:58:42.750 --> 00:58:45.040
This is the extreme case now.

00:58:45.040 --> 00:58:46.760
So we all know that the wedding
happened a couple

00:58:46.760 --> 00:58:48.340
years ago, that's fine.

00:58:48.340 --> 00:58:51.890
It's finally had a
result recently.

00:58:51.890 --> 00:58:55.020
But their blog was an App Engine
app, and on the wedding

00:58:55.020 --> 00:59:00.210
day, they got up to 2,000
QPS, 2,000 users per

00:59:00.210 --> 00:59:02.170
second hitting the app.

00:59:02.170 --> 00:59:04.900
And the YouTube live stream was
also on App Engine app.

00:59:04.900 --> 00:59:06.960
Its number was slightly
more than that.

00:59:06.960 --> 00:59:10.580
They had 32,000 requests
per second.

00:59:10.580 --> 00:59:15.020
32,000 users per second
hitting this app.

00:59:15.020 --> 00:59:16.900
And that's a really
giant number.

00:59:16.900 --> 00:59:20.420
And when the kiss happened, or
the double kiss happened, it

00:59:20.420 --> 00:59:22.650
peaked at another 10K
on top of that.

00:59:22.650 --> 00:59:27.820
So 42 KQPS, which are four
letters I don't usually say

00:59:27.820 --> 00:59:29.925
next to each other.

00:59:29.925 --> 00:59:33.080
It's an obscene amount
of scaling.

00:59:33.080 --> 00:59:38.530
This ain't your daddy's cheap
PHP hosting service.

00:59:38.530 --> 00:59:40.730
That is not the purpose of it,
even though App Engine

00:59:40.730 --> 00:59:43.600
supports PHP now.

00:59:43.600 --> 00:59:46.550
The purpose is to build
something like this

00:59:46.550 --> 00:59:49.140
that won't fall down.

00:59:49.140 --> 00:59:51.340
That is really what
you're getting.

00:59:51.340 --> 00:59:53.440
If you want cheap PHP hosting,
that's fine,

00:59:53.440 --> 00:59:53.950
you can go for that.

00:59:53.950 --> 00:59:57.270
It's going to be cheaper,
honestly.

00:59:57.270 --> 01:00:00.680
You're trying to create the next
startup that goes viral,

01:00:00.680 --> 01:00:05.460
and App Engine is a proper,
appropriate product for that.

01:00:05.460 --> 01:00:07.340
So far, all the apps I've
mentioned have been web-based,

01:00:07.340 --> 01:00:07.920
but guess what?

01:00:07.920 --> 01:00:09.520
Your UI could be
somewhere else.

01:00:09.520 --> 01:00:11.880
It doesn't have to
be web-based.

01:00:11.880 --> 01:00:13.480
You could create a mobile app.

01:00:13.480 --> 01:00:14.840
That's where your UI is.

01:00:14.840 --> 01:00:17.260
And if you want to give your
users a good experience,

01:00:17.260 --> 01:00:19.430
you're going to have to store
some data somewhere.

01:00:19.430 --> 01:00:22.835
If you're a game creator, you
make this awesome game, people

01:00:22.835 --> 01:00:24.270
work really hard, compete
with their

01:00:24.270 --> 01:00:25.820
friends, get a high score.

01:00:25.820 --> 01:00:28.600
If they're students, and they
know they go to a party,

01:00:28.600 --> 01:00:30.900
things happen to their phones.

01:00:30.900 --> 01:00:34.440
If they have to replace their
phone, get a new one, download

01:00:34.440 --> 01:00:36.630
your app again, log
into your app.

01:00:36.630 --> 01:00:39.050
If they don't see those same
high scores, they're probably

01:00:39.050 --> 01:00:42.250
not going to play your app
anymore, because that's not a

01:00:42.250 --> 01:00:43.250
great user experience.

01:00:43.250 --> 01:00:45.540
You really want to offload some
of this stuff to the back

01:00:45.540 --> 01:00:48.390
end service, have this data
stored elsewhere, so that

01:00:48.390 --> 01:00:50.230
people can check their high
scores from their phone or

01:00:50.230 --> 01:00:52.060
from their desktops or whatnot,

01:00:52.060 --> 01:00:53.520
or tablet, or whatever.

01:00:53.520 --> 01:00:55.740
So you really want to be putting
things into the cloud.

01:00:58.380 --> 01:00:59.350
You have a similar
choice if you're

01:00:59.350 --> 01:01:00.700
building a back end anyway.

01:01:00.700 --> 01:01:02.770
Either you're going to be doing
it yourself and hosting

01:01:02.770 --> 01:01:06.130
it yourself, or you can rely on
a service like App Engine

01:01:06.130 --> 01:01:10.810
which all you need is HTTP to
access your app and give your

01:01:10.810 --> 01:01:14.090
users a much better
experience.

01:01:14.090 --> 01:01:16.170
And this leads to what are some
of those apps I may be

01:01:16.170 --> 01:01:18.920
using that are App Engine apps
but I don't know it?

01:01:18.920 --> 01:01:21.140
Maybe I want to check
the news.

01:01:21.140 --> 01:01:22.220
There's an app called Pulse.

01:01:22.220 --> 01:01:24.420
I don't know if anybody's a user
of it, but they're a very

01:01:24.420 --> 01:01:25.180
popular app.

01:01:25.180 --> 01:01:27.320
They're one of the top apps in
the iTunes store, as well as

01:01:27.320 --> 01:01:29.720
in the Google Play store.

01:01:29.720 --> 01:01:32.050
And they got a bunch of awards
in 2011 when they launched,

01:01:32.050 --> 01:01:34.300
but still going strong.

01:01:34.300 --> 01:01:37.870
They have apps for Android,
for iOS, and for Kindle.

01:01:37.870 --> 01:01:40.130
They have more than 30 million
users, and people read more

01:01:40.130 --> 01:01:41.410
than 10 million stories a day.

01:01:41.410 --> 01:01:44.660
They get thousands of
QPS just like the

01:01:44.660 --> 01:01:47.630
non-royal wedding app.

01:01:47.630 --> 01:01:49.650
And again, more than one million
requests every day.

01:01:49.650 --> 01:01:53.930
And they were kind enough to
write a story for us in our

01:01:53.930 --> 01:01:56.560
blog back in 2011.

01:01:56.560 --> 01:02:00.080
But we really want to make
mobile development easy, and

01:02:00.080 --> 01:02:03.530
so we have a tutorial and sample
code to help you get

01:02:03.530 --> 01:02:04.340
started with that.

01:02:04.340 --> 01:02:06.850
And then I'll also mention
another tool that App Engine

01:02:06.850 --> 01:02:12.260
has that is made for you to
start to build your mobile

01:02:12.260 --> 01:02:15.940
version of your app easier,
so I'll talk about that a

01:02:15.940 --> 01:02:18.280
little later on.

01:02:18.280 --> 01:02:21.430
There are other apps online that
you may not be aware is

01:02:21.430 --> 01:02:22.210
App Engine.

01:02:22.210 --> 01:02:26.180
Even if you play the web version
of Angry Birds, that

01:02:26.180 --> 01:02:28.660
web page has to be served
by something.

01:02:28.660 --> 01:02:31.380
It's served by App Engine.

01:02:31.380 --> 01:02:32.410
And those aren't
the only apps.

01:02:32.410 --> 01:02:34.270
There's plenty more.

01:02:34.270 --> 01:02:38.175
As far as modern day apps are
concerned, we have Snapchat.

01:02:38.175 --> 01:02:39.840
I don't know if any of you guys
are familiar with this

01:02:39.840 --> 01:02:41.830
service, but it's like
Instagram but

01:02:41.830 --> 01:02:42.930
the pictures disappear.

01:02:42.930 --> 01:02:45.410
So if you do something naughty
over the weekend, you take a

01:02:45.410 --> 01:02:47.390
picture you want to share with
you friends but you want it to

01:02:47.390 --> 01:02:49.960
have a TTL, that's
a snapshot is.

01:02:49.960 --> 01:02:55.150
It's a sharing of images that
all expire, so the proof of

01:02:55.150 --> 01:02:59.120
your debauchery is not going
to be long-lived.

01:02:59.120 --> 01:03:02.130
They serve 150 million
snaps a day.

01:03:02.130 --> 01:03:03.285
They're a big App Engine user.

01:03:03.285 --> 01:03:05.440
I don't know if you guys
have played SongPop.

01:03:05.440 --> 01:03:08.180
It's a very popular app mobile
as well as on Facebook.

01:03:08.180 --> 01:03:10.390
Basically it's name that tune.

01:03:10.390 --> 01:03:12.780
As fast as you can, in the
shortest amount of time.

01:03:12.780 --> 01:03:16.250
You guys probably can't be me.

01:03:16.250 --> 01:03:18.750
But along with App Engine,
they also use

01:03:18.750 --> 01:03:21.170
Google Cloud Storage.

01:03:21.170 --> 01:03:24.850
They serve more than 18
terabytes a day of music.

01:03:24.850 --> 01:03:27.800
They have 80 million registered
users with more

01:03:27.800 --> 01:03:30.680
than 1 million daily
active users.

01:03:30.680 --> 01:03:31.730
So that's another.

01:03:31.730 --> 01:03:34.740
These are more modern day apps
that are using the Google

01:03:34.740 --> 01:03:37.350
Cloud Platform.

01:03:37.350 --> 01:03:39.770
So now let's make developing
the mobile

01:03:39.770 --> 01:03:40.980
version of your app easy.

01:03:40.980 --> 01:03:42.730
You've got an App Engine app.

01:03:42.730 --> 01:03:46.640
If you code in a very specific
way, you can access Google

01:03:46.640 --> 01:03:47.950
Cloud Endpoints.

01:03:47.950 --> 01:03:51.120
What Cloud Endpoints is, is that
it takes all your code

01:03:51.120 --> 01:03:54.050
that you've put in nice,
convenient places.

01:03:54.050 --> 01:03:57.220
It builds all the boilerplate
for you, from your app, but

01:03:57.220 --> 01:04:01.365
will also compile and give you
boilerplate code in Java for

01:04:01.365 --> 01:04:02.090
your Android apps.

01:04:02.090 --> 01:04:05.020
So it'll give you Objective
C code for your iOS apps.

01:04:05.020 --> 01:04:07.400
It'll also generate some
JavaScript if you want a

01:04:07.400 --> 01:04:09.760
mobile web version
of your app.

01:04:09.760 --> 01:04:12.860
The purpose of this tool is to
make it easy for you to build

01:04:12.860 --> 01:04:17.230
APIs to your back office, the
back end version of your app,

01:04:17.230 --> 01:04:20.290
that's running on App Engine
and to get you started with

01:04:20.290 --> 01:04:20.940
the front end.

01:04:20.940 --> 01:04:23.180
So you can worry about the front
end, but the back end is

01:04:23.180 --> 01:04:24.550
taken care of for you.

01:04:24.550 --> 01:04:27.210
There's also a tutorial and some
sample code that you can

01:04:27.210 --> 01:04:28.220
here as well.

01:04:28.220 --> 01:04:30.860
So you can watch a five minute
video, and then you can

01:04:30.860 --> 01:04:34.070
download the code and
get playing with it.

01:04:34.070 --> 01:04:35.890
So that's the Cloud Endpoints.

01:04:35.890 --> 01:04:38.500
As you can see, based on
everything I've run through so

01:04:38.500 --> 01:04:42.260
far, they're just a few examples
of App Engine apps.

01:04:42.260 --> 01:04:45.730
There's so many more that I
don't have the time to talk

01:04:45.730 --> 01:04:47.020
about them.

01:04:47.020 --> 01:04:48.830
Believe it or not, App Engine's
really popular with

01:04:48.830 --> 01:04:49.740
dating sites.

01:04:49.740 --> 01:04:51.840
Who knew?

01:04:51.840 --> 01:04:56.610
Similarly, it's a very great
platform to have students

01:04:56.610 --> 01:05:00.140
learning how to code web apps
and mobile apps in schools.

01:05:00.140 --> 01:05:02.170
I'll talk about pricing later,
but we have a pretty

01:05:02.170 --> 01:05:05.470
generous free tier.

01:05:05.470 --> 01:05:09.010
And so you can even use it in
research projects, or in back

01:05:09.010 --> 01:05:12.580
the school IT staff can use it
to create apps to help operate

01:05:12.580 --> 01:05:13.540
the school.

01:05:13.540 --> 01:05:14.285
Same goes for enterprise.

01:05:14.285 --> 01:05:16.970
You can build enterprise
apps with this thing.

01:05:16.970 --> 01:05:18.710
It's not just for web apps.

01:05:18.710 --> 01:05:20.760
It's for all kinds of apps.

01:05:20.760 --> 01:05:23.070
So those are just some of the
popular use cases that we've

01:05:23.070 --> 01:05:26.240
seen so far.

01:05:26.240 --> 01:05:29.040
Now to the management
set of slides.

01:05:29.040 --> 01:05:33.770
Obviously, when I go talk to
CIOs and CTOs, besides are

01:05:33.770 --> 01:05:36.510
there any educational discounts,
another FAQ I get

01:05:36.510 --> 01:05:37.810
is what about vendor lock in?

01:05:37.810 --> 01:05:41.480
Is Google trying to milk me for
all my money and all my

01:05:41.480 --> 01:05:43.660
company's money forever?

01:05:43.660 --> 01:05:46.200
You would like to think that.

01:05:46.200 --> 01:05:48.500
My question is have you ever
know Google to be good at

01:05:48.500 --> 01:05:51.950
charging money for anything?

01:05:51.950 --> 01:05:54.120
I can't seem to find places
to pay Google

01:05:54.120 --> 01:05:55.340
for anything, actually.

01:05:55.340 --> 01:05:58.800
So maybe more drive storage?

01:05:58.800 --> 01:06:00.570
Maybe more Gmail storage?

01:06:00.570 --> 01:06:01.200
I don't know.

01:06:01.200 --> 01:06:03.290
Anyway, to me it's
kind of hard.

01:06:03.290 --> 01:06:03.450
we're?

01:06:03.450 --> 01:06:05.260
Not really after that.

01:06:05.260 --> 01:06:09.530
We're actually after a vibrant
web ecosystem.

01:06:09.530 --> 01:06:12.690
And if there's more people
online, more people using

01:06:12.690 --> 01:06:14.720
apps, there's probably going
to be more people clicking

01:06:14.720 --> 01:06:18.840
ads, and that's how
I get my paycheck.

01:06:18.840 --> 01:06:19.910
So that's what we're
really after.

01:06:19.910 --> 01:06:22.300
We're not trying to milk
you for all your money.

01:06:22.300 --> 01:06:23.440
So what's locking?

01:06:23.440 --> 01:06:25.480
If you're not familiar with
this term, it's basically

01:06:25.480 --> 01:06:27.530
where you have a system that
makes it really hard or

01:06:27.530 --> 01:06:31.510
impossible for you to move or
your data off of that system

01:06:31.510 --> 01:06:36.840
and perhaps move to a
competitive system.

01:06:36.840 --> 01:06:38.550
Does it apply to App Engine?

01:06:38.550 --> 01:06:40.300
Well, kind of yes
and kind of no.

01:06:40.300 --> 01:06:42.020
And so when they ask that
question, they're trying to

01:06:42.020 --> 01:06:44.530
make it sound like, oh,
Google's the bad guy.

01:06:44.530 --> 01:06:47.000
But I actually completely flip
the tables over, because my

01:06:47.000 --> 01:06:49.420
response is, wait a minute,
wait a minute.

01:06:49.420 --> 01:06:52.540
Don't you want to take advantage
of Google, of all

01:06:52.540 --> 01:06:55.100
the R&amp;D and all the man hours
that we put in to make our

01:06:55.100 --> 01:06:58.940
system scalable, make it
fast, make it reliable?

01:06:58.940 --> 01:07:01.910
You really want to give your
apps that stuff without having

01:07:01.910 --> 01:07:03.770
you build it yourself.

01:07:03.770 --> 01:07:06.900
So you're trying to take
advantage of Google.

01:07:06.900 --> 01:07:09.120
But the thing is, since we came
up with the system, of

01:07:09.120 --> 01:07:10.420
course we're going to
be the first ones to

01:07:10.420 --> 01:07:11.670
develop an API for it.

01:07:11.670 --> 01:07:14.940
So yes, when the system first
came out, you had to use

01:07:14.940 --> 01:07:16.160
Google APIs.

01:07:16.160 --> 01:07:19.715
But really it's not in our DNA
to try and milk people for all

01:07:19.715 --> 01:07:20.050
their money.

01:07:20.050 --> 01:07:23.700
And in fact, I'm very happy to
say that our director publicly

01:07:23.700 --> 01:07:29.860
responded to people's criticisms
of our system

01:07:29.860 --> 01:07:31.420
trying to do the
lock in thing.

01:07:31.420 --> 01:07:34.830
He pushes back just as strong
as I do, and I'm glad that

01:07:34.830 --> 01:07:36.060
we're on the same
page on this.

01:07:36.060 --> 01:07:37.770
So really, you should spend
some time, take

01:07:37.770 --> 01:07:39.080
a look at his post.

01:07:39.080 --> 01:07:42.620
It's really worthwhile reading
to hear from senior management

01:07:42.620 --> 01:07:45.470
of App Engine, what their
perspective is.

01:07:45.470 --> 01:07:47.540
Just don't listen to
me, the mouthpiece.

01:07:47.540 --> 01:07:49.920
You really got to hear
it from management.

01:07:49.920 --> 01:07:51.730
So, you're trying to take
advantage of our

01:07:51.730 --> 01:07:52.340
infrastructure.

01:07:52.340 --> 01:07:54.460
Do we need to write
against the APIs?

01:07:54.460 --> 01:07:56.300
Maybe.

01:07:56.300 --> 01:07:57.280
Does this make sense?

01:07:57.280 --> 01:07:59.220
Like you're trying to take
advantage of Google, right?

01:07:59.220 --> 01:08:01.330
So even with all this stuff,
we are still trying

01:08:01.330 --> 01:08:02.520
to fight lock in.

01:08:02.520 --> 01:08:04.230
What are some of the
different ways?

01:08:04.230 --> 01:08:06.550
Well, do you have to
use Google APIs?

01:08:06.550 --> 01:08:07.720
Not anymore.

01:08:07.720 --> 01:08:09.230
Do you have to learn
new skills?

01:08:09.230 --> 01:08:11.680
You have to learn some new
skills, but we really don't

01:08:11.680 --> 01:08:13.210
want to have you start
from scratch.

01:08:13.210 --> 01:08:15.065
If you know how to write a
servlet in Java or you know

01:08:15.065 --> 01:08:19.430
how to use JSP, if you really
want to do that, you could

01:08:19.430 --> 01:08:20.840
take your skills
to App Engine.

01:08:20.840 --> 01:08:24.420
If you are a Python developer,
and you don't want to use the

01:08:24.420 --> 01:08:27.899
web framework that comes with
the SDK, you can use Django,

01:08:27.899 --> 01:08:30.870
or web2py, or Tipfy, Flask,
Bottle, Pyramid,

01:08:30.870 --> 01:08:31.609
any of those things.

01:08:31.609 --> 01:08:33.605
Those things, you can run
apps on App Engine.

01:08:33.605 --> 01:08:36.109
You'll have to probably
downloaded another piece of

01:08:36.109 --> 01:08:38.700
software to make it happen,
but it can happen.

01:08:38.700 --> 01:08:40.939
I already mentioned earlier,
you can choose between our

01:08:40.939 --> 01:08:44.229
native NoSQL datastore, or you
can choose our relational

01:08:44.229 --> 01:08:46.720
MySQL compatible datastore.

01:08:46.720 --> 01:08:48.240
Maybe you don't want to
do any SQL at all.

01:08:48.240 --> 01:08:49.680
You just want to do objects.

01:08:49.680 --> 01:08:51.390
Well, if you program
in Django, you can

01:08:51.390 --> 01:08:52.880
use Django's ORM.

01:08:52.880 --> 01:08:57.729
If you use the MySQL compatible
Google Cloud SQL,

01:08:57.729 --> 01:09:00.370
you can use Django pretty much
straight up and just make sure

01:09:00.370 --> 01:09:01.569
your settings file's
really the only

01:09:01.569 --> 01:09:03.069
thing you have to change.

01:09:03.069 --> 01:09:05.649
But you can also use it with our
non-relational datastore,

01:09:05.649 --> 01:09:07.899
too, if you download a third
party app called

01:09:07.899 --> 01:09:10.029
Django-nonrel.

01:09:10.029 --> 01:09:12.649
Similarly, if you're a Java
user, and you're familiar with

01:09:12.649 --> 01:09:16.170
JDO or JPA, you can use
those ORMs as well.

01:09:16.170 --> 01:09:17.600
Or you can use something
a little

01:09:17.600 --> 01:09:19.060
lower level, like Objectify.

01:09:19.060 --> 01:09:20.850
That works perfectly.

01:09:20.850 --> 01:09:23.550
All of our SDKs are open source,
so if you really want

01:09:23.550 --> 01:09:29.540
to you can reverse engineer
APIs if you want.

01:09:29.540 --> 01:09:33.640
All of our Java APIs, we try to
make them stick as close to

01:09:33.640 --> 01:09:35.890
the JSR standards as
much as possible.

01:09:35.890 --> 01:09:37.950
With Python, we pretty much just
have you write against

01:09:37.950 --> 01:09:39.859
the standard library.

01:09:39.859 --> 01:09:42.609
We also give you datastore
bulkloader to easily upload or

01:09:42.609 --> 01:09:43.870
download all of your data.

01:09:43.870 --> 01:09:46.600
Now if you have a lot of data,
it may not be the world's

01:09:46.600 --> 01:09:49.585
fastest thing, but you can put
your data in and take it out

01:09:49.585 --> 01:09:51.600
at any time.

01:09:51.600 --> 01:09:55.260
And even then, maybe you're in
a situation where you're

01:09:55.260 --> 01:09:58.800
working for an employer where
you can't have Google hosting

01:09:58.800 --> 01:10:00.230
apps or data.

01:10:00.230 --> 01:10:03.160
It just must run in your
own data center.

01:10:03.160 --> 01:10:06.480
There are actually open source
back end systems that claim to

01:10:06.480 --> 01:10:11.740
be fully APi-compatible with
Google App Engine.

01:10:11.740 --> 01:10:12.760
In Python, there's
two of them.

01:10:12.760 --> 01:10:14.820
One is AppScale,
one is Typhoon.

01:10:14.820 --> 01:10:17.240
In Java, it's CapeDwarf.

01:10:17.240 --> 01:10:19.750
You can actually run these in
your own data centers on

01:10:19.750 --> 01:10:21.985
premise or in your CO-LOs.

01:10:25.220 --> 01:10:27.510
So that way you're completely
free of Google.

01:10:27.510 --> 01:10:29.190
You can take any of your App
Engine apps that you wrote

01:10:29.190 --> 01:10:31.060
before, that you ran on Google
before, but you can now run

01:10:31.060 --> 01:10:32.740
them on your own.

01:10:32.740 --> 01:10:34.710
And here's an even
funnier story.

01:10:34.710 --> 01:10:36.890
Well, maybe it's not funny, but
to me I think it's funny.

01:10:36.890 --> 01:10:41.030
Because AppScale is actually
project from UC Santa Barbara,

01:10:41.030 --> 01:10:43.210
which is where I went to grad
school, but I had nothing to

01:10:43.210 --> 01:10:45.960
do this project because
it came afterwards.

01:10:45.960 --> 01:10:48.300
And because they're a university
research project,

01:10:48.300 --> 01:10:51.430
they actually applied for a
research grant from the Google

01:10:51.430 --> 01:10:52.730
research team.

01:10:52.730 --> 01:10:53.430
And guess what?

01:10:53.430 --> 01:10:54.810
They won!

01:10:54.810 --> 01:11:01.210
They won a significant award
to build this thing.

01:11:01.210 --> 01:11:04.900
So in a sense, you could say
that Google is funding its own

01:11:04.900 --> 01:11:08.840
competition because we are
so against lock in.

01:11:08.840 --> 01:11:11.510
So it's really not part of
the company's DNA to do

01:11:11.510 --> 01:11:12.470
that type of stuff.

01:11:12.470 --> 01:11:15.700
It's just not part
of the culture.

01:11:15.700 --> 01:11:17.100
So that's lock in.

01:11:17.100 --> 01:11:19.870
Now of course, we have to get
into pricing because we're the

01:11:19.870 --> 01:11:22.690
management set of
slides, right?

01:11:22.690 --> 01:11:24.100
It's free.

01:11:24.100 --> 01:11:26.510
We have a pretty generous
free tier.

01:11:26.510 --> 01:11:28.710
And when I say generous, I mean
that you could probably

01:11:28.710 --> 01:11:32.040
run your small business or your
church website off of it

01:11:32.040 --> 01:11:35.530
without having to ever
pay Google a penny.

01:11:35.530 --> 01:11:38.770
And if you do go over your
free quota, then you

01:11:38.770 --> 01:11:40.120
just pay per use.

01:11:40.120 --> 01:11:43.230
Whatever you use beyond the free
quota, whatever is pay

01:11:43.230 --> 01:11:46.120
per use, like if you use a
little bit more networking, I

01:11:46.120 --> 01:11:50.190
think it's like $0.12 per gig
of data that you send more.

01:11:50.190 --> 01:11:52.470
So you have all these little
incremental costs.

01:11:52.470 --> 01:11:56.810
If you want to have support,
you can go for one of the

01:11:56.810 --> 01:11:58.300
premiere services.

01:11:58.300 --> 01:12:01.570
There's more information on
pricing at the link there, but

01:12:01.570 --> 01:12:04.540
with premiere pricing, you
can get some support.

01:12:04.540 --> 01:12:06.830
So if you need to get a response
back in a certain

01:12:06.830 --> 01:12:08.840
timeframe or whatnot,
you can do that.

01:12:08.840 --> 01:12:10.290
So it starts at $150.

01:12:10.290 --> 01:12:12.790
If you do any kind of paid
service, you'll get an SLA,

01:12:12.790 --> 01:12:15.920
which is a guaranteed uptime.

01:12:15.920 --> 01:12:19.970
And of course, there's extra fee
for custom things that you

01:12:19.970 --> 01:12:23.160
want, like maybe your own domain
SSL, things like that.

01:12:23.160 --> 01:12:24.800
But like I said, you
can pretty much

01:12:24.800 --> 01:12:26.050
get started for free.

01:12:28.440 --> 01:12:30.200
Again, more management stuff.

01:12:30.200 --> 01:12:32.790
Some folks are worried
about compliance.

01:12:32.790 --> 01:12:36.810
We are SAS 70 compliant as
well as complaint to its

01:12:36.810 --> 01:12:40.340
replacement, which SSAE 16 and
the international version of

01:12:40.340 --> 01:12:43.610
that, ISAE 3402, and
we're also ISO 27K

01:12:43.610 --> 01:12:45.900
compliant as well.

01:12:45.900 --> 01:12:48.300
Some folks also have a
restriction that your data in

01:12:48.300 --> 01:12:51.480
your apps must be hosted within
certain geographical

01:12:51.480 --> 01:12:53.960
boundaries, so you can actually
choose to have your

01:12:53.960 --> 01:12:58.460
apps be based in the US or
based out of the EU.

01:12:58.460 --> 01:13:01.350
We're expanding our global
footprint, so we started with

01:13:01.350 --> 01:13:04.330
North America-based, and now
we've moved to Europe, and at

01:13:04.330 --> 01:13:06.510
some point we'll hit other parts
of this globe as well.

01:13:09.030 --> 01:13:14.660
The roadmap is available online
for you here, and some

01:13:14.660 --> 01:13:16.716
of the things that we're working
on-- let me get a

01:13:16.716 --> 01:13:17.966
drink here--

01:13:20.500 --> 01:13:25.680
include support for
Java Servlet 3.0.

01:13:25.680 --> 01:13:27.650
Migration of Blobstore, so we're
migrating everything

01:13:27.650 --> 01:13:30.690
over to Google Cloud Storage
from the old Blobstore that we

01:13:30.690 --> 01:13:33.240
had originally.

01:13:33.240 --> 01:13:36.740
And I think one of the most
exciting things that we have

01:13:36.740 --> 01:13:40.090
in the pipeline is a VM-oriented
Runtime.

01:13:40.090 --> 01:13:43.590
VM Runtime means you can have
App Engine-managed back ends.

01:13:43.590 --> 01:13:46.840
We use Compute Engine VM, so
if you have code that can't

01:13:46.840 --> 01:13:50.320
run within App Engines normal
restrictive environments, you

01:13:50.320 --> 01:13:52.590
can actually spin off some of
that code to have it run in a

01:13:52.590 --> 01:13:53.920
VM on Compute Engine.

01:13:53.920 --> 01:13:55.540
So that's pretty exciting.

01:13:55.540 --> 01:13:57.960
And of course, deeper
integration with Compute

01:13:57.960 --> 01:14:00.520
Engine itself, as well as other
cloud services I'll

01:14:00.520 --> 01:14:04.190
mention briefly in a moment.

01:14:04.190 --> 01:14:05.420
So that's what's
on the roadmap.

01:14:05.420 --> 01:14:07.930
By the way, we're not really
good at vaporware either.

01:14:07.930 --> 01:14:11.250
So if it is on the roadmap and
it's published on the website,

01:14:11.250 --> 01:14:13.800
that means there's at least one
engineer working on it.

01:14:13.800 --> 01:14:17.490
So code is happening.

01:14:17.490 --> 01:14:19.360
So you're excited about
App Engine, hopefully.

01:14:19.360 --> 01:14:20.320
You're ready to get starts?

01:14:20.320 --> 01:14:20.880
Where I go?

01:14:20.880 --> 01:14:21.955
What do I do?

01:14:21.955 --> 01:14:24.570
If you want to read more about
product information, in other

01:14:24.570 --> 01:14:27.350
words, the marketing
page, you can go to

01:14:27.350 --> 01:14:29.520
cloud.google.com/products, and
you'll find App Engine there.

01:14:29.520 --> 01:14:31.210
If you're a developer, you want
to immediately to start

01:14:31.210 --> 01:14:32.690
checking out the docs
and downloads.

01:14:32.690 --> 01:14:35.080
Go to developers.googl
e.com/appengine.

01:14:35.080 --> 01:14:38.310
If you want to start creating
App Engine apps already,

01:14:38.310 --> 01:14:39.550
appengine.google.com.

01:14:39.550 --> 01:14:42.100
If you want help from experts
on anything technical

01:14:42.100 --> 01:14:44.040
including App Engine, obviously
Stack Overflow is

01:14:44.040 --> 01:14:49.060
the way to go, but we have
specific tags for each of our

01:14:49.060 --> 01:14:49.960
Cloud products.

01:14:49.960 --> 01:14:52.670
So if you want to ask an App
Engine question, you can find

01:14:52.670 --> 01:14:53.640
the App Engine tag.

01:14:53.640 --> 01:14:55.950
Same goes for our other
Cloud as well.

01:14:55.950 --> 01:14:59.290
And not only are there experts
in the field that look at them

01:14:59.290 --> 01:15:01.760
and answer questions, but also
Google engineers will look at

01:15:01.760 --> 01:15:03.220
them and answer questions,
too.

01:15:03.220 --> 01:15:05.890
So everybody's participating.

01:15:05.890 --> 01:15:08.490
There's a blog that you should
follow, and we also have

01:15:08.490 --> 01:15:11.350
social endpoints which are our
Twitter account and our

01:15:11.350 --> 01:15:13.120
Google+ account.

01:15:13.120 --> 01:15:15.090
Some of you guys may be
teachers or you may be

01:15:15.090 --> 01:15:18.120
trainers, or you may be tech
leads that want to train your

01:15:18.120 --> 01:15:20.250
employees how to use
our cloud, so what

01:15:20.250 --> 01:15:21.640
about teaching materials?

01:15:21.640 --> 01:15:21.970
Guess what?

01:15:21.970 --> 01:15:23.940
We have that too, because if
you're interested in teaching

01:15:23.940 --> 01:15:26.410
App Engine at work or if you
work at a university and want

01:15:26.410 --> 01:15:28.120
to start teaching it, do you
think you have to go and

01:15:28.120 --> 01:15:30.300
investigate App Engine from
scratch, come up with your own

01:15:30.300 --> 01:15:34.030
examples, come up with your
own teaching materials?

01:15:34.030 --> 01:15:36.820
You used to have to worry about
that, but I took care of

01:15:36.820 --> 01:15:38.800
that for you.

01:15:38.800 --> 01:15:41.740
I and a bunch of co-workers on
the Cloud team have built a

01:15:41.740 --> 01:15:42.420
bunch of classes.

01:15:42.420 --> 01:15:44.250
You can see they're
all categorized

01:15:44.250 --> 01:15:46.530
according to product.

01:15:46.530 --> 01:15:49.430
Some of them are beginning to
become cross-product now as

01:15:49.430 --> 01:15:52.400
well, too, so you can actually
learn how to use multiple

01:15:52.400 --> 01:15:54.370
Google APIs simultaneously.

01:15:54.370 --> 01:15:56.390
So we're slowly--

01:15:56.390 --> 01:15:57.690
and I emphasize "slowly"--

01:15:57.690 --> 01:16:00.550
adding new things every day, but
I try to get the teams to

01:16:00.550 --> 01:16:02.650
refresh their material to
keep things up to date

01:16:02.650 --> 01:16:03.860
and things like that.

01:16:03.860 --> 01:16:07.540
And is currently just static
content, but we're going to

01:16:07.540 --> 01:16:10.900
try and do more, like add more
slide decks, add videos, and

01:16:10.900 --> 01:16:11.490
things like that.

01:16:11.490 --> 01:16:13.430
So those things are all
forthcoming, so kind of keep

01:16:13.430 --> 01:16:15.100
your eyes and ears tuned.

01:16:15.100 --> 01:16:17.850
But at least there's some
foundation there in case you

01:16:17.850 --> 01:16:22.010
are a trainer or you're
a TL of some sort.

01:16:22.010 --> 01:16:24.800
I mentioned earlier there's a
way to get started with App

01:16:24.800 --> 01:16:27.910
Engine without any downloads
whatsoever, and that is the

01:16:27.910 --> 01:16:28.650
Cloud Playground.

01:16:28.650 --> 01:16:31.482
So just go to
cloud-playground.appspot.com.

01:16:31.482 --> 01:16:35.160
And what you'll get is you'll
get a list of projects that

01:16:35.160 --> 01:16:38.560
you can clone, and you
can clone anything.

01:16:38.560 --> 01:16:40.930
Here I've called the basic
Hello World app which you

01:16:40.930 --> 01:16:44.930
would get if you downloaded the
SDK anyway, but I'm in a

01:16:44.930 --> 01:16:49.000
browser that I have no other
connectivity to anything

01:16:49.000 --> 01:16:51.240
except for this website.

01:16:51.240 --> 01:16:53.110
I can bring up App
Engine code.

01:16:53.110 --> 01:16:54.500
I can edit it.

01:16:54.500 --> 01:16:56.190
See, it's printing
Hello World now.

01:16:56.190 --> 01:16:59.410
If I go and fix the code, like
maybe I add an h1 tag and

01:16:59.410 --> 01:17:02.400
change the Hello World to "Hello
Y'all" and click the

01:17:02.400 --> 01:17:05.150
little green Run button, I can
actually see the change

01:17:05.150 --> 01:17:07.290
reflected in an iframe
down below.

01:17:07.290 --> 01:17:10.300
So you actually pretend you're
doing App Engine development.

01:17:10.300 --> 01:17:13.250
You can pretty much do all the
Getting Started tutorial

01:17:13.250 --> 01:17:17.240
directly in a browser window
from the Cloud Playground.

01:17:17.240 --> 01:17:19.200
So I really encourage you guys
who are really, really new to

01:17:19.200 --> 01:17:20.990
this, if you're not sure you
want to go and download the

01:17:20.990 --> 01:17:24.800
SDK yet and play with it,
really try this out.

01:17:24.800 --> 01:17:26.320
Because it doesn't cost
you anything.

01:17:26.320 --> 01:17:28.790
You can create projects,
delete projects.

01:17:28.790 --> 01:17:30.870
We have a whole bunch of
projects you can clone.

01:17:30.870 --> 01:17:33.100
So if you were looking for
something very specific, try

01:17:33.100 --> 01:17:37.020
and find a project that closest
meets the needs that

01:17:37.020 --> 01:17:38.330
you have, and then clone that.

01:17:38.330 --> 01:17:40.480
Change the code, tweak the code,
do whatever you want.

01:17:40.480 --> 01:17:43.770
And then one thing that's
missing is there's no Download

01:17:43.770 --> 01:17:46.390
Zip File button so that all
the code that you do play

01:17:46.390 --> 01:17:49.310
around with, you can actually
take it with you, and you can

01:17:49.310 --> 01:17:51.670
download the SDK, run it on
that, and then you can choose

01:17:51.670 --> 01:17:54.720
to upload all that to
production, to Google, if you

01:17:54.720 --> 01:17:55.980
want as well.

01:17:55.980 --> 01:17:59.000
So it's a really flexible tool,
fun, and we're adding

01:17:59.000 --> 01:18:00.460
new features to it every day.

01:18:00.460 --> 01:18:02.650
So that's the Cloud
Playground.

01:18:02.650 --> 01:18:06.250
And that's really all I wanted
to say about App Engine, so

01:18:06.250 --> 01:18:10.290
let's move on to the last piece,
which is the other

01:18:10.290 --> 01:18:12.550
Cloud components.

01:18:12.550 --> 01:18:14.310
Of course, I'm going to talk
about the Google Cloud

01:18:14.310 --> 01:18:17.110
Platform more, because that's
really the main product that

01:18:17.110 --> 01:18:17.930
we have now.

01:18:17.930 --> 01:18:20.500
App Engine is just a sub-product
of that group, so

01:18:20.500 --> 01:18:22.310
I want you to become more
familiar with what all those

01:18:22.310 --> 01:18:23.580
other products are.

01:18:23.580 --> 01:18:25.880
And then we'll talk about other
services and software

01:18:25.880 --> 01:18:28.270
that Google has that's
available to you.

01:18:30.800 --> 01:18:33.990
App Engine is really the gateway
to getting to other

01:18:33.990 --> 01:18:35.540
cloud services.

01:18:35.540 --> 01:18:40.310
I mentioned that you have
access to a relational

01:18:40.310 --> 01:18:43.890
database which is the MySQL
compatible Google Cloud SQL.

01:18:43.890 --> 01:18:48.950
If you choose to use the native
NoSQL datastore, that

01:18:48.950 --> 01:18:50.820
is now available externally
to you.

01:18:50.820 --> 01:18:53.260
It's the Cloud Datastore.

01:18:53.260 --> 01:18:55.425
We have Compute Engine, so if
you run virtual machines,

01:18:55.425 --> 01:18:57.700
they're there.

01:18:57.700 --> 01:18:59.710
Cloud Storage is also
another entry point.

01:18:59.710 --> 01:19:01.900
That's where you basically
put all of your data.

01:19:01.900 --> 01:19:05.510
It's the large, big disk.

01:19:05.510 --> 01:19:07.790
Some people get confused between
Google Drive and

01:19:07.790 --> 01:19:11.000
Google Cloud Storage, because
Google Drive is also a form of

01:19:11.000 --> 01:19:12.280
cloud storage.

01:19:12.280 --> 01:19:14.730
The main difference is Google
Drive lives sort of within the

01:19:14.730 --> 01:19:17.120
apps universe.

01:19:17.120 --> 01:19:19.920
Which you can also use App
Engine to create apps for you

01:19:19.920 --> 01:19:21.960
Google Apps domain, too.

01:19:21.960 --> 01:19:24.070
But back to the question
about Google Drive

01:19:24.070 --> 01:19:25.120
versus Cloud Storage.

01:19:25.120 --> 01:19:28.580
Drive is more used for apps,
for your documents, for

01:19:28.580 --> 01:19:31.510
sharing with other people, for
collaborations and for syncing

01:19:31.510 --> 01:19:34.720
to multiple devices.

01:19:34.720 --> 01:19:38.120
Cloud Storage is for your 5
terabytes of data that you're

01:19:38.120 --> 01:19:39.860
not going to put in
Google Drive.

01:19:39.860 --> 01:19:40.930
It's not for a document.

01:19:40.930 --> 01:19:42.380
It's for your data warehouse.

01:19:42.380 --> 01:19:45.390
So that's pretty much the main
difference between the two.

01:19:45.390 --> 01:19:48.300
At the very bottom layer, they
may all use the same Google

01:19:48.300 --> 01:19:52.560
technologies in the end, but
their purposes are different.

01:19:52.560 --> 01:19:55.790
So I just wanted you guys to
be sure of the difference

01:19:55.790 --> 01:20:00.020
between the two, especially if
somebody else asks you that.

01:20:00.020 --> 01:20:02.190
We also have Google Translate,
Google BigQuery, and

01:20:02.190 --> 01:20:02.940
Prediction.

01:20:02.940 --> 01:20:04.310
So let's talk about some
of these other

01:20:04.310 --> 01:20:06.520
Cloud Platform products.

01:20:06.520 --> 01:20:08.680
Let's just say you can't
run within App Engine.

01:20:08.680 --> 01:20:09.760
I need to have a socket.

01:20:09.760 --> 01:20:13.060
I need to have an inbound socket
because I have some HR

01:20:13.060 --> 01:20:14.580
apps that are talking through
the firewall.

01:20:14.580 --> 01:20:15.800
I need to have that.

01:20:15.800 --> 01:20:17.010
So you VMs.

01:20:17.010 --> 01:20:20.210
And so Compute Engine
are on-demand VMs.

01:20:20.210 --> 01:20:24.920
We support Red Hats,
CentOS, Debian.

01:20:24.920 --> 01:20:27.840
You can have between one
and eight cores.

01:20:27.840 --> 01:20:30.710
You can have between nearly
2 to 6 and 1/2

01:20:30.710 --> 01:20:32.410
gigs of RAM per core.

01:20:32.410 --> 01:20:34.520
And when you create your virtual
machines, they all run

01:20:34.520 --> 01:20:36.880
on a private network, so they're
actually talking to

01:20:36.880 --> 01:20:38.140
each other without
having internet

01:20:38.140 --> 01:20:39.520
traffic get in the way.

01:20:39.520 --> 01:20:43.070
And you can specify whether
certain machines have an

01:20:43.070 --> 01:20:45.820
endpoint that is accessible from
the public internet, or

01:20:45.820 --> 01:20:46.930
you can just choose not to.

01:20:46.930 --> 01:20:49.660
You can create your own
subnetwork within that.

01:20:49.660 --> 01:20:53.230
Can create firewalls with it.

01:20:53.230 --> 01:20:55.630
There's various types
of storage.

01:20:55.630 --> 01:21:01.220
All VS will get a local scratch
or ephemeral disk 400

01:21:01.220 --> 01:21:02.710
gigs in size.

01:21:02.710 --> 01:21:06.010
There's also the awesome
persistent disk because your

01:21:06.010 --> 01:21:09.770
local scratch, ephemeral disk
will come and go with your VM.

01:21:09.770 --> 01:21:12.460
So if you bring up VMs and bring
them down, those scratch

01:21:12.460 --> 01:21:13.680
disks will go away.

01:21:13.680 --> 01:21:16.610
But maybe you have a
distribution with all the

01:21:16.610 --> 01:21:19.310
packages that you want on it,
and you want all your machines

01:21:19.310 --> 01:21:21.730
to use the same one but you
don't want to have to download

01:21:21.730 --> 01:21:24.010
all those packages every
time you create a VM?

01:21:24.010 --> 01:21:26.470
Put them all on persistent disk,
because persistent disk

01:21:26.470 --> 01:21:30.230
will survive the comings and
goings of VMs, and you can

01:21:30.230 --> 01:21:33.140
mount them on multiple
VMS as well, too.

01:21:33.140 --> 01:21:36.780
Mostly read only, of course,
but that's the power of

01:21:36.780 --> 01:21:37.180
persistent disk.

01:21:37.180 --> 01:21:40.130
And then we also talked about
Google Cloud Storage, which is

01:21:40.130 --> 01:21:42.590
the large-scale storage stuff.

01:21:42.590 --> 01:21:44.545
There's three different ways
for you to get to your VMs.

01:21:44.545 --> 01:21:47.120
You can use our command line
tool, you can use a web-based

01:21:47.120 --> 01:21:51.050
interface, or you can
programmatically access your

01:21:51.050 --> 01:21:53.080
VMs via REST API.

01:21:53.080 --> 01:21:55.300
You can create VMs, you
can destroy VMs,

01:21:55.300 --> 01:21:57.220
all using JSON payload.

01:21:57.220 --> 01:21:59.400
Just sent it over,
it'll do it.

01:21:59.400 --> 01:22:02.640
You can track progress.

01:22:02.640 --> 01:22:04.350
Lots of cool stuff about
Compute Engine.

01:22:04.350 --> 01:22:06.470
I think it's a really good
alternative for people who are

01:22:06.470 --> 01:22:10.190
used to only getting VMs from
one or two vendors.

01:22:10.190 --> 01:22:11.440
Now you have another choice.

01:22:14.150 --> 01:22:18.540
GigaOM published a blog post
from Scalr, and they did

01:22:18.540 --> 01:22:25.560
research against one of the
competition, and it seems that

01:22:25.560 --> 01:22:28.390
Google Compute Engine has
pretty good latency.

01:22:28.390 --> 01:22:30.150
We have a fatter pipe.

01:22:30.150 --> 01:22:33.460
And one of the coolest things
is the instances are really,

01:22:33.460 --> 01:22:34.570
really quick.

01:22:34.570 --> 01:22:38.110
Generally, when you create a VM
on Compute Engine, you can

01:22:38.110 --> 01:22:42.020
SSH into it in about
half a minute.

01:22:42.020 --> 01:22:43.720
They really come up fast.

01:22:43.720 --> 01:22:46.420
And they go down quickly
as well, too.

01:22:46.420 --> 01:22:47.690
So definitely explore that.

01:22:47.690 --> 01:22:50.120
If you're using VMs from other
vendors, you should really

01:22:50.120 --> 01:22:52.540
give it a shot and do
your own benchmarks.

01:22:52.540 --> 01:22:56.380
Don't necessarily listen to us
or from a third party vendor

01:22:56.380 --> 01:22:57.330
like Scalr.

01:22:57.330 --> 01:23:02.260
But it's good, at least, they're
a third party, and

01:23:02.260 --> 01:23:04.750
they're not owned by Google
or something like that.

01:23:04.750 --> 01:23:07.390
But you guys should definitely
do your benchmarks, too.

01:23:07.390 --> 01:23:08.670
And we want to hear it.

01:23:08.670 --> 01:23:12.140
Please send me any reports
on any bugs you find, any

01:23:12.140 --> 01:23:13.980
features that you're
looking for, any

01:23:13.980 --> 01:23:15.540
success stories you have.

01:23:15.540 --> 01:23:18.240
I'm very happy to send out
t-shirts to people.

01:23:18.240 --> 01:23:20.280
I'm sure you're happy to receive
t-shirts as well,

01:23:20.280 --> 01:23:23.770
because most developers, who
live off of t-shirts.

01:23:23.770 --> 01:23:29.300
My companies all cloth me, much
to the dismay of my wife.

01:23:29.300 --> 01:23:31.490
But, yeah, anyway
I'll be happy to

01:23:31.490 --> 01:23:33.270
send you guys a shirt.

01:23:33.270 --> 01:23:33.870
Some other things.

01:23:33.870 --> 01:23:35.860
We already talked about
cloud storage as well.

01:23:35.860 --> 01:23:38.820
Very fast, scalable, highly
available object store.

01:23:38.820 --> 01:23:43.150
As soon as you write an object
and get acknowledgment back

01:23:43.150 --> 01:23:45.870
from Google, anybody can
read it, so it's strong

01:23:45.870 --> 01:23:47.400
consistency.

01:23:47.400 --> 01:23:48.900
Very flexible authentication.

01:23:48.900 --> 01:23:51.660
We use OAuth, and you can have
access control lists to

01:23:51.660 --> 01:23:56.440
determine whether it's an
individual, a group, whoever

01:23:56.440 --> 01:24:00.450
can get access to
your objects.

01:24:00.450 --> 01:24:05.230
You can access it from REST API,
through App Engine's API.

01:24:05.230 --> 01:24:08.740
Really, the Cloud Storage client
library, Web UI, or

01:24:08.740 --> 01:24:10.082
command line.

01:24:10.082 --> 01:24:11.670
Cloud SQL, I already
talked about that.

01:24:11.670 --> 01:24:14.290
That's our MySQL compatible
relational database in the

01:24:14.290 --> 01:24:16.970
cloud, also accessible
from App Engine or

01:24:16.970 --> 01:24:20.260
externally via JDBC.

01:24:20.260 --> 01:24:22.020
We also have the Cloud
Datastore.

01:24:22.020 --> 01:24:26.760
I mentioned that is our NoSQL
database built at Google scale

01:24:26.760 --> 01:24:28.280
using a very lo2-level
interface.

01:24:28.280 --> 01:24:30.720
You access it via HTTP.

01:24:30.720 --> 01:24:34.260
And If you are familiar with
the native NoSQL datastore

01:24:34.260 --> 01:24:37.660
from App Engine, that's
what this is as well.

01:24:37.660 --> 01:24:39.830
Many of you probably already
know what Google Translate is,

01:24:39.830 --> 01:24:40.470
but guess what?

01:24:40.470 --> 01:24:42.530
You can actually access it
programmatically, so you can

01:24:42.530 --> 01:24:45.660
write bilingual apps or apps
that do translations as well

01:24:45.660 --> 01:24:49.616
also using a familiar
REST-type interface.

01:24:49.616 --> 01:24:50.730
A couple other ones.

01:24:50.730 --> 01:24:52.200
There's Google BigQuery.

01:24:52.200 --> 01:24:55.130
This is where you can issue a
SQL query across multiple

01:24:55.130 --> 01:24:58.390
terabytes of data, something
you can't quite do with a

01:24:58.390 --> 01:25:00.080
relational database today.

01:25:00.080 --> 01:25:03.110
And if you can, you may have to
have a relational database

01:25:03.110 --> 01:25:06.210
that's sharded multiple ways,
and you have to do your own

01:25:06.210 --> 01:25:09.370
manual MapReduces to be able
to get that data to a size

01:25:09.370 --> 01:25:12.150
that can be digested
by your users.

01:25:12.150 --> 01:25:16.820
Or it may take an extremely
long time to run those

01:25:16.820 --> 01:25:20.670
queries, so with BigQuery you
can actually issue SQL-like

01:25:20.670 --> 01:25:24.090
requests to BigQuery on multiple
terabytes of data and

01:25:24.090 --> 01:25:26.030
get results back in seconds.

01:25:26.030 --> 01:25:28.300
Not hours, and not days.

01:25:28.300 --> 01:25:31.810
It is very, very fast, and it's
great no matter how big

01:25:31.810 --> 01:25:33.080
your data is.

01:25:33.080 --> 01:25:34.360
So you should really
give it a shot.

01:25:34.360 --> 01:25:36.700
In fact, we created a cool
little app that you can take a

01:25:36.700 --> 01:25:40.470
look at by going to this link
and checking out the tour.

01:25:40.470 --> 01:25:43.280
It's a good way to get a sampler
for how BigQuery

01:25:43.280 --> 01:25:45.200
works, the kind of data
sets you can use.

01:25:45.200 --> 01:25:47.050
And then you can start playing
around with some of our free

01:25:47.050 --> 01:25:47.890
public data sets.

01:25:47.890 --> 01:25:51.660
You can have fun with finding
out what are the most highly

01:25:51.660 --> 01:25:56.060
changed Wikipedia pages, or what
are the most common words

01:25:56.060 --> 01:25:57.720
in all of Shakespeare's works?

01:25:57.720 --> 01:26:01.850
Or we even have the US
Health and Human

01:26:01.850 --> 01:26:03.990
Services neonatality database.

01:26:03.990 --> 01:26:09.940
So you can dig deep and ask a
question as precise as what is

01:26:09.940 --> 01:26:14.450
the mortality rate for children
born to mothers

01:26:14.450 --> 01:26:24.110
between ages 25 and 29 from 1957
to 1962 who were smokers?

01:26:24.110 --> 01:26:26.890
You can ask a question like that
to BigQuery, and it'll

01:26:26.890 --> 01:26:29.420
give you answer in a very
short amount of time.

01:26:29.420 --> 01:26:31.700
So play around with some of
those public data sets.

01:26:31.700 --> 01:26:33.390
It's really fun.

01:26:33.390 --> 01:26:35.050
And then we also have
Google Prediction.

01:26:35.050 --> 01:26:37.580
That is our machine learning
service in the cloud.

01:26:37.580 --> 01:26:40.470
So if you're familiar with AI
and machine learning, you may

01:26:40.470 --> 01:26:42.570
be familiar with the supervised
learning type of

01:26:42.570 --> 01:26:44.950
algorithms, which is what
we support right now.

01:26:44.950 --> 01:26:47.160
Basically, the way it works is
you train models and get

01:26:47.160 --> 01:26:48.200
predictions.

01:26:48.200 --> 01:26:51.370
Some people who have never seen
machine learning before

01:26:51.370 --> 01:26:52.310
may think it's magic.

01:26:52.310 --> 01:26:55.450
And it kind of is because you're
uploading some data,

01:26:55.450 --> 01:26:58.090
and then you're just asking
the Prediction API what is

01:26:58.090 --> 01:27:00.200
this, and it'll tell you.

01:27:00.200 --> 01:27:02.010
So it's pretty cool
to look at.

01:27:02.010 --> 01:27:03.980
You can use it for lots of
different things, like

01:27:03.980 --> 01:27:07.870
sentiment analysis, you can do
spam detection, all kinds of

01:27:07.870 --> 01:27:08.890
crazy things.

01:27:08.890 --> 01:27:10.470
So take a look at that.

01:27:10.470 --> 01:27:12.700
So that's really the
Cloud Platform.

01:27:12.700 --> 01:27:15.280
So now, onto the rest of the
talk, which are non-cloud

01:27:15.280 --> 01:27:16.960
platform products
which you may be

01:27:16.960 --> 01:27:18.900
interested in thinking about.

01:27:18.900 --> 01:27:20.830
One of them is Fusion Tables.

01:27:20.830 --> 01:27:23.400
That's like a combination
between Google Maps and some

01:27:23.400 --> 01:27:25.470
kind of spreadsheet.

01:27:25.470 --> 01:27:29.240
You can think of them as being
able to take data that's in

01:27:29.240 --> 01:27:32.380
one or more spreadsheets and
being able to visualize it.

01:27:32.380 --> 01:27:34.960
So something like
election data or

01:27:34.960 --> 01:27:36.210
maybe that health data.

01:27:40.250 --> 01:27:43.000
When the Haiti earthquake did
happen, it was used to track

01:27:43.000 --> 01:27:45.700
which facilities have medical
supplies, what kind of

01:27:45.700 --> 01:27:48.200
patients can they accept here
because what kind of medicines

01:27:48.200 --> 01:27:50.050
are at these medical
locations.

01:27:50.050 --> 01:27:51.240
So you can map all
kinds of things.

01:27:51.240 --> 01:27:53.680
If you can put it in a
spreadsheet and you can

01:27:53.680 --> 01:27:56.150
visualize it, you can use
Fusion Tables for that.

01:27:56.150 --> 01:27:57.790
It's pretty easy to get started,
so you can just take

01:27:57.790 --> 01:28:00.890
a look there at that link.

01:28:00.890 --> 01:28:05.150
Another tool that we have,
Fusion Tables comes out of the

01:28:05.150 --> 01:28:08.270
Fusion Tables team, the Google
Research team there.

01:28:08.270 --> 01:28:10.060
Google Research also
built something

01:28:10.060 --> 01:28:11.680
called Course Builder.

01:28:11.680 --> 01:28:13.950
You probably have no doubt
heard about all these

01:28:13.950 --> 01:28:18.090
well-known, massive, open online
courses and learning

01:28:18.090 --> 01:28:21.670
content created by Khan Academy,
Udacity, Coursera,

01:28:21.670 --> 01:28:26.130
edX, all these big name
vendors, Codecademy.

01:28:26.130 --> 01:28:28.780
And maybe you want to offer your
own massive, open, online

01:28:28.780 --> 01:28:32.030
course, but you don't want to
have to rely on a third party

01:28:32.030 --> 01:28:34.500
vendor like a Udacity
or something.

01:28:34.500 --> 01:28:39.420
So the Google Research team
built their own MOOC software,

01:28:39.420 --> 01:28:41.410
and they've offered several
courses with it.

01:28:41.410 --> 01:28:43.500
The first one is the Power
Searching class.

01:28:43.500 --> 01:28:45.240
You didn't know that you could
actually make your searching

01:28:45.240 --> 01:28:46.510
better, did you?

01:28:46.510 --> 01:28:48.450
Take the class, and you'll find
out lots of different,

01:28:48.450 --> 01:28:49.620
new ways of doing
searching that

01:28:49.620 --> 01:28:52.580
you've never known before.

01:28:52.580 --> 01:28:54.950
But this software Google
Research has built and made it

01:28:54.950 --> 01:28:56.500
available as open source.

01:28:56.500 --> 01:28:57.580
It runs on App Engine.

01:28:57.580 --> 01:28:59.210
Now that you know what App
Engine is, you're very

01:28:59.210 --> 01:29:00.820
familiar with it, and you don't
have to worry about

01:29:00.820 --> 01:29:04.720
scaling for your massive,
open, online course.

01:29:04.720 --> 01:29:05.690
So it's open source.

01:29:05.690 --> 01:29:06.705
You can download it there.

01:29:06.705 --> 01:29:09.080
You can read our launching blog
post, or you can take a

01:29:09.080 --> 01:29:11.550
look at the first class or any
number of our classes that

01:29:11.550 --> 01:29:15.220
we're offering through using
Course Builder now.

01:29:15.220 --> 01:29:17.810
So now that you can offer
classes online, what about

01:29:17.810 --> 01:29:20.390
course registration?

01:29:20.390 --> 01:29:23.450
The Google Corporate Engineering
team had to build

01:29:23.450 --> 01:29:25.380
an app to help us manage
all of our

01:29:25.380 --> 01:29:28.640
internal employee training.

01:29:28.640 --> 01:29:32.030
Internally, we call
this gLearn, but

01:29:32.030 --> 01:29:32.820
guess what they did?

01:29:32.820 --> 01:29:35.350
They took this code-- it runs
on App Engine as well--

01:29:35.350 --> 01:29:36.640
and they made it open source.

01:29:36.640 --> 01:29:38.920
So a couple years ago, they
announced this at Google I/O,

01:29:38.920 --> 01:29:40.230
and they gave a talk on it.

01:29:40.230 --> 01:29:44.330
And you can access the code
there, and you can handle

01:29:44.330 --> 01:29:44.910
course registrations.

01:29:44.910 --> 01:29:48.090
So you could say I could only
take 200 students, or they

01:29:48.090 --> 01:29:50.180
need to have manager approval.

01:29:50.180 --> 01:29:53.160
Or only employees, no vendors,
contractors,

01:29:53.160 --> 01:29:54.730
and things like that.

01:29:54.730 --> 01:29:57.610
So there's a lot of business
logic built into it as well.

01:29:57.610 --> 01:30:01.720
Instructors will get access to
the course roster, and they

01:30:01.720 --> 01:30:02.450
can email them.

01:30:02.450 --> 01:30:03.470
So there's lots of different
things that

01:30:03.470 --> 01:30:04.160
you can do with it.

01:30:04.160 --> 01:30:07.260
And both CloudCourse and Course
Builder, like I said,

01:30:07.260 --> 01:30:10.190
are all open source, so you
actually control all the code.

01:30:10.190 --> 01:30:12.540
You can customize it
any way you want.

01:30:12.540 --> 01:30:15.335
If you want to submit a patch
back, I'm sure people would be

01:30:15.335 --> 01:30:17.370
glad to look at it.

01:30:17.370 --> 01:30:21.650
So these are two other services
that Google has.

01:30:21.650 --> 01:30:22.200
Apps Script.

01:30:22.200 --> 01:30:25.130
How many people know what
Apps Script is?

01:30:25.130 --> 01:30:26.480
Oh, my gosh.

01:30:26.480 --> 01:30:27.780
That's grim.

01:30:27.780 --> 01:30:31.110
That's less than 8%.

01:30:31.110 --> 01:30:33.170
You have to know what
Apps Script is.

01:30:33.170 --> 01:30:36.960
You got to try this, because
it's a crazy amazing.

01:30:36.960 --> 01:30:40.575
Apps Script is JavaScript
out of the browser

01:30:40.575 --> 01:30:42.860
and in Google's Cloud.

01:30:42.860 --> 01:30:46.510
So you know how with Node,
you're already executing on a

01:30:46.510 --> 01:30:48.550
Node server, not in a browser?

01:30:48.550 --> 01:30:51.660
Well, this is yet another way
you can execute JavaScript.

01:30:51.660 --> 01:30:54.990
It's JavaScript that executes in
Google's Cloud, and that we

01:30:54.990 --> 01:30:58.480
give you an IDE that you can
actually code in directly.

01:30:58.480 --> 01:30:59.930
It's deeply integrated
with Google

01:30:59.930 --> 01:31:01.480
Apps and other services.

01:31:01.480 --> 01:31:04.020
You can do things like automate
repetitive tasks.

01:31:04.020 --> 01:31:08.830
You can manipulate data across
multiple Google apps.

01:31:08.830 --> 01:31:09.530
So how does it work?

01:31:09.530 --> 01:31:11.060
I'm going to show you four
lines of JavaScript.

01:31:11.060 --> 01:31:11.870
Four lines!

01:31:11.870 --> 01:31:12.290
That's it.

01:31:12.290 --> 01:31:14.930
Four lines of JavaScript code
that touches three different

01:31:14.930 --> 01:31:18.330
Google products and is
somewhat useful.

01:31:18.330 --> 01:31:20.690
So after this, I'm hoping that
you guys all go and try some

01:31:20.690 --> 01:31:22.810
Apps Script as well.

01:31:22.810 --> 01:31:24.430
Here are the four lines
of JavaScript.

01:31:24.430 --> 01:31:27.620
Before we get started, let's
have one assumption, and that

01:31:27.620 --> 01:31:30.330
is I have a Google spreadsheet,
a Google Sheet,

01:31:30.330 --> 01:31:32.300
and it has addresses in it.

01:31:32.300 --> 01:31:34.380
So we'll start from
that point.

01:31:34.380 --> 01:31:35.790
So we've got the spreadsheet.

01:31:35.790 --> 01:31:37.360
We've got addresses in it.

01:31:37.360 --> 01:31:38.740
Everybody out with that?

01:31:38.740 --> 01:31:40.420
Now let's look at the four
lines of JavaScript.

01:31:40.420 --> 01:31:41.530
Here's a function.

01:31:41.530 --> 01:31:44.940
I'm going to connect to Google
Sheets and get the active

01:31:44.940 --> 01:31:46.920
spreadsheet, so that's the
whole spreadsheet.

01:31:46.920 --> 01:31:50.340
The second line of code, I'm
going to say, hey, give me

01:31:50.340 --> 01:31:52.510
what's in cell A2.

01:31:52.510 --> 01:31:54.470
Happens to be the address of
the Google New York office.

01:31:57.200 --> 01:32:00.540
Third line, I'm going to call
Google Maps and say create me

01:32:00.540 --> 01:32:03.890
a brand new map and drop a pin
at that address that I just

01:32:03.890 --> 01:32:04.990
pulled out of the spreadsheet.

01:32:04.990 --> 01:32:06.740
Boom.

01:32:06.740 --> 01:32:09.710
The last line of code, I'm going
to call Gmail and email

01:32:09.710 --> 01:32:10.960
this map to my friend.

01:32:13.510 --> 01:32:15.990
Four lines code, three different
Google products.

01:32:15.990 --> 01:32:18.660
It's pretty useful.

01:32:18.660 --> 01:32:20.920
Now the colleague of mine who
works on the Apps Script,

01:32:20.920 --> 01:32:24.360
[INAUDIBLE], he has another
cool example where he'll

01:32:24.360 --> 01:32:29.480
connect to Gmail, get the top 10
most recent subject lines,

01:32:29.480 --> 01:32:31.800
and he'll go on call Google
Translate and translate them

01:32:31.800 --> 01:32:34.430
to Spanish.

01:32:34.430 --> 01:32:36.740
So you can do all as a crazy
things touching on various

01:32:36.740 --> 01:32:38.870
different Google services.

01:32:38.870 --> 01:32:39.800
Pretty useful.

01:32:39.800 --> 01:32:42.680
I hope a lot more people raise
their hand the next time I ask

01:32:42.680 --> 01:32:43.830
this question.

01:32:43.830 --> 01:32:47.110
You guys should really
try it out.

01:32:47.110 --> 01:32:50.150
In the past I did a lot of COM
programming where I did a lot

01:32:50.150 --> 01:32:54.450
of programming with Microsoft
Office, and Excel, PowerPoint,

01:32:54.450 --> 01:32:54.860
things like that.

01:32:54.860 --> 01:32:56.140
I used to use COM for that.

01:32:56.140 --> 01:32:59.690
This is sort of something
similar for Google Apps.

01:32:59.690 --> 01:33:02.570
It's Google Apps Script.

01:33:02.570 --> 01:33:03.930
They'll call it GAS.

01:33:03.930 --> 01:33:06.130
The team doesn't like that.

01:33:06.130 --> 01:33:07.980
Google Apps Script.

01:33:07.980 --> 01:33:11.610
Also, Apps has it S on it,
App Engine does not

01:33:11.610 --> 01:33:13.170
have an S on it.

01:33:13.170 --> 01:33:16.750
Also, App Engine has a space
in between except for the

01:33:16.750 --> 01:33:18.510
Twitter hashtag.

01:33:18.510 --> 01:33:19.020
All right?

01:33:19.020 --> 01:33:22.540
Spell things correctly.

01:33:22.540 --> 01:33:26.320
Once you are familiar with
Compute Engine, App Engine,

01:33:26.320 --> 01:33:29.510
you now have a foundation to
start touching other Google

01:33:29.510 --> 01:33:31.680
APIs and adding way
more interesting

01:33:31.680 --> 01:33:32.660
features to your apps.

01:33:32.660 --> 01:33:37.060
You can start adding maps using
the Google Maps API, and

01:33:37.060 --> 01:33:39.210
we even have mobile versions
of Google Maps API.

01:33:39.210 --> 01:33:42.840
So now you can have a mobile app
where your user does not

01:33:42.840 --> 01:33:45.600
have to exit your app to launch
Google Maps to use it.

01:33:45.600 --> 01:33:47.020
You can actually integrate
Google Maps

01:33:47.020 --> 01:33:48.620
features into your app.

01:33:48.620 --> 01:33:51.400
You can use the YouTube API.

01:33:51.400 --> 01:33:53.930
Channel 7 news up in San
Francisco, they have a YouTube

01:33:53.930 --> 01:33:56.550
app where if you're out and
about, you see news happening,

01:33:56.550 --> 01:33:58.540
you can actually film it on your
phone, and then you can

01:33:58.540 --> 01:33:59.180
use their app.

01:33:59.180 --> 01:34:01.110
It will automatically upload
to YouTube, and then send a

01:34:01.110 --> 01:34:04.010
link to the TV station and
have you sign all the

01:34:04.010 --> 01:34:06.840
necessary releases and all
that kind of stuff.

01:34:06.840 --> 01:34:08.910
So that's one way you can
integrate the YouTube API.

01:34:08.910 --> 01:34:10.690
You can do all kinds of other
things with the YouTube API.

01:34:10.690 --> 01:34:12.250
I don't have time to
talk about it, but

01:34:12.250 --> 01:34:13.450
there's also Drive.

01:34:13.450 --> 01:34:16.560
Oh, by the way, have you guys
all used the Google Docs

01:34:16.560 --> 01:34:19.110
feature or the spreadsheet
feature where multiple people

01:34:19.110 --> 01:34:22.690
are all logged in at the same
time, working together?

01:34:22.690 --> 01:34:25.730
Google Drive has real time API
so that you could build apps

01:34:25.730 --> 01:34:28.420
that let multiple people
log in and use your app

01:34:28.420 --> 01:34:29.690
simultaneously.

01:34:29.690 --> 01:34:31.330
So you can get the same
goodness as well.

01:34:31.330 --> 01:34:32.770
It's pretty awesome.

01:34:32.770 --> 01:34:33.590
You can use Go.

01:34:33.590 --> 01:34:34.610
You can learn Google TV.

01:34:34.610 --> 01:34:35.550
You can do Google+.

01:34:35.550 --> 01:34:37.740
You can do Android, of course.

01:34:37.740 --> 01:34:42.550
Learn Dart, and Polymer, and all
these cool, new features

01:34:42.550 --> 01:34:42.950
that we have.

01:34:42.950 --> 01:34:43.770
HTML5.

01:34:43.770 --> 01:34:45.950
Google Wallet, you
can monetize.

01:34:45.950 --> 01:34:49.180
So really, what I wanted to
present to you tonight was a

01:34:49.180 --> 01:34:53.640
foundation of what you can build
your app on top of, and

01:34:53.640 --> 01:34:56.290
now all the other APIs or things
that you can use in

01:34:56.290 --> 01:34:59.270
those apps that you're
building.

01:34:59.270 --> 01:35:00.860
So that's that.

01:35:00.860 --> 01:35:05.620
And keep an eye on our blog.

01:35:05.620 --> 01:35:09.070
The Developer's Blog is where we
have announcements, pretty

01:35:09.070 --> 01:35:11.310
much multiple announcements
every week.

01:35:11.310 --> 01:35:13.990
This just happens to be the
one that I did when we

01:35:13.990 --> 01:35:16.090
launched the Academy and another
program called the

01:35:16.090 --> 01:35:19.970
University Consortium, which
is a place for university

01:35:19.970 --> 01:35:22.770
faculty who are teaching with
Google technologies to

01:35:22.770 --> 01:35:25.030
collaborate with each other.

01:35:25.030 --> 01:35:27.800
Anyway, keep an eye on our blog,
as well as the Google

01:35:27.800 --> 01:35:28.970
Cloud blog.

01:35:28.970 --> 01:35:31.780
Most of the time, we cross post
as well, too, so you can

01:35:31.780 --> 01:35:33.260
keep an eye on both
if you want.

01:35:33.260 --> 01:35:36.060
But the Developer's Blog is the
general place where all of

01:35:36.060 --> 01:35:39.970
the different product teams
announce the new features and

01:35:39.970 --> 01:35:42.460
things like that.

01:35:42.460 --> 01:35:48.215
And that is pretty much it,
except for one more thing!

01:35:51.670 --> 01:35:55.070
We want to give you guys
some money tonight.

01:35:55.070 --> 01:35:57.101
Is Becca here?

01:35:57.101 --> 01:35:58.400
Ah, she's taken off.

01:35:58.400 --> 01:35:59.390
All right.

01:35:59.390 --> 01:36:04.990
We want to give you guys
$2,000, every person.

01:36:04.990 --> 01:36:06.168
Not cash.

01:36:06.168 --> 01:36:08.120
[LAUGHTER]

01:36:08.120 --> 01:36:10.860
AUDIENCE: Is that
an Oprah moment?

01:36:10.860 --> 01:36:11.600
WESLEY CHUN: Sorry.

01:36:11.600 --> 01:36:14.060
It is an Oprah moment to
be able to use Google

01:36:14.060 --> 01:36:17.390
Cloud for no charge.

01:36:17.390 --> 01:36:20.420
So developers from affiliated
partners--

01:36:20.420 --> 01:36:23.900
the GDG is considered an
affiliated partner--

01:36:23.900 --> 01:36:27.590
the Google Cloud marketing team
has come up with a $2,000

01:36:27.590 --> 01:36:30.780
package where you actually get
this amount credited towards

01:36:30.780 --> 01:36:32.900
Cloud usage.

01:36:32.900 --> 01:36:35.910
You can use up to $1,000
for App Engine.

01:36:35.910 --> 01:36:39.510
Like I said, the free tier is so
generous you probably won't

01:36:39.510 --> 01:36:41.940
be using much of it.

01:36:41.940 --> 01:36:44.270
But the other Cloud products
don't currently have a free

01:36:44.270 --> 01:36:47.330
tier, so you will be using that
for Google Compute Engine

01:36:47.330 --> 01:36:49.310
and all the other Cloud Platform
products that I

01:36:49.310 --> 01:36:50.990
talked about.

01:36:50.990 --> 01:36:57.250
So for just the GDG members,
apply now,

01:36:57.250 --> 01:36:59.240
cloud.google.com/starterpack,
and then use

01:36:59.240 --> 01:37:01.970
the promo code gdg-in.

01:37:01.970 --> 01:37:06.300
And here is a founder of a
startup that said the starter

01:37:06.300 --> 01:37:08.180
pack is pretty cool.

01:37:08.180 --> 01:37:10.640
So I think you guys should give
it a shot, play around

01:37:10.640 --> 01:37:13.490
with all these different Cloud
Platform products.

01:37:13.490 --> 01:37:16.560
Send me questions,
bugs, feature

01:37:16.560 --> 01:37:20.230
requests, success stories.

01:37:20.230 --> 01:37:20.720
Who knows?

01:37:20.720 --> 01:37:24.580
You may be featured on a
Google blog one day.

01:37:24.580 --> 01:37:30.440
So talk to me, and the way you
talk to me is you can connect

01:37:30.440 --> 01:37:34.740
to me with Google+,
email, Twitter.

01:37:34.740 --> 01:37:40.170
I have a blog for my Python work
and also for my books.

01:37:40.170 --> 01:37:41.160
I have a website for that.

01:37:41.160 --> 01:37:44.420
And then Cloud Platform has
a website, a blog, Twitter

01:37:44.420 --> 01:37:47.740
handle, and also a
Google+ as well.

01:37:47.740 --> 01:37:48.290
All right?

01:37:48.290 --> 01:37:50.370
Thank you very much for
coming, everybody.

01:37:50.370 --> 01:37:53.322
I hope you got a
lot out of it.

01:37:53.322 --> 01:37:59.226
[APPLAUSE]

01:37:59.226 --> 01:38:01.430
WESLEY CHUN: Are there
any questions?

01:38:01.430 --> 01:38:01.770
Oh, wait!

01:38:01.770 --> 01:38:04.230
I need your help tonight for
those of you who are willing

01:38:04.230 --> 01:38:07.230
to stay late because you
want to get a tech

01:38:07.230 --> 01:38:10.990
talk and a piano concert.

01:38:10.990 --> 01:38:12.730
I'm going to be going
across the street in

01:38:12.730 --> 01:38:13.960
about half an hour.

01:38:13.960 --> 01:38:16.345
I'm going to be playing
some Chopin.

01:38:16.345 --> 01:38:19.190
I'm going to rock some Chopin
across the street, so if you

01:38:19.190 --> 01:38:20.390
guys aren't busy.

01:38:20.390 --> 01:38:22.920
I can only take x number of you
that Google security will

01:38:22.920 --> 01:38:25.500
allow me to take.

01:38:25.500 --> 01:38:30.130
But I have a performance that
I'm doing this Saturday?

01:38:30.130 --> 01:38:31.450
Or this Sunday.

01:38:31.450 --> 01:38:31.820
I can't remember.

01:38:31.820 --> 01:38:33.100
Saturday?

01:38:33.100 --> 01:38:37.300
And while I can play this in
the dark at home, I need to

01:38:37.300 --> 01:38:38.640
have pressure.

01:38:38.640 --> 01:38:41.420
So if you're willing to listen
to a Chopin Etudes, just

01:38:41.420 --> 01:38:42.700
follow me a little later.

01:38:42.700 --> 01:38:44.720
Just hang around.

01:38:44.720 --> 01:38:48.710
In the meantime, are there
any questions?

01:38:48.710 --> 01:38:54.340
Not about Chopin, but about what
I talked about tonight.

01:38:54.340 --> 01:38:54.940
Yes, sir?

01:38:54.940 --> 01:38:56.431
AUDIENCE: Two questions.

01:38:56.431 --> 01:38:59.413
The first question is if I
want to do something like

01:38:59.413 --> 01:39:05.377
OpenCV, is there a direct way
to integrate it in with GAE,

01:39:05.377 --> 01:39:09.310
or do I need to go to--

01:39:09.310 --> 01:39:11.100
WESLEY CHUN: You can either
go to the mic or I

01:39:11.100 --> 01:39:12.220
can repeat the question.

01:39:12.220 --> 01:39:16.810
So the question was asking how
do I integrate with OpenCV?

01:39:16.810 --> 01:39:18.630
Now I'm not familiar
with OpenCV.

01:39:18.630 --> 01:39:19.500
What is that?

01:39:19.500 --> 01:39:20.260
AUDIENCE: [INAUDIBLE]

01:39:20.260 --> 01:39:21.106
Computer Vision Library.

01:39:21.106 --> 01:39:23.990
WESLEY CHUN: Computer
Vision Library, OK.

01:39:23.990 --> 01:39:25.330
I think I know what
the question is.

01:39:25.330 --> 01:39:29.330
Basically, the question is can
I upload my code and have a

01:39:29.330 --> 01:39:32.610
third party library execute
on App Engine?

01:39:32.610 --> 01:39:34.610
The answer is yes if
it's pure Python.

01:39:34.610 --> 01:39:36.720
It doesn't use any restricted
libraries, and it doesn't have

01:39:36.720 --> 01:39:38.230
any C code.

01:39:38.230 --> 01:39:40.650
So, no C, so that's going
to be a tricky thing.

01:39:43.434 --> 01:39:45.270
I don't know if that's
really bad.

01:39:45.270 --> 01:39:47.110
Maybe the whole thing
is C, right?

01:39:47.110 --> 01:39:50.920
The whole thing is C, so that's
going to be trickier.

01:39:50.920 --> 01:39:53.670
In the past, we've been
more restrictive.

01:39:53.670 --> 01:39:56.870
So in the original version of
App Engine with a 2.5 runtime,

01:39:56.870 --> 01:39:59.750
we did not have lots
more things.

01:39:59.750 --> 01:40:03.100
But with the 2.7 support, we're
trying to relax some of

01:40:03.100 --> 01:40:06.410
the security requirements, so
now we actually support NumPy,

01:40:06.410 --> 01:40:08.020
we support lxml.

01:40:08.020 --> 01:40:11.470
All these things used to be
kind of verboten, but now

01:40:11.470 --> 01:40:11.990
they're allowed.

01:40:11.990 --> 01:40:14.920
But if it's still C, we still
can't do that yet.

01:40:14.920 --> 01:40:17.250
But if it's pure Python,
usually is it's pretty

01:40:17.250 --> 01:40:19.410
reasonable.

01:40:19.410 --> 01:40:21.190
Good question.

01:40:21.190 --> 01:40:22.440
Another question?

01:40:24.880 --> 01:40:26.720
Oh, come on!

01:40:26.720 --> 01:40:30.090
OK, we'll try you again until
somebody else has

01:40:30.090 --> 01:40:30.915
worked up the nerve.

01:40:30.915 --> 01:40:32.230
AUDIENCE: [INAUDIBLE]

01:40:32.230 --> 01:40:33.715
talk to [INAUDIBLE]

01:40:33.715 --> 01:40:37.675
integrating in OAuth together
with Facebook, so you can go

01:40:37.675 --> 01:40:41.635
ahead and have one universal
sign in for [INAUDIBLE].

01:40:41.635 --> 01:40:44.605
[INAUDIBLE]

01:40:44.605 --> 01:40:45.595
question.

01:40:45.595 --> 01:40:46.530
WESLEY CHUN: All right.

01:40:46.530 --> 01:40:50.860
So the question is, we want to
implement single sign on.

01:40:50.860 --> 01:40:53.550
It's usually been pretty tricky
with OAuth and all that

01:40:53.550 --> 01:40:56.040
kind of stuff.

01:40:56.040 --> 01:40:59.330
Yeah, security is always going
to be a bit of an issue, but--

01:40:59.330 --> 01:41:00.202
AUDIENCE: You're Google!

01:41:00.202 --> 01:41:01.618
You know all about that stuff.

01:41:01.618 --> 01:41:02.850
WESLEY CHUN: We do.

01:41:02.850 --> 01:41:05.160
We have people that know
a lot about that stuff.

01:41:07.700 --> 01:41:10.840
Yeah, that one I'm going to
have to check with our

01:41:10.840 --> 01:41:12.390
security team on.

01:41:12.390 --> 01:41:15.860
We had the Google Identity
toolkit a little while ago.

01:41:15.860 --> 01:41:18.800
I don't know if that's still
correct or not, but I know

01:41:18.800 --> 01:41:22.160
another developer advocate on my
team who can better answer

01:41:22.160 --> 01:41:24.030
that question than I can.

01:41:24.030 --> 01:41:26.475
VAN RIPER: I was going to
say look up Tim Bray.

01:41:26.475 --> 01:41:27.040
WESLEY CHUN: Yeah.

01:41:27.040 --> 01:41:28.210
It's Tim Bray.

01:41:28.210 --> 01:41:29.250
Everybody knows who he is.

01:41:29.250 --> 01:41:30.140
Just contact him.

01:41:30.140 --> 01:41:33.070
VAN RIPER: B-R-A-Y. Look
him up on Google+.

01:41:33.070 --> 01:41:37.500
He talks a lot about
identity-related stuff.

01:41:37.500 --> 01:41:39.880
I don't know if his talk was
recorded at OSCON but he's

01:41:39.880 --> 01:41:41.150
given a talk [INAUDIBLE].

01:41:41.150 --> 01:41:43.200
WESLEY CHUN: Yeah.

01:41:43.200 --> 01:41:44.650
Van does remind me.

01:41:44.650 --> 01:41:50.060
Tim did give a talk on
identities and authentication

01:41:50.060 --> 01:41:53.120
at OSCON, which is the O'Reilly
Open Resource

01:41:53.120 --> 01:41:53.970
Convention.

01:41:53.970 --> 01:41:55.890
You may be able to get his
slide deck online.

01:41:55.890 --> 01:41:58.070
I do not believe they recorded
the talks, thought.

01:41:58.070 --> 01:42:00.520
AUDIENCE: Besides the slide
deck, you have the library

01:42:00.520 --> 01:42:02.480
that we can use that
does the job?

01:42:02.480 --> 01:42:04.365
Or [INAUDIBLE]?

01:42:04.365 --> 01:42:07.340
VAN RIPER: Without trying to
be Tim, it's complicated

01:42:07.340 --> 01:42:10.440
because I mean if people follow
certain standards, then

01:42:10.440 --> 01:42:11.910
there's libraries you can
use that work with those

01:42:11.910 --> 01:42:16.180
standards, but there isn't one
standard that everyone is on

01:42:16.180 --> 01:42:16.930
board with.

01:42:16.930 --> 01:42:21.550
There's the OAuth, different
levels of that, OpenID, and

01:42:21.550 --> 01:42:23.240
your flavor of the month.

01:42:23.240 --> 01:42:23.920
WESLEY CHUN: Yeah.

01:42:23.920 --> 01:42:26.340
I mean, the answer really
is it's complicated

01:42:26.340 --> 01:42:28.650
because it's security.

01:42:28.650 --> 01:42:29.990
Anybody else?

01:42:29.990 --> 01:42:32.600
Question?

01:42:32.600 --> 01:42:34.230
Did it just overwhelm
you or something?

01:42:34.230 --> 01:42:35.760
Or was this talk to low-level,
you want

01:42:35.760 --> 01:42:36.840
to see code or something?

01:42:36.840 --> 01:42:37.390
Or what?

01:42:37.390 --> 01:42:41.150
I mean, come on.

01:42:41.150 --> 01:42:41.760
Boring.

01:42:41.760 --> 01:42:42.110
OK!

01:42:42.110 --> 01:42:42.900
Yes, sir.

01:42:42.900 --> 01:42:45.090
AUDIENCE: Can you
debug remotely?

01:42:45.090 --> 01:42:46.980
WESLEY CHUN: Can you
debug remotely?

01:42:46.980 --> 01:42:47.900
Great question.

01:42:47.900 --> 01:42:49.150
Depends what you mean
by debugging.

01:42:53.080 --> 01:42:55.360
So a couple of answers
to that.

01:42:55.360 --> 01:42:58.380
The SDK that you download, it
does come with the local

01:42:58.380 --> 01:43:01.430
development server, so you can
actually run your code locally

01:43:01.430 --> 01:43:04.010
on your box and debug there.

01:43:04.010 --> 01:43:08.220
As far as debugging remotely,
you'll get error messages.

01:43:08.220 --> 01:43:10.270
You'll get exceptions thrown
at you, and you

01:43:10.270 --> 01:43:11.310
will get stack traces.

01:43:11.310 --> 01:43:13.110
And you can access those
from you admin console.

01:43:13.110 --> 01:43:15.620
You can also download
them as well.

01:43:15.620 --> 01:43:18.200
Better yet, there is a
tool called Appstats,

01:43:18.200 --> 01:43:22.380
A-P-P-S-T-A-T-S, which will
let you actually measure

01:43:22.380 --> 01:43:26.120
performance between your app and
the back end services that

01:43:26.120 --> 01:43:28.725
you're calling like, Memcache
or task queues or whatever.

01:43:28.725 --> 01:43:31.120
You can actually track and
follow what are the

01:43:31.120 --> 01:43:33.550
bottlenecks in your code
that's causing

01:43:33.550 --> 01:43:34.950
those things to happen.

01:43:34.950 --> 01:43:39.440
And so you can refactor your
code so it performs better.

01:43:39.440 --> 01:43:42.320
I mean, that's not necessarily
related to bugs, but it's

01:43:42.320 --> 01:43:45.270
partially it.

01:43:45.270 --> 01:43:48.640
There's also unit testing
frameworks as well for your

01:43:48.640 --> 01:43:50.440
App Engine apps, too.

01:43:50.440 --> 01:43:52.810
So lots of different tools
that you could use.

01:43:52.810 --> 01:43:53.130
Yes, sir?

01:43:53.130 --> 01:43:57.150
AUDIENCE: How do you develop
beyond one person [INAUDIBLE]?

01:43:57.150 --> 01:43:58.340
WESLEY CHUN: The question
is how do you

01:43:58.340 --> 01:43:59.830
develop beyond one person?

01:43:59.830 --> 01:44:00.880
That's a great question.

01:44:00.880 --> 01:44:03.800
Obviously, when you create an
App Engine application, you

01:44:03.800 --> 01:44:07.810
create it as yourself, as the
user, but there's a couple

01:44:07.810 --> 01:44:08.990
ways of going beyond that.

01:44:08.990 --> 01:44:11.970
If you're using a Google Apps
domain, you could specify

01:44:11.970 --> 01:44:13.910
people that are in the
apps domain that can

01:44:13.910 --> 01:44:15.260
get access your app.

01:44:15.260 --> 01:44:18.030
You can also physically opt in
people, but you can send them

01:44:18.030 --> 01:44:20.480
an invite to become a developer
on your app.

01:44:20.480 --> 01:44:21.830
There's also different roles.

01:44:21.830 --> 01:44:24.450
So you could say someone who's
the owner, or someone who's

01:44:24.450 --> 01:44:27.200
just a developer, or someone who
can just run the code, or

01:44:27.200 --> 01:44:29.570
look at the code, or not do
anything else with it.

01:44:29.570 --> 01:44:32.220
So there's multiple
levels of control.

01:44:32.220 --> 01:44:32.930
Great question.

01:44:32.930 --> 01:44:33.730
Anything else?

01:44:33.730 --> 01:44:34.230
Yes, sir?

01:44:34.230 --> 01:44:37.638
AUDIENCE: Are the servers and
databases compliant with

01:44:37.638 --> 01:44:40.632
certain government
confidentiality, stuff like

01:44:40.632 --> 01:44:43.030
HIPAA compliance?

01:44:43.030 --> 01:44:45.490
WESLEY CHUN: I can't really
speak to other types of

01:44:45.490 --> 01:44:47.480
compliance, but the ones that
were mentioned in the talk are

01:44:47.480 --> 01:44:49.100
the ones that we
can talk about.

01:44:49.100 --> 01:44:52.600
All the other ones we know about
and we're working on,

01:44:52.600 --> 01:44:56.500
but we don't have anything
to say today.

01:44:56.500 --> 01:44:58.560
For people who are concerned
about that kind of stuff,

01:44:58.560 --> 01:45:01.730
typically the use case is if
I've got patient data, and I'm

01:45:01.730 --> 01:45:05.470
really worried about HIPAA, what
customers typically do is

01:45:05.470 --> 01:45:07.590
they do the encryption
themselves.

01:45:07.590 --> 01:45:09.660
It's already encrypted by the
time it comes into Google's

01:45:09.660 --> 01:45:13.040
network, so then it's never a
problem for us because we

01:45:13.040 --> 01:45:15.660
can't see it.

01:45:15.660 --> 01:45:16.160
Yes, sir?

01:45:16.160 --> 01:45:24.100
AUDIENCE: You mentioned how far
you can scale [INAUDIBLE]

01:45:24.100 --> 01:45:25.488
stuff like that.

01:45:25.488 --> 01:45:29.240
Does it take time to scale
an app [INAUDIBLE]?

01:45:29.240 --> 01:45:34.349
If there was a scheduled time
with my app, and 1,000 people

01:45:34.349 --> 01:45:37.295
come on my app at that exact
moment, like say, I don't

01:45:37.295 --> 01:45:39.750
know, registration
for Google I/O--

01:45:39.750 --> 01:45:41.240
WESLEY CHUN: [LAUGHING]

01:45:41.240 --> 01:45:44.540
Don't mention that.

01:45:44.540 --> 01:45:46.680
There were no bugs in
our software when

01:45:46.680 --> 01:45:48.640
registration for I/O--

01:45:48.640 --> 01:45:50.270
when it launched.

01:45:50.270 --> 01:45:53.590
It was bugs elsewhere.

01:45:53.590 --> 01:45:56.670
So the question was how
do we get to that

01:45:56.670 --> 01:45:58.400
obscene type of scaling?

01:45:58.400 --> 01:46:00.480
Does it ramp up?

01:46:00.480 --> 01:46:02.610
Is it like a flood gate type
of thing, like I/O

01:46:02.610 --> 01:46:04.240
registration?

01:46:04.240 --> 01:46:05.910
A couple ways for me
to answer that.

01:46:05.910 --> 01:46:08.830
One is that the App Engine
service actively

01:46:08.830 --> 01:46:10.160
monitors your app.

01:46:10.160 --> 01:46:14.640
So as your traffic grows, it
will actually create more

01:46:14.640 --> 01:46:17.020
resources to be able to support
the traffic that

01:46:17.020 --> 01:46:17.720
you're getting.

01:46:17.720 --> 01:46:20.770
So one of the things is the
amount of traffic that you're

01:46:20.770 --> 01:46:23.440
getting and the growth
at that's happening.

01:46:23.440 --> 01:46:27.020
Another thing that's important
related to scaling is one of

01:46:27.020 --> 01:46:27.940
the best practices--

01:46:27.940 --> 01:46:30.320
it's actually part of my best
practice talk on App Engine--

01:46:30.320 --> 01:46:35.050
which is try to have your app
respond in under 1,000

01:46:35.050 --> 01:46:37.670
milliseconds, under 1 second.

01:46:37.670 --> 01:46:41.140
The faster your app responds,
the more willing the App

01:46:41.140 --> 01:46:43.970
Engine system is to
automatically scale your app

01:46:43.970 --> 01:46:45.690
and just stretch you
out horizontally

01:46:45.690 --> 01:46:47.240
as much as you need.

01:46:47.240 --> 01:46:51.270
The slower you are, the more
that you'll be penalized.

01:46:51.270 --> 01:46:53.940
So if you have apps that if
you're naughty and you're

01:46:53.940 --> 01:46:56.460
taking several seconds or 30
seconds or something really

01:46:56.460 --> 01:46:59.250
bad, you get put
in the corner.

01:46:59.250 --> 01:47:01.590
You're getting demerits.

01:47:01.590 --> 01:47:05.520
So those are ways to
get it to scale.

01:47:05.520 --> 01:47:09.420
Another thing is if you're
working on a really large app

01:47:09.420 --> 01:47:12.280
where it really matters, and
if you have a developer

01:47:12.280 --> 01:47:14.480
advocate that you're working
with that's on the Cloud team

01:47:14.480 --> 01:47:19.530
already, they can help you with
developing strategies for

01:47:19.530 --> 01:47:22.440
load balancing and also
load testing, and

01:47:22.440 --> 01:47:24.470
things like that, too.

01:47:24.470 --> 01:47:27.730
And if it's really a big,
public event, it may be

01:47:27.730 --> 01:47:31.960
possible to have your advocate
talk to the team about maybe

01:47:31.960 --> 01:47:35.590
there's something that's really,
really big that we can

01:47:35.590 --> 01:47:37.920
maybe help out with
on our side.

01:47:37.920 --> 01:47:42.700
But as far as taking care of the
system goes, the engineers

01:47:42.700 --> 01:47:45.110
responsible for making sure
that the system is up will

01:47:45.110 --> 01:47:47.050
never look at one
particular app.

01:47:47.050 --> 01:47:50.060
Even when the royal wedding
happened, they would not

01:47:50.060 --> 01:47:51.530
monitor one app.

01:47:51.530 --> 01:47:53.660
They monitored the system
as a whole.

01:47:53.660 --> 01:47:56.560
It was those of us who are
public-facing that were

01:47:56.560 --> 01:47:59.340
freaking out, staying up late
night, monitoring the app.

01:47:59.340 --> 01:48:01.270
They were not monitoring
the app.

01:48:01.270 --> 01:48:02.920
I was, OK?

01:48:02.920 --> 01:48:07.220
So we don't do monitoring at
that level, but ramping up

01:48:07.220 --> 01:48:08.200
slowly works fine.

01:48:08.200 --> 01:48:09.950
Ramping up quickly works
fine as long as your

01:48:09.950 --> 01:48:11.350
app responds quickly.

01:48:11.350 --> 01:48:13.880
There's a couple of things that
you can do to help your

01:48:13.880 --> 01:48:17.910
app respond more quickly to more
traffic as it comes in,

01:48:17.910 --> 01:48:20.960
so you can look up warmups.

01:48:20.960 --> 01:48:24.150
You can actually prepare an App
Engine instance before it

01:48:24.150 --> 01:48:25.350
gets any traffic.

01:48:25.350 --> 01:48:27.970
It can run some code to prepare
itself, like loading

01:48:27.970 --> 01:48:31.530
some JAR files or whatnot, and
get it so that by the time

01:48:31.530 --> 01:48:34.050
traffic hits it, users will
not notice the difference

01:48:34.050 --> 01:48:36.140
between hitting that new
instance of your app versus

01:48:36.140 --> 01:48:38.420
one that's already been
up and running.

01:48:38.420 --> 01:48:39.510
So those are just
some answers.

01:48:39.510 --> 01:48:40.910
There's probably others
that I don't know.

01:48:40.910 --> 01:48:44.580
I haven't been on the team for
quite a while now, but I tried

01:48:44.580 --> 01:48:46.660
my best to answer it.

01:48:46.660 --> 01:48:49.240
Any others?

01:48:49.240 --> 01:48:51.040
AUDIENCE: I have a question.

01:48:51.040 --> 01:48:52.586
How do you deploy the app?

01:48:52.586 --> 01:48:53.920
WESLEY CHUN: How you
deploy the app?

01:48:53.920 --> 01:48:54.890
That's a great question.

01:48:54.890 --> 01:48:57.130
There's two different ways
of doing it right now.

01:48:57.130 --> 01:49:00.320
You can do it from the command
line, where you just give the

01:49:00.320 --> 01:49:02.420
appropriate command to upload
your app, and then you have to

01:49:02.420 --> 01:49:04.440
give your credentials and
things like that.

01:49:04.440 --> 01:49:05.570
It'll upload your app.

01:49:05.570 --> 01:49:07.240
It'll tell you like
have we finished

01:49:07.240 --> 01:49:08.450
uploading your app yet?

01:49:08.450 --> 01:49:10.880
And also, once it uploads your
app, it also has to make sure

01:49:10.880 --> 01:49:13.930
that your app is serving before
you get control back.

01:49:13.930 --> 01:49:18.160
So typically, I would say
normally your app should be up

01:49:18.160 --> 01:49:20.860
and going and about half
a minute or less.

01:49:20.860 --> 01:49:22.180
It shouldn't take too long.

01:49:22.180 --> 01:49:24.070
Maybe up to a minute
depending if the

01:49:24.070 --> 01:49:25.810
system is busy or whatnot.

01:49:25.810 --> 01:49:29.470
The other way of uploading your
app if via the UI tool

01:49:29.470 --> 01:49:31.000
week that comes with the SDK.

01:49:31.000 --> 01:49:33.570
So if you're on a Mac or a PC,
it comes with a tool called

01:49:33.570 --> 01:49:34.220
the Launcher.

01:49:34.220 --> 01:49:36.380
You just click on the Deploy
button, type in your

01:49:36.380 --> 01:49:39.630
credentials, and it'll upload
your app there.

01:49:39.630 --> 01:49:41.370
So those are two different
ways of doing it.

01:49:41.370 --> 01:49:44.300
AUDIENCE: [INAUDIBLE].

01:49:44.300 --> 01:49:45.390
WESLEY CHUN: Ah, yes, right.

01:49:45.390 --> 01:49:48.780
We also added a get push
to deploy as well, too.

01:49:48.780 --> 01:49:50.490
So that's the third one.

01:49:50.490 --> 01:49:51.960
Sorry I didn't mention
that one, but yes.

01:49:54.640 --> 01:49:58.890
Which may be the more modern way
of doing things, actually.

01:49:58.890 --> 01:49:59.360
Yes, sir?

01:49:59.360 --> 01:50:02.664
AUDIENCE: How does the CPU time
compare between using

01:50:02.664 --> 01:50:04.552
Jython versus Python?

01:50:04.552 --> 01:50:07.570
WESLEY CHUN: How does the CPU
time compare between using

01:50:07.570 --> 01:50:09.085
Jython versus Python?

01:50:11.810 --> 01:50:13.590
That's a good question, and
that is something that I

01:50:13.590 --> 01:50:16.750
haven't measured before.

01:50:16.750 --> 01:50:20.430
At the very bottom level,
it's all C code that's

01:50:20.430 --> 01:50:22.690
running, even Java.

01:50:22.690 --> 01:50:31.520
So everything runs at an even
level, so it's not like some

01:50:31.520 --> 01:50:33.745
people think, oh, yeah, if it's
compiled code, if may run

01:50:33.745 --> 01:50:35.100
faster than if it's
not compiled code.

01:50:35.100 --> 01:50:39.050
But everything is bytecode
compiled already, so if you've

01:50:39.050 --> 01:50:41.590
got a Java app, whether it's a
Jython app or a traditional

01:50:41.590 --> 01:50:45.200
Java app, the Java bytecode is
compiled before your app runs.

01:50:45.200 --> 01:50:46.520
Same thing goes, actually,
when you

01:50:46.520 --> 01:50:47.850
upload your Python app.

01:50:47.850 --> 01:50:50.540
All that stuff is compiled to
Python bytecode as well, too.

01:50:50.540 --> 01:50:52.760
But I haven't done any
benchmarks to see.

01:50:52.760 --> 01:50:54.520
But that's something that's
worth trying, thought.

01:50:54.520 --> 01:50:57.300
And if you do that, contact me
and let me know what your

01:50:57.300 --> 01:50:58.880
results are.

01:50:58.880 --> 01:50:59.816
Thanks.

01:50:59.816 --> 01:51:00.550
Yes, sir?

01:51:00.550 --> 01:51:03.126
AUDIENCE: How much memory will
you have [INAUDIBLE]?

01:51:03.126 --> 01:51:04.970
WESLEY CHUN: How much
memory do you have?

01:51:04.970 --> 01:51:06.500
That's also something
else that's

01:51:06.500 --> 01:51:08.400
not within your control.

01:51:08.400 --> 01:51:11.540
If your apps starts using too
much memory, you'll be getting

01:51:11.540 --> 01:51:13.650
some exceptions telling
you that.

01:51:13.650 --> 01:51:16.390
There's no real ballpark number
I can really say,

01:51:16.390 --> 01:51:17.800
actually, because it's just
something that really

01:51:17.800 --> 01:51:21.530
shouldn't be something you
need to worry about.

01:51:21.530 --> 01:51:23.930
I don't know if we have any
memory management tools to

01:51:23.930 --> 01:51:28.260
help you with that, but yeah,
that's just one of those

01:51:28.260 --> 01:51:31.410
things that's taken
care of for you.

01:51:31.410 --> 01:51:34.000
I know that's not a great
answer, but if you have

01:51:34.000 --> 01:51:35.800
something more specific that
you're asking about, like

01:51:35.800 --> 01:51:37.710
maybe certain libraries you want
to know how much memory

01:51:37.710 --> 01:51:40.360
you have, you can check
with me on that.

01:51:40.360 --> 01:51:41.970
The other thing that's not
predictable, that is a

01:51:41.970 --> 01:51:44.330
question that you did not ask
that is related, is how much

01:51:44.330 --> 01:51:47.900
Memcache do you get with
the Memcache service?

01:51:47.900 --> 01:51:49.860
That's also is not predictable,
too, because it's

01:51:49.860 --> 01:51:50.700
a shared service.

01:51:50.700 --> 01:51:54.530
It all depends on your usage
and other people's usage.

01:51:54.530 --> 01:51:58.590
But also we're working on
a more dedicated type of

01:51:58.590 --> 01:52:01.520
Memcache that you can kind of
control on your own, so that's

01:52:01.520 --> 01:52:05.500
something that we're
working on.

01:52:05.500 --> 01:52:08.230
Anything else?

01:52:08.230 --> 01:52:08.880
All right, great.

01:52:08.880 --> 01:52:09.430
Oh, one more.

01:52:09.430 --> 01:52:10.370
AUDIENCE: Are the slides
published?

01:52:10.370 --> 01:52:13.870
WESLEY CHUN: Yes, I'll get the
slides over to Van or Kevin,

01:52:13.870 --> 01:52:17.170
and you, Tom, or Peter,
and I will get them

01:52:17.170 --> 01:52:18.920
available for you guys.

01:52:18.920 --> 01:52:20.761
All right, thanks for
coming, everybody.

01:52:20.761 --> 01:52:27.495
[APPLAUSE]

01:52:27.495 --> 01:52:29.712
WESLEY CHUN: Hang around
for piano stuff.

01:52:29.712 --> 01:52:32.370
AUDIENCE: How long
is the show?

01:52:32.370 --> 01:52:35.130
WESLEY CHUN: Oh, I'm just
playing one song.

01:52:35.130 --> 01:53:22.818
[MUSIC PLAYING]

