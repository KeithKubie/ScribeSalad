WEBVTT
Kind: captions
Language: en

00:00:00.140 --> 00:00:03.590
Remember back in lesson two 
when Katherine used

00:00:03.590 --> 00:00:07.450
an AsyncTask hooked up to
a refresh button to update our data?

00:00:07.450 --> 00:00:10.290
Rato talked about how 
that was a bad idea

00:00:10.290 --> 00:00:14.510
because the AsyncTask is not tied 
to the activity life cycle.

00:00:14.510 --> 00:00:17.970
The virtual machine will hold on
to the activity object

00:00:17.970 --> 00:00:21.470
as long as the AsyncTask is running, 
even after Android

00:00:21.470 --> 00:00:26.130
has called onDestroy for the activity
and expect it to be discarded.

00:00:26.130 --> 00:00:28.380
If you rotate your phone, 
the behavior is to destroy

00:00:28.380 --> 00:00:31.810
your activity and instantiate a new one.

00:00:31.810 --> 00:00:35.400
The naive AsyncTask implementation 
now has two threads

00:00:35.400 --> 00:00:38.780
trying to perform the same update, 
and so forth.

00:00:38.780 --> 00:00:41.130
The point is, it's not 
the best pattern

00:00:41.130 --> 00:00:43.586
for a potentially 
very long background operation,

00:00:43.586 --> 00:00:45.944
such as fetching from web services.

00:00:45.944 --> 00:00:48.410
If you leave the app, 
the AsyncTask will continue to run

00:00:48.410 --> 00:00:51.340
for as long as your process is kept alive,

00:00:51.340 --> 00:00:53.890
but will run at a low priority, 
and your process

00:00:53.890 --> 00:00:56.290
will be the first thing 
to be killed if the device

00:00:56.290 --> 00:00:58.153
needs more resources.

00:00:58.153 --> 00:00:59.836
And there's a bigger problem.

00:00:59.836 --> 00:01:02.330
Your app has to be visible 
and running in the foreground

00:01:02.330 --> 00:01:04.772
to instantiate the task 
in the first place.

00:01:04.772 --> 00:01:06.436
Because we started a task,

00:01:06.436 --> 00:01:08.720
to update the weather 
when we started the app,

00:01:08.720 --> 00:01:13.070
this can have undesirable behavior 
if the weather changes rapidly.

00:01:13.070 --> 00:01:16.110
So now we're going to learn
the right way to perform updates.

00:01:16.110 --> 00:01:18.700
We'll want to automate 
the process while the app

00:01:18.700 --> 00:01:20.263
is in the foreground.

00:01:20.263 --> 00:01:22.946
But even more importantly,
we want the app to get

00:01:22.946 --> 00:01:26.380
regular updates in the background 
with minimal battery drain.

00:01:26.380 --> 00:01:28.970
That will be especially important 
later in this lesson

00:01:28.970 --> 00:01:31.010
when we introduce 
weather notifications.

