WEBVTT
Kind: captions
Language: en

00:00:00.719 --> 00:00:02.510
PROFESSOR: So we're
finally ready to tie up

00:00:02.510 --> 00:00:06.070
these ideas about
mapping properties

00:00:06.070 --> 00:00:08.180
to counting properties.

00:00:08.180 --> 00:00:10.950
And let's begin with
the remark we already

00:00:10.950 --> 00:00:14.370
made, that if there's a
bijection from one set

00:00:14.370 --> 00:00:17.250
to another, if there's a
bijection from a finite set

00:00:17.250 --> 00:00:21.450
A to a finite set B, then
A and B have the same size.

00:00:21.450 --> 00:00:24.230
By the way, those vertical
bars, absolute value

00:00:24.230 --> 00:00:26.590
of A, when it's a set
refers us to the size

00:00:26.590 --> 00:00:28.140
of the set for finite sets.

00:00:28.140 --> 00:00:33.370
So it means if A has n elements,
then the absolute value of A

00:00:33.370 --> 00:00:33.870
is n.

00:00:36.400 --> 00:00:36.910
OK.

00:00:36.910 --> 00:00:39.090
Let's use this bijection
idea immediately.

00:00:39.090 --> 00:00:40.260
Here's a nice example.

00:00:40.260 --> 00:00:43.340
Suppose you want to figure
out how many subsets

00:00:43.340 --> 00:00:46.160
are there of a finite set A?

00:00:46.160 --> 00:00:47.790
Suppose you didn't know yet.

00:00:47.790 --> 00:00:48.290
All right.

00:00:48.290 --> 00:00:49.831
So what we're asking
about is, what's

00:00:49.831 --> 00:00:51.260
the size of the power set of A?

00:00:51.260 --> 00:00:53.270
Remember the power
set of A is all

00:00:53.270 --> 00:00:57.020
of the possible subsets
of the set A. Well suppose

00:00:57.020 --> 00:00:58.080
A has three elements.

00:00:58.080 --> 00:01:00.355
What is the power
set of A look like?

00:01:00.355 --> 00:01:03.370
If capital A has
elements little a,b,c.

00:01:03.370 --> 00:01:05.090
It's a set of size three.

00:01:05.090 --> 00:01:08.180
Then the power set
of A is going to have

00:01:08.180 --> 00:01:12.950
one subset with no elements,
three subsets with one element,

00:01:12.950 --> 00:01:14.420
they're listed there.

00:01:14.420 --> 00:01:17.080
It's going to have three more
subsets with two elements,

00:01:17.080 --> 00:01:19.760
and one subset with
three elements.

00:01:19.760 --> 00:01:27.230
For a total of eight subsets
in the power set of A.

00:01:27.230 --> 00:01:30.200
So let's see what the counting
argument in general would be.

00:01:30.200 --> 00:01:32.850
So suppose that
A has n elements.

00:01:32.850 --> 00:01:35.860
And we'll number them from
a 0 up through a n minus 1,

00:01:35.860 --> 00:01:39.420
because computer scientists
usually zero origin index.

00:01:39.420 --> 00:01:43.580
So A is a set of n
elements, indicated there.

00:01:43.580 --> 00:01:47.660
Suppose I have some arbitrary
subset of A. Let's suppose

00:01:47.660 --> 00:01:50.000
that it has a 0,
then there's no a 1,

00:01:50.000 --> 00:01:51.250
that's what this space is for.

00:01:51.250 --> 00:01:51.961
It has a 2.

00:01:51.961 --> 00:01:52.460
It has a 3.

00:01:52.460 --> 00:01:54.650
Doesn't have a 4.

00:01:54.650 --> 00:01:57.380
And it goes on for awhile
in some uncertain way.

00:01:57.380 --> 00:01:59.905
And it ends it actually
has the last element a

00:01:59.905 --> 00:02:02.300
and minus 1 in it.

00:02:02.300 --> 00:02:05.210
Well I can take the
subset like this

00:02:05.210 --> 00:02:08.550
and have it correspond
to a bit-string,

00:02:08.550 --> 00:02:12.980
where I put a 1 where the
element is there in the subset,

00:02:12.980 --> 00:02:15.350
and a 0 where the element
is not there in the subset.

00:02:15.350 --> 00:02:20.090
So there's a 1 because a 0 is
in the subset followed by a 0,

00:02:20.090 --> 00:02:23.120
because a 1 is not in the
subset, followed by two 1's

00:02:23.120 --> 00:02:26.640
because a 2 and a 3 are in
the subset, followed by a 0

00:02:26.640 --> 00:02:29.280
because a 4 is not, and
so on, ending with a 1,

00:02:29.280 --> 00:02:33.550
because a n minus
1 is in the subset.

00:02:33.550 --> 00:02:39.750
So in short, the bit-string the
[? case ?] bit in the string

00:02:39.750 --> 00:02:46.110
is 1, if and only if,
a sub k is in the set.

00:02:46.110 --> 00:02:49.000
Now this clearly
defines a bijection

00:02:49.000 --> 00:02:50.380
between subsets and strings.

00:02:50.380 --> 00:02:54.300
Because given a subset, I can
uniquely determine the string,

00:02:54.300 --> 00:02:56.910
and given the string, I can
uniquely determine the subset.

00:02:56.910 --> 00:02:59.820
So there's one arrow
in and one arrow out

00:02:59.820 --> 00:03:02.730
of each of those things.

00:03:02.730 --> 00:03:07.370
So I could immediately conclude
then by this bijection theorem

00:03:07.370 --> 00:03:09.660
that the number of
n bit-strings is

00:03:09.660 --> 00:03:14.560
equal to the size of the
power set of A. Well,

00:03:14.560 --> 00:03:16.840
now every computer
scientist knows how many

00:03:16.840 --> 00:03:18.660
n bit-strings there are, right?

00:03:18.660 --> 00:03:22.240
There are 2 to the
n n-bit bit-strings.

00:03:22.240 --> 00:03:25.970
And therefore, the power set
of A has 2 to the n elements.

00:03:25.970 --> 00:03:28.500
We can get rid of the n
because it was the size of A.

00:03:28.500 --> 00:03:30.200
We have this nice formula.

00:03:30.200 --> 00:03:34.620
The power set-- the size of
the power set of a finite set A

00:03:34.620 --> 00:03:43.650
is 2 to the size of A. Well
there are some more counting

00:03:43.650 --> 00:03:46.530
rules like the
bijection rule that

00:03:46.530 --> 00:03:48.960
relates sizes of
sets by inequalities

00:03:48.960 --> 00:03:51.280
according to whether
the mappings are

00:03:51.280 --> 00:03:53.310
surjective injective
functions and so on.

00:03:53.310 --> 00:03:55.850
So let's take a
quick look at those.

00:03:55.850 --> 00:04:00.630
Suppose that I have a
surjective function from A

00:04:00.630 --> 00:04:04.300
to B. Well that means there's
less than or equal to 1

00:04:04.300 --> 00:04:08.030
arrow out of every element of
A, that's what function means.

00:04:08.030 --> 00:04:09.910
And there is greater
than or equal to 1 arrow

00:04:09.910 --> 00:04:14.070
in to every element of B.
That's what surjective means.

00:04:14.070 --> 00:04:16.980
So here's this function from
A to B. That means less than

00:04:16.980 --> 00:04:19.100
or equal to 1 arrow out.

00:04:19.100 --> 00:04:23.780
And that means that there
have to be more elements in A

00:04:23.780 --> 00:04:26.210
than there are
arrows since there's

00:04:26.210 --> 00:04:28.960
at most, one arrow out
of every element of A

00:04:28.960 --> 00:04:30.940
and that accounts
for all the arrows.

00:04:30.940 --> 00:04:32.690
So the size of A has
to be greater than

00:04:32.690 --> 00:04:35.220
or equal to the
number of arrows when

00:04:35.220 --> 00:04:39.180
you have a partial function.

00:04:41.760 --> 00:04:44.690
When it's a surjection,
that means that there's

00:04:44.690 --> 00:04:47.820
an arrow coming into
every element of B.

00:04:47.820 --> 00:04:52.210
That means that there have
to be at least as many arrows

00:04:52.210 --> 00:04:54.305
as there are in B.
Because everything in B

00:04:54.305 --> 00:04:56.510
has at least one
arrow coming in.

00:04:56.510 --> 00:04:58.900
So if you look at these
two pieces, the size of A

00:04:58.900 --> 00:05:01.730
has to be greater than or
equal to the number of arrows.

00:05:01.730 --> 00:05:03.956
And the size of B
has to be less than

00:05:03.956 --> 00:05:05.330
or equal to the
number of arrows.

00:05:05.330 --> 00:05:07.580
Putting them together,
we have the mapping rule

00:05:07.580 --> 00:05:08.880
for surjections.

00:05:08.880 --> 00:05:12.000
If I have a surjective
function from A to B

00:05:12.000 --> 00:05:14.230
it means the size
of A is greater than

00:05:14.230 --> 00:05:18.120
or equal to the size of
B for finite A and B.

00:05:18.120 --> 00:05:20.490
The same argument
goes for injections.

00:05:20.490 --> 00:05:24.810
With an injection, I have less
than or equal to 1 arrow in.

00:05:24.810 --> 00:05:27.180
And what does that tell me?

00:05:27.180 --> 00:05:32.640
Well if it's total, then
there's at least 1 arrow out

00:05:32.640 --> 00:05:34.100
of everything.

00:05:34.100 --> 00:05:37.995
And that means that the size
of A has to be less than

00:05:37.995 --> 00:05:39.370
or equal to the
number of arrows.

00:05:39.370 --> 00:05:40.953
Because every element
in A contributes

00:05:40.953 --> 00:05:43.480
an arrow, maybe more than one.

00:05:43.480 --> 00:05:44.120
OK.

00:05:44.120 --> 00:05:46.140
If it's an injection,
there's less

00:05:46.140 --> 00:05:49.880
than or equal to 1 arrow
coming into each element of B.

00:05:49.880 --> 00:05:53.000
That means that B had
better be big enough

00:05:53.000 --> 00:05:54.580
to catch all the arrows.

00:05:54.580 --> 00:05:56.800
So the number of
arrows has to be

00:05:56.800 --> 00:05:59.210
less than or equal
to the size of B.

00:05:59.210 --> 00:06:01.410
Put those two
inequalities together

00:06:01.410 --> 00:06:05.920
and you find that if you have a
total injective relation from A

00:06:05.920 --> 00:06:08.850
to B, that implies
that the size of A

00:06:08.850 --> 00:06:12.815
is less than or equal to the
size of B for finite A and B.

00:06:12.815 --> 00:06:15.190
The statement here that it's
a totally injective relation

00:06:15.190 --> 00:06:16.424
is for generality.

00:06:16.424 --> 00:06:17.840
But the truth is,
whenever there's

00:06:17.840 --> 00:06:19.650
a total injective
relation there's also

00:06:19.650 --> 00:06:21.900
a totally injective function.

00:06:21.900 --> 00:06:26.630
I'll leave that to a class
exercise to work out.

00:06:26.630 --> 00:06:29.670
So to summarize,
what we can do is

00:06:29.670 --> 00:06:35.270
characterize these kinds of
jection relations between sets.

00:06:35.270 --> 00:06:38.260
So let's define A
bij B. So this is

00:06:38.260 --> 00:06:41.210
going to be a binary
relation between two

00:06:41.210 --> 00:06:44.800
sets A and B. And its meaning is
that there's a bijection from A

00:06:44.800 --> 00:06:50.200
to B. So the definition of
bij is a binary relation where

00:06:50.200 --> 00:06:54.420
the domain and the co domain
are the class of finite sets

00:06:54.420 --> 00:06:58.040
or all sets for that matter.

00:06:58.040 --> 00:07:01.710
surj B, A surj B
means that there

00:07:01.710 --> 00:07:05.120
is a surjective function
from A to B. Again,

00:07:05.120 --> 00:07:08.630
surj is a binary
relation between sets.

00:07:08.630 --> 00:07:11.470
And finally, A inj
B says, there's

00:07:11.470 --> 00:07:15.030
a total injection
relation from A to B.

00:07:15.030 --> 00:07:18.630
So we have those three
relations between sets.

00:07:18.630 --> 00:07:21.530
And what we've just
shown is that if there's

00:07:21.530 --> 00:07:25.170
a bijection between
A and B, that's true,

00:07:25.170 --> 00:07:28.100
implies that the size of A
is equal to the size of B.

00:07:28.100 --> 00:07:30.240
And in fact, it's not hard
to prove the converse.

00:07:30.240 --> 00:07:32.950
If the size of A and the
size of B are the same,

00:07:32.950 --> 00:07:37.780
then it's easy enough to find
a bijection between them.

00:07:37.780 --> 00:07:41.000
Similarly, if there's a
surjection from A to B,

00:07:41.000 --> 00:07:43.560
that's true, if and
only if, the size of A

00:07:43.560 --> 00:07:45.890
is greater than or
equal to the size of B.

00:07:45.890 --> 00:07:48.680
And if there's an
injection from A to B,

00:07:48.680 --> 00:07:51.650
that's true, if and
only if, the size of A

00:07:51.650 --> 00:07:53.820
is less than or equal
to the size of B.

00:07:53.820 --> 00:07:59.480
So this-- the existence of these
kinds of relations between sets

00:07:59.480 --> 00:08:04.100
is a handle on their
relative sizes.

00:08:04.100 --> 00:08:06.860
And this applies for
finite sets A and B.

00:08:06.860 --> 00:08:09.426
Because we really know what
the size of infinite sets are.

00:08:09.426 --> 00:08:11.550
So it wouldn't make sense
to talk about the mapping

00:08:11.550 --> 00:08:15.710
Lemma for infinite sets.

00:08:15.710 --> 00:08:18.270
However, we can ask some
questions about infinite sets.

00:08:18.270 --> 00:08:21.580
So one natural question
to ask is, let's look

00:08:21.580 --> 00:08:23.210
at some finite properties.

00:08:23.210 --> 00:08:25.680
If the size of A and B are the
same and the size of B and C

00:08:25.680 --> 00:08:29.010
are the same, obviously, the
size of A and C are the same.

00:08:29.010 --> 00:08:32.400
And that corresponds
directly to an insertion

00:08:32.400 --> 00:08:35.539
about bij because the size
of A equals the size of B,

00:08:35.539 --> 00:08:38.130
for finite sets, is
the same as A bij B.

00:08:38.130 --> 00:08:40.960
So what this says is
that if A bij B and B

00:08:40.960 --> 00:08:45.512
bij C, then A bij C. If
there's a bijection from A to B

00:08:45.512 --> 00:08:47.220
and a bijection from
B to C, then there's

00:08:47.220 --> 00:08:52.470
a bijection from A to C.
Corresponding property

00:08:52.470 --> 00:08:55.515
for finite sets, again, is
greater than or equal to-- if A

00:08:55.515 --> 00:08:57.890
is greater than or equal to
B greater than or equal to C,

00:08:57.890 --> 00:08:59.710
then A is-- the
size of A is greater

00:08:59.710 --> 00:09:02.280
than or equal to the size of
C. And that would correspond

00:09:02.280 --> 00:09:05.940
to a similar statement about
the surjection relation,

00:09:05.940 --> 00:09:09.080
A surj B, B surj C,
implies A surj C.

00:09:09.080 --> 00:09:10.910
And finally, more
interesting one,

00:09:10.910 --> 00:09:13.800
is that if A and B
are each greater than

00:09:13.800 --> 00:09:16.320
or equal to each other, if A
is greater than or equal to

00:09:16.320 --> 00:09:19.580
B and B-- the size of B is
greater than or equal to A,

00:09:19.580 --> 00:09:21.760
then in fact, they're
the same size.

00:09:21.760 --> 00:09:24.230
A is equal to B.
That would correspond

00:09:24.230 --> 00:09:27.470
to the following statement
in terms of jections,

00:09:27.470 --> 00:09:33.520
if A surj B and B surj A, then
A bij B. Now all of these facts

00:09:33.520 --> 00:09:37.630
follow immediately for
finite sets A and B.

00:09:37.630 --> 00:09:40.530
But we're going to be
interested in whether they

00:09:40.530 --> 00:09:41.492
hold for infinite sets.

00:09:41.492 --> 00:09:43.950
So they follow immediately for
finite sets from the Mapping

00:09:43.950 --> 00:09:47.100
Lemma because the Mapping Lemma
says that these bij and surj

00:09:47.100 --> 00:09:49.080
relations are the same
is equal and greater

00:09:49.080 --> 00:09:52.460
than or equal to [INAUDIBLE].

00:09:52.460 --> 00:09:57.120
So again, this is immediate
from the Mapping Lemma.

00:09:57.120 --> 00:10:01.320
But now I can ask whether
or not these same properties

00:10:01.320 --> 00:10:02.610
hold for infinite sets.

00:10:02.610 --> 00:10:05.550
It's an exercise in
reasoning about properties

00:10:05.550 --> 00:10:08.800
of mappings and relations.

00:10:08.800 --> 00:10:13.610
And the answer is that the first
two claims go through easily

00:10:13.610 --> 00:10:16.170
if you're trying to prove
them for finite sets,

00:10:16.170 --> 00:10:17.800
for infinite sets,
the basic ideas.

00:10:17.800 --> 00:10:18.966
Let's look at the first one.

00:10:18.966 --> 00:10:21.900
It says that if A-- If there's
a bijection from A to B

00:10:21.900 --> 00:10:23.830
and there's a
bijection from B to C,

00:10:23.830 --> 00:10:27.110
then there ought to be one from
A to C. How do you find it?

00:10:27.110 --> 00:10:28.110
Well it's actually easy.

00:10:28.110 --> 00:10:30.220
You just compose
the bijection from A

00:10:30.220 --> 00:10:33.170
to B with the
bijection from B to C.

00:10:33.170 --> 00:10:36.620
And it's a very easy
exercise that the composition

00:10:36.620 --> 00:10:38.660
of bijection is a bijection.

00:10:38.660 --> 00:10:41.800
Likewise, the composition of
surjections is a surjection.

00:10:41.800 --> 00:10:44.680
And that proves the
second claim easily.

00:10:44.680 --> 00:10:49.957
But the third claim is much more
interesting and is not obvious.

00:10:49.957 --> 00:10:51.790
It's called the
Schroeder-Bernstein theorem.

00:10:51.790 --> 00:10:56.290
And it will come up a little
bit in a few more lectures.

