WEBVTT
Kind: captions
Language: en

00:00:00.290 --> 00:00:01.510
Wahoo!

00:00:01.510 --> 00:00:02.830
Congratulations!

00:00:02.830 --> 00:00:05.870
You are just about
done with this course.

00:00:05.870 --> 00:00:08.980
In a few moments, you are going to be
introduced to the requirements for

00:00:08.980 --> 00:00:10.860
the final project of the course.

00:00:10.860 --> 00:00:14.800
But, before I get to that,
I want to talk about quizzes.

00:00:14.800 --> 00:00:18.200
You've probably noticed that
we like to put a lot of

00:00:18.200 --> 00:00:21.770
quizzes in our courses because
that's just how people learn.

00:00:21.770 --> 00:00:25.090
You're taking this course because
you want to make your apps faster.

00:00:25.090 --> 00:00:28.300
So it makes sense for us to give
you a lot of sites to analyze and

00:00:28.300 --> 00:00:30.780
dejankify as you go through the course.

00:00:30.780 --> 00:00:33.910
But of course, not every quiz
involves you debugging apps.

00:00:33.910 --> 00:00:37.440
We also like to pepper in quizzes,
like these, that we hope will give you

00:00:37.440 --> 00:00:41.160
a better conceptual understanding of
what you're trying to accomplish.

00:00:41.160 --> 00:00:43.380
I want to talk about myself for
a second.

00:00:43.380 --> 00:00:45.440
When i started working on
this course with Paul,

00:00:45.440 --> 00:00:49.360
I thought i knew a bit about getting
60 frame per second performance.

00:00:49.360 --> 00:00:50.610
But as we worked together and

00:00:50.610 --> 00:00:54.405
thought through all the questions that
we wanted to ask you, I realized that I

00:00:54.405 --> 00:00:57.965
really didn't understand frontend
performance as well as I thought.

00:00:57.965 --> 00:01:01.465
As any teacher will attest,
you don't really understand a subject

00:01:01.465 --> 00:01:04.025
until you try to explain
it to somebody else.

00:01:04.025 --> 00:01:08.565
In fact, the act of teaching and
deciding what questions to ask is

00:01:08.565 --> 00:01:13.210
actually a much better learning exercise
than simply answering questions.

00:01:13.210 --> 00:01:14.900
To that end I have a challenge for

00:01:14.900 --> 00:01:18.710
you, can you teach this
course better than us?

00:01:18.710 --> 00:01:20.728
Think back to the questions
that we asked you and

00:01:20.728 --> 00:01:22.453
the examples that we
gave you to work on.

00:01:22.453 --> 00:01:26.040
Do you have an idea for a better
question that could have been asked?

00:01:26.040 --> 00:01:29.480
Or do you have a better app that
people should be debugging?

00:01:29.480 --> 00:01:31.970
Or even better do you think
you can stump Paul and

00:01:31.970 --> 00:01:34.810
me with some kind of
performance question?

00:01:34.810 --> 00:01:37.860
If so, head back to that
particular part of the course and

00:01:37.860 --> 00:01:39.770
post your question in the forums.

00:01:39.770 --> 00:01:43.350
And when you do that,
start your post with better question.

00:01:43.350 --> 00:01:46.870
There are two big benefits for
asking questions.

00:01:46.870 --> 00:01:50.260
You'll be boosting your understanding
of performance by thinking through it

00:01:50.260 --> 00:01:54.360
a little bit more deeply and you'll make
the course better for everybody else.

00:01:54.360 --> 00:01:57.820
Future students will practice what
they're learning with more questions and

00:01:57.820 --> 00:02:00.690
walk away with a better
understanding of performance.

00:02:00.690 --> 00:02:02.970
It's really a win win, so

00:02:02.970 --> 00:02:06.230
do you have a better question
than what we've come up with?

00:02:06.230 --> 00:02:09.550
If so, post in the forums because I
cannot wait to start answering them.

