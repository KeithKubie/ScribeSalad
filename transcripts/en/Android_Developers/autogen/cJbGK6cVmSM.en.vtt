WEBVTT
Kind: captions
Language: en

00:00:07.730 --> 00:00:10.129
hi my name is reto Meier and I'm the

00:00:10.129 --> 00:00:10.139
hi my name is reto Meier and I'm the
 

00:00:10.139 --> 00:00:11.810
hi my name is reto Meier and I'm the
tech lead for Google's Android developer

00:00:11.810 --> 00:00:11.820
tech lead for Google's Android developer
 

00:00:11.820 --> 00:00:14.120
tech lead for Google's Android developer
relations team one of the most effective

00:00:14.120 --> 00:00:14.130
relations team one of the most effective
 

00:00:14.130 --> 00:00:15.350
relations team one of the most effective
ways you have at your disposal for

00:00:15.350 --> 00:00:15.360
ways you have at your disposal for
 

00:00:15.360 --> 00:00:17.029
ways you have at your disposal for
optimizing the efficiency of your data

00:00:17.029 --> 00:00:17.039
optimizing the efficiency of your data
 

00:00:17.039 --> 00:00:18.980
optimizing the efficiency of your data
transfers is eliminating user-driven

00:00:18.980 --> 00:00:18.990
transfers is eliminating user-driven
 

00:00:18.990 --> 00:00:21.650
transfers is eliminating user-driven
updates that means doing everything you

00:00:21.650 --> 00:00:21.660
updates that means doing everything you
 

00:00:21.660 --> 00:00:23.060
updates that means doing everything you
can to eliminate the refresh button

00:00:23.060 --> 00:00:23.070
can to eliminate the refresh button
 

00:00:23.070 --> 00:00:25.099
can to eliminate the refresh button
within your app most common reason

00:00:25.099 --> 00:00:25.109
within your app most common reason
 

00:00:25.109 --> 00:00:26.839
within your app most common reason
people hit refresh is because they don't

00:00:26.839 --> 00:00:26.849
people hit refresh is because they don't
 

00:00:26.849 --> 00:00:28.040
people hit refresh is because they don't
believe your app is displaying

00:00:28.040 --> 00:00:28.050
believe your app is displaying
 

00:00:28.050 --> 00:00:30.050
believe your app is displaying
up-to-date information if you're using

00:00:30.050 --> 00:00:30.060
up-to-date information if you're using
 

00:00:30.060 --> 00:00:31.970
up-to-date information if you're using
some form of client-side polling they're

00:00:31.970 --> 00:00:31.980
some form of client-side polling they're
 

00:00:31.980 --> 00:00:34.400
some form of client-side polling they're
probably right in fact every time you

00:00:34.400 --> 00:00:34.410
probably right in fact every time you
 

00:00:34.410 --> 00:00:35.990
probably right in fact every time you
create a repeating alarm to pin your

00:00:35.990 --> 00:00:36.000
create a repeating alarm to pin your
 

00:00:36.000 --> 00:00:38.360
create a repeating alarm to pin your
server to check for updates sundar kills

00:00:38.360 --> 00:00:38.370
server to check for updates sundar kills
 

00:00:38.370 --> 00:00:40.970
server to check for updates sundar kills
the bug droid stop the slaughter and use

00:00:40.970 --> 00:00:40.980
the bug droid stop the slaughter and use
 

00:00:40.980 --> 00:00:42.560
the bug droid stop the slaughter and use
Google Cloud messaging to have your

00:00:42.560 --> 00:00:42.570
Google Cloud messaging to have your
 

00:00:42.570 --> 00:00:44.510
Google Cloud messaging to have your
server notifying your app when there is

00:00:44.510 --> 00:00:44.520
server notifying your app when there is
 

00:00:44.520 --> 00:00:46.580
server notifying your app when there is
data ready to be downloaded or even

00:00:46.580 --> 00:00:46.590
data ready to be downloaded or even
 

00:00:46.590 --> 00:00:48.139
data ready to be downloaded or even
include the new data in the message

00:00:48.139 --> 00:00:48.149
include the new data in the message
 

00:00:48.149 --> 00:00:50.840
include the new data in the message
payload itself if you're using polling

00:00:50.840 --> 00:00:50.850
payload itself if you're using polling
 

00:00:50.850 --> 00:00:52.459
payload itself if you're using polling
you're forced to balance data freshness

00:00:52.459 --> 00:00:52.469
you're forced to balance data freshness
 

00:00:52.469 --> 00:00:54.410
you're forced to balance data freshness
with the resulting battery drain the

00:00:54.410 --> 00:00:54.420
with the resulting battery drain the
 

00:00:54.420 --> 00:00:55.729
with the resulting battery drain the
more often you pull for updates the

00:00:55.729 --> 00:00:55.739
more often you pull for updates the
 

00:00:55.739 --> 00:00:57.470
more often you pull for updates the
lower latency between the data changing

00:00:57.470 --> 00:00:57.480
lower latency between the data changing
 

00:00:57.480 --> 00:00:59.060
lower latency between the data changing
on the server and your up displaying

00:00:59.060 --> 00:00:59.070
on the server and your up displaying
 

00:00:59.070 --> 00:01:00.979
on the server and your up displaying
those updates but turning on the radio

00:01:00.979 --> 00:01:00.989
those updates but turning on the radio
 

00:01:00.989 --> 00:01:02.810
those updates but turning on the radio
to check for those updates also drains

00:01:02.810 --> 00:01:02.820
to check for those updates also drains
 

00:01:02.820 --> 00:01:04.310
to check for those updates also drains
the battery that's the worst of both

00:01:04.310 --> 00:01:04.320
the battery that's the worst of both
 

00:01:04.320 --> 00:01:06.649
the battery that's the worst of both
worlds when what you actually want is no

00:01:06.649 --> 00:01:06.659
worlds when what you actually want is no
 

00:01:06.659 --> 00:01:08.300
worlds when what you actually want is no
latency and as little battery drain as

00:01:08.300 --> 00:01:08.310
latency and as little battery drain as
 

00:01:08.310 --> 00:01:10.340
latency and as little battery drain as
possible Google Cloud messaging helps

00:01:10.340 --> 00:01:10.350
possible Google Cloud messaging helps
 

00:01:10.350 --> 00:01:11.929
possible Google Cloud messaging helps
you do this by offering a way to send

00:01:11.929 --> 00:01:11.939
you do this by offering a way to send
 

00:01:11.939 --> 00:01:13.609
you do this by offering a way to send
messages from your server to any

00:01:13.609 --> 00:01:13.619
messages from your server to any
 

00:01:13.619 --> 00:01:15.920
messages from your server to any
installed instance of your app as a

00:01:15.920 --> 00:01:15.930
installed instance of your app as a
 

00:01:15.930 --> 00:01:18.830
installed instance of your app as a
result you can stop polling which will

00:01:18.830 --> 00:01:18.840
result you can stop polling which will
 

00:01:18.840 --> 00:01:20.570
result you can stop polling which will
improve battery life and also improve

00:01:20.570 --> 00:01:20.580
improve battery life and also improve
 

00:01:20.580 --> 00:01:22.910
improve battery life and also improve
the freshness of your app once

00:01:22.910 --> 00:01:22.920
the freshness of your app once
 

00:01:22.920 --> 00:01:25.460
the freshness of your app once
configured you can transmit messages to

00:01:25.460 --> 00:01:25.470
configured you can transmit messages to
 

00:01:25.470 --> 00:01:27.380
configured you can transmit messages to
a specific ad in app installation or

00:01:27.380 --> 00:01:27.390
a specific ad in app installation or
 

00:01:27.390 --> 00:01:28.609
a specific ad in app installation or
multicast messages to multiple

00:01:28.609 --> 00:01:28.619
multicast messages to multiple
 

00:01:28.619 --> 00:01:31.280
multicast messages to multiple
recipients these messages can be simple

00:01:31.280 --> 00:01:31.290
recipients these messages can be simple
 

00:01:31.290 --> 00:01:32.870
recipients these messages can be simple
tickles notifying your app that there is

00:01:32.870 --> 00:01:32.880
tickles notifying your app that there is
 

00:01:32.880 --> 00:01:34.520
tickles notifying your app that there is
new data ready to download or it can

00:01:34.520 --> 00:01:34.530
new data ready to download or it can
 

00:01:34.530 --> 00:01:36.050
new data ready to download or it can
include the new data within the message

00:01:36.050 --> 00:01:36.060
include the new data within the message
 

00:01:36.060 --> 00:01:38.630
include the new data within the message
payload in this dev bite I focus on how

00:01:38.630 --> 00:01:38.640
payload in this dev bite I focus on how
 

00:01:38.640 --> 00:01:40.280
payload in this dev bite I focus on how
to use Google Cloud messaging to perform

00:01:40.280 --> 00:01:40.290
to use Google Cloud messaging to perform
 

00:01:40.290 --> 00:01:42.200
to use Google Cloud messaging to perform
more efficient data transfers the

00:01:42.200 --> 00:01:42.210
more efficient data transfers the
 

00:01:42.210 --> 00:01:44.030
more efficient data transfers the
details for setting up your GCM client

00:01:44.030 --> 00:01:44.040
details for setting up your GCM client
 

00:01:44.040 --> 00:01:45.980
details for setting up your GCM client
and server are in detailed

00:01:45.980 --> 00:01:45.990
and server are in detailed
 

00:01:45.990 --> 00:01:47.660
and server are in detailed
comprehensively in the documentation

00:01:47.660 --> 00:01:47.670
comprehensively in the documentation
 

00:01:47.670 --> 00:01:50.210
comprehensively in the documentation
that said it helps to understand the GCM

00:01:50.210 --> 00:01:50.220
that said it helps to understand the GCM
 

00:01:50.220 --> 00:01:52.219
that said it helps to understand the GCM
data flow it starts with your app on

00:01:52.219 --> 00:01:52.229
data flow it starts with your app on
 

00:01:52.229 --> 00:01:53.870
data flow it starts with your app on
each device registering itself by

00:01:53.870 --> 00:01:53.880
each device registering itself by
 

00:01:53.880 --> 00:01:55.910
each device registering itself by
sending a registry so message to the GCM

00:01:55.910 --> 00:01:55.920
sending a registry so message to the GCM
 

00:01:55.920 --> 00:01:58.219
sending a registry so message to the GCM
infrastructure in return it will be sent

00:01:58.219 --> 00:01:58.229
infrastructure in return it will be sent
 

00:01:58.229 --> 00:01:59.959
infrastructure in return it will be sent
a registration ID which we uniquely

00:01:59.959 --> 00:01:59.969
a registration ID which we uniquely
 

00:01:59.969 --> 00:02:01.730
a registration ID which we uniquely
identifies that instance of your app

00:02:01.730 --> 00:02:01.740
identifies that instance of your app
 

00:02:01.740 --> 00:02:03.980
identifies that instance of your app
running on that particular device you're

00:02:03.980 --> 00:02:03.990
running on that particular device you're
 

00:02:03.990 --> 00:02:05.359
running on that particular device you're
actually then send this identifier to

00:02:05.359 --> 00:02:05.369
actually then send this identifier to
 

00:02:05.369 --> 00:02:07.160
actually then send this identifier to
your server typically along with a

00:02:07.160 --> 00:02:07.170
your server typically along with a
 

00:02:07.170 --> 00:02:08.900
your server typically along with a
separate identifier that you can use to

00:02:08.900 --> 00:02:08.910
separate identifier that you can use to
 

00:02:08.910 --> 00:02:11.180
separate identifier that you can use to
identify a particular user or internal

00:02:11.180 --> 00:02:11.190
identify a particular user or internal
 

00:02:11.190 --> 00:02:13.320
identify a particular user or internal
your server now has a way to send

00:02:13.320 --> 00:02:13.330
your server now has a way to send
 

00:02:13.330 --> 00:02:15.240
your server now has a way to send
messages to a specific app or a specific

00:02:15.240 --> 00:02:15.250
messages to a specific app or a specific
 

00:02:15.250 --> 00:02:16.800
messages to a specific app or a specific
user via the Google Cloud messaging

00:02:16.800 --> 00:02:16.810
user via the Google Cloud messaging
 

00:02:16.810 --> 00:02:19.230
user via the Google Cloud messaging
infrastructure anything from breaking

00:02:19.230 --> 00:02:19.240
infrastructure anything from breaking
 

00:02:19.240 --> 00:02:21.270
infrastructure anything from breaking
news updated sports scores new email

00:02:21.270 --> 00:02:21.280
news updated sports scores new email
 

00:02:21.280 --> 00:02:23.220
news updated sports scores new email
messages or an updated list of news

00:02:23.220 --> 00:02:23.230
messages or an updated list of news
 

00:02:23.230 --> 00:02:25.590
messages or an updated list of news
articles this is enough to eliminate the

00:02:25.590 --> 00:02:25.600
articles this is enough to eliminate the
 

00:02:25.600 --> 00:02:27.240
articles this is enough to eliminate the
need for polling and ensures you never

00:02:27.240 --> 00:02:27.250
need for polling and ensures you never
 

00:02:27.250 --> 00:02:28.680
need for polling and ensures you never
turn on the radio to communicate with

00:02:28.680 --> 00:02:28.690
turn on the radio to communicate with
 

00:02:28.690 --> 00:02:29.940
turn on the radio to communicate with
the server that has nothing new to

00:02:29.940 --> 00:02:29.950
the server that has nothing new to
 

00:02:29.950 --> 00:02:32.070
the server that has nothing new to
download so your information in our

00:02:32.070 --> 00:02:32.080
download so your information in our
 

00:02:32.080 --> 00:02:34.170
download so your information in our
information architecture now needs to

00:02:34.170 --> 00:02:34.180
information architecture now needs to
 

00:02:34.180 --> 00:02:36.270
information architecture now needs to
determine the urgency of reflecting each

00:02:36.270 --> 00:02:36.280
determine the urgency of reflecting each
 

00:02:36.280 --> 00:02:39.120
determine the urgency of reflecting each
server change in your app you can set up

00:02:39.120 --> 00:02:39.130
server change in your app you can set up
 

00:02:39.130 --> 00:02:41.250
server change in your app you can set up
your server using either HTTP or CCS

00:02:41.250 --> 00:02:41.260
your server using either HTTP or CCS
 

00:02:41.260 --> 00:02:43.950
your server using either HTTP or CCS
using XMPP and encapsulate polar

00:02:43.950 --> 00:02:43.960
using XMPP and encapsulate polar
 

00:02:43.960 --> 00:02:47.010
using XMPP and encapsulate polar
payloads as JSON or plain text here

00:02:47.010 --> 00:02:47.020
payloads as JSON or plain text here
 

00:02:47.020 --> 00:02:48.870
payloads as JSON or plain text here
we're using JSON to create a message

00:02:48.870 --> 00:02:48.880
we're using JSON to create a message
 

00:02:48.880 --> 00:02:50.520
we're using JSON to create a message
starting with the registration IDs to

00:02:50.520 --> 00:02:50.530
starting with the registration IDs to
 

00:02:50.530 --> 00:02:52.800
starting with the registration IDs to
which we want to transmit our message by

00:02:52.800 --> 00:02:52.810
which we want to transmit our message by
 

00:02:52.810 --> 00:02:54.930
which we want to transmit our message by
default your Apple receive GCM messages

00:02:54.930 --> 00:02:54.940
default your Apple receive GCM messages
 

00:02:54.940 --> 00:02:56.490
default your Apple receive GCM messages
even if it's not running and the phone

00:02:56.490 --> 00:02:56.500
even if it's not running and the phone
 

00:02:56.500 --> 00:02:58.410
even if it's not running and the phone
is on standby you can help minimize

00:02:58.410 --> 00:02:58.420
is on standby you can help minimize
 

00:02:58.420 --> 00:03:00.360
is on standby you can help minimize
battery drain by setting delay while

00:03:00.360 --> 00:03:00.370
battery drain by setting delay while
 

00:03:00.370 --> 00:03:01.980
battery drain by setting delay while
idle to true indicating that your

00:03:01.980 --> 00:03:01.990
idle to true indicating that your
 

00:03:01.990 --> 00:03:03.240
idle to true indicating that your
message doesn't need to be sent

00:03:03.240 --> 00:03:03.250
message doesn't need to be sent
 

00:03:03.250 --> 00:03:05.160
message doesn't need to be sent
immediately if the device is on standby

00:03:05.160 --> 00:03:05.170
immediately if the device is on standby
 

00:03:05.170 --> 00:03:07.170
immediately if the device is on standby
instead these messages will be cured

00:03:07.170 --> 00:03:07.180
instead these messages will be cured
 

00:03:07.180 --> 00:03:09.120
instead these messages will be cured
until the device becomes active in fact

00:03:09.120 --> 00:03:09.130
until the device becomes active in fact
 

00:03:09.130 --> 00:03:11.520
until the device becomes active in fact
if you also set a collapse key only one

00:03:11.520 --> 00:03:11.530
if you also set a collapse key only one
 

00:03:11.530 --> 00:03:12.960
if you also set a collapse key only one
message will be sent when the device

00:03:12.960 --> 00:03:12.970
message will be sent when the device
 

00:03:12.970 --> 00:03:15.240
message will be sent when the device
does become active the collapse key is

00:03:15.240 --> 00:03:15.250
does become active the collapse key is
 

00:03:15.250 --> 00:03:16.860
does become active the collapse key is
any arbitrary string that the GCM

00:03:16.860 --> 00:03:16.870
any arbitrary string that the GCM
 

00:03:16.870 --> 00:03:18.420
any arbitrary string that the GCM
service can use to collapse a queue of

00:03:18.420 --> 00:03:18.430
service can use to collapse a queue of
 

00:03:18.430 --> 00:03:20.790
service can use to collapse a queue of
messages address to the same device so

00:03:20.790 --> 00:03:20.800
messages address to the same device so
 

00:03:20.800 --> 00:03:22.260
messages address to the same device so
in the device comes online or becomes

00:03:22.260 --> 00:03:22.270
in the device comes online or becomes
 

00:03:22.270 --> 00:03:23.970
in the device comes online or becomes
active it receives only one message

00:03:23.970 --> 00:03:23.980
active it receives only one message
 

00:03:23.980 --> 00:03:25.949
active it receives only one message
there's no guarantee that the message

00:03:25.949 --> 00:03:25.959
there's no guarantee that the message
 

00:03:25.959 --> 00:03:27.360
there's no guarantee that the message
the queue collapses to with the most

00:03:27.360 --> 00:03:27.370
the queue collapses to with the most
 

00:03:27.370 --> 00:03:29.310
the queue collapses to with the most
recent one you sent so these messages

00:03:29.310 --> 00:03:29.320
recent one you sent so these messages
 

00:03:29.320 --> 00:03:31.410
recent one you sent so these messages
are known as center sink and a best

00:03:31.410 --> 00:03:31.420
are known as center sink and a best
 

00:03:31.420 --> 00:03:33.060
are known as center sink and a best
suited to update tickles that tell you

00:03:33.060 --> 00:03:33.070
suited to update tickles that tell you
 

00:03:33.070 --> 00:03:34.650
suited to update tickles that tell you
app simply that there is new data ready

00:03:34.650 --> 00:03:34.660
app simply that there is new data ready
 

00:03:34.660 --> 00:03:37.170
app simply that there is new data ready
to up download you can go a step further

00:03:37.170 --> 00:03:37.180
to up download you can go a step further
 

00:03:37.180 --> 00:03:39.210
to up download you can go a step further
and set a time loop or for cute messages

00:03:39.210 --> 00:03:39.220
and set a time loop or for cute messages
 

00:03:39.220 --> 00:03:41.460
and set a time loop or for cute messages
expire using the time-to-live parameter

00:03:41.460 --> 00:03:41.470
expire using the time-to-live parameter
 

00:03:41.470 --> 00:03:43.890
expire using the time-to-live parameter
this determines how many seconds of GCM

00:03:43.890 --> 00:03:43.900
this determines how many seconds of GCM
 

00:03:43.900 --> 00:03:45.150
this determines how many seconds of GCM
servers should keep a message before

00:03:45.150 --> 00:03:45.160
servers should keep a message before
 

00:03:45.160 --> 00:03:47.370
servers should keep a message before
cancelling by default this is set to

00:03:47.370 --> 00:03:47.380
cancelling by default this is set to
 

00:03:47.380 --> 00:03:48.990
cancelling by default this is set to
four weeks but you can dramatically

00:03:48.990 --> 00:03:49.000
four weeks but you can dramatically
 

00:03:49.000 --> 00:03:50.729
four weeks but you can dramatically
reduce this for messages you know will

00:03:50.729 --> 00:03:50.739
reduce this for messages you know will
 

00:03:50.739 --> 00:03:52.770
reduce this for messages you know will
be out of date or replaced over a

00:03:52.770 --> 00:03:52.780
be out of date or replaced over a
 

00:03:52.780 --> 00:03:54.270
be out of date or replaced over a
shorter time period which is a

00:03:54.270 --> 00:03:54.280
shorter time period which is a
 

00:03:54.280 --> 00:03:56.130
shorter time period which is a
particularly useful feature for messages

00:03:56.130 --> 00:03:56.140
particularly useful feature for messages
 

00:03:56.140 --> 00:03:58.229
particularly useful feature for messages
with payload data included in the form

00:03:58.229 --> 00:03:58.239
with payload data included in the form
 

00:03:58.239 --> 00:04:00.180
with payload data included in the form
of an optional JSON object whose fields

00:04:00.180 --> 00:04:00.190
of an optional JSON object whose fields
 

00:04:00.190 --> 00:04:02.610
of an optional JSON object whose fields
represent key value pairs of data each

00:04:02.610 --> 00:04:02.620
represent key value pairs of data each
 

00:04:02.620 --> 00:04:05.160
represent key value pairs of data each
message can store up to 4k of data of

00:04:05.160 --> 00:04:05.170
message can store up to 4k of data of
 

00:04:05.170 --> 00:04:07.320
message can store up to 4k of data of
data which will be delivered as strings

00:04:07.320 --> 00:04:07.330
data which will be delivered as strings
 

00:04:07.330 --> 00:04:09.509
data which will be delivered as strings
within the intent bundle of receive GCM

00:04:09.509 --> 00:04:09.519
within the intent bundle of receive GCM
 

00:04:09.519 --> 00:04:12.690
within the intent bundle of receive GCM
messages as you can see here these non

00:04:12.690 --> 00:04:12.700
messages as you can see here these non
 

00:04:12.700 --> 00:04:15.210
messages as you can see here these non
collapsible or message with payload

00:04:15.210 --> 00:04:15.220
collapsible or message with payload
 

00:04:15.220 --> 00:04:17.130
collapsible or message with payload
messages are more than a sink t'kul

00:04:17.130 --> 00:04:17.140
messages are more than a sink t'kul
 

00:04:17.140 --> 00:04:18.780
messages are more than a sink t'kul
they're used when you need to deliver

00:04:18.780 --> 00:04:18.790
they're used when you need to deliver
 

00:04:18.790 --> 00:04:20.760
they're used when you need to deliver
every message because every message has

00:04:20.760 --> 00:04:20.770
every message because every message has
 

00:04:20.770 --> 00:04:22.090
every message because every message has
different content

00:04:22.090 --> 00:04:22.100
different content
 

00:04:22.100 --> 00:04:24.340
different content
notifications are a great example of how

00:04:24.340 --> 00:04:24.350
notifications are a great example of how
 

00:04:24.350 --> 00:04:26.560
notifications are a great example of how
you may use these payload messages by

00:04:26.560 --> 00:04:26.570
you may use these payload messages by
 

00:04:26.570 --> 00:04:28.060
you may use these payload messages by
including the current weather details

00:04:28.060 --> 00:04:28.070
including the current weather details
 

00:04:28.070 --> 00:04:29.830
including the current weather details
commentary and score after a touchdown

00:04:29.830 --> 00:04:29.840
commentary and score after a touchdown
 

00:04:29.840 --> 00:04:31.750
commentary and score after a touchdown
pass or breaking news headlines and

00:04:31.750 --> 00:04:31.760
pass or breaking news headlines and
 

00:04:31.760 --> 00:04:34.030
pass or breaking news headlines and
summaries within the payload of the GCM

00:04:34.030 --> 00:04:34.040
summaries within the payload of the GCM
 

00:04:34.040 --> 00:04:35.890
summaries within the payload of the GCM
message itself you're able to update

00:04:35.890 --> 00:04:35.900
message itself you're able to update
 

00:04:35.900 --> 00:04:37.960
message itself you're able to update
your users immediately with nominal

00:04:37.960 --> 00:04:37.970
your users immediately with nominal
 

00:04:37.970 --> 00:04:40.720
your users immediately with nominal
increment battery impact it is possible

00:04:40.720 --> 00:04:40.730
increment battery impact it is possible
 

00:04:40.730 --> 00:04:42.400
increment battery impact it is possible
to use these collapse keys with payload

00:04:42.400 --> 00:04:42.410
to use these collapse keys with payload
 

00:04:42.410 --> 00:04:44.110
to use these collapse keys with payload
messages but because the delivery order

00:04:44.110 --> 00:04:44.120
messages but because the delivery order
 

00:04:44.120 --> 00:04:45.310
messages but because the delivery order
isn't guaranteed and the collapse

00:04:45.310 --> 00:04:45.320
isn't guaranteed and the collapse
 

00:04:45.320 --> 00:04:46.870
isn't guaranteed and the collapse
message isn't guaranteed to be the last

00:04:46.870 --> 00:04:46.880
message isn't guaranteed to be the last
 

00:04:46.880 --> 00:04:48.820
message isn't guaranteed to be the last
one received you need to be careful not

00:04:48.820 --> 00:04:48.830
one received you need to be careful not
 

00:04:48.830 --> 00:04:51.610
one received you need to be careful not
to display outdated information if non

00:04:51.610 --> 00:04:51.620
to display outdated information if non
 

00:04:51.620 --> 00:04:53.590
to display outdated information if non
collapsible messages with payloads are

00:04:53.590 --> 00:04:53.600
collapsible messages with payloads are
 

00:04:53.600 --> 00:04:55.780
collapsible messages with payloads are
going to provide a specific improvement

00:04:55.780 --> 00:04:55.790
going to provide a specific improvement
 

00:04:55.790 --> 00:04:57.580
going to provide a specific improvement
to the user experience send to sync

00:04:57.580 --> 00:04:57.590
to the user experience send to sync
 

00:04:57.590 --> 00:04:59.440
to the user experience send to sync
messages are a better option as they put

00:04:59.440 --> 00:04:59.450
messages are a better option as they put
 

00:04:59.450 --> 00:05:01.090
messages are a better option as they put
less of a burden on the device battery

00:05:01.090 --> 00:05:01.100
less of a burden on the device battery
 

00:05:01.100 --> 00:05:03.190
less of a burden on the device battery
for example if your server notifies your

00:05:03.190 --> 00:05:03.200
for example if your server notifies your
 

00:05:03.200 --> 00:05:05.020
for example if your server notifies your
app every time there is a new article or

00:05:05.020 --> 00:05:05.030
app every time there is a new article or
 

00:05:05.030 --> 00:05:06.940
app every time there is a new article or
message it only needs to receive one

00:05:06.940 --> 00:05:06.950
message it only needs to receive one
 

00:05:06.950 --> 00:05:08.320
message it only needs to receive one
message telling it that it's time to

00:05:08.320 --> 00:05:08.330
message telling it that it's time to
 

00:05:08.330 --> 00:05:10.390
message telling it that it's time to
sync up which you can do using a sync

00:05:10.390 --> 00:05:10.400
sync up which you can do using a sync
 

00:05:10.400 --> 00:05:12.760
sync up which you can do using a sync
adapter to initiate the sink preferably

00:05:12.760 --> 00:05:12.770
adapter to initiate the sink preferably
 

00:05:12.770 --> 00:05:14.440
adapter to initiate the sink preferably
bundling a number of batch transfers

00:05:14.440 --> 00:05:14.450
bundling a number of batch transfers
 

00:05:14.450 --> 00:05:16.150
bundling a number of batch transfers
together as described in my dev bite on

00:05:16.150 --> 00:05:16.160
together as described in my dev bite on
 

00:05:16.160 --> 00:05:17.500
together as described in my dev bite on
batching bundling and using the sync

00:05:17.500 --> 00:05:17.510
batching bundling and using the sync
 

00:05:17.510 --> 00:05:19.540
batching bundling and using the sync
adapter using Google Cloud messaging

00:05:19.540 --> 00:05:19.550
adapter using Google Cloud messaging
 

00:05:19.550 --> 00:05:20.890
adapter using Google Cloud messaging
allows you to totally eliminate

00:05:20.890 --> 00:05:20.900
allows you to totally eliminate
 

00:05:20.900 --> 00:05:22.390
allows you to totally eliminate
client-side polling from your

00:05:22.390 --> 00:05:22.400
client-side polling from your
 

00:05:22.400 --> 00:05:24.640
client-side polling from your
applications in promote implemented

00:05:24.640 --> 00:05:24.650
applications in promote implemented
 

00:05:24.650 --> 00:05:26.500
applications in promote implemented
correctly you can configure the messages

00:05:26.500 --> 00:05:26.510
correctly you can configure the messages
 

00:05:26.510 --> 00:05:28.120
correctly you can configure the messages
transmitted to have as little impact on

00:05:28.120 --> 00:05:28.130
transmitted to have as little impact on
 

00:05:28.130 --> 00:05:30.070
transmitted to have as little impact on
the battery as possible using techniques

00:05:30.070 --> 00:05:30.080
the battery as possible using techniques
 

00:05:30.080 --> 00:05:32.110
the battery as possible using techniques
like short time to live parameters

00:05:32.110 --> 00:05:32.120
like short time to live parameters
 

00:05:32.120 --> 00:05:33.910
like short time to live parameters
collapse keys and the delay while idle

00:05:33.910 --> 00:05:33.920
collapse keys and the delay while idle
 

00:05:33.920 --> 00:05:35.770
collapse keys and the delay while idle
parameter to limit the number of

00:05:35.770 --> 00:05:35.780
parameter to limit the number of
 

00:05:35.780 --> 00:05:36.790
parameter to limit the number of
messages that you're actually

00:05:36.790 --> 00:05:36.800
messages that you're actually
 

00:05:36.800 --> 00:05:39.310
messages that you're actually
transmitted to your app by keeping your

00:05:39.310 --> 00:05:39.320
transmitted to your app by keeping your
 

00:05:39.320 --> 00:05:40.870
transmitted to your app by keeping your
apps constantly up-to-date you can

00:05:40.870 --> 00:05:40.880
apps constantly up-to-date you can
 

00:05:40.880 --> 00:05:42.550
apps constantly up-to-date you can
minimize latency and help eliminate the

00:05:42.550 --> 00:05:42.560
minimize latency and help eliminate the
 

00:05:42.560 --> 00:05:44.680
minimize latency and help eliminate the
refresh button used with sync adapters

00:05:44.680 --> 00:05:44.690
refresh button used with sync adapters
 

00:05:44.690 --> 00:05:46.090
refresh button used with sync adapters
and prefetching you can dramatically

00:05:46.090 --> 00:05:46.100
and prefetching you can dramatically
 

00:05:46.100 --> 00:05:48.130
and prefetching you can dramatically
improve the battery efficiency of your

00:05:48.130 --> 00:05:48.140
improve the battery efficiency of your
 

00:05:48.140 --> 00:05:50.380
improve the battery efficiency of your
apps

