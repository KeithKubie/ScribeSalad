WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.880
[MUSIC PLAYING]

00:00:04.620 --> 00:00:06.120
WAYNE PIEKARSKI:
Are you a developer

00:00:06.120 --> 00:00:09.120
who's interested in supporting
different languages, locales,

00:00:09.120 --> 00:00:11.280
and regions with the
Google Assistant?

00:00:11.280 --> 00:00:12.944
I'm Wayne Piekarski,
and in this video,

00:00:12.944 --> 00:00:15.360
I'm going to show you how easy
it is to take your existing

00:00:15.360 --> 00:00:17.610
apps for the Google
Assistant and extend them

00:00:17.610 --> 00:00:19.690
to work all around the world.

00:00:19.690 --> 00:00:21.870
The Google Assistant is
available on all kinds

00:00:21.870 --> 00:00:24.420
of devices, such as
voice-activated speakers,

00:00:24.420 --> 00:00:26.180
phones, and more.

00:00:26.180 --> 00:00:27.957
And Actions on Google
is our platform

00:00:27.957 --> 00:00:30.540
that allows developers to create
their own apps for the Google

00:00:30.540 --> 00:00:31.492
Assistant.

00:00:31.492 --> 00:00:33.450
And we're rolling out
new languages and locales

00:00:33.450 --> 00:00:35.710
for Actions on
Google all the time.

00:00:35.710 --> 00:00:38.430
So whether you want
to say hello, bonjour,

00:00:38.430 --> 00:00:41.860
guten Tag, and many others,
we've got you covered.

00:00:41.860 --> 00:00:45.040
So let's get started with
explaining a few concepts.

00:00:45.040 --> 00:00:47.940
The first thing you need to
know is the concept of a locale.

00:00:47.940 --> 00:00:49.440
And this is a string
that represents

00:00:49.440 --> 00:00:51.240
the regional
language information

00:00:51.240 --> 00:00:53.730
and can be configured by
the user in their Assistant

00:00:53.730 --> 00:00:55.030
settings.

00:00:55.030 --> 00:00:56.970
As you can see,
there are two parts--

00:00:56.970 --> 00:00:59.190
the language, like
EN for English,

00:00:59.190 --> 00:01:01.710
and then the variation
of it after the hyphen.

00:01:01.710 --> 00:01:04.379
In this case, you can see
there is United States, Great

00:01:04.379 --> 00:01:08.320
Britain, Canada, and Australia
as variations of English.

00:01:08.320 --> 00:01:10.555
While people in these
regions all speak English,

00:01:10.555 --> 00:01:12.180
they have different
words and spellings

00:01:12.180 --> 00:01:14.940
for some concepts-- and
even different accents.

00:01:14.940 --> 00:01:18.070
For example, the word color
is spelled differently.

00:01:18.070 --> 00:01:19.890
And remember, when
someone's using a phone,

00:01:19.890 --> 00:01:22.200
the user will read the
text off the screen,

00:01:22.200 --> 00:01:24.144
so spelling is very important.

00:01:24.144 --> 00:01:25.560
Other things that
can be different

00:01:25.560 --> 00:01:28.200
are the ordering of dates
and local currencies used

00:01:28.200 --> 00:01:29.670
for payments.

00:01:29.670 --> 00:01:30.870
Words can be different, too.

00:01:30.870 --> 00:01:33.450
So to say hello, you could
use different phrases like

00:01:33.450 --> 00:01:36.570
g'day, or cheerio for goodbye.

00:01:36.570 --> 00:01:39.840
The next thing to be aware of
is user location targeting.

00:01:39.840 --> 00:01:41.520
This lets you control
the availability

00:01:41.520 --> 00:01:44.040
of your app in a specific
part of the world.

00:01:44.040 --> 00:01:46.830
And this is determined by
the user's physical location

00:01:46.830 --> 00:01:48.630
and not by a locale.

00:01:48.630 --> 00:01:50.280
In general, you
should make your app

00:01:50.280 --> 00:01:53.130
available to as many locations
as possible, unless it

00:01:53.130 --> 00:01:54.690
requires the user
to be physically

00:01:54.690 --> 00:01:56.320
present in a specific area--

00:01:56.320 --> 00:01:59.340
for example, to
purchase physical items.

00:01:59.340 --> 00:02:02.910
So how do we go about using
all these features in your app?

00:02:02.910 --> 00:02:05.190
While you could possibly
implement each locale

00:02:05.190 --> 00:02:07.050
as a separate app,
most developers

00:02:07.050 --> 00:02:10.139
would want to support all
of them within a single app

00:02:10.139 --> 00:02:11.790
to maintain only one code base--

00:02:11.790 --> 00:02:15.700
keeping common user ratings and
user account linking settings.

00:02:15.700 --> 00:02:18.080
We'll show you how to
do this with Dialogflow,

00:02:18.080 --> 00:02:20.040
formerly known as Api.ai--

00:02:20.040 --> 00:02:23.160
a tool that makes it really easy
to develop conversational apps

00:02:23.160 --> 00:02:24.850
for the Google Assistant.

00:02:24.850 --> 00:02:27.900
Dialogflow now implements
the ability to specify user

00:02:27.900 --> 00:02:33.130
says phrases and responses from
multiple languages and locales.

00:02:33.130 --> 00:02:36.270
You click on the plus icon under
Dialogflow Agent Settings gear

00:02:36.270 --> 00:02:39.360
icon, and a Languages
tab appears.

00:02:39.360 --> 00:02:42.090
Next, you pick from
the list of languages.

00:02:42.090 --> 00:02:45.280
Note that Dialogflow is
separate from Actions on Google,

00:02:45.280 --> 00:02:47.400
and so it might support
extra languages that

00:02:47.400 --> 00:02:50.910
are not available with the apps
for the Google Assistant yet.

00:02:50.910 --> 00:02:52.600
Once you have
selected a language,

00:02:52.600 --> 00:02:54.810
you can also add
specific locales.

00:02:54.810 --> 00:02:56.670
Here's a list of
English locales.

00:02:56.670 --> 00:02:59.400
If you don't specify a
locale, then by default,

00:02:59.400 --> 00:03:03.084
Dialogflow will apply all of
the locales within a language.

00:03:03.084 --> 00:03:04.500
In general, you
should keep things

00:03:04.500 --> 00:03:07.680
as generic as possible to
avoid duplication, and only

00:03:07.680 --> 00:03:09.810
add specific locales
if you need to make

00:03:09.810 --> 00:03:12.040
variations in your dialog.

00:03:12.040 --> 00:03:14.610
Now, you can create your
intents like you would normally

00:03:14.610 --> 00:03:17.160
do for each language
and locale, but now you

00:03:17.160 --> 00:03:21.210
can toggle between the language
chips to specify each one.

00:03:21.210 --> 00:03:22.770
If your conversation
is completely

00:03:22.770 --> 00:03:25.390
contained within Dialogflow,
then you're done.

00:03:25.390 --> 00:03:28.200
But if you're using a WebHook
to generate responses,

00:03:28.200 --> 00:03:30.570
you can add locale
support here, too.

00:03:30.570 --> 00:03:34.110
The same WebHook URL is used
for all languages and locales,

00:03:34.110 --> 00:03:37.170
but you vary the output
in your WebHook code.

00:03:37.170 --> 00:03:39.390
If you're using our
JavaScript client library,

00:03:39.390 --> 00:03:40.350
we have a method--

00:03:40.350 --> 00:03:44.290
getUserLocale-- which can be
used to return the locale.

00:03:44.290 --> 00:03:47.190
And you can then use this to
return appropriate strings back

00:03:47.190 --> 00:03:48.490
to the user.

00:03:48.490 --> 00:03:51.900
For example, you can easily
make different calls to app.ask

00:03:51.900 --> 00:03:53.190
depending on locale--

00:03:53.190 --> 00:03:55.630
like this-- with a
set of if statements.

00:03:55.630 --> 00:03:59.070
And alternatively, there are
JavaScript libraries available

00:03:59.070 --> 00:04:01.680
where you define all your
strings in resource files

00:04:01.680 --> 00:04:04.570
and then reference them
using labels in your code.

00:04:04.570 --> 00:04:07.530
The nice part about this is you
can get translators to convert

00:04:07.530 --> 00:04:09.840
these files to many
languages without having

00:04:09.840 --> 00:04:11.320
to touch your source code.

00:04:11.320 --> 00:04:13.620
This is pretty standard
practice and similar to what

00:04:13.620 --> 00:04:17.106
Android developers do with
resource files right now.

00:04:17.106 --> 00:04:18.480
Once you've changed
your app, you

00:04:18.480 --> 00:04:21.329
need to declare the new
locales to the Google Assistant

00:04:21.329 --> 00:04:23.010
in the Actions console.

00:04:23.010 --> 00:04:25.710
You can specify different
names and information

00:04:25.710 --> 00:04:28.200
about your app for each locale.

00:04:28.200 --> 00:04:31.470
By default, the Assistant will
provide a text-to-speech voice

00:04:31.470 --> 00:04:34.410
that has an accent based
on the user's locale.

00:04:34.410 --> 00:04:36.390
You can also override
that behavior

00:04:36.390 --> 00:04:38.520
if you really want to
have a specific accent--

00:04:38.520 --> 00:04:40.080
such as of your own persona--

00:04:40.080 --> 00:04:42.420
no matter what the
user has selected.

00:04:42.420 --> 00:04:44.580
You can also use
the Actions console

00:04:44.580 --> 00:04:46.860
to specify location targeting.

00:04:46.860 --> 00:04:48.300
As I mentioned
earlier, you might

00:04:48.300 --> 00:04:50.280
want to geographically
restrict your app

00:04:50.280 --> 00:04:52.920
to only work in certain
regions of the world.

00:04:52.920 --> 00:04:55.200
This is based on the
physical location

00:04:55.200 --> 00:04:57.430
and is independent
of the language used.

00:04:57.430 --> 00:04:59.790
So you can restrict
your action to work

00:04:59.790 --> 00:05:03.560
only in Europe, but in
English, French, and German.

00:05:03.560 --> 00:05:06.300
Every time Actions on Google
launches a new language,

00:05:06.300 --> 00:05:09.040
you can add a translation
in your implementation,

00:05:09.040 --> 00:05:11.010
tweak the Actions
Console settings,

00:05:11.010 --> 00:05:13.380
and then you're ready
for the review process.

00:05:13.380 --> 00:05:15.360
To test your new
multi-lingual app,

00:05:15.360 --> 00:05:19.380
you can use a simulator to test
all the possible combinations.

00:05:19.380 --> 00:05:23.370
You can specify the surface
to select what kind of device,

00:05:23.370 --> 00:05:25.620
you can specify a
physical location

00:05:25.620 --> 00:05:27.220
to indicate where
you're located,

00:05:27.220 --> 00:05:30.300
and you can also pick
the language and locale.

00:05:30.300 --> 00:05:32.940
Now you can try everything out
to make sure your app works

00:05:32.940 --> 00:05:34.296
the way that you want.

00:05:34.296 --> 00:05:35.670
And once you're
done testing, you

00:05:35.670 --> 00:05:39.390
can now use the Actions console
to submit your app for review.

00:05:39.390 --> 00:05:41.791
It's really easy to do,
and you'll get feedback

00:05:41.791 --> 00:05:44.040
if there are any problems
that your submission doesn't

00:05:44.040 --> 00:05:45.510
meet the guidelines.

00:05:45.510 --> 00:05:48.000
Once approved, users
all around the world

00:05:48.000 --> 00:05:50.015
will have access to your app.

00:05:50.015 --> 00:05:52.140
We're constantly adding
new languages to the Google

00:05:52.140 --> 00:05:55.110
Assistant, so make sure
your app is architected

00:05:55.110 --> 00:05:58.020
to be able to add new languages
easily using the steps I

00:05:58.020 --> 00:05:59.880
just outlined.

00:05:59.880 --> 00:06:01.530
Many of the Actions
on Google Samples

00:06:01.530 --> 00:06:03.690
support internationalization.

00:06:03.690 --> 00:06:06.750
Through the Samples, you can
see a working implementation

00:06:06.750 --> 00:06:09.300
of our best practices
for internationalization

00:06:09.300 --> 00:06:12.180
and understand how to best
use third-party JavaScript

00:06:12.180 --> 00:06:14.350
libraries to support this.

00:06:14.350 --> 00:06:16.150
To get more
information, check out

00:06:16.150 --> 00:06:18.370
the internationalization
documentation

00:06:18.370 --> 00:06:20.200
on our developer site.

00:06:20.200 --> 00:06:22.750
And finally, we have a great
Actions on Google developer

00:06:22.750 --> 00:06:25.660
community on Google+
and Stack Overflow,

00:06:25.660 --> 00:06:28.600
so you can discuss ideas and
ask questions about localizing

00:06:28.600 --> 00:06:30.770
your app any time.

00:06:30.770 --> 00:06:32.920
We look forward to
seeing what you build.

00:06:32.920 --> 00:06:36.070
And until next time, goodbye,
au revoir, auf wiedersehen.

00:06:36.070 --> 00:06:39.120
[MUSIC PLAYING]

