WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
Now that we understand how HTML works,

00:00:04.000 --> 00:00:09.000
we want to separate out these tags from the words that will be displaced on the screen.

00:00:09.000 --> 00:00:15.000
Breaking up words like this is actually a surprisingly common task in real life.

00:00:15.000 --> 00:00:22.000
For example, ancient Latin was often written or inscribed without spaces.

00:00:22.000 --> 00:00:26.000
This particular set of letters "SENTATUSPOPULUSQUEROMANUS"

00:00:26.000 --> 00:00:30.000
is inscribed on the arch of Titus, which I've doodled over here as a column,

00:00:30.000 --> 00:00:33.000
but what can you do? Arches are apparently beyond my power.

00:00:33.000 --> 00:00:37.000
I know. It has just become an arch. Those labels never lie.

00:00:37.000 --> 00:00:41.000
Roman inscriptions like this were written without spaces,

00:00:41.000 --> 00:00:46.000
and it requires a bit of domain knowledge to know how to break this up.

00:00:46.000 --> 00:00:52.000
"Senate and the People of Rome." That inscription was made quite some time ago.

00:00:52.000 --> 00:00:57.000
Similarly, in many written Asian languages, they don't explicitly include spaces

00:00:57.000 --> 00:01:00.000
or punctuations between the various characters or glyphs.

00:01:00.000 --> 00:01:04.000
In this particular Japanese example, and both my handwriting and my stroke order

00:01:04.000 --> 00:01:08.000
are very, very poor--have pity--some amount of domain knowledge is required to break up

00:01:08.000 --> 00:01:14.000
"ano" from "yama"--"that mountain."

00:01:14.000 --> 00:01:18.000
Finally,even if you're not familiar with Asian languages or ancient Latin,

00:01:18.000 --> 00:01:21.000
you might have seen the same sort of thing in a much more modern guise,

00:01:21.000 --> 00:01:23.000
in text messaging.

00:01:23.000 --> 00:01:28.000
Some amount of domain knowledge is required to break this up into "I love you"

00:01:28.000 --> 00:01:31.000
even though no particular spaces are given.

00:01:31.000 --> 00:01:36.000
We will want to do the same thing for HTML to break it up into words

00:01:36.000 --> 00:01:40.000
like "Wollstonecraft" and "wrote" that will appear on the screen

00:01:40.000 --> 00:01:46.000
or this special left angle bracket slash maneuver that tells us that we're starting end tag,

00:01:46.000 --> 00:01:48.000
this special word in the middle that tells us which tag it was,

00:01:48.000 --> 00:01:51.000
and then this closing right angle bracket.

00:01:51.000 --> 00:01:56.000
Once again, for this HTML fragment we want to break it up into this first word,

00:01:56.000 --> 00:02:02.000
the start of the closing tag, another word, the end of the closing tag,

00:02:02.000 --> 00:02:04.000
and then another word.

00:02:04.000 --> 00:02:07.000
We're going to need to do this to write our web browser.

00:02:07.000 --> 00:02:11.000
In order to interpret HTML and JavaScript, we're going to have to break sentences down

00:02:11.000 --> 00:02:15.000
into their component words to figure out what's going on.

00:02:15.000 --> 00:02:21.000
This process is called--dun, dun, dun, dun-- lexical analysis.

00:02:21.000 --> 00:02:26.000
Lexical here has the same roots and "lexicon" like a dictionary.

00:02:26.000 --> 00:02:29.000
This means "to break something down into words."

00:02:29.000 --> 00:02:36.000
You'll be pleased to know that we're going to use regular expressions to solve this problem.

00:02:36.000 --> 00:02:39.000
Here I've written another one of those decompositions.

00:02:39.000 --> 00:02:45.000
We might have broken an HTML fragment down into these word-like objects,

00:02:45.000 --> 00:02:51.000
but this time you're going to help me out by doing the problem in reverse.

00:02:51.000 --> 00:02:58.000
So in this multiple multiple choice quiz, I'd like you to mark each one of these HTML fragments

00:02:58.000 --> 09:59:59.000
that would decompose into this sequence of five elements.

