WEBVTT
Kind: captions
Language: en

00:00:00.710 --> 00:00:02.080
I love writing code.

00:00:02.080 --> 00:00:03.800
But if you're
anything like me, then

00:00:03.800 --> 00:00:05.850
creating even the most
sophisticated logic

00:00:05.850 --> 00:00:08.870
for your apps seems easier
than crafting a great user

00:00:08.870 --> 00:00:10.150
interface.

00:00:10.150 --> 00:00:12.560
Designs evolve over
time, and testing

00:00:12.560 --> 00:00:15.220
every single change in
your layouts on devices

00:00:15.220 --> 00:00:16.910
can be tedious.

00:00:16.910 --> 00:00:20.290
Enter the Layout Editor, a
tool built into Android Studio

00:00:20.290 --> 00:00:23.560
that lets you edit and preview
your layouts in real time,

00:00:23.560 --> 00:00:25.650
without the need to
recompile and deploy

00:00:25.650 --> 00:00:29.330
the APK on to an actual
device or emulator.

00:00:29.330 --> 00:00:31.720
The Layout Editor
automatically kicks in whenever

00:00:31.720 --> 00:00:34.300
you open an XML layout file.

00:00:34.300 --> 00:00:37.380
The Design view lets you easily
add and manipulate components

00:00:37.380 --> 00:00:40.600
by dragging them from the
palette onto the stage.

00:00:40.600 --> 00:00:43.890
Visual cues help you position
views relative to each other,

00:00:43.890 --> 00:00:46.230
taking into account
the parent node's class

00:00:46.230 --> 00:00:48.640
and required layout parameters.

00:00:48.640 --> 00:00:51.564
You can edit other view
properties in the Inspector

00:00:51.564 --> 00:00:54.230
or change the views place in the
hierarchy in the Component Tree

00:00:54.230 --> 00:00:55.440
pane.

00:00:55.440 --> 00:00:57.970
There's a handy trick you can
use when you've set up a view

00:00:57.970 --> 00:01:00.470
but then decide that you
want to change its class.

00:01:00.470 --> 00:01:03.300
Just right-click a view and
select the desired component

00:01:03.300 --> 00:01:05.160
from the Morphing menu.

00:01:05.160 --> 00:01:08.190
Be aware that there are certain
restrictions in place to only

00:01:08.190 --> 00:01:10.240
allow changes that make sense.

00:01:10.240 --> 00:01:13.150
So you won't be able to morph a
linear layout into a text view,

00:01:13.150 --> 00:01:14.440
for example.

00:01:14.440 --> 00:01:16.720
Whenever you see that parts
of your view hierarchy

00:01:16.720 --> 00:01:19.040
can be reused in
other layouts, there's

00:01:19.040 --> 00:01:21.850
also a refactoring
called Extract Layout.

00:01:21.850 --> 00:01:23.870
When you enable it, the
subtree you selected

00:01:23.870 --> 00:01:25.950
will be moved into
a separate resource

00:01:25.950 --> 00:01:28.430
and included in
your current layout.

00:01:28.430 --> 00:01:30.320
When you open the
new file for editing,

00:01:30.320 --> 00:01:31.950
you can see it's
still shown embedded

00:01:31.950 --> 00:01:34.840
in the original
hierarchy for previewing.

00:01:34.840 --> 00:01:37.390
That's because Android
Studio added a special hint

00:01:37.390 --> 00:01:40.600
to your XML when it
performed the refactoring.

00:01:40.600 --> 00:01:43.380
To see it, let's switch
to editing raw XML

00:01:43.380 --> 00:01:45.450
by pressing on the Text tab.

00:01:45.450 --> 00:01:47.780
Notice how instead
of the visual editor,

00:01:47.780 --> 00:01:49.270
there is now a
live preview window

00:01:49.270 --> 00:01:52.380
that updates in real time
as you work on the code.

00:01:52.380 --> 00:01:55.340
If you always prefer to see code
instead of the default design

00:01:55.340 --> 00:02:00.090
view, just enable the Prefer
XML Editor option here.

00:02:00.090 --> 00:02:02.740
The hint for the renderer
that I mentioned before

00:02:02.740 --> 00:02:04.850
actually consists of two parts.

00:02:04.850 --> 00:02:08.560
First, we have the new tools
namespace on the root XML node.

00:02:08.560 --> 00:02:10.940
The other is a set of
special annotations

00:02:10.940 --> 00:02:13.000
that don't affect
the runtime but are

00:02:13.000 --> 00:02:15.320
processed by Android Studio.

00:02:15.320 --> 00:02:17.270
Here, you can see
the Show In property

00:02:17.270 --> 00:02:18.770
that renders the
file you're working

00:02:18.770 --> 00:02:21.860
on in a context of another
layout in place of the Include

00:02:21.860 --> 00:02:22.980
tag.

00:02:22.980 --> 00:02:25.850
It's certainly useful, but
there's another type of hint

00:02:25.850 --> 00:02:27.980
that really boosted
my productivity

00:02:27.980 --> 00:02:30.820
that I wish someone had
pointed out to me sooner.

00:02:30.820 --> 00:02:33.940
You can actually override
most of the view properties

00:02:33.940 --> 00:02:36.910
just by prefixing them
with the tools namespace.

00:02:36.910 --> 00:02:40.840
Seems simple, but look at
how it could work for you.

00:02:40.840 --> 00:02:43.790
Ever had a layout with blank
text views because it needs

00:02:43.790 --> 00:02:47.175
an adapter to supply data, like
in a list view, for example?

00:02:47.175 --> 00:02:49.820
Add dummy text using
the tools namespace,

00:02:49.820 --> 00:02:52.740
and make your layout
immediately readable.

00:02:52.740 --> 00:02:55.690
What if parts of your layout
are set to Gone or Invisible

00:02:55.690 --> 00:02:58.610
and only shown depending
on runtime conditions?

00:02:58.610 --> 00:03:04.050
Just override it with tools
visibility for design time.

00:03:04.050 --> 00:03:07.100
As you can see, the Layout
Editor is a fantastic tool,

00:03:07.100 --> 00:03:09.600
and it's available
in Android Studio.

00:03:09.600 --> 00:03:12.170
If you want to learn more or
if you have any other layout

00:03:12.170 --> 00:03:15.450
editing tips, share them on
Google+ in the Android Studio

00:03:15.450 --> 00:03:16.600
community.

00:03:16.600 --> 00:03:19.390
Be sure to check out the other
videos in the Android Studio

00:03:19.390 --> 00:03:21.430
DevBytes series.

