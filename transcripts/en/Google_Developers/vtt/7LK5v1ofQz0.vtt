WEBVTT
Kind: captions
Language: en

00:00:00.087 --> 00:00:00.920
JAVIER RAMIEREZ: OK.

00:00:00.920 --> 00:00:02.770
So yeah.

00:00:02.770 --> 00:00:03.540
That's me.

00:00:03.540 --> 00:00:05.120
That's my Twitter
account, in case

00:00:05.120 --> 00:00:06.930
you want to ask
anything, or complain

00:00:06.930 --> 00:00:09.920
about the low quality of
what I'm saying, or whatever.

00:00:09.920 --> 00:00:10.770
Make fun of me.

00:00:10.770 --> 00:00:13.250
It's quite easy, so
don't worry about that.

00:00:13.250 --> 00:00:16.610
I'm going to tell how we
are using two Google tools--

00:00:16.610 --> 00:00:20.945
BigQuery and Apps Scripts for
doing analytics at teowaki.

00:00:23.614 --> 00:00:25.280
I'm not actually the
CEO of the company,

00:00:25.280 --> 00:00:26.321
just one of the founders.

00:00:26.321 --> 00:00:27.270
We don't have a CEO.

00:00:27.270 --> 00:00:27.853
It's like, OK.

00:00:27.853 --> 00:00:30.260
It's like, whatever.

00:00:30.260 --> 00:00:31.600
So Yeah.

00:00:31.600 --> 00:00:35.620
We have this two
people in the company.

00:00:35.620 --> 00:00:38.560
We just launched this service
in public in February.

00:00:38.560 --> 00:00:40.750
We have 500 users at the moment.

00:00:40.750 --> 00:00:42.060
Trying to get more.

00:00:42.060 --> 00:00:42.730
It's a startup.

00:00:42.730 --> 00:00:43.230
You know.

00:00:43.230 --> 00:00:45.660
It's not like yeah, it's
not this sort of startup.

00:00:45.660 --> 00:00:47.570
Different kind of startup.

00:00:47.570 --> 00:00:48.350
That's it.

00:00:48.350 --> 00:00:49.310
So.

00:00:49.310 --> 00:00:49.810
Yeah.

00:00:49.810 --> 00:00:52.870
What we are doing is a service
for software developers

00:00:52.870 --> 00:00:54.710
to communicate with each other.

00:00:54.710 --> 00:00:57.210
So if you are a developer, or
you have a team of developers,

00:00:57.210 --> 00:00:59.260
and you need to
exchange information

00:00:59.260 --> 00:01:02.550
like interesting links,
documentation, gossip,

00:01:02.550 --> 00:01:04.540
life hacks.

00:01:04.540 --> 00:01:06.700
Sort of messages with
other developers.

00:01:06.700 --> 00:01:09.360
You can just use teowaki.

00:01:09.360 --> 00:01:11.640
Basically we have
groups of teams

00:01:11.640 --> 00:01:14.220
in teowaki with
different people.

00:01:14.220 --> 00:01:19.070
And also each person can be
in a lot of different teams

00:01:19.070 --> 00:01:20.480
at the same time.

00:01:20.480 --> 00:01:22.450
So you know, by
using this, you can

00:01:22.450 --> 00:01:25.380
be up-to-date with
what's happening

00:01:25.380 --> 00:01:26.470
across all your teams.

00:01:26.470 --> 00:01:29.950
If you are like
working at your company

00:01:29.950 --> 00:01:32.620
and also part of an
open source team.

00:01:32.620 --> 00:01:34.960
If you are a developer
which is going to meetups,

00:01:34.960 --> 00:01:37.410
or you are doing freelancing
for different clients,

00:01:37.410 --> 00:01:39.480
or you still want to
be in touch with people

00:01:39.480 --> 00:01:41.060
in your former
company, whatever.

00:01:41.060 --> 00:01:44.560
You can be in touch with all
of them at the same time.

00:01:44.560 --> 00:01:48.550
You can say get send
messages to all of them

00:01:48.550 --> 00:01:50.750
or just to people in an area.

00:01:50.750 --> 00:01:55.270
Share your mistakes,
server names, whatever.

00:01:55.270 --> 00:01:57.120
Talk about code,
talk about the tools

00:01:57.120 --> 00:02:01.100
you're using, or talk about how
you're organizing your service.

00:02:01.100 --> 00:02:02.190
So that's the company.

00:02:02.190 --> 00:02:04.400
Just a quick overview,
so you can understand

00:02:04.400 --> 00:02:07.540
what we are doing and
what we want to measure.

00:02:07.540 --> 00:02:09.370
This is the website so far.

00:02:09.370 --> 00:02:11.860
So this is a website of
[INAUDIBLE] analytics.

00:02:11.860 --> 00:02:14.030
We have Google analytics,
which are amazing.

00:02:14.030 --> 00:02:16.280
We like to think we're using
analytics professionally,

00:02:16.280 --> 00:02:17.990
because before
starting this company,

00:02:17.990 --> 00:02:19.837
we've been doing some
work for 15 years.

00:02:19.837 --> 00:02:21.670
And yeah, analytics are
amazing, because you

00:02:21.670 --> 00:02:25.020
can have not only cool numbers,
but also visualizations.

00:02:25.020 --> 00:02:27.730
Like for example, what are
analytics, out of the box.

00:02:27.730 --> 00:02:31.600
Just put a script.

00:02:31.600 --> 00:02:34.440
And it's going to give you like
visualizations like how people

00:02:34.440 --> 00:02:36.000
are moving across your page.

00:02:36.000 --> 00:02:38.840
So first they are
going to the homepage.

00:02:38.840 --> 00:02:42.910
From here they are going to
the help page, login, whatever.

00:02:42.910 --> 00:02:44.870
You can also bring
down and no, I

00:02:44.870 --> 00:02:47.670
want to see these
only for the UK.

00:02:47.670 --> 00:02:50.180
Because you were seeing before
all the other countries.

00:02:50.180 --> 00:02:51.830
So analytics are
amazing, as we saw.

00:02:51.830 --> 00:02:53.272
You can do like cool things.

00:02:53.272 --> 00:02:54.480
Also we have a small company.

00:02:54.480 --> 00:02:55.870
I told you already.

00:02:55.870 --> 00:02:58.490
And I would not have
the time for being

00:02:58.490 --> 00:03:02.350
like all day long, like,
what's in my numbers?

00:03:02.350 --> 00:03:03.970
And saying, oh, I don't know.

00:03:03.970 --> 00:03:06.780
I'm going to really think
about that real interesting way

00:03:06.780 --> 00:03:09.010
of extracting
intelligence from my data.

00:03:09.010 --> 00:03:10.980
So the good thing
about Google Analytics

00:03:10.980 --> 00:03:13.820
is it's going to give you
automatically some alerts.

00:03:13.820 --> 00:03:16.490
Like for example, hey,
we have more users.

00:03:16.490 --> 00:03:19.090
We are having, I don't know,
more space views, whatever.

00:03:19.090 --> 00:03:20.080
This was unexpected.

00:03:20.080 --> 00:03:21.280
So that's for free.

00:03:21.280 --> 00:03:23.617
You are getting a lot of
insight without doing anything,

00:03:23.617 --> 00:03:24.950
because you don't have the time.

00:03:24.950 --> 00:03:27.900
Or I don't have the money
for hiring another scientist.

00:03:27.900 --> 00:03:30.360
If any scientists want to
work for free, that's cool.

00:03:30.360 --> 00:03:33.790
But I don't know of any.

00:03:33.790 --> 00:03:35.160
Analytics are amazing.

00:03:35.160 --> 00:03:36.120
But there is a problem.

00:03:36.120 --> 00:03:38.560
You can't always
use web analytics.

00:03:38.560 --> 00:03:42.500
Because web analytics are
built for web applications.

00:03:42.500 --> 00:03:43.750
So you have a web application.

00:03:43.750 --> 00:03:46.060
You put the Javascript
code, everything's working.

00:03:46.060 --> 00:03:47.500
If you have more
web applications,

00:03:47.500 --> 00:03:48.780
you can also make it work.

00:03:48.780 --> 00:03:51.380
But in teowaki,
we have a service

00:03:51.380 --> 00:03:53.120
which is for
software developers.

00:03:53.120 --> 00:03:56.450
We integrate with
satellite services.

00:03:56.450 --> 00:03:57.400
Like, I don't know.

00:03:57.400 --> 00:04:01.280
If a developer is putting
code into the system,

00:04:01.280 --> 00:04:03.440
deploying a new virtual
into production,

00:04:03.440 --> 00:04:05.080
found a new
[INAUDIBLE], whatever.

00:04:05.080 --> 00:04:06.960
And you are using
different tools for that.

00:04:06.960 --> 00:04:10.230
You are aggregating that
data also into teowaki.

00:04:10.230 --> 00:04:12.240
And that data is not
coming from the web.

00:04:12.240 --> 00:04:14.710
It's coming from
something called API.

00:04:14.710 --> 00:04:15.930
And API dirty.

00:04:15.930 --> 00:04:17.310
It looks like this.

00:04:17.310 --> 00:04:19.459
This is our web page.

00:04:19.459 --> 00:04:23.220
So we're getting information
from different places

00:04:23.220 --> 00:04:25.320
which are not on the website.

00:04:25.320 --> 00:04:27.390
Maybe you're thinking,
but I don't have API.

00:04:27.390 --> 00:04:31.190
But still, you have a lot of
probably offline information.

00:04:31.190 --> 00:04:35.790
Like if you an e-commerce,
and you are delivering goods

00:04:35.790 --> 00:04:38.460
to someone.

00:04:38.460 --> 00:04:44.040
If you want to know how
long is your delivery time.

00:04:44.040 --> 00:04:46.100
If you're doing right or wrong.

00:04:46.100 --> 00:04:47.770
You don't have that
on the website.

00:04:47.770 --> 00:04:50.580
If you call center
and you are getting

00:04:50.580 --> 00:04:53.180
calls from someone wanting
to cancel their account.

00:04:53.180 --> 00:04:54.540
That's not on the website.

00:04:54.540 --> 00:04:58.380
So there is a lot of information
that is out of the website,

00:04:58.380 --> 00:05:00.440
and it's out of the
control of analytics.

00:05:00.440 --> 00:05:03.380
But it's really important to
us knowing what's going on,

00:05:03.380 --> 00:05:05.870
even if the information is
not coming to the website,

00:05:05.870 --> 00:05:07.760
it's important for my business.

00:05:07.760 --> 00:05:11.990
So we wanted to have a
solution in which we could

00:05:11.990 --> 00:05:14.030
have analytics on all
that information that's

00:05:14.030 --> 00:05:17.110
coming from other sources.

00:05:17.110 --> 00:05:19.950
Since the first moment--
well this is teowaki.

00:05:19.950 --> 00:05:23.100
So since the first
moment we thought

00:05:23.100 --> 00:05:24.840
this was a Big Data problem.

00:05:24.840 --> 00:05:26.170
First, because it sounds cool.

00:05:26.170 --> 00:05:28.362
Big data is the new buzz word.

00:05:28.362 --> 00:05:29.820
And second, because
actually we are

00:05:29.820 --> 00:05:32.150
going to have lots of
data in the system.

00:05:32.150 --> 00:05:34.490
We are tracking every
visit to the system,

00:05:34.490 --> 00:05:35.910
we wouldn't have big data.

00:05:35.910 --> 00:05:38.890
So since I'm assuming
not every one of you

00:05:38.890 --> 00:05:40.250
understands what is big data.

00:05:40.250 --> 00:05:41.840
Maybe yes, I can be wrong here.

00:05:41.840 --> 00:05:43.940
But I didn't know
it until not so

00:05:43.940 --> 00:05:46.300
long ago that it's
this definition, which

00:05:46.300 --> 00:05:49.700
is like big data is when
your data is really too big.

00:05:49.700 --> 00:05:52.540
Like much bigger than
the one you are used to.

00:05:52.540 --> 00:05:53.880
Or when it moves too fast.

00:05:53.880 --> 00:05:57.280
If you have too many things
coming at the same time.

00:05:57.280 --> 00:06:00.060
Or when it's like really,
really weird to fit it

00:06:00.060 --> 00:06:01.510
into your system.

00:06:01.510 --> 00:06:05.690
So in our case, I told
you we have 500 users.

00:06:05.690 --> 00:06:10.490
At the moment we already have
over 1,500,000 rows of data.

00:06:10.490 --> 00:06:12.380
So 500 users, over
1,000,000 rows

00:06:12.380 --> 00:06:15.440
of data in a month
and a half, so yeah,

00:06:15.440 --> 00:06:17.060
the data we have
from the analytics

00:06:17.060 --> 00:06:19.290
is much, much
bigger than the one

00:06:19.290 --> 00:06:20.910
we have our system prepared for.

00:06:20.910 --> 00:06:22.960
So we were thinking, OK.

00:06:22.960 --> 00:06:25.680
We need to find a
big data solution.

00:06:25.680 --> 00:06:27.840
So we can put a lot
of data in the system,

00:06:27.840 --> 00:06:29.820
and then do something with it.

00:06:29.820 --> 00:06:33.860
And we wanted to have--
this was like the wish list.

00:06:33.860 --> 00:06:37.000
The system for having analytics
shouldn't be intrusive.

00:06:37.000 --> 00:06:40.500
It shouldn't slow down
the user experience.

00:06:40.500 --> 00:06:43.040
Second thing, we want
to have the history

00:06:43.040 --> 00:06:45.110
and avoid any vendor lock-in.

00:06:45.110 --> 00:06:46.780
If now it's iniquity.

00:06:46.780 --> 00:06:50.760
But as I work for Google, maybe
a year from now, six months

00:06:50.760 --> 00:06:52.780
from now, I find
a better solution.

00:06:52.780 --> 00:06:54.180
I want to move out.

00:06:54.180 --> 00:06:57.830
Because you know, I want to have
the best solution I can afford.

00:06:57.830 --> 00:07:00.200
So it's a leap of
faith, basically.

00:07:00.200 --> 00:07:02.032
So I live really cheap.

00:07:02.032 --> 00:07:03.740
So you know, I want
to have all the data.

00:07:03.740 --> 00:07:05.230
I don't want vendor lock-in.

00:07:05.230 --> 00:07:07.070
And I want to have
interactive queries.

00:07:07.070 --> 00:07:10.390
Meaning that every time I
want to have new information,

00:07:10.390 --> 00:07:13.770
I don't want to write a
report, compute interface,

00:07:13.770 --> 00:07:15.270
having to develop
the thing myself.

00:07:15.270 --> 00:07:18.190
Or if I'm not a
developer, hire someone.

00:07:18.190 --> 00:07:21.800
So I should have the capability
for running interactive queries

00:07:21.800 --> 00:07:23.160
to the system.

00:07:23.160 --> 00:07:24.280
It has to be cheap.

00:07:24.280 --> 00:07:26.090
Because we have two people.

00:07:26.090 --> 00:07:27.320
Not a big company.

00:07:27.320 --> 00:07:29.790
If I have to choose between
paying for analytics

00:07:29.790 --> 00:07:31.850
or paying for lunch,
lunch is going

00:07:31.850 --> 00:07:33.540
to win almost all the time.

00:07:33.540 --> 00:07:35.790
And it it's real time,
that would be amazing.

00:07:35.790 --> 00:07:37.970
We don't need it, but
it would be amazing.

00:07:37.970 --> 00:07:39.990
So it's like first problem.

00:07:39.990 --> 00:07:42.820
You are going to have
millions of data.

00:07:42.820 --> 00:07:44.850
Where are you going
to store data?

00:07:44.850 --> 00:07:46.660
On a universal
store, or so having

00:07:46.660 --> 00:07:48.640
a backup, and all those things.

00:07:48.640 --> 00:07:50.370
So this service is quite easy.

00:07:50.370 --> 00:07:52.660
There is something called
Google Cloud Storage.

00:07:52.660 --> 00:07:54.140
If you are not
familiar with this,

00:07:54.140 --> 00:07:57.480
maybe you're familiar with
something called Amazon S3.

00:07:57.480 --> 00:07:59.860
They were coming out
with this anyway.

00:07:59.860 --> 00:08:01.650
It's like cloud storage.

00:08:01.650 --> 00:08:04.170
It's somewhere where
you put lots of files,

00:08:04.170 --> 00:08:06.680
and it's like
really, really cheap.

00:08:06.680 --> 00:08:11.600
In our case, it's storing
million and one half rows,

00:08:11.600 --> 00:08:13.590
it's costing us like
zero comma zero, zero,

00:08:13.590 --> 00:08:15.800
zero, zero something per month.

00:08:15.800 --> 00:08:17.170
Which is OK for us.

00:08:17.170 --> 00:08:18.300
We have that money.

00:08:18.300 --> 00:08:19.895
It's like, we
don't have funding.

00:08:19.895 --> 00:08:20.830
But we have savings.

00:08:20.830 --> 00:08:22.460
So that's good for us.

00:08:22.460 --> 00:08:23.280
So cloud storage.

00:08:23.280 --> 00:08:24.252
That's why they say.

00:08:24.252 --> 00:08:25.460
It was like the first things.

00:08:25.460 --> 00:08:28.700
It's storing the data, it's
not storing anymore today.

00:08:28.700 --> 00:08:30.180
It was a few years ago.

00:08:30.180 --> 00:08:31.810
You need to have huge servers.

00:08:31.810 --> 00:08:33.220
This was terribly expensive.

00:08:33.220 --> 00:08:34.610
That's not a problem.

00:08:34.610 --> 00:08:35.650
That's it.

00:08:35.650 --> 00:08:36.329
Second things.

00:08:36.329 --> 00:08:37.789
This is a problem today.

00:08:37.789 --> 00:08:38.289
OK.

00:08:38.289 --> 00:08:40.600
So you have millions of data.

00:08:40.600 --> 00:08:42.520
Two million rows or whatever.

00:08:42.520 --> 00:08:45.030
How are you going to run
queries over the data?

00:08:45.030 --> 00:08:48.385
Because if you have been
around IT for a bit,

00:08:48.385 --> 00:08:51.540
you know running a complex
query can take a while.

00:08:51.540 --> 00:08:53.360
So I don't want my
queries to take a while.

00:08:53.360 --> 00:08:54.870
I want them right now.

00:08:54.870 --> 00:08:56.880
I mean in the next 10 seconds.

00:08:56.880 --> 00:08:58.060
So how can I do that?

00:08:58.060 --> 00:08:59.080
[INAUDIBLE]

00:08:59.080 --> 00:09:01.730
There's some big data solutions.

00:09:01.730 --> 00:09:03.500
This is like two
are not open source.

00:09:03.500 --> 00:09:05.260
The others you have
to pay for that.

00:09:05.260 --> 00:09:07.860
Something called Hadoop,
which is like something

00:09:07.860 --> 00:09:09.320
for doing big data.

00:09:09.320 --> 00:09:12.250
Cassandra, blah, blah--
they are too complex.

00:09:12.250 --> 00:09:15.080
You need to start your
own servers or have

00:09:15.080 --> 00:09:18.490
a [? farm-out ?] service on
the cloud, whatever that means.

00:09:18.490 --> 00:09:21.960
And then you have to be
like putting it up and down.

00:09:21.960 --> 00:09:25.340
If something is broken you
have to manage to fix it.

00:09:25.340 --> 00:09:26.180
We are two people.

00:09:26.180 --> 00:09:27.513
We don't have the time for this.

00:09:27.513 --> 00:09:29.370
We actually know how
to use these tools.

00:09:29.370 --> 00:09:33.780
It's just that we don't the
not enough time or money

00:09:33.780 --> 00:09:35.060
for this to be cost effective.

00:09:35.060 --> 00:09:37.870
Amazon Redshift is
hosted in the cloud.

00:09:37.870 --> 00:09:39.660
It's more cost effective
than the others,

00:09:39.660 --> 00:09:41.840
because if you have
like not really,

00:09:41.840 --> 00:09:44.590
really billions of rows.

00:09:44.590 --> 00:09:47.490
Because you just
pay for the use.

00:09:47.490 --> 00:09:49.680
But the thins with
Amazon, you pay

00:09:49.680 --> 00:09:52.740
for how long the
system is running.

00:09:52.740 --> 00:09:55.700
So if I want to query
a system like now,

00:09:55.700 --> 00:09:58.870
I just have the system, I input
the data, I run the queries,

00:09:58.870 --> 00:10:00.310
and I stop it.

00:10:00.310 --> 00:10:02.260
Because if I don't
stop the system,

00:10:02.260 --> 00:10:04.040
I'm going to be paying
for the minutes.

00:10:04.040 --> 00:10:06.070
Every minute it's
working, you have to pay.

00:10:06.070 --> 00:10:09.020
You don't pay much, but you
have to be like, start it.

00:10:09.020 --> 00:10:09.620
Stop it.

00:10:09.620 --> 00:10:10.990
Now I want two servers.

00:10:10.990 --> 00:10:12.380
Now I want 10 servers.

00:10:12.380 --> 00:10:14.380
So it's better for us this way.

00:10:14.380 --> 00:10:15.950
But still it's not good enough.

00:10:15.950 --> 00:10:18.130
So we found this thing
called Google BigQuery.

00:10:18.130 --> 00:10:19.650
And this was amazing for us.

00:10:19.650 --> 00:10:22.550
Because Google BigQuery is
exactly what we're looking for.

00:10:22.550 --> 00:10:26.000
It's like data
analytics as a service.

00:10:26.000 --> 00:10:28.780
So this means you
put data there.

00:10:28.780 --> 00:10:30.810
You put in the
data and it works.

00:10:30.810 --> 00:10:32.180
I didn't do anything else.

00:10:32.180 --> 00:10:34.670
It was like, oh, it sounds
like just the ticket for us.

00:10:34.670 --> 00:10:36.150
And it was.

00:10:36.150 --> 00:10:37.617
It's been for us OK.

00:10:37.617 --> 00:10:39.200
It's based on something
called Dremel.

00:10:39.200 --> 00:10:42.870
Dremel is an internal tool
that Google developed.

00:10:42.870 --> 00:10:45.150
They were using it intensively
or a lot of things.

00:10:45.150 --> 00:10:47.780
Like managing ad wars
and those things.

00:10:47.780 --> 00:10:49.670
So that's internally
what they are using.

00:10:49.670 --> 00:10:52.620
And it's designed for
petabytes of real-time data.

00:10:52.620 --> 00:10:55.114
Petabytes of data
means something

00:10:55.114 --> 00:10:56.280
that you totally don't have.

00:10:56.280 --> 00:10:58.450
You have the [INAUDIBLE]
that [INAUDIBLE] to have.

00:10:58.450 --> 00:11:00.770
That's really a blessing.

00:11:00.770 --> 00:11:03.930
It is designed for having
double data, real-time.

00:11:03.930 --> 00:11:06.110
That's quite cool.

00:11:06.110 --> 00:11:07.620
Loading data is quite easy.

00:11:07.620 --> 00:11:09.860
You send a file-- a text file.

00:11:09.860 --> 00:11:12.580
Or JSON, if you are a
developer and you prefer JSON,

00:11:12.580 --> 00:11:15.240
you send it from any
tool in the world.

00:11:15.240 --> 00:11:17.490
You can convert to text file.

00:11:17.490 --> 00:11:19.740
You send the text file there,
it's going to be stored.

00:11:19.740 --> 00:11:21.900
And in the next few
seconds, you can already

00:11:21.900 --> 00:11:24.282
get get data from there.

00:11:24.282 --> 00:11:26.490
How many of you are familiar
with the concept of SQL?

00:11:26.490 --> 00:11:28.620
Like the device is
SQL, or whatever.

00:11:28.620 --> 00:11:29.120
Yeah.

00:11:29.120 --> 00:11:30.200
A few of you.

00:11:30.200 --> 00:11:30.720
OK.

00:11:30.720 --> 00:11:33.340
SQL has been around
for 25 years.

00:11:33.340 --> 00:11:35.070
Longer than some of you.

00:11:35.070 --> 00:11:38.330
So the thing is, SQL is like a
standard language in which you

00:11:38.330 --> 00:11:41.830
can basically access
to the databases.

00:11:41.830 --> 00:11:45.300
On Big Data, now
its a trend that

00:11:45.300 --> 00:11:48.400
you can already use
SQL with some tools

00:11:48.400 --> 00:11:50.320
for querying your data.

00:11:50.320 --> 00:11:52.890
So if I store data
on BigQuery, I

00:11:52.890 --> 00:11:54.765
can do something
like give me the name

00:11:54.765 --> 00:11:56.975
of all the users
ordered by date.

00:11:56.975 --> 00:11:59.350
And it's going to give you
the name of the users by date.

00:11:59.350 --> 00:12:00.700
It's quite easy to understand.

00:12:00.700 --> 00:12:03.340
Or give me how many
users I have in total.

00:12:03.340 --> 00:12:05.970
Or give me the
maximum date of users.

00:12:05.970 --> 00:12:08.360
So for knowing which was
like the latest registration,

00:12:08.360 --> 00:12:09.300
for example.

00:12:09.300 --> 00:12:12.030
Or give me the
total of the orders

00:12:12.030 --> 00:12:13.690
of it's user grouped by user.

00:12:13.690 --> 00:12:15.880
So it's an easy enough language.

00:12:15.880 --> 00:12:17.560
So you already know
SQL, you already

00:12:17.560 --> 00:12:19.410
know how to use BigQuery.

00:12:19.410 --> 00:12:22.530
And it has an extension
for analytical things

00:12:22.530 --> 00:12:26.320
like percentiles, on variants,
and all these things.

00:12:26.320 --> 00:12:29.380
If you're like a statistician
and you want to do more things,

00:12:29.380 --> 00:12:30.610
they have some extensions.

00:12:30.610 --> 00:12:32.760
But basically it's like SQL.

00:12:32.760 --> 00:12:35.260
Like quite easy to use already.

00:12:35.260 --> 00:12:38.040
If you have a developer on your
team, they know SQL already.

00:12:38.040 --> 00:12:42.472
If you have a developer on your
team and they don't know SQL,

00:12:42.472 --> 00:12:44.430
you probably want to find
part of the developer

00:12:44.430 --> 00:12:47.850
but until then I told you

00:12:47.850 --> 00:12:49.450
So this is how it looks.

00:12:49.450 --> 00:12:51.850
If you go to the
website of BigQuery,

00:12:51.850 --> 00:12:53.005
they have also like an API.

00:12:53.005 --> 00:12:55.310
If you like API's,
that's amazing.

00:12:55.310 --> 00:12:56.090
I like them.

00:12:56.090 --> 00:12:58.770
But if not, you have
the web console.

00:12:58.770 --> 00:13:02.240
And yeah, you enter the
query, you click on Run,

00:13:02.240 --> 00:13:03.862
and then you get the results.

00:13:03.862 --> 00:13:04.570
How cool is that?

00:13:04.570 --> 00:13:08.350
It's like, I'm not really
doing this as easy currently.

00:13:08.350 --> 00:13:09.150
There's one thing.

00:13:09.150 --> 00:13:11.650
You see that green
button on the right?

00:13:11.650 --> 00:13:13.600
It's called validation
button, but to me it's

00:13:13.600 --> 00:13:15.620
like the starter button.

00:13:15.620 --> 00:13:20.150
Because in BigQuery, you're
going to pay for how many data

00:13:20.150 --> 00:13:21.830
you are querying.

00:13:21.830 --> 00:13:24.580
So before running
a query, you want

00:13:24.580 --> 00:13:27.530
to be sure you're
not going to be

00:13:27.530 --> 00:13:30.940
searching in too many tables.

00:13:30.940 --> 00:13:34.320
The thing is if
you have like-- you

00:13:34.320 --> 00:13:40.060
are storing the users,
their IP address, the email,

00:13:40.060 --> 00:13:42.445
the last receipt, whatever.

00:13:42.445 --> 00:13:45.330
And you only want to know
when was the last receipt,

00:13:45.330 --> 00:13:48.260
you should only ask for
the last receipt column.

00:13:48.260 --> 00:13:50.060
Because if you ask
for more columns,

00:13:50.060 --> 00:13:52.409
you are going to pay much
for that particular query.

00:13:52.409 --> 00:13:54.200
So the green button
there when you click on

00:13:54.200 --> 00:13:57.560
that, it's going to tell you
A-- I'm going to go over-- I

00:13:57.560 --> 00:13:59.500
don't know-- one
gigabyte of data.

00:13:59.500 --> 00:14:03.120
And it's like, no, I prefer
to go only about half that.

00:14:03.120 --> 00:14:05.810
So you can just
fine tune your query

00:14:05.810 --> 00:14:08.460
before actually mounting it,
so it's going to be cheaper.

00:14:08.460 --> 00:14:11.120
So you have the starter button
to the right, that's important.

00:14:11.120 --> 00:14:12.150
You can do [INAUDIBLE].

00:14:12.150 --> 00:14:14.850
Like for example, who
is my most active user?

00:14:14.850 --> 00:14:16.400
Because segmentation is amazing.

00:14:16.400 --> 00:14:20.650
If you can segment by people who
are coming on Saturday morning

00:14:20.650 --> 00:14:21.760
from the US, that's cool.

00:14:21.760 --> 00:14:24.970
But if you can segment by,
give me this particular user.

00:14:24.970 --> 00:14:27.260
The one with the ID 105.

00:14:27.260 --> 00:14:30.270
I know that's the user
I want to take care of.

00:14:30.270 --> 00:14:32.111
Not because he's part
of this segment group.

00:14:32.111 --> 00:14:32.610
No.

00:14:32.610 --> 00:14:35.990
Because I sent a query
so I can actually

00:14:35.990 --> 00:14:39.565
identify single
users using my API.

00:14:39.565 --> 00:14:40.750
I have all the history.

00:14:40.750 --> 00:14:42.400
I can see what a
single user has been

00:14:42.400 --> 00:14:45.010
doing for the whole
life of the application.

00:14:45.010 --> 00:14:45.720
Single users.

00:14:45.720 --> 00:14:46.220
That's cool.

00:14:46.220 --> 00:14:48.570
Because you can
really target people.

00:14:48.570 --> 00:14:52.120
Imagine you have a problem, and
then you write a support email.

00:14:52.120 --> 00:14:54.000
You can see the user
has been using the tool

00:14:54.000 --> 00:14:56.154
again after that
support email or not.

00:14:56.154 --> 00:14:57.070
So that's really cool.

00:14:57.070 --> 00:14:59.911
You can really segment
the way you want.

00:14:59.911 --> 00:15:01.410
Of course you can
segment by country

00:15:01.410 --> 00:15:02.857
or whatever you want to do.

00:15:02.857 --> 00:15:04.190
We are using it for many things.

00:15:04.190 --> 00:15:07.130
Like for example, for
performance teams.

00:15:07.130 --> 00:15:09.765
We are developers, so
we are querying the data

00:15:09.765 --> 00:15:11.790
to see how people
are using it to see

00:15:11.790 --> 00:15:14.990
if we can improve
our performance.

00:15:14.990 --> 00:15:17.270
But basically,
depending on your data,

00:15:17.270 --> 00:15:22.742
you can imagine creative
ways of using it.

00:15:22.742 --> 00:15:24.820
This for example,
is one of my PPI's.

00:15:24.820 --> 00:15:27.190
It's like how many users
you have per month.

00:15:27.190 --> 00:15:31.270
So we like to know how many
users are using the too.

00:15:31.270 --> 00:15:33.950
We want to compare
with the past month,

00:15:33.950 --> 00:15:36.210
so we are sure the trend is OK.

00:15:36.210 --> 00:15:39.370
So you know, writing something
which is not that difficult.

00:15:39.370 --> 00:15:43.840
We are just getting how many
users are using the tool.

00:15:43.840 --> 00:15:45.655
And if you want
to locate it, you

00:15:45.655 --> 00:15:47.260
can get something a bit ugly.

00:15:47.260 --> 00:15:48.660
This is not actually ours.

00:15:48.660 --> 00:15:49.910
It's from people from BIT-Cup.

00:15:49.910 --> 00:15:51.390
It's another software company.

00:15:51.390 --> 00:15:55.000
You know, this query is
doing something like,

00:15:55.000 --> 00:15:58.440
give me all the projects that
are being created every day.

00:15:58.440 --> 00:16:00.350
And out of those
projects, give me

00:16:00.350 --> 00:16:03.090
the projects that are
being watched at the moment

00:16:03.090 --> 00:16:03.870
by most users.

00:16:03.870 --> 00:16:05.300
So it's like
trending repositories

00:16:05.300 --> 00:16:07.460
on a single query
over billions of rows.

00:16:07.460 --> 00:16:09.860
These people have
over 8 million users.

00:16:09.860 --> 00:16:11.970
So for billions of
rows, every day,

00:16:11.970 --> 00:16:15.050
they are having this query
for the trend in repositories,

00:16:15.050 --> 00:16:16.800
and sending it via email.

00:16:16.800 --> 00:16:19.240
Which looks a bit weird,
buy if you think like, OK.

00:16:19.240 --> 00:16:22.710
This is going to serve billions
of rows, 8 million users.

00:16:22.710 --> 00:16:24.010
It's like sorted enough.

00:16:24.010 --> 00:16:26.440
Still, I can see your faces now.

00:16:26.440 --> 00:16:27.440
And they look like this.

00:16:27.440 --> 00:16:29.140
It's like, what was that?

00:16:29.140 --> 00:16:30.340
Exactly.

00:16:30.340 --> 00:16:34.090
Because I don't want to be
writing these queries all

00:16:34.090 --> 00:16:35.272
the time and figuring out.

00:16:35.272 --> 00:16:36.230
Because I prefer Excel.

00:16:36.230 --> 00:16:37.370
Oh sorry.

00:16:37.370 --> 00:16:38.360
Google Express It.

00:16:38.360 --> 00:16:38.970
Excel.

00:16:38.970 --> 00:16:41.000
I prefer Google Express It.

00:16:41.000 --> 00:16:44.680
So to me, data it's
much more convenient

00:16:44.680 --> 00:16:46.790
if can see just
colors and numbers

00:16:46.790 --> 00:16:49.970
and some fancy graphics.

00:16:49.970 --> 00:16:51.340
This is a user sample.

00:16:51.340 --> 00:16:55.000
This is users that have
been late in their account.

00:16:55.000 --> 00:16:57.790
Maybe they are more or less.

00:16:57.790 --> 00:17:00.170
So it's like, oh, so you
can export alphabetically

00:17:00.170 --> 00:17:02.270
from this query to
Google Express It.

00:17:02.270 --> 00:17:02.770
No.

00:17:02.770 --> 00:17:04.210
You can't.

00:17:04.210 --> 00:17:05.236
Sorry, you can't.

00:17:05.236 --> 00:17:06.660
You're like, whoa!

00:17:06.660 --> 00:17:08.180
What are you telling me?

00:17:08.180 --> 00:17:11.280
But there's something called--
yeah, yeah, I know, I know.

00:17:11.280 --> 00:17:12.366
I feel your pain now.

00:17:12.366 --> 00:17:14.240
You can export to CSV,
which is close enough.

00:17:14.240 --> 00:17:14.900
OK?

00:17:14.900 --> 00:17:18.220
But here's something
called Apps Scripts,

00:17:18.220 --> 00:17:19.540
which is also from Google.

00:17:19.540 --> 00:17:21.530
And it's for free.

00:17:21.530 --> 00:17:22.530
Totally for free.

00:17:22.530 --> 00:17:24.990
And with Apps Script,
it's something,

00:17:24.990 --> 00:17:28.430
it's like JavaScript, like a
smaller set of-- do any of you

00:17:28.430 --> 00:17:29.324
know JavaScript?

00:17:29.324 --> 00:17:30.490
You know more than you need.

00:17:30.490 --> 00:17:32.510
Because it's like a
smaller set of JavaScript.

00:17:32.510 --> 00:17:36.200
Apps Script is something that
lets you interact with most

00:17:36.200 --> 00:17:38.290
of Google API's.

00:17:38.290 --> 00:17:43.000
So is you want to interact with
Google Drive, with BigQuery,

00:17:43.000 --> 00:17:47.250
with Google
Analytics, with Gmail,

00:17:47.250 --> 00:17:49.810
almost all of the Google API's.

00:17:49.810 --> 00:17:51.170
I will say [INAUDIBLE].

00:17:51.170 --> 00:17:52.874
I'm not totally sure about that.

00:17:52.874 --> 00:17:53.540
You can do that.

00:17:53.540 --> 00:17:55.080
So what we have done.

00:17:55.080 --> 00:17:56.500
What we have done
in the company,

00:17:56.500 --> 00:18:01.180
is we have this script which
is running data from BigQuery,

00:18:01.180 --> 00:18:06.127
then creating a spreadsheet
on Google Drive,

00:18:06.127 --> 00:18:07.210
and then sending an email.

00:18:07.210 --> 00:18:10.510
So every morning at 9:30 in
the morning, I get this email

00:18:10.510 --> 00:18:12.949
with my [? KPI ?]
indicators, telling me OK,

00:18:12.949 --> 00:18:14.490
this is how many
users for the month.

00:18:14.490 --> 00:18:17.180
This is their usage, and
this is a link to the Express

00:18:17.180 --> 00:18:20.180
It if you want to drill down the
data and do whatever you want.

00:18:20.180 --> 00:18:21.680
Is it difficult?

00:18:21.680 --> 00:18:23.190
You have to program a bit.

00:18:23.190 --> 00:18:26.660
But it's quite
easy, I would say.

00:18:26.660 --> 00:18:30.512
For example, Apps Scripts is
something that runs on the web.

00:18:30.512 --> 00:18:31.970
You don't need to
install anything.

00:18:31.970 --> 00:18:34.670
You just go to
Scripts, or google.com,

00:18:34.670 --> 00:18:35.900
or something like that.

00:18:35.900 --> 00:18:37.941
And then you start on your
project and that's it.

00:18:37.941 --> 00:18:39.520
It's part of the Google Drive.

00:18:39.520 --> 00:18:44.370
So what I'm doing here is,
OK I go to Google Drive,

00:18:44.370 --> 00:18:45.980
I get the aps.folder.

00:18:45.980 --> 00:18:48.210
I have a folder in Google Drive.

00:18:48.210 --> 00:18:51.860
I'm creating an [INAUDIBLE]
with a date of today.

00:18:51.860 --> 00:18:55.695
Then I'm just putting there the
new users I have per month that

00:18:55.695 --> 00:18:58.110
are coming from BigQuery,
[INAUDIBLE] users,

00:18:58.110 --> 00:19:00.190
and sending the email.

00:19:00.190 --> 00:19:01.780
Sending an email-- oh sorry.

00:19:01.780 --> 00:19:03.060
Sending an email.

00:19:03.060 --> 00:19:06.730
This is what I have
in my apps.folder now.

00:19:06.730 --> 00:19:09.430
It's like for every
day, I have Express It.

00:19:09.430 --> 00:19:11.160
Which is the one I
showed you before.

00:19:11.160 --> 00:19:12.870
Sending an email
is as easy as OK,

00:19:12.870 --> 00:19:17.370
I want to send an email to this
person, copy to this person.

00:19:17.370 --> 00:19:18.522
This is the subject.

00:19:18.522 --> 00:19:19.230
This is the body.

00:19:19.230 --> 00:19:20.205
This is the attachment.

00:19:20.205 --> 00:19:21.830
And you are sending
an email like that.

00:19:21.830 --> 00:19:26.514
So sending emails from
Apps Scripts is quite easy.

00:19:26.514 --> 00:19:28.860
And this is what the
email looks like when

00:19:28.860 --> 00:19:30.000
I get it in the morning.

00:19:30.000 --> 00:19:30.770
OK.

00:19:30.770 --> 00:19:34.340
This is your drive, and this
is your tool KPI at the moment.

00:19:34.340 --> 00:19:34.910
So cool.

00:19:34.910 --> 00:19:37.040
Every morning I'm
having this information.

00:19:37.040 --> 00:19:38.770
I'm getting if from BigQuery.

00:19:38.770 --> 00:19:40.950
Except it's weird like
the JavaScript here.

00:19:40.950 --> 00:19:44.500
But basically, this is the
query I was talking to before.

00:19:44.500 --> 00:19:45.814
The one I showed you before.

00:19:45.814 --> 00:19:47.730
So you can write it on
the web on the console,

00:19:47.730 --> 00:19:49.470
or just put it here.

00:19:49.470 --> 00:19:52.060
So every day we're
running this thing,

00:19:52.060 --> 00:19:54.520
we are getting the document,
and we're getting the email.

00:19:54.520 --> 00:19:56.470
If you're going to
use BigQuery and you

00:19:56.470 --> 00:19:58.360
want to have this
subscript yesterday.

00:19:58.360 --> 00:19:59.452
I can access them for you.

00:19:59.452 --> 00:20:01.160
So the only thing you
will need to change

00:20:01.160 --> 00:20:03.290
is here you have to
pull your queries.

00:20:03.290 --> 00:20:06.560
Here you have to pull
your user ID number, which

00:20:06.560 --> 00:20:10.480
is on the internal, on
your Google account.

00:20:10.480 --> 00:20:12.060
Here you have to
pull your email,

00:20:12.060 --> 00:20:14.260
because you don't want
to send the analytics

00:20:14.260 --> 00:20:15.522
to me, but to you.

00:20:15.522 --> 00:20:17.480
But if you want to use
this, just ask me later,

00:20:17.480 --> 00:20:18.740
I will set it.

00:20:18.740 --> 00:20:19.800
That's cool.

00:20:19.800 --> 00:20:20.510
One more thing.

00:20:20.510 --> 00:20:22.260
This is real expensive, because
someone was speaking before

00:20:22.260 --> 00:20:22.960
about BigQuery.

00:20:22.960 --> 00:20:25.449
And he said something
about, it's quite cheap.

00:20:25.449 --> 00:20:27.240
Cheaper than the others.
$20,000 per month.

00:20:27.240 --> 00:20:28.720
I was like, $20,000 per month?

00:20:28.720 --> 00:20:30.010
Come on!

00:20:30.010 --> 00:20:34.970
So if you are quite big, it is
that cheap. $20,000 per month.

00:20:34.970 --> 00:20:36.780
But for us, it's like this.

00:20:36.780 --> 00:20:38.790
Cloud storage, you
pay like nothing.

00:20:38.790 --> 00:20:40.900
In our case, it's
storing 1,000 ,000 rows.

00:20:40.900 --> 00:20:42.350
It codes in dollars.

00:20:42.350 --> 00:20:43.631
It codes this number.

00:20:43.631 --> 00:20:45.380
I don't know how to
pronounce this number.

00:20:45.380 --> 00:20:47.750
Like zero, zero, zero, zero, 92.

00:20:47.750 --> 00:20:50.650
In pounds, it's like nothing.

00:20:50.650 --> 00:20:53.510
And for BigQuery, which
is a bit more expensive.

00:20:53.510 --> 00:20:55.910
BigQuery is more
expensive I have like, OK.

00:20:55.910 --> 00:20:57.090
This is the price.

00:20:57.090 --> 00:20:59.260
So I'm paying for
1,000,000 rows,

00:20:59.260 --> 00:21:01.455
this amount of pounds per month.

00:21:01.455 --> 00:21:04.730
And for storing, I'm paying
this amount per month.

00:21:04.730 --> 00:21:09.330
So in total, this is what I'm
paying for having Big Data

00:21:09.330 --> 00:21:11.790
analytics about
any data you want.

00:21:11.790 --> 00:21:14.750
Because you can send there any
data you have in your company.

00:21:14.750 --> 00:21:18.520
This is what I'm paying
for 8 million rows I have.

00:21:18.520 --> 00:21:21.720
Actually this is wrong,
because just yesterday I

00:21:21.720 --> 00:21:25.010
knew that the first hundred
gigabytes of queries

00:21:25.010 --> 00:21:27.880
you do they're for free
on BigQuery every month.

00:21:27.880 --> 00:21:30.670
But they just made this better.

00:21:30.670 --> 00:21:33.600
The first terabyte is for free.

00:21:33.600 --> 00:21:36.247
So this is going to be even
cheaper for next month.

00:21:36.247 --> 00:21:38.330
So this is what it costs
to me to have the system.

00:21:38.330 --> 00:21:40.050
And I can afford this.

00:21:40.050 --> 00:21:42.860
So I have all the
goals that I wanted.

00:21:42.860 --> 00:21:43.670
Non intrusive.

00:21:43.670 --> 00:21:44.760
I have the history.

00:21:44.760 --> 00:21:45.810
It's cheap.

00:21:45.810 --> 00:21:46.950
It's real time if you want.

00:21:46.950 --> 00:21:49.940
I don't need real
time, but it is.

00:21:49.940 --> 00:21:51.610
And that's what I wanted to say.

00:21:51.610 --> 00:21:54.860
If you know how to do things,
you can also do big things

00:21:54.860 --> 00:21:58.930
and use Big Data, even if
as a startup, sometimes

00:21:58.930 --> 00:22:00.880
you feel you are in underwear.

00:22:00.880 --> 00:22:02.664
So thank you for that.

00:22:02.664 --> 00:22:04.412
[APPLAUSE]

