WEBVTT
Kind: captions
Language: en

00:00:00.210 --> 00:00:03.360
Android makes it easy to incorporate
translation into your app.

00:00:03.360 --> 00:00:06.980
Here I've made a translate app, and
I'm going to make it display text

00:00:06.980 --> 00:00:09.800
that translates automatically
to our language of interest.

00:00:09.800 --> 00:00:13.250
In this case, we'll include
translations to Spanish and French.

00:00:13.250 --> 00:00:16.740
So I've started with the main
activity with an empty view.

00:00:16.740 --> 00:00:19.530
So the first thing we need to
do is to create some text,

00:00:19.530 --> 00:00:21.250
by creating a text view.

00:00:21.250 --> 00:00:24.030
And we can do that in our
activity main XML file.

00:00:24.030 --> 00:00:27.150
Right now, we just have our empty
layout, so let's create a text view

00:00:27.150 --> 00:00:31.160
that appears at the top of our screen
and displays the text hello world.

00:00:31.160 --> 00:00:34.940
Our text view automatically gives us
our layout width and layout height.

00:00:34.940 --> 00:00:37.400
And since I want to text to
appear at the top of our screen,

00:00:37.400 --> 00:00:40.400
I'm going to give these dimensions
that take up the whole screen,

00:00:40.400 --> 00:00:43.110
which is going to be wrapped content for
both.

00:00:43.110 --> 00:00:44.980
Great, now I need one more parameter.

00:00:44.980 --> 00:00:46.940
That's the text that this will contain.

00:00:46.940 --> 00:00:49.690
So, I say android text equals.

00:00:49.690 --> 00:00:51.880
Now I can put any string
I want to be displayed.

00:00:51.880 --> 00:00:53.560
And I'll put Hello_World.

00:00:53.560 --> 00:00:54.560
Now let's see if this worked.

00:00:56.500 --> 00:00:59.240
It did, we see it appear right
at the top of our screen and

00:00:59.240 --> 00:01:02.210
actually let me change the text size so
that it's bigger.

00:01:02.210 --> 00:01:05.519
Okay, I change of text size to be 24 dp,
so that should be bigger.

00:01:05.519 --> 00:01:08.390
Great, now it's a little more
visible and we can change this text

00:01:08.390 --> 00:01:12.690
to anything we want just by changing
the wording in our text view.

00:01:12.690 --> 00:01:15.730
So instead of Hello World,
I could say goodbye,

00:01:15.730 --> 00:01:19.290
and then save it and it'll change.

00:01:19.290 --> 00:01:22.230
But to display this in different
languages, we want to be

00:01:22.230 --> 00:01:26.980
able to load this string from a file and
change it based on the language we want.

00:01:26.980 --> 00:01:31.210
So we don't actually want to hard
code it in our view like we've done.

00:01:31.210 --> 00:01:33.065
Instead, for any text we use,

00:01:33.065 --> 00:01:36.478
we'll want to reference it from our
file that contains all our strings or

00:01:36.478 --> 00:01:40.780
strings XML file, or strings that
are contained in our values folder.

00:01:40.780 --> 00:01:42.750
So let's take a look at what's in there.

00:01:42.750 --> 00:01:46.860
We already have a string called
app name that says translate,

00:01:46.860 --> 00:01:50.320
that's the title of our app and
one for settings as well.

00:01:50.320 --> 00:01:52.070
These were automatically generated.

00:01:52.070 --> 00:01:53.580
So now let's make our own.

00:01:53.580 --> 00:01:55.620
So in our strings XML file,

00:01:55.620 --> 00:02:00.200
let's create a string with
the variable name, hello world.

00:02:00.200 --> 00:02:04.020
Then this string tag will include
the word or phrase we want to display.

00:02:04.020 --> 00:02:07.300
So let's just write in hello_world here.

00:02:07.300 --> 00:02:10.258
Then we'll want to reference this
variable when we go to display our

00:02:10.258 --> 00:02:11.360
text view.

00:02:11.360 --> 00:02:15.740
And to reference it, we'll be using
the variable name hello_world.

00:02:15.740 --> 00:02:17.188
So let's go back to our text view.

00:02:17.188 --> 00:02:21.870
In antibody main,and delete
our hard coded text.

00:02:21.870 --> 00:02:28.602
To reference a string variable in
strings to XML, we have to say @string.

00:02:28.602 --> 00:02:30.870
And you'll see some pop up,

00:02:30.870 --> 00:02:34.100
all the strings that are stored
In our string's XML file.

00:02:34.100 --> 00:02:38.280
So we want to say @string then
slash the variable name we want,

00:02:38.280 --> 00:02:40.880
which in this case is
our hello world string.

00:02:40.880 --> 00:02:42.716
Now let's save this and
see what's displayed.

00:02:42.716 --> 00:02:46.025
Hello world, It worked.

00:02:46.025 --> 00:02:49.485
And loading the string instead of
writing it indirectly makes it easy for

00:02:49.485 --> 00:02:51.595
us to include different languages.

00:02:51.595 --> 00:02:52.385
For example,

00:02:52.385 --> 00:02:56.185
to include the string in Spanish, you
just have to open a translation editor.

00:02:57.435 --> 00:03:01.820
Up here we click on the little
world icon, and edit translations.

00:03:01.820 --> 00:03:05.470
We see all our string variables,
action settings, app name, and

00:03:05.470 --> 00:03:07.790
hello world which I'm going to focus on.

00:03:07.790 --> 00:03:10.560
So to add a Spanish
translation to hello world,

00:03:10.560 --> 00:03:12.860
I just click on this world icon again.

00:03:12.860 --> 00:03:16.140
And you can see all of these options for
different languages.

00:03:16.140 --> 00:03:18.670
So I'll scroll all
the way down to Spanish.

00:03:18.670 --> 00:03:22.870
And when I click it, these boxes
appear under a Spanish option.

00:03:22.870 --> 00:03:25.160
Our app name will stay
the same unless we change it.

00:03:25.160 --> 00:03:28.970
And we have to include translations for
Settings, and

00:03:28.970 --> 00:03:31.330
hello world, and
any other strings we added.

00:03:31.330 --> 00:03:33.649
So let's include a Spanish
translation for hello world.

00:03:34.892 --> 00:03:39.390
We go down here to the translation
box and type in our translation.

00:03:39.390 --> 00:03:42.170
Instead of hello world,
we'll have hola mundo.

00:03:43.340 --> 00:03:45.630
And let's add one more
type of translation.

00:03:45.630 --> 00:03:46.640
Let's add a French one.

00:03:48.030 --> 00:03:51.850
So again we go to a world icon and
scroll down to French.

00:03:51.850 --> 00:03:55.470
And we have another column appearing for
the French language.

00:03:55.470 --> 00:03:56.940
And I'll write my translation.

00:03:56.940 --> 00:03:59.410
Instead of hello world,
I'll have bonjour tu la monde.

00:03:59.410 --> 00:04:03.020
And so, all these different translations

00:04:03.020 --> 00:04:07.670
are now assigned to a same
string variable, hello_world.

00:04:07.670 --> 00:04:11.820
Then, for any devices that are in
Spanish or French our app will check in

00:04:11.820 --> 00:04:15.060
here for any Spanish resources or
French resources.

00:04:15.060 --> 00:04:18.040
And if it can't find any,
it will go back to a default value.

00:04:18.040 --> 00:04:22.029
And it's the same process for
any other languages you want to add.

00:04:22.029 --> 00:04:23.970
So localization can
be as simple as that.

