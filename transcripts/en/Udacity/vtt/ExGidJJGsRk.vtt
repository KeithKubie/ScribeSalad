WEBVTT
Kind: captions
Language: en

00:00:00.240 --> 00:00:03.900
Before moving on, I want to make a brief
comment about your goals as a parallel

00:00:03.900 --> 00:00:07.470
algorithm designer with
respect to work and span.

00:00:07.470 --> 00:00:10.190
One goal is to achieve
a degree of work that matches

00:00:10.190 --> 00:00:12.580
the best sequential algorithm.

00:00:12.580 --> 00:00:16.030
I called this goal one of
achieving work optimality.

00:00:16.030 --> 00:00:19.890
Now I want you to hearken back to the
days of sequential algorithm design yore

00:00:19.890 --> 00:00:21.410
just for a sec.

00:00:21.410 --> 00:00:23.960
Now from what you learned back then,
your holy grail was to

00:00:23.960 --> 00:00:28.980
find a linear time or even sub-linear
time sequential algorithm.

00:00:28.980 --> 00:00:31.610
This isn't always possible but
it's a good goal.

00:00:31.610 --> 00:00:33.610
And since you want to be work optimal,

00:00:33.610 --> 00:00:38.010
that grail is the same with respect
to work in the parallel case.

00:00:38.010 --> 00:00:39.980
So what's the holy grail for span?

00:00:39.980 --> 00:00:41.105
So what I'm going to do is,

00:00:41.105 --> 00:00:46.090
I'm always going to ask you to find
algorithms with polylogarithmic span.

00:00:46.090 --> 00:00:49.770
So polylogarithmic means
log n to some power.

00:00:49.770 --> 00:00:55.430
So that might be log n, log squared n,
log cubed n, and so on.

00:00:55.430 --> 00:00:58.970
So always remember this principle
of poly-logarithmic span.

00:00:58.970 --> 00:01:02.010
That's what we'll mean
when we say low span.

00:01:02.010 --> 00:01:04.178
So what's special about poly logs?

00:01:04.178 --> 00:01:08.554
Well, since log n grows asymptotically
a lot more slowly than n, and

00:01:08.554 --> 00:01:13.084
since O(n) is our work goal then
poly-logarithmic span ensures that

00:01:13.084 --> 00:01:17.222
the average available
parallelism grows with n.

00:01:17.222 --> 00:01:20.440
Now, you'll always have to use your
judgement about whether a given parallel

00:01:20.440 --> 00:01:25.300
algorithm has good working span but
please use these ideals as a guide.

