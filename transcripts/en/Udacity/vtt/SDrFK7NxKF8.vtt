WEBVTT
Kind: captions
Language: en

00:00:00.280 --> 00:00:02.110
OK, so how do we figure this out?

00:00:02.110 --> 00:00:05.350
&gt;&gt; Cleverly, so I, when I, when I see things

00:00:05.350 --> 00:00:08.640
like this, I just like to be methodical, so why don't

00:00:08.640 --> 00:00:11.740
we just be methodical so, I'm going to ask the question

00:00:11.740 --> 00:00:15.120
whether the vc dimension is at least one, because it's pretty

00:00:15.120 --> 00:00:17.660
easy to think about and maybe I'll get a feel

00:00:17.660 --> 00:00:20.490
for how to get the right answer that way. OK, so

00:00:20.490 --> 00:00:23.062
is the vs dimension at least one? Well, the answer

00:00:23.062 --> 00:00:25.319
is pretty clearly yes, so if you just put a dot

00:00:26.400 --> 00:00:29.370
on the number line somewhere. You could, yeah like that. You could

00:00:33.690 --> 00:00:37.770
label it positive just by picking any a less than or equal

00:00:37.770 --> 00:00:39.880
to that point and any b greater than or equal to that

00:00:39.880 --> 00:00:43.690
point. So, if, if I were like drawing parentheses or something to

00:00:43.690 --> 00:00:47.442
indicate the interval, I could just put parenthesis around the point and

00:00:47.442 --> 00:00:50.068
that will give me a plus or brackets, that would be fine.

00:00:50.068 --> 00:00:53.650
Okay, so that's that's pretty easy. And if I wanted it to

00:00:53.650 --> 00:00:56.780
be negative, I could just put both of the brackets on either

00:00:56.780 --> 00:00:59.260
side of the point, it doesn't matter, let's say to the left.

00:00:59.260 --> 00:01:00.340
Alright, that make sense Michael?

00:01:00.340 --> 00:01:02.870
&gt;&gt; That's exactly what I was thinking about, yeah.

00:01:02.870 --> 00:01:04.220
Though I would've put the brackets on the right.

00:01:04.220 --> 00:01:07.100
&gt;&gt; Yeah, you would. okay, so then

00:01:07.100 --> 00:01:09.620
we could see...do the same argument for, see

00:01:09.620 --> 00:01:13.350
if the VC dimension is greater than or equal to two. So if I put two

00:01:13.350 --> 00:01:15.062
points on the line, so there are

00:01:15.062 --> 00:01:18.960
only,there're four possibilities I gotta get. Plus plus,

00:01:18.960 --> 00:01:22.360
minus plus, plus minus, and minus minus. Okay,

00:01:22.360 --> 00:01:24.400
so we gotta get plus plus, plus minus,

00:01:24.400 --> 00:01:27.870
minus plus and minus minus. So, the, the first and the

00:01:27.870 --> 00:01:31.360
last one are really easy. Actually they're all easy but you

00:01:31.360 --> 00:01:33.122
can definitely do this. So, if you want to get plus

00:01:33.122 --> 00:01:35.723
plus, you just need to put brackets so that they surround the

00:01:35.723 --> 00:01:39.460
two points, that's good. If you want to get plus minus you

00:01:39.460 --> 00:01:42.240
put the left bracket in the same place and you put the

00:01:42.240 --> 00:01:45.450
right bracket just to the right of the point, yeah, and

00:01:45.450 --> 00:01:49.510
you do the same thing for minus plus and then for minus

00:01:49.510 --> 00:01:54.160
minus you put the brackets on either side of both of the points and

00:01:54.160 --> 00:01:57.195
so, since you like it to the right I'm going to put em to the left.

00:01:57.195 --> 00:02:00.410
&gt;&gt; [LAUGH] Good.

00:02:00.410 --> 00:02:03.060
&gt;&gt; And there you go, that was, that was pretty easy I think. Okay so next

00:02:03.060 --> 00:02:06.480
we need to figure out whether the VC dimensions at least three. So we need three

00:02:06.480 --> 00:02:08.900
dots on a line, three, distinct dots on

00:02:08.900 --> 00:02:11.170
a line. And we've got eight possibilities but

00:02:11.170 --> 00:02:12.550
Michael I don't want you to write down

00:02:12.550 --> 00:02:14.660
those, those eight possiblities because I think I see

00:02:14.660 --> 00:02:17.130
an easy way to answer the question right away.

00:02:17.130 --> 00:02:17.520
&gt;&gt; Excellent

00:02:17.520 --> 00:02:20.500
&gt;&gt; So, this is a lot like the last

00:02:20.500 --> 00:02:23.830
example we did with, with the theta. Except now.

00:02:23.830 --> 00:02:23.930
&gt;&gt; Yeah.

00:02:23.930 --> 00:02:26.560
&gt;&gt; We only have two parameters. And the problem with had with the theta was

00:02:26.560 --> 00:02:30.940
that as we moved the theta over, from left to right, we lost the ability

00:02:30.940 --> 00:02:35.080
to, to, to have a, a, a positive followed by a, a negative. So I

00:02:35.080 --> 00:02:36.980
think there's a similar thing here. So,

00:02:36.980 --> 00:02:40.160
if you label those three points this way.

00:02:40.160 --> 00:02:45.590
Plus, minus, and plus. I don't, I don't think you can

00:02:45.590 --> 00:02:49.660
do that, and that's because in order to get point one

00:02:49.660 --> 00:02:52.550
and point three in the interval, you're going to have to put

00:02:52.550 --> 00:02:55.450
the brackets on both sides of them. So you're going to have

00:02:55.450 --> 00:02:56.860
to put a, a left bracket to the left of the

00:02:56.860 --> 00:02:59.750
first point and a right bracket to the right of the

00:02:59.750 --> 00:03:01.920
third point. And that's the only way to make those two

00:03:01.920 --> 00:03:05.140
plus. But then you're always going to capture the one in the middle.

00:03:05.140 --> 00:03:10.240
So you can't actually shatter three points, with this hypothesis class.

00:03:10.240 --> 00:03:12.510
&gt;&gt; Now, you have to argue though, that

00:03:12.510 --> 00:03:14.220
there isn't some other way you could arrange the

00:03:14.220 --> 00:03:16.550
three points. I don't know like, I don't know,

00:03:16.550 --> 00:03:19.060
stacking them on top of each other or something.

00:03:20.540 --> 00:03:22.800
&gt;&gt; You mean vertically on top of one each other?

00:03:22.800 --> 00:03:23.050
&gt;&gt; Yeah.

00:03:23.050 --> 00:03:24.840
&gt;&gt; Well then they wouldn't be in R, they'd be in R2.

00:03:24.840 --> 00:03:27.940
&gt;&gt; Well no, just like right on top of each other.

00:03:27.940 --> 00:03:29.110
&gt;&gt; Well then they're all the same point.

00:03:29.110 --> 00:03:30.180
&gt;&gt; And you

00:03:30.180 --> 00:03:33.120
can't label them. Again, you have the same problem that you can't label one of

00:03:33.120 --> 00:03:35.440
them negative and the other ones positive if they're all on top of each other.

00:03:35.440 --> 00:03:35.600
&gt;&gt; Right.

00:03:35.600 --> 00:03:38.340
&gt;&gt; So, so there isn't, there just isn't any way to set up

00:03:38.340 --> 00:03:42.330
these three points so that you're able to assign them all possible labels.

00:03:42.330 --> 00:03:42.780
&gt;&gt; Right.

00:03:42.780 --> 00:03:45.560
&gt;&gt; So, good, so that gives us two as our answer here.

00:03:45.560 --> 00:03:47.650
So, by the way, I think that you said something I think that's

00:03:47.650 --> 00:03:53.040
really important. In order to prove the lower bound, in order to prove

00:03:53.040 --> 00:03:55.210
one and two, all we had to do was come up with an

00:03:55.210 --> 00:03:57.210
example where we could chatter, right?

00:03:57.210 --> 00:03:58.762
&gt;&gt; Yes, that's exactly right.

00:03:58.762 --> 00:04:01.690
&gt;&gt; Right, so so that's good and that's

00:04:01.690 --> 00:04:03.940
that's really nice because otherwise we're in a

00:04:03.940 --> 00:04:05.880
heap of trouble [LAUGH] if we have to

00:04:05.880 --> 00:04:07.710
show that you can shatter every single thing. We

00:04:07.710 --> 00:04:08.890
just have to show that you can shatter

00:04:08.890 --> 00:04:12.180
one thing. So, it exists. So that whole VC

00:04:12.180 --> 00:04:15.320
dimension is really a...there exists some set of

00:04:15.320 --> 00:04:18.300
points you can shatter, not you can shatter everything.

00:04:18.300 --> 00:04:20.620
&gt;&gt; That's right, and what would be an example of points that you couldn't

00:04:20.620 --> 00:04:23.780
shatter yeah, a pair of points that you couldn't shatter?

00:04:23.780 --> 00:04:25.540
&gt;&gt; Well, the ones on top of one another.

00:04:25.540 --> 00:04:26.980
&gt;&gt; Yeah, exactly, because you wouldn't

00:04:26.980 --> 00:04:28.170
be able to assign them different labels.

00:04:28.170 --> 00:04:28.500
&gt;&gt; Right.

00:04:28.500 --> 00:04:29.800
&gt;&gt; So that would be a really bad choice,

00:04:29.800 --> 00:04:31.400
and here all we need is a good choice.

00:04:31.400 --> 00:04:33.960
&gt;&gt; Right. So, if you make good choices you can

00:04:33.960 --> 00:04:37.340
shatter things, which sounds more violent than I intended. Okay

00:04:37.340 --> 00:04:41.120
but, in the third case of the VC dimension, it

00:04:41.120 --> 00:04:45.580
wasn't enough to show an example that you couldn't shatter, because,

00:04:45.580 --> 00:04:47.690
then you could do the same thing as you

00:04:47.690 --> 00:04:50.050
point out, with a VC dimension of two. Instead you

00:04:50.050 --> 00:04:54.240
have to prove that no example exists. So, there does

00:04:54.240 --> 00:04:57.620
not exist or a for all not word or something.

00:04:57.620 --> 00:04:59.060
&gt;&gt; For all, not.

00:04:59.060 --> 00:05:03.980
&gt;&gt; [LAUGH] Exactly. So, that, that's a, that's an interesting set of set of

00:05:03.980 --> 00:05:06.170
requirements there, right? So, proving a lower

00:05:06.170 --> 00:05:10.730
bound seems easier than proving an upper bound.

00:05:10.730 --> 00:05:13.950
&gt;&gt; Though it's interesting cause in this case, in cases

00:05:13.950 --> 00:05:16.360
one and two, you had to show that all the

00:05:16.360 --> 00:05:19.840
different combinations were covered, whereas in this last case we

00:05:19.840 --> 00:05:22.810
just had to give one combination that couldn't possibly be covered.

00:05:22.810 --> 00:05:24.790
&gt;&gt; Yeah, but it couldn't possibly be covered no matter

00:05:24.790 --> 00:05:27.720
what we did. No matter what the input arrangement was.

00:05:27.720 --> 00:05:28.000
&gt;&gt; Right.

00:05:28.000 --> 00:05:28.720
&gt;&gt; Yeah.

00:05:28.720 --> 00:05:33.300
&gt;&gt; Whereas in the first case, I had to show all possibilities.

00:05:33.300 --> 00:05:36.170
I mean, you know, all possible labelings but only for one example

00:05:36.170 --> 00:05:40.180
of orderings or one collection of points. So just messily

00:05:40.180 --> 00:05:44.570
doing some bad predicate calculus to, nail down what you're saying.

00:05:44.570 --> 00:05:46.320
That when we say that the answer is yes, we're

00:05:46.320 --> 00:05:48.370
saying that there exists a set of points of a certain

00:05:48.370 --> 00:05:51.270
size, since that for all labelings, no matter how we,

00:05:51.270 --> 00:05:53.940
we want to label it. There is some hypothesis that works for

00:05:53.940 --> 00:05:56.850
that labeling. But to say no, we have to do

00:05:56.850 --> 00:06:01.670
the legation of that which is not exist for all exist.

00:06:01.670 --> 00:06:05.000
Which, by standard logic rules says that, that means

00:06:05.000 --> 00:06:06.860
for all points, no matter how you arrange the

00:06:06.860 --> 00:06:10.390
points, it's not the case that for all labels.

00:06:10.390 --> 00:06:14.130
There exists hypothesis which again DeMorgan's Law its not against

00:06:14.130 --> 00:06:16.590
DeMorgan's Law to to apply this idea that says

00:06:16.590 --> 00:06:19.220
that's the same as for all arrangements of points

00:06:19.220 --> 00:06:22.900
there's some labeling where there's no hypothesis that's going

00:06:22.900 --> 00:06:25.350
to work and that's exactly how you made your argument.

00:06:25.350 --> 00:06:27.340
&gt;&gt; Huh, except I didn't use DeMorgan's Law and

00:06:27.340 --> 00:06:31.120
upside down a's and backwards z's. Oh you did, oh you did.

00:06:31.120 --> 00:06:33.300
&gt;&gt; Hm. I am the [INAUDIBLE] powerful.

