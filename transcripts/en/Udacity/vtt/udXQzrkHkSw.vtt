WEBVTT
Kind: captions
Language: en

00:00:00.300 --> 00:00:01.920
As you've noticed, we aren't actually testing

00:00:01.920 --> 00:00:04.170
that new function yet. Fortunately, we have a

00:00:04.170 --> 00:00:05.890
pretty good spot in doing background to

00:00:05.890 --> 00:00:08.430
do that. After all, right here we've already

00:00:08.430 --> 00:00:13.227
parsed everything we need to call that function. So, we can just call long

00:00:13.227 --> 00:00:18.843
locationId equals addLocation cityName locationQuery

00:00:18.843 --> 00:00:25.411
citylatitude, and citylongitude. It would be useful for our contract to have

00:00:25.411 --> 00:00:28.715
another method, one that converts a date object

00:00:28.715 --> 00:00:32.800
to the format our database uses. Note that Android

00:00:32.800 --> 00:00:34.840
Studio may have trouble importing this data object,

00:00:34.840 --> 00:00:37.930
since Java has two day classes, one in databases,

00:00:37.930 --> 00:00:42.680
and one in java.util. We want java.util.date. Back

00:00:42.680 --> 00:00:45.180
in the FetchWeatherTask, we're going to collect the data

00:00:45.180 --> 00:00:49.090
from JSON into the weather array. All right, so

00:00:49.090 --> 00:00:50.530
we now have a whole bunch of data that

00:00:50.530 --> 00:00:53.300
needs to be inserted. Guess what we're going to do next?

