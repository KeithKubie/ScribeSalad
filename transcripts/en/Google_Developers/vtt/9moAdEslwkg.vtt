WEBVTT
Kind: captions
Language: en

00:00:08.370 --> 00:00:08.870
Hi.

00:00:08.870 --> 00:00:12.400
I'm Ibrahim Ulukaya from YouTube
API Developer Relations team.

00:00:12.400 --> 00:00:14.090
If you are an apps
developer, and you

00:00:14.090 --> 00:00:17.960
are trying to find the best way
to start integrating YouTube

00:00:17.960 --> 00:00:20.740
APIs into your app, we have
great news for you guys.

00:00:20.740 --> 00:00:24.480
We open sourced YouTube
Direct Lite for iOS recently.

00:00:24.480 --> 00:00:27.770
And this project demonstrates
the best practices

00:00:27.770 --> 00:00:30.340
for using the YouTube
APIs inside your app,

00:00:30.340 --> 00:00:34.560
such as using the YouTube Data
API, YouTube Data API uploads,

00:00:34.560 --> 00:00:37.860
as well as the iFrame
embedded player.

00:00:37.860 --> 00:00:40.360
And YouTube Direct
Lite is actually

00:00:40.360 --> 00:00:43.510
a platform itself for that.

00:00:43.510 --> 00:00:47.830
People can solicit
videos from their users,

00:00:47.830 --> 00:00:51.410
so that their users can submit
videos to their playlist,

00:00:51.410 --> 00:00:54.300
so that they can
moderate and choose

00:00:54.300 --> 00:00:58.160
which videos to show
up in that playlist.

00:00:58.160 --> 00:01:02.870
And for that, inside the
app, users can actually

00:01:02.870 --> 00:01:05.940
use this app so that they
can record any video,

00:01:05.940 --> 00:01:09.130
or they can pick any video that
they have recorded earlier,

00:01:09.130 --> 00:01:12.880
and upload to YouTube and
submit to your playlist,

00:01:12.880 --> 00:01:15.740
as well as they can pick any
video they already uploaded

00:01:15.740 --> 00:01:19.790
to YouTube before, and then
still submit to your playlist.

00:01:19.790 --> 00:01:23.720
And let's go to my screen and
actually see it from here.

00:01:23.720 --> 00:01:26.470
So the project is
also under github.

00:01:26.470 --> 00:01:31.640
It's under
 github.com/youtube/yt-direct-lite-iOS.

00:01:31.640 --> 00:01:34.910
And in this project, we are
using the Objective-C client

00:01:34.910 --> 00:01:38.360
libraries for Google
APIs so that it handles

00:01:38.360 --> 00:01:41.150
the authorization and
it makes it really easy

00:01:41.150 --> 00:01:45.820
to talk with the
YouTube Data API.

00:01:45.820 --> 00:01:52.198
Let's go to project itself and
see the project from there.

00:01:52.198 --> 00:01:57.320
Here actually starts with
the authorization OAuth 2.0,

00:01:57.320 --> 00:01:59.926
and [? I key ?]
[? in the ?] authorization.

00:02:05.760 --> 00:02:08.530
And we are logging
into my account,

00:02:08.530 --> 00:02:12.280
and we are authorizing
this app to use my account.

00:02:15.189 --> 00:02:16.980
The app is going through,
and it's actually

00:02:16.980 --> 00:02:21.460
going through my playlist
style plus playlist,

00:02:21.460 --> 00:02:24.310
and pulling all the
playlist items from there.

00:02:24.310 --> 00:02:28.640
And through the videos list
called, for all these videos,

00:02:28.640 --> 00:02:33.230
it brings up the videos'
titles, the view count,

00:02:33.230 --> 00:02:35.990
as well as the video duration.

00:02:35.990 --> 00:02:39.420
And it also bring in the
YouTube thumbnails as well.

00:02:39.420 --> 00:02:42.300
So if you click in
off the videos here,

00:02:42.300 --> 00:02:45.180
we are actually [? instating ?]
the YouTube iFrame embedded

00:02:45.180 --> 00:02:46.520
player.

00:02:46.520 --> 00:02:49.380
And here it's using
Apple's own streamer.

00:02:49.380 --> 00:02:53.390
If you want to go for the full
screen, that's one option.

00:02:53.390 --> 00:02:56.640
Or from the iFrame
embedded playing options,

00:02:56.640 --> 00:02:59.200
you can set plays
inline [? once ?]

00:02:59.200 --> 00:03:02.710
so the player actually
will play the video

00:03:02.710 --> 00:03:03.862
inside the application.

00:03:09.090 --> 00:03:12.305
So after seeing any video, we
can submit it to a playlist.

00:03:16.590 --> 00:03:20.430
Or we can record a complete
new video with the camera.

00:03:20.430 --> 00:03:24.410
Or we can pull one of
the videos I have already

00:03:24.410 --> 00:03:28.130
saved in my iOS device.

00:03:28.130 --> 00:03:31.470
And from there I can
actually play the video

00:03:31.470 --> 00:03:33.790
before, same thing,
and if I'm sure I want

00:03:33.790 --> 00:03:42.990
to upload this video playing,
I can set a new title,

00:03:42.990 --> 00:03:44.600
and I can start the video.

00:03:44.600 --> 00:03:47.270
Right now we are using the
YouTube Data API resumable

00:03:47.270 --> 00:03:52.470
uploads, so the upload is going
on in the background, as well.

00:03:52.470 --> 00:03:54.860
And once the
upload's finished, it

00:03:54.860 --> 00:04:00.940
will show us its ID, the video
ID that's already uploaded.

00:04:00.940 --> 00:04:06.410
See the video is uploaded,
we get the video's ID,

00:04:06.410 --> 00:04:09.350
and this video, besides
uploading to my account,

00:04:09.350 --> 00:04:12.180
it already is submitted
to the playlist

00:04:12.180 --> 00:04:14.730
that I want to submit for.

00:04:14.730 --> 00:04:18.040
Here was the YouTube
Direct Lite for iOS.

00:04:18.040 --> 00:04:20.910
So in this project,
we demonstrated

00:04:20.910 --> 00:04:23.415
the YouTube Data
APIs, such as you

00:04:23.415 --> 00:04:26.510
actually pull from
the user's playlist.

00:04:26.510 --> 00:04:28.890
We used the iFrame
embedded player

00:04:28.890 --> 00:04:33.580
so that we will be able to play
those users' YouTube videos,

00:04:33.580 --> 00:04:37.030
as well as we used the data API
uploads, the resumable uploads,

00:04:37.030 --> 00:04:40.720
so that we were able to
upload videos to YouTube.

00:04:40.720 --> 00:04:46.180
And you can use this project to
start your application, instead

00:04:46.180 --> 00:04:50.290
of starting from scratch,
as well as we can go here

00:04:50.290 --> 00:04:53.290
to find the best
examples, as well.

00:04:53.290 --> 00:04:54.720
Thanks for listening today.

00:04:54.720 --> 00:04:57.350
I am Ibrahim Ulukaya
from YouTube.

