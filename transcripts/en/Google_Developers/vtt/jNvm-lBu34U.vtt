WEBVTT
Kind: captions
Language: en

00:00:08.780 --> 00:00:10.930
MALE SPEAKER: Questions
from the audience?

00:00:10.930 --> 00:00:15.280
And like I said keep
it concise and let's

00:00:15.280 --> 00:00:17.045
get-- so first question.

00:00:17.045 --> 00:00:17.920
Who's got a question?

00:00:20.500 --> 00:00:23.790
So the question is- where's
the hardware in all of this?

00:00:23.790 --> 00:00:26.170
Are we lagging behind
on the hardware side?

00:00:26.170 --> 00:00:29.390
What do you see coming
around the corner?

00:00:29.390 --> 00:00:31.360
TONY: Don is in the restroom.

00:00:31.360 --> 00:00:33.810
He should answer this.

00:00:33.810 --> 00:00:35.940
I think he effectively
answered it.

00:00:35.940 --> 00:00:36.720
Here you go.

00:00:36.720 --> 00:00:38.247
Did you hear the question?

00:00:38.247 --> 00:00:40.532
DON: I did not
hear the question.

00:00:40.532 --> 00:00:41.720
TONY: It's about hardware.

00:00:41.720 --> 00:00:42.690
One more time--

00:00:42.690 --> 00:00:44.780
DON: One more time,
what is the question?

00:00:44.780 --> 00:00:47.010
TONY: Where is the 60
frames a second hardware?

00:00:47.010 --> 00:00:50.090
When is that coming,
is the question.

00:00:50.090 --> 00:00:52.130
DON: The 60 frames
a second hardware.

00:00:52.130 --> 00:00:55.230
TONY: The true 60 frames per
second enabling hardware,

00:00:55.230 --> 00:00:56.630
when is that coming?

00:00:56.630 --> 00:01:01.150
DON: For PS4 or just in general?

00:01:01.150 --> 00:01:02.410
OK.

00:01:02.410 --> 00:01:03.960
Well I mean you
can hit that now.

00:01:03.960 --> 00:01:08.400
It just really depends
on your application.

00:01:08.400 --> 00:01:10.210
So I mean it's there.

00:01:10.210 --> 00:01:15.110
You can boot up the FPS
tracker and actually see

00:01:15.110 --> 00:01:16.140
what you're doing.

00:01:16.140 --> 00:01:18.760
And you can
certainly hit 60 FPS,

00:01:18.760 --> 00:01:24.102
but yeah, I'm not really sure
what we're getting at here.

00:01:24.102 --> 00:01:25.810
TONY: All right I'm
going to add to that.

00:01:25.810 --> 00:01:27.170
I think Don already answered it.

00:01:27.170 --> 00:01:30.910
Here's the thing-
any application

00:01:30.910 --> 00:01:34.022
you write can run at
one frame per second,

00:01:34.022 --> 00:01:35.900
on really good hardware.

00:01:35.900 --> 00:01:38.160
It's all about how you
write the software.

00:01:38.160 --> 00:01:41.100
Don spoke about earlier.

00:01:41.100 --> 00:01:43.340
So, yeah, there's going
to be some sensitivity.

00:01:43.340 --> 00:01:46.100
Some devices are going to
run faster than others.

00:01:46.100 --> 00:01:49.270
But in general, I think you
need to performance profile

00:01:49.270 --> 00:01:51.110
for any device
you're building for,

00:01:51.110 --> 00:01:54.800
and you get 60 FPS on anything,
if you build your application

00:01:54.800 --> 00:01:57.234
correctly.

00:01:57.234 --> 00:01:58.206
Do you add to that?

00:01:58.206 --> 00:01:59.664
He doesn't want to touch that.

00:01:59.664 --> 00:02:02.580
Next?

00:02:02.580 --> 00:02:04.190
MALE SPEAKER: 10
foot pole, anyone?

00:02:04.190 --> 00:02:05.020
So yes?

00:02:05.020 --> 00:02:07.770
DON: So the question
was, can you

00:02:07.770 --> 00:02:11.820
browse WebGL content on the PS4?

00:02:11.820 --> 00:02:14.830
The answer is no, not
at this current time.

00:02:18.330 --> 00:02:19.897
Don't look at me like that.

00:02:19.897 --> 00:02:21.388
[LAUGHTER]

00:02:21.388 --> 00:02:24.370
AUDIENCE: Follow up, why?

00:02:24.370 --> 00:02:31.790
DON: I mean obviously, we
want to enable more and more

00:02:31.790 --> 00:02:33.512
for our browser.

00:02:33.512 --> 00:02:37.860
At this current
time, we don't enable

00:02:37.860 --> 00:02:41.370
WebGL for just general
things on the web.

00:02:41.370 --> 00:02:45.230
That could potentially change
at some point in the future,

00:02:45.230 --> 00:02:50.150
but I can't really say
when or where or why that

00:02:50.150 --> 00:02:51.840
would be the case.

00:02:51.840 --> 00:02:53.930
So I figured I
get this question,

00:02:53.930 --> 00:03:01.010
but I very much apologize
for my evasive answer there.

00:03:03.570 --> 00:03:06.140
TONY: The question has
there been much acceptance

00:03:06.140 --> 00:03:10.740
of the glTF format in the
general web community so far?

00:03:10.740 --> 00:03:11.970
Right?

00:03:11.970 --> 00:03:13.220
Answer, no.

00:03:13.220 --> 00:03:14.870
But there's a good
reason for that,

00:03:14.870 --> 00:03:19.060
which is we're really not
promoting it too much yet.

00:03:19.060 --> 00:03:20.580
I talk about in my talks.

00:03:20.580 --> 00:03:23.940
Fabrice mentioned it in passing.

00:03:23.940 --> 00:03:25.090
It's a new format.

00:03:25.090 --> 00:03:27.506
In fact, we have not even
published a specification yet.

00:03:27.506 --> 00:03:29.380
But we're doing all the
work out in the open.

00:03:29.380 --> 00:03:32.450
The spec itself is written in
a JSON schema that you can go

00:03:32.450 --> 00:03:33.440
look at.

00:03:33.440 --> 00:03:35.060
There's like zero pros.

00:03:35.060 --> 00:03:36.890
If you want a tutorial
on it, forget it.

00:03:36.890 --> 00:03:39.015
You got to come talk to me
and Fabrice or whatever.

00:03:39.015 --> 00:03:41.050
But it's all being
done out in the open.

00:03:41.050 --> 00:03:43.800
We're building prototypes
out in the open.

00:03:43.800 --> 00:03:46.590
Fabrice has got one on
the montage JS framework.

00:03:46.590 --> 00:03:48.890
I've built one on
three.js that loads glTF.

00:03:48.890 --> 00:03:50.612
I showed it to you tonight.

00:03:50.612 --> 00:03:52.320
So all that's being
done out in the open,

00:03:52.320 --> 00:03:54.450
but the Khronos Group-- and
this is a Khronos project--

00:03:54.450 --> 00:03:56.158
these are the people
who made the COLLADA

00:03:56.158 --> 00:03:59.560
format and the WebGL
standard, in fact--

00:03:59.560 --> 00:04:03.400
are doing it as an R&amp;D
project that at some point

00:04:03.400 --> 00:04:05.970
we want to promote as
maybe a new standard.

00:04:05.970 --> 00:04:08.520
Essentially as
the kind of format

00:04:08.520 --> 00:04:10.600
that you would do with
COLLADA back in the day-

00:04:10.600 --> 00:04:13.680
get all your data out of
your modeling packaging

00:04:13.680 --> 00:04:15.900
and into an application,
but this one for the web.

00:04:15.900 --> 00:04:17.949
We're going to do that
someday, maybe this year,

00:04:17.949 --> 00:04:19.240
but we did not want to rush it.

00:04:19.240 --> 00:04:22.270
We actually spoke about trying
to standardize this this year.

00:04:22.270 --> 00:04:24.409
Game developers conference
coming up in March--

00:04:24.409 --> 00:04:25.950
we want to get the
standard all ready

00:04:25.950 --> 00:04:27.480
and get people
using and all that.

00:04:27.480 --> 00:04:29.950
And then Remi, who's not here
tonight-- Remi Arnaud who

00:04:29.950 --> 00:04:31.970
created COLLADA--
said, why do we get it

00:04:31.970 --> 00:04:35.540
right first a little bit
more, get developers using it,

00:04:35.540 --> 00:04:36.990
and then we'll
start promoting it?

00:04:36.990 --> 00:04:38.906
And then we'll start
trying to standardize it?

00:04:38.906 --> 00:04:42.090
So long story short, it's
still a little bit early.

00:04:42.090 --> 00:04:44.050
I am having individual
conversations

00:04:44.050 --> 00:04:46.101
with lots of people
who want to try

00:04:46.101 --> 00:04:47.600
to build it into
an application now.

00:04:47.600 --> 00:04:51.214
But we're talking about kind of
a 0.8 version of the formats.

00:04:51.214 --> 00:04:52.130
Really not cooked yet.

00:04:52.130 --> 00:04:53.172
So that was question one.

00:04:53.172 --> 00:04:54.130
MALE SPEAKER: Right on.

00:04:54.130 --> 00:04:55.720
We only have one
question per person--

00:04:55.720 --> 00:04:56.290
TONY: Oh there we go.

00:04:56.290 --> 00:04:57.030
Sorry, Josh.

00:04:57.030 --> 00:04:58.530
MALE SPEAKER: Come
back to that one.

00:04:58.530 --> 00:05:01.600
We have other
people-- go for it.

00:05:01.600 --> 00:05:03.130
DON: I mean honestly I--

00:05:03.130 --> 00:05:04.546
MALE SPEAKER:
Repeat the question.

00:05:04.546 --> 00:05:09.020
DON: OK so he was asking if
I actually had more time,

00:05:09.020 --> 00:05:14.690
what exactly would I
do further on the PS4?

00:05:14.690 --> 00:05:19.820
I mean I really felt as though
I hit all the things I wanted

00:05:19.820 --> 00:05:24.620
to hit, in terms of the
whole optimization thing.

00:05:24.620 --> 00:05:28.230
Obviously, there's a lot of
other people's code involved,

00:05:28.230 --> 00:05:30.860
because this was
basically a port.

00:05:30.860 --> 00:05:34.400
I mean if I were doing the
whole thing-- me, myself,

00:05:34.400 --> 00:05:38.460
and I-- I'd probably avoid
JavaScript and probably

00:05:38.460 --> 00:05:41.360
go with something like Dart.

00:05:41.360 --> 00:05:46.120
Especially now, because
at this point in time,

00:05:46.120 --> 00:05:48.510
it's better to think of
JavaScript as nothing more

00:05:48.510 --> 00:05:52.690
than assembly language, and
use the tools, and languages

00:05:52.690 --> 00:05:55.350
you actually feel productive in.

00:05:55.350 --> 00:05:58.870
So in that sense, I feel
a whole hell of a lot

00:05:58.870 --> 00:06:00.070
more productive in Dart.

00:06:00.070 --> 00:06:02.150
And I did kind of
want to go that route,

00:06:02.150 --> 00:06:05.050
but didn't want to add
any additional overhead,

00:06:05.050 --> 00:06:11.010
because I was interfacing with
a bunch of JavaScript code.

00:06:11.010 --> 00:06:14.170
TONY: So the demo I showed
earlier, the Unreal Engine

00:06:14.170 --> 00:06:17.960
demo, was done with this
technology called Emscripten.

00:06:17.960 --> 00:06:21.820
Emscripten takes code that has
been compiled by a C compiler

00:06:21.820 --> 00:06:25.660
or C++ compiler into what
they call intermediate code.

00:06:25.660 --> 00:06:28.740
It's basically byte
codes that ultimately

00:06:28.740 --> 00:06:31.490
get turned into machine language
by the time the executable has

00:06:31.490 --> 00:06:31.990
been linked.

00:06:31.990 --> 00:06:34.281
So if you're building something
for Windows or the Mac,

00:06:34.281 --> 00:06:36.220
you'll use a C compiler
and ultimately, you'll

00:06:36.220 --> 00:06:37.020
get machine code.

00:06:37.020 --> 00:06:40.310
But it goes through this thing
called LLVM, intermediate code.

00:06:40.310 --> 00:06:44.590
Emscripten takes that LLVM and
somehow, miraculously, turns it

00:06:44.590 --> 00:06:49.070
into JavaScript that can be
executed in your web browser.

00:06:49.070 --> 00:06:52.350
The tool was built at
Mozilla, the Firefox folks.

00:06:52.350 --> 00:06:54.916
And they actually have done
a bunch of different ports

00:06:54.916 --> 00:06:55.790
and projects with it.

00:06:55.790 --> 00:06:57.980
The most notable one being
this Unreal Engine level

00:06:57.980 --> 00:06:59.700
I showed you.

00:06:59.700 --> 00:07:00.910
They did this in a week.

00:07:00.910 --> 00:07:03.110
Now I'm sure this was
a week of like five

00:07:03.110 --> 00:07:08.390
people on each team for
Mozilla and Unreal, Epic Games.

00:07:08.390 --> 00:07:10.100
I don't have the
details on that,

00:07:10.100 --> 00:07:12.710
but I'm guessing, because
it's pretty involved.

00:07:12.710 --> 00:07:15.470
I am now currently working on
an Emscripten project myself,

00:07:15.470 --> 00:07:18.910
so I could tell you firsthand,
I went back and did something

00:07:18.910 --> 00:07:21.550
I haven't done and didn't
think I would do for years,

00:07:21.550 --> 00:07:24.658
which was get a Windows machine.

00:07:24.658 --> 00:07:27.080
[LAUGHTER]

00:07:27.080 --> 00:07:29.160
I'm even running Windows 8.

00:07:29.160 --> 00:07:30.950
I won't say anymore.

00:07:30.950 --> 00:07:32.580
I got a C++ compiler.

00:07:32.580 --> 00:07:33.319
That was OK.

00:07:33.319 --> 00:07:35.110
I mean it's been a few
years, but I did it.

00:07:35.110 --> 00:07:38.020
I compiled stuff, and then I
ran this Emscripten tool on it.

00:07:38.020 --> 00:07:39.340
And it actually is working.

00:07:39.340 --> 00:07:41.590
And I've spent about two
weeks on this project I'm on.

00:07:41.590 --> 00:07:43.360
I can't say what it is.

00:07:43.360 --> 00:07:45.860
And it's not well documented.

00:07:45.860 --> 00:07:47.359
My biggest complaint,
if anything,

00:07:47.359 --> 00:07:48.900
is the tools seem
to work, but you've

00:07:48.900 --> 00:07:50.670
got to spend a
lot of time trying

00:07:50.670 --> 00:07:52.290
to intuit what's going on.

00:07:52.290 --> 00:07:54.205
But what I showed
you-- that 60 frames

00:07:54.205 --> 00:07:55.580
a second, well 30
on my machine--

00:07:55.580 --> 00:07:58.700
but I've seen running at 60
on some higher end hardware,

00:07:58.700 --> 00:08:00.620
does a great job.

00:08:00.620 --> 00:08:03.509
We're getting this really
great frame rate from something

00:08:03.509 --> 00:08:05.050
that, if you think
about it-- I don't

00:08:05.050 --> 00:08:07.197
know if you know
Unreal-- the app itself,

00:08:07.197 --> 00:08:09.030
the games are built in
a scripting language.

00:08:09.030 --> 00:08:13.200
So we not only have C++ code
compiled into JavaScript,

00:08:13.200 --> 00:08:15.760
the JavaScript itself is
running a language interpreter

00:08:15.760 --> 00:08:18.690
for Unreal script, which
the game was written in.

00:08:18.690 --> 00:08:21.052
So we have a
cross-compiled application

00:08:21.052 --> 00:08:22.760
that's got an embedded
scripting language

00:08:22.760 --> 00:08:23.967
interpreter running in it.

00:08:23.967 --> 00:08:26.050
And if any of you guys
know what interpreters are,

00:08:26.050 --> 00:08:27.510
you know that's a big deal.

00:08:27.510 --> 00:08:29.410
And I mean you saw yourself.

00:08:29.410 --> 00:08:31.240
That was kind of amazing.

00:08:31.240 --> 00:08:33.559
Long story short is
Emscripten is great,

00:08:33.559 --> 00:08:37.320
but you've got to suffer through
a lot of lack of documentation.

00:08:37.320 --> 00:08:38.906
And Google's your
friend on that one.

00:08:38.906 --> 00:08:40.280
There's a lot of
people out there

00:08:40.280 --> 00:08:42.080
who've suffered through
the same problems as you

00:08:42.080 --> 00:08:43.890
and that's what I've
been doing this week.

00:08:43.890 --> 00:08:44.490
There you go.

00:08:44.490 --> 00:08:47.410
MALE SPEAKER: OK so me
coming from the real time

00:08:47.410 --> 00:08:51.010
communications aspect, I think--

00:08:51.010 --> 00:08:53.125
[AUDIENCE]

00:08:53.125 --> 00:08:53.833
MALE SPEAKER: No.

00:08:56.730 --> 00:08:59.560
Yes, so the first
question was, what

00:08:59.560 --> 00:09:03.630
is the question that I should
be asking a year from now?

00:09:03.630 --> 00:09:06.990
What are the challenges
going forward, right?

00:09:06.990 --> 00:09:09.860
So one of the biggest
hypes these days

00:09:09.860 --> 00:09:12.000
is connected devices, right?

00:09:12.000 --> 00:09:15.190
This is where the real
time communication

00:09:15.190 --> 00:09:20.120
plays an absolutely critical
role- how it's all done,

00:09:20.120 --> 00:09:21.440
how it's all managed.

00:09:21.440 --> 00:09:24.290
We have these gazillions
of devices out there.

00:09:24.290 --> 00:09:26.950
Another absolutely critical
question in this space,

00:09:26.950 --> 00:09:28.780
is security.

00:09:28.780 --> 00:09:31.810
Once you open up your home,
you open up your health,

00:09:31.810 --> 00:09:34.500
you open up basically your
personal stuff, that's

00:09:34.500 --> 00:09:36.597
going to be absolutely crucial.

00:09:36.597 --> 00:09:38.180
And then the question
is, what happens

00:09:38.180 --> 00:09:41.370
when things just don't work-
like you are on a subway,

00:09:41.370 --> 00:09:44.290
or you are you're
on an airplane?

00:09:44.290 --> 00:09:48.280
These are kind of the tough
questions in our space.

00:09:48.280 --> 00:09:50.980
TONY: I think in
a year from now,

00:09:50.980 --> 00:09:55.900
I'm going to be asking this-
why are people still writing

00:09:55.900 --> 00:09:59.130
JavaScript to do basic stuff?

00:09:59.130 --> 00:10:03.830
Why am I not authoring the tags?

00:10:03.830 --> 00:10:06.990
I mean JavaScript's fine-- pick
your language, Dart, whatever.

00:10:06.990 --> 00:10:11.310
Why am I not just creating
content fluidly just in a web

00:10:11.310 --> 00:10:14.100
browser, 3D multimedia
content, the way

00:10:14.100 --> 00:10:16.226
I used to with some HTML tags?

00:10:16.226 --> 00:10:17.350
I mean, JavaScript's great.

00:10:17.350 --> 00:10:20.160
Canvas is great God
bless all these API's.

00:10:20.160 --> 00:10:22.000
We wouldn't be where
we are without them,

00:10:22.000 --> 00:10:25.170
but why am I solving the same
problems I was last year?

00:10:25.170 --> 00:10:29.580
So in a year from now, if there
aren't tags for doing your 3D,

00:10:29.580 --> 00:10:32.287
and your other rich
media, I'm going

00:10:32.287 --> 00:10:33.620
to start asking those questions.

00:10:37.760 --> 00:10:41.700
DON: Actually with yours, I mean
some of the stuff with Polymer

00:10:41.700 --> 00:10:44.580
looks very promising.

00:10:44.580 --> 00:10:48.000
I believe there are
actually some demos where

00:10:48.000 --> 00:10:51.366
you can do that sort of
thing already, and just sort

00:10:51.366 --> 00:10:54.240
of do markup in 3D.

00:10:54.240 --> 00:10:56.720
So it could very
well be a thing.

00:10:56.720 --> 00:10:57.710
AUDIENCE: But Don--

00:10:57.710 --> 00:10:58.391
DON: Yeah?

00:10:58.391 --> 00:11:00.500
AUDIENCE: What will
you do next year?

00:11:00.500 --> 00:11:02.350
[LAUGHTER]

00:11:02.350 --> 00:11:05.490
DON: That is a
very good question.

00:11:05.490 --> 00:11:06.886
TONY: Don's boss is in the room.

00:11:06.886 --> 00:11:07.635
DON: Yeah exactly.

00:11:12.730 --> 00:11:16.570
Well I mean, more or less with
the web, where it's going,

00:11:16.570 --> 00:11:19.130
I am very interested
in how we can

00:11:19.130 --> 00:11:22.960
build better
applications on the web.

00:11:22.960 --> 00:11:25.225
WebGL is certainly
awesome and I enjoy,

00:11:25.225 --> 00:11:29.200
yet-- you're like, get
to the point already.

00:11:29.200 --> 00:11:30.010
Thank you, Teo.

00:11:33.070 --> 00:11:36.040
I'm more or less interested
in seeing where the web goes,

00:11:36.040 --> 00:11:38.025
how we're going to
push it, and sort

00:11:38.025 --> 00:11:40.454
of what the new
technologies are.

00:11:40.454 --> 00:11:42.120
AUDIENCE: Where are
we going to push it?

00:11:42.120 --> 00:11:45.670
DON: Well I mean I think
web components are really

00:11:45.670 --> 00:11:49.045
where the web it's going to go,
because developing with the DOM

00:11:49.045 --> 00:11:50.060
is pretty shitty.

00:11:52.680 --> 00:11:57.550
And we need to, more or less,
keep pushing more of our apps

00:11:57.550 --> 00:11:58.520
to the web.

00:11:58.520 --> 00:11:59.940
I mean it's a great idea.

00:11:59.940 --> 00:12:01.535
You get the collaboration.

00:12:01.535 --> 00:12:02.410
You get the mash ups.

00:12:02.410 --> 00:12:04.290
You get all these things.

00:12:04.290 --> 00:12:07.960
And that's really where
applications should be going.

00:12:07.960 --> 00:12:11.860
I am very interested in
kind of pushing where

00:12:11.860 --> 00:12:13.940
3D is sort of fits
into that space,

00:12:13.940 --> 00:12:17.550
so that's what
I'm interested in.

00:12:17.550 --> 00:12:18.892
Is that sufficient?

00:12:18.892 --> 00:12:23.337
[LAUGHTER]

00:12:23.337 --> 00:12:24.170
MALE SPEAKER: Right.

00:12:24.170 --> 00:12:25.720
What I think is
interesting here is

00:12:25.720 --> 00:12:27.340
that what we do
now when we start

00:12:27.340 --> 00:12:29.930
defining these ways
to work with the web

00:12:29.930 --> 00:12:33.120
and WebGL is that we have a
great responsibility in doing

00:12:33.120 --> 00:12:35.660
so, because we will define
how people will work it.

00:12:35.660 --> 00:12:37.940
And that means
that we will define

00:12:37.940 --> 00:12:40.860
if this will be a good thing,
if it will be the next big thing

00:12:40.860 --> 00:12:42.650
or not.

00:12:42.650 --> 00:12:44.582
But it's also great
responsibility--

00:12:44.582 --> 00:12:46.040
it is the greatest
responsibility--

00:12:46.040 --> 00:12:47.915
but it's also a great
opportunity to do that.

00:12:47.915 --> 00:12:51.610
So in a year, I think we need to
ask ourselves, did we succeed?

00:12:51.610 --> 00:12:57.190
And when it comes to the old
organic ecosystem view on it

00:12:57.190 --> 00:12:59.770
as you said, we need different
ways to push our apps through.

00:12:59.770 --> 00:13:02.890
We need ways to connect the
publishers with the creators.

00:13:02.890 --> 00:13:07.370
And even if you don't
know what you're doing,

00:13:07.370 --> 00:13:12.430
you should be
able-- as you said--

00:13:12.430 --> 00:13:15.580
even people that have no idea
what the web is, or haven't

00:13:15.580 --> 00:13:18.040
seen a browser before,
should be able to get

00:13:18.040 --> 00:13:20.310
in touch with publishers
if they have great content.

00:13:20.310 --> 00:13:21.809
So I think that's
what's going to be

00:13:21.809 --> 00:13:25.829
a great big challenge
in a year from now.

00:13:25.829 --> 00:13:27.370
MALE SPEAKER: I'm
probably just going

00:13:27.370 --> 00:13:29.812
to be wondering how I can
make digital caffeine,

00:13:29.812 --> 00:13:31.687
so I don't have to go
out and buy it anymore.

00:13:34.370 --> 00:13:36.560
That's it.

00:13:36.560 --> 00:13:38.880
MALE SPEAKER: I think
I'd be wondering, what's

00:13:38.880 --> 00:13:44.830
my spot on the waiting list
for the next [INAUDIBLE]

00:13:44.830 --> 00:13:47.150
So I think we have time
for one more question,

00:13:47.150 --> 00:13:48.610
then we go off to the raffle.

00:13:48.610 --> 00:13:50.880
And for those of
you in the overflow

00:13:50.880 --> 00:13:54.390
rooms-- look at the
camera, over there-- you

00:13:54.390 --> 00:13:57.450
can come in here for the
raffle to make it easier,

00:13:57.450 --> 00:13:59.200
so we don't have to
call out and all that.

00:13:59.200 --> 00:14:00.660
So one more question.

00:14:00.660 --> 00:14:04.930
Who's got the final question?

00:14:04.930 --> 00:14:08.182
Maybe your second question?

00:14:08.182 --> 00:14:11.170
[AUDIENCE QUESTION]

00:14:14.670 --> 00:14:17.555
TONY: No.

00:14:17.555 --> 00:14:22.870
[LAUGHTER]

00:14:22.870 --> 00:14:25.130
MALE SPEAKER: There was
someone else getting up there.

00:14:25.130 --> 00:14:25.630
Yep.

00:14:25.630 --> 00:14:26.587
OK, go ahead.

00:14:26.587 --> 00:14:29.996
[AUDIENCE QUESTION]

00:14:32.930 --> 00:14:36.290
DON: You know, none of us are
actually on the Chrome GPU

00:14:36.290 --> 00:14:40.000
team, so there are some
people hanging around

00:14:40.000 --> 00:14:44.010
from the Chrome GPU team.

00:14:44.010 --> 00:14:47.830
One might be hiding
themselves in the back.

00:14:47.830 --> 00:14:49.970
So, yeah, Ken.

00:14:49.970 --> 00:14:53.952
[APPLAUSE]

00:14:53.952 --> 00:14:56.160
TONY: Ladies and gentlemen,
for those who don't know,

00:14:56.160 --> 00:14:58.570
this is Kenneth Russell.

00:14:58.570 --> 00:15:02.410
He's the WebGL
Working Group Chair.

00:15:02.410 --> 00:15:04.100
And he works at Google.

00:15:04.100 --> 00:15:09.090
And he makes WebGL that works
in Chrome, which is awesome.

00:15:09.090 --> 00:15:13.740
So Ken, you going to give
us a sneak peek at WebGL 2?

00:15:13.740 --> 00:15:16.240
KEN: OK so first of all, Tony
gives me far too much credit.

00:15:16.240 --> 00:15:18.590
Where's Brandon and Vangelis?

00:15:18.590 --> 00:15:21.250
So those guys back there,
please stand up and wave.

00:15:21.250 --> 00:15:24.680
So this is Brandon
Jones, who did

00:15:24.680 --> 00:15:27.750
many of the really super
cool WebGL demos, including

00:15:27.750 --> 00:15:31.790
iOS rage in WebGL, who's
now a member of our team.

00:15:31.790 --> 00:15:32.920
Thank you for joining.

00:15:32.920 --> 00:15:36.610
And Vangelis Kokkevis,
our boss, please tell him

00:15:36.610 --> 00:15:37.440
how great we are.

00:15:37.440 --> 00:15:38.680
Thank you very much.

00:15:38.680 --> 00:15:40.680
AUDIENCE: You're awesome.

00:15:40.680 --> 00:15:45.764
KEN: OK so Tony gives
me far too much credit.

00:15:45.764 --> 00:15:48.430
You know there's this joke about
the parrot, who's the chairman.

00:15:48.430 --> 00:15:53.090
We don't know what he does,
just they call him Chairman.

00:15:53.090 --> 00:15:55.270
It's funnier if
you tell the joke.

00:15:55.270 --> 00:15:59.170
So WebGL 2, so Khronos
released a new version

00:15:59.170 --> 00:16:01.510
of OpenGL ES that runs
in your mobile phones.

00:16:01.510 --> 00:16:03.189
And most phones that
are coming out now

00:16:03.189 --> 00:16:04.355
actually have this standard.

00:16:04.355 --> 00:16:08.030
It's of vast improvement over
the previous version that's

00:16:08.030 --> 00:16:10.050
on previous generation
mobile devices

00:16:10.050 --> 00:16:11.790
and what WebGL's
currently based on.

00:16:14.510 --> 00:16:17.660
At Google, and at
Mozilla, and at Apple,

00:16:17.660 --> 00:16:22.510
we've been working on getting
the baseline current WebGL

00:16:22.510 --> 00:16:23.950
really robust.

00:16:23.950 --> 00:16:25.460
We had some bugs in Chrome.

00:16:25.460 --> 00:16:29.570
In Chrome 29, you may remember,
WebGL was flaky on Windows.

00:16:29.570 --> 00:16:33.140
That's a real problem, because
you developers cannot deploy

00:16:33.140 --> 00:16:36.290
your content in confidence
knowing that maybe it'll break

00:16:36.290 --> 00:16:37.420
down some browsers.

00:16:37.420 --> 00:16:41.580
Then you fall back to something
else, Canvas, something 2D.

00:16:41.580 --> 00:16:43.080
You have to redesign
your whole app,

00:16:43.080 --> 00:16:45.310
because you can't rely
on the new technology.

00:16:45.310 --> 00:16:47.070
So at Google anyway,
we've been working

00:16:47.070 --> 00:16:48.740
on retrenching and
really making sure

00:16:48.740 --> 00:16:50.190
that that baseline is robust.

00:16:50.190 --> 00:16:53.210
And we're almost done
with that big push.

00:16:53.210 --> 00:16:56.740
So the next big push to be
finish the WebGL 2 spec, really

00:16:56.740 --> 00:16:58.210
get to work on the
implementation.

00:16:58.210 --> 00:17:02.600
And I said this in a meetup a
year ago, or six months ago,

00:17:02.600 --> 00:17:03.770
saying, wait six months.

00:17:03.770 --> 00:17:06.020
And now I'm saying, well
just wait another six months.

00:17:06.020 --> 00:17:08.310
But we're getting there.

00:17:08.310 --> 00:17:11.270
And I think that the
testing infrastructure

00:17:11.270 --> 00:17:14.170
will be much better so that you
can be guaranteed that you're

00:17:14.170 --> 00:17:16.710
going to be able to deploy
this stuff immediately as soon

00:17:16.710 --> 00:17:17.460
as it's turned on.

00:17:20.419 --> 00:17:22.210
AUDIENCE: What will it
do when it grows up?

00:17:24.913 --> 00:17:26.329
MALE SPEAKER: Take
over the world.

00:17:26.329 --> 00:17:30.870
KEN: Yeah I think it'll
probably reach mid-adulthood,

00:17:30.870 --> 00:17:33.010
and then need some
coffee with milk in order

00:17:33.010 --> 00:17:34.860
to stay awake or
something like that.

00:17:34.860 --> 00:17:38.370
So it'll do some turbulence
issue simulations on the GPU.

00:17:38.370 --> 00:17:39.810
I'm pretty sure.

00:17:39.810 --> 00:17:42.180
AUDIENCE: Sorry, say that again?

00:17:42.180 --> 00:17:44.270
KEN: It'll be doing its
own turbulence simulations

00:17:44.270 --> 00:17:47.470
on the GPU for its
own milk and coffee.

00:17:47.470 --> 00:17:50.730
Yeah that's what WebGL
3 is going to do.

