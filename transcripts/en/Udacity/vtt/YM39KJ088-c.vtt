WEBVTT
Kind: captions
Language: en

00:00:00.200 --> 00:00:03.620
Recall that we said that a lot of this AI agent will have two parts to it,

00:00:03.620 --> 00:00:07.520
a knowledge base and then the rules of inference. We'll come to the rules of

00:00:07.520 --> 00:00:11.300
inference a little bit later. First let us look at how can we construct

00:00:11.300 --> 00:00:15.350
a knowledge base in the language of logic. So what we are trying to do now is

00:00:15.350 --> 00:00:18.880
that an AI agent has some knowledge about the world and it is going to express

00:00:18.880 --> 00:00:25.025
it in the scheme of logic. In earlier schemes of knowledge representation,

00:00:25.025 --> 00:00:29.114
we discussed how there were objects and relationships between objects. And

00:00:29.114 --> 00:00:32.195
any knowledge representation scheme we need to capture both objects and

00:00:32.195 --> 00:00:37.280
relationships between those objects. Logic has a particular way of doing it.

00:00:37.280 --> 00:00:41.530
So consider an object like a bird. This object may have various arguments.

00:00:41.530 --> 00:00:43.460
We'll define something called a predicate,

00:00:43.460 --> 00:00:48.210
which is a function that maps object arguments to either true or false. So

00:00:48.210 --> 00:00:52.490
let us consider an example. Here we have bluebird as the object and

00:00:52.490 --> 00:00:57.350
feathers as the predicate on this object. Let's consider this example. Here,

00:00:57.350 --> 00:01:00.980
bluebird is the object and feathers is the predicate on this object.

00:01:00.980 --> 00:01:05.410
Feathers is now a function that can map either into true or into false.

00:01:05.410 --> 00:01:09.410
Either bluebird has feathers or bluebird doesn't have feathers. In this

00:01:09.410 --> 00:01:14.130
particular case, feathers of bluebirds would be true, because bluebirds do have

00:01:14.130 --> 00:01:19.220
feathers. Now, just like we had bluebird as the object in the previous example,

00:01:19.220 --> 00:01:22.950
here we have animal as the object, the same predicate. Now, of course,

00:01:22.950 --> 00:01:27.280
not all animals will have feathers, so this particular predicate may be true or

00:01:27.280 --> 00:01:30.960
false, depending on the choice of the animal. In this sentence there are two

00:01:30.960 --> 00:01:35.530
predicates, one object, animal still, but there is a predicate feathers and

00:01:35.530 --> 00:01:38.845
a predicate bird. And we can capture the relationship between these two

00:01:38.845 --> 00:01:44.110
predicates, by saying that if feathers animal is true, then bird animal is

00:01:44.110 --> 00:01:49.770
also true. This example has two predicates. Here there's one object,

00:01:49.770 --> 00:01:54.550
the animal. But the predicates are feathers and birds. And the sentence is

00:01:54.550 --> 00:01:59.350
capturing a relationship between the two predicates. If the animal has feathers,

00:01:59.350 --> 00:02:03.210
then the animal is a bird. In logic we call sentences like

00:02:03.210 --> 00:02:08.734
this as having an implication. This is an implicative relationship. So in logic,

00:02:08.734 --> 00:02:12.990
we'll read this as Feathers(animal) implies Bird(animal). Or

00:02:12.990 --> 00:02:16.620
if the animal has feathers, then it implies that the animal is a bird.

