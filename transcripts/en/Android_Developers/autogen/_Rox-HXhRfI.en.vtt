WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.149
with the release of the Android M

00:00:02.149 --> 00:00:02.159
with the release of the Android M
 

00:00:02.159 --> 00:00:04.789
with the release of the Android M
developer preview SDK developers are

00:00:04.789 --> 00:00:04.799
developer preview SDK developers are
 

00:00:04.799 --> 00:00:07.010
developer preview SDK developers are
jumping in to make sure their apps are

00:00:07.010 --> 00:00:07.020
jumping in to make sure their apps are
 

00:00:07.020 --> 00:00:08.660
jumping in to make sure their apps are
up to date with changes in the framework

00:00:08.660 --> 00:00:08.670
up to date with changes in the framework
 

00:00:08.670 --> 00:00:11.240
up to date with changes in the framework
I'm vitac alle-kiski and i'll show you

00:00:11.240 --> 00:00:11.250
I'm vitac alle-kiski and i'll show you
 

00:00:11.250 --> 00:00:13.310
I'm vitac alle-kiski and i'll show you
how new features that we're introducing

00:00:13.310 --> 00:00:13.320
how new features that we're introducing
 

00:00:13.320 --> 00:00:15.919
how new features that we're introducing
an android studio 1.3 can help you with

00:00:15.919 --> 00:00:15.929
an android studio 1.3 can help you with
 

00:00:15.929 --> 00:00:18.710
an android studio 1.3 can help you with
the transition the single biggest change

00:00:18.710 --> 00:00:18.720
the transition the single biggest change
 

00:00:18.720 --> 00:00:20.929
the transition the single biggest change
in Android M is the overhaul of the

00:00:20.929 --> 00:00:20.939
in Android M is the overhaul of the
 

00:00:20.939 --> 00:00:23.570
in Android M is the overhaul of the
permission system from now on before

00:00:23.570 --> 00:00:23.580
permission system from now on before
 

00:00:23.580 --> 00:00:25.849
permission system from now on before
using certain api's you need to make

00:00:25.849 --> 00:00:25.859
using certain api's you need to make
 

00:00:25.859 --> 00:00:27.769
using certain api's you need to make
sure your app asks for the necessary

00:00:27.769 --> 00:00:27.779
sure your app asks for the necessary
 

00:00:27.779 --> 00:00:30.470
sure your app asks for the necessary
permissions during runtime but given a

00:00:30.470 --> 00:00:30.480
permissions during runtime but given a
 

00:00:30.480 --> 00:00:32.420
permissions during runtime but given a
large code base how do you know which

00:00:32.420 --> 00:00:32.430
large code base how do you know which
 

00:00:32.430 --> 00:00:34.400
large code base how do you know which
methods actually required this special

00:00:34.400 --> 00:00:34.410
methods actually required this special
 

00:00:34.410 --> 00:00:37.370
methods actually required this special
handling an android studio 1.3 we're

00:00:37.370 --> 00:00:37.380
handling an android studio 1.3 we're
 

00:00:37.380 --> 00:00:39.530
handling an android studio 1.3 we're
adding al intro that the text methods

00:00:39.530 --> 00:00:39.540
adding al intro that the text methods
 

00:00:39.540 --> 00:00:41.150
adding al intro that the text methods
marked with the new requires permission

00:00:41.150 --> 00:00:41.160
marked with the new requires permission
 

00:00:41.160 --> 00:00:44.209
marked with the new requires permission
sanitation from the support library the

00:00:44.209 --> 00:00:44.219
sanitation from the support library the
 

00:00:44.219 --> 00:00:45.860
sanitation from the support library the
editor will now highlight code that

00:00:45.860 --> 00:00:45.870
editor will now highlight code that
 

00:00:45.870 --> 00:00:47.389
editor will now highlight code that
users permissions which are missing from

00:00:47.389 --> 00:00:47.399
users permissions which are missing from
 

00:00:47.399 --> 00:00:50.450
users permissions which are missing from
your android manifest moreover if it

00:00:50.450 --> 00:00:50.460
your android manifest moreover if it
 

00:00:50.460 --> 00:00:51.770
your android manifest moreover if it
detects you haven't performed the

00:00:51.770 --> 00:00:51.780
detects you haven't performed the
 

00:00:51.780 --> 00:00:54.080
detects you haven't performed the
necessary runtime check in your code it

00:00:54.080 --> 00:00:54.090
necessary runtime check in your code it
 

00:00:54.090 --> 00:00:56.720
necessary runtime check in your code it
will suggest a quick fix static code

00:00:56.720 --> 00:00:56.730
will suggest a quick fix static code
 

00:00:56.730 --> 00:00:58.819
will suggest a quick fix static code
analysis like this can help you catch

00:00:58.819 --> 00:00:58.829
analysis like this can help you catch
 

00:00:58.829 --> 00:01:00.889
analysis like this can help you catch
common programming mistakes even before

00:01:00.889 --> 00:01:00.899
common programming mistakes even before
 

00:01:00.899 --> 00:01:02.510
common programming mistakes even before
you run your app on the device or

00:01:02.510 --> 00:01:02.520
you run your app on the device or
 

00:01:02.520 --> 00:01:04.820
you run your app on the device or
emulator the requires permission

00:01:04.820 --> 00:01:04.830
emulator the requires permission
 

00:01:04.830 --> 00:01:06.980
emulator the requires permission
annotation is actually defined in the

00:01:06.980 --> 00:01:06.990
annotation is actually defined in the
 

00:01:06.990 --> 00:01:09.109
annotation is actually defined in the
support library and works in tandem with

00:01:09.109 --> 00:01:09.119
support library and works in tandem with
 

00:01:09.119 --> 00:01:12.020
support library and works in tandem with
a lint checker in Android studio let's

00:01:12.020 --> 00:01:12.030
a lint checker in Android studio let's
 

00:01:12.030 --> 00:01:13.399
a lint checker in Android studio let's
go through some other annotations that

00:01:13.399 --> 00:01:13.409
go through some other annotations that
 

00:01:13.409 --> 00:01:14.950
go through some other annotations that
you will find in the latest release

00:01:14.950 --> 00:01:14.960
you will find in the latest release
 

00:01:14.960 --> 00:01:17.570
you will find in the latest release
threading annotations guard you against

00:01:17.570 --> 00:01:17.580
threading annotations guard you against
 

00:01:17.580 --> 00:01:19.060
threading annotations guard you against
calling methods on the wrong thread

00:01:19.060 --> 00:01:19.070
calling methods on the wrong thread
 

00:01:19.070 --> 00:01:21.320
calling methods on the wrong thread
let's say you're doing some background

00:01:21.320 --> 00:01:21.330
let's say you're doing some background
 

00:01:21.330 --> 00:01:23.179
let's say you're doing some background
processing like in this async task

00:01:23.179 --> 00:01:23.189
processing like in this async task
 

00:01:23.189 --> 00:01:26.030
processing like in this async task
example because the async task methods

00:01:26.030 --> 00:01:26.040
example because the async task methods
 

00:01:26.040 --> 00:01:28.969
example because the async task methods
are already properly annotated the IDE

00:01:28.969 --> 00:01:28.979
are already properly annotated the IDE
 

00:01:28.979 --> 00:01:31.010
are already properly annotated the IDE
will alert you if you try changing the

00:01:31.010 --> 00:01:31.020
will alert you if you try changing the
 

00:01:31.020 --> 00:01:33.140
will alert you if you try changing the
right from here by calling methods on

00:01:33.140 --> 00:01:33.150
right from here by calling methods on
 

00:01:33.150 --> 00:01:35.510
right from here by calling methods on
the textview instance on the other hand

00:01:35.510 --> 00:01:35.520
the textview instance on the other hand
 

00:01:35.520 --> 00:01:37.999
the textview instance on the other hand
android studio knows it's safe to invoke

00:01:37.999 --> 00:01:38.009
android studio knows it's safe to invoke
 

00:01:38.009 --> 00:01:40.760
android studio knows it's safe to invoke
UI code in unposted xecutor as it is

00:01:40.760 --> 00:01:40.770
UI code in unposted xecutor as it is
 

00:01:40.770 --> 00:01:42.819
UI code in unposted xecutor as it is
marked with the main thread annotation

00:01:42.819 --> 00:01:42.829
marked with the main thread annotation
 

00:01:42.829 --> 00:01:46.100
marked with the main thread annotation
up next the size and range annotations

00:01:46.100 --> 00:01:46.110
up next the size and range annotations
 

00:01:46.110 --> 00:01:48.770
up next the size and range annotations
for integers and floats they can be used

00:01:48.770 --> 00:01:48.780
for integers and floats they can be used
 

00:01:48.780 --> 00:01:50.240
for integers and floats they can be used
for controlling the length of your

00:01:50.240 --> 00:01:50.250
for controlling the length of your
 

00:01:50.250 --> 00:01:52.460
for controlling the length of your
arrays and strings or making sure a

00:01:52.460 --> 00:01:52.470
arrays and strings or making sure a
 

00:01:52.470 --> 00:01:54.950
arrays and strings or making sure a
number is in a specified range they're

00:01:54.950 --> 00:01:54.960
number is in a specified range they're
 

00:01:54.960 --> 00:01:56.959
number is in a specified range they're
especially handy for annotating method

00:01:56.959 --> 00:01:56.969
especially handy for annotating method
 

00:01:56.969 --> 00:01:59.030
especially handy for annotating method
parameters so that the color can

00:01:59.030 --> 00:01:59.040
parameters so that the color can
 

00:01:59.040 --> 00:02:00.859
parameters so that the color can
immediately know what kind of values are

00:02:00.859 --> 00:02:00.869
immediately know what kind of values are
 

00:02:00.869 --> 00:02:03.590
immediately know what kind of values are
expected if you want to study those in

00:02:03.590 --> 00:02:03.600
expected if you want to study those in
 

00:02:03.600 --> 00:02:05.450
expected if you want to study those in
more detail as well as learn about other

00:02:05.450 --> 00:02:05.460
more detail as well as learn about other
 

00:02:05.460 --> 00:02:07.490
more detail as well as learn about other
annotations like check result and call

00:02:07.490 --> 00:02:07.500
annotations like check result and call
 

00:02:07.500 --> 00:02:09.740
annotations like check result and call
super click through to the documentation

00:02:09.740 --> 00:02:09.750
super click through to the documentation
 

00:02:09.750 --> 00:02:12.470
super click through to the documentation
here remember that you don't have to

00:02:12.470 --> 00:02:12.480
here remember that you don't have to
 

00:02:12.480 --> 00:02:13.550
here remember that you don't have to
rely on the annotation

00:02:13.550 --> 00:02:13.560
rely on the annotation
 

00:02:13.560 --> 00:02:15.080
rely on the annotation
that we've included in the android

00:02:15.080 --> 00:02:15.090
that we've included in the android
 

00:02:15.090 --> 00:02:17.210
that we've included in the android
framework you are free to add them to

00:02:17.210 --> 00:02:17.220
framework you are free to add them to
 

00:02:17.220 --> 00:02:18.920
framework you are free to add them to
your own methods and classes so that

00:02:18.920 --> 00:02:18.930
your own methods and classes so that
 

00:02:18.930 --> 00:02:20.930
your own methods and classes so that
anyone using your code will benefit from

00:02:20.930 --> 00:02:20.940
anyone using your code will benefit from
 

00:02:20.940 --> 00:02:22.430
anyone using your code will benefit from
the additional checks performed by

00:02:22.430 --> 00:02:22.440
the additional checks performed by
 

00:02:22.440 --> 00:02:25.670
the additional checks performed by
Android studio speaking of sharing code

00:02:25.670 --> 00:02:25.680
Android studio speaking of sharing code
 

00:02:25.680 --> 00:02:28.729
Android studio speaking of sharing code
android studio 1.3 introduces support

00:02:28.729 --> 00:02:28.739
android studio 1.3 introduces support
 

00:02:28.739 --> 00:02:31.000
android studio 1.3 introduces support
for hiding resources in library modules

00:02:31.000 --> 00:02:31.010
for hiding resources in library modules
 

00:02:31.010 --> 00:02:33.350
for hiding resources in library modules
perhaps it's easiest to demonstrate on

00:02:33.350 --> 00:02:33.360
perhaps it's easiest to demonstrate on
 

00:02:33.360 --> 00:02:35.720
perhaps it's easiest to demonstrate on
an example here's what used to happen

00:02:35.720 --> 00:02:35.730
an example here's what used to happen
 

00:02:35.730 --> 00:02:37.970
an example here's what used to happen
when you try to use auto completion in

00:02:37.970 --> 00:02:37.980
when you try to use auto completion in
 

00:02:37.980 --> 00:02:40.100
when you try to use auto completion in
the layout file when you have app compat

00:02:40.100 --> 00:02:40.110
the layout file when you have app compat
 

00:02:40.110 --> 00:02:42.440
the layout file when you have app compat
in your dependencies and here is the

00:02:42.440 --> 00:02:42.450
in your dependencies and here is the
 

00:02:42.450 --> 00:02:44.690
in your dependencies and here is the
same operation using the newest versions

00:02:44.690 --> 00:02:44.700
same operation using the newest versions
 

00:02:44.700 --> 00:02:46.870
same operation using the newest versions
of both studio and the support library

00:02:46.870 --> 00:02:46.880
of both studio and the support library
 

00:02:46.880 --> 00:02:49.460
of both studio and the support library
most of the resources we see on the left

00:02:49.460 --> 00:02:49.470
most of the resources we see on the left
 

00:02:49.470 --> 00:02:51.770
most of the resources we see on the left
are used internally by the creators of

00:02:51.770 --> 00:02:51.780
are used internally by the creators of
 

00:02:51.780 --> 00:02:53.809
are used internally by the creators of
the library and were never meant to be

00:02:53.809 --> 00:02:53.819
the library and were never meant to be
 

00:02:53.819 --> 00:02:56.750
the library and were never meant to be
available for third-party developers not

00:02:56.750 --> 00:02:56.760
available for third-party developers not
 

00:02:56.760 --> 00:02:58.280
available for third-party developers not
only do they introduce clutter and

00:02:58.280 --> 00:02:58.290
only do they introduce clutter and
 

00:02:58.290 --> 00:03:01.100
only do they introduce clutter and
pollute your projects namespace things

00:03:01.100 --> 00:03:01.110
pollute your projects namespace things
 

00:03:01.110 --> 00:03:03.259
pollute your projects namespace things
might also break with any update if you

00:03:03.259 --> 00:03:03.269
might also break with any update if you
 

00:03:03.269 --> 00:03:06.289
might also break with any update if you
decide to use them in your layouts to

00:03:06.289 --> 00:03:06.299
decide to use them in your layouts to
 

00:03:06.299 --> 00:03:08.270
decide to use them in your layouts to
define which resources should be visible

00:03:08.270 --> 00:03:08.280
define which resources should be visible
 

00:03:08.280 --> 00:03:10.640
define which resources should be visible
for users of your library simply put a

00:03:10.640 --> 00:03:10.650
for users of your library simply put a
 

00:03:10.650 --> 00:03:13.039
for users of your library simply put a
public XML file in your values folder

00:03:13.039 --> 00:03:13.049
public XML file in your values folder
 

00:03:13.049 --> 00:03:15.530
public XML file in your values folder
provide an entry containing the type and

00:03:15.530 --> 00:03:15.540
provide an entry containing the type and
 

00:03:15.540 --> 00:03:17.690
provide an entry containing the type and
name of each resource you want to set us

00:03:17.690 --> 00:03:17.700
name of each resource you want to set us
 

00:03:17.700 --> 00:03:20.180
name of each resource you want to set us
public this information will also be

00:03:20.180 --> 00:03:20.190
public this information will also be
 

00:03:20.190 --> 00:03:22.009
public this information will also be
bundled and available to Android studio

00:03:22.009 --> 00:03:22.019
bundled and available to Android studio
 

00:03:22.019 --> 00:03:24.410
bundled and available to Android studio
if you decide to distribute your library

00:03:24.410 --> 00:03:24.420
if you decide to distribute your library
 

00:03:24.420 --> 00:03:27.860
if you decide to distribute your library
in a AR format with the release of 1.3

00:03:27.860 --> 00:03:27.870
in a AR format with the release of 1.3
 

00:03:27.870 --> 00:03:29.809
in a AR format with the release of 1.3
we're bringing more tools that were

00:03:29.809 --> 00:03:29.819
we're bringing more tools that were
 

00:03:29.819 --> 00:03:31.550
we're bringing more tools that were
previously available as external

00:03:31.550 --> 00:03:31.560
previously available as external
 

00:03:31.560 --> 00:03:34.729
previously available as external
applications into Android studio you can

00:03:34.729 --> 00:03:34.739
applications into Android studio you can
 

00:03:34.739 --> 00:03:36.559
applications into Android studio you can
now open your object allocation trace

00:03:36.559 --> 00:03:36.569
now open your object allocation trace
 

00:03:36.569 --> 00:03:38.120
now open your object allocation trace
files and the new allocation tracker

00:03:38.120 --> 00:03:38.130
files and the new allocation tracker
 

00:03:38.130 --> 00:03:40.670
files and the new allocation tracker
which shows you a visual overview of

00:03:40.670 --> 00:03:40.680
which shows you a visual overview of
 

00:03:40.680 --> 00:03:42.379
which shows you a visual overview of
where allocations happen in your code

00:03:42.379 --> 00:03:42.389
where allocations happen in your code
 

00:03:42.389 --> 00:03:44.360
where allocations happen in your code
and gives you a way to dig right into

00:03:44.360 --> 00:03:44.370
and gives you a way to dig right into
 

00:03:44.370 --> 00:03:47.270
and gives you a way to dig right into
the data another memory inspection tool

00:03:47.270 --> 00:03:47.280
the data another memory inspection tool
 

00:03:47.280 --> 00:03:49.280
the data another memory inspection tool
that is now available right in the IDE

00:03:49.280 --> 00:03:49.290
that is now available right in the IDE
 

00:03:49.290 --> 00:03:52.160
that is now available right in the IDE
is the heap dump viewer for opening age

00:03:52.160 --> 00:03:52.170
is the heap dump viewer for opening age
 

00:03:52.170 --> 00:03:54.830
is the heap dump viewer for opening age
profiles it gives you access to the

00:03:54.830 --> 00:03:54.840
profiles it gives you access to the
 

00:03:54.840 --> 00:03:56.599
profiles it gives you access to the
reference tree of any object in memory

00:03:56.599 --> 00:03:56.609
reference tree of any object in memory
 

00:03:56.609 --> 00:03:59.270
reference tree of any object in memory
as well as a property inspector similar

00:03:59.270 --> 00:03:59.280
as well as a property inspector similar
 

00:03:59.280 --> 00:04:02.090
as well as a property inspector similar
to the variable debugger window use it

00:04:02.090 --> 00:04:02.100
to the variable debugger window use it
 

00:04:02.100 --> 00:04:03.710
to the variable debugger window use it
to examine the state of objects at the

00:04:03.710 --> 00:04:03.720
to examine the state of objects at the
 

00:04:03.720 --> 00:04:05.330
to examine the state of objects at the
moment when the memory snapshot was

00:04:05.330 --> 00:04:05.340
moment when the memory snapshot was
 

00:04:05.340 --> 00:04:07.430
moment when the memory snapshot was
taken and to track down any rogue

00:04:07.430 --> 00:04:07.440
taken and to track down any rogue
 

00:04:07.440 --> 00:04:09.349
taken and to track down any rogue
references that prevent them from being

00:04:09.349 --> 00:04:09.359
references that prevent them from being
 

00:04:09.359 --> 00:04:12.410
references that prevent them from being
garbage collected by the way we've also

00:04:12.410 --> 00:04:12.420
garbage collected by the way we've also
 

00:04:12.420 --> 00:04:14.180
garbage collected by the way we've also
added small improvements and the

00:04:14.180 --> 00:04:14.190
added small improvements and the
 

00:04:14.190 --> 00:04:16.699
added small improvements and the
traditional debugger interface from now

00:04:16.699 --> 00:04:16.709
traditional debugger interface from now
 

00:04:16.709 --> 00:04:18.620
traditional debugger interface from now
on when you inspect a variable that

00:04:18.620 --> 00:04:18.630
on when you inspect a variable that
 

00:04:18.630 --> 00:04:20.779
on when you inspect a variable that
holds a resource identifier you can

00:04:20.779 --> 00:04:20.789
holds a resource identifier you can
 

00:04:20.789 --> 00:04:22.640
holds a resource identifier you can
easily see the human readable name

00:04:22.640 --> 00:04:22.650
easily see the human readable name
 

00:04:22.650 --> 00:04:24.589
easily see the human readable name
instead by switching to the Android

00:04:24.589 --> 00:04:24.599
instead by switching to the Android
 

00:04:24.599 --> 00:04:26.710
instead by switching to the Android
typed in GT review

00:04:26.710 --> 00:04:26.720
typed in GT review
 

00:04:26.720 --> 00:04:28.540
typed in GT review
there are many more new features in

00:04:28.540 --> 00:04:28.550
there are many more new features in
 

00:04:28.550 --> 00:04:31.060
there are many more new features in
Android studio 1.3 integration with the

00:04:31.060 --> 00:04:31.070
Android studio 1.3 integration with the
 

00:04:31.070 --> 00:04:33.220
Android studio 1.3 integration with the
data binding library ending developer

00:04:33.220 --> 00:04:33.230
data binding library ending developer
 

00:04:33.230 --> 00:04:34.780
data binding library ending developer
services from the product structure

00:04:34.780 --> 00:04:34.790
services from the product structure
 

00:04:34.790 --> 00:04:37.900
services from the product structure
dialog live code templates and finally a

00:04:37.900 --> 00:04:37.910
dialog live code templates and finally a
 

00:04:37.910 --> 00:04:40.870
dialog live code templates and finally a
preview of the upcoming C C++ editing

00:04:40.870 --> 00:04:40.880
preview of the upcoming C C++ editing
 

00:04:40.880 --> 00:04:44.620
preview of the upcoming C C++ editing
and NDK support in the IDE so upgrade

00:04:44.620 --> 00:04:44.630
and NDK support in the IDE so upgrade
 

00:04:44.630 --> 00:04:47.230
and NDK support in the IDE so upgrade
android studio now and as always please

00:04:47.230 --> 00:04:47.240
android studio now and as always please
 

00:04:47.240 --> 00:04:49.210
android studio now and as always please
report any bugs in our Google+ community

00:04:49.210 --> 00:04:49.220
report any bugs in our Google+ community
 

00:04:49.220 --> 00:04:52.840
report any bugs in our Google+ community
here thanks

