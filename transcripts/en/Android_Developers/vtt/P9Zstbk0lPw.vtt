WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.435
[MUSIC PLAYING]

00:00:07.774 --> 00:00:08.690
SEAN MCQUILLAN: Hello.

00:00:08.690 --> 00:00:09.910
Good afternoon.

00:00:09.910 --> 00:00:11.290
I'm super excited to be here.

00:00:11.290 --> 00:00:13.750
And today, we're going to be
talking about ConstraintLayout

00:00:13.750 --> 00:00:15.970
with a focus heavily
on the Visual Editor--

00:00:15.970 --> 00:00:18.160
how to use the Visual
Editor to effectively make

00:00:18.160 --> 00:00:20.381
constraints in Android Studio.

00:00:20.381 --> 00:00:22.630
So I'm going to start out
by talking about the basics,

00:00:22.630 --> 00:00:23.520
and then--

00:00:23.520 --> 00:00:26.500
CHRIS SINCO: Oh, I'm Chris,
UX Designer on Android Studio,

00:00:26.500 --> 00:00:28.690
and I'll be talking about
some of the new features

00:00:28.690 --> 00:00:30.816
we've added to Android
Studio for ConstraintLayout.

00:00:30.816 --> 00:00:32.189
SEAN MCQUILLAN:
Awesome, awesome.

00:00:32.189 --> 00:00:34.660
And I am Sean McQuillan,
developer advocate for Android.

00:00:34.660 --> 00:00:36.701
After we talk about the
basics, the features that

00:00:36.701 --> 00:00:38.279
shift in ConstraintLayout
1.0, 1.1,

00:00:38.279 --> 00:00:40.570
we're going to talk about
some of the new features that

00:00:40.570 --> 00:00:43.220
are coming out in
ConstraintLayout 2.0.

00:00:43.220 --> 00:00:44.650
So let's dive in.

00:00:44.650 --> 00:00:46.300
What are constraints?

00:00:46.300 --> 00:00:48.651
So when I add a view to a
ConstraintLayout in the Visual

00:00:48.651 --> 00:00:49.150
Editor.

00:00:49.150 --> 00:00:51.530
I'm going to get these four
new handles, one on the left,

00:00:51.530 --> 00:00:53.214
top, right, and bottom.

00:00:53.214 --> 00:00:54.880
If I click one of
those, or if I go over

00:00:54.880 --> 00:00:58.180
to the View Inspector over
here, and I click that,

00:00:58.180 --> 00:01:01.180
I'm going to go ahead and add
a constraint to this view.

00:01:01.180 --> 00:01:03.220
So I want to pause for a
second here and mention

00:01:03.220 --> 00:01:05.711
that, in ConstraintLayout,
before I added this constraint,

00:01:05.711 --> 00:01:07.960
ConstraintLayout is going
to add that view to the view

00:01:07.960 --> 00:01:09.820
hierarchy, but it's
just going to lay it out

00:01:09.820 --> 00:01:11.050
somewhere on the screen.

00:01:11.050 --> 00:01:12.550
So I'm going to add
that constraint.

00:01:12.550 --> 00:01:14.229
It's 30 dp off the top.

00:01:14.229 --> 00:01:15.770
And if I had another
one to the left,

00:01:15.770 --> 00:01:17.770
I've now fully
constrained this view.

00:01:17.770 --> 00:01:21.190
Now ConstraintLayout knows how
to solve where this view goes.

00:01:21.190 --> 00:01:24.190
We're going to see, starting
with this very simple example,

00:01:24.190 --> 00:01:28.070
how to build up more complex
examples of constraints.

00:01:28.070 --> 00:01:32.080
Now, of course, I could change
this 30 dp margin to be 50 dp,

00:01:32.080 --> 00:01:34.510
or I could set both
of them to 0 dp,

00:01:34.510 --> 00:01:37.190
and then add a constraint
over on the right side.

00:01:37.190 --> 00:01:40.000
And if I do that, I'm actually
going to center this view.

00:01:40.000 --> 00:01:41.970
And if I add another
constraint to the bottom,

00:01:41.970 --> 00:01:45.520
I'm in the center of this
view on the entire constraint

00:01:45.520 --> 00:01:46.307
layout.

00:01:46.307 --> 00:01:47.890
And this trick of
constraining equally

00:01:47.890 --> 00:01:49.870
on the right and the left
is going to work everywhere

00:01:49.870 --> 00:01:50.703
in ConstraintLayout.

00:01:50.703 --> 00:01:52.900
This is how you center
a view inside or on top

00:01:52.900 --> 00:01:55.504
of another view.

00:01:55.504 --> 00:01:57.270
So let's take a look
at one more thing

00:01:57.270 --> 00:02:00.760
I can do with just a single
element using ConstraintLayout.

00:02:00.760 --> 00:02:03.270
So if I look at the slider
that's over on the left,

00:02:03.270 --> 00:02:05.400
it starts at 50 when
I've constrained the top

00:02:05.400 --> 00:02:06.794
and the bottom like this.

00:02:06.794 --> 00:02:07.710
And I can change that.

00:02:07.710 --> 00:02:09.110
I can change it up to 25.

00:02:09.110 --> 00:02:11.880
And when I do that, instead
of centering it exactly,

00:02:11.880 --> 00:02:13.200
it's going to introduce a bias.

00:02:13.200 --> 00:02:14.415
It's the bias slider.

00:02:14.415 --> 00:02:16.290
It's going to introduce
a bias to the layout.

00:02:16.290 --> 00:02:19.020
Now it's going to lay that
out 25% along the way,

00:02:19.020 --> 00:02:21.000
75% along the way.

00:02:21.000 --> 00:02:23.310
And of course, there's, of
course, a horizontal slider

00:02:23.310 --> 00:02:24.200
as well.

00:02:24.200 --> 00:02:26.890
So let's dive in further
into this View Inspector

00:02:26.890 --> 00:02:29.830
and taking a look at what's
available in the Visual Editor.

00:02:29.830 --> 00:02:33.220
So there's this triple
shove going on here inside

00:02:33.220 --> 00:02:34.540
of this View Inspector.

00:02:34.540 --> 00:02:36.370
And I asked John
Hoford about this.

00:02:36.370 --> 00:02:38.380
And he said that's because
it's wrapped content,

00:02:38.380 --> 00:02:41.849
so it's trying to pull in as
hard as it can from both sides.

00:02:41.849 --> 00:02:44.140
So this is what it's going
to show for wrapped content.

00:02:44.140 --> 00:02:47.380
I can change that, of course,
to fixed width-- that's 100 dp.

00:02:47.380 --> 00:02:48.800
That's not too exciting.

00:02:48.800 --> 00:02:51.670
I can also change that
to match constraints.

00:02:51.670 --> 00:02:54.550
So match constraints is a new
feature for ConstraintLayout.

00:02:54.550 --> 00:02:55.960
It's a new way to layout views.

00:02:55.960 --> 00:02:58.750
And what it says is
take up all of the space

00:02:58.750 --> 00:03:00.701
available by the
constraints given.

00:03:00.701 --> 00:03:03.200
So in this case, I'm constrained
off the right and the left.

00:03:03.200 --> 00:03:05.385
So it's basically the
same thing as fill parent.

00:03:05.385 --> 00:03:06.760
And this is how
you would take up

00:03:06.760 --> 00:03:08.740
the full screen in
ConstraintLayout.

00:03:08.740 --> 00:03:11.640
You wouldn't want to use fill
parent in ConstraintLayout.

00:03:11.640 --> 00:03:13.600
And when I'm in
match constraints,

00:03:13.600 --> 00:03:15.709
I get this really
interesting icon here.

00:03:15.709 --> 00:03:18.250
And I originally thought this
was a heartbeat for the longest

00:03:18.250 --> 00:03:18.560
time.

00:03:18.560 --> 00:03:20.230
I thought this was
like a heartbeat icon.

00:03:20.230 --> 00:03:21.230
I asked John about this.

00:03:21.230 --> 00:03:23.230
It turns out that's
actually a spring.

00:03:23.230 --> 00:03:25.840
And on some versions of Android
Studio, you get two springs.

00:03:25.840 --> 00:03:27.580
On some versions, you get one.

00:03:27.580 --> 00:03:30.826
So I guess it's more springy
for some of us than others.

00:03:30.826 --> 00:03:33.950
So let's switch this back
over to wrap content,

00:03:33.950 --> 00:03:35.840
and let's add another
view so we can start

00:03:35.840 --> 00:03:37.317
building more complex layouts.

00:03:37.317 --> 00:03:38.900
So I'm just going
to add an ImageView,

00:03:38.900 --> 00:03:41.060
and I'm going to
constrain it so it's

00:03:41.060 --> 00:03:43.277
20 dp off of this text view.

00:03:43.277 --> 00:03:45.110
Then I'm going to
constrain it on the right.

00:03:45.110 --> 00:03:46.630
And it does what
we'd expect, right?

00:03:46.630 --> 00:03:48.546
It's going to go ahead
and move that ImageView

00:03:48.546 --> 00:03:52.070
so it's 20 dp off the left
and the ends are aligned.

00:03:52.070 --> 00:03:54.740
Now I'm going to add another
constraint over on the right,

00:03:54.740 --> 00:03:56.382
and we'll see that
this ImageView is

00:03:56.382 --> 00:03:57.340
going to center itself.

00:03:57.340 --> 00:03:59.186
And so here, we can see
this centering trick

00:03:59.186 --> 00:04:00.560
that we did for
the whole screen.

00:04:00.560 --> 00:04:02.600
We can do this on
another view as well.

00:04:05.468 --> 00:04:10.180
Now, I want to change the width
of this view from wrap content

00:04:10.180 --> 00:04:11.450
to match constraints.

00:04:11.450 --> 00:04:13.526
And this time, instead
of match constraints,

00:04:13.526 --> 00:04:15.400
meaning, it's going to
take the whole screen,

00:04:15.400 --> 00:04:17.380
it's going to take the
width of this text view.

00:04:17.380 --> 00:04:19.959
Whatever size that text
view is, this ImageView is

00:04:19.959 --> 00:04:22.320
going to try to match
that constraint as well.

00:04:22.320 --> 00:04:23.980
And when I do that,
this new control

00:04:23.980 --> 00:04:26.120
shows up in the visual editor.

00:04:26.120 --> 00:04:28.625
So this little line, it
creates a little triangle.

00:04:28.625 --> 00:04:32.500
And when I click it, I
actually enable an aspect ratio

00:04:32.500 --> 00:04:33.520
on this ImageView.

00:04:33.520 --> 00:04:35.320
This is a really
nice feature if you

00:04:35.320 --> 00:04:37.744
want to display an image
with an aspect ratio.

00:04:37.744 --> 00:04:39.160
Images, you know,
when we get them

00:04:39.160 --> 00:04:40.660
from designers or
from the web, they

00:04:40.660 --> 00:04:41.980
come in whatever aspect ratio.

00:04:41.980 --> 00:04:45.190
And our designer always
wants them to be 1 by 1 or 2

00:04:45.190 --> 00:04:47.660
by 1 or 16 by 9.

00:04:47.660 --> 00:04:49.660
You're laughing because
you're a designer, and--

00:04:49.660 --> 00:04:52.320
CHRIS SINCO: It's
my fault. Sorry.

00:04:52.320 --> 00:04:54.520
SEAN MCQUILLAN: And so we
can set up exactly what

00:04:54.520 --> 00:04:55.516
our designers ask for.

00:04:55.516 --> 00:04:57.640
We'd have to write a lot
of code to do the resizing

00:04:57.640 --> 00:05:00.250
or to fix this aspect
ratio and also resize

00:05:00.250 --> 00:05:02.890
this view as that text view
changes at the same time

00:05:02.890 --> 00:05:06.010
while maintaining
this aspect ratio.

00:05:06.010 --> 00:05:08.010
Now, if I set this
aspect ratio to 3 to 1,

00:05:08.010 --> 00:05:10.530
I kind of introduce these
conflicting constraints here.

00:05:10.530 --> 00:05:15.270
I've set one aspect ratio that
says I'd like this to be--

00:05:15.270 --> 00:05:17.035
one constraint, 3
to 1 aspect ratio,

00:05:17.035 --> 00:05:18.660
and then another
constraint saying this

00:05:18.660 --> 00:05:20.799
can be no wider
than this text box.

00:05:20.799 --> 00:05:23.340
ConstraintLayout has to solve
both of these at the same time.

00:05:23.340 --> 00:05:25.890
And it's going to choose to use
the constraints from the text

00:05:25.890 --> 00:05:28.360
box above the aspect ratio.

00:05:28.360 --> 00:05:32.170
I can free up another dimension
for ConstraintLayout to solve.

00:05:32.170 --> 00:05:35.430
So if I change the height
to be match constraints,

00:05:35.430 --> 00:05:37.820
it's capable of resizing
both dimensions.

00:05:37.820 --> 00:05:40.950
So now it can set the
3 to 1 aspect ratio

00:05:40.950 --> 00:05:43.290
by making this
ImageView less tall.

00:05:43.290 --> 00:05:48.091
So that's all we can do with
just a single element or two

00:05:48.091 --> 00:05:48.590
elements.

00:05:48.590 --> 00:05:51.230
Let's add a little bit
more of a complex view

00:05:51.230 --> 00:05:53.150
and talk about how
to lay things out

00:05:53.150 --> 00:05:55.680
with more features
from ConstraintLayout.

00:05:55.680 --> 00:05:59.360
So my designer just sent
me this lovely email form.

00:05:59.360 --> 00:06:00.830
Thank you.

00:06:00.830 --> 00:06:02.970
So I want to pause for a
second and mention this is

00:06:02.970 --> 00:06:04.220
a talk about ConstraintLayout.

00:06:04.220 --> 00:06:05.990
This is not to talk about
how to design login forms.

00:06:05.990 --> 00:06:07.370
I did one of those
earlier today.

00:06:07.370 --> 00:06:08.910
Please don't copy
this login form.

00:06:08.910 --> 00:06:10.250
There are many problems.

00:06:10.250 --> 00:06:12.950
But we can see here, there
are a couple things going on.

00:06:12.950 --> 00:06:16.340
The labels are right-aligned
to some sort of invisible line

00:06:16.340 --> 00:06:17.600
in the center of the screen.

00:06:17.600 --> 00:06:20.810
The edit text appear to be
left-aligned to that same line.

00:06:20.810 --> 00:06:23.570
And then the "login" and
"new account" are hanging off

00:06:23.570 --> 00:06:27.650
and they appear to be aligned
to the edit text right.

00:06:27.650 --> 00:06:29.750
And then, at the same time,
"email" and "password"

00:06:29.750 --> 00:06:31.610
appear to be vertically
centered on the screen.

00:06:31.610 --> 00:06:33.610
And we're going to try
to do all of those things

00:06:33.610 --> 00:06:35.160
in ConstraintLayout.

00:06:35.160 --> 00:06:39.239
So before we do that, how are
we going to layout those text

00:06:39.239 --> 00:06:39.780
views, right?

00:06:39.780 --> 00:06:42.120
We have the "email" text, and
we have "email" edit text.

00:06:42.120 --> 00:06:43.746
We could align the
top of the text view

00:06:43.746 --> 00:06:46.036
to the top of the text view
or the bottom the text view

00:06:46.036 --> 00:06:47.400
to the bottom of the edit text.

00:06:47.400 --> 00:06:48.780
That would actually
be incorrect.

00:06:48.780 --> 00:06:50.820
If we take a look at how
fonts work-- just dive

00:06:50.820 --> 00:06:52.980
into fonts for a second,
and look at font metrics.

00:06:52.980 --> 00:06:54.030
We have a bunch of them.

00:06:54.030 --> 00:06:55.530
We have this baseline
at the bottom,

00:06:55.530 --> 00:06:57.780
which, in English
and most languages,

00:06:57.780 --> 00:06:59.069
almost everything sits on.

00:06:59.069 --> 00:07:01.110
Then, at the very top, we
have the ascender line,

00:07:01.110 --> 00:07:02.310
which nothing goes above.

00:07:02.310 --> 00:07:03.935
And then out at the
bottom, that dashed

00:07:03.935 --> 00:07:05.380
line is the descender line.

00:07:05.380 --> 00:07:07.590
And it turns out that the
metric that really matters

00:07:07.590 --> 00:07:08.460
is this baseline.

00:07:08.460 --> 00:07:10.380
And if we line
out two texts that

00:07:10.380 --> 00:07:12.960
have completely different
fonts next to each other

00:07:12.960 --> 00:07:16.140
along the baseline, that
creates a single line

00:07:16.140 --> 00:07:17.530
of text for our eyes.

00:07:17.530 --> 00:07:20.500
And it allows us to read
it as a coherent unit.

00:07:20.500 --> 00:07:22.350
So we want to do that
in ConstraintLayout.

00:07:22.350 --> 00:07:24.396
So if I select
this "email" label,

00:07:24.396 --> 00:07:26.520
I'm going to get this
control and ConstraintLayout.

00:07:26.520 --> 00:07:27.500
It looks like this.

00:07:27.500 --> 00:07:28.981
So I've enlarged
it substantially

00:07:28.981 --> 00:07:29.730
so you can see it.

00:07:29.730 --> 00:07:33.270
And when I click it, I
get my favorite control

00:07:33.270 --> 00:07:34.830
in all of Android Studio.

00:07:34.830 --> 00:07:36.630
It actually blinks
in the Editor.

00:07:36.630 --> 00:07:40.590
And I call it the green
glowing orb of baseline.

00:07:40.590 --> 00:07:43.900
So we can go over to the edit
text and click that same thing.

00:07:43.900 --> 00:07:48.780
And now we can drag from
one baseline to the other

00:07:48.780 --> 00:07:51.030
and create a constraint
saying these text views should

00:07:51.030 --> 00:07:52.516
have the same baseline.

00:07:52.516 --> 00:07:55.140
And we'll do that for all of the
other text views on the screen

00:07:55.140 --> 00:07:58.530
here in order to set up all
the baseline alignments.

00:07:58.530 --> 00:08:00.660
And when you line up
text next to text,

00:08:00.660 --> 00:08:02.640
you almost always want
to use the baseline.

00:08:02.640 --> 00:08:05.050
That's the correct way
to do it all the time,

00:08:05.050 --> 00:08:07.259
especially in ConstraintLayout.

00:08:07.259 --> 00:08:09.300
So now let's go ahead and
put that "login" button

00:08:09.300 --> 00:08:10.216
on the screen as well.

00:08:10.216 --> 00:08:12.992
So the "login" button has to be
constrained off this edit text,

00:08:12.992 --> 00:08:15.575
and then it's also going to get
constrained on the right side.

00:08:15.575 --> 00:08:17.969
Now let's figure out how to
do this centering, right?

00:08:17.969 --> 00:08:20.010
The "email" and "password"
is vertically centered

00:08:20.010 --> 00:08:20.593
on the screen.

00:08:20.593 --> 00:08:22.030
How am I going to do that?

00:08:22.030 --> 00:08:23.787
So we've been doing
this thing where

00:08:23.787 --> 00:08:25.620
we put a constraint on
both sides of a view,

00:08:25.620 --> 00:08:26.244
and it centers.

00:08:26.244 --> 00:08:27.370
So let's try to do that.

00:08:27.370 --> 00:08:29.250
So I'm going to put a
constraint from "email"

00:08:29.250 --> 00:08:30.430
up to the top of the screen.

00:08:30.430 --> 00:08:32.760
It's going to pull stuff up
to the top from "password"

00:08:32.760 --> 00:08:34.140
down to the bottom
of the screen.

00:08:34.140 --> 00:08:36.139
And it's going to pull
stuff down to the bottom.

00:08:36.139 --> 00:08:37.530
And so far, this makes sense.

00:08:37.530 --> 00:08:39.030
Now I guess I'm
going to have to add

00:08:39.030 --> 00:08:41.070
a constraint from "password"
to "email," right?

00:08:41.070 --> 00:08:43.630
Because I want these
things to go back together.

00:08:43.630 --> 00:08:44.752
So I'm going to do that.

00:08:44.752 --> 00:08:46.710
And this is actually
going to center "password"

00:08:46.710 --> 00:08:48.835
between "email" and the
bottom of the screen, which

00:08:48.835 --> 00:08:50.010
is not quite what I wanted.

00:08:50.010 --> 00:08:52.640
Let's pull "email" back down
with another constraint.

00:08:52.640 --> 00:08:54.360
And when I do that,
I'm actually going

00:08:54.360 --> 00:08:56.520
to solve this
problem a little bit

00:08:56.520 --> 00:08:58.110
differently than
how I did before.

00:08:58.110 --> 00:09:00.570
This introduces what's called
a chain in ConstraintLayout.

00:09:00.570 --> 00:09:03.075
And it's going to solve
it with a chain solver.

00:09:03.075 --> 00:09:05.200
Now, of course, setting up
all of those constraints

00:09:05.200 --> 00:09:07.850
by hand in the Visual
Editor is kind of tedious.

00:09:07.850 --> 00:09:09.100
So there's a helper for this.

00:09:09.100 --> 00:09:12.520
You can go into
right-click on Center

00:09:12.520 --> 00:09:14.500
and choose Vertically
when I have "email"

00:09:14.500 --> 00:09:15.550
and "password" selected.

00:09:15.550 --> 00:09:17.620
And when I do that,
it's going to set up

00:09:17.620 --> 00:09:21.060
all of the constraints
that I just talked about.

00:09:21.060 --> 00:09:24.070
So inside of a chain there are
actually three different ways

00:09:24.070 --> 00:09:25.150
it can get laid out--

00:09:25.150 --> 00:09:27.440
four, technically, but three
that I use all the time.

00:09:27.440 --> 00:09:30.085
So we have spread, which means
evenly distribute everything.

00:09:30.085 --> 00:09:32.720
So this looks similar to
what we do with LinearLayout.

00:09:32.720 --> 00:09:35.147
We have spread inside, which
is basically the same thing,

00:09:35.147 --> 00:09:36.730
except the first and
the last elements

00:09:36.730 --> 00:09:38.350
get pushed to the edges.

00:09:38.350 --> 00:09:40.472
And then the one I use
most of the time is packed.

00:09:40.472 --> 00:09:42.430
So this says push everything
towards the center

00:09:42.430 --> 00:09:44.630
of the screen and
center it as a group.

00:09:44.630 --> 00:09:46.421
And so that's what
we're going to use here.

00:09:46.421 --> 00:09:48.730
We're going to use a
packed chain in order

00:09:48.730 --> 00:09:51.542
to center both of
these views together.

00:09:51.542 --> 00:09:53.500
So there's one more thing
we need to do, right?

00:09:53.500 --> 00:09:54.940
We need to put
this invisible line

00:09:54.940 --> 00:09:58.090
in the middle of the screen,
that everything's based around.

00:09:58.090 --> 00:09:59.860
So to do that, I'm
going to go to Helpers.

00:09:59.860 --> 00:10:02.620
I'm going to Add a
Vertical Guideline.

00:10:02.620 --> 00:10:04.690
So vertical guideline
is, basically, you

00:10:04.690 --> 00:10:07.014
can think of it as a
new edge of the screen.

00:10:07.014 --> 00:10:09.180
So it's, like, I have one
on the left of the screen;

00:10:09.180 --> 00:10:09.940
I have one on the
right of the screen.

00:10:09.940 --> 00:10:11.530
And now I've put an
edge of the screen

00:10:11.530 --> 00:10:13.279
in the middle of the
screen that I can use

00:10:13.279 --> 00:10:14.497
as an anchor for constraints.

00:10:14.497 --> 00:10:16.330
I'm going to go ahead
and move that to where

00:10:16.330 --> 00:10:18.130
I'd like it in my design.

00:10:18.130 --> 00:10:20.170
And now I could just
take those text views

00:10:20.170 --> 00:10:23.790
and create constraints from
those to this guideline.

00:10:23.790 --> 00:10:26.930
And to kind of visualize what
this is doing underneath,

00:10:26.930 --> 00:10:28.630
if I move the
guideline, it's actually

00:10:28.630 --> 00:10:31.030
going to move the
entire layout now.

00:10:31.030 --> 00:10:32.950
So let's move that back.

00:10:32.950 --> 00:10:34.414
And then let's get
another design.

00:10:34.414 --> 00:10:35.830
Because it turned
out, that design

00:10:35.830 --> 00:10:38.000
was not performing very well.

00:10:38.000 --> 00:10:39.730
So after many user
studies, we've

00:10:39.730 --> 00:10:42.070
discovered the solution
to our login form

00:10:42.070 --> 00:10:43.600
is left-aligning the labels.

00:10:43.600 --> 00:10:45.920
So my job is now
to implement this.

00:10:45.920 --> 00:10:48.313
So let's try to do that.

00:10:48.313 --> 00:10:51.650
Well, I did it, and I
translated it to German,

00:10:51.650 --> 00:10:52.760
and this is what happened.

00:10:52.760 --> 00:10:54.860
This is not great.

00:10:54.860 --> 00:10:57.060
So what happened here?

00:10:57.060 --> 00:10:59.062
So it turns out,
if I lay this out

00:10:59.062 --> 00:11:00.770
similar to the way I
just did, right-- so

00:11:00.770 --> 00:11:04.560
"password" is the longest
field in these labels.

00:11:04.560 --> 00:11:06.560
So if I set up a constraint
from the edit text

00:11:06.560 --> 00:11:08.476
over to "password" and
then another constraint

00:11:08.476 --> 00:11:11.150
from the edit text down to
the "password" edit text,

00:11:11.150 --> 00:11:13.130
this is going to work
great in English.

00:11:13.130 --> 00:11:15.710
But then, when I translate it
to German, these constraints,

00:11:15.710 --> 00:11:17.876
this invariance I had that
"password" is the longest

00:11:17.876 --> 00:11:19.347
field is no longer correct.

00:11:19.347 --> 00:11:20.930
So what I'm going
to need is something

00:11:20.930 --> 00:11:23.300
that's dynamic that's based
on all of these things.

00:11:23.300 --> 00:11:25.709
It's kind of like a view group.

00:11:25.709 --> 00:11:28.250
Basically, I might want a linear
layout to hold these things.

00:11:28.250 --> 00:11:29.833
But actually, I'm
in ConstraintLayout.

00:11:29.833 --> 00:11:31.549
So how do I do that
in ConstraintLayout?

00:11:31.549 --> 00:11:33.340
Well, it turns out,
there's another helper,

00:11:33.340 --> 00:11:34.673
and we're going to use that now.

00:11:34.673 --> 00:11:38.680
So if we go into Helpers, and
we use Add Vertical Barrier.

00:11:38.680 --> 00:11:40.680
This allows you to add
a barrier to the screen.

00:11:40.680 --> 00:11:43.660
What a barrier is is it's
kind of like a view group.

00:11:43.660 --> 00:11:45.910
And in fact, it's actually
called a group in code.

00:11:45.910 --> 00:11:47.990
So we can open up
the component tree,

00:11:47.990 --> 00:11:49.720
select our "email"
and "password,"

00:11:49.720 --> 00:11:52.930
and drag that down to be
inside of our barrier.

00:11:52.930 --> 00:11:54.430
Now, it's not
actually a view group.

00:11:54.430 --> 00:11:56.263
It's just a view that's
added to the screen.

00:11:56.263 --> 00:11:59.920
It's positioned on one side or
the other of all of the views

00:11:59.920 --> 00:12:02.020
that are inside of it.

00:12:02.020 --> 00:12:03.650
By default, it's on the left.

00:12:03.650 --> 00:12:05.274
But if I open up
the Attributes pane

00:12:05.274 --> 00:12:06.690
and scroll down
to the bottom, I'm

00:12:06.690 --> 00:12:08.356
going to find a barrier
direction, which

00:12:08.356 --> 00:12:10.732
I can set to the end.

00:12:10.732 --> 00:12:14.510
And now that I've done that, I'm
going to set up my constraints

00:12:14.510 --> 00:12:17.261
and then translate my
English over to German.

00:12:17.261 --> 00:12:19.010
And everything's going
to re-layout and do

00:12:19.010 --> 00:12:20.610
exactly what I expected.

00:12:20.610 --> 00:12:23.100
So that's really it.

00:12:23.100 --> 00:12:25.250
That's all of the features
and ConstraintLayout 1.0

00:12:25.250 --> 00:12:27.210
and ConstraintLayout 1.1.

00:12:27.210 --> 00:12:29.030
So now I'm going to
pass it over to Chris

00:12:29.030 --> 00:12:32.150
who's going to talk more
about more tricks that

00:12:32.150 --> 00:12:38.564
can be used to use the Visual
Editor to build constraints.

00:12:38.564 --> 00:12:39.492
CHRIS SINCO: Cool.

00:12:39.492 --> 00:12:41.946
Thanks, Sean.

00:12:41.946 --> 00:12:44.860
So with ConstraintLayout,
we've, over time,

00:12:44.860 --> 00:12:46.870
introduced many concepts.

00:12:46.870 --> 00:12:48.770
And so we started
with the basics,

00:12:48.770 --> 00:12:52.750
which is just constraints,
margins, baselines, and chains.

00:12:52.750 --> 00:12:55.780
But over 1.1 and 2.0 alpha,
we've introduced things

00:12:55.780 --> 00:12:58.195
like guidelines and
barriers and groups,

00:12:58.195 --> 00:13:00.070
and then there are many
more helpers to come.

00:13:00.070 --> 00:13:02.090
And then, of course,
there's motion layout.

00:13:02.090 --> 00:13:04.390
But one thing that
we've heard consistently

00:13:04.390 --> 00:13:06.730
is that, as we've
added more concepts

00:13:06.730 --> 00:13:08.754
and the layouts have
become more complex,

00:13:08.754 --> 00:13:10.420
it's actually become
increasingly harder

00:13:10.420 --> 00:13:13.540
to manage all of these
with ConstraintLayout.

00:13:13.540 --> 00:13:15.920
And so what I'm here
to tell you today

00:13:15.920 --> 00:13:17.600
is that we've actually
been improving

00:13:17.600 --> 00:13:20.580
a lot of this in the Visual
Editor in Android Studio.

00:13:20.580 --> 00:13:23.930
And so the four areas I'll talk
about are creating constraints

00:13:23.930 --> 00:13:27.080
and how we improved that, also
some new view options we added

00:13:27.080 --> 00:13:29.660
to the design surface,
and then some tricks

00:13:29.660 --> 00:13:32.090
around zooming and panning,
which are super useful when

00:13:32.090 --> 00:13:34.048
you're dealing with
ConstraintLayout, and then,

00:13:34.048 --> 00:13:36.320
of course, using sample data,
which we introduced back

00:13:36.320 --> 00:13:38.716
in the 3.2.

00:13:38.716 --> 00:13:41.160
So creating constraints--
so in this case,

00:13:41.160 --> 00:13:42.599
we have two components.

00:13:42.599 --> 00:13:43.390
It's pretty simple.

00:13:43.390 --> 00:13:44.961
We have an ImageView
and a TextView.

00:13:44.961 --> 00:13:46.710
And so if we want to
center the ImageView,

00:13:46.710 --> 00:13:49.380
then we just put one
constraint on the top and one

00:13:49.380 --> 00:13:51.750
on the bottom.

00:13:51.750 --> 00:13:55.630
But let's take that lovely
login form from before.

00:13:55.630 --> 00:13:58.770
So from a UI perspective,
this is actually not

00:13:58.770 --> 00:13:59.650
too complicated.

00:13:59.650 --> 00:14:01.810
We just have some labels,
we have some inputs,

00:14:01.810 --> 00:14:03.140
and we have some buttons.

00:14:03.140 --> 00:14:04.757
But from the constraint
point of view,

00:14:04.757 --> 00:14:06.090
there's actually a lot going on.

00:14:06.090 --> 00:14:08.160
So we have this
guideline in the middle.

00:14:08.160 --> 00:14:10.770
We have the "login" button
constrained to the bottom

00:14:10.770 --> 00:14:12.210
and the right of the input.

00:14:12.210 --> 00:14:15.710
We have the inputs themselves
constrained to the guideline.

00:14:15.710 --> 00:14:18.270
And so because all
these components

00:14:18.270 --> 00:14:20.490
are pretty close to
each other, when you're

00:14:20.490 --> 00:14:22.860
dragging these constraints
around in the Layout Editor,

00:14:22.860 --> 00:14:26.007
it can actually be pretty
challenging to get it right.

00:14:26.007 --> 00:14:27.840
SEAN MCQUILLAN: Even
when I made that slide,

00:14:27.840 --> 00:14:29.965
I hid half the constraints
because it was too busy.

00:14:29.965 --> 00:14:30.720
CHRIS SINCO: Yeah.

00:14:30.720 --> 00:14:33.630
That was very
simplified, actually.

00:14:33.630 --> 00:14:35.820
So one thing we've
done is actually

00:14:35.820 --> 00:14:38.520
is we've added the ability
to add constraints directly

00:14:38.520 --> 00:14:40.240
with the context menu.

00:14:40.240 --> 00:14:42.490
So in this case, if
you have components

00:14:42.490 --> 00:14:43.990
that are really
close to each other,

00:14:43.990 --> 00:14:46.920
this makes it a lot more precise
and more direct to actually set

00:14:46.920 --> 00:14:48.280
those constraints.

00:14:48.280 --> 00:14:49.310
So in this case--

00:14:49.310 --> 00:14:51.810
and this is
available in 3.3 beta

00:14:51.810 --> 00:14:54.815
as well so you can
try it out today.

00:14:54.815 --> 00:14:57.210
And so in this case, if we
select one component-- which,

00:14:57.210 --> 00:15:01.170
we have this lovely
cat picture--

00:15:01.170 --> 00:15:04.296
you can just simply
constrain it to the parent.

00:15:04.296 --> 00:15:08.720
So what does it look like if
you have multiple components?

00:15:08.720 --> 00:15:11.450
So in this case, we have
these two text views that

00:15:11.450 --> 00:15:13.230
are really close to each other.

00:15:13.230 --> 00:15:15.467
And so not sure if
people have tried

00:15:15.467 --> 00:15:17.300
to create constraints
between two text views

00:15:17.300 --> 00:15:18.166
that almost overlap.

00:15:18.166 --> 00:15:19.790
It becomes a little
painful when you're

00:15:19.790 --> 00:15:22.960
going from the bottom of
one to the top of the other.

00:15:22.960 --> 00:15:25.070
And so with this
new context menu,

00:15:25.070 --> 00:15:27.470
you can actually just
keep the two selected.

00:15:27.470 --> 00:15:29.390
And then, when you open
up the context menu,

00:15:29.390 --> 00:15:30.905
there's now this constrain menu.

00:15:30.905 --> 00:15:33.530
And so you can actually just see
that the two elements that you

00:15:33.530 --> 00:15:35.360
want to use are
there, and then you

00:15:35.360 --> 00:15:38.980
can easily cascade to the
right constraint that you want.

00:15:38.980 --> 00:15:43.586
And in this case, we're only
showing the start and end.

00:15:43.586 --> 00:15:44.960
And that's because,
in this case,

00:15:44.960 --> 00:15:47.250
the top and bottom constraints
have already been set,

00:15:47.250 --> 00:15:49.880
so we don't show them.

00:15:49.880 --> 00:15:51.520
So we can look at
another example.

00:15:51.520 --> 00:15:54.840
So here we want to
constrain the location icon

00:15:54.840 --> 00:15:57.940
to this vertical guideline
that's all the way on the left.

00:15:57.940 --> 00:16:00.600
So if you use the
drag-and-drop method,

00:16:00.600 --> 00:16:04.530
what you'll notice is that,
as you drag from the right all

00:16:04.530 --> 00:16:06.840
the way to the left,
you get all these--

00:16:06.840 --> 00:16:10.530
I guess Sean's favorite
little green flashing stuff--

00:16:10.530 --> 00:16:12.660
a lot of these targets
that all show up

00:16:12.660 --> 00:16:14.359
when you try to
create the constraint.

00:16:14.359 --> 00:16:16.650
And so if you're trying to
target some of these smaller

00:16:16.650 --> 00:16:19.205
things like the following
text or the numbers,

00:16:19.205 --> 00:16:20.580
it actually gets
pretty hard when

00:16:20.580 --> 00:16:23.685
you're trying to do drag and
drop with ConstraintLayout.

00:16:23.685 --> 00:16:26.410
And so again, this makes
it a lot more direct.

00:16:26.410 --> 00:16:29.040
So you can select the
guideline and the icon

00:16:29.040 --> 00:16:32.258
and just use the context menu.

00:16:32.258 --> 00:16:34.530
And if you really don't
want to select these things

00:16:34.530 --> 00:16:37.740
on the design surface, you can
totally use the component tree.

00:16:37.740 --> 00:16:40.170
This becomes even more
useful depending on how deep

00:16:40.170 --> 00:16:43.120
or how complex your
hierarchies get

00:16:43.120 --> 00:16:46.880
and does the exact same thing.

00:16:46.880 --> 00:16:50.836
But if you do like drag and
drop, you can still do it.

00:16:50.836 --> 00:16:52.710
And one thing that we've
tried to make easier

00:16:52.710 --> 00:16:54.760
is actually when you drag it.

00:16:54.760 --> 00:16:58.830
And so in this case, we have
this new gesture, which pending

00:16:58.830 --> 00:17:00.510
is called drag to center.

00:17:00.510 --> 00:17:03.390
And so, I think as I
mentioned before, as you drag,

00:17:03.390 --> 00:17:05.579
you now see all
these little targets.

00:17:05.579 --> 00:17:07.890
And so instead of trying
to actually target

00:17:07.890 --> 00:17:09.839
those specific green
dots, you can just

00:17:09.839 --> 00:17:11.700
simply drag to the
middle of the thing

00:17:11.700 --> 00:17:13.724
that you want
actually constrain to.

00:17:13.724 --> 00:17:15.310
And so in this case--

00:17:15.310 --> 00:17:17.910
this is just some screenshots--
if I drag from the mountain

00:17:17.910 --> 00:17:20.520
view text view, I can
just drag all the way

00:17:20.520 --> 00:17:23.260
to the middle of the cat
picture, release the mouse,

00:17:23.260 --> 00:17:26.099
and then I get this nice pop-up
menu that just shows me the two

00:17:26.099 --> 00:17:27.592
constraints that I can set.

00:17:27.592 --> 00:17:29.550
And so in this case,
because the mountain view,

00:17:29.550 --> 00:17:32.670
we're going from the left of
the mountain view text view

00:17:32.670 --> 00:17:34.830
to the cat picture, the
two constraints that

00:17:34.830 --> 00:17:39.885
make sense are actually the left
and the right or start and end.

00:17:39.885 --> 00:17:43.010
And we actually have this as
well, which comes in handy when

00:17:43.010 --> 00:17:45.140
you have overlapping views.

00:17:45.140 --> 00:17:46.760
And so this one's pretty simple.

00:17:46.760 --> 00:17:48.830
But sometimes you have
views that you want

00:17:48.830 --> 00:17:50.510
to hide and show at runtime.

00:17:50.510 --> 00:17:53.810
And so all you have to do
is drag to wherever you--

00:17:53.810 --> 00:17:55.220
to the target.

00:17:55.220 --> 00:17:56.780
And what we'll do
is actually figure

00:17:56.780 --> 00:17:59.000
out which views are
under that pixel

00:17:59.000 --> 00:18:02.360
that you released the mouse
and then show you a context

00:18:02.360 --> 00:18:06.092
menu accordingly.

00:18:06.092 --> 00:18:07.770
So if we move on
to view options--

00:18:07.770 --> 00:18:11.670
so the design surface has always
had a bunch of view options

00:18:11.670 --> 00:18:14.580
to take advantage of when you're
working with your layouts.

00:18:14.580 --> 00:18:17.850
So the two I'll talk about
specifically, which we added

00:18:17.850 --> 00:18:21.770
is show all constraints
and live rendering.

00:18:21.770 --> 00:18:23.887
So if we go back
to our login form.

00:18:23.887 --> 00:18:25.220
We're going to reuse this a lot.

00:18:28.150 --> 00:18:29.960
The constraints are set here.

00:18:29.960 --> 00:18:32.331
But the thing is, when
you're trying to--

00:18:32.331 --> 00:18:33.830
let's say you're
new to this layout,

00:18:33.830 --> 00:18:35.390
and you're trying to
actually edit constraints

00:18:35.390 --> 00:18:36.770
on one of these controls.

00:18:36.770 --> 00:18:38.300
There's actually a lot going on.

00:18:38.300 --> 00:18:40.220
And actually, again,
this is pretty simplified

00:18:40.220 --> 00:18:44.471
compared to the
normal design surface.

00:18:44.471 --> 00:18:47.890
And so what we've done
in Android Studio 3.3

00:18:47.890 --> 00:18:51.160
is we've added this option
to show all constraints,

00:18:51.160 --> 00:18:53.480
but it's actually
turned off by default.

00:18:53.480 --> 00:18:56.780
And so here's a quick video to
show you what that looks like.

00:18:56.780 --> 00:18:59.320
And so what we'll do
instead is we only

00:18:59.320 --> 00:19:02.620
show the constraints on the
actively selected component.

00:19:02.620 --> 00:19:05.696
So this makes it easier to
just work with the component

00:19:05.696 --> 00:19:07.070
that you're actually
working with

00:19:07.070 --> 00:19:09.970
and not be distracted by all
the arrows and margins that

00:19:09.970 --> 00:19:12.532
usually come with the layout.

00:19:12.532 --> 00:19:13.990
Of course, you can
easily turn this

00:19:13.990 --> 00:19:16.031
back on if you do want to
see all the constraints

00:19:16.031 --> 00:19:18.436
at the same time.

00:19:18.436 --> 00:19:20.780
And so this is kind of
showing you a side by side.

00:19:20.780 --> 00:19:23.260
And so on left, we
have it turned off.

00:19:23.260 --> 00:19:25.130
And on the right, we
have it turned on.

00:19:25.130 --> 00:19:28.091
And so, especially in the
design surface or design mode,

00:19:28.091 --> 00:19:29.840
it actually cleans it
up a lot because you

00:19:29.840 --> 00:19:31.970
don't have all these
little arrows and margins,

00:19:31.970 --> 00:19:33.740
especially for elements
that are really

00:19:33.740 --> 00:19:37.400
close to each other like the
322 in following and the 20

00:19:37.400 --> 00:19:39.221
followers.

00:19:39.221 --> 00:19:42.240
And in blueprint mode,
it's the same thing.

00:19:42.240 --> 00:19:44.520
Even though blueprint
mode is heavily simplified

00:19:44.520 --> 00:19:46.230
because we don't
render the components,

00:19:46.230 --> 00:19:48.870
it still gets a little
hairy to look at.

00:19:48.870 --> 00:19:52.965
And so we think this is a
good option as well here.

00:19:52.965 --> 00:19:55.480
The other view option we
have this live rendering.

00:19:55.480 --> 00:19:57.370
So we've actually
done live rendering

00:19:57.370 --> 00:20:00.940
by default in ConstraintLayout
for quite some time.

00:20:00.940 --> 00:20:03.045
Oh, let me go back.

00:20:03.045 --> 00:20:06.845
Can I go back?

00:20:06.845 --> 00:20:08.745
No.

00:20:08.745 --> 00:20:11.990
And so it's on by
default. But depending

00:20:11.990 --> 00:20:13.700
on the specs of your
machine, [INAUDIBLE]

00:20:13.700 --> 00:20:15.780
it can actually
be a little slow.

00:20:15.780 --> 00:20:18.290
So as you drag around,
you might make a mistake.

00:20:18.290 --> 00:20:20.204
Or oftentimes, when
I've tried to use it,

00:20:20.204 --> 00:20:22.370
I'll try to create a
constraint, and then the button

00:20:22.370 --> 00:20:24.590
will move way after I drag it.

00:20:24.590 --> 00:20:27.140
And so that actually causes
me to make more mistakes.

00:20:32.495 --> 00:20:34.730
And so if you turn it off,
it's actually much faster

00:20:34.730 --> 00:20:37.290
as you drag and
move things around.

00:20:37.290 --> 00:20:38.904
You can still see
the bounding boxes

00:20:38.904 --> 00:20:40.070
when you're dragging around.

00:20:40.070 --> 00:20:42.026
And so you'll know
where things end up.

00:20:42.026 --> 00:20:43.400
The only downside
is that it just

00:20:43.400 --> 00:20:46.418
doesn't render as you drag.

00:20:46.418 --> 00:20:48.780
And alternatively, you
can use blueprint mode.

00:20:48.780 --> 00:20:51.020
So here we don't do
any live rendering.

00:20:51.020 --> 00:20:52.626
We usually recommend
this is the best

00:20:52.626 --> 00:20:54.500
way to work with
ConstraintLayout because you

00:20:54.500 --> 00:20:58.365
can just focus on
the constraints.

00:20:58.365 --> 00:21:01.700
And so as a refresher,
to set these options,

00:21:01.700 --> 00:21:03.861
they're in the top-left
corner under the eyeball.

00:21:03.861 --> 00:21:06.110
And if you want to switch
between design and blueprint

00:21:06.110 --> 00:21:10.540
mode, that's using the
blue layers icon as well.

00:21:10.540 --> 00:21:14.654
So the other thing I'll talk
about is zooming and panning.

00:21:14.654 --> 00:21:17.700
So you've actually been able
to zoom and pan in the Layout

00:21:17.700 --> 00:21:19.170
Editor for a while now.

00:21:19.170 --> 00:21:20.847
And it comes really
in handy when

00:21:20.847 --> 00:21:23.430
you're dealing with constraint
layouts especially when, again,

00:21:23.430 --> 00:21:25.110
when things are
really small or when

00:21:25.110 --> 00:21:27.380
they're really close to
each other or overlapping.

00:21:27.380 --> 00:21:29.520
But what we've done in
3.3 is we've actually

00:21:29.520 --> 00:21:31.890
changed the keyboard
shortcuts to match

00:21:31.890 --> 00:21:34.800
more of what we expect from
the design tools like Photoshop

00:21:34.800 --> 00:21:36.360
and Sketch.

00:21:36.360 --> 00:21:39.540
And so to zoom in, you can
use Command or Control,

00:21:39.540 --> 00:21:43.090
depending on what OS you're
on, and then the equal sign.

00:21:43.090 --> 00:21:45.269
So you don't have to
actually hit shift and then

00:21:45.269 --> 00:21:46.560
the equal sign to get the plus.

00:21:46.560 --> 00:21:48.000
Just hit equals.

00:21:48.000 --> 00:21:52.230
But if you really want to use
shift, it actually still works.

00:21:52.230 --> 00:21:54.930
And then with the mouse wheel,
you can hold Command or Control

00:21:54.930 --> 00:21:56.140
and scroll up.

00:21:56.140 --> 00:21:59.625
And then if you have a trackpad,
you can just pinch in to zoom.

00:21:59.625 --> 00:22:01.950
And the opposite
is for zoom out.

00:22:01.950 --> 00:22:03.900
So it's Command and
Control minus, and then

00:22:03.900 --> 00:22:05.608
Command and Control
with the mouse wheel,

00:22:05.608 --> 00:22:10.920
scroll down, and then pinch
in the opposite direction.

00:22:10.920 --> 00:22:13.205
And then zoom to fit--
so if you're zoomed in,

00:22:13.205 --> 00:22:14.830
and you want to get
back to that layout

00:22:14.830 --> 00:22:15.760
where you can see
the whole thing,

00:22:15.760 --> 00:22:17.820
you can just use Command
and Control plus 0.

00:22:20.977 --> 00:22:23.334
And so then, if
you're zoomed in,

00:22:23.334 --> 00:22:25.000
and you don't actually
want to zoom out,

00:22:25.000 --> 00:22:27.100
but you want to pan
around, you can actually

00:22:27.100 --> 00:22:29.530
do so by holding Space
and then using the mouse

00:22:29.530 --> 00:22:31.200
to click and drag.

00:22:31.200 --> 00:22:33.580
This is a familiar gesture
if you've used Photoshop

00:22:33.580 --> 00:22:36.290
or other design tools.

00:22:36.290 --> 00:22:40.450
And so the last tip I'll talk
about is using sample data.

00:22:40.450 --> 00:22:42.960
And so with sample data
in ConstraintLayout,

00:22:42.960 --> 00:22:44.640
it's actually easier
to preview how

00:22:44.640 --> 00:22:47.160
your layouts will respond
to different content types

00:22:47.160 --> 00:22:48.450
at runtime.

00:22:48.450 --> 00:22:52.590
And so we introduced sample data
helpers in Android Studio 3.2

00:22:52.590 --> 00:22:54.920
make it easier to work
with in the design

00:22:54.920 --> 00:22:58.260
surface, specifically for
ImageViews, TextViews,

00:22:58.260 --> 00:22:59.650
and RecyclerViews.

00:22:59.650 --> 00:23:01.840
But before that, you
could use tools attributes

00:23:01.840 --> 00:23:03.810
in XML, which are still useful.

00:23:03.810 --> 00:23:06.240
But we just didn't find were
as discoverable on the design

00:23:06.240 --> 00:23:07.926
surface.

00:23:07.926 --> 00:23:10.560
And so with the ImageView,
we have two sample sets.

00:23:10.560 --> 00:23:15.030
We have avatars, and we
have scenic backgrounds.

00:23:15.030 --> 00:23:18.010
And if you want to add your
own images to the sample data,

00:23:18.010 --> 00:23:18.630
you can do so.

00:23:18.630 --> 00:23:20.530
You just create a
sample data directory

00:23:20.530 --> 00:23:23.298
at the root of your project.

00:23:23.298 --> 00:23:26.790
And so a sample data, and with
your ImageViews constrained,

00:23:26.790 --> 00:23:28.650
you can actually
just quickly switch

00:23:28.650 --> 00:23:30.510
between different
types of images

00:23:30.510 --> 00:23:33.030
and then also set different
aspect ratios and constraints.

00:23:33.030 --> 00:23:35.730
So you can quickly
see how your layout

00:23:35.730 --> 00:23:39.420
responds without actually
having to run your app.

00:23:39.420 --> 00:23:40.759
And the same goes with TextView.

00:23:40.759 --> 00:23:42.800
So with TextView, we have
a bunch of sample data.

00:23:42.800 --> 00:23:45.800
So we have cities,
we have lorem ipsum,

00:23:45.800 --> 00:23:47.540
we have dates, full name.

00:23:47.540 --> 00:23:50.010
And again, if you want
your own sample data,

00:23:50.010 --> 00:23:52.640
you can create it at the
sample data directory

00:23:52.640 --> 00:23:53.890
at the root of your project.

00:23:53.890 --> 00:23:57.859
And I think we support
flat text files and JSON.

00:23:57.859 --> 00:23:59.400
And actually, with
TextViews, I think

00:23:59.400 --> 00:24:01.980
this is even more important
because oftentimes, you'll

00:24:01.980 --> 00:24:05.160
have TextViews that are meant
for more open-ended content

00:24:05.160 --> 00:24:06.870
such as profile descriptions.

00:24:06.870 --> 00:24:09.090
So in this case, we have
no domestic short hair

00:24:09.090 --> 00:24:10.475
is a very short description.

00:24:10.475 --> 00:24:11.850
But then on the
right, this one's

00:24:11.850 --> 00:24:14.960
just a bunch of text
plopped in there.

00:24:14.960 --> 00:24:17.680
And so without having
to run your app,

00:24:17.680 --> 00:24:20.327
you can see, just with sample
data, how your layout responds.

00:24:20.327 --> 00:24:22.410
SEAN MCQUILLAN: So I don't
need a copy lorem ipsum

00:24:22.410 --> 00:24:23.640
off the internet every time now?

00:24:23.640 --> 00:24:24.306
CHRIS SINCO: No.

00:24:24.306 --> 00:24:27.010
It's just there.

00:24:27.010 --> 00:24:31.140
And I think, as you mentioned
in the previous example,

00:24:31.140 --> 00:24:35.149
this is great for testing out
across different languages.

00:24:35.149 --> 00:24:36.940
And so with that, I'll
hand it back to Sean

00:24:36.940 --> 00:24:38.400
to talk about some new features.

00:24:38.400 --> 00:24:39.810
SEAN MCQUILLAN: Thanks, Chris.

00:24:39.810 --> 00:24:40.310
All right.

00:24:40.310 --> 00:24:43.317
So that covers everything in
ConstraintLayout 1.1, 1.0--

00:24:43.317 --> 00:24:44.900
some of the new
features in the design

00:24:44.900 --> 00:24:48.049
surface coming out in 3.3 that
should hopefully help you use

00:24:48.049 --> 00:24:49.340
that to build ConstraintLayout.

00:24:49.340 --> 00:24:51.420
And now I want to move on
to new features coming out

00:24:51.420 --> 00:24:52.460
in ConstraintLayout 2.0.

00:24:52.460 --> 00:24:55.085
And by that, I
mean Motion Editor,

00:24:55.085 --> 00:24:56.960
the thing we're all
very, very excited about.

00:24:56.960 --> 00:24:58.580
So I want a show of hands.

00:24:58.580 --> 00:25:01.220
Who has tried playing with
Motion Editor already?

00:25:01.220 --> 00:25:04.010
So I see five people.

00:25:04.010 --> 00:25:06.350
So hopefully we can give
a nice introduction here

00:25:06.350 --> 00:25:08.249
to the basic concepts
of Motion Editor.

00:25:08.249 --> 00:25:10.040
And then Chris is going
to be back on stage

00:25:10.040 --> 00:25:12.050
to talk again about
the design surface.

00:25:12.050 --> 00:25:17.386
So MotionLayout allows you to
build dynamic layouts using

00:25:17.386 --> 00:25:19.010
all of the features
of ConstraintLayout

00:25:19.010 --> 00:25:21.230
we talked about
earlier, but then just

00:25:21.230 --> 00:25:23.057
changing the
constraints over time.

00:25:23.057 --> 00:25:25.640
So here we can see an example
of building a collapsible header

00:25:25.640 --> 00:25:27.950
that Chris Banes put
together that does

00:25:27.950 --> 00:25:29.660
a pretty dramatic
animation that would

00:25:29.660 --> 00:25:32.970
be pretty hard to build with
a collapsible header itself.

00:25:32.970 --> 00:25:35.630
So you see that
title image actually

00:25:35.630 --> 00:25:38.370
hides itself behind the
view as it scrolls up.

00:25:38.370 --> 00:25:40.340
It's a pretty
dramatic animation.

00:25:40.340 --> 00:25:42.254
So before we get to
something like that,

00:25:42.254 --> 00:25:43.670
let's talk a little
bit about what

00:25:43.670 --> 00:25:45.560
we can build with MotionLayout.

00:25:45.560 --> 00:25:48.690
MotionLayout can be used to
build collapsible headers.

00:25:48.690 --> 00:25:51.170
You can build state feedback
or transitions, maybe

00:25:51.170 --> 00:25:53.840
the open and close
state of a drawer.

00:25:53.840 --> 00:25:56.510
And you could also make most
of the animations that are

00:25:56.510 --> 00:25:59.155
in this presentation as well.

00:25:59.155 --> 00:26:02.040
To understand motion,
to understand animation

00:26:02.040 --> 00:26:04.230
in general, it's
really important

00:26:04.230 --> 00:26:06.330
to take a step back
and think about what

00:26:06.330 --> 00:26:08.670
actually defines an animation,
not just on Android.

00:26:08.670 --> 00:26:12.120
But even a Disney movie, how
do they make an animation?

00:26:12.120 --> 00:26:15.810
All animations are defined
by a start and an end.

00:26:15.810 --> 00:26:17.340
So I start over here.

00:26:17.340 --> 00:26:19.590
I'm here, and then
I'm ending over here.

00:26:19.590 --> 00:26:22.560
And in-between, over time,
I created an animation

00:26:22.560 --> 00:26:23.790
by doing that walking.

00:26:23.790 --> 00:26:25.734
So that's a very complex motion.

00:26:25.734 --> 00:26:27.150
Let's talk about
a very simple one

00:26:27.150 --> 00:26:29.190
and talk about the same concept.

00:26:29.190 --> 00:26:31.080
I'm going to put a
blue dot on the screen,

00:26:31.080 --> 00:26:33.270
and I'd like to
build an animation.

00:26:33.270 --> 00:26:35.520
In order to do that, I
have to define a start.

00:26:35.520 --> 00:26:37.270
I'm going to put it
in the top-left corner

00:26:37.270 --> 00:26:37.980
with constraints.

00:26:37.980 --> 00:26:39.580
I have to define an end.

00:26:39.580 --> 00:26:41.700
I'm going to put that in
the bottom-right corner

00:26:41.700 --> 00:26:43.060
with constraints.

00:26:43.060 --> 00:26:45.180
And now, in order to
build an animation,

00:26:45.180 --> 00:26:48.360
all I do is transition from
one, from the start, to the end

00:26:48.360 --> 00:26:49.185
over time.

00:26:49.185 --> 00:26:51.060
And that's what MotionLayout
will do for you.

00:26:51.060 --> 00:26:53.520
It'll figure out how to
transition that blue dot

00:26:53.520 --> 00:26:57.665
from the start down to the end.

00:26:57.665 --> 00:27:00.340
To build a
MotionLayout, you have

00:27:00.340 --> 00:27:02.650
to start with a
MotionLayout in your XML.

00:27:02.650 --> 00:27:05.290
So MotionLayout is a
subclass of ConstraintLayout.

00:27:05.290 --> 00:27:07.145
So we did that so
that it would have

00:27:07.145 --> 00:27:08.770
all of the features
of ConstraintLayout

00:27:08.770 --> 00:27:10.644
while adding all of the
new features in order

00:27:10.644 --> 00:27:12.385
to support animations.

00:27:12.385 --> 00:27:15.520
A MotionLayout then
points to a MotionScene,

00:27:15.520 --> 00:27:18.970
which is a separate XML
file from your main layout.

00:27:18.970 --> 00:27:21.730
And the MotionScene is where
you encode that start and end

00:27:21.730 --> 00:27:25.910
information that
defines your animation.

00:27:25.910 --> 00:27:30.602
The start and end are defined
in terms of constraints sets.

00:27:30.602 --> 00:27:31.810
Now what are constraint sets?

00:27:31.810 --> 00:27:33.393
You may be familiar
with this already.

00:27:33.393 --> 00:27:35.770
But if not, what we've
been talking about so far

00:27:35.770 --> 00:27:36.550
looks like this.

00:27:36.550 --> 00:27:38.591
So this is what I would
call a constraint layout.

00:27:38.591 --> 00:27:40.930
It's the views,
the actual labels,

00:27:40.930 --> 00:27:44.070
plus all of the constraints and
all of the sizing information.

00:27:44.070 --> 00:27:46.390
A constraint set
is just this part.

00:27:46.390 --> 00:27:49.720
It's just the constraints and
just the sizing information.

00:27:49.720 --> 00:27:52.060
It points to IDs
of actual views,

00:27:52.060 --> 00:27:55.190
but it doesn't actually
contain the views themselves.

00:27:55.190 --> 00:27:57.980
Now if I animate a constraint
set, it would look like that.

00:27:57.980 --> 00:27:59.920
And if I apply
that to a real view

00:27:59.920 --> 00:28:03.216
and did that same animation,
it would look like that.

00:28:03.216 --> 00:28:08.680
So let's build a fairly
easy-to-follow-along animation

00:28:08.680 --> 00:28:11.000
in ConstraintLayout
with MotionLayout.

00:28:11.000 --> 00:28:14.030
So here we have a pretty
dramatic reveal animation

00:28:14.030 --> 00:28:16.400
where the title comes on
top, the subtitle expands

00:28:16.400 --> 00:28:19.394
down below, and then
the description comes in

00:28:19.394 --> 00:28:20.060
from the bottom.

00:28:20.060 --> 00:28:22.101
And at the same time, the
image in the background

00:28:22.101 --> 00:28:23.510
is also resizing itself.

00:28:23.510 --> 00:28:25.416
So there are a lot of
things going on here.

00:28:25.416 --> 00:28:27.290
This might be actually
hard to write in code.

00:28:27.290 --> 00:28:30.610
But it's fairly easy to
write using MotionLayout.

00:28:30.610 --> 00:28:33.866
So let's take a look at
how we're going to do that.

00:28:33.866 --> 00:28:36.180
So to make a
MotionLayout, I'm just

00:28:36.180 --> 00:28:39.480
going to define the
start and the end.

00:28:39.480 --> 00:28:42.472
So the start, I'm going to
move that title of the screen.

00:28:42.472 --> 00:28:44.430
And I'm going to do that
by making a constraint

00:28:44.430 --> 00:28:49.110
from the end of the title to the
start of the ConstraintLayout.

00:28:49.110 --> 00:28:50.580
And ConstraintLayout
is very happy

00:28:50.580 --> 00:28:53.230
to lay your views out off
the screen if you ask it to.

00:28:53.230 --> 00:28:56.479
So please intend to do
that if you ask it to.

00:28:56.479 --> 00:28:58.770
And we're also going to do
the same thing on the bottom

00:28:58.770 --> 00:29:01.186
where we're going to put a
constraint from the description

00:29:01.186 --> 00:29:05.100
text to the bottom of the
screen to push that description

00:29:05.100 --> 00:29:07.560
text off the screen.

00:29:07.560 --> 00:29:09.370
Then to actually
build that, we're

00:29:09.370 --> 00:29:11.650
going to go ahead and
make a MotionLayout.

00:29:11.650 --> 00:29:13.810
So again, this is a subclass
of ConstraintLayout,

00:29:13.810 --> 00:29:15.220
and it has one new tag.

00:29:15.220 --> 00:29:17.270
It has this layout
description tag,

00:29:17.270 --> 00:29:19.600
which is going to point over
to that MotionScene file.

00:29:19.600 --> 00:29:21.940
Here, I'm going to
call it space scene.

00:29:21.940 --> 00:29:25.690
Then I have to define my
layout, which is just the views.

00:29:25.690 --> 00:29:27.470
I don't give it
widths and heights.

00:29:27.470 --> 00:29:28.971
So I don't constrain anything.

00:29:28.971 --> 00:29:30.970
I'm literally just going
to make a list of three

00:29:30.970 --> 00:29:33.565
TextViews and an ImageView.

00:29:33.565 --> 00:29:35.730
Now I'm going to go over
to that space scene file

00:29:35.730 --> 00:29:37.040
I was talking about earlier.

00:29:37.040 --> 00:29:40.500
This is the MotionScene file.

00:29:40.500 --> 00:29:42.000
So it has a MotionScene tag.

00:29:42.000 --> 00:29:44.000
And inside that, it
defines a transition.

00:29:44.000 --> 00:29:46.790
And a transition has
a start and an end.

00:29:46.790 --> 00:29:49.040
And again, that's the thing
that defines an animation.

00:29:49.040 --> 00:29:50.720
An animation always
has a beginning,

00:29:50.720 --> 00:29:53.638
and it always has an end.

00:29:53.638 --> 00:29:56.910
To define start, I'm going
to make a constraint set.

00:29:56.910 --> 00:30:00.120
And a constraint
set is just a tag.

00:30:00.120 --> 00:30:01.560
It has an ID.

00:30:01.560 --> 00:30:03.615
And then it defines a
list of constraints.

00:30:03.615 --> 00:30:05.490
And it's going to have
to define a constraint

00:30:05.490 --> 00:30:08.067
for every single view
that it's constraining.

00:30:08.067 --> 00:30:09.900
Here I'm just going to
show one of the views

00:30:09.900 --> 00:30:11.580
and leave the others
off the slide deck

00:30:11.580 --> 00:30:13.050
because it got a little long.

00:30:13.050 --> 00:30:15.596
But we'll say which
ID I'm constraining.

00:30:15.596 --> 00:30:16.970
I'm going to
constrain the title.

00:30:16.970 --> 00:30:18.760
I'm going to set
its height, width,

00:30:18.760 --> 00:30:20.287
and I'm going to
set its padding.

00:30:20.287 --> 00:30:21.870
And then I'm also
going to constrain--

00:30:21.870 --> 00:30:23.369
to push it off the
screen, I'm going

00:30:23.369 --> 00:30:26.750
to constrain the end
to the start of parent.

00:30:26.750 --> 00:30:30.302
I'm going to do the same thing
for the constraints at the end.

00:30:30.302 --> 00:30:31.760
I'm going to just
go ahead and make

00:30:31.760 --> 00:30:36.110
the title view constrain the
start to the start of parent.

00:30:36.110 --> 00:30:38.240
And this brings that
title onto the screen.

00:30:38.240 --> 00:30:40.615
I'm going to do the same thing
for all of the other views

00:30:40.615 --> 00:30:41.634
in this layout as well.

00:30:41.634 --> 00:30:42.800
And that's all I have to do.

00:30:42.800 --> 00:30:45.590
It's just a little bit
of declarative XML,

00:30:45.590 --> 00:30:49.660
and I've built this animation.

00:30:49.660 --> 00:30:51.210
So now I'm going
to pass that back

00:30:51.210 --> 00:30:55.628
to Chris who's going to talk
a little bit more about--

00:30:55.628 --> 00:30:59.190
CHRIS SINCO: --the
Motion Editor.

00:30:59.190 --> 00:31:02.650
So at I/O this year, we
gave you a sneak preview

00:31:02.650 --> 00:31:05.830
of the Motion Editor when we
had announced MotionLayout.

00:31:05.830 --> 00:31:09.000
Since then, we've been
working pretty hard on it,

00:31:09.000 --> 00:31:12.050
but it's not quite
ready yet, sorry to say.

00:31:12.050 --> 00:31:14.200
But we're still very
excited about it.

00:31:14.200 --> 00:31:16.000
But we also wanted
to make sure that we

00:31:16.000 --> 00:31:18.520
focus on getting some
foundational pieces in place

00:31:18.520 --> 00:31:20.290
before we release it.

00:31:20.290 --> 00:31:22.300
We also don't want
to be too impatient

00:31:22.300 --> 00:31:25.090
and really make sure we get
it right, unlike some things

00:31:25.090 --> 00:31:27.970
we've released too early in
the past like Instant Run.

00:31:27.970 --> 00:31:30.200
[LAUGHTER]

00:31:31.990 --> 00:31:34.630
So the first foundational piece
is really the MotionLayout

00:31:34.630 --> 00:31:35.462
library itself.

00:31:35.462 --> 00:31:36.670
So we just talked about that.

00:31:36.670 --> 00:31:38.520
And it's been out for a while.

00:31:38.520 --> 00:31:40.964
And so before we got too
far in building the tool,

00:31:40.964 --> 00:31:42.880
we wanted to make sure
that we actually nailed

00:31:42.880 --> 00:31:45.212
the right animation
concepts and controls that

00:31:45.212 --> 00:31:47.170
are required to make
these simple and beautiful

00:31:47.170 --> 00:31:48.370
animations.

00:31:48.370 --> 00:31:50.140
On top of that, the
library also needs

00:31:50.140 --> 00:31:53.620
to be performant and integrate
well with your existing views.

00:31:53.620 --> 00:31:56.620
And so John Hoford and Nicholas
have been really working hard

00:31:56.620 --> 00:31:57.740
on the library.

00:31:57.740 --> 00:31:59.157
And so they love
all your feedback

00:31:59.157 --> 00:32:01.490
and all the really cool demos
that have been coming out.

00:32:01.490 --> 00:32:02.720
So please keep it coming in.

00:32:02.720 --> 00:32:04.766
Thank you.

00:32:04.766 --> 00:32:07.560
But the other thing is actually
the quality of Android Studio.

00:32:07.560 --> 00:32:10.110
And so this is the second
foundational piece.

00:32:10.110 --> 00:32:11.820
And it's been the
primary focus for us

00:32:11.820 --> 00:32:14.880
in 3.3 and the
upcoming 3.4 release.

00:32:14.880 --> 00:32:16.620
And so in this case,
we've made a lot

00:32:16.620 --> 00:32:20.432
of performance and
interaction improvements

00:32:20.432 --> 00:32:22.140
to the design surface
because it actually

00:32:22.140 --> 00:32:23.970
has to be able to
render animations

00:32:23.970 --> 00:32:27.720
at 60 frames per second
and also make it easier

00:32:27.720 --> 00:32:30.210
to work with constraints,
because one of the biggest

00:32:30.210 --> 00:32:32.490
prerequisites of MotionLayout
is you have to know

00:32:32.490 --> 00:32:33.990
how to use ConstraintLayout.

00:32:33.990 --> 00:32:36.360
And so we think that, if
we invest in the quality

00:32:36.360 --> 00:32:37.950
now in the tool,
it will actually

00:32:37.950 --> 00:32:39.870
make the Motion Editor
experience much better

00:32:39.870 --> 00:32:42.030
in the future.

00:32:42.030 --> 00:32:43.590
And so with that,
I'm here to show

00:32:43.590 --> 00:32:47.001
you some very early explorations
of the Motion Editor.

00:32:47.001 --> 00:32:48.000
These are just mock-ups.

00:32:48.000 --> 00:32:50.610
This is not the build.

00:32:50.610 --> 00:32:51.804
I'm the designer, remember?

00:32:51.804 --> 00:32:53.720
SEAN MCQUILLAN: This is
all made in Photoshop.

00:32:53.720 --> 00:32:54.470
CHRIS SINCO: Yeah.

00:32:54.470 --> 00:32:55.389
This is all Photoshop.

00:32:55.389 --> 00:32:57.180
Of course, we'd love
to hear your feedback.

00:32:57.180 --> 00:32:59.250
So feel free to find me or Sean.

00:32:59.250 --> 00:33:01.050
And I think John
is here as well.

00:33:01.050 --> 00:33:05.095
We'll be at the speaker
QA to talk more about it.

00:33:05.095 --> 00:33:09.110
So if we take the example from
before where we have the space

00:33:09.110 --> 00:33:11.690
picture, and we have some
TextViews animating in,

00:33:11.690 --> 00:33:13.640
let's just use that
as the context of what

00:33:13.640 --> 00:33:15.500
we'll see in the Motion Editor.

00:33:15.500 --> 00:33:19.330
So what does that
actually look like?

00:33:19.330 --> 00:33:22.530
So here we have a new
perspective on the component

00:33:22.530 --> 00:33:26.280
tree, which, for now, we're just
calling the transitions view.

00:33:26.280 --> 00:33:27.930
And so for the
purpose of the talk,

00:33:27.930 --> 00:33:30.540
I'm just going to talk
about this new view

00:33:30.540 --> 00:33:33.420
because we think this is the
most significant animation

00:33:33.420 --> 00:33:35.340
part of the new UI.

00:33:35.340 --> 00:33:37.050
Of course, later
on, you'll actually

00:33:37.050 --> 00:33:40.767
have the other views like the
property panel and the palette.

00:33:40.767 --> 00:33:42.600
But we haven't quite
figured out the details

00:33:42.600 --> 00:33:45.690
of how that integrates with
this timeline or this transition

00:33:45.690 --> 00:33:46.230
view.

00:33:46.230 --> 00:33:49.240
So stay tuned for that.

00:33:49.240 --> 00:33:51.860
So in this case, we have
the start of the transition.

00:33:51.860 --> 00:33:54.300
And so you can see that
the TextViews are actually

00:33:54.300 --> 00:33:55.282
off the viewport.

00:33:55.282 --> 00:33:57.240
But you can see that
there's a motion path that

00:33:57.240 --> 00:33:59.940
goes from outside and then in.

00:33:59.940 --> 00:34:03.510
We don't actually render the
TextViews outside the viewport

00:34:03.510 --> 00:34:04.230
today.

00:34:04.230 --> 00:34:05.460
But that's definitely
something that we

00:34:05.460 --> 00:34:07.209
will need to have for
animation because we

00:34:07.209 --> 00:34:09.150
know that's a very
typical animation

00:34:09.150 --> 00:34:12.870
example, to have things fly in.

00:34:12.870 --> 00:34:16.670
And so if we fast forward
halfway through the transition,

00:34:16.670 --> 00:34:18.469
so now you can see
that the TextViews

00:34:18.469 --> 00:34:20.120
have moved about halfway in.

00:34:20.120 --> 00:34:24.710
And in this case, we have the
space image zoomed back out.

00:34:24.710 --> 00:34:28.012
And that's what
we intended here.

00:34:28.012 --> 00:34:31.940
So if we rewind, let's go
deeper on what this transition

00:34:31.940 --> 00:34:32.900
view actually does.

00:34:35.582 --> 00:34:38.070
So we're only showing
one transition right now.

00:34:38.070 --> 00:34:41.340
And it's uniquely named by
its start and end constraint

00:34:41.340 --> 00:34:44.620
set, which simply is just
start and end in this case.

00:34:44.620 --> 00:34:47.526
You can have multiple
transitions per MotionLayout.

00:34:47.526 --> 00:34:48.900
And so with this
dropdown, you'll

00:34:48.900 --> 00:34:51.840
be able to switch between
the different transitions.

00:34:51.840 --> 00:34:54.600
And of course, we'll load the
corresponding constraints sets

00:34:54.600 --> 00:34:56.219
and change the
timeline so you can

00:34:56.219 --> 00:34:58.156
see how the components change.

00:34:58.156 --> 00:35:01.490
And so each transition has
its own properties, which is,

00:35:01.490 --> 00:35:03.970
of course, the start and
the end constraint set.

00:35:03.970 --> 00:35:07.480
It has the duration, which
is expressed in milliseconds,

00:35:07.480 --> 00:35:11.110
and the stagger property, which
allows you to actually stagger

00:35:11.110 --> 00:35:14.140
the animation itself.

00:35:14.140 --> 00:35:17.280
So if we move down,
we have the timeline.

00:35:17.280 --> 00:35:19.150
And so you have,
starting from the left,

00:35:19.150 --> 00:35:20.250
you have the playback bar.

00:35:20.250 --> 00:35:22.230
So you can loop the
animation as many times

00:35:22.230 --> 00:35:24.570
as you want just to get
the animation right.

00:35:24.570 --> 00:35:27.210
You can quickly jump to
the start or the end.

00:35:27.210 --> 00:35:31.230
And if you want to speed up
or slow down the animation,

00:35:31.230 --> 00:35:33.420
we also allow that
as well, again, just

00:35:33.420 --> 00:35:36.160
to tune the animation perfectly.

00:35:36.160 --> 00:35:38.700
And we have this time control
here so you can actually

00:35:38.700 --> 00:35:41.610
step through millisecond
by millisecond just

00:35:41.610 --> 00:35:43.930
to see the animation plays out.

00:35:43.930 --> 00:35:47.510
And then, for the timeline
itself, we show from 0 to 100--

00:35:47.510 --> 00:35:49.050
100 being the end.

00:35:49.050 --> 00:35:51.052
And so you can use
this slider here

00:35:51.052 --> 00:35:53.010
to actually make the
timeline bigger or smaller

00:35:53.010 --> 00:35:54.960
depending on which
part of the transition

00:35:54.960 --> 00:35:57.746
you want to focus on.

00:35:57.746 --> 00:35:59.382
And so if we move
down, we can actually

00:35:59.382 --> 00:36:00.840
see all the components
that you can

00:36:00.840 --> 00:36:02.712
animate in the MotionLayout.

00:36:02.712 --> 00:36:04.170
And so in this
case, each component

00:36:04.170 --> 00:36:06.930
will show that they have a
start and an end constraint set,

00:36:06.930 --> 00:36:10.910
which are required in order
to actually animate anything.

00:36:10.910 --> 00:36:14.590
And so we look specifically
at the space flash image,

00:36:14.590 --> 00:36:17.432
it has a key attribute in
the middle or a key frame,

00:36:17.432 --> 00:36:19.890
which we're actually going to
change the scale type halfway

00:36:19.890 --> 00:36:23.100
through the animation.

00:36:23.100 --> 00:36:25.482
And so if we zoom
out, those icons

00:36:25.482 --> 00:36:26.940
on the timeline
actually correspond

00:36:26.940 --> 00:36:29.350
to the same icons on
the design surface.

00:36:29.350 --> 00:36:31.040
That way you can
actually correlate--

00:36:31.040 --> 00:36:34.320
OK, here's my components
that I'm animating,

00:36:34.320 --> 00:36:35.940
and where they're
starting and ending,

00:36:35.940 --> 00:36:37.481
and what are the
actual motion paths.

00:36:40.624 --> 00:36:44.330
And so that's where we are
with the Motion Editor.

00:36:44.330 --> 00:36:49.249
We hope to get it out soon,
but I can't promise anything.

00:36:49.249 --> 00:36:49.748
Sorry.

00:36:49.748 --> 00:36:50.800
SEAN MCQUILLAN: Later next year.

00:36:50.800 --> 00:36:51.550
CHRIS SINCO: Yeah.

00:36:51.550 --> 00:36:54.230
Sometime in 2019.

00:36:54.230 --> 00:36:55.730
And that's it.

00:36:55.730 --> 00:36:57.230
[APPLAUSE]

00:36:58.430 --> 00:37:01.180
[MUSIC PLAYING]

