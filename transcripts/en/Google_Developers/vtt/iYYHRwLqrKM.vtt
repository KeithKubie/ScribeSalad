WEBVTT
Kind: captions
Language: en

00:00:07.200 --> 00:00:08.160
Oh.

00:00:08.160 --> 00:00:09.120
Oh.

00:00:09.120 --> 00:00:10.948
Are we on?

00:00:10.948 --> 00:00:12.310
Um, we're on?

00:00:12.310 --> 00:00:13.220
OK.

00:00:13.220 --> 00:00:15.422
Well, um, hi.

00:00:15.422 --> 00:00:16.841
Hi.

00:00:16.841 --> 00:00:18.260
Hi.

00:00:18.260 --> 00:00:20.526
I'm Pete Monster, a
developer advocate at Google,

00:00:20.526 --> 00:00:25.991
and I think the
internet is for forms.

00:00:25.991 --> 00:00:29.890
Forms are a pain to fill
out, especially on mobile.

00:00:29.890 --> 00:00:32.630
Keyboards are small, you
have to switch between them,

00:00:32.630 --> 00:00:36.112
monsters are impatient,
and with our furry thumbs,

00:00:36.112 --> 00:00:38.740
it's hard to hit the right key.

00:00:38.740 --> 00:00:42.480
It isn't a surprise that almost
97% of mobile shopping carts

00:00:42.480 --> 00:00:44.590
are abandoned.

00:00:44.590 --> 00:00:47.390
I've got a few tips
to improve your forms,

00:00:47.390 --> 00:00:49.340
reducing the pain
for your monsters,

00:00:49.340 --> 00:00:54.450
and increasing the chances
that they'll get it right.

00:00:54.450 --> 00:00:56.280
Take the pain out
of forms by reducing

00:00:56.280 --> 00:00:58.550
the number of
questions that you ask.

00:00:58.550 --> 00:01:02.995
And be sure to label and
name your inputs properly.

00:01:02.995 --> 00:01:06.350
Use the label element to
provide direction to monsters,

00:01:06.350 --> 00:01:09.720
telling them what
information is needed.

00:01:09.720 --> 00:01:12.080
Each label is
associated with an input

00:01:12.080 --> 00:01:14.950
by placing it inside
the label element,

00:01:14.950 --> 00:01:18.972
or by using the for attribute.

00:01:18.972 --> 00:01:22.530
Using labels also helps to
improve touch target sizes.

00:01:22.530 --> 00:01:26.770
Monsters can either touch
the label or the input

00:01:26.770 --> 00:01:29.290
and immediately start typing.

00:01:29.290 --> 00:01:29.790
Yay!

00:01:33.230 --> 00:01:36.500
Placeholders give hints
about the expected input.

00:01:36.500 --> 00:01:39.360
Adding a placeholder attribute
will display its value

00:01:39.360 --> 00:01:43.320
as light text until
the element gets focus.

00:01:43.320 --> 00:01:47.202
Best of all, it's all done
automagically by the browser

00:01:47.202 --> 00:01:50.505
with no extra
javascript required.

00:01:50.505 --> 00:01:51.005
Yay!

00:01:54.200 --> 00:01:57.130
But you know what's even better
than an input with a large tap

00:01:57.130 --> 00:01:59.350
target?

00:01:59.350 --> 00:02:01.480
Well, do you?

00:02:01.480 --> 00:02:03.260
Tell me.

00:02:03.260 --> 00:02:05.380
I'm waiting.

00:02:05.380 --> 00:02:07.820
Still waiting.

00:02:07.820 --> 00:02:08.696
OK, fine.

00:02:08.696 --> 00:02:10.520
I'll tell you.

00:02:10.520 --> 00:02:14.575
Having the browser
do it for you.

00:02:14.575 --> 00:02:15.075
Yay!

00:02:17.620 --> 00:02:21.170
Don't use random values
for input names or IDs.

00:02:21.170 --> 00:02:24.710
Instead, use standard
naming conventions.

00:02:24.710 --> 00:02:27.780
For example, want the
monster's first name?

00:02:27.780 --> 00:02:31.240
Name the input fname.

00:02:31.240 --> 00:02:34.835
In cases where the browser
can't fill it in automagically,

00:02:34.835 --> 00:02:36.470
that makes monster mad.

00:02:36.470 --> 00:02:37.920
Hmph!

00:02:37.920 --> 00:02:39.940
Tell the browser
which keyboard will

00:02:39.940 --> 00:02:44.938
be the most useful by using
the correct input type.

00:02:44.938 --> 00:02:48.120
These new input types
give hints to the browser

00:02:48.120 --> 00:02:51.010
about what type of
keyboard layout to use.

00:02:51.010 --> 00:02:53.780
That makes it easier
to enter information

00:02:53.780 --> 00:02:55.946
without having to
change the keyboard,

00:02:55.946 --> 00:02:59.508
and monsters only see the
appropriate keys for that input

00:02:59.508 --> 00:03:00.008
type.

00:03:02.640 --> 00:03:05.540
Monsters and humans
love feedback,

00:03:05.540 --> 00:03:09.010
so keep them up-to-date
as they fill the form in.

00:03:09.010 --> 00:03:13.652
And before they submit it,
make sure everything is A-OK.

00:03:13.652 --> 00:03:16.372
Don't make them wait until
the form has been submitted

00:03:16.372 --> 00:03:18.695
to tell them they
forgot something.

00:03:18.695 --> 00:03:19.570
Tell them right away!

00:03:22.660 --> 00:03:24.240
There are several
attributes that you

00:03:24.240 --> 00:03:27.320
can use to provide
monster side validation.

00:03:27.320 --> 00:03:30.730
The pattern attribute
specifies a regular expression

00:03:30.730 --> 00:03:34.850
used to validate an input field.

00:03:34.850 --> 00:03:36.960
If the required
attribute is present,

00:03:36.960 --> 00:03:39.150
then the field must
contain a value

00:03:39.150 --> 00:03:42.920
before the form
can be submitted.

00:03:42.920 --> 00:03:47.750
For numeric input types like
numbers, ranges, dates, times,

00:03:47.750 --> 00:03:51.330
you can specify the
minimum and maximum values,

00:03:51.330 --> 00:03:55.420
as well as how much they should
each increment or decrement,

00:03:55.420 --> 00:03:59.570
as they're adjusted by
the sliders or spinners.

00:03:59.570 --> 00:04:01.570
The maxlength
attribute can be used

00:04:01.570 --> 00:04:04.170
to specify the
maximum input length,

00:04:04.170 --> 00:04:07.730
and is useful when you want to
limit the length of information

00:04:07.730 --> 00:04:10.642
provided by the monster.

00:04:10.642 --> 00:04:14.010
But when built-in validation
and regular expressions

00:04:14.010 --> 00:04:17.530
aren't enough, you can use
the constraint validation API,

00:04:17.530 --> 00:04:22.300
a powerful tool for
handling custom validation.

00:04:22.300 --> 00:04:25.245
To make sure the form is
valid before it's submitted,

00:04:25.245 --> 00:04:29.070
catch the submit event and
then use the checkValidity

00:04:29.070 --> 00:04:32.321
function to make sure
that everything is A-OK.

00:04:32.321 --> 00:04:35.440
If not, prevent the form
from being submitted,

00:04:35.440 --> 00:04:38.183
and tell the monster
about all the problems.

00:04:38.183 --> 00:04:41.190
Otherwise, submit away.

00:04:41.190 --> 00:04:41.690
Yay!

00:04:44.460 --> 00:04:47.220
The best forms have
the fewest inputs,

00:04:47.220 --> 00:04:50.940
are easy to understand,
have large tap targets,

00:04:50.940 --> 00:04:56.180
use the right keyboards, and
give monsters lots of feedback.

00:04:56.180 --> 00:04:58.461
Do your forms follow all
these best practices?

00:04:58.461 --> 00:05:01.560
If not, get on it.

00:05:01.560 --> 00:05:04.205
And once you've done that,
check out this other video

00:05:04.205 --> 00:05:06.640
on how request
autocomplete can help

00:05:06.640 --> 00:05:09.960
eliminate checkout
forms completely.

00:05:09.960 --> 00:05:11.155
Thanks for watching.

00:05:11.155 --> 00:05:11.655
Bye!

00:05:18.180 --> 00:05:20.480
Are we off?

00:05:20.480 --> 00:05:22.345
Are we done yet?

00:05:22.345 --> 00:05:23.470
Why are you still watching?

00:05:26.140 --> 00:05:28.540
I'm done.

00:05:28.540 --> 00:05:31.492
I don't have
anything more to say.

00:05:31.492 --> 00:05:33.468
Honest.

00:05:33.468 --> 00:05:36.632
You can go now.

00:05:36.632 --> 00:05:38.090
This isn't like
one of those movies

00:05:38.090 --> 00:05:41.097
where there's a surprise ending.

00:05:41.097 --> 00:05:43.911
We're done.

00:05:43.911 --> 00:05:45.880
OK, I'm just going to leave now.

00:05:45.880 --> 00:05:47.730
See ya.

