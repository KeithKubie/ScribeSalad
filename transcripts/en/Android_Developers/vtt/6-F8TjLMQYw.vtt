WEBVTT
Kind: captions
Language: en

00:00:08.204 --> 00:00:09.120
KATHERINE KUAN: Hello.

00:00:09.120 --> 00:00:11.810
My name is Katherine Kuan,
and I'm a developer advocate

00:00:11.810 --> 00:00:14.840
on the Developer Relations
team here at Google.

00:00:14.840 --> 00:00:17.640
Today, I'll be talking
about Google Play services.

00:00:17.640 --> 00:00:19.590
For those of you who
don't know what it is,

00:00:19.590 --> 00:00:22.770
it's a way for us to provide
new APIs to developers

00:00:22.770 --> 00:00:25.700
on a regular basis that
will work on devices running

00:00:25.700 --> 00:00:29.660
the latest operating system,
all the way back to Gingerbread.

00:00:29.660 --> 00:00:34.950
It contains great APIs, such
as Location, Games, Wallet, G+,

00:00:34.950 --> 00:00:36.270
and much, much more.

00:00:36.270 --> 00:00:38.696
You can leverage all of
these to create amazing apps

00:00:38.696 --> 00:00:40.550
for your users.

00:00:40.550 --> 00:00:42.440
To use these APIs,
you can access them

00:00:42.440 --> 00:00:44.570
through the Google Play
services app, which

00:00:44.570 --> 00:00:46.920
is delivered to users'
devices through Google Play,

00:00:46.920 --> 00:00:48.720
and updated automatically.

00:00:48.720 --> 00:00:50.850
With the most recent
release of the app,

00:00:50.850 --> 00:00:53.020
we're moving to a new
model for how developers

00:00:53.020 --> 00:00:55.020
like you can interact
more consistently

00:00:55.020 --> 00:00:56.510
with these services.

00:00:56.510 --> 00:00:57.380
Don't worry though.

00:00:57.380 --> 00:01:00.300
If you've previously integrated
with Google Play services,

00:01:00.300 --> 00:01:02.880
nothing changes for your
existing apps in the wild.

00:01:02.880 --> 00:01:05.880
The binary interface of the
Google Play services app

00:01:05.880 --> 00:01:07.160
remains the same.

00:01:07.160 --> 00:01:10.810
So previously compiled
apps will continue to work.

00:01:10.810 --> 00:01:12.930
In today's DevByte,
I'll cover why

00:01:12.930 --> 00:01:14.970
we need this change,
what it is and how

00:01:14.970 --> 00:01:17.230
to implement it, and
step through an example

00:01:17.230 --> 00:01:18.780
together with you.

00:01:18.780 --> 00:01:20.880
So let's begin with the basics.

00:01:20.880 --> 00:01:23.290
To use all the great APIs
provided by the Google Play

00:01:23.290 --> 00:01:25.840
services app, you
need to first open up

00:01:25.840 --> 00:01:28.370
a client connection
to that process.

00:01:28.370 --> 00:01:30.440
To do this, you include
the Google Play services

00:01:30.440 --> 00:01:31.780
SDK in your app.

00:01:31.780 --> 00:01:35.514
And call into the SDK to
set up the connection.

00:01:35.514 --> 00:01:37.180
Now, there used to
be a different client

00:01:37.180 --> 00:01:40.350
for each service, such as
the PlusClient, GamesClient,

00:01:40.350 --> 00:01:42.490
AppStateClient, and so on.

00:01:42.490 --> 00:01:45.820
To use three services, you would
have to create three clients,

00:01:45.820 --> 00:01:47.540
and manage independent
connections

00:01:47.540 --> 00:01:50.310
with slightly different nuances.

00:01:50.310 --> 00:01:53.380
Fortunately, with this new and
simplified interaction model,

00:01:53.380 --> 00:01:55.980
you will only need a
single GoogleApiClient

00:01:55.980 --> 00:01:58.350
to connect to the Google
Play services app.

00:01:58.350 --> 00:02:00.000
When you set up the
client, you specify

00:02:00.000 --> 00:02:02.230
whichever APIs you want to use.

00:02:02.230 --> 00:02:04.240
This greatly improves
the developer experience

00:02:04.240 --> 00:02:06.120
because you only have
one client to worry

00:02:06.120 --> 00:02:08.680
about connecting and
handling Callbacks for.

00:02:08.680 --> 00:02:10.479
Let's talk about
how to implement it

00:02:10.479 --> 00:02:13.050
by seeing some examples of
how you would initialize

00:02:13.050 --> 00:02:15.010
the GoogleApiClient.

00:02:15.010 --> 00:02:17.250
This shows you how
to add the Wallet API

00:02:17.250 --> 00:02:19.610
and specify an account.

00:02:19.610 --> 00:02:23.050
This shows the
Plus API and scope.

00:02:23.050 --> 00:02:25.630
This shows the
Drive API and scope.

00:02:25.630 --> 00:02:27.470
And now, the real
difference is that now you

00:02:27.470 --> 00:02:30.112
can add multiple APIs
and scopes easily,

00:02:30.112 --> 00:02:32.570
which is a huge win in terms
of saving you development time

00:02:32.570 --> 00:02:34.720
and complexity.

00:02:34.720 --> 00:02:37.120
So once you have initialized
a client with the APIs

00:02:37.120 --> 00:02:39.270
you need, you have to
connect and implement

00:02:39.270 --> 00:02:43.290
Callbacks for the single
GoogleApiClient, as seen here.

00:02:43.290 --> 00:02:45.960
After you have a
connected GoogleApiClient,

00:02:45.960 --> 00:02:48.190
how do you access the
methods in the API?

00:02:48.190 --> 00:02:50.470
We can look at the case
of Games as an example.

00:02:50.470 --> 00:02:52.180
The previous model
involved calling

00:02:52.180 --> 00:02:54.220
into the GamesClient
as the main entrypoint

00:02:54.220 --> 00:02:56.630
to get things like
achievements and leaderboards.

00:02:56.630 --> 00:02:58.630
But that is now
being deprecated.

00:02:58.630 --> 00:03:01.120
So should we call it
on GoogleApiClient

00:03:01.120 --> 00:03:02.670
because that's the replacement?

00:03:02.670 --> 00:03:05.497
Well, we can't because it's
not coupled to any service.

00:03:05.497 --> 00:03:07.580
And we don't want it to
know about all the methods

00:03:07.580 --> 00:03:10.650
that each service could
potentially provide.

00:03:10.650 --> 00:03:13.080
Instead, the answer is to
use the new entrypoints

00:03:13.080 --> 00:03:14.280
that we've created.

00:03:14.280 --> 00:03:16.370
In the Games case,
the main entrypoint

00:03:16.370 --> 00:03:18.110
is now the Games
class, which offers

00:03:18.110 --> 00:03:20.241
static methods to
read or write data.

00:03:20.241 --> 00:03:22.490
You can access game achievements
through the Games dot

00:03:22.490 --> 00:03:25.080
Achievements class, or a
leaderboard through the Games

00:03:25.080 --> 00:03:27.660
dot Leaderboards
class, and so on.

00:03:27.660 --> 00:03:29.520
Every time you make
a call to an API,

00:03:29.520 --> 00:03:32.920
you must pass the
GoogleApiClient object as well.

00:03:32.920 --> 00:03:35.477
This serves as a reminder that
you need an open connection

00:03:35.477 --> 00:03:37.810
to the Google Play services
app in order for the request

00:03:37.810 --> 00:03:39.080
to be handled.

00:03:39.080 --> 00:03:41.980
For more detail, you can check
out the documentation or sample

00:03:41.980 --> 00:03:44.820
games apps using
the provided link.

00:03:44.820 --> 00:03:46.710
Now, after you
call an API, we've

00:03:46.710 --> 00:03:49.680
standardized it so that you
get a pending result back.

00:03:49.680 --> 00:03:52.160
PendingResult is typed so
that you can expect the answer

00:03:52.160 --> 00:03:54.700
that you're waiting for
to be of type result.

00:03:54.700 --> 00:03:58.110
You can wait synchronously
for the result as seen here,

00:03:58.110 --> 00:04:00.600
or you can set an AsynchCallback
to notify you later

00:04:00.600 --> 00:04:02.510
when the result is ready.

00:04:02.510 --> 00:04:05.210
Result is an interface that
the services use to return you

00:04:05.210 --> 00:04:08.470
the data you've requested, and
it has a Get Status method.

00:04:08.470 --> 00:04:10.770
The status object tells
you information about

00:04:10.770 --> 00:04:12.950
whether or not the result
was successful and uses

00:04:12.950 --> 00:04:15.130
a standard set of status codes.

00:04:15.130 --> 00:04:18.390
Then you can proceed
and use the results.

00:04:18.390 --> 00:04:20.180
To review everything
we went over,

00:04:20.180 --> 00:04:22.220
let's walk through an example.

00:04:22.220 --> 00:04:25.180
We are fetching the visible
people in a user's G+ circles,

00:04:25.180 --> 00:04:27.060
which can be
useful, for example,

00:04:27.060 --> 00:04:30.150
to create a social
experience in an app.

00:04:30.150 --> 00:04:32.230
First, we set up
the GoogleApiClient

00:04:32.230 --> 00:04:35.990
and set the Plus, API, Scope,
and Connection Callbacks.

00:04:35.990 --> 00:04:37.750
Then we implement
the Callback methods

00:04:37.750 --> 00:04:40.990
for Connection Succeeded,
Suspended, or Failed.

00:04:40.990 --> 00:04:42.490
The connection could
fail because it

00:04:42.490 --> 00:04:44.400
requires user intervention.

00:04:44.400 --> 00:04:46.620
For example, to
choose an account.

00:04:46.620 --> 00:04:49.660
Then an intent would be returned
in the connection result.

00:04:49.660 --> 00:04:51.920
And you should allow the
user to resolve the problem

00:04:51.920 --> 00:04:54.390
and connect again.

00:04:54.390 --> 00:04:55.930
Next, we call Connect
and Disconnect

00:04:55.930 --> 00:04:57.570
on the GoogleApiClient.

00:04:57.570 --> 00:04:59.740
As soon as the
connection is successful,

00:04:59.740 --> 00:05:01.495
we can fetch the
information our app

00:05:01.495 --> 00:05:04.240
needs by calling a
static method in the API

00:05:04.240 --> 00:05:07.025
which is Plus dot People
API dot load Visible.

00:05:07.025 --> 00:05:10.520
And we pass in the
GoogleApiClient,

00:05:10.520 --> 00:05:12.390
on the PendingResult
that gets returned,

00:05:12.390 --> 00:05:16.210
we set a Callback because we
want the result asynchronously.

00:05:16.210 --> 00:05:18.900
In the Callback, we will
receive a Load People

00:05:18.900 --> 00:05:20.725
Result, which is of type result.

00:05:20.725 --> 00:05:22.960
So we can get the
status, and check

00:05:22.960 --> 00:05:25.140
that the status
code is successful.

00:05:25.140 --> 00:05:27.480
If all is well, then we can
obtain the list of people

00:05:27.480 --> 00:05:30.010
that we're looking
for from the result.

00:05:30.010 --> 00:05:32.700
To see the full example, go
to the List Visible People

00:05:32.700 --> 00:05:37.210
Activity dot Java Class,
in the samples, in the SDK.

00:05:37.210 --> 00:05:39.800
In conclusion, we are moving
towards a consistent model

00:05:39.800 --> 00:05:42.320
of how to interact with
Google Play services.

00:05:42.320 --> 00:05:44.670
See the documentation
for more details.

00:05:44.670 --> 00:05:47.200
Existing services like
Games, AppState, Wallet,

00:05:47.200 --> 00:05:49.780
and G+ have already
converted to the new model.

00:05:49.780 --> 00:05:51.510
And more will be coming soon.

00:05:51.510 --> 00:05:53.150
New services like
Chromecast and Drive

00:05:53.150 --> 00:05:55.690
are already working with
the GoogleApiClient.

00:05:55.690 --> 00:05:57.770
So try out Google
Play services today,

00:05:57.770 --> 00:06:00.220
and see how it can
enhance your app.

00:06:00.220 --> 00:06:03.500
Thank you for watching,
and see you next time.

