WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:03.320
 
hi so mostly just a quick update on what

00:00:03.320 --> 00:00:03.330
hi so mostly just a quick update on what
 

00:00:03.330 --> 00:00:04.460
hi so mostly just a quick update on what
the indicate has gone through in the

00:00:04.460 --> 00:00:04.470
the indicate has gone through in the
 

00:00:04.470 --> 00:00:06.019
the indicate has gone through in the
last year and a little bit

00:00:06.019 --> 00:00:06.029
last year and a little bit
 

00:00:06.029 --> 00:00:07.970
last year and a little bit
forward-looking stuff as well as a tiny

00:00:07.970 --> 00:00:07.980
forward-looking stuff as well as a tiny
 

00:00:07.980 --> 00:00:10.220
forward-looking stuff as well as a tiny
bit of advice on the 64-bit transition

00:00:10.220 --> 00:00:10.230
bit of advice on the 64-bit transition
 

00:00:10.230 --> 00:00:13.400
bit of advice on the 64-bit transition
that's coming up that's me dan Albert

00:00:13.400 --> 00:00:13.410
that's coming up that's me dan Albert
 

00:00:13.410 --> 00:00:15.860
that's coming up that's me dan Albert
that's our where we have our bug tracker

00:00:15.860 --> 00:00:15.870
that's our where we have our bug tracker
 

00:00:15.870 --> 00:00:17.420
that's our where we have our bug tracker
and some wiki and some announcements and

00:00:17.420 --> 00:00:17.430
and some wiki and some announcements and
 

00:00:17.430 --> 00:00:20.570
and some wiki and some announcements and
stuff so in the last year we've done our

00:00:20.570 --> 00:00:20.580
stuff so in the last year we've done our
 

00:00:20.580 --> 00:00:23.720
stuff so in the last year we've done our
15 and our 16 our 15 is when we switched

00:00:23.720 --> 00:00:23.730
15 and our 16 our 15 is when we switched
 

00:00:23.730 --> 00:00:25.070
15 and our 16 our 15 is when we switched
over to the new form of the headers

00:00:25.070 --> 00:00:25.080
over to the new form of the headers
 

00:00:25.080 --> 00:00:29.150
over to the new form of the headers
which has the one single blob of headers

00:00:29.150 --> 00:00:29.160
which has the one single blob of headers
 

00:00:29.160 --> 00:00:30.890
which has the one single blob of headers
that are correct for every API level

00:00:30.890 --> 00:00:30.900
that are correct for every API level
 

00:00:30.900 --> 00:00:33.080
that are correct for every API level
instead of having a bunch of bug fixes

00:00:33.080 --> 00:00:33.090
instead of having a bunch of bug fixes
 

00:00:33.090 --> 00:00:35.420
instead of having a bunch of bug fixes
only the newest one and the old ones are

00:00:35.420 --> 00:00:35.430
only the newest one and the old ones are
 

00:00:35.430 --> 00:00:38.420
only the newest one and the old ones are
just horribly out-of-date and broken our

00:00:38.420 --> 00:00:38.430
just horribly out-of-date and broken our
 

00:00:38.430 --> 00:00:40.040
just horribly out-of-date and broken our
16 that became a requirement and we

00:00:40.040 --> 00:00:40.050
16 that became a requirement and we
 

00:00:40.050 --> 00:00:42.229
16 that became a requirement and we
fixed up Lib C++ and Lib Android support

00:00:42.229 --> 00:00:42.239
fixed up Lib C++ and Lib Android support
 

00:00:42.239 --> 00:00:43.639
fixed up Lib C++ and Lib Android support
if you were here last year or seen me

00:00:43.639 --> 00:00:43.649
if you were here last year or seen me
 

00:00:43.649 --> 00:00:46.459
if you were here last year or seen me
talk before if you'll know that lip C++

00:00:46.459 --> 00:00:46.469
talk before if you'll know that lip C++
 

00:00:46.469 --> 00:00:48.670
talk before if you'll know that lip C++
was really in a beta state in the NDK

00:00:48.670 --> 00:00:48.680
was really in a beta state in the NDK
 

00:00:48.680 --> 00:00:50.540
was really in a beta state in the NDK
because of this live Android support

00:00:50.540 --> 00:00:50.550
because of this live Android support
 

00:00:50.550 --> 00:00:54.860
because of this live Android support
that we used to back port API is to back

00:00:54.860 --> 00:00:54.870
that we used to back port API is to back
 

00:00:54.870 --> 00:00:57.619
that we used to back port API is to back
then as early as Gingerbread we've

00:00:57.619 --> 00:00:57.629
then as early as Gingerbread we've
 

00:00:57.629 --> 00:00:58.849
then as early as Gingerbread we've
cleaned all that up so this is now

00:00:58.849 --> 00:00:58.859
cleaned all that up so this is now
 

00:00:58.859 --> 00:01:01.340
cleaned all that up so this is now
actually the sto we were recommend in

00:01:01.340 --> 00:01:01.350
actually the sto we were recommend in
 

00:01:01.350 --> 00:01:03.500
actually the sto we were recommend in
our 17 it's actually the default we

00:01:03.500 --> 00:01:03.510
our 17 it's actually the default we
 

00:01:03.510 --> 00:01:06.109
our 17 it's actually the default we
removed support for arm 5 and the MIPS

00:01:06.109 --> 00:01:06.119
removed support for arm 5 and the MIPS
 

00:01:06.119 --> 00:01:09.080
removed support for arm 5 and the MIPS
flavours which is probably a welcome

00:01:09.080 --> 00:01:09.090
flavours which is probably a welcome
 

00:01:09.090 --> 00:01:10.640
flavours which is probably a welcome
change for all of you because it's less

00:01:10.640 --> 00:01:10.650
change for all of you because it's less
 

00:01:10.650 --> 00:01:15.109
change for all of you because it's less
stuff that you have to test our 17 is in

00:01:15.109 --> 00:01:15.119
stuff that you have to test our 17 is in
 

00:01:15.119 --> 00:01:17.270
stuff that you have to test our 17 is in
beta right now in theory stable is going

00:01:17.270 --> 00:01:17.280
beta right now in theory stable is going
 

00:01:17.280 --> 00:01:18.560
beta right now in theory stable is going
out tomorrow but I haven't spoken to QA

00:01:18.560 --> 00:01:18.570
out tomorrow but I haven't spoken to QA
 

00:01:18.570 --> 00:01:22.130
out tomorrow but I haven't spoken to QA
yet today so we'll see it defaults to

00:01:22.130 --> 00:01:22.140
yet today so we'll see it defaults to
 

00:01:22.140 --> 00:01:25.039
yet today so we'll see it defaults to
Lib C++ it adds the OM r1 API is it has

00:01:25.039 --> 00:01:25.049
Lib C++ it adds the OM r1 API is it has
 

00:01:25.049 --> 00:01:27.289
Lib C++ it adds the OM r1 API is it has
the PAP is more of those landing

00:01:27.289 --> 00:01:27.299
the PAP is more of those landing
 

00:01:27.299 --> 00:01:28.969
the PAP is more of those landing
tomorrow

00:01:28.969 --> 00:01:28.979
tomorrow
 

00:01:28.979 --> 00:01:32.080
tomorrow
Aysen no longer requires root which is

00:01:32.080 --> 00:01:32.090
Aysen no longer requires root which is
 

00:01:32.090 --> 00:01:35.690
Aysen no longer requires root which is
fantastic you now just have to ship the

00:01:35.690 --> 00:01:35.700
fantastic you now just have to ship the
 

00:01:35.700 --> 00:01:37.520
fantastic you now just have to ship the
shared library in your app and use this

00:01:37.520 --> 00:01:37.530
shared library in your app and use this
 

00:01:37.530 --> 00:01:40.580
shared library in your app and use this
rapid SSH which is an oaf feature to

00:01:40.580 --> 00:01:40.590
rapid SSH which is an oaf feature to
 

00:01:40.590 --> 00:01:42.950
rapid SSH which is an oaf feature to
make sure it gets loaded in your apk LTO

00:01:42.950 --> 00:01:42.960
make sure it gets loaded in your apk LTO
 

00:01:42.960 --> 00:01:44.630
make sure it gets loaded in your apk LTO
networks on Windows I know it's a huge

00:01:44.630 --> 00:01:44.640
networks on Windows I know it's a huge
 

00:01:44.640 --> 00:01:49.010
networks on Windows I know it's a huge
thing for game developers so hooray and

00:01:49.010 --> 00:01:49.020
thing for game developers so hooray and
 

00:01:49.020 --> 00:01:52.450
thing for game developers so hooray and
apparently we remove those api's again I

00:01:52.450 --> 00:01:52.460
apparently we remove those api's again I
 

00:01:52.460 --> 00:01:55.160
apparently we remove those api's again I
think that was our 17 and they were

00:01:55.160 --> 00:01:55.170
think that was our 17 and they were
 

00:01:55.170 --> 00:01:57.950
think that was our 17 and they were
deprecated in our 16 all right team

00:01:57.950 --> 00:01:57.960
deprecated in our 16 all right team
 

00:01:57.960 --> 00:02:00.380
deprecated in our 16 all right team
we've been working on for a while it

00:02:00.380 --> 00:02:00.390
we've been working on for a while it
 

00:02:00.390 --> 00:02:02.300
we've been working on for a while it
includes client ID support and it also

00:02:02.300 --> 00:02:02.310
includes client ID support and it also
 

00:02:02.310 --> 00:02:05.840
includes client ID support and it also
removes all the old crap that we've been

00:02:05.840 --> 00:02:05.850
removes all the old crap that we've been
 

00:02:05.850 --> 00:02:07.160
removes all the old crap that we've been
working on deprecating for the last few

00:02:07.160 --> 00:02:07.170
working on deprecating for the last few
 

00:02:07.170 --> 00:02:10.309
working on deprecating for the last few
years so GCC the other STL's starting

00:02:10.309 --> 00:02:10.319
years so GCC the other STL's starting
 

00:02:10.319 --> 00:02:12.140
years so GCC the other STL's starting
with our 18 it is clang and it is Lib

00:02:12.140 --> 00:02:12.150
with our 18 it is clang and it is Lib
 

00:02:12.150 --> 00:02:13.410
with our 18 it is clang and it is Lib
C++ and

00:02:13.410 --> 00:02:13.420
C++ and
 

00:02:13.420 --> 00:02:18.390
C++ and
is it much few far fewer combinations of

00:02:18.390 --> 00:02:18.400
is it much few far fewer combinations of
 

00:02:18.400 --> 00:02:19.860
is it much few far fewer combinations of
the test so everything should be much

00:02:19.860 --> 00:02:19.870
the test so everything should be much
 

00:02:19.870 --> 00:02:24.140
the test so everything should be much
higher quality and it should be less

00:02:24.140 --> 00:02:24.150
higher quality and it should be less
 

00:02:24.150 --> 00:02:25.740
higher quality and it should be less
complications of getting all your

00:02:25.740 --> 00:02:25.750
complications of getting all your
 

00:02:25.750 --> 00:02:29.910
complications of getting all your
middleware to match our 19 this is gonna

00:02:29.910 --> 00:02:29.920
middleware to match our 19 this is gonna
 

00:02:29.920 --> 00:02:31.559
middleware to match our 19 this is gonna
be a big change for anyone the room that

00:02:31.559 --> 00:02:31.569
be a big change for anyone the room that
 

00:02:31.569 --> 00:02:33.930
be a big change for anyone the room that
maintains a their own build system but

00:02:33.930 --> 00:02:33.940
maintains a their own build system but
 

00:02:33.940 --> 00:02:35.490
maintains a their own build system but
it should be the change that you get to

00:02:35.490 --> 00:02:35.500
it should be the change that you get to
 

00:02:35.500 --> 00:02:37.920
it should be the change that you get to
delete a ton of your code all of the

00:02:37.920 --> 00:02:37.930
delete a ton of your code all of the
 

00:02:37.930 --> 00:02:39.240
delete a ton of your code all of the
tool chains are just me standalone tool

00:02:39.240 --> 00:02:39.250
tool chains are just me standalone tool
 

00:02:39.250 --> 00:02:40.559
tool chains are just me standalone tool
chains Android will start working like a

00:02:40.559 --> 00:02:40.569
chains Android will start working like a
 

00:02:40.569 --> 00:02:41.850
chains Android will start working like a
normal cross compiler where you just

00:02:41.850 --> 00:02:41.860
normal cross compiler where you just
 

00:02:41.860 --> 00:02:44.699
normal cross compiler where you just
call clang you say I'm targeting air 64

00:02:44.699 --> 00:02:44.709
call clang you say I'm targeting air 64
 

00:02:44.709 --> 00:02:48.059
call clang you say I'm targeting air 64
26 and it just does the right thing you

00:02:48.059 --> 00:02:48.069
26 and it just does the right thing you
 

00:02:48.069 --> 00:02:49.470
26 and it just does the right thing you
no longer have to know all the crazy

00:02:49.470 --> 00:02:49.480
no longer have to know all the crazy
 

00:02:49.480 --> 00:02:53.430
no longer have to know all the crazy
flags and the paths to everything yeah

00:02:53.430 --> 00:02:53.440
flags and the paths to everything yeah
 

00:02:53.440 --> 00:02:55.500
flags and the paths to everything yeah
fine translation is complete we are done

00:02:55.500 --> 00:02:55.510
fine translation is complete we are done
 

00:02:55.510 --> 00:02:57.509
fine translation is complete we are done
with this inside Google all of user

00:02:57.509 --> 00:02:57.519
with this inside Google all of user
 

00:02:57.519 --> 00:02:59.789
with this inside Google all of user
space was clang in Marshall ball most in

00:02:59.789 --> 00:02:59.799
space was clang in Marshall ball most in
 

00:02:59.799 --> 00:03:03.300
space was clang in Marshall ball most in
marshmallow all of it nougat most some

00:03:03.300 --> 00:03:03.310
marshmallow all of it nougat most some
 

00:03:03.310 --> 00:03:05.729
marshmallow all of it nougat most some
of the kernels in Oreo it's now it was

00:03:05.729 --> 00:03:05.739
of the kernels in Oreo it's now it was
 

00:03:05.739 --> 00:03:07.170
of the kernels in Oreo it's now it was
the default compiler starting in NDK

00:03:07.170 --> 00:03:07.180
the default compiler starting in NDK
 

00:03:07.180 --> 00:03:10.559
the default compiler starting in NDK
r-13 which is a year and a half ago it

00:03:10.559 --> 00:03:10.569
r-13 which is a year and a half ago it
 

00:03:10.569 --> 00:03:15.539
r-13 which is a year and a half ago it
is the only one in the next release it's

00:03:15.539 --> 00:03:15.549
is the only one in the next release it's
 

00:03:15.549 --> 00:03:17.009
is the only one in the next release it's
probably less exciting for this room but

00:03:17.009 --> 00:03:17.019
probably less exciting for this room but
 

00:03:17.019 --> 00:03:22.770
probably less exciting for this room but
new api's and stuff for lib see the

00:03:22.770 --> 00:03:22.780
new api's and stuff for lib see the
 

00:03:22.780 --> 00:03:24.870
new api's and stuff for lib see the
clang fortify source is a security

00:03:24.870 --> 00:03:24.880
clang fortify source is a security
 

00:03:24.880 --> 00:03:26.819
clang fortify source is a security
measure that maybe people in this room

00:03:26.819 --> 00:03:26.829
measure that maybe people in this room
 

00:03:26.829 --> 00:03:28.229
measure that maybe people in this room
care about it'll do things like check

00:03:28.229 --> 00:03:28.239
care about it'll do things like check
 

00:03:28.239 --> 00:03:30.030
care about it'll do things like check
buffer overruns above compile time and

00:03:30.030 --> 00:03:30.040
buffer overruns above compile time and
 

00:03:30.040 --> 00:03:36.150
buffer overruns above compile time and
some mitigation at run time again P more

00:03:36.150 --> 00:03:36.160
some mitigation at run time again P more
 

00:03:36.160 --> 00:03:39.180
some mitigation at run time again P more
api's

00:03:39.180 --> 00:03:39.190
 
 

00:03:39.190 --> 00:03:42.509
 
cpu profiling we ship simple perf in the

00:03:42.509 --> 00:03:42.519
cpu profiling we ship simple perf in the
 

00:03:42.519 --> 00:03:46.199
cpu profiling we ship simple perf in the
NDK it has for ages had a command-line

00:03:46.199 --> 00:03:46.209
NDK it has for ages had a command-line
 

00:03:46.209 --> 00:03:48.090
NDK it has for ages had a command-line
interface but in the studio 3.1 it's got

00:03:48.090 --> 00:03:48.100
interface but in the studio 3.1 it's got
 

00:03:48.100 --> 00:03:54.180
interface but in the studio 3.1 it's got
a UI way just looks like that we the

00:03:54.180 --> 00:03:54.190
a UI way just looks like that we the
 

00:03:54.190 --> 00:03:55.560
a UI way just looks like that we the
command-line tool itself can spit out

00:03:55.560 --> 00:03:55.570
command-line tool itself can spit out
 

00:03:55.570 --> 00:03:57.059
command-line tool itself can spit out
these flame graphs which are really cool

00:03:57.059 --> 00:03:57.069
these flame graphs which are really cool
 

00:03:57.069 --> 00:03:59.300
these flame graphs which are really cool
helpful helpful for drilling down into

00:03:59.300 --> 00:03:59.310
helpful helpful for drilling down into
 

00:03:59.310 --> 00:04:06.330
helpful helpful for drilling down into
what exactly is going wrong updates on

00:04:06.330 --> 00:04:06.340
what exactly is going wrong updates on
 

00:04:06.340 --> 00:04:09.629
what exactly is going wrong updates on
command-line tools to onp got a whole

00:04:09.629 --> 00:04:09.639
command-line tools to onp got a whole
 

00:04:09.639 --> 00:04:14.069
command-line tools to onp got a whole
bunch of new things in toy box adb has

00:04:14.069 --> 00:04:14.079
bunch of new things in toy box adb has
 

00:04:14.079 --> 00:04:17.340
bunch of new things in toy box adb has
been sped up on USB 3 and like I said

00:04:17.340 --> 00:04:17.350
been sped up on USB 3 and like I said
 

00:04:17.350 --> 00:04:20.969
been sped up on USB 3 and like I said
advice on the 64-bit transition we're

00:04:20.969 --> 00:04:20.979
advice on the 64-bit transition we're
 

00:04:20.979 --> 00:04:23.210
advice on the 64-bit transition we're
not trying to create fire drills here

00:04:23.210 --> 00:04:23.220
not trying to create fire drills here
 

00:04:23.220 --> 00:04:26.379
not trying to create fire drills here
it's a really for the

00:04:26.379 --> 00:04:26.389
it's a really for the
 

00:04:26.389 --> 00:04:28.570
it's a really for the
they only have to run one zygote if you

00:04:28.570 --> 00:04:28.580
they only have to run one zygote if you
 

00:04:28.580 --> 00:04:31.809
they only have to run one zygote if you
have a 64-bit only device if there are

00:04:31.809 --> 00:04:31.819
have a 64-bit only device if there are
 

00:04:31.819 --> 00:04:34.209
have a 64-bit only device if there are
any reasons why you Kate why you can't

00:04:34.209 --> 00:04:34.219
any reasons why you Kate why you can't
 

00:04:34.219 --> 00:04:36.519
any reasons why you Kate why you can't
hit the 2019 deadline on that let us

00:04:36.519 --> 00:04:36.529
hit the 2019 deadline on that let us
 

00:04:36.529 --> 00:04:38.050
hit the 2019 deadline on that let us
know we do want to know about that and

00:04:38.050 --> 00:04:38.060
know we do want to know about that and
 

00:04:38.060 --> 00:04:39.969
know we do want to know about that and
we'll work with you to try to sort that

00:04:39.969 --> 00:04:39.979
we'll work with you to try to sort that
 

00:04:39.979 --> 00:04:45.249
we'll work with you to try to sort that
out the 64-bit transition does come with

00:04:45.249 --> 00:04:45.259
out the 64-bit transition does come with
 

00:04:45.259 --> 00:04:46.989
out the 64-bit transition does come with
some performance improvements if Tim is

00:04:46.989 --> 00:04:46.999
some performance improvements if Tim is
 

00:04:46.999 --> 00:04:48.519
some performance improvements if Tim is
still in the room he can maybe hint at

00:04:48.519 --> 00:04:48.529
still in the room he can maybe hint at
 

00:04:48.529 --> 00:04:50.050
still in the room he can maybe hint at
what they are because I don't know

00:04:50.050 --> 00:04:50.060
what they are because I don't know
 

00:04:50.060 --> 00:04:54.399
what they are because I don't know
numbers five to 10% okay that was my

00:04:54.399 --> 00:04:54.409
numbers five to 10% okay that was my
 

00:04:54.409 --> 00:04:57.850
numbers five to 10% okay that was my
guess and now that'll vary based on your

00:04:57.850 --> 00:04:57.860
guess and now that'll vary based on your
 

00:04:57.860 --> 00:05:04.740
guess and now that'll vary based on your
application obviously having the higher

00:05:04.740 --> 00:05:04.750
application obviously having the higher
 

00:05:04.750 --> 00:05:08.080
application obviously having the higher
minimum in SDK version since 64 bit on

00:05:08.080 --> 00:05:08.090
minimum in SDK version since 64 bit on
 

00:05:08.090 --> 00:05:10.059
minimum in SDK version since 64 bit on
that came in L you can't target anything

00:05:10.059 --> 00:05:10.069
that came in L you can't target anything
 

00:05:10.069 --> 00:05:12.550
that came in L you can't target anything
lower than L which means you have newer

00:05:12.550 --> 00:05:12.560
lower than L which means you have newer
 

00:05:12.560 --> 00:05:13.689
lower than L which means you have newer
API is available

00:05:13.689 --> 00:05:13.699
API is available
 

00:05:13.699 --> 00:05:17.619
API is available
you don't need live Android support and

00:05:17.619 --> 00:05:17.629
you don't need live Android support and
 

00:05:17.629 --> 00:05:19.570
you don't need live Android support and
we are working with all the engine

00:05:19.570 --> 00:05:19.580
we are working with all the engine
 

00:05:19.580 --> 00:05:22.149
we are working with all the engine
companies to make sure that their

00:05:22.149 --> 00:05:22.159
companies to make sure that their
 

00:05:22.159 --> 00:05:23.980
companies to make sure that their
engines are 64-bit ready by the time

00:05:23.980 --> 00:05:23.990
engines are 64-bit ready by the time
 

00:05:23.990 --> 00:05:28.800
engines are 64-bit ready by the time
this happens so you know who you are and

00:05:28.800 --> 00:05:28.810
this happens so you know who you are and
 

00:05:28.810 --> 00:05:31.329
this happens so you know who you are and
for the actual how to port your code to

00:05:31.329 --> 00:05:31.339
for the actual how to port your code to
 

00:05:31.339 --> 00:05:33.459
for the actual how to port your code to
64 but we found these three really

00:05:33.459 --> 00:05:33.469
64 but we found these three really
 

00:05:33.469 --> 00:05:35.290
64 but we found these three really
helpful when we reporting the platform

00:05:35.290 --> 00:05:35.300
helpful when we reporting the platform
 

00:05:35.300 --> 00:05:37.329
helpful when we reporting the platform
it'll catch the cases where oops you

00:05:37.329 --> 00:05:37.339
it'll catch the cases where oops you
 

00:05:37.339 --> 00:05:39.040
it'll catch the cases where oops you
were using an INT instead of a pointer

00:05:39.040 --> 00:05:39.050
were using an INT instead of a pointer
 

00:05:39.050 --> 00:05:41.290
were using an INT instead of a pointer
or oops you're using a pointer instead

00:05:41.290 --> 00:05:41.300
or oops you're using a pointer instead
 

00:05:41.300 --> 00:05:43.809
or oops you're using a pointer instead
of an int implicit function declaration

00:05:43.809 --> 00:05:43.819
of an int implicit function declaration
 

00:05:43.819 --> 00:05:45.969
of an int implicit function declaration
is a fun one because C for in all of its

00:05:45.969 --> 00:05:45.979
is a fun one because C for in all of its
 

00:05:45.979 --> 00:05:47.740
is a fun one because C for in all of its
wisdom decided that a function that was

00:05:47.740 --> 00:05:47.750
wisdom decided that a function that was
 

00:05:47.750 --> 00:05:50.339
wisdom decided that a function that was
not defined had the return type of int

00:05:50.339 --> 00:05:50.349
not defined had the return type of int
 

00:05:50.349 --> 00:05:52.420
not defined had the return type of int
which is very frustrating when it

00:05:52.420 --> 00:05:52.430
which is very frustrating when it
 

00:05:52.430 --> 00:05:53.950
which is very frustrating when it
actually returns a pointer because it

00:05:53.950 --> 00:05:53.960
actually returns a pointer because it
 

00:05:53.960 --> 00:05:55.719
actually returns a pointer because it
will just truncate it and your code will

00:05:55.719 --> 00:05:55.729
will just truncate it and your code will
 

00:05:55.729 --> 00:05:58.000
will just truncate it and your code will
explode

