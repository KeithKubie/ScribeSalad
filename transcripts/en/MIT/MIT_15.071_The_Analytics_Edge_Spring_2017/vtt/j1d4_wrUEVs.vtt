WEBVTT
Kind: captions
Language: en

00:00:04.500 --> 00:00:06.670
In this recitation,
we will see how

00:00:06.670 --> 00:00:10.150
to apply clustering
techniques to segment images,

00:00:10.150 --> 00:00:13.190
with the main application being
geared towards medical image

00:00:13.190 --> 00:00:14.770
segmentation.

00:00:14.770 --> 00:00:16.900
At the end of this
recitation, you

00:00:16.900 --> 00:00:20.370
will get a head start on
how to cluster an MRI brain

00:00:20.370 --> 00:00:25.440
image by tissue substances and
locate pathological anatomies.

00:00:25.440 --> 00:00:27.500
Image segmentation
is the process

00:00:27.500 --> 00:00:31.200
of partitioning digital images
into regions, or segments,

00:00:31.200 --> 00:00:34.750
that share the same visual
characteristics, such as color,

00:00:34.750 --> 00:00:36.890
intensity, or texture.

00:00:36.890 --> 00:00:39.250
The segments should
also be meaningful,

00:00:39.250 --> 00:00:43.040
as in they should correspond to
particular surfaces, objects,

00:00:43.040 --> 00:00:45.430
or even parts of an object.

00:00:45.430 --> 00:00:47.490
Think of having an
image of a water pond,

00:00:47.490 --> 00:00:50.290
a mountain chain in the
backdrop, and the sky.

00:00:50.290 --> 00:00:52.430
Segmenting this
image should ideally

00:00:52.430 --> 00:00:54.690
detect the three
different objects

00:00:54.690 --> 00:00:56.600
and assign their
corresponding pixels

00:00:56.600 --> 00:00:59.000
to three different regions.

00:00:59.000 --> 00:01:01.830
In few words, the goal
of image segmentation

00:01:01.830 --> 00:01:05.810
is to modify the representation
of an image from pixel data

00:01:05.810 --> 00:01:09.980
into something meaningful
to us and easier to analyze.

00:01:09.980 --> 00:01:13.110
Image segmentation has
a wide applicability.

00:01:13.110 --> 00:01:15.590
A major practical
application is in the field

00:01:15.590 --> 00:01:18.670
of medical imaging, where
image segments often

00:01:18.670 --> 00:01:23.140
correspond to different tissues,
organs, pathologies, or tumors.

00:01:23.140 --> 00:01:26.530
Image segmentation helps locate
these geometrically complex

00:01:26.530 --> 00:01:29.530
objects and measure
their volume.

00:01:29.530 --> 00:01:31.950
Another application
is detecting instances

00:01:31.950 --> 00:01:36.110
of semantic objects such as
humans, buildings, and others.

00:01:36.110 --> 00:01:38.850
The two major domains that
have seen much attention

00:01:38.850 --> 00:01:42.560
recently include face
and pedestrian detection.

00:01:42.560 --> 00:01:44.870
The main uses of facial
detection, for instance,

00:01:44.870 --> 00:01:48.640
include the development of the
auto-focus in digital cameras

00:01:48.640 --> 00:01:53.150
and face recognition commonly
used in video surveillance.

00:01:53.150 --> 00:01:56.289
Other important applications
are fingerprint and iris

00:01:56.289 --> 00:01:57.470
recognition.

00:01:57.470 --> 00:01:59.800
For instance,
fingerprint recognition

00:01:59.800 --> 00:02:02.450
tries to identify print
patterns, including

00:02:02.450 --> 00:02:06.520
aggregate characteristics of
ridges and minutiae points.

00:02:06.520 --> 00:02:09.270
In this recitation, we
will look in particular

00:02:09.270 --> 00:02:12.960
at the medical
imaging application.

00:02:12.960 --> 00:02:15.860
Various methods have been
proposed to segment images.

00:02:15.860 --> 00:02:18.160
Clustering methods are
used to group the points

00:02:18.160 --> 00:02:21.520
into clusters according to
their characteristic features,

00:02:21.520 --> 00:02:23.910
for instance, intensity values.

00:02:23.910 --> 00:02:25.930
These clusters are
then mapped back

00:02:25.930 --> 00:02:28.740
to the original spatial
domain to produce

00:02:28.740 --> 00:02:31.380
a segmentation of the image.

00:02:31.380 --> 00:02:33.960
Another technique
is edge detection,

00:02:33.960 --> 00:02:38.020
which is based on detecting
discontinuities or boundaries.

00:02:38.020 --> 00:02:40.230
For instance, in a
gray-scale image,

00:02:40.230 --> 00:02:42.600
a boundary would correspond
to an abrupt change

00:02:42.600 --> 00:02:45.180
in the gray level.

00:02:45.180 --> 00:02:47.570
Instead of finding boundaries
of regions in the image,

00:02:47.570 --> 00:02:49.560
there are other
techniques called region

00:02:49.560 --> 00:02:51.760
growing methods,
which start dividing

00:02:51.760 --> 00:02:54.180
the image into small regions.

00:02:54.180 --> 00:02:57.540
Then, they sequentially
merge these regions together

00:02:57.540 --> 00:03:00.340
if they are
sufficiently similar.

00:03:00.340 --> 00:03:04.350
In this recitation, our focus
is on clustering methods.

00:03:04.350 --> 00:03:07.560
In particular, we will review
hierarchical and k-means

00:03:07.560 --> 00:03:11.160
clustering techniques
and how to use them in R.

00:03:11.160 --> 00:03:14.530
We will restrict ourselves
to gray-scale images.

00:03:14.530 --> 00:03:17.890
Our first example is a
low-resolution flower image

00:03:17.890 --> 00:03:19.920
whose pixel
intensity information

00:03:19.920 --> 00:03:23.360
is given the data
set flower.csv.

00:03:23.360 --> 00:03:27.240
Our second and major example
involves two weighted MRI

00:03:27.240 --> 00:03:28.810
images of the brain.

00:03:28.810 --> 00:03:31.590
One image corresponds
to a healthy patient,

00:03:31.590 --> 00:03:34.610
and the other one corresponds
to a patient with a tumor

00:03:34.610 --> 00:03:36.950
called oligodendroglioma.

00:03:36.950 --> 00:03:39.990
The pixel intensity
information of these two images

00:03:39.990 --> 00:03:44.410
are given in the data sets
healthy and tumor.csv.

00:03:44.410 --> 00:03:47.370
The last video will
compare the use, pros,

00:03:47.370 --> 00:03:51.430
and cons of all the analytics
tools that we have seen so far.

00:03:51.430 --> 00:03:54.160
I hope that this will
help you synthesize all

00:03:54.160 --> 00:03:56.460
that you've learned to give
you an edge in the class

00:03:56.460 --> 00:03:59.590
competition that
is coming up soon.

