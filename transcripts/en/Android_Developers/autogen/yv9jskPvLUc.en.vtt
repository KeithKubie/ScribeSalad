WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.270 align:start position:0%
 
hi<00:00:00.719><c> my</c><00:00:01.140><c> name</c><00:00:01.290><c> is</c><00:00:01.380><c> Lisa</c><00:00:01.650><c> Raye</c><00:00:01.829><c> and</c><00:00:02.100><c> I'm</c><00:00:02.250><c> a</c>

00:00:02.270 --> 00:00:02.280 align:start position:0%
hi my name is Lisa Raye and I'm a
 

00:00:02.280 --> 00:00:03.830 align:start position:0%
hi my name is Lisa Raye and I'm a
developer<00:00:02.520><c> advocate</c><00:00:02.939><c> with</c><00:00:03.389><c> the</c><00:00:03.449><c> Google</c>

00:00:03.830 --> 00:00:03.840 align:start position:0%
developer advocate with the Google
 

00:00:03.840 --> 00:00:05.990 align:start position:0%
developer advocate with the Google
developer<00:00:04.259><c> relations</c><00:00:04.290><c> team</c><00:00:04.740><c> if</c><00:00:05.130><c> you're</c>

00:00:05.990 --> 00:00:06.000 align:start position:0%
developer relations team if you're
 

00:00:06.000 --> 00:00:07.430 align:start position:0%
developer relations team if you're
interested<00:00:06.089><c> in</c><00:00:06.540><c> fitness</c><00:00:06.720><c> and</c><00:00:07.109><c> you</c><00:00:07.230><c> want</c><00:00:07.379><c> to</c>

00:00:07.430 --> 00:00:07.440 align:start position:0%
interested in fitness and you want to
 

00:00:07.440 --> 00:00:08.870 align:start position:0%
interested in fitness and you want to
give<00:00:07.529><c> yourself</c><00:00:07.589><c> or</c><00:00:08.099><c> your</c><00:00:08.250><c> users</c><00:00:08.610><c> more</c>

00:00:08.870 --> 00:00:08.880 align:start position:0%
give yourself or your users more
 

00:00:08.880 --> 00:00:10.220 align:start position:0%
give yourself or your users more
information<00:00:09.360><c> with</c><00:00:09.510><c> just</c><00:00:09.719><c> the</c><00:00:09.809><c> device</c><00:00:10.050><c> you</c>

00:00:10.220 --> 00:00:10.230 align:start position:0%
information with just the device you
 

00:00:10.230 --> 00:00:11.810 align:start position:0%
information with just the device you
already<00:00:10.559><c> have</c><00:00:10.710><c> in</c><00:00:10.830><c> your</c><00:00:10.920><c> pocket</c><00:00:11.309><c> you're</c><00:00:11.730><c> in</c>

00:00:11.810 --> 00:00:11.820 align:start position:0%
already have in your pocket you're in
 

00:00:11.820 --> 00:00:13.640 align:start position:0%
already have in your pocket you're in
the<00:00:11.910><c> right</c><00:00:12.000><c> place</c><00:00:12.080><c> today</c><00:00:13.080><c> I'm</c><00:00:13.290><c> going</c><00:00:13.410><c> to</c><00:00:13.469><c> talk</c>

00:00:13.640 --> 00:00:13.650 align:start position:0%
the right place today I'm going to talk
 

00:00:13.650 --> 00:00:14.990 align:start position:0%
the right place today I'm going to talk
about<00:00:13.799><c> the</c><00:00:13.980><c> step</c><00:00:14.190><c> sensors</c><00:00:14.549><c> available</c>

00:00:14.990 --> 00:00:15.000 align:start position:0%
about the step sensors available
 

00:00:15.000 --> 00:00:18.650 align:start position:0%
about the step sensors available
starting<00:00:15.269><c> with</c><00:00:15.570><c> Android</c><00:00:15.870><c> KitKat</c><00:00:17.390><c> these</c><00:00:18.390><c> step</c>

00:00:18.650 --> 00:00:18.660 align:start position:0%
starting with Android KitKat these step
 

00:00:18.660 --> 00:00:20.179 align:start position:0%
starting with Android KitKat these step
sensors<00:00:19.020><c> are</c><00:00:19.140><c> Hardware</c><00:00:19.470><c> sensors</c><00:00:19.650><c> based</c><00:00:20.039><c> on</c>

00:00:20.179 --> 00:00:20.189 align:start position:0%
sensors are Hardware sensors based on
 

00:00:20.189 --> 00:00:21.710 align:start position:0%
sensors are Hardware sensors based on
the<00:00:20.279><c> accelerometer</c><00:00:20.939><c> they're</c><00:00:21.330><c> designed</c><00:00:21.600><c> to</c><00:00:21.660><c> be</c>

00:00:21.710 --> 00:00:21.720 align:start position:0%
the accelerometer they're designed to be
 

00:00:21.720 --> 00:00:23.120 align:start position:0%
the accelerometer they're designed to be
low-power<00:00:22.109><c> and</c><00:00:22.380><c> won't</c><00:00:22.619><c> burn</c><00:00:22.800><c> through</c><00:00:22.980><c> your</c>

00:00:23.120 --> 00:00:23.130 align:start position:0%
low-power and won't burn through your
 

00:00:23.130 --> 00:00:25.519 align:start position:0%
low-power and won't burn through your
battery<00:00:23.430><c> the</c><00:00:24.420><c> step</c><00:00:24.689><c> sensors</c><00:00:25.050><c> count</c><00:00:25.260><c> steps</c>

00:00:25.519 --> 00:00:25.529 align:start position:0%
battery the step sensors count steps
 

00:00:25.529 --> 00:00:27.019 align:start position:0%
battery the step sensors count steps
during<00:00:25.680><c> walking</c><00:00:26.130><c> running</c><00:00:26.340><c> and</c><00:00:26.640><c> climbing</c>

00:00:27.019 --> 00:00:27.029 align:start position:0%
during walking running and climbing
 

00:00:27.029 --> 00:00:28.400 align:start position:0%
during walking running and climbing
stairs<00:00:27.240><c> and</c><00:00:27.630><c> they're</c><00:00:27.810><c> smart</c><00:00:27.990><c> enough</c><00:00:28.170><c> not</c><00:00:28.349><c> to</c>

00:00:28.400 --> 00:00:28.410 align:start position:0%
stairs and they're smart enough not to
 

00:00:28.410 --> 00:00:29.900 align:start position:0%
stairs and they're smart enough not to
count<00:00:28.619><c> activities</c><00:00:29.099><c> like</c><00:00:29.250><c> biking</c><00:00:29.460><c> driving</c>

00:00:29.900 --> 00:00:29.910 align:start position:0%
count activities like biking driving
 

00:00:29.910 --> 00:00:34.910 align:start position:0%
count activities like biking driving
cars<00:00:30.300><c> or</c><00:00:30.660><c> riding</c><00:00:30.960><c> in</c><00:00:31.170><c> trains</c><00:00:33.469><c> Android</c><00:00:34.469><c> has</c><00:00:34.620><c> two</c>

00:00:34.910 --> 00:00:34.920 align:start position:0%
cars or riding in trains Android has two
 

00:00:34.920 --> 00:00:36.920 align:start position:0%
cars or riding in trains Android has two
sensors<00:00:35.370><c> for</c><00:00:35.579><c> step</c><00:00:35.790><c> counting</c><00:00:36.149><c> the</c><00:00:36.510><c> first</c><00:00:36.750><c> is</c>

00:00:36.920 --> 00:00:36.930 align:start position:0%
sensors for step counting the first is
 

00:00:36.930 --> 00:00:39.260 align:start position:0%
sensors for step counting the first is
the<00:00:37.050><c> step</c><00:00:37.260><c> detector</c><00:00:37.860><c> it</c><00:00:38.040><c> fires</c><00:00:38.670><c> an</c><00:00:38.879><c> event</c><00:00:38.940><c> when</c>

00:00:39.260 --> 00:00:39.270 align:start position:0%
the step detector it fires an event when
 

00:00:39.270 --> 00:00:41.060 align:start position:0%
the step detector it fires an event when
a<00:00:39.300><c> step</c><00:00:39.540><c> is</c><00:00:39.660><c> detected</c><00:00:40.140><c> one</c><00:00:40.379><c> event</c><00:00:40.649><c> per</c><00:00:40.710><c> step</c>

00:00:41.060 --> 00:00:41.070 align:start position:0%
a step is detected one event per step
 

00:00:41.070 --> 00:00:43.220 align:start position:0%
a step is detected one event per step
the<00:00:41.370><c> only</c><00:00:41.520><c> value</c><00:00:41.879><c> in</c><00:00:42.059><c> return</c><00:00:42.270><c> is</c><00:00:42.420><c> one</c><00:00:42.629><c> so</c><00:00:43.170><c> if</c>

00:00:43.220 --> 00:00:43.230 align:start position:0%
the only value in return is one so if
 

00:00:43.230 --> 00:00:44.540 align:start position:0%
the only value in return is one so if
you<00:00:43.260><c> want</c><00:00:43.350><c> to</c><00:00:43.530><c> count</c><00:00:43.710><c> steps</c><00:00:43.950><c> you</c><00:00:44.219><c> have</c><00:00:44.309><c> to</c><00:00:44.430><c> do</c>

00:00:44.540 --> 00:00:44.550 align:start position:0%
you want to count steps you have to do
 

00:00:44.550 --> 00:00:46.819 align:start position:0%
you want to count steps you have to do
that<00:00:44.670><c> yourself</c><00:00:45.350><c> there</c><00:00:46.350><c> are</c><00:00:46.379><c> two</c><00:00:46.649><c> ways</c><00:00:46.800><c> to</c>

00:00:46.819 --> 00:00:46.829 align:start position:0%
that yourself there are two ways to
 

00:00:46.829 --> 00:00:48.440 align:start position:0%
that yourself there are two ways to
receive<00:00:47.250><c> events</c><00:00:47.370><c> from</c><00:00:47.670><c> the</c><00:00:47.820><c> step</c><00:00:48.000><c> sector</c>

00:00:48.440 --> 00:00:48.450 align:start position:0%
receive events from the step sector
 

00:00:48.450 --> 00:00:52.010 align:start position:0%
receive events from the step sector
continuously<00:00:49.230><c> or</c><00:00:49.530><c> in</c><00:00:49.710><c> batches</c><00:00:50.100><c> if</c><00:00:51.020><c> you</c>

00:00:52.010 --> 00:00:52.020 align:start position:0%
continuously or in batches if you
 

00:00:52.020 --> 00:00:53.569 align:start position:0%
continuously or in batches if you
register<00:00:52.410><c> your</c><00:00:52.590><c> listener</c><00:00:52.949><c> with</c><00:00:53.100><c> a</c><00:00:53.129><c> maximum</c>

00:00:53.569 --> 00:00:53.579 align:start position:0%
register your listener with a maximum
 

00:00:53.579 --> 00:00:55.400 align:start position:0%
register your listener with a maximum
delay<00:00:53.850><c> of</c><00:00:53.969><c> zero</c><00:00:54.239><c> then</c><00:00:54.600><c> you'll</c><00:00:54.719><c> get</c><00:00:54.840><c> continuous</c>

00:00:55.400 --> 00:00:55.410 align:start position:0%
delay of zero then you'll get continuous
 

00:00:55.410 --> 00:00:57.260 align:start position:0%
delay of zero then you'll get continuous
events<00:00:55.800><c> posted</c><00:00:55.980><c> as</c><00:00:56.280><c> faster</c><00:00:56.670><c> the</c><00:00:56.789><c> sensor</c><00:00:57.120><c> can</c>

00:00:57.260 --> 00:00:57.270 align:start position:0%
events posted as faster the sensor can
 

00:00:57.270 --> 00:00:59.180 align:start position:0%
events posted as faster the sensor can
produce<00:00:57.420><c> them</c><00:00:57.750><c> the</c><00:00:58.350><c> step</c><00:00:58.590><c> detector</c><00:00:59.010><c> has</c><00:00:59.160><c> a</c>

00:00:59.180 --> 00:00:59.190 align:start position:0%
produce them the step detector has a
 

00:00:59.190 --> 00:01:00.979 align:start position:0%
produce them the step detector has a
pretty<00:00:59.460><c> low</c><00:00:59.609><c> latency</c><00:01:00.090><c> so</c><00:01:00.420><c> the</c><00:01:00.510><c> times</c><00:01:00.719><c> at</c><00:01:00.899><c> which</c>

00:01:00.979 --> 00:01:00.989 align:start position:0%
pretty low latency so the times at which
 

00:01:00.989 --> 00:01:02.180 align:start position:0%
pretty low latency so the times at which
you<00:01:01.170><c> receive</c><00:01:01.469><c> step</c><00:01:01.710><c> events</c><00:01:02.039><c> should</c>

00:01:02.180 --> 00:01:02.190 align:start position:0%
you receive step events should
 

00:01:02.190 --> 00:01:03.590 align:start position:0%
you receive step events should
correspond<00:01:02.670><c> closely</c><00:01:02.850><c> with</c><00:01:03.270><c> the</c><00:01:03.359><c> user's</c>

00:01:03.590 --> 00:01:03.600 align:start position:0%
correspond closely with the user's
 

00:01:03.600 --> 00:01:06.950 align:start position:0%
correspond closely with the user's
actual<00:01:04.140><c> steps</c><00:01:04.409><c> on</c><00:01:04.680><c> the</c><00:01:05.430><c> other</c><00:01:05.489><c> hand</c><00:01:05.880><c> if</c><00:01:06.119><c> you</c>

00:01:06.950 --> 00:01:06.960 align:start position:0%
actual steps on the other hand if you
 

00:01:06.960 --> 00:01:09.020 align:start position:0%
actual steps on the other hand if you
don't<00:01:07.140><c> need</c><00:01:07.290><c> real-time</c><00:01:07.560><c> reporting</c><00:01:08.220><c> you</c><00:01:08.880><c> can</c>

00:01:09.020 --> 00:01:09.030 align:start position:0%
don't need real-time reporting you can
 

00:01:09.030 --> 00:01:11.390 align:start position:0%
don't need real-time reporting you can
allow<00:01:09.240><c> events</c><00:01:09.600><c> to</c><00:01:09.750><c> be</c><00:01:09.840><c> bashed</c><00:01:10.080><c> by</c><00:01:10.799><c> providing</c><00:01:11.159><c> a</c>

00:01:11.390 --> 00:01:11.400 align:start position:0%
allow events to be bashed by providing a
 

00:01:11.400 --> 00:01:13.429 align:start position:0%
allow events to be bashed by providing a
higher<00:01:11.610><c> maximum</c><00:01:12.000><c> delay</c><00:01:12.390><c> you'll</c><00:01:13.020><c> still</c><00:01:13.290><c> get</c>

00:01:13.429 --> 00:01:13.439 align:start position:0%
higher maximum delay you'll still get
 

00:01:13.439 --> 00:01:15.410 align:start position:0%
higher maximum delay you'll still get
one<00:01:13.680><c> event</c><00:01:13.950><c> per</c><00:01:14.010><c> step</c><00:01:14.400><c> but</c><00:01:15.030><c> in</c><00:01:15.150><c> this</c><00:01:15.240><c> example</c>

00:01:15.410 --> 00:01:15.420 align:start position:0%
one event per step but in this example
 

00:01:15.420 --> 00:01:17.420 align:start position:0%
one event per step but in this example
the<00:01:15.900><c> events</c><00:01:16.229><c> could</c><00:01:16.350><c> come</c><00:01:16.560><c> up</c><00:01:16.710><c> as</c><00:01:16.890><c> much</c><00:01:17.040><c> as</c><00:01:17.250><c> five</c>

00:01:17.420 --> 00:01:17.430 align:start position:0%
the events could come up as much as five
 

00:01:17.430 --> 00:01:19.249 align:start position:0%
the events could come up as much as five
seconds<00:01:17.850><c> afterward</c><00:01:18.299><c> this</c><00:01:18.960><c> allows</c><00:01:19.229><c> for</c>

00:01:19.249 --> 00:01:19.259 align:start position:0%
seconds afterward this allows for
 

00:01:19.259 --> 00:01:21.620 align:start position:0%
seconds afterward this allows for
optimization<00:01:19.890><c> of</c><00:01:20.130><c> the</c><00:01:20.250><c> sensor</c><00:01:20.549><c> level</c><00:01:20.729><c> so</c><00:01:21.360><c> be</c><00:01:21.600><c> a</c>

00:01:21.620 --> 00:01:21.630 align:start position:0%
optimization of the sensor level so be a
 

00:01:21.630 --> 00:01:23.270 align:start position:0%
optimization of the sensor level so be a
good<00:01:21.689><c> Android</c><00:01:22.140><c> citizen</c><00:01:22.590><c> and</c><00:01:22.770><c> only</c><00:01:23.009><c> ask</c><00:01:23.159><c> for</c>

00:01:23.270 --> 00:01:23.280 align:start position:0%
good Android citizen and only ask for
 

00:01:23.280 --> 00:01:24.770 align:start position:0%
good Android citizen and only ask for
months<00:01:23.610><c> as</c><00:01:23.729><c> quickly</c><00:01:23.970><c> as</c><00:01:24.150><c> you</c><00:01:24.180><c> actually</c><00:01:24.420><c> need</c>

00:01:24.770 --> 00:01:24.780 align:start position:0%
months as quickly as you actually need
 

00:01:24.780 --> 00:01:29.149 align:start position:0%
months as quickly as you actually need
them<00:01:26.689><c> the</c><00:01:27.689><c> step</c><00:01:27.930><c> counter</c><00:01:28.140><c> is</c><00:01:28.560><c> similar</c><00:01:28.920><c> to</c><00:01:29.040><c> the</c>

00:01:29.149 --> 00:01:29.159 align:start position:0%
them the step counter is similar to the
 

00:01:29.159 --> 00:01:31.010 align:start position:0%
them the step counter is similar to the
step<00:01:29.369><c> detector</c><00:01:29.850><c> and</c><00:01:30.000><c> that</c><00:01:30.119><c> it</c><00:01:30.210><c> also</c><00:01:30.360><c> sends</c><00:01:30.780><c> one</c>

00:01:31.010 --> 00:01:31.020 align:start position:0%
step detector and that it also sends one
 

00:01:31.020 --> 00:01:33.109 align:start position:0%
step detector and that it also sends one
event<00:01:31.320><c> per</c><00:01:31.470><c> step</c><00:01:31.680><c> however</c><00:01:32.369><c> the</c><00:01:32.700><c> value</c><00:01:32.970><c> it</c>

00:01:33.109 --> 00:01:33.119 align:start position:0%
event per step however the value it
 

00:01:33.119 --> 00:01:34.730 align:start position:0%
event per step however the value it
sends<00:01:33.420><c> is</c><00:01:33.509><c> a</c><00:01:33.540><c> cumulative</c><00:01:33.930><c> number</c><00:01:34.290><c> of</c><00:01:34.500><c> steps</c>

00:01:34.730 --> 00:01:34.740 align:start position:0%
sends is a cumulative number of steps
 

00:01:34.740 --> 00:01:36.560 align:start position:0%
sends is a cumulative number of steps
the<00:01:34.979><c> step</c><00:01:35.610><c> counter</c><00:01:35.759><c> also</c><00:01:36.180><c> takes</c><00:01:36.360><c> a</c><00:01:36.450><c> little</c>

00:01:36.560 --> 00:01:36.570 align:start position:0%
the step counter also takes a little
 

00:01:36.570 --> 00:01:38.270 align:start position:0%
the step counter also takes a little
longer<00:01:36.780><c> to</c><00:01:37.049><c> process</c><00:01:37.170><c> the</c><00:01:37.560><c> event</c><00:01:37.740><c> but</c><00:01:38.159><c> it</c>

00:01:38.270 --> 00:01:38.280 align:start position:0%
longer to process the event but it
 

00:01:38.280 --> 00:01:40.130 align:start position:0%
longer to process the event but it
produces<00:01:38.640><c> fewer</c><00:01:38.909><c> false</c><00:01:39.150><c> positives</c><00:01:39.659><c> so</c><00:01:39.869><c> an</c>

00:01:40.130 --> 00:01:40.140 align:start position:0%
produces fewer false positives so an
 

00:01:40.140 --> 00:01:42.080 align:start position:0%
produces fewer false positives so an
accuracy<00:01:40.680><c> is</c><00:01:40.770><c> paramount</c><00:01:40.920><c> use</c><00:01:41.700><c> the</c><00:01:41.880><c> step</c>

00:01:42.080 --> 00:01:42.090 align:start position:0%
accuracy is paramount use the step
 

00:01:42.090 --> 00:01:44.240 align:start position:0%
accuracy is paramount use the step
counter<00:01:42.350><c> you</c><00:01:43.350><c> can</c><00:01:43.500><c> also</c><00:01:43.649><c> request</c><00:01:43.979><c> these</c>

00:01:44.240 --> 00:01:44.250 align:start position:0%
counter you can also request these
 

00:01:44.250 --> 00:01:47.870 align:start position:0%
counter you can also request these
events<00:01:44.670><c> as</c><00:01:44.790><c> continuous</c><00:01:45.360><c> or</c><00:01:45.570><c> batched</c><00:01:46.759><c> so</c><00:01:47.759><c> how</c>

00:01:47.870 --> 00:01:47.880 align:start position:0%
events as continuous or batched so how
 

00:01:47.880 --> 00:01:49.940 align:start position:0%
events as continuous or batched so how
do<00:01:47.939><c> we</c><00:01:48.030><c> use</c><00:01:48.210><c> these</c><00:01:48.360><c> sensors</c><00:01:48.600><c> first</c><00:01:49.409><c> check</c><00:01:49.799><c> the</c>

00:01:49.940 --> 00:01:49.950 align:start position:0%
do we use these sensors first check the
 

00:01:49.950 --> 00:01:52.219 align:start position:0%
do we use these sensors first check the
advice<00:01:50.250><c> runs</c><00:01:50.700><c> at</c><00:01:50.850><c> least</c><00:01:51.000><c> Android</c><00:01:51.420><c> 4.4</c><00:01:52.049><c> and</c>

00:01:52.219 --> 00:01:52.229 align:start position:0%
advice runs at least Android 4.4 and
 

00:01:52.229 --> 00:01:55.010 align:start position:0%
advice runs at least Android 4.4 and
that<00:01:52.979><c> it</c><00:01:53.070><c> has</c><00:01:53.159><c> the</c><00:01:53.280><c> sensors</c><00:01:53.610><c> we</c><00:01:53.790><c> want</c><00:01:54.030><c> you</c><00:01:54.869><c> can</c>

00:01:55.010 --> 00:01:55.020 align:start position:0%
that it has the sensors we want you can
 

00:01:55.020 --> 00:01:56.990 align:start position:0%
that it has the sensors we want you can
require<00:01:55.380><c> the</c><00:01:55.710><c> sensors</c><00:01:56.100><c> and</c><00:01:56.369><c> minimum</c><00:01:56.700><c> API</c>

00:01:56.990 --> 00:01:57.000 align:start position:0%
require the sensors and minimum API
 

00:01:57.000 --> 00:02:00.380 align:start position:0%
require the sensors and minimum API
level<00:01:57.360><c> in</c><00:01:57.509><c> the</c><00:01:57.630><c> manifest</c><00:01:58.130><c> or</c><00:01:59.130><c> if</c><00:01:59.880><c> your</c><00:02:00.030><c> app</c><00:02:00.210><c> can</c>

00:02:00.380 --> 00:02:00.390 align:start position:0%
level in the manifest or if your app can
 

00:02:00.390 --> 00:02:02.300 align:start position:0%
level in the manifest or if your app can
work<00:02:00.600><c> without</c><00:02:00.780><c> the</c><00:02:01.020><c> step</c><00:02:01.229><c> sensors</c><00:02:01.649><c> you</c><00:02:02.280><c> can</c>

00:02:02.300 --> 00:02:02.310 align:start position:0%
work without the step sensors you can
 

00:02:02.310 --> 00:02:03.889 align:start position:0%
work without the step sensors you can
check<00:02:02.610><c> programmatically</c><00:02:03.180><c> for</c><00:02:03.450><c> them</c><00:02:03.600><c> using</c>

00:02:03.889 --> 00:02:03.899 align:start position:0%
check programmatically for them using
 

00:02:03.899 --> 00:02:06.350 align:start position:0%
check programmatically for them using
the<00:02:03.990><c> package</c><00:02:04.140><c> manager</c>

00:02:06.350 --> 00:02:06.360 align:start position:0%
the package manager
 

00:02:06.360 --> 00:02:08.880 align:start position:0%
the package manager
the<00:02:07.360><c> simplest</c><00:02:07.780><c> way</c><00:02:07.870><c> to</c><00:02:07.900><c> use</c><00:02:08.020><c> the</c><00:02:08.260><c> step</c><00:02:08.500><c> sensors</c>

00:02:08.880 --> 00:02:08.890 align:start position:0%
the simplest way to use the step sensors
 

00:02:08.890 --> 00:02:10.440 align:start position:0%
the simplest way to use the step sensors
is<00:02:09.070><c> to</c><00:02:09.220><c> listen</c><00:02:09.460><c> for</c><00:02:09.610><c> steps</c><00:02:09.850><c> only</c><00:02:10.030><c> while</c><00:02:10.330><c> the</c>

00:02:10.440 --> 00:02:10.450 align:start position:0%
is to listen for steps only while the
 

00:02:10.450 --> 00:02:12.300 align:start position:0%
is to listen for steps only while the
app<00:02:10.570><c> is</c><00:02:10.720><c> running</c><00:02:10.950><c> unregistering</c><00:02:11.950><c> and</c><00:02:12.190><c> re</c>

00:02:12.300 --> 00:02:12.310 align:start position:0%
app is running unregistering and re
 

00:02:12.310 --> 00:02:13.680 align:start position:0%
app is running unregistering and re
registering<00:02:12.850><c> your</c><00:02:12.940><c> listeners</c><00:02:13.300><c> with</c><00:02:13.480><c> the</c><00:02:13.570><c> app</c>

00:02:13.680 --> 00:02:13.690 align:start position:0%
registering your listeners with the app
 

00:02:13.690 --> 00:02:15.810 align:start position:0%
registering your listeners with the app
lifecycle<00:02:13.960><c> and</c><00:02:14.560><c> persisting</c><00:02:15.370><c> the</c><00:02:15.460><c> previous</c>

00:02:15.810 --> 00:02:15.820 align:start position:0%
lifecycle and persisting the previous
 

00:02:15.820 --> 00:02:17.280 align:start position:0%
lifecycle and persisting the previous
step<00:02:16.030><c> count</c><00:02:16.300><c> to</c><00:02:16.540><c> add</c><00:02:16.630><c> to</c><00:02:16.780><c> the</c><00:02:16.870><c> new</c><00:02:16.990><c> values</c>

00:02:17.280 --> 00:02:17.290 align:start position:0%
step count to add to the new values
 

00:02:17.290 --> 00:02:19.860 align:start position:0%
step count to add to the new values
reported<00:02:17.770><c> it</c><00:02:17.950><c> is</c><00:02:18.790><c> also</c><00:02:19.120><c> possible</c><00:02:19.540><c> to</c><00:02:19.600><c> use</c><00:02:19.720><c> the</c>

00:02:19.860 --> 00:02:19.870 align:start position:0%
reported it is also possible to use the
 

00:02:19.870 --> 00:02:21.480 align:start position:0%
reported it is also possible to use the
step<00:02:20.170><c> sensors</c><00:02:20.530><c> in</c><00:02:20.680><c> the</c><00:02:20.800><c> background</c><00:02:21.220><c> when</c><00:02:21.400><c> the</c>

00:02:21.480 --> 00:02:21.490 align:start position:0%
step sensors in the background when the
 

00:02:21.490 --> 00:02:22.710 align:start position:0%
step sensors in the background when the
CPU<00:02:21.880><c> is</c><00:02:22.030><c> suspended</c>

00:02:22.710 --> 00:02:22.720 align:start position:0%
CPU is suspended
 

00:02:22.720 --> 00:02:24.600 align:start position:0%
CPU is suspended
this<00:02:23.260><c> requires</c><00:02:23.620><c> manually</c><00:02:24.160><c> flushing</c><00:02:24.520><c> the</c>

00:02:24.600 --> 00:02:24.610 align:start position:0%
this requires manually flushing the
 

00:02:24.610 --> 00:02:28.220 align:start position:0%
this requires manually flushing the
sensor<00:02:24.940><c> event</c><00:02:25.060><c> queue</c><00:02:25.420><c> before</c><00:02:25.630><c> it</c><00:02:25.870><c> overflows</c>

00:02:28.220 --> 00:02:28.230 align:start position:0%
sensor event queue before it overflows
 

00:02:28.230 --> 00:02:30.540 align:start position:0%
sensor event queue before it overflows
speaking<00:02:29.230><c> of</c><00:02:29.320><c> listeners</c><00:02:29.740><c> here's</c><00:02:30.100><c> a</c><00:02:30.160><c> sample</c>

00:02:30.540 --> 00:02:30.550 align:start position:0%
speaking of listeners here's a sample
 

00:02:30.550 --> 00:02:32.400 align:start position:0%
speaking of listeners here's a sample
sensor<00:02:30.940><c> event</c><00:02:31.030><c> listener</c><00:02:31.540><c> once</c><00:02:32.260><c> you've</c>

00:02:32.400 --> 00:02:32.410 align:start position:0%
sensor event listener once you've
 

00:02:32.410 --> 00:02:33.810 align:start position:0%
sensor event listener once you've
registered<00:02:32.620><c> you</c><00:02:33.040><c> get</c><00:02:33.160><c> a</c><00:02:33.190><c> callback</c><00:02:33.430><c> to</c><00:02:33.580><c> on</c>

00:02:33.810 --> 00:02:33.820 align:start position:0%
registered you get a callback to on
 

00:02:33.820 --> 00:02:35.430 align:start position:0%
registered you get a callback to on
sensor<00:02:34.210><c> change</c><00:02:34.450><c> every</c><00:02:34.750><c> time</c><00:02:34.900><c> there's</c><00:02:35.140><c> a</c><00:02:35.200><c> step</c>

00:02:35.430 --> 00:02:35.440 align:start position:0%
sensor change every time there's a step
 

00:02:35.440 --> 00:02:37.260 align:start position:0%
sensor change every time there's a step
event<00:02:35.560><c> with</c><00:02:36.220><c> some</c><00:02:36.430><c> delay</c><00:02:36.670><c> depending</c><00:02:37.180><c> on</c>

00:02:37.260 --> 00:02:37.270 align:start position:0%
event with some delay depending on
 

00:02:37.270 --> 00:02:39.420 align:start position:0%
event with some delay depending on
whether<00:02:37.390><c> you</c><00:02:37.510><c> requested</c><00:02:37.960><c> batch</c><00:02:38.110><c> mode</c><00:02:38.440><c> this</c>

00:02:39.420 --> 00:02:39.430 align:start position:0%
whether you requested batch mode this
 

00:02:39.430 --> 00:02:41.370 align:start position:0%
whether you requested batch mode this
listener<00:02:39.820><c> is</c><00:02:39.940><c> for</c><00:02:40.120><c> a</c><00:02:40.150><c> step</c><00:02:40.390><c> detector</c><00:02:40.930><c> here</c>

00:02:41.370 --> 00:02:41.380 align:start position:0%
listener is for a step detector here
 

00:02:41.380 --> 00:02:43.230 align:start position:0%
listener is for a step detector here
we're<00:02:41.560><c> implementing</c><00:02:41.920><c> a</c><00:02:42.100><c> set</c><00:02:42.310><c> counter</c><00:02:42.640><c> at</c><00:02:43.000><c> this</c>

00:02:43.230 --> 00:02:43.240 align:start position:0%
we're implementing a set counter at this
 

00:02:43.240 --> 00:02:44.880 align:start position:0%
we're implementing a set counter at this
point<00:02:43.510><c> we</c><00:02:43.690><c> can</c><00:02:43.810><c> go</c><00:02:43.840><c> ahead</c><00:02:43.960><c> and</c><00:02:44.470><c> display</c><00:02:44.710><c> the</c>

00:02:44.880 --> 00:02:44.890 align:start position:0%
point we can go ahead and display the
 

00:02:44.890 --> 00:02:46.770 align:start position:0%
point we can go ahead and display the
step<00:02:45.100><c> count</c><00:02:45.370><c> your</c><00:02:46.210><c> listener</c><00:02:46.540><c> will</c><00:02:46.690><c> be</c>

00:02:46.770 --> 00:02:46.780 align:start position:0%
step count your listener will be
 

00:02:46.780 --> 00:02:47.760 align:start position:0%
step count your listener will be
different<00:02:47.080><c> depending</c><00:02:47.200><c> on</c><00:02:47.500><c> the</c><00:02:47.560><c> type</c><00:02:47.740><c> of</c>

00:02:47.760 --> 00:02:47.770 align:start position:0%
different depending on the type of
 

00:02:47.770 --> 00:02:49.770 align:start position:0%
different depending on the type of
sensor<00:02:48.220><c> and</c><00:02:48.490><c> what</c><00:02:49.120><c> you</c><00:02:49.210><c> want</c><00:02:49.360><c> to</c><00:02:49.450><c> do</c><00:02:49.540><c> with</c><00:02:49.660><c> the</c>

00:02:49.770 --> 00:02:49.780 align:start position:0%
sensor and what you want to do with the
 

00:02:49.780 --> 00:02:52.890 align:start position:0%
sensor and what you want to do with the
data<00:02:50.820><c> to</c><00:02:51.820><c> see</c><00:02:52.000><c> this</c><00:02:52.150><c> in</c><00:02:52.270><c> action</c><00:02:52.390><c> please</c>

00:02:52.890 --> 00:02:52.900 align:start position:0%
data to see this in action please
 

00:02:52.900 --> 00:02:54.750 align:start position:0%
data to see this in action please
download<00:02:53.050><c> the</c><00:02:53.440><c> batch</c><00:02:53.590><c> step</c><00:02:53.950><c> sensor</c><00:02:54.340><c> sample</c>

00:02:54.750 --> 00:02:54.760 align:start position:0%
download the batch step sensor sample
 

00:02:54.760 --> 00:02:56.550 align:start position:0%
download the batch step sensor sample
linked<00:02:55.120><c> from</c><00:02:55.360><c> the</c><00:02:55.450><c> video</c><00:02:55.690><c> description</c><00:02:55.900><c> for</c><00:02:56.500><c> a</c>

00:02:56.550 --> 00:02:56.560 align:start position:0%
linked from the video description for a
 

00:02:56.560 --> 00:02:58.740 align:start position:0%
linked from the video description for a
full<00:02:56.770><c> working</c><00:02:57.100><c> example</c><00:02:57.490><c> of</c><00:02:57.550><c> this</c><00:02:57.700><c> code</c><00:02:57.910><c> and</c><00:02:58.150><c> go</c>

00:02:58.740 --> 00:02:58.750 align:start position:0%
full working example of this code and go
 

00:02:58.750 --> 00:03:02.580 align:start position:0%
full working example of this code and go
take<00:02:58.870><c> it</c><00:02:58.930><c> for</c><00:02:59.020><c> a</c><00:02:59.170><c> walk</c><00:02:59.200><c> thanks</c><00:03:00.160><c> for</c><00:03:00.280><c> watching</c>

