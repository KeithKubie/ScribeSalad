WEBVTT
Kind: captions
Language: en

00:00:00.300 --> 00:00:03.440
All right. We're going to talk about another clustering method. And just

00:00:03.440 --> 00:00:05.720
to transition from the previous one, let's, let's take a look

00:00:05.720 --> 00:00:08.710
at this data set here. We've got seven points. A, b,

00:00:08.710 --> 00:00:11.550
c are all close together on the left. E, f, g are

00:00:11.550 --> 00:00:14.850
all close together on the right. And d is equidistant from,

00:00:14.850 --> 00:00:19.180
say c and e. In the k means clustering setting. If

00:00:19.180 --> 00:00:22.410
we're looking for two clusters. What's going to happen to d? So,

00:00:22.410 --> 00:00:25.700
one possibility is it ends up with the group on the left.

00:00:25.700 --> 00:00:27.204
Another possibility is it ends up with

00:00:27.204 --> 00:00:29.780
the group on the right. Another possibility is

00:00:29.780 --> 00:00:32.400
that, depending on what happens from the

00:00:32.400 --> 00:00:34.460
random starting state, it might end up on

00:00:34.460 --> 00:00:36.340
the left or the right. And then

00:00:36.340 --> 00:00:38.420
finally, it's shared between the two clusters. because

00:00:38.420 --> 00:00:40.010
it doesn't really belong in either of them.

00:00:40.010 --> 00:00:42.160
So it's sort of going to partly join both.

00:00:42.160 --> 00:00:46.093
&gt;&gt; Oh, I see. So d is exactly in the middle between c and a. Okay.

00:00:46.093 --> 00:00:47.850
&gt;&gt; That's what I intended to draw, yeah.

00:00:47.850 --> 00:00:49.880
&gt;&gt; Okay, good. I think I can figure out the answer.

