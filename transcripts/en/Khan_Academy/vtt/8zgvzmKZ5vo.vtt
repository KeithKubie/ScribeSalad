WEBVTT
Kind: captions
Language: en

00:00:00.499 --> 00:00:02.680
What I would like to do
is describe an imaginary,

00:00:02.680 --> 00:00:05.110
or a fictitious,
Bitcoin transaction.

00:00:05.110 --> 00:00:07.750
And then talk about how
somebody might try to game

00:00:07.750 --> 00:00:09.080
or defraud the system.

00:00:09.080 --> 00:00:11.960
And why that's not only
mathematically hard to do,

00:00:11.960 --> 00:00:14.110
but why there's actually
an incentive-- actually

00:00:14.110 --> 00:00:17.020
an economic incentive
in the Bitcoin system

00:00:17.020 --> 00:00:20.640
for different people
to behave honestly.

00:00:20.640 --> 00:00:23.525
So let's suppose that there is
someone out there named Dan,

00:00:23.525 --> 00:00:25.535
and that Dan wants to
order a pizza-- maybe

00:00:25.535 --> 00:00:28.102
a cheese pizza, from
Pete's Pizza Shop.

00:00:28.102 --> 00:00:30.310
And let's say that Pete's
Pizza Shop accepts Bitcoins

00:00:30.310 --> 00:00:37.270
as payment, and that it costs
1 Bitcoin for a pizza pie.

00:00:37.270 --> 00:00:39.300
And imagine that Dan
receive previously--

00:00:39.300 --> 00:00:42.980
let's say he received 5
Bitcoins from his cousin, Carol.

00:00:42.980 --> 00:00:45.170
So maybe Carol, who I'm
going to label by C,

00:00:45.170 --> 00:00:52.040
gave to Dan 5 Bitcoins,
which we can label as a B

00:00:52.040 --> 00:00:54.220
with a circle around it.

00:00:54.220 --> 00:00:56.470
And that he wants to use
1 of these 5 Bitcoins

00:00:56.470 --> 00:00:59.060
to buy a pizza from Pete.

00:00:59.060 --> 00:01:01.109
And so what Dan's
Bitcoin client will do

00:01:01.109 --> 00:01:02.900
is it will create a
transaction record that

00:01:02.900 --> 00:01:05.650
includes information about
how Dan got these Bitcoins.

00:01:05.650 --> 00:01:07.250
In this case, it
includes information

00:01:07.250 --> 00:01:11.750
about this transaction between
Carol, who we've marked by C,

00:01:11.750 --> 00:01:13.460
and Dan for 5 Bitcoins.

00:01:13.460 --> 00:01:15.530
And then it specifies
that Dan wants

00:01:15.530 --> 00:01:18.050
to give one of these
Bitcoins to Pete--

00:01:18.050 --> 00:01:20.860
and we'll label Pete
by a P. And also

00:01:20.860 --> 00:01:23.790
that Dan is going to take
the remaining 4 Bitcoins.

00:01:23.790 --> 00:01:26.821
And that will be basically
change to himself.

00:01:26.821 --> 00:01:28.195
And the way that
Bitcoin is built

00:01:28.195 --> 00:01:31.515
is that you have to
actually specify the change,

00:01:31.515 --> 00:01:34.140
because you need to have a way--
whatever goes into the Bitcoin

00:01:34.140 --> 00:01:36.372
system has to come
out at the other end.

00:01:36.372 --> 00:01:37.830
And so you can't
have a transaction

00:01:37.830 --> 00:01:39.121
where the numbers don't add up.

00:01:39.121 --> 00:01:42.510
And so whatever is remaining
is either change, or part of it

00:01:42.510 --> 00:01:44.540
can be used as a
transaction fee.

00:01:44.540 --> 00:01:45.150
And so on.

00:01:45.150 --> 00:01:47.340
But for this example,
to keep things simple,

00:01:47.340 --> 00:01:49.590
I'll assume that there is
no transaction fee in place.

00:01:49.590 --> 00:01:51.510
The transaction fee is just 0.

00:01:51.510 --> 00:01:54.950
And we'll focus only on the
situation in which everything

00:01:54.950 --> 00:01:58.440
is being accounted for
in the transaction.

00:01:58.440 --> 00:02:00.020
Now, this transaction
record is going

00:02:00.020 --> 00:02:03.030
to be broadcast out to
the entire Bitcoin world.

00:02:03.030 --> 00:02:05.420
And so in particular,
Pete is going

00:02:05.420 --> 00:02:08.590
to receive a copy
of this transaction.

00:02:08.590 --> 00:02:10.430
But in addition to
Pete receiving it,

00:02:10.430 --> 00:02:14.670
so too will the other people
on the Bitcoin system.

00:02:14.670 --> 00:02:16.820
And if you recall, there
are these special nodes,

00:02:16.820 --> 00:02:19.730
the special entities
or people in Bitcoin,

00:02:19.730 --> 00:02:21.110
that are known as
Bitcoin miners.

00:02:21.110 --> 00:02:23.190
And these Bitcoin
miners are going

00:02:23.190 --> 00:02:27.380
to be responsible for making
sure that everything checks out

00:02:27.380 --> 00:02:29.940
in the transaction from
a global perspective.

00:02:29.940 --> 00:02:32.620
What they do is they look at
the full record of transactions.

00:02:32.620 --> 00:02:34.410
And this transaction
record is public.

00:02:34.410 --> 00:02:36.555
It's known as a
transaction block chain,

00:02:36.555 --> 00:02:40.350
and I've put a description of
the transaction block chain

00:02:40.350 --> 00:02:41.442
right here.

00:02:41.442 --> 00:02:43.650
And this transaction block
chain contains the history

00:02:43.650 --> 00:02:45.840
of every single
transaction that's

00:02:45.840 --> 00:02:48.300
ever occurred within
the Bitcoin system

00:02:48.300 --> 00:02:51.100
from the beginning of time--
the time of the first block,

00:02:51.100 --> 00:02:55.700
which is known in Bitcoin
as the genesis block.

00:02:55.700 --> 00:02:59.630
And everyone can verify the
details of any transaction

00:02:59.630 --> 00:03:01.970
if they want to because
that information is public.

00:03:01.970 --> 00:03:04.700
And in particular, what these
Bitcoin miners will look at

00:03:04.700 --> 00:03:08.010
is they'll look at whether
or not Dan previously

00:03:08.010 --> 00:03:10.450
received five Bitcoins
from anybody else.

00:03:10.450 --> 00:03:13.090
In this particular case,
it was his cousin, Carol.

00:03:13.090 --> 00:03:16.940
Whether or not Dan has tried to
spend those Bitcoin previously.

00:03:16.940 --> 00:03:18.590
And so on and so forth.

00:03:18.590 --> 00:03:21.970
And these Bitcoin miners
are all collectively

00:03:21.970 --> 00:03:24.900
trying to take all these recent
transactions that haven't yet

00:03:24.900 --> 00:03:28.040
been recorded, and that includes
not only the transaction

00:03:28.040 --> 00:03:30.750
between Dan and Pete, but
there may be other transactions

00:03:30.750 --> 00:03:33.380
floating out there that
took place on the same time.

00:03:33.380 --> 00:03:35.040
And the Bitcoin
miners will basically

00:03:35.040 --> 00:03:37.674
look at all these different
transactions at once.

00:03:37.674 --> 00:03:39.090
And they're going
to basically try

00:03:39.090 --> 00:03:43.050
to figure out how to form
a transaction block out

00:03:43.050 --> 00:03:44.600
of these transactions.

00:03:44.600 --> 00:03:46.640
And they want to add
this transaction block

00:03:46.640 --> 00:03:50.240
to the end of the current
transaction block chain.

00:03:50.240 --> 00:03:52.820
Now, if you might recall
from previous videos, that

00:03:52.820 --> 00:03:55.750
for a Bitcoin miner
to add a transaction

00:03:55.750 --> 00:03:57.670
block to a transaction
block chain,

00:03:57.670 --> 00:04:01.010
they have to solve what's known
as a proof-of-work puzzle.

00:04:01.010 --> 00:04:03.820
And the Bitcoin system is
designed-- or maybe calibrated

00:04:03.820 --> 00:04:07.390
is a better word-- so that
on average one miner will

00:04:07.390 --> 00:04:10.250
solve a puzzle in
about 10 minutes.

00:04:10.250 --> 00:04:12.040
I think it's actually
worth stressing here

00:04:12.040 --> 00:04:15.747
that it could take a long time
for any one individual miner

00:04:15.747 --> 00:04:16.455
solve the puzzle.

00:04:16.455 --> 00:04:19.410
It could even take maybe
a year, or even two years.

00:04:19.410 --> 00:04:23.860
But because there are so
many of these miners working

00:04:23.860 --> 00:04:26.180
at the same time,
one of them is bound

00:04:26.180 --> 00:04:30.130
to get lucky and solve
the puzzle quickly.

00:04:30.130 --> 00:04:35.530
Now, each of these
proof-of-work puzzles

00:04:35.530 --> 00:04:38.980
that is associated with
a transaction block

00:04:38.980 --> 00:04:42.370
happens to have a difficulty
score associated with it.

00:04:42.370 --> 00:04:45.530
And this difficulty
basically represents how hard

00:04:45.530 --> 00:04:49.020
it was to solve that
proof-of-work puzzle.

00:04:49.020 --> 00:04:50.700
So imagine that there
are some numbers,

00:04:50.700 --> 00:04:55.092
and we'll call
these numbers D sub

00:04:55.092 --> 00:04:57.610
N. For the most recent
difficulty score,

00:04:57.610 --> 00:04:58.910
they'll be D sub N minus 1.

00:04:58.910 --> 00:05:02.050
These are just numbers that
somehow represent how hard it

00:05:02.050 --> 00:05:04.810
was to solve this proof-of-work.

00:05:04.810 --> 00:05:08.430
And when you look at an overall
chain, what the Bitcoin is

00:05:08.430 --> 00:05:11.610
interested in is it's
interested in how hard was

00:05:11.610 --> 00:05:14.160
it to construct
that entire chain.

00:05:14.160 --> 00:05:15.980
And the reason it's
important for someone

00:05:15.980 --> 00:05:18.440
to understand how hard the
entire chain is constructed

00:05:18.440 --> 00:05:21.590
is because this is overall
score for this chain--

00:05:21.590 --> 00:05:23.750
this difficulty
score for the chain

00:05:23.750 --> 00:05:27.760
is what's used by Pete or by
other people who are receiving

00:05:27.760 --> 00:05:31.120
Bitcoins to figure
out whether or not

00:05:31.120 --> 00:05:32.490
they trust that transaction.

00:05:32.490 --> 00:05:35.470
The more work that went into the
overall chain, the more trust

00:05:35.470 --> 00:05:37.900
they'll have in
that transaction.

00:05:37.900 --> 00:05:40.240
And the reason for that is
that the way Bitcoin works

00:05:40.240 --> 00:05:43.455
is that if there was for
more than one transaction

00:05:43.455 --> 00:05:44.830
block chain out
there-- let's say

00:05:44.830 --> 00:05:47.850
there was a bad user out
there, or maybe somebody didn't

00:05:47.850 --> 00:05:49.686
receive a particular
message in time,

00:05:49.686 --> 00:05:51.310
or whatever reason--
if there's somehow

00:05:51.310 --> 00:05:54.210
more than one transaction
block chain out there,

00:05:54.210 --> 00:05:56.590
according to the
Bitcoin protocol,

00:05:56.590 --> 00:05:58.180
everyone is just
supposed to work off

00:05:58.180 --> 00:06:00.350
of the chain that had the
most work put into it.

00:06:00.350 --> 00:06:03.790
So we ignore chains that
have a lot less work

00:06:03.790 --> 00:06:06.590
and only consider the chain that
had the most work put into it.

00:06:06.590 --> 00:06:10.265
And in the Bitcoin system,
that particular chain

00:06:10.265 --> 00:06:14.850
is often referred to as the
longest chain in the system.

00:06:14.850 --> 00:06:18.716
And this is actually a
confusing piece of terminology.

00:06:18.716 --> 00:06:20.090
Because by longest
here, we don't

00:06:20.090 --> 00:06:23.652
mean that this change is
long in any physical sense.

00:06:23.652 --> 00:06:25.110
We really just
mean-- and I'm going

00:06:25.110 --> 00:06:27.754
to put three equal bars
to say what it means.

00:06:27.754 --> 00:06:29.420
By the longest chain,
we mean the change

00:06:29.420 --> 00:06:31.590
that has the most work.

00:06:31.590 --> 00:06:33.300
And the way that
the work is defined

00:06:33.300 --> 00:06:36.925
is that you look at all these
different difficulty scores,

00:06:36.925 --> 00:06:39.510
and these are difficulty
numbers, and you add them up,

00:06:39.510 --> 00:06:42.030
and that gives you a difficulty
score for the entire chain.

00:06:42.030 --> 00:06:44.280
And now we're going to be
interested in the chain that

00:06:44.280 --> 00:06:46.030
had the most work put into it.

00:06:46.030 --> 00:06:48.470
And we call that
the longest chain.

00:06:48.470 --> 00:06:50.510
Now let's imagine
that Dan is dishonest

00:06:50.510 --> 00:06:52.800
and that after he
eats the pizza--

00:06:52.800 --> 00:06:56.225
let's say Pete's convinced and
he gets his Bitcoin from Dan.

00:06:56.225 --> 00:06:56.850
He waits a bit.

00:06:56.850 --> 00:06:58.266
He sees that there
is a long chain

00:06:58.266 --> 00:07:00.430
after that contains
a transaction.

00:07:00.430 --> 00:07:02.590
He sends the pizza over to Dan.

00:07:02.590 --> 00:07:04.060
Dan eats the pizza
and then decides

00:07:04.060 --> 00:07:06.250
that he doesn't want
to behave honestly

00:07:06.250 --> 00:07:08.130
and he wants to
somehow cheat Pete,

00:07:08.130 --> 00:07:11.170
or he wants to
defraud the system.

00:07:11.170 --> 00:07:13.860
And the way that Dan is going
to try to defraud the system

00:07:13.860 --> 00:07:18.260
is by attempting to create
another transaction in which he

00:07:18.260 --> 00:07:22.160
assigns the 5 Bitcoins he got
from Carol to somebody else.

00:07:22.160 --> 00:07:25.740
And it could be-- let's
call this person Fred.

00:07:25.740 --> 00:07:27.470
And let's say Fred
is basically--

00:07:27.470 --> 00:07:29.300
Fred could be Dan's alter ego.

00:07:29.300 --> 00:07:30.649
It could be a friend of Dan's.

00:07:30.649 --> 00:07:33.190
It doesn't matter who Fred is
because we know that Fred isn't

00:07:33.190 --> 00:07:34.790
the rightful owner
of these Bitcoins.

00:07:34.790 --> 00:07:36.240
But what Dan is
going to try to do

00:07:36.240 --> 00:07:38.450
is he's going to
try to take those 5

00:07:38.450 --> 00:07:40.650
Bitcoins that he got from Carol.

00:07:40.650 --> 00:07:43.020
And he's going to now try
to take those 5 Bitcoins

00:07:43.020 --> 00:07:45.014
and assign them over to Fred.

00:07:45.014 --> 00:07:46.430
And we know that
this is something

00:07:46.430 --> 00:07:50.030
that we don't want to allow
because that would mean

00:07:50.030 --> 00:07:53.891
that somehow Dan was able to
spend these 5 Bitcoins twice

00:07:53.891 --> 00:07:54.390
over.

00:07:54.390 --> 00:07:56.840
He's effectively
double-spent those Bitcoins,

00:07:56.840 --> 00:07:59.160
and obviously one of
these transactions

00:07:59.160 --> 00:08:01.540
should be considered
fraudulent, the other one

00:08:01.540 --> 00:08:03.444
should be allowed to go through.

00:08:03.444 --> 00:08:05.610
Now, it's important to keep
in mind that if Dan just

00:08:05.610 --> 00:08:07.770
tried to spend these
same coins again

00:08:07.770 --> 00:08:09.420
without trying to
cover his tracks

00:08:09.420 --> 00:08:12.780
or anything of that nature,
then everybody out there would

00:08:12.780 --> 00:08:14.400
know that Dan is up to no good.

00:08:14.400 --> 00:08:17.870
Because they can see from the
existing longest transaction

00:08:17.870 --> 00:08:19.572
block chain--
namely this existing

00:08:19.572 --> 00:08:21.030
chain from the
beginning-- they can

00:08:21.030 --> 00:08:23.330
see that, hey, Dan
already spent these coins

00:08:23.330 --> 00:08:26.860
before, he shouldn't be allowed
to spend these coins again.

00:08:26.860 --> 00:08:30.260
And so what Dan has to do
is actually-- on his own--

00:08:30.260 --> 00:08:32.622
he has to create a
different transaction block

00:08:32.622 --> 00:08:38.299
chain that contains just this
second bogus transaction in it.

00:08:38.299 --> 00:08:39.980
This would be the
transaction to Fred.

00:08:39.980 --> 00:08:43.809
And that would leave out the
other transaction to Pete

00:08:43.809 --> 00:08:47.100
and hope that everybody else
will start to accept or believe

00:08:47.100 --> 00:08:48.960
this newer chain.

00:08:48.960 --> 00:08:51.150
And remember that since
everyone in Bitcoin

00:08:51.150 --> 00:08:53.750
ultimately goes with the
transaction block chain that

00:08:53.750 --> 00:08:57.340
contains the most work,
namely this longest chain

00:08:57.340 --> 00:09:00.780
that we talked about, Dan
has a fighting chance.

00:09:00.780 --> 00:09:03.800
He has a hope,
potentially, of being

00:09:03.800 --> 00:09:07.670
able to pull off this type
of a fraudulent scheme.

00:09:07.670 --> 00:09:09.840
And the real question
now is, how likely

00:09:09.840 --> 00:09:12.510
is it for Dan to succeed?

00:09:12.510 --> 00:09:14.880
So for Dan to be able
to pull this off,

00:09:14.880 --> 00:09:18.465
he has to start off with
the transaction block

00:09:18.465 --> 00:09:19.715
chain that existed previously.

00:09:19.715 --> 00:09:22.110
And he has to try to add
to that transaction block

00:09:22.110 --> 00:09:23.760
chain a different transaction.

00:09:23.760 --> 00:09:26.970
So rather than having this
previous transaction where

00:09:26.970 --> 00:09:29.600
he gave money to
Pete, he's going

00:09:29.600 --> 00:09:31.870
to try to create
a new transaction

00:09:31.870 --> 00:09:35.040
and add it to the transaction
block chain that contains

00:09:35.040 --> 00:09:40.060
this other fraudulent
transaction between Dan

00:09:40.060 --> 00:09:41.690
and his friend Fred.

00:09:41.690 --> 00:09:42.190
OK.

00:09:42.190 --> 00:09:44.439
So this is going to be the
bad transaction between Dan

00:09:44.439 --> 00:09:47.840
and Fred-- will be
in this new block.

00:09:47.840 --> 00:09:50.690
And in Bitcoin
lingo, this idea is

00:09:50.690 --> 00:09:52.760
known as a fork in the chain.

00:09:52.760 --> 00:09:55.110
And all we mean by fork
is that somehow there

00:09:55.110 --> 00:09:57.320
is more than one
version of history.

00:09:57.320 --> 00:09:59.230
Somebody tried to
rewrite their tracks,

00:09:59.230 --> 00:10:02.160
or to cover their tracks,
and to revise history the way

00:10:02.160 --> 00:10:03.450
we know it.

00:10:03.450 --> 00:10:05.785
And what that really means
is there's now somehow

00:10:05.785 --> 00:10:08.730
more than one version of
what happened out there.

00:10:08.730 --> 00:10:12.940
So in this example, one branch
in this fork is legitimate,

00:10:12.940 --> 00:10:14.680
and the other branch is bogus.

00:10:14.680 --> 00:10:16.660
And the legitimate
branch with the one,

00:10:16.660 --> 00:10:19.300
in our minds, where
Dan paid his friend

00:10:19.300 --> 00:10:21.617
Peter this vendor,
Pete, for a pizza.

00:10:21.617 --> 00:10:23.575
And the bogus one is this
follow on transaction

00:10:23.575 --> 00:10:26.930
where Dan attempted
to pay his friend Fred

00:10:26.930 --> 00:10:28.830
with those same exact Bitcoins.

00:10:28.830 --> 00:10:31.380
But now remember that any
transaction block that's

00:10:31.380 --> 00:10:33.900
added to this
transaction block chain

00:10:33.900 --> 00:10:36.820
has to contain within it
a proof-of-work puzzle--

00:10:36.820 --> 00:10:39.250
or solution, rather,
to a proof-of-work.

00:10:39.250 --> 00:10:42.050
Otherwise, no one
will accept the chain.

00:10:42.050 --> 00:10:44.600
And so if Dan wants
to cheat the system,

00:10:44.600 --> 00:10:49.936
he has to secretly solve a new
proof-of-work puzzle himself.

00:10:49.936 --> 00:10:52.060
But the challenge for Dan
is that he's starting off

00:10:52.060 --> 00:10:54.720
with a bit of a handicap because
there's already this longer

00:10:54.720 --> 00:10:58.260
chain out there that people
have started accepting.

00:10:58.260 --> 00:11:00.960
And keep in mind that because
this chain is out there,

00:11:00.960 --> 00:11:03.550
other nodes may have started
to build on top of this chain.

00:11:03.550 --> 00:11:07.120
Every 10 minutes, somebody's
adding to this change,

00:11:07.120 --> 00:11:07.682
on average.

00:11:07.682 --> 00:11:09.265
And so there's this
longer transaction

00:11:09.265 --> 00:11:10.890
block chain out there.

00:11:10.890 --> 00:11:13.690
And Dan wants to create
his own fake chain.

00:11:13.690 --> 00:11:15.192
And so he has to create a chain.

00:11:15.192 --> 00:11:16.900
In order for that
chain to be believable,

00:11:16.900 --> 00:11:19.060
it has to now be the
longest chain out there.

00:11:19.060 --> 00:11:22.070
And he has to basically do
all these proof-of-works

00:11:22.070 --> 00:11:25.420
to create a chain
that is longer.

00:11:25.420 --> 00:11:28.255
And to come up with this
longer chain on his own,

00:11:28.255 --> 00:11:30.380
Dan has to outrun the
existing proof-of-work chain.

00:11:30.380 --> 00:11:32.770
And that means he has to
solve not just typically

00:11:32.770 --> 00:11:34.270
one proof-of-work
puzzle, but he may

00:11:34.270 --> 00:11:37.310
need to solve several
proof-of-work puzzles to create

00:11:37.310 --> 00:11:41.100
another chain that he hopes will
be longer than the chain that's

00:11:41.100 --> 00:11:41.670
out there.

00:11:41.670 --> 00:11:43.480
And if he can get
the longest chain,

00:11:43.480 --> 00:11:45.937
he can get people to start
using that chain instead.

00:11:45.937 --> 00:11:47.770
And that the chain that
he might want people

00:11:47.770 --> 00:11:51.176
to use because it contains
this fake transaction.

00:11:51.176 --> 00:11:52.800
But it removes the
previous transaction

00:11:52.800 --> 00:11:54.600
where he gave money to Pete.

00:11:54.600 --> 00:11:56.310
And to solve a
proof-of-work, Dan

00:11:56.310 --> 00:11:58.700
has to basically take
whatever computing

00:11:58.700 --> 00:12:01.050
power he has access to.

00:12:01.050 --> 00:12:04.610
And he has to start
working on solving

00:12:04.610 --> 00:12:06.372
the proof-of-work puzzle.

00:12:06.372 --> 00:12:08.830
And there are no known shortcuts
for solving these puzzles.

00:12:08.830 --> 00:12:11.580
If you recall from any of
the proof-of-work videos,

00:12:11.580 --> 00:12:13.690
to succeed in a
proof-of-work is kind

00:12:13.690 --> 00:12:15.690
of like winning the lottery.

00:12:15.690 --> 00:12:18.150
There are ways to do it.

00:12:18.150 --> 00:12:21.060
But it really depends on how
much computing power you have.

00:12:21.060 --> 00:12:22.860
The more computing
power you have access

00:12:22.860 --> 00:12:25.787
to, the more lottery
tickets you have.

00:12:25.787 --> 00:12:27.620
And if somebody has
even one lottery ticket,

00:12:27.620 --> 00:12:29.950
they do have a chance
to win the lottery.

00:12:29.950 --> 00:12:33.070
But they are far less likely
to succeed compared to somebody

00:12:33.070 --> 00:12:35.486
who has a lot of
lottery tickets in hand.

00:12:35.486 --> 00:12:37.610
And even if you succeed
once in winning the lottery

00:12:37.610 --> 00:12:40.830
with a small number of tickets,
the likelihood of repeating

00:12:40.830 --> 00:12:44.200
that feat over and over
again, several times in a row,

00:12:44.200 --> 00:12:45.630
becomes much smaller.

00:12:45.630 --> 00:12:47.060
But that's exactly
Dan has to do.

00:12:47.060 --> 00:12:50.170
He has to basically win this
lottery multiple times until he

00:12:50.170 --> 00:12:52.350
has a bigger chain.

00:12:52.350 --> 00:12:54.360
And so the key metric
here-- the key thing

00:12:54.360 --> 00:12:59.120
you have to look for is how much
computing power Dan has versus

00:12:59.120 --> 00:13:02.780
how much computing power all
the honest nodes in the system

00:13:02.780 --> 00:13:04.690
have together.

00:13:04.690 --> 00:13:07.760
And if it the case that all
the honest nodes-- we'll

00:13:07.760 --> 00:13:11.960
call this the honest
computing power.

00:13:11.960 --> 00:13:13.560
And when I say honest
computing power,

00:13:13.560 --> 00:13:17.110
I mean the total computing
power for all the nodes

00:13:17.110 --> 00:13:17.800
who are honest.

00:13:17.800 --> 00:13:20.700
All the Bitcoin mining nodes
who are honest in the network.

00:13:20.700 --> 00:13:25.160
If that total computing power
that they have access to

00:13:25.160 --> 00:13:28.710
is greater than the
power that Dan has access

00:13:28.710 --> 00:13:32.244
to-- so Dan's
computing power-- then

00:13:32.244 --> 00:13:34.160
the Bitcoin system will
be safe, because it'll

00:13:34.160 --> 00:13:37.010
be hard for Dan to
be able to create

00:13:37.010 --> 00:13:38.720
this fraudulent
transaction chain

00:13:38.720 --> 00:13:41.081
because he won't be able to
outrun the honest people.

00:13:41.081 --> 00:13:43.330
The honest people will win
the lottery more frequently

00:13:43.330 --> 00:13:45.030
and they'll create
a longer chain.

00:13:45.030 --> 00:13:49.222
And Dan's attempt is going to
be very much an uphill battle.

00:13:49.222 --> 00:13:51.680
Now, it's theoretically possible
that Dan could have access

00:13:51.680 --> 00:13:52.846
to a lot of computing power.

00:13:52.846 --> 00:13:55.580
Maybe he's very wealthy or
he has a lot of resources.

00:13:55.580 --> 00:13:57.650
But he'll really need a
lot to be able to that.

00:13:57.650 --> 00:14:01.550
More than everyone else
who's legitimate combined.

00:14:01.550 --> 00:14:04.005
So that's one aspect of
why the transaction block

00:14:04.005 --> 00:14:04.740
chain is secure.

00:14:04.740 --> 00:14:08.040
Because it's unlikely for
any one individual to have

00:14:08.040 --> 00:14:11.380
access to just that
much computing power.

00:14:11.380 --> 00:14:13.470
And here I should point
out that there is also

00:14:13.470 --> 00:14:16.190
another aspect to the
security of Bitcoin.

00:14:16.190 --> 00:14:18.800
If Dan has access to that
kind of computing power

00:14:18.800 --> 00:14:21.040
to solve these
proof-of-work puzzles,

00:14:21.040 --> 00:14:24.880
then rather than trying to fight
this uphill battle of forking

00:14:24.880 --> 00:14:27.730
the transaction block chain,
and creating fake transactions,

00:14:27.730 --> 00:14:30.490
and so on, Dan is
probably much better

00:14:30.490 --> 00:14:33.380
off just using that
computing power

00:14:33.380 --> 00:14:37.290
he has for legitimate
Bitcoin mining himself.

00:14:37.290 --> 00:14:39.360
You might remember
that Bitcoin miners who

00:14:39.360 --> 00:14:43.910
solve proof-of-work puzzles get
both a reward for succeeding--

00:14:43.910 --> 00:14:45.670
they get some
number of Bitcoins--

00:14:45.670 --> 00:14:47.810
and they also get
a transaction fee

00:14:47.810 --> 00:14:51.420
for all the transactions in
the block that they validated.

00:14:51.420 --> 00:14:53.660
So there's this economic
incentive for Dan

00:14:53.660 --> 00:14:54.989
to behave honestly.

00:14:54.989 --> 00:14:56.780
So maybe I should just
recapping in closing

00:14:56.780 --> 00:14:59.760
the video that the security
of Bitcoin transactions

00:14:59.760 --> 00:15:03.380
comes from, first of all,
this mathematical barrier that

00:15:03.380 --> 00:15:05.890
makes it hard for Dan to
fork the transaction block

00:15:05.890 --> 00:15:10.450
chain in a dishonest way, as
well as an economic incentive

00:15:10.450 --> 00:15:15.310
for Dan to just act honestly
and mine Bitcoins for himself.

