WEBVTT
Kind: captions
Language: en

00:00:00.710 --> 00:00:04.700
Arrange the digits
2, 6, 0, and 1

00:00:04.700 --> 00:00:09.362
so that you create the highest
possible four-digit number.

00:00:09.362 --> 00:00:10.820
So the way I like
to think about it

00:00:10.820 --> 00:00:14.910
is, if I'm trying to create as
large of a number as possible,

00:00:14.910 --> 00:00:19.980
I want to put the largest
numbers in the largest place

00:00:19.980 --> 00:00:20.740
value.

00:00:20.740 --> 00:00:24.630
So if it's a four-digit number--
so it's one, two, three,

00:00:24.630 --> 00:00:27.340
four-digit number--
whatever I put here,

00:00:27.340 --> 00:00:29.970
this is going to
represent thousands.

00:00:29.970 --> 00:00:33.260
Whatever I put here is
going to represent hundreds.

00:00:33.260 --> 00:00:36.190
Whatever I put here
represents tens.

00:00:36.190 --> 00:00:38.870
And whatever I put
here represents ones.

00:00:38.870 --> 00:00:41.810
So I want to maximize the
number of thousands I have.

00:00:41.810 --> 00:00:45.070
For example, the largest
number here is 6.

00:00:45.070 --> 00:00:46.500
I could make it 6,000.

00:00:46.500 --> 00:00:47.560
I could make it 600.

00:00:47.560 --> 00:00:50.200
I could make it 60,
or I could make it 6.

00:00:50.200 --> 00:00:53.060
Well if I want as large
a number as possible,

00:00:53.060 --> 00:00:55.960
I'm going to make it 6,000.

00:00:55.960 --> 00:00:58.290
Notice, if I put any other
number in that place value--

00:00:58.290 --> 00:01:00.206
if I put a 0 there, I
would have no thousands.

00:01:00.206 --> 00:01:02.270
If I put 2 there,
I'd only have 2,000.

00:01:02.270 --> 00:01:04.190
If I put 1 there,
I'd only have 1,000.

00:01:04.190 --> 00:01:05.890
6,000 is definitely
going to be bigger

00:01:05.890 --> 00:01:07.931
than any of the numbers
that could be constructed

00:01:07.931 --> 00:01:11.460
with the 2, 0, or 1 in
the thousands place.

00:01:11.460 --> 00:01:14.350
Now the exact same logic, we
want the next largest number

00:01:14.350 --> 00:01:15.750
in the hundreds place.

00:01:15.750 --> 00:01:18.120
So the next largest
number here is a 2.

00:01:18.120 --> 00:01:19.980
So I'm going to put
a 2 right over here.

00:01:19.980 --> 00:01:22.850
I'd rather have two hundreds
than zero hundreds or one

00:01:22.850 --> 00:01:23.350
hundreds.

00:01:23.350 --> 00:01:25.080
That's going to make it bigger.

00:01:25.080 --> 00:01:27.760
Then, same exact idea--
we want the next largest

00:01:27.760 --> 00:01:29.220
number in the tens place.

00:01:29.220 --> 00:01:32.710
I'd rather have one
10 than zero 10.

00:01:32.710 --> 00:01:34.920
And then we're just
left with the 0.

00:01:34.920 --> 00:01:37.880
So we're just going to
put the 0 right over here.

00:01:37.880 --> 00:01:41.860
So we can make 6,210.

00:01:41.860 --> 00:01:45.120
If I wanted to make the smallest
possible four-digit number,

00:01:45.120 --> 00:01:47.020
then I would
rearrange this, so I

00:01:47.020 --> 00:01:49.340
have the smallest possible
number in the thousands

00:01:49.340 --> 00:01:52.030
and the largest possible
number in the ones.

00:01:52.030 --> 00:01:54.090
So the smallest possible
number I could create

00:01:54.090 --> 00:02:05.297
is-- I'm going to be
careful-- 0, 1, 2, 6.

00:02:05.297 --> 00:02:07.880
So the smallest possible number,
if I just switch this around,

00:02:07.880 --> 00:02:12.257
would be 126 that I could
construct out of these digits.

00:02:12.257 --> 00:02:13.590
But this is what they asked for.

00:02:13.590 --> 00:02:15.560
So we'll give 6,210.

