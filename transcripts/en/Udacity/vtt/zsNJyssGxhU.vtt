WEBVTT
Kind: captions
Language: en

00:00:24.400 --> 00:00:30.450
&gt;&gt; For every element in Y, if there exists an element that

00:00:31.970 --> 00:00:36.510
is after it, then that element must be greater than or

00:00:36.510 --> 00:00:43.250
equal to the current element we're looking at. Almost there, okay.

00:00:43.250 --> 00:00:48.970
you, what, Jarrod did is he broke the specification into two parts.

00:00:48.970 --> 00:00:54.050
One part is all the elements except the last one. And he, he stated exactly what

00:00:54.050 --> 00:00:57.440
the post-conditions is for that. But he didn't say anything about the last one.

00:00:57.440 --> 00:01:01.500
Okay, so if we wanted to have a precise specification, we'd have to deal with,

00:01:01.500 --> 00:01:06.470
with that one as well. Okay? Now, it turn out in this particular case that we

00:01:06.470 --> 00:01:11.820
can do a little proof in our head. To say that if the post condition that

00:01:11.820 --> 00:01:17.050
he specified for all the other element is true, that implies that the last one

00:01:17.050 --> 00:01:20.570
must be the greatest one. So, we could get we could get away with that, and

00:01:20.570 --> 00:01:26.830
in fact that's a pretty nice, clean way of expressing it. Notice,

00:01:26.830 --> 00:01:32.360
also, that Jared used the word" for each," and when you hear that phrase,

00:01:32.360 --> 00:01:36.530
it's suggestive of, in our first-order logic,

00:01:36.530 --> 00:01:40.210
of one of those quantifiers that I mentioned, the universal quantifier, for

00:01:40.210 --> 00:01:45.520
each or for all. And so we're going to, we're going to see when we specify

00:01:45.520 --> 00:01:49.190
this in first order logic that that, that quantifier is going to be there.

00:01:50.490 --> 00:01:55.190
First order logic when we introduce a quantifier at the same time that,

00:01:55.190 --> 00:02:00.600
or, when we use the quantifier at the same time we introduce a variable which is

00:02:00.600 --> 00:02:05.710
going to stand for the typical element of the vector. Okay, so

00:02:05.710 --> 00:02:11.670
for each i where i is going to be an index position into y,

00:02:11.670 --> 00:02:17.610
then we can say something about the value that's held in position i and

00:02:17.610 --> 00:02:22.750
the position i plus one Okay? So, the quantifier for each has a variable

00:02:22.750 --> 00:02:27.230
that comes with it we can call it i or j or whatever you would like.

