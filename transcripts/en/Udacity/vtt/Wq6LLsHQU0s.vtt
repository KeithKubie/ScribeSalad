WEBVTT
Kind: captions
Language: en

00:00:00.100 --> 00:00:02.719
The solution to this question 
is ListPreference.

00:00:03.330 --> 00:00:06.870
When the setting is tapped, it presents 
a list of choices as a dialogue.

00:00:06.910 --> 00:00:10.550
When the user selects an option, 
it's saved into Shared Preferences.

00:00:10.550 --> 00:00:12.015
Here are the steps to do this.

00:00:12.155 --> 00:00:15.600
Within the pref_general.xml file,
we add a list preference.

00:00:15.790 --> 00:00:19.450
We give it a title, and this maps
to the string temperature units.

00:00:19.860 --> 00:00:22.770
We also need to give it a key
for the shared preferences,

00:00:22.770 --> 00:00:25.200
and so we specify that to be units.

00:00:25.490 --> 00:00:27.870
If there is no value 
in shared preferences,

00:00:27.870 --> 00:00:30.640
then it falls back
to a default value of metric.

00:00:31.300 --> 00:00:35.060
The preference also wants to know 
the list of all possible values here.

00:00:35.550 --> 00:00:38.110
The two possible values
are metric or imperial,

00:00:38.110 --> 00:00:41.170
so we pass those in as an array, 
into entry values.

00:00:41.320 --> 00:00:44.740
Now, these are just constants 
for use within the logic of our app.

00:00:45.000 --> 00:00:46.880
These are not the user visible strings.

00:00:47.080 --> 00:00:51.410
So we need to create entries 
which is an array of user visible strings

00:00:51.410 --> 00:00:53.930
that maps to each one 
of these possible values.

00:00:54.040 --> 00:00:57.300
To have the temperature unit preference 
show up in the settings activity,

00:00:57.330 --> 00:01:00.130
we modify the on create method. 
We add this line of code

00:01:00.130 --> 00:01:02.510
for the temperature units setting. 
When the user makes

00:01:02.510 --> 00:01:05.209
a selection in the dialog, 
we set the preference summary

00:01:05.209 --> 00:01:08.290
to be the new value 
of either metric or imperial.

00:01:08.590 --> 00:01:11.130
Here, when we receive 
a high and low temperature,

00:01:11.250 --> 00:01:14.180
we read from shared preferences
to know whether the temperature

00:01:14.180 --> 00:01:17.030
should be converted 
to imperial units or left as metric.

00:01:17.310 --> 00:01:20.840
Then we return the formatted string 
for display in the UI.

00:01:21.010 --> 00:01:24.190
That completes the code 
for saving the temperature unit setting.

