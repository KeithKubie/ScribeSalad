WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.310
[MUSIC PLAYING]

00:00:03.310 --> 00:00:05.830
Thank you very, very much for
coming-- and watching online--

00:00:05.830 --> 00:00:06.510
if you're here.

00:00:06.510 --> 00:00:09.380
This is "Building
Physical Visualizations

00:00:09.380 --> 00:00:14.036
for Cloud Services,"
or more aspirationally,

00:00:14.036 --> 00:00:16.510
"Be a Cloud DJ."

00:00:16.510 --> 00:00:19.390
So I'm going to misuse MIDI
controllers and electronics

00:00:19.390 --> 00:00:21.920
and stuff to try to
visualize what's going

00:00:21.920 --> 00:00:24.130
on in cloud systems today.

00:00:24.130 --> 00:00:28.660
So what's the first thing
you think of when I say,

00:00:28.660 --> 00:00:29.910
"dashboard"?

00:00:29.910 --> 00:00:30.710
Take that image.

00:00:30.710 --> 00:00:32.369
Put that in your head.

00:00:32.369 --> 00:00:34.698
We're going to ask
the internet by proxy.

00:00:37.420 --> 00:00:38.030
Do a search.

00:00:38.030 --> 00:00:39.196
You know live search, right?

00:00:39.196 --> 00:00:41.202
It's what you do at talks.

00:00:41.202 --> 00:00:42.660
So this is what
the internet thinks

00:00:42.660 --> 00:00:44.810
dashboards look like, right?

00:00:44.810 --> 00:00:49.770
It's all these kinds of
computer screens and the like.

00:00:49.770 --> 00:00:53.651
I want us to think back
more of the dashboards

00:00:53.651 --> 00:00:54.400
that we first saw.

00:00:54.400 --> 00:00:55.941
The computer
dashboards-- that's like

00:00:55.941 --> 00:00:58.810
a metaphor for
actual dashboards,

00:00:58.810 --> 00:01:03.280
and go out a little further.

00:01:03.280 --> 00:01:06.190
Like control rooms--
you think about what

00:01:06.190 --> 00:01:09.140
they use to fly to space
or run a nuclear plant.

00:01:09.140 --> 00:01:12.500
They've got these amazing rooms
full of dials and screens,

00:01:12.500 --> 00:01:13.819
and stuff.

00:01:13.819 --> 00:01:15.360
Wouldn't you want
this for your app--

00:01:15.360 --> 00:01:18.190
know exactly what's going on?

00:01:18.190 --> 00:01:20.960
So we're going to talk
about that a little bit.

00:01:20.960 --> 00:01:23.770
And, of course, we're going
to start with the gauge,

00:01:23.770 --> 00:01:26.830
because this is kind of
the most fundamental thing.

00:01:26.830 --> 00:01:28.810
And the big thing
I want to-- this

00:01:28.810 --> 00:01:31.022
is not going to be like an
amazing, things you never

00:01:31.022 --> 00:01:32.830
knew were possible before talk.

00:01:32.830 --> 00:01:35.940
But it is way easier
than it used to be.

00:01:35.940 --> 00:01:38.370
So that's the kind of
take-away from this-- making

00:01:38.370 --> 00:01:42.740
ambient visual
versions of the stats

00:01:42.740 --> 00:01:44.330
that you collect on
your applications

00:01:44.330 --> 00:01:47.090
is way easier than it could be.

00:01:47.090 --> 00:01:53.790
So this is a little analog
panel meter from Adafruit.

00:01:53.790 --> 00:01:57.170
And what this looks like
from a code perspective

00:01:57.170 --> 00:01:58.470
is pretty straightforward.

00:01:58.470 --> 00:02:00.490
This is Python.

00:02:00.490 --> 00:02:02.910
The main bit is right here.

00:02:02.910 --> 00:02:07.740
We set PWM-- how often
the signal is up.

00:02:07.740 --> 00:02:11.020
So we're giving it power, and
kind of more or less of that.

00:02:14.085 --> 00:02:18.320
Let me actually just copy this.

00:02:18.320 --> 00:02:20.110
And then we'll give this a try.

00:02:23.160 --> 00:02:27.940
So there's this library
called, "Pi GPIO,"

00:02:27.940 --> 00:02:31.040
and so a general purpose IO pin.

00:02:31.040 --> 00:02:33.110
And then, of course, the
initialisation-- this

00:02:33.110 --> 00:02:34.620
gets a little recursive.

00:02:34.620 --> 00:02:35.375
It's pigpio.pi.

00:02:38.320 --> 00:02:41.980
So we can kind of start and
end with the same thing.

00:02:41.980 --> 00:02:45.160
And then-- actually,
if we can switch over

00:02:45.160 --> 00:02:49.970
to this screen over here,
we've got a live panel meter,

00:02:49.970 --> 00:02:51.660
where these meters set up.

00:02:51.660 --> 00:02:54.740
And there we go.

00:02:54.740 --> 00:02:55.850
That's all there.

00:02:55.850 --> 00:02:58.830
And we give it a value
between 0 and [? 35, ?]

00:02:58.830 --> 00:03:02.590
because that's the
natural state of numbers.

00:03:02.590 --> 00:03:05.150
So we do that, and I hit Enter.

00:03:05.150 --> 00:03:06.780
Whoo!

00:03:06.780 --> 00:03:09.070
Isn't that amazing? [LAUGHING]

00:03:09.070 --> 00:03:11.430
On some level, that's kind
of like, "yeah, whatever,"

00:03:11.430 --> 00:03:13.930
but now I can put that in any
box or cardboard thing or hook

00:03:13.930 --> 00:03:16.330
it up to any cloud
API or anything you're

00:03:16.330 --> 00:03:17.550
gathering metrics on.

00:03:17.550 --> 00:03:22.310
And you just feed it
numbers, and it moves around,

00:03:22.310 --> 00:03:25.155
which-- I don't know.

00:03:25.155 --> 00:03:28.750
[LAUGHING] I'm kind
of excited about this.

00:03:28.750 --> 00:03:31.550
And so this is a little spike
that just kind of moves it

00:03:31.550 --> 00:03:33.240
up and down as you go.

00:03:33.240 --> 00:03:35.532
I think this is kind of the
fundamental, initial thing.

00:03:35.532 --> 00:03:36.906
You can get pretty
far with this.

00:03:36.906 --> 00:03:39.050
Like, think about
requests per second, CPU

00:03:39.050 --> 00:03:42.290
usage, some sort of capacity
issue-- anything that's kind

00:03:42.290 --> 00:03:45.010
of a proportion of a whole.

00:03:45.010 --> 00:03:47.840
You can go pretty far with this.

00:03:47.840 --> 00:03:50.650
So that's pretty
straightforward.

00:03:50.650 --> 00:03:52.777
And what's going on
in the covers is,

00:03:52.777 --> 00:03:55.110
there's a Raspberry Pi, which
I'll show you in a second.

00:03:55.110 --> 00:04:00.640
And I've plugged in two
wires and a resistor,

00:04:00.640 --> 00:04:02.130
and we're good to go.

00:04:02.130 --> 00:04:03.981
So, pretty straightforward.

00:04:07.310 --> 00:04:08.560
But I mentioned DJ, right?

00:04:08.560 --> 00:04:13.570
So could we go a little
further than that?

00:04:13.570 --> 00:04:14.510
I think we could.

00:04:14.510 --> 00:04:17.800
We want to get closer to that
control room kind of idea.

00:04:17.800 --> 00:04:21.149
And that means blinky lights.

00:04:21.149 --> 00:04:22.870
We need lots of blinky lights.

00:04:22.870 --> 00:04:26.420
And if there's anybody
who's good at blinky lights,

00:04:26.420 --> 00:04:29.920
it's electronic
musicians and DJs.

00:04:29.920 --> 00:04:38.160
If you look for
electronic instruments,

00:04:38.160 --> 00:04:40.277
there's all kinds
of things out here.

00:04:40.277 --> 00:04:41.860
And most of these
talk over a protocol

00:04:41.860 --> 00:04:45.350
called MIDI, which is just
bytes sent over serial.

00:04:45.350 --> 00:04:47.975
So it's either actual
serial cables or sort

00:04:47.975 --> 00:04:49.692
of showing up as
USB, which means

00:04:49.692 --> 00:04:51.150
we can talk kind
of bidirectionally

00:04:51.150 --> 00:04:52.108
to all of these things.

00:04:52.108 --> 00:04:55.140
So the keyboards can feed into
us, and the lights-- we can

00:04:55.140 --> 00:04:56.780
light up from the computers.

00:04:56.780 --> 00:04:58.363
I don't even know
what that is, but we

00:04:58.363 --> 00:05:00.050
need to check it out later.

00:05:00.050 --> 00:05:02.080
But I have one of these here.

00:05:02.080 --> 00:05:04.600
And this is a launchpad.

00:05:04.600 --> 00:05:09.160
And so we can connect
to that and actually

00:05:09.160 --> 00:05:13.070
visualize, with our amazing,
high-density display

00:05:13.070 --> 00:05:18.379
of eight-by-eight LEDs,
what's going on in the system.

00:05:18.379 --> 00:05:19.920
And the system I'm
going to visualize

00:05:19.920 --> 00:05:21.336
is Kubernetes,
because that's what

00:05:21.336 --> 00:05:23.240
I work on the most these days.

00:05:23.240 --> 00:05:23.900
It's amazing.

00:05:23.900 --> 00:05:26.190
And if you're doing Docker
containers or containers

00:05:26.190 --> 00:05:28.540
running a lot of machines,
definitely check it out.

00:05:28.540 --> 00:05:30.580
That's not what this
talk is about, at all.

00:05:30.580 --> 00:05:31.630
For the purpose of
this talk, you've

00:05:31.630 --> 00:05:32.890
got a bunch of
computers, and you've

00:05:32.890 --> 00:05:34.098
got programs running on them.

00:05:34.098 --> 00:05:35.960
So you got processes
running on them, right?

00:05:35.960 --> 00:05:38.017
And so, now, I
have an API to see

00:05:38.017 --> 00:05:39.850
what processes are
running on which computer

00:05:39.850 --> 00:05:42.016
and how loaded they are,
and all this kind of stuff.

00:05:44.590 --> 00:05:45.715
We can come back over here.

00:05:49.997 --> 00:05:51.080
Shall we live dangerously?

00:05:53.670 --> 00:05:57.160
I wasn't kidding about
a resistor and wire.

00:05:57.160 --> 00:05:58.540
We un-clip that guy.

00:05:58.540 --> 00:06:00.710
And then, we've got a
launchpad hooked up.

00:06:00.710 --> 00:06:02.950
And what you can't
see on my screen

00:06:02.950 --> 00:06:07.135
is, Kubernetes has a command
line tool, where I can say,

00:06:07.135 --> 00:06:10.140
hey, I'd like to run 10 copies
of this or 50 copies of this.

00:06:10.140 --> 00:06:13.160
And right now, the cluster--
the visualization I've done

00:06:13.160 --> 00:06:15.740
is, vertically,
we've got computers.

00:06:15.740 --> 00:06:17.550
So this is representing
eight computers.

00:06:17.550 --> 00:06:20.720
And there's two processes on
this one, and one on this one.

00:06:20.720 --> 00:06:21.480
And good to go.

00:06:21.480 --> 00:06:24.270
So I can say, oh my
gosh, our website's

00:06:24.270 --> 00:06:27.220
gotten really busy-- I
actually want to run 25.

00:06:27.220 --> 00:06:28.560
And I hit Enter.

00:06:28.560 --> 00:06:31.620
And maybe this is an ambient
display up on a wall somewhere,

00:06:31.620 --> 00:06:34.240
and every who walks by
is like, oh, hey, wow,

00:06:34.240 --> 00:06:36.699
what's going on today?

00:06:36.699 --> 00:06:39.240
And then, as it goes back down--
maybe it goes down to five--

00:06:39.240 --> 00:06:42.830
and Kubernetes jumps up really
fast and then kind of goes

00:06:42.830 --> 00:06:44.282
down a little more gradually.

00:06:44.282 --> 00:06:45.490
So we can see that happening.

00:06:45.490 --> 00:06:46.865
I actually have
learned something

00:06:46.865 --> 00:06:48.794
about the way Kubernetes
manages processes--

00:06:48.794 --> 00:06:50.460
super-active about
getting them started.

00:06:50.460 --> 00:06:52.560
And then, they kind
of pick up there.

00:06:52.560 --> 00:06:54.130
So already, I've
learned something.

00:06:54.130 --> 00:06:57.010
I went down to five
this time, not three.

00:06:57.010 --> 00:06:59.710
So that's fun.

00:06:59.710 --> 00:07:03.820
And this also is
very straightforward.

00:07:03.820 --> 00:07:07.040
There's a library
called, "Pi Launchpad."

00:07:07.040 --> 00:07:11.230
You grab that, install a few
things, and you're good to go.

00:07:11.230 --> 00:07:13.690
And the way you talk to
it is, there's an xy-grid,

00:07:13.690 --> 00:07:16.240
and you just poke 1, 4.

00:07:16.240 --> 00:07:20.270
Set that to green, set it
to red, and it lights up.

00:07:20.270 --> 00:07:25.770
So, OK, what really happened
behind the scenes here, right?

00:07:25.770 --> 00:07:29.600
Because, actually, when
I hit the button there,

00:07:29.600 --> 00:07:32.980
I was actually logged in SSH
to a machine in the cloud,

00:07:32.980 --> 00:07:36.180
talking with a command
line tool to an API.

00:07:36.180 --> 00:07:38.980
I've got another process
that's watching-- actually,

00:07:38.980 --> 00:07:41.660
I'm pulling, because I
did this last minute--

00:07:41.660 --> 00:07:45.800
watching the Kubernetes
API for what happened,

00:07:45.800 --> 00:07:48.560
and then updating the display
and pushing that to a message

00:07:48.560 --> 00:07:51.050
queue, and then, on the
Raspberry Pi-- it's sitting,

00:07:51.050 --> 00:07:53.800
waiting on the message
queue to see what happened.

00:07:53.800 --> 00:07:56.190
So if any new messages
come in, it displays them.

00:07:56.190 --> 00:07:58.300
When I hit Enter
there, that went,

00:07:58.300 --> 00:08:01.904
Enter to SSH in the cloud, to
an API, something else that

00:08:01.904 --> 00:08:03.570
read the API, put it
in a message queue,

00:08:03.570 --> 00:08:06.170
came down through my phone,
wireless to the Raspberry Pi,

00:08:06.170 --> 00:08:09.280
and lit up-- which is kind
of a lot of moving parts.

00:08:09.280 --> 00:08:12.610
But because there's a message
queue in between these,

00:08:12.610 --> 00:08:15.942
I can add more devices,
more visualizations.

00:08:15.942 --> 00:08:17.650
You can have a web-based
version of this,

00:08:17.650 --> 00:08:20.030
all hitting the same queue.

00:08:20.030 --> 00:08:22.080
So you can kind of
publish your messages--

00:08:22.080 --> 00:08:24.970
your stats-- into queues.

00:08:24.970 --> 00:08:28.420
And then, various different
programs can listen to that

00:08:28.420 --> 00:08:31.476
and see what's going on.

00:08:31.476 --> 00:08:33.350
What else can we do with
eight-by-eight LEDs?

00:08:33.350 --> 00:08:36.460
This is one of those design
constraints exercises,

00:08:36.460 --> 00:08:37.909
in a way.

00:08:37.909 --> 00:08:40.730
What I did here was
processes on computers.

00:08:40.730 --> 00:08:42.450
I'm not really using the color.

00:08:42.450 --> 00:08:45.470
We could imagine, for
example, each process--

00:08:45.470 --> 00:08:47.330
how much of its assigned
CPU it was using.

00:08:47.330 --> 00:08:50.479
It could go more to
the red or green.

00:08:50.479 --> 00:08:52.020
You could arrange
things differently.

00:08:52.020 --> 00:08:54.190
Kubernetes has this
idea of process groups

00:08:54.190 --> 00:08:56.023
that it calls, "the
replication controller."

00:08:56.023 --> 00:08:58.430
So instead of grouping by a
physical machine, which maybe

00:08:58.430 --> 00:08:59.929
isn't so meaningful,
you could group

00:08:59.929 --> 00:09:03.220
by logical parts of your
system-- or anything

00:09:03.220 --> 00:09:05.690
that makes sense for your app.

00:09:05.690 --> 00:09:10.320
And there's tons of other stuff.

00:09:10.320 --> 00:09:14.200
One-- this device is
actually an input device.

00:09:14.200 --> 00:09:17.040
It's a MIDI controller.

00:09:17.040 --> 00:09:18.670
What needs to happen next?

00:09:18.670 --> 00:09:20.860
Here's on my personal
aspirations list

00:09:20.860 --> 00:09:21.850
for this stuff.

00:09:21.850 --> 00:09:24.440
When you hit one of the
buttons, then it actually

00:09:24.440 --> 00:09:26.330
sends a command back
up to the system.

00:09:26.330 --> 00:09:28.770
And then, we can
kill that process.

00:09:28.770 --> 00:09:29.810
And then it goes away.

00:09:29.810 --> 00:09:32.020
So that one would go away.

00:09:32.020 --> 00:09:34.261
And then, we've
got Chaos Monkey.

00:09:34.261 --> 00:09:35.760
Have you guys heard
of Chaos Monkey?

00:09:35.760 --> 00:09:37.080
You know, you've got
your cloud systems.

00:09:37.080 --> 00:09:39.413
You've got some process that
runs and just deletes stuff

00:09:39.413 --> 00:09:42.810
randomly so you make sure that
your system is actually robust?

00:09:42.810 --> 00:09:46.880
And one of my colleagues
suggested this-- you actually

00:09:46.880 --> 00:09:51.530
recruit a three-year-old
to play on your system,

00:09:51.530 --> 00:09:54.060
and see whether it's
actually robust.

00:09:54.060 --> 00:09:55.510
That would be crazy.

00:09:55.510 --> 00:10:00.460
There's also other little RGB
LED displays that you can get,

00:10:00.460 --> 00:10:02.700
and I was imagining a
handheld version of this

00:10:02.700 --> 00:10:04.530
that you could carry
around with you.

00:10:04.530 --> 00:10:07.740
And this morning, I built it.

00:10:07.740 --> 00:10:10.030
So it totally exists.

00:10:10.030 --> 00:10:12.380
This is a Raspberry Pi,
and it totally works here.

00:10:12.380 --> 00:10:15.830
Let me bump this up to 25,
also going through my phone.

00:10:15.830 --> 00:10:17.140
So hopefully, it'll come up.

00:10:17.140 --> 00:10:18.200
And yay!

00:10:18.200 --> 00:10:20.382
There's more going on.

00:10:20.382 --> 00:10:21.840
So then, you can
set this anywhere.

00:10:21.840 --> 00:10:23.590
You could walk up to
your colleague's desk

00:10:23.590 --> 00:10:27.410
and be, like, so,
keep an eye on that.

00:10:27.410 --> 00:10:28.949
Or what's going on here?

00:10:28.949 --> 00:10:29.490
I don't know.

00:10:29.490 --> 00:10:32.324
It's kind of crazy, but I
think that would be super fun.

00:10:32.324 --> 00:10:34.490
And since I already had the
infrastructure in place,

00:10:34.490 --> 00:10:36.650
these messages were
flowing, and I had

00:10:36.650 --> 00:10:38.310
the rough code for an agent.

00:10:38.310 --> 00:10:40.590
All I had to do is
swap the library out

00:10:40.590 --> 00:10:44.010
for talking to that display
versus the launchpad.

00:10:44.010 --> 00:10:48.590
And I actually did that
in the hotel this morning.

00:10:48.590 --> 00:10:53.420
And then, there are all
kinds of different devices.

00:10:53.420 --> 00:10:56.230
This is a different
MIDI controller.

00:10:56.230 --> 00:11:00.550
And it's made to be your
faders for audio control.

00:11:00.550 --> 00:11:03.140
But this could easily be
system controls, right?

00:11:03.140 --> 00:11:04.580
Maybe you turn it up and down.

00:11:04.580 --> 00:11:07.180
You want to get a feel for how
your system actually works.

00:11:07.180 --> 00:11:08.721
You can have your
own control center.

00:11:12.787 --> 00:11:14.370
That's actually the
crux of this talk.

00:11:14.370 --> 00:11:17.400
Just think about
the things you have

00:11:17.400 --> 00:11:19.720
and which of the
knobs-- because we

00:11:19.720 --> 00:11:22.170
talk metaphorically about
knobs and dials on our systems

00:11:22.170 --> 00:11:24.080
all the time, and
having displays,

00:11:24.080 --> 00:11:26.320
and meters, and metrics.

00:11:26.320 --> 00:11:28.380
Is there a place where it
would really make sense

00:11:28.380 --> 00:11:31.000
to bring that out into
the physical world, where

00:11:31.000 --> 00:11:33.001
people visiting your
office or colleagues

00:11:33.001 --> 00:11:35.500
could actually interact with a
part of your system in a very

00:11:35.500 --> 00:11:37.540
physical, real way?

00:11:37.540 --> 00:11:40.790
And I guess that's kind
of the root of this.

00:11:40.790 --> 00:11:43.860
For a little bit of inspiration,
let's-- if you do a search

00:11:43.860 --> 00:11:49.770
on "MIDI controller,"
they're super diverse.

00:11:49.770 --> 00:11:53.490
And, in a way, the MIDI protocol
is like so many other things

00:11:53.490 --> 00:11:55.050
we use in software.

00:11:55.050 --> 00:11:57.910
It's this real
time-evented system.

00:11:57.910 --> 00:12:00.455
So you can wire all this up
into the rest of your systems

00:12:00.455 --> 00:12:01.080
you're running.

00:12:01.080 --> 00:12:03.540
So you can have keyboard-y
displays, these button kinds

00:12:03.540 --> 00:12:06.780
of things, sliders and knobs.

00:12:06.780 --> 00:12:11.710
This is a grid, but each grid
is sensitive to vibration

00:12:11.710 --> 00:12:12.940
in each direction.

00:12:12.940 --> 00:12:16.060
So you can do more
subtle things.

00:12:16.060 --> 00:12:19.700
Anyway, give it a look.

00:12:19.700 --> 00:12:23.770
Consider bringing your systems
out into the real world.

00:12:23.770 --> 00:12:25.690
And that's it.

00:12:25.690 --> 00:12:26.842
Thank you very much.

00:12:26.842 --> 00:12:29.490
[APPLAUSE]

00:12:29.490 --> 00:12:32.840
And I think-- oh, yeah.

00:12:32.840 --> 00:12:34.090
We've got time for questions.

00:12:34.090 --> 00:12:36.030
Did we have any Q&amp;A?

00:12:39.450 --> 00:12:40.130
And no.

00:12:40.130 --> 00:12:40.920
OK, we're done.

00:12:40.920 --> 00:12:42.470
Thank you very much.

00:12:42.470 --> 00:12:44.570
[APPLAUSE]

00:12:44.570 --> 00:12:47.320
[MUSIC PLAYING]

