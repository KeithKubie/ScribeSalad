WEBVTT
Kind: captions
Language: en

00:00:02.860 --> 00:00:06.450 align:start position:0%
 
at<00:00:03.399><c> Google</c><00:00:03.760><c> i/o</c><00:00:04.020><c> 2017</c><00:00:05.020><c> we</c><00:00:05.350><c> opened</c><00:00:05.830><c> the</c><00:00:05.950><c> door</c><00:00:06.160><c> to</c>

00:00:06.450 --> 00:00:06.460 align:start position:0%
at Google i/o 2017 we opened the door to
 

00:00:06.460 --> 00:00:08.520 align:start position:0%
at Google i/o 2017 we opened the door to
room<00:00:06.970><c> a</c><00:00:07.240><c> persistence</c><00:00:08.049><c> library</c><00:00:08.350><c> that</c><00:00:08.469><c> provides</c>

00:00:08.520 --> 00:00:08.530 align:start position:0%
room a persistence library that provides
 

00:00:08.530 --> 00:00:11.790 align:start position:0%
room a persistence library that provides
an<00:00:09.070><c> abstraction</c><00:00:09.520><c> layer</c><00:00:09.700><c> over</c><00:00:10.240><c> SQLite</c><00:00:10.800><c> now</c>

00:00:11.790 --> 00:00:11.800 align:start position:0%
an abstraction layer over SQLite now
 

00:00:11.800 --> 00:00:15.030 align:start position:0%
an abstraction layer over SQLite now
room<00:00:12.580><c> has</c><00:00:12.849><c> rich</c><00:00:13.059><c> version</c><00:00:13.450><c> 2.0</c><00:00:14.110><c> and</c><00:00:14.320><c> is</c><00:00:14.740><c> part</c><00:00:14.980><c> of</c>

00:00:15.030 --> 00:00:15.040 align:start position:0%
room has rich version 2.0 and is part of
 

00:00:15.040 --> 00:00:17.550 align:start position:0%
room has rich version 2.0 and is part of
jetpack<00:00:15.490><c> we</c><00:00:16.209><c> fix</c><00:00:16.420><c> the</c><00:00:16.540><c> bugs</c><00:00:16.750><c> you</c><00:00:16.900><c> reported</c><00:00:17.380><c> and</c>

00:00:17.550 --> 00:00:17.560 align:start position:0%
jetpack we fix the bugs you reported and
 

00:00:17.560 --> 00:00:19.849 align:start position:0%
jetpack we fix the bugs you reported and
added<00:00:18.220><c> some</c><00:00:18.369><c> of</c><00:00:18.400><c> the</c><00:00:18.550><c> features</c><00:00:18.850><c> you</c><00:00:18.880><c> asked</c><00:00:19.510><c> for</c>

00:00:19.849 --> 00:00:19.859 align:start position:0%
added some of the features you asked for
 

00:00:19.859 --> 00:00:22.529 align:start position:0%
added some of the features you asked for
let's<00:00:20.859><c> go</c><00:00:21.010><c> over</c><00:00:21.250><c> rooms</c><00:00:21.490><c> main</c><00:00:21.760><c> components</c><00:00:22.359><c> and</c>

00:00:22.529 --> 00:00:22.539 align:start position:0%
let's go over rooms main components and
 

00:00:22.539 --> 00:00:24.000 align:start position:0%
let's go over rooms main components and
see<00:00:22.750><c> what</c><00:00:22.930><c> queries</c><00:00:23.199><c> are</c><00:00:23.320><c> supported</c><00:00:23.769><c> how</c><00:00:23.949><c> to</c>

00:00:24.000 --> 00:00:24.010 align:start position:0%
see what queries are supported how to
 

00:00:24.010 --> 00:00:26.279 align:start position:0%
see what queries are supported how to
implement<00:00:24.250><c> my</c><00:00:24.490><c> gracious</c><00:00:24.970><c> and</c><00:00:25.269><c> how</c><00:00:25.900><c> to</c><00:00:25.960><c> test</c>

00:00:26.279 --> 00:00:26.289 align:start position:0%
implement my gracious and how to test
 

00:00:26.289 --> 00:00:28.820 align:start position:0%
implement my gracious and how to test
your<00:00:26.410><c> work</c><00:00:26.619><c> with</c><00:00:26.890><c> a</c><00:00:26.920><c> database</c>

00:00:28.820 --> 00:00:28.830 align:start position:0%
your work with a database
 

00:00:28.830 --> 00:00:30.990 align:start position:0%
your work with a database
let's<00:00:29.830><c> say</c><00:00:30.009><c> that</c><00:00:30.189><c> you</c><00:00:30.310><c> want</c><00:00:30.460><c> to</c><00:00:30.519><c> have</c><00:00:30.699><c> a</c><00:00:30.730><c> table</c>

00:00:30.990 --> 00:00:31.000 align:start position:0%
let's say that you want to have a table
 

00:00:31.000 --> 00:00:33.750 align:start position:0%
let's say that you want to have a table
of<00:00:31.240><c> users</c><00:00:31.570><c> and</c><00:00:32.230><c> you</c><00:00:32.500><c> want</c><00:00:32.649><c> every</c><00:00:33.280><c> row</c><00:00:33.489><c> of</c><00:00:33.550><c> that</c>

00:00:33.750 --> 00:00:33.760 align:start position:0%
of users and you want every row of that
 

00:00:33.760 --> 00:00:35.580 align:start position:0%
of users and you want every row of that
table<00:00:34.149><c> to</c><00:00:34.300><c> be</c><00:00:34.420><c> an</c><00:00:34.540><c> instance</c><00:00:34.930><c> of</c><00:00:35.079><c> the</c><00:00:35.260><c> user</c>

00:00:35.580 --> 00:00:35.590 align:start position:0%
table to be an instance of the user
 

00:00:35.590 --> 00:00:38.010 align:start position:0%
table to be an instance of the user
class<00:00:36.180><c> annotate</c><00:00:37.180><c> your</c><00:00:37.210><c> class</c><00:00:37.600><c> with</c><00:00:37.840><c> that</c>

00:00:38.010 --> 00:00:38.020 align:start position:0%
class annotate your class with that
 

00:00:38.020 --> 00:00:40.290 align:start position:0%
class annotate your class with that
entity<00:00:38.379><c> define</c><00:00:39.370><c> the</c><00:00:39.520><c> table</c><00:00:39.879><c> name</c><00:00:40.030><c> if</c><00:00:40.180><c> you</c>

00:00:40.290 --> 00:00:40.300 align:start position:0%
entity define the table name if you
 

00:00:40.300 --> 00:00:41.790 align:start position:0%
entity define the table name if you
don't<00:00:40.600><c> want</c><00:00:40.809><c> to</c><00:00:40.930><c> use</c><00:00:41.079><c> the</c><00:00:41.199><c> name</c><00:00:41.350><c> of</c><00:00:41.379><c> the</c><00:00:41.590><c> class</c>

00:00:41.790 --> 00:00:41.800 align:start position:0%
don't want to use the name of the class
 

00:00:41.800 --> 00:00:45.030 align:start position:0%
don't want to use the name of the class
a<00:00:42.070><c> stable</c><00:00:42.489><c> name</c><00:00:42.640><c> set</c><00:00:43.420><c> the</c><00:00:43.600><c> mandatory</c><00:00:44.050><c> primary</c>

00:00:45.030 --> 00:00:45.040 align:start position:0%
a stable name set the mandatory primary
 

00:00:45.040 --> 00:00:48.210 align:start position:0%
a stable name set the mandatory primary
key<00:00:45.280><c> and</c><00:00:45.489><c> the</c><00:00:46.000><c> optional</c><00:00:46.480><c> column</c><00:00:47.290><c> info</c><00:00:47.829><c> but</c>

00:00:48.210 --> 00:00:48.220 align:start position:0%
key and the optional column info but
 

00:00:48.220 --> 00:00:49.890 align:start position:0%
key and the optional column info but
only<00:00:48.489><c> if</c><00:00:48.640><c> you</c><00:00:48.760><c> want</c><00:00:48.879><c> to</c><00:00:49.000><c> change</c><00:00:49.269><c> the</c><00:00:49.480><c> name</c><00:00:49.659><c> of</c>

00:00:49.890 --> 00:00:49.900 align:start position:0%
only if you want to change the name of
 

00:00:49.900 --> 00:00:52.619 align:start position:0%
only if you want to change the name of
the<00:00:50.019><c> color</c><00:00:50.260><c> otherwise</c><00:00:51.159><c> the</c><00:00:51.850><c> field</c><00:00:52.150><c> name</c><00:00:52.360><c> is</c>

00:00:52.619 --> 00:00:52.629 align:start position:0%
the color otherwise the field name is
 

00:00:52.629 --> 00:00:55.770 align:start position:0%
the color otherwise the field name is
used<00:00:52.900><c> and</c><00:00:53.530><c> that's</c><00:00:54.250><c> it</c><00:00:54.449><c> we'll</c><00:00:55.449><c> take</c><00:00:55.570><c> care</c><00:00:55.690><c> of</c>

00:00:55.770 --> 00:00:55.780 align:start position:0%
used and that's it we'll take care of
 

00:00:55.780 --> 00:00:57.930 align:start position:0%
used and that's it we'll take care of
the<00:00:55.900><c> creation</c><00:00:56.379><c> of</c><00:00:56.470><c> the</c><00:00:56.620><c> user</c><00:00:56.829><c> table</c><00:00:57.190><c> for</c><00:00:57.820><c> you</c>

00:00:57.930 --> 00:00:57.940 align:start position:0%
the creation of the user table for you
 

00:00:57.940 --> 00:01:01.020 align:start position:0%
the creation of the user table for you
so<00:00:58.809><c> that's</c><00:00:59.260><c> how</c><00:00:59.440><c> the</c><00:00:59.500><c> entity</c><00:01:00.010><c> is</c><00:01:00.100><c> done</c><00:01:00.309><c> but</c><00:01:00.850><c> we</c>

00:01:01.020 --> 00:01:01.030 align:start position:0%
so that's how the entity is done but we
 

00:01:01.030 --> 00:01:02.880 align:start position:0%
so that's how the entity is done but we
need<00:01:01.210><c> a</c><00:01:01.239><c> way</c><00:01:01.449><c> to</c><00:01:01.479><c> access</c><00:01:02.199><c> the</c><00:01:02.350><c> data</c><00:01:02.559><c> in</c><00:01:02.710><c> the</c>

00:01:02.880 --> 00:01:02.890 align:start position:0%
need a way to access the data in the
 

00:01:02.890 --> 00:01:06.149 align:start position:0%
need a way to access the data in the
database<00:01:03.390><c> we</c><00:01:04.390><c> do</c><00:01:04.570><c> that</c><00:01:04.750><c> with</c><00:01:05.049><c> data</c><00:01:05.439><c> access</c>

00:01:06.149 --> 00:01:06.159 align:start position:0%
database we do that with data access
 

00:01:06.159 --> 00:01:09.480 align:start position:0%
database we do that with data access
objects<00:01:06.820><c> dolls</c><00:01:07.420><c> for</c><00:01:07.869><c> short</c><00:01:08.110><c> or</c><00:01:08.490><c> precisely</c>

00:01:09.480 --> 00:01:09.490 align:start position:0%
objects dolls for short or precisely
 

00:01:09.490 --> 00:01:12.270 align:start position:0%
objects dolls for short or precisely
create<00:01:10.299><c> an</c><00:01:10.420><c> interface</c><00:01:10.860><c> annotated</c><00:01:11.860><c> with</c><00:01:11.890><c> at</c>

00:01:12.270 --> 00:01:12.280 align:start position:0%
create an interface annotated with at
 

00:01:12.280 --> 00:01:15.749 align:start position:0%
create an interface annotated with at
TAO<00:01:12.820><c> in</c><00:01:13.240><c> this</c><00:01:13.840><c> interface</c><00:01:14.380><c> declare</c><00:01:15.100><c> all</c><00:01:15.340><c> the</c>

00:01:15.749 --> 00:01:15.759 align:start position:0%
TAO in this interface declare all the
 

00:01:15.759 --> 00:01:17.630 align:start position:0%
TAO in this interface declare all the
methods<00:01:16.180><c> needed</c><00:01:16.540><c> to</c><00:01:16.720><c> work</c><00:01:16.900><c> with</c><00:01:16.930><c> the</c><00:01:17.140><c> database</c>

00:01:17.630 --> 00:01:17.640 align:start position:0%
methods needed to work with the database
 

00:01:17.640 --> 00:01:19.740 align:start position:0%
methods needed to work with the database
annotating<00:01:18.640><c> them</c><00:01:18.790><c> with</c><00:01:18.970><c> the</c><00:01:19.060><c> corresponding</c>

00:01:19.740 --> 00:01:19.750 align:start position:0%
annotating them with the corresponding
 

00:01:19.750 --> 00:01:21.990 align:start position:0%
annotating them with the corresponding
SQL<00:01:20.140><c> query</c><00:01:20.439><c> room</c><00:01:21.369><c> takes</c><00:01:21.759><c> care</c><00:01:21.970><c> of</c>

00:01:21.990 --> 00:01:22.000 align:start position:0%
SQL query room takes care of
 

00:01:22.000 --> 00:01:24.929 align:start position:0%
SQL query room takes care of
implementing<00:01:22.540><c> these</c><00:01:22.720><c> methods</c><00:01:23.200><c> for</c><00:01:23.590><c> you</c><00:01:23.939><c> the</c>

00:01:24.929 --> 00:01:24.939 align:start position:0%
implementing these methods for you the
 

00:01:24.939 --> 00:01:26.940 align:start position:0%
implementing these methods for you the
supported<00:01:25.390><c> queries</c><00:01:25.750><c> are</c><00:01:26.020><c> insert</c><00:01:26.680><c> update</c>

00:01:26.940 --> 00:01:26.950 align:start position:0%
supported queries are insert update
 

00:01:26.950 --> 00:01:30.600 align:start position:0%
supported queries are insert update
delete<00:01:27.240><c> query</c><00:01:28.240><c> and</c><00:01:28.509><c> Rock</c><00:01:29.140><c> query</c><00:01:29.409><c> all</c><00:01:30.189><c> of</c><00:01:30.250><c> them</c>

00:01:30.600 --> 00:01:30.610 align:start position:0%
delete query and Rock query all of them
 

00:01:30.610 --> 00:01:33.120 align:start position:0%
delete query and Rock query all of them
except<00:01:31.210><c> row</c><00:01:31.329><c> query</c><00:01:31.630><c> are</c><00:01:31.869><c> checked</c><00:01:32.409><c> at</c><00:01:32.619><c> compile</c>

00:01:33.120 --> 00:01:33.130 align:start position:0%
except row query are checked at compile
 

00:01:33.130 --> 00:01:35.160 align:start position:0%
except row query are checked at compile
time<00:01:33.159><c> which</c><00:01:33.700><c> means</c><00:01:34.210><c> that</c><00:01:34.450><c> if</c><00:01:34.630><c> you</c><00:01:34.750><c> write</c><00:01:34.960><c> an</c>

00:01:35.160 --> 00:01:35.170 align:start position:0%
time which means that if you write an
 

00:01:35.170 --> 00:01:36.990 align:start position:0%
time which means that if you write an
invalid<00:01:35.650><c> query</c><00:01:35.920><c> you'll</c><00:01:36.400><c> find</c><00:01:36.700><c> this</c><00:01:36.820><c> out</c>

00:01:36.990 --> 00:01:37.000 align:start position:0%
invalid query you'll find this out
 

00:01:37.000 --> 00:01:40.560 align:start position:0%
invalid query you'll find this out
immediately<00:01:38.400><c> the</c><00:01:39.400><c> closet</c><00:01:39.850><c> puts</c><00:01:40.060><c> together</c><00:01:40.180><c> the</c>

00:01:40.560 --> 00:01:40.570 align:start position:0%
immediately the closet puts together the
 

00:01:40.570 --> 00:01:42.570 align:start position:0%
immediately the closet puts together the
entities<00:01:40.930><c> and</c><00:01:41.110><c> the</c><00:01:41.560><c> dolls</c><00:01:41.770><c> is</c><00:01:42.100><c> the</c><00:01:42.370><c> room</c>

00:01:42.570 --> 00:01:42.580 align:start position:0%
entities and the dolls is the room
 

00:01:42.580 --> 00:01:45.240 align:start position:0%
entities and the dolls is the room
database<00:01:43.240><c> create</c><00:01:44.229><c> an</c><00:01:44.350><c> abstract</c><00:01:44.560><c> class</c><00:01:44.920><c> that</c>

00:01:45.240 --> 00:01:45.250 align:start position:0%
database create an abstract class that
 

00:01:45.250 --> 00:01:48.149 align:start position:0%
database create an abstract class that
extends<00:01:45.820><c> the</c><00:01:46.000><c> room</c><00:01:46.300><c> database</c><00:01:47.159><c> annotated</c>

00:01:48.149 --> 00:01:48.159 align:start position:0%
extends the room database annotated
 

00:01:48.159 --> 00:01:50.010 align:start position:0%
extends the room database annotated
declare<00:01:48.940><c> the</c><00:01:49.090><c> entities</c><00:01:49.540><c> and</c><00:01:49.750><c> the</c>

00:01:50.010 --> 00:01:50.020 align:start position:0%
declare the entities and the
 

00:01:50.020 --> 00:01:52.740 align:start position:0%
declare the entities and the
corresponding<00:01:50.620><c> dolls</c><00:01:51.240><c> let's</c><00:01:52.240><c> take</c><00:01:52.420><c> a</c><00:01:52.450><c> closer</c>

00:01:52.740 --> 00:01:52.750 align:start position:0%
corresponding dolls let's take a closer
 

00:01:52.750 --> 00:01:55.950 align:start position:0%
corresponding dolls let's take a closer
look<00:01:52.900><c> at</c><00:01:53.200><c> the</c><00:01:53.290><c> queries</c><00:01:54.330><c> the</c><00:01:55.330><c> return</c><00:01:55.720><c> type</c><00:01:55.930><c> of</c>

00:01:55.950 --> 00:01:55.960 align:start position:0%
look at the queries the return type of
 

00:01:55.960 --> 00:01:58.320 align:start position:0%
look at the queries the return type of
query<00:01:56.440><c> and</c><00:01:56.710><c> raw</c><00:01:57.040><c> query</c><00:01:57.310><c> can</c><00:01:57.580><c> be</c><00:01:57.700><c> the</c><00:01:57.940><c> entire</c>

00:01:58.320 --> 00:01:58.330 align:start position:0%
query and raw query can be the entire
 

00:01:58.330 --> 00:02:01.170 align:start position:0%
query and raw query can be the entire
entity<00:01:58.780><c> but</c><00:01:59.380><c> also</c><00:01:59.530><c> a</c><00:01:59.680><c> subset</c><00:02:00.400><c> of</c><00:02:00.549><c> its</c><00:02:00.790><c> fields</c>

00:02:01.170 --> 00:02:01.180 align:start position:0%
entity but also a subset of its fields
 

00:02:01.180 --> 00:02:03.510 align:start position:0%
entity but also a subset of its fields
if<00:02:01.960><c> you're</c><00:02:02.350><c> working</c><00:02:02.650><c> with</c><00:02:02.799><c> guava</c><00:02:03.010><c> or</c><00:02:03.340><c> with</c>

00:02:03.510 --> 00:02:03.520 align:start position:0%
if you're working with guava or with
 

00:02:03.520 --> 00:02:05.940 align:start position:0%
if you're working with guava or with
optional<00:02:04.120><c> from</c><00:02:04.390><c> the</c><00:02:04.479><c> java.util</c><00:02:05.080><c> package</c><00:02:05.110><c> you</c>

00:02:05.940 --> 00:02:05.950 align:start position:0%
optional from the java.util package you
 

00:02:05.950 --> 00:02:08.729 align:start position:0%
optional from the java.util package you
can<00:02:06.130><c> also</c><00:02:06.310><c> use</c><00:02:06.640><c> them</c><00:02:06.880><c> as</c><00:02:07.090><c> return</c><00:02:07.570><c> types</c><00:02:07.840><c> so</c>

00:02:08.729 --> 00:02:08.739 align:start position:0%
can also use them as return types so
 

00:02:08.739 --> 00:02:10.350 align:start position:0%
can also use them as return types so
this<00:02:09.129><c> means</c><00:02:09.340><c> that</c><00:02:09.459><c> if</c><00:02:09.549><c> there</c><00:02:09.729><c> are</c><00:02:09.759><c> no</c><00:02:10.030><c> values</c>

00:02:10.350 --> 00:02:10.360 align:start position:0%
this means that if there are no values
 

00:02:10.360 --> 00:02:12.780 align:start position:0%
this means that if there are no values
to<00:02:10.659><c> satisfy</c><00:02:11.110><c> your</c><00:02:11.290><c> query</c><00:02:11.590><c> then</c><00:02:12.190><c> your</c><00:02:12.489><c> query</c>

00:02:12.780 --> 00:02:12.790 align:start position:0%
to satisfy your query then your query
 

00:02:12.790 --> 00:02:14.789 align:start position:0%
to satisfy your query then your query
will<00:02:13.090><c> return</c><00:02:13.120><c> optional</c><00:02:14.080><c> dot</c><00:02:14.230><c> empty</c><00:02:14.650><c> or</c>

00:02:14.789 --> 00:02:14.799 align:start position:0%
will return optional dot empty or
 

00:02:14.799 --> 00:02:17.309 align:start position:0%
will return optional dot empty or
optional<00:02:15.610><c> dot</c><00:02:15.730><c> absent</c><00:02:16.239><c> depending</c><00:02:17.019><c> on</c><00:02:17.140><c> which</c>

00:02:17.309 --> 00:02:17.319 align:start position:0%
optional dot absent depending on which
 

00:02:17.319 --> 00:02:19.860 align:start position:0%
optional dot absent depending on which
optional<00:02:17.920><c> you're</c><00:02:18.099><c> working</c><00:02:18.430><c> with</c><00:02:18.659><c> all</c><00:02:19.659><c> of</c>

00:02:19.860 --> 00:02:19.870 align:start position:0%
optional you're working with all of
 

00:02:19.870 --> 00:02:22.199 align:start position:0%
optional you're working with all of
these<00:02:19.989><c> queries</c><00:02:20.349><c> are</c><00:02:20.680><c> synchronous</c><00:02:21.459><c> meaning</c>

00:02:22.199 --> 00:02:22.209 align:start position:0%
these queries are synchronous meaning
 

00:02:22.209 --> 00:02:24.180 align:start position:0%
these queries are synchronous meaning
that<00:02:22.390><c> they</c><00:02:22.599><c> will</c><00:02:22.720><c> be</c><00:02:22.930><c> run</c><00:02:23.110><c> on</c><00:02:23.290><c> the</c><00:02:23.500><c> same</c><00:02:23.830><c> thread</c>

00:02:24.180 --> 00:02:24.190 align:start position:0%
that they will be run on the same thread
 

00:02:24.190 --> 00:02:27.030 align:start position:0%
that they will be run on the same thread
you<00:02:24.549><c> are</c><00:02:24.580><c> triggering</c><00:02:25.209><c> them</c><00:02:25.390><c> from</c><00:02:26.040><c> room</c>

00:02:27.030 --> 00:02:27.040 align:start position:0%
you are triggering them from room
 

00:02:27.040 --> 00:02:29.220 align:start position:0%
you are triggering them from room
ensures<00:02:27.489><c> you</c><00:02:27.670><c> follow</c><00:02:27.909><c> best</c><00:02:28.209><c> practices</c><00:02:28.810><c> by</c>

00:02:29.220 --> 00:02:29.230 align:start position:0%
ensures you follow best practices by
 

00:02:29.230 --> 00:02:31.199 align:start position:0%
ensures you follow best practices by
throwing<00:02:29.560><c> an</c><00:02:29.769><c> error</c><00:02:29.950><c> if</c><00:02:30.220><c> you</c><00:02:30.370><c> run</c><00:02:30.610><c> queries</c><00:02:31.030><c> on</c>

00:02:31.199 --> 00:02:31.209 align:start position:0%
throwing an error if you run queries on
 

00:02:31.209 --> 00:02:33.600 align:start position:0%
throwing an error if you run queries on
the<00:02:31.360><c> main</c><00:02:31.510><c> thread</c><00:02:31.720><c> so</c><00:02:32.530><c> use</c><00:02:33.129><c> your</c><00:02:33.310><c> preferred</c>

00:02:33.600 --> 00:02:33.610 align:start position:0%
the main thread so use your preferred
 

00:02:33.610 --> 00:02:35.250 align:start position:0%
the main thread so use your preferred
method<00:02:34.000><c> of</c><00:02:34.090><c> handling</c><00:02:34.299><c> threads</c><00:02:34.840><c> in</c><00:02:34.959><c> Android</c>

00:02:35.250 --> 00:02:35.260 align:start position:0%
method of handling threads in Android
 

00:02:35.260 --> 00:02:37.730 align:start position:0%
method of handling threads in Android
and<00:02:35.409><c> make</c><00:02:35.890><c> sure</c><00:02:36.129><c> you're</c><00:02:36.310><c> off</c><00:02:36.489><c> the</c><00:02:36.700><c> main</c><00:02:36.849><c> thread</c>

00:02:37.730 --> 00:02:37.740 align:start position:0%
and make sure you're off the main thread
 

00:02:37.740 --> 00:02:40.559 align:start position:0%
and make sure you're off the main thread
room<00:02:38.740><c> also</c><00:02:38.980><c> supports</c><00:02:39.550><c> asynchronous</c><00:02:40.300><c> query</c>

00:02:40.559 --> 00:02:40.569 align:start position:0%
room also supports asynchronous query
 

00:02:40.569 --> 00:02:42.250 align:start position:0%
room also supports asynchronous query
when<00:02:40.840><c> working</c><00:02:41.050><c> with</c><00:02:41.319><c> live</c><00:02:41.530><c> data</c><00:02:41.709><c> or</c>

00:02:42.250 --> 00:02:42.260 align:start position:0%
when working with live data or
 

00:02:42.260 --> 00:02:45.250 align:start position:0%
when working with live data or
chav<00:02:43.040><c> what's</c><00:02:43.760><c> more</c><00:02:44.030><c> the</c><00:02:44.360><c> cars</c><00:02:44.659><c> that</c><00:02:44.870><c> return</c>

00:02:45.250 --> 00:02:45.260 align:start position:0%
chav what's more the cars that return
 

00:02:45.260 --> 00:02:48.280 align:start position:0%
chav what's more the cars that return
life<00:02:45.680><c> data</c><00:02:45.920><c> or</c><00:02:46.250><c> flowable</c><00:02:46.909><c> are</c><00:02:47.299><c> observable</c>

00:02:48.280 --> 00:02:48.290 align:start position:0%
life data or flowable are observable
 

00:02:48.290 --> 00:02:50.440 align:start position:0%
life data or flowable are observable
queries<00:02:48.799><c> meaning</c><00:02:49.640><c> that</c><00:02:49.790><c> you</c><00:02:50.090><c> will</c><00:02:50.299><c> get</c>

00:02:50.440 --> 00:02:50.450 align:start position:0%
queries meaning that you will get
 

00:02:50.450 --> 00:02:52.330 align:start position:0%
queries meaning that you will get
notified<00:02:50.900><c> every</c><00:02:51.110><c> time</c><00:02:51.769><c> the</c><00:02:51.890><c> data</c><00:02:52.069><c> in</c><00:02:52.250><c> the</c>

00:02:52.330 --> 00:02:52.340 align:start position:0%
notified every time the data in the
 

00:02:52.340 --> 00:02:55.870 align:start position:0%
notified every time the data in the
table<00:02:52.489><c> or</c><00:02:52.819><c> tables</c><00:02:53.450><c> updates</c>

00:02:55.870 --> 00:02:55.880 align:start position:0%
table or tables updates
 

00:02:55.880 --> 00:02:58.400 align:start position:0%
table or tables updates
whenever<00:02:56.880><c> you</c><00:02:57.030><c> alter</c><00:02:57.390><c> your</c><00:02:57.540><c> database</c><00:02:58.050><c> schema</c>

00:02:58.400 --> 00:02:58.410 align:start position:0%
whenever you alter your database schema
 

00:02:58.410 --> 00:03:00.260 align:start position:0%
whenever you alter your database schema
either<00:02:58.620><c> because</c><00:02:59.010><c> you've</c><00:02:59.160><c> added</c><00:02:59.400><c> or</c><00:02:59.670><c> renamed</c><00:03:00.060><c> a</c>

00:03:00.260 --> 00:03:00.270 align:start position:0%
either because you've added or renamed a
 

00:03:00.270 --> 00:03:02.420 align:start position:0%
either because you've added or renamed a
column<00:03:00.630><c> or</c><00:03:00.780><c> table</c><00:03:01.320><c> you</c><00:03:01.830><c> need</c><00:03:02.010><c> to</c><00:03:02.100><c> tell</c><00:03:02.310><c> the</c>

00:03:02.420 --> 00:03:02.430 align:start position:0%
column or table you need to tell the
 

00:03:02.430 --> 00:03:05.450 align:start position:0%
column or table you need to tell the
database<00:03:02.580><c> how</c><00:03:03.420><c> to</c><00:03:03.750><c> handle</c><00:03:04.020><c> that</c><00:03:04.200><c> change</c><00:03:04.530><c> in</c>

00:03:05.450 --> 00:03:05.460 align:start position:0%
database how to handle that change in
 

00:03:05.460 --> 00:03:07.310 align:start position:0%
database how to handle that change in
order<00:03:05.700><c> to</c><00:03:05.850><c> do</c><00:03:05.970><c> that</c><00:03:06.120><c> in</c><00:03:06.360><c> your</c><00:03:06.540><c> database</c><00:03:06.900><c> class</c>

00:03:07.310 --> 00:03:07.320 align:start position:0%
order to do that in your database class
 

00:03:07.320 --> 00:03:09.890 align:start position:0%
order to do that in your database class
you'll<00:03:07.620><c> need</c><00:03:07.830><c> to</c><00:03:07.980><c> first</c><00:03:08.760><c> update</c><00:03:09.690><c> your</c>

00:03:09.890 --> 00:03:09.900 align:start position:0%
you'll need to first update your
 

00:03:09.900 --> 00:03:12.920 align:start position:0%
you'll need to first update your
database<00:03:10.020><c> version</c><00:03:10.760><c> second</c><00:03:11.810><c> implement</c><00:03:12.810><c> a</c>

00:03:12.920 --> 00:03:12.930 align:start position:0%
database version second implement a
 

00:03:12.930 --> 00:03:15.470 align:start position:0%
database version second implement a
migration<00:03:13.440><c> class</c><00:03:13.920><c> which</c><00:03:14.520><c> defines</c><00:03:15.030><c> how</c><00:03:15.420><c> to</c>

00:03:15.470 --> 00:03:15.480 align:start position:0%
migration class which defines how to
 

00:03:15.480 --> 00:03:17.510 align:start position:0%
migration class which defines how to
handle<00:03:15.960><c> the</c><00:03:16.050><c> migration</c><00:03:16.500><c> from</c><00:03:16.650><c> the</c><00:03:16.740><c> old</c><00:03:17.070><c> schema</c>

00:03:17.510 --> 00:03:17.520 align:start position:0%
handle the migration from the old schema
 

00:03:17.520 --> 00:03:20.270 align:start position:0%
handle the migration from the old schema
to<00:03:18.000><c> the</c><00:03:18.120><c> new</c><00:03:18.270><c> one</c><00:03:18.450><c> and</c><00:03:18.810><c> then</c><00:03:19.440><c> thirdly</c><00:03:19.680><c> add</c><00:03:20.010><c> that</c>

00:03:20.270 --> 00:03:20.280 align:start position:0%
to the new one and then thirdly add that
 

00:03:20.280 --> 00:03:22.220 align:start position:0%
to the new one and then thirdly add that
migration<00:03:20.670><c> class</c><00:03:21.000><c> as</c><00:03:21.210><c> a</c><00:03:21.270><c> parameter</c><00:03:21.600><c> to</c><00:03:22.140><c> the</c>

00:03:22.220 --> 00:03:22.230 align:start position:0%
migration class as a parameter to the
 

00:03:22.230 --> 00:03:24.710 align:start position:0%
migration class as a parameter to the
database<00:03:22.710><c> filter</c><00:03:23.160><c> after</c><00:03:24.000><c> triggering</c><00:03:24.600><c> the</c>

00:03:24.710 --> 00:03:24.720 align:start position:0%
database filter after triggering the
 

00:03:24.720 --> 00:03:27.380 align:start position:0%
database filter after triggering the
migrations<00:03:25.430><c> validates</c><00:03:26.430><c> the</c><00:03:26.550><c> schema</c><00:03:26.880><c> for</c><00:03:27.030><c> you</c>

00:03:27.380 --> 00:03:27.390 align:start position:0%
migrations validates the schema for you
 

00:03:27.390 --> 00:03:29.330 align:start position:0%
migrations validates the schema for you
to<00:03:27.870><c> ensure</c><00:03:28.140><c> that</c><00:03:28.260><c> the</c><00:03:28.380><c> migration</c><00:03:28.710><c> was</c><00:03:28.950><c> done</c>

00:03:29.330 --> 00:03:29.340 align:start position:0%
to ensure that the migration was done
 

00:03:29.340 --> 00:03:32.060 align:start position:0%
to ensure that the migration was done
correctly<00:03:29.790><c> if</c><00:03:30.120><c> you</c><00:03:30.810><c> don't</c><00:03:31.470><c> want</c><00:03:31.740><c> to</c><00:03:31.830><c> handle</c>

00:03:32.060 --> 00:03:32.070 align:start position:0%
correctly if you don't want to handle
 

00:03:32.070 --> 00:03:33.680 align:start position:0%
correctly if you don't want to handle
migrations<00:03:32.670><c> and</c><00:03:32.850><c> you</c><00:03:33.030><c> don't</c><00:03:33.360><c> need</c><00:03:33.570><c> to</c>

00:03:33.680 --> 00:03:33.690 align:start position:0%
migrations and you don't need to
 

00:03:33.690 --> 00:03:36.230 align:start position:0%
migrations and you don't need to
preserve<00:03:33.870><c> your</c><00:03:34.230><c> database</c><00:03:34.709><c> data</c><00:03:34.980><c> call</c><00:03:35.700><c> fall</c>

00:03:36.230 --> 00:03:36.240 align:start position:0%
preserve your database data call fall
 

00:03:36.240 --> 00:03:38.210 align:start position:0%
preserve your database data call fall
back<00:03:36.480><c> to</c><00:03:36.660><c> destructive</c><00:03:37.170><c> migrations</c><00:03:37.800><c> when</c>

00:03:38.210 --> 00:03:38.220 align:start position:0%
back to destructive migrations when
 

00:03:38.220 --> 00:03:40.880 align:start position:0%
back to destructive migrations when
building<00:03:38.580><c> the</c><00:03:38.670><c> database</c><00:03:39.290><c> to</c><00:03:40.290><c> destructively</c>

00:03:40.880 --> 00:03:40.890 align:start position:0%
building the database to destructively
 

00:03:40.890 --> 00:03:43.280 align:start position:0%
building the database to destructively
recreate<00:03:41.640><c> the</c><00:03:41.760><c> database</c><00:03:42.240><c> only</c><00:03:42.990><c> from</c><00:03:43.200><c> a</c>

00:03:43.280 --> 00:03:43.290 align:start position:0%
recreate the database only from a
 

00:03:43.290 --> 00:03:45.949 align:start position:0%
recreate the database only from a
specific<00:03:43.770><c> version</c><00:03:43.970><c> on-call</c><00:03:44.970><c> fall</c><00:03:45.540><c> back</c><00:03:45.750><c> to</c>

00:03:45.949 --> 00:03:45.959 align:start position:0%
specific version on-call fall back to
 

00:03:45.959 --> 00:03:48.350 align:start position:0%
specific version on-call fall back to
destructive<00:03:46.470><c> migration</c><00:03:47.070><c> from</c><00:03:47.400><c> then</c><00:03:48.030><c> provide</c>

00:03:48.350 --> 00:03:48.360 align:start position:0%
destructive migration from then provide
 

00:03:48.360 --> 00:03:49.670 align:start position:0%
destructive migration from then provide
the<00:03:48.480><c> number</c><00:03:48.750><c> for</c><00:03:48.959><c> that</c><00:03:49.110><c> version</c>

00:03:49.670 --> 00:03:49.680 align:start position:0%
the number for that version
 

00:03:49.680 --> 00:03:52.160 align:start position:0%
the number for that version
so<00:03:49.980><c> we</c><00:03:50.220><c> have</c><00:03:50.370><c> our</c><00:03:50.400><c> entities</c><00:03:51.000><c> downs</c><00:03:51.420><c> database</c>

00:03:52.160 --> 00:03:52.170 align:start position:0%
so we have our entities downs database
 

00:03:52.170 --> 00:03:54.500 align:start position:0%
so we have our entities downs database
and<00:03:52.380><c> migrations</c><00:03:52.980><c> how</c><00:03:53.730><c> do</c><00:03:53.790><c> we</c><00:03:53.940><c> test</c><00:03:54.120><c> them</c><00:03:54.330><c> to</c>

00:03:54.500 --> 00:03:54.510 align:start position:0%
and migrations how do we test them to
 

00:03:54.510 --> 00:03:56.420 align:start position:0%
and migrations how do we test them to
test<00:03:55.140><c> the</c><00:03:55.260><c> dolls</c><00:03:55.500><c> you'll</c><00:03:55.890><c> need</c><00:03:56.070><c> to</c><00:03:56.190><c> implement</c>

00:03:56.420 --> 00:03:56.430 align:start position:0%
test the dolls you'll need to implement
 

00:03:56.430 --> 00:03:58.670 align:start position:0%
test the dolls you'll need to implement
an<00:03:56.730><c> android</c><00:03:57.209><c> a</c><00:03:57.360><c> unit</c><00:03:57.810><c> test</c><00:03:57.930><c> that</c><00:03:58.080><c> creates</c><00:03:58.530><c> an</c>

00:03:58.670 --> 00:03:58.680 align:start position:0%
an android a unit test that creates an
 

00:03:58.680 --> 00:04:00.949 align:start position:0%
an android a unit test that creates an
in-memory<00:03:59.190><c> database</c><00:03:59.910><c> the</c><00:04:00.780><c> in-memory</c>

00:04:00.949 --> 00:04:00.959 align:start position:0%
in-memory database the in-memory
 

00:04:00.959 --> 00:04:03.620 align:start position:0%
in-memory database the in-memory
database<00:04:01.739><c> holds</c><00:04:02.040><c> the</c><00:04:02.310><c> data</c><00:04:02.459><c> only</c><00:04:03.180><c> for</c><00:04:03.390><c> as</c><00:04:03.480><c> long</c>

00:04:03.620 --> 00:04:03.630 align:start position:0%
database holds the data only for as long
 

00:04:03.630 --> 00:04:05.840 align:start position:0%
database holds the data only for as long
as<00:04:03.690><c> the</c><00:04:03.930><c> process</c><00:04:04.290><c> is</c><00:04:04.320><c> alive</c><00:04:04.709><c> meaning</c><00:04:05.670><c> that</c>

00:04:05.840 --> 00:04:05.850 align:start position:0%
as the process is alive meaning that
 

00:04:05.850 --> 00:04:07.670 align:start position:0%
as the process is alive meaning that
after<00:04:06.090><c> every</c><00:04:06.540><c> test</c><00:04:06.780><c> the</c><00:04:07.140><c> database</c><00:04:07.560><c> is</c>

00:04:07.670 --> 00:04:07.680 align:start position:0%
after every test the database is
 

00:04:07.680 --> 00:04:10.910 align:start position:0%
after every test the database is
destroyed<00:04:08.570><c> to</c><00:04:09.570><c> test</c><00:04:09.780><c> asynchronous</c><00:04:10.470><c> queries</c>

00:04:10.910 --> 00:04:10.920 align:start position:0%
destroyed to test asynchronous queries
 

00:04:10.920 --> 00:04:13.490 align:start position:0%
destroyed to test asynchronous queries
use<00:04:11.250><c> an</c><00:04:11.430><c> instant</c><00:04:11.970><c> task</c><00:04:12.209><c> executor</c><00:04:12.840><c> role</c><00:04:13.050><c> to</c>

00:04:13.490 --> 00:04:13.500 align:start position:0%
use an instant task executor role to
 

00:04:13.500 --> 00:04:17.300 align:start position:0%
use an instant task executor role to
execute<00:04:13.980><c> each</c><00:04:14.190><c> task</c><00:04:14.519><c> synchronously</c><00:04:16.160><c> in</c><00:04:17.160><c> our</c>

00:04:17.300 --> 00:04:17.310 align:start position:0%
execute each task synchronously in our
 

00:04:17.310 --> 00:04:18.979 align:start position:0%
execute each task synchronously in our
apps<00:04:17.549><c> implementation</c><00:04:18.359><c> you'll</c><00:04:18.690><c> end</c><00:04:18.870><c> up</c>

00:04:18.979 --> 00:04:18.989 align:start position:0%
apps implementation you'll end up
 

00:04:18.989 --> 00:04:21.170 align:start position:0%
apps implementation you'll end up
referencing<00:04:19.590><c> the</c><00:04:19.739><c> dowels</c><00:04:20.130><c> in</c><00:04:20.280><c> other</c><00:04:20.519><c> classes</c>

00:04:21.170 --> 00:04:21.180 align:start position:0%
referencing the dowels in other classes
 

00:04:21.180 --> 00:04:24.200 align:start position:0%
referencing the dowels in other classes
to<00:04:21.900><c> unit</c><00:04:22.169><c> test</c><00:04:22.350><c> those</c><00:04:22.650><c> classes</c><00:04:23.220><c> just</c><00:04:23.669><c> smoke</c>

00:04:24.200 --> 00:04:24.210 align:start position:0%
to unit test those classes just smoke
 

00:04:24.210 --> 00:04:26.440 align:start position:0%
to unit test those classes just smoke
the<00:04:24.360><c> down</c><00:04:24.540><c> or</c><00:04:24.870><c> implement</c><00:04:25.470><c> the</c><00:04:25.560><c> fake</c><00:04:25.770><c> version</c>

00:04:26.440 --> 00:04:26.450 align:start position:0%
the down or implement the fake version
 

00:04:26.450 --> 00:04:29.450 align:start position:0%
the down or implement the fake version
here's<00:04:27.450><c> another</c><00:04:27.690><c> tip</c><00:04:27.960><c> to</c><00:04:28.620><c> implement</c><00:04:29.040><c> espresso</c>

00:04:29.450 --> 00:04:29.460 align:start position:0%
here's another tip to implement espresso
 

00:04:29.460 --> 00:04:31.700 align:start position:0%
here's another tip to implement espresso
tests<00:04:29.940><c> covering</c><00:04:30.690><c> code</c><00:04:31.080><c> that</c><00:04:31.440><c> uses</c>

00:04:31.700 --> 00:04:31.710 align:start position:0%
tests covering code that uses
 

00:04:31.710 --> 00:04:34.250 align:start position:0%
tests covering code that uses
asynchronous<00:04:32.460><c> queries</c><00:04:32.790><c> extend</c><00:04:33.510><c> the</c><00:04:33.660><c> counting</c>

00:04:34.250 --> 00:04:34.260 align:start position:0%
asynchronous queries extend the counting
 

00:04:34.260 --> 00:04:37.010 align:start position:0%
asynchronous queries extend the counting
task<00:04:34.560><c> executor</c><00:04:35.280><c> role</c><00:04:35.520><c> to</c><00:04:36.030><c> count</c><00:04:36.270><c> the</c><00:04:36.360><c> tasks</c><00:04:36.840><c> as</c>

00:04:37.010 --> 00:04:37.020 align:start position:0%
task executor role to count the tasks as
 

00:04:37.020 --> 00:04:40.219 align:start position:0%
task executor role to count the tasks as
they<00:04:37.050><c> start</c><00:04:37.440><c> and</c><00:04:37.740><c> finish</c><00:04:38.780><c> finally</c><00:04:39.780><c> don't</c>

00:04:40.219 --> 00:04:40.229 align:start position:0%
they start and finish finally don't
 

00:04:40.229 --> 00:04:42.980 align:start position:0%
they start and finish finally don't
forget<00:04:40.350><c> to</c><00:04:40.620><c> test</c><00:04:40.890><c> the</c><00:04:40.979><c> migrations</c><00:04:41.930><c> export</c><00:04:42.930><c> the</c>

00:04:42.980 --> 00:04:42.990 align:start position:0%
forget to test the migrations export the
 

00:04:42.990 --> 00:04:44.990 align:start position:0%
forget to test the migrations export the
database<00:04:43.110><c> schema</c><00:04:43.560><c> first</c><00:04:44.070><c> and</c><00:04:44.370><c> then</c><00:04:44.640><c> use</c>

00:04:44.990 --> 00:04:45.000 align:start position:0%
database schema first and then use
 

00:04:45.000 --> 00:04:47.570 align:start position:0%
database schema first and then use
another<00:04:45.210><c> hand</c><00:04:45.570><c> apestrong</c><00:04:46.320><c> the</c><00:04:46.800><c> migration</c>

00:04:47.570 --> 00:04:47.580 align:start position:0%
another hand apestrong the migration
 

00:04:47.580 --> 00:04:50.000 align:start position:0%
another hand apestrong the migration
test<00:04:47.880><c> helper</c><00:04:48.390><c> this</c><00:04:49.140><c> class</c><00:04:49.410><c> allows</c><00:04:49.800><c> you</c><00:04:49.890><c> to</c>

00:04:50.000 --> 00:04:50.010 align:start position:0%
test helper this class allows you to
 

00:04:50.010 --> 00:04:51.350 align:start position:0%
test helper this class allows you to
create<00:04:50.220><c> the</c><00:04:50.370><c> database</c><00:04:50.669><c> in</c><00:04:50.910><c> an</c><00:04:51.000><c> older</c><00:04:51.330><c> version</c>

00:04:51.350 --> 00:04:51.360 align:start position:0%
create the database in an older version
 

00:04:51.360 --> 00:04:54.680 align:start position:0%
create the database in an older version
and<00:04:51.810><c> run</c><00:04:52.380><c> and</c><00:04:52.650><c> validate</c><00:04:53.130><c> each</c><00:04:53.340><c> migration</c><00:04:54.030><c> all</c>

00:04:54.680 --> 00:04:54.690 align:start position:0%
and run and validate each migration all
 

00:04:54.690 --> 00:04:56.270 align:start position:0%
and run and validate each migration all
you<00:04:54.900><c> need</c><00:04:55.050><c> to</c><00:04:55.169><c> do</c><00:04:55.320><c> is</c><00:04:55.650><c> check</c><00:04:55.890><c> that</c><00:04:56.070><c> the</c><00:04:56.160><c> data</c>

00:04:56.270 --> 00:04:56.280 align:start position:0%
you need to do is check that the data
 

00:04:56.280 --> 00:04:58.219 align:start position:0%
you need to do is check that the data
you<00:04:56.580><c> inserted</c><00:04:57.150><c> in</c><00:04:57.330><c> the</c><00:04:57.510><c> other</c><00:04:57.660><c> version</c><00:04:58.140><c> is</c>

00:04:58.219 --> 00:04:58.229 align:start position:0%
you inserted in the other version is
 

00:04:58.229 --> 00:05:02.180 align:start position:0%
you inserted in the other version is
also<00:04:58.620><c> present</c><00:04:59.010><c> after</c><00:04:59.700><c> the</c><00:04:59.970><c> migration</c><00:05:00.860><c> okay</c><00:05:01.890><c> so</c>

00:05:02.180 --> 00:05:02.190 align:start position:0%
also present after the migration okay so
 

00:05:02.190 --> 00:05:04.310 align:start position:0%
also present after the migration okay so
let's<00:05:02.370><c> summarize</c><00:05:02.490><c> this</c><00:05:02.940><c> let's</c><00:05:03.810><c> swallow</c><00:05:03.990><c> plate</c>

00:05:04.310 --> 00:05:04.320 align:start position:0%
let's summarize this let's swallow plate
 

00:05:04.320 --> 00:05:07.190 align:start position:0%
let's summarize this let's swallow plate
code<00:05:04.620><c> compile</c><00:05:05.520><c> time</c><00:05:05.760><c> check</c><00:05:06.000><c> queries</c><00:05:06.479><c> ease</c><00:05:06.960><c> of</c>

00:05:07.190 --> 00:05:07.200 align:start position:0%
code compile time check queries ease of
 

00:05:07.200 --> 00:05:09.020 align:start position:0%
code compile time check queries ease of
implementing<00:05:07.770><c> migrations</c>

00:05:09.020 --> 00:05:09.030 align:start position:0%
implementing migrations
 

00:05:09.030 --> 00:05:11.210 align:start position:0%
implementing migrations
idea<00:05:09.270><c> of</c><00:05:09.420><c> testability</c><00:05:10.170><c> and</c><00:05:10.320><c> checks</c><00:05:11.010><c> for</c>

00:05:11.210 --> 00:05:11.220 align:start position:0%
idea of testability and checks for
 

00:05:11.220 --> 00:05:12.800 align:start position:0%
idea of testability and checks for
keeping<00:05:11.490><c> the</c><00:05:11.580><c> database</c><00:05:12.000><c> worked</c><00:05:12.240><c> away</c><00:05:12.570><c> from</c>

00:05:12.800 --> 00:05:12.810 align:start position:0%
keeping the database worked away from
 

00:05:12.810 --> 00:05:15.230 align:start position:0%
keeping the database worked away from
the<00:05:12.930><c> main</c><00:05:13.080><c> threat</c><00:05:13.350><c> all</c><00:05:14.280><c> of</c><00:05:14.730><c> these</c><00:05:14.910><c> qualities</c>

00:05:15.230 --> 00:05:15.240 align:start position:0%
the main threat all of these qualities
 

00:05:15.240 --> 00:05:17.780 align:start position:0%
the main threat all of these qualities
of<00:05:15.390><c> room</c><00:05:15.780><c> make</c><00:05:16.170><c> it</c><00:05:16.320><c> easier</c><00:05:16.710><c> and</c><00:05:16.860><c> more</c><00:05:16.980><c> pleasant</c>

00:05:17.780 --> 00:05:17.790 align:start position:0%
of room make it easier and more pleasant
 

00:05:17.790 --> 00:05:19.820 align:start position:0%
of room make it easier and more pleasant
to<00:05:18.030><c> work</c><00:05:18.240><c> with</c><00:05:18.450><c> databases</c><00:05:18.710><c> helping</c><00:05:19.710><c> you</c>

00:05:19.820 --> 00:05:19.830 align:start position:0%
to work with databases helping you
 

00:05:19.830 --> 00:05:20.980 align:start position:0%
to work with databases helping you
deliver<00:05:20.190><c> better</c><00:05:20.520><c> apps</c>

00:05:20.980 --> 00:05:20.990 align:start position:0%
deliver better apps
 

00:05:20.990 --> 00:05:25.170 align:start position:0%
deliver better apps
[Applause]

00:05:25.170 --> 00:05:25.180 align:start position:0%
 
 

00:05:25.180 --> 00:05:27.240 align:start position:0%
 
you

