WEBVTT
Kind: captions
Language: en

00:00:06.033 --> 00:00:07.467
Scudder: Hi,
I'm Jeff Scudder,

00:00:07.467 --> 00:00:08.968
and I'll be talking
with you today

00:00:08.968 --> 00:00:10.868
about getting started
with the Python Library

00:00:10.868 --> 00:00:12.934
for Google Data APIs.

00:00:12.934 --> 00:00:15.033
The first thing
we're gonna need to do

00:00:15.033 --> 00:00:18.367
is make sure that Python
is available on your system.

00:00:18.367 --> 00:00:20.634
Let's get started.

00:00:20.634 --> 00:00:22.534
Now, in many operating systems,

00:00:22.534 --> 00:00:24.934
Python is already installed
by default.

00:00:24.934 --> 00:00:27.267
To see if Python is available,

00:00:27.267 --> 00:00:29.767
bring up a terminal
or command prompt

00:00:29.767 --> 00:00:35.000
and type python-V to see
which version you're running.

00:00:35.000 --> 00:00:37.033
if you're on Mac or Linux,

00:00:37.033 --> 00:00:40.033
this is probably
already available.

00:00:40.033 --> 00:00:41.601
But on a Windows system,

00:00:41.601 --> 00:00:45.334
you'll need to install
Python yourself.

00:00:45.334 --> 00:00:46.767
To install Python,

00:00:46.767 --> 00:00:49.534
begin by downloading
from python.org.

00:00:49.534 --> 00:00:51.901
You can find
the correct installer

00:00:51.901 --> 00:00:53.467
for your version.

00:00:53.467 --> 00:00:56.133
Once this is downloaded,

00:00:56.133 --> 00:00:59.601
you can install as you would
any other Windows program.

00:00:59.601 --> 00:01:04.601
I recommend downloading
Python 2.5, the latest version.

00:01:04.601 --> 00:01:08.167
Anything that's version 2.2
or later

00:01:08.167 --> 00:01:10.300
will work
with the Python Library,

00:01:10.300 --> 00:01:13.000
but 2.5 is easier to set up.

00:01:13.000 --> 00:01:15.100
Once you've installed Python,

00:01:15.100 --> 00:01:19.300
we need to make sure that it
will run in the command line.

00:01:19.300 --> 00:01:23.968
To do this, we need to edit
the Windows execution path.

00:01:26.501 --> 00:01:30.334
You can edit the execution path
under the System settings,

00:01:30.334 --> 00:01:34.601
so we'll go to Control Panel,
System.

00:01:34.601 --> 00:01:37.300
Go to Advanced.

00:01:37.300 --> 00:01:39.400
Click on Environment Variables

00:01:39.400 --> 00:01:44.467
and find Path
under System variables.

00:01:44.467 --> 00:01:47.801
Click the edit button
to modify it.

00:01:47.801 --> 00:01:49.567
At the end of the path,

00:01:49.567 --> 00:01:51.100
we need to add the location

00:01:51.100 --> 00:01:53.133
where we've just installed
Python.

00:01:57.734 --> 00:02:01.534
Once you're done,
click OK...

00:02:01.534 --> 00:02:04.000
and OK again...

00:02:04.000 --> 00:02:06.701
and OK one last time.

00:02:06.701 --> 00:02:09.367
Now you should be able
to run Python

00:02:09.367 --> 00:02:12.567
to see which version
you have on the command line.

00:02:14.501 --> 00:02:17.868
Now that we can run Python
on the command line,

00:02:17.868 --> 00:02:19.667
we need to make sure
that the dependencies

00:02:19.667 --> 00:02:24.200
that the Python Library needs
are available on the system.

00:02:24.200 --> 00:02:27.501
The main dependency that
the Python Client Library needs

00:02:27.501 --> 00:02:33.100
is ElementTree,
which is used for parsing XML.

00:02:33.100 --> 00:02:37.033
If you have Python version 2.5
or higher,

00:02:37.033 --> 00:02:40.067
ElementTree is already available
on the system.

00:02:40.067 --> 00:02:44.000
But if you're using an older
version like 2.4 or 2.2,

00:02:44.000 --> 00:02:47.267
You'll need to install
ElementTree yourself.

00:02:47.267 --> 00:02:52.133
You can download the ElementTree
Library on fbot.org.

00:02:52.133 --> 00:02:53.601
To install ElementTree,

00:02:53.601 --> 00:02:55.334
begin by downloading
the version

00:02:55.334 --> 00:02:57.467
that's appropriate
for your system.

00:02:57.467 --> 00:03:00.067
I chose to download
the zip file,

00:03:00.067 --> 00:03:02.234
which I'll un-archive
and install

00:03:02.234 --> 00:03:04.567
on the command line.

00:03:04.567 --> 00:03:07.367
Now that we've downloaded
and unpacked ElementTree,

00:03:07.367 --> 00:03:09.667
we're ready to install.

00:03:09.667 --> 00:03:11.934
To install
the ElementTree Library,

00:03:11.934 --> 00:03:16.667
go to the unzip directory...

00:03:16.667 --> 00:03:22.968
and install using
python setup.py install.

00:03:28.734 --> 00:03:31.300
Now that ElementTree
is installed,

00:03:31.300 --> 00:03:34.434
you can optionally install
cElementTree,

00:03:34.434 --> 00:03:37.734
which is a faster version
of ElementTree.

00:03:37.734 --> 00:03:40.434
The installation process
for cElementTree

00:03:40.434 --> 00:03:42.834
is the same as I've just shown
for ElementTree

00:03:42.834 --> 00:03:46.667
where you use Python
setup.py install.

00:03:46.667 --> 00:03:48.234
Now that we know

00:03:48.234 --> 00:03:50.334
that ElementTree is installed
on our system,

00:03:50.334 --> 00:03:54.167
we're ready to download
and install the Python Library.

00:03:54.167 --> 00:03:55.968
From the Projects Home page,

00:03:55.968 --> 00:04:02.968
which is at code.google.com/p
/gdata-python-client,

00:04:02.968 --> 00:04:05.868
you can find
the latest download.

00:04:07.801 --> 00:04:10.701
Download the zip file
and unpack it.

00:04:10.701 --> 00:04:14.100
Once you've unpacked
this download,

00:04:14.100 --> 00:04:17.067
we can install it

00:04:17.067 --> 00:04:19.734
using a setup script
as we did earlier.

00:04:27.567 --> 00:04:33.534
Simply type python setup.py
install to run the installer.

00:04:33.534 --> 00:04:35.667
Now that we've installed
the Library,

00:04:35.667 --> 00:04:37.467
we can make sure
that it's working

00:04:37.467 --> 00:04:39.300
by running some of
the unit tests

00:04:39.300 --> 00:04:41.701
that are bundled with it.

00:04:41.701 --> 00:04:45.567
Go into the tests directory.

00:04:45.567 --> 00:04:53.434
run_data_tests is a suite
that should execute quickly.

00:04:53.434 --> 00:05:00.567
So type python run_data_tests
to run the test script.

00:05:00.567 --> 00:05:02.467
If all the tests pass,

00:05:02.467 --> 00:05:06.167
then you can be sure that you've
installed the Library correctly.

00:05:06.167 --> 00:05:08.167
Now that we've installed
the Library,

00:05:08.167 --> 00:05:11.834
let's get a general idea
for how it's structured.

00:05:11.834 --> 00:05:15.567
You can browse the source code
here on code.google.com

00:05:15.567 --> 00:05:19.767
on the Projects site,
gdata-python-client.

00:05:22.868 --> 00:05:24.634
You can see here
that the source code

00:05:24.634 --> 00:05:27.400
is divided up between atom
and gdata.

00:05:30.968 --> 00:05:35.767
Gdata contains modules
for parsing XML

00:05:35.767 --> 00:05:41.434
and for making HTTP requests
to Google servers.

00:05:41.434 --> 00:05:45.634
There are two types of modules
in general.

00:05:45.634 --> 00:05:48.634
In each of the product's
specific directories,

00:05:48.634 --> 00:05:51.667
you'll find a module
that's responsible

00:05:51.667 --> 00:05:54.033
for parsing XML

00:05:54.033 --> 00:05:57.467
and one that's responsible
for talking to Services.

00:05:57.467 --> 00:06:00.267
You can browse
the source code as well.

00:06:05.200 --> 00:06:07.934
There's also auto-generated
documentation

00:06:07.934 --> 00:06:09.667
available online

00:06:09.667 --> 00:06:12.667
which you can find
from the Project Home page.

00:06:17.534 --> 00:06:19.300
If we wanted to, for example,

00:06:19.300 --> 00:06:21.667
take a look at the different
Data Model classes

00:06:21.667 --> 00:06:25.067
that are available
for a blogger,

00:06:25.067 --> 00:06:29.200
you could view this
auto-generated documentation.

00:06:29.200 --> 00:06:31.868
You can see here
that we have things like

00:06:31.868 --> 00:06:35.667
BlogFeeds and CommentFeeds.

00:06:35.667 --> 00:06:38.267
If you wanted to take a look
at the Service Module,

00:06:38.267 --> 00:06:42.100
which shows the HTTP requests
that can be made,

00:06:42.100 --> 00:06:45.667
you would click
on Blogger Service,

00:06:45.667 --> 00:06:48.367
take a look at some
of the different methods.

00:06:52.634 --> 00:06:55.567
For example,
Blogger Service has methods

00:06:55.567 --> 00:06:57.968
that help you add comments,
add posts,

00:06:57.968 --> 00:07:00.467
delete comments, etcetera.

00:07:00.467 --> 00:07:03.300
Now let's get an idea
for how to use the Library

00:07:03.300 --> 00:07:05.634
by looking
at an interactive sample.

00:07:05.634 --> 00:07:08.434
I'm going to start
by reading the titles

00:07:08.434 --> 00:07:11.601
from the
Google Data APIs Blog

00:07:11.601 --> 00:07:15.167
and then show
how you can post a new blogpost

00:07:15.167 --> 00:07:18.434
to one of your blogs.

00:07:18.434 --> 00:07:20.267
From the command line,

00:07:20.267 --> 00:07:23.267
we'll begin by running
the Python Interpreter.

00:07:23.267 --> 00:07:25.067
The first thing
we'll need to import

00:07:25.067 --> 00:07:31.100
is the module for Blogger.

00:07:31.100 --> 00:07:33.167
We'll also import
the atom module,

00:07:33.167 --> 00:07:36.467
which will help us construct
the elements that we're sending

00:07:36.467 --> 00:07:38.567
to the Blogger Service.

00:07:38.567 --> 00:07:41.000
Now we'll need
to create a client

00:07:41.000 --> 00:07:44.200
which is responsible for talking
to the Google servers.

00:07:54.801 --> 00:07:56.868
Now that we have our client,

00:07:56.868 --> 00:07:58.968
we can use our user name
and password

00:07:58.968 --> 00:08:02.033
to authenticate
with Google servers

00:08:02.033 --> 00:08:03.834
to make sure
that we have permission

00:08:03.834 --> 00:08:06.200
to post our new blog posts
later on.

00:08:16.467 --> 00:08:18.868
Now that we have our client,

00:08:18.868 --> 00:08:20.634
we're ready to get the feed
of blog posts

00:08:20.634 --> 00:08:22.968
from the Google Data
APIs Blog.

00:08:29.934 --> 00:08:33.167
We'll paste in the URL
of the blog feed.

00:08:39.534 --> 00:08:43.100
And now we should have
our feed object.

00:08:46.467 --> 00:08:50.968
You can see that the feed
contains multiple entries.

00:08:50.968 --> 00:08:53.667
We get 25 entries by default,

00:08:53.667 --> 00:08:57.234
and we can print out
the titles of each entry

00:08:57.234 --> 00:08:58.968
as follows.

00:09:14.100 --> 00:09:16.501
You can see
that we've printed the title

00:09:16.501 --> 00:09:20.734
of the 25 most recent posts
to the Google Data APIs Blog.

00:09:20.734 --> 00:09:24.901
Now let's show adding
a new post to our blog.

00:09:24.901 --> 00:09:26.434
I have a Test Blog here

00:09:26.434 --> 00:09:29.200
that I'd like to add
a new post to.

00:09:33.334 --> 00:09:36.868
To begin, I'll construct
a new atom entry.

00:09:42.901 --> 00:09:44.634
And I'll give it a title.

00:09:58.133 --> 00:10:00.534
I'll also give it some content.

00:10:15.601 --> 00:10:17.734
Now that we have our entry,

00:10:17.734 --> 00:10:19.701
we're ready to post it
to the blog.

00:10:22.801 --> 00:10:26.100
We'll tell our client
to perform a post,

00:10:26.100 --> 00:10:30.267
sending our entry
to the blog's feed URL.

00:10:42.000 --> 00:10:44.334
Now we have our new entry...

00:10:49.501 --> 00:10:53.901
We can see the ID
of the new blog post.

00:10:53.901 --> 00:10:56.434
And we can also see
that our blog post

00:10:56.434 --> 00:10:58.667
is now on the blog.

00:11:01.567 --> 00:11:04.267
Now that we've seen this
simple example with Blogger,

00:11:04.267 --> 00:11:07.300
let's take a look at where
you can find more resources

00:11:07.300 --> 00:11:09.934
to use other
Google Data Services.

00:11:09.934 --> 00:11:12.701
There's a list
of supported services

00:11:12.701 --> 00:11:15.367
on the Project Home page.

00:11:15.367 --> 00:11:18.968
Each of these lists a detailed
step-by-step documentation

00:11:18.968 --> 00:11:21.968
for using the various
Google Data Services.

00:11:24.067 --> 00:11:26.767
For example, to show more
of the things that you could do

00:11:26.767 --> 00:11:29.167
with the Blogger API
and the Python Library,

00:11:29.167 --> 00:11:31.868
take a look
at the Python Developer's Guide

00:11:31.868 --> 00:11:34.000
on code.google.com.

00:11:36.000 --> 00:11:38.467
The Google Data
Python Client Library

00:11:38.467 --> 00:11:40.267
is also an open source project

00:11:40.267 --> 00:11:43.000
with an active developer
community.

00:11:43.000 --> 00:11:45.367
If you find a bug,
or have suggestions,

00:11:45.367 --> 00:11:47.501
or ideas to improve
the Library,

00:11:47.501 --> 00:11:50.133
feel free to post it
in our discussion group.

00:11:55.567 --> 00:11:57.033
So that's it.

00:11:57.033 --> 00:11:59.734
Thanks for watching,
and happy coding.

