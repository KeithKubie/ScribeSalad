WEBVTT
Kind: captions
Language: en

00:00:00.804 --> 00:00:02.219
But
even then, we have

00:00:02.220 --> 00:00:05.990
to fight the sheer nature of the
web and network architecture.

00:00:05.990 --> 00:00:08.339
In this example,
over 50% of the time

00:00:08.339 --> 00:00:10.140
from pressing Enter
in the address bar

00:00:10.140 --> 00:00:13.839
to the page being displayed is
spent waiting for the answer.

00:00:13.839 --> 00:00:18.300
This waiting period is called
Time To First Byte, or TTFB.

00:00:18.300 --> 00:00:20.910
If this website needed to
grab additional resources,

00:00:20.910 --> 00:00:23.820
we would have to wait for the
response of our first request

00:00:23.820 --> 00:00:26.060
before we could send
out a second request.

00:00:26.059 --> 00:00:28.890
That in turn means that we have
another period of time waiting

00:00:28.890 --> 00:00:31.320
that is not being
used effectively.

00:00:31.320 --> 00:00:34.049
This problem is called
head-of-line blocking.

00:00:34.049 --> 00:00:36.570
Let's see an example of what
head-of-line blocking is

00:00:36.570 --> 00:00:38.700
and how it is bad for
the user experience.

00:00:38.700 --> 00:00:40.260
[MUSIC PLAYING]

00:00:40.259 --> 00:00:43.019
With HTTP, a connection
is like a queue.

00:00:43.020 --> 00:00:44.850
While the first request
is being handled,

00:00:44.850 --> 00:00:47.939
all other requests have to
wait until it is their turn.

00:00:47.939 --> 00:00:50.359
A lot of time is
being wasted here.

00:00:50.359 --> 00:00:51.700
 All right, one medium coffee.

00:00:51.700 --> 00:00:52.200
 Thanks.

00:00:52.200 --> 00:00:54.359
 Enjoy.

00:00:54.359 --> 00:00:55.743
 Hey, can I order a drink now?

00:00:55.743 --> 00:00:56.909
 Yeah, what are you having?

00:00:56.909 --> 00:00:57.659
 OK, great.

00:00:57.659 --> 00:00:58.609
I'd like a venti.

00:00:58.609 --> 00:01:02.067
Half whole milk, 1/4 1%,
1/4 nonfat, extra hot,

00:01:02.067 --> 00:01:03.899
split quad shot, one
and a half shots decaf,

00:01:03.899 --> 00:01:07.295
two and a half shots regular,
no foam latte with whip,

00:01:07.296 --> 00:01:09.170
two packets of Splenda,
one Sugar in the Raw,

00:01:09.170 --> 00:01:11.400
a touch of vanilla syrup,
and three short sprinkles

00:01:11.400 --> 00:01:12.150
of cinnamon.

00:01:12.150 --> 00:01:15.150
And I'm kind of in a hurry.

00:01:15.150 --> 00:01:16.630
Thanks.

00:01:16.629 --> 00:01:17.129
 Uh.

00:01:17.129 --> 00:01:17.629
Phew.

00:01:17.629 --> 00:01:20.123
OK, got it.

00:01:20.123 --> 00:01:22.289
While Richard's
drink is being prepared,

00:01:22.290 --> 00:01:24.780
the other customers
are left waiting

00:01:24.780 --> 00:01:28.170
even though their request
would be much faster to make.

00:01:28.170 --> 00:01:32.070
The head of line is blocking
the rest of the customers.

00:01:32.069 --> 00:01:33.869
To counteract the
limitation a little bit,

00:01:33.870 --> 00:01:36.680
browsers open up to six
parallel connections--

00:01:36.680 --> 00:01:38.190
or in our coffee
shop comparison,

00:01:38.189 --> 00:01:40.230
they hire another barista.

00:01:40.230 --> 00:01:42.750
So while the first connection
is waiting for its first byte,

00:01:42.750 --> 00:01:45.700
a second request can already be
sent on the second connection

00:01:45.700 --> 00:01:46.960
and so on.

00:01:46.959 --> 00:01:48.629
Of course, hiring
a new barista takes

00:01:48.629 --> 00:01:50.069
a lot of time and training.

00:01:50.069 --> 00:01:52.589
In the browser, opening all
these connections is also

00:01:52.590 --> 00:01:55.870
quite costly because of the
TCP handshakes necessary.

00:01:55.870 --> 00:01:57.990
The six parallel connections
browsers can make

00:01:57.989 --> 00:02:01.406
is still only a band-aid for
the head-of-line blocking.

00:02:01.406 --> 00:02:03.239
If you have a lot of
resources on your page,

00:02:03.239 --> 00:02:05.849
you will spend most
of your time waiting--

00:02:05.849 --> 00:02:08.599
or staring at the cashier.

00:02:08.599 --> 00:02:10.698
Head-of-line blocking
is a huge bottleneck

00:02:10.699 --> 00:02:12.200
to website performance.

00:02:12.199 --> 00:02:14.909
Browsers being able to open
up six parallel connections

00:02:14.909 --> 00:02:16.979
help, but it's not great.

00:02:16.979 --> 00:02:19.769
Later we'll see how
HTTP/2 fixes issues

00:02:19.770 --> 00:02:21.939
with head-of-line blocking.

