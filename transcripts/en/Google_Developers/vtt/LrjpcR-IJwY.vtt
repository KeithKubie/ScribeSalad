WEBVTT
Kind: captions
Language: en

00:00:11.020 --> 00:00:13.450
JONATHAN SIMON: Hello, I'm
Johnson Simon with the Google

00:00:13.450 --> 00:00:15.100
Compute Engine team.

00:00:15.100 --> 00:00:17.890
Now that Compute Engine is open
for everyone to use, I

00:00:17.890 --> 00:00:20.480
thought it would fun to do a
demo of using Compute Engine

00:00:20.480 --> 00:00:22.960
to set up a cloud-based
web server.

00:00:22.960 --> 00:00:25.370
That way, you can see the
process and then try it out

00:00:25.370 --> 00:00:26.420
for yourself.

00:00:26.420 --> 00:00:29.060
Let's get started by pointing a
browser to cloud.google.com.

00:00:29.060 --> 00:00:33.100
When you first come to the
cloud platform, you'll be

00:00:33.100 --> 00:00:35.290
prompted to create
a new project.

00:00:35.290 --> 00:00:37.240
We're creating a test
web server.

00:00:37.240 --> 00:00:39.750
So we'll call it Web
Server Project.

00:00:39.750 --> 00:00:45.610
We'll change the suggested
project ID as well, and then

00:00:45.610 --> 00:00:47.360
click Create.

00:00:47.360 --> 00:00:50.090
That will start the project
creation process.

00:00:50.090 --> 00:00:52.540
Now the project that's being
created will have access to

00:00:52.540 --> 00:00:55.050
all of Google's Cloud
Platform services.

00:00:55.050 --> 00:00:57.830
We're interested in Compute
Engine for this demo.

00:00:57.830 --> 00:01:03.640
So when the project creation
process completes, we'll

00:01:03.640 --> 00:01:05.474
select the Compute
Engine service.

00:01:09.010 --> 00:01:11.150
Compute Engine is a paid
service, so the first thing

00:01:11.150 --> 00:01:13.950
we'll need to do is set up
our billing information.

00:01:13.950 --> 00:01:16.630
You'll likely be surprised at
how affordable experimenting

00:01:16.630 --> 00:01:17.900
with Compute Engine can be.

00:01:21.980 --> 00:01:24.640
After we've entered our billing
information, we'll be

00:01:24.640 --> 00:01:27.570
redirected to the Compute Engine
Instances page, where

00:01:27.570 --> 00:01:28.890
we should see a list
of the virtual

00:01:28.890 --> 00:01:30.700
machines that we've created.

00:01:30.700 --> 00:01:33.020
We don't currently have
any, so let's add one.

00:01:33.020 --> 00:01:34.860
Start by clicking the New
Instance button at

00:01:34.860 --> 00:01:36.670
the top of the page.

00:01:36.670 --> 00:01:41.930
For the name of the instance,
we'll specify Test Web Server.

00:01:41.930 --> 00:01:44.890
We'll create the instance in
the US Central 1A zone.

00:01:44.890 --> 00:01:48.300
For the machine type, since this
is a test, we will select

00:01:48.300 --> 00:01:53.250
the F1 micro with one CPU and
0.6 gigabytes of memory.

00:01:53.250 --> 00:01:55.340
We'll leave the boot source as
new persistent disk from

00:01:55.340 --> 00:01:58.960
image, and we'll go with
the Debian image,

00:01:58.960 --> 00:02:01.120
which is the default.

00:02:01.120 --> 00:02:03.480
All the other settings should
be OK, so we can click the

00:02:03.480 --> 00:02:05.110
Create button to create
our instance.

00:02:09.509 --> 00:02:12.490
Because we specified the boot
source as New Persistent Disk

00:02:12.490 --> 00:02:16.370
from Image, a default 10
gigabyte persistent disk will

00:02:16.370 --> 00:02:20.210
be created, named Boot Test Web
Server, that will be used

00:02:20.210 --> 00:02:22.490
as the boot disk for
the instance.

00:02:22.490 --> 00:02:24.610
Persistent disks are especially
useful, because

00:02:24.610 --> 00:02:26.180
they can live on beyond
a specific

00:02:26.180 --> 00:02:27.870
virtual machine's lifetime.

00:02:27.870 --> 00:02:30.080
This allows you to save the
state of your virtual machine

00:02:30.080 --> 00:02:33.050
at a specific point in time
and then restore it at any

00:02:33.050 --> 00:02:34.300
time in the future.

00:02:40.410 --> 00:02:43.370
Our instance is almost ready.

00:02:43.370 --> 00:02:45.670
Some final health checks are
being run, which is the last

00:02:45.670 --> 00:02:47.525
step before the server
is ready to use.

00:02:50.050 --> 00:02:50.570
There.

00:02:50.570 --> 00:02:52.500
Now our instance has
been created, and

00:02:52.500 --> 00:02:53.750
it's ready for use.

00:02:56.030 --> 00:02:57.990
By default, all external
traffic to

00:02:57.990 --> 00:02:59.910
our instance is blocked.

00:02:59.910 --> 00:03:02.470
Since we want to serve web pages
with our instance, we

00:03:02.470 --> 00:03:05.520
need to set up a firewall to
specify that incoming HTTP

00:03:05.520 --> 00:03:07.740
traffic is allowed on the
network where our

00:03:07.740 --> 00:03:10.050
newly-created virtual
machine resides.

00:03:10.050 --> 00:03:16.120
We can do that by clicking
Networks and choosing the

00:03:16.120 --> 00:03:19.070
default network where our
instance was created and then

00:03:19.070 --> 00:03:23.640
scrolling down to the Firewall
section and click Create New.

00:03:23.640 --> 00:03:28.220
The name of the firewall that
we will create is HTTP1.

00:03:28.220 --> 00:03:29.650
And under the Protocols
and Ports

00:03:29.650 --> 00:03:34.190
section, we'll enter TCP:80.

00:03:34.190 --> 00:03:38.780
Then we'll click the Create link
to create the firewall.

00:03:38.780 --> 00:03:39.050
There.

00:03:39.050 --> 00:03:40.755
The firewall creation
process has started.

00:03:43.270 --> 00:03:45.660
Once this process completes, we
should see the new firewall

00:03:45.660 --> 00:03:47.055
appear in the Firewalls list.

00:03:52.670 --> 00:03:55.840
And there it is.

00:03:55.840 --> 00:03:58.130
In order to make changes, like
installing software on our

00:03:58.130 --> 00:04:00.940
Compute Engine virtual machine,
we need to remotely

00:04:00.940 --> 00:04:02.450
access the machine.

00:04:02.450 --> 00:04:04.720
The Google Compute Engine team
has created a great tool for

00:04:04.720 --> 00:04:07.720
doing this called gcutil.

00:04:07.720 --> 00:04:10.310
Gcutil is a command line tool
for interacting with Google

00:04:10.310 --> 00:04:11.475
Compute Engine.

00:04:11.475 --> 00:04:13.570
The instructions for downloading
and installing

00:04:13.570 --> 00:04:14.950
gcutil can be found at
developers.googl

00:04:14.950 --> 00:04:21.570
e.com/compute/docs/gcutil.

00:04:21.570 --> 00:04:24.520
Once we've got gcutil installed
on our machine, we

00:04:24.520 --> 00:04:27.680
can use it to remotely access
the instance we created.

00:04:27.680 --> 00:04:29.930
There's a quick way to do that
if you go to the Instance

00:04:29.930 --> 00:04:34.810
Details page for our test web
server, and then scroll down

00:04:34.810 --> 00:04:37.760
to the bottom where you'll
see an SSH link.

00:04:37.760 --> 00:04:40.110
Click that link, and then
copy the command

00:04:40.110 --> 00:04:42.840
that's provided there.

00:04:42.840 --> 00:04:45.480
Now, we're going to open a
terminal window and paste that

00:04:45.480 --> 00:04:46.930
command and run it.

00:04:50.870 --> 00:04:52.200
And there we go.

00:04:52.200 --> 00:04:54.750
We've remotely accessed
our test web server.

00:04:54.750 --> 00:04:56.240
Here we are on the
command line.

00:04:59.060 --> 00:05:01.570
Well, let's install some
software, specifically some

00:05:01.570 --> 00:05:04.180
web server software.

00:05:04.180 --> 00:05:07.215
The web server software we're
going to install is Apache.

00:05:07.215 --> 00:05:09.060
A standard command
used on Linux to

00:05:09.060 --> 00:05:11.450
install software is apt-get.

00:05:11.450 --> 00:05:14.240
So we're going to type SUDO to
run the command as a super

00:05:14.240 --> 00:05:18.140
user, apt-get, install,
Apache2.

00:05:20.820 --> 00:05:22.970
It's going to ask us to confirm
that we want to

00:05:22.970 --> 00:05:26.000
install it.

00:05:26.000 --> 00:05:28.717
Type y and hit Enter, and the

00:05:28.717 --> 00:05:29.967
installation process has started.

00:05:39.530 --> 00:05:40.990
And now Apache has
been installed.

00:05:45.330 --> 00:05:47.880
As part of the installation
process, Apache creates a

00:05:47.880 --> 00:05:49.440
default web page.

00:05:49.440 --> 00:05:51.980
We can try loading that default
web page in a browser

00:05:51.980 --> 00:05:54.730
to confirm that we're actually
serving web pages.

00:05:54.730 --> 00:05:57.350
So let's jump back to a browser
to test if we can load

00:05:57.350 --> 00:06:00.280
the default web page that
Apache has created.

00:06:00.280 --> 00:06:02.860
Now, to find our default page so
that we can try to load it

00:06:02.860 --> 00:06:05.300
in a browser, we need to know
the internet address of our

00:06:05.300 --> 00:06:06.460
test web server.

00:06:06.460 --> 00:06:09.340
We can find that back on the
Instance Details page.

00:06:09.340 --> 00:06:12.500
Locate the external IP address,
and copy the value

00:06:12.500 --> 00:06:14.870
you see provided there.

00:06:14.870 --> 00:06:17.770
And open a browser tab, and
paste the value that you just

00:06:17.770 --> 00:06:20.920
copied, and hit Enter.

00:06:20.920 --> 00:06:24.700
There we go, the default
Apache web page.

00:06:24.700 --> 00:06:27.750
Great, our test web server
is serving up pages.

00:06:27.750 --> 00:06:30.730
Now, to prove that this is our
web server, let's modify the

00:06:30.730 --> 00:06:31.970
default web page.

00:06:31.970 --> 00:06:34.170
We'll jump back over to our
terminal window and type the

00:06:34.170 --> 00:06:36.150
following command to open
up our default web

00:06:36.150 --> 00:06:37.870
page in a text editor.

00:06:37.870 --> 00:06:41.090
We'll start by typing SUDO to
run the command as super user,

00:06:41.090 --> 00:06:44.350
and then Nano, which is the text
editor that we'll use,

00:06:44.350 --> 00:06:46.910
and then the location of the
Apache default web page, which

00:06:46.910 --> 00:06:48.160
is /var/www/index.html.

00:06:51.470 --> 00:06:54.360
When we run that, it will open
up the index.html in the Nano

00:06:54.360 --> 00:06:56.350
text editor.

00:06:56.350 --> 00:06:58.800
First, we will remove the
default text that's there.

00:07:03.900 --> 00:07:06.020
And then we'll paste in an
image, so that we can easily

00:07:06.020 --> 00:07:08.160
tell that the page has
been modified.

00:07:08.160 --> 00:07:12.260
The final thing to do is to
press the control and x keys

00:07:12.260 --> 00:07:18.000
and then type y to save the
file and close Nano.

00:07:18.000 --> 00:07:20.760
Now, we should be able to go
back to our browser and reload

00:07:20.760 --> 00:07:23.120
the web page.

00:07:23.120 --> 00:07:25.920
And there is our new custom
default web page.

00:07:25.920 --> 00:07:28.340
This is an image that was
created at Google I/O as part

00:07:28.340 --> 00:07:31.155
of the code lab that we ran
called Computing the Cosmos.

00:07:34.170 --> 00:07:36.860
I would call this
test a success.

00:07:36.860 --> 00:07:39.530
The final thing we need to do
to wrap up our test is to

00:07:39.530 --> 00:07:41.710
delete the virtual machine
we created and

00:07:41.710 --> 00:07:43.300
the persistent disk.

00:07:43.300 --> 00:07:45.840
As I do that, let's make a
calculation about how much

00:07:45.840 --> 00:07:47.250
this whole test costs.

00:07:47.250 --> 00:07:48.965
We'll start by deleting
the virtual machine.

00:07:54.250 --> 00:07:57.950
And the deletion process
has started.

00:07:57.950 --> 00:08:01.050
The current virtual machine
price for the type we use is

00:08:01.050 --> 00:08:03.060
1.9 cents per hour.

00:08:03.060 --> 00:08:05.960
We ran our server for around
10 minutes, so our virtual

00:08:05.960 --> 00:08:20.540
machine usage cost 0.32 cents.

00:08:20.540 --> 00:08:21.760
And there we go.

00:08:21.760 --> 00:08:24.410
The virtual machine
has been deleted.

00:08:24.410 --> 00:08:28.120
Next, we'll delete the
persistent disk.

00:08:28.120 --> 00:08:31.670
The current persistent disk
price for 10 gigabytes is $1

00:08:31.670 --> 00:08:33.970
per month, plus a fee
for I/O operations.

00:08:33.970 --> 00:08:38.980
So our 10 minute usage costs
roughly 0.002 cents.

00:08:38.980 --> 00:08:41.940
The networking cost associated
with our tests are even less.

00:08:41.940 --> 00:08:44.250
So everything we just did
on Compute Engine for

00:08:44.250 --> 00:08:46.130
less than one cent.

00:08:46.130 --> 00:08:47.310
Thanks for watching.

00:08:47.310 --> 00:08:48.340
Now it's your turn.

00:08:48.340 --> 00:08:50.470
Go try creating your own
cloud-based web server on

00:08:50.470 --> 00:08:51.720
Compute Engine.

