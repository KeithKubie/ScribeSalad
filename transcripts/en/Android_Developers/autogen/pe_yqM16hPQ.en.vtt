WEBVTT
Kind: captions
Language: en

00:00:01.820 --> 00:00:04.190
your app won't always be in the

00:00:04.190 --> 00:00:04.200
your app won't always be in the
 

00:00:04.200 --> 00:00:05.960
your app won't always be in the
foreground but you still need to do

00:00:05.960 --> 00:00:05.970
foreground but you still need to do
 

00:00:05.970 --> 00:00:07.430
foreground but you still need to do
important background work like

00:00:07.430 --> 00:00:07.440
important background work like
 

00:00:07.440 --> 00:00:08.870
important background work like
downloading updates and synching with

00:00:08.870 --> 00:00:08.880
downloading updates and synching with
 

00:00:08.880 --> 00:00:10.850
downloading updates and synching with
your server now there are many existing

00:00:10.850 --> 00:00:10.860
your server now there are many existing
 

00:00:10.860 --> 00:00:12.530
your server now there are many existing
api's for this each with their own

00:00:12.530 --> 00:00:12.540
api's for this each with their own
 

00:00:12.540 --> 00:00:15.049
api's for this each with their own
particular use cases unfortunately when

00:00:15.049 --> 00:00:15.059
particular use cases unfortunately when
 

00:00:15.059 --> 00:00:16.939
particular use cases unfortunately when
these api's are used incorrectly we see

00:00:16.939 --> 00:00:16.949
these api's are used incorrectly we see
 

00:00:16.949 --> 00:00:19.310
these api's are used incorrectly we see
this happen to save power for users

00:00:19.310 --> 00:00:19.320
this happen to save power for users
 

00:00:19.320 --> 00:00:21.200
this happen to save power for users
Android has introduced many battery

00:00:21.200 --> 00:00:21.210
Android has introduced many battery
 

00:00:21.210 --> 00:00:22.580
Android has introduced many battery
saving features and recent releases

00:00:22.580 --> 00:00:22.590
saving features and recent releases
 

00:00:22.590 --> 00:00:24.950
saving features and recent releases
these features manage and balance the

00:00:24.950 --> 00:00:24.960
these features manage and balance the
 

00:00:24.960 --> 00:00:27.800
these features manage and balance the
power usage of apps as a developer you

00:00:27.800 --> 00:00:27.810
power usage of apps as a developer you
 

00:00:27.810 --> 00:00:29.269
power usage of apps as a developer you
need to work with these battery saving

00:00:29.269 --> 00:00:29.279
need to work with these battery saving
 

00:00:29.279 --> 00:00:30.919
need to work with these battery saving
features to ensure your background tasks

00:00:30.919 --> 00:00:30.929
features to ensure your background tasks
 

00:00:30.929 --> 00:00:33.410
features to ensure your background tasks
run across API levels this adds code

00:00:33.410 --> 00:00:33.420
run across API levels this adds code
 

00:00:33.420 --> 00:00:35.060
run across API levels this adds code
complexity but if you don't do this

00:00:35.060 --> 00:00:35.070
complexity but if you don't do this
 

00:00:35.070 --> 00:00:36.950
complexity but if you don't do this
properly you risk your background work

00:00:36.950 --> 00:00:36.960
properly you risk your background work
 

00:00:36.960 --> 00:00:39.650
properly you risk your background work
not running for all users this is where

00:00:39.650 --> 00:00:39.660
not running for all users this is where
 

00:00:39.660 --> 00:00:42.049
not running for all users this is where
the work manager library comes in work

00:00:42.049 --> 00:00:42.059
the work manager library comes in work
 

00:00:42.059 --> 00:00:44.119
the work manager library comes in work
manager provides a unified solution for

00:00:44.119 --> 00:00:44.129
manager provides a unified solution for
 

00:00:44.129 --> 00:00:45.950
manager provides a unified solution for
background work taking androids power

00:00:45.950 --> 00:00:45.960
background work taking androids power
 

00:00:45.960 --> 00:00:48.200
background work taking androids power
saving features and the users API level

00:00:48.200 --> 00:00:48.210
saving features and the users API level
 

00:00:48.210 --> 00:00:50.420
saving features and the users API level
into account it's backwards compatible

00:00:50.420 --> 00:00:50.430
into account it's backwards compatible
 

00:00:50.430 --> 00:00:52.910
into account it's backwards compatible
to API level 14 part of android jetpack

00:00:52.910 --> 00:00:52.920
to API level 14 part of android jetpack
 

00:00:52.920 --> 00:00:55.040
to API level 14 part of android jetpack
and it runs with or without Google Play

00:00:55.040 --> 00:00:55.050
and it runs with or without Google Play
 

00:00:55.050 --> 00:00:57.319
and it runs with or without Google Play
services these features and more make it

00:00:57.319 --> 00:00:57.329
services these features and more make it
 

00:00:57.329 --> 00:00:59.000
services these features and more make it
the recommended solution for most

00:00:59.000 --> 00:00:59.010
the recommended solution for most
 

00:00:59.010 --> 00:01:01.729
the recommended solution for most
background work on Android there are two

00:01:01.729 --> 00:01:01.739
background work on Android there are two
 

00:01:01.739 --> 00:01:03.619
background work on Android there are two
key attributes that make a task suitable

00:01:03.619 --> 00:01:03.629
key attributes that make a task suitable
 

00:01:03.629 --> 00:01:05.780
key attributes that make a task suitable
for work manager first that the task is

00:01:05.780 --> 00:01:05.790
for work manager first that the task is
 

00:01:05.790 --> 00:01:07.340
for work manager first that the task is
deferrable and second that the test

00:01:07.340 --> 00:01:07.350
deferrable and second that the test
 

00:01:07.350 --> 00:01:09.380
deferrable and second that the test
needs to be guaranteed to run deferrable

00:01:09.380 --> 00:01:09.390
needs to be guaranteed to run deferrable
 

00:01:09.390 --> 00:01:11.390
needs to be guaranteed to run deferrable
work is any task which is still useful

00:01:11.390 --> 00:01:11.400
work is any task which is still useful
 

00:01:11.400 --> 00:01:13.730
work is any task which is still useful
even if it's not run immediately so

00:01:13.730 --> 00:01:13.740
even if it's not run immediately so
 

00:01:13.740 --> 00:01:15.620
even if it's not run immediately so
sending analytic data to your server is

00:01:15.620 --> 00:01:15.630
sending analytic data to your server is
 

00:01:15.630 --> 00:01:17.630
sending analytic data to your server is
totally deferral work but sending an

00:01:17.630 --> 00:01:17.640
totally deferral work but sending an
 

00:01:17.640 --> 00:01:19.300
totally deferral work but sending an
instant message is not deferrable

00:01:19.300 --> 00:01:19.310
instant message is not deferrable
 

00:01:19.310 --> 00:01:21.469
instant message is not deferrable
guaranteed work means that the task will

00:01:21.469 --> 00:01:21.479
guaranteed work means that the task will
 

00:01:21.479 --> 00:01:23.630
guaranteed work means that the task will
run even if the app process is killed or

00:01:23.630 --> 00:01:23.640
run even if the app process is killed or
 

00:01:23.640 --> 00:01:25.760
run even if the app process is killed or
the device restarts so a great use case

00:01:25.760 --> 00:01:25.770
the device restarts so a great use case
 

00:01:25.770 --> 00:01:27.380
the device restarts so a great use case
for work manager would be backing up

00:01:27.380 --> 00:01:27.390
for work manager would be backing up
 

00:01:27.390 --> 00:01:29.510
for work manager would be backing up
pictures to a server this work can be

00:01:29.510 --> 00:01:29.520
pictures to a server this work can be
 

00:01:29.520 --> 00:01:30.830
pictures to a server this work can be
deferred but it should also be

00:01:30.830 --> 00:01:30.840
deferred but it should also be
 

00:01:30.840 --> 00:01:33.289
deferred but it should also be
guaranteed to run work manager can be

00:01:33.289 --> 00:01:33.299
guaranteed to run work manager can be
 

00:01:33.299 --> 00:01:34.969
guaranteed to run work manager can be
paired with other api's like firebase

00:01:34.969 --> 00:01:34.979
paired with other api's like firebase
 

00:01:34.979 --> 00:01:36.469
paired with other api's like firebase
Cloud messaging to trigger background

00:01:36.469 --> 00:01:36.479
Cloud messaging to trigger background
 

00:01:36.479 --> 00:01:38.480
Cloud messaging to trigger background
work so for example when there's data

00:01:38.480 --> 00:01:38.490
work so for example when there's data
 

00:01:38.490 --> 00:01:40.460
work so for example when there's data
ready to sync on your server you can use

00:01:40.460 --> 00:01:40.470
ready to sync on your server you can use
 

00:01:40.470 --> 00:01:42.440
ready to sync on your server you can use
an FCM message to notify your app and

00:01:42.440 --> 00:01:42.450
an FCM message to notify your app and
 

00:01:42.450 --> 00:01:44.270
an FCM message to notify your app and
then do the actual syncing with work

00:01:44.270 --> 00:01:44.280
then do the actual syncing with work
 

00:01:44.280 --> 00:01:46.910
then do the actual syncing with work
manager while work manager is powerful

00:01:46.910 --> 00:01:46.920
manager while work manager is powerful
 

00:01:46.920 --> 00:01:48.139
manager while work manager is powerful
background work isn't a

00:01:48.139 --> 00:01:48.149
background work isn't a
 

00:01:48.149 --> 00:01:50.090
background work isn't a
one-size-fits-all approach so for

00:01:50.090 --> 00:01:50.100
one-size-fits-all approach so for
 

00:01:50.100 --> 00:01:51.410
one-size-fits-all approach so for
example while I've been talking a lot

00:01:51.410 --> 00:01:51.420
example while I've been talking a lot
 

00:01:51.420 --> 00:01:53.359
example while I've been talking a lot
about background work when I don't mean

00:01:53.359 --> 00:01:53.369
about background work when I don't mean
 

00:01:53.369 --> 00:01:55.580
about background work when I don't mean
is background threading work manager

00:01:55.580 --> 00:01:55.590
is background threading work manager
 

00:01:55.590 --> 00:01:57.920
is background threading work manager
works in conjunction with but is not a

00:01:57.920 --> 00:01:57.930
works in conjunction with but is not a
 

00:01:57.930 --> 00:01:59.840
works in conjunction with but is not a
replacement for calling co-routines

00:01:59.840 --> 00:01:59.850
replacement for calling co-routines
 

00:01:59.850 --> 00:02:01.639
replacement for calling co-routines
thread pools or libraries like our

00:02:01.639 --> 00:02:01.649
thread pools or libraries like our
 

00:02:01.649 --> 00:02:02.149
thread pools or libraries like our
extraña

00:02:02.149 --> 00:02:02.159
extraña
 

00:02:02.159 --> 00:02:04.310
extraña
work manager is also not designed to

00:02:04.310 --> 00:02:04.320
work manager is also not designed to
 

00:02:04.320 --> 00:02:06.530
work manager is also not designed to
trigger work at an exact time for that

00:02:06.530 --> 00:02:06.540
trigger work at an exact time for that
 

00:02:06.540 --> 00:02:08.059
trigger work at an exact time for that
you're going to need to use an API like

00:02:08.059 --> 00:02:08.069
you're going to need to use an API like
 

00:02:08.069 --> 00:02:09.800
you're going to need to use an API like
a lar manager or start a foreground

00:02:09.800 --> 00:02:09.810
a lar manager or start a foreground
 

00:02:09.810 --> 00:02:11.660
a lar manager or start a foreground
service if your users expect your task

00:02:11.660 --> 00:02:11.670
service if your users expect your task
 

00:02:11.670 --> 00:02:13.550
service if your users expect your task
to happen immediately

00:02:13.550 --> 00:02:13.560
to happen immediately
 

00:02:13.560 --> 00:02:15.170
to happen immediately
a complete view of modern background

00:02:15.170 --> 00:02:15.180
a complete view of modern background
 

00:02:15.180 --> 00:02:17.449
a complete view of modern background
execution check out this blog post on

00:02:17.449 --> 00:02:17.459
execution check out this blog post on
 

00:02:17.459 --> 00:02:19.160
execution check out this blog post on
the Android developer blog which I've

00:02:19.160 --> 00:02:19.170
the Android developer blog which I've
 

00:02:19.170 --> 00:02:21.740
the Android developer blog which I've
linked below now let me show you how to

00:02:21.740 --> 00:02:21.750
linked below now let me show you how to
 

00:02:21.750 --> 00:02:24.080
linked below now let me show you how to
actually create and do some work let's

00:02:24.080 --> 00:02:24.090
actually create and do some work let's
 

00:02:24.090 --> 00:02:25.760
actually create and do some work let's
say that I want to upload a photo using

00:02:25.760 --> 00:02:25.770
say that I want to upload a photo using
 

00:02:25.770 --> 00:02:27.890
say that I want to upload a photo using
work manager first you define what your

00:02:27.890 --> 00:02:27.900
work manager first you define what your
 

00:02:27.900 --> 00:02:29.960
work manager first you define what your
task does using a worker like this one

00:02:29.960 --> 00:02:29.970
task does using a worker like this one
 

00:02:29.970 --> 00:02:32.210
task does using a worker like this one
all the code goes into the do work

00:02:32.210 --> 00:02:32.220
all the code goes into the do work
 

00:02:32.220 --> 00:02:34.490
all the code goes into the do work
method then you make a request to do

00:02:34.490 --> 00:02:34.500
method then you make a request to do
 

00:02:34.500 --> 00:02:36.170
method then you make a request to do
this work using a class called work

00:02:36.170 --> 00:02:36.180
this work using a class called work
 

00:02:36.180 --> 00:02:38.330
this work using a class called work
request as part of the work request you

00:02:38.330 --> 00:02:38.340
request as part of the work request you
 

00:02:38.340 --> 00:02:40.280
request as part of the work request you
can add constraints specify the input

00:02:40.280 --> 00:02:40.290
can add constraints specify the input
 

00:02:40.290 --> 00:02:42.050
can add constraints specify the input
and choose to run the work once or

00:02:42.050 --> 00:02:42.060
and choose to run the work once or
 

00:02:42.060 --> 00:02:44.089
and choose to run the work once or
periodically the work request is

00:02:44.089 --> 00:02:44.099
periodically the work request is
 

00:02:44.099 --> 00:02:46.009
periodically the work request is
basically a class for configuring when

00:02:46.009 --> 00:02:46.019
basically a class for configuring when
 

00:02:46.019 --> 00:02:48.710
basically a class for configuring when
and how your task will be run since this

00:02:48.710 --> 00:02:48.720
and how your task will be run since this
 

00:02:48.720 --> 00:02:50.360
and how your task will be run since this
is non-repeating work i'm gonna go ahead

00:02:50.360 --> 00:02:50.370
is non-repeating work i'm gonna go ahead
 

00:02:50.370 --> 00:02:52.850
is non-repeating work i'm gonna go ahead
and use a one-time work request I've

00:02:52.850 --> 00:02:52.860
and use a one-time work request I've
 

00:02:52.860 --> 00:02:54.680
and use a one-time work request I've
added a constraint here that it should

00:02:54.680 --> 00:02:54.690
added a constraint here that it should
 

00:02:54.690 --> 00:02:56.059
added a constraint here that it should
only do this upload when there's

00:02:56.059 --> 00:02:56.069
only do this upload when there's
 

00:02:56.069 --> 00:02:58.789
only do this upload when there's
actually Network finally this passes in

00:02:58.789 --> 00:02:58.799
actually Network finally this passes in
 

00:02:58.799 --> 00:03:01.070
actually Network finally this passes in
the URI of the photo as input data using

00:03:01.070 --> 00:03:01.080
the URI of the photo as input data using
 

00:03:01.080 --> 00:03:03.559
the URI of the photo as input data using
work manager's data object once you have

00:03:03.559 --> 00:03:03.569
work manager's data object once you have
 

00:03:03.569 --> 00:03:05.270
work manager's data object once you have
a work request you couldnt queue it by

00:03:05.270 --> 00:03:05.280
a work request you couldnt queue it by
 

00:03:05.280 --> 00:03:07.520
a work request you couldnt queue it by
calling work manager dot and queue and

00:03:07.520 --> 00:03:07.530
calling work manager dot and queue and
 

00:03:07.530 --> 00:03:09.860
calling work manager dot and queue and
well that's it at this point I know that

00:03:09.860 --> 00:03:09.870
well that's it at this point I know that
 

00:03:09.870 --> 00:03:11.660
well that's it at this point I know that
this photo will be uploaded at some

00:03:11.660 --> 00:03:11.670
this photo will be uploaded at some
 

00:03:11.670 --> 00:03:12.949
this photo will be uploaded at some
point of the future when the network

00:03:12.949 --> 00:03:12.959
point of the future when the network
 

00:03:12.959 --> 00:03:14.780
point of the future when the network
constraint is met even if the app is

00:03:14.780 --> 00:03:14.790
constraint is met even if the app is
 

00:03:14.790 --> 00:03:17.509
constraint is met even if the app is
closed or the phone restarts now let's

00:03:17.509 --> 00:03:17.519
closed or the phone restarts now let's
 

00:03:17.519 --> 00:03:19.009
closed or the phone restarts now let's
say that I want the option of updated

00:03:19.009 --> 00:03:19.019
say that I want the option of updated
 

00:03:19.019 --> 00:03:21.650
say that I want the option of updated
the UI when my work finishes I can use

00:03:21.650 --> 00:03:21.660
the UI when my work finishes I can use
 

00:03:21.660 --> 00:03:24.229
the UI when my work finishes I can use
the method get work info by ID live data

00:03:24.229 --> 00:03:24.239
the method get work info by ID live data
 

00:03:24.239 --> 00:03:27.140
the method get work info by ID live data
to get a work info live data the fact

00:03:27.140 --> 00:03:27.150
to get a work info live data the fact
 

00:03:27.150 --> 00:03:28.640
to get a work info live data the fact
that the work info is wrapped by live

00:03:28.640 --> 00:03:28.650
that the work info is wrapped by live
 

00:03:28.650 --> 00:03:31.069
that the work info is wrapped by live
data makes it observable if you haven't

00:03:31.069 --> 00:03:31.079
data makes it observable if you haven't
 

00:03:31.079 --> 00:03:32.660
data makes it observable if you haven't
used live data before you can read about

00:03:32.660 --> 00:03:32.670
used live data before you can read about
 

00:03:32.670 --> 00:03:34.220
used live data before you can read about
it in the documentation linked below

00:03:34.220 --> 00:03:34.230
it in the documentation linked below
 

00:03:34.230 --> 00:03:36.140
it in the documentation linked below
work info has all of the information

00:03:36.140 --> 00:03:36.150
work info has all of the information
 

00:03:36.150 --> 00:03:37.880
work info has all of the information
about the current state of my work

00:03:37.880 --> 00:03:37.890
about the current state of my work
 

00:03:37.890 --> 00:03:40.160
about the current state of my work
including the status of the work and the

00:03:40.160 --> 00:03:40.170
including the status of the work and the
 

00:03:40.170 --> 00:03:42.800
including the status of the work and the
optional output so back into work I

00:03:42.800 --> 00:03:42.810
optional output so back into work I
 

00:03:42.810 --> 00:03:45.110
optional output so back into work I
could return an output and then add this

00:03:45.110 --> 00:03:45.120
could return an output and then add this
 

00:03:45.120 --> 00:03:47.090
could return an output and then add this
live data observation code to my UI to

00:03:47.090 --> 00:03:47.100
live data observation code to my UI to
 

00:03:47.100 --> 00:03:49.670
live data observation code to my UI to
display the output when available so

00:03:49.670 --> 00:03:49.680
display the output when available so
 

00:03:49.680 --> 00:03:51.110
display the output when available so
what's going on behind the scenes when

00:03:51.110 --> 00:03:51.120
what's going on behind the scenes when
 

00:03:51.120 --> 00:03:53.240
what's going on behind the scenes when
you in cue work as mentioned work

00:03:53.240 --> 00:03:53.250
you in cue work as mentioned work
 

00:03:53.250 --> 00:03:55.220
you in cue work as mentioned work
manager is backwards compatible to API

00:03:55.220 --> 00:03:55.230
manager is backwards compatible to API
 

00:03:55.230 --> 00:03:57.500
manager is backwards compatible to API
level 14 and runs without Google Play

00:03:57.500 --> 00:03:57.510
level 14 and runs without Google Play
 

00:03:57.510 --> 00:03:59.930
level 14 and runs without Google Play
services to ensure this work manager

00:03:59.930 --> 00:03:59.940
services to ensure this work manager
 

00:03:59.940 --> 00:04:01.580
services to ensure this work manager
chooses between job scheduler and a

00:04:01.580 --> 00:04:01.590
chooses between job scheduler and a
 

00:04:01.590 --> 00:04:03.050
chooses between job scheduler and a
combination of alarmmanager and

00:04:03.050 --> 00:04:03.060
combination of alarmmanager and
 

00:04:03.060 --> 00:04:05.390
combination of alarmmanager and
broadcast receivers when running to

00:04:05.390 --> 00:04:05.400
broadcast receivers when running to
 

00:04:05.400 --> 00:04:06.530
broadcast receivers when running to
guarantee that the work will keep

00:04:06.530 --> 00:04:06.540
guarantee that the work will keep
 

00:04:06.540 --> 00:04:08.539
guarantee that the work will keep
running all of that information about a

00:04:08.539 --> 00:04:08.549
running all of that information about a
 

00:04:08.549 --> 00:04:10.430
running all of that information about a
queued work is kept in a work manager

00:04:10.430 --> 00:04:10.440
queued work is kept in a work manager
 

00:04:10.440 --> 00:04:12.379
queued work is kept in a work manager
bandaged database so that I can be

00:04:12.379 --> 00:04:12.389
bandaged database so that I can be
 

00:04:12.389 --> 00:04:14.690
bandaged database so that I can be
resumed if it's ever stopped now by

00:04:14.690 --> 00:04:14.700
resumed if it's ever stopped now by
 

00:04:14.700 --> 00:04:16.909
resumed if it's ever stopped now by
default worker does work off of the main

00:04:16.909 --> 00:04:16.919
default worker does work off of the main
 

00:04:16.919 --> 00:04:18.770
default worker does work off of the main
thread using an executor behind the

00:04:18.770 --> 00:04:18.780
thread using an executor behind the
 

00:04:18.780 --> 00:04:20.659
thread using an executor behind the
scenes if you want to handle threading

00:04:20.659 --> 00:04:20.669
scenes if you want to handle threading
 

00:04:20.669 --> 00:04:21.469
scenes if you want to handle threading
in some other way

00:04:21.469 --> 00:04:21.479
in some other way
 

00:04:21.479 --> 00:04:23.390
in some other way
there's rx worker and coercion worker

00:04:23.390 --> 00:04:23.400
there's rx worker and coercion worker
 

00:04:23.400 --> 00:04:25.010
there's rx worker and coercion worker
which are available out of the box or

00:04:25.010 --> 00:04:25.020
which are available out of the box or
 

00:04:25.020 --> 00:04:27.320
which are available out of the box or
for even more control you can make your

00:04:27.320 --> 00:04:27.330
for even more control you can make your
 

00:04:27.330 --> 00:04:29.119
for even more control you can make your
old worker class by extending listenable

00:04:29.119 --> 00:04:29.129
old worker class by extending listenable
 

00:04:29.129 --> 00:04:31.219
old worker class by extending listenable
worker and defining your exact threading

00:04:31.219 --> 00:04:31.229
worker and defining your exact threading
 

00:04:31.229 --> 00:04:33.559
worker and defining your exact threading
strategy one area where work manager

00:04:33.559 --> 00:04:33.569
strategy one area where work manager
 

00:04:33.569 --> 00:04:35.510
strategy one area where work manager
truly shines is when you create chains

00:04:35.510 --> 00:04:35.520
truly shines is when you create chains
 

00:04:35.520 --> 00:04:37.909
truly shines is when you create chains
of dependent work let's say that I want

00:04:37.909 --> 00:04:37.919
of dependent work let's say that I want
 

00:04:37.919 --> 00:04:39.290
of dependent work let's say that I want
to add a filter to multiple pictures

00:04:39.290 --> 00:04:39.300
to add a filter to multiple pictures
 

00:04:39.300 --> 00:04:41.029
to add a filter to multiple pictures
compress those pictures together and

00:04:41.029 --> 00:04:41.039
compress those pictures together and
 

00:04:41.039 --> 00:04:43.040
compress those pictures together and
then batch upload the compressed file to

00:04:43.040 --> 00:04:43.050
then batch upload the compressed file to
 

00:04:43.050 --> 00:04:43.749
then batch upload the compressed file to
share with the world

00:04:43.749 --> 00:04:43.759
share with the world
 

00:04:43.759 --> 00:04:45.890
share with the world
assuming you created all of your work

00:04:45.890 --> 00:04:45.900
assuming you created all of your work
 

00:04:45.900 --> 00:04:47.029
assuming you created all of your work
requests with the appropriate

00:04:47.029 --> 00:04:47.039
requests with the appropriate
 

00:04:47.039 --> 00:04:48.740
requests with the appropriate
constraints the code to create this

00:04:48.740 --> 00:04:48.750
constraints the code to create this
 

00:04:48.750 --> 00:04:50.679
constraints the code to create this
dependent shade of work looks like this

00:04:50.679 --> 00:04:50.689
dependent shade of work looks like this
 

00:04:50.689 --> 00:04:53.089
dependent shade of work looks like this
inq the work requests in the order that

00:04:53.089 --> 00:04:53.099
inq the work requests in the order that
 

00:04:53.099 --> 00:04:55.550
inq the work requests in the order that
I want them to run I've also include

00:04:55.550 --> 00:04:55.560
I want them to run I've also include
 

00:04:55.560 --> 00:04:57.260
I want them to run I've also include
these filter image work requests as a

00:04:57.260 --> 00:04:57.270
these filter image work requests as a
 

00:04:57.270 --> 00:04:58.909
these filter image work requests as a
list which causes them to run in

00:04:58.909 --> 00:04:58.919
list which causes them to run in
 

00:04:58.919 --> 00:05:01.550
list which causes them to run in
parallel work manager will take care of

00:05:01.550 --> 00:05:01.560
parallel work manager will take care of
 

00:05:01.560 --> 00:05:03.290
parallel work manager will take care of
passing through the output and input in

00:05:03.290 --> 00:05:03.300
passing through the output and input in
 

00:05:03.300 --> 00:05:05.719
passing through the output and input in
a chain so here it the output of these

00:05:05.719 --> 00:05:05.729
a chain so here it the output of these
 

00:05:05.729 --> 00:05:07.850
a chain so here it the output of these
filter work requests will be passed as

00:05:07.850 --> 00:05:07.860
filter work requests will be passed as
 

00:05:07.860 --> 00:05:09.520
filter work requests will be passed as
the input of the compressed work request

00:05:09.520 --> 00:05:09.530
the input of the compressed work request
 

00:05:09.530 --> 00:05:11.990
the input of the compressed work request
there is a ton more that you can do with

00:05:11.990 --> 00:05:12.000
there is a ton more that you can do with
 

00:05:12.000 --> 00:05:14.059
there is a ton more that you can do with
work manager you can specify things like

00:05:14.059 --> 00:05:14.069
work manager you can specify things like
 

00:05:14.069 --> 00:05:16.040
work manager you can specify things like
periodic work for work that needs to run

00:05:16.040 --> 00:05:16.050
periodic work for work that needs to run
 

00:05:16.050 --> 00:05:18.709
periodic work for work that needs to run
repeatedly unique work tagged work so

00:05:18.709 --> 00:05:18.719
repeatedly unique work tagged work so
 

00:05:18.719 --> 00:05:20.659
repeatedly unique work tagged work so
that you can query it or cancel related

00:05:20.659 --> 00:05:20.669
that you can query it or cancel related
 

00:05:20.669 --> 00:05:22.969
that you can query it or cancel related
work and back off policies for retrying

00:05:22.969 --> 00:05:22.979
work and back off policies for retrying
 

00:05:22.979 --> 00:05:25.459
work and back off policies for retrying
work for even more features tips and

00:05:25.459 --> 00:05:25.469
work for even more features tips and
 

00:05:25.469 --> 00:05:27.170
work for even more features tips and
tricks check out the working with work

00:05:27.170 --> 00:05:27.180
tricks check out the working with work
 

00:05:27.180 --> 00:05:28.550
tricks check out the working with work
manager talk linked below

00:05:28.550 --> 00:05:28.560
manager talk linked below
 

00:05:28.560 --> 00:05:31.309
manager talk linked below
so to summarize by using work manager

00:05:31.309 --> 00:05:31.319
so to summarize by using work manager
 

00:05:31.319 --> 00:05:34.010
so to summarize by using work manager
you can and cue one-off and periodic

00:05:34.010 --> 00:05:34.020
you can and cue one-off and periodic
 

00:05:34.020 --> 00:05:36.800
you can and cue one-off and periodic
tasks with constraints chain tasks with

00:05:36.800 --> 00:05:36.810
tasks with constraints chain tasks with
 

00:05:36.810 --> 00:05:39.110
tasks with constraints chain tasks with
input and output and run these 10 tasks

00:05:39.110 --> 00:05:39.120
input and output and run these 10 tasks
 

00:05:39.120 --> 00:05:41.749
input and output and run these 10 tasks
in parallel or sequentially display the

00:05:41.749 --> 00:05:41.759
in parallel or sequentially display the
 

00:05:41.759 --> 00:05:43.700
in parallel or sequentially display the
state of your tasks using observation

00:05:43.700 --> 00:05:43.710
state of your tasks using observation
 

00:05:43.710 --> 00:05:46.040
state of your tasks using observation
and customized work managers threading

00:05:46.040 --> 00:05:46.050
and customized work managers threading
 

00:05:46.050 --> 00:05:48.379
and customized work managers threading
strategy work manager does all of this

00:05:48.379 --> 00:05:48.389
strategy work manager does all of this
 

00:05:48.389 --> 00:05:50.570
strategy work manager does all of this
while handling complex compatibility

00:05:50.570 --> 00:05:50.580
while handling complex compatibility
 

00:05:50.580 --> 00:05:52.670
while handling complex compatibility
issues following system health best

00:05:52.670 --> 00:05:52.680
issues following system health best
 

00:05:52.680 --> 00:05:54.589
issues following system health best
practices and guaranteeing your work

00:05:54.589 --> 00:05:54.599
practices and guaranteeing your work
 

00:05:54.599 --> 00:05:57.019
practices and guaranteeing your work
will run if you're ready to get working

00:05:57.019 --> 00:05:57.029
will run if you're ready to get working
 

00:05:57.029 --> 00:05:59.029
will run if you're ready to get working
with work manager I've linked tons of

00:05:59.029 --> 00:05:59.039
with work manager I've linked tons of
 

00:05:59.039 --> 00:06:00.980
with work manager I've linked tons of
helpful documentation code labs

00:06:00.980 --> 00:06:00.990
helpful documentation code labs
 

00:06:00.990 --> 00:06:04.010
helpful documentation code labs
presentations and blog posts below happy

00:06:04.010 --> 00:06:04.020
presentations and blog posts below happy
 

00:06:04.020 --> 00:06:07.500
presentations and blog posts below happy
coding

00:06:07.500 --> 00:06:07.510
 

00:06:07.510 --> 00:06:09.570
you

