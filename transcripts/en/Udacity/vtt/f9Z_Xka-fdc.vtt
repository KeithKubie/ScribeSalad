WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:07.546
Hello everyone and welcome to
today's webcast on html and css.

00:00:07.546 --> 00:00:09.456
I'm Denkine, this is Jarund.

00:00:09.456 --> 00:00:13.215
And we're of course
managers here at Udacity.

00:00:13.215 --> 00:00:17.510
And you know we're going to be
talking about some css things.

00:00:17.510 --> 00:00:21.800
The way css works is
you have a selector.

00:00:21.800 --> 00:00:23.718
For example dot targets classes.

00:00:23.718 --> 00:00:25.020
And then the styling and

00:00:25.020 --> 00:00:28.155
then you have styling that
goes into the curly brackets.

00:00:28.155 --> 00:00:34.434
Right, so for example,
I have this really simple HTML.

00:00:34.434 --> 00:00:38.598
And, as you can see,
it's just a bunch of boxes.

00:00:38.598 --> 00:00:40.100
Right?

00:00:40.100 --> 00:00:45.340
And then I've linked here to my style
sheet which is called style.css.

00:00:45.340 --> 00:00:54.070
And then, for example, if I wanted
to target, all the class box ones.

00:00:54.070 --> 00:00:58.498
I can do this via this notation,
so .box, select all the class box.

00:00:58.498 --> 00:01:03.550
And then inside I have property call
in value and so backyard color grey and

00:01:03.550 --> 00:01:08.128
then 10 pixels margin to the bottle and
mean high to 50 pixels.

00:01:08.128 --> 00:01:12.988
And then as you can see all of my dibs
are defined as as having class box and

00:01:12.988 --> 00:01:18.347
then each one also has an additional
class box one, bow two, box three right.

00:01:18.347 --> 00:01:23.478
And so over here, when you go, like,
into the separate box one, box two,

00:01:23.478 --> 00:01:28.280
box three, I actually overwrite
the background color property.

00:01:28.280 --> 00:01:30.930
So, I gave each one
a different background color.

00:01:30.930 --> 00:01:35.730
And then,
if we open this in the browser, right,

00:01:35.730 --> 00:01:37.079
so this is how it looks like.

00:01:38.640 --> 00:01:42.490
Right they all have different colors
they all have like the same in height of

00:01:42.490 --> 00:01:44.460
50 pixels and
then ten pixels in between them.

00:01:45.880 --> 00:01:52.080
The box model is something that you have
probably seen but just a quick recap so

00:01:52.080 --> 00:01:56.990
all elements our box says if we
go into the developer tools.

00:01:56.990 --> 00:01:58.769
Can select for example this.

00:02:00.050 --> 00:02:01.650
And, you can see.

00:02:01.650 --> 00:02:02.930
Where did there we go.

00:02:02.930 --> 00:02:07.167
And you can see that this is
really how it looks like, right?

00:02:07.167 --> 00:02:09.560
So, there's, it's this box.

00:02:09.560 --> 00:02:15.716
It can change the padding here to,
I don't know, 40 pixels?

00:02:15.716 --> 00:02:21.953
And see how weird, this actually
moved it to text 40 pixels to right.

00:02:21.953 --> 00:02:23.986
&gt;&gt; And the padding is inside.

00:02:23.986 --> 00:02:25.164
&gt;&gt; Right.

00:02:25.164 --> 00:02:29.591
So usually this is a counter
whatever you have inside

00:02:29.591 --> 00:02:34.460
the box could be text,
images, another box whatever.

00:02:34.460 --> 00:02:35.650
And then the padding.

00:02:36.710 --> 00:02:41.950
Is comes right after that and the border
is actually after the padding.

00:02:41.950 --> 00:02:46.267
Right so the border encompasses
their content and.their padding.

00:02:46.267 --> 00:02:49.090
And then after the border,
there's the margin.

00:02:49.090 --> 00:02:54.115
So if we, for example so this is set
to 10 why not set it to 40 as well.

00:02:54.115 --> 00:02:58.775
You see it, everybody else just
moved down to a company that's like

00:02:58.775 --> 00:03:00.590
three pixels of padding.

00:03:00.590 --> 00:03:03.165
So, yeah so the box model pretty cool.

00:03:04.350 --> 00:03:09.809
Box elements, versus block
elements versus inline elements.

00:03:09.809 --> 00:03:17.430
And so divs H1s, most of what you could
think of, those are all block elements.

00:03:17.430 --> 00:03:19.900
There are couple of inline
elements I think mostly,

00:03:21.320 --> 00:03:25.860
tags such as bold like making your
text bold and things like that.

00:03:25.860 --> 00:03:26.890
&gt;&gt; Expanders.

00:03:26.890 --> 00:03:29.724
&gt;&gt; Yeah.
&gt;&gt; Block elements right as they're stuck

00:03:29.724 --> 00:03:33.466
vertically and inline elements
are kind of in the same line.

00:03:33.466 --> 00:03:38.420
&gt;&gt; Right yeah, like block elements
are sort of like they take all the space

00:03:38.420 --> 00:03:44.057
they can take in line, horizontally but
still spaces they can take vertically.

00:03:44.057 --> 00:03:51.670
So for example in the css code that I
show you all the boxes had a min height.

00:03:51.670 --> 00:03:53.527
50 pixels.

00:03:53.527 --> 00:03:56.152
And if we take that min height away, so

00:03:56.152 --> 00:04:00.130
you see in here min height
50 pixels say for this box.

00:04:00.130 --> 00:04:04.407
If I take that away, whoops,
all the boxes disappeared,

00:04:04.407 --> 00:04:09.316
the only one that remained is this
one because it has content in it.

00:04:09.316 --> 00:04:14.132
When we give the min high back they
go back by because these are block

00:04:14.132 --> 00:04:14.997
elements.

00:04:14.997 --> 00:04:20.160
Their default properties is
as be as wide as you can and

00:04:20.160 --> 00:04:23.270
but as short as you can, right.

00:04:23.270 --> 00:04:27.010
So they're going to either accommodate
content if they have content or

00:04:27.010 --> 00:04:30.550
if you have specified mean height for
them they're going to accommodate that.

00:04:30.550 --> 00:04:32.257
If they're if you don't have content and

00:04:32.257 --> 00:04:34.517
don't have mean height they're
just not going to show.

00:04:34.517 --> 00:04:36.671
Let's change that to yem.

00:04:36.671 --> 00:04:38.743
&gt;&gt; So
it's big huge that's pretty massive.

00:04:38.743 --> 00:04:42.075
So maybe you might want something
much smaller like 3m or something.

00:04:42.075 --> 00:04:43.559
&gt;&gt; Let's do that.

00:04:43.559 --> 00:04:46.780
&gt;&gt; So yeah six so.

00:04:46.780 --> 00:04:51.209
You could play with that means if you
change the font the default font than

00:04:51.209 --> 00:04:53.895
this size will change accordingly and
yeah.

00:04:53.895 --> 00:04:59.116
You know you can but the percentages,
all the others we talked about, dh etc.

00:04:59.116 --> 00:05:03.370
There's two kinds of centering,
you either want to center your div or

00:05:03.370 --> 00:05:06.266
you want to center the things
in the divs right.

00:05:06.266 --> 00:05:10.684
&gt;&gt; So to center your div you can
use the margin left right and

00:05:10.684 --> 00:05:12.850
margin right properties.

00:05:12.850 --> 00:05:17.748
And then, so if you set them to auto,

00:05:17.748 --> 00:05:21.864
that's going to center the div.

00:05:21.864 --> 00:05:25.370
And then-
&gt;&gt; You could see what happen.

00:05:25.370 --> 00:05:29.003
We set left to auto and it's like it had
it's arm and it pushed it all the way

00:05:29.003 --> 00:05:31.891
over to the left,
that was Ben Jackie's visual for that.

00:05:31.891 --> 00:05:33.719
And then when you set right
it's like you take the right

00:05:33.719 --> 00:05:34.528
arm you push yourself.

00:05:34.528 --> 00:05:38.010
It pushed itself all the way
across from the right side.

00:05:38.010 --> 00:05:41.790
&gt;&gt; Right, so you're telling it be
as much as you can to the left but

00:05:41.790 --> 00:05:43.840
also be as much as you can to the right.

00:05:43.840 --> 00:05:47.071
That sort of like two conflicting
instructions so what does it do?

00:05:47.071 --> 00:05:48.970
Stands right there in the middle.

00:05:48.970 --> 00:05:51.760
So that's that's a way
to center your element.

00:05:51.760 --> 00:05:54.710
To center the text or whatever.

00:05:54.710 --> 00:06:00.230
If you have text inside the element then
you can just use a text align property.

00:06:00.230 --> 00:06:02.570
And then we can use a different thing,

00:06:02.570 --> 00:06:06.019
you can you center if you
wanted the text to be centered.

00:06:06.019 --> 00:06:10.937
Again so now that it's a centering
we can also use it to do other

00:06:10.937 --> 00:06:14.080
things such as say nice and justified.

00:06:14.080 --> 00:06:20.030
Another thing that you can use instead
of using margin left and right so

00:06:20.030 --> 00:06:25.629
let's get rid of these,
is you can use margin auto.

00:06:25.629 --> 00:06:29.231
So this is actually margin zero and
auto.

00:06:29.231 --> 00:06:32.006
So, this looks like it
does the same thing.

00:06:32.006 --> 00:06:35.406
Because what this does
is it sets the top and

00:06:35.406 --> 00:06:41.340
bottom margins to zero and
then the left and right margins to auto.

00:06:41.340 --> 00:06:46.600
And the top and
bottom margins are very different.

00:06:46.600 --> 00:06:50.040
This is a very different from the left
and right just because those elements,

00:06:50.040 --> 00:06:53.780
because box elements behave
differently when it comes,

00:06:53.780 --> 00:06:56.760
they behave differently
vertically versus horizontally.

00:06:56.760 --> 00:07:01.746
So you can actually center in the middle
of the screen using something like

00:07:01.746 --> 00:07:06.160
margin top or auto or margin bottom
although that just won't work.

00:07:06.160 --> 00:07:07.400
Yes.

00:07:07.400 --> 00:07:10.651
&gt;&gt; It's fine to do something like this
you say top and bottom a zero, left and

00:07:10.651 --> 00:07:12.812
right are auto is the short hand,
the short cut.

00:07:12.812 --> 00:07:13.312
&gt;&gt; Yeah.

00:07:15.050 --> 00:07:19.950
If you float an element they take
your element and sort of cause it

00:07:19.950 --> 00:07:24.693
to make it look like as if it's
like in a, on a layer of its own.

00:07:24.693 --> 00:07:25.830
&gt;&gt; Mm-hm.

00:07:25.830 --> 00:07:29.015
&gt;&gt; It's not really in
a layer of its own, but

00:07:29.015 --> 00:07:32.485
it looks like as if it's
on a layer of its own.

00:07:32.485 --> 00:07:36.569
And we should actually demonstrate that.

00:07:36.569 --> 00:07:39.718
So let's actually float this box.

00:07:39.718 --> 00:07:45.334
And then I think.

00:07:45.334 --> 00:07:46.983
It's floated to the left.

00:07:46.983 --> 00:07:49.754
&gt;&gt; Yeah, what just happened here.

00:07:49.754 --> 00:07:50.770
&gt;&gt; Exactly.

00:07:50.770 --> 00:07:55.370
So now it looks really weird
because all the other boxes just

00:07:55.370 --> 00:07:59.430
jumped as if like they
couldn't see this box at all.

00:07:59.430 --> 00:08:01.250
They just like jumped one up.

00:08:01.250 --> 00:08:04.670
This is because we are now saying hey,

00:08:04.670 --> 00:08:09.310
this box1, it becomes invisible
to the other boxes, really.

00:08:09.310 --> 00:08:14.100
And it no longer takes maximal
space available to it,

00:08:14.100 --> 00:08:15.960
so the other boxes just jump.

00:08:15.960 --> 00:08:17.040
Let's float another one.

00:08:18.420 --> 00:08:28.380
I want to now float this box and
then I'm going to, Load it left as well.

00:08:28.380 --> 00:08:32.142
Okay, now it disappeared completely,
but it didn't disappear,

00:08:32.142 --> 00:08:33.530
it's actually hiding.

00:08:34.549 --> 00:08:39.393
Let's give it a different width,

00:08:39.393 --> 00:08:43.405
so now we've floated both.

00:08:43.405 --> 00:08:46.393
Both the box one and box two.

00:08:46.393 --> 00:08:50.060
&gt;&gt; So, what happened why did
they go to where they are.

00:08:50.060 --> 00:08:54.860
Well essentially they went when they're
both floated they're both like on

00:08:54.860 --> 00:08:59.285
a separate layer by themselves kind
of like you can think of that as like

00:08:59.285 --> 00:09:01.540
a layer, layer two.

00:09:01.540 --> 00:09:06.720
And they're aware of each other's
existence, but they're not aware of the,

00:09:06.720 --> 00:09:10.920
but other boxes are not aware of them,
so other boxes do not see them.

00:09:10.920 --> 00:09:15.510
And it is as if those boxes
are taking zero space.

00:09:16.700 --> 00:09:20.000
So, essentially, when you unfloat them,

00:09:20.000 --> 00:09:24.690
You see how this goes back
to being on a normal layer.

00:09:24.690 --> 00:09:26.690
And then but when you float it,
it goes back up.

00:09:26.690 --> 00:09:30.674
And the other thing is that they’re also
not only they're aware of each other but

00:09:30.674 --> 00:09:34.496
they're also, like, this is all that
weird because if they're one fluid.

00:09:34.496 --> 00:09:39.331
So let's unfloat them and
let also unfloat this.

00:09:39.331 --> 00:09:42.950
They are actually
underneath one another,

00:09:42.950 --> 00:09:46.876
they're not horizontally
next to each other.

00:09:46.876 --> 00:09:48.340
&gt;&gt; Because they're block elements.

00:09:48.340 --> 00:09:52.766
&gt;&gt; Right, yeah but then when you float
them that's no longer the case right.

00:09:52.766 --> 00:09:56.883
When you float them they sort of like
lose that property of like wanting to

00:09:56.883 --> 00:09:59.458
take as much space as
they can horizontally.

00:09:59.458 --> 00:10:04.990
Sort of like they are no longer
horizontally territorial.

00:10:04.990 --> 00:10:06.540
&gt;&gt; Yeah,
because we're telling it to float left.

00:10:06.540 --> 00:10:09.630
Now it's interesting that we
take box2 and we float it right.

00:10:09.630 --> 00:10:10.943
Let's see what happens there.

00:10:10.943 --> 00:10:13.767
If we take box2,
then we can defloat right.

00:10:13.767 --> 00:10:16.000
What do we think will happen?

00:10:16.000 --> 00:10:17.360
Right, it jumps to the right side.

00:10:17.360 --> 00:10:18.620
So you can put things on both sides,

00:10:18.620 --> 00:10:21.040
they're both in this float layer and
they're hiding.

00:10:21.040 --> 00:10:21.910
Now here's an interesting thing,

00:10:21.910 --> 00:10:24.590
what happens if we float
box one to the right also?

00:10:24.590 --> 00:10:26.010
Let's see.

00:10:27.290 --> 00:10:29.227
Yeah, look.
That's interesting,

00:10:29.227 --> 00:10:32.875
notice how box one is to the right
of the green box, box two.

00:10:32.875 --> 00:10:36.590
And the reason for
that is box one came before box two.

00:10:36.590 --> 00:10:38.417
So it's kind of like there's a race.

00:10:38.417 --> 00:10:41.879
And the first one you say okay float
right and you get to box one the box one

00:10:41.879 --> 00:10:45.283
goes to the right and then you got to
box two and you say float right but

00:10:45.283 --> 00:10:48.717
box one is already there so it goes
as much to the right it's possible.

00:10:48.717 --> 00:10:52.423
&gt;&gt; This is sort of like the first
element and so when you float it to

00:10:52.423 --> 00:10:56.151
the right it's the first one it's
going to be on the right side.

00:10:56.151 --> 00:10:57.497
And when you float it to
the left it's going to

00:10:57.497 --> 00:10:58.922
be the first one it's
going to be on the left side.

00:10:58.922 --> 00:11:01.310
And then when you float
elements that come built that.

00:11:01.310 --> 00:11:04.720
This is the second element and so
it's going to follow the first element.

00:11:04.720 --> 00:11:07.462
Now what if what if we have the common
situation where we like these things

00:11:07.462 --> 00:11:11.770
floated but what we want everything else
to come after it like you know like.

00:11:11.770 --> 00:11:15.660
We need to clear like it's there's
actually something called clear fix.

00:11:15.660 --> 00:11:16.837
You need to fix this.

00:11:16.837 --> 00:11:19.101
We need to clear all the problems.

00:11:19.101 --> 00:11:21.830
To fix these these floating inches.

00:11:21.830 --> 00:11:25.960
So, let's select the third box right.

00:11:25.960 --> 00:11:29.817
And then let's give a property.

00:11:29.817 --> 00:11:32.459
Let's clear-
&gt;&gt; Clear both.

00:11:32.459 --> 00:11:33.402
I think that's left and right.

00:11:33.402 --> 00:11:34.366
&gt;&gt; Let's clear both.

00:11:34.366 --> 00:11:37.271
&gt;&gt; Yeah, boom, look at that!

00:11:37.271 --> 00:11:41.179
&gt;&gt; So now you're essentially telling
it you actually you got to be aware,

00:11:41.179 --> 00:11:45.151
you've got to be aware because there's
actually elements floated on both

00:11:45.151 --> 00:11:47.247
sides which clear opens on both sides.

00:11:47.247 --> 00:11:50.433
We actually we floated those to
the left so we don't have to,

00:11:50.433 --> 00:11:52.436
this is going to be the same thing now.

00:11:52.436 --> 00:11:54.800
&gt;&gt; [CROSSTALK] Right, yeah.

00:11:54.800 --> 00:11:56.430
&gt;&gt; The clear right works for

00:11:56.430 --> 00:12:00.880
this because those two elements
are like floated to the right side.

00:12:00.880 --> 00:12:02.790
So you're telling that
third box watch out,

00:12:02.790 --> 00:12:08.410
you have elements floated to your
right so you want to be below them.

00:12:08.410 --> 00:12:09.140
&gt;&gt; Yeah.

00:12:09.140 --> 00:12:11.780
So if you ever hear someone
talking about clear fix,

00:12:11.780 --> 00:12:14.610
This is kind of a trick that you need,
you can Google it.

00:12:14.610 --> 00:12:18.201
There's actually two things you need for
clear fix you need to clear left or

00:12:18.201 --> 00:12:20.481
right, and
you also need to set the overflow for

00:12:20.481 --> 00:12:22.520
a weird case where you have nested divs.

00:12:22.520 --> 00:12:25.700
So when you look at the clear fix,
you'll see it clears and

00:12:25.700 --> 00:12:30.480
it also sets an overflow, so if you
don't forget, just google it and add it.

00:12:30.480 --> 00:12:33.248
And even within Bootstrap you sometimes
have to be aware of these issues, too.

00:12:33.248 --> 00:12:37.630
So you'll see references to
clear fix in Bootstrap shot.

