WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
So, what happens if we take this big HTML input

00:00:04.000 --> 00:00:06.000
and run it through our simplification procedure?

00:00:06.000 --> 00:00:09.000
Let's find this out. We click on "Run."

00:00:09.000 --> 00:00:13.000
You see that the simplification algorithm correctly returns select,

00:00:13.000 --> 00:00:20.000
which actually means that it has been able to very nicely simplify this complex input

00:00:20.000 --> 00:00:23.000
into just these eight characters.

00:00:23.000 --> 00:00:26.000
Let's take a look into how this actually operates.

00:00:26.000 --> 00:00:30.000
I'm inserting a print statement in here, which gives us a representation of the string

00:00:30.000 --> 00:00:32.000
as well as it's length,

00:00:32.000 --> 00:00:35.000
so we can see whatever simplify has been working on

00:00:35.000 --> 00:00:37.000
and down here we can see how simplify() operates.

00:00:37.000 --> 00:00:39.000
It first takes the entire string,

00:00:39.000 --> 00:00:42.000
then it takes the first half, tests this, fails again.

00:00:42.000 --> 00:00:44.000
Of this it takes the first half, fails again.

00:00:44.000 --> 00:00:47.000
Takes the first half, fails again, and there we go.

00:00:47.000 --> 00:00:51.000
With a technique like this, we can automatically simplify any input.

00:00:51.000 --> 00:00:56.000
All we need is an automated test that tells us whether the program in question

00:00:56.000 --> 00:00:58.000
passes or fails.

00:00:58.000 --> 00:01:02.000
Unfortunately, at this point our strategy is not yet perfect.

00:01:02.000 --> 00:01:06.000
We'll have to refine it a bit, because it doesn't work well for all inputs.

00:01:06.000 --> 00:01:12.000
What happens if we put in another HTML input--that is select, foo, and end of select?

00:01:12.000 --> 00:01:17.000
What do we get as a simplified input with this function?

00:01:17.000 --> 00:01:20.000
So, here's our quiz. What's the result of simplify() here?

00:01:20.000 --> 00:01:24.000
With this input: foo

00:01:24.000 --> 00:01:30.169
Is it a string consisting out of the eight characters ?

00:01:30.184 --> 00:01:35.000
Is it a string consisting of and the first two characters of foo?

00:01:35.000 --> 00:01:38.000
Is it a string consisting of and all of foo?

00:01:38.000 --> 00:01:42.979
Or is it the entire HTML input? Over to you.

