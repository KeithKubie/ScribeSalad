WEBVTT
Kind: captions
Language: en

00:00:00.499 --> 00:00:03.070
SHANEE NISHRY: Cardboard
is a virtual reality viewer

00:00:03.070 --> 00:00:04.640
anyone can make.

00:00:04.640 --> 00:00:07.300
But how does it work?

00:00:07.300 --> 00:00:09.840
My name is Shanee,
and in this video

00:00:09.840 --> 00:00:12.580
I'll show you how
Cardboard works

00:00:12.580 --> 00:00:15.500
from hardware to software.

00:00:15.500 --> 00:00:18.700
Cardboard creates a
window into another world,

00:00:18.700 --> 00:00:21.060
with a little help
of your phone,

00:00:21.060 --> 00:00:25.240
allowing you to travel the world
from the comfort of your seat,

00:00:25.240 --> 00:00:30.390
and gamers like me to fly a
spaceship and fight dragons.

00:00:30.390 --> 00:00:33.110
It does that in
three ways, leaving

00:00:33.110 --> 00:00:38.260
you to concentrate on making
the best possible experience.

00:00:38.260 --> 00:00:42.090
It provides visual immersion,
takes to user's movement

00:00:42.090 --> 00:00:47.370
into the virtual world, and it
allows for user interaction.

00:00:47.370 --> 00:00:51.090
Let's take a closer look
at each of these features.

00:00:51.090 --> 00:00:53.190
To make the users
feel as if they

00:00:53.190 --> 00:00:55.270
have been taken
to another world,

00:00:55.270 --> 00:00:58.520
we need to have them
visually immersed.

00:00:58.520 --> 00:01:02.300
The screen of a phone is
small and if [INAUDIBLE]

00:01:02.300 --> 00:01:05.170
close to a TV
monitor doesn't make

00:01:05.170 --> 00:01:07.460
you feel like you're inside.

00:01:07.460 --> 00:01:12.200
We need to focus the user's
field a view into the screen.

00:01:12.200 --> 00:01:15.620
The box and lenses, together
with the picture on the phone,

00:01:15.620 --> 00:01:19.860
create the 3-D effect
needed for virtual reality.

00:01:19.860 --> 00:01:22.280
When looking through
the viewer, the lenses

00:01:22.280 --> 00:01:25.710
focus the wide field of
view into the screen,

00:01:25.710 --> 00:01:28.790
making it appear closer
and bigger than it is.

00:01:28.790 --> 00:01:31.160
This means all the
user can see is

00:01:31.160 --> 00:01:33.390
the screen and
the virtual world,

00:01:33.390 --> 00:01:36.250
putting them inside the game.

00:01:36.250 --> 00:01:39.020
To make visual
immersion convincing,

00:01:39.020 --> 00:01:42.120
the user needs to
perceive depth,

00:01:42.120 --> 00:01:47.180
just like we do in real life,
or else things will look flat.

00:01:47.180 --> 00:01:49.710
To give the user
depth perception,

00:01:49.710 --> 00:01:53.120
the screen is joined in a
split-screen configuration.

00:01:53.120 --> 00:01:56.690
That is, there is a separate
and slightly different

00:01:56.690 --> 00:01:59.300
image for each eye.

00:01:59.300 --> 00:02:02.270
To illustrate that,
think about your eyes.

00:02:02.270 --> 00:02:05.940
Each eye sees the world from
a different perspective.

00:02:05.940 --> 00:02:09.970
In the virtual world, a camera
is deployed for each eye.

00:02:09.970 --> 00:02:13.440
Each camera is slightly
offset to correlate

00:02:13.440 --> 00:02:15.440
with the position of the eye.

00:02:15.440 --> 00:02:20.200
This creates the stereoscopic
effect and an illusion of depth

00:02:20.200 --> 00:02:24.250
making the brain think that
the virtual space is real.

00:02:24.250 --> 00:02:27.570
All this together solves
the first challenge

00:02:27.570 --> 00:02:31.250
of achieving visual immersion,
except there is still

00:02:31.250 --> 00:02:32.800
one problem.

00:02:32.800 --> 00:02:35.450
Even though we can't
see it from here,

00:02:35.450 --> 00:02:36.920
when looking
through the headset,

00:02:36.920 --> 00:02:41.180
the image looks as if it were
stretched along the edges.

00:02:41.180 --> 00:02:46.300
This happens because the lenses
cause distortion to the image.

00:02:46.300 --> 00:02:50.210
This effect is called
pincushion distortion.

00:02:50.210 --> 00:02:52.760
To fix the image,
an opposite effect

00:02:52.760 --> 00:02:56.840
called barrel distortion is
applied and post-process,

00:02:56.840 --> 00:03:01.240
creating a seemingly perfect
and undistorted image.

00:03:01.240 --> 00:03:04.100
Now that we solved
visual immersion,

00:03:04.100 --> 00:03:07.760
let's take a look at correlating
with the user's movement.

00:03:07.760 --> 00:03:11.340
The user needs to move in
the virtual world just about

00:03:11.340 --> 00:03:13.940
the same way as they
would in the real world.

00:03:13.940 --> 00:03:17.860
To do that, virtual
movement must be correlated

00:03:17.860 --> 00:03:19.690
with physical movement.

00:03:19.690 --> 00:03:23.530
Luckily, we have all
the tools we need.

00:03:23.530 --> 00:03:26.530
Phones have motion
sensors, including

00:03:26.530 --> 00:03:31.160
accelerometers and gyroscopes
to track orientation.

00:03:31.160 --> 00:03:35.440
Using these sensors, Cardboard
can track your head movement.

00:03:35.440 --> 00:03:37.930
So when you look around,
the virtual camera's

00:03:37.930 --> 00:03:39.570
follow your head.

00:03:39.570 --> 00:03:41.090
Back to your to do list.

00:03:41.090 --> 00:03:44.220
We have just one challenge left.

00:03:44.220 --> 00:03:46.920
We talked about drawing
an image to the screen

00:03:46.920 --> 00:03:51.430
and looking around, but how
do we interact with the world?

00:03:51.430 --> 00:03:55.390
Looking around is
nice, but not enough.

00:03:55.390 --> 00:03:58.840
You could connect a game
controller to your phone,

00:03:58.840 --> 00:04:03.340
but we've made it much
more simple and accessible.

00:04:03.340 --> 00:04:07.780
This is where the magnet at
the side comes into play.

00:04:07.780 --> 00:04:10.370
Moving the magnet
creates a distortion

00:04:10.370 --> 00:04:12.250
in the magnetic field.

00:04:12.250 --> 00:04:14.700
The magnetometer
sensors in the phone

00:04:14.700 --> 00:04:17.310
detect it as input,
which can then

00:04:17.310 --> 00:04:20.160
be used to trigger an action.

00:04:20.160 --> 00:04:22.940
And that's how
Cardboard puts the user

00:04:22.940 --> 00:04:25.260
inside the virtual world.

00:04:25.260 --> 00:04:29.160
Now it is your job to create
the next virtual reality

00:04:29.160 --> 00:04:30.690
experience.

00:04:30.690 --> 00:04:35.450
Check out the Cardboard website
for the SDK and code samples,

00:04:35.450 --> 00:04:39.100
and follow up on the next
videos where I will explain how

00:04:39.100 --> 00:04:41.040
to program for Cardboard.

00:04:41.040 --> 00:04:43.320
Until next time.

