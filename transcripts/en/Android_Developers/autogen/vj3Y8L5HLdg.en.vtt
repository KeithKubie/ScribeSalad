WEBVTT
Kind: captions
Language: en

00:00:00.130 --> 00:00:02.789
your apps performance is crucial to your

00:00:02.789 --> 00:00:02.799
your apps performance is crucial to your
 

00:00:02.799 --> 00:00:06.050
your apps performance is crucial to your
users happiness and your app success an

00:00:06.050 --> 00:00:06.060
users happiness and your app success an
 

00:00:06.060 --> 00:00:08.640
users happiness and your app success an
internal study of reviews on Google Play

00:00:08.640 --> 00:00:08.650
internal study of reviews on Google Play
 

00:00:08.650 --> 00:00:10.680
internal study of reviews on Google Play
found that half of one star reviews

00:00:10.680 --> 00:00:10.690
found that half of one star reviews
 

00:00:10.690 --> 00:00:13.879
found that half of one star reviews
mentioned stability or crashes

00:00:13.879 --> 00:00:13.889
mentioned stability or crashes
 

00:00:13.889 --> 00:00:16.580
mentioned stability or crashes
by identifying in fixing issues and bad

00:00:16.580 --> 00:00:16.590
by identifying in fixing issues and bad
 

00:00:16.590 --> 00:00:19.130
by identifying in fixing issues and bad
behaviors you could see happier users

00:00:19.130 --> 00:00:19.140
behaviors you could see happier users
 

00:00:19.140 --> 00:00:20.990
behaviors you could see happier users
and better ratings which will also

00:00:20.990 --> 00:00:21.000
and better ratings which will also
 

00:00:21.000 --> 00:00:24.780
and better ratings which will also
improve your apps discoverability

00:00:24.780 --> 00:00:24.790
improve your apps discoverability
 

00:00:24.790 --> 00:00:28.300
improve your apps discoverability
introducing Android vitals Android

00:00:28.300 --> 00:00:28.310
introducing Android vitals Android
 

00:00:28.310 --> 00:00:30.910
introducing Android vitals Android
vitals in the play console gives you new

00:00:30.910 --> 00:00:30.920
vitals in the play console gives you new
 

00:00:30.920 --> 00:00:32.890
vitals in the play console gives you new
data so you can understand your apps

00:00:32.890 --> 00:00:32.900
data so you can understand your apps
 

00:00:32.900 --> 00:00:35.650
data so you can understand your apps
stability battery usage and render time

00:00:35.650 --> 00:00:35.660
stability battery usage and render time
 

00:00:35.660 --> 00:00:39.360
stability battery usage and render time
on real devices

00:00:39.360 --> 00:00:39.370
 

00:00:39.370 --> 00:00:42.930
stability Android vitals include two bad

00:00:42.930 --> 00:00:42.940
stability Android vitals include two bad
 

00:00:42.940 --> 00:00:44.900
stability Android vitals include two bad
behaviors relating to stability

00:00:44.900 --> 00:00:44.910
behaviors relating to stability
 

00:00:44.910 --> 00:00:47.190
behaviors relating to stability
application not responding errors or a

00:00:47.190 --> 00:00:47.200
application not responding errors or a
 

00:00:47.200 --> 00:00:50.880
application not responding errors or a
NRS and crashes a NRS occur when the

00:00:50.880 --> 00:00:50.890
NRS and crashes a NRS occur when the
 

00:00:50.890 --> 00:00:52.950
NRS and crashes a NRS occur when the
application freezes and stops responding

00:00:52.950 --> 00:00:52.960
application freezes and stops responding
 

00:00:52.960 --> 00:00:55.369
application freezes and stops responding
to user input for more than five seconds

00:00:55.369 --> 00:00:55.379
to user input for more than five seconds
 

00:00:55.379 --> 00:00:57.900
to user input for more than five seconds
this is usually caused by deadlocks

00:00:57.900 --> 00:00:57.910
this is usually caused by deadlocks
 

00:00:57.910 --> 00:01:00.420
this is usually caused by deadlocks
slowness in UI threads or background

00:01:00.420 --> 00:01:00.430
slowness in UI threads or background
 

00:01:00.430 --> 00:01:03.450
slowness in UI threads or background
processes when your app crashes it can

00:01:03.450 --> 00:01:03.460
processes when your app crashes it can
 

00:01:03.460 --> 00:01:05.570
processes when your app crashes it can
be a frustrating experience for the user

00:01:05.570 --> 00:01:05.580
be a frustrating experience for the user
 

00:01:05.580 --> 00:01:08.010
be a frustrating experience for the user
impacting retention and leading to bad

00:01:08.010 --> 00:01:08.020
impacting retention and leading to bad
 

00:01:08.020 --> 00:01:11.190
impacting retention and leading to bad
reviews the crash rate will show you the

00:01:11.190 --> 00:01:11.200
reviews the crash rate will show you the
 

00:01:11.200 --> 00:01:13.440
reviews the crash rate will show you the
percentage of users experiencing crashes

00:01:13.440 --> 00:01:13.450
percentage of users experiencing crashes
 

00:01:13.450 --> 00:01:16.499
percentage of users experiencing crashes
in your app one way to address stability

00:01:16.499 --> 00:01:16.509
in your app one way to address stability
 

00:01:16.509 --> 00:01:18.630
in your app one way to address stability
issues is to run pre launch reports

00:01:18.630 --> 00:01:18.640
issues is to run pre launch reports
 

00:01:18.640 --> 00:01:20.940
issues is to run pre launch reports
which will test your alpha or beta app

00:01:20.940 --> 00:01:20.950
which will test your alpha or beta app
 

00:01:20.950 --> 00:01:23.370
which will test your alpha or beta app
on physical devices so you can identify

00:01:23.370 --> 00:01:23.380
on physical devices so you can identify
 

00:01:23.380 --> 00:01:26.859
on physical devices so you can identify
and fix issues before you launch

00:01:26.859 --> 00:01:26.869
and fix issues before you launch
 

00:01:26.869 --> 00:01:30.639
and fix issues before you launch
battery well-behaved apps don't consume

00:01:30.639 --> 00:01:30.649
battery well-behaved apps don't consume
 

00:01:30.649 --> 00:01:32.950
battery well-behaved apps don't consume
battery by keeping the device radio and

00:01:32.950 --> 00:01:32.960
battery by keeping the device radio and
 

00:01:32.960 --> 00:01:36.669
battery by keeping the device radio and
CPU on unnecessarily Android vitals lets

00:01:36.669 --> 00:01:36.679
CPU on unnecessarily Android vitals lets
 

00:01:36.679 --> 00:01:38.440
CPU on unnecessarily Android vitals lets
you see the metrics for two common

00:01:38.440 --> 00:01:38.450
you see the metrics for two common
 

00:01:38.450 --> 00:01:40.990
you see the metrics for two common
causes of battery drain wake up's and

00:01:40.990 --> 00:01:41.000
causes of battery drain wake up's and
 

00:01:41.000 --> 00:01:44.800
causes of battery drain wake up's and
wake locks wake ups are caused by alarms

00:01:44.800 --> 00:01:44.810
wake locks wake ups are caused by alarms
 

00:01:44.810 --> 00:01:47.080
wake locks wake ups are caused by alarms
performing time-based operations that

00:01:47.080 --> 00:01:47.090
performing time-based operations that
 

00:01:47.090 --> 00:01:49.529
performing time-based operations that
prevent an idle device from sleeping

00:01:49.529 --> 00:01:49.539
prevent an idle device from sleeping
 

00:01:49.539 --> 00:01:52.029
prevent an idle device from sleeping
wake locks are when the app has your

00:01:52.029 --> 00:01:52.039
wake locks are when the app has your
 

00:01:52.039 --> 00:01:54.399
wake locks are when the app has your
device working so hard it won't allow it

00:01:54.399 --> 00:01:54.409
device working so hard it won't allow it
 

00:01:54.409 --> 00:01:58.149
device working so hard it won't allow it
to sleep for better battery life you can

00:01:58.149 --> 00:01:58.159
to sleep for better battery life you can
 

00:01:58.159 --> 00:02:00.880
to sleep for better battery life you can
use job scheduling api's to schedule

00:02:00.880 --> 00:02:00.890
use job scheduling api's to schedule
 

00:02:00.890 --> 00:02:02.979
use job scheduling api's to schedule
asynchronous tasks and specify

00:02:02.979 --> 00:02:02.989
asynchronous tasks and specify
 

00:02:02.989 --> 00:02:06.279
asynchronous tasks and specify
conditions to maximize efficiency this

00:02:06.279 --> 00:02:06.289
conditions to maximize efficiency this
 

00:02:06.289 --> 00:02:08.169
conditions to maximize efficiency this
is suitable for small tasks like

00:02:08.169 --> 00:02:08.179
is suitable for small tasks like
 

00:02:08.179 --> 00:02:10.449
is suitable for small tasks like
clearing a cache and for large ones like

00:02:10.449 --> 00:02:10.459
clearing a cache and for large ones like
 

00:02:10.459 --> 00:02:13.030
clearing a cache and for large ones like
syncing a database to the cloud

00:02:13.030 --> 00:02:13.040
syncing a database to the cloud
 

00:02:13.040 --> 00:02:16.330
syncing a database to the cloud
render time the speed at which your app

00:02:16.330 --> 00:02:16.340
render time the speed at which your app
 

00:02:16.340 --> 00:02:18.880
render time the speed at which your app
renders impacts user perception of your

00:02:18.880 --> 00:02:18.890
renders impacts user perception of your
 

00:02:18.890 --> 00:02:21.250
renders impacts user perception of your
app performance slow render time or

00:02:21.250 --> 00:02:21.260
app performance slow render time or
 

00:02:21.260 --> 00:02:24.250
app performance slow render time or
frozen frames lead to bad reviews apps

00:02:24.250 --> 00:02:24.260
frozen frames lead to bad reviews apps
 

00:02:24.260 --> 00:02:25.960
frozen frames lead to bad reviews apps
that have a render time of 16

00:02:25.960 --> 00:02:25.970
that have a render time of 16
 

00:02:25.970 --> 00:02:28.179
that have a render time of 16
milliseconds or reach 60 frames per

00:02:28.179 --> 00:02:28.189
milliseconds or reach 60 frames per
 

00:02:28.189 --> 00:02:30.640
milliseconds or reach 60 frames per
second produce a silky smooth experience

00:02:30.640 --> 00:02:30.650
second produce a silky smooth experience
 

00:02:30.650 --> 00:02:33.280
second produce a silky smooth experience
for your users this is the rate at which

00:02:33.280 --> 00:02:33.290
for your users this is the rate at which
 

00:02:33.290 --> 00:02:35.589
for your users this is the rate at which
users can perceive smooth motion within

00:02:35.589 --> 00:02:35.599
users can perceive smooth motion within
 

00:02:35.599 --> 00:02:38.589
users can perceive smooth motion within
your app there for Android vitals lets

00:02:38.589 --> 00:02:38.599
your app there for Android vitals lets
 

00:02:38.599 --> 00:02:40.300
your app there for Android vitals lets
you see what percentage of users

00:02:40.300 --> 00:02:40.310
you see what percentage of users
 

00:02:40.310 --> 00:02:43.059
you see what percentage of users
experienced more than 50% of frames with

00:02:43.059 --> 00:02:43.069
experienced more than 50% of frames with
 

00:02:43.069 --> 00:02:44.860
experienced more than 50% of frames with
a render time of greater than 16

00:02:44.860 --> 00:02:44.870
a render time of greater than 16
 

00:02:44.870 --> 00:02:47.289
a render time of greater than 16
milliseconds so you can provide a smooth

00:02:47.289 --> 00:02:47.299
milliseconds so you can provide a smooth
 

00:02:47.299 --> 00:02:50.229
milliseconds so you can provide a smooth
experience across all devices anything

00:02:50.229 --> 00:02:50.239
experience across all devices anything
 

00:02:50.239 --> 00:02:52.149
experience across all devices anything
greater than a render time of 700

00:02:52.149 --> 00:02:52.159
greater than a render time of 700
 

00:02:52.159 --> 00:02:54.339
greater than a render time of 700
milliseconds it's considered a frozen

00:02:54.339 --> 00:02:54.349
milliseconds it's considered a frozen
 

00:02:54.349 --> 00:02:57.280
milliseconds it's considered a frozen
frame and at this rate users consider an

00:02:57.280 --> 00:02:57.290
frame and at this rate users consider an
 

00:02:57.290 --> 00:03:00.490
frame and at this rate users consider an
app to be unresponsive avoid slow render

00:03:00.490 --> 00:03:00.500
app to be unresponsive avoid slow render
 

00:03:00.500 --> 00:03:03.280
app to be unresponsive avoid slow render
times or frozen frames by using frame

00:03:03.280 --> 00:03:03.290
times or frozen frames by using frame
 

00:03:03.290 --> 00:03:06.129
times or frozen frames by using frame
metrics api's to measure per interaction

00:03:06.129 --> 00:03:06.139
metrics api's to measure per interaction
 

00:03:06.139 --> 00:03:08.410
metrics api's to measure per interaction
frame render times for devices during

00:03:08.410 --> 00:03:08.420
frame render times for devices during
 

00:03:08.420 --> 00:03:10.809
frame render times for devices during
production find out about other features

00:03:10.809 --> 00:03:10.819
production find out about other features
 

00:03:10.819 --> 00:03:13.479
production find out about other features
in the play console and get tips to grow

00:03:13.479 --> 00:03:13.489
in the play console and get tips to grow
 

00:03:13.489 --> 00:03:15.699
in the play console and get tips to grow
your app or game business with the

00:03:15.699 --> 00:03:15.709
your app or game business with the
 

00:03:15.709 --> 00:03:19.900
your app or game business with the
PlayBook app available on Google Play

