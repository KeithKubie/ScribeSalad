WEBVTT
Kind: captions
Language: en

00:00:03.319 --> 00:00:06.079
today we are going to talk about how to

00:00:06.079 --> 00:00:06.089
today we are going to talk about how to
 

00:00:06.089 --> 00:00:08.450
today we are going to talk about how to
create a modular android application

00:00:08.450 --> 00:00:08.460
create a modular android application
 

00:00:08.460 --> 00:00:10.940
create a modular android application
architecture obviously the first

00:00:10.940 --> 00:00:10.950
architecture obviously the first
 

00:00:10.950 --> 00:00:13.310
architecture obviously the first
question we should ask ourselves is why

00:00:13.310 --> 00:00:13.320
question we should ask ourselves is why
 

00:00:13.320 --> 00:00:15.079
question we should ask ourselves is why
do we even want to do it and there's a

00:00:15.079 --> 00:00:15.089
do we even want to do it and there's a
 

00:00:15.089 --> 00:00:17.029
do we even want to do it and there's a
couple of reasons so you'll quickly go

00:00:17.029 --> 00:00:17.039
couple of reasons so you'll quickly go
 

00:00:17.039 --> 00:00:20.900
couple of reasons so you'll quickly go
through them the first one is scale so

00:00:20.900 --> 00:00:20.910
through them the first one is scale so
 

00:00:20.910 --> 00:00:22.670
through them the first one is scale so
if you're writing an application with

00:00:22.670 --> 00:00:22.680
if you're writing an application with
 

00:00:22.680 --> 00:00:25.160
if you're writing an application with
you and maybe with your friend like it's

00:00:25.160 --> 00:00:25.170
you and maybe with your friend like it's
 

00:00:25.170 --> 00:00:26.839
you and maybe with your friend like it's
easy it's not going to be too big both

00:00:26.839 --> 00:00:26.849
easy it's not going to be too big both
 

00:00:26.849 --> 00:00:28.640
easy it's not going to be too big both
of you can know everything about the

00:00:28.640 --> 00:00:28.650
of you can know everything about the
 

00:00:28.650 --> 00:00:30.439
of you can know everything about the
application but as your application

00:00:30.439 --> 00:00:30.449
application but as your application
 

00:00:30.449 --> 00:00:32.600
application but as your application
grows you are going to hire more

00:00:32.600 --> 00:00:32.610
grows you are going to hire more
 

00:00:32.610 --> 00:00:34.850
grows you are going to hire more
developers and it will be very hard to

00:00:34.850 --> 00:00:34.860
developers and it will be very hard to
 

00:00:34.860 --> 00:00:37.250
developers and it will be very hard to
work on the application without stepping

00:00:37.250 --> 00:00:37.260
work on the application without stepping
 

00:00:37.260 --> 00:00:40.190
work on the application without stepping
on each other's toes so what you can do

00:00:40.190 --> 00:00:40.200
on each other's toes so what you can do
 

00:00:40.200 --> 00:00:42.290
on each other's toes so what you can do
is you can create these modules where

00:00:42.290 --> 00:00:42.300
is you can create these modules where
 

00:00:42.300 --> 00:00:44.060
is you can create these modules where
people can specialize in certain

00:00:44.060 --> 00:00:44.070
people can specialize in certain
 

00:00:44.070 --> 00:00:46.639
people can specialize in certain
sections of the application and they can

00:00:46.639 --> 00:00:46.649
sections of the application and they can
 

00:00:46.649 --> 00:00:48.889
sections of the application and they can
work independently without swimming down

00:00:48.889 --> 00:00:48.899
work independently without swimming down
 

00:00:48.899 --> 00:00:52.130
work independently without swimming down
others a similar benefit is

00:00:52.130 --> 00:00:52.140
others a similar benefit is
 

00:00:52.140 --> 00:00:54.260
others a similar benefit is
maintainability so if you have a

00:00:54.260 --> 00:00:54.270
maintainability so if you have a
 

00:00:54.270 --> 00:00:56.330
maintainability so if you have a
monolithic application like this where

00:00:56.330 --> 00:00:56.340
monolithic application like this where
 

00:00:56.340 --> 00:00:58.010
monolithic application like this where
you have all these layouts and when you

00:00:58.010 --> 00:00:58.020
you have all these layouts and when you
 

00:00:58.020 --> 00:01:00.200
you have all these layouts and when you
reach to dozens and hundreds of layouts

00:01:00.200 --> 00:01:00.210
reach to dozens and hundreds of layouts
 

00:01:00.210 --> 00:01:02.569
reach to dozens and hundreds of layouts
it's going to be very hard to look at it

00:01:02.569 --> 00:01:02.579
it's going to be very hard to look at it
 

00:01:02.579 --> 00:01:05.390
it's going to be very hard to look at it
and understand what's going on instead

00:01:05.390 --> 00:01:05.400
and understand what's going on instead
 

00:01:05.400 --> 00:01:08.780
and understand what's going on instead
if you group those layouts based on what

00:01:08.780 --> 00:01:08.790
if you group those layouts based on what
 

00:01:08.790 --> 00:01:10.789
if you group those layouts based on what
feature they're in now it will be so

00:01:10.789 --> 00:01:10.799
feature they're in now it will be so
 

00:01:10.799 --> 00:01:12.320
feature they're in now it will be so
much easier when you're looking for

00:01:12.320 --> 00:01:12.330
much easier when you're looking for
 

00:01:12.330 --> 00:01:14.420
much easier when you're looking for
something you will find it there it will

00:01:14.420 --> 00:01:14.430
something you will find it there it will
 

00:01:14.430 --> 00:01:17.859
something you will find it there it will
never be a long list of mere names and

00:01:17.859 --> 00:01:17.869
never be a long list of mere names and
 

00:01:17.869 --> 00:01:20.810
never be a long list of mere names and
that has a new added benefit which is

00:01:20.810 --> 00:01:20.820
that has a new added benefit which is
 

00:01:20.820 --> 00:01:23.749
that has a new added benefit which is
faster incremental compilation so if we

00:01:23.749 --> 00:01:23.759
faster incremental compilation so if we
 

00:01:23.759 --> 00:01:25.640
faster incremental compilation so if we
go back to the previous example where

00:01:25.640 --> 00:01:25.650
go back to the previous example where
 

00:01:25.650 --> 00:01:27.920
go back to the previous example where
you have this monolithic application on

00:01:27.920 --> 00:01:27.930
you have this monolithic application on
 

00:01:27.930 --> 00:01:30.859
you have this monolithic application on
the left and the motorized application

00:01:30.859 --> 00:01:30.869
the left and the motorized application
 

00:01:30.869 --> 00:01:33.170
the left and the motorized application
on the right and we change the same file

00:01:33.170 --> 00:01:33.180
on the right and we change the same file
 

00:01:33.180 --> 00:01:35.929
on the right and we change the same file
in both of these scenarios this is how

00:01:35.929 --> 00:01:35.939
in both of these scenarios this is how
 

00:01:35.939 --> 00:01:38.149
in both of these scenarios this is how
much it's going to invalidate this is

00:01:38.149 --> 00:01:38.159
much it's going to invalidate this is
 

00:01:38.159 --> 00:01:40.399
much it's going to invalidate this is
how much Gradle needs to do ok check all

00:01:40.399 --> 00:01:40.409
how much Gradle needs to do ok check all
 

00:01:40.409 --> 00:01:42.800
how much Gradle needs to do ok check all
of that group run more tasks and those

00:01:42.800 --> 00:01:42.810
of that group run more tasks and those
 

00:01:42.810 --> 00:01:44.899
of that group run more tasks and those
sites will have more inputs and they

00:01:44.899 --> 00:01:44.909
sites will have more inputs and they
 

00:01:44.909 --> 00:01:47.179
sites will have more inputs and they
will take longer to run the smaller they

00:01:47.179 --> 00:01:47.189
will take longer to run the smaller they
 

00:01:47.189 --> 00:01:51.530
will take longer to run the smaller they
are the faster it is similarly you can

00:01:51.530 --> 00:01:51.540
are the faster it is similarly you can
 

00:01:51.540 --> 00:01:53.179
are the faster it is similarly you can
also run your continuous integration

00:01:53.179 --> 00:01:53.189
also run your continuous integration
 

00:01:53.189 --> 00:01:56.179
also run your continuous integration
service faster so if you have an

00:01:56.179 --> 00:01:56.189
service faster so if you have an
 

00:01:56.189 --> 00:01:57.889
service faster so if you have an
application where we have properly

00:01:57.889 --> 00:01:57.899
application where we have properly
 

00:01:57.899 --> 00:01:59.510
application where we have properly
modulized you know we have some couple

00:01:59.510 --> 00:01:59.520
modulized you know we have some couple
 

00:01:59.520 --> 00:02:01.219
modulized you know we have some couple
of small modules and there's bigger

00:02:01.219 --> 00:02:01.229
of small modules and there's bigger
 

00:02:01.229 --> 00:02:02.990
of small modules and there's bigger
modules that depend on them and the

00:02:02.990 --> 00:02:03.000
modules that depend on them and the
 

00:02:03.000 --> 00:02:04.969
modules that depend on them and the
application ATandT depends on all of

00:02:04.969 --> 00:02:04.979
application ATandT depends on all of
 

00:02:04.979 --> 00:02:08.089
application ATandT depends on all of
them if you made a change in this the

00:02:08.089 --> 00:02:08.099
them if you made a change in this the
 

00:02:08.099 --> 00:02:11.690
them if you made a change in this the
same module 5 which tests do you need to

00:02:11.690 --> 00:02:11.700
same module 5 which tests do you need to
 

00:02:11.700 --> 00:02:13.539
same module 5 which tests do you need to
run to make sure that change is good

00:02:13.539 --> 00:02:13.549
run to make sure that change is good
 

00:02:13.549 --> 00:02:16.690
run to make sure that change is good
this is very simple only that one and

00:02:16.690 --> 00:02:16.700
this is very simple only that one and
 

00:02:16.700 --> 00:02:19.600
this is very simple only that one and
anything else that depends on it this is

00:02:19.600 --> 00:02:19.610
anything else that depends on it this is
 

00:02:19.610 --> 00:02:21.399
anything else that depends on it this is
the only test you need to run you don't

00:02:21.399 --> 00:02:21.409
the only test you need to run you don't
 

00:02:21.409 --> 00:02:23.320
the only test you need to run you don't
need to run all of your tests because

00:02:23.320 --> 00:02:23.330
need to run all of your tests because
 

00:02:23.330 --> 00:02:26.309
need to run all of your tests because
the other modules cannot be impacted

00:02:26.309 --> 00:02:26.319
the other modules cannot be impacted
 

00:02:26.319 --> 00:02:28.809
the other modules cannot be impacted
well you might say well we don't have

00:02:28.809 --> 00:02:28.819
well you might say well we don't have
 

00:02:28.819 --> 00:02:31.360
well you might say well we don't have
incremental CI many people are in this

00:02:31.360 --> 00:02:31.370
incremental CI many people are in this
 

00:02:31.370 --> 00:02:33.460
incremental CI many people are in this
situation and it's the same situation

00:02:33.460 --> 00:02:33.470
situation and it's the same situation
 

00:02:33.470 --> 00:02:37.210
situation and it's the same situation
for Android X so this is what we do in

00:02:37.210 --> 00:02:37.220
for Android X so this is what we do in
 

00:02:37.220 --> 00:02:40.960
for Android X so this is what we do in
Android X development we wrote a plug-in

00:02:40.960 --> 00:02:40.970
Android X development we wrote a plug-in
 

00:02:40.970 --> 00:02:43.770
Android X development we wrote a plug-in
that discovers the dependency graph and

00:02:43.770 --> 00:02:43.780
that discovers the dependency graph and
 

00:02:43.780 --> 00:02:46.390
that discovers the dependency graph and
then this plugin looks at the git

00:02:46.390 --> 00:02:46.400
then this plugin looks at the git
 

00:02:46.400 --> 00:02:48.400
then this plugin looks at the git
history figures out which files are

00:02:48.400 --> 00:02:48.410
history figures out which files are
 

00:02:48.410 --> 00:02:50.920
history figures out which files are
changed which modules include that files

00:02:50.920 --> 00:02:50.930
changed which modules include that files
 

00:02:50.930 --> 00:02:54.009
changed which modules include that files
and then discovers which modules are

00:02:54.009 --> 00:02:54.019
and then discovers which modules are
 

00:02:54.019 --> 00:02:56.979
and then discovers which modules are
affected by those changes and then it

00:02:56.979 --> 00:02:56.989
affected by those changes and then it
 

00:02:56.989 --> 00:02:59.770
affected by those changes and then it
only builds the tests for those modules

00:02:59.770 --> 00:02:59.780
only builds the tests for those modules
 

00:02:59.780 --> 00:03:02.080
only builds the tests for those modules
and our test runner runs only those

00:03:02.080 --> 00:03:02.090
and our test runner runs only those
 

00:03:02.090 --> 00:03:05.380
and our test runner runs only those
tests you can go and check it from this

00:03:05.380 --> 00:03:05.390
tests you can go and check it from this
 

00:03:05.390 --> 00:03:08.259
tests you can go and check it from this
URL we will add it to the notes and you

00:03:08.259 --> 00:03:08.269
URL we will add it to the notes and you
 

00:03:08.269 --> 00:03:10.720
URL we will add it to the notes and you
can retrofit for your own build before

00:03:10.720 --> 00:03:10.730
can retrofit for your own build before
 

00:03:10.730 --> 00:03:13.000
can retrofit for your own build before
we did this change our pre-summit in

00:03:13.000 --> 00:03:13.010
we did this change our pre-summit in
 

00:03:13.010 --> 00:03:15.309
we did this change our pre-summit in
Android X was taking around two hours

00:03:15.309 --> 00:03:15.319
Android X was taking around two hours
 

00:03:15.319 --> 00:03:17.740
Android X was taking around two hours
after we made this change it now takes

00:03:17.740 --> 00:03:17.750
after we made this change it now takes
 

00:03:17.750 --> 00:03:19.900
after we made this change it now takes
from 10 to 20 minutes depending on what

00:03:19.900 --> 00:03:19.910
from 10 to 20 minutes depending on what
 

00:03:19.910 --> 00:03:23.949
from 10 to 20 minutes depending on what
you have changed last but not least is

00:03:23.949 --> 00:03:23.959
you have changed last but not least is
 

00:03:23.959 --> 00:03:26.710
you have changed last but not least is
also good for business when you

00:03:26.710 --> 00:03:26.720
also good for business when you
 

00:03:26.720 --> 00:03:28.420
also good for business when you
moisturize your application with

00:03:28.420 --> 00:03:28.430
moisturize your application with
 

00:03:28.430 --> 00:03:30.789
moisturize your application with
abundance and dynamic delivery we will

00:03:30.789 --> 00:03:30.799
abundance and dynamic delivery we will
 

00:03:30.799 --> 00:03:32.409
abundance and dynamic delivery we will
talk about it later you can

00:03:32.409 --> 00:03:32.419
talk about it later you can
 

00:03:32.419 --> 00:03:34.619
talk about it later you can
significantly reduce your install size

00:03:34.619 --> 00:03:34.629
significantly reduce your install size
 

00:03:34.629 --> 00:03:37.960
significantly reduce your install size
from Play Store stats we know that many

00:03:37.960 --> 00:03:37.970
from Play Store stats we know that many
 

00:03:37.970 --> 00:03:40.270
from Play Store stats we know that many
of your users drop between the time they

00:03:40.270 --> 00:03:40.280
of your users drop between the time they
 

00:03:40.280 --> 00:03:42.490
of your users drop between the time they
clicked on install to the time they

00:03:42.490 --> 00:03:42.500
clicked on install to the time they
 

00:03:42.500 --> 00:03:44.680
clicked on install to the time they
start using your application so the

00:03:44.680 --> 00:03:44.690
start using your application so the
 

00:03:44.690 --> 00:03:46.839
start using your application so the
smaller your application the less it

00:03:46.839 --> 00:03:46.849
smaller your application the less it
 

00:03:46.849 --> 00:03:48.400
smaller your application the less it
takes and you will have just more

00:03:48.400 --> 00:03:48.410
takes and you will have just more
 

00:03:48.410 --> 00:03:52.960
takes and you will have just more
signups similarly it also lets you test

00:03:52.960 --> 00:03:52.970
signups similarly it also lets you test
 

00:03:52.970 --> 00:03:54.670
signups similarly it also lets you test
different things let's say you have an

00:03:54.670 --> 00:03:54.680
different things let's say you have an
 

00:03:54.680 --> 00:03:56.740
different things let's say you have an
application that has a camera feature

00:03:56.740 --> 00:03:56.750
application that has a camera feature
 

00:03:56.750 --> 00:03:59.559
application that has a camera feature
and your p.m. comes with this idea I

00:03:59.559 --> 00:03:59.569
and your p.m. comes with this idea I
 

00:03:59.569 --> 00:04:02.020
and your p.m. comes with this idea I
like I found this amazing library it's

00:04:02.020 --> 00:04:02.030
like I found this amazing library it's
 

00:04:02.030 --> 00:04:03.849
like I found this amazing library it's
ten megabytes what takes beautiful

00:04:03.849 --> 00:04:03.859
ten megabytes what takes beautiful
 

00:04:03.859 --> 00:04:06.339
ten megabytes what takes beautiful
photos now you don't need to argue

00:04:06.339 --> 00:04:06.349
photos now you don't need to argue
 

00:04:06.349 --> 00:04:08.020
photos now you don't need to argue
whether it's good or not you can

00:04:08.020 --> 00:04:08.030
whether it's good or not you can
 

00:04:08.030 --> 00:04:09.939
whether it's good or not you can
implement it as a dynamic the delivered

00:04:09.939 --> 00:04:09.949
implement it as a dynamic the delivered
 

00:04:09.949 --> 00:04:12.849
implement it as a dynamic the delivered
feature may be tested see if it helps

00:04:12.849 --> 00:04:12.859
feature may be tested see if it helps
 

00:04:12.859 --> 00:04:15.369
feature may be tested see if it helps
and then distribute to all of your users

00:04:15.369 --> 00:04:15.379
and then distribute to all of your users
 

00:04:15.379 --> 00:04:17.789
and then distribute to all of your users
this gives you a lot more flexibility in

00:04:17.789 --> 00:04:17.799
this gives you a lot more flexibility in
 

00:04:17.799 --> 00:04:19.839
this gives you a lot more flexibility in
trying out different things in your

00:04:19.839 --> 00:04:19.849
trying out different things in your
 

00:04:19.849 --> 00:04:23.459
trying out different things in your
application without hurting your users

00:04:23.459 --> 00:04:23.469
application without hurting your users
 

00:04:23.469 --> 00:04:26.350
application without hurting your users
Mochis modules modules you'll be hearing

00:04:26.350 --> 00:04:26.360
Mochis modules modules you'll be hearing
 

00:04:26.360 --> 00:04:27.060
Mochis modules modules you'll be hearing
a lot

00:04:27.060 --> 00:04:27.070
a lot
 

00:04:27.070 --> 00:04:29.670
a lot
this words in this talk so what kind of

00:04:29.670 --> 00:04:29.680
this words in this talk so what kind of
 

00:04:29.680 --> 00:04:31.410
this words in this talk so what kind of
modules are we actually talking about

00:04:31.410 --> 00:04:31.420
modules are we actually talking about
 

00:04:31.420 --> 00:04:33.990
modules are we actually talking about
here well we're gonna talk about greater

00:04:33.990 --> 00:04:34.000
here well we're gonna talk about greater
 

00:04:34.000 --> 00:04:36.480
here well we're gonna talk about greater
library modules but also dynamic feature

00:04:36.480 --> 00:04:36.490
library modules but also dynamic feature
 

00:04:36.490 --> 00:04:38.490
library modules but also dynamic feature
modules that are part of the android a

00:04:38.490 --> 00:04:38.500
modules that are part of the android a
 

00:04:38.500 --> 00:04:42.120
modules that are part of the android a
bundled packaging concept so let's see

00:04:42.120 --> 00:04:42.130
bundled packaging concept so let's see
 

00:04:42.130 --> 00:04:44.460
bundled packaging concept so let's see
how we define what we put inside a

00:04:44.460 --> 00:04:44.470
how we define what we put inside a
 

00:04:44.470 --> 00:04:47.850
how we define what we put inside a
module how should we motorized so we can

00:04:47.850 --> 00:04:47.860
module how should we motorized so we can
 

00:04:47.860 --> 00:04:51.570
module how should we motorized so we can
do this either by feature or by layer so

00:04:51.570 --> 00:04:51.580
do this either by feature or by layer so
 

00:04:51.580 --> 00:04:52.740
do this either by feature or by layer so
let's start with the feature

00:04:52.740 --> 00:04:52.750
let's start with the feature
 

00:04:52.750 --> 00:04:55.680
let's start with the feature
motorization let's see what module x

00:04:55.680 --> 00:04:55.690
motorization let's see what module x
 

00:04:55.690 --> 00:04:58.110
motorization let's see what module x
would work for features and also what

00:04:58.110 --> 00:04:58.120
would work for features and also what
 

00:04:58.120 --> 00:04:59.910
would work for features and also what
are the different options for packaging

00:04:59.910 --> 00:04:59.920
are the different options for packaging
 

00:04:59.920 --> 00:05:01.590
are the different options for packaging
that we would have and what are the

00:05:01.590 --> 00:05:01.600
that we would have and what are the
 

00:05:01.600 --> 00:05:06.030
that we would have and what are the
implications of these so we would have a

00:05:06.030 --> 00:05:06.040
implications of these so we would have a
 

00:05:06.040 --> 00:05:08.730
implications of these so we would have a
base app that's just an android

00:05:08.730 --> 00:05:08.740
base app that's just an android
 

00:05:08.740 --> 00:05:11.340
base app that's just an android
application and then we could have a

00:05:11.340 --> 00:05:11.350
application and then we could have a
 

00:05:11.350 --> 00:05:14.310
application and then we could have a
module that's an android library the app

00:05:14.310 --> 00:05:14.320
module that's an android library the app
 

00:05:14.320 --> 00:05:17.010
module that's an android library the app
would depend on this library so this

00:05:17.010 --> 00:05:17.020
would depend on this library so this
 

00:05:17.020 --> 00:05:18.930
would depend on this library so this
means that what app would have access to

00:05:18.930 --> 00:05:18.940
means that what app would have access to
 

00:05:18.940 --> 00:05:22.160
means that what app would have access to
the code and resources from module one

00:05:22.160 --> 00:05:22.170
the code and resources from module one
 

00:05:22.170 --> 00:05:25.050
the code and resources from module one
but the other modules can be dynamic

00:05:25.050 --> 00:05:25.060
but the other modules can be dynamic
 

00:05:25.060 --> 00:05:27.120
but the other modules can be dynamic
feature modules and dynamic feature

00:05:27.120 --> 00:05:27.130
feature modules and dynamic feature
 

00:05:27.130 --> 00:05:29.070
feature modules and dynamic feature
modules can be used for on-demand code

00:05:29.070 --> 00:05:29.080
modules can be used for on-demand code
 

00:05:29.080 --> 00:05:32.370
modules can be used for on-demand code
loading via dynamic delivery and they

00:05:32.370 --> 00:05:32.380
loading via dynamic delivery and they
 

00:05:32.380 --> 00:05:34.920
loading via dynamic delivery and they
would also depend on app so this means

00:05:34.920 --> 00:05:34.930
would also depend on app so this means
 

00:05:34.930 --> 00:05:36.810
would also depend on app so this means
that the module 1 and module 2 would

00:05:36.810 --> 00:05:36.820
that the module 1 and module 2 would
 

00:05:36.820 --> 00:05:38.490
that the module 1 and module 2 would
have access to the code and resources

00:05:38.490 --> 00:05:38.500
have access to the code and resources
 

00:05:38.500 --> 00:05:42.570
have access to the code and resources
from app but then I would declare these

00:05:42.570 --> 00:05:42.580
from app but then I would declare these
 

00:05:42.580 --> 00:05:45.330
from app but then I would declare these
modules in in their bid or Gradle file

00:05:45.330 --> 00:05:45.340
modules in in their bid or Gradle file
 

00:05:45.340 --> 00:05:48.510
modules in in their bid or Gradle file
as dynamic feature modules so what's

00:05:48.510 --> 00:05:48.520
as dynamic feature modules so what's
 

00:05:48.520 --> 00:05:50.280
as dynamic feature modules so what's
important to remember here is that app

00:05:50.280 --> 00:05:50.290
important to remember here is that app
 

00:05:50.290 --> 00:05:53.100
important to remember here is that app
doesn't actually depend on module 2 or

00:05:53.100 --> 00:05:53.110
doesn't actually depend on module 2 or
 

00:05:53.110 --> 00:05:54.930
doesn't actually depend on module 2 or
module 3 this is actually the main

00:05:54.930 --> 00:05:54.940
module 3 this is actually the main
 

00:05:54.940 --> 00:05:57.000
module 3 this is actually the main
restriction of the for feature modules

00:05:57.000 --> 00:05:57.010
restriction of the for feature modules
 

00:05:57.010 --> 00:06:00.690
restriction of the for feature modules
in the app so even if the app doesn't

00:06:00.690 --> 00:06:00.700
in the app so even if the app doesn't
 

00:06:00.700 --> 00:06:01.980
in the app so even if the app doesn't
really have access to the code and

00:06:01.980 --> 00:06:01.990
really have access to the code and
 

00:06:01.990 --> 00:06:02.850
really have access to the code and
resources

00:06:02.850 --> 00:06:02.860
resources
 

00:06:02.860 --> 00:06:06.480
resources
I think this allows the option to have

00:06:06.480 --> 00:06:06.490
I think this allows the option to have
 

00:06:06.490 --> 00:06:08.700
I think this allows the option to have
the on-demand delivery of feature

00:06:08.700 --> 00:06:08.710
the on-demand delivery of feature
 

00:06:08.710 --> 00:06:11.850
the on-demand delivery of feature
modules so through dynamic delivery

00:06:11.850 --> 00:06:11.860
modules so through dynamic delivery
 

00:06:11.860 --> 00:06:14.820
modules so through dynamic delivery
users can download and install dynamic

00:06:14.820 --> 00:06:14.830
users can download and install dynamic
 

00:06:14.830 --> 00:06:17.880
users can download and install dynamic
features on demand modules that have

00:06:17.880 --> 00:06:17.890
features on demand modules that have
 

00:06:17.890 --> 00:06:21.540
features on demand modules that have
on-demand turn off our by default added

00:06:21.540 --> 00:06:21.550
on-demand turn off our by default added
 

00:06:21.550 --> 00:06:24.240
on-demand turn off our by default added
as part of your apk of the one that's

00:06:24.240 --> 00:06:24.250
as part of your apk of the one that's
 

00:06:24.250 --> 00:06:26.190
as part of your apk of the one that's
downloaded or installed on your device

00:06:26.190 --> 00:06:26.200
downloaded or installed on your device
 

00:06:26.200 --> 00:06:29.670
downloaded or installed on your device
by the users and if you enable on-demand

00:06:29.670 --> 00:06:29.680
by the users and if you enable on-demand
 

00:06:29.680 --> 00:06:31.640
by the users and if you enable on-demand
delivery it means that you as developers

00:06:31.640 --> 00:06:31.650
delivery it means that you as developers
 

00:06:31.650 --> 00:06:34.950
delivery it means that you as developers
also need to manage the download of the

00:06:34.950 --> 00:06:34.960
also need to manage the download of the
 

00:06:34.960 --> 00:06:38.580
also need to manage the download of the
module from Google Play Store then

00:06:38.580 --> 00:06:38.590
module from Google Play Store then
 

00:06:38.590 --> 00:06:40.030
module from Google Play Store then
shared code

00:06:40.030 --> 00:06:40.040
shared code
 

00:06:40.040 --> 00:06:42.010
shared code
resources would be part of the core

00:06:42.010 --> 00:06:42.020
resources would be part of the core
 

00:06:42.020 --> 00:06:45.660
resources would be part of the core
library and a nice benefit of on-demand

00:06:45.660 --> 00:06:45.670
library and a nice benefit of on-demand
 

00:06:45.670 --> 00:06:49.690
library and a nice benefit of on-demand
delivered modules is that you can depend

00:06:49.690 --> 00:06:49.700
delivered modules is that you can depend
 

00:06:49.700 --> 00:06:51.580
delivered modules is that you can depend
on a third-party library and only

00:06:51.580 --> 00:06:51.590
on a third-party library and only
 

00:06:51.590 --> 00:06:52.930
on a third-party library and only
download it when you're actually

00:06:52.930 --> 00:06:52.940
download it when you're actually
 

00:06:52.940 --> 00:06:55.090
download it when you're actually
downloading that module so this means

00:06:55.090 --> 00:06:55.100
downloading that module so this means
 

00:06:55.100 --> 00:06:57.100
downloading that module so this means
that you're able to decrease your apk

00:06:57.100 --> 00:06:57.110
that you're able to decrease your apk
 

00:06:57.110 --> 00:07:01.540
that you're able to decrease your apk
size even more okay but how do we decide

00:07:01.540 --> 00:07:01.550
size even more okay but how do we decide
 

00:07:01.550 --> 00:07:03.880
size even more okay but how do we decide
what is the dynamic feature module and

00:07:03.880 --> 00:07:03.890
what is the dynamic feature module and
 

00:07:03.890 --> 00:07:06.580
what is the dynamic feature module and
what not so for this I like to look at

00:07:06.580 --> 00:07:06.590
what not so for this I like to look at
 

00:07:06.590 --> 00:07:09.520
what not so for this I like to look at
the 80/20 principle that says that 80%

00:07:09.520 --> 00:07:09.530
the 80/20 principle that says that 80%
 

00:07:09.530 --> 00:07:12.580
the 80/20 principle that says that 80%
of your users are using 20% of your app

00:07:12.580 --> 00:07:12.590
of your users are using 20% of your app
 

00:07:12.590 --> 00:07:15.910
of your users are using 20% of your app
so look at the other 80% look at those

00:07:15.910 --> 00:07:15.920
so look at the other 80% look at those
 

00:07:15.920 --> 00:07:18.010
so look at the other 80% look at those
features that are not part of your core

00:07:18.010 --> 00:07:18.020
features that are not part of your core
 

00:07:18.020 --> 00:07:20.770
features that are not part of your core
flow of the app things like expert

00:07:20.770 --> 00:07:20.780
flow of the app things like expert
 

00:07:20.780 --> 00:07:23.200
flow of the app things like expert
features or paid feature features that

00:07:23.200 --> 00:07:23.210
features or paid feature features that
 

00:07:23.210 --> 00:07:26.530
features or paid feature features that
can be downloaded later similarly you

00:07:26.530 --> 00:07:26.540
can be downloaded later similarly you
 

00:07:26.540 --> 00:07:29.050
can be downloaded later similarly you
can have a feature like onboarding that

00:07:29.050 --> 00:07:29.060
can have a feature like onboarding that
 

00:07:29.060 --> 00:07:31.180
can have a feature like onboarding that
can be afterwards uninstalled later

00:07:31.180 --> 00:07:31.190
can be afterwards uninstalled later
 

00:07:31.190 --> 00:07:33.250
can be afterwards uninstalled later
so here the demand on demand will be

00:07:33.250 --> 00:07:33.260
so here the demand on demand will be
 

00:07:33.260 --> 00:07:35.260
so here the demand on demand will be
false and then you would be able to

00:07:35.260 --> 00:07:35.270
false and then you would be able to
 

00:07:35.270 --> 00:07:38.410
false and then you would be able to
clean up a bit of space but how about

00:07:38.410 --> 00:07:38.420
clean up a bit of space but how about
 

00:07:38.420 --> 00:07:41.410
clean up a bit of space but how about
something like an about screen this is

00:07:41.410 --> 00:07:41.420
something like an about screen this is
 

00:07:41.420 --> 00:07:43.030
something like an about screen this is
something that's not part of the core

00:07:43.030 --> 00:07:43.040
something that's not part of the core
 

00:07:43.040 --> 00:07:45.850
something that's not part of the core
flow of the app should this be on-demand

00:07:45.850 --> 00:07:45.860
flow of the app should this be on-demand
 

00:07:45.860 --> 00:07:47.740
flow of the app should this be on-demand
or not should this be a dynamic feature

00:07:47.740 --> 00:07:47.750
or not should this be a dynamic feature
 

00:07:47.750 --> 00:07:51.460
or not should this be a dynamic feature
or not I think rather this is a better

00:07:51.460 --> 00:07:51.470
or not I think rather this is a better
 

00:07:51.470 --> 00:07:53.860
or not I think rather this is a better
candidate for an Android library because

00:07:53.860 --> 00:07:53.870
candidate for an Android library because
 

00:07:53.870 --> 00:07:56.260
candidate for an Android library because
what you want is to have an instant

00:07:56.260 --> 00:07:56.270
what you want is to have an instant
 

00:07:56.270 --> 00:07:58.180
what you want is to have an instant
access to that Abell screen it's

00:07:58.180 --> 00:07:58.190
access to that Abell screen it's
 

00:07:58.190 --> 00:07:59.740
access to that Abell screen it's
something small you want to make sure

00:07:59.740 --> 00:07:59.750
something small you want to make sure
 

00:07:59.750 --> 00:08:01.210
something small you want to make sure
that you have a good user experience you

00:08:01.210 --> 00:08:01.220
that you have a good user experience you
 

00:08:01.220 --> 00:08:02.890
that you have a good user experience you
don't want the users to wait for this

00:08:02.890 --> 00:08:02.900
don't want the users to wait for this
 

00:08:02.900 --> 00:08:06.130
don't want the users to wait for this
and also I don't think it's worth having

00:08:06.130 --> 00:08:06.140
and also I don't think it's worth having
 

00:08:06.140 --> 00:08:08.320
and also I don't think it's worth having
all the trouble that dynamic features

00:08:08.320 --> 00:08:08.330
all the trouble that dynamic features
 

00:08:08.330 --> 00:08:10.630
all the trouble that dynamic features
modules bring for something simple like

00:08:10.630 --> 00:08:10.640
modules bring for something simple like
 

00:08:10.640 --> 00:08:15.130
modules bring for something simple like
about implant one of our sample apps we

00:08:15.130 --> 00:08:15.140
about implant one of our sample apps we
 

00:08:15.140 --> 00:08:16.290
about implant one of our sample apps we
took a different approach

00:08:16.290 --> 00:08:16.300
took a different approach
 

00:08:16.300 --> 00:08:20.110
took a different approach
so plaid is a newest application it

00:08:20.110 --> 00:08:20.120
so plaid is a newest application it
 

00:08:20.120 --> 00:08:21.790
so plaid is a newest application it
aggregates data from three different

00:08:21.790 --> 00:08:21.800
aggregates data from three different
 

00:08:21.800 --> 00:08:24.490
aggregates data from three different
sources designer use dribble and

00:08:24.490 --> 00:08:24.500
sources designer use dribble and
 

00:08:24.500 --> 00:08:26.950
sources designer use dribble and
producthunt and each of these sources

00:08:26.950 --> 00:08:26.960
producthunt and each of these sources
 

00:08:26.960 --> 00:08:29.530
producthunt and each of these sources
have their own presentation and business

00:08:29.530 --> 00:08:29.540
have their own presentation and business
 

00:08:29.540 --> 00:08:32.680
have their own presentation and business
logic so what we wanted to do is to have

00:08:32.680 --> 00:08:32.690
logic so what we wanted to do is to have
 

00:08:32.690 --> 00:08:35.650
logic so what we wanted to do is to have
the possibility of on-demand delivery so

00:08:35.650 --> 00:08:35.660
the possibility of on-demand delivery so
 

00:08:35.660 --> 00:08:37.870
the possibility of on-demand delivery so
we wanted to be able to download these

00:08:37.870 --> 00:08:37.880
we wanted to be able to download these
 

00:08:37.880 --> 00:08:39.760
we wanted to be able to download these
data sources whenever we need them

00:08:39.760 --> 00:08:39.770
data sources whenever we need them
 

00:08:39.770 --> 00:08:41.680
data sources whenever we need them
wanted to be able to add in the future

00:08:41.680 --> 00:08:41.690
wanted to be able to add in the future
 

00:08:41.690 --> 00:08:45.820
wanted to be able to add in the future
others so this means that designer news

00:08:45.820 --> 00:08:45.830
others so this means that designer news
 

00:08:45.830 --> 00:08:48.630
others so this means that designer news
and dribble are dynamic feature modules

00:08:48.630 --> 00:08:48.640
and dribble are dynamic feature modules
 

00:08:48.640 --> 00:08:51.580
and dribble are dynamic feature modules
but then we looked at something like

00:08:51.580 --> 00:08:51.590
but then we looked at something like
 

00:08:51.590 --> 00:08:53.520
but then we looked at something like
search and about

00:08:53.520 --> 00:08:53.530
search and about
 

00:08:53.530 --> 00:08:55.950
search and about
wouldn't benefit from on-demand delivery

00:08:55.950 --> 00:08:55.960
wouldn't benefit from on-demand delivery
 

00:08:55.960 --> 00:09:00.630
wouldn't benefit from on-demand delivery
so we love these as library modules now

00:09:00.630 --> 00:09:00.640
so we love these as library modules now
 

00:09:00.640 --> 00:09:04.340
so we love these as library modules now
let's see how we can motorized per layer

00:09:04.340 --> 00:09:04.350
let's see how we can motorized per layer
 

00:09:04.350 --> 00:09:06.900
let's see how we can motorized per layer
so one option is the Mojo is the

00:09:06.900 --> 00:09:06.910
so one option is the Mojo is the
 

00:09:06.910 --> 00:09:09.060
so one option is the Mojo is the
application based on features another

00:09:09.060 --> 00:09:09.070
application based on features another
 

00:09:09.070 --> 00:09:12.300
application based on features another
evade simpler option is to use a layered

00:09:12.300 --> 00:09:12.310
evade simpler option is to use a layered
 

00:09:12.310 --> 00:09:14.910
evade simpler option is to use a layered
modulation so what do I have in my days

00:09:14.910 --> 00:09:14.920
modulation so what do I have in my days
 

00:09:14.920 --> 00:09:17.640
modulation so what do I have in my days
so let's look at the plate application

00:09:17.640 --> 00:09:17.650
so let's look at the plate application
 

00:09:17.650 --> 00:09:19.890
so let's look at the plate application
again that flora talked about let's look

00:09:19.890 --> 00:09:19.900
again that flora talked about let's look
 

00:09:19.900 --> 00:09:21.570
again that flora talked about let's look
at what kind of user features we have

00:09:21.570 --> 00:09:21.580
at what kind of user features we have
 

00:09:21.580 --> 00:09:24.140
at what kind of user features we have
and what technologies we need for them

00:09:24.140 --> 00:09:24.150
and what technologies we need for them
 

00:09:24.150 --> 00:09:27.450
and what technologies we need for them
so we said we have stream of memes so we

00:09:27.450 --> 00:09:27.460
so we said we have stream of memes so we
 

00:09:27.460 --> 00:09:29.940
so we said we have stream of memes so we
need a place to persist them we need API

00:09:29.940 --> 00:09:29.950
need a place to persist them we need API
 

00:09:29.950 --> 00:09:31.980
need a place to persist them we need API
clients to fetch them and we also need a

00:09:31.980 --> 00:09:31.990
clients to fetch them and we also need a
 

00:09:31.990 --> 00:09:35.070
clients to fetch them and we also need a
UI that shows those feeds now we have

00:09:35.070 --> 00:09:35.080
UI that shows those feeds now we have
 

00:09:35.080 --> 00:09:36.780
UI that shows those feeds now we have
multiple news providers so we need

00:09:36.780 --> 00:09:36.790
multiple news providers so we need
 

00:09:36.790 --> 00:09:38.720
multiple news providers so we need
probably different web service clients

00:09:38.720 --> 00:09:38.730
probably different web service clients
 

00:09:38.730 --> 00:09:41.850
probably different web service clients
we want to have custom styles because we

00:09:41.850 --> 00:09:41.860
we want to have custom styles because we
 

00:09:41.860 --> 00:09:44.460
we want to have custom styles because we
want the style these needs based on

00:09:44.460 --> 00:09:44.470
want the style these needs based on
 

00:09:44.470 --> 00:09:46.830
want the style these needs based on
their source so meet the cost of styling

00:09:46.830 --> 00:09:46.840
their source so meet the cost of styling
 

00:09:46.840 --> 00:09:49.410
their source so meet the cost of styling
library and we need authentication

00:09:49.410 --> 00:09:49.420
library and we need authentication
 

00:09:49.420 --> 00:09:51.300
library and we need authentication
because we want people to be able to

00:09:51.300 --> 00:09:51.310
because we want people to be able to
 

00:09:51.310 --> 00:09:53.970
because we want people to be able to
walk on and comment on these stories

00:09:53.970 --> 00:09:53.980
walk on and comment on these stories
 

00:09:53.980 --> 00:09:56.280
walk on and comment on these stories
which means we also need a posse eye

00:09:56.280 --> 00:09:56.290
which means we also need a posse eye
 

00:09:56.290 --> 00:09:58.350
which means we also need a posse eye
where people can see the details of a

00:09:58.350 --> 00:09:58.360
where people can see the details of a
 

00:09:58.360 --> 00:10:00.330
where people can see the details of a
story and the comments associated with

00:10:00.330 --> 00:10:00.340
story and the comments associated with
 

00:10:00.340 --> 00:10:03.750
story and the comments associated with
it so I will take a bottoms-up approach

00:10:03.750 --> 00:10:03.760
it so I will take a bottoms-up approach
 

00:10:03.760 --> 00:10:07.440
it so I will take a bottoms-up approach
here we start with the database using

00:10:07.440 --> 00:10:07.450
here we start with the database using
 

00:10:07.450 --> 00:10:10.740
here we start with the database using
growth I guess it's a good wad and

00:10:10.740 --> 00:10:10.750
growth I guess it's a good wad and
 

00:10:10.750 --> 00:10:12.990
growth I guess it's a good wad and
inside this database module we have our

00:10:12.990 --> 00:10:13.000
inside this database module we have our
 

00:10:13.000 --> 00:10:15.690
inside this database module we have our
entities and data access objects and

00:10:15.690 --> 00:10:15.700
entities and data access objects and
 

00:10:15.700 --> 00:10:18.000
entities and data access objects and
then we have a web service module on the

00:10:18.000 --> 00:10:18.010
then we have a web service module on the
 

00:10:18.010 --> 00:10:20.940
then we have a web service module on the
site that depends on retrofit and a

00:10:20.940 --> 00:10:20.950
site that depends on retrofit and a
 

00:10:20.950 --> 00:10:22.980
site that depends on retrofit and a
jsonparser because all of the api's we

00:10:22.980 --> 00:10:22.990
jsonparser because all of the api's we
 

00:10:22.990 --> 00:10:25.350
jsonparser because all of the api's we
use here use JSON parser we can use

00:10:25.350 --> 00:10:25.360
use here use JSON parser we can use
 

00:10:25.360 --> 00:10:28.110
use here use JSON parser we can use
Moshi and it also has data transfer

00:10:28.110 --> 00:10:28.120
Moshi and it also has data transfer
 

00:10:28.120 --> 00:10:29.570
Moshi and it also has data transfer
objects we will talk about them later

00:10:29.570 --> 00:10:29.580
objects we will talk about them later
 

00:10:29.580 --> 00:10:32.100
objects we will talk about them later
now we have our repositories this is

00:10:32.100 --> 00:10:32.110
now we have our repositories this is
 

00:10:32.110 --> 00:10:34.590
now we have our repositories this is
where most of our actual business logic

00:10:34.590 --> 00:10:34.600
where most of our actual business logic
 

00:10:34.600 --> 00:10:37.200
where most of our actual business logic
lives in and now we have things like

00:10:37.200 --> 00:10:37.210
lives in and now we have things like
 

00:10:37.210 --> 00:10:39.630
lives in and now we have things like
user repository or deliver repository

00:10:39.630 --> 00:10:39.640
user repository or deliver repository
 

00:10:39.640 --> 00:10:42.930
user repository or deliver repository
for stuff coming from drivel on top we

00:10:42.930 --> 00:10:42.940
for stuff coming from drivel on top we
 

00:10:42.940 --> 00:10:45.690
for stuff coming from drivel on top we
have our user interfaces which just talk

00:10:45.690 --> 00:10:45.700
have our user interfaces which just talk
 

00:10:45.700 --> 00:10:48.180
have our user interfaces which just talk
to these repositories to display whether

00:10:48.180 --> 00:10:48.190
to these repositories to display whether
 

00:10:48.190 --> 00:10:49.200
to these repositories to display whether
is necessary

00:10:49.200 --> 00:10:49.210
is necessary
 

00:10:49.210 --> 00:10:51.750
is necessary
last but not least we said we also need

00:10:51.750 --> 00:10:51.760
last but not least we said we also need
 

00:10:51.760 --> 00:10:54.180
last but not least we said we also need
a custom styling library but it can be a

00:10:54.180 --> 00:10:54.190
a custom styling library but it can be a
 

00:10:54.190 --> 00:10:56.160
a custom styling library but it can be a
module just by itself because not really

00:10:56.160 --> 00:10:56.170
module just by itself because not really
 

00:10:56.170 --> 00:11:00.720
module just by itself because not really
related to our application now let's see

00:11:00.720 --> 00:11:00.730
related to our application now let's see
 

00:11:00.730 --> 00:11:02.820
related to our application now let's see
how we can benefit from this kind of

00:11:02.820 --> 00:11:02.830
how we can benefit from this kind of
 

00:11:02.830 --> 00:11:03.510
how we can benefit from this kind of
layering

00:11:03.510 --> 00:11:03.520
layering
 

00:11:03.520 --> 00:11:06.650
layering
one option is isolation

00:11:06.650 --> 00:11:06.660
one option is isolation
 

00:11:06.660 --> 00:11:08.990
one option is isolation
so there's a little crash course here

00:11:08.990 --> 00:11:09.000
so there's a little crash course here
 

00:11:09.000 --> 00:11:11.540
so there's a little crash course here
when a module says I depend on another

00:11:11.540 --> 00:11:11.550
when a module says I depend on another
 

00:11:11.550 --> 00:11:14.860
when a module says I depend on another
module it can either say API or

00:11:14.860 --> 00:11:14.870
module it can either say API or
 

00:11:14.870 --> 00:11:17.810
module it can either say API or
implementations now is my know is

00:11:17.810 --> 00:11:17.820
implementations now is my know is
 

00:11:17.820 --> 00:11:19.040
implementations now is my know is
confusing so I'm going to quickly

00:11:19.040 --> 00:11:19.050
confusing so I'm going to quickly
 

00:11:19.050 --> 00:11:22.070
confusing so I'm going to quickly
explain them when a module a says I have

00:11:22.070 --> 00:11:22.080
explain them when a module a says I have
 

00:11:22.080 --> 00:11:24.680
explain them when a module a says I have
an API dependence on module B that means

00:11:24.680 --> 00:11:24.690
an API dependence on module B that means
 

00:11:24.690 --> 00:11:27.140
an API dependence on module B that means
all of the public functionality provided

00:11:27.140 --> 00:11:27.150
all of the public functionality provided
 

00:11:27.150 --> 00:11:30.920
all of the public functionality provided
by module B is also provided my B so my

00:11:30.920 --> 00:11:30.930
by module B is also provided my B so my
 

00:11:30.930 --> 00:11:33.710
by module B is also provided my B so my
dependents can access module B's public

00:11:33.710 --> 00:11:33.720
dependents can access module B's public
 

00:11:33.720 --> 00:11:36.470
dependents can access module B's public
API but if it says it's an

00:11:36.470 --> 00:11:36.480
API but if it says it's an
 

00:11:36.480 --> 00:11:40.730
API but if it says it's an
implementation detail then modules that

00:11:40.730 --> 00:11:40.740
implementation detail then modules that
 

00:11:40.740 --> 00:11:43.160
implementation detail then modules that
depend on a cannot see B they shouldn't

00:11:43.160 --> 00:11:43.170
depend on a cannot see B they shouldn't
 

00:11:43.170 --> 00:11:45.260
depend on a cannot see B they shouldn't
know about B and this gives us some

00:11:45.260 --> 00:11:45.270
know about B and this gives us some
 

00:11:45.270 --> 00:11:47.750
know about B and this gives us some
power so let's get a practical example

00:11:47.750 --> 00:11:47.760
power so let's get a practical example
 

00:11:47.760 --> 00:11:50.810
power so let's get a practical example
where we have an API that returns us a

00:11:50.810 --> 00:11:50.820
where we have an API that returns us a
 

00:11:50.820 --> 00:11:53.300
where we have an API that returns us a
list of comments each comment has some

00:11:53.300 --> 00:11:53.310
list of comments each comment has some
 

00:11:53.310 --> 00:11:56.570
list of comments each comment has some
data inside it and we have a user object

00:11:56.570 --> 00:11:56.580
data inside it and we have a user object
 

00:11:56.580 --> 00:11:58.910
data inside it and we have a user object
who about who made that comment now if

00:11:58.910 --> 00:11:58.920
who about who made that comment now if
 

00:11:58.920 --> 00:12:00.710
who about who made that comment now if
we want to move this to our database is

00:12:00.710 --> 00:12:00.720
we want to move this to our database is
 

00:12:00.720 --> 00:12:02.630
we want to move this to our database is
going to persist it so we create a

00:12:02.630 --> 00:12:02.640
going to persist it so we create a
 

00:12:02.640 --> 00:12:06.440
going to persist it so we create a
entity as our comment entity inside that

00:12:06.440 --> 00:12:06.450
entity as our comment entity inside that
 

00:12:06.450 --> 00:12:09.200
entity as our comment entity inside that
we have an ID we have the text and the

00:12:09.200 --> 00:12:09.210
we have an ID we have the text and the
 

00:12:09.210 --> 00:12:12.610
we have an ID we have the text and the
user now if you look at this entity

00:12:12.610 --> 00:12:12.620
user now if you look at this entity
 

00:12:12.620 --> 00:12:15.020
user now if you look at this entity
there's a little problem here because

00:12:15.020 --> 00:12:15.030
there's a little problem here because
 

00:12:15.030 --> 00:12:16.550
there's a little problem here because
probably we have the same users

00:12:16.550 --> 00:12:16.560
probably we have the same users
 

00:12:16.560 --> 00:12:18.380
probably we have the same users
commenting all the time so it's not a

00:12:18.380 --> 00:12:18.390
commenting all the time so it's not a
 

00:12:18.390 --> 00:12:19.780
commenting all the time so it's not a
very good idea to keep that information

00:12:19.780 --> 00:12:19.790
very good idea to keep that information
 

00:12:19.790 --> 00:12:22.580
very good idea to keep that information
inside the comment object because like

00:12:22.580 --> 00:12:22.590
inside the comment object because like
 

00:12:22.590 --> 00:12:24.380
inside the comment object because like
if a user changes their profile photo

00:12:24.380 --> 00:12:24.390
if a user changes their profile photo
 

00:12:24.390 --> 00:12:26.390
if a user changes their profile photo
you need to go and update all of them

00:12:26.390 --> 00:12:26.400
you need to go and update all of them
 

00:12:26.400 --> 00:12:28.910
you need to go and update all of them
either option you can do is just create

00:12:28.910 --> 00:12:28.920
either option you can do is just create
 

00:12:28.920 --> 00:12:31.370
either option you can do is just create
a user table but then we cannot do it

00:12:31.370 --> 00:12:31.380
a user table but then we cannot do it
 

00:12:31.380 --> 00:12:33.410
a user table but then we cannot do it
because our server says the user inside

00:12:33.410 --> 00:12:33.420
because our server says the user inside
 

00:12:33.420 --> 00:12:35.480
because our server says the user inside
the comment object there's a very easy

00:12:35.480 --> 00:12:35.490
the comment object there's a very easy
 

00:12:35.490 --> 00:12:37.670
the comment object there's a very easy
solution for this kind of problems we

00:12:37.670 --> 00:12:37.680
solution for this kind of problems we
 

00:12:37.680 --> 00:12:40.190
solution for this kind of problems we
can make this a data transfer object a

00:12:40.190 --> 00:12:40.200
can make this a data transfer object a
 

00:12:40.200 --> 00:12:42.170
can make this a data transfer object a
data transfer object is specifically

00:12:42.170 --> 00:12:42.180
data transfer object is specifically
 

00:12:42.180 --> 00:12:43.910
data transfer object is specifically
designed to get the data from your

00:12:43.910 --> 00:12:43.920
designed to get the data from your
 

00:12:43.920 --> 00:12:45.800
designed to get the data from your
back-end to a format that your

00:12:45.800 --> 00:12:45.810
back-end to a format that your
 

00:12:45.810 --> 00:12:48.260
back-end to a format that your
application can understand now we can

00:12:48.260 --> 00:12:48.270
application can understand now we can
 

00:12:48.270 --> 00:12:50.030
application can understand now we can
have a separate object for our database

00:12:50.030 --> 00:12:50.040
have a separate object for our database
 

00:12:50.040 --> 00:12:53.000
have a separate object for our database
that will call that one comment and that

00:12:53.000 --> 00:12:53.010
that will call that one comment and that
 

00:12:53.010 --> 00:12:55.040
that will call that one comment and that
one can have the user ID we also have a

00:12:55.040 --> 00:12:55.050
one can have the user ID we also have a
 

00:12:55.050 --> 00:12:57.920
one can have the user ID we also have a
user table but now why did we do this

00:12:57.920 --> 00:12:57.930
user table but now why did we do this
 

00:12:57.930 --> 00:12:59.780
user table but now why did we do this
separation let's see how it plays in

00:12:59.780 --> 00:12:59.790
separation let's see how it plays in
 

00:12:59.790 --> 00:13:02.860
separation let's see how it plays in
practice so go through the scenario our

00:13:02.860 --> 00:13:02.870
practice so go through the scenario our
 

00:13:02.870 --> 00:13:05.600
practice so go through the scenario our
repository calls the web service to get

00:13:05.600 --> 00:13:05.610
repository calls the web service to get
 

00:13:05.610 --> 00:13:08.270
repository calls the web service to get
the comments we get the list of comment

00:13:08.270 --> 00:13:08.280
the comments we get the list of comment
 

00:13:08.280 --> 00:13:11.150
the comments we get the list of comment
details than the repository devices into

00:13:11.150 --> 00:13:11.160
details than the repository devices into
 

00:13:11.160 --> 00:13:13.040
details than the repository devices into
two it divides them into users and

00:13:13.040 --> 00:13:13.050
two it divides them into users and
 

00:13:13.050 --> 00:13:15.590
two it divides them into users and
comments and pushes them back to the

00:13:15.590 --> 00:13:15.600
comments and pushes them back to the
 

00:13:15.600 --> 00:13:18.620
comments and pushes them back to the
database now let's look at how we

00:13:18.620 --> 00:13:18.630
database now let's look at how we
 

00:13:18.630 --> 00:13:19.820
database now let's look at how we
declare the word

00:13:19.820 --> 00:13:19.830
declare the word
 

00:13:19.830 --> 00:13:22.970
declare the word
fundin sees now our web server says I

00:13:22.970 --> 00:13:22.980
fundin sees now our web server says I
 

00:13:22.980 --> 00:13:24.860
fundin sees now our web server says I
have an implementation dependency on

00:13:24.860 --> 00:13:24.870
have an implementation dependency on
 

00:13:24.870 --> 00:13:27.410
have an implementation dependency on
retrofit because the upholstery doesn't

00:13:27.410 --> 00:13:27.420
retrofit because the upholstery doesn't
 

00:13:27.420 --> 00:13:29.270
retrofit because the upholstery doesn't
need to know about that it doesn't

00:13:29.270 --> 00:13:29.280
need to know about that it doesn't
 

00:13:29.280 --> 00:13:30.470
need to know about that it doesn't
matter

00:13:30.470 --> 00:13:30.480
matter
 

00:13:30.480 --> 00:13:32.690
matter
similarly database says I'm using room

00:13:32.690 --> 00:13:32.700
similarly database says I'm using room
 

00:13:32.700 --> 00:13:35.530
similarly database says I'm using room
but no one else needs to know about it

00:13:35.530 --> 00:13:35.540
but no one else needs to know about it
 

00:13:35.540 --> 00:13:38.150
but no one else needs to know about it
reporter says I'm using the web services

00:13:38.150 --> 00:13:38.160
reporter says I'm using the web services
 

00:13:38.160 --> 00:13:40.610
reporter says I'm using the web services
and implementation dependency because UI

00:13:40.610 --> 00:13:40.620
and implementation dependency because UI
 

00:13:40.620 --> 00:13:42.320
and implementation dependency because UI
doesn't need to know where the data is

00:13:42.320 --> 00:13:42.330
doesn't need to know where the data is
 

00:13:42.330 --> 00:13:45.620
doesn't need to know where the data is
coming from but then here we say we have

00:13:45.620 --> 00:13:45.630
coming from but then here we say we have
 

00:13:45.630 --> 00:13:47.840
coming from but then here we say we have
an API dependency on the database so in

00:13:47.840 --> 00:13:47.850
an API dependency on the database so in
 

00:13:47.850 --> 00:13:49.460
an API dependency on the database so in
this example we are doing it because

00:13:49.460 --> 00:13:49.470
this example we are doing it because
 

00:13:49.470 --> 00:13:51.860
this example we are doing it because
it's very likely that the same object we

00:13:51.860 --> 00:13:51.870
it's very likely that the same object we
 

00:13:51.870 --> 00:13:54.470
it's very likely that the same object we
are using in the database is what we

00:13:54.470 --> 00:13:54.480
are using in the database is what we
 

00:13:54.480 --> 00:13:56.990
are using in the database is what we
also want to use in the UI or like model

00:13:56.990 --> 00:13:57.000
also want to use in the UI or like model
 

00:13:57.000 --> 00:13:58.580
also want to use in the UI or like model
might be pulling these objects as

00:13:58.580 --> 00:13:58.590
might be pulling these objects as
 

00:13:58.590 --> 00:14:01.610
might be pulling these objects as
different poles from the database for

00:14:01.610 --> 00:14:01.620
different poles from the database for
 

00:14:01.620 --> 00:14:03.890
different poles from the database for
our UI so we need to set it as an API

00:14:03.890 --> 00:14:03.900
our UI so we need to set it as an API
 

00:14:03.900 --> 00:14:09.080
our UI so we need to set it as an API
dependency now which is fine but not

00:14:09.080 --> 00:14:09.090
dependency now which is fine but not
 

00:14:09.090 --> 00:14:11.330
dependency now which is fine but not
that fine because now our user interface

00:14:11.330 --> 00:14:11.340
that fine because now our user interface
 

00:14:11.340 --> 00:14:14.270
that fine because now our user interface
can see the entities we want that but we

00:14:14.270 --> 00:14:14.280
can see the entities we want that but we
 

00:14:14.280 --> 00:14:16.160
can see the entities we want that but we
don't want our user interfaces to have

00:14:16.160 --> 00:14:16.170
don't want our user interfaces to have
 

00:14:16.170 --> 00:14:18.050
don't want our user interfaces to have
access to the database because if they

00:14:18.050 --> 00:14:18.060
access to the database because if they
 

00:14:18.060 --> 00:14:20.300
access to the database because if they
access the database not we'll loss to

00:14:20.300 --> 00:14:20.310
access the database not we'll loss to
 

00:14:20.310 --> 00:14:21.980
access the database not we'll loss to
layering because they know where the

00:14:21.980 --> 00:14:21.990
layering because they know where the
 

00:14:21.990 --> 00:14:23.060
layering because they know where the
data is coming from

00:14:23.060 --> 00:14:23.070
data is coming from
 

00:14:23.070 --> 00:14:25.610
data is coming from
they shouldn't that's the theory now

00:14:25.610 --> 00:14:25.620
they shouldn't that's the theory now
 

00:14:25.620 --> 00:14:27.530
they shouldn't that's the theory now
there is two options you can do here you

00:14:27.530 --> 00:14:27.540
there is two options you can do here you
 

00:14:27.540 --> 00:14:29.990
there is two options you can do here you
can define it this you know if someone

00:14:29.990 --> 00:14:30.000
can define it this you know if someone
 

00:14:30.000 --> 00:14:31.490
can define it this you know if someone
writes a code that makes a database

00:14:31.490 --> 00:14:31.500
writes a code that makes a database
 

00:14:31.500 --> 00:14:33.350
writes a code that makes a database
query in the UI layer you know like no

00:14:33.350 --> 00:14:33.360
query in the UI layer you know like no
 

00:14:33.360 --> 00:14:35.720
query in the UI layer you know like no
no no you shouldn't do this or you can

00:14:35.720 --> 00:14:35.730
no no you shouldn't do this or you can
 

00:14:35.730 --> 00:14:38.510
no no you shouldn't do this or you can
take this one step further we could

00:14:38.510 --> 00:14:38.520
take this one step further we could
 

00:14:38.520 --> 00:14:40.430
take this one step further we could
create another module base for all of

00:14:40.430 --> 00:14:40.440
create another module base for all of
 

00:14:40.440 --> 00:14:42.440
create another module base for all of
our common value objects that we use

00:14:42.440 --> 00:14:42.450
our common value objects that we use
 

00:14:42.450 --> 00:14:44.810
our common value objects that we use
across the application some of those

00:14:44.810 --> 00:14:44.820
across the application some of those
 

00:14:44.820 --> 00:14:46.760
across the application some of those
might be entities some of them might be

00:14:46.760 --> 00:14:46.770
might be entities some of them might be
 

00:14:46.770 --> 00:14:48.950
might be entities some of them might be
just regular value objects and in your

00:14:48.950 --> 00:14:48.960
just regular value objects and in your
 

00:14:48.960 --> 00:14:50.540
just regular value objects and in your
database module you can have other

00:14:50.540 --> 00:14:50.550
database module you can have other
 

00:14:50.550 --> 00:14:53.090
database module you can have other
entities and your doors now the

00:14:53.090 --> 00:14:53.100
entities and your doors now the
 

00:14:53.100 --> 00:14:55.040
entities and your doors now the
repository can say I have an API

00:14:55.040 --> 00:14:55.050
repository can say I have an API
 

00:14:55.050 --> 00:14:57.620
repository can say I have an API
dependency on this value objects versus

00:14:57.620 --> 00:14:57.630
dependency on this value objects versus
 

00:14:57.630 --> 00:14:59.510
dependency on this value objects versus
just an implementation dependency on the

00:14:59.510 --> 00:14:59.520
just an implementation dependency on the
 

00:14:59.520 --> 00:15:03.020
just an implementation dependency on the
database must we do that our UI only has

00:15:03.020 --> 00:15:03.030
database must we do that our UI only has
 

00:15:03.030 --> 00:15:05.510
database must we do that our UI only has
access to the classes we want it to be

00:15:05.510 --> 00:15:05.520
access to the classes we want it to be
 

00:15:05.520 --> 00:15:07.700
access to the classes we want it to be
able to access so we get finer control

00:15:07.700 --> 00:15:07.710
able to access so we get finer control
 

00:15:07.710 --> 00:15:11.300
able to access so we get finer control
over them another nice benefit of this

00:15:11.300 --> 00:15:11.310
over them another nice benefit of this
 

00:15:11.310 --> 00:15:15.650
over them another nice benefit of this
kind of modulation is testing so we said

00:15:15.650 --> 00:15:15.660
kind of modulation is testing so we said
 

00:15:15.660 --> 00:15:17.510
kind of modulation is testing so we said
we have a repositories and we have a

00:15:17.510 --> 00:15:17.520
we have a repositories and we have a
 

00:15:17.520 --> 00:15:20.360
we have a repositories and we have a
user repository here whoever is writing

00:15:20.360 --> 00:15:20.370
user repository here whoever is writing
 

00:15:20.370 --> 00:15:22.910
user repository here whoever is writing
user repository can also create a fake

00:15:22.910 --> 00:15:22.920
user repository can also create a fake
 

00:15:22.920 --> 00:15:24.920
user repository can also create a fake
implementation of it a fake

00:15:24.920 --> 00:15:24.930
implementation of it a fake
 

00:15:24.930 --> 00:15:27.500
implementation of it a fake
implementation has the same API probably

00:15:27.500 --> 00:15:27.510
implementation has the same API probably
 

00:15:27.510 --> 00:15:29.660
implementation has the same API probably
extends or implements the user interface

00:15:29.660 --> 00:15:29.670
extends or implements the user interface
 

00:15:29.670 --> 00:15:32.840
extends or implements the user interface
but provides additional functionality so

00:15:32.840 --> 00:15:32.850
but provides additional functionality so
 

00:15:32.850 --> 00:15:33.710
but provides additional functionality so
our use

00:15:33.710 --> 00:15:33.720
our use
 

00:15:33.720 --> 00:15:35.900
our use
the poster is a good user function I get

00:15:35.900 --> 00:15:35.910
the poster is a good user function I get
 

00:15:35.910 --> 00:15:37.699
the poster is a good user function I get
user function that returns a live data

00:15:37.699 --> 00:15:37.709
user function that returns a live data
 

00:15:37.709 --> 00:15:40.040
user function that returns a live data
or user the fake one has the same

00:15:40.040 --> 00:15:40.050
or user the fake one has the same
 

00:15:40.050 --> 00:15:42.259
or user the fake one has the same
functionality but can have other things

00:15:42.259 --> 00:15:42.269
functionality but can have other things
 

00:15:42.269 --> 00:15:45.740
functionality but can have other things
like put this user or put this user as

00:15:45.740 --> 00:15:45.750
like put this user or put this user as
 

00:15:45.750 --> 00:15:47.509
like put this user or put this user as
an error these are the things you will

00:15:47.509 --> 00:15:47.519
an error these are the things you will
 

00:15:47.519 --> 00:15:48.949
an error these are the things you will
need when you are trying to write your

00:15:48.949 --> 00:15:48.959
need when you are trying to write your
 

00:15:48.959 --> 00:15:52.490
need when you are trying to write your
UI tests once we have that in our

00:15:52.490 --> 00:15:52.500
UI tests once we have that in our
 

00:15:52.500 --> 00:15:54.379
UI tests once we have that in our
application we can make the main UI

00:15:54.379 --> 00:15:54.389
application we can make the main UI
 

00:15:54.389 --> 00:15:55.850
application we can make the main UI
component depend on the actual

00:15:55.850 --> 00:15:55.860
component depend on the actual
 

00:15:55.860 --> 00:15:58.699
component depend on the actual
implementation and the test UI component

00:15:58.699 --> 00:15:58.709
implementation and the test UI component
 

00:15:58.709 --> 00:16:00.829
implementation and the test UI component
depend on the fakes this will make it

00:16:00.829 --> 00:16:00.839
depend on the fakes this will make it
 

00:16:00.839 --> 00:16:02.480
depend on the fakes this will make it
very easy this is a much better approach

00:16:02.480 --> 00:16:02.490
very easy this is a much better approach
 

00:16:02.490 --> 00:16:05.090
very easy this is a much better approach
than trying to mock it because when you

00:16:05.090 --> 00:16:05.100
than trying to mock it because when you
 

00:16:05.100 --> 00:16:06.710
than trying to mock it because when you
mock something you don't know how it is

00:16:06.710 --> 00:16:06.720
mock something you don't know how it is
 

00:16:06.720 --> 00:16:09.410
mock something you don't know how it is
supposed to behave versus the person who

00:16:09.410 --> 00:16:09.420
supposed to behave versus the person who
 

00:16:09.420 --> 00:16:11.540
supposed to behave versus the person who
is writing the repository knows how it

00:16:11.540 --> 00:16:11.550
is writing the repository knows how it
 

00:16:11.550 --> 00:16:13.100
is writing the repository knows how it
will behave so they can create a much

00:16:13.100 --> 00:16:13.110
will behave so they can create a much
 

00:16:13.110 --> 00:16:16.040
will behave so they can create a much
better fake for you okay

00:16:16.040 --> 00:16:16.050
better fake for you okay
 

00:16:16.050 --> 00:16:18.079
better fake for you okay
so we looked at how to modernize by

00:16:18.079 --> 00:16:18.089
so we looked at how to modernize by
 

00:16:18.089 --> 00:16:19.910
so we looked at how to modernize by
feature and by layer feature

00:16:19.910 --> 00:16:19.920
feature and by layer feature
 

00:16:19.920 --> 00:16:22.040
feature and by layer feature
motorisation brings you encapsulation

00:16:22.040 --> 00:16:22.050
motorisation brings you encapsulation
 

00:16:22.050 --> 00:16:23.960
motorisation brings you encapsulation
and the possibility of on-demand

00:16:23.960 --> 00:16:23.970
and the possibility of on-demand
 

00:16:23.970 --> 00:16:27.860
and the possibility of on-demand
delivery what relation per layer brings

00:16:27.860 --> 00:16:27.870
delivery what relation per layer brings
 

00:16:27.870 --> 00:16:30.350
delivery what relation per layer brings
you isolation allows you to isolate your

00:16:30.350 --> 00:16:30.360
you isolation allows you to isolate your
 

00:16:30.360 --> 00:16:32.179
you isolation allows you to isolate your
third-party dependencies or the layers

00:16:32.179 --> 00:16:32.189
third-party dependencies or the layers
 

00:16:32.189 --> 00:16:34.850
third-party dependencies or the layers
in your app and also bring structure to

00:16:34.850 --> 00:16:34.860
in your app and also bring structure to
 

00:16:34.860 --> 00:16:38.090
in your app and also bring structure to
your app but you can also mix and match

00:16:38.090 --> 00:16:38.100
your app but you can also mix and match
 

00:16:38.100 --> 00:16:41.210
your app but you can also mix and match
apply a feature and layer motorisation

00:16:41.210 --> 00:16:41.220
apply a feature and layer motorisation
 

00:16:41.220 --> 00:16:43.249
apply a feature and layer motorisation
but if you're starting from a monolithic

00:16:43.249 --> 00:16:43.259
but if you're starting from a monolithic
 

00:16:43.259 --> 00:16:45.590
but if you're starting from a monolithic
application I think about the first step

00:16:45.590 --> 00:16:45.600
application I think about the first step
 

00:16:45.600 --> 00:16:47.420
application I think about the first step
that you could do is to start with a

00:16:47.420 --> 00:16:47.430
that you could do is to start with a
 

00:16:47.430 --> 00:16:50.960
that you could do is to start with a
layer motorisation and then as time goes

00:16:50.960 --> 00:16:50.970
layer motorisation and then as time goes
 

00:16:50.970 --> 00:16:52.900
layer motorisation and then as time goes
by you can go more towards a feature

00:16:52.900 --> 00:16:52.910
by you can go more towards a feature
 

00:16:52.910 --> 00:16:57.019
by you can go more towards a feature
motorisation so let's see how to work

00:16:57.019 --> 00:16:57.029
motorisation so let's see how to work
 

00:16:57.029 --> 00:16:58.939
motorisation so let's see how to work
with dynamic feature modules because

00:16:58.939 --> 00:16:58.949
with dynamic feature modules because
 

00:16:58.949 --> 00:17:01.490
with dynamic feature modules because
even if this enables on-demand delivery

00:17:01.490 --> 00:17:01.500
even if this enables on-demand delivery
 

00:17:01.500 --> 00:17:05.360
even if this enables on-demand delivery
it also brings a few challenges so the

00:17:05.360 --> 00:17:05.370
it also brings a few challenges so the
 

00:17:05.370 --> 00:17:07.669
it also brings a few challenges so the
first one is with navigation so let's

00:17:07.669 --> 00:17:07.679
first one is with navigation so let's
 

00:17:07.679 --> 00:17:10.159
first one is with navigation so let's
say that our about feature is inside a

00:17:10.159 --> 00:17:10.169
say that our about feature is inside a
 

00:17:10.169 --> 00:17:13.340
say that our about feature is inside a
dynamic feature module so from our main

00:17:13.340 --> 00:17:13.350
dynamic feature module so from our main
 

00:17:13.350 --> 00:17:15.199
dynamic feature module so from our main
activity that's part of app we need to

00:17:15.199 --> 00:17:15.209
activity that's part of app we need to
 

00:17:15.209 --> 00:17:17.630
activity that's part of app we need to
navigate to this about activity what we

00:17:17.630 --> 00:17:17.640
navigate to this about activity what we
 

00:17:17.640 --> 00:17:20.120
navigate to this about activity what we
would usually do is just launch an

00:17:20.120 --> 00:17:20.130
would usually do is just launch an
 

00:17:20.130 --> 00:17:22.520
would usually do is just launch an
intent saying I start this about

00:17:22.520 --> 00:17:22.530
intent saying I start this about
 

00:17:22.530 --> 00:17:25.970
intent saying I start this about
activity but I said that app doesn't

00:17:25.970 --> 00:17:25.980
activity but I said that app doesn't
 

00:17:25.980 --> 00:17:28.149
activity but I said that app doesn't
have a reference to the code from about

00:17:28.149 --> 00:17:28.159
have a reference to the code from about
 

00:17:28.159 --> 00:17:31.010
have a reference to the code from about
so this means that you'll get a compiler

00:17:31.010 --> 00:17:31.020
so this means that you'll get a compiler
 

00:17:31.020 --> 00:17:34.070
so this means that you'll get a compiler
to overcome this what you can do is just

00:17:34.070 --> 00:17:34.080
to overcome this what you can do is just
 

00:17:34.080 --> 00:17:36.799
to overcome this what you can do is just
use intent set class name and pass the

00:17:36.799 --> 00:17:36.809
use intent set class name and pass the
 

00:17:36.809 --> 00:17:39.200
use intent set class name and pass the
component name I know this looks a bit

00:17:39.200 --> 00:17:39.210
component name I know this looks a bit
 

00:17:39.210 --> 00:17:40.730
component name I know this looks a bit
strange because it's hard-coded and

00:17:40.730 --> 00:17:40.740
strange because it's hard-coded and
 

00:17:40.740 --> 00:17:43.100
strange because it's hard-coded and
indeed it means that when you have to

00:17:43.100 --> 00:17:43.110
indeed it means that when you have to
 

00:17:43.110 --> 00:17:44.810
indeed it means that when you have to
refactor your code you need to make sure

00:17:44.810 --> 00:17:44.820
refactor your code you need to make sure
 

00:17:44.820 --> 00:17:46.580
refactor your code you need to make sure
that you're also updating this

00:17:46.580 --> 00:17:46.590
that you're also updating this
 

00:17:46.590 --> 00:17:49.850
that you're also updating this
drink if you're working with fragments

00:17:49.850 --> 00:17:49.860
drink if you're working with fragments
 

00:17:49.860 --> 00:17:51.590
drink if you're working with fragments
you have to do something similar you

00:17:51.590 --> 00:17:51.600
you have to do something similar you
 

00:17:51.600 --> 00:17:54.350
you have to do something similar you
would have to use reflection to create

00:17:54.350 --> 00:17:54.360
would have to use reflection to create
 

00:17:54.360 --> 00:17:57.019
would have to use reflection to create
an instance of the fragment and with

00:17:57.019 --> 00:17:57.029
an instance of the fragment and with
 

00:17:57.029 --> 00:17:58.700
an instance of the fragment and with
fragments there is an extra thing that

00:17:58.700 --> 00:17:58.710
fragments there is an extra thing that
 

00:17:58.710 --> 00:18:00.200
fragments there is an extra thing that
needs to do you need to make sure that

00:18:00.200 --> 00:18:00.210
needs to do you need to make sure that
 

00:18:00.210 --> 00:18:02.360
needs to do you need to make sure that
you also exclude the fragment names from

00:18:02.360 --> 00:18:02.370
you also exclude the fragment names from
 

00:18:02.370 --> 00:18:06.080
you also exclude the fragment names from
frog art we know that this is not nice

00:18:06.080 --> 00:18:06.090
frog art we know that this is not nice
 

00:18:06.090 --> 00:18:08.000
frog art we know that this is not nice
but in the same time we know that there

00:18:08.000 --> 00:18:08.010
but in the same time we know that there
 

00:18:08.010 --> 00:18:09.440
but in the same time we know that there
are no performance runtime performance

00:18:09.440 --> 00:18:09.450
are no performance runtime performance
 

00:18:09.450 --> 00:18:12.370
are no performance runtime performance
hits for this and we also want to help

00:18:12.370 --> 00:18:12.380
hits for this and we also want to help
 

00:18:12.380 --> 00:18:15.799
hits for this and we also want to help
improve this process to make navigation

00:18:15.799 --> 00:18:15.809
improve this process to make navigation
 

00:18:15.809 --> 00:18:17.659
improve this process to make navigation
between feature modules as natural as

00:18:17.659 --> 00:18:17.669
between feature modules as natural as
 

00:18:17.669 --> 00:18:19.730
between feature modules as natural as
possible so we are working on this as

00:18:19.730 --> 00:18:19.740
possible so we are working on this as
 

00:18:19.740 --> 00:18:22.899
possible so we are working on this as
part of the navigation jetpack library

00:18:22.899 --> 00:18:22.909
part of the navigation jetpack library
 

00:18:22.909 --> 00:18:25.279
part of the navigation jetpack library
okay let's see how we can discover

00:18:25.279 --> 00:18:25.289
okay let's see how we can discover
 

00:18:25.289 --> 00:18:28.639
okay let's see how we can discover
dependencies in our app let's take the

00:18:28.639 --> 00:18:28.649
dependencies in our app let's take the
 

00:18:28.649 --> 00:18:30.440
dependencies in our app let's take the
following example we have a search

00:18:30.440 --> 00:18:30.450
following example we have a search
 

00:18:30.450 --> 00:18:32.210
following example we have a search
activity that is part of the search

00:18:32.210 --> 00:18:32.220
activity that is part of the search
 

00:18:32.220 --> 00:18:34.460
activity that is part of the search
module and we want to be able to search

00:18:34.460 --> 00:18:34.470
module and we want to be able to search
 

00:18:34.470 --> 00:18:38.389
module and we want to be able to search
for news in designer news and ripple so

00:18:38.389 --> 00:18:38.399
for news in designer news and ripple so
 

00:18:38.399 --> 00:18:41.419
for news in designer news and ripple so
for now let's consider that these two

00:18:41.419 --> 00:18:41.429
for now let's consider that these two
 

00:18:41.429 --> 00:18:43.490
for now let's consider that these two
feature modules designer news and ruble

00:18:43.490 --> 00:18:43.500
feature modules designer news and ruble
 

00:18:43.500 --> 00:18:45.769
feature modules designer news and ruble
are already downloaded it's our part of

00:18:45.769 --> 00:18:45.779
are already downloaded it's our part of
 

00:18:45.779 --> 00:18:48.799
are already downloaded it's our part of
your app but still designer news dribble

00:18:48.799 --> 00:18:48.809
your app but still designer news dribble
 

00:18:48.809 --> 00:18:50.930
your app but still designer news dribble
and search are three completely

00:18:50.930 --> 00:18:50.940
and search are three completely
 

00:18:50.940 --> 00:18:52.960
and search are three completely
different modules you don't have

00:18:52.960 --> 00:18:52.970
different modules you don't have
 

00:18:52.970 --> 00:18:56.360
different modules you don't have
references you don't know how to use how

00:18:56.360 --> 00:18:56.370
references you don't know how to use how
 

00:18:56.370 --> 00:18:58.010
references you don't know how to use how
to call which classes you should call

00:18:58.010 --> 00:18:58.020
to call which classes you should call
 

00:18:58.020 --> 00:19:00.620
to call which classes you should call
and we also want to make sure that in

00:19:00.620 --> 00:19:00.630
and we also want to make sure that in
 

00:19:00.630 --> 00:19:03.230
and we also want to make sure that in
the future if we add another data source

00:19:03.230 --> 00:19:03.240
the future if we add another data source
 

00:19:03.240 --> 00:19:05.889
the future if we add another data source
we can easily plug in that one as well

00:19:05.889 --> 00:19:05.899
we can easily plug in that one as well
 

00:19:05.899 --> 00:19:09.169
we can easily plug in that one as well
so we kind of want some house search to

00:19:09.169 --> 00:19:09.179
so we kind of want some house search to
 

00:19:09.179 --> 00:19:12.139
so we kind of want some house search to
define on designer news and treble so

00:19:12.139 --> 00:19:12.149
define on designer news and treble so
 

00:19:12.149 --> 00:19:14.210
define on designer news and treble so
what we do is we use the common core

00:19:14.210 --> 00:19:14.220
what we do is we use the common core
 

00:19:14.220 --> 00:19:15.799
what we do is we use the common core
library that is shared between all of

00:19:15.799 --> 00:19:15.809
library that is shared between all of
 

00:19:15.809 --> 00:19:18.590
library that is shared between all of
these so here we're defining the data

00:19:18.590 --> 00:19:18.600
these so here we're defining the data
 

00:19:18.600 --> 00:19:21.529
these so here we're defining the data
source interface and then design a new

00:19:21.529 --> 00:19:21.539
source interface and then design a new
 

00:19:21.539 --> 00:19:23.570
source interface and then design a new
century ball implement that interface

00:19:23.570 --> 00:19:23.580
century ball implement that interface
 

00:19:23.580 --> 00:19:27.350
century ball implement that interface
and search holds a set of these data

00:19:27.350 --> 00:19:27.360
and search holds a set of these data
 

00:19:27.360 --> 00:19:29.360
and search holds a set of these data
sources so it knows how to query the

00:19:29.360 --> 00:19:29.370
sources so it knows how to query the
 

00:19:29.370 --> 00:19:33.200
sources so it knows how to query the
data but things were not very easy

00:19:33.200 --> 00:19:33.210
data but things were not very easy
 

00:19:33.210 --> 00:19:34.850
data but things were not very easy
because when we want to instantiate the

00:19:34.850 --> 00:19:34.860
because when we want to instantiate the
 

00:19:34.860 --> 00:19:36.950
because when we want to instantiate the
designer news data source we see that it

00:19:36.950 --> 00:19:36.960
designer news data source we see that it
 

00:19:36.960 --> 00:19:38.060
designer news data source we see that it
depends on other things

00:19:38.060 --> 00:19:38.070
depends on other things
 

00:19:38.070 --> 00:19:40.580
depends on other things
it works with a story repository that on

00:19:40.580 --> 00:19:40.590
it works with a story repository that on
 

00:19:40.590 --> 00:19:42.529
it works with a story repository that on
a row works with a remote it a source in

00:19:42.529 --> 00:19:42.539
a row works with a remote it a source in
 

00:19:42.539 --> 00:19:44.779
a row works with a remote it a source in
a local data source that also work with

00:19:44.779 --> 00:19:44.789
a local data source that also work with
 

00:19:44.789 --> 00:19:47.480
a local data source that also work with
services sure preferences maybe even

00:19:47.480 --> 00:19:47.490
services sure preferences maybe even
 

00:19:47.490 --> 00:19:49.700
services sure preferences maybe even
room so there are a lot of classes that

00:19:49.700 --> 00:19:49.710
room so there are a lot of classes that
 

00:19:49.710 --> 00:19:51.620
room so there are a lot of classes that
you need to instantiate when you want to

00:19:51.620 --> 00:19:51.630
you need to instantiate when you want to
 

00:19:51.630 --> 00:19:53.060
you need to instantiate when you want to
create an instance of designer news

00:19:53.060 --> 00:19:53.070
create an instance of designer news
 

00:19:53.070 --> 00:19:56.389
create an instance of designer news
datasource so how do we do this in turn

00:19:56.389 --> 00:19:56.399
datasource so how do we do this in turn
 

00:19:56.399 --> 00:19:58.760
datasource so how do we do this in turn
what we actually want is to have one

00:19:58.760 --> 00:19:58.770
what we actually want is to have one
 

00:19:58.770 --> 00:20:00.450
what we actually want is to have one
single entry point for create

00:20:00.450 --> 00:20:00.460
single entry point for create
 

00:20:00.460 --> 00:20:02.730
single entry point for create
but designer news data source see we

00:20:02.730 --> 00:20:02.740
but designer news data source see we
 

00:20:02.740 --> 00:20:04.560
but designer news data source see we
would have something like a data source

00:20:04.560 --> 00:20:04.570
would have something like a data source
 

00:20:04.570 --> 00:20:06.840
would have something like a data source
provider interface that would be fine in

00:20:06.840 --> 00:20:06.850
provider interface that would be fine in
 

00:20:06.850 --> 00:20:09.510
provider interface that would be fine in
core and I get data source method that

00:20:09.510 --> 00:20:09.520
core and I get data source method that
 

00:20:09.520 --> 00:20:10.890
core and I get data source method that
would allow us to retrieve it

00:20:10.890 --> 00:20:10.900
would allow us to retrieve it
 

00:20:10.900 --> 00:20:13.710
would allow us to retrieve it
and then in designer news we would

00:20:13.710 --> 00:20:13.720
and then in designer news we would
 

00:20:13.720 --> 00:20:15.900
and then in designer news we would
implement this data source provider and

00:20:15.900 --> 00:20:15.910
implement this data source provider and
 

00:20:15.910 --> 00:20:20.370
implement this data source provider and
then building the dependencies in search

00:20:20.370 --> 00:20:20.380
then building the dependencies in search
 

00:20:20.380 --> 00:20:23.250
then building the dependencies in search
we would need to provide these set of

00:20:23.250 --> 00:20:23.260
we would need to provide these set of
 

00:20:23.260 --> 00:20:26.310
we would need to provide these set of
data sources so we would check whether a

00:20:26.310 --> 00:20:26.320
data sources so we would check whether a
 

00:20:26.320 --> 00:20:28.860
data sources so we would check whether a
feature is installed and then if it is

00:20:28.860 --> 00:20:28.870
feature is installed and then if it is
 

00:20:28.870 --> 00:20:32.670
feature is installed and then if it is
we try to get to create an instance via

00:20:32.670 --> 00:20:32.680
we try to get to create an instance via
 

00:20:32.680 --> 00:20:34.650
we try to get to create an instance via
reflection of that data source provider

00:20:34.650 --> 00:20:34.660
reflection of that data source provider
 

00:20:34.660 --> 00:20:37.410
reflection of that data source provider
and then we get the data source from the

00:20:37.410 --> 00:20:37.420
and then we get the data source from the
 

00:20:37.420 --> 00:20:39.540
and then we get the data source from the
provider and add it to our set of data

00:20:39.540 --> 00:20:39.550
provider and add it to our set of data
 

00:20:39.550 --> 00:20:43.710
provider and add it to our set of data
sources alternatively you can also do

00:20:43.710 --> 00:20:43.720
sources alternatively you can also do
 

00:20:43.720 --> 00:20:49.650
sources alternatively you can also do
this via via 8 service loader and you

00:20:49.650 --> 00:20:49.660
this via via 8 service loader and you
 

00:20:49.660 --> 00:20:50.970
this via via 8 service loader and you
can check out both versions the

00:20:50.970 --> 00:20:50.980
can check out both versions the
 

00:20:50.980 --> 00:20:52.920
can check out both versions the
reflection and the service loader in one

00:20:52.920 --> 00:20:52.930
reflection and the service loader in one
 

00:20:52.930 --> 00:20:56.210
reflection and the service loader in one
of the samples that we release recently

00:20:56.210 --> 00:20:56.220
of the samples that we release recently
 

00:20:56.220 --> 00:20:59.400
of the samples that we release recently
ok so we said that we would need to

00:20:59.400 --> 00:20:59.410
ok so we said that we would need to
 

00:20:59.410 --> 00:21:02.910
ok so we said that we would need to
create the dependencies and chances are

00:21:02.910 --> 00:21:02.920
create the dependencies and chances are
 

00:21:02.920 --> 00:21:05.040
create the dependencies and chances are
a lot of you here also using dagger so

00:21:05.040 --> 00:21:05.050
a lot of you here also using dagger so
 

00:21:05.050 --> 00:21:06.840
a lot of you here also using dagger so
let's see how you could do this with

00:21:06.840 --> 00:21:06.850
let's see how you could do this with
 

00:21:06.850 --> 00:21:09.570
let's see how you could do this with
dagger so if you're using bagger you

00:21:09.570 --> 00:21:09.580
dagger so if you're using bagger you
 

00:21:09.580 --> 00:21:11.430
dagger so if you're using bagger you
most like to use another component that

00:21:11.430 --> 00:21:11.440
most like to use another component that
 

00:21:11.440 --> 00:21:16.110
most like to use another component that
you define in in core so then in in your

00:21:16.110 --> 00:21:16.120
you define in in core so then in in your
 

00:21:16.120 --> 00:21:18.090
you define in in core so then in in your
designer news data source provider you

00:21:18.090 --> 00:21:18.100
designer news data source provider you
 

00:21:18.100 --> 00:21:20.250
designer news data source provider you
would need to create the graph for that

00:21:20.250 --> 00:21:20.260
would need to create the graph for that
 

00:21:20.260 --> 00:21:23.250
would need to create the graph for that
component and then from that graph to

00:21:23.250 --> 00:21:23.260
component and then from that graph to
 

00:21:23.260 --> 00:21:28.500
component and then from that graph to
actually get the data source ok so we

00:21:28.500 --> 00:21:28.510
actually get the data source ok so we
 

00:21:28.510 --> 00:21:32.010
actually get the data source ok so we
said this for the first case our dynamic

00:21:32.010 --> 00:21:32.020
said this for the first case our dynamic
 

00:21:32.020 --> 00:21:33.390
said this for the first case our dynamic
feature modules were already installed

00:21:33.390 --> 00:21:33.400
feature modules were already installed
 

00:21:33.400 --> 00:21:36.180
feature modules were already installed
but what if they're not what if when

00:21:36.180 --> 00:21:36.190
but what if they're not what if when
 

00:21:36.190 --> 00:21:37.920
but what if they're not what if when
we're launching the search activity we

00:21:37.920 --> 00:21:37.930
we're launching the search activity we
 

00:21:37.930 --> 00:21:40.470
we're launching the search activity we
only have designer news and we want

00:21:40.470 --> 00:21:40.480
only have designer news and we want
 

00:21:40.480 --> 00:21:42.840
only have designer news and we want
whenever durable was also installed to

00:21:42.840 --> 00:21:42.850
whenever durable was also installed to
 

00:21:42.850 --> 00:21:45.390
whenever durable was also installed to
also start searching for data in Drupal

00:21:45.390 --> 00:21:45.400
also start searching for data in Drupal
 

00:21:45.400 --> 00:21:48.390
also start searching for data in Drupal
so we start from the same case we'd

00:21:48.390 --> 00:21:48.400
so we start from the same case we'd
 

00:21:48.400 --> 00:21:49.830
so we start from the same case we'd
still have a data source that's

00:21:49.830 --> 00:21:49.840
still have a data source that's
 

00:21:49.840 --> 00:21:51.420
still have a data source that's
implemented in designer news and drip

00:21:51.420 --> 00:21:51.430
implemented in designer news and drip
 

00:21:51.430 --> 00:21:54.150
implemented in designer news and drip
but now having just a set of data

00:21:54.150 --> 00:21:54.160
but now having just a set of data
 

00:21:54.160 --> 00:21:56.940
but now having just a set of data
sources is not enough so we also use

00:21:56.940 --> 00:21:56.950
sources is not enough so we also use
 

00:21:56.950 --> 00:21:58.860
sources is not enough so we also use
live data to make sure that we're also

00:21:58.860 --> 00:21:58.870
live data to make sure that we're also
 

00:21:58.870 --> 00:22:00.870
live data to make sure that we're also
notifying whatever classes are

00:22:00.870 --> 00:22:00.880
notifying whatever classes are
 

00:22:00.880 --> 00:22:03.260
notifying whatever classes are
interested in these data sources and

00:22:03.260 --> 00:22:03.270
interested in these data sources and
 

00:22:03.270 --> 00:22:06.780
interested in these data sources and
then for convenience we wrap this inside

00:22:06.780 --> 00:22:06.790
then for convenience we wrap this inside
 

00:22:06.790 --> 00:22:11.430
then for convenience we wrap this inside
the registry so play core gives us a

00:22:11.430 --> 00:22:11.440
the registry so play core gives us a
 

00:22:11.440 --> 00:22:13.680
the registry so play core gives us a
possibility to react on modules that

00:22:13.680 --> 00:22:13.690
possibility to react on modules that
 

00:22:13.690 --> 00:22:14.230
possibility to react on modules that
have been

00:22:14.230 --> 00:22:14.240
have been
 

00:22:14.240 --> 00:22:15.940
have been
stall so this means that we can register

00:22:15.940 --> 00:22:15.950
stall so this means that we can register
 

00:22:15.950 --> 00:22:18.610
stall so this means that we can register
any listener and then this listener also

00:22:18.610 --> 00:22:18.620
any listener and then this listener also
 

00:22:18.620 --> 00:22:21.580
any listener and then this listener also
tells us when a module was installed so

00:22:21.580 --> 00:22:21.590
tells us when a module was installed so
 

00:22:21.590 --> 00:22:23.830
tells us when a module was installed so
this is the point where we're getting

00:22:23.830 --> 00:22:23.840
this is the point where we're getting
 

00:22:23.840 --> 00:22:25.720
this is the point where we're getting
the data source is be shown previously

00:22:25.720 --> 00:22:25.730
the data source is be shown previously
 

00:22:25.730 --> 00:22:29.340
the data source is be shown previously
and then we just add it to the registry

00:22:29.340 --> 00:22:29.350
and then we just add it to the registry
 

00:22:29.350 --> 00:22:31.690
and then we just add it to the registry
now let's see how we work with databases

00:22:31.690 --> 00:22:31.700
now let's see how we work with databases
 

00:22:31.700 --> 00:22:35.410
now let's see how we work with databases
thank you so when you start moisturizing

00:22:35.410 --> 00:22:35.420
thank you so when you start moisturizing
 

00:22:35.420 --> 00:22:37.660
thank you so when you start moisturizing
your application you're going to face

00:22:37.660 --> 00:22:37.670
your application you're going to face
 

00:22:37.670 --> 00:22:40.060
your application you're going to face
this problem with databases I'm like

00:22:40.060 --> 00:22:40.070
this problem with databases I'm like
 

00:22:40.070 --> 00:22:43.150
this problem with databases I'm like
where do I put them and there is no

00:22:43.150 --> 00:22:43.160
where do I put them and there is no
 

00:22:43.160 --> 00:22:45.130
where do I put them and there is no
perfect answer for this so we're going

00:22:45.130 --> 00:22:45.140
perfect answer for this so we're going
 

00:22:45.140 --> 00:22:48.100
perfect answer for this so we're going
to go through some examples and options

00:22:48.100 --> 00:22:48.110
to go through some examples and options
 

00:22:48.110 --> 00:22:52.990
to go through some examples and options
we can do here so what option is the

00:22:52.990 --> 00:22:53.000
we can do here so what option is the
 

00:22:53.000 --> 00:22:54.820
we can do here so what option is the
easy one you can just have one database

00:22:54.820 --> 00:22:54.830
easy one you can just have one database
 

00:22:54.830 --> 00:22:56.440
easy one you can just have one database
for all of your application which is

00:22:56.440 --> 00:22:56.450
for all of your application which is
 

00:22:56.450 --> 00:22:58.150
for all of your application which is
what you usually do when you have a

00:22:58.150 --> 00:22:58.160
what you usually do when you have a
 

00:22:58.160 --> 00:23:00.880
what you usually do when you have a
monolithic application or you can create

00:23:00.880 --> 00:23:00.890
monolithic application or you can create
 

00:23:00.890 --> 00:23:02.470
monolithic application or you can create
a core database for the common

00:23:02.470 --> 00:23:02.480
a core database for the common
 

00:23:02.480 --> 00:23:04.750
a core database for the common
functionality and then have separate

00:23:04.750 --> 00:23:04.760
functionality and then have separate
 

00:23:04.760 --> 00:23:07.630
functionality and then have separate
databases for your features and they

00:23:07.630 --> 00:23:07.640
databases for your features and they
 

00:23:07.640 --> 00:23:10.210
databases for your features and they
also have some plans with Roo which are

00:23:10.210 --> 00:23:10.220
also have some plans with Roo which are
 

00:23:10.220 --> 00:23:11.620
also have some plans with Roo which are
not ready yet but I'm going to talk

00:23:11.620 --> 00:23:11.630
not ready yet but I'm going to talk
 

00:23:11.630 --> 00:23:15.430
not ready yet but I'm going to talk
about them because fun so how do we do

00:23:15.430 --> 00:23:15.440
about them because fun so how do we do
 

00:23:15.440 --> 00:23:19.000
about them because fun so how do we do
it if we have just one database that's

00:23:19.000 --> 00:23:19.010
it if we have just one database that's
 

00:23:19.010 --> 00:23:20.740
it if we have just one database that's
very easy so we have this database

00:23:20.740 --> 00:23:20.750
very easy so we have this database
 

00:23:20.750 --> 00:23:23.650
very easy so we have this database
module that depends on rule we put all

00:23:23.650 --> 00:23:23.660
module that depends on rule we put all
 

00:23:23.660 --> 00:23:26.230
module that depends on rule we put all
of our entities and all of our data is

00:23:26.230 --> 00:23:26.240
of our entities and all of our data is
 

00:23:26.240 --> 00:23:28.480
of our entities and all of our data is
those objects into that very simple and

00:23:28.480 --> 00:23:28.490
those objects into that very simple and
 

00:23:28.490 --> 00:23:30.750
those objects into that very simple and
then you have modules depending on it

00:23:30.750 --> 00:23:30.760
then you have modules depending on it
 

00:23:30.760 --> 00:23:32.890
then you have modules depending on it
now if you have an architecture like

00:23:32.890 --> 00:23:32.900
now if you have an architecture like
 

00:23:32.900 --> 00:23:35.860
now if you have an architecture like
this the nice thing is it is super

00:23:35.860 --> 00:23:35.870
this the nice thing is it is super
 

00:23:35.870 --> 00:23:37.810
this the nice thing is it is super
simple to understand you don't need to

00:23:37.810 --> 00:23:37.820
simple to understand you don't need to
 

00:23:37.820 --> 00:23:40.240
simple to understand you don't need to
guess where I put it you just put it

00:23:40.240 --> 00:23:40.250
guess where I put it you just put it
 

00:23:40.250 --> 00:23:42.280
guess where I put it you just put it
there and then you have only one

00:23:42.280 --> 00:23:42.290
there and then you have only one
 

00:23:42.290 --> 00:23:44.770
there and then you have only one
database connection to maintain and then

00:23:44.770 --> 00:23:44.780
database connection to maintain and then
 

00:23:44.780 --> 00:23:46.360
database connection to maintain and then
you can just keep it open for the

00:23:46.360 --> 00:23:46.370
you can just keep it open for the
 

00:23:46.370 --> 00:23:48.640
you can just keep it open for the
duration of your application database

00:23:48.640 --> 00:23:48.650
duration of your application database
 

00:23:48.650 --> 00:23:50.440
duration of your application database
connections are not cheap so if you have

00:23:50.440 --> 00:23:50.450
connections are not cheap so if you have
 

00:23:50.450 --> 00:23:52.390
connections are not cheap so if you have
multiple ones you need to be closing

00:23:52.390 --> 00:23:52.400
multiple ones you need to be closing
 

00:23:52.400 --> 00:23:55.240
multiple ones you need to be closing
them and this also gives you the

00:23:55.240 --> 00:23:55.250
them and this also gives you the
 

00:23:55.250 --> 00:23:57.790
them and this also gives you the
possibility to share tables like if you

00:23:57.790 --> 00:23:57.800
possibility to share tables like if you
 

00:23:57.800 --> 00:24:00.040
possibility to share tables like if you
have queries that's across modules you

00:24:00.040 --> 00:24:00.050
have queries that's across modules you
 

00:24:00.050 --> 00:24:02.049
have queries that's across modules you
can easily write them in this common

00:24:02.049 --> 00:24:02.059
can easily write them in this common
 

00:24:02.059 --> 00:24:05.200
can easily write them in this common
shared database now the problem with

00:24:05.200 --> 00:24:05.210
shared database now the problem with
 

00:24:05.210 --> 00:24:07.419
shared database now the problem with
this approach is there is absolutely no

00:24:07.419 --> 00:24:07.429
this approach is there is absolutely no
 

00:24:07.429 --> 00:24:10.080
this approach is there is absolutely no
isolation between your modules so

00:24:10.080 --> 00:24:10.090
isolation between your modules so
 

00:24:10.090 --> 00:24:13.150
isolation between your modules so
description of a post for one of the

00:24:13.150 --> 00:24:13.160
description of a post for one of the
 

00:24:13.160 --> 00:24:14.890
description of a post for one of the
modules might be significantly different

00:24:14.890 --> 00:24:14.900
modules might be significantly different
 

00:24:14.900 --> 00:24:15.880
modules might be significantly different
than the other one

00:24:15.880 --> 00:24:15.890
than the other one
 

00:24:15.890 --> 00:24:18.340
than the other one
so now we need to rename these tables to

00:24:18.340 --> 00:24:18.350
so now we need to rename these tables to
 

00:24:18.350 --> 00:24:20.530
so now we need to rename these tables to
make sure they don't conflict I will be

00:24:20.530 --> 00:24:20.540
make sure they don't conflict I will be
 

00:24:20.540 --> 00:24:23.590
make sure they don't conflict I will be
hard when you look at the code base and

00:24:23.590 --> 00:24:23.600
hard when you look at the code base and
 

00:24:23.600 --> 00:24:25.630
hard when you look at the code base and
even worse they say you use the

00:24:25.630 --> 00:24:25.640
even worse they say you use the
 

00:24:25.640 --> 00:24:27.490
even worse they say you use the
dynamically delivered features that flow

00:24:27.490 --> 00:24:27.500
dynamically delivered features that flow
 

00:24:27.500 --> 00:24:28.100
dynamically delivered features that flow
in a mesh

00:24:28.100 --> 00:24:28.110
in a mesh
 

00:24:28.110 --> 00:24:30.049
in a mesh
now even if you are delivering the

00:24:30.049 --> 00:24:30.059
now even if you are delivering the
 

00:24:30.059 --> 00:24:32.419
now even if you are delivering the
feature dynamically you need to put all

00:24:32.419 --> 00:24:32.429
feature dynamically you need to put all
 

00:24:32.429 --> 00:24:34.490
feature dynamically you need to put all
of these entities and data access

00:24:34.490 --> 00:24:34.500
of these entities and data access
 

00:24:34.500 --> 00:24:36.710
of these entities and data access
objects into this core module that ships

00:24:36.710 --> 00:24:36.720
objects into this core module that ships
 

00:24:36.720 --> 00:24:39.259
objects into this core module that ships
with the app so it creates a like

00:24:39.259 --> 00:24:39.269
with the app so it creates a like
 

00:24:39.269 --> 00:24:41.539
with the app so it creates a like
awkward division between the module with

00:24:41.539 --> 00:24:41.549
awkward division between the module with
 

00:24:41.549 --> 00:24:43.759
awkward division between the module with
these entities and the rest of its code

00:24:43.759 --> 00:24:43.769
these entities and the rest of its code
 

00:24:43.769 --> 00:24:46.970
these entities and the rest of its code
this is something you want okay so let's

00:24:46.970 --> 00:24:46.980
this is something you want okay so let's
 

00:24:46.980 --> 00:24:48.710
this is something you want okay so let's
go back to the other extreme where we

00:24:48.710 --> 00:24:48.720
go back to the other extreme where we
 

00:24:48.720 --> 00:24:51.409
go back to the other extreme where we
create the database / module to achieve

00:24:51.409 --> 00:24:51.419
create the database / module to achieve
 

00:24:51.419 --> 00:24:53.750
create the database / module to achieve
the perfect isolation so if these each

00:24:53.750 --> 00:24:53.760
the perfect isolation so if these each
 

00:24:53.760 --> 00:24:56.330
the perfect isolation so if these each
database authentication module is on

00:24:56.330 --> 00:24:56.340
database authentication module is on
 

00:24:56.340 --> 00:24:59.090
database authentication module is on
database feed has on point arrays and

00:24:59.090 --> 00:24:59.100
database feed has on point arrays and
 

00:24:59.100 --> 00:25:03.259
database feed has on point arrays and
the post is on database if we do that we

00:25:03.259 --> 00:25:03.269
the post is on database if we do that we
 

00:25:03.269 --> 00:25:04.789
the post is on database if we do that we
reach our goal there is perfect

00:25:04.789 --> 00:25:04.799
reach our goal there is perfect
 

00:25:04.799 --> 00:25:07.149
reach our goal there is perfect
isolation between all of these modules

00:25:07.149 --> 00:25:07.159
isolation between all of these modules
 

00:25:07.159 --> 00:25:10.340
isolation between all of these modules
but now we have many database

00:25:10.340 --> 00:25:10.350
but now we have many database
 

00:25:10.350 --> 00:25:12.230
but now we have many database
connections that we need to maintain we

00:25:12.230 --> 00:25:12.240
connections that we need to maintain we
 

00:25:12.240 --> 00:25:14.629
connections that we need to maintain we
cannot keep it open for the duration on

00:25:14.629 --> 00:25:14.639
cannot keep it open for the duration on
 

00:25:14.639 --> 00:25:17.060
cannot keep it open for the duration on
tap anymore we need to start tracking

00:25:17.060 --> 00:25:17.070
tap anymore we need to start tracking
 

00:25:17.070 --> 00:25:18.950
tap anymore we need to start tracking
man we are querying the database and

00:25:18.950 --> 00:25:18.960
man we are querying the database and
 

00:25:18.960 --> 00:25:20.240
man we are querying the database and
make sure to close it

00:25:20.240 --> 00:25:20.250
make sure to close it
 

00:25:20.250 --> 00:25:23.899
make sure to close it
mummy are not using it also if you want

00:25:23.899 --> 00:25:23.909
mummy are not using it also if you want
 

00:25:23.909 --> 00:25:25.700
mummy are not using it also if you want
to write a query that touches two

00:25:25.700 --> 00:25:25.710
to write a query that touches two
 

00:25:25.710 --> 00:25:26.750
to write a query that touches two
different databases

00:25:26.750 --> 00:25:26.760
different databases
 

00:25:26.760 --> 00:25:29.539
different databases
you simply cannot I mean see collide

00:25:29.539 --> 00:25:29.549
you simply cannot I mean see collide
 

00:25:29.549 --> 00:25:31.789
you simply cannot I mean see collide
allows you to attach databases to each

00:25:31.789 --> 00:25:31.799
allows you to attach databases to each
 

00:25:31.799 --> 00:25:33.500
allows you to attach databases to each
other but there's some difficulties with

00:25:33.500 --> 00:25:33.510
other but there's some difficulties with
 

00:25:33.510 --> 00:25:35.450
other but there's some difficulties with
that and beside that you will find

00:25:35.450 --> 00:25:35.460
that and beside that you will find
 

00:25:35.460 --> 00:25:37.850
that and beside that you will find
yourself implementing C collide in your

00:25:37.850 --> 00:25:37.860
yourself implementing C collide in your
 

00:25:37.860 --> 00:25:41.779
yourself implementing C collide in your
own continent code and the one of the

00:25:41.779 --> 00:25:41.789
own continent code and the one of the
 

00:25:41.789 --> 00:25:43.190
own continent code and the one of the
other problems is you will end up

00:25:43.190 --> 00:25:43.200
other problems is you will end up
 

00:25:43.200 --> 00:25:45.049
other problems is you will end up
duplicating some data because they will

00:25:45.049 --> 00:25:45.059
duplicating some data because they will
 

00:25:45.059 --> 00:25:46.639
duplicating some data because they will
probably have shared data and you will

00:25:46.639 --> 00:25:46.649
probably have shared data and you will
 

00:25:46.649 --> 00:25:48.620
probably have shared data and you will
just be writing it into both of these

00:25:48.620 --> 00:25:48.630
just be writing it into both of these
 

00:25:48.630 --> 00:25:52.279
just be writing it into both of these
databases of course then obvious

00:25:52.279 --> 00:25:52.289
databases of course then obvious
 

00:25:52.289 --> 00:25:54.230
databases of course then obvious
iteration after looking at these three

00:25:54.230 --> 00:25:54.240
iteration after looking at these three
 

00:25:54.240 --> 00:25:56.200
iteration after looking at these three
is why don't we just the hybrid approach

00:25:56.200 --> 00:25:56.210
is why don't we just the hybrid approach
 

00:25:56.210 --> 00:25:58.820
is why don't we just the hybrid approach
if you go back to this example where we

00:25:58.820 --> 00:25:58.830
if you go back to this example where we
 

00:25:58.830 --> 00:26:01.159
if you go back to this example where we
create the module database for each

00:26:01.159 --> 00:26:01.169
create the module database for each
 

00:26:01.169 --> 00:26:03.980
create the module database for each
module and you look at the feet and the

00:26:03.980 --> 00:26:03.990
module and you look at the feet and the
 

00:26:03.990 --> 00:26:06.139
module and you look at the feet and the
post databases they probably have the

00:26:06.139 --> 00:26:06.149
post databases they probably have the
 

00:26:06.149 --> 00:26:08.870
post databases they probably have the
same data you know the feed shows them

00:26:08.870 --> 00:26:08.880
same data you know the feed shows them
 

00:26:08.880 --> 00:26:12.110
same data you know the feed shows them
in a list and the post URL shows them as

00:26:12.110 --> 00:26:12.120
in a list and the post URL shows them as
 

00:26:12.120 --> 00:26:14.899
in a list and the post URL shows them as
an individual one with comments so it is

00:26:14.899 --> 00:26:14.909
an individual one with comments so it is
 

00:26:14.909 --> 00:26:17.299
an individual one with comments so it is
more data but you can basically put all

00:26:17.299 --> 00:26:17.309
more data but you can basically put all
 

00:26:17.309 --> 00:26:19.430
more data but you can basically put all
of them into one database it's not that

00:26:19.430 --> 00:26:19.440
of them into one database it's not that
 

00:26:19.440 --> 00:26:21.919
of them into one database it's not that
you can share the data and it will be a

00:26:21.919 --> 00:26:21.929
you can share the data and it will be a
 

00:26:21.929 --> 00:26:24.379
you can share the data and it will be a
lot more efficient while we can keep the

00:26:24.379 --> 00:26:24.389
lot more efficient while we can keep the
 

00:26:24.389 --> 00:26:27.590
lot more efficient while we can keep the
authentication just by itself now this

00:26:27.590 --> 00:26:27.600
authentication just by itself now this
 

00:26:27.600 --> 00:26:29.899
authentication just by itself now this
option is great because it gives us full

00:26:29.899 --> 00:26:29.909
option is great because it gives us full
 

00:26:29.909 --> 00:26:33.440
option is great because it gives us full
flexibility but the problem is it's very

00:26:33.440 --> 00:26:33.450
flexibility but the problem is it's very
 

00:26:33.450 --> 00:26:36.620
flexibility but the problem is it's very
flexible so you always find yourself all

00:26:36.620 --> 00:26:36.630
flexible so you always find yourself all
 

00:26:36.630 --> 00:26:38.690
flexible so you always find yourself all
right where do I put this one should

00:26:38.690 --> 00:26:38.700
right where do I put this one should
 

00:26:38.700 --> 00:26:40.460
right where do I put this one should
they merge these two or should we keep

00:26:40.460 --> 00:26:40.470
they merge these two or should we keep
 

00:26:40.470 --> 00:26:41.680
they merge these two or should we keep
them separate and you

00:26:41.680 --> 00:26:41.690
them separate and you
 

00:26:41.690 --> 00:26:44.289
them separate and you
like going through those decision points

00:26:44.289 --> 00:26:44.299
like going through those decision points
 

00:26:44.299 --> 00:26:46.869
like going through those decision points
and always a challenge as part of your

00:26:46.869 --> 00:26:46.879
and always a challenge as part of your
 

00:26:46.879 --> 00:26:50.740
and always a challenge as part of your
application now for room this is an

00:26:50.740 --> 00:26:50.750
application now for room this is an
 

00:26:50.750 --> 00:26:53.680
application now for room this is an
important problem that we want to solve

00:26:53.680 --> 00:26:53.690
important problem that we want to solve
 

00:26:53.690 --> 00:26:55.749
important problem that we want to solve
similar to how we want to solve the

00:26:55.749 --> 00:26:55.759
similar to how we want to solve the
 

00:26:55.759 --> 00:26:57.759
similar to how we want to solve the
dynamic library navigation in the

00:26:57.759 --> 00:26:57.769
dynamic library navigation in the
 

00:26:57.769 --> 00:26:59.889
dynamic library navigation in the
jetpack navigation component wanna

00:26:59.889 --> 00:26:59.899
jetpack navigation component wanna
 

00:26:59.899 --> 00:27:01.990
jetpack navigation component wanna
provide support for multi module

00:27:01.990 --> 00:27:02.000
provide support for multi module
 

00:27:02.000 --> 00:27:05.139
provide support for multi module
applications in room so this is what we

00:27:05.139 --> 00:27:05.149
applications in room so this is what we
 

00:27:05.149 --> 00:27:07.899
applications in room so this is what we
want to do we are going to allow you to

00:27:07.899 --> 00:27:07.909
want to do we are going to allow you to
 

00:27:07.909 --> 00:27:10.749
want to do we are going to allow you to
find smaller databases in these modules

00:27:10.749 --> 00:27:10.759
find smaller databases in these modules
 

00:27:10.759 --> 00:27:12.999
find smaller databases in these modules
in a way that you can let them depend on

00:27:12.999 --> 00:27:13.009
in a way that you can let them depend on
 

00:27:13.009 --> 00:27:15.190
in a way that you can let them depend on
each other so room can merge them at

00:27:15.190 --> 00:27:15.200
each other so room can merge them at
 

00:27:15.200 --> 00:27:17.799
each other so room can merge them at
runtime while in your code base you can

00:27:17.799 --> 00:27:17.809
runtime while in your code base you can
 

00:27:17.809 --> 00:27:21.700
runtime while in your code base you can
get the isolation benefits and then this

00:27:21.700 --> 00:27:21.710
get the isolation benefits and then this
 

00:27:21.710 --> 00:27:23.710
get the isolation benefits and then this
way because we know which database

00:27:23.710 --> 00:27:23.720
way because we know which database
 

00:27:23.720 --> 00:27:25.869
way because we know which database
depends on which other database we can

00:27:25.869 --> 00:27:25.879
depends on which other database we can
 

00:27:25.879 --> 00:27:28.629
depends on which other database we can
let you create queries in your dos that

00:27:28.629 --> 00:27:28.639
let you create queries in your dos that
 

00:27:28.639 --> 00:27:32.950
let you create queries in your dos that
query across multiple databases and we

00:27:32.950 --> 00:27:32.960
query across multiple databases and we
 

00:27:32.960 --> 00:27:34.930
query across multiple databases and we
want to support on-demand delivery so

00:27:34.930 --> 00:27:34.940
want to support on-demand delivery so
 

00:27:34.940 --> 00:27:37.360
want to support on-demand delivery so
that even if your entities and dolls

00:27:37.360 --> 00:27:37.370
that even if your entities and dolls
 

00:27:37.370 --> 00:27:38.710
that even if your entities and dolls
look like they're inside the feature

00:27:38.710 --> 00:27:38.720
look like they're inside the feature
 

00:27:38.720 --> 00:27:41.560
look like they're inside the feature
module when it gets installed group will

00:27:41.560 --> 00:27:41.570
module when it gets installed group will
 

00:27:41.570 --> 00:27:43.629
module when it gets installed group will
basically merge them depending on how

00:27:43.629 --> 00:27:43.639
basically merge them depending on how
 

00:27:43.639 --> 00:27:46.330
basically merge them depending on how
you set it up unfortunately it's not

00:27:46.330 --> 00:27:46.340
you set it up unfortunately it's not
 

00:27:46.340 --> 00:27:49.149
you set it up unfortunately it's not
available yet so one thing we haven't

00:27:49.149 --> 00:27:49.159
available yet so one thing we haven't
 

00:27:49.159 --> 00:27:51.369
available yet so one thing we haven't
discussed yet is whether these modules

00:27:51.369 --> 00:27:51.379
discussed yet is whether these modules
 

00:27:51.379 --> 00:27:53.320
discussed yet is whether these modules
should be android free modules or not

00:27:53.320 --> 00:27:53.330
should be android free modules or not
 

00:27:53.330 --> 00:27:55.389
should be android free modules or not
and I think there are advantages and

00:27:55.389 --> 00:27:55.399
and I think there are advantages and
 

00:27:55.399 --> 00:27:58.389
and I think there are advantages and
disadvantages to this so the first thing

00:27:58.389 --> 00:27:58.399
disadvantages to this so the first thing
 

00:27:58.399 --> 00:28:00.399
disadvantages to this so the first thing
is that you could reuse the modules you

00:28:00.399 --> 00:28:00.409
is that you could reuse the modules you
 

00:28:00.409 --> 00:28:02.230
is that you could reuse the modules you
could use something like cousin native

00:28:02.230 --> 00:28:02.240
could use something like cousin native
 

00:28:02.240 --> 00:28:03.999
could use something like cousin native
and then share that library between

00:28:03.999 --> 00:28:04.009
and then share that library between
 

00:28:04.009 --> 00:28:05.950
and then share that library between
multiple platforms between Android iOS

00:28:05.950 --> 00:28:05.960
multiple platforms between Android iOS
 

00:28:05.960 --> 00:28:09.580
multiple platforms between Android iOS
between mobile and backends oh that's a

00:28:09.580 --> 00:28:09.590
between mobile and backends oh that's a
 

00:28:09.590 --> 00:28:10.659
between mobile and backends oh that's a
great idea

00:28:10.659 --> 00:28:10.669
great idea
 

00:28:10.669 --> 00:28:13.570
great idea
but make sure you have that use case so

00:28:13.570 --> 00:28:13.580
but make sure you have that use case so
 

00:28:13.580 --> 00:28:15.580
but make sure you have that use case so
if you start like oh let me like remove

00:28:15.580 --> 00:28:15.590
if you start like oh let me like remove
 

00:28:15.590 --> 00:28:17.259
if you start like oh let me like remove
all the Android from this codebase so

00:28:17.259 --> 00:28:17.269
all the Android from this codebase so
 

00:28:17.269 --> 00:28:18.999
all the Android from this codebase so
maybe three years in the future we're

00:28:18.999 --> 00:28:19.009
maybe three years in the future we're
 

00:28:19.009 --> 00:28:20.289
maybe three years in the future we're
gonna have cross-platform

00:28:20.289 --> 00:28:20.299
gonna have cross-platform
 

00:28:20.299 --> 00:28:22.629
gonna have cross-platform
how do you even know that code is going

00:28:22.629 --> 00:28:22.639
how do you even know that code is going
 

00:28:22.639 --> 00:28:25.029
how do you even know that code is going
to survive three years so don't do it if

00:28:25.029 --> 00:28:25.039
to survive three years so don't do it if
 

00:28:25.039 --> 00:28:28.060
to survive three years so don't do it if
you don't have the use case having

00:28:28.060 --> 00:28:28.070
you don't have the use case having
 

00:28:28.070 --> 00:28:30.340
you don't have the use case having
Android free modules means that for that

00:28:30.340 --> 00:28:30.350
Android free modules means that for that
 

00:28:30.350 --> 00:28:30.820
Android free modules means that for that
module

00:28:30.820 --> 00:28:30.830
module
 

00:28:30.830 --> 00:28:32.740
module
we just need to implement a unit tests

00:28:32.740 --> 00:28:32.750
we just need to implement a unit tests
 

00:28:32.750 --> 00:28:34.389
we just need to implement a unit tests
that's all we don't need to implement

00:28:34.389 --> 00:28:34.399
that's all we don't need to implement
 

00:28:34.399 --> 00:28:36.549
that's all we don't need to implement
these Android instrumentation tests that

00:28:36.549 --> 00:28:36.559
these Android instrumentation tests that
 

00:28:36.559 --> 00:28:41.139
these Android instrumentation tests that
can be quite slow it's true I don't

00:28:41.139 --> 00:28:41.149
can be quite slow it's true I don't
 

00:28:41.149 --> 00:28:44.049
can be quite slow it's true I don't
disagree but like writing an Android

00:28:44.049 --> 00:28:44.059
disagree but like writing an Android
 

00:28:44.059 --> 00:28:46.360
disagree but like writing an Android
application that doesn't use the android

00:28:46.360 --> 00:28:46.370
application that doesn't use the android
 

00:28:46.370 --> 00:28:48.369
application that doesn't use the android
framework is a challenge you will find

00:28:48.369 --> 00:28:48.379
framework is a challenge you will find
 

00:28:48.379 --> 00:28:50.470
framework is a challenge you will find
yourself duplicating things or start

00:28:50.470 --> 00:28:50.480
yourself duplicating things or start
 

00:28:50.480 --> 00:28:53.080
yourself duplicating things or start
mocking things in your tests so if you

00:28:53.080 --> 00:28:53.090
mocking things in your tests so if you
 

00:28:53.090 --> 00:28:55.240
mocking things in your tests so if you
are doing it just for the test

00:28:55.240 --> 00:28:55.250
are doing it just for the test
 

00:28:55.250 --> 00:28:58.600
are doing it just for the test
benefits don't just use robolectric and

00:28:58.600 --> 00:28:58.610
benefits don't just use robolectric and
 

00:28:58.610 --> 00:29:00.400
benefits don't just use robolectric and
you can get the same speed benefits

00:29:00.400 --> 00:29:00.410
you can get the same speed benefits
 

00:29:00.410 --> 00:29:02.500
you can get the same speed benefits
without trying to reinvent android

00:29:02.500 --> 00:29:02.510
without trying to reinvent android
 

00:29:02.510 --> 00:29:06.160
without trying to reinvent android
framework yourself then in general when

00:29:06.160 --> 00:29:06.170
framework yourself then in general when
 

00:29:06.170 --> 00:29:07.750
framework yourself then in general when
you read about our he texture and the

00:29:07.750 --> 00:29:07.760
you read about our he texture and the
 

00:29:07.760 --> 00:29:09.310
you read about our he texture and the
theory around our hip picture in clean

00:29:09.310 --> 00:29:09.320
theory around our hip picture in clean
 

00:29:09.320 --> 00:29:10.960
theory around our hip picture in clean
architecture one of the things that you

00:29:10.960 --> 00:29:10.970
architecture one of the things that you
 

00:29:10.970 --> 00:29:12.730
architecture one of the things that you
see one of the guidelines is that you

00:29:12.730 --> 00:29:12.740
see one of the guidelines is that you
 

00:29:12.740 --> 00:29:14.800
see one of the guidelines is that you
should minimize dependencies to make

00:29:14.800 --> 00:29:14.810
should minimize dependencies to make
 

00:29:14.810 --> 00:29:16.720
should minimize dependencies to make
sure that your know depending on classes

00:29:16.720 --> 00:29:16.730
sure that your know depending on classes
 

00:29:16.730 --> 00:29:18.880
sure that your know depending on classes
that you're not using this also means

00:29:18.880 --> 00:29:18.890
that you're not using this also means
 

00:29:18.890 --> 00:29:20.200
that you're not using this also means
that you're able to do a clear

00:29:20.200 --> 00:29:20.210
that you're able to do a clear
 

00:29:20.210 --> 00:29:22.480
that you're able to do a clear
separation of concerns making sure that

00:29:22.480 --> 00:29:22.490
separation of concerns making sure that
 

00:29:22.490 --> 00:29:24.490
separation of concerns making sure that
your business logic doesn't depend on

00:29:24.490 --> 00:29:24.500
your business logic doesn't depend on
 

00:29:24.500 --> 00:29:27.280
your business logic doesn't depend on
any bi classes for example it allows you

00:29:27.280 --> 00:29:27.290
any bi classes for example it allows you
 

00:29:27.290 --> 00:29:30.060
any bi classes for example it allows you
to build better ik abstractions

00:29:30.060 --> 00:29:30.070
to build better ik abstractions
 

00:29:30.070 --> 00:29:33.100
to build better ik abstractions
abstractions are great I agree but you

00:29:33.100 --> 00:29:33.110
abstractions are great I agree but you
 

00:29:33.110 --> 00:29:36.880
abstractions are great I agree but you
need to be careful just just like as you

00:29:36.880 --> 00:29:36.890
need to be careful just just like as you
 

00:29:36.890 --> 00:29:38.500
need to be careful just just like as you
add more and more abstractions your

00:29:38.500 --> 00:29:38.510
add more and more abstractions your
 

00:29:38.510 --> 00:29:39.970
add more and more abstractions your
codebase will get more and more

00:29:39.970 --> 00:29:39.980
codebase will get more and more
 

00:29:39.980 --> 00:29:42.310
codebase will get more and more
complicated so as you add these

00:29:42.310 --> 00:29:42.320
complicated so as you add these
 

00:29:42.320 --> 00:29:44.410
complicated so as you add these
abstractions always think about it like

00:29:44.410 --> 00:29:44.420
abstractions always think about it like
 

00:29:44.420 --> 00:29:49.240
abstractions always think about it like
what benefit am i gaining from this so

00:29:49.240 --> 00:29:49.250
what benefit am i gaining from this so
 

00:29:49.250 --> 00:29:52.450
what benefit am i gaining from this so
the TLDR of this talk is you go back

00:29:52.450 --> 00:29:52.460
the TLDR of this talk is you go back
 

00:29:52.460 --> 00:29:55.000
the TLDR of this talk is you go back
home after i/o and start rewriting your

00:29:55.000 --> 00:29:55.010
home after i/o and start rewriting your
 

00:29:55.010 --> 00:30:04.390
home after i/o and start rewriting your
application in modules so it's some

00:30:04.390 --> 00:30:04.400
application in modules so it's some
 

00:30:04.400 --> 00:30:06.820
application in modules so it's some
responsibility as the Android team to

00:30:06.820 --> 00:30:06.830
responsibility as the Android team to
 

00:30:06.830 --> 00:30:09.550
responsibility as the Android team to
show you these options but your

00:30:09.550 --> 00:30:09.560
show you these options but your
 

00:30:09.560 --> 00:30:12.700
show you these options but your
responsibility to learn them investigate

00:30:12.700 --> 00:30:12.710
responsibility to learn them investigate
 

00:30:12.710 --> 00:30:14.650
responsibility to learn them investigate
see if they work for your use case and

00:30:14.650 --> 00:30:14.660
see if they work for your use case and
 

00:30:14.660 --> 00:30:17.920
see if they work for your use case and
then decide for your use case these are

00:30:17.920 --> 00:30:17.930
then decide for your use case these are
 

00:30:17.930 --> 00:30:19.840
then decide for your use case these are
options these are not rules there's no

00:30:19.840 --> 00:30:19.850
options these are not rules there's no
 

00:30:19.850 --> 00:30:21.580
options these are not rules there's no
like perfect solution that someone

00:30:21.580 --> 00:30:21.590
like perfect solution that someone
 

00:30:21.590 --> 00:30:25.300
like perfect solution that someone
figured out it depends and also you when

00:30:25.300 --> 00:30:25.310
figured out it depends and also you when
 

00:30:25.310 --> 00:30:27.310
figured out it depends and also you when
you're doing this kind of changes you

00:30:27.310 --> 00:30:27.320
you're doing this kind of changes you
 

00:30:27.320 --> 00:30:29.620
you're doing this kind of changes you
should always compare your short-term

00:30:29.620 --> 00:30:29.630
should always compare your short-term
 

00:30:29.630 --> 00:30:32.500
should always compare your short-term
costs with your long-term benefits and

00:30:32.500 --> 00:30:32.510
costs with your long-term benefits and
 

00:30:32.510 --> 00:30:35.800
costs with your long-term benefits and
make a proper decision speaking of cost

00:30:35.800 --> 00:30:35.810
make a proper decision speaking of cost
 

00:30:35.810 --> 00:30:38.470
make a proper decision speaking of cost
and benefit the modulation or these

00:30:38.470 --> 00:30:38.480
and benefit the modulation or these
 

00:30:38.480 --> 00:30:40.180
and benefit the modulation or these
abstractions graph usually look like

00:30:40.180 --> 00:30:40.190
abstractions graph usually look like
 

00:30:40.190 --> 00:30:43.120
abstractions graph usually look like
this so once you start doing like some

00:30:43.120 --> 00:30:43.130
this so once you start doing like some
 

00:30:43.130 --> 00:30:45.190
this so once you start doing like some
modulation maybe the layered one which

00:30:45.190 --> 00:30:45.200
modulation maybe the layered one which
 

00:30:45.200 --> 00:30:47.380
modulation maybe the layered one which
which is actually very easy to do you're

00:30:47.380 --> 00:30:47.390
which is actually very easy to do you're
 

00:30:47.390 --> 00:30:49.690
which is actually very easy to do you're
going to get a lot of benefits out of it

00:30:49.690 --> 00:30:49.700
going to get a lot of benefits out of it
 

00:30:49.700 --> 00:30:51.670
going to get a lot of benefits out of it
without spending too much time doing it

00:30:51.670 --> 00:30:51.680
without spending too much time doing it
 

00:30:51.680 --> 00:30:54.820
without spending too much time doing it
but then if your project grows maybe you

00:30:54.820 --> 00:30:54.830
but then if your project grows maybe you
 

00:30:54.830 --> 00:30:56.770
but then if your project grows maybe you
can start looking at like moisturizing

00:30:56.770 --> 00:30:56.780
can start looking at like moisturizing
 

00:30:56.780 --> 00:30:58.660
can start looking at like moisturizing
my features spend more time in those

00:30:58.660 --> 00:30:58.670
my features spend more time in those
 

00:30:58.670 --> 00:31:01.090
my features spend more time in those
that kind of things because you need to

00:31:01.090 --> 00:31:01.100
that kind of things because you need to
 

00:31:01.100 --> 00:31:03.760
that kind of things because you need to
scale the team but then if you are in

00:31:03.760 --> 00:31:03.770
scale the team but then if you are in
 

00:31:03.770 --> 00:31:06.700
scale the team but then if you are in
the like world of Google's Facebook's

00:31:06.700 --> 00:31:06.710
the like world of Google's Facebook's
 

00:31:06.710 --> 00:31:08.480
the like world of Google's Facebook's
Weavers of the world

00:31:08.480 --> 00:31:08.490
Weavers of the world
 

00:31:08.490 --> 00:31:10.580
Weavers of the world
we spent out of time those things

00:31:10.580 --> 00:31:10.590
we spent out of time those things
 

00:31:10.590 --> 00:31:12.380
we spent out of time those things
because we have hundreds of Engineer

00:31:12.380 --> 00:31:12.390
because we have hundreds of Engineer
 

00:31:12.390 --> 00:31:14.780
because we have hundreds of Engineer
trying to work on the same code base so

00:31:14.780 --> 00:31:14.790
trying to work on the same code base so
 

00:31:14.790 --> 00:31:16.910
trying to work on the same code base so
it's okay for us to spend this time so

00:31:16.910 --> 00:31:16.920
it's okay for us to spend this time so
 

00:31:16.920 --> 00:31:19.340
it's okay for us to spend this time so
if you're in a similar situation yes go

00:31:19.340 --> 00:31:19.350
if you're in a similar situation yes go
 

00:31:19.350 --> 00:31:21.020
if you're in a similar situation yes go
as far as you can go because you're

00:31:21.020 --> 00:31:21.030
as far as you can go because you're
 

00:31:21.030 --> 00:31:22.670
as far as you can go because you're
gonna gain something but if you're not

00:31:22.670 --> 00:31:22.680
gonna gain something but if you're not
 

00:31:22.680 --> 00:31:26.770
gonna gain something but if you're not
in that world don't try to do it because

00:31:26.770 --> 00:31:26.780
in that world don't try to do it because
 

00:31:26.780 --> 00:31:30.020
in that world don't try to do it because
your users will say oh this application

00:31:30.020 --> 00:31:30.030
your users will say oh this application
 

00:31:30.030 --> 00:31:33.170
your users will say oh this application
is very well architected No

00:31:33.170 --> 00:31:33.180
is very well architected No
 

00:31:33.180 --> 00:31:34.940
is very well architected No
no one will ever to pet five-star

00:31:34.940 --> 00:31:34.950
no one will ever to pet five-star
 

00:31:34.950 --> 00:31:37.250
no one will ever to pet five-star
comment saying that they're gonna say

00:31:37.250 --> 00:31:37.260
comment saying that they're gonna say
 

00:31:37.260 --> 00:31:39.950
comment saying that they're gonna say
things like this is very sleek it's very

00:31:39.950 --> 00:31:39.960
things like this is very sleek it's very
 

00:31:39.960 --> 00:31:42.470
things like this is very sleek it's very
robust or this application has great

00:31:42.470 --> 00:31:42.480
robust or this application has great
 

00:31:42.480 --> 00:31:45.230
robust or this application has great
features I love it so all of these

00:31:45.230 --> 00:31:45.240
features I love it so all of these
 

00:31:45.240 --> 00:31:47.510
features I love it so all of these
things we're talking about are a means

00:31:47.510 --> 00:31:47.520
things we're talking about are a means
 

00:31:47.520 --> 00:31:49.670
things we're talking about are a means
to an end we want to have happy

00:31:49.670 --> 00:31:49.680
to an end we want to have happy
 

00:31:49.680 --> 00:31:51.800
to an end we want to have happy
customers not to have more of them so

00:31:51.800 --> 00:31:51.810
customers not to have more of them so
 

00:31:51.810 --> 00:31:54.020
customers not to have more of them so
when you make your architectural or

00:31:54.020 --> 00:31:54.030
when you make your architectural or
 

00:31:54.030 --> 00:31:56.870
when you make your architectural or
modulation this is just always keep your

00:31:56.870 --> 00:31:56.880
modulation this is just always keep your
 

00:31:56.880 --> 00:32:00.170
modulation this is just always keep your
customers and users in your mind thank

00:32:00.170 --> 00:32:00.180
customers and users in your mind thank
 

00:32:00.180 --> 00:32:02.630
customers and users in your mind thank
you

00:32:02.630 --> 00:32:02.640
 

00:32:02.640 --> 00:32:22.070
[Music]

