WEBVTT
Kind: captions
Language: en

00:00:00.210 --> 00:00:03.440
The pressure on address space usage spurred the

00:00:03.440 --> 00:00:07.420
adoption of classless interdomain routing or CIDR which

00:00:07.420 --> 00:00:10.460
was adopted in 1994. The idea is that

00:00:10.460 --> 00:00:13.880
instead of having fixed network ID and host

00:00:13.880 --> 00:00:17.200
ID portions of the 32 bits. Instead, we

00:00:17.200 --> 00:00:19.450
would simply have an IP address, and what

00:00:19.450 --> 00:00:21.570
is known as a mask. Where the mask

00:00:21.570 --> 00:00:25.310
is variable length, and indicates the length of the

00:00:25.310 --> 00:00:28.590
network ID. So, for example, suppose we have

00:00:28.590 --> 00:00:34.970
an IP address like 65.14.248.0/22. Well in this

00:00:34.970 --> 00:00:40.150
case our 32 bits look like so, but this doesn't tell us how long the network id

00:00:40.150 --> 00:00:42.322
and how long the host ID should be.

00:00:42.322 --> 00:00:45.760
The /22 indicates the mask length, which says

00:00:45.760 --> 00:00:48.060
that the first 22 bits should represent the

00:00:48.060 --> 00:00:50.910
network ID. Now the key is that this mask

00:00:50.910 --> 00:00:53.460
can be variable length. And the mask length

00:00:53.460 --> 00:00:56.990
no longer depends on the range of IP addresses

00:00:56.990 --> 00:01:00.830
that are being used. This allows those allocating IP

00:01:00.830 --> 00:01:05.150
address ranges, to both allocate a range that's more

00:01:05.150 --> 00:01:07.450
fitting to the size of the network. And also

00:01:07.450 --> 00:01:09.580
not have to be constrained about how big the

00:01:09.580 --> 00:01:12.840
network ID should be depending on where in the

00:01:12.840 --> 00:01:15.930
IP address space the prefix is being allocated from.

00:01:15.930 --> 00:01:21.950
Of course now the complication is that it's possible to have overlapping address

00:01:23.520 --> 00:01:28.410
prefixes. For example, 65.14.248.0/24

00:01:28.410 --> 00:01:33.330
overlaps with 65.14.248.0/22. The red prefix is actually

00:01:33.330 --> 00:01:37.560
a subset of the black one. So supposing these two entries both show

00:01:37.560 --> 00:01:41.630
up in an Internet routing table, what are supposed to do? The solution

00:01:41.630 --> 00:01:43.810
is actually to forward on what's called the

00:01:43.810 --> 00:01:47.200
longest prefix match, meaning that if a routing

00:01:47.200 --> 00:01:49.580
table has two overlapping entries that it should

00:01:49.580 --> 00:01:52.030
forward according to the entry that has the

00:01:52.030 --> 00:01:55.430
longest prefix, or the longest mask length. Intuitively

00:01:55.430 --> 00:01:58.800
that makes sense. Because the prefix with the

00:01:58.800 --> 00:02:02.170
longer mask length is more specific than the

00:02:02.170 --> 00:02:05.160
prefix with the shorter mask, or the larger prefix.

