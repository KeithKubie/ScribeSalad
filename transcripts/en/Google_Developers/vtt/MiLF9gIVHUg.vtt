WEBVTT
Kind: captions
Language: en

00:00:08.689 --> 00:00:12.559
Welcome to Google Developers Show, a gold edition

00:00:12.559 --> 00:00:16.880
where we are enjoying 
with Felipe Hoffa 

00:00:16.880 --> 00:00:19.080
here next to me

00:00:19.080 --> 00:00:24.200
 the thecnological diversity. 
We will ejony with

00:00:24.200 --> 00:00:27.730
the audience the Massive Analysis
of Data, we will present BigQuery

00:00:27.730 --> 00:00:32.310
We will work in Open Data,
specifically on the birth data 

00:00:32.310 --> 00:00:36.600
Felipe, an initial message and your presentation 
to the audience of Google Developers 

00:00:36.600 --> 00:00:40.560
Nick how are you? Thanks for having me. 
It’s been a great week in Mexico

00:00:42.739 --> 00:00:46.680
and to tell you who I am,
I started at Google as a software engineer

00:00:46.680 --> 00:00:48.380
three years ago

00:00:48.380 --> 00:00:52.720
and a year ago I’m working as a Developer Advocate

00:00:52.720 --> 00:00:56.850
where my job is to go 
outside Google offices, being in blogs,

00:00:56.850 --> 00:00:59.589
in Youtube, assit to conferences

00:00:59.589 --> 00:01:03.719
to show you the Google tools that
an be used to make your life 

00:01:03.719 --> 00:01:04.539
easier 

00:01:04.539 --> 00:01:07.310
and to make your analysis more interesting

00:01:07.310 --> 00:01:09.880
I work particularly in the area of BigData 

00:01:09.880 --> 00:01:13.180
and I love giving tools 
for you to analyze 

00:01:13.180 --> 00:01:16.220
your information, the plubic information

00:01:16.220 --> 00:01:20.410
and this week has been amazing. 
We went to Presidency. We enjoyed  

00:01:20.410 --> 00:01:24.430
the Mexico ecosystem. 
We’re very happy. 

00:01:24.430 --> 00:01:27.330
We had some events, and we’ll be having more this week 

00:01:27.330 --> 00:01:31.320
with the community ... If you want to see the video 

00:01:31.320 --> 00:01:32.720
we have the video conference&nbsp;

00:01:32.720 --> 00:01:36.040
from UNAM. Here you can see the link.

00:01:36.040 --> 00:01:40.880
So you can check the UNAM video

00:01:40.880 --> 00:01:43.690
in this university congress.
It's very interesting because there was 

00:01:43.690 --> 00:01:45.539
very nice things to talk about.

00:01:45.539 --> 00:01:49.549
Today we'll be discussing about Open Data using Bigquery, 

00:01:49.549 --> 00:01:52.030
We’ll be sharing a set of data

00:01:52.030 --> 00:01:56.600
and we will download the data with Felipe, 

00:01:56.600 --> 00:01:58.260
from Mexico’s Open Data Portal

00:01:58.260 --> 00:02:02.550
and we will process it, that what 
we do, right? Exactly .. so, let’s do it.

00:02:02.550 --> 00:02:06.470
Ok, let start! We will work then 

00:02:06.470 --> 00:02:11.120
on open data sets. First I want to introduce you to Mexico’s Open Data Portal

00:02:13.079 --> 00:02:16.210
where we looked for some interesting data. 

00:02:16.210 --> 00:02:21.149
In this case, I looked for “Data”, 

00:02:21.149 --> 00:02:23.799
I clicked on the health data. 

00:02:23.799 --> 00:02:26.549
Here you can find all births occurred 

00:02:26.549 --> 00:02:27.730
between 

00:02:27.730 --> 00:02:30.139
2008 to 2013. 

00:02:30.139 --> 00:02:32.490
There are millions of births in Mexico

00:02:32.419 --> 00:02:36.369
so in order to analyze this information
the first thing we need to do is

00:02:36.369 --> 00:02:38.719
to get the data.

00:02:38.719 --> 00:02:43.339
And what I did once I downloaded these 
Data I upload it to BigQuery 

00:02:43.339 --> 00:02:44.289
to make it all easier. 

00:02:44.289 --> 00:02:45.760
I'll show you how to

00:02:45.760 --> 00:02:47.220
download them from BigQuery. 

00:02:47.220 --> 00:02:49.770
We then go to 2008, right? Yes 

00:02:49.770 --> 00:02:54.140
Here I can copy the adress link, the URL 

00:02:54.140 --> 00:02:58.420
and with that I'm going to download it in 
Google Compute Engine servers. 

00:02:58.420 --> 00:03:02.959
Perfect.I could do it in my house, but the internet 
speed is faster there

00:03:02.959 --> 00:03:07.280
Exactly so we will download the data, we will use 
Compute Engine, Google Cloud and its potential. 

00:03:07.280 --> 00:03:08.110
Exactly

00:03:08.110 --> 00:03:10.549
Tet’s do that

00:03:10.549 --> 00:03:14.439
While I work, I’ll show you the console’s 
developer where you can have your

00:03:14.439 --> 00:03:15.649
own machine 

00:03:15.649 --> 00:03:20.510
and a button we added recently, SSH, 
direct to the machine 

00:03:20.510 --> 00:03:22.829
through the web

00:03:22.829 --> 00:03:25.939
It works fantastic, so I plugged it to my machine here 

00:03:25.939 --> 00:03:29.379
Here you’ll will find and also about Big Data, 
BigQuery so we can see that

00:03:29.379 --> 00:03:30.549
afterwards ... Exactly! 

00:03:30.549 --> 00:03:32.350
Under the file 

00:03:32.350 --> 00:03:37.470
Biquery cannot ingest Zip files. Ok ... 
So I have to unzip 

00:03:37.470 --> 00:03:40.480
Now, I can also compres to .gz

00:03:40.480 --> 00:03:43.059
because Bigquery reads it ... 

00:03:43.059 --> 00:03:45.169
So I simply unzip this file 

00:03:45.169 --> 00:03:45.910
With an unzip ... 

00:03:45.910 --> 00:03:46.699
With an unzip .. Very Good 

00:03:46.699 --> 00:03:49.349
I already have it decompressed 

00:03:49.349 --> 00:03:51.649
So let’s see what it has ... OK 

00:03:51.649 --> 00:03:54.809
Let's do a head SINAC_2008 

00:03:54.809 --> 00:03:56.089
 

00:03:56.089 --> 00:03:57.699
.csv

00:03:57.699 --> 00:03:58.649
Perfect! 

00:03:58.649 --> 00:04:03.429
You can see here .. the first row contains
each column name. Ok 

00:04:03.429 --> 00:04:04.629
That is the Header. Ok ... 

00:04:04.629 --> 00:04:07.749
And after each row are births 

00:04:07.749 --> 00:04:11.169
In this case from 2008
To upload these files to BigQuery 

00:04:17.859 --> 00:04:20.459
I have my command here that I had 
loaded before. 

00:04:20.459 --> 00:04:21.370
 

00:04:21.370 --> 00:04:22.860
Let's see step by step. 

00:04:22.860 --> 00:04:27.759
The first command is “BQ”…that’s how I tell Bigquery 
to run.

00:04:27.759 --> 00:04:29.249
This is the file that will put. 

00:04:29.249 --> 00:04:32.359
I have the option to skip to the 
first row. Because the first 

00:04:32.359 --> 00:04:35.659
row is not data, it's just the name of each column 

00:04:35.659 --> 00:04:41.089
I put the name of my project, I put the name 
of the data set that I already created. 

00:04:41.089 --> 00:04:43.500
Here is where I put all my files when I’m trying things. 

00:04:43.500 --> 00:04:50.159
They're all together there .. Exactly .. 
and I left here the births of Mexico in 2008

00:04:50.159 --> 00:04:52.920
From the file that we just downloaded.

00:04:52.920 --> 00:04:55.030
As you can see I compressed it in .gz 

00:04:55.030 --> 00:04:58.050
to have a shorter transmition time…

00:04:58.050 --> 00:04:59.150
and then I give 

00:04:59.150 --> 00:05:01.139
all columns that this file has. 

00:05:01.139 --> 00:05:05.949
Data of the mother, child data, weight, 
etc ... geographic places .. 

00:05:05.949 --> 00:05:07.180
It is very interesting ... 

00:05:07.180 --> 00:05:10.259
This process could be done by the console 
web also, right?  

00:05:10.259 --> 00:05:14.210
Exactly, yes. But what we are doing It through Console. 

00:05:14.210 --> 00:05:18.969
Exactly, especially with large files works better. Perfect! 

00:05:18.969 --> 00:05:23.449
But also you can go here and
upload the files we have. Perfect. 

00:05:23.449 --> 00:05:25.939
As I showed you

00:05:25.939 --> 00:05:27.169
I left it all in a Public Tab.

00:05:27.169 --> 00:05:28.639
Here you’ll find

00:05:28.639 --> 00:05:31.840
a table for 2008, 2009 

00:05:31.840 --> 00:05:33.589
until May 2013. 

00:05:33.589 --> 00:05:35.129
and then, with a Query 

00:05:35.129 --> 00:05:37.280
I put them all together 

00:05:37.280 --> 00:05:39.449
in a single table that is 

00:05:39.449 --> 00:05:41.819
Births 2008 - May 2013. 

00:05:41.819 --> 00:05:45.139
We have all our columns. How many columns

00:05:45.139 --> 00:05:47.520
to we have  of 2013 births? Because they are ... 

00:05:47.520 --> 00:05:52.870
from 2008 to 2013, Felipe .. there are many .. 
How many columns or how many rows? How many rows! 

00:05:52.870 --> 00:05:56.389
Let’s see that… Very easy ..with a count 

00:05:56.389 --> 00:05:58.300
Exactly

00:05:58.300 --> 00:06:01.960
Querys time and let’s have fun with data set 

00:06:01.960 --> 00:06:06.020
Then how many births have between 2008 and 2013? 

00:06:06.020 --> 00:06:08.819
Any bets out there ... Any bets? 

00:06:08.819 --> 00:06:10.430
Let’s go!

00:06:10.430 --> 00:06:16.129
Let's make a start count 

00:06:16.129 --> 00:06:19.930
hmmm a million? More…10 million ?? 50 million? 

00:06:19.930 --> 00:06:23.839
Here we have 12 million births 
in all these years…

00:06:23.839 --> 00:06:26.520
Wow .. 12 million is a significant number ... 

00:06:26.520 --> 00:06:29.219
Very fast .. Ok…we did it!

00:06:29.219 --> 00:06:31.770
We have then 12 million 
rows, let’s see 

00:06:31.770 --> 00:06:35.639
how is the data .. we know where the mother was born .. 
Ok ..the town of birth

00:06:35.639 --> 00:06:37.029
year of birth

00:06:37.029 --> 00:06:38.360
marital status 

00:06:38.360 --> 00:06:39.889
where she lives nowadays 

00:06:39.889 --> 00:06:43.520
how many pregnancies she had, the number of births 

00:06:43.520 --> 00:06:48.599
her schooling, 

00:06:48.599 --> 00:06:50.409
Where she works ... 

00:06:50.409 --> 00:06:53.520
and all data of the child that was borned.

00:06:53.520 --> 00:06:56.419
Weight, size. 

00:06:56.419 --> 00:06:59.930
That's super important, size for example.
We could start playing 

00:06:59.930 --> 00:07:01.050
about 

00:07:01.050 --> 00:07:05.180
what regions of Mexico has bigger size
for example ... 

00:07:05.180 --> 00:07:08.039
Let’s find that out!

00:07:08.039 --> 00:07:12.569
Let’s see first what is the average size 
for all Mexico.. Exactly, It's important. 

00:07:12.569 --> 00:07:14.610
to see the average size. 

00:07:14.610 --> 00:07:19.159
Then again .. We can keep playing..50 cm? .. 

00:07:19.159 --> 00:07:26.159
49, 48? .. If I do not know what size I was born…  

00:07:26.159 --> 00:07:28.159
Is there information that tells us 

00:07:28.159 --> 00:07:30.159
the actual sizes based on censuses

00:07:30.159 --> 00:07:32.159
and extrapolate with .. It would be very interesting 

00:07:32.159 --> 00:07:34.159
Exactly…

00:07:34.159 --> 00:07:36.159
We could leave it also as a task sometime …Exactly .. 

00:07:36.460 --> 00:07:39.960
Now as you can see here in 2 seconds 
I calculated the average size

00:07:39.960 --> 00:07:45.020
50.69 centimeters in Mexico. 

00:07:45.020 --> 00:07:46.860
Ok, now let's see this in regions. 

00:07:46.860 --> 00:07:50.889
Region to region .. Let's see  who are 
the most taller babies here in Mexico.. 

00:07:50.889 --> 00:07:53.599
Who are the higher babies in Mexico 
in these last couple of years 

00:07:53.599 --> 00:07:57.800
Let’s search for the entity

00:07:57.800 --> 00:08:00.059
of Birth ... 

00:08:00.059 --> 00:08:01.749
entity of birth .

00:08:01.749 --> 00:08:05.779
and for the ones that are familiar with  SQL let’s group them.. 

00:08:05.779 --> 00:08:06.780
by that column 

00:08:06.780 --> 00:08:09.629
entity of birth ...

00:08:09.629 --> 00:08:11.129
to order 

00:08:11.129 --> 00:08:15.469
the first column in order 
descendant.

00:08:15.469 --> 00:08:16.990
We’ll see the

00:08:16.990 --> 00:08:18.110
state that has 

00:08:18.110 --> 00:08:21.080
the tallest babies in Mexico.

00:08:21.080 --> 00:08:25.240
Bet, bets .. in 2.7 seconds Query analyzed 200 

00:08:25.240 --> 00:08:26.369
MB data. 

00:08:26.369 --> 00:08:27.619
&nbsp;
168 
00:08:27,619 --&gt; 00:08:30,149 
Sinaloa has the highest babies 

00:08:30.149 --> 00:08:33.909
Sinaloa and then Sonora right? 
Sonora and with a difference 

00:08:33.909 --> 00:08:39.749
quite large between 52.33 
average and 51.98. Very tall people 

00:08:39.749 --> 00:08:43.940
in Sinaloa! At least the babies! 

00:08:43.940 --> 00:08:46.220
And where is the shortest babies? 

00:08:46.220 --> 00:08:49.980
We can reverse the question, right? Sure! Or we go to

00:08:49.980 --> 00:08:51.470
the last row. 

00:08:51.470 --> 00:08:54.610
There are many babies with no specific birth region 

00:08:54.610 --> 00:08:57.140
and those are the shortest. 

00:08:57.140 --> 00:08:59.180
but we can find Yucatan. 

00:08:59.180 --> 00:09:00.000
Yucatan! 

00:09:00.000 --> 00:09:04.740
Here we can find the smaller babies Yucatan
very interesting ... 

00:09:04.740 --> 00:09:06.290
This way we have a quick

00:09:06.290 --> 00:09:07.490
overview 

00:09:07.490 --> 00:09:13.860
And we can further discuss, adding columns, crossing this information. Really interesting what we propose there 

00:09:13.860 --> 00:09:15.850
Felipe, I would wonder… 

00:09:15.850 --> 00:09:19.740
What else could we ask, right? 
because the community wants 

00:09:19.740 --> 00:09:22.620
to ask..
Want to contact Felipe .. 

00:09:22.620 --> 00:09:26.070
We can also do this through our social focus

00:09:26.070 --> 00:09:29.510
Google.com/+DesarrolladoresGoogle. 
I also know  that you’re in stack 

00:09:29.510 --> 00:09:32.910
overflow. All the question that you may have 

00:09:32.910 --> 00:09:34.590
when you’re using

00:09:34.590 --> 00:09:37.440
BigQuery, something that you want to 

00:09:37.440 --> 00:09:38.480
optimize 

00:09:38.480 --> 00:09:42.770
you can to stackoverflow.com. You’ll find many engineers 

00:09:42.770 --> 00:09:44.810
of Biquery, there is a community. 

00:09:44.810 --> 00:09:47.850
It works in English 

00:09:47.850 --> 00:09:50.830
but they can also find you there.

00:09:50.830 --> 00:09:55.560
so here is the link to stackoverflow.com 

00:09:55.560 --> 00:09:57.580
where we can do these consultations. 

00:09:57.580 --> 00:09:59.189
We reviewed 

00:09:59.189 --> 00:10:03.289
open data sets, we were talked 
about BiQuery, we had fun with this

00:10:03.289 --> 00:10:06.910
Local set, here in Mexico, 
of births 

00:10:06.910 --> 00:10:11.180
And now we'll take a break. In the 
upcoming block we will continue 

00:10:11.180 --> 00:10:14.810
analyzing data, we will see 
much more about Bigquery. 

00:10:14.810 --> 00:10:18.810
in this case there is a surprise 
respect to the wikipedia, that

00:10:18.810 --> 00:10:22.590
we can use and much more of BigQuery.

00:10:22.590 --> 00:10:24.000
We have an impressive amount of information 

00:10:24.000 --> 00:10:27.480
and if’s not, then, what are you waiting for? Upload it!

00:10:27.480 --> 00:10:29.970
And if you want to me make it public, do so and share it!

00:10:29.970 --> 00:10:32.870
Exactly so we invite everyone to 
to share your information 

00:10:32.870 --> 00:10:34.060
and keep working on Biquery. 

00:10:34.060 --> 00:10:40.050
We’ll be right back with Google Developers Show

00:10:40.050 --> 00:10:44.900
&nbsp;
212 
00:10:44,900 --&gt; 00:10:49,470 
Welcome to Google Developers Show, 
we keep enjoying the presence of Felipe Hoffa, our 

00:10:49.470 --> 00:10:51.230
BigQuery expert, 

00:10:51.230 --> 00:10:53.430
Big Data in this particular case .. 

00:10:53.430 --> 00:10:57.720
We previously discussed about open data sets of birth 

00:10:57.720 --> 00:11:01.480
In the city of Mexico. We worked on different querys and 

00:11:01.480 --> 00:11:05.480
how to upload the data. Now we’ll continue to work with more 

00:11:05.480 --> 00:11:06.660
complexity 

00:11:06.660 --> 00:11:10.610
Let's play, let's play with this data! Of course we’ll be 

00:11:10.610 --> 00:11:14.740
sharing all the work that Felipe did
about putting together the data of 2008 to 

00:11:14.740 --> 00:11:19.040
2013. It will be available down here 

00:11:19.040 --> 00:11:23.650
so you, that is following this show, 
can use these data

00:11:23.650 --> 00:11:26.230
and share knowladge. Shall we continue?

00:11:26.230 --> 00:11:30.370
I have some doubts about Mexico’s births

00:11:30.370 --> 00:11:32.090
I want to know what is the peak

00:11:32.090 --> 00:11:33.590
day of births 

00:11:33.590 --> 00:11:37.400
From 2008 to 2013? 

00:11:37.400 --> 00:11:41.590
Can we do that? Let’s do it. It’s very simple.

00:11:41.590 --> 00:11:45.389
Everyone who want to analyze 
these data can enter the URL 

00:11:45.389 --> 00:11:46.980
that we have here..

00:11:46.980 --> 00:11:52.089
I see your console now. Yes, so we bring our 

00:11:52.089 --> 00:11:53.880
Date of birth 

00:11:53.880 --> 00:11:55.950
We select Date of birth 

00:11:55.950 --> 00:11:58.840
of the child, not the mother. Ok .. 

00:11:58.840 --> 00:12:01.220
And we will ... 

00:12:01.220 --> 00:12:02.730
group 

00:12:02.730 --> 00:12:04.990
by date of birth. Very well .. 

00:12:04.990 --> 00:12:08.950
And let’s count how many babies 
were born  every day 

00:12:08.950 --> 00:12:15.860
As we have many days in the past few years, 
we will make a thousand limit 
and we will sort by the second column 

00:12:15.860 --> 00:12:21.280
in descending order 

00:12:21.280 --> 00:12:25.910
We analyzed 145 megs 
in 2.3 seconds 

00:12:25.910 --> 00:12:29.580
and we can see the day that more children were borned

00:12:29.580 --> 00:12:31.890
is September 18 

00:12:31.890 --> 00:12:32.990
2013 

00:12:32.990 --> 00:12:38.090
September, a spring month for some regions.. 

00:12:38.090 --> 00:12:42.100
Here we are in summer.. 

00:12:42.100 --> 00:12:45.440
Interesting, so September is the month
for more numbers of births.

00:12:45.440 --> 00:12:48.770
September 18, 2013 for all of you happy birthdays!

00:12:48.770 --> 00:12:52.060
Happy one year! Congratulations to you all!

00:12:52.060 --> 00:12:56.610
 And as you can see the date that follows to it is  

00:12:56.610 --> 00:12:58.720
the September 14, 2011 

00:12:58.720 --> 00:13:01.250
the September 18, 2009 

00:13:01.250 --> 00:13:02.600
we have a ... 

00:13:02.600 --> 00:13:04.680
patronage around 

00:13:04.680 --> 00:13:09.350
18 and September 20 of these 
year... Exactly September is a magical month 

00:13:09.350 --> 00:13:10.089
but 

00:13:10.089 --> 00:13:12.489
we should also see what is the month

00:13:12.489 --> 00:13:13.870
or days 

00:13:13.870 --> 00:13:15.440
with less number of births. 

00:13:15.440 --> 00:13:18.680
To do so we can order the data 

00:13:18.680 --> 00:13:20.360
in the other direction 

00:13:20.360 --> 00:13:23.980
Let’s see 

00:13:23.980 --> 00:13:26.140
Two seconds .. Wow .. 

00:13:26.140 --> 00:13:28.920
You can see here that as we are working with real data 

00:13:28.920 --> 00:13:31.780
data sometimes does not always come 
completely clean 

00:13:31.780 --> 00:13:35.640
and in this case there are three, four babies 
that the birth date was entered  

00:13:35.640 --> 00:13:39.170
with hyphens or spaces, and are counted differently .. 

00:13:39.170 --> 00:13:43.080
But we can see that the date with 
fewer births within the past 

00:13:43.080 --> 00:13:44.000
year with 

00:13:44.000 --> 00:13:49.040
3719 birhs is on 25 December 2008 

00:13:49.040 --> 00:13:51.060
So December 

00:13:51.060 --> 00:13:53.120
looks like ... 

00:13:53.120 --> 00:13:55.320
We can search for the component 

00:13:55.320 --> 00:13:57.160
of day and we can see 

00:13:57.160 --> 00:14:02.190
month by month little or year by year

00:14:02.190 --> 00:14:04.199
and we can see for example what happens in each month. 

00:14:04.199 --> 00:14:06.570
Great, let’s keep working on it..

00:14:06.570 --> 00:14:08.149
In this case I kept it as 

00:14:08.149 --> 00:14:08.920
strink  

00:14:08.920 --> 00:14:10.620
each date, I could have saved 

00:14:10.620 --> 00:14:14.520
like another field, but I inserted as 
strink. Because of this I can,  

00:14:14.520 --> 00:14:16.400
for example, 

00:14:16.400 --> 00:14:18.610
leave only the 

00:14:18.610 --> 00:14:19.880
five characters 

00:14:19.880 --> 00:14:22.340
that are in the left. 

00:14:22.340 --> 00:14:26.030
Let's see what it results..

00:14:26.030 --> 00:14:28.279
Five characters left 

00:14:28.279 --> 00:14:32.550
are for the day and the month .. Exactly. 

00:14:32.550 --> 00:14:34.220
You can see that the more popular 

00:14:34.220 --> 00:14:39.100
day here to have babies in 2008 and 2013 was 10 

00:14:39.100 --> 00:14:43.570
September. We continue with September! 

00:14:43.570 --> 00:14:46.330
But if I only want to see the month, I will take only the 

00:14:46.330 --> 00:14:49.480
two characters of the right. 

00:14:49.480 --> 00:14:52.580
You see this is all very quick to analyze and 

00:14:52.580 --> 00:14:57.230
change .. and we have 
the month with most babies 

00:14:57.230 --> 00:14:59.260
is September. Exactly. 

00:14:59.260 --> 00:15:01.320
To graph this ... 

00:15:01.320 --> 00:15:03.049
I could download my data as 

00:15:03.049 --> 00:15:10.049
as CSV. Ok, but I'll do a simple copy / paste day today

00:15:10.150 --> 00:15:13.960
to make it more simple. 

00:15:13.960 --> 00:15:18.460
There are just 12 data  

00:15:18.460 --> 00:15:21.149
and here I want to graph it. 

00:15:21.149 --> 00:15:25.330
We have a spreadsheet. I can do a chart

00:15:25.330 --> 00:15:27.950
with Google Spreadsheet 

00:15:27.950 --> 00:15:29.590
&nbsp;

00:15:29.590 --> 00:15:31.020
We will insert .. 

00:15:31.020 --> 00:15:33.560
one chart 

00:15:33.560 --> 00:15:34.640
 

00:15:34.640 --> 00:15:37.190
&nbsp;

00:15:37.190 --> 00:15:39.859
We can see it here.

00:15:39.859 --> 00:15:40.830
We’re using a graphic of lines 

00:15:40.830 --> 00:15:45.199
And this chart is very strange.. 

00:15:45.199 --> 00:15:48.430
Let's do something different… 

00:15:48.430 --> 00:15:51.680
I’ll return to BigQuery 

00:15:51.680 --> 00:15:53.630
I could also do the changes 

00:15:53.630 --> 00:15:55.440
in 

00:15:55.440 --> 00:16:00.460
in the spreadsheet. I will 

00:16:00.460 --> 00:16:02.390
order in this case…

00:16:02.390 --> 00:16:04.230
instead of ordering 

00:16:04.230 --> 00:16:09.010
by months of the most births I will sort by the 
number of the month. It's okay! 

00:16:09.010 --> 00:16:12.129
And let’s see what we see ordered month by month

00:16:12.129 --> 00:16:14.720
We first have January, then

00:16:14.720 --> 00:16:16.620
all other months. 

00:16:16.620 --> 00:16:21.550
I'm going back to do my copy / paste. 

00:16:21.550 --> 00:16:24.540
Is important that everyone understands that we’re
doing this live!

00:16:24.540 --> 00:16:27.279
Processing data .... 

00:16:27.279 --> 00:16:28.160
 

00:16:28.160 --> 00:16:32.650
This is the month, this is the number of borned.  

00:16:32.650 --> 00:16:39.420
Let's take back this information, we will insert 

00:16:39.420 --> 00:16:42.390
a chart

00:16:42.390 --> 00:16:45.760
&nbsp;
332 
00:16:45,760 --&gt; 00:16:52,760 
And here we can see clearly 

00:16:52.760 --> 00:16:54.760
as the number of births fluctuates 
month to month, from January to December, 

00:16:56.460 --> 00:17:01.030
Be careful with it .. I was going to say .. 
What about the graphics not starting 

00:17:01.030 --> 00:17:02.410
&nbsp;in zero, right? 

00:17:02.410 --> 00:17:05.790
They are tricky.  

00:17:05.790 --> 00:17:08.549
But here I can request to 

00:17:08.549 --> 00:17:11.689
starts the axil at zero. And here we can see 

00:17:11.689 --> 00:17:18.689
quite clear how the number of births fluctuates throughout 
the year , being September our top month 

00:17:18.689 --> 00:17:20.689
and December the less one. 

00:17:21.290 --> 00:17:25.140
December to January the month with fewer births. Is 
really fantastic, seeing Felipe 

00:17:25.140 --> 00:17:26.100
work here 

00:17:26.100 --> 00:17:29.120
taking data with us 

00:17:29.120 --> 00:17:33.990
processing the data using BigQuery. In seconds we have tendency 

00:17:33.990 --> 00:17:38.790
and we know much more of about births

00:17:38.790 --> 00:17:42.540
in this particular case that we are seeing Felipe. 
I invite you to continue experimenting, 

00:17:42.540 --> 00:17:48.299
There are interesting queries such as if we have the entity's birth 
mother and where the child was borned

00:17:48.299 --> 00:17:52.720
we can see migration in Mexico ... 

00:17:52.720 --> 00:17:53.749
and many interesting things. 

00:17:53.749 --> 00:17:55.749
But I leave that task to you! 

00:17:55.749 --> 00:17:57.749
Exactly, continue with your development

00:17:57.749 --> 00:17:59.749
Using BigQuery, sharing that knowledge 

00:17:59.749 --> 00:18:01.749
as we do here at Google Developers Show 

00:18:01.749 --> 00:18:03.749
Let’s keep sharing with Felipe  about
Bigquery and Massive Data analysis!

