WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
The tricky part is if I have an expression like m*x + b

00:00:04.000 --> 00:00:10.000
I want to make sure that I parse that as if m and x are together and not x and b are together.

00:00:10.000 --> 00:00:16.000
Another way to say that is I want to see any expression as if it were the sequence

00:00:16.000 --> 00:00:21.000
of something plus something else plus something else.

00:00:21.000 --> 00:00:23.000
These pluses can also be minus signs,

00:00:23.000 --> 00:00:30.000
but anything with the time sign, I want to have that all be within the dot-dot-dot

00:00:30.000 --> 00:00:33.000
rather than encompassing a plus sign in it.

00:00:33.000 --> 00:00:39.000
What I want to do is write a grammar that defines the language of these expressions.

00:00:39.000 --> 00:00:44.000
Grammar is a description. It's finite in length, and it should be easy to write.

00:00:44.000 --> 00:00:47.000
A language is the set of all possible strings that that grammar describes.

00:00:47.000 --> 00:00:50.000
I want to be able to say that in a concise language.

00:00:50.000 --> 00:00:55.000
Maybe something like saying I'm going to define expressions,

00:00:55.000 --> 00:00:59.000
and I want to define the expression as something that looks like this.

00:00:59.000 --> 00:01:02.000
I need a name for the dot-dot-dots.

00:01:02.000 --> 00:01:04.000
Let's call that a term.

00:01:04.000 --> 00:01:08.000
An expression can be a term, a minus or a plus.

00:01:08.000 --> 00:01:12.000
Let's use regular expression notation to describe a plus or minus.

00:01:12.000 --> 00:01:18.000
Then more terms, but I can just say recursively that that's an expression.

00:01:18.000 --> 00:01:22.000
That will give me any number of terms with plus and minuses in between them.

00:01:22.000 --> 00:01:25.000
That's one possibility, but that's recursive, and I need a base case

00:01:25.000 --> 00:01:31.000
so I can say it can also be the case that an expression can consist of a single term--

00:01:31.000 --> 00:01:38.000
a + b is an expression, a + b + c is an expression, and also just a.

00:01:38.000 --> 00:01:40.000
That's the rule for expression.

00:01:40.000 --> 00:01:42.000
Then I would write the rule for term.

00:01:42.000 --> 00:01:44.000
It would be similar.

00:01:44.000 --> 00:01:47.000
It would take into account the multiply and divide,

00:01:47.000 --> 00:01:50.000
and I would write the rest of the grammar in this format.

00:01:50.000 --> 00:01:54.000
Notice here I've just sort of made up--I've used wishful thinking

00:01:54.000 --> 00:02:00.000
to say I wish I had a notation like this to describe what the grammar is.

