WEBVTT
Kind: captions
Language: en

00:00:06.212 --> 00:00:08.670
MALE SPEAKER: I want to actually
send out a congratulations

00:00:08.670 --> 00:00:11.860
to a couple applications that
were just launched on Google

00:00:11.860 --> 00:00:13.940
Play while that
talk was going on.

00:00:13.940 --> 00:00:16.504
So if any of you pushed
the Publish button on this,

00:00:16.504 --> 00:00:17.920
give yourself a
round of applause.

00:00:17.920 --> 00:00:20.770
Flappy Toaster.

00:00:20.770 --> 00:00:21.270
Nobody?

00:00:21.270 --> 00:00:21.440
No one?

00:00:21.440 --> 00:00:22.180
That wasn't?

00:00:22.180 --> 00:00:25.720
We also got Floppy Dog,
Flippy Shoe, Clumsy Brick,

00:00:25.720 --> 00:00:29.150
and Flappy Fowl.

00:00:29.150 --> 00:00:29.650
No?

00:00:29.650 --> 00:00:31.330
That wasn't anybody in here?

00:00:31.330 --> 00:00:31.980
OK.

00:00:31.980 --> 00:00:32.479
All right.

00:00:32.479 --> 00:00:34.750
Well, for those of you who
aren't making Flappy Bird

00:00:34.750 --> 00:00:37.130
clones, or perhaps
just are, here

00:00:37.130 --> 00:00:38.590
to talk about
multiplayer services

00:00:38.590 --> 00:00:39.902
is Doctor Todd Kerpelman.

00:00:39.902 --> 00:00:41.110
Give him a round of applause.

00:00:41.110 --> 00:00:42.193
TODD KERPELMAN: Thank you.

00:00:42.193 --> 00:00:47.140
[APPLAUSE] Not an actual doctor.

00:00:47.140 --> 00:00:49.200
Let's swap this out, make
sure this is working.

00:00:49.200 --> 00:00:49.830
Hey, look at that.

00:00:49.830 --> 00:00:51.330
Alright, we've got
our presentation.

00:00:51.330 --> 00:00:54.310
So thank you very
much for hanging out.

00:00:54.310 --> 00:00:56.569
Today we have a lot
of presentations

00:00:56.569 --> 00:00:58.110
and not a lot of
time to do them all.

00:00:58.110 --> 00:01:00.745
So-- oh, and I should
reset the timer.

00:01:00.745 --> 00:01:02.010
Look at that.

00:01:02.010 --> 00:01:03.209
Awesome.

00:01:03.209 --> 00:01:05.500
So I'm just to going to get
right into the presentation

00:01:05.500 --> 00:01:08.930
and tell you a little story
about the Kerpelman household.

00:01:08.930 --> 00:01:11.925
So right now, I am
an iOS developer,

00:01:11.925 --> 00:01:13.680
or at least I do
some iOS development.

00:01:13.680 --> 00:01:15.310
So I have an iPhone.

00:01:15.310 --> 00:01:18.310
And my wife has a
very lovely Moto X.

00:01:18.310 --> 00:01:20.970
And right now, there's a lot
that we can do with each other,

00:01:20.970 --> 00:01:21.740
with these phones.

00:01:21.740 --> 00:01:22.240
Right?

00:01:22.240 --> 00:01:24.240
Like I can send her a
text message and say,

00:01:24.240 --> 00:01:25.864
hey, I'm going to be
home late tonight.

00:01:25.864 --> 00:01:28.670
There's a lot of
meetings at 10 o'clock.

00:01:28.670 --> 00:01:31.750
And my wife can send
me back an email.

00:01:31.750 --> 00:01:34.940
And I could send
her a Snap Chat.

00:01:34.940 --> 00:01:36.770
Wait for it.

00:01:36.770 --> 00:01:37.500
There we go.

00:01:37.500 --> 00:01:41.130
Because I'm totally into
Chinese trading vessels.

00:01:41.130 --> 00:01:44.367
And we can send each
other various messages

00:01:44.367 --> 00:01:46.200
through different kind
of messaging services

00:01:46.200 --> 00:01:47.054
like WhatsApp.

00:01:47.054 --> 00:01:48.470
We can even do
this thing where we

00:01:48.470 --> 00:01:51.500
can communicate through
real time voice.

00:01:51.500 --> 00:01:52.981
I forget what it's called.

00:01:52.981 --> 00:01:53.480
Oh, right.

00:01:53.480 --> 00:01:54.360
Making phone calls.

00:01:54.360 --> 00:01:55.960
We can do that too, right?

00:01:55.960 --> 00:01:59.910
But suppose we actually wanted
to play together, play a game.

00:01:59.910 --> 00:02:00.880
Oh, sorry.

00:02:00.880 --> 00:02:01.925
You can't do that.

00:02:01.925 --> 00:02:03.300
I mean, I guess
we could ask you,

00:02:03.300 --> 00:02:07.190
the small indie developer, to go
ahead and spend a lot of money

00:02:07.190 --> 00:02:10.120
on some back end
services and then

00:02:10.120 --> 00:02:12.820
go ahead and add in all that
network code to your client

00:02:12.820 --> 00:02:15.150
and deal with all
the infrastructure,

00:02:15.150 --> 00:02:17.635
and then spend a whole bunch
of time working on UI work

00:02:17.635 --> 00:02:19.010
where you can
invite your friends

00:02:19.010 --> 00:02:21.260
and make sure they're
listed in the people picker.

00:02:21.260 --> 00:02:23.170
And then add in all
that code scaffolding

00:02:23.170 --> 00:02:26.010
so that your cross platform game
can then talk to the libraries

00:02:26.010 --> 00:02:29.750
that you've written on the
Android and the iOS side.

00:02:29.750 --> 00:02:31.840
And then I suppose
in the time that you

00:02:31.840 --> 00:02:33.400
have remaining before
you ship, maybe

00:02:33.400 --> 00:02:35.190
you could work on your game.

00:02:35.190 --> 00:02:37.520
And really?

00:02:37.520 --> 00:02:39.420
Is that the best we can do?

00:02:39.420 --> 00:02:42.820
How do we get to a point
where we think this is OK?

00:02:42.820 --> 00:02:45.400
If our phones couldn't
call each other,

00:02:45.400 --> 00:02:47.290
we would be taking
them back to the stores

00:02:47.290 --> 00:02:50.330
and saying this thing is
broken, I want my money back.

00:02:50.330 --> 00:02:52.560
Why should games
be any different?

00:02:52.560 --> 00:02:54.960
And I don't think
they should be.

00:02:54.960 --> 00:02:58.790
And so that brings us to
Google Play Games services.

00:02:58.790 --> 00:03:01.630
And what you may or may
not know about Play Games

00:03:01.630 --> 00:03:03.800
services is that one
of our core tenets

00:03:03.800 --> 00:03:07.889
is that the entire experience
should be cross platform.

00:03:07.889 --> 00:03:09.430
I think a lot of
developers out there

00:03:09.430 --> 00:03:10.957
still think we are Android only.

00:03:10.957 --> 00:03:12.540
And maybe that's
because we're Google,

00:03:12.540 --> 00:03:14.440
or maybe it's just
the green in the logo.

00:03:14.440 --> 00:03:16.821
I think we should have gone
for a nice multicolored logo.

00:03:16.821 --> 00:03:18.320
But the fact of the
matter is, we've

00:03:18.320 --> 00:03:23.210
had library support both
for Android and from iOS

00:03:23.210 --> 00:03:24.700
when we first launched.

00:03:24.700 --> 00:03:25.200
Yeah, sorry.

00:03:25.200 --> 00:03:27.560
I wasn't quite sure
legally-- anyway.

00:03:27.560 --> 00:03:30.550
And so we do love both
of these platforms.

00:03:30.550 --> 00:03:32.895
And we should point
out we also have a REST

00:03:32.895 --> 00:03:36.200
service available for everything
so that any device that

00:03:36.200 --> 00:03:38.651
can access the internet could
access these games services.

00:03:38.651 --> 00:03:39.150
Right?

00:03:39.150 --> 00:03:41.920
And if in the future one
day your refrigerator's

00:03:41.920 --> 00:03:44.450
hooked up to the internet, you
could unlock an achievement

00:03:44.450 --> 00:03:46.600
for eating the last
of the ice cream.

00:03:46.600 --> 00:03:50.190
And so we've had library
support for a lot

00:03:50.190 --> 00:03:51.700
of these cross
platform features.

00:03:51.700 --> 00:03:52.200
Right?

00:03:52.200 --> 00:03:55.550
We've had cross platform
achievements and Cloud Save,

00:03:55.550 --> 00:03:58.100
which can be really
cool if you happen

00:03:58.100 --> 00:04:00.710
to use both types of
devices regularly.

00:04:00.710 --> 00:04:01.300
I do.

00:04:01.300 --> 00:04:03.114
You know, I can play
a game on my iPhone

00:04:03.114 --> 00:04:04.530
and save it to the
cloud, and then

00:04:04.530 --> 00:04:06.830
continue from where I
left off on a Nexus 7.

00:04:06.830 --> 00:04:08.750
And that's pretty cool.

00:04:08.750 --> 00:04:10.920
When you see that happen,
it's kind of magic.

00:04:10.920 --> 00:04:13.070
And I'm guessing for a lot
of people in this room,

00:04:13.070 --> 00:04:15.410
you also have multiple
brands of devices

00:04:15.410 --> 00:04:18.089
that you're using
at the same time.

00:04:18.089 --> 00:04:20.089
Granted, probably among
the general population,

00:04:20.089 --> 00:04:21.709
this isn't quite so comment.

00:04:21.709 --> 00:04:23.420
But things do get
more interesting

00:04:23.420 --> 00:04:25.720
once we bring in cross
platform leader boards.

00:04:25.720 --> 00:04:29.960
Then even if I am a one brand
device kind of household,

00:04:29.960 --> 00:04:32.900
I can still compare my scores
with that of my friends.

00:04:32.900 --> 00:04:35.830
Again, no matter what
kind of device they're on.

00:04:35.830 --> 00:04:37.700
And then we've had
multiplayer support.

00:04:37.700 --> 00:04:39.990
And it's been a
little incomplete.

00:04:39.990 --> 00:04:42.910
So we launched with support
for real time multiplayer

00:04:42.910 --> 00:04:45.160
on Android devices back
when the service first

00:04:45.160 --> 00:04:47.120
launched about 10 months ago.

00:04:47.120 --> 00:04:49.230
And then we added
support for turn

00:04:49.230 --> 00:04:51.290
based asynchronous
multiplayer games.

00:04:51.290 --> 00:04:55.420
Again, on Android devices,
about two months ago.

00:04:55.420 --> 00:04:57.340
But something has been missing.

00:04:57.340 --> 00:05:00.580
And so what we are super excited
to be launching this week

00:05:00.580 --> 00:05:03.770
is cross platform multiplayer
for both Android and iOS

00:05:03.770 --> 00:05:04.820
devices.

00:05:04.820 --> 00:05:05.630
Hooray.

00:05:05.630 --> 00:05:09.114
[APPLAUSE] Yeah!

00:05:09.114 --> 00:05:10.030
You can clap for that.

00:05:10.030 --> 00:05:12.120
That's cool.

00:05:12.120 --> 00:05:14.242
And so you might be
asking, well, OK,

00:05:14.242 --> 00:05:15.950
this is great, but is
it really worth it?

00:05:15.950 --> 00:05:17.658
This suddenly seems
like extra headaches.

00:05:17.658 --> 00:05:20.240
I now have to keep these
two clients in sync

00:05:20.240 --> 00:05:22.490
when I push out an update.

00:05:22.490 --> 00:05:23.830
And my answer is yes.

00:05:23.830 --> 00:05:26.650
I guess it would be, otherwise
I wouldn't be giving this talk.

00:05:26.650 --> 00:05:27.772
For multiple reasons.

00:05:27.772 --> 00:05:29.730
The first, honestly, it
is a really cool trick.

00:05:29.730 --> 00:05:32.250
The first time you see a
cross platform real time

00:05:32.250 --> 00:05:37.166
game across an iPad and a
Nexus 7, it's kind of magic.

00:05:37.166 --> 00:05:38.540
You're like, how
did that happen?

00:05:38.540 --> 00:05:40.360
What kind of crazy
sorcery is this?

00:05:40.360 --> 00:05:41.080
Right?

00:05:41.080 --> 00:05:44.260
So it is very cool, and you'll
get street cred, I guess,

00:05:44.260 --> 00:05:46.087
if you can make this happen.

00:05:46.087 --> 00:05:47.670
The second thing,
honestly, is I think

00:05:47.670 --> 00:05:49.765
it's the right thing to do.

00:05:49.765 --> 00:05:51.640
As game developers,
we've been saying forever

00:05:51.640 --> 00:05:53.780
that games are the
ultimate social experience.

00:05:53.780 --> 00:05:55.960
That our ancestors,
once they were

00:05:55.960 --> 00:05:58.295
able to hunt enough
meat to not starve

00:05:58.295 --> 00:06:02.379
and they were able to get loin
cloths and hang out in caves,

00:06:02.379 --> 00:06:04.670
the next thing they did was
they played games together.

00:06:04.670 --> 00:06:05.170
Right?

00:06:05.170 --> 00:06:07.460
Games are sort of the
ultimate social experience.

00:06:07.460 --> 00:06:09.260
People have been
doing it forever.

00:06:09.260 --> 00:06:11.490
Animals do it.

00:06:11.490 --> 00:06:13.210
It's a fantastic thing.

00:06:13.210 --> 00:06:15.690
And it seems kind
of weird and broken

00:06:15.690 --> 00:06:18.650
that not everybody can play
games with all their friends

00:06:18.650 --> 00:06:22.340
because they just chose to buy
a different brand of phone.

00:06:22.340 --> 00:06:24.460
So I think we need to fix this.

00:06:24.460 --> 00:06:26.710
And then honestly just from
a technical point of view,

00:06:26.710 --> 00:06:28.585
you're going to have
much better matchmaking.

00:06:28.585 --> 00:06:30.820
And I'll drill into
this a little bit.

00:06:30.820 --> 00:06:33.335
If you think about a
typical mobile multiplayer

00:06:33.335 --> 00:06:34.710
setup, generally
speaking, you're

00:06:34.710 --> 00:06:38.037
going to have a client
peer to peer mesh network.

00:06:38.037 --> 00:06:40.370
Something sort of like this,
where all these devices are

00:06:40.370 --> 00:06:42.230
talking directly to each other.

00:06:42.230 --> 00:06:44.650
And what we find in
these kinds of situations

00:06:44.650 --> 00:06:46.870
is the quality of
your game experience

00:06:46.870 --> 00:06:49.310
is directly proportional
to the number of people

00:06:49.310 --> 00:06:51.217
you have playing
at any given time.

00:06:51.217 --> 00:06:52.800
So if there's a lot
of people playing,

00:06:52.800 --> 00:06:55.630
you're going to have a really
good multiplayer experience.

00:06:55.630 --> 00:06:58.270
You know, by contrast, if you
had a really sparse network,

00:06:58.270 --> 00:07:00.020
if you didn't have a
lot of people looking

00:07:00.020 --> 00:07:01.720
to play at any
point, you're going

00:07:01.720 --> 00:07:04.730
to have fewer options when
it comes to matchmaking.

00:07:04.730 --> 00:07:08.420
You might find that your
players in San Francisco,

00:07:08.420 --> 00:07:10.717
their only option is going
to be some player way

00:07:10.717 --> 00:07:13.050
the heck on the other side
of the world in South Africa.

00:07:13.050 --> 00:07:15.170
And no matter how
hard you try, you're

00:07:15.170 --> 00:07:17.760
not going to get a great
connection time there.

00:07:17.760 --> 00:07:20.246
You can't increase
the speed of light.

00:07:20.246 --> 00:07:21.620
You also might
find that it takes

00:07:21.620 --> 00:07:24.230
a lot longer for
your players to find

00:07:24.230 --> 00:07:25.641
somebody else to play with.

00:07:25.641 --> 00:07:26.140
Right?

00:07:26.140 --> 00:07:27.670
Again, you've got
a sparse network.

00:07:27.670 --> 00:07:29.211
Maybe not a lot of
people are looking

00:07:29.211 --> 00:07:31.140
to play at any given
moment of the day.

00:07:31.140 --> 00:07:33.450
Your players have to wait
longer to find matches.

00:07:33.450 --> 00:07:35.470
And they'll get bored and leave.

00:07:35.470 --> 00:07:38.210
I think we've found that
your players will start

00:07:38.210 --> 00:07:40.840
to leave in significant numbers
after like 12 seconds, which

00:07:40.840 --> 00:07:43.640
isn't really a lot of time.

00:07:43.640 --> 00:07:46.830
And so what if we were able
to take your pool of players

00:07:46.830 --> 00:07:48.560
and double it?

00:07:48.560 --> 00:07:52.230
So at this point now, we
have a much richer pool

00:07:52.230 --> 00:07:53.910
of potential
opponents that we can

00:07:53.910 --> 00:07:55.790
start matching up
against each other.

00:07:55.790 --> 00:07:57.384
And that means one,
we can match up

00:07:57.384 --> 00:07:59.550
people who we know are going
to have better internet

00:07:59.550 --> 00:08:02.310
connections, who are close
to each other geographically.

00:08:02.310 --> 00:08:04.700
And two, we can match
them up much faster.

00:08:04.700 --> 00:08:06.990
So you have a much better
matchmaking experience

00:08:06.990 --> 00:08:08.510
happening much, much quicker.

00:08:08.510 --> 00:08:11.180
And so I think
that's pretty good.

00:08:11.180 --> 00:08:12.600
So this is a lot of talk.

00:08:12.600 --> 00:08:14.840
Let's show a brief demo.

00:08:14.840 --> 00:08:16.080
This is Battle Pillars.

00:08:16.080 --> 00:08:18.000
This is an upcoming
version of Battle Pillars

00:08:18.000 --> 00:08:19.900
from the developers Hit Sense.

00:08:19.900 --> 00:08:22.430
They were kind enough
to start hacking

00:08:22.430 --> 00:08:23.960
with this library for us.

00:08:23.960 --> 00:08:26.970
And they already had
their Android version

00:08:26.970 --> 00:08:29.472
of their game working
using Play Games services.

00:08:29.472 --> 00:08:31.930
And then all in all, it probably
took them less than a week

00:08:31.930 --> 00:08:35.460
to get the iOS version
working and talking

00:08:35.460 --> 00:08:38.215
to the Android versions as well.

00:08:38.215 --> 00:08:40.090
They probably could have
done it a lot faster

00:08:40.090 --> 00:08:42.650
if we weren't swapping out the
library on them every week.

00:08:42.650 --> 00:08:46.420
But that's what happens when
you're in early development.

00:08:46.420 --> 00:08:48.990
So let's talk a little more
about the real time multiplayer

00:08:48.990 --> 00:08:51.790
aspects.

00:08:51.790 --> 00:08:53.610
So we do set up a
peer to peer network

00:08:53.610 --> 00:08:54.970
between different devices.

00:08:54.970 --> 00:08:57.950
A player can, of course,
choose to invite their friends.

00:08:57.950 --> 00:09:00.130
But if they do decide
they want to auto match,

00:09:00.130 --> 00:09:02.920
we're fairly intelligent about
who we auto match players up

00:09:02.920 --> 00:09:05.050
against.

00:09:05.050 --> 00:09:10.830
So we've got probably 10 months
worth of machine learning

00:09:10.830 --> 00:09:12.490
data built up
where we've started

00:09:12.490 --> 00:09:14.120
to learn that not
only do players

00:09:14.120 --> 00:09:16.020
in the same general
geographic location

00:09:16.020 --> 00:09:18.350
tend to have better
connections, but also we've

00:09:18.350 --> 00:09:20.960
learned that, oh, players in
city A and players in city

00:09:20.960 --> 00:09:24.100
B for some reason-- maybe
the tube on the interwebs

00:09:24.100 --> 00:09:26.112
is really big between
those two cities--

00:09:26.112 --> 00:09:27.570
have really good
connection speeds.

00:09:27.570 --> 00:09:29.520
But players in city A
and players in city C

00:09:29.520 --> 00:09:30.840
don't connect very well.

00:09:30.840 --> 00:09:34.190
And so we've started to
learn about what players

00:09:34.190 --> 00:09:36.740
will potentially play
well together simply

00:09:36.740 --> 00:09:38.170
based on sort of
connection time.

00:09:38.170 --> 00:09:42.070
And we've learned that generally
over the last few months.

00:09:42.070 --> 00:09:45.170
So once we are able to
intelligently match up people,

00:09:45.170 --> 00:09:46.770
we can get them
together in a game.

00:09:46.770 --> 00:09:49.210
The devices will then connect
up to each other directly

00:09:49.210 --> 00:09:51.170
through a peer to
peer mesh network that

00:09:51.170 --> 00:09:53.780
looks a little
something like this.

00:09:53.780 --> 00:09:55.980
We do allow you to
choose variants and bit

00:09:55.980 --> 00:09:58.565
masks so that if, for
instance, your game had

00:09:58.565 --> 00:10:01.799
a capture the flag and a
team death match variant,

00:10:01.799 --> 00:10:04.090
and you found that your
players only wanted to match up

00:10:04.090 --> 00:10:06.570
with other people that were
playing team death match,

00:10:06.570 --> 00:10:09.364
we could get rid of those
players that were-- sorry--

00:10:09.364 --> 00:10:11.780
get rid of those players that
were looking to play capture

00:10:11.780 --> 00:10:13.979
the flag and make sure that
you only get matched up

00:10:13.979 --> 00:10:16.270
with other people looking to
play the same type of game

00:10:16.270 --> 00:10:17.900
as you.

00:10:17.900 --> 00:10:20.860
We do a fair amount of
work around NAT busting.

00:10:20.860 --> 00:10:24.040
I don't understand all the
technical details myself,

00:10:24.040 --> 00:10:26.280
but generally
speaking, if you find

00:10:26.280 --> 00:10:28.070
that your user is
behind a firewall

00:10:28.070 --> 00:10:30.510
or is unable to connect
with another device,

00:10:30.510 --> 00:10:32.380
we generally figure
out a way around this.

00:10:32.380 --> 00:10:35.620
I think in roughly
92% of the time.

00:10:35.620 --> 00:10:38.720
As for those other
8% of your players,

00:10:38.720 --> 00:10:41.670
if they are behind some
incredibly strict firewall that

00:10:41.670 --> 00:10:43.470
simply doesn't allow
them to connect

00:10:43.470 --> 00:10:45.790
to another device
no matter what,

00:10:45.790 --> 00:10:47.920
we will allow them
to send their game

00:10:47.920 --> 00:10:50.067
messages through Google servers.

00:10:50.067 --> 00:10:51.650
So they can send
their messages to us,

00:10:51.650 --> 00:10:53.580
and then we can relay
that on to the player

00:10:53.580 --> 00:10:55.390
they were trying to connect to.

00:10:55.390 --> 00:10:57.340
And obviously,
this is much slower

00:10:57.340 --> 00:11:00.190
than connecting to
another device directly,

00:11:00.190 --> 00:11:03.080
but we are going on the
theory that any connection is

00:11:03.080 --> 00:11:06.710
better than no
connection at all.

00:11:06.710 --> 00:11:09.150
We also do support invitations,
as I mentioned earlier.

00:11:09.150 --> 00:11:11.840
Suppose you want to invite
specific people to play a game.

00:11:11.840 --> 00:11:12.647
Those work as well.

00:11:12.647 --> 00:11:14.230
I think, as you saw
in the last slide,

00:11:14.230 --> 00:11:17.680
we do send messages to Android
devices using Google Cloud

00:11:17.680 --> 00:11:18.810
Messaging.

00:11:18.810 --> 00:11:21.450
But we also send Apple
push notifications

00:11:21.450 --> 00:11:23.380
to users with iOS devices.

00:11:23.380 --> 00:11:26.130
You would upload your
push notification certs

00:11:26.130 --> 00:11:29.150
to our server, and then we
would use those to make calls

00:11:29.150 --> 00:11:31.820
to players on behalf
of your application.

00:11:31.820 --> 00:11:34.750
And so what that means is
whether your application is

00:11:34.750 --> 00:11:37.070
running, whether it's
running in the background,

00:11:37.070 --> 00:11:39.910
whether it's been
terminated for memory,

00:11:39.910 --> 00:11:42.000
your user will still
get that notification.

00:11:42.000 --> 00:11:43.120
They can click on it.

00:11:43.120 --> 00:11:45.380
It will bring up your
game with the data

00:11:45.380 --> 00:11:47.350
available in that
notification payload.

00:11:47.350 --> 00:11:49.796
And you're then able to
jump right into a game

00:11:49.796 --> 00:11:51.420
no matter what state
that your game was

00:11:51.420 --> 00:11:54.810
in before, which
is kind of nice.

00:11:54.810 --> 00:11:56.260
Messages can be sent two ways.

00:11:56.260 --> 00:11:58.620
There's reliable, this
is when we absolutely

00:11:58.620 --> 00:12:01.410
want to make sure a message
is received by another player.

00:12:01.410 --> 00:12:04.860
This means that messages are
guaranteed to be received.

00:12:04.860 --> 00:12:08.610
You will receive a receipt
that the message was read.

00:12:08.610 --> 00:12:10.720
All these reliable
messages are guaranteed

00:12:10.720 --> 00:12:13.130
to be received in the
order they were sent.

00:12:13.130 --> 00:12:15.150
But of course, this tends
to be a little slower.

00:12:15.150 --> 00:12:16.691
And then we have
unreliable messages.

00:12:16.691 --> 00:12:18.200
This is where you
say, I don't care

00:12:18.200 --> 00:12:20.921
about dropping messages or
messages being received out

00:12:20.921 --> 00:12:21.420
of order.

00:12:21.420 --> 00:12:22.836
Just send this
data as fast as you

00:12:22.836 --> 00:12:24.960
can to all the other players.

00:12:24.960 --> 00:12:28.320
For those of you who know
about network protocols,

00:12:28.320 --> 00:12:30.430
this first one is
basically XMPP,

00:12:30.430 --> 00:12:31.855
and this bottom one is UDP.

00:12:31.855 --> 00:12:34.100
Or I guess I should
say it's usually UDP.

00:12:34.100 --> 00:12:36.796
Sometimes it's not.

00:12:36.796 --> 00:12:38.920
And so generally the way
we see game developers use

00:12:38.920 --> 00:12:40.750
this is they will send
a reliable message

00:12:40.750 --> 00:12:43.630
for initial game set up,
and hey the game is over,

00:12:43.630 --> 00:12:44.840
here are the final results.

00:12:44.840 --> 00:12:46.820
And then they'll use
unreliable messages

00:12:46.820 --> 00:12:49.559
for most of the other
game messaging in between.

00:12:49.559 --> 00:12:51.725
And in case I didn't make
it clear at the beginning,

00:12:51.725 --> 00:12:53.890
all of this is totally free.

00:12:53.890 --> 00:12:55.121
So goodbye, bag of money.

00:12:55.121 --> 00:12:56.870
I don't know why you're
storing your money

00:12:56.870 --> 00:12:58.900
in a big sack like that anyway.

00:12:58.900 --> 00:13:01.310
Our whole point here is we
want to make gaming better.

00:13:01.310 --> 00:13:03.380
And that means one,
making multiplayer games

00:13:03.380 --> 00:13:04.424
truly multiplayer.

00:13:04.424 --> 00:13:06.090
But that also means
making sure that you

00:13:06.090 --> 00:13:08.790
can spend more time on
gameplay and less time

00:13:08.790 --> 00:13:10.720
on boring stuff
like network code

00:13:10.720 --> 00:13:14.305
and dealing with backend
infrastructure issues.

00:13:14.305 --> 00:13:16.680
So we've talked a little about
the real time multiplayer.

00:13:16.680 --> 00:13:19.470
Let me give you a few
details about the turn-based

00:13:19.470 --> 00:13:21.740
asynchronous
multiplayer aspects.

00:13:21.740 --> 00:13:23.150
Like in real time
multiplayer, we

00:13:23.150 --> 00:13:26.070
allow you to match up with
people through invitations.

00:13:26.070 --> 00:13:28.830
Or we can automatch you
with other random folks

00:13:28.830 --> 00:13:30.540
out there on the internet.

00:13:30.540 --> 00:13:34.710
Again, we also, by the way,
allow you to mix and match.

00:13:34.710 --> 00:13:36.440
If you want to start
a five player game

00:13:36.440 --> 00:13:38.379
and want to invite
two specific people

00:13:38.379 --> 00:13:40.920
and just want to be automatched
with two other random people,

00:13:40.920 --> 00:13:42.442
we allow you to do that.

00:13:42.442 --> 00:13:43.900
And I guess the
big difference here

00:13:43.900 --> 00:13:45.649
is we don't care so
much about ping times.

00:13:45.649 --> 00:13:48.550
These are generally games where
a turn will last 24 hours,

00:13:48.550 --> 00:13:52.940
and so ping times don't
really matter there.

00:13:52.940 --> 00:13:54.630
The way the system
generally works

00:13:54.630 --> 00:13:58.310
is that our servers keep some
information about your game.

00:13:58.310 --> 00:14:00.750
So we know some data
that is associated

00:14:00.750 --> 00:14:01.970
with that particular match.

00:14:01.970 --> 00:14:03.180
We know the players
who are there

00:14:03.180 --> 00:14:04.430
in the game or the
players that are waiting

00:14:04.430 --> 00:14:05.700
to be invited into the game.

00:14:05.700 --> 00:14:07.270
And we know who's turn it is.

00:14:07.270 --> 00:14:10.510
We'll send that information on,
then, to the player who's turn

00:14:10.510 --> 00:14:12.350
is supposed to be taken next.

00:14:12.350 --> 00:14:15.710
That player's game client
will then take the turn,

00:14:15.710 --> 00:14:18.470
update the game data,
and also determine

00:14:18.470 --> 00:14:20.240
who's supposed to go next.

00:14:20.240 --> 00:14:23.240
That information then gets
sent back to our servers.

00:14:23.240 --> 00:14:25.320
We then pass that along
to the next player who

00:14:25.320 --> 00:14:27.700
then will take their
turn, alter the game data,

00:14:27.700 --> 00:14:29.750
determine who the
next player is,

00:14:29.750 --> 00:14:32.950
send that back to us,
and so on and so forth.

00:14:32.950 --> 00:14:36.540
And I should note this example
was kind of round robin,

00:14:36.540 --> 00:14:38.620
but it doesn't have
to be that way.

00:14:38.620 --> 00:14:40.860
Like if we were playing a
game like Risk or something

00:14:40.860 --> 00:14:44.100
and our bunny were to get
eliminated from the game--

00:14:44.100 --> 00:14:48.080
sorry-- our game
client could know that.

00:14:48.080 --> 00:14:50.200
And we could determine,
oh, OK, the next player

00:14:50.200 --> 00:14:52.300
to take their turn
is actually the bear.

00:14:52.300 --> 00:14:54.580
And we would just pass that
information along to them.

00:14:54.580 --> 00:14:57.722
So you can have turns going in
any arbitrary order you want.

00:14:57.722 --> 00:14:59.930
Granted, most games tend to
just go around the table.

00:14:59.930 --> 00:15:03.250
But again, it's
completely up to you.

00:15:03.250 --> 00:15:05.640
In all of these
situations, both turn based

00:15:05.640 --> 00:15:08.184
and real time, we provide
all the UI for you.

00:15:08.184 --> 00:15:09.600
So if you don't
feel like spending

00:15:09.600 --> 00:15:12.770
your time building out a let
me pick out with my friends

00:15:12.770 --> 00:15:16.256
picker, and a waiting room, and
a let me see all of the games

00:15:16.256 --> 00:15:18.880
that I have queued up and which
ones are waiting for me to take

00:15:18.880 --> 00:15:20.870
my turn, I don't blame you.

00:15:20.870 --> 00:15:22.840
That's really
boring stuff, and we

00:15:22.840 --> 00:15:24.320
don't want you to have to do it.

00:15:24.320 --> 00:15:27.050
On the other hand, if you have
a marketing department that

00:15:27.050 --> 00:15:29.250
insists that you have a
consistent brand experience

00:15:29.250 --> 00:15:31.083
throughout the blah,
blah, blah, blah, blah,

00:15:31.083 --> 00:15:35.740
then we do let you grab all this
data directly from our service,

00:15:35.740 --> 00:15:38.720
and you can go ahead and
you can create your own UI.

00:15:38.720 --> 00:15:40.000
But again, that's up to you.

00:15:40.000 --> 00:15:41.930
Our goal here is
that we want to make

00:15:41.930 --> 00:15:43.760
sure you spend more
time on gameplay

00:15:43.760 --> 00:15:46.322
and less time on UI work.

00:15:46.322 --> 00:15:47.780
Gosh, I wonder if
we're going to be

00:15:47.780 --> 00:15:49.650
able to eliminate that last bar.

00:15:49.650 --> 00:15:52.840
Let's find out.

00:15:52.840 --> 00:15:53.760
Sorry.

00:15:53.760 --> 00:15:56.650
So I would be remiss if I didn't
mention a couple of drawbacks

00:15:56.650 --> 00:15:57.680
here.

00:15:57.680 --> 00:16:00.560
Because I do want to be
upfront about all of this.

00:16:00.560 --> 00:16:02.080
As you know, all
this game data is

00:16:02.080 --> 00:16:04.410
being generated by the
clients themselves.

00:16:04.410 --> 00:16:08.090
And our server does nothing
more than pass that data along

00:16:08.090 --> 00:16:09.510
from one player to the next.

00:16:09.510 --> 00:16:12.640
As far as we're concerned,
that's an opaque blob of data.

00:16:12.640 --> 00:16:15.340
We know nothing else about it.

00:16:15.340 --> 00:16:16.950
And this has two implications.

00:16:16.950 --> 00:16:19.340
One is that the user
with a hacked game client

00:16:19.340 --> 00:16:23.240
could alter this in a way that
your game might not expect.

00:16:23.240 --> 00:16:27.800
And of course, in this
kind of situation,

00:16:27.800 --> 00:16:29.340
you just want to
code defensively.

00:16:29.340 --> 00:16:29.840
Right?

00:16:29.840 --> 00:16:32.794
You should always look at
any player generated data

00:16:32.794 --> 00:16:34.210
with a little
amount of suspicion.

00:16:34.210 --> 00:16:34.710
Right?

00:16:34.710 --> 00:16:36.880
And make sure that if
something looks off to you,

00:16:36.880 --> 00:16:41.451
you just reject it and don't
let it set your player on fire.

00:16:41.451 --> 00:16:43.950
This also, by the way, means
that you don't have the ability

00:16:43.950 --> 00:16:48.530
to perform any server side
logic or running batch calls

00:16:48.530 --> 00:16:50.870
in the background via
Cron job or analytics

00:16:50.870 --> 00:16:52.100
or anything like that.

00:16:52.100 --> 00:16:54.650
Again, all the server is
really just on your client,

00:16:54.650 --> 00:16:58.590
and our servers
just pass it around.

00:16:58.590 --> 00:16:59.410
And I'll be honest.

00:16:59.410 --> 00:17:01.040
This is generally
a concern you only

00:17:01.040 --> 00:17:03.940
need to have once your
game gets more popular

00:17:03.940 --> 00:17:06.284
or your company gets larger.

00:17:06.284 --> 00:17:07.700
And when you do
get to this point,

00:17:07.700 --> 00:17:10.730
it's fairly easy to make the
transition from keep your game

00:17:10.730 --> 00:17:14.010
data on our clients to
keeping game data on, say,

00:17:14.010 --> 00:17:15.720
servers that you're
running yourself

00:17:15.720 --> 00:17:18.349
or your own cloud based
platform that you're using.

00:17:18.349 --> 00:17:21.660
Something like App Engine, say.

00:17:21.660 --> 00:17:24.460
Basically, you would keep the
entire system you have before.

00:17:24.460 --> 00:17:27.369
The only difference is that
instead of your game data being

00:17:27.369 --> 00:17:29.930
your actual game
data, the game data

00:17:29.930 --> 00:17:32.900
would be a link to where
your real game data lives

00:17:32.900 --> 00:17:36.970
on your server or on your App
Engine instance or whatever.

00:17:36.970 --> 00:17:39.470
This, by the way, kind of gives
you the best of both worlds.

00:17:39.470 --> 00:17:39.970
Right?

00:17:39.970 --> 00:17:41.900
You can still keep
all of our UI if you

00:17:41.900 --> 00:17:43.400
don't feel like
building out our UI.

00:17:43.400 --> 00:17:45.691
You can still take advantage
of our notification system

00:17:45.691 --> 00:17:48.310
to notify Android
and iOS devices.

00:17:48.310 --> 00:17:51.760
And most importantly, your
players' incoming games

00:17:51.760 --> 00:17:54.620
will still show up on the Play
Games app on Android devices

00:17:54.620 --> 00:17:55.890
if they're looking at that.

00:17:55.890 --> 00:17:58.510
But this also then means
that you get your data

00:17:58.510 --> 00:18:01.820
on your servers, and you can
perform server side validation.

00:18:01.820 --> 00:18:04.470
You can perform batch
processing in the background.

00:18:04.470 --> 00:18:06.110
You can analyze all this data.

00:18:06.110 --> 00:18:08.160
So this is kind of nice.

00:18:08.160 --> 00:18:10.130
That being said,
I've talked to lots

00:18:10.130 --> 00:18:11.910
of game developers,
even larger ones.

00:18:11.910 --> 00:18:14.285
I don't think I've talked to
a single game developer that

00:18:14.285 --> 00:18:16.730
wasn't strapped for server
engineering resources.

00:18:16.730 --> 00:18:19.510
So if you're just
starting out and you're

00:18:19.510 --> 00:18:22.060
trying to prove out you're
a minimum viable product

00:18:22.060 --> 00:18:24.340
or you know what minimum
viable product means,

00:18:24.340 --> 00:18:27.820
and you're at this
early iteration stage,

00:18:27.820 --> 00:18:30.780
I would encourage you to stick
with the client only version

00:18:30.780 --> 00:18:32.230
if you can.

00:18:32.230 --> 00:18:33.670
And once you
actually have gotten

00:18:33.670 --> 00:18:36.330
to the point where you say yes,
I think I have an actual fun

00:18:36.330 --> 00:18:38.850
game, then go ahead
and transition

00:18:38.850 --> 00:18:40.770
to this server solution.

00:18:40.770 --> 00:18:43.610
But that's just
my recommendation.

00:18:43.610 --> 00:18:46.620
So let's talk a little bit about
some implementation strategies.

00:18:46.620 --> 00:18:49.696
Right now, we have
a Java library

00:18:49.696 --> 00:18:51.570
available on Android
devices for those of you

00:18:51.570 --> 00:18:53.440
who are writing games in Java.

00:18:53.440 --> 00:18:56.330
And on the iOS side, we
have an Objective C library

00:18:56.330 --> 00:18:59.380
for those of you who are
writing gains in Objective C.

00:18:59.380 --> 00:19:03.080
But the truth is, not a lot
of people make games this way.

00:19:03.080 --> 00:19:05.190
We did, or we tried it.

00:19:05.190 --> 00:19:08.140
This is a game we built
called Nostalgic Racer,

00:19:08.140 --> 00:19:10.530
and here's a quick
little demo of it.

00:19:10.530 --> 00:19:11.790
And I'll be honest.

00:19:11.790 --> 00:19:14.300
This was a terrible idea.

00:19:14.300 --> 00:19:16.560
While this gameplay actually
works, if you watch,

00:19:16.560 --> 00:19:19.290
you can see the cars' position
relative to each other

00:19:19.290 --> 00:19:20.110
is correct.

00:19:20.110 --> 00:19:21.290
Everything else looks off.

00:19:21.290 --> 00:19:21.789
Right?

00:19:21.789 --> 00:19:23.660
Like the color palette is off.

00:19:23.660 --> 00:19:25.870
The car geometry is off.

00:19:25.870 --> 00:19:28.090
Thanks to an off by one
error, the actual track

00:19:28.090 --> 00:19:29.650
is off by a little bit.

00:19:29.650 --> 00:19:32.859
And it turns out the
iPad accelerates faster

00:19:32.859 --> 00:19:33.900
than the Android version.

00:19:33.900 --> 00:19:37.730
So I usually won any
game that we played.

00:19:37.730 --> 00:19:39.810
So this obviously
had a lot of issues,

00:19:39.810 --> 00:19:42.680
and it also meant that
any type of change we made

00:19:42.680 --> 00:19:44.420
had to be made twice.

00:19:44.420 --> 00:19:48.300
Like once on the Java
code base and once

00:19:48.300 --> 00:19:49.672
on the Objective C code base.

00:19:49.672 --> 00:19:51.630
And so my guess is very
few of you are actually

00:19:51.630 --> 00:19:53.710
building cross platform
games this way.

00:19:53.710 --> 00:19:56.502
Or probably aren't any more
if you've tried it once.

00:19:56.502 --> 00:19:57.960
And so for a lot
of you, that means

00:19:57.960 --> 00:20:00.190
using some type of game
engine or middleware.

00:20:00.190 --> 00:20:02.231
I know that one of the
more common ones out there

00:20:02.231 --> 00:20:03.420
has been Unity.

00:20:03.420 --> 00:20:05.480
I believe they're having
a developer day today.

00:20:05.480 --> 00:20:06.310
But stay here.

00:20:06.310 --> 00:20:08.720
This is going to be better.

00:20:08.720 --> 00:20:11.260
So basically you write
your Unity project in C#,

00:20:11.260 --> 00:20:13.880
or JavaScript if
you hate yourself.

00:20:13.880 --> 00:20:16.280
And it basically--
[LAUGHTER] ah,

00:20:16.280 --> 00:20:19.590
some JavaScript
engineers out here I see.

00:20:19.590 --> 00:20:23.570
And it basically generates
a mono interpreter running

00:20:23.570 --> 00:20:24.682
in C++.

00:20:24.682 --> 00:20:26.140
And then there's
some work involved

00:20:26.140 --> 00:20:29.480
in writing some scaffolding
to connect this generated code

00:20:29.480 --> 00:20:31.620
to the libraries on the
two various platforms.

00:20:31.620 --> 00:20:34.380
And there are various
ways to handle this part.

00:20:34.380 --> 00:20:36.080
Some of you have
done it yourself.

00:20:36.080 --> 00:20:39.210
There are some plug-ins out
there for you to do this.

00:20:39.210 --> 00:20:42.350
And we have written
our own Unity plug-in

00:20:42.350 --> 00:20:44.090
that is available
on our GitHub page.

00:20:44.090 --> 00:20:45.510
It is open source.

00:20:45.510 --> 00:20:49.490
It is freely available for
you to use, download, modify,

00:20:49.490 --> 00:20:51.300
alter to your heart's content.

00:20:51.300 --> 00:20:54.520
And we have had support for
achievements, cloud save

00:20:54.520 --> 00:20:56.430
and leader boards
up until this point.

00:20:56.430 --> 00:20:59.260
And this week we're going
to be adding support

00:20:59.260 --> 00:21:03.520
for cross platform and real time
multiplayer on Android and iOS

00:21:03.520 --> 00:21:04.500
devices.

00:21:04.500 --> 00:21:06.260
So we're super happy about that.

00:21:06.260 --> 00:21:09.395
And if any of you
are Unity engineers,

00:21:09.395 --> 00:21:11.395
I think this is probably
the easiest way for you

00:21:11.395 --> 00:21:12.940
to get a multiplayer game going.

00:21:12.940 --> 00:21:17.110
So definitely check it out
if you're at all interested.

00:21:17.110 --> 00:21:19.820
So here's an example of a
game we made using Unity.

00:21:19.820 --> 00:21:22.220
We then took another
racing game and decided

00:21:22.220 --> 00:21:24.470
to take all of the
excitement of car racing out

00:21:24.470 --> 00:21:26.870
and replace it with math.

00:21:26.870 --> 00:21:29.930
So here you're answering
questions to-- math questions

00:21:29.930 --> 00:21:31.340
to make your car go faster.

00:21:31.340 --> 00:21:33.820
And I know this
is super exciting,

00:21:33.820 --> 00:21:35.720
but I'm guessing you
could do even better.

00:21:35.720 --> 00:21:38.060
But the one thing I
do want you to notice

00:21:38.060 --> 00:21:40.970
is that this does now look
like the same game running

00:21:40.970 --> 00:21:42.160
on two different devices.

00:21:42.160 --> 00:21:42.360
Right?

00:21:42.360 --> 00:21:44.080
The aspect ratio is
a little different,

00:21:44.080 --> 00:21:47.030
but we now actually have the
same game logic, the same game

00:21:47.030 --> 00:21:49.460
behavior running on
both of these devices.

00:21:49.460 --> 00:21:53.580
And we didn't have to make any
code changes to the C# project

00:21:53.580 --> 00:21:55.220
to make this run cross platform.

00:21:55.220 --> 00:21:58.560
There's no if application
dot platform dot whatever

00:21:58.560 --> 00:21:59.640
equals iOS do this.

00:21:59.640 --> 00:22:00.140
Right?

00:22:00.140 --> 00:22:02.230
It's the same code base.

00:22:02.230 --> 00:22:03.970
Which is pretty nice.

00:22:03.970 --> 00:22:06.300
So implementing this is
pretty straightforward.

00:22:06.300 --> 00:22:08.050
I'm not going to go
over it now because we

00:22:08.050 --> 00:22:10.180
have a readme file
that you should read.

00:22:10.180 --> 00:22:13.240
But basically the steps are
you would import this custom

00:22:13.240 --> 00:22:15.750
package like you would
any other custom package.

00:22:15.750 --> 00:22:17.960
We have a couple of dialogs
for you to fill out.

00:22:17.960 --> 00:22:21.510
We have one question for
you to answer on Android,

00:22:21.510 --> 00:22:24.220
and three questions for
you to answer on iOS.

00:22:24.220 --> 00:22:27.350
And then we kind of do the
rest of the work for you.

00:22:27.350 --> 00:22:29.376
The calls themselves,
they're just C# calls.

00:22:29.376 --> 00:22:30.750
We went with the
strategy that we

00:22:30.750 --> 00:22:35.070
want to make the common calls as
simple as possible and the more

00:22:35.070 --> 00:22:37.670
obscure cases possible.

00:22:37.670 --> 00:22:40.850
So you'll see here that
for instance, this call

00:22:40.850 --> 00:22:44.360
here with four parameters
would bring up the entire hey,

00:22:44.360 --> 00:22:46.100
let me invite some
folks to a game

00:22:46.100 --> 00:22:49.980
and then return that
game to my listener.

00:22:49.980 --> 00:22:53.480
We do implement the iSocial
interface where appropriate.

00:22:53.480 --> 00:22:55.230
But in places where
we do more than what's

00:22:55.230 --> 00:22:57.510
in the iSocial interface,
we have our own Play Games

00:22:57.510 --> 00:22:59.420
platform that you would call.

00:22:59.420 --> 00:23:02.670
And so I encourage
you to check it out.

00:23:02.670 --> 00:23:04.920
But what about those of you
who don't use game engines

00:23:04.920 --> 00:23:06.900
or have written your own?

00:23:06.900 --> 00:23:10.200
Well, most likely, you've
written this in C++.

00:23:10.200 --> 00:23:12.660
And then you've had to do this
somewhat annoying busy work

00:23:12.660 --> 00:23:16.155
where you add in your thin layer
of abstraction so that you port

00:23:16.155 --> 00:23:19.970
your C++ calls through JNI to
the Java library on Android,

00:23:19.970 --> 00:23:23.260
and you do something else
on the iOS side of things.

00:23:23.260 --> 00:23:25.090
And here's an extra bit of fun.

00:23:25.090 --> 00:23:28.460
On Android for multiplayer, we
then make an extra bit of calls

00:23:28.460 --> 00:23:31.400
back out to C++ for some
of the multiplayer stuff.

00:23:31.400 --> 00:23:33.950
And so this is horrible.

00:23:33.950 --> 00:23:37.030
And we thought, gee,
this is kind of a pain.

00:23:37.030 --> 00:23:40.350
And so maybe if we're developing
a cross platform service,

00:23:40.350 --> 00:23:42.680
we should have a cross
platform library.

00:23:42.680 --> 00:23:45.030
And-- yeah, you
can clap for that.

00:23:45.030 --> 00:23:48.380
We got-- [APPLAUSE] --alright.

00:23:48.380 --> 00:23:52.330
C++ developers in the house.

00:23:52.330 --> 00:23:54.416
That's a pointer right there.

00:23:54.416 --> 00:23:59.080
[LAUGHTER] So anyway, sorry.

00:23:59.080 --> 00:24:03.120
So we are releasing this week
a C++ library that you can use

00:24:03.120 --> 00:24:06.610
for your own libraries
that you've written.

00:24:06.610 --> 00:24:09.100
And I should point out this
isn't just a thin client that

00:24:09.100 --> 00:24:09.972
supports REST calls.

00:24:09.972 --> 00:24:11.680
I think there's a
bunch already out there

00:24:11.680 --> 00:24:13.010
that do something similar.

00:24:13.010 --> 00:24:15.590
We are adding in all of
the nice support features

00:24:15.590 --> 00:24:18.720
that our Java and our Objective
C libraries already have.

00:24:18.720 --> 00:24:20.990
And so this includes things
like OAuth2 management.

00:24:20.990 --> 00:24:23.700
If your OAuth token
expires, we can go ahead

00:24:23.700 --> 00:24:25.570
and get a new one
in the background

00:24:25.570 --> 00:24:28.440
without your user ever knowing
that anything was wrong.

00:24:28.440 --> 00:24:29.890
It means network retries.

00:24:29.890 --> 00:24:33.770
So if your user has earned
an achievement on an airplane

00:24:33.770 --> 00:24:35.650
and she has her phone
in airplane mode,

00:24:35.650 --> 00:24:37.660
we will store that
call and keep it

00:24:37.660 --> 00:24:39.930
until your user gets
off the airplane,

00:24:39.930 --> 00:24:41.770
turns off airplane
mode, and then we

00:24:41.770 --> 00:24:43.190
will retry that
call to make sure

00:24:43.190 --> 00:24:45.023
that she gets that
achievement she's earned.

00:24:45.023 --> 00:24:47.110
It doesn't get dropped,
which is really nice.

00:24:47.110 --> 00:24:48.950
We have some intelligent
local caching.

00:24:48.950 --> 00:24:52.440
If you submit a score
to a leaderboard that's

00:24:52.440 --> 00:24:56.260
not as good as one you
submitted five minutes ago,

00:24:56.260 --> 00:24:58.920
we won't make that
call out to the server.

00:24:58.920 --> 00:25:01.130
That will save your user
a little bit of data

00:25:01.130 --> 00:25:05.030
and also a little bit of battery
life, which is always nice.

00:25:05.030 --> 00:25:06.675
We have UI widgets
so that, again, you

00:25:06.675 --> 00:25:08.424
don't have to spend
your time building out

00:25:08.424 --> 00:25:11.420
a let's show all of the
achievements with icons

00:25:11.420 --> 00:25:15.000
depending on whether or not the
user has unlocked them or not.

00:25:15.000 --> 00:25:17.200
Again, you can leave
that UI work to us.

00:25:17.200 --> 00:25:20.220
And we have a much better
threading model on Android.

00:25:20.220 --> 00:25:23.310
So all of our methods are
non-blocking asynchronous calls

00:25:23.310 --> 00:25:25.410
that can be called
on any thread.

00:25:25.410 --> 00:25:28.360
If you're an Android engineer,
this is very exciting.

00:25:28.360 --> 00:25:31.060
If you're not, write that down
and go back to your office

00:25:31.060 --> 00:25:33.210
and tell your Android
engineer and he or she

00:25:33.210 --> 00:25:35.586
will give you a big hug.

00:25:35.586 --> 00:25:37.640
I should point out
this is version 1.0.

00:25:37.640 --> 00:25:40.454
So the library itself
is production ready,

00:25:40.454 --> 00:25:42.120
although in terms of
features right now,

00:25:42.120 --> 00:25:46.140
we have support for sign-in,
leaderboards, and achievements.

00:25:46.140 --> 00:25:48.000
That's what we currently have.

00:25:48.000 --> 00:25:52.900
I am not supposed to
commit to future features.

00:25:52.900 --> 00:25:57.010
But clearly our goal here is
to have all features available

00:25:57.010 --> 00:25:58.380
on all devices.

00:25:58.380 --> 00:26:01.827
So hopefully you can kind of
see where we're going with this.

00:26:01.827 --> 00:26:03.910
And all of this means that
you can spend less time

00:26:03.910 --> 00:26:06.940
on code scaffolding work and
more time on your game play.

00:26:06.940 --> 00:26:07.440
We did it.

00:26:07.440 --> 00:26:08.740
We got rid of that last bar.

00:26:08.740 --> 00:26:10.100
That's so great.

00:26:10.100 --> 00:26:12.080
So let's review.

00:26:12.080 --> 00:26:14.690
Here are the big things
that we talked about today.

00:26:14.690 --> 00:26:17.292
Real-time multiplayer
on iOS and Android,

00:26:17.292 --> 00:26:19.500
turn-based asynchronous
multiplayer that you can play

00:26:19.500 --> 00:26:23.540
between iOS and Android devices,
a full featured Unity plug-in,

00:26:23.540 --> 00:26:26.900
and a C++ library that you can
start hacking with I think,

00:26:26.900 --> 00:26:28.520
like, today.

00:26:28.520 --> 00:26:29.450
Yeah.

00:26:29.450 --> 00:26:32.600
And so I think with that, all
the tools and all the power

00:26:32.600 --> 00:26:34.829
are sort of in your hands now.

00:26:34.829 --> 00:26:36.870
We want to play games in
the Kerpelman household,

00:26:36.870 --> 00:26:39.780
and there are millions of
households and schoolyards

00:26:39.780 --> 00:26:41.680
and conferences
just like this one,

00:26:41.680 --> 00:26:43.570
all full of people
looking to do one thing.

00:26:43.570 --> 00:26:45.530
And that's play together.

00:26:45.530 --> 00:26:48.770
You know, Macs and PCs have
played together for years.

00:26:48.770 --> 00:26:51.340
And even then while
most of the burden

00:26:51.340 --> 00:26:52.970
has been on the
developer to add this,

00:26:52.970 --> 00:26:55.900
I think it's been a huge benefit
to both of those platforms

00:26:55.900 --> 00:26:58.280
as well as to players
and those developers.

00:26:58.280 --> 00:26:58.940
Right?

00:26:58.940 --> 00:27:01.740
And we have an even
bigger opportunity here.

00:27:01.740 --> 00:27:03.900
If all of the reports
are right, the number

00:27:03.900 --> 00:27:07.400
of smart phones in the world is
going to pass the number of PCs

00:27:07.400 --> 00:27:08.630
out there in the world.

00:27:08.630 --> 00:27:10.491
And so many of these
people are gamers.

00:27:10.491 --> 00:27:10.990
Right?

00:27:10.990 --> 00:27:12.450
So many.

00:27:12.450 --> 00:27:15.610
And so we have this opportunity
to bring the world together

00:27:15.610 --> 00:27:18.350
in gaming experiences
that have never

00:27:18.350 --> 00:27:21.200
been seen before in the
history of civilization.

00:27:21.200 --> 00:27:22.440
Like, ever.

00:27:22.440 --> 00:27:24.730
And I think that's
pretty exciting.

00:27:24.730 --> 00:27:26.200
Hopefully you do too.

00:27:26.200 --> 00:27:28.430
So thank you very much.

00:27:28.430 --> 00:27:30.270
Go ahead and follow
me on G+ or Twitter.

00:27:30.270 --> 00:27:30.870
Yeah.

00:27:30.870 --> 00:27:38.855
[APPLAUSE]

