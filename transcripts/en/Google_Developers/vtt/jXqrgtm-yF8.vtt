WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:07.275
[MUSIC PLAYING]

00:00:15.490 --> 00:00:17.920
JAKE ARCHIBALD: Hello, welcome
to Mobile Web Thursdays.

00:00:17.920 --> 00:00:19.680
With me in the studio
today is--

00:00:19.680 --> 00:00:20.660
ADDY OSMANI: Addy Osmani.

00:00:20.660 --> 00:00:22.770
JAKE ARCHIBALD: We normally
have Paul Kinlan

00:00:22.770 --> 00:00:23.760
driving these things.

00:00:23.760 --> 00:00:25.400
But he's not here today.

00:00:25.400 --> 00:00:29.295
Because unfortunately
he died, or went

00:00:29.295 --> 00:00:30.610
on holiday, or something.

00:00:30.610 --> 00:00:31.300
I'm not quite sure.

00:00:31.300 --> 00:00:34.020
But for whatever reason, I get
to sit in the driving seat.

00:00:34.020 --> 00:00:35.370
And it's a pre-record.

00:00:35.370 --> 00:00:37.760
So it's OK if I do an
accidental swear.

00:00:37.760 --> 00:00:39.190
Because we can just
edit that bit out.

00:00:39.190 --> 00:00:40.680
But we're going to try not to.

00:00:40.680 --> 00:00:41.910
ADDY OSMANI: Yeah.

00:00:41.910 --> 00:00:45.450
JAKE ARCHIBALD: This session is
about mobile web debugging.

00:00:45.450 --> 00:00:47.660
So we're going to be looking
how you can use the Web

00:00:47.660 --> 00:00:50.730
Inspector on your phone while
looking at Web Inspector on

00:00:50.730 --> 00:00:53.470
your desktop, but seeing what's
happening on your

00:00:53.470 --> 00:00:54.690
mobile device.

00:00:54.690 --> 00:00:57.240
So we may as well jump
straight into it.

00:00:57.240 --> 00:01:00.220
I'm learning the ropes of
this whole thing, still.

00:01:00.220 --> 00:01:02.600
So the tips I received from last
time is not to just keep

00:01:02.600 --> 00:01:04.500
glancing at the camera,
as I'm doing.

00:01:04.500 --> 00:01:06.385
People said that was
quite disturbing.

00:01:06.385 --> 00:01:07.400
ADDY OSMANI: It Is.

00:01:07.400 --> 00:01:08.310
It generally is.

00:01:08.310 --> 00:01:09.020
JAKE ARCHIBALD: Is it?

00:01:09.020 --> 00:01:09.960
ADDY OSMANI: A little
bit creepy.

00:01:09.960 --> 00:01:11.550
JAKE ARCHIBALD: People say
that to me in real life--

00:01:11.550 --> 00:01:12.610
ADDY OSMANI: I'm
not surprised.

00:01:12.610 --> 00:01:15.140
JAKE ARCHIBALD: I look at
them quite disturbing.

00:01:15.140 --> 00:01:17.800
Also that I look a bit like
a ghost on camera.

00:01:17.800 --> 00:01:19.050
We haven't managed
to fix that.

00:01:19.050 --> 00:01:20.600
ADDY OSMANI: He looks like a
ghost in real life, as well.

00:01:20.600 --> 00:01:23.290
Don't be too shocked.

00:01:23.290 --> 00:01:24.470
JAKE ARCHIBALD: This is a
white piece of paper.

00:01:24.470 --> 00:01:25.830
And this is me.

00:01:25.830 --> 00:01:27.060
There's nothing I can
do about that.

00:01:27.060 --> 00:01:28.905
People who've met me in real
life are just like, you just

00:01:28.905 --> 00:01:30.030
look like you on camera.

00:01:30.030 --> 00:01:31.360
You were haunting the studio.

00:01:31.360 --> 00:01:32.750
Thank you very much for
saying that, guys.

00:01:32.750 --> 00:01:34.890
That's brilliant.

00:01:34.890 --> 00:01:37.350
OK, let's do some actual stuff
with mobile phones.

00:01:37.350 --> 00:01:38.310
ADDY OSMANI: Sounds good.

00:01:38.310 --> 00:01:40.506
JAKE ARCHIBALD: So we can get
the view of the mobile device

00:01:40.506 --> 00:01:41.210
up and running.

00:01:41.210 --> 00:01:43.940
We're working with a Nexus 7.

00:01:43.940 --> 00:01:46.280
So I'm going to unlock that.

00:01:46.280 --> 00:01:48.450
So if you're going to do mobile
debugging, the first

00:01:48.450 --> 00:01:52.510
thing you want to do is go into
the Settings menu, and

00:01:52.510 --> 00:01:55.150
down to Developer Options.

00:01:55.150 --> 00:01:56.870
There you'll see this
USB debugging.

00:01:56.870 --> 00:01:58.420
You want to make sure
that's ticked.

00:01:58.420 --> 00:02:01.640
Because you won't be able
to access it otherwise.

00:02:01.640 --> 00:02:04.150
And then you need [INAUDIBLE]
setting in Chrome, as well.

00:02:04.150 --> 00:02:07.450
We're going to use the beta
version of Chrome.

00:02:07.450 --> 00:02:08.210
I think it's pronounced beta.

00:02:08.210 --> 00:02:09.650
Or maybe it's beta.

00:02:09.650 --> 00:02:11.069
It's just Chrome better.

00:02:11.069 --> 00:02:11.940
ADDY OSMANI: It's
Chrome better.

00:02:11.940 --> 00:02:12.820
JAKE ARCHIBALD: Better
than the other one.

00:02:12.820 --> 00:02:13.710
ADDY OSMANI: Yes, that's it.

00:02:13.710 --> 00:02:15.800
JAKE ARCHIBALD: So there's a few
new features in the better

00:02:15.800 --> 00:02:17.840
version, so we're going
to look at those.

00:02:17.840 --> 00:02:21.320
So you need to go into the
Settings menu here, and down

00:02:21.320 --> 00:02:22.640
to Developer Tools.

00:02:22.640 --> 00:02:24.260
And in there, as well,
you want to

00:02:24.260 --> 00:02:27.580
enable USB web debugging.

00:02:27.580 --> 00:02:31.450
And from there we can just
browse to a web page.

00:02:31.450 --> 00:02:34.080
So I'm going to call up "The
Guardian." Because we can use

00:02:34.080 --> 00:02:35.930
that as a use case.

00:02:35.930 --> 00:02:38.810
So if I wanted to debug this
page, what I would do is, I'm

00:02:38.810 --> 00:02:41.420
going to go onto my
desktop machine.

00:02:41.420 --> 00:02:44.930
And this is bit is
a bit of a pain.

00:02:44.930 --> 00:02:48.120
I tend to just Google
for Chrome Debug.

00:02:48.120 --> 00:02:50.860
And the first link is what
I want to look at.

00:02:53.902 --> 00:02:57.020
Actually if I do Chrome Android
debug that's probably

00:02:57.020 --> 00:02:59.610
the right one.

00:02:59.610 --> 00:03:01.380
Thankfully I have this in
my batch history now.

00:03:01.380 --> 00:03:03.900
So I don't have to remember
about it again.

00:03:03.900 --> 00:03:05.820
About halfway down the page.

00:03:05.820 --> 00:03:07.350
ADDY OSMANI: We've recently
refreshed these docs.

00:03:07.350 --> 00:03:09.510
And the process of getting
to Setup is a lot more

00:03:09.510 --> 00:03:11.740
straightforward than
it was before.

00:03:11.740 --> 00:03:14.520
JAKE ARCHIBALD: What I tend to
do is just copy and paste this

00:03:14.520 --> 00:03:17.620
line here into my terminal.

00:03:17.620 --> 00:03:19.610
I'm going to do that there.

00:03:19.610 --> 00:03:20.630
And that sets everything up.

00:03:20.630 --> 00:03:22.690
What it's actually doing is it's
forwarding a port from

00:03:22.690 --> 00:03:24.600
the device onto my
local machine.

00:03:24.600 --> 00:03:26.720
So I can start accessing
things.

00:03:26.720 --> 00:03:30.850
This port number here, 9222,
that's what I can access just

00:03:30.850 --> 00:03:33.530
in my browser, just in Chrome
on the desktop.

00:03:33.530 --> 00:03:36.690
And you see there it's going
to show me The Guardian."

00:03:36.690 --> 00:03:37.370
Click that.

00:03:37.370 --> 00:03:39.940
And now I've just got the
developer tools, as you would

00:03:39.940 --> 00:03:42.550
expect to see them
anywhere else.

00:03:42.550 --> 00:03:44.890
Actually, if I'm going to do
some performance testing work

00:03:44.890 --> 00:03:46.260
here, I think I've
made a mistake.

00:03:46.260 --> 00:03:48.560
Because I've just opened a
standard tab on the browser.

00:03:48.560 --> 00:03:50.010
But Addy you were saying
it's better to use

00:03:50.010 --> 00:03:51.370
an incognito tab?

00:03:51.370 --> 00:03:51.980
ADDY OSMANI: Yeah.

00:03:51.980 --> 00:03:54.190
Whenever you're doing any sort
of performance profiling in

00:03:54.190 --> 00:03:57.110
Chrome, it's generally best to
use a brand new incognito

00:03:57.110 --> 00:03:59.090
window instead of using
a standard window.

00:03:59.090 --> 00:04:02.960
Because any apps or extensions
you might have installed can

00:04:02.960 --> 00:04:05.000
actually interfere with
the figures that

00:04:05.000 --> 00:04:06.030
you're getting back.

00:04:06.030 --> 00:04:08.330
So either run in incognito
mode, or start with a

00:04:08.330 --> 00:04:10.590
completely blank
Chrome profile.

00:04:10.590 --> 00:04:12.480
And that'll just make sure
that your figures are as

00:04:12.480 --> 00:04:14.620
accurate as possible.

00:04:14.620 --> 00:04:16.730
JAKE ARCHIBALD: So you get all
the tools that you're familiar

00:04:16.730 --> 00:04:17.820
with on the desktop.

00:04:17.820 --> 00:04:19.709
But you're looking at
a mobile device.

00:04:19.709 --> 00:04:22.310
So if I look in the Timeline
here, what I'm going to do is

00:04:22.310 --> 00:04:23.640
I'm going to start recording.

00:04:23.640 --> 00:04:24.560
I'm going to refresh the page.

00:04:24.560 --> 00:04:27.780
So we can capture what happens
on the first load.

00:04:27.780 --> 00:04:29.440
And you can see things
coming through.

00:04:29.440 --> 00:04:31.140
It will be just like it
is in the desktop.

00:04:31.140 --> 00:04:32.780
But things will take longer.

00:04:32.780 --> 00:04:35.200
Because it's a lower
power device.

00:04:35.200 --> 00:04:36.530
I'll stop that there.

00:04:36.530 --> 00:04:38.510
Let's have a look at some of the
stuff that "The Guardian"

00:04:38.510 --> 00:04:39.830
did as they loaded.

00:04:39.830 --> 00:04:41.940
So as you'd expect, I think
this was stuff that was

00:04:41.940 --> 00:04:43.120
happening on the page before.

00:04:43.120 --> 00:04:43.760
But here we go.

00:04:43.760 --> 00:04:46.820
So this is where the
response kicks in.

00:04:46.820 --> 00:04:48.220
You see some data.

00:04:48.220 --> 00:04:50.275
The page starts building
itself.

00:04:50.275 --> 00:04:53.690
If we have a look we'll see
eventually there is some

00:04:53.690 --> 00:04:56.140
script evaluation.

00:04:56.140 --> 00:05:00.130
So I'm not picking on "The
Guardian" because some kind of

00:05:00.130 --> 00:05:01.160
issue with it, or anything.

00:05:01.160 --> 00:05:02.800
Because it's actually
one of the

00:05:02.800 --> 00:05:04.590
better performing websites.

00:05:04.590 --> 00:05:06.470
They've done a really, really
good job of it.

00:05:06.470 --> 00:05:09.120
I'm just showing some of the
things that maybe they could

00:05:09.120 --> 00:05:10.680
improve upon if they wanted.

00:05:10.680 --> 00:05:14.730
So if we have a look at this
script here, what do we see?

00:05:14.730 --> 00:05:20.340
OK, so there's a lot of HTML
parsing happening on DOM load.

00:05:20.340 --> 00:05:24.830
So this bit of JavaScript here
is taking up 300 milliseconds.

00:05:24.830 --> 00:05:27.320
And a lot that is
HTML parsing.

00:05:27.320 --> 00:05:30.790
This is little chunks of
text being sent to--

00:05:30.790 --> 00:05:31.870
[INAUDIBLE].

00:05:31.870 --> 00:05:34.340
It's something jQuery like,
because it's got a lot of the

00:05:34.340 --> 00:05:35.390
methods you would expect
from jQuery.

00:05:35.390 --> 00:05:37.256
But I expect it's maybe Zepto?

00:05:37.256 --> 00:05:39.780
ADDY OSMANI: It's probably
something custom like Zepto.

00:05:39.780 --> 00:05:43.150
JAKE ARCHIBALD: So if they
delivered all of these as one

00:05:43.150 --> 00:05:46.330
lump to the parser, it would be
much quicker than doing it

00:05:46.330 --> 00:05:47.000
in small parts.

00:05:47.000 --> 00:05:48.460
And then they could pull out
the elements needed.

00:05:48.460 --> 00:05:50.840
But as I say, they don't
really have a

00:05:50.840 --> 00:05:51.870
huge performance problem.

00:05:51.870 --> 00:05:53.565
But they could claw
back a few hundred

00:05:53.565 --> 00:05:56.520
milliseconds by doing that.

00:05:56.520 --> 00:06:00.280
So one of the things in the
beta is we get some of the

00:06:00.280 --> 00:06:01.570
features from the desktop.

00:06:01.570 --> 00:06:04.650
And one of those is
paint rectangles.

00:06:04.650 --> 00:06:08.410
So if I click this cog in the
bottom right hand corner, I

00:06:08.410 --> 00:06:09.660
get this menu.

00:06:09.660 --> 00:06:12.200
And one of the things we'll
see in here is Show Paint

00:06:12.200 --> 00:06:13.290
Rectangles.

00:06:13.290 --> 00:06:16.330
So if we look at the device,
what happens here is anything

00:06:16.330 --> 00:06:17.950
that's being repainted
is going to get a red

00:06:17.950 --> 00:06:19.080
rectangle around it.

00:06:19.080 --> 00:06:21.470
As you can see, it's only
really the scroll bar.

00:06:21.470 --> 00:06:24.970
Because that's being drawn every
time I scroll the page.

00:06:24.970 --> 00:06:27.480
The reason I'm not seeing any
paints around here is because

00:06:27.480 --> 00:06:29.020
it's all already been painted.

00:06:29.020 --> 00:06:31.190
It gets painted when
it's loaded.

00:06:31.190 --> 00:06:32.950
And we're just sort
of panning up and

00:06:32.950 --> 00:06:33.650
down it as we're scrolling.

00:06:33.650 --> 00:06:36.360
That keep things really
nice and fast.

00:06:36.360 --> 00:06:39.780
If I scroll to the top here
and click this Top Stories

00:06:39.780 --> 00:06:41.990
button, you can see that
flash of red there.

00:06:41.990 --> 00:06:45.690
Because it's had to draw that
region of the screen.

00:06:45.690 --> 00:06:48.280
You can see that
here, as well.

00:06:48.280 --> 00:06:51.300
So if I get rid of those--

00:06:51.300 --> 00:06:53.490
I'm going to get rid of the
Paint Rectangles here.

00:06:53.490 --> 00:06:57.380
Another one of the things we
can see as well is the

00:06:57.380 --> 00:06:58.880
composited layer borders.

00:06:58.880 --> 00:07:01.610
And this will show us what's
being sent as an extra layer

00:07:01.610 --> 00:07:02.500
to the GPU.

00:07:02.500 --> 00:07:05.740
On the show two weeks ago we
talked about what's going to

00:07:05.740 --> 00:07:07.990
cause a layer, and what the
benefits of it are, what maybe

00:07:07.990 --> 00:07:09.330
some of the downsides are.

00:07:09.330 --> 00:07:12.440
So if I press that here we can
see that a grid has appeared

00:07:12.440 --> 00:07:13.010
on the page.

00:07:13.010 --> 00:07:18.650
And this is because the page
will be split into small

00:07:18.650 --> 00:07:21.150
sections, and sent to
textures on the GPU.

00:07:21.150 --> 00:07:23.810
And each one of the squares is
another part of the texture.

00:07:23.810 --> 00:07:26.800
And as I zoom in, that grid
will adjust itself.

00:07:26.800 --> 00:07:29.670
And you can see it's blurry.

00:07:29.670 --> 00:07:30.840
And then the grid updates.

00:07:30.840 --> 00:07:32.130
It becomes sharp again.

00:07:32.130 --> 00:07:34.310
You can see that process
happening.

00:07:34.310 --> 00:07:39.510
So anything that's on its
own layer gets an orange

00:07:39.510 --> 00:07:40.700
rectangle around it.

00:07:40.700 --> 00:07:41.910
And as you can see there's
nothing really on "The

00:07:41.910 --> 00:07:44.340
Guardian" page that does that.

00:07:44.340 --> 00:07:46.960
If we scroll right down
to the bottom here,

00:07:46.960 --> 00:07:47.680
there is one here.

00:07:47.680 --> 00:07:52.560
You can see this orange border
around this section here.

00:07:52.560 --> 00:07:55.770
So let's take a look at
why that's happening.

00:07:55.770 --> 00:07:58.850
If we bring the frames per
second meter up as well, this

00:07:58.850 --> 00:08:01.970
gives you a clue to the GPU
memory situation, which is

00:08:01.970 --> 00:08:02.520
really interesting.

00:08:02.520 --> 00:08:05.090
You can see there,
18 megabytes.

00:08:05.090 --> 00:08:07.330
We're not using a lot
on this page.

00:08:07.330 --> 00:08:09.330
Let's find out why
that element's

00:08:09.330 --> 00:08:12.000
formed it's own layer.

00:08:12.000 --> 00:08:13.880
The easiest way to do that
is in the Elements panel.

00:08:13.880 --> 00:08:16.950
I'm going to click this
magnifying glass here.

00:08:16.950 --> 00:08:17.510
I click that.

00:08:17.510 --> 00:08:18.580
And then I can just
tap somewhere

00:08:18.580 --> 00:08:19.620
on the device itself.

00:08:19.620 --> 00:08:20.760
So click there.

00:08:20.760 --> 00:08:22.660
It's showing me that element.

00:08:22.660 --> 00:08:25.260
If I go up to the UL, I can
see I had [? the styles ?]

00:08:25.260 --> 00:08:26.110
there.

00:08:26.110 --> 00:08:31.380
Nothing obvious in the
Nav, nothing there.

00:08:31.380 --> 00:08:32.150
Here we go.

00:08:32.150 --> 00:08:35.630
So in this section's footer,
there's this null transform.

00:08:35.630 --> 00:08:37.684
So that's not really changing
the appearance of the page.

00:08:37.684 --> 00:08:41.520
But it is triggering a layer
to be created here.

00:08:41.520 --> 00:08:43.390
Not quite sure why they've
done that.

00:08:43.390 --> 00:08:48.385
It's maybe working around a
bug in another browser.

00:08:48.385 --> 00:08:50.560
It's been known to sort of
change how rendering happens

00:08:50.560 --> 00:08:53.180
and improve things
in some browsers.

00:08:53.180 --> 00:08:57.090
We can see we're using
18, 19 megabytes.

00:08:57.090 --> 00:09:01.730
If I were to take that off and
total the page, we've just

00:09:01.730 --> 00:09:02.890
freed up some GPU memory.

00:09:02.890 --> 00:09:04.320
We're down to 16 megabytes.

00:09:04.320 --> 00:09:06.460
So that's something they
could do as well.

00:09:06.460 --> 00:09:09.840
But once again, I stress they
don't really have a huge

00:09:09.840 --> 00:09:11.650
performance problem.

00:09:11.650 --> 00:09:13.430
Even though they've got layers,
they don't need it.

00:09:13.430 --> 00:09:15.950
It's not a big deal.

00:09:15.950 --> 00:09:18.130
When we've got the frames per
second monitor here-- what I'm

00:09:18.130 --> 00:09:23.170
going to do is take the
compositing off.

00:09:23.170 --> 00:09:23.920
There we go.

00:09:23.920 --> 00:09:26.670
So the frames per second only
updates as I'm scrolling.

00:09:26.670 --> 00:09:29.545
Because nothing's being drawn
once I stop scrolling.

00:09:29.545 --> 00:09:32.010
So the frames per second meter
is going to stay still.

00:09:32.010 --> 00:09:35.920
You can see is we're scrolling
we're achieving near on 60

00:09:35.920 --> 00:09:37.620
frames per second, which
is the ideal.

00:09:37.620 --> 00:09:41.310
That's the refresh rate
of the device.

00:09:41.310 --> 00:09:43.840
In the last session we were
talking about some of the

00:09:43.840 --> 00:09:45.170
benefits of adding layers.

00:09:45.170 --> 00:09:47.350
Like how it speeded
up animation.

00:09:47.350 --> 00:09:49.080
But it's not always
a good thing.

00:09:49.080 --> 00:09:53.246
So I'm going to try and
break the page.

00:09:53.246 --> 00:09:55.680
I'm going to get rid of this
frames per second monitor.

00:09:55.680 --> 00:09:57.310
And I'm going to give
everything on the

00:09:57.310 --> 00:09:59.610
page its own layer.

00:09:59.610 --> 00:10:06.620
And to do that, the simplest
way, I'm going to try and

00:10:06.620 --> 00:10:07.870
spell the word, document.

00:10:10.120 --> 00:10:12.025
I'm going to create
a style element.

00:10:17.310 --> 00:10:21.110
And in a text content for
that I'm going to

00:10:21.110 --> 00:10:23.160
do for every element.

00:10:23.160 --> 00:10:26.050
And WebKit transform.

00:10:26.050 --> 00:10:27.590
Do watch if I spell
anything wrong.

00:10:27.590 --> 00:10:29.350
Because I'm dreadful at this.

00:10:29.350 --> 00:10:31.190
ADDY OSMANI: This is genuinely
the first piece of coding that

00:10:31.190 --> 00:10:32.790
Jake's done all year.

00:10:32.790 --> 00:10:35.060
So don't worry if it looks
a little bit crap.

00:10:35.060 --> 00:10:36.220
JAKE ARCHIBALD: Started
Google and that's it.

00:10:36.220 --> 00:10:38.960
Not allowed to code anymore.

00:10:38.960 --> 00:10:42.670
And I'm going to do
translate Z, 0.

00:10:42.670 --> 00:10:44.965
This time I'm going to put some
semicolons in just to mix

00:10:44.965 --> 00:10:46.710
it up a bit.

00:10:46.710 --> 00:10:48.990
So we're still--

00:10:48.990 --> 00:10:51.110
if I can stop highlighting over
an element, we should

00:10:51.110 --> 00:10:53.790
still have some really smooth
scrolling going on here.

00:10:53.790 --> 00:10:55.660
Yeah, that's still smooth.

00:10:55.660 --> 00:10:57.830
Because although I've created
that style element, it's not

00:10:57.830 --> 00:10:58.940
in the document yet.

00:10:58.940 --> 00:11:00.190
So I'm going to do
document.appendChild--

00:11:04.122 --> 00:11:05.380
am I spelling that right?--

00:11:05.380 --> 00:11:07.760
C-H-I-L-D.

00:11:07.760 --> 00:11:09.380
This is going to add that script
to the page, and make

00:11:09.380 --> 00:11:10.600
everything it's own layer.

00:11:10.600 --> 00:11:12.130
I'm just going to keep
scrolling the page.

00:11:12.130 --> 00:11:13.270
You can see it's smooth.

00:11:13.270 --> 00:11:15.600
And now I'm going to add that
element to the page.

00:11:15.600 --> 00:11:18.340
And that will take effect
in a second.

00:11:18.340 --> 00:11:20.880
Actually, you can't do
document.appendChild.

00:11:20.880 --> 00:11:21.900
That's a silly thing to do.

00:11:21.900 --> 00:11:23.150
It's document.head.appendChild.

00:11:25.660 --> 00:11:27.610
This is why I don't
do live shows.

00:11:27.610 --> 00:11:29.350
So buttery smooth scrolling.

00:11:29.350 --> 00:11:32.760
And then that goes into
the document.

00:11:32.760 --> 00:11:33.410
And there we go.

00:11:33.410 --> 00:11:36.700
We can see the scrolling, the
performance is just going

00:11:36.700 --> 00:11:37.760
completely down the toilet.

00:11:37.760 --> 00:11:39.860
It's awful.

00:11:39.860 --> 00:11:41.180
ADDY OSMANI: And the reason
for that is that the link

00:11:41.180 --> 00:11:42.880
between CPU and GPU
doesn't really

00:11:42.880 --> 00:11:43.930
have a lot of bandwidth.

00:11:43.930 --> 00:11:47.820
And so when you introduce
excessive textures there, it's

00:11:47.820 --> 00:11:48.810
just going to look crap.

00:11:48.810 --> 00:11:49.450
JAKE ARCHIBALD: Exactly that.

00:11:49.450 --> 00:11:51.670
If we bring the frames per
second meter, it shows us

00:11:51.670 --> 00:11:53.130
exactly what's going on here.

00:11:53.130 --> 00:11:56.830
It tells us the framework has
gone down to 25 or less.

00:11:56.830 --> 00:11:59.880
But the real clue here
is the GPU memory.

00:11:59.880 --> 00:12:02.330
We're hitting the top
of the GPU memory.

00:12:02.330 --> 00:12:04.490
So as you scroll down the page,
things are going out of

00:12:04.490 --> 00:12:05.590
GPU memory.

00:12:05.590 --> 00:12:06.890
Other things are coming in.

00:12:06.890 --> 00:12:09.060
We're losing all the performance
that we would get

00:12:09.060 --> 00:12:11.870
from the hardware.

00:12:11.870 --> 00:12:13.680
It's a terrible thing to do.

00:12:13.680 --> 00:12:16.270
We can see now, if we put the
composite add layer borders

00:12:16.270 --> 00:12:20.790
on, you see everything has that
orange border to show

00:12:20.790 --> 00:12:22.410
that it's in a layer.

00:12:22.410 --> 00:12:27.850
All we would need to do to get
our performance back is in the

00:12:27.850 --> 00:12:30.450
dev tools, change that
to removeChild.

00:12:34.060 --> 00:12:37.330
So scrolling bad, and that
will take effect.

00:12:37.330 --> 00:12:41.650
And it will be a little bit of
time before it realizes I can

00:12:41.650 --> 00:12:44.950
actually flush the GPU memory.

00:12:44.950 --> 00:12:46.490
And everything should
come back to normal.

00:12:46.490 --> 00:12:47.440
There we go.

00:12:47.440 --> 00:12:48.690
So everything is smooth again.

00:12:52.170 --> 00:12:53.060
Be careful with your layers.

00:12:53.060 --> 00:12:55.060
Make sure you're not
creating too many.

00:12:55.060 --> 00:12:58.260
But they can be really good for
certain bits of animation

00:12:58.260 --> 00:12:59.580
performance.

00:12:59.580 --> 00:13:00.970
Make sure you're testing
on the device.

00:13:00.970 --> 00:13:03.190
Make sure you're looking
at the GPU memory.

00:13:03.190 --> 00:13:03.830
Don't overuse it.

00:13:03.830 --> 00:13:07.180
Because you will lose a lot of
performance in other places.

00:13:07.180 --> 00:13:08.780
ADDY OSMANI: Ideally make sure
that you have a measurably

00:13:08.780 --> 00:13:11.150
high repaint cost on something
before you start exploring

00:13:11.150 --> 00:13:14.560
using these kinds of hacks.

00:13:14.560 --> 00:13:17.910
JAKE ARCHIBALD: Addy, what are
you going to talk about?

00:13:17.910 --> 00:13:18.840
ADDY OSMANI: I've
got some toys.

00:13:18.840 --> 00:13:23.190
So there have recently been
some really nice new tools

00:13:23.190 --> 00:13:25.380
that have come out for
mobile debugging.

00:13:25.380 --> 00:13:27.910
And I'm going show you something
called MIHTool, or

00:13:27.910 --> 00:13:30.990
M-I-H tool, that basically gives
you an entire WebKit

00:13:30.990 --> 00:13:33.530
Inspector on an iPad
or iPhone.

00:13:33.530 --> 00:13:34.940
So we're going to switch
around a little bit.

00:13:34.940 --> 00:13:37.360
We're going to do a--

00:13:37.360 --> 00:13:38.235
JAKE ARCHIBALD: We're
going to do a swap.

00:13:38.235 --> 00:13:39.030
ADDY OSMANI: We're going
to do a swap.

00:13:39.030 --> 00:13:40.330
JAKE ARCHIBALD: Well
this is the thing.

00:13:40.330 --> 00:13:43.020
This studio only has one camera
next to me with the

00:13:43.020 --> 00:13:44.010
mobile device on.

00:13:44.010 --> 00:13:46.460
And I've got this machine
all networked up.

00:13:46.460 --> 00:13:47.620
This is something we
couldn't do live.

00:13:47.620 --> 00:13:48.830
Because we're actually going
to have to swap seats.

00:13:48.830 --> 00:13:50.090
But we're going to
edit this in.

00:13:50.090 --> 00:13:50.450
ADDY OSMANI: Yes.

00:13:50.450 --> 00:13:51.220
JAKE ARCHIBALD: It's going
to look really smooth.

00:13:51.220 --> 00:13:51.830
ADDY OSMANI: It's going
to look amazing.

00:13:51.830 --> 00:13:52.640
JAKE ARCHIBALD: It is.

00:13:52.640 --> 00:13:56.850
Maybe we should have some
animation where it morphs.

00:13:56.850 --> 00:13:59.340
If we look at the camera, could
we have something that

00:13:59.340 --> 00:14:00.140
was morph our faces?

00:14:00.140 --> 00:14:01.980
I don't think we've got
time to do that.

00:14:01.980 --> 00:14:03.530
ADDY OSMANI: We might.

00:14:03.530 --> 00:14:06.260
JAKE ARCHIBALD: Let's just
have a awkward fumble.

00:14:08.790 --> 00:14:11.310
Hello, and welcome back to
Mobile Web Thursdays.

00:14:11.310 --> 00:14:12.340
I'm Addy Osmani.

00:14:12.340 --> 00:14:13.540
And with me in the studio is--

00:14:13.540 --> 00:14:14.470
ADDY OSMANI: Jake Archibald.

00:14:14.470 --> 00:14:16.510
JAKE ARCHIBALD: So you're going
to be showing some toys

00:14:16.510 --> 00:14:17.200
you brought in?

00:14:17.200 --> 00:14:17.780
ADDY OSMANI: Yes.

00:14:17.780 --> 00:14:19.060
So I brought in an iPad today.

00:14:19.060 --> 00:14:21.280
And I'm going to be showing you
a brand new tool called

00:14:21.280 --> 00:14:25.240
MIHTool that helps you debug
apps and sites directly on

00:14:25.240 --> 00:14:26.520
your iOS devices.

00:14:26.520 --> 00:14:28.480
And one of the cool things about
this is that you get

00:14:28.480 --> 00:14:30.115
both an inspector
on the device.

00:14:30.115 --> 00:14:34.220
But you can also get things like
timeline for inspecting

00:14:34.220 --> 00:14:36.590
what your performance is like,
what your scripting is like.

00:14:36.590 --> 00:14:39.110
You get access to complete
cache control.

00:14:39.110 --> 00:14:41.220
So if you want to make sure
that your pages are being

00:14:41.220 --> 00:14:43.700
properly cached, and you just
see how your pages perform

00:14:43.700 --> 00:14:46.050
there, you can do that
on the device, too.

00:14:46.050 --> 00:14:49.520
So I'm going to switch over
to the iPad right now.

00:14:49.520 --> 00:14:51.880
And I currently have
the site called--

00:14:51.880 --> 00:14:55.060
this is a jQuery plug-in
site called Isotope.

00:14:55.060 --> 00:14:56.010
You've probably seen
this before.

00:14:56.010 --> 00:14:58.030
It's by Dave DeSandro.

00:14:58.030 --> 00:14:59.650
It just organizes things.

00:14:59.650 --> 00:15:02.610
It's this really nice layout
that's pretty flexible.

00:15:02.610 --> 00:15:04.405
Jake, you were talking
about composited

00:15:04.405 --> 00:15:06.450
layer borders earlier.

00:15:06.450 --> 00:15:06.910
I'm going to go.

00:15:06.910 --> 00:15:09.110
And I'm going to, first
of all, enable the Web

00:15:09.110 --> 00:15:11.400
Inspector on here.

00:15:11.400 --> 00:15:13.110
And the first thing you're going
to notice happen is that

00:15:13.110 --> 00:15:16.600
I now have dev tools slash
a Web Inspector on here.

00:15:16.600 --> 00:15:18.790
I can go and I can
inspect elements.

00:15:18.790 --> 00:15:19.820
I have a resources panel.

00:15:19.820 --> 00:15:21.150
I've got network.

00:15:21.150 --> 00:15:22.230
I've got timeline.

00:15:22.230 --> 00:15:25.320
And I can basically use these
in the same way that I do on

00:15:25.320 --> 00:15:27.110
desktop dev tools.

00:15:27.110 --> 00:15:28.560
JAKE ARCHIBALD: Is a
native app running?

00:15:28.560 --> 00:15:29.950
ADDY OSMANI: This is a native
app that's running.

00:15:29.950 --> 00:15:31.825
And it's available for
iPhone and iPad.

00:15:35.060 --> 00:15:38.200
Something I'm interested in is
whether this page is actually

00:15:38.200 --> 00:15:41.230
using composited layer borders,
whether this will

00:15:41.230 --> 00:15:44.285
work with composited layer
borders on, to see if any of

00:15:44.285 --> 00:15:46.560
the elements on this page
are being promoted.

00:15:46.560 --> 00:15:49.055
And I can actually I go into
the menu for this app, and

00:15:49.055 --> 00:15:51.300
trigger WebKit Debug
Borders on.

00:15:51.300 --> 00:15:53.090
I'm going to need to restart
the app really quickly.

00:15:53.090 --> 00:15:55.370
So I'm just going to do that.

00:15:55.370 --> 00:15:57.390
Back into MIHTool.

00:15:57.390 --> 00:15:59.230
And now, I know it's
very, very subtle.

00:15:59.230 --> 00:16:01.230
You probably can't
see it, actually.

00:16:01.230 --> 00:16:04.680
But we do have the exact same
tiles on this page that Jake

00:16:04.680 --> 00:16:05.870
was showing you earlier.

00:16:05.870 --> 00:16:08.450
What you'll also have
are basically

00:16:08.450 --> 00:16:09.350
these little outlines.

00:16:09.350 --> 00:16:11.400
So let me zoom in
on an element.

00:16:11.400 --> 00:16:13.970
And what you'll see around many
of these elements on the

00:16:13.970 --> 00:16:17.495
page is that they have the same
highlight around them.

00:16:17.495 --> 00:16:18.650
It should be yellow.

00:16:18.650 --> 00:16:20.910
But in this case it's a
little bit more green.

00:16:20.910 --> 00:16:23.490
But basically that means that
all these elements that have

00:16:23.490 --> 00:16:25.560
that border around them
are being promoted

00:16:25.560 --> 00:16:26.580
to composite layer.

00:16:26.580 --> 00:16:28.730
JAKE ARCHIBALD: Does that have
the thing where each tile is

00:16:28.730 --> 00:16:31.400
given the number of times
it's being redrawn?

00:16:31.400 --> 00:16:32.830
ADDY OSMANI: Actually, yes.

00:16:32.830 --> 00:16:34.590
This is a feature that's
actually in the WebKit

00:16:34.590 --> 00:16:36.540
Nightlies, if I'm correct.

00:16:36.540 --> 00:16:37.850
And you get this right
with a MIHTool.

00:16:37.850 --> 00:16:40.060
So you can get this on
your mobile device.

00:16:40.060 --> 00:16:42.440
So I'm going to enable WebKit
Repaint Counter.

00:16:42.440 --> 00:16:45.380
I'm going to restart the app
once again, very quickly.

00:16:45.380 --> 00:16:48.270
And now what you can see-- you
probably saw it as a flash.

00:16:48.270 --> 00:16:52.200
But what you can see, and we
can zoom in on a specific

00:16:52.200 --> 00:16:55.910
block of the page, but around
every single element we now

00:16:55.910 --> 00:16:58.460
have this little counter in
the corner, that basically

00:16:58.460 --> 00:17:00.860
tells you the repaint counts
for that layer.

00:17:00.860 --> 00:17:04.760
And if I scroll up and down,
these numbers will go up in

00:17:04.760 --> 00:17:07.050
some cases, depending
on what's going on.

00:17:07.050 --> 00:17:08.829
I just closed out of the
app accidentally.

00:17:08.829 --> 00:17:10.300
But these numbers have basically
gone up in some

00:17:10.300 --> 00:17:11.904
cases because of repainting.

00:17:14.500 --> 00:17:18.040
JAKE ARCHIBALD: I'm no fan of
Safari's Web Inspector.

00:17:18.040 --> 00:17:19.810
I don't understand how
the icons work.

00:17:19.810 --> 00:17:20.869
It confuses me.

00:17:20.869 --> 00:17:22.670
But check out the WebKit
Nightlies.

00:17:22.670 --> 00:17:23.420
And check out this tool.

00:17:23.420 --> 00:17:25.589
Because they've done
some really

00:17:25.589 --> 00:17:27.150
excellent work around it.

00:17:27.150 --> 00:17:29.052
There's a lot of stuff that
we're looking at with Web

00:17:29.052 --> 00:17:31.310
Inspector going, we could have
some of those ideas.

00:17:31.310 --> 00:17:31.960
ADDY OSMANI: There's
some really

00:17:31.960 --> 00:17:32.890
interesting ideas in there.

00:17:32.890 --> 00:17:34.540
And you also get access
to things like

00:17:34.540 --> 00:17:36.010
Full User Agent setting.

00:17:36.010 --> 00:17:39.960
So I can go and I can set this
to Firefox, or Chrome, or IE,

00:17:39.960 --> 00:17:42.680
or whatever I want, basically,
without having to go back and

00:17:42.680 --> 00:17:44.970
forth between my desktop
and my device.

00:17:44.970 --> 00:17:47.740
So it means you get to debug
stuff more so on an actual

00:17:47.740 --> 00:17:50.580
device, rather than having to
emulate it somewhere else,

00:17:50.580 --> 00:17:52.180
which is neat.

00:17:52.180 --> 00:17:55.000
But MIHTools has also got some
additional features you might

00:17:55.000 --> 00:17:56.530
find useful.

00:17:56.530 --> 00:17:59.400
If you go to View Source in
here, you'll actually get a

00:17:59.400 --> 00:18:00.210
complete editor.

00:18:00.210 --> 00:18:04.470
I probably want to turn off
those composited layer borders

00:18:04.470 --> 00:18:05.040
very quickly.

00:18:05.040 --> 00:18:09.210
I'm just going to
restart that.

00:18:09.210 --> 00:18:10.370
I still have the repaint
counts on.

00:18:10.370 --> 00:18:11.260
It doesn't matter.

00:18:11.260 --> 00:18:14.730
But if I go to View Source, this
complete view here, you

00:18:14.730 --> 00:18:15.880
might think that it's
just read only.

00:18:15.880 --> 00:18:19.570
But I can actually go and make
changes to this page.

00:18:19.570 --> 00:18:22.170
Which will then be previewed in
real time once I go back.

00:18:22.170 --> 00:18:24.545
So I can make changes to this
any way that I want, the same

00:18:24.545 --> 00:18:26.930
way that you probably make
changes to scripts or styles

00:18:26.930 --> 00:18:28.580
inside the dev tools.

00:18:28.580 --> 00:18:32.150
And the author of MIHTool
is a guy named Unbug, so

00:18:32.150 --> 00:18:34.120
twitter.com/unbug.

00:18:34.120 --> 00:18:36.150
And he's currently putting a
lot of work into improving

00:18:36.150 --> 00:18:36.680
this editor.

00:18:36.680 --> 00:18:39.990
So that you can basically go
wherever you want, make live

00:18:39.990 --> 00:18:42.270
changes to your site or your
app, and preview what it's

00:18:42.270 --> 00:18:43.890
like, and debug directly
on the device.

00:18:43.890 --> 00:18:45.450
Which I think is neat.

00:18:45.450 --> 00:18:48.750
JAKE ARCHIBALD: So I presume
that's using a WebView to show

00:18:48.750 --> 00:18:49.530
you the page.

00:18:49.530 --> 00:18:50.760
ADDY OSMANI: Yes, this
is using a WebView.

00:18:50.760 --> 00:18:52.590
JAKE ARCHIBALD: Does that
mean it's going to be--

00:18:52.590 --> 00:18:56.450
because Safari, they have
some kinds of JavaScript

00:18:56.450 --> 00:18:58.290
acceleration are only available
to the native

00:18:58.290 --> 00:18:59.580
browser and not WebViews.

00:18:59.580 --> 00:19:00.780
That's the case here?

00:19:00.780 --> 00:19:02.280
ADDY OSMANI: There are some
limitations here.

00:19:02.280 --> 00:19:04.770
When it comes to performance
profiling, that is going to be

00:19:04.770 --> 00:19:06.300
one thing that you have
to keep in mind.

00:19:06.300 --> 00:19:07.460
This is still using WebView.

00:19:07.460 --> 00:19:09.560
It's not going to be completely
accurate when it

00:19:09.560 --> 00:19:13.180
comes to using Timeline for your
performance profiling.

00:19:13.180 --> 00:19:16.050
But for things like getting
insights into your composite

00:19:16.050 --> 00:19:18.320
layer borders, getting insights
into those repaints,

00:19:18.320 --> 00:19:19.820
it's actually cool.

00:19:19.820 --> 00:19:21.620
Another useful thing you can
do with this is you can

00:19:21.620 --> 00:19:25.590
actually remote into this tool,
and drive it from your

00:19:25.590 --> 00:19:27.180
desktop if you want to.

00:19:27.180 --> 00:19:28.980
I don't have a full set
up for this on my

00:19:28.980 --> 00:19:29.620
screen at the moment.

00:19:29.620 --> 00:19:32.390
But if we switch back to my
screen, I do have a screen

00:19:32.390 --> 00:19:34.480
shot of this working earlier.

00:19:34.480 --> 00:19:38.220
But basically I can control this
the exact same way that

00:19:38.220 --> 00:19:42.590
Jake was doing earlier with
remote debugging to control

00:19:42.590 --> 00:19:43.600
the device.

00:19:43.600 --> 00:19:45.780
And you can actually send this
a bunch of commands.

00:19:45.780 --> 00:19:47.960
You can send this URLs that
you want it to load up.

00:19:47.960 --> 00:19:49.930
You can inject scripts
into there.

00:19:49.930 --> 00:19:51.480
You can do a bunch of stuff.

00:19:51.480 --> 00:19:53.370
It's definitely worth
checking out.

00:19:53.370 --> 00:19:56.000
We'll link you up to MIHTool
in the show notes.

00:19:56.000 --> 00:19:59.240
But the next thing I'm going
to be talking about is some

00:19:59.240 --> 00:20:02.320
mobile emulation tools that we
have inside the dev tools.

00:20:02.320 --> 00:20:06.050
Now for anybody that has done
any amount of mobile debugging

00:20:06.050 --> 00:20:08.700
and mobile development before,
one pain point is actually

00:20:08.700 --> 00:20:11.330
having to have these kinds
of devices around to

00:20:11.330 --> 00:20:12.250
properly debug on.

00:20:12.250 --> 00:20:14.070
And not everybody
has got those.

00:20:14.070 --> 00:20:15.260
We've got a Nexus around here.

00:20:15.260 --> 00:20:16.660
We've got Nexus 4 phones.

00:20:16.660 --> 00:20:17.760
We've tons of devices.

00:20:17.760 --> 00:20:20.590
Most people don't actually have
their own private lab for

00:20:20.590 --> 00:20:21.260
this stuff.

00:20:21.260 --> 00:20:24.250
So sometimes it can be useful to
have mobile emulation tools

00:20:24.250 --> 00:20:24.860
available to you.

00:20:24.860 --> 00:20:28.340
So you can just get this stuff
done inside your browser.

00:20:28.340 --> 00:20:32.250
And we've put a lot of work into
doing this in Chrome via

00:20:32.250 --> 00:20:33.520
the dev tools, lately.

00:20:33.520 --> 00:20:35.690
The first thing I'm going to
show you is, let's say that

00:20:35.690 --> 00:20:37.790
you're working on an
app or a site.

00:20:37.790 --> 00:20:39.970
And you just want to be able
to preview what your

00:20:39.970 --> 00:20:41.610
breakpoints look like.

00:20:41.610 --> 00:20:42.840
Let's say I'm using
media queries.

00:20:42.840 --> 00:20:45.780
And I want to see, what does my
site look like at different

00:20:45.780 --> 00:20:47.900
viewport sizes.

00:20:47.900 --> 00:20:49.020
Go into Dock-To-Right mode.

00:20:49.020 --> 00:20:50.330
I'm currently in Dock-To-Right
mode.

00:20:50.330 --> 00:20:53.870
Let's just kill the dev
tools very quickly.

00:20:53.870 --> 00:20:56.620
I'm going to go back
into my dev tools.

00:20:56.620 --> 00:20:59.170
This is probably what
you start out with.

00:20:59.170 --> 00:21:01.820
Just hold and toggle
in the very corner.

00:21:01.820 --> 00:21:04.530
And you can then switch
to Dock-To-Right mode.

00:21:04.530 --> 00:21:06.130
And you can then use
the splitter.

00:21:06.130 --> 00:21:09.550
So I'm going to be moving my
splitter more to the left.

00:21:09.550 --> 00:21:12.430
And what you can see as I do
that is that the layout-- this

00:21:12.430 --> 00:21:14.110
is "The Boston Globe"--

00:21:14.110 --> 00:21:16.880
the layout is actually changing
every single time I

00:21:16.880 --> 00:21:18.470
hit a different breakpoint.

00:21:18.470 --> 00:21:20.710
And that means that I can just
preview what the site looks

00:21:20.710 --> 00:21:21.820
like at different breakpoints.

00:21:21.820 --> 00:21:23.750
Normally what some people have
been doing is actually

00:21:23.750 --> 00:21:24.670
resizing Chrome.

00:21:24.670 --> 00:21:25.450
You don't have to do that.

00:21:25.450 --> 00:21:26.690
You can just use this.

00:21:26.690 --> 00:21:28.300
And it'll do the exact
same thing.

00:21:28.300 --> 00:21:29.950
JAKE ARCHIBALD: Because
Chrome has a minimum

00:21:29.950 --> 00:21:30.830
width to it, as well.

00:21:30.830 --> 00:21:32.750
ADDY OSMANI: It does as well.

00:21:32.750 --> 00:21:33.322
JAKE ARCHIBALD: It's
not a problem here

00:21:33.322 --> 00:21:33.410
where you can go--

00:21:33.410 --> 00:21:34.380
ADDY OSMANI: With this there's
not that issue.

00:21:34.380 --> 00:21:36.230
I can go as far back
as I want.

00:21:36.230 --> 00:21:39.030
I highly doubt-- at least now
until people get watches that

00:21:39.030 --> 00:21:40.890
are running WebKit on them--

00:21:40.890 --> 00:21:41.900
you'll be doing that.

00:21:41.900 --> 00:21:44.700
But this is pretty useful for
those workflows where you do

00:21:44.700 --> 00:21:46.420
want to just check out and make
sure your breakpoints are

00:21:46.420 --> 00:21:48.500
looking OK.

00:21:48.500 --> 00:21:51.030
Speaking of mobile emulation,
I'm going to go back

00:21:51.030 --> 00:21:52.720
into to Full View.

00:21:52.720 --> 00:21:55.620
We've put a lot of effort into
improving the mobile emulation

00:21:55.620 --> 00:21:57.010
tools inside Chrome.

00:21:57.010 --> 00:21:59.780
And if we go back into the
Settings cog that Jake was

00:21:59.780 --> 00:22:02.430
showing you earlier, you're
probably going to land in

00:22:02.430 --> 00:22:03.410
General by default.

00:22:03.410 --> 00:22:05.750
Switch on over to the
Overrides tab.

00:22:05.750 --> 00:22:08.480
And you'll get access to a whole
range of different tools

00:22:08.480 --> 00:22:10.130
for emulating things.

00:22:10.130 --> 00:22:12.250
At the very top what you
can see is User Agent.

00:22:12.250 --> 00:22:15.120
You then have Device Metrics,
Geolocation, Device

00:22:15.120 --> 00:22:17.820
Orientation, Touch Events,
and CSS Media.

00:22:17.820 --> 00:22:20.260
So I'm going to show you some
of these in action.

00:22:20.260 --> 00:22:22.760
So we're on "The Boston Globe."
I'm going to go, and

00:22:22.760 --> 00:22:25.080
I'm going to emulate
my user agent to

00:22:25.080 --> 00:22:28.950
something like iPhone.

00:22:28.950 --> 00:22:31.240
Now what you'll notice is that
automatically that's actually

00:22:31.240 --> 00:22:33.550
triggered my device metrics
to be changed.

00:22:33.550 --> 00:22:37.120
And this is really useful for
a workflow that lets you

00:22:37.120 --> 00:22:39.940
preview what your device
viewport might look like on

00:22:39.940 --> 00:22:40.830
those devices.

00:22:40.830 --> 00:22:42.220
So what you'll see--

00:22:42.220 --> 00:22:44.920
let me close out of there and
just show you this view a

00:22:44.920 --> 00:22:45.840
little bit more.

00:22:45.840 --> 00:22:50.230
Basically this is around the
same size as an iPhone might

00:22:50.230 --> 00:22:52.910
look like from a metrics
point of view.

00:22:52.910 --> 00:22:56.870
But I can easily go and change
the orientation that I'm in.

00:22:56.870 --> 00:23:01.470
So I can go from this
to this very easily.

00:23:01.470 --> 00:23:05.020
I can go, and I can set custom
settings for my screen

00:23:05.020 --> 00:23:06.280
resolution, if I want.

00:23:06.280 --> 00:23:09.110
I'm also able to change my
settings for font scale.

00:23:09.110 --> 00:23:11.670
So if a device has got a
particular font scale that you

00:23:11.670 --> 00:23:15.455
want to emulate, you can also
easily go in and change that.

00:23:15.455 --> 00:23:17.660
JAKE ARCHIBALD: What you'd want
to do there with working

00:23:17.660 --> 00:23:21.550
with the iPhone, the numbers
that are in there are the

00:23:21.550 --> 00:23:24.510
number of device pixels, not
the number of CSS pixels.

00:23:24.510 --> 00:23:24.775
ADDY OSMANI: Exactly.

00:23:24.775 --> 00:23:26.150
JAKE ARCHIBALD: So you probably
want to half those at

00:23:26.150 --> 00:23:26.560
the moment.

00:23:26.560 --> 00:23:28.360
ADDY OSMANI: Probably, yeah.

00:23:28.360 --> 00:23:29.460
JAKE ARCHIBALD: Something we're
working on at the moment

00:23:29.460 --> 00:23:31.610
is emulating device pixel ratio

00:23:31.610 --> 00:23:33.370
correctly in the browser.

00:23:33.370 --> 00:23:34.520
But that hasn't landed yet.

00:23:34.520 --> 00:23:35.500
ADDY OSMANI: That hasn't
landed yet.

00:23:35.500 --> 00:23:37.760
It's hopefully going to in
the next few months.

00:23:37.760 --> 00:23:42.010
But it's been a feature we're
getting a lot of requests for.

00:23:42.010 --> 00:23:43.360
As mentioned, there are
a ton of different

00:23:43.360 --> 00:23:44.210
options inside here.

00:23:44.210 --> 00:23:47.070
At the moment, you've got
BlackBerry, Android 2.3, the

00:23:47.070 --> 00:23:48.530
Nexus S. You've got Firefox.

00:23:48.530 --> 00:23:49.650
You've got IE 9.

00:23:49.650 --> 00:23:52.180
And this just means that rather
than having to go and

00:23:52.180 --> 00:23:55.580
open up a complete device or
throw open an emulator, you

00:23:55.580 --> 00:23:58.610
can just do this stuff inside
of dev tools, which can save

00:23:58.610 --> 00:24:00.140
you some time.

00:24:00.140 --> 00:24:03.120
The next thing I'm going to
show you is Geolocation.

00:24:03.120 --> 00:24:06.230
Why don't we look at that.

00:24:06.230 --> 00:24:09.350
Remy Sharp put together this
nice little Geolocation demo

00:24:09.350 --> 00:24:13.160
that basically says, if your
device supports providing you

00:24:13.160 --> 00:24:16.210
some sort of location, when
I load up this page it's

00:24:16.210 --> 00:24:17.630
basically going to
try finding me.

00:24:17.630 --> 00:24:19.360
And it's going to display
a Google Map

00:24:19.360 --> 00:24:20.400
that shows my location.

00:24:20.400 --> 00:24:21.300
JAKE ARCHIBALD: It's
done pretty well.

00:24:21.300 --> 00:24:21.830
ADDY OSMANI: Yeah, it's
done pretty well.

00:24:21.830 --> 00:24:26.810
So we're currently on Bonhill
Street at Campus London.

00:24:26.810 --> 00:24:30.100
And it seems to have roughly
found where we are correctly.

00:24:30.100 --> 00:24:32.240
There are, however, going to be
times when you're working

00:24:32.240 --> 00:24:34.590
on an international application
that's going to

00:24:34.590 --> 00:24:37.080
need to perhaps be able to
show some custom content,

00:24:37.080 --> 00:24:39.540
depending on where your
user is based.

00:24:39.540 --> 00:24:41.520
So how do you debug that?

00:24:41.520 --> 00:24:44.140
You can't take your device and
fly over to Spain just to

00:24:44.140 --> 00:24:45.110
preview what that looks like.

00:24:45.110 --> 00:24:46.710
It just wouldn't make sense.

00:24:46.710 --> 00:24:48.870
So we've got this nifty little
feature that actually allows

00:24:48.870 --> 00:24:51.810
you to override your geolocation
settings.

00:24:51.810 --> 00:24:54.570
So what I'm going to do now is
I'm going to go and just

00:24:54.570 --> 00:24:57.040
enable Geolocation.

00:24:57.040 --> 00:25:00.230
And I've actually preset
my latitude and

00:25:00.230 --> 00:25:01.780
longitude to something.

00:25:01.780 --> 00:25:05.240
So I'm now going to just
refresh this page.

00:25:05.240 --> 00:25:06.670
And it's placed me
somewhere else.

00:25:06.670 --> 00:25:07.900
This is a custom location.

00:25:07.900 --> 00:25:10.290
And why don't we just
zoom into this?

00:25:10.290 --> 00:25:13.260
So zoom, zoom, zoom.

00:25:13.260 --> 00:25:15.120
What's that?

00:25:15.120 --> 00:25:17.110
We're now at the Batman
Dental Practice.

00:25:17.110 --> 00:25:19.080
JAKE ARCHIBALD: It's not
the dentist you need.

00:25:19.080 --> 00:25:21.530
It's the dentist you deserve.

00:25:21.530 --> 00:25:22.910
This is in West London.

00:25:22.910 --> 00:25:23.640
It's brilliant.

00:25:23.640 --> 00:25:24.080
I love it.

00:25:24.080 --> 00:25:25.910
ADDY OSMANI: I can't believe
there's a place that has a

00:25:25.910 --> 00:25:27.240
Batman Dental Practice.

00:25:27.240 --> 00:25:28.680
JAKE ARCHIBALD: I just put
Batman into Google Maps.

00:25:28.680 --> 00:25:31.780
It's surprising how many places
are named after our

00:25:31.780 --> 00:25:33.210
caped crusader.

00:25:33.210 --> 00:25:35.720
If you need to find out the
lat, long of a particular

00:25:35.720 --> 00:25:40.510
place, easiest way to do that
is to go into Google Maps.

00:25:40.510 --> 00:25:42.550
Actually, can we get
my screen up?

00:25:42.550 --> 00:25:45.040
Is that possible for a moment?

00:25:45.040 --> 00:25:47.050
All you need to do is if you
right-click somewhere.

00:25:47.050 --> 00:25:49.850
And you click What's Here.

00:25:49.850 --> 00:25:52.460
And then the numbers that are
up here, that'll be the lat

00:25:52.460 --> 00:25:53.750
long of the place you
right-clicked.

00:25:53.750 --> 00:25:57.380
So if you're trying to test a
particular place in the world,

00:25:57.380 --> 00:26:00.490
that's the quickest way to get
the lat long of that place.

00:26:00.490 --> 00:26:01.130
ADDY OSMANI: Excellent.

00:26:01.130 --> 00:26:03.130
Now sometimes you're also going
to want to be able to

00:26:03.130 --> 00:26:06.170
preview what it's like if you
don't have geolocation

00:26:06.170 --> 00:26:06.770
available at all.

00:26:06.770 --> 00:26:08.610
So when I don't have my position
available, I can

00:26:08.610 --> 00:26:10.480
actually just go and enable
another option.

00:26:10.480 --> 00:26:12.940
So emulate position
unavailable.

00:26:12.940 --> 00:26:15.210
And if I go and I refresh this
page again, what you can see

00:26:15.210 --> 00:26:17.580
is that find your location
has failed.

00:26:17.580 --> 00:26:19.490
And that's just another nice
little debug thing that can

00:26:19.490 --> 00:26:22.320
help you with trying to figure
out, do I display a specific

00:26:22.320 --> 00:26:24.810
message to my users saying, we
couldn't find your position?

00:26:24.810 --> 00:26:27.070
Do we fall back on
something else?

00:26:27.070 --> 00:26:29.760
But that's just another little
helper that you can use for

00:26:29.760 --> 00:26:32.340
geolocation apps.

00:26:32.340 --> 00:26:34.450
The next thing I'm going
to talk about is device

00:26:34.450 --> 00:26:35.390
orientation.

00:26:35.390 --> 00:26:37.980
So device orientation is
basically what we're talking

00:26:37.980 --> 00:26:39.910
about when I'm moving my
device in different

00:26:39.910 --> 00:26:43.770
directions, tilting, forward,
backwards, all that fun stuff,

00:26:43.770 --> 00:26:46.730
as our model, Jake,
is showing off.

00:26:46.730 --> 00:26:48.340
But there's a nice little helper
for this in the dev

00:26:48.340 --> 00:26:49.210
tools as well.

00:26:49.210 --> 00:26:51.950
So I'm going to go to
a new tab with a

00:26:51.950 --> 00:26:52.990
different demo on it.

00:26:52.990 --> 00:26:57.990
So this is a HTML5 Rocks demo
that has got device

00:26:57.990 --> 00:26:59.720
orientation stuff set up.

00:26:59.720 --> 00:27:02.120
And we're just going to see what
happens when I change my

00:27:02.120 --> 00:27:03.120
device orientation.

00:27:03.120 --> 00:27:07.290
So back into overrides.

00:27:07.290 --> 00:27:08.970
Override device orientation.

00:27:08.970 --> 00:27:11.940
Now we should probably explain
right before we start playing

00:27:11.940 --> 00:27:13.070
around with these values.

00:27:13.070 --> 00:27:15.480
So here you see alpha,
beta, and gamma.

00:27:15.480 --> 00:27:18.470
So alpha corresponds to
the direction in which

00:27:18.470 --> 00:27:20.010
your device is facing.

00:27:20.010 --> 00:27:22.690
Beta is the front
to back tilt.

00:27:22.690 --> 00:27:26.120
And gamma corresponds to
the left to right tilt.

00:27:26.120 --> 00:27:29.240
What that means is if I go to
beta, and I perhaps change the

00:27:29.240 --> 00:27:32.450
value to something like 60, and
go to gamma, what you'll

00:27:32.450 --> 00:27:34.090
see is that it's instantly
changed.

00:27:34.090 --> 00:27:37.860
That basically corresponds to
me doing this on my device.

00:27:37.860 --> 00:27:40.620
Now I can also go to my gamma,
and I can change that.

00:27:40.620 --> 00:27:43.230
Let's try changing that
to 60 as well.

00:27:43.230 --> 00:27:45.210
What that's done it is it's
altered the device tilt, so

00:27:45.210 --> 00:27:47.570
basically that.

00:27:47.570 --> 00:27:49.720
And just being able to change
these values directly inside

00:27:49.720 --> 00:27:52.120
of dev tools is so much easier
than having to open up your

00:27:52.120 --> 00:27:54.390
app directly on the device, and
figure out, am I in the

00:27:54.390 --> 00:27:54.940
right direction?

00:27:54.940 --> 00:27:57.690
Is this working?

00:27:57.690 --> 00:28:01.020
It's a really, really useful
workflow helper.

00:28:01.020 --> 00:28:03.000
JAKE ARCHIBALD: I seem to
remember some suggestion that

00:28:03.000 --> 00:28:04.340
we might do something a little
bit better with that

00:28:04.340 --> 00:28:09.770
interface, maybe something
in 3D?

00:28:09.770 --> 00:28:10.690
ADDY OSMANI: None of
this is final.

00:28:10.690 --> 00:28:12.680
But we've been playing around
with some different mock-ups

00:28:12.680 --> 00:28:13.730
for how we can improve this.

00:28:13.730 --> 00:28:16.500
Because right off the top of my
head, I could not remember

00:28:16.500 --> 00:28:17.560
the alpha, beta and gamma.

00:28:17.560 --> 00:28:20.570
So it's just not going
to happen.

00:28:20.570 --> 00:28:22.930
And so we've been thinking
about, what if we had some

00:28:22.930 --> 00:28:26.270
sort of visual way, like a 3D
box, or something, directly

00:28:26.270 --> 00:28:27.000
inside the tools.

00:28:27.000 --> 00:28:29.226
So that when you change these
values, it's possible for you

00:28:29.226 --> 00:28:31.610
to easily see, this is the
direction in which

00:28:31.610 --> 00:28:32.950
my devices is now.

00:28:32.950 --> 00:28:36.000
This is how it corresponds to
what my app would be doing.

00:28:36.000 --> 00:28:37.950
So that's coming on.

00:28:37.950 --> 00:28:39.900
We'll see if we end up landing
anything like that.

00:28:39.900 --> 00:28:43.600
But it's just another useful
mock-up that we've been

00:28:43.600 --> 00:28:45.820
kicking around.

00:28:45.820 --> 00:28:47.250
So the next thing that
I'm going to talk

00:28:47.250 --> 00:28:49.240
about are touch events.

00:28:49.240 --> 00:28:52.360
So I've got a little demo
for that as well.

00:28:52.360 --> 00:28:53.050
Touch events are something

00:28:53.050 --> 00:28:54.540
particularly useful to emulate.

00:28:54.540 --> 00:28:56.940
Because again, you don't
necessarily want to be pulling

00:28:56.940 --> 00:28:59.500
out a device every single time
you want to just test the

00:28:59.500 --> 00:29:00.880
things you're working.

00:29:00.880 --> 00:29:02.890
And if you've got your app, and
it's supposed to working

00:29:02.890 --> 00:29:04.490
fine on desktops, it's supposed
to be working fine on

00:29:04.490 --> 00:29:07.320
mobile, something you can
actually do is just go back

00:29:07.320 --> 00:29:10.750
into your overrides and
emulate touch events.

00:29:10.750 --> 00:29:12.580
Now before I go and emulate
this, I'm going to show you a

00:29:12.580 --> 00:29:12.960
quick demo.

00:29:12.960 --> 00:29:16.030
So this is a paint demo
by Paul Irish

00:29:16.030 --> 00:29:17.170
and a few other folks.

00:29:17.170 --> 00:29:20.740
And the general idea is I go
into this canvas area.

00:29:20.740 --> 00:29:23.000
And I start moving
my cursor around.

00:29:23.000 --> 00:29:25.090
And I should be able to
draw inside here.

00:29:25.090 --> 00:29:27.660
Unfortunately, this demo only
works with touch events.

00:29:27.660 --> 00:29:30.030
It's sort of optimized
for touch.

00:29:30.030 --> 00:29:33.040
And I can't do anything in here,
unless I'm on an iPad or

00:29:33.040 --> 00:29:34.370
a Nexus device.

00:29:34.370 --> 00:29:36.740
So I go and I emulate
my touch events.

00:29:36.740 --> 00:29:39.320
And what that basically means
is that I can just use my

00:29:39.320 --> 00:29:41.290
cursor to emulate things
like ontouchstart,

00:29:41.290 --> 00:29:43.090
ontouchend, and so on.

00:29:43.090 --> 00:29:45.680
And I can actually, hopefully,
draw in here now.

00:29:48.750 --> 00:29:49.270
There we go.

00:29:49.270 --> 00:29:51.570
It's working.

00:29:51.570 --> 00:29:52.700
This is just going
to look so bad.

00:29:52.700 --> 00:29:56.640
It's like the worst
thing ever.

00:29:56.640 --> 00:29:57.710
But it works.

00:29:57.710 --> 00:29:58.730
It works.

00:29:58.730 --> 00:30:02.170
What's also helpful is, if I
now go back to my Sources

00:30:02.170 --> 00:30:04.750
panel, and I go to Event
Listener Breakpoints in the

00:30:04.750 --> 00:30:07.140
sidebar-- let me expand
that a little bit.

00:30:07.140 --> 00:30:09.080
I scroll down.

00:30:09.080 --> 00:30:12.070
You'll see one expandable
called Touch.

00:30:12.070 --> 00:30:14.472
And in here you'll see Touch
Start, Touch Move, Touch End,

00:30:14.472 --> 00:30:15.790
and Touch Cancel.

00:30:15.790 --> 00:30:18.650
Now let's say that I want to set
breakpoints on Touch Start

00:30:18.650 --> 00:30:19.740
and Touch Move.

00:30:19.740 --> 00:30:22.240
What happens now is, if I try
drawing inside here, it's

00:30:22.240 --> 00:30:23.670
going to pause inside
of the debugger.

00:30:23.670 --> 00:30:25.810
Because it's detected that
I'm either running

00:30:25.810 --> 00:30:27.400
one of those events.

00:30:27.400 --> 00:30:30.720
And it's just detected that
we want to stop there.

00:30:30.720 --> 00:30:33.000
And this is useful because it
means that, again, rather than

00:30:33.000 --> 00:30:35.490
having to be on an actual
device, I can just do the

00:30:35.490 --> 00:30:38.090
stuff inside of dev tools, and
have a complete debugging

00:30:38.090 --> 00:30:40.190
workflow, using the tools
that I'm used to

00:30:40.190 --> 00:30:42.440
using, which is nice.

00:30:42.440 --> 00:30:44.080
JAKE ARCHIBALD: If we can switch
to my screen for a

00:30:44.080 --> 00:30:47.950
moment, a project by one of
our colleagues, Boris.

00:30:47.950 --> 00:30:49.620
If you're interested in hacking
around with something,

00:30:49.620 --> 00:30:52.260
this is a really good project
to look at, Magic Touch.

00:30:52.260 --> 00:30:54.450
So this is using a
variety of tools.

00:30:54.450 --> 00:30:57.740
And what it will let you do is
convert your touch pad on your

00:30:57.740 --> 00:31:00.470
Mac, if you have one.

00:31:00.470 --> 00:31:01.600
And it will send those
multi-touch

00:31:01.600 --> 00:31:02.980
events into the browser.

00:31:02.980 --> 00:31:05.550
So you can use the touch
pad the same way you

00:31:05.550 --> 00:31:06.620
would a phone service.

00:31:06.620 --> 00:31:10.130
And it puts those events
to the browser.

00:31:10.130 --> 00:31:11.710
It's a little bit of work
to get it set up.

00:31:11.710 --> 00:31:13.410
But if you've got to some spare
time to have a hack

00:31:13.410 --> 00:31:14.970
around, it's a fun
thing to do.

00:31:14.970 --> 00:31:17.060
And if anyone wants to do some
pull requests, you can teach

00:31:17.060 --> 00:31:19.800
Boris how to write some HTML.

00:31:19.800 --> 00:31:24.900
That would be very beneficial
to Boris and Google.

00:31:24.900 --> 00:31:25.800
ADDY OSMANI: Excellent.

00:31:25.800 --> 00:31:30.076
So while it's not necessarily
related to mobile, the second

00:31:30.076 --> 00:31:32.840
to last thing I'm going
to be showing you is

00:31:32.840 --> 00:31:34.820
CSS print style emulation.

00:31:34.820 --> 00:31:37.570
So I'm going to go back inside
the dev tools and overrides.

00:31:37.570 --> 00:31:42.140
The very last option is
Emulate CSS Media.

00:31:42.140 --> 00:31:43.880
I guess not a lot of people
are going to be using it.

00:31:43.880 --> 00:31:46.830
But it's useful for you if you
want to preview what, say,

00:31:46.830 --> 00:31:49.540
your print stylesheet looks like
without having to go to

00:31:49.540 --> 00:31:51.400
hack around the DOM and hack
around your different

00:31:51.400 --> 00:31:51.990
stylesheets.

00:31:51.990 --> 00:31:52.630
So I go here.

00:31:52.630 --> 00:31:54.250
And I emulate CSS Media.

00:31:54.250 --> 00:31:57.100
I'm on "Smashing Magazine." And
what you can now see is

00:31:57.100 --> 00:32:00.250
that it's completely switched
the styles in this page over

00:32:00.250 --> 00:32:02.790
to something that can actually
look decent in print.

00:32:02.790 --> 00:32:04.270
JAKE ARCHIBALD: I didn't realize
they had print styles.

00:32:04.270 --> 00:32:05.560
That's really nice.

00:32:05.560 --> 00:32:07.420
ADDY OSMANI: It's one of the few
sites I was able to find

00:32:07.420 --> 00:32:08.730
that actually has them.

00:32:08.730 --> 00:32:09.920
But this is really useful.

00:32:09.920 --> 00:32:11.980
"Smashing" is one of those sites
where you might want to

00:32:11.980 --> 00:32:14.640
actually print out articles if
you don't necessarily have a

00:32:14.640 --> 00:32:16.080
device you're carrying
around the place.

00:32:16.080 --> 00:32:21.080
But it's another little helper
that can just avoid you having

00:32:21.080 --> 00:32:22.554
to do too much extra
stuff just to

00:32:22.554 --> 00:32:23.570
preview your print styles.

00:32:23.570 --> 00:32:27.230
JAKE ARCHIBALD: Does our
emulation cover the way when

00:32:27.230 --> 00:32:28.770
things print they don't tend
to print backgrounds?

00:32:28.770 --> 00:32:29.560
Is that covered there?

00:32:29.560 --> 00:32:30.650
Or is it just switching
the stylesheet?

00:32:30.650 --> 00:32:33.420
ADDY OSMANI: I think this is
just switching the stylesheet.

00:32:33.420 --> 00:32:36.060
Again, fewer sites actually
use these.

00:32:36.060 --> 00:32:39.370
You can preview what a site
using Braille might do for

00:32:39.370 --> 00:32:41.410
that, that specific stylesheet,
or screen, or

00:32:41.410 --> 00:32:45.170
speech, or TV, and so on.

00:32:45.170 --> 00:32:47.530
It's useful.

00:32:47.530 --> 00:32:50.970
The last thing I'm going to
show you is a little demo

00:32:50.970 --> 00:32:52.200
using Browser Stack.

00:32:52.200 --> 00:32:53.810
So Browser Stack, I'll
just quickly pull

00:32:53.810 --> 00:32:54.840
it up on the screen.

00:32:54.840 --> 00:32:58.070
Browser Stack is this really
awesome site that lets you

00:32:58.070 --> 00:32:59.360
test things in the cloud.

00:32:59.360 --> 00:33:03.050
So if, for example, you're an
app developer that wants to

00:33:03.050 --> 00:33:07.320
see how their site or app
looks like in Ice Cream

00:33:07.320 --> 00:33:12.480
Sandwich on a specific mobile
phone, or iOS 5 on a specific

00:33:12.480 --> 00:33:15.770
Apple device, and you don't have
the money or the funds or

00:33:15.770 --> 00:33:18.060
the time to go plugging in these
different devices, and

00:33:18.060 --> 00:33:20.600
you don't necessarily want to
be using emulators, you can

00:33:20.600 --> 00:33:22.010
just use Browser
Stack for this.

00:33:22.010 --> 00:33:23.940
They've got a ton of different
devices hooked up, a ton of

00:33:23.940 --> 00:33:26.240
different emulators that are
just running in the cloud.

00:33:26.240 --> 00:33:28.230
And you can just spin up
different instances of those

00:33:28.230 --> 00:33:30.980
whenever you want.

00:33:30.980 --> 00:33:34.580
What I've actually done for
my dotfiles is I've

00:33:34.580 --> 00:33:35.350
just wired them up.

00:33:35.350 --> 00:33:38.870
So I can actually just easily
execute any site, whether it's

00:33:38.870 --> 00:33:42.360
local or external, via a
specific combination.

00:33:42.360 --> 00:33:45.440
In this case, which you can see,
it says Android Nexus.

00:33:45.440 --> 00:33:50.790
And I want to go see what "The
Boston Globe" looks like on

00:33:50.790 --> 00:33:54.390
latest Android version
on a Nexus device.

00:33:54.390 --> 00:33:58.280
And that's basically going to go
and spin up Browser Stack.

00:33:58.280 --> 00:33:59.560
It should roughly take
just a moment.

00:34:05.010 --> 00:34:06.260
This is the part where it
just fails colossally.

00:34:08.940 --> 00:34:09.949
It's working, maybe.

00:34:09.949 --> 00:34:11.670
Maybe it's opening something.

00:34:11.670 --> 00:34:13.110
JAKE ARCHIBALD: Cameras
do have a habit of

00:34:13.110 --> 00:34:14.270
breaking any demos.

00:34:14.270 --> 00:34:16.070
ADDY OSMANI: They do.

00:34:16.070 --> 00:34:18.409
JAKE ARCHIBALD: But I find
this tool really useful.

00:34:18.409 --> 00:34:21.610
A couple weeks ago I was working
from home, because it

00:34:21.610 --> 00:34:22.380
had snowed.

00:34:22.380 --> 00:34:23.862
And if you can't work
from home when

00:34:23.862 --> 00:34:24.719
it's snowing outside--

00:34:24.719 --> 00:34:26.060
ADDY OSMANI: Snow is Jake's
general excuse for

00:34:26.060 --> 00:34:28.290
not being at work.

00:34:28.290 --> 00:34:29.850
JAKE ARCHIBALD: But I was
writing an article about

00:34:29.850 --> 00:34:30.610
script loading.

00:34:30.610 --> 00:34:34.060
Ad we had the suspicion that
maybe there was a time when

00:34:34.060 --> 00:34:34.960
one spec came in.

00:34:34.960 --> 00:34:36.179
One spec was changed.

00:34:36.179 --> 00:34:39.810
And we were worried that maybe
there was a crossover period

00:34:39.810 --> 00:34:41.469
that might be on some
Android devices.

00:34:41.469 --> 00:34:42.429
And I was at home.

00:34:42.429 --> 00:34:44.600
I only have one Android
device.

00:34:44.600 --> 00:34:45.350
Well, I've got two.

00:34:45.350 --> 00:34:47.989
But they're both running ICS.

00:34:47.989 --> 00:34:50.739
So just being able to spin this
up, and just be able to

00:34:50.739 --> 00:34:52.860
go through loads of devices,
loads of different Android

00:34:52.860 --> 00:34:55.280
versions, iOS versions
to see what was

00:34:55.280 --> 00:34:58.850
going on, it was great.

00:34:58.850 --> 00:35:00.545
You can't test performance
sensitive things.

00:35:00.545 --> 00:35:02.990
ADDY OSMANI: Performance is a
tricky thing, too, to test.

00:35:02.990 --> 00:35:04.920
And we've been speaking to
Browser Stack about this.

00:35:04.920 --> 00:35:07.650
And apparently one thing that's
on their radar is being

00:35:07.650 --> 00:35:11.030
able to remotely use your dev
tools to inspect pages.

00:35:11.030 --> 00:35:14.800
So I might be using my local
dev tools, call out to a

00:35:14.800 --> 00:35:17.630
Browser Stack instance, and
actually be able to see

00:35:17.630 --> 00:35:19.980
performance profiling, real
time, on an actual device.

00:35:19.980 --> 00:35:21.620
JAKE ARCHIBALD: So although you
wouldn't be able to see

00:35:21.620 --> 00:35:23.630
what was happening with the
performance, in terms of the

00:35:23.630 --> 00:35:26.245
phone updating, you would get
the accurate information from

00:35:26.245 --> 00:35:26.580
the Timeline.

00:35:26.580 --> 00:35:27.390
ADDY OSMANI: Exactly yeah.

00:35:27.390 --> 00:35:30.180
Actual data, which is actually
really, really fascinating.

00:35:30.180 --> 00:35:32.320
Browser Stack also have a ton
of developer tools that can

00:35:32.320 --> 00:35:34.320
you can use on many
of these devices.

00:35:34.320 --> 00:35:36.790
I'm not sure how well
those interact

00:35:36.790 --> 00:35:38.390
with some of the emulators.

00:35:38.390 --> 00:35:41.420
But they're constantly doing
a lot of work in the mobile

00:35:41.420 --> 00:35:44.390
space to try improving
testing in the cloud.

00:35:44.390 --> 00:35:47.210
And I think it's just, again
for those people that don't

00:35:47.210 --> 00:35:50.370
necessarily have a local device
lab, it's genuinely

00:35:50.370 --> 00:35:54.080
useful for your testing
workflow.

00:35:54.080 --> 00:35:55.680
JAKE ARCHIBALD: Thats
really neat.

00:35:55.680 --> 00:35:56.610
Excellent.

00:35:56.610 --> 00:36:00.290
Well, thank you for joining us
in this Mobile Web Thursday

00:36:00.290 --> 00:36:01.110
Extravaganza.

00:36:01.110 --> 00:36:03.270
Do you think we can call
it extravaganza?

00:36:03.270 --> 00:36:03.950
ADDY OSMANI: I think
this has been a

00:36:03.950 --> 00:36:05.780
colossal failure, if anything.

00:36:05.780 --> 00:36:07.030
We can call it--

00:36:09.630 --> 00:36:10.550
JAKE ARCHIBALD: Let's
reach a compromise.

00:36:10.550 --> 00:36:12.440
And we'll call it a Colossal
Extravaganza.

00:36:12.440 --> 00:36:13.750
ADDY OSMANI: There we go.

00:36:13.750 --> 00:36:15.870
JAKE ARCHIBALD: And so next
Thursday there will be someone

00:36:15.870 --> 00:36:17.580
else sitting here, talking
about something else.

00:36:17.580 --> 00:36:18.820
I haven't actually
looked it up.

00:36:18.820 --> 00:36:19.720
But you should tune
in for that.

00:36:19.720 --> 00:36:22.320
Because I'm sure it will
be absolutely amazing.

00:36:22.320 --> 00:36:23.520
Thank you very much, guys.

00:36:23.520 --> 00:36:24.090
Bye bye.

00:36:24.090 --> 00:36:25.340
ADDY OSMANI: Bye.

