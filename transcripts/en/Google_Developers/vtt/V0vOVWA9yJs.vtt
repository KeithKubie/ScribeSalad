WEBVTT
Kind: captions
Language: en

00:00:03.600 --> 00:00:05.350
RAJEEV DAYAL: My name's
Rajeev Dayal.

00:00:05.350 --> 00:00:08.740
I'm the tech lead on the Google
plugin for Eclipse.

00:00:08.740 --> 00:00:11.540
And I'm here to talk to you
today about bringing the cloud

00:00:11.540 --> 00:00:13.890
to your IDE with the Google
plugin for Eclipse

00:00:13.890 --> 00:00:16.540
also known as GPE.

00:00:16.540 --> 00:00:18.350
So there's a couple
links up there.

00:00:18.350 --> 00:00:20.710
One's for session feedback,
and there's a

00:00:20.710 --> 00:00:22.420
couple hashtags as well.

00:00:22.420 --> 00:00:25.360
So please enter session feedback
and tweet about

00:00:25.360 --> 00:00:27.450
things if you'd like to.

00:00:27.450 --> 00:00:30.630
So let's just go through a
bit of an agenda here.

00:00:30.630 --> 00:00:32.990
Just going to go through a brief
introduction, and then I

00:00:32.990 --> 00:00:34.620
want to just sort
of talk about--

00:00:34.620 --> 00:00:36.070
go through the set
of new features.

00:00:36.070 --> 00:00:39.830
So really getting your code from
Google Project Hosting

00:00:39.830 --> 00:00:43.620
into Eclipse using the Google
plugin for Eclipse, using

00:00:43.620 --> 00:00:47.620
Google APIs in your project,
then finally deploying your

00:00:47.620 --> 00:00:49.610
project to Google App
Engine using the

00:00:49.610 --> 00:00:50.950
Google plugin for Eclipse.

00:00:50.950 --> 00:00:52.210
And then a couple of bits.

00:00:52.210 --> 00:00:54.030
They're new features.

00:00:54.030 --> 00:00:55.800
They're a little smaller, but
I think they're important to

00:00:55.800 --> 00:00:57.050
call out as well.

00:00:59.850 --> 00:01:00.320
All right.

00:01:00.320 --> 00:01:04.365
So first of all many of you
probably know, but I'll go

00:01:04.365 --> 00:01:05.459
through this for a second.

00:01:05.459 --> 00:01:07.990
What is the Google plugin
for Eclipse?

00:01:07.990 --> 00:01:09.960
It's a collection of
plugins that work

00:01:09.960 --> 00:01:11.360
with the Eclipse platform.

00:01:11.360 --> 00:01:16.770
And the IDE is what people use
to write software, write Java

00:01:16.770 --> 00:01:19.760
software or even C++ software,
but Java is what we care about

00:01:19.760 --> 00:01:20.740
in this case.

00:01:20.740 --> 00:01:24.260
And the plugins work with
Eclipse 3.4 all the way

00:01:24.260 --> 00:01:25.780
through to 3.6.

00:01:25.780 --> 00:01:28.740
And we'll have support for
Eclipse 3.7 very, very

00:01:28.740 --> 00:01:33.030
quickly, and we should because
3.7 is being released in June.

00:01:33.030 --> 00:01:36.100
And what the Google plugin for
Eclipse does is it assists in

00:01:36.100 --> 00:01:38.690
the creation and development
of web apps that use the

00:01:38.690 --> 00:01:42.760
Google Web Toolkit and
App Engine for Java.

00:01:42.760 --> 00:01:45.260
Whenever you're using the
plugin, when you first install

00:01:45.260 --> 00:01:47.230
it you'll have the option
to download the GWT

00:01:47.230 --> 00:01:49.740
or App Engine SDKs.

00:01:49.740 --> 00:01:52.880
You don't have to, but really
unless you have those SDKs

00:01:52.880 --> 00:01:55.500
there's not a lot you can do.

00:01:55.500 --> 00:01:58.210
One of our just general design
principles with using the

00:01:58.210 --> 00:02:01.120
Google plugin for Eclipse is or
building the Google plugin

00:02:01.120 --> 00:02:03.400
for Eclipse is blending
naturally into Eclipse.

00:02:03.400 --> 00:02:06.490
So we weren't trying to be very
heavy-handed with the UI

00:02:06.490 --> 00:02:10.800
and sort of take over large
swaths of area with like a new

00:02:10.800 --> 00:02:12.350
dashboard or something
like that.

00:02:12.350 --> 00:02:16.160
We were trying to really blend
naturally into Eclipse's DNA,

00:02:16.160 --> 00:02:18.690
surfacing Wizards and features
in the right places.

00:02:18.690 --> 00:02:20.440
Where you would expect
them to be.

00:02:20.440 --> 00:02:25.700
And just make it easy for you to
just use these new features

00:02:25.700 --> 00:02:30.200
we're using, building GWT
apps or App Engine apps.

00:02:30.200 --> 00:02:31.820
OK, why are you here?

00:02:31.820 --> 00:02:32.800
So I'll take some guesses.

00:02:32.800 --> 00:02:35.350
So how many of you are Eclipse
users that are just

00:02:35.350 --> 00:02:38.130
interested in GPE?

00:02:38.130 --> 00:02:39.540
That's a lot of you guys.

00:02:39.540 --> 00:02:42.510
So how many of you guys are GWT
or App Engine users that

00:02:42.510 --> 00:02:46.460
are curious about the
new features in GPE?

00:02:46.460 --> 00:02:47.000
OK.

00:02:47.000 --> 00:02:50.180
And how about interested in
Google APIs and just want to

00:02:50.180 --> 00:02:53.420
see how GPE can make
your life easier?

00:02:53.420 --> 00:02:54.340
OK.

00:02:54.340 --> 00:02:55.220
Cool.

00:02:55.220 --> 00:02:56.860
My guesses weren't bad.

00:02:56.860 --> 00:03:00.630
And for the others we
can talk later.

00:03:00.630 --> 00:03:03.220
OK, let's first talk about
getting your code from Google

00:03:03.220 --> 00:03:04.180
Project Hosting.

00:03:04.180 --> 00:03:06.630
So what is Google Project
Hosting, right?

00:03:06.630 --> 00:03:10.050
So I've given you the URL up
there, and basically what it

00:03:10.050 --> 00:03:12.900
is is version control
in the cloud.

00:03:12.900 --> 00:03:15.680
So you can go there and
basically you have a SVN or a

00:03:15.680 --> 00:03:19.090
Mercurial repository that
lives in the cloud.

00:03:19.090 --> 00:03:22.700
And you can view the repository
and commit logs in

00:03:22.700 --> 00:03:23.430
your browser--

00:03:23.430 --> 00:03:26.780
that's kind of the advantage of
having this sort of a VCS

00:03:26.780 --> 00:03:27.610
system out in the cloud.

00:03:27.610 --> 00:03:30.910
And you also get issue tracking,
a wiki, a project

00:03:30.910 --> 00:03:33.320
homepage, and you don't have to
deal with all the headaches

00:03:33.320 --> 00:03:36.080
of setting up your VCS server
and all those things.

00:03:36.080 --> 00:03:38.480
So just to browse around
here really quickly.

00:03:41.160 --> 00:03:44.490
Basically this is just the GWT
sample projects project.

00:03:44.490 --> 00:03:44.880
Right?

00:03:44.880 --> 00:03:47.320
And here's the home page.

00:03:47.320 --> 00:03:50.445
Then you can sort of browse
through the sources here and

00:03:50.445 --> 00:03:53.290
just go check things out.

00:03:53.290 --> 00:03:55.280
So many of you are probably
familiar with this.

00:03:55.280 --> 00:03:57.230
And then you can look through
the change log as

00:03:57.230 --> 00:03:58.630
well, see the diffs.

00:03:58.630 --> 00:04:01.200
So kind of cool that even if
you haven't checked out the

00:04:01.200 --> 00:04:04.590
project, you can still see
differences and changes and

00:04:04.590 --> 00:04:07.760
things like that.

00:04:07.760 --> 00:04:11.900
So what I want to do is show
you how we've integrated in

00:04:11.900 --> 00:04:14.450
GPE with Google Project
Hosting.

00:04:14.450 --> 00:04:17.050
So unfortunately, things look
a little small, so what I'm

00:04:17.050 --> 00:04:19.990
going to do is kind of like
post action, zoom in on

00:04:19.990 --> 00:04:23.150
different things using this
wonderful trick on the Apple.

00:04:23.150 --> 00:04:25.180
So I hope it doesn't give you
guys motion sickness.

00:04:25.180 --> 00:04:27.130
I'll do the best I can.

00:04:27.130 --> 00:04:32.480
So this is Eclipse, and up
here we've got the Google

00:04:32.480 --> 00:04:34.930
plugin for Eclipse installed.

00:04:34.930 --> 00:04:38.310
What I'm going to do is we've
got a little item here saying

00:04:38.310 --> 00:04:40.310
import Google hosted project.

00:04:40.310 --> 00:04:42.500
So I'm going to say
I want to do that.

00:04:42.500 --> 00:04:44.050
First thing that happens
is it's going to

00:04:44.050 --> 00:04:45.050
ask me to sign in.

00:04:45.050 --> 00:04:46.950
Because what it's trying to do
here is figure out, OK well

00:04:46.950 --> 00:04:48.330
who are you.

00:04:48.330 --> 00:04:51.000
And once I know who you are,
then I can see what projects

00:04:51.000 --> 00:04:51.880
you're a member of.

00:04:51.880 --> 00:04:54.270
And then I'll give you an option
to check those out.

00:04:54.270 --> 00:04:55.690
So I'm going to sign in here.

00:05:05.340 --> 00:05:08.900
Now the next page is basically
saying, hey OK, that's great.

00:05:08.900 --> 00:05:12.090
Now you've authenticated,
Google knows who I am.

00:05:12.090 --> 00:05:14.630
But it's saying the Google
plugin for Eclipse wants

00:05:14.630 --> 00:05:17.280
access to my Google Code
information and a

00:05:17.280 --> 00:05:18.150
couple other things--

00:05:18.150 --> 00:05:18.930
App Engine as well.

00:05:18.930 --> 00:05:20.430
I'll tell you why later.

00:05:20.430 --> 00:05:23.285
So in this case I'm going to
say, sure I want to do that.

00:05:23.285 --> 00:05:24.930
I'm going to give it access.

00:05:24.930 --> 00:05:27.520
And now let me just zoom
out here a little bit.

00:05:27.520 --> 00:05:30.950
And on the left here you can
see the projects that I'm a

00:05:30.950 --> 00:05:33.030
member of in Google Code.

00:05:33.030 --> 00:05:35.840
So there's the GWT Eclipse
Plugin Project, and the GWT

00:05:35.840 --> 00:05:37.700
Sample Projects, which
I just showed you.

00:05:37.700 --> 00:05:40.830
On the right you can see just
a bit more information, like

00:05:40.830 --> 00:05:41.920
my role of this project.

00:05:41.920 --> 00:05:42.750
I'm an owner.

00:05:42.750 --> 00:05:46.690
And it just gives me the
information that's provided on

00:05:46.690 --> 00:05:48.180
the project home page.

00:05:48.180 --> 00:05:50.800
So what I'm going to say is
I'll say, OK that's fine.

00:05:50.800 --> 00:05:53.730
I want to grab something from
the GWT Sample Projects

00:05:53.730 --> 00:05:54.600
repository.

00:05:54.600 --> 00:05:56.840
Hit next here.

00:05:56.840 --> 00:05:59.990
Now what you're getting here
is a view of the SVN

00:05:59.990 --> 00:06:01.660
repository.

00:06:01.660 --> 00:06:05.190
So I'm going to go under trunk,
and I'll see the Hello

00:06:05.190 --> 00:06:06.710
World Project.

00:06:06.710 --> 00:06:08.380
We're all familiar with
Hello World Project.

00:06:08.380 --> 00:06:10.600
So I'm going to check
that one out.

00:06:10.600 --> 00:06:12.430
Let me just zoom out
here a little bit.

00:06:12.430 --> 00:06:15.270
And just hit finish here.

00:06:15.270 --> 00:06:19.710
Basically what's happening now
is GPE sort of stepped out of

00:06:19.710 --> 00:06:26.490
the mix and deferred over to,
in this case, Subclipse, and

00:06:26.490 --> 00:06:28.650
has gone and checked out the
project version control, and

00:06:28.650 --> 00:06:30.520
you can see it right here.

00:06:30.520 --> 00:06:33.880
Basically this is the version
controlled project.

00:06:33.880 --> 00:06:36.300
If you look at--

00:06:36.300 --> 00:06:38.650
just go under the team menu,
you can see that

00:06:38.650 --> 00:06:39.700
it's a shared project.

00:06:39.700 --> 00:06:46.480
So just to recap here, what went
on is that GPE stepped in

00:06:46.480 --> 00:06:48.920
and basically asked you for
your information, and then

00:06:48.920 --> 00:06:51.270
using the Google Project Hosting
API we were able to

00:06:51.270 --> 00:06:53.870
figure out what projects you're
a part of and lift

00:06:53.870 --> 00:06:54.480
those for you.

00:06:54.480 --> 00:06:58.400
Once you chose what project you
wanted, then we basically

00:06:58.400 --> 00:07:01.540
punted things over to whatever
version control plugin you're

00:07:01.540 --> 00:07:04.560
using, be it Subclipse,
Subversive or Mercurial to do

00:07:04.560 --> 00:07:06.290
the heavy lifting.

00:07:06.290 --> 00:07:10.810
Essentially check things out and
bring it in and create the

00:07:10.810 --> 00:07:12.280
project in your work space.

00:07:12.280 --> 00:07:14.640
One really interesting thing
for those of you that have

00:07:14.640 --> 00:07:18.280
used Google Code is that the
username and password for a

00:07:18.280 --> 00:07:22.460
repo is not the same as your
username and password that you

00:07:22.460 --> 00:07:23.740
would use when you
sign into Google.

00:07:23.740 --> 00:07:26.295
And that's for a good reason
because it's just supposed to

00:07:26.295 --> 00:07:28.315
be more of a throwaway
password,

00:07:28.315 --> 00:07:29.240
a little less secure.

00:07:29.240 --> 00:07:32.610
But the problem with those
passwords are that they're

00:07:32.610 --> 00:07:33.960
very esoteric.

00:07:33.960 --> 00:07:36.330
They're not very easy
to remember.

00:07:36.330 --> 00:07:39.510
Notice that you didn't have to
enter that at all there.

00:07:39.510 --> 00:07:42.380
When we checked out the project,
the username and

00:07:42.380 --> 00:07:46.580
password was set up and entered
for you by GPE.

00:07:46.580 --> 00:07:50.340
So a couple other things
I want to say.

00:07:50.340 --> 00:07:53.200
You know, you might say, well
what if I don't care about

00:07:53.200 --> 00:07:54.570
Google Project Hosting at all.

00:07:54.570 --> 00:07:56.530
I just don't want to
use it, whatever.

00:07:56.530 --> 00:07:57.450
I think it sucks.

00:07:57.450 --> 00:07:58.150
I don't know what you'll say.

00:07:58.150 --> 00:08:01.360
But maybe you'll think that
you don't want to go and

00:08:01.360 --> 00:08:04.870
install these version control
plugins up front.

00:08:04.870 --> 00:08:05.960
Well you don't have to.

00:08:05.960 --> 00:08:06.350
OK?

00:08:06.350 --> 00:08:09.530
If you're not going to use
Google Project Hosting, you

00:08:09.530 --> 00:08:11.840
can still install GPE, and only
when you go to use that

00:08:11.840 --> 00:08:13.620
feature will you be asked
to, hey, install

00:08:13.620 --> 00:08:15.670
some sort of VCS plugin.

00:08:15.670 --> 00:08:18.820
There's also some work
that was done--

00:08:18.820 --> 00:08:22.310
probably not noticed because
it's working well-- is that

00:08:22.310 --> 00:08:24.900
Subclipse and Subversive don't
play very well together.

00:08:24.900 --> 00:08:26.930
So installing them together
is not a very-- you

00:08:26.930 --> 00:08:28.350
don't want to do that.

00:08:28.350 --> 00:08:31.740
So GPE makes sure that in the
process of prompting you to

00:08:31.740 --> 00:08:35.010
install these plugins that if
you already have one installed

00:08:35.010 --> 00:08:37.169
it's not going to force you
to install the other one.

00:08:37.169 --> 00:08:38.010
All of that's handled.

00:08:38.010 --> 00:08:42.799
It's messy, but we took
the time to do that.

00:08:42.799 --> 00:08:45.550
So just a couple other notes
here on the side for those of

00:08:45.550 --> 00:08:50.890
you that are existing GPE users
or GWT and App Engine

00:08:50.890 --> 00:08:52.340
users with GPE.

00:08:52.340 --> 00:08:54.880
When you add a new project to
version control be sure to

00:08:54.880 --> 00:08:58.010
commit the project, class app
and settings file so that when

00:08:58.010 --> 00:09:01.260
you check it back out, GPE can
immediately recognize that

00:09:01.260 --> 00:09:04.735
this is indeed a GWT or an App
Engine project and configure

00:09:04.735 --> 00:09:06.120
it appropriately.

00:09:06.120 --> 00:09:11.140
One thing that is often a hole
that people step into-- and I

00:09:11.140 --> 00:09:12.190
don't blame them--

00:09:12.190 --> 00:09:15.800
is the problem with classpath
containers.

00:09:15.800 --> 00:09:18.455
So let me just show
you guys here.

00:09:21.730 --> 00:09:26.330
So just to refresh what a
classpath container is.

00:09:26.330 --> 00:09:28.800
Basically, you can see that
these things here are

00:09:28.800 --> 00:09:29.640
classpath containers.

00:09:29.640 --> 00:09:32.150
The JRE is one that you
all probably know.

00:09:32.150 --> 00:09:33.730
This also is one.

00:09:33.730 --> 00:09:36.360
The GWT SDK in this case.

00:09:36.360 --> 00:09:38.510
So what is a classpath
container?

00:09:38.510 --> 00:09:42.920
Really in the end it's
like a pointer.

00:09:42.920 --> 00:09:46.740
So it's not really saying
exactly which jars are

00:09:46.740 --> 00:09:48.250
supposed to be on the build
path; it's meant to be

00:09:48.250 --> 00:09:50.600
resolved at build time
or run time.

00:09:50.600 --> 00:09:51.950
So here's the trick.

00:09:51.950 --> 00:09:54.790
Because GWT and App Engine
projects both use classpath

00:09:54.790 --> 00:09:58.640
containers, they only get
resolved once a project is

00:09:58.640 --> 00:09:59.350
checked out.

00:09:59.350 --> 00:10:00.770
And what do they get
resolved to?

00:10:00.770 --> 00:10:03.530
Well it depends on the SDKs
you have installed in your

00:10:03.530 --> 00:10:04.620
work space.

00:10:04.620 --> 00:10:07.960
So for example, if I have
GWT 2.3 installed,

00:10:07.960 --> 00:10:08.920
I check in my project.

00:10:08.920 --> 00:10:09.940
It's working well.

00:10:09.940 --> 00:10:12.620
And then somebody else checks
out my project, and they have

00:10:12.620 --> 00:10:15.670
GWT 2.4 installed, it's going
to bind to GWT 2.4.

00:10:15.670 --> 00:10:18.030
Obviously, not something you
want, but that's kind of the

00:10:18.030 --> 00:10:20.510
way classpath containers work.

00:10:20.510 --> 00:10:22.890
So a couple of things
to notice to know

00:10:22.890 --> 00:10:24.010
when this is happening.

00:10:24.010 --> 00:10:26.090
If you look at the warnings
area-- hopefully you don't

00:10:26.090 --> 00:10:28.850
have like 100 billion warnings
in your code, and this won't

00:10:28.850 --> 00:10:31.560
get buried, but anyway-- look
in the warnings area.

00:10:31.560 --> 00:10:34.550
And you might notice that
there's a message about the

00:10:34.550 --> 00:10:36.590
WEB-INF/lib directory being
out of sync with

00:10:36.590 --> 00:10:38.140
respect to the SDK.

00:10:38.140 --> 00:10:42.560
That's a tip-off that you have
an SDK working against what it

00:10:42.560 --> 00:10:44.690
wasn't intended to
work against.

00:10:44.690 --> 00:10:48.120
Another option I think this is
probably the best option.

00:10:48.120 --> 00:10:50.620
Get rid of the classpath
container entirely.

00:10:50.620 --> 00:10:54.110
And just put the jars directly
on your build path and in

00:10:54.110 --> 00:10:55.560
WEB-INF/lib as you need them.

00:10:55.560 --> 00:10:58.600
And then GPE will still be able
to work with the project,

00:10:58.600 --> 00:11:01.240
but then there's no ambiguity
about which jars you're

00:11:01.240 --> 00:11:02.810
building against.

00:11:02.810 --> 00:11:05.690
One thing to note for those of
you that use Maven, which is

00:11:05.690 --> 00:11:06.480
probably a good set.

00:11:06.480 --> 00:11:09.520
You don't have to worry about
this problem because the Palm

00:11:09.520 --> 00:11:14.365
itself is always up-to-date,
and it just keeps things in

00:11:14.365 --> 00:11:14.980
sync for you.

00:11:14.980 --> 00:11:16.280
So you don't have to deal
with this issue.

00:11:19.110 --> 00:11:19.350
All right.

00:11:19.350 --> 00:11:23.230
So let's move on to using Google
APIs in your project.

00:11:23.230 --> 00:11:25.150
So Google APIs, what are they?

00:11:25.150 --> 00:11:26.510
I'm sure you've heard
of many of them.

00:11:26.510 --> 00:11:27.940
There's a whole ton of them.

00:11:27.940 --> 00:11:30.690
I couldn't name them
all if I tried.

00:11:30.690 --> 00:11:33.600
So here's the list. Here's a URL
you can go to to see them.

00:11:33.600 --> 00:11:35.830
Here's a few of the
usual suspects--

00:11:35.830 --> 00:11:42.930
Map, Earth, YouTube,
Spreadsheets, Buzz and gmail.

00:11:42.930 --> 00:11:44.000
So let me show you--

00:11:44.000 --> 00:11:47.600
I'll just jump into the demo
here, and then we'll go back

00:11:47.600 --> 00:11:49.940
and talk about what happened.

00:11:49.940 --> 00:11:52.786
So first I'm going to create
a new project.

00:11:52.786 --> 00:11:55.965
I'm just going to
create a new--

00:11:55.965 --> 00:11:58.070
I'll just call this Buzz because
I'm going to import

00:11:58.070 --> 00:12:00.276
the Buzz API.

00:12:00.276 --> 00:12:04.690
I'll just call it
My Buzz Project.

00:12:04.690 --> 00:12:07.200
And I'll put some default
package name.

00:12:07.200 --> 00:12:09.750
I'll just make this a--

00:12:09.750 --> 00:12:12.940
basically I'll just make
this an App Engine app.

00:12:12.940 --> 00:12:16.290
So we've created this
project here.

00:12:16.290 --> 00:12:18.410
So what I'm going to do now is
I'm going to say, hey, I want

00:12:18.410 --> 00:12:22.360
to bring Google Buzz
into this project.

00:12:22.360 --> 00:12:26.010
So what you can do, again,
if you zoom up here.

00:12:26.010 --> 00:12:30.260
Or I'll zoom up here, and I'm
going to pick add Google APIs.

00:12:30.260 --> 00:12:31.340
Let me just zoom out.

00:12:31.340 --> 00:12:34.380
Basically now you have this list
of Google APIs that are

00:12:34.380 --> 00:12:36.010
available for you to choose.

00:12:36.010 --> 00:12:38.480
So you can see you've got
analytics, apps for your

00:12:38.480 --> 00:12:41.470
domain, books, contacts,
finance.

00:12:41.470 --> 00:12:46.230
And here on the right you have
a description of the API.

00:12:46.230 --> 00:12:47.005
You've got the version.

00:12:47.005 --> 00:12:50.120
You've got also links to
the API documentation.

00:12:50.120 --> 00:12:52.960
So I could just click over here,
and that's going to jump

00:12:52.960 --> 00:12:55.330
me over to--

00:12:55.330 --> 00:12:55.795
whoops.

00:12:55.795 --> 00:12:56.930
Zoom out here a bit.

00:12:56.930 --> 00:12:59.280
This is going to jump me over
the documentation for the

00:12:59.280 --> 00:13:01.660
Expert API for example.

00:13:01.660 --> 00:13:03.440
Let me just go back
into Eclipse here.

00:13:03.440 --> 00:13:04.690
So let's pick the Buzz API.

00:13:09.030 --> 00:13:11.180
Right here, it's version v1.

00:13:11.180 --> 00:13:13.940
It's still in Labs.

00:13:13.940 --> 00:13:15.190
So I'm just going
to click finish.

00:13:17.870 --> 00:13:20.610
All right, so what
happened there?

00:13:20.610 --> 00:13:22.820
So let's look at the project
and just take a look.

00:13:22.820 --> 00:13:25.300
Basically what happened in the
end is you'll see a new

00:13:25.300 --> 00:13:27.660
classpath container was added.

00:13:27.660 --> 00:13:28.870
And it's got Google Buzz.

00:13:28.870 --> 00:13:31.650
And you can see the nice pretty
Buzz icon, which we're

00:13:31.650 --> 00:13:33.980
really proud of actually.

00:13:33.980 --> 00:13:36.680
If you look in here you can see
basically the jars that

00:13:36.680 --> 00:13:38.370
were pulled down.

00:13:38.370 --> 00:13:42.240
So here's really the main jar
that contains really the Buzz

00:13:42.240 --> 00:13:44.810
API, but then you've also got
all the dependency jars.

00:13:44.810 --> 00:13:46.170
And they're added
as a classpath

00:13:46.170 --> 00:13:47.890
container to the project.

00:13:47.890 --> 00:13:50.960
And the cool thing
is all of the--

00:13:50.960 --> 00:13:52.440
you can look through
them here.

00:13:52.440 --> 00:13:55.750
And you've got all of the Java
dock, all the sources linked,

00:13:55.750 --> 00:13:57.130
and everything like that.

00:13:57.130 --> 00:14:00.160
So basically in one click you
can go ahead, and you're ready

00:14:00.160 --> 00:14:03.360
to code straight against
any of these APIs.

00:14:03.360 --> 00:14:07.290
And more APIs is better.

00:14:07.290 --> 00:14:07.550
Right?

00:14:07.550 --> 00:14:11.320
So I mean let's go and add the
Books API because we could do

00:14:11.320 --> 00:14:14.960
something with Buzz
and Books maybe.

00:14:14.960 --> 00:14:17.580
So basically, you can
just keep adding--

00:14:17.580 --> 00:14:20.890
you can add multiple APIs to
your project as you see fit.

00:14:20.890 --> 00:14:23.610
It's just a really easy
way to get the

00:14:23.610 --> 00:14:26.610
APIs into your project.

00:14:26.610 --> 00:14:29.910
So just to talk a little bit
about what happened there.

00:14:29.910 --> 00:14:32.040
What we've got is basically
just a service out there

00:14:32.040 --> 00:14:34.810
running that gives a list of--
that's giving a list of

00:14:34.810 --> 00:14:39.580
basically available APIs that is
based on the API Discovery

00:14:39.580 --> 00:14:42.220
service that was announced
earlier this morning by the

00:14:42.220 --> 00:14:44.460
Google APIs team.

00:14:44.460 --> 00:14:46.390
What we've also got are
the API bundles.

00:14:46.390 --> 00:14:48.740
You've got a bundling of the
API itself and all the

00:14:48.740 --> 00:14:50.130
dependency jars.

00:14:50.130 --> 00:14:54.230
And when you pick one, we
download it as a classpath

00:14:54.230 --> 00:14:56.190
container, and it's added
to your build path.

00:14:56.190 --> 00:14:57.035
The source is in
the Java dock.

00:14:57.035 --> 00:14:58.390
It's linked for you.

00:14:58.390 --> 00:15:01.900
And any jars that you need are
automatically copied to the

00:15:01.900 --> 00:15:03.110
WEB-INF/lib directory.

00:15:03.110 --> 00:15:04.210
So things are available on your

00:15:04.210 --> 00:15:05.920
server's run time classpath.

00:15:05.920 --> 00:15:08.950
Though I'm not showing it here,
notifications for API

00:15:08.950 --> 00:15:11.640
updates, when new ones are
available-- or not new ones--

00:15:11.640 --> 00:15:15.170
when new versions of the APIs
for your project are

00:15:15.170 --> 00:15:16.970
available, will appear
right next to

00:15:16.970 --> 00:15:18.340
the classpath container.

00:15:18.340 --> 00:15:19.960
So that's an oft-asked
question.

00:15:19.960 --> 00:15:22.310
When is the new version
of the API out?

00:15:22.310 --> 00:15:23.420
Well now you'll know.

00:15:23.420 --> 00:15:24.180
You don't have to ask.

00:15:24.180 --> 00:15:26.990
It'll appear for you.

00:15:26.990 --> 00:15:30.670
So one thing I kind of talked
a little bit about classpath

00:15:30.670 --> 00:15:33.660
container resolution, and how
that was not great for storing

00:15:33.660 --> 00:15:35.320
your projects in a repository.

00:15:35.320 --> 00:15:38.270
Well the cool thing is it's not
in this case because if

00:15:38.270 --> 00:15:41.700
you go back here, it's normally
a hidden directory

00:15:41.700 --> 00:15:43.040
though I've shown it here.

00:15:43.040 --> 00:15:45.870
You can see that there's this
Google APIs directory, and

00:15:45.870 --> 00:15:48.820
that contains basically all
of the API jars that you

00:15:48.820 --> 00:15:50.055
downloaded into your project.

00:15:50.055 --> 00:15:52.610
And you'll see that Books
is here now too.

00:15:52.610 --> 00:15:58.130
So it's safe to check things
in with the classpath

00:15:58.130 --> 00:16:00.250
container because it's always
going to be resolved relative

00:16:00.250 --> 00:16:00.990
to your project.

00:16:00.990 --> 00:16:03.630
Just make sure you check in
the Google APIs directory.

00:16:03.630 --> 00:16:05.210
So one thing I do
want to note.

00:16:05.210 --> 00:16:09.600
In version 1 of this in GPE,
we haven't made a clear

00:16:09.600 --> 00:16:12.300
distinction, as you may have
noticed in that list, between

00:16:12.300 --> 00:16:18.950
server-side versus client-side
APIs or run time dependency.

00:16:18.950 --> 00:16:21.910
What happens is with a
client-side API you generally

00:16:21.910 --> 00:16:25.000
don't need to copy things into
WEB-INF/lib, but we're kind of

00:16:25.000 --> 00:16:26.330
aggressively doing it anyway.

00:16:26.330 --> 00:16:27.590
Because we haven't added
the metadata

00:16:27.590 --> 00:16:28.890
to make that different.

00:16:28.890 --> 00:16:30.290
So it's not possible--

00:16:30.290 --> 00:16:32.480
though it is easily possible
to do that, we just haven't

00:16:32.480 --> 00:16:33.820
done it yet.

00:16:33.820 --> 00:16:36.860
So another thing is that when
you use Maven or just in

00:16:36.860 --> 00:16:39.960
general, the run time classpath
is not equal to the

00:16:39.960 --> 00:16:43.000
build time classpath and
that's not even--

00:16:43.000 --> 00:16:46.720
And then in some cases there's
even differences between--

00:16:46.720 --> 00:16:47.970
just different--

00:16:47.970 --> 00:16:49.370
depends on what you're
compiling.

00:16:49.370 --> 00:16:50.590
The build time classpaths
can vary

00:16:50.590 --> 00:16:51.610
depending on the component.

00:16:51.610 --> 00:16:54.850
But basically we're putting
everything on the build path.

00:16:54.850 --> 00:16:56.360
We're being aggressive here.

00:16:56.360 --> 00:16:57.520
So that's just one
thing to note.

00:16:57.520 --> 00:17:00.300
You could exclude certain things
from it if you know the

00:17:00.300 --> 00:17:02.900
API well enough.

00:17:02.900 --> 00:17:05.800
One other thing is that you saw
that I added basically two

00:17:05.800 --> 00:17:08.430
APIs to my project, and they
both have dependency jars.

00:17:08.430 --> 00:17:11.550
You might think, well wouldn't
there be a nasty conflict if

00:17:11.550 --> 00:17:13.839
they're using different versions
of dependency jars.

00:17:13.839 --> 00:17:17.430
Well generally the thing is, at
least at this stage, when

00:17:17.430 --> 00:17:21.740
there's going to be an update
for these APIs based on a

00:17:21.740 --> 00:17:22.880
dependency jar--

00:17:22.880 --> 00:17:24.220
say that's the thing
that changed--

00:17:24.220 --> 00:17:26.510
then an update is going to be
available for all APIs that

00:17:26.510 --> 00:17:27.339
use that jar.

00:17:27.339 --> 00:17:29.690
So if you update and sync, you
should be fine, but it's

00:17:29.690 --> 00:17:31.990
something to note.

00:17:31.990 --> 00:17:33.800
All right, so one thing I just
want to go into here.

00:17:33.800 --> 00:17:35.920
This is covered in a lot of
different talks, but I just

00:17:35.920 --> 00:17:37.700
thought it would be worth
a couple slides.

00:17:37.700 --> 00:17:42.810
So whenever you want to use an
API, you need to go to the API

00:17:42.810 --> 00:17:44.100
console and enable it.

00:17:44.100 --> 00:17:49.050
So just to show you what that
looks like, if you go to--

00:17:49.050 --> 00:17:52.610
this is code.google.com,
API's console.

00:17:52.610 --> 00:17:54.460
What you do is you
create a project.

00:17:54.460 --> 00:17:56.580
And creating a project is no
more than just really creating

00:17:56.580 --> 00:17:57.460
identifier.

00:17:57.460 --> 00:18:00.320
And then here it's kind of
like a cool dashboard.

00:18:00.320 --> 00:18:02.270
It feels like a switchboard
where you can just turn things

00:18:02.270 --> 00:18:02.840
on and off.

00:18:02.840 --> 00:18:04.700
And you kind of can actually.

00:18:04.700 --> 00:18:08.250
You can turn on different
APIs.

00:18:08.250 --> 00:18:13.670
And basically it tells you
what the quota limit is.

00:18:13.670 --> 00:18:15.950
So once you do this-- the reason
why you have to do all

00:18:15.950 --> 00:18:19.190
this is because in order to
use the API, you need a

00:18:19.190 --> 00:18:20.480
developer key.

00:18:20.480 --> 00:18:23.470
Now the developer key-- it
depends on what type of API

00:18:23.470 --> 00:18:23.900
you're using.

00:18:23.900 --> 00:18:27.000
If you're using an API that
doesn't actually need to get

00:18:27.000 --> 00:18:31.010
any user data, so in the end,
Maps or something like that or

00:18:31.010 --> 00:18:33.250
at least parts of Map,
then you just need

00:18:33.250 --> 00:18:34.670
the simple API key.

00:18:34.670 --> 00:18:38.920
However, if you're using an
API, like Buzz or gmail or

00:18:38.920 --> 00:18:41.440
something, that's going to
require some user to give you

00:18:41.440 --> 00:18:44.770
permission to access their data,
then you need to create

00:18:44.770 --> 00:18:47.070
a client ID and a
client secret.

00:18:47.070 --> 00:18:48.660
And you can go through
that flow here.

00:18:48.660 --> 00:18:51.420
But do know that these are
things that you need to do

00:18:51.420 --> 00:18:54.220
before you can actually
use the API.

00:18:54.220 --> 00:18:56.070
I mean you can code against
it, and that's fine.

00:18:56.070 --> 00:18:58.780
But you actually need to put
this information in if you

00:18:58.780 --> 00:19:00.030
want to be able to use it.

00:19:03.540 --> 00:19:06.210
So one thing to say about the
developer key and the client

00:19:06.210 --> 00:19:09.710
ID, for server-side apps-- and
when I say a server-side app

00:19:09.710 --> 00:19:12.990
in this context, I mean that
your server, your web server,

00:19:12.990 --> 00:19:17.260
is contacting Google
services directly.

00:19:17.260 --> 00:19:21.700
In a case like that, you want
the client ID and you want the

00:19:21.700 --> 00:19:24.600
developer key to be secret in
terms of it shouldn't be

00:19:24.600 --> 00:19:27.980
serverable by accident or
something like that.

00:19:27.980 --> 00:19:33.710
For apps where you're using a
Java script API or a GWT API,

00:19:33.710 --> 00:19:38.510
and basically the user's browser
is contacting Google

00:19:38.510 --> 00:19:41.310
services directly, then
obviously you can't have a

00:19:41.310 --> 00:19:42.570
secret anymore.

00:19:42.570 --> 00:19:45.040
The developer key you still
have to enter, but it's

00:19:45.040 --> 00:19:47.940
actually OK to put it out there
because it's tied to the

00:19:47.940 --> 00:19:49.050
serving site's domain.

00:19:49.050 --> 00:19:51.320
So it doesn't matter if
it's leaked to people.

00:19:51.320 --> 00:19:54.600
They can't use it.

00:19:54.600 --> 00:19:57.570
The one thing, just to go
back, that I mentioned.

00:19:57.570 --> 00:20:01.060
Let's use Buzz as an example.

00:20:01.060 --> 00:20:03.970
If your app is trying to display
Alice's Buzz post,

00:20:03.970 --> 00:20:07.010
what do you need to do in order
to actually display--

00:20:07.010 --> 00:20:10.950
you know, Google is the one that
has the Buzz data because

00:20:10.950 --> 00:20:13.180
it's a service that
Google provides.

00:20:13.180 --> 00:20:16.480
So at some point in the flow, if
your application is trying

00:20:16.480 --> 00:20:20.580
to display Alice's Buzz post,
Alice has to prove her

00:20:20.580 --> 00:20:24.110
identity to Google to say,
yes, I am indeed Alice.

00:20:24.110 --> 00:20:27.450
And then she has to go ahead and
say, OK, I am Alice, but I

00:20:27.450 --> 00:20:32.070
also give access to Bob's
application to display my Buzz

00:20:32.070 --> 00:20:33.660
information.

00:20:33.660 --> 00:20:36.570
So those two things
have to happen.

00:20:36.570 --> 00:20:40.830
The way this is done with
Google's APIs is they use

00:20:40.830 --> 00:20:42.190
OAuth basically.

00:20:42.190 --> 00:20:45.100
And this is an open standard
that's implemented by Google,

00:20:45.100 --> 00:20:47.640
Facebook, Twitter, a
number of others.

00:20:47.640 --> 00:20:50.630
And it's meant to handle the
problem of delegated

00:20:50.630 --> 00:20:52.450
authentication and
authorization.

00:20:52.450 --> 00:20:57.070
Meaning that I have an
application, I want to display

00:20:57.070 --> 00:20:59.810
information that another
user has stored

00:20:59.810 --> 00:21:01.060
on some other service.

00:21:01.060 --> 00:21:04.920
So at some point in using my
application I need to go talk

00:21:04.920 --> 00:21:07.820
to that other service, get some
token back from them, and

00:21:07.820 --> 00:21:10.090
then I can use it to talk
to the service and get

00:21:10.090 --> 00:21:12.060
information on behalf
of the user.

00:21:12.060 --> 00:21:15.950
So that's why in the end when
you're using an API like Buzz

00:21:15.950 --> 00:21:19.750
or gmail, you need to go
ahead and use OAuth.

00:21:19.750 --> 00:21:21.840
And you need a client ID
and a client secret.

00:21:21.840 --> 00:21:24.730
And if you go back here you
can see with this big blue

00:21:24.730 --> 00:21:26.660
button you can go through
that flow to do that.

00:21:26.660 --> 00:21:30.800
And it'll guide you in terms
of what you need to do.

00:21:30.800 --> 00:21:33.420
So not really specific to GPE
at this time, but it's just

00:21:33.420 --> 00:21:35.460
worth noting that if you're
using the Google APIs, these

00:21:35.460 --> 00:21:38.070
are things you do need to do.

00:21:38.070 --> 00:21:43.370
OK, so if you want some
information on APIs and OAuth,

00:21:43.370 --> 00:21:45.710
I've provided some links
here, like system talk.

00:21:45.710 --> 00:21:49.120
So there's identity and data
access, open ID in OAuth.

00:21:49.120 --> 00:21:51.695
That's already happened I think,
so I've given the short

00:21:51.695 --> 00:21:53.000
link to that.

00:21:53.000 --> 00:21:55.790
There's client login,
hashtag fail.

00:21:55.790 --> 00:21:57.810
A little negative, but
you'll find out

00:21:57.810 --> 00:21:58.790
why when you go there.

00:21:58.790 --> 00:22:01.720
And that's today, just
a little later on.

00:22:01.720 --> 00:22:04.290
And life of a Google API
developer as well.

00:22:06.840 --> 00:22:08.770
All right, so just to roll it
all up because we kind of

00:22:08.770 --> 00:22:10.190
jumped around with
a few things.

00:22:10.190 --> 00:22:13.370
Basically with a single click in
GPE, you can see a list of

00:22:13.370 --> 00:22:15.510
basically all the Google APIs
that are available to you to

00:22:15.510 --> 00:22:16.690
code against.

00:22:16.690 --> 00:22:18.340
With one more click, bringing
it down, you can

00:22:18.340 --> 00:22:19.730
code against the API.

00:22:19.730 --> 00:22:23.170
Though you didn't see it here,
you'll get push notifications

00:22:23.170 --> 00:22:25.080
that updates are available.

00:22:25.080 --> 00:22:27.370
And you can also
undo an update.

00:22:27.370 --> 00:22:28.080
So you can update.

00:22:28.080 --> 00:22:31.550
And if you find that it breaks
a bunch of things, like maybe

00:22:31.550 --> 00:22:34.370
the APIs changed and you don't
feel like changing all your

00:22:34.370 --> 00:22:36.040
code, you can just hit undo.

00:22:36.040 --> 00:22:38.330
And basically it's going to
undo the change, and it's

00:22:38.330 --> 00:22:39.760
going to bring back
the old API.

00:22:39.760 --> 00:22:41.330
We keep this data around.

00:22:41.330 --> 00:22:44.280
And finally, as I just noted,
make sure you use the API

00:22:44.280 --> 00:22:48.070
console to enable APIs and get
developer IDs and client IDs

00:22:48.070 --> 00:22:49.050
before you use them.

00:22:49.050 --> 00:22:54.530
Otherwise you'll be restricted
by the quotas that are set.

00:22:54.530 --> 00:22:56.590
OK, so let's go on
to App Engine.

00:22:56.590 --> 00:22:58.650
Deploying your project
to Google App Engine.

00:22:58.650 --> 00:23:00.460
So just a quick refresher
again.

00:23:00.460 --> 00:23:02.060
So what is App Engine?

00:23:02.060 --> 00:23:03.780
It's a cloud computing
platform.

00:23:03.780 --> 00:23:06.940
You can write a web app in Java
or Python and basically

00:23:06.940 --> 00:23:07.990
deploy it to the cloud.

00:23:07.990 --> 00:23:10.630
And it'll end up living at
basically whatever your app ID

00:23:10.630 --> 00:23:12.300
is .appspot.com.

00:23:12.300 --> 00:23:16.260
If you have Google apps and
custom domains, then the

00:23:16.260 --> 00:23:18.440
domain will be slightly
different.

00:23:18.440 --> 00:23:19.720
So what does it provide you?

00:23:19.720 --> 00:23:22.040
Basically it provides
you a heck of a lot.

00:23:22.040 --> 00:23:25.010
You can basically write a web
app, have the code there, and

00:23:25.010 --> 00:23:27.100
then that's all you
really need to do.

00:23:27.100 --> 00:23:30.100
We're giving you the hardware
connectivity, the JVM, the

00:23:30.100 --> 00:23:31.450
servlet container.

00:23:31.450 --> 00:23:33.100
You have automatic scaling.

00:23:33.100 --> 00:23:36.460
So as the traffic on your
application increases, more

00:23:36.460 --> 00:23:38.790
front ends are spun up,
basically, to handle the

00:23:38.790 --> 00:23:40.360
traffic and handle the load.

00:23:40.360 --> 00:23:42.110
There's also distributed
memory caching.

00:23:42.110 --> 00:23:45.170
So when you have front end
spinning up like this, one

00:23:45.170 --> 00:23:46.940
issue is that they're
not very stateful.

00:23:46.940 --> 00:23:50.630
Your lifetime is that of
basically a single request. So

00:23:50.630 --> 00:23:53.010
what if you want to keep some
information around and have

00:23:53.010 --> 00:23:55.580
another front end sort of know
about it, you can use Memcache

00:23:55.580 --> 00:23:57.710
or this distributed
memory caching.

00:23:57.710 --> 00:24:00.290
You've also got task queuing,
which lets you do all sorts of

00:24:00.290 --> 00:24:03.170
things like offline processing,
or just have

00:24:03.170 --> 00:24:04.920
another guy pick up
work that somebody

00:24:04.920 --> 00:24:06.130
else posts to a queue.

00:24:06.130 --> 00:24:09.030
So it's actually a really
cool platform.

00:24:09.030 --> 00:24:10.020
There's a lot you can do.

00:24:10.020 --> 00:24:12.890
And a lot has been added to it
in the past two years from

00:24:12.890 --> 00:24:15.090
when it was released.

00:24:15.090 --> 00:24:17.620
One thing you probably are
wondering about, security.

00:24:17.620 --> 00:24:19.650
Well your app is definitely
isolated from

00:24:19.650 --> 00:24:20.420
other running apps.

00:24:20.420 --> 00:24:24.520
It runs in a sandbox that
basically restricts access to

00:24:24.520 --> 00:24:25.820
the underlying OS.

00:24:25.820 --> 00:24:29.140
So you can't do bad things to
interfere with other apps.

00:24:29.140 --> 00:24:31.130
Certain JRE classes, if
you're using Java,

00:24:31.130 --> 00:24:32.630
are kind of off limits.

00:24:32.630 --> 00:24:36.590
So that you can't use certain
APIs that would affect the

00:24:36.590 --> 00:24:39.110
file system, or other things
like that that could possibly

00:24:39.110 --> 00:24:41.570
cause trouble.

00:24:41.570 --> 00:24:44.700
So deploying to Google App
Engine, now in GPE--

00:24:44.700 --> 00:24:47.360
this is not new-- you can deploy
to App Engine with a

00:24:47.360 --> 00:24:48.360
single click.

00:24:48.360 --> 00:24:52.190
But one cool thing is that with
App Engine 1.5.0., which

00:24:52.190 --> 00:24:55.560
was announced I think like an
hour ago, there's a concept of

00:24:55.560 --> 00:24:56.910
resident backends.

00:24:56.910 --> 00:24:59.970
Resident backends are kind of
cool because you basically

00:24:59.970 --> 00:25:01.400
have longer request deadlines.

00:25:01.400 --> 00:25:04.660
So the request cycle for-- it
could be a day if you wanted

00:25:04.660 --> 00:25:06.460
as opposed to 30 minutes.

00:25:06.460 --> 00:25:09.280
The in-memory state, so if
you have static finals or

00:25:09.280 --> 00:25:12.770
something like that, it can be
kept-- or not static finals,

00:25:12.770 --> 00:25:15.010
just static-- it can
be kept around.

00:25:15.010 --> 00:25:17.910
You don't have to worry about
it being purged after the

00:25:17.910 --> 00:25:20.060
request is done.

00:25:20.060 --> 00:25:21.870
Another really cool thing
is they're individually

00:25:21.870 --> 00:25:22.540
addressable.

00:25:22.540 --> 00:25:24.790
You can actually address a
backend just like as a

00:25:24.790 --> 00:25:27.390
straight-up server.

00:25:27.390 --> 00:25:29.390
I don't want to go all the way
into-- just because there's a

00:25:29.390 --> 00:25:33.000
lot to talk about-- but there
was an App Engine backend talk

00:25:33.000 --> 00:25:33.740
about an hour ago.

00:25:33.740 --> 00:25:34.970
I provided the link here.

00:25:34.970 --> 00:25:36.870
So you guys should check it
out if you're interested.

00:25:36.870 --> 00:25:39.870
But the really cool thing I
wanted to mention is deploying

00:25:39.870 --> 00:25:42.340
to backends is now
supported by GPE.

00:25:42.340 --> 00:25:45.800
So let me just show you that
here really quickly.

00:25:45.800 --> 00:25:49.320
So if I go back here
and we look the--

00:25:49.320 --> 00:25:50.700
there's a project called
Hello Server.

00:25:50.700 --> 00:25:51.980
This is basically one
of the demo projects

00:25:51.980 --> 00:25:53.110
that App Engine has.

00:25:53.110 --> 00:25:57.910
It's basically a pretty simple
App Engine project.

00:26:00.990 --> 00:26:04.330
And really, it looks very much
the same as any other App

00:26:04.330 --> 00:26:04.490
Engine project.

00:26:04.490 --> 00:26:08.210
The only difference here
is backends.xml.

00:26:08.210 --> 00:26:12.090
So in addition to App Engine Web
XML you have backends.xml.

00:26:12.090 --> 00:26:14.830
And what this is defining is
just three different backends.

00:26:14.830 --> 00:26:19.380
They're creatively named
small, medium and big.

00:26:19.380 --> 00:26:21.720
And there's different classes.

00:26:21.720 --> 00:26:24.420
Basically B1 means you can--

00:26:24.420 --> 00:26:26.810
different classes of backends
have different

00:26:26.810 --> 00:26:28.060
CPU and memory limits.

00:26:28.060 --> 00:26:31.610
So B1 is the smallest, and then
B4 is bigger, and then I

00:26:31.610 --> 00:26:33.320
think they have up to B8.

00:26:33.320 --> 00:26:35.560
You have other options like do
you want it to be publicly

00:26:35.560 --> 00:26:36.500
addressable.

00:26:36.500 --> 00:26:39.265
How many instances you want.

00:26:39.265 --> 00:26:40.620
So there's all sorts
of things.

00:26:40.620 --> 00:26:44.410
So now what you can do, you can
hit deploy up here-- just

00:26:44.410 --> 00:26:45.390
to zoom in up here--

00:26:45.390 --> 00:26:48.410
deploy to App Engine.

00:26:48.410 --> 00:26:50.660
And just zoom in here
a little bit.

00:26:50.660 --> 00:26:53.810
And what it's letting you choose
is, OK I noticed that

00:26:53.810 --> 00:26:54.900
this project has backends.

00:26:54.900 --> 00:26:56.820
Do you want to deploy the
frontend, do you want it to

00:26:56.820 --> 00:26:59.640
deploy the backend, or just
some subset thereof?

00:26:59.640 --> 00:27:07.010
And in this case we'll maybe
just deploy maybe to the small

00:27:07.010 --> 00:27:10.280
backend and the frontend
and just hit deploy.

00:27:10.280 --> 00:27:14.845
And you can just see how it's
going through the process.

00:27:14.845 --> 00:27:18.000
It's going to deploy things in
sequence because the sequence

00:27:18.000 --> 00:27:22.180
may be important, depending on
how you set up your backends.

00:27:22.180 --> 00:27:25.370
So yeah.

00:27:25.370 --> 00:27:30.220
We added support for this just
within the past couple weeks.

00:27:30.220 --> 00:27:36.430
One thing is if you go here,
just to show you, for example,

00:27:36.430 --> 00:27:37.270
the medium--

00:27:37.270 --> 00:27:40.610
I told you that the app is
kind of running here--

00:27:40.610 --> 00:27:41.860
at rdayal-test.appspot.com.

00:27:43.910 --> 00:27:47.590
But I did name a backend medium,
so I can just call

00:27:47.590 --> 00:27:51.970
this like medium.rdayal-test.
And it says it's the first

00:27:51.970 --> 00:27:54.350
instance because I had
multiple instances.

00:27:54.350 --> 00:27:57.180
I could also just address
the other instance.

00:27:57.180 --> 00:28:00.050
So that's what I meant by
individually addressable.

00:28:00.050 --> 00:28:02.730
I won't go into it too much, but
you can see that backends

00:28:02.730 --> 00:28:05.980
really are just like servers
that you can access.

00:28:11.120 --> 00:28:13.970
In terms of what's going
on there a little bit.

00:28:13.970 --> 00:28:17.240
So GPE, we're just using an API
provided by the App Engine

00:28:17.240 --> 00:28:18.660
SDK to upload the app.

00:28:18.660 --> 00:28:21.570
That's exactly what's
going on here.

00:28:21.570 --> 00:28:24.410
Notice that no
application-specific passwords

00:28:24.410 --> 00:28:26.200
were actually necessary.

00:28:26.200 --> 00:28:27.260
You may have heard--

00:28:27.260 --> 00:28:29.580
and this goes back to the
client login fail talk a

00:28:29.580 --> 00:28:30.320
little bit--

00:28:30.320 --> 00:28:33.330
that at some point we basically
had said, OK look,

00:28:33.330 --> 00:28:35.840
it's really insecure for you to
put in your full username

00:28:35.840 --> 00:28:39.250
and password to just deploy
something up to App Engine.

00:28:39.250 --> 00:28:43.180
So we want you to create an
application-specific password,

00:28:43.180 --> 00:28:45.550
which is a good thing.

00:28:45.550 --> 00:28:48.180
But the problem is they're
kind of one-time use.

00:28:48.180 --> 00:28:50.720
So they're sort of meant things
that store the password

00:28:50.720 --> 00:28:53.670
and reuse it over time, like
maybe your Android phone

00:28:53.670 --> 00:28:55.990
syncing and things like that.

00:28:55.990 --> 00:28:58.300
But the problem with GPE is
since we never saved your

00:28:58.300 --> 00:29:00.430
password, you would
have to enter this

00:29:00.430 --> 00:29:01.490
password every time.

00:29:01.490 --> 00:29:04.380
Or you'd have to go regenerate a
new one after using it once.

00:29:04.380 --> 00:29:08.070
So one thing that we did, if
you notice, because when I

00:29:08.070 --> 00:29:10.980
first logged in down here--

00:29:10.980 --> 00:29:12.230
let me just pull up
Eclipse here.

00:29:12.230 --> 00:29:13.420
Whoops.

00:29:13.420 --> 00:29:18.090
So when I first logged in down
here, you remember that it

00:29:18.090 --> 00:29:21.890
asked me for my App Engine--

00:29:21.890 --> 00:29:23.650
if I wanted to give it
access to App Engine.

00:29:23.650 --> 00:29:24.500
That's why.

00:29:24.500 --> 00:29:28.000
So now I can deploy to Google,
and I didn't have to enter my

00:29:28.000 --> 00:29:30.170
password again.

00:29:30.170 --> 00:29:34.180
And just a bit on backends.xml,
the way we use

00:29:34.180 --> 00:29:36.420
it is it just lets us know
that there's backends to

00:29:36.420 --> 00:29:39.080
deploy so that we can figure
out the right sequence to

00:29:39.080 --> 00:29:41.770
deploy them in and call
the API properly.

00:29:41.770 --> 00:29:43.930
That's really what we're
doing there.

00:29:43.930 --> 00:29:46.560
One thing I wanted to mention
is backends are-- you can

00:29:46.560 --> 00:29:48.130
manually start and stop them.

00:29:48.130 --> 00:29:49.410
I didn't mention that.

00:29:49.410 --> 00:29:51.760
But the deployment of a backend
through GPE will

00:29:51.760 --> 00:29:53.840
automatically start up
backend for you.

00:29:53.840 --> 00:29:55.520
Like will automatically
start them up so

00:29:55.520 --> 00:29:56.820
they're live and running.

00:29:56.820 --> 00:29:58.790
One thing to note, if you want
to use backends you have to be

00:29:58.790 --> 00:30:00.730
using App Engine 1.5.0.

00:30:00.730 --> 00:30:02.461
So that's one thing to note.

00:30:05.050 --> 00:30:08.160
So just a couple other things
about just general GWT and App

00:30:08.160 --> 00:30:10.730
Engine for-- maybe some of you
guys may know this if you're

00:30:10.730 --> 00:30:14.310
using GPE and GWT.

00:30:14.310 --> 00:30:17.410
If you're using GWT and App
Engine, and you do a

00:30:17.410 --> 00:30:20.250
deployment, the GWT compile is
going to happen automatically

00:30:20.250 --> 00:30:22.060
for you before you deploy.

00:30:22.060 --> 00:30:25.930
And we do checking to make sure
that recompilations--

00:30:25.930 --> 00:30:28.720
that we're not re-compiling
unless we absolutely need to.

00:30:28.720 --> 00:30:29.310
Things are dirty.

00:30:29.310 --> 00:30:30.230
So we do that.

00:30:30.230 --> 00:30:32.430
One thing to notice is
that ORM support--

00:30:32.430 --> 00:30:35.510
App Engine supports ORM, but
it's automatically on.

00:30:35.510 --> 00:30:37.340
We basically assume you're
going to be using it.

00:30:37.340 --> 00:30:40.150
If you're not going to be using
it, you can basically--

00:30:40.150 --> 00:30:42.910
there's a couple ways you can
do to speed things up a bit.

00:30:42.910 --> 00:30:44.240
Speed things up in
development time.

00:30:44.240 --> 00:30:47.590
You can exclude all of your code
from enhancement through

00:30:47.590 --> 00:30:49.970
the App Engine preferences
in GPE.

00:30:49.970 --> 00:30:52.770
Or you can totally disable the
enhancer builder and remove

00:30:52.770 --> 00:30:56.840
any of the ORM related jars from
WEB-INF/lib, so they're

00:30:56.840 --> 00:30:58.380
not uploaded when you deploy.

00:30:58.380 --> 00:31:02.830
So that's sort of another thing
you can do to sort of

00:31:02.830 --> 00:31:04.870
speed things up a bit.

00:31:04.870 --> 00:31:07.790
One other thing just to notice
is that GPE, like with a GWT

00:31:07.790 --> 00:31:11.530
and an App Engine project, it
doesn't distinguish between

00:31:11.530 --> 00:31:13.070
server-side and client-side
code.

00:31:13.070 --> 00:31:16.600
So in the end, you may be
getting aggressive validations

00:31:16.600 --> 00:31:19.800
that are happening.

00:31:19.800 --> 00:31:22.070
For example, the enhancer
builder may be trying to run

00:31:22.070 --> 00:31:23.035
over the client-side code.

00:31:23.035 --> 00:31:25.280
It finds nothing to enhance.

00:31:25.280 --> 00:31:28.060
But in the end it's kind of
running over that because it's

00:31:28.060 --> 00:31:30.660
not easy to distinguish between
client and server side

00:31:30.660 --> 00:31:32.910
code unless you have
a convention.

00:31:32.910 --> 00:31:35.640
Anyway, this is something that
we are planning to address,

00:31:35.640 --> 00:31:38.700
but I just wanted to call it
out there just in case you

00:31:38.700 --> 00:31:41.800
guys didn't know.

00:31:41.800 --> 00:31:43.200
So just a couple of
other things.

00:31:43.200 --> 00:31:46.910
I just wanted to talk
to, really quickly.

00:31:46.910 --> 00:31:50.410
Just a few quick bits here,
other cool features.

00:31:50.410 --> 00:31:52.660
So single sign on to
Google services.

00:31:52.660 --> 00:31:54.480
I kind of mentioned
that before.

00:31:54.480 --> 00:31:57.400
But if you're using App Engine,
and you're using

00:31:57.400 --> 00:32:02.660
Project Hosting, we're asking
for permission to do that.

00:32:02.660 --> 00:32:04.910
What we're doing is--

00:32:04.910 --> 00:32:07.000
this is how you can
manage your login.

00:32:07.000 --> 00:32:10.390
So I can sign out here
if I want to.

00:32:10.390 --> 00:32:14.760
And if I sign back in, you'll
notice that it didn't--

00:32:14.760 --> 00:32:17.200
this is actually one other thing
I wanted to mention.

00:32:17.200 --> 00:32:22.410
One thing is that when you're on
a Mac using Safari, because

00:32:22.410 --> 00:32:25.100
we're using the embedded
browser, it doesn't actually

00:32:25.100 --> 00:32:28.250
clear out your credentials
necessarily on a logout.

00:32:28.250 --> 00:32:30.490
So that's why it hasn't asked
me to re-sign in.

00:32:30.490 --> 00:32:33.850
You would have to sign out
technically up here.

00:32:33.850 --> 00:32:37.580
So let me just click
on that here.

00:32:37.580 --> 00:32:39.165
So if I sign in here--

00:32:49.210 --> 00:32:50.900
Whoops.

00:32:50.900 --> 00:32:52.538
I think I jumped to
the wrong page.

00:33:02.440 --> 00:33:03.130
That was odd.

00:33:03.130 --> 00:33:04.570
Anyway, I'm sorry.

00:33:04.570 --> 00:33:07.050
But anyway, the point is if you
sign in here-- we should

00:33:07.050 --> 00:33:11.460
probably look at that-- but
it's asking you about App

00:33:11.460 --> 00:33:14.490
Engine and Google Code in terms
of you want to give-- if

00:33:14.490 --> 00:33:18.910
we ever add any other services,
we can basically

00:33:18.910 --> 00:33:22.900
re-prompt you when you login
to ask you, oh, do you want

00:33:22.900 --> 00:33:23.820
access to--

00:33:23.820 --> 00:33:24.700
I don't know--

00:33:24.700 --> 00:33:26.120
some other thing like that.

00:33:26.120 --> 00:33:28.430
Just any other developer
service.

00:33:28.430 --> 00:33:30.430
What we're doing is we're
basically keeping a OAuth

00:33:30.430 --> 00:33:33.260
token that has access to
very specific scope.

00:33:33.260 --> 00:33:36.050
So it has access to App Engine
and Google Code, but it

00:33:36.050 --> 00:33:37.470
doesn't have access
to anything else.

00:33:37.470 --> 00:33:43.180
So it's safer for us to sort of
store it locally for you.

00:33:43.180 --> 00:33:44.920
So yeah, there's still the
chance it could be

00:33:44.920 --> 00:33:47.840
compromised, but if it's being
compromised, the thing about

00:33:47.840 --> 00:33:50.000
it is it really is only
a very limited set.

00:33:50.000 --> 00:33:51.220
It doesn't give people
access to your

00:33:51.220 --> 00:33:52.740
gmail or anything else.

00:33:52.740 --> 00:33:55.020
The other thing is you
can kind of revoke

00:33:55.020 --> 00:33:56.070
the credentials too.

00:33:56.070 --> 00:34:00.070
So this page that I got jumped
to here by some bug actually,

00:34:00.070 --> 00:34:03.370
but if you go to my account
in your normal--

00:34:09.909 --> 00:34:14.159
If I go to authorizing
applications and sites, you

00:34:14.159 --> 00:34:16.650
can see that it says Google
plugin for Eclipse.

00:34:16.650 --> 00:34:19.110
And what I can do is I
can revoke access.

00:34:19.110 --> 00:34:21.440
So if I revoke access like that,
it doesn't matter where

00:34:21.440 --> 00:34:22.120
that token is.

00:34:22.120 --> 00:34:23.770
It can't be used for
anything anymore.

00:34:23.770 --> 00:34:25.560
So that's kind of the
cool thing about

00:34:25.560 --> 00:34:27.380
using OAuth to do this.

00:34:27.380 --> 00:34:31.860
So we don't have to worry
anymore about where does the

00:34:31.860 --> 00:34:34.250
token live, what if
someone takes it.

00:34:34.250 --> 00:34:35.704
You can revoke it from
wherever you are.

00:34:40.170 --> 00:34:44.440
Another thing that's kind of
cool is that RPC tooling has

00:34:44.440 --> 00:34:48.460
been added in GPE for the
Google Web Toolkit.

00:34:48.460 --> 00:34:50.820
So just to tell you in three
seconds what the Google Web

00:34:50.820 --> 00:34:52.210
Toolkit is.

00:34:52.210 --> 00:34:55.670
It lets you develop and debug
your app in Java.

00:34:55.670 --> 00:34:58.860
So you get all the benefits of
building an app in Java,

00:34:58.860 --> 00:35:00.860
autocompletion, re-factoring.

00:35:00.860 --> 00:35:04.690
It's a great debugging
experience, the great tooling.

00:35:04.690 --> 00:35:08.620
Then you can cross-compile it
into Java script and HTML.

00:35:08.620 --> 00:35:11.570
And then you can deploy it to
wherever you want on the web.

00:35:11.570 --> 00:35:15.490
So the thing is GWT generally
deals with is mainly focused

00:35:15.490 --> 00:35:17.330
on the client-side of things.

00:35:17.330 --> 00:35:18.830
It's a client-side technology.

00:35:18.830 --> 00:35:21.790
But it has both high level and
low level abstractions for

00:35:21.790 --> 00:35:22.890
dealing with RPC.

00:35:22.890 --> 00:35:25.020
You know, getting things back
over to the server.

00:35:25.020 --> 00:35:27.390
So there's traditional GWT RPC,
which would do exactly

00:35:27.390 --> 00:35:28.140
what you would expect.

00:35:28.140 --> 00:35:30.460
You would call a certain
method on the server.

00:35:30.460 --> 00:35:32.690
You'd pass some data there.

00:35:32.690 --> 00:35:34.990
It would get executed.

00:35:34.990 --> 00:35:37.440
And you'd get a response back.

00:35:37.440 --> 00:35:40.990
So that's kind of the primary
RPC mechanism.

00:35:40.990 --> 00:35:43.800
But there's also RequestFactory
as well.

00:35:43.800 --> 00:35:47.010
RequestFactory is something
that was added in GWT 2.1.

00:35:47.010 --> 00:35:50.430
It's sort of a higher level
abstraction over RPC.

00:35:50.430 --> 00:35:55.300
Instead of having it
service-oriented, as in I want

00:35:55.300 --> 00:35:58.060
to do this specific action or
call this specific method,

00:35:58.060 --> 00:35:59.670
it's more data-oriented.

00:35:59.670 --> 00:36:03.680
So most enterprise applications
have this idea of

00:36:03.680 --> 00:36:05.030
just data entities.

00:36:05.030 --> 00:36:06.440
All of them kind of do.

00:36:06.440 --> 00:36:10.580
And what RequestFactory does is
builds the RPC around the

00:36:10.580 --> 00:36:12.280
idea of the entity.

00:36:12.280 --> 00:36:16.240
So it's more data-centric
instead of service-centric.

00:36:16.240 --> 00:36:19.120
It also helps to address
the DAO problem.

00:36:19.120 --> 00:36:23.610
It doesn't solve it, but at
least it automates some of the

00:36:23.610 --> 00:36:28.770
whole conversion from a
server-side entity to the DAO,

00:36:28.770 --> 00:36:31.680
marshaling it, coming back on
the other side, unmarshaling

00:36:31.680 --> 00:36:34.180
it and then putting it
in your client model.

00:36:34.180 --> 00:36:37.160
So it helps a lot with that.

00:36:37.160 --> 00:36:40.660
The client data access layer
is easily derived from the

00:36:40.660 --> 00:36:41.470
server layer.

00:36:41.470 --> 00:36:45.620
So it's not just two very
foreign layers.

00:36:45.620 --> 00:36:47.470
There's actually a lot of
similarities between them,

00:36:47.470 --> 00:36:48.580
which is helpful.

00:36:48.580 --> 00:36:51.660
And a really cool thing is that
it's kind of intelligent.

00:36:51.660 --> 00:36:54.620
Only the smallest possible
payloads are

00:36:54.620 --> 00:36:55.470
sent over the wire.

00:36:55.470 --> 00:36:58.410
Only deltas of modified entities
are sent over.

00:36:58.410 --> 00:37:02.740
So even if you request, hey, I
want rows 30 to 40, and you've

00:37:02.740 --> 00:37:05.780
already requested rows 20 to 60,
then you're not going to

00:37:05.780 --> 00:37:08.530
end up re-requesting rows.

00:37:08.530 --> 00:37:10.560
You can request them, but
they're already there, so the

00:37:10.560 --> 00:37:11.660
request won't happen again.

00:37:11.660 --> 00:37:12.630
You don't have to manage
that for you.

00:37:12.630 --> 00:37:14.300
Your RequestFactory does.

00:37:14.300 --> 00:37:15.790
And actually it's
even smarter.

00:37:15.790 --> 00:37:18.370
Only deltas of the modified
entities are sent over the

00:37:18.370 --> 00:37:20.820
wire-- not even the whole
entire entity.

00:37:20.820 --> 00:37:23.840
So it's got some pretty
smart stuff in there.

00:37:23.840 --> 00:37:29.240
So just to show you
here, actually, in

00:37:29.240 --> 00:37:31.246
terms of how this works--

00:37:31.246 --> 00:37:33.110
let's just drop into
GPE for a second.

00:37:33.110 --> 00:37:37.880
And I've got this project
here called Cloud Tasks.

00:37:37.880 --> 00:37:43.180
And in Cloud Tasks, there's
an entity here basically.

00:37:43.180 --> 00:37:46.450
This entity is a JPA entity.

00:37:46.450 --> 00:37:47.600
It's very standard.

00:37:47.600 --> 00:37:49.345
It's got tasks.

00:37:49.345 --> 00:37:52.300
And then you've got name,
notes, due date.

00:37:52.300 --> 00:37:54.990
You have some getters
and setters.

00:37:54.990 --> 00:37:59.760
What you can do is you can say,
hey, I want to go ahead

00:37:59.760 --> 00:38:04.580
and generate an RPC
service from this.

00:38:04.580 --> 00:38:05.310
Go to next here.

00:38:05.310 --> 00:38:07.670
And it says, OK, what do you
want to call this RPC service?

00:38:07.670 --> 00:38:09.280
I'll call it CloudTaskService.

00:38:09.280 --> 00:38:11.950
And I'm going to select the task
entity since that's the

00:38:11.950 --> 00:38:13.480
one I have. The only
one in my project.

00:38:13.480 --> 00:38:16.780
And I'll hit finish here.

00:38:16.780 --> 00:38:17.910
So what happened there?

00:38:17.910 --> 00:38:22.360
It basically generated a
bunch of code for me.

00:38:22.360 --> 00:38:25.260
So let's go through and
just take a look at

00:38:25.260 --> 00:38:26.060
what we've got here.

00:38:26.060 --> 00:38:27.070
So here's still the entity.

00:38:27.070 --> 00:38:28.250
That's unchanged.

00:38:28.250 --> 00:38:32.050
But you've also basically
got what's called a--

00:38:32.050 --> 00:38:35.500
if you look in the shared
folder down here--

00:38:35.500 --> 00:38:39.460
you basically have the
proxy for tasks.

00:38:39.460 --> 00:38:41.760
I'm going a little faster with
the terminology because I'm

00:38:41.760 --> 00:38:43.630
not trying to dive really,
really deep into

00:38:43.630 --> 00:38:45.250
RequestFactory, and
how it works.

00:38:45.250 --> 00:38:46.700
There's a total other
talk on that.

00:38:46.700 --> 00:38:48.850
But I just wanted to point these
things out to you so

00:38:48.850 --> 00:38:51.230
when you do use RequestFactory,
you can see

00:38:51.230 --> 00:38:53.480
that all the bits are
generated for you.

00:38:53.480 --> 00:38:56.440
Basically you've got the proxy,
which is essentially

00:38:56.440 --> 00:39:01.340
what you need to map the entity
on the client-side.

00:39:01.340 --> 00:39:03.850
And then you've got
the interface, the

00:39:03.850 --> 00:39:07.400
CloudTaskRequestFactory that
actually defines the interface

00:39:07.400 --> 00:39:08.850
between the client
and the server.

00:39:08.850 --> 00:39:11.625
And you've got the request
that's got create task, read

00:39:11.625 --> 00:39:13.160
task, update task.

00:39:13.160 --> 00:39:16.120
You've got the service name on
the server-side like what is

00:39:16.120 --> 00:39:18.340
the service that actually
implements this.

00:39:18.340 --> 00:39:22.180
And if you go under, let's
see, Cloud Task Server.

00:39:22.180 --> 00:39:23.820
We've got CloudTaskService
here.

00:39:23.820 --> 00:39:25.530
These are stubs because
obviously we don't know what

00:39:25.530 --> 00:39:28.340
you want to do with them, but
we've generated the code.

00:39:28.340 --> 00:39:29.760
And you've even got a locator.

00:39:29.760 --> 00:39:33.560
So this is just about how do
you actually go ahead and

00:39:33.560 --> 00:39:37.050
locate a certain entity
given an ID.

00:39:37.050 --> 00:39:40.760
You've got a whole lot of--

00:39:40.760 --> 00:39:43.670
RequestFactory is powerful,
but there are basically a

00:39:43.670 --> 00:39:45.670
whole lot of different pieces.

00:39:45.670 --> 00:39:49.900
There's an entity proxy, a
locator, a RequestFactory

00:39:49.900 --> 00:39:52.810
interface, a service stub, like
a server-side skeleton

00:39:52.810 --> 00:39:53.750
implementation.

00:39:53.750 --> 00:39:55.660
You've got all of these pieces,
and you would normally

00:39:55.660 --> 00:40:00.420
have to write them by hand, but
with GPE in just a couple

00:40:00.420 --> 00:40:02.910
of clicks, everything
gets generated for

00:40:02.910 --> 00:40:05.290
you, which is great.

00:40:05.290 --> 00:40:07.790
Actually I'd recommend that you
check out-- it's already

00:40:07.790 --> 00:40:09.350
happened, but you should
check out the

00:40:09.350 --> 00:40:11.420
session later on video.

00:40:11.420 --> 00:40:13.890
It's a highly productive GWT
talk if you're interested in

00:40:13.890 --> 00:40:19.330
learning more about
RequestFactory and everything.

00:40:19.330 --> 00:40:21.870
OK, let's just wrap up here.

00:40:21.870 --> 00:40:24.440
So basically just wanted to--
a few things that we covered

00:40:24.440 --> 00:40:28.270
just to highlight what
we went through here.

00:40:28.270 --> 00:40:31.300
Or at least I hope that
I went through here.

00:40:31.300 --> 00:40:34.550
But GPE makes it easy for
developers to leverage

00:40:34.550 --> 00:40:36.220
Google's Cloud.

00:40:36.220 --> 00:40:39.130
Google Project Hosting, Google
APIs and App Engine are just

00:40:39.130 --> 00:40:41.840
very easy to use from the Google
plugin for Eclipse.

00:40:41.840 --> 00:40:45.950
You saw that it's just really
a few clicks away.

00:40:45.950 --> 00:40:47.350
The single sign on
functionality.

00:40:47.350 --> 00:40:48.510
So there was a bug what that.

00:40:48.510 --> 00:40:49.870
And we'll fix it.

00:40:49.870 --> 00:40:52.930
It lets you manage
your credentials.

00:40:52.930 --> 00:40:55.630
You can go ahead, and you can
manage them how you want.

00:40:55.630 --> 00:40:57.610
You can manage them from the
Google accounts page.

00:40:57.610 --> 00:40:59.870
So you don't have to worry about
us keeping credentials

00:40:59.870 --> 00:41:03.260
around that you never can
take away or revoke.

00:41:03.260 --> 00:41:05.410
Just whenever we add new
services, all that's going to

00:41:05.410 --> 00:41:08.470
happen is we're just going to
say, OK, we know you already

00:41:08.470 --> 00:41:11.800
have credentials, but we want to
give you access to be able

00:41:11.800 --> 00:41:14.530
to-- or GPE wants to be able to
access this new service on

00:41:14.530 --> 00:41:15.290
behalf of you.

00:41:15.290 --> 00:41:16.400
Do you want to let us do that?

00:41:16.400 --> 00:41:18.380
And you just have to grant
access or not.

00:41:18.380 --> 00:41:19.810
That's all you need to do.

00:41:19.810 --> 00:41:22.540
So it's a really easy onramp
for future Google service

00:41:22.540 --> 00:41:23.570
integration.

00:41:23.570 --> 00:41:26.680
And GPE 2.4 beta, which is kind
of what I was talking

00:41:26.680 --> 00:41:30.480
about, it's a really good onramp
for things, like new

00:41:30.480 --> 00:41:32.420
features in GWT and App Engine
that are actually pretty

00:41:32.420 --> 00:41:34.710
powerful for building larger
scale apps, such as

00:41:34.710 --> 00:41:37.590
RequestFactory, and using
App Engine backends.

00:41:37.590 --> 00:41:41.590
They're newer features, but
we do support them.

00:41:41.590 --> 00:41:42.740
Anyway, thanks a lot
for your time.

00:41:42.740 --> 00:41:44.610
I appreciate you coming.

00:41:44.610 --> 00:41:46.710
Go ahead and try the
GPE 2.4 beta.

00:41:46.710 --> 00:41:49.110
This is where you can go get
the update site links.

00:41:49.110 --> 00:41:52.510
And please provide any session
feedback if you can.

00:41:52.510 --> 00:41:54.200
That would be great.

00:41:54.200 --> 00:41:58.730
We've got time for for Q&amp;A
if there's any questions.

00:41:58.730 --> 00:41:59.980
[APPLAUSE]

00:42:05.720 --> 00:42:06.670
RAJEEV DAYAL: Thanks.

00:42:06.670 --> 00:42:11.750
I had a question about last year
in Google I/O, there was

00:42:11.750 --> 00:42:17.400
a lot of talk about the
integration between GPE and

00:42:17.400 --> 00:42:19.370
the Spring toolkit project.

00:42:19.370 --> 00:42:22.030
And I was wondering what
ever happened to that?

00:42:22.030 --> 00:42:25.330
RAJEEV DAYAL: The integration
between GPE and SpringSource?

00:42:25.330 --> 00:42:26.500
Yeah, in the SpringSource.

00:42:26.500 --> 00:42:26.890
RAJEEV DAYAL: Yeah.

00:42:26.890 --> 00:42:33.420
So basically it's
still out there.

00:42:33.420 --> 00:42:35.530
We haven't actually committed
to any new

00:42:35.530 --> 00:42:37.430
features as yet on that.

00:42:37.430 --> 00:42:41.180
But that partnership still
does exist in terms of we

00:42:41.180 --> 00:42:46.040
still are supporting Roo
generated GWT app and using

00:42:46.040 --> 00:42:49.230
GPE in the SpringSource
tool suite.

00:42:49.230 --> 00:42:51.050
So we still have the
partnership, but we haven't

00:42:51.050 --> 00:42:53.190
committed to any new features
at this time.

00:42:53.190 --> 00:42:55.580
OK, because last time, a couple
of months back when I

00:42:55.580 --> 00:42:57.610
tried it, it didn't look like
ready for prime time.

00:42:57.610 --> 00:43:00.600
So I was wondering whether it
was abandoned or still moving

00:43:00.600 --> 00:43:03.060
forward, that particular
aspect.

00:43:03.060 --> 00:43:04.120
RAJEEV DAYAL: Sorry, can
you repeat the last

00:43:04.120 --> 00:43:05.310
part one more time?

00:43:05.310 --> 00:43:08.440
When I tried it a couple of
months back, it didn't look

00:43:08.440 --> 00:43:10.860
like it was ready
for prime time.

00:43:10.860 --> 00:43:13.985
It wasn't working that well,
at least in my experience.

00:43:13.985 --> 00:43:16.650
So I was curious where, because
we are adding so many

00:43:16.650 --> 00:43:18.990
features in GPE, whatever
was happening to that.

00:43:18.990 --> 00:43:21.820
Because Spring is one of the
most popular dependency

00:43:21.820 --> 00:43:24.920
injection framework in the
enterprise Java world.

00:43:24.920 --> 00:43:27.190
And if you are looking at
deploying your Java app to

00:43:27.190 --> 00:43:30.360
Google App Engine, many
developers like me would look

00:43:30.360 --> 00:43:32.270
at, oh, can I use Spring?

00:43:32.270 --> 00:43:35.380
And that project looked
very promising.

00:43:35.380 --> 00:43:38.250
But I don't hear anything
new about it

00:43:38.250 --> 00:43:39.770
so I was just curious.

00:43:39.770 --> 00:43:40.240
RAJEEV DAYAL: No, no.

00:43:40.240 --> 00:43:41.570
It's a fair point.

00:43:41.570 --> 00:43:42.620
It's a fair point.

00:43:42.620 --> 00:43:47.150
And it's probably something we
need to talk about more about

00:43:47.150 --> 00:43:49.400
what the future of
that actually is.

00:43:49.400 --> 00:43:51.310
I'm sorry I don't have more
information for you though.

00:43:51.310 --> 00:43:51.761
OK.

00:43:51.761 --> 00:43:52.212
OK.

00:43:52.212 --> 00:43:53.462
Thanks.

00:43:55.820 --> 00:43:56.780
Hi.

00:43:56.780 --> 00:44:00.130
I'm a relatively new user of the
Google plugin for Eclipse,

00:44:00.130 --> 00:44:02.320
and I was using it last
night at my hotel.

00:44:02.320 --> 00:44:05.100
And my internet connection went
down while I was trying

00:44:05.100 --> 00:44:06.730
to deploy my app.

00:44:06.730 --> 00:44:09.080
And then the plugin for Eclipse
popped up a little

00:44:09.080 --> 00:44:11.360
dialogue and said, you need to
run a command line utility

00:44:11.360 --> 00:44:16.570
adding app config rollback
to basically rollback the

00:44:16.570 --> 00:44:18.150
half-submitted changes.

00:44:18.150 --> 00:44:20.070
Are you planning on integrating
the rollback

00:44:20.070 --> 00:44:22.680
functionality into the
plugin at some point?

00:44:22.680 --> 00:44:23.110
RAJEEV DAYAL: Yeah.

00:44:23.110 --> 00:44:26.160
I think we are.

00:44:26.160 --> 00:44:27.050
We are actually.

00:44:27.050 --> 00:44:29.130
We just have never exposed it.

00:44:29.130 --> 00:44:35.180
But I mean there's really
nothing stopping us from doing

00:44:35.180 --> 00:44:37.770
an automatic rollback in those
situations, especially if we

00:44:37.770 --> 00:44:39.220
know that that's
a notification.

00:44:39.220 --> 00:44:41.050
I think it's just something
we haven't done yet.

00:44:41.050 --> 00:44:42.150
But sure, yeah.

00:44:42.150 --> 00:44:43.860
That would not be
that hard to do.

00:44:43.860 --> 00:44:44.640
Thanks.

00:44:44.640 --> 00:44:46.120
RAJEEV DAYAL: Actually,
please file a--

00:44:46.120 --> 00:44:48.120
I have another slide
here actually--

00:44:48.120 --> 00:44:49.090
so if you look at the talk.

00:44:49.090 --> 00:44:53.630
But yeah, please file a feature
request for it.

00:44:53.630 --> 00:44:54.880
Thank you.

00:44:56.810 --> 00:44:57.590
Quick question.

00:44:57.590 --> 00:44:58.150
RAJEEV DAYAL: Sure.

00:44:58.150 --> 00:45:02.830
I use 2.3 GPE, and I tried
the API library that

00:45:02.830 --> 00:45:05.220
was available there.

00:45:05.220 --> 00:45:08.260
In 2.4 does it support
uninstalling the API library

00:45:08.260 --> 00:45:09.290
in case you--

00:45:09.290 --> 00:45:09.970
I didn't see the ability
to do that.

00:45:09.970 --> 00:45:12.410
RAJEEV DAYAL: Yes,
yes, it does.

00:45:12.410 --> 00:45:13.910
What you can do basically--

00:45:13.910 --> 00:45:15.750
I could rip out everything
from [UNINTELLIGIBLE].

00:45:15.750 --> 00:45:18.020
RAJEEV DAYAL: If you just say
remove from build path of the

00:45:18.020 --> 00:45:20.470
classpath container, that'll
basically effectively

00:45:20.470 --> 00:45:20.800
uninstall it.

00:45:20.800 --> 00:45:21.320
Fair enough.

00:45:21.320 --> 00:45:22.570
OK, thanks.

00:45:24.790 --> 00:45:26.010
Hi.

00:45:26.010 --> 00:45:27.370
I've got two questions.

00:45:27.370 --> 00:45:32.560
One is you can only import
your own projects.

00:45:32.560 --> 00:45:34.120
I mean sometimes I
find somebody--

00:45:34.120 --> 00:45:37.050
I go to code.google.com
and find some project.

00:45:37.050 --> 00:45:38.960
And I just want to check it out
just to kind of play with

00:45:38.960 --> 00:45:39.850
it for a little bit.

00:45:39.850 --> 00:45:44.780
And it'd be nice maybe if it
were possible for me to check

00:45:44.780 --> 00:45:47.580
that out somehow, some way,
even if it is just in

00:45:47.580 --> 00:45:50.060
read-only mode without commit.

00:45:50.060 --> 00:45:51.360
RAJEEV DAYAL: Yeah, no
we totally agree.

00:45:51.360 --> 00:45:54.820
I think it's just we need to add
a couple more hooks into

00:45:54.820 --> 00:45:58.400
the Project Hosting API,
but that definitely is

00:45:58.400 --> 00:45:59.400
something we can do.

00:45:59.400 --> 00:46:00.410
OK.

00:46:00.410 --> 00:46:03.260
And then my other thought is,
or my other question I guess

00:46:03.260 --> 00:46:09.080
is, when you add a Google API,
if you use Maven or we use

00:46:09.080 --> 00:46:14.340
Ivy, is there a way to have
those libraries pulled into

00:46:14.340 --> 00:46:16.040
the Maven build or
the Ivy build?

00:46:19.170 --> 00:46:19.870
RAJEEV DAYAL: Not yet.

00:46:19.870 --> 00:46:20.890
So first of all, no.

00:46:20.890 --> 00:46:21.580
Not yet.

00:46:21.580 --> 00:46:26.630
But what we're trying to do is
we want to add a feature so

00:46:26.630 --> 00:46:29.830
that when you do go and have
that list, and you add a

00:46:29.830 --> 00:46:32.710
Google API on a Maven project,
it basically adds the right

00:46:32.710 --> 00:46:35.120
dependencies in the palm
pointing to the right place.

00:46:35.120 --> 00:46:40.450
So that's something that we want
to do in the near future.

00:46:40.450 --> 00:46:42.850
Well and for that matter, I'll
use Ivy instead of Maven

00:46:42.850 --> 00:46:46.450
because I don't like Maven.

00:46:46.450 --> 00:46:50.260
And I've noticed that the Google
plugin for Eclipse

00:46:50.260 --> 00:46:54.830
doesn't always like using the
Ivy container, the Ivy DE.

00:46:54.830 --> 00:46:56.510
I don't know if that's ever
been something you've ever

00:46:56.510 --> 00:46:57.320
looked at before.

00:46:57.320 --> 00:46:59.250
RAJEEV DAYAL: We haven't
actually done--

00:46:59.250 --> 00:47:02.760
as Maven support was sort of
newer for us in the past year.

00:47:02.760 --> 00:47:05.140
We actually haven't taking a
deep look at Ivy as yet.

00:47:05.140 --> 00:47:07.040
I'll be honest with you.

