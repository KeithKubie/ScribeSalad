WEBVTT
Kind: captions
Language: en

00:00:00.820 --> 00:00:02.480
ERIC SEIDEL: I
think we're ready.

00:00:02.480 --> 00:00:05.320
So I believe I'm the caboose
on this Dart summit excitement

00:00:05.320 --> 00:00:07.720
train.

00:00:07.720 --> 00:00:09.890
My name is Eric Seidel,
I'm here to talk to you

00:00:09.890 --> 00:00:14.000
about Sky, which is a
experimental project going on

00:00:14.000 --> 00:00:14.750
at the moment.

00:00:14.750 --> 00:00:16.333
But I could talk to
you all about Sky,

00:00:16.333 --> 00:00:18.540
I'd rather show you Sky.

00:00:18.540 --> 00:00:21.590
So for today, I built a demo and
I published on the Android Play

00:00:21.590 --> 00:00:22.460
Store.

00:00:22.460 --> 00:00:25.530
It's available, Sky demo,
you can download it.

00:00:25.530 --> 00:00:29.760
Give me a second while it
warms up on this new device.

00:00:29.760 --> 00:00:32.562
So what you see here-- whoops.

00:00:32.562 --> 00:00:33.520
I got to hit input two.

00:00:38.310 --> 00:00:39.160
What you see here.

00:00:42.370 --> 00:00:45.342
See, this is exciting
mobile live demos.

00:00:45.342 --> 00:00:47.300
It's too bright, and it's
blown out the screen.

00:00:51.350 --> 00:00:54.200
There we go.

00:00:54.200 --> 00:00:59.295
Much better What you see here
doesn't look super exciting.

00:00:59.295 --> 00:01:04.366
The exciting part is that
there is no Java drawing this.

00:01:04.366 --> 00:01:05.940
This is drawn by Dart.

00:01:05.940 --> 00:01:08.790
[APPLAUSE]

00:01:11.615 --> 00:01:12.990
I'll show you the
very first demo

00:01:12.990 --> 00:01:16.820
that we brought up in this
harness and get to the point.

00:01:16.820 --> 00:01:20.480
This is just a square spinning,
but driving this device

00:01:20.480 --> 00:01:22.700
at 60 Hertz from Dart.

00:01:22.700 --> 00:01:24.330
And that is one
of the first goals

00:01:24.330 --> 00:01:27.430
the we had for the system,
was to be fast and responsive.

00:01:30.100 --> 00:01:32.020
We want to go way
fast 60 Hz, but that's

00:01:32.020 --> 00:01:33.740
what this device can do.

00:01:33.740 --> 00:01:36.070
Another demo that
we brought up early

00:01:36.070 --> 00:01:38.530
is this touch demo, which
shows our integration

00:01:38.530 --> 00:01:42.150
with the underlying Android,
shows pressure sensitivity,

00:01:42.150 --> 00:01:44.530
does multi-touch
sticks to my finger

00:01:44.530 --> 00:01:50.370
while the device
does too, et cetera.

00:01:50.370 --> 00:01:55.130
And an even more recent
demo is this sucker.

00:01:55.130 --> 00:01:57.350
This is all loaded down off
the network, by the way.

00:01:57.350 --> 00:02:00.060
This is Dart code
running off the network.

00:02:00.060 --> 00:02:04.400
Which shows us scrolling at 60
Hz, not so good on the camera.

00:02:04.400 --> 00:02:06.810
Shows drawers.

00:02:06.810 --> 00:02:08.560
Again, you can try
this on your own phone,

00:02:08.560 --> 00:02:09.820
and you could feel it.

00:02:09.820 --> 00:02:14.000
It feels much smoother than
the camera can display.

00:02:14.000 --> 00:02:16.690
Integrated Android keyboard
including the voice keyboard,

00:02:16.690 --> 00:02:17.970
if you're so inclined.

00:02:17.970 --> 00:02:24.590
It's got menus,
buttons, splashes.

00:02:24.590 --> 00:02:28.520
All the things you would
expect of a UI framework.

00:02:28.520 --> 00:02:30.830
So that's demos.

00:02:30.830 --> 00:02:34.540
Let's go back to the
magical video one.

00:02:40.825 --> 00:02:41.325
Oh man.

00:02:44.810 --> 00:02:47.330
Now I guess I get to
change my password.

00:02:47.330 --> 00:02:53.380
So this is what we're
talking about today.

00:02:53.380 --> 00:02:55.980
This is the Sky architecture.

00:02:55.980 --> 00:03:00.090
So here, all the green stuff,
which sort of looks green

00:03:00.090 --> 00:03:01.210
is Dart code.

00:03:01.210 --> 00:03:04.140
And all the gray, or purple
as it looks on this display,

00:03:04.140 --> 00:03:06.300
is other languages.

00:03:06.300 --> 00:03:08.570
So here, Your UI
is written in Dart,

00:03:08.570 --> 00:03:10.550
along with any
Dart-related business logic

00:03:10.550 --> 00:03:12.980
that you may or may not
have, and the Sky framework.

00:03:12.980 --> 00:03:14.479
The sky framework
and the Sky engine

00:03:14.479 --> 00:03:16.610
are what we're going to
be talking about today.

00:03:16.610 --> 00:03:19.530
And then we have this cross
language messaging system

00:03:19.530 --> 00:03:23.200
which is basically Chrome's
messaging system distilled

00:03:23.200 --> 00:03:23.810
down.

00:03:23.810 --> 00:03:25.440
It's called Mojo.

00:03:25.440 --> 00:03:29.350
Distilled down for doing
fast cross process,

00:03:29.350 --> 00:03:33.420
cross language messaging to any
native APIs that are available

00:03:33.420 --> 00:03:36.890
on the system, and any business
logic you might have in other

00:03:36.890 --> 00:03:39.840
languages, be it C#,
Objective C, whatever you got.

00:03:42.840 --> 00:03:45.100
So what are we doing here?

00:03:45.100 --> 00:03:47.830
We'll Sky is here all
about providing a better

00:03:47.830 --> 00:03:49.220
mobile experience.

00:03:49.220 --> 00:03:51.630
A better experience for
users, a better experience

00:03:51.630 --> 00:03:53.090
for developers.

00:03:53.090 --> 00:03:56.590
We are here to take the
lessons many of my team

00:03:56.590 --> 00:03:58.980
will work on the web
for over a decade.

00:03:58.980 --> 00:04:01.719
And we're here to take the
lessons from working on the web

00:04:01.719 --> 00:04:03.510
and try and do something
better for mobile.

00:04:03.510 --> 00:04:06.160
Because we look around at the
current development options,

00:04:06.160 --> 00:04:09.550
and just believe we
could do a lot better.

00:04:09.550 --> 00:04:11.140
So what are our goals?

00:04:11.140 --> 00:04:14.000
Well, our first
goal is performance.

00:04:14.000 --> 00:04:15.960
When we set out to
do this, we came

00:04:15.960 --> 00:04:19.110
from years of trying to make
the mobile web work better,

00:04:19.110 --> 00:04:21.290
and the number one complaint
we got from developers

00:04:21.290 --> 00:04:22.649
is it's just not fast enough.

00:04:22.649 --> 00:04:24.190
It doesn't stick to
my user's finger,

00:04:24.190 --> 00:04:27.160
it doesn't feel like a
mobile-expected app should

00:04:27.160 --> 00:04:28.170
feel.

00:04:28.170 --> 00:04:31.420
So we're here to do performance,
high performance in Sky.

00:04:31.420 --> 00:04:34.920
We also believe in
being platform agnostic.

00:04:34.920 --> 00:04:37.400
The previous versions
of this engine,

00:04:37.400 --> 00:04:39.410
called Blink,
called webkit, have

00:04:39.410 --> 00:04:41.550
been ported to every
platform under the sun.

00:04:41.550 --> 00:04:45.204
And Sky maintains that same
level of portability in its C++

00:04:45.204 --> 00:04:46.620
code, as well as,
of course, Dart,

00:04:46.620 --> 00:04:50.430
which runs anywhere
that Dart VM can run.

00:04:50.430 --> 00:04:53.842
sky offers no opinion as
to what you can or can't

00:04:53.842 --> 00:04:54.550
do with your app.

00:04:54.550 --> 00:04:58.520
Anything the OS lets you do,
Sky is there to help you.

00:04:58.520 --> 00:05:01.690
Again, through those
Mojo IPC layer.

00:05:01.690 --> 00:05:03.790
We believe that the
current development

00:05:03.790 --> 00:05:08.940
cycles of recompile,
reinstall, reoptimize

00:05:08.940 --> 00:05:12.020
was far superior
in web browsers.

00:05:12.020 --> 00:05:15.680
And so we have taken a
page out of that book,

00:05:15.680 --> 00:05:20.070
and built another edit
refresh cycle for Sky as well.

00:05:20.070 --> 00:05:23.210
We believe in network first.

00:05:23.210 --> 00:05:25.672
One of the powers of
web-based development

00:05:25.672 --> 00:05:27.630
is that you can deploy
once, and all your users

00:05:27.630 --> 00:05:29.970
have the same version
of your app right away.

00:05:29.970 --> 00:05:32.530
Or you could do AB testing.

00:05:32.530 --> 00:05:35.500
Things that mobile
is just getting to.

00:05:35.500 --> 00:05:38.570
We have the URLs at the
base layer of our system.

00:05:38.570 --> 00:05:40.204
Everywhere in our
system understands

00:05:40.204 --> 00:05:41.370
that the network is a thing.

00:05:44.240 --> 00:05:48.200
We also, of course, believe that
your app should looked the way

00:05:48.200 --> 00:05:50.709
you want your app to look.

00:05:50.709 --> 00:05:52.250
So we're here to
provide you not only

00:05:52.250 --> 00:05:55.730
our built in powerful
layout primitives,

00:05:55.730 --> 00:05:59.480
but also provide you the ability
to rewrite your own in whatever

00:05:59.480 --> 00:06:01.164
you want your app to look like.

00:06:01.164 --> 00:06:03.580
So we have, in fact, taken the
step of removing the layout

00:06:03.580 --> 00:06:08.690
code from our C++ and
rewriting it Dart.

00:06:08.690 --> 00:06:10.630
So if we can write
it in Dart, you

00:06:10.630 --> 00:06:13.635
can express whatever layout
you want in Dart as well.

00:06:13.635 --> 00:06:14.260
Same for Paint.

00:06:16.800 --> 00:06:18.300
And of course, all
the gorgeous text

00:06:18.300 --> 00:06:19.860
that you would
expect from something

00:06:19.860 --> 00:06:21.540
that came from the web heritage.

00:06:21.540 --> 00:06:25.560
All the right to left,
left to right, ligatures.

00:06:25.560 --> 00:06:27.460
Think I'm still with you all?

00:06:27.460 --> 00:06:28.880
Anyways, my real
point here today

00:06:28.880 --> 00:06:31.430
is because we are such
an early stage project,

00:06:31.430 --> 00:06:32.980
is to hear from you.

00:06:32.980 --> 00:06:36.950
We believe that we're creating
something better for mobile,

00:06:36.950 --> 00:06:39.157
and someone was joking with
me before this session.

00:06:39.157 --> 00:06:41.240
They're like, well, you
could replace your session

00:06:41.240 --> 00:06:45.892
with a Q&amp;A about people and
what they hate about mobile.

00:06:45.892 --> 00:06:47.850
Because that's what I'm
here to learn from you.

00:06:47.850 --> 00:06:49.870
Is what you've had trouble
with in mobile, cause

00:06:49.870 --> 00:06:52.440
we want to make it better.

00:06:52.440 --> 00:06:55.010
So let's get back to the
demos, because those are fun.

00:06:55.010 --> 00:06:59.440
And let's write ourselves
some Hello World, shall we?

00:06:59.440 --> 00:07:03.180
So one of the things that
I tried to do for this talk

00:07:03.180 --> 00:07:08.430
was to make Sky feel very
familiar to a Dart developer.

00:07:08.430 --> 00:07:12.500
So to start a Sky product,
you just mkdir Hello World.

00:07:15.420 --> 00:07:21.630
And then we all know
our lovely pub spec.

00:07:21.630 --> 00:07:23.900
So we type a pub spec.

00:07:23.900 --> 00:07:26.930
I've typed a couple
of these in my day.

00:07:26.930 --> 00:07:28.630
Hello World.

00:07:28.630 --> 00:07:33.320
Dependencies, Sky, any.

00:07:33.320 --> 00:07:33.820
Yeah.

00:07:37.080 --> 00:07:43.020
And then I pub
get, and that's it.

00:07:43.020 --> 00:07:45.260
I now have everything I
need to write a Sky app,

00:07:45.260 --> 00:07:48.360
including the stuff
to put it on Android.

00:07:48.360 --> 00:07:50.450
It's just there on my machine.

00:07:50.450 --> 00:07:53.230
And so now, if I want to
keep typing Dart code,

00:07:53.230 --> 00:07:57.140
I make a lib directory,
because that's what pub likes.

00:07:57.140 --> 00:07:59.782
Set up the Sim links.

00:07:59.782 --> 00:08:00.365
lib/main.dart.

00:08:03.040 --> 00:08:04.900
And I always miss a
semicolon, so we're

00:08:04.900 --> 00:08:06.150
going to copy from our readme.

00:08:14.640 --> 00:08:17.020
We were going to
copy from our readme.

00:08:17.020 --> 00:08:20.580
It's fine we'll
do it on the fly.

00:08:20.580 --> 00:08:21.310
Hello World.

00:08:26.609 --> 00:08:28.150
My colleagues in
the back of the room

00:08:28.150 --> 00:08:29.691
are cringing that
I forgot something.

00:08:34.780 --> 00:08:36.890
OK and we have one more
piece that we got to type.

00:08:41.240 --> 00:08:43.654
Wow, Chrome has
completely lost its mind.

00:08:46.607 --> 00:08:47.690
Who works on this product?

00:08:50.760 --> 00:08:54.100
I did for many, many years.

00:08:54.100 --> 00:08:55.355
OK.

00:08:55.355 --> 00:08:57.480
One more piece of boilerplate
that we need in order

00:08:57.480 --> 00:09:00.110
to placate the Sky engine,
which comes from Chrome,

00:09:00.110 --> 00:09:03.049
is that we need an HTML-like
file to kick it off.

00:09:03.049 --> 00:09:05.590
So we're going to put that at
the root of our directory three

00:09:05.590 --> 00:09:08.160
vim, main.sky.

00:09:12.342 --> 00:09:13.880
Whoops, fix our package name.

00:09:17.240 --> 00:09:18.680
Hello World.

00:09:21.296 --> 00:09:23.420
And the semicolon that I
even forgot in the readme.

00:09:26.816 --> 00:09:29.740
It's OK, we got this.

00:09:29.740 --> 00:09:31.317
Packages, Sky.

00:09:31.317 --> 00:09:33.650
So now, how the heck do we
get this thing on the device?

00:09:33.650 --> 00:09:36.350
Well, again, I told you
the whole thing comes down

00:09:36.350 --> 00:09:37.100
from pub.

00:09:37.100 --> 00:09:39.770
So we include a little
tool called the Sky tool,

00:09:39.770 --> 00:09:40.990
and we just type start.

00:09:40.990 --> 00:09:42.489
And what this is
going to do is it's

00:09:42.489 --> 00:09:44.430
going to run an HTTP
server on my machine,

00:09:44.430 --> 00:09:46.790
serve my package
straight to my device,

00:09:46.790 --> 00:09:49.910
and tell the device,
hey, load this thing.

00:09:49.910 --> 00:09:52.100
So let's see if it works.

00:09:52.100 --> 00:09:53.520
Oh.

00:09:53.520 --> 00:09:56.493
I probably didn't
pub get enough times.

00:09:56.493 --> 00:09:57.455
[LAUGHTER]

00:09:57.455 --> 00:10:01.190
You think I'm kidding.

00:10:01.190 --> 00:10:03.430
No!

00:10:03.430 --> 00:10:09.600
Well, the phone
was not plugged in.

00:10:09.600 --> 00:10:13.230
The man in the back
of the-- there we go.

00:10:13.230 --> 00:10:15.396
So now we've started it up.

00:10:15.396 --> 00:10:17.640
Can we turn on number two?

00:10:20.710 --> 00:10:22.095
So we see it, we
see Hello World.

00:10:28.220 --> 00:10:31.450
Except we drew Hello World
behind the status bar.

00:10:31.450 --> 00:10:33.440
Which is probably not
what we meant to do.

00:10:33.440 --> 00:10:36.720
But I'll tell you, this
is both good and bad.

00:10:36.720 --> 00:10:40.190
It's good because in Sky,
you get full control.

00:10:40.190 --> 00:10:43.220
Full control over the screen,
full control over anything

00:10:43.220 --> 00:10:44.330
you can access in the OS.

00:10:44.330 --> 00:10:45.830
It's bad because
you obviously don't

00:10:45.830 --> 00:10:46.765
want to draw behind
the status board.

00:10:46.765 --> 00:10:48.890
Or maybe not for
this example, right?

00:10:48.890 --> 00:10:50.680
So that's where the
framework comes in.

00:10:50.680 --> 00:10:55.080
The Sky framework helps you
know, well, oh, I'm on Android,

00:10:55.080 --> 00:10:56.160
it has a status bar.

00:10:56.160 --> 00:10:58.090
I guess I should indent things.

00:10:58.090 --> 00:10:59.950
Yadda, yadda.

00:10:59.950 --> 00:11:02.900
So let's talk about
the Sky framework.

00:11:02.900 --> 00:11:04.620
So Sky framework.

00:11:04.620 --> 00:11:05.870
Remember, that was this thing?

00:11:05.870 --> 00:11:06.810
Oops, hello.

00:11:13.537 --> 00:11:14.870
I hit number one, is that wrong?

00:11:17.990 --> 00:11:18.490
Number four.

00:11:20.977 --> 00:11:22.560
I'll take a projector
for number four.

00:11:22.560 --> 00:11:23.060
OK.

00:11:25.829 --> 00:11:28.120
We're talking about the Sky
framework, written in Dart.

00:11:28.120 --> 00:11:30.974
That this piece of the puzzle.

00:11:30.974 --> 00:11:32.640
So what is that piece
of the puzzle for?

00:11:32.640 --> 00:11:35.510
Well, that piece of the puzzle
is a big bag of widgets,

00:11:35.510 --> 00:11:36.590
to start with.

00:11:36.590 --> 00:11:38.530
All written in Dart,
all replaceable

00:11:38.530 --> 00:11:40.350
we're writing
through Google's what

00:11:40.350 --> 00:11:42.320
I believe is beautiful
material design spec.

00:11:42.320 --> 00:11:45.210
Which the Android OS
also someone follows.

00:11:47.665 --> 00:11:49.040
The other job of
the framework is

00:11:49.040 --> 00:11:51.640
to help guide your app
towards being jank free.

00:11:54.530 --> 00:11:57.600
We're slowly removing
the blocking APIs

00:11:57.600 --> 00:12:00.240
from the engine side of
things, and in the framework

00:12:00.240 --> 00:12:02.275
we're also not
introducing blocking APIs.

00:12:02.275 --> 00:12:04.490
So that you don't
miss those frames,

00:12:04.490 --> 00:12:05.870
you don't block the main thread.

00:12:05.870 --> 00:12:10.130
You are always responsive
to the user's input.

00:12:10.130 --> 00:12:12.510
Another way that we help you
do that is by separating out

00:12:12.510 --> 00:12:13.940
the pieces, so you do
your layout at layout

00:12:13.940 --> 00:12:16.240
time, your paint at paint
time, you process input

00:12:16.240 --> 00:12:17.080
at processing time.

00:12:17.080 --> 00:12:21.210
Allows us to overlap these, it
allows us to interrupt these.

00:12:21.210 --> 00:12:25.722
It allows us to, again, make
sure you always hit that frame.

00:12:25.722 --> 00:12:27.430
And finally, one note
about the framework

00:12:27.430 --> 00:12:29.950
is that it is in a functional
reactive style, which

00:12:29.950 --> 00:12:32.730
you see also with the framework
that Casper just demoed,

00:12:32.730 --> 00:12:37.870
and other modern frameworks that
are being experimented with.

00:12:37.870 --> 00:12:42.280
So let's do something with
the framework, shall we?

00:12:42.280 --> 00:12:44.770
So given how well that
first round of typing was,

00:12:44.770 --> 00:12:49.130
I think I'm going to skip
straight to my backups.

00:12:49.130 --> 00:12:52.010
We'll go to our-- you know
what, we can do this in Sublime.

00:12:52.010 --> 00:12:54.030
We can go to the 21st century.

00:12:54.030 --> 00:12:58.270
So inside my backups, I have
already typed out an example.

00:12:58.270 --> 00:13:01.570
And the part that changed
is this main.dart file.

00:13:01.570 --> 00:13:04.120
Sorry, now we have color.

00:13:04.120 --> 00:13:06.350
But the big thing
the change, remember

00:13:06.350 --> 00:13:09.090
it was just dart.sky before, so
we just imported this package

00:13:09.090 --> 00:13:10.710
framework f in
Dart, now we import

00:13:10.710 --> 00:13:12.230
a bit more of the framework.

00:13:12.230 --> 00:13:14.239
We still extend our app.

00:13:14.239 --> 00:13:15.780
You can ignore this
little style bit,

00:13:15.780 --> 00:13:17.740
I'll talked about
that in a second.

00:13:17.740 --> 00:13:20.220
We still have a build method.

00:13:20.220 --> 00:13:23.382
But the new piece is that
we now have a scaffold.

00:13:23.382 --> 00:13:25.090
And the scaffold is
the opinionated piece

00:13:25.090 --> 00:13:28.600
of the framework that says, hey,
I'm on iOS, or I'm on Android.

00:13:28.600 --> 00:13:30.330
I bet I have a status
bar, I shouldn't

00:13:30.330 --> 00:13:32.610
draw there, et cetera.

00:13:32.610 --> 00:13:36.230
It also has an action bar,
which is a material design

00:13:36.230 --> 00:13:38.710
concept for the thing
at the top with the name

00:13:38.710 --> 00:13:43.340
and the little, like, hot
dog for the menu, et cetera.

00:13:43.340 --> 00:13:46.460
And here we're just
putting Hello World,

00:13:46.460 --> 00:13:48.370
and a little text in our page.

00:13:48.370 --> 00:13:53.630
So let's run this simple
app on our phone again.

00:13:58.160 --> 00:14:00.365
Have to be in backup, widgets.

00:14:07.990 --> 00:14:14.030
And we switch to
number two, and pray.

00:14:14.030 --> 00:14:14.850
That is not right.

00:14:14.850 --> 00:14:15.350
That is not.

00:14:26.740 --> 00:14:27.520
That is still not.

00:14:31.640 --> 00:14:41.000
I guess we will
try-- sorry, folks.

00:14:41.000 --> 00:14:46.390
I have caused something
to be confused.

00:14:46.390 --> 00:14:51.854
I need the man in the
back of the room again.

00:14:51.854 --> 00:14:54.020
Or maybe this is why you
don't do mobile live demos.

00:14:59.147 --> 00:15:00.980
You know, when it doesn't
work on one phone,

00:15:00.980 --> 00:15:02.190
you take one of the
other three phones

00:15:02.190 --> 00:15:03.606
that you brought
forward with you.

00:15:05.990 --> 00:15:06.490
I'm sorry?

00:15:06.490 --> 00:15:09.005
AUDIENCE: [INAUDIBLE].

00:15:09.005 --> 00:15:11.380
ERIC SEIDEL: You know, I only
have the one terminal open,

00:15:11.380 --> 00:15:12.600
so I would think not.

00:15:18.800 --> 00:15:20.480
But anything is possible.

00:15:20.480 --> 00:15:21.860
Ta-da!

00:15:21.860 --> 00:15:24.180
It was just the phone.

00:15:24.180 --> 00:15:25.930
Oh, sorry.

00:15:25.930 --> 00:15:27.070
It looks green to me.

00:15:34.790 --> 00:15:36.855
So well, moving
to that phone has

00:15:36.855 --> 00:15:38.855
made the rest of this a
little more complicated.

00:15:42.030 --> 00:15:44.610
So you know what, we're
actually going to move back,

00:15:44.610 --> 00:15:47.620
and then I'm going to
show you the next feature.

00:15:47.620 --> 00:15:49.950
Which is the fact, you
know that I talked before

00:15:49.950 --> 00:15:54.099
about how silly was this
compile, install, optimize

00:15:54.099 --> 00:15:55.890
cycle, and then you
see me doing it, right?

00:15:55.890 --> 00:15:57.473
I come back to my
terminal every time.

00:15:57.473 --> 00:15:58.921
It's silly.

00:15:58.921 --> 00:16:00.046
So I don't want to do that.

00:16:05.520 --> 00:16:08.674
And so I'm going
to just reinstall.

00:16:08.674 --> 00:16:10.840
Remember I told you that
everything came along with?

00:16:10.840 --> 00:16:12.465
Everything really
does come along with.

00:16:16.644 --> 00:16:18.060
Well, I'm giving
up on that phone.

00:16:18.060 --> 00:16:18.560
Sorry.

00:16:20.502 --> 00:16:21.960
We're going back,
we're going to go

00:16:21.960 --> 00:16:22.950
a different part of the demo.

00:16:22.950 --> 00:16:24.770
So the next thing I was going to
show you is that I could shake

00:16:24.770 --> 00:16:26.320
to reload, but since
I'm on a tablet,

00:16:26.320 --> 00:16:28.028
this thing doesn't
have an accelerometer,

00:16:28.028 --> 00:16:29.510
and it cannot shake to reload.

00:16:29.510 --> 00:16:31.260
So I will show you
how to do that,

00:16:31.260 --> 00:16:32.730
but you're going to
have to try it yourself.

00:16:32.730 --> 00:16:34.438
Because, again, always
on the place where

00:16:34.438 --> 00:16:36.510
you can play with it yourself.

00:16:36.510 --> 00:16:40.010
The one piece of this widget's
one demo that I didn't show you

00:16:40.010 --> 00:16:48.710
was in this main.sky,
I added an import here

00:16:48.710 --> 00:16:51.990
which imports another
piece of the framework that

00:16:51.990 --> 00:16:53.680
loads another small
piece of Dart code.

00:16:53.680 --> 00:16:56.013
Which, again, we can see,
because it's in the framework.

00:17:05.060 --> 00:17:07.319
And this little
piece of Dart code

00:17:07.319 --> 00:17:09.069
listens to an Android sensor.

00:17:12.109 --> 00:17:15.940
And when the sensor changes, it
decides whether you're shaking

00:17:15.940 --> 00:17:18.579
or not.

00:17:18.579 --> 00:17:20.962
And then issues a
reload on the screen.

00:17:20.962 --> 00:17:23.240
Now, how exactly talks
to the Android center

00:17:23.240 --> 00:17:25.680
is a detailed better
covered in our readmes.

00:17:25.680 --> 00:17:28.650
Because the way that
this uses, it that mojo

00:17:28.650 --> 00:17:31.340
IPC system that I was
talking about before.

00:17:31.340 --> 00:17:33.530
And this is 40
lines of code here,

00:17:33.530 --> 00:17:35.590
it's another 20 lines
of code in the mojom

00:17:35.590 --> 00:17:38.130
to specify how it wants
to talk to the API.

00:17:38.130 --> 00:17:39.810
And then some other
40 lines of Java.

00:17:39.810 --> 00:17:42.700
Mostly to parrot what the
Android system says back

00:17:42.700 --> 00:17:44.080
to the mojom.

00:17:44.080 --> 00:17:49.040
So it's a very small amount
of code to expose the Android

00:17:49.040 --> 00:17:52.310
sensors, but this is how
we do shake to reload,

00:17:52.310 --> 00:17:54.950
which unfortunately I cannot
demo because the tablet

00:17:54.950 --> 00:17:57.660
doesn't support it.

00:17:57.660 --> 00:18:00.810
So the last and final
thing that I want to demo,

00:18:00.810 --> 00:18:03.700
since my demos are
having so much luck,

00:18:03.700 --> 00:18:05.920
is I want to demo a slightly
more complicated use

00:18:05.920 --> 00:18:07.115
of this framework.

00:18:07.115 --> 00:18:08.490
Because right now,
all we've done

00:18:08.490 --> 00:18:10.698
is we've drawn some pretty
text on the screen, right?

00:18:10.698 --> 00:18:13.840
We could do something a
little more interactive.

00:18:13.840 --> 00:18:16.470
So we're going to back
up and go to widgets2.

00:18:20.690 --> 00:18:23.425
And we'll load this sucker
up, and I'll switch screens.

00:18:26.809 --> 00:18:29.350
You know, I'm going to be a pro
at pushing these buttons here

00:18:29.350 --> 00:18:29.870
pretty soon.

00:18:33.630 --> 00:18:35.630
I'm going to be a pro,
especially if it actually

00:18:35.630 --> 00:18:36.130
works.

00:18:47.000 --> 00:18:49.625
You know, I don't
know what to tell you.

00:18:54.230 --> 00:18:57.930
Now the [INAUDIBLE] listener
is some other silliness.

00:18:57.930 --> 00:19:00.210
I don't know what to tell you.

00:19:00.210 --> 00:19:04.377
This is what doing demos
live on stage with mobile

00:19:04.377 --> 00:19:05.210
is going to get you.

00:19:05.210 --> 00:19:06.670
But I'm going to
show you instead.

00:19:06.670 --> 00:19:08.044
So what we were
going to do is we

00:19:08.044 --> 00:19:09.690
were going to build a button.

00:19:09.690 --> 00:19:12.930
And so if you look down
at our build method,

00:19:12.930 --> 00:19:16.280
before we just had this
scaffold and this action bar.

00:19:16.280 --> 00:19:19.020
Here we were adding another
container and the content,

00:19:19.020 --> 00:19:21.390
and we're adding two
buttons and event

00:19:21.390 --> 00:19:23.430
listeners around each button.

00:19:23.430 --> 00:19:26.040
And these event listeners
listen to the pointer up,

00:19:26.040 --> 00:19:29.480
and they call this say
method that we defined above

00:19:29.480 --> 00:19:32.610
to say hello, or say goodbye.

00:19:32.610 --> 00:19:34.950
And the say method,
what it does is

00:19:34.950 --> 00:19:38.080
it's mostly just a setter
for this greeting variable

00:19:38.080 --> 00:19:39.470
that we have.

00:19:39.470 --> 00:19:41.580
But it also calls
the set state, which

00:19:41.580 --> 00:19:44.130
lets the underlying
framework know, hey,

00:19:44.130 --> 00:19:46.710
I'm changing my state
in my data model.

00:19:46.710 --> 00:19:49.230
You better ask me again
if you want to display.

00:19:49.230 --> 00:19:53.940
And so before the next frame
comes up, it called built.

00:19:53.940 --> 00:19:57.930
So I can try sending
it one more time,

00:19:57.930 --> 00:20:03.390
but this is why you're not
shipping things on Sky today.

00:20:03.390 --> 00:20:06.432
And we'll have better
demos next time.

00:20:06.432 --> 00:20:08.890
Anyways, before were completely
done with the demo section,

00:20:08.890 --> 00:20:11.822
I do want to talk a
little bit about tooling.

00:20:11.822 --> 00:20:13.530
Because one of the
things that we learned

00:20:13.530 --> 00:20:16.110
in our very long time
while working on the web

00:20:16.110 --> 00:20:18.570
is if you want to make
the darn thing fast,

00:20:18.570 --> 00:20:21.320
you need to have tools
to understand how.

00:20:21.320 --> 00:20:25.080
And so thankfully, we built
lots of tools in those years.

00:20:25.080 --> 00:20:29.500
And because we come
from that world,

00:20:29.500 --> 00:20:32.030
we have brought
forward those tools.

00:20:32.030 --> 00:20:34.150
And so I wanted to
show you one of these.

00:20:34.150 --> 00:20:40.357
So if we say pull up our good
old spinning square again, yep.

00:20:40.357 --> 00:20:41.940
I'll switch to the
screen just second.

00:20:47.690 --> 00:20:49.635
If we pull up our
spring square again,

00:20:49.635 --> 00:20:51.510
you know what the spinning
square looks like.

00:20:51.510 --> 00:20:53.390
But I want to actually
prove to myself,

00:20:53.390 --> 00:20:55.610
is that hitting every frame?

00:20:55.610 --> 00:20:56.860
Well, I can tell you.

00:20:56.860 --> 00:20:59.195
If we go back to
our little screen.

00:20:59.195 --> 00:21:00.820
We go to this, and
we do start_tracing.

00:21:06.200 --> 00:21:07.950
And now it's tracing
on the device.

00:21:07.950 --> 00:21:14.630
If I do stop_tracing, it
downloads the little trace.

00:21:14.630 --> 00:21:22.900
And if we go back
to our web browser,

00:21:22.900 --> 00:21:30.770
and we go to about:tracing,
and we click load.

00:21:30.770 --> 00:21:32.970
So this is Chrome's
about:tracing functionality,

00:21:32.970 --> 00:21:35.090
which is used for
understanding web pages.

00:21:35.090 --> 00:21:36.910
But we also wired
up the Sky engine

00:21:36.910 --> 00:21:39.280
to be able to spit out
compatible trace files.

00:21:39.280 --> 00:21:43.797
So when we go to the
Sky trace, and huzzah!

00:21:43.797 --> 00:21:44.755
You see a lot of lines.

00:21:48.050 --> 00:21:50.630
The interesting part, so
those little orange lines,

00:21:50.630 --> 00:21:53.960
which you may not be able
to see very well, these.

00:21:53.960 --> 00:21:55.840
Those are the v-syncs.

00:21:55.840 --> 00:22:00.280
And you can see from
this area is just empty.

00:22:00.280 --> 00:22:02.550
We are doing the entire
work of rendering

00:22:02.550 --> 00:22:09.214
that frame in 1.2 milliseconds.

00:22:09.214 --> 00:22:10.880
Obviously we're not
rendering very much.

00:22:10.880 --> 00:22:13.450
But the idea is
that we have tons

00:22:13.450 --> 00:22:15.140
of space on the simple example.

00:22:15.140 --> 00:22:17.180
We could show you
slightly more complicated,

00:22:17.180 --> 00:22:18.680
which would also
have tons of space,

00:22:18.680 --> 00:22:20.780
and you could dive into
this on your own time.

00:22:20.780 --> 00:22:24.320
But the idea here is that we
have the tools to understand,

00:22:24.320 --> 00:22:26.380
and you have the
tools to understand

00:22:26.380 --> 00:22:28.760
how to make your apps fast.

00:22:28.760 --> 00:22:31.280
So let's go back and
I want to show you

00:22:31.280 --> 00:22:35.100
one more tool, which should be
very familiar to this crowd.

00:22:35.100 --> 00:22:38.580
Which is, not only do we
get all the Chrome tools,

00:22:38.580 --> 00:22:41.850
but we get all the Dart tools.

00:22:41.850 --> 00:22:45.440
And so as of this
last weekend, it

00:22:45.440 --> 00:22:48.060
is now possible also
with the spinning square

00:22:48.060 --> 00:22:58.700
to, if I just forward one little
port, the Observatory port,

00:22:58.700 --> 00:23:02.170
I just forwarded the
port-- oh, hello.

00:23:02.170 --> 00:23:04.710
Co-host.

00:23:04.710 --> 00:23:07.400
I just forwarded the port
from the device to my machine.

00:23:07.400 --> 00:23:09.500
I am now connecting
to Observatory

00:23:09.500 --> 00:23:12.810
on the device from my laptop.

00:23:12.810 --> 00:23:13.800
And so I can click.

00:23:13.800 --> 00:23:18.302
[APPLAUSE]

00:23:18.302 --> 00:23:19.760
I can click on the
spinning square.

00:23:22.550 --> 00:23:26.690
And honestly, I'm not a super
amazing Observatory guru yet.

00:23:26.690 --> 00:23:29.220
Because it just
came online for us.

00:23:29.220 --> 00:23:31.660
But I can set a break point.

00:23:31.660 --> 00:23:37.835
And if I go back to my screen,
I've stopped the square.

00:23:41.630 --> 00:23:49.960
So I can now go back to my other
screen, and we can go, whoops.

00:23:49.960 --> 00:23:54.710
We can go back to this
one, to the debugger.

00:23:54.710 --> 00:23:57.090
And I can hit See
a couple times,

00:23:57.090 --> 00:24:00.280
and I can see the squares
turning, you can't.

00:24:00.280 --> 00:24:02.400
But well, I'll show
you that in a second.

00:24:02.400 --> 00:24:11.390
I can also do things like
p square, style, background

00:24:11.390 --> 00:24:13.630
color.

00:24:13.630 --> 00:24:15.370
This part's all going away.

00:24:15.370 --> 00:24:19.560
We're rewriting the
style system as we speak.

00:24:19.560 --> 00:24:23.867
Orange, and then
remove my-- well,

00:24:23.867 --> 00:24:25.450
I don't need to
remove my break point,

00:24:25.450 --> 00:24:26.575
but I can just to continue.

00:24:30.429 --> 00:24:30.929
Ta-da!

00:24:34.870 --> 00:24:37.481
In any case,
Observatory doesn't work

00:24:37.481 --> 00:24:38.980
on the one that's
on the Play Store,

00:24:38.980 --> 00:24:41.880
but the next version
I push, it will.

00:24:41.880 --> 00:24:44.650
Because that came in 11th
hour for this conference.

00:24:44.650 --> 00:24:47.060
But you can see, you
get the Chrome tools,

00:24:47.060 --> 00:24:49.361
you get the Dart tools.

00:24:49.361 --> 00:24:52.540
It's paradise, right?

00:24:52.540 --> 00:24:56.330
Anyways, that's most of what
I wanted to tell you today.

00:24:56.330 --> 00:25:00.600
I want to thank you
all-- oh, screen.

00:25:00.600 --> 00:25:02.510
I want to thank you
all for listening.

00:25:02.510 --> 00:25:05.080
Again, we're super early stage.

00:25:05.080 --> 00:25:07.850
My goal here is, again,
to solicit your feedback.

00:25:07.850 --> 00:25:10.770
So I brought my entire team,
they're sitting in the back.

00:25:10.770 --> 00:25:13.570
And we will gladly
field your questions.

00:25:13.570 --> 00:25:14.750
Please come talk to us.

00:25:14.750 --> 00:25:17.960
Or if you're watching us on
YouTube, please reach out.

00:25:17.960 --> 00:25:21.357
There's our GitHub URL,
there's our mailing list.

00:25:21.357 --> 00:25:22.190
Thank you very much.

00:25:26.247 --> 00:25:28.580
MALE SPEAKER: If you'd like
to do a couple of questions,

00:25:28.580 --> 00:25:29.621
you've got a few minutes.

00:25:29.621 --> 00:25:30.720
ERIC SEIDEL: OK.

00:25:30.720 --> 00:25:35.125
I have time for some
questions, if anybody has any.

00:25:35.125 --> 00:25:36.475
AUDIENCE: [INAUDIBLE].

00:25:36.475 --> 00:25:37.600
MALE SPEAKER 2: Hey, Kevin!

00:25:37.600 --> 00:25:39.160
Give him the microphone.

00:25:39.160 --> 00:25:40.436
MALE SPEAKER: What?

00:25:40.436 --> 00:25:42.349
AUDIENCE: [INAUDIBLE].

00:25:42.349 --> 00:25:44.140
MALE SPEAKER: Question
is, are you exposing

00:25:44.140 --> 00:25:46.070
all the OpenGL calls to Dart?

00:25:46.070 --> 00:25:49.220
ERIC SEIDEL: So we have
currently removed the WebGL

00:25:49.220 --> 00:25:53.320
wrapper that you might have
expected from a browser,

00:25:53.320 --> 00:25:55.580
so we don't have WebGL.

00:25:55.580 --> 00:25:58.340
One could expose, if there's
a Dart library on pub already

00:25:58.340 --> 00:26:01.450
that does GL, we could
certainly implement that.

00:26:01.450 --> 00:26:03.445
But I think that
there's a question

00:26:03.445 --> 00:26:06.050
that I have to ask myself
is, if I want to write WebGL,

00:26:06.050 --> 00:26:07.360
where do I want to write it?

00:26:07.360 --> 00:26:10.110
In this system, I don't
need to write it in Dart,

00:26:10.110 --> 00:26:12.620
I don't need to write it in Sky.

00:26:12.620 --> 00:26:14.407
I could take my
existing C++ to OpenGL.

00:26:14.407 --> 00:26:16.240
So I guess the short
answer to your question

00:26:16.240 --> 00:26:18.260
is, we don't currently, we could
if that's important to you.

00:26:18.260 --> 00:26:19.176
AUDIENCE: [INAUDIBLE]?

00:26:23.300 --> 00:26:23.940
Sure.

00:26:23.940 --> 00:26:25.790
If somebody's written
a [INAUDIBLE] API

00:26:25.790 --> 00:26:28.970
bindings for Dart, we certainly
could expose those, yes.

00:26:28.970 --> 00:26:29.800
We aren't today.

00:26:32.090 --> 00:26:33.840
MALE SPEAKER: Got time
for maybe one more.

00:26:38.930 --> 00:26:42.080
AUDIENCE: How is
Sky work in iOS?

00:26:42.080 --> 00:26:44.520
ERIC SEIDEL: So Sky
doesn't today work in iOS.

00:26:44.520 --> 00:26:46.200
But the engine
itself is portable,

00:26:46.200 --> 00:26:49.670
and the VM is portable, as you
heard Casper talking about.

00:26:49.670 --> 00:26:54.270
So the constraints are
different in that ecosystem.

00:26:54.270 --> 00:26:58.770
There are some-- you sign
different agreements to play

00:26:58.770 --> 00:27:00.480
on that phone.

00:27:00.480 --> 00:27:05.580
Based on those agreements that
you may or may not signed,

00:27:05.580 --> 00:27:08.040
the technology choices may need
to be slightly differently,

00:27:08.040 --> 00:27:09.373
but we will cross those bridges.

00:27:12.411 --> 00:27:13.410
MALE SPEAKER: Thank you.

00:27:13.410 --> 00:27:15.180
ERIC SEIDEL: Thank you.

