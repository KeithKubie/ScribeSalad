WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
Our goal is to avoid the message guessing attack.

00:00:03.000 --> 00:00:05.000
The key idea is just to add some random padding

00:00:05.000 --> 00:00:08.000
to make the message large and unpredictable.

00:00:08.000 --> 00:00:10.000
There are lots of different ways to do this.

00:00:10.000 --> 00:00:13.000
One is the public key cryptography standard number 1,

00:00:13.000 --> 00:00:20.000
which is to replace the original message with 0 padding followed by a 10,

00:00:20.000 --> 00:00:29.000
followed by some random bits, followed by a bite of 0s, followed by the original message.

00:00:29.000 --> 00:00:31.000
This uses at least 64 random bits.

00:00:31.000 --> 00:00:35.000
Depending on the length of the message and the size of n, it may use more.

00:00:35.000 --> 00:00:38.000
This prevents the small message-space attack,

00:00:38.000 --> 00:00:41.000
since even if the set of possible messages is fairly small,

00:00:41.000 --> 00:00:45.000
an attacker needs to try all possible choices for the random bits,

00:00:45.000 --> 00:00:50.000
which is at last 2^64 of them in order to test those messages.

00:00:50.000 --> 00:00:52.000
There's a better way to do this,

00:00:52.000 --> 00:00:55.000
which is known as optimal asymmetric encryption padding--OAEP.

00:00:55.000 --> 00:00:59.000
I won't go into the details of that, but the main idea is to XOR the message

00:00:59.000 --> 00:01:03.000
with the output of a cryptographic hash function that takes in a random value.

00:01:03.000 --> 00:01:07.000
But the recipient can still decrypt the message,

00:01:07.000 --> 00:01:10.000
because they can obtain the random value and XOR out

00:01:10.000 --> 99:59:59.000
the result of the cryptographic hash.

