WEBVTT
Kind: captions
Language: en

00:00:03.283 --> 00:00:05.630
HYUNYOUNG SONG: OK,
is this mic on?

00:00:05.630 --> 00:00:07.980
OK, mic is alive.

00:00:07.980 --> 00:00:09.230
Hello, everybody.

00:00:11.200 --> 00:00:13.220
Did everybody find some
place to sit?

00:00:18.950 --> 00:00:21.950
OK, I will start now.

00:00:21.950 --> 00:00:22.790
Hello, everybody.

00:00:22.790 --> 00:00:27.630
Welcome to Void Your Warranty,
Hacking Your Glass session.

00:00:27.630 --> 00:00:28.600
My name is Hyunyoung Song.

00:00:28.600 --> 00:00:30.550
I also go by HY.

00:00:30.550 --> 00:00:31.980
PIERRE-YVES LALIGAND: And I'm
Pierre-Yves Laligand.

00:00:31.980 --> 00:00:34.504
I go by PY.

00:00:34.504 --> 00:00:37.190
HYUNYOUNG SONG: And
we're Google[x]

00:00:37.190 --> 00:00:38.440
software engineers.

00:00:41.230 --> 00:00:47.130
So before I go and dive right
into the talk, I'd like to do

00:00:47.130 --> 00:00:50.410
a short recap of what has
already been covered at

00:00:50.410 --> 00:00:55.390
probably the two previous Glass
rec sessions, Developers

00:00:55.390 --> 00:00:58.200
for Glass and Mirror API.

00:00:58.200 --> 00:01:01.950
So the name of our Glass
system's main interface is

00:01:01.950 --> 00:01:03.190
called the Timeline.

00:01:03.190 --> 00:01:07.000
It is basically a strip of cards
laid out horizontally.

00:01:07.000 --> 00:01:10.790
And when the screen is woken up,
the first screen that you

00:01:10.790 --> 00:01:13.240
see is the clock screen.

00:01:13.240 --> 00:01:18.030
And to its right, you have past
event Timeline item cards

00:01:18.030 --> 00:01:20.380
that are generated when you
take a photo, or record a

00:01:20.380 --> 00:01:23.410
video, or even receive
an email.

00:01:23.410 --> 00:01:27.260
And to its left are your future
event cards, such as

00:01:27.260 --> 00:01:28.905
Now card and navigation
directions.

00:01:31.500 --> 00:01:34.320
If you are a third party
service, the way you can

00:01:34.320 --> 00:01:37.470
insert static Timeline item
cards into our main interface

00:01:37.470 --> 00:01:41.770
is using Mirror API, which
is a cloud API.

00:01:41.770 --> 00:01:45.500
And by design, this was designed
to be simple and easy

00:01:45.500 --> 00:01:49.500
to use so that developers don't
have to worry about

00:01:49.500 --> 00:01:52.990
managing system resources
such as power lock--

00:01:52.990 --> 00:01:56.300
wake lock, and camera,
and so forth.

00:01:56.300 --> 00:02:02.660
For those tasks, PY and myself
and many engineers in the

00:02:02.660 --> 00:02:04.940
Glass team are actively
working on

00:02:04.940 --> 00:02:07.922
designing Glass SDK.

00:02:07.922 --> 00:02:16.610
[APPLAUSE]

00:02:16.610 --> 00:02:20.280
HYUNYOUNG SONG: And at the time
of the Explorer edition

00:02:20.280 --> 00:02:24.420
launch, we thought that we want
to get early input as

00:02:24.420 --> 00:02:25.820
much as possible.

00:02:25.820 --> 00:02:31.210
And so for every one of you to
actually explore our platform,

00:02:31.210 --> 00:02:34.980
we inserted several tools, such
as ADP and Fastboot OEM

00:02:34.980 --> 00:02:38.780
Unlock so that you can explore
our Glass platform so we can

00:02:38.780 --> 00:02:40.940
get our early feedback
on what you'd like to

00:02:40.940 --> 00:02:43.110
see in Glass SDK.

00:02:43.110 --> 00:02:46.310
And while we were doing that,
we also decided to hold this

00:02:46.310 --> 00:02:49.190
session so that we can guide
you step by step what you'd

00:02:49.190 --> 00:02:50.900
have to do to use these tools.

00:02:55.980 --> 00:02:59.560
So you all probably
know that Glass is

00:02:59.560 --> 00:03:02.140
built on top of Android.

00:03:02.140 --> 00:03:05.000
And so here, I'd like to see
a quick show of hands.

00:03:05.000 --> 00:03:09.770
How many of you have developed
Android applications?

00:03:09.770 --> 00:03:12.490
This is very good.

00:03:12.490 --> 00:03:16.010
And OK, so then, how many of
you have downloaded Android

00:03:16.010 --> 00:03:21.010
open source projects and changed
them, modified it, and

00:03:21.010 --> 00:03:24.800
built it, and pushed it to
some mobile platform?

00:03:24.800 --> 00:03:28.070
So I like also this show
of hands, too.

00:03:28.070 --> 00:03:31.650
So since most of you already
know about Android platform

00:03:31.650 --> 00:03:36.930
and how to build applications,
we will not cover how you can

00:03:36.930 --> 00:03:40.180
program and develop
Glass applications

00:03:40.180 --> 00:03:42.080
today in this session.

00:03:42.080 --> 00:03:45.360
What we will be covering are
basically two things.

00:03:45.360 --> 00:03:48.620
The first thing, how you can
modify your existing Android

00:03:48.620 --> 00:03:52.400
applications so that you can
run it on Glass platform to

00:03:52.400 --> 00:03:53.980
try it out.

00:03:53.980 --> 00:03:58.200
And while you're doing that, if
you come to a show stopper

00:03:58.200 --> 00:04:02.130
where you can't do certain
things because you don't have

00:04:02.130 --> 00:04:05.390
root access, the second part of
this talk, we're going to

00:04:05.390 --> 00:04:08.580
tell you the commands that you
have to execute in order to

00:04:08.580 --> 00:04:09.810
root your Glass device.

00:04:09.810 --> 00:04:17.600
[APPLAUSE]

00:04:17.600 --> 00:04:21.000
HYUNYOUNG SONG: So let's first
talk about how you can run

00:04:21.000 --> 00:04:23.260
your Android applications
on Glass without

00:04:23.260 --> 00:04:24.510
voiding your warranty.

00:04:28.010 --> 00:04:31.190
So Android Debug Bridge is
something that you want to

00:04:31.190 --> 00:04:33.320
enable and use.

00:04:33.320 --> 00:04:36.650
On the laptop, the client side,
you'd want to download

00:04:36.650 --> 00:04:38.320
the latest Android SDK.

00:04:38.320 --> 00:04:41.380
And under Platform Tools
directory, there will be a

00:04:41.380 --> 00:04:45.540
tool, ADB, that you can use to
talk to your Glass device when

00:04:45.540 --> 00:04:47.780
it's connected to your USB.

00:04:47.780 --> 00:04:51.510
And on Glass device, there's
settings device info cards

00:04:51.510 --> 00:04:55.070
that PY will show you later on
in this demo, how you can

00:04:55.070 --> 00:04:56.400
toggle the debug settings.

00:04:59.680 --> 00:05:02.260
And here's some of the things
that you probably want to

00:05:02.260 --> 00:05:05.370
consider when you're modifying
your Android applications to

00:05:05.370 --> 00:05:07.080
run on Glass platform.

00:05:07.080 --> 00:05:10.995
Currently, Explorer edition is
built on top of Android ICS

00:05:10.995 --> 00:05:15.870
MR1 version 4.0.4
API level 15.

00:05:15.870 --> 00:05:18.820
So what this means is that in
your Android manifest file,

00:05:18.820 --> 00:05:21.800
you want to target the
API level to be 15.

00:05:21.800 --> 00:05:25.230
But this does not mean that at
the time of our consumer

00:05:25.230 --> 00:05:28.295
launch this is the operating
system that it

00:05:28.295 --> 00:05:28.940
will be based on.

00:05:28.940 --> 00:05:31.470
So keep that in mind.

00:05:31.470 --> 00:05:35.250
Now, in terms of hardware, most
of the communication and

00:05:35.250 --> 00:05:41.060
motion sensors are available
through Android standard APIs.

00:05:41.060 --> 00:05:44.180
But what is different is
the touch handling.

00:05:44.180 --> 00:05:47.080
Instead of having a touch
screen, Glass has a touch pad

00:05:47.080 --> 00:05:49.330
on the side.

00:05:49.330 --> 00:05:52.680
And so if your input handling
depends on any screen

00:05:52.680 --> 00:05:54.660
coordinates, then it
will not work.

00:05:54.660 --> 00:05:57.720
So you'd want to change that
to something that can take

00:05:57.720 --> 00:06:02.850
focus and something that can
use more or less D-pad like

00:06:02.850 --> 00:06:04.930
operations.

00:06:04.930 --> 00:06:09.480
In terms of the display, as
opposed to having LCD that is

00:06:09.480 --> 00:06:15.410
opaque, Glass system has a
display that is 25 inches,

00:06:15.410 --> 00:06:19.910
eight foot away display that is
translucent or transparent.

00:06:19.910 --> 00:06:22.260
The key word here is
"transparent."

00:06:22.260 --> 00:06:24.180
You want the best contrast
as possible.

00:06:24.180 --> 00:06:28.110
And in order to have this
effect, you want to change

00:06:28.110 --> 00:06:32.130
your background to be black and
have white text or light

00:06:32.130 --> 00:06:35.150
text to have the
best contrast.

00:06:35.150 --> 00:06:38.020
And this will probably save your
battery life a lot, too.

00:06:42.490 --> 00:06:47.750
So now, PY's going to do
a demo of Launcher, and

00:06:47.750 --> 00:06:50.380
settings, and a Notepad app that
we downloaded from these

00:06:50.380 --> 00:06:51.345
open sources.

00:06:51.345 --> 00:06:52.410
PIERRE-YVES LALIGAND:
All right.

00:06:52.410 --> 00:06:54.000
Thank you very much, HY.

00:06:54.000 --> 00:06:57.990
So first, before I get into the
demo, I'd like to briefly

00:06:57.990 --> 00:06:59.900
talk about our set-up.

00:06:59.900 --> 00:07:02.880
So the window that you can see
at the bottom of my screen is

00:07:02.880 --> 00:07:04.650
a tool called ScreenCast,
which we

00:07:04.650 --> 00:07:06.390
developed on the team.

00:07:06.390 --> 00:07:08.770
It will allow me to share
with you what's

00:07:08.770 --> 00:07:11.170
showing up on my device.

00:07:11.170 --> 00:07:14.300
In addition, the device that
I'm currently wearing is,

00:07:14.300 --> 00:07:17.780
software wise, really similar to
the ones that I see on some

00:07:17.780 --> 00:07:19.480
heads in attendance.

00:07:19.480 --> 00:07:22.830
It's just that I have an older
hardware revision.

00:07:22.830 --> 00:07:25.470
Lucky you!

00:07:25.470 --> 00:07:26.840
Another thing that I'd
like to point out.

00:07:26.840 --> 00:07:30.190
If you have Bluetooth devices,
we'd really appreciate it if

00:07:30.190 --> 00:07:32.380
you could turn them
off at this point.

00:07:32.380 --> 00:07:34.650
That would make this
demo much easier.

00:07:34.650 --> 00:07:35.190
Thank you.

00:07:35.190 --> 00:07:37.320
All right, so let's get
on with the demo.

00:07:37.320 --> 00:07:40.110
So the first part I want to show
you is pretty much as a

00:07:40.110 --> 00:07:42.420
very strict prerequisite for
everything you're going to do

00:07:42.420 --> 00:07:45.150
after that is to enable ADB.

00:07:45.150 --> 00:07:49.610
So when I wake the device up
and you land on the clock

00:07:49.610 --> 00:07:52.830
guard, all you have to do is
swipe all the way back until

00:07:52.830 --> 00:07:55.980
you reach the settings card.

00:07:55.980 --> 00:07:58.190
Once you're in the settings
bundle, look for

00:07:58.190 --> 00:07:59.960
the device info card.

00:07:59.960 --> 00:08:01.880
Tap to reach Options.

00:08:01.880 --> 00:08:04.750
And then, the second one
is the ADB toggle.

00:08:04.750 --> 00:08:07.770
So right now, as you can see, I
already have ADB on because

00:08:07.770 --> 00:08:10.150
Under the Hood, that's what's
ScreenCast needs in order to

00:08:10.150 --> 00:08:12.980
be able to pull some frame off
of the device and show them to

00:08:12.980 --> 00:08:15.710
you on my laptop.

00:08:15.710 --> 00:08:18.460
So right now, we have
ADB enabled.

00:08:18.460 --> 00:08:19.890
And there are a lot of
things we can do.

00:08:19.890 --> 00:08:21.900
And the first thing we're
going to do is actually

00:08:21.900 --> 00:08:23.480
install some apps.

00:08:23.480 --> 00:08:28.160
So what HY and I have done is
actually downloaded the source

00:08:28.160 --> 00:08:29.355
code for a couple of apps.

00:08:29.355 --> 00:08:31.990
So Launcher and Settings from
the Android open source

00:08:31.990 --> 00:08:34.350
project, pretty much
just compiled those

00:08:34.350 --> 00:08:35.690
into regular APKs.

00:08:35.690 --> 00:08:39.740
And now, I'm in the process of
installing them on my device.

00:08:39.740 --> 00:08:43.830
So we didn't really have to
modify the sources with one

00:08:43.830 --> 00:08:44.730
little exception.

00:08:44.730 --> 00:08:48.690
In the settings applications
manifest file, there's a line

00:08:48.690 --> 00:08:49.860
that needs to be changed.

00:08:49.860 --> 00:08:51.350
But I'm not going to
tell you any more.

00:08:51.350 --> 00:08:55.200
I'll leave that as a homework
for you later.

00:08:55.200 --> 00:08:57.280
All right, so now my
apps are installed.

00:08:57.280 --> 00:08:59.630
I'm going to just turn
the device back on.

00:08:59.630 --> 00:09:01.750
And as you can see, now,
something that should look

00:09:01.750 --> 00:09:03.590
very familiar to some of you.

00:09:03.590 --> 00:09:06.130
And I have the option
to choose several

00:09:06.130 --> 00:09:07.350
different home apps.

00:09:07.350 --> 00:09:10.920
So for the purpose of this demo,
I'm just going to use

00:09:10.920 --> 00:09:12.610
the Android Launcher.

00:09:12.610 --> 00:09:13.440
And here you go.

00:09:13.440 --> 00:09:15.168
If you have--

00:09:15.168 --> 00:09:17.588
[APPLAUSE]

00:09:17.588 --> 00:09:20.500
PIERRE-YVES LALIGAND:
Thank you.

00:09:20.500 --> 00:09:23.410
So if you've ever played with an
Android device before, this

00:09:23.410 --> 00:09:25.510
should look very familiar.

00:09:25.510 --> 00:09:27.710
So now, I can go into
the App section.

00:09:27.710 --> 00:09:30.270
And sure enough, here are
setting that I just installed.

00:09:30.270 --> 00:09:32.870
So usually, when I do this demo,
the first thing I do--

00:09:32.870 --> 00:09:34.810
and this is a great example--

00:09:34.810 --> 00:09:37.140
I go directly to the
Display section.

00:09:37.140 --> 00:09:40.900
Then, I reach for the
Sleep property.

00:09:40.900 --> 00:09:43.880
And I bump it all the way up
because I'm tired of seeing my

00:09:43.880 --> 00:09:46.610
screen do time out on me.

00:09:46.610 --> 00:09:49.080
All right.

00:09:49.080 --> 00:09:50.930
Let's go.

00:09:50.930 --> 00:09:51.680
Here it is.

00:09:51.680 --> 00:09:54.280
So you probably noticed that
in order to get around the

00:09:54.280 --> 00:09:57.440
apps, I'm using the touch pad
that is mounted on the right

00:09:57.440 --> 00:09:59.130
side of my frame.

00:09:59.130 --> 00:10:02.005
So this is possible because of
some slight modifications we

00:10:02.005 --> 00:10:03.760
made to the Android platform.

00:10:03.760 --> 00:10:07.140
So by default, if touch pad
input events go unhandled,

00:10:07.140 --> 00:10:09.430
they get automatically
transformed

00:10:09.430 --> 00:10:11.110
into navigation events.

00:10:11.110 --> 00:10:15.190
So for example, forward and
backward swipes or horizontal

00:10:15.190 --> 00:10:18.910
slides get turned into
focus motion events.

00:10:18.910 --> 00:10:21.930
Taps are used to select.

00:10:21.930 --> 00:10:26.230
And swipes down simply
have the back action.

00:10:26.230 --> 00:10:27.780
So this is pretty powerful.

00:10:27.780 --> 00:10:32.330
And if you install any apps on
a Glass device, it will allow

00:10:32.330 --> 00:10:35.040
you to navigate around
the apps and reach

00:10:35.040 --> 00:10:37.090
a lot of its features.

00:10:37.090 --> 00:10:40.670
Unfortunately, if your app
wasn't really designed with

00:10:40.670 --> 00:10:44.680
Glass in mind, then you're going
to find out that, for

00:10:44.680 --> 00:10:49.290
example, if you have a lot
of focusable widget or if

00:10:49.290 --> 00:10:51.720
basically your app was designed
for a touch screen,

00:10:51.720 --> 00:10:53.770
this just won't cut it.

00:10:53.770 --> 00:10:55.560
Thankfully, this is
an Android device.

00:10:55.560 --> 00:10:58.890
And like most Android devices,
this guy has a Bluetooth chip.

00:10:58.890 --> 00:11:03.590
And it supports the HID profile,
which allows it to

00:11:03.590 --> 00:11:07.050
pair with a lot of
input devices.

00:11:07.050 --> 00:11:09.780
So for this demo, I picked
this little keyboard.

00:11:09.780 --> 00:11:11.970
It's a very simple Bluetooth
keyboard.

00:11:11.970 --> 00:11:14.570
You can buy it on the shelf,
or you can buy it online.

00:11:14.570 --> 00:11:17.460
So I really like this one
because it already has some

00:11:17.460 --> 00:11:20.450
hard keys for us, some Android
system function IDs,

00:11:20.450 --> 00:11:22.130
like Home and Back.

00:11:22.130 --> 00:11:24.720
So that comes in very handy.

00:11:24.720 --> 00:11:27.400
So all right, that's the moment
where I'm supposed to

00:11:27.400 --> 00:11:31.310
cross my fingers and try
to pair it with Glass.

00:11:31.310 --> 00:11:35.680
All right, luckily we have
the Settings app.

00:11:35.680 --> 00:11:36.860
I go to the Bluetooth section.

00:11:36.860 --> 00:11:40.460
And if I don't forget to turn
it on, maybe it's going to

00:11:40.460 --> 00:11:42.980
show up alongside the
1,500 devices

00:11:42.980 --> 00:11:45.150
there are in this room.

00:11:45.150 --> 00:11:48.790
All right, hey, I've
got your name.

00:11:48.790 --> 00:11:55.040
We're going to filter when you
exit who ruined my demo.

00:11:55.040 --> 00:11:56.846
All right, so let's
try this again.

00:11:56.846 --> 00:11:59.610
I'm going to try to
turn it back on.

00:11:59.610 --> 00:12:04.300
And let me know if you spot
a keyboard in here.

00:12:04.300 --> 00:12:06.770
Yup, aha!

00:12:06.770 --> 00:12:07.960
Yes!

00:12:07.960 --> 00:12:09.632
Oh.

00:12:09.632 --> 00:12:13.390
All right, one more time.

00:12:13.390 --> 00:12:15.366
Yeah, this one, too.

00:12:15.366 --> 00:12:17.060
All right, it's [INAUDIBLE].

00:12:17.060 --> 00:12:19.500
HYUNYOUNG SONG: Let's keep
our fingers crossed.

00:12:19.500 --> 00:12:21.460
PIERRE-YVES LALIGAND: Come on!

00:12:21.460 --> 00:12:21.795
Oh,

00:12:21.795 --> 00:12:22.760
HYUNYOUNG SONG: Okay.

00:12:22.760 --> 00:12:24.080
PIERRE-YVES LALIGAND: We'll
try this again.

00:12:24.080 --> 00:12:27.060
We have time.

00:12:27.060 --> 00:12:30.890
Bluetooth again, turn it on.

00:12:30.890 --> 00:12:32.840
It's discoverable.

00:12:32.840 --> 00:12:34.090
It was there.

00:12:38.340 --> 00:12:38.950
HYUNYOUNG SONG: Yay!

00:12:38.950 --> 00:12:39.822
PIERRE-YVES LALIGAND: Yes.

00:12:39.822 --> 00:12:43.266
OK, so now I'm there.

00:12:43.266 --> 00:12:49.490
Now, I have to type this little
code, 4133, Enter.

00:12:49.490 --> 00:12:52.520
And despite what this guy is
saying, I can tell you that

00:12:52.520 --> 00:12:54.530
I'm already paired.

00:12:54.530 --> 00:12:57.590
All right, get out of there.

00:12:57.590 --> 00:12:59.850
So now, I can use the D-pad
on the device to just

00:12:59.850 --> 00:13:03.230
get around the app.

00:13:03.230 --> 00:13:04.960
And also, this guy
has a mouse pad.

00:13:04.960 --> 00:13:09.170
So I can have a mouse pointer,
which is super handy for touch

00:13:09.170 --> 00:13:10.070
screen apps.

00:13:10.070 --> 00:13:16.890
So this is actually very useful
if you intend to port

00:13:16.890 --> 00:13:18.880
an existing app onto Glass.

00:13:18.880 --> 00:13:20.810
And the reason for that is
that it will allow you to

00:13:20.810 --> 00:13:24.230
start with a fully functional
app, and then gradually adjust

00:13:24.230 --> 00:13:29.560
it to work great with the form
factor, with the display

00:13:29.560 --> 00:13:35.040
technology, with the input
modalities, and whatnot.

00:13:35.040 --> 00:13:37.670
The alternative, if you don't
do that, is to pretty much

00:13:37.670 --> 00:13:38.650
start from scratch.

00:13:38.650 --> 00:13:41.710
And you're going to have to pay
a huge upfront cost to get

00:13:41.710 --> 00:13:44.930
to a version that is kind of,
sort of working, which is,

00:13:44.930 --> 00:13:48.220
believe me, time consuming
and very annoying.

00:13:48.220 --> 00:13:51.250
All right, to demonstrate this a
little further, I'm going to

00:13:51.250 --> 00:13:56.610
go ahead and install the third
app, which is the Notepad app.

00:13:56.610 --> 00:13:59.840
All right, let's do this.

00:13:59.840 --> 00:14:03.490
So just like the previous two
apps, you can find it in the

00:14:03.490 --> 00:14:06.660
Android open source project, or
if you have already an SDK

00:14:06.660 --> 00:14:10.550
installation on your computer,
you can probably find it

00:14:10.550 --> 00:14:12.460
somewhere in the samples
directory.

00:14:12.460 --> 00:14:15.430
So I'm just going to go there.

00:14:15.430 --> 00:14:17.660
It's in the Apps section
that I have Notes.

00:14:17.660 --> 00:14:20.540
And sure enough, I can
operate it as if it

00:14:20.540 --> 00:14:22.510
was on a touch screen.

00:14:22.510 --> 00:14:25.830
Can someone control my screen
time out being [INAUDIBLE].

00:14:25.830 --> 00:14:27.720
OK, so I create a new note.

00:14:27.720 --> 00:14:32.610
And I type, "hello
io." I can save.

00:14:32.610 --> 00:14:34.490
So basically, I can use all the

00:14:34.490 --> 00:14:36.960
functionalities of the app.

00:14:36.960 --> 00:14:39.690
And then, from that point on,
I'm going to gradually roll

00:14:39.690 --> 00:14:42.920
out improvement and make
it better on Glass.

00:14:42.920 --> 00:14:47.080
So to summarize what we've seen,
one, you can easily turn

00:14:47.080 --> 00:14:48.870
on ADB on Glass.

00:14:48.870 --> 00:14:51.480
Two, you can use it
to install apps.

00:14:51.480 --> 00:14:55.410
And three, Bluetooth devices are
quite handy if you want to

00:14:55.410 --> 00:14:57.140
tinker with these apps.

00:14:57.140 --> 00:14:58.494
Back to you, HY.

00:14:58.494 --> 00:15:00.570
HYUNYOUNG SONG: Thank you, PY.

00:15:00.570 --> 00:15:10.970
[APPLAUSE]

00:15:10.970 --> 00:15:13.720
HYUNYOUNG SONG: So now this
time, I am going to share with

00:15:13.720 --> 00:15:17.320
you a video that we received
from one of our Explorers,

00:15:17.320 --> 00:15:21.220
High Fidelity, Inc. They're one
of our Glass Explorers.

00:15:21.220 --> 00:15:24.570
And what they did is they
created an Avatar app using

00:15:24.570 --> 00:15:26.530
the motion sensors
and microphone

00:15:26.530 --> 00:15:28.067
of the Glass platform.

00:15:28.067 --> 00:15:30.750
[VIDEO PLAYBACK]

00:15:30.750 --> 00:15:33.540
-Hey, this is Ryan from
High Fidelity.

00:15:33.540 --> 00:15:36.240
We're obsessed here with low
latency avatar and avatar

00:15:36.240 --> 00:15:37.400
communication.

00:15:37.400 --> 00:15:39.460
And we've been taking advantage
of all this cool

00:15:39.460 --> 00:15:42.413
hardware that's got the
sensors in it, Glass

00:15:42.413 --> 00:15:44.250
being one of those.

00:15:44.250 --> 00:15:47.680
And you can see that we've built
a simple APK here that

00:15:47.680 --> 00:15:51.180
transmits its sensor data and
Glass's sensor data over UDP

00:15:51.180 --> 00:15:54.410
need to our client and
moves the avatar's

00:15:54.410 --> 00:15:56.676
head as I move around.

00:15:56.676 --> 00:16:01.180
We've got it locked in
at about 50 hertz.

00:16:01.180 --> 00:16:02.850
Pretty cool stuff.

00:16:02.850 --> 00:16:11.670
[APPLAUSE]

00:16:11.670 --> 00:16:13.210
HYUNYOUNG SONG: So
all that was fun.

00:16:13.210 --> 00:16:15.710
But there are still things that
you cannot do by just

00:16:15.710 --> 00:16:18.250
enabling ADB.

00:16:18.250 --> 00:16:23.540
You cannot access user data
directory, which has all the

00:16:23.540 --> 00:16:26.970
cool key value pairs and the SQL
Lite 3 database that you

00:16:26.970 --> 00:16:29.050
want to tinker with.

00:16:29.050 --> 00:16:31.490
I see some nods there.

00:16:31.490 --> 00:16:36.080
And just in case you want to
grab, get permissions for

00:16:36.080 --> 00:16:40.080
certain platform resources that
are already held by Glass

00:16:40.080 --> 00:16:42.820
stack applications, then you'd
probably want to delete some

00:16:42.820 --> 00:16:47.240
of the Glass APKs, which you
will not be able to do if

00:16:47.240 --> 00:16:48.760
you're not rid of your device.

00:16:48.760 --> 00:16:50.620
So that's something
you cannot do.

00:16:50.620 --> 00:16:54.580
And last but not least, you
cannot replace the operating

00:16:54.580 --> 00:16:57.450
system of the Glass device.

00:16:57.450 --> 00:17:01.670
Similar to how developers
replace Android operating

00:17:01.670 --> 00:17:02.920
system with [? Cyanogen ?]
mod.

00:17:07.660 --> 00:17:11.569
So now, I'll go onto the second
part of this talk.

00:17:11.569 --> 00:17:14.325
I will go through how you can
gain that root access.

00:17:17.970 --> 00:17:21.500
So there are five commands that
you have to execute to

00:17:21.500 --> 00:17:24.720
gain root access on
off-the-shelf Glass device.

00:17:24.720 --> 00:17:28.569
First command reboots
into the bootloader.

00:17:28.569 --> 00:17:32.310
That implements Fastboot
protocol on top of a USB

00:17:32.310 --> 00:17:33.550
device driver.

00:17:33.550 --> 00:17:36.450
Now, in order for your laptop
to talk with your Glass in

00:17:36.450 --> 00:17:40.070
this bootloader state, you'd
want to use the Fastboot tool

00:17:40.070 --> 00:17:41.970
that you downloaded in a
similar way that you

00:17:41.970 --> 00:17:44.120
downloaded ADB tool.

00:17:44.120 --> 00:17:47.430
Now, one thing to note, though,
is I actually tried on

00:17:47.430 --> 00:17:48.350
multiple platforms.

00:17:48.350 --> 00:17:51.510
And only the Fastboo tool from
Linux platform works.

00:17:51.510 --> 00:17:54.515
And Mac version, unfortunately,
does not work.

00:17:54.515 --> 00:17:55.680
So keep that in mind.

00:17:55.680 --> 00:17:58.710
AUDIENCE: I put that together.

00:17:58.710 --> 00:18:00.710
HYUNYOUNG SONG: Well, I'm glad
you have the answer.

00:18:00.710 --> 00:18:03.180
He's the person that you
want to talk to if

00:18:03.180 --> 00:18:04.464
you want to do that.

00:18:04.464 --> 00:18:05.714
AUDIENCE: [INAUDIBLE].

00:18:08.260 --> 00:18:11.290
HYUNYOUNG SONG: Secondly, you'd
want to execute Fastboot

00:18:11.290 --> 00:18:15.330
OEM Unlock, which removes--

00:18:15.330 --> 00:18:19.560
basically, it gives you access
to override any system

00:18:19.560 --> 00:18:20.740
partitions.

00:18:20.740 --> 00:18:23.870
But what this does is it
removes any security

00:18:23.870 --> 00:18:24.960
precautions.

00:18:24.960 --> 00:18:29.210
And because we didn't want
anybody to actually grab your

00:18:29.210 --> 00:18:32.430
device and execute this command
to access any of your

00:18:32.430 --> 00:18:35.820
important user data, as a
byproduct of this command,

00:18:35.820 --> 00:18:40.170
it'll erase all your user data
and all your cache and make it

00:18:40.170 --> 00:18:45.450
the state as when you execute
factory reset, basically.

00:18:45.450 --> 00:18:48.600
But this doesn't actually
give you root access.

00:18:48.600 --> 00:18:52.650
The third command, which
overrides a boot partition

00:18:52.650 --> 00:18:57.490
with boot image that you can
download from this site,

00:18:57.490 --> 00:19:02.015
probably sometime before the
end of I/O, developer under

00:19:02.015 --> 00:19:06.990
glass under downloads, this will
enable you to actually

00:19:06.990 --> 00:19:08.540
gain root access.

00:19:08.540 --> 00:19:13.540
What boot image does is it
contains RAM disk that defines

00:19:13.540 --> 00:19:17.362
a lot of system properties,
including which shell and

00:19:17.362 --> 00:19:22.470
which services gain access to
which partitions and so forth.

00:19:22.470 --> 00:19:26.010
And finally, you would want to
get out of this bootloader.

00:19:26.010 --> 00:19:29.640
And then, in the regular mode,
you'd want to execute ADB

00:19:29.640 --> 00:19:31.735
root, which will finally
grant you root access.

00:19:35.240 --> 00:19:38.380
Now, I'm going to show you a
video of how this was all

00:19:38.380 --> 00:19:42.680
executed on PY's laptop.

00:19:42.680 --> 00:19:46.310
So first, you'd want to execute
ADB devices to verify

00:19:46.310 --> 00:19:48.250
that your Glass device
is connected.

00:19:48.250 --> 00:19:51.140
And by default, you don't
have access to my

00:19:51.140 --> 00:19:52.940
favorite data partition.

00:19:52.940 --> 00:19:55.850
And so you try to gain by
adb root, but it fails.

00:19:55.850 --> 00:19:57.680
So you execute the first
command, adb

00:19:57.680 --> 00:19:58.630
reboot-bootloader.

00:19:58.630 --> 00:20:00.950
And then, there's a fast
forward because

00:20:00.950 --> 00:20:02.280
this takes some time.

00:20:02.280 --> 00:20:07.210
And now, I verify that it is
in bootloader state by

00:20:07.210 --> 00:20:08.360
Fastboot devices.

00:20:08.360 --> 00:20:10.850
And then, execute Fastboot
OEM unlock.

00:20:10.850 --> 00:20:13.430
But the first one doesn't do
anything but prints out

00:20:13.430 --> 00:20:14.400
warning messages.

00:20:14.400 --> 00:20:15.710
Don't do this!

00:20:15.710 --> 00:20:18.030
And then, if you're really
sure, execute that second

00:20:18.030 --> 00:20:23.230
command, which will erase
the user data.

00:20:23.230 --> 00:20:26.650
It takes about five minutes
because it's about 13 gigs of

00:20:26.650 --> 00:20:30.940
data that it erases as
of this process.

00:20:30.940 --> 00:20:36.320
And then, execute that
overriding command to swap out

00:20:36.320 --> 00:20:38.590
and override boot partition.

00:20:38.590 --> 00:20:44.350
And then, reboot into
normal state.

00:20:44.350 --> 00:20:47.830
Now, still, I don't have access
to that data partition

00:20:47.830 --> 00:20:50.280
because I didn't execute
the last command.

00:20:50.280 --> 00:20:51.290
And so, I execute it.

00:20:51.290 --> 00:20:57.590
And now, voila, yes.

00:20:57.590 --> 00:21:02.350
[APPLAUSE]

00:21:02.350 --> 00:21:05.580
HYUNYOUNG SONG: You have access
to the data partition.

00:21:08.640 --> 00:21:18.830
So when I was asked to do this
demo, or do this talk, I

00:21:18.830 --> 00:21:21.870
wanted to show you an awesome
demo what you can do on a

00:21:21.870 --> 00:21:23.000
Glass device.

00:21:23.000 --> 00:21:26.220
And it had to be all in house--
it cannot be in-house

00:21:26.220 --> 00:21:27.490
Google technology.

00:21:27.490 --> 00:21:33.020
So I asked around and ask our
good friend, Greg, who's a

00:21:33.020 --> 00:21:37.560
Glass engineer who's been in the
team for longer than us.

00:21:37.560 --> 00:21:41.470
He actually programs on his
Glass device using Emacs that

00:21:41.470 --> 00:21:45.610
is running on Ubuntu.

00:21:45.610 --> 00:21:49.870
So I asked him, OK, Greg, what
did you do to have Ubuntu

00:21:49.870 --> 00:21:50.470
running there?

00:21:50.470 --> 00:21:52.360
And he's like, oh,
it's very easy.

00:21:52.360 --> 00:21:56.780
Just download these two apps
from the Play Store.

00:21:56.780 --> 00:21:58.690
The first one will run
the terminal for you.

00:21:58.690 --> 00:22:01.310
And then, the second one, it
downloads the scripts so that

00:22:01.310 --> 00:22:08.280
it downloads the modified
Ubuntu image and all the

00:22:08.280 --> 00:22:09.840
BusyBox and [? ShareRoot ?]

00:22:09.840 --> 00:22:14.000
and all these command line
tools that you'll need in

00:22:14.000 --> 00:22:15.360
order to set up an Ubuntu
environment.

00:22:15.360 --> 00:22:17.530
So we did that.

00:22:17.530 --> 00:22:23.020
And now, PY's actually going to
show you a demo of a device

00:22:23.020 --> 00:22:25.030
that is running Ubuntu
on top of Glass.

00:22:27.610 --> 00:22:29.960
PIERRE-YVES LALIGAND: All
right, thanks, HY.

00:22:29.960 --> 00:22:32.040
So you may have seen
that I switched

00:22:32.040 --> 00:22:33.350
devices between the demo.

00:22:33.350 --> 00:22:35.470
So those are pretty
much identical.

00:22:35.470 --> 00:22:37.310
The only difference is that this
one went through all the

00:22:37.310 --> 00:22:39.300
steps that you just
saw in the video.

00:22:39.300 --> 00:22:41.810
And also, as you can see, we've
installed the two apps

00:22:41.810 --> 00:22:44.060
that HY just mentioned.

00:22:44.060 --> 00:22:46.030
So I'm going to go ahead
and just enter

00:22:46.030 --> 00:22:47.120
the terminal emulator.

00:22:47.120 --> 00:22:51.670
And the first thing I want to do
is switch to the Superuser.

00:22:51.670 --> 00:22:53.180
All right.

00:22:53.180 --> 00:22:55.250
And despite that error message,
I can tell you I have

00:22:55.250 --> 00:22:56.750
superpowers right now.

00:22:56.750 --> 00:23:01.810
So I'm then going to go to the
directory where the images

00:23:01.810 --> 00:23:05.910
were installed, that's
this one.

00:23:05.910 --> 00:23:07.430
Let's see if we have
everything there.

00:23:07.430 --> 00:23:08.800
Yep, we have the images.

00:23:08.800 --> 00:23:11.475
And we even have this little
strip that actually does all

00:23:11.475 --> 00:23:14.220
the hard work of starting
everything.

00:23:14.220 --> 00:23:16.000
Oops, let me try that again.

00:23:18.560 --> 00:23:20.140
Here it is.

00:23:20.140 --> 00:23:22.610
Basically, what it does, it
mounts the images and just

00:23:22.610 --> 00:23:24.040
initializes the operating
system.

00:23:24.040 --> 00:23:25.520
And that's it.

00:23:25.520 --> 00:23:27.830
So let's try to run it now.

00:23:27.830 --> 00:23:30.600
[INAUDIBLE].

00:23:30.600 --> 00:23:31.130
Here we go.

00:23:31.130 --> 00:23:32.480
Oh, there's stuff happening.

00:23:32.480 --> 00:23:34.040
That's usually good, or not.

00:23:34.040 --> 00:23:37.150
So let's see now what we
think we're doing if I

00:23:37.150 --> 00:23:38.320
can find the backslash.

00:23:38.320 --> 00:23:40.855
Here we go.

00:23:40.855 --> 00:23:44.600
Now, let's check which
version of Linux

00:23:44.600 --> 00:23:46.462
we think we're running.

00:23:46.462 --> 00:23:50.580
Yup, this is Ubuntu, and it
has an SSH, I think a VNC

00:23:50.580 --> 00:23:54.580
server, and a whole lot of
features that you can then use

00:23:54.580 --> 00:23:56.960
on Glass, including Emacs.

00:23:56.960 --> 00:23:58.304
Back to you, HY.

00:23:58.304 --> 00:24:09.240
[APPLAUSE]

00:24:09.240 --> 00:24:11.240
HYUNYOUNG SONG: So the takeaway
message from this

00:24:11.240 --> 00:24:16.990
talk is that during this talk,
I introduced to you two modes

00:24:16.990 --> 00:24:20.180
where you can explore your Glass
platform, the debug mode

00:24:20.180 --> 00:24:22.820
and root mode.

00:24:22.820 --> 00:24:27.960
Now, I want to make some
disclaimers here

00:24:27.960 --> 00:24:29.340
on each one of these.

00:24:29.340 --> 00:24:35.140
So the way that you push Android
APKs on your Glass

00:24:35.140 --> 00:24:38.310
device and use it, this is
not really Glass team's

00:24:38.310 --> 00:24:42.600
recommended way of creating
a Glass experience.

00:24:42.600 --> 00:24:45.895
It's more for you to actually
like play around and go nuts

00:24:45.895 --> 00:24:47.340
with whatever you want to do.

00:24:47.340 --> 00:24:52.370
That's why we actually did this
demo and showed you all

00:24:52.370 --> 00:24:53.710
these methods.

00:24:53.710 --> 00:24:59.085
And in terms of gaining that
root access, even though there

00:24:59.085 --> 00:25:01.930
are recovery methods, there is
a chance that depending on

00:25:01.930 --> 00:25:05.160
what you do, your device may get
stuck in a state where it

00:25:05.160 --> 00:25:10.140
will be difficult to recover, in
which case Google will not

00:25:10.140 --> 00:25:11.090
be supporting.

00:25:11.090 --> 00:25:12.960
So keep that in mind.

00:25:12.960 --> 00:25:15.350
And when you do root your
device, you have to be really

00:25:15.350 --> 00:25:17.530
sure that you want to do it.

00:25:17.530 --> 00:25:22.750
But putting these disclaimers
aside, play with the platform

00:25:22.750 --> 00:25:25.300
and share with us and share
with the world the awesome

00:25:25.300 --> 00:25:27.950
work that you can do on Glass.

00:25:27.950 --> 00:25:31.930
And when you do, these are some
of the communities and

00:25:31.930 --> 00:25:36.070
websites that you can ask
questions, get technical tips.

00:25:36.070 --> 00:25:40.130
And often, actually, PY and
myself go here, go to these

00:25:40.130 --> 00:25:43.420
sites, and see what people are
doing, and talk about it.

00:25:43.420 --> 00:25:46.460
And we're excited that you
guys are doing this.

00:25:46.460 --> 00:25:51.400
And for people who actually have
a Glass device or just

00:25:51.400 --> 00:25:55.330
picked it up, there's also
Explorer community that you

00:25:55.330 --> 00:25:59.510
can join, where you can also get
more information on Mirror

00:25:59.510 --> 00:26:03.800
API, Hacking Glass, and
all general questions.

00:26:03.800 --> 00:26:06.445
So do visit these websites.

00:26:09.050 --> 00:26:11.520
And on that note, thank
you so much.

00:26:17.114 --> 00:26:23.910
[APPLAUSE]

00:26:23.910 --> 00:26:25.160
HYUNYOUNG SONG: And we'll
take questions.

00:26:28.816 --> 00:26:30.640
AUDIENCE: Hi, I have
a question.

00:26:30.640 --> 00:26:32.710
Are you going to release a
factory image that we can

00:26:32.710 --> 00:26:35.060
flash Glass back to its original
configuration?

00:26:35.060 --> 00:26:36.310
PIERRE-YVES LALIGAND: Yes.

00:26:47.644 --> 00:26:48.612
HYUNYOUNG SONG: Huh?

00:26:48.612 --> 00:26:50.070
AUDIENCE: [INAUDIBLE]?

00:26:50.070 --> 00:26:50.640
PIERRE-YVES LALIGAND:
It's there.

00:26:50.640 --> 00:26:52.940
HYUNYOUNG SONG: Well,
it's public now.

00:26:52.940 --> 00:26:54.250
PIERRE-YVES LALIGAND: So to
answer your question, yes,

00:26:54.250 --> 00:26:56.790
we're going to make the factory
images available for

00:26:56.790 --> 00:26:59.930
pretty much any version that
we're going to publish.

00:26:59.930 --> 00:27:01.180
AUDIENCE: Thank you.

00:27:04.383 --> 00:27:06.530
PIERRE-YVES LALIGAND:
Yes, sir.

00:27:06.530 --> 00:27:07.490
AUDIENCE: Hi.

00:27:07.490 --> 00:27:08.950
I'm Cedric.

00:27:08.950 --> 00:27:11.460
I'm a robotic engineering
student.

00:27:11.460 --> 00:27:16.220
So I want to know if it's
possible to connect Glass to

00:27:16.220 --> 00:27:22.290
older hardware, like Arduino and
everything related to it.

00:27:22.290 --> 00:27:23.710
PIERRE-YVES LALIGAND: That's
a good question.

00:27:23.710 --> 00:27:28.250
Actually, so as you probably
imagine, the Glass device has

00:27:28.250 --> 00:27:31.310
a micro USB port, and you
can connect stuff to it.

00:27:31.310 --> 00:27:35.200
I personally haven't tried and
see what you can do with it.

00:27:35.200 --> 00:27:39.900
But I invite you to give it a
shot if you can, and then let

00:27:39.900 --> 00:27:40.810
us know how it goes.

00:27:40.810 --> 00:27:44.190
And then, from there, we can
take your feedback back to the

00:27:44.190 --> 00:27:46.680
team and see how we can
make it better for

00:27:46.680 --> 00:27:48.330
this kind of hacking.

00:27:48.330 --> 00:27:49.671
AUDIENCE: OK, thank you.

00:27:49.671 --> 00:27:50.553
PIERRE-YVES LALIGAND: Sure.

00:27:50.553 --> 00:27:51.880
HYUNYOUNG SONG: Let's
take over there.

00:27:51.880 --> 00:27:54.250
AUDIENCE: Hello, hello.

00:27:54.250 --> 00:27:56.920
So one of the issues with
having ADB debug mode

00:27:56.920 --> 00:27:59.550
available from the settings menu
is that it's very easy to

00:27:59.550 --> 00:28:02.600
turn that feature on without--

00:28:02.600 --> 00:28:04.010
because there's no kind
of PIN code lock.

00:28:04.010 --> 00:28:04.890
I mean, if I were to, for
instance, have access to your

00:28:04.890 --> 00:28:08.040
Glass for even, like, 30
seconds, I can very easily get

00:28:08.040 --> 00:28:08.980
ADB debug mode on.

00:28:08.980 --> 00:28:11.780
At what point, I can now install
services on your

00:28:11.780 --> 00:28:14.200
device, even without having
to get root access.

00:28:14.200 --> 00:28:16.330
And then, of course, I can
oftentimes use an exploit now

00:28:16.330 --> 00:28:17.790
in order to escalate
to root access.

00:28:17.790 --> 00:28:20.580
I was wondering if the Glass
team had any plans on being

00:28:20.580 --> 00:28:22.960
able to put some kind of
security on the device when

00:28:22.960 --> 00:28:23.740
it's just sitting?

00:28:23.740 --> 00:28:24.950
PIERRE-YVES LALIGAND: Yeah,
that's definitely an issue

00:28:24.950 --> 00:28:26.200
that we have in mind.

00:28:26.200 --> 00:28:28.550
And we have people working
on it currently.

00:28:28.550 --> 00:28:29.340
So stay tuned.

00:28:29.340 --> 00:28:31.010
HYUNYOUNG SONG: So notice,
this is actually Explorer

00:28:31.010 --> 00:28:32.850
edition that you guys
are trying out.

00:28:32.850 --> 00:28:35.900
On the consumer launch version,
there will be more

00:28:35.900 --> 00:28:39.840
security precaution settings
that you'll be able to make

00:28:39.840 --> 00:28:41.660
sure that they're safe.

00:28:41.660 --> 00:28:43.680
AUDIENCE: As somebody who has
the Explorer edition, and

00:28:43.680 --> 00:28:45.740
purposely not wearing it here
at I/O today because I'd be

00:28:45.740 --> 00:28:47.300
concerned that somebody, for
instance, would be able to get

00:28:47.300 --> 00:28:52.880
into it, it just is concerning
even before release right now.

00:28:52.880 --> 00:28:54.540
PIERRE-YVES LALIGAND: I think
you can trust these people.

00:28:54.540 --> 00:28:55.790
They're cool.

00:28:58.950 --> 00:28:59.440
Sir?

00:28:59.440 --> 00:29:00.050
AUDIENCE: Hi.

00:29:00.050 --> 00:29:01.160
My name is Mark.

00:29:01.160 --> 00:29:04.090
I would like to know, because
you just flashed a new boot

00:29:04.090 --> 00:29:07.220
image for a rooted mode, is
there a boot image available

00:29:07.220 --> 00:29:08.800
to go back to the [? OTA ?]

00:29:08.800 --> 00:29:10.115
updates mode?

00:29:10.115 --> 00:29:11.740
PIERRE-YVES LALIGAND: So I think
that goes back to the

00:29:11.740 --> 00:29:13.360
question the other
gentleman had.

00:29:13.360 --> 00:29:15.445
We're going to make all the
factory images available.

00:29:15.445 --> 00:29:18.500
And that will include all the
images you need to do that.

00:29:18.500 --> 00:29:21.080
AUDIENCE: OK, that's great.

00:29:21.080 --> 00:29:21.750
PIERRE-YVES LALIGAND:
Yes, sir.

00:29:21.750 --> 00:29:23.350
AUDIENCE: Hi, my
name is Ethan.

00:29:23.350 --> 00:29:26.140
I have to say I'm really excited
about the debug mode

00:29:26.140 --> 00:29:28.680
capabilities, and thank
you guys for bringing

00:29:28.680 --> 00:29:30.750
it to all of us.

00:29:30.750 --> 00:29:32.010
Two questions come to mind.

00:29:32.010 --> 00:29:34.640
One is, is it possible to get to
the same voice recognition

00:29:34.640 --> 00:29:36.840
that you use in the core app?

00:29:36.840 --> 00:29:37.290
Number one.

00:29:37.290 --> 00:29:41.902
And number two, the on-head
detection, I don't know what

00:29:41.902 --> 00:29:44.150
the sensor is, can we get
access to that, as

00:29:44.150 --> 00:29:46.310
well, on our own?

00:29:46.310 --> 00:29:48.020
PIERRE-YVES LALIGAND: So for the
first part of the question

00:29:48.020 --> 00:29:50.730
about voice recognition, I
think that's definitely

00:29:50.730 --> 00:29:54.280
something that we're thinking
about integrating and allowing

00:29:54.280 --> 00:29:56.210
you to access.

00:29:56.210 --> 00:29:58.300
I'm not 100% sure of
what the state is.

00:29:58.300 --> 00:30:01.200
But you might want to try to
use the standard recognizer

00:30:01.200 --> 00:30:04.420
Intents that are available on
Android and see what it does.

00:30:04.420 --> 00:30:07.750
But I think we're working
on trying to bring

00:30:07.750 --> 00:30:09.360
that level of support.

00:30:09.360 --> 00:30:12.960
As for on-head detection, I
don't think there's anything

00:30:12.960 --> 00:30:13.970
available at this point.

00:30:13.970 --> 00:30:18.322
But do you have any other
application in mind for that?

00:30:18.322 --> 00:30:20.140
AUDIENCE: I'm sure I could
think of something.

00:30:20.140 --> 00:30:21.420
PIERRE-YVES LALIGAND: Great!

00:30:21.420 --> 00:30:23.256
Just let us know.

00:30:23.256 --> 00:30:25.110
AUDIENCE: Thank you.

00:30:25.110 --> 00:30:25.960
PIERRE-YVES LALIGAND:
Yes, sir.

00:30:25.960 --> 00:30:26.190
AUDIENCE: Hello.

00:30:26.190 --> 00:30:27.310
My name's Dante.

00:30:27.310 --> 00:30:28.740
Looking around the room, there
are a lot of people with

00:30:28.740 --> 00:30:31.600
Glass, but most people
still don't have it.

00:30:31.600 --> 00:30:35.220
Is there any time frame we could
expect from Google, like

00:30:35.220 --> 00:30:38.650
a bigger roll out to more
developers, more Explorers?

00:30:38.650 --> 00:30:40.680
PIERRE-YVES LALIGAND: So
currently, the Explorer

00:30:40.680 --> 00:30:42.130
program is closed.

00:30:42.130 --> 00:30:45.730
We might reopen it for
applications at some point.

00:30:45.730 --> 00:30:48.250
I think we've already announced
that we're trying to

00:30:48.250 --> 00:30:52.180
shoot for having a consumer
release by

00:30:52.180 --> 00:30:52.930
the end of the year.

00:30:52.930 --> 00:30:55.450
We're working really hard for
that when we're not giving

00:30:55.450 --> 00:30:59.020
talks at I/O. So stay
tuned, again.

00:30:59.020 --> 00:31:01.470
There's no more information
that I can

00:31:01.470 --> 00:31:02.500
give you at this point.

00:31:02.500 --> 00:31:03.890
But we're trying to.

00:31:03.890 --> 00:31:05.630
AUDIENCE: Thank you.

00:31:05.630 --> 00:31:06.500
PIERRE-YVES LALIGAND:
Yes, sir.

00:31:06.500 --> 00:31:10.060
AUDIENCE: So given that you're
making an official native dev

00:31:10.060 --> 00:31:13.910
kit available, how do you see
those types of apps being

00:31:13.910 --> 00:31:15.610
delivered to consumer devices?

00:31:15.610 --> 00:31:16.950
Is there going to be
a store or some

00:31:16.950 --> 00:31:18.590
kind of delivery platform?

00:31:18.590 --> 00:31:21.240
PIERRE-YVES LALIGAND: This
delivery is a big part of our

00:31:21.240 --> 00:31:21.680
work, right?

00:31:21.680 --> 00:31:25.020
We can't just provide an SDK and
hope that people will find

00:31:25.020 --> 00:31:26.670
a way to install apps.

00:31:26.670 --> 00:31:29.790
So as HY mentioned, this is
something we're pretty

00:31:29.790 --> 00:31:32.320
actively working
on these days.

00:31:32.320 --> 00:31:33.770
Again, unfortunately,
I have nothing

00:31:33.770 --> 00:31:34.880
official to announce here.

00:31:34.880 --> 00:31:37.530
But rest assured, there's going
to be a good delivery

00:31:37.530 --> 00:31:39.960
mechanism for those, just as
you would expect from a

00:31:39.960 --> 00:31:41.190
regular Android device.

00:31:41.190 --> 00:31:43.310
HYUNYOUNG SONG: But for the
Glass wearers, you can already

00:31:43.310 --> 00:31:46.590
go to my Glass website
[INAUDIBLE]

00:31:46.590 --> 00:31:50.040
and install some of the
[INAUDIBLE] and Path and some

00:31:50.040 --> 00:31:52.700
of those third party apps.

00:31:52.700 --> 00:31:55.660
So you can install those already
and try them out.

00:31:55.660 --> 00:31:59.360
And if we figured that that is
where we should also keep the

00:31:59.360 --> 00:32:01.050
apps, that could be one place.

00:32:01.050 --> 00:32:02.090
There's actually--

00:32:02.090 --> 00:32:05.400
this is an open question,
really.

00:32:05.400 --> 00:32:06.260
PIERRE-YVES LALIGAND: Sir?

00:32:06.260 --> 00:32:08.120
AUDIENCE: I'm Luca.

00:32:08.120 --> 00:32:08.800
Two questions.

00:32:08.800 --> 00:32:15.390
One, once it's rooted, can I
get access to the camera

00:32:15.390 --> 00:32:18.700
stream, and just standard
Android, or is there something

00:32:18.700 --> 00:32:19.595
funky with that?

00:32:19.595 --> 00:32:22.899
HYUNYOUNG SONG: [SHAKES HEAD]

00:32:22.899 --> 00:32:25.220
PIERRE-YVES LALIGAND: Can
I get this mic back?

00:32:25.220 --> 00:32:26.294
HYUNYOUNG SONG: Or I can talk.

00:32:26.294 --> 00:32:27.250
PIERRE-YVES LALIGAND:
So actually, I'm

00:32:27.250 --> 00:32:28.570
going to speak louder.

00:32:28.570 --> 00:32:30.600
So actually, you don't even
need to root for that.

00:32:30.600 --> 00:32:32.910
You can just use the standard
camera APIs or

00:32:32.910 --> 00:32:34.180
even the camera Intents.

00:32:34.180 --> 00:32:36.630
And you're going to get
access to the camera.

00:32:36.630 --> 00:32:39.180
It's a standard Android
device.

00:32:39.180 --> 00:32:39.710
AUDIENCE: Oh, okay.

00:32:39.710 --> 00:32:41.650
And what about NDK support?

00:32:41.650 --> 00:32:42.810
That's the second question.

00:32:42.810 --> 00:32:43.780
PIERRE-YVES LALIGAND: Native.

00:32:43.780 --> 00:32:47.980
As part of the SDK effort, we're
also looking at NDK.

00:32:47.980 --> 00:32:49.560
Again, nothing to
announce here.

00:32:49.560 --> 00:32:50.995
But I think that would be
pretty cool to have

00:32:50.995 --> 00:32:51.290
something--

00:32:51.290 --> 00:32:53.740
AUDIENCE: But if I root
it, I can get full NDK

00:32:53.740 --> 00:32:54.430
access, then, right?

00:32:54.430 --> 00:32:54.740
PIERRE-YVES LALIGAND: Yeah.

00:32:54.740 --> 00:32:55.990
AUDIENCE: Okay, cool, thanks.

00:32:59.070 --> 00:33:01.240
AUDIENCE: Somewhat related
to that question.

00:33:01.240 --> 00:33:03.180
Do we have access to-- without
rooting, do we have access to

00:33:03.180 --> 00:33:08.060
all of the hardware, including
that eye-tracking whatever

00:33:08.060 --> 00:33:09.310
thing on the inside?

00:33:09.310 --> 00:33:10.270
PIERRE-YVES LALIGAND: That's
the same thing that the

00:33:10.270 --> 00:33:11.230
gentleman before.

00:33:11.230 --> 00:33:13.630
I don't think there's
anything yet.

00:33:13.630 --> 00:33:15.350
You can try.

00:33:15.350 --> 00:33:15.760
AUDIENCE: Okay.

00:33:15.760 --> 00:33:19.970
So the demo with the head moving
around, the video that

00:33:19.970 --> 00:33:22.080
you played, that did not require
rooting, correct?

00:33:22.080 --> 00:33:24.440
PIERRE-YVES LALIGAND: No, no,
I think they were just using

00:33:24.440 --> 00:33:28.131
the accelometer, magnetometer,
and gyroscope, and that's it.

00:33:28.131 --> 00:33:29.013
AUDIENCE: Okay.

00:33:29.013 --> 00:33:30.460
AUDIENCE: Hi.

00:33:30.460 --> 00:33:33.334
My name is [? Walam ?].

00:33:33.334 --> 00:33:36.860
I know we don't need an Android
physical device to

00:33:36.860 --> 00:33:40.290
develop for Android because
we have the emulator.

00:33:40.290 --> 00:33:42.930
Is there a similar plan to
ship something like an

00:33:42.930 --> 00:33:47.400
emulator for the Glass so that
the ones who don't have it yet

00:33:47.400 --> 00:33:48.470
explore it?

00:33:48.470 --> 00:33:51.130
PIERRE-YVES LALIGAND: That's
a good question, actually

00:33:51.130 --> 00:33:54.280
something that we talked about
in our design team.

00:33:54.280 --> 00:33:58.060
I think that's something that
we can definitely do.

00:33:58.060 --> 00:34:01.130
And I hope that we can provide
something along those lines.

00:34:01.130 --> 00:34:04.770
But really, I think in order to
correctly develop an app, I

00:34:04.770 --> 00:34:06.690
think you really need
at least one device.

00:34:06.690 --> 00:34:08.560
Because you need to
see how it feels.

00:34:08.560 --> 00:34:12.320
It's really, really different in
terms of experience from a

00:34:12.320 --> 00:34:13.960
phone or a tablet.

00:34:13.960 --> 00:34:17.659
But as part of the SDK for it,
of course we're thinking about

00:34:17.659 --> 00:34:21.330
not only APIs, but also tools
that we can provide you with

00:34:21.330 --> 00:34:24.219
so that you can do your job
and build awesome apps.

00:34:27.199 --> 00:34:27.870
AUDIENCE: Hey.

00:34:27.870 --> 00:34:31.300
Any plans to expose the Labs
features to users?

00:34:31.300 --> 00:34:31.840
PIERRE-YVES LALIGAND: What?

00:34:31.840 --> 00:34:32.409
Do what?

00:34:32.409 --> 00:34:34.130
AUDIENCE: The Labs features
in the framework?

00:34:34.130 --> 00:34:35.830
HYUNYOUNG SONG: What is Labs?

00:34:35.830 --> 00:34:37.219
I don't know what Labs are.

00:34:40.380 --> 00:34:41.139
PIERRE-YVES LALIGAND: Which--?

00:34:41.139 --> 00:34:43.900
AUDIENCE: There's Lab features
in the Glass software which,

00:34:43.900 --> 00:34:46.139
like, turn on the browser, turn
on [? Win ?] support,

00:34:46.139 --> 00:34:48.520
turn on voice, all throughout
the device.

00:34:48.520 --> 00:34:49.920
PIERRE-YVES LALIGAND: This
is not something I

00:34:49.920 --> 00:34:51.320
think we plan to expose.

00:34:51.320 --> 00:34:53.750
This is something just internal
at this point.

00:34:53.750 --> 00:34:54.920
AUDIENCE: Okay, thanks.

00:34:54.920 --> 00:34:56.280
PIERRE-YVES LALIGAND: I think
we're going to take the last

00:34:56.280 --> 00:34:58.665
question because we're running
out of time, so,

00:34:58.665 --> 00:34:59.300
you're the lucky one.

00:34:59.300 --> 00:35:00.975
AUDIENCE: My name is
Arthur Benhoff.

00:35:00.975 --> 00:35:03.750
I've been building a few apps
using the Mirror API.

00:35:03.750 --> 00:35:06.110
I'm really excited about this.

00:35:06.110 --> 00:35:10.250
I want to know if there's a way
to launch an APK in normal

00:35:10.250 --> 00:35:12.190
mode from the Timeline.

00:35:12.190 --> 00:35:16.110
And if so, can I know what
the user's identity is?

00:35:16.110 --> 00:35:18.240
PIERRE-YVES LALIGAND: So what do
you mean by "normal mode?"

00:35:18.240 --> 00:35:22.450
AUDIENCE: So I know I can
install an APK and

00:35:22.450 --> 00:35:24.210
launch it using ADB.

00:35:24.210 --> 00:35:27.900
But how do I start an
application using--?

00:35:27.900 --> 00:35:29.390
PIERRE-YVES LALIGAND: That's
a good question.

00:35:29.390 --> 00:35:33.270
So again, as part of the SDK
effort, we're really looking

00:35:33.270 --> 00:35:38.400
at the entry points into the
existing Glass experience.

00:35:38.400 --> 00:35:41.470
I think we have a couple
of ideas at this point.

00:35:41.470 --> 00:35:43.890
If you have some more, please
let us because we'd be really

00:35:43.890 --> 00:35:44.710
interested.

00:35:44.710 --> 00:35:47.430
But yeah, we're going to have
something along this line.

00:35:47.430 --> 00:35:48.105
AUDIENCE: What about
the credentials?

00:35:48.105 --> 00:35:50.446
HYUNYOUNG SONG: Just
one more, Alan.

00:35:50.446 --> 00:35:52.400
AUDIENCE: Alan Furst, I know
I'm not going to make it--

00:35:52.400 --> 00:35:54.070
PIERRE-YVES LALIGAND: So I think
we're running out of

00:35:54.070 --> 00:35:54.700
time right now.

00:35:54.700 --> 00:35:56.980
But we're going to be hanging
out outside of the room if you

00:35:56.980 --> 00:35:57.800
have more questions.

00:35:57.800 --> 00:35:59.780
So thanks again for coming up.

00:35:59.780 --> 00:36:00.680
HYUNYOUNG SONG: So a
personal question.

00:36:00.680 --> 00:36:01.580
Thank you.

00:36:01.580 --> 00:36:09.950
[APPLAUSE]

