WEBVTT
Kind: captions
Language: en

00:00:00.390 --> 00:00:04.415
For a map, we'll now add some context around the history of the World Cup,

00:00:04.415 --> 00:00:08.670
by plotting a circle on the map for each year of the World Cup.

00:00:08.670 --> 00:00:11.910
Where its radius represents the attendance for that year.

00:00:11.910 --> 00:00:17.350
One thing to note is that I abstracted our roll up aggregation function,

00:00:17.350 --> 00:00:23.350
into a function defined above as agg year, for more re-usability and clarity.

00:00:23.350 --> 00:00:26.190
The process of overlaying circles on our map

00:00:26.190 --> 00:00:30.540
is identical to what we did when we create a scatter plot.

00:00:30.540 --> 00:00:35.311
The only difference in this case, is that we're using our nested aggregation of

00:00:35.311 --> 00:00:41.210
our data, and if you remember internally, our aggregation used a projection.

00:00:41.210 --> 00:00:42.310
In our scatter plot,

00:00:42.310 --> 00:00:47.390
we used a scale to convert from our data domain to our pixel range.

00:00:47.390 --> 00:00:50.190
But since we're dealing with geographic coordinates.

00:00:50.190 --> 00:00:54.890
We use a projection to convert from a longitude and latitude domain,

00:00:54.890 --> 00:01:00.750
to pixel values, which we've already computed in center x and center y.

00:01:00.750 --> 00:01:06.110
And just as in most of the charts we've made in D3, we first append a group,

00:01:06.110 --> 00:01:10.170
we're going to be labeling it with class bubble.

00:01:10.170 --> 00:01:14.950
We select all the circles in that group already, which in this case is empty.

00:01:14.950 --> 00:01:19.370
Bind data to those circles resulting in empty place holders,

00:01:19.370 --> 00:01:23.530
of which then make an enter selection corresponding to

00:01:23.530 --> 00:01:27.020
all of the empty place holders with data bound to them.

00:01:27.020 --> 00:01:29.720
And for each of those we append a circle on our map.

