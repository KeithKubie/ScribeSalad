WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
And I think the correct answer here is this one above.

00:00:03.000 --> 00:00:06.000
Again, it's a bit subjective using these small examples,

00:00:06.000 --> 00:00:09.000
but otherwise it's just too complicated for you to see and explain.

00:00:09.000 --> 00:00:11.000
So my point here is basically this,

00:00:11.000 --> 00:00:16.000
if you have decided what you're going to do with x1, x2, and x3,

00:00:16.000 --> 00:00:18.000
then the following thing happens.

00:00:18.000 --> 00:00:20.000
You've already decided what you're going to do with x1,

00:00:20.000 --> 00:00:22.000
you've already decided what you're going to do with x2,

00:00:22.000 --> 00:00:25.000
and you've already decided what you're going to do with x3,

00:00:25.000 --> 00:00:28.000
and in that case, what remains is an instance of 2-SAT,

00:00:28.000 --> 00:00:30.000
and that is solvable in polynomial time.

00:00:30.000 --> 00:00:32.000
Of course this is a very simple example,

00:00:32.000 --> 00:00:34.000
so you could have already figured out how to solve it.

00:00:34.000 --> 00:00:36.000
So there's many different ways to solve it,

00:00:36.000 --> 00:00:39.000
but I just wanted to show you what I mean by distance

00:00:39.000 --> 00:00:41.000
of a 3-SAT instance to a 2-SAT instance,

00:00:41.000 --> 00:00:44.000
because over here you decide what to do with these values.

00:00:44.000 --> 00:00:46.000
Well, you have it figured out for this clause here,

00:00:46.000 --> 00:00:48.000
you have it figured out for this one here,

00:00:48.000 --> 00:00:50.000
but you have not figured it out for that one here.

00:00:50.000 --> 00:00:54.000
So in a way, the above formula is closer to a

00:00:54.000 --> 00:00:57.000
polynomial-time solvable instance of SAT than the one down here.

00:00:57.000 --> 00:01:00.000
But of course you would need a really, really large and tedious

00:01:00.000 --> 00:01:03.000
Boolean formula to actually take advantage of this.

00:01:03.000 --> 00:01:06.000
But in fact, many professional SAT solvers or SAT solving packages

00:01:06.000 --> 00:01:08.000
actually make use of this fact.

00:01:08.000 --> 00:01:10.000
There are a number of variants of SAT

00:01:10.000 --> 00:01:13.000
that are known to be solvable in polynomial time,

00:01:13.000 --> 00:01:16.000
and what these solvers do is they will try to figure out

00:01:16.000 --> 00:01:19.000
if the Boolean formula that they are given is actually close

00:01:19.000 --> 00:01:21.000
to one of those polynomial-time solvable instances.

00:01:21.000 --> 00:01:24.000
Actually, I don't even know if somebody has considered

00:01:24.000 --> 00:01:27.000
this as a parameter for fixed-parameter tractability,

00:01:27.000 --> 00:01:29.000
so there might actually be an open research

00:01:29.000 --> 99:59:59.000
problem for you here if you're ready to get into it.

