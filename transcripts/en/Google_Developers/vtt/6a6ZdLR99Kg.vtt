WEBVTT
Kind: captions
Language: en

00:01:11.900 --> 00:01:14.260
GUS CLASS: Hello, Google
Developers, and welcome to

00:01:14.260 --> 00:01:17.590
this week's episode of "Google+
Developers Live."

00:01:17.590 --> 00:01:19.950
Today we're going to be talking
about targeted sharing

00:01:19.950 --> 00:01:20.810
on Android.

00:01:20.810 --> 00:01:23.360
I'm Gus Class, a Developer
Programs Engineer for Google+.

00:01:23.360 --> 00:01:24.880
And with me here
is Chirag Shah.

00:01:24.880 --> 00:01:27.080
CHIRAG SHAH: I'm Chirag Shah,
and I'm a Software Engineer on

00:01:27.080 --> 00:01:28.915
the Google+ Android SDK.

00:01:28.915 --> 00:01:29.770
GUS CLASS: So, great.

00:01:29.770 --> 00:01:32.420
So today we're going to
be talking again about

00:01:32.420 --> 00:01:36.380
configuring and targeting
interactive posts on Android.

00:01:36.380 --> 00:01:39.640
We'll also talk about how you
can think about targeting

00:01:39.640 --> 00:01:41.290
these posts on Android.

00:01:41.290 --> 00:01:44.650
So as I go through the code,
Chirag here, our Android

00:01:44.650 --> 00:01:48.740
expert, will be giving us some
pointers on what's going on

00:01:48.740 --> 00:01:52.080
behind the scenes and some
more information on

00:01:52.080 --> 00:01:53.490
development with Android
for Google+.

00:01:53.490 --> 00:01:55.520
So before we begin, Chirag.

00:01:55.520 --> 00:01:57.270
Do you want to tell us a
little bit more about

00:01:57.270 --> 00:01:58.510
interactive posts?

00:01:58.510 --> 00:02:01.000
CHIRAG SHAH: So, interactive
posts brings users directly to

00:02:01.000 --> 00:02:03.900
your Apple website with a
call-to-action button.

00:02:03.900 --> 00:02:06.340
Clicking the call-to-action
button will bring recipients

00:02:06.340 --> 00:02:08.820
to a specific place in
your app where they

00:02:08.820 --> 00:02:11.326
can perform an action.

00:02:11.326 --> 00:02:12.170
GUS CLASS: Awesome.

00:02:12.170 --> 00:02:14.990
So before we get into the
code, let's start with

00:02:14.990 --> 00:02:17.930
configuring the application from
the developer console.

00:02:17.930 --> 00:02:23.450
So, on my screen you can see the
Google API's console open.

00:02:23.450 --> 00:02:24.730
And what I'm going to
do is I'm going to

00:02:24.730 --> 00:02:27.500
create a new project.

00:02:27.500 --> 00:02:29.070
And then I'm going to give
this a meaningful name.

00:02:32.290 --> 00:02:36.050
And just so that you know, this
is also documented on

00:02:36.050 --> 00:02:41.890
developers.googl
e.com/plus/quickstart/android.

00:02:41.890 --> 00:02:43.980
And so if you want to get
started on there, it's an easy

00:02:43.980 --> 00:02:47.970
way to quickly get going with
developing on Android.

00:02:47.970 --> 00:02:50.090
So all the steps that I'm
seeing here are also

00:02:50.090 --> 00:02:52.840
documented on the web if you
want to follow along.

00:02:52.840 --> 00:02:56.630
So after I have turned on the
Google+ service, then I'm

00:02:56.630 --> 00:02:59.820
going to enable API access
by creating an

00:02:59.820 --> 00:03:01.350
OAuth 2.0 client ID.

00:03:01.350 --> 00:03:02.990
And again, you'll just have
to put in a meaningful

00:03:02.990 --> 00:03:05.590
product name here.

00:03:05.590 --> 00:03:08.260
And then after you've done that,
you're going to set up

00:03:08.260 --> 00:03:09.440
an Android application.

00:03:09.440 --> 00:03:11.680
So this is going to be an
installed application.

00:03:11.680 --> 00:03:13.680
It's going to be installed
on the Android devices.

00:03:13.680 --> 00:03:15.740
And so I'm going to click
Installed Application and then

00:03:15.740 --> 00:03:17.240
click Android.

00:03:17.240 --> 00:03:18.860
And there's two parameters
that I'm going to

00:03:18.860 --> 00:03:20.220
have to fill out here.

00:03:20.220 --> 00:03:26.750
The first is going to be the
package name, and so you just

00:03:26.750 --> 00:03:28.560
put in the app name here
that you'll get from

00:03:28.560 --> 00:03:30.000
your Android project.

00:03:30.000 --> 00:03:33.250
And then the second is going to
be the signing certificate

00:03:33.250 --> 00:03:34.180
fingerprint.

00:03:34.180 --> 00:03:38.090
And creating this fingerprint,
you're going to use the key

00:03:38.090 --> 00:03:45.640
tool which is a thing that
allows you to extract

00:03:45.640 --> 00:03:48.330
information about your developer
certificate.

00:03:48.330 --> 00:03:51.360
Chirag, do you want to talk a
little bit more about this

00:03:51.360 --> 00:03:52.410
signing certificate?

00:03:52.410 --> 00:03:53.000
CHIRAG SHAH: Yeah.

00:03:53.000 --> 00:03:57.570
So what we're doing here is
identifying our Android

00:03:57.570 --> 00:04:00.990
Project with Google, and
allowing our Android Project

00:04:00.990 --> 00:04:03.940
to talk to these various
services.

00:04:03.940 --> 00:04:07.200
What we're doing here is
extracting the SHA1 hash of

00:04:07.200 --> 00:04:10.690
the signing certificate for
the debug certificate.

00:04:10.690 --> 00:04:14.920
And that allows us to keep
developing before we go to

00:04:14.920 --> 00:04:16.019
production.

00:04:16.019 --> 00:04:17.709
Once we go to production,
we'll get a different

00:04:17.709 --> 00:04:19.910
production key store
and extract the

00:04:19.910 --> 00:04:21.160
certificate from there.

00:04:21.160 --> 00:04:23.460
And generate the SHA1 hash from
there and register it

00:04:23.460 --> 00:04:26.330
again with Google before
going to production.

00:04:26.330 --> 00:04:27.080
GUS CLASS: Awesome.

00:04:27.080 --> 00:04:29.005
So if we look at my screen
again, you can see that I've

00:04:29.005 --> 00:04:31.400
loaded up my console and I've
got the command for exporting

00:04:31.400 --> 00:04:33.820
this certificate.

00:04:33.820 --> 00:04:36.650
And so what you would do is
after you run that command,

00:04:36.650 --> 00:04:39.950
then you copy in this SHA1
hash, paste it into your

00:04:39.950 --> 00:04:43.260
console, and then your project
is pretty much

00:04:43.260 --> 00:04:44.330
set up at this point.

00:04:44.330 --> 00:04:46.740
We're going to do one more thing
before continuing, and

00:04:46.740 --> 00:04:48.900
that is we're going to
enable deep linking.

00:04:48.900 --> 00:04:51.605
So when I click this reveal
button and then turn on deep

00:04:51.605 --> 00:04:53.930
linking, it'll let me
use deep links from

00:04:53.930 --> 00:04:55.560
within my Android app.

00:04:55.560 --> 00:04:57.395
Chirag, can you give a little
bit more information on deep

00:04:57.395 --> 00:04:58.620
linking and Android apps?

00:04:58.620 --> 00:04:59.320
CHIRAG SHAH: Yeah.

00:04:59.320 --> 00:05:02.150
So deep links allow users to
share the exact state of an

00:05:02.150 --> 00:05:04.120
application on Google+.

00:05:04.120 --> 00:05:06.695
When the pulse is viewed on a
mobile device, the user will

00:05:06.695 --> 00:05:10.422
be directed to the exact state
that was shared on Google+.

00:05:10.422 --> 00:05:13.250
If the user doesn't have the
app installed, they'll be

00:05:13.250 --> 00:05:15.970
prompted to install it on
their mobile device.

00:05:15.970 --> 00:05:17.710
Ready to start diving
into code, Gus?

00:05:17.710 --> 00:05:18.110
GUS CLASS: Yeah.

00:05:18.110 --> 00:05:21.930
Just one second, I'm going
to set up the project.

00:05:21.930 --> 00:05:25.330
And so if you look at my screen,
you'll see that I have

00:05:25.330 --> 00:05:30.140
set up an Android project that
has all been configured within

00:05:30.140 --> 00:05:33.600
the API's console and
is ready to go.

00:05:33.600 --> 00:05:36.440
And this is also the exact same
project that ships in the

00:05:36.440 --> 00:05:40.320
Android SDK, so all this code
is pretty much already

00:05:40.320 --> 00:05:41.640
available to you.

00:05:41.640 --> 00:05:45.270
And what I've done is I've added
some functionality to

00:05:45.270 --> 00:05:48.220
this sample app that we'll talk
about in just a minute,

00:05:48.220 --> 00:05:50.860
but let's first look at
the plus share code.

00:05:50.860 --> 00:05:53.720
So this is inside of
the share activity.

00:05:53.720 --> 00:05:57.740
And within that share activity
is an intent that is returned

00:05:57.740 --> 00:06:00.220
and used to render that
Share dialog.

00:06:00.220 --> 00:06:04.280
And in order to set this up, the
first thing that we do is

00:06:04.280 --> 00:06:06.690
that we use the PlusShare
Builder to construct a

00:06:06.690 --> 00:06:07.820
PlusShare object.

00:06:07.820 --> 00:06:09.760
And then we configure
parameters

00:06:09.760 --> 00:06:11.210
from within that builder.

00:06:11.210 --> 00:06:13.180
Chirag, can you give us some
more information about these

00:06:13.180 --> 00:06:14.810
parameters as we look
through the code?

00:06:14.810 --> 00:06:15.460
CHIRAG SHAH: Yeah.

00:06:15.460 --> 00:06:17.810
So we use the PlusShare Builder
to create an intent to

00:06:17.810 --> 00:06:21.030
the Google+ app to display
the Share dialog.

00:06:21.030 --> 00:06:23.400
This builder helps us configure
the Share dialog to

00:06:23.400 --> 00:06:25.790
display exactly what we want.

00:06:25.790 --> 00:06:28.870
We use the Add call-to-action
button to configure the red

00:06:28.870 --> 00:06:31.780
call-to-action button
in the Share dialog.

00:06:31.780 --> 00:06:36.710
So here in the sample, we're
configuring the Share dialog

00:06:36.710 --> 00:06:41.130
to display the view item
call-to-action.

00:06:41.130 --> 00:06:45.680
We also configure what happens
once that button is clicked.

00:06:45.680 --> 00:06:48.220
So we pass in a call-to-action
URL and a call-to-action

00:06:48.220 --> 00:06:48.710
deep-link ID.

00:06:48.710 --> 00:06:52.080
The call-to-action URL is used
on desktops and the deep-link

00:06:52.080 --> 00:06:54.950
ID is consumed on
mobile devices.

00:06:54.950 --> 00:06:56.575
Next, we set the content URL.

00:06:56.575 --> 00:07:02.220
The content URL helps us define
what data gives context

00:07:02.220 --> 00:07:05.500
to the user about which action
they're going to perform.

00:07:05.500 --> 00:07:08.190
So in this case we're setting
the content URL to our

00:07:08.190 --> 00:07:09.750
developer documentation.

00:07:09.750 --> 00:07:13.090
And from there we've annotated
it with Schema.org markup,

00:07:13.090 --> 00:07:15.895
which displays what description
should show up in

00:07:15.895 --> 00:07:21.860
the Share dialog and also what
type of image should augment

00:07:21.860 --> 00:07:25.370
and give more context
to the user.

00:07:25.370 --> 00:07:27.590
GUS CLASS: So there's two sets
of links that we're really

00:07:27.590 --> 00:07:28.220
talking about here.

00:07:28.220 --> 00:07:32.520
So I'll get this started so we
can see what's going on, but

00:07:32.520 --> 00:07:34.660
there's two sets
of links here.

00:07:34.660 --> 00:07:38.780
The first set is the content
links, and then the second set

00:07:38.780 --> 00:07:41.130
is going to be the
call-to-action links.

00:07:41.130 --> 00:07:43.550
So want to differentiate
between these

00:07:43.550 --> 00:07:44.150
a little bit, Chirag?

00:07:44.150 --> 00:07:50.180
CHIRAG SHAH: So the content
URL is used around the

00:07:50.180 --> 00:07:53.790
call-to-action, so it's placed
on top of it as you can see in

00:07:53.790 --> 00:07:54.970
the Share dialog.

00:07:54.970 --> 00:07:58.480
And once you click on it, it
points users to the particular

00:07:58.480 --> 00:08:00.030
research that's being shared.

00:08:00.030 --> 00:08:04.010
Whereas for the call-to-action
URLs, it basically guides the

00:08:04.010 --> 00:08:08.820
user to perform a particular
action in that application.

00:08:08.820 --> 00:08:12.720
And the deep-link IDs are used
for mobile clients to navigate

00:08:12.720 --> 00:08:16.960
users to a particular use
resource that's being shared.

00:08:16.960 --> 00:08:18.540
GUS CLASS: So if we look at my
screen again, we can see the

00:08:18.540 --> 00:08:20.660
sample running on my phone.

00:08:20.660 --> 00:08:22.520
So this is the same sample
that you know and love.

00:08:22.520 --> 00:08:24.140
It ships with the SDK.

00:08:24.140 --> 00:08:28.370
And this is as it would run just
as if you hadn't made any

00:08:28.370 --> 00:08:28.990
changes yet.

00:08:28.990 --> 00:08:36.059
So when I create the interactive
post and I click

00:08:36.059 --> 00:08:38.909
Go, what you'll see is you'll
see the same thing that you

00:08:38.909 --> 00:08:40.120
see on my screen.

00:08:40.120 --> 00:08:42.350
You'll see the pre-filled
text that is from this

00:08:42.350 --> 00:08:43.690
line of code here.

00:08:43.690 --> 00:08:48.270
You'll see the content URL which
is going to be rendered

00:08:48.270 --> 00:08:50.570
on this part of the screen
near the bottom.

00:08:50.570 --> 00:08:53.560
And then you will see
this View Item

00:08:53.560 --> 00:08:55.100
call-to-action button.

00:08:55.100 --> 00:09:00.240
So if I'm correct, the
call-to-action links will

00:09:00.240 --> 00:09:03.810
determine which content appears
inside of this button.

00:09:03.810 --> 00:09:06.800
And then the content is what
appears inside of that little

00:09:06.800 --> 00:09:08.316
rendered area on the bottom
of the screen.

00:09:08.316 --> 00:09:09.340
CHIRAG SHAH: Exactly.

00:09:09.340 --> 00:09:12.110
So the content URL gives a
little more information to the

00:09:12.110 --> 00:09:16.220
user about what's being shared
and what type of action they

00:09:16.220 --> 00:09:18.200
would be performing once
they click on the

00:09:18.200 --> 00:09:19.870
call-to-action button.

00:09:19.870 --> 00:09:20.350
GUS CLASS: Awesome.

00:09:20.350 --> 00:09:20.780
Thanks, Chirag.

00:09:20.780 --> 00:09:23.420
So I'm going to go look
at one more thing.

00:09:23.420 --> 00:09:27.090
So if I click on who this post
is being shared with, the

00:09:27.090 --> 00:09:31.270
little dialog box that appears
in the top of the post, I'll

00:09:31.270 --> 00:09:33.260
notice that it's
set to public.

00:09:33.260 --> 00:09:35.520
Now, where did that public
come from, Chirag?

00:09:35.520 --> 00:09:36.490
CHIRAG SHAH: That's
a good question.

00:09:36.490 --> 00:09:40.170
So that's actually the last
Share target specified in the

00:09:40.170 --> 00:09:41.680
Google+ Share dialog.

00:09:41.680 --> 00:09:43.670
So last time we shared
on Google+ and

00:09:43.670 --> 00:09:46.050
filled out some people.

00:09:46.050 --> 00:09:49.020
It'll get displayed again, but
we can do a little better with

00:09:49.020 --> 00:09:50.140
interactive posts.

00:09:50.140 --> 00:09:53.680
We can actually set a specific
set of people in the Share

00:09:53.680 --> 00:09:56.320
dialog and actually get
targeted sharing.

00:09:56.320 --> 00:09:59.800
So with the PlusShare Builder,
you can specify the method Set

00:09:59.800 --> 00:10:03.780
Recipients, and from there you
can set the exact Share target

00:10:03.780 --> 00:10:05.120
that your application wants.

00:10:05.120 --> 00:10:05.920
GUS CLASS: Awesome.

00:10:05.920 --> 00:10:09.170
So let's return to the code
here, and here is that

00:10:09.170 --> 00:10:10.590
setRecipients method.

00:10:10.590 --> 00:10:15.900
And what I'm going to do later
on in the code is I'm going to

00:10:15.900 --> 00:10:19.250
create an array list of
recipients that I'm then going

00:10:19.250 --> 00:10:22.730
to use for the Builder method
for setRecipients.

00:10:22.730 --> 00:10:26.260
So I've cheated a little bit
here, and I've already written

00:10:26.260 --> 00:10:27.980
a lot of the code.

00:10:27.980 --> 00:10:30.530
But let's walk through the
important sets of the code so

00:10:30.530 --> 00:10:32.270
that you can understand
what's going on here.

00:10:32.270 --> 00:10:35.040
So when I turn on that Best
flag, what's going to happen

00:10:35.040 --> 00:10:38.760
is, instead of just starting the
activity, what I'm going

00:10:38.760 --> 00:10:41.570
to do is I'm going to call
this method loadPeople.

00:10:41.570 --> 00:10:45.030
And what that is is this is an
implementation of an interface

00:10:45.030 --> 00:10:47.840
that's specified by the
Google+ platform.

00:10:47.840 --> 00:10:50.700
And so if you look at the very
top of my code, you can see

00:10:50.700 --> 00:10:55.070
where I have copied and pasted
this onPeopleLoadedListener

00:10:55.070 --> 00:10:58.490
from the listPeople activity.

00:10:58.490 --> 00:11:03.610
And what that will do is when
that method is called, this

00:11:03.610 --> 00:11:10.280
callback function for
onPeopleLoaded will be called,

00:11:10.280 --> 00:11:12.220
and then inside of here
will be data.

00:11:12.220 --> 00:11:15.610
Chirag, can you give some more
information on how these

00:11:15.610 --> 00:11:16.440
pieces connect?

00:11:16.440 --> 00:11:17.060
CHIRAG SHAH: Yeah.

00:11:17.060 --> 00:11:20.270
So when you call Plus Client and
loadPeople, it's actually

00:11:20.270 --> 00:11:21.880
an asynchronous call.

00:11:21.880 --> 00:11:25.420
And Google Play Services will
go out to the network, fetch

00:11:25.420 --> 00:11:30.510
the specific set of people as
determined by the network, and

00:11:30.510 --> 00:11:34.000
return that back to your
application as specified by

00:11:34.000 --> 00:11:35.780
your Callback interface.

00:11:35.780 --> 00:11:41.480
So once the people have been
loaded, it'll specify a

00:11:41.480 --> 00:11:45.460
passive person buffer into the
onPeopleLoaded handler.

00:11:45.460 --> 00:11:48.680
And Person Buffer is actually
a cursor-like interface, and

00:11:48.680 --> 00:11:51.450
once you're done loading the
specific people from the

00:11:51.450 --> 00:11:53.300
buffer, you'll have
to close it as to

00:11:53.300 --> 00:11:55.260
avoid any memory leaks.

00:11:55.260 --> 00:11:59.470
GUS CLASS: OK, so we have this
person buffer, and then we can

00:11:59.470 --> 00:12:02.850
take those objects and then we
can add them to this array

00:12:02.850 --> 00:12:05.260
list of best recipients.

00:12:05.260 --> 00:12:12.310
And then later, before we
retrieve this intent and then

00:12:12.310 --> 00:12:15.880
we start the activity for
results, what will happen is

00:12:15.880 --> 00:12:20.460
we'll have that list of people
already added into the data

00:12:20.460 --> 00:12:21.990
that's set up by the
Share dialog.

00:12:21.990 --> 00:12:24.680
So while this loads, do you
want to talk a little bit

00:12:24.680 --> 00:12:27.500
about why you want to call
startActivityForResult?

00:12:27.500 --> 00:12:30.490
CHIRAG SHAH: So when you call
startActivityForResult, it

00:12:30.490 --> 00:12:34.460
gives attribution to your
calling package and helps

00:12:34.460 --> 00:12:37.070
render the Share dialog
with attribution.

00:12:37.070 --> 00:12:39.290
And you'll need to do
this for interactive

00:12:39.290 --> 00:12:41.490
posts or it won't work.

00:12:41.490 --> 00:12:43.220
GUS CLASS: OK, so
there you go.

00:12:43.220 --> 00:12:44.360
Make sure that you call

00:12:44.360 --> 00:12:47.580
startActivityForResult so that it works.

00:12:47.580 --> 00:12:51.680
So let's run the same code that
we ran before now that we

00:12:51.680 --> 00:12:53.035
set the recipients
for this post.

00:12:53.035 --> 00:12:56.710
So if everything worked
correctly, what we'll see is

00:12:56.710 --> 00:12:59.250
we'll see the list of
the best recipients.

00:12:59.250 --> 00:13:00.560
This is something that's
worth mentioning.

00:13:00.560 --> 00:13:07.390
When I performed that method
loadPeople, on the backside

00:13:07.390 --> 00:13:10.210
it's doing a list of the people
using the Google+

00:13:10.210 --> 00:13:12.020
Platform API.

00:13:12.020 --> 00:13:15.510
And this allows you to sort by
alphabet, or it allows you to

00:13:15.510 --> 00:13:16.480
sort by best.

00:13:16.480 --> 00:13:19.830
And so I've done a sort by best,
and so the top five best

00:13:19.830 --> 00:13:23.220
people that are associated with
my demo account here will

00:13:23.220 --> 00:13:24.850
be returned to my app.

00:13:24.850 --> 00:13:27.500
So if we look at the list here,
here's the five people

00:13:27.500 --> 00:13:29.450
and this looks good.

00:13:29.450 --> 00:13:30.530
Chirag's missing.

00:13:30.530 --> 00:13:33.310
I don't know why, because he's
one of my best people.

00:13:33.310 --> 00:13:36.560
But there's also something
else that's different.

00:13:36.560 --> 00:13:38.860
You'll notice that that list of
recipients that we had set

00:13:38.860 --> 00:13:41.750
before, Public is
no longer there.

00:13:41.750 --> 00:13:42.770
Chirag, why is this happening?

00:13:42.770 --> 00:13:47.780
CHIRAG SHAH: So back when we
called the setRecipients

00:13:47.780 --> 00:13:50.380
method in the PlusShare Builder,
we set the specific

00:13:50.380 --> 00:13:54.480
share target for this Share
dialog, and that actually

00:13:54.480 --> 00:13:57.780
overrode the previous Share
target because our application

00:13:57.780 --> 00:14:01.905
is specifying exactly who
should be shared with.

00:14:01.905 --> 00:14:03.800
GUS CLASS: OK, so that's
it for today.

00:14:03.800 --> 00:14:08.420
You've seen us taking an
interactive post and then

00:14:08.420 --> 00:14:11.580
adding specific recipients to
it so that you can create a

00:14:11.580 --> 00:14:14.710
much more contextually
useful and relevant

00:14:14.710 --> 00:14:17.110
post for your users.

00:14:17.110 --> 00:14:21.750
And next, what we've done is
we've set up that post and

00:14:21.750 --> 00:14:23.740
then rendered it
to the stream.

00:14:23.740 --> 00:14:28.330
And then when you set that
list of recipients, then

00:14:28.330 --> 00:14:29.390
you're ready to go.

00:14:29.390 --> 00:14:31.725
So it looks like we may
have some questions?

00:14:31.725 --> 00:14:34.360
MALE SPEAKER: We do have a
couple questions, thanks, Gus.

00:14:34.360 --> 00:14:36.100
So one question is
from Gerwin.

00:14:36.100 --> 00:14:41.100
He wants to know if there's a
way to have a deep-link ID but

00:14:41.100 --> 00:14:44.090
still allow people to access the
content URL if they don't

00:14:44.090 --> 00:14:47.640
want to install the app
for some reason.

00:14:47.640 --> 00:14:51.300
So the question is, is there a
way to have a deep-link ID but

00:14:51.300 --> 00:14:54.430
still allow people to access the
content URL if they don't

00:14:54.430 --> 00:14:57.586
want to install the app
for some reason?

00:14:57.586 --> 00:15:01.230
GUS CLASS: OK, so you have
a deep-link ID, but you--

00:15:04.815 --> 00:15:08.300
CHIRAG SHAH: So that won't work
right now, but that is

00:15:08.300 --> 00:15:10.320
really good feedback, and that's
something I'll take

00:15:10.320 --> 00:15:14.420
back to the appropriate teams.

00:15:14.420 --> 00:15:15.780
MALE SPEAKER: So another
question, Gus.

00:15:15.780 --> 00:15:17.850
I was a little concerned you
showed your best people and

00:15:17.850 --> 00:15:19.760
you didn't have your friendly
GDL producer

00:15:19.760 --> 00:15:22.050
listed in that top five.

00:15:22.050 --> 00:15:25.460
How does Google+ determine that
affinity of who gets in

00:15:25.460 --> 00:15:26.190
that top five?

00:15:26.190 --> 00:15:29.336
And what do I need to do to
get in that top five?

00:15:29.336 --> 00:15:30.960
GUS CLASS: So I don't have this

00:15:30.960 --> 00:15:32.510
specific information here.

00:15:32.510 --> 00:15:37.610
It is calculated by Google
based on the available

00:15:37.610 --> 00:15:41.080
information that Google has and
the interactions that you

00:15:41.080 --> 00:15:41.640
have on Google+.

00:15:41.640 --> 00:15:46.740
So be a very friendly person
and do all the great things

00:15:46.740 --> 00:15:50.540
that would make you a close
friend of mine, and then you

00:15:50.540 --> 00:15:53.220
would appear in my best
friends list.

00:15:53.220 --> 00:15:55.020
MALE SPEAKER: Over on YouTube,
there was another question.

00:15:55.020 --> 00:15:56.370
Chirag, how does somebody
get such an

00:15:56.370 --> 00:15:57.580
awesome shirt as yours?

00:15:57.580 --> 00:15:59.370
They want to get this
Google API shirt.

00:15:59.370 --> 00:16:01.360
And do you have multiple,
and can you give

00:16:01.360 --> 00:16:02.080
some of those away?

00:16:02.080 --> 00:16:04.770
CHIRAG SHAH: This is actually
a limited edition, and we no

00:16:04.770 --> 00:16:06.320
longer make these
type of shirts.

00:16:10.330 --> 00:16:11.640
MALE SPEAKER: Was the
shirt deprecated?

00:16:11.640 --> 00:16:12.470
CHIRAG SHAH: Yes.

00:16:12.470 --> 00:16:13.720
GUS CLASS: That's a
deprecated shirt.

00:16:16.950 --> 00:16:20.590
So I believe Google may also
have a store where you can get

00:16:20.590 --> 00:16:22.560
some of the Google-branded
stuff.

00:16:22.560 --> 00:16:24.280
I don't know specifically
where that is, though.

00:16:24.280 --> 00:16:24.775
CHIRAG SHAH: Yeah.

00:16:24.775 --> 00:16:26.185
MALE SPEAKER: Googlestore.com.

00:16:26.185 --> 00:16:28.946
GUS CLASS: Googlestore.com,
all right.

00:16:31.850 --> 00:16:33.510
Any final questions?

00:16:33.510 --> 00:16:34.690
All right, so that's it.

00:16:34.690 --> 00:16:38.170
Everything that we've shown
today is well documented on

00:16:38.170 --> 00:16:40.410
the Google+ Platform
Developers page,

00:16:40.410 --> 00:16:44.990
developers.google.com/plus.

00:16:44.990 --> 00:16:48.660
The sample that we showed for
Android is available from the

00:16:48.660 --> 00:16:52.330
SDK, and so if you go to the
documentation page that I

00:16:52.330 --> 00:16:55.400
showed you earlier, you
can find the sample.

00:16:55.400 --> 00:16:57.860
CHIRAG SHAH: And you can also
find all of our samples on

00:16:57.860 --> 00:17:01.690
github.com/googleplus, where you
can find samples and all

00:17:01.690 --> 00:17:04.730
of our supported languages, and
they also demonstrate the

00:17:04.730 --> 00:17:07.480
best practices for integrating
with Google+.

00:17:07.480 --> 00:17:10.079
I find this to be the best
resource when trying to learn

00:17:10.079 --> 00:17:14.119
a new language, such as Go or
C# because it shows how to

00:17:14.119 --> 00:17:17.720
integrate with Google+, but it
also shows how to use that

00:17:17.720 --> 00:17:21.640
language and make typical
rest calls.

00:17:21.640 --> 00:17:24.349
GUS CLASS: It's really great to
hear that feedback, Chirag,

00:17:24.349 --> 00:17:26.290
because when we created the
samples, we tried to create

00:17:26.290 --> 00:17:29.090
them as consistent as possible
so that if you're switching

00:17:29.090 --> 00:17:31.180
from one language that you're
comfortable in and moving to

00:17:31.180 --> 00:17:33.250
another one that you're less
comfortable in, you can

00:17:33.250 --> 00:17:36.900
understand what's going on
inside of the sample.

00:17:36.900 --> 00:17:38.560
It's worth mentioning
that we also have

00:17:38.560 --> 00:17:40.130
additional support materials.

00:17:40.130 --> 00:17:43.320
If you go to
developers.google.com/plus and

00:17:43.320 --> 00:17:45.730
then go on the left nav,
you can find additional

00:17:45.730 --> 00:17:48.430
information about our support
communities such as Stack

00:17:48.430 --> 00:17:52.320
Overflow, where we use
the tag Google-Plus.

00:17:52.320 --> 00:17:57.780
And also the community page
on Google+, where a lot of

00:17:57.780 --> 00:18:00.400
developers are engaging with
each other all the time.

00:18:00.400 --> 00:18:01.890
So that's it for today.

00:18:01.890 --> 00:18:03.480
Chirag, thank you so
much for coming in.

00:18:03.480 --> 00:18:04.910
It's great to have an Android
expert on here.

00:18:04.910 --> 00:18:06.450
CHIRAG SHAH: Thank you for
having me on, Gus.

00:18:06.450 --> 00:18:10.490
GUS CLASS: All right, so until
next week, stay around and be

00:18:10.490 --> 00:18:13.750
sure to watch as we have future
episodes of "Google+

00:18:13.750 --> 00:18:15.610
Developers Live."

