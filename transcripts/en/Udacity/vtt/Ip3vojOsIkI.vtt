WEBVTT
Kind: captions
Language: en

00:00:00.890 --> 00:00:04.470
So the best answer is the second choice. The

00:00:04.470 --> 00:00:07.700
first rule by itself is not sufficient. And the

00:00:07.700 --> 00:00:09.900
reason the first rule doesn't work is that there's

00:00:09.900 --> 00:00:13.090
no base case. We can keep producing parents of

00:00:13.090 --> 00:00:16.379
ancestor and parent of parent of parent of ancestor.

00:00:16.379 --> 00:00:18.140
But we can never stop because there's no rule

00:00:18.140 --> 00:00:21.220
that defines ancestor in terms of something other than

00:00:21.220 --> 00:00:26.160
itself. The second rule is a recursive definition that works;

00:00:26.160 --> 00:00:30.780
it says our parent is our ancestor. And the parent

00:00:30.780 --> 00:00:33.590
of an ancestor is also an ancestor. And so, this

00:00:33.590 --> 00:00:36.200
will give us exactly the set of ancestors that we

00:00:36.200 --> 00:00:39.120
showed before, that it will be the parent, the parent of

00:00:39.120 --> 00:00:41.820
the parent, the parent of the parent of the parent,

00:00:41.820 --> 00:00:43.460
the parents of the parents of the parents of the

00:00:43.460 --> 00:00:47.290
parents and so forth, covering all of our ancestors. The

00:00:47.290 --> 00:00:51.520
third choice will also produce that same set, but it has

00:00:51.520 --> 00:00:54.090
an unnecessary rule that we only need these

00:00:54.090 --> 00:00:57.870
two rules. Here we've said, parent, parent of parent,

00:00:57.870 --> 00:01:00.660
parent of parent of ancestor. We can still

00:01:00.660 --> 00:01:03.310
combine these rules to produce any word that is

00:01:03.310 --> 00:01:05.730
parent of parent of parent of any number

00:01:05.730 --> 00:01:08.660
of times ending in parent, but it's less elegant

00:01:08.660 --> 00:01:10.490
than the second answer, which only needs two

00:01:10.490 --> 00:01:13.710
rules to produce exactly the same set of ancestors.

