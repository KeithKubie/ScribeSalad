WEBVTT
Kind: captions
Language: en

00:00:00.680 --> 00:00:01.850
 Cats. 

00:00:01.850 --> 00:00:03.410
 Pies. 

00:00:03.410 --> 00:00:06.110
 Cats eat pies. 

00:00:06.110 --> 00:00:09.050
 How we are supposed to actually pick up all this great content 

00:00:09.050 --> 00:00:11.620
 Without great support for your camera during your apps? 

00:00:11.620 --> 00:00:13.400
 I am David East, and uses API Camera 2 

00:00:13.400 --> 00:00:16.391
 To build the best in the camera applications industry. 

00:00:16.623 --> 00:00:18.095
 Let's take a step back to look at the history of options 

00:00:18.890 --> 00:00:20.580
 Camera API in Android. 

00:00:20.580 --> 00:00:22.740
 It has always been the simplest option for taking pictures 

00:00:22.740 --> 00:00:24.820
 Videos, is the Intent camera. 

00:00:24.820 --> 00:00:26.330
 This Intent is primarily launched 

00:00:26.330 --> 00:00:28.370
 The user starts using the camera application 

00:00:28.370 --> 00:00:29.510
 Who prefers to take a photo 

00:00:29.510 --> 00:00:31.540
 Although easy to use but not 

00:00:31.540 --> 00:00:33.450
 Suitable for large camera applications. 

00:00:33.450 --> 00:00:35.220
 The Intent camera is suitable for applications where 

00:00:35.220 --> 00:00:36.940
 The camera is attached 

00:00:36.940 --> 00:00:39.040
 More than being a basic property, this is 

00:00:39.040 --> 00:00:41.220
 It does not help us show the cat eating pancakes; 

00:00:41.220 --> 00:00:43.620
 So we need a better API. 

00:00:43.620 --> 00:00:45.670
 The API camera provided us with much greater control 

00:00:45.670 --> 00:00:46.907
 From the Intent camera. 

00:00:46.907 --> 00:00:48.990
 With the camera API you can build a view 

00:00:48.990 --> 00:00:52.582
 Whatever camera you like, the camera API was great. 

00:00:52.582 --> 00:00:54.690
 But as the photos progressed, it was definitely there 

00:00:54.690 --> 00:00:57.210
 Some missing objects, for example no support 

00:00:57.210 --> 00:00:59.660
 To capture uncompressed images. 

00:00:59.660 --> 00:01:01.400
 Performance during the latest equipment, where it will be 

00:01:01.400 --> 00:01:04.370
 Maximum viewing rate is one to three frames per second. 

00:01:04.370 --> 00:01:07.510
 As it seems clear, our cat deserves a better API. 

00:01:07.510 --> 00:01:09.770
 This API is a 2 camera. 

00:01:09.770 --> 00:01:13.870
 API Camera 2 is the newest, largest, and coolest 

00:01:13.870 --> 00:01:14.820
 In the group. 

00:01:14.820 --> 00:01:16.820
 It provides you with perfect control 

00:01:16.820 --> 00:01:18.870
 In your device's cameras, 

00:01:18.870 --> 00:01:21.810
 It fixes all the problems we encountered with the old API. 

00:01:21.810 --> 00:01:24.460
 Capture photos at faster intervals, and show shows 

00:01:24.460 --> 00:01:27.680
 From most of the camera, and even add effects 

00:01:27.680 --> 00:01:28.860
 directly. 

00:01:28.860 --> 00:01:31.590
 But before you use your new camera application 

00:01:31.590 --> 00:01:34.010
 There are some things you should learn. 

00:01:34.010 --> 00:01:36.020
 Just because the API 2 camera is full 

00:01:36.020 --> 00:01:37.550
 With great characteristics, that does not mean 

00:01:37.550 --> 00:01:40.820
 All your users' devices will support it. 

00:01:40.820 --> 00:01:43.010
 So you need to know the possibilities of each device, 

00:01:43.010 --> 00:01:44.790
 You can find out 

00:01:44.790 --> 00:01:47.680
 By getting a list of special camera properties 

00:01:47.680 --> 00:01:49.110
 With this device. 

00:01:49.110 --> 00:01:51.080
 These characteristics can be simple things, 

00:01:51.080 --> 00:01:52.610
 Such as: any direction facing the lens, 

00:01:52.610 --> 00:01:55.000
 Or something more complex such as: facial screening systems 

00:01:55.000 --> 00:01:56.410
 Available. 

00:01:56.410 --> 00:01:58.940
 If your app can not work without these features, 

00:01:58.940 --> 00:02:00.860
 You can require the user to own 

00:02:00.860 --> 00:02:02.670
 These properties are for downloading your app. 

00:02:02.670 --> 00:02:05.920
 Just select the user properties in the manifest file. 

00:02:05.920 --> 00:02:08.720
 It is also important to know that the Camera 2 API has been introduced 

00:02:08.720 --> 00:02:11.400
 In Android L. In order to support all their applications 

00:02:11.400 --> 00:02:14.640
 You will have to return to the camera API. 

00:02:14.640 --> 00:02:17.610
 There is no support for the Camera API 2 in the support library 

00:02:17.610 --> 00:02:22.350
 Android after, but if you spied on that person enough, 

00:02:22.350 --> 00:02:25.170
 It may make support there sooner. 

00:02:25.170 --> 00:02:28.010
 API Camera 2 gives you a lot of responsibility 

00:02:28.010 --> 00:02:29.770
 Towards your device's cameras. 

00:02:29.770 --> 00:02:33.790
 But with great responsibility comes the superpower. 

00:02:33.790 --> 00:02:35.700
 I think that's how it goes. 

00:02:35.700 --> 00:02:38.785
 To learn about API Camera 2 you'll lose an API reference. 

00:02:38.785 --> 00:02:40.285
 If you want to see it works 

00:02:40.285 --> 00:02:43.720
 A GitHub application model captures raw images. 

00:02:43.720 --> 00:02:46.820
 If your app uses your camera, get the best camera experience 

00:02:46.820 --> 00:02:50.510
 Using a camera 2, continued to build better applications. 

00:02:50.510 --> 00:02:55.960
 [Music] 

