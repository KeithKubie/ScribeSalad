WEBVTT
Kind: captions
Language: en

00:00:00.260 --> 00:00:02.560
Typically when we talk about
data transfer efficiency,

00:00:02.560 --> 00:00:05.670
we're talking about limiting
the amount of data being transferred.

00:00:05.670 --> 00:00:07.703
That reduces the
bandwidth and the cost

00:00:07.703 --> 00:00:09.956
and is generally 
a pretty good idea.

00:00:09.956 --> 00:00:12.440
But on mobile there's an extra factor.

00:00:12.440 --> 00:00:15.140
As you can see, it turns out
that the cell radio

00:00:15.140 --> 00:00:17.830
is one of the biggest 
battery drainers on the device.

00:00:17.830 --> 00:00:20.143
So making your data
transfers more efficient

00:00:20.143 --> 00:00:22.546
will also result in 
improved battery life.

00:00:22.546 --> 00:00:24.540
Now at a basic level,
being more efficient

00:00:24.540 --> 00:00:27.473
means spending less time
transferring less data,

00:00:27.473 --> 00:00:29.646
reducing your payloads, 
and updating less often

00:00:29.646 --> 00:00:31.290
can take you some of the way there.

00:00:31.290 --> 00:00:32.415
But then what?

00:00:32.415 --> 00:00:33.972
Can timing make a difference?

00:00:33.972 --> 00:00:36.400
It turns out that it can, 
and it's a situation

00:00:36.400 --> 00:00:39.140
I like to think of as the
cookie Droid conundrum.

00:00:39.140 --> 00:00:42.130
Do we perform fewer downloads
with larger payloads?

00:00:42.130 --> 00:00:45.353
Or do we perform 
lots of small transfers

00:00:45.353 --> 00:00:47.486
just in time for when
we need them?

00:00:47.486 --> 00:00:50.580
One big cookie or lots of little cookies?

00:00:50.580 --> 00:00:51.900
So, what do you think?

00:00:51.900 --> 00:00:54.860
Should we have a smaller
number of large downloads

00:00:54.860 --> 00:00:57.120
illustrated by this big cookie?

00:00:57.120 --> 00:00:58.941
Or a large number
of small downloads,

00:00:58.941 --> 00:01:02.291
as illustrated by 
lots of little cookies?

