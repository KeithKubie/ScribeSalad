WEBVTT
Kind: captions
Language: en

00:00:00.532 --> 00:00:02.490
When it comes to the idle
modes in Marshmallow,

00:00:02.490 --> 00:00:04.656
I've been saying that
developers don't need to worry

00:00:04.656 --> 00:00:06.750
and probably don't need
to change any code either.

00:00:06.750 --> 00:00:08.850
But you do need
to test your app.

00:00:08.850 --> 00:00:10.310
I'm Joanna Smith,
and by now, you

00:00:10.310 --> 00:00:13.210
should know that you can't
escape the testing beast.

00:00:13.210 --> 00:00:14.420
Some quick background.

00:00:14.420 --> 00:00:15.960
There is nothing
worse for a user

00:00:15.960 --> 00:00:17.709
than trying to take a
picture of their dog

00:00:17.709 --> 00:00:20.170
being cute only to see that
their battery is at 6%,

00:00:20.170 --> 00:00:22.730
and then turning on the
camera kills their phone.

00:00:22.730 --> 00:00:25.410
Protecting the battery is
why we created an idle mode

00:00:25.410 --> 00:00:28.090
that the system can place your
app in if it hasn't been active

00:00:28.090 --> 00:00:28.930
in a while.

00:00:28.930 --> 00:00:31.330
And while this may sound
scary, the best advice

00:00:31.330 --> 00:00:34.230
I have for you as a
developer is to do nothing,

00:00:34.230 --> 00:00:36.065
because App Standby is smart.

00:00:36.065 --> 00:00:38.440
It won't happen to the apps
that the user interacts with,

00:00:38.440 --> 00:00:40.273
or that have activities
and services running

00:00:40.273 --> 00:00:42.420
in the foreground, or
that have notifications

00:00:42.420 --> 00:00:43.660
pending in the tray.

00:00:43.660 --> 00:00:46.310
App Standby is designed to
restrict background syncs

00:00:46.310 --> 00:00:48.860
and jobs for applications
that the user isn't

00:00:48.860 --> 00:00:50.420
interested in right now.

00:00:50.420 --> 00:00:52.170
So when your app
is being used, it

00:00:52.170 --> 00:00:53.630
doesn't need to
worry about this.

00:00:53.630 --> 00:00:55.520
And when it isn't,
it shouldn't actually

00:00:55.520 --> 00:00:59.620
notice that it's idle, which is
why my advice is to do nothing,

00:00:59.620 --> 00:01:02.120
except test your app.

00:01:02.120 --> 00:01:04.750
There-- there is that.

00:01:04.750 --> 00:01:07.340
Testing how well your app
recovers from an idle mode

00:01:07.340 --> 00:01:10.930
is critical to understanding
what your users might see.

00:01:10.930 --> 00:01:14.020
So you need to be certain that
any expected notifications are

00:01:14.020 --> 00:01:17.020
generated properly, that
downstream messages trigger

00:01:17.020 --> 00:01:19.730
the correct response
immediately for high priority

00:01:19.730 --> 00:01:23.170
or delayed for normal, and that
delayed messages and syncs are

00:01:23.170 --> 00:01:25.820
processed cleanly both in
the daily maintenance window

00:01:25.820 --> 00:01:28.580
and after your app is
released from idle mode.

00:01:28.580 --> 00:01:31.090
To help you, we created
a new ADB service

00:01:31.090 --> 00:01:33.677
that will let you toggle
in and out of App Standby.

00:01:33.677 --> 00:01:36.010
So you need a device or an
emulator running Marshmallow,

00:01:36.010 --> 00:01:38.367
and then you need to open
your app and leave it running.

00:01:38.367 --> 00:01:40.200
And then to force your
app into App Standby,

00:01:40.200 --> 00:01:41.970
you first need to
instruct the device

00:01:41.970 --> 00:01:44.640
not to pull any power from
the cable connecting it

00:01:44.640 --> 00:01:46.970
to your computer,
because being plugged in

00:01:46.970 --> 00:01:49.100
means we aren't worried
about battery anymore.

00:01:49.100 --> 00:01:51.110
Then you set inactive
true or false

00:01:51.110 --> 00:01:52.820
to toggle into or
out of App Standby.

00:01:52.820 --> 00:01:55.500
And get inactive will let
you check the current state.

00:01:55.500 --> 00:01:57.910
By toggling the status,
you'll know what to expect,

00:01:57.910 --> 00:02:00.790
and you can observe whether
your app is behaving properly.

00:02:00.790 --> 00:02:02.680
Theoretically, there
should be no surprises

00:02:02.680 --> 00:02:04.350
since all of the
background work that

00:02:04.350 --> 00:02:06.974
doesn't happen when idle should
run as soon as the idle mode is

00:02:06.974 --> 00:02:08.610
released, and nothing is lost.

00:02:08.610 --> 00:02:10.160
And any foreground
work means you

00:02:10.160 --> 00:02:12.710
aren't going into idle
mode in the first place.

00:02:12.710 --> 00:02:14.900
But if you notice something
funny while testing,

00:02:14.900 --> 00:02:16.580
you can modify your approach.

00:02:16.580 --> 00:02:18.470
GCM messages marked
with a High Priority

00:02:18.470 --> 00:02:20.940
tag will reach your app
even through App Standby,

00:02:20.940 --> 00:02:23.170
so that you can react to
important information coming

00:02:23.170 --> 00:02:24.160
from your server.

00:02:24.160 --> 00:02:26.580
And wake locks and alarms are
honored in this idle mode.

00:02:26.580 --> 00:02:29.610
So if you need to react to
a particular time, you can.

00:02:29.610 --> 00:02:32.400
But for most apps, there should
be very little work involved,

00:02:32.400 --> 00:02:35.000
which means that this time, all
you need is to test your code

00:02:35.000 --> 00:02:37.220
and then take a nap in
order to build better apps.

00:02:37.220 --> 00:02:40.270
[MUSIC PLAYING]

