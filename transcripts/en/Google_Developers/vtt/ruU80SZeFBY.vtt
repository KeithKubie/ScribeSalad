WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:23.124
[MUSIC PLAYING]

00:00:23.124 --> 00:00:24.600
[WHOOSH]

00:00:24.600 --> 00:00:25.584
[CLICK]

00:00:25.584 --> 00:00:26.568
[WHOOSH]

00:00:26.568 --> 00:00:33.510
[CLICK]

00:00:33.510 --> 00:00:35.265
Hello, and welcome to
"Apps Script Office

00:00:35.265 --> 00:00:36.220
Hours." I'm Eric Koleda.

00:00:36.220 --> 00:00:37.710
I'm a member of the developer
relations

00:00:37.710 --> 00:00:39.580
team for Apps Script.

00:00:39.580 --> 00:00:42.660
And this is our weekly episode
where we come, we tell you the

00:00:42.660 --> 00:00:44.460
news about Google Apps
Script, and we

00:00:44.460 --> 00:00:46.790
also answer your questions.

00:00:46.790 --> 00:00:50.370
So let's get started with
the release notes.

00:00:50.370 --> 00:00:53.130
So the Apps Script team, we
make releases on kind of a

00:00:53.130 --> 00:00:54.360
regular basis.

00:00:54.360 --> 00:00:56.760
And we publish kind of a release
notes that gives you a

00:00:56.760 --> 00:00:59.820
quick overview of what's changed
in Apps Script over

00:00:59.820 --> 00:01:01.180
that amount of time.

00:01:01.180 --> 00:01:03.290
And so we did have a release
that came out on the 13th.

00:01:03.290 --> 00:01:04.590
That was just yesterday.

00:01:04.590 --> 00:01:07.630
And it's a pretty small release,
but some interesting

00:01:07.630 --> 00:01:08.620
things in there.

00:01:08.620 --> 00:01:12.930
So the first is that we added
the ability to disable SSL

00:01:12.930 --> 00:01:16.060
certificate validation
in the SOAP service.

00:01:16.060 --> 00:01:17.160
So recently--

00:01:17.160 --> 00:01:18.770
if you scroll back down through
the release notes,

00:01:18.770 --> 00:01:22.320
you'll see that a couple weeks
ago, we made it so that the

00:01:22.320 --> 00:01:27.080
default for all of our HTTP
requests that are made via

00:01:27.080 --> 00:01:33.290
Apps Script to an outbound
server, by default now, the

00:01:33.290 --> 00:01:36.080
SSL certificate of the server
that you're making the request

00:01:36.080 --> 00:01:37.570
to is validated.

00:01:37.570 --> 00:01:40.070
And if it's non-valid, we'll
throw an exception.

00:01:40.070 --> 00:01:42.340
Now, there are some cases
where maybe you want to

00:01:42.340 --> 00:01:43.030
connect to a server.

00:01:43.030 --> 00:01:44.323
It's your own server.

00:01:44.323 --> 00:01:46.960
You know that it's yours, and
it's not compromised.

00:01:46.960 --> 00:01:50.520
But the SSL cert is just not
valid, or it's self-signed.

00:01:50.520 --> 00:01:53.900
In this case, we've provided
an override in UrlFetch--

00:01:53.900 --> 00:01:56.850
that service-- to disable this
validation so you could still

00:01:56.850 --> 00:01:57.950
make the request.

00:01:57.950 --> 00:02:00.800
But for the SOAP service, we
didn't have that flag.

00:02:00.800 --> 00:02:03.540
So there's now a flag in there
so that if you're making a

00:02:03.540 --> 00:02:06.376
SOAP request to a server with
your own certificate or that

00:02:06.376 --> 00:02:09.110
you know that you trust, you
can disable validation and

00:02:09.110 --> 00:02:12.220
it'll go through.

00:02:12.220 --> 00:02:16.170
Also in this release, we fixed
a very hot issue, a very

00:02:16.170 --> 00:02:17.790
critical issue for a lot of
people, which was that

00:02:17.790 --> 00:02:22.080
GmailApps and MailApps sendEmail
function has the

00:02:22.080 --> 00:02:24.670
ability to pass in
a name override.

00:02:24.670 --> 00:02:27.130
So this is kind of not an email
address override, but

00:02:27.130 --> 00:02:29.370
kind of the display name
that shows up in

00:02:29.370 --> 00:02:31.080
various email clients.

00:02:31.080 --> 00:02:34.080
And for a while, that was
broken, where it was not

00:02:34.080 --> 00:02:36.560
taking that into account, and
just showing your default name

00:02:36.560 --> 00:02:37.750
for your user account--

00:02:37.750 --> 00:02:38.660
your email account.

00:02:38.660 --> 00:02:39.810
And now it's working again.

00:02:39.810 --> 00:02:41.650
So that's been fixed.

00:02:41.650 --> 00:02:44.060
And then, something that's
actually a really, I think,

00:02:44.060 --> 00:02:47.950
nice usability fix for me
is if you've worked with

00:02:47.950 --> 00:02:48.680
Libraries--

00:02:48.680 --> 00:02:53.010
which is an Apps Script feature
that allows you to

00:02:53.010 --> 00:02:56.590
define a reusable set of code,
package it up as a library,

00:02:56.590 --> 00:03:00.350
and then share it among many
other scripts that you have--

00:03:00.350 --> 00:03:03.710
when you were doing an update to
your library, and you cut a

00:03:03.710 --> 00:03:06.210
new version of your library,
that version number wouldn't

00:03:06.210 --> 00:03:09.510
show up in the dialogue for
other scripts for sometimes 5

00:03:09.510 --> 00:03:11.010
or 10 minutes.

00:03:11.010 --> 00:03:12.400
The caching was too long.

00:03:12.400 --> 00:03:14.710
So they've now removed that so
that when you make an update

00:03:14.710 --> 00:03:17.450
to a library, it shows up as
being available in other

00:03:17.450 --> 00:03:18.930
scripts almost immediately.

00:03:18.930 --> 00:03:21.310
So I think those are
some pretty cool

00:03:21.310 --> 00:03:23.490
features and fixes.

00:03:23.490 --> 00:03:27.020
And stay tuned to the Release
Notes page for more

00:03:27.020 --> 00:03:31.620
information about releases
that are coming up.

00:03:31.620 --> 00:03:34.340
So something that didn't make
the release notes but is also

00:03:34.340 --> 00:03:39.150
an interesting piece of news
is that we have added the

00:03:39.150 --> 00:03:47.140
ability to change the splay URL
for the Chrome Web Store

00:03:47.140 --> 00:03:52.420
apps that you publish
via Apps Script.

00:03:52.420 --> 00:03:56.200
So Apps Script has the ability
to automatically, very easily,

00:03:56.200 --> 00:03:58.610
just a couple clicks, publish a
web app that you've made and

00:03:58.610 --> 00:03:59.650
publish it to the Chrome
Web Store.

00:03:59.650 --> 00:04:03.230
So this integration has been
around for a little while.

00:04:03.230 --> 00:04:04.960
But we've now upgraded
it a little bit.

00:04:04.960 --> 00:04:07.460
So what it was before is that
when I published to the Chrome

00:04:07.460 --> 00:04:11.280
Web Store, the URL that showed
up was kind of like, this web

00:04:11.280 --> 00:04:13.020
app comes from-- and it
would typically show

00:04:13.020 --> 00:04:14.290
your company's URL.

00:04:14.290 --> 00:04:16.279
Since all Apps Script web
apps are hosted off

00:04:16.279 --> 00:04:19.540
script.google.com, it would
show your exceedingly long

00:04:19.540 --> 00:04:24.630
script.google.com URL as the
kind of validated or verified

00:04:24.630 --> 00:04:27.120
URL in the Chrome Web Store.

00:04:27.120 --> 00:04:29.130
And while this is true, while
that is where your script's

00:04:29.130 --> 00:04:31.340
being served from, it doesn't
really serve the purpose of

00:04:31.340 --> 00:04:34.910
that field, which was to kind
of give, perhaps, your

00:04:34.910 --> 00:04:38.750
company's approval
for this web app.

00:04:38.750 --> 00:04:43.200
Like, OK, this web app was
made by mysite.com.

00:04:43.200 --> 00:04:45.990
And therefore, whatever
credibility My Site has is

00:04:45.990 --> 00:04:49.170
then given to that web app
in the Chrome Web Store.

00:04:49.170 --> 00:04:52.830
So what we've allowed you to do
now is for any URL that you

00:04:52.830 --> 00:04:55.740
own, a verified URL that belongs
to your account, you

00:04:55.740 --> 00:04:59.640
can now use that instead of
the script.google.com URL.

00:04:59.640 --> 00:05:03.320
So if you look at my sample
app that I created in the

00:05:03.320 --> 00:05:03.910
Chrome Web Store--

00:05:03.910 --> 00:05:04.810
Feed+--

00:05:04.810 --> 00:05:07.330
you'll see, before, where it
used to have script.google.com

00:05:07.330 --> 00:05:10.410
slash, slash, slash, et cetera,
it now just says

00:05:10.410 --> 00:05:13.350
erickoleda.com, since that
is a domain that I own.

00:05:13.350 --> 00:05:14.670
And so this is a little tweak.

00:05:14.670 --> 00:05:16.250
But we think it's an important
one for two reasons.

00:05:16.250 --> 00:05:18.870
Like I said, it allows you
to take whatever trust or

00:05:18.870 --> 00:05:21.290
credibility that you have in
your domain and apply it to

00:05:21.290 --> 00:05:22.790
your app, created
in Apps Script.

00:05:22.790 --> 00:05:25.970
But more importantly, this
display here of how many users

00:05:25.970 --> 00:05:27.940
have installed it, that actually
got pushed off the

00:05:27.940 --> 00:05:28.860
screen before.

00:05:28.860 --> 00:05:30.820
There wasn't enough screen real
estate to fit both the

00:05:30.820 --> 00:05:33.120
really long script URL and
that piece of data.

00:05:33.120 --> 00:05:35.550
So it actually allows this, I
think, important piece of data

00:05:35.550 --> 00:05:40.340
of how many users you have to
come back into the screen.

00:05:40.340 --> 00:05:42.190
So that's another thing that
we've done recently that we

00:05:42.190 --> 00:05:45.950
think makes Apps Script even a
better platform for building

00:05:45.950 --> 00:05:49.870
web apps, specifically a web
app like Feed+, which is

00:05:49.870 --> 00:05:53.040
small, targeted, and
you want to utilize

00:05:53.040 --> 00:05:55.270
at some Google services.

00:05:55.270 --> 00:05:58.041
We think that's a good use
case for Apps Script.

00:05:58.041 --> 00:06:00.970
All right, so that's about all
the news we have for today.

00:06:00.970 --> 00:06:02.950
Let's answer some questions.

00:06:02.950 --> 00:06:04.240
So do we have anybody
in the Hangout?

00:06:07.650 --> 00:06:08.140
Let's see.

00:06:08.140 --> 00:06:09.690
Nobody in the Hangout--

00:06:09.690 --> 00:06:10.790
aw.

00:06:10.790 --> 00:06:12.980
All right, so we are
broadcasting at a special date

00:06:12.980 --> 00:06:13.840
and time today.

00:06:13.840 --> 00:06:15.980
So I expected that people
might not have

00:06:15.980 --> 00:06:17.040
gotten the memo in time.

00:06:17.040 --> 00:06:19.350
But we do have a question on
our Moderator page that

00:06:19.350 --> 00:06:20.320
someone submitted beforehand.

00:06:20.320 --> 00:06:21.910
So we can take a look at that.

00:06:21.910 --> 00:06:24.690
So the question here is, "I'd
love to expand the integration

00:06:24.690 --> 00:06:27.400
of some of the Google Apps and
workflows we are building

00:06:27.400 --> 00:06:30.480
deeper into the Google APIs."
And he says, "No

00:06:30.480 --> 00:06:32.510
OAuth 2.0 is a bummer.

00:06:32.510 --> 00:06:34.520
Should I continue to
call App Engine?

00:06:34.520 --> 00:06:37.320
Or will it make my year to have
that come down the pipe

00:06:37.320 --> 00:06:38.350
sometime soon?"

00:06:38.350 --> 00:06:40.740
So we do have--

00:06:40.740 --> 00:06:42.860
Apps Script has the deep
integration with a lot of

00:06:42.860 --> 00:06:44.130
different Google services.

00:06:44.130 --> 00:06:47.020
So we have Spreadsheets,
and Contacts, and

00:06:47.020 --> 00:06:48.900
Calendar, and Gmail.

00:06:48.900 --> 00:06:51.470
And a lot of those are bundled
up into what we call the

00:06:51.470 --> 00:06:54.310
"default services." And the
default services are things

00:06:54.310 --> 00:06:57.360
that have easy-to-use,
kind of custom Apps

00:06:57.360 --> 00:06:59.320
Script interfaces for--

00:06:59.320 --> 00:07:01.110
and then, we also
expose a series

00:07:01.110 --> 00:07:03.200
called Google API services.

00:07:03.200 --> 00:07:06.460
These are ones that are kind of
existing APIs that you can

00:07:06.460 --> 00:07:08.010
use outside of Apps Script--

00:07:08.010 --> 00:07:10.070
that we've kind of just made it
a little bit easier to use

00:07:10.070 --> 00:07:10.700
within Apps Script.

00:07:10.700 --> 00:07:14.890
It's still very much based on
the same external format that

00:07:14.890 --> 00:07:19.150
you would have seen if you
had use it externally.

00:07:19.150 --> 00:07:22.000
So it's the same method names,
the same object names.

00:07:22.000 --> 00:07:23.340
It's not kind of a rewrite
of the API.

00:07:23.340 --> 00:07:24.970
It's the API directly,
which is kind of

00:07:24.970 --> 00:07:26.210
built into Apps Script.

00:07:26.210 --> 00:07:28.820
And we have those for a couple
other services, like the URL

00:07:28.820 --> 00:07:30.890
shortening service.

00:07:30.890 --> 00:07:35.160
And the Tasks API, I believe,
is implemented that way.

00:07:35.160 --> 00:07:37.390
But there's still a bunch more
Google services that aren't

00:07:37.390 --> 00:07:40.180
present in that list and that
you may want to use.

00:07:40.180 --> 00:07:43.055
And many of those do
require OAuth 2.0.

00:07:43.055 --> 00:07:45.120
And in the past, when we've
said you want to integrate

00:07:45.120 --> 00:07:48.440
with a Google service that's not
currently in Apps Script

00:07:48.440 --> 00:07:50.570
or a third-party service, the

00:07:50.570 --> 00:07:52.670
recommendation is use UrlFetch.

00:07:52.670 --> 00:07:57.240
It's a generic ability within
Apps Script to make a request

00:07:57.240 --> 00:07:59.090
to a URL, get back
the results.

00:07:59.090 --> 00:08:00.400
If it's JSON, you
can parse it.

00:08:00.400 --> 00:08:02.940
If it's XML, you can parse
it, et cetera.

00:08:02.940 --> 00:08:06.090
But, yeah, the bummer here, as
the person pointed out, is

00:08:06.090 --> 00:08:10.280
that that UrlFetch doesn't
support OAuth 2.0 today.

00:08:10.280 --> 00:08:14.580
And OAuth 2.0 is definitely the
standard for authorization

00:08:14.580 --> 00:08:17.540
and authentication that a lot
of APIs are moving to, both

00:08:17.540 --> 00:08:18.700
outside of Google and within.

00:08:18.700 --> 00:08:22.260
So it is something that we're
aware of-- that there is a

00:08:22.260 --> 00:08:25.420
lack of this feature and that
it would be nice to have.

00:08:25.420 --> 00:08:28.300
But at the moment, there's no
kind of immediate timeline or

00:08:28.300 --> 00:08:32.360
plans that I can give for when
we could expect to see that in

00:08:32.360 --> 00:08:33.240
Apps Script.

00:08:33.240 --> 00:08:36.210
But it's definitely something
that we're looking towards.

00:08:36.210 --> 00:08:38.580
And we definitely want to make
it available, just so that

00:08:38.580 --> 00:08:44.084
these kind of use cases are
there and are possible.

00:08:44.084 --> 00:08:47.800
All right, so I don't see any
other questions here.

00:08:47.800 --> 00:08:51.180
And do we have anybody
else in the Hangout?

00:08:51.180 --> 00:08:52.950
Looks like a no.

00:08:52.950 --> 00:08:56.530
All right, well, this could be
a very short episode of "Apps

00:08:56.530 --> 00:08:57.790
Script Office Hours" today.

00:08:57.790 --> 00:09:00.770
But let me just end it with
a few more announcements.

00:09:00.770 --> 00:09:04.690
So one is that one of my
colleagues, Arun, who works

00:09:04.690 --> 00:09:08.510
here in our New York office as
well, tomorrow, November 15--

00:09:08.510 --> 00:09:09.580
that's correct.

00:09:09.580 --> 00:09:11.590
He will be hosting a Hangout
On Air, which is an

00:09:11.590 --> 00:09:13.400
introduction to Google
Apps Script.

00:09:13.400 --> 00:09:17.010
Now, this is being run by the
Google Enterprise team.

00:09:17.010 --> 00:09:19.410
But it's open to anybody who
wants to tune in and watch

00:09:19.410 --> 00:09:23.020
because a Hangout On Air is
broadcast via YouTube so that

00:09:23.020 --> 00:09:27.360
anyone can watch it live inside
their Google+ Stream.

00:09:27.360 --> 00:09:30.650
So if you are someone who's new
to Apps Script, and you

00:09:30.650 --> 00:09:34.000
didn't understand the first half
of this "Office Hours"

00:09:34.000 --> 00:09:35.880
today, this would probably
be a good place to go.

00:09:35.880 --> 00:09:37.200
Arun is a great presenter.

00:09:37.200 --> 00:09:39.630
And he'll take you through,
kind of at a higher level,

00:09:39.630 --> 00:09:42.440
what Apps Script is, what its
capabilities are, why you'd

00:09:42.440 --> 00:09:43.250
want to use it.

00:09:43.250 --> 00:09:45.400
And I think he's even going
to show off some of the

00:09:45.400 --> 00:09:47.730
capabilities and just how easy
it is to get started.

00:09:47.730 --> 00:09:50.315
So if you're new to Apps Script,
tune in tomorrow, 2:00

00:09:50.315 --> 00:09:52.940
PM Eastern time, as
you can see here.

00:09:52.940 --> 00:09:54.250
And I think it'll be recorded.

00:09:54.250 --> 00:09:56.770
So if you miss that specific
showing, you can go back and

00:09:56.770 --> 00:09:58.680
watch it later.

00:09:58.680 --> 00:10:00.490
And then, keeping on with the
things that we're doing here

00:10:00.490 --> 00:10:04.800
on the team, also tomorrow, and
at a very similar time--

00:10:04.800 --> 00:10:07.000
2:30-- so these will be
competing with each other--

00:10:07.000 --> 00:10:12.660
is another Apps Script
presentation that Ikai and a

00:10:12.660 --> 00:10:15.420
colleague, Nick, on the
Analytics team, are going to

00:10:15.420 --> 00:10:18.200
be doing together, where they're
going to specifically

00:10:18.200 --> 00:10:19.950
cover the integration
between Google Apps

00:10:19.950 --> 00:10:22.210
Script and Google Analytics.

00:10:22.210 --> 00:10:27.190
So we did a blog post, a guest
post, from Nick a couple of

00:10:27.190 --> 00:10:29.840
weeks ago-- maybe
a month or two--

00:10:29.840 --> 00:10:33.020
showing off his really nice
integration between Apps

00:10:33.020 --> 00:10:34.610
Script and Analytics.

00:10:34.610 --> 00:10:36.670
It's available in the
script gallery.

00:10:36.670 --> 00:10:37.660
So you can play with it there.

00:10:37.660 --> 00:10:38.650
I think it's called--

00:10:38.650 --> 00:10:40.380
it's got the word
"magic" in it.

00:10:40.380 --> 00:10:42.400
And it almost is magic.

00:10:42.400 --> 00:10:44.340
If you're an Analytics
user, these

00:10:44.340 --> 00:10:45.420
abilities are pretty cool.

00:10:45.420 --> 00:10:50.090
But it allows you to, really
quickly, define, like, reports

00:10:50.090 --> 00:10:52.200
on your analytics data and
bring them into a Google

00:10:52.200 --> 00:10:52.690
Spreadsheet.

00:10:52.690 --> 00:10:54.460
And then, once they're in a
spreadsheet, you know the kind

00:10:54.460 --> 00:10:55.830
of capabilities you have--

00:10:55.830 --> 00:10:58.790
the collaboration, creating
charts, sharing your data,

00:10:58.790 --> 00:11:02.110
doing calculations,
pivot tables.

00:11:02.110 --> 00:11:03.130
There's a lot of power there.

00:11:03.130 --> 00:11:05.670
So this is a really cool
integration and a really cool

00:11:05.670 --> 00:11:07.790
way to kind of keep the data
fresh too, because you could

00:11:07.790 --> 00:11:09.590
do a one-time export
for some data.

00:11:09.590 --> 00:11:11.590
But with this integration,
you can have it

00:11:11.590 --> 00:11:13.280
on a recurring basis.

00:11:13.280 --> 00:11:15.380
So that was a really popular
blog post he put out and a

00:11:15.380 --> 00:11:16.740
really popular script.

00:11:16.740 --> 00:11:19.970
And so we're just going to dive
even deeper into it in a

00:11:19.970 --> 00:11:23.140
"Google Developer Live" episode
tomorrow, 2:30 Eastern

00:11:23.140 --> 00:11:24.710
time, with Ikai and Nick.

00:11:24.710 --> 00:11:27.500
So if you're an Analytics power
user, or you want to

00:11:27.500 --> 00:11:29.810
know more about this
integration, I'd tune in to

00:11:29.810 --> 00:11:30.290
that as well.

00:11:30.290 --> 00:11:31.670
And likewise, it's going
to be recorded.

00:11:31.670 --> 00:11:33.480
So if you want to watch
both, don't worry.

00:11:33.480 --> 00:11:37.840
You can always watch one
of them after the fact.

00:11:37.840 --> 00:11:40.666
All right, don't see
anymore questions.

00:11:40.666 --> 00:11:42.050
Don't see anymore Hangout
participants.

00:11:42.050 --> 00:11:43.860
I think that's going to
wrap it up for today.

00:11:43.860 --> 00:11:44.600
Once again, I'm Eric Koleda.

00:11:44.600 --> 00:11:46.320
And this has been "Apps Script
Office Hours." Tune

00:11:46.320 --> 00:11:47.170
in again next week.

00:11:47.170 --> 00:11:49.550
And if you have any questions,
you can always reach out to us

00:11:49.550 --> 00:11:51.940
on Stack Overflow
or on Google+.

00:11:51.940 --> 00:11:53.310
Thanks for joining.

00:11:53.310 --> 00:12:01.710
[MUSIC PLAYING]

