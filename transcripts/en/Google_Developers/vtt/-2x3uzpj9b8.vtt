WEBVTT
Kind: captions
Language: en

00:00:01.000 --> 00:00:01.430
ERIC LEICHTENSCHLAG: Hello.

00:00:01.430 --> 00:00:03.810
I'm Eric Leichtenschlag with the
Google developer relations

00:00:03.810 --> 00:00:04.990
team for AdMob.

00:00:04.990 --> 00:00:07.070
Today I will walk through how
to get started with the ad

00:00:07.070 --> 00:00:09.710
catalog for Android, a sample
project that demonstrates how

00:00:09.710 --> 00:00:13.230
to incorporate ads into your
Android application.

00:00:13.230 --> 00:00:15.310
The requirements for this sample
project are an Android

00:00:15.310 --> 00:00:18.720
SDK, version 3.2 or higher,
the Google AdMob SDK for

00:00:18.720 --> 00:00:21.140
Android, and an AdMob
publisher ID.

00:00:21.140 --> 00:00:22.915
This walkthrough will also
be used in the Eclipse

00:00:22.915 --> 00:00:24.300
development environment.

00:00:24.300 --> 00:00:25.990
It is assumed that you have
the Eclipse development

00:00:25.990 --> 00:00:28.220
environment, as well
as the Android SDK,

00:00:28.220 --> 00:00:30.990
installed on your machine.

00:00:30.990 --> 00:00:32.090
The first thing we
need to do is

00:00:32.090 --> 00:00:33.610
download the sample project.

00:00:33.610 --> 00:00:34.751
You can find it at
code.google.com/

00:00:34.751 --> 00:00:40.780
p/google-mobile-dev. From here,
click on the Downloads

00:00:40.780 --> 00:00:42.970
tab and find the most recent
version of the

00:00:42.970 --> 00:00:44.960
ad catalog for Android.

00:00:44.960 --> 00:00:48.590
Now download the zip file
to your file system.

00:00:48.590 --> 00:00:49.960
The next thing we will
need is the Google

00:00:49.960 --> 00:00:51.800
AdMob SDK for Android.

00:00:51.800 --> 00:00:56.710
You can find this by going to
code.google.com/mobile/ads.

00:00:56.710 --> 00:00:59.490
From here, click on the Download
tab and find the most

00:00:59.490 --> 00:01:03.460
recent version of the
Google AdMob SDK.

00:01:03.460 --> 00:01:07.260
Now download this SDK
to your file system.

00:01:07.260 --> 00:01:09.642
Now that we have both zip files,
we can extract them to

00:01:09.642 --> 00:01:12.270
a directory of our choosing.

00:01:12.270 --> 00:01:14.830
For simplicity, I will extract
both the zip files to the

00:01:14.830 --> 00:01:16.080
downloads directory.

00:01:18.020 --> 00:01:21.380
The next step is to add the ad
catalog project into Eclipse.

00:01:21.380 --> 00:01:23.320
Remember the assumption that
you need both the Eclipse

00:01:23.320 --> 00:01:25.710
development environment, as
well as an Android SDK,

00:01:25.710 --> 00:01:28.940
version 3.2 or higher,
pre-installed on your machine.

00:01:28.940 --> 00:01:33.950
To add the project, go to File,
New, Project, Android

00:01:33.950 --> 00:01:38.310
Project, Create project
from existing source.

00:01:38.310 --> 00:01:40.870
From here, you can browse to
the location of your ad

00:01:40.870 --> 00:01:44.250
catalog project and
click Open.

00:01:44.250 --> 00:01:46.060
Now we need to set
the build target.

00:01:46.060 --> 00:01:48.160
We have to set the build target
to an Android SDK,

00:01:48.160 --> 00:01:49.520
version 3.2 or higher.

00:01:52.470 --> 00:01:53.720
Now click Finish.

00:01:55.790 --> 00:01:58.680
Now we need to add the Google
AdMob SDK to the project.

00:01:58.680 --> 00:02:00.920
To do this, we can right click
the project and go to

00:02:00.920 --> 00:02:02.260
Properties.

00:02:02.260 --> 00:02:04.640
From here, click on Java
Build Path and then

00:02:04.640 --> 00:02:06.740
Add External JARs.

00:02:06.740 --> 00:02:08.360
Browse to the directory where
you downloaded the

00:02:08.360 --> 00:02:09.610
Google AdMob SDK.

00:02:16.070 --> 00:02:19.040
Now select Open, and
finally hit OK.

00:02:22.990 --> 00:02:25.370
The last thing we will need is
an AdMob publisher ID to add

00:02:25.370 --> 00:02:26.890
to our sample project.

00:02:26.890 --> 00:02:30.460
You can find one by going
to www.admob.com.

00:02:30.460 --> 00:02:32.950
Create an account if you
don't already have one.

00:02:32.950 --> 00:02:36.230
Once you do, go to Marketplace,
Sites &amp; Apps, and

00:02:36.230 --> 00:02:38.920
Add Site or App.

00:02:38.920 --> 00:02:41.120
Now you can create an Android
application by filling out the

00:02:41.120 --> 00:02:42.370
form below.

00:02:44.410 --> 00:02:47.210
It is OK to leave out the
market URL at this time.

00:02:47.210 --> 00:02:49.320
When creating a site or app for
your own project, you can

00:02:49.320 --> 00:02:51.520
leave this field blank and add
it later once your project

00:02:51.520 --> 00:02:54.750
goes into the market.

00:02:54.750 --> 00:02:57.600
Once you fill out the form,
click Continue.

00:02:57.600 --> 00:02:59.730
After adding your site or
app, go back to the

00:02:59.730 --> 00:03:01.910
Sites &amp; Apps page.

00:03:01.910 --> 00:03:04.160
And under the site or app you
just created, click Manage

00:03:04.160 --> 00:03:07.650
Settings and find your
AdMob publisher ID.

00:03:07.650 --> 00:03:10.340
Copy your AdMob publisher ID
so you can use it in your

00:03:10.340 --> 00:03:12.880
sample project.

00:03:12.880 --> 00:03:15.030
Now that you have your publisher
ID, you can add it

00:03:15.030 --> 00:03:20.960
to the project by navigating to
res, values, strings.xml.

00:03:20.960 --> 00:03:24.930
From here, find the string
admob_id and replace it with

00:03:24.930 --> 00:03:26.870
your AdMob publisher ID.

00:03:26.870 --> 00:03:29.350
Remember not to leave any
trailing white space, as this

00:03:29.350 --> 00:03:31.710
will affect the publisher
ID value.

00:03:31.710 --> 00:03:34.780
Now click Save.

00:03:34.780 --> 00:03:36.490
We are now ready to
run the project.

00:03:36.490 --> 00:03:38.760
But first, let's look at what
versions of Android are

00:03:38.760 --> 00:03:40.700
compatible with the project.

00:03:40.700 --> 00:03:43.210
By looking at the user's SDK
element, we can see that the

00:03:43.210 --> 00:03:46.210
Android minSdkVersion is 4,
meaning that we can run the

00:03:46.210 --> 00:03:50.240
project on any device version
1.6 or higher.

00:03:50.240 --> 00:03:52.860
Now, let's select a compatible
emulator for the project.

00:03:52.860 --> 00:03:54.710
You will want to create
a new AVD if you don't

00:03:54.710 --> 00:03:56.290
already have one.

00:03:56.290 --> 00:04:00.230
I will use the Froyo-hdpi AVD,
which will run Android 2.2

00:04:00.230 --> 00:04:01.920
with API level 8.

00:04:01.920 --> 00:04:05.350
Now, click Start and wait for
the emulator to load.

00:04:05.350 --> 00:04:07.820
Once the emulator finishes
loading, we can run the

00:04:07.820 --> 00:04:10.200
project by clicking
on the Run icon.

00:04:10.200 --> 00:04:13.650
Select the AVD that we started
up earlier to run the project.

00:04:13.650 --> 00:04:14.900
Then click OK.

00:04:18.260 --> 00:04:19.010
That's it.

00:04:19.010 --> 00:04:20.620
We now have the ad
catalog project

00:04:20.620 --> 00:04:22.120
running on the emulator.

00:04:22.120 --> 00:04:24.350
Feel free to check out our
different use cases for banner

00:04:24.350 --> 00:04:26.980
and interstitial ads in
the existing project.

00:04:26.980 --> 00:04:30.010
In the next version, we plan to
focus on best practices for

00:04:30.010 --> 00:04:32.680
incorporating banner ads into
different layouts, such as

00:04:32.680 --> 00:04:36.670
inside a scrolling view
or a tab view.

00:04:36.670 --> 00:04:38.850
Here are some useful links for
more information about the

00:04:38.850 --> 00:04:40.490
Google AdMob SDK.

00:04:40.490 --> 00:04:43.210
For help getting started, check
out the documentation.

00:04:43.210 --> 00:04:45.510
For questions about the ad
catalog or the Google AdMob

00:04:45.510 --> 00:04:48.030
SDK, check out our forum.

00:04:48.030 --> 00:04:49.810
For news updates and release
announcements,

00:04:49.810 --> 00:04:51.280
check out our blog.

00:04:51.280 --> 00:04:53.370
And finally, for updates to
the ad catalog and other

00:04:53.370 --> 00:04:57.420
sample projects, check out
our code example page.

00:04:57.420 --> 00:04:59.490
Thank you for your time and
enjoy using the ad catalog.

