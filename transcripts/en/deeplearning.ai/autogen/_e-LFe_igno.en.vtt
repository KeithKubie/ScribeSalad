WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:02.450
 
you've seen how using momentum can speed

00:00:02.450 --> 00:00:02.460
you've seen how using momentum can speed
 

00:00:02.460 --> 00:00:04.249
you've seen how using momentum can speed
up gradient descent there's another

00:00:04.249 --> 00:00:04.259
up gradient descent there's another
 

00:00:04.259 --> 00:00:06.680
up gradient descent there's another
algorithm called rmsprop which stands

00:00:06.680 --> 00:00:06.690
algorithm called rmsprop which stands
 

00:00:06.690 --> 00:00:08.720
algorithm called rmsprop which stands
for root mean square prop they can also

00:00:08.720 --> 00:00:08.730
for root mean square prop they can also
 

00:00:08.730 --> 00:00:10.820
for root mean square prop they can also
speed up gradient descent let's see how

00:00:10.820 --> 00:00:10.830
speed up gradient descent let's see how
 

00:00:10.830 --> 00:00:11.419
speed up gradient descent let's see how
it works

00:00:11.419 --> 00:00:11.429
it works
 

00:00:11.429 --> 00:00:14.360
it works
recall our example from before that if

00:00:14.360 --> 00:00:14.370
recall our example from before that if
 

00:00:14.370 --> 00:00:16.189
recall our example from before that if
you implement gradient descent you can

00:00:16.189 --> 00:00:16.199
you implement gradient descent you can
 

00:00:16.199 --> 00:00:18.769
you implement gradient descent you can
end up with huge oscillations in the

00:00:18.769 --> 00:00:18.779
end up with huge oscillations in the
 

00:00:18.779 --> 00:00:21.200
end up with huge oscillations in the
vertical direction even while it's

00:00:21.200 --> 00:00:21.210
vertical direction even while it's
 

00:00:21.210 --> 00:00:22.730
vertical direction even while it's
trying to make progress in the

00:00:22.730 --> 00:00:22.740
trying to make progress in the
 

00:00:22.740 --> 00:00:25.759
trying to make progress in the
horizontal direction in order to provide

00:00:25.759 --> 00:00:25.769
horizontal direction in order to provide
 

00:00:25.769 --> 00:00:28.070
horizontal direction in order to provide
intuition for this example let's say

00:00:28.070 --> 00:00:28.080
intuition for this example let's say
 

00:00:28.080 --> 00:00:30.200
intuition for this example let's say
that the vertical axis is the parameter

00:00:30.200 --> 00:00:30.210
that the vertical axis is the parameter
 

00:00:30.210 --> 00:00:32.420
that the vertical axis is the parameter
B and the horizontal axis is the

00:00:32.420 --> 00:00:32.430
B and the horizontal axis is the
 

00:00:32.430 --> 00:00:35.840
B and the horizontal axis is the
parameter W and it really could be W 1

00:00:35.840 --> 00:00:35.850
parameter W and it really could be W 1
 

00:00:35.850 --> 00:00:37.850
parameter W and it really could be W 1
and W 2 or some of the center parameters

00:00:37.850 --> 00:00:37.860
and W 2 or some of the center parameters
 

00:00:37.860 --> 00:00:40.549
and W 2 or some of the center parameters
most names is BMW for the sake of

00:00:40.549 --> 00:00:40.559
most names is BMW for the sake of
 

00:00:40.559 --> 00:00:43.310
most names is BMW for the sake of
intuition and so you want to slow down

00:00:43.310 --> 00:00:43.320
intuition and so you want to slow down
 

00:00:43.320 --> 00:00:46.670
intuition and so you want to slow down
the learning in the B direction or in

00:00:46.670 --> 00:00:46.680
the learning in the B direction or in
 

00:00:46.680 --> 00:00:49.240
the learning in the B direction or in
the vertical direction and speed up

00:00:49.240 --> 00:00:49.250
the vertical direction and speed up
 

00:00:49.250 --> 00:00:52.520
the vertical direction and speed up
learning or at least not slow it down in

00:00:52.520 --> 00:00:52.530
learning or at least not slow it down in
 

00:00:52.530 --> 00:00:55.400
learning or at least not slow it down in
the horizontal direction so this is what

00:00:55.400 --> 00:00:55.410
the horizontal direction so this is what
 

00:00:55.410 --> 00:00:58.310
the horizontal direction so this is what
the rmsprop algorithm does to accomplish

00:00:58.310 --> 00:00:58.320
the rmsprop algorithm does to accomplish
 

00:00:58.320 --> 00:01:05.109
the rmsprop algorithm does to accomplish
this on iteration T it will compute as

00:01:05.109 --> 00:01:05.119
this on iteration T it will compute as
 

00:01:05.119 --> 00:01:09.679
this on iteration T it will compute as
usual the derivatives DWD be on the

00:01:09.679 --> 00:01:09.689
usual the derivatives DWD be on the
 

00:01:09.689 --> 00:01:16.399
usual the derivatives DWD be on the
currents mini-batch so lets going to

00:01:16.399 --> 00:01:16.409
currents mini-batch so lets going to
 

00:01:16.409 --> 00:01:17.929
currents mini-batch so lets going to
keep this sum exponentially weighted

00:01:17.929 --> 00:01:17.939
keep this sum exponentially weighted
 

00:01:17.939 --> 00:01:21.109
keep this sum exponentially weighted
average in step v DW I'm going to use

00:01:21.109 --> 00:01:21.119
average in step v DW I'm going to use
 

00:01:21.119 --> 00:01:25.190
average in step v DW I'm going to use
new notation s DW so s DW 0 to beta

00:01:25.190 --> 00:01:25.200
new notation s DW so s DW 0 to beta
 

00:01:25.200 --> 00:01:30.560
new notation s DW so s DW 0 to beta
times their previous value plus 1 minus

00:01:30.560 --> 00:01:30.570
times their previous value plus 1 minus
 

00:01:30.570 --> 00:01:34.010
times their previous value plus 1 minus
beta times DW squared

00:01:34.010 --> 00:01:34.020
beta times DW squared
 

00:01:34.020 --> 00:01:36.410
beta times DW squared
sometimes write this DW starts r22

00:01:36.410 --> 00:01:36.420
sometimes write this DW starts r22
 

00:01:36.420 --> 00:01:38.560
sometimes write this DW starts r22
generally expansion which invented this

00:01:38.560 --> 00:01:38.570
generally expansion which invented this
 

00:01:38.570 --> 00:01:43.039
generally expansion which invented this
PW squared so for clarity this squaring

00:01:43.039 --> 00:01:43.049
PW squared so for clarity this squaring
 

00:01:43.049 --> 00:01:46.359
PW squared so for clarity this squaring
operation is an element wise squaring

00:01:46.359 --> 00:01:46.369
operation is an element wise squaring
 

00:01:46.369 --> 00:01:49.550
operation is an element wise squaring
operation so what this is doing is

00:01:49.550 --> 00:01:49.560
operation so what this is doing is
 

00:01:49.560 --> 00:01:51.460
operation so what this is doing is
really keeping an exponentially weighted

00:01:51.460 --> 00:01:51.470
really keeping an exponentially weighted
 

00:01:51.470 --> 00:01:54.490
really keeping an exponentially weighted
average of the squares of the

00:01:54.490 --> 00:01:54.500
average of the squares of the
 

00:01:54.500 --> 00:01:57.590
average of the squares of the
derivatives and similarly we also have s

00:01:57.590 --> 00:01:57.600
derivatives and similarly we also have s
 

00:01:57.600 --> 00:02:03.109
derivatives and similarly we also have s
DB equals beta as DB plus 1 minus beta D

00:02:03.109 --> 00:02:03.119
DB equals beta as DB plus 1 minus beta D
 

00:02:03.119 --> 00:02:06.319
DB equals beta as DB plus 1 minus beta D
B squared and again the squaring is an

00:02:06.319 --> 00:02:06.329
B squared and again the squaring is an
 

00:02:06.329 --> 00:02:09.160
B squared and again the squaring is an
element-wise operation

00:02:09.160 --> 00:02:09.170
element-wise operation
 

00:02:09.170 --> 00:02:12.140
element-wise operation
rmsprop then updates the parameters as

00:02:12.140 --> 00:02:12.150
rmsprop then updates the parameters as
 

00:02:12.150 --> 00:02:16.309
rmsprop then updates the parameters as
follows w gets updated as w - the

00:02:16.309 --> 00:02:16.319
follows w gets updated as w - the
 

00:02:16.319 --> 00:02:18.530
follows w gets updated as w - the
learning rate and whereas previously we

00:02:18.530 --> 00:02:18.540
learning rate and whereas previously we
 

00:02:18.540 --> 00:02:23.750
learning rate and whereas previously we
had alpha a times DW now as DW divided

00:02:23.750 --> 00:02:23.760
had alpha a times DW now as DW divided
 

00:02:23.760 --> 00:02:30.050
had alpha a times DW now as DW divided
by square root of s DW and b gives

00:02:30.050 --> 00:02:30.060
by square root of s DW and b gives
 

00:02:30.060 --> 00:02:32.660
by square root of s DW and b gives
updated as b - a learning rate times

00:02:32.660 --> 00:02:32.670
updated as b - a learning rate times
 

00:02:32.670 --> 00:02:35.420
updated as b - a learning rate times
instead of just a gradient this is also

00:02:35.420 --> 00:02:35.430
instead of just a gradient this is also
 

00:02:35.430 --> 00:02:40.009
instead of just a gradient this is also
divided by now divided by s DB so let's

00:02:40.009 --> 00:02:40.019
divided by now divided by s DB so let's
 

00:02:40.019 --> 00:02:41.900
divided by now divided by s DB so let's
gain some intuitions about how this

00:02:41.900 --> 00:02:41.910
gain some intuitions about how this
 

00:02:41.910 --> 00:02:44.750
gain some intuitions about how this
works recall that in the horizontal

00:02:44.750 --> 00:02:44.760
works recall that in the horizontal
 

00:02:44.760 --> 00:02:47.509
works recall that in the horizontal
direction or in this example in the w

00:02:47.509 --> 00:02:47.519
direction or in this example in the w
 

00:02:47.519 --> 00:02:49.699
direction or in this example in the w
direction we want learning to go pretty

00:02:49.699 --> 00:02:49.709
direction we want learning to go pretty
 

00:02:49.709 --> 00:02:51.680
direction we want learning to go pretty
fast whereas in the vertical direction

00:02:51.680 --> 00:02:51.690
fast whereas in the vertical direction
 

00:02:51.690 --> 00:02:54.530
fast whereas in the vertical direction
run this example in the B direction we

00:02:54.530 --> 00:02:54.540
run this example in the B direction we
 

00:02:54.540 --> 00:02:56.660
run this example in the B direction we
want to slow down or to damp out the

00:02:56.660 --> 00:02:56.670
want to slow down or to damp out the
 

00:02:56.670 --> 00:02:58.580
want to slow down or to damp out the
oscillations in the vertical direction

00:02:58.580 --> 00:02:58.590
oscillations in the vertical direction
 

00:02:58.590 --> 00:03:03.589
oscillations in the vertical direction
so with these terms s DW as DB what

00:03:03.589 --> 00:03:03.599
so with these terms s DW as DB what
 

00:03:03.599 --> 00:03:06.050
so with these terms s DW as DB what
we're hoping is that SB W will be

00:03:06.050 --> 00:03:06.060
we're hoping is that SB W will be
 

00:03:06.060 --> 00:03:09.229
we're hoping is that SB W will be
relatively small so that here we're

00:03:09.229 --> 00:03:09.239
relatively small so that here we're
 

00:03:09.239 --> 00:03:11.229
relatively small so that here we're
dividing it by relatively small number

00:03:11.229 --> 00:03:11.239
dividing it by relatively small number
 

00:03:11.239 --> 00:03:14.660
dividing it by relatively small number
whereas DB would be relatively launched

00:03:14.660 --> 00:03:14.670
whereas DB would be relatively launched
 

00:03:14.670 --> 00:03:16.039
whereas DB would be relatively launched
so that here we're dividing by

00:03:16.039 --> 00:03:16.049
so that here we're dividing by
 

00:03:16.049 --> 00:03:18.740
so that here we're dividing by
relatively large number in order to slow

00:03:18.740 --> 00:03:18.750
relatively large number in order to slow
 

00:03:18.750 --> 00:03:20.390
relatively large number in order to slow
down the updates in the vertical

00:03:20.390 --> 00:03:20.400
down the updates in the vertical
 

00:03:20.400 --> 00:03:22.699
down the updates in the vertical
direction and indeed if you look at the

00:03:22.699 --> 00:03:22.709
direction and indeed if you look at the
 

00:03:22.709 --> 00:03:25.729
direction and indeed if you look at the
derivatives these derivatives are much

00:03:25.729 --> 00:03:25.739
derivatives these derivatives are much
 

00:03:25.739 --> 00:03:28.340
derivatives these derivatives are much
larger in the vertical direction than in

00:03:28.340 --> 00:03:28.350
larger in the vertical direction than in
 

00:03:28.350 --> 00:03:30.979
larger in the vertical direction than in
the horizontal direction so you know the

00:03:30.979 --> 00:03:30.989
the horizontal direction so you know the
 

00:03:30.989 --> 00:03:33.110
the horizontal direction so you know the
slope is very large in the B direction

00:03:33.110 --> 00:03:33.120
slope is very large in the B direction
 

00:03:33.120 --> 00:03:36.440
slope is very large in the B direction
right so with derivatives like this this

00:03:36.440 --> 00:03:36.450
right so with derivatives like this this
 

00:03:36.450 --> 00:03:38.629
right so with derivatives like this this
is a very large DB and a relatively

00:03:38.629 --> 00:03:38.639
is a very large DB and a relatively
 

00:03:38.639 --> 00:03:42.289
is a very large DB and a relatively
small DW because the function is sloped

00:03:42.289 --> 00:03:42.299
small DW because the function is sloped
 

00:03:42.299 --> 00:03:44.240
small DW because the function is sloped
much more steeply in the vertical

00:03:44.240 --> 00:03:44.250
much more steeply in the vertical
 

00:03:44.250 --> 00:03:46.240
much more steeply in the vertical
direction that is in the B direction

00:03:46.240 --> 00:03:46.250
direction that is in the B direction
 

00:03:46.250 --> 00:03:49.099
direction that is in the B direction
then in the W direction and the

00:03:49.099 --> 00:03:49.109
then in the W direction and the
 

00:03:49.109 --> 00:03:51.860
then in the W direction and the
horizontal direction and so DB squared

00:03:51.860 --> 00:03:51.870
horizontal direction and so DB squared
 

00:03:51.870 --> 00:03:53.900
horizontal direction and so DB squared
will be relatively large so as DB we're

00:03:53.900 --> 00:03:53.910
will be relatively large so as DB we're
 

00:03:53.910 --> 00:03:56.030
will be relatively large so as DB we're
relatively launch where as compared to

00:03:56.030 --> 00:03:56.040
relatively launch where as compared to
 

00:03:56.040 --> 00:03:58.970
relatively launch where as compared to
that DW will be smaller DW squared will

00:03:58.970 --> 00:03:58.980
that DW will be smaller DW squared will
 

00:03:58.980 --> 00:04:02.300
that DW will be smaller DW squared will
be smaller and so SB W be smaller so the

00:04:02.300 --> 00:04:02.310
be smaller and so SB W be smaller so the
 

00:04:02.310 --> 00:04:04.729
be smaller and so SB W be smaller so the
net effect of this is that your updates

00:04:04.729 --> 00:04:04.739
net effect of this is that your updates
 

00:04:04.739 --> 00:04:07.340
net effect of this is that your updates
in the vertical direction are divided by

00:04:07.340 --> 00:04:07.350
in the vertical direction are divided by
 

00:04:07.350 --> 00:04:09.379
in the vertical direction are divided by
a much larger number and so that helps

00:04:09.379 --> 00:04:09.389
a much larger number and so that helps
 

00:04:09.389 --> 00:04:11.420
a much larger number and so that helps
damp out the oscillations whereas the

00:04:11.420 --> 00:04:11.430
damp out the oscillations whereas the
 

00:04:11.430 --> 00:04:13.129
damp out the oscillations whereas the
updates in the horizontal direction are

00:04:13.129 --> 00:04:13.139
updates in the horizontal direction are
 

00:04:13.139 --> 00:04:15.770
updates in the horizontal direction are
divided by a smaller number so the net

00:04:15.770 --> 00:04:15.780
divided by a smaller number so the net
 

00:04:15.780 --> 00:04:18.020
divided by a smaller number so the net
impact of using rmsprop is as your

00:04:18.020 --> 00:04:18.030
impact of using rmsprop is as your
 

00:04:18.030 --> 00:04:21.490
impact of using rmsprop is as your
updates who end up looking more like

00:04:21.490 --> 00:04:21.500
updates who end up looking more like
 

00:04:21.500 --> 00:04:27.590
updates who end up looking more like
right that your update Cindy on vertical

00:04:27.590 --> 00:04:27.600
right that your update Cindy on vertical
 

00:04:27.600 --> 00:04:29.810
right that your update Cindy on vertical
direction get down tell but in

00:04:29.810 --> 00:04:29.820
direction get down tell but in
 

00:04:29.820 --> 00:04:31.430
direction get down tell but in
horizontal direction it can keep going

00:04:31.430 --> 00:04:31.440
horizontal direction it can keep going
 

00:04:31.440 --> 00:04:34.249
horizontal direction it can keep going
and one infected this is all so that you

00:04:34.249 --> 00:04:34.259
and one infected this is all so that you
 

00:04:34.259 --> 00:04:36.200
and one infected this is all so that you
could therefore use the larger learning

00:04:36.200 --> 00:04:36.210
could therefore use the larger learning
 

00:04:36.210 --> 00:04:38.270
could therefore use the larger learning
rate alpha and get faster learning

00:04:38.270 --> 00:04:38.280
rate alpha and get faster learning
 

00:04:38.280 --> 00:04:40.460
rate alpha and get faster learning
without the diverging in the vertical

00:04:40.460 --> 00:04:40.470
without the diverging in the vertical
 

00:04:40.470 --> 00:04:42.230
without the diverging in the vertical
direction now just for the sake of

00:04:42.230 --> 00:04:42.240
direction now just for the sake of
 

00:04:42.240 --> 00:04:44.150
direction now just for the sake of
clarity I've been calling the vertical

00:04:44.150 --> 00:04:44.160
clarity I've been calling the vertical
 

00:04:44.160 --> 00:04:46.999
clarity I've been calling the vertical
and horizontal directions B and W just

00:04:46.999 --> 00:04:47.009
and horizontal directions B and W just
 

00:04:47.009 --> 00:04:49.670
and horizontal directions B and W just
to illustrate this in practice you're in

00:04:49.670 --> 00:04:49.680
to illustrate this in practice you're in
 

00:04:49.680 --> 00:04:51.680
to illustrate this in practice you're in
a very high dimensional space of

00:04:51.680 --> 00:04:51.690
a very high dimensional space of
 

00:04:51.690 --> 00:04:54.670
a very high dimensional space of
parameters so maybe the vertical

00:04:54.670 --> 00:04:54.680
parameters so maybe the vertical
 

00:04:54.680 --> 00:04:56.420
parameters so maybe the vertical
dimensions when you're trying to dampen

00:04:56.420 --> 00:04:56.430
dimensions when you're trying to dampen
 

00:04:56.430 --> 00:04:59.120
dimensions when you're trying to dampen
oscillations is some set of parameters W

00:04:59.120 --> 00:04:59.130
oscillations is some set of parameters W
 

00:04:59.130 --> 00:05:03.140
oscillations is some set of parameters W
1 W 2 W 17 and the horizontal dimensions

00:05:03.140 --> 00:05:03.150
1 W 2 W 17 and the horizontal dimensions
 

00:05:03.150 --> 00:05:07.370
1 W 2 W 17 and the horizontal dimensions
might be W 3 w 4 u and so on right and

00:05:07.370 --> 00:05:07.380
might be W 3 w 4 u and so on right and
 

00:05:07.380 --> 00:05:09.860
might be W 3 w 4 u and so on right and
so the separation is a WMV is just an

00:05:09.860 --> 00:05:09.870
so the separation is a WMV is just an
 

00:05:09.870 --> 00:05:13.400
so the separation is a WMV is just an
illustration in practice DW is a very

00:05:13.400 --> 00:05:13.410
illustration in practice DW is a very
 

00:05:13.410 --> 00:05:15.950
illustration in practice DW is a very
high dimensional parameter vector DB is

00:05:15.950 --> 00:05:15.960
high dimensional parameter vector DB is
 

00:05:15.960 --> 00:05:17.450
high dimensional parameter vector DB is
also a very high dimensional parameter

00:05:17.450 --> 00:05:17.460
also a very high dimensional parameter
 

00:05:17.460 --> 00:05:19.909
also a very high dimensional parameter
vector but the intuition is that in

00:05:19.909 --> 00:05:19.919
vector but the intuition is that in
 

00:05:19.919 --> 00:05:21.350
vector but the intuition is that in
dimensions where you're getting these

00:05:21.350 --> 00:05:21.360
dimensions where you're getting these
 

00:05:21.360 --> 00:05:24.350
dimensions where you're getting these
oscillations you end up computing a

00:05:24.350 --> 00:05:24.360
oscillations you end up computing a
 

00:05:24.360 --> 00:05:27.650
oscillations you end up computing a
larger sum or weighted average for these

00:05:27.650 --> 00:05:27.660
larger sum or weighted average for these
 

00:05:27.660 --> 00:05:29.600
larger sum or weighted average for these
squares of derivatives and so you end up

00:05:29.600 --> 00:05:29.610
squares of derivatives and so you end up
 

00:05:29.610 --> 00:05:31.070
squares of derivatives and so you end up
damping out the directions in which

00:05:31.070 --> 00:05:31.080
damping out the directions in which
 

00:05:31.080 --> 00:05:33.500
damping out the directions in which
there are these oscillations so that's

00:05:33.500 --> 00:05:33.510
there are these oscillations so that's
 

00:05:33.510 --> 00:05:36.230
there are these oscillations so that's
rmsprop and it stands for root mean

00:05:36.230 --> 00:05:36.240
rmsprop and it stands for root mean
 

00:05:36.240 --> 00:05:38.899
rmsprop and it stands for root mean
squared because a root means square prop

00:05:38.899 --> 00:05:38.909
squared because a root means square prop
 

00:05:38.909 --> 00:05:40.460
squared because a root means square prop
because here you're squaring the

00:05:40.460 --> 00:05:40.470
because here you're squaring the
 

00:05:40.470 --> 00:05:42.379
because here you're squaring the
derivatives and then you take the square

00:05:42.379 --> 00:05:42.389
derivatives and then you take the square
 

00:05:42.389 --> 00:05:45.620
derivatives and then you take the square
root here at the end so finally just a

00:05:45.620 --> 00:05:45.630
root here at the end so finally just a
 

00:05:45.630 --> 00:05:47.659
root here at the end so finally just a
couple lost details on this algorithm

00:05:47.659 --> 00:05:47.669
couple lost details on this algorithm
 

00:05:47.669 --> 00:05:50.600
couple lost details on this algorithm
before we move on in the next video

00:05:50.600 --> 00:05:50.610
before we move on in the next video
 

00:05:50.610 --> 00:05:52.370
before we move on in the next video
we're actually going to combine rmsprop

00:05:52.370 --> 00:05:52.380
we're actually going to combine rmsprop
 

00:05:52.380 --> 00:05:55.969
we're actually going to combine rmsprop
together with momentum so rather than

00:05:55.969 --> 00:05:55.979
together with momentum so rather than
 

00:05:55.979 --> 00:05:58.850
together with momentum so rather than
using the hyper parameter beta which we

00:05:58.850 --> 00:05:58.860
using the hyper parameter beta which we
 

00:05:58.860 --> 00:06:00.950
using the hyper parameter beta which we
had used for momentum I'm going to call

00:06:00.950 --> 00:06:00.960
had used for momentum I'm going to call
 

00:06:00.960 --> 00:06:04.399
had used for momentum I'm going to call
this hyper parameter beta to just to not

00:06:04.399 --> 00:06:04.409
this hyper parameter beta to just to not
 

00:06:04.409 --> 00:06:06.710
this hyper parameter beta to just to not
clash or the same hyper parameter for

00:06:06.710 --> 00:06:06.720
clash or the same hyper parameter for
 

00:06:06.720 --> 00:06:08.540
clash or the same hyper parameter for
both momentum and for harmless problem

00:06:08.540 --> 00:06:08.550
both momentum and for harmless problem
 

00:06:08.550 --> 00:06:10.909
both momentum and for harmless problem
and also to make sure that your

00:06:10.909 --> 00:06:10.919
and also to make sure that your
 

00:06:10.919 --> 00:06:13.430
and also to make sure that your
algorithm doesn't divide by zero you

00:06:13.430 --> 00:06:13.440
algorithm doesn't divide by zero you
 

00:06:13.440 --> 00:06:16.339
algorithm doesn't divide by zero you
know one of square root of s DW right

00:06:16.339 --> 00:06:16.349
know one of square root of s DW right
 

00:06:16.349 --> 00:06:18.649
know one of square root of s DW right
it's very close to zero then this thing

00:06:18.649 --> 00:06:18.659
it's very close to zero then this thing
 

00:06:18.659 --> 00:06:20.990
it's very close to zero then this thing
could blow up just to ensure the

00:06:20.990 --> 00:06:21.000
could blow up just to ensure the
 

00:06:21.000 --> 00:06:22.909
could blow up just to ensure the
American stability when you implement

00:06:22.909 --> 00:06:22.919
American stability when you implement
 

00:06:22.919 --> 00:06:24.920
American stability when you implement
those in practice you have a very very

00:06:24.920 --> 00:06:24.930
those in practice you have a very very
 

00:06:24.930 --> 00:06:28.250
those in practice you have a very very
small epsilon to the denominator that

00:06:28.250 --> 00:06:28.260
small epsilon to the denominator that
 

00:06:28.260 --> 00:06:31.310
small epsilon to the denominator that
really matter what epsilon is use 10 to

00:06:31.310 --> 00:06:31.320
really matter what epsilon is use 10 to
 

00:06:31.320 --> 00:06:32.570
really matter what epsilon is use 10 to
the negative eight would be a reasonable

00:06:32.570 --> 00:06:32.580
the negative eight would be a reasonable
 

00:06:32.580 --> 00:06:35.150
the negative eight would be a reasonable
default but this just ensures slightly

00:06:35.150 --> 00:06:35.160
default but this just ensures slightly
 

00:06:35.160 --> 00:06:37.670
default but this just ensures slightly
greater numerical stability that you

00:06:37.670 --> 00:06:37.680
greater numerical stability that you
 

00:06:37.680 --> 00:06:39.290
greater numerical stability that you
know from numerical roundoff over the

00:06:39.290 --> 00:06:39.300
know from numerical roundoff over the
 

00:06:39.300 --> 00:06:40.880
know from numerical roundoff over the
reasons that you don't end up dividing

00:06:40.880 --> 00:06:40.890
reasons that you don't end up dividing
 

00:06:40.890 --> 00:06:44.090
reasons that you don't end up dividing
by a very small number so that's rmsprop

00:06:44.090 --> 00:06:44.100
by a very small number so that's rmsprop
 

00:06:44.100 --> 00:06:47.120
by a very small number so that's rmsprop
and similar to momentum as the effects

00:06:47.120 --> 00:06:47.130
and similar to momentum as the effects
 

00:06:47.130 --> 00:06:49.930
and similar to momentum as the effects
of damping out the oscillations in

00:06:49.930 --> 00:06:49.940
of damping out the oscillations in
 

00:06:49.940 --> 00:06:52.130
of damping out the oscillations in
gradient descent in meaning battery

00:06:52.130 --> 00:06:52.140
gradient descent in meaning battery
 

00:06:52.140 --> 00:06:54.080
gradient descent in meaning battery
under sense and allowing you to maybe

00:06:54.080 --> 00:06:54.090
under sense and allowing you to maybe
 

00:06:54.090 --> 00:06:56.690
under sense and allowing you to maybe
use a larger learning rate alpha and

00:06:56.690 --> 00:06:56.700
use a larger learning rate alpha and
 

00:06:56.700 --> 00:06:59.810
use a larger learning rate alpha and
certainly speeding up the learning speed

00:06:59.810 --> 00:06:59.820
certainly speeding up the learning speed
 

00:06:59.820 --> 00:07:02.540
certainly speeding up the learning speed
of your algorithm so now you know how to

00:07:02.540 --> 00:07:02.550
of your algorithm so now you know how to
 

00:07:02.550 --> 00:07:04.580
of your algorithm so now you know how to
implement rmsprop and this will be

00:07:04.580 --> 00:07:04.590
implement rmsprop and this will be
 

00:07:04.590 --> 00:07:06.020
implement rmsprop and this will be
another way for you to speed up your

00:07:06.020 --> 00:07:06.030
another way for you to speed up your
 

00:07:06.030 --> 00:07:08.570
another way for you to speed up your
learning algorithm one fun fact about

00:07:08.570 --> 00:07:08.580
learning algorithm one fun fact about
 

00:07:08.580 --> 00:07:09.440
learning algorithm one fun fact about
rmsprop

00:07:09.440 --> 00:07:09.450
rmsprop
 

00:07:09.450 --> 00:07:11.000
rmsprop
it was actually first proposed now the

00:07:11.000 --> 00:07:11.010
it was actually first proposed now the
 

00:07:11.010 --> 00:07:13.970
it was actually first proposed now the
academic research paper but in a cold

00:07:13.970 --> 00:07:13.980
academic research paper but in a cold
 

00:07:13.980 --> 00:07:15.890
academic research paper but in a cold
seven holes that geoff hinton had taught

00:07:15.890 --> 00:07:15.900
seven holes that geoff hinton had taught
 

00:07:15.900 --> 00:07:18.290
seven holes that geoff hinton had taught
on Coursera many years ago I guess

00:07:18.290 --> 00:07:18.300
on Coursera many years ago I guess
 

00:07:18.300 --> 00:07:20.150
on Coursera many years ago I guess
Coursera wasn't intended to be a

00:07:20.150 --> 00:07:20.160
Coursera wasn't intended to be a
 

00:07:20.160 --> 00:07:23.000
Coursera wasn't intended to be a
platform for dissemination of novel

00:07:23.000 --> 00:07:23.010
platform for dissemination of novel
 

00:07:23.010 --> 00:07:24.740
platform for dissemination of novel
academic research but it worked out

00:07:24.740 --> 00:07:24.750
academic research but it worked out
 

00:07:24.750 --> 00:07:26.690
academic research but it worked out
pretty well in that case it was really

00:07:26.690 --> 00:07:26.700
pretty well in that case it was really
 

00:07:26.700 --> 00:07:28.610
pretty well in that case it was really
from the Coursera course that rmsprop

00:07:28.610 --> 00:07:28.620
from the Coursera course that rmsprop
 

00:07:28.620 --> 00:07:30.830
from the Coursera course that rmsprop
start to become widely known and it

00:07:30.830 --> 00:07:30.840
start to become widely known and it
 

00:07:30.840 --> 00:07:32.180
start to become widely known and it
really took off we'll talk about

00:07:32.180 --> 00:07:32.190
really took off we'll talk about
 

00:07:32.190 --> 00:07:34.760
really took off we'll talk about
momentum which also rmsprop it turns out

00:07:34.760 --> 00:07:34.770
momentum which also rmsprop it turns out
 

00:07:34.770 --> 00:07:36.740
momentum which also rmsprop it turns out
that you put them together you can get

00:07:36.740 --> 00:07:36.750
that you put them together you can get
 

00:07:36.750 --> 00:07:38.990
that you put them together you can get
an even better optimization algorithm

00:07:38.990 --> 00:07:39.000
an even better optimization algorithm
 

00:07:39.000 --> 00:07:42.770
an even better optimization algorithm
let's talk about that in the next video

