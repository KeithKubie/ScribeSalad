WEBVTT
Kind: captions
Language: en

00:00:05.940 --> 00:00:07.690
BILL LUAN: Shanghai
GDG is a very

00:00:07.690 --> 00:00:09.750
interesting developer community.

00:00:09.750 --> 00:00:10.590
SUSANNAH RAUB: I'm
glad somebody

00:00:10.590 --> 00:00:11.800
has asked this question.

00:00:11.800 --> 00:00:13.033
RETO MEIER: This is where
the magic happens.

00:00:13.033 --> 00:00:14.490
JENNY MURPHY: This is primarily
a question and

00:00:14.490 --> 00:00:16.200
answer show, so if any
of you out there

00:00:16.200 --> 00:00:17.450
would like to ask questions.

00:00:25.290 --> 00:00:28.890
ALI AFSHAR: Google Drive SDK
Google developer live session.

00:00:28.890 --> 00:00:31.330
My name's Ali, and
this is Louis.

00:00:31.330 --> 00:00:32.980
LOUIS GRAY: Good
afternoon, sir.

00:00:32.980 --> 00:00:35.390
ALI AFSHAR: And today, we're
going to be talking about

00:00:35.390 --> 00:00:40.110
sharing in Google Drive,
sharing, and permissions, and

00:00:40.110 --> 00:00:41.240
what the model looks like.

00:00:41.240 --> 00:00:43.730
And finally, we're going to
finish with a bit of code to

00:00:43.730 --> 00:00:46.060
show you how it works.

00:00:46.060 --> 00:00:47.720
LOUIS GRAY: All the geeky
stuff, with some

00:00:47.720 --> 00:00:48.870
real work mixed in.

00:00:48.870 --> 00:00:49.810
ALI AFSHAR: Yeah that's right.

00:00:49.810 --> 00:00:50.840
Exactly.

00:00:50.840 --> 00:00:51.420
Exactly.

00:00:51.420 --> 00:00:54.670
So the first thing I want to
talk a bit about is a bit of

00:00:54.670 --> 00:00:57.700
background on what is sharing
in Google Drive.

00:00:57.700 --> 00:00:59.440
Well, Google Drive itself--

00:00:59.440 --> 00:01:01.250
I'm sure you've all used it--

00:01:01.250 --> 00:01:05.030
allows you to collaborate with
people on your documents.

00:01:05.030 --> 00:01:07.270
In fact, I'd say this is one
of the most compelling

00:01:07.270 --> 00:01:10.930
features of Google Drive, is
that it's all built in.

00:01:10.930 --> 00:01:13.710
You share a link with someone,
and then they have access, and

00:01:13.710 --> 00:01:14.850
they can look up the file.

00:01:14.850 --> 00:01:16.740
In fact, they can
modify the file.

00:01:16.740 --> 00:01:18.410
And you can all work
on it together.

00:01:18.410 --> 00:01:22.360
Now, the Google Drive API allows
you to perform all the

00:01:22.360 --> 00:01:25.580
functionality that you would
be performing in the user

00:01:25.580 --> 00:01:28.420
interface, in Google
Drive itself, but

00:01:28.420 --> 00:01:29.850
via a computer program.

00:01:29.850 --> 00:01:33.430
So you can write code to manage
all those things.

00:01:33.430 --> 00:01:37.140
So essentially, that is creating
permissions on files,

00:01:37.140 --> 00:01:40.970
listing permissions on files,
deleting permissions on files,

00:01:40.970 --> 00:01:42.860
and updating permissions
on files.

00:01:42.860 --> 00:01:44.600
LOUIS GRAY: So just from the
very beginning, what are the

00:01:44.600 --> 00:01:46.830
different types of applications
which live within

00:01:46.830 --> 00:01:47.420
Google Drive?

00:01:47.420 --> 00:01:48.330
I remember we recently
re-branded.

00:01:48.330 --> 00:01:50.360
It started out as Google Docs.

00:01:50.360 --> 00:01:52.360
And now we have Drive, which
has a number of different

00:01:52.360 --> 00:01:52.990
applications.

00:01:52.990 --> 00:01:54.890
Maybe you could walk us
through what type of

00:01:54.890 --> 00:01:57.420
applications those are, and do
developers have access through

00:01:57.420 --> 00:01:59.030
the API to each one?

00:02:01.600 --> 00:02:06.530
ALI AFSHAR: So our goal with
the Google Drive SDK is to

00:02:06.530 --> 00:02:10.270
cover all the functionality of
the Documents List API, and

00:02:10.270 --> 00:02:12.830
perhaps add a bit more.

00:02:12.830 --> 00:02:15.730
The kinds of applications that
would use this sharing model

00:02:15.730 --> 00:02:18.760
are, if you can think of
enterprise applications where

00:02:18.760 --> 00:02:23.450
the main administrator would
like to share a file with a

00:02:23.450 --> 00:02:24.440
certain number of people.

00:02:24.440 --> 00:02:27.070
Instead of going into the user
interface and clicking one by

00:02:27.070 --> 00:02:29.940
one-- add this person, add this
person, add this person--

00:02:29.940 --> 00:02:33.620
you can run a script that would
add all the permissions.

00:02:33.620 --> 00:02:36.440
So you can imagine some kind of
document management system

00:02:36.440 --> 00:02:37.830
within a company.

00:02:37.830 --> 00:02:39.950
Everyone needs to read
this particular file.

00:02:39.950 --> 00:02:42.850
Then the administrator can write
a script to do that.

00:02:42.850 --> 00:02:44.620
LOUIS GRAY: And this works
across documents,

00:02:44.620 --> 00:02:48.450
spreadsheets, presentations,
any other types of files?

00:02:48.450 --> 00:02:49.610
ALI AFSHAR: So that's
exactly right.

00:02:49.610 --> 00:02:52.400
Not only it works on the native
Google Docs files,

00:02:52.400 --> 00:02:54.540
which are, as you said,
spreadsheets, docs,

00:02:54.540 --> 00:02:57.810
presentations, drawings,
forms, and the others.

00:02:57.810 --> 00:03:02.310
But also on any binary files you
save in your Google Drive.

00:03:02.310 --> 00:03:04.590
So photos, PDFs, word
documents, all

00:03:04.590 --> 00:03:07.010
this kind of thing.

00:03:07.010 --> 00:03:10.480
There's one unified sharing
model across all of these.

00:03:10.480 --> 00:03:13.070
So your application never needs
to think, is this a

00:03:13.070 --> 00:03:14.580
Google Doc I'm sharing?

00:03:14.580 --> 00:03:16.530
Or is this a PDF I'm sharing?

00:03:16.530 --> 00:03:19.870
Or even, is this one of the
shortcut style of files that

00:03:19.870 --> 00:03:21.270
we have in Google Drive?

00:03:21.270 --> 00:03:23.150
A folder is an example
of that.

00:03:23.150 --> 00:03:24.680
You could share folder
as well.

00:03:24.680 --> 00:03:27.860
But from the API's point of
view, it's exactly the same.

00:03:27.860 --> 00:03:31.840
You perform the same operation
across a file-like object.

00:03:31.840 --> 00:03:35.660
And it will do the
sharing there.

00:03:35.660 --> 00:03:36.860
Does that answer
your question?

00:03:36.860 --> 00:03:37.950
LOUIS GRAY: Absolutely.

00:03:37.950 --> 00:03:39.630
When we look at this, I think
you'll go through the demo.

00:03:39.630 --> 00:03:40.983
And probably some more
questions will

00:03:40.983 --> 00:03:41.600
come up out of that.

00:03:41.600 --> 00:03:42.070
ALI AFSHAR: OK, cool.

00:03:42.070 --> 00:03:45.000
So let's have a look at
my neighbor's dog.

00:03:45.000 --> 00:03:48.510
I really should probably learn
the name of this dog, because

00:03:48.510 --> 00:03:50.500
I'm using him for examples
everywhere.

00:03:50.500 --> 00:03:51.340
LOUIS GRAY: Let's
call him Benji.

00:03:51.340 --> 00:03:52.240
ALI AFSHAR: Yes, let's
call him Benji.

00:03:52.240 --> 00:03:54.150
So Benjii, in fact.

00:03:54.150 --> 00:03:56.800
Let's just edit the description,
shall we?

00:03:56.800 --> 00:03:58.545
"Benjii" with two I's.

00:03:58.545 --> 00:03:59.490
I like it.

00:03:59.490 --> 00:03:59.680
LOUIS GRAY: All right.

00:03:59.680 --> 00:04:01.050
Let's do it.

00:04:01.050 --> 00:04:03.610
ALI AFSHAR: So I'm a user
of Google Drive.

00:04:03.610 --> 00:04:07.060
I have a photo of this beautiful
dog, Benjii.

00:04:07.060 --> 00:04:10.250
And I would like to share
it with someone.

00:04:10.250 --> 00:04:13.490
I click on the "share"
dialogue.

00:04:13.490 --> 00:04:18.149
And I enter my friend.

00:04:18.149 --> 00:04:21.339
At dashertest.com.

00:04:21.339 --> 00:04:22.490
This is Claudio.

00:04:22.490 --> 00:04:23.860
If you've ever watched
our videos in the

00:04:23.860 --> 00:04:25.930
past, you know Claudio.

00:04:25.930 --> 00:04:28.000
So let's see.

00:04:28.000 --> 00:04:31.070
So I just added Claudio
Cherubino at

00:04:31.070 --> 00:04:32.060
dashertest to that.

00:04:32.060 --> 00:04:36.780
And he can edit, or I can set
that so he can view the file,

00:04:36.780 --> 00:04:39.270
or I can set that so you can
comment on the file.

00:04:39.270 --> 00:04:41.080
These are important because
these are different roles

00:04:41.080 --> 00:04:42.190
we're going to talk about.

00:04:42.190 --> 00:04:44.520
So that's all I've done.

00:04:44.520 --> 00:04:46.460
I'll save the changes.

00:04:46.460 --> 00:04:47.950
And it's done.

00:04:47.950 --> 00:04:52.580
I'm actually going to now take
that off so that I can show

00:04:52.580 --> 00:04:56.600
you the equivalent operation
into the Drive API.

00:04:56.600 --> 00:04:58.670
But let's just go over what
have we done here.

00:04:58.670 --> 00:05:01.720
Well, from the API point of
view, we've added a permission

00:05:01.720 --> 00:05:03.220
to this file.

00:05:03.220 --> 00:05:06.600
And a permission has
three components.

00:05:06.600 --> 00:05:09.400
The first one is the role
of the permission.

00:05:09.400 --> 00:05:12.630
That's the action that whoever
is permitted access to this

00:05:12.630 --> 00:05:14.090
will be able to perform.

00:05:14.090 --> 00:05:15.390
You saw the options there.

00:05:15.390 --> 00:05:18.390
They were Edit, they were Read
the File, and they were

00:05:18.390 --> 00:05:19.510
Comment on the File.

00:05:19.510 --> 00:05:21.240
There's another role
that is the owner.

00:05:21.240 --> 00:05:23.940
That I own this file, because
I uploaded it to Drive.

00:05:23.940 --> 00:05:24.990
So I'm the owner there.

00:05:24.990 --> 00:05:27.590
So that's the first
thing-- the role.

00:05:27.590 --> 00:05:30.025
The second thing is the type
of the permission.

00:05:30.025 --> 00:05:32.560
Now, a type is kind
of like a scope.

00:05:32.560 --> 00:05:36.280
But you can give a permission
to a file to either a single

00:05:36.280 --> 00:05:41.330
user, a whole domain, such as
the google.com domain--

00:05:41.330 --> 00:05:45.600
all users under google.com--
or to the general public.

00:05:45.600 --> 00:05:48.960
So the type of the permission
defines the scope.

00:05:48.960 --> 00:05:52.030
So in this case, I gave what
we call a user permission.

00:05:52.030 --> 00:05:54.230
So that was just for
a single user.

00:05:54.230 --> 00:05:57.310
So we've got the role, the type,
and then finally the

00:05:57.310 --> 00:05:58.380
value of the permission.

00:05:58.380 --> 00:06:01.800
The value is the user, or the
domain, or the public, or

00:06:01.800 --> 00:06:03.570
whatever that I granted
access to.

00:06:03.570 --> 00:06:06.130
LOUIS GRAY: And in this case,
you only gave access for one

00:06:06.130 --> 00:06:08.830
user to one single
individual file.

00:06:08.830 --> 00:06:09.260
ALI AFSHAR: Exactly.

00:06:09.260 --> 00:06:11.290
LOUIS GRAY: And you're going to
go ahead and show us that

00:06:11.290 --> 00:06:12.200
using the API.

00:06:12.200 --> 00:06:13.930
ALI AFSHAR: Exactly right.

00:06:13.930 --> 00:06:16.470
So just to show you there's
nothing up my sleeve, you can

00:06:16.470 --> 00:06:18.870
see, I've removed that
permission there.

00:06:18.870 --> 00:06:20.120
Nothing up my sleeves.

00:06:23.060 --> 00:06:25.420
So let's just go ahead and
do it, straight away.

00:06:25.420 --> 00:06:26.000
Why not?

00:06:26.000 --> 00:06:31.230
So let's start a Python shell.

00:06:34.370 --> 00:06:37.360
Now, as usual, I've created
my own auth module

00:06:37.360 --> 00:06:38.445
that handles auth.

00:06:38.445 --> 00:06:41.310
So I don't have to show you
my user credentials.

00:06:41.310 --> 00:06:45.930
So, From auth import http.

00:06:45.930 --> 00:06:46.980
There it is.

00:06:46.980 --> 00:06:49.280
From apiclient.discovery.

00:06:49.280 --> 00:06:53.330
We're going to, in the usual
way, build Drive

00:06:53.330 --> 00:06:58.260
service using discovery.

00:06:58.260 --> 00:06:59.640
We pass the name.

00:06:59.640 --> 00:07:01.930
We pass the version.

00:07:01.930 --> 00:07:05.650
And we pass our authorize
HTTP instance.

00:07:05.650 --> 00:07:07.240
And we should have
a drive object.

00:07:07.240 --> 00:07:08.600
There we go to that.

00:07:08.600 --> 00:07:10.940
So first thing I'm going to do
is find the file that we want

00:07:10.940 --> 00:07:11.930
to deal with.

00:07:11.930 --> 00:07:14.520
You may already have the file.

00:07:14.520 --> 00:07:16.040
You may need to get it.

00:07:16.040 --> 00:07:24.880
So drive dot files dot list
dot execute items.

00:07:24.880 --> 00:07:26.680
So this is going to get
the whole list of all

00:07:26.680 --> 00:07:28.150
the files in my drive.

00:07:28.150 --> 00:07:29.400
And I'm going to
get the items.

00:07:29.400 --> 00:07:31.560
Those are the individual
elements and the response.

00:07:31.560 --> 00:07:32.940
And I'm going to get
the first one.

00:07:32.940 --> 00:07:34.545
And I'm going to
read its title.

00:07:34.545 --> 00:07:37.660
How about that for
a long command?

00:07:37.660 --> 00:07:39.710
LOUIS GRAY: Incredible.

00:07:39.710 --> 00:07:40.450
ALI AFSHAR: Ta-da!

00:07:40.450 --> 00:07:42.150
0.jpg.

00:07:42.150 --> 00:07:46.660
Those of you are astute, you
know that that was the file I

00:07:46.660 --> 00:07:47.210
was dealing with.

00:07:47.210 --> 00:07:51.180
So this time, I just want the
ID of the file, because I'm

00:07:51.180 --> 00:07:53.500
going to use that ID, then,
to apply permissions.

00:07:53.500 --> 00:07:56.940
And I'm going to store it in
a local variable called

00:07:56.940 --> 00:08:01.230
myfileId, so I never have
to look that up again.

00:08:01.230 --> 00:08:03.540
So my file ID has got the
ID of the file you

00:08:03.540 --> 00:08:05.260
want to deal with.

00:08:05.260 --> 00:08:06.235
That's the files feed.

00:08:06.235 --> 00:08:09.920
Now, to perform permissions
operations, you need to use

00:08:09.920 --> 00:08:13.600
the permissions feed,
which is here.

00:08:13.600 --> 00:08:14.620
Drive.permissions.

00:08:14.620 --> 00:08:17.670
Now, I'll show you a little
trick of the Python library.

00:08:17.670 --> 00:08:19.690
You can just do
drive.permissions.

00:08:19.690 --> 00:08:21.050
And you can set that to value.

00:08:21.050 --> 00:08:22.150
And we've got this perms.

00:08:22.150 --> 00:08:25.910
And if I press dot, then I get
full code completion on that.

00:08:25.910 --> 00:08:29.540
So it shows me all the
operations I can do.

00:08:29.540 --> 00:08:31.535
First thing I'm going to do
is list the permissions.

00:08:31.535 --> 00:08:33.360
So permissions.list.

00:08:33.360 --> 00:08:37.789
And always, when doing any
permission operation, you need

00:08:37.789 --> 00:08:38.919
to pass the file ID.

00:08:38.919 --> 00:08:41.549
And you can see here, in my
beautiful code completion,

00:08:41.549 --> 00:08:44.420
that it tells you, file
ID, string, the ID

00:08:44.420 --> 00:08:47.390
for the file required.

00:08:47.390 --> 00:08:49.110
So fileId equals myfileId.

00:08:52.126 --> 00:08:55.150
And we execute it.

00:08:55.150 --> 00:08:56.360
And there we go.

00:08:56.360 --> 00:08:57.980
So we get a list of
these permissions.

00:08:57.980 --> 00:09:02.130
Now, you can't exactly
see that, so we're

00:09:02.130 --> 00:09:03.495
going to print it nicely.

00:09:09.290 --> 00:09:10.680
Using the pretty print module.

00:09:10.680 --> 00:09:11.700
If you don't use this,
it's really

00:09:11.700 --> 00:09:13.140
useful for showing stuff.

00:09:13.140 --> 00:09:13.400
Right.

00:09:13.400 --> 00:09:14.430
So there we go.

00:09:14.430 --> 00:09:17.070
So we can see that the
permissions feed has a list of

00:09:17.070 --> 00:09:18.530
items in there.

00:09:18.530 --> 00:09:21.490
And each item corresponds to
one of the permissions.

00:09:21.490 --> 00:09:24.430
And you can see we've only got
one permission in here, and

00:09:24.430 --> 00:09:25.920
that is for me.

00:09:25.920 --> 00:09:26.170
OK?

00:09:26.170 --> 00:09:27.770
Because I uploaded the file.

00:09:27.770 --> 00:09:29.430
So it's got my name.

00:09:29.430 --> 00:09:31.190
And it's got the
role that I am.

00:09:31.190 --> 00:09:33.140
And I'm the Owner role.

00:09:33.140 --> 00:09:36.070
I can actually transfer
the Owner role

00:09:36.070 --> 00:09:36.900
using the same method.

00:09:36.900 --> 00:09:40.440
But let's now add Claudio.

00:09:40.440 --> 00:09:44.400
So perms.insert.

00:09:44.400 --> 00:09:46.780
In fact, should we make the
permission object first?

00:09:46.780 --> 00:09:50.880
So, as I said, the permission
object has three things.

00:09:50.880 --> 00:09:54.620
So the type, which we said was
user, because we're giving it

00:09:54.620 --> 00:09:56.000
to one user.

00:09:56.000 --> 00:09:56.780
The role--

00:09:56.780 --> 00:10:00.340
well, let's make Claudio
a reader first.

00:10:00.340 --> 00:10:01.100
OK.

00:10:01.100 --> 00:10:06.010
And the value, who is C Cher--
is it CCherubino or

00:10:06.010 --> 00:10:08.690
ClaudioCherubino?

00:10:08.690 --> 00:10:09.940
We'll soon know.

00:10:12.730 --> 00:10:14.620
So that's the permission.

00:10:14.620 --> 00:10:18.780
Now, we do perms.insert.

00:10:18.780 --> 00:10:20.580
So we're going to insert
the permission.

00:10:20.580 --> 00:10:23.450
We always have to give
the file ID--

00:10:23.450 --> 00:10:24.720
myfileId.

00:10:24.720 --> 00:10:27.620
And then we pass the permission
that we just

00:10:27.620 --> 00:10:30.070
created as a body.

00:10:30.070 --> 00:10:32.570
Because it's a post request
this time, and so that's

00:10:32.570 --> 00:10:33.660
always post.

00:10:33.660 --> 00:10:34.510
And we send it.

00:10:34.510 --> 00:10:35.430
And ta-dah!

00:10:35.430 --> 00:10:36.870
It was created.

00:10:36.870 --> 00:10:39.570
So in the return, we got
the new permission

00:10:39.570 --> 00:10:40.560
object that was created.

00:10:40.560 --> 00:10:42.000
And we can see that
it's gone away.

00:10:42.000 --> 00:10:45.190
And it's resolved Claudio's
full name

00:10:45.190 --> 00:10:47.250
from the email address.

00:10:47.250 --> 00:10:50.330
This is really useful, because
you can then, in your user

00:10:50.330 --> 00:10:54.620
interface for your program,
you can display his name.

00:10:54.620 --> 00:10:57.300
And then, if we list all the
permissions again, we should

00:10:57.300 --> 00:10:59.300
be able to see these.

00:10:59.300 --> 00:11:00.187
Permissions.list.

00:11:00.187 --> 00:11:02.610
In fact, let's print
it nicely.

00:11:02.610 --> 00:11:06.320
So we should see now that
we have two permissions.

00:11:06.320 --> 00:11:09.280
Maybe you can't see that because
of the scrolling.

00:11:09.280 --> 00:11:12.010
I see both you and Claudio
have access to that file.

00:11:12.010 --> 00:11:14.050
ALI AFSHAR: So now both of us
have access to that file.

00:11:14.050 --> 00:11:15.260
LOUIS GRAY: So we have
a couple questions.

00:11:15.260 --> 00:11:16.540
One person was asking--

00:11:16.540 --> 00:11:17.960
you went ahead and demonstrated
this using a

00:11:17.960 --> 00:11:18.700
Python shell.

00:11:18.700 --> 00:11:19.080
ALI AFSHAR: Sure.

00:11:19.080 --> 00:11:20.120
LOUIS GRAY: So they're
very curious.

00:11:20.120 --> 00:11:22.260
What other languages can
you use to interact

00:11:22.260 --> 00:11:23.200
with the Drive API?

00:11:23.200 --> 00:11:25.080
For example, PHP.

00:11:25.080 --> 00:11:28.000
What can you do to go ahead and
create an application that

00:11:28.000 --> 00:11:29.100
impacts our API?

00:11:29.100 --> 00:11:31.920
ALI AFSHAR: So we have client
libraries for all the

00:11:31.920 --> 00:11:32.850
languages almost.

00:11:32.850 --> 00:11:34.150
Obviously not all
the languages,

00:11:34.150 --> 00:11:35.500
but the major languages.

00:11:35.500 --> 00:11:40.190
And we have samples to do this
exact functionality in, I

00:11:40.190 --> 00:11:42.350
think, eight languages
or seven languages.

00:11:42.350 --> 00:11:50.460
So if you use Java, PHP, .NET,
Python, Objective-C, Go,

00:11:50.460 --> 00:11:52.860
JavaScript, Ruby--

00:11:52.860 --> 00:11:53.610
who have I missed out?

00:11:53.610 --> 00:11:54.920
LOUIS GRAY: That's about
all of them.

00:11:54.920 --> 00:11:56.125
ALI AFSHAR: So if you use
one of those languages--

00:11:56.125 --> 00:11:57.330
LOUIS GRAY: Did you get .NET?

00:11:57.330 --> 00:11:58.220
ALI AFSHAR: Yeah, we got .NET.

00:11:58.220 --> 00:11:59.450
We never forget .NET.

00:11:59.450 --> 00:12:00.560
We love .NET developers.

00:12:00.560 --> 00:12:03.030
We love you.

00:12:03.030 --> 00:12:05.070
If you use one of these
languages, the client library

00:12:05.070 --> 00:12:07.670
is not only there, but the
surface you use is almost

00:12:07.670 --> 00:12:09.520
going to be exactly like this.

00:12:09.520 --> 00:12:11.980
So the list method is going
to be called List.

00:12:11.980 --> 00:12:14.330
You might have to create the
body in a different way.

00:12:14.330 --> 00:12:16.170
But you can use any of
those languages.

00:12:16.170 --> 00:12:19.820
Furthermore, this is just
a simple HTTPS request.

00:12:19.820 --> 00:12:20.900
It's just a post.

00:12:20.900 --> 00:12:23.330
So, in answer to that,
Louis, you can write

00:12:23.330 --> 00:12:25.250
your own client library.

00:12:25.250 --> 00:12:26.970
Or you can use your own
language you invented.

00:12:26.970 --> 00:12:29.360
As long as it can make web
requests-- and most languages

00:12:29.360 --> 00:12:31.050
these days can--

00:12:31.050 --> 00:12:33.160
then you can use that to create
these permissions.

00:12:33.160 --> 00:12:35.430
LOUIS GRAY: Now, we just did
a demo of sharing a single

00:12:35.430 --> 00:12:38.490
individual file with a single
individual user.

00:12:38.490 --> 00:12:40.690
But often, there are questions
like, how can you get access

00:12:40.690 --> 00:12:41.760
to an entire folder?

00:12:41.760 --> 00:12:43.620
Is this enabled through
the API as well?

00:12:43.620 --> 00:12:44.010
ALI AFSHAR: Yeah.

00:12:44.010 --> 00:12:45.570
So that is enabled
through the API.

00:12:45.570 --> 00:12:47.950
Now, when you share a folder,
all the files

00:12:47.950 --> 00:12:49.480
within it are shared.

00:12:49.480 --> 00:12:51.130
So this is one of our
best practices

00:12:51.130 --> 00:12:52.100
that we really recommend.

00:12:52.100 --> 00:12:56.440
If you have 100 files, and you
want to share them with 100

00:12:56.440 --> 00:12:59.800
people, well that is kind
of a painful operation.

00:12:59.800 --> 00:13:03.210
But if you put all these files
into a single folder, and you

00:13:03.210 --> 00:13:06.140
share that folder with everyone,
then you're going to

00:13:06.140 --> 00:13:07.290
be absolutely fine.

00:13:07.290 --> 00:13:09.170
They will all get
access to that.

00:13:09.170 --> 00:13:10.810
LOUIS GRAY: How soon until your
voicemail is directly on

00:13:10.810 --> 00:13:11.280
Google Drive there?

00:13:11.280 --> 00:13:13.860
That would have been straight
into one thing

00:13:13.860 --> 00:13:14.745
and sync this up.

00:13:14.745 --> 00:13:15.940
I'm curious about one piece.

00:13:15.940 --> 00:13:18.640
You're talking about sharing
a lot of your content.

00:13:18.640 --> 00:13:20.250
As for me, I'm somebody
who puts a lot of

00:13:20.250 --> 00:13:21.260
my content on Drive.

00:13:21.260 --> 00:13:24.610
And that can a shopping list
from the wife, or a to-do

00:13:24.610 --> 00:13:26.650
list, that can be
our kids photos.

00:13:26.650 --> 00:13:28.705
Because I know that I can get
my content in the cloud no

00:13:28.705 --> 00:13:29.970
matter where I go.

00:13:29.970 --> 00:13:32.870
So with that type of thing
comes questions around

00:13:32.870 --> 00:13:33.835
security or permissions.

00:13:33.835 --> 00:13:36.510
And so what you've shown me is
the capability to go into a

00:13:36.510 --> 00:13:39.530
script and give access
to more files.

00:13:39.530 --> 00:13:41.780
What can I do as a user?

00:13:41.780 --> 00:13:44.130
Or maybe you can tell me how
an application can get

00:13:44.130 --> 00:13:47.040
permission to access my drive?

00:13:47.040 --> 00:13:47.380
ALI AFSHAR: OK.

00:13:47.380 --> 00:13:50.190
So that is a slightly
different thing.

00:13:50.190 --> 00:13:54.270
And that's based authorization
for APIs.

00:13:54.270 --> 00:13:58.160
So what you haven't seen here--
and perhaps I should go

00:13:58.160 --> 00:14:00.070
through it, so you
can see how.

00:14:00.070 --> 00:14:02.770
But what you haven't seen is
the authorization step.

00:14:02.770 --> 00:14:06.430
So at some point, this
application has asked me, my

00:14:06.430 --> 00:14:10.400
user, can I access your
Google Drive?

00:14:10.400 --> 00:14:11.440
And I've said yes.

00:14:11.440 --> 00:14:13.505
And then it's got a token
from Google, and

00:14:13.505 --> 00:14:14.680
it's stored that token.

00:14:14.680 --> 00:14:17.540
And it's using that token
to make the requests.

00:14:17.540 --> 00:14:20.650
So this is really the
user authorizes your

00:14:20.650 --> 00:14:22.130
application to do stuff--

00:14:22.130 --> 00:14:23.180
step one.

00:14:23.180 --> 00:14:26.090
Then the application does
stuff, part of which is

00:14:26.090 --> 00:14:29.110
authorizing other users to be
able to read that file.

00:14:29.110 --> 00:14:29.550
OK?

00:14:29.550 --> 00:14:31.790
LOUIS GRAY: So I can make an
application that goes willy

00:14:31.790 --> 00:14:33.380
nilly through everybody's
folders and

00:14:33.380 --> 00:14:34.260
downloads all of it.

00:14:34.260 --> 00:14:35.060
ALI AFSHAR: Absolutely not.

00:14:35.060 --> 00:14:36.210
That would be--

00:14:36.210 --> 00:14:36.620
LOUIS GRAY: A bad thing.

00:14:36.620 --> 00:14:37.910
ALI AFSHAR: --really bad.

00:14:37.910 --> 00:14:38.860
That would be really bad.

00:14:38.860 --> 00:14:40.040
LOUIS GRAY: I just wanted to
make sure we covered that.

00:14:40.040 --> 00:14:42.650
I know in some of our previous
GDL sessions, we've walked

00:14:42.650 --> 00:14:43.950
through that authorization
token.

00:14:43.950 --> 00:14:46.340
I think it's one of Claudio's
favorite phrases.

00:14:46.340 --> 00:14:48.730
And now that we're at this
point, now that we have the

00:14:48.730 --> 00:14:50.820
authorization that's already
taken place, now we're getting

00:14:50.820 --> 00:14:53.860
deeper into the code of how you
can really impact that API

00:14:53.860 --> 00:14:54.820
and hit the permissions.

00:14:54.820 --> 00:14:56.370
Not only for files, for
folders as well.

00:14:56.370 --> 00:14:56.770
ALI AFSHAR: Exactly.

00:14:56.770 --> 00:14:57.470
Well, let's have a look.

00:14:57.470 --> 00:14:58.720
Did it work, in fact?

00:14:58.720 --> 00:15:01.450
So you saw that there were no
permissions on this file.

00:15:01.450 --> 00:15:04.640
But if I now go to it, and I
click on the Share button, you

00:15:04.640 --> 00:15:08.860
see that the user I added
has actually appeared.

00:15:08.860 --> 00:15:11.300
And he can view permissions.

00:15:11.300 --> 00:15:14.540
So let's remove him,
just as a test.

00:15:14.540 --> 00:15:17.560
And let's go back here and list
the permissions again on

00:15:17.560 --> 00:15:18.220
the same file.

00:15:18.220 --> 00:15:20.180
And you can see there's
only one person there.

00:15:20.180 --> 00:15:25.755
In fact, we can see--

00:15:29.350 --> 00:15:29.570
OK.

00:15:29.570 --> 00:15:31.770
There's only me.

00:15:31.770 --> 00:15:33.150
If we do another insert--

00:15:33.150 --> 00:15:37.270
but this time we're going
to make Claudio be a

00:15:37.270 --> 00:15:38.920
writer on the file.

00:15:38.920 --> 00:15:41.870
So now, actually, Claudio
can change the file.

00:15:41.870 --> 00:15:45.100
Same value.

00:15:45.100 --> 00:15:46.860
Role--

00:15:46.860 --> 00:15:48.950
writer.

00:15:48.950 --> 00:15:51.160
Whoops.

00:15:51.160 --> 00:15:54.052
See what happens when do you
live demonstrations, Louis?

00:15:54.052 --> 00:15:57.640
LOUIS GRAY: That's how
they know it's live.

00:15:57.640 --> 00:15:58.890
ALI AFSHAR: Role value.

00:16:02.330 --> 00:16:04.440
Type.

00:16:04.440 --> 00:16:05.150
OK.

00:16:05.150 --> 00:16:09.050
And we do the insert,
perms.insert.

00:16:09.050 --> 00:16:10.879
File ID equals myfileId.

00:16:17.450 --> 00:16:18.770
There you go.

00:16:18.770 --> 00:16:19.840
So we're inserting again.

00:16:19.840 --> 00:16:21.940
But this time you see
that it's got the

00:16:21.940 --> 00:16:22.990
same permission, Claudio.

00:16:22.990 --> 00:16:24.660
But this time he's a writer.

00:16:24.660 --> 00:16:27.360
And how does that translate
in the user interface?

00:16:27.360 --> 00:16:29.380
Well, let's close this dialogue
down and let's

00:16:29.380 --> 00:16:30.320
re-open it.

00:16:30.320 --> 00:16:33.160
And you can see, he
can now edit.

00:16:33.160 --> 00:16:37.100
So this is how the permissions
model maps directly onto what

00:16:37.100 --> 00:16:40.440
you've got on Google Drive.

00:16:40.440 --> 00:16:42.680
And you can do all these
operations with Google Drive.

00:16:42.680 --> 00:16:44.440
It's just one way is
the user interface.

00:16:44.440 --> 00:16:46.140
And the other way is
through the API.

00:16:46.140 --> 00:16:47.755
LOUIS GRAY: Now, one thing I
noticed, in terms of the way

00:16:47.755 --> 00:16:49.970
that Google Drive is a little
bit different, is it

00:16:49.970 --> 00:16:52.260
automatically recognized your
permission changes, and you

00:16:52.260 --> 00:16:54.270
didn't even have to refresh.

00:16:54.270 --> 00:16:56.890
We've gotten away from that
model of refreshing to get the

00:16:56.890 --> 00:16:58.600
new permissions and
pull them in.

00:16:58.600 --> 00:17:01.340
But a lot like Drive, captures
every keystroke as

00:17:01.340 --> 00:17:02.870
you modify a file.

00:17:02.870 --> 00:17:06.060
It also manages to recognize
the permission changes that

00:17:06.060 --> 00:17:08.310
were done through the API,
without you having to hit F5

00:17:08.310 --> 00:17:10.410
or refreshing your browser.

00:17:10.410 --> 00:17:12.140
ALI AFSHAR: Exactly.

00:17:12.140 --> 00:17:14.690
Modern web applications.

00:17:14.690 --> 00:17:19.550
We're a long way away, now,
from the server web page.

00:17:19.550 --> 00:17:21.359
Every time you get
a web page, the

00:17:21.359 --> 00:17:23.420
information can be updated.

00:17:23.420 --> 00:17:26.450
Google Drive itself, when you
can look in the explorer

00:17:26.450 --> 00:17:32.100
console in your web browser to
see all the traffic going on.

00:17:32.100 --> 00:17:34.180
There is a huge amount
of stuff.

00:17:34.180 --> 00:17:35.180
It's all very dynamic.

00:17:35.180 --> 00:17:37.390
Lots of little bits, lots of
browser channels, and that

00:17:37.390 --> 00:17:38.540
kind of thing.

00:17:38.540 --> 00:17:40.140
As I said, I'm not giving
away any information.

00:17:40.140 --> 00:17:42.390
You can just go and see
all the traffic

00:17:42.390 --> 00:17:43.600
going back and forth.

00:17:43.600 --> 00:17:49.640
But I'd say, these days, to be
a well-behaved modern web

00:17:49.640 --> 00:17:51.160
application, you would
actually have

00:17:51.160 --> 00:17:52.370
to do it like that.

00:17:52.370 --> 00:17:53.900
LOUIS GRAY: So we were talk
about the Drive API.

00:17:53.900 --> 00:17:54.840
Now, is it new?

00:17:54.840 --> 00:17:58.030
I mean, Drive, in terms of a
Google product, is fairly new.

00:17:58.030 --> 00:17:59.700
We've had Docs around
for some time.

00:17:59.700 --> 00:18:04.180
And I know earlier, we talked
about the Documents List API.

00:18:04.180 --> 00:18:07.400
First, what's different between
the Drive API versus

00:18:07.400 --> 00:18:09.860
the Documents List API relative
to permissions?

00:18:09.860 --> 00:18:11.810
And the second, is
it new overall?

00:18:11.810 --> 00:18:13.435
ALI AFSHAR: So yes,
it's new overall.

00:18:13.435 --> 00:18:14.550
Reasonably new.

00:18:14.550 --> 00:18:18.212
We launched earlier this
year, I'll say.

00:18:18.212 --> 00:18:21.970
The Drive API is new.

00:18:21.970 --> 00:18:23.100
It's a new surface.

00:18:23.100 --> 00:18:26.730
But actually, it's built on
fairly mature technology that

00:18:26.730 --> 00:18:29.080
brought you the Documents
List API.

00:18:29.080 --> 00:18:32.460
And the Documents List API went
from version 1, 2, 3.

00:18:32.460 --> 00:18:35.010
And the Drive API is pretty
much version 4 of the

00:18:35.010 --> 00:18:36.880
Documents List API.

00:18:36.880 --> 00:18:42.910
Overall what has changed is--
well, the main thing is the

00:18:42.910 --> 00:18:46.070
architecture on which
the API lives.

00:18:46.070 --> 00:18:49.500
And that architecture allows use
of nice things, like all

00:18:49.500 --> 00:18:52.640
the automatic degenerated and
up-to-date client libraries,

00:18:52.640 --> 00:18:54.830
excellent documentation,
that kind of thing.

00:18:54.830 --> 00:18:58.080
So it was a really an upgrade
to the Documents List API to

00:18:58.080 --> 00:19:00.130
move it to this better
architecture.

00:19:00.130 --> 00:19:02.540
How has it changed in regards
to permissions?

00:19:02.540 --> 00:19:05.230
Well, one tiny little thing
has actually changed.

00:19:05.230 --> 00:19:08.310
And this we're seeing is quite
a big impact for both

00:19:08.310 --> 00:19:09.740
developers and users.

00:19:09.740 --> 00:19:11.980
So I'll take a bit of
time to explain it.

00:19:11.980 --> 00:19:15.640
Now, when you list the
permissions, I can show you.

00:19:15.640 --> 00:19:17.890
Or when you're looking
at a permission--

00:19:17.890 --> 00:19:19.300
this permission object--

00:19:19.300 --> 00:19:22.490
you can see that the name of the
user is there, and all the

00:19:22.490 --> 00:19:25.250
other information.

00:19:25.250 --> 00:19:31.130
But the email address of the
user is not actually there.

00:19:31.130 --> 00:19:33.430
So you have this ID,
the permission ID.

00:19:33.430 --> 00:19:35.480
That is this reproducible
ID that is very

00:19:35.480 --> 00:19:36.430
specific for the user.

00:19:36.430 --> 00:19:38.350
But there's no email address.

00:19:38.350 --> 00:19:41.110
So before, with the Documents
List API, we were seeing that

00:19:41.110 --> 00:19:43.330
the email address was available
in the permissions.

00:19:43.330 --> 00:19:44.990
Now, why is that bad?

00:19:44.990 --> 00:19:46.030
You might think it's useful.

00:19:46.030 --> 00:19:48.210
But it's useful from a developer
point of view,

00:19:48.210 --> 00:19:49.240
potentially.

00:19:49.240 --> 00:19:53.790
But it's dramatically invasive
of a user's privacy.

00:19:53.790 --> 00:19:54.570
Why?

00:19:54.570 --> 00:19:57.710
Because you can see the email
address of all the other

00:19:57.710 --> 00:20:00.090
people who have access
to a file.

00:20:00.090 --> 00:20:04.800
So user A shares the file with
users B and C. And B and C

00:20:04.800 --> 00:20:08.650
don't necessarily need
to know each other.

00:20:08.650 --> 00:20:10.540
Now, by putting the email
address in there, we were

00:20:10.540 --> 00:20:14.420
leaking B's email address to C
and C's email address to B.

00:20:14.420 --> 00:20:15.890
And that's not exactly
what we wanted.

00:20:15.890 --> 00:20:19.080
So now, we have this permission
ID that is returned

00:20:19.080 --> 00:20:20.810
instead of that.

00:20:20.810 --> 00:20:24.980
Now, that permission ID is
constant for the user.

00:20:24.980 --> 00:20:29.010
So Claudio will always have
this permission ID.

00:20:29.010 --> 00:20:30.060
That way, I can match up.

00:20:30.060 --> 00:20:32.560
So I can make sure I can remove
his permission, I can

00:20:32.560 --> 00:20:34.200
add his permission, do
whatever I like just

00:20:34.200 --> 00:20:35.440
by using that ID.

00:20:35.440 --> 00:20:38.090
But then the information
about his email address

00:20:38.090 --> 00:20:39.260
is not being leaked.

00:20:39.260 --> 00:20:41.510
LOUIS GRAY: Now, that permission
ID, as far as where

00:20:41.510 --> 00:20:43.790
that's generated, is that
generated specifically for

00:20:43.790 --> 00:20:45.200
this application?

00:20:45.200 --> 00:20:47.120
Or is this, for example,
identified

00:20:47.120 --> 00:20:48.250
with the Google profile?

00:20:48.250 --> 00:20:50.530
If I were to take that string
and plug it into the Google

00:20:50.530 --> 00:20:53.970
profile, would the other
user's ID come up?

00:20:53.970 --> 00:20:55.040
ALI AFSHAR: No.

00:20:55.040 --> 00:20:57.750
It's generated specifically
for Google Drive.

00:20:57.750 --> 00:21:00.580
It is related to the user's
Google profile, yes.

00:21:00.580 --> 00:21:05.250
Because obviously, we have one
system for managing users.

00:21:05.250 --> 00:21:07.070
So it's related to that
and it directly

00:21:07.070 --> 00:21:09.510
links to that profile.

00:21:09.510 --> 00:21:11.160
But there are additional bits.

00:21:11.160 --> 00:21:15.140
For example, you can share with
Google Drive a file to a

00:21:15.140 --> 00:21:18.050
user that is not actually
a Google user.

00:21:18.050 --> 00:21:20.330
So because of that, there has
to be some extra things.

00:21:20.330 --> 00:21:23.760
So I can share it with
your Hotmail account.

00:21:26.960 --> 00:21:27.800
LouisIsCool99@hotmail.com.

00:21:27.800 --> 00:21:28.200
LOUIS GRAY: You got me.

00:21:28.200 --> 00:21:30.940
You must have seen that, yes.

00:21:30.940 --> 00:21:33.060
ALI AFSHAR: And even though
that's not a Google account,

00:21:33.060 --> 00:21:35.150
you can still share
files with them.

00:21:35.150 --> 00:21:36.270
So it needs a bit more.

00:21:36.270 --> 00:21:38.200
But apart from that, it's
a similar concept.

00:21:41.150 --> 00:21:41.760
OK.

00:21:41.760 --> 00:21:43.085
Any more questions for me?

00:21:43.085 --> 00:21:44.230
LOUIS GRAY: Not at this time.

00:21:44.230 --> 00:21:45.895
ALI AFSHAR: OK, cool.

00:21:45.895 --> 00:21:47.920
So we've gone over
permissions.

00:21:47.920 --> 00:21:49.540
Just a little recap.

00:21:49.540 --> 00:21:51.190
Firstly, the Drive API.

00:21:51.190 --> 00:21:52.790
Anything you can do in the
user interface with

00:21:52.790 --> 00:21:57.340
permissions, you can do
with the Drive API.

00:21:57.340 --> 00:21:59.710
Drive has permissions
on files.

00:21:59.710 --> 00:22:04.110
Each permission has a type,
a role, and a value.

00:22:04.110 --> 00:22:06.910
The type defines the scope,
which can either be user, a

00:22:06.910 --> 00:22:10.500
domain, a group, or
the whole world.

00:22:10.500 --> 00:22:11.500
That's called default.

00:22:11.500 --> 00:22:13.110
That means a public file.

00:22:13.110 --> 00:22:15.500
The value is the email address,
the domain name, the

00:22:15.500 --> 00:22:21.240
group name for that
permission.

00:22:21.240 --> 00:22:25.290
And the role is what that person
or group of people can

00:22:25.290 --> 00:22:26.260
do with the file.

00:22:26.260 --> 00:22:29.700
That is, read it, write
it, comment on

00:22:29.700 --> 00:22:31.132
it, or is the owner.

00:22:31.132 --> 00:22:34.350
Now, you can add these
permissions purely by making

00:22:34.350 --> 00:22:35.295
an insert request.

00:22:35.295 --> 00:22:37.380
As long as you've got your
file ID, you make a

00:22:37.380 --> 00:22:40.120
permissions.insert with
that simple body.

00:22:40.120 --> 00:22:43.750
And it will generate that
permission for you.

00:22:43.750 --> 00:22:46.940
Those permissions, as Louis
pointed out, are directly and

00:22:46.940 --> 00:22:50.590
immediately reflected in the
user interface so that anyone

00:22:50.590 --> 00:22:53.070
using that can suddenly
see them appear.

00:22:53.070 --> 00:22:56.920
And using that simple method,
you can share files in your

00:22:56.920 --> 00:23:00.036
Google Drive with anyone
using a script.

00:23:00.036 --> 00:23:02.500
Oh, and we have examples in
all the major languages.

00:23:02.500 --> 00:23:03.370
So go and check them out.

00:23:03.370 --> 00:23:04.880
You should just be able
to copy paste them.

00:23:04.880 --> 00:23:06.740
If you can't, let us know.

00:23:06.740 --> 00:23:09.310
We're keen to have them all
absolutely perfect.

00:23:09.310 --> 00:23:11.150
LOUIS GRAY: And not only that,
but we've done previous Google

00:23:11.150 --> 00:23:13.510
Developers Live sessions in
practically every language.

00:23:13.510 --> 00:23:16.040
And so we have a series
of events.

00:23:16.040 --> 00:23:20.085
Writing your first app in Drive,
in JavaScript, Ruby,

00:23:20.085 --> 00:23:23.070
Java, PHP, .NET, all of
those flavors that we

00:23:23.070 --> 00:23:24.270
talked about before.

00:23:24.270 --> 00:23:27.270
So if you're a developer who's
just starting to work in the

00:23:27.270 --> 00:23:29.550
Drive API, we can
get you started.

00:23:29.550 --> 00:23:31.220
And now you know how to share
permissions as well.

00:23:31.220 --> 00:23:32.080
So appreciate that.

00:23:32.080 --> 00:23:33.800
ALI AFSHAR: So take a quick
start guide that Louis

00:23:33.800 --> 00:23:38.710
mentioned, developers.googl
e.com/drive/quickstart.

00:23:38.710 --> 00:23:40.900
Take the one for your language,
and then copy paste

00:23:40.900 --> 00:23:43.310
the sample from the reference
docs for insert and

00:23:43.310 --> 00:23:45.760
permission, permissions.insert.

00:23:45.760 --> 00:23:47.410
And you should be
able to go in.

00:23:47.410 --> 00:23:49.340
Five minutes for the quick
start, two minutes for the

00:23:49.340 --> 00:23:50.390
copy paste--

00:23:50.390 --> 00:23:53.230
seven minutes, I reckon.

00:23:53.230 --> 00:23:53.730
LOUIS GRAY: Not bad.

00:23:53.730 --> 00:23:56.510
ALI AFSHAR: Not bad.

00:23:56.510 --> 00:23:58.530
LOUIS GRAY: So anything else
for us, in terms of code or

00:23:58.530 --> 00:23:59.120
preference?

00:23:59.120 --> 00:24:00.740
ALI AFSHAR: No, that's
also the code.

00:24:00.740 --> 00:24:03.410
If any questions have come
through on YouTube, I'm happy

00:24:03.410 --> 00:24:04.380
to answer them now.

00:24:04.380 --> 00:24:05.320
LOUIS GRAY: I'm seeing
comments on YouTube.

00:24:05.320 --> 00:24:08.030
There are people excited about
ideas on their projects.

00:24:08.030 --> 00:24:08.900
We've talked a little bit about

00:24:08.900 --> 00:24:09.860
different types of languages.

00:24:09.860 --> 00:24:10.770
We've walked through that.

00:24:10.770 --> 00:24:13.000
We talked about sharing
folders and explicit

00:24:13.000 --> 00:24:14.150
permissions.

00:24:14.150 --> 00:24:16.740
So as far as live comments go,
I think we got them all.

00:24:16.740 --> 00:24:17.200
ALI AFSHAR: OK, cool.

00:24:17.200 --> 00:24:19.350
So if you have any follow-up
questions, were always on

00:24:19.350 --> 00:24:20.530
Stack Overflow.

00:24:20.530 --> 00:24:21.780
The tag is Google-Drive-SDK.

00:24:24.500 --> 00:24:25.260
Send us a message.

00:24:25.260 --> 00:24:26.570
Send me a personal email.

00:24:26.570 --> 00:24:27.780
Happy to hear you.

00:24:27.780 --> 00:24:31.720
If you have any problems,
really, really want to hear

00:24:31.720 --> 00:24:33.330
from you, so that we
work through them.

00:24:33.330 --> 00:24:34.770
There might be better ways
to do something.

00:24:34.770 --> 00:24:36.950
We might have to improve
the API.

00:24:36.950 --> 00:24:40.910
But please let us know,
and get in touch.

00:24:40.910 --> 00:24:41.790
LOUIS GRAY: Thank you, sir.

00:24:41.790 --> 00:24:42.840
ALI AFSHAR: Thank
you very much.

00:24:42.840 --> 00:24:43.310
I've been Ali.

00:24:43.310 --> 00:24:45.050
He's been Louis.

00:24:45.050 --> 00:24:46.250
Bye-bye.

00:24:46.250 --> 00:25:10.533
[MUSIC PLAYING]

