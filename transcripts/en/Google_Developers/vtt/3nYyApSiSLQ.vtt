WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:03.260
PETER LEWIS: All right, hello.

00:00:03.260 --> 00:00:07.350
Hello, everybody, welcome.

00:00:07.350 --> 00:00:12.260
My name is Peter, and I am the
product manager for Eddystone

00:00:12.260 --> 00:00:17.760
and the Google beacon platform,
and I am uncomfortably

00:00:17.760 --> 00:00:20.810
excited today to be talking
to you about location

00:00:20.810 --> 00:00:23.210
and proximity superpowers.

00:00:23.210 --> 00:00:25.240
So, we're going to cover
a whole bunch of stuff,

00:00:25.240 --> 00:00:28.220
and it's going to be awesome.

00:00:28.220 --> 00:00:34.449
So, if my clicker works-- oh,
that was the laser pointer.

00:00:34.449 --> 00:00:36.740
We're going to get in some
code, but before we do that,

00:00:36.740 --> 00:00:39.140
I want to introduce
you to my dog.

00:00:39.140 --> 00:00:41.470
This is Oscar.

00:00:41.470 --> 00:00:44.220
Oscar is like my
sidekick, I suppose,

00:00:44.220 --> 00:00:46.460
if we're talking
about superpowers.

00:00:46.460 --> 00:00:51.550
He is a four-year-old Papillon,
and one of my favorite things

00:00:51.550 --> 00:00:54.400
is taking him up to
Hampstead Heath in London,

00:00:54.400 --> 00:00:58.060
near where I live, and
taking him for a long walk

00:00:58.060 --> 00:01:01.250
amongst all the
trees and the bushes.

00:01:01.250 --> 00:01:04.610
And while I'm walking along,
he's constantly sniffing,

00:01:04.610 --> 00:01:07.420
discovering all the
interesting smells, like,

00:01:07.420 --> 00:01:09.380
is this an important bush?

00:01:09.380 --> 00:01:11.750
Is this is a stick I
should be playing with?

00:01:11.750 --> 00:01:16.210
He has a fantastic sense of
all of the important places

00:01:16.210 --> 00:01:21.030
and objects that are around
him, and this session

00:01:21.030 --> 00:01:26.720
is about to make your
users' devices almost as

00:01:26.720 --> 00:01:27.540
awesome as Oscar.

00:01:30.550 --> 00:01:35.380
So, today I want to
talk to you a bit

00:01:35.380 --> 00:01:38.170
about a few location-based
experiences.

00:01:38.170 --> 00:01:42.210
So, here are a few examples
from within Google Apps.

00:01:42.210 --> 00:01:45.700
In the Photos app, I
can search for photos

00:01:45.700 --> 00:01:48.430
I took when I was at
Google in New York.

00:01:48.430 --> 00:01:51.960
There's timeline for helping
users to rediscover places

00:01:51.960 --> 00:01:55.030
that they've been to, and the
experiences they've had there.

00:01:55.030 --> 00:01:57.360
And there's sort of
popular times for one

00:01:57.360 --> 00:02:00.270
of my favorite restaurants
here in London, that reminds me

00:02:00.270 --> 00:02:01.400
it's been two months.

00:02:01.400 --> 00:02:04.190
I should probably go again.

00:02:04.190 --> 00:02:08.000
And these kind of
location-based experiences

00:02:08.000 --> 00:02:10.610
make apps really compelling.

00:02:10.610 --> 00:02:13.760
If you can provide
services to your users that

00:02:13.760 --> 00:02:18.680
take account of the important
places and objects to them,

00:02:18.680 --> 00:02:23.860
then you can build engagements
and be much more successful.

00:02:23.860 --> 00:02:28.880
So, all of these are powered by
a complicated array of sensors

00:02:28.880 --> 00:02:32.330
in the user's device, but the
experience at the end of it

00:02:32.330 --> 00:02:33.470
is really simple.

00:02:33.470 --> 00:02:36.870
They use Wi-Fi,
cell tower location,

00:02:36.870 --> 00:02:40.000
GPS to produce
this kind of thing.

00:02:40.000 --> 00:02:43.340
But what we want to do is to
provide really simple APIs

00:02:43.340 --> 00:02:47.410
to be able to develop your
own apps, and even in cases

00:02:47.410 --> 00:02:51.990
where you don't have an app,
on top of this platform.

00:02:51.990 --> 00:02:54.800
So, today we will
cover Eddystone.

00:02:54.800 --> 00:02:59.220
Eddystone is the open
beacon format from Google,

00:02:59.220 --> 00:03:01.570
and we want to make it
so that the beacons you

00:03:01.570 --> 00:03:06.284
have on your desk actually
become useful quite quickly.

00:03:06.284 --> 00:03:07.700
We're then going
to talk about how

00:03:07.700 --> 00:03:10.610
to link your beacons
with the Cloud,

00:03:10.610 --> 00:03:14.360
so that you can think of them
much more like Cloud objects.

00:03:14.360 --> 00:03:17.230
That is, we're going to
talk about attachments,

00:03:17.230 --> 00:03:20.150
subscriptions, and nearby--
and sharing those beacons

00:03:20.150 --> 00:03:23.410
with others, so that
this physical widget gets

00:03:23.410 --> 00:03:26.670
all of the power of the Cloud.

00:03:26.670 --> 00:03:28.960
And then last up, we're
going to talk about something

00:03:28.960 --> 00:03:33.860
new that was announced an hour
ago in stage one, I think.

00:03:33.860 --> 00:03:36.620
Powering experiences at
your venue through Google.

00:03:36.620 --> 00:03:39.660
So, even in the case where you
don't have your app installed,

00:03:39.660 --> 00:03:42.220
how can you use beacons to
bring awesome experiences

00:03:42.220 --> 00:03:44.254
to your users?

00:03:44.254 --> 00:03:46.170
So, what is the technology
we're going to use?

00:03:46.170 --> 00:03:49.640
Well, we're going
to use beacons.

00:03:49.640 --> 00:03:55.540
And, in fact, beacons
are not new at all.

00:03:55.540 --> 00:04:02.110
If I can advance the slide--
yes, beacons are not new.

00:04:02.110 --> 00:04:05.250
So, here's an example of
a beacon, a lighthouse,

00:04:05.250 --> 00:04:08.880
and all of the components of
the Google beacon platform

00:04:08.880 --> 00:04:12.430
are similar to a lighthouse
and a ship at sea.

00:04:12.430 --> 00:04:14.230
So, you have the
lighthouse itself.

00:04:14.230 --> 00:04:16.329
That's the Eddystone beacon.

00:04:16.329 --> 00:04:19.170
It just sits there and it
broadcasts an identifier

00:04:19.170 --> 00:04:21.750
to the world.

00:04:21.750 --> 00:04:24.970
Meanwhile, out at sea,
the captain of the ship

00:04:24.970 --> 00:04:25.960
has got the telescope.

00:04:25.960 --> 00:04:28.510
They're looking out for
all of the beacons that

00:04:28.510 --> 00:04:31.000
are around the
coastlines of countries.

00:04:31.000 --> 00:04:33.550
That's like the
Nearby API in Android

00:04:33.550 --> 00:04:36.380
and the CocoaPod for iOS.

00:04:36.380 --> 00:04:40.080
But just sighting the
beacon is not that useful.

00:04:40.080 --> 00:04:42.370
You're also going
to need a chart

00:04:42.370 --> 00:04:45.340
with all of the beacons
mapped out on it to look up

00:04:45.340 --> 00:04:48.690
exactly where you are,
and that chart is provided

00:04:48.690 --> 00:04:52.040
by the Proximity Beacon
API, which is the Cloud

00:04:52.040 --> 00:04:57.370
service that you can use to
register beacons with Google.

00:04:57.370 --> 00:05:00.590
So, we're going to go
through each of those parts,

00:05:00.590 --> 00:05:02.340
but with the Google
beacon platform rather

00:05:02.340 --> 00:05:04.500
than lighthouses and ships.

00:05:04.500 --> 00:05:06.620
And by the end of
the session you're

00:05:06.620 --> 00:05:09.010
going to be able to build
awesome beacon powered

00:05:09.010 --> 00:05:11.470
experiences in your
app, and also we're

00:05:11.470 --> 00:05:15.600
going to give you some ideas for
how to use beacons in the cases

00:05:15.600 --> 00:05:19.590
where your app is not
yet on the user's device.

00:05:19.590 --> 00:05:21.640
So, what is a BLE beacon?

00:05:21.640 --> 00:05:25.215
Well, I have one just here.

00:05:25.215 --> 00:05:28.220
They're sort of
simple, typically

00:05:28.220 --> 00:05:30.850
battery-powered
devices that you can

00:05:30.850 --> 00:05:34.930
use to mark important places
and objects in the world.

00:05:34.930 --> 00:05:36.820
You stick them on the
object and they just

00:05:36.820 --> 00:05:38.400
broadcast an identifier.

00:05:38.400 --> 00:05:41.330
They do exactly one thing.

00:05:41.330 --> 00:05:43.540
The identifier
that they broadcast

00:05:43.540 --> 00:05:45.841
is only 31 bytes
long, and by the time

00:05:45.841 --> 00:05:48.340
you've gotten rid of all the
headers there's not really very

00:05:48.340 --> 00:05:50.640
much space left for content.

00:05:50.640 --> 00:05:54.210
So, by placing an abstract
identifier in your beacon

00:05:54.210 --> 00:05:58.080
that you mark, you make
devices that come near it

00:05:58.080 --> 00:06:01.770
aware of that place.

00:06:01.770 --> 00:06:04.497
Because beacons only accept
connections from devices

00:06:04.497 --> 00:06:06.080
when they're being
configured, they're

00:06:06.080 --> 00:06:08.710
really good for deploying
in public places.

00:06:08.710 --> 00:06:10.570
So, you don't want
users' devices

00:06:10.570 --> 00:06:13.680
to have to connect to these
Bluetooth things all the time.

00:06:13.680 --> 00:06:16.070
You just want your
user's device to have

00:06:16.070 --> 00:06:20.470
a great idea about the important
places and objects around it.

00:06:20.470 --> 00:06:22.810
So, beacons have been
around for a little while,

00:06:22.810 --> 00:06:24.910
and Bluetooth
beacons have as well.

00:06:24.910 --> 00:06:29.200
And in the olden days we
sort of had this model,

00:06:29.200 --> 00:06:31.310
that you would
deploy a beacon, it

00:06:31.310 --> 00:06:34.080
would talk to a
particular app, and it

00:06:34.080 --> 00:06:38.160
would probably power a
particular feature in that app.

00:06:38.160 --> 00:06:40.540
We're taking a slightly
different approach

00:06:40.540 --> 00:06:42.940
with Eddystone and the
Google beacon platform.

00:06:46.560 --> 00:06:50.130
We're interested in having
one beacon or many beacons

00:06:50.130 --> 00:06:51.860
with many uses.

00:06:51.860 --> 00:06:54.490
So, you deploy your
infrastructure once,

00:06:54.490 --> 00:06:56.660
and then you can reuse
it multiple times

00:06:56.660 --> 00:06:59.870
in different apps
from different people,

00:06:59.870 --> 00:07:03.190
all coming to your venue.

00:07:03.190 --> 00:07:06.010
So, what is step one?

00:07:06.010 --> 00:07:09.050
Well, we've provided an
app for you to get started.

00:07:09.050 --> 00:07:11.170
It's called Beacon Tools,
available on the Play

00:07:11.170 --> 00:07:14.490
Store and the iOS app store.

00:07:14.490 --> 00:07:20.240
Download this app and you'll
be able to talk to beacons.

00:07:20.240 --> 00:07:23.680
It's an app that allows
you to register beacons

00:07:23.680 --> 00:07:24.980
with the Google Cloud platform.

00:07:24.980 --> 00:07:28.390
So, it sits between the beacon
and Proximity Beacon API.

00:07:31.130 --> 00:07:33.170
You can register beacons
that have a number

00:07:33.170 --> 00:07:34.440
of different frame types.

00:07:34.440 --> 00:07:38.320
This is the complete
Eddystone specification.

00:07:38.320 --> 00:07:40.980
There are four frame
types in Eddystone.

00:07:40.980 --> 00:07:44.650
There's Eddystone UID,
which is the abstract marker

00:07:44.650 --> 00:07:46.680
for a particular place.

00:07:46.680 --> 00:07:50.420
For cases where you're
interested in controlling

00:07:50.420 --> 00:07:53.460
who has access to your beacon
signal, there's Eddystone EID,

00:07:53.460 --> 00:07:56.300
and I'll talk a bit
about that in a minute.

00:07:56.300 --> 00:07:58.550
Then the third frame type
is a telemetry frame.

00:07:58.550 --> 00:08:01.330
This reports on the
beacon's battery level,

00:08:01.330 --> 00:08:04.195
which makes it easy to
monitor a fleet of beacons

00:08:04.195 --> 00:08:06.550
once they're
deployed in the wild.

00:08:06.550 --> 00:08:10.460
And then finally, you
can put a pretty tiny URL

00:08:10.460 --> 00:08:13.400
into the beacon frame
itself, and Eddystone URL

00:08:13.400 --> 00:08:17.660
forms the backbone
of the physical web.

00:08:17.660 --> 00:08:20.780
So, I want to talk a bit
more about Eddystone EID,

00:08:20.780 --> 00:08:23.030
and you can see I've made
a beacon with a pretty

00:08:23.030 --> 00:08:24.830
colorful center just here.

00:08:24.830 --> 00:08:28.620
What that represents is
that the beacon frame itself

00:08:28.620 --> 00:08:31.210
is continuously changing.

00:08:31.210 --> 00:08:34.049
So, I have a beacon, it's
broadcasting one frame,

00:08:34.049 --> 00:08:35.520
and then a few
minutes later it's

00:08:35.520 --> 00:08:37.570
broadcasting a different frame.

00:08:37.570 --> 00:08:39.480
And your beacon
generates those frames

00:08:39.480 --> 00:08:41.940
based upon a cryptographic
key that's stored

00:08:41.940 --> 00:08:44.900
within the beacon itself.

00:08:44.900 --> 00:08:47.630
That key is also shared
with another service, which

00:08:47.630 --> 00:08:51.080
is able to resolve a sighting
of that particular beacon

00:08:51.080 --> 00:08:55.270
to a stable ID so that you can
make use of it in your app.

00:08:55.270 --> 00:08:58.030
It's particularly
good for cases where

00:08:58.030 --> 00:09:01.030
you want to control who has
access to the beacon signal

00:09:01.030 --> 00:09:05.150
that you're deploying,
and the good news

00:09:05.150 --> 00:09:09.680
is that all of our APIs supports
UID and EID transparently.

00:09:09.680 --> 00:09:12.830
So, you don't have to
bother thinking about EID.

00:09:12.830 --> 00:09:17.310
You can deploy mixed networks
of UID and EID beacons,

00:09:17.310 --> 00:09:20.230
and still talk to them both
through the same Nearby API

00:09:20.230 --> 00:09:20.761
and Android.

00:09:24.580 --> 00:09:26.260
So, that's Eddystone.

00:09:26.260 --> 00:09:30.010
We've got static identifiers
which are, in a sense,

00:09:30.010 --> 00:09:32.170
the simplest way to
get started, and we've

00:09:32.170 --> 00:09:34.350
got ephemeral
identifiers, and these

00:09:34.350 --> 00:09:38.580
are the ones that are ideal for
controlling your beacon signal.

00:09:38.580 --> 00:09:40.950
But that's just
the beacon itself.

00:09:40.950 --> 00:09:44.130
The real power comes
from the Cloud service

00:09:44.130 --> 00:09:48.570
that you associate, where
you put that beacon,

00:09:48.570 --> 00:09:52.680
and that is fronted by
Proximity Beacon API.

00:09:52.680 --> 00:09:56.300
Proximity Beacon API is an API
that fronts Google's beacon

00:09:56.300 --> 00:09:59.120
registry that allows
you to register beacons,

00:09:59.120 --> 00:10:02.800
associate information with
them, and add attachments which

00:10:02.800 --> 00:10:05.440
can be used by your own app.

00:10:05.440 --> 00:10:09.050
So, a beacon object
looks a bit like this.

00:10:09.050 --> 00:10:12.930
I've represented it as a
box, and within the box

00:10:12.930 --> 00:10:16.610
we've got three attachments
represented by these three

00:10:16.610 --> 00:10:18.350
colors.

00:10:18.350 --> 00:10:22.880
So, let's have a look at the
beacon registry entry itself.

00:10:22.880 --> 00:10:25.040
Here is the list of
properties that you

00:10:25.040 --> 00:10:26.580
can associate with a beacon.

00:10:26.580 --> 00:10:31.460
First up, you can assign
the beacon a description.

00:10:31.460 --> 00:10:35.100
The description of the beacon
is your human readable name

00:10:35.100 --> 00:10:37.037
for that particular
beacon, and we'll

00:10:37.037 --> 00:10:39.370
talk a bit about how you can
search for things like that

00:10:39.370 --> 00:10:40.560
later.

00:10:40.560 --> 00:10:42.050
You can add properties
to a beacon,

00:10:42.050 --> 00:10:45.080
so it's sometimes useful to
remember the transmit power

00:10:45.080 --> 00:10:47.500
that you associate it
with a particular beacon

00:10:47.500 --> 00:10:49.660
or some other
properties that are

00:10:49.660 --> 00:10:51.322
relevant to your
particular venue.

00:10:53.840 --> 00:10:58.800
Then, the next set of objects is
to do with place and location.

00:10:58.800 --> 00:11:00.630
When you register a
beacon with Google,

00:11:00.630 --> 00:11:02.930
you can associate
a place ID with it

00:11:02.930 --> 00:11:06.090
which goes into the heart
of Google's location

00:11:06.090 --> 00:11:07.290
infrastructure.

00:11:07.290 --> 00:11:09.950
So, all of the out of
place functionality

00:11:09.950 --> 00:11:12.530
that I showed earlier
just gets better

00:11:12.530 --> 00:11:17.440
when you have a beacon signal
registered with a place ID.

00:11:17.440 --> 00:11:22.570
As well as that, beacons enable
new kinds of precise locations.

00:11:22.570 --> 00:11:25.470
So, in particular, you can
associate an indoor level

00:11:25.470 --> 00:11:28.510
with a beacon, which makes
it much easier for your app

00:11:28.510 --> 00:11:32.380
to detect which level a
user is on in a building.

00:11:32.380 --> 00:11:35.050
This last field,
expected stability,

00:11:35.050 --> 00:11:37.860
allows you to distinguish
between beacons that you deploy

00:11:37.860 --> 00:11:39.690
in a static place,
sort of marking

00:11:39.690 --> 00:11:42.700
important places in a
building, and those, perhaps,

00:11:42.700 --> 00:11:48.450
that are on a bus, or a
food truck, or move around.

00:11:48.450 --> 00:11:52.020
Finally, we have the ephemeral
ID registration object,

00:11:52.020 --> 00:11:55.900
which keeps all of the records
necessary to support Eddystone

00:11:55.900 --> 00:11:57.270
EID.

00:11:57.270 --> 00:11:59.790
So, if you're using
Eddystone EID beacons,

00:11:59.790 --> 00:12:02.630
you'll need to talk to
this part of the API.

00:12:02.630 --> 00:12:06.240
And finally, when you provision
a beacon using the Eddystone

00:12:06.240 --> 00:12:08.670
gap service, there
is a key that you

00:12:08.670 --> 00:12:10.750
can use to unlock that
particular hardware,

00:12:10.750 --> 00:12:12.920
and we can store that
for you to make beacon

00:12:12.920 --> 00:12:15.252
administration easier later on.

00:12:18.000 --> 00:12:19.050
So, what's next?

00:12:19.050 --> 00:12:21.820
We have a beacon, we
have a Cloud service.

00:12:21.820 --> 00:12:25.550
On a user's device in the
middle we have the Nearby API.

00:12:25.550 --> 00:12:30.280
And I want to take you
on a sort of brief tour

00:12:30.280 --> 00:12:32.550
of the Nearby API,
showing how you

00:12:32.550 --> 00:12:35.950
can use it to fetch attachments
back to your beacon,

00:12:35.950 --> 00:12:39.570
back to your user's device.

00:12:39.570 --> 00:12:41.870
So, this is what you need
to put in your manifest.

00:12:41.870 --> 00:12:44.500
It's important that
you put your API key

00:12:44.500 --> 00:12:49.290
to talk to the
Nearby Messages API.

00:12:49.290 --> 00:12:51.960
You also need a service running
in the background for if you

00:12:51.960 --> 00:12:57.380
want background beacon
scanning, and you can also

00:12:57.380 --> 00:12:59.550
put intent filters in
your manifest as well.

00:12:59.550 --> 00:13:02.080
And that's something you
should do because of a reason

00:13:02.080 --> 00:13:05.460
I'm going to tell
you about in a bit.

00:13:05.460 --> 00:13:09.690
Once you've connected
to Google Play services

00:13:09.690 --> 00:13:12.500
in your Android
activity, then this

00:13:12.500 --> 00:13:14.080
is the meat of
your subscription.

00:13:14.080 --> 00:13:17.540
So, this is where you
tell the nearby API

00:13:17.540 --> 00:13:19.330
that, I'm interested
in attachments

00:13:19.330 --> 00:13:22.390
of a particular name space
and a particular type.

00:13:22.390 --> 00:13:25.590
It's that line under set filter.

00:13:25.590 --> 00:13:28.660
So, what happens next?

00:13:28.660 --> 00:13:32.130
Well, the Nearby API takes
all of the information

00:13:32.130 --> 00:13:36.350
that you've given it and it
does beacon scanning for you.

00:13:36.350 --> 00:13:39.560
Notice that you don't have
to care about the actual

00:13:39.560 --> 00:13:42.150
bytes that the beacon
is broadcasting.

00:13:42.150 --> 00:13:44.510
You've created a subscription
to a Cloud object,

00:13:44.510 --> 00:13:46.900
and Nearby is going to hide
all of the sophistication

00:13:46.900 --> 00:13:48.720
in the background.

00:13:48.720 --> 00:13:52.530
So, Nearby goes out
looking for beacons.

00:13:52.530 --> 00:13:55.430
and when it does beacon
scans it shared them

00:13:55.430 --> 00:13:58.620
across all apps that have
active subscriptions.

00:13:58.620 --> 00:14:01.770
As well as that, when the
Android platform does scans

00:14:01.770 --> 00:14:03.200
they're also shared to Nearby.

00:14:03.200 --> 00:14:08.780
So, you get a lot more scans
for a lot less battery use.

00:14:08.780 --> 00:14:12.060
When Nearby comes out
and finds a beacon, it

00:14:12.060 --> 00:14:15.800
will query the Proximity
Beacon API to say, hey,

00:14:15.800 --> 00:14:16.850
I found this beacon.

00:14:16.850 --> 00:14:18.590
I don't know what it means.

00:14:18.590 --> 00:14:21.870
And Proximity Beacon
API will return

00:14:21.870 --> 00:14:26.070
attachments that were the ones
that you had subscribed to.

00:14:26.070 --> 00:14:31.320
So, let's take a look at what
an attachment looks like.

00:14:31.320 --> 00:14:32.940
They're pretty simple objects.

00:14:32.940 --> 00:14:35.260
They have these two
important fields.

00:14:35.260 --> 00:14:38.680
The first one is the name
space type for the project.

00:14:38.680 --> 00:14:42.770
The name space is
owned by your project,

00:14:42.770 --> 00:14:45.020
so you have a name space for
your particular developer

00:14:45.020 --> 00:14:46.890
console project.

00:14:46.890 --> 00:14:50.410
After that you can put a
type for each attachment.

00:14:50.410 --> 00:14:52.950
That could be
platforms at a station,

00:14:52.950 --> 00:14:55.200
or it could be different
types of vehicle.

00:14:55.200 --> 00:14:57.560
It can be anything you want.

00:14:57.560 --> 00:15:00.160
And then the second
field is the data

00:15:00.160 --> 00:15:01.900
that you associate
with that beacon

00:15:01.900 --> 00:15:04.080
under that name space type.

00:15:04.080 --> 00:15:07.470
So, this is where you put the
information that you actually

00:15:07.470 --> 00:15:09.580
want to get back in your
app when your user sights

00:15:09.580 --> 00:15:11.640
that particular beacon.

00:15:11.640 --> 00:15:13.790
If you're calling
the API directly,

00:15:13.790 --> 00:15:16.470
remember to base 64
encode it, but our tools

00:15:16.470 --> 00:15:19.450
take care of that for you.

00:15:19.450 --> 00:15:22.890
So, Nearby had this subscription
to a particular name

00:15:22.890 --> 00:15:24.540
space and type.

00:15:24.540 --> 00:15:26.860
Proximity Beacon
API decided if there

00:15:26.860 --> 00:15:28.900
were any attachments
on the beacon that

00:15:28.900 --> 00:15:32.680
had been seen that correlated
with your particular

00:15:32.680 --> 00:15:35.600
subscription, and
then those attachments

00:15:35.600 --> 00:15:37.730
are returned to
your app so that it

00:15:37.730 --> 00:15:42.340
can behave as you would expect.

00:15:42.340 --> 00:15:45.030
Launched this
morning, if you don't

00:15:45.030 --> 00:15:48.720
care about integrating
with APIs and so on,

00:15:48.720 --> 00:15:51.390
you can use the
beacon dashboard.

00:15:51.390 --> 00:15:55.410
This is a web dashboard that
actually uses the JavaScript

00:15:55.410 --> 00:15:58.000
client library to
Proximity Beacon API,

00:15:58.000 --> 00:16:00.630
and allows you to visualize
all of your beacons

00:16:00.630 --> 00:16:04.830
and edit the information
associated with them.

00:16:04.830 --> 00:16:09.100
So, for a particular beacon
object, registering a beacon

00:16:09.100 --> 00:16:14.150
just becomes filling in a
bunch of fields on here.

00:16:14.150 --> 00:16:15.810
We think this is really cool.

00:16:15.810 --> 00:16:17.690
You can also add attachments.

00:16:17.690 --> 00:16:19.130
Here's an example
of an attachment

00:16:19.130 --> 00:16:21.790
that I added this
morning, and you

00:16:21.790 --> 00:16:24.830
can see it's a simple matter of
filling in two fields on a web

00:16:24.830 --> 00:16:26.000
dashboard.

00:16:26.000 --> 00:16:28.420
You now have a registered
beacon and an attachment

00:16:28.420 --> 00:16:29.658
associated with it.

00:16:32.590 --> 00:16:33.930
So, where have we come?

00:16:33.930 --> 00:16:36.880
Well, we started with a beacon.

00:16:36.880 --> 00:16:40.490
We provisioned it
using beacon tools,

00:16:40.490 --> 00:16:44.100
which you can get from the Play
Store all the iOS app store.

00:16:44.100 --> 00:16:46.620
Then, we associated
that beacon in the Cloud

00:16:46.620 --> 00:16:49.610
with Proximity Beacon
API, which allowed

00:16:49.610 --> 00:16:54.400
us to create this beacon object
and add attachments to it.

00:16:54.400 --> 00:16:57.890
If you didn't want to call the
API, we have the dashboard.

00:16:57.890 --> 00:16:59.940
And then down in
the bottom right,

00:16:59.940 --> 00:17:02.840
we've got the model of
what happens when a user's

00:17:02.840 --> 00:17:04.720
device comes across a beacon.

00:17:04.720 --> 00:17:07.349
And as I said earlier, it
doesn't matter whether you're

00:17:07.349 --> 00:17:10.380
using Eddystone UID
or Eddystone EID,

00:17:10.380 --> 00:17:12.380
Nearby will behave
exactly the same.

00:17:12.380 --> 00:17:15.534
You just create a subscription
to the name space and type

00:17:15.534 --> 00:17:17.200
of attachment that
you're interested in.

00:17:21.170 --> 00:17:22.780
So, I mentioned
earlier that there

00:17:22.780 --> 00:17:26.650
are good reasons for registering
beacons in the Cloud,

00:17:26.650 --> 00:17:31.570
and one of those is that you
can create a beacon network

00:17:31.570 --> 00:17:35.420
and share it with many
different developers.

00:17:35.420 --> 00:17:38.580
So, launched recently,
Proximity Beacon API

00:17:38.580 --> 00:17:43.280
is one of the first APIs to
use Google Cloud's identity

00:17:43.280 --> 00:17:47.840
and access management
roles, giving fine

00:17:47.840 --> 00:17:51.010
grained control over
which developers can make

00:17:51.010 --> 00:17:54.440
use of your beacon network.

00:17:54.440 --> 00:17:58.437
So, here we go.

00:17:58.437 --> 00:18:00.770
Here is a picture of the
Google Cloud Platform developer

00:18:00.770 --> 00:18:05.100
console, and their Identity
and Access Management,

00:18:05.100 --> 00:18:07.020
you can add members
to your project.

00:18:07.020 --> 00:18:08.780
So, these are adding
developers who

00:18:08.780 --> 00:18:11.980
can do things with resources
that are in your project.

00:18:11.980 --> 00:18:14.530
Things like compute engine
instances or data store,

00:18:14.530 --> 00:18:15.740
and so on.

00:18:15.740 --> 00:18:18.940
And Proximity Beacon
API is one of these,

00:18:18.940 --> 00:18:24.140
so once you've enabled the
API you can add a developer

00:18:24.140 --> 00:18:28.990
and choose from the roles
that we have available.

00:18:28.990 --> 00:18:31.234
So, these are the
new roles, and I

00:18:31.234 --> 00:18:32.650
want to just go
through them a bit

00:18:32.650 --> 00:18:34.770
and tell you about what
they allow developers

00:18:34.770 --> 00:18:36.220
to do with your beacon network.

00:18:39.260 --> 00:18:41.750
So, first up is BeaconEditor.

00:18:41.750 --> 00:18:43.720
If you grant a
developer this role,

00:18:43.720 --> 00:18:48.070
then they're able to add
beacons to your project.

00:18:48.070 --> 00:18:50.700
It's important if, for
example, the person who's

00:18:50.700 --> 00:18:53.140
writing the app is not the
person who's going and sticking

00:18:53.140 --> 00:18:54.097
up the beacon.

00:18:54.097 --> 00:18:56.180
The person who's going and
sticking up the beacon,

00:18:56.180 --> 00:18:58.013
you want them to be
able to register beacons

00:18:58.013 --> 00:18:59.460
to your project
but you don't want

00:18:59.460 --> 00:19:02.110
them to be able to fire up
compute engine instances.

00:19:02.110 --> 00:19:05.630
So, BeaconEditor is a role
that you can assign to a user

00:19:05.630 --> 00:19:10.520
or to a group to enable them
to add beacons to your project.

00:19:10.520 --> 00:19:14.780
And it's important to note
that beacon IDs are universally

00:19:14.780 --> 00:19:17.100
unique in Google's
beacon registry.

00:19:17.100 --> 00:19:19.280
So, once a beacon
has been registered

00:19:19.280 --> 00:19:23.910
it can't be registered
by a different project.

00:19:23.910 --> 00:19:26.180
Next up we have
AttachmentEditor.

00:19:26.180 --> 00:19:29.970
Now, I mentioned
earlier that attachments

00:19:29.970 --> 00:19:31.980
have a name spaces
associated with them

00:19:31.980 --> 00:19:35.340
and the name space
belongs to your project.

00:19:35.340 --> 00:19:38.500
AttachmentEditor
allows you to say,

00:19:38.500 --> 00:19:41.900
I want this developer to
be able to add attachments

00:19:41.900 --> 00:19:45.380
to my beacons in my name space.

00:19:45.380 --> 00:19:47.480
So, that means that
they can add attachments

00:19:47.480 --> 00:19:50.540
that can interact with
your app, and they

00:19:50.540 --> 00:19:53.130
can do this in combination
with BeaconEditor.

00:19:53.130 --> 00:19:55.990
So, they can register a
beacon to your project

00:19:55.990 --> 00:19:58.452
and they can add
attachments to it as well

00:19:58.452 --> 00:20:00.160
without all of the
other permissions that

00:20:00.160 --> 00:20:02.446
come as a result of being
an owner of a project.

00:20:05.570 --> 00:20:09.030
Finally, is AttachmentPublisher.

00:20:09.030 --> 00:20:12.580
What this allows, you
can say, that developer

00:20:12.580 --> 00:20:17.910
can create attachments in their
own name space on my beacons.

00:20:17.910 --> 00:20:22.130
So, I have a beacon
network, and I can say,

00:20:22.130 --> 00:20:24.530
my friend, here,
I want them to be

00:20:24.530 --> 00:20:28.070
able to add attachments
in their own name space

00:20:28.070 --> 00:20:32.660
that will talk to their
own app on my beacons.

00:20:32.660 --> 00:20:35.390
And these roles and
these new sharing

00:20:35.390 --> 00:20:38.420
paradigms allow a
bunch of useful things.

00:20:38.420 --> 00:20:41.600
So, here we have three
different phones,

00:20:41.600 --> 00:20:43.940
belonging to three
different users,

00:20:43.940 --> 00:20:46.660
with three different active
nearby subscriptions,

00:20:46.660 --> 00:20:49.220
all talking to the same beacon.

00:20:49.220 --> 00:20:52.760
And these attachments can be
added by different developers.

00:20:52.760 --> 00:20:57.700
So, there's a lot of
flexibility in the way

00:20:57.700 --> 00:21:00.880
that you can use
a beacon network.

00:21:00.880 --> 00:21:05.300
You don't any longer just
deploy one beacon for one app.

00:21:05.300 --> 00:21:10.240
We have one beacon
with many uses.

00:21:10.240 --> 00:21:12.840
Great, yeah, it's awesome.

00:21:12.840 --> 00:21:19.220
[APPLAUSE]

00:21:19.220 --> 00:21:23.640
Right, so, interacting
with Google products.

00:21:23.640 --> 00:21:25.200
Sometimes people
come to me and they

00:21:25.200 --> 00:21:28.990
say, Peter, PM for beacons.

00:21:28.990 --> 00:21:31.930
This is fantastic, but my
app has to be everywhere

00:21:31.930 --> 00:21:33.990
in order for it to be useful.

00:21:33.990 --> 00:21:36.490
This is not true.

00:21:36.490 --> 00:21:38.640
So, what I want
to talk about now

00:21:38.640 --> 00:21:42.220
is how you can take your
beacons and interact

00:21:42.220 --> 00:21:45.910
with Google products at
the heart of Android,

00:21:45.910 --> 00:21:48.630
like Nearby Notifications.

00:21:48.630 --> 00:21:53.530
So, Nearby Notifications was
announced just an hour ago

00:21:53.530 --> 00:21:56.580
and is available in the
next version of Google Play

00:21:56.580 --> 00:22:00.440
services, But what I
want to tell you today

00:22:00.440 --> 00:22:03.010
is how you can register
beacons today and add

00:22:03.010 --> 00:22:06.600
attachments that will interact
with Nearby Notifications.

00:22:09.170 --> 00:22:12.300
Nearby Notifications
allows you to prompt

00:22:12.300 --> 00:22:16.980
notifications in Android in
three different categories

00:22:16.980 --> 00:22:19.490
of cases.

00:22:19.490 --> 00:22:23.450
You can associate web
URLs with your beacons.

00:22:23.450 --> 00:22:24.790
So, you've registered a beacon.

00:22:24.790 --> 00:22:28.130
You can associate a URL with it.

00:22:28.130 --> 00:22:29.860
You can associate app intents.

00:22:29.860 --> 00:22:32.100
So, remember earlier
I said, make sure

00:22:32.100 --> 00:22:34.900
that you've put intents
in your Android manifest.

00:22:34.900 --> 00:22:37.850
You can point to those intents
with a beacon attachment,

00:22:37.850 --> 00:22:40.500
and if the user doesn't
have your app installed,

00:22:40.500 --> 00:22:42.580
you can have a URL
that's the fallback.

00:22:42.580 --> 00:22:44.370
So, if I have your
app installed,

00:22:44.370 --> 00:22:47.350
I come near the beacon,
it intents into your app.

00:22:47.350 --> 00:22:49.740
If I don't have your
app installed it says,

00:22:49.740 --> 00:22:52.290
here is a website.

00:22:52.290 --> 00:22:56.010
And then last up, there's
a direct app installs.

00:22:56.010 --> 00:22:58.890
So, this is an early
program, and we're

00:22:58.890 --> 00:23:01.330
holding it behind the
white list at the moment.

00:23:01.330 --> 00:23:06.140
So, if you would like to apply
to have your app white listed

00:23:06.140 --> 00:23:09.577
for direct app installs
associated with beacons,

00:23:09.577 --> 00:23:11.035
then you can go to
developers.googl

00:23:11.035 --> 00:23:15.620
e.com/nearby/notifications and
it will tell you how to get

00:23:15.620 --> 00:23:16.120
started.

00:23:18.910 --> 00:23:21.460
So, let's have a look at
what these things look like.

00:23:21.460 --> 00:23:26.820
Here are three examples
of Nearby Notifications.

00:23:26.820 --> 00:23:30.600
Right up at the top we've
got an app for a coffee shop,

00:23:30.600 --> 00:23:34.800
and this passed our white list
because of a particular reason,

00:23:34.800 --> 00:23:37.860
and that was that
a user could take

00:23:37.860 --> 00:23:42.560
an action if they had the app
installed right at that place.

00:23:42.560 --> 00:23:46.540
So, it's very much about, is a
user going to install your app

00:23:46.540 --> 00:23:49.240
and then do something
immediately with it?

00:23:49.240 --> 00:23:53.320
That's a really good candidate
for Nearby Notifications.

00:23:53.320 --> 00:23:55.480
In the second case,
this is an example

00:23:55.480 --> 00:24:00.600
where, at Kim's
Vitamins, a web URL

00:24:00.600 --> 00:24:03.700
was associated with
the beacon that

00:24:03.700 --> 00:24:08.290
pointed to a particular website
managed by that business.

00:24:08.290 --> 00:24:11.640
And then at the bottom we've
got everybody's favorite example

00:24:11.640 --> 00:24:16.630
in San Francisco, apparently,
paying for parking.

00:24:16.630 --> 00:24:19.200
Finding an app where
you can pay for parking

00:24:19.200 --> 00:24:21.330
and actually use it right
then to pay for the place

00:24:21.330 --> 00:24:23.709
where you've just parked
is another good candidate

00:24:23.709 --> 00:24:24.750
for Nearby Notifications.

00:24:28.170 --> 00:24:32.240
So, let's go back to the beacon
object and have a look at it.

00:24:32.240 --> 00:24:34.690
We have three attachments
on this beacon.

00:24:34.690 --> 00:24:37.520
The bottom two are
attachments that you added.

00:24:37.520 --> 00:24:39.510
So, they're things that
interact with your app.

00:24:39.510 --> 00:24:43.550
Maybe you've got some kind of
beacon functionality baked in.

00:24:43.550 --> 00:24:46.300
But we want to focus on
the top one, just here,

00:24:46.300 --> 00:24:48.520
and what you'll
notice about it is

00:24:48.520 --> 00:24:51.520
that the name space for
this particular attachment

00:24:51.520 --> 00:24:52.810
is not your project.

00:24:52.810 --> 00:24:55.110
This is com.Google.nearby,
a name space

00:24:55.110 --> 00:24:59.650
that is reserved for
Nearby Notifications.

00:24:59.650 --> 00:25:05.280
Any developer can write
attachments in this name space,

00:25:05.280 --> 00:25:07.810
but they can only
attach those attachments

00:25:07.810 --> 00:25:10.100
to their own beacons.

00:25:10.100 --> 00:25:12.860
So, if you register
a beacon with Google,

00:25:12.860 --> 00:25:15.940
you can write into
this name space.

00:25:15.940 --> 00:25:18.260
If this other person registers
a beacon with Google,

00:25:18.260 --> 00:25:22.330
I cannot write into that
name space on that beacon.

00:25:22.330 --> 00:25:25.327
So, you have to own a
beacon in order to take part

00:25:25.327 --> 00:25:26.410
with Nearby Notifications.

00:25:29.390 --> 00:25:31.090
So, let's have a look.

00:25:31.090 --> 00:25:34.170
We have the Nearby
attachment, and you

00:25:34.170 --> 00:25:38.820
can see that it's in this
com.Google.nearby name space.

00:25:38.820 --> 00:25:43.770
In the type field
we've put en-debug.

00:25:43.770 --> 00:25:45.480
So, en is a language code.

00:25:45.480 --> 00:25:47.870
We only want to show
your Nearby Notifications

00:25:47.870 --> 00:25:49.520
to users who have
set the default

00:25:49.520 --> 00:25:52.640
language on their device
to the notification

00:25:52.640 --> 00:25:54.610
that you want to show.

00:25:54.610 --> 00:25:58.210
And then in the data we've got
some Nearby attachment data.

00:25:58.210 --> 00:26:00.850
This is exactly the
same pattern that you

00:26:00.850 --> 00:26:05.810
would build if you were putting
functionality in your own app.

00:26:05.810 --> 00:26:07.750
So, what does this
data look like?

00:26:07.750 --> 00:26:12.300
Well, it's just some JSON
with a title, a description,

00:26:12.300 --> 00:26:14.620
and a URL.

00:26:14.620 --> 00:26:18.650
you can create this
dead easy, and the URL

00:26:18.650 --> 00:26:20.160
is the part that's interesting.

00:26:20.160 --> 00:26:22.220
So, there's a little
bit of subtlety here.

00:26:22.220 --> 00:26:24.930
I'm going to go through
it quite carefully.

00:26:24.930 --> 00:26:28.270
So, here are the three
different categories

00:26:28.270 --> 00:26:33.330
of Nearby Notification
that I mentioned before.

00:26:33.330 --> 00:26:36.720
Up at the top, this is the
URL that we would associate

00:26:36.720 --> 00:26:38.410
with a direct app install.

00:26:38.410 --> 00:26:40.500
You can see that it points
to a particular package

00:26:40.500 --> 00:26:44.200
in the Android Play store.

00:26:44.200 --> 00:26:46.460
In the middle, this
is a URL that we

00:26:46.460 --> 00:26:49.660
would associate with if the
user has the app installed,

00:26:49.660 --> 00:26:51.140
intent into it.

00:26:51.140 --> 00:26:53.120
If they don't have
the app installed,

00:26:53.120 --> 00:26:55.600
then we'll fall
back to a website.

00:26:55.600 --> 00:26:58.320
And then at the bottom you've
got the simple case, just

00:26:58.320 --> 00:27:00.490
a web URL.

00:27:00.490 --> 00:27:02.310
The gotcha with
that one is that you

00:27:02.310 --> 00:27:09.730
have to remember it's HTTPS,
so HTTP URLS are filtered out.

00:27:13.090 --> 00:27:19.000
Right, that is the end of
the content for this talk.

00:27:19.000 --> 00:27:22.570
I'm now going to do a demo
for your entertainment

00:27:22.570 --> 00:27:26.750
and amusement, that is possibly
the most dangerous demo that's

00:27:26.750 --> 00:27:27.990
ever been done.

00:27:27.990 --> 00:27:31.060
I'm going to use two
different kinds of radio.

00:27:31.060 --> 00:27:34.770
I'm going to use an
unreleased product.

00:27:34.770 --> 00:27:39.790
I'm going to use a product that
we launched this afternoon,

00:27:39.790 --> 00:27:41.910
and I'm going to use
two different devices.

00:27:41.910 --> 00:27:47.920
So, before your very
eyes, here is my beacon.

00:27:47.920 --> 00:27:51.070
It's broadcasting,
and in Beacon Tools

00:27:51.070 --> 00:27:55.530
I can search for
it just like this.

00:27:55.530 --> 00:27:57.180
Excellent, it's shown up.

00:27:57.180 --> 00:28:00.580
So, I provisioned this beacon
earlier, and there it is.

00:28:00.580 --> 00:28:03.960
I'm going to register it.

00:28:03.960 --> 00:28:06.080
I'm glad that nobody
got there before me.

00:28:06.080 --> 00:28:08.490
If somebody else had
registered that beacon,

00:28:08.490 --> 00:28:12.180
this would not have worked.

00:28:12.180 --> 00:28:16.030
Right, what I just did
was, I took this beacon

00:28:16.030 --> 00:28:19.080
that was broadcasting
at Eddystone UID

00:28:19.080 --> 00:28:22.080
and I registered
it with my project.

00:28:22.080 --> 00:28:25.780
You can see that I tested this
maybe seven times before I

00:28:25.780 --> 00:28:27.450
got in here.

00:28:27.450 --> 00:28:29.180
And this is the beacon
dashboard that I

00:28:29.180 --> 00:28:30.540
was talking about earlier.

00:28:30.540 --> 00:28:35.060
So, if I refresh it,
fingers crossed, here

00:28:35.060 --> 00:28:39.260
is my new beacon that I
just registered right now.

00:28:39.260 --> 00:28:42.670
By the way, if this all
works I want you guys

00:28:42.670 --> 00:28:44.590
to give a cheer that
is loud enough to wake

00:28:44.590 --> 00:28:48.820
the engineers in
London who made it.

00:28:48.820 --> 00:28:52.840
So, I can associate some
information with my beacon.

00:28:52.840 --> 00:28:56.170
So, the I/O beacon.

00:28:56.170 --> 00:28:58.540
This is the human
readable label that I

00:28:58.540 --> 00:29:02.260
want to associate with the
beacon so I can find it later.

00:29:02.260 --> 00:29:04.510
I can associate a place with it.

00:29:04.510 --> 00:29:08.510
So, I can put it in
Amphitheater Parkway,

00:29:08.510 --> 00:29:11.930
and this will plug into the
rest of Google's location

00:29:11.930 --> 00:29:14.830
infrastructure, as
I mentioned before.

00:29:14.830 --> 00:29:16.640
And this particular
beacon, this is not

00:29:16.640 --> 00:29:19.480
going to move around, so
I'm going to make it stable.

00:29:19.480 --> 00:29:23.010
Now, here are some sort of
useful administrative labels

00:29:23.010 --> 00:29:24.020
for me.

00:29:24.020 --> 00:29:28.620
So, I can in things
like the TX power,

00:29:28.620 --> 00:29:30.750
the transmit power of
this particular beacon.

00:29:30.750 --> 00:29:35.970
So, maybe it's broadcasting
at minus 20 DBM.

00:29:35.970 --> 00:29:41.270
Great, so, I've now registered
at this beacon with Google,

00:29:41.270 --> 00:29:45.360
I've added a description so
that I can find it again,

00:29:45.360 --> 00:29:49.450
and I've put a place
ID with it as well.

00:29:49.450 --> 00:29:52.230
Next up, I can add
attachments to it.

00:29:52.230 --> 00:29:54.580
So, here is the
name space that's

00:29:54.580 --> 00:29:59.560
associated with my project,
and it is very easy

00:29:59.560 --> 00:30:03.916
to add an attachment.

00:30:03.916 --> 00:30:06.670
There we go, I just
press plus, and I now

00:30:06.670 --> 00:30:08.830
have a beacon registered
with an attachment to it.

00:30:08.830 --> 00:30:11.710
So, I can use Nearby messages
to get that attachment back

00:30:11.710 --> 00:30:14.200
in my app.

00:30:14.200 --> 00:30:17.040
Tomorrow, probably, you should
go to the code lab's tent,

00:30:17.040 --> 00:30:19.500
and there is a code
lab specifically

00:30:19.500 --> 00:30:22.220
on Nearby subscriptions
from Nearby messages.

00:30:22.220 --> 00:30:23.820
So, make sure you
go there in order

00:30:23.820 --> 00:30:25.530
to get some of these
attachments back,

00:30:25.530 --> 00:30:28.760
and we've created a zoo
of attachments around I/O,

00:30:28.760 --> 00:30:30.230
so if you do it
on your own phone

00:30:30.230 --> 00:30:34.510
you'll be able to collect
all of those animals.

00:30:34.510 --> 00:30:38.220
Finally is this category,
Nearby Notifications.

00:30:38.220 --> 00:30:40.850
So, I said earlier
that you have this JSON

00:30:40.850 --> 00:30:45.449
object that you can construct,
but what we decided was that we

00:30:45.449 --> 00:30:46.740
could make it easier than that.

00:30:46.740 --> 00:30:50.110
So, we just have a web
form that you can fill in.

00:30:50.110 --> 00:30:54.970
I can put a title in here,
I can put a description

00:30:54.970 --> 00:30:57.710
for the notification
that I want to show.

00:30:57.710 --> 00:31:00.008
Can somebody give
me a random word?

00:31:00.008 --> 00:31:01.280
AUDIENCE: Bacon!

00:31:01.280 --> 00:31:05.260
PETER LEWIS: Bacon,
perfect-- the bacon.

00:31:05.260 --> 00:31:08.930
This is going to prove
that I'm doing this live.

00:31:08.930 --> 00:31:13.930
I'm going to put it in
English, and how about we just

00:31:13.930 --> 00:31:18.970
point to www.google.com.

00:31:18.970 --> 00:31:22.280
Great, so I can check
all of the details

00:31:22.280 --> 00:31:26.390
I put, and I can create
the attachment like that.

00:31:26.390 --> 00:31:29.350
So, what this has done is
created a Nearby Notifications

00:31:29.350 --> 00:31:32.120
attachment on that beacon that
I registered on the stage,

00:31:32.120 --> 00:31:34.970
live in front of all of you.

00:31:34.970 --> 00:31:37.900
Let's go back to the
device over here.

00:31:37.900 --> 00:31:42.100
And on this particular phone,
I have Nearby Notifications

00:31:42.100 --> 00:31:43.450
running.

00:31:43.450 --> 00:31:52.310
So, when I screen on and I pull
down the notification shade,

00:31:52.310 --> 00:32:00.199
and I screen on again,
I'm going to see

00:32:00.199 --> 00:32:02.240
a couple of websites that
are not the ones that I

00:32:02.240 --> 00:32:03.050
was thinking of.

00:32:05.650 --> 00:32:12.048
Third time lucky, boo, it
looks like it might not work.

00:32:15.672 --> 00:32:17.130
So, what's happening
is it actually

00:32:17.130 --> 00:32:19.350
does a beacon scan when
the screen comes on,

00:32:19.350 --> 00:32:21.308
and I'm hoping that it
can see this beacon that

00:32:21.308 --> 00:32:22.740
is sitting right next to it.

00:32:22.740 --> 00:32:25.730
There we go, the bacon.

00:32:25.730 --> 00:32:28.658
[APPLAUSE]

00:32:35.490 --> 00:32:38.490
I select that, and
google.com appears.

00:32:38.490 --> 00:32:42.900
So, we registered the beacon,
we added a Nearby Notifications

00:32:42.900 --> 00:32:47.120
attachment to it, and that
took us straight to that link

00:32:47.120 --> 00:32:49.740
when the user's device came.

00:32:49.740 --> 00:32:53.270
So, that is the Google
beacon platform.

00:32:53.270 --> 00:32:56.870
One beacon, many uses.

00:32:56.870 --> 00:33:01.420
[MUSIC PLAYING]

