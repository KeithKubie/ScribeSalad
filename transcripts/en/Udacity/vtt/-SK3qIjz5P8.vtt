WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
Now we're going to look at whether RSA has the security properties we need.

00:00:04.000 --> 00:00:07.000
We've seen that it has the correctness property,

00:00:07.000 --> 00:00:11.000
that encryption with a public key and decryption with a private key are indeed inverses.

00:00:11.000 --> 00:00:14.000
But we want to know also the most important property--

00:00:14.000 --> 00:00:19.000
that it's difficult for an attacker who doesn't have access to the private key

00:00:19.000 --> 00:00:21.000
to perform the decryption.

00:00:21.000 --> 00:00:27.000
This is the property that we need that given e and n, which is the public key,

00:00:27.000 --> 00:00:30.000
it's hard for an attacker to find d.

00:00:30.000 --> 00:00:32.000
We actually need stronger properties than just this.

00:00:32.000 --> 00:00:35.000
We want to also know that the attacker can't learn anything about the message.

00:00:35.000 --> 00:00:38.000
This is not strong enough by itself to know that an attacker can't learn

00:00:38.000 --> 00:00:40.000
anything about the message.

00:00:40.000 --> 00:00:42.000
In fact, we'll see there are cases where an attacker could learn something

00:00:42.000 --> 00:00:45.000
about the message without learning d soon.

00:00:45.000 --> 00:00:48.000
The first thing we know is that this would be easy for someone who knows

00:00:48.000 --> 00:00:53.000
the factors p and q--the two large primes that we multiplied to get n.

00:00:53.000 --> 00:00:59.000
We know that because such an attacker could compute the multiplicative inverse

00:00:59.000 --> 00:01:03.000
of e mod the totient of n.

00:01:03.000 --> 00:01:06.000
If you know the factors of n, you know the totient,

00:01:06.000 --> 00:01:10.000
because that would be the totient of p times the totient of q, which are both primes.

00:01:10.000 --> 00:01:12.000
So easily solved.

00:01:12.000 --> 00:01:15.000
Our security argument relies on two things.

00:01:15.000 --> 00:01:18.000
The first is that showing that all ways of breaking RSA

00:01:18.000 --> 00:01:21.000
would allow some easy way to factor n.

00:01:21.000 --> 00:01:25.000
If we could use that way of breaking RSA to factor n,

00:01:25.000 --> 00:01:28.000
the we could always use that to factor large numbers.

00:01:28.000 --> 00:01:33.000
That would contradict our second claim that factoring large numbers

00:01:33.000 --> 00:01:36.000
constructed by multiplying two large primes is hard.

00:01:36.000 --> 00:01:40.000
We're going to show the first thing first--that other ways of breaking RSA,

00:01:40.000 --> 00:01:45.000
other ways of finding d, would allow us to factor n.

00:01:45.000 --> 00:01:49.000
Then we're going to argue from experience and historical effort

00:01:49.000 --> 00:01:52.000
that factoring seems to be hard.

00:01:52.000 --> 00:01:55.000
The first question is whether it's easier to compute the totient of n

00:01:55.000 --> 00:01:57.000
than it is to factor n.

00:01:57.000 --> 00:02:00.000
Our goal is to show that that's not the case.

00:02:00.000 --> 00:02:02.000
What should we do to show that?

00:02:02.000 --> 00:02:04.000
Here are the choices.

00:02:04.000 --> 00:02:07.000
Give p and q, show that it's hard to compute the totient of n.

00:02:07.000 --> 00:02:11.000
Given the totient of n, show that there is no easy way to compute p and q.

00:02:11.000 --> 99:59:59.000
Or given the totient of n, show that there is an easy way to compute p and q.

