WEBVTT
Kind: captions
Language: en

00:00:00.310 --> 00:00:02.780
So even though things are kind of grim, with regard to

00:00:02.780 --> 00:00:05.250
solving the general sum games. There are lots of ideas that,

00:00:05.250 --> 00:00:08.930
that have proven themselves to be pretty useful for addressing this,

00:00:08.930 --> 00:00:11.570
this class of games. It is not the case that any one

00:00:11.570 --> 00:00:14.950
of them has, has emerged as the dominant view, but, but

00:00:14.950 --> 00:00:17.890
these are all really cool ideas. So here's one. You can think

00:00:17.890 --> 00:00:20.530
about stochastic games as themselves

00:00:20.530 --> 00:00:22.810
being repeated. So, repeated stochastic games.

00:00:22.810 --> 00:00:25.347
We're going to play a stochastic game and when it's over, we're going to

00:00:25.347 --> 00:00:29.300
play it again. And that allows us to build

00:00:29.300 --> 00:00:32.159
folk theorem-like ideas at the level of stochastic games.

00:00:32.159 --> 00:00:32.910
&gt;&gt; Oh, that's cool.

00:00:32.910 --> 00:00:34.028
&gt;&gt; And so there are some efficient

00:00:34.028 --> 00:00:35.880
algorithms for dealing with that. So that's

00:00:35.880 --> 00:00:37.820
one idea. Another one is to make

00:00:37.820 --> 00:00:40.530
use of a little bit of communication side-channel

00:00:40.530 --> 00:00:46.284
to be able to say, hey, other player. Here's this thing that I'm thinking about.

00:00:46.284 --> 00:00:50.364
And it's cheap talk in a sense that, it's nothing that's being said is binding

00:00:50.364 --> 00:00:52.224
in any way but it gives the two players

00:00:52.224 --> 00:00:54.739
the ability to co, to coordinate a little bit.

00:00:54.739 --> 00:00:58.219
And you can actually ultimately compute a correlated equilibrium,

00:00:58.219 --> 00:01:00.379
which is a, a version of a Nash equilibrium

00:01:00.379 --> 00:01:02.659
that you know, requires just a, a little bit

00:01:02.659 --> 00:01:05.239
of coordination, but can be much more efficient to

00:01:05.239 --> 00:01:09.355
compute. And you can actually get a near optimal

00:01:09.355 --> 00:01:15.121
approximations of the solution to stochastic games using that idea.

00:01:15.121 --> 00:01:15.550
&gt;&gt; Yeah, that's

00:01:15.550 --> 00:01:17.820
cool. Didn't, didn't I do some work in this space?

00:01:17.820 --> 00:01:19.790
&gt;&gt; You did. That's where I got the idea from.

00:01:19.790 --> 00:01:21.962
&gt;&gt; Oh okay.

00:01:21.962 --> 00:01:24.688
&gt;&gt; There's some, some work by Amy Greenwald looking

00:01:24.688 --> 00:01:27.646
at how correlated equilibria play into stochastic games and

00:01:27.646 --> 00:01:30.372
then your, your student Liam and you developed a,

00:01:30.372 --> 00:01:34.450
a really cool algorithm that actually probably approximates, the solutions.

00:01:34.450 --> 00:01:35.170
&gt;&gt; Nice.

00:01:35.170 --> 00:01:37.280
&gt;&gt; Another idea that I've heard a lot about lately, that I

00:01:37.280 --> 00:01:40.710
really like, is the notion of a cognitive hierarchy. The idea that what

00:01:40.710 --> 00:01:43.670
you're going to do is instead of trying to solve

00:01:43.670 --> 00:01:47.140
for an equilibrium, you think about each player as assuming

00:01:47.140 --> 00:01:50.640
that the other players have somewhat more limited computational

00:01:50.640 --> 00:01:54.910
resources than they do. And then taking a best response

00:01:54.910 --> 00:01:56.840
to what they believe the other players are going

00:01:56.840 --> 00:01:58.430
to do. This turns out to be a really good

00:01:58.430 --> 00:02:00.940
model of how people actually play when, when you

00:02:00.940 --> 00:02:03.280
ask them to do games like this in the laboratory.

00:02:03.280 --> 00:02:04.380
&gt;&gt; Huh.

00:02:04.380 --> 00:02:05.770
&gt;&gt; Yeah, the good news about this idea is

00:02:05.770 --> 00:02:07.550
that, because they're best responses, they can

00:02:07.550 --> 00:02:09.660
be more easily computed. That, that it's more

00:02:09.660 --> 00:02:11.930
like, cue learning in MDPs again because you're

00:02:11.930 --> 00:02:13.980
assuming that the other player is, is fixed.

00:02:13.980 --> 00:02:15.280
&gt;&gt; Okay. I'll buy that.

00:02:15.280 --> 00:02:16.640
&gt;&gt; And, the last idea I want to throw

00:02:16.640 --> 00:02:18.760
out is the notion of actually using side

00:02:18.760 --> 00:02:20.738
payments so that the players, as they're playing

00:02:20.738 --> 00:02:23.270
together, cannot only take joint actions, but they can

00:02:23.270 --> 00:02:25.510
say, hey, I'll give, I'm going to get a

00:02:25.510 --> 00:02:27.500
lot, but if we take this action, I'm going to

00:02:27.500 --> 00:02:30.828
get a lot of reward. I'm going to give some of that reward back to you, and that

00:02:30.828 --> 00:02:32.740
will maybe encourage you to take the action that

00:02:32.740 --> 00:02:34.040
I need you to take so that we'll both

00:02:34.040 --> 00:02:36.310
do better. And so there's this lovely theory by

00:02:36.310 --> 00:02:39.790
a father and son duo that they call coco values.

00:02:39.790 --> 00:02:44.083
Coco sounds awesome but it stands for Cooperative competitive

00:02:44.083 --> 00:02:47.728
values [CROSSTALK] and so it actually balances the zero

00:02:47.728 --> 00:02:51.130
sum aspect of games with the mutual benefit aspect

00:02:51.130 --> 00:02:54.140
of games. So it's, it's, it's a really elegant idea.

00:02:54.140 --> 00:02:55.870
&gt;&gt; So basically, the problem

00:02:55.870 --> 00:02:58.560
isn't solved but there are a lot of cool

00:02:58.560 --> 00:03:00.710
ideas that are getting us close to solving it.

00:03:00.710 --> 00:03:03.120
&gt;&gt; That's right. Yeah. So even though the one player and

00:03:03.120 --> 00:03:06.450
the zero sum cases are pretty well understood at this point, the

00:03:06.450 --> 00:03:09.290
general sum case is not as well understood. But there's a

00:03:09.290 --> 00:03:12.090
lot of really creative ways that people are trying to address it.

00:03:12.090 --> 00:03:13.310
&gt;&gt; So, that is good news.

