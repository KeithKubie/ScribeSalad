WEBVTT
Kind: captions
Language: en

00:00:05.779 --> 00:00:08.089
 
welcome to best practices for text on

00:00:08.089 --> 00:00:08.099
welcome to best practices for text on
 

00:00:08.099 --> 00:00:10.370
welcome to best practices for text on
Android my name is Cara Valeri and I'm a

00:00:10.370 --> 00:00:10.380
Android my name is Cara Valeri and I'm a
 

00:00:10.380 --> 00:00:11.839
Android my name is Cara Valeri and I'm a
tech lead on the Android toolkit team

00:00:11.839 --> 00:00:11.849
tech lead on the Android toolkit team
 

00:00:11.849 --> 00:00:14.150
tech lead on the Android toolkit team
I'm Frida Martinez and I'm gonna Android

00:00:14.150 --> 00:00:14.160
I'm Frida Martinez and I'm gonna Android
 

00:00:14.160 --> 00:00:16.490
I'm Frida Martinez and I'm gonna Android
developer advocates see I'm its inner

00:00:16.490 --> 00:00:16.500
developer advocates see I'm its inner
 

00:00:16.500 --> 00:00:20.029
developer advocates see I'm its inner
takes lead for Android text so why are

00:00:20.029 --> 00:00:20.039
takes lead for Android text so why are
 

00:00:20.039 --> 00:00:22.160
takes lead for Android text so why are
we giving a talk about text well it

00:00:22.160 --> 00:00:22.170
we giving a talk about text well it
 

00:00:22.170 --> 00:00:23.929
we giving a talk about text well it
turns out text is a major part of your

00:00:23.929 --> 00:00:23.939
turns out text is a major part of your
 

00:00:23.939 --> 00:00:25.910
turns out text is a major part of your
app it's part of your design it's part

00:00:25.910 --> 00:00:25.920
app it's part of your design it's part
 

00:00:25.920 --> 00:00:27.109
app it's part of your design it's part
of your branding it's part of who you

00:00:27.109 --> 00:00:27.119
of your branding it's part of who you
 

00:00:27.119 --> 00:00:29.210
of your branding it's part of who you
are and it is the major thing that your

00:00:29.210 --> 00:00:29.220
are and it is the major thing that your
 

00:00:29.220 --> 00:00:31.759
are and it is the major thing that your
users will be consuming it is fun front

00:00:31.759 --> 00:00:31.769
users will be consuming it is fun front
 

00:00:31.769 --> 00:00:33.410
users will be consuming it is fun front
the first thing that your users will

00:00:33.410 --> 00:00:33.420
the first thing that your users will
 

00:00:33.420 --> 00:00:35.120
the first thing that your users will
read and the thing that will mostly

00:00:35.120 --> 00:00:35.130
read and the thing that will mostly
 

00:00:35.130 --> 00:00:37.100
read and the thing that will mostly
affect readability accessibility

00:00:37.100 --> 00:00:37.110
affect readability accessibility
 

00:00:37.110 --> 00:00:40.369
affect readability accessibility
usability all of that on top of that the

00:00:40.369 --> 00:00:40.379
usability all of that on top of that the
 

00:00:40.379 --> 00:00:41.930
usability all of that on top of that the
Android text sack is responsible for

00:00:41.930 --> 00:00:41.940
Android text sack is responsible for
 

00:00:41.940 --> 00:00:44.690
Android text sack is responsible for
emoji which we all love but all of this

00:00:44.690 --> 00:00:44.700
emoji which we all love but all of this
 

00:00:44.700 --> 00:00:47.330
emoji which we all love but all of this
obviously comes at a cost and so there's

00:00:47.330 --> 00:00:47.340
obviously comes at a cost and so there's
 

00:00:47.340 --> 00:00:48.319
obviously comes at a cost and so there's
a bunch of performance implications

00:00:48.319 --> 00:00:48.329
a bunch of performance implications
 

00:00:48.329 --> 00:00:50.209
a bunch of performance implications
related to text that we want you to be

00:00:50.209 --> 00:00:50.219
related to text that we want you to be
 

00:00:50.219 --> 00:00:52.130
related to text that we want you to be
aware of and so today we're gonna go

00:00:52.130 --> 00:00:52.140
aware of and so today we're gonna go
 

00:00:52.140 --> 00:00:54.080
aware of and so today we're gonna go
through a bunch of best practices and

00:00:54.080 --> 00:00:54.090
through a bunch of best practices and
 

00:00:54.090 --> 00:00:56.510
through a bunch of best practices and
things that you should know before we

00:00:56.510 --> 00:00:56.520
things that you should know before we
 

00:00:56.520 --> 00:00:58.189
things that you should know before we
can do that let's talk a bit about the

00:00:58.189 --> 00:00:58.199
can do that let's talk a bit about the
 

00:00:58.199 --> 00:01:00.380
can do that let's talk a bit about the
architecture we want to explain how the

00:01:00.380 --> 00:01:00.390
architecture we want to explain how the
 

00:01:00.390 --> 00:01:03.260
architecture we want to explain how the
text stack is fitted with an Android so

00:01:03.260 --> 00:01:03.270
text stack is fitted with an Android so
 

00:01:03.270 --> 00:01:04.609
text stack is fitted with an Android so
you can better then understand what

00:01:04.609 --> 00:01:04.619
you can better then understand what
 

00:01:04.619 --> 00:01:07.280
you can better then understand what
we're gonna talk about later the tech

00:01:07.280 --> 00:01:07.290
we're gonna talk about later the tech
 

00:01:07.290 --> 00:01:09.649
we're gonna talk about later the tech
stack on Android is split into two parts

00:01:09.649 --> 00:01:09.659
stack on Android is split into two parts
 

00:01:09.659 --> 00:01:11.330
stack on Android is split into two parts
there's Java code and then there's

00:01:11.330 --> 00:01:11.340
there's Java code and then there's
 

00:01:11.340 --> 00:01:14.539
there's Java code and then there's
native or C++ code at the very top of

00:01:14.539 --> 00:01:14.549
native or C++ code at the very top of
 

00:01:14.549 --> 00:01:16.100
native or C++ code at the very top of
the Java layer you'll find the thing

00:01:16.100 --> 00:01:16.110
the Java layer you'll find the thing
 

00:01:16.110 --> 00:01:17.390
the Java layer you'll find the thing
that you're probably most familiar with

00:01:17.390 --> 00:01:17.400
that you're probably most familiar with
 

00:01:17.400 --> 00:01:20.060
that you're probably most familiar with
which is text view and edit text these

00:01:20.060 --> 00:01:20.070
which is text view and edit text these
 

00:01:20.070 --> 00:01:21.230
which is text view and edit text these
are widgets that provide text

00:01:21.230 --> 00:01:21.240
are widgets that provide text
 

00:01:21.240 --> 00:01:22.760
are widgets that provide text
functionality out of the box and do

00:01:22.760 --> 00:01:22.770
functionality out of the box and do
 

00:01:22.770 --> 00:01:25.070
functionality out of the box and do
everything for you if you have custom

00:01:25.070 --> 00:01:25.080
everything for you if you have custom
 

00:01:25.080 --> 00:01:26.179
everything for you if you have custom
views where you don't want to use our

00:01:26.179 --> 00:01:26.189
views where you don't want to use our
 

00:01:26.189 --> 00:01:27.620
views where you don't want to use our
widget then you're probably using the

00:01:27.620 --> 00:01:27.630
widget then you're probably using the
 

00:01:27.630 --> 00:01:29.600
widget then you're probably using the
second layer which is layout paint in

00:01:29.600 --> 00:01:29.610
second layer which is layout paint in
 

00:01:29.610 --> 00:01:32.270
second layer which is layout paint in
canvas this class is on Java will help

00:01:32.270 --> 00:01:32.280
canvas this class is on Java will help
 

00:01:32.280 --> 00:01:33.830
canvas this class is on Java will help
you layout text and render it without

00:01:33.830 --> 00:01:33.840
you layout text and render it without
 

00:01:33.840 --> 00:01:36.469
you layout text and render it without
actually using our widget once we get

00:01:36.469 --> 00:01:36.479
actually using our widget once we get
 

00:01:36.479 --> 00:01:38.600
actually using our widget once we get
into the native part the very first

00:01:38.600 --> 00:01:38.610
into the native part the very first
 

00:01:38.610 --> 00:01:40.490
into the native part the very first
layer is a library we call minikin

00:01:40.490 --> 00:01:40.500
layer is a library we call minikin
 

00:01:40.500 --> 00:01:42.770
layer is a library we call minikin
minikin helps us do word measurement

00:01:42.770 --> 00:01:42.780
minikin helps us do word measurement
 

00:01:42.780 --> 00:01:44.600
minikin helps us do word measurement
line breaking and hyphenation

00:01:44.600 --> 00:01:44.610
line breaking and hyphenation
 

00:01:44.610 --> 00:01:46.010
line breaking and hyphenation
and it is our first point of contact

00:01:46.010 --> 00:01:46.020
and it is our first point of contact
 

00:01:46.020 --> 00:01:48.830
and it is our first point of contact
with C++ below that there's a bunch of

00:01:48.830 --> 00:01:48.840
with C++ below that there's a bunch of
 

00:01:48.840 --> 00:01:51.560
with C++ below that there's a bunch of
libraries we use to help us ICU which

00:01:51.560 --> 00:01:51.570
libraries we use to help us ICU which
 

00:01:51.570 --> 00:01:54.440
libraries we use to help us ICU which
deals with Unicode harf buzz which does

00:01:54.440 --> 00:01:54.450
deals with Unicode harf buzz which does
 

00:01:54.450 --> 00:01:57.410
deals with Unicode harf buzz which does
text shaping for us free type which

00:01:57.410 --> 00:01:57.420
text shaping for us free type which
 

00:01:57.420 --> 00:01:59.149
text shaping for us free type which
generates bitmaps for all of the glyphs

00:01:59.149 --> 00:01:59.159
generates bitmaps for all of the glyphs
 

00:01:59.159 --> 00:02:01.999
generates bitmaps for all of the glyphs
and finally skia which is our graphics

00:02:01.999 --> 00:02:02.009
and finally skia which is our graphics
 

00:02:02.009 --> 00:02:04.580
and finally skia which is our graphics
engine today we're gonna focus on the

00:02:04.580 --> 00:02:04.590
engine today we're gonna focus on the
 

00:02:04.590 --> 00:02:06.109
engine today we're gonna focus on the
top three as these are the layers that

00:02:06.109 --> 00:02:06.119
top three as these are the layers that
 

00:02:06.119 --> 00:02:07.999
top three as these are the layers that
the Android team owns and the one we can

00:02:07.999 --> 00:02:08.009
the Android team owns and the one we can
 

00:02:08.009 --> 00:02:09.830
the Android team owns and the one we can
provide most best practices and hints

00:02:09.830 --> 00:02:09.840
provide most best practices and hints
 

00:02:09.840 --> 00:02:12.350
provide most best practices and hints
into

00:02:12.350 --> 00:02:12.360
 
 

00:02:12.360 --> 00:02:14.789
 
mimicking lies at the core of Android

00:02:14.789 --> 00:02:14.799
mimicking lies at the core of Android
 

00:02:14.799 --> 00:02:16.940
mimicking lies at the core of Android
tech stack and is implemented in C++

00:02:16.940 --> 00:02:16.950
tech stack and is implemented in C++
 

00:02:16.950 --> 00:02:20.039
tech stack and is implemented in C++
it's many sponsibility czar text layout

00:02:20.039 --> 00:02:20.049
it's many sponsibility czar text layout
 

00:02:20.049 --> 00:02:22.770
it's many sponsibility czar text layout
measurement and line breaking it is

00:02:22.770 --> 00:02:22.780
measurement and line breaking it is
 

00:02:22.780 --> 00:02:24.630
measurement and line breaking it is
important to understand what parts are

00:02:24.630 --> 00:02:24.640
important to understand what parts are
 

00:02:24.640 --> 00:02:26.819
important to understand what parts are
implemented in minikin versus Java as

00:02:26.819 --> 00:02:26.829
implemented in minikin versus Java as
 

00:02:26.829 --> 00:02:29.039
implemented in minikin versus Java as
that defines which features we can back

00:02:29.039 --> 00:02:29.049
that defines which features we can back
 

00:02:29.049 --> 00:02:31.319
that defines which features we can back
port using support library which doesn't

00:02:31.319 --> 00:02:31.329
port using support library which doesn't
 

00:02:31.329 --> 00:02:34.710
port using support library which doesn't
allow native code let's start with text

00:02:34.710 --> 00:02:34.720
allow native code let's start with text
 

00:02:34.720 --> 00:02:36.960
allow native code let's start with text
measurement if we provide a string like

00:02:36.960 --> 00:02:36.970
measurement if we provide a string like
 

00:02:36.970 --> 00:02:38.940
measurement if we provide a string like
this Dominican first it has to identify

00:02:38.940 --> 00:02:38.950
this Dominican first it has to identify
 

00:02:38.950 --> 00:02:41.910
this Dominican first it has to identify
the glyphs glyph is a representation of

00:02:41.910 --> 00:02:41.920
the glyphs glyph is a representation of
 

00:02:41.920 --> 00:02:43.890
the glyphs glyph is a representation of
a character and you can think of it as

00:02:43.890 --> 00:02:43.900
a character and you can think of it as
 

00:02:43.900 --> 00:02:46.259
a character and you can think of it as
the image to be drawn however the

00:02:46.259 --> 00:02:46.269
the image to be drawn however the
 

00:02:46.269 --> 00:02:47.910
the image to be drawn however the
character to glyph matching is not

00:02:47.910 --> 00:02:47.920
character to glyph matching is not
 

00:02:47.920 --> 00:02:50.160
character to glyph matching is not
always one to one here we have three

00:02:50.160 --> 00:02:50.170
always one to one here we have three
 

00:02:50.170 --> 00:02:53.569
always one to one here we have three
letters FF I matching to a single leaf

00:02:53.569 --> 00:02:53.579
letters FF I matching to a single leaf
 

00:02:53.579 --> 00:02:55.800
letters FF I matching to a single leaf
glyphs can also be found in different

00:02:55.800 --> 00:02:55.810
glyphs can also be found in different
 

00:02:55.810 --> 00:02:57.330
glyphs can also be found in different
forms which is the case with the

00:02:57.330 --> 00:02:57.340
forms which is the case with the
 

00:02:57.340 --> 00:02:59.640
forms which is the case with the
Japanese character in the example this

00:02:59.640 --> 00:02:59.650
Japanese character in the example this
 

00:02:59.650 --> 00:03:01.979
Japanese character in the example this
is called the font fallback chain once

00:03:01.979 --> 00:03:01.989
is called the font fallback chain once
 

00:03:01.989 --> 00:03:04.229
is called the font fallback chain once
all the glyphs are identified the system

00:03:04.229 --> 00:03:04.239
all the glyphs are identified the system
 

00:03:04.239 --> 00:03:06.059
all the glyphs are identified the system
can position them together to have the

00:03:06.059 --> 00:03:06.069
can position them together to have the
 

00:03:06.069 --> 00:03:08.149
can position them together to have the
final look however at this point

00:03:08.149 --> 00:03:08.159
final look however at this point
 

00:03:08.159 --> 00:03:10.140
final look however at this point
positioning is not always putting the

00:03:10.140 --> 00:03:10.150
positioning is not always putting the
 

00:03:10.150 --> 00:03:12.330
positioning is not always putting the
glyph side-by-side which is the case

00:03:12.330 --> 00:03:12.340
glyph side-by-side which is the case
 

00:03:12.340 --> 00:03:16.080
glyph side-by-side which is the case
with the letter e an acute accent if we

00:03:16.080 --> 00:03:16.090
with the letter e an acute accent if we
 

00:03:16.090 --> 00:03:18.150
with the letter e an acute accent if we
provide a longer string mini can first

00:03:18.150 --> 00:03:18.160
provide a longer string mini can first
 

00:03:18.160 --> 00:03:20.460
provide a longer string mini can first
divide it into words and for each word

00:03:20.460 --> 00:03:20.470
divide it into words and for each word
 

00:03:20.470 --> 00:03:22.920
divide it into words and for each word
it does the measurement the result of

00:03:22.920 --> 00:03:22.930
it does the measurement the result of
 

00:03:22.930 --> 00:03:24.720
it does the measurement the result of
this measurement is added into a cache

00:03:24.720 --> 00:03:24.730
this measurement is added into a cache
 

00:03:24.730 --> 00:03:27.210
this measurement is added into a cache
so that if the system comes across with

00:03:27.210 --> 00:03:27.220
so that if the system comes across with
 

00:03:27.220 --> 00:03:28.860
so that if the system comes across with
the same word again it can range the

00:03:28.860 --> 00:03:28.870
the same word again it can range the
 

00:03:28.870 --> 00:03:31.770
the same word again it can range the
computed value this is a system-wide LRU

00:03:31.770 --> 00:03:31.780
computed value this is a system-wide LRU
 

00:03:31.780 --> 00:03:35.869
computed value this is a system-wide LRU
cache and has a fixed size of 5000 items

00:03:35.869 --> 00:03:35.879
cache and has a fixed size of 5000 items
 

00:03:35.879 --> 00:03:38.640
cache and has a fixed size of 5000 items
when the string is wider than the array

00:03:38.640 --> 00:03:38.650
when the string is wider than the array
 

00:03:38.650 --> 00:03:40.740
when the string is wider than the array
it has to fit an minikin has today a

00:03:40.740 --> 00:03:40.750
it has to fit an minikin has today a
 

00:03:40.750 --> 00:03:43.349
it has to fit an minikin has today a
line break in the simplest case this is

00:03:43.349 --> 00:03:43.359
line break in the simplest case this is
 

00:03:43.359 --> 00:03:45.689
line break in the simplest case this is
putting the box's side by side until the

00:03:45.689 --> 00:03:45.699
putting the box's side by side until the
 

00:03:45.699 --> 00:03:47.400
putting the box's side by side until the
boundary is reached and then moving to

00:03:47.400 --> 00:03:47.410
boundary is reached and then moving to
 

00:03:47.410 --> 00:03:50.159
boundary is reached and then moving to
the next line the behavior is controlled

00:03:50.159 --> 00:03:50.169
the next line the behavior is controlled
 

00:03:50.169 --> 00:03:52.589
the next line the behavior is controlled
with the break strategy at ribbit and if

00:03:52.589 --> 00:03:52.599
with the break strategy at ribbit and if
 

00:03:52.599 --> 00:03:54.180
with the break strategy at ribbit and if
we were to switch from simple to

00:03:54.180 --> 00:03:54.190
we were to switch from simple to
 

00:03:54.190 --> 00:03:56.129
we were to switch from simple to
balanced here minikin will distribute

00:03:56.129 --> 00:03:56.139
balanced here minikin will distribute
 

00:03:56.139 --> 00:03:58.349
balanced here minikin will distribute
the words among the lines to have better

00:03:58.349 --> 00:03:58.359
the words among the lines to have better
 

00:03:58.359 --> 00:04:01.409
the words among the lines to have better
text alignment the default value is high

00:04:01.409 --> 00:04:01.419
text alignment the default value is high
 

00:04:01.419 --> 00:04:03.000
text alignment the default value is high
quality which is very similar to

00:04:03.000 --> 00:04:03.010
quality which is very similar to
 

00:04:03.010 --> 00:04:05.729
quality which is very similar to
balanced except a few subtle differences

00:04:05.729 --> 00:04:05.739
balanced except a few subtle differences
 

00:04:05.739 --> 00:04:07.979
balanced except a few subtle differences
one of them being hyphenation for the

00:04:07.979 --> 00:04:07.989
one of them being hyphenation for the
 

00:04:07.989 --> 00:04:11.490
one of them being hyphenation for the
last line high finishing improves the

00:04:11.490 --> 00:04:11.500
last line high finishing improves the
 

00:04:11.500 --> 00:04:14.159
last line high finishing improves the
alignment of the text and the use of

00:04:14.159 --> 00:04:14.169
alignment of the text and the use of
 

00:04:14.169 --> 00:04:16.529
alignment of the text and the use of
white space and it gets more and more

00:04:16.529 --> 00:04:16.539
white space and it gets more and more
 

00:04:16.539 --> 00:04:18.839
white space and it gets more and more
important as the line bit gets shorter

00:04:18.839 --> 00:04:18.849
important as the line bit gets shorter
 

00:04:18.849 --> 00:04:21.599
important as the line bit gets shorter
however it comes with a cost the coast

00:04:21.599 --> 00:04:21.609
however it comes with a cost the coast
 

00:04:21.609 --> 00:04:23.790
however it comes with a cost the coast
arises because now the system has to

00:04:23.790 --> 00:04:23.800
arises because now the system has to
 

00:04:23.800 --> 00:04:25.890
arises because now the system has to
measure more words and it has to come

00:04:25.890 --> 00:04:25.900
measure more words and it has to come
 

00:04:25.900 --> 00:04:28.350
measure more words and it has to come
more configurations for an optimum

00:04:28.350 --> 00:04:28.360
more configurations for an optimum
 

00:04:28.360 --> 00:04:31.800
more configurations for an optimum
solution app to Android P enabling

00:04:31.800 --> 00:04:31.810
solution app to Android P enabling
 

00:04:31.810 --> 00:04:34.050
solution app to Android P enabling
hyphenation is two-and-a-half times more

00:04:34.050 --> 00:04:34.060
hyphenation is two-and-a-half times more
 

00:04:34.060 --> 00:04:36.960
hyphenation is two-and-a-half times more
expensive than the disabled state on

00:04:36.960 --> 00:04:36.970
expensive than the disabled state on
 

00:04:36.970 --> 00:04:39.270
expensive than the disabled state on
Android P we improved the simple break

00:04:39.270 --> 00:04:39.280
Android P we improved the simple break
 

00:04:39.280 --> 00:04:41.279
Android P we improved the simple break
strategy case however the default

00:04:41.279 --> 00:04:41.289
strategy case however the default
 

00:04:41.289 --> 00:04:44.570
strategy case however the default
configuration still has the same cost

00:04:44.570 --> 00:04:44.580
configuration still has the same cost
 

00:04:44.580 --> 00:04:46.950
configuration still has the same cost
another thing that affects hyphenation

00:04:46.950 --> 00:04:46.960
another thing that affects hyphenation
 

00:04:46.960 --> 00:04:50.520
another thing that affects hyphenation
is the locale in this example we have a

00:04:50.520 --> 00:04:50.530
is the locale in this example we have a
 

00:04:50.530 --> 00:04:53.100
is the locale in this example we have a
device in the English local and two

00:04:53.100 --> 00:04:53.110
device in the English local and two
 

00:04:53.110 --> 00:04:55.770
device in the English local and two
example strings one of them is not

00:04:55.770 --> 00:04:55.780
example strings one of them is not
 

00:04:55.780 --> 00:04:57.870
example strings one of them is not
hyphenated correctly and the other one

00:04:57.870 --> 00:04:57.880
hyphenated correctly and the other one
 

00:04:57.880 --> 00:05:00.120
hyphenated correctly and the other one
did not choose the right kliff for the

00:05:00.120 --> 00:05:00.130
did not choose the right kliff for the
 

00:05:00.130 --> 00:05:02.610
did not choose the right kliff for the
japanese text this will mostly happen

00:05:02.610 --> 00:05:02.620
japanese text this will mostly happen
 

00:05:02.620 --> 00:05:04.500
japanese text this will mostly happen
for dynamically loaded text such as

00:05:04.500 --> 00:05:04.510
for dynamically loaded text such as
 

00:05:04.510 --> 00:05:07.350
for dynamically loaded text such as
these things loaded from network and it

00:05:07.350 --> 00:05:07.360
these things loaded from network and it
 

00:05:07.360 --> 00:05:09.270
these things loaded from network and it
happens because the system is not aware

00:05:09.270 --> 00:05:09.280
happens because the system is not aware
 

00:05:09.280 --> 00:05:11.580
happens because the system is not aware
of the languages of those strings to fix

00:05:11.580 --> 00:05:11.590
of the languages of those strings to fix
 

00:05:11.590 --> 00:05:13.890
of the languages of those strings to fix
this we have to tell the system about

00:05:13.890 --> 00:05:13.900
this we have to tell the system about
 

00:05:13.900 --> 00:05:15.960
this we have to tell the system about
the language using the set text locale

00:05:15.960 --> 00:05:15.970
the language using the set text locale
 

00:05:15.970 --> 00:05:18.870
the language using the set text locale
function if these three contains

00:05:18.870 --> 00:05:18.880
function if these three contains
 

00:05:18.880 --> 00:05:21.510
function if these three contains
multiple languages you can use locale

00:05:21.510 --> 00:05:21.520
multiple languages you can use locale
 

00:05:21.520 --> 00:05:23.310
multiple languages you can use locale
span to mark different parts of the

00:05:23.310 --> 00:05:23.320
span to mark different parts of the
 

00:05:23.320 --> 00:05:26.070
span to mark different parts of the
world string however keep in mind that

00:05:26.070 --> 00:05:26.080
world string however keep in mind that
 

00:05:26.080 --> 00:05:28.680
world string however keep in mind that
the number of locale spans affects the

00:05:28.680 --> 00:05:28.690
the number of locale spans affects the
 

00:05:28.690 --> 00:05:31.920
the number of locale spans affects the
performance of the text layout one of

00:05:31.920 --> 00:05:31.930
performance of the text layout one of
 

00:05:31.930 --> 00:05:33.779
performance of the text layout one of
the most common tasks when working with

00:05:33.779 --> 00:05:33.789
the most common tasks when working with
 

00:05:33.789 --> 00:05:37.140
the most common tasks when working with
text is text styling so usually we would

00:05:37.140 --> 00:05:37.150
text is text styling so usually we would
 

00:05:37.150 --> 00:05:38.279
text is text styling so usually we would
start working with the text view

00:05:38.279 --> 00:05:38.289
start working with the text view
 

00:05:38.289 --> 00:05:41.010
start working with the text view
attributes and set the text size text

00:05:41.010 --> 00:05:41.020
attributes and set the text size text
 

00:05:41.020 --> 00:05:44.520
attributes and set the text size text
color and font so we call this a single

00:05:44.520 --> 00:05:44.530
color and font so we call this a single
 

00:05:44.530 --> 00:05:46.110
color and font so we call this a single
style because all of these attributes

00:05:46.110 --> 00:05:46.120
style because all of these attributes
 

00:05:46.120 --> 00:05:48.570
style because all of these attributes
affect the entire text from the text

00:05:48.570 --> 00:05:48.580
affect the entire text from the text
 

00:05:48.580 --> 00:05:51.719
affect the entire text from the text
view but usually for the designers this

00:05:51.719 --> 00:05:51.729
view but usually for the designers this
 

00:05:51.729 --> 00:05:53.279
view but usually for the designers this
is not enough and they will want to

00:05:53.279 --> 00:05:53.289
is not enough and they will want to
 

00:05:53.289 --> 00:05:55.170
is not enough and they will want to
style specifically one word or one

00:05:55.170 --> 00:05:55.180
style specifically one word or one
 

00:05:55.180 --> 00:05:58.200
style specifically one word or one
paragraph so what they want is to apply

00:05:58.200 --> 00:05:58.210
paragraph so what they want is to apply
 

00:05:58.210 --> 00:06:01.050
paragraph so what they want is to apply
a multiple style to the same style to

00:06:01.050 --> 00:06:01.060
a multiple style to the same style to
 

00:06:01.060 --> 00:06:03.629
a multiple style to the same style to
the same text block so in order to

00:06:03.629 --> 00:06:03.639
the same text block so in order to
 

00:06:03.639 --> 00:06:05.189
the same text block so in order to
achieve this in Android we work with

00:06:05.189 --> 00:06:05.199
achieve this in Android we work with
 

00:06:05.199 --> 00:06:08.460
achieve this in Android we work with
spans spans our markup objects that can

00:06:08.460 --> 00:06:08.470
spans spans our markup objects that can
 

00:06:08.470 --> 00:06:10.740
spans spans our markup objects that can
be attached to text from a start to an

00:06:10.740 --> 00:06:10.750
be attached to text from a start to an
 

00:06:10.750 --> 00:06:13.860
be attached to text from a start to an
end index and spans can be categorised

00:06:13.860 --> 00:06:13.870
end index and spans can be categorised
 

00:06:13.870 --> 00:06:16.260
end index and spans can be categorised
into character and paragraph spans

00:06:16.260 --> 00:06:16.270
into character and paragraph spans
 

00:06:16.270 --> 00:06:18.270
into character and paragraph spans
depending on whether they apply to only

00:06:18.270 --> 00:06:18.280
depending on whether they apply to only
 

00:06:18.280 --> 00:06:21.120
depending on whether they apply to only
a few characters or to entire paragraphs

00:06:21.120 --> 00:06:21.130
a few characters or to entire paragraphs
 

00:06:21.130 --> 00:06:23.760
a few characters or to entire paragraphs
and then character spans can be split

00:06:23.760 --> 00:06:23.770
and then character spans can be split
 

00:06:23.770 --> 00:06:26.520
and then character spans can be split
into appearance and metric effecting and

00:06:26.520 --> 00:06:26.530
into appearance and metric effecting and
 

00:06:26.530 --> 00:06:28.649
into appearance and metric effecting and
the difference between them lies in the

00:06:28.649 --> 00:06:28.659
the difference between them lies in the
 

00:06:28.659 --> 00:06:30.450
the difference between them lies in the
method that needs to be called on the

00:06:30.450 --> 00:06:30.460
method that needs to be called on the
 

00:06:30.460 --> 00:06:31.110
method that needs to be called on the
textview

00:06:31.110 --> 00:06:31.120
textview
 

00:06:31.120 --> 00:06:33.210
textview
in order to render the slide at the side

00:06:33.210 --> 00:06:33.220
in order to render the slide at the side
 

00:06:33.220 --> 00:06:36.870
in order to render the slide at the side
so a appearance affecting spans require

00:06:36.870 --> 00:06:36.880
so a appearance affecting spans require
 

00:06:36.880 --> 00:06:38.339
so a appearance affecting spans require
a redraw to be called

00:06:38.339 --> 00:06:38.349
a redraw to be called
 

00:06:38.349 --> 00:06:39.250
a redraw to be called
whereas

00:06:39.250 --> 00:06:39.260
whereas
 

00:06:39.260 --> 00:06:41.290
whereas
metric affecting expands required both

00:06:41.290 --> 00:06:41.300
metric affecting expands required both
 

00:06:41.300 --> 00:06:44.740
metric affecting expands required both
remeasure and a redraw let's see an

00:06:44.740 --> 00:06:44.750
remeasure and a redraw let's see an
 

00:06:44.750 --> 00:06:46.810
remeasure and a redraw let's see an
example so let's say that we need to

00:06:46.810 --> 00:06:46.820
example so let's say that we need to
 

00:06:46.820 --> 00:06:49.570
example so let's say that we need to
style a code block so in order to do

00:06:49.570 --> 00:06:49.580
style a code block so in order to do
 

00:06:49.580 --> 00:06:51.310
style a code block so in order to do
this first we would change the

00:06:51.310 --> 00:06:51.320
this first we would change the
 

00:06:51.320 --> 00:06:53.530
this first we would change the
background color so for this we would

00:06:53.530 --> 00:06:53.540
background color so for this we would
 

00:06:53.540 --> 00:06:56.680
background color so for this we would
use a background color span this doesn't

00:06:56.680 --> 00:06:56.690
use a background color span this doesn't
 

00:06:56.690 --> 00:06:59.230
use a background color span this doesn't
change the metric of the of the text so

00:06:59.230 --> 00:06:59.240
change the metric of the of the text so
 

00:06:59.240 --> 00:07:00.400
change the metric of the of the text so
this means this is an appearance

00:07:00.400 --> 00:07:00.410
this means this is an appearance
 

00:07:00.410 --> 00:07:03.340
this means this is an appearance
affecting span but we also need to

00:07:03.340 --> 00:07:03.350
affecting span but we also need to
 

00:07:03.350 --> 00:07:07.240
affecting span but we also need to
change the font so for this for this we

00:07:07.240 --> 00:07:07.250
change the font so for this for this we
 

00:07:07.250 --> 00:07:09.910
change the font so for this for this we
would use a typeface span but because

00:07:09.910 --> 00:07:09.920
would use a typeface span but because
 

00:07:09.920 --> 00:07:12.130
would use a typeface span but because
phones also change the size of the text

00:07:12.130 --> 00:07:12.140
phones also change the size of the text
 

00:07:12.140 --> 00:07:16.510
phones also change the size of the text
this is a matrix affecting span to style

00:07:16.510 --> 00:07:16.520
this is a matrix affecting span to style
 

00:07:16.520 --> 00:07:18.910
this is a matrix affecting span to style
blocks of text by for example changing

00:07:18.910 --> 00:07:18.920
blocks of text by for example changing
 

00:07:18.920 --> 00:07:21.190
blocks of text by for example changing
the layout margin or drawing a bullet in

00:07:21.190 --> 00:07:21.200
the layout margin or drawing a bullet in
 

00:07:21.200 --> 00:07:23.500
the layout margin or drawing a bullet in
front of the text we would use a bullets

00:07:23.500 --> 00:07:23.510
front of the text we would use a bullets
 

00:07:23.510 --> 00:07:26.860
front of the text we would use a bullets
span so paragraph spans like the bullet

00:07:26.860 --> 00:07:26.870
span so paragraph spans like the bullet
 

00:07:26.870 --> 00:07:28.450
span so paragraph spans like the bullet
span have to be attached from the

00:07:28.450 --> 00:07:28.460
span have to be attached from the
 

00:07:28.460 --> 00:07:30.400
span have to be attached from the
beginning of the paragraph and affect

00:07:30.400 --> 00:07:30.410
beginning of the paragraph and affect
 

00:07:30.410 --> 00:07:33.310
beginning of the paragraph and affect
the entire text of the paragraph the

00:07:33.310 --> 00:07:33.320
the entire text of the paragraph the
 

00:07:33.320 --> 00:07:34.750
the entire text of the paragraph the
thing is that if you don't attach it

00:07:34.750 --> 00:07:34.760
thing is that if you don't attach it
 

00:07:34.760 --> 00:07:36.430
thing is that if you don't attach it
from the beginning of the paragraph well

00:07:36.430 --> 00:07:36.440
from the beginning of the paragraph well
 

00:07:36.440 --> 00:07:38.050
from the beginning of the paragraph well
chances are you'll lose the styling

00:07:38.050 --> 00:07:38.060
chances are you'll lose the styling
 

00:07:38.060 --> 00:07:41.980
chances are you'll lose the styling
completely so in in the framework we

00:07:41.980 --> 00:07:41.990
completely so in in the framework we
 

00:07:41.990 --> 00:07:43.780
completely so in in the framework we
define a series of interfaces and

00:07:43.780 --> 00:07:43.790
define a series of interfaces and
 

00:07:43.790 --> 00:07:46.630
define a series of interfaces and
abstract classes and under the hood the

00:07:46.630 --> 00:07:46.640
abstract classes and under the hood the
 

00:07:46.640 --> 00:07:48.460
abstract classes and under the hood the
framework checks for instances of these

00:07:48.460 --> 00:07:48.470
framework checks for instances of these
 

00:07:48.470 --> 00:07:50.350
framework checks for instances of these
classes and then triggers different

00:07:50.350 --> 00:07:50.360
classes and then triggers different
 

00:07:50.360 --> 00:07:53.680
classes and then triggers different
actions depending on them but actually

00:07:53.680 --> 00:07:53.690
actions depending on them but actually
 

00:07:53.690 --> 00:07:56.710
actions depending on them but actually
what makes spans so powerful is the fact

00:07:56.710 --> 00:07:56.720
what makes spans so powerful is the fact
 

00:07:56.720 --> 00:07:58.660
what makes spans so powerful is the fact
that they give you access to things like

00:07:58.660 --> 00:07:58.670
that they give you access to things like
 

00:07:58.670 --> 00:08:00.910
that they give you access to things like
the text paints or the canvas in the

00:08:00.910 --> 00:08:00.920
the text paints or the canvas in the
 

00:08:00.920 --> 00:08:03.850
the text paints or the canvas in the
case of some paragraphs pants so this

00:08:03.850 --> 00:08:03.860
case of some paragraphs pants so this
 

00:08:03.860 --> 00:08:05.380
case of some paragraphs pants so this
means that you can pretty much handle

00:08:05.380 --> 00:08:05.390
means that you can pretty much handle
 

00:08:05.390 --> 00:08:08.830
means that you can pretty much handle
everything you need in terms of text so

00:08:08.830 --> 00:08:08.840
everything you need in terms of text so
 

00:08:08.840 --> 00:08:10.960
everything you need in terms of text so
first of all whenever you need a span

00:08:10.960 --> 00:08:10.970
first of all whenever you need a span
 

00:08:10.970 --> 00:08:13.090
first of all whenever you need a span
check the ones that are available in the

00:08:13.090 --> 00:08:13.100
check the ones that are available in the
 

00:08:13.100 --> 00:08:15.490
check the ones that are available in the
framework because they cover most of the

00:08:15.490 --> 00:08:15.500
framework because they cover most of the
 

00:08:15.500 --> 00:08:19.720
framework because they cover most of the
common use cases okay but if we go back

00:08:19.720 --> 00:08:19.730
common use cases okay but if we go back
 

00:08:19.730 --> 00:08:21.700
common use cases okay but if we go back
to our example we see that the typeface

00:08:21.700 --> 00:08:21.710
to our example we see that the typeface
 

00:08:21.710 --> 00:08:24.280
to our example we see that the typeface
span only gets a typeface starting with

00:08:24.280 --> 00:08:24.290
span only gets a typeface starting with
 

00:08:24.290 --> 00:08:26.770
span only gets a typeface starting with
Android P so this means that if we want

00:08:26.770 --> 00:08:26.780
Android P so this means that if we want
 

00:08:26.780 --> 00:08:29.530
Android P so this means that if we want
to support pre P devices we will need to

00:08:29.530 --> 00:08:29.540
to support pre P devices we will need to
 

00:08:29.540 --> 00:08:32.620
to support pre P devices we will need to
create our own custom span so to do this

00:08:32.620 --> 00:08:32.630
create our own custom span so to do this
 

00:08:32.630 --> 00:08:34.780
create our own custom span so to do this
we would extend from metric affecting

00:08:34.780 --> 00:08:34.790
we would extend from metric affecting
 

00:08:34.790 --> 00:08:37.210
we would extend from metric affecting
span and this class gives us access to

00:08:37.210 --> 00:08:37.220
span and this class gives us access to
 

00:08:37.220 --> 00:08:39.880
span and this class gives us access to
two methods to update measure state

00:08:39.880 --> 00:08:39.890
two methods to update measure state
 

00:08:39.890 --> 00:08:42.010
two methods to update measure state
which is called when textview on measure

00:08:42.010 --> 00:08:42.020
which is called when textview on measure
 

00:08:42.020 --> 00:08:45.100
which is called when textview on measure
is called an update draw state which is

00:08:45.100 --> 00:08:45.110
is called an update draw state which is
 

00:08:45.110 --> 00:08:46.720
is called an update draw state which is
called when that takes view on draw

00:08:46.720 --> 00:08:46.730
called when that takes view on draw
 

00:08:46.730 --> 00:08:48.820
called when that takes view on draw
method is called and both of these

00:08:48.820 --> 00:08:48.830
method is called and both of these
 

00:08:48.830 --> 00:08:50.920
method is called and both of these
methods give us access to the text paint

00:08:50.920 --> 00:08:50.930
methods give us access to the text paint
 

00:08:50.930 --> 00:08:52.690
methods give us access to the text paint
so then in the

00:08:52.690 --> 00:08:52.700
so then in the
 

00:08:52.700 --> 00:08:54.790
so then in the
explained all we need to do is change

00:08:54.790 --> 00:08:54.800
explained all we need to do is change
 

00:08:54.800 --> 00:08:59.080
explained all we need to do is change
the typeface but if we have the text

00:08:59.080 --> 00:08:59.090
the typeface but if we have the text
 

00:08:59.090 --> 00:09:01.870
the typeface but if we have the text
pane it means that we can also set the

00:09:01.870 --> 00:09:01.880
pane it means that we can also set the
 

00:09:01.880 --> 00:09:04.120
pane it means that we can also set the
background color so it means that we can

00:09:04.120 --> 00:09:04.130
background color so it means that we can
 

00:09:04.130 --> 00:09:06.970
background color so it means that we can
just create one code block span to style

00:09:06.970 --> 00:09:06.980
just create one code block span to style
 

00:09:06.980 --> 00:09:10.870
just create one code block span to style
our code block okay so now we have two

00:09:10.870 --> 00:09:10.880
our code block okay so now we have two
 

00:09:10.880 --> 00:09:12.970
our code block okay so now we have two
different ways of styling our code block

00:09:12.970 --> 00:09:12.980
different ways of styling our code block
 

00:09:12.980 --> 00:09:16.180
different ways of styling our code block
one with composing multiple spans one

00:09:16.180 --> 00:09:16.190
one with composing multiple spans one
 

00:09:16.190 --> 00:09:18.180
one with composing multiple spans one
from the framework and a custom one and

00:09:18.180 --> 00:09:18.190
from the framework and a custom one and
 

00:09:18.190 --> 00:09:19.540
from the framework and a custom one and
another one

00:09:19.540 --> 00:09:19.550
another one
 

00:09:19.550 --> 00:09:22.720
another one
where we're using a custom span so which

00:09:22.720 --> 00:09:22.730
where we're using a custom span so which
 

00:09:22.730 --> 00:09:25.300
where we're using a custom span so which
one should you use to help you decide

00:09:25.300 --> 00:09:25.310
one should you use to help you decide
 

00:09:25.310 --> 00:09:26.470
one should you use to help you decide
there's one important piece of

00:09:26.470 --> 00:09:26.480
there's one important piece of
 

00:09:26.480 --> 00:09:28.000
there's one important piece of
information that you need to remember

00:09:28.000 --> 00:09:28.010
information that you need to remember
 

00:09:28.010 --> 00:09:31.990
information that you need to remember
only framework spans can be parcel so

00:09:31.990 --> 00:09:32.000
only framework spans can be parcel so
 

00:09:32.000 --> 00:09:33.850
only framework spans can be parcel so
there are two common cases when the

00:09:33.850 --> 00:09:33.860
there are two common cases when the
 

00:09:33.860 --> 00:09:36.250
there are two common cases when the
spans are parcel first when we're

00:09:36.250 --> 00:09:36.260
spans are parcel first when we're
 

00:09:36.260 --> 00:09:39.190
spans are parcel first when we're
passing text via intents or when we're

00:09:39.190 --> 00:09:39.200
passing text via intents or when we're
 

00:09:39.200 --> 00:09:41.830
passing text via intents or when we're
copying text independently for copying

00:09:41.830 --> 00:09:41.840
copying text independently for copying
 

00:09:41.840 --> 00:09:43.690
copying text independently for copying
text for example from a text view to an

00:09:43.690 --> 00:09:43.700
text for example from a text view to an
 

00:09:43.700 --> 00:09:45.520
text for example from a text view to an
edit text in the same activity or

00:09:45.520 --> 00:09:45.530
edit text in the same activity or
 

00:09:45.530 --> 00:09:47.710
edit text in the same activity or
whether we're copying text from one

00:09:47.710 --> 00:09:47.720
whether we're copying text from one
 

00:09:47.720 --> 00:09:50.020
whether we're copying text from one
application to another the text gets to

00:09:50.020 --> 00:09:50.030
application to another the text gets to
 

00:09:50.030 --> 00:09:52.030
application to another the text gets to
be parceled and unperson we are the

00:09:52.030 --> 00:09:52.040
be parceled and unperson we are the
 

00:09:52.040 --> 00:09:54.460
be parceled and unperson we are the
clipboard service so this is what will

00:09:54.460 --> 00:09:54.470
clipboard service so this is what will
 

00:09:54.470 --> 00:09:56.650
clipboard service so this is what will
happen if we're passing the text with

00:09:56.650 --> 00:09:56.660
happen if we're passing the text with
 

00:09:56.660 --> 00:09:58.750
happen if we're passing the text with
one framework spent and one custom span

00:09:58.750 --> 00:09:58.760
one framework spent and one custom span
 

00:09:58.760 --> 00:10:01.420
one framework spent and one custom span
well just our framework spans our past

00:10:01.420 --> 00:10:01.430
well just our framework spans our past
 

00:10:01.430 --> 00:10:03.190
well just our framework spans our past
so this means that we're losing our

00:10:03.190 --> 00:10:03.200
so this means that we're losing our
 

00:10:03.200 --> 00:10:06.160
so this means that we're losing our
custom typeface plan but then if we're

00:10:06.160 --> 00:10:06.170
custom typeface plan but then if we're
 

00:10:06.170 --> 00:10:08.620
custom typeface plan but then if we're
passing a text with one custom span that

00:10:08.620 --> 00:10:08.630
passing a text with one custom span that
 

00:10:08.630 --> 00:10:11.050
passing a text with one custom span that
it means that no styling will be kept

00:10:11.050 --> 00:10:11.060
it means that no styling will be kept
 

00:10:11.060 --> 00:10:13.480
it means that no styling will be kept
so in general when you're implementing

00:10:13.480 --> 00:10:13.490
so in general when you're implementing
 

00:10:13.490 --> 00:10:16.750
so in general when you're implementing
spans and the text gets far so consider

00:10:16.750 --> 00:10:16.760
spans and the text gets far so consider
 

00:10:16.760 --> 00:10:19.120
spans and the text gets far so consider
the behavior you want should the style

00:10:19.120 --> 00:10:19.130
the behavior you want should the style
 

00:10:19.130 --> 00:10:23.770
the behavior you want should the style
be partially kept or not so now that you

00:10:23.770 --> 00:10:23.780
be partially kept or not so now that you
 

00:10:23.780 --> 00:10:25.540
be partially kept or not so now that you
know that spans how do we use them in

00:10:25.540 --> 00:10:25.550
know that spans how do we use them in
 

00:10:25.550 --> 00:10:27.790
know that spans how do we use them in
text well the framework provides two key

00:10:27.790 --> 00:10:27.800
text well the framework provides two key
 

00:10:27.800 --> 00:10:29.950
text well the framework provides two key
interfaces for this the first one is

00:10:29.950 --> 00:10:29.960
interfaces for this the first one is
 

00:10:29.960 --> 00:10:32.860
interfaces for this the first one is
spanned spend is for immutable text and

00:10:32.860 --> 00:10:32.870
spanned spend is for immutable text and
 

00:10:32.870 --> 00:10:34.840
spanned spend is for immutable text and
immutable markup and declares methods

00:10:34.840 --> 00:10:34.850
immutable markup and declares methods
 

00:10:34.850 --> 00:10:37.180
immutable markup and declares methods
such as get spans or it gets spent start

00:10:37.180 --> 00:10:37.190
such as get spans or it gets spent start
 

00:10:37.190 --> 00:10:38.920
such as get spans or it gets spent start
and get spent end it lets you query

00:10:38.920 --> 00:10:38.930
and get spent end it lets you query
 

00:10:38.930 --> 00:10:41.170
and get spent end it lets you query
spans but not modify them if you want to

00:10:41.170 --> 00:10:41.180
spans but not modify them if you want to
 

00:10:41.180 --> 00:10:43.150
spans but not modify them if you want to
modify them we have span a ball which

00:10:43.150 --> 00:10:43.160
modify them we have span a ball which
 

00:10:43.160 --> 00:10:44.800
modify them we have span a ball which
has the ability to mutate the markup

00:10:44.800 --> 00:10:44.810
has the ability to mutate the markup
 

00:10:44.810 --> 00:10:46.990
has the ability to mutate the markup
with methods to test set span or remove

00:10:46.990 --> 00:10:47.000
with methods to test set span or remove
 

00:10:47.000 --> 00:10:49.360
with methods to test set span or remove
span then we have three concrete

00:10:49.360 --> 00:10:49.370
span then we have three concrete
 

00:10:49.370 --> 00:10:51.640
span then we have three concrete
implementations of these interfaces the

00:10:51.640 --> 00:10:51.650
implementations of these interfaces the
 

00:10:51.650 --> 00:10:53.200
implementations of these interfaces the
first one is span string which

00:10:53.200 --> 00:10:53.210
first one is span string which
 

00:10:53.210 --> 00:10:55.390
first one is span string which
implements spanned and as such has

00:10:55.390 --> 00:10:55.400
implements spanned and as such has
 

00:10:55.400 --> 00:10:57.510
implements spanned and as such has
immutable text an immutable markup

00:10:57.510 --> 00:10:57.520
immutable text an immutable markup
 

00:10:57.520 --> 00:10:59.680
immutable text an immutable markup
spannabis string which implements

00:10:59.680 --> 00:10:59.690
spannabis string which implements
 

00:10:59.690 --> 00:11:00.250
spannabis string which implements
spammable

00:11:00.250 --> 00:11:00.260
spammable
 

00:11:00.260 --> 00:11:02.740
spammable
as such has immutable textbook mutable

00:11:02.740 --> 00:11:02.750
as such has immutable textbook mutable
 

00:11:02.750 --> 00:11:05.050
as such has immutable textbook mutable
market and finally we have a third class

00:11:05.050 --> 00:11:05.060
market and finally we have a third class
 

00:11:05.060 --> 00:11:06.130
market and finally we have a third class
which adds mutable

00:11:06.130 --> 00:11:06.140
which adds mutable
 

00:11:06.140 --> 00:11:07.420
which adds mutable
the text with the spannabis

00:11:07.420 --> 00:11:07.430
the text with the spannabis
 

00:11:07.430 --> 00:11:09.370
the text with the spannabis
stringbuilder this is what we use

00:11:09.370 --> 00:11:09.380
stringbuilder this is what we use
 

00:11:09.380 --> 00:11:11.050
stringbuilder this is what we use
internally for example for edit text

00:11:11.050 --> 00:11:11.060
internally for example for edit text
 

00:11:11.060 --> 00:11:12.550
internally for example for edit text
because it allows you to modify the text

00:11:12.550 --> 00:11:12.560
because it allows you to modify the text
 

00:11:12.560 --> 00:11:14.890
because it allows you to modify the text
and the markup these last two classes

00:11:14.890 --> 00:11:14.900
and the markup these last two classes
 

00:11:14.900 --> 00:11:17.620
and the markup these last two classes
are very different internally spannabis

00:11:17.620 --> 00:11:17.630
are very different internally spannabis
 

00:11:17.630 --> 00:11:20.050
are very different internally spannabis
string holds an array of spans whereas

00:11:20.050 --> 00:11:20.060
string holds an array of spans whereas
 

00:11:20.060 --> 00:11:22.120
string holds an array of spans whereas
venable string builder holds a tree of

00:11:22.120 --> 00:11:22.130
venable string builder holds a tree of
 

00:11:22.130 --> 00:11:24.370
venable string builder holds a tree of
spans so these are widely differently

00:11:24.370 --> 00:11:24.380
spans so these are widely differently
 

00:11:24.380 --> 00:11:26.410
spans so these are widely differently
implemented so as a team we were

00:11:26.410 --> 00:11:26.420
implemented so as a team we were
 

00:11:26.420 --> 00:11:28.060
implemented so as a team we were
wondering well is the tree more

00:11:28.060 --> 00:11:28.070
wondering well is the tree more
 

00:11:28.070 --> 00:11:29.800
wondering well is the tree more
efficient maybe there's a case where we

00:11:29.800 --> 00:11:29.810
efficient maybe there's a case where we
 

00:11:29.810 --> 00:11:31.420
efficient maybe there's a case where we
want to recommend people to only use

00:11:31.420 --> 00:11:31.430
want to recommend people to only use
 

00:11:31.430 --> 00:11:33.400
want to recommend people to only use
findable string or string builder all

00:11:33.400 --> 00:11:33.410
findable string or string builder all
 

00:11:33.410 --> 00:11:35.200
findable string or string builder all
the time because it's more efficient so

00:11:35.200 --> 00:11:35.210
the time because it's more efficient so
 

00:11:35.210 --> 00:11:38.680
the time because it's more efficient so
we ran tests the answer is up to 250

00:11:38.680 --> 00:11:38.690
we ran tests the answer is up to 250
 

00:11:38.690 --> 00:11:39.910
we ran tests the answer is up to 250
spans they're the same

00:11:39.910 --> 00:11:39.920
spans they're the same
 

00:11:39.920 --> 00:11:41.830
spans they're the same
they basically perform equally so we

00:11:41.830 --> 00:11:41.840
they basically perform equally so we
 

00:11:41.840 --> 00:11:43.180
they basically perform equally so we
recommend you do what makes most

00:11:43.180 --> 00:11:43.190
recommend you do what makes most
 

00:11:43.190 --> 00:11:45.100
recommend you do what makes most
semantic sense which is use spannabis

00:11:45.100 --> 00:11:45.110
semantic sense which is use spannabis
 

00:11:45.110 --> 00:11:47.350
semantic sense which is use spannabis
string for immutable text spannabis

00:11:47.350 --> 00:11:47.360
string for immutable text spannabis
 

00:11:47.360 --> 00:11:49.780
string for immutable text spannabis
string builder for mutable text however

00:11:49.780 --> 00:11:49.790
string builder for mutable text however
 

00:11:49.790 --> 00:11:52.690
string builder for mutable text however
after 250 spans they really do start to

00:11:52.690 --> 00:11:52.700
after 250 spans they really do start to
 

00:11:52.700 --> 00:11:54.490
after 250 spans they really do start to
diverge and we recommend you use Manimal

00:11:54.490 --> 00:11:54.500
diverge and we recommend you use Manimal
 

00:11:54.500 --> 00:11:56.080
diverge and we recommend you use Manimal
string builder for all of your cases

00:11:56.080 --> 00:11:56.090
string builder for all of your cases
 

00:11:56.090 --> 00:11:58.450
string builder for all of your cases
just because it is more performant out

00:11:58.450 --> 00:11:58.460
just because it is more performant out
 

00:11:58.460 --> 00:12:00.730
just because it is more performant out
of curiosity we ran these tests to the

00:12:00.730 --> 00:12:00.740
of curiosity we ran these tests to the
 

00:12:00.740 --> 00:12:02.500
of curiosity we ran these tests to the
limit and turns out when you have

00:12:02.500 --> 00:12:02.510
limit and turns out when you have
 

00:12:02.510 --> 00:12:05.500
limit and turns out when you have
thousands of spans they really diverge

00:12:05.500 --> 00:12:05.510
thousands of spans they really diverge
 

00:12:05.510 --> 00:12:07.120
thousands of spans they really diverge
but we really really hope this is not a

00:12:07.120 --> 00:12:07.130
but we really really hope this is not a
 

00:12:07.130 --> 00:12:10.150
but we really really hope this is not a
common use case for anyone another

00:12:10.150 --> 00:12:10.160
common use case for anyone another
 

00:12:10.160 --> 00:12:11.860
common use case for anyone another
common thing we see with spans is people

00:12:11.860 --> 00:12:11.870
common thing we see with spans is people
 

00:12:11.870 --> 00:12:13.870
common thing we see with spans is people
trying to check if one span is present

00:12:13.870 --> 00:12:13.880
trying to check if one span is present
 

00:12:13.880 --> 00:12:15.940
trying to check if one span is present
within a span able and the solution

00:12:15.940 --> 00:12:15.950
within a span able and the solution
 

00:12:15.950 --> 00:12:19.000
within a span able and the solution
we've seen online uses span get spans so

00:12:19.000 --> 00:12:19.010
we've seen online uses span get spans so
 

00:12:19.010 --> 00:12:20.740
we've seen online uses span get spans so
it's something like this you just query

00:12:20.740 --> 00:12:20.750
it's something like this you just query
 

00:12:20.750 --> 00:12:23.080
it's something like this you just query
for all the spans of a given type get an

00:12:23.080 --> 00:12:23.090
for all the spans of a given type get an
 

00:12:23.090 --> 00:12:24.760
for all the spans of a given type get an
array back and then just check if the

00:12:24.760 --> 00:12:24.770
array back and then just check if the
 

00:12:24.770 --> 00:12:26.680
array back and then just check if the
array is empty this is extremely

00:12:26.680 --> 00:12:26.690
array is empty this is extremely
 

00:12:26.690 --> 00:12:28.030
array is empty this is extremely
inefficient you're going through the

00:12:28.030 --> 00:12:28.040
inefficient you're going through the
 

00:12:28.040 --> 00:12:30.100
inefficient you're going through the
entire span looking for all of the

00:12:30.100 --> 00:12:30.110
entire span looking for all of the
 

00:12:30.110 --> 00:12:32.380
entire span looking for all of the
instances of that span collecting them

00:12:32.380 --> 00:12:32.390
instances of that span collecting them
 

00:12:32.390 --> 00:12:34.210
instances of that span collecting them
all into an array and then just checking

00:12:34.210 --> 00:12:34.220
all into an array and then just checking
 

00:12:34.220 --> 00:12:36.220
all into an array and then just checking
if that array is empty there's a better

00:12:36.220 --> 00:12:36.230
if that array is empty there's a better
 

00:12:36.230 --> 00:12:37.900
if that array is empty there's a better
way to do this which is next span

00:12:37.900 --> 00:12:37.910
way to do this which is next span
 

00:12:37.910 --> 00:12:40.150
way to do this which is next span
transition this method checks for the

00:12:40.150 --> 00:12:40.160
transition this method checks for the
 

00:12:40.160 --> 00:12:42.550
transition this method checks for the
boundaries of spans so when you ask for

00:12:42.550 --> 00:12:42.560
boundaries of spans so when you ask for
 

00:12:42.560 --> 00:12:45.040
boundaries of spans so when you ask for
the first boundary of a certain span it

00:12:45.040 --> 00:12:45.050
the first boundary of a certain span it
 

00:12:45.050 --> 00:12:46.480
the first boundary of a certain span it
will just have to do the work until it

00:12:46.480 --> 00:12:46.490
will just have to do the work until it
 

00:12:46.490 --> 00:12:47.710
will just have to do the work until it
sounds the first man and then it can

00:12:47.710 --> 00:12:47.720
sounds the first man and then it can
 

00:12:47.720 --> 00:12:50.350
sounds the first man and then it can
stop and it won't collect any spans into

00:12:50.350 --> 00:12:50.360
stop and it won't collect any spans into
 

00:12:50.360 --> 00:12:51.970
stop and it won't collect any spans into
an array wasting memory that you

00:12:51.970 --> 00:12:51.980
an array wasting memory that you
 

00:12:51.980 --> 00:12:55.300
an array wasting memory that you
shouldn't do a frequent task when

00:12:55.300 --> 00:12:55.310
shouldn't do a frequent task when
 

00:12:55.310 --> 00:12:57.550
shouldn't do a frequent task when
working with styling text is styling

00:12:57.550 --> 00:12:57.560
working with styling text is styling
 

00:12:57.560 --> 00:13:00.310
working with styling text is styling
internationalized text so usually in

00:13:00.310 --> 00:13:00.320
internationalized text so usually in
 

00:13:00.320 --> 00:13:02.530
internationalized text so usually in
your resources you will define the same

00:13:02.530 --> 00:13:02.540
your resources you will define the same
 

00:13:02.540 --> 00:13:05.140
your resources you will define the same
string in multiple languages but then

00:13:05.140 --> 00:13:05.150
string in multiple languages but then
 

00:13:05.150 --> 00:13:07.480
string in multiple languages but then
you need to highlight one specific word

00:13:07.480 --> 00:13:07.490
you need to highlight one specific word
 

00:13:07.490 --> 00:13:09.460
you need to highlight one specific word
so here for example we want the word

00:13:09.460 --> 00:13:09.470
so here for example we want the word
 

00:13:09.470 --> 00:13:12.040
so here for example we want the word
text to be bold but the thing is that

00:13:12.040 --> 00:13:12.050
text to be bold but the thing is that
 

00:13:12.050 --> 00:13:13.870
text to be bold but the thing is that
the word and where it appears is

00:13:13.870 --> 00:13:13.880
the word and where it appears is
 

00:13:13.880 --> 00:13:16.960
the word and where it appears is
different in every language so one easy

00:13:16.960 --> 00:13:16.970
different in every language so one easy
 

00:13:16.970 --> 00:13:20.320
different in every language so one easy
solution would be to just use HTML tag

00:13:20.320 --> 00:13:20.330
solution would be to just use HTML tag
 

00:13:20.330 --> 00:13:22.600
solution would be to just use HTML tag
but the problem and this is that HTML

00:13:22.600 --> 00:13:22.610
but the problem and this is that HTML
 

00:13:22.610 --> 00:13:24.910
but the problem and this is that HTML
tags have limited functionality so if

00:13:24.910 --> 00:13:24.920
tags have limited functionality so if
 

00:13:24.920 --> 00:13:26.530
tags have limited functionality so if
for example we want to change the font

00:13:26.530 --> 00:13:26.540
for example we want to change the font
 

00:13:26.540 --> 00:13:29.560
for example we want to change the font
well this is not something that HTML can

00:13:29.560 --> 00:13:29.570
well this is not something that HTML can
 

00:13:29.570 --> 00:13:32.680
well this is not something that HTML can
provide the solution for this is to use

00:13:32.680 --> 00:13:32.690
provide the solution for this is to use
 

00:13:32.690 --> 00:13:36.040
provide the solution for this is to use
a notation tags so the annotation tag

00:13:36.040 --> 00:13:36.050
a notation tags so the annotation tag
 

00:13:36.050 --> 00:13:38.860
a notation tags so the annotation tag
allows us to set key and value pairs and

00:13:38.860 --> 00:13:38.870
allows us to set key and value pairs and
 

00:13:38.870 --> 00:13:41.770
allows us to set key and value pairs and
then define whatever we need so here for

00:13:41.770 --> 00:13:41.780
then define whatever we need so here for
 

00:13:41.780 --> 00:13:43.900
then define whatever we need so here for
example I'm defining in the key font and

00:13:43.900 --> 00:13:43.910
example I'm defining in the key font and
 

00:13:43.910 --> 00:13:47.170
example I'm defining in the key font and
the value to be the font name and this

00:13:47.170 --> 00:13:47.180
the value to be the font name and this
 

00:13:47.180 --> 00:13:49.930
the value to be the font name and this
is how we would use it in code so we

00:13:49.930 --> 00:13:49.940
is how we would use it in code so we
 

00:13:49.940 --> 00:13:51.610
is how we would use it in code so we
would get the text from the resources as

00:13:51.610 --> 00:13:51.620
would get the text from the resources as
 

00:13:51.620 --> 00:13:54.940
would get the text from the resources as
a spammed string then we would get the

00:13:54.940 --> 00:13:54.950
a spammed string then we would get the
 

00:13:54.950 --> 00:13:57.850
a spammed string then we would get the
annotations from the span we would eat

00:13:57.850 --> 00:13:57.860
annotations from the span we would eat
 

00:13:57.860 --> 00:13:59.620
annotations from the span we would eat
right through them and get the ones that

00:13:59.620 --> 00:13:59.630
right through them and get the ones that
 

00:13:59.630 --> 00:14:01.090
right through them and get the ones that
have the key that we're interested in

00:14:01.090 --> 00:14:01.100
have the key that we're interested in
 

00:14:01.100 --> 00:14:04.480
have the key that we're interested in
and then the value and then we would set

00:14:04.480 --> 00:14:04.490
and then the value and then we would set
 

00:14:04.490 --> 00:14:11.110
and then the value and then we would set
the span based on the indices we will

00:14:11.110 --> 00:14:11.120
the span based on the indices we will
 

00:14:11.120 --> 00:14:13.420
the span based on the indices we will
now look at how text is laid out in the

00:14:13.420 --> 00:14:13.430
now look at how text is laid out in the
 

00:14:13.430 --> 00:14:16.240
now look at how text is laid out in the
view let's assume that you have a text

00:14:16.240 --> 00:14:16.250
view let's assume that you have a text
 

00:14:16.250 --> 00:14:18.490
view let's assume that you have a text
with some padding applied when you set

00:14:18.490 --> 00:14:18.500
with some padding applied when you set
 

00:14:18.500 --> 00:14:20.530
with some padding applied when you set
the roll top text we will position the

00:14:20.530 --> 00:14:20.540
the roll top text we will position the
 

00:14:20.540 --> 00:14:22.480
the roll top text we will position the
image to top of the view after the

00:14:22.480 --> 00:14:22.490
image to top of the view after the
 

00:14:22.490 --> 00:14:24.520
image to top of the view after the
padding get compound padding top

00:14:24.520 --> 00:14:24.530
padding get compound padding top
 

00:14:24.530 --> 00:14:26.260
padding get compound padding top
function will return you the distance

00:14:26.260 --> 00:14:26.270
function will return you the distance
 

00:14:26.270 --> 00:14:28.300
function will return you the distance
from top of the view to bottom of the

00:14:28.300 --> 00:14:28.310
from top of the view to bottom of the
 

00:14:28.310 --> 00:14:31.300
from top of the view to bottom of the
image setting the Drobo padding will add

00:14:31.300 --> 00:14:31.310
image setting the Drobo padding will add
 

00:14:31.310 --> 00:14:33.430
image setting the Drobo padding will add
extra spacing between the image and the

00:14:33.430 --> 00:14:33.440
extra spacing between the image and the
 

00:14:33.440 --> 00:14:35.320
extra spacing between the image and the
area that the text will be drawn in and

00:14:35.320 --> 00:14:35.330
area that the text will be drawn in and
 

00:14:35.330 --> 00:14:37.570
area that the text will be drawn in and
now get compound padding top will point

00:14:37.570 --> 00:14:37.580
now get compound padding top will point
 

00:14:37.580 --> 00:14:41.020
now get compound padding top will point
to this new location when you set text

00:14:41.020 --> 00:14:41.030
to this new location when you set text
 

00:14:41.030 --> 00:14:43.120
to this new location when you set text
text we will create a layout object

00:14:43.120 --> 00:14:43.130
text we will create a layout object
 

00:14:43.130 --> 00:14:45.520
text we will create a layout object
layout is responsible for rendering and

00:14:45.520 --> 00:14:45.530
layout is responsible for rendering and
 

00:14:45.530 --> 00:14:48.190
layout is responsible for rendering and
measuring text here the boundaries of

00:14:48.190 --> 00:14:48.200
measuring text here the boundaries of
 

00:14:48.200 --> 00:14:50.620
measuring text here the boundaries of
the layout are highlighted in orange it

00:14:50.620 --> 00:14:50.630
the layout are highlighted in orange it
 

00:14:50.630 --> 00:14:52.420
the layout are highlighted in orange it
will also provide you some more

00:14:52.420 --> 00:14:52.430
will also provide you some more
 

00:14:52.430 --> 00:14:54.340
will also provide you some more
information about the text it contains

00:14:54.340 --> 00:14:54.350
information about the text it contains
 

00:14:54.350 --> 00:14:56.560
information about the text it contains
such as the baseline and top and bottom

00:14:56.560 --> 00:14:56.570
such as the baseline and top and bottom
 

00:14:56.570 --> 00:15:00.250
such as the baseline and top and bottom
of the lines there are three layout

00:15:00.250 --> 00:15:00.260
of the lines there are three layout
 

00:15:00.260 --> 00:15:02.980
of the lines there are three layout
classes on Android boring clay out is

00:15:02.980 --> 00:15:02.990
classes on Android boring clay out is
 

00:15:02.990 --> 00:15:05.290
classes on Android boring clay out is
for single style and simple text which

00:15:05.290 --> 00:15:05.300
for single style and simple text which
 

00:15:05.300 --> 00:15:07.390
for single style and simple text which
doesn't contain tab next line or

00:15:07.390 --> 00:15:07.400
doesn't contain tab next line or
 

00:15:07.400 --> 00:15:10.360
doesn't contain tab next line or
right-to-left characters dynamic layout

00:15:10.360 --> 00:15:10.370
right-to-left characters dynamic layout
 

00:15:10.370 --> 00:15:12.250
right-to-left characters dynamic layout
is created for editable and selectable

00:15:12.250 --> 00:15:12.260
is created for editable and selectable
 

00:15:12.260 --> 00:15:14.829
is created for editable and selectable
text and for other cases text we will

00:15:14.829 --> 00:15:14.839
text and for other cases text we will
 

00:15:14.839 --> 00:15:18.430
text and for other cases text we will
create a static layout when you set the

00:15:18.430 --> 00:15:18.440
create a static layout when you set the
 

00:15:18.440 --> 00:15:20.860
create a static layout when you set the
gravity the layout object itself will be

00:15:20.860 --> 00:15:20.870
gravity the layout object itself will be
 

00:15:20.870 --> 00:15:22.930
gravity the layout object itself will be
positioned in the wheel get total

00:15:22.930 --> 00:15:22.940
positioned in the wheel get total
 

00:15:22.940 --> 00:15:24.640
positioned in the wheel get total
padding tab will return a the distance

00:15:24.640 --> 00:15:24.650
padding tab will return a the distance
 

00:15:24.650 --> 00:15:26.470
padding tab will return a the distance
from top of the wheel to the top of the

00:15:26.470 --> 00:15:26.480
from top of the wheel to the top of the
 

00:15:26.480 --> 00:15:30.280
from top of the wheel to the top of the
layout include foam padding this

00:15:30.280 --> 00:15:30.290
layout include foam padding this
 

00:15:30.290 --> 00:15:32.680
layout include foam padding this
attribute will add extra spacing to top

00:15:32.680 --> 00:15:32.690
attribute will add extra spacing to top
 

00:15:32.690 --> 00:15:33.880
attribute will add extra spacing to top
and bottom of the layer

00:15:33.880 --> 00:15:33.890
and bottom of the layer
 

00:15:33.890 --> 00:15:36.160
and bottom of the layer
and the value the height of this spacing

00:15:36.160 --> 00:15:36.170
and the value the height of this spacing
 

00:15:36.170 --> 00:15:38.170
and the value the height of this spacing
is calculated using the values in the

00:15:38.170 --> 00:15:38.180
is calculated using the values in the
 

00:15:38.180 --> 00:15:41.170
is calculated using the values in the
font the effect is more visible than you

00:15:41.170 --> 00:15:41.180
font the effect is more visible than you
 

00:15:41.180 --> 00:15:43.720
font the effect is more visible than you
use at all script in this example when

00:15:43.720 --> 00:15:43.730
use at all script in this example when
 

00:15:43.730 --> 00:15:45.639
use at all script in this example when
it is set to false we see that the text

00:15:45.639 --> 00:15:45.649
it is set to false we see that the text
 

00:15:45.649 --> 00:15:48.910
it is set to false we see that the text
is clipped since it only applies when

00:15:48.910 --> 00:15:48.920
is clipped since it only applies when
 

00:15:48.920 --> 00:15:50.650
is clipped since it only applies when
you set to true it only applies the

00:15:50.650 --> 00:15:50.660
you set to true it only applies the
 

00:15:50.660 --> 00:15:53.440
you set to true it only applies the
spacing to top and bottom of the text on

00:15:53.440 --> 00:15:53.450
spacing to top and bottom of the text on
 

00:15:53.450 --> 00:15:55.360
spacing to top and bottom of the text on
Android we will see that lines would

00:15:55.360 --> 00:15:55.370
Android we will see that lines would
 

00:15:55.370 --> 00:15:58.600
Android we will see that lines would
overlap on Android P will fix this issue

00:15:58.600 --> 00:15:58.610
overlap on Android P will fix this issue
 

00:15:58.610 --> 00:16:00.850
overlap on Android P will fix this issue
now if the system identifies that the

00:16:00.850 --> 00:16:00.860
now if the system identifies that the
 

00:16:00.860 --> 00:16:03.639
now if the system identifies that the
text the lines will overlap it will put

00:16:03.639 --> 00:16:03.649
text the lines will overlap it will put
 

00:16:03.649 --> 00:16:06.220
text the lines will overlap it will put
extra spacing between the lines and will

00:16:06.220 --> 00:16:06.230
extra spacing between the lines and will
 

00:16:06.230 --> 00:16:08.310
extra spacing between the lines and will
apply this rule to the whole paragraph

00:16:08.310 --> 00:16:08.320
apply this rule to the whole paragraph
 

00:16:08.320 --> 00:16:11.170
apply this rule to the whole paragraph
to provide a knob to provide an opt-out

00:16:11.170 --> 00:16:11.180
to provide a knob to provide an opt-out
 

00:16:11.180 --> 00:16:14.949
to provide a knob to provide an opt-out
option we added an attribute named

00:16:14.949 --> 00:16:14.959
option we added an attribute named
 

00:16:14.959 --> 00:16:17.139
option we added an attribute named
fallback line spacing which is by

00:16:17.139 --> 00:16:17.149
fallback line spacing which is by
 

00:16:17.149 --> 00:16:21.009
fallback line spacing which is by
default turned on a similar attribute

00:16:21.009 --> 00:16:21.019
default turned on a similar attribute
 

00:16:21.019 --> 00:16:22.930
default turned on a similar attribute
that changes the line height is the

00:16:22.930 --> 00:16:22.940
that changes the line height is the
 

00:16:22.940 --> 00:16:26.230
that changes the line height is the
elegant text height attribute however

00:16:26.230 --> 00:16:26.240
elegant text height attribute however
 

00:16:26.240 --> 00:16:28.360
elegant text height attribute however
unlikely even though it changes the

00:16:28.360 --> 00:16:28.370
unlikely even though it changes the
 

00:16:28.370 --> 00:16:30.639
unlikely even though it changes the
light height unlike the other attributes

00:16:30.639 --> 00:16:30.649
light height unlike the other attributes
 

00:16:30.649 --> 00:16:32.769
light height unlike the other attributes
it will not add spacing but it will

00:16:32.769 --> 00:16:32.779
it will not add spacing but it will
 

00:16:32.779 --> 00:16:34.480
it will not add spacing but it will
actually start using a different font

00:16:34.480 --> 00:16:34.490
actually start using a different font
 

00:16:34.490 --> 00:16:36.819
actually start using a different font
there are two different fonts defined in

00:16:36.819 --> 00:16:36.829
there are two different fonts defined in
 

00:16:36.829 --> 00:16:39.430
there are two different fonts defined in
the Android font fallback chain compact

00:16:39.430 --> 00:16:39.440
the Android font fallback chain compact
 

00:16:39.440 --> 00:16:42.639
the Android font fallback chain compact
an elegant setting elegant excited to do

00:16:42.639 --> 00:16:42.649
an elegant setting elegant excited to do
 

00:16:42.649 --> 00:16:45.519
an elegant setting elegant excited to do
will make the system choose the elegant

00:16:45.519 --> 00:16:45.529
will make the system choose the elegant
 

00:16:45.529 --> 00:16:48.880
will make the system choose the elegant
version of the same script if that font

00:16:48.880 --> 00:16:48.890
version of the same script if that font
 

00:16:48.890 --> 00:16:53.439
version of the same script if that font
exists speaking of line height it is an

00:16:53.439 --> 00:16:53.449
exists speaking of line height it is an
 

00:16:53.449 --> 00:16:55.329
exists speaking of line height it is an
important attribute for the readability

00:16:55.329 --> 00:16:55.339
important attribute for the readability
 

00:16:55.339 --> 00:16:57.790
important attribute for the readability
of the text and you can control it using

00:16:57.790 --> 00:16:57.800
of the text and you can control it using
 

00:16:57.800 --> 00:17:00.009
of the text and you can control it using
line spacing extra and multiply that

00:17:00.009 --> 00:17:00.019
line spacing extra and multiply that
 

00:17:00.019 --> 00:17:02.650
line spacing extra and multiply that
Rivage these attributes will add extra

00:17:02.650 --> 00:17:02.660
Rivage these attributes will add extra
 

00:17:02.660 --> 00:17:05.740
Rivage these attributes will add extra
spacing in between the lines but not the

00:17:05.740 --> 00:17:05.750
spacing in between the lines but not the
 

00:17:05.750 --> 00:17:09.039
spacing in between the lines but not the
last line since these developers mention

00:17:09.039 --> 00:17:09.049
last line since these developers mention
 

00:17:09.049 --> 00:17:10.870
last line since these developers mention
does just that designers would mostly

00:17:10.870 --> 00:17:10.880
does just that designers would mostly
 

00:17:10.880 --> 00:17:13.390
does just that designers would mostly
provide line height as it is but not as

00:17:13.390 --> 00:17:13.400
provide line height as it is but not as
 

00:17:13.400 --> 00:17:16.030
provide line height as it is but not as
multiplier or extra on Android P we

00:17:16.030 --> 00:17:16.040
multiplier or extra on Android P we
 

00:17:16.040 --> 00:17:20.350
multiplier or extra on Android P we
added the line height attribute to other

00:17:20.350 --> 00:17:20.360
added the line height attribute to other
 

00:17:20.360 --> 00:17:22.840
added the line height attribute to other
attributes that we added on Android P in

00:17:22.840 --> 00:17:22.850
attributes that we added on Android P in
 

00:17:22.850 --> 00:17:25.809
attributes that we added on Android P in
order to bridge the gap between design

00:17:25.809 --> 00:17:25.819
order to bridge the gap between design
 

00:17:25.819 --> 00:17:27.819
order to bridge the gap between design
and implementation our first base line

00:17:27.819 --> 00:17:27.829
and implementation our first base line
 

00:17:27.829 --> 00:17:29.500
and implementation our first base line
to top height and last base line to

00:17:29.500 --> 00:17:29.510
to top height and last base line to
 

00:17:29.510 --> 00:17:31.720
to top height and last base line to
bottom height the first one will let you

00:17:31.720 --> 00:17:31.730
bottom height the first one will let you
 

00:17:31.730 --> 00:17:33.430
bottom height the first one will let you
control the distance between the top of

00:17:33.430 --> 00:17:33.440
control the distance between the top of
 

00:17:33.440 --> 00:17:36.159
control the distance between the top of
the view to the base line of the first

00:17:36.159 --> 00:17:36.169
the view to the base line of the first
 

00:17:36.169 --> 00:17:38.740
the view to the base line of the first
line and the second one similarly will

00:17:38.740 --> 00:17:38.750
line and the second one similarly will
 

00:17:38.750 --> 00:17:40.330
line and the second one similarly will
let you control the distance between

00:17:40.330 --> 00:17:40.340
let you control the distance between
 

00:17:40.340 --> 00:17:42.460
let you control the distance between
bottom of the view to the base line of

00:17:42.460 --> 00:17:42.470
bottom of the view to the base line of
 

00:17:42.470 --> 00:17:46.030
bottom of the view to the base line of
the last line finally when you said

00:17:46.030 --> 00:17:46.040
the last line finally when you said
 

00:17:46.040 --> 00:17:47.350
the last line finally when you said
takes alignment the take

00:17:47.350 --> 00:17:47.360
takes alignment the take
 

00:17:47.360 --> 00:17:49.960
takes alignment the take
we'll be positioned in the layout get

00:17:49.960 --> 00:17:49.970
we'll be positioned in the layout get
 

00:17:49.970 --> 00:17:52.090
we'll be positioned in the layout get
line left and get line read functions of

00:17:52.090 --> 00:17:52.100
line left and get line read functions of
 

00:17:52.100 --> 00:17:54.070
line left and get line read functions of
the layout object will give you

00:17:54.070 --> 00:17:54.080
the layout object will give you
 

00:17:54.080 --> 00:17:55.810
the layout object will give you
information about this positioning

00:17:55.810 --> 00:17:55.820
information about this positioning
 

00:17:55.820 --> 00:17:59.890
information about this positioning
relative to the layout boundaries now

00:17:59.890 --> 00:17:59.900
relative to the layout boundaries now
 

00:17:59.900 --> 00:18:01.510
relative to the layout boundaries now
that you know about layout and some

00:18:01.510 --> 00:18:01.520
that you know about layout and some
 

00:18:01.520 --> 00:18:03.549
that you know about layout and some
important functions we can answer a

00:18:03.549 --> 00:18:03.559
important functions we can answer a
 

00:18:03.559 --> 00:18:05.140
important functions we can answer a
frequently asked question on the

00:18:05.140 --> 00:18:05.150
frequently asked question on the
 

00:18:05.150 --> 00:18:05.740
frequently asked question on the
Internet

00:18:05.740 --> 00:18:05.750
Internet
 

00:18:05.750 --> 00:18:07.990
Internet
which is how to implement the rounded

00:18:07.990 --> 00:18:08.000
which is how to implement the rounded
 

00:18:08.000 --> 00:18:10.390
which is how to implement the rounded
background span this is not doable with

00:18:10.390 --> 00:18:10.400
background span this is not doable with
 

00:18:10.400 --> 00:18:12.580
background span this is not doable with
spans but we can implement it we can

00:18:12.580 --> 00:18:12.590
spans but we can implement it we can
 

00:18:12.590 --> 00:18:13.419
spans but we can implement it we can
draw it ourselves

00:18:13.419 --> 00:18:13.429
draw it ourselves
 

00:18:13.429 --> 00:18:16.539
draw it ourselves
using the layout functions to do that

00:18:16.539 --> 00:18:16.549
using the layout functions to do that
 

00:18:16.549 --> 00:18:19.450
using the layout functions to do that
first we need to mark our words that we

00:18:19.450 --> 00:18:19.460
first we need to mark our words that we
 

00:18:19.460 --> 00:18:21.220
first we need to mark our words that we
want to draw the background for a

00:18:21.220 --> 00:18:21.230
want to draw the background for a
 

00:18:21.230 --> 00:18:23.590
want to draw the background for a
notation that Florina mentioned is a

00:18:23.590 --> 00:18:23.600
notation that Florina mentioned is a
 

00:18:23.600 --> 00:18:26.830
notation that Florina mentioned is a
good option for such a use case then we

00:18:26.830 --> 00:18:26.840
good option for such a use case then we
 

00:18:26.840 --> 00:18:28.990
good option for such a use case then we
will define our Drobo's three for the

00:18:28.990 --> 00:18:29.000
will define our Drobo's three for the
 

00:18:29.000 --> 00:18:30.850
will define our Drobo's three for the
words that start and end on different

00:18:30.850 --> 00:18:30.860
words that start and end on different
 

00:18:30.860 --> 00:18:33.340
words that start and end on different
lines and one for diverge that start and

00:18:33.340 --> 00:18:33.350
lines and one for diverge that start and
 

00:18:33.350 --> 00:18:36.490
lines and one for diverge that start and
end on the same line we will loop over

00:18:36.490 --> 00:18:36.500
end on the same line we will loop over
 

00:18:36.500 --> 00:18:40.240
end on the same line we will loop over
our annotations to find our verge then

00:18:40.240 --> 00:18:40.250
our annotations to find our verge then
 

00:18:40.250 --> 00:18:42.700
our annotations to find our verge then
for each annotation using the start and

00:18:42.700 --> 00:18:42.710
for each annotation using the start and
 

00:18:42.710 --> 00:18:45.850
for each annotation using the start and
end indices we want to learn the line

00:18:45.850 --> 00:18:45.860
end indices we want to learn the line
 

00:18:45.860 --> 00:18:48.850
end indices we want to learn the line
number and we can use getline for offset

00:18:48.850 --> 00:18:48.860
number and we can use getline for offset
 

00:18:48.860 --> 00:18:50.590
number and we can use getline for offset
function of the layout which will

00:18:50.590 --> 00:18:50.600
function of the layout which will
 

00:18:50.600 --> 00:18:52.840
function of the layout which will
convert the character index into a line

00:18:52.840 --> 00:18:52.850
convert the character index into a line
 

00:18:52.850 --> 00:18:56.980
convert the character index into a line
number for the words that start and end

00:18:56.980 --> 00:18:56.990
number for the words that start and end
 

00:18:56.990 --> 00:18:58.960
number for the words that start and end
on the same line we also want to learn

00:18:58.960 --> 00:18:58.970
on the same line we also want to learn
 

00:18:58.970 --> 00:19:00.880
on the same line we also want to learn
about the vertical coordinates of the

00:19:00.880 --> 00:19:00.890
about the vertical coordinates of the
 

00:19:00.890 --> 00:19:02.980
about the vertical coordinates of the
line we can use get lined up and get

00:19:02.980 --> 00:19:02.990
line we can use get lined up and get
 

00:19:02.990 --> 00:19:05.490
line we can use get lined up and get
line bottom functions for this and

00:19:05.490 --> 00:19:05.500
line bottom functions for this and
 

00:19:05.500 --> 00:19:07.990
line bottom functions for this and
finally we want to learn about the

00:19:07.990 --> 00:19:08.000
finally we want to learn about the
 

00:19:08.000 --> 00:19:09.730
finally we want to learn about the
horizontal coordinates of the words and

00:19:09.730 --> 00:19:09.740
horizontal coordinates of the words and
 

00:19:09.740 --> 00:19:12.400
horizontal coordinates of the words and
get primary horizontal function will

00:19:12.400 --> 00:19:12.410
get primary horizontal function will
 

00:19:12.410 --> 00:19:14.350
get primary horizontal function will
convert the character index to a

00:19:14.350 --> 00:19:14.360
convert the character index to a
 

00:19:14.360 --> 00:19:16.659
convert the character index to a
horizontal coordinate relative to the

00:19:16.659 --> 00:19:16.669
horizontal coordinate relative to the
 

00:19:16.669 --> 00:19:19.150
horizontal coordinate relative to the
layout boundaries now that we know the

00:19:19.150 --> 00:19:19.160
layout boundaries now that we know the
 

00:19:19.160 --> 00:19:21.370
layout boundaries now that we know the
rectangle that we want to draw in we can

00:19:21.370 --> 00:19:21.380
rectangle that we want to draw in we can
 

00:19:21.380 --> 00:19:24.340
rectangle that we want to draw in we can
reward robell the other case where words

00:19:24.340 --> 00:19:24.350
reward robell the other case where words
 

00:19:24.350 --> 00:19:26.440
reward robell the other case where words
start and end on the different line will

00:19:26.440 --> 00:19:26.450
start and end on the different line will
 

00:19:26.450 --> 00:19:29.110
start and end on the different line will
have almost exactly the same code except

00:19:29.110 --> 00:19:29.120
have almost exactly the same code except
 

00:19:29.120 --> 00:19:31.270
have almost exactly the same code except
now it has to identify more rectangles

00:19:31.270 --> 00:19:31.280
now it has to identify more rectangles
 

00:19:31.280 --> 00:19:35.980
now it has to identify more rectangles
to draw in textview goes through the

00:19:35.980 --> 00:19:35.990
to draw in textview goes through the
 

00:19:35.990 --> 00:19:37.600
to draw in textview goes through the
same three phases that any of you on

00:19:37.600 --> 00:19:37.610
same three phases that any of you on
 

00:19:37.610 --> 00:19:39.789
same three phases that any of you on
android goes measure layout and draw

00:19:39.789 --> 00:19:39.799
android goes measure layout and draw
 

00:19:39.799 --> 00:19:42.640
android goes measure layout and draw
measure is by far the most expensive for

00:19:42.640 --> 00:19:42.650
measure is by far the most expensive for
 

00:19:42.650 --> 00:19:44.380
measure is by far the most expensive for
textview here is where we create the

00:19:44.380 --> 00:19:44.390
textview here is where we create the
 

00:19:44.390 --> 00:19:46.090
textview here is where we create the
layouts we just talked about or recreate

00:19:46.090 --> 00:19:46.100
layouts we just talked about or recreate
 

00:19:46.100 --> 00:19:47.919
layouts we just talked about or recreate
them if we need to and where we decide

00:19:47.919 --> 00:19:47.929
them if we need to and where we decide
 

00:19:47.929 --> 00:19:49.630
them if we need to and where we decide
on the width and the height of the view

00:19:49.630 --> 00:19:49.640
on the width and the height of the view
 

00:19:49.640 --> 00:19:52.210
on the width and the height of the view
this is really expensive work later and

00:19:52.210 --> 00:19:52.220
this is really expensive work later and
 

00:19:52.220 --> 00:19:54.580
this is really expensive work later and
on layout we'd barely do anything to

00:19:54.580 --> 00:19:54.590
on layout we'd barely do anything to
 

00:19:54.590 --> 00:19:56.169
on layout we'd barely do anything to
some scrolling and auto sizing and

00:19:56.169 --> 00:19:56.179
some scrolling and auto sizing and
 

00:19:56.179 --> 00:19:58.299
some scrolling and auto sizing and
finally an on draw we issue the drawing

00:19:58.299 --> 00:19:58.309
finally an on draw we issue the drawing
 

00:19:58.309 --> 00:20:00.340
finally an on draw we issue the drawing
commands but measure is really really

00:20:00.340 --> 00:20:00.350
commands but measure is really really
 

00:20:00.350 --> 00:20:00.970
commands but measure is really really
expensive

00:20:00.970 --> 00:20:00.980
expensive
 

00:20:00.980 --> 00:20:02.169
expensive
and you need to be very aware of this

00:20:02.169 --> 00:20:02.179
and you need to be very aware of this
 

00:20:02.179 --> 00:20:04.690
and you need to be very aware of this
it's important to distinguish what

00:20:04.690 --> 00:20:04.700
it's important to distinguish what
 

00:20:04.700 --> 00:20:06.789
it's important to distinguish what
causes an unmeasured with what causes an

00:20:06.789 --> 00:20:06.799
causes an unmeasured with what causes an
 

00:20:06.799 --> 00:20:08.799
causes an unmeasured with what causes an
Andhra and Serena mentioned before

00:20:08.799 --> 00:20:08.809
Andhra and Serena mentioned before
 

00:20:08.809 --> 00:20:10.840
Andhra and Serena mentioned before
anything that causes the text to change

00:20:10.840 --> 00:20:10.850
anything that causes the text to change
 

00:20:10.850 --> 00:20:12.820
anything that causes the text to change
in size or how it needs to be laid out

00:20:12.820 --> 00:20:12.830
in size or how it needs to be laid out
 

00:20:12.830 --> 00:20:15.520
in size or how it needs to be laid out
such as the letter spacing the typeface

00:20:15.520 --> 00:20:15.530
such as the letter spacing the typeface
 

00:20:15.530 --> 00:20:17.409
such as the letter spacing the typeface
maybe the text size that will have to

00:20:17.409 --> 00:20:17.419
maybe the text size that will have to
 

00:20:17.419 --> 00:20:18.730
maybe the text size that will have to
trigger an on measures we need to

00:20:18.730 --> 00:20:18.740
trigger an on measures we need to
 

00:20:18.740 --> 00:20:21.010
trigger an on measures we need to
recalculate that layout whereas if you

00:20:21.010 --> 00:20:21.020
recalculate that layout whereas if you
 

00:20:21.020 --> 00:20:22.480
recalculate that layout whereas if you
change something that just changes the

00:20:22.480 --> 00:20:22.490
change something that just changes the
 

00:20:22.490 --> 00:20:24.610
change something that just changes the
appearance but not how we place the text

00:20:24.610 --> 00:20:24.620
appearance but not how we place the text
 

00:20:24.620 --> 00:20:26.650
appearance but not how we place the text
on the screen such as the text color

00:20:26.650 --> 00:20:26.660
on the screen such as the text color
 

00:20:26.660 --> 00:20:28.390
on the screen such as the text color
you're gonna paint it in that only needs

00:20:28.390 --> 00:20:28.400
you're gonna paint it in that only needs
 

00:20:28.400 --> 00:20:30.340
you're gonna paint it in that only needs
to trigger an on draw which is much much

00:20:30.340 --> 00:20:30.350
to trigger an on draw which is much much
 

00:20:30.350 --> 00:20:32.850
to trigger an on draw which is much much
cheaper than doing an on measure as well

00:20:32.850 --> 00:20:32.860
cheaper than doing an on measure as well
 

00:20:32.860 --> 00:20:34.720
cheaper than doing an on measure as well
let's look at these two phases

00:20:34.720 --> 00:20:34.730
let's look at these two phases
 

00:20:34.730 --> 00:20:37.810
let's look at these two phases
separately say we have a text be like

00:20:37.810 --> 00:20:37.820
separately say we have a text be like
 

00:20:37.820 --> 00:20:39.610
separately say we have a text be like
this I've set some text that has several

00:20:39.610 --> 00:20:39.620
this I've set some text that has several
 

00:20:39.620 --> 00:20:43.210
this I've set some text that has several
paragraphs and then I've used spans to

00:20:43.210 --> 00:20:43.220
paragraphs and then I've used spans to
 

00:20:43.220 --> 00:20:45.190
paragraphs and then I've used spans to
style some of the words in it I've

00:20:45.190 --> 00:20:45.200
style some of the words in it I've
 

00:20:45.200 --> 00:20:46.750
style some of the words in it I've
changed the text size I've changed the

00:20:46.750 --> 00:20:46.760
changed the text size I've changed the
 

00:20:46.760 --> 00:20:49.390
changed the text size I've changed the
colors well the first option to measure

00:20:49.390 --> 00:20:49.400
colors well the first option to measure
 

00:20:49.400 --> 00:20:51.370
colors well the first option to measure
your text is there's method in paint

00:20:51.370 --> 00:20:51.380
your text is there's method in paint
 

00:20:51.380 --> 00:20:53.950
your text is there's method in paint
called measure text a dead giveaway of

00:20:53.950 --> 00:20:53.960
called measure text a dead giveaway of
 

00:20:53.960 --> 00:20:55.990
called measure text a dead giveaway of
this method is it takes a string not a

00:20:55.990 --> 00:20:56.000
this method is it takes a string not a
 

00:20:56.000 --> 00:20:58.240
this method is it takes a string not a
span a ball so what this will do paint

00:20:58.240 --> 00:20:58.250
span a ball so what this will do paint
 

00:20:58.250 --> 00:21:00.280
span a ball so what this will do paint
just doesn't understand spans so it will

00:21:00.280 --> 00:21:00.290
just doesn't understand spans so it will
 

00:21:00.290 --> 00:21:02.140
just doesn't understand spans so it will
take the text you've given it it doesn't

00:21:02.140 --> 00:21:02.150
take the text you've given it it doesn't
 

00:21:02.150 --> 00:21:03.909
take the text you've given it it doesn't
understand line breaking either so it

00:21:03.909 --> 00:21:03.919
understand line breaking either so it
 

00:21:03.919 --> 00:21:05.590
understand line breaking either so it
will place all of the text is one very

00:21:05.590 --> 00:21:05.600
will place all of the text is one very
 

00:21:05.600 --> 00:21:08.020
will place all of the text is one very
long line ignore all of your spans and

00:21:08.020 --> 00:21:08.030
long line ignore all of your spans and
 

00:21:08.030 --> 00:21:11.740
long line ignore all of your spans and
give you the width of that text the next

00:21:11.740 --> 00:21:11.750
give you the width of that text the next
 

00:21:11.750 --> 00:21:13.750
give you the width of that text the next
option is to use get text bounds also

00:21:13.750 --> 00:21:13.760
option is to use get text bounds also
 

00:21:13.760 --> 00:21:15.280
option is to use get text bounds also
from paint again

00:21:15.280 --> 00:21:15.290
from paint again
 

00:21:15.290 --> 00:21:17.680
from paint again
dead giveaway it takes a string so it

00:21:17.680 --> 00:21:17.690
dead giveaway it takes a string so it
 

00:21:17.690 --> 00:21:18.970
dead giveaway it takes a string so it
will do exactly the same no line

00:21:18.970 --> 00:21:18.980
will do exactly the same no line
 

00:21:18.980 --> 00:21:21.159
will do exactly the same no line
breaking those fans it will place it all

00:21:21.159 --> 00:21:21.169
breaking those fans it will place it all
 

00:21:21.169 --> 00:21:22.360
breaking those fans it will place it all
together and it will give you the

00:21:22.360 --> 00:21:22.370
together and it will give you the
 

00:21:22.370 --> 00:21:24.430
together and it will give you the
bounding box of all of your glyphs which

00:21:24.430 --> 00:21:24.440
bounding box of all of your glyphs which
 

00:21:24.440 --> 00:21:26.890
bounding box of all of your glyphs which
is a width and a height it's important

00:21:26.890 --> 00:21:26.900
is a width and a height it's important
 

00:21:26.900 --> 00:21:28.299
is a width and a height it's important
to notice that these two methods return

00:21:28.299 --> 00:21:28.309
to notice that these two methods return
 

00:21:28.309 --> 00:21:31.150
to notice that these two methods return
slightly different values so text paint

00:21:31.150 --> 00:21:31.160
slightly different values so text paint
 

00:21:31.160 --> 00:21:33.039
slightly different values so text paint
measure text will return you the next

00:21:33.039 --> 00:21:33.049
measure text will return you the next
 

00:21:33.049 --> 00:21:36.039
measure text will return you the next
advance glyph this is where you will

00:21:36.039 --> 00:21:36.049
advance glyph this is where you will
 

00:21:36.049 --> 00:21:37.840
advance glyph this is where you will
position the next glyph if you were to

00:21:37.840 --> 00:21:37.850
position the next glyph if you were to
 

00:21:37.850 --> 00:21:40.090
position the next glyph if you were to
add another one whereas get text bounds

00:21:40.090 --> 00:21:40.100
add another one whereas get text bounds
 

00:21:40.100 --> 00:21:41.680
add another one whereas get text bounds
will give you the bounding box of the

00:21:41.680 --> 00:21:41.690
will give you the bounding box of the
 

00:21:41.690 --> 00:21:43.450
will give you the bounding box of the
glyphs you have and these two values

00:21:43.450 --> 00:21:43.460
glyphs you have and these two values
 

00:21:43.460 --> 00:21:45.220
glyphs you have and these two values
come from different parts of the font so

00:21:45.220 --> 00:21:45.230
come from different parts of the font so
 

00:21:45.230 --> 00:21:48.130
come from different parts of the font so
they may be very different if we want to

00:21:48.130 --> 00:21:48.140
they may be very different if we want to
 

00:21:48.140 --> 00:21:49.960
they may be very different if we want to
improve on this well we use layouts

00:21:49.960 --> 00:21:49.970
improve on this well we use layouts
 

00:21:49.970 --> 00:21:52.390
improve on this well we use layouts
layout has a static method called get

00:21:52.390 --> 00:21:52.400
layout has a static method called get
 

00:21:52.400 --> 00:21:54.580
layout has a static method called get
desired width what this does is it takes

00:21:54.580 --> 00:21:54.590
desired width what this does is it takes
 

00:21:54.590 --> 00:21:56.620
desired width what this does is it takes
a text you give it it places each

00:21:56.620 --> 00:21:56.630
a text you give it it places each
 

00:21:56.630 --> 00:21:59.409
a text you give it it places each
paragraph into one line and taking into

00:21:59.409 --> 00:21:59.419
paragraph into one line and taking into
 

00:21:59.419 --> 00:22:01.360
paragraph into one line and taking into
account all of the styling it measures

00:22:01.360 --> 00:22:01.370
account all of the styling it measures
 

00:22:01.370 --> 00:22:03.970
account all of the styling it measures
each of the lines and then it returns

00:22:03.970 --> 00:22:03.980
each of the lines and then it returns
 

00:22:03.980 --> 00:22:06.010
each of the lines and then it returns
the width of the longest line it has so

00:22:06.010 --> 00:22:06.020
the width of the longest line it has so
 

00:22:06.020 --> 00:22:06.880
the width of the longest line it has so
it will give you the width of the

00:22:06.880 --> 00:22:06.890
it will give you the width of the
 

00:22:06.890 --> 00:22:08.919
it will give you the width of the
longest paragraph you've given it this

00:22:08.919 --> 00:22:08.929
longest paragraph you've given it this
 

00:22:08.929 --> 00:22:10.539
longest paragraph you've given it this
is useful to know how much your text

00:22:10.539 --> 00:22:10.549
is useful to know how much your text
 

00:22:10.549 --> 00:22:14.019
is useful to know how much your text
wants to be before you can restrict it

00:22:14.019 --> 00:22:14.029
wants to be before you can restrict it
 

00:22:14.029 --> 00:22:15.909
wants to be before you can restrict it
if you know the width of your view well

00:22:15.909 --> 00:22:15.919
if you know the width of your view well
 

00:22:15.919 --> 00:22:17.919
if you know the width of your view well
then you actually create a layout object

00:22:17.919 --> 00:22:17.929
then you actually create a layout object
 

00:22:17.929 --> 00:22:19.479
then you actually create a layout object
in this case we've created a static

00:22:19.479 --> 00:22:19.489
in this case we've created a static
 

00:22:19.489 --> 00:22:21.789
in this case we've created a static
layout by having the constraint width

00:22:21.789 --> 00:22:21.799
layout by having the constraint width
 

00:22:21.799 --> 00:22:23.619
layout by having the constraint width
you want to fit it in layouts can

00:22:23.619 --> 00:22:23.629
you want to fit it in layouts can
 

00:22:23.629 --> 00:22:25.749
you want to fit it in layouts can
actually calculate how to reflow the

00:22:25.749 --> 00:22:25.759
actually calculate how to reflow the
 

00:22:25.759 --> 00:22:27.849
actually calculate how to reflow the
text and how to make it fit and give you

00:22:27.849 --> 00:22:27.859
text and how to make it fit and give you
 

00:22:27.859 --> 00:22:29.830
text and how to make it fit and give you
a height in return so by giving it a

00:22:29.830 --> 00:22:29.840
a height in return so by giving it a
 

00:22:29.840 --> 00:22:31.359
a height in return so by giving it a
width we can actually calculate the

00:22:31.359 --> 00:22:31.369
width we can actually calculate the
 

00:22:31.369 --> 00:22:33.580
width we can actually calculate the
height on top of that as you haven't

00:22:33.580 --> 00:22:33.590
height on top of that as you haven't
 

00:22:33.590 --> 00:22:34.930
height on top of that as you haven't
mentioned before you will get a lot more

00:22:34.930 --> 00:22:34.940
mentioned before you will get a lot more
 

00:22:34.940 --> 00:22:36.849
mentioned before you will get a lot more
information out of your layout object

00:22:36.849 --> 00:22:36.859
information out of your layout object
 

00:22:36.859 --> 00:22:38.529
information out of your layout object
for each line it will give you things

00:22:38.529 --> 00:22:38.539
for each line it will give you things
 

00:22:38.539 --> 00:22:40.299
for each line it will give you things
like the baseline the lines start the

00:22:40.299 --> 00:22:40.309
like the baseline the lines start the
 

00:22:40.309 --> 00:22:44.259
like the baseline the lines start the
line end and so on we've measured the

00:22:44.259 --> 00:22:44.269
line end and so on we've measured the
 

00:22:44.269 --> 00:22:46.209
line end and so on we've measured the
performance of all of these methods next

00:22:46.209 --> 00:22:46.219
performance of all of these methods next
 

00:22:46.219 --> 00:22:47.739
performance of all of these methods next
to each other measure text is the

00:22:47.739 --> 00:22:47.749
to each other measure text is the
 

00:22:47.749 --> 00:22:50.529
to each other measure text is the
cheapest so compared to measure text you

00:22:50.529 --> 00:22:50.539
cheapest so compared to measure text you
 

00:22:50.539 --> 00:22:52.389
cheapest so compared to measure text you
will see that layout get desired width

00:22:52.389 --> 00:22:52.399
will see that layout get desired width
 

00:22:52.399 --> 00:22:54.310
will see that layout get desired width
and paint get text bounds are quite

00:22:54.310 --> 00:22:54.320
and paint get text bounds are quite
 

00:22:54.320 --> 00:22:56.619
and paint get text bounds are quite
cheap to run they are similar but once

00:22:56.619 --> 00:22:56.629
cheap to run they are similar but once
 

00:22:56.629 --> 00:22:58.269
cheap to run they are similar but once
you get into creating a static layout or

00:22:58.269 --> 00:22:58.279
you get into creating a static layout or
 

00:22:58.279 --> 00:23:00.099
you get into creating a static layout or
once you exit X for you to measure text

00:23:00.099 --> 00:23:00.109
once you exit X for you to measure text
 

00:23:00.109 --> 00:23:02.739
once you exit X for you to measure text
that gets more and more expensive so now

00:23:02.739 --> 00:23:02.749
that gets more and more expensive so now
 

00:23:02.749 --> 00:23:04.239
that gets more and more expensive so now
that you know what each of these methods

00:23:04.239 --> 00:23:04.249
that you know what each of these methods
 

00:23:04.249 --> 00:23:06.009
that you know what each of these methods
do make sure you use the one that makes

00:23:06.009 --> 00:23:06.019
do make sure you use the one that makes
 

00:23:06.019 --> 00:23:09.700
do make sure you use the one that makes
sense for your use case similarly we've

00:23:09.700 --> 00:23:09.710
sense for your use case similarly we've
 

00:23:09.710 --> 00:23:11.229
sense for your use case similarly we've
talked before about the word measure

00:23:11.229 --> 00:23:11.239
talked before about the word measure
 

00:23:11.239 --> 00:23:13.269
talked before about the word measure
cache and how we measure words once and

00:23:13.269 --> 00:23:13.279
cache and how we measure words once and
 

00:23:13.279 --> 00:23:15.849
cache and how we measure words once and
we place them in a cache well for paint

00:23:15.849 --> 00:23:15.859
we place them in a cache well for paint
 

00:23:15.859 --> 00:23:17.859
we place them in a cache well for paint
when you call measure text on the same

00:23:17.859 --> 00:23:17.869
when you call measure text on the same
 

00:23:17.869 --> 00:23:19.810
when you call measure text on the same
word a second time turns out it only

00:23:19.810 --> 00:23:19.820
word a second time turns out it only
 

00:23:19.820 --> 00:23:21.489
word a second time turns out it only
costs us about three percent of the work

00:23:21.489 --> 00:23:21.499
costs us about three percent of the work
 

00:23:21.499 --> 00:23:23.169
costs us about three percent of the work
to return that value which is a huge

00:23:23.169 --> 00:23:23.179
to return that value which is a huge
 

00:23:23.179 --> 00:23:25.149
to return that value which is a huge
gain so once we have a hit in the cache

00:23:25.149 --> 00:23:25.159
gain so once we have a hit in the cache
 

00:23:25.159 --> 00:23:27.369
gain so once we have a hit in the cache
it's only three percent of the work if

00:23:27.369 --> 00:23:27.379
it's only three percent of the work if
 

00:23:27.379 --> 00:23:31.479
it's only three percent of the work if
we measure this in text view on measure

00:23:31.479 --> 00:23:31.489
we measure this in text view on measure
 

00:23:31.489 --> 00:23:33.879
we measure this in text view on measure
takes about 16 to 11 percent of the work

00:23:33.879 --> 00:23:33.889
takes about 16 to 11 percent of the work
 

00:23:33.889 --> 00:23:35.499
takes about 16 to 11 percent of the work
that it did the first time it sees a

00:23:35.499 --> 00:23:35.509
that it did the first time it sees a
 

00:23:35.509 --> 00:23:35.889
that it did the first time it sees a
word

00:23:35.889 --> 00:23:35.899
word
 

00:23:35.899 --> 00:23:38.259
word
so definitely using that cache is really

00:23:38.259 --> 00:23:38.269
so definitely using that cache is really
 

00:23:38.269 --> 00:23:41.589
so definitely using that cache is really
important for us so as I said several

00:23:41.589 --> 00:23:41.599
important for us so as I said several
 

00:23:41.599 --> 00:23:43.029
important for us so as I said several
times now measurement is really

00:23:43.029 --> 00:23:43.039
times now measurement is really
 

00:23:43.039 --> 00:23:45.159
times now measurement is really
expensive what can we do about it well

00:23:45.159 --> 00:23:45.169
expensive what can we do about it well
 

00:23:45.169 --> 00:23:46.570
expensive what can we do about it well
in P we've come up with a new feature

00:23:46.570 --> 00:23:46.580
in P we've come up with a new feature
 

00:23:46.580 --> 00:23:49.299
in P we've come up with a new feature
called pre measured text the idea behind

00:23:49.299 --> 00:23:49.309
called pre measured text the idea behind
 

00:23:49.309 --> 00:23:51.369
called pre measured text the idea behind
it is we know that in on measure we need

00:23:51.369 --> 00:23:51.379
it is we know that in on measure we need
 

00:23:51.379 --> 00:23:53.529
it is we know that in on measure we need
to take all of the glyphs find them in

00:23:53.529 --> 00:23:53.539
to take all of the glyphs find them in
 

00:23:53.539 --> 00:23:55.149
to take all of the glyphs find them in
the font place them next to each other

00:23:55.149 --> 00:23:55.159
the font place them next to each other
 

00:23:55.159 --> 00:23:56.739
the font place them next to each other
and measure all of these words that we

00:23:56.739 --> 00:23:56.749
and measure all of these words that we
 

00:23:56.749 --> 00:23:58.749
and measure all of these words that we
will place in the cache so what P

00:23:58.749 --> 00:23:58.759
will place in the cache so what P
 

00:23:58.759 --> 00:24:00.549
will place in the cache so what P
measure text does is it takes care of

00:24:00.549 --> 00:24:00.559
measure text does is it takes care of
 

00:24:00.559 --> 00:24:02.649
measure text does is it takes care of
this phase for you and you can run this

00:24:02.649 --> 00:24:02.659
this phase for you and you can run this
 

00:24:02.659 --> 00:24:05.169
this phase for you and you can run this
in any thread so that then once you have

00:24:05.169 --> 00:24:05.179
in any thread so that then once you have
 

00:24:05.179 --> 00:24:07.509
in any thread so that then once you have
that pre calculation sending it on the

00:24:07.509 --> 00:24:07.519
that pre calculation sending it on the
 

00:24:07.519 --> 00:24:09.579
that pre calculation sending it on the
textview only takes about 10% of the

00:24:09.579 --> 00:24:09.589
textview only takes about 10% of the
 

00:24:09.589 --> 00:24:11.229
textview only takes about 10% of the
work that you had to do initially which

00:24:11.229 --> 00:24:11.239
work that you had to do initially which
 

00:24:11.239 --> 00:24:13.749
work that you had to do initially which
is a huge gain the way this looks in

00:24:13.749 --> 00:24:13.759
is a huge gain the way this looks in
 

00:24:13.759 --> 00:24:15.940
is a huge gain the way this looks in
code is we first we need a bunch of

00:24:15.940 --> 00:24:15.950
code is we first we need a bunch of
 

00:24:15.950 --> 00:24:17.680
code is we first we need a bunch of
attributes to know how to measure the

00:24:17.680 --> 00:24:17.690
attributes to know how to measure the
 

00:24:17.690 --> 00:24:19.539
attributes to know how to measure the
text things like the font you're going

00:24:19.539 --> 00:24:19.549
text things like the font you're going
 

00:24:19.549 --> 00:24:21.669
text things like the font you're going
to use the text size we have a

00:24:21.669 --> 00:24:21.679
to use the text size we have a
 

00:24:21.679 --> 00:24:23.139
to use the text size we have a
convenience method in the text view that

00:24:23.139 --> 00:24:23.149
convenience method in the text view that
 

00:24:23.149 --> 00:24:25.029
convenience method in the text view that
will retrieve all of these for you it's

00:24:25.029 --> 00:24:25.039
will retrieve all of these for you it's
 

00:24:25.039 --> 00:24:27.009
will retrieve all of these for you it's
get text metrics params you can also

00:24:27.009 --> 00:24:27.019
get text metrics params you can also
 

00:24:27.019 --> 00:24:28.120
get text metrics params you can also
build this option

00:24:28.120 --> 00:24:28.130
build this option
 

00:24:28.130 --> 00:24:29.650
build this option
self if you don't have the text we were

00:24:29.650 --> 00:24:29.660
self if you don't have the text we were
 

00:24:29.660 --> 00:24:31.810
self if you don't have the text we were
gonna work with yet and then on a

00:24:31.810 --> 00:24:31.820
gonna work with yet and then on a
 

00:24:31.820 --> 00:24:34.300
gonna work with yet and then on a
background thread called precomputed

00:24:34.300 --> 00:24:34.310
background thread called precomputed
 

00:24:34.310 --> 00:24:36.820
background thread called precomputed
text create this triggers all of the

00:24:36.820 --> 00:24:36.830
text create this triggers all of the
 

00:24:36.830 --> 00:24:38.050
text create this triggers all of the
things we've been talking about it

00:24:38.050 --> 00:24:38.060
things we've been talking about it
 

00:24:38.060 --> 00:24:40.210
things we've been talking about it
measures each of the words it places

00:24:40.210 --> 00:24:40.220
measures each of the words it places
 

00:24:40.220 --> 00:24:42.070
measures each of the words it places
them in the cache and it stores all of

00:24:42.070 --> 00:24:42.080
them in the cache and it stores all of
 

00:24:42.080 --> 00:24:43.840
them in the cache and it stores all of
those values so this is also useful if

00:24:43.840 --> 00:24:43.850
those values so this is also useful if
 

00:24:43.850 --> 00:24:45.220
those values so this is also useful if
you're gonna measure more than 5,000

00:24:45.220 --> 00:24:45.230
you're gonna measure more than 5,000
 

00:24:45.230 --> 00:24:47.200
you're gonna measure more than 5,000
words as this actually stores all of the

00:24:47.200 --> 00:24:47.210
words as this actually stores all of the
 

00:24:47.210 --> 00:24:49.960
words as this actually stores all of the
values then once you have all of this

00:24:49.960 --> 00:24:49.970
values then once you have all of this
 

00:24:49.970 --> 00:24:52.060
values then once you have all of this
pre computed information you can go back

00:24:52.060 --> 00:24:52.070
pre computed information you can go back
 

00:24:52.070 --> 00:24:54.220
pre computed information you can go back
to the UI thread and set it on your text

00:24:54.220 --> 00:24:54.230
to the UI thread and set it on your text
 

00:24:54.230 --> 00:24:56.680
to the UI thread and set it on your text
view notice that all of this only makes

00:24:56.680 --> 00:24:56.690
view notice that all of this only makes
 

00:24:56.690 --> 00:24:58.300
view notice that all of this only makes
sense if you know your text beforehand

00:24:58.300 --> 00:24:58.310
sense if you know your text beforehand
 

00:24:58.310 --> 00:25:00.100
sense if you know your text beforehand
if you just know your text as you're

00:25:00.100 --> 00:25:00.110
if you just know your text as you're
 

00:25:00.110 --> 00:25:01.630
if you just know your text as you're
gonna render it do what we've always

00:25:01.630 --> 00:25:01.640
gonna render it do what we've always
 

00:25:01.640 --> 00:25:03.220
gonna render it do what we've always
done because you're gonna be blocking

00:25:03.220 --> 00:25:03.230
done because you're gonna be blocking
 

00:25:03.230 --> 00:25:05.230
done because you're gonna be blocking
the UI thread anyway but if you do know

00:25:05.230 --> 00:25:05.240
the UI thread anyway but if you do know
 

00:25:05.240 --> 00:25:06.850
the UI thread anyway but if you do know
your text beforehand say you're loading

00:25:06.850 --> 00:25:06.860
your text beforehand say you're loading
 

00:25:06.860 --> 00:25:08.410
your text beforehand say you're loading
it from the internet or you have an

00:25:08.410 --> 00:25:08.420
it from the internet or you have an
 

00:25:08.420 --> 00:25:10.900
it from the internet or you have an
infinite scroll you can run this pre

00:25:10.900 --> 00:25:10.910
infinite scroll you can run this pre
 

00:25:10.910 --> 00:25:12.520
infinite scroll you can run this pre
compute all of your text before it needs

00:25:12.520 --> 00:25:12.530
compute all of your text before it needs
 

00:25:12.530 --> 00:25:14.530
compute all of your text before it needs
to be shown on screen and the gain is

00:25:14.530 --> 00:25:14.540
to be shown on screen and the gain is
 

00:25:14.540 --> 00:25:16.510
to be shown on screen and the gain is
literally 90% of the work will be done

00:25:16.510 --> 00:25:16.520
literally 90% of the work will be done
 

00:25:16.520 --> 00:25:17.770
literally 90% of the work will be done
on the background thread which is

00:25:17.770 --> 00:25:17.780
on the background thread which is
 

00:25:17.780 --> 00:25:21.400
on the background thread which is
amazing mention in support library we do

00:25:21.400 --> 00:25:21.410
amazing mention in support library we do
 

00:25:21.410 --> 00:25:24.250
amazing mention in support library we do
have a solution for P we just run this

00:25:24.250 --> 00:25:24.260
have a solution for P we just run this
 

00:25:24.260 --> 00:25:27.790
have a solution for P we just run this
between L and P we can actually not do

00:25:27.790 --> 00:25:27.800
between L and P we can actually not do
 

00:25:27.800 --> 00:25:29.380
between L and P we can actually not do
exactly the competitions that we've done

00:25:29.380 --> 00:25:29.390
exactly the competitions that we've done
 

00:25:29.390 --> 00:25:32.020
exactly the competitions that we've done
but we can warm up that cache for you so

00:25:32.020 --> 00:25:32.030
but we can warm up that cache for you so
 

00:25:32.030 --> 00:25:34.360
but we can warm up that cache for you so
that's what we do and then before L

00:25:34.360 --> 00:25:34.370
that's what we do and then before L
 

00:25:34.370 --> 00:25:35.950
that's what we do and then before L
sadly we can't do anything so it's a no

00:25:35.950 --> 00:25:35.960
sadly we can't do anything so it's a no
 

00:25:35.960 --> 00:25:37.420
sadly we can't do anything so it's a no
op but we do have a solution in the

00:25:37.420 --> 00:25:37.430
op but we do have a solution in the
 

00:25:37.430 --> 00:25:40.420
op but we do have a solution in the
support libraries another common thing

00:25:40.420 --> 00:25:40.430
support libraries another common thing
 

00:25:40.430 --> 00:25:42.430
support libraries another common thing
we see related to all of this is very

00:25:42.430 --> 00:25:42.440
we see related to all of this is very
 

00:25:42.440 --> 00:25:44.560
we see related to all of this is very
long text people tend to just say oh

00:25:44.560 --> 00:25:44.570
long text people tend to just say oh
 

00:25:44.570 --> 00:25:46.300
long text people tend to just say oh
I've got the text I'll just set it all

00:25:46.300 --> 00:25:46.310
I've got the text I'll just set it all
 

00:25:46.310 --> 00:25:48.910
I've got the text I'll just set it all
on the text view when you set text on

00:25:48.910 --> 00:25:48.920
on the text view when you set text on
 

00:25:48.920 --> 00:25:51.010
on the text view when you set text on
text view in layouts and well it

00:25:51.010 --> 00:25:51.020
text view in layouts and well it
 

00:25:51.020 --> 00:25:52.660
text view in layouts and well it
measures all of the words and lays out

00:25:52.660 --> 00:25:52.670
measures all of the words and lays out
 

00:25:52.670 --> 00:25:55.300
measures all of the words and lays out
the entire text you've given it even if

00:25:55.300 --> 00:25:55.310
the entire text you've given it even if
 

00:25:55.310 --> 00:25:57.460
the entire text you've given it even if
you've given us like an entire book so

00:25:57.460 --> 00:25:57.470
you've given us like an entire book so
 

00:25:57.470 --> 00:25:59.140
you've given us like an entire book so
this can be a huge performance hit if

00:25:59.140 --> 00:25:59.150
this can be a huge performance hit if
 

00:25:59.150 --> 00:26:00.850
this can be a huge performance hit if
you're sitting very long text but then

00:26:00.850 --> 00:26:00.860
you're sitting very long text but then
 

00:26:00.860 --> 00:26:02.530
you're sitting very long text but then
you're not actually showing on screen

00:26:02.530 --> 00:26:02.540
you're not actually showing on screen
 

00:26:02.540 --> 00:26:04.320
you're not actually showing on screen
because maybe the user never Scrolls a

00:26:04.320 --> 00:26:04.330
because maybe the user never Scrolls a
 

00:26:04.330 --> 00:26:07.180
because maybe the user never Scrolls a
solution to this is to split your text

00:26:07.180 --> 00:26:07.190
solution to this is to split your text
 

00:26:07.190 --> 00:26:09.190
solution to this is to split your text
into separate pieces say for example

00:26:09.190 --> 00:26:09.200
into separate pieces say for example
 

00:26:09.200 --> 00:26:11.110
into separate pieces say for example
paragraphs and put them all into a

00:26:11.110 --> 00:26:11.120
paragraphs and put them all into a
 

00:26:11.120 --> 00:26:13.240
paragraphs and put them all into a
recycler view as different items then

00:26:13.240 --> 00:26:13.250
recycler view as different items then
 

00:26:13.250 --> 00:26:15.340
recycler view as different items then
this way while the user Scrolls we will

00:26:15.340 --> 00:26:15.350
this way while the user Scrolls we will
 

00:26:15.350 --> 00:26:17.140
this way while the user Scrolls we will
start loading the next bits but we won't

00:26:17.140 --> 00:26:17.150
start loading the next bits but we won't
 

00:26:17.150 --> 00:26:18.610
start loading the next bits but we won't
actually be triggering and measuring a

00:26:18.610 --> 00:26:18.620
actually be triggering and measuring a
 

00:26:18.620 --> 00:26:21.070
actually be triggering and measuring a
layout of all of your text you can also

00:26:21.070 --> 00:26:21.080
layout of all of your text you can also
 

00:26:21.080 --> 00:26:23.110
layout of all of your text you can also
link this to premature text which I just

00:26:23.110 --> 00:26:23.120
link this to premature text which I just
 

00:26:23.120 --> 00:26:24.940
link this to premature text which I just
talked about and pre measure all of the

00:26:24.940 --> 00:26:24.950
talked about and pre measure all of the
 

00:26:24.950 --> 00:26:26.920
talked about and pre measure all of the
background measurement then you will

00:26:26.920 --> 00:26:26.930
background measurement then you will
 

00:26:26.930 --> 00:26:28.690
background measurement then you will
have all that information really really

00:26:28.690 --> 00:26:28.700
have all that information really really
 

00:26:28.700 --> 00:26:31.870
have all that information really really
efficiently so we've talked about

00:26:31.870 --> 00:26:31.880
efficiently so we've talked about
 

00:26:31.880 --> 00:26:34.210
efficiently so we've talked about
measure what about draw draw is much

00:26:34.210 --> 00:26:34.220
measure what about draw draw is much
 

00:26:34.220 --> 00:26:35.320
measure what about draw draw is much
cheaper but you also have several

00:26:35.320 --> 00:26:35.330
cheaper but you also have several
 

00:26:35.330 --> 00:26:37.560
cheaper but you also have several
options if you're gonna draw yourself

00:26:37.560 --> 00:26:37.570
options if you're gonna draw yourself
 

00:26:37.570 --> 00:26:39.940
options if you're gonna draw yourself
easy one that people tend to say oh why

00:26:39.940 --> 00:26:39.950
easy one that people tend to say oh why
 

00:26:39.950 --> 00:26:41.190
easy one that people tend to say oh why
don't you just canvas

00:26:41.190 --> 00:26:41.200
don't you just canvas
 

00:26:41.200 --> 00:26:43.320
don't you just canvas
draw text that's easy right turns out

00:26:43.320 --> 00:26:43.330
draw text that's easy right turns out
 

00:26:43.330 --> 00:26:45.659
draw text that's easy right turns out
canvas does not understand spans or line

00:26:45.659 --> 00:26:45.669
canvas does not understand spans or line
 

00:26:45.669 --> 00:26:47.009
canvas does not understand spans or line
breaking or any of the things we've been

00:26:47.009 --> 00:26:47.019
breaking or any of the things we've been
 

00:26:47.019 --> 00:26:49.560
breaking or any of the things we've been
talking about so similar to the things

00:26:49.560 --> 00:26:49.570
talking about so similar to the things
 

00:26:49.570 --> 00:26:51.269
talking about so similar to the things
we're talking about before it will just

00:26:51.269 --> 00:26:51.279
we're talking about before it will just
 

00:26:51.279 --> 00:26:53.129
we're talking about before it will just
draw the text you give it with no

00:26:53.129 --> 00:26:53.139
draw the text you give it with no
 

00:26:53.139 --> 00:26:56.100
draw the text you give it with no
styling as one run instead if you have

00:26:56.100 --> 00:26:56.110
styling as one run instead if you have
 

00:26:56.110 --> 00:26:57.360
styling as one run instead if you have
styling or if you want to use line

00:26:57.360 --> 00:26:57.370
styling or if you want to use line
 

00:26:57.370 --> 00:26:59.220
styling or if you want to use line
breaking again use the layout classes

00:26:59.220 --> 00:26:59.230
breaking again use the layout classes
 

00:26:59.230 --> 00:27:02.039
breaking again use the layout classes
you can see the recurring theme all of

00:27:02.039 --> 00:27:02.049
you can see the recurring theme all of
 

00:27:02.049 --> 00:27:03.419
you can see the recurring theme all of
the layout classes have a draw method

00:27:03.419 --> 00:27:03.429
the layout classes have a draw method
 

00:27:03.429 --> 00:27:04.889
the layout classes have a draw method
that will actually draw on the campus

00:27:04.889 --> 00:27:04.899
that will actually draw on the campus
 

00:27:04.899 --> 00:27:07.289
that will actually draw on the campus
for you okay I think it's time we

00:27:07.289 --> 00:27:07.299
for you okay I think it's time we
 

00:27:07.299 --> 00:27:09.600
for you okay I think it's time we
actually said the text but in a

00:27:09.600 --> 00:27:09.610
actually said the text but in a
 

00:27:09.610 --> 00:27:12.870
actually said the text but in a
performant way so set text I think is

00:27:12.870 --> 00:27:12.880
performant way so set text I think is
 

00:27:12.880 --> 00:27:15.090
performant way so set text I think is
the most commonly used method and it's

00:27:15.090 --> 00:27:15.100
the most commonly used method and it's
 

00:27:15.100 --> 00:27:17.159
the most commonly used method and it's
great for text views that don't change

00:27:17.159 --> 00:27:17.169
great for text views that don't change
 

00:27:17.169 --> 00:27:19.710
great for text views that don't change
so when both the text and the markup

00:27:19.710 --> 00:27:19.720
so when both the text and the markup
 

00:27:19.720 --> 00:27:22.980
so when both the text and the markup
attached to it are immutable so under

00:27:22.980 --> 00:27:22.990
attached to it are immutable so under
 

00:27:22.990 --> 00:27:25.110
attached to it are immutable so under
the hood the text we create a defensive

00:27:25.110 --> 00:27:25.120
the hood the text we create a defensive
 

00:27:25.120 --> 00:27:28.019
the hood the text we create a defensive
copy as a span string so this means that

00:27:28.019 --> 00:27:28.029
copy as a span string so this means that
 

00:27:28.029 --> 00:27:29.370
copy as a span string so this means that
if you're changing the original

00:27:29.370 --> 00:27:29.380
if you're changing the original
 

00:27:29.380 --> 00:27:32.120
if you're changing the original
reference the textview doesn't update

00:27:32.120 --> 00:27:32.130
reference the textview doesn't update
 

00:27:32.130 --> 00:27:35.549
reference the textview doesn't update
but what if we want to mutate the spans

00:27:35.549 --> 00:27:35.559
but what if we want to mutate the spans
 

00:27:35.559 --> 00:27:38.159
but what if we want to mutate the spans
later or to do this we would set the

00:27:38.159 --> 00:27:38.169
later or to do this we would set the
 

00:27:38.169 --> 00:27:41.190
later or to do this we would set the
text using buffer types pineapple so

00:27:41.190 --> 00:27:41.200
text using buffer types pineapple so
 

00:27:41.200 --> 00:27:43.169
text using buffer types pineapple so
under the hood the text we will create a

00:27:43.169 --> 00:27:43.179
under the hood the text we will create a
 

00:27:43.179 --> 00:27:45.930
under the hood the text we will create a
copy of it but as a parable so this

00:27:45.930 --> 00:27:45.940
copy of it but as a parable so this
 

00:27:45.940 --> 00:27:47.970
copy of it but as a parable so this
means that while the text is immutable

00:27:47.970 --> 00:27:47.980
means that while the text is immutable
 

00:27:47.980 --> 00:27:53.370
means that while the text is immutable
the spans are mutable so then once what

00:27:53.370 --> 00:27:53.380
the spans are mutable so then once what
 

00:27:53.380 --> 00:27:55.529
the spans are mutable so then once what
we can do here is we can get the text as

00:27:55.529 --> 00:27:55.539
we can do here is we can get the text as
 

00:27:55.539 --> 00:27:58.169
we can do here is we can get the text as
a span of all and then we can add or

00:27:58.169 --> 00:27:58.179
a span of all and then we can add or
 

00:27:58.179 --> 00:28:00.810
a span of all and then we can add or
remove spans to it and I know that

00:28:00.810 --> 00:28:00.820
remove spans to it and I know that
 

00:28:00.820 --> 00:28:02.460
remove spans to it and I know that
you'll be tempted to call that a set

00:28:02.460 --> 00:28:02.470
you'll be tempted to call that a set
 

00:28:02.470 --> 00:28:04.470
you'll be tempted to call that a set
text again but you don't need to do this

00:28:04.470 --> 00:28:04.480
text again but you don't need to do this
 

00:28:04.480 --> 00:28:07.049
text again but you don't need to do this
anymore because text view has an own

00:28:07.049 --> 00:28:07.059
anymore because text view has an own
 

00:28:07.059 --> 00:28:08.639
anymore because text view has an own
span change listener and it

00:28:08.639 --> 00:28:08.649
span change listener and it
 

00:28:08.649 --> 00:28:10.769
span change listener and it
automatically knows when something was

00:28:10.769 --> 00:28:10.779
automatically knows when something was
 

00:28:10.779 --> 00:28:12.840
automatically knows when something was
added or removed and the text will just

00:28:12.840 --> 00:28:12.850
added or removed and the text will just
 

00:28:12.850 --> 00:28:16.019
added or removed and the text will just
be displayed but what if you want to

00:28:16.019 --> 00:28:16.029
be displayed but what if you want to
 

00:28:16.029 --> 00:28:18.149
be displayed but what if you want to
change an internal property of the span

00:28:18.149 --> 00:28:18.159
change an internal property of the span
 

00:28:18.159 --> 00:28:20.870
change an internal property of the span
so in our case we want to change that

00:28:20.870 --> 00:28:20.880
so in our case we want to change that
 

00:28:20.880 --> 00:28:23.250
so in our case we want to change that
typeface in our custom typefaces fine

00:28:23.250 --> 00:28:23.260
typeface in our custom typefaces fine
 

00:28:23.260 --> 00:28:25.710
typeface in our custom typefaces fine
well in this case the textview doesn't

00:28:25.710 --> 00:28:25.720
well in this case the textview doesn't
 

00:28:25.720 --> 00:28:27.810
well in this case the textview doesn't
know what's changed and it doesn't know

00:28:27.810 --> 00:28:27.820
know what's changed and it doesn't know
 

00:28:27.820 --> 00:28:30.720
know what's changed and it doesn't know
that it needs to do something so we need

00:28:30.720 --> 00:28:30.730
that it needs to do something so we need
 

00:28:30.730 --> 00:28:32.820
that it needs to do something so we need
to tell it and we will do this with

00:28:32.820 --> 00:28:32.830
to tell it and we will do this with
 

00:28:32.830 --> 00:28:35.460
to tell it and we will do this with
either request layout or invalidate

00:28:35.460 --> 00:28:35.470
either request layout or invalidate
 

00:28:35.470 --> 00:28:37.860
either request layout or invalidate
depending on what kind of attribute has

00:28:37.860 --> 00:28:37.870
depending on what kind of attribute has
 

00:28:37.870 --> 00:28:40.620
depending on what kind of attribute has
changed so if you change the measure

00:28:40.620 --> 00:28:40.630
changed so if you change the measure
 

00:28:40.630 --> 00:28:42.779
changed so if you change the measure
affecting attribute and the textview

00:28:42.779 --> 00:28:42.789
affecting attribute and the textview
 

00:28:42.789 --> 00:28:44.909
affecting attribute and the textview
needs to remeasure and then redraw you

00:28:44.909 --> 00:28:44.919
needs to remeasure and then redraw you
 

00:28:44.919 --> 00:28:47.129
needs to remeasure and then redraw you
would call request layout but if you

00:28:47.129 --> 00:28:47.139
would call request layout but if you
 

00:28:47.139 --> 00:28:48.960
would call request layout but if you
just changed an appearance affecting

00:28:48.960 --> 00:28:48.970
just changed an appearance affecting
 

00:28:48.970 --> 00:28:50.460
just changed an appearance affecting
attribute then you just need to

00:28:50.460 --> 00:28:50.470
attribute then you just need to
 

00:28:50.470 --> 00:28:54.290
attribute then you just need to
invalidate and call redraw

00:28:54.290 --> 00:28:54.300
invalidate and call redraw
 

00:28:54.300 --> 00:28:56.480
invalidate and call redraw
what if you also want to mutate the text

00:28:56.480 --> 00:28:56.490
what if you also want to mutate the text
 

00:28:56.490 --> 00:28:58.910
what if you also want to mutate the text
so if we look at the code we see that

00:28:58.910 --> 00:28:58.920
so if we look at the code we see that
 

00:28:58.920 --> 00:29:01.130
so if we look at the code we see that
under the hood the text we craz a copy

00:29:01.130 --> 00:29:01.140
under the hood the text we craz a copy
 

00:29:01.140 --> 00:29:04.250
under the hood the text we craz a copy
using a span of olfactory so it has a

00:29:04.250 --> 00:29:04.260
using a span of olfactory so it has a
 

00:29:04.260 --> 00:29:05.870
using a span of olfactory so it has a
default span of all factory

00:29:05.870 --> 00:29:05.880
default span of all factory
 

00:29:05.880 --> 00:29:08.270
default span of all factory
implementation but we can implement our

00:29:08.270 --> 00:29:08.280
implementation but we can implement our
 

00:29:08.280 --> 00:29:10.970
implementation but we can implement our
own and then instead of creating a copy

00:29:10.970 --> 00:29:10.980
own and then instead of creating a copy
 

00:29:10.980 --> 00:29:13.400
own and then instead of creating a copy
of it we will just return the same

00:29:13.400 --> 00:29:13.410
of it we will just return the same
 

00:29:13.410 --> 00:29:15.410
of it we will just return the same
reference to the object in case the

00:29:15.410 --> 00:29:15.420
reference to the object in case the
 

00:29:15.420 --> 00:29:18.200
reference to the object in case the
object is expandable and then we just

00:29:18.200 --> 00:29:18.210
object is expandable and then we just
 

00:29:18.210 --> 00:29:19.760
object is expandable and then we just
said that span of a factory to the

00:29:19.760 --> 00:29:19.770
said that span of a factory to the
 

00:29:19.770 --> 00:29:23.450
said that span of a factory to the
textview so this is specifically

00:29:23.450 --> 00:29:23.460
textview so this is specifically
 

00:29:23.460 --> 00:29:25.880
textview so this is specifically
important if you're using style text

00:29:25.880 --> 00:29:25.890
important if you're using style text
 

00:29:25.890 --> 00:29:28.640
important if you're using style text
inside a recycler view because like this

00:29:28.640 --> 00:29:28.650
inside a recycler view because like this
 

00:29:28.650 --> 00:29:30.530
inside a recycler view because like this
you avoid creating copies inside the

00:29:30.530 --> 00:29:30.540
you avoid creating copies inside the
 

00:29:30.540 --> 00:29:33.080
you avoid creating copies inside the
recycler view saving both CPU time and

00:29:33.080 --> 00:29:33.090
recycler view saving both CPU time and
 

00:29:33.090 --> 00:29:36.560
recycler view saving both CPU time and
memory location so in the recycle view

00:29:36.560 --> 00:29:36.570
memory location so in the recycle view
 

00:29:36.570 --> 00:29:38.720
memory location so in the recycle view
this is how you would use it in the view

00:29:38.720 --> 00:29:38.730
this is how you would use it in the view
 

00:29:38.730 --> 00:29:40.280
this is how you would use it in the view
holder you would set the span of a

00:29:40.280 --> 00:29:40.290
holder you would set the span of a
 

00:29:40.290 --> 00:29:42.799
holder you would set the span of a
factory you've just created and then in

00:29:42.799 --> 00:29:42.809
factory you've just created and then in
 

00:29:42.809 --> 00:29:44.840
factory you've just created and then in
the own bind view holder make sure

00:29:44.840 --> 00:29:44.850
the own bind view holder make sure
 

00:29:44.850 --> 00:29:46.700
the own bind view holder make sure
you're also setting the buffer type as

00:29:46.700 --> 00:29:46.710
you're also setting the buffer type as
 

00:29:46.710 --> 00:29:49.720
you're also setting the buffer type as
spendable when you're setting the text

00:29:49.720 --> 00:29:49.730
spendable when you're setting the text
 

00:29:49.730 --> 00:29:52.220
spendable when you're setting the text
another common thing we see related to

00:29:52.220 --> 00:29:52.230
another common thing we see related to
 

00:29:52.230 --> 00:29:55.310
another common thing we see related to
recyclerview is the use of auto link you

00:29:55.310 --> 00:29:55.320
recyclerview is the use of auto link you
 

00:29:55.320 --> 00:29:56.660
recyclerview is the use of auto link you
might be familiar with like taking a

00:29:56.660 --> 00:29:56.670
might be familiar with like taking a
 

00:29:56.670 --> 00:29:58.220
might be familiar with like taking a
textview and just sitting out a link to

00:29:58.220 --> 00:29:58.230
textview and just sitting out a link to
 

00:29:58.230 --> 00:30:00.530
textview and just sitting out a link to
say web to be able to detect URLs within

00:30:00.530 --> 00:30:00.540
say web to be able to detect URLs within
 

00:30:00.540 --> 00:30:02.299
say web to be able to detect URLs within
your text and have them automatically

00:30:02.299 --> 00:30:02.309
your text and have them automatically
 

00:30:02.309 --> 00:30:04.130
your text and have them automatically
linked well what happens under the hood

00:30:04.130 --> 00:30:04.140
linked well what happens under the hood
 

00:30:04.140 --> 00:30:05.900
linked well what happens under the hood
when you do this turns out that when you

00:30:05.900 --> 00:30:05.910
when you do this turns out that when you
 

00:30:05.910 --> 00:30:08.270
when you do this turns out that when you
set a text on that textview first of all

00:30:08.270 --> 00:30:08.280
set a text on that textview first of all
 

00:30:08.280 --> 00:30:10.070
set a text on that textview first of all
we will create a copy just like Florina

00:30:10.070 --> 00:30:10.080
we will create a copy just like Florina
 

00:30:10.080 --> 00:30:12.049
we will create a copy just like Florina
said and then we run a matcher for a

00:30:12.049 --> 00:30:12.059
said and then we run a matcher for a
 

00:30:12.059 --> 00:30:14.330
said and then we run a matcher for a
regular expression on your text and for

00:30:14.330 --> 00:30:14.340
regular expression on your text and for
 

00:30:14.340 --> 00:30:16.340
regular expression on your text and for
each match where we find a URL we will

00:30:16.340 --> 00:30:16.350
each match where we find a URL we will
 

00:30:16.350 --> 00:30:18.380
each match where we find a URL we will
create a URL span and add that to your

00:30:18.380 --> 00:30:18.390
create a URL span and add that to your
 

00:30:18.390 --> 00:30:21.169
create a URL span and add that to your
text if you do this inside on bind

00:30:21.169 --> 00:30:21.179
text if you do this inside on bind
 

00:30:21.179 --> 00:30:21.799
text if you do this inside on bind
viewholder

00:30:21.799 --> 00:30:21.809
viewholder
 

00:30:21.809 --> 00:30:23.360
viewholder
you're creating copies and you're

00:30:23.360 --> 00:30:23.370
you're creating copies and you're
 

00:30:23.370 --> 00:30:24.950
you're creating copies and you're
running that regular expression every

00:30:24.950 --> 00:30:24.960
running that regular expression every
 

00:30:24.960 --> 00:30:27.020
running that regular expression every
time you're setting text even if you're

00:30:27.020 --> 00:30:27.030
time you're setting text even if you're
 

00:30:27.030 --> 00:30:29.030
time you're setting text even if you're
showing the same text in each item so

00:30:29.030 --> 00:30:29.040
showing the same text in each item so
 

00:30:29.040 --> 00:30:30.410
showing the same text in each item so
you have a little footer with a link

00:30:30.410 --> 00:30:30.420
you have a little footer with a link
 

00:30:30.420 --> 00:30:32.299
you have a little footer with a link
you're gonna be recalculating that for

00:30:32.299 --> 00:30:32.309
you're gonna be recalculating that for
 

00:30:32.309 --> 00:30:34.790
you're gonna be recalculating that for
each and every item so the solution to

00:30:34.790 --> 00:30:34.800
each and every item so the solution to
 

00:30:34.800 --> 00:30:36.830
each and every item so the solution to
this is one don't use auto link in your

00:30:36.830 --> 00:30:36.840
this is one don't use auto link in your
 

00:30:36.840 --> 00:30:38.750
this is one don't use auto link in your
XML because that automatically triggers

00:30:38.750 --> 00:30:38.760
XML because that automatically triggers
 

00:30:38.760 --> 00:30:42.020
XML because that automatically triggers
all of the process instead first of all

00:30:42.020 --> 00:30:42.030
all of the process instead first of all
 

00:30:42.030 --> 00:30:43.820
all of the process instead first of all
create a span of a copy of your strength

00:30:43.820 --> 00:30:43.830
create a span of a copy of your strength
 

00:30:43.830 --> 00:30:46.040
create a span of a copy of your strength
and run either link a fire link if I

00:30:46.040 --> 00:30:46.050
and run either link a fire link if I
 

00:30:46.050 --> 00:30:47.720
and run either link a fire link if I
compat to be able to find all those

00:30:47.720 --> 00:30:47.730
compat to be able to find all those
 

00:30:47.730 --> 00:30:49.549
compat to be able to find all those
links beforehand so you pre calculate

00:30:49.549 --> 00:30:49.559
links beforehand so you pre calculate
 

00:30:49.559 --> 00:30:51.830
links beforehand so you pre calculate
all of it then in online view holder you

00:30:51.830 --> 00:30:51.840
all of it then in online view holder you
 

00:30:51.840 --> 00:30:53.660
all of it then in online view holder you
simply have to set the text and if you

00:30:53.660 --> 00:30:53.670
simply have to set the text and if you
 

00:30:53.670 --> 00:30:55.250
simply have to set the text and if you
use fluorine as trick of using buffer

00:30:55.250 --> 00:30:55.260
use fluorine as trick of using buffer
 

00:30:55.260 --> 00:30:57.350
use fluorine as trick of using buffer
types pineapple you will be available

00:30:57.350 --> 00:30:57.360
types pineapple you will be available
 

00:30:57.360 --> 00:30:59.750
types pineapple you will be available
all of those copies and avoiding all of

00:30:59.750 --> 00:30:59.760
all of those copies and avoiding all of
 

00:30:59.760 --> 00:31:01.600
all of those copies and avoiding all of
this extra computation

00:31:01.600 --> 00:31:01.610
this extra computation
 

00:31:01.610 --> 00:31:04.159
this extra computation
related to this in general we want to

00:31:04.159 --> 00:31:04.169
related to this in general we want to
 

00:31:04.169 --> 00:31:06.049
related to this in general we want to
discourage everyone from using auto link

00:31:06.049 --> 00:31:06.059
discourage everyone from using auto link
 

00:31:06.059 --> 00:31:06.749
discourage everyone from using auto link
map

00:31:06.749 --> 00:31:06.759
map
 

00:31:06.759 --> 00:31:09.060
map
all of the other options in Auto link

00:31:09.060 --> 00:31:09.070
all of the other options in Auto link
 

00:31:09.070 --> 00:31:11.699
all of the other options in Auto link
used regular expressions and are easy to

00:31:11.699 --> 00:31:11.709
used regular expressions and are easy to
 

00:31:11.709 --> 00:31:14.399
used regular expressions and are easy to
run however a map actually spins off an

00:31:14.399 --> 00:31:14.409
run however a map actually spins off an
 

00:31:14.409 --> 00:31:16.139
run however a map actually spins off an
instance of a webview to find addresses

00:31:16.139 --> 00:31:16.149
instance of a webview to find addresses
 

00:31:16.149 --> 00:31:18.180
instance of a webview to find addresses
which is a huge performance hit for your

00:31:18.180 --> 00:31:18.190
which is a huge performance hit for your
 

00:31:18.190 --> 00:31:20.219
which is a huge performance hit for your
app so we wanted to scourge everyone

00:31:20.219 --> 00:31:20.229
app so we wanted to scourge everyone
 

00:31:20.229 --> 00:31:22.680
app so we wanted to scourge everyone
from using map or all which includes map

00:31:22.680 --> 00:31:22.690
from using map or all which includes map
 

00:31:22.690 --> 00:31:24.930
from using map or all which includes map
and you might say well but I need this

00:31:24.930 --> 00:31:24.940
and you might say well but I need this
 

00:31:24.940 --> 00:31:26.719
and you might say well but I need this
and you're taking it away what do I do

00:31:26.719 --> 00:31:26.729
and you're taking it away what do I do
 

00:31:26.729 --> 00:31:29.339
and you're taking it away what do I do
coming to the rescue is smart link if I

00:31:29.339 --> 00:31:29.349
coming to the rescue is smart link if I
 

00:31:29.349 --> 00:31:31.409
coming to the rescue is smart link if I
you might remember last year we

00:31:31.409 --> 00:31:31.419
you might remember last year we
 

00:31:31.419 --> 00:31:33.869
you might remember last year we
presented smart selection in o where we

00:31:33.869 --> 00:31:33.879
presented smart selection in o where we
 

00:31:33.879 --> 00:31:35.729
presented smart selection in o where we
use machine learning to detect entities

00:31:35.729 --> 00:31:35.739
use machine learning to detect entities
 

00:31:35.739 --> 00:31:37.829
use machine learning to detect entities
when you were trying to select text well

00:31:37.829 --> 00:31:37.839
when you were trying to select text well
 

00:31:37.839 --> 00:31:39.389
when you were trying to select text well
this year we've taken those missing

00:31:39.389 --> 00:31:39.399
this year we've taken those missing
 

00:31:39.399 --> 00:31:41.189
this year we've taken those missing
machine learning models that detect

00:31:41.189 --> 00:31:41.199
machine learning models that detect
 

00:31:41.199 --> 00:31:43.109
machine learning models that detect
entities and apply them to link if I

00:31:43.109 --> 00:31:43.119
entities and apply them to link if I
 

00:31:43.119 --> 00:31:45.269
entities and apply them to link if I
this way we can do a much better

00:31:45.269 --> 00:31:45.279
this way we can do a much better
 

00:31:45.279 --> 00:31:46.799
this way we can do a much better
accuracy at detecting all of the

00:31:46.799 --> 00:31:46.809
accuracy at detecting all of the
 

00:31:46.809 --> 00:31:48.989
accuracy at detecting all of the
entities and we can detect new types so

00:31:48.989 --> 00:31:48.999
entities and we can detect new types so
 

00:31:48.999 --> 00:31:51.569
entities and we can detect new types so
on top of phone numbers URLs and

00:31:51.569 --> 00:31:51.579
on top of phone numbers URLs and
 

00:31:51.579 --> 00:31:53.609
on top of phone numbers URLs and
addresses like we're doing before we can

00:31:53.609 --> 00:31:53.619
addresses like we're doing before we can
 

00:31:53.619 --> 00:31:55.229
addresses like we're doing before we can
do more sophisticated things like flight

00:31:55.229 --> 00:31:55.239
do more sophisticated things like flight
 

00:31:55.239 --> 00:31:58.319
do more sophisticated things like flight
codes the way this works in code is you

00:31:58.319 --> 00:31:58.329
codes the way this works in code is you
 

00:31:58.329 --> 00:32:00.029
codes the way this works in code is you
create a text links request with your

00:32:00.029 --> 00:32:00.039
create a text links request with your
 

00:32:00.039 --> 00:32:01.949
create a text links request with your
text and it can also take some options

00:32:01.949 --> 00:32:01.959
text and it can also take some options
 

00:32:01.959 --> 00:32:04.439
text and it can also take some options
then on a background thread you call

00:32:04.439 --> 00:32:04.449
then on a background thread you call
 

00:32:04.449 --> 00:32:06.899
then on a background thread you call
text classifier not generate links it's

00:32:06.899 --> 00:32:06.909
text classifier not generate links it's
 

00:32:06.909 --> 00:32:08.129
text classifier not generate links it's
very important that you do this on a

00:32:08.129 --> 00:32:08.139
very important that you do this on a
 

00:32:08.139 --> 00:32:09.659
very important that you do this on a
background thread as this is loading a

00:32:09.659 --> 00:32:09.669
background thread as this is loading a
 

00:32:09.669 --> 00:32:11.249
background thread as this is loading a
machine learning model from disk so

00:32:11.249 --> 00:32:11.259
machine learning model from disk so
 

00:32:11.259 --> 00:32:12.689
machine learning model from disk so
please don't do this on the UI thread

00:32:12.689 --> 00:32:12.699
please don't do this on the UI thread
 

00:32:12.699 --> 00:32:15.180
please don't do this on the UI thread
once it comes back it has all of the

00:32:15.180 --> 00:32:15.190
once it comes back it has all of the
 

00:32:15.190 --> 00:32:17.459
once it comes back it has all of the
detected entities you can apply those

00:32:17.459 --> 00:32:17.469
detected entities you can apply those
 

00:32:17.469 --> 00:32:19.859
detected entities you can apply those
links to the text there's a change here

00:32:19.859 --> 00:32:19.869
links to the text there's a change here
 

00:32:19.869 --> 00:32:22.409
links to the text there's a change here
between the old link if I and this the

00:32:22.409 --> 00:32:22.419
between the old link if I and this the
 

00:32:22.419 --> 00:32:24.839
between the old link if I and this the
olenka file used to generate a URL span

00:32:24.839 --> 00:32:24.849
olenka file used to generate a URL span
 

00:32:24.849 --> 00:32:26.249
olenka file used to generate a URL span
that when you clicked it would just go

00:32:26.249 --> 00:32:26.259
that when you clicked it would just go
 

00:32:26.259 --> 00:32:28.199
that when you clicked it would just go
through the link and the case of smart

00:32:28.199 --> 00:32:28.209
through the link and the case of smart
 

00:32:28.209 --> 00:32:30.119
through the link and the case of smart
link if I the URL spends that are being

00:32:30.119 --> 00:32:30.129
link if I the URL spends that are being
 

00:32:30.129 --> 00:32:31.859
link if I the URL spends that are being
added pop up a floating toolbar with

00:32:31.859 --> 00:32:31.869
added pop up a floating toolbar with
 

00:32:31.869 --> 00:32:34.139
added pop up a floating toolbar with
smart actions that you can take so for

00:32:34.139 --> 00:32:34.149
smart actions that you can take so for
 

00:32:34.149 --> 00:32:35.609
smart actions that you can take so for
example for an address we might suggest

00:32:35.609 --> 00:32:35.619
example for an address we might suggest
 

00:32:35.619 --> 00:32:38.729
example for an address we might suggest
Maps finally when you have all of your

00:32:38.729 --> 00:32:38.739
Maps finally when you have all of your
 

00:32:38.739 --> 00:32:40.680
Maps finally when you have all of your
text ready you can go back to the UI

00:32:40.680 --> 00:32:40.690
text ready you can go back to the UI
 

00:32:40.690 --> 00:32:42.539
text ready you can go back to the UI
thread and set that text on the text

00:32:42.539 --> 00:32:42.549
thread and set that text on the text
 

00:32:42.549 --> 00:32:44.189
thread and set that text on the text
view notice there's a big difference

00:32:44.189 --> 00:32:44.199
view notice there's a big difference
 

00:32:44.199 --> 00:32:46.109
view notice there's a big difference
between the old link if I and the new

00:32:46.109 --> 00:32:46.119
between the old link if I and the new
 

00:32:46.119 --> 00:32:47.609
between the old link if I and the new
link if I and that the old one was

00:32:47.609 --> 00:32:47.619
link if I and that the old one was
 

00:32:47.619 --> 00:32:50.729
link if I and that the old one was
synchronous and this is asynchronous we

00:32:50.729 --> 00:32:50.739
synchronous and this is asynchronous we
 

00:32:50.739 --> 00:32:52.319
synchronous and this is asynchronous we
understand this is a huge difference but

00:32:52.319 --> 00:32:52.329
understand this is a huge difference but
 

00:32:52.329 --> 00:32:53.819
understand this is a huge difference but
it is the way that we can use machine

00:32:53.819 --> 00:32:53.829
it is the way that we can use machine
 

00:32:53.829 --> 00:32:55.709
it is the way that we can use machine
learning to really enhance how we detect

00:32:55.709 --> 00:32:55.719
learning to really enhance how we detect
 

00:32:55.719 --> 00:32:57.479
learning to really enhance how we detect
entities and the accuracy on the new

00:32:57.479 --> 00:32:57.489
entities and the accuracy on the new
 

00:32:57.489 --> 00:32:59.599
entities and the accuracy on the new
models is really really much better and

00:32:59.599 --> 00:32:59.609
models is really really much better and
 

00:32:59.609 --> 00:33:02.129
models is really really much better and
since I'm talking about new features let

00:33:02.129 --> 00:33:02.139
since I'm talking about new features let
 

00:33:02.139 --> 00:33:03.659
since I'm talking about new features let
me introduce our last new feature for P

00:33:03.659 --> 00:33:03.669
me introduce our last new feature for P
 

00:33:03.669 --> 00:33:06.119
me introduce our last new feature for P
which is magnifier a lot of people tell

00:33:06.119 --> 00:33:06.129
which is magnifier a lot of people tell
 

00:33:06.129 --> 00:33:08.279
which is magnifier a lot of people tell
us that selecting text is really hard

00:33:08.279 --> 00:33:08.289
us that selecting text is really hard
 

00:33:08.289 --> 00:33:09.779
us that selecting text is really hard
and placing the cursor where you want is

00:33:09.779 --> 00:33:09.789
and placing the cursor where you want is
 

00:33:09.789 --> 00:33:10.889
and placing the cursor where you want is
a really hard task

00:33:10.889 --> 00:33:10.899
a really hard task
 

00:33:10.899 --> 00:33:13.019
a really hard task
so magnifier shows a zoomed in version

00:33:13.019 --> 00:33:13.029
so magnifier shows a zoomed in version
 

00:33:13.029 --> 00:33:14.519
so magnifier shows a zoomed in version
of where you are touching with your

00:33:14.519 --> 00:33:14.529
of where you are touching with your
 

00:33:14.529 --> 00:33:16.409
of where you are touching with your
finger to help you place the cursor in

00:33:16.409 --> 00:33:16.419
finger to help you place the cursor in
 

00:33:16.419 --> 00:33:18.569
finger to help you place the cursor in
the correct position we've implemented

00:33:18.569 --> 00:33:18.579
the correct position we've implemented
 

00:33:18.579 --> 00:33:20.280
the correct position we've implemented
this by default in text

00:33:20.280 --> 00:33:20.290
this by default in text
 

00:33:20.290 --> 00:33:22.320
this by default in text
edittext and in webview in chrome so you

00:33:22.320 --> 00:33:22.330
edittext and in webview in chrome so you
 

00:33:22.330 --> 00:33:23.430
edittext and in webview in chrome so you
don't have to do any work if you're

00:33:23.430 --> 00:33:23.440
don't have to do any work if you're
 

00:33:23.440 --> 00:33:26.160
don't have to do any work if you're
using the default widgets however if

00:33:26.160 --> 00:33:26.170
using the default widgets however if
 

00:33:26.170 --> 00:33:27.840
using the default widgets however if
you're doing your own custom widgets and

00:33:27.840 --> 00:33:27.850
you're doing your own custom widgets and
 

00:33:27.850 --> 00:33:29.100
you're doing your own custom widgets and
you want to do implement that this

00:33:29.100 --> 00:33:29.110
you want to do implement that this
 

00:33:29.110 --> 00:33:31.410
you want to do implement that this
yourself there's a very easy API to use

00:33:31.410 --> 00:33:31.420
yourself there's a very easy API to use
 

00:33:31.420 --> 00:33:34.140
yourself there's a very easy API to use
there you could do something like this I

00:33:34.140 --> 00:33:34.150
there you could do something like this I
 

00:33:34.150 --> 00:33:35.670
there you could do something like this I
just take your untouchable and whenever

00:33:35.670 --> 00:33:35.680
just take your untouchable and whenever
 

00:33:35.680 --> 00:33:37.740
just take your untouchable and whenever
the finger goes down show the magnifier

00:33:37.740 --> 00:33:37.750
the finger goes down show the magnifier
 

00:33:37.750 --> 00:33:39.510
the finger goes down show the magnifier
whenever the finger goes up dismiss the

00:33:39.510 --> 00:33:39.520
whenever the finger goes up dismiss the
 

00:33:39.520 --> 00:33:41.430
whenever the finger goes up dismiss the
magnifier this creates an effect where

00:33:41.430 --> 00:33:41.440
magnifier this creates an effect where
 

00:33:41.440 --> 00:33:42.660
magnifier this creates an effect where
the magnifier kind of follows your

00:33:42.660 --> 00:33:42.670
the magnifier kind of follows your
 

00:33:42.670 --> 00:33:45.120
the magnifier kind of follows your
finger around the screen this is not the

00:33:45.120 --> 00:33:45.130
finger around the screen this is not the
 

00:33:45.130 --> 00:33:46.950
finger around the screen this is not the
final UX we've gone for we kind of snap

00:33:46.950 --> 00:33:46.960
final UX we've gone for we kind of snap
 

00:33:46.960 --> 00:33:48.600
final UX we've gone for we kind of snap
to the lines and we will publish

00:33:48.600 --> 00:33:48.610
to the lines and we will publish
 

00:33:48.610 --> 00:33:50.610
to the lines and we will publish
guidelines on the final UX we've come up

00:33:50.610 --> 00:33:50.620
guidelines on the final UX we've come up
 

00:33:50.620 --> 00:33:54.900
guidelines on the final UX we've come up
with but it is very easy to use so I

00:33:54.900 --> 00:33:54.910
with but it is very easy to use so I
 

00:33:54.910 --> 00:33:57.120
with but it is very easy to use so I
hope today we've presented a bunch of

00:33:57.120 --> 00:33:57.130
hope today we've presented a bunch of
 

00:33:57.130 --> 00:33:58.980
hope today we've presented a bunch of
tips and tricks we've shown you what

00:33:58.980 --> 00:33:58.990
tips and tricks we've shown you what
 

00:33:58.990 --> 00:34:00.930
tips and tricks we've shown you what
text is under the hood and Android and

00:34:00.930 --> 00:34:00.940
text is under the hood and Android and
 

00:34:00.940 --> 00:34:02.760
text is under the hood and Android and
we've provided more information on how

00:34:02.760 --> 00:34:02.770
we've provided more information on how
 

00:34:02.770 --> 00:34:04.350
we've provided more information on how
to style your text so that you can take

00:34:04.350 --> 00:34:04.360
to style your text so that you can take
 

00:34:04.360 --> 00:34:06.150
to style your text so that you can take
all of this back to your apps and build

00:34:06.150 --> 00:34:06.160
all of this back to your apps and build
 

00:34:06.160 --> 00:34:09.419
all of this back to your apps and build
beautiful more performant apps

00:34:09.419 --> 00:34:09.429
beautiful more performant apps
 

00:34:09.429 --> 00:34:10.290
beautiful more performant apps
[Music]

00:34:10.290 --> 00:34:10.300
[Music]
 

00:34:10.300 --> 00:34:11.180
[Music]
[Applause]

00:34:11.180 --> 00:34:11.190
[Applause]
 

00:34:11.190 --> 00:34:30.709
[Applause]
[Music]

