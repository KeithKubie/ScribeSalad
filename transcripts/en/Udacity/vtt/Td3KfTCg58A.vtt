WEBVTT
Kind: captions
Language: en

00:00:00.025 --> 00:00:04.328
Let's put it all together and see how Android file system

00:00:04.328 --> 00:00:09.510
enables authorized users who are members of

00:00:09.510 --> 00:00:15.070
a campus community to log in remotely from work station over

00:00:15.070 --> 00:00:20.070
insecure links and use private key crypto system to

00:00:20.070 --> 00:00:25.190
validate the users. And allow them to get useful work done on

00:00:25.190 --> 00:00:30.510
the work station. They login using the username and password.

00:00:30.510 --> 00:00:35.830
They get back a pair of tokens a secret token and clear token, and this

00:00:35.830 --> 00:00:42.430
is the first communication that happens between venus and vize. Venus

00:00:42.430 --> 00:00:49.940
can then establish an RPC session on behalf of the client by using the secret

00:00:49.940 --> 00:00:56.350
token and HKC. That's the second class of communication that happens between

00:00:57.360 --> 00:01:03.290
Venus and Vice, and as a result of this session establishment.

00:01:03.290 --> 00:01:08.740
What Venus gets back is a session key for use in this particular

00:01:08.740 --> 00:01:15.130
RPC session. Subsequently, any time the user opens a file,

00:01:15.130 --> 00:01:20.380
or closes a file, or writes to a file, all those file system

00:01:20.380 --> 00:01:25.770
calls. That requires Venus to communicate with vice,

00:01:25.770 --> 00:01:30.800
is going to be sent as secure RPC using the secret token

00:01:30.800 --> 00:01:35.510
as a client ID and SK, the session

00:01:35.510 --> 00:01:41.030
key, as the private key for encrypting the message that it wants to send.

00:01:41.030 --> 00:01:43.650
To vice, and similarly vice is going to

00:01:43.650 --> 00:01:46.780
send back responses uses the session key. So

00:01:46.780 --> 00:01:49.220
this is a third class of client server

00:01:49.220 --> 00:01:51.120
interaction that I mentioned. So there are three

00:01:51.120 --> 00:01:56.170
classes of client server interaction. The first one is login, second

00:01:56.170 --> 00:02:01.240
one is RPC session establishment, and the third one is the

00:02:01.240 --> 00:02:06.590
actual. Secure RPC calls that are being made for manipulating

00:02:06.590 --> 00:02:11.730
the files sytem that resides in the central server. So the upshot of

00:02:11.730 --> 00:02:16.710
this structure that Andrew Files System provides for the user community is

00:02:16.710 --> 00:02:21.770
that the user name and password is exposed only once per login

00:02:21.770 --> 00:02:26.630
session. So in other words if a student logs in to a work

00:02:26.630 --> 00:02:31.650
station once or twice a day, it's only that many

00:02:31.650 --> 00:02:37.330
number of times that the user name and passwords are going to be used on this

00:02:37.330 --> 00:02:43.980
insecure network. The hand shake key that Venus gets back as a result of setting

00:02:43.980 --> 00:02:51.190
up a login session for a user is used only for new RPC sessions. That's a second

00:02:51.190 --> 00:02:57.290
class of communication. And the validity of this hand shake key is the duration

00:02:57.290 --> 00:03:02.850
of the login session. You know that passwords have a long ability deed as valid

00:03:02.850 --> 00:03:08.360
as long as you don't change your password but, the duration of this HKC that

00:03:08.360 --> 00:03:12.240
is used for RPC session establishment, that

00:03:12.240 --> 00:03:15.210
is only for the duration of the login

00:03:15.210 --> 00:03:18.720
session. Once the user has logged off and

00:03:18.720 --> 00:03:22.570
left this work station. A secret token and

00:03:22.570 --> 00:03:28.000
a clear token are thrown away by Venus, so the duration of the HKC is only for

00:03:28.000 --> 00:03:34.650
this login session. And a session key is used for all the RPC calls that

00:03:34.650 --> 00:03:37.260
Venus is making on behalf of this client

00:03:37.260 --> 00:03:40.690
from manipulating the file system. And the duration

00:03:40.690 --> 00:03:44.020
of SK is the duration of a given

00:03:44.020 --> 00:03:47.880
RPC session. For instance, within one log in session,

00:03:47.880 --> 00:03:51.500
let's say, I have three different RPC

00:03:51.500 --> 00:03:56.250
sessions. For each of those distinct RPC sessions,

00:03:56.250 --> 00:03:58.770
I'm going to get a unique session key. And

00:03:58.770 --> 00:04:00.800
I'm going to use that session key only for

00:04:00.800 --> 00:04:03.340
that particular RPC session. Once that is

00:04:03.340 --> 00:04:07.700
done, I cannot re-use that key anymore. I'll

00:04:07.700 --> 00:04:09.830
have to re-establish a new RPC session, and

00:04:09.830 --> 00:04:13.070
get a new session key, and restart the

00:04:13.070 --> 00:04:18.260
RPC session. So in this lesson, module as a whole. First, we

00:04:18.260 --> 00:04:23.900
looked at taxonomies proposed by Solser, and then, we saw

00:04:23.900 --> 00:04:28.680
how we can build a practical system, which

00:04:28.680 --> 00:04:33.830
can be used by a campus community for securely

00:04:33.830 --> 00:04:38.380
accessing information. In this case. Files stored in a central

00:04:38.380 --> 00:04:42.030
repository through the Andrew file system. Now, it is time

00:04:42.030 --> 00:04:46.820
for a question that is really asking you to think

00:04:46.820 --> 00:04:52.430
about the Andrew file system and its strengths and weaknesses

00:04:52.430 --> 00:04:57.630
with respect to providing security guarantees for the user community.

