WEBVTT
Kind: captions
Language: en

00:00:00.890 --> 00:00:04.680
At this point, you've probably already
successfully displayed objects in

00:00:04.680 --> 00:00:06.890
the tableView in previous
apps that you've built.

00:00:08.020 --> 00:00:11.570
Thanks to the tableView data
source protocol, it's pretty easy.

00:00:11.570 --> 00:00:14.710
Just answer the questions that
the tableView throws at you,

00:00:14.710 --> 00:00:19.980
such as how many sections,
rows per section, etc., and you're done.

00:00:19.980 --> 00:00:25.570
We've done this before, so what is
new about using CoreData objects?

00:00:25.570 --> 00:00:29.460
Well, the advancement is that
NSFetchedResultsController

00:00:29.460 --> 00:00:33.230
can answer all those questions
posed by the data source.

00:00:33.230 --> 00:00:36.800
We're going to use a subclass
of UITableViewController

00:00:36.800 --> 00:00:39.900
that receives
an NSFetchedResultsController and

00:00:39.900 --> 00:00:44.610
then let's it handle almost all of
the questions from the tableView.

00:00:44.610 --> 00:00:47.570
Let's first take a look at
CoreDataTableViewController.

00:00:47.570 --> 00:00:51.670
This is the class that all our
TableViewControllers will inherit from.

00:00:51.670 --> 00:00:56.490
It takes an NSFetchedResultsController
and let's it do all, or almost all,

00:00:56.490 --> 00:00:57.880
the talking.

00:00:57.880 --> 00:01:02.070
The only method from the data source
protocol that it can not implement for

00:01:02.070 --> 00:01:06.080
us is cellForRowAtIndexPath.

00:01:06.080 --> 00:01:10.120
The reason for this is that it cannot
know what type of cell you want.

00:01:10.120 --> 00:01:14.660
So this is the only method that
you will have to always implement.

00:01:14.660 --> 00:01:17.560
This is a good place for
you to pause and check out the code for

00:01:17.560 --> 00:01:20.530
this class,
which is linked in the containing text.

00:01:20.530 --> 00:01:22.040
We'll be using it in the next video.

