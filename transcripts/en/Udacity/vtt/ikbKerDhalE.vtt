WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.000
What I want to do is define a function, and let's call it n_ary,

00:00:05.000 --> 00:00:09.000
and it takes (f), which should be a binary function, that is a function that takes

00:00:09.000 --> 00:00:10.000
exactly 2 arguments,

00:00:10.000 --> 00:00:16.000
and n_ary should return a new function that can take any number of arguments.

00:00:16.000 --> 00:00:30.000
We'll call this one f2, so that f2 of (a, b, c) is = f(a, f(b, c)),

00:00:30.000 --> 00:00:33.000
and that will be true for any number of arguments--2 or more.

00:00:33.000 --> 00:00:36.000
It doesn't have to just be a, b, c.

00:00:36.000 --> 00:00:38.000
So let's see if you can write this function n_ary.

00:00:38.000 --> 00:00:39.000
Here's a description of what it should do.

00:00:39.000 --> 00:00:44.000
It takes a binary function (f) as input, and it should return this n_ary function,

00:00:44.000 --> 00:00:48.000
that when given more than 2 arguments returns this composition of arguments.

00:00:48.000 --> 00:00:51.000
When given 2 arguments, it should return exactly what (f) returns.

00:00:51.000 --> 00:00:56.000
We should also allow it to take a single argument and return just that argument.

00:00:56.000 --> 00:01:00.000
That makes sense for a lot of functions (f), say for sequence.

00:01:00.000 --> 00:01:02.000
The sequence of 1 item is the item.

00:01:02.000 --> 00:01:05.000
For alt, the alternative of 1 item is the item.

00:01:05.000 --> 00:01:09.000
I mentioned addition and multiplication makes sense to say the addition of a number

00:01:09.000 --> 00:01:12.000
by itself is that number or same with multiplication.

00:01:12.000 --> 00:01:15.000
So that's a nice extension for n_ary.

00:01:15.000 --> 00:01:17.000
See if you can put your code here.

00:01:17.000 --> 00:01:19.000
So what we're doing is, we're passed in a function.

00:01:19.000 --> 00:01:24.000
We're defining this new n_ary function, putting the code in there,

00:01:24.000 --> 09:59:59.000
and then we're returning that n_ary function as the value of that call.

