WEBVTT
Kind: captions
Language: en

00:00:30.440 --> 00:00:32.990
ANKUR KOTWEL: Welcome everyone
to an Android

00:00:32.990 --> 00:00:35.820
Developer Lab Plus.

00:00:35.820 --> 00:00:38.470
For those of you that are
joining us for the first time,

00:00:38.470 --> 00:00:42.410
Android Developer Lab Plus is
a show where we go into-- we

00:00:42.410 --> 00:00:46.420
do deep dives in
Android topics.

00:00:46.420 --> 00:00:50.570
So this week, we're talking
about the Maps API version 2

00:00:50.570 --> 00:00:54.710
that we launched for Android
late last year.

00:00:54.710 --> 00:00:57.890
We did an introductory
dive into it.

00:00:57.890 --> 00:01:00.310
And this is a little bit
deeper into some

00:01:00.310 --> 00:01:02.100
more advanced topics.

00:01:02.100 --> 00:01:04.550
So firstly, let me
introduce myself.

00:01:04.550 --> 00:01:05.550
I'm Ankur Kotwell.

00:01:05.550 --> 00:01:08.060
And I'm a developer advocate
on the Android team.

00:01:08.060 --> 00:01:12.150
And I'm joining you from
Sydney, Australia.

00:01:12.150 --> 00:01:15.150
I'll pass it over to Jan
Felix, who's next.

00:01:15.150 --> 00:01:16.770
JAN-FELIX SCHMAKEIT: Yeah,
I'm Jan-Felix Schmakeit.

00:01:16.770 --> 00:01:19.250
I'm a developer programs
engineer on Android.

00:01:19.250 --> 00:01:22.100
And I'm also based in Sidney.

00:01:22.100 --> 00:01:23.290
TONY CHAN: Hi, my name's
Tony Chan.

00:01:23.290 --> 00:01:29.630
I'm also a developer advocate,
coming here from Hong Kong.

00:01:29.630 --> 00:01:32.520
So, hello.

00:01:32.520 --> 00:01:33.882
ANKUR KOTWEL: Great.

00:01:33.882 --> 00:01:34.810
Yep, great.

00:01:34.810 --> 00:01:37.580
Thanks Tony and Jan-Felix.

00:01:37.580 --> 00:01:39.300
So Jan-Felix is one of
our newest recruits.

00:01:39.300 --> 00:01:43.170
You've probably seen him on
the Santa Tracker video.

00:01:43.170 --> 00:01:47.730
And if you haven't, please go
and have a look at the Google

00:01:47.730 --> 00:01:51.510
Developers Live presents Santa
Tracker for Android, which

00:01:51.510 --> 00:01:54.640
heavily uses the Map View API
that we're going to be

00:01:54.640 --> 00:01:56.220
discussing today.

00:01:56.220 --> 00:02:00.550
So that particular session goes
into more of the process

00:02:00.550 --> 00:02:04.050
behind building the app, the
vision, and really how we make

00:02:04.050 --> 00:02:07.090
full use of the Map
View API library.

00:02:07.090 --> 00:02:09.919
So with that being said, let's
now move on to today's

00:02:09.919 --> 00:02:11.169
presentation.

00:02:15.020 --> 00:02:17.940
So Jan-Felix, perhaps you
can get us started.

00:02:17.940 --> 00:02:20.487
Are you able to see the slides,
just to confirm?

00:02:20.487 --> 00:02:21.441
JAN-FELIX SCHMAKEIT:
Yeah, yeah.

00:02:21.441 --> 00:02:23.120
Looks all good from here.

00:02:23.120 --> 00:02:23.690
ANKUR KOTWEL: OK.

00:02:23.690 --> 00:02:25.140
All yours.

00:02:25.140 --> 00:02:26.190
JAN-FELIX SCHMAKEIT: OK.

00:02:26.190 --> 00:02:29.430
So, yeah.

00:02:29.430 --> 00:02:32.380
So the last [INAUDIBLE] class
was giving you a bit of

00:02:32.380 --> 00:02:35.500
introduction into the Map View,
kind of getting started,

00:02:35.500 --> 00:02:37.950
getting your first project up
and running, getting the API

00:02:37.950 --> 00:02:39.350
key and stuff set up.

00:02:39.350 --> 00:02:42.510
And so this week, we will
look at some of the

00:02:42.510 --> 00:02:43.510
more advanced topics.

00:02:43.510 --> 00:02:46.910
So we're-- if you could
go to the next slide.

00:02:46.910 --> 00:02:51.540
We're going to actually show
you a bit of code.

00:02:51.540 --> 00:02:53.730
We're going to show you a
few examples as well.

00:02:53.730 --> 00:02:56.320
So we're going to talk about
InfoWindows because there are

00:02:56.320 --> 00:02:59.080
different types and ways you
can create Info Windows.

00:02:59.080 --> 00:03:00.905
We're talking about
polylines and--

00:03:00.905 --> 00:03:02.050
yeah, polylines.

00:03:02.050 --> 00:03:03.230
We're talking a bit about
Camera animations.

00:03:03.230 --> 00:03:05.200
Because that's one of the
really cool features and

00:03:05.200 --> 00:03:06.560
something that's really
impressive

00:03:06.560 --> 00:03:08.470
in the new Map View.

00:03:08.470 --> 00:03:10.640
We're going to talk a bit about
markers, in particular

00:03:10.640 --> 00:03:12.400
custom icons that you will
have on markers.

00:03:15.170 --> 00:03:18.710
All the demos and all these
samples are actually from the

00:03:18.710 --> 00:03:20.900
Map View demo project.

00:03:20.900 --> 00:03:22.780
So if you want to follow along,
want to look at it

00:03:22.780 --> 00:03:27.470
later on, you can just get the
demo project from the SDK and

00:03:27.470 --> 00:03:30.620
just look at the code
from there.

00:03:30.620 --> 00:03:31.590
OK.

00:03:31.590 --> 00:03:34.630
And I think with that
we can then dive

00:03:34.630 --> 00:03:36.030
into our first topic.

00:03:36.030 --> 00:03:37.950
So InfoWindows--

00:03:37.950 --> 00:03:40.300
I'm sure most of you have
seen these before.

00:03:40.300 --> 00:03:42.900
So an InfoWindow is basically
pop-up that's

00:03:42.900 --> 00:03:44.540
attached to a marker.

00:03:44.540 --> 00:03:47.510
So when you click on a marker,
that's when the

00:03:47.510 --> 00:03:49.650
InfoWindow pops up.

00:03:49.650 --> 00:03:52.030
And one thing here to remember
is that you can only have one

00:03:52.030 --> 00:03:52.830
Info Window at a time.

00:03:52.830 --> 00:03:57.090
You tap on the marker, and you
get one of these pop-ups.

00:03:57.090 --> 00:03:59.510
So let's look at the demo.

00:03:59.510 --> 00:04:03.280
There are different types of
InfoWindows you can set up.

00:04:03.280 --> 00:04:06.620
So you tap on it, and you get--
that was the default

00:04:06.620 --> 00:04:07.650
InfoWindow you can get.

00:04:07.650 --> 00:04:09.450
There's a custom InfoWindow
contents.

00:04:09.450 --> 00:04:12.360
And you can also have a complete
custom InfoWindow.

00:04:12.360 --> 00:04:15.390
And we're going to talk about
them in a bit more detail now

00:04:15.390 --> 00:04:17.209
to show you how you can actually
go about creating

00:04:17.209 --> 00:04:19.380
them and setting them up.

00:04:19.380 --> 00:04:21.579
ANKUR KOTWEL: So Jan-Felix
--sorry to cut in-- what I

00:04:21.579 --> 00:04:23.985
might do is just play that one
more time because they go a

00:04:23.985 --> 00:04:25.300
little bit quickly.

00:04:25.300 --> 00:04:26.350
JAN-FELIX SCHMAKEIT: Yeah.

00:04:26.350 --> 00:04:27.270
ANKUR KOTWEL: Just talk
us through that video

00:04:27.270 --> 00:04:28.700
again, could you?

00:04:28.700 --> 00:04:29.730
JAN-FELIX SCHMAKEIT:
Yes, sure.

00:04:29.730 --> 00:04:33.045
So the first thing-- we have a
default InfoWindow, we have a

00:04:33.045 --> 00:04:35.850
title and a snippet, then we
have a custom info content,

00:04:35.850 --> 00:04:38.210
where we have-- it looks like
a normal InfoWindow, like

00:04:38.210 --> 00:04:38.960
default one.

00:04:38.960 --> 00:04:41.670
But we have our own content
in there, our own layout.

00:04:41.670 --> 00:04:44.500
And this is the custom
InfoWindow where we have our

00:04:44.500 --> 00:04:44.940
own layout.

00:04:44.940 --> 00:04:45.695
We have our own backgrounds.

00:04:45.695 --> 00:04:47.640
It's completely done by us.

00:04:47.640 --> 00:04:49.810
We have some more examples later
on in the presentation.

00:04:49.810 --> 00:04:51.380
You can see exactly what it
looks like and what the

00:04:51.380 --> 00:04:54.690
differences are.

00:04:54.690 --> 00:04:57.680
So let's look and the
InfoWindows in [INAUDIBLE].

00:04:57.680 --> 00:05:00.000
So I just said, there are
three different types--

00:05:00.000 --> 00:05:00.740
default.

00:05:00.740 --> 00:05:03.010
And the default one is basically
where you have title

00:05:03.010 --> 00:05:05.690
and snippet, just basically
just plain text.

00:05:05.690 --> 00:05:07.110
You can't really customize
it any other way.

00:05:07.110 --> 00:05:09.210
You can specify title, You
can specify snippet.

00:05:09.210 --> 00:05:12.360
When you tap on a marker,
that pops up.

00:05:12.360 --> 00:05:13.370
Custom contents--

00:05:13.370 --> 00:05:15.970
that's where you can actually
replace a content that goes

00:05:15.970 --> 00:05:17.590
inside an InfoWindow.

00:05:17.590 --> 00:05:19.110
So you keep the bubble.

00:05:19.110 --> 00:05:21.110
That's the default InfoWindow.

00:05:21.110 --> 00:05:22.590
But you can actually put
your layout in there.

00:05:22.590 --> 00:05:25.120
So you can arrange text
in any way you want.

00:05:25.120 --> 00:05:27.150
You can put your own views
in there and so on.

00:05:27.150 --> 00:05:29.850
And a custom InfoWindow is going
to be completely replace

00:05:29.850 --> 00:05:31.750
the entire InfoWindow.

00:05:31.750 --> 00:05:34.140
So you can have your own Info
bubble, use your own

00:05:34.140 --> 00:05:36.530
background, and make it look and
style it how you want it

00:05:36.530 --> 00:05:37.870
to look like.

00:05:37.870 --> 00:05:39.350
So let's look at--

00:05:39.350 --> 00:05:40.240
Let's start at the beginning.

00:05:40.240 --> 00:05:43.970
Let's look at an example for
one of those default

00:05:43.970 --> 00:05:47.830
InfoWindows on the next slide,
on the slide here.

00:05:47.830 --> 00:05:50.770
Basically, all you have to do
is you have to add a marker.

00:05:50.770 --> 00:05:53.270
Obviously, you have to
set the position.

00:05:53.270 --> 00:05:54.840
And you just set a title
of the snippet.

00:05:54.840 --> 00:05:59.140
And as soon as you set the
title, the Map View knows that

00:05:59.140 --> 00:06:02.080
you want to use the forward
implementation of the

00:06:02.080 --> 00:06:03.190
InfoWindow.

00:06:03.190 --> 00:06:05.390
So in this case, it
automatically knows if you

00:06:05.390 --> 00:06:06.800
have a title in bold.

00:06:06.800 --> 00:06:10.000
And you have a snippet there
in the lighter grey color.

00:06:10.000 --> 00:06:11.260
And that's all you have to do.

00:06:11.260 --> 00:06:12.860
And that's your default
implementation.

00:06:12.860 --> 00:06:17.920
So it's really easy to get
started with that.

00:06:17.920 --> 00:06:21.130
But what if you want to do
something a bit more advanced?

00:06:21.130 --> 00:06:22.450
And you want to put
an image in there.

00:06:22.450 --> 00:06:24.290
Or you want to style text
a bit differently.

00:06:24.290 --> 00:06:26.630
Or you want to have different
textures in

00:06:26.630 --> 00:06:28.690
there you want to update.

00:06:28.690 --> 00:06:30.840
That's were custom
content comes in.

00:06:30.840 --> 00:06:34.240
And the basic idea is that you
keep the fourth InfoWindow

00:06:34.240 --> 00:06:37.770
bubble, so you don't have to
worry about adding the outline

00:06:37.770 --> 00:06:39.005
to it, making sure it's
centered and all

00:06:39.005 --> 00:06:39.820
that kind of stuff.

00:06:39.820 --> 00:06:42.330
We just supply a
view, a layout.

00:06:42.330 --> 00:06:46.080
That's basically what's drawn
inside that InfoWindow.

00:06:46.080 --> 00:06:49.210
So if you look at some code--

00:06:49.210 --> 00:06:50.370
let's look at the layout.

00:06:50.370 --> 00:06:54.980
So basically, what we're doing
here is we are using a normal

00:06:54.980 --> 00:06:58.080
layouts XML file that
you've used before.

00:06:58.080 --> 00:07:00.120
And in this case, we have
a linear layout.

00:07:00.120 --> 00:07:01.960
And we have image
view in there.

00:07:01.960 --> 00:07:03.420
And then we have another--

00:07:03.420 --> 00:07:05.963
sorry, another linear layout
with text view and another

00:07:05.963 --> 00:07:06.990
text view in it.

00:07:06.990 --> 00:07:08.980
And basically, all we're
doing --if you

00:07:08.980 --> 00:07:10.450
go to the next slide--

00:07:10.450 --> 00:07:14.190
is basically just inflating
that and returning that.

00:07:14.190 --> 00:07:16.750
And the way out go about
this is by using

00:07:16.750 --> 00:07:20.300
an InfoWindow editor.

00:07:20.300 --> 00:07:22.550
You basically have to register
this InfoWindow editor.

00:07:22.550 --> 00:07:24.250
You have to create an
Info Window editor.

00:07:24.250 --> 00:07:27.010
And basically, there
are two methods.

00:07:27.010 --> 00:07:31.170
There is the getInfoContents
and getInfoWindow.

00:07:31.170 --> 00:07:33.840
When you just want to override
the content of it, all have to

00:07:33.840 --> 00:07:39.370
do is return the view you want
to have in the your InfoWindow

00:07:39.370 --> 00:07:41.700
from the getInfoContents
method.

00:07:41.700 --> 00:07:44.540
So whatever you want to put into
the InfoWindow, you just

00:07:44.540 --> 00:07:46.630
have to return from
getInfoContents.

00:07:46.630 --> 00:07:49.440
And in our case here, the render
method that we're not

00:07:49.440 --> 00:07:51.990
showing here, all we're doing
there is just inflating a

00:07:51.990 --> 00:07:53.870
layout, just as usual.

00:07:53.870 --> 00:07:55.285
We're setting our text viewer.

00:07:55.285 --> 00:07:57.850
We're updating the image,
view, setting the image.

00:07:57.850 --> 00:07:58.840
And that's all we're doing.

00:07:58.840 --> 00:08:01.270
Then you're just returning
the view at the end.

00:08:01.270 --> 00:08:04.940
And that's how you
can have custom

00:08:04.940 --> 00:08:07.200
content in the Info Window.

00:08:07.200 --> 00:08:09.930
If you go next slide, you can
see there's a custom Window.

00:08:09.930 --> 00:08:12.430
And then you can see you have
a bit of a gradient in the

00:08:12.430 --> 00:08:12.850
background.

00:08:12.850 --> 00:08:13.430
So InfoWindow [INAUDIBLE]

00:08:13.430 --> 00:08:17.200
a bit of a gradient and the
corners around it as well.

00:08:17.200 --> 00:08:18.630
And they basically it's
the same idea.

00:08:18.630 --> 00:08:19.640
You just supply a view.

00:08:19.640 --> 00:08:21.980
And that view gets thrown
as the Info Window.

00:08:21.980 --> 00:08:24.095
So you don't get the default
bubble around it.

00:08:24.095 --> 00:08:27.850
You just get your view
that you've returned.

00:08:27.850 --> 00:08:31.950
So if you look at the code, the
only difference, the only

00:08:31.950 --> 00:08:33.289
thing we have changed is
basically we've added a

00:08:33.289 --> 00:08:34.409
background to it.

00:08:34.409 --> 00:08:36.250
And the trick is to--

00:08:36.250 --> 00:08:37.860
if you've used a Nine-Patch
for that.

00:08:37.860 --> 00:08:40.960
So Nine-Patch means that the
image gets scaled up

00:08:40.960 --> 00:08:44.049
automatically and stretched
in way that makes sense.

00:08:44.049 --> 00:08:46.410
In our case here, we're
stretching it so that you

00:08:46.410 --> 00:08:47.680
always have a gradient
at the bottom.

00:08:47.680 --> 00:08:52.700
And you're not stretching it
past the nose at the bottom

00:08:52.700 --> 00:08:55.050
that sits on top
of the marker.

00:08:55.050 --> 00:08:56.650
And that's the trick to it.

00:08:56.650 --> 00:09:00.250
And that's your you custom
Info Window.

00:09:00.250 --> 00:09:03.610
If you look at the code for
this-- again, we're using an

00:09:03.610 --> 00:09:04.880
InfoWindow editor.

00:09:04.880 --> 00:09:08.730
But this time, we have to return
the view from the get

00:09:08.730 --> 00:09:10.810
Info Window method instead.

00:09:10.810 --> 00:09:13.860
So you have to return null from
get Info Window contents,

00:09:13.860 --> 00:09:15.990
otherwise that's the one that's
going to be used.

00:09:15.990 --> 00:09:18.950
So if you return null there and
you're return to the view

00:09:18.950 --> 00:09:21.390
in get Info Window, that's
all you have to do.

00:09:21.390 --> 00:09:27.390
And that's what gets
drawn instead.

00:09:27.390 --> 00:09:30.820
Yeah, so that's really
quite simple, right?

00:09:30.820 --> 00:09:32.440
So you know how to
inflate a layout.

00:09:32.440 --> 00:09:36.210
You've used layouts in
[INAUDIBLE] before.

00:09:36.210 --> 00:09:38.910
But there are few issues with
InfoWindow, a few things you

00:09:38.910 --> 00:09:41.100
have to be aware of.

00:09:41.100 --> 00:09:43.680
One really big thing is that
InfoWindows are not live.

00:09:43.680 --> 00:09:46.950
So it's not like any other
view [INAUDIBLE].

00:09:46.950 --> 00:09:49.110
It's not like other views
you've used before.

00:09:49.110 --> 00:09:52.980
So basically, the Info Window
gets rendered to a canvas

00:09:52.980 --> 00:09:53.630
beforehand.

00:09:53.630 --> 00:09:55.930
So you can't change the
text on it live.

00:09:55.930 --> 00:09:57.260
You can't change the
image that comes.

00:09:57.260 --> 00:09:59.490
You can't have custom
controls on it like

00:09:59.490 --> 00:10:01.680
other buttons or something.

00:10:01.680 --> 00:10:03.050
So you have to be
aware of that.

00:10:03.050 --> 00:10:06.320
So you can't change the text on
it unless you recreate the

00:10:06.320 --> 00:10:09.530
InfoWindow, you hide it,
and display it again.

00:10:09.530 --> 00:10:12.960
And because it's rendered in
such a way, you also can't

00:10:12.960 --> 00:10:14.420
have other listeners on it.

00:10:14.420 --> 00:10:17.460
So all you can do is
you can register a

00:10:17.460 --> 00:10:18.935
InfoWindowClickListener.

00:10:18.935 --> 00:10:23.370
And basically, you get an event
back when somebody taps

00:10:23.370 --> 00:10:25.280
on the InfoWindow.

00:10:25.280 --> 00:10:28.200
So by default, it just
hides the InfoWindow.

00:10:28.200 --> 00:10:32.200
But that's how you would
hook into that.

00:10:32.200 --> 00:10:34.570
Yeah that's it, all
about InfoWindows.

00:10:34.570 --> 00:10:37.320
And I think now we have Tony
telling us how to draw an

00:10:37.320 --> 00:10:40.170
Android in Sidney.

00:10:40.170 --> 00:10:41.640
ANKUR KOTWEL: Actually,
Jan-Felix, before we just go

00:10:41.640 --> 00:10:45.240
ahead, I'm just going to go back
a couple of slides, just

00:10:45.240 --> 00:10:48.070
point out a couple
of things here.

00:10:48.070 --> 00:10:53.360
The interesting thing is on this
custom window you showed,

00:10:53.360 --> 00:10:54.690
you mentioned that we
have a gradient.

00:10:54.690 --> 00:10:59.140
And we can provide our
own border for this.

00:10:59.140 --> 00:11:01.180
And you showed us a
Nine-Patch here.

00:11:01.180 --> 00:11:04.940
The important thing to realize
here is things like the shadow

00:11:04.940 --> 00:11:08.765
for the window is something
that we've added in on

00:11:08.765 --> 00:11:10.010
Nine-Patch itself.

00:11:10.010 --> 00:11:13.660
It's something the library
won't add for you, right?

00:11:13.660 --> 00:11:14.660
JAN-FELIX SCHMAKEIT:
Yeah, that's right.

00:11:14.660 --> 00:11:17.240
So if you want to have the
shadow behind it or anything

00:11:17.240 --> 00:11:18.520
else, you want to take back
on [INAUDIBLE], you

00:11:18.520 --> 00:11:19.590
have to do it yourself.

00:11:19.590 --> 00:11:22.710
You basically have to provide
a different image there.

00:11:22.710 --> 00:11:25.350
ANKUR KOTWEL: Yeah, so it takes
your image verbatim,

00:11:25.350 --> 00:11:29.750
including the little triangle
that you see at the bottom

00:11:29.750 --> 00:11:33.680
that shows that this is the
marker that it's coming from.

00:11:33.680 --> 00:11:36.950
So just keep that in mind as
you use these more advanced

00:11:36.950 --> 00:11:39.660
InfoWindows that you
provide everything.

00:11:39.660 --> 00:11:42.000
The more custom you go,
the more you have

00:11:42.000 --> 00:11:43.326
to provide as well.

00:11:43.326 --> 00:11:44.060
JAN-FELIX SCHMAKEIT:
Yeah, yeah.

00:11:44.060 --> 00:11:45.600
That's right.

00:11:45.600 --> 00:11:46.020
ANKUR KOTWEL: OK.

00:11:46.020 --> 00:11:46.920
Thanks for that.

00:11:46.920 --> 00:11:48.010
Tony?

00:11:48.010 --> 00:11:49.000
TONY CHAN: Yeah.

00:11:49.000 --> 00:11:51.330
Thanks Jan-Felix and Ankur.

00:11:51.330 --> 00:11:58.360
So for polylines and polygons,
we do have some samples in our

00:11:58.360 --> 00:11:59.200
type of project.

00:11:59.200 --> 00:12:05.360
But it's only showing lines
and rectangles or circle.

00:12:05.360 --> 00:12:07.430
So I want to do something a
little bit more interesting

00:12:07.430 --> 00:12:11.930
today and show you guys
how to draw an Android

00:12:11.930 --> 00:12:14.360
figure on the map.

00:12:14.360 --> 00:12:15.610
So next slide please.

00:12:18.160 --> 00:12:22.620
So before that let's go take
a look at a quick demo.

00:12:22.620 --> 00:12:26.470
So this an Android centering
on Sidney.

00:12:26.470 --> 00:12:30.820
So we can just play around
and move it.

00:12:30.820 --> 00:12:36.300
And also we can treat the color,
the transparency, the

00:12:36.300 --> 00:12:38.580
alpha a little bit.

00:12:38.580 --> 00:12:40.920
Right now, I'm changing
the color.

00:12:40.920 --> 00:12:46.300
And then we can adjust the
width of the border, the

00:12:46.300 --> 00:12:47.890
borderline as well.

00:12:47.890 --> 00:12:53.230
So it's just a quick demo
showing what you can do with

00:12:53.230 --> 00:12:54.480
polylines and polygons.

00:12:56.860 --> 00:12:58.990
Next slide please.

00:12:58.990 --> 00:13:04.400
So basically what polylines and
polygons do is allow you

00:13:04.400 --> 00:13:08.090
guys, developers, to draw
shapes on the map.

00:13:08.090 --> 00:13:11.230
One thing that's very important
is the location, the

00:13:11.230 --> 00:13:15.770
points you specify, is in
a particular order.

00:13:15.770 --> 00:13:19.230
So we'll talk a little more
about that later.

00:13:19.230 --> 00:13:23.840
Basically, all of these location
coordinates are

00:13:23.840 --> 00:13:26.730
latitudes and longitudes.

00:13:26.730 --> 00:13:30.240
Polylines will display
as line segments.

00:13:30.240 --> 00:13:39.310
And polygons will just form
lines enclosing an area and

00:13:39.310 --> 00:13:40.470
create a shape.

00:13:40.470 --> 00:13:44.620
But pretty much both
of them built from

00:13:44.620 --> 00:13:46.480
coordinates, from points.

00:13:49.230 --> 00:13:50.110
Next slide.

00:13:50.110 --> 00:13:51.890
Yeah.

00:13:51.890 --> 00:13:55.470
Both polylines and polygons,
they share common properties.

00:13:55.470 --> 00:14:00.660
For example, you can change
colors, the widths, and the

00:14:00.660 --> 00:14:04.450
visibility of those objects.

00:14:04.450 --> 00:14:09.240
And for polygons, because its
a shape, so you can also

00:14:09.240 --> 00:14:12.000
change the fill color as well.

00:14:12.000 --> 00:14:14.880
Next slide.

00:14:14.880 --> 00:14:17.020
So here's a quick [INAUDIBLE]

00:14:17.020 --> 00:14:21.380
input to show you how to add
the polylines on the map

00:14:21.380 --> 00:14:25.380
quickly and follow
the same path,

00:14:25.380 --> 00:14:29.060
just like adding markers.

00:14:29.060 --> 00:14:31.750
So you have Google Map object.

00:14:31.750 --> 00:14:34.240
And then you just do
an AddPolyline.

00:14:34.240 --> 00:14:37.190
Then you specify a
polyline options.

00:14:37.190 --> 00:14:41.190
In this here, you add two
coordinates and then it will

00:14:41.190 --> 00:14:43.250
draw the line for you.

00:14:43.250 --> 00:14:45.880
Next slide.

00:14:45.880 --> 00:14:49.720
Here's an example of how you
change color and width.

00:14:49.720 --> 00:14:57.665
One thing you notice is the
polyline options object will

00:14:57.665 --> 00:15:03.410
return itself after you
set a parameter.

00:15:03.410 --> 00:15:07.820
So that allows you actually to
change all these methods.

00:15:07.820 --> 00:15:14.090
So in this example here, I can
change the color and the width

00:15:14.090 --> 00:15:18.540
at the same time in
one line of code.

00:15:18.540 --> 00:15:19.310
It's like--

00:15:19.310 --> 00:15:20.570
Yeah.

00:15:20.570 --> 00:15:24.130
Here in an another example
of how to add a polygon.

00:15:24.130 --> 00:15:28.500
So for polygons, also follow
the same patterns.

00:15:28.500 --> 00:15:32.470
You specify a polygon option.

00:15:32.470 --> 00:15:36.740
You just need to provide
a list of LatLng.

00:15:36.740 --> 00:15:41.660
So here you can provide
more than two points.

00:15:41.660 --> 00:15:45.810
And it will draw the
polygon for you.

00:15:45.810 --> 00:15:49.520
So we'll go dive into a little
bit more detail how a polygon

00:15:49.520 --> 00:15:51.870
is drawn in future slides.

00:15:51.870 --> 00:15:52.960
Next side please.

00:15:52.960 --> 00:15:54.760
ANKUR KOTWEL: So Tony, I
have a question here.

00:15:54.760 --> 00:15:56.370
TONY CHAN: Yeah?

00:15:56.370 --> 00:15:58.620
ANKUR KOTWEL: As you can see,
the labels show up on top of

00:15:58.620 --> 00:16:01.370
the polylines.

00:16:01.370 --> 00:16:03.560
I believe markers are
the same, right?

00:16:03.560 --> 00:16:08.950
Markers will always show on top
of a polyline or polygon,

00:16:08.950 --> 00:16:11.250
rather than the other
way around.

00:16:11.250 --> 00:16:12.490
TONY CHAN: Yeah, I believe so.

00:16:12.490 --> 00:16:17.100
And also there is, in the API,
there's a scene [INAUDIBLE]

00:16:17.100 --> 00:16:18.140
concept.

00:16:18.140 --> 00:16:22.390
So if you have multiple
polygons, things like that,

00:16:22.390 --> 00:16:25.640
and you can actually arrange
these polygons in a particular

00:16:25.640 --> 00:16:28.280
order using the index.

00:16:28.280 --> 00:16:30.200
ANKUR KOTWEL: That's really
useful to know.

00:16:30.200 --> 00:16:32.870
Thank you.

00:16:32.870 --> 00:16:36.190
TONY CHAN: So one thing I want
to point out for polygon is

00:16:36.190 --> 00:16:44.170
the points you specify must be
in counterclockwise order in

00:16:44.170 --> 00:16:48.560
order for the field color
to work correctly.

00:16:48.560 --> 00:16:53.030
So let me use the diagram here
to explain a little bit.

00:16:53.030 --> 00:16:55.250
So if you draw--

00:16:55.250 --> 00:16:58.000
let's say you have a
sphere, a circle.

00:16:58.000 --> 00:17:05.849
If you draw a line, a circle,
within the area.

00:17:05.849 --> 00:17:09.310
If you draw it counterclockwise,
the thing

00:17:09.310 --> 00:17:15.280
actually enclosing in that
counterclockwise circle is the

00:17:15.280 --> 00:17:18.609
area actually the color
is going to be filled.

00:17:18.609 --> 00:17:25.260
So in the case here on the
right, you can see the circle

00:17:25.260 --> 00:17:27.329
is in the clockwise order.

00:17:27.329 --> 00:17:35.280
So if you try to imagine you're
looking from inside,

00:17:35.280 --> 00:17:37.140
from the back--

00:17:37.140 --> 00:17:42.600
so it's actually the outside
area is actually enclosing.

00:17:42.600 --> 00:17:44.890
If you try to imagine,
like it's

00:17:44.890 --> 00:17:48.080
actually enclosing within--

00:17:48.080 --> 00:17:53.630
if you draw a circle
anticlockwise.

00:17:53.630 --> 00:18:00.980
So that's why when you try to
draw a polygon, you always

00:18:00.980 --> 00:18:08.240
have to think about drawing it
from a counterclockwise order,

00:18:08.240 --> 00:18:11.020
so that the right area
is going to field

00:18:11.020 --> 00:18:14.390
the color you want.

00:18:14.390 --> 00:18:18.790
It takes a little bit of
thinking to try to imagine the

00:18:18.790 --> 00:18:21.862
right hand side.

00:18:21.862 --> 00:18:27.320
But this is something you
want to keep in mind.

00:18:27.320 --> 00:18:30.440
Next slide.

00:18:30.440 --> 00:18:34.780
For polygons, you can also
change the color and width.

00:18:34.780 --> 00:18:38.250
And the method signature's
a little bit--

00:18:38.250 --> 00:18:39.660
the name is a little
bit different.

00:18:39.660 --> 00:18:46.505
So for polygon, it's fill color
and then stoke width.

00:18:46.505 --> 00:18:48.740
Next slide.

00:18:48.740 --> 00:18:52.540
One thing interesting about
polygons is it allows you to

00:18:52.540 --> 00:18:55.750
create some holes.

00:18:55.750 --> 00:19:02.860
So in here we call it hollow
polygon, within a polygon.

00:19:02.860 --> 00:19:03.660
So one thing--

00:19:03.660 --> 00:19:08.040
I used this concept
to actually draw

00:19:08.040 --> 00:19:10.520
the eyes of the Android.

00:19:10.520 --> 00:19:17.500
So for the eyes, you just need
to specify some points, so

00:19:17.500 --> 00:19:21.190
that the API will draw
the circles for you.

00:19:21.190 --> 00:19:24.650
And after that, after you
create those two circle

00:19:24.650 --> 00:19:31.400
polygons, you add it to the
original polygon using the

00:19:31.400 --> 00:19:32.940
method at hold.

00:19:32.940 --> 00:19:38.300
And that's how I achieved the
effect of having a transparent

00:19:38.300 --> 00:19:41.390
eye for the Android.

00:19:41.390 --> 00:19:42.770
Next slide.

00:19:42.770 --> 00:19:45.090
So here is--

00:19:45.090 --> 00:19:47.520
as I mentioned before, we're
going to talk a little bit in

00:19:47.520 --> 00:19:52.400
more detail how to draw
the Android body.

00:19:52.400 --> 00:19:57.960
So the digram here shows what
kind of points you need to

00:19:57.960 --> 00:20:02.940
specify in order to achieve
the effect of having an

00:20:02.940 --> 00:20:04.940
Android figure body.

00:20:04.940 --> 00:20:10.820
So the first point is actually
on the right, the top right.

00:20:10.820 --> 00:20:16.560
And then you try to draw the
semicircle shape using a whole

00:20:16.560 --> 00:20:18.010
bunch of points.

00:20:18.010 --> 00:20:22.270
We will talk about how to
generate these points using an

00:20:22.270 --> 00:20:24.130
equation later.

00:20:24.130 --> 00:20:30.510
And then, after you draw the
semicircle, you need to create

00:20:30.510 --> 00:20:32.640
a straight line on the left.

00:20:32.640 --> 00:20:35.480
So that's why you need to
specify another coordinate on

00:20:35.480 --> 00:20:37.140
the lower left corner.

00:20:37.140 --> 00:20:41.170
And then the last one is
the lower right corner.

00:20:41.170 --> 00:20:45.660
And after you specify all these
points, the API will

00:20:45.660 --> 00:20:51.190
just connect these dots together
and then fill the

00:20:51.190 --> 00:20:54.560
shape with colors
you specified.

00:20:54.560 --> 00:20:59.690
Remember, we're using the
counterclockwise principle.

00:20:59.690 --> 00:21:06.910
And that's why enclosing area
is in green in this case.

00:21:06.910 --> 00:21:08.470
Next slide.

00:21:08.470 --> 00:21:12.340
So now it gets to the
equation part.

00:21:12.340 --> 00:21:15.480
So how to draw that
semicircle?

00:21:15.480 --> 00:21:20.040
So it turns out if you go to
Wikipedia and try to figure a

00:21:20.040 --> 00:21:25.590
way to draw a circle or
semicircle, you will find an

00:21:25.590 --> 00:21:28.800
equation like the one
showing here.

00:21:28.800 --> 00:21:30.060
It looks pretty complicated.

00:21:30.060 --> 00:21:37.220
But it will help when you look
at a figure like this.

00:21:37.220 --> 00:21:40.350
So this is a general
ellipse equation.

00:21:40.350 --> 00:21:43.870
And the phi angle is--

00:21:43.870 --> 00:21:49.490
if you try to actually shift the
ellipse from the x-axis.

00:21:49.490 --> 00:21:57.690
So in this case, the b is the
short distance from the center

00:21:57.690 --> 00:22:02.830
point of the ellipse to the
phi of the ellipse.

00:22:02.830 --> 00:22:05.740
And the a is actually
the longer

00:22:05.740 --> 00:22:09.170
width side of the ellipse.

00:22:09.170 --> 00:22:17.700
And acmyc is the center
coordinate of the ellipse.

00:22:17.700 --> 00:22:22.510
But the good news is if you're
not trying to draw a curve

00:22:22.510 --> 00:22:27.400
actually with an angle, you can
actually greatly simplify

00:22:27.400 --> 00:22:30.260
this equation much further.

00:22:30.260 --> 00:22:32.870
So next slide, please.

00:22:32.870 --> 00:22:37.790
So if we set the phi to zero,
then actually everything

00:22:37.790 --> 00:22:39.880
becomes much easier.

00:22:39.880 --> 00:22:45.420
Because a lot of sine, cosine
parameters will become zero

00:22:45.420 --> 00:22:46.690
and cancel out.

00:22:46.690 --> 00:22:52.640
So we have a much simpler
equation here, which is just

00:22:52.640 --> 00:22:57.940
the center point plus a cosine
theta and b sine theta.

00:22:57.940 --> 00:23:04.680
So the theta part allows you
to draw, to select some

00:23:04.680 --> 00:23:11.170
points, samples, so that you can
use those point to draw it

00:23:11.170 --> 00:23:12.030
on the map.

00:23:12.030 --> 00:23:16.170
So the next slide will show
you some code-- how to use

00:23:16.170 --> 00:23:17.720
that equation.

00:23:17.720 --> 00:23:22.010
So here I create a
polygon options.

00:23:22.010 --> 00:23:30.430
So let's say I want to draw 400
points to get the curve.

00:23:30.430 --> 00:23:37.300
So in usual case, if we want
to draw a circle, the phase

00:23:37.300 --> 00:23:41.250
variable you probably want
to use 2pi divided by

00:23:41.250 --> 00:23:42.870
the number of points.

00:23:42.870 --> 00:23:46.990
But in this case, I want
to draw a semicircle.

00:23:46.990 --> 00:23:51.840
So instead of 2pi, I use pi
divided by number of points.

00:23:51.840 --> 00:23:55.920
And then you have a full loop,
going through all these four

00:23:55.920 --> 00:23:57.400
hundred points.

00:23:57.400 --> 00:24:02.550
And apply the equation, this
exact same equation you saw on

00:24:02.550 --> 00:24:04.820
top, but in code.

00:24:04.820 --> 00:24:11.380
So you use the center of
the city you point at.

00:24:11.380 --> 00:24:15.700
In this case, I am
using Sidney.

00:24:15.700 --> 00:24:19.800
So xcmyc is the color coordinate
of Sidney.

00:24:19.800 --> 00:24:27.820
And then a and b is the width
and height of the Android head

00:24:27.820 --> 00:24:29.270
you want to have.

00:24:29.270 --> 00:24:35.020
So it just some numbers and then
multiply by sine theta

00:24:35.020 --> 00:24:38.720
and cosine theta in this
case in the equation.

00:24:38.720 --> 00:24:43.770
So this way you can generate
all these points for you to

00:24:43.770 --> 00:24:47.900
draw the Android figure.

00:24:47.900 --> 00:24:52.900
So I hope that helps you guys
understand how to use polygon

00:24:52.900 --> 00:24:55.530
and polyline [INAUDIBLE].

00:24:55.530 --> 00:24:56.780
Thank you.

00:24:59.360 --> 00:25:00.990
JAN-FELIX SCHMAKEIT:
Yeah, thanks Tony.

00:25:00.990 --> 00:25:03.180
That looks really quite cool.

00:25:03.180 --> 00:25:03.730
Yeah.

00:25:03.730 --> 00:25:07.150
So now that we have a few things
on the map, let's talk

00:25:07.150 --> 00:25:09.540
about animating the camera.

00:25:09.540 --> 00:25:11.550
We have an example here, a
little demo, that shows you

00:25:11.550 --> 00:25:13.680
some of the features
that you can use.

00:25:13.680 --> 00:25:16.490
This is, again, straight
from the API demo.

00:25:16.490 --> 00:25:19.280
So basically, you can
go back and forth

00:25:19.280 --> 00:25:20.690
between Sidney and Bondi.

00:25:20.690 --> 00:25:22.250
And the Camera animates.

00:25:22.250 --> 00:25:23.470
So we're changing the

00:25:23.470 --> 00:25:24.680
orientation, change the rotation.

00:25:24.680 --> 00:25:26.485
We're changed the tilt.

00:25:26.485 --> 00:25:27.610
You can zoom in and zoom out.

00:25:27.610 --> 00:25:29.610
And everything is animated.

00:25:29.610 --> 00:25:31.390
But if you don't want
animations, you can turn them

00:25:31.390 --> 00:25:31.900
off as well.

00:25:31.900 --> 00:25:34.550
So you can jump straight to
a particular location.

00:25:34.550 --> 00:25:37.190
And that's what we're going
to talk about next.

00:25:37.190 --> 00:25:40.500
So if you go to the
next slide--

00:25:40.500 --> 00:25:41.690
so we're moving the camera.

00:25:41.690 --> 00:25:43.760
So there are two ways
of doing it.

00:25:43.760 --> 00:25:46.010
So either you can animate
the camera.

00:25:46.010 --> 00:25:47.500
Or you can move the camera.

00:25:47.500 --> 00:25:50.490
And animating means the camera
actually moves from point A to

00:25:50.490 --> 00:25:52.660
point B. So it's animated.

00:25:52.660 --> 00:25:57.270
And to do that you have to use
the animateCamera method on a

00:25:57.270 --> 00:25:58.530
Google Maps object.

00:25:58.530 --> 00:26:00.950
And basically you supply
a CameraUpdate.

00:26:00.950 --> 00:26:02.750
That's mandatory.

00:26:02.750 --> 00:26:04.960
And the CameraUpdate basically
says, this where the Camera

00:26:04.960 --> 00:26:06.400
should point at next.

00:26:06.400 --> 00:26:10.390
And we'll talk about
that in a second.

00:26:10.390 --> 00:26:11.920
The next thing--

00:26:11.920 --> 00:26:13.650
you can supply its duration.

00:26:13.650 --> 00:26:16.760
So we can say, OK, how long
should the animation last for?

00:26:16.760 --> 00:26:18.903
And you can register a Callback,
so you're notified

00:26:18.903 --> 00:26:21.760
when the animation's cancelled
or is finished.

00:26:21.760 --> 00:26:24.080
But if you don't want
animations, you can also move

00:26:24.080 --> 00:26:24.450
the Camera.

00:26:24.450 --> 00:26:25.900
That's in the next slide.

00:26:25.900 --> 00:26:28.720
So we can basically say,
on my Google Maps

00:26:28.720 --> 00:26:30.570
object, move the Camera.

00:26:30.570 --> 00:26:32.180
And all you have to supply
there is just the

00:26:32.180 --> 00:26:34.035
CameraUpdate, which tells
you where the Camera is

00:26:34.035 --> 00:26:35.170
going to point at.

00:26:35.170 --> 00:26:37.120
So if you go to the
next slide--

00:26:37.120 --> 00:26:40.100
let's talk about and
these CameraUpdate

00:26:40.100 --> 00:26:40.990
objects a bit more.

00:26:40.990 --> 00:26:46.670
So basically, a CameraUpdate
object tells Google Maps how

00:26:46.670 --> 00:26:49.780
the Camera should move and
what the Camera point at.

00:26:49.780 --> 00:26:52.290
At to create one of these,
you just use a

00:26:52.290 --> 00:26:54.080
CameraUpdateFactory.

00:26:54.080 --> 00:26:56.370
And basically, there are a
couple of methods you can use

00:26:56.370 --> 00:26:58.300
to create one of
these objects.

00:26:58.300 --> 00:27:00.840
So, for example, if you just
want to change the target--

00:27:00.840 --> 00:27:05.040
so what the map pointing at,
what the center of the map is.

00:27:05.040 --> 00:27:07.060
You can use the new
LatLng method.

00:27:07.060 --> 00:27:09.960
You can just say, OK, point
to this LatLng.

00:27:09.960 --> 00:27:13.420
If you have a couple of points
you want to have on the map,

00:27:13.420 --> 00:27:15.760
you can use the LatLngBounds
method, and basically just

00:27:15.760 --> 00:27:18.450
supply a list of LatLng
positions.

00:27:18.450 --> 00:27:22.480
And the CameraUpdate makes sure
that all these points are

00:27:22.480 --> 00:27:24.080
part of the Camera.

00:27:24.080 --> 00:27:26.720
You can specify a LatLng
and a Zoom level.

00:27:26.720 --> 00:27:28.340
You can also scroll the map.

00:27:28.340 --> 00:27:31.540
So here, you specify the number
of pixels you want to

00:27:31.540 --> 00:27:32.250
scroll over a map.

00:27:32.250 --> 00:27:34.700
And that's animated, the
scroll, if you use the

00:27:34.700 --> 00:27:36.300
animateCamera method.

00:27:36.300 --> 00:27:37.940
You can zoom in or zoom out.

00:27:37.940 --> 00:27:40.780
And it basically means zoom
in one Zoom level.

00:27:40.780 --> 00:27:42.110
So you don't specify how much
you want to zoom in

00:27:42.110 --> 00:27:43.000
by or zoom out by.

00:27:43.000 --> 00:27:46.620
You just say zoom in or zoom
out, just like you already

00:27:46.620 --> 00:27:48.862
pressed one of plus
or minus buttons

00:27:48.862 --> 00:27:50.810
that you've seen before.

00:27:50.810 --> 00:27:53.530
You can also use zoomBy
and zoomTo.

00:27:53.530 --> 00:27:56.870
And basically zoomBy means,
OK, and zoom by

00:27:56.870 --> 00:27:57.620
this many Zoom levels.

00:27:57.620 --> 00:28:02.770
So zoom by 3.5 Zoom levels or
10 or something like that.

00:28:02.770 --> 00:28:06.140
Or you can also specify just
a Zoom level, rather than

00:28:06.140 --> 00:28:07.450
specifying anything else.

00:28:07.450 --> 00:28:11.320
And that's how you create one of
these CameraUpdate objects

00:28:11.320 --> 00:28:15.450
that you then use for the
animate or moveCamera methods.

00:28:15.450 --> 00:28:18.390
And here, on the next slide, we
have a few simple examples.

00:28:18.390 --> 00:28:21.220
So if you want to move the
Camera to Sidney-- so we want

00:28:21.220 --> 00:28:23.980
to keep its current orientation
then, its tilt and

00:28:23.980 --> 00:28:25.610
Zoom level--

00:28:25.610 --> 00:28:25.830
oh, sorry.

00:28:25.830 --> 00:28:27.470
In this case, we're changing
the Zoom level as well.

00:28:27.470 --> 00:28:29.830
So if you want to move
the Camera--

00:28:29.830 --> 00:28:35.210
we basically called the new
LatLng Zoom Method on the

00:28:35.210 --> 00:28:36.650
CameraUpdateFactory.

00:28:36.650 --> 00:28:39.370
And you have to specify a LatLng
object, in this case

00:28:39.370 --> 00:28:41.200
that's the center of Sydney.

00:28:41.200 --> 00:28:44.230
We can also specify Zoom level
because we are using LatLng

00:28:44.230 --> 00:28:45.780
Zoom Method.

00:28:45.780 --> 00:28:48.780
And what we're doing is-- we
basically go to our Maps

00:28:48.780 --> 00:28:52.280
object and say move Camera, and
here's our Camera update.

00:28:52.280 --> 00:28:54.780
And then the Cameras move
there straightaway.

00:28:54.780 --> 00:28:57.000
There's [INAUDIBLE].

00:28:57.000 --> 00:28:59.325
If you want to animate it--
so here's an example.

00:28:59.325 --> 00:29:00.290
We're using--

00:29:00.290 --> 00:29:03.660
this time we're using the Zoom
In, Zoom In CameraUpdate.

00:29:03.660 --> 00:29:06.450
We are basically zooming
in one Zoom level.

00:29:06.450 --> 00:29:08.770
And all we have to do is, again,
on you Google Maps

00:29:08.770 --> 00:29:12.320
object, called your Animate
Camera Method and just supply

00:29:12.320 --> 00:29:13.100
a CameraUpdate.

00:29:13.100 --> 00:29:17.860
In this case, we're using a Zoom
In CameraUpdate object

00:29:17.860 --> 00:29:21.090
that we're getting from the
CameraUpdateFactory.

00:29:21.090 --> 00:29:22.540
So in this case we're
not supplying a

00:29:22.540 --> 00:29:25.360
length or anything else.

00:29:25.360 --> 00:29:26.330
That's cool.

00:29:26.330 --> 00:29:28.710
But we actually have
full control

00:29:28.710 --> 00:29:30.300
over the entire Camera.

00:29:30.300 --> 00:29:31.920
So you can specify the target.

00:29:31.920 --> 00:29:33.440
You can specify the
bearings, or the

00:29:33.440 --> 00:29:34.720
orientation of the Camera.

00:29:34.720 --> 00:29:38.790
You can specify the tilt, so
what angle should the Camera

00:29:38.790 --> 00:29:39.650
be pointing at.

00:29:39.650 --> 00:29:40.850
And you can also specify Zoom.

00:29:40.850 --> 00:29:41.380
Level.

00:29:41.380 --> 00:29:44.423
So if you want to specify all
these things, just a few of

00:29:44.423 --> 00:29:45.010
these things.

00:29:45.010 --> 00:29:48.470
You have to use a
CameraPosition.Builder.

00:29:48.470 --> 00:29:51.230
And the idea is-- you use a
CameraPosition.Builder to

00:29:51.230 --> 00:29:53.110
build a CameraPosition.

00:29:53.110 --> 00:29:56.500
And then you use the
CameraUpdateFactory to create

00:29:56.500 --> 00:29:57.530
a CameraUpdate.

00:29:57.530 --> 00:30:00.313
So the next slide, you will see
an example that makes it a

00:30:00.313 --> 00:30:01.730
bit more obvious.

00:30:01.730 --> 00:30:05.140
So the basic idea is first
recreate a CameraPosition.

00:30:05.140 --> 00:30:08.830
So we say, OK, using a
CameraPosition.Builder--

00:30:08.830 --> 00:30:10.660
and can chain all of these
statement together.

00:30:10.660 --> 00:30:11.700
That's quite nice.

00:30:11.700 --> 00:30:14.545
So first, we have to a target,
so what should the Camera be

00:30:14.545 --> 00:30:15.310
pointing at.

00:30:15.310 --> 00:30:16.546
You can specify Zoom level.

00:30:16.546 --> 00:30:18.635
You can specify the bearing,
the orientation.

00:30:18.635 --> 00:30:22.360
You can specify the
tilt, the angle.

00:30:22.360 --> 00:30:23.780
Then we just build the object.

00:30:23.780 --> 00:30:26.595
And so they're actually
are not all mandatory.

00:30:26.595 --> 00:30:28.620
So you can specify just
a few of them.

00:30:28.620 --> 00:30:32.190
So if you want to specify just
a Zoom level or just bearing

00:30:32.190 --> 00:30:34.480
or tilt or something, you
can do that as well.

00:30:34.480 --> 00:30:37.100
So we create our CameraPosition

00:30:37.100 --> 00:30:38.880
using the Build Method.

00:30:38.880 --> 00:30:42.430
And then we basically just
pass that CameraPosition

00:30:42.430 --> 00:30:45.720
object to a CameraUpdateFactory
method.

00:30:45.720 --> 00:30:48.830
So in this case, the method is
called new CameraPosition.

00:30:48.830 --> 00:30:51.640
And all you have to do is supply
that object into the

00:30:51.640 --> 00:30:53.030
new CameraPosition method.

00:30:53.030 --> 00:30:56.270
You get a CameraUpdate back that
you can just use in your

00:30:56.270 --> 00:30:58.780
animateCamera or your
moveCamera method.

00:30:58.780 --> 00:30:59.730
That sounds really confusing.

00:30:59.730 --> 00:31:02.220
But it's actually not too bad
when you think about it.

00:31:02.220 --> 00:31:04.670
You have to try the
CameraPosition, create a

00:31:04.670 --> 00:31:06.090
CameraUpdate from
the Position.

00:31:06.090 --> 00:31:08.560
And then you can use it to
animate or move the Camera.

00:31:11.190 --> 00:31:13.350
So now we're now animating
the Camera.

00:31:13.350 --> 00:31:15.560
But we're also--

00:31:15.560 --> 00:31:17.820
sometimes you're interested to
know when the animation is

00:31:17.820 --> 00:31:21.640
finished or when the animation
is interrupted.

00:31:21.640 --> 00:31:26.820
And if you want to use those
features, you have to register

00:31:26.820 --> 00:31:28.310
a CancelableCallback.

00:31:28.310 --> 00:31:31.800
And the basic idea is you create
one of these CallBacks.

00:31:31.800 --> 00:31:34.760
You have an unfinished and
un-cancelled method--

00:31:34.760 --> 00:31:36.520
sorry, unfinished and
un-cancelled.

00:31:36.520 --> 00:31:38.970
And that code when the animation
is interrupted or

00:31:38.970 --> 00:31:40.390
when the animation
is finished.

00:31:40.390 --> 00:31:43.490
And you just have to supply
that Callback when you

00:31:43.490 --> 00:31:45.260
actually fire-off
the animation.

00:31:45.260 --> 00:31:47.596
And when you use the
animateCamera method, you have

00:31:47.596 --> 00:31:48.900
to supply your CameraUpdate.

00:31:48.900 --> 00:31:50.730
And you can also supply
the Callback there.

00:31:50.730 --> 00:31:54.750
That way you get notified when
the animation is finished or

00:31:54.750 --> 00:31:57.220
is interrupted.

00:31:57.220 --> 00:31:58.220
Yeah.

00:31:58.220 --> 00:32:02.570
That's just about Camera
animations.

00:32:02.570 --> 00:32:05.940
And we make quite heavy use of
that for the Santa Tracker

00:32:05.940 --> 00:32:06.720
application.

00:32:06.720 --> 00:32:09.596
So if you want to find out a bit
more about how we use some

00:32:09.596 --> 00:32:12.630
of these features, have a to
look at the GDL Santa Tracker

00:32:12.630 --> 00:32:13.300
Android session.

00:32:13.300 --> 00:32:15.300
So it's quite interesting.

00:32:15.300 --> 00:32:19.310
So let's talk about
makers a bit more.

00:32:19.310 --> 00:32:23.775
So a marker basically
specifies a

00:32:23.775 --> 00:32:25.040
single point on a map.

00:32:25.040 --> 00:32:26.360
So think about it like a pin.

00:32:26.360 --> 00:32:28.760
You put a pin on a
map somewhere.

00:32:28.760 --> 00:32:30.730
On the next slide, you
can see some of the

00:32:30.730 --> 00:32:33.050
properties you can define.

00:32:33.050 --> 00:32:35.940
So we've seen the
position before.

00:32:35.940 --> 00:32:38.900
So you have to say where the
marker should be, obviously.

00:32:38.900 --> 00:32:40.800
You can specify the
title and snippet.

00:32:40.800 --> 00:32:42.820
That's what's used for the
default InfoWindow

00:32:42.820 --> 00:32:44.590
implementation.

00:32:44.590 --> 00:32:47.230
You can also specify whether
it's draggable or not.

00:32:47.230 --> 00:32:49.720
That means you can pick
up the marker from the

00:32:49.720 --> 00:32:50.910
map and move it around.

00:32:50.910 --> 00:32:53.510
And you have an example of
that a bit later on.

00:32:53.510 --> 00:32:56.910
You can make a marker visible
or invisible.

00:32:56.910 --> 00:32:59.650
And then we have the Icon.

00:32:59.650 --> 00:33:03.390
So you can actually change the
Icon that the marker has, so

00:33:03.390 --> 00:33:04.360
basically the image.

00:33:04.360 --> 00:33:08.530
So you can specify a different
image you want to use for the

00:33:08.530 --> 00:33:09.280
marker instead.

00:33:09.280 --> 00:33:15.220
And if you use different Icons,
you also probably want

00:33:15.220 --> 00:33:16.740
to look at the Anchor.

00:33:16.740 --> 00:33:21.830
And the Anchor basically says
how is the image placed in

00:33:21.830 --> 00:33:23.950
relation to the position
that's specified.

00:33:23.950 --> 00:33:25.362
Because it's right on
top, bit to the left

00:33:25.362 --> 00:33:26.360
and bit to the right.

00:33:26.360 --> 00:33:28.770
And we have an example
of that as well.

00:33:28.770 --> 00:33:33.980
So let's talk about custom
marker Icons first.

00:33:33.980 --> 00:33:36.320
Because I think that's
quite interesting.

00:33:36.320 --> 00:33:39.740
So an Icon actually comes
from a BitmapDiscriptor.

00:33:39.740 --> 00:33:40.500
So it's not just a Bitmap.

00:33:40.500 --> 00:33:42.190
It's a BitmapDiscriptor.

00:33:42.190 --> 00:33:44.440
And to get one of these,
you have to use a

00:33:44.440 --> 00:33:48.960
BitmapDiscriptorFactory, so
another Factory method with

00:33:48.960 --> 00:33:50.130
which you can use.

00:33:50.130 --> 00:33:52.650
So you can use a
default marker.

00:33:52.650 --> 00:33:55.290
So defaultMarker is basically
the standard marker you've

00:33:55.290 --> 00:33:56.150
seen on the map.

00:33:56.150 --> 00:33:58.830
We have an example on
the next slide.

00:33:58.830 --> 00:34:00.830
You can load it in
from an Asset.

00:34:00.830 --> 00:34:03.200
You can load it from
a direct Bitmap, if

00:34:03.200 --> 00:34:04.190
you've generated it.

00:34:04.190 --> 00:34:05.540
You can get it from a file.

00:34:05.540 --> 00:34:08.000
Or you can just use it from
the resource, using the

00:34:08.000 --> 00:34:12.320
standard Android resource
folders that you can use.

00:34:12.320 --> 00:34:17.500
So on the next slide, you can
see a sample implementation

00:34:17.500 --> 00:34:19.610
using the default marker.

00:34:19.610 --> 00:34:22.350
So if you just use a default
marker icon, you just say--

00:34:22.350 --> 00:34:23.825
OK, here's a new
marker object.

00:34:23.825 --> 00:34:26.920
Here's the marker options, and
here's the position, and you

00:34:26.920 --> 00:34:29.610
don't specify anything else,
you're going get a red marker

00:34:29.610 --> 00:34:32.530
there on the map.

00:34:32.530 --> 00:34:36.659
But the defaultMarker Factory
method from the

00:34:36.659 --> 00:34:38.770
BitmapDiscriptorFactory is
actually quite smart.

00:34:38.770 --> 00:34:41.659
So you can actually specify the
color you want for your

00:34:41.659 --> 00:34:42.420
default marker.

00:34:42.420 --> 00:34:46.429
So you don't necessarily have
to always implement your own

00:34:46.429 --> 00:34:48.889
Bitmaps or your own Icons.

00:34:48.889 --> 00:34:51.219
You might even just be able
to take advantage of this.

00:34:51.219 --> 00:34:53.810
In this case here,
we've specified--

00:34:53.810 --> 00:34:55.530
we've added a blue maker.

00:34:55.530 --> 00:34:56.429
So you just say--

00:34:56.429 --> 00:34:59.880
OK, which hue value do
you want to use?

00:34:59.880 --> 00:35:03.250
So if you want to specify
a value, a color value.

00:35:03.250 --> 00:35:08.100
You just use the
BitmapDiscriptorFactory.Default

00:35:08.100 --> 00:35:09.020
marker method.

00:35:09.020 --> 00:35:13.130
And there you can specify a
color between zero and 360.

00:35:13.130 --> 00:35:16.170
And that's what's then
used for the Icon.

00:35:19.700 --> 00:35:22.340
But a bit more interesting
is even you can

00:35:22.340 --> 00:35:24.250
add your own image.

00:35:24.250 --> 00:35:26.400
So as I said before, you
get it from a resource.

00:35:26.400 --> 00:35:27.690
You can load it from
the assets.

00:35:27.690 --> 00:35:29.250
You can get it from a file.

00:35:29.250 --> 00:35:31.580
You can get it a Bitmap.

00:35:31.580 --> 00:35:34.120
And here's an example
where we load an

00:35:34.120 --> 00:35:37.980
image in from the resources.

00:35:37.980 --> 00:35:39.450
So we basically have
a drawable.

00:35:39.450 --> 00:35:40.170
It's called--

00:35:40.170 --> 00:35:41.610
It's just an arrow here.

00:35:41.610 --> 00:35:42.475
And we use the BitmapDiscriptor

00:35:42.475 --> 00:35:47.040
Factory.fromResource method
to load that in.

00:35:47.040 --> 00:35:49.870
And that's quite easy.

00:35:49.870 --> 00:35:51.670
But there's an issue
with that.

00:35:51.670 --> 00:35:54.050
Because custom--

00:35:54.050 --> 00:35:59.230
these images look and
behave differently

00:35:59.230 --> 00:36:00.770
from the default marker.

00:36:00.770 --> 00:36:02.990
So you might have to
specify an anchor.

00:36:02.990 --> 00:36:07.390
So an anchor basically says,
OK, in relation to the

00:36:07.390 --> 00:36:08.460
position of the marker--

00:36:08.460 --> 00:36:11.030
So will that long position
be specified?

00:36:11.030 --> 00:36:13.470
Where should we place
the image?

00:36:13.470 --> 00:36:14.580
So by default--

00:36:14.580 --> 00:36:16.900
if you think back to the default
marker, you have pin

00:36:16.900 --> 00:36:19.110
that the kind of points to
a position on the map.

00:36:19.110 --> 00:36:21.830
And when the marker actually
touches the map, it's at the

00:36:21.830 --> 00:36:23.310
bottom center.

00:36:23.310 --> 00:36:27.210
So at the bottom and 50% from
on left, in the center.

00:36:27.210 --> 00:36:31.190
And if you want to specify your
own anchor, what you have

00:36:31.190 --> 00:36:34.470
to do is you have to specify
the ratio of where

00:36:34.470 --> 00:36:35.790
it should be placed.

00:36:35.790 --> 00:36:38.300
So we have u and v--

00:36:38.300 --> 00:36:40.342
very easy to have to specify.

00:36:40.342 --> 00:36:42.180
And this is coming from the
ratio of the image.

00:36:42.180 --> 00:36:45.970
So 0,0 is the top left.

00:36:45.970 --> 00:36:47.700
And then 1,1 is the
bottom right.

00:36:47.700 --> 00:36:50.770
And here's an example that
shows you how you can use

00:36:50.770 --> 00:36:51.420
those values.

00:36:51.420 --> 00:36:54.960
So the top right, for example,
is this 1,0.

00:36:54.960 --> 00:36:56.570
And here's an example
that I put together.

00:36:56.570 --> 00:37:00.900
It shows you the impact
of these anchor values

00:37:00.900 --> 00:37:02.320
and what they do.

00:37:02.320 --> 00:37:06.580
So we're using a default marker
here, just a stock

00:37:06.580 --> 00:37:07.030
[INAUDIBLE] marker.

00:37:07.030 --> 00:37:08.970
But we're changing where
it's anchored

00:37:08.970 --> 00:37:12.280
to the LatLng position.

00:37:12.280 --> 00:37:15.730
So the default is .5 and 1.

00:37:15.730 --> 00:37:17.850
So that's the bottom center.

00:37:17.850 --> 00:37:19.940
And as you can see, that's
exactly where it's

00:37:19.940 --> 00:37:21.630
touching the map.

00:37:21.630 --> 00:37:25.090
And on the image you see, you
can see the actual latitude

00:37:25.090 --> 00:37:27.280
and longitude we've specified.

00:37:27.280 --> 00:37:30.980
That's the blue circle.

00:37:30.980 --> 00:37:34.600
So if you make u and v both
zero, which means we're

00:37:34.600 --> 00:37:39.710
entering the icon on the top
left, you can see exactly

00:37:39.710 --> 00:37:40.790
what's happened here, right?

00:37:40.790 --> 00:37:43.930
So the image, the icon is
actually anchored to the

00:37:43.930 --> 00:37:45.770
position from the top left.

00:37:45.770 --> 00:37:49.060
And if you put a smack bang in
the middle, so 0.5 and 0.5,

00:37:49.060 --> 00:37:51.690
it's drawn right on top,
right on top of the

00:37:51.690 --> 00:37:52.820
latitude and longitude.

00:37:52.820 --> 00:37:55.130
And then here's a bit
offset to the right.

00:37:55.130 --> 00:37:57.380
I mean 0.2 and 0.7.

00:37:57.380 --> 00:38:00.430
So you can see, so if you take
advantage of this feature of

00:38:00.430 --> 00:38:03.250
having your own images, you
should be quite careful to

00:38:03.250 --> 00:38:06.470
make sure that the marker
is actually drawn

00:38:06.470 --> 00:38:07.560
at the correct spot.

00:38:07.560 --> 00:38:09.070
And especially if
you move around.

00:38:12.390 --> 00:38:15.450
So let's talk about
draggable markers.

00:38:15.450 --> 00:38:17.550
So you can actually pick
up a marker and

00:38:17.550 --> 00:38:19.950
actually move it around.

00:38:19.950 --> 00:38:24.470
So when you set a marker as
being draggable, you get a few

00:38:24.470 --> 00:38:26.940
events back that tell if the
marker's been picked up, if

00:38:26.940 --> 00:38:28.470
the maker has been moved.

00:38:28.470 --> 00:38:29.510
And that's what we're
doing here.

00:38:29.510 --> 00:38:32.920
So again, this is coming from
the Maps API demo, if you want

00:38:32.920 --> 00:38:34.160
to have a look at this.

00:38:34.160 --> 00:38:37.350
So this is actually
really easy to do.

00:38:37.350 --> 00:38:39.240
So the next slide, you
can see some code.

00:38:39.240 --> 00:38:43.640
So the basic idea is you have to
make the marker draggable.

00:38:43.640 --> 00:38:45.870
So there's a set draggable
method that you

00:38:45.870 --> 00:38:47.000
have to set to true.

00:38:47.000 --> 00:38:50.880
Or you can specify it when
you create the marker.

00:38:50.880 --> 00:38:54.970
And then all you have to do is,
you have to implement the

00:38:54.970 --> 00:38:56.370
OnMarkerDragListener.

00:38:56.370 --> 00:39:00.710
which as the name suggests it
gets Callbacks when you move

00:39:00.710 --> 00:39:01.490
the marker.

00:39:01.490 --> 00:39:05.730
You have to actually register
the DragListener.

00:39:05.730 --> 00:39:08.590
So on your Google maps
object, just say set

00:39:08.590 --> 00:39:09.320
OnDirectMarkerListener.

00:39:09.320 --> 00:39:11.850
And you just specify
the object.

00:39:11.850 --> 00:39:13.150
And then you just listen
for events.

00:39:13.150 --> 00:39:15.850
So there are three events
you get back.

00:39:15.850 --> 00:39:20.240
So you get a Callback when the
the user has started moving

00:39:20.240 --> 00:39:22.770
the markers, do dragging the
maker across the map.

00:39:22.770 --> 00:39:26.950
You get a Callback when the user
has finished when he's

00:39:26.950 --> 00:39:30.506
taken the finger off the screen
and the marker has been

00:39:30.506 --> 00:39:31.400
placed somewhere.

00:39:31.400 --> 00:39:32.720
And you also get drag events.

00:39:32.720 --> 00:39:36.000
So you know exactly where the
marker is as the marker moves

00:39:36.000 --> 00:39:36.910
over the map.

00:39:36.910 --> 00:39:39.690
So if you want to find out where
the marker actually is

00:39:39.690 --> 00:39:42.800
as it's moving around, all you
have to do is just [INAUDIBLE]

00:39:42.800 --> 00:39:44.340
getPosition method
on your marker.

00:39:44.340 --> 00:39:48.710
And that way, you know
where it is on a map.

00:39:48.710 --> 00:39:51.906
And yeah-- that should give you
enough information to get

00:39:51.906 --> 00:39:53.860
started with draggable
markers.

00:39:53.860 --> 00:39:54.980
And yeah--

00:39:54.980 --> 00:39:58.540
that's all we have
for this week.

00:39:58.540 --> 00:40:00.530
So you've learned a bit
about InfoWindows.

00:40:00.530 --> 00:40:05.360
You've learned about polylines
and [INAUDIBLE] on Android.

00:40:05.360 --> 00:40:08.260
On a map, you've talked about
talked about markers in a bit

00:40:08.260 --> 00:40:09.670
more detail and draggable
markers.

00:40:09.670 --> 00:40:10.430
So, yeah.

00:40:10.430 --> 00:40:13.110
Thanks.

00:40:13.110 --> 00:40:15.900
ANKUR KOTWEL: Thanks
Jan-Felix and Tony.

00:40:15.900 --> 00:40:18.680
So we do have a couple questions
that have be

00:40:18.680 --> 00:40:19.750
submitted on moderator.

00:40:19.750 --> 00:40:24.510
But given that we have a couple
people here that have

00:40:24.510 --> 00:40:28.950
joined the Hangout, let's give
them an opportunity to ask

00:40:28.950 --> 00:40:31.090
questions first.

00:40:31.090 --> 00:40:33.390
So we have Linden and Gevin.

00:40:36.820 --> 00:40:38.880
And if either of you are
talking right now,

00:40:38.880 --> 00:40:40.240
we can't hear you.

00:40:42.880 --> 00:40:44.390
Or maybe they're just shy.

00:40:44.390 --> 00:40:45.960
And that's not a problem.

00:40:45.960 --> 00:40:49.505
What we can do is go to the
moderator questions.

00:40:49.505 --> 00:40:51.710
So let me just bring those up.

00:40:51.710 --> 00:40:57.170
And here we are.

00:40:57.170 --> 00:40:59.310
OK.

00:40:59.310 --> 00:41:01.790
So first question
comes from Max.

00:41:01.790 --> 00:41:04.960
I need to draw a single polyline
with a colored

00:41:04.960 --> 00:41:07.660
gradient onto the map.

00:41:07.660 --> 00:41:11.680
API version two does
allow only to set a

00:41:11.680 --> 00:41:13.400
color, a single color.

00:41:13.400 --> 00:41:16.370
Do I need to create a custom
TileProvider and do the

00:41:16.370 --> 00:41:17.860
drawing on my own?

00:41:17.860 --> 00:41:23.610
How can I project getTile xy
Zoom parameters to GeoPoints.

00:41:23.610 --> 00:41:27.020
And Tony, I believe you
looked into this one.

00:41:27.020 --> 00:41:28.130
TONY CHAN: Yeah, sure.

00:41:28.130 --> 00:41:34.480
So basically, for what you're
trying to achieve, I think

00:41:34.480 --> 00:41:38.420
TileProvider is probably
not the right class

00:41:38.420 --> 00:41:39.370
you should look at.

00:41:39.370 --> 00:41:40.680
I think--

00:41:40.680 --> 00:41:45.880
I suggest you take a look at
the ground overlay class.

00:41:45.880 --> 00:41:53.520
And usually that's how people
use this class that achieve

00:41:53.520 --> 00:41:56.600
the effect you're
talking about.

00:41:56.600 --> 00:41:58.970
So you can draw in a Bitmap.

00:41:58.970 --> 00:42:05.590
And then add the bitmap to the
overly position and then

00:42:05.590 --> 00:42:07.910
overlay that on the map.

00:42:07.910 --> 00:42:12.850
So with the ground overlay, you
don't need to worry about

00:42:12.850 --> 00:42:15.710
all the projection
coordinates.

00:42:15.710 --> 00:42:20.215
So in the ground overlay
class, there are LatLng

00:42:20.215 --> 00:42:25.500
parameters you can satisfy
to specify the

00:42:25.500 --> 00:42:26.750
position, the GeoPoints.

00:42:29.190 --> 00:42:29.870
ANKUR KOTWEL: Great.

00:42:29.870 --> 00:42:32.490
You gave us a great demo of
overlays, Tony, by hiding

00:42:32.490 --> 00:42:36.350
behind your overlays
then of your name.

00:42:36.350 --> 00:42:39.526
But thanks for that.

00:42:39.526 --> 00:42:39.968
TONY CHAN: OK.

00:42:39.968 --> 00:42:41.460
Sorry about that.

00:42:41.460 --> 00:42:42.030
ANKUR KOTWEL: That's
all right.

00:42:42.030 --> 00:42:44.854
We can see you now.

00:42:44.854 --> 00:42:46.810
All right, next question.

00:42:46.810 --> 00:42:50.550
Google Map View within a
ViewPager running on seemingly

00:42:50.550 --> 00:42:55.940
any Samsung device --and I'm
told any pre-ICS device--

00:42:55.940 --> 00:43:00.000
yields a lingering black visual
artifact when moving to

00:43:00.000 --> 00:43:02.400
another page.

00:43:02.400 --> 00:43:05.250
Any methods you know of to
mitigate this problem.

00:43:05.250 --> 00:43:09.740
And this is Linden, who's from
Bloody-strailia, which is

00:43:09.740 --> 00:43:11.790
another way of saying
Australia.

00:43:11.790 --> 00:43:14.100
So Linden--

00:43:14.100 --> 00:43:18.610
just a couple of quick
questions on this.

00:43:18.610 --> 00:43:21.880
So firstly you said
it was any Samsung

00:43:21.880 --> 00:43:23.270
and any pre-ICS device.

00:43:23.270 --> 00:43:25.600
But you said lingering black
visual artifact.

00:43:25.600 --> 00:43:29.180
Are you able to describe that
in a bit more detail.

00:43:29.180 --> 00:43:30.680
Because we went through
our bug trackers.

00:43:30.680 --> 00:43:33.980
And we couldn't find this
particular bug.

00:43:33.980 --> 00:43:38.500
So it would be great for us to
post this bug on the official

00:43:38.500 --> 00:43:41.090
bugs lists on Maps API version
two but also get some more

00:43:41.090 --> 00:43:42.660
Information, so we
can reproduce it.

00:43:45.790 --> 00:43:48.180
And Linden might not
have a microphone.

00:43:48.180 --> 00:43:53.260
He is typing away in the chat.

00:43:53.260 --> 00:43:56.180
So he said in a non-Nexus
Samsung device.

00:43:56.180 --> 00:43:58.350
So what we'll do is we'll
give it a shot.

00:43:58.350 --> 00:44:00.440
And see how we go.

00:44:00.440 --> 00:44:02.780
We haven't had a chance to
actually go ahead and write

00:44:02.780 --> 00:44:04.670
code to reproduce this issue.

00:44:04.670 --> 00:44:06.330
we read it pretty late.

00:44:06.330 --> 00:44:10.220
So if you grab the Hot Fan
and run it on a tablet in

00:44:10.220 --> 00:44:12.390
landscape, you'll see it.

00:44:12.390 --> 00:44:17.300
I assume Hot Fan is some open
source app or something along

00:44:17.300 --> 00:44:18.390
those lines.

00:44:18.390 --> 00:44:22.070
So all right, thanks for that.

00:44:22.070 --> 00:44:23.160
We will look into that.

00:44:23.160 --> 00:44:26.290
And we'll trying to get back
to in the next episode and

00:44:26.290 --> 00:44:28.130
also offline.

00:44:28.130 --> 00:44:31.910
But as I said, it's something
that I wasn't aware of.

00:44:31.910 --> 00:44:36.520
And when the three of us looked
on the bug list it

00:44:36.520 --> 00:44:41.160
wasn't immediately
obvious anyway.

00:44:41.160 --> 00:44:42.500
OK.

00:44:42.500 --> 00:44:45.030
Next question.

00:44:45.030 --> 00:44:46.850
Can we have free cookies?

00:44:46.850 --> 00:44:52.250
Sure I don't have to do that
over a Hangout but sure.

00:44:52.250 --> 00:44:54.280
Offline map fragments
with latitude

00:44:54.280 --> 00:44:56.690
and longitude attached.

00:44:56.690 --> 00:44:59.840
So currently, there is
no API for doing

00:44:59.840 --> 00:45:02.210
be the offline support.

00:45:02.210 --> 00:45:06.530
I'm not sure what the plans
around that are.

00:45:06.530 --> 00:45:09.760
Currently, what the team is
basically been doing is we

00:45:09.760 --> 00:45:11.340
version one out there.

00:45:11.340 --> 00:45:16.270
Well, the first release of the
vision two load the API.

00:45:16.270 --> 00:45:21.430
And a couple of developers,
Linden included, have been

00:45:21.430 --> 00:45:23.910
putting it through the paces
and reported a few bugs.

00:45:23.910 --> 00:45:26.410
So I believe that the next
release will mainly be a

00:45:26.410 --> 00:45:27.590
maintenance release.

00:45:27.590 --> 00:45:32.550
But we need to look into this.

00:45:32.550 --> 00:45:36.270
So I'll raise it with the
engineering team.

00:45:36.270 --> 00:45:39.220
As with these sorts of feature
requests, what we can do is we

00:45:39.220 --> 00:45:44.080
can let the engineers that
this is something that

00:45:44.080 --> 00:45:45.290
developers are asking for.

00:45:45.290 --> 00:45:48.560
And they can prioritize
the work accordingly.

00:45:48.560 --> 00:45:50.070
I'm sure they know
about it already.

00:45:50.070 --> 00:45:54.930
It's just a matter of how to
do it and when to do it.

00:45:54.930 --> 00:45:56.930
So yeah.

00:45:56.930 --> 00:45:59.140
Free cookies.

00:45:59.140 --> 00:46:01.900
Pop on down sometime and we'll
see what we can do for you.

00:46:06.070 --> 00:46:07.970
All right, last question.

00:46:11.630 --> 00:46:15.230
Is it possible to create a
shadow of the marker and its

00:46:15.230 --> 00:46:17.650
InfoWindow on the map?

00:46:17.650 --> 00:46:21.800
So actually, we sort of alluded
to the answer to this

00:46:21.800 --> 00:46:23.880
question in the presentation
itself.

00:46:23.880 --> 00:46:26.980
In that, if you have a custom
InfoWindow, you have to draw

00:46:26.980 --> 00:46:27.870
the shadow yourself.

00:46:27.870 --> 00:46:31.310
And you can do that as part of
the image, or as part of the

00:46:31.310 --> 00:46:36.040
view, rather, that you provide
when you set up a custom

00:46:36.040 --> 00:46:36.920
InfoWindow.

00:46:36.920 --> 00:46:40.320
And the same thing actually
applies to customer markers.

00:46:40.320 --> 00:46:44.220
When you specify the image for
the marker, you can go ahead

00:46:44.220 --> 00:46:49.086
and actually put a drop shadow
or whatever in the there.

00:46:49.086 --> 00:46:52.240
The library won't
do that for you.

00:46:52.240 --> 00:46:57.070
So just a transparent
image and put the

00:46:57.070 --> 00:46:58.960
shadow where need to.

00:46:58.960 --> 00:47:02.070
Jan-Felix or Tony, do you want
to add anything to that?

00:47:02.070 --> 00:47:02.370
JAN-FELIX SCHMAKEIT: No.

00:47:02.370 --> 00:47:05.810
That's the only you should keep
in mind is that if you

00:47:05.810 --> 00:47:08.460
add a shadow to a marker,
you always make

00:47:08.460 --> 00:47:09.370
the image a lot bigger.

00:47:09.370 --> 00:47:10.880
[INAUDIBLE] along with
the default marker.

00:47:10.880 --> 00:47:13.160
So you definitely have to make
sure it's still centered at

00:47:13.160 --> 00:47:15.923
the right spot, using some of
the tricks I was talking about

00:47:15.923 --> 00:47:16.790
at the presentation.

00:47:16.790 --> 00:47:21.940
Make sure you anchor it
at the right position

00:47:21.940 --> 00:47:23.070
ANKUR KOTWEL: Got you, thanks.

00:47:23.070 --> 00:47:26.910
Linden has also asked
another question.

00:47:26.910 --> 00:47:31.220
So given holding a reference to
a marker is a bad idea, is

00:47:31.220 --> 00:47:35.300
keeping tabs of hash code of
markers the best way to keep

00:47:35.300 --> 00:47:36.440
track of them?

00:47:36.440 --> 00:47:39.940
So you know which marker
go pressed.

00:47:39.940 --> 00:47:43.550
Sorry, InfoWindows
not markers.

00:47:43.550 --> 00:47:50.250
So I mean, Linden, the way I
would probably do this is use

00:47:50.250 --> 00:47:53.180
different listeners or some sort
of identifier to track

00:47:53.180 --> 00:47:58.730
within your InfoWindowListener
to work out

00:47:58.730 --> 00:48:01.140
which on got pressed.

00:48:01.140 --> 00:48:04.130
Having said that, Jan-Felix
anything else you want to add

00:48:04.130 --> 00:48:05.140
on top of that?

00:48:05.140 --> 00:48:07.430
JAN-FELIX SCHMAKEIT: Yeah, so we
actually had to do this for

00:48:07.430 --> 00:48:09.110
the Santa Tracker app as well.

00:48:09.110 --> 00:48:11.760
And basically we were
just keeping track

00:48:11.760 --> 00:48:12.680
of it the same way.

00:48:12.680 --> 00:48:14.650
And we have registered
a few listeners.

00:48:14.650 --> 00:48:19.150
And we basically just have
a tag for to each of the

00:48:19.150 --> 00:48:23.310
markers, so we know which
markers has been pressed.

00:48:23.310 --> 00:48:25.360
So at first you can only
register one listener.

00:48:25.360 --> 00:48:26.510
You can't have multiple
listeners.

00:48:26.510 --> 00:48:31.670
But if you listen for marker
kicks, so when you want

00:48:31.670 --> 00:48:35.510
display InfoWindow, and when
you dismiss the InfoWindow.

00:48:35.510 --> 00:48:37.250
So on InfoWindow click--

00:48:37.250 --> 00:48:39.600
that's probably the
way to do it.

00:48:39.600 --> 00:48:40.905
ANKUR KOTWEL: Did that
answer your question?

00:48:43.890 --> 00:48:45.460
Yep, he said cheers.

00:48:45.460 --> 00:48:48.810
All right, let me just do one
last refresh of the moderator.

00:48:51.450 --> 00:48:55.930
And it doesn't look we have
any new questions.

00:48:55.930 --> 00:48:58.660
So thanks very much
for watching.

00:48:58.660 --> 00:49:03.650
ANKUR KOTWEL: Ankur, before we
end the show, I want to answer

00:49:03.650 --> 00:49:06.500
one of the question asked
earlier in [INAUDIBLE]

00:49:06.500 --> 00:49:10.550
show about VPN support.

00:49:10.550 --> 00:49:13.530
It's a question asked
by Phung Lim.

00:49:13.530 --> 00:49:16.180
So let me repeat the
question here.

00:49:16.180 --> 00:49:21.850
So his question was Android 2.8
support IP set VPN using

00:49:21.850 --> 00:49:23.940
DSK [INAUDIBLE]

00:49:23.940 --> 00:49:26.490
pApn MSchat.

00:49:26.490 --> 00:49:28.840
But it is not in Android 4.8.

00:49:28.840 --> 00:49:30.010
Why is it removed?

00:49:30.010 --> 00:49:34.790
And is it possible implement
a VPN client which supports

00:49:34.790 --> 00:49:35.580
[INAUDIBLE]

00:49:35.580 --> 00:49:40.680
and MSchat or the support is
removed in the system level?

00:49:40.680 --> 00:49:45.630
So we don't always
have the answers.

00:49:45.630 --> 00:49:51.700
But most of the time, we try
very hard to try to get

00:49:51.700 --> 00:49:53.530
everyone answered.

00:49:53.530 --> 00:49:56.600
So we followed up with
the engineering team.

00:49:56.600 --> 00:50:00.590
And we get the following
answer.

00:50:00.590 --> 00:50:03.270
So one thing is that we haven't
changed anything

00:50:03.270 --> 00:50:06.900
related to authentication
protocols since 2.8.

00:50:06.900 --> 00:50:13.020
So our [INAUDIBLE] and chat is
supported in the system, then

00:50:13.020 --> 00:50:17.740
it will be still supported
latest images.

00:50:17.740 --> 00:50:23.730
In ICS, we do L2TP
only VPN support.

00:50:23.730 --> 00:50:32.560
But we also add three commonly
used IPsec VPN support.

00:50:32.560 --> 00:50:38.000
So if you experience something
like that [INAUDIBLE] and chat

00:50:38.000 --> 00:50:42.640
is not supported in a particular
device, there are a

00:50:42.640 --> 00:50:45.300
couple problem area
we can think of.

00:50:45.300 --> 00:50:49.550
One is the VPN server you're
connecting to actually doesn't

00:50:49.550 --> 00:50:52.510
support those protocols.

00:50:52.510 --> 00:50:59.300
Another responsibility is some
OEMs may took away such

00:50:59.300 --> 00:51:03.850
support in their OS images.

00:51:03.850 --> 00:51:08.960
So I hope that answers
your question, Phung.

00:51:08.960 --> 00:51:11.260
Thanks.

00:51:11.260 --> 00:51:12.620
ANKUR KOTWEL: Yeah,
thanks Tony.

00:51:12.620 --> 00:51:14.930
I'm glad you reminded me
that we were going

00:51:14.930 --> 00:51:16.260
to answer that question.

00:51:16.260 --> 00:51:20.440
So anyways, that concludes
the series that we had

00:51:20.440 --> 00:51:22.150
for the Maps API.

00:51:22.150 --> 00:51:27.060
So this was part two
of the maps series.

00:51:27.060 --> 00:51:29.820
But actually, and we're going
to add to the playlist.

00:51:29.820 --> 00:51:32.680
the Santa Tracker episode that
we did on how we build that

00:51:32.680 --> 00:51:40.120
app is basically like
part three.

00:51:40.120 --> 00:51:41.530
It's a little bit
more high level.

00:51:41.530 --> 00:51:43.400
There's not as much
code shown.

00:51:43.400 --> 00:51:47.780
But hopefully, as developers,
you're able to get some value

00:51:47.780 --> 00:51:51.440
out of it and see some of the
tricks that we employed and

00:51:51.440 --> 00:51:53.230
how we went about it.

00:51:53.230 --> 00:51:56.570
So we'll be back again soon
with another topic.

00:51:56.570 --> 00:51:59.510
And please do let us know
there's special areas that

00:51:59.510 --> 00:52:01.640
you'd like us to dive into.

00:52:01.640 --> 00:52:05.990
And we can prioritize those
suggestions as well.

00:52:05.990 --> 00:52:09.330
So thank you very much
for joining us.

00:52:09.330 --> 00:52:10.665
We'll see you next time.

00:52:10.665 --> 00:52:11.570
TONY CHAN: Thank you.

00:52:11.570 --> 00:52:13.520
JAN-FELIX SCHMAKEIT:
See you, thanks

