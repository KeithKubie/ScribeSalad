WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.248
[MUSIC PLAYING]

00:00:04.248 --> 00:00:06.670
[APPLAUSE]

00:00:06.670 --> 00:00:07.920
TIMOTHY JORDAN: Hi, everybody.

00:00:11.280 --> 00:00:13.457
Welcome to the Ubiquity
Dev Summit, day one.

00:00:13.457 --> 00:00:15.790
Before we get started, I
wanted to tell you a little bit

00:00:15.790 --> 00:00:17.690
about our code of conduct.

00:00:17.690 --> 00:00:20.730
We want everybody here to have
the best experience possible,

00:00:20.730 --> 00:00:22.960
and we value an
inclusive community.

00:00:22.960 --> 00:00:24.780
No matter your
background or experience,

00:00:24.780 --> 00:00:26.400
you're welcome at the summit.

00:00:26.400 --> 00:00:29.780
And we encourage you, therefore,
to be excellent to each other

00:00:29.780 --> 00:00:32.180
and know that we have
a zero tolerance policy

00:00:32.180 --> 00:00:34.560
for any harassment of any kind.

00:00:34.560 --> 00:00:36.650
Our code of conduct is
posted around the venue

00:00:36.650 --> 00:00:39.140
and on the website.

00:00:39.140 --> 00:00:39.640
All right.

00:00:39.640 --> 00:00:42.160
And with that, I'd like to
get the conversation started

00:00:42.160 --> 00:00:45.490
with a colleague who couldn't
be here in person today.

00:00:45.490 --> 00:00:49.247
[MUSIC PLAYING]

00:00:49.247 --> 00:00:49.830
VINT CERF: Hi.

00:00:49.830 --> 00:00:50.790
It's Vint Cerf.

00:00:50.790 --> 00:00:53.000
I'm Google's Chief
Internet Evangelist.

00:00:53.000 --> 00:00:57.427
And today, I want to rant
about the internet of things.

00:00:57.427 --> 00:00:59.010
You're going to hear
a lot about this.

00:00:59.010 --> 00:01:01.190
And from me, you're going
to hear several things.

00:01:01.190 --> 00:01:03.300
Specifically,
you're going to hear

00:01:03.300 --> 00:01:04.970
that things need to interwork.

00:01:04.970 --> 00:01:06.750
Nobody wants a
million different hubs

00:01:06.750 --> 00:01:09.460
that they have to configure
for each different product

00:01:09.460 --> 00:01:11.470
from each different
manufacturer.

00:01:11.470 --> 00:01:15.060
We're going to have to have some
international standards that

00:01:15.060 --> 00:01:19.540
will allow people to manage and
configure and control access

00:01:19.540 --> 00:01:20.900
to these devices.

00:01:20.900 --> 00:01:24.390
Which leads me to another point,
which has to do with security.

00:01:24.390 --> 00:01:27.580
It's important that these
devices be updatable so

00:01:27.580 --> 00:01:30.770
that bugs and mistakes that
might leave them vulnerable

00:01:30.770 --> 00:01:32.040
can be corrected.

00:01:32.040 --> 00:01:34.620
But that also means that
when the device ingests

00:01:34.620 --> 00:01:36.930
a new load of
software, it has to be

00:01:36.930 --> 00:01:40.590
able to make sure that that
particular load is legitimate.

00:01:40.590 --> 00:01:42.530
So we need to
digitally sign things.

00:01:42.530 --> 00:01:45.920
We need strong authentication
so that a device that's

00:01:45.920 --> 00:01:48.040
getting a new
software load knows

00:01:48.040 --> 00:01:52.150
where it came from and can
assume that it's a safe load

00:01:52.150 --> 00:01:53.750
to install.

00:01:53.750 --> 00:01:56.720
By the same token, I'm very
concerned about privacy.

00:01:56.720 --> 00:01:58.670
And the reason for
this should be obvious.

00:01:58.670 --> 00:02:00.270
There's a lot of
information that even

00:02:00.270 --> 00:02:02.690
sensors could collect,
like temperature sensors

00:02:02.690 --> 00:02:04.770
where you're sampling
every five minutes.

00:02:04.770 --> 00:02:06.920
After a while-- let's say
after several months--

00:02:06.920 --> 00:02:09.880
you might be able to figure out
how many people live in a home,

00:02:09.880 --> 00:02:13.290
which rooms do they occupy,
what is their typical schedule

00:02:13.290 --> 00:02:14.545
for coming and going.

00:02:14.545 --> 00:02:17.045
But on the other side of that,
suppose the house is on fire,

00:02:17.045 --> 00:02:18.930
and the fire department
comes and wants

00:02:18.930 --> 00:02:20.180
to know where is everybody.

00:02:20.180 --> 00:02:21.660
Some of them may be unconscious.

00:02:21.660 --> 00:02:24.290
So if there's a way to
tell who's in which room,

00:02:24.290 --> 00:02:26.510
or at least that
someone is in a room,

00:02:26.510 --> 00:02:28.220
that might turn out
to be a lifesaving

00:02:28.220 --> 00:02:29.520
piece of information.

00:02:29.520 --> 00:02:33.920
So we really need to make
sure that as we design

00:02:33.920 --> 00:02:37.390
these devices that are part
of this internet of things,

00:02:37.390 --> 00:02:39.560
we pay close attention
to interoperability,

00:02:39.560 --> 00:02:43.530
strong authentication, privacy,
and security and safety

00:02:43.530 --> 00:02:45.920
so that the users
will have confidence

00:02:45.920 --> 00:02:49.370
that the devices they
buy from us and others

00:02:49.370 --> 00:02:52.310
will, in fact, be things
that they can rely upon.

00:02:52.310 --> 00:02:54.760
That's a big burden on
everybody's shoulders.

00:02:54.760 --> 00:02:57.050
But it's a responsibility
and an obligation

00:02:57.050 --> 00:02:58.840
that we must undertake.

00:02:58.840 --> 00:03:02.090
Otherwise, no one will be
interested in buying and using

00:03:02.090 --> 00:03:05.000
the products that we
make and want to sell.

00:03:05.000 --> 00:03:06.600
So I hope you have
a great conference.

00:03:06.600 --> 00:03:08.400
I'm sorry I can't
be there with you.

00:03:08.400 --> 00:03:12.390
But I hope I'll
see you on the net.

00:03:12.390 --> 00:03:15.210
[APPLAUSE]

00:03:16.867 --> 00:03:18.950
TIMOTHY JORDAN: Thank you
to Vint Cerf for getting

00:03:18.950 --> 00:03:20.024
our conversation started.

00:03:20.024 --> 00:03:21.940
Now I'm going to continue
it with a little bit

00:03:21.940 --> 00:03:24.470
more detail in that context.

00:03:24.470 --> 00:03:25.987
Let's start with this question.

00:03:25.987 --> 00:03:28.070
Have any of you thought
about what the living room

00:03:28.070 --> 00:03:29.360
of the future will look like?

00:03:31.970 --> 00:03:32.780
Lots of yeses.

00:03:32.780 --> 00:03:33.880
Give me some ideas.

00:03:33.880 --> 00:03:35.560
AUDIENCE: I'll be
a couch potato.

00:03:35.560 --> 00:03:36.730
TIMOTHY JORDAN: I'll
be a couch potato.

00:03:36.730 --> 00:03:38.813
What will the living room
of the future look like?

00:03:38.813 --> 00:03:40.830
Any other?

00:03:40.830 --> 00:03:41.590
Yes.

00:03:41.590 --> 00:03:42.215
AUDIENCE: Apps.

00:03:42.215 --> 00:03:43.098
TIMOTHY JORDAN: Apps.

00:03:43.098 --> 00:03:44.389
AUDIENCE: It will be automated.

00:03:44.389 --> 00:03:46.675
TIMOTHY JORDAN: Automated.

00:03:46.675 --> 00:03:47.550
AUDIENCE: [INAUDIBLE]

00:03:51.082 --> 00:03:52.540
TIMOTHY JORDAN:
It'll be automated.

00:03:52.540 --> 00:03:55.260
It'll know your favorites
and your preferences.

00:03:55.260 --> 00:03:56.660
These are all great ideas.

00:03:56.660 --> 00:03:58.640
And it's interesting,
actually-- when I usually

00:03:58.640 --> 00:04:01.400
ask this question, people
focus on the technology.

00:04:01.400 --> 00:04:04.160
And I think that's
key for us to do.

00:04:04.160 --> 00:04:06.040
But here's what our
colleagues at Nest

00:04:06.040 --> 00:04:07.917
came up with when
their CEO, Tony Fadell,

00:04:07.917 --> 00:04:09.000
asked them the same thing.

00:04:12.480 --> 00:04:14.750
I really love this picture,
and I'll tell you why.

00:04:14.750 --> 00:04:15.990
It's a little messy.

00:04:15.990 --> 00:04:17.089
It's a little playful.

00:04:17.089 --> 00:04:20.094
But the most profound
thing is what it isn't.

00:04:20.094 --> 00:04:22.010
There aren't screens and
keyboards everywhere.

00:04:22.010 --> 00:04:24.870
You can hardly see
the technology at all.

00:04:24.870 --> 00:04:26.900
Instead, it fades
into the background,

00:04:26.900 --> 00:04:29.330
supporting the
users-- this family--

00:04:29.330 --> 00:04:31.710
in many subtle and
effective ways.

00:04:31.710 --> 00:04:33.770
So when you think about
ubiquitous computing

00:04:33.770 --> 00:04:36.470
or the internet of things,
don't think about technology

00:04:36.470 --> 00:04:39.750
getting in the way everywhere
or being overwhelming.

00:04:39.750 --> 00:04:42.250
Think of it blending in
and helping everywhere

00:04:42.250 --> 00:04:46.010
it makes sense and is
useful for your users.

00:04:46.010 --> 00:04:48.240
With that in mind, here's
three pillars for us

00:04:48.240 --> 00:04:50.520
to start our journey together.

00:04:50.520 --> 00:04:53.620
And it's been my experience that
the most successful companies

00:04:53.620 --> 00:04:56.000
that I've observed and
met in this space-- well,

00:04:56.000 --> 00:05:00.200
these are the three things that
they're most passionate about,

00:05:00.200 --> 00:05:03.310
the first of which
is interoperability.

00:05:03.310 --> 00:05:06.910
This is systems,
protocols, and IoT schemas

00:05:06.910 --> 00:05:10.320
that are based on open standards
and enable interoperability

00:05:10.320 --> 00:05:12.880
as well as modularity.

00:05:12.880 --> 00:05:15.730
The second is
security and privacy.

00:05:15.730 --> 00:05:17.570
And data control,
access control,

00:05:17.570 --> 00:05:19.950
and identity management
are fundamental,

00:05:19.950 --> 00:05:24.220
regardless of who made the
product or how users access it.

00:05:24.220 --> 00:05:26.580
And the last one
is human interface.

00:05:26.580 --> 00:05:29.300
This is all about
new paradigms for HCl

00:05:29.300 --> 00:05:32.210
that rely more on
natural metaphors.

00:05:32.210 --> 00:05:33.710
Let's dive into a
little more detail

00:05:33.710 --> 00:05:38.460
on each of these three pillars--
first, interoperability.

00:05:38.460 --> 00:05:41.720
Historically, engineering teams
have built their own solutions

00:05:41.720 --> 00:05:44.520
to solve their
own problems, each

00:05:44.520 --> 00:05:46.550
creating their own
proprietary protocols

00:05:46.550 --> 00:05:48.260
and further isolating
their devices

00:05:48.260 --> 00:05:50.330
from the rest of the world.

00:05:50.330 --> 00:05:54.240
However, if you have
common IoT protocols,

00:05:54.240 --> 00:05:55.780
not only does this
mean less work

00:05:55.780 --> 00:05:57.640
for the device
manufacturers and app

00:05:57.640 --> 00:06:00.930
developers who no longer have to
keep solving the same problems

00:06:00.930 --> 00:06:02.750
over and over
again, it also means

00:06:02.750 --> 00:06:04.940
that these devices
can talk to each other

00:06:04.940 --> 00:06:08.060
and app developers can
integrate multiple devices

00:06:08.060 --> 00:06:11.430
into their feature set.

00:06:11.430 --> 00:06:13.820
Next is security and privacy.

00:06:13.820 --> 00:06:16.260
This is all about having
everything be secure

00:06:16.260 --> 00:06:18.830
and giving users the
right insight and options

00:06:18.830 --> 00:06:20.780
to control their
experience as appropriate.

00:06:20.780 --> 00:06:22.830
In a little more
detail, what that means

00:06:22.830 --> 00:06:25.730
is hardware and software
makers should provide security

00:06:25.730 --> 00:06:29.900
and privacy by default, building
in essential platform features,

00:06:29.900 --> 00:06:32.150
like over-the-air updates.

00:06:32.150 --> 00:06:34.990
We need to build user
trust at every turn

00:06:34.990 --> 00:06:38.970
so that they're confident of
the security of their data.

00:06:38.970 --> 00:06:40.960
And we should provide
users with the controls

00:06:40.960 --> 00:06:43.290
to manage their digital
identity and data

00:06:43.290 --> 00:06:46.880
per sensor, per account,
per product, and per home.

00:06:46.880 --> 00:06:48.900
And finally, we
need to ask the user

00:06:48.900 --> 00:06:52.710
before sharing any data with
other devices or services.

00:06:52.710 --> 00:06:57.200
And of course, this
helps build user trust.

00:06:57.200 --> 00:06:59.495
The last pillar is
human interface.

00:06:59.495 --> 00:07:01.745
And this is all about new
paradigms for user interface

00:07:01.745 --> 00:07:04.260
and interaction design,
or you can think of it

00:07:04.260 --> 00:07:09.880
as a reliance on more very old
paradigms of natural interface.

00:07:09.880 --> 00:07:13.160
And a common pitfall here is
to build an app walled garden.

00:07:13.160 --> 00:07:17.120
Apps are important, and we'll
have them for some time yet.

00:07:17.120 --> 00:07:20.190
But think about
building a platform.

00:07:20.190 --> 00:07:21.950
And part of that is
through your app.

00:07:21.950 --> 00:07:25.000
And part of that is that
users can access their devices

00:07:25.000 --> 00:07:28.850
in a variety of other ways,
including physical interfaces

00:07:28.850 --> 00:07:30.170
and other apps and services.

00:07:33.920 --> 00:07:35.870
Also, here's some
design principles

00:07:35.870 --> 00:07:38.115
for a really great
user experience on IoT.

00:07:40.630 --> 00:07:43.930
First, the user experience
should be so simple

00:07:43.930 --> 00:07:45.680
that it feels effortless.

00:07:45.680 --> 00:07:48.240
In the long run, users
always prefer simplicity

00:07:48.240 --> 00:07:50.150
and reliability over features.

00:07:50.150 --> 00:07:52.890
And whatever user
problem you solve,

00:07:52.890 --> 00:07:54.720
make sure to focus
on that and never

00:07:54.720 --> 00:07:57.420
let anything get in
the way of that effort.

00:07:57.420 --> 00:07:59.170
A great example of
this is messaging.

00:07:59.170 --> 00:08:02.390
And you'll see this on
a variety of platforms.

00:08:02.390 --> 00:08:04.510
I, of course, love the
experience on Android Wear.

00:08:04.510 --> 00:08:06.410
In particular, I love
just being able to see

00:08:06.410 --> 00:08:08.890
the message on my watch
and be able to respond

00:08:08.890 --> 00:08:09.750
to it with voice.

00:08:09.750 --> 00:08:10.890
It's so simple.

00:08:10.890 --> 00:08:13.040
It just makes sense.

00:08:13.040 --> 00:08:14.180
The next one is contextual.

00:08:14.180 --> 00:08:18.740
Now, contextual is all
about being relevant.

00:08:18.740 --> 00:08:22.110
You want to take into
account the time, location,

00:08:22.110 --> 00:08:24.570
and activity the user is
involved in so you can provide

00:08:24.570 --> 00:08:27.310
them with the most useful
experience wherever

00:08:27.310 --> 00:08:29.250
and whenever it is.

00:08:29.250 --> 00:08:31.500
A great example of this is
you can imagine a shopping

00:08:31.500 --> 00:08:33.730
list, where the user
walks into the store,

00:08:33.730 --> 00:08:35.730
and the list just
comes up for them.

00:08:35.730 --> 00:08:39.020
And before they leave the store,
it reminds them of anything

00:08:39.020 --> 00:08:41.309
that they might have missed.

00:08:41.309 --> 00:08:43.240
In this case, you're
providing information

00:08:43.240 --> 00:08:48.860
and an experience for the
user before they ask for it.

00:08:48.860 --> 00:08:52.160
And finally, it
should be immediate.

00:08:52.160 --> 00:08:55.510
The experience should be so
fast that it feels immediate.

00:08:55.510 --> 00:08:57.270
Being contextual
can help with this,

00:08:57.270 --> 00:08:59.150
but it's also about
microinteractions.

00:08:59.150 --> 00:09:02.364
And remember, you're not trying
to distract or occupy the user.

00:09:02.364 --> 00:09:04.280
You just want to present
the right information

00:09:04.280 --> 00:09:06.120
right away so they can
get what they need and get

00:09:06.120 --> 00:09:06.911
on with their life.

00:09:06.911 --> 00:09:10.590
A great example of this is
voice commands on Android TV.

00:09:10.590 --> 00:09:13.330
I can just tell Android TV
what show I want to watch,

00:09:13.330 --> 00:09:15.490
and it shows me
that in my library.

00:09:15.490 --> 00:09:17.520
Or auto play and
queuing with Google

00:09:17.520 --> 00:09:20.372
Cast so the next episode just
comes up right away as I'm

00:09:20.372 --> 00:09:21.455
watching through a series.

00:09:24.020 --> 00:09:25.600
Here's the last
one-- extensible.

00:09:25.600 --> 00:09:27.100
Now, I've mentioned
this a few times

00:09:27.100 --> 00:09:28.730
today in a bunch
of different ways,

00:09:28.730 --> 00:09:30.050
because it's really important.

00:09:30.050 --> 00:09:32.990
You want to build your app
so that the experience is

00:09:32.990 --> 00:09:33.560
extensible.

00:09:33.560 --> 00:09:37.026
That means the user can get
to it wherever they'd like.

00:09:37.026 --> 00:09:38.900
And you want to build
that into your core app

00:09:38.900 --> 00:09:41.340
and overall experience
so that the user really

00:09:41.340 --> 00:09:43.450
has it at hand wherever
it makes sense for them.

00:09:43.450 --> 00:09:45.230
A great example
of this is music.

00:09:45.230 --> 00:09:48.010
Can you think of a
time in your life

00:09:48.010 --> 00:09:51.180
where you wouldn't want
access to your music?

00:09:51.180 --> 00:09:54.540
Whether that's on your phone,
going for a run, in your living

00:09:54.540 --> 00:09:59.250
room, or in your car, you
should be able to, as a user,

00:09:59.250 --> 00:10:00.980
have that music
experience in any

00:10:00.980 --> 00:10:02.710
of those contexts
in the way that it

00:10:02.710 --> 00:10:04.935
makes sense in that context.

00:10:07.910 --> 00:10:12.150
So these are our four principles
for UX design human interface

00:10:12.150 --> 00:10:14.160
that we can keep in
mind, keep in our pocket

00:10:14.160 --> 00:10:16.610
as we build in this new space.

00:10:16.610 --> 00:10:19.300
And with some more detail
about that-- building

00:10:19.300 --> 00:10:22.540
in this new space-- I'd like to
welcome to the stage Gayathri

00:10:22.540 --> 00:10:27.045
Rajan, Vice President of
Product at Brillo and Weave.

00:10:27.045 --> 00:10:28.530
GAYATHRI RAJAN:
Thank you, Timothy.

00:10:28.530 --> 00:10:31.500
[ALLPLAUSE]

00:10:33.490 --> 00:10:35.430
Hello, everyone.

00:10:35.430 --> 00:10:39.270
IoT is here, and it's pervasive.

00:10:39.270 --> 00:10:45.400
These things will soon outnumber
phones, tablets, and laptops.

00:10:45.400 --> 00:10:48.550
Or to put it another
way, in just five years,

00:10:48.550 --> 00:10:51.460
there will be 26 of
these smart devices

00:10:51.460 --> 00:10:53.250
for every human on the planet.

00:10:53.250 --> 00:10:54.880
So that's the good news.

00:10:54.880 --> 00:10:57.610
But there are
significant issues today

00:10:57.610 --> 00:11:01.500
that could hurt adoption of IoT.

00:11:01.500 --> 00:11:04.460
A survey conducted
on IoT executives

00:11:04.460 --> 00:11:06.770
highlighted that the top
barrier, the thing that they

00:11:06.770 --> 00:11:11.380
are most concerned about for IoT
adoption, is interoperability.

00:11:11.380 --> 00:11:14.760
There are simply too
many fragmented protocols

00:11:14.760 --> 00:11:18.060
and siloed ecosystems today.

00:11:18.060 --> 00:11:21.370
It's also important to note
that security concerns are

00:11:21.370 --> 00:11:23.840
a fast follow.

00:11:23.840 --> 00:11:26.100
And if you ask
consumers, they'll

00:11:26.100 --> 00:11:30.060
say they still don't
see the promised value.

00:11:30.060 --> 00:11:34.930
But where there are problems,
we and you see opportunity.

00:11:34.930 --> 00:11:37.490
The opportunity that
lies ahead for IoT

00:11:37.490 --> 00:11:39.970
is to rethink those
user experiences

00:11:39.970 --> 00:11:42.180
in fundamental ways.

00:11:42.180 --> 00:11:45.400
First, reimagine the
products themselves.

00:11:45.400 --> 00:11:48.600
Look at ways we can make the
devices themselves smarter

00:11:48.600 --> 00:11:51.330
with the power of the net.

00:11:51.330 --> 00:11:55.090
And second, choreograph
these experiences

00:11:55.090 --> 00:11:58.340
across ensembles of
objects and services

00:11:58.340 --> 00:12:01.505
so that, in concert, we can
create true user benefit.

00:12:04.280 --> 00:12:08.280
But in order-- I
forgot to do that.

00:12:11.750 --> 00:12:13.960
So as an example,
let's take something

00:12:13.960 --> 00:12:17.240
as utilitarian as
a washing machine.

00:12:17.240 --> 00:12:20.710
If we were to add connectivity
and the power of the net,

00:12:20.710 --> 00:12:22.620
you could reimagine
a smarter version

00:12:22.620 --> 00:12:26.010
that is activated by voice
commands, that understands

00:12:26.010 --> 00:12:28.570
the user and its context,
that knows when it's not

00:12:28.570 --> 00:12:30.980
operating efficiency.

00:12:30.980 --> 00:12:34.360
Now let's amplify this further
by orchestrating experiences

00:12:34.360 --> 00:12:36.600
with other services and devices.

00:12:36.600 --> 00:12:38.690
The washing machine now
learns about the activity

00:12:38.690 --> 00:12:41.250
in the household
and its energy use,

00:12:41.250 --> 00:12:44.050
and can then determine when
to start the wash cycle, when

00:12:44.050 --> 00:12:48.400
it's optimal for household
convenience and energy savings.

00:12:48.400 --> 00:12:50.730
It knows when to
order detergent, when

00:12:50.730 --> 00:12:55.710
it's close to being exhausted.

00:12:55.710 --> 00:12:57.110
And it can do that
automatically.

00:12:57.110 --> 00:12:59.430
The possibilities
here are endless.

00:12:59.430 --> 00:13:01.330
I think this audience
will have ideas that

00:13:01.330 --> 00:13:04.150
take this a whole lot further.

00:13:04.150 --> 00:13:06.390
But to get to this
vision, we believe

00:13:06.390 --> 00:13:08.530
openness is an imperative.

00:13:08.530 --> 00:13:13.150
You're heard this before, but
we think this bears repeating.

00:13:13.150 --> 00:13:15.930
These devices must be
able to communicate

00:13:15.930 --> 00:13:19.080
with each other across brands.

00:13:19.080 --> 00:13:23.050
And the data that they
generate must be comprehensible

00:13:23.050 --> 00:13:27.810
so developers can scalably build
intelligence services on top.

00:13:27.810 --> 00:13:33.240
Which brings me to
security and user privacy.

00:13:33.240 --> 00:13:36.520
In this interoperable ecosystem
with all these devices

00:13:36.520 --> 00:13:39.180
from different brands
connecting to each other,

00:13:39.180 --> 00:13:42.000
security becomes
increasingly critical

00:13:42.000 --> 00:13:45.330
and must be built into
the devices themselves

00:13:45.330 --> 00:13:48.050
and the device interactions.

00:13:48.050 --> 00:13:50.030
It should be really
easy for users

00:13:50.030 --> 00:13:53.340
to control who and what
can access a device

00:13:53.340 --> 00:13:56.470
and exactly what
they can do with it.

00:13:56.470 --> 00:13:59.970
User and device data
must be protected

00:13:59.970 --> 00:14:07.190
from unauthorized access, be
the data stored on the network,

00:14:07.190 --> 00:14:09.910
on the cloud, or on the
device itself-- really,

00:14:09.910 --> 00:14:12.530
really important
that it's protected.

00:14:12.530 --> 00:14:14.710
And finally, the
device itself must

00:14:14.710 --> 00:14:17.250
be made resistant to attacks.

00:14:17.250 --> 00:14:19.240
And in the event
of a compromise,

00:14:19.240 --> 00:14:22.470
it should be really easy
to fix it and bring it

00:14:22.470 --> 00:14:26.420
back to a trusted state.

00:14:26.420 --> 00:14:30.110
Which brings me to
Brillo and Weave.

00:14:30.110 --> 00:14:34.400
Brillo and Weave is Google's
approach to building for IoT.

00:14:34.400 --> 00:14:37.740
We build security features into
the Brillo and Weave platforms

00:14:37.740 --> 00:14:40.600
so you can use it to build
secure devices and device

00:14:40.600 --> 00:14:42.600
interactions.

00:14:42.600 --> 00:14:45.920
And we've deliberately made
Weave an open protocol,

00:14:45.920 --> 00:14:49.670
so it's easy to build apps and
services to securely set up

00:14:49.670 --> 00:14:53.300
your device, control them, and
choreograph those experiences

00:14:53.300 --> 00:14:56.144
across different devices.

00:14:56.144 --> 00:14:58.560
But ultimately, our vision for
Brillo and Weave-- and this

00:14:58.560 --> 00:15:02.720
is really important--
is to enable

00:15:02.720 --> 00:15:05.620
our partners and the
larger developer community

00:15:05.620 --> 00:15:09.230
to build those great devices
and experiences that users

00:15:09.230 --> 00:15:10.810
will love.

00:15:10.810 --> 00:15:13.350
We provide the
foundational elements

00:15:13.350 --> 00:15:16.620
so you can create the magic.

00:15:16.620 --> 00:15:18.950
Just to give you
a little bit more

00:15:18.950 --> 00:15:22.330
of an overview of what Brillo
and Weave are for those of you

00:15:22.330 --> 00:15:25.860
new to Brillo-- in
a nutshell, Brillo

00:15:25.860 --> 00:15:29.350
brings the simplicity and
speed of software development

00:15:29.350 --> 00:15:31.780
to hardware for IoT.

00:15:31.780 --> 00:15:36.480
What we give with Brillo
is an embedded, secure OS,

00:15:36.480 --> 00:15:39.200
core services, and
a developer toolkit

00:15:39.200 --> 00:15:42.390
so you can build
your IoT device.

00:15:42.390 --> 00:15:45.690
And because Brillo is based on
the lower levels of Android,

00:15:45.690 --> 00:15:49.000
it's supported across
a range of hardware.

00:15:49.000 --> 00:15:52.510
So in addition to helping
you build these devices,

00:15:52.510 --> 00:15:55.210
with Brillo, you
have access to tools

00:15:55.210 --> 00:15:57.490
to help you monitor
and manage your devices

00:15:57.490 --> 00:15:59.170
over its lifetime--
really, really

00:15:59.170 --> 00:16:01.495
important in this new
world of connected devices.

00:16:01.495 --> 00:16:02.745
We can't just ship and forget.

00:16:05.410 --> 00:16:08.640
In particular, we provide
a really easy way for you

00:16:08.640 --> 00:16:10.942
to update your
device over the air.

00:16:10.942 --> 00:16:13.150
Those of you who have been
building your own hardware

00:16:13.150 --> 00:16:16.550
know that this is hard to
do reliably and at scale.

00:16:16.550 --> 00:16:19.130
And we believe updates
are the only way

00:16:19.130 --> 00:16:23.530
you can ensure that the device
stays secure over its lifetime

00:16:23.530 --> 00:16:25.480
and can recover from attacks.

00:16:25.480 --> 00:16:28.800
So that's Brillo in a nutshell.

00:16:28.800 --> 00:16:33.570
Weave is a communication
platform for IoT devices.

00:16:33.570 --> 00:16:36.440
It provides a seamless
and secure way

00:16:36.440 --> 00:16:39.226
for users to provision their
devices onto the network--

00:16:39.226 --> 00:16:40.600
something a lot
of users struggle

00:16:40.600 --> 00:16:45.640
with, because today, it's pretty
inconsistent device to device--

00:16:45.640 --> 00:16:50.980
and controlled, low latency
access to devices, both locally

00:16:50.980 --> 00:16:52.780
as well as remotely.

00:16:52.780 --> 00:16:55.010
Weave is built into
Brillo, but you can also

00:16:55.010 --> 00:16:58.330
use the Weave libraries on
an existing device operating

00:16:58.330 --> 00:17:01.600
system that's based on Linux.

00:17:01.600 --> 00:17:05.646
On the client side,
Weave APIs and the SDK

00:17:05.646 --> 00:17:10.000
are available on Android,
iOS, and the web,

00:17:10.000 --> 00:17:13.690
so you can build apps
for all these platforms.

00:17:13.690 --> 00:17:17.150
And because interop is such
a critical, critical element

00:17:17.150 --> 00:17:21.779
for IoT, what we've
done is for Weave,

00:17:21.779 --> 00:17:24.109
we've created these
devices schemas

00:17:24.109 --> 00:17:25.640
for major device categories.

00:17:25.640 --> 00:17:31.030
In this case, you see an example
for a camera and for a lock.

00:17:31.030 --> 00:17:33.710
This makes it easy
to build applications

00:17:33.710 --> 00:17:36.150
that can interact with
Weave-compatible devices,

00:17:36.150 --> 00:17:40.460
regardless of brand, and easy to
choreograph those interactions

00:17:40.460 --> 00:17:42.980
across device types as well.

00:17:42.980 --> 00:17:45.670
So that's the basics
of Brillo and Weave.

00:17:45.670 --> 00:17:49.090
You'll hear a lot more
details in upcoming talks

00:17:49.090 --> 00:17:51.080
today and tomorrow.

00:17:51.080 --> 00:17:53.930
Over time, we'll be
adding a lot more in terms

00:17:53.930 --> 00:17:57.290
of services to Brillo to make it
easier for you to build smarts

00:17:57.290 --> 00:17:58.820
into your device.

00:17:58.820 --> 00:18:01.680
We'll be adding some really
cool stuff-- for example, voice

00:18:01.680 --> 00:18:06.020
actions, [INAUDIBLE]
contextual triggers

00:18:06.020 --> 00:18:08.290
so you can build some
of those experiences

00:18:08.290 --> 00:18:10.250
into your Weave-compatible app.

00:18:10.250 --> 00:18:14.770
So look forward to
hearing more from us.

00:18:14.770 --> 00:18:17.560
Essentially, with Brillo
and Weave, as I said,

00:18:17.560 --> 00:18:20.780
we're laying the groundwork so
device makers and developers

00:18:20.780 --> 00:18:23.860
and you in the audience
can build the IoT devices

00:18:23.860 --> 00:18:25.850
and experiences of the future.

00:18:25.850 --> 00:18:27.550
This is a problem that we share.

00:18:27.550 --> 00:18:29.700
And we believe that
there's a great opportunity

00:18:29.700 --> 00:18:31.980
to solve it together.

00:18:31.980 --> 00:18:34.850
Now, just to give you a quick
sense of the possibilities,

00:18:34.850 --> 00:18:37.920
I thought I'd show you a demo of
a Weave-enabled device-- that's

00:18:37.920 --> 00:18:42.170
a dog feeder there-- and
a Weave-compatible app.

00:18:42.170 --> 00:18:45.770
So for context, Wayne is a
member of our developer team,

00:18:45.770 --> 00:18:50.470
and he's an owner of two very
energetic and hungry dogs.

00:18:50.470 --> 00:18:53.316
He had bought this dog
feeder a few years ago

00:18:53.316 --> 00:18:54.940
with the intention
of getting it set up

00:18:54.940 --> 00:18:56.250
and connected to the internet.

00:18:56.250 --> 00:18:58.790
And the technology was
too hard at that time,

00:18:58.790 --> 00:18:59.990
and he'd given up.

00:18:59.990 --> 00:19:04.100
So it was sitting in his
garage gathering dust.

00:19:04.100 --> 00:19:06.530
He brought it in for
this demo and got it

00:19:06.530 --> 00:19:09.280
Weave-enabled in under a day.

00:19:09.280 --> 00:19:12.530
So let me welcome Wayne.

00:19:12.530 --> 00:19:16.440
And-- oh, we have a surprise
guest, Monte, on stage.

00:19:16.440 --> 00:19:20.590
[APPLAUSE]

00:19:20.590 --> 00:19:23.290
So I'm going to show you
how easy it is for Wayne now

00:19:23.290 --> 00:19:32.687
to feed Monte when he's--
well-- when he's at work.

00:19:32.687 --> 00:19:34.145
Can we switch to
the phone, please?

00:19:37.230 --> 00:19:39.930
So that's his Weave-enabled app.

00:19:39.930 --> 00:19:47.790
And all he has to do is click
on this button and feed Monte.

00:19:47.790 --> 00:19:50.650
Well--

00:19:50.650 --> 00:19:55.599
[APPLAUSE]

00:19:55.599 --> 00:19:58.140
It's easier to do the technology
than get adoption, isn't it?

00:20:01.026 --> 00:20:02.950
[APPLAUSE]

00:20:02.950 --> 00:20:06.540
So that was a
really simple demo.

00:20:06.540 --> 00:20:09.850
To give you a flavor of what you
can do, I encourage all of you

00:20:09.850 --> 00:20:13.180
to use this opportunity over
the course of the next two days

00:20:13.180 --> 00:20:16.530
to learn more about Brillo and
Weave, work in the code labs,

00:20:16.530 --> 00:20:18.920
ask questions at office hours.

00:20:18.920 --> 00:20:22.980
You'll have access to Brillo
and Weave very soon later today.

00:20:22.980 --> 00:20:24.650
So this will get
you an opportunity

00:20:24.650 --> 00:20:26.150
to get your hands dirty.

00:20:26.150 --> 00:20:27.890
We're really excited
to see what you can

00:20:27.890 --> 00:20:30.030
build with Brillo and Weave.

00:20:30.030 --> 00:20:31.304
Thank you.

00:20:31.304 --> 00:20:34.076
[APPLAUSE]

00:20:35.531 --> 00:20:37.030
TIMOTHY JORDAN:
Thank you, Gayathri.

00:20:41.930 --> 00:20:45.780
And Wayne and Monte.

00:20:45.780 --> 00:20:48.080
Next, I'm very excited
to welcome to the stage

00:20:48.080 --> 00:20:50.450
Rajat Monga, Technical
Lead for TensorFlow.

00:20:53.180 --> 00:20:53.770
You can clap.

00:20:53.770 --> 00:20:54.430
It's OK.

00:20:54.430 --> 00:20:54.720
RAJAT MONGA: Thank you, Timothy.

00:20:54.720 --> 00:20:55.220
Thanks.

00:20:58.220 --> 00:20:59.640
Hello, everyone.

00:20:59.640 --> 00:21:00.560
So I'm Rajat.

00:21:00.560 --> 00:21:03.070
I'm on the Google Brain team,
and I work on TensorFlow.

00:21:03.070 --> 00:21:06.150
I'm the lead for TensorFlow.

00:21:06.150 --> 00:21:08.042
Gayathri talked about
a lot of devices

00:21:08.042 --> 00:21:09.750
that are going to be
there in our future.

00:21:09.750 --> 00:21:13.150
She mentioned like 26 smart
devices for every human

00:21:13.150 --> 00:21:14.090
on the planet.

00:21:14.090 --> 00:21:17.510
Well, I'm here to
help make them smart,

00:21:17.510 --> 00:21:20.390
help you make them
smart, really.

00:21:20.390 --> 00:21:22.740
So let's talk a little bit
about machine learning.

00:21:22.740 --> 00:21:23.940
Why is it so important?

00:21:23.940 --> 00:21:25.770
Why do we care about it?

00:21:25.770 --> 00:21:27.830
Why is it such a
big thing today?

00:21:27.830 --> 00:21:29.930
So let's start by just
talking a little bit

00:21:29.930 --> 00:21:31.790
about what machine
learning really is

00:21:31.790 --> 00:21:34.680
and what it can do for you.

00:21:34.680 --> 00:21:36.820
One way to think
about it is, if you

00:21:36.820 --> 00:21:39.234
want to solve tasks that you
can't really just program,

00:21:39.234 --> 00:21:40.650
that you can't
really just program

00:21:40.650 --> 00:21:42.191
as a developer--
that's what you want

00:21:42.191 --> 00:21:45.360
to do, to program everything
and be done with it-- this

00:21:45.360 --> 00:21:47.720
is something that can
really do that for you.

00:21:47.720 --> 00:21:50.560
So for example, the
example I have here is

00:21:50.560 --> 00:21:53.950
you have a bunch of images,
and they're labeled.

00:21:53.950 --> 00:21:55.540
If you wanted to
program something

00:21:55.540 --> 00:21:57.554
that could take those
images, or take any image,

00:21:57.554 --> 00:21:59.220
and say it's a dog
or a cat or whatever,

00:21:59.220 --> 00:22:01.500
that's going to be
really, really hard.

00:22:01.500 --> 00:22:03.510
But you can train
computers using

00:22:03.510 --> 00:22:05.510
what's called machine
learning to really do that

00:22:05.510 --> 00:22:09.290
where you have data sets, which
are nicely-labeled images.

00:22:09.290 --> 00:22:11.600
You feed them to a computer
with the right algorithms,

00:22:11.600 --> 00:22:12.500
of course.

00:22:12.500 --> 00:22:14.370
And then eventually,
out pops a model

00:22:14.370 --> 00:22:18.000
that you can use to classify
a new image that it's never

00:22:18.000 --> 00:22:19.250
seen before.

00:22:19.250 --> 00:22:23.150
And it's used in a variety
of places to do that.

00:22:23.150 --> 00:22:25.600
So now let's talk a
little bit about what

00:22:25.600 --> 00:22:27.005
are the different
things that you

00:22:27.005 --> 00:22:28.370
can use machine learning for.

00:22:28.370 --> 00:22:30.347
What is it being used for today?

00:22:30.347 --> 00:22:31.930
So one of the things--
just going back

00:22:31.930 --> 00:22:35.000
to the example I was doing--
is image recognition.

00:22:35.000 --> 00:22:38.020
You can, in this case,
give a picture of a lion,

00:22:38.020 --> 00:22:41.370
and it can say it's a lion
with a very high confidence.

00:22:41.370 --> 00:22:43.410
And it does really,
really well here.

00:22:43.410 --> 00:22:46.490
In fact, on a data
set called ImageNet,

00:22:46.490 --> 00:22:48.740
which is very popular in the
research community, which

00:22:48.740 --> 00:22:51.650
has about a million images
and 1,000 different classes,

00:22:51.650 --> 00:22:56.150
the human accuracy is supposed
to be something like 95% or so.

00:22:56.150 --> 00:22:59.530
And these models are now able
to surpass human accuracy

00:22:59.530 --> 00:23:01.040
on that particular data set.

00:23:01.040 --> 00:23:02.040
It's not that general.

00:23:02.040 --> 00:23:05.760
It can't really see as well as
you do for every little thing.

00:23:05.760 --> 00:23:08.680
But at least in these kind
of images, it can do better.

00:23:08.680 --> 00:23:11.900
So it's getting
really, really good.

00:23:11.900 --> 00:23:14.160
Another one is voice.

00:23:14.160 --> 00:23:16.160
A lot of you have
probably already tried

00:23:16.160 --> 00:23:18.920
talking to your phone, doing
searches, asking Google

00:23:18.920 --> 00:23:20.310
what's going on.

00:23:20.310 --> 00:23:21.830
In this case,
somebody is asking,

00:23:21.830 --> 00:23:23.660
I want to see
Seattle restaurants.

00:23:23.660 --> 00:23:27.420
And it uses machine learning to
really take your voice command

00:23:27.420 --> 00:23:28.840
audio that you
have and convert it

00:23:28.840 --> 00:23:31.390
to a query, which is then fed
to the regular Google search

00:23:31.390 --> 00:23:36.090
engine, and give you the great
results that we are good for.

00:23:36.090 --> 00:23:37.710
Another is search.

00:23:37.710 --> 00:23:40.709
The web now has something
like 60 trillion pages,

00:23:40.709 --> 00:23:41.500
the last I checked.

00:23:41.500 --> 00:23:44.680
It's probably a few
more trillion by now.

00:23:44.680 --> 00:23:48.030
Finding the relevant documents
from so many different pages

00:23:48.030 --> 00:23:49.080
is a hard task.

00:23:49.080 --> 00:23:51.090
Google has done it
really, really well.

00:23:51.090 --> 00:23:52.750
One of the things
that helps us there

00:23:52.750 --> 00:23:54.380
is machine learning, again.

00:23:54.380 --> 00:23:56.570
Given a particular
query that you make,

00:23:56.570 --> 00:23:59.730
sorting in sifting through
those trillions of pages

00:23:59.730 --> 00:24:01.780
and then coming
up with 10 answers

00:24:01.780 --> 00:24:03.960
that we can show on that
page, because that's

00:24:03.960 --> 00:24:06.280
all you're going to see and
maybe go a few more pages,

00:24:06.280 --> 00:24:07.630
is a really hard task.

00:24:07.630 --> 00:24:13.370
And machine learning is a
great way to help solve that.

00:24:13.370 --> 00:24:15.030
Another one is translation.

00:24:15.030 --> 00:24:18.830
So if you ever tried Google
Translate, where you just

00:24:18.830 --> 00:24:22.230
type a query-- or you just type
something in, say, English,

00:24:22.230 --> 00:24:25.430
it can translate it to French
or the other way around.

00:24:25.430 --> 00:24:28.400
And in fact, it supports 90
different languages today.

00:24:28.400 --> 00:24:31.150
I don't think we could do that
with even a million people

00:24:31.150 --> 00:24:34.290
sitting behind and translating
those things for you.

00:24:34.290 --> 00:24:36.550
So again, one of those
things that machine learning

00:24:36.550 --> 00:24:40.320
has made a huge difference.

00:24:40.320 --> 00:24:42.920
Another newer one-- and
this one is more research

00:24:42.920 --> 00:24:45.380
so far-- is taking
an image and actually

00:24:45.380 --> 00:24:46.990
trying to describe that.

00:24:46.990 --> 00:24:50.190
And in this particular
case, as you see,

00:24:50.190 --> 00:24:52.600
it's able to describe a
closeup of a small child

00:24:52.600 --> 00:24:54.790
just as a human would.

00:24:54.790 --> 00:24:57.300
And it's getting really
better in things like this.

00:24:57.300 --> 00:24:58.960
Think of the kind
of impact something

00:24:58.960 --> 00:25:02.020
like this can have if a
visually impaired person who

00:25:02.020 --> 00:25:04.920
can't really see can
be described everything

00:25:04.920 --> 00:25:06.470
that's going on around them.

00:25:06.470 --> 00:25:08.330
It will just be a
game changer for them.

00:25:08.330 --> 00:25:10.322
It will be a life
changer for them.

00:25:10.322 --> 00:25:12.530
So these are some of the
things that machine learning

00:25:12.530 --> 00:25:13.330
can do for you.

00:25:13.330 --> 00:25:18.030
Now let's go a little bit
deeper into one specific branch

00:25:18.030 --> 00:25:20.000
of machine learning
called deep learning.

00:25:20.000 --> 00:25:22.640
And the reason I go through
this is all the things

00:25:22.640 --> 00:25:24.947
that I just talked about,
they are-- actually,

00:25:24.947 --> 00:25:26.030
deep learning was applied.

00:25:26.030 --> 00:25:27.746
And deep learning
was the one that got

00:25:27.746 --> 00:25:29.520
all those great results for us.

00:25:29.520 --> 00:25:32.870
This is a very old
technology in the sense

00:25:32.870 --> 00:25:35.160
that the core ideas
come from the '40s.

00:25:35.160 --> 00:25:37.640
It was called neural networks
or artificial neural networks

00:25:37.640 --> 00:25:38.290
back then.

00:25:38.290 --> 00:25:41.170
Over time, it's evolved,
both algorithmically

00:25:41.170 --> 00:25:43.430
and with the additional
data being available

00:25:43.430 --> 00:25:45.970
and the computational power
that's available to us.

00:25:45.970 --> 00:25:47.790
And it's continued to improve.

00:25:47.790 --> 00:25:49.370
Especially over the
last five years,

00:25:49.370 --> 00:25:52.140
it's starting to
show great results

00:25:52.140 --> 00:25:53.810
in some of the fields
you saw, and I'll

00:25:53.810 --> 00:25:55.700
show you some more later on.

00:25:55.700 --> 00:25:58.256
The basic idea here
is you have some input

00:25:58.256 --> 00:25:59.400
of all kinds of things.

00:25:59.400 --> 00:26:02.920
It could be images, speech,
text, all kinds of things.

00:26:02.920 --> 00:26:05.750
You build these networks and
extract features out of them

00:26:05.750 --> 00:26:07.480
and are able to make some sense.

00:26:07.480 --> 00:26:10.140
And you're finally able
to make some predictions

00:26:10.140 --> 00:26:11.920
of whatever you're
interested in, whatever

00:26:11.920 --> 00:26:13.340
you can train it for.

00:26:13.340 --> 00:26:15.230
And they're pretty
widely applicable.

00:26:15.230 --> 00:26:17.690
The same kind of algorithms
are applicable across a variety

00:26:17.690 --> 00:26:19.510
of different areas.

00:26:19.510 --> 00:26:21.460
It's very loosely
inspired by neuroscience.

00:26:21.460 --> 00:26:23.080
Some people might say
that's how the brain works,

00:26:23.080 --> 00:26:24.800
and we are trying to
replicate the brain.

00:26:24.800 --> 00:26:25.670
Not quite true.

00:26:25.670 --> 00:26:28.420
I wish it were, but
not quite there yet.

00:26:28.420 --> 00:26:30.880
It is definitely inspired
from there, though.

00:26:33.630 --> 00:26:36.760
This slide is just to give you
an idea of how important it

00:26:36.760 --> 00:26:38.690
is for us at Google.

00:26:38.690 --> 00:26:41.050
We started this
group back in 2011,

00:26:41.050 --> 00:26:45.030
and it's been growing
rapidly since then.

00:26:45.030 --> 00:26:47.450
As this shows-- this
is just a rough idea

00:26:47.450 --> 00:26:50.860
of how many different teams
are using it-- but the number

00:26:50.860 --> 00:26:53.630
of different directories
that have models built off

00:26:53.630 --> 00:26:54.740
of this technology.

00:26:54.740 --> 00:26:56.930
And there are all kinds
of applications and areas

00:26:56.930 --> 00:26:58.221
that are using this technology.

00:27:01.150 --> 00:27:02.515
So that's great.

00:27:02.515 --> 00:27:04.140
I have now given
you a background

00:27:04.140 --> 00:27:05.530
of what machine learning is.

00:27:05.530 --> 00:27:08.917
Now like me dive into
something called TensorFlow.

00:27:08.917 --> 00:27:10.750
It's a machine learning
library that we just

00:27:10.750 --> 00:27:11.840
open sourced recently.

00:27:11.840 --> 00:27:14.900
And I'm going to talk a
little bit more about that.

00:27:14.900 --> 00:27:17.772
So let's start by
what is TensorFlow.

00:27:17.772 --> 00:27:19.980
It's a library that lets
you do all the things that I

00:27:19.980 --> 00:27:21.070
was talking about.

00:27:21.070 --> 00:27:25.230
It's a library that allows you
to build these machine learning

00:27:25.230 --> 00:27:27.340
models and apply
them in production.

00:27:27.340 --> 00:27:29.330
And it powers hundreds
of different products

00:27:29.330 --> 00:27:30.670
at Google today.

00:27:30.670 --> 00:27:34.150
I listed some of the names
of areas that use that,

00:27:34.150 --> 00:27:35.906
but there are many, many more.

00:27:35.906 --> 00:27:40.090
It is something for researchers
to try out new things,

00:27:40.090 --> 00:27:42.270
to build new things,
but also, for developers

00:27:42.270 --> 00:27:45.190
to deploy these models into
production or applications

00:27:45.190 --> 00:27:46.670
or products, whatever you have.

00:27:46.670 --> 00:27:48.940
And it's really important
to be able to do that.

00:27:51.590 --> 00:27:54.240
With all of this put together,
what it allows us to do

00:27:54.240 --> 00:27:55.950
is really to build
the next generation

00:27:55.950 --> 00:27:58.110
of intelligent applications.

00:27:58.110 --> 00:27:59.790
We have a lot of
different applications.

00:27:59.790 --> 00:28:00.750
We have a lot of products.

00:28:00.750 --> 00:28:02.083
How do we make them intelligent?

00:28:02.083 --> 00:28:03.390
How do we make them smart?

00:28:03.390 --> 00:28:04.160
That's our goal.

00:28:04.160 --> 00:28:05.800
We want to help enable that.

00:28:05.800 --> 00:28:08.500
And we did open source it,
so it's available to you now.

00:28:08.500 --> 00:28:10.830
We open sourced it a
couple of months ago.

00:28:10.830 --> 00:28:11.700
It's on GitHub.

00:28:11.700 --> 00:28:14.310
And I'll give you some pointers
at the end of the talk.

00:28:14.310 --> 00:28:19.780
But it's there for you to try
out to do a lot of things with.

00:28:19.780 --> 00:28:23.380
So let's talk a little bit
about what does it have,

00:28:23.380 --> 00:28:25.090
what is TensorFlow.

00:28:25.090 --> 00:28:27.020
At the core, like you
see in the middle,

00:28:27.020 --> 00:28:30.890
there's the core execution
engine that's written in C++

00:28:30.890 --> 00:28:32.322
for performance.

00:28:32.322 --> 00:28:34.780
We definitely want to extract
as much performance as we can

00:28:34.780 --> 00:28:37.250
out of wherever it's running.

00:28:37.250 --> 00:28:39.530
On the front end, we support
many different languages,

00:28:39.530 --> 00:28:41.830
depending on whatever
the developers want

00:28:41.830 --> 00:28:42.910
to build things in.

00:28:42.910 --> 00:28:45.752
In some cases, it might be
C++, because they want to have

00:28:45.752 --> 00:28:47.870
the absolute last
bit of performance.

00:28:47.870 --> 00:28:49.500
But in other cases,
it might be Python,

00:28:49.500 --> 00:28:52.120
because the data scientists
and researchers, that's what

00:28:52.120 --> 00:28:53.720
they're most comfortable with.

00:28:53.720 --> 00:28:57.150
And they want to really try
out many different things.

00:28:57.150 --> 00:29:02.440
They don't want to have to
recompile things and so on.

00:29:02.440 --> 00:29:04.370
And the way we've
built the core is

00:29:04.370 --> 00:29:07.722
to enable supporting many,
many new languages as well.

00:29:07.722 --> 00:29:09.430
In fact, we're working
with the community

00:29:09.430 --> 00:29:11.270
to add support for
many different things.

00:29:11.270 --> 00:29:14.370
People are interested
in Java, in JavaScript,

00:29:14.370 --> 00:29:16.149
in Scala, all kinds of things.

00:29:16.149 --> 00:29:18.190
And you'll see support
for more of these building

00:29:18.190 --> 00:29:20.890
up over time as well.

00:29:20.890 --> 00:29:23.940
Now, one of the things that
the core execution engine does

00:29:23.940 --> 00:29:27.240
is it abstracts away whatever
the underlying devices are.

00:29:27.240 --> 00:29:30.360
So it actually runs on
all kinds of platforms.

00:29:30.360 --> 00:29:33.270
It can run on your Android
phones, on iOS phones,

00:29:33.270 --> 00:29:38.290
on all kinds of iOS devices,
and on your workstation,

00:29:38.290 --> 00:29:40.160
on your data center, et cetera.

00:29:40.160 --> 00:29:44.180
It's pretty
platform-independent that way.

00:29:44.180 --> 00:29:47.300
So you don't have to worry
about what platform you're using

00:29:47.300 --> 00:29:49.050
or where you want to deploy.

00:29:49.050 --> 00:29:52.430
You can use it everywhere.

00:29:52.430 --> 00:29:55.025
The core was
built-- our goal was

00:29:55.025 --> 00:29:56.400
to build it for
machine learning,

00:29:56.400 --> 00:29:57.940
but the core is very
general purpose.

00:29:57.940 --> 00:29:59.580
And in fact, people are
interested in using it

00:29:59.580 --> 00:30:01.160
for other things,
too, but I'm going

00:30:01.160 --> 00:30:04.210
to focus on the machine
learning aspects of it.

00:30:04.210 --> 00:30:07.700
And the basic idea being
that it makes it really,

00:30:07.700 --> 00:30:08.420
really flexible.

00:30:08.420 --> 00:30:10.211
So even if you want to
do machine learning,

00:30:10.211 --> 00:30:12.727
it allows you to expand and
try out all kinds of things

00:30:12.727 --> 00:30:13.810
that you would want to do.

00:30:16.670 --> 00:30:18.600
So that's great.

00:30:18.600 --> 00:30:20.110
Seems like a great product.

00:30:20.110 --> 00:30:23.270
One question we always get
is, Google uses it so much.

00:30:23.270 --> 00:30:25.030
Why did we open source it?

00:30:25.030 --> 00:30:28.520
So as you saw earlier, this is
having a huge impact at Google.

00:30:28.520 --> 00:30:30.520
So many different
teams are using it.

00:30:30.520 --> 00:30:35.160
We thought this could have
a much bigger impact outside

00:30:35.160 --> 00:30:37.150
in the world, outside Google.

00:30:37.150 --> 00:30:43.384
And it's really important for us
to enable the kind of research

00:30:43.384 --> 00:30:45.050
to accelerate machine
learning and to do

00:30:45.050 --> 00:30:46.710
even better than where we are.

00:30:46.710 --> 00:30:49.240
Yes, we are building
smarter things.

00:30:49.240 --> 00:30:52.890
We are building applications
that are learning a lot.

00:30:52.890 --> 00:30:54.180
But there's a long way to go.

00:30:54.180 --> 00:30:55.777
There's still a lot to be done.

00:30:55.777 --> 00:30:57.610
And we definitely want
to accelerate machine

00:30:57.610 --> 00:30:58.360
learning research.

00:30:58.360 --> 00:31:01.610
And that was one of the reasons
why we open sourced TensorFlow

00:31:01.610 --> 00:31:02.780
at this time.

00:31:02.780 --> 00:31:06.030
The other part that we
think is really important--

00:31:06.030 --> 00:31:09.440
and we've seen at Google by
having this one platform that

00:31:09.440 --> 00:31:13.500
goes from data scientists
to the developer--

00:31:13.500 --> 00:31:15.826
is that it speeds up
production deployment.

00:31:15.826 --> 00:31:17.200
Once you make
something, once you

00:31:17.200 --> 00:31:18.908
have something that's
working, you really

00:31:18.908 --> 00:31:20.890
want to deploy it
as soon as you can.

00:31:20.890 --> 00:31:23.490
You don't want to wait another
quarter for the developer

00:31:23.490 --> 00:31:26.680
to build something that can
be deployed in production.

00:31:26.680 --> 00:31:28.150
And this really helps with that.

00:31:30.940 --> 00:31:34.790
So digging a little bit more
into that, who is it for?

00:31:34.790 --> 00:31:36.830
It's really for all
kinds of people.

00:31:36.830 --> 00:31:39.270
In this case, we talk about
researchers, developers,

00:31:39.270 --> 00:31:40.800
and the data scientists.

00:31:40.800 --> 00:31:43.610
And what the researchers
do, of course,

00:31:43.610 --> 00:31:45.790
is they want to
try out new ideas.

00:31:45.790 --> 00:31:47.930
And this provides the
flexibility for them

00:31:47.930 --> 00:31:49.909
to do that pretty
easily without having

00:31:49.909 --> 00:31:52.450
to worry about the underlying
frameworks, the performance, et

00:31:52.450 --> 00:31:52.950
cetera.

00:31:52.950 --> 00:31:54.640
It just comes for free.

00:31:54.640 --> 00:31:57.990
Now, the data scientists--
who are probably

00:31:57.990 --> 00:32:00.660
overlapping with researchers,
et cetera-- can leverage

00:32:00.660 --> 00:32:03.710
the growing library of
models that we've built.

00:32:03.710 --> 00:32:07.530
And what we are doing is as we
publish papers on new research,

00:32:07.530 --> 00:32:10.260
we are also going to publish
real code that can be shared

00:32:10.260 --> 00:32:11.590
and collaborated with.

00:32:11.590 --> 00:32:15.230
Now, other data scientists can
leverage that, customize it

00:32:15.230 --> 00:32:17.900
to their needs, or train
it on their specific data

00:32:17.900 --> 00:32:20.190
and really gain a lot from that.

00:32:20.190 --> 00:32:24.700
Once that's done-- once they
have a model that works really

00:32:24.700 --> 00:32:27.540
well, that gives get
great results-- then

00:32:27.540 --> 00:32:29.870
the developers could
take the same API

00:32:29.870 --> 00:32:31.955
and use it to deploy
it in production.

00:32:36.320 --> 00:32:39.720
So here are some
examples of applications

00:32:39.720 --> 00:32:43.150
that actually use it today-- in
some cases on the phone itself,

00:32:43.150 --> 00:32:45.110
in some cases in the cloud.

00:32:45.110 --> 00:32:47.660
Google Photos for one--
for example, in this case,

00:32:47.660 --> 00:32:50.500
you can search by saying
a dog, and it will

00:32:50.500 --> 00:32:51.700
show you pictures of a dog.

00:32:51.700 --> 00:32:54.240
It organizes things by
different people, et cetera.

00:32:54.240 --> 00:32:58.040
And all of this uses machine
learning behind the scenes.

00:32:58.040 --> 00:33:01.820
Another one is Google
Translate, which

00:33:01.820 --> 00:33:05.390
uses a combination of cloud
and on application or on device

00:33:05.390 --> 00:33:05.930
things.

00:33:05.930 --> 00:33:07.900
So for example, in
the case on the left

00:33:07.900 --> 00:33:12.780
here, you can just point
the phone at some sign,

00:33:12.780 --> 00:33:15.390
and you'll be able to just see
it translated in your language.

00:33:15.390 --> 00:33:18.020
In this case, it's going
from French to English.

00:33:18.020 --> 00:33:21.680
And in this case, you want
that real time feeling.

00:33:21.680 --> 00:33:24.284
You don't really want the
user to point the camera

00:33:24.284 --> 00:33:26.700
and then wait for two seconds
before it goes to the cloud,

00:33:26.700 --> 00:33:28.380
comes back, and
then displays this.

00:33:28.380 --> 00:33:30.940
It actually, in this case,
real time just takes the image

00:33:30.940 --> 00:33:34.040
and superimposes the
right text on it.

00:33:34.040 --> 00:33:35.780
And so in this case,
having it on device

00:33:35.780 --> 00:33:39.070
is really, really important, and
you can do that for TensorFlow.

00:33:39.070 --> 00:33:41.935
Another one is just
conversing hands free

00:33:41.935 --> 00:33:44.482
or talking to the phone, and
it can speak the other language

00:33:44.482 --> 00:33:45.690
for the other person as well.

00:33:48.450 --> 00:33:51.730
Another one is in Inbox,
we launched a new feature

00:33:51.730 --> 00:33:52.820
a couple of months ago.

00:33:52.820 --> 00:33:55.000
It's called Smart
Reply, where if there

00:33:55.000 --> 00:33:58.370
is a small text, small email
that you got, and you have

00:33:58.370 --> 00:34:00.560
a very, very simple reply
that you could send,

00:34:00.560 --> 00:34:01.860
it's going to give
you some suggestions.

00:34:01.860 --> 00:34:03.526
And you can just click
on the suggestion

00:34:03.526 --> 00:34:04.920
and take it if you want.

00:34:04.920 --> 00:34:07.100
It makes it really
easy to reply to emails

00:34:07.100 --> 00:34:08.920
from the phone when
all you want to say

00:34:08.920 --> 00:34:11.449
is, OK, I'm going to be
there, or in this case,

00:34:11.449 --> 00:34:15.520
say I'll check on it,
or something like that.

00:34:15.520 --> 00:34:17.169
Another one is Google
Keyboard, where

00:34:17.169 --> 00:34:18.460
it predicts what you're saying.

00:34:18.460 --> 00:34:20.659
For example, you might
swipe on the keyboard,

00:34:20.659 --> 00:34:23.320
and it's going to try to
figure out what word you have

00:34:23.320 --> 00:34:24.909
and what word you're
trying to say.

00:34:24.909 --> 00:34:29.449
And it can do that
using machine learning.

00:34:29.449 --> 00:34:31.940
So one of the things I
wanted to leave you with

00:34:31.940 --> 00:34:35.909
is-- I showed you all these
different applications

00:34:35.909 --> 00:34:38.860
and different areas that we've
been applying machine learning.

00:34:38.860 --> 00:34:41.630
All of these applications
today use machine learning

00:34:41.630 --> 00:34:43.070
in one form or another.

00:34:43.070 --> 00:34:45.800
And this is not a small list.

00:34:45.800 --> 00:34:49.949
People say that the future
is going to be smarter,

00:34:49.949 --> 00:34:51.690
and in the future,
in a few years,

00:34:51.690 --> 00:34:53.455
we will have very
smart applications.

00:34:53.455 --> 00:34:54.830
I don't think
that's really true.

00:34:54.830 --> 00:34:56.300
Yes, they are going
to get smarter,

00:34:56.300 --> 00:34:58.320
but you already have
smart applications today.

00:34:58.320 --> 00:35:00.900
You already have
smart products today.

00:35:00.900 --> 00:35:03.880
And you really
want to think about

00:35:03.880 --> 00:35:06.304
how can you make your
application smarter

00:35:06.304 --> 00:35:07.470
when you build the next one.

00:35:07.470 --> 00:35:08.970
If you're building
an app, if you're

00:35:08.970 --> 00:35:11.332
building a cloud platform,
whatever you're building,

00:35:11.332 --> 00:35:13.290
you really want to think
about machine learning

00:35:13.290 --> 00:35:18.490
to see how it can help you make
your next application smarter.

00:35:18.490 --> 00:35:20.604
Thank you.

00:35:20.604 --> 00:35:23.908
[APPLAUSE]

00:35:27.122 --> 00:35:29.580
TIMOTHY JORDAN: And we have
one more speaker for you today.

00:35:29.580 --> 00:35:31.780
I'd like to welcome to the
stage Chandu Thota, who

00:35:31.780 --> 00:35:34.180
works as an Engineering
Director for Geolocation

00:35:34.180 --> 00:35:37.061
and Local Efforts at Google.

00:35:37.061 --> 00:35:39.496
[APPLAUSE]

00:35:40.470 --> 00:35:42.460
CHANDU THOTA:
Thank you, Timothy.

00:35:42.460 --> 00:35:43.070
Good morning.

00:35:45.626 --> 00:35:47.500
So today, we are going
to talk about beacons.

00:35:47.500 --> 00:35:50.070
How many of you
have seen beacons?

00:35:50.070 --> 00:35:53.420
How many of you
have used beacons?

00:35:53.420 --> 00:35:55.620
Hopefully we can change
that after the session

00:35:55.620 --> 00:35:57.550
and after the conference.

00:35:57.550 --> 00:36:00.040
So beacons are not new.

00:36:00.040 --> 00:36:02.600
So they have existed
for a long time.

00:36:02.600 --> 00:36:05.210
And in fact, the platform
that we have built at Google

00:36:05.210 --> 00:36:08.940
called Eddystone is a
name that has been derived

00:36:08.940 --> 00:36:14.110
from a real lighthouse that
was built off of the UK

00:36:14.110 --> 00:36:16.010
some 300 years ago.

00:36:16.010 --> 00:36:18.850
Beacons have been critical, and
a fundamental infrastructure

00:36:18.850 --> 00:36:21.900
in providing context in
real life, whether you

00:36:21.900 --> 00:36:24.430
are sailing the seas--
that's that they

00:36:24.430 --> 00:36:26.690
were used some 300 years ago.

00:36:26.690 --> 00:36:28.070
And even today,
there are a bunch

00:36:28.070 --> 00:36:32.714
of lighthouses that people use
when they are in rough seas.

00:36:32.714 --> 00:36:34.880
But there are also beacons
that people use when they

00:36:34.880 --> 00:36:36.910
are navigating on the roads.

00:36:36.910 --> 00:36:40.590
So if you are using any
GPS nav unit, most likely,

00:36:40.590 --> 00:36:43.810
you are using a bunch
of beacons in the sky.

00:36:43.810 --> 00:36:46.450
And these are what we
call GPS or GLONASS

00:36:46.450 --> 00:36:48.700
or any other system
that have been designed

00:36:48.700 --> 00:36:50.540
to provide this context.

00:36:50.540 --> 00:36:52.360
And the context is
not necessarily just

00:36:52.360 --> 00:36:53.510
about precise location.

00:36:53.510 --> 00:36:56.990
So even though most
of us actually think,

00:36:56.990 --> 00:37:00.330
whenever we think of
a GPS or any beacon,

00:37:00.330 --> 00:37:04.661
we think of that as a tool
to provide precise location.

00:37:04.661 --> 00:37:07.160
But the reality is that they
can provide a lot more context.

00:37:07.160 --> 00:37:10.110
Even in the case
of GPS, you get,

00:37:10.110 --> 00:37:12.070
obviously, a precise
lat/long, but also, you

00:37:12.070 --> 00:37:13.940
get the heading,
and the direction,

00:37:13.940 --> 00:37:15.160
and so on and so forth.

00:37:15.160 --> 00:37:16.660
So there's a lot
more context that

00:37:16.660 --> 00:37:20.920
is provided by beacons to your
applications that you're using.

00:37:20.920 --> 00:37:22.720
But here is a fact.

00:37:22.720 --> 00:37:26.060
We have all these navigational
aids and contextual

00:37:26.060 --> 00:37:28.749
aids that are present.

00:37:28.749 --> 00:37:30.790
And they have been present
for hundreds of years,

00:37:30.790 --> 00:37:33.331
and they are present in our life
today through various means.

00:37:33.331 --> 00:37:37.600
But the reality is most of
them are designed for outdoors.

00:37:37.600 --> 00:37:41.580
You take lighthouses or
GPS, it's all for outdoors.

00:37:41.580 --> 00:37:43.070
None of that works indoors.

00:37:43.070 --> 00:37:46.450
And the reality is that 90% of
our wake up time, the active

00:37:46.450 --> 00:37:49.170
wake up time, we spend indoors.

00:37:49.170 --> 00:37:53.780
And for that, and also because
we use a lot of mobile devices

00:37:53.780 --> 00:37:55.920
with us all the time
when we are indoors,

00:37:55.920 --> 00:37:58.550
we need a better system
that can provide us

00:37:58.550 --> 00:38:01.450
that precise location
and context so we

00:38:01.450 --> 00:38:04.780
can build our apps that
can be smarter and useful.

00:38:04.780 --> 00:38:06.280
And when I say
precise location, you

00:38:06.280 --> 00:38:08.113
are actually thinking
of lat/longs probably,

00:38:08.113 --> 00:38:11.850
but that's not actually true
when it comes to indoors.

00:38:11.850 --> 00:38:17.230
There is not a really meaningful
application to lat/longs,

00:38:17.230 --> 00:38:19.870
for example, in this
conference center.

00:38:19.870 --> 00:38:21.310
What you would
like to understand

00:38:21.310 --> 00:38:24.130
in terms of a precise location
when it comes to indoors

00:38:24.130 --> 00:38:25.590
is a semantic location.

00:38:25.590 --> 00:38:29.100
What it means is that I am
standing here on this stage.

00:38:29.100 --> 00:38:31.550
This is a semantic
location-- the stage.

00:38:31.550 --> 00:38:33.150
And you are sitting
in that chair.

00:38:33.150 --> 00:38:34.740
That is a semantic location.

00:38:34.740 --> 00:38:37.540
You being able to
understand semantically

00:38:37.540 --> 00:38:40.990
where you are relative to
the physical space that's

00:38:40.990 --> 00:38:42.860
surrounding you
is basically where

00:38:42.860 --> 00:38:46.770
we are going to use beacons
to provide that context.

00:38:46.770 --> 00:38:48.960
That leads us to many,
many applications

00:38:48.960 --> 00:38:51.410
that we are actually already
seeing today in the market,

00:38:51.410 --> 00:38:54.200
whether you're in a shopping
mall standing next to an aisle,

00:38:54.200 --> 00:38:56.390
whether you are at the
airport trying to find out

00:38:56.390 --> 00:38:59.230
your next flight schedule or
trying to pull up your boarding

00:38:59.230 --> 00:39:01.990
pass, or whether
you are at a museum

00:39:01.990 --> 00:39:05.220
trying to understand what
the painting is about.

00:39:05.220 --> 00:39:08.120
All of these
applications are built

00:39:08.120 --> 00:39:11.410
on top of this understanding
of precise semantic location

00:39:11.410 --> 00:39:15.030
understanding indoors
using some type of beacons.

00:39:15.030 --> 00:39:18.550
And that's where BLE
beacons come into picture.

00:39:18.550 --> 00:39:21.230
If you think about
the technology that

00:39:21.230 --> 00:39:22.790
powers all of
this, this is built

00:39:22.790 --> 00:39:25.010
on top of Bluetooth technology.

00:39:25.010 --> 00:39:27.170
Bluetooth [INAUDIBLE]
is the specification

00:39:27.170 --> 00:39:30.010
published by the
Bluetooth consortium,

00:39:30.010 --> 00:39:31.500
and this is an open standard.

00:39:31.500 --> 00:39:34.730
And the real promise
of this technology

00:39:34.730 --> 00:39:37.550
is that you don't need
to pair with a device.

00:39:37.550 --> 00:39:40.345
And these devices-- anything
that implements Bluetooth Low

00:39:40.345 --> 00:39:43.630
Energy protocol-- are going
to consume very small amounts

00:39:43.630 --> 00:39:45.960
of power to operate.

00:39:45.960 --> 00:39:47.520
And these are
one-way transmitters.

00:39:47.520 --> 00:39:49.520
That's the most important
thing, because there

00:39:49.520 --> 00:39:52.060
are lots of privacy concerns
about this technology.

00:39:52.060 --> 00:39:54.260
When it is a one-way
transmitter, the device

00:39:54.260 --> 00:39:55.680
itself is not doing anything.

00:39:55.680 --> 00:39:57.530
It is only emitting its ID.

00:39:57.530 --> 00:39:59.860
And occasionally it's
saying, hey, I'm here.

00:39:59.860 --> 00:40:02.800
And that's pretty much
what the beacon is saying.

00:40:02.800 --> 00:40:04.750
And then there is
a small payload

00:40:04.750 --> 00:40:07.850
that you can use in terms of
configuring these Bluetooth

00:40:07.850 --> 00:40:08.350
beacons.

00:40:08.350 --> 00:40:10.490
That's pretty much it.

00:40:10.490 --> 00:40:12.640
So you have these
Bluetooth beacons,

00:40:12.640 --> 00:40:17.200
one-way transmitter, built
on top of a publicly open,

00:40:17.200 --> 00:40:20.960
defined standard, and
then they are configured

00:40:20.960 --> 00:40:23.820
to send messages one
way-- from the beacon

00:40:23.820 --> 00:40:26.340
to your device on
a periodic basis.

00:40:26.340 --> 00:40:27.860
That's all there is to it.

00:40:27.860 --> 00:40:30.830
And based on that, we
have built a platform

00:40:30.830 --> 00:40:34.550
to extend the capabilities of
these tiny devices, beacons,

00:40:34.550 --> 00:40:37.500
and make it easier for
you developers to build

00:40:37.500 --> 00:40:40.750
applications, both
on iOS and Android,

00:40:40.750 --> 00:40:42.470
to make them more contextual.

00:40:42.470 --> 00:40:45.230
So the way that we set
out to do it is-- look,

00:40:45.230 --> 00:40:47.860
the beacons are
open, and the number

00:40:47.860 --> 00:40:50.170
of applications that
need to be built

00:40:50.170 --> 00:40:52.050
are going to be very varied.

00:40:52.050 --> 00:40:55.050
So why don't we start
with a very open format?

00:40:55.050 --> 00:40:58.640
What it means is that
each beacon can have

00:40:58.640 --> 00:41:01.240
various types of frame formats.

00:41:01.240 --> 00:41:04.080
What it means is that a
beacon can emit its ID,

00:41:04.080 --> 00:41:06.410
or it can emit
its URL, or it can

00:41:06.410 --> 00:41:09.010
emit something else--
the 20 bytes of payload,

00:41:09.010 --> 00:41:10.260
remember, from the last slide.

00:41:10.260 --> 00:41:12.512
So basically, that's
the payload that we

00:41:12.512 --> 00:41:16.084
are going to use, and
define a series of use cases

00:41:16.084 --> 00:41:17.250
together with the community.

00:41:17.250 --> 00:41:19.530
So that's basically where
the open comes from.

00:41:19.530 --> 00:41:21.660
And we also wanted to
make it open source

00:41:21.660 --> 00:41:24.100
so you can help us extend
some of the frame formats,

00:41:24.100 --> 00:41:25.857
et cetera, which
we'll talk about.

00:41:25.857 --> 00:41:27.940
And then we also wanted
to make it cross platform.

00:41:27.940 --> 00:41:29.314
So it not just
works for Android,

00:41:29.314 --> 00:41:31.130
but also, it works
efficiently on iOS.

00:41:31.130 --> 00:41:34.090
So these are the key tenets
of Eddystone beacon platform

00:41:34.090 --> 00:41:36.360
that we have built.

00:41:36.360 --> 00:41:37.820
So as I said, this
is open source.

00:41:37.820 --> 00:41:40.720
Open source means that we
have chosen to open source

00:41:40.720 --> 00:41:46.440
the frame formats, the SDK, the
samples, all of that on GitHub.

00:41:46.440 --> 00:41:51.750
So as you can see, there are
more than 165 commits to date.

00:41:51.750 --> 00:41:54.580
And we welcome all of
you to come work with us

00:41:54.580 --> 00:41:59.010
and extend the Beacon
platform on GitHub with us.

00:41:59.010 --> 00:42:00.920
And then the frame formats.

00:42:00.920 --> 00:42:03.390
Frame formats are the
fundamental elements

00:42:03.390 --> 00:42:05.090
of the entire platform.

00:42:05.090 --> 00:42:08.220
So if you stick a beacon,
you can configure that beacon

00:42:08.220 --> 00:42:10.360
to emit multiple frame formats.

00:42:10.360 --> 00:42:13.870
What it means is that you
can use the same hardware

00:42:13.870 --> 00:42:16.250
to operate in different modes.

00:42:16.250 --> 00:42:18.940
So one way is-- let's
say you take a beacon,

00:42:18.940 --> 00:42:21.520
and you stick it on the podium,
and say, hey, the podium

00:42:21.520 --> 00:42:23.139
I'm going to assign an ID.

00:42:23.139 --> 00:42:24.680
And semantically,
I'm going to define

00:42:24.680 --> 00:42:27.010
that this ID means this stage.

00:42:27.010 --> 00:42:29.550
And you are going to
use that to emit, let's

00:42:29.550 --> 00:42:31.280
say, once every 10 seconds.

00:42:31.280 --> 00:42:32.830
And the same
beacon, you can also

00:42:32.830 --> 00:42:37.880
configure that to emit a URL
assigned to the same bacon

00:42:37.880 --> 00:42:40.950
once every 100 seconds,
and so on and so forth.

00:42:40.950 --> 00:42:45.240
So you can use the same hardware
and apply various frame formats

00:42:45.240 --> 00:42:47.700
so your application
listening to that beacon

00:42:47.700 --> 00:42:50.340
can make use of these
different frame formats

00:42:50.340 --> 00:42:52.830
in building different
experiences when mobile apps

00:42:52.830 --> 00:42:55.150
or users come near them.

00:42:55.150 --> 00:42:58.760
And we also working on a
series of new frame formats.

00:42:58.760 --> 00:43:02.060
So this is where, again, if you
guys have a specific use case

00:43:02.060 --> 00:43:04.340
or scenario that you
want to work with us,

00:43:04.340 --> 00:43:06.202
we welcome you to
come and contribute

00:43:06.202 --> 00:43:07.660
to some of these
frame formats that

00:43:07.660 --> 00:43:10.740
may be useful for the
rest of the community.

00:43:10.740 --> 00:43:13.612
And the last one, the key tenet
of the Eddystone platform--

00:43:13.612 --> 00:43:15.320
this has to work both
on Android and iOS.

00:43:15.320 --> 00:43:17.590
So we have nearby APIs.

00:43:17.590 --> 00:43:20.280
The SDK is available to
you, both on Android and iOS

00:43:20.280 --> 00:43:21.210
platforms.

00:43:21.210 --> 00:43:25.884
And by using these tools, it's
fairly straightforward for you

00:43:25.884 --> 00:43:26.800
to implement your app.

00:43:26.800 --> 00:43:29.180
If you are programming
something on Android,

00:43:29.180 --> 00:43:31.740
you probably are going to use
exactly the same paradigms

00:43:31.740 --> 00:43:34.990
of nearby messages and
subscribing to these channels

00:43:34.990 --> 00:43:36.280
and responding to beacons.

00:43:36.280 --> 00:43:37.700
All these concepts
are going to be

00:43:37.700 --> 00:43:39.790
exactly the same
on both platforms,

00:43:39.790 --> 00:43:42.850
and that makes it really
easy for you to build apps.

00:43:42.850 --> 00:43:44.690
And how does it
all fit together?

00:43:44.690 --> 00:43:46.570
So there are three layers.

00:43:46.570 --> 00:43:48.800
There is the beacon hardware.

00:43:48.800 --> 00:43:52.660
As I described, these
are the tiny devices that

00:43:52.660 --> 00:43:54.430
come from many of our partners.

00:43:54.430 --> 00:43:56.290
And then there are mobile SDKs.

00:43:56.290 --> 00:43:58.780
So the cloud
service is where you

00:43:58.780 --> 00:44:01.870
are going to add some more
meaning to these beacons.

00:44:01.870 --> 00:44:04.630
What it means is that--
let's say, as I said,

00:44:04.630 --> 00:44:06.920
if you stick a beacon
here on the stage,

00:44:06.920 --> 00:44:10.940
you can have that
ID have a definition

00:44:10.940 --> 00:44:12.030
of semantic location.

00:44:12.030 --> 00:44:15.140
So that definition can
exist in an app offline.

00:44:15.140 --> 00:44:17.510
Or you can store it
in the cloud and say,

00:44:17.510 --> 00:44:22.500
any app that sees this ID
has to hit this cloud service

00:44:22.500 --> 00:44:24.410
and get the meaning
of that beacon.

00:44:24.410 --> 00:44:27.270
And that's where the Proximity
Beacon API service is going

00:44:27.270 --> 00:44:29.030
to be a hosted cloud
service for you guys

00:44:29.030 --> 00:44:32.240
to register your beacons and
attach a bunch of metadata,

00:44:32.240 --> 00:44:34.370
whether it is semantic
location or whether it

00:44:34.370 --> 00:44:37.220
is a precise location,
and so on and so forth,

00:44:37.220 --> 00:44:39.140
so your application
knows which beacon

00:44:39.140 --> 00:44:42.500
they are listening to and
then how to react to them.

00:44:42.500 --> 00:44:44.120
So the way that
you would actually

00:44:44.120 --> 00:44:46.600
proceed with the platform
is you take a beacon,

00:44:46.600 --> 00:44:47.520
and you provision it.

00:44:47.520 --> 00:44:49.950
Provisioning means that
you are going to define,

00:44:49.950 --> 00:44:53.920
preconfigure sets
of at what frequency

00:44:53.920 --> 00:44:56.890
you want to emit the ID frame,
at what frequency you want

00:44:56.890 --> 00:44:59.940
to emit the URL frame if you
have it, and at what frequency

00:44:59.940 --> 00:45:03.420
you want to emit the telemetry
frame, and so on and so forth.

00:45:03.420 --> 00:45:05.250
And once you have
defined that, then you

00:45:05.250 --> 00:45:07.990
will register with the
Google Cloud Service and say,

00:45:07.990 --> 00:45:10.360
hey, this beacon that
I'm going to stick here

00:45:10.360 --> 00:45:12.970
means the stage at the Strand.

00:45:12.970 --> 00:45:14.570
And once the
definition is assigned

00:45:14.570 --> 00:45:16.534
and once the
metadata is assigned,

00:45:16.534 --> 00:45:17.950
you are ready to
go with your app.

00:45:17.950 --> 00:45:21.180
You can take any of the
SDKs, Android and iOS,

00:45:21.180 --> 00:45:23.060
and build your application.

00:45:23.060 --> 00:45:25.370
And the way it works is the
data flow is pretty simple.

00:45:25.370 --> 00:45:27.460
The beacons are
one-way transmitters.

00:45:27.460 --> 00:45:30.440
They're constantly emitting
their ID to your app

00:45:30.440 --> 00:45:33.020
the phone is hosting.

00:45:33.020 --> 00:45:36.400
And once your Android or iOS
phone that the app is running,

00:45:36.400 --> 00:45:39.970
and it's listening to any
incoming beacon advertisements.

00:45:39.970 --> 00:45:42.720
And once this message
is heard, basically,

00:45:42.720 --> 00:45:45.400
the app going to look up
the Google cloud service

00:45:45.400 --> 00:45:47.236
and say, OK, what
does this beacon mean?

00:45:47.236 --> 00:45:48.860
And Google cloud
service will tell you,

00:45:48.860 --> 00:45:51.320
here is the metadata you
have attached to your beacon.

00:45:51.320 --> 00:45:52.820
You said this beacon
means the stage

00:45:52.820 --> 00:45:55.430
at Strand, or your
thermostat at your home,

00:45:55.430 --> 00:45:56.630
and so on and so forth.

00:45:56.630 --> 00:45:58.840
Once you have that
metadata in your app,

00:45:58.840 --> 00:46:02.020
you are going to make use of it
and do something with it that's

00:46:02.020 --> 00:46:04.220
interesting to the users.

00:46:04.220 --> 00:46:05.970
So there are more
than 18 partners

00:46:05.970 --> 00:46:09.270
that we have lined up that can
provide these beacons for you.

00:46:09.270 --> 00:46:10.690
These are all
certified partners.

00:46:10.690 --> 00:46:13.310
Certified means that they
conform to the Eddystone

00:46:13.310 --> 00:46:15.310
standards in terms of
implementing all the frame

00:46:15.310 --> 00:46:16.310
formats.

00:46:16.310 --> 00:46:21.350
And they also work with our
SDK right out of the box.

00:46:21.350 --> 00:46:23.812
And some of the things
that, at Google, we

00:46:23.812 --> 00:46:25.270
are doing with this
technology-- we

00:46:25.270 --> 00:46:28.530
are obviously wanting to
take advantage of this

00:46:28.530 --> 00:46:29.550
to the fullest extent.

00:46:29.550 --> 00:46:31.710
So we have integrated
this Beacon platform

00:46:31.710 --> 00:46:34.060
into Google Maps on Android.

00:46:34.060 --> 00:46:37.040
And some of the features that
we are just rolling out-- we

00:46:37.040 --> 00:46:40.380
have launched a
pilot in Portland

00:46:40.380 --> 00:46:42.780
where you walk up
to any transit stop,

00:46:42.780 --> 00:46:45.650
and you get the real
time transit information

00:46:45.650 --> 00:46:47.340
in less than 500 milliseconds.

00:46:47.340 --> 00:46:51.330
So the entire thing was built on
top of the Eddystone platform.

00:46:51.330 --> 00:46:55.120
And this is on an Android--
Android Google Maps.

00:46:55.120 --> 00:46:57.700
There are more things
that we are trying to do.

00:46:57.700 --> 00:47:00.730
Obviously, with Google Now,
where you walk into a place

00:47:00.730 --> 00:47:01.990
and you get notifications.

00:47:01.990 --> 00:47:03.840
And some of you may
have already seen

00:47:03.840 --> 00:47:06.730
some of the notifications
that pop up at a place.

00:47:06.730 --> 00:47:10.100
So those are the things that
we're working on as well.

00:47:10.100 --> 00:47:13.060
All of this brings us
back to one thing, which

00:47:13.060 --> 00:47:16.590
is, as Timothy has
alluded to as part of IoT,

00:47:16.590 --> 00:47:19.310
beacons are a great way
to provide that context,

00:47:19.310 --> 00:47:20.640
especially indoors.

00:47:20.640 --> 00:47:22.140
When you are indoors,
you are trying

00:47:22.140 --> 00:47:24.210
to provide the semantic
meaning of what

00:47:24.210 --> 00:47:27.190
you are interacting with or
what you are standing next to.

00:47:27.190 --> 00:47:29.760
As I said, it could
be an aisle in a shop,

00:47:29.760 --> 00:47:31.980
or it could be a
thermostat at your home,

00:47:31.980 --> 00:47:35.130
or it could be a point of sale
at your favorite coffee shop.

00:47:35.130 --> 00:47:37.340
All these things are
going to be immensely

00:47:37.340 --> 00:47:41.290
useful in terms of providing
that context into your app.

00:47:41.290 --> 00:47:43.024
So this is where
beacons come into play.

00:47:43.024 --> 00:47:44.690
And this is where you
guys are coming in

00:47:44.690 --> 00:47:48.130
to play in figuring out what
can be done to extend Eddystone

00:47:48.130 --> 00:47:52.800
into providing those
powerful contextual apps.

00:47:52.800 --> 00:47:55.440
With that, we have
plenty of other resources

00:47:55.440 --> 00:47:56.670
available at this conference.

00:47:56.670 --> 00:47:59.990
We have Ask Me Anything
session tomorrow.

00:47:59.990 --> 00:48:02.800
And then there is one more
developer-oriented session

00:48:02.800 --> 00:48:04.560
later on today.

00:48:04.560 --> 00:48:06.490
Obviously, we would
love to see you there.

00:48:06.490 --> 00:48:09.700
There will be members of
our team waiting for you

00:48:09.700 --> 00:48:11.160
to answer any questions.

00:48:11.160 --> 00:48:14.210
And also, I think
Timothy obviously didn't

00:48:14.210 --> 00:48:15.770
want you to leave empty handed.

00:48:15.770 --> 00:48:18.180
So he'll be here to tell
you a little bit more

00:48:18.180 --> 00:48:21.900
about what you got this morning.

00:48:21.900 --> 00:48:23.620
TIMOTHY JORDAN:
Thank you, Chandu.

00:48:23.620 --> 00:48:26.368
[APPLAUSE]

00:48:28.059 --> 00:48:28.850
That was a big box.

00:48:32.235 --> 00:48:33.110
So what's in the box?

00:48:33.110 --> 00:48:35.620
Well, we didn't want you
to leave empty handed.

00:48:35.620 --> 00:48:37.100
In addition to
the great sessions

00:48:37.100 --> 00:48:38.310
and technical
information that you're

00:48:38.310 --> 00:48:39.840
going to hear
today and tomorrow,

00:48:39.840 --> 00:48:42.460
we wanted to make sure you
had the right tools to start

00:48:42.460 --> 00:48:43.790
building today.

00:48:43.790 --> 00:48:48.090
So we're giving you a Brillo
and Weave Development Kit--

00:48:48.090 --> 00:48:51.940
[APPLAUSE]

00:48:51.940 --> 00:48:52.520
--a beacon--

00:48:55.268 --> 00:48:57.560
[APPLAUSE]

00:48:57.560 --> 00:48:59.414
--and of course, Cardboard.

00:48:59.414 --> 00:49:01.649
[APPLAUSE]

00:49:01.649 --> 00:49:03.785
You can't leave a Google
event without Cardboard.

00:49:07.430 --> 00:49:09.180
Today, with these
tools and sessions,

00:49:09.180 --> 00:49:12.130
let's start our journey together
beyond the internet of things.

00:49:12.130 --> 00:49:13.520
Thank you.

00:49:13.520 --> 00:49:14.720
[APPLAUSE]

00:49:14.720 --> 00:49:17.470
[MUSIC PLAYING]

