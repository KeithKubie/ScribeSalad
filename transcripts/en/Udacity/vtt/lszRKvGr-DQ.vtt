WEBVTT
Kind: captions
Language: en

00:00:00.280 --> 00:00:02.969
So turns out if we want
to understand td lambda,

00:00:02.969 --> 00:00:06.660
a really useful of studying it
is by studying naught td lambda.

00:00:06.660 --> 00:00:10.200
So in particular, we're going to look
at k step estimators for a moment and

00:00:10.200 --> 00:00:12.250
then we're going to relate
that back to td lambda.

00:00:12.250 --> 00:00:14.550
So here what a k step estimator is.

00:00:14.550 --> 00:00:17.600
So let's say, if we're trying to
estimate the value of a state, st.

00:00:17.600 --> 00:00:21.650
So it's a state that we just are leaving
as a function of what happens next.

00:00:21.650 --> 00:00:23.630
So let's look at this
first estimator here.

00:00:23.630 --> 00:00:26.880
It says that we're going to estimate
the value of a state that we're leaving

00:00:26.880 --> 00:00:29.830
by moving it a little bit in
the direction of the immediate reward

00:00:29.830 --> 00:00:34.280
plus the discounted estimated value
of the state that we landed in.

00:00:34.280 --> 00:00:36.170
And we're going to just move
a little bit in that direction.

00:00:36.170 --> 00:00:37.040
So, do you recognize this?

00:00:37.040 --> 00:00:38.760
Have you seen this before?

00:00:38.760 --> 00:00:40.020
&gt;&gt; I believe I have seen this before.

00:00:40.020 --> 00:00:40.910
&gt;&gt; What do we call it?

00:00:40.910 --> 00:00:42.740
&gt;&gt; I don't remember anymore.

00:00:42.740 --> 00:00:44.280
&gt;&gt; Oh, well that's fortunate.

00:00:44.280 --> 00:00:45.520
&gt;&gt; But I've seen it before,

00:00:45.520 --> 00:00:47.760
it's just like a one step
look ahead sort of thing.

00:00:47.760 --> 00:00:50.850
&gt;&gt; Yeah,
exactly which is what we're calling td0.

00:00:50.850 --> 00:00:51.400
&gt;&gt; All right.

00:00:51.400 --> 00:00:52.710
Yes, yes, that makes sense.

00:00:52.710 --> 00:00:54.750
&gt;&gt; And in fact, you're exactly right.

00:00:54.750 --> 00:00:58.150
That the way to think about is
there's a one step estimator.

00:00:58.150 --> 00:00:59.200
So it's a one step estimator.

00:00:59.200 --> 00:01:02.330
In that, we'll use the immediate
reward that we got plus the value of

00:01:02.330 --> 00:01:03.470
the state that we land in.

00:01:03.470 --> 00:01:05.710
But let's contrast that
with a two-step estimator.

00:01:05.710 --> 00:01:07.388
We call it e2.

00:01:07.388 --> 00:01:08.082
Estimator 2,

00:01:08.082 --> 00:01:11.890
where what we do is to estimate
the value of a state that we're leaving.

00:01:11.890 --> 00:01:14.710
We're going to move a little bit int he
direction of the immediate reward that

00:01:14.710 --> 00:01:20.260
we received, plus the discounted
reward that we receive next, plus

00:01:20.260 --> 00:01:23.860
the double discounted value of the state
that we landed in two steps from now.

00:01:24.940 --> 00:01:29.250
So now instead of where we were before,
we did an estimate by taking one reward.

00:01:29.250 --> 00:01:33.070
And we estimate the rest of the sequence
using our current estimates.

00:01:33.070 --> 00:01:37.450
Here we're taking two rewards, and using
that as our immediate estimate plus

00:01:37.450 --> 00:01:41.880
our estimate of the future taken as the
state that we reach two steps from now.

00:01:41.880 --> 00:01:43.970
So does that make sense kind of
as an extension of that idea?

00:01:43.970 --> 00:01:47.251
&gt;&gt; It not only makes sense though,
if e1 is at one-step look ahead,

00:01:47.251 --> 00:01:49.250
then e2 is two-step look ahead.

00:01:49.250 --> 00:01:50.270
&gt;&gt; Yeah.

00:01:50.270 --> 00:01:51.840
Yeah exactly.

00:01:51.840 --> 00:01:52.950
So we used two steps,

00:01:52.950 --> 00:01:56.380
two real steps followed by
this kind of look ahead thing.

00:01:56.380 --> 00:01:59.230
And we can do that for
three, right here.

00:01:59.230 --> 00:02:04.340
And we can do that for k, where we're
estimating the value of a state

00:02:04.340 --> 00:02:08.220
by k rewards summed up here, plus and

00:02:08.220 --> 00:02:12.870
then we estimate the value of the future
by looking at the state we end up in

00:02:12.870 --> 00:02:16.580
k steps from now, and
discounting that by k steps.

00:02:16.580 --> 00:02:17.240
And in fact,

00:02:17.240 --> 00:02:22.190
if we continue doing this arbitrarily,
we eventually get to e infinity.

00:02:22.190 --> 00:02:23.720
Where, let's see what would
happen int that case.

00:02:23.720 --> 00:02:27.230
So we get the sum of rewards, and
it keeps going and it keeps going.

00:02:27.230 --> 00:02:31.710
And eventually at infinity, we look at
the state that we end up at infinity,

00:02:31.710 --> 00:02:32.990
which of course, isn't a real thing.

00:02:32.990 --> 00:02:35.940
But then, it's okay, because we
discounted by gamma to the infinity,

00:02:35.940 --> 00:02:37.010
which is zero.

00:02:37.010 --> 00:02:39.511
So this piece of the term
actually drops out, and

00:02:39.511 --> 00:02:42.860
we just end up with this
infinite sum of rewards.

00:02:42.860 --> 00:02:46.050
Now, this last estimator should
look familiar to you too, Charles.

00:02:46.050 --> 00:02:48.490
&gt;&gt; Yeah, that looks like td1.

00:02:48.490 --> 00:02:49.050
&gt;&gt; Good!

00:02:49.050 --> 00:02:52.575
So now we've got td0 on the one side,
as a one step estimator and

00:02:52.575 --> 00:02:55.690
td1 on the other side,
as an infinity step estimator.

00:02:55.690 --> 00:02:58.940
And we've got these other things in
between that we don't really have or

00:02:58.940 --> 00:03:00.690
possibly even need a name for.

00:03:00.690 --> 00:03:04.340
&gt;&gt; Well, that makes a lot more sense
than with the title k-step estimators.

00:03:04.340 --> 00:03:06.510
I was worried this was
going to turn in some kind of.

00:03:06.510 --> 00:03:07.980
Commentary about dub step.

00:03:07.980 --> 00:03:10.110
&gt;&gt; Oh, yes, break it down.

00:03:10.110 --> 00:03:12.195
So that's not going to
happen in this case.

00:03:12.195 --> 00:03:14.660
&gt;&gt; [LAUGH]
&gt;&gt; It's probably for the best.

00:03:14.660 --> 00:03:19.170
&gt;&gt; So what I need to do next is actually
relate these quantities to td lambda

00:03:19.170 --> 00:03:23.860
which we're going to show is a weighted
combination of all these estimators.

00:03:23.860 --> 00:03:24.960
&gt;&gt; All infinity of them?

00:03:24.960 --> 00:03:26.020
&gt;&gt; All infinity of them.

00:03:26.020 --> 00:03:27.890
&gt;&gt; Oh, that's pretty impressive.

