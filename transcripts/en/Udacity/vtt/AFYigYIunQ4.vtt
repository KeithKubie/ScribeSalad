WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
[Peter] The correct answer for this

00:00:03.000 --> 00:00:06.000
is all of them but the second choice.

00:00:06.000 --> 00:00:08.000
Let's see why.

00:00:08.000 --> 00:00:10.000
Let's pick an example, string s.

00:00:10.000 --> 00:00:12.000
Let's say s is duck.

00:00:12.000 --> 00:00:16.000
In the first example, we concatenate a with s,

00:00:16.000 --> 00:00:20.000
so taking one onwards is going to give us back duck,

00:00:20.000 --> 00:00:23.000
which is our original string s.

00:00:23.000 --> 00:00:26.000
This works. For the second choice, let's just plug in duck.

00:00:26.000 --> 00:00:29.000
The first character, the zeroth character in duck

00:00:29.000 --> 00:00:32.000
is going to be d, and we're going to concatenate that

00:00:32.000 --> 00:00:39.000
with the rest of the string, giving us back our original string duck.

00:00:39.000 --> 00:00:42.000
So this seems like it works, but we have to remember that s

00:00:42.000 --> 00:00:45.000
can be the empty string.

00:00:45.000 --> 00:00:47.000
If we try taking the character at position 0,

00:00:47.000 --> 00:00:51.000
we would get an error because there is no character at position 0

00:00:51.000 --> 00:00:53.000
because there are no characters in s.

00:00:53.000 --> 00:00:56.000
Moving on, if we try adding an empty string

00:00:56.000 --> 00:01:01.000
onto s, we get exactly what we had before because we're not adding anything.

00:01:01.000 --> 00:01:03.000
For the last choice, it doesn't seem completely obvious

00:01:03.000 --> 00:01:05.000
that it works for the empty string.

00:01:05.000 --> 00:01:10.000
It seems unintuitive that taking every character from position 0 onward

00:01:10.000 --> 00:01:13.000
would not result in an error because there are no characters.

00:01:13.000 --> 00:01:16.000
Well, we have to remember that for the subsequence operator,

00:01:16.000 --> 00:01:18.000
this does not cause an error.

00:01:18.000 --> 00:01:22.000
Why is that the case? Because.

