WEBVTT
Kind: captions
Language: en

00:00:03.710 --> 00:00:05.710
OK guys, good evening.

00:00:05.710 --> 00:00:08.770
So today we're going to
talk about web components,

00:00:08.770 --> 00:00:12.250
and all this chance
to create the future.

00:00:12.250 --> 00:00:13.880
My name is Zeno Rocha.

00:00:13.880 --> 00:00:14.796
Here's my Twitter.

00:00:14.796 --> 00:00:16.170
If you want to
send any feedback,

00:00:16.170 --> 00:00:18.840
you know, this talk sucks,
this talk is awesome,

00:00:18.840 --> 00:00:21.050
if you have any questions,
just let me know.

00:00:21.050 --> 00:00:24.770
Just ping me on Twitter, I'll be
more than happy to answer you.

00:00:24.770 --> 00:00:27.680
And I'm from Brazil,
which is kind of crazy,

00:00:27.680 --> 00:00:33.095
because I flew like 16 hours to
be here for a 15 minute talk.

00:00:33.095 --> 00:00:36.740
[APPLAUSE]

00:00:36.740 --> 00:00:39.750
And I'm extremely happy
to be here with you today.

00:00:39.750 --> 00:00:43.030
It's just amazing to see
all those people together

00:00:43.030 --> 00:00:47.040
to talk about web components
and discuss this new thing.

00:00:47.040 --> 00:00:49.260
And today's basically
about those three things.

00:00:49.260 --> 00:00:51.810
It's about how to
create your element,

00:00:51.810 --> 00:00:54.910
it's about how to learn
how to create your element,

00:00:54.910 --> 00:00:58.430
and it's about sharing your
element and all your work

00:00:58.430 --> 00:01:00.840
to the world.

00:01:00.840 --> 00:01:03.810
When I first started
learning web components

00:01:03.810 --> 00:01:05.600
was in the beginning
of last year.

00:01:05.600 --> 00:01:07.180
And I was learning
web components,

00:01:07.180 --> 00:01:09.480
was pretty amazed
by it, but then

00:01:09.480 --> 00:01:12.860
I saw those two talks
from Alex and Matthew,

00:01:12.860 --> 00:01:17.010
and then this other talk from
Eric on Google I/O last year.

00:01:17.010 --> 00:01:19.425
And I was completely amazed.

00:01:19.425 --> 00:01:22.650
It's like, oh my god,
this thing is crazy.

00:01:22.650 --> 00:01:23.900
Web component's crazy.

00:01:23.900 --> 00:01:25.620
It's going to change everything.

00:01:25.620 --> 00:01:28.300
I really need to
study this thing.

00:01:28.300 --> 00:01:33.150
I was just like that guy,
exactly same feeling.

00:01:33.150 --> 00:01:35.220
And I started learning
web components,

00:01:35.220 --> 00:01:36.840
creating my new things.

00:01:36.840 --> 00:01:40.150
But at that time, there
was no starter kit.

00:01:40.150 --> 00:01:43.020
So there were a couple
tutorials to teach you

00:01:43.020 --> 00:01:46.160
how to create your element,
but there was no starter kit--

00:01:46.160 --> 00:01:48.950
something, some boilerplate
code, something like that,

00:01:48.950 --> 00:01:52.610
that I could just jump in and
start creating my elements.

00:01:52.610 --> 00:01:54.500
So since there was
no starter kit,

00:01:54.500 --> 00:01:57.220
I decided to create our own.

00:01:57.220 --> 00:02:01.610
So if you want to create your
element using Polymer nowadays,

00:02:01.610 --> 00:02:07.100
you can just go to
 github.com/webcomponents/polymer-boilerplate,

00:02:07.100 --> 00:02:10.539
and we have this boilerplate
for you, which is great.

00:02:10.539 --> 00:02:12.810
There's a lot of stuff
that you can use it.

00:02:12.810 --> 00:02:16.680
If you want to use X-Tag, no
problem, we got you covered.

00:02:16.680 --> 00:02:22.174
It's basically the same web
component but using X-Tag.

00:02:22.174 --> 00:02:24.340
But if you don't want to
use any of those solutions,

00:02:24.340 --> 00:02:27.290
you want to see how web
components will interact just

00:02:27.290 --> 00:02:30.250
using plain JavaScript,
just vanilla JavaScript,

00:02:30.250 --> 00:02:34.340
we got another one, which
is element boilerplate.

00:02:34.340 --> 00:02:38.060
So those three repos, they tried
to solve the exact same problem

00:02:38.060 --> 00:02:39.550
using those different solutions.

00:02:39.550 --> 00:02:42.240
And you can just
go ahead, see it,

00:02:42.240 --> 00:02:46.360
and decide which one is
better for your problem.

00:02:46.360 --> 00:02:48.830
And what's included
in those boilerplates?

00:02:48.830 --> 00:02:51.750
So we encourage a
set of best practice.

00:02:51.750 --> 00:02:56.270
We really want you to share
elements on Bower, for example.

00:02:56.270 --> 00:02:58.750
We want you to have
some Grunt tasks

00:02:58.750 --> 00:03:01.560
that you can put your
live demos online.

00:03:01.560 --> 00:03:04.190
We want some
lifecycle call backs,

00:03:04.190 --> 00:03:06.220
which are pretty useful
when you're developing.

00:03:06.220 --> 00:03:09.680
So these boilerplates contain
those kinds of things.

00:03:09.680 --> 00:03:14.220
But, still, that's
not totally awesome,

00:03:14.220 --> 00:03:17.420
because you go to GitHub,
you click on Fork,

00:03:17.420 --> 00:03:19.010
and then you need
to make some edits.

00:03:19.010 --> 00:03:20.985
You need to do some
find and replace

00:03:20.985 --> 00:03:24.430
and comments to change
and create your element.

00:03:24.430 --> 00:03:27.470
So we decided, hey, we
can automate this thing.

00:03:27.470 --> 00:03:29.790
And we created a
Yeoman generator

00:03:29.790 --> 00:03:32.260
that can automate even
more live for you.

00:03:32.260 --> 00:03:36.670
So it's on
webcomponents/generator-element.

00:03:36.670 --> 00:03:40.030
And let me show
you how it works.

00:03:40.030 --> 00:03:42.830
So let me create a folder here.

00:03:42.830 --> 00:03:44.325
It's going to be
called my element.

00:03:47.510 --> 00:03:48.540
Nice.

00:03:48.540 --> 00:03:50.000
And then you install it.

00:03:50.000 --> 00:03:52.910
And after you install it
from NPM, all you need to do

00:03:52.910 --> 00:03:56.630
is type yo element.

00:03:56.630 --> 00:04:01.480
And we show you this little
awesome welcome thing

00:04:01.480 --> 00:04:03.280
that I took like
three hours to create.

00:04:05.850 --> 00:04:08.182
And then you have
this first question.

00:04:08.182 --> 00:04:10.140
What do you want to use
to create your element?

00:04:10.140 --> 00:04:11.680
You want Polymer,
you want X-Tag,

00:04:11.680 --> 00:04:13.640
or you just want vanilla JS?

00:04:13.640 --> 00:04:15.690
I just want Polymer.

00:04:15.690 --> 00:04:17.600
My element will be
called my element.

00:04:17.600 --> 00:04:19.620
Yeah, I want
lifecycle callbacks.

00:04:19.620 --> 00:04:23.290
And in three seconds, you
have your element created.

00:04:23.290 --> 00:04:24.280
Let's check.

00:04:24.280 --> 00:04:26.140
What is this?

00:04:26.140 --> 00:04:27.760
So it's just the element itself.

00:04:27.760 --> 00:04:29.690
It's important Polymer.

00:04:29.690 --> 00:04:31.830
They have the Polymer
definition here

00:04:31.830 --> 00:04:33.630
and the lifecycle callbacks.

00:04:33.630 --> 00:04:34.890
So this is pretty great.

00:04:34.890 --> 00:04:37.350
But this is just the element.

00:04:37.350 --> 00:04:39.360
I want to create a
repository on GitHub

00:04:39.360 --> 00:04:44.150
that I can share with everybody
and contains my element.

00:04:44.150 --> 00:04:49.500
If you type yo element
repo, then you've

00:04:49.500 --> 00:04:53.330
got this awesome
welcome message.

00:04:53.330 --> 00:04:56.830
And almost the
same questions, but

00:04:56.830 --> 00:04:58.730
what's the GitHub
repository you want?

00:04:58.730 --> 00:05:00.820
What's your GitHub user name?

00:05:00.820 --> 00:05:02.660
What's the name of your element?

00:05:02.660 --> 00:05:03.940
What's the description?

00:05:03.940 --> 00:05:04.830
Life cycle callbacks?

00:05:04.830 --> 00:05:05.330
Yes.

00:05:05.330 --> 00:05:07.470
I want to some
useful Grunt tasks.

00:05:07.470 --> 00:05:10.120
And then it generates
all the files for you.

00:05:10.120 --> 00:05:12.630
It runs NPM install
and Bower install,

00:05:12.630 --> 00:05:15.620
and then grabs all the
dependencies, and boom.

00:05:18.440 --> 00:05:26.140
If I open this in Sublime, you
have the application loading

00:05:26.140 --> 00:05:30.590
platform loading your element,
importing your element,

00:05:30.590 --> 00:05:34.760
and now you have your element
with Bower and the node modules

00:05:34.760 --> 00:05:37.310
already installed for you.

00:05:37.310 --> 00:05:39.100
So this pretty great, right?

00:05:39.100 --> 00:05:41.750
So it's so easy to create
your element nowadays.

00:05:41.750 --> 00:05:46.680
So, OK, we got creating
elements covered.

00:05:46.680 --> 00:05:51.100
So when we put together this
boilerplate, lots of people

00:05:51.100 --> 00:05:52.900
started to create
their elements.

00:05:52.900 --> 00:05:56.371
And they end up
doing crazy things.

00:05:56.371 --> 00:05:56.870
So

00:05:56.870 --> 00:05:58.580
One of the things
that people have

00:05:58.580 --> 00:06:01.810
been doing-- so this
library is tracking.js.

00:06:01.810 --> 00:06:04.650
It's a library created
by Eduardo Lundgren,

00:06:04.650 --> 00:06:06.400
he works with me at Liferay.

00:06:06.400 --> 00:06:11.100
And it's a library to do color
recognition and face detection.

00:06:11.100 --> 00:06:14.890
And we thought, hey, what
if we wrap this library

00:06:14.890 --> 00:06:16.240
into an element?

00:06:16.240 --> 00:06:18.678
Wouldn't that be cool?

00:06:18.678 --> 00:06:21.070
Yeah, probably.

00:06:21.070 --> 00:06:25.990
So I got these PlayStation
controls here, I

00:06:25.990 --> 00:06:30.970
have some colors,
magenta, cyan, other ones.

00:06:30.970 --> 00:06:33.170
And I hope this works,
because this really

00:06:33.170 --> 00:06:34.720
depends on the light.

00:06:34.720 --> 00:06:37.150
So let's see how it goes.

00:06:37.150 --> 00:06:39.470
No, you can turn
it on, no problem.

00:06:44.150 --> 00:06:45.290
So, first.

00:06:48.140 --> 00:06:49.925
Let's do some
changes in the code.

00:06:53.330 --> 00:06:55.400
Let me explain to you
what is this about.

00:06:55.400 --> 00:06:58.940
So I have a video, and
I'm extending this video

00:06:58.940 --> 00:07:00.760
to create a video track.

00:07:00.760 --> 00:07:02.200
So my element is video tracking.

00:07:02.200 --> 00:07:05.160
I'm expanding it and
creating a new thing.

00:07:05.160 --> 00:07:06.910
And I added two new attributes.

00:07:06.910 --> 00:07:09.590
The first one is what,
what do you want to track?

00:07:09.590 --> 00:07:13.320
I want to track a color.

00:07:13.320 --> 00:07:15.100
And what's the color?

00:07:15.100 --> 00:07:17.235
Well, the color is cyan.

00:07:19.930 --> 00:07:21.770
Can you turn on
the lights, please?

00:07:25.200 --> 00:07:26.050
So this is cyan.

00:07:26.050 --> 00:07:29.810
I need to do it.

00:07:29.810 --> 00:07:30.445
Oh, no.

00:07:37.826 --> 00:07:38.326
Ooo.

00:07:41.190 --> 00:07:43.015
Come on, that's awesome, guys.

00:07:43.015 --> 00:07:46.200
[APPLAUSE]

00:07:46.200 --> 00:07:49.640
All you need to do is this.

00:07:49.640 --> 00:07:51.690
But, yeah, I don't
want to track colors.

00:07:51.690 --> 00:07:53.630
I just want to track a human.

00:07:53.630 --> 00:07:56.430
But what part of a
human do you want?

00:07:56.430 --> 00:07:58.550
I want the frontal face.

00:07:58.550 --> 00:08:02.080
The frontal face seems nice.

00:08:02.080 --> 00:08:06.774
If I go here, and, ooo.

00:08:06.774 --> 00:08:07.722
Ah, no.

00:08:10.570 --> 00:08:12.050
Why zoom.

00:08:12.050 --> 00:08:13.100
So it's here.

00:08:13.100 --> 00:08:15.260
It's working.

00:08:15.260 --> 00:08:19.920
[APPLAUSE]

00:08:19.920 --> 00:08:23.870
Imagine how hard it will be
to create an element that

00:08:23.870 --> 00:08:26.890
makes face detection, right?

00:08:26.890 --> 00:08:29.341
Peter, can you
turn on the lights?

00:08:29.341 --> 00:08:29.840
Yeah.

00:08:33.669 --> 00:08:36.100
Because this next one
really depends on the light.

00:08:43.230 --> 00:08:45.600
So another element
that we created

00:08:45.600 --> 00:08:50.040
is the SF-HTML5 element,
which is pretty useful.

00:08:50.040 --> 00:08:52.280
You're going to see
how useful it is.

00:08:52.280 --> 00:08:55.090
So what we're doing here is
just importing platform JS.

00:08:55.090 --> 00:08:58.930
We're importing the element,
some CSS for the demos.

00:08:58.930 --> 00:09:06.230
And if I open this on
Firefox, it's just this.

00:09:06.230 --> 00:09:10.670
OK, it's just this
CSS thing going on.

00:09:10.670 --> 00:09:12.426
But if I turn off the lights.

00:09:23.370 --> 00:09:23.880
Ooo.

00:09:23.880 --> 00:09:26.510
[APPLAUSE]

00:09:26.510 --> 00:09:28.820
OK.

00:09:28.820 --> 00:09:31.060
So what this element
is doing under the hood

00:09:31.060 --> 00:09:33.510
is using the device
light API, which

00:09:33.510 --> 00:09:36.040
has just landed on Firefox.

00:09:36.040 --> 00:09:38.680
And we detect how much
light has in his room,

00:09:38.680 --> 00:09:40.060
and then we do something.

00:09:40.060 --> 00:09:44.610
In this case, it's just
doing some CSS changes.

00:09:44.610 --> 00:09:46.210
So, yeah, it's so awesome.

00:09:46.210 --> 00:09:49.850
You have all those
things, and people

00:09:49.850 --> 00:09:51.980
started to create
amazing things, you know?

00:09:51.980 --> 00:09:54.600
Today we saw a bunch
of crazy things

00:09:54.600 --> 00:09:57.240
that people are doing
with web components.

00:09:57.240 --> 00:10:02.960
But we needed to show to people
that those elements exist.

00:10:02.960 --> 00:10:05.230
So we needed a place
to show elements.

00:10:05.230 --> 00:10:07.220
We needed a place
for people to hey,

00:10:07.220 --> 00:10:10.960
take a look this is what I
created using web components.

00:10:10.960 --> 00:10:13.430
So we got some friends
together last year,

00:10:13.430 --> 00:10:16.710
and we created this thing
called customelements.io.

00:10:16.710 --> 00:10:19.187
I don't know if any of
you ever heard about it.

00:10:19.187 --> 00:10:20.520
Has someone ever heard about it?

00:10:20.520 --> 00:10:21.220
[APPLAUSE]

00:10:21.220 --> 00:10:23.360
Oh, that's awesome.

00:10:23.360 --> 00:10:28.870
So we created this back on
August, and it's been crazy.

00:10:28.870 --> 00:10:32.450
There's almost 200
elements in this gallery,

00:10:32.450 --> 00:10:36.076
more than 100,000 page views
on the website from all

00:10:36.076 --> 00:10:36.700
over the world.

00:10:36.700 --> 00:10:40.400
It's just one page on the
website, so yeah, it's nice.

00:10:40.400 --> 00:10:43.890
And now people are able
to share their elements.

00:10:43.890 --> 00:10:46.850
And we have a place
to put those things.

00:10:46.850 --> 00:10:49.677
Because before that,
we had, like, where

00:10:49.677 --> 00:10:50.760
should I place my element?

00:10:50.760 --> 00:10:56.080
Should I put it on NPM, Bower,
or any other package manager?

00:10:56.080 --> 00:10:58.600
And OK, Bower seems
like the best decision

00:10:58.600 --> 00:10:59.780
to put your elements, right?

00:10:59.780 --> 00:11:01.750
It's the front-end
package manager.

00:11:01.750 --> 00:11:05.640
But how can you find web
components inside of Bower?

00:11:05.640 --> 00:11:08.690
No, there's this huge
thing, ecosystem,

00:11:08.690 --> 00:11:10.600
with lots of front end packages.

00:11:10.600 --> 00:11:15.100
But you can't filter which
ones are really web components.

00:11:15.100 --> 00:11:18.590
So we made this thing to
put elements into the world.

00:11:18.590 --> 00:11:21.050
And how do you add
your element there?

00:11:21.050 --> 00:11:21.980
It's pretty easy.

00:11:21.980 --> 00:11:24.360
On your bower.json
file, all you need to do

00:11:24.360 --> 00:11:28.380
is include the web components
keyword, th this one here.

00:11:28.380 --> 00:11:31.310
When you include this keyword,
you register your package.

00:11:31.310 --> 00:11:33.770
And then it will appear
on customelements.io.

00:11:33.770 --> 00:11:36.300
So it's really, really easy.

00:11:36.300 --> 00:11:38.290
So we know how to
create elements.

00:11:38.290 --> 00:11:40.200
We know how to share them.

00:11:40.200 --> 00:11:42.720
But how do you learn
about web components?

00:11:42.720 --> 00:11:47.240
If there was no SF-HTML5 for
you, how would you learn?

00:11:47.240 --> 00:11:51.090
What's the main reference
to learn web components?

00:11:51.090 --> 00:11:53.620
Should I go to Polymer website?

00:11:53.620 --> 00:11:56.180
Or should I go to X-Tag website?

00:11:56.180 --> 00:12:00.050
Should I go to some blog
posts that I find on the web,

00:12:00.050 --> 00:12:03.760
should I go to HTML5 Rocks,
what's the main reference

00:12:03.760 --> 00:12:05.280
to learn web components?

00:12:05.280 --> 00:12:08.270
So again, we got some
friends together,

00:12:08.270 --> 00:12:12.540
friends like Addy Osmani, which
really helped in this project,

00:12:12.540 --> 00:12:16.750
and lots of awesome guys that
talked here today and are doing

00:12:16.750 --> 00:12:19.990
amazing stuff using
web components.

00:12:19.990 --> 00:12:24.070
And we are really excited
to present this to you.

00:12:24.070 --> 00:12:27.220
We have been working on this
project since last year,

00:12:27.220 --> 00:12:29.790
and we decided to
choose this conference

00:12:29.790 --> 00:12:33.310
to show it to you guys and
present for the first time.

00:12:33.310 --> 00:12:36.810
And this project is
called WebComponents.org.

00:12:36.810 --> 00:12:40.390
It's not available on
webcomponents.org now,

00:12:40.390 --> 00:12:42.570
so if you want to
reach, you need

00:12:42.570 --> 00:12:45.470
to reach
webcomponents.github.io.

00:12:45.470 --> 00:12:48.480
You can blame the
guys' work from Google

00:12:48.480 --> 00:12:52.680
that didn't set
up the domain yet.

00:12:52.680 --> 00:12:57.380
But this place is what we
want to give to the community

00:12:57.380 --> 00:12:59.980
to learn and to share
things about web components,

00:12:59.980 --> 00:13:05.080
and gather best practices, all
articles about web components,

00:13:05.080 --> 00:13:08.210
these packs of web
components, the browser

00:13:08.210 --> 00:13:10.520
support, everything,
presentations.

00:13:10.520 --> 00:13:12.690
We want to put content
there that people

00:13:12.690 --> 00:13:15.350
can learn what
web components is.

00:13:15.350 --> 00:13:19.170
And we want to put the
best content there.

00:13:19.170 --> 00:13:20.900
So what's web
components all about?

00:13:20.900 --> 00:13:23.640
It's about gathering
best practice, discussing

00:13:23.640 --> 00:13:26.600
API implementations, like how
should I build a carousel?

00:13:26.600 --> 00:13:28.430
So everybody will
start to building

00:13:28.430 --> 00:13:30.310
their own carousel
elements, right?

00:13:30.310 --> 00:13:32.940
So what's the best
way to build it?

00:13:32.940 --> 00:13:34.690
We want to introduce
useful stuff,

00:13:34.690 --> 00:13:37.710
like the Yeoman generator
or the boilerplates.

00:13:37.710 --> 00:13:39.760
And we want to highlight
articles and talks

00:13:39.760 --> 00:13:43.050
like those we have seen today.

00:13:43.050 --> 00:13:44.300
So now that's it.

00:13:44.300 --> 00:13:46.732
We got covered everything.

00:13:46.732 --> 00:13:48.190
And before leaving
you, I just want

00:13:48.190 --> 00:13:50.570
to say that the
best way to predict

00:13:50.570 --> 00:13:52.230
the future is to create it.

00:13:52.230 --> 00:13:55.140
And that's the exact same thing
that we are doing right now.

00:13:55.140 --> 00:13:57.060
We are not just
waiting for someone

00:13:57.060 --> 00:13:58.530
to create the future for us.

00:13:58.530 --> 00:14:01.990
We are here to define how
web components will be.

00:14:01.990 --> 00:14:05.260
We are here to define the
future of the web platform.

00:14:05.260 --> 00:14:05.980
That's it.

00:14:05.980 --> 00:14:06.795
Thank you.

00:14:06.795 --> 00:14:13.930
[APPLAUSE]

00:14:13.930 --> 00:14:15.930
One quick thing.

00:14:15.930 --> 00:14:17.730
Oh, the mic is off.

00:14:17.730 --> 00:14:25.320
So the slides are
here, bit.ly/wc-slides.

00:14:25.320 --> 00:14:27.830
And I got stickers.

00:14:31.320 --> 00:14:33.130
You can find me
after Rob's talk,

00:14:33.130 --> 00:14:35.370
and I can give
you some stickers.

00:14:35.370 --> 00:14:36.260
See you guys.

00:14:36.260 --> 00:14:40.520
[APPLAUSE]

00:14:40.520 --> 00:14:41.230
All right.

00:14:41.230 --> 00:14:43.470
Thank you.

