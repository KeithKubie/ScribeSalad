WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.437
[MUSIC PLAYING]

00:00:05.652 --> 00:00:06.860
FERGUS HURLEY: Hey, everyone.

00:00:06.860 --> 00:00:10.150
Welcome to the 10 secrets to
be able to increase your user

00:00:10.150 --> 00:00:12.030
retention of your application.

00:00:12.030 --> 00:00:13.840
I'm Fergus Hurley,
product manager

00:00:13.840 --> 00:00:16.300
at Google focused on improving
the quality of the Android

00:00:16.300 --> 00:00:16.935
ecosystem.

00:00:16.935 --> 00:00:18.310
JOE CASTORENA:
I'm Joe Castorena.

00:00:18.310 --> 00:00:20.362
I'm with the Google
Play BD team.

00:00:20.362 --> 00:00:22.570
RICCARDO GOVONI: And I'm
Ricardo, engineering manager

00:00:22.570 --> 00:00:24.280
in Google Play.

00:00:24.280 --> 00:00:26.860
So today we're going to
spend some time together

00:00:26.860 --> 00:00:29.260
to understand how the
Play Console can help

00:00:29.260 --> 00:00:32.920
you create great apps
that captivate your users

00:00:32.920 --> 00:00:35.980
and achieve great
user retention.

00:00:35.980 --> 00:00:40.300
To do that, we're going to spend
a good amount of time thinking

00:00:40.300 --> 00:00:41.780
about performance.

00:00:41.780 --> 00:00:43.900
We're going to have a
focus on app performance

00:00:43.900 --> 00:00:45.700
and technical quality,
and we're going

00:00:45.700 --> 00:00:48.550
to look at how you
can achieve that

00:00:48.550 --> 00:00:51.052
throughout your app lifecycle.

00:00:51.052 --> 00:00:52.510
Finally, we're
going to look at how

00:00:52.510 --> 00:00:54.340
Play is going to
reward all of you

00:00:54.340 --> 00:00:56.950
as developers for focusing
on app performance

00:00:56.950 --> 00:00:59.310
and technical quality.

00:00:59.310 --> 00:01:03.580
First, so why we'll
focus on app performance?

00:01:03.580 --> 00:01:05.060
Why does it matter?

00:01:05.060 --> 00:01:06.680
And the reason is pretty simple.

00:01:10.360 --> 00:01:13.217
Some people say that there
is an app for everything.

00:01:13.217 --> 00:01:16.140
The thing is there is
not a high-performing

00:01:16.140 --> 00:01:19.500
app for everything, and
high-performing apps

00:01:19.500 --> 00:01:22.990
achieve great and
high user retention.

00:01:22.990 --> 00:01:25.350
And that's why
performance matters.

00:01:25.350 --> 00:01:28.610
A high-quality app that doesn't
crash and doesn't stutter

00:01:28.610 --> 00:01:32.070
is critical to achieve
that high user retention.

00:01:32.070 --> 00:01:34.580
Users love these
great experiences,

00:01:34.580 --> 00:01:36.330
and they have no reason
to leave when they

00:01:36.330 --> 00:01:38.190
have a great-performing app.

00:01:38.190 --> 00:01:41.520
For US developers, it's a great
differentiator from other apps

00:01:41.520 --> 00:01:43.590
that may offer similar
functionality to yours.

00:01:46.767 --> 00:01:48.600
A couple of numbers
that you may have seen--

00:01:48.600 --> 00:01:51.270
we have shown them
earlier today--

00:01:51.270 --> 00:01:53.670
but here is some
data points that

00:01:53.670 --> 00:01:57.780
suggest why creating a
high-quality app matters.

00:01:57.780 --> 00:02:00.890
Summarizing, if you create
an app that doesn't really

00:02:00.890 --> 00:02:02.950
perform that well, users
are going to notice,

00:02:02.950 --> 00:02:04.995
and they're going to
mention it in their reviews.

00:02:04.995 --> 00:02:06.620
Other users are going
to see it, and it

00:02:06.620 --> 00:02:07.873
is going to spread around.

00:02:07.873 --> 00:02:10.289
When we look at reviews that
have been written in the Play

00:02:10.289 --> 00:02:14.670
Store, 50% of the time
people left a one star,

00:02:14.670 --> 00:02:18.600
they were mentioning
stability and bugs in the app.

00:02:18.600 --> 00:02:21.180
60% of the time they were
leaving you five stars,

00:02:21.180 --> 00:02:24.810
it was because you focused
on speed, usability, design,

00:02:24.810 --> 00:02:27.120
and all these great things.

00:02:27.120 --> 00:02:29.300
We asked a few
developers around,

00:02:29.300 --> 00:02:32.220
and here is one that we
also showed yesterday.

00:02:32.220 --> 00:02:34.130
Busuu, which is a
language learning

00:02:34.130 --> 00:02:38.100
app which is used worldwide,
made a big, big investment

00:02:38.100 --> 00:02:39.030
on performance.

00:02:39.030 --> 00:02:40.600
It's part of their culture.

00:02:40.600 --> 00:02:44.130
And with that focus and focusing
on the technical performance

00:02:44.130 --> 00:02:46.560
of their app, they
improved their star rating

00:02:46.560 --> 00:02:50.024
from 4.1 to 4.5 stars,
which is a pretty big jump

00:02:50.024 --> 00:02:50.940
if you think about it.

00:02:53.460 --> 00:02:56.400
So we're going to focus and walk
through a few features on how--

00:02:59.190 --> 00:03:00.337
There we go--

00:03:00.337 --> 00:03:01.920
Focus on a few
features that are going

00:03:01.920 --> 00:03:05.430
to help you create high-quality
apps throughout the lifecycle

00:03:05.430 --> 00:03:08.430
of your development, from
before the launch to when you're

00:03:08.430 --> 00:03:11.310
about to go live to
when you are fully live

00:03:11.310 --> 00:03:14.580
and you want to understand and
iterate your app performance.

00:03:14.580 --> 00:03:16.830
And these are going
to be our 10 secrets.

00:03:16.830 --> 00:03:19.560
So the first one I am going
to mention, before launch,

00:03:19.560 --> 00:03:21.420
is the pre-launch report.

00:03:21.420 --> 00:03:23.490
We mentioned it
today in the keynote.

00:03:23.490 --> 00:03:25.740
It's in the Play section.

00:03:25.740 --> 00:03:27.870
Pre-launch report
summarizes issues

00:03:27.870 --> 00:03:30.990
that we found when testing
your app automatically

00:03:30.990 --> 00:03:34.810
against a collection of
physical Android devices.

00:03:34.810 --> 00:03:36.810
We think that it is already
greatly contributing

00:03:36.810 --> 00:03:39.620
to the success of apps, and
already thousands of developers

00:03:39.620 --> 00:03:42.010
are using that.

00:03:42.010 --> 00:03:43.860
Pre-launch report
behind the scene

00:03:43.860 --> 00:03:46.770
is powered by the Firebase
Test Lab for Android.

00:03:46.770 --> 00:03:50.130
It's basically our data center
packed full of Android devices

00:03:50.130 --> 00:03:51.623
where you can test your app.

00:03:51.623 --> 00:03:54.660
Pre-launch report
does it automatically.

00:03:54.660 --> 00:03:57.600
If you want to you do your own
custom testing, custom scripts,

00:03:57.600 --> 00:04:00.240
and such, you can integrate
with the Firebase Test

00:04:00.240 --> 00:04:03.930
Lab for Android and run
your own custom scripts

00:04:03.930 --> 00:04:06.720
against physical devices
from Android Studio,

00:04:06.720 --> 00:04:10.176
from your continuous
build, and such.

00:04:10.176 --> 00:04:12.630
A key part of pre-launch
report that you

00:04:12.630 --> 00:04:14.490
can find in the
Play Console is what

00:04:14.490 --> 00:04:17.190
we call app stability testing.

00:04:17.190 --> 00:04:20.700
We have a robot crawler that
automatically crawls and plays

00:04:20.700 --> 00:04:22.890
with your app for
every APK that you

00:04:22.890 --> 00:04:26.580
upload to the alpha or beta
channel in the Play Console.

00:04:26.580 --> 00:04:29.220
It crawls the app
automatically for five minutes,

00:04:29.220 --> 00:04:31.480
and it tells you if it
detects any it crashes.

00:04:31.480 --> 00:04:35.790
And you get the little
red indications there.

00:04:35.790 --> 00:04:38.100
Which means that if the
robot detects a crash when

00:04:38.100 --> 00:04:40.219
your APK was in
alpha or beta, it's

00:04:40.219 --> 00:04:41.760
a crash that didn't
reach production,

00:04:41.760 --> 00:04:44.670
because you can then fix it
before your app goes to prod.

00:04:44.670 --> 00:04:46.650
And your users will not
leave a one-star review

00:04:46.650 --> 00:04:47.340
because of that.

00:04:51.340 --> 00:04:54.480
A vast majority of
Play top developers

00:04:54.480 --> 00:04:56.340
have adopted the Play
pre-launch report

00:04:56.340 --> 00:04:58.540
since when we
launched it last year.

00:04:58.540 --> 00:05:01.950
And since then, we've performed
over 6.5 million crawls

00:05:01.950 --> 00:05:05.250
over hundred and
thousands of APKs.

00:05:05.250 --> 00:05:07.770
These numbers are
nice, but the best one

00:05:07.770 --> 00:05:10.080
is the impact for users.

00:05:10.080 --> 00:05:13.570
85% of the time when the
pre-launch report detected

00:05:13.570 --> 00:05:17.820
a crash, the app was not then
later launched to production.

00:05:17.820 --> 00:05:19.664
And this means that
millions of users

00:05:19.664 --> 00:05:21.330
have been spared from
a crash that would

00:05:21.330 --> 00:05:22.538
have otherwise affected them.

00:05:25.376 --> 00:05:27.250
The first big change
and announcement that we

00:05:27.250 --> 00:05:29.970
are making today is this one.

00:05:29.970 --> 00:05:32.940
You may have heard, obviously,
about Android O and the latest

00:05:32.940 --> 00:05:34.650
developer preview and such.

00:05:34.650 --> 00:05:36.510
So we took a bunch
of Pixel phones,

00:05:36.510 --> 00:05:39.180
and along with other devices,
we made them available to you

00:05:39.180 --> 00:05:41.010
in the pre-launch report.

00:05:41.010 --> 00:05:44.460
You can now test very
easily how your app performs

00:05:44.460 --> 00:05:48.180
on Android O. You just have
to upload an APK to the alpha

00:05:48.180 --> 00:05:51.090
or beta channel in
the Play Console,

00:05:51.090 --> 00:05:54.660
and by the end of this talk
or by the end of tonight's

00:05:54.660 --> 00:05:57.240
dinner or the concert,
you get the result back,

00:05:57.240 --> 00:05:59.340
and you get to see how
your app performed when

00:05:59.340 --> 00:06:03.650
executing against Android O.

00:06:03.650 --> 00:06:06.300
So this was secret number one--

00:06:06.300 --> 00:06:08.870
Android O preview available
in the pre-launch report

00:06:08.870 --> 00:06:12.260
for all of you starting now.

00:06:12.260 --> 00:06:16.130
Second secret is more
pre-launch report features.

00:06:16.130 --> 00:06:18.470
Not only we add more
devices, we invest also

00:06:18.470 --> 00:06:21.020
in the functionality
that it offers.

00:06:21.020 --> 00:06:23.335
To allow the robot to
crawl more of your app

00:06:23.335 --> 00:06:25.610
with data that you
control, you can now

00:06:25.610 --> 00:06:28.160
specify test credentials
that the robot will

00:06:28.160 --> 00:06:30.260
use to pass through
login screens

00:06:30.260 --> 00:06:32.720
and explore more of your app
behind those login screens.

00:06:35.680 --> 00:06:38.710
We have improved the way the
robot captures screenshots

00:06:38.710 --> 00:06:40.420
and videos during the crawl.

00:06:40.420 --> 00:06:42.910
Specifically, we now
take into account

00:06:42.910 --> 00:06:44.890
the structure of your
app, the activities

00:06:44.890 --> 00:06:47.610
that it is composed of, and
the transition they're in

00:06:47.610 --> 00:06:49.750
to cross the screenshots
intelligently.

00:06:49.750 --> 00:06:51.850
So you get to see
at a glance how

00:06:51.850 --> 00:06:54.310
your different parts of
the app look and feel,

00:06:54.310 --> 00:06:56.900
which is useful if you
want to spot-- if you have,

00:06:56.900 --> 00:06:58.750
for example, visual
inconsistencies

00:06:58.750 --> 00:07:02.980
across form factors
or across languages.

00:07:02.980 --> 00:07:05.530
And finally, we also
automatically scan

00:07:05.530 --> 00:07:08.680
your app for vulnerabilities
and privacy leaks.

00:07:08.680 --> 00:07:11.170
We added a bunch of
scans and new detectors

00:07:11.170 --> 00:07:12.320
over the last year.

00:07:12.320 --> 00:07:15.990
So now we capture
up to, I think,

00:07:15.990 --> 00:07:19.390
30 different types of
vulnerabilities and privacy

00:07:19.390 --> 00:07:22.180
issues, be it the usage
of outdated libraries

00:07:22.180 --> 00:07:25.000
that have known problems
or be it coding patterns

00:07:25.000 --> 00:07:27.340
that you have that result
in leaking identifiers.

00:07:31.440 --> 00:07:33.290
So if you have not
already given it a try,

00:07:33.290 --> 00:07:34.930
you can go to the
Play Console now,

00:07:34.930 --> 00:07:37.530
opt in to the pre-launch
report, and the next APK

00:07:37.530 --> 00:07:39.110
you will upload
to alpha and beta

00:07:39.110 --> 00:07:42.320
will undergo all these
treatments and analysis.

00:07:42.320 --> 00:07:46.292
A number of developers like
Paul, CEO of Playdemic,

00:07:46.292 --> 00:07:47.750
have found that
it's really helpful

00:07:47.750 --> 00:07:49.580
to give them that
sense of security

00:07:49.580 --> 00:07:51.620
to go to production safely.

00:07:51.620 --> 00:07:55.370
So definitely consider
giving it a try.

00:07:55.370 --> 00:07:58.250
And so this is secret
number two, more features

00:07:58.250 --> 00:08:00.830
in the pre-launch report.

00:08:00.830 --> 00:08:03.620
The next step is you're
about to go live,

00:08:03.620 --> 00:08:07.280
and you have to make
distribution decisions.

00:08:07.280 --> 00:08:08.780
The moment when
you go live is one

00:08:08.780 --> 00:08:12.170
of the most critical in your
app lifecycle because this

00:08:12.170 --> 00:08:14.160
is when your users
will discover your app

00:08:14.160 --> 00:08:16.700
or your new features
for the first time.

00:08:16.700 --> 00:08:19.670
And Android today gives
you an amazing reach thanks

00:08:19.670 --> 00:08:22.910
to the diversity of Android
devices, cross-capabilities,

00:08:22.910 --> 00:08:24.230
and price points.

00:08:24.230 --> 00:08:27.350
But we heard from many of you
that navigating the device

00:08:27.350 --> 00:08:29.870
space and the targeting
the right devices

00:08:29.870 --> 00:08:32.010
can be a bit of a challenge.

00:08:32.010 --> 00:08:35.390
And so we have made
a number of changes.

00:08:35.390 --> 00:08:38.240
As you may have
heard yesterday, we

00:08:38.240 --> 00:08:42.070
have created a brand new device
catalog in the Play Console.

00:08:42.070 --> 00:08:44.240
You go from the long
list of checkboxes

00:08:44.240 --> 00:08:47.600
that you have on the one side
to a full-featured device

00:08:47.600 --> 00:08:51.560
catalog across the thousands
of devices that you can target.

00:08:51.560 --> 00:08:52.940
It's not just nice to look at.

00:08:52.940 --> 00:08:57.130
There is a bunch of things
that it can do for you.

00:08:57.130 --> 00:09:00.870
First, for each device,
you get full device specs--

00:09:00.870 --> 00:09:04.230
RAM, GPU, system on
chip, screen size,

00:09:04.230 --> 00:09:06.820
OS version and everything.

00:09:06.820 --> 00:09:11.750
We also group the different SKUs
that belong to the same model

00:09:11.750 --> 00:09:15.280
so you can see all the
common devices in one go.

00:09:15.280 --> 00:09:17.370
You can search by spec.

00:09:17.370 --> 00:09:20.110
You can search, for example,
for all devices that

00:09:20.110 --> 00:09:22.690
have a given characteristic,
like having at least a couple

00:09:22.690 --> 00:09:24.160
of gigs of RAM.

00:09:24.160 --> 00:09:26.610
And for every search or
slice that you create,

00:09:26.610 --> 00:09:30.310
we tell you how
many installations,

00:09:30.310 --> 00:09:31.960
which rating, and
how much revenue

00:09:31.960 --> 00:09:35.170
is coming from that
particular slice.

00:09:35.170 --> 00:09:37.630
What do you use that for?

00:09:37.630 --> 00:09:41.380
Use that for what we call
device exclusion rules.

00:09:41.380 --> 00:09:46.000
You can now choose to target
your application to a selection

00:09:46.000 --> 00:09:48.430
of devices under your control.

00:09:48.430 --> 00:09:50.890
For example, if you're
developing a rich graphics

00:09:50.890 --> 00:09:54.580
game, you may choose to
target only devices that

00:09:54.580 --> 00:09:56.320
have at least one
gigabyte of RAM

00:09:56.320 --> 00:09:58.630
because that is the minimum
under which your game will

00:09:58.630 --> 00:10:01.030
run satisfactorily.

00:10:01.030 --> 00:10:03.880
You can also set similar
exclusion rules-- for example,

00:10:03.880 --> 00:10:05.800
on System-on-Chip
because maybe you

00:10:05.800 --> 00:10:08.590
have detected a particular
issue with a System-on-Chip,

00:10:08.590 --> 00:10:10.630
and you want to temporarily
limit distribution

00:10:10.630 --> 00:10:12.940
to those devices
until you get a fix,

00:10:12.940 --> 00:10:16.330
and you can resume
distributing to those.

00:10:16.330 --> 00:10:18.370
Whenever you create
an exclusion rule,

00:10:18.370 --> 00:10:21.637
we tell you exactly how
many users, how much rating,

00:10:21.637 --> 00:10:23.470
and how much revenue
is going to be affected

00:10:23.470 --> 00:10:25.340
by excluding those devices.

00:10:25.340 --> 00:10:27.250
So you can make this
decision consciously

00:10:27.250 --> 00:10:29.083
and know whether it's
worth doing it or not.

00:10:32.650 --> 00:10:35.850
Finally, we've updated the
Play Console throughout.

00:10:35.850 --> 00:10:38.340
So from many different
places in the Play Console

00:10:38.340 --> 00:10:40.390
you can link straight
into device catalog,

00:10:40.390 --> 00:10:45.560
be it from reviews, be it from
the stats pages, and such.

00:10:45.560 --> 00:10:48.230
So this is secret number three,
a brand new device catalog

00:10:48.230 --> 00:10:51.050
and targeting capabilities.

00:10:51.050 --> 00:10:53.030
The last one that I
want to mention briefly,

00:10:53.030 --> 00:10:55.430
and you may have heard in
a session earlier today,

00:10:55.430 --> 00:10:58.220
is a brand new
release dashboard.

00:10:58.220 --> 00:11:01.640
Until now, looking at
statistics in the Play Console

00:11:01.640 --> 00:11:06.050
was a bit sad because you've got
limited analytics capabilities.

00:11:06.050 --> 00:11:07.820
And they only
updated once a day,

00:11:07.820 --> 00:11:09.740
and sometimes it
would take two days.

00:11:09.740 --> 00:11:11.910
So we decided to
change that a lot.

00:11:11.910 --> 00:11:13.910
You get the brand
new release dashboard

00:11:13.910 --> 00:11:17.180
and associated statistics
that update by the hour

00:11:17.180 --> 00:11:19.670
and capture all the
significant information that

00:11:19.670 --> 00:11:21.230
describe your
application status,

00:11:21.230 --> 00:11:25.130
be it crashes, ratings,
installation, and installations

00:11:25.130 --> 00:11:26.060
as they happen.

00:11:26.060 --> 00:11:29.740
So you can monitor your releases
while they are in progress.

00:11:29.740 --> 00:11:33.330
For key information like
ratings and crashes and reviews,

00:11:33.330 --> 00:11:34.520
they come in real time.

00:11:34.520 --> 00:11:36.860
So you can detect the
moment your release goes out

00:11:36.860 --> 00:11:39.140
if there is a problem coming,
and you can take action

00:11:39.140 --> 00:11:41.910
immediately.

00:11:41.910 --> 00:11:44.040
And so this was number
four, a brand new,

00:11:44.040 --> 00:11:47.801
real-time monitoring
dashboard for your releases.

00:11:47.801 --> 00:11:48.300
Fergus?

00:11:48.300 --> 00:11:48.800
FERGUS HURLEY: Yes?

00:11:48.800 --> 00:11:49.758
RICCARDO GOVONI: Yours.

00:11:49.758 --> 00:11:52.131
FERGUS HURLEY: Thank you.

00:11:52.131 --> 00:11:52.630
Great.

00:11:52.630 --> 00:11:55.220
So we've talked about before
release, during release.

00:11:55.220 --> 00:11:57.470
Now we're going to talk about
the data from the field,

00:11:57.470 --> 00:11:58.886
and how you can
be able how to use

00:11:58.886 --> 00:12:02.830
that to be able to improve the
quality of your application.

00:12:02.830 --> 00:12:06.140
The first area to talk
about here is reviews.

00:12:06.140 --> 00:12:09.329
So we relaunched reviews
analysis last year

00:12:09.329 --> 00:12:10.870
at Google I/O. This
enabled you to be

00:12:10.870 --> 00:12:13.240
able to see what topics
people are talking

00:12:13.240 --> 00:12:16.570
about in your reviews
and how those topics are

00:12:16.570 --> 00:12:18.404
having a positive
or negative impact

00:12:18.404 --> 00:12:19.570
on your rating in the store.

00:12:19.570 --> 00:12:21.986
This is where we're putting
Google's machine learning team

00:12:21.986 --> 00:12:25.000
to work for you, to be able
to extract those topics

00:12:25.000 --> 00:12:27.040
and be able to also see
how you're comparing

00:12:27.040 --> 00:12:30.040
with other apps in your category
with the peer benchmarks

00:12:30.040 --> 00:12:32.200
that we offer.

00:12:32.200 --> 00:12:37.030
Now, up until today, it was
only available in English.

00:12:37.030 --> 00:12:39.430
Now we're making it available
in the second most popular

00:12:39.430 --> 00:12:41.810
language on Google
Play, which is Spanish.

00:12:41.810 --> 00:12:44.887
Another major market for
Play developers is Japan,

00:12:44.887 --> 00:12:46.720
so we're also enabling
you to be able to see

00:12:46.720 --> 00:12:50.065
the topics that people are
talking about in Japanese.

00:12:53.917 --> 00:12:55.500
One of the big
limitations that people

00:12:55.500 --> 00:12:58.080
have had with interacting
with users on Google Play

00:12:58.080 --> 00:13:00.210
and responding to reviews
is that we haven't

00:13:00.210 --> 00:13:02.400
had a full review history.

00:13:02.400 --> 00:13:04.020
When a user would
update their review,

00:13:04.020 --> 00:13:05.910
you wouldn't be able to see the
previous review that they've

00:13:05.910 --> 00:13:06.540
written.

00:13:06.540 --> 00:13:08.164
Now we're enabling
it to be able to see

00:13:08.164 --> 00:13:12.690
the full thread of the history
of any communication you've had

00:13:12.690 --> 00:13:18.229
and they have had with
you in our review section.

00:13:18.229 --> 00:13:19.770
If a user deletes
their whole review,

00:13:19.770 --> 00:13:21.420
you won't see the
history, of course.

00:13:21.420 --> 00:13:23.822
But if they keep
changing their review,

00:13:23.822 --> 00:13:26.280
you can be able to have a fluid
conversation with them now.

00:13:28.947 --> 00:13:31.280
Developers have been getting
great results from reviews.

00:13:31.280 --> 00:13:34.810
We've seen a 50% increase in the
number of developer responses

00:13:34.810 --> 00:13:36.729
over the past year.

00:13:36.729 --> 00:13:38.770
And the reason they're
doing that and interacting

00:13:38.770 --> 00:13:41.269
with reviews is because they
see users increasing their star

00:13:41.269 --> 00:13:44.236
rating as a result. We now
have an updated rating section

00:13:44.236 --> 00:13:45.610
in the Play Console
where you can

00:13:45.610 --> 00:13:48.010
be able to see what is
the change in rating

00:13:48.010 --> 00:13:51.890
that users are doing
if you reply to them,

00:13:51.890 --> 00:13:55.000
and what is the change in rating
if you haven't replied to them.

00:13:55.000 --> 00:13:57.670
And you can be able to
make the decision yourself

00:13:57.670 --> 00:14:00.195
as to whether this is a wise
investment of your time to be

00:14:00.195 --> 00:14:01.320
able to respond to reviews.

00:14:05.260 --> 00:14:08.470
Finally, the last big
addition to the reviews area

00:14:08.470 --> 00:14:11.080
that we're announcing
today is the ability

00:14:11.080 --> 00:14:12.860
to be able to flag reviews.

00:14:12.860 --> 00:14:15.550
So we do a lot of evaluation
on the reviews when

00:14:15.550 --> 00:14:17.320
they're posted on Google Play.

00:14:17.320 --> 00:14:20.350
Sometimes, reviews that don't
match our posting guidelines

00:14:20.350 --> 00:14:21.804
get through our evaluation.

00:14:21.804 --> 00:14:23.470
And if you think that
one of the reviews

00:14:23.470 --> 00:14:25.510
does not match our posting
guidelines that you

00:14:25.510 --> 00:14:27.051
can be able to let
us know, and we'll

00:14:27.051 --> 00:14:30.550
do another manual review and
evaluation of that review

00:14:30.550 --> 00:14:32.920
and determine whether we
should remove it or not.

00:14:32.920 --> 00:14:33.940
This is already--

00:14:33.940 --> 00:14:34.440
Thank you.

00:14:34.440 --> 00:14:37.590
[APPLAUSE]

00:14:37.590 --> 00:14:39.040
Thank you.

00:14:39.040 --> 00:14:42.160
So this has already been
rolled out to a few developers,

00:14:42.160 --> 00:14:44.470
and it will be rolled out
to all the Play developers

00:14:44.470 --> 00:14:45.560
over the next couple of months.

00:14:45.560 --> 00:14:46.518
So stay tuned for that.

00:14:50.210 --> 00:14:53.410
So that's the fifth secret,
reviews and focusing

00:14:53.410 --> 00:14:55.210
on your reviews and
the reviews analysis

00:14:55.210 --> 00:14:58.480
and reviews management tools
that we have available to you.

00:14:58.480 --> 00:15:00.940
Now let's jump into
the sixth secret,

00:15:00.940 --> 00:15:03.100
which is Android vitals.

00:15:03.100 --> 00:15:05.650
Android vitals was featured
in the keynote yesterday.

00:15:05.650 --> 00:15:07.720
It's a big initiative
at Google to be

00:15:07.720 --> 00:15:10.390
able to improve the stability
and performance of apps

00:15:10.390 --> 00:15:13.450
across the whole
Android ecosystem.

00:15:13.450 --> 00:15:16.360
The first thing we're doing
is focusing on three core

00:15:16.360 --> 00:15:17.740
performance areas.

00:15:17.740 --> 00:15:21.560
Those are stability,
render time, and battery.

00:15:21.560 --> 00:15:24.100
However, you'll see a lot
more performance areas

00:15:24.100 --> 00:15:26.680
being provided to you over
the course of the next year.

00:15:33.550 --> 00:15:35.710
We just launched the
Android vitals section

00:15:35.710 --> 00:15:36.980
in the Play Developer Console.

00:15:36.980 --> 00:15:39.310
This is where you
can go and see today

00:15:39.310 --> 00:15:41.921
the data on your
application from the users

00:15:41.921 --> 00:15:42.670
who have opted in.

00:15:45.280 --> 00:15:47.560
So where does this
data come from?

00:15:47.560 --> 00:15:49.990
This data is generated from
the hundreds of millions

00:15:49.990 --> 00:15:53.470
of users who have opted-in
to share their device usage

00:15:53.470 --> 00:15:58.090
and diagnostics data with
Google and our partners, you.

00:15:58.090 --> 00:16:00.790
So we are now making
that available to you

00:16:00.790 --> 00:16:01.940
for the first time.

00:16:01.940 --> 00:16:04.630
And we're very excited for you
to be able to use this data

00:16:04.630 --> 00:16:07.190
and improve your
apps as a result.

00:16:07.190 --> 00:16:09.550
You do not need to use
an SDK to get this data.

00:16:09.550 --> 00:16:11.620
You do not need to
change your app at all.

00:16:11.620 --> 00:16:13.784
You just need to go to
the Play Developer Console

00:16:13.784 --> 00:16:14.700
and look at this data.

00:16:18.224 --> 00:16:20.640
Now, we're going to be making
a lot of data available here

00:16:20.640 --> 00:16:22.181
for the first time,
and we think this

00:16:22.181 --> 00:16:24.420
is going to change the
dynamics within companies

00:16:24.420 --> 00:16:26.820
in terms of how they
look at performance.

00:16:26.820 --> 00:16:29.136
Up until now, very few
people within the company

00:16:29.136 --> 00:16:31.260
have seen the performance
data on their application

00:16:31.260 --> 00:16:34.170
because they aren't running
Android Studio themselves

00:16:34.170 --> 00:16:35.669
and looking at performance data.

00:16:35.669 --> 00:16:37.710
Now that we're exposing
that in the Play Console,

00:16:37.710 --> 00:16:41.190
your product manager, your other
engineers that you work with

00:16:41.190 --> 00:16:42.880
can be able to see
that data and can

00:16:42.880 --> 00:16:44.340
be able to make the choice
of whether you should

00:16:44.340 --> 00:16:46.920
invest in improving performance
or building that latest

00:16:46.920 --> 00:16:47.850
feature.

00:16:47.850 --> 00:16:50.220
Now, to make it really
actionable for you,

00:16:50.220 --> 00:16:53.410
we have generated this
concept of bad behaviors.

00:16:53.410 --> 00:16:56.340
This is where, if
you're in the bottom 25%

00:16:56.340 --> 00:17:00.060
for any one of these metrics,
we will flag that to you

00:17:00.060 --> 00:17:03.290
and put a red exclamation
mark on your application.

00:17:03.290 --> 00:17:05.790
This alerts you that this is
an area where you should really

00:17:05.790 --> 00:17:08.310
invest in because you're
underperforming compared

00:17:08.310 --> 00:17:09.270
to your peers.

00:17:13.150 --> 00:17:15.099
So this talk is
about user retention,

00:17:15.099 --> 00:17:20.430
and here's a quote from
the Kabam team of how much

00:17:20.430 --> 00:17:22.780
user retention has improved
as a result of them

00:17:22.780 --> 00:17:24.619
focusing on performance.

00:17:24.619 --> 00:17:26.170
And so we hope that
all of you will

00:17:26.170 --> 00:17:28.990
make performance a big
part of your culture

00:17:28.990 --> 00:17:32.630
and your app development
for us in the future.

00:17:32.630 --> 00:17:33.130
Great.

00:17:33.130 --> 00:17:37.240
So now we're going to jump
into three other secrets that

00:17:37.240 --> 00:17:39.880
are all tied together, and I'm
going to draw an analogy here

00:17:39.880 --> 00:17:41.170
to triathlons.

00:17:41.170 --> 00:17:43.460
I completed a couple
of triathlons myself.

00:17:43.460 --> 00:17:46.450
And when you are
training for a triathlon

00:17:46.450 --> 00:17:49.150
and you improve in one sport
and you increase your fitness,

00:17:49.150 --> 00:17:52.550
you increase your performance
into other sports as well.

00:17:52.550 --> 00:17:55.540
And that's where, by improving
in one performance area,

00:17:55.540 --> 00:17:57.750
you'll probably see
performance improvements

00:17:57.750 --> 00:17:58.940
in the other areas.

00:17:58.940 --> 00:18:01.540
But you still need the
knowledge and equipment

00:18:01.540 --> 00:18:03.890
to be successful in
each one individually.

00:18:03.890 --> 00:18:07.900
So I hope you'll connect
with the analogy.

00:18:07.900 --> 00:18:09.910
So let's jump into
the first sport--

00:18:09.910 --> 00:18:12.610
only joking-- the first
app performance area here.

00:18:12.610 --> 00:18:14.200
So stability.

00:18:14.200 --> 00:18:18.490
So stability is all about
providing a reliable experience

00:18:18.490 --> 00:18:22.260
to users, and we are
providing a lot of insights

00:18:22.260 --> 00:18:24.160
here that you
might not have been

00:18:24.160 --> 00:18:28.310
able to get from other
crash reporting tools.

00:18:28.310 --> 00:18:31.040
And why would you
care about this area?

00:18:31.040 --> 00:18:34.900
So what we found is that making
a first impression on users

00:18:34.900 --> 00:18:38.260
is critical, as we all know,
and that the data shows

00:18:38.260 --> 00:18:41.440
that if your app crashes a
lot on the first day of use,

00:18:41.440 --> 00:18:44.890
you get 30% more uninstallations
than if your app works well.

00:18:44.890 --> 00:18:47.410
So really focusing on
these stability issues

00:18:47.410 --> 00:18:48.820
is critical to your user base.

00:18:52.160 --> 00:18:55.460
As I mentioned, this data
from the Android Vitals

00:18:55.460 --> 00:18:57.270
is from users who have opted in.

00:18:57.270 --> 00:19:00.370
Previously, the data that has
been in the crashes and ANRs

00:19:00.370 --> 00:19:03.420
section of the Play
Console has come from users

00:19:03.420 --> 00:19:05.410
individually reporting events.

00:19:05.410 --> 00:19:08.310
Now that we have this data
from the opted-in users,

00:19:08.310 --> 00:19:11.940
you can expect to see about
100x increase in the crash

00:19:11.940 --> 00:19:14.040
data in the Play Console.

00:19:14.040 --> 00:19:16.490
So that could give you
a lot better coverage

00:19:16.490 --> 00:19:19.380
and a lot better insights
into your app performance

00:19:19.380 --> 00:19:22.320
while still covering
98% of Android versions.

00:19:25.000 --> 00:19:28.350
Now, I'm sure all of you
are aware of the crashes

00:19:28.350 --> 00:19:30.905
and crash per user rate and
all that sort of things.

00:19:30.905 --> 00:19:35.170
ANRs are a critical thing to
focus on on Android as well.

00:19:35.170 --> 00:19:37.210
An ANR is an application
not responding.

00:19:37.210 --> 00:19:38.876
This is when your
application is frozen

00:19:38.876 --> 00:19:40.000
for more than five seconds.

00:19:44.470 --> 00:19:46.150
In the Android
vitals section, we

00:19:46.150 --> 00:19:49.030
show you broken
down by app version,

00:19:49.030 --> 00:19:53.410
by device, and by Android
version what is your ANR rate.

00:19:53.410 --> 00:19:55.990
Then you can click on,
let's say, the ANRs

00:19:55.990 --> 00:19:58.060
from a specific app
version, and you

00:19:58.060 --> 00:20:00.670
can be able to go in and
see all the ANR clusters

00:20:00.670 --> 00:20:03.220
corresponding to that version.

00:20:03.220 --> 00:20:05.650
And you can be able
to then go in, click

00:20:05.650 --> 00:20:08.830
on a specific cluster, and be
able to view the thread dumps

00:20:08.830 --> 00:20:12.100
and other diagnostics
information about the devices,

00:20:12.100 --> 00:20:16.900
et cetera, to be able to really
focus on fixing that issue.

00:20:16.900 --> 00:20:19.600
You can also be able to
access the previous data

00:20:19.600 --> 00:20:22.126
source that we had for ANRs
and crashes in the Play Console

00:20:22.126 --> 00:20:23.750
if you'd like to see
that data as well.

00:20:27.510 --> 00:20:29.720
Twitter has built a
phenomenal application.

00:20:29.720 --> 00:20:32.740
It has an amazing,
reliable experience.

00:20:32.740 --> 00:20:35.250
However, they were even
able to learn things

00:20:35.250 --> 00:20:37.470
from the ANR data
in the Play Console

00:20:37.470 --> 00:20:39.330
when we gave them
early access to this,

00:20:39.330 --> 00:20:41.070
and they were able
to fix issues already

00:20:41.070 --> 00:20:42.970
with their application
as a result.

00:20:42.970 --> 00:20:45.319
So I encourage you all to go
and check out this section

00:20:45.319 --> 00:20:46.360
and see what you can fix.

00:20:50.270 --> 00:20:51.830
To recap in the
stability area, we

00:20:51.830 --> 00:20:56.750
have two core things to focus
on here, reducing your ANR rate

00:20:56.750 --> 00:20:58.130
and reducing your crash rate.

00:21:01.550 --> 00:21:05.510
Next we're going to
jump into rendering.

00:21:05.510 --> 00:21:08.540
So rendering is about
providing a fluid experience

00:21:08.540 --> 00:21:10.880
to your users and
having it so that they

00:21:10.880 --> 00:21:13.724
feel like they're getting a 60
frames per second experience

00:21:13.724 --> 00:21:14.390
on their device.

00:21:17.420 --> 00:21:20.090
60 frames per second
results in draw events

00:21:20.090 --> 00:21:22.290
happening every 16 milliseconds.

00:21:22.290 --> 00:21:24.950
So if you miss one of
these draw events your app

00:21:24.950 --> 00:21:25.900
starts to feel laggy.

00:21:29.430 --> 00:21:31.680
Even if you miss it by
just one millisecond,

00:21:31.680 --> 00:21:33.180
then you've missed
that frame and it

00:21:33.180 --> 00:21:37.860
appears at 32 milliseconds
until that frame is redrawn.

00:21:37.860 --> 00:21:40.200
If you miss multiple
events, then it really

00:21:40.200 --> 00:21:42.450
appears like it's a slow
experience for the users.

00:21:42.450 --> 00:21:43.866
And the app has
nearly even become

00:21:43.866 --> 00:21:46.830
frozen to a lesser
extent than an ANR,

00:21:46.830 --> 00:21:48.930
but still not responding
to their input.

00:21:48.930 --> 00:21:51.150
And this is about 700
milliseconds is what we found.

00:21:54.270 --> 00:21:57.590
We now give you the
insights into this data

00:21:57.590 --> 00:21:59.570
in the Play Console in
terms of render times.

00:21:59.570 --> 00:22:01.990
We show you the distribution
of render times.

00:22:01.990 --> 00:22:04.820
And we show you the
potential root causes

00:22:04.820 --> 00:22:06.260
of why these things
are happening

00:22:06.260 --> 00:22:08.649
so you can be able
to figure out if it's

00:22:08.649 --> 00:22:10.940
something to do with things
happening on the UI thread.

00:22:14.010 --> 00:22:18.810
The two core metrics to look
at in terms of render time

00:22:18.810 --> 00:22:22.140
are slow rendering
and frozen frames.

00:22:22.140 --> 00:22:24.240
So slow rendering is
when the percentage

00:22:24.240 --> 00:22:28.880
of users who experience more
than 50% of their frames

00:22:28.880 --> 00:22:32.010
rendered at greater
than 16 milliseconds.

00:22:32.010 --> 00:22:42.030
Frozen frames is when 0.1% of
the frames out of your render

00:22:42.030 --> 00:22:44.697
rate are greater than
700 milliseconds.

00:22:50.770 --> 00:22:51.350
Great.

00:22:51.350 --> 00:22:53.752
So now we've covered
the eight secrets.

00:22:53.752 --> 00:22:55.460
We're going to jump
into the ninth secret

00:22:55.460 --> 00:22:58.460
here now, which is battery.

00:22:58.460 --> 00:23:00.830
So we all want to be able
to have battery life last

00:23:00.830 --> 00:23:04.730
for the entire day, and
we all as app developers

00:23:04.730 --> 00:23:08.301
want to reduce our usage on the
battery when it's unnecessary.

00:23:08.301 --> 00:23:10.550
And this is where we're now
going to start telling you

00:23:10.550 --> 00:23:12.290
when we think you
are actually using

00:23:12.290 --> 00:23:14.170
the battery unnecessarily.

00:23:14.170 --> 00:23:17.060
This includes using
the radios and the CPU.

00:23:17.060 --> 00:23:19.250
The first one is wake locks.

00:23:19.250 --> 00:23:21.350
This is where, when
the device is idle,

00:23:21.350 --> 00:23:23.600
you're keeping a wake lock
for more than an hour.

00:23:28.190 --> 00:23:31.400
In the Android vitals
section, each metric

00:23:31.400 --> 00:23:33.460
that I'm talking about
for the bad behaviors

00:23:33.460 --> 00:23:37.730
here has a separate way for
you to be able to diagnose

00:23:37.730 --> 00:23:39.140
and investigate the data.

00:23:39.140 --> 00:23:41.900
For the wake locks, we provide
you the wake lock name.

00:23:41.900 --> 00:23:43.610
And you can be
able to figure out

00:23:43.610 --> 00:23:46.070
where there is an issue there
with a specific wake lock

00:23:46.070 --> 00:23:48.590
and go and investigate
that specific one.

00:23:48.590 --> 00:23:51.800
We also link out from each
of the performance areas

00:23:51.800 --> 00:23:55.160
to articles on the
developer.android.com

00:23:55.160 --> 00:23:58.250
documentation so you can be
able to understand each one

00:23:58.250 --> 00:23:59.540
of these wake locks as well.

00:24:02.430 --> 00:24:05.430
The wake locks that you use
within in your application

00:24:05.430 --> 00:24:08.520
should not be completely
unique per user

00:24:08.520 --> 00:24:10.860
because otherwise you
won't be able to get

00:24:10.860 --> 00:24:13.120
the aggregated view of them.

00:24:13.120 --> 00:24:15.426
We also have it broken
down by app version,

00:24:15.426 --> 00:24:16.800
as you can see
here, and then you

00:24:16.800 --> 00:24:19.200
can be able to see the
distribution of wake locks.

00:24:22.770 --> 00:24:26.400
Finally, the last metric that
we're introducing is wakeups.

00:24:26.400 --> 00:24:30.180
So wakeups are when
you are constantly

00:24:30.180 --> 00:24:32.760
waking up the device
when the device is idle.

00:24:32.760 --> 00:24:37.230
So we flag your application
when you wake the application up

00:24:37.230 --> 00:24:39.540
more than 10 times
per hour, and you

00:24:39.540 --> 00:24:42.140
have a high percentage of
users who are impacted by that.

00:24:45.070 --> 00:24:46.840
This is another tab
within the console.

00:24:46.840 --> 00:24:49.340
We give you the wakeup
tag names here as well,

00:24:49.340 --> 00:24:51.540
so you can be able to figure
out where the issue is.

00:24:54.730 --> 00:24:57.290
The two battery
areas to look at,

00:24:57.290 --> 00:25:00.010
stuck wake locks and
excessive wakeups.

00:25:00.010 --> 00:25:02.500
I encourage you to check
those out and figure out

00:25:02.500 --> 00:25:05.800
where you are having an issue
in your application potentially.

00:25:05.800 --> 00:25:08.770
And as I said, we'll flag
you with a red marker

00:25:08.770 --> 00:25:10.301
if you're in the
bottom 25% of apps

00:25:10.301 --> 00:25:11.800
for each one of
these metrics so you

00:25:11.800 --> 00:25:14.280
know to look into that area.

00:25:14.280 --> 00:25:16.510
We're now going to hand
over to Joe to reveal--

00:25:16.510 --> 00:25:18.610
actually, one sec.

00:25:18.610 --> 00:25:21.100
I've got some bonus action
secrets for you guys,

00:25:21.100 --> 00:25:23.020
just on the Android vitals side.

00:25:23.020 --> 00:25:28.150
So we have many resources
outside of the Play Console

00:25:28.150 --> 00:25:30.890
to help you with improving
your performance.

00:25:30.890 --> 00:25:33.580
The first one is to use
developer.android.com.

00:25:33.580 --> 00:25:36.070
Tons of documentation on the
performance areas in general.

00:25:36.070 --> 00:25:38.980
Tons of videos, and
from the Play Console

00:25:38.980 --> 00:25:42.770
we link out to the
relevant ones as well.

00:25:42.770 --> 00:25:44.980
Next is to use Android
Studio Profilers that

00:25:44.980 --> 00:25:46.930
have been built into
Android Studio 3.0, which

00:25:46.930 --> 00:25:48.580
was launched yesterday.

00:25:48.580 --> 00:25:51.310
And finally, Firebase
Performance Monitoring

00:25:51.310 --> 00:25:53.750
is an SDK that you can
include in your application

00:25:53.750 --> 00:25:56.310
so that you don't just need
to look over the whole APK.

00:25:56.310 --> 00:25:59.770
We can diagnose specifically
within your APK,

00:25:59.770 --> 00:26:02.130
within a specific part of the
APK, if there is an issue.

00:26:02.130 --> 00:26:03.505
And you can be
able to instrument

00:26:03.505 --> 00:26:04.900
to the application yourself.

00:26:04.900 --> 00:26:06.946
Out of the box comes
network and startup time.

00:26:06.946 --> 00:26:08.320
But there are
counters, so you're

00:26:08.320 --> 00:26:11.772
going to be able to set it
up whatever way you'd like.

00:26:11.772 --> 00:26:14.230
Now we're going to hand it over
to Joe for the final secret

00:26:14.230 --> 00:26:15.414
on rewards.

00:26:15.414 --> 00:26:17.830
JOE CASTORENA: All right, it's
now time for the best part.

00:26:17.830 --> 00:26:20.860
[APPLAUSE]

00:26:20.860 --> 00:26:22.370
So why should you care?

00:26:22.370 --> 00:26:24.670
Why should you jump on this now?

00:26:24.670 --> 00:26:27.730
Well, reducing your
one-star ratings,

00:26:27.730 --> 00:26:29.350
reducing your
uninstalls, those seem

00:26:29.350 --> 00:26:31.120
like pretty compelling reasons.

00:26:31.120 --> 00:26:33.340
Those, in addition to the
things that Ricardo alluded

00:26:33.340 --> 00:26:38.650
to earlier like getting a more
stable app leading to better

00:26:38.650 --> 00:26:42.400
user experience, leading to
stronger engagement, longer

00:26:42.400 --> 00:26:44.300
retention, all these
are really good reasons.

00:26:44.300 --> 00:26:47.080
But there's actually
directly impactful reasons

00:26:47.080 --> 00:26:49.510
that relate to your
app and its presence

00:26:49.510 --> 00:26:53.250
and its performance
in the Play Store.

00:26:53.250 --> 00:26:55.680
This relates to Play's
perceived quality of your app

00:26:55.680 --> 00:26:58.461
and the promotability
that goes with it.

00:26:58.461 --> 00:27:00.710
Play has always strived to
surface the highest quality

00:27:00.710 --> 00:27:03.690
apps for our users, and your
app health is a key component

00:27:03.690 --> 00:27:05.790
to signal for that.

00:27:05.790 --> 00:27:09.870
App health is important for your
search results in the Store.

00:27:09.870 --> 00:27:12.090
It's important for the
promotional and merchandising

00:27:12.090 --> 00:27:13.580
collections in the store.

00:27:13.580 --> 00:27:16.254
App health is also important
for awards designations

00:27:16.254 --> 00:27:18.420
and collections, like
editor's choice and the Google

00:27:18.420 --> 00:27:19.110
Play Awards.

00:27:22.110 --> 00:27:23.626
So getting your
app health right is

00:27:23.626 --> 00:27:25.500
one of the most fundamental
things developers

00:27:25.500 --> 00:27:28.380
can do to be successful in Play.

00:27:28.380 --> 00:27:31.560
Play takes in various
user signals to determine

00:27:31.560 --> 00:27:36.540
and app's promotability,
and the app vitals

00:27:36.540 --> 00:27:38.580
point directly into that.

00:27:38.580 --> 00:27:41.910
For example, if an
app crashes often,

00:27:41.910 --> 00:27:44.940
it could lead to a user having
a really poor experience.

00:27:44.940 --> 00:27:47.400
They could probably wind up
leaving you a poor review.

00:27:47.400 --> 00:27:50.040
You get more one-star ratings.

00:27:50.040 --> 00:27:52.880
They could even lead to lower
usage and even uninstalls.

00:27:52.880 --> 00:27:54.930
All of this can
negatively impact

00:27:54.930 --> 00:27:58.230
your promotability and your
presence in the Play Store.

00:27:58.230 --> 00:28:00.420
So developing
high-quality apps actually

00:28:00.420 --> 00:28:03.780
acts as a virtuous cycle to
where you have a better user

00:28:03.780 --> 00:28:06.570
experience, you're going
to get better user reviews.

00:28:06.570 --> 00:28:08.730
Those better user
reviews and ratings

00:28:08.730 --> 00:28:11.070
will get you better
results and promotability

00:28:11.070 --> 00:28:13.590
within the store, which will
drive more users, et cetera.

00:28:17.270 --> 00:28:19.076
The new and updated
Featured Collection,

00:28:19.076 --> 00:28:20.450
this has been a
longtime favorite

00:28:20.450 --> 00:28:23.030
of our users and developers
in the Play Store.

00:28:23.030 --> 00:28:24.980
And frankly, it's a
favorite of the Play team

00:28:24.980 --> 00:28:26.750
as well because
it's a great place

00:28:26.750 --> 00:28:29.720
to showcase the highest
quality apps and games

00:28:29.720 --> 00:28:32.930
that are launching on any
given week in the store.

00:28:32.930 --> 00:28:34.580
As you can imagine,
app quality has

00:28:34.580 --> 00:28:38.960
been a key foundational
factor when reviewing apps

00:28:38.960 --> 00:28:41.330
and determining their
eligibility for consideration

00:28:41.330 --> 00:28:42.660
in this collection.

00:28:42.660 --> 00:28:44.834
And as you can imagine,
these new app vital metrics

00:28:44.834 --> 00:28:46.250
that we're talking
about are going

00:28:46.250 --> 00:28:49.160
to plug into this app quality
review that we do on the apps.

00:28:52.080 --> 00:28:54.362
And then, finally, we have
the Google Play Awards.

00:28:54.362 --> 00:28:56.820
These celebrate the achievements
of our developer community

00:28:56.820 --> 00:28:59.040
over the past year by
recognizing the best apps

00:28:59.040 --> 00:29:01.680
and games across 12 categories.

00:29:01.680 --> 00:29:03.480
This year we've
introduced new categories

00:29:03.480 --> 00:29:05.730
to fully reflect the
breadth of apps and games

00:29:05.730 --> 00:29:08.390
that deliver innovative
experiences in the Play Store.

00:29:10.950 --> 00:29:14.520
We evaluate both the apps
and games on overall design,

00:29:14.520 --> 00:29:16.752
on quality, and on
user experience.

00:29:16.752 --> 00:29:18.960
And we're now going to be
using the app vital metrics

00:29:18.960 --> 00:29:23.550
to inform whether the apps have
a strong technical performance

00:29:23.550 --> 00:29:25.217
as well.

00:29:25.217 --> 00:29:27.425
As luck would have it, the
Google Play Award ceremony

00:29:27.425 --> 00:29:30.180
is happening right after
this session at 6:30 PM

00:29:30.180 --> 00:29:32.190
over on stage three,
and you're all invited.

00:29:32.190 --> 00:29:34.290
In fact, you're highly
encouraged to join us.

00:29:34.290 --> 00:29:36.480
It's a fabulous
celebration of the best

00:29:36.480 --> 00:29:39.000
of the best across the
industry and across your peers

00:29:39.000 --> 00:29:40.810
over the last year.

00:29:40.810 --> 00:29:42.210
So please join us.

00:29:42.210 --> 00:29:45.112
I'll turn this back over to
Fergus so he can wrap up.

00:29:45.112 --> 00:29:46.600
FERGUS HURLEY: Thanks.

00:29:46.600 --> 00:29:48.590
[APPLAUSE]

00:29:48.590 --> 00:29:50.720
Thanks, Joe.

00:29:50.720 --> 00:29:52.940
So we covered a lot
of things today.

00:29:52.940 --> 00:29:56.330
And I hope you're excited
about these 10 secrets,

00:29:56.330 --> 00:29:59.810
and that you'll be able to
refer your other coworkers

00:29:59.810 --> 00:30:02.490
to our BuzzFeed talk when
it's posted on BuzzFeed later.

00:30:02.490 --> 00:30:02.990
Only joking.

00:30:02.990 --> 00:30:04.010
No, it won't be
posted on BuzzFeed,

00:30:04.010 --> 00:30:06.440
but it will be posted on
YouTube for all your colleagues

00:30:06.440 --> 00:30:08.337
to enjoy it.

00:30:08.337 --> 00:30:09.920
Please take a photo
of the top secrets

00:30:09.920 --> 00:30:11.740
and send it to
your team as well.

00:30:11.740 --> 00:30:13.377
And I encourage you
to use these tools

00:30:13.377 --> 00:30:14.960
and play around with
the Play Console.

00:30:14.960 --> 00:30:16.310
There's a lot of tools in there.

00:30:16.310 --> 00:30:19.340
We rebranded the Play Developer
Console as the Play Console

00:30:19.340 --> 00:30:21.200
because we realize
that there is--

00:30:21.200 --> 00:30:23.300
very valuable to
many stakeholders

00:30:23.300 --> 00:30:26.300
in the organizations that
are building applications.

00:30:26.300 --> 00:30:29.090
And so please, go ahead,
use the Play Console,

00:30:29.090 --> 00:30:31.550
and use the many tools
that we mentioned today

00:30:31.550 --> 00:30:32.510
to have success.

00:30:32.510 --> 00:30:35.240
We're now going to
open it up to Q&amp;A.

00:30:35.240 --> 00:30:39.770
And we'll also be
over at Sandbox Dome C

00:30:39.770 --> 00:30:42.040
after this and tomorrow.

00:30:42.040 --> 00:30:45.899
So we've got mics here in
the middle of the rows here.

00:30:45.899 --> 00:30:47.940
Please come up and ask us
any questions you have.

00:30:47.940 --> 00:30:49.190
Thank you very much, everyone.

00:30:49.190 --> 00:30:52.364
[APPLAUSE]

00:30:57.194 --> 00:31:01.960
[MUSIC PLAYING]

