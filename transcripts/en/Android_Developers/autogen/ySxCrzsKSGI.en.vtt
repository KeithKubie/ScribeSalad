WEBVTT
Kind: captions
Language: en

00:00:01.500 --> 00:00:05.260
 
[Music]

00:00:05.260 --> 00:00:05.270
[Music]
 

00:00:05.270 --> 00:00:10.129
[Music]
listen everybody yep hi everyone welcome

00:00:10.129 --> 00:00:10.139
listen everybody yep hi everyone welcome
 

00:00:10.139 --> 00:00:11.990
listen everybody yep hi everyone welcome
to our talk on the fact that no one

00:00:11.990 --> 00:00:12.000
to our talk on the fact that no one
 

00:00:12.000 --> 00:00:14.600
to our talk on the fact that no one
likes crashing or janky apps I'm Lydia

00:00:14.600 --> 00:00:14.610
likes crashing or janky apps I'm Lydia
 

00:00:14.610 --> 00:00:16.460
likes crashing or janky apps I'm Lydia
I'm a Technical Program Manager on

00:00:16.460 --> 00:00:16.470
I'm a Technical Program Manager on
 

00:00:16.470 --> 00:00:18.950
I'm a Technical Program Manager on
Android and I'm Ricardo engineering

00:00:18.950 --> 00:00:18.960
Android and I'm Ricardo engineering
 

00:00:18.960 --> 00:00:20.000
Android and I'm Ricardo engineering
manager on Google Play

00:00:20.000 --> 00:00:20.010
manager on Google Play
 

00:00:20.010 --> 00:00:22.460
manager on Google Play
everyone Fergus product manager for

00:00:22.460 --> 00:00:22.470
everyone Fergus product manager for
 

00:00:22.470 --> 00:00:25.730
everyone Fergus product manager for
Android BIOS hands up here who likes one

00:00:25.730 --> 00:00:25.740
Android BIOS hands up here who likes one
 

00:00:25.740 --> 00:00:29.210
Android BIOS hands up here who likes one
star rating okay we got one person in

00:00:29.210 --> 00:00:29.220
star rating okay we got one person in
 

00:00:29.220 --> 00:00:32.990
star rating okay we got one person in
the wrong talk I'm sorry but um the

00:00:32.990 --> 00:00:33.000
the wrong talk I'm sorry but um the
 

00:00:33.000 --> 00:00:34.850
the wrong talk I'm sorry but um the
people who don't like one star ratings

00:00:34.850 --> 00:00:34.860
people who don't like one star ratings
 

00:00:34.860 --> 00:00:38.090
people who don't like one star ratings
are in the right place so we're here to

00:00:38.090 --> 00:00:38.100
are in the right place so we're here to
 

00:00:38.100 --> 00:00:39.889
are in the right place so we're here to
tell you how you can engineer your app

00:00:39.889 --> 00:00:39.899
tell you how you can engineer your app
 

00:00:39.899 --> 00:00:41.959
tell you how you can engineer your app
for high performance with the new tools

00:00:41.959 --> 00:00:41.969
for high performance with the new tools
 

00:00:41.969 --> 00:00:46.990
for high performance with the new tools
available on Android and on Google Play

00:00:46.990 --> 00:00:47.000
available on Android and on Google Play
 

00:00:47.000 --> 00:00:48.740
available on Android and on Google Play
we're going to start off by talking

00:00:48.740 --> 00:00:48.750
we're going to start off by talking
 

00:00:48.750 --> 00:00:50.479
we're going to start off by talking
about why performance matters in general

00:00:50.479 --> 00:00:50.489
about why performance matters in general
 

00:00:50.489 --> 00:00:52.459
about why performance matters in general
and then we're going to jump into and

00:00:52.459 --> 00:00:52.469
and then we're going to jump into and
 

00:00:52.469 --> 00:00:54.799
and then we're going to jump into and
the new initiatives that we have around

00:00:54.799 --> 00:00:54.809
the new initiatives that we have around
 

00:00:54.809 --> 00:00:57.080
the new initiatives that we have around
android vitals and how we've simplified

00:00:57.080 --> 00:00:57.090
android vitals and how we've simplified
 

00:00:57.090 --> 00:00:58.880
android vitals and how we've simplified
it for you to be able to understand and

00:00:58.880 --> 00:00:58.890
it for you to be able to understand and
 

00:00:58.890 --> 00:01:00.650
it for you to be able to understand and
take action much easier by using the

00:01:00.650 --> 00:01:00.660
take action much easier by using the
 

00:01:00.660 --> 00:01:02.840
take action much easier by using the
concept of bad behaviors then we're

00:01:02.840 --> 00:01:02.850
concept of bad behaviors then we're
 

00:01:02.850 --> 00:01:05.000
concept of bad behaviors then we're
going to go into how you can detect and

00:01:05.000 --> 00:01:05.010
going to go into how you can detect and
 

00:01:05.010 --> 00:01:08.030
going to go into how you can detect and
fix these issues most effectively to be

00:01:08.030 --> 00:01:08.040
fix these issues most effectively to be
 

00:01:08.040 --> 00:01:12.410
fix these issues most effectively to be
able to have successful app great so for

00:01:12.410 --> 00:01:12.420
able to have successful app great so for
 

00:01:12.420 --> 00:01:14.090
able to have successful app great so for
the people who want to avoid those 1

00:01:14.090 --> 00:01:14.100
the people who want to avoid those 1
 

00:01:14.100 --> 00:01:16.039
the people who want to avoid those 1
star ratings the number one way you can

00:01:16.039 --> 00:01:16.049
star ratings the number one way you can
 

00:01:16.049 --> 00:01:18.620
star ratings the number one way you can
do that is by focusing on stability of

00:01:18.620 --> 00:01:18.630
do that is by focusing on stability of
 

00:01:18.630 --> 00:01:20.510
do that is by focusing on stability of
your applications we put Google's

00:01:20.510 --> 00:01:20.520
your applications we put Google's
 

00:01:20.520 --> 00:01:22.399
your applications we put Google's
machine learning to work to be able to

00:01:22.399 --> 00:01:22.409
machine learning to work to be able to
 

00:01:22.409 --> 00:01:24.320
machine learning to work to be able to
figure out what are people talking about

00:01:24.320 --> 00:01:24.330
figure out what are people talking about
 

00:01:24.330 --> 00:01:27.200
figure out what are people talking about
in 1 star ratings we found the 50% of 1

00:01:27.200 --> 00:01:27.210
in 1 star ratings we found the 50% of 1
 

00:01:27.210 --> 00:01:30.200
in 1 star ratings we found the 50% of 1
star ratings are talking about stability

00:01:30.200 --> 00:01:30.210
star ratings are talking about stability
 

00:01:30.210 --> 00:01:34.310
star ratings are talking about stability
and bugs then once you fix those issues

00:01:34.310 --> 00:01:34.320
and bugs then once you fix those issues
 

00:01:34.320 --> 00:01:36.590
and bugs then once you fix those issues
how can you get to a 5 star app what we

00:01:36.590 --> 00:01:36.600
how can you get to a 5 star app what we
 

00:01:36.600 --> 00:01:38.270
how can you get to a 5 star app what we
found is that if you want to get your

00:01:38.270 --> 00:01:38.280
found is that if you want to get your
 

00:01:38.280 --> 00:01:39.679
found is that if you want to get your
files around focusing on design

00:01:39.679 --> 00:01:39.689
files around focusing on design
 

00:01:39.689 --> 00:01:43.130
files around focusing on design
usability and speed are the things that

00:01:43.130 --> 00:01:43.140
usability and speed are the things that
 

00:01:43.140 --> 00:01:45.560
usability and speed are the things that
matter because 60% of 5 star reviews are

00:01:45.560 --> 00:01:45.570
matter because 60% of 5 star reviews are
 

00:01:45.570 --> 00:01:51.350
matter because 60% of 5 star reviews are
talking about those topics but don't

00:01:51.350 --> 00:01:51.360
talking about those topics but don't
 

00:01:51.360 --> 00:01:53.450
talking about those topics but don't
just take our word first are more likely

00:01:53.450 --> 00:01:53.460
just take our word first are more likely
 

00:01:53.460 --> 00:01:56.030
just take our word first are more likely
giggles machine learning words first you

00:01:56.030 --> 00:01:56.040
giggles machine learning words first you
 

00:01:56.040 --> 00:01:58.100
giggles machine learning words first you
need to actually take developers words

00:01:58.100 --> 00:01:58.110
need to actually take developers words
 

00:01:58.110 --> 00:02:00.649
need to actually take developers words
where the busuu team which is built an

00:02:00.649 --> 00:02:00.659
where the busuu team which is built an
 

00:02:00.659 --> 00:02:02.840
where the busuu team which is built an
amazing language learning app found that

00:02:02.840 --> 00:02:02.850
amazing language learning app found that
 

00:02:02.850 --> 00:02:05.480
amazing language learning app found that
by focusing on performance and making

00:02:05.480 --> 00:02:05.490
by focusing on performance and making
 

00:02:05.490 --> 00:02:07.160
by focusing on performance and making
that a part of their culture they were

00:02:07.160 --> 00:02:07.170
that a part of their culture they were
 

00:02:07.170 --> 00:02:09.290
that a part of their culture they were
able to increase their star rating as a

00:02:09.290 --> 00:02:09.300
able to increase their star rating as a
 

00:02:09.300 --> 00:02:11.610
able to increase their star rating as a
result

00:02:11.610 --> 00:02:11.620
result
 

00:02:11.620 --> 00:02:14.620
result
the big fish games team have even seen

00:02:14.620 --> 00:02:14.630
the big fish games team have even seen
 

00:02:14.630 --> 00:02:16.300
the big fish games team have even seen
increases in retention by focusing on

00:02:16.300 --> 00:02:16.310
increases in retention by focusing on
 

00:02:16.310 --> 00:02:24.010
increases in retention by focusing on
performance at Google and simply within

00:02:24.010 --> 00:02:24.020
performance at Google and simply within
 

00:02:24.020 --> 00:02:25.870
performance at Google and simply within
Android we're obsessed with our

00:02:25.870 --> 00:02:25.880
Android we're obsessed with our
 

00:02:25.880 --> 00:02:27.700
Android we're obsessed with our
performance and device performance

00:02:27.700 --> 00:02:27.710
performance and device performance
 

00:02:27.710 --> 00:02:29.200
performance and device performance
we've been assessing over this for a

00:02:29.200 --> 00:02:29.210
we've been assessing over this for a
 

00:02:29.210 --> 00:02:32.320
we've been assessing over this for a
number of years now back in 2012 we

00:02:32.320 --> 00:02:32.330
number of years now back in 2012 we
 

00:02:32.330 --> 00:02:34.510
number of years now back in 2012 we
launched project butter with jellybean

00:02:34.510 --> 00:02:34.520
launched project butter with jellybean
 

00:02:34.520 --> 00:02:37.890
launched project butter with jellybean
since then we've launched the doze mode

00:02:37.890 --> 00:02:37.900
since then we've launched the doze mode
 

00:02:37.900 --> 00:02:40.480
since then we've launched the doze mode
project Vulcan last year and this year

00:02:40.480 --> 00:02:40.490
project Vulcan last year and this year
 

00:02:40.490 --> 00:02:43.140
project Vulcan last year and this year
bunch of new tools in Android oak and

00:02:43.140 --> 00:02:43.150
bunch of new tools in Android oak and
 

00:02:43.150 --> 00:02:45.670
bunch of new tools in Android oak and
the ability for you to be able to get

00:02:45.670 --> 00:02:45.680
the ability for you to be able to get
 

00:02:45.680 --> 00:02:50.350
the ability for you to be able to get
insights with Android BIOS so what is

00:02:50.350 --> 00:02:50.360
insights with Android BIOS so what is
 

00:02:50.360 --> 00:02:52.180
insights with Android BIOS so what is
Android BIOS you might have seen this in

00:02:52.180 --> 00:02:52.190
Android BIOS you might have seen this in
 

00:02:52.190 --> 00:02:54.280
Android BIOS you might have seen this in
the keynote earlier today this is our

00:02:54.280 --> 00:02:54.290
the keynote earlier today this is our
 

00:02:54.290 --> 00:02:56.200
the keynote earlier today this is our
new initiative to be able to help you be

00:02:56.200 --> 00:02:56.210
new initiative to be able to help you be
 

00:02:56.210 --> 00:02:57.880
new initiative to be able to help you be
able to gain deeper insights into the

00:02:57.880 --> 00:02:57.890
able to gain deeper insights into the
 

00:02:57.890 --> 00:03:00.430
able to gain deeper insights into the
performance of your application across

00:03:00.430 --> 00:03:00.440
performance of your application across
 

00:03:00.440 --> 00:03:03.640
performance of your application across
core performance metrics the three that

00:03:03.640 --> 00:03:03.650
core performance metrics the three that
 

00:03:03.650 --> 00:03:06.270
core performance metrics the three that
we're starting with our stability

00:03:06.270 --> 00:03:06.280
we're starting with our stability
 

00:03:06.280 --> 00:03:10.660
we're starting with our stability
battery and render times you'll see many

00:03:10.660 --> 00:03:10.670
battery and render times you'll see many
 

00:03:10.670 --> 00:03:12.130
battery and render times you'll see many
more comb over the course of the next

00:03:12.130 --> 00:03:12.140
more comb over the course of the next
 

00:03:12.140 --> 00:03:14.530
more comb over the course of the next
few months and we'll be able to give you

00:03:14.530 --> 00:03:14.540
few months and we'll be able to give you
 

00:03:14.540 --> 00:03:17.890
few months and we'll be able to give you
those insights on Android and on the

00:03:17.890 --> 00:03:17.900
those insights on Android and on the
 

00:03:17.900 --> 00:03:19.960
those insights on Android and on the
Play console so let's jump into the

00:03:19.960 --> 00:03:19.970
Play console so let's jump into the
 

00:03:19.970 --> 00:03:22.150
Play console so let's jump into the
three that we're launching today first

00:03:22.150 --> 00:03:22.160
three that we're launching today first
 

00:03:22.160 --> 00:03:24.490
three that we're launching today first
one is stability so everyone knows that

00:03:24.490 --> 00:03:24.500
one is stability so everyone knows that
 

00:03:24.500 --> 00:03:26.170
one is stability so everyone knows that
you shouldn't have at your app crash

00:03:26.170 --> 00:03:26.180
you shouldn't have at your app crash
 

00:03:26.180 --> 00:03:27.610
you shouldn't have at your app crash
people to be focused on this for a

00:03:27.610 --> 00:03:27.620
people to be focused on this for a
 

00:03:27.620 --> 00:03:30.190
people to be focused on this for a
number of years and crashlytics has

00:03:30.190 --> 00:03:30.200
number of years and crashlytics has
 

00:03:30.200 --> 00:03:31.960
number of years and crashlytics has
introduced the concept of crash for

00:03:31.960 --> 00:03:31.970
introduced the concept of crash for
 

00:03:31.970 --> 00:03:34.270
introduced the concept of crash for
users now in the Play console you can be

00:03:34.270 --> 00:03:34.280
users now in the Play console you can be
 

00:03:34.280 --> 00:03:36.370
users now in the Play console you can be
able to see your crime history user rate

00:03:36.370 --> 00:03:36.380
able to see your crime history user rate
 

00:03:36.380 --> 00:03:38.920
able to see your crime history user rate
and your class race you can also be Oh

00:03:38.920 --> 00:03:38.930
and your class race you can also be Oh
 

00:03:38.930 --> 00:03:41.350
and your class race you can also be Oh
see your a and our race and this is

00:03:41.350 --> 00:03:41.360
see your a and our race and this is
 

00:03:41.360 --> 00:03:44.920
see your a and our race and this is
where your a and or is a concept on

00:03:44.920 --> 00:03:44.930
where your a and or is a concept on
 

00:03:44.930 --> 00:03:46.600
where your a and or is a concept on
Android which is application not

00:03:46.600 --> 00:03:46.610
Android which is application not
 

00:03:46.610 --> 00:03:48.730
Android which is application not
responding that's when your app appears

00:03:48.730 --> 00:03:48.740
responding that's when your app appears
 

00:03:48.740 --> 00:03:51.070
responding that's when your app appears
frozen and does not respond for five

00:03:51.070 --> 00:03:51.080
frozen and does not respond for five
 

00:03:51.080 --> 00:03:55.720
frozen and does not respond for five
seconds

00:03:55.720 --> 00:03:55.730
 
 

00:03:55.730 --> 00:03:58.660
 
the next area is battery so this is

00:03:58.660 --> 00:03:58.670
the next area is battery so this is
 

00:03:58.670 --> 00:04:00.339
the next area is battery so this is
where we want you to avoid using

00:04:00.339 --> 00:04:00.349
where we want you to avoid using
 

00:04:00.349 --> 00:04:02.860
where we want you to avoid using
people's advices and consuming their

00:04:02.860 --> 00:04:02.870
people's advices and consuming their
 

00:04:02.870 --> 00:04:05.740
people's advices and consuming their
battery inefficiently so this is where

00:04:05.740 --> 00:04:05.750
battery inefficiently so this is where
 

00:04:05.750 --> 00:04:08.850
battery inefficiently so this is where
we want to avoid using the radios are

00:04:08.850 --> 00:04:08.860
we want to avoid using the radios are
 

00:04:08.860 --> 00:04:11.740
we want to avoid using the radios are
using the CPU when you shouldn't be and

00:04:11.740 --> 00:04:11.750
using the CPU when you shouldn't be and
 

00:04:11.750 --> 00:04:16.960
using the CPU when you shouldn't be and
you don't need to actually the next area

00:04:16.960 --> 00:04:16.970
you don't need to actually the next area
 

00:04:16.970 --> 00:04:19.240
you don't need to actually the next area
is rendering so this is where we want to

00:04:19.240 --> 00:04:19.250
is rendering so this is where we want to
 

00:04:19.250 --> 00:04:20.590
is rendering so this is where we want to
be able to help you understand how do

00:04:20.590 --> 00:04:20.600
be able to help you understand how do
 

00:04:20.600 --> 00:04:22.690
be able to help you understand how do
you can you provide a silky smooth

00:04:22.690 --> 00:04:22.700
you can you provide a silky smooth
 

00:04:22.700 --> 00:04:24.490
you can you provide a silky smooth
experience to your users so that they

00:04:24.490 --> 00:04:24.500
experience to your users so that they
 

00:04:24.500 --> 00:04:26.379
experience to your users so that they
feel like your app is smooth and fluid

00:04:26.379 --> 00:04:26.389
feel like your app is smooth and fluid
 

00:04:26.389 --> 00:04:28.840
feel like your app is smooth and fluid
on their device and we've two metrics

00:04:28.840 --> 00:04:28.850
on their device and we've two metrics
 

00:04:28.850 --> 00:04:29.650
on their device and we've two metrics
that we're going to introduce to you

00:04:29.650 --> 00:04:29.660
that we're going to introduce to you
 

00:04:29.660 --> 00:04:31.360
that we're going to introduce to you
today that can actually help you be able

00:04:31.360 --> 00:04:31.370
today that can actually help you be able
 

00:04:31.370 --> 00:04:37.300
today that can actually help you be able
to deeply understand that area so we're

00:04:37.300 --> 00:04:37.310
to deeply understand that area so we're
 

00:04:37.310 --> 00:04:38.860
to deeply understand that area so we're
talking about three major performance

00:04:38.860 --> 00:04:38.870
talking about three major performance
 

00:04:38.870 --> 00:04:40.659
talking about three major performance
areas here and within each performance

00:04:40.659 --> 00:04:40.669
areas here and within each performance
 

00:04:40.669 --> 00:04:42.520
areas here and within each performance
area we're going to be introducing two

00:04:42.520 --> 00:04:42.530
area we're going to be introducing two
 

00:04:42.530 --> 00:04:44.890
area we're going to be introducing two
metrics it's a lot of data to be able to

00:04:44.890 --> 00:04:44.900
metrics it's a lot of data to be able to
 

00:04:44.900 --> 00:04:46.270
metrics it's a lot of data to be able to
understand and consume so we've

00:04:46.270 --> 00:04:46.280
understand and consume so we've
 

00:04:46.280 --> 00:04:48.909
understand and consume so we've
simplified it to this concept of bad

00:04:48.909 --> 00:04:48.919
simplified it to this concept of bad
 

00:04:48.919 --> 00:04:51.909
simplified it to this concept of bad
behaviors this is where we take your app

00:04:51.909 --> 00:04:51.919
behaviors this is where we take your app
 

00:04:51.919 --> 00:04:54.909
behaviors this is where we take your app
and we study the performance data and we

00:04:54.909 --> 00:04:54.919
and we study the performance data and we
 

00:04:54.919 --> 00:04:56.800
and we study the performance data and we
figure out if you're in the bottom 25%

00:04:56.800 --> 00:04:56.810
figure out if you're in the bottom 25%
 

00:04:56.810 --> 00:05:00.010
figure out if you're in the bottom 25%
of a according to that metric we flag it

00:05:00.010 --> 00:05:00.020
of a according to that metric we flag it
 

00:05:00.020 --> 00:05:03.610
of a according to that metric we flag it
to you and say hey you need to improve

00:05:03.610 --> 00:05:03.620
to you and say hey you need to improve
 

00:05:03.620 --> 00:05:06.460
to you and say hey you need to improve
in this area let's do a show of hands so

00:05:06.460 --> 00:05:06.470
in this area let's do a show of hands so
 

00:05:06.470 --> 00:05:09.120
in this area let's do a show of hands so
if let's say 5% of your users are

00:05:09.120 --> 00:05:09.130
if let's say 5% of your users are
 

00:05:09.130 --> 00:05:13.300
if let's say 5% of your users are
experiencing that 50% of their frames

00:05:13.300 --> 00:05:13.310
experiencing that 50% of their frames
 

00:05:13.310 --> 00:05:15.700
experiencing that 50% of their frames
are taking more than 16 frames per set

00:05:15.700 --> 00:05:15.710
are taking more than 16 frames per set
 

00:05:15.710 --> 00:05:17.200
are taking more than 16 frames per set
it's 16 milliseconds to render on the

00:05:17.200 --> 00:05:17.210
it's 16 milliseconds to render on the
 

00:05:17.210 --> 00:05:18.820
it's 16 milliseconds to render on the
screen is that a problem

00:05:18.820 --> 00:05:18.830
screen is that a problem
 

00:05:18.830 --> 00:05:23.020
screen is that a problem
hands up stating its problem okay great

00:05:23.020 --> 00:05:23.030
hands up stating its problem okay great
 

00:05:23.030 --> 00:05:24.520
hands up stating its problem okay great
so laps people agree that's the problem

00:05:24.520 --> 00:05:24.530
so laps people agree that's the problem
 

00:05:24.530 --> 00:05:25.900
so laps people agree that's the problem
at last feel like don't agree that

00:05:25.900 --> 00:05:25.910
at last feel like don't agree that
 

00:05:25.910 --> 00:05:27.879
at last feel like don't agree that
that's a problem well we will actually

00:05:27.879 --> 00:05:27.889
that's a problem well we will actually
 

00:05:27.889 --> 00:05:29.770
that's a problem well we will actually
tell you in the console when you've

00:05:29.770 --> 00:05:29.780
tell you in the console when you've
 

00:05:29.780 --> 00:05:31.990
tell you in the console when you've
reached the boundary of when when that's

00:05:31.990 --> 00:05:32.000
reached the boundary of when when that's
 

00:05:32.000 --> 00:05:33.129
reached the boundary of when when that's
a problem and you're in the bottom 25%

00:05:33.129 --> 00:05:33.139
a problem and you're in the bottom 25%
 

00:05:33.139 --> 00:05:35.920
a problem and you're in the bottom 25%
right now that's at about 2% of users

00:05:35.920 --> 00:05:35.930
right now that's at about 2% of users
 

00:05:35.930 --> 00:05:39.339
right now that's at about 2% of users
impacting experiencing data race will

00:05:39.339 --> 00:05:39.349
impacting experiencing data race will
 

00:05:39.349 --> 00:05:40.900
impacting experiencing data race will
actually be flagged and that is putting

00:05:40.900 --> 00:05:40.910
actually be flagged and that is putting
 

00:05:40.910 --> 00:05:43.750
actually be flagged and that is putting
you in the bottom 25% so we're really

00:05:43.750 --> 00:05:43.760
you in the bottom 25% so we're really
 

00:05:43.760 --> 00:05:45.940
you in the bottom 25% so we're really
trying to simplify it there for you so

00:05:45.940 --> 00:05:45.950
trying to simplify it there for you so
 

00:05:45.950 --> 00:05:47.740
trying to simplify it there for you so
you can be able to understand where

00:05:47.740 --> 00:05:47.750
you can be able to understand where
 

00:05:47.750 --> 00:05:49.450
you can be able to understand where
you're positioned according to the

00:05:49.450 --> 00:05:49.460
you're positioned according to the
 

00:05:49.460 --> 00:05:53.589
you're positioned according to the
benchmark so where do you see this data

00:05:53.589 --> 00:05:53.599
benchmark so where do you see this data
 

00:05:53.599 --> 00:05:55.600
benchmark so where do you see this data
you see this data in a new top-level

00:05:55.600 --> 00:05:55.610
you see this data in a new top-level
 

00:05:55.610 --> 00:05:57.670
you see this data in a new top-level
navigation item in the play console

00:05:57.670 --> 00:05:57.680
navigation item in the play console
 

00:05:57.680 --> 00:05:59.860
navigation item in the play console
called Android vials it's live right now

00:05:59.860 --> 00:05:59.870
called Android vials it's live right now
 

00:05:59.870 --> 00:06:01.629
called Android vials it's live right now
to all of you and if you have enough

00:06:01.629 --> 00:06:01.639
to all of you and if you have enough
 

00:06:01.639 --> 00:06:04.000
to all of you and if you have enough
data you'll see the insights that I'm

00:06:04.000 --> 00:06:04.010
data you'll see the insights that I'm
 

00:06:04.010 --> 00:06:04.510
data you'll see the insights that I'm
talking about

00:06:04.510 --> 00:06:04.520
talking about
 

00:06:04.520 --> 00:06:05.860
talking about
and that Ricardo is going to tell you

00:06:05.860 --> 00:06:05.870
and that Ricardo is going to tell you
 

00:06:05.870 --> 00:06:08.050
and that Ricardo is going to tell you
more about right now

00:06:08.050 --> 00:06:08.060
more about right now
 

00:06:08.060 --> 00:06:11.600
more about right now
Thank You Fergus so Fergus just said we

00:06:11.600 --> 00:06:11.610
Thank You Fergus so Fergus just said we
 

00:06:11.610 --> 00:06:13.040
Thank You Fergus so Fergus just said we
just launched a new section in the play

00:06:13.040 --> 00:06:13.050
just launched a new section in the play
 

00:06:13.050 --> 00:06:15.679
just launched a new section in the play
console which is called android vitals

00:06:15.679 --> 00:06:15.689
console which is called android vitals
 

00:06:15.689 --> 00:06:17.899
console which is called android vitals
and it is available to all of you today

00:06:17.899 --> 00:06:17.909
and it is available to all of you today
 

00:06:17.909 --> 00:06:20.480
and it is available to all of you today
and you can go and check it out now what

00:06:20.480 --> 00:06:20.490
and you can go and check it out now what
 

00:06:20.490 --> 00:06:23.149
and you can go and check it out now what
it does it summarizes all the findings

00:06:23.149 --> 00:06:23.159
it does it summarizes all the findings
 

00:06:23.159 --> 00:06:25.010
it does it summarizes all the findings
that we have about your app performance

00:06:25.010 --> 00:06:25.020
that we have about your app performance
 

00:06:25.020 --> 00:06:27.170
that we have about your app performance
across these three domains that Fergus

00:06:27.170 --> 00:06:27.180
across these three domains that Fergus
 

00:06:27.180 --> 00:06:29.959
across these three domains that Fergus
just mentioned stability battery and

00:06:29.959 --> 00:06:29.969
just mentioned stability battery and
 

00:06:29.969 --> 00:06:32.480
just mentioned stability battery and
renderings it works out of the box

00:06:32.480 --> 00:06:32.490
renderings it works out of the box
 

00:06:32.490 --> 00:06:35.330
renderings it works out of the box
without any integration needed no SDKs

00:06:35.330 --> 00:06:35.340
without any integration needed no SDKs
 

00:06:35.340 --> 00:06:38.989
without any integration needed no SDKs
to add nothing to add your apk size the

00:06:38.989 --> 00:06:38.999
to add nothing to add your apk size the
 

00:06:38.999 --> 00:06:41.149
to add nothing to add your apk size the
data that you find there is collected

00:06:41.149 --> 00:06:41.159
data that you find there is collected
 

00:06:41.159 --> 00:06:43.100
data that you find there is collected
from millions of Android users that have

00:06:43.100 --> 00:06:43.110
from millions of Android users that have
 

00:06:43.110 --> 00:06:45.050
from millions of Android users that have
opted in to share diagnostic information

00:06:45.050 --> 00:06:45.060
opted in to share diagnostic information
 

00:06:45.060 --> 00:06:47.390
opted in to share diagnostic information
with Google to help all of you

00:06:47.390 --> 00:06:47.400
with Google to help all of you
 

00:06:47.400 --> 00:06:49.519
with Google to help all of you
understand and improve the quality of

00:06:49.519 --> 00:06:49.529
understand and improve the quality of
 

00:06:49.529 --> 00:06:53.149
understand and improve the quality of
your apps android vitals also eye light

00:06:53.149 --> 00:06:53.159
your apps android vitals also eye light
 

00:06:53.159 --> 00:06:55.519
your apps android vitals also eye light
whenever wherever at any given time

00:06:55.519 --> 00:06:55.529
whenever wherever at any given time
 

00:06:55.529 --> 00:06:57.800
whenever wherever at any given time
there is a problem that affects a

00:06:57.800 --> 00:06:57.810
there is a problem that affects a
 

00:06:57.810 --> 00:07:00.709
there is a problem that affects a
significant fraction of your users for

00:07:00.709 --> 00:07:00.719
significant fraction of your users for
 

00:07:00.719 --> 00:07:02.420
significant fraction of your users for
example you can see one of the red marks

00:07:02.420 --> 00:07:02.430
example you can see one of the red marks
 

00:07:02.430 --> 00:07:03.769
example you can see one of the red marks
over there to indicate that you should

00:07:03.769 --> 00:07:03.779
over there to indicate that you should
 

00:07:03.779 --> 00:07:05.059
over there to indicate that you should
be looking at your rendering and

00:07:05.059 --> 00:07:05.069
be looking at your rendering and
 

00:07:05.069 --> 00:07:06.739
be looking at your rendering and
understand if there is an issue there

00:07:06.739 --> 00:07:06.749
understand if there is an issue there
 

00:07:06.749 --> 00:07:09.499
understand if there is an issue there
and so you can use this as the first

00:07:09.499 --> 00:07:09.509
and so you can use this as the first
 

00:07:09.509 --> 00:07:11.360
and so you can use this as the first
port of call to understand your

00:07:11.360 --> 00:07:11.370
port of call to understand your
 

00:07:11.370 --> 00:07:14.480
port of call to understand your
application performance so we're going

00:07:14.480 --> 00:07:14.490
application performance so we're going
 

00:07:14.490 --> 00:07:15.950
application performance so we're going
to spend some time now to go in the

00:07:15.950 --> 00:07:15.960
to spend some time now to go in the
 

00:07:15.960 --> 00:07:17.689
to spend some time now to go in the
detail about all these three domains

00:07:17.689 --> 00:07:17.699
detail about all these three domains
 

00:07:17.699 --> 00:07:20.420
detail about all these three domains
stability battery and rendering I'm

00:07:20.420 --> 00:07:20.430
stability battery and rendering I'm
 

00:07:20.430 --> 00:07:22.490
stability battery and rendering I'm
going to start with stability stability

00:07:22.490 --> 00:07:22.500
going to start with stability stability
 

00:07:22.500 --> 00:07:25.369
going to start with stability stability
is about crashes and ANR reports

00:07:25.369 --> 00:07:25.379
is about crashes and ANR reports
 

00:07:25.379 --> 00:07:28.309
is about crashes and ANR reports
applications not responding until today

00:07:28.309 --> 00:07:28.319
applications not responding until today
 

00:07:28.319 --> 00:07:31.879
applications not responding until today
the only way for an ANR or a crash the

00:07:31.879 --> 00:07:31.889
the only way for an ANR or a crash the
 

00:07:31.889 --> 00:07:34.279
the only way for an ANR or a crash the
surface in the play console was if your

00:07:34.279 --> 00:07:34.289
surface in the play console was if your
 

00:07:34.289 --> 00:07:36.499
surface in the play console was if your
users explicitly acknowledge a dialogue

00:07:36.499 --> 00:07:36.509
users explicitly acknowledge a dialogue
 

00:07:36.509 --> 00:07:39.110
users explicitly acknowledge a dialogue
on the phone for each ANR in crash to be

00:07:39.110 --> 00:07:39.120
on the phone for each ANR in crash to be
 

00:07:39.120 --> 00:07:41.450
on the phone for each ANR in crash to be
reported and these obviously tedious and

00:07:41.450 --> 00:07:41.460
reported and these obviously tedious and
 

00:07:41.460 --> 00:07:43.820
reported and these obviously tedious and
it led to low volume of crash and in our

00:07:43.820 --> 00:07:43.830
it led to low volume of crash and in our
 

00:07:43.830 --> 00:07:46.519
it led to low volume of crash and in our
reports so the first thing that we have

00:07:46.519 --> 00:07:46.529
reports so the first thing that we have
 

00:07:46.529 --> 00:07:48.800
reports so the first thing that we have
done with android vitals we have greatly

00:07:48.800 --> 00:07:48.810
done with android vitals we have greatly
 

00:07:48.810 --> 00:07:52.070
done with android vitals we have greatly
reduced user friction as I mentioned the

00:07:52.070 --> 00:07:52.080
reduced user friction as I mentioned the
 

00:07:52.080 --> 00:07:53.899
reduced user friction as I mentioned the
data that you find there comes from

00:07:53.899 --> 00:07:53.909
data that you find there comes from
 

00:07:53.909 --> 00:07:55.879
data that you find there comes from
users that have opted in to share

00:07:55.879 --> 00:07:55.889
users that have opted in to share
 

00:07:55.889 --> 00:07:59.119
users that have opted in to share
diagnostic information opt in typically

00:07:59.119 --> 00:07:59.129
diagnostic information opt in typically
 

00:07:59.129 --> 00:08:00.980
diagnostic information opt in typically
happens only once when a person

00:08:00.980 --> 00:08:00.990
happens only once when a person
 

00:08:00.990 --> 00:08:03.230
happens only once when a person
activates a new phone and that is a very

00:08:03.230 --> 00:08:03.240
activates a new phone and that is a very
 

00:08:03.240 --> 00:08:06.409
activates a new phone and that is a very
low friction gesture so this means that

00:08:06.409 --> 00:08:06.419
low friction gesture so this means that
 

00:08:06.419 --> 00:08:08.779
low friction gesture so this means that
in the Play console now you see over 100

00:08:08.779 --> 00:08:08.789
in the Play console now you see over 100
 

00:08:08.789 --> 00:08:10.969
in the Play console now you see over 100
fold coverage in the number of records

00:08:10.969 --> 00:08:10.979
fold coverage in the number of records
 

00:08:10.979 --> 00:08:13.279
fold coverage in the number of records
with reports coming from users running

00:08:13.279 --> 00:08:13.289
with reports coming from users running
 

00:08:13.289 --> 00:08:15.439
with reports coming from users running
and versions of Android as all this

00:08:15.439 --> 00:08:15.449
and versions of Android as all this
 

00:08:15.449 --> 00:08:18.649
and versions of Android as all this
jelly bean and these which is 98% of the

00:08:18.649 --> 00:08:18.659
jelly bean and these which is 98% of the
 

00:08:18.659 --> 00:08:20.420
jelly bean and these which is 98% of the
Android devices that apply services in

00:08:20.420 --> 00:08:20.430
Android devices that apply services in
 

00:08:20.430 --> 00:08:23.070
Android devices that apply services in
store

00:08:23.070 --> 00:08:23.080
 
 

00:08:23.080 --> 00:08:25.860
 
so let's start with the first domain

00:08:25.860 --> 00:08:25.870
so let's start with the first domain
 

00:08:25.870 --> 00:08:28.450
so let's start with the first domain
stability what are the bad behaviors

00:08:28.450 --> 00:08:28.460
stability what are the bad behaviors
 

00:08:28.460 --> 00:08:30.970
stability what are the bad behaviors
that we want to flag out there crashes

00:08:30.970 --> 00:08:30.980
that we want to flag out there crashes
 

00:08:30.980 --> 00:08:32.920
that we want to flag out there crashes
an application not responding which is

00:08:32.920 --> 00:08:32.930
an application not responding which is
 

00:08:32.930 --> 00:08:36.790
an application not responding which is
application phrases for sure you never

00:08:36.790 --> 00:08:36.800
application phrases for sure you never
 

00:08:36.800 --> 00:08:38.890
application phrases for sure you never
really want any user of your app to

00:08:38.890 --> 00:08:38.900
really want any user of your app to
 

00:08:38.900 --> 00:08:40.990
really want any user of your app to
experience one of them and so we define

00:08:40.990 --> 00:08:41.000
experience one of them and so we define
 

00:08:41.000 --> 00:08:42.700
experience one of them and so we define
these bad behaviors in terms of

00:08:42.700 --> 00:08:42.710
these bad behaviors in terms of
 

00:08:42.710 --> 00:08:44.680
these bad behaviors in terms of
percentage of users that are

00:08:44.680 --> 00:08:44.690
percentage of users that are
 

00:08:44.690 --> 00:08:46.600
percentage of users that are
experiencing any of them in any given

00:08:46.600 --> 00:08:46.610
experiencing any of them in any given
 

00:08:46.610 --> 00:08:49.000
experiencing any of them in any given
day you may be familiar with the

00:08:49.000 --> 00:08:49.010
day you may be familiar with the
 

00:08:49.010 --> 00:08:51.370
day you may be familiar with the
equivalent metric that other crash

00:08:51.370 --> 00:08:51.380
equivalent metric that other crash
 

00:08:51.380 --> 00:08:52.930
equivalent metric that other crash
reporting tools have introduced crash

00:08:52.930 --> 00:08:52.940
reporting tools have introduced crash
 

00:08:52.940 --> 00:08:55.600
reporting tools have introduced crash
free users and so for the next few

00:08:55.600 --> 00:08:55.610
free users and so for the next few
 

00:08:55.610 --> 00:08:57.190
free users and so for the next few
minutes I'm going to focus on ANR

00:08:57.190 --> 00:08:57.200
minutes I'm going to focus on ANR
 

00:08:57.200 --> 00:09:03.370
minutes I'm going to focus on ANR
specifically what is an NR NR means

00:09:03.370 --> 00:09:03.380
specifically what is an NR NR means
 

00:09:03.380 --> 00:09:05.350
specifically what is an NR NR means
application of responding and this

00:09:05.350 --> 00:09:05.360
application of responding and this
 

00:09:05.360 --> 00:09:07.030
application of responding and this
happens when your application freezes

00:09:07.030 --> 00:09:07.040
happens when your application freezes
 

00:09:07.040 --> 00:09:09.430
happens when your application freezes
and stop responding to user input this

00:09:09.430 --> 00:09:09.440
and stop responding to user input this
 

00:09:09.440 --> 00:09:10.720
and stop responding to user input this
could be because you have a dead look in

00:09:10.720 --> 00:09:10.730
could be because you have a dead look in
 

00:09:10.730 --> 00:09:12.850
could be because you have a dead look in
your multi-threaded code because if a UI

00:09:12.850 --> 00:09:12.860
your multi-threaded code because if a UI
 

00:09:12.860 --> 00:09:14.860
your multi-threaded code because if a UI
thread which is too slow or because you

00:09:14.860 --> 00:09:14.870
thread which is too slow or because you
 

00:09:14.870 --> 00:09:16.420
thread which is too slow or because you
have background receivers that do not

00:09:16.420 --> 00:09:16.430
have background receivers that do not
 

00:09:16.430 --> 00:09:18.940
have background receivers that do not
complete within a meaningful amount of

00:09:18.940 --> 00:09:18.950
complete within a meaningful amount of
 

00:09:18.950 --> 00:09:22.120
complete within a meaningful amount of
time a nurse are super disruptive of the

00:09:22.120 --> 00:09:22.130
time a nurse are super disruptive of the
 

00:09:22.130 --> 00:09:24.220
time a nurse are super disruptive of the
user experience and therefore you should

00:09:24.220 --> 00:09:24.230
user experience and therefore you should
 

00:09:24.230 --> 00:09:26.370
user experience and therefore you should
aim to never have any of them and

00:09:26.370 --> 00:09:26.380
aim to never have any of them and
 

00:09:26.380 --> 00:09:29.140
aim to never have any of them and
because application is frozen during an

00:09:29.140 --> 00:09:29.150
because application is frozen during an
 

00:09:29.150 --> 00:09:31.060
because application is frozen during an
NR it means that you cannot typically

00:09:31.060 --> 00:09:31.070
NR it means that you cannot typically
 

00:09:31.070 --> 00:09:33.220
NR it means that you cannot typically
use a cross reporting SDK to collect

00:09:33.220 --> 00:09:33.230
use a cross reporting SDK to collect
 

00:09:33.230 --> 00:09:36.340
use a cross reporting SDK to collect
them on the other side the Android

00:09:36.340 --> 00:09:36.350
them on the other side the Android
 

00:09:36.350 --> 00:09:37.630
them on the other side the Android
platform trucks all of them

00:09:37.630 --> 00:09:37.640
platform trucks all of them
 

00:09:37.640 --> 00:09:39.790
platform trucks all of them
automatically so they are all available

00:09:39.790 --> 00:09:39.800
automatically so they are all available
 

00:09:39.800 --> 00:09:41.530
automatically so they are all available
in the Play console without you having

00:09:41.530 --> 00:09:41.540
in the Play console without you having
 

00:09:41.540 --> 00:09:47.320
in the Play console without you having
to do anything at all you just go to the

00:09:47.320 --> 00:09:47.330
to do anything at all you just go to the
 

00:09:47.330 --> 00:09:49.329
to do anything at all you just go to the
Android vital section and in there you

00:09:49.329 --> 00:09:49.339
Android vital section and in there you
 

00:09:49.339 --> 00:09:51.700
Android vital section and in there you
will find a tab which is called a NR

00:09:51.700 --> 00:09:51.710
will find a tab which is called a NR
 

00:09:51.710 --> 00:09:54.310
will find a tab which is called a NR
rate here you can see how many unique

00:09:54.310 --> 00:09:54.320
rate here you can see how many unique
 

00:09:54.320 --> 00:09:56.410
rate here you can see how many unique
users experience an application of

00:09:56.410 --> 00:09:56.420
users experience an application of
 

00:09:56.420 --> 00:09:58.329
users experience an application of
responding when the app was used on a

00:09:58.329 --> 00:09:58.339
responding when the app was used on a
 

00:09:58.339 --> 00:10:01.030
responding when the app was used on a
given day across app versions device and

00:10:01.030 --> 00:10:01.040
given day across app versions device and
 

00:10:01.040 --> 00:10:03.760
given day across app versions device and
OS versions and if the fraction of the

00:10:03.760 --> 00:10:03.770
OS versions and if the fraction of the
 

00:10:03.770 --> 00:10:06.130
OS versions and if the fraction of the
user is significant you give you get a

00:10:06.130 --> 00:10:06.140
user is significant you give you get a
 

00:10:06.140 --> 00:10:08.740
user is significant you give you get a
red eye light to drive your attention so

00:10:08.740 --> 00:10:08.750
red eye light to drive your attention so
 

00:10:08.750 --> 00:10:10.060
red eye light to drive your attention so
you can focus on the most prominent

00:10:10.060 --> 00:10:10.070
you can focus on the most prominent
 

00:10:10.070 --> 00:10:12.700
you can focus on the most prominent
issues and dive into the litres you can

00:10:12.700 --> 00:10:12.710
issues and dive into the litres you can
 

00:10:12.710 --> 00:10:14.670
issues and dive into the litres you can
click there relatedly in our section and

00:10:14.670 --> 00:10:14.680
click there relatedly in our section and
 

00:10:14.680 --> 00:10:18.250
click there relatedly in our section and
in there you arrive in the NRA crashes

00:10:18.250 --> 00:10:18.260
in there you arrive in the NRA crashes
 

00:10:18.260 --> 00:10:22.030
in there you arrive in the NRA crashes
section of the play console here in

00:10:22.030 --> 00:10:22.040
section of the play console here in
 

00:10:22.040 --> 00:10:24.250
section of the play console here in
addition to reviewing your overall crash

00:10:24.250 --> 00:10:24.260
addition to reviewing your overall crash
 

00:10:24.260 --> 00:10:27.760
addition to reviewing your overall crash
be rate and ANR rate you can dive into

00:10:27.760 --> 00:10:27.770
be rate and ANR rate you can dive into
 

00:10:27.770 --> 00:10:29.800
be rate and ANR rate you can dive into
each crash na NR that has been detected

00:10:29.800 --> 00:10:29.810
each crash na NR that has been detected
 

00:10:29.810 --> 00:10:33.920
each crash na NR that has been detected
for your application

00:10:33.920 --> 00:10:33.930
 
 

00:10:33.930 --> 00:10:36.390
 
Android collects a in arson crashes

00:10:36.390 --> 00:10:36.400
Android collects a in arson crashes
 

00:10:36.400 --> 00:10:38.490
Android collects a in arson crashes
almost immediately as they occurred so

00:10:38.490 --> 00:10:38.500
almost immediately as they occurred so
 

00:10:38.500 --> 00:10:40.050
almost immediately as they occurred so
here you find crashes in ours they're

00:10:40.050 --> 00:10:40.060
here you find crashes in ours they're
 

00:10:40.060 --> 00:10:42.470
here you find crashes in ours they're
typically a few minutes old at most

00:10:42.470 --> 00:10:42.480
typically a few minutes old at most
 

00:10:42.480 --> 00:10:44.640
typically a few minutes old at most
there is a bunch of little new features

00:10:44.640 --> 00:10:44.650
there is a bunch of little new features
 

00:10:44.650 --> 00:10:46.860
there is a bunch of little new features
for example we highlight when a given

00:10:46.860 --> 00:10:46.870
for example we highlight when a given
 

00:10:46.870 --> 00:10:48.690
for example we highlight when a given
ANR has been introduced for the first

00:10:48.690 --> 00:10:48.700
ANR has been introduced for the first
 

00:10:48.700 --> 00:10:51.240
ANR has been introduced for the first
time in your most recent app version

00:10:51.240 --> 00:10:51.250
time in your most recent app version
 

00:10:51.250 --> 00:10:53.910
time in your most recent app version
with those little orange highlights to

00:10:53.910 --> 00:10:53.920
with those little orange highlights to
 

00:10:53.920 --> 00:10:55.500
with those little orange highlights to
let you track the quality of your last

00:10:55.500 --> 00:10:55.510
let you track the quality of your last
 

00:10:55.510 --> 00:10:58.380
let you track the quality of your last
release you also get to see the number

00:10:58.380 --> 00:10:58.390
release you also get to see the number
 

00:10:58.390 --> 00:11:00.450
release you also get to see the number
of unique users that have been affected

00:11:00.450 --> 00:11:00.460
of unique users that have been affected
 

00:11:00.460 --> 00:11:02.460
of unique users that have been affected
by that particular in our so you can

00:11:02.460 --> 00:11:02.470
by that particular in our so you can
 

00:11:02.470 --> 00:11:04.680
by that particular in our so you can
distinguish between high volume issues

00:11:04.680 --> 00:11:04.690
distinguish between high volume issues
 

00:11:04.690 --> 00:11:06.150
distinguish between high volume issues
that are affecting only a handful of

00:11:06.150 --> 00:11:06.160
that are affecting only a handful of
 

00:11:06.160 --> 00:11:08.370
that are affecting only a handful of
users versus widespread ones that might

00:11:08.370 --> 00:11:08.380
users versus widespread ones that might
 

00:11:08.380 --> 00:11:09.990
users versus widespread ones that might
be affecting a significant fraction of

00:11:09.990 --> 00:11:10.000
be affecting a significant fraction of
 

00:11:10.000 --> 00:11:14.310
be affecting a significant fraction of
your user base you can dive into the

00:11:14.310 --> 00:11:14.320
your user base you can dive into the
 

00:11:14.320 --> 00:11:17.010
your user base you can dive into the
details and observe how the number of

00:11:17.010 --> 00:11:17.020
details and observe how the number of
 

00:11:17.020 --> 00:11:18.660
details and observe how the number of
reports and the number of affected users

00:11:18.660 --> 00:11:18.670
reports and the number of affected users
 

00:11:18.670 --> 00:11:20.940
reports and the number of affected users
trends over time and now he breaks down

00:11:20.940 --> 00:11:20.950
trends over time and now he breaks down
 

00:11:20.950 --> 00:11:23.490
trends over time and now he breaks down
across device versions or aspiration app

00:11:23.490 --> 00:11:23.500
across device versions or aspiration app
 

00:11:23.500 --> 00:11:26.910
across device versions or aspiration app
versions and obviously you also get the

00:11:26.910 --> 00:11:26.920
versions and obviously you also get the
 

00:11:26.920 --> 00:11:28.620
versions and obviously you also get the
full thread dump that captures the

00:11:28.620 --> 00:11:28.630
full thread dump that captures the
 

00:11:28.630 --> 00:11:30.660
full thread dump that captures the
application state at the time Leonar

00:11:30.660 --> 00:11:30.670
application state at the time Leonar
 

00:11:30.670 --> 00:11:32.880
application state at the time Leonar
occurred and for crashes obviously you

00:11:32.880 --> 00:11:32.890
occurred and for crashes obviously you
 

00:11:32.890 --> 00:11:34.290
occurred and for crashes obviously you
get similar functionality where you get

00:11:34.290 --> 00:11:34.300
get similar functionality where you get
 

00:11:34.300 --> 00:11:36.630
get similar functionality where you get
the stack trace that was observed when a

00:11:36.630 --> 00:11:36.640
the stack trace that was observed when a
 

00:11:36.640 --> 00:11:38.910
the stack trace that was observed when a
crash occurred so I think this gives you

00:11:38.910 --> 00:11:38.920
crash occurred so I think this gives you
 

00:11:38.920 --> 00:11:40.710
crash occurred so I think this gives you
a pretty good information visibility

00:11:40.710 --> 00:11:40.720
a pretty good information visibility
 

00:11:40.720 --> 00:11:42.090
a pretty good information visibility
into what is happening on your users

00:11:42.090 --> 00:11:42.100
into what is happening on your users
 

00:11:42.100 --> 00:11:44.730
into what is happening on your users
phone the next step is to try and

00:11:44.730 --> 00:11:44.740
phone the next step is to try and
 

00:11:44.740 --> 00:11:48.060
phone the next step is to try and
reproduce and debug them what I

00:11:48.060 --> 00:11:48.070
reproduce and debug them what I
 

00:11:48.070 --> 00:11:51.420
reproduce and debug them what I
recommend is new Android studio 3.2 that

00:11:51.420 --> 00:11:51.430
recommend is new Android studio 3.2 that
 

00:11:51.430 --> 00:11:53.390
recommend is new Android studio 3.2 that
has plenty of new profiling capabilities

00:11:53.390 --> 00:11:53.400
has plenty of new profiling capabilities
 

00:11:53.400 --> 00:11:56.520
has plenty of new profiling capabilities
the new Android profilers is studio 3.0

00:11:56.520 --> 00:11:56.530
the new Android profilers is studio 3.0
 

00:11:56.530 --> 00:11:58.620
the new Android profilers is studio 3.0
provide real time data about your app

00:11:58.620 --> 00:11:58.630
provide real time data about your app
 

00:11:58.630 --> 00:12:02.070
provide real time data about your app
CPU memory and network activity and I

00:12:02.070 --> 00:12:02.080
CPU memory and network activity and I
 

00:12:02.080 --> 00:12:04.050
CPU memory and network activity and I
think this is a great next step to debug

00:12:04.050 --> 00:12:04.060
think this is a great next step to debug
 

00:12:04.060 --> 00:12:06.570
think this is a great next step to debug
your ANR's because root causing them

00:12:06.570 --> 00:12:06.580
your ANR's because root causing them
 

00:12:06.580 --> 00:12:09.330
your ANR's because root causing them
often lies in not taking into proper

00:12:09.330 --> 00:12:09.340
often lies in not taking into proper
 

00:12:09.340 --> 00:12:12.060
often lies in not taking into proper
consideration CPU intensive operation or

00:12:12.060 --> 00:12:12.070
consideration CPU intensive operation or
 

00:12:12.070 --> 00:12:13.860
consideration CPU intensive operation or
blocking operations like fetching data

00:12:13.860 --> 00:12:13.870
blocking operations like fetching data
 

00:12:13.870 --> 00:12:18.060
blocking operations like fetching data
from the network the CPU profiler for

00:12:18.060 --> 00:12:18.070
from the network the CPU profiler for
 

00:12:18.070 --> 00:12:20.610
from the network the CPU profiler for
example gives you real-time CPU usage

00:12:20.610 --> 00:12:20.620
example gives you real-time CPU usage
 

00:12:20.620 --> 00:12:23.490
example gives you real-time CPU usage
for your up process on a timeline you

00:12:23.490 --> 00:12:23.500
for your up process on a timeline you
 

00:12:23.500 --> 00:12:25.290
for your up process on a timeline you
can dive through instrumented method

00:12:25.290 --> 00:12:25.300
can dive through instrumented method
 

00:12:25.300 --> 00:12:27.750
can dive through instrumented method
traces and understand which methods in

00:12:27.750 --> 00:12:27.760
traces and understand which methods in
 

00:12:27.760 --> 00:12:30.150
traces and understand which methods in
maybe in your UI thread are in using up

00:12:30.150 --> 00:12:30.160
maybe in your UI thread are in using up
 

00:12:30.160 --> 00:12:33.440
maybe in your UI thread are in using up
most of the time and become blocking

00:12:33.440 --> 00:12:33.450
most of the time and become blocking
 

00:12:33.450 --> 00:12:34.650
most of the time and become blocking
similarly

00:12:34.650 --> 00:12:34.660
similarly
 

00:12:34.660 --> 00:12:36.750
similarly
the network profiler display network

00:12:36.750 --> 00:12:36.760
the network profiler display network
 

00:12:36.760 --> 00:12:39.090
the network profiler display network
activity on a timeline showing the data

00:12:39.090 --> 00:12:39.100
activity on a timeline showing the data
 

00:12:39.100 --> 00:12:41.040
activity on a timeline showing the data
was sent received and associated

00:12:41.040 --> 00:12:41.050
was sent received and associated
 

00:12:41.050 --> 00:12:44.519
was sent received and associated
latencies again you can use this to

00:12:44.519 --> 00:12:44.529
latencies again you can use this to
 

00:12:44.529 --> 00:12:46.499
latencies again you can use this to
if a slow Network poll is making your

00:12:46.499 --> 00:12:46.509
if a slow Network poll is making your
 

00:12:46.509 --> 00:12:49.889
if a slow Network poll is making your
thread blocks for a response or Ambika

00:12:49.889 --> 00:12:49.899
thread blocks for a response or Ambika
 

00:12:49.899 --> 00:12:52.349
thread blocks for a response or Ambika
zone of an NR this way and instead

00:12:52.349 --> 00:12:52.359
zone of an NR this way and instead
 

00:12:52.359 --> 00:12:54.449
zone of an NR this way and instead
showed in the keynote before it's very

00:12:54.449 --> 00:12:54.459
showed in the keynote before it's very
 

00:12:54.459 --> 00:12:56.219
showed in the keynote before it's very
easy from here to jump directly into the

00:12:56.219 --> 00:12:56.229
easy from here to jump directly into the
 

00:12:56.229 --> 00:12:57.629
easy from here to jump directly into the
code that is responsible for that

00:12:57.629 --> 00:12:57.639
code that is responsible for that
 

00:12:57.639 --> 00:13:00.779
code that is responsible for that
network code if you want to learn more

00:13:00.779 --> 00:13:00.789
network code if you want to learn more
 

00:13:00.789 --> 00:13:02.489
network code if you want to learn more
about the speed profilers there's a

00:13:02.489 --> 00:13:02.499
about the speed profilers there's a
 

00:13:02.499 --> 00:13:04.019
about the speed profilers there's a
great talk tomorrow morning in alpha

00:13:04.019 --> 00:13:04.029
great talk tomorrow morning in alpha
 

00:13:04.029 --> 00:13:05.459
great talk tomorrow morning in alpha
theater that I encourage you to go and

00:13:05.459 --> 00:13:05.469
theater that I encourage you to go and
 

00:13:05.469 --> 00:13:10.409
theater that I encourage you to go and
attend to okay now we discussed how to

00:13:10.409 --> 00:13:10.419
attend to okay now we discussed how to
 

00:13:10.419 --> 00:13:14.009
attend to okay now we discussed how to
reveal many nrcs how to debug them but

00:13:14.009 --> 00:13:14.019
reveal many nrcs how to debug them but
 

00:13:14.019 --> 00:13:15.509
reveal many nrcs how to debug them but
the thing is how do you prevent them

00:13:15.509 --> 00:13:15.519
the thing is how do you prevent them
 

00:13:15.519 --> 00:13:16.979
the thing is how do you prevent them
from happening in the first place

00:13:16.979 --> 00:13:16.989
from happening in the first place
 

00:13:16.989 --> 00:13:19.649
from happening in the first place
textbook recommendation Android 101 is

00:13:19.649 --> 00:13:19.659
textbook recommendation Android 101 is
 

00:13:19.659 --> 00:13:21.929
textbook recommendation Android 101 is
do not do blocking operations in the UI

00:13:21.929 --> 00:13:21.939
do not do blocking operations in the UI
 

00:13:21.939 --> 00:13:24.389
do not do blocking operations in the UI
thread and use for example a sync task

00:13:24.389 --> 00:13:24.399
thread and use for example a sync task
 

00:13:24.399 --> 00:13:27.479
thread and use for example a sync task
instead you can use strict mode to catch

00:13:27.479 --> 00:13:27.489
instead you can use strict mode to catch
 

00:13:27.489 --> 00:13:30.029
instead you can use strict mode to catch
accidental disk or network access on the

00:13:30.029 --> 00:13:30.039
accidental disk or network access on the
 

00:13:30.039 --> 00:13:32.329
accidental disk or network access on the
application main thread as well

00:13:32.329 --> 00:13:32.339
application main thread as well
 

00:13:32.339 --> 00:13:34.709
application main thread as well
another common case is when you have a

00:13:34.709 --> 00:13:34.719
another common case is when you have a
 

00:13:34.719 --> 00:13:36.959
another common case is when you have a
broadcast receiver that receives an

00:13:36.959 --> 00:13:36.969
broadcast receiver that receives an
 

00:13:36.969 --> 00:13:38.609
broadcast receiver that receives an
intent and does not finish processing

00:13:38.609 --> 00:13:38.619
intent and does not finish processing
 

00:13:38.619 --> 00:13:40.469
intent and does not finish processing
within a window of time which is around

00:13:40.469 --> 00:13:40.479
within a window of time which is around
 

00:13:40.479 --> 00:13:42.659
within a window of time which is around
10 seconds or your brokers the receiver

00:13:42.659 --> 00:13:42.669
10 seconds or your brokers the receiver
 

00:13:42.669 --> 00:13:44.459
10 seconds or your brokers the receiver
goes a sync but you forget it will

00:13:44.459 --> 00:13:44.469
goes a sync but you forget it will
 

00:13:44.469 --> 00:13:46.049
goes a sync but you forget it will
finish on the pending result that you

00:13:46.049 --> 00:13:46.059
finish on the pending result that you
 

00:13:46.059 --> 00:13:49.049
finish on the pending result that you
get back again this Android 101 very

00:13:49.049 --> 00:13:49.059
get back again this Android 101 very
 

00:13:49.059 --> 00:13:51.509
get back again this Android 101 very
simple examples most likely your code is

00:13:51.509 --> 00:13:51.519
simple examples most likely your code is
 

00:13:51.519 --> 00:13:54.029
simple examples most likely your code is
much more complicated than this you may

00:13:54.029 --> 00:13:54.039
much more complicated than this you may
 

00:13:54.039 --> 00:13:55.999
much more complicated than this you may
be using cues a synchronous operation

00:13:55.999 --> 00:13:56.009
be using cues a synchronous operation
 

00:13:56.009 --> 00:14:00.089
be using cues a synchronous operation
libraries like rx Java the basic do not

00:14:00.089 --> 00:14:00.099
libraries like rx Java the basic do not
 

00:14:00.099 --> 00:14:02.669
libraries like rx Java the basic do not
change the same recommendations apply be

00:14:02.669 --> 00:14:02.679
change the same recommendations apply be
 

00:14:02.679 --> 00:14:05.249
change the same recommendations apply be
mindful of which threads are on which

00:14:05.249 --> 00:14:05.259
mindful of which threads are on which
 

00:14:05.259 --> 00:14:06.509
mindful of which threads are on which
threads the callback for your a

00:14:06.509 --> 00:14:06.519
threads the callback for your a
 

00:14:06.519 --> 00:14:07.949
threads the callback for your a
synchronous processing end up executing

00:14:07.949 --> 00:14:07.959
synchronous processing end up executing
 

00:14:07.959 --> 00:14:10.289
synchronous processing end up executing
on use semantics in your coding

00:14:10.289 --> 00:14:10.299
on use semantics in your coding
 

00:14:10.299 --> 00:14:12.239
on use semantics in your coding
practices that make sure that you don't

00:14:12.239 --> 00:14:12.249
practices that make sure that you don't
 

00:14:12.249 --> 00:14:14.069
practices that make sure that you don't
end up executing accidentally on UI

00:14:14.069 --> 00:14:14.079
end up executing accidentally on UI
 

00:14:14.079 --> 00:14:17.929
end up executing accidentally on UI
threads when you don't want and so on

00:14:17.929 --> 00:14:17.939
threads when you don't want and so on
 

00:14:17.939 --> 00:14:20.939
threads when you don't want and so on
finally be mindful of introducing dead

00:14:20.939 --> 00:14:20.949
finally be mindful of introducing dead
 

00:14:20.949 --> 00:14:23.339
finally be mindful of introducing dead
lots in your app and beat because if you

00:14:23.339 --> 00:14:23.349
lots in your app and beat because if you
 

00:14:23.349 --> 00:14:24.839
lots in your app and beat because if you
inject Leonar traces that you're

00:14:24.839 --> 00:14:24.849
inject Leonar traces that you're
 

00:14:24.849 --> 00:14:26.429
inject Leonar traces that you're
collecting when the device is connected

00:14:26.429 --> 00:14:26.439
collecting when the device is connected
 

00:14:26.439 --> 00:14:28.799
collecting when the device is connected
to your PC when you're doing debugging

00:14:28.799 --> 00:14:28.809
to your PC when you're doing debugging
 

00:14:28.809 --> 00:14:31.079
to your PC when you're doing debugging
or by downloading the tracing from the

00:14:31.079 --> 00:14:31.089
or by downloading the tracing from the
 

00:14:31.089 --> 00:14:33.629
or by downloading the tracing from the
plight console you can easily spot if at

00:14:33.629 --> 00:14:33.639
plight console you can easily spot if at
 

00:14:33.639 --> 00:14:34.889
plight console you can easily spot if at
any time you have deadlocks

00:14:34.889 --> 00:14:34.899
any time you have deadlocks
 

00:14:34.899 --> 00:14:36.719
any time you have deadlocks
by for example looking when a given

00:14:36.719 --> 00:14:36.729
by for example looking when a given
 

00:14:36.729 --> 00:14:39.359
by for example looking when a given
thread like the UI thread ear is locked

00:14:39.359 --> 00:14:39.369
thread like the UI thread ear is locked
 

00:14:39.369 --> 00:14:41.309
thread like the UI thread ear is locked
waiting for a background one and vice

00:14:41.309 --> 00:14:41.319
waiting for a background one and vice
 

00:14:41.319 --> 00:14:45.929
waiting for a background one and vice
versa so this is all I have to cover

00:14:45.929 --> 00:14:45.939
versa so this is all I have to cover
 

00:14:45.939 --> 00:14:48.389
versa so this is all I have to cover
about ANR the fundamental question

00:14:48.389 --> 00:14:48.399
about ANR the fundamental question
 

00:14:48.399 --> 00:14:50.999
about ANR the fundamental question
remains how much do they matter how much

00:14:50.999 --> 00:14:51.009
remains how much do they matter how much
 

00:14:51.009 --> 00:14:52.829
remains how much do they matter how much
should you care and the answer is you

00:14:52.829 --> 00:14:52.839
should you care and the answer is you
 

00:14:52.839 --> 00:14:54.809
should you care and the answer is you
should really care a lot we look at the

00:14:54.809 --> 00:14:54.819
should really care a lot we look at the
 

00:14:54.819 --> 00:14:56.579
should really care a lot we look at the
apps that have a high and low crush

00:14:56.579 --> 00:14:56.589
apps that have a high and low crush
 

00:14:56.589 --> 00:14:57.690
apps that have a high and low crush
weights in play

00:14:57.690 --> 00:14:57.700
weights in play
 

00:14:57.700 --> 00:15:00.530
weights in play
high crash rate more than 5% of trash

00:15:00.530 --> 00:15:00.540
high crash rate more than 5% of trash
 

00:15:00.540 --> 00:15:03.690
high crash rate more than 5% of trash
users experiencing a crash or an arcade

00:15:03.690 --> 00:15:03.700
users experiencing a crash or an arcade
 

00:15:03.700 --> 00:15:07.080
users experiencing a crash or an arcade
date and what we find is that these apps

00:15:07.080 --> 00:15:07.090
date and what we find is that these apps
 

00:15:07.090 --> 00:15:09.660
date and what we find is that these apps
are 30% more uninstallation

00:15:09.660 --> 00:15:09.670
are 30% more uninstallation
 

00:15:09.670 --> 00:15:11.580
are 30% more uninstallation
in the first day than apps that have a

00:15:11.580 --> 00:15:11.590
in the first day than apps that have a
 

00:15:11.590 --> 00:15:14.190
in the first day than apps that have a
low pressure rate less than 1% so the

00:15:14.190 --> 00:15:14.200
low pressure rate less than 1% so the
 

00:15:14.200 --> 00:15:16.620
low pressure rate less than 1% so the
message is pretty simple here is find

00:15:16.620 --> 00:15:16.630
message is pretty simple here is find
 

00:15:16.630 --> 00:15:18.150
message is pretty simple here is find
Europe and they include experience a

00:15:18.150 --> 00:15:18.160
Europe and they include experience a
 

00:15:18.160 --> 00:15:20.070
Europe and they include experience a
crush most likely they will leave as

00:15:20.070 --> 00:15:20.080
crush most likely they will leave as
 

00:15:20.080 --> 00:15:22.200
crush most likely they will leave as
soon as they found it I will now hand

00:15:22.200 --> 00:15:22.210
soon as they found it I will now hand
 

00:15:22.210 --> 00:15:25.130
soon as they found it I will now hand
over to Lydia for battery and rendering

00:15:25.130 --> 00:15:25.140
over to Lydia for battery and rendering
 

00:15:25.140 --> 00:15:29.010
over to Lydia for battery and rendering
thanks Ricardo Android users care a lot

00:15:29.010 --> 00:15:29.020
thanks Ricardo Android users care a lot
 

00:15:29.020 --> 00:15:31.590
thanks Ricardo Android users care a lot
about battery life in fact making it

00:15:31.590 --> 00:15:31.600
about battery life in fact making it
 

00:15:31.600 --> 00:15:32.700
about battery life in fact making it
through the day without needing to

00:15:32.700 --> 00:15:32.710
through the day without needing to
 

00:15:32.710 --> 00:15:34.590
through the day without needing to
charge their device is a top concern for

00:15:34.590 --> 00:15:34.600
charge their device is a top concern for
 

00:15:34.600 --> 00:15:37.080
charge their device is a top concern for
Android users because of this the

00:15:37.080 --> 00:15:37.090
Android users because of this the
 

00:15:37.090 --> 00:15:38.640
Android users because of this the
Android platform has spent a lot of time

00:15:38.640 --> 00:15:38.650
Android platform has spent a lot of time
 

00:15:38.650 --> 00:15:41.190
Android platform has spent a lot of time
building features to save battery one of

00:15:41.190 --> 00:15:41.200
building features to save battery one of
 

00:15:41.200 --> 00:15:42.780
building features to save battery one of
the number one ways we can conserve

00:15:42.780 --> 00:15:42.790
the number one ways we can conserve
 

00:15:42.790 --> 00:15:45.360
the number one ways we can conserve
power and battery power is by putting

00:15:45.360 --> 00:15:45.370
power and battery power is by putting
 

00:15:45.370 --> 00:15:47.370
power and battery power is by putting
the device into deep sleep when it's

00:15:47.370 --> 00:15:47.380
the device into deep sleep when it's
 

00:15:47.380 --> 00:15:50.010
the device into deep sleep when it's
idle this means powering down the CPU

00:15:50.010 --> 00:15:50.020
idle this means powering down the CPU
 

00:15:50.020 --> 00:15:52.080
idle this means powering down the CPU
radio and other components that would

00:15:52.080 --> 00:15:52.090
radio and other components that would
 

00:15:52.090 --> 00:15:55.770
radio and other components that would
otherwise drain power however you as

00:15:55.770 --> 00:15:55.780
otherwise drain power however you as
 

00:15:55.780 --> 00:15:57.870
otherwise drain power however you as
application developers can prevent the

00:15:57.870 --> 00:15:57.880
application developers can prevent the
 

00:15:57.880 --> 00:15:59.730
application developers can prevent the
diet device from going into a deep sleep

00:15:59.730 --> 00:15:59.740
diet device from going into a deep sleep
 

00:15:59.740 --> 00:16:03.210
diet device from going into a deep sleep
and conserving power one of the ways you

00:16:03.210 --> 00:16:03.220
and conserving power one of the ways you
 

00:16:03.220 --> 00:16:04.620
and conserving power one of the ways you
can do this is through wakelocks

00:16:04.620 --> 00:16:04.630
can do this is through wakelocks
 

00:16:04.630 --> 00:16:07.590
can do this is through wakelocks
way clocks keep the device awake so that

00:16:07.590 --> 00:16:07.600
way clocks keep the device awake so that
 

00:16:07.600 --> 00:16:09.570
way clocks keep the device awake so that
it can perform an activity on behalf of

00:16:09.570 --> 00:16:09.580
it can perform an activity on behalf of
 

00:16:09.580 --> 00:16:11.610
it can perform an activity on behalf of
your application there's a couple

00:16:11.610 --> 00:16:11.620
your application there's a couple
 

00:16:11.620 --> 00:16:13.860
your application there's a couple
different types of way clocks the first

00:16:13.860 --> 00:16:13.870
different types of way clocks the first
 

00:16:13.870 --> 00:16:16.020
different types of way clocks the first
is a full-weight clock this keeps the

00:16:16.020 --> 00:16:16.030
is a full-weight clock this keeps the
 

00:16:16.030 --> 00:16:18.750
is a full-weight clock this keeps the
screen on and this is usually used by a

00:16:18.750 --> 00:16:18.760
screen on and this is usually used by a
 

00:16:18.760 --> 00:16:21.420
screen on and this is usually used by a
video app or a gaming app because the

00:16:21.420 --> 00:16:21.430
video app or a gaming app because the
 

00:16:21.430 --> 00:16:23.220
video app or a gaming app because the
screen is on the user is going to be

00:16:23.220 --> 00:16:23.230
screen is on the user is going to be
 

00:16:23.230 --> 00:16:25.080
screen is on the user is going to be
aware that the way clock is being held

00:16:25.080 --> 00:16:25.090
aware that the way clock is being held
 

00:16:25.090 --> 00:16:26.910
aware that the way clock is being held
and in full control of powering down the

00:16:26.910 --> 00:16:26.920
and in full control of powering down the
 

00:16:26.920 --> 00:16:29.370
and in full control of powering down the
app and saving their battery there's

00:16:29.370 --> 00:16:29.380
app and saving their battery there's
 

00:16:29.380 --> 00:16:30.930
app and saving their battery there's
another kind of way clock though this is

00:16:30.930 --> 00:16:30.940
another kind of way clock though this is
 

00:16:30.940 --> 00:16:33.660
another kind of way clock though this is
called a partial way clock a partial way

00:16:33.660 --> 00:16:33.670
called a partial way clock a partial way
 

00:16:33.670 --> 00:16:36.540
called a partial way clock a partial way
clock doesn't keep the screen on because

00:16:36.540 --> 00:16:36.550
clock doesn't keep the screen on because
 

00:16:36.550 --> 00:16:38.190
clock doesn't keep the screen on because
of this the user doesn't know that the

00:16:38.190 --> 00:16:38.200
of this the user doesn't know that the
 

00:16:38.200 --> 00:16:40.260
of this the user doesn't know that the
the way clock is being held and so if a

00:16:40.260 --> 00:16:40.270
the way clock is being held and so if a
 

00:16:40.270 --> 00:16:42.090
the way clock is being held and so if a
wakelock a partial way clock is held for

00:16:42.090 --> 00:16:42.100
wakelock a partial way clock is held for
 

00:16:42.100 --> 00:16:44.070
wakelock a partial way clock is held for
too long if you can can become a silent

00:16:44.070 --> 00:16:44.080
too long if you can can become a silent
 

00:16:44.080 --> 00:16:45.920
too long if you can can become a silent
and deadly killer of battery power

00:16:45.920 --> 00:16:45.930
and deadly killer of battery power
 

00:16:45.930 --> 00:16:48.000
and deadly killer of battery power
because of this we defined a bad

00:16:48.000 --> 00:16:48.010
because of this we defined a bad
 

00:16:48.010 --> 00:16:49.830
because of this we defined a bad
behavior around stuck partial way clocks

00:16:49.830 --> 00:16:49.840
behavior around stuck partial way clocks
 

00:16:49.840 --> 00:16:52.410
behavior around stuck partial way clocks
we define a suck partial way clock as

00:16:52.410 --> 00:16:52.420
we define a suck partial way clock as
 

00:16:52.420 --> 00:16:54.270
we define a suck partial way clock as
one that's held for over an hour

00:16:54.270 --> 00:16:54.280
one that's held for over an hour
 

00:16:54.280 --> 00:16:58.940
one that's held for over an hour
by significant percentage of your users

00:16:58.940 --> 00:16:58.950
 
 

00:16:58.950 --> 00:17:02.010
 
the Android vitals dashboard will show

00:17:02.010 --> 00:17:02.020
the Android vitals dashboard will show
 

00:17:02.020 --> 00:17:03.750
the Android vitals dashboard will show
you how you're using and possibly

00:17:03.750 --> 00:17:03.760
you how you're using and possibly
 

00:17:03.760 --> 00:17:06.420
you how you're using and possibly
abusing way clocks it will show you the

00:17:06.420 --> 00:17:06.430
abusing way clocks it will show you the
 

00:17:06.430 --> 00:17:08.460
abusing way clocks it will show you the
distribution of how long wait clocks are

00:17:08.460 --> 00:17:08.470
distribution of how long wait clocks are
 

00:17:08.470 --> 00:17:10.100
distribution of how long wait clocks are
being held by each version of your

00:17:10.100 --> 00:17:10.110
being held by each version of your
 

00:17:10.110 --> 00:17:12.829
being held by each version of your
in this example you can see the majority

00:17:12.829 --> 00:17:12.839
in this example you can see the majority
 

00:17:12.839 --> 00:17:14.870
in this example you can see the majority
of wake locks are being held for a

00:17:14.870 --> 00:17:14.880
of wake locks are being held for a
 

00:17:14.880 --> 00:17:16.669
of wake locks are being held for a
minute or less which is ideal from a

00:17:16.669 --> 00:17:16.679
minute or less which is ideal from a
 

00:17:16.679 --> 00:17:19.250
minute or less which is ideal from a
power saving perspective however there's

00:17:19.250 --> 00:17:19.260
power saving perspective however there's
 

00:17:19.260 --> 00:17:21.019
power saving perspective however there's
a long tail of wake locks that are being

00:17:21.019 --> 00:17:21.029
a long tail of wake locks that are being
 

00:17:21.029 --> 00:17:23.029
a long tail of wake locks that are being
held for over an hour which meet our

00:17:23.029 --> 00:17:23.039
held for over an hour which meet our
 

00:17:23.039 --> 00:17:25.370
held for over an hour which meet our
definition of bad behavior or stuck wake

00:17:25.370 --> 00:17:25.380
definition of bad behavior or stuck wake
 

00:17:25.380 --> 00:17:27.019
definition of bad behavior or stuck wake
locks so you can see that we flagged

00:17:27.019 --> 00:17:27.029
locks so you can see that we flagged
 

00:17:27.029 --> 00:17:29.419
locks so you can see that we flagged
this app for this bad behavior in the

00:17:29.419 --> 00:17:29.429
this app for this bad behavior in the
 

00:17:29.429 --> 00:17:35.299
this app for this bad behavior in the
Android vitals dashboard in the Android

00:17:35.299 --> 00:17:35.309
Android vitals dashboard in the Android
 

00:17:35.309 --> 00:17:36.799
Android vitals dashboard in the Android
vitals dashboard we'll give you the

00:17:36.799 --> 00:17:36.809
vitals dashboard we'll give you the
 

00:17:36.809 --> 00:17:38.570
vitals dashboard we'll give you the
information you need to debug your stuck

00:17:38.570 --> 00:17:38.580
information you need to debug your stuck
 

00:17:38.580 --> 00:17:41.360
information you need to debug your stuck
wake lock most importantly the name of

00:17:41.360 --> 00:17:41.370
wake lock most importantly the name of
 

00:17:41.370 --> 00:17:44.360
wake lock most importantly the name of
the wake lock in order to prevent to

00:17:44.360 --> 00:17:44.370
the wake lock in order to prevent to
 

00:17:44.370 --> 00:17:47.389
the wake lock in order to prevent to
protect user privacy we will only show

00:17:47.389 --> 00:17:47.399
protect user privacy we will only show
 

00:17:47.399 --> 00:17:49.730
protect user privacy we will only show
wakelock names if it's been used across

00:17:49.730 --> 00:17:49.740
wakelock names if it's been used across
 

00:17:49.740 --> 00:17:52.399
wakelock names if it's been used across
many sessions this will prevent the

00:17:52.399 --> 00:17:52.409
many sessions this will prevent the
 

00:17:52.409 --> 00:17:53.600
many sessions this will prevent the
leaking of any personally identifiable

00:17:53.600 --> 00:17:53.610
leaking of any personally identifiable
 

00:17:53.610 --> 00:17:56.899
leaking of any personally identifiable
information because of this I encourage

00:17:56.899 --> 00:17:56.909
information because of this I encourage
 

00:17:56.909 --> 00:18:00.590
information because of this I encourage
you to use standard wake lock names for

00:18:00.590 --> 00:18:00.600
you to use standard wake lock names for
 

00:18:00.600 --> 00:18:01.879
you to use standard wake lock names for
each distinct wake lock in your

00:18:01.879 --> 00:18:01.889
each distinct wake lock in your
 

00:18:01.889 --> 00:18:03.740
each distinct wake lock in your
application in order for them to be

00:18:03.740 --> 00:18:03.750
application in order for them to be
 

00:18:03.750 --> 00:18:05.389
application in order for them to be
debuggable in case they become stuck

00:18:05.389 --> 00:18:05.399
debuggable in case they become stuck
 

00:18:05.399 --> 00:18:10.430
debuggable in case they become stuck
wake locks the reason that we're

00:18:10.430 --> 00:18:10.440
wake locks the reason that we're
 

00:18:10.440 --> 00:18:12.230
wake locks the reason that we're
highlighting stuck wake locks in the

00:18:12.230 --> 00:18:12.240
highlighting stuck wake locks in the
 

00:18:12.240 --> 00:18:14.029
highlighting stuck wake locks in the
vitals dashboard is because of just how

00:18:14.029 --> 00:18:14.039
vitals dashboard is because of just how
 

00:18:14.039 --> 00:18:17.570
vitals dashboard is because of just how
dangerous they are I mentioned in

00:18:17.570 --> 00:18:17.580
dangerous they are I mentioned in
 

00:18:17.580 --> 00:18:19.340
dangerous they are I mentioned in
Android we care a lot about conserving

00:18:19.340 --> 00:18:19.350
Android we care a lot about conserving
 

00:18:19.350 --> 00:18:22.009
Android we care a lot about conserving
power so every day we collect reports

00:18:22.009 --> 00:18:22.019
power so every day we collect reports
 

00:18:22.019 --> 00:18:24.169
power so every day we collect reports
from internal Google users who have

00:18:24.169 --> 00:18:24.179
from internal Google users who have
 

00:18:24.179 --> 00:18:26.930
from internal Google users who have
experienced a bad battery day a bad

00:18:26.930 --> 00:18:26.940
experienced a bad battery day a bad
 

00:18:26.940 --> 00:18:29.570
experienced a bad battery day a bad
battery day is one where your device the

00:18:29.570 --> 00:18:29.580
battery day is one where your device the
 

00:18:29.580 --> 00:18:30.919
battery day is one where your device the
battery doesn't last as long as it

00:18:30.919 --> 00:18:30.929
battery doesn't last as long as it
 

00:18:30.929 --> 00:18:32.629
battery doesn't last as long as it
usually does or as long as you expect it

00:18:32.629 --> 00:18:32.639
usually does or as long as you expect it
 

00:18:32.639 --> 00:18:34.580
usually does or as long as you expect it
to do so they'll send us these reports

00:18:34.580 --> 00:18:34.590
to do so they'll send us these reports
 

00:18:34.590 --> 00:18:37.190
to do so they'll send us these reports
we did some analysis across a two month

00:18:37.190 --> 00:18:37.200
we did some analysis across a two month
 

00:18:37.200 --> 00:18:39.049
we did some analysis across a two month
period of all these reports last summer

00:18:39.049 --> 00:18:39.059
period of all these reports last summer
 

00:18:39.059 --> 00:18:41.269
period of all these reports last summer
and we found that 30% of these bad

00:18:41.269 --> 00:18:41.279
and we found that 30% of these bad
 

00:18:41.279 --> 00:18:43.340
and we found that 30% of these bad
battery days were caused by stuck

00:18:43.340 --> 00:18:43.350
battery days were caused by stuck
 

00:18:43.350 --> 00:18:46.190
battery days were caused by stuck
wakelocks I think this highlights really

00:18:46.190 --> 00:18:46.200
wakelocks I think this highlights really
 

00:18:46.200 --> 00:18:49.100
wakelocks I think this highlights really
how dangerous wake locks are they cause

00:18:49.100 --> 00:18:49.110
how dangerous wake locks are they cause
 

00:18:49.110 --> 00:18:51.009
how dangerous wake locks are they cause
real problems for real users

00:18:51.009 --> 00:18:51.019
real problems for real users
 

00:18:51.019 --> 00:18:53.840
real problems for real users
because of this I encourage you to avoid

00:18:53.840 --> 00:18:53.850
because of this I encourage you to avoid
 

00:18:53.850 --> 00:18:58.669
because of this I encourage you to avoid
using wake locks entirely wake locks

00:18:58.669 --> 00:18:58.679
using wake locks entirely wake locks
 

00:18:58.679 --> 00:19:00.200
using wake locks entirely wake locks
were introduced in the early days of the

00:19:00.200 --> 00:19:00.210
were introduced in the early days of the
 

00:19:00.210 --> 00:19:02.659
were introduced in the early days of the
Android platform and since then many of

00:19:02.659 --> 00:19:02.669
Android platform and since then many of
 

00:19:02.669 --> 00:19:04.370
Android platform and since then many of
the use cases for which you needed a

00:19:04.370 --> 00:19:04.380
the use cases for which you needed a
 

00:19:04.380 --> 00:19:06.350
the use cases for which you needed a
wake lock you no longer need a wake lock

00:19:06.350 --> 00:19:06.360
wake lock you no longer need a wake lock
 

00:19:06.360 --> 00:19:09.080
wake lock you no longer need a wake lock
for for example if you're doing a

00:19:09.080 --> 00:19:09.090
for for example if you're doing a
 

00:19:09.090 --> 00:19:11.090
for for example if you're doing a
long-running download you can use the

00:19:11.090 --> 00:19:11.100
long-running download you can use the
 

00:19:11.100 --> 00:19:13.610
long-running download you can use the
download manager instead if you're

00:19:13.610 --> 00:19:13.620
download manager instead if you're
 

00:19:13.620 --> 00:19:15.110
download manager instead if you're
synchronizing data with an external

00:19:15.110 --> 00:19:15.120
synchronizing data with an external
 

00:19:15.120 --> 00:19:18.260
synchronizing data with an external
server use a sync adapter instead if you

00:19:18.260 --> 00:19:18.270
server use a sync adapter instead if you
 

00:19:18.270 --> 00:19:20.840
server use a sync adapter instead if you
need to run a background task use the

00:19:20.840 --> 00:19:20.850
need to run a background task use the
 

00:19:20.850 --> 00:19:23.629
need to run a background task use the
job dispatcher and if you're holding a

00:19:23.629 --> 00:19:23.639
job dispatcher and if you're holding a
 

00:19:23.639 --> 00:19:23.840
job dispatcher and if you're holding a
way

00:19:23.840 --> 00:19:23.850
way
 

00:19:23.850 --> 00:19:25.760
way
clock so that you can process an intent

00:19:25.760 --> 00:19:25.770
clock so that you can process an intent
 

00:19:25.770 --> 00:19:28.010
clock so that you can process an intent
before the device goes to sleep use the

00:19:28.010 --> 00:19:28.020
before the device goes to sleep use the
 

00:19:28.020 --> 00:19:29.900
before the device goes to sleep use the
new job intent services which is being

00:19:29.900 --> 00:19:29.910
new job intent services which is being
 

00:19:29.910 --> 00:19:32.779
new job intent services which is being
released in the support Lib v26 that's

00:19:32.779 --> 00:19:32.789
released in the support Lib v26 that's
 

00:19:32.789 --> 00:19:35.450
released in the support Lib v26 that's
coming out later this quarter both job

00:19:35.450 --> 00:19:35.460
coming out later this quarter both job
 

00:19:35.460 --> 00:19:37.400
coming out later this quarter both job
dispatcher and the job intent service

00:19:37.400 --> 00:19:37.410
dispatcher and the job intent service
 

00:19:37.410 --> 00:19:39.919
dispatcher and the job intent service
are compatible with the background

00:19:39.919 --> 00:19:39.929
are compatible with the background
 

00:19:39.929 --> 00:19:41.150
are compatible with the background
restrictions that we're going to be

00:19:41.150 --> 00:19:41.160
restrictions that we're going to be
 

00:19:41.160 --> 00:19:43.490
restrictions that we're going to be
rolling out and oh so it's a win-win you

00:19:43.490 --> 00:19:43.500
rolling out and oh so it's a win-win you
 

00:19:43.500 --> 00:19:44.630
rolling out and oh so it's a win-win you
get a background check

00:19:44.630 --> 00:19:44.640
get a background check
 

00:19:44.640 --> 00:19:46.400
get a background check
background restrictions compatible

00:19:46.400 --> 00:19:46.410
background restrictions compatible
 

00:19:46.410 --> 00:19:49.010
background restrictions compatible
service and you don't get any stuck way

00:19:49.010 --> 00:19:49.020
service and you don't get any stuck way
 

00:19:49.020 --> 00:19:51.950
service and you don't get any stuck way
clocks so definitely check out job

00:19:51.950 --> 00:19:51.960
clocks so definitely check out job
 

00:19:51.960 --> 00:19:58.130
clocks so definitely check out job
intent services in support lid b-26 if

00:19:58.130 --> 00:19:58.140
intent services in support lid b-26 if
 

00:19:58.140 --> 00:19:59.510
intent services in support lid b-26 if
you're unable to use any of these

00:19:59.510 --> 00:19:59.520
you're unable to use any of these
 

00:19:59.520 --> 00:20:00.980
you're unable to use any of these
alternatives and you need to use a

00:20:00.980 --> 00:20:00.990
alternatives and you need to use a
 

00:20:00.990 --> 00:20:04.279
alternatives and you need to use a
wakelock in your application i'll rehash

00:20:04.279 --> 00:20:04.289
wakelock in your application i'll rehash
 

00:20:04.289 --> 00:20:06.080
wakelock in your application i'll rehash
some of the fundamentals from cs101

00:20:06.080 --> 00:20:06.090
some of the fundamentals from cs101
 

00:20:06.090 --> 00:20:07.940
some of the fundamentals from cs101
because they're just so dangerous aiya

00:20:07.940 --> 00:20:07.950
because they're just so dangerous aiya
 

00:20:07.950 --> 00:20:10.549
because they're just so dangerous aiya
I'll spend some time rehashing first it

00:20:10.549 --> 00:20:10.559
I'll spend some time rehashing first it
 

00:20:10.559 --> 00:20:12.110
I'll spend some time rehashing first it
keep the logic around your way clock

00:20:12.110 --> 00:20:12.120
keep the logic around your way clock
 

00:20:12.120 --> 00:20:14.419
keep the logic around your way clock
extremely simple because any errors in

00:20:14.419 --> 00:20:14.429
extremely simple because any errors in
 

00:20:14.429 --> 00:20:15.529
extremely simple because any errors in
the logic could lead to them getting

00:20:15.529 --> 00:20:15.539
the logic could lead to them getting
 

00:20:15.539 --> 00:20:18.590
the logic could lead to them getting
stuck second try to do as little as

00:20:18.590 --> 00:20:18.600
stuck second try to do as little as
 

00:20:18.600 --> 00:20:19.880
stuck second try to do as little as
possible while you're holding this way

00:20:19.880 --> 00:20:19.890
possible while you're holding this way
 

00:20:19.890 --> 00:20:22.279
possible while you're holding this way
clock so that it doesn't you know need

00:20:22.279 --> 00:20:22.289
clock so that it doesn't you know need
 

00:20:22.289 --> 00:20:23.930
clock so that it doesn't you know need
to run for an hour or more to do

00:20:23.930 --> 00:20:23.940
to run for an hour or more to do
 

00:20:23.940 --> 00:20:25.340
to run for an hour or more to do
whatever operation you're holding it for

00:20:25.340 --> 00:20:25.350
whatever operation you're holding it for
 

00:20:25.350 --> 00:20:28.039
whatever operation you're holding it for
and finally use defensive air handling

00:20:28.039 --> 00:20:28.049
and finally use defensive air handling
 

00:20:28.049 --> 00:20:30.799
and finally use defensive air handling
you can see in this example here if I

00:20:30.799 --> 00:20:30.809
you can see in this example here if I
 

00:20:30.809 --> 00:20:33.140
you can see in this example here if I
hadn't defended against my clean up task

00:20:33.140 --> 00:20:33.150
hadn't defended against my clean up task
 

00:20:33.150 --> 00:20:35.510
hadn't defended against my clean up task
throwing an exception the release method

00:20:35.510 --> 00:20:35.520
throwing an exception the release method
 

00:20:35.520 --> 00:20:36.860
throwing an exception the release method
on my way clock would never have gotten

00:20:36.860 --> 00:20:36.870
on my way clock would never have gotten
 

00:20:36.870 --> 00:20:39.080
on my way clock would never have gotten
called and some poor user or perhaps

00:20:39.080 --> 00:20:39.090
called and some poor user or perhaps
 

00:20:39.090 --> 00:20:41.029
called and some poor user or perhaps
millions of users would end up with dead

00:20:41.029 --> 00:20:41.039
millions of users would end up with dead
 

00:20:41.039 --> 00:20:47.570
millions of users would end up with dead
sound batteries so if you follow all my

00:20:47.570 --> 00:20:47.580
sound batteries so if you follow all my
 

00:20:47.580 --> 00:20:49.880
sound batteries so if you follow all my
advice and are able to not use any way

00:20:49.880 --> 00:20:49.890
advice and are able to not use any way
 

00:20:49.890 --> 00:20:52.430
advice and are able to not use any way
clocks in your application I still want

00:20:52.430 --> 00:20:52.440
clocks in your application I still want
 

00:20:52.440 --> 00:20:53.960
clocks in your application I still want
you to go check out the android vitals

00:20:53.960 --> 00:20:53.970
you to go check out the android vitals
 

00:20:53.970 --> 00:20:56.029
you to go check out the android vitals
dashboard for stuck way clocks because

00:20:56.029 --> 00:20:56.039
dashboard for stuck way clocks because
 

00:20:56.039 --> 00:20:57.770
dashboard for stuck way clocks because
it's possible that services you depend

00:20:57.770 --> 00:20:57.780
it's possible that services you depend
 

00:20:57.780 --> 00:21:00.970
it's possible that services you depend
on are using way clocks under the covers

00:21:00.970 --> 00:21:00.980
on are using way clocks under the covers
 

00:21:00.980 --> 00:21:03.620
on are using way clocks under the covers
for example the network location

00:21:03.620 --> 00:21:03.630
for example the network location
 

00:21:03.630 --> 00:21:05.659
for example the network location
provider way clock in this case it's

00:21:05.659 --> 00:21:05.669
provider way clock in this case it's
 

00:21:05.669 --> 00:21:07.279
provider way clock in this case it's
used by millions of apps to find a

00:21:07.279 --> 00:21:07.289
used by millions of apps to find a
 

00:21:07.289 --> 00:21:10.130
used by millions of apps to find a
user's location if you're using it too

00:21:10.130 --> 00:21:10.140
user's location if you're using it too
 

00:21:10.140 --> 00:21:12.620
user's location if you're using it too
aggressively it could hold my clocks for

00:21:12.620 --> 00:21:12.630
aggressively it could hold my clocks for
 

00:21:12.630 --> 00:21:14.240
aggressively it could hold my clocks for
an extended period of time that becomes

00:21:14.240 --> 00:21:14.250
an extended period of time that becomes
 

00:21:14.250 --> 00:21:17.060
an extended period of time that becomes
stuck and you get flagged for that so in

00:21:17.060 --> 00:21:17.070
stuck and you get flagged for that so in
 

00:21:17.070 --> 00:21:18.320
stuck and you get flagged for that so in
this case you would fix that subway

00:21:18.320 --> 00:21:18.330
this case you would fix that subway
 

00:21:18.330 --> 00:21:20.180
this case you would fix that subway
clock by throttling back the amount of

00:21:20.180 --> 00:21:20.190
clock by throttling back the amount of
 

00:21:20.190 --> 00:21:21.799
clock by throttling back the amount of
calls you make to this service so

00:21:21.799 --> 00:21:21.809
calls you make to this service so
 

00:21:21.809 --> 00:21:23.299
calls you make to this service so
definitely check out this tab even if

00:21:23.299 --> 00:21:23.309
definitely check out this tab even if
 

00:21:23.309 --> 00:21:24.649
definitely check out this tab even if
you're not using wait cloth so you can

00:21:24.649 --> 00:21:24.659
you're not using wait cloth so you can
 

00:21:24.659 --> 00:21:26.480
you're not using wait cloth so you can
tune how you use the services under the

00:21:26.480 --> 00:21:26.490
tune how you use the services under the
 

00:21:26.490 --> 00:21:30.970
tune how you use the services under the
covers that might be using wait clocks

00:21:30.970 --> 00:21:30.980
 
 

00:21:30.980 --> 00:21:33.200
 
the second way you as an application

00:21:33.200 --> 00:21:33.210
the second way you as an application
 

00:21:33.210 --> 00:21:35.060
the second way you as an application
developer can prevent the phone from

00:21:35.060 --> 00:21:35.070
developer can prevent the phone from
 

00:21:35.070 --> 00:21:36.740
developer can prevent the phone from
going into a deep sleep and saving power

00:21:36.740 --> 00:21:36.750
going into a deep sleep and saving power
 

00:21:36.750 --> 00:21:37.470
going into a deep sleep and saving power
for user

00:21:37.470 --> 00:21:37.480
for user
 

00:21:37.480 --> 00:21:40.019
for user
is through the use of wake up wait

00:21:40.019 --> 00:21:40.029
is through the use of wake up wait
 

00:21:40.029 --> 00:21:42.029
is through the use of wake up wait
that's our alarms that you can fire

00:21:42.029 --> 00:21:42.039
that's our alarms that you can fire
 

00:21:42.039 --> 00:21:43.320
that's our alarms that you can fire
outside the lifetime of your

00:21:43.320 --> 00:21:43.330
outside the lifetime of your
 

00:21:43.330 --> 00:21:45.720
outside the lifetime of your
applications to wake the device up to do

00:21:45.720 --> 00:21:45.730
applications to wake the device up to do
 

00:21:45.730 --> 00:21:47.159
applications to wake the device up to do
some sort of task on behalf of your

00:21:47.159 --> 00:21:47.169
some sort of task on behalf of your
 

00:21:47.169 --> 00:21:49.980
some sort of task on behalf of your
application if you do this excessively

00:21:49.980 --> 00:21:49.990
application if you do this excessively
 

00:21:49.990 --> 00:21:52.169
application if you do this excessively
the device won't be able to rest and

00:21:52.169 --> 00:21:52.179
the device won't be able to rest and
 

00:21:52.179 --> 00:21:53.970
the device won't be able to rest and
you'll end up draining a lot of power so

00:21:53.970 --> 00:21:53.980
you'll end up draining a lot of power so
 

00:21:53.980 --> 00:21:55.590
you'll end up draining a lot of power so
we've identified a bad behavior of

00:21:55.590 --> 00:21:55.600
we've identified a bad behavior of
 

00:21:55.600 --> 00:21:58.080
we've identified a bad behavior of
excessive wakeup we define frequent app

00:21:58.080 --> 00:21:58.090
excessive wakeup we define frequent app
 

00:21:58.090 --> 00:22:00.450
excessive wakeup we define frequent app
wakeup as a percentage of users who are

00:22:00.450 --> 00:22:00.460
wakeup as a percentage of users who are
 

00:22:00.460 --> 00:22:02.100
wakeup as a percentage of users who are
impacted by wake up's that occur more

00:22:02.100 --> 00:22:02.110
impacted by wake up's that occur more
 

00:22:02.110 --> 00:22:08.490
impacted by wake up's that occur more
than 10 times per hour just like wake

00:22:08.490 --> 00:22:08.500
than 10 times per hour just like wake
 

00:22:08.500 --> 00:22:10.590
than 10 times per hour just like wake
locks you can get a full report on the

00:22:10.590 --> 00:22:10.600
locks you can get a full report on the
 

00:22:10.600 --> 00:22:12.779
locks you can get a full report on the
wakeup that you're using or possibly

00:22:12.779 --> 00:22:12.789
wakeup that you're using or possibly
 

00:22:12.789 --> 00:22:15.240
wakeup that you're using or possibly
abusing in the vitals dashboard and just

00:22:15.240 --> 00:22:15.250
abusing in the vitals dashboard and just
 

00:22:15.250 --> 00:22:16.440
abusing in the vitals dashboard and just
like wake locks you'll see the

00:22:16.440 --> 00:22:16.450
like wake locks you'll see the
 

00:22:16.450 --> 00:22:18.570
like wake locks you'll see the
distribution of the number of wake up's

00:22:18.570 --> 00:22:18.580
distribution of the number of wake up's
 

00:22:18.580 --> 00:22:20.669
distribution of the number of wake up's
across sessions and you'll be able to

00:22:20.669 --> 00:22:20.679
across sessions and you'll be able to
 

00:22:20.679 --> 00:22:22.379
across sessions and you'll be able to
see the names of each wake up so you can

00:22:22.379 --> 00:22:22.389
see the names of each wake up so you can
 

00:22:22.389 --> 00:22:24.509
see the names of each wake up so you can
debug any frequent wakeup issues and

00:22:24.509 --> 00:22:24.519
debug any frequent wakeup issues and
 

00:22:24.519 --> 00:22:26.580
debug any frequent wakeup issues and
just like wake locks will only show the

00:22:26.580 --> 00:22:26.590
just like wake locks will only show the
 

00:22:26.590 --> 00:22:29.039
just like wake locks will only show the
wakeup name if it's seen across a lot of

00:22:29.039 --> 00:22:29.049
wakeup name if it's seen across a lot of
 

00:22:29.049 --> 00:22:31.019
wakeup name if it's seen across a lot of
sessions so that we don't leak any

00:22:31.019 --> 00:22:31.029
sessions so that we don't leak any
 

00:22:31.029 --> 00:22:33.720
sessions so that we don't leak any
personal identifying information so

00:22:33.720 --> 00:22:33.730
personal identifying information so
 

00:22:33.730 --> 00:22:35.820
personal identifying information so
again be sure to use a standard name for

00:22:35.820 --> 00:22:35.830
again be sure to use a standard name for
 

00:22:35.830 --> 00:22:42.539
again be sure to use a standard name for
all wake up's a lot of people use the

00:22:42.539 --> 00:22:42.549
all wake up's a lot of people use the
 

00:22:42.549 --> 00:22:44.789
all wake up's a lot of people use the
pattern of firing a wake up to get the

00:22:44.789 --> 00:22:44.799
pattern of firing a wake up to get the
 

00:22:44.799 --> 00:22:46.289
pattern of firing a wake up to get the
device awake and then holding a wake

00:22:46.289 --> 00:22:46.299
device awake and then holding a wake
 

00:22:46.299 --> 00:22:48.240
device awake and then holding a wake
lock to keep the device awake so that

00:22:48.240 --> 00:22:48.250
lock to keep the device awake so that
 

00:22:48.250 --> 00:22:50.639
lock to keep the device awake so that
you can perform some sort of task this

00:22:50.639 --> 00:22:50.649
you can perform some sort of task this
 

00:22:50.649 --> 00:22:52.590
you can perform some sort of task this
is a double whammy of possible bad

00:22:52.590 --> 00:22:52.600
is a double whammy of possible bad
 

00:22:52.600 --> 00:22:54.120
is a double whammy of possible bad
behavior because you might be waking up

00:22:54.120 --> 00:22:54.130
behavior because you might be waking up
 

00:22:54.130 --> 00:22:56.070
behavior because you might be waking up
the device too frequently and your wake

00:22:56.070 --> 00:22:56.080
the device too frequently and your wake
 

00:22:56.080 --> 00:22:57.389
the device too frequently and your wake
lock that you're holding may get stuck

00:22:57.389 --> 00:22:57.399
lock that you're holding may get stuck
 

00:22:57.399 --> 00:23:00.269
lock that you're holding may get stuck
so let's get rid of both of these a much

00:23:00.269 --> 00:23:00.279
so let's get rid of both of these a much
 

00:23:00.279 --> 00:23:02.549
so let's get rid of both of these a much
better alternative to wake up's and wake

00:23:02.549 --> 00:23:02.559
better alternative to wake up's and wake
 

00:23:02.559 --> 00:23:04.879
better alternative to wake up's and wake
locks is the fire based job dispatcher

00:23:04.879 --> 00:23:04.889
locks is the fire based job dispatcher
 

00:23:04.889 --> 00:23:07.440
locks is the fire based job dispatcher
the Android platform itself does have a

00:23:07.440 --> 00:23:07.450
the Android platform itself does have a
 

00:23:07.450 --> 00:23:09.659
the Android platform itself does have a
job scheduler but I encourage you to use

00:23:09.659 --> 00:23:09.669
job scheduler but I encourage you to use
 

00:23:09.669 --> 00:23:11.519
job scheduler but I encourage you to use
the firebase job dispatcher because of

00:23:11.519 --> 00:23:11.529
the firebase job dispatcher because of
 

00:23:11.529 --> 00:23:14.610
the firebase job dispatcher because of
its backwards compatibility in the

00:23:14.610 --> 00:23:14.620
its backwards compatibility in the
 

00:23:14.620 --> 00:23:16.980
its backwards compatibility in the
firebase job dispatcher you can set up a

00:23:16.980 --> 00:23:16.990
firebase job dispatcher you can set up a
 

00:23:16.990 --> 00:23:19.350
firebase job dispatcher you can set up a
task to run as a repeating task for

00:23:19.350 --> 00:23:19.360
task to run as a repeating task for
 

00:23:19.360 --> 00:23:21.830
task to run as a repeating task for
example I can run this every 30 minutes

00:23:21.830 --> 00:23:21.840
example I can run this every 30 minutes
 

00:23:21.840 --> 00:23:23.940
example I can run this every 30 minutes
dialing back the frequency that you're

00:23:23.940 --> 00:23:23.950
dialing back the frequency that you're
 

00:23:23.950 --> 00:23:25.830
dialing back the frequency that you're
running the task is a first step to save

00:23:25.830 --> 00:23:25.840
running the task is a first step to save
 

00:23:25.840 --> 00:23:27.810
running the task is a first step to save
some power so 30 minutes is certainly

00:23:27.810 --> 00:23:27.820
some power so 30 minutes is certainly
 

00:23:27.820 --> 00:23:29.299
some power so 30 minutes is certainly
better than running this every 5 minutes

00:23:29.299 --> 00:23:29.309
better than running this every 5 minutes
 

00:23:29.309 --> 00:23:32.580
better than running this every 5 minutes
however you can also constrain the job

00:23:32.580 --> 00:23:32.590
however you can also constrain the job
 

00:23:32.590 --> 00:23:35.129
however you can also constrain the job
to run only when it's on a charger this

00:23:35.129 --> 00:23:35.139
to run only when it's on a charger this
 

00:23:35.139 --> 00:23:38.009
to run only when it's on a charger this
is obviously the ultimate battery saver

00:23:38.009 --> 00:23:38.019
is obviously the ultimate battery saver
 

00:23:38.019 --> 00:23:40.350
is obviously the ultimate battery saver
because it would never run while users

00:23:40.350 --> 00:23:40.360
because it would never run while users
 

00:23:40.360 --> 00:23:43.620
because it would never run while users
on batteries here at Google a lot of our

00:23:43.620 --> 00:23:43.630
on batteries here at Google a lot of our
 

00:23:43.630 --> 00:23:46.110
on batteries here at Google a lot of our
apps employ this method for example Play

00:23:46.110 --> 00:23:46.120
apps employ this method for example Play
 

00:23:46.120 --> 00:23:48.720
apps employ this method for example Play
Store will wait to update auto-update

00:23:48.720 --> 00:23:48.730
Store will wait to update auto-update
 

00:23:48.730 --> 00:23:50.890
Store will wait to update auto-update
apps until you're on a charger this

00:23:50.890 --> 00:23:50.900
apps until you're on a charger this
 

00:23:50.900 --> 00:23:52.330
apps until you're on a charger this
because we understand a user would

00:23:52.330 --> 00:23:52.340
because we understand a user would
 

00:23:52.340 --> 00:23:53.920
because we understand a user would
rather have a device that lasts through

00:23:53.920 --> 00:23:53.930
rather have a device that lasts through
 

00:23:53.930 --> 00:23:56.710
rather have a device that lasts through
the day than a latest update of some

00:23:56.710 --> 00:23:56.720
the day than a latest update of some
 

00:23:56.720 --> 00:23:57.130
the day than a latest update of some
apps

00:23:57.130 --> 00:23:57.140
apps
 

00:23:57.140 --> 00:23:59.440
apps
so I encourage you to use that same very

00:23:59.440 --> 00:23:59.450
so I encourage you to use that same very
 

00:23:59.450 --> 00:24:01.000
so I encourage you to use that same very
critical lens when you're considering

00:24:01.000 --> 00:24:01.010
critical lens when you're considering
 

00:24:01.010 --> 00:24:03.100
critical lens when you're considering
scheduling jobs see if it can wait until

00:24:03.100 --> 00:24:03.110
scheduling jobs see if it can wait until
 

00:24:03.110 --> 00:24:10.510
scheduling jobs see if it can wait until
the device is on a charger the final bad

00:24:10.510 --> 00:24:10.520
the device is on a charger the final bad
 

00:24:10.520 --> 00:24:11.860
the device is on a charger the final bad
behavior we'll talk about today is

00:24:11.860 --> 00:24:11.870
behavior we'll talk about today is
 

00:24:11.870 --> 00:24:14.590
behavior we'll talk about today is
render time render times measures the

00:24:14.590 --> 00:24:14.600
render time render times measures the
 

00:24:14.600 --> 00:24:16.300
render time render times measures the
amount of time a frame drawn by your

00:24:16.300 --> 00:24:16.310
amount of time a frame drawn by your
 

00:24:16.310 --> 00:24:18.130
amount of time a frame drawn by your
application takes to actually get

00:24:18.130 --> 00:24:18.140
application takes to actually get
 

00:24:18.140 --> 00:24:21.070
application takes to actually get
rendered on the screen Hardware render

00:24:21.070 --> 00:24:21.080
rendered on the screen Hardware render
 

00:24:21.080 --> 00:24:23.440
rendered on the screen Hardware render
time directly correlates with how users

00:24:23.440 --> 00:24:23.450
time directly correlates with how users
 

00:24:23.450 --> 00:24:28.410
time directly correlates with how users
perceive the performance of your app

00:24:28.410 --> 00:24:28.420
 
 

00:24:28.420 --> 00:24:31.060
 
Android devices render at 60 frames per

00:24:31.060 --> 00:24:31.070
Android devices render at 60 frames per
 

00:24:31.070 --> 00:24:33.700
Android devices render at 60 frames per
second this is based on the refresh rate

00:24:33.700 --> 00:24:33.710
second this is based on the refresh rate
 

00:24:33.710 --> 00:24:36.130
second this is based on the refresh rate
that's available in the screen hardware

00:24:36.130 --> 00:24:36.140
that's available in the screen hardware
 

00:24:36.140 --> 00:24:39.250
that's available in the screen hardware
itself if you do the math 60 frames per

00:24:39.250 --> 00:24:39.260
itself if you do the math 60 frames per
 

00:24:39.260 --> 00:24:41.410
itself if you do the math 60 frames per
second breaks down to having to render a

00:24:41.410 --> 00:24:41.420
second breaks down to having to render a
 

00:24:41.420 --> 00:24:44.080
second breaks down to having to render a
frame every 16 milliseconds so as long

00:24:44.080 --> 00:24:44.090
frame every 16 milliseconds so as long
 

00:24:44.090 --> 00:24:45.610
frame every 16 milliseconds so as long
as your app is rendering a frame every

00:24:45.610 --> 00:24:45.620
as your app is rendering a frame every
 

00:24:45.620 --> 00:24:48.130
as your app is rendering a frame every
16 milliseconds users will feel that

00:24:48.130 --> 00:24:48.140
16 milliseconds users will feel that
 

00:24:48.140 --> 00:24:50.260
16 milliseconds users will feel that
your app is very smooth very fluent and

00:24:50.260 --> 00:24:50.270
your app is very smooth very fluent and
 

00:24:50.270 --> 00:24:54.940
your app is very smooth very fluent and
very pleasant to browse if your frames

00:24:54.940 --> 00:24:54.950
very pleasant to browse if your frames
 

00:24:54.950 --> 00:24:57.250
very pleasant to browse if your frames
take longer than 16 milliseconds even

00:24:57.250 --> 00:24:57.260
take longer than 16 milliseconds even
 

00:24:57.260 --> 00:25:00.480
take longer than 16 milliseconds even
just 17 milliseconds it will get dropped

00:25:00.480 --> 00:25:00.490
just 17 milliseconds it will get dropped
 

00:25:00.490 --> 00:25:04.630
just 17 milliseconds it will get dropped
if you have a lot of dropped frames your

00:25:04.630 --> 00:25:04.640
if you have a lot of dropped frames your
 

00:25:04.640 --> 00:25:06.700
if you have a lot of dropped frames your
application will feel very stuttery

00:25:06.700 --> 00:25:06.710
application will feel very stuttery
 

00:25:06.710 --> 00:25:09.160
application will feel very stuttery
very jarring to users so you want to

00:25:09.160 --> 00:25:09.170
very jarring to users so you want to
 

00:25:09.170 --> 00:25:10.480
very jarring to users so you want to
minimize the number of dropped frames

00:25:10.480 --> 00:25:10.490
minimize the number of dropped frames
 

00:25:10.490 --> 00:25:16.420
minimize the number of dropped frames
that your application has if you drop

00:25:16.420 --> 00:25:16.430
that your application has if you drop
 

00:25:16.430 --> 00:25:19.000
that your application has if you drop
many frames in a row and you get to the

00:25:19.000 --> 00:25:19.010
many frames in a row and you get to the
 

00:25:19.010 --> 00:25:20.890
many frames in a row and you get to the
point that it's been 700 milliseconds

00:25:20.890 --> 00:25:20.900
point that it's been 700 milliseconds
 

00:25:20.900 --> 00:25:22.480
point that it's been 700 milliseconds
before you draw the next frame in your

00:25:22.480 --> 00:25:22.490
before you draw the next frame in your
 

00:25:22.490 --> 00:25:24.730
before you draw the next frame in your
application this is the point at which

00:25:24.730 --> 00:25:24.740
application this is the point at which
 

00:25:24.740 --> 00:25:26.290
application this is the point at which
users will think your app is

00:25:26.290 --> 00:25:26.300
users will think your app is
 

00:25:26.300 --> 00:25:27.880
users will think your app is
unresponsive and they'll begin to feel

00:25:27.880 --> 00:25:27.890
unresponsive and they'll begin to feel
 

00:25:27.890 --> 00:25:30.460
unresponsive and they'll begin to feel
frustrated by it you should aim to have

00:25:30.460 --> 00:25:30.470
frustrated by it you should aim to have
 

00:25:30.470 --> 00:25:32.890
frustrated by it you should aim to have
0 frames that take 700 milliseconds or

00:25:32.890 --> 00:25:32.900
0 frames that take 700 milliseconds or
 

00:25:32.900 --> 00:25:38.080
0 frames that take 700 milliseconds or
more to render we've used both of these

00:25:38.080 --> 00:25:38.090
more to render we've used both of these
 

00:25:38.090 --> 00:25:40.420
more to render we've used both of these
thresholds to identify some bad behavior

00:25:40.420 --> 00:25:40.430
thresholds to identify some bad behavior
 

00:25:40.430 --> 00:25:43.090
thresholds to identify some bad behavior
the first is slow rendering we define

00:25:43.090 --> 00:25:43.100
the first is slow rendering we define
 

00:25:43.100 --> 00:25:45.280
the first is slow rendering we define
this bad behavior as the percentage of

00:25:45.280 --> 00:25:45.290
this bad behavior as the percentage of
 

00:25:45.290 --> 00:25:47.620
this bad behavior as the percentage of
users who experience more than 50%

00:25:47.620 --> 00:25:47.630
users who experience more than 50%
 

00:25:47.630 --> 00:25:51.130
users who experience more than 50%
dropped frames the second bad rendering

00:25:51.130 --> 00:25:51.140
dropped frames the second bad rendering
 

00:25:51.140 --> 00:25:53.410
dropped frames the second bad rendering
behavior are frozen frames we define

00:25:53.410 --> 00:25:53.420
behavior are frozen frames we define
 

00:25:53.420 --> 00:25:55.420
behavior are frozen frames we define
this as the percentage of users who

00:25:55.420 --> 00:25:55.430
this as the percentage of users who
 

00:25:55.430 --> 00:25:58.330
this as the percentage of users who
experience more than 0.1 percent of

00:25:58.330 --> 00:25:58.340
experience more than 0.1 percent of
 

00:25:58.340 --> 00:26:03.090
experience more than 0.1 percent of
their frames being frozen

00:26:03.090 --> 00:26:03.100
 
 

00:26:03.100 --> 00:26:05.980
 
the Android vitals dashboard reports on

00:26:05.980 --> 00:26:05.990
the Android vitals dashboard reports on
 

00:26:05.990 --> 00:26:08.410
the Android vitals dashboard reports on
both of these metrics and will flag you

00:26:08.410 --> 00:26:08.420
both of these metrics and will flag you
 

00:26:08.420 --> 00:26:11.680
both of these metrics and will flag you
if you're excessively slow and rendering

00:26:11.680 --> 00:26:11.690
if you're excessively slow and rendering
 

00:26:11.690 --> 00:26:14.620
if you're excessively slow and rendering
or too many frozen frames just like wake

00:26:14.620 --> 00:26:14.630
or too many frozen frames just like wake
 

00:26:14.630 --> 00:26:16.090
or too many frozen frames just like wake
locks and wake up you can see the

00:26:16.090 --> 00:26:16.100
locks and wake up you can see the
 

00:26:16.100 --> 00:26:18.370
locks and wake up you can see the
distribution of wakeup of rendering

00:26:18.370 --> 00:26:18.380
distribution of wakeup of rendering
 

00:26:18.380 --> 00:26:23.080
distribution of wakeup of rendering
times across sessions and the dashboard

00:26:23.080 --> 00:26:23.090
times across sessions and the dashboard
 

00:26:23.090 --> 00:26:25.120
times across sessions and the dashboard
will also give you some other statistics

00:26:25.120 --> 00:26:25.130
will also give you some other statistics
 

00:26:25.130 --> 00:26:27.430
will also give you some other statistics
that help you understand what might be

00:26:27.430 --> 00:26:27.440
that help you understand what might be
 

00:26:27.440 --> 00:26:29.680
that help you understand what might be
causing your rendering issues for

00:26:29.680 --> 00:26:29.690
causing your rendering issues for
 

00:26:29.690 --> 00:26:32.110
causing your rendering issues for
example I can see a high percentage of

00:26:32.110 --> 00:26:32.120
example I can see a high percentage of
 

00:26:32.120 --> 00:26:34.780
example I can see a high percentage of
slow UI thread activity this indicates

00:26:34.780 --> 00:26:34.790
slow UI thread activity this indicates
 

00:26:34.790 --> 00:26:37.000
slow UI thread activity this indicates
this indicates to me that I'm probably

00:26:37.000 --> 00:26:37.010
this indicates to me that I'm probably
 

00:26:37.010 --> 00:26:38.560
this indicates to me that I'm probably
trying to do too much work on the UI

00:26:38.560 --> 00:26:38.570
trying to do too much work on the UI
 

00:26:38.570 --> 00:26:40.840
trying to do too much work on the UI
thread so I should move things like disk

00:26:40.840 --> 00:26:40.850
thread so I should move things like disk
 

00:26:40.850 --> 00:26:43.060
thread so I should move things like disk
i/o or network activity to a background

00:26:43.060 --> 00:26:43.070
i/o or network activity to a background
 

00:26:43.070 --> 00:26:46.000
i/o or network activity to a background
thread these statistics though are

00:26:46.000 --> 00:26:46.010
thread these statistics though are
 

00:26:46.010 --> 00:26:47.440
thread these statistics though are
pretty high level and they'll just hint

00:26:47.440 --> 00:26:47.450
pretty high level and they'll just hint
 

00:26:47.450 --> 00:26:48.820
pretty high level and they'll just hint
at the root cause of your rendering

00:26:48.820 --> 00:26:48.830
at the root cause of your rendering
 

00:26:48.830 --> 00:26:50.919
at the root cause of your rendering
issues to really understand what's

00:26:50.919 --> 00:26:50.929
issues to really understand what's
 

00:26:50.929 --> 00:26:52.150
issues to really understand what's
causing your rendering issues you'll

00:26:52.150 --> 00:26:52.160
causing your rendering issues you'll
 

00:26:52.160 --> 00:26:56.049
causing your rendering issues you'll
need to dive deeper you can do this in

00:26:56.049 --> 00:26:56.059
need to dive deeper you can do this in
 

00:26:56.059 --> 00:26:59.380
need to dive deeper you can do this in
three steps the first step is to

00:26:59.380 --> 00:26:59.390
three steps the first step is to
 

00:26:59.390 --> 00:27:00.880
three steps the first step is to
instrument your app with the frame

00:27:00.880 --> 00:27:00.890
instrument your app with the frame
 

00:27:00.890 --> 00:27:04.299
instrument your app with the frame
metrics aggregator API this API is built

00:27:04.299 --> 00:27:04.309
metrics aggregator API this API is built
 

00:27:04.309 --> 00:27:06.280
metrics aggregator API this API is built
on the frame metrics API that was

00:27:06.280 --> 00:27:06.290
on the frame metrics API that was
 

00:27:06.290 --> 00:27:09.160
on the frame metrics API that was
released released in android Mugen the

00:27:09.160 --> 00:27:09.170
released released in android Mugen the
 

00:27:09.170 --> 00:27:11.260
released released in android Mugen the
frame metrics API collects statistics

00:27:11.260 --> 00:27:11.270
frame metrics API collects statistics
 

00:27:11.270 --> 00:27:12.970
frame metrics API collects statistics
about how long each frame takes

00:27:12.970 --> 00:27:12.980
about how long each frame takes
 

00:27:12.980 --> 00:27:15.730
about how long each frame takes
surrender the frame metrics aggregator

00:27:15.730 --> 00:27:15.740
surrender the frame metrics aggregator
 

00:27:15.740 --> 00:27:18.190
surrender the frame metrics aggregator
API as the name suggests aggregates

00:27:18.190 --> 00:27:18.200
API as the name suggests aggregates
 

00:27:18.200 --> 00:27:20.950
API as the name suggests aggregates
these systems these statistics across a

00:27:20.950 --> 00:27:20.960
these systems these statistics across a
 

00:27:20.960 --> 00:27:22.930
these systems these statistics across a
series of activities that you define and

00:27:22.930 --> 00:27:22.940
series of activities that you define and
 

00:27:22.940 --> 00:27:24.910
series of activities that you define and
you define the start and the end point

00:27:24.910 --> 00:27:24.920
you define the start and the end point
 

00:27:24.920 --> 00:27:27.010
you define the start and the end point
of that collection so you can collect

00:27:27.010 --> 00:27:27.020
of that collection so you can collect
 

00:27:27.020 --> 00:27:30.400
of that collection so you can collect
statistics about how long specific work

00:27:30.400 --> 00:27:30.410
statistics about how long specific work
 

00:27:30.410 --> 00:27:32.370
statistics about how long specific work
flows in your application take to render

00:27:32.370 --> 00:27:32.380
flows in your application take to render
 

00:27:32.380 --> 00:27:35.230
flows in your application take to render
once you've done this step step 2 is to

00:27:35.230 --> 00:27:35.240
once you've done this step step 2 is to
 

00:27:35.240 --> 00:27:37.570
once you've done this step step 2 is to
get this debate of data off the device

00:27:37.570 --> 00:27:37.580
get this debate of data off the device
 

00:27:37.580 --> 00:27:39.610
get this debate of data off the device
and upload it to the cloud or your

00:27:39.610 --> 00:27:39.620
and upload it to the cloud or your
 

00:27:39.620 --> 00:27:41.049
and upload it to the cloud or your
servers where you can then analyze it

00:27:41.049 --> 00:27:41.059
servers where you can then analyze it
 

00:27:41.059 --> 00:27:43.810
servers where you can then analyze it
you'll analyze it to find what flows are

00:27:43.810 --> 00:27:43.820
you'll analyze it to find what flows are
 

00:27:43.820 --> 00:27:46.210
you'll analyze it to find what flows are
rendering slowly for the majority of

00:27:46.210 --> 00:27:46.220
rendering slowly for the majority of
 

00:27:46.220 --> 00:27:49.390
rendering slowly for the majority of
your users from there you can move on to

00:27:49.390 --> 00:27:49.400
your users from there you can move on to
 

00:27:49.400 --> 00:27:51.790
your users from there you can move on to
step 3 which is getting your device out

00:27:51.790 --> 00:27:51.800
step 3 which is getting your device out
 

00:27:51.800 --> 00:27:54.310
step 3 which is getting your device out
walking through those flows all that

00:27:54.310 --> 00:27:54.320
walking through those flows all that
 

00:27:54.320 --> 00:27:57.370
walking through those flows all that
means meanwhile recording a trace once

00:27:57.370 --> 00:27:57.380
means meanwhile recording a trace once
 

00:27:57.380 --> 00:27:59.049
means meanwhile recording a trace once
you reproduce that flow rendering

00:27:59.049 --> 00:27:59.059
you reproduce that flow rendering
 

00:27:59.059 --> 00:28:01.990
you reproduce that flow rendering
behavior or those frozen frames you can

00:28:01.990 --> 00:28:02.000
behavior or those frozen frames you can
 

00:28:02.000 --> 00:28:04.480
behavior or those frozen frames you can
upload that trace into systrace which

00:28:04.480 --> 00:28:04.490
upload that trace into systrace which
 

00:28:04.490 --> 00:28:06.610
upload that trace into systrace which
will tell you exactly what was going on

00:28:06.610 --> 00:28:06.620
will tell you exactly what was going on
 

00:28:06.620 --> 00:28:07.900
will tell you exactly what was going on
in your application when that slow

00:28:07.900 --> 00:28:07.910
in your application when that slow
 

00:28:07.910 --> 00:28:09.910
in your application when that slow
rendering occurred and not just your

00:28:09.910 --> 00:28:09.920
rendering occurred and not just your
 

00:28:09.920 --> 00:28:11.470
rendering occurred and not just your
application but what was going on in the

00:28:11.470 --> 00:28:11.480
application but what was going on in the
 

00:28:11.480 --> 00:28:13.659
application but what was going on in the
system as well from there you can figure

00:28:13.659 --> 00:28:13.669
system as well from there you can figure
 

00:28:13.669 --> 00:28:15.610
system as well from there you can figure
out which specific code path you need to

00:28:15.610 --> 00:28:15.620
out which specific code path you need to
 

00:28:15.620 --> 00:28:16.250
out which specific code path you need to
optimize the

00:28:16.250 --> 00:28:16.260
optimize the
 

00:28:16.260 --> 00:28:20.510
optimize the
fix your rendering performance I've just

00:28:20.510 --> 00:28:20.520
fix your rendering performance I've just
 

00:28:20.520 --> 00:28:22.340
fix your rendering performance I've just
skimmed the surface of the frame metrics

00:28:22.340 --> 00:28:22.350
skimmed the surface of the frame metrics
 

00:28:22.350 --> 00:28:25.430
skimmed the surface of the frame metrics
aggregator API as well systrace luckily

00:28:25.430 --> 00:28:25.440
aggregator API as well systrace luckily
 

00:28:25.440 --> 00:28:27.020
aggregator API as well systrace luckily
you have two more opportunities to learn

00:28:27.020 --> 00:28:27.030
you have two more opportunities to learn
 

00:28:27.030 --> 00:28:29.510
you have two more opportunities to learn
more about them this evening Tim Murray

00:28:29.510 --> 00:28:29.520
more about them this evening Tim Murray
 

00:28:29.520 --> 00:28:31.310
more about them this evening Tim Murray
who's an expert on systrace will give a

00:28:31.310 --> 00:28:31.320
who's an expert on systrace will give a
 

00:28:31.320 --> 00:28:33.160
who's an expert on systrace will give a
talk on how you can use it to debug

00:28:33.160 --> 00:28:33.170
talk on how you can use it to debug
 

00:28:33.170 --> 00:28:36.410
talk on how you can use it to debug
rendering issues tim has analyzed over a

00:28:36.410 --> 00:28:36.420
rendering issues tim has analyzed over a
 

00:28:36.420 --> 00:28:38.300
rendering issues tim has analyzed over a
thousand cysts races and is a true

00:28:38.300 --> 00:28:38.310
thousand cysts races and is a true
 

00:28:38.310 --> 00:28:41.510
thousand cysts races and is a true
expert in the field on Friday you can go

00:28:41.510 --> 00:28:41.520
expert in the field on Friday you can go
 

00:28:41.520 --> 00:28:44.060
expert in the field on Friday you can go
learn from Chris and check the authors

00:28:44.060 --> 00:28:44.070
learn from Chris and check the authors
 

00:28:44.070 --> 00:28:45.710
learn from Chris and check the authors
of the frame metrics aggregator API

00:28:45.710 --> 00:28:45.720
of the frame metrics aggregator API
 

00:28:45.720 --> 00:28:47.660
of the frame metrics aggregator API
about how you can use it to really

00:28:47.660 --> 00:28:47.670
about how you can use it to really
 

00:28:47.670 --> 00:28:49.630
about how you can use it to really
understand your application performance

00:28:49.630 --> 00:28:49.640
understand your application performance
 

00:28:49.640 --> 00:28:51.980
understand your application performance
and with that I'll give it back to

00:28:51.980 --> 00:28:51.990
and with that I'll give it back to
 

00:28:51.990 --> 00:28:55.360
and with that I'll give it back to
Fergus to close thanks so much

00:28:55.360 --> 00:28:55.370
Fergus to close thanks so much
 

00:28:55.370 --> 00:29:00.770
Fergus to close thanks so much
incluye great so today we introduced

00:29:00.770 --> 00:29:00.780
incluye great so today we introduced
 

00:29:00.780 --> 00:29:03.080
incluye great so today we introduced
three performance areas with many other

00:29:03.080 --> 00:29:03.090
three performance areas with many other
 

00:29:03.090 --> 00:29:04.190
three performance areas with many other
performance areas we're going to be

00:29:04.190 --> 00:29:04.200
performance areas we're going to be
 

00:29:04.200 --> 00:29:06.110
performance areas we're going to be
introducing as I mentioned earlier over

00:29:06.110 --> 00:29:06.120
introducing as I mentioned earlier over
 

00:29:06.120 --> 00:29:07.430
introducing as I mentioned earlier over
the course of the next couple of months

00:29:07.430 --> 00:29:07.440
the course of the next couple of months
 

00:29:07.440 --> 00:29:11.590
the course of the next couple of months
app startup time memory and network use

00:29:11.590 --> 00:29:11.600
app startup time memory and network use
 

00:29:11.600 --> 00:29:13.880
app startup time memory and network use
for each one of these performance areas

00:29:13.880 --> 00:29:13.890
for each one of these performance areas
 

00:29:13.890 --> 00:29:15.860
for each one of these performance areas
we're going to introduce bad behaviors

00:29:15.860 --> 00:29:15.870
we're going to introduce bad behaviors
 

00:29:15.870 --> 00:29:17.120
we're going to introduce bad behaviors
so it's really easy to understand the

00:29:17.120 --> 00:29:17.130
so it's really easy to understand the
 

00:29:17.130 --> 00:29:18.680
so it's really easy to understand the
metrics and how you're doing in that

00:29:18.680 --> 00:29:18.690
metrics and how you're doing in that
 

00:29:18.690 --> 00:29:24.770
metrics and how you're doing in that
metric compared to other apps a lot of

00:29:24.770 --> 00:29:24.780
metric compared to other apps a lot of
 

00:29:24.780 --> 00:29:27.080
metric compared to other apps a lot of
these tools we talked about especially

00:29:27.080 --> 00:29:27.090
these tools we talked about especially
 

00:29:27.090 --> 00:29:28.820
these tools we talked about especially
on the Play Developer console side for

00:29:28.820 --> 00:29:28.830
on the Play Developer console side for
 

00:29:28.830 --> 00:29:31.130
on the Play Developer console side for
them Android vital dashboard aggregated

00:29:31.130 --> 00:29:31.140
them Android vital dashboard aggregated
 

00:29:31.140 --> 00:29:33.980
them Android vital dashboard aggregated
over your whole apk if you want to

00:29:33.980 --> 00:29:33.990
over your whole apk if you want to
 

00:29:33.990 --> 00:29:36.770
over your whole apk if you want to
understand within your apk specific

00:29:36.770 --> 00:29:36.780
understand within your apk specific
 

00:29:36.780 --> 00:29:39.110
understand within your apk specific
performance areas I'd encourage you to

00:29:39.110 --> 00:29:39.120
performance areas I'd encourage you to
 

00:29:39.120 --> 00:29:42.290
performance areas I'd encourage you to
use the firebase performance monitoring

00:29:42.290 --> 00:29:42.300
use the firebase performance monitoring
 

00:29:42.300 --> 00:29:44.780
use the firebase performance monitoring
tool whose launched earlier today at the

00:29:44.780 --> 00:29:44.790
tool whose launched earlier today at the
 

00:29:44.790 --> 00:29:46.850
tool whose launched earlier today at the
developer keynote and enables you to be

00:29:46.850 --> 00:29:46.860
developer keynote and enables you to be
 

00:29:46.860 --> 00:29:48.560
developer keynote and enables you to be
able to instrument your app out of the

00:29:48.560 --> 00:29:48.570
able to instrument your app out of the
 

00:29:48.570 --> 00:29:50.870
able to instrument your app out of the
box comes network and startup time but

00:29:50.870 --> 00:29:50.880
box comes network and startup time but
 

00:29:50.880 --> 00:29:52.970
box comes network and startup time but
you'll also able to use your own

00:29:52.970 --> 00:29:52.980
you'll also able to use your own
 

00:29:52.980 --> 00:29:55.400
you'll also able to use your own
counters to the other track whatever you

00:29:55.400 --> 00:29:55.410
counters to the other track whatever you
 

00:29:55.410 --> 00:29:57.940
counters to the other track whatever you
would like to track in your application

00:29:57.940 --> 00:29:57.950
would like to track in your application
 

00:29:57.950 --> 00:30:00.080
would like to track in your application
there's a talk on this that's going to

00:30:00.080 --> 00:30:00.090
there's a talk on this that's going to
 

00:30:00.090 --> 00:30:02.030
there's a talk on this that's going to
happen tomorrow and I'd encourage you

00:30:02.030 --> 00:30:02.040
happen tomorrow and I'd encourage you
 

00:30:02.040 --> 00:30:03.470
happen tomorrow and I'd encourage you
all to attend that to learn more about

00:30:03.470 --> 00:30:03.480
all to attend that to learn more about
 

00:30:03.480 --> 00:30:05.810
all to attend that to learn more about
how you can be able to use at the fibers

00:30:05.810 --> 00:30:05.820
how you can be able to use at the fibers
 

00:30:05.820 --> 00:30:07.430
how you can be able to use at the fibers
performance monitoring SDK in your

00:30:07.430 --> 00:30:07.440
performance monitoring SDK in your
 

00:30:07.440 --> 00:30:08.810
performance monitoring SDK in your
application to be able to improve

00:30:08.810 --> 00:30:08.820
application to be able to improve
 

00:30:08.820 --> 00:30:13.640
application to be able to improve
performance so we covered a lot today we

00:30:13.640 --> 00:30:13.650
performance so we covered a lot today we
 

00:30:13.650 --> 00:30:15.050
performance so we covered a lot today we
covered why performance matters

00:30:15.050 --> 00:30:15.060
covered why performance matters
 

00:30:15.060 --> 00:30:17.630
covered why performance matters
we covered Android BIOS issues the new

00:30:17.630 --> 00:30:17.640
we covered Android BIOS issues the new
 

00:30:17.640 --> 00:30:19.730
we covered Android BIOS issues the new
concepts around bad behaviors and the

00:30:19.730 --> 00:30:19.740
concepts around bad behaviors and the
 

00:30:19.740 --> 00:30:23.570
concepts around bad behaviors and the
six performance six bad behaviors again

00:30:23.570 --> 00:30:23.580
six performance six bad behaviors again
 

00:30:23.580 --> 00:30:25.400
six performance six bad behaviors again
those bad behaviors are high a and or

00:30:25.400 --> 00:30:25.410
those bad behaviors are high a and or
 

00:30:25.410 --> 00:30:28.450
those bad behaviors are high a and or
race high crash race excessive wake-ups

00:30:28.450 --> 00:30:28.460
race high crash race excessive wake-ups
 

00:30:28.460 --> 00:30:30.080
race high crash race excessive wake-ups
subway clocks

00:30:30.080 --> 00:30:30.090
subway clocks
 

00:30:30.090 --> 00:30:35.330
subway clocks
a slow rendering and frozen frames we

00:30:35.330 --> 00:30:35.340
a slow rendering and frozen frames we
 

00:30:35.340 --> 00:30:37.460
a slow rendering and frozen frames we
introduced the Android BIOS dashboards

00:30:37.460 --> 00:30:37.470
introduced the Android BIOS dashboards
 

00:30:37.470 --> 00:30:39.289
introduced the Android BIOS dashboards
in the Play console talked about the

00:30:39.289 --> 00:30:39.299
in the Play console talked about the
 

00:30:39.299 --> 00:30:43.070
in the Play console talked about the
Android studio 3.0 profilers and the

00:30:43.070 --> 00:30:43.080
Android studio 3.0 profilers and the
 

00:30:43.080 --> 00:30:47.810
Android studio 3.0 profilers and the
Android AP eyes are available for you so

00:30:47.810 --> 00:30:47.820
Android AP eyes are available for you so
 

00:30:47.820 --> 00:30:49.549
Android AP eyes are available for you so
if you're not motivated by all the

00:30:49.549 --> 00:30:49.559
if you're not motivated by all the
 

00:30:49.559 --> 00:30:51.080
if you're not motivated by all the
things we talked about around

00:30:51.080 --> 00:30:51.090
things we talked about around
 

00:30:51.090 --> 00:30:52.820
things we talked about around
performance today I encourage you to

00:30:52.820 --> 00:30:52.830
performance today I encourage you to
 

00:30:52.830 --> 00:30:54.470
performance today I encourage you to
come to our talk tomorrow where we can

00:30:54.470 --> 00:30:54.480
come to our talk tomorrow where we can
 

00:30:54.480 --> 00:30:57.110
come to our talk tomorrow where we can
give you a BuzzFeed like talk on why you

00:30:57.110 --> 00:30:57.120
give you a BuzzFeed like talk on why you
 

00:30:57.120 --> 00:30:58.940
give you a BuzzFeed like talk on why you
should care more about performance with

00:30:58.940 --> 00:30:58.950
should care more about performance with
 

00:30:58.950 --> 00:31:00.289
should care more about performance with
all the Play console tools that we have

00:31:00.289 --> 00:31:00.299
all the Play console tools that we have
 

00:31:00.299 --> 00:31:03.380
all the Play console tools that we have
available so one of the things that

00:31:03.380 --> 00:31:03.390
available so one of the things that
 

00:31:03.390 --> 00:31:04.279
available so one of the things that
we're going to talk about in this talk

00:31:04.279 --> 00:31:04.289
we're going to talk about in this talk
 

00:31:04.289 --> 00:31:06.649
we're going to talk about in this talk
is the rewards like the Play Store is

00:31:06.649 --> 00:31:06.659
is the rewards like the Play Store is
 

00:31:06.659 --> 00:31:08.930
is the rewards like the Play Store is
going to offer you for being able to

00:31:08.930 --> 00:31:08.940
going to offer you for being able to
 

00:31:08.940 --> 00:31:10.519
going to offer you for being able to
improve the performance of your

00:31:10.519 --> 00:31:10.529
improve the performance of your
 

00:31:10.529 --> 00:31:13.010
improve the performance of your
application I will get more into the

00:31:13.010 --> 00:31:13.020
application I will get more into the
 

00:31:13.020 --> 00:31:14.480
application I will get more into the
details there but we're just going to

00:31:14.480 --> 00:31:14.490
details there but we're just going to
 

00:31:14.490 --> 00:31:16.820
details there but we're just going to
start using this performance data in the

00:31:16.820 --> 00:31:16.830
start using this performance data in the
 

00:31:16.830 --> 00:31:20.419
start using this performance data in the
promote ability within the store another

00:31:20.419 --> 00:31:20.429
promote ability within the store another
 

00:31:20.429 --> 00:31:21.200
promote ability within the store another
reason why I should care about

00:31:21.200 --> 00:31:21.210
reason why I should care about
 

00:31:21.210 --> 00:31:23.090
reason why I should care about
performance is with 2 billion users on

00:31:23.090 --> 00:31:23.100
performance is with 2 billion users on
 

00:31:23.100 --> 00:31:25.190
performance is with 2 billion users on
Android right now it's a lot of users a

00:31:25.190 --> 00:31:25.200
Android right now it's a lot of users a
 

00:31:25.200 --> 00:31:26.510
Android right now it's a lot of users a
lot of users are using their devices to

00:31:26.510 --> 00:31:26.520
lot of users are using their devices to
 

00:31:26.520 --> 00:31:28.909
lot of users are using their devices to
make emergency calls if you improve the

00:31:28.909 --> 00:31:28.919
make emergency calls if you improve the
 

00:31:28.919 --> 00:31:31.639
make emergency calls if you improve the
battery life of your device and your of

00:31:31.639 --> 00:31:31.649
battery life of your device and your of
 

00:31:31.649 --> 00:31:33.200
battery life of your device and your of
the device itself by improving battery

00:31:33.200 --> 00:31:33.210
the device itself by improving battery
 

00:31:33.210 --> 00:31:35.480
the device itself by improving battery
life of your app then users device the

00:31:35.480 --> 00:31:35.490
life of your app then users device the
 

00:31:35.490 --> 00:31:36.769
life of your app then users device the
last longer they'll be able to make more

00:31:36.769 --> 00:31:36.779
last longer they'll be able to make more
 

00:31:36.779 --> 00:31:38.450
last longer they'll be able to make more
emergency calls and that you're

00:31:38.450 --> 00:31:38.460
emergency calls and that you're
 

00:31:38.460 --> 00:31:40.430
emergency calls and that you're
basically I'm gonna ground lame and say

00:31:40.430 --> 00:31:40.440
basically I'm gonna ground lame and say
 

00:31:40.440 --> 00:31:42.710
basically I'm gonna ground lame and say
it saving people's lives by focusing on

00:31:42.710 --> 00:31:42.720
it saving people's lives by focusing on
 

00:31:42.720 --> 00:31:46.010
it saving people's lives by focusing on
performance it's great maybe stretching

00:31:46.010 --> 00:31:46.020
performance it's great maybe stretching
 

00:31:46.020 --> 00:31:47.480
performance it's great maybe stretching
a little there but hopefully you get it

00:31:47.480 --> 00:31:47.490
a little there but hopefully you get it
 

00:31:47.490 --> 00:31:49.430
a little there but hopefully you get it
great thank you very much everyone

00:31:49.430 --> 00:31:49.440
great thank you very much everyone
 

00:31:49.440 --> 00:31:51.030
great thank you very much everyone
I really appreciate joining today

00:31:51.030 --> 00:31:51.040
I really appreciate joining today
 

00:31:51.040 --> 00:31:53.980
I really appreciate joining today
[Applause]

00:31:53.980 --> 00:31:53.990
[Applause]
 

00:31:53.990 --> 00:32:07.919
[Applause]
[Music]

