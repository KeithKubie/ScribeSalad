WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.000
For this question, we need to determine if the given grammar generates

00:00:05.000 --> 00:00:10.000
infinitely many strings starting from the nonterminal word.

00:00:10.000 --> 00:00:12.000
So we can start from either substitution rule.

00:00:12.000 --> 00:00:16.000
If we start from the first one, then we end up with 1 possible word.

00:00:16.000 --> 00:00:20.000
If we start from the second word, then we get the letter a,

00:00:20.000 --> 00:00:21.000
and then we can insert another word.

00:00:21.000 --> 00:00:25.000
This can be udacity, so then we end up with audacity.

00:00:25.000 --> 00:00:28.000
We can do the same thing but twice.

00:00:28.000 --> 00:00:33.000
So we have a, then instead of going to udacity, we do a again,

00:00:33.000 --> 00:00:35.000
and then we do udacity.

00:00:35.000 --> 00:00:38.000
The way this is breaking down kind of looks like this.

00:00:38.000 --> 00:00:42.000
It should be pretty clear that we can continue this forever and eventually end

00:00:42.000 --> 00:00:43.000
with udacity.

00:00:43.000 --> 00:00:46.000
So we can have an arbitrary number of a's, followed by udacity.

00:00:46.000 --> 00:00:51.000
This inidicates that this grammar generates an infinite number of possible words.

00:00:51.000 --> 00:00:56.000
In this grammar, we can see that every word begins with a root and then a tail.

00:00:56.000 --> 00:00:59.000
So what we're going to do to see how many strings this generates is,

00:00:59.000 --> 00:01:05.000
go through every possible root there can be and then every tail there can be.

00:01:05.000 --> 00:01:09.000
So root can be uda and also boda.

00:01:09.000 --> 00:01:14.000
Tail can go directly to cious and city.

00:01:14.000 --> 00:01:19.000
But we should also look at this substitution rule that has root going directly to tail.

00:01:19.000 --> 00:01:24.000
So you could have a word that's really the same as tail tail,

00:01:24.000 --> 00:01:28.000
which adds 2 more possible combinations to what root can be.

00:01:28.000 --> 00:01:33.000
This gives us 4 possibilites for root and 2 possibilities for tail,

00:01:33.000 --> 00:01:35.000
which means 8 possibilities all together.

00:01:35.000 --> 00:01:38.000
This grammar can generate 8 different words.

00:01:38.000 --> 00:01:47.000
We know that 8 &lt; infinity, so this grammar does not generate an infinite number of words.

00:01:47.000 --> 00:01:51.000
So here we have a grammar that looks a lot like our first one.

00:01:51.000 --> 00:01:55.000
However, let's still work it out to see if there's an infinite number of words.

00:01:55.000 --> 00:01:57.000
So according to problem, we start with word.

00:01:57.000 --> 00:02:00.000
And there's only 1 substitution rule for word.

00:02:00.000 --> 00:02:02.000
&gt;From pre udacious, we have 2 options.

00:02:02.000 --> 00:02:07.000
We could go to super udacious, which gives us one complete word,

00:02:07.000 --> 00:02:09.000
or we can do pre super udacious.

00:02:09.000 --> 00:02:14.000
You might have already noticed that we can keep substituting the pre with pre super,

00:02:14.000 --> 00:02:16.000
and we can keep doing this forever,

00:02:16.000 --> 00:02:20.000
and stopping at any point and ending with some number of supers

00:02:20.000 --> 00:02:22.000
followed by udacious.

00:02:22.000 --> 00:02:25.000
This grammar generates an infinite number of strings.

