WEBVTT
Kind: captions
Language: en

00:00:00.200 --> 00:00:05.350
So, we can imagine problem solving as occurring in a state space.

00:00:05.350 --> 00:00:08.210
Here is the initial state, here is the goal state. And

00:00:08.210 --> 00:00:12.400
the state space consists of all of the states that could be potentially produced

00:00:12.400 --> 00:00:17.170
from the initial state by iterative application of the various operators in

00:00:17.170 --> 00:00:22.000
this micro world. I want to come up with a path in the state space,

00:00:22.000 --> 00:00:25.745
takes me from initial state to the goal state. There is one path,

00:00:25.745 --> 00:00:29.820
this is not the only path, but this is one path to go from the initial state to

00:00:29.820 --> 00:00:34.356
the goal state. The question then becomes, how might an AI agent

00:00:34.356 --> 00:00:38.340
derive this path that may take it from the initial state to the goal state.

00:00:39.570 --> 00:00:44.200
Let us see how this notion of path finding applies to our blocks world problem.

00:00:44.200 --> 00:00:48.970
&gt;From the initial state, here it is one path of going to the goal state. First,

00:00:48.970 --> 00:00:54.760
we put C on the table. Then we put B on top C. And then we put A on top of B.

00:00:54.760 --> 00:00:59.280
Which is exactly the answer that David had given. This is one sequence,

00:00:59.280 --> 00:01:04.209
one path from the initial state to the goal state. The question then becomes,

00:01:04.209 --> 00:01:09.100
how does AI method know what operation to select in a given state?

00:01:09.100 --> 00:01:14.220
Consider this state, for example. There are several operations possible here.

00:01:14.220 --> 00:01:18.350
One could put C on top of B or B on top of A.

00:01:18.350 --> 00:01:22.600
How does the AI agent know which operation to select at this particular state?

