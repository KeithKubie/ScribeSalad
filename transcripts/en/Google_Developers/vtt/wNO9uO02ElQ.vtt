WEBVTT
Kind: captions
Language: en

00:00:01.105 --> 00:00:03.480
RETO MEIER: Hello, I'm Reto
Meier for the Developer Show.

00:00:03.480 --> 00:00:05.660
This is your weekly update
on the coolest developer

00:00:05.660 --> 00:00:07.440
news from Google.

00:00:07.440 --> 00:00:10.110
Last week we hosted Google
I/O, our annual developer

00:00:10.110 --> 00:00:11.040
conference.

00:00:11.040 --> 00:00:13.020
If you weren't able to
join us or just want

00:00:13.020 --> 00:00:14.460
to relive the
magic, you can find

00:00:14.460 --> 00:00:16.650
the keynote and all
the sessions on YouTube

00:00:16.650 --> 00:00:18.700
by following the link below.

00:00:18.700 --> 00:00:20.940
Here's a taste of some
of the highlights.

00:00:20.940 --> 00:00:23.730
We're excited to share with you
11 Jetpack libraries that can

00:00:23.730 --> 00:00:25.830
be used in development today.

00:00:25.830 --> 00:00:27.780
CameraX, now in
alpha, enables you

00:00:27.780 --> 00:00:30.660
to create great camera-driven
experiences in your app

00:00:30.660 --> 00:00:33.400
without worrying about the
underlying device behavior.

00:00:33.400 --> 00:00:35.370
It gives you access to
the same functionality

00:00:35.370 --> 00:00:37.800
as the native camera
app, including

00:00:37.800 --> 00:00:41.730
features like portrait,
night, HDR, where supported.

00:00:41.730 --> 00:00:43.620
Also in alpha there's
live data and life

00:00:43.620 --> 00:00:44.910
cycles with coroutines.

00:00:44.910 --> 00:00:47.910
View model with safe state,
and lots and lots more.

00:00:47.910 --> 00:00:49.920
We also open sourced
an early preview

00:00:49.920 --> 00:00:53.040
of Jetpack Compose, a new
unbundled tool kit designed

00:00:53.040 --> 00:00:55.320
to simplify UI
development by combining

00:00:55.320 --> 00:00:57.930
a reactive programming
model with the conciseness

00:00:57.930 --> 00:00:59.820
and ease of use of Kotlin.

00:00:59.820 --> 00:01:02.220
Find out more about
all these new Jetpack

00:01:02.220 --> 00:01:04.379
APIs in the post below.

00:01:04.379 --> 00:01:07.410
Android Studio 3.5 beta
is ready to download.

00:01:07.410 --> 00:01:10.230
We heard that you wanted us
to focus even more on quality

00:01:10.230 --> 00:01:11.830
and stability over features.

00:01:11.830 --> 00:01:13.830
So we kicked off Project Marble.

00:01:13.830 --> 00:01:16.140
Focused on making the
fundamental features and flows

00:01:16.140 --> 00:01:18.210
of the IDE rock-solid.

00:01:18.210 --> 00:01:21.900
Android Studio 3.5 is the
culmination of this effort.

00:01:21.900 --> 00:01:24.930
Find out more about it
from the link below.

00:01:24.930 --> 00:01:27.690
The Firebase team has launched
three more capabilities

00:01:27.690 --> 00:01:28.890
in beta.

00:01:28.890 --> 00:01:31.560
On device translation allows
you to use the same offline

00:01:31.560 --> 00:01:33.150
models that support
Google translate

00:01:33.150 --> 00:01:36.210
to provide fast dynamic
translation of text in your app

00:01:36.210 --> 00:01:38.370
into 58 languages.

00:01:38.370 --> 00:01:40.245
Object detection and
tracking lets your app

00:01:40.245 --> 00:01:43.140
locate and track in real time
the most prominent object

00:01:43.140 --> 00:01:45.060
in a live camera feed.

00:01:45.060 --> 00:01:47.310
With AutoML vision
edge you can easily

00:01:47.310 --> 00:01:49.050
create custom image
classification

00:01:49.050 --> 00:01:50.670
models tailored to your needs.

00:01:50.670 --> 00:01:53.070
Just upload your training
data to the Firebase console,

00:01:53.070 --> 00:01:55.200
and you can use Google's
AutoML technology

00:01:55.200 --> 00:01:57.510
to build a custom TensorFlow
Lite model for you

00:01:57.510 --> 00:02:00.510
to run locally on
your user's device.

00:02:00.510 --> 00:02:02.790
You can learn more about
these and other new Firebased

00:02:02.790 --> 00:02:06.100
features in the blog
post shown below.

00:02:06.100 --> 00:02:08.280
At I/O the Flutter team
announced an expansion

00:02:08.280 --> 00:02:10.949
of their focus from mobile
to incorporate a broader set

00:02:10.949 --> 00:02:12.820
of devices and form factors.

00:02:12.820 --> 00:02:15.070
They released their first
technical preview of Flutter

00:02:15.070 --> 00:02:16.590
for web, and
announced that Flutter

00:02:16.590 --> 00:02:18.960
is powering Google's
smart display platform,

00:02:18.960 --> 00:02:21.720
and delivering the first steps
toward supporting desktop class

00:02:21.720 --> 00:02:23.460
apps with Chrome OS.

00:02:23.460 --> 00:02:26.280
Furthermore, Chrome OS is a
great developer workstation

00:02:26.280 --> 00:02:28.410
for building general-purpose
Flutter apps, thanks

00:02:28.410 --> 00:02:30.660
to its support for developing
and running Flutter apps

00:02:30.660 --> 00:02:32.505
locally on the same device.

00:02:32.505 --> 00:02:35.040
To learn how you can target
Chrome OS with Flutter

00:02:35.040 --> 00:02:37.950
and how to run the Flutter
development tools on Chrome OS,

00:02:37.950 --> 00:02:41.400
you can follow the
instructions in the post below.

00:02:41.400 --> 00:02:44.050
Open images V5 features
segmentation masks

00:02:44.050 --> 00:02:48.540
for 2.8 million object
instances in 350 categories.

00:02:48.540 --> 00:02:51.090
Unlike bounding boxes,
which only identify regions

00:02:51.090 --> 00:02:53.910
in which an object is
located, segmentation masks

00:02:53.910 --> 00:02:56.040
mark the outline of
objects, characterizing

00:02:56.040 --> 00:02:59.640
their spatial extent to a
much higher level of detail.

00:02:59.640 --> 00:03:02.640
We've put particular effort into
ensuring consistent annotations

00:03:02.640 --> 00:03:04.647
across different objects.

00:03:04.647 --> 00:03:06.980
Check out the post below to
learn more about open images

00:03:06.980 --> 00:03:11.220
V5, and how you can participate
in the open images challenge.

00:03:11.220 --> 00:03:13.440
Don't forget to check out
all the amazing Google I/O

00:03:13.440 --> 00:03:15.720
sessions available on
YouTube and please remember

00:03:15.720 --> 00:03:17.880
to like, subscribe, and share.

00:03:17.880 --> 00:03:19.530
I'm Reto Meier for
the Developer Show.

00:03:19.530 --> 00:03:22.046
Thanks for watching.

00:03:22.046 --> 00:03:25.243
Yay, another new t-shirt,
just what I needed.

00:03:25.243 --> 00:03:27.160
- You've already got two
closets full of them.

00:03:27.160 --> 00:03:28.224
RETO MEIER: Exactly.

