WEBVTT
Kind: captions
Language: en

00:00:00.319 --> 00:00:01.860
WOJTEK KALICINSKI:
Android Studio 3.0

00:00:01.860 --> 00:00:04.870
is finally ready for download
in the stable channel.

00:00:04.870 --> 00:00:06.390
It brings about
many improvements

00:00:06.390 --> 00:00:08.430
that will make developer
experience smoother,

00:00:08.430 --> 00:00:12.270
but also some important changes
that might require attention.

00:00:12.270 --> 00:00:14.190
Android Studio 3 is
the first release

00:00:14.190 --> 00:00:17.010
in which we've added Kotlin
support out of the box,

00:00:17.010 --> 00:00:20.070
and we turn on fully
supporting it going forward.

00:00:20.070 --> 00:00:21.960
Kotlin is a fun and
expressive language

00:00:21.960 --> 00:00:24.780
that has grown popular
with Android developers.

00:00:24.780 --> 00:00:28.050
Thanks to high interoperability
with existing Java code,

00:00:28.050 --> 00:00:30.690
you can now immediately
start using it in your apps.

00:00:30.690 --> 00:00:33.270
We continue to support the
Java programming language,

00:00:33.270 --> 00:00:35.070
and with the newest
Android Gradle plugin,

00:00:35.070 --> 00:00:38.010
we're enabling developers to
use Java 8 language features

00:00:38.010 --> 00:00:40.110
in their code and libraries.

00:00:40.110 --> 00:00:43.110
We have built bytecode
transformations called desugar

00:00:43.110 --> 00:00:44.940
into the default
toolchain, and it

00:00:44.940 --> 00:00:47.730
supports lambdas, method
references, default

00:00:47.730 --> 00:00:51.350
and static interface methods,
and try-with resources,

00:00:51.350 --> 00:00:54.690
and new annotation
types on all API levels.

00:00:54.690 --> 00:00:58.170
The experimental Jack compiler
is now deprecated and migrating

00:00:58.170 --> 00:01:00.920
is as simple as removing
it from your build files.

00:01:00.920 --> 00:01:03.390
With the new Android
Gradle plugin version 3,

00:01:03.390 --> 00:01:05.430
we are also bringing
performance enhancements

00:01:05.430 --> 00:01:08.760
to the build process, such as
delayed dependency resolution,

00:01:08.760 --> 00:01:12.200
more incremental dexing,
and faster sync times.

00:01:12.200 --> 00:01:14.000
We're also bringing
variant awareness

00:01:14.000 --> 00:01:16.400
for library modules,
which unfortunately

00:01:16.400 --> 00:01:18.830
meant we had to make some
breaking changes to our Gradle

00:01:18.830 --> 00:01:19.820
DSL.

00:01:19.820 --> 00:01:22.760
So please follow the migration
steps in the documentation

00:01:22.760 --> 00:01:24.740
when switching to 3.0.

00:01:24.740 --> 00:01:27.620
Especially developers with
large multi-module projects

00:01:27.620 --> 00:01:29.320
should see a
significant decrease

00:01:29.320 --> 00:01:31.514
in build times
with these changes.

00:01:31.514 --> 00:01:32.930
Starting with this
release, we are

00:01:32.930 --> 00:01:36.080
switching to AAPT2 for
resource processing, which

00:01:36.080 --> 00:01:39.410
enables more incremental and
parallelized builds and even

00:01:39.410 --> 00:01:42.320
some potential size savings
in the resources file

00:01:42.320 --> 00:01:44.960
without any changes
required to your projects,

00:01:44.960 --> 00:01:47.440
thanks to automatic version
collapsing, resource

00:01:47.440 --> 00:01:50.930
deduplication, and support for
sparse configurations on minSdk

00:01:50.930 --> 00:01:52.220
26.

00:01:52.220 --> 00:01:54.410
On the IDE side,
we're making changes

00:01:54.410 --> 00:01:58.040
to help developers bring Android
Oreo features to their apps.

00:01:58.040 --> 00:02:01.040
We've added support for font
resources, which you can now

00:02:01.040 --> 00:02:04.390
create and preview in the
Fonts Resource folder.

00:02:04.390 --> 00:02:06.440
The Layout Editor also
lets you pick fonts

00:02:06.440 --> 00:02:08.750
from the Google Fonts
catalog and attach them

00:02:08.750 --> 00:02:10.600
to your projects.

00:02:10.600 --> 00:02:12.910
For creating adaptive
launcher icons introduced

00:02:12.910 --> 00:02:15.580
in Android Oreo,
open the Asset Studio

00:02:15.580 --> 00:02:17.590
and select the foreground
and background images

00:02:17.590 --> 00:02:19.520
that you'd like to use.

00:02:19.520 --> 00:02:21.940
We've also included
Android emulator images

00:02:21.940 --> 00:02:25.390
running Android Oreo so
you can test your changes.

00:02:25.390 --> 00:02:28.210
To make it easier to set
up and maintain CI servers,

00:02:28.210 --> 00:02:30.880
we have also launched
Google's Maven Repo as a place

00:02:30.880 --> 00:02:33.640
where we distribute
Google's build artifacts.

00:02:33.640 --> 00:02:36.020
You can start using it
by adding the Maven Repo

00:02:36.020 --> 00:02:38.380
URL to your Gradle files.

00:02:38.380 --> 00:02:40.510
Debugging performance
problems with your apps

00:02:40.510 --> 00:02:42.710
is also about to
get a lot better,

00:02:42.710 --> 00:02:45.770
thanks to the new unified
Android Profiler in Studio.

00:02:45.770 --> 00:02:49.210
It lets you inspect CPU,
memory, and network usage,

00:02:49.210 --> 00:02:50.980
and includes a
single timeline that

00:02:50.980 --> 00:02:54.370
also shows important app events,
such as keypresses, taps,

00:02:54.370 --> 00:02:55.690
and rotations.

00:02:55.690 --> 00:02:59.080
With advanced profiling,
you can record CPU traces,

00:02:59.080 --> 00:03:00.880
track object
allocations, and dig

00:03:00.880 --> 00:03:03.340
into heap dumps in
the memory profiler

00:03:03.340 --> 00:03:05.710
And this is completely
new, by the way--

00:03:05.710 --> 00:03:07.840
you can show request
and response information

00:03:07.840 --> 00:03:10.660
and payloads for HTTP
calls that were made using

00:03:10.660 --> 00:03:12.700
one of the supported clients.

00:03:12.700 --> 00:03:16.682
For now, we support
HttpURLConnection and OkHttp,

00:03:16.682 --> 00:03:20.440
as well as any client
using these under the hood.

00:03:20.440 --> 00:03:23.980
If you're writing C or
C++ code in another IDE,

00:03:23.980 --> 00:03:25.700
or perhaps you're
using other tools,

00:03:25.700 --> 00:03:28.690
such as game engine
toolkits, to build your APK,

00:03:28.690 --> 00:03:32.290
you can now use Android Studio
native debugger with your app.

00:03:32.290 --> 00:03:34.780
Open the APK for
debugging, attach the debug

00:03:34.780 --> 00:03:36.730
symbols and sources,
and you will

00:03:36.730 --> 00:03:39.880
be able to step through code
just as with an app developed

00:03:39.880 --> 00:03:41.590
inside Studio.

00:03:41.590 --> 00:03:43.450
3.0 is the first
release to support

00:03:43.450 --> 00:03:46.780
creation of Instant Apps
from your Android projects.

00:03:46.780 --> 00:03:48.340
There are two new module types--

00:03:48.340 --> 00:03:50.350
Instant App and Feature.

00:03:50.350 --> 00:03:52.450
Together with a new
refactoring system,

00:03:52.450 --> 00:03:55.200
they help modularize your
app, while the App Links

00:03:55.200 --> 00:03:58.990
Assistant helps set up the
necessary App Links support.

00:03:58.990 --> 00:04:01.230
If you run into any problems
when testing Instant

00:04:01.230 --> 00:04:03.940
App builds, we've
updated the APK analyzer

00:04:03.940 --> 00:04:05.750
to open zip bundles.

00:04:05.750 --> 00:04:06.780
But that's not all.

00:04:06.780 --> 00:04:09.190
APK analyzers DEX
Viewer now supports

00:04:09.190 --> 00:04:12.010
loading ProGuard mapping files
to show removed and retained

00:04:12.010 --> 00:04:15.400
classes and can generate
ProGuard keep rules.

00:04:15.400 --> 00:04:18.430
It also has an improved user
interface showing DEX code

00:04:18.430 --> 00:04:21.220
sizes, lets you
explore method usages,

00:04:21.220 --> 00:04:24.700
inspect bytecode, and
supports multidex.

00:04:24.700 --> 00:04:27.220
Starting with
BuildTools 26.1, you

00:04:27.220 --> 00:04:29.800
can also get all these features
in the brand new command line

00:04:29.800 --> 00:04:31.960
version of the APK
Analyzer, which

00:04:31.960 --> 00:04:34.730
is great for generating
reports and tracking APK size

00:04:34.730 --> 00:04:37.470
regressions on a CI server.

00:04:37.470 --> 00:04:39.990
When working with layouts,
you can now iterate faster

00:04:39.990 --> 00:04:42.720
using the Layout Editor
and Layout Inspector, which

00:04:42.720 --> 00:04:44.910
are both getting some updates.

00:04:44.910 --> 00:04:46.860
The Editor includes
a new error panel

00:04:46.860 --> 00:04:49.950
showing problems such as
missing constraints, and support

00:04:49.950 --> 00:04:51.660
for new constraint
layout features,

00:04:51.660 --> 00:04:55.160
such as barriers, groups,
and enhanced chains creation.

00:04:55.160 --> 00:04:57.570
And the Inspector
received a UI refresh

00:04:57.570 --> 00:04:59.820
and Quick Search for the
Properties list and the View

00:04:59.820 --> 00:05:00.960
Tree.

00:05:00.960 --> 00:05:03.720
If you need to pull files
from a device or emulator,

00:05:03.720 --> 00:05:07.230
try the Device File Explorer,
a much more user friendly way

00:05:07.230 --> 00:05:10.220
to browse the connected
file system than using adb

00:05:10.220 --> 00:05:11.610
from a command line.

00:05:11.610 --> 00:05:14.130
We've also had some important
improvements in the Android

00:05:14.130 --> 00:05:16.710
Emulator since the
last release of Studio,

00:05:16.710 --> 00:05:18.540
and that includes
new system images

00:05:18.540 --> 00:05:21.360
with full Play
Store, OpenGL ES 3.0

00:05:21.360 --> 00:05:25.821
compatibility, a proxy settings
page, and a bug reporting tool.

00:05:25.821 --> 00:05:28.320
There are many, many new things
to play with in this release

00:05:28.320 --> 00:05:29.760
of Android Studio.

00:05:29.760 --> 00:05:31.192
Have fun exploring,
and check out

00:05:31.192 --> 00:05:33.150
the other videos detailing
some of the features

00:05:33.150 --> 00:05:35.030
in this release.

