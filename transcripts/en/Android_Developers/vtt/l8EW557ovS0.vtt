WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:02.940
SPEAKER 1: I'm going to start
talking about Google Play

00:00:02.940 --> 00:00:04.380
Instant.

00:00:04.380 --> 00:00:07.790
That was announced at GDC.

00:00:07.790 --> 00:00:13.310
And Google Play Instant is
all about [? means to ?]

00:00:13.310 --> 00:00:19.550
[? gratification. ?] It's
about getting the user

00:00:19.550 --> 00:00:22.890
in your experience
as fast as possible.

00:00:22.890 --> 00:00:27.970
In today's world, you can think,
I send a message to my mom

00:00:27.970 --> 00:00:30.180
and I tell her, try
out this new game.

00:00:30.180 --> 00:00:32.020
She opens the link.

00:00:32.020 --> 00:00:33.600
She goes to the Play Store.

00:00:33.600 --> 00:00:35.700
She presses the Install button.

00:00:35.700 --> 00:00:40.710
The game starts installing,
slowly, and slowly.

00:00:40.710 --> 00:00:44.520
Then she forgets about the game.

00:00:44.520 --> 00:00:45.900
She goes to the oven.

00:00:45.900 --> 00:00:48.247
There was dinner cooking.

00:00:48.247 --> 00:00:49.830
She completely forgets
about the game.

00:00:49.830 --> 00:00:51.330
She never opens the game again.

00:00:51.330 --> 00:00:52.750
Now here's the thing.

00:00:52.750 --> 00:00:56.430
If you think about
the abandonment rate--

00:00:56.430 --> 00:00:59.040
the number of people that
starts installing a game

00:00:59.040 --> 00:01:01.911
and actually plays the game--

00:01:01.911 --> 00:01:04.410
the number of people who don't
play the game at all-- forget

00:01:04.410 --> 00:01:06.300
about installation--
is very, very high.

00:01:06.300 --> 00:01:07.758
If you think about
the number, it's

00:01:07.758 --> 00:01:11.340
probably higher than the number
you're thinking about now.

00:01:11.340 --> 00:01:13.410
Now, we are taking
this problem here

00:01:13.410 --> 00:01:15.250
at Google with
Google Play Instant.

00:01:15.250 --> 00:01:19.260
And in this new world,
I send a link to my mom.

00:01:19.260 --> 00:01:20.280
She opens the link.

00:01:20.280 --> 00:01:22.380
And instead of going
to the Play Store,

00:01:22.380 --> 00:01:27.270
she starts immediately into
the game-- in a few seconds,

00:01:27.270 --> 00:01:28.500
the game starts running.

00:01:28.500 --> 00:01:32.840
And it's downloading
in native application

00:01:32.840 --> 00:01:35.590
with no installation whatsoever.

00:01:35.590 --> 00:01:37.380
So there's no more
friction there.

00:01:37.380 --> 00:01:39.630
Now my mom is playing.

00:01:39.630 --> 00:01:41.650
She forgets about dinner.

00:01:41.650 --> 00:01:43.244
And I don't have dinner.

00:01:43.244 --> 00:01:44.910
It happened quite a
few times, actually.

00:01:47.650 --> 00:01:50.850
The key points
here are, the code

00:01:50.850 --> 00:01:53.910
that is being downloaded
for a Google Play Instant

00:01:53.910 --> 00:01:56.710
application-- game in our
case-- is native code.

00:01:56.710 --> 00:01:59.090
It's not JavaScript in
their virtual machine.

00:01:59.090 --> 00:02:00.270
It's native code.

00:02:00.270 --> 00:02:04.650
And it does have access
to almost everything

00:02:04.650 --> 00:02:07.710
that a normal application
has access to.

00:02:07.710 --> 00:02:10.794
And we're going to see examples.

00:02:10.794 --> 00:02:14.310
Now Matt from Zynga
implemented Instant Game,

00:02:14.310 --> 00:02:18.874
and is going to talk
about their experience.

00:02:18.874 --> 00:02:19.790
MATT SAMET: All right.

00:02:19.790 --> 00:02:21.580
So, hello.

00:02:21.580 --> 00:02:22.790
My name is Matt Samet.

00:02:22.790 --> 00:02:25.570
I'm a senior technical
manager in Zynga's Strategic

00:02:25.570 --> 00:02:27.730
Partnerships Group,
which basically

00:02:27.730 --> 00:02:31.450
means that I help manage the
relationships with our platform

00:02:31.450 --> 00:02:36.450
and development
partners, such as Google.

00:02:36.450 --> 00:02:38.800
And here's what I'll
be talking about today.

00:02:38.800 --> 00:02:41.700
So [? Fran ?] gave
you a quick recap

00:02:41.700 --> 00:02:43.620
of what the platform
is all about.

00:02:43.620 --> 00:02:45.720
But I'll cover why
we're on the platform

00:02:45.720 --> 00:02:47.850
and what really
excites us about it.

00:02:51.290 --> 00:02:53.650
And then I'll show you a quick
look of each of the three

00:02:53.650 --> 00:02:55.030
Instant games we made.

00:02:55.030 --> 00:02:57.910
And then I'll kind of
cover how we made them

00:02:57.910 --> 00:03:01.680
and go into a few of
the technical details.

00:03:01.680 --> 00:03:05.140
And then I will talk about
some key takeaways and things

00:03:05.140 --> 00:03:08.170
to remember when you're
building your own Instant games.

00:03:08.170 --> 00:03:11.230
And there'll be some time at the
end, hopefully, for questions.

00:03:15.520 --> 00:03:18.430
So this is basically why
we're on the platform.

00:03:18.430 --> 00:03:20.500
This is what it's all about.

00:03:20.500 --> 00:03:23.140
There's a huge potential
to boost your installs

00:03:23.140 --> 00:03:27.220
for your game, and to then get
your game seen by many more

00:03:27.220 --> 00:03:31.390
people who may not have
seen it, or who may not

00:03:31.390 --> 00:03:32.650
get the opportunity to see it.

00:03:36.030 --> 00:03:38.620
And you can sidestep some of
the drop offs that you see,

00:03:38.620 --> 00:03:41.410
when you acquire users
on the Play Store.

00:03:41.410 --> 00:03:44.920
For example, if you have
a really large game,

00:03:44.920 --> 00:03:49.210
you get that prompt, if you're
not on Wi-Fi you may want

00:03:49.210 --> 00:03:53.290
to avoid downloading
this game on cellular--

00:03:53.290 --> 00:03:57.010
all those things, those
are friction points,

00:03:57.010 --> 00:03:58.250
those are funnel drop offs.

00:03:58.250 --> 00:04:02.710
So with Instant, you can
really sidestep those.

00:04:02.710 --> 00:04:05.534
And also, if people
aren't ready to commit

00:04:05.534 --> 00:04:07.450
to downloading your game
for whatever reason--

00:04:07.450 --> 00:04:09.590
maybe they want to try it out.

00:04:09.590 --> 00:04:13.060
Maybe they don't know what the
full experience is going to be.

00:04:13.060 --> 00:04:16.130
You can give them a trial.

00:04:16.130 --> 00:04:18.430
And in fact, you don't
really have to acquire users

00:04:18.430 --> 00:04:19.837
from the Play Store at all.

00:04:19.837 --> 00:04:21.670
And that's one of the
really exciting things

00:04:21.670 --> 00:04:25.480
about this platform, is that
you can kind of creatively

00:04:25.480 --> 00:04:27.970
distribute these games on
different channels that

00:04:27.970 --> 00:04:35.980
were unavailable for mobile
game distribution, previously.

00:04:35.980 --> 00:04:38.420
So our goals,
getting started, were

00:04:38.420 --> 00:04:41.440
to build something that
allows us to really understand

00:04:41.440 --> 00:04:43.450
what development and
publishing looks like

00:04:43.450 --> 00:04:46.180
on this new platform.

00:04:46.180 --> 00:04:48.970
And hopefully we'll see
the tangible benefits

00:04:48.970 --> 00:04:53.650
of actually making these
products to our DAU

00:04:53.650 --> 00:04:55.390
and installs.

00:04:55.390 --> 00:04:58.060
So that was the main goal.

00:04:58.060 --> 00:05:00.490
The way we do that
is we really focus

00:05:00.490 --> 00:05:02.950
on getting the user into
the Instant experience

00:05:02.950 --> 00:05:04.700
as quickly as possible.

00:05:04.700 --> 00:05:09.580
And then we show them how fun
the game is, right up front.

00:05:09.580 --> 00:05:11.110
And then when we
feel that they've

00:05:11.110 --> 00:05:14.560
gotten a good sense of what the
full experience is going to be,

00:05:14.560 --> 00:05:16.990
we try to get them to
install the full game

00:05:16.990 --> 00:05:18.220
from within the Instant game.

00:05:21.260 --> 00:05:24.110
So let's talk about
what we built.

00:05:24.110 --> 00:05:26.390
We started Zynga
Solitaire, which

00:05:26.390 --> 00:05:31.810
is a super simple
solitaire game,

00:05:31.810 --> 00:05:34.880
written in Java
with Android Studio.

00:05:34.880 --> 00:05:37.790
Pretty standard solitaire game.

00:05:37.790 --> 00:05:41.010
Nothing too special.

00:05:41.010 --> 00:05:42.890
So this was an obvious
choice because it

00:05:42.890 --> 00:05:44.480
was a very simple
game, and we wanted

00:05:44.480 --> 00:05:49.850
to get started with a simple use
case for learning the platform.

00:05:49.850 --> 00:05:51.740
So for Google Play
Instant, we're

00:05:51.740 --> 00:05:56.010
able to fit the entire game
into the Instant experience.

00:05:56.010 --> 00:05:58.040
So you can play it instantly.

00:05:58.040 --> 00:06:01.770
And if you want a new game,
we prompt you to install.

00:06:01.770 --> 00:06:04.400
So, pretty straightforward.

00:06:04.400 --> 00:06:07.940
And this was a single
developer, just me.

00:06:07.940 --> 00:06:10.700
It took me about three
days to get started,

00:06:10.700 --> 00:06:16.900
and about a week after that to
have it ready for publishing.

00:06:16.900 --> 00:06:21.360
So then we wanted to expand a
bit with one of our top games,

00:06:21.360 --> 00:06:23.670
Words With Friends 2.

00:06:23.670 --> 00:06:27.870
So this is a very popular
social word tile game,

00:06:27.870 --> 00:06:32.520
written in Java and
c++ with Cocos2d-x.

00:06:32.520 --> 00:06:36.190
So for Instant, we took the
game's Solo Series Ladder,

00:06:36.190 --> 00:06:39.690
which is the game's
single player experience,

00:06:39.690 --> 00:06:43.320
and we made that the focus,
so that players can really

00:06:43.320 --> 00:06:46.590
get a taste of the full game
and what it's all about just

00:06:46.590 --> 00:06:49.036
by clicking Try Now.

00:06:49.036 --> 00:06:50.610
And you play against bots.

00:06:50.610 --> 00:06:53.490
And we drop you right into
the game board, right away.

00:06:53.490 --> 00:06:57.670
And you experience the fun game
play as quickly as possible.

00:06:57.670 --> 00:07:00.120
And once you beat a few
levels of the solo series,

00:07:00.120 --> 00:07:03.992
you can install the full game.

00:07:03.992 --> 00:07:05.450
And the Words With
Friends team had

00:07:05.450 --> 00:07:08.000
two engineers working on
this for about a total

00:07:08.000 --> 00:07:08.870
of four weeks.

00:07:11.980 --> 00:07:14.670
So then we really wanted to
challenge ourselves and see

00:07:14.670 --> 00:07:17.400
what can we do on the platform.

00:07:17.400 --> 00:07:19.510
What's possible?

00:07:19.510 --> 00:07:23.580
So CSR 2 is an immersive
3D street racing

00:07:23.580 --> 00:07:26.790
game built in Unity.

00:07:26.790 --> 00:07:30.090
It's got state of the
art graphics, relatively

00:07:30.090 --> 00:07:33.060
demanding, high fidelity game.

00:07:33.060 --> 00:07:36.400
And we have a lot of really
fine attention to detail.

00:07:36.400 --> 00:07:39.450
We work directly with
the car manufacturers

00:07:39.450 --> 00:07:43.080
to get extremely
detailed car models.

00:07:43.080 --> 00:07:48.150
So the full game is
about 1.3 gigabytes,

00:07:48.150 --> 00:07:52.650
so fairly significant
on the download size.

00:07:52.650 --> 00:07:56.210
But with Instant, we can
ensure we get maximum reach

00:07:56.210 --> 00:07:59.790
and get players excited
before committing

00:07:59.790 --> 00:08:02.700
to that full download.

00:08:02.700 --> 00:08:06.420
So what we did was, we
did a showroom experience.

00:08:06.420 --> 00:08:09.090
And we're showcasing
a single car

00:08:09.090 --> 00:08:11.310
from the latest downloadable
content available

00:08:11.310 --> 00:08:14.220
in the full game.

00:08:14.220 --> 00:08:18.180
And you can explore the car
in full graphic fidelity.

00:08:18.180 --> 00:08:19.740
You can spin around the car.

00:08:19.740 --> 00:08:22.230
You can scale it up and down.

00:08:22.230 --> 00:08:23.520
It's actually interactive.

00:08:23.520 --> 00:08:25.440
You can open and close
the doors and the hood

00:08:25.440 --> 00:08:29.760
and generally see what you're
going to get in the full game,

00:08:29.760 --> 00:08:32.100
as far as the fidelity goes.

00:08:32.100 --> 00:08:37.350
We also added AR mode,
which is a feature

00:08:37.350 --> 00:08:39.270
available in the full game.

00:08:39.270 --> 00:08:42.059
It's powered by AR Core.

00:08:42.059 --> 00:08:46.740
And this is great for getting
really up close and personal

00:08:46.740 --> 00:08:49.680
with the cars, doing
some fun stuff.

00:08:49.680 --> 00:08:53.250
Like, there's my Lamborghini
parked next to my other car.

00:08:57.580 --> 00:09:01.590
I put a Lamborghini on my
desk inside, because why not?

00:09:08.440 --> 00:09:11.710
So let's see how each
of these were done.

00:09:11.710 --> 00:09:13.330
Go into depth here a little bit.

00:09:15.870 --> 00:09:18.200
First, let's talk some
about the requirements

00:09:18.200 --> 00:09:20.662
of being on the Google
Play Instant platform.

00:09:20.662 --> 00:09:22.370
So the most significant
thing that you're

00:09:22.370 --> 00:09:26.430
going to have to deal with is
that 10 meg initial APK limit.

00:09:29.420 --> 00:09:32.810
It can also be the
hardest to overcome,

00:09:32.810 --> 00:09:34.670
which is why it's so
important to focus

00:09:34.670 --> 00:09:41.690
on the absolute core gameplay
experience that really captures

00:09:41.690 --> 00:09:45.680
what the essence of the game is.

00:09:45.680 --> 00:09:49.370
So you can download as much as
you want after the game starts

00:09:49.370 --> 00:09:53.780
running, but the initial
APK that users download has

00:09:53.780 --> 00:09:57.450
to be under 10 megs.

00:09:57.450 --> 00:10:00.900
So, these experiences run
on Android L and above.

00:10:00.900 --> 00:10:03.790
That's 5.0 and above.

00:10:03.790 --> 00:10:08.850
If you use OpenGL ES for
any of your graphics,

00:10:08.850 --> 00:10:11.400
and if you do 3D graphics,
if you use GL ES,

00:10:11.400 --> 00:10:13.930
it has to be 2.0.

00:10:13.930 --> 00:10:15.540
3.0 is not supported yet.

00:10:20.980 --> 00:10:25.440
That thing on the lower left
is actually Push Notifications.

00:10:25.440 --> 00:10:27.220
They are not available
on the platform.

00:10:27.220 --> 00:10:33.790
So there's no obvious way
to reengage your users.

00:10:33.790 --> 00:10:37.170
So that's why we kind
of focus on getting

00:10:37.170 --> 00:10:39.300
the user into Instant,
and then as soon as they

00:10:39.300 --> 00:10:41.430
get a sense for the
gameplay, we try

00:10:41.430 --> 00:10:46.390
to drive them to install
as quickly as possible.

00:10:46.390 --> 00:10:49.710
So you have a few other
things, like a reduced set

00:10:49.710 --> 00:10:51.210
of permissions.

00:10:51.210 --> 00:10:55.840
For example, you can't request
external storage permissions,

00:10:55.840 --> 00:10:57.150
things like that.

00:10:57.150 --> 00:11:01.230
You need to use HTTPS for
all of your network calls.

00:11:01.230 --> 00:11:04.470
And there's a few Android
APIs that are not available--

00:11:04.470 --> 00:11:08.970
things like getting persistent
IDs and stuff like that.

00:11:12.100 --> 00:11:16.800
And finally, when
you build your game,

00:11:16.800 --> 00:11:19.590
you need to use a relatively
recent version of Gradle

00:11:19.590 --> 00:11:26.350
that supports the Instant
App structures and features.

00:11:29.540 --> 00:11:34.760
So this is a little
bit about Solitaire.

00:11:34.760 --> 00:11:38.240
You may or may not be familiar
with the diagram on the side,

00:11:38.240 --> 00:11:41.960
but this comes from the Google
Instant Apps documentation.

00:11:41.960 --> 00:11:48.020
Basically, you have
features which are basically

00:11:48.020 --> 00:11:52.670
a unit of functionality or
game play in your game or app.

00:11:52.670 --> 00:11:54.650
And then you have your
Instant App module,

00:11:54.650 --> 00:11:56.300
which depends on features.

00:11:56.300 --> 00:11:58.220
And you have your
regular app module.

00:11:58.220 --> 00:12:02.030
So you have a unified
build that can actually

00:12:02.030 --> 00:12:07.670
target both platforms,
Instant and installable.

00:12:07.670 --> 00:12:12.650
So for Solitaire, we're actually
able to refactor the Android

00:12:12.650 --> 00:12:18.410
Studio project into a simplified
version of this diagram.

00:12:18.410 --> 00:12:20.870
Namely, we're able to
fit the entire game

00:12:20.870 --> 00:12:25.700
into just the single base
feature, which is not typical.

00:12:25.700 --> 00:12:30.530
Usually, you wouldn't
have your full game

00:12:30.530 --> 00:12:32.760
available as an
Instant App, usually.

00:12:32.760 --> 00:12:36.380
But for this one it turned out
to be so small that we could

00:12:36.380 --> 00:12:39.960
put the entire thing in there.

00:12:39.960 --> 00:12:42.530
So the game was already
relatively small.

00:12:42.530 --> 00:12:44.370
It's just a standard
Solitaire game.

00:12:44.370 --> 00:12:49.740
So we enabled asset minification
and a few other settings.

00:12:49.740 --> 00:12:52.620
And it fit pretty much
right into 8 megabytes.

00:12:52.620 --> 00:12:55.320
So not too much to
worry about there.

00:12:55.320 --> 00:12:58.740
One of the challenges
that I had to overcome

00:12:58.740 --> 00:13:04.440
when doing this game was
upgrading an older Gradle build

00:13:04.440 --> 00:13:05.820
script--

00:13:05.820 --> 00:13:08.100
actually, a set of older
Gradle build scripts,

00:13:08.100 --> 00:13:10.110
to the later Gradle version.

00:13:10.110 --> 00:13:14.490
And I hadn't had much experience
with Gradle before this.

00:13:14.490 --> 00:13:18.570
And there is a fairly large
jump in required changes

00:13:18.570 --> 00:13:19.650
between the two versions.

00:13:19.650 --> 00:13:24.810
So just getting familiar with
all those changes was really

00:13:24.810 --> 00:13:30.307
helpful in getting familiar
with the required things

00:13:30.307 --> 00:13:31.890
you have to do to
make an Instant App.

00:13:31.890 --> 00:13:34.500
And also it helped with
our other Instant Apps

00:13:34.500 --> 00:13:37.920
that we did after Solitaire.

00:13:37.920 --> 00:13:39.900
And then, when I
was ready to submit

00:13:39.900 --> 00:13:43.020
to the alpha track
on the Play Console,

00:13:43.020 --> 00:13:45.480
going through the process was
really helpful, because it

00:13:45.480 --> 00:13:49.980
turns out, when you
submit an Instant App,

00:13:49.980 --> 00:13:52.470
it will probably tell
you some of the things

00:13:52.470 --> 00:13:54.370
that you might not
have done correctly.

00:13:54.370 --> 00:13:57.990
For example, supporting
Android app links

00:13:57.990 --> 00:14:03.120
and linking your
app to your website

00:14:03.120 --> 00:14:06.580
that you own with a
digital asset links file.

00:14:06.580 --> 00:14:13.420
So getting that whole process
understood really well

00:14:13.420 --> 00:14:14.730
was really helpful as well.

00:14:19.230 --> 00:14:22.470
And then Words With Friends
was actually relatively easy,

00:14:22.470 --> 00:14:24.510
which kind of says a lot.

00:14:24.510 --> 00:14:28.170
Most of the work was specific
to the game and to Zynga code.

00:14:28.170 --> 00:14:33.270
Not too many dependencies on the
Instant App runtime or Android.

00:14:33.270 --> 00:14:35.762
So that was good.

00:14:35.762 --> 00:14:38.760
And we didn't really have
to optimize it that much--

00:14:38.760 --> 00:14:43.880
you know, removing some
unneeded SDKs, things like that.

00:14:43.880 --> 00:14:47.330
And when we focused on
the core experience, which

00:14:47.330 --> 00:14:51.210
is that solo series, we
got to kind of remove

00:14:51.210 --> 00:14:54.000
a whole bunch of other parts
of the game that contributed

00:14:54.000 --> 00:14:58.260
a lot to the size, especially
with texture atlases and game

00:14:58.260 --> 00:15:01.399
modes, things like that.

00:15:01.399 --> 00:15:02.940
And when we removed
all those things,

00:15:02.940 --> 00:15:06.150
that pretty much got us within
striking distance of the 10 meg

00:15:06.150 --> 00:15:06.650
limit.

00:15:10.680 --> 00:15:15.180
So when we started
working on CSR2,

00:15:15.180 --> 00:15:19.200
this kind of summed up
what we were thinking.

00:15:19.200 --> 00:15:24.240
Not an obvious path from
1.3 gigs down to 10 megs.

00:15:27.460 --> 00:15:33.080
But the solution was pretty much
the same as for other games--

00:15:33.080 --> 00:15:37.020
we wanted to refocus on really
the core of the game, what

00:15:37.020 --> 00:15:40.780
makes the game fun, or the
essence of the full game.

00:15:40.780 --> 00:15:46.030
And this image is
pretty accurate.

00:15:46.030 --> 00:15:51.660
It turns out that we scaled
down the game quite extensively,

00:15:51.660 --> 00:15:56.130
and we ripped out most of it.

00:15:56.130 --> 00:15:58.020
So originally, what
we were going to do

00:15:58.020 --> 00:16:02.460
was a playable race
from the tutorial level.

00:16:02.460 --> 00:16:05.970
But we decided to pare it
down, because it's not just

00:16:05.970 --> 00:16:07.530
about the race.

00:16:07.530 --> 00:16:10.620
Actually, what makes it fun
is all the other things,

00:16:10.620 --> 00:16:15.990
like collecting your cars,
customizing them, seeing them

00:16:15.990 --> 00:16:17.550
in their extreme detail.

00:16:17.550 --> 00:16:20.010
So a showroom can do that.

00:16:20.010 --> 00:16:23.460
And it was within our grasp for
the initial attempt at this.

00:16:23.460 --> 00:16:27.270
And that's kind of
what we focused on.

00:16:27.270 --> 00:16:31.110
And we basically removed
absolutely everything else

00:16:31.110 --> 00:16:33.750
from the game, which
was quite a lot.

00:16:33.750 --> 00:16:36.900
And we had a lot of
fun doing it as well.

00:16:36.900 --> 00:16:41.040
We had commit messages that
were like, now down to 700 megs.

00:16:41.040 --> 00:16:43.110
And now down to 400 megs.

00:16:43.110 --> 00:16:46.980
So we had some fun with it.

00:16:46.980 --> 00:16:51.620
So a few other things that
we had to keep in mind.

00:16:51.620 --> 00:16:55.100
The game relied pretty heavily
on Android expansion files.

00:16:55.100 --> 00:17:01.220
These are so-called OBB files,
because, your APK can only

00:17:01.220 --> 00:17:06.470
be 100 megs, I think, or
somewhere around there.

00:17:06.470 --> 00:17:10.670
Obviously, the bulk of it had
to be in the expansion files.

00:17:10.670 --> 00:17:15.530
And because this is all
about Instant downloads--

00:17:15.530 --> 00:17:17.450
relatively instant--

00:17:17.450 --> 00:17:21.380
you can't download several
hundred megabytes of data.

00:17:21.380 --> 00:17:23.839
OBBs are not available
on the platform.

00:17:23.839 --> 00:17:27.680
So, turns out that we needed
to completely re-architect

00:17:27.680 --> 00:17:29.960
the way that the
game loaded assets,

00:17:29.960 --> 00:17:34.130
because there's not an
expectation of the OBB file

00:17:34.130 --> 00:17:35.360
being there anymore.

00:17:37.880 --> 00:17:42.260
So it turns out, we rewrote
the asset loader to load things

00:17:42.260 --> 00:17:45.770
locally from resources.

00:17:45.770 --> 00:17:51.590
The game used GL ES3
to render the cars.

00:17:51.590 --> 00:17:54.620
Specifically, it needed
a particular GL extension

00:17:54.620 --> 00:17:59.810
that was more prevalent on
devices that supported GL ES3.

00:17:59.810 --> 00:18:04.190
And given that the platform
only supports GL ES2,

00:18:04.190 --> 00:18:06.560
this is something we
had to think about.

00:18:06.560 --> 00:18:08.720
We never really got
around the issue,

00:18:08.720 --> 00:18:11.310
just due to lack of time
and a few other things.

00:18:11.310 --> 00:18:14.866
But this was mainly a prototype.

00:18:14.866 --> 00:18:17.240
So, fortunately, we didn't
have to really worry about it.

00:18:21.700 --> 00:18:25.040
When building the game, Unity
outputs a Gradle project.

00:18:25.040 --> 00:18:28.750
This Gradle project has no
idea what an Instant App is.

00:18:28.750 --> 00:18:32.980
So this is something I
believe is being worked on,

00:18:32.980 --> 00:18:35.300
but don't quote me on it.

00:18:35.300 --> 00:18:38.110
But for what we
had to do here, we

00:18:38.110 --> 00:18:43.750
had to basically manually
modify the Gradle scripts,

00:18:43.750 --> 00:18:48.250
add references to
all of the feature

00:18:48.250 --> 00:18:51.700
targets, the
refactoring the modules.

00:18:51.700 --> 00:18:54.340
This game was
relatively involved

00:18:54.340 --> 00:18:57.460
because it used a lot of
third party libraries,

00:18:57.460 --> 00:18:59.680
a lot of native libraries.

00:18:59.680 --> 00:19:03.160
So all of that had to be
tied into the Gradle setup.

00:19:12.450 --> 00:19:14.610
Let's talk about a few
things to keep in mind

00:19:14.610 --> 00:19:18.330
when you're developing
your own Instant games.

00:19:18.330 --> 00:19:21.960
So one of the most important
things to keep in mind

00:19:21.960 --> 00:19:24.960
is to keep things focused
on the core of what

00:19:24.960 --> 00:19:27.210
makes your game fun.

00:19:27.210 --> 00:19:29.280
It really helps with
optimizing the size,

00:19:29.280 --> 00:19:33.750
but it also ensures the user
is enjoying the experience

00:19:33.750 --> 00:19:36.730
right from the get go.

00:19:36.730 --> 00:19:38.280
I forgot where,
but somebody said

00:19:38.280 --> 00:19:43.860
that there's a less than
10 second window from when

00:19:43.860 --> 00:19:48.310
a user tries a brand new game
before they lose interest.

00:19:48.310 --> 00:19:51.030
So if you don't capture
their excitement

00:19:51.030 --> 00:19:54.900
within that 10 seconds, then
they might lose interest.

00:19:54.900 --> 00:19:57.240
I'm not sure how
exactly true that is,

00:19:57.240 --> 00:19:58.410
or how you can verify it.

00:19:58.410 --> 00:20:01.160
But there is clearly
something there

00:20:01.160 --> 00:20:04.410
that you need to optimize for.

00:20:04.410 --> 00:20:08.210
So if your game loads
data at runtime,

00:20:08.210 --> 00:20:13.250
it might be a good idea to show
the user something quickly,

00:20:13.250 --> 00:20:16.070
to hide that load
in the background.

00:20:16.070 --> 00:20:18.530
If it's not the first
level of gameplay,

00:20:18.530 --> 00:20:20.660
then at least some
kind of loading bar

00:20:20.660 --> 00:20:25.160
or something for the user
to see and engage with as

00:20:25.160 --> 00:20:27.400
they're waiting.

00:20:27.400 --> 00:20:31.940
And it's always a good idea
to test early and often,

00:20:31.940 --> 00:20:34.070
especially on device
and especially

00:20:34.070 --> 00:20:38.630
across both Android 7 and
Android 8, because the Instant

00:20:38.630 --> 00:20:41.270
App runtime is actually
implemented differently

00:20:41.270 --> 00:20:46.200
on each of those OS versions.

00:20:46.200 --> 00:20:48.660
And you can have bugs on
one and not the other.

00:20:48.660 --> 00:20:51.560
So it's important to
keep that in mind.

00:20:51.560 --> 00:20:54.770
And submitting an early
build to the Play Console

00:20:54.770 --> 00:20:59.000
under the internal
or alpha track

00:20:59.000 --> 00:21:02.390
will really help, because it
will surface errors early.

00:21:02.390 --> 00:21:07.550
You kind of want to
get those under wraps.

00:21:07.550 --> 00:21:11.327
And you want to get them
fixed as quickly as possible,

00:21:11.327 --> 00:21:13.910
because you don't want to wait
until your game is about to hit

00:21:13.910 --> 00:21:19.010
production and there's
some weird error that

00:21:19.010 --> 00:21:25.760
gets surfaced to you right
as you're trying to submit.

00:21:25.760 --> 00:21:29.410
And it's always a good
idea to write your game

00:21:29.410 --> 00:21:31.600
in a flexible way.

00:21:31.600 --> 00:21:34.300
Ideally, you can
make it data driven.

00:21:34.300 --> 00:21:36.130
This especially
applies if you're

00:21:36.130 --> 00:21:38.860
working on a brand new game.

00:21:38.860 --> 00:21:41.680
It really helps,
because it's easier

00:21:41.680 --> 00:21:45.640
to restructure the app for
when you do an Instant game,

00:21:45.640 --> 00:21:48.287
because it's usually pretty
different, product wise,

00:21:48.287 --> 00:21:49.120
from the full thing.

00:21:51.640 --> 00:21:55.720
And, in our experience,
several third party SDKs

00:21:55.720 --> 00:21:59.320
were only partially
compatible with Instant Apps.

00:21:59.320 --> 00:22:01.510
This is a situation
that's always improving.

00:22:01.510 --> 00:22:04.570
And it's probably vastly
different from when we started.

00:22:04.570 --> 00:22:09.800
But it's never a bad idea
to check your third party

00:22:09.800 --> 00:22:12.320
dependencies.

00:22:12.320 --> 00:22:16.840
And since nobody likes
writing duplicate code,

00:22:16.840 --> 00:22:19.720
if you can share it
with your main app,

00:22:19.720 --> 00:22:21.340
it's always a good idea.

00:22:21.340 --> 00:22:23.410
You also get the
benefit of free access

00:22:23.410 --> 00:22:26.590
to any updates made
to your main game.

00:22:26.590 --> 00:22:28.690
They will just filter down
into the Instant game.

00:22:32.570 --> 00:22:35.660
So that's pretty much all I had.

00:22:35.660 --> 00:22:36.170
Thank you.

00:22:36.170 --> 00:22:38.470
If you have any questions,
happy to answer.

00:22:53.600 --> 00:22:54.160
AUDIENCE: Hi.

00:22:54.160 --> 00:22:55.840
Thanks for the talk.

00:22:55.840 --> 00:22:58.660
Just wondering if you can,
or anyone from Google can,

00:22:58.660 --> 00:23:02.480
share any stats on
how that improves

00:23:02.480 --> 00:23:06.050
the install rate of funnel.

00:23:06.050 --> 00:23:08.380
MATT SAMET: That is,
unfortunately, the only thing

00:23:08.380 --> 00:23:09.340
I can't talk about.

00:23:13.010 --> 00:23:14.595
I'm trying to think.

00:23:14.595 --> 00:23:19.940
SPEAKER 1: I can say it's
significant for all the games

00:23:19.940 --> 00:23:22.874
that were talked about.

00:23:22.874 --> 00:23:26.300
It's not bad.

00:23:26.300 --> 00:23:30.240
AUDIENCE: But you can actually
see the stats of installs

00:23:30.240 --> 00:23:34.640
from the store directly, and
separate it from the ones

00:23:34.640 --> 00:23:36.230
through Instant, right?

00:23:36.230 --> 00:23:37.130
SPEAKER 1: Correct.

00:23:37.130 --> 00:23:41.220
MATT SAMET: If you look at
Google's developer day keynote

00:23:41.220 --> 00:23:45.300
presentation at GDC, I
believe they did talk

00:23:45.300 --> 00:23:46.450
about that a little bit.

00:23:46.450 --> 00:23:49.290
And they talked about, for
the early launch partners,

00:23:49.290 --> 00:23:53.907
kind of what lift they all got.

00:23:53.907 --> 00:23:56.490
SPEAKER 1: There's also going
to be any other talk [INAUDIBLE]

00:23:56.490 --> 00:23:59.527
where they're going to
share more information.

00:23:59.527 --> 00:24:00.360
AUDIENCE: Thank you.

00:24:08.732 --> 00:24:10.190
AUDIENCE: You said
you stripped out

00:24:10.190 --> 00:24:12.170
some of the bug
reporting architectures.

00:24:12.170 --> 00:24:14.070
Are you still getting
some bug reporting?

00:24:14.070 --> 00:24:16.910
Are you still getting metrics
on users in the instant run?

00:24:16.910 --> 00:24:17.618
MATT SAMET: Yeah.

00:24:17.618 --> 00:24:19.410
We left one in.

00:24:19.410 --> 00:24:23.360
It turns out, there
was more than one.

00:24:23.360 --> 00:24:23.959
Why?

00:24:23.959 --> 00:24:24.500
I'm not sure.

00:24:24.500 --> 00:24:26.583
AUDIENCE: And are you still
able to gather metrics

00:24:26.583 --> 00:24:28.982
from within the Instant play?

00:24:28.982 --> 00:24:29.690
MATT SAMET: Yeah.

00:24:29.690 --> 00:24:34.010
These are standard.

00:24:34.010 --> 00:24:36.530
They're pretty much
just like normal apps.

00:24:36.530 --> 00:24:40.550
You can run all those libraries
and get the same data.

00:24:51.050 --> 00:24:57.560
AUDIENCE: So my Samsung Galaxy
S8 doesn't show the Try Now.

00:24:57.560 --> 00:24:59.990
Any idea why that might be?

00:24:59.990 --> 00:25:01.420
MATT SAMET: For which game?

00:25:01.420 --> 00:25:03.030
AUDIENCE: For Words
With Friends 2.

00:25:06.210 --> 00:25:08.910
MATT SAMET: I think
I know why that is.

00:25:08.910 --> 00:25:15.270
That's a bug that just
surfaced last week.

00:25:15.270 --> 00:25:17.730
But it normally does.

00:25:17.730 --> 00:25:21.884
AUDIENCE: So it might show
up in another week or so.

00:25:21.884 --> 00:25:22.550
MATT SAMET: Yes.

00:25:22.550 --> 00:25:27.810
If you actually send
yourself an email to the URL

00:25:27.810 --> 00:25:34.260
that we used, to our games
page, for Words With Friends,

00:25:34.260 --> 00:25:38.520
and you click on that link,
in, for example, your GMail app

00:25:38.520 --> 00:25:42.060
or something, it will actually
launch the app that way

00:25:42.060 --> 00:25:42.610
as well.

00:25:42.610 --> 00:25:45.210
You don't need to be on the Play
Store to launch these things.

00:25:45.210 --> 00:25:47.650
You can actually launch
them from anywhere

00:25:47.650 --> 00:25:48.734
you can click a link.

00:25:48.734 --> 00:25:49.400
AUDIENCE: Sorry.

00:25:49.400 --> 00:25:53.040
I just wanted to answer
the question quickly.

00:25:53.040 --> 00:26:00.140
Right now, Instant Game
doesn't work on the 8.0.0.

00:26:00.140 --> 00:26:04.530
Your Galaxy S8 is probably
8.0.0 on the [? regression. ?]

00:26:04.530 --> 00:26:08.380
So you need to wait
for an update to 8.1.

00:26:08.380 --> 00:26:13.650
SPEAKER 1: Also make sure
that Instant Apps are enabled.

00:26:13.650 --> 00:26:16.680
MATT SAMET: Which they should
be, by default, I think.

00:26:16.680 --> 00:26:19.374
But it's always good to check.

00:26:19.374 --> 00:26:21.290
AUDIENCE: So with your
Instant app with Unity,

00:26:21.290 --> 00:26:23.564
did you actually
make a separate app,

00:26:23.564 --> 00:26:24.980
because you'll be
sharing the game

00:26:24.980 --> 00:26:25.970
code and that sort of stuff?

00:26:25.970 --> 00:26:27.230
Because you were
talking stripping out

00:26:27.230 --> 00:26:28.190
that many libraries.

00:26:28.190 --> 00:26:30.023
Did you actually make
a separate app for it,

00:26:30.023 --> 00:26:33.420
or did you do a subset of?

00:26:33.420 --> 00:26:36.110
MATT SAMET: It's
an extreme subset.

00:26:36.110 --> 00:26:40.010
It's basically
sharing the same code.

00:26:40.010 --> 00:26:42.170
It's branched.

00:26:42.170 --> 00:26:46.369
But it outputs like a
completely separate APK.

00:26:46.369 --> 00:26:46.910
AUDIENCE: OK.

00:26:46.910 --> 00:26:48.130
So you use a different build.

00:26:48.130 --> 00:26:50.730
Because I do a lot of shared
build systems and that stuff.

00:26:50.730 --> 00:26:53.030
So I use a separate
build flow for that.

00:26:53.030 --> 00:26:54.680
Instant App with Unity?

00:26:54.680 --> 00:26:55.820
MATT SAMET: Right.

00:26:55.820 --> 00:27:00.570
In the game, we had an extremely
customized build script.

00:27:00.570 --> 00:27:04.580
And we just kind of extended
that for the Instant App

00:27:04.580 --> 00:27:05.474
target.

00:27:05.474 --> 00:27:06.140
AUDIENCE: Sweet.

00:27:06.140 --> 00:27:06.640
Thanks.

00:27:16.812 --> 00:27:18.270
AUDIENCE: Just
trying to understand

00:27:18.270 --> 00:27:20.220
the connection between
the Instant App

00:27:20.220 --> 00:27:21.990
and the app you install later.

00:27:21.990 --> 00:27:25.600
If you want to persist your save
game data from one to another,

00:27:25.600 --> 00:27:27.060
what are the mechanisms there?

00:27:27.060 --> 00:27:32.790
MATT SAMET: So on Android
8, it's automatic.

00:27:32.790 --> 00:27:36.530
It actually shares the same
app container on the device.

00:27:36.530 --> 00:27:40.450
So there's an API called
Show Install Prompt.

00:27:40.450 --> 00:27:41.590
You call that.

00:27:41.590 --> 00:27:42.990
And the user clicks Install.

00:27:42.990 --> 00:27:47.340
And the full app gets
downloaded and installed.

00:27:47.340 --> 00:27:51.030
And whatever user data you
stored in the Instant App

00:27:51.030 --> 00:27:53.400
container will be
available to the main app,

00:27:53.400 --> 00:27:57.450
just as if it was put
there by the game itself.

00:27:57.450 --> 00:28:00.540
And on Android 7, I believe,
there is a migration API

00:28:00.540 --> 00:28:02.670
that you can call.

00:28:02.670 --> 00:28:05.160
AUDIENCE: Thank you.

