WEBVTT
Kind: captions
Language: en

00:00:02.059 --> 00:00:06.859
(energetic music)

00:00:08.948 --> 00:00:10.826
- Hi. My name is Mia Gil Epner.

00:00:10.826 --> 00:00:13.466
I'm majoring in Computer
Science at UC Berkeley

00:00:13.466 --> 00:00:15.391
and I work for the Department of Defense

00:00:15.391 --> 00:00:17.655
where I try to keep information safe.

00:00:18.515 --> 00:00:21.701
The internet is an open and public system.

00:00:21.701 --> 00:00:24.007
We all send and receive information

00:00:24.007 --> 00:00:26.118
over shared wires and connections.

00:00:26.728 --> 00:00:28.327
Even though it's an open system,

00:00:28.327 --> 00:00:30.485
we still exchange a lot of private data,

00:00:30.485 --> 00:00:32.319
things like credit card numbers,

00:00:32.319 --> 00:00:35.384
bank information, passwords, and emails.

00:00:35.394 --> 00:00:38.707
So how is all this
private stuff kept secret?

00:00:38.747 --> 00:00:40.673
Data of any kind can be kept secret

00:00:40.673 --> 00:00:42.367
through a process known as encryption,

00:00:42.367 --> 00:00:44.410
descrambling or changing of the message

00:00:44.410 --> 00:00:46.410
to hide the original text.

00:00:46.410 --> 00:00:48.461
Now, decryption is the process

00:00:48.461 --> 00:00:51.710
of unscrambling that
message to make it readable.

00:00:51.710 --> 00:00:53.066
This is a simple idea,

00:00:53.066 --> 00:00:55.479
and people have been
doing it for centuries.

00:00:55.479 --> 00:00:58.256
One of the first well-known
methods of encryption

00:00:58.256 --> 00:01:01.447
was Caesar's cipher,
named after Julius Caesar,

00:01:01.447 --> 00:01:04.547
a Roman general who encrypted
his military commands

00:01:04.547 --> 00:01:07.254
to make sure that if a message
was intercepted by enemies,

00:01:07.254 --> 00:01:09.985
they wouldn't be able to read it.

00:01:10.045 --> 00:01:11.705
Caesar's cipher is an algorithm

00:01:11.705 --> 00:01:14.121
that substitutes each letter
in the original message

00:01:14.121 --> 00:01:17.024
with a letter a certain number
of steps down the alphabet.

00:01:17.024 --> 00:01:19.275
If the number is something only the sender

00:01:19.275 --> 00:01:22.368
and receiver know, then
it's called the key.

00:01:22.658 --> 00:01:26.776
It allows the reader to
unlock the secret message.

00:01:27.186 --> 00:01:30.424
For example, if your
original message is, "Hello",

00:01:30.524 --> 00:01:33.109
then, using the Caesar's cipher algorithm

00:01:33.109 --> 00:01:36.734
with a key of five, the
encrypted message would be this.

00:01:36.734 --> 00:01:38.464
(typrwriter keys clacking)

00:01:38.464 --> 00:01:39.614
(computer chime)

00:01:39.614 --> 00:01:41.486
To decrypt the message, the recipient

00:01:41.486 --> 00:01:45.880
would simply use the key
to reverse the process.

00:01:45.940 --> 00:01:48.116
But there's a big problem
with Caesar's cipher.

00:01:48.116 --> 00:01:52.261
Anybody can easily break or
crack the encrypted message

00:01:52.261 --> 00:01:54.234
by trying every possible key.

00:01:54.234 --> 00:01:57.229
In the English alphabet,
there are only 26 letters,

00:01:57.229 --> 00:01:59.877
which means you'd only
need to try, at most,

00:01:59.877 --> 00:02:02.775
26 keys to decrypt the message.

00:02:02.815 --> 00:02:05.904
Now, trying 26 possible
keys isn't very hard.

00:02:05.904 --> 00:02:07.993
It would take, at most, an hour to do.

00:02:07.993 --> 00:02:09.943
So let's make it harder.

00:02:09.943 --> 00:02:12.312
Instead of shifting every
letter by the same amount,

00:02:12.312 --> 00:02:15.284
let's shift each letter
by a different amount.

00:02:15.284 --> 00:02:17.977
In this example, a 10 digit key

00:02:17.977 --> 00:02:20.624
shows how many positions
each successive letter

00:02:20.624 --> 00:02:23.468
will be changed to
encrypt a longer message.

00:02:23.468 --> 00:02:26.135
(typewriter keys clacking)

00:02:26.135 --> 00:02:28.573
Guessing this key would be really hard.

00:02:28.593 --> 00:02:30.029
Using 10 digit encryption,

00:02:30.029 --> 00:02:33.973
there could be 10 billion
possible key solutions.

00:02:34.043 --> 00:02:37.027
Obviously, that's more than
any human could ever solve.

00:02:37.027 --> 00:02:41.161
It would take many centuries,
but an average computer today

00:02:41.161 --> 00:02:42.739
would take just a few seconds

00:02:42.739 --> 00:02:45.858
to try all 10 billion possibilities.

00:02:45.868 --> 00:02:48.116
So in a modern world, where the bad guys

00:02:48.116 --> 00:02:50.732
are armed with computers
instead of pencils,

00:02:50.732 --> 00:02:53.739
how can you encrypt messages so securely

00:02:53.739 --> 00:02:56.084
that they're too hard to crack?

00:02:56.084 --> 00:02:59.729
Now, "too hard" means that
there are too many possibilities

00:02:59.729 --> 00:03:02.756
to compute in a reasonable amount of time.

00:03:02.756 --> 00:03:04.832
Today's secure communications

00:03:04.832 --> 00:03:08.328
are encrypted using 256 bit keys.

00:03:08.328 --> 00:03:09.929
That means a bad guy's computer

00:03:09.929 --> 00:03:11.426
that intercepts your message,

00:03:11.426 --> 00:03:14.596
would need to try this
many possible options

00:03:14.596 --> 00:03:17.813
until they discover the
key and crack the message.

00:03:17.813 --> 00:03:18.408
(robot bleeps and beeps)

00:03:18.408 --> 00:03:20.118
(energetic music)

00:03:20.118 --> 00:03:23.154
Even if you had a hundred
thousand super computers,

00:03:23.154 --> 00:03:25.056
and each of them was able to try

00:03:25.056 --> 00:03:27.900
a million billion keys every second,

00:03:27.900 --> 00:03:30.733
it would take trillions
of trillions of trillions

00:03:30.733 --> 00:03:32.602
of years to try every option,

00:03:32.602 --> 00:03:34.309
just to crack a single message

00:03:34.309 --> 00:03:37.651
protected with 256 bit encryption.

00:03:37.651 --> 00:03:40.197
Of course, computer
chips get twice as fast,

00:03:40.197 --> 00:03:42.623
then half the size every year or so.

00:03:42.623 --> 00:03:45.410
If that pace of exponential
progress continues,

00:03:45.410 --> 00:03:48.242
today's impossible
problems will be solvable

00:03:48.242 --> 00:03:50.702
just a few hundred years in the future,

00:03:50.702 --> 00:03:53.983
and 256 bits won't be enough to be safe.

00:03:53.983 --> 00:03:55.887
In fact, we've already had to

00:03:55.887 --> 00:03:57.421
increase the standard key length

00:03:57.421 --> 00:04:00.966
to keep up with the speed of computers.

00:04:00.966 --> 00:04:03.167
The good news is, using a longer key

00:04:03.167 --> 00:04:05.315
doesn't make encrypting
messages much harder,

00:04:05.315 --> 00:04:08.484
but it exponentially increases
the number of guesses

00:04:08.484 --> 00:04:11.388
that it would to crack a cipher.

00:04:11.388 --> 00:04:14.393
When the sender and the
receiver share the same key

00:04:14.393 --> 00:04:16.251
to scramble and unscramble a message,

00:04:16.251 --> 00:04:19.129
it's called symmetric encryption.

00:04:19.149 --> 00:04:21.954
With symmetric encryption,
like Caesar's cipher,

00:04:21.954 --> 00:04:25.241
the secret key has to be
agreed on ahead of time

00:04:25.241 --> 00:04:27.569
by two people in private.

00:04:27.569 --> 00:04:28.995
That's great for people,

00:04:28.995 --> 00:04:31.304
but the internet is open and public,

00:04:31.304 --> 00:04:33.394
so it's impossible for two computers

00:04:33.394 --> 00:04:36.890
to meet in private to
agree on a secret key.

00:04:36.890 --> 00:04:40.047
Instead, computers use asymmetric keys,

00:04:40.047 --> 00:04:43.651
a public key that can be
exchanged with anybody

00:04:43.651 --> 00:04:46.623
and a private key that is not shared.

00:04:46.623 --> 00:04:49.593
The public key is used to encrypt data

00:04:49.593 --> 00:04:52.438
and anybody can use it to
create a secret message,

00:04:52.438 --> 00:04:55.606
but the secret can only be decrypted

00:04:55.606 --> 00:04:59.285
by a computer with access
to the private key.

00:04:59.335 --> 00:05:00.962
How it works is with some math

00:05:00.962 --> 00:05:02.813
that we won't get into right now.

00:05:02.863 --> 00:05:04.578
Think of it this way, imagine

00:05:04.578 --> 00:05:06.157
that you have a personal mailbox

00:05:06.157 --> 00:05:07.650
where anybody can deposit mail,

00:05:07.650 --> 00:05:09.554
but they need a key to do it.

00:05:09.554 --> 00:05:11.644
Now, you could make many copies

00:05:11.644 --> 00:05:13.838
of the deposit key, and
send one to your friend

00:05:13.838 --> 00:05:16.044
or even just make it publicly available.

00:05:16.044 --> 00:05:18.052
Your friend, or even a stranger,

00:05:18.052 --> 00:05:19.445
can use the public key

00:05:19.445 --> 00:05:22.139
to access your deposit
slot and drop a message in,

00:05:22.139 --> 00:05:25.924
but only you can open the
mailbox with your private key

00:05:25.924 --> 00:05:28.907
to access all of the secret
messages you've received.

00:05:28.907 --> 00:05:31.716
You can send a secure
message back to your friend

00:05:31.716 --> 00:05:34.525
by using the public deposit
key to their mailbox.

00:05:34.525 --> 00:05:37.533
This way, people can
exchange secure messages

00:05:37.533 --> 00:05:41.070
without ever needing to
agree on a private key.

00:05:41.100 --> 00:05:43.653
Public key cryptography is the foundation

00:05:43.653 --> 00:05:46.580
of all secure messaging
on the open internet

00:05:46.580 --> 00:05:51.131
including security protocols
known as SSL and TLS

00:05:51.131 --> 00:05:54.314
which protect us when
we're browsing the web.

00:05:54.324 --> 00:05:56.302
Your computer uses this today.

00:05:56.302 --> 00:05:57.960
Any time you see the little lock

00:05:57.960 --> 00:06:02.128
or the letters https in
your browser's address bar,

00:06:02.128 --> 00:06:05.599
this means your computer is
using public key encryption

00:06:05.599 --> 00:06:08.803
to exchange data securely
with the website you're on.

00:06:08.803 --> 00:06:10.183
(energetic music)

00:06:10.183 --> 00:06:12.241
As more and more people
get on the internet,

00:06:12.241 --> 00:06:14.806
more and more private
data will be transmitted,

00:06:14.806 --> 00:06:16.930
and the need to secure that data

00:06:16.930 --> 00:06:18.716
will be even more important.

00:06:18.756 --> 00:06:21.393
As computers become faster and faster,

00:06:21.393 --> 00:06:23.239
we'll have to develop new ways

00:06:23.239 --> 00:06:26.060
to make encryption too hard
for computers to break.

00:06:26.070 --> 00:06:29.470
This is what I do with my
work, and it's always changing.

00:06:29.470 --> 00:06:34.102
(energetic music)

