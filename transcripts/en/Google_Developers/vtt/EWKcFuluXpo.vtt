WEBVTT
Kind: captions
Language: en

00:00:19.690 --> 00:00:21.970
PAUL KINLAN: Hi, guys.

00:00:21.970 --> 00:00:23.710
You don't know the amount of
trouble that we've had trying

00:00:23.710 --> 00:00:24.450
to get this ready.

00:00:24.450 --> 00:00:25.870
I'm here with one of
my friends and

00:00:25.870 --> 00:00:28.510
colleagues, Ian Barber.

00:00:28.510 --> 00:00:29.920
So I hope this is working.

00:00:29.920 --> 00:00:32.840
If not, then we're just doing
this for no reason as well.

00:00:32.840 --> 00:00:34.860
However, let's get started
properly, shall we?

00:00:34.860 --> 00:00:36.220
My name is Paul Kinlan.

00:00:36.220 --> 00:00:37.670
I'm a developer advocate
at Google.

00:00:37.670 --> 00:00:40.120
And I can't say advocate
at all properly.

00:00:40.120 --> 00:00:42.830
I'm an advocate, apparently.

00:00:42.830 --> 00:00:45.140
And I work on the Chrome Team,
and we're here to talk about

00:00:45.140 --> 00:00:45.730
Chrome apps.

00:00:45.730 --> 00:00:50.470
So just before Christmas, we did
a whole series, about 12

00:00:50.470 --> 00:00:52.260
different episodes about what's
happening inside of

00:00:52.260 --> 00:00:55.190
Chrome and Chrome applications
and all that type of stuff.

00:00:55.190 --> 00:00:57.010
And we had a little break
over Christmas.

00:00:57.010 --> 00:00:59.180
We came back today.

00:00:59.180 --> 00:01:01.600
This is our very first one,
we came back today.

00:01:01.600 --> 00:01:03.770
And we've decided to show you
what's happened since

00:01:03.770 --> 00:01:06.530
Christmas, I think is the
best thing to do.

00:01:06.530 --> 00:01:09.550
When I say since Christmas, I
think to put in context, the

00:01:09.550 --> 00:01:12.800
best thing to say is that we've
had two hackathons.

00:01:12.800 --> 00:01:13.370
We've actually had
more than that.

00:01:13.370 --> 00:01:14.720
We've had three hackathons
overall.

00:01:14.720 --> 00:01:17.460
We had one in London, which
was, I think, October,

00:01:17.460 --> 00:01:18.200
November time.

00:01:18.200 --> 00:01:21.520
And then we were going to plan
one in Boston and one in New

00:01:21.520 --> 00:01:24.920
York, and one in Mountain
View as well.

00:01:24.920 --> 00:01:27.580
But for scheduling conflicts
and some other reasons, the

00:01:27.580 --> 00:01:29.660
Boston and New York hackathons
got put back.

00:01:29.660 --> 00:01:30.420
But we've done them.

00:01:30.420 --> 00:01:32.400
We have a whole load of
great guys come along.

00:01:32.400 --> 00:01:36.950
Some of the people on the Chrome
Apps Community Group on

00:01:36.950 --> 00:01:40.400
Google+, they came
along as well.

00:01:40.400 --> 00:01:42.080
And we showed some really cool
stuff, and we did some really

00:01:42.080 --> 00:01:44.420
nice things.

00:01:44.420 --> 00:01:46.580
I think today is going to be
just really us showing you

00:01:46.580 --> 00:01:50.340
what the community, what people
inside the Chrome Apps

00:01:50.340 --> 00:01:51.220
Community have built.

00:01:51.220 --> 00:01:53.140
So I think we should start.

00:01:53.140 --> 00:01:53.840
Should we start?

00:01:53.840 --> 00:01:54.890
I think we're good.

00:01:54.890 --> 00:01:59.750
Yes, we got a nod from my
co-producer at the back.

00:01:59.750 --> 00:02:01.610
So let's go from
the beginning.

00:02:04.230 --> 00:02:05.820
Boston was our first
one, I think is the

00:02:05.820 --> 00:02:07.330
easiest thing to say.

00:02:07.330 --> 00:02:09.380
It was based in the
Bocoup Loft.

00:02:09.380 --> 00:02:12.590
They let us host there,
and I think about

00:02:12.590 --> 00:02:14.120
30 developers came.

00:02:14.120 --> 00:02:17.280
It was quite cool, and we got
quite a lot of good apps.

00:02:17.280 --> 00:02:18.400
I got the first one, actually.

00:02:18.400 --> 00:02:20.995
So I basically prepared this
whole list of applications

00:02:20.995 --> 00:02:24.370
that we're OK to talk about
a little bit more

00:02:24.370 --> 00:02:26.470
publicly, at least.

00:02:26.470 --> 00:02:28.190
And the first one, I can't
really show you because I

00:02:28.190 --> 00:02:30.660
haven't got my credit card
ready to go and buy it.

00:02:30.660 --> 00:02:31.840
But it was called Mad Dash.

00:02:31.840 --> 00:02:35.550
Basically, it's not a horse
racing simulator, but you can

00:02:35.550 --> 00:02:39.230
basically place fake
bets and see which

00:02:39.230 --> 00:02:40.690
horse is going to win.

00:02:40.690 --> 00:02:42.260
The interesting thing,
actually-- and I'm going to

00:02:42.260 --> 00:02:45.710
shift off this one a little
bit sooner than I planned,

00:02:45.710 --> 00:02:47.645
because this actually
wasn't a V2 app.

00:02:47.645 --> 00:02:49.910
So we have these two different
models at the moment.

00:02:49.910 --> 00:02:52.870
We have packaged apps and
packaged apps V2.

00:02:52.870 --> 00:02:57.370
We haven't got an official name
for the apps V2 just yet.

00:02:57.370 --> 00:03:00.390
And the main difference is that
the original packaged

00:03:00.390 --> 00:03:02.370
apps live entirely inside
the browser.

00:03:02.370 --> 00:03:05.170
So they live inside
the window Chrome.

00:03:05.170 --> 00:03:06.840
You probably can't see on my
desktop at the moment because

00:03:06.840 --> 00:03:07.700
I don't think it's
being shared.

00:03:07.700 --> 00:03:08.470
Now it's being shared.

00:03:08.470 --> 00:03:10.600
Awesome.

00:03:10.600 --> 00:03:12.480
So Mad Dash, this is the one
here, and I was showing you

00:03:12.480 --> 00:03:14.350
the screenshots before.

00:03:14.350 --> 00:03:15.620
This is Mad Dash.

00:03:15.620 --> 00:03:17.110
It's actually a V1 app.

00:03:17.110 --> 00:03:19.550
And the thing about V1 apps,
it's like TweetDeck.

00:03:19.550 --> 00:03:21.420
TweetDeck is a V1 app
where it lives

00:03:21.420 --> 00:03:22.610
entirely inside the browser.

00:03:22.610 --> 00:03:26.430
So it'll live here, basically.

00:03:26.430 --> 00:03:27.960
And there's actually quite a lot
of things that we learned

00:03:27.960 --> 00:03:30.900
from Chrome OS, is that people
want applications.

00:03:30.900 --> 00:03:32.610
They want their web
applications, but they want

00:03:32.610 --> 00:03:34.200
them to live outside
the browser.

00:03:34.200 --> 00:03:37.050
And this application is a V1
app, so it lives inside the

00:03:37.050 --> 00:03:38.630
browser still.

00:03:38.630 --> 00:03:40.340
But actually when they demoed
it, it was actually still a

00:03:40.340 --> 00:03:40.960
pretty good app.

00:03:40.960 --> 00:03:45.630
It was still pretty cool,
but it was a V1 app.

00:03:45.630 --> 00:03:47.540
So I should close that
one, and I will show

00:03:47.540 --> 00:03:50.810
you a V2 app, Trail-app.

00:03:50.810 --> 00:03:52.080
So this is one of
the contestants

00:03:52.080 --> 00:03:55.120
from the Boston hackathon.

00:03:55.120 --> 00:03:57.400
And basically, if we launch the
app-- we can launch from

00:03:57.400 --> 00:03:58.960
the Chrome Web Store--

00:03:58.960 --> 00:04:01.460
you should see the fact that
it's actually outside the

00:04:01.460 --> 00:04:02.700
browser at the moment.

00:04:02.700 --> 00:04:05.160
Now, it's a little bit
wobbly because I'm

00:04:05.160 --> 00:04:06.060
moving it around loads.

00:04:06.060 --> 00:04:07.910
But the idea is that
you can get full

00:04:07.910 --> 00:04:09.030
control of the canvas.

00:04:09.030 --> 00:04:13.100
You can control the entire UI
that's presented to your user.

00:04:13.100 --> 00:04:15.020
And in this case, they've
chosen just to go with a

00:04:15.020 --> 00:04:17.380
normal title attribute, like
a title bar, so it's like a

00:04:17.380 --> 00:04:20.250
basic window without any extra
little bits on it.

00:04:20.250 --> 00:04:21.959
You could launch different
types of applications.

00:04:21.959 --> 00:04:24.220
You can have applications which
don't even have this

00:04:24.220 --> 00:04:26.240
little white bar across the
top where you control and

00:04:26.240 --> 00:04:30.210
minimize, maximize, and close,
and the ability to drag the

00:04:30.210 --> 00:04:31.080
window around yourself.

00:04:31.080 --> 00:04:33.630
So you could have a Drag button
right in the middle of

00:04:33.630 --> 00:04:35.530
the application.

00:04:35.530 --> 00:04:39.380
But essentially, this was a
thoughtbot trail maps app.

00:04:39.380 --> 00:04:42.075
It was kind of cool.

00:04:42.075 --> 00:04:44.340
From what I understand, they
basically ported a traditional

00:04:44.340 --> 00:04:46.890
web application into the
offline kind of model.

00:04:46.890 --> 00:04:48.720
And that was actually one of the
things that we found from

00:04:48.720 --> 00:04:51.860
quite a lot of applications, a
lot of developers at least, is

00:04:51.860 --> 00:04:55.770
that they quite often had a
web application that they

00:04:55.770 --> 00:04:58.410
already had on the web, but they
wanted to move it into

00:04:58.410 --> 00:04:59.760
this native wrapper.

00:04:59.760 --> 00:05:01.790
And the thing about this native
wrapper is actually,

00:05:01.790 --> 00:05:02.820
it's offline first.

00:05:02.820 --> 00:05:05.890
It's offline throughout the
entirety of the application.

00:05:05.890 --> 00:05:07.700
And you basically try
and integrate online

00:05:07.700 --> 00:05:08.920
functionality in.

00:05:08.920 --> 00:05:10.960
And the reason why we do this
is because we want our

00:05:10.960 --> 00:05:13.880
applications to work when
the user is offline.

00:05:13.880 --> 00:05:15.630
You've got a Chromebook, or
you've got your Mac or your

00:05:15.630 --> 00:05:18.010
Windows machine, and you want
your application to work

00:05:18.010 --> 00:05:20.010
wherever you are, regardless
of connectivity.

00:05:20.010 --> 00:05:22.680
Or at least maybe not work
completely, because obviously,

00:05:22.680 --> 00:05:25.120
if it's a Twitter app and you
have no internet connection,

00:05:25.120 --> 00:05:27.395
you can't go and get
your tweets.

00:05:27.395 --> 00:05:29.865
But you should be able to at
least see all the tweets that

00:05:29.865 --> 00:05:31.330
have come back in the past.

00:05:31.330 --> 00:05:35.530
You should be able to reply to
a tweet and, say, queue it to

00:05:35.530 --> 00:05:36.760
be sent later on.

00:05:36.760 --> 00:05:39.500
And if you're on the web, you
press Refresh or try and

00:05:39.500 --> 00:05:42.800
launch a bookmark when it's
not on the web or not

00:05:42.800 --> 00:05:50.270
connected, you're up a stream
without a paddle.

00:05:50.270 --> 00:05:53.230
I have to be really careful
how I say that one.

00:05:53.230 --> 00:05:57.680
But you're in not a great
situation, and that's one of

00:05:57.680 --> 00:05:59.590
the big things that a lot of
people found when they tried

00:05:59.590 --> 00:06:01.925
to port their applications to
this platform, at least, is

00:06:01.925 --> 00:06:03.250
that you have to think
differently.

00:06:03.250 --> 00:06:05.480
You have to think in much more
of a native app kind of

00:06:05.480 --> 00:06:08.100
developer mindset, where
online functionality is

00:06:08.100 --> 00:06:11.170
integrated into your app and
not offline functionality.

00:06:11.170 --> 00:06:11.780
This is a nice app.

00:06:11.780 --> 00:06:13.030
It's basically a tutorial.

00:06:15.480 --> 00:06:17.950
It's kind of a code quiz, from
what I remember, that lets you

00:06:17.950 --> 00:06:20.360
basically learn about different
technology,

00:06:20.360 --> 00:06:23.270
understanding the fundamentals
of JavaScript.

00:06:23.270 --> 00:06:24.960
And then by the end of it, you
should be able to understand

00:06:24.960 --> 00:06:27.130
that you can iterate
over collections.

00:06:27.130 --> 00:06:29.200
For a day's worth of work and
getting it from a complete

00:06:29.200 --> 00:06:34.830
online website into an offline
packaged app is really good.

00:06:34.830 --> 00:06:35.600
So that's the Trail-app.

00:06:35.600 --> 00:06:37.150
We have the next one,
the VideoPlayer.

00:06:37.150 --> 00:06:38.610
I'm pretty sure I'm allowed
to show this one.

00:06:38.610 --> 00:06:41.370
They said yes next to it.

00:06:41.370 --> 00:06:45.600
But we have the ability to play
videos, and there we are.

00:06:45.600 --> 00:06:47.210
It's playing a video.

00:06:47.210 --> 00:06:48.542
It's kind of cool.

00:06:48.542 --> 00:06:50.526
I think we can go more
full screen.

00:06:50.526 --> 00:06:53.764
This is the full full
screen API.

00:06:53.764 --> 00:06:57.610
And I'm hoping that we're
allowed to show this video.

00:06:57.610 --> 00:06:58.930
I'll get into trouble.

00:06:58.930 --> 00:07:01.400
But the idea behind it is that
you could have a full

00:07:01.400 --> 00:07:02.980
canvassed canvas
video element.

00:07:02.980 --> 00:07:07.430
So this area here is just a
custom HTML5 video player.

00:07:07.430 --> 00:07:09.440
It's nothing extra
and special.

00:07:09.440 --> 00:07:10.290
That's all it is, right?

00:07:10.290 --> 00:07:12.960
I mean, you might sit there and
go, well, what's the use?

00:07:12.960 --> 00:07:14.920
Well, some of the really cool
things that you can start to

00:07:14.920 --> 00:07:19.450
do with this is that you have
access to TCP and UDP sockets.

00:07:19.450 --> 00:07:22.730
You could create a local
network for local media

00:07:22.730 --> 00:07:25.480
servers and then pull the list
in off there via the

00:07:25.480 --> 00:07:27.200
[INAUDIBLE], essentially.

00:07:27.200 --> 00:07:29.420
So you can go to your Xbox Media
Center and pull in the

00:07:29.420 --> 00:07:30.540
videos and play it.

00:07:30.540 --> 00:07:32.415
And then once you can play it
on your desktop, or whether

00:07:32.415 --> 00:07:34.580
it's your Chromebook, well, what
happens if you wanted to

00:07:34.580 --> 00:07:35.360
go on an airplane?

00:07:35.360 --> 00:07:38.050
Well, the really cool thing was
you could basically say,

00:07:38.050 --> 00:07:40.280
well, I want to take this video
that I've got on my

00:07:40.280 --> 00:07:43.170
Media Center, and then bring
it onto my Chromebook or my

00:07:43.170 --> 00:07:45.770
MacBook or whatever machine that
you have, and then play

00:07:45.770 --> 00:07:46.980
it when you're offline
as well.

00:07:46.980 --> 00:07:49.950
So I think that's quite a
powerful demo, and to get this

00:07:49.950 --> 00:07:52.560
integrated in one day
was pretty cool.

00:07:52.560 --> 00:07:55.260
The things that we would like to
see off these type of demos

00:07:55.260 --> 00:07:58.240
is, for me at least anyways, the
removal of this title bar

00:07:58.240 --> 00:07:59.110
across the top.

00:07:59.110 --> 00:08:03.060
I want it to be full canvas,
full screen video from edge to

00:08:03.060 --> 00:08:04.350
edge regardless.

00:08:04.350 --> 00:08:07.350
And then when you go for the
Full Screen button, is

00:08:07.350 --> 00:08:08.610
actually to use the
Full Screen API.

00:08:08.610 --> 00:08:11.070
That should work and you should
be able to take that

00:08:11.070 --> 00:08:13.740
window and make it a proper full
screen like you'd expect

00:08:13.740 --> 00:08:15.990
from a native application.

00:08:15.990 --> 00:08:17.630
So that's pretty cool.

00:08:17.630 --> 00:08:18.890
We have Happy Friday.

00:08:18.890 --> 00:08:20.645
Now this was in Boston, I
believe, and this was actually

00:08:20.645 --> 00:08:22.470
a really good app.

00:08:22.470 --> 00:08:26.170
So basically, Happy Friday is
a game that they have been

00:08:26.170 --> 00:08:26.840
working on already.

00:08:26.840 --> 00:08:29.500
So it's not a brand new game
from the day, but they got it

00:08:29.500 --> 00:08:30.600
to work offline.

00:08:30.600 --> 00:08:33.650
And it basically is
an SVG-based--

00:08:33.650 --> 00:08:35.140
I believe it was SVG--

00:08:35.140 --> 00:08:36.500
SVG-powered game.

00:08:36.500 --> 00:08:37.690
So we launch it.

00:08:37.690 --> 00:08:41.080
Again, you can see this
nice window that's

00:08:41.080 --> 00:08:42.539
not part of the browser.

00:08:42.539 --> 00:08:44.070
And we have this little dude.

00:08:44.070 --> 00:08:45.350
And I got confused with this.

00:08:45.350 --> 00:08:48.295
It's not press Right to start,
it's actually press D. So we

00:08:48.295 --> 00:08:50.560
can go through, start level.

00:08:50.560 --> 00:08:52.370
Let me see if there's
any sound.

00:08:52.370 --> 00:08:53.250
No audio at the moment.

00:08:53.250 --> 00:08:53.970
Oh, there is.

00:08:53.970 --> 00:08:57.120
[ELECTRONIC SOUNDS]

00:08:57.120 --> 00:08:57.610
PAUL KINLAN: Pretty cool.

00:08:57.610 --> 00:09:00.060
[SHEEP BAAS]

00:09:00.060 --> 00:09:01.040
[LAUGHTER]

00:09:01.040 --> 00:09:03.270
PAUL KINLAN: Did not realize
that was on.

00:09:03.270 --> 00:09:06.010
Sorry, hoping the sound's on,
but there was a sheep in the

00:09:06.010 --> 00:09:06.620
background.

00:09:06.620 --> 00:09:08.310
But you can at least jump.

00:09:08.310 --> 00:09:10.770
You can do these cool
things, collect.

00:09:10.770 --> 00:09:12.850
And you know, this is the thing
that we want to try and

00:09:12.850 --> 00:09:13.700
get from this platform--

00:09:13.700 --> 00:09:16.810
wow, oh, he died--

00:09:16.810 --> 00:09:20.190
is the ability to have games
that work offline, games that

00:09:20.190 --> 00:09:22.390
you install, games that users
think are games on their

00:09:22.390 --> 00:09:26.440
platform, not just these games
that live inside a full web

00:09:26.440 --> 00:09:28.980
page, inside a Flash kind
of container in the

00:09:28.980 --> 00:09:30.420
middle of the screen.

00:09:30.420 --> 00:09:32.190
We want these games to
be immersive, right?

00:09:32.190 --> 00:09:34.270
And to get this in one
day was pretty cool.

00:09:34.270 --> 00:09:36.900
I'm really pleased
with this app.

00:09:36.900 --> 00:09:37.790
I think this should sell it.

00:09:37.790 --> 00:09:39.780
I think it's a game that you
could sell quite easily.

00:09:39.780 --> 00:09:41.030
Whee!

00:09:45.504 --> 00:09:48.110
It might use Box2D to actually
do all the physics, but it's

00:09:48.110 --> 00:09:51.850
powered, I believe, by SVG.

00:09:51.850 --> 00:09:55.232
And I think these guys won, as
well, won the best app or the

00:09:55.232 --> 00:09:57.250
best looking app in Boston.

00:09:57.250 --> 00:09:59.400
It was a really good effort
from the guys.

00:09:59.400 --> 00:10:02.800
So let's have a look at the
next one, LetterBrush.

00:10:02.800 --> 00:10:04.490
This was Boston as well.

00:10:04.490 --> 00:10:07.500
So this one I had
no idea existed.

00:10:07.500 --> 00:10:10.710
I didn't even know that this
was a thing, but basically,

00:10:10.710 --> 00:10:13.940
when you're creating a 2D game,
you want these maps.

00:10:13.940 --> 00:10:19.750
You want the ability to
basically construct a map so

00:10:19.750 --> 00:10:21.990
you can do certain things.

00:10:21.990 --> 00:10:26.480
So I press on the keyboard F
and C. And I can build a 2D

00:10:26.480 --> 00:10:27.800
map quite quickly.

00:10:27.800 --> 00:10:29.020
I can say, this is a line.

00:10:29.020 --> 00:10:31.850
I'm going to go from here, and
I can build across that way,

00:10:31.850 --> 00:10:33.600
and I'm going to square.

00:10:33.600 --> 00:10:36.040
This is my 2D map, right?

00:10:36.040 --> 00:10:37.210
That's what you want.

00:10:37.210 --> 00:10:38.580
It's pretty cool.

00:10:38.580 --> 00:10:41.580
Now this actually is an existing
web application.

00:10:44.380 --> 00:10:46.180
It's not a brand new app for the
day, but what they've done

00:10:46.180 --> 00:10:48.100
again is they've taken this web
application and ported it

00:10:48.100 --> 00:10:49.470
into a native container.

00:10:49.470 --> 00:10:50.820
And it works completely
offline.

00:10:50.820 --> 00:10:52.810
I mean, you don't have to think
about App Cache and use

00:10:52.810 --> 00:10:54.000
all these are other things.

00:10:54.000 --> 00:10:56.380
But the really cool thing that
I like about this was that

00:10:56.380 --> 00:11:01.910
they actually let you save using
the Export button and

00:11:01.910 --> 00:11:05.320
then Save to File, and you could
save directly to the

00:11:05.320 --> 00:11:06.110
user's desktop.

00:11:06.110 --> 00:11:10.730
So that's my web server,
so that's OK.

00:11:10.730 --> 00:11:13.830
So Save, done.

00:11:13.830 --> 00:11:16.480
Now I believe what basically
happened in the background is

00:11:16.480 --> 00:11:19.350
it basically did Auto Save
all the way through.

00:11:19.350 --> 00:11:21.500
And then the thing that you
don't get on the web right now

00:11:21.500 --> 00:11:25.090
is the ability to do an Auto
Save, so you can't save a file

00:11:25.090 --> 00:11:26.710
and then keep a reference to
that file and then keep

00:11:26.710 --> 00:11:28.760
writing and writing
and writing to it,

00:11:28.760 --> 00:11:30.390
whereas you can in this.

00:11:30.390 --> 00:11:31.520
And that was pretty cool.

00:11:31.520 --> 00:11:34.720
I believe this might have won
one of our best apps.

00:11:34.720 --> 00:11:36.850
A lot of people really liked
this application in Boston,

00:11:36.850 --> 00:11:41.315
just because they took it from
a completely online app and

00:11:41.315 --> 00:11:42.900
brought it offline.

00:11:42.900 --> 00:11:45.360
Pretty cool.

00:11:45.360 --> 00:11:46.200
Now this one.

00:11:46.200 --> 00:11:50.680
Let me refresh this page
because it's installed.

00:11:50.680 --> 00:11:52.470
This is called Chompy Ball.

00:11:52.470 --> 00:11:58.290
I've only played it briefly
inside New York, but I watched

00:11:58.290 --> 00:11:59.597
one of the developers,
and I can't remember

00:11:59.597 --> 00:12:00.350
his name at the moment.

00:12:00.350 --> 00:12:03.680
Let's see if he's got
it on there--

00:12:03.680 --> 00:12:05.930
Raheel Khalid.

00:12:05.930 --> 00:12:07.570
And basically, this is
a really good app.

00:12:07.570 --> 00:12:09.010
Basically it's a 2D canvas.

00:12:09.010 --> 00:12:12.650
The entirety of this surface
is a 2D canvas.

00:12:12.650 --> 00:12:13.800
Let me just play it.

00:12:13.800 --> 00:12:15.900
I like playing games, so
I'm not going to pay

00:12:15.900 --> 00:12:17.480
attention to you guys.

00:12:17.480 --> 00:12:18.300
Here we go.

00:12:18.300 --> 00:12:21.870
And so he built this game in a
day at the New York hackathon.

00:12:21.870 --> 00:12:24.230
And the entire thing
is just a canvas.

00:12:24.230 --> 00:12:26.290
And it's a relatively
simple game.

00:12:26.290 --> 00:12:29.610
But the really cool thing was he
actually built it with just

00:12:29.610 --> 00:12:30.580
a Chromebook entirely.

00:12:30.580 --> 00:12:32.450
So he didn't have
a normal PC--

00:12:32.450 --> 00:12:33.620
or what we'd say a
normal PC, as a

00:12:33.620 --> 00:12:34.880
Chromebook is a normal PC--

00:12:34.880 --> 00:12:37.370
a traditional desktop or a
traditional laptop, right?

00:12:37.370 --> 00:12:40.240
He built this thing with
just Chrome OS.

00:12:40.240 --> 00:12:43.190
And the really cool thing
was he used a--

00:12:43.190 --> 00:12:48.860
let me just go to
gethub.com/chromeappsamples--

00:12:48.860 --> 00:12:51.090
Mini Code Edit.

00:12:51.090 --> 00:12:52.720
I believe he used this
tool here, which is

00:12:52.720 --> 00:12:53.970
called Mini Code Edit.

00:13:00.330 --> 00:13:02.710
Essentially, Mini Code Edit is
just a normal code editor

00:13:02.710 --> 00:13:07.110
using the Ace Syntax highlighter
done by the guys

00:13:07.110 --> 00:13:11.000
who do Cloud9, I believe,
Cloud9 IDE.

00:13:11.000 --> 00:13:13.680
So he basically just used the
Ace Editor inside this Mini

00:13:13.680 --> 00:13:16.920
Code Edit, could save files out
to his desktop, open them

00:13:16.920 --> 00:13:20.340
back up again, and made this
entire game in one day just

00:13:20.340 --> 00:13:24.310
using the Chromebook, which I
think is quite impressive.

00:13:24.310 --> 00:13:25.850
There was a another guy from--

00:13:25.850 --> 00:13:29.840
actually, his tab is
here, Joe Sullivan.

00:13:29.840 --> 00:13:30.460
He built this thing.

00:13:30.460 --> 00:13:32.870
I can't demo it today, because
I can't just get it working.

00:13:32.870 --> 00:13:35.490
And I need some apps to show
it working properly.

00:13:35.490 --> 00:13:40.650
But Joe Sullivan actually did a
whole lot of stuff around a

00:13:40.650 --> 00:13:42.250
clone of the Web Intents API.

00:13:42.250 --> 00:13:43.720
Because obviously,
we've removed Web

00:13:43.720 --> 00:13:45.970
Intents from Chrome.

00:13:45.970 --> 00:13:49.120
We have people who still want
to use basically an

00:13:49.120 --> 00:13:51.790
application discovery mechanism
so that they

00:13:51.790 --> 00:13:53.200
communicate between apps
without having

00:13:53.200 --> 00:13:54.180
to know each other.

00:13:54.180 --> 00:13:58.330
And he built this thing called
Spoke, which is an API,

00:13:58.330 --> 00:14:01.730
basically, to emulate Web
Intents inside Chrome Apps.

00:14:01.730 --> 00:14:02.960
And he built that in a day.

00:14:02.960 --> 00:14:05.260
He actually did that using
the Chromebook as well.

00:14:05.260 --> 00:14:06.000
So that was really cool.

00:14:06.000 --> 00:14:08.560
I think we had two guys in New
York use Chromebooks, and one

00:14:08.560 --> 00:14:12.570
guy in Boston who's
used a Chromebook.

00:14:12.570 --> 00:14:14.860
But the game was particularly
impressive, Chompy Ball.

00:14:14.860 --> 00:14:18.280
It was pretty cool just
for that one day.

00:14:18.280 --> 00:14:23.000
And finally, I can't remember
the guy's name now, but he

00:14:23.000 --> 00:14:24.130
actually did two apps.

00:14:24.130 --> 00:14:25.430
And he's only listed one
of them at the moment.

00:14:25.430 --> 00:14:28.530
But Paycheck Calculator
was pretty cool.

00:14:28.530 --> 00:14:31.170
And again, this was, he
says, pretty much a

00:14:31.170 --> 00:14:34.440
ripoff of this one.

00:14:34.440 --> 00:14:35.350
It's kind of cool.

00:14:35.350 --> 00:14:39.260
But the thing about this, it's
a simple app for working out

00:14:39.260 --> 00:14:43.180
basically tips and keeping
track, in a more textual

00:14:43.180 --> 00:14:45.152
format, of expenses.

00:14:45.152 --> 00:14:46.290
And we had to do some things.

00:14:46.290 --> 00:14:47.730
The interesting thing
about this was--

00:14:47.730 --> 00:14:49.966
we'll launch it first--

00:14:49.966 --> 00:14:57.910
dinner for 12 at $12, maybe, and
then I bought an Android

00:14:57.910 --> 00:15:05.070
Nexus 4 for $250.

00:15:05.070 --> 00:15:08.310
I don't know the price.

00:15:08.310 --> 00:15:10.110
Multiplying by four--

00:15:10.110 --> 00:15:11.800
Nexus 4.

00:15:11.800 --> 00:15:12.910
I've done something wrong.

00:15:12.910 --> 00:15:13.730
My demos are failing.

00:15:13.730 --> 00:15:16.030
There we are.

00:15:16.030 --> 00:15:17.410
Basically, he actually
explained some of the

00:15:17.410 --> 00:15:18.080
algorithm of this.

00:15:18.080 --> 00:15:20.360
It basically picks the numbers
up and then tries to work out

00:15:20.360 --> 00:15:22.860
whether you should multiply.

00:15:22.860 --> 00:15:27.130
You might say, well, I gave
the clerk a 10% tip.

00:15:27.130 --> 00:15:28.110
So yeah, it's worked out.

00:15:28.110 --> 00:15:32.260
26.2 is the tip that
you should do.

00:15:32.260 --> 00:15:33.390
Now, I thought that
was pretty cool.

00:15:33.390 --> 00:15:34.660
I thought it was a
pretty nice app.

00:15:34.660 --> 00:15:35.800
You got it working in a day.

00:15:35.800 --> 00:15:37.850
Interestingly, we had a lot of
problems with this because as

00:15:37.850 --> 00:15:40.770
you've seen, if we type text
in, see the thing?

00:15:40.770 --> 00:15:43.450
A lot of it kind of
expands and moves

00:15:43.450 --> 00:15:44.930
about the actual surface.

00:15:44.930 --> 00:15:46.300
Well, this didn't work at all.

00:15:46.300 --> 00:15:49.800
So this is like a content
editable area.

00:15:49.800 --> 00:15:56.630
And the very first time that you
start this application, it

00:15:56.630 --> 00:15:58.770
starts out with this.

00:15:58.770 --> 00:15:59.770
We had two problems, actually.

00:15:59.770 --> 00:16:01.300
First, we couldn't
select any text.

00:16:01.300 --> 00:16:04.240
We couldn't actually start
typing in, because it's a

00:16:04.240 --> 00:16:07.270
content editable div--

00:16:07.270 --> 00:16:08.940
it's a pre or a div.

00:16:08.940 --> 00:16:10.130
But it's not a text area.

00:16:10.130 --> 00:16:12.870
It's just something that's
content editable.

00:16:12.870 --> 00:16:16.950
And content editable itself
doesn't accept user clicks.

00:16:16.950 --> 00:16:21.440
So the thing about apps is that
you can't select stuff

00:16:21.440 --> 00:16:23.080
all the time.

00:16:23.080 --> 00:16:24.900
This is the thing you see about
the web at the moment.

00:16:24.900 --> 00:16:27.170
You're in Gmail, and you double
click on something

00:16:27.170 --> 00:16:30.260
that's not quite the actual
email document, it might be a

00:16:30.260 --> 00:16:32.880
part of a button, and then all
of a sudden, the entire user

00:16:32.880 --> 00:16:34.670
interface is selected.

00:16:34.670 --> 00:16:36.490
So what we've done with apps
is we've inverted the

00:16:36.490 --> 00:16:40.940
selection model so only text
boxes and text input areas and

00:16:40.940 --> 00:16:43.470
places like that, where you
expect to actually input text,

00:16:43.470 --> 00:16:46.540
are things that will actually
start to receive text input.

00:16:46.540 --> 00:16:49.510
It sounds a little bit silly,
but that's what's happened.

00:16:49.510 --> 00:16:54.170
So content editable items aren't
in the actual style

00:16:54.170 --> 00:16:56.520
sheet to have the ability
to actually do

00:16:56.520 --> 00:16:58.130
user selectable text.

00:16:58.130 --> 00:16:59.000
But that wasn't too bad.

00:16:59.000 --> 00:16:59.810
We fixed that.

00:16:59.810 --> 00:17:01.850
It's just a CSS attribute,
WebKit Text

00:17:01.850 --> 00:17:03.310
Select, I think it is.

00:17:03.310 --> 00:17:05.400
And then you can start
to type stuff in.

00:17:05.400 --> 00:17:07.250
And I think the other
interesting thing about this

00:17:07.250 --> 00:17:08.599
was we have--

00:17:08.599 --> 00:17:10.730
I think it's a bug, but
it might not be.

00:17:10.730 --> 00:17:15.339
We have this issue where you
might set your window to 500

00:17:15.339 --> 00:17:19.990
pixels by 500 pixels, however,
the HTML element is 0 by 0,

00:17:19.990 --> 00:17:23.400
until you start filling it with
content, so that actually

00:17:23.400 --> 00:17:26.170
wraps the content rather
than fills the window.

00:17:26.170 --> 00:17:29.340
So you have to basically put a
CSS attribute on your HTML

00:17:29.340 --> 00:17:33.710
element and your body element if
you want it to also fill to

00:17:33.710 --> 00:17:37.060
be width 100%, height 100%.

00:17:37.060 --> 00:17:39.440
And sometimes you can also put
Position Absolute, and that

00:17:39.440 --> 00:17:41.010
kind of fixes it.

00:17:41.010 --> 00:17:43.250
One big bit of feedback that
we did get, and let me just

00:17:43.250 --> 00:17:46.130
see if I can test this.

00:17:46.130 --> 00:17:46.970
See that?

00:17:46.970 --> 00:17:48.520
This is kind of interesting,
is that

00:17:48.520 --> 00:17:50.270
there's no scroll bars.

00:17:50.270 --> 00:17:52.480
Now, we need feedback from you
guys as developers to actually

00:17:52.480 --> 00:17:55.130
say whether we should have
overflow auto straight on this

00:17:55.130 --> 00:17:56.660
thing, or whether you
want to control

00:17:56.660 --> 00:17:59.320
that yourself manually.

00:17:59.320 --> 00:18:01.100
I think it's a little bit
of a user nightmare.

00:18:01.100 --> 00:18:02.510
I can't scroll back up.

00:18:02.510 --> 00:18:06.690
You can get around if you just
put overflow call on Scroll X,

00:18:06.690 --> 00:18:09.170
or Overflow X Scroll, for
instance, or Overflow Y

00:18:09.170 --> 00:18:11.510
Scroll, and then you can get
the scroll bars back on.

00:18:11.510 --> 00:18:13.260
But we need to know from you
guys whether you should

00:18:13.260 --> 00:18:14.490
actually have this as a default

00:18:14.490 --> 00:18:16.120
feature inside the platform.

00:18:16.120 --> 00:18:19.790
So anyway, that was the
Paycheck Calculator.

00:18:19.790 --> 00:18:24.050
Let me see if he actually
put his other app in.

00:18:24.050 --> 00:18:25.060
No, he didn't put his
other app in.

00:18:25.060 --> 00:18:27.820
I can't see it there at least.

00:18:27.820 --> 00:18:30.135
So it was a color picker, so it
let you basically just have

00:18:30.135 --> 00:18:30.480
a color picker.

00:18:30.480 --> 00:18:33.790
You expect color pickers to be
part of the web, not as a web

00:18:33.790 --> 00:18:38.180
page, as a separate app,
and that's what it was.

00:18:38.180 --> 00:18:38.840
And that was it, right?

00:18:38.840 --> 00:18:40.790
So we had quite a lot of
developers come in.

00:18:40.790 --> 00:18:45.030
I think there was 50 or 60
overall in both hackathons.

00:18:45.030 --> 00:18:48.710
Obviously, some people didn't
want us to talk about and show

00:18:48.710 --> 00:18:51.440
off their applications,
so we haven't done it.

00:18:51.440 --> 00:18:53.740
But if we get some permission,
we'll ask the guys to come in

00:18:53.740 --> 00:18:56.960
as well and show some
really cool stuff.

00:18:56.960 --> 00:18:59.010
The new things that have
happened since Christmas is

00:18:59.010 --> 00:19:00.110
kind of interesting.

00:19:00.110 --> 00:19:02.820
We've got a couple of things
that we're going to talk about

00:19:02.820 --> 00:19:05.160
over the next couple of
weeks on the Chrome

00:19:05.160 --> 00:19:06.340
Apps side of things.

00:19:06.340 --> 00:19:08.850
So we have rich notifications.

00:19:08.850 --> 00:19:12.160
So some of you guys might have
seen a Rich Notification Panel

00:19:12.160 --> 00:19:15.525
happening Chrome OS, and some
things on Google+ by a guy

00:19:15.525 --> 00:19:18.560
called Francis who's found
some of the stuff that's

00:19:18.560 --> 00:19:19.240
happened inside Chrome.

00:19:19.240 --> 00:19:23.610
So we're going to show off the
Notification API, essentially.

00:19:23.610 --> 00:19:26.560
The Notification API is kind of
interesting because we had

00:19:26.560 --> 00:19:28.640
an HTML5 Notifications.

00:19:28.640 --> 00:19:30.110
It wasn't HTML5 Notifications.

00:19:30.110 --> 00:19:33.180
It was a specification that's a
SubSpec of the broader HTML5

00:19:33.180 --> 00:19:36.770
specification, which is a
notification specification,

00:19:36.770 --> 00:19:38.670
and it had two components.

00:19:38.670 --> 00:19:41.910
We had one component, which was
Create Notification, and

00:19:41.910 --> 00:19:44.040
then we had a second proprietary
one, which was

00:19:44.040 --> 00:19:46.690
called HTML Notification, where
you could basically

00:19:46.690 --> 00:19:49.590
create an iframe that would
appear as some part in the

00:19:49.590 --> 00:19:51.220
application.

00:19:51.220 --> 00:19:53.700
A lot of user agent vendors
didn't like it.

00:19:53.700 --> 00:19:54.600
We liked it.

00:19:54.600 --> 00:19:56.090
TweetDeck used it like crazy.

00:19:56.090 --> 00:19:58.560
We liked it, but a lot of other
user agents didn't like

00:19:58.560 --> 00:20:03.970
it because it didn't integrate
with the native system

00:20:03.970 --> 00:20:05.270
notification providers.

00:20:05.270 --> 00:20:07.430
So you're Android kind of thing
that you bring down at

00:20:07.430 --> 00:20:08.780
the top, that's not HTML.

00:20:08.780 --> 00:20:10.695
That's just basically strings
of some images, and likewise

00:20:10.695 --> 00:20:12.270
with iOS as well.

00:20:12.270 --> 00:20:17.940
So we've still got HTML
Notification in Chrome Apps,

00:20:17.940 --> 00:20:19.590
but we're going to encourage
people to use the Rich

00:20:19.590 --> 00:20:21.170
Notifications.

00:20:21.170 --> 00:20:24.310
So I think Joe Marini, I
believe, is going to show you

00:20:24.310 --> 00:20:27.100
that demo at some point
in the near future.

00:20:27.100 --> 00:20:31.490
We also have push messaging,
which I can talk about,

00:20:31.490 --> 00:20:34.125
because it's on the Docks, make
sure it's not secret.

00:20:34.125 --> 00:20:37.920
But we have this idea of push
messaging, basically, where

00:20:37.920 --> 00:20:40.710
you should be able to basically
send a notification

00:20:40.710 --> 00:20:44.650
to a server, and then any one of
your connected applications

00:20:44.650 --> 00:20:46.530
should be able to receive that
notification and display

00:20:46.530 --> 00:20:48.160
something to the user.

00:20:48.160 --> 00:20:49.070
So we're going to have that.

00:20:49.070 --> 00:20:49.940
That's kind of interesting.

00:20:49.940 --> 00:20:52.130
We're also going to talk
about alarms as well.

00:20:52.130 --> 00:20:54.390
Some people tried to use alarms
at the hackathons to

00:20:54.390 --> 00:20:56.110
varying degrees of success.

00:20:56.110 --> 00:20:59.370
And the idea of an alarm is it's
kind of like Set Timeout

00:20:59.370 --> 00:21:05.940
on Set Immediate where you
provide a function, tell it

00:21:05.940 --> 00:21:08.420
when in the future it's going
to be called, and then the

00:21:08.420 --> 00:21:10.400
system will notify your
application when it should

00:21:10.400 --> 00:21:12.750
wake up and process that code.

00:21:12.750 --> 00:21:15.380
The interesting thing about this
is that it's not exactly

00:21:15.380 --> 00:21:16.230
like set Timeout.

00:21:16.230 --> 00:21:22.390
Set Timeout will do one second
or a couple of milliseconds,

00:21:22.390 --> 00:21:23.380
you set days, right?

00:21:23.380 --> 00:21:26.010
But if your application's not
running, it'll never get

00:21:26.010 --> 00:21:27.430
registered and handled
when your

00:21:27.430 --> 00:21:28.560
application's not running.

00:21:28.560 --> 00:21:30.700
The idea behind Set Alarm
is that in theory, your

00:21:30.700 --> 00:21:34.080
application could not be
running, and because Chrome is

00:21:34.080 --> 00:21:38.190
keeping track of the
registrations, you could say

00:21:38.190 --> 00:21:41.060
in five days' time,
pop up this alert.

00:21:41.060 --> 00:21:47.780
And your application code will
be brought back to life and

00:21:47.780 --> 00:21:49.740
called and executed, and then
you can do something with the

00:21:49.740 --> 00:21:52.530
application, maybe show a richer
notification, those

00:21:52.530 --> 00:21:55.020
types of things.

00:21:55.020 --> 00:21:59.370
So that's the summary
of what's happened.

00:21:59.370 --> 00:22:01.700
We're going to have a lot more
things to talk about over the

00:22:01.700 --> 00:22:02.810
upcoming weeks.

00:22:02.810 --> 00:22:08.780
As always, we want you guys to
tell us what you know you want

00:22:08.780 --> 00:22:13.160
to hear about, we can try
and start to talk to.

00:22:13.160 --> 00:22:15.640
The best place to go and contact
everyone is either the

00:22:15.640 --> 00:22:19.630
group Chrome Maps
@googlegroups.com.

00:22:19.630 --> 00:22:21.840
I haven't got any placeholders
to overlay at the moment,

00:22:21.840 --> 00:22:23.900
because we had such a--

00:22:23.900 --> 00:22:25.960
I won't tell you how much effort
we had to do to get

00:22:25.960 --> 00:22:29.380
this video working, but it
involved reinstalling a lot of

00:22:29.380 --> 00:22:30.630
things in the last
two minutes.

00:22:33.450 --> 00:22:36.900
We also have a Google+
community, which I believe is

00:22:36.900 --> 00:22:38.780
called Chrome Apps
and Extensions.

00:22:38.780 --> 00:22:41.210
There's about 500 people
involved there.

00:22:41.210 --> 00:22:43.220
If you have any questions, any
feedback or things that you

00:22:43.220 --> 00:22:45.740
want to see, either leave them
on the event post that we've

00:22:45.740 --> 00:22:47.660
done, or just leave
it in that group.

00:22:47.660 --> 00:22:49.300
We are pretty active
there as well.

00:22:49.300 --> 00:22:50.940
We're all members of
that community.

00:22:50.940 --> 00:22:55.040
It's run by an external
moderator called Bruno.

00:22:55.040 --> 00:22:57.770
So yes, leave all the
feedback there.

00:22:57.770 --> 00:22:59.080
And I'm not going to
say we're done.

00:22:59.080 --> 00:23:00.600
I'm going to jump to
some questions.

00:23:00.600 --> 00:23:02.710
I know there's some things
that have come in.

00:23:02.710 --> 00:23:07.210
So let me just switch to
some of these now.

00:23:07.210 --> 00:23:09.300
None on the Moderator.

00:23:09.300 --> 00:23:11.620
10 votes for one question
from 12 people.

00:23:11.620 --> 00:23:11.980
Brilliant.

00:23:11.980 --> 00:23:16.850
So we've got one question
in the Moderator.

00:23:16.850 --> 00:23:19.470
So the question, shall
I read it out?

00:23:19.470 --> 00:23:20.710
I'll read it out.

00:23:20.710 --> 00:23:24.080
The question about publishing
packaged apps are still in

00:23:24.080 --> 00:23:26.500
developer preview and because of
that cannot be published in

00:23:26.500 --> 00:23:27.950
the Chrome Web Store.

00:23:27.950 --> 00:23:31.520
Are there plans of releasing
packaged apps anytime soon?

00:23:31.520 --> 00:23:33.790
From Oleg in Toronto.

00:23:33.790 --> 00:23:34.890
Really great question.

00:23:34.890 --> 00:23:36.370
Obviously, we never
comment on actual

00:23:36.370 --> 00:23:40.030
physical launch timelines.

00:23:40.030 --> 00:23:42.210
The interesting thing is that
these, you can actually put

00:23:42.210 --> 00:23:44.710
applications inside the store
today, they just can't be

00:23:44.710 --> 00:23:45.410
discovered.

00:23:45.410 --> 00:23:48.570
So all the apps that we
showed you before--

00:23:48.570 --> 00:23:51.850
let me jump through here--

00:23:51.850 --> 00:23:54.580
these are actually all inside
the Web Store today.

00:23:54.580 --> 00:23:58.060
Paycheck Calculator, Chompy
Ball, LetterBrush, they're all

00:23:58.060 --> 00:23:59.000
inside the Chrome Web Store.

00:23:59.000 --> 00:24:02.020
It's just that when you search
for LetterBrush, you won't be

00:24:02.020 --> 00:24:02.930
able to find it in Search.

00:24:02.930 --> 00:24:04.430
So if you want to make something
now, you can start

00:24:04.430 --> 00:24:05.360
pushing it off.

00:24:05.360 --> 00:24:08.140
I know one of the really big
things at the moment is you

00:24:08.140 --> 00:24:12.550
want to get that discovery, and
the funnel of the Chrome

00:24:12.550 --> 00:24:14.770
Web Store driving traffic
to your app.

00:24:14.770 --> 00:24:15.990
Right now, it's not there.

00:24:15.990 --> 00:24:18.940
You'll have to actually
basically direct

00:24:18.940 --> 00:24:20.310
the user to the app.

00:24:20.310 --> 00:24:23.300
It's the only thing that
we can say right now.

00:24:23.300 --> 00:24:24.120
So that's the question.

00:24:24.120 --> 00:24:26.200
We don't have any kind of solid
time on that I can tell

00:24:26.200 --> 00:24:28.320
you right now, but we're working
on it like crazy.

00:24:31.092 --> 00:24:32.260
What's this?

00:24:32.260 --> 00:24:33.690
Silver onion, cool.

00:24:33.690 --> 00:24:37.410
Let me just jump to see.

00:24:37.410 --> 00:24:38.660
No, that'll be it, I think.

00:24:41.800 --> 00:24:43.870
I'm going to check
one more thing.

00:24:43.870 --> 00:24:46.310
I won't share my screen.

00:24:46.310 --> 00:24:49.890
I have some G+ notifications.

00:24:49.890 --> 00:24:51.060
Anyone asked any questions?

00:24:51.060 --> 00:24:52.310
No questions.

00:24:54.400 --> 00:24:55.650
No questions.

00:24:58.600 --> 00:25:00.250
No questions.

00:25:00.250 --> 00:25:01.830
I think we're done.

00:25:01.830 --> 00:25:05.780
If you do have any questions
in the intermedium period,

00:25:05.780 --> 00:25:07.480
please put them on the
group or email me,

00:25:07.480 --> 00:25:10.610
paulkinlan@google.com, or
actually go on our Google

00:25:10.610 --> 00:25:11.870
Group as well.

00:25:11.870 --> 00:25:14.810
And with that, I thank you
very much and goodbye.

