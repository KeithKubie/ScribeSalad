WEBVTT
Kind: captions
Language: en

00:00:00.789 --> 00:00:04.070 align:start position:0%
 
all<00:00:01.510><c> right</c><00:00:01.720><c> good</c><00:00:02.620><c> afternoon</c><00:00:02.739><c> everyone</c><00:00:03.159><c> thank</c>

00:00:04.070 --> 00:00:04.080 align:start position:0%
all right good afternoon everyone thank
 

00:00:04.080 --> 00:00:07.530 align:start position:0%
all right good afternoon everyone thank
you<00:00:05.080><c> for</c><00:00:05.170><c> coming</c><00:00:05.529><c> to</c><00:00:05.620><c> this</c><00:00:05.710><c> talk</c><00:00:06.330><c> you'll</c><00:00:07.330><c> hear</c>

00:00:07.530 --> 00:00:07.540 align:start position:0%
you for coming to this talk you'll hear
 

00:00:07.540 --> 00:00:11.790 align:start position:0%
you for coming to this talk you'll hear
about<00:00:07.630><c> art</c><00:00:08.620><c> together</c><00:00:09.550><c> at</c><00:00:09.670><c> one</c><00:00:09.850><c> time</c><00:00:10.680><c> and</c><00:00:11.680><c> all</c>

00:00:11.790 --> 00:00:11.800 align:start position:0%
about art together at one time and all
 

00:00:11.800 --> 00:00:14.040 align:start position:0%
about art together at one time and all
about<00:00:12.010><c> all</c><00:00:12.490><c> about</c><00:00:12.850><c> new</c><00:00:13.420><c> selling</c><00:00:13.750><c> features</c>

00:00:14.040 --> 00:00:14.050 align:start position:0%
about all about new selling features
 

00:00:14.050 --> 00:00:17.970 align:start position:0%
about all about new selling features
we've<00:00:14.290><c> worked</c><00:00:14.800><c> on</c><00:00:15.040><c> for</c><00:00:15.340><c> Android</c><00:00:15.880><c> n</c><00:00:16.980><c> I'm</c>

00:00:17.970 --> 00:00:17.980 align:start position:0%
we've worked on for Android n I'm
 

00:00:17.980 --> 00:00:20.040 align:start position:0%
we've worked on for Android n I'm
Nicholas<00:00:18.369><c> Jeffrey</c><00:00:18.730><c> a</c><00:00:18.970><c> software</c><00:00:19.720><c> engineer</c><00:00:20.020><c> in</c>

00:00:20.040 --> 00:00:20.050 align:start position:0%
Nicholas Jeffrey a software engineer in
 

00:00:20.050 --> 00:00:21.720 align:start position:0%
Nicholas Jeffrey a software engineer in
the<00:00:20.350><c> art</c><00:00:20.500><c> team</c><00:00:20.710><c> and</c><00:00:21.130><c> I'll</c><00:00:21.340><c> be</c><00:00:21.550><c> presenting</c>

00:00:21.720 --> 00:00:21.730 align:start position:0%
the art team and I'll be presenting
 

00:00:21.730 --> 00:00:24.750 align:start position:0%
the art team and I'll be presenting
along<00:00:22.260><c> my</c><00:00:23.260><c> colleagues</c><00:00:23.740><c> Matthew</c><00:00:24.220><c> chachi</c><00:00:24.640><c> and</c>

00:00:24.750 --> 00:00:24.760 align:start position:0%
along my colleagues Matthew chachi and
 

00:00:24.760 --> 00:00:31.620 align:start position:0%
along my colleagues Matthew chachi and
Kalin<00:00:25.360><c> traveler</c><00:00:28.230><c> so</c><00:00:29.230><c> art</c><00:00:29.949><c> is</c><00:00:30.220><c> the</c><00:00:31.000><c> software</c>

00:00:31.620 --> 00:00:31.630 align:start position:0%
Kalin traveler so art is the software
 

00:00:31.630 --> 00:00:33.389 align:start position:0%
Kalin traveler so art is the software
layer<00:00:31.869><c> between</c><00:00:32.199><c> the</c><00:00:32.379><c> operating</c><00:00:32.769><c> system</c><00:00:33.100><c> and</c>

00:00:33.389 --> 00:00:33.399 align:start position:0%
layer between the operating system and
 

00:00:33.399 --> 00:00:36.860 align:start position:0%
layer between the operating system and
the<00:00:33.760><c> applications</c><00:00:34.949><c> it</c><00:00:35.949><c> provides</c><00:00:36.339><c> an</c>

00:00:36.860 --> 00:00:36.870 align:start position:0%
the applications it provides an
 

00:00:36.870 --> 00:00:39.360 align:start position:0%
the applications it provides an
execution<00:00:37.870><c> environment</c><00:00:38.409><c> to</c><00:00:38.920><c> run</c><00:00:39.069><c> Android</c>

00:00:39.360 --> 00:00:39.370 align:start position:0%
execution environment to run Android
 

00:00:39.370 --> 00:00:42.029 align:start position:0%
execution environment to run Android
applications<00:00:40.440><c> that</c><00:00:41.440><c> environment</c>

00:00:42.029 --> 00:00:42.039 align:start position:0%
applications that environment
 

00:00:42.039 --> 00:00:44.969 align:start position:0%
applications that environment
essentially<00:00:42.489><c> consists</c><00:00:42.940><c> of</c><00:00:43.030><c> two</c><00:00:43.210><c> things</c><00:00:43.979><c> it</c>

00:00:44.969 --> 00:00:44.979 align:start position:0%
essentially consists of two things it
 

00:00:44.979 --> 00:00:47.340 align:start position:0%
essentially consists of two things it
executes<00:00:45.460><c> text</c><00:00:45.850><c> byte</c><00:00:46.030><c> code</c><00:00:46.269><c> that's</c><00:00:47.079><c> the</c>

00:00:47.340 --> 00:00:47.350 align:start position:0%
executes text byte code that's the
 

00:00:47.350 --> 00:00:49.950 align:start position:0%
executes text byte code that's the
internal<00:00:48.219><c> Android</c><00:00:49.210><c> format</c><00:00:49.629><c> imagine</c>

00:00:49.950 --> 00:00:49.960 align:start position:0%
internal Android format imagine
 

00:00:49.960 --> 00:00:52.579 align:start position:0%
internal Android format imagine
applications<00:00:50.909><c> through</c><00:00:51.909><c> a</c><00:00:51.940><c> mix</c><00:00:52.179><c> of</c>

00:00:52.579 --> 00:00:52.589 align:start position:0%
applications through a mix of
 

00:00:52.589 --> 00:00:56.549 align:start position:0%
applications through a mix of
interpretation<00:00:53.589><c> and</c><00:00:53.760><c> computation</c><00:00:55.379><c> it</c><00:00:56.379><c> also</c>

00:00:56.549 --> 00:00:56.559 align:start position:0%
interpretation and computation it also
 

00:00:56.559 --> 00:00:59.000 align:start position:0%
interpretation and computation it also
manages<00:00:56.859><c> memory</c><00:00:57.280><c> of</c><00:00:57.670><c> this</c><00:00:58.120><c> application</c>

00:00:59.000 --> 00:00:59.010 align:start position:0%
manages memory of this application
 

00:00:59.010 --> 00:01:01.680 align:start position:0%
manages memory of this application
allocating<00:01:00.010><c> it</c><00:01:00.100><c> and</c><00:01:00.280><c> reclaiming</c><00:01:01.030><c> it</c><00:01:01.269><c> what</c><00:01:01.569><c> is</c>

00:01:01.680 --> 00:01:01.690 align:start position:0%
allocating it and reclaiming it what is
 

00:01:01.690 --> 00:01:05.340 align:start position:0%
allocating it and reclaiming it what is
so<00:01:01.780><c> long</c><00:01:01.929><c> I</c><00:01:02.019><c> used</c><00:01:03.600><c> why</c><00:01:04.600><c> should</c><00:01:04.870><c> you</c><00:01:04.960><c> guys</c><00:01:05.140><c> care</c>

00:01:05.340 --> 00:01:05.350 align:start position:0%
so long I used why should you guys care
 

00:01:05.350 --> 00:01:07.860 align:start position:0%
so long I used why should you guys care
about<00:01:05.379><c> art</c><00:01:05.710><c> well</c><00:01:06.580><c> it</c><00:01:06.670><c> turns</c><00:01:06.880><c> out</c><00:01:07.000><c> art</c><00:01:07.330><c> is</c><00:01:07.750><c> that</c>

00:01:07.860 --> 00:01:07.870 align:start position:0%
about art well it turns out art is that
 

00:01:07.870 --> 00:01:11.490 align:start position:0%
about art well it turns out art is that
the<00:01:08.050><c> forefront</c><00:01:08.530><c> of</c><00:01:08.680><c> the</c><00:01:08.830><c> user</c><00:01:08.980><c> experience</c><00:01:10.500><c> art</c>

00:01:11.490 --> 00:01:11.500 align:start position:0%
the forefront of the user experience art
 

00:01:11.500 --> 00:01:13.920 align:start position:0%
the forefront of the user experience art
needs<00:01:11.680><c> to</c><00:01:11.770><c> be</c><00:01:11.920><c> fast</c><00:01:12.270><c> so</c><00:01:13.270><c> the</c><00:01:13.360><c> applications</c><00:01:13.810><c> can</c>

00:01:13.920 --> 00:01:13.930 align:start position:0%
needs to be fast so the applications can
 

00:01:13.930 --> 00:01:16.740 align:start position:0%
needs to be fast so the applications can
run<00:01:13.960><c> smoothly</c><00:01:15.180><c> it</c><00:01:16.180><c> needs</c><00:01:16.450><c> to</c><00:01:16.570><c> start</c>

00:01:16.740 --> 00:01:16.750 align:start position:0%
run smoothly it needs to start
 

00:01:16.750 --> 00:01:18.690 align:start position:0%
run smoothly it needs to start
applications<00:01:17.350><c> really</c><00:01:17.470><c> quickly</c><00:01:17.860><c> to</c><00:01:18.520><c> give</c><00:01:18.670><c> a</c>

00:01:18.690 --> 00:01:18.700 align:start position:0%
applications really quickly to give a
 

00:01:18.700 --> 00:01:22.230 align:start position:0%
applications really quickly to give a
snap<00:01:18.970><c> experience</c><00:01:19.420><c> to</c><00:01:19.480><c> the</c><00:01:19.570><c> user</c><00:01:20.850><c> it</c><00:01:21.850><c> needs</c><00:01:22.090><c> to</c>

00:01:22.230 --> 00:01:22.240 align:start position:0%
snap experience to the user it needs to
 

00:01:22.240 --> 00:01:24.990 align:start position:0%
snap experience to the user it needs to
ensure<00:01:22.420><c> the</c><00:01:22.840><c> UI</c><00:01:23.020><c> can</c><00:01:23.800><c> render</c><00:01:24.010><c> at</c><00:01:24.250><c> least</c><00:01:24.490><c> 60</c>

00:01:24.990 --> 00:01:25.000 align:start position:0%
ensure the UI can render at least 60
 

00:01:25.000 --> 00:01:27.000 align:start position:0%
ensure the UI can render at least 60
frames<00:01:25.240><c> per</c><00:01:25.330><c> second</c><00:01:25.750><c> to</c><00:01:26.590><c> make</c><00:01:26.770><c> the</c><00:01:26.860><c> user</c>

00:01:27.000 --> 00:01:27.010 align:start position:0%
frames per second to make the user
 

00:01:27.010 --> 00:01:28.640 align:start position:0%
frames per second to make the user
experience<00:01:27.100><c> jank-free</c>

00:01:28.640 --> 00:01:28.650 align:start position:0%
experience jank-free
 

00:01:28.650 --> 00:01:31.590 align:start position:0%
experience jank-free
it<00:01:29.650><c> needs</c><00:01:29.800><c> to</c><00:01:29.890><c> be</c><00:01:29.980><c> power</c><00:01:30.190><c> efficient</c><00:01:30.640><c> and</c><00:01:30.880><c> not</c>

00:01:31.590 --> 00:01:31.600 align:start position:0%
it needs to be power efficient and not
 

00:01:31.600 --> 00:01:34.110 align:start position:0%
it needs to be power efficient and not
do<00:01:31.720><c> too</c><00:01:31.750><c> much</c><00:01:32.080><c> extra</c><00:01:32.440><c> work</c><00:01:32.680><c> besides</c><00:01:33.220><c> executing</c>

00:01:34.110 --> 00:01:34.120 align:start position:0%
do too much extra work besides executing
 

00:01:34.120 --> 00:01:37.350 align:start position:0%
do too much extra work besides executing
the<00:01:34.180><c> application</c><00:01:35.100><c> and</c><00:01:36.100><c> needs</c><00:01:36.730><c> to</c><00:01:36.760><c> be</c><00:01:36.940><c> savvy</c><00:01:37.210><c> in</c>

00:01:37.350 --> 00:01:37.360 align:start position:0%
the application and needs to be savvy in
 

00:01:37.360 --> 00:01:40.290 align:start position:0%
the application and needs to be savvy in
terms<00:01:37.540><c> of</c><00:01:37.660><c> memory</c><00:01:37.840><c> use</c><00:01:38.490><c> less</c><00:01:39.490><c> memory</c><00:01:39.670><c> being</c>

00:01:40.290 --> 00:01:40.300 align:start position:0%
terms of memory use less memory being
 

00:01:40.300 --> 00:01:41.520 align:start position:0%
terms of memory use less memory being
used<00:01:40.510><c> by</c><00:01:40.630><c> the</c><00:01:40.690><c> runtime</c><00:01:40.900><c> the</c><00:01:41.380><c> more</c>

00:01:41.520 --> 00:01:41.530 align:start position:0%
used by the runtime the more
 

00:01:41.530 --> 00:01:46.230 align:start position:0%
used by the runtime the more
applications<00:01:42.010><c> you</c><00:01:42.100><c> can</c><00:01:42.250><c> actually</c><00:01:42.430><c> run</c><00:01:45.120><c> so</c><00:01:46.120><c> if</c>

00:01:46.230 --> 00:01:46.240 align:start position:0%
applications you can actually run so if
 

00:01:46.240 --> 00:01:48.480 align:start position:0%
applications you can actually run so if
you<00:01:46.330><c> remember</c><00:01:46.450><c> dalvik</c><00:01:46.990><c> which</c><00:01:47.890><c> was</c><00:01:48.130><c> the</c><00:01:48.310><c> first</c>

00:01:48.480 --> 00:01:48.490 align:start position:0%
you remember dalvik which was the first
 

00:01:48.490 --> 00:01:50.310 align:start position:0%
you remember dalvik which was the first
Android<00:01:48.820><c> runtime</c><00:01:49.090><c> released</c><00:01:49.690><c> in</c><00:01:49.900><c> Android</c>

00:01:50.310 --> 00:01:50.320 align:start position:0%
Android runtime released in Android
 

00:01:50.320 --> 00:01:52.890 align:start position:0%
Android runtime released in Android
phones<00:01:50.670><c> it</c><00:01:51.670><c> was</c><00:01:51.880><c> sort</c><00:01:52.180><c> of</c><00:01:52.210><c> efficient</c><00:01:52.600><c> on</c><00:01:52.690><c> some</c>

00:01:52.890 --> 00:01:52.900 align:start position:0%
phones it was sort of efficient on some
 

00:01:52.900 --> 00:01:56.100 align:start position:0%
phones it was sort of efficient on some
on<00:01:53.140><c> some</c><00:01:53.380><c> of</c><00:01:53.500><c> these</c><00:01:53.590><c> metrics</c><00:01:53.800><c> and</c><00:01:55.080><c> sort</c><00:01:56.080><c> of</c>

00:01:56.100 --> 00:01:56.110 align:start position:0%
on some of these metrics and sort of
 

00:01:56.110 --> 00:02:00.300 align:start position:0%
on some of these metrics and sort of
okay<00:01:56.409><c> on</c><00:01:56.530><c> a</c><00:01:56.560><c> few</c><00:01:57.659><c> at</c><00:01:58.659><c> the</c><00:01:58.750><c> time</c><00:01:59.310><c> memory</c>

00:02:00.300 --> 00:02:00.310 align:start position:0%
okay on a few at the time memory
 

00:02:00.310 --> 00:02:04.190 align:start position:0%
okay on a few at the time memory
footprint<00:02:00.790><c> was</c><00:02:01.450><c> pronounced</c><00:02:03.030><c> so</c><00:02:04.030><c> we</c>

00:02:04.190 --> 00:02:04.200 align:start position:0%
footprint was pronounced so we
 

00:02:04.200 --> 00:02:07.350 align:start position:0%
footprint was pronounced so we
constrained<00:02:05.200><c> the</c><00:02:05.409><c> compiler</c><00:02:05.800><c> to</c><00:02:06.159><c> not</c><00:02:06.940><c> use</c><00:02:07.120><c> much</c>

00:02:07.350 --> 00:02:07.360 align:start position:0%
constrained the compiler to not use much
 

00:02:07.360 --> 00:02:10.529 align:start position:0%
constrained the compiler to not use much
memory<00:02:07.690><c> and</c><00:02:07.990><c> that</c><00:02:08.769><c> explains</c><00:02:09.149><c> not</c><00:02:10.149><c> so</c><00:02:10.389><c> great</c>

00:02:10.529 --> 00:02:10.539 align:start position:0%
memory and that explains not so great
 

00:02:10.539 --> 00:02:12.310 align:start position:0%
memory and that explains not so great
performance

00:02:12.310 --> 00:02:12.320 align:start position:0%
performance
 

00:02:12.320 --> 00:02:15.350 align:start position:0%
performance
dalvik<00:02:13.320><c> also</c><00:02:13.590><c> had</c><00:02:13.770><c> a</c><00:02:14.360><c> relatively</c>

00:02:15.350 --> 00:02:15.360 align:start position:0%
dalvik also had a relatively
 

00:02:15.360 --> 00:02:18.380 align:start position:0%
dalvik also had a relatively
unsophisticated<00:02:16.130><c> garbage</c><00:02:17.130><c> collector</c><00:02:17.550><c> I'd</c>

00:02:18.380 --> 00:02:18.390 align:start position:0%
unsophisticated garbage collector I'd
 

00:02:18.390 --> 00:02:20.210 align:start position:0%
unsophisticated garbage collector I'd
like<00:02:18.540><c> to</c><00:02:18.660><c> lead</c><00:02:18.840><c> to</c><00:02:18.960><c> long</c><00:02:19.200><c> application</c><00:02:19.470><c> pauses</c>

00:02:20.210 --> 00:02:20.220 align:start position:0%
like to lead to long application pauses
 

00:02:20.220 --> 00:02:25.450 align:start position:0%
like to lead to long application pauses
leading<00:02:20.880><c> to</c><00:02:21.000><c> a</c><00:02:21.030><c> janky</c><00:02:21.360><c> experience</c><00:02:23.450><c> so</c><00:02:24.450><c> in</c><00:02:24.570><c> 2014</c>

00:02:25.450 --> 00:02:25.460 align:start position:0%
leading to a janky experience so in 2014
 

00:02:25.460 --> 00:02:30.560 align:start position:0%
leading to a janky experience so in 2014
we<00:02:26.460><c> introduced</c><00:02:26.850><c> art</c><00:02:28.310><c> art</c><00:02:29.310><c> shifted</c><00:02:29.970><c> the</c>

00:02:30.560 --> 00:02:30.570 align:start position:0%
we introduced art art shifted the
 

00:02:30.570 --> 00:02:33.350 align:start position:0%
we introduced art art shifted the
padding<00:02:31.050><c> of</c><00:02:31.250><c> doing</c><00:02:32.250><c> interpretation</c><00:02:33.180><c> and</c>

00:02:33.350 --> 00:02:33.360 align:start position:0%
padding of doing interpretation and
 

00:02:33.360 --> 00:02:35.780 align:start position:0%
padding of doing interpretation and
just-in-time<00:02:33.840><c> compilation</c><00:02:34.080><c> at</c><00:02:34.560><c> one</c><00:02:34.740><c> time</c><00:02:34.980><c> to</c>

00:02:35.780 --> 00:02:35.790 align:start position:0%
just-in-time compilation at one time to
 

00:02:35.790 --> 00:02:37.820 align:start position:0%
just-in-time compilation at one time to
add<00:02:36.000><c> time</c><00:02:36.480><c> computation</c><00:02:37.020><c> when</c><00:02:37.710><c> the</c>

00:02:37.820 --> 00:02:37.830 align:start position:0%
add time computation when the
 

00:02:37.830 --> 00:02:42.110 align:start position:0%
add time computation when the
application<00:02:38.280><c> is</c><00:02:38.340><c> being</c><00:02:38.400><c> installed</c><00:02:41.000><c> so</c><00:02:42.000><c> when</c>

00:02:42.110 --> 00:02:42.120 align:start position:0%
application is being installed so when
 

00:02:42.120 --> 00:02:43.820 align:start position:0%
application is being installed so when
the<00:02:42.210><c> application</c><00:02:42.600><c> is</c><00:02:42.690><c> being</c><00:02:42.720><c> installed</c><00:02:43.050><c> art</c>

00:02:43.820 --> 00:02:43.830 align:start position:0%
the application is being installed art
 

00:02:43.830 --> 00:02:45.950 align:start position:0%
the application is being installed art
will<00:02:44.100><c> compile</c><00:02:44.400><c> it</c><00:02:44.520><c> directly</c><00:02:44.970><c> to</c><00:02:45.540><c> optimize</c>

00:02:45.950 --> 00:02:45.960 align:start position:0%
will compile it directly to optimize
 

00:02:45.960 --> 00:02:49.940 align:start position:0%
will compile it directly to optimize
code<00:02:47.120><c> that</c><00:02:48.120><c> gave</c><00:02:48.360><c> us</c><00:02:48.540><c> a</c><00:02:48.810><c> great</c><00:02:49.380><c> boost</c><00:02:49.620><c> on</c>

00:02:49.940 --> 00:02:49.950 align:start position:0%
code that gave us a great boost on
 

00:02:49.950 --> 00:02:55.340 align:start position:0%
code that gave us a great boost on
performance<00:02:50.760><c> an</c><00:02:51.300><c> application</c><00:02:51.840><c> startup</c><00:02:54.350><c> art</c>

00:02:55.340 --> 00:02:55.350 align:start position:0%
performance an application startup art
 

00:02:55.350 --> 00:02:58.130 align:start position:0%
performance an application startup art
did<00:02:55.590><c> not</c><00:02:55.770><c> need</c><00:02:55.980><c> a</c><00:02:56.340><c> just-in-time</c><00:02:57.090><c> compiler</c><00:02:57.540><c> to</c>

00:02:58.130 --> 00:02:58.140 align:start position:0%
did not need a just-in-time compiler to
 

00:02:58.140 --> 00:03:02.410 align:start position:0%
did not need a just-in-time compiler to
be<00:02:58.260><c> warmed</c><00:02:58.590><c> up</c><00:02:59.120><c> before</c><00:03:00.120><c> it</c><00:03:00.240><c> could</c><00:03:00.410><c> execute</c>

00:03:02.410 --> 00:03:02.420 align:start position:0%
be warmed up before it could execute
 

00:03:02.420 --> 00:03:05.600 align:start position:0%
be warmed up before it could execute
optimized<00:03:03.500><c> applications</c><00:03:04.500><c> were</c><00:03:05.160><c> running</c><00:03:05.430><c> out</c>

00:03:05.600 --> 00:03:05.610 align:start position:0%
optimized applications were running out
 

00:03:05.610 --> 00:03:08.890 align:start position:0%
optimized applications were running out
of<00:03:05.640><c> optimized</c><00:03:06.210><c> code</c><00:03:06.480><c> code</c><00:03:06.900><c> directly</c><00:03:07.320><c> and</c>

00:03:08.890 --> 00:03:08.900 align:start position:0%
of optimized code code directly and
 

00:03:08.900 --> 00:03:11.090 align:start position:0%
of optimized code code directly and
because<00:03:09.900><c> this</c><00:03:10.080><c> code</c><00:03:10.290><c> is</c><00:03:10.440><c> directly</c><00:03:10.800><c> loaded</c>

00:03:11.090 --> 00:03:11.100 align:start position:0%
because this code is directly loaded
 

00:03:11.100 --> 00:03:13.550 align:start position:0%
because this code is directly loaded
from<00:03:11.220><c> disk</c><00:03:11.570><c> you</c><00:03:12.570><c> don't</c><00:03:12.750><c> need</c><00:03:12.960><c> to</c><00:03:13.050><c> pay</c><00:03:13.230><c> the</c><00:03:13.290><c> cost</c>

00:03:13.550 --> 00:03:13.560 align:start position:0%
from disk you don't need to pay the cost
 

00:03:13.560 --> 00:03:17.780 align:start position:0%
from disk you don't need to pay the cost
of<00:03:13.860><c> a</c><00:03:14.070><c> JIT</c><00:03:14.250><c> compilation</c><00:03:14.400><c> code</c><00:03:14.940><c> cache</c><00:03:16.790><c> the</c>

00:03:17.780 --> 00:03:17.790 align:start position:0%
of a JIT compilation code cache the
 

00:03:17.790 --> 00:03:20.060 align:start position:0%
of a JIT compilation code cache the
garbage<00:03:18.090><c> collector</c><00:03:18.480><c> has</c><00:03:19.350><c> also</c><00:03:19.560><c> been</c>

00:03:20.060 --> 00:03:20.070 align:start position:0%
garbage collector has also been
 

00:03:20.070 --> 00:03:22.940 align:start position:0%
garbage collector has also been
completely<00:03:20.520><c> revamped</c><00:03:21.440><c> where</c><00:03:22.440><c> we</c><00:03:22.530><c> implemented</c>

00:03:22.940 --> 00:03:22.950 align:start position:0%
completely revamped where we implemented
 

00:03:22.950 --> 00:03:23.570 align:start position:0%
completely revamped where we implemented
state-of-the-art

00:03:23.570 --> 00:03:23.580 align:start position:0%
state-of-the-art
 

00:03:23.580 --> 00:03:25.310 align:start position:0%
state-of-the-art
concurrent<00:03:24.270><c> garbage</c><00:03:24.300><c> collector</c><00:03:24.540><c> algorithms</c>

00:03:25.310 --> 00:03:25.320 align:start position:0%
concurrent garbage collector algorithms
 

00:03:25.320 --> 00:03:28.430 align:start position:0%
concurrent garbage collector algorithms
and<00:03:25.860><c> we</c><00:03:26.670><c> make</c><00:03:26.850><c> sure</c><00:03:27.060><c> that</c><00:03:27.090><c> GC</c><00:03:27.630><c> pauses</c><00:03:27.900><c> were</c><00:03:28.260><c> to</c>

00:03:28.430 --> 00:03:28.440 align:start position:0%
and we make sure that GC pauses were to
 

00:03:28.440 --> 00:03:31.250 align:start position:0%
and we make sure that GC pauses were to
a<00:03:28.500><c> minimal</c><00:03:28.890><c> so</c><00:03:29.880><c> active</c><00:03:30.239><c> experience</c><00:03:31.110><c> was</c>

00:03:31.250 --> 00:03:31.260 align:start position:0%
a minimal so active experience was
 

00:03:31.260 --> 00:03:34.510 align:start position:0%
a minimal so active experience was
jank-free

00:03:34.510 --> 00:03:34.520 align:start position:0%
 
 

00:03:34.520 --> 00:03:37.460 align:start position:0%
 
since<00:03:35.520><c> lollipop</c><00:03:35.970><c> with</c><00:03:36.720><c> most</c><00:03:36.989><c> improving</c>

00:03:37.460 --> 00:03:37.470 align:start position:0%
since lollipop with most improving
 

00:03:37.470 --> 00:03:40.940 align:start position:0%
since lollipop with most improving
performance<00:03:38.660><c> so</c><00:03:39.660><c> we</c><00:03:39.780><c> have</c><00:03:39.870><c> evolution</c><00:03:40.650><c> on</c><00:03:40.830><c> the</c>

00:03:40.940 --> 00:03:40.950 align:start position:0%
performance so we have evolution on the
 

00:03:40.950 --> 00:03:44.900 align:start position:0%
performance so we have evolution on the
compiler<00:03:42.470><c> lollipop</c><00:03:43.470><c> when</c><00:03:43.620><c> we</c><00:03:43.769><c> shipped</c><00:03:44.010><c> had</c><00:03:44.880><c> a</c>

00:03:44.900 --> 00:03:44.910 align:start position:0%
compiler lollipop when we shipped had a
 

00:03:44.910 --> 00:03:46.820 align:start position:0%
compiler lollipop when we shipped had a
quick<00:03:45.209><c> when</c><00:03:45.720><c> we</c><00:03:45.750><c> should</c><00:03:45.989><c> nollie</c><00:03:46.170><c> pop</c><00:03:46.380><c> it</c><00:03:46.650><c> had</c><00:03:46.800><c> a</c>

00:03:46.820 --> 00:03:46.830 align:start position:0%
quick when we should nollie pop it had a
 

00:03:46.830 --> 00:03:49.670 align:start position:0%
quick when we should nollie pop it had a
quick<00:03:47.070><c> compiler</c><00:03:47.400><c> that</c><00:03:48.239><c> was</c><00:03:48.360><c> a</c><00:03:48.390><c> fast</c><00:03:48.810><c> Dex</c><00:03:49.500><c> to</c>

00:03:49.670 --> 00:03:49.680 align:start position:0%
quick compiler that was a fast Dex to
 

00:03:49.680 --> 00:03:51.560 align:start position:0%
quick compiler that was a fast Dex to
machine<00:03:49.980><c> code</c><00:03:50.160><c> compiler</c><00:03:50.489><c> it</c><00:03:50.970><c> was</c><00:03:51.120><c> ported</c><00:03:51.480><c> from</c>

00:03:51.560 --> 00:03:51.570 align:start position:0%
machine code compiler it was ported from
 

00:03:51.570 --> 00:03:55.850 align:start position:0%
machine code compiler it was ported from
the<00:03:51.720><c> dalvik</c><00:03:51.900><c> JIT</c><00:03:52.230><c> at</c><00:03:52.470><c> a</c><00:03:52.650><c> time</c><00:03:54.500><c> at</c><00:03:55.500><c> the</c><00:03:55.650><c> time</c>

00:03:55.850 --> 00:03:55.860 align:start position:0%
the dalvik JIT at a time at the time
 

00:03:55.860 --> 00:03:57.979 align:start position:0%
the dalvik JIT at a time at the time
were<00:03:56.070><c> really</c><00:03:56.370><c> eager</c><00:03:56.550><c> to</c><00:03:56.700><c> ship</c><00:03:57.060><c> art</c><00:03:57.300><c> given</c><00:03:57.810><c> all</c>

00:03:57.979 --> 00:03:57.989 align:start position:0%
were really eager to ship art given all
 

00:03:57.989 --> 00:04:00.290 align:start position:0%
were really eager to ship art given all
the<00:03:58.110><c> benefits</c><00:03:58.500><c> and</c><00:03:58.680><c> we</c><00:03:59.489><c> just</c><00:03:59.730><c> were</c><00:04:00.000><c> mostly</c>

00:04:00.290 --> 00:04:00.300 align:start position:0%
the benefits and we just were mostly
 

00:04:00.300 --> 00:04:04.009 align:start position:0%
the benefits and we just were mostly
focused<00:04:00.540><c> on</c><00:04:00.930><c> shipping</c><00:04:01.890><c> a</c><00:04:02.250><c> well</c><00:04:03.060><c> robot</c><00:04:03.780><c> well</c>

00:04:04.009 --> 00:04:04.019 align:start position:0%
focused on shipping a well robot well
 

00:04:04.019 --> 00:04:06.850 align:start position:0%
focused on shipping a well robot well
tested<00:04:04.500><c> a</c><00:04:04.590><c> robust</c><00:04:04.890><c> compiler</c>

00:04:06.850 --> 00:04:06.860 align:start position:0%
tested a robust compiler
 

00:04:06.860 --> 00:04:10.520 align:start position:0%
tested a robust compiler
however<00:04:08.360><c> quick</c><00:04:09.360><c> was</c><00:04:09.540><c> not</c><00:04:09.750><c> structurally</c><00:04:10.260><c> meant</c>

00:04:10.520 --> 00:04:10.530 align:start position:0%
however quick was not structurally meant
 

00:04:10.530 --> 00:04:12.470 align:start position:0%
however quick was not structurally meant
for<00:04:10.769><c> more</c><00:04:11.010><c> sophisticated</c><00:04:11.480><c> optimizations</c>

00:04:12.470 --> 00:04:12.480 align:start position:0%
for more sophisticated optimizations
 

00:04:12.480 --> 00:04:18.460 align:start position:0%
for more sophisticated optimizations
such<00:04:13.470><c> as</c><00:04:13.760><c> aligning</c><00:04:14.760><c> and</c><00:04:14.970><c> register</c><00:04:15.900><c> location</c>

00:04:18.460 --> 00:04:18.470 align:start position:0%
 
 

00:04:18.470 --> 00:04:20.800 align:start position:0%
 
so<00:04:19.070><c> in</c><00:04:19.160><c> marshmallow</c><00:04:19.700><c> we</c><00:04:20.330><c> introduce</c><00:04:20.690><c> the</c>

00:04:20.800 --> 00:04:20.810 align:start position:0%
so in marshmallow we introduce the
 

00:04:20.810 --> 00:04:23.320 align:start position:0%
so in marshmallow we introduce the
optimizing<00:04:21.170><c> compiler</c><00:04:22.120><c> that's</c><00:04:23.120><c> a</c>

00:04:23.320 --> 00:04:23.330 align:start position:0%
optimizing compiler that's a
 

00:04:23.330 --> 00:04:26.440 align:start position:0%
optimizing compiler that's a
state-of-the-art<00:04:24.010><c> SSA</c><00:04:25.010><c> form</c><00:04:25.340><c> based</c><00:04:26.030><c> compiler</c>

00:04:26.440 --> 00:04:26.450 align:start position:0%
state-of-the-art SSA form based compiler
 

00:04:26.450 --> 00:04:30.430 align:start position:0%
state-of-the-art SSA form based compiler
infrastructure<00:04:28.300><c> SSA</c><00:04:29.300><c> in</c><00:04:29.570><c> Kampala</c><00:04:30.050><c> jargon</c>

00:04:30.430 --> 00:04:30.440 align:start position:0%
infrastructure SSA in Kampala jargon
 

00:04:30.440 --> 00:04:33.430 align:start position:0%
infrastructure SSA in Kampala jargon
stands<00:04:31.250><c> for</c><00:04:31.430><c> static</c><00:04:31.970><c> single</c><00:04:32.150><c> assignment</c><00:04:32.440><c> and</c>

00:04:33.430 --> 00:04:33.440 align:start position:0%
stands for static single assignment and
 

00:04:33.440 --> 00:04:36.240 align:start position:0%
stands for static single assignment and
that's<00:04:33.560><c> a</c><00:04:33.680><c> well-known</c><00:04:34.210><c> format</c><00:04:35.210><c> for</c><00:04:35.510><c> doing</c>

00:04:36.240 --> 00:04:36.250 align:start position:0%
that's a well-known format for doing
 

00:04:36.250 --> 00:04:42.010 align:start position:0%
that's a well-known format for doing
optimizations<00:04:37.300><c> in</c><00:04:38.300><c> the</c><00:04:38.480><c> compiler</c><00:04:41.020><c> we</c>

00:04:42.010 --> 00:04:42.020 align:start position:0%
optimizations in the compiler we
 

00:04:42.020 --> 00:04:43.560 align:start position:0%
optimizations in the compiler we
implement<00:04:42.380><c> all</c><00:04:42.500><c> sorts</c><00:04:42.770><c> of</c><00:04:42.800><c> optimizations</c>

00:04:43.560 --> 00:04:43.570 align:start position:0%
implement all sorts of optimizations
 

00:04:43.570 --> 00:04:46.360 align:start position:0%
implement all sorts of optimizations
such<00:04:44.570><c> as</c><00:04:44.750><c> inlining</c><00:04:45.200><c> bounce</c><00:04:45.710><c> elimination</c>

00:04:46.360 --> 00:04:46.370 align:start position:0%
such as inlining bounce elimination
 

00:04:46.370 --> 00:04:49.450 align:start position:0%
such as inlining bounce elimination
common<00:04:47.530><c> subexpression</c><00:04:48.530><c> elimination</c><00:04:48.560><c> and</c><00:04:49.220><c> so</c>

00:04:49.450 --> 00:04:49.460 align:start position:0%
common subexpression elimination and so
 

00:04:49.460 --> 00:04:51.030 align:start position:0%
common subexpression elimination and so
on

00:04:51.030 --> 00:04:51.040 align:start position:0%
on
 

00:04:51.040 --> 00:04:53.290 align:start position:0%
on
we<00:04:52.040><c> also</c><00:04:52.190><c> included</c><00:04:52.610><c> a</c><00:04:52.670><c> linear</c><00:04:53.030><c> scan</c><00:04:53.270><c> register</c>

00:04:53.290 --> 00:04:53.300 align:start position:0%
we also included a linear scan register
 

00:04:53.300 --> 00:04:56.080 align:start position:0%
we also included a linear scan register
allocator<00:04:53.930><c> a</c><00:04:54.220><c> state-of-the-art</c><00:04:55.220><c> virtual</c>

00:04:56.080 --> 00:04:56.090 align:start position:0%
allocator a state-of-the-art virtual
 

00:04:56.090 --> 00:05:00.120 align:start position:0%
allocator a state-of-the-art virtual
location<00:04:56.660><c> technique</c><00:04:57.310><c> for</c><00:04:58.310><c> four</c><00:04:58.730><c> compilers</c>

00:05:00.120 --> 00:05:00.130 align:start position:0%
location technique for four compilers
 

00:05:00.130 --> 00:05:04.060 align:start position:0%
location technique for four compilers
and<00:05:01.130><c> um</c><00:05:02.000><c> we</c><00:05:02.810><c> iterate</c><00:05:03.200><c> on</c><00:05:03.260><c> that</c><00:05:03.320><c> compiler</c><00:05:03.770><c> and</c>

00:05:04.060 --> 00:05:04.070 align:start position:0%
and um we iterate on that compiler and
 

00:05:04.070 --> 00:05:06.850 align:start position:0%
and um we iterate on that compiler and
make<00:05:04.970><c> more</c><00:05:05.240><c> aggressive</c><00:05:05.690><c> optimizations</c><00:05:06.320><c> like</c>

00:05:06.850 --> 00:05:06.860 align:start position:0%
make more aggressive optimizations like
 

00:05:06.860 --> 00:05:08.830 align:start position:0%
make more aggressive optimizations like
more<00:05:07.100><c> aligning</c><00:05:07.550><c> and</c><00:05:08.360><c> lots</c><00:05:08.570><c> more</c>

00:05:08.830 --> 00:05:08.840 align:start position:0%
more aligning and lots more
 

00:05:08.840 --> 00:05:16.180 align:start position:0%
more aligning and lots more
lots<00:05:09.110><c> more</c><00:05:09.200><c> optimization</c><00:05:13.300><c> this</c><00:05:14.300><c> graph</c><00:05:15.190><c> shows</c>

00:05:16.180 --> 00:05:16.190 align:start position:0%
lots more optimization this graph shows
 

00:05:16.190 --> 00:05:18.460 align:start position:0%
lots more optimization this graph shows
the<00:05:16.220><c> performance</c><00:05:16.640><c> of</c><00:05:17.090><c> marshmallow</c><00:05:17.870><c> and</c><00:05:18.140><c> M</c>

00:05:18.460 --> 00:05:18.470 align:start position:0%
the performance of marshmallow and M
 

00:05:18.470 --> 00:05:20.620 align:start position:0%
the performance of marshmallow and M
preview<00:05:18.940><c> normalized</c><00:05:19.940><c> to</c><00:05:20.090><c> performance</c><00:05:20.540><c> in</c>

00:05:20.620 --> 00:05:20.630 align:start position:0%
preview normalized to performance in
 

00:05:20.630 --> 00:05:25.710 align:start position:0%
preview normalized to performance in
lollipop<00:05:22.300><c> its</c><00:05:23.530><c> benchmarks</c><00:05:24.530><c> one</c><00:05:24.770><c> on</c><00:05:25.010><c> Nexus</c><00:05:25.370><c> 9</c>

00:05:25.710 --> 00:05:25.720 align:start position:0%
lollipop its benchmarks one on Nexus 9
 

00:05:25.720 --> 00:05:28.420 align:start position:0%
lollipop its benchmarks one on Nexus 9
the<00:05:26.720><c> tablet</c><00:05:27.140><c> where</c><00:05:27.500><c> we</c><00:05:27.590><c> at</c><00:05:27.770><c> a</c><00:05:27.919><c> bit</c><00:05:28.070><c> worried</c>

00:05:28.420 --> 00:05:28.430 align:start position:0%
the tablet where we at a bit worried
 

00:05:28.430 --> 00:05:31.690 align:start position:0%
the tablet where we at a bit worried
lollipop<00:05:28.850><c> and</c><00:05:29.120><c> the</c><00:05:30.080><c> first</c><00:05:30.320><c> relief</c><00:05:30.530><c> of</c><00:05:30.860><c> art</c><00:05:31.070><c> and</c>

00:05:31.690 --> 00:05:31.700 align:start position:0%
lollipop and the first relief of art and
 

00:05:31.700 --> 00:05:33.640 align:start position:0%
lollipop and the first relief of art and
you<00:05:32.300><c> can</c><00:05:32.450><c> see</c><00:05:32.600><c> we've</c><00:05:32.750><c> causes</c><00:05:33.169><c> the</c><00:05:33.260><c> improvement</c>

00:05:33.640 --> 00:05:33.650 align:start position:0%
you can see we've causes the improvement
 

00:05:33.650 --> 00:05:37.210 align:start position:0%
you can see we've causes the improvement
performance<00:05:33.800><c> of</c><00:05:34.220><c> a</c><00:05:34.280><c> time</c><00:05:35.620><c> we</c><00:05:36.620><c> measured</c><00:05:36.950><c> on</c>

00:05:37.210 --> 00:05:37.220 align:start position:0%
performance of a time we measured on
 

00:05:37.220 --> 00:05:39.420 align:start position:0%
performance of a time we measured on
three<00:05:37.760><c> different</c><00:05:37.970><c> kinds</c><00:05:38.360><c> of</c><00:05:38.419><c> benchmarks</c>

00:05:39.420 --> 00:05:39.430 align:start position:0%
three different kinds of benchmarks
 

00:05:39.430 --> 00:05:42.900 align:start position:0%
three different kinds of benchmarks
deltablue<00:05:40.430><c> enrichers</c><00:05:40.940><c> our</c><00:05:41.570><c> well-known</c>

00:05:42.900 --> 00:05:42.910 align:start position:0%
deltablue enrichers our well-known
 

00:05:42.910 --> 00:05:44.710 align:start position:0%
deltablue enrichers our well-known
object-oriented<00:05:43.910><c> benchmark</c><00:05:44.360><c> in</c><00:05:44.660><c> the</c>

00:05:44.710 --> 00:05:44.720 align:start position:0%
object-oriented benchmark in the
 

00:05:44.720 --> 00:05:47.290 align:start position:0%
object-oriented benchmark in the
arbitrated<00:05:45.470><c> community</c><00:05:45.860><c> that</c><00:05:46.550><c> stresses</c><00:05:46.940><c> how</c>

00:05:47.290 --> 00:05:47.300 align:start position:0%
arbitrated community that stresses how
 

00:05:47.300 --> 00:05:50.100 align:start position:0%
arbitrated community that stresses how
you<00:05:47.360><c> have</c><00:05:47.840><c> the</c><00:05:47.930><c> runtime</c><00:05:48.380><c> implements</c><00:05:49.040><c> calls</c>

00:05:50.100 --> 00:05:50.110 align:start position:0%
you have the runtime implements calls
 

00:05:50.110 --> 00:05:53.920 align:start position:0%
you have the runtime implements calls
try<00:05:51.110><c> stone</c><00:05:51.440><c> is</c><00:05:51.710><c> about</c><00:05:52.300><c> how</c><00:05:53.300><c> the</c><00:05:53.360><c> run</c><00:05:53.660><c> time</c><00:05:53.900><c> and</c>

00:05:53.920 --> 00:05:53.930 align:start position:0%
try stone is about how the run time and
 

00:05:53.930 --> 00:05:56.140 align:start position:0%
try stone is about how the run time and
the<00:05:54.140><c> compiler</c><00:05:54.580><c> generates</c><00:05:55.580><c> integer</c>

00:05:56.140 --> 00:05:56.150 align:start position:0%
the compiler generates integer
 

00:05:56.150 --> 00:06:01.540 align:start position:0%
the compiler generates integer
computations<00:05:59.410><c> reversely</c><00:06:00.410><c> bench</c><00:06:00.740><c> test</c><00:06:01.280><c> bench</c>

00:06:01.540 --> 00:06:01.550 align:start position:0%
computations reversely bench test bench
 

00:06:01.550 --> 00:06:05.680 align:start position:0%
computations reversely bench test bench
and<00:06:01.790><c> ribs</c><00:06:02.180><c> are</c><00:06:02.900><c> actually</c><00:06:03.380><c> adaptations</c><00:06:04.160><c> of</c><00:06:04.690><c> of</c>

00:06:05.680 --> 00:06:05.690 align:start position:0%
and ribs are actually adaptations of of
 

00:06:05.690 --> 00:06:08.590 align:start position:0%
and ribs are actually adaptations of of
Android<00:06:06.410><c> applications</c><00:06:07.480><c> perversity</c><00:06:08.480><c> and</c>

00:06:08.590 --> 00:06:08.600 align:start position:0%
Android applications perversity and
 

00:06:08.600 --> 00:06:13.659 align:start position:0%
Android applications perversity and
chess<00:06:09.370><c> emulate</c><00:06:10.370><c> dai</c><00:06:10.790><c> of</c><00:06:11.480><c> an</c><00:06:11.750><c> actual</c><00:06:11.990><c> game</c><00:06:12.669><c> that</c>

00:06:13.659 --> 00:06:13.669 align:start position:0%
chess emulate dai of an actual game that
 

00:06:13.669 --> 00:06:15.630 align:start position:0%
chess emulate dai of an actual game that
can<00:06:13.820><c> get</c><00:06:14.150><c> download</c><00:06:14.390><c> from</c><00:06:14.510><c> the</c><00:06:14.600><c> Play</c><00:06:14.750><c> Store</c><00:06:14.990><c> and</c>

00:06:15.630 --> 00:06:15.640 align:start position:0%
can get download from the Play Store and
 

00:06:15.640 --> 00:06:21.550 align:start position:0%
can get download from the Play Store and
reads<00:06:16.640><c> emulate</c><00:06:17.360><c> spreadsheet</c><00:06:17.930><c> emulation</c><00:06:20.560><c> so</c>

00:06:21.550 --> 00:06:21.560 align:start position:0%
reads emulate spreadsheet emulation so
 

00:06:21.560 --> 00:06:22.600 align:start position:0%
reads emulate spreadsheet emulation so
we<00:06:21.650><c> feel</c><00:06:21.830><c> very</c><00:06:21.860><c> pleased</c><00:06:22.280><c> with</c><00:06:22.460><c> the</c>

00:06:22.600 --> 00:06:22.610 align:start position:0%
we feel very pleased with the
 

00:06:22.610 --> 00:06:25.360 align:start position:0%
we feel very pleased with the
improvements<00:06:23.419><c> we</c><00:06:23.480><c> made</c><00:06:23.510><c> here</c><00:06:23.919><c> ranging</c><00:06:24.919><c> from</c><00:06:25.130><c> 1</c>

00:06:25.360 --> 00:06:25.370 align:start position:0%
improvements we made here ranging from 1
 

00:06:25.370 --> 00:06:29.310 align:start position:0%
improvements we made here ranging from 1
point<00:06:25.550><c> to</c><00:06:25.669><c> X</c><00:06:25.970><c> -</c><00:06:26.810><c> 5</c><00:06:27.020><c> XP</c><00:06:27.350><c> Docs</c>

00:06:29.310 --> 00:06:29.320 align:start position:0%
point to X - 5 XP Docs
 

00:06:29.320 --> 00:06:31.990 align:start position:0%
point to X - 5 XP Docs
and<00:06:30.320><c> the</c><00:06:30.410><c> performance</c><00:06:30.920><c> boost</c><00:06:31.100><c> isn't</c><00:06:31.460><c> specific</c>

00:06:31.990 --> 00:06:32.000 align:start position:0%
and the performance boost isn't specific
 

00:06:32.000 --> 00:06:35.050 align:start position:0%
and the performance boost isn't specific
to<00:06:32.150><c> one</c><00:06:32.360><c> architecture</c><00:06:33.700><c> because</c><00:06:34.700><c> most</c><00:06:34.940><c> of</c>

00:06:35.050 --> 00:06:35.060 align:start position:0%
to one architecture because most of
 

00:06:35.060 --> 00:06:37.960 align:start position:0%
to one architecture because most of
optimizations<00:06:35.690><c> are</c><00:06:35.810><c> CPU</c><00:06:36.200><c> independent</c><00:06:36.970><c> all</c>

00:06:37.960 --> 00:06:37.970 align:start position:0%
optimizations are CPU independent all
 

00:06:37.970 --> 00:06:40.200 align:start position:0%
optimizations are CPU independent all
platforms<00:06:38.510><c> benefit</c><00:06:39.080><c> from</c><00:06:39.200><c> them</c>

00:06:40.200 --> 00:06:40.210 align:start position:0%
platforms benefit from them
 

00:06:40.210 --> 00:06:43.330 align:start position:0%
platforms benefit from them
so<00:06:41.210><c> running</c><00:06:41.420><c> the</c><00:06:41.570><c> same</c><00:06:41.750><c> benchmarks</c><00:06:42.410><c> unarmed</c>

00:06:43.330 --> 00:06:43.340 align:start position:0%
so running the same benchmarks unarmed
 

00:06:43.340 --> 00:06:45.390 align:start position:0%
so running the same benchmarks unarmed
study<00:06:43.580><c> too</c><00:06:43.730><c> will</c><00:06:44.690><c> lead</c><00:06:44.840><c> to</c><00:06:44.930><c> the</c><00:06:45.020><c> same</c>

00:06:45.390 --> 00:06:45.400 align:start position:0%
study too will lead to the same
 

00:06:45.400 --> 00:06:47.590 align:start position:0%
study too will lead to the same
improvement<00:06:46.400><c> trend</c><00:06:46.610><c> across</c><00:06:46.910><c> measure</c><00:06:47.150><c> across</c>

00:06:47.590 --> 00:06:47.600 align:start position:0%
improvement trend across measure across
 

00:06:47.600 --> 00:06:53.320 align:start position:0%
improvement trend across measure across
the<00:06:48.140><c> board</c><00:06:50.350><c> so</c><00:06:51.350><c> that's</c><00:06:51.470><c> great</c><00:06:52.180><c> improving</c><00:06:53.180><c> the</c>

00:06:53.320 --> 00:06:53.330 align:start position:0%
the board so that's great improving the
 

00:06:53.330 --> 00:06:54.940 align:start position:0%
the board so that's great improving the
code<00:06:53.510><c> generated</c><00:06:53.900><c> by</c><00:06:53.960><c> clean</c><00:06:54.170><c> power</c><00:06:54.290><c> is</c><00:06:54.560><c> a</c><00:06:54.710><c> great</c>

00:06:54.940 --> 00:06:54.950 align:start position:0%
code generated by clean power is a great
 

00:06:54.950 --> 00:06:58.630 align:start position:0%
code generated by clean power is a great
win<00:06:55.250><c> for</c><00:06:55.660><c> performance</c><00:06:57.310><c> faster</c><00:06:58.310><c> frame</c>

00:06:58.630 --> 00:06:58.640 align:start position:0%
win for performance faster frame
 

00:06:58.640 --> 00:07:07.490 align:start position:0%
win for performance faster frame
rendering<00:06:59.030><c> and</c><00:06:59.290><c> faster</c><00:07:00.290><c> startup</c><00:07:02.050><c> great</c><00:07:03.430><c> but</c>

00:07:07.490 --> 00:07:07.500 align:start position:0%
 
 

00:07:07.500 --> 00:07:12.950 align:start position:0%
 
I<00:07:08.630><c> looks</c><00:07:09.630><c> like</c><00:07:09.750><c> you</c><00:07:09.840><c> guys</c><00:07:10.020><c> run</c><00:07:10.530><c> into</c><00:07:10.620><c> this</c><00:07:11.960><c> so</c>

00:07:12.950 --> 00:07:12.960 align:start position:0%
I looks like you guys run into this so
 

00:07:12.960 --> 00:07:14.030 align:start position:0%
I looks like you guys run into this so
you<00:07:13.020><c> probably</c><00:07:13.200><c> familiar</c><00:07:13.440><c> with</c><00:07:13.620><c> that</c><00:07:13.710><c> dialogue</c>

00:07:14.030 --> 00:07:14.040 align:start position:0%
you probably familiar with that dialogue
 

00:07:14.040 --> 00:07:20.480 align:start position:0%
you probably familiar with that dialogue
now<00:07:17.180><c> it's</c><00:07:18.180><c> pretty</c><00:07:18.390><c> lucky</c><00:07:18.660><c> right</c><00:07:19.130><c> only</c><00:07:20.130><c> twenty</c>

00:07:20.480 --> 00:07:20.490 align:start position:0%
now it's pretty lucky right only twenty
 

00:07:20.490 --> 00:07:27.530 align:start position:0%
now it's pretty lucky right only twenty
one<00:07:20.610><c> to</c><00:07:20.760><c> go</c><00:07:24.200><c> so</c><00:07:25.200><c> that</c><00:07:25.470><c> dialogue</c><00:07:25.920><c> is</c><00:07:26.910><c> what</c><00:07:27.330><c> is</c>

00:07:27.530 --> 00:07:27.540 align:start position:0%
one to go so that dialogue is what is
 

00:07:27.540 --> 00:07:29.290 align:start position:0%
one to go so that dialogue is what is
shown<00:07:27.810><c> when</c><00:07:28.080><c> you</c><00:07:28.170><c> take</c><00:07:28.320><c> a</c><00:07:28.350><c> system</c><00:07:28.650><c> update</c><00:07:28.830><c> and</c>

00:07:29.290 --> 00:07:29.300 align:start position:0%
shown when you take a system update and
 

00:07:29.300 --> 00:07:31.700 align:start position:0%
shown when you take a system update and
what<00:07:30.300><c> happens</c><00:07:30.630><c> there</c><00:07:30.900><c> in</c><00:07:31.320><c> case</c><00:07:31.470><c> you</c><00:07:31.590><c> don't</c>

00:07:31.700 --> 00:07:31.710 align:start position:0%
what happens there in case you don't
 

00:07:31.710 --> 00:07:33.260 align:start position:0%
what happens there in case you don't
know<00:07:31.830><c> is</c><00:07:32.160><c> that</c><00:07:32.190><c> we're</c><00:07:32.520><c> redoing</c><00:07:32.850><c> all</c><00:07:33.210><c> the</c>

00:07:33.260 --> 00:07:33.270 align:start position:0%
know is that we're redoing all the
 

00:07:33.270 --> 00:07:35.030 align:start position:0%
know is that we're redoing all the
optimizations<00:07:33.990><c> we've</c><00:07:34.170><c> done</c><00:07:34.410><c> at</c><00:07:34.620><c> install</c><00:07:35.010><c> time</c>

00:07:35.030 --> 00:07:35.040 align:start position:0%
optimizations we've done at install time
 

00:07:35.040 --> 00:07:39.590 align:start position:0%
optimizations we've done at install time
of<00:07:35.370><c> an</c><00:07:35.430><c> application</c><00:07:37.040><c> why</c><00:07:38.360><c> because</c><00:07:39.360><c> when</c><00:07:39.510><c> you</c>

00:07:39.590 --> 00:07:39.600 align:start position:0%
of an application why because when you
 

00:07:39.600 --> 00:07:42.020 align:start position:0%
of an application why because when you
use<00:07:39.690><c> all</c><00:07:39.870><c> application</c><00:07:40.440><c> art</c><00:07:40.890><c> will</c><00:07:41.160><c> optimize</c><00:07:41.550><c> it</c>

00:07:42.020 --> 00:07:42.030 align:start position:0%
use all application art will optimize it
 

00:07:42.030 --> 00:07:45.620 align:start position:0%
use all application art will optimize it
heavily<00:07:42.750><c> against</c><00:07:43.380><c> your</c><00:07:43.500><c> platform</c><00:07:43.950><c> and</c><00:07:44.630><c> it</c>

00:07:45.620 --> 00:07:45.630 align:start position:0%
heavily against your platform and it
 

00:07:45.630 --> 00:07:47.480 align:start position:0%
heavily against your platform and it
will<00:07:45.750><c> put</c><00:07:45.960><c> hard-coded</c><00:07:46.560><c> dependencies</c><00:07:47.130><c> in</c><00:07:47.430><c> the</c>

00:07:47.480 --> 00:07:47.490 align:start position:0%
will put hard-coded dependencies in the
 

00:07:47.490 --> 00:07:49.610 align:start position:0%
will put hard-coded dependencies in the
compiled<00:07:48.060><c> code</c><00:07:48.230><c> that</c><00:07:49.230><c> will</c><00:07:49.350><c> make</c><00:07:49.530><c> your</c>

00:07:49.610 --> 00:07:49.620 align:start position:0%
compiled code that will make your
 

00:07:49.620 --> 00:07:53.720 align:start position:0%
compiled code that will make your
applications<00:07:50.190><c> run</c><00:07:50.400><c> much</c><00:07:50.850><c> faster</c><00:07:52.580><c> but</c><00:07:53.580><c> when</c>

00:07:53.720 --> 00:07:53.730 align:start position:0%
applications run much faster but when
 

00:07:53.730 --> 00:07:55.970 align:start position:0%
applications run much faster but when
you<00:07:53.820><c> get</c><00:07:53.940><c> a</c><00:07:53.970><c> system</c><00:07:54.180><c> update</c><00:07:54.740><c> all</c><00:07:55.740><c> those</c>

00:07:55.970 --> 00:07:55.980 align:start position:0%
you get a system update all those
 

00:07:55.980 --> 00:07:57.500 align:start position:0%
you get a system update all those
hard-coded<00:07:56.460><c> dependencies</c><00:07:56.940><c> become</c><00:07:57.210><c> invalid</c>

00:07:57.500 --> 00:07:57.510 align:start position:0%
hard-coded dependencies become invalid
 

00:07:57.510 --> 00:08:00.260 align:start position:0%
hard-coded dependencies become invalid
because<00:07:57.990><c> you</c><00:07:58.200><c> get</c><00:07:58.350><c> a</c><00:07:58.380><c> new</c><00:07:58.500><c> system</c><00:07:58.860><c> so</c><00:07:59.100><c> we</c><00:07:59.970><c> knew</c>

00:08:00.260 --> 00:08:00.270 align:start position:0%
because you get a new system so we knew
 

00:08:00.270 --> 00:08:04.910 align:start position:0%
because you get a new system so we knew
to<00:08:00.600><c> redo</c><00:08:00.870><c> all</c><00:08:00.900><c> the</c><00:08:01.200><c> work</c><00:08:03.290><c> when</c><00:08:04.290><c> we</c><00:08:04.410><c> shipped</c><00:08:04.650><c> art</c>

00:08:04.910 --> 00:08:04.920 align:start position:0%
to redo all the work when we shipped art
 

00:08:04.920 --> 00:08:07.460 align:start position:0%
to redo all the work when we shipped art
that<00:08:05.820><c> was</c><00:08:05.910><c> actually</c><00:08:06.330><c> a</c><00:08:06.570><c> trade-off</c><00:08:06.990><c> we've</c><00:08:07.260><c> made</c>

00:08:07.460 --> 00:08:07.470 align:start position:0%
that was actually a trade-off we've made
 

00:08:07.470 --> 00:08:11.540 align:start position:0%
that was actually a trade-off we've made
because<00:08:08.960><c> OTAs</c><00:08:09.960><c> or</c><00:08:10.410><c> system</c><00:08:10.830><c> updates</c><00:08:11.160><c> were</c>

00:08:11.540 --> 00:08:11.550 align:start position:0%
because OTAs or system updates were
 

00:08:11.550 --> 00:08:14.360 align:start position:0%
because OTAs or system updates were
usually<00:08:11.730><c> once</c><00:08:12.240><c> a</c><00:08:12.390><c> year</c><00:08:12.690><c> so</c><00:08:13.500><c> for</c><00:08:13.770><c> once</c><00:08:14.040><c> a</c><00:08:14.190><c> year</c>

00:08:14.360 --> 00:08:14.370 align:start position:0%
usually once a year so for once a year
 

00:08:14.370 --> 00:08:17.690 align:start position:0%
usually once a year so for once a year
update<00:08:14.610><c> you'll</c><00:08:15.300><c> get</c><00:08:15.510><c> really</c><00:08:15.990><c> better</c><00:08:16.700><c> Android</c>

00:08:17.690 --> 00:08:17.700 align:start position:0%
update you'll get really better Android
 

00:08:17.700 --> 00:08:24.340 align:start position:0%
update you'll get really better Android
experience

00:08:24.340 --> 00:08:24.350 align:start position:0%
 
 

00:08:24.350 --> 00:08:29.160 align:start position:0%
 
but<00:08:25.250><c> Android</c><00:08:26.240><c> ecosystem</c><00:08:26.390><c> has</c><00:08:26.870><c> evolved</c><00:08:27.290><c> and</c>

00:08:29.160 --> 00:08:29.170 align:start position:0%
but Android ecosystem has evolved and
 

00:08:29.170 --> 00:08:31.830 align:start position:0%
but Android ecosystem has evolved and
security<00:08:30.170><c> being</c><00:08:30.380><c> at</c><00:08:30.530><c> the</c><00:08:30.620><c> heart</c><00:08:30.830><c> of</c><00:08:31.130><c> Android</c>

00:08:31.830 --> 00:08:31.840 align:start position:0%
security being at the heart of Android
 

00:08:31.840 --> 00:08:35.110 align:start position:0%
security being at the heart of Android
our<00:08:32.840><c> security</c><00:08:33.320><c> team</c><00:08:33.520><c> worked</c><00:08:34.520><c> hard</c><00:08:34.849><c> on</c><00:08:34.970><c> making</c>

00:08:35.110 --> 00:08:35.120 align:start position:0%
our security team worked hard on making
 

00:08:35.120 --> 00:08:37.900 align:start position:0%
our security team worked hard on making
sure<00:08:35.330><c> security</c><00:08:36.140><c> fixes</c><00:08:36.460><c> could</c><00:08:37.460><c> be</c><00:08:37.610><c> sent</c><00:08:37.820><c> to</c>

00:08:37.900 --> 00:08:37.910 align:start position:0%
sure security fixes could be sent to
 

00:08:37.910 --> 00:08:42.520 align:start position:0%
sure security fixes could be sent to
hundred<00:08:38.150><c> phones</c><00:08:38.390><c> as</c><00:08:39.200><c> soon</c><00:08:39.440><c> as</c><00:08:39.560><c> possible</c><00:08:41.530><c> so</c>

00:08:42.520 --> 00:08:42.530 align:start position:0%
hundred phones as soon as possible so
 

00:08:42.530 --> 00:08:45.630 align:start position:0%
hundred phones as soon as possible so
when<00:08:42.710><c> our</c><00:08:43.030><c> lead</c><00:08:44.030><c> security</c><00:08:44.360><c> engineer</c><00:08:44.840><c> and</c>

00:08:45.630 --> 00:08:45.640 align:start position:0%
when our lead security engineer and
 

00:08:45.640 --> 00:08:49.540 align:start position:0%
when our lead security engineer and
director<00:08:46.640><c> of</c><00:08:46.670><c> Nexus</c><00:08:47.030><c> products</c><00:08:48.190><c> announced</c><00:08:49.190><c> we</c>

00:08:49.540 --> 00:08:49.550 align:start position:0%
director of Nexus products announced we
 

00:08:49.550 --> 00:08:52.060 align:start position:0%
director of Nexus products announced we
are<00:08:49.640><c> now</c><00:08:49.760><c> moving</c><00:08:49.910><c> to</c><00:08:50.180><c> monthly</c><00:08:50.510><c> updates</c><00:08:50.920><c> it</c><00:08:51.920><c> was</c>

00:08:52.060 --> 00:08:52.070 align:start position:0%
are now moving to monthly updates it was
 

00:08:52.070 --> 00:08:53.440 align:start position:0%
are now moving to monthly updates it was
sort<00:08:52.310><c> of</c><00:08:52.340><c> clear</c><00:08:52.610><c> that</c><00:08:52.880><c> this</c><00:08:53.060><c> initial</c>

00:08:53.440 --> 00:08:53.450 align:start position:0%
sort of clear that this initial
 

00:08:53.450 --> 00:08:56.560 align:start position:0%
sort of clear that this initial
trade-off<00:08:53.750><c> we</c><00:08:53.870><c> made</c><00:08:54.080><c> will</c><00:08:55.010><c> not</c><00:08:55.040><c> work</c><00:08:55.400><c> and</c><00:08:55.640><c> our</c>

00:08:56.560 --> 00:08:56.570 align:start position:0%
trade-off we made will not work and our
 

00:08:56.570 --> 00:09:00.700 align:start position:0%
trade-off we made will not work and our
team<00:08:56.780><c> to</c><00:08:56.930><c> adapt</c><00:08:59.020><c> so</c><00:09:00.020><c> we</c><00:09:00.170><c> bought</c><00:09:00.320><c> back</c><00:09:00.530><c> a</c>

00:09:00.700 --> 00:09:00.710 align:start position:0%
team to adapt so we bought back a
 

00:09:00.710 --> 00:09:05.730 align:start position:0%
team to adapt so we bought back a
just-in-time<00:09:01.100><c> compiler</c><00:09:01.550><c> in</c><00:09:02.330><c> art</c><00:09:04.330><c> so</c><00:09:05.330><c> no</c><00:09:05.450><c> more</c>

00:09:05.730 --> 00:09:05.740 align:start position:0%
just-in-time compiler in art so no more
 

00:09:05.740 --> 00:09:20.610 align:start position:0%
just-in-time compiler in art so no more
optimizing<00:09:06.740><c> app</c><00:09:06.890><c> dialogue</c><00:09:14.800><c> thank</c><00:09:15.800><c> you</c>

00:09:20.610 --> 00:09:20.620 align:start position:0%
 
 

00:09:20.620 --> 00:09:23.080 align:start position:0%
 
it<00:09:21.620><c> turns</c><00:09:21.830><c> out</c><00:09:22.010><c> moving</c><00:09:22.520><c> the</c><00:09:22.610><c> dialogue</c><00:09:22.940><c> is</c><00:09:23.060><c> not</c>

00:09:23.080 --> 00:09:23.090 align:start position:0%
it turns out moving the dialogue is not
 

00:09:23.090 --> 00:09:26.860 align:start position:0%
it turns out moving the dialogue is not
the<00:09:23.330><c> only</c><00:09:23.510><c> benefit</c><00:09:23.870><c> of</c><00:09:24.530><c> having</c><00:09:25.370><c> a</c><00:09:25.550><c> JIT</c><00:09:25.760><c> we</c><00:09:26.750><c> now</c>

00:09:26.860 --> 00:09:26.870 align:start position:0%
the only benefit of having a JIT we now
 

00:09:26.870 --> 00:09:29.680 align:start position:0%
the only benefit of having a JIT we now
get<00:09:27.080><c> much</c><00:09:27.350><c> faster</c><00:09:27.620><c> installs</c><00:09:28.240><c> around</c><00:09:29.240><c> 75%</c>

00:09:29.680 --> 00:09:29.690 align:start position:0%
get much faster installs around 75%
 

00:09:29.690 --> 00:09:33.310 align:start position:0%
get much faster installs around 75%
faster<00:09:30.410><c> and</c><00:09:31.750><c> because</c><00:09:32.750><c> they</c><00:09:32.870><c> would</c><00:09:32.990><c> he</c><00:09:33.140><c> could</c>

00:09:33.310 --> 00:09:33.320 align:start position:0%
faster and because they would he could
 

00:09:33.320 --> 00:09:35.710 align:start position:0%
faster and because they would he could
not<00:09:33.560><c> know</c><00:09:33.590><c> when</c><00:09:34.580><c> it</c><00:09:34.610><c> was</c><00:09:34.760><c> compiling</c><00:09:35.180><c> which</c>

00:09:35.710 --> 00:09:35.720 align:start position:0%
not know when it was compiling which
 

00:09:35.720 --> 00:09:39.310 align:start position:0%
not know when it was compiling which
parts<00:09:36.290><c> of</c><00:09:36.380><c> the</c><00:09:36.440><c> app</c><00:09:36.760><c> is</c><00:09:37.760><c> being</c><00:09:38.060><c> executed</c><00:09:38.320><c> which</c>

00:09:39.310 --> 00:09:39.320 align:start position:0%
parts of the app is being executed which
 

00:09:39.320 --> 00:09:41.170 align:start position:0%
parts of the app is being executed which
it<00:09:39.560><c> turns</c><00:09:39.770><c> out</c><00:09:39.860><c> that</c><00:09:40.010><c> we</c><00:09:40.130><c> were</c><00:09:40.250><c> compiling</c><00:09:40.520><c> all</c>

00:09:41.170 --> 00:09:41.180 align:start position:0%
it turns out that we were compiling all
 

00:09:41.180 --> 00:09:44.440 align:start position:0%
it turns out that we were compiling all
the<00:09:41.510><c> code</c><00:09:41.720><c> of</c><00:09:42.170><c> your</c><00:09:42.350><c> apk</c><00:09:42.940><c> and</c><00:09:43.940><c> I</c><00:09:44.060><c> just</c><00:09:44.240><c> sort</c><00:09:44.390><c> of</c>

00:09:44.440 --> 00:09:44.450 align:start position:0%
the code of your apk and I just sort of
 

00:09:44.450 --> 00:09:46.360 align:start position:0%
the code of your apk and I just sort of
a<00:09:44.540><c> waste</c><00:09:44.780><c> of</c><00:09:44.930><c> your</c><00:09:44.990><c> storage</c><00:09:45.500><c> if</c><00:09:45.710><c> you're</c><00:09:46.220><c> gonna</c>

00:09:46.360 --> 00:09:46.370 align:start position:0%
a waste of your storage if you're gonna
 

00:09:46.370 --> 00:09:53.230 align:start position:0%
a waste of your storage if you're gonna
use<00:09:46.670><c> just</c><00:09:46.700><c> 5</c><00:09:47.420><c> or</c><00:09:47.450><c> 10%</c><00:09:48.490><c> of</c><00:09:49.490><c> the</c><00:09:49.610><c> code</c><00:09:52.240><c> but</c>

00:09:53.230 --> 00:09:53.240 align:start position:0%
use just 5 or 10% of the code but
 

00:09:53.240 --> 00:09:57.100 align:start position:0%
use just 5 or 10% of the code but
letting<00:09:53.480><c> legit</c><00:09:53.810><c> has</c><00:09:54.650><c> some</c><00:09:54.830><c> unknown</c><00:09:56.110><c> like</c>

00:09:57.100 --> 00:09:57.110 align:start position:0%
letting legit has some unknown like
 

00:09:57.110 --> 00:09:59.500 align:start position:0%
letting legit has some unknown like
clearly<00:09:57.410><c> keeping</c><00:09:58.340><c> on</c><00:09:58.460><c> compiling</c><00:09:58.850><c> all</c><00:09:59.270><c> the</c>

00:09:59.500 --> 00:09:59.510 align:start position:0%
clearly keeping on compiling all the
 

00:09:59.510 --> 00:10:02.800 align:start position:0%
clearly keeping on compiling all the
time<00:09:59.750><c> like</c><00:10:00.290><c> you</c><00:10:00.440><c> start</c><00:10:00.710><c> the</c><00:10:00.830><c> app</c><00:10:00.950><c> Egypt</c><00:10:01.880><c> you</c>

00:10:02.800 --> 00:10:02.810 align:start position:0%
time like you start the app Egypt you
 

00:10:02.810 --> 00:10:04.420 align:start position:0%
time like you start the app Egypt you
kill<00:10:03.050><c> the</c><00:10:03.170><c> app</c><00:10:03.320><c> you</c><00:10:03.650><c> start</c><00:10:03.950><c> it</c><00:10:04.040><c> up</c><00:10:04.100><c> again</c>

00:10:04.420 --> 00:10:04.430 align:start position:0%
kill the app you start it up again
 

00:10:04.430 --> 00:10:06.910 align:start position:0%
kill the app you start it up again
Egypt<00:10:04.970><c> but</c><00:10:05.960><c> has</c><00:10:06.110><c> some</c><00:10:06.260><c> implications</c><00:10:06.800><c> on</c><00:10:06.890><c> your</c>

00:10:06.910 --> 00:10:06.920 align:start position:0%
Egypt but has some implications on your
 

00:10:06.920 --> 00:10:09.340 align:start position:0%
Egypt but has some implications on your
battery<00:10:07.160><c> that</c><00:10:08.030><c> aut</c><00:10:08.360><c> compiled</c><00:10:08.870><c> code</c><00:10:09.020><c> didn't</c>

00:10:09.340 --> 00:10:09.350 align:start position:0%
battery that aut compiled code didn't
 

00:10:09.350 --> 00:10:13.890 align:start position:0%
battery that aut compiled code didn't
have<00:10:11.170><c> having</c><00:10:12.170><c> a</c><00:10:12.230><c> copulation</c><00:10:12.800><c> code</c><00:10:13.160><c> cache</c>

00:10:13.890 --> 00:10:13.900 align:start position:0%
have having a copulation code cache
 

00:10:13.900 --> 00:10:16.960 align:start position:0%
have having a copulation code cache
could<00:10:14.900><c> be</c><00:10:15.020><c> wasteful</c><00:10:15.470><c> if</c><00:10:16.430><c> not</c><00:10:16.670><c> managed</c>

00:10:16.960 --> 00:10:16.970 align:start position:0%
could be wasteful if not managed
 

00:10:16.970 --> 00:10:20.460 align:start position:0%
could be wasteful if not managed
properly

00:10:20.460 --> 00:10:20.470 align:start position:0%
 
 

00:10:20.470 --> 00:10:23.670 align:start position:0%
 
so<00:10:21.220><c> what</c><00:10:21.370><c> we</c><00:10:21.459><c> did</c><00:10:21.579><c> in</c><00:10:21.730><c> M</c><00:10:21.910><c> is</c><00:10:22.870><c> introduce</c><00:10:23.440><c> a</c>

00:10:23.670 --> 00:10:23.680 align:start position:0%
so what we did in M is introduce a
 

00:10:23.680 --> 00:10:26.939 align:start position:0%
so what we did in M is introduce a
hybrid<00:10:24.430><c> just</c><00:10:25.180><c> in</c><00:10:25.329><c> time</c><00:10:25.509><c> F</c><00:10:26.290><c> time</c><00:10:26.440><c> copulation</c>

00:10:26.939 --> 00:10:26.949 align:start position:0%
hybrid just in time F time copulation
 

00:10:26.949 --> 00:10:29.340 align:start position:0%
hybrid just in time F time copulation
system<00:10:27.370><c> that</c><00:10:28.300><c> combines</c><00:10:28.660><c> the</c><00:10:28.810><c> benefits</c><00:10:28.959><c> of</c>

00:10:29.340 --> 00:10:29.350 align:start position:0%
system that combines the benefits of
 

00:10:29.350 --> 00:10:33.530 align:start position:0%
system that combines the benefits of
both<00:10:29.829><c> worlds</c><00:10:32.100><c> the</c><00:10:33.100><c> idea</c><00:10:33.370><c> is</c><00:10:33.459><c> that</c>

00:10:33.530 --> 00:10:33.540 align:start position:0%
both worlds the idea is that
 

00:10:33.540 --> 00:10:35.430 align:start position:0%
both worlds the idea is that
applications<00:10:34.540><c> start</c><00:10:34.779><c> running</c><00:10:35.050><c> with</c><00:10:35.170><c> a</c><00:10:35.199><c> JIT</c>

00:10:35.430 --> 00:10:35.440 align:start position:0%
applications start running with a JIT
 

00:10:35.440 --> 00:10:39.410 align:start position:0%
applications start running with a JIT
and<00:10:36.240><c> when</c><00:10:37.240><c> the</c><00:10:37.389><c> phone</c><00:10:37.629><c> is</c><00:10:37.959><c> idle</c><00:10:38.290><c> in</c><00:10:38.529><c> charging</c><00:10:38.949><c> I</c>

00:10:39.410 --> 00:10:39.420 align:start position:0%
and when the phone is idle in charging I
 

00:10:39.420 --> 00:10:42.619 align:start position:0%
and when the phone is idle in charging I
will<00:10:40.420><c> do</c><00:10:40.540><c> profile</c><00:10:40.959><c> guided</c><00:10:41.379><c> optimizations</c><00:10:42.069><c> and</c>

00:10:42.619 --> 00:10:42.629 align:start position:0%
will do profile guided optimizations and
 

00:10:42.629 --> 00:10:46.170 align:start position:0%
will do profile guided optimizations and
ahead<00:10:43.629><c> of</c><00:10:43.660><c> time</c><00:10:43.959><c> heavily</c><00:10:44.620><c> optimize</c><00:10:45.040><c> the</c><00:10:45.850><c> parts</c>

00:10:46.170 --> 00:10:46.180 align:start position:0%
ahead of time heavily optimize the parts
 

00:10:46.180 --> 00:10:48.689 align:start position:0%
ahead of time heavily optimize the parts
of<00:10:46.269><c> the</c><00:10:46.360><c> application</c><00:10:46.500><c> the</c><00:10:47.500><c> G</c><00:10:47.709><c> has</c><00:10:47.949><c> the</c><00:10:48.250><c> JIT</c><00:10:48.459><c> has</c>

00:10:48.689 --> 00:10:48.699 align:start position:0%
of the application the G has the JIT has
 

00:10:48.699 --> 00:10:54.139 align:start position:0%
of the application the G has the JIT has
executed<00:10:49.569><c> already</c><00:10:52.379><c> so</c><00:10:53.379><c> later</c><00:10:53.589><c> in</c><00:10:53.769><c> this</c><00:10:53.860><c> talk</c>

00:10:54.139 --> 00:10:54.149 align:start position:0%
executed already so later in this talk
 

00:10:54.149 --> 00:10:57.300 align:start position:0%
executed already so later in this talk
Macaulay<00:10:55.149><c> clean</c><00:10:55.509><c> will</c><00:10:56.500><c> go</c><00:10:56.620><c> into</c><00:10:56.740><c> more</c><00:10:56.949><c> detail</c>

00:10:57.300 --> 00:10:57.310 align:start position:0%
Macaulay clean will go into more detail
 

00:10:57.310 --> 00:11:00.629 align:start position:0%
Macaulay clean will go into more detail
about<00:10:57.339><c> how</c><00:10:57.610><c> this</c><00:10:58.079><c> hybrid</c><00:10:59.079><c> äôt</c><00:10:59.560><c> JIT</c><00:10:59.860><c> profile</c>

00:11:00.629 --> 00:11:00.639 align:start position:0%
about how this hybrid äôt JIT profile
 

00:11:00.639 --> 00:11:04.829 align:start position:0%
about how this hybrid äôt JIT profile
guided<00:11:00.970><c> compilation</c><00:11:01.509><c> works</c><00:11:03.540><c> what</c><00:11:04.540><c> I</c><00:11:04.569><c> want</c><00:11:04.750><c> to</c>

00:11:04.829 --> 00:11:04.839 align:start position:0%
guided compilation works what I want to
 

00:11:04.839 --> 00:11:09.449 align:start position:0%
guided compilation works what I want to
focus<00:11:04.959><c> now</c><00:11:05.319><c> is</c><00:11:06.779><c> how</c><00:11:07.779><c> is</c><00:11:08.019><c> the</c><00:11:08.170><c> unknown</c><00:11:08.560><c> with</c><00:11:09.430><c> the</c>

00:11:09.449 --> 00:11:09.459 align:start position:0%
focus now is how is the unknown with the
 

00:11:09.459 --> 00:11:14.970 align:start position:0%
focus now is how is the unknown with the
JIT<00:11:12.750><c> so</c><00:11:13.750><c> let's</c><00:11:13.870><c> go</c><00:11:13.990><c> back</c><00:11:14.019><c> to</c><00:11:14.230><c> the</c><00:11:14.319><c> five</c><00:11:14.529><c> metrics</c>

00:11:14.970 --> 00:11:14.980 align:start position:0%
JIT so let's go back to the five metrics
 

00:11:14.980 --> 00:11:18.480 align:start position:0%
JIT so let's go back to the five metrics
I<00:11:15.040><c> mentioned</c><00:11:15.370><c> earlier</c><00:11:15.579><c> in</c><00:11:15.670><c> the</c><00:11:15.759><c> talk</c><00:11:17.490><c> for</c>

00:11:18.480 --> 00:11:18.490 align:start position:0%
I mentioned earlier in the talk for
 

00:11:18.490 --> 00:11:21.119 align:start position:0%
I mentioned earlier in the talk for
runtime<00:11:18.819><c> performance</c><00:11:19.350><c> the</c><00:11:20.350><c> jet</c><00:11:20.589><c> is</c><00:11:20.769><c> based</c><00:11:20.980><c> on</c>

00:11:21.119 --> 00:11:21.129 align:start position:0%
runtime performance the jet is based on
 

00:11:21.129 --> 00:11:24.119 align:start position:0%
runtime performance the jet is based on
the<00:11:21.220><c> same</c><00:11:21.490><c> ehe</c><00:11:22.300><c> compiler</c><00:11:22.689><c> that</c><00:11:23.680><c> brings</c><00:11:23.980><c> the</c>

00:11:24.119 --> 00:11:24.129 align:start position:0%
the same ehe compiler that brings the
 

00:11:24.129 --> 00:11:28.610 align:start position:0%
the same ehe compiler that brings the
same<00:11:24.339><c> high</c><00:11:24.670><c> performance</c><00:11:25.769><c> so</c><00:11:26.769><c> we're</c><00:11:26.889><c> covered</c>

00:11:28.610 --> 00:11:28.620 align:start position:0%
same high performance so we're covered
 

00:11:28.620 --> 00:11:31.259 align:start position:0%
same high performance so we're covered
but<00:11:29.620><c> the</c><00:11:29.740><c> other</c><00:11:29.860><c> metrics</c><00:11:30.279><c> are</c><00:11:30.699><c> actually</c><00:11:31.089><c> down</c>

00:11:31.259 --> 00:11:31.269 align:start position:0%
but the other metrics are actually down
 

00:11:31.269 --> 00:11:37.170 align:start position:0%
but the other metrics are actually down
to<00:11:31.300><c> how</c><00:11:31.630><c> we</c><00:11:31.689><c> tune</c><00:11:31.930><c> the</c><00:11:32.050><c> JIT</c><00:11:32.230><c> a</c><00:11:36.089><c> couple</c><00:11:37.089><c> of</c>

00:11:37.170 --> 00:11:37.180 align:start position:0%
to how we tune the JIT a couple of
 

00:11:37.180 --> 00:11:38.730 align:start position:0%
to how we tune the JIT a couple of
things<00:11:37.300><c> we</c><00:11:37.480><c> made</c><00:11:37.720><c> when</c><00:11:38.319><c> starting</c><00:11:38.680><c> this</c>

00:11:38.730 --> 00:11:38.740 align:start position:0%
things we made when starting this
 

00:11:38.740 --> 00:11:40.829 align:start position:0%
things we made when starting this
project<00:11:38.980><c> a</c><00:11:39.399><c> color</c><00:11:39.880><c> of</c><00:11:40.000><c> design</c><00:11:40.269><c> decisions</c><00:11:40.449><c> we</c>

00:11:40.829 --> 00:11:40.839 align:start position:0%
project a color of design decisions we
 

00:11:40.839 --> 00:11:47.910 align:start position:0%
project a color of design decisions we
made<00:11:43.050><c> were</c><00:11:44.050><c> based</c><00:11:44.350><c> on</c><00:11:44.680><c> those</c><00:11:44.860><c> metrics</c><00:11:46.230><c> like</c><00:11:47.230><c> we</c>

00:11:47.910 --> 00:11:47.920 align:start position:0%
made were based on those metrics like we
 

00:11:47.920 --> 00:11:49.800 align:start position:0%
made were based on those metrics like we
implemented<00:11:48.370><c> a</c><00:11:48.579><c> March</c><00:11:48.939><c> faster</c><00:11:49.329><c> interpreter</c>

00:11:49.800 --> 00:11:49.810 align:start position:0%
implemented a March faster interpreter
 

00:11:49.810 --> 00:11:52.350 align:start position:0%
implemented a March faster interpreter
in<00:11:49.990><c> n</c><00:11:50.680><c> compared</c><00:11:51.639><c> to</c><00:11:51.759><c> the</c><00:11:51.880><c> one</c><00:11:52.029><c> in</c><00:11:52.120><c> marshmallow</c>

00:11:52.350 --> 00:11:52.360 align:start position:0%
in n compared to the one in marshmallow
 

00:11:52.360 --> 00:11:56.490 align:start position:0%
in n compared to the one in marshmallow
and<00:11:52.870><c> ones</c><00:11:53.529><c> like</c><00:11:53.649><c> up</c><00:11:54.490><c> to</c><00:11:54.670><c> 3x</c><00:11:55.000><c> faster</c><00:11:55.449><c> then</c><00:11:56.380><c> you</c>

00:11:56.490 --> 00:11:56.500 align:start position:0%
and ones like up to 3x faster then you
 

00:11:56.500 --> 00:11:59.670 align:start position:0%
and ones like up to 3x faster then you
have<00:11:56.620><c> to</c><00:11:56.709><c> appear</c><00:11:56.949><c> in</c><00:11:56.980><c> marshmallow</c><00:11:58.350><c> it's</c><00:11:59.350><c> very</c>

00:11:59.670 --> 00:11:59.680 align:start position:0%
have to appear in marshmallow it's very
 

00:11:59.680 --> 00:12:01.019 align:start position:0%
have to appear in marshmallow it's very
important<00:12:00.130><c> to</c><00:12:00.189><c> have</c><00:12:00.310><c> a</c><00:12:00.370><c> fast</c><00:12:00.579><c> interpreter</c>

00:12:01.019 --> 00:12:01.029 align:start position:0%
important to have a fast interpreter
 

00:12:01.029 --> 00:12:02.939 align:start position:0%
important to have a fast interpreter
because<00:12:01.839><c> when</c><00:12:01.990><c> you</c><00:12:02.079><c> start</c><00:12:02.290><c> your</c><00:12:02.410><c> app</c><00:12:02.560><c> you</c>

00:12:02.939 --> 00:12:02.949 align:start position:0%
because when you start your app you
 

00:12:02.949 --> 00:12:04.379 align:start position:0%
because when you start your app you
don't<00:12:03.100><c> have</c><00:12:03.220><c> any</c><00:12:03.370><c> ahead</c><00:12:03.819><c> of</c><00:12:03.910><c> time</c><00:12:04.089><c> compiled</c>

00:12:04.379 --> 00:12:04.389 align:start position:0%
don't have any ahead of time compiled
 

00:12:04.389 --> 00:12:07.309 align:start position:0%
don't have any ahead of time compiled
code<00:12:04.630><c> it's</c><00:12:05.380><c> the</c><00:12:05.559><c> insurers</c><00:12:05.769><c> gonna</c><00:12:06.069><c> run</c><00:12:06.279><c> and</c>

00:12:07.309 --> 00:12:07.319 align:start position:0%
code it's the insurers gonna run and
 

00:12:07.319 --> 00:12:12.809 align:start position:0%
code it's the insurers gonna run and
later<00:12:08.319><c> on</c><00:12:08.470><c> the</c><00:12:08.559><c> JIT</c><00:12:10.500><c> second</c><00:12:11.500><c> we</c><00:12:12.459><c> do</c><00:12:12.550><c> a</c><00:12:12.639><c> JIT</c>

00:12:12.809 --> 00:12:12.819 align:start position:0%
later on the JIT second we do a JIT
 

00:12:12.819 --> 00:12:15.870 align:start position:0%
later on the JIT second we do a JIT
compilation<00:12:12.970><c> on</c><00:12:13.569><c> a</c><00:12:13.630><c> separate</c><00:12:14.079><c> thread</c><00:12:14.110><c> and</c><00:12:14.880><c> not</c>

00:12:15.870 --> 00:12:15.880 align:start position:0%
compilation on a separate thread and not
 

00:12:15.880 --> 00:12:18.569 align:start position:0%
compilation on a separate thread and not
on<00:12:16.120><c> the</c><00:12:16.269><c> application</c><00:12:16.750><c> threads</c><00:12:17.579><c> some</c>

00:12:18.569 --> 00:12:18.579 align:start position:0%
on the application threads some
 

00:12:18.579 --> 00:12:20.340 align:start position:0%
on the application threads some
compilation<00:12:19.149><c> can</c><00:12:19.360><c> take</c><00:12:19.540><c> very</c><00:12:19.720><c> long</c><00:12:19.959><c> and</c><00:12:20.319><c> you</c>

00:12:20.340 --> 00:12:20.350 align:start position:0%
compilation can take very long and you
 

00:12:20.350 --> 00:12:23.519 align:start position:0%
compilation can take very long and you
don't<00:12:21.069><c> want</c><00:12:21.309><c> to</c><00:12:21.850><c> block</c><00:12:22.059><c> the</c><00:12:22.240><c> UI</c><00:12:22.389><c> thread</c><00:12:22.720><c> just</c>

00:12:23.519 --> 00:12:23.529 align:start position:0%
don't want to block the UI thread just
 

00:12:23.529 --> 00:12:27.050 align:start position:0%
don't want to block the UI thread just
for<00:12:23.769><c> doing</c><00:12:24.209><c> compilation</c>

00:12:27.050 --> 00:12:27.060 align:start position:0%
for doing compilation
 

00:12:27.060 --> 00:12:30.860 align:start position:0%
for doing compilation
for<00:12:28.050><c> saving</c><00:12:28.320><c> power</c><00:12:29.060><c> what</c><00:12:30.060><c> we</c><00:12:30.180><c> did</c><00:12:30.360><c> is</c><00:12:30.540><c> most</c>

00:12:30.860 --> 00:12:30.870 align:start position:0%
for saving power what we did is most
 

00:12:30.870 --> 00:12:33.050 align:start position:0%
for saving power what we did is most
what<00:12:31.170><c> we</c><00:12:31.260><c> do</c><00:12:31.380><c> is</c><00:12:31.500><c> mostly</c><00:12:31.710><c> focusing</c><00:12:32.310><c> on</c><00:12:32.580><c> the</c>

00:12:33.050 --> 00:12:33.060 align:start position:0%
what we do is mostly focusing on the
 

00:12:33.060 --> 00:12:36.970 align:start position:0%
what we do is mostly focusing on the
hottest<00:12:33.510><c> methods</c><00:12:33.930><c> of</c><00:12:34.110><c> an</c><00:12:34.230><c> application</c><00:12:35.300><c> and</c>

00:12:36.970 --> 00:12:36.980 align:start position:0%
hottest methods of an application and
 

00:12:36.980 --> 00:12:40.010 align:start position:0%
hottest methods of an application and
filing<00:12:37.980><c> for</c><00:12:38.130><c> memory</c><00:12:38.370><c> footprint</c><00:12:39.020><c> we</c>

00:12:40.010 --> 00:12:40.020 align:start position:0%
filing for memory footprint we
 

00:12:40.020 --> 00:12:41.030 align:start position:0%
filing for memory footprint we
implemented<00:12:40.380><c> a</c><00:12:40.470><c> garbage</c><00:12:40.770><c> collection</c>

00:12:41.030 --> 00:12:41.040 align:start position:0%
implemented a garbage collection
 

00:12:41.040 --> 00:12:43.430 align:start position:0%
implemented a garbage collection
technique<00:12:41.460><c> that</c><00:12:42.390><c> ensures</c><00:12:42.720><c> that</c><00:12:42.750><c> only</c><00:12:43.110><c> the</c>

00:12:43.430 --> 00:12:43.440 align:start position:0%
technique that ensures that only the
 

00:12:43.440 --> 00:12:45.710 align:start position:0%
technique that ensures that only the
method<00:12:43.860><c> is</c><00:12:43.950><c> that</c><00:12:43.980><c> indian</c><00:12:44.430><c> matter</c><00:12:44.700><c> over</c><00:12:45.450><c> time</c>

00:12:45.710 --> 00:12:45.720 align:start position:0%
method is that indian matter over time
 

00:12:45.720 --> 00:12:48.020 align:start position:0%
method is that indian matter over time
are<00:12:46.230><c> kept</c><00:12:46.530><c> so</c><00:12:47.190><c> if</c><00:12:47.310><c> a</c><00:12:47.400><c> method</c><00:12:47.580><c> is</c><00:12:47.820><c> being</c>

00:12:48.020 --> 00:12:48.030 align:start position:0%
are kept so if a method is being
 

00:12:48.030 --> 00:12:49.930 align:start position:0%
are kept so if a method is being
compiled<00:12:48.450><c> and</c><00:12:48.690><c> i'm</c><00:12:48.750><c> not</c><00:12:48.900><c> being</c><00:12:49.140><c> used</c><00:12:49.290><c> anymore</c>

00:12:49.930 --> 00:12:49.940 align:start position:0%
compiled and i'm not being used anymore
 

00:12:49.940 --> 00:12:53.470 align:start position:0%
compiled and i'm not being used anymore
we'll<00:12:50.940><c> remove</c><00:12:51.360><c> it</c><00:12:51.480><c> from</c><00:12:51.600><c> memory</c>

00:12:53.470 --> 00:12:53.480 align:start position:0%
we'll remove it from memory
 

00:12:53.480 --> 00:12:56.990 align:start position:0%
we'll remove it from memory
all<00:12:54.480><c> right</c><00:12:55.040><c> so</c><00:12:56.040><c> let's</c><00:12:56.190><c> focus</c><00:12:56.340><c> on</c><00:12:56.610><c> application</c>

00:12:56.990 --> 00:12:57.000 align:start position:0%
all right so let's focus on application
 

00:12:57.000 --> 00:13:01.520 align:start position:0%
all right so let's focus on application
startup<00:12:58.880><c> now</c><00:12:59.880><c> I'm</c><00:13:00.780><c> going</c><00:13:01.080><c> to</c><00:13:01.200><c> walk</c><00:13:01.350><c> you</c>

00:13:01.520 --> 00:13:01.530 align:start position:0%
startup now I'm going to walk you
 

00:13:01.530 --> 00:13:04.100 align:start position:0%
startup now I'm going to walk you
through<00:13:01.590><c> some</c><00:13:02.130><c> systrace</c><00:13:02.720><c> that</c><00:13:03.720><c> will</c><00:13:03.840><c> explain</c>

00:13:04.100 --> 00:13:04.110 align:start position:0%
through some systrace that will explain
 

00:13:04.110 --> 00:13:06.200 align:start position:0%
through some systrace that will explain
some<00:13:04.320><c> of</c><00:13:04.380><c> the</c><00:13:04.620><c> implementation</c><00:13:05.370><c> decisions</c>

00:13:06.200 --> 00:13:06.210 align:start position:0%
some of the implementation decisions
 

00:13:06.210 --> 00:13:08.630 align:start position:0%
some of the implementation decisions
we've<00:13:06.330><c> made</c><00:13:06.890><c> if</c><00:13:07.890><c> you</c><00:13:08.100><c> don't</c><00:13:08.250><c> know</c><00:13:08.310><c> what</c><00:13:08.460><c> this</c>

00:13:08.630 --> 00:13:08.640 align:start position:0%
we've made if you don't know what this
 

00:13:08.640 --> 00:13:11.390 align:start position:0%
we've made if you don't know what this
race<00:13:08.820><c> is</c><00:13:09.120><c> it's</c><00:13:10.110><c> a</c><00:13:10.260><c> great</c><00:13:10.470><c> tool</c><00:13:10.710><c> for</c><00:13:10.740><c> both</c><00:13:11.040><c> app</c>

00:13:11.390 --> 00:13:11.400 align:start position:0%
race is it's a great tool for both app
 

00:13:11.400 --> 00:13:14.480 align:start position:0%
race is it's a great tool for both app
developers<00:13:12.330><c> and</c><00:13:12.360><c> platform</c><00:13:13.170><c> developers</c><00:13:13.620><c> to</c>

00:13:14.480 --> 00:13:14.490 align:start position:0%
developers and platform developers to
 

00:13:14.490 --> 00:13:16.460 align:start position:0%
developers and platform developers to
analyze<00:13:14.970><c> what</c><00:13:15.270><c> is</c><00:13:15.360><c> happening</c><00:13:15.750><c> on</c><00:13:15.990><c> Android</c>

00:13:16.460 --> 00:13:16.470 align:start position:0%
analyze what is happening on Android
 

00:13:16.470 --> 00:13:20.290 align:start position:0%
analyze what is happening on Android
system<00:13:18.500><c> so</c><00:13:19.500><c> bear</c><00:13:19.710><c> with</c><00:13:19.740><c> me</c>

00:13:20.290 --> 00:13:20.300 align:start position:0%
system so bear with me
 

00:13:20.300 --> 00:13:22.160 align:start position:0%
system so bear with me
there's<00:13:21.300><c> a</c><00:13:21.360><c> lot</c><00:13:21.450><c> of</c><00:13:21.540><c> information</c><00:13:22.020><c> on</c><00:13:22.140><c> that</c>

00:13:22.160 --> 00:13:22.170 align:start position:0%
there's a lot of information on that
 

00:13:22.170 --> 00:13:24.260 align:start position:0%
there's a lot of information on that
slide<00:13:22.470><c> but</c><00:13:23.370><c> we'll</c><00:13:23.520><c> focus</c><00:13:23.850><c> on</c><00:13:23.940><c> the</c><00:13:24.030><c> things</c><00:13:24.210><c> that</c>

00:13:24.260 --> 00:13:24.270 align:start position:0%
slide but we'll focus on the things that
 

00:13:24.270 --> 00:13:27.710 align:start position:0%
slide but we'll focus on the things that
matter<00:13:24.450><c> for</c><00:13:24.720><c> us</c><00:13:25.850><c> so</c><00:13:26.850><c> here's</c><00:13:27.060><c> that</c><00:13:27.180><c> way</c><00:13:27.330><c> she</c>

00:13:27.710 --> 00:13:27.720 align:start position:0%
matter for us so here's that way she
 

00:13:27.720 --> 00:13:30.740 align:start position:0%
matter for us so here's that way she
strikes<00:13:27.960><c> looks</c><00:13:28.230><c> after</c><00:13:28.440><c> launching</c><00:13:28.770><c> Gmail</c><00:13:29.210><c> on</c><00:13:30.210><c> a</c>

00:13:30.740 --> 00:13:30.750 align:start position:0%
strikes looks after launching Gmail on a
 

00:13:30.750 --> 00:13:32.720 align:start position:0%
strikes looks after launching Gmail on a
device<00:13:31.080><c> that</c><00:13:31.320><c> had</c><00:13:31.440><c> Gmail</c><00:13:31.800><c> ahead</c><00:13:32.430><c> of</c><00:13:32.550><c> time</c>

00:13:32.720 --> 00:13:32.730 align:start position:0%
device that had Gmail ahead of time
 

00:13:32.730 --> 00:13:37.970 align:start position:0%
device that had Gmail ahead of time
contolled<00:13:35.960><c> so</c><00:13:36.960><c> applications</c><00:13:37.500><c> start</c><00:13:37.710><c> up</c><00:13:37.800><c> for</c><00:13:37.950><c> a</c>

00:13:37.970 --> 00:13:37.980 align:start position:0%
contolled so applications start up for a
 

00:13:37.980 --> 00:13:41.390 align:start position:0%
contolled so applications start up for a
user<00:13:38.250><c> is</c><00:13:38.780><c> actually</c><00:13:39.780><c> when</c><00:13:40.590><c> the</c><00:13:40.710><c> first</c><00:13:41.010><c> frame</c><00:13:41.250><c> is</c>

00:13:41.390 --> 00:13:41.400 align:start position:0%
user is actually when the first frame is
 

00:13:41.400 --> 00:13:45.080 align:start position:0%
user is actually when the first frame is
being<00:13:41.550><c> rendered</c><00:13:42.350><c> and</c><00:13:43.490><c> this</c><00:13:44.490><c> trace</c><00:13:44.730><c> here</c><00:13:44.910><c> is</c>

00:13:45.080 --> 00:13:45.090 align:start position:0%
being rendered and this trace here is
 

00:13:45.090 --> 00:13:46.430 align:start position:0%
being rendered and this trace here is
someone's<00:13:45.420><c> wall</c><00:13:45.600><c> that's</c><00:13:45.840><c> what</c><00:13:46.020><c> you</c><00:13:46.110><c> would</c><00:13:46.260><c> get</c>

00:13:46.430 --> 00:13:46.440 align:start position:0%
someone's wall that's what you would get
 

00:13:46.440 --> 00:13:49.100 align:start position:0%
someone's wall that's what you would get
on<00:13:46.710><c> marshmallow</c><00:13:47.310><c> and</c><00:13:47.460><c> lollipop</c><00:13:47.850><c> is</c><00:13:48.090><c> that</c><00:13:48.870><c> for</c>

00:13:49.100 --> 00:13:49.110 align:start position:0%
on marshmallow and lollipop is that for
 

00:13:49.110 --> 00:13:51.110 align:start position:0%
on marshmallow and lollipop is that for
starting<00:13:49.410><c> Gmail</c><00:13:49.770><c> it</c><00:13:50.520><c> would</c><00:13:50.700><c> take</c><00:13:50.850><c> half</c><00:13:51.000><c> a</c>

00:13:51.110 --> 00:13:51.120 align:start position:0%
starting Gmail it would take half a
 

00:13:51.120 --> 00:13:55.780 align:start position:0%
starting Gmail it would take half a
second<00:13:51.450><c> for</c><00:13:52.170><c> the</c><00:13:52.260><c> first</c><00:13:52.440><c> frame</c><00:13:52.740><c> to</c><00:13:52.860><c> be</c><00:13:52.980><c> drawn</c>

00:13:55.780 --> 00:13:55.790 align:start position:0%
 
 

00:13:55.790 --> 00:13:58.700 align:start position:0%
 
so<00:13:56.790><c> our</c><00:13:56.910><c> first</c><00:13:57.180><c> implementation</c><00:13:57.630><c> or</c><00:13:58.320><c> alpha</c>

00:13:58.700 --> 00:13:58.710 align:start position:0%
so our first implementation or alpha
 

00:13:58.710 --> 00:14:01.130 align:start position:0%
so our first implementation or alpha
implementation<00:13:59.280><c> of</c><00:13:59.370><c> the</c><00:13:59.460><c> JIT</c><00:13:59.690><c> we</c><00:14:00.690><c> do</c><00:14:00.750><c> the</c><00:14:00.900><c> same</c>

00:14:01.130 --> 00:14:01.140 align:start position:0%
implementation of the JIT we do the same
 

00:14:01.140 --> 00:14:05.330 align:start position:0%
implementation of the JIT we do the same
measurements<00:14:02.180><c> and</c><00:14:03.590><c> reserve</c><00:14:04.590><c> results</c><00:14:05.220><c> were</c>

00:14:05.330 --> 00:14:05.340 align:start position:0%
measurements and reserve results were
 

00:14:05.340 --> 00:14:09.320 align:start position:0%
measurements and reserve results were
not<00:14:05.520><c> great</c><00:14:06.020><c> you</c><00:14:07.020><c> can</c><00:14:07.200><c> see</c><00:14:07.700><c> now</c><00:14:08.700><c> the</c><00:14:08.760><c> startup</c><00:14:09.210><c> is</c>

00:14:09.320 --> 00:14:09.330 align:start position:0%
not great you can see now the startup is
 

00:14:09.330 --> 00:14:11.360 align:start position:0%
not great you can see now the startup is
around<00:14:09.540><c> one</c><00:14:09.780><c> second</c><00:14:10.200><c> so</c><00:14:10.920><c> we</c><00:14:11.010><c> increase</c><00:14:11.280><c> the</c>

00:14:11.360 --> 00:14:11.370 align:start position:0%
around one second so we increase the
 

00:14:11.370 --> 00:14:16.150 align:start position:0%
around one second so we increase the
startup<00:14:11.670><c> around</c><00:14:11.910><c> 2x</c>

00:14:16.150 --> 00:14:16.160 align:start position:0%
 
 

00:14:16.160 --> 00:14:18.670 align:start position:0%
 
and<00:14:16.490><c> you</c><00:14:16.730><c> can</c><00:14:16.880><c> see</c><00:14:17.029><c> that</c><00:14:17.149><c> the</c><00:14:17.269><c> jet</c><00:14:17.449><c> thread</c><00:14:17.690><c> here</c>

00:14:18.670 --> 00:14:18.680 align:start position:0%
and you can see that the jet thread here
 

00:14:18.680 --> 00:14:25.420 align:start position:0%
and you can see that the jet thread here
executing<00:14:21.940><c> is</c><00:14:22.940><c> initially</c><00:14:23.360><c> idle</c><00:14:23.769><c> and</c><00:14:24.769><c> that</c>

00:14:25.420 --> 00:14:25.430 align:start position:0%
executing is initially idle and that
 

00:14:25.430 --> 00:14:30.460 align:start position:0%
executing is initially idle and that
becomes<00:14:25.699><c> very</c><00:14:25.880><c> busy</c><00:14:26.709><c> so</c><00:14:27.709><c> what's</c><00:14:27.889><c> happening</c><00:14:29.470><c> if</c>

00:14:30.460 --> 00:14:30.470 align:start position:0%
becomes very busy so what's happening if
 

00:14:30.470 --> 00:14:31.749 align:start position:0%
becomes very busy so what's happening if
you<00:14:30.589><c> take</c><00:14:30.769><c> a</c><00:14:30.800><c> closer</c><00:14:31.069><c> look</c><00:14:31.220><c> at</c><00:14:31.519><c> what</c><00:14:31.639><c> the</c>

00:14:31.749 --> 00:14:31.759 align:start position:0%
you take a closer look at what the
 

00:14:31.759 --> 00:14:34.960 align:start position:0%
you take a closer look at what the
application<00:14:32.360><c> is</c><00:14:32.420><c> doing</c><00:14:32.769><c> there's</c><00:14:33.769><c> around</c><00:14:34.370><c> 200</c>

00:14:34.960 --> 00:14:34.970 align:start position:0%
application is doing there's around 200
 

00:14:34.970 --> 00:14:38.259 align:start position:0%
application is doing there's around 200
milliseconds<00:14:35.740><c> for</c><00:14:36.740><c> doing</c><00:14:36.980><c> just</c><00:14:37.009><c> the</c><00:14:37.370><c> apk</c>

00:14:38.259 --> 00:14:38.269 align:start position:0%
milliseconds for doing just the apk
 

00:14:38.269 --> 00:14:42.569 align:start position:0%
milliseconds for doing just the apk
extraction<00:14:38.750><c> and</c><00:14:40.630><c> doing</c><00:14:41.630><c> apks</c><00:14:42.079><c> fraction</c>

00:14:42.569 --> 00:14:42.579 align:start position:0%
extraction and doing apks fraction
 

00:14:42.579 --> 00:14:45.040 align:start position:0%
extraction and doing apks fraction
extraction<00:14:43.579><c> is</c><00:14:43.730><c> a</c><00:14:43.790><c> blocking</c><00:14:44.329><c> information</c><00:14:44.870><c> so</c>

00:14:45.040 --> 00:14:45.050 align:start position:0%
extraction is a blocking information so
 

00:14:45.050 --> 00:14:46.600 align:start position:0%
extraction is a blocking information so
you<00:14:45.170><c> need</c><00:14:45.350><c> to</c><00:14:45.470><c> do</c><00:14:45.589><c> it</c><00:14:45.740><c> before</c><00:14:45.920><c> executing</c><00:14:46.430><c> any</c>

00:14:46.600 --> 00:14:46.610 align:start position:0%
you need to do it before executing any
 

00:14:46.610 --> 00:14:53.590 align:start position:0%
you need to do it before executing any
code<00:14:49.959><c> similarly</c><00:14:51.370><c> there's</c><00:14:52.370><c> lots</c><00:14:52.579><c> of</c><00:14:52.699><c> things</c>

00:14:53.590 --> 00:14:53.600 align:start position:0%
code similarly there's lots of things
 

00:14:53.600 --> 00:14:55.840 align:start position:0%
code similarly there's lots of things
happening<00:14:54.079><c> after</c><00:14:54.230><c> the</c><00:14:54.350><c> AP</c><00:14:54.589><c> construction</c><00:14:55.160><c> that</c>

00:14:55.840 --> 00:14:55.850 align:start position:0%
happening after the AP construction that
 

00:14:55.850 --> 00:14:57.160 align:start position:0%
happening after the AP construction that
don't<00:14:56.060><c> have</c><00:14:56.240><c> to</c><00:14:56.329><c> do</c><00:14:56.420><c> with</c><00:14:56.569><c> your</c><00:14:56.720><c> with</c><00:14:57.139><c> a</c>

00:14:57.160 --> 00:14:57.170 align:start position:0%
don't have to do with your with a
 

00:14:57.170 --> 00:14:58.329 align:start position:0%
don't have to do with your with a
zucchini<00:14:57.410><c> application</c><00:14:58.100><c> and</c><00:14:58.279><c> that's</c>

00:14:58.329 --> 00:14:58.339 align:start position:0%
zucchini application and that's
 

00:14:58.339 --> 00:15:01.990 align:start position:0%
zucchini application and that's
verification<00:14:59.860><c> art</c><00:15:00.860><c> needs</c><00:15:01.069><c> to</c><00:15:01.160><c> verify</c><00:15:01.399><c> the</c><00:15:01.670><c> Dex</c>

00:15:01.990 --> 00:15:02.000 align:start position:0%
verification art needs to verify the Dex
 

00:15:02.000 --> 00:15:04.210 align:start position:0%
verification art needs to verify the Dex
code<00:15:02.240><c> in</c><00:15:02.690><c> order</c><00:15:02.959><c> to</c><00:15:03.110><c> run</c><00:15:03.290><c> it</c><00:15:03.470><c> and</c><00:15:03.680><c> optimize</c><00:15:04.040><c> it</c>

00:15:04.210 --> 00:15:04.220 align:start position:0%
code in order to run it and optimize it
 

00:15:04.220 --> 00:15:09.730 align:start position:0%
code in order to run it and optimize it
so<00:15:06.490><c> we'll</c><00:15:07.490><c> fix</c><00:15:07.639><c> this</c><00:15:07.790><c> problem</c><00:15:08.290><c> we'll</c><00:15:09.290><c> start</c><00:15:09.560><c> to</c>

00:15:09.730 --> 00:15:09.740 align:start position:0%
so we'll fix this problem we'll start to
 

00:15:09.740 --> 00:15:10.120 align:start position:0%
so we'll fix this problem we'll start to
move

00:15:10.120 --> 00:15:10.130 align:start position:0%
move
 

00:15:10.130 --> 00:15:13.540 align:start position:0%
move
extraction<00:15:10.610><c> and</c><00:15:11.319><c> verification</c><00:15:12.319><c> out</c><00:15:12.829><c> of</c><00:15:13.160><c> every</c>

00:15:13.540 --> 00:15:13.550 align:start position:0%
extraction and verification out of every
 

00:15:13.550 --> 00:15:16.180 align:start position:0%
extraction and verification out of every
application<00:15:13.880><c> startup</c><00:15:14.329><c> and</c><00:15:14.769><c> move</c><00:15:15.769><c> it</c><00:15:15.860><c> back</c><00:15:16.040><c> to</c>

00:15:16.180 --> 00:15:16.190 align:start position:0%
application startup and move it back to
 

00:15:16.190 --> 00:15:17.559 align:start position:0%
application startup and move it back to
when<00:15:16.339><c> the</c><00:15:16.459><c> application</c><00:15:16.970><c> is</c><00:15:17.089><c> actually</c><00:15:17.209><c> being</c>

00:15:17.559 --> 00:15:17.569 align:start position:0%
when the application is actually being
 

00:15:17.569 --> 00:15:20.949 align:start position:0%
when the application is actually being
installed<00:15:19.120><c> so</c><00:15:20.120><c> let's</c><00:15:20.149><c> play</c><00:15:20.389><c> the</c><00:15:20.540><c> application</c>

00:15:20.949 --> 00:15:20.959 align:start position:0%
installed so let's play the application
 

00:15:20.959 --> 00:15:22.509 align:start position:0%
installed so let's play the application
startup<00:15:21.290><c> two</c><00:15:21.470><c> times</c><00:15:21.649><c> faster</c><00:15:22.130><c> than</c><00:15:22.250><c> our</c>

00:15:22.509 --> 00:15:22.519 align:start position:0%
startup two times faster than our
 

00:15:22.519 --> 00:15:25.329 align:start position:0%
startup two times faster than our
initial<00:15:22.699><c> and</c><00:15:22.970><c> JIT</c><00:15:23.120><c> implementation</c><00:15:23.720><c> and</c><00:15:24.339><c> quite</c>

00:15:25.329 --> 00:15:25.339 align:start position:0%
initial and JIT implementation and quite
 

00:15:25.339 --> 00:15:31.210 align:start position:0%
initial and JIT implementation and quite
on<00:15:25.519><c> par</c><00:15:25.730><c> with</c><00:15:25.790><c> compiled</c><00:15:26.360><c> code</c><00:15:30.100><c> so</c><00:15:31.100><c> I've</c><00:15:31.189><c> just</c>

00:15:31.210 --> 00:15:31.220 align:start position:0%
on par with compiled code so I've just
 

00:15:31.220 --> 00:15:33.610 align:start position:0%
on par with compiled code so I've just
talked<00:15:31.490><c> about</c><00:15:31.519><c> application</c><00:15:32.120><c> startup</c><00:15:32.620><c> about</c>

00:15:33.610 --> 00:15:33.620 align:start position:0%
talked about application startup about
 

00:15:33.620 --> 00:15:38.439 align:start position:0%
talked about application startup about
junk<00:15:36.160><c> for</c><00:15:37.160><c> janked</c><00:15:37.519><c> for</c><00:15:37.939><c> jank</c>

00:15:38.439 --> 00:15:38.449 align:start position:0%
junk for janked for jank
 

00:15:38.449 --> 00:15:41.759 align:start position:0%
junk for janked for jank
we<00:15:39.380><c> looked</c><00:15:39.560><c> at</c><00:15:39.709><c> the</c><00:15:39.800><c> frame</c><00:15:40.069><c> rate</c><00:15:40.339><c> of</c><00:15:40.630><c> scrolling</c>

00:15:41.759 --> 00:15:41.769 align:start position:0%
we looked at the frame rate of scrolling
 

00:15:41.769 --> 00:15:45.990 align:start position:0%
we looked at the frame rate of scrolling
within<00:15:42.769><c> the</c><00:15:42.920><c> Google</c><00:15:43.220><c> photos</c><00:15:43.610><c> application</c><00:15:44.649><c> and</c>

00:15:45.990 --> 00:15:46.000 align:start position:0%
within the Google photos application and
 

00:15:46.000 --> 00:15:48.670 align:start position:0%
within the Google photos application and
systrace<00:15:47.000><c> gives</c><00:15:47.329><c> you</c><00:15:47.449><c> this</c><00:15:47.569><c> nice</c><00:15:48.199><c> list</c><00:15:48.529><c> of</c>

00:15:48.670 --> 00:15:48.680 align:start position:0%
systrace gives you this nice list of
 

00:15:48.680 --> 00:15:51.759 align:start position:0%
systrace gives you this nice list of
spray<00:15:49.040><c> of</c><00:15:49.279><c> frames</c><00:15:49.639><c> are</c><00:15:49.880><c> being</c><00:15:50.029><c> drawn</c><00:15:50.300><c> a</c><00:15:50.769><c> green</c>

00:15:51.759 --> 00:15:51.769 align:start position:0%
spray of frames are being drawn a green
 

00:15:51.769 --> 00:15:54.699 align:start position:0%
spray of frames are being drawn a green
frame<00:15:52.040><c> is</c><00:15:52.370><c> when</c><00:15:53.329><c> the</c><00:15:53.540><c> UI</c><00:15:53.750><c> I</c><00:15:53.870><c> managed</c><00:15:54.290><c> to</c><00:15:54.350><c> render</c>

00:15:54.699 --> 00:15:54.709 align:start position:0%
frame is when the UI I managed to render
 

00:15:54.709 --> 00:15:58.360 align:start position:0%
frame is when the UI I managed to render
it<00:15:54.829><c> in</c><00:15:54.949><c> time</c><00:15:55.689><c> orange</c><00:15:56.689><c> in</c><00:15:56.810><c> red</c><00:15:57.019><c> is</c><00:15:57.230><c> where</c><00:15:58.189><c> you're</c>

00:15:58.360 --> 00:15:58.370 align:start position:0%
it in time orange in red is where you're
 

00:15:58.370 --> 00:15:59.949 align:start position:0%
it in time orange in red is where you're
dropping<00:15:58.699><c> the</c><00:15:58.790><c> frame</c><00:15:59.000><c> and</c><00:15:59.269><c> it</c><00:15:59.630><c> hasn't</c><00:15:59.899><c> been</c>

00:15:59.949 --> 00:15:59.959 align:start position:0%
dropping the frame and it hasn't been
 

00:15:59.959 --> 00:16:04.240 align:start position:0%
dropping the frame and it hasn't been
rendered<00:16:02.259><c> now</c><00:16:03.259><c> John</c><00:16:03.560><c> can</c><00:16:03.769><c> be</c><00:16:03.860><c> attributed</c><00:16:04.040><c> to</c>

00:16:04.240 --> 00:16:04.250 align:start position:0%
rendered now John can be attributed to
 

00:16:04.250 --> 00:16:07.179 align:start position:0%
rendered now John can be attributed to
many<00:16:04.459><c> factors</c><00:16:04.910><c> and</c><00:16:05.529><c> artists</c><00:16:06.529><c> it's</c><00:16:06.680><c> best</c><00:16:06.920><c> at</c>

00:16:07.179 --> 00:16:07.189 align:start position:0%
many factors and artists it's best at
 

00:16:07.189 --> 00:16:10.019 align:start position:0%
many factors and artists it's best at
executing<00:16:07.790><c> the</c><00:16:08.029><c> code</c><00:16:08.870><c> of</c><00:16:09.019><c> the</c><00:16:09.110><c> application</c>

00:16:10.019 --> 00:16:10.029 align:start position:0%
executing the code of the application
 

00:16:10.029 --> 00:16:12.429 align:start position:0%
executing the code of the application
but<00:16:11.029><c> if</c><00:16:11.120><c> the</c><00:16:11.300><c> application</c><00:16:11.630><c> does</c><00:16:11.810><c> too</c><00:16:12.110><c> much</c><00:16:12.259><c> on</c>

00:16:12.429 --> 00:16:12.439 align:start position:0%
but if the application does too much on
 

00:16:12.439 --> 00:16:14.620 align:start position:0%
but if the application does too much on
the<00:16:12.529><c> on</c><00:16:12.769><c> the</c><00:16:12.920><c> thread</c><00:16:13.420><c> obviously</c><00:16:14.420><c> we're</c><00:16:14.509><c> gonna</c>

00:16:14.620 --> 00:16:14.630 align:start position:0%
the on the thread obviously we're gonna
 

00:16:14.630 --> 00:16:18.429 align:start position:0%
the on the thread obviously we're gonna
miss<00:16:14.839><c> a</c><00:16:14.870><c> frame</c><00:16:16.509><c> so</c><00:16:17.509><c> you</c><00:16:17.569><c> have</c><00:16:17.750><c> for</c><00:16:18.410><c> that</c>

00:16:18.429 --> 00:16:18.439 align:start position:0%
miss a frame so you have for that
 

00:16:18.439 --> 00:16:21.970 align:start position:0%
miss a frame so you have for that
specific<00:16:19.100><c> experiment</c><00:16:19.720><c> we</c><00:16:20.720><c> have</c><00:16:20.870><c> around</c><00:16:21.170><c> 4%</c><00:16:21.589><c> of</c>

00:16:21.970 --> 00:16:21.980 align:start position:0%
specific experiment we have around 4% of
 

00:16:21.980 --> 00:16:25.610 align:start position:0%
specific experiment we have around 4% of
frames<00:16:22.670><c> that</c><00:16:22.759><c> are</c><00:16:22.910><c> being</c><00:16:23.089><c> dropped</c>

00:16:25.610 --> 00:16:25.620 align:start position:0%
 
 

00:16:25.620 --> 00:16:28.830 align:start position:0%
 
during<00:16:26.620><c> our</c><00:16:26.710><c> first</c><00:16:26.920><c> chin</c><00:16:27.460><c> bringing</c><00:16:27.790><c> up</c><00:16:27.910><c> we</c>

00:16:28.830 --> 00:16:28.840 align:start position:0%
during our first chin bringing up we
 

00:16:28.840 --> 00:16:32.130 align:start position:0%
during our first chin bringing up we
made<00:16:28.990><c> the</c><00:16:29.080><c> same</c><00:16:29.260><c> same</c><00:16:29.620><c> experiment</c><00:16:31.020><c> so</c><00:16:32.020><c> the</c>

00:16:32.130 --> 00:16:32.140 align:start position:0%
made the same same experiment so the
 

00:16:32.140 --> 00:16:34.320 align:start position:0%
made the same same experiment so the
application<00:16:33.130><c> wasn't</c><00:16:33.280><c> compiled</c><00:16:33.700><c> and</c><00:16:34.180><c> we're</c>

00:16:34.320 --> 00:16:34.330 align:start position:0%
application wasn't compiled and we're
 

00:16:34.330 --> 00:16:37.140 align:start position:0%
application wasn't compiled and we're
just<00:16:34.450><c> running</c><00:16:34.630><c> with</c><00:16:34.810><c> the</c><00:16:34.900><c> JIT</c><00:16:35.080><c> and</c><00:16:36.150><c> the</c>

00:16:37.140 --> 00:16:37.150 align:start position:0%
just running with the JIT and the
 

00:16:37.150 --> 00:16:39.210 align:start position:0%
just running with the JIT and the
results<00:16:37.450><c> weren't</c><00:16:37.600><c> great</c><00:16:38.040><c> we're</c><00:16:39.040><c> dropping</c>

00:16:39.210 --> 00:16:39.220 align:start position:0%
results weren't great we're dropping
 

00:16:39.220 --> 00:16:45.540 align:start position:0%
results weren't great we're dropping
around<00:16:39.460><c> 20%</c><00:16:39.850><c> of</c><00:16:40.720><c> frames</c><00:16:44.250><c> if</c><00:16:45.250><c> you</c><00:16:45.370><c> take</c><00:16:45.520><c> a</c>

00:16:45.540 --> 00:16:45.550 align:start position:0%
around 20% of frames if you take a
 

00:16:45.550 --> 00:16:46.740 align:start position:0%
around 20% of frames if you take a
closer<00:16:45.790><c> look</c><00:16:45.970><c> at</c><00:16:46.120><c> what</c><00:16:46.240><c> the</c><00:16:46.330><c> gene</c><00:16:46.510><c> is</c><00:16:46.540><c> actually</c>

00:16:46.740 --> 00:16:46.750 align:start position:0%
closer look at what the gene is actually
 

00:16:46.750 --> 00:16:49.700 align:start position:0%
closer look at what the gene is actually
doing<00:16:47.170><c> here</c><00:16:47.490><c> you</c><00:16:48.490><c> can</c><00:16:48.610><c> see</c><00:16:48.730><c> those</c><00:16:49.270><c> long</c>

00:16:49.700 --> 00:16:49.710 align:start position:0%
doing here you can see those long
 

00:16:49.710 --> 00:16:52.770 align:start position:0%
doing here you can see those long
compilation<00:16:50.710><c> activities</c><00:16:51.390><c> where</c><00:16:52.390><c> echo</c><00:16:52.570><c> power</c>

00:16:52.770 --> 00:16:52.780 align:start position:0%
compilation activities where echo power
 

00:16:52.780 --> 00:16:55.220 align:start position:0%
compilation activities where echo power
is<00:16:52.930><c> actually</c><00:16:53.260><c> waiting</c><00:16:53.590><c> for</c><00:16:53.620><c> methods</c><00:16:54.220><c> or</c><00:16:54.430><c> for</c>

00:16:55.220 --> 00:16:55.230 align:start position:0%
is actually waiting for methods or for
 

00:16:55.230 --> 00:16:58.680 align:start position:0%
is actually waiting for methods or for
requests<00:16:56.230><c> to</c><00:16:56.350><c> pop</c><00:16:56.500><c> out</c><00:16:56.620><c> methods</c><00:16:57.690><c> those</c>

00:16:58.680 --> 00:16:58.690 align:start position:0%
requests to pop out methods those
 

00:16:58.690 --> 00:17:00.120 align:start position:0%
requests to pop out methods those
methods<00:16:59.050><c> haven't</c><00:16:59.290><c> reached</c><00:16:59.620><c> the</c><00:16:59.860><c> hotness</c>

00:17:00.120 --> 00:17:00.130 align:start position:0%
methods haven't reached the hotness
 

00:17:00.130 --> 00:17:03.810 align:start position:0%
methods haven't reached the hotness
threshold<00:17:00.730><c> that</c><00:17:00.880><c> we've</c><00:17:01.000><c> set</c><00:17:01.210><c> and</c><00:17:02.610><c> the</c><00:17:03.610><c> heart</c>

00:17:03.810 --> 00:17:03.820 align:start position:0%
threshold that we've set and the heart
 

00:17:03.820 --> 00:17:05.160 align:start position:0%
threshold that we've set and the heart
that<00:17:03.850><c> special</c><00:17:04.270><c> is</c><00:17:04.390><c> hired</c><00:17:04.630><c> because</c><00:17:04.780><c> we</c><00:17:04.990><c> want</c><00:17:05.140><c> to</c>

00:17:05.160 --> 00:17:05.170 align:start position:0%
that special is hired because we want to
 

00:17:05.170 --> 00:17:07.610 align:start position:0%
that special is hired because we want to
save<00:17:05.350><c> in</c><00:17:05.440><c> battery</c><00:17:05.770><c> but</c><00:17:06.520><c> that</c><00:17:06.640><c> doesn't</c><00:17:06.910><c> save</c><00:17:07.120><c> on</c>

00:17:07.610 --> 00:17:07.620 align:start position:0%
save in battery but that doesn't save on
 

00:17:07.620 --> 00:17:13.560 align:start position:0%
save in battery but that doesn't save on
saving<00:17:08.620><c> junk</c><00:17:11.070><c> the</c><00:17:12.070><c> UI</c><00:17:12.250><c> thread</c><00:17:12.520><c> you</c><00:17:13.300><c> want</c><00:17:13.420><c> the</c>

00:17:13.560 --> 00:17:13.570 align:start position:0%
saving junk the UI thread you want the
 

00:17:13.570 --> 00:17:15.720 align:start position:0%
saving junk the UI thread you want the
code<00:17:13.780><c> that</c><00:17:13.930><c> the</c><00:17:14.590><c> steps</c><00:17:14.890><c> where</c><00:17:15.070><c> is</c><00:17:15.190><c> executing</c>

00:17:15.720 --> 00:17:15.730 align:start position:0%
code that the steps where is executing
 

00:17:15.730 --> 00:17:20.000 align:start position:0%
code that the steps where is executing
to<00:17:16.060><c> be</c><00:17:16.210><c> hot</c><00:17:17.080><c> as</c><00:17:17.320><c> soon</c><00:17:17.560><c> as</c><00:17:17.650><c> possible</c>

00:17:20.000 --> 00:17:20.010 align:start position:0%
to be hot as soon as possible
 

00:17:20.010 --> 00:17:23.160 align:start position:0%
to be hot as soon as possible
so<00:17:21.010><c> the</c><00:17:21.100><c> solution</c><00:17:21.550><c> was</c><00:17:22.360><c> to</c><00:17:22.390><c> increase</c><00:17:22.960><c> the</c>

00:17:23.160 --> 00:17:23.170 align:start position:0%
so the solution was to increase the
 

00:17:23.170 --> 00:17:26.490 align:start position:0%
so the solution was to increase the
weight<00:17:23.350><c> of</c><00:17:24.270><c> UI</c><00:17:25.270><c> thread</c><00:17:25.630><c> requests</c><00:17:26.170><c> for</c>

00:17:26.490 --> 00:17:26.500 align:start position:0%
weight of UI thread requests for
 

00:17:26.500 --> 00:17:29.160 align:start position:0%
weight of UI thread requests for
computation<00:17:27.040><c> so</c><00:17:27.880><c> the</c><00:17:28.000><c> methods</c><00:17:28.510><c> it</c><00:17:28.690><c> could</c><00:17:29.020><c> it</c>

00:17:29.160 --> 00:17:29.170 align:start position:0%
computation so the methods it could it
 

00:17:29.170 --> 00:17:32.840 align:start position:0%
computation so the methods it could it
runs<00:17:29.590><c> would</c><00:17:30.220><c> be</c><00:17:30.370><c> compiled</c><00:17:30.730><c> almost</c><00:17:31.420><c> instantly</c>

00:17:32.840 --> 00:17:32.850 align:start position:0%
runs would be compiled almost instantly
 

00:17:32.850 --> 00:17:35.700 align:start position:0%
runs would be compiled almost instantly
so<00:17:33.850><c> if</c><00:17:33.940><c> you've</c><00:17:34.090><c> seen</c><00:17:34.300><c> since</c><00:17:34.480><c> to</c><00:17:34.690><c> trace</c><00:17:34.960><c> there's</c>

00:17:35.700 --> 00:17:35.710 align:start position:0%
so if you've seen since to trace there's
 

00:17:35.710 --> 00:17:37.700 align:start position:0%
so if you've seen since to trace there's
no<00:17:35.800><c> more</c><00:17:35.950><c> long</c><00:17:36.160><c> pauses</c><00:17:36.460><c> of</c><00:17:36.730><c> computations</c><00:17:37.300><c> and</c>

00:17:37.700 --> 00:17:37.710 align:start position:0%
no more long pauses of computations and
 

00:17:37.710 --> 00:17:40.560 align:start position:0%
no more long pauses of computations and
we<00:17:38.710><c> only</c><00:17:38.860><c> dropped</c><00:17:39.070><c> around</c><00:17:39.340><c> 4%</c><00:17:39.880><c> of</c><00:17:40.180><c> miss</c><00:17:40.360><c> of</c>

00:17:40.560 --> 00:17:40.570 align:start position:0%
we only dropped around 4% of miss of
 

00:17:40.570 --> 00:17:43.590 align:start position:0%
we only dropped around 4% of miss of
frames<00:17:40.870><c> which</c><00:17:41.640><c> was</c><00:17:42.640><c> the</c><00:17:42.820><c> og</c><00:17:43.090><c> level</c><00:17:43.360><c> we</c><00:17:43.450><c> had</c>

00:17:43.590 --> 00:17:43.600 align:start position:0%
frames which was the og level we had
 

00:17:43.600 --> 00:17:52.140 align:start position:0%
frames which was the og level we had
initially<00:17:46.530><c> all</c><00:17:47.530><c> right</c><00:17:47.680><c> battery</c><00:17:48.610><c> usage</c>

00:17:52.140 --> 00:17:52.150 align:start position:0%
 
 

00:17:52.150 --> 00:17:54.659 align:start position:0%
 
we've<00:17:52.900><c> measured</c><00:17:53.080><c> the</c><00:17:53.380><c> power</c><00:17:53.620><c> usage</c><00:17:54.460><c> of</c>

00:17:54.659 --> 00:17:54.669 align:start position:0%
we've measured the power usage of
 

00:17:54.669 --> 00:17:57.510 align:start position:0%
we've measured the power usage of
starting<00:17:55.179><c> Gmail</c><00:17:55.710><c> pausing</c><00:17:56.710><c> for</c><00:17:56.860><c> 30</c><00:17:57.070><c> seconds</c>

00:17:57.510 --> 00:17:57.520 align:start position:0%
starting Gmail pausing for 30 seconds
 

00:17:57.520 --> 00:18:02.310 align:start position:0%
starting Gmail pausing for 30 seconds
and<00:17:57.669><c> then</c><00:17:58.600><c> scroll</c><00:17:59.020><c> around</c><00:17:59.169><c> the</c><00:17:59.409><c> emails</c><00:18:01.230><c> and</c><00:18:02.230><c> we</c>

00:18:02.310 --> 00:18:02.320 align:start position:0%
and then scroll around the emails and we
 

00:18:02.320 --> 00:18:03.659 align:start position:0%
and then scroll around the emails and we
can<00:18:02.470><c> see</c><00:18:02.590><c> here</c><00:18:02.770><c> that</c><00:18:02.799><c> the</c><00:18:03.010><c> JIT</c><00:18:03.190><c> is</c><00:18:03.220><c> being</c><00:18:03.580><c> the</c>

00:18:03.659 --> 00:18:03.669 align:start position:0%
can see here that the JIT is being the
 

00:18:03.669 --> 00:18:06.570 align:start position:0%
can see here that the JIT is being the
high<00:18:03.820><c> cost</c><00:18:04.799><c> application</c><00:18:05.799><c> startup</c><00:18:06.159><c> prepared</c>

00:18:06.570 --> 00:18:06.580 align:start position:0%
high cost application startup prepared
 

00:18:06.580 --> 00:18:10.049 align:start position:0%
high cost application startup prepared
to<00:18:06.669><c> air</c><00:18:06.820><c> of</c><00:18:06.940><c> time</c><00:18:07.059><c> population</c><00:18:08.880><c> but</c><00:18:09.880><c> one</c>

00:18:10.049 --> 00:18:10.059 align:start position:0%
to air of time population but one
 

00:18:10.059 --> 00:18:13.200 align:start position:0%
to air of time population but one
startup<00:18:10.419><c> is</c><00:18:10.539><c> done</c><00:18:11.429><c> the</c><00:18:12.429><c> scrolling</c><00:18:12.880><c> actually</c>

00:18:13.200 --> 00:18:13.210 align:start position:0%
startup is done the scrolling actually
 

00:18:13.210 --> 00:18:15.330 align:start position:0%
startup is done the scrolling actually
doesn't<00:18:13.630><c> has</c><00:18:14.320><c> has</c><00:18:14.740><c> no</c><00:18:14.860><c> difference</c><00:18:15.220><c> between</c>

00:18:15.330 --> 00:18:15.340 align:start position:0%
doesn't has has no difference between
 

00:18:15.340 --> 00:18:20.100 align:start position:0%
doesn't has has no difference between
aut<00:18:15.730><c> and</c><00:18:16.000><c> jet</c><00:18:17.490><c> the</c><00:18:18.490><c> reason</c><00:18:18.760><c> for</c><00:18:19.090><c> this</c><00:18:19.330><c> for</c><00:18:19.960><c> this</c>

00:18:20.100 --> 00:18:20.110 align:start position:0%
aut and jet the reason for this for this
 

00:18:20.110 --> 00:18:22.680 align:start position:0%
aut and jet the reason for this for this
difference<00:18:20.559><c> is</c><00:18:20.770><c> that</c><00:18:21.669><c> as</c><00:18:21.820><c> the</c><00:18:21.970><c> startup</c><00:18:22.330><c> the</c>

00:18:22.680 --> 00:18:22.690 align:start position:0%
difference is that as the startup the
 

00:18:22.690 --> 00:18:24.570 align:start position:0%
difference is that as the startup the
JIT<00:18:22.900><c> is</c><00:18:22.929><c> very</c><00:18:23.260><c> busy</c><00:18:23.679><c> compiling</c><00:18:24.250><c> a</c><00:18:24.370><c> lot</c><00:18:24.490><c> of</c>

00:18:24.570 --> 00:18:24.580 align:start position:0%
JIT is very busy compiling a lot of
 

00:18:24.580 --> 00:18:27.899 align:start position:0%
JIT is very busy compiling a lot of
methods<00:18:24.760><c> and</c><00:18:26.279><c> Gmail</c><00:18:27.279><c> seems</c><00:18:27.490><c> to</c><00:18:27.610><c> be</c><00:18:27.700><c> very</c>

00:18:27.899 --> 00:18:27.909 align:start position:0%
methods and Gmail seems to be very
 

00:18:27.909 --> 00:18:30.740 align:start position:0%
methods and Gmail seems to be very
aggressive<00:18:28.210><c> in</c><00:18:28.860><c> executing</c><00:18:29.860><c> code</c><00:18:30.100><c> at</c><00:18:30.220><c> startup</c>

00:18:30.740 --> 00:18:30.750 align:start position:0%
aggressive in executing code at startup
 

00:18:30.750 --> 00:18:33.000 align:start position:0%
aggressive in executing code at startup
which<00:18:31.750><c> is</c><00:18:31.899><c> not</c><00:18:32.049><c> necessarily</c><00:18:32.470><c> the</c><00:18:32.559><c> behavior</c><00:18:32.950><c> of</c>

00:18:33.000 --> 00:18:33.010 align:start position:0%
which is not necessarily the behavior of
 

00:18:33.010 --> 00:18:36.269 align:start position:0%
which is not necessarily the behavior of
all<00:18:33.250><c> apps</c><00:18:34.770><c> so</c><00:18:35.770><c> we've</c><00:18:35.860><c> done</c><00:18:36.039><c> the</c><00:18:36.100><c> same</c>

00:18:36.269 --> 00:18:36.279 align:start position:0%
all apps so we've done the same
 

00:18:36.279 --> 00:18:41.220 align:start position:0%
all apps so we've done the same
experiment<00:18:36.820><c> with</c><00:18:37.620><c> other</c><00:18:38.620><c> apps</c><00:18:40.049><c> we've</c><00:18:41.049><c> looked</c>

00:18:41.220 --> 00:18:41.230 align:start position:0%
experiment with other apps we've looked
 

00:18:41.230 --> 00:18:44.730 align:start position:0%
experiment with other apps we've looked
at<00:18:41.350><c> Chrome</c><00:18:42.039><c> camera</c><00:18:42.549><c> on</c><00:18:42.610><c> photos</c><00:18:43.409><c> common</c><00:18:44.409><c> camera</c>

00:18:44.730 --> 00:18:44.740 align:start position:0%
at Chrome camera on photos common camera
 

00:18:44.740 --> 00:18:47.580 align:start position:0%
at Chrome camera on photos common camera
are<00:18:45.340><c> mostly</c><00:18:45.730><c> based</c><00:18:46.059><c> on</c><00:18:46.179><c> native</c><00:18:46.510><c> code</c><00:18:46.690><c> so</c><00:18:47.409><c> here</c>

00:18:47.580 --> 00:18:47.590 align:start position:0%
are mostly based on native code so here
 

00:18:47.590 --> 00:18:49.230 align:start position:0%
are mostly based on native code so here
that<00:18:47.890><c> doesn't</c><00:18:48.190><c> really</c><00:18:48.340><c> is</c><00:18:48.820><c> not</c><00:18:49.029><c> really</c>

00:18:49.230 --> 00:18:49.240 align:start position:0%
that doesn't really is not really
 

00:18:49.240 --> 00:18:51.330 align:start position:0%
that doesn't really is not really
useful<00:18:49.630><c> for</c><00:18:49.899><c> all</c><00:18:50.590><c> the</c><00:18:50.740><c> things</c><00:18:50.919><c> you</c><00:18:51.010><c> mentioned</c>

00:18:51.330 --> 00:18:51.340 align:start position:0%
useful for all the things you mentioned
 

00:18:51.340 --> 00:18:55.740 align:start position:0%
useful for all the things you mentioned
and<00:18:52.799><c> the</c><00:18:53.799><c> power</c><00:18:54.250><c> usage</c><00:18:54.730><c> is</c><00:18:54.940><c> very</c><00:18:55.299><c> similar</c>

00:18:55.740 --> 00:18:55.750 align:start position:0%
and the power usage is very similar
 

00:18:55.750 --> 00:18:58.260 align:start position:0%
and the power usage is very similar
whether<00:18:56.289><c> you're</c><00:18:56.529><c> in</c><00:18:56.649><c> a</c><00:18:56.830><c> OD</c><00:18:57.070><c> set</c><00:18:57.279><c> a</c><00:18:57.399><c> ot</c><00:18:57.760><c> setup</c><00:18:58.059><c> or</c>

00:18:58.260 --> 00:18:58.270 align:start position:0%
whether you're in a OD set a ot setup or
 

00:18:58.270 --> 00:19:01.649 align:start position:0%
whether you're in a OD set a ot setup or
it<00:18:58.360><c> should</c><00:18:58.510><c> set</c><00:18:58.659><c> up</c><00:19:00.270><c> photos</c><00:19:01.270><c> on</c><00:19:01.450><c> the</c><00:19:01.539><c> other</c>

00:19:01.649 --> 00:19:01.659 align:start position:0%
it should set up photos on the other
 

00:19:01.659 --> 00:19:04.320 align:start position:0%
it should set up photos on the other
hand<00:19:01.899><c> does</c><00:19:02.289><c> have</c><00:19:02.529><c> to</c><00:19:02.620><c> have</c><00:19:02.710><c> a</c><00:19:02.740><c> code</c><00:19:03.330><c> but</c>

00:19:04.320 --> 00:19:04.330 align:start position:0%
hand does have to have a code but
 

00:19:04.330 --> 00:19:05.519 align:start position:0%
hand does have to have a code but
doesn't<00:19:04.510><c> have</c><00:19:04.690><c> the</c><00:19:04.809><c> behavior</c><00:19:05.230><c> that</c><00:19:05.380><c> Gmail</c>

00:19:05.519 --> 00:19:05.529 align:start position:0%
doesn't have the behavior that Gmail
 

00:19:05.529 --> 00:19:07.889 align:start position:0%
doesn't have the behavior that Gmail
heart<00:19:05.860><c> and</c><00:19:06.100><c> you</c><00:19:07.090><c> can</c><00:19:07.240><c> see</c><00:19:07.360><c> that</c><00:19:07.480><c> the</c>

00:19:07.889 --> 00:19:07.899 align:start position:0%
heart and you can see that the
 

00:19:07.899 --> 00:19:13.529 align:start position:0%
heart and you can see that the
difference<00:19:08.289><c> is</c><00:19:08.470><c> again</c><00:19:08.890><c> very</c><00:19:09.130><c> little</c><00:19:12.360><c> that</c><00:19:13.360><c> was</c>

00:19:13.529 --> 00:19:13.539 align:start position:0%
difference is again very little that was
 

00:19:13.539 --> 00:19:16.169 align:start position:0%
difference is again very little that was
battery<00:19:14.250><c> let's</c><00:19:15.250><c> discuss</c><00:19:15.610><c> about</c><00:19:15.730><c> the</c><00:19:15.909><c> final</c>

00:19:16.169 --> 00:19:16.179 align:start position:0%
battery let's discuss about the final
 

00:19:16.179 --> 00:19:20.639 align:start position:0%
battery let's discuss about the final
metric<00:19:16.539><c> memory</c><00:19:17.169><c> footprint</c><00:19:19.260><c> so</c><00:19:20.260><c> we</c><00:19:20.350><c> looked</c><00:19:20.529><c> at</c>

00:19:20.639 --> 00:19:20.649 align:start position:0%
metric memory footprint so we looked at
 

00:19:20.649 --> 00:19:22.470 align:start position:0%
metric memory footprint so we looked at
the<00:19:20.740><c> overall</c><00:19:20.770><c> usage</c><00:19:21.399><c> of</c><00:19:21.669><c> our</c><00:19:22.179><c> beta</c><00:19:22.390><c> testers</c>

00:19:22.470 --> 00:19:22.480 align:start position:0%
the overall usage of our beta testers
 

00:19:22.480 --> 00:19:26.399 align:start position:0%
the overall usage of our beta testers
within<00:19:23.470><c> Google</c><00:19:24.240><c> and</c><00:19:25.240><c> we're</c><00:19:25.899><c> quite</c><00:19:26.110><c> happy</c><00:19:26.140><c> to</c>

00:19:26.399 --> 00:19:26.409 align:start position:0%
within Google and we're quite happy to
 

00:19:26.409 --> 00:19:28.950 align:start position:0%
within Google and we're quite happy to
find<00:19:26.799><c> that</c><00:19:27.100><c> the</c><00:19:27.610><c> main</c><00:19:27.789><c> memory</c><00:19:28.179><c> use</c><00:19:28.510><c> of</c><00:19:28.690><c> the</c><00:19:28.779><c> JIT</c>

00:19:28.950 --> 00:19:28.960 align:start position:0%
find that the main memory use of the JIT
 

00:19:28.960 --> 00:19:32.430 align:start position:0%
find that the main memory use of the JIT
is<00:19:29.080><c> failure</c><00:19:29.470><c> isn't</c><00:19:29.740><c> reasonable</c><00:19:30.960><c> the</c><00:19:31.960><c> maximum</c>

00:19:32.430 --> 00:19:32.440 align:start position:0%
is failure isn't reasonable the maximum
 

00:19:32.440 --> 00:19:34.740 align:start position:0%
is failure isn't reasonable the maximum
we've<00:19:32.590><c> seen</c><00:19:32.860><c> on</c><00:19:33.159><c> a</c><00:19:33.850><c> heavily</c><00:19:34.240><c> loaded</c><00:19:34.270><c> system</c>

00:19:34.740 --> 00:19:34.750 align:start position:0%
we've seen on a heavily loaded system
 

00:19:34.750 --> 00:19:36.450 align:start position:0%
we've seen on a heavily loaded system
that<00:19:35.320><c> have</c><00:19:35.440><c> lots</c><00:19:35.649><c> of</c><00:19:35.770><c> application</c><00:19:36.279><c> being</c>

00:19:36.450 --> 00:19:36.460 align:start position:0%
that have lots of application being
 

00:19:36.460 --> 00:19:40.039 align:start position:0%
that have lots of application being
executed<00:19:36.750><c> was</c><00:19:37.750><c> around</c><00:19:37.990><c> 30</c><00:19:38.260><c> megabytes</c>

00:19:40.039 --> 00:19:40.049 align:start position:0%
executed was around 30 megabytes
 

00:19:40.049 --> 00:19:44.820 align:start position:0%
executed was around 30 megabytes
system-wide<00:19:42.299><c> but</c><00:19:43.299><c> in</c><00:19:43.390><c> average</c><00:19:44.049><c> what</c><00:19:44.710><c> we've</c>

00:19:44.820 --> 00:19:44.830 align:start position:0%
system-wide but in average what we've
 

00:19:44.830 --> 00:19:46.230 align:start position:0%
system-wide but in average what we've
seen<00:19:44.950><c> is</c><00:19:45.100><c> that</c><00:19:45.130><c> in</c><00:19:45.340><c> some</c><00:19:45.520><c> general</c><00:19:45.730><c> 10</c>

00:19:46.230 --> 00:19:46.240 align:start position:0%
seen is that in some general 10
 

00:19:46.240 --> 00:19:50.190 align:start position:0%
seen is that in some general 10
megabytes<00:19:46.659><c> for</c><00:19:48.690><c> individual</c><00:19:49.690><c> applications</c>

00:19:50.190 --> 00:19:50.200 align:start position:0%
megabytes for individual applications
 

00:19:50.200 --> 00:19:53.669 align:start position:0%
megabytes for individual applications
big<00:19:51.039><c> server</c><00:19:51.309><c> applications</c><00:19:51.909><c> will</c><00:19:52.750><c> thanks</c><00:19:53.020><c> some</c>

00:19:53.669 --> 00:19:53.679 align:start position:0%
big server applications will thanks some
 

00:19:53.679 --> 00:19:56.539 align:start position:0%
big server applications will thanks some
memory<00:19:53.950><c> like</c><00:19:54.159><c> 4</c><00:19:54.340><c> megabytes</c><00:19:54.669><c> but</c><00:19:55.000><c> in</c><00:19:55.990><c> average</c>

00:19:56.539 --> 00:19:56.549 align:start position:0%
memory like 4 megabytes but in average
 

00:19:56.549 --> 00:19:59.430 align:start position:0%
memory like 4 megabytes but in average
most<00:19:57.549><c> applications</c><00:19:58.210><c> have</c><00:19:58.480><c> a</c><00:19:58.510><c> reasonable</c><00:19:58.960><c> Java</c>

00:19:59.430 --> 00:19:59.440 align:start position:0%
most applications have a reasonable Java
 

00:19:59.440 --> 00:20:02.010 align:start position:0%
most applications have a reasonable Java
code<00:19:59.710><c> size</c><00:19:59.919><c> and</c><00:20:00.280><c> the</c><00:20:01.059><c> code</c><00:20:01.210><c> cache</c><00:20:01.419><c> is</c><00:20:01.659><c> fairly</c>

00:20:02.010 --> 00:20:02.020 align:start position:0%
code size and the code cache is fairly
 

00:20:02.020 --> 00:20:07.040 align:start position:0%
code size and the code cache is fairly
small<00:20:02.200><c> around</c><00:20:03.010><c> 300</c><00:20:03.399><c> kilobytes</c>

00:20:07.040 --> 00:20:07.050 align:start position:0%
 
 

00:20:07.050 --> 00:20:12.720 align:start position:0%
 
so<00:20:08.050><c> to</c><00:20:08.110><c> wrap</c><00:20:08.350><c> up</c><00:20:08.590><c> on</c><00:20:09.690><c> how</c><00:20:10.690><c> it</c><00:20:11.020><c> affects</c><00:20:11.730><c> these</c>

00:20:12.720 --> 00:20:12.730 align:start position:0%
so to wrap up on how it affects these
 

00:20:12.730 --> 00:20:15.390 align:start position:0%
so to wrap up on how it affects these
metrics<00:20:13.650><c> when</c><00:20:14.650><c> you</c><00:20:14.800><c> well</c><00:20:15.160><c> it's</c><00:20:15.280><c> being</c>

00:20:15.390 --> 00:20:15.400 align:start position:0%
metrics when you well it's being
 

00:20:15.400 --> 00:20:18.330 align:start position:0%
metrics when you well it's being
executed<00:20:15.670><c> we've</c><00:20:16.570><c> seen</c><00:20:16.780><c> that</c><00:20:17.160><c> performance</c><00:20:18.160><c> and</c>

00:20:18.330 --> 00:20:18.340 align:start position:0%
executed we've seen that performance and
 

00:20:18.340 --> 00:20:21.600 align:start position:0%
executed we've seen that performance and
jank<00:20:18.670><c> are</c><00:20:18.910><c> on</c><00:20:19.750><c> par</c><00:20:20.020><c> with</c><00:20:20.080><c> the</c><00:20:20.460><c> quality</c><00:20:21.460><c> level</c>

00:20:21.600 --> 00:20:21.610 align:start position:0%
jank are on par with the quality level
 

00:20:21.610 --> 00:20:25.250 align:start position:0%
jank are on par with the quality level
we<00:20:21.910><c> had</c><00:20:22.120><c> with</c><00:20:22.900><c> art</c><00:20:23.170><c> ahead</c><00:20:23.440><c> of</c><00:20:23.560><c> time</c><00:20:23.680><c> population</c>

00:20:25.250 --> 00:20:25.260 align:start position:0%
we had with art ahead of time population
 

00:20:25.260 --> 00:20:28.560 align:start position:0%
we had with art ahead of time population
and<00:20:26.260><c> I've</c><00:20:26.350><c> shown</c><00:20:26.680><c> you</c><00:20:27.060><c> that</c><00:20:28.060><c> it</c><00:20:28.210><c> does</c><00:20:28.330><c> have</c><00:20:28.540><c> a</c>

00:20:28.560 --> 00:20:28.570 align:start position:0%
and I've shown you that it does have a
 

00:20:28.570 --> 00:20:31.280 align:start position:0%
and I've shown you that it does have a
relative<00:20:29.080><c> impact</c><00:20:29.410><c> on</c><00:20:29.760><c> application</c><00:20:30.760><c> startup</c>

00:20:31.280 --> 00:20:31.290 align:start position:0%
relative impact on application startup
 

00:20:31.290 --> 00:20:36.750 align:start position:0%
relative impact on application startup
battery<00:20:32.290><c> and</c><00:20:32.590><c> memory</c><00:20:33.130><c> footprint</c><00:20:34.860><c> so</c><00:20:35.860><c> now</c><00:20:36.010><c> I'll</c>

00:20:36.750 --> 00:20:36.760 align:start position:0%
battery and memory footprint so now I'll
 

00:20:36.760 --> 00:20:38.250 align:start position:0%
battery and memory footprint so now I'll
be<00:20:36.940><c> handing</c><00:20:37.180><c> it</c><00:20:37.270><c> over</c><00:20:37.360><c> to</c><00:20:37.540><c> my</c><00:20:37.750><c> colleague</c><00:20:38.050><c> clean</c>

00:20:38.250 --> 00:20:38.260 align:start position:0%
be handing it over to my colleague clean
 

00:20:38.260 --> 00:20:41.580 align:start position:0%
be handing it over to my colleague clean
and<00:20:38.620><c> is</c><00:20:39.580><c> going</c><00:20:39.730><c> to</c><00:20:39.850><c> explain</c><00:20:40.270><c> to</c><00:20:40.330><c> you</c><00:20:40.630><c> how</c><00:20:41.530><c> we</c>

00:20:41.580 --> 00:20:41.590 align:start position:0%
and is going to explain to you how we
 

00:20:41.590 --> 00:20:43.680 align:start position:0%
and is going to explain to you how we
were<00:20:41.770><c> covering</c><00:20:42.160><c> from</c><00:20:42.910><c> those</c><00:20:43.090><c> small</c>

00:20:43.680 --> 00:20:43.690 align:start position:0%
were covering from those small
 

00:20:43.690 --> 00:20:46.350 align:start position:0%
were covering from those small
regressions<00:20:44.260><c> compared</c><00:20:44.680><c> to</c><00:20:44.770><c> äôt</c><00:20:45.100><c> by</c><00:20:46.000><c> doing</c><00:20:46.240><c> a</c>

00:20:46.350 --> 00:20:46.360 align:start position:0%
regressions compared to äôt by doing a
 

00:20:46.360 --> 00:20:55.520 align:start position:0%
regressions compared to äôt by doing a
long<00:20:46.510><c> time</c><00:20:46.690><c> profile</c><00:20:47.380><c> gallon</c><00:20:47.650><c> computation</c>

00:20:55.520 --> 00:20:55.530 align:start position:0%
 
 

00:20:55.530 --> 00:20:58.290 align:start position:0%
 
Thank<00:20:56.530><c> You</c><00:20:56.590><c> Nicola</c><00:20:56.860><c> hello</c><00:20:57.580><c> everyone</c><00:20:57.940><c> I'm</c>

00:20:58.290 --> 00:20:58.300 align:start position:0%
Thank You Nicola hello everyone I'm
 

00:20:58.300 --> 00:21:01.260 align:start position:0%
Thank You Nicola hello everyone I'm
Colleen<00:20:58.600><c> and</c><00:20:59.340><c> I'm</c><00:21:00.340><c> here</c><00:21:00.610><c> today</c><00:21:00.760><c> to</c><00:21:00.940><c> give</c><00:21:01.240><c> you</c>

00:21:01.260 --> 00:21:01.270 align:start position:0%
Colleen and I'm here today to give you
 

00:21:01.270 --> 00:21:03.960 align:start position:0%
Colleen and I'm here today to give you
more<00:21:01.630><c> details</c><00:21:02.050><c> on</c><00:21:02.410><c> a</c><00:21:02.550><c> profile</c><00:21:03.550><c> guided</c>

00:21:03.960 --> 00:21:03.970 align:start position:0%
more details on a profile guided
 

00:21:03.970 --> 00:21:05.970 align:start position:0%
more details on a profile guided
compilation<00:21:04.510><c> and</c><00:21:04.720><c> this</c><00:21:05.650><c> is</c><00:21:05.770><c> a</c><00:21:05.800><c> new</c>

00:21:05.970 --> 00:21:05.980 align:start position:0%
compilation and this is a new
 

00:21:05.980 --> 00:21:07.680 align:start position:0%
compilation and this is a new
compilation<00:21:06.340><c> strategy</c><00:21:07.090><c> that</c><00:21:07.240><c> we</c><00:21:07.330><c> introduced</c>

00:21:07.680 --> 00:21:07.690 align:start position:0%
compilation strategy that we introduced
 

00:21:07.690 --> 00:21:10.260 align:start position:0%
compilation strategy that we introduced
in<00:21:07.720><c> M</c><00:21:07.990><c> as</c><00:21:08.230><c> my</c><00:21:08.890><c> colleague</c><00:21:09.190><c> Nicola</c><00:21:09.490><c> mention</c><00:21:09.940><c> is</c><00:21:10.090><c> a</c>

00:21:10.260 --> 00:21:10.270 align:start position:0%
in M as my colleague Nicola mention is a
 

00:21:10.270 --> 00:21:12.210 align:start position:0%
in M as my colleague Nicola mention is a
combination<00:21:11.020><c> between</c><00:21:11.050><c> GT</c><00:21:11.740><c> and</c><00:21:11.920><c> ahead-of-time</c>

00:21:12.210 --> 00:21:12.220 align:start position:0%
combination between GT and ahead-of-time
 

00:21:12.220 --> 00:21:15.780 align:start position:0%
combination between GT and ahead-of-time
compilation<00:21:12.630><c> and</c><00:21:13.890><c> it's</c><00:21:14.890><c> mainly</c><00:21:15.250><c> based</c><00:21:15.460><c> on</c><00:21:15.670><c> the</c>

00:21:15.780 --> 00:21:15.790 align:start position:0%
compilation and it's mainly based on the
 

00:21:15.790 --> 00:21:17.850 align:start position:0%
compilation and it's mainly based on the
observation<00:21:16.420><c> that</c><00:21:16.450><c> the</c><00:21:16.990><c> percentage</c><00:21:17.620><c> of</c><00:21:17.770><c> the</c>

00:21:17.850 --> 00:21:17.860 align:start position:0%
observation that the percentage of the
 

00:21:17.860 --> 00:21:19.800 align:start position:0%
observation that the percentage of the
applications<00:21:18.400><c> code</c><00:21:18.640><c> which</c><00:21:19.210><c> is</c><00:21:19.390><c> actually</c>

00:21:19.800 --> 00:21:19.810 align:start position:0%
applications code which is actually
 

00:21:19.810 --> 00:21:22.050 align:start position:0%
applications code which is actually
worth<00:21:20.050><c> optimizing</c><00:21:20.860><c> is</c><00:21:21.010><c> very</c><00:21:21.550><c> small</c><00:21:21.880><c> in</c>

00:21:22.050 --> 00:21:22.060 align:start position:0%
worth optimizing is very small in
 

00:21:22.060 --> 00:21:25.380 align:start position:0%
worth optimizing is very small in
practice<00:21:22.770><c> and</c><00:21:24.000><c> focusing</c><00:21:25.000><c> on</c><00:21:25.120><c> the</c><00:21:25.240><c> most</c>

00:21:25.380 --> 00:21:25.390 align:start position:0%
practice and focusing on the most
 

00:21:25.390 --> 00:21:27.300 align:start position:0%
practice and focusing on the most
important<00:21:26.020><c> part</c><00:21:26.260><c> of</c><00:21:26.380><c> the</c><00:21:26.530><c> application</c><00:21:26.620><c> drives</c>

00:21:27.300 --> 00:21:27.310 align:start position:0%
important part of the application drives
 

00:21:27.310 --> 00:21:29.190 align:start position:0%
important part of the application drives
a<00:21:27.460><c> lot</c><00:21:27.610><c> of</c><00:21:27.670><c> benefits</c><00:21:28.300><c> for</c><00:21:28.480><c> the</c><00:21:28.540><c> overall</c><00:21:28.750><c> system</c>

00:21:29.190 --> 00:21:29.200 align:start position:0%
a lot of benefits for the overall system
 

00:21:29.200 --> 00:21:32.250 align:start position:0%
a lot of benefits for the overall system
performance<00:21:29.230><c> and</c><00:21:30.040><c> not</c><00:21:30.490><c> only</c><00:21:31.030><c> limited</c><00:21:31.810><c> to</c><00:21:32.080><c> the</c>

00:21:32.250 --> 00:21:32.260 align:start position:0%
performance and not only limited to the
 

00:21:32.260 --> 00:21:34.830 align:start position:0%
performance and not only limited to the
trick<00:21:33.100><c> happening</c><00:21:33.490><c> the</c><00:21:34.060><c> slight</c><00:21:34.330><c> regression</c>

00:21:34.830 --> 00:21:34.840 align:start position:0%
trick happening the slight regression
 

00:21:34.840 --> 00:21:37.830 align:start position:0%
trick happening the slight regression
that<00:21:34.960><c> we'll</c><00:21:35.050><c> have</c><00:21:35.170><c> to</c><00:21:35.380><c> enable</c><00:21:35.560><c> his</c><00:21:35.860><c> system</c><00:21:36.840><c> so</c>

00:21:37.830 --> 00:21:37.840 align:start position:0%
that we'll have to enable his system so
 

00:21:37.840 --> 00:21:39.750 align:start position:0%
that we'll have to enable his system so
the<00:21:37.990><c> goal</c><00:21:38.200><c> here</c><00:21:38.230><c> was</c><00:21:38.830><c> to</c><00:21:38.890><c> have</c><00:21:39.310><c> a</c><00:21:39.340><c> full</c>

00:21:39.750 --> 00:21:39.760 align:start position:0%
the goal here was to have a full
 

00:21:39.760 --> 00:21:41.970 align:start position:0%
the goal here was to have a full
five-star<00:21:40.480><c> system</c><00:21:40.750><c> and</c><00:21:41.290><c> this</c><00:21:41.800><c> is</c><00:21:41.860><c> what</c>

00:21:41.970 --> 00:21:41.980 align:start position:0%
five-star system and this is what
 

00:21:41.980 --> 00:21:43.710 align:start position:0%
five-star system and this is what
profile<00:21:42.460><c> guided</c><00:21:42.820><c> compilations</c><00:21:43.330><c> help</c><00:21:43.570><c> us</c>

00:21:43.710 --> 00:21:43.720 align:start position:0%
profile guided compilations help us
 

00:21:43.720 --> 00:21:46.890 align:start position:0%
profile guided compilations help us
achieve<00:21:44.760><c> so</c><00:21:45.760><c> let's</c><00:21:45.940><c> take</c><00:21:46.060><c> a</c><00:21:46.090><c> look</c><00:21:46.270><c> a</c><00:21:46.360><c> bit</c><00:21:46.540><c> up</c><00:21:46.690><c> on</c>

00:21:46.890 --> 00:21:46.900 align:start position:0%
achieve so let's take a look a bit up on
 

00:21:46.900 --> 00:21:49.740 align:start position:0%
achieve so let's take a look a bit up on
the<00:21:47.110><c> idea</c><00:21:47.340><c> in</c><00:21:48.340><c> a</c><00:21:48.460><c> nutshell</c><00:21:48.670><c> we</c><00:21:49.420><c> want</c><00:21:49.630><c> to</c>

00:21:49.740 --> 00:21:49.750 align:start position:0%
the idea in a nutshell we want to
 

00:21:49.750 --> 00:21:51.810 align:start position:0%
the idea in a nutshell we want to
combine<00:21:49.960><c> execution</c><00:21:50.740><c> profiles</c><00:21:51.190><c> which</c><00:21:51.670><c> were</c>

00:21:51.810 --> 00:21:51.820 align:start position:0%
combine execution profiles which were
 

00:21:51.820 --> 00:21:53.880 align:start position:0%
combine execution profiles which were
ahead<00:21:51.880><c> of</c><00:21:52.120><c> time</c><00:21:52.330><c> compilation</c><00:21:52.540><c> and</c><00:21:53.230><c> that</c><00:21:53.680><c> will</c>

00:21:53.880 --> 00:21:53.890 align:start position:0%
ahead of time compilation and that will
 

00:21:53.890 --> 00:21:55.800 align:start position:0%
ahead of time compilation and that will
lead<00:21:54.040><c> to</c><00:21:54.280><c> a</c><00:21:54.310><c> profile</c><00:21:54.760><c> guided</c><00:21:55.180><c> compilation</c>

00:21:55.800 --> 00:21:55.810 align:start position:0%
lead to a profile guided compilation
 

00:21:55.810 --> 00:21:58.620 align:start position:0%
lead to a profile guided compilation
what<00:21:56.470><c> that</c><00:21:56.620><c> means</c><00:21:56.920><c> is</c><00:21:57.130><c> that</c><00:21:57.880><c> during</c><00:21:58.300><c> the</c>

00:21:58.620 --> 00:21:58.630 align:start position:0%
what that means is that during the
 

00:21:58.630 --> 00:22:01.290 align:start position:0%
what that means is that during the
application<00:21:58.720><c> execution</c><00:21:59.850><c> report</c><00:22:00.850><c> profile</c>

00:22:01.290 --> 00:22:01.300 align:start position:0%
application execution report profile
 

00:22:01.300 --> 00:22:03.330 align:start position:0%
application execution report profile
information<00:22:01.630><c> about</c><00:22:02.350><c> how</c><00:22:02.800><c> the</c><00:22:02.860><c> app</c><00:22:03.160><c> is</c>

00:22:03.330 --> 00:22:03.340 align:start position:0%
information about how the app is
 

00:22:03.340 --> 00:22:05.910 align:start position:0%
information about how the app is
executed<00:22:03.910><c> and</c><00:22:04.390><c> we</c><00:22:04.540><c> use</c><00:22:04.810><c> that</c><00:22:05.020><c> information</c><00:22:05.320><c> to</c>

00:22:05.910 --> 00:22:05.920 align:start position:0%
executed and we use that information to
 

00:22:05.920 --> 00:22:08.160 align:start position:0%
executed and we use that information to
drive<00:22:06.130><c> offline</c><00:22:06.610><c> optimizations</c><00:22:07.330><c> at</c><00:22:07.810><c> a</c><00:22:07.840><c> time</c>

00:22:08.160 --> 00:22:08.170 align:start position:0%
drive offline optimizations at a time
 

00:22:08.170 --> 00:22:09.990 align:start position:0%
drive offline optimizations at a time
when<00:22:08.410><c> the</c><00:22:08.530><c> device</c><00:22:08.800><c> is</c><00:22:08.830><c> charging</c><00:22:09.040><c> and</c><00:22:09.610><c> idling</c>

00:22:09.990 --> 00:22:10.000 align:start position:0%
when the device is charging and idling
 

00:22:10.000 --> 00:22:11.490 align:start position:0%
when the device is charging and idling
so<00:22:10.240><c> that</c><00:22:10.360><c> they</c><00:22:10.480><c> don't</c><00:22:10.600><c> take</c><00:22:10.810><c> resources</c><00:22:11.170><c> out</c><00:22:11.470><c> of</c>

00:22:11.490 --> 00:22:11.500 align:start position:0%
so that they don't take resources out of
 

00:22:11.500 --> 00:22:17.500 align:start position:0%
so that they don't take resources out of
our<00:22:11.710><c> users</c>

00:22:17.500 --> 00:22:17.510 align:start position:0%
 
 

00:22:17.510 --> 00:22:20.120 align:start position:0%
 
so<00:22:18.510><c> let's</c><00:22:18.690><c> take</c><00:22:18.810><c> a</c><00:22:18.840><c> look</c><00:22:19.080><c> in</c><00:22:19.260><c> into</c><00:22:19.920><c> more</c>

00:22:20.120 --> 00:22:20.130 align:start position:0%
so let's take a look in into more
 

00:22:20.130 --> 00:22:22.400 align:start position:0%
so let's take a look in into more
details<00:22:20.520><c> how</c><00:22:20.790><c> this</c><00:22:20.970><c> works</c><00:22:21.300><c> how</c><00:22:21.930><c> it</c><00:22:22.080><c> affects</c>

00:22:22.400 --> 00:22:22.410 align:start position:0%
details how this works how it affects
 

00:22:22.410 --> 00:22:24.020 align:start position:0%
details how this works how it affects
the<00:22:22.590><c> life</c><00:22:22.770><c> cycle</c><00:22:23.130><c> of</c><00:22:23.190><c> the</c><00:22:23.310><c> application</c><00:22:23.340><c> and</c>

00:22:24.020 --> 00:22:24.030 align:start position:0%
the life cycle of the application and
 

00:22:24.030 --> 00:22:26.630 align:start position:0%
the life cycle of the application and
how<00:22:24.630><c> it</c><00:22:24.930><c> fits</c><00:22:25.200><c> together</c><00:22:25.530><c> in</c><00:22:25.800><c> the</c><00:22:26.040><c> jeat</c><00:22:26.250><c> system</c>

00:22:26.630 --> 00:22:26.640 align:start position:0%
how it fits together in the jeat system
 

00:22:26.640 --> 00:22:30.020 align:start position:0%
how it fits together in the jeat system
that<00:22:26.820><c> my</c><00:22:26.970><c> colleague</c><00:22:27.330><c> talked</c><00:22:27.570><c> about</c><00:22:28.760><c> the</c><00:22:29.760><c> first</c>

00:22:30.020 --> 00:22:30.030 align:start position:0%
that my colleague talked about the first
 

00:22:30.030 --> 00:22:32.480 align:start position:0%
that my colleague talked about the first
time<00:22:30.240><c> the</c><00:22:30.450><c> application</c><00:22:30.930><c> is</c><00:22:31.050><c> executed</c><00:22:31.650><c> the</c>

00:22:32.480 --> 00:22:32.490 align:start position:0%
time the application is executed the
 

00:22:32.490 --> 00:22:35.330 align:start position:0%
time the application is executed the
runtime<00:22:32.970><c> will</c><00:22:33.240><c> interpret</c><00:22:33.690><c> it</c><00:22:33.900><c> the</c><00:22:34.740><c> JIT</c><00:22:34.950><c> system</c>

00:22:35.330 --> 00:22:35.340 align:start position:0%
runtime will interpret it the JIT system
 

00:22:35.340 --> 00:22:36.920 align:start position:0%
runtime will interpret it the JIT system
will<00:22:35.490><c> kick</c><00:22:35.670><c> in</c><00:22:35.850><c> and</c><00:22:36.030><c> optimize</c><00:22:36.540><c> the</c><00:22:36.720><c> hot</c>

00:22:36.920 --> 00:22:36.930 align:start position:0%
will kick in and optimize the hot
 

00:22:36.930 --> 00:22:39.860 align:start position:0%
will kick in and optimize the hot
methods<00:22:37.170><c> and</c><00:22:38.210><c> eventually</c><00:22:39.210><c> disciple</c><00:22:39.750><c> will</c>

00:22:39.860 --> 00:22:39.870 align:start position:0%
methods and eventually disciple will
 

00:22:39.870 --> 00:22:42.500 align:start position:0%
methods and eventually disciple will
repeat<00:22:40.220><c> in</c><00:22:41.220><c> parallel</c><00:22:41.790><c> with</c><00:22:42.330><c> the</c>

00:22:42.500 --> 00:22:42.510 align:start position:0%
repeat in parallel with the
 

00:22:42.510 --> 00:22:43.700 align:start position:0%
repeat in parallel with the
interpretation<00:22:42.990><c> and</c><00:22:43.320><c> if</c><00:22:43.410><c> the</c><00:22:43.530><c> JIT</c>

00:22:43.700 --> 00:22:43.710 align:start position:0%
interpretation and if the JIT
 

00:22:43.710 --> 00:22:45.980 align:start position:0%
interpretation and if the JIT
compilation<00:22:44.060><c> we</c><00:22:45.060><c> record</c><00:22:45.450><c> the</c><00:22:45.540><c> profile</c>

00:22:45.980 --> 00:22:45.990 align:start position:0%
compilation we record the profile
 

00:22:45.990 --> 00:22:48.380 align:start position:0%
compilation we record the profile
information<00:22:46.200><c> and</c><00:22:46.860><c> this</c><00:22:47.700><c> profile</c><00:22:48.120><c> information</c>

00:22:48.380 --> 00:22:48.390 align:start position:0%
information and this profile information
 

00:22:48.390 --> 00:22:51.200 align:start position:0%
information and this profile information
gets<00:22:48.960><c> dumped</c><00:22:49.350><c> to</c><00:22:49.470><c> disk</c><00:22:49.680><c> at</c><00:22:50.250><c> regular</c><00:22:50.670><c> interval</c>

00:22:51.200 --> 00:22:51.210 align:start position:0%
gets dumped to disk at regular interval
 

00:22:51.210 --> 00:22:53.690 align:start position:0%
gets dumped to disk at regular interval
of<00:22:51.300><c> time</c><00:22:51.510><c> the</c><00:22:52.500><c> next</c><00:22:52.680><c> time</c><00:22:52.860><c> that</c><00:22:53.400><c> we</c><00:22:53.520><c> execute</c>

00:22:53.690 --> 00:22:53.700 align:start position:0%
of time the next time that we execute
 

00:22:53.700 --> 00:22:55.730 align:start position:0%
of time the next time that we execute
the<00:22:53.970><c> app</c><00:22:54.090><c> the</c><00:22:54.630><c> same</c><00:22:54.840><c> process</c><00:22:55.290><c> starts</c><00:22:55.650><c> again</c>

00:22:55.730 --> 00:22:55.740 align:start position:0%
the app the same process starts again
 

00:22:55.740 --> 00:22:58.190 align:start position:0%
the app the same process starts again
and<00:22:56.130><c> the</c><00:22:56.580><c> profile</c><00:22:57.000><c> files</c><00:22:57.300><c> will</c><00:22:57.660><c> eventually</c><00:22:58.050><c> be</c>

00:22:58.190 --> 00:22:58.200 align:start position:0%
and the profile files will eventually be
 

00:22:58.200 --> 00:23:00.950 align:start position:0%
and the profile files will eventually be
expanded<00:22:58.710><c> if</c><00:22:58.830><c> new</c><00:22:59.040><c> use</c><00:22:59.250><c> cases</c><00:22:59.570><c> based</c><00:23:00.570><c> on</c><00:23:00.750><c> the</c>

00:23:00.950 --> 00:23:00.960 align:start position:0%
expanded if new use cases based on the
 

00:23:00.960 --> 00:23:04.220 align:start position:0%
expanded if new use cases based on the
how<00:23:01.350><c> the</c><00:23:01.470><c> user</c><00:23:01.770><c> used</c><00:23:02.100><c> the</c><00:23:02.220><c> app</c><00:23:02.930><c> but</c><00:23:03.930><c> the</c><00:23:04.050><c> later</c>

00:23:04.220 --> 00:23:04.230 align:start position:0%
how the user used the app but the later
 

00:23:04.230 --> 00:23:06.890 align:start position:0%
how the user used the app but the later
point<00:23:04.590><c> when</c><00:23:05.280><c> they</c><00:23:05.730><c> use</c><00:23:05.910><c> the</c><00:23:06.210><c> device</c><00:23:06.450><c> is</c><00:23:06.600><c> not</c><00:23:06.750><c> in</c>

00:23:06.890 --> 00:23:06.900 align:start position:0%
point when they use the device is not in
 

00:23:06.900 --> 00:23:09.140 align:start position:0%
point when they use the device is not in
use<00:23:07.080><c> anymore</c><00:23:07.200><c> it's</c><00:23:07.800><c> idling</c><00:23:08.250><c> and</c><00:23:08.460><c> charging</c><00:23:08.880><c> and</c>

00:23:09.140 --> 00:23:09.150 align:start position:0%
use anymore it's idling and charging and
 

00:23:09.150 --> 00:23:10.850 align:start position:0%
use anymore it's idling and charging and
at<00:23:09.630><c> the</c><00:23:09.720><c> state</c><00:23:09.930><c> that</c><00:23:10.020><c> we</c><00:23:10.140><c> called</c><00:23:10.380><c> maintenance</c>

00:23:10.850 --> 00:23:10.860 align:start position:0%
at the state that we called maintenance
 

00:23:10.860 --> 00:23:13.460 align:start position:0%
at the state that we called maintenance
mode<00:23:11.070><c> we</c><00:23:11.670><c> kick</c><00:23:11.880><c> in</c><00:23:12.030><c> the</c><00:23:12.150><c> service</c><00:23:12.600><c> and</c><00:23:12.840><c> what</c><00:23:13.320><c> his</c>

00:23:13.460 --> 00:23:13.470 align:start position:0%
mode we kick in the service and what his
 

00:23:13.470 --> 00:23:15.440 align:start position:0%
mode we kick in the service and what his
service<00:23:13.830><c> does</c><00:23:14.070><c> it</c><00:23:14.700><c> takes</c><00:23:14.970><c> a</c><00:23:15.090><c> look</c><00:23:15.180><c> at</c><00:23:15.330><c> the</c>

00:23:15.440 --> 00:23:15.450 align:start position:0%
service does it takes a look at the
 

00:23:15.450 --> 00:23:16.190 align:start position:0%
service does it takes a look at the
application

00:23:16.190 --> 00:23:16.200 align:start position:0%
application
 

00:23:16.200 --> 00:23:18.620 align:start position:0%
application
it<00:23:16.560><c> looks</c><00:23:16.770><c> at</c><00:23:16.890><c> the</c><00:23:16.950><c> profiles</c><00:23:17.460><c> and</c><00:23:18.210><c> it</c><00:23:18.360><c> tries</c><00:23:18.600><c> to</c>

00:23:18.620 --> 00:23:18.630 align:start position:0%
it looks at the profiles and it tries to
 

00:23:18.630 --> 00:23:20.570 align:start position:0%
it looks at the profiles and it tries to
optimize<00:23:19.260><c> the</c><00:23:19.410><c> application</c><00:23:19.950><c> based</c><00:23:20.220><c> on</c><00:23:20.400><c> its</c>

00:23:20.570 --> 00:23:20.580 align:start position:0%
optimize the application based on its
 

00:23:20.580 --> 00:23:23.360 align:start position:0%
optimize the application based on its
use<00:23:21.020><c> the</c><00:23:22.020><c> output</c><00:23:22.200><c> of</c><00:23:22.500><c> the</c><00:23:22.710><c> service</c><00:23:23.160><c> is</c>

00:23:23.360 --> 00:23:23.370 align:start position:0%
use the output of the service is
 

00:23:23.370 --> 00:23:26.090 align:start position:0%
use the output of the service is
actually<00:23:24.060><c> a</c><00:23:24.240><c> compiled</c><00:23:24.720><c> binary</c><00:23:25.080><c> and</c><00:23:25.590><c> this</c>

00:23:26.090 --> 00:23:26.100 align:start position:0%
actually a compiled binary and this
 

00:23:26.100 --> 00:23:28.160 align:start position:0%
actually a compiled binary and this
compiled<00:23:26.490><c> binary</c><00:23:26.790><c> will</c><00:23:27.120><c> replace</c><00:23:27.510><c> the</c><00:23:27.810><c> initial</c>

00:23:28.160 --> 00:23:28.170 align:start position:0%
compiled binary will replace the initial
 

00:23:28.170 --> 00:23:31.820 align:start position:0%
compiled binary will replace the initial
application<00:23:28.740><c> in</c><00:23:28.830><c> the</c><00:23:28.920><c> system</c><00:23:29.930><c> so</c><00:23:30.930><c> now</c><00:23:31.110><c> the</c>

00:23:31.820 --> 00:23:31.830 align:start position:0%
application in the system so now the
 

00:23:31.830 --> 00:23:33.260 align:start position:0%
application in the system so now the
next<00:23:32.040><c> time</c><00:23:32.220><c> the</c><00:23:32.460><c> application</c><00:23:32.580><c> is</c><00:23:33.000><c> launched</c>

00:23:33.260 --> 00:23:33.270 align:start position:0%
next time the application is launched
 

00:23:33.270 --> 00:23:35.800 align:start position:0%
next time the application is launched
after<00:23:33.600><c> this</c><00:23:33.780><c> service</c><00:23:34.020><c> will</c><00:23:34.380><c> execute</c><00:23:34.770><c> it</c><00:23:35.040><c> the</c>

00:23:35.800 --> 00:23:35.810 align:start position:0%
after this service will execute it the
 

00:23:35.810 --> 00:23:38.060 align:start position:0%
after this service will execute it the
application<00:23:36.810><c> will</c><00:23:36.900><c> contain</c><00:23:37.260><c> different</c><00:23:37.740><c> codes</c>

00:23:38.060 --> 00:23:38.070 align:start position:0%
application will contain different codes
 

00:23:38.070 --> 00:23:40.850 align:start position:0%
application will contain different codes
different<00:23:38.850><c> states</c><00:23:39.120><c> of</c><00:23:39.330><c> the</c><00:23:39.390><c> same</c><00:23:39.810><c> code</c><00:23:40.080><c> so</c><00:23:40.770><c> it</c>

00:23:40.850 --> 00:23:40.860 align:start position:0%
different states of the same code so it
 

00:23:40.860 --> 00:23:42.560 align:start position:0%
different states of the same code so it
you<00:23:41.280><c> may</c><00:23:41.460><c> have</c><00:23:41.670><c> code</c><00:23:41.970><c> which</c><00:23:42.150><c> is</c><00:23:42.270><c> interpreted</c>

00:23:42.560 --> 00:23:42.570 align:start position:0%
you may have code which is interpreted
 

00:23:42.570 --> 00:23:45.020 align:start position:0%
you may have code which is interpreted
and<00:23:43.080><c> eventually</c><00:23:44.040><c> be</c><00:23:44.190><c> cheated</c><00:23:44.520><c> and</c><00:23:44.700><c> you</c><00:23:44.880><c> also</c>

00:23:45.020 --> 00:23:45.030 align:start position:0%
and eventually be cheated and you also
 

00:23:45.030 --> 00:23:46.370 align:start position:0%
and eventually be cheated and you also
have<00:23:45.330><c> code</c><00:23:45.540><c> which</c><00:23:45.720><c> is</c><00:23:45.840><c> ahead</c><00:23:45.960><c> of</c><00:23:46.200><c> time</c>

00:23:46.370 --> 00:23:46.380 align:start position:0%
have code which is ahead of time
 

00:23:46.380 --> 00:23:50.630 align:start position:0%
have code which is ahead of time
compiled<00:23:48.110><c> if</c><00:23:49.110><c> the</c><00:23:49.350><c> user</c><00:23:49.590><c> for</c><00:23:49.920><c> example</c><00:23:49.950><c> uses</c><00:23:50.610><c> a</c>

00:23:50.630 --> 00:23:50.640 align:start position:0%
compiled if the user for example uses a
 

00:23:50.640 --> 00:23:52.310 align:start position:0%
compiled if the user for example uses a
new<00:23:50.880><c> part</c><00:23:51.150><c> of</c><00:23:51.270><c> the</c><00:23:51.330><c> application</c><00:23:51.540><c> that</c><00:23:51.990><c> haven't</c>

00:23:52.310 --> 00:23:52.320 align:start position:0%
new part of the application that haven't
 

00:23:52.320 --> 00:23:54.920 align:start position:0%
new part of the application that haven't
been<00:23:52.380><c> explored</c><00:23:52.830><c> before</c><00:23:53.300><c> that</c><00:23:54.300><c> part</c><00:23:54.570><c> will</c><00:23:54.780><c> be</c>

00:23:54.920 --> 00:23:54.930 align:start position:0%
been explored before that part will be
 

00:23:54.930 --> 00:23:56.450 align:start position:0%
been explored before that part will be
interpreted<00:23:55.500><c> in</c><00:23:55.620><c> GTD</c><00:23:55.950><c> and</c><00:23:56.070><c> will</c><00:23:56.160><c> generate</c><00:23:56.400><c> a</c>

00:23:56.450 --> 00:23:56.460 align:start position:0%
interpreted in GTD and will generate a
 

00:23:56.460 --> 00:23:58.580 align:start position:0%
interpreted in GTD and will generate a
new<00:23:56.670><c> profile</c><00:23:57.060><c> information</c><00:23:57.360><c> and</c><00:23:57.810><c> so</c><00:23:58.230><c> the</c><00:23:58.260><c> cycle</c>

00:23:58.580 --> 00:23:58.590 align:start position:0%
new profile information and so the cycle
 

00:23:58.590 --> 00:24:01.970 align:start position:0%
new profile information and so the cycle
begins<00:23:58.890><c> again</c><00:23:59.930><c> so</c><00:24:00.930><c> what's</c><00:24:01.050><c> important</c><00:24:01.530><c> here</c><00:24:01.800><c> is</c>

00:24:01.970 --> 00:24:01.980 align:start position:0%
begins again so what's important here is
 

00:24:01.980 --> 00:24:04.670 align:start position:0%
begins again so what's important here is
will<00:24:02.970><c> improve</c><00:24:03.390><c> the</c><00:24:03.570><c> application</c><00:24:04.110><c> performance</c>

00:24:04.670 --> 00:24:04.680 align:start position:0%
will improve the application performance
 

00:24:04.680 --> 00:24:07.430 align:start position:0%
will improve the application performance
as<00:24:05.400><c> the</c><00:24:05.610><c> user</c><00:24:05.850><c> executes</c><00:24:06.300><c> ative</c><00:24:06.720><c> new</c><00:24:06.930><c> use</c><00:24:07.140><c> cases</c>

00:24:07.430 --> 00:24:07.440 align:start position:0%
as the user executes ative new use cases
 

00:24:07.440 --> 00:24:10.040 align:start position:0%
as the user executes ative new use cases
and<00:24:07.800><c> we'll</c><00:24:08.400><c> keep</c><00:24:08.580><c> recompile</c><00:24:09.240><c> it</c><00:24:09.390><c> until</c><00:24:09.960><c> we</c>

00:24:10.040 --> 00:24:10.050 align:start position:0%
and we'll keep recompile it until we
 

00:24:10.050 --> 00:24:16.130 align:start position:0%
and we'll keep recompile it until we
discover<00:24:10.380><c> all</c><00:24:10.650><c> possible</c><00:24:11.300><c> cases</c><00:24:14.930><c> so</c><00:24:15.930><c> let's</c>

00:24:16.130 --> 00:24:16.140 align:start position:0%
discover all possible cases so let's
 

00:24:16.140 --> 00:24:18.080 align:start position:0%
discover all possible cases so let's
focus<00:24:16.290><c> a</c><00:24:16.590><c> bit</c><00:24:16.710><c> on</c><00:24:16.770><c> the</c><00:24:17.040><c> profile</c><00:24:17.430><c> collection</c>

00:24:18.080 --> 00:24:18.090 align:start position:0%
focus a bit on the profile collection
 

00:24:18.090 --> 00:24:20.050 align:start position:0%
focus a bit on the profile collection
and<00:24:18.270><c> how</c><00:24:18.990><c> that</c><00:24:19.290><c> impacts</c><00:24:19.770><c> there</c><00:24:19.920><c> our</c>

00:24:20.050 --> 00:24:20.060 align:start position:0%
and how that impacts there our
 

00:24:20.060 --> 00:24:21.830 align:start position:0%
and how that impacts there our
application<00:24:21.060><c> performance</c><00:24:21.570><c> and</c><00:24:21.780><c> other</c>

00:24:21.830 --> 00:24:21.840 align:start position:0%
application performance and other
 

00:24:21.840 --> 00:24:24.920 align:start position:0%
application performance and other
factors

00:24:24.920 --> 00:24:24.930 align:start position:0%
 
 

00:24:24.930 --> 00:24:27.140 align:start position:0%
 
as<00:24:25.410><c> I</c><00:24:25.560><c> mentioned</c><00:24:26.010><c> we</c><00:24:26.310><c> do</c><00:24:26.550><c> collect</c><00:24:26.910><c> them</c><00:24:27.060><c> in</c>

00:24:27.140 --> 00:24:27.150 align:start position:0%
as I mentioned we do collect them in
 

00:24:27.150 --> 00:24:28.250 align:start position:0%
as I mentioned we do collect them in
parallel<00:24:27.540><c> with</c><00:24:27.630><c> the</c><00:24:27.750><c> application</c>

00:24:28.250 --> 00:24:28.260 align:start position:0%
parallel with the application
 

00:24:28.260 --> 00:24:31.010 align:start position:0%
parallel with the application
institution<00:24:28.910><c> and</c><00:24:29.910><c> what</c><00:24:30.150><c> we</c><00:24:30.270><c> focused</c><00:24:30.690><c> on</c><00:24:30.810><c> to</c>

00:24:31.010 --> 00:24:31.020 align:start position:0%
institution and what we focused on to
 

00:24:31.020 --> 00:24:33.470 align:start position:0%
institution and what we focused on to
make<00:24:31.200><c> sure</c><00:24:31.230><c> that</c><00:24:31.740><c> it</c><00:24:31.890><c> has</c><00:24:32.100><c> the</c><00:24:32.370><c> minimal</c><00:24:32.910><c> impact</c>

00:24:33.470 --> 00:24:33.480 align:start position:0%
make sure that it has the minimal impact
 

00:24:33.480 --> 00:24:37.100 align:start position:0%
make sure that it has the minimal impact
on<00:24:33.720><c> the</c><00:24:33.840><c> performance</c><00:24:35.120><c> then</c><00:24:36.120><c> one</c><00:24:36.330><c> factor</c><00:24:36.870><c> that</c>

00:24:37.100 --> 00:24:37.110 align:start position:0%
on the performance then one factor that
 

00:24:37.110 --> 00:24:39.830 align:start position:0%
on the performance then one factor that
we<00:24:37.290><c> put</c><00:24:37.980><c> a</c><00:24:38.010><c> lot</c><00:24:38.190><c> of</c><00:24:38.310><c> attention</c><00:24:38.460><c> into</c><00:24:39.120><c> is</c><00:24:39.600><c> to</c>

00:24:39.830 --> 00:24:39.840 align:start position:0%
we put a lot of attention into is to
 

00:24:39.840 --> 00:24:41.780 align:start position:0%
we put a lot of attention into is to
have<00:24:39.960><c> an</c><00:24:40.080><c> efficient</c><00:24:40.590><c> caching</c><00:24:41.160><c> and</c><00:24:41.370><c> I'll</c>

00:24:41.780 --> 00:24:41.790 align:start position:0%
have an efficient caching and I'll
 

00:24:41.790 --> 00:24:44.330 align:start position:0%
have an efficient caching and I'll
totaling<00:24:42.420><c> so</c><00:24:42.750><c> that</c><00:24:42.900><c> we</c><00:24:43.020><c> minimize</c><00:24:43.200><c> the</c><00:24:43.920><c> write</c>

00:24:44.330 --> 00:24:44.340 align:start position:0%
totaling so that we minimize the write
 

00:24:44.340 --> 00:24:48.020 align:start position:0%
totaling so that we minimize the write
operation<00:24:44.370><c> to</c><00:24:45.060><c> disk</c><00:24:46.250><c> we</c><00:24:47.250><c> also</c><00:24:47.430><c> have</c><00:24:47.700><c> a</c><00:24:47.730><c> very</c>

00:24:48.020 --> 00:24:48.030 align:start position:0%
operation to disk we also have a very
 

00:24:48.030 --> 00:24:50.420 align:start position:0%
operation to disk we also have a very
small<00:24:48.510><c> file</c><00:24:48.810><c> footprint</c><00:24:49.500><c> and</c><00:24:49.680><c> the</c><00:24:50.100><c> amount</c><00:24:50.310><c> of</c>

00:24:50.420 --> 00:24:50.430 align:start position:0%
small file footprint and the amount of
 

00:24:50.430 --> 00:24:52.070 align:start position:0%
small file footprint and the amount of
data<00:24:50.670><c> that</c><00:24:50.790><c> we</c><00:24:50.940><c> write</c><00:24:51.240><c> to</c><00:24:51.270><c> disk</c><00:24:51.510><c> is</c><00:24:51.750><c> actually</c>

00:24:52.070 --> 00:24:52.080 align:start position:0%
data that we write to disk is actually
 

00:24:52.080 --> 00:24:56.630 align:start position:0%
data that we write to disk is actually
very<00:24:52.290><c> very</c><00:24:52.620><c> small</c><00:24:54.620><c> another</c><00:24:55.620><c> point</c><00:24:56.010><c> which</c><00:24:56.490><c> I</c>

00:24:56.630 --> 00:24:56.640 align:start position:0%
very very small another point which I
 

00:24:56.640 --> 00:24:59.060 align:start position:0%
very very small another point which I
mentioned<00:24:57.270><c> before</c><00:24:57.300><c> is</c><00:24:57.900><c> that</c><00:24:58.740><c> they</c><00:24:58.830><c> keep</c>

00:24:59.060 --> 00:24:59.070 align:start position:0%
mentioned before is that they keep
 

00:24:59.070 --> 00:25:01.160 align:start position:0%
mentioned before is that they keep
expanding<00:24:59.700><c> these</c><00:24:59.850><c> profiles</c><00:25:00.420><c> as</c><00:25:00.840><c> the</c><00:25:01.080><c> app</c>

00:25:01.160 --> 00:25:01.170 align:start position:0%
expanding these profiles as the app
 

00:25:01.170 --> 00:25:05.210 align:start position:0%
expanding these profiles as the app
executes<00:25:01.830><c> and</c><00:25:03.500><c> obviously</c><00:25:04.500><c> it</c><00:25:04.620><c> depends</c><00:25:04.950><c> on</c><00:25:05.100><c> the</c>

00:25:05.210 --> 00:25:05.220 align:start position:0%
executes and obviously it depends on the
 

00:25:05.220 --> 00:25:05.810 align:start position:0%
executes and obviously it depends on the
application

00:25:05.810 --> 00:25:05.820 align:start position:0%
application
 

00:25:05.820 --> 00:25:08.810 align:start position:0%
application
it<00:25:06.330><c> depends</c><00:25:06.720><c> on</c><00:25:06.750><c> the</c><00:25:06.900><c> use</c><00:25:07.110><c> case</c><00:25:07.370><c> our</c><00:25:08.370><c> test</c>

00:25:08.810 --> 00:25:08.820 align:start position:0%
it depends on the use case our test
 

00:25:08.820 --> 00:25:10.610 align:start position:0%
it depends on the use case our test
shows<00:25:09.120><c> that</c><00:25:09.150><c> the</c><00:25:09.360><c> largest</c><00:25:09.780><c> part</c><00:25:10.050><c> of</c><00:25:10.260><c> the</c><00:25:10.410><c> data</c>

00:25:10.610 --> 00:25:10.620 align:start position:0%
shows that the largest part of the data
 

00:25:10.620 --> 00:25:12.380 align:start position:0%
shows that the largest part of the data
is<00:25:10.950><c> actually</c><00:25:11.310><c> captured</c><00:25:11.760><c> during</c><00:25:12.000><c> the</c><00:25:12.120><c> first</c>

00:25:12.380 --> 00:25:12.390 align:start position:0%
is actually captured during the first
 

00:25:12.390 --> 00:25:13.360 align:start position:0%
is actually captured during the first
run

00:25:13.360 --> 00:25:13.370 align:start position:0%
run
 

00:25:13.370 --> 00:25:15.680 align:start position:0%
run
subsequent<00:25:14.370><c> runs</c><00:25:14.550><c> add</c><00:25:14.880><c> the</c><00:25:15.300><c> profile</c>

00:25:15.680 --> 00:25:15.690 align:start position:0%
subsequent runs add the profile
 

00:25:15.690 --> 00:25:17.600 align:start position:0%
subsequent runs add the profile
information<00:25:15.840><c> it</c><00:25:16.650><c> obviously</c><00:25:17.070><c> depends</c><00:25:17.430><c> how</c><00:25:17.550><c> the</c>

00:25:17.600 --> 00:25:17.610 align:start position:0%
information it obviously depends how the
 

00:25:17.610 --> 00:25:20.390 align:start position:0%
information it obviously depends how the
user<00:25:17.880><c> used</c><00:25:18.210><c> the</c><00:25:18.360><c> app</c><00:25:18.530><c> but</c><00:25:19.530><c> the</c><00:25:19.680><c> largest</c><00:25:20.010><c> chunk</c>

00:25:20.390 --> 00:25:20.400 align:start position:0%
user used the app but the largest chunk
 

00:25:20.400 --> 00:25:22.460 align:start position:0%
user used the app but the largest chunk
of<00:25:20.640><c> the</c><00:25:20.790><c> information</c><00:25:21.390><c> is</c><00:25:21.750><c> actually</c><00:25:21.990><c> captured</c>

00:25:22.460 --> 00:25:22.470 align:start position:0%
of the information is actually captured
 

00:25:22.470 --> 00:25:24.650 align:start position:0%
of the information is actually captured
in<00:25:22.650><c> the</c><00:25:22.740><c> first</c><00:25:22.890><c> execution</c><00:25:23.190><c> and</c><00:25:23.640><c> yet</c><00:25:24.270><c> that</c>

00:25:24.650 --> 00:25:24.660 align:start position:0%
in the first execution and yet that
 

00:25:24.660 --> 00:25:29.900 align:start position:0%
in the first execution and yet that
gives<00:25:24.870><c> us</c><00:25:24.990><c> important</c><00:25:25.700><c> data</c><00:25:26.700><c> to</c><00:25:26.850><c> work</c><00:25:27.090><c> on</c><00:25:28.910><c> the</c>

00:25:29.900 --> 00:25:29.910 align:start position:0%
gives us important data to work on the
 

00:25:29.910 --> 00:25:31.310 align:start position:0%
gives us important data to work on the
final<00:25:30.270><c> point</c><00:25:30.570><c> which</c><00:25:30.720><c> is</c><00:25:30.870><c> worth</c><00:25:31.080><c> mentioning</c>

00:25:31.310 --> 00:25:31.320 align:start position:0%
final point which is worth mentioning
 

00:25:31.320 --> 00:25:33.380 align:start position:0%
final point which is worth mentioning
here<00:25:31.560><c> is</c><00:25:31.920><c> that</c><00:25:32.070><c> all</c><00:25:32.370><c> the</c><00:25:32.580><c> application</c><00:25:33.090><c> all</c><00:25:33.360><c> the</c>

00:25:33.380 --> 00:25:33.390 align:start position:0%
here is that all the application all the
 

00:25:33.390 --> 00:25:39.200 align:start position:0%
here is that all the application all the
users<00:25:33.900><c> get</c><00:25:34.080><c> their</c><00:25:34.290><c> own</c><00:25:34.500><c> profiles</c><00:25:37.880><c> and</c><00:25:38.880><c> if</c><00:25:39.060><c> that</c>

00:25:39.200 --> 00:25:39.210 align:start position:0%
users get their own profiles and if that
 

00:25:39.210 --> 00:25:40.370 align:start position:0%
users get their own profiles and if that
in<00:25:39.330><c> mind</c><00:25:39.540><c> let's</c><00:25:39.840><c> take</c><00:25:39.990><c> a</c><00:25:40.020><c> look</c><00:25:40.230><c> on</c><00:25:40.320><c> what</c>

00:25:40.370 --> 00:25:40.380 align:start position:0%
in mind let's take a look on what
 

00:25:40.380 --> 00:25:42.320 align:start position:0%
in mind let's take a look on what
exactly<00:25:40.830><c> we</c><00:25:41.280><c> record</c><00:25:41.640><c> in</c><00:25:41.790><c> this</c><00:25:41.940><c> profile</c>

00:25:42.320 --> 00:25:42.330 align:start position:0%
exactly we record in this profile
 

00:25:42.330 --> 00:25:43.690 align:start position:0%
exactly we record in this profile
information

00:25:43.690 --> 00:25:43.700 align:start position:0%
information
 

00:25:43.700 --> 00:25:46.880 align:start position:0%
information
the<00:25:44.700><c> first</c><00:25:44.970><c> thing</c><00:25:45.210><c> are</c><00:25:45.810><c> the</c><00:25:46.020><c> hot</c><00:25:46.230><c> methods</c><00:25:46.500><c> and</c>

00:25:46.880 --> 00:25:46.890 align:start position:0%
the first thing are the hot methods and
 

00:25:46.890 --> 00:25:49.490 align:start position:0%
the first thing are the hot methods and
what<00:25:47.580><c> constitutes</c><00:25:48.150><c> a</c><00:25:48.270><c> hot</c><00:25:48.450><c> method</c><00:25:48.900><c> it's</c><00:25:49.350><c> a</c>

00:25:49.490 --> 00:25:49.500 align:start position:0%
what constitutes a hot method it's a
 

00:25:49.500 --> 00:25:51.050 align:start position:0%
what constitutes a hot method it's a
metric<00:25:49.860><c> which</c><00:25:50.010><c> you</c><00:25:50.160><c> have</c><00:25:50.340><c> internal</c><00:25:50.880><c> to</c><00:25:51.000><c> your</c>

00:25:51.050 --> 00:25:51.060 align:start position:0%
metric which you have internal to your
 

00:25:51.060 --> 00:25:53.450 align:start position:0%
metric which you have internal to your
runtime<00:25:51.300><c> and</c><00:25:51.750><c> factors</c><00:25:52.740><c> that</c><00:25:52.860><c> contribute</c><00:25:53.430><c> to</c>

00:25:53.450 --> 00:25:53.460 align:start position:0%
runtime and factors that contribute to
 

00:25:53.460 --> 00:25:55.670 align:start position:0%
runtime and factors that contribute to
it<00:25:53.700><c> are</c><00:25:53.850><c> for</c><00:25:54.030><c> example</c><00:25:54.180><c> number</c><00:25:54.870><c> of</c><00:25:55.050><c> invocations</c>

00:25:55.670 --> 00:25:55.680 align:start position:0%
it are for example number of invocations
 

00:25:55.680 --> 00:25:57.500 align:start position:0%
it are for example number of invocations
or<00:25:56.310><c> whether</c><00:25:56.610><c> or</c><00:25:56.760><c> not</c><00:25:56.880><c> that</c><00:25:57.090><c> method</c><00:25:57.420><c> is</c>

00:25:57.500 --> 00:25:57.510 align:start position:0%
or whether or not that method is
 

00:25:57.510 --> 00:25:59.570 align:start position:0%
or whether or not that method is
executed<00:25:57.690><c> on</c><00:25:58.050><c> the</c><00:25:58.080><c> UI</c><00:25:58.320><c> thread</c><00:25:58.650><c> so</c><00:25:59.340><c> that</c><00:25:59.370><c> you</c>

00:25:59.570 --> 00:25:59.580 align:start position:0%
executed on the UI thread so that you
 

00:25:59.580 --> 00:26:01.190 align:start position:0%
executed on the UI thread so that you
can<00:25:59.700><c> speed</c><00:26:00.000><c> up</c><00:26:00.030><c> requests</c><00:26:00.600><c> that</c><00:26:00.690><c> will</c><00:26:00.870><c> impact</c>

00:26:01.190 --> 00:26:01.200 align:start position:0%
can speed up requests that will impact
 

00:26:01.200 --> 00:26:03.530 align:start position:0%
can speed up requests that will impact
the<00:26:01.440><c> users</c><00:26:01.770><c> directly</c><00:26:02.190><c> we</c><00:26:03.180><c> use</c><00:26:03.390><c> this</c>

00:26:03.530 --> 00:26:03.540 align:start position:0%
the users directly we use this
 

00:26:03.540 --> 00:26:04.970 align:start position:0%
the users directly we use this
information<00:26:03.870><c> to</c><00:26:04.230><c> drive</c><00:26:04.530><c> offline</c>

00:26:04.970 --> 00:26:04.980 align:start position:0%
information to drive offline
 

00:26:04.980 --> 00:26:06.830 align:start position:0%
information to drive offline
optimizations<00:26:05.700><c> and</c><00:26:05.880><c> to</c><00:26:06.000><c> dedicate</c><00:26:06.480><c> more</c><00:26:06.780><c> time</c>

00:26:06.830 --> 00:26:06.840 align:start position:0%
optimizations and to dedicate more time
 

00:26:06.840 --> 00:26:11.350 align:start position:0%
optimizations and to dedicate more time
to<00:26:07.320><c> optimize</c><00:26:07.440><c> those</c><00:26:07.860><c> methods</c><00:26:09.770><c> the</c><00:26:10.770><c> second</c>

00:26:11.350 --> 00:26:11.360 align:start position:0%
to optimize those methods the second
 

00:26:11.360 --> 00:26:14.750 align:start position:0%
to optimize those methods the second
data<00:26:12.360><c> that</c><00:26:12.660><c> we</c><00:26:12.750><c> record</c><00:26:13.200><c> are</c><00:26:14.160><c> the</c><00:26:14.220><c> classes</c>

00:26:14.750 --> 00:26:14.760 align:start position:0%
data that we record are the classes
 

00:26:14.760 --> 00:26:17.600 align:start position:0%
data that we record are the classes
which<00:26:14.910><c> impact</c><00:26:15.300><c> the</c><00:26:15.360><c> startup</c><00:26:15.870><c> times</c><00:26:16.340><c> how</c><00:26:17.340><c> do</c><00:26:17.400><c> we</c>

00:26:17.600 --> 00:26:17.610 align:start position:0%
which impact the startup times how do we
 

00:26:17.610 --> 00:26:19.700 align:start position:0%
which impact the startup times how do we
know<00:26:17.760><c> they</c><00:26:17.910><c> do</c><00:26:17.970><c> so</c><00:26:18.270><c> it</c><00:26:19.140><c> means</c><00:26:19.470><c> that</c><00:26:19.620><c> they</c><00:26:19.680><c> are</c>

00:26:19.700 --> 00:26:19.710 align:start position:0%
know they do so it means that they are
 

00:26:19.710 --> 00:26:21.350 align:start position:0%
know they do so it means that they are
loaded<00:26:20.220><c> in</c><00:26:20.340><c> the</c><00:26:20.430><c> first</c><00:26:20.640><c> few</c><00:26:20.790><c> seconds</c><00:26:21.270><c> after</c>

00:26:21.350 --> 00:26:21.360 align:start position:0%
loaded in the first few seconds after
 

00:26:21.360 --> 00:26:23.750 align:start position:0%
loaded in the first few seconds after
the<00:26:21.510><c> user</c><00:26:21.870><c> launch</c><00:26:22.170><c> data</c><00:26:22.470><c> and</c><00:26:23.310><c> my</c><00:26:23.460><c> colleague</c>

00:26:23.750 --> 00:26:23.760 align:start position:0%
the user launch data and my colleague
 

00:26:23.760 --> 00:26:26.210 align:start position:0%
the user launch data and my colleague
Matthew<00:26:24.150><c> will</c><00:26:24.600><c> go</c><00:26:24.780><c> into</c><00:26:24.900><c> more</c><00:26:25.230><c> details</c><00:26:25.650><c> on</c><00:26:25.950><c> how</c>

00:26:26.210 --> 00:26:26.220 align:start position:0%
Matthew will go into more details on how
 

00:26:26.220 --> 00:26:28.190 align:start position:0%
Matthew will go into more details on how
we<00:26:26.280><c> use</c><00:26:26.640><c> that</c><00:26:26.670><c> we</c><00:26:27.060><c> improve</c><00:26:27.360><c> startup</c><00:26:27.900><c> times</c>

00:26:28.190 --> 00:26:28.200 align:start position:0%
we use that we improve startup times
 

00:26:28.200 --> 00:26:31.790 align:start position:0%
we use that we improve startup times
even<00:26:28.680><c> more</c><00:26:28.920><c> a</c><00:26:30.200><c> final</c><00:26:31.200><c> piece</c><00:26:31.410><c> of</c><00:26:31.530><c> information</c>

00:26:31.790 --> 00:26:31.800 align:start position:0%
even more a final piece of information
 

00:26:31.800 --> 00:26:33.920 align:start position:0%
even more a final piece of information
that<00:26:32.130><c> we</c><00:26:32.250><c> record</c><00:26:32.700><c> is</c><00:26:32.910><c> whether</c><00:26:33.390><c> or</c><00:26:33.600><c> not</c><00:26:33.720><c> the</c>

00:26:33.920 --> 00:26:33.930 align:start position:0%
that we record is whether or not the
 

00:26:33.930 --> 00:26:36.050 align:start position:0%
that we record is whether or not the
application<00:26:34.260><c> code</c><00:26:34.620><c> is</c><00:26:34.890><c> loaded</c><00:26:35.460><c> in</c><00:26:35.580><c> some</c><00:26:35.610><c> other</c>

00:26:36.050 --> 00:26:36.060 align:start position:0%
application code is loaded in some other
 

00:26:36.060 --> 00:26:37.370 align:start position:0%
application code is loaded in some other
apps

00:26:37.370 --> 00:26:37.380 align:start position:0%
apps
 

00:26:37.380 --> 00:26:38.720 align:start position:0%
apps
and<00:26:37.470><c> that's</c><00:26:37.740><c> very</c><00:26:37.830><c> important</c><00:26:38.460><c> to</c><00:26:38.580><c> know</c>

00:26:38.720 --> 00:26:38.730 align:start position:0%
and that's very important to know
 

00:26:38.730 --> 00:26:40.280 align:start position:0%
and that's very important to know
because<00:26:38.940><c> it</c><00:26:39.180><c> means</c><00:26:39.450><c> that</c><00:26:39.570><c> the</c><00:26:39.750><c> application</c>

00:26:40.280 --> 00:26:40.290 align:start position:0%
because it means that the application
 

00:26:40.290 --> 00:26:42.820 align:start position:0%
because it means that the application
behaves<00:26:40.710><c> more</c><00:26:41.040><c> like</c><00:26:41.310><c> a</c><00:26:41.340><c> shared</c><00:26:41.700><c> library</c><00:26:41.970><c> and</c>

00:26:42.820 --> 00:26:42.830 align:start position:0%
behaves more like a shared library and
 

00:26:42.830 --> 00:26:45.530 align:start position:0%
behaves more like a shared library and
when<00:26:43.830><c> it</c><00:26:44.070><c> does</c><00:26:44.280><c> so</c><00:26:44.520><c> we'll</c><00:26:44.970><c> use</c><00:26:45.120><c> a</c><00:26:45.150><c> different</c>

00:26:45.530 --> 00:26:45.540 align:start position:0%
when it does so we'll use a different
 

00:26:45.540 --> 00:26:50.660 align:start position:0%
when it does so we'll use a different
completion<00:26:46.080><c> strategy</c><00:26:46.620><c> to</c><00:26:46.950><c> optimize</c><00:26:47.370><c> it</c><00:26:49.670><c> so</c>

00:26:50.660 --> 00:26:50.670 align:start position:0%
completion strategy to optimize it so
 

00:26:50.670 --> 00:26:53.600 align:start position:0%
completion strategy to optimize it so
let's<00:26:50.850><c> focus</c><00:26:51.030><c> now</c><00:26:51.240><c> on</c><00:26:51.630><c> the</c><00:26:52.610><c> compilation</c>

00:26:53.600 --> 00:26:53.610 align:start position:0%
let's focus now on the compilation
 

00:26:53.610 --> 00:26:55.970 align:start position:0%
let's focus now on the compilation
daemon<00:26:54.270><c> on</c><00:26:54.630><c> the</c><00:26:54.840><c> service</c><00:26:55.260><c> that</c><00:26:55.380><c> actually</c><00:26:55.530><c> does</c>

00:26:55.970 --> 00:26:55.980 align:start position:0%
daemon on the service that actually does
 

00:26:55.980 --> 00:26:58.550 align:start position:0%
daemon on the service that actually does
the<00:26:56.190><c> compilation</c><00:26:56.490><c> and</c><00:26:56.940><c> let's</c><00:26:57.090><c> take</c><00:26:57.210><c> a</c><00:26:57.270><c> look</c><00:26:57.560><c> on</c>

00:26:58.550 --> 00:26:58.560 align:start position:0%
the compilation and let's take a look on
 

00:26:58.560 --> 00:27:01.520 align:start position:0%
the compilation and let's take a look on
what<00:26:58.620><c> decision</c><00:26:58.950><c> makes</c><00:26:59.840><c> this</c><00:27:00.840><c> is</c><00:27:00.990><c> a</c><00:27:01.020><c> service</c>

00:27:01.520 --> 00:27:01.530 align:start position:0%
what decision makes this is a service
 

00:27:01.530 --> 00:27:03.260 align:start position:0%
what decision makes this is a service
which<00:27:01.680><c> is</c><00:27:01.860><c> started</c><00:27:02.250><c> at</c><00:27:02.370><c> boot</c><00:27:02.610><c> time</c><00:27:02.640><c> by</c><00:27:03.210><c> the</c>

00:27:03.260 --> 00:27:03.270 align:start position:0%
which is started at boot time by the
 

00:27:03.270 --> 00:27:06.050 align:start position:0%
which is started at boot time by the
system<00:27:03.840><c> and</c><00:27:04.050><c> is</c><00:27:04.470><c> scheduled</c><00:27:04.890><c> for</c><00:27:04.920><c> daily</c><00:27:05.460><c> daily</c>

00:27:06.050 --> 00:27:06.060 align:start position:0%
system and is scheduled for daily daily
 

00:27:06.060 --> 00:27:09.080 align:start position:0%
system and is scheduled for daily daily
run<00:27:06.330><c> its</c><00:27:07.320><c> main</c><00:27:07.620><c> job</c><00:27:07.650><c> is</c><00:27:08.130><c> to</c><00:27:08.220><c> iterate</c><00:27:08.580><c> to</c><00:27:08.910><c> all</c>

00:27:09.080 --> 00:27:09.090 align:start position:0%
run its main job is to iterate to all
 

00:27:09.090 --> 00:27:11.000 align:start position:0%
run its main job is to iterate to all
the<00:27:09.330><c> apks</c><00:27:09.720><c> install</c><00:27:10.140><c> in</c><00:27:10.260><c> the</c><00:27:10.350><c> system</c><00:27:10.770><c> and</c>

00:27:11.000 --> 00:27:11.010 align:start position:0%
the apks install in the system and
 

00:27:11.010 --> 00:27:13.430 align:start position:0%
the apks install in the system and
figure<00:27:11.940><c> out</c><00:27:12.090><c> whether</c><00:27:12.510><c> or</c><00:27:12.660><c> not</c><00:27:12.810><c> we</c><00:27:13.170><c> need</c><00:27:13.200><c> to</c>

00:27:13.430 --> 00:27:13.440 align:start position:0%
figure out whether or not we need to
 

00:27:13.440 --> 00:27:15.260 align:start position:0%
figure out whether or not we need to
compile<00:27:13.800><c> them</c><00:27:14.100><c> and</c><00:27:14.340><c> if</c><00:27:14.670><c> we</c><00:27:14.850><c> do</c><00:27:15.030><c> need</c><00:27:15.150><c> to</c>

00:27:15.260 --> 00:27:15.270 align:start position:0%
compile them and if we do need to
 

00:27:15.270 --> 00:27:17.030 align:start position:0%
compile them and if we do need to
compile<00:27:15.630><c> them</c><00:27:15.870><c> what</c><00:27:16.110><c> sort</c><00:27:16.380><c> of</c><00:27:16.470><c> strategy</c><00:27:16.950><c> we</c>

00:27:17.030 --> 00:27:17.040 align:start position:0%
compile them what sort of strategy we
 

00:27:17.040 --> 00:27:21.020 align:start position:0%
compile them what sort of strategy we
should<00:27:17.250><c> use</c><00:27:18.770><c> the</c><00:27:19.770><c> service</c><00:27:20.130><c> wakes</c><00:27:20.430><c> up</c><00:27:20.700><c> when</c><00:27:20.910><c> the</c>

00:27:21.020 --> 00:27:21.030 align:start position:0%
should use the service wakes up when the
 

00:27:21.030 --> 00:27:22.880 align:start position:0%
should use the service wakes up when the
device<00:27:21.300><c> becomes</c><00:27:21.480><c> idle</c><00:27:21.930><c> in</c><00:27:22.170><c> charging</c><00:27:22.620><c> and</c><00:27:22.800><c> the</c>

00:27:22.880 --> 00:27:22.890 align:start position:0%
device becomes idle in charging and the
 

00:27:22.890 --> 00:27:25.100 align:start position:0%
device becomes idle in charging and the
main<00:27:23.070><c> reason</c><00:27:23.100><c> for</c><00:27:23.520><c> that</c><00:27:23.730><c> is</c><00:27:24.060><c> that</c><00:27:24.360><c> we</c><00:27:24.900><c> don't</c>

00:27:25.100 --> 00:27:25.110 align:start position:0%
main reason for that is that we don't
 

00:27:25.110 --> 00:27:29.390 align:start position:0%
main reason for that is that we don't
want<00:27:25.350><c> to</c><00:27:26.600><c> use</c><00:27:27.600><c> user</c><00:27:27.960><c> time</c><00:27:28.290><c> when</c><00:27:28.800><c> the</c><00:27:28.980><c> device</c><00:27:29.250><c> is</c>

00:27:29.390 --> 00:27:29.400 align:start position:0%
want to use user time when the device is
 

00:27:29.400 --> 00:27:30.710 align:start position:0%
want to use user time when the device is
active<00:27:29.850><c> and</c><00:27:30.060><c> we</c><00:27:30.120><c> don't</c><00:27:30.300><c> want</c><00:27:30.480><c> to</c><00:27:30.570><c> waste</c>

00:27:30.710 --> 00:27:30.720 align:start position:0%
active and we don't want to waste
 

00:27:30.720 --> 00:27:33.170 align:start position:0%
active and we don't want to waste
battery<00:27:31.170><c> time</c><00:27:31.410><c> so</c><00:27:32.160><c> it</c><00:27:32.310><c> delayed</c><00:27:32.580><c> this</c><00:27:32.790><c> until</c>

00:27:33.170 --> 00:27:33.180 align:start position:0%
battery time so it delayed this until
 

00:27:33.180 --> 00:27:35.180 align:start position:0%
battery time so it delayed this until
the<00:27:33.900><c> user</c><00:27:34.050><c> the</c><00:27:34.380><c> device</c><00:27:34.620><c> is</c><00:27:34.770><c> not</c><00:27:34.890><c> in</c><00:27:35.010><c> used</c>

00:27:35.180 --> 00:27:35.190 align:start position:0%
the user the device is not in used
 

00:27:35.190 --> 00:27:38.330 align:start position:0%
the user the device is not in used
anymore<00:27:35.900><c> when</c><00:27:36.900><c> the</c><00:27:37.050><c> daemon</c><00:27:37.350><c> wakes</c><00:27:37.560><c> up</c><00:27:37.800><c> what</c><00:27:38.190><c> it</c>

00:27:38.330 --> 00:27:38.340 align:start position:0%
anymore when the daemon wakes up what it
 

00:27:38.340 --> 00:27:40.010 align:start position:0%
anymore when the daemon wakes up what it
does<00:27:38.490><c> it</c><00:27:38.820><c> iterates</c><00:27:39.180><c> with</c><00:27:39.360><c> the</c><00:27:39.450><c> applications</c>

00:27:40.010 --> 00:27:40.020 align:start position:0%
does it iterates with the applications
 

00:27:40.020 --> 00:27:41.750 align:start position:0%
does it iterates with the applications
and<00:27:40.200><c> the</c><00:27:40.260><c> first</c><00:27:40.560><c> questions</c><00:27:40.980><c> it</c><00:27:41.130><c> asks</c><00:27:41.340><c> is</c>

00:27:41.750 --> 00:27:41.760 align:start position:0%
and the first questions it asks is
 

00:27:41.760 --> 00:27:43.910 align:start position:0%
and the first questions it asks is
whether<00:27:42.540><c> or</c><00:27:42.780><c> not</c><00:27:42.840><c> the</c><00:27:42.990><c> application</c><00:27:43.350><c> code</c><00:27:43.710><c> has</c>

00:27:43.910 --> 00:27:43.920 align:start position:0%
whether or not the application code has
 

00:27:43.920 --> 00:27:45.770 align:start position:0%
whether or not the application code has
been<00:27:43.950><c> used</c><00:27:44.310><c> by</c><00:27:44.460><c> some</c><00:27:44.640><c> other</c><00:27:44.820><c> apps</c><00:27:45.060><c> that</c><00:27:45.360><c> data</c>

00:27:45.770 --> 00:27:45.780 align:start position:0%
been used by some other apps that data
 

00:27:45.780 --> 00:27:47.330 align:start position:0%
been used by some other apps that data
that<00:27:46.020><c> I</c><00:27:46.140><c> was</c><00:27:46.290><c> telling</c><00:27:46.590><c> you</c><00:27:46.680><c> that</c><00:27:46.710><c> we</c><00:27:46.860><c> report</c><00:27:47.250><c> in</c>

00:27:47.330 --> 00:27:47.340 align:start position:0%
that I was telling you that we report in
 

00:27:47.340 --> 00:27:49.880 align:start position:0%
that I was telling you that we report in
the<00:27:47.430><c> profile</c><00:27:47.820><c> if</c><00:27:48.720><c> that's</c><00:27:49.290><c> the</c><00:27:49.410><c> case</c><00:27:49.590><c> then</c><00:27:49.770><c> we</c>

00:27:49.880 --> 00:27:49.890 align:start position:0%
the profile if that's the case then we
 

00:27:49.890 --> 00:27:51.680 align:start position:0%
the profile if that's the case then we
perform<00:27:50.040><c> a</c><00:27:50.340><c> full</c><00:27:50.580><c> compilation</c><00:27:51.180><c> to</c><00:27:51.330><c> make</c><00:27:51.480><c> sure</c>

00:27:51.680 --> 00:27:51.690 align:start position:0%
perform a full compilation to make sure
 

00:27:51.690 --> 00:27:53.390 align:start position:0%
perform a full compilation to make sure
that<00:27:51.840><c> all</c><00:27:52.050><c> the</c><00:27:52.260><c> users</c><00:27:52.440><c> benefit</c><00:27:53.130><c> of</c><00:27:53.280><c> the</c>

00:27:53.390 --> 00:27:53.400 align:start position:0%
that all the users benefit of the
 

00:27:53.400 --> 00:27:57.080 align:start position:0%
that all the users benefit of the
optimized<00:27:53.970><c> code</c><00:27:54.710><c> if</c><00:27:55.710><c> it's</c><00:27:56.070><c> not</c><00:27:56.280><c> and</c><00:27:56.520><c> this</c><00:27:57.030><c> is</c>

00:27:57.080 --> 00:27:57.090 align:start position:0%
optimized code if it's not and this is
 

00:27:57.090 --> 00:27:58.970 align:start position:0%
optimized code if it's not and this is
the<00:27:57.330><c> case</c><00:27:57.570><c> probably</c><00:27:58.110><c> for</c><00:27:58.320><c> the</c><00:27:58.440><c> largest</c>

00:27:58.970 --> 00:27:58.980 align:start position:0%
the case probably for the largest
 

00:27:58.980 --> 00:28:00.920 align:start position:0%
the case probably for the largest
percentage<00:27:59.520><c> of</c><00:27:59.610><c> the</c><00:27:59.760><c> apps</c><00:27:59.910><c> it's</c><00:28:00.510><c> a</c><00:28:00.600><c> regular</c>

00:28:00.920 --> 00:28:00.930 align:start position:0%
percentage of the apps it's a regular
 

00:28:00.930 --> 00:28:02.480 align:start position:0%
percentage of the apps it's a regular
app<00:28:01.110><c> you</c><00:28:01.320><c> don't</c><00:28:01.500><c> get</c><00:28:01.620><c> used</c><00:28:01.950><c> by</c><00:28:02.130><c> some</c><00:28:02.340><c> other</c>

00:28:02.480 --> 00:28:02.490 align:start position:0%
app you don't get used by some other
 

00:28:02.490 --> 00:28:05.570 align:start position:0%
app you don't get used by some other
apps<00:28:02.900><c> we</c><00:28:03.900><c> go</c><00:28:04.110><c> into</c><00:28:04.290><c> and</c><00:28:04.620><c> perform</c><00:28:05.040><c> a</c><00:28:05.310><c> much</c>

00:28:05.570 --> 00:28:05.580 align:start position:0%
apps we go into and perform a much
 

00:28:05.580 --> 00:28:07.100 align:start position:0%
apps we go into and perform a much
deeper<00:28:05.850><c> analysis</c><00:28:06.510><c> on</c><00:28:06.630><c> the</c><00:28:06.720><c> profile</c>

00:28:07.100 --> 00:28:07.110 align:start position:0%
deeper analysis on the profile
 

00:28:07.110 --> 00:28:10.160 align:start position:0%
deeper analysis on the profile
information<00:28:08.060><c> if</c><00:28:09.060><c> we</c><00:28:09.120><c> have</c><00:28:09.360><c> enough</c><00:28:09.660><c> new</c><00:28:09.900><c> data</c>

00:28:10.160 --> 00:28:10.170 align:start position:0%
information if we have enough new data
 

00:28:10.170 --> 00:28:12.230 align:start position:0%
information if we have enough new data
if<00:28:10.620><c> we</c><00:28:10.920><c> collected</c><00:28:11.280><c> enough</c><00:28:11.490><c> information</c><00:28:11.820><c> about</c>

00:28:12.230 --> 00:28:12.240 align:start position:0%
if we collected enough information about
 

00:28:12.240 --> 00:28:14.900 align:start position:0%
if we collected enough information about
the<00:28:12.480><c> application</c><00:28:13.160><c> then</c><00:28:14.160><c> we'll</c><00:28:14.340><c> profile</c><00:28:14.880><c> a</c>

00:28:14.900 --> 00:28:14.910 align:start position:0%
the application then we'll profile a
 

00:28:14.910 --> 00:28:17.090 align:start position:0%
the application then we'll profile a
guide<00:28:15.240><c> compile</c><00:28:15.780><c> that</c><00:28:15.810><c> application</c><00:28:16.680><c> we'll</c>

00:28:17.090 --> 00:28:17.100 align:start position:0%
guide compile that application we'll
 

00:28:17.100 --> 00:28:18.530 align:start position:0%
guide compile that application we'll
take<00:28:17.310><c> a</c><00:28:17.340><c> look</c><00:28:17.580><c> at</c><00:28:17.670><c> the</c><00:28:17.760><c> profiles</c><00:28:18.180><c> and</c><00:28:18.420><c> you</c>

00:28:18.530 --> 00:28:18.540 align:start position:0%
take a look at the profiles and you
 

00:28:18.540 --> 00:28:20.390 align:start position:0%
take a look at the profiles and you
optimize<00:28:19.140><c> only</c><00:28:19.620><c> the</c><00:28:19.770><c> methods</c><00:28:20.160><c> that</c><00:28:20.190><c> were</c>

00:28:20.390 --> 00:28:20.400 align:start position:0%
optimize only the methods that were
 

00:28:20.400 --> 00:28:22.490 align:start position:0%
optimize only the methods that were
executed<00:28:21.060><c> so</c><00:28:21.510><c> that</c><00:28:21.630><c> we</c><00:28:21.750><c> focus</c><00:28:22.140><c> on</c><00:28:22.260><c> what</c>

00:28:22.490 --> 00:28:22.500 align:start position:0%
executed so that we focus on what
 

00:28:22.500 --> 00:28:24.260 align:start position:0%
executed so that we focus on what
actually<00:28:22.920><c> the</c><00:28:23.070><c> user</c><00:28:23.310><c> used</c><00:28:23.670><c> from</c><00:28:24.240><c> that</c>

00:28:24.260 --> 00:28:24.270 align:start position:0%
actually the user used from that
 

00:28:24.270 --> 00:28:27.410 align:start position:0%
actually the user used from that
application<00:28:24.990><c> if</c><00:28:25.680><c> by</c><00:28:26.520><c> any</c><00:28:26.730><c> chance</c><00:28:26.880><c> we</c><00:28:27.180><c> don't</c>

00:28:27.410 --> 00:28:27.420 align:start position:0%
application if by any chance we don't
 

00:28:27.420 --> 00:28:28.850 align:start position:0%
application if by any chance we don't
have<00:28:27.540><c> enough</c><00:28:27.810><c> information</c><00:28:28.080><c> let's</c><00:28:28.620><c> say</c><00:28:28.710><c> you</c>

00:28:28.850 --> 00:28:28.860 align:start position:0%
have enough information let's say you
 

00:28:28.860 --> 00:28:31.730 align:start position:0%
have enough information let's say you
only<00:28:29.040><c> know</c><00:28:29.660><c> data</c><00:28:30.660><c> we</c><00:28:30.930><c> only</c><00:28:31.050><c> have</c><00:28:31.290><c> data</c><00:28:31.470><c> about</c>

00:28:31.730 --> 00:28:31.740 align:start position:0%
only know data we only have data about
 

00:28:31.740 --> 00:28:33.710 align:start position:0%
only know data we only have data about
one<00:28:31.920><c> single</c><00:28:32.160><c> method</c><00:28:32.580><c> from</c><00:28:32.760><c> the</c><00:28:32.850><c> top</c><00:28:33.030><c> then</c>

00:28:33.710 --> 00:28:33.720 align:start position:0%
one single method from the top then
 

00:28:33.720 --> 00:28:35.060 align:start position:0%
one single method from the top then
we'll<00:28:33.840><c> just</c><00:28:34.050><c> keep</c><00:28:34.200><c> it</c><00:28:34.350><c> because</c><00:28:34.500><c> probably</c><00:28:34.830><c> is</c>

00:28:35.060 --> 00:28:35.070 align:start position:0%
we'll just keep it because probably is
 

00:28:35.070 --> 00:28:38.270 align:start position:0%
we'll just keep it because probably is
not<00:28:35.220><c> worth</c><00:28:35.490><c> optimizing</c><00:28:36.210><c> and</c><00:28:36.770><c> an</c><00:28:37.770><c> important</c>

00:28:38.270 --> 00:28:38.280 align:start position:0%
not worth optimizing and an important
 

00:28:38.280 --> 00:28:40.910 align:start position:0%
not worth optimizing and an important
thing<00:28:38.460><c> here</c><00:28:38.790><c> is</c><00:28:38.940><c> that</c><00:28:39.540><c> we</c><00:28:40.050><c> do</c><00:28:40.230><c> perform</c><00:28:40.770><c> the</c>

00:28:40.910 --> 00:28:40.920 align:start position:0%
thing here is that we do perform the
 

00:28:40.920 --> 00:28:43.160 align:start position:0%
thing here is that we do perform the
profile<00:28:41.280><c> analysis</c><00:28:41.850><c> every</c><00:28:42.300><c> time</c><00:28:42.540><c> that</c><00:28:42.870><c> we</c><00:28:42.990><c> run</c>

00:28:43.160 --> 00:28:43.170 align:start position:0%
profile analysis every time that we run
 

00:28:43.170 --> 00:28:45.440 align:start position:0%
profile analysis every time that we run
the<00:28:43.350><c> demo</c><00:28:43.530><c> and</c><00:28:43.920><c> that</c><00:28:44.220><c> what</c><00:28:44.400><c> it</c><00:28:44.550><c> means</c><00:28:44.580><c> that</c><00:28:45.360><c> we</c>

00:28:45.440 --> 00:28:45.450 align:start position:0%
the demo and that what it means that we
 

00:28:45.450 --> 00:28:47.690 align:start position:0%
the demo and that what it means that we
might<00:28:45.630><c> end</c><00:28:45.780><c> up</c><00:28:46.020><c> recompile</c><00:28:46.680><c> the</c><00:28:46.920><c> app</c><00:28:47.040><c> again</c><00:28:47.460><c> and</c>

00:28:47.690 --> 00:28:47.700 align:start position:0%
might end up recompile the app again and
 

00:28:47.700 --> 00:28:48.280 align:start position:0%
might end up recompile the app again and
again

00:28:48.280 --> 00:28:48.290 align:start position:0%
again
 

00:28:48.290 --> 00:28:50.470 align:start position:0%
again
we<00:28:48.560><c> no</c><00:28:49.100><c> longer</c><00:28:49.130><c> have</c><00:28:49.550><c> any</c><00:28:49.730><c> new</c><00:28:49.910><c> information</c>

00:28:50.470 --> 00:28:50.480 align:start position:0%
we no longer have any new information
 

00:28:50.480 --> 00:28:53.290 align:start position:0%
we no longer have any new information
about<00:28:50.600><c> it</c><00:28:51.370><c> and</c><00:28:52.370><c> here</c><00:28:52.670><c> you</c><00:28:52.760><c> can</c><00:28:52.910><c> see</c><00:28:53.150><c> that</c>

00:28:53.290 --> 00:28:53.300 align:start position:0%
about it and here you can see that
 

00:28:53.300 --> 00:28:54.760 align:start position:0%
about it and here you can see that
actually<00:28:53.450><c> I</c><00:28:53.690><c> was</c><00:28:53.840><c> talking</c><00:28:54.170><c> about</c><00:28:54.260><c> different</c>

00:28:54.760 --> 00:28:54.770 align:start position:0%
actually I was talking about different
 

00:28:54.770 --> 00:28:56.560 align:start position:0%
actually I was talking about different
use<00:28:54.950><c> cases</c><00:28:55.220><c> and</c><00:28:55.580><c> how</c><00:28:56.120><c> we</c><00:28:56.180><c> apply</c><00:28:56.480><c> different</c>

00:28:56.560 --> 00:28:56.570 align:start position:0%
use cases and how we apply different
 

00:28:56.570 --> 00:28:59.650 align:start position:0%
use cases and how we apply different
completion<00:28:57.560><c> strategies</c><00:28:58.100><c> shared</c><00:28:59.060><c> up</c><00:28:59.270><c> shared</c>

00:28:59.650 --> 00:28:59.660 align:start position:0%
completion strategies shared up shared
 

00:28:59.660 --> 00:29:01.510 align:start position:0%
completion strategies shared up shared
libraries<00:29:00.080><c> get</c><00:29:00.200><c> a</c><00:29:00.260><c> full</c><00:29:00.470><c> compilation</c><00:29:01.130><c> whereas</c>

00:29:01.510 --> 00:29:01.520 align:start position:0%
libraries get a full compilation whereas
 

00:29:01.520 --> 00:29:04.000 align:start position:0%
libraries get a full compilation whereas
the<00:29:01.670><c> regular</c><00:29:01.790><c> apps</c><00:29:02.360><c> prefer</c><00:29:03.050><c> a</c><00:29:03.080><c> profile</c><00:29:03.590><c> guided</c>

00:29:04.000 --> 00:29:04.010 align:start position:0%
the regular apps prefer a profile guided
 

00:29:04.010 --> 00:29:07.570 align:start position:0%
the regular apps prefer a profile guided
compilation<00:29:04.610><c> in</c><00:29:05.360><c> em</c><00:29:05.660><c> we</c><00:29:06.500><c> generalized</c><00:29:07.160><c> on</c><00:29:07.370><c> that</c>

00:29:07.570 --> 00:29:07.580 align:start position:0%
compilation in em we generalized on that
 

00:29:07.580 --> 00:29:09.850 align:start position:0%
compilation in em we generalized on that
and<00:29:07.820><c> different</c><00:29:08.480><c> use</c><00:29:08.990><c> cases</c><00:29:09.260><c> from</c><00:29:09.500><c> the</c><00:29:09.680><c> life</c>

00:29:09.850 --> 00:29:09.860 align:start position:0%
and different use cases from the life
 

00:29:09.860 --> 00:29:12.280 align:start position:0%
and different use cases from the life
cycle<00:29:10.220><c> of</c><00:29:10.280><c> the</c><00:29:10.430><c> application</c><00:29:10.810><c> have</c><00:29:11.810><c> different</c>

00:29:12.280 --> 00:29:12.290 align:start position:0%
cycle of the application have different
 

00:29:12.290 --> 00:29:15.040 align:start position:0%
cycle of the application have different
compilation<00:29:12.800><c> strategies</c><00:29:13.570><c> for</c><00:29:14.570><c> example</c><00:29:14.990><c> it</c>

00:29:15.040 --> 00:29:15.050 align:start position:0%
compilation strategies for example it
 

00:29:15.050 --> 00:29:17.050 align:start position:0%
compilation strategies for example it
install<00:29:15.470><c> time</c><00:29:15.770><c> we</c><00:29:16.250><c> don't</c><00:29:16.490><c> have</c><00:29:16.640><c> profile</c>

00:29:17.050 --> 00:29:17.060 align:start position:0%
install time we don't have profile
 

00:29:17.060 --> 00:29:18.940 align:start position:0%
install time we don't have profile
information<00:29:17.300><c> yet</c><00:29:18.200><c> we</c><00:29:18.320><c> still</c><00:29:18.560><c> want</c><00:29:18.800><c> the</c>

00:29:18.940 --> 00:29:18.950 align:start position:0%
information yet we still want the
 

00:29:18.950 --> 00:29:21.010 align:start position:0%
information yet we still want the
application<00:29:19.070><c> to</c><00:29:19.490><c> start</c><00:29:19.730><c> as</c><00:29:20.090><c> fast</c><00:29:20.330><c> as</c><00:29:20.510><c> possible</c>

00:29:21.010 --> 00:29:21.020 align:start position:0%
application to start as fast as possible
 

00:29:21.020 --> 00:29:23.470 align:start position:0%
application to start as fast as possible
and<00:29:21.230><c> as</c><00:29:21.770><c> my</c><00:29:21.920><c> colleague</c><00:29:22.220><c> Nicola</c><00:29:22.520><c> mentioned</c><00:29:22.940><c> we</c>

00:29:23.470 --> 00:29:23.480 align:start position:0%
and as my colleague Nicola mentioned we
 

00:29:23.480 --> 00:29:25.180 align:start position:0%
and as my colleague Nicola mentioned we
have<00:29:23.630><c> a</c><00:29:23.660><c> strategy</c><00:29:23.990><c> where</c><00:29:24.410><c> we</c><00:29:24.440><c> extract</c><00:29:25.010><c> and</c>

00:29:25.180 --> 00:29:25.190 align:start position:0%
have a strategy where we extract and
 

00:29:25.190 --> 00:29:28.030 align:start position:0%
have a strategy where we extract and
verify<00:29:25.700><c> that</c><00:29:25.880><c> app</c><00:29:26.120><c> with</c><00:29:27.080><c> minimal</c><00:29:27.620><c> running</c>

00:29:28.030 --> 00:29:28.040 align:start position:0%
verify that app with minimal running
 

00:29:28.040 --> 00:29:30.100 align:start position:0%
verify that app with minimal running
time<00:29:28.280><c> and</c><00:29:28.580><c> which</c><00:29:29.390><c> will</c><00:29:29.570><c> ensure</c><00:29:29.900><c> that</c><00:29:29.930><c> the</c>

00:29:30.100 --> 00:29:30.110 align:start position:0%
time and which will ensure that the
 

00:29:30.110 --> 00:29:32.020 align:start position:0%
time and which will ensure that the
application<00:29:30.380><c> starts</c><00:29:30.890><c> fast</c><00:29:31.100><c> when</c><00:29:31.760><c> you</c><00:29:31.880><c> update</c>

00:29:32.020 --> 00:29:32.030 align:start position:0%
application starts fast when you update
 

00:29:32.030 --> 00:29:34.750 align:start position:0%
application starts fast when you update
the<00:29:32.300><c> app</c><00:29:32.500><c> we</c><00:29:33.500><c> had</c><00:29:33.650><c> the</c><00:29:33.770><c> same</c><00:29:33.950><c> story</c><00:29:34.250><c> we</c><00:29:34.610><c> no</c>

00:29:34.750 --> 00:29:34.760 align:start position:0%
the app we had the same story we no
 

00:29:34.760 --> 00:29:36.520 align:start position:0%
the app we had the same story we no
longer<00:29:34.790><c> have</c><00:29:35.360><c> a</c><00:29:35.390><c> profile</c><00:29:35.930><c> because</c><00:29:36.320><c> what</c><00:29:36.500><c> I</c>

00:29:36.520 --> 00:29:36.530 align:start position:0%
longer have a profile because what I
 

00:29:36.530 --> 00:29:38.260 align:start position:0%
longer have a profile because what I
reported<00:29:37.010><c> before</c><00:29:37.160><c> was</c><00:29:37.520><c> invalid</c>

00:29:38.260 --> 00:29:38.270 align:start position:0%
reported before was invalid
 

00:29:38.270 --> 00:29:41.310 align:start position:0%
reported before was invalid
so<00:29:38.690><c> we</c><00:29:38.840><c> repeat</c><00:29:39.260><c> this</c><00:29:39.410><c> verification</c><00:29:39.950><c> procedure</c>

00:29:41.310 --> 00:29:41.320 align:start position:0%
so we repeat this verification procedure
 

00:29:41.320 --> 00:29:43.630 align:start position:0%
so we repeat this verification procedure
when<00:29:42.320><c> the</c><00:29:42.410><c> completion</c><00:29:42.920><c> daemon</c><00:29:43.190><c> kicks</c><00:29:43.400><c> in</c>

00:29:43.630 --> 00:29:43.640 align:start position:0%
when the completion daemon kicks in
 

00:29:43.640 --> 00:29:46.200 align:start position:0%
when the completion daemon kicks in
we'll<00:29:44.480><c> do</c><00:29:44.690><c> a</c><00:29:44.720><c> profile</c><00:29:45.170><c> guided</c><00:29:45.560><c> compilation</c>

00:29:46.200 --> 00:29:46.210 align:start position:0%
we'll do a profile guided compilation
 

00:29:46.210 --> 00:29:49.150 align:start position:0%
we'll do a profile guided compilation
where<00:29:47.210><c> possible</c><00:29:47.720><c> therefore</c><00:29:48.170><c> and</c><00:29:48.590><c> for</c><00:29:48.800><c> system</c>

00:29:49.150 --> 00:29:49.160 align:start position:0%
where possible therefore and for system
 

00:29:49.160 --> 00:29:50.680 align:start position:0%
where possible therefore and for system
and<00:29:49.310><c> shared</c><00:29:49.520><c> libraries</c><00:29:49.940><c> we're</c><00:29:50.300><c> going</c><00:29:50.480><c> to</c><00:29:50.540><c> do</c><00:29:50.660><c> a</c>

00:29:50.680 --> 00:29:50.690 align:start position:0%
and shared libraries we're going to do a
 

00:29:50.690 --> 00:29:52.480 align:start position:0%
and shared libraries we're going to do a
full<00:29:50.990><c> compilation</c><00:29:51.680><c> so</c><00:29:51.860><c> that</c><00:29:52.010><c> we</c><00:29:52.100><c> make</c><00:29:52.280><c> sure</c>

00:29:52.480 --> 00:29:52.490 align:start position:0%
full compilation so that we make sure
 

00:29:52.490 --> 00:29:54.640 align:start position:0%
full compilation so that we make sure
that<00:29:52.610><c> all</c><00:29:52.850><c> their</c><00:29:53.090><c> users</c><00:29:53.360><c> are</c><00:29:53.780><c> properly</c>

00:29:54.640 --> 00:29:54.650 align:start position:0%
that all their users are properly
 

00:29:54.650 --> 00:29:59.110 align:start position:0%
that all their users are properly
optimized<00:29:57.040><c> with</c><00:29:58.040><c> that</c><00:29:58.250><c> in</c><00:29:58.370><c> mind</c><00:29:58.550><c> let's</c><00:29:58.910><c> take</c><00:29:59.090><c> a</c>

00:29:59.110 --> 00:29:59.120 align:start position:0%
optimized with that in mind let's take a
 

00:29:59.120 --> 00:30:01.930 align:start position:0%
optimized with that in mind let's take a
more<00:29:59.480><c> closer</c><00:29:59.840><c> look</c><00:30:00.230><c> on</c><00:30:00.470><c> what</c><00:30:00.890><c> benefits</c><00:30:01.220><c> are</c><00:30:01.670><c> if</c>

00:30:01.930 --> 00:30:01.940 align:start position:0%
more closer look on what benefits are if
 

00:30:01.940 --> 00:30:03.970 align:start position:0%
more closer look on what benefits are if
when<00:30:02.420><c> we</c><00:30:02.510><c> do</c><00:30:02.660><c> profile</c><00:30:03.020><c> guided</c><00:30:03.380><c> compilation</c>

00:30:03.970 --> 00:30:03.980 align:start position:0%
when we do profile guided compilation
 

00:30:03.980 --> 00:30:06.520 align:start position:0%
when we do profile guided compilation
and<00:30:04.190><c> all</c><00:30:04.790><c> the</c><00:30:05.030><c> benefits</c><00:30:05.510><c> shared</c><00:30:06.140><c> the</c><00:30:06.290><c> same</c>

00:30:06.520 --> 00:30:06.530 align:start position:0%
and all the benefits shared the same
 

00:30:06.530 --> 00:30:08.860 align:start position:0%
and all the benefits shared the same
root<00:30:06.800><c> cause</c><00:30:07.010><c> we</c><00:30:07.370><c> only</c><00:30:07.850><c> optimize</c><00:30:08.210><c> what</c><00:30:08.720><c> is</c>

00:30:08.860 --> 00:30:08.870 align:start position:0%
root cause we only optimize what is
 

00:30:08.870 --> 00:30:12.820 align:start position:0%
root cause we only optimize what is
being<00:30:09.080><c> used</c><00:30:09.700><c> and</c><00:30:10.700><c> what</c><00:30:10.910><c> it</c><00:30:11.060><c> means</c><00:30:11.740><c> when</c><00:30:12.740><c> you</c>

00:30:12.820 --> 00:30:12.830 align:start position:0%
being used and what it means when you
 

00:30:12.830 --> 00:30:14.980 align:start position:0%
being used and what it means when you
first<00:30:13.130><c> start</c><00:30:13.430><c> the</c><00:30:13.610><c> app</c><00:30:13.700><c> after</c><00:30:14.570><c> the</c>

00:30:14.980 --> 00:30:14.990 align:start position:0%
first start the app after the
 

00:30:14.990 --> 00:30:16.960 align:start position:0%
first start the app after the
compilation<00:30:15.290><c> happened</c><00:30:15.980><c> previous</c><00:30:16.460><c> hot</c><00:30:16.730><c> code</c>

00:30:16.960 --> 00:30:16.970 align:start position:0%
compilation happened previous hot code
 

00:30:16.970 --> 00:30:19.300 align:start position:0%
compilation happened previous hot code
is<00:30:17.090><c> already</c><00:30:17.240><c> optimized</c><00:30:17.840><c> we</c><00:30:18.620><c> no</c><00:30:18.800><c> longer</c><00:30:18.830><c> have</c>

00:30:19.300 --> 00:30:19.310 align:start position:0%
is already optimized we no longer have
 

00:30:19.310 --> 00:30:21.340 align:start position:0%
is already optimized we no longer have
to<00:30:19.340><c> wait</c><00:30:19.610><c> for</c><00:30:19.970><c> the</c><00:30:20.120><c> JIT</c><00:30:20.360><c> for</c><00:30:20.810><c> the</c><00:30:20.900><c> matters</c><00:30:21.230><c> to</c>

00:30:21.340 --> 00:30:21.350 align:start position:0%
to wait for the JIT for the matters to
 

00:30:21.350 --> 00:30:23.860 align:start position:0%
to wait for the JIT for the matters to
become<00:30:21.650><c> hot</c><00:30:22.250><c> so</c><00:30:22.640><c> the</c><00:30:22.730><c> digit</c><00:30:23.030><c> can</c><00:30:23.150><c> compile</c><00:30:23.540><c> them</c>

00:30:23.860 --> 00:30:23.870 align:start position:0%
become hot so the digit can compile them
 

00:30:23.870 --> 00:30:26.320 align:start position:0%
become hot so the digit can compile them
so<00:30:24.500><c> the</c><00:30:24.650><c> applications</c><00:30:25.190><c> will</c><00:30:25.370><c> start</c><00:30:25.670><c> faster</c>

00:30:26.320 --> 00:30:26.330 align:start position:0%
so the applications will start faster
 

00:30:26.330 --> 00:30:28.600 align:start position:0%
so the applications will start faster
we<00:30:26.870><c> have</c><00:30:27.020><c> also</c><00:30:27.380><c> less</c><00:30:27.560><c> work</c><00:30:27.860><c> for</c><00:30:28.070><c> the</c><00:30:28.190><c> JIT</c><00:30:28.400><c> and</c>

00:30:28.600 --> 00:30:28.610 align:start position:0%
we have also less work for the JIT and
 

00:30:28.610 --> 00:30:31.270 align:start position:0%
we have also less work for the JIT and
that<00:30:29.030><c> means</c><00:30:29.270><c> we</c><00:30:29.420><c> use</c><00:30:29.450><c> less</c><00:30:29.870><c> CPU</c><00:30:30.100><c> and</c><00:30:31.100><c> we</c>

00:30:31.270 --> 00:30:31.280 align:start position:0%
that means we use less CPU and we
 

00:30:31.280 --> 00:30:33.360 align:start position:0%
that means we use less CPU and we
increase<00:30:31.580><c> the</c><00:30:31.730><c> battery</c><00:30:32.090><c> life</c><00:30:32.300><c> overall</c><00:30:32.840><c> and</c>

00:30:33.360 --> 00:30:33.370 align:start position:0%
increase the battery life overall and
 

00:30:33.370 --> 00:30:35.950 align:start position:0%
increase the battery life overall and
because<00:30:34.370><c> we</c><00:30:34.460><c> are</c><00:30:34.490><c> much</c><00:30:34.760><c> more</c><00:30:35.030><c> selective</c><00:30:35.240><c> with</c>

00:30:35.950 --> 00:30:35.960 align:start position:0%
because we are much more selective with
 

00:30:35.960 --> 00:30:39.100 align:start position:0%
because we are much more selective with
what<00:30:36.170><c> we</c><00:30:36.320><c> optimize</c><00:30:37.390><c> we</c><00:30:38.390><c> can</c><00:30:38.540><c> dedicate</c><00:30:38.930><c> and</c>

00:30:39.100 --> 00:30:39.110 align:start position:0%
what we optimize we can dedicate and
 

00:30:39.110 --> 00:30:41.020 align:start position:0%
what we optimize we can dedicate and
spend<00:30:39.350><c> more</c><00:30:39.590><c> time</c><00:30:39.920><c> there</c><00:30:40.190><c> and</c><00:30:40.400><c> apply</c><00:30:40.700><c> more</c>

00:30:41.020 --> 00:30:41.030 align:start position:0%
spend more time there and apply more
 

00:30:41.030 --> 00:30:43.110 align:start position:0%
spend more time there and apply more
optimizations

00:30:43.110 --> 00:30:43.120 align:start position:0%
optimizations
 

00:30:43.120 --> 00:30:46.270 align:start position:0%
optimizations
besides<00:30:44.120><c> that</c><00:30:44.360><c> we</c><00:30:45.260><c> get</c><00:30:45.410><c> a</c><00:30:45.440><c> smaller</c><00:30:45.890><c> size</c><00:30:46.250><c> for</c>

00:30:46.270 --> 00:30:46.280 align:start position:0%
besides that we get a smaller size for
 

00:30:46.280 --> 00:30:48.970 align:start position:0%
besides that we get a smaller size for
the<00:30:46.670><c> compiled</c><00:30:47.150><c> binary</c><00:30:47.360><c> and</c><00:30:47.750><c> that's</c><00:30:48.620><c> a</c><00:30:48.710><c> very</c>

00:30:48.970 --> 00:30:48.980 align:start position:0%
the compiled binary and that's a very
 

00:30:48.980 --> 00:30:51.220 align:start position:0%
the compiled binary and that's a very
important<00:30:49.460><c> thing</c><00:30:49.520><c> because</c><00:30:50.450><c> what</c><00:30:50.810><c> we</c><00:30:50.930><c> do</c><00:30:51.110><c> if</c>

00:30:51.220 --> 00:30:51.230 align:start position:0%
important thing because what we do if
 

00:30:51.230 --> 00:30:53.500 align:start position:0%
important thing because what we do if
this<00:30:51.350><c> binary</c><00:30:51.620><c> map</c><00:30:52.040><c> with</c><00:30:52.220><c> into</c><00:30:52.400><c> memory</c><00:30:52.760><c> smaller</c>

00:30:53.500 --> 00:30:53.510 align:start position:0%
this binary map with into memory smaller
 

00:30:53.510 --> 00:30:55.390 align:start position:0%
this binary map with into memory smaller
size<00:30:53.840><c> translates</c><00:30:54.380><c> to</c><00:30:54.590><c> reduced</c><00:30:54.710><c> memory</c>

00:30:55.390 --> 00:30:55.400 align:start position:0%
size translates to reduced memory
 

00:30:55.400 --> 00:30:58.000 align:start position:0%
size translates to reduced memory
footprint<00:30:56.030><c> and</c><00:30:56.360><c> the</c><00:30:57.050><c> important</c><00:30:57.620><c> difference</c>

00:30:58.000 --> 00:30:58.010 align:start position:0%
footprint and the important difference
 

00:30:58.010 --> 00:31:01.660 align:start position:0%
footprint and the important difference
here<00:30:58.100><c> is</c><00:30:58.490><c> that</c><00:30:58.640><c> for</c><00:30:58.910><c> example</c><00:30:59.770><c> this</c><00:31:00.770><c> memory</c>

00:31:01.660 --> 00:31:01.670 align:start position:0%
here is that for example this memory
 

00:31:01.670 --> 00:31:02.260 align:start position:0%
here is that for example this memory
that<00:31:01.850><c> is</c><00:31:02.030><c> not</c>

00:31:02.260 --> 00:31:02.270 align:start position:0%
that is not
 

00:31:02.270 --> 00:31:05.410 align:start position:0%
that is not
into<00:31:02.590><c> this</c><00:31:03.590><c> binary</c><00:31:04.370><c> that</c><00:31:04.490><c> we</c><00:31:04.610><c> map</c><00:31:04.760><c> into</c><00:31:05.059><c> memory</c>

00:31:05.410 --> 00:31:05.420 align:start position:0%
into this binary that we map into memory
 

00:31:05.420 --> 00:31:08.140 align:start position:0%
into this binary that we map into memory
will<00:31:06.380><c> be</c><00:31:06.410><c> a</c><00:31:06.590><c> clean</c><00:31:06.920><c> memory</c><00:31:07.340><c> compared</c><00:31:07.790><c> dirty</c>

00:31:08.140 --> 00:31:08.150 align:start position:0%
will be a clean memory compared dirty
 

00:31:08.150 --> 00:31:11.500 align:start position:0%
will be a clean memory compared dirty
memory<00:31:08.540><c> digital</c><00:31:09.140><c> generate</c><00:31:09.679><c> we</c><00:31:10.640><c> also</c><00:31:10.820><c> have</c><00:31:11.120><c> to</c>

00:31:11.500 --> 00:31:11.510 align:start position:0%
memory digital generate we also have to
 

00:31:11.510 --> 00:31:13.750 align:start position:0%
memory digital generate we also have to
also<00:31:11.720><c> use</c><00:31:12.020><c> far</c><00:31:12.350><c> less</c><00:31:12.380><c> disk</c><00:31:12.980><c> space</c><00:31:13.160><c> because</c><00:31:13.610><c> the</c>

00:31:13.750 --> 00:31:13.760 align:start position:0%
also use far less disk space because the
 

00:31:13.760 --> 00:31:15.220 align:start position:0%
also use far less disk space because the
binaries<00:31:14.179><c> are</c><00:31:14.330><c> much</c><00:31:14.510><c> smaller</c><00:31:14.720><c> now</c><00:31:14.990><c> and</c><00:31:15.170><c> we</c>

00:31:15.220 --> 00:31:15.230 align:start position:0%
binaries are much smaller now and we
 

00:31:15.230 --> 00:31:18.430 align:start position:0%
binaries are much smaller now and we
free<00:31:15.559><c> a</c><00:31:15.590><c> lot</c><00:31:15.920><c> of</c><00:31:16.040><c> space</c><00:31:16.280><c> for</c><00:31:16.490><c> our</c><00:31:16.640><c> users</c><00:31:17.440><c> how</c>

00:31:18.430 --> 00:31:18.440 align:start position:0%
free a lot of space for our users how
 

00:31:18.440 --> 00:31:21.549 align:start position:0%
free a lot of space for our users how
much<00:31:18.620><c> space</c><00:31:20.050><c> let's</c><00:31:21.050><c> take</c><00:31:21.200><c> a</c><00:31:21.230><c> look</c><00:31:21.410><c> at</c><00:31:21.500><c> the</c>

00:31:21.549 --> 00:31:21.559 align:start position:0%
much space let's take a look at the
 

00:31:21.559 --> 00:31:25.150 align:start position:0%
much space let's take a look at the
numbers<00:31:22.450><c> in</c><00:31:23.450><c> this</c><00:31:24.200><c> chart</c><00:31:24.530><c> we</c><00:31:24.710><c> compare</c>

00:31:25.150 --> 00:31:25.160 align:start position:0%
numbers in this chart we compare
 

00:31:25.160 --> 00:31:27.190 align:start position:0%
numbers in this chart we compare
different<00:31:25.580><c> applications</c><00:31:26.270><c> which</c><00:31:26.540><c> is</c><00:31:26.690><c> google</c>

00:31:27.190 --> 00:31:27.200 align:start position:0%
different applications which is google
 

00:31:27.200 --> 00:31:29.890 align:start position:0%
different applications which is google
plus<00:31:27.440><c> play</c><00:31:28.100><c> music</c><00:31:28.460><c> and</c><00:31:28.580><c> hangouts</c><00:31:29.000><c> and</c><00:31:29.720><c> it</c>

00:31:29.890 --> 00:31:29.900 align:start position:0%
plus play music and hangouts and it
 

00:31:29.900 --> 00:31:32.650 align:start position:0%
plus play music and hangouts and it
tracked<00:31:30.230><c> how</c><00:31:30.500><c> the</c><00:31:30.559><c> generated</c><00:31:31.429><c> binary</c><00:31:32.300><c> for</c><00:31:32.510><c> the</c>

00:31:32.650 --> 00:31:32.660 align:start position:0%
tracked how the generated binary for the
 

00:31:32.660 --> 00:31:35.560 align:start position:0%
tracked how the generated binary for the
compiled<00:31:33.050><c> code</c><00:31:34.360><c> performance</c><00:31:35.360><c> across</c>

00:31:35.560 --> 00:31:35.570 align:start position:0%
compiled code performance across
 

00:31:35.570 --> 00:31:37.680 align:start position:0%
compiled code performance across
marshmallow<00:31:36.350><c> which</c><00:31:36.590><c> is</c><00:31:36.740><c> the</c><00:31:36.860><c> blue</c><00:31:37.010><c> line</c><00:31:37.040><c> and</c>

00:31:37.680 --> 00:31:37.690 align:start position:0%
marshmallow which is the blue line and
 

00:31:37.690 --> 00:31:40.330 align:start position:0%
marshmallow which is the blue line and
preview<00:31:38.690><c> during</c><00:31:39.380><c> the</c><00:31:39.590><c> first</c><00:31:39.860><c> boot</c><00:31:40.100><c> which</c><00:31:40.309><c> is</c>

00:31:40.330 --> 00:31:40.340 align:start position:0%
preview during the first boot which is
 

00:31:40.340 --> 00:31:42.220 align:start position:0%
preview during the first boot which is
equivalent<00:31:40.730><c> of</c><00:31:41.120><c> fresh</c><00:31:41.480><c> install</c><00:31:41.929><c> of</c><00:31:41.960><c> the</c>

00:31:42.220 --> 00:31:42.230 align:start position:0%
equivalent of fresh install of the
 

00:31:42.230 --> 00:31:44.250 align:start position:0%
equivalent of fresh install of the
application<00:31:42.890><c> which</c><00:31:43.130><c> is</c><00:31:43.280><c> the</c><00:31:43.370><c> orange</c><00:31:43.670><c> line</c><00:31:43.940><c> and</c>

00:31:44.250 --> 00:31:44.260 align:start position:0%
application which is the orange line and
 

00:31:44.260 --> 00:31:47.110 align:start position:0%
application which is the orange line and
the<00:31:45.260><c> Green</c><00:31:45.470><c> Line</c><00:31:45.500><c> is</c><00:31:45.920><c> how</c><00:31:46.400><c> much</c><00:31:46.580><c> it</c><00:31:46.760><c> takes</c><00:31:46.940><c> for</c>

00:31:47.110 --> 00:31:47.120 align:start position:0%
the Green Line is how much it takes for
 

00:31:47.120 --> 00:31:50.350 align:start position:0%
the Green Line is how much it takes for
the<00:31:47.390><c> profile</c><00:31:47.750><c> guided</c><00:31:48.170><c> compilation</c><00:31:49.240><c> as</c><00:31:50.240><c> you</c>

00:31:50.350 --> 00:31:50.360 align:start position:0%
the profile guided compilation as you
 

00:31:50.360 --> 00:31:52.870 align:start position:0%
the profile guided compilation as you
can<00:31:50.540><c> see</c><00:31:50.780><c> the</c><00:31:51.440><c> reduction</c><00:31:51.590><c> is</c><00:31:52.040><c> more</c><00:31:52.280><c> than</c><00:31:52.400><c> 50%</c>

00:31:52.870 --> 00:31:52.880 align:start position:0%
can see the reduction is more than 50%
 

00:31:52.880 --> 00:31:58.450 align:start position:0%
can see the reduction is more than 50%
and<00:31:54.520><c> obviously</c><00:31:55.780><c> the</c><00:31:56.780><c> green</c><00:31:57.559><c> line</c><00:31:57.770><c> will</c><00:31:58.040><c> go</c><00:31:58.220><c> up</c>

00:31:58.450 --> 00:31:58.460 align:start position:0%
and obviously the green line will go up
 

00:31:58.460 --> 00:32:01.330 align:start position:0%
and obviously the green line will go up
over<00:31:58.820><c> time</c><00:31:59.210><c> and</c><00:31:59.679><c> our</c><00:32:00.679><c> tests</c><00:32:01.040><c> show</c><00:32:01.160><c> that</c>

00:32:01.330 --> 00:32:01.340 align:start position:0%
over time and our tests show that
 

00:32:01.340 --> 00:32:03.790 align:start position:0%
over time and our tests show that
actually<00:32:01.880><c> stays</c><00:32:02.150><c> around</c><00:32:02.540><c> 50%</c><00:32:02.960><c> most</c><00:32:03.559><c> of</c><00:32:03.710><c> the</c>

00:32:03.790 --> 00:32:03.800 align:start position:0%
actually stays around 50% most of the
 

00:32:03.800 --> 00:32:06.850 align:start position:0%
actually stays around 50% most of the
times<00:32:04.360><c> and</c><00:32:05.360><c> you</c><00:32:05.660><c> may</c><00:32:05.780><c> wonder</c><00:32:05.960><c> how</c><00:32:06.320><c> come</c><00:32:06.530><c> we</c><00:32:06.710><c> get</c>

00:32:06.850 --> 00:32:06.860 align:start position:0%
times and you may wonder how come we get
 

00:32:06.860 --> 00:32:09.090 align:start position:0%
times and you may wonder how come we get
so<00:32:07.100><c> so</c><00:32:07.429><c> great</c><00:32:07.820><c> reduction</c><00:32:08.360><c> in</c><00:32:08.480><c> terms</c><00:32:08.600><c> of</c><00:32:08.809><c> size</c>

00:32:09.090 --> 00:32:09.100 align:start position:0%
so so great reduction in terms of size
 

00:32:09.100 --> 00:32:12.880 align:start position:0%
so so great reduction in terms of size
well<00:32:10.100><c> when</c><00:32:10.250><c> we</c><00:32:10.340><c> analyze</c><00:32:10.790><c> the</c><00:32:10.970><c> profiles</c><00:32:11.890><c> we've</c>

00:32:12.880 --> 00:32:12.890 align:start position:0%
well when we analyze the profiles we've
 

00:32:12.890 --> 00:32:16.270 align:start position:0%
well when we analyze the profiles we've
realized<00:32:13.490><c> that</c><00:32:13.700><c> only</c><00:32:14.090><c> 5</c><00:32:14.390><c> to</c><00:32:14.720><c> around</c><00:32:15.170><c> 5</c><00:32:15.440><c> 4</c><00:32:15.740><c> to</c><00:32:15.890><c> 5%</c>

00:32:16.270 --> 00:32:16.280 align:start position:0%
realized that only 5 to around 5 4 to 5%
 

00:32:16.280 --> 00:32:18.520 align:start position:0%
realized that only 5 to around 5 4 to 5%
of<00:32:16.700><c> the</c><00:32:16.850><c> methods</c><00:32:17.210><c> actually</c><00:32:17.330><c> get</c><00:32:17.660><c> compiled</c><00:32:18.140><c> and</c>

00:32:18.520 --> 00:32:18.530 align:start position:0%
of the methods actually get compiled and
 

00:32:18.530 --> 00:32:21.400 align:start position:0%
of the methods actually get compiled and
as<00:32:19.400><c> you</c><00:32:19.520><c> use</c><00:32:19.640><c> the</c><00:32:19.820><c> app</c><00:32:19.850><c> more</c><00:32:20.290><c> obviously</c><00:32:21.290><c> this</c>

00:32:21.400 --> 00:32:21.410 align:start position:0%
as you use the app more obviously this
 

00:32:21.410 --> 00:32:23.560 align:start position:0%
as you use the app more obviously this
percentage<00:32:21.890><c> will</c><00:32:22.040><c> go</c><00:32:22.160><c> up</c><00:32:22.370><c> will</c><00:32:22.910><c> generate</c><00:32:23.300><c> more</c>

00:32:23.560 --> 00:32:23.570 align:start position:0%
percentage will go up will generate more
 

00:32:23.570 --> 00:32:26.710 align:start position:0%
percentage will go up will generate more
code<00:32:23.920><c> but</c><00:32:24.920><c> as</c><00:32:25.070><c> I</c><00:32:25.160><c> said</c><00:32:25.220><c> in</c><00:32:25.700><c> general</c><00:32:26.210><c> will</c><00:32:26.510><c> stay</c>

00:32:26.710 --> 00:32:26.720 align:start position:0%
code but as I said in general will stay
 

00:32:26.720 --> 00:32:31.450 align:start position:0%
code but as I said in general will stay
below<00:32:27.290><c> 50%</c><00:32:27.830><c> or</c><00:32:28.400><c> around</c><00:32:28.760><c> that</c><00:32:28.970><c> area</c><00:32:30.220><c> now</c><00:32:31.220><c> what</c><00:32:31.429><c> a</c>

00:32:31.450 --> 00:32:31.460 align:start position:0%
below 50% or around that area now what a
 

00:32:31.460 --> 00:32:33.610 align:start position:0%
below 50% or around that area now what a
natural<00:32:31.850><c> question</c><00:32:32.270><c> here</c><00:32:32.570><c> is</c><00:32:32.690><c> if</c><00:32:33.290><c> i'm</c><00:32:33.440><c> mollie</c>

00:32:33.610 --> 00:32:33.620 align:start position:0%
natural question here is if i'm mollie
 

00:32:33.620 --> 00:32:36.250 align:start position:0%
natural question here is if i'm mollie
compiling<00:32:34.040><c> 5%</c><00:32:34.880><c> of</c><00:32:35.000><c> job</c><00:32:35.240><c> how</c><00:32:35.420><c> can</c><00:32:35.660><c> i</c><00:32:35.690><c> reduce</c><00:32:35.990><c> the</c>

00:32:36.250 --> 00:32:36.260 align:start position:0%
compiling 5% of job how can i reduce the
 

00:32:36.260 --> 00:32:37.780 align:start position:0%
compiling 5% of job how can i reduce the
space<00:32:36.470><c> only</c><00:32:36.770><c> by</c><00:32:36.890><c> 50%</c>

00:32:37.780 --> 00:32:37.790 align:start position:0%
space only by 50%
 

00:32:37.790 --> 00:32:41.200 align:start position:0%
space only by 50%
why<00:32:37.970><c> not</c><00:32:38.510><c> 95</c><00:32:39.170><c> well</c><00:32:40.130><c> those</c><00:32:40.370><c> lines</c><00:32:40.700><c> contains</c>

00:32:41.200 --> 00:32:41.210 align:start position:0%
why not 95 well those lines contains
 

00:32:41.210 --> 00:32:43.390 align:start position:0%
why not 95 well those lines contains
also<00:32:41.450><c> the</c><00:32:41.630><c> application</c><00:32:41.750><c> raw</c><00:32:42.380><c> code</c><00:32:42.650><c> that</c><00:32:43.160><c> dex</c>

00:32:43.390 --> 00:32:43.400 align:start position:0%
also the application raw code that dex
 

00:32:43.400 --> 00:32:46.330 align:start position:0%
also the application raw code that dex
code<00:32:43.670><c> and</c><00:32:44.080><c> that's</c><00:32:45.080><c> a</c><00:32:45.200><c> line</c><00:32:45.410><c> below</c><00:32:45.860><c> which</c><00:32:46.010><c> you</c>

00:32:46.330 --> 00:32:46.340 align:start position:0%
code and that's a line below which you
 

00:32:46.340 --> 00:32:48.400 align:start position:0%
code and that's a line below which you
cannot<00:32:46.610><c> go</c><00:32:46.820><c> because</c><00:32:47.750><c> we</c><00:32:47.960><c> need</c><00:32:48.110><c> to</c><00:32:48.230><c> run</c>

00:32:48.400 --> 00:32:48.410 align:start position:0%
cannot go because we need to run
 

00:32:48.410 --> 00:32:50.830 align:start position:0%
cannot go because we need to run
something<00:32:48.740><c> and</c><00:32:49.400><c> here's</c><00:32:49.760><c> how</c><00:32:50.150><c> we</c><00:32:50.210><c> compare</c><00:32:50.690><c> to</c>

00:32:50.830 --> 00:32:50.840 align:start position:0%
something and here's how we compare to
 

00:32:50.840 --> 00:32:54.490 align:start position:0%
something and here's how we compare to
the<00:32:50.960><c> application</c><00:32:51.820><c> size</c><00:32:52.900><c> you</c><00:32:53.900><c> can</c><00:32:54.080><c> see</c><00:32:54.110><c> that</c><00:32:54.380><c> in</c>

00:32:54.490 --> 00:32:54.500 align:start position:0%
the application size you can see that in
 

00:32:54.500 --> 00:32:59.049 align:start position:0%
the application size you can see that in
marshmallow<00:32:54.910><c> we</c><00:32:55.910><c> generated</c><00:32:56.540><c> more</c><00:32:56.809><c> than</c><00:32:57.820><c> 3x</c><00:32:58.820><c> in</c>

00:32:59.049 --> 00:32:59.059 align:start position:0%
marshmallow we generated more than 3x in
 

00:32:59.059 --> 00:33:01.930 align:start position:0%
marshmallow we generated more than 3x in
terms<00:32:59.270><c> of</c><00:32:59.480><c> code</c><00:32:59.720><c> size</c><00:33:00.020><c> whereas</c><00:33:00.950><c> in</c><00:33:01.100><c> an</c><00:33:01.370><c> we</c><00:33:01.730><c> stay</c>

00:33:01.930 --> 00:33:01.940 align:start position:0%
terms of code size whereas in an we stay
 

00:33:01.940 --> 00:33:07.780 align:start position:0%
terms of code size whereas in an we stay
below<00:33:02.120><c> 1.5</c><00:33:03.020><c> X</c><00:33:04.270><c> and</c><00:33:05.980><c> these</c><00:33:06.980><c> are</c><00:33:07.130><c> all</c><00:33:07.370><c> cool</c>

00:33:07.780 --> 00:33:07.790 align:start position:0%
below 1.5 X and these are all cool
 

00:33:07.790 --> 00:33:09.760 align:start position:0%
below 1.5 X and these are all cool
benefits<00:33:08.090><c> but</c><00:33:08.840><c> it's</c><00:33:09.020><c> not</c><00:33:09.200><c> the</c><00:33:09.320><c> only</c><00:33:09.530><c> thing</c>

00:33:09.760 --> 00:33:09.770 align:start position:0%
benefits but it's not the only thing
 

00:33:09.770 --> 00:33:13.450 align:start position:0%
benefits but it's not the only thing
actually<00:33:10.280><c> that</c><00:33:10.580><c> we</c><00:33:10.669><c> use</c><00:33:10.850><c> profiles</c><00:33:11.330><c> for</c><00:33:12.460><c> we</c>

00:33:13.450 --> 00:33:13.460 align:start position:0%
actually that we use profiles for we
 

00:33:13.460 --> 00:33:16.100 align:start position:0%
actually that we use profiles for we
also<00:33:13.700><c> use</c><00:33:14.059><c> them</c><00:33:14.330><c> to</c><00:33:14.540><c> further</c><00:33:15.320><c> speed</c>

00:33:16.100 --> 00:33:16.110 align:start position:0%
also use them to further speed
 

00:33:16.110 --> 00:33:18.350 align:start position:0%
also use them to further speed
system<00:33:16.530><c> updates</c><00:33:16.920><c> as</c><00:33:17.490><c> my</c><00:33:17.700><c> colleague</c><00:33:18.000><c> Nicola</c>

00:33:18.350 --> 00:33:18.360 align:start position:0%
system updates as my colleague Nicola
 

00:33:18.360 --> 00:33:20.150 align:start position:0%
system updates as my colleague Nicola
mentioned<00:33:18.750><c> because</c><00:33:19.080><c> of</c><00:33:19.320><c> duty</c><00:33:19.650><c> don't</c><00:33:19.830><c> need</c><00:33:20.010><c> to</c>

00:33:20.150 --> 00:33:20.160 align:start position:0%
mentioned because of duty don't need to
 

00:33:20.160 --> 00:33:22.669 align:start position:0%
mentioned because of duty don't need to
recompile<00:33:20.460><c> the</c><00:33:20.940><c> app</c><00:33:21.030><c> again</c><00:33:21.510><c> and</c><00:33:22.410><c> that</c>

00:33:22.669 --> 00:33:22.679 align:start position:0%
recompile the app again and that
 

00:33:22.679 --> 00:33:24.950 align:start position:0%
recompile the app again and that
basically<00:33:23.130><c> gets</c><00:33:23.370><c> rid</c><00:33:23.610><c> of</c><00:33:23.640><c> the</c><00:33:24.360><c> long</c><00:33:24.630><c> waiting</c>

00:33:24.950 --> 00:33:24.960 align:start position:0%
basically gets rid of the long waiting
 

00:33:24.960 --> 00:33:27.380 align:start position:0%
basically gets rid of the long waiting
time<00:33:25.290><c> for</c><00:33:25.530><c> the</c><00:33:25.559><c> optimizing</c><00:33:26.130><c> app</c><00:33:26.309><c> we</c><00:33:27.059><c> still</c>

00:33:27.380 --> 00:33:27.390 align:start position:0%
time for the optimizing app we still
 

00:33:27.390 --> 00:33:29.180 align:start position:0%
time for the optimizing app we still
want<00:33:27.630><c> to</c><00:33:27.690><c> do</c><00:33:27.870><c> some</c><00:33:28.049><c> processing</c><00:33:28.320><c> of</c><00:33:28.679><c> the</c><00:33:28.830><c> app</c><00:33:28.920><c> in</c>

00:33:29.180 --> 00:33:29.190 align:start position:0%
want to do some processing of the app in
 

00:33:29.190 --> 00:33:31.010 align:start position:0%
want to do some processing of the app in
particular<00:33:29.429><c> extraction</c><00:33:30.270><c> and</c><00:33:30.360><c> verification</c>

00:33:31.010 --> 00:33:31.020 align:start position:0%
particular extraction and verification
 

00:33:31.020 --> 00:33:33.919 align:start position:0%
particular extraction and verification
to<00:33:31.620><c> ensure</c><00:33:31.679><c> that</c><00:33:32.100><c> those</c><00:33:32.640><c> apps</c><00:33:32.940><c> get</c><00:33:33.270><c> executed</c>

00:33:33.919 --> 00:33:33.929 align:start position:0%
to ensure that those apps get executed
 

00:33:33.929 --> 00:33:35.510 align:start position:0%
to ensure that those apps get executed
as<00:33:34.080><c> fast</c><00:33:34.350><c> as</c><00:33:34.530><c> possible</c><00:33:35.010><c> and</c><00:33:35.160><c> they</c><00:33:35.220><c> are</c><00:33:35.280><c> first</c>

00:33:35.510 --> 00:33:35.520 align:start position:0%
as fast as possible and they are first
 

00:33:35.520 --> 00:33:39.950 align:start position:0%
as fast as possible and they are first
lunged<00:33:36.410><c> and</c><00:33:37.549><c> in</c><00:33:38.549><c> M</c><00:33:38.760><c> we</c><00:33:39.120><c> actually</c><00:33:39.450><c> know</c><00:33:39.690><c> how</c>

00:33:39.950 --> 00:33:39.960 align:start position:0%
lunged and in M we actually know how
 

00:33:39.960 --> 00:33:42.260 align:start position:0%
lunged and in M we actually know how
those<00:33:40.140><c> apps</c><00:33:40.500><c> were</c><00:33:40.770><c> executed</c><00:33:41.280><c> before</c><00:33:41.429><c> so</c><00:33:42.179><c> we</c>

00:33:42.260 --> 00:33:42.270 align:start position:0%
those apps were executed before so we
 

00:33:42.270 --> 00:33:44.810 align:start position:0%
those apps were executed before so we
can<00:33:42.420><c> use</c><00:33:42.540><c> profile</c><00:33:43.140><c> only</c><00:33:43.710><c> guide</c><00:33:43.920><c> to</c><00:33:44.520><c> guide</c><00:33:44.700><c> the</c>

00:33:44.810 --> 00:33:44.820 align:start position:0%
can use profile only guide to guide the
 

00:33:44.820 --> 00:33:47.870 align:start position:0%
can use profile only guide to guide the
verification<00:33:45.510><c> and</c><00:33:45.720><c> that</c><00:33:46.620><c> saves</c><00:33:46.950><c> around</c><00:33:47.340><c> 40%</c>

00:33:47.870 --> 00:33:47.880 align:start position:0%
verification and that saves around 40%
 

00:33:47.880 --> 00:33:51.049 align:start position:0%
verification and that saves around 40%
of<00:33:48.390><c> the</c><00:33:48.540><c> time</c><00:33:48.720><c> extra</c><00:33:49.230><c> we</c><00:33:50.070><c> also</c><00:33:50.340><c> added</c><00:33:50.669><c> new</c>

00:33:51.049 --> 00:33:51.059 align:start position:0%
of the time extra we also added new
 

00:33:51.059 --> 00:33:54.110 align:start position:0%
of the time extra we also added new
improved<00:33:51.660><c> usage</c><00:33:52.080><c> stats</c><00:33:52.320><c> and</c><00:33:52.850><c> compared</c><00:33:53.850><c> to</c><00:33:53.940><c> M</c>

00:33:54.110 --> 00:33:54.120 align:start position:0%
improved usage stats and compared to M
 

00:33:54.120 --> 00:33:56.330 align:start position:0%
improved usage stats and compared to M
we<00:33:54.600><c> can</c><00:33:54.630><c> now</c><00:33:54.990><c> track</c><00:33:55.380><c> precisely</c><00:33:55.950><c> how</c><00:33:56.280><c> the</c>

00:33:56.330 --> 00:33:56.340 align:start position:0%
we can now track precisely how the
 

00:33:56.340 --> 00:33:58.370 align:start position:0%
we can now track precisely how the
application<00:33:56.970><c> was</c><00:33:57.090><c> used</c><00:33:57.390><c> then</c><00:33:57.900><c> how</c><00:33:58.080><c> it</c><00:33:58.230><c> was</c>

00:33:58.370 --> 00:33:58.380 align:start position:0%
application was used then how it was
 

00:33:58.380 --> 00:34:01.190 align:start position:0%
application was used then how it was
executed<00:33:58.740><c> and</c><00:33:59.250><c> you</c><00:33:59.309><c> only</c><00:33:59.880><c> analyze</c><00:34:00.390><c> what</c>

00:34:01.190 --> 00:34:01.200 align:start position:0%
executed and you only analyze what
 

00:34:01.200 --> 00:34:03.080 align:start position:0%
executed and you only analyze what
actually<00:34:01.770><c> matters</c><00:34:01.950><c> for</c><00:34:02.400><c> the</c><00:34:02.520><c> users</c>

00:34:03.080 --> 00:34:03.090 align:start position:0%
actually matters for the users
 

00:34:03.090 --> 00:34:05.630 align:start position:0%
actually matters for the users
what<00:34:04.049><c> is</c><00:34:04.200><c> that</c><00:34:04.380><c> application</c><00:34:05.370><c> which</c><00:34:05.460><c> has</c><00:34:05.580><c> a</c>

00:34:05.630 --> 00:34:05.640 align:start position:0%
what is that application which has a
 

00:34:05.640 --> 00:34:07.850 align:start position:0%
what is that application which has a
user<00:34:05.940><c> interface</c><00:34:06.600><c> and</c><00:34:06.870><c> the</c><00:34:07.380><c> users</c><00:34:07.650><c> can</c>

00:34:07.850 --> 00:34:07.860 align:start position:0%
user interface and the users can
 

00:34:07.860 --> 00:34:09.649 align:start position:0%
user interface and the users can
interact<00:34:08.070><c> with</c><00:34:08.399><c> them</c><00:34:08.639><c> those</c><00:34:09.149><c> are</c><00:34:09.330><c> the</c><00:34:09.480><c> most</c>

00:34:09.649 --> 00:34:09.659 align:start position:0%
interact with them those are the most
 

00:34:09.659 --> 00:34:11.450 align:start position:0%
interact with them those are the most
valuable<00:34:09.899><c> for</c><00:34:10.350><c> our</c><00:34:10.470><c> users</c><00:34:10.830><c> and</c><00:34:10.919><c> we</c><00:34:11.040><c> focus</c><00:34:11.310><c> on</c>

00:34:11.450 --> 00:34:11.460 align:start position:0%
valuable for our users and we focus on
 

00:34:11.460 --> 00:34:15.740 align:start position:0%
valuable for our users and we focus on
them<00:34:11.669><c> during</c><00:34:12.179><c> system</c><00:34:12.450><c> update</c><00:34:13.700><c> however</c><00:34:14.750><c> when</c>

00:34:15.740 --> 00:34:15.750 align:start position:0%
them during system update however when
 

00:34:15.750 --> 00:34:17.780 align:start position:0%
them during system update however when
you<00:34:15.840><c> take</c><00:34:16.020><c> the</c><00:34:16.139><c> update</c><00:34:16.530><c> first</c><00:34:16.859><c> update</c><00:34:17.220><c> to</c><00:34:17.340><c> n</c><00:34:17.520><c> we</c>

00:34:17.780 --> 00:34:17.790 align:start position:0%
you take the update first update to n we
 

00:34:17.790 --> 00:34:19.730 align:start position:0%
you take the update first update to n we
don't<00:34:18.000><c> have</c><00:34:18.119><c> access</c><00:34:18.300><c> to</c><00:34:18.600><c> all</c><00:34:18.659><c> the</c><00:34:18.810><c> goodies</c><00:34:19.139><c> we</c>

00:34:19.730 --> 00:34:19.740 align:start position:0%
don't have access to all the goodies we
 

00:34:19.740 --> 00:34:22.149 align:start position:0%
don't have access to all the goodies we
don't<00:34:19.919><c> have</c><00:34:20.040><c> profiles</c><00:34:20.490><c> and</c><00:34:21.030><c> I</c><00:34:21.060><c> don't</c><00:34:21.240><c> have</c>

00:34:22.149 --> 00:34:22.159 align:start position:0%
don't have profiles and I don't have
 

00:34:22.159 --> 00:34:25.609 align:start position:0%
don't have profiles and I don't have
improved<00:34:23.159><c> enough</c><00:34:23.909><c> accurate</c><00:34:24.480><c> usage</c><00:34:24.780><c> stats</c><00:34:25.020><c> to</c>

00:34:25.609 --> 00:34:25.619 align:start position:0%
improved enough accurate usage stats to
 

00:34:25.619 --> 00:34:27.830 align:start position:0%
improved enough accurate usage stats to
realize<00:34:25.919><c> how</c><00:34:26.129><c> the</c><00:34:26.190><c> app</c><00:34:26.369><c> was</c><00:34:26.520><c> used</c><00:34:26.790><c> and</c><00:34:27.090><c> what</c><00:34:27.720><c> we</c>

00:34:27.830 --> 00:34:27.840 align:start position:0%
realize how the app was used and what we
 

00:34:27.840 --> 00:34:29.960 align:start position:0%
realize how the app was used and what we
do<00:34:28.020><c> we</c><00:34:28.200><c> do</c><00:34:28.350><c> a</c><00:34:28.409><c> full</c><00:34:28.679><c> verification</c><00:34:29.399><c> of</c><00:34:29.490><c> most</c><00:34:29.820><c> of</c>

00:34:29.960 --> 00:34:29.970 align:start position:0%
do we do a full verification of most of
 

00:34:29.970 --> 00:34:32.480 align:start position:0%
do we do a full verification of most of
the<00:34:30.119><c> apps</c><00:34:30.240><c> this</c><00:34:31.230><c> is</c><00:34:31.379><c> still</c><00:34:31.649><c> much</c><00:34:31.919><c> much</c><00:34:32.159><c> faster</c>

00:34:32.480 --> 00:34:32.490 align:start position:0%
the apps this is still much much faster
 

00:34:32.490 --> 00:34:35.359 align:start position:0%
the apps this is still much much faster
than<00:34:32.730><c> we</c><00:34:32.970><c> used</c><00:34:33.149><c> to</c><00:34:33.359><c> do</c><00:34:33.480><c> in</c><00:34:33.600><c> M</c><00:34:33.840><c> and</c><00:34:34.200><c> how</c><00:34:35.190><c> much</c>

00:34:35.359 --> 00:34:35.369 align:start position:0%
than we used to do in M and how much
 

00:34:35.369 --> 00:34:36.950 align:start position:0%
than we used to do in M and how much
faster<00:34:35.790><c> let's</c><00:34:36.149><c> take</c><00:34:36.300><c> a</c><00:34:36.330><c> look</c><00:34:36.480><c> at</c><00:34:36.570><c> the</c><00:34:36.629><c> numbers</c>

00:34:36.950 --> 00:34:36.960 align:start position:0%
faster let's take a look at the numbers
 

00:34:36.960 --> 00:34:41.419 align:start position:0%
faster let's take a look at the numbers
you<00:34:39.109><c> can</c><00:34:40.109><c> see</c><00:34:40.139><c> here</c><00:34:40.619><c> three</c><00:34:40.919><c> different</c><00:34:41.040><c> lines</c>

00:34:41.419 --> 00:34:41.429 align:start position:0%
you can see here three different lines
 

00:34:41.429 --> 00:34:44.690 align:start position:0%
you can see here three different lines
and<00:34:42.379><c> these</c><00:34:43.379><c> numbers</c><00:34:43.590><c> are</c><00:34:44.010><c> obtained</c><00:34:44.490><c> on</c><00:34:44.669><c> the</c>

00:34:44.690 --> 00:34:44.700 align:start position:0%
and these numbers are obtained on the
 

00:34:44.700 --> 00:34:46.970 align:start position:0%
and these numbers are obtained on the
same<00:34:45.000><c> device</c><00:34:45.179><c> which</c><00:34:45.720><c> have</c><00:34:45.929><c> roughly</c><00:34:46.320><c> 100</c>

00:34:46.970 --> 00:34:46.980 align:start position:0%
same device which have roughly 100
 

00:34:46.980 --> 00:34:49.820 align:start position:0%
same device which have roughly 100
application<00:34:47.580><c> installed</c><00:34:48.000><c> and</c><00:34:48.330><c> the</c><00:34:49.290><c> first</c><00:34:49.560><c> line</c>

00:34:49.820 --> 00:34:49.830 align:start position:0%
application installed and the first line
 

00:34:49.830 --> 00:34:52.700 align:start position:0%
application installed and the first line
which<00:34:50.450><c> represents</c><00:34:51.450><c> an</c><00:34:51.570><c> OTA</c><00:34:51.990><c> a</c><00:34:52.080><c> system</c><00:34:52.530><c> update</c>

00:34:52.700 --> 00:34:52.710 align:start position:0%
which represents an OTA a system update
 

00:34:52.710 --> 00:34:55.730 align:start position:0%
which represents an OTA a system update
from<00:34:53.460><c> M</c><00:34:53.669><c> to</c><00:34:54.000><c> M</c><00:34:54.090><c> Prime</c><00:34:54.480><c> where</c><00:34:55.379><c> we</c><00:34:55.500><c> took</c><00:34:55.619><c> a</c>

00:34:55.730 --> 00:34:55.740 align:start position:0%
from M to M Prime where we took a
 

00:34:55.740 --> 00:34:59.120 align:start position:0%
from M to M Prime where we took a
security<00:34:56.639><c> update</c><00:34:56.940><c> we</c><00:34:57.660><c> took</c><00:34:57.840><c> around</c><00:34:58.320><c> 14</c>

00:34:59.120 --> 00:34:59.130 align:start position:0%
security update we took around 14
 

00:34:59.130 --> 00:35:02.150 align:start position:0%
security update we took around 14
minutes<00:34:59.609><c> to</c><00:34:59.970><c> process</c><00:35:00.300><c> all</c><00:35:01.109><c> the</c><00:35:01.500><c> applications</c>

00:35:02.150 --> 00:35:02.160 align:start position:0%
minutes to process all the applications
 

00:35:02.160 --> 00:35:03.740 align:start position:0%
minutes to process all the applications
and<00:35:02.400><c> that's</c><00:35:02.670><c> the</c><00:35:02.760><c> time</c><00:35:03.000><c> that</c><00:35:03.240><c> the</c><00:35:03.330><c> runtime</c>

00:35:03.740 --> 00:35:03.750 align:start position:0%
and that's the time that the runtime
 

00:35:03.750 --> 00:35:07.190 align:start position:0%
and that's the time that the runtime
spends<00:35:04.200><c> processing</c><00:35:04.740><c> them</c><00:35:05.840><c> when</c><00:35:06.840><c> you</c><00:35:06.930><c> take</c><00:35:07.109><c> the</c>

00:35:07.190 --> 00:35:07.200 align:start position:0%
spends processing them when you take the
 

00:35:07.200 --> 00:35:10.160 align:start position:0%
spends processing them when you take the
OTA<00:35:07.470><c> to</c><00:35:07.530><c> M</c><00:35:07.770><c> we</c><00:35:08.040><c> reduce</c><00:35:08.400><c> the</c><00:35:08.550><c> time</c><00:35:08.760><c> to</c><00:35:09.420><c> about</c><00:35:09.690><c> 3</c>

00:35:10.160 --> 00:35:10.170 align:start position:0%
OTA to M we reduce the time to about 3
 

00:35:10.170 --> 00:35:12.890 align:start position:0%
OTA to M we reduce the time to about 3
minutes<00:35:10.410><c> which</c><00:35:10.680><c> is</c><00:35:10.710><c> branch</c><00:35:11.520><c> up</c><00:35:11.850><c> to</c><00:35:12.450><c> 5x</c>

00:35:12.890 --> 00:35:12.900 align:start position:0%
minutes which is branch up to 5x
 

00:35:12.900 --> 00:35:15.920 align:start position:0%
minutes which is branch up to 5x
reduction<00:35:13.590><c> and</c><00:35:14.220><c> there</c><00:35:14.670><c> we</c><00:35:14.850><c> verify</c><00:35:15.300><c> most</c><00:35:15.750><c> of</c>

00:35:15.920 --> 00:35:15.930 align:start position:0%
reduction and there we verify most of
 

00:35:15.930 --> 00:35:18.859 align:start position:0%
reduction and there we verify most of
the<00:35:16.050><c> applications</c><00:35:16.910><c> now</c><00:35:17.910><c> the</c><00:35:17.970><c> next</c><00:35:18.390><c> step</c><00:35:18.630><c> a</c>

00:35:18.859 --> 00:35:18.869 align:start position:0%
the applications now the next step a
 

00:35:18.869 --> 00:35:21.349 align:start position:0%
the applications now the next step a
security<00:35:19.830><c> update</c><00:35:20.100><c> will</c><00:35:20.280><c> kick</c><00:35:20.460><c> in</c><00:35:20.640><c> for</c><00:35:20.820><c> an</c><00:35:21.030><c> and</c>

00:35:21.349 --> 00:35:21.359 align:start position:0%
security update will kick in for an and
 

00:35:21.359 --> 00:35:23.150 align:start position:0%
security update will kick in for an and
what<00:35:21.869><c> we</c><00:35:21.990><c> do</c><00:35:22.140><c> already</c><00:35:22.380><c> have</c><00:35:22.530><c> profile</c>

00:35:23.150 --> 00:35:23.160 align:start position:0%
what we do already have profile
 

00:35:23.160 --> 00:35:25.580 align:start position:0%
what we do already have profile
information<00:35:23.430><c> we</c><00:35:24.000><c> have</c><00:35:24.359><c> already</c><00:35:24.960><c> had</c><00:35:25.260><c> improve</c>

00:35:25.580 --> 00:35:25.590 align:start position:0%
information we have already had improve
 

00:35:25.590 --> 00:35:27.590 align:start position:0%
information we have already had improve
usage<00:35:25.890><c> stats</c><00:35:26.160><c> and</c><00:35:26.460><c> you</c><00:35:26.790><c> can</c><00:35:26.970><c> use</c><00:35:27.150><c> that</c><00:35:27.390><c> to</c>

00:35:27.590 --> 00:35:27.600 align:start position:0%
usage stats and you can use that to
 

00:35:27.600 --> 00:35:29.700 align:start position:0%
usage stats and you can use that to
drive<00:35:27.840><c> the</c><00:35:28.080><c> time</c><00:35:28.320><c> even</c><00:35:28.740><c> lower</c>

00:35:29.700 --> 00:35:29.710 align:start position:0%
drive the time even lower
 

00:35:29.710 --> 00:35:31.950 align:start position:0%
drive the time even lower
take<00:35:30.010><c> a</c><00:35:30.040><c> security</c><00:35:30.369><c> update</c><00:35:30.700><c> on</c><00:35:31.030><c> this</c><00:35:31.210><c> device</c><00:35:31.510><c> we</c>

00:35:31.950 --> 00:35:31.960 align:start position:0%
take a security update on this device we
 

00:35:31.960 --> 00:35:34.140 align:start position:0%
take a security update on this device we
take<00:35:32.170><c> less</c><00:35:32.440><c> than</c><00:35:32.470><c> a</c><00:35:32.710><c> minute</c><00:35:33.040><c> and</c><00:35:33.250><c> compared</c><00:35:34.030><c> to</c>

00:35:34.140 --> 00:35:34.150 align:start position:0%
take less than a minute and compared to
 

00:35:34.150 --> 00:35:37.260 align:start position:0%
take less than a minute and compared to
M<00:35:34.330><c> that's</c><00:35:34.780><c> more</c><00:35:35.109><c> than</c><00:35:35.290><c> 12</c><00:35:35.619><c> X</c><00:35:35.859><c> improvement</c><00:35:36.609><c> in</c>

00:35:37.260 --> 00:35:37.270 align:start position:0%
M that's more than 12 X improvement in
 

00:35:37.270 --> 00:35:42.359 align:start position:0%
M that's more than 12 X improvement in
terms<00:35:37.480><c> of</c><00:35:37.660><c> speed</c><00:35:37.930><c> up</c><00:35:39.869><c> with</c><00:35:40.869><c> that</c><00:35:41.109><c> I</c><00:35:41.349><c> like</c><00:35:42.099><c> it</c><00:35:42.250><c> to</c>

00:35:42.359 --> 00:35:42.369 align:start position:0%
terms of speed up with that I like it to
 

00:35:42.369 --> 00:35:44.609 align:start position:0%
terms of speed up with that I like it to
pass<00:35:42.550><c> it</c><00:35:42.730><c> to</c><00:35:42.820><c> Matthew</c><00:35:43.180><c> and</c><00:35:43.390><c> he</c><00:35:44.170><c> will</c><00:35:44.320><c> explain</c>

00:35:44.609 --> 00:35:44.619 align:start position:0%
pass it to Matthew and he will explain
 

00:35:44.619 --> 00:35:47.490 align:start position:0%
pass it to Matthew and he will explain
how<00:35:44.980><c> use</c><00:35:45.220><c> profiles</c><00:35:45.700><c> to</c><00:35:45.940><c> further</c><00:35:46.210><c> even</c><00:35:46.750><c> to</c>

00:35:47.490 --> 00:35:47.500 align:start position:0%
how use profiles to further even to
 

00:35:47.500 --> 00:35:56.849 align:start position:0%
how use profiles to further even to
speed<00:35:47.740><c> up</c><00:35:48.000><c> application</c><00:35:49.000><c> even</c><00:35:49.119><c> more</c><00:35:55.680><c> Thank</c><00:35:56.680><c> You</c>

00:35:56.849 --> 00:35:56.859 align:start position:0%
speed up application even more Thank You
 

00:35:56.859 --> 00:36:00.060 align:start position:0%
speed up application even more Thank You
Colleen<00:35:57.810><c> why</c><00:35:58.810><c> new</c><00:35:59.050><c> feature</c><00:35:59.320><c> an</c><00:35:59.619><c> end</c><00:35:59.859><c> that</c>

00:36:00.060 --> 00:36:00.070 align:start position:0%
Colleen why new feature an end that
 

00:36:00.070 --> 00:36:01.620 align:start position:0%
Colleen why new feature an end that
reduces<00:36:00.520><c> application</c><00:36:01.060><c> launch</c><00:36:01.270><c> time</c><00:36:01.450><c> as</c>

00:36:01.620 --> 00:36:01.630 align:start position:0%
reduces application launch time as
 

00:36:01.630 --> 00:36:05.070 align:start position:0%
reduces application launch time as
application<00:36:02.140><c> images</c><00:36:03.330><c> an</c><00:36:04.330><c> application</c><00:36:04.780><c> image</c>

00:36:05.070 --> 00:36:05.080 align:start position:0%
application images an application image
 

00:36:05.080 --> 00:36:06.960 align:start position:0%
application images an application image
is<00:36:05.260><c> a</c><00:36:05.320><c> serialized</c><00:36:05.830><c> heap</c><00:36:06.280><c> consisting</c><00:36:06.700><c> of</c><00:36:06.760><c> pre</c>

00:36:06.960 --> 00:36:06.970 align:start position:0%
is a serialized heap consisting of pre
 

00:36:06.970 --> 00:36:09.630 align:start position:0%
is a serialized heap consisting of pre
initialized<00:36:07.450><c> classes</c><00:36:08.010><c> this</c><00:36:09.010><c> image</c><00:36:09.339><c> is</c><00:36:09.460><c> loaded</c>

00:36:09.630 --> 00:36:09.640 align:start position:0%
initialized classes this image is loaded
 

00:36:09.640 --> 00:36:13.589 align:start position:0%
initialized classes this image is loaded
by<00:36:09.910><c> the</c><00:36:09.940><c> application</c><00:36:10.570><c> during</c><00:36:10.869><c> launch</c><00:36:12.599><c> during</c>

00:36:13.589 --> 00:36:13.599 align:start position:0%
by the application during launch during
 

00:36:13.599 --> 00:36:15.150 align:start position:0%
by the application during launch during
wash<00:36:13.839><c> most</c><00:36:14.140><c> applications</c><00:36:14.710><c> end</c><00:36:14.890><c> up</c><00:36:15.010><c> loading</c>

00:36:15.150 --> 00:36:15.160 align:start position:0%
wash most applications end up loading
 

00:36:15.160 --> 00:36:16.770 align:start position:0%
wash most applications end up loading
many<00:36:15.460><c> classes</c><00:36:15.910><c> for</c><00:36:16.030><c> initialization</c><00:36:16.359><c> work</c>

00:36:16.770 --> 00:36:16.780 align:start position:0%
many classes for initialization work
 

00:36:16.780 --> 00:36:18.420 align:start position:0%
many classes for initialization work
such<00:36:17.020><c> as</c><00:36:17.170><c> creating</c><00:36:17.500><c> views</c><00:36:17.830><c> or</c><00:36:18.070><c> inflating</c>

00:36:18.420 --> 00:36:18.430 align:start position:0%
such as creating views or inflating
 

00:36:18.430 --> 00:36:19.370 align:start position:0%
such as creating views or inflating
layouts

00:36:19.370 --> 00:36:19.380 align:start position:0%
layouts
 

00:36:19.380 --> 00:36:21.390 align:start position:0%
layouts
unfortunately<00:36:20.380><c> loading</c><00:36:20.770><c> classes</c><00:36:21.130><c> is</c><00:36:21.220><c> not</c>

00:36:21.390 --> 00:36:21.400 align:start position:0%
unfortunately loading classes is not
 

00:36:21.400 --> 00:36:23.040 align:start position:0%
unfortunately loading classes is not
free<00:36:21.670><c> it</c><00:36:21.849><c> can</c><00:36:22.000><c> consist</c><00:36:22.240><c> of</c><00:36:22.359><c> a</c><00:36:22.450><c> large</c><00:36:22.660><c> portion</c>

00:36:23.040 --> 00:36:23.050 align:start position:0%
free it can consist of a large portion
 

00:36:23.050 --> 00:36:25.440 align:start position:0%
free it can consist of a large portion
of<00:36:23.230><c> the</c><00:36:23.380><c> application</c><00:36:23.530><c> launch</c><00:36:24.010><c> time</c><00:36:24.359><c> the</c><00:36:25.359><c> way</c>

00:36:25.440 --> 00:36:25.450 align:start position:0%
of the application launch time the way
 

00:36:25.450 --> 00:36:27.060 align:start position:0%
of the application launch time the way
that<00:36:25.480><c> application</c><00:36:26.050><c> images</c><00:36:26.410><c> reduces</c><00:36:26.920><c> this</c>

00:36:27.060 --> 00:36:27.070 align:start position:0%
that application images reduces this
 

00:36:27.070 --> 00:36:29.040 align:start position:0%
that application images reduces this
cost<00:36:27.339><c> is</c><00:36:27.730><c> by</c><00:36:27.880><c> effectively</c><00:36:28.300><c> shifting</c><00:36:28.839><c> work</c>

00:36:29.040 --> 00:36:29.050 align:start position:0%
cost is by effectively shifting work
 

00:36:29.050 --> 00:36:30.810 align:start position:0%
cost is by effectively shifting work
from<00:36:29.440><c> application</c><00:36:29.890><c> launch</c><00:36:30.099><c> time</c><00:36:30.310><c> to</c><00:36:30.550><c> compile</c>

00:36:30.810 --> 00:36:30.820 align:start position:0%
from application launch time to compile
 

00:36:30.820 --> 00:36:33.329 align:start position:0%
from application launch time to compile
time<00:36:31.349><c> since</c><00:36:32.349><c> the</c><00:36:32.440><c> classes</c><00:36:32.680><c> inside</c><00:36:33.160><c> of</c><00:36:33.250><c> the</c>

00:36:33.329 --> 00:36:33.339 align:start position:0%
time since the classes inside of the
 

00:36:33.339 --> 00:36:34.859 align:start position:0%
time since the classes inside of the
application<00:36:33.490><c> image</c><00:36:33.970><c> are</c><00:36:34.210><c> pre</c><00:36:34.390><c> initialized</c>

00:36:34.859 --> 00:36:34.869 align:start position:0%
application image are pre initialized
 

00:36:34.869 --> 00:36:36.870 align:start position:0%
application image are pre initialized
this<00:36:35.410><c> means</c><00:36:35.710><c> they're</c><00:36:35.890><c> able</c><00:36:36.160><c> to</c><00:36:36.400><c> be</c><00:36:36.550><c> accessed</c>

00:36:36.870 --> 00:36:36.880 align:start position:0%
this means they're able to be accessed
 

00:36:36.880 --> 00:36:40.310 align:start position:0%
this means they're able to be accessed
right<00:36:37.060><c> off</c><00:36:37.210><c> the</c><00:36:37.330><c> bat</c><00:36:37.480><c> by</c><00:36:37.690><c> the</c><00:36:37.750><c> application</c>

00:36:40.310 --> 00:36:40.320 align:start position:0%
right off the bat by the application
 

00:36:40.320 --> 00:36:42.540 align:start position:0%
right off the bat by the application
application<00:36:41.320><c> images</c><00:36:41.980><c> are</c><00:36:42.070><c> generated</c><00:36:42.220><c> during</c>

00:36:42.540 --> 00:36:42.550 align:start position:0%
application images are generated during
 

00:36:42.550 --> 00:36:44.250 align:start position:0%
application images are generated during
the<00:36:42.970><c> background</c><00:36:43.450><c> compilation</c><00:36:43.960><c> phase</c><00:36:44.109><c> I</c><00:36:44.230><c> think</c>

00:36:44.250 --> 00:36:44.260 align:start position:0%
the background compilation phase I think
 

00:36:44.260 --> 00:36:45.660 align:start position:0%
the background compilation phase I think
was<00:36:44.470><c> colleen</c><00:36:44.770><c> referred</c><00:36:45.040><c> to</c><00:36:45.220><c> as</c><00:36:45.369><c> a</c><00:36:45.400><c> maintenance</c>

00:36:45.660 --> 00:36:45.670 align:start position:0%
was colleen referred to as a maintenance
 

00:36:45.670 --> 00:36:49.410 align:start position:0%
was colleen referred to as a maintenance
phase<00:36:46.000><c> by</c><00:36:46.690><c> the</c><00:36:46.750><c> IOT</c><00:36:47.170><c> compiler</c><00:36:48.270><c> leveraging</c><00:36:49.270><c> the</c>

00:36:49.410 --> 00:36:49.420 align:start position:0%
phase by the IOT compiler leveraging the
 

00:36:49.420 --> 00:36:50.970 align:start position:0%
phase by the IOT compiler leveraging the
JIT<00:36:49.599><c> profiles</c><00:36:50.080><c> the</c><00:36:50.260><c> application</c><00:36:50.650><c> images</c>

00:36:50.970 --> 00:36:50.980 align:start position:0%
JIT profiles the application images
 

00:36:50.980 --> 00:36:53.010 align:start position:0%
JIT profiles the application images
include<00:36:51.400><c> and</c><00:36:51.640><c> serialized</c><00:36:52.119><c> only</c><00:36:52.570><c> the</c><00:36:52.690><c> set</c><00:36:52.900><c> of</c>

00:36:53.010 --> 00:36:53.020 align:start position:0%
include and serialized only the set of
 

00:36:53.020 --> 00:36:54.750 align:start position:0%
include and serialized only the set of
classes<00:36:53.470><c> that</c><00:36:53.710><c> were</c><00:36:53.800><c> used</c><00:36:54.070><c> during</c><00:36:54.160><c> prior</c><00:36:54.520><c> and</c>

00:36:54.750 --> 00:36:54.760 align:start position:0%
classes that were used during prior and
 

00:36:54.760 --> 00:36:57.960 align:start position:0%
classes that were used during prior and
washes<00:36:55.060><c> of</c><00:36:55.150><c> the</c><00:36:55.240><c> application</c><00:36:56.910><c> using</c><00:36:57.910><c> the</c>

00:36:57.960 --> 00:36:57.970 align:start position:0%
washes of the application using the
 

00:36:57.970 --> 00:36:59.490 align:start position:0%
washes of the application using the
profile<00:36:58.359><c> is</c><00:36:58.510><c> also</c><00:36:58.720><c> key</c><00:36:58.900><c> to</c><00:36:58.930><c> having</c><00:36:59.170><c> a</c><00:36:59.290><c> small</c>

00:36:59.490 --> 00:36:59.500 align:start position:0%
profile is also key to having a small
 

00:36:59.500 --> 00:37:01.770 align:start position:0%
profile is also key to having a small
application<00:36:59.680><c> image</c><00:37:00.310><c> since</c><00:37:01.210><c> it</c><00:37:01.300><c> only</c><00:37:01.390><c> includes</c>

00:37:01.770 --> 00:37:01.780 align:start position:0%
application image since it only includes
 

00:37:01.780 --> 00:37:03.359 align:start position:0%
application image since it only includes
a<00:37:01.869><c> small</c><00:37:01.960><c> fraction</c><00:37:02.500><c> of</c><00:37:02.589><c> the</c><00:37:02.680><c> classes</c><00:37:03.099><c> inside</c>

00:37:03.359 --> 00:37:03.369 align:start position:0%
a small fraction of the classes inside
 

00:37:03.369 --> 00:37:06.240 align:start position:0%
a small fraction of the classes inside
of<00:37:03.490><c> the</c><00:37:03.580><c> actual</c><00:37:03.880><c> application</c><00:37:04.859><c> having</c><00:37:05.859><c> a</c><00:37:06.040><c> small</c>

00:37:06.240 --> 00:37:06.250 align:start position:0%
of the actual application having a small
 

00:37:06.250 --> 00:37:07.770 align:start position:0%
of the actual application having a small
application<00:37:06.730><c> image</c><00:37:06.940><c> is</c><00:37:07.089><c> important</c><00:37:07.599><c> because</c>

00:37:07.770 --> 00:37:07.780 align:start position:0%
application image is important because
 

00:37:07.780 --> 00:37:10.260 align:start position:0%
application image is important because
the<00:37:08.650><c> application</c><00:37:09.010><c> image</c><00:37:09.160><c> is</c><00:37:09.430><c> resident</c><00:37:09.940><c> in</c><00:37:10.060><c> RAM</c>

00:37:10.260 --> 00:37:10.270 align:start position:0%
the application image is resident in RAM
 

00:37:10.270 --> 00:37:11.339 align:start position:0%
the application image is resident in RAM
for<00:37:10.450><c> the</c><00:37:10.480><c> entire</c><00:37:10.750><c> lifetime</c><00:37:11.050><c> of</c><00:37:11.200><c> the</c>

00:37:11.339 --> 00:37:11.349 align:start position:0%
for the entire lifetime of the
 

00:37:11.349 --> 00:37:13.530 align:start position:0%
for the entire lifetime of the
application<00:37:11.830><c> as</c><00:37:12.040><c> well</c><00:37:12.700><c> as</c><00:37:12.849><c> larger</c><00:37:13.180><c> images</c>

00:37:13.530 --> 00:37:13.540 align:start position:0%
application as well as larger images
 

00:37:13.540 --> 00:37:17.810 align:start position:0%
application as well as larger images
take<00:37:13.690><c> longer</c><00:37:13.930><c> to</c><00:37:14.140><c> load</c><00:37:15.330><c> as</c><00:37:16.330><c> you</c><00:37:17.109><c> can</c><00:37:17.230><c> see</c><00:37:17.410><c> here</c>

00:37:17.810 --> 00:37:17.820 align:start position:0%
take longer to load as you can see here
 

00:37:17.820 --> 00:37:19.740 align:start position:0%
take longer to load as you can see here
application<00:37:18.820><c> images</c><00:37:19.119><c> have</c><00:37:19.240><c> a</c><00:37:19.270><c> very</c><00:37:19.540><c> low</c>

00:37:19.740 --> 00:37:19.750 align:start position:0%
application images have a very low
 

00:37:19.750 --> 00:37:21.300 align:start position:0%
application images have a very low
storage<00:37:19.990><c> requirement</c><00:37:20.589><c> this</c><00:37:20.800><c> is</c><00:37:20.920><c> mostly</c><00:37:21.160><c> due</c>

00:37:21.300 --> 00:37:21.310 align:start position:0%
storage requirement this is mostly due
 

00:37:21.310 --> 00:37:24.000 align:start position:0%
storage requirement this is mostly due
to<00:37:21.339><c> the</c><00:37:21.460><c> profile</c><00:37:22.260><c> for</c><00:37:23.260><c> the</c><00:37:23.349><c> four</c><00:37:23.530><c> apps</c><00:37:23.680><c> here</c>

00:37:24.000 --> 00:37:24.010 align:start position:0%
to the profile for the four apps here
 

00:37:24.010 --> 00:37:25.170 align:start position:0%
to the profile for the four apps here
the<00:37:24.190><c> storage</c><00:37:24.430><c> requirements</c><00:37:24.910><c> were</c><00:37:25.000><c> less</c><00:37:25.150><c> than</c>

00:37:25.170 --> 00:37:25.180 align:start position:0%
the storage requirements were less than
 

00:37:25.180 --> 00:37:28.530 align:start position:0%
the storage requirements were less than
two<00:37:25.420><c> megabytes</c><00:37:25.869><c> per</c><00:37:25.990><c> app</c><00:37:26.820><c> as</c><00:37:27.820><c> a</c><00:37:27.880><c> comparison</c><00:37:28.330><c> I</c>

00:37:28.530 --> 00:37:28.540 align:start position:0%
two megabytes per app as a comparison I
 

00:37:28.540 --> 00:37:30.000 align:start position:0%
two megabytes per app as a comparison I
put<00:37:28.690><c> the</c><00:37:28.810><c> application</c><00:37:28.930><c> to</c><00:37:29.500><c> compile</c><00:37:29.890><c> the</c>

00:37:30.000 --> 00:37:30.010 align:start position:0%
put the application to compile the
 

00:37:30.010 --> 00:37:31.920 align:start position:0%
put the application to compile the
application<00:37:30.040><c> code</c><00:37:30.670><c> with</c><00:37:31.089><c> the</c><00:37:31.330><c> profile</c><00:37:31.690><c> so</c>

00:37:31.920 --> 00:37:31.930 align:start position:0%
application code with the profile so
 

00:37:31.930 --> 00:37:33.390 align:start position:0%
application code with the profile so
this<00:37:32.050><c> is</c><00:37:32.109><c> already</c><00:37:32.440><c> reduced</c><00:37:32.560><c> compared</c><00:37:33.099><c> to</c><00:37:33.220><c> what</c>

00:37:33.390 --> 00:37:33.400 align:start position:0%
this is already reduced compared to what
 

00:37:33.400 --> 00:37:34.710 align:start position:0%
this is already reduced compared to what
application<00:37:33.820><c> code</c><00:37:34.000><c> sizes</c><00:37:34.359><c> would</c><00:37:34.450><c> have</c><00:37:34.599><c> been</c>

00:37:34.710 --> 00:37:34.720 align:start position:0%
application code sizes would have been
 

00:37:34.720 --> 00:37:38.520 align:start position:0%
application code sizes would have been
on<00:37:34.839><c> M</c><00:37:36.570><c> the</c><00:37:37.570><c> loading</c><00:37:37.810><c> process</c><00:37:37.990><c> and</c><00:37:38.440><c> application</c>

00:37:38.520 --> 00:37:38.530 align:start position:0%
on M the loading process and application
 

00:37:38.530 --> 00:37:41.700 align:start position:0%
on M the loading process and application
images<00:37:39.250><c> begins</c><00:37:39.730><c> with</c><00:37:40.660><c> the</c><00:37:40.869><c> application</c><00:37:41.500><c> class</c>

00:37:41.700 --> 00:37:41.710 align:start position:0%
images begins with the application class
 

00:37:41.710 --> 00:37:42.819 align:start position:0%
images begins with the application class
loader<00:37:41.980><c> creation</c>

00:37:42.819 --> 00:37:42.829 align:start position:0%
loader creation
 

00:37:42.829 --> 00:37:45.009 align:start position:0%
loader creation
when<00:37:43.789><c> the</c><00:37:43.880><c> application</c><00:37:44.299><c> class</c><00:37:44.509><c> loader</c><00:37:44.839><c> is</c>

00:37:45.009 --> 00:37:45.019 align:start position:0%
when the application class loader is
 

00:37:45.019 --> 00:37:47.919 align:start position:0%
when the application class loader is
created<00:37:45.999><c> we</c><00:37:46.999><c> load</c><00:37:47.239><c> the</c><00:37:47.359><c> application</c><00:37:47.479><c> image</c>

00:37:47.919 --> 00:37:47.929 align:start position:0%
created we load the application image
 

00:37:47.929 --> 00:37:50.699 align:start position:0%
created we load the application image
from<00:37:48.109><c> storage</c><00:37:48.529><c> and</c><00:37:48.650><c> decompress</c><00:37:49.279><c> it</c><00:37:49.309><c> into</c><00:37:50.029><c> RAM</c>

00:37:50.699 --> 00:37:50.709 align:start position:0%
from storage and decompress it into RAM
 

00:37:50.709 --> 00:37:53.259 align:start position:0%
from storage and decompress it into RAM
for<00:37:51.709><c> dynamically</c><00:37:52.160><c> loaded</c><00:37:52.429><c> Dex</c><00:37:52.640><c> files</c><00:37:52.910><c> we</c><00:37:53.089><c> also</c>

00:37:53.259 --> 00:37:53.269 align:start position:0%
for dynamically loaded Dex files we also
 

00:37:53.269 --> 00:37:55.059 align:start position:0%
for dynamically loaded Dex files we also
verify<00:37:53.779><c> that</c><00:37:53.839><c> the</c><00:37:54.019><c> class</c><00:37:54.199><c> letters</c><00:37:54.499><c> supported</c>

00:37:55.059 --> 00:37:55.069 align:start position:0%
verify that the class letters supported
 

00:37:55.069 --> 00:37:57.789 align:start position:0%
verify that the class letters supported
type<00:37:55.719><c> since</c><00:37:56.719><c> there</c><00:37:56.839><c> is</c><00:37:56.900><c> no</c><00:37:57.019><c> dependency</c><00:37:57.589><c> on</c>

00:37:57.789 --> 00:37:57.799 align:start position:0%
type since there is no dependency on
 

00:37:57.799 --> 00:38:00.009 align:start position:0%
type since there is no dependency on
from<00:37:58.309><c> the</c><00:37:58.459><c> application</c><00:37:59.059><c> compile</c><00:37:59.390><c> code</c><00:37:59.660><c> to</c><00:37:59.900><c> the</c>

00:38:00.009 --> 00:38:00.019 align:start position:0%
from the application compile code to the
 

00:38:00.019 --> 00:38:01.269 align:start position:0%
from the application compile code to the
image<00:38:00.289><c> it</c><00:38:00.439><c> means</c><00:38:00.619><c> that</c><00:38:00.739><c> we</c><00:38:00.799><c> can</c><00:38:00.920><c> reject</c><00:38:01.160><c> the</c>

00:38:01.269 --> 00:38:01.279 align:start position:0%
image it means that we can reject the
 

00:38:01.279 --> 00:38:03.069 align:start position:0%
image it means that we can reject the
image<00:38:01.579><c> so</c><00:38:02.089><c> the</c><00:38:02.329><c> class</c><00:38:02.509><c> loader</c><00:38:02.779><c> is</c><00:38:02.929><c> not</c>

00:38:03.069 --> 00:38:03.079 align:start position:0%
image so the class loader is not
 

00:38:03.079 --> 00:38:05.079 align:start position:0%
image so the class loader is not
supported<00:38:03.559><c> simply</c><00:38:04.309><c> reject</c><00:38:04.609><c> the</c><00:38:04.699><c> image</c><00:38:04.939><c> and</c>

00:38:05.079 --> 00:38:05.089 align:start position:0%
supported simply reject the image and
 

00:38:05.089 --> 00:38:09.339 align:start position:0%
supported simply reject the image and
resume<00:38:05.329><c> execution</c><00:38:07.959><c> here</c><00:38:08.959><c> are</c><00:38:09.079><c> some</c><00:38:09.199><c> results</c>

00:38:09.339 --> 00:38:09.349 align:start position:0%
resume execution here are some results
 

00:38:09.349 --> 00:38:10.900 align:start position:0%
resume execution here are some results
for<00:38:09.679><c> application</c><00:38:10.099><c> image</c><00:38:10.249><c> launch</c><00:38:10.699><c> time</c>

00:38:10.900 --> 00:38:10.910 align:start position:0%
for application image launch time
 

00:38:10.910 --> 00:38:12.669 align:start position:0%
for application image launch time
improvements<00:38:11.449><c> for</c><00:38:11.660><c> the</c><00:38:11.929><c> four</c><00:38:12.259><c> apps</c><00:38:12.410><c> that</c><00:38:12.619><c> I</c>

00:38:12.669 --> 00:38:12.679 align:start position:0%
improvements for the four apps that I
 

00:38:12.679 --> 00:38:15.009 align:start position:0%
improvements for the four apps that I
have<00:38:12.799><c> just</c><00:38:12.949><c> displayed</c><00:38:13.459><c> as</c><00:38:13.699><c> you</c><00:38:14.539><c> can</c><00:38:14.660><c> see</c><00:38:14.809><c> here</c>

00:38:15.009 --> 00:38:15.019 align:start position:0%
have just displayed as you can see here
 

00:38:15.019 --> 00:38:16.870 align:start position:0%
have just displayed as you can see here
there's<00:38:15.410><c> a</c><00:38:15.499><c> round</c><00:38:15.799><c> of</c><00:38:15.920><c> 5</c><00:38:16.069><c> to</c><00:38:16.219><c> 20%</c><00:38:16.489><c> improvement</c>

00:38:16.870 --> 00:38:16.880 align:start position:0%
there's a round of 5 to 20% improvement
 

00:38:16.880 --> 00:38:18.759 align:start position:0%
there's a round of 5 to 20% improvement
compared<00:38:17.539><c> to</c><00:38:17.569><c> profile</c><00:38:17.929><c> guided</c><00:38:18.289><c> compilation</c>

00:38:18.759 --> 00:38:18.769 align:start position:0%
compared to profile guided compilation
 

00:38:18.769 --> 00:38:25.559 align:start position:0%
compared to profile guided compilation
only<00:38:22.029><c> and</c><00:38:23.029><c> now</c><00:38:23.239><c> to</c><00:38:23.299><c> the</c><00:38:23.509><c> garbage</c><00:38:23.719><c> collector</c>

00:38:25.559 --> 00:38:25.569 align:start position:0%
only and now to the garbage collector
 

00:38:25.569 --> 00:38:27.880 align:start position:0%
only and now to the garbage collector
the<00:38:26.569><c> garbage</c><00:38:26.869><c> collector</c><00:38:27.199><c> has</c><00:38:27.319><c> not</c><00:38:27.439><c> changed</c><00:38:27.739><c> -</c>

00:38:27.880 --> 00:38:27.890 align:start position:0%
the garbage collector has not changed -
 

00:38:27.890 --> 00:38:30.519 align:start position:0%
the garbage collector has not changed -
Martians<00:38:28.249><c> for</c><00:38:28.369><c> last</c><00:38:28.519><c> IO</c><00:38:28.699><c> presentation</c><00:38:29.420><c> as</c><00:38:29.599><c> you</c>

00:38:30.519 --> 00:38:30.529 align:start position:0%
Martians for last IO presentation as you
 

00:38:30.529 --> 00:38:31.749 align:start position:0%
Martians for last IO presentation as you
can<00:38:30.650><c> see</c><00:38:30.829><c> here</c><00:38:31.039><c> we</c><00:38:31.189><c> were</c><00:38:31.249><c> already</c><00:38:31.369><c> in</c><00:38:31.579><c> pretty</c>

00:38:31.749 --> 00:38:31.759 align:start position:0%
can see here we were already in pretty
 

00:38:31.759 --> 00:38:34.630 align:start position:0%
can see here we were already in pretty
good<00:38:31.939><c> shape</c><00:38:31.999><c> back</c><00:38:32.390><c> then</c><00:38:33.309><c> there's</c><00:38:34.309><c> still</c><00:38:34.549><c> only</c>

00:38:34.630 --> 00:38:34.640 align:start position:0%
good shape back then there's still only
 

00:38:34.640 --> 00:38:36.339 align:start position:0%
good shape back then there's still only
one<00:38:34.939><c> short</c><00:38:35.209><c> GC</c><00:38:35.569><c> pause</c><00:38:35.809><c> and</c><00:38:36.049><c> the</c><00:38:36.109><c> garbage</c>

00:38:36.339 --> 00:38:36.349 align:start position:0%
one short GC pause and the garbage
 

00:38:36.349 --> 00:38:37.569 align:start position:0%
one short GC pause and the garbage
collector<00:38:36.619><c> was</c><00:38:36.739><c> high</c><00:38:36.859><c> throughput</c><00:38:37.130><c> since</c><00:38:37.459><c> it</c>

00:38:37.569 --> 00:38:37.579 align:start position:0%
collector was high throughput since it
 

00:38:37.579 --> 00:38:40.809 align:start position:0%
collector was high throughput since it
is<00:38:37.670><c> generational</c><00:38:39.069><c> there</c><00:38:40.069><c> have</c><00:38:40.189><c> been</c><00:38:40.249><c> a</c><00:38:40.309><c> few</c><00:38:40.400><c> GC</c>

00:38:40.809 --> 00:38:40.819 align:start position:0%
is generational there have been a few GC
 

00:38:40.819 --> 00:38:42.459 align:start position:0%
is generational there have been a few GC
changes<00:38:41.239><c> mostly</c><00:38:41.569><c> relaized</c><00:38:41.929><c> application</c>

00:38:42.459 --> 00:38:42.469 align:start position:0%
changes mostly relaized application
 

00:38:42.469 --> 00:38:44.919 align:start position:0%
changes mostly relaized application
images<00:38:42.769><c> and</c><00:38:42.949><c> class</c><00:38:43.309><c> unloading</c><00:38:43.849><c> however</c><00:38:44.779><c> these</c>

00:38:44.919 --> 00:38:44.929 align:start position:0%
images and class unloading however these
 

00:38:44.929 --> 00:38:47.259 align:start position:0%
images and class unloading however these
changes<00:38:44.989><c> do</c><00:38:45.439><c> not</c><00:38:45.559><c> have</c><00:38:45.769><c> our</c><00:38:46.160><c> DS</c><00:38:46.549><c> GC</c><00:38:46.819><c> changes</c><00:38:47.150><c> do</c>

00:38:47.259 --> 00:38:47.269 align:start position:0%
changes do not have our DS GC changes do
 

00:38:47.269 --> 00:38:50.640 align:start position:0%
changes do not have our DS GC changes do
not<00:38:47.420><c> have</c><00:38:47.539><c> substantial</c><00:38:48.140><c> performance</c><00:38:48.499><c> impact</c>

00:38:50.640 --> 00:38:50.650 align:start position:0%
not have substantial performance impact
 

00:38:50.650 --> 00:38:52.779 align:start position:0%
not have substantial performance impact
one<00:38:51.650><c> thing</c><00:38:51.799><c> that</c><00:38:51.920><c> has</c><00:38:52.009><c> improved</c><00:38:52.249><c> each</c><00:38:52.489><c> release</c>

00:38:52.779 --> 00:38:52.789 align:start position:0%
one thing that has improved each release
 

00:38:52.789 --> 00:38:57.219 align:start position:0%
one thing that has improved each release
is<00:38:53.029><c> allocation</c><00:38:53.509><c> time</c><00:38:55.329><c> with</c><00:38:56.329><c> L</c><00:38:56.569><c> we</c><00:38:56.900><c> introduced</c>

00:38:57.219 --> 00:38:57.229 align:start position:0%
is allocation time with L we introduced
 

00:38:57.229 --> 00:38:59.829 align:start position:0%
is allocation time with L we introduced
a<00:38:57.319><c> new</c><00:38:57.349><c> custom</c><00:38:57.890><c> thread-local</c><00:38:58.369><c> allocator</c><00:38:58.939><c> that</c>

00:38:59.829 --> 00:38:59.839 align:start position:0%
a new custom thread-local allocator that
 

00:38:59.839 --> 00:39:02.769 align:start position:0%
a new custom thread-local allocator that
reduced<00:39:00.170><c> a</c><00:39:00.289><c> lot</c><00:39:00.469><c> of</c><00:39:01.179><c> reduced</c><00:39:02.179><c> allocation</c><00:39:02.569><c> time</c>

00:39:02.769 --> 00:39:02.779 align:start position:0%
reduced a lot of reduced allocation time
 

00:39:02.779 --> 00:39:04.029 align:start position:0%
reduced a lot of reduced allocation time
substantially<00:39:03.499><c> by</c><00:39:03.650><c> avoiding</c>

00:39:04.029 --> 00:39:04.039 align:start position:0%
substantially by avoiding
 

00:39:04.039 --> 00:39:06.999 align:start position:0%
substantially by avoiding
synchronization<00:39:04.579><c> costs</c><00:39:05.029><c> in</c><00:39:05.929><c> M</c><00:39:06.410><c> we</c><00:39:06.709><c> removed</c>

00:39:06.999 --> 00:39:07.009 align:start position:0%
synchronization costs in M we removed
 

00:39:07.009 --> 00:39:08.559 align:start position:0%
synchronization costs in M we removed
all<00:39:07.160><c> the</c><00:39:07.189><c> compare</c><00:39:07.609><c> and</c><00:39:07.699><c> swap</c><00:39:07.759><c> operations</c><00:39:08.449><c> in</c>

00:39:08.559 --> 00:39:08.569 align:start position:0%
all the compare and swap operations in
 

00:39:08.569 --> 00:39:11.559 align:start position:0%
all the compare and swap operations in
the<00:39:08.660><c> allocation</c><00:39:08.839><c> common</c><00:39:09.380><c> case</c><00:39:10.059><c> finally</c><00:39:11.059><c> in</c><00:39:11.390><c> n</c>

00:39:11.559 --> 00:39:11.569 align:start position:0%
the allocation common case finally in n
 

00:39:11.569 --> 00:39:13.059 align:start position:0%
the allocation common case finally in n
the<00:39:11.900><c> allocation</c><00:39:12.319><c> common</c><00:39:12.619><c> case</c><00:39:12.769><c> has</c><00:39:12.949><c> been</c>

00:39:13.059 --> 00:39:13.069 align:start position:0%
the allocation common case has been
 

00:39:13.069 --> 00:39:14.910 align:start position:0%
the allocation common case has been
written<00:39:13.249><c> and</c><00:39:13.429><c> hand</c><00:39:13.699><c> optimized</c><00:39:14.179><c> assembly</c><00:39:14.539><c> code</c>

00:39:14.910 --> 00:39:14.920 align:start position:0%
written and hand optimized assembly code
 

00:39:14.920 --> 00:39:17.410 align:start position:0%
written and hand optimized assembly code
this<00:39:15.920><c> is</c><00:39:16.099><c> the</c><00:39:16.130><c> largest</c><00:39:16.459><c> speed</c><00:39:16.789><c> up</c><00:39:16.910><c> yet</c><00:39:17.089><c> at</c><00:39:17.239><c> over</c>

00:39:17.410 --> 00:39:17.420 align:start position:0%
this is the largest speed up yet at over
 

00:39:17.420 --> 00:39:21.039 align:start position:0%
this is the largest speed up yet at over
200<00:39:17.809><c> percent</c><00:39:17.900><c> start</c><00:39:18.380><c> to</c><00:39:18.469><c> M</c><00:39:19.719><c> combined</c><00:39:20.719><c> all</c>

00:39:21.039 --> 00:39:21.049 align:start position:0%
200 percent start to M combined all
 

00:39:21.049 --> 00:39:22.569 align:start position:0%
200 percent start to M combined all
these<00:39:21.259><c> improvements</c><00:39:21.650><c> mean</c><00:39:21.979><c> that</c><00:39:22.130><c> allocations</c>

00:39:22.569 --> 00:39:22.579 align:start position:0%
these improvements mean that allocations
 

00:39:22.579 --> 00:39:24.549 align:start position:0%
these improvements mean that allocations
are<00:39:22.640><c> now</c><00:39:22.759><c> around</c><00:39:22.969><c> 10x</c><00:39:23.449><c> faceted</c><00:39:23.929><c> KitKat</c><00:39:24.259><c> which</c>

00:39:24.549 --> 00:39:24.559 align:start position:0%
are now around 10x faceted KitKat which
 

00:39:24.559 --> 00:39:29.499 align:start position:0%
are now around 10x faceted KitKat which
was<00:39:24.709><c> dalvik</c><00:39:27.640><c> class</c><00:39:28.640><c> unloading</c><00:39:29.150><c> also</c>

00:39:29.499 --> 00:39:29.509 align:start position:0%
was dalvik class unloading also
 

00:39:29.509 --> 00:39:31.390 align:start position:0%
was dalvik class unloading also
introduced<00:39:29.929><c> an</c><00:39:30.049><c> N</c><00:39:30.170><c> is</c><00:39:30.349><c> a</c><00:39:30.410><c> way</c><00:39:30.709><c> to</c><00:39:30.769><c> reduce</c><00:39:31.069><c> ram</c>

00:39:31.390 --> 00:39:31.400 align:start position:0%
introduced an N is a way to reduce ram
 

00:39:31.400 --> 00:39:33.849 align:start position:0%
introduced an N is a way to reduce ram
for<00:39:31.670><c> modular</c><00:39:31.999><c> applications</c><00:39:32.679><c> basically</c><00:39:33.679><c> what</c>

00:39:33.849 --> 00:39:33.859 align:start position:0%
for modular applications basically what
 

00:39:33.859 --> 00:39:35.469 align:start position:0%
for modular applications basically what
this<00:39:33.979><c> means</c><00:39:34.039><c> is</c><00:39:34.489><c> that</c><00:39:34.519><c> classes</c><00:39:35.059><c> and</c><00:39:35.239><c> class</c>

00:39:35.469 --> 00:39:35.479 align:start position:0%
this means is that classes and class
 

00:39:35.479 --> 00:39:37.209 align:start position:0%
this means is that classes and class
loaders<00:39:35.779><c> can</c><00:39:36.019><c> be</c><00:39:36.140><c> freed</c><00:39:36.380><c> by</c><00:39:36.529><c> the</c><00:39:36.559><c> GC</c><00:39:37.009><c> when</c>

00:39:37.209 --> 00:39:37.219 align:start position:0%
loaders can be freed by the GC when
 

00:39:37.219 --> 00:39:39.459 align:start position:0%
loaders can be freed by the GC when
there<00:39:37.339><c> are</c><00:39:37.400><c> no</c><00:39:37.489><c> longer</c><00:39:37.670><c> used</c><00:39:37.999><c> in</c><00:39:38.469><c> previous</c>

00:39:39.459 --> 00:39:39.469 align:start position:0%
there are no longer used in previous
 

00:39:39.469 --> 00:39:41.679 align:start position:0%
there are no longer used in previous
Android<00:39:40.069><c> versions</c><00:39:40.429><c> these</c><00:39:41.179><c> were</c><00:39:41.359><c> held</c><00:39:41.539><c> live</c>

00:39:41.679 --> 00:39:41.689 align:start position:0%
Android versions these were held live
 

00:39:41.689 --> 00:39:42.999 align:start position:0%
Android versions these were held live
for<00:39:41.869><c> the</c><00:39:41.929><c> entire</c><00:39:42.199><c> lifetime</c><00:39:42.619><c> of</c><00:39:42.829><c> the</c>

00:39:42.999 --> 00:39:43.009 align:start position:0%
for the entire lifetime of the
 

00:39:43.009 --> 00:39:47.380 align:start position:0%
for the entire lifetime of the
application<00:39:45.579><c> for</c><00:39:46.579><c> class</c><00:39:46.759><c> hoping</c><00:39:46.999><c> to</c><00:39:47.119><c> occur</c>

00:39:47.380 --> 00:39:47.390 align:start position:0%
application for class hoping to occur
 

00:39:47.390 --> 00:39:49.029 align:start position:0%
application for class hoping to occur
all<00:39:47.630><c> the</c><00:39:47.689><c> classes</c><00:39:48.289><c> in</c><00:39:48.380><c> the</c><00:39:48.410><c> class</c><00:39:48.650><c> order</c><00:39:48.859><c> must</c>

00:39:49.029 --> 00:39:49.039 align:start position:0%
all the classes in the class order must
 

00:39:49.039 --> 00:39:50.529 align:start position:0%
all the classes in the class order must
no<00:39:49.130><c> longer</c><00:39:49.189><c> be</c><00:39:49.459><c> reachable</c><00:39:49.910><c> as</c><00:39:50.089><c> well</c><00:39:50.359><c> as</c><00:39:50.449><c> the</c>

00:39:50.529 --> 00:39:50.539 align:start position:0%
no longer be reachable as well as the
 

00:39:50.539 --> 00:39:53.169 align:start position:0%
no longer be reachable as well as the
class<00:39:50.689><c> letter</c><00:39:50.929><c> itself</c><00:39:51.279><c> when</c><00:39:52.279><c> the</c><00:39:52.309><c> GC</c><00:39:52.699><c> notices</c>

00:39:53.169 --> 00:39:53.179 align:start position:0%
class letter itself when the GC notices
 

00:39:53.179 --> 00:39:55.359 align:start position:0%
class letter itself when the GC notices
this<00:39:53.359><c> it</c><00:39:53.599><c> freezes</c><00:39:54.559><c> them</c><00:39:54.709><c> as</c><00:39:54.859><c> well</c><00:39:55.189><c> as</c><00:39:55.279><c> the</c>

00:39:55.359 --> 00:39:55.369 align:start position:0%
this it freezes them as well as the
 

00:39:55.369 --> 00:39:56.520 align:start position:0%
this it freezes them as well as the
associate

00:39:56.520 --> 00:39:56.530 align:start position:0%
associate
 

00:39:56.530 --> 00:39:59.290 align:start position:0%
associate
this<00:39:57.530><c> chart</c><00:39:57.770><c> demonstrates</c><00:39:57.920><c> just</c><00:39:58.400><c> a</c><00:39:58.760><c> bit</c><00:39:59.150><c> of</c>

00:39:59.290 --> 00:39:59.300 align:start position:0%
this chart demonstrates just a bit of
 

00:39:59.300 --> 00:40:01.210 align:start position:0%
this chart demonstrates just a bit of
how<00:39:59.780><c> the</c><00:39:59.840><c> class</c><00:40:00.109><c> loader</c><00:40:00.260><c> interacts</c><00:40:00.980><c> other</c>

00:40:01.210 --> 00:40:01.220 align:start position:0%
how the class loader interacts other
 

00:40:01.220 --> 00:40:06.010 align:start position:0%
how the class loader interacts other
components<00:40:01.700><c> and</c><00:40:01.790><c> retains</c><00:40:02.090><c> them</c><00:40:04.869><c> with</c><00:40:05.869><c> that</c>

00:40:06.010 --> 00:40:06.020 align:start position:0%
components and retains them with that
 

00:40:06.020 --> 00:40:09.520 align:start position:0%
components and retains them with that
off<00:40:06.260><c> the</c><00:40:06.440><c> nicolas</c><00:40:06.740><c> for</c><00:40:06.890><c> the</c><00:40:06.950><c> wrap-up</c><00:40:08.530><c> Thank</c>

00:40:09.520 --> 00:40:09.530 align:start position:0%
off the nicolas for the wrap-up Thank
 

00:40:09.530 --> 00:40:15.390 align:start position:0%
off the nicolas for the wrap-up Thank
You<00:40:09.619><c> Matthew</c>

00:40:15.390 --> 00:40:15.400 align:start position:0%
 
 

00:40:15.400 --> 00:40:18.490 align:start position:0%
 
alright<00:40:16.400><c> so</c><00:40:16.520><c> to</c><00:40:16.670><c> wrap</c><00:40:16.790><c> up</c><00:40:17.260><c> we've</c><00:40:18.260><c> shown</c><00:40:18.470><c> you</c>

00:40:18.490 --> 00:40:18.500 align:start position:0%
alright so to wrap up we've shown you
 

00:40:18.500 --> 00:40:20.820 align:start position:0%
alright so to wrap up we've shown you
all<00:40:18.740><c> the</c><00:40:18.859><c> features</c><00:40:18.980><c> we've</c><00:40:19.310><c> worked</c><00:40:19.490><c> on</c><00:40:19.670><c> for</c><00:40:20.090><c> n</c>

00:40:20.820 --> 00:40:20.830 align:start position:0%
all the features we've worked on for n
 

00:40:20.830 --> 00:40:23.950 align:start position:0%
all the features we've worked on for n
mainly<00:40:21.830><c> a</c><00:40:22.040><c> fascicle</c><00:40:22.550><c> pattern</c><00:40:22.880><c> up</c><00:40:23.480><c> to</c><00:40:23.690><c> 5x</c>

00:40:23.950 --> 00:40:23.960 align:start position:0%
mainly a fascicle pattern up to 5x
 

00:40:23.960 --> 00:40:26.950 align:start position:0%
mainly a fascicle pattern up to 5x
compared<00:40:24.560><c> to</c><00:40:24.710><c> previous</c><00:40:25.369><c> releases</c><00:40:25.640><c> a</c><00:40:25.970><c> faster</c>

00:40:26.950 --> 00:40:26.960 align:start position:0%
compared to previous releases a faster
 

00:40:26.960 --> 00:40:28.930 align:start position:0%
compared to previous releases a faster
intrapreneur<00:40:27.440><c> up</c><00:40:27.619><c> to</c><00:40:28.070><c> 3x</c><00:40:28.460><c> compared</c><00:40:28.849><c> to</c>

00:40:28.930 --> 00:40:28.940 align:start position:0%
intrapreneur up to 3x compared to
 

00:40:28.940 --> 00:40:31.900 align:start position:0%
intrapreneur up to 3x compared to
marshmallow<00:40:29.330><c> a</c><00:40:29.570><c> new</c><00:40:30.470><c> JIT</c><00:40:30.710><c> compiler</c><00:40:31.130><c> and</c><00:40:31.369><c> proof</c>

00:40:31.900 --> 00:40:31.910 align:start position:0%
marshmallow a new JIT compiler and proof
 

00:40:31.910 --> 00:40:34.390 align:start position:0%
marshmallow a new JIT compiler and proof
our<00:40:32.060><c> guide</c><00:40:32.240><c> computation</c><00:40:33.040><c> just</c><00:40:34.040><c> remove</c><00:40:34.369><c> that</c>

00:40:34.390 --> 00:40:34.400 align:start position:0%
our guide computation just remove that
 

00:40:34.400 --> 00:40:36.640 align:start position:0%
our guide computation just remove that
optimizing<00:40:35.060><c> Apsara</c><00:40:35.420><c> log</c><00:40:35.630><c> and</c><00:40:35.840><c> provide</c>

00:40:36.640 --> 00:40:36.650 align:start position:0%
optimizing Apsara log and provide
 

00:40:36.650 --> 00:40:39.970 align:start position:0%
optimizing Apsara log and provide
fastest<00:40:37.040><c> or</c><00:40:37.190><c> installs</c><00:40:38.710><c> applications</c><00:40:39.710><c> image</c>

00:40:39.970 --> 00:40:39.980 align:start position:0%
fastest or installs applications image
 

00:40:39.980 --> 00:40:43.300 align:start position:0%
fastest or installs applications image
for<00:40:40.490><c> faster</c><00:40:40.790><c> startup</c><00:40:41.090><c> and</c><00:40:42.250><c> faster</c><00:40:43.250><c> on</c>

00:40:43.300 --> 00:40:43.310 align:start position:0%
for faster startup and faster on
 

00:40:43.310 --> 00:40:46.210 align:start position:0%
for faster startup and faster on
occasions<00:40:44.470><c> you</c><00:40:45.470><c> can</c><00:40:45.500><c> actually</c><00:40:45.770><c> if</c><00:40:46.070><c> you're</c>

00:40:46.210 --> 00:40:46.220 align:start position:0%
occasions you can actually if you're
 

00:40:46.220 --> 00:40:47.980 align:start position:0%
occasions you can actually if you're
interested<00:40:46.550><c> in</c><00:40:46.609><c> all</c><00:40:46.790><c> that</c><00:40:46.940><c> sort</c><00:40:47.270><c> of</c><00:40:47.330><c> low-level</c>

00:40:47.980 --> 00:40:47.990 align:start position:0%
interested in all that sort of low-level
 

00:40:47.990 --> 00:40:53.650 align:start position:0%
interested in all that sort of low-level
stuff<00:40:48.380><c> follow</c><00:40:49.280><c> it</c><00:40:49.520><c> on</c><00:40:49.700><c> the</c><00:40:50.240><c> AOSP</c><00:40:52.660><c> website</c>

00:40:53.650 --> 00:40:53.660 align:start position:0%
stuff follow it on the AOSP website
 

00:40:53.660 --> 00:40:56.609 align:start position:0%
stuff follow it on the AOSP website
where<00:40:54.410><c> we</c><00:40:54.560><c> actually</c><00:40:54.859><c> do</c><00:40:55.010><c> all</c><00:40:55.190><c> development</c>

00:40:56.609 --> 00:40:56.619 align:start position:0%
where we actually do all development
 

00:40:56.619 --> 00:40:59.579 align:start position:0%
where we actually do all development
with<00:40:57.619><c> that</c><00:40:57.800><c> we'll</c><00:40:58.760><c> take</c><00:40:58.880><c> your</c><00:40:59.030><c> questions</c>

00:40:59.579 --> 00:40:59.589 align:start position:0%
with that we'll take your questions
 

00:40:59.589 --> 00:41:02.710 align:start position:0%
with that we'll take your questions
thank<00:41:00.589><c> you</c>

