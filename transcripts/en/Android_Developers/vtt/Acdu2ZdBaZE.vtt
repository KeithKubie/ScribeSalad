WEBVTT
Kind: captions
Language: en

00:00:03.127 --> 00:00:03.960
ANDREW BUNNER: Cool.

00:00:03.960 --> 00:00:05.126
Thanks everybody for coming.

00:00:08.505 --> 00:00:09.880
AKSHAY KANNAN:
Let's get started.

00:00:09.880 --> 00:00:11.213
Hi, everyone, I'm Akshay Kannan.

00:00:11.213 --> 00:00:12.709
ANDREW BUNNER:
I'm Andrew Bunner.

00:00:12.709 --> 00:00:14.250
AKSHAY KANNAN: And
in this talk we'll

00:00:14.250 --> 00:00:17.730
cover Nearby, a set of cross
platform APIs for devices

00:00:17.730 --> 00:00:22.320
to discover and communicate
with the things around them.

00:00:22.320 --> 00:00:25.390
We'll start by talking about
the Nearby Messages API, which

00:00:25.390 --> 00:00:28.277
lets devices find each
other and communicate simply

00:00:28.277 --> 00:00:30.610
by being near each other,
without having to be connected

00:00:30.610 --> 00:00:32.180
to the same Wi-Fi.

00:00:32.180 --> 00:00:35.030
Next, we'll talk about how
you can use that same API

00:00:35.030 --> 00:00:38.370
as our recommended way
to scan for BLE beacons,

00:00:38.370 --> 00:00:40.570
along with best practices
for things like background

00:00:40.570 --> 00:00:41.740
scanning.

00:00:41.740 --> 00:00:44.050
And finally, we'll
leave you with a preview

00:00:44.050 --> 00:00:46.190
of something new which
we're excited to unveil

00:00:46.190 --> 00:00:48.150
for the first time ever today.

00:00:48.150 --> 00:00:50.990
Let's get started.

00:00:50.990 --> 00:00:53.390
Our devices today have
made it easy to communicate

00:00:53.390 --> 00:00:55.290
with anyone, whether
they're right next

00:00:55.290 --> 00:00:57.680
to you or on the other
side of the world.

00:00:57.680 --> 00:00:59.600
However, a lot of
those interactions

00:00:59.600 --> 00:01:02.240
can feel cumbersome if
someone or something

00:01:02.240 --> 00:01:04.610
is right next to you.

00:01:04.610 --> 00:01:07.140
And often that's the case today.

00:01:07.140 --> 00:01:08.970
It takes several
steps, whether it's

00:01:08.970 --> 00:01:12.300
exchanging contact information,
scanning a QR code,

00:01:12.300 --> 00:01:15.250
or pairing via Bluetooth, just
to get some information over

00:01:15.250 --> 00:01:16.790
to a nearby device.

00:01:16.790 --> 00:01:18.690
And we believe this
shouldn't be the case.

00:01:18.690 --> 00:01:21.190
Ideally, you should be able
to just walk up to something

00:01:21.190 --> 00:01:22.632
and interact with
it the same way

00:01:22.632 --> 00:01:23.840
that we do in the real world.

00:01:27.180 --> 00:01:29.440
Physical awareness
can significantly

00:01:29.440 --> 00:01:31.390
improve the experiences
in our apps.

00:01:31.390 --> 00:01:34.230
Whether it's facilitating
device to device communication,

00:01:34.230 --> 00:01:36.620
real time collaboration,
or experiences

00:01:36.620 --> 00:01:38.600
that are triggered by a beacon.

00:01:38.600 --> 00:01:41.840
With Nearby we've created
a simple set of APIs

00:01:41.840 --> 00:01:45.887
for anyone to bring
proximity into their app.

00:01:45.887 --> 00:01:48.220
ANDREW BUNNER: So we've been
working towards this vision

00:01:48.220 --> 00:01:49.540
for awhile.

00:01:49.540 --> 00:01:51.570
In 2014 we launched
a feature called

00:01:51.570 --> 00:01:53.160
Guest Mode on Chromecast.

00:01:53.160 --> 00:01:55.730
Now in the past, you had to
be in the same Wi-Fi network

00:01:55.730 --> 00:01:56.906
in order to cast.

00:01:56.906 --> 00:01:58.280
But with Guest
Mode, you can just

00:01:58.280 --> 00:02:02.210
sit down, hit Cast, and put
your content on the big screen.

00:02:02.210 --> 00:02:04.540
Now to make this
possible, to prove

00:02:04.540 --> 00:02:06.750
that you're in the same
room as the cast device,

00:02:06.750 --> 00:02:08.690
we use a combination
of radio signals

00:02:08.690 --> 00:02:10.389
and an ultra sonic modem.

00:02:10.389 --> 00:02:12.590
And it's great when you're
over at a friend's house.

00:02:12.590 --> 00:02:14.870
Works on iOS, works on Android.

00:02:14.870 --> 00:02:17.710
And we would like more
cross device interactions

00:02:17.710 --> 00:02:21.110
to be as smooth as Guest Mode.

00:02:21.110 --> 00:02:23.390
So in 2015 we took
the technology

00:02:23.390 --> 00:02:26.180
that powers Guest Mode, and we
made it available via an API

00:02:26.180 --> 00:02:27.940
we call Nearby Messages.

00:02:27.940 --> 00:02:29.810
It's a simple,
publish subscribe API

00:02:29.810 --> 00:02:31.870
for message passing
between devices that

00:02:31.870 --> 00:02:34.110
are physically close together.

00:02:34.110 --> 00:02:37.440
It's available on Google Play
Services for Android and iOS

00:02:37.440 --> 00:02:39.410
via CocoaPod.

00:02:39.410 --> 00:02:42.000
Now because it's
cross platform, you

00:02:42.000 --> 00:02:44.080
don't have to segment
your user base.

00:02:44.080 --> 00:02:45.910
So that means Android
users as far back

00:02:45.910 --> 00:02:49.849
as Gingerbread can talk to
iOS users going back to iOS7.

00:02:49.849 --> 00:02:51.140
So we think that's pretty neat.

00:02:51.140 --> 00:02:53.460
There's a number of great
apps that are using it today.

00:02:53.460 --> 00:02:57.800
And more developers are
discovering it all the time.

00:02:57.800 --> 00:03:00.050
AKSHAY KANNAN: We'll soon
dive into the details of how

00:03:00.050 --> 00:03:02.250
you can call the Nearby
API, as well as how

00:03:02.250 --> 00:03:03.790
it works behind the scenes.

00:03:03.790 --> 00:03:06.850
But first, we want to show you
examples of the experiences

00:03:06.850 --> 00:03:09.680
that developers
have build with it.

00:03:09.680 --> 00:03:13.000
My favorite podcast app on the
Play Store this Pocket Casts.

00:03:13.000 --> 00:03:14.710
I found a great
podcast the other day

00:03:14.710 --> 00:03:16.400
that I wanted to
share with Andrew.

00:03:16.400 --> 00:03:18.840
Sharing typically takes me
through a list of contacts

00:03:18.840 --> 00:03:21.060
where I have to search
for and pick out Andrew,

00:03:21.060 --> 00:03:22.380
even though he's standing
right next to me.

00:03:22.380 --> 00:03:22.675
ANDREW BUNNER: (WHISPERS)
I'm right here.

00:03:22.675 --> 00:03:24.650
AKSHAY KANNAN: And I don't
already have Andrew's contact

00:03:24.650 --> 00:03:26.070
information, it's even worse.

00:03:26.070 --> 00:03:28.400
We have to exchange contact
information before being

00:03:28.400 --> 00:03:30.080
able to do anything.

00:03:30.080 --> 00:03:32.979
So instead Pocket Cast has
built a much more compelling

00:03:32.979 --> 00:03:35.020
experience for comparing
podcasts with the people

00:03:35.020 --> 00:03:36.532
around you using Nearby.

00:03:36.532 --> 00:03:37.990
Let's check out
what it looks like.

00:03:44.120 --> 00:03:46.780
So Andrew and I both swipe
over to the Nearby section

00:03:46.780 --> 00:03:47.860
of the app.

00:03:47.860 --> 00:03:49.650
And we tap Search.

00:03:49.650 --> 00:03:52.340
And at this point
Pocket Cast publishes

00:03:52.340 --> 00:03:54.974
each of our list of
podcasts over Nearby.

00:03:54.974 --> 00:03:56.640
And I get can see
Andrew has some pretty

00:03:56.640 --> 00:03:57.335
interesting podcasts.

00:03:57.335 --> 00:03:59.417
ANDREW BUNNER: We've got
the bases covered here,

00:03:59.417 --> 00:04:01.250
but I see you're missing
The Adventure Zone.

00:04:01.250 --> 00:04:01.877
It's hilarious.

00:04:01.877 --> 00:04:02.710
Highly recommend it.

00:04:02.710 --> 00:04:03.740
And fragmented.

00:04:03.740 --> 00:04:04.870
AKSHAY KANNAN: Awesome.

00:04:04.870 --> 00:04:08.200
All I have to do is tap,
and now I have them.

00:04:08.200 --> 00:04:12.610
Pocket Cast uses Nearby to make
it really easy to share content

00:04:12.610 --> 00:04:13.320
within their app.

00:04:16.690 --> 00:04:20.250
Another great example, Trello,
is a popular team collaboration

00:04:20.250 --> 00:04:21.970
tool that lets you
get things done

00:04:21.970 --> 00:04:23.584
with the people around you.

00:04:23.584 --> 00:04:25.000
Trello allows you
to create boards

00:04:25.000 --> 00:04:27.041
that give you a shared
perspective on a project's

00:04:27.041 --> 00:04:28.140
tasks.

00:04:28.140 --> 00:04:31.110
With Nearby Trello has made
it easy to quickly start up

00:04:31.110 --> 00:04:32.310
collaborations.

00:04:32.310 --> 00:04:34.876
With one tap you could
share a board nearby,

00:04:34.876 --> 00:04:36.250
making it available
to the people

00:04:36.250 --> 00:04:39.110
around you without having
to type in email addresses.

00:04:39.110 --> 00:04:41.470
The board is online,
so Trello can simply

00:04:41.470 --> 00:04:44.252
pass around a pointer to the
back end object over Nearby

00:04:44.252 --> 00:04:45.335
to enable this experience.

00:04:47.840 --> 00:04:50.610
Pocket Cast, Trello,
and several other apps

00:04:50.610 --> 00:04:53.010
are live on the Play
Store today using Nearby.

00:04:53.010 --> 00:04:56.420
So you can install them and try
to experience out for yourself.

00:04:56.420 --> 00:04:59.234
In fact, we launched this
API in July of last year.

00:04:59.234 --> 00:05:01.650
So some of you may already be
using it in your apps today.

00:05:04.410 --> 00:05:05.550
ANDREW BUNNER: All right.

00:05:05.550 --> 00:05:06.560
Thanks Akshay.

00:05:06.560 --> 00:05:08.070
I'm going to walk
you through how

00:05:08.070 --> 00:05:10.470
it works, what it
looks like in code,

00:05:10.470 --> 00:05:12.470
and then go into some
details on the permissions

00:05:12.470 --> 00:05:14.060
and the privacy.

00:05:14.060 --> 00:05:15.715
So let's start
with how it works.

00:05:18.670 --> 00:05:21.190
We've got these two calls,
publish and subscribe.

00:05:21.190 --> 00:05:22.800
They're for passing messages.

00:05:22.800 --> 00:05:25.400
But what actually happens?

00:05:25.400 --> 00:05:27.920
So when your app
calls Nearby, we

00:05:27.920 --> 00:05:30.790
allocate a short lived
pairing code to your device.

00:05:30.790 --> 00:05:32.210
And then we use a
variety of means

00:05:32.210 --> 00:05:35.760
to get that code across the air
gap to other nearby devices.

00:05:35.760 --> 00:05:38.010
And then any devices that
detect the same code,

00:05:38.010 --> 00:05:39.850
they can then exchange messages.

00:05:39.850 --> 00:05:42.600
So it's a little different
from traditional location

00:05:42.600 --> 00:05:45.370
in that it's very hard
to spoof these codes.

00:05:45.370 --> 00:05:48.360
Now by default, we use
a variety of tricks

00:05:48.360 --> 00:05:50.640
to get this code from
one phone to another.

00:05:50.640 --> 00:05:54.390
Bluetooth Classic, Bluetooth
Low Energy, and Ultrasound.

00:05:54.390 --> 00:05:56.280
Now using all three
of those helps

00:05:56.280 --> 00:05:59.080
insure that Nearby works across
just the widest possible range

00:05:59.080 --> 00:05:59.580
of devices.

00:06:02.440 --> 00:06:06.240
So both Bluetooth Classic
and Bluetooth Low Energy

00:06:06.240 --> 00:06:08.080
are 2.4 gigahertz radios.

00:06:08.080 --> 00:06:10.850
This is the same part
of the spectrum as Wi-Fi

00:06:10.850 --> 00:06:13.370
and old fashioned
cordless phones.

00:06:13.370 --> 00:06:16.600
And those radio waves
go through walls.

00:06:16.600 --> 00:06:18.850
One of the reasons Ultrasound
is an important part

00:06:18.850 --> 00:06:22.410
of our offering is that it
does not go through walls.

00:06:22.410 --> 00:06:24.140
And that privacy
mode kind of mirrors

00:06:24.140 --> 00:06:26.380
what people expect
in the real world.

00:06:26.380 --> 00:06:28.132
If I can see you
and talk to you,

00:06:28.132 --> 00:06:29.340
you can hear what I'm saying.

00:06:29.340 --> 00:06:31.960
But if you're in the next room,
maybe in the line outside,

00:06:31.960 --> 00:06:32.940
you can't.

00:06:32.940 --> 00:06:34.350
And that's very powerful.

00:06:34.350 --> 00:06:37.540
And it gives a sharing use
case a sense of privacy

00:06:37.540 --> 00:06:40.320
that's hard to achieve
with Bluetooth alone.

00:06:40.320 --> 00:06:43.180
And a side benefit
is that we found

00:06:43.180 --> 00:06:46.150
that using audio in this way,
it really does work just about

00:06:46.150 --> 00:06:46.860
everywhere.

00:06:46.860 --> 00:06:50.180
Every phone has a speaker,
every phone has a microphone.

00:06:50.180 --> 00:06:51.900
And it turns out
they all work pretty

00:06:51.900 --> 00:06:53.780
well in this part
of the spectrum.

00:06:53.780 --> 00:06:56.500
In fact, as we learned
working with Chromecast,

00:06:56.500 --> 00:06:58.640
and more recently,
Google Play Movies,

00:06:58.640 --> 00:07:02.320
televisions are also pretty good
at making sounds we can't hear.

00:07:02.320 --> 00:07:05.590
So it's quite versatile.

00:07:05.590 --> 00:07:08.440
This video that you see
over here on the side,

00:07:08.440 --> 00:07:12.660
this is a frequency domain
plot of our audio signal.

00:07:12.660 --> 00:07:15.470
That bump on the far
right, that's our data.

00:07:15.470 --> 00:07:18.410
It starts around 18.5 kilohertz.

00:07:18.410 --> 00:07:21.490
And it trails off
round 20.5 kilohertz.

00:07:21.490 --> 00:07:23.900
So technically, that's
near ultrasound.

00:07:23.900 --> 00:07:26.170
And incidentally,
this is a screenshot

00:07:26.170 --> 00:07:27.770
of an app, Speedy Spectrum.

00:07:27.770 --> 00:07:30.062
And we had to use this during
the development of Nearby

00:07:30.062 --> 00:07:32.436
because none of us could tell
if the phones were actually

00:07:32.436 --> 00:07:33.430
making any sounds.

00:07:33.430 --> 00:07:35.900
None of us could hear it.

00:07:35.900 --> 00:07:38.240
Another reason for
that is that the sound

00:07:38.240 --> 00:07:41.000
is coming out of these pretty
small speakers on a phone.

00:07:41.000 --> 00:07:44.470
And it's just not a very
high amplitude sound wave.

00:07:44.470 --> 00:07:45.310
And that's OK.

00:07:45.310 --> 00:07:47.130
We don't need much
energy in the sound

00:07:47.130 --> 00:07:49.850
in order to decode
it on the other side.

00:07:49.850 --> 00:07:53.860
So if we take this signal that
you see there and slowed it

00:07:53.860 --> 00:07:57.680
way down, basically shifting
into a range that you can hear,

00:07:57.680 --> 00:08:00.180
it would sound sort
of like a static hiss.

00:08:00.180 --> 00:08:02.880
And that's because it's
a spread spectrum signal.

00:08:02.880 --> 00:08:04.320
So here's how that works.

00:08:04.320 --> 00:08:06.230
We take our pairing
code, and then we

00:08:06.230 --> 00:08:09.840
use that to modulate some
prearranged static noise.

00:08:09.840 --> 00:08:12.726
And by encoding our
data inside that static

00:08:12.726 --> 00:08:15.500
we basically make our
modem robust to echoes

00:08:15.500 --> 00:08:16.600
and other interference.

00:08:16.600 --> 00:08:19.820
So it really does work
just about everywhere.

00:08:19.820 --> 00:08:21.770
So enough signal processing.

00:08:21.770 --> 00:08:23.590
Let's take a look
at some code and see

00:08:23.590 --> 00:08:25.000
how you can use all this.

00:08:25.000 --> 00:08:26.940
We're going to start
with the general use

00:08:26.940 --> 00:08:29.790
all the technology
sample on Android.

00:08:29.790 --> 00:08:30.640
And here it is.

00:08:30.640 --> 00:08:34.638
It's just these two calls,
publish and subscribe.

00:08:34.638 --> 00:08:36.179
You call publish to
make your message

00:08:36.179 --> 00:08:37.929
available to nearby devices.

00:08:37.929 --> 00:08:41.049
You can think of the message
as what your phone says.

00:08:41.049 --> 00:08:43.630
And then you call subscribe
to receive messages

00:08:43.630 --> 00:08:44.510
from a nearby device.

00:08:44.510 --> 00:08:46.514
That's how you listen.

00:08:46.514 --> 00:08:48.180
Now the message, it's
just a byte array.

00:08:48.180 --> 00:08:51.230
You can put whatever you want
in there with whatever encoding.

00:08:51.230 --> 00:08:54.660
So JSON, protocol buffers,
whatever's easiest.

00:08:54.660 --> 00:08:58.210
The only restriction is that has
to be less than 100 kilobytes.

00:08:58.210 --> 00:09:01.240
So that means it's good for
sending authorization tokens,

00:09:01.240 --> 00:09:04.990
or invites, or identifiers,
but not for larger content

00:09:04.990 --> 00:09:06.630
like images or movies.

00:09:06.630 --> 00:09:08.760
So if we go back to the
Pocket Cast example,

00:09:08.760 --> 00:09:10.710
they publish the
list of the podcasts,

00:09:10.710 --> 00:09:14.810
not the bytes of the
audio tracks themselves.

00:09:14.810 --> 00:09:16.240
And here's the iOS version.

00:09:16.240 --> 00:09:18.270
It's very similar.

00:09:18.270 --> 00:09:20.050
It's got square brackets.

00:09:20.050 --> 00:09:24.309
And it's got 100% of feature
parity and compatibility

00:09:24.309 --> 00:09:25.350
with the Android version.

00:09:25.350 --> 00:09:28.590
And we're very proud of that.

00:09:28.590 --> 00:09:31.870
Now this earshot feature,
this is something special.

00:09:31.870 --> 00:09:34.920
If you want to make your message
available only to devices

00:09:34.920 --> 00:09:37.490
in the same room,
this is how you do it.

00:09:37.490 --> 00:09:40.650
Now there's thousands of lines
of correlation math and signal

00:09:40.650 --> 00:09:42.110
processing, and under the hood.

00:09:42.110 --> 00:09:43.910
But you have to
worry about that.

00:09:43.910 --> 00:09:48.380
You just call set Distance
Type Earshot, and that's it.

00:09:48.380 --> 00:09:51.390
Very simple.

00:09:51.390 --> 00:09:54.710
Last, I want to talk about
privacy and transparency.

00:09:54.710 --> 00:09:56.720
So we think it's
important that a user know

00:09:56.720 --> 00:09:58.700
when an app is using
Nearby, and that they

00:09:58.700 --> 00:10:00.170
know what's actually happening.

00:10:00.170 --> 00:10:02.350
So before an app
can call Nearby,

00:10:02.350 --> 00:10:04.250
they have to get permission.

00:10:04.250 --> 00:10:06.030
So this is our runtime
permission dialog.

00:10:06.030 --> 00:10:08.360
And we're going to show this
when an app calls Nearby.

00:10:08.360 --> 00:10:12.380
It explains what radios and
what sensors we use and how.

00:10:12.380 --> 00:10:14.730
And in fact, tapping
on Learn More

00:10:14.730 --> 00:10:17.290
will give the user as
detailed an understanding

00:10:17.290 --> 00:10:19.740
of what's happening under
the hood as the developer

00:10:19.740 --> 00:10:21.190
reading our documentation.

00:10:21.190 --> 00:10:24.260
And that's on purpose
in both directions.

00:10:24.260 --> 00:10:26.270
We want the user to
be informed, and we

00:10:26.270 --> 00:10:29.900
want the developer to be able
to focus on their features.

00:10:29.900 --> 00:10:32.500
So it's basically-- this
dialogue, by the way,

00:10:32.500 --> 00:10:34.060
this is a once per app thing.

00:10:34.060 --> 00:10:35.850
So it's really similar
to Marshmallow's

00:10:35.850 --> 00:10:36.980
runtime permissions.

00:10:36.980 --> 00:10:39.460
We just took those rules
and back ported them

00:10:39.460 --> 00:10:41.660
to Gingerbread.

00:10:41.660 --> 00:10:43.330
And this is kind of
an important point,

00:10:43.330 --> 00:10:45.080
you don't have to
change your manifest.

00:10:45.080 --> 00:10:46.520
Because it's a
runtime permission,

00:10:46.520 --> 00:10:47.710
you don't have to
change your manifest.

00:10:47.710 --> 00:10:50.210
You can just add the feature
without worrying about breaking

00:10:50.210 --> 00:10:51.680
automatic updates.

00:10:51.680 --> 00:10:54.290
But because we are going
to show this dialogue,

00:10:54.290 --> 00:10:57.420
you want to have the user do
something explicit to access

00:10:57.420 --> 00:10:58.720
your Nearby feature.

00:10:58.720 --> 00:11:00.950
And that way, when
we show the dialogue,

00:11:00.950 --> 00:11:02.600
it's connected in
the user's minds,

00:11:02.600 --> 00:11:04.100
with the action
that they just took.

00:11:04.100 --> 00:11:06.520
So maybe have a special
screen like Pocket Cast,

00:11:06.520 --> 00:11:09.890
or a widget that turns
it on like Trello.

00:11:09.890 --> 00:11:12.110
So the user is in control.

00:11:12.110 --> 00:11:14.170
They're asked for
permission and context.

00:11:14.170 --> 00:11:15.760
And the app developer
doesn't have

00:11:15.760 --> 00:11:17.880
to worry about breaking
automatic updates.

00:11:17.880 --> 00:11:20.100
Oh, and there's one more thing.

00:11:20.100 --> 00:11:22.060
There's a notification
there you see.

00:11:22.060 --> 00:11:25.100
When an app has an active
publisher subscribe going,

00:11:25.100 --> 00:11:26.120
this shows up.

00:11:26.120 --> 00:11:28.126
And from there, the
user can hit Stop,

00:11:28.126 --> 00:11:29.750
or they can even
revoke the permission.

00:11:29.750 --> 00:11:31.030
So total control to the user.

00:11:33.990 --> 00:11:35.980
So we've just seen
how easy it is

00:11:35.980 --> 00:11:38.990
to peer to peer features
to your app with Nearby.

00:11:38.990 --> 00:11:41.770
I want to talk about
using Nearby with beacons.

00:11:41.770 --> 00:11:45.100
So beacons are these
simple transmitters.

00:11:45.100 --> 00:11:47.830
They're often disconnected
and running on a battery.

00:11:47.830 --> 00:11:49.760
And emit identifiers.

00:11:49.760 --> 00:11:51.830
These are 31 byte
strings that you

00:11:51.830 --> 00:11:54.900
can use to mark important
places or objects.

00:11:54.900 --> 00:11:58.040
And then your app and scan
and get these identifiers,

00:11:58.040 --> 00:12:00.940
and then figure out if the user
is near something of interest.

00:12:00.940 --> 00:12:03.650
There's a number of apps
that are doing this today.

00:12:03.650 --> 00:12:07.360
And generally they're using
the platform APIs directly,

00:12:07.360 --> 00:12:11.210
or they're using an open
source library on top.

00:12:11.210 --> 00:12:12.794
I'm going to try to
convince you-- now

00:12:12.794 --> 00:12:14.251
if your apps scans
for beacons, I'm

00:12:14.251 --> 00:12:15.920
going to try to
convince you to switch

00:12:15.920 --> 00:12:18.320
from whatever you're
doing now to using

00:12:18.320 --> 00:12:20.030
this new version of Nearby.

00:12:20.030 --> 00:12:22.020
And we've got several
reasons for this.

00:12:22.020 --> 00:12:24.300
And I think after
we share these,

00:12:24.300 --> 00:12:26.530
I hope you'll agree that
Nearby is a great way

00:12:26.530 --> 00:12:27.827
to interact with beacons.

00:12:27.827 --> 00:12:29.785
We really wanted to make
this worth your while.

00:12:29.785 --> 00:12:31.200
I think we did.

00:12:31.200 --> 00:12:33.340
So we've got three reasons.

00:12:33.340 --> 00:12:36.790
Let's start with this one.

00:12:36.790 --> 00:12:38.310
So this is for
developers who-- they

00:12:38.310 --> 00:12:40.300
want the app to
scan for beacons,

00:12:40.300 --> 00:12:43.430
but they've been afraid to add
the Bluetooth admin permission.

00:12:43.430 --> 00:12:46.910
Now we want users and developers
to have a consistent permission

00:12:46.910 --> 00:12:48.670
story around beacon scanning.

00:12:48.670 --> 00:12:50.530
And today that's
just not the case.

00:12:50.530 --> 00:12:52.770
On Marshmallow, you
can scan for beacons

00:12:52.770 --> 00:12:55.390
if you have access to
fine grained location.

00:12:55.390 --> 00:12:58.560
But on Lollipop and below,
you need the Bluetooth admin

00:12:58.560 --> 00:12:59.730
permission.

00:12:59.730 --> 00:13:01.790
And unless your app
was doing something

00:13:01.790 --> 00:13:03.874
with beacons from
the very beginning,

00:13:03.874 --> 00:13:05.540
you probably don't
have this permission.

00:13:05.540 --> 00:13:08.160
And adding it is going to
break your automatic updates.

00:13:08.160 --> 00:13:11.580
And that has real business
consequences for many of you.

00:13:11.580 --> 00:13:13.842
Also, we're not even
sure it makes sense.

00:13:13.842 --> 00:13:16.300
Bluetooth Admin actually let's
do a lot more than just scan

00:13:16.300 --> 00:13:17.860
for beacons.

00:13:17.860 --> 00:13:20.700
So with Nearby, we are
changing the rules.

00:13:20.700 --> 00:13:23.340
When your app scans for
beacons through Nearby,

00:13:23.340 --> 00:13:26.090
you only need access to
fine grained location

00:13:26.090 --> 00:13:27.690
on all platforms.

00:13:27.690 --> 00:13:29.530
So we took the Marshmallow
scanning rules,

00:13:29.530 --> 00:13:32.380
and we portered them back to
Jelly Bean MR2 when we first

00:13:32.380 --> 00:13:34.470
introduced beacon scanning.

00:13:34.470 --> 00:13:36.110
Again, this is an
important point.

00:13:36.110 --> 00:13:37.754
Most apps will be
able to add support

00:13:37.754 --> 00:13:39.920
for beacon scanning without
updating their manifest.

00:13:42.790 --> 00:13:44.510
The second reason
is you're probably

00:13:44.510 --> 00:13:48.357
going to get more scans for
free just by using Nearby.

00:13:48.357 --> 00:13:50.440
I'm going to explain kind
of with an analogy here,

00:13:50.440 --> 00:13:53.400
and I hope you'll
see where it's going.

00:13:53.400 --> 00:13:55.540
So let's take Wi-Fi.

00:13:55.540 --> 00:13:58.390
Now, if you use the
platform's Wi-Fi manager,

00:13:58.390 --> 00:14:01.185
you can passively listen
for scan results that

00:14:01.185 --> 00:14:02.690
are triggered by other apps.

00:14:02.690 --> 00:14:06.280
So you can kind of piggy back
on the scans that they initiate.

00:14:06.280 --> 00:14:09.350
But BLE on the platform
has historically

00:14:09.350 --> 00:14:10.460
worked differently.

00:14:10.460 --> 00:14:13.170
Each app has to trigger a
scan, and then only that app

00:14:13.170 --> 00:14:15.280
sees the results of that scan.

00:14:15.280 --> 00:14:19.810
But when you scan for beacons
through Nearby Subscribe,

00:14:19.810 --> 00:14:22.560
we will do a scan every
time the screen turns on

00:14:22.560 --> 00:14:26.260
and all the apps using Nearby
will benefit from that scan.

00:14:26.260 --> 00:14:30.380
We'll route any beacons matching
your app's filter over to you.

00:14:30.380 --> 00:14:33.730
And if an app explicitly
triggers a scan through Nearby,

00:14:33.730 --> 00:14:37.052
again, all the apps that are
using Nearby will benefit.

00:14:37.052 --> 00:14:38.510
All you have to do
is tell us which

00:14:38.510 --> 00:14:40.490
beacons you're looking
for ahead of time,

00:14:40.490 --> 00:14:42.400
and then we'll route beacons
matching that filter over

00:14:42.400 --> 00:14:42.900
to your app.

00:14:42.900 --> 00:14:45.390
And you'll get to
process those sightings.

00:14:45.390 --> 00:14:47.660
Now there's one more
important trigger

00:14:47.660 --> 00:14:51.070
that I wanted to mention here,
and that's location history.

00:14:51.070 --> 00:14:53.590
If the user has Location
History enabled,

00:14:53.590 --> 00:14:57.050
that service will do BLE
scans in the background

00:14:57.050 --> 00:14:58.290
throughout the day.

00:14:58.290 --> 00:15:00.494
And if it finds anything
matching your app's filter,

00:15:00.494 --> 00:15:02.160
again, we're going
to route them to you.

00:15:02.160 --> 00:15:04.920
And you'll get to
process those beacons.

00:15:04.920 --> 00:15:07.580
So more free scans
when use Nearby.

00:15:07.580 --> 00:15:11.310
The last reason is for folks
doing background scans.

00:15:11.310 --> 00:15:13.660
Now if you're doing
background scans today,

00:15:13.660 --> 00:15:16.492
chances are that you're
scheduling alarms,

00:15:16.492 --> 00:15:17.950
you're grabbing
[INAUDIBLE] clocks,

00:15:17.950 --> 00:15:19.830
you're using the Job
Scheduler, you're trying

00:15:19.830 --> 00:15:21.550
to run a background service.

00:15:21.550 --> 00:15:22.840
It's pretty involved.

00:15:22.840 --> 00:15:25.450
It's pretty difficult.
And it's actually getting

00:15:25.450 --> 00:15:27.720
even harder with Android N.

00:15:27.720 --> 00:15:31.740
But if you use Nearby and
we find a beacon of yours,

00:15:31.740 --> 00:15:34.710
we will wake your app up
to tell you about it, even

00:15:34.710 --> 00:15:37.550
if your app has been killed.

00:15:37.550 --> 00:15:38.050
Yes.

00:15:38.050 --> 00:15:39.410
That's my one applause line.

00:15:39.410 --> 00:15:41.386
Thank you.

00:15:41.386 --> 00:15:42.760
So this makes
background scanning

00:15:42.760 --> 00:15:46.370
with Nearby just a whole lot
simpler than the alternative.

00:15:46.370 --> 00:15:48.820
So again, if any app,
or location history,

00:15:48.820 --> 00:15:52.300
or that screen on scan,
any of those scans

00:15:52.300 --> 00:15:53.870
find a beacon for
your app, we're

00:15:53.870 --> 00:15:56.180
going to relaunch your
app via pending intent,

00:15:56.180 --> 00:15:58.940
and you'll get to
process the beacon.

00:15:58.940 --> 00:16:02.280
So for all these reasons,
Nearby is our recommended API

00:16:02.280 --> 00:16:03.810
for interacting with beacons.

00:16:03.810 --> 00:16:07.570
And by itself, I think those
three represent a pretty

00:16:07.570 --> 00:16:09.850
compelling argument to switch.

00:16:09.850 --> 00:16:13.400
But just in case you're not
convinced, there's more coming.

00:16:13.400 --> 00:16:16.010
So we're going to be adding some
features in the coming weeks.

00:16:16.010 --> 00:16:19.220
In particular, you'll get
access to the raw ibeacon

00:16:19.220 --> 00:16:21.090
and Eddystone frames
directly, you'll

00:16:21.090 --> 00:16:23.610
be able to use your own
beacon cloud registry,

00:16:23.610 --> 00:16:25.770
and you'll have
distance callbacks.

00:16:25.770 --> 00:16:27.700
So we're really improving
this all the time.

00:16:27.700 --> 00:16:29.825
And there will be samples
for all this up on GitHub

00:16:29.825 --> 00:16:31.370
once the SDK drops.

00:16:31.370 --> 00:16:34.330
Again, we think it's a win for
both users and for you guys,

00:16:34.330 --> 00:16:36.050
for developers.

00:16:36.050 --> 00:16:37.810
If you want to go
deep on beacons,

00:16:37.810 --> 00:16:41.960
there's a talk happening
right after this in Stage 4

00:16:41.960 --> 00:16:45.110
about the Google
Beacon Platform.

00:16:45.110 --> 00:16:47.010
Deep dive on the
proximity beacon service.

00:16:50.560 --> 00:16:52.200
So that's Nearby Messages.

00:16:52.200 --> 00:16:55.050
It's available today on Google
Play Services for Android,

00:16:55.050 --> 00:16:57.129
and on iOS VR CocoaPod.

00:16:57.129 --> 00:16:58.670
And we're improving
it every release.

00:16:58.670 --> 00:17:00.785
So really, whether
you're using beacons

00:17:00.785 --> 00:17:02.410
or you're doing
something peer to peer,

00:17:02.410 --> 00:17:04.910
it's just a great way to add
proximity features to your app.

00:17:08.915 --> 00:17:10.960
AKSHAY KANNAN: Thanks, Andrew.

00:17:10.960 --> 00:17:12.480
Now on to something new.

00:17:12.480 --> 00:17:15.430
As you've seen, Nearby
messages gives apps

00:17:15.430 --> 00:17:18.650
a powerful set of APIs to
interact with nearby devices

00:17:18.650 --> 00:17:19.880
and beacons.

00:17:19.880 --> 00:17:22.150
But of course this
requires the app

00:17:22.150 --> 00:17:25.050
to be installed in
the first place.

00:17:25.050 --> 00:17:26.890
What if you're at a
place, but you don't yet

00:17:26.890 --> 00:17:29.320
have the app that lets
you interact with it.

00:17:29.320 --> 00:17:30.809
Or perhaps there's
a mobile website

00:17:30.809 --> 00:17:32.350
that lets you interact
with something

00:17:32.350 --> 00:17:34.050
when you're physically there.

00:17:34.050 --> 00:17:37.550
There are often proximity driven
features in apps or websites

00:17:37.550 --> 00:17:40.150
that can make our
users lives better,

00:17:40.150 --> 00:17:44.020
but not if you don't
even know about them.

00:17:44.020 --> 00:17:45.940
We want to solve this problem.

00:17:45.940 --> 00:17:48.890
So today we're announcing
a new feature in Android

00:17:48.890 --> 00:17:52.030
for you to know about relevant
Nearby experiences, surface

00:17:52.030 --> 00:17:55.490
through BLE from the
things around you.

00:17:55.490 --> 00:17:58.820
And we're calling this
Nearby Notifications.

00:17:58.820 --> 00:18:01.210
So how does it work?

00:18:01.210 --> 00:18:03.220
Let's say you purchase
a brand new Chromecast.

00:18:03.220 --> 00:18:04.970
Today, the first thing
that you have to do

00:18:04.970 --> 00:18:07.670
is to go to the Play Store,
search for the Chromecast app,

00:18:07.670 --> 00:18:08.970
find it, download it.

00:18:08.970 --> 00:18:11.970
All before you can start
using this brand new device.

00:18:11.970 --> 00:18:15.720
Imagine instead if any smart
device you purchase could

00:18:15.720 --> 00:18:18.020
broadcast the set up
experience for it,

00:18:18.020 --> 00:18:20.610
and with Nearby, you could
get the companion app

00:18:20.610 --> 00:18:25.370
and pair with it simply
by tapping a notification.

00:18:25.370 --> 00:18:26.820
Another example.

00:18:26.820 --> 00:18:28.940
I recently flew
into SFO from abroad

00:18:28.940 --> 00:18:30.920
and had to go
through US Customs.

00:18:30.920 --> 00:18:33.360
I installed this app,
Airside Mobile Passport,

00:18:33.360 --> 00:18:36.430
which allowed me to go through
a much faster line dedicated

00:18:36.430 --> 00:18:39.120
to mobile passport users.

00:18:39.120 --> 00:18:40.910
With Nearby, my
phone could tell me

00:18:40.910 --> 00:18:42.650
that that experience
was available

00:18:42.650 --> 00:18:46.880
and let me install the
app with a single tap.

00:18:46.880 --> 00:18:49.210
And another more
everyday example.

00:18:49.210 --> 00:18:50.910
The target app
has a feature that

00:18:50.910 --> 00:18:54.377
lets you scan a product in the
store and see online reviews.

00:18:54.377 --> 00:18:56.710
It's an easy way to get more
information about something

00:18:56.710 --> 00:18:58.770
before you put in your cart.

00:18:58.770 --> 00:19:01.197
And it's extremely relevant
when you're at a store,

00:19:01.197 --> 00:19:02.780
but it's tricky to
get to this feature

00:19:02.780 --> 00:19:04.310
if you don't know about it.

00:19:04.310 --> 00:19:08.320
Once again, Nearby can help.

00:19:08.320 --> 00:19:11.770
We aim the solve discovery
in a quiet but helpful way.

00:19:11.770 --> 00:19:15.850
So on Android, we're introducing
Nearby not just as an API,

00:19:15.850 --> 00:19:18.760
but as a core user facing
feature, and creating

00:19:18.760 --> 00:19:20.600
new ways for
developers to expose

00:19:20.600 --> 00:19:23.522
relevant experiences over BLE.

00:19:23.522 --> 00:19:24.980
You can look for
this in the coming

00:19:24.980 --> 00:19:28.290
weeks as part of an update
to Google Play Services.

00:19:28.290 --> 00:19:29.900
This will work on
devices running

00:19:29.900 --> 00:19:31.770
Jelly Bean MR2 and above.

00:19:34.520 --> 00:19:37.080
Here are some examples
of what it looks like.

00:19:37.080 --> 00:19:39.780
When Bluetooth and
location are turned on,

00:19:39.780 --> 00:19:43.480
we'll show you relevant content
from the beacons around you.

00:19:43.480 --> 00:19:46.970
So what does this look
like in the real world?

00:19:46.970 --> 00:19:48.640
Let's go back to
the Target example

00:19:48.640 --> 00:19:50.081
and imagine that we're there.

00:19:50.081 --> 00:19:51.830
I've been running low
on shaving supplies,

00:19:51.830 --> 00:19:53.434
so I'm here to stock up.

00:19:53.434 --> 00:19:54.850
I'm in the aftershave
aisle trying

00:19:54.850 --> 00:19:57.360
to find the perfect product,
and as I'm looking around,

00:19:57.360 --> 00:19:59.210
one of them catches my eye.

00:19:59.210 --> 00:20:02.150
Caffeinated aftershave.

00:20:02.150 --> 00:20:03.990
Could this be too
good to be true?

00:20:03.990 --> 00:20:06.024
I need to know if
this actually works.

00:20:06.024 --> 00:20:08.315
So I decide to pull out my
phone and check out reviews.

00:20:12.770 --> 00:20:17.130
Now normally I'd have to type
in the name of this product

00:20:17.130 --> 00:20:18.690
and search reviews about it.

00:20:18.690 --> 00:20:21.430
But this time Target
has associated their app

00:20:21.430 --> 00:20:23.150
with a Beacon in the store.

00:20:23.150 --> 00:20:24.800
When I swipe down
on Notifications,

00:20:24.800 --> 00:20:29.800
I see Target, Scan
Barcodes, See Reviews.

00:20:29.800 --> 00:20:31.900
At this point, all
I had to do was

00:20:31.900 --> 00:20:33.790
turn my screen on in the store.

00:20:33.790 --> 00:20:36.790
The only requirement for me to
see this was to have location

00:20:36.790 --> 00:20:38.550
and Bluetooth enabled.

00:20:38.550 --> 00:20:41.930
My phone doesn't buzz, but when
I swipe down on Notifications,

00:20:41.930 --> 00:20:44.240
I get this helpful hint.

00:20:44.240 --> 00:20:46.260
Tapping on this
notification launches

00:20:46.260 --> 00:20:48.780
me directly into the
barcode scanning experience

00:20:48.780 --> 00:20:50.480
in the Target app.

00:20:50.480 --> 00:20:52.031
If I didn't have
the app installed,

00:20:52.031 --> 00:20:53.530
Target could have
either launched me

00:20:53.530 --> 00:20:56.570
to a mobile website, or
directly to their app installer,

00:20:56.570 --> 00:20:58.640
which we'll talk
more about in a bit.

00:20:58.640 --> 00:21:00.370
And now I can scan the barcode.

00:21:03.590 --> 00:21:09.760
[BLEEP] And I can see
that it costs $5.49.

00:21:09.760 --> 00:21:12.529
I can tap up to Reviews.

00:21:12.529 --> 00:21:14.820
I could see that people have
been pretty happy with it.

00:21:14.820 --> 00:21:19.270
It has a 5 star review, and
the reviews look pretty good.

00:21:19.270 --> 00:21:23.460
So I'm convinced and I decide
to throw it into my cart.

00:21:23.460 --> 00:21:27.050
So this is just one example
of the many experiences

00:21:27.050 --> 00:21:31.490
that you can associate with a
place or a device using Nearby.

00:21:31.490 --> 00:21:34.590
Nearby introduces an entirely
new surface to Android

00:21:34.590 --> 00:21:36.570
for proximity driven discovery.

00:21:36.570 --> 00:21:39.990
And we're excited to see
what you'll build with it.

00:21:39.990 --> 00:21:42.452
So how do you get started?

00:21:42.452 --> 00:21:44.160
There are three types
of content that you

00:21:44.160 --> 00:21:45.800
can attach to your Beacon.

00:21:45.800 --> 00:21:49.660
First, we support
simple HTTPS web URLs.

00:21:49.660 --> 00:21:52.750
These can point to websites
or to instant apps, which

00:21:52.750 --> 00:21:55.600
you heard about in the
keynote earlier today.

00:21:55.600 --> 00:21:58.250
Second, we support
intents into your app,

00:21:58.250 --> 00:22:01.290
along with a URL fallback
to the mobile web for users

00:22:01.290 --> 00:22:03.830
who don't have
your app installed.

00:22:03.830 --> 00:22:07.490
And third, we're experimenting
with direct app installs.

00:22:07.490 --> 00:22:08.850
We're tapping the notification.

00:22:08.850 --> 00:22:11.510
We'll let you install the
app even if it's not there,

00:22:11.510 --> 00:22:13.570
and then launch you into
the intended experience.

00:22:13.570 --> 00:22:17.040
ANDREW BUNNER: That's our other
applause line, by the way.

00:22:17.040 --> 00:22:19.980
[APPLAUSE]

00:22:19.980 --> 00:22:21.600
AKSHAY KANNAN: It's
still early days

00:22:21.600 --> 00:22:23.724
and we want to be careful
to hold a user experience

00:22:23.724 --> 00:22:24.390
bar high.

00:22:24.390 --> 00:22:26.760
So we have a set of
criteria for early inclusion

00:22:26.760 --> 00:22:28.539
in our direct app
install program,

00:22:28.539 --> 00:22:30.580
which we'll talk more
about in the coming slides.

00:22:33.360 --> 00:22:35.215
So that's Nearby in a nutshell.

00:22:35.215 --> 00:22:36.590
There are several
verticals where

00:22:36.590 --> 00:22:39.820
we can help users discover
relevant experiences, travel,

00:22:39.820 --> 00:22:43.050
museum, sports,
retail, smart devices,

00:22:43.050 --> 00:22:45.130
and I'm sure you all find more.

00:22:45.130 --> 00:22:46.730
Now I'll hand things
over to Andrew

00:22:46.730 --> 00:22:49.710
who will talk more about our
criteria for wait-listed app

00:22:49.710 --> 00:22:52.120
installs, along with the
details of how you can

00:22:52.120 --> 00:22:54.450
tie your feature to a Beacon.

00:22:54.450 --> 00:22:56.810
Thanks, Akshay.

00:22:56.810 --> 00:22:58.530
ANDREW BUNNER: So we
expect many of you,

00:22:58.530 --> 00:23:01.120
many developers to be interested
in this app install feature.

00:23:01.120 --> 00:23:03.856
We recognize that installs
are very valuable.

00:23:03.856 --> 00:23:05.730
But we want to be careful
to balance the user

00:23:05.730 --> 00:23:08.420
experience against the
overhead of an install.

00:23:08.420 --> 00:23:10.990
The instant apps that
you heard about earlier,

00:23:10.990 --> 00:23:12.800
those will change that equation.

00:23:12.800 --> 00:23:15.540
But for now, for the
traditional app install,

00:23:15.540 --> 00:23:17.390
we're evaluating
partner integrations

00:23:17.390 --> 00:23:19.545
against some pretty
specific criteria.

00:23:19.545 --> 00:23:22.250
And these criteria could
evolve, but in the interest

00:23:22.250 --> 00:23:24.150
of transparency, we
want to share with you

00:23:24.150 --> 00:23:26.080
what we're looking for.

00:23:26.080 --> 00:23:28.790
So the first and the
most important criteria

00:23:28.790 --> 00:23:32.440
is your app has a feature
that's relevant at a place

00:23:32.440 --> 00:23:33.700
or near device.

00:23:33.700 --> 00:23:35.590
If the feature's not
contextually relevant,

00:23:35.590 --> 00:23:38.170
then it's just not for Nearby.

00:23:38.170 --> 00:23:40.550
The second is that
we want features

00:23:40.550 --> 00:23:42.620
that let a user do something.

00:23:42.620 --> 00:23:46.160
So not just informational,
will but action-oriented.

00:23:46.160 --> 00:23:49.190
And then a third is we're
looking at how broadly relevant

00:23:49.190 --> 00:23:52.130
is this notification to all
the people receiving it?

00:23:52.130 --> 00:23:55.380
So for example, if you
manufacture a smart device,

00:23:55.380 --> 00:23:58.670
like maybe a smart
fridge, and that device

00:23:58.670 --> 00:24:01.940
requires a companion app as
part of its set up experience,

00:24:01.940 --> 00:24:05.070
than that app is super relevant
to the device's out of box

00:24:05.070 --> 00:24:06.350
experience.

00:24:06.350 --> 00:24:07.710
It is needed.

00:24:07.710 --> 00:24:11.720
Now other sort of ideas
are a little bit harder

00:24:11.720 --> 00:24:12.870
for us to evaluate.

00:24:12.870 --> 00:24:15.680
So for example, if you
think about maybe sale

00:24:15.680 --> 00:24:17.670
information at a store.

00:24:17.670 --> 00:24:20.330
Does everyone in the store care
that the sale is happening?

00:24:20.330 --> 00:24:22.060
It's a little bit
hard for us to say.

00:24:22.060 --> 00:24:25.300
And so for now, we're erring
on the side of caution.

00:24:25.300 --> 00:24:28.430
And the fourth is really a kind
of a technical consideration.

00:24:28.430 --> 00:24:31.320
You want to be sure that
the user can watch directly

00:24:31.320 --> 00:24:34.100
into your promoted feature, like
we did with Target and the bar

00:24:34.100 --> 00:24:35.180
code scanner.

00:24:35.180 --> 00:24:37.010
If you can't, then
that's something

00:24:37.010 --> 00:24:40.470
you'd want to address before
you apply to this program.

00:24:40.470 --> 00:24:42.820
So I'm going to take you
through a few of our partners

00:24:42.820 --> 00:24:47.320
to give you a sense of the
ecosystem that we're building.

00:24:47.320 --> 00:24:49.242
So I'm going to
start with United.

00:24:49.242 --> 00:24:50.700
This app has many
features, but I'm

00:24:50.700 --> 00:24:52.700
going to zero in
on just this one.

00:24:52.700 --> 00:24:55.600
United offers free in flight
movies and entertainment

00:24:55.600 --> 00:24:56.910
through their app.

00:24:56.910 --> 00:24:59.380
But you have to have the app.

00:24:59.380 --> 00:25:02.442
And speaking from personal
experience, if you take off

00:25:02.442 --> 00:25:04.150
and you've forgotten
to install this app,

00:25:04.150 --> 00:25:06.440
your children will be
disappointed in you.

00:25:06.440 --> 00:25:09.200
So reminding the user to
install it when they're still

00:25:09.200 --> 00:25:12.120
waiting at the departure gate,
it's both contextually relevant

00:25:12.120 --> 00:25:14.170
and it's very useful.

00:25:14.170 --> 00:25:16.640
Here's another one that's a
combination of both device

00:25:16.640 --> 00:25:17.870
and place.

00:25:17.870 --> 00:25:21.180
So at many CVS pharmacies
they have a photo kiosk.

00:25:21.180 --> 00:25:24.450
And this lets you print
photos right from your phone.

00:25:24.450 --> 00:25:27.290
And compared to uploading
photos to a website,

00:25:27.290 --> 00:25:30.590
and waiting for it in the
mail, it's pretty magical.

00:25:30.590 --> 00:25:34.150
But the process is even more
magical if you have the app.

00:25:34.150 --> 00:25:35.900
And that's because
the app lets you

00:25:35.900 --> 00:25:38.970
establish a peer to peer Wi-Fi
connection with the kiosk.

00:25:38.970 --> 00:25:42.390
And it makes the photo selection
process much, much faster.

00:25:42.390 --> 00:25:44.640
So here again, there's
something that the user can do,

00:25:44.640 --> 00:25:47.380
and it's relevant at a place.

00:25:47.380 --> 00:25:48.560
So one more.

00:25:48.560 --> 00:25:49.210
The Broad.

00:25:49.210 --> 00:25:51.240
It's a new modern
art museum in LA,

00:25:51.240 --> 00:25:54.434
and they've got a great
in app audio tour.

00:25:54.434 --> 00:25:56.850
Now chances are, you wouldn't
listen to this tour at home,

00:25:56.850 --> 00:25:58.720
but if you're in
the museum, it's

00:25:58.720 --> 00:26:02.200
very relevant to getting the
most out of your experience.

00:26:02.200 --> 00:26:05.452
So these are all features
that required an app install.

00:26:05.452 --> 00:26:07.910
I'm going to offer one counter
example that doesn't require

00:26:07.910 --> 00:26:09.940
our approval because
it just uses the web,

00:26:09.940 --> 00:26:11.850
and that's Notre Dame.

00:26:11.850 --> 00:26:14.950
So Notre Dame, besides being a
respected institute of higher

00:26:14.950 --> 00:26:17.660
learning, is also popular
tourist destination

00:26:17.660 --> 00:26:20.410
for its many historic
buildings and landmarks.

00:26:20.410 --> 00:26:23.370
And they created a virtual
tour by placing Beacons

00:26:23.370 --> 00:26:24.810
around the campus.

00:26:24.810 --> 00:26:27.470
And what they did was they
associated each beacon

00:26:27.470 --> 00:26:30.780
with a mobile web page that has
more information and maybe even

00:26:30.780 --> 00:26:33.910
a story about that
specific place.

00:26:33.910 --> 00:26:37.750
Now they've got both an
app and a mobile website.

00:26:37.750 --> 00:26:39.410
But in their case,
the mobile web

00:26:39.410 --> 00:26:41.970
provided as good an
experience as the app,

00:26:41.970 --> 00:26:44.050
and so it was the right choice.

00:26:44.050 --> 00:26:45.590
We're taking a
lighter touch when

00:26:45.590 --> 00:26:47.210
it comes to Nearby and the web.

00:26:47.210 --> 00:26:50.135
Really, we're just filtering
out harmful links and things

00:26:50.135 --> 00:26:51.510
that Google search
infrastructure

00:26:51.510 --> 00:26:54.241
would classify as spam.

00:26:54.241 --> 00:26:56.240
So that gives you an idea
of the kind of feature

00:26:56.240 --> 00:26:57.490
that we want to bring forward.

00:26:57.490 --> 00:27:00.770
We see Nearby and Android
as helping users discover

00:27:00.770 --> 00:27:04.440
new ways to get things done.

00:27:04.440 --> 00:27:06.770
So let's get into some
of the technical details.

00:27:06.770 --> 00:27:09.311
I'm going to talk you through
how to take advantage of Nearby

00:27:09.311 --> 00:27:10.680
in this new way.

00:27:10.680 --> 00:27:12.470
One of the great things
about this program

00:27:12.470 --> 00:27:15.159
is it doesn't require
any programming.

00:27:15.159 --> 00:27:16.700
Most of our partners
were able to get

00:27:16.700 --> 00:27:19.390
things to just work with
zero code modifications

00:27:19.390 --> 00:27:20.400
to their app.

00:27:20.400 --> 00:27:23.520
There is some work, but it's
just on the Beacon side.

00:27:23.520 --> 00:27:26.330
So I'm going to get into that.

00:27:26.330 --> 00:27:27.860
There's basically
these four steps.

00:27:27.860 --> 00:27:29.240
You need to get some beacons.

00:27:29.240 --> 00:27:31.660
You need to set them up to
advertise what you want.

00:27:31.660 --> 00:27:33.090
Register them with Google.

00:27:33.090 --> 00:27:35.085
And then tie them to
your app or website.

00:27:37.900 --> 00:27:40.130
So starting at step
1, you need something

00:27:40.130 --> 00:27:41.840
that can BLE advertise.

00:27:41.840 --> 00:27:46.370
So if you manufacture a smart
device, it's just the device.

00:27:46.370 --> 00:27:48.420
But for installations
at a place,

00:27:48.420 --> 00:27:50.850
we recommend getting
some Eddystone beacons.

00:27:50.850 --> 00:27:54.560
So if you visit g.co/beacons,
we've got links to 15

00:27:54.560 --> 00:27:58.260
or so beacon partners
and their web stores.

00:27:58.260 --> 00:28:01.210
But if you can't wait to receive
your beacons in the mail,

00:28:01.210 --> 00:28:03.380
you can also turn an
Android or iOS phone

00:28:03.380 --> 00:28:05.840
into a temporary beacon
just by using the platform's

00:28:05.840 --> 00:28:08.880
advertising APIs.

00:28:08.880 --> 00:28:10.630
So next, we have to
configure the beacon.

00:28:10.630 --> 00:28:11.927
Provision it, we say.

00:28:11.927 --> 00:28:14.010
So some of the manufacturers
will do this for you.

00:28:14.010 --> 00:28:16.190
And if not, they all
provide companion apps.

00:28:16.190 --> 00:28:19.230
This is a screenshot of Radius
Network's Rad Beacon App.

00:28:19.230 --> 00:28:22.790
They all look similar
and do similar things.

00:28:22.790 --> 00:28:25.280
So again, so far we've
bought some beacons,

00:28:25.280 --> 00:28:28.050
we installed an
app, no programming.

00:28:28.050 --> 00:28:32.450
Now if you want to use the
physical web or Eddystone URL,

00:28:32.450 --> 00:28:35.480
you could actually be done
at this step, here at step 2.

00:28:35.480 --> 00:28:38.190
Now the physical web
is an open standard

00:28:38.190 --> 00:28:42.380
for encoding a web URL directly
in that identifier being

00:28:42.380 --> 00:28:43.770
emitted from the beacon.

00:28:43.770 --> 00:28:46.432
It works on Chrome, on
both iOS and Android.

00:28:46.432 --> 00:28:48.390
And Nearby is going to
be adding support for it

00:28:48.390 --> 00:28:50.250
in the coming weeks.

00:28:50.250 --> 00:28:52.570
In fact, there's a
talk tomorrow at 10 AM

00:28:52.570 --> 00:28:54.460
actually on this stage.

00:28:54.460 --> 00:28:56.640
But if you want
to take advantage

00:28:56.640 --> 00:28:58.900
of the more advanced
features, the app

00:28:58.900 --> 00:29:01.850
launching, the app
installing, then you

00:29:01.850 --> 00:29:05.080
want to choose Eddystone UID
or Eddystone EID at this step,

00:29:05.080 --> 00:29:08.120
and then we've got
two more short steps.

00:29:08.120 --> 00:29:10.030
So you need to claim
ownership of the beacon.

00:29:10.030 --> 00:29:11.780
You can do that with
our beacon tools app.

00:29:11.780 --> 00:29:14.290
You just get near the
beacon, select it in the app,

00:29:14.290 --> 00:29:15.770
hit Register.

00:29:15.770 --> 00:29:20.170
Now besides unlocking the
app install and the app

00:29:20.170 --> 00:29:23.350
launching features, this
has some other benefits.

00:29:23.350 --> 00:29:26.010
The beacon will show up
in our web dashboard.

00:29:26.010 --> 00:29:27.890
And you'll be able
to see it on a map.

00:29:27.890 --> 00:29:29.760
You can monitor
its battery level.

00:29:29.760 --> 00:29:32.030
Basically the beacon becomes
location infrastructure

00:29:32.030 --> 00:29:34.660
that you own.

00:29:34.660 --> 00:29:37.430
And last, we need to tie the
beacon to your app or website.

00:29:37.430 --> 00:29:39.590
And we do this
with an attachment.

00:29:39.590 --> 00:29:41.555
Now if you're an
expert thumb typer,

00:29:41.555 --> 00:29:43.680
maybe you're a millennial,
you can do this directly

00:29:43.680 --> 00:29:46.550
inside the app, and
enter in all that JSON.

00:29:46.550 --> 00:29:49.030
I personally recommend
the beacon dashboard.

00:29:49.030 --> 00:29:50.020
It's a web tool.

00:29:50.020 --> 00:29:54.610
Again, it's linked
from g.co/beacons.

00:29:54.610 --> 00:29:56.780
So let's look at
that attachment.

00:29:56.780 --> 00:29:57.900
It's got these fields.

00:29:57.900 --> 00:30:00.790
And this tells us what to
put in that notification,

00:30:00.790 --> 00:30:03.170
and then where to take the
user when they tap on it.

00:30:03.170 --> 00:30:05.694
Now again, the beautiful thing
about Nearby is most of you

00:30:05.694 --> 00:30:07.360
won't have to change
your apps to create

00:30:07.360 --> 00:30:09.460
these contextual notifications.

00:30:09.460 --> 00:30:11.490
There's one tricky part
of this integration,

00:30:11.490 --> 00:30:13.210
and that's just this URL.

00:30:13.210 --> 00:30:15.760
So I'm going to show you
a little bit more on that.

00:30:15.760 --> 00:30:18.680
And we'll provide some
tools and documentation

00:30:18.680 --> 00:30:19.990
on how to get this right.

00:30:19.990 --> 00:30:21.390
But here's what's to know.

00:30:21.390 --> 00:30:23.440
If the URL looks
like the top one,

00:30:23.440 --> 00:30:26.830
then we take that to mean that
it requires an app install.

00:30:26.830 --> 00:30:28.769
This is the one that
requires our approval.

00:30:28.769 --> 00:30:31.310
And we'll have a sign up form
at the end I'll tell you about.

00:30:31.310 --> 00:30:33.930
If it looks like the
middle one, then we'll

00:30:33.930 --> 00:30:35.780
launch the app if it's
already installed.

00:30:35.780 --> 00:30:37.946
And if it's not, we'll go
to the mobile web fallback

00:30:37.946 --> 00:30:39.040
that you specify.

00:30:39.040 --> 00:30:40.580
No approval required.

00:30:40.580 --> 00:30:43.380
And then for the last one, if
it's just a regular HTTPS URL,

00:30:43.380 --> 00:30:46.190
we'll just open the web page.

00:30:46.190 --> 00:30:47.810
Now for the first
two, the URLs that

00:30:47.810 --> 00:30:49.450
are going to launch
an app, you want

00:30:49.450 --> 00:30:52.780
to make sure that the scheme
host and path in that URL

00:30:52.780 --> 00:30:55.679
matches up to an intent
filter in your manifest.

00:30:55.679 --> 00:30:57.970
And that's just so that we
can launch your app directly

00:30:57.970 --> 00:30:59.380
into the right screen.

00:30:59.380 --> 00:31:01.450
Again, this is all
launching soon,

00:31:01.450 --> 00:31:06.960
all documented at
developers.google.com/nearby.

00:31:06.960 --> 00:31:08.970
So if you want to
experiment with the app

00:31:08.970 --> 00:31:11.810
install feature prior
to being wait-listed,

00:31:11.810 --> 00:31:14.290
or you just want to try out
an attachment before making

00:31:14.290 --> 00:31:17.730
it public, there's a way to
mark the attachment as debug.

00:31:17.730 --> 00:31:20.400
And then once Nearby
rolls out, it'll

00:31:20.400 --> 00:31:22.810
show up on phones that are
in developer mode, but not

00:31:22.810 --> 00:31:25.250
the general population.

00:31:25.250 --> 00:31:27.120
This is the important part.

00:31:27.120 --> 00:31:29.910
If you'd like to apply to be
wait-listed for the app install

00:31:29.910 --> 00:31:32.110
program, there's a
sign up form again

00:31:32.110 --> 00:31:34.860
at developers.google.com/nearby.

00:31:34.860 --> 00:31:37.850
Now that sign up form is
geared towards apps like Target

00:31:37.850 --> 00:31:39.140
and Mobile Passport.

00:31:39.140 --> 00:31:41.580
These are folks who've
got beacons deployed

00:31:41.580 --> 00:31:43.060
and they've got a
strong user story

00:31:43.060 --> 00:31:45.400
around a contextual experience.

00:31:45.400 --> 00:31:47.080
And then of course,
smart devices.

00:31:47.080 --> 00:31:49.580
In fact, we actually did some
integrations inside Google

00:31:49.580 --> 00:31:52.560
with teams like Chromecast,
and Where to help people

00:31:52.560 --> 00:31:54.450
install companion apps.

00:31:54.450 --> 00:31:56.450
But we're most
excited to see what

00:31:56.450 --> 00:31:58.700
you guys build on top of
this new Nearby Notifications

00:31:58.700 --> 00:31:59.200
platform.

00:32:01.470 --> 00:32:02.694
So there it is.

00:32:02.694 --> 00:32:04.110
We're building
Nearby into Android

00:32:04.110 --> 00:32:05.850
is a core feature,
allowing users

00:32:05.850 --> 00:32:08.550
to discover things
around them, whether it's

00:32:08.550 --> 00:32:10.820
contextual apps for the
place that they're at,

00:32:10.820 --> 00:32:12.870
peer to peer
collaborative experiences,

00:32:12.870 --> 00:32:15.220
or interactions with
another smart device.

00:32:15.220 --> 00:32:16.680
We hope you like it.

00:32:16.680 --> 00:32:18.076
Thank you.

00:32:18.076 --> 00:32:19.062
[APPLAUSE]

00:32:19.062 --> 00:32:25.242
[MUSIC PLAYING]

