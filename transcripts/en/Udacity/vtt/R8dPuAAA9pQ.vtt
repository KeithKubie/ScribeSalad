WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.110
Welcome to problem set 1, we are going to be going over the running time today

00:00:03.110 --> 00:00:09.090
and what it means for an algorithm to be efficient or slow or difficult.

00:00:09.090 --> 00:00:12.010
So we're going to be going over few problems along those lines

00:00:12.010 --> 00:00:14.570
so I will go ahead and just typewrite it.

00:00:14.570 --> 00:00:21.900
So let's say we consider ourselves more practical engineers than theoretical scientist.

00:00:21.900 --> 00:00:25.080
So we're somewhere over here maybe.

00:00:25.080 --> 00:00:31.000
So we don't really want to look at algorithm code and try to figure out the running times

00:00:31.000 --> 00:00:36.840
instead what we rather do is implement the algorithms and then measure them,

00:00:36.840 --> 00:00:43.120
measure the running times of the algorithm for just some random instances let's say of various sizes

00:00:43.120 --> 00:00:45.810
and see where things go.

00:00:45.810 --> 00:00:51.930
So let's take a look at the three algorithms called alpha, beta, and gamma in this table.

00:00:51.930 --> 00:00:55.400
And we're running them on different input sizes.

00:00:55.400 --> 00:01:01.040
An input size of 100, 200, 300, and 400, and we're showing the running times.

00:01:01.040 --> 00:01:06.080
Now, this is just for one run of each of these algorithms.

00:01:06.080 --> 00:01:13.110
Let's say we're running each of these algorithms a million times on a random input of the given size

00:01:13.110 --> 00:01:19.890
so running alpha a million times on an input size of 100

00:01:19.890 --> 00:01:23.980
and different randomly generated inputs of size 100,

00:01:23.980 --> 00:01:28.040
and it is taking an average of 25, and all these are in minutes.

00:01:28.040 --> 00:01:37.040
And similarly for an input size of 200, we're running alpha a million times on random inputs of size 200,

00:01:37.040 --> 00:01:43.820
and it's taking an average 317,000 minutes so you can see a growth somewhat quickly.

00:01:43.820 --> 00:01:47.940
We can ask a number of questions about these three algorithms.

00:01:47.940 --> 00:01:52.830
The first question I would like to ask is what is the running time for each algorithm,

00:01:52.830 --> 00:01:56.870
alpha, beta, and gamma, based on the information in this table.

00:01:56.870 --> 00:02:01.530
And you might be a little bit confused here because if alpha has linear running time

00:02:01.530 --> 00:02:07.960
then it also has polynomial and exponential running time since those are worse than linear running time.

00:02:07.960 --> 00:02:14.080
And similarly, if beta has polynomial running time then it's also exponential running time,

00:02:14.080 --> 00:02:16.060
but it's not linear running time then.

00:02:16.060 --> 00:02:22.920
Don't worry too much about that just give the lowest running time you can for each algorithm

00:02:22.920 --> 99:59:59.000
and check which one applies for each of the algorithms.

