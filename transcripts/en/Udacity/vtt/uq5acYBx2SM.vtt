WEBVTT
Kind: captions
Language: en

00:00:00.550 --> 00:00:04.350
Going back to our historical overview of, of modeling.

00:00:04.350 --> 00:00:06.748
Recall OMT, the object modeling technique.

00:00:06.748 --> 00:00:12.878
And it had both structural view and behavioral view, but it had a functional,

00:00:12.878 --> 00:00:18.090
and the functional view made use of what are called data flow diagrams.

00:00:20.000 --> 00:00:23.400
UML does not contain that particular functional view.

00:00:23.400 --> 00:00:27.180
It uses use case diagrams instead.

00:00:27.180 --> 00:00:32.119
But I wanted to show you the, the data flow diagrams because I

00:00:32.119 --> 00:00:36.740
have found them personally useful in describing describing systems.

00:00:37.970 --> 00:00:43.240
In particular, a data flow diagram conveys systems activities and

00:00:43.240 --> 00:00:44.900
the ordering in which they occur.

00:00:47.320 --> 00:00:49.870
Data flow diagrams can be nested, and

00:00:49.870 --> 00:00:52.950
the outermost data flow diagram is called a context diagram.

00:00:54.210 --> 00:00:55.290
In the context diagram,

00:00:55.290 --> 00:00:58.880
there's a single oval which denotes the system as a whole.

00:01:00.310 --> 00:01:09.270
That oval can be connected to various external actors.

00:01:09.270 --> 00:01:11.860
In the case of the context view, those aren't stick figures.

00:01:11.860 --> 00:01:13.660
Instead they're rectangles.

00:01:13.660 --> 00:01:17.820
And the actors can be individual users, or they even can be

00:01:17.820 --> 00:01:20.689
external systems which are communicating with the system that you're modeling.

00:01:22.950 --> 00:01:30.470
The lines that connect the actors to the system are called dataflow lines,

00:01:30.470 --> 00:01:35.650
that is there's some communication of data between the actor and the system or

00:01:35.650 --> 00:01:36.820
the system and the actor.

00:01:38.080 --> 00:01:41.949
Here's a context diagram of a system that plays chess.

00:01:43.140 --> 00:01:47.400
The external actor is the human opponent and there are three flows of data.

00:01:47.400 --> 00:01:55.066
The human opponent can submit moves to the to the chess playing program.

00:01:55.066 --> 00:01:58.990
Similarly the chess playing program can communicate moves back to

00:01:58.990 --> 00:02:00.391
the human opponent, or

00:02:00.391 --> 00:02:05.170
the chess playing program can produce a diagram of the current board situation.

