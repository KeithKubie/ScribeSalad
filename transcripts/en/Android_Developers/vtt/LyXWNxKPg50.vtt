WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.500
MIKE DENNY: There's
something really

00:00:01.500 --> 00:00:03.060
satisfying about
getting your app

00:00:03.060 --> 00:00:04.940
to look great on your device.

00:00:04.940 --> 00:00:08.100
But just because there's over
11,000 other Android devices

00:00:08.100 --> 00:00:11.500
out there doesn't mean you need
to build 11,000 other layouts

00:00:11.500 --> 00:00:12.810
to make a great-looking app.

00:00:12.810 --> 00:00:16.250
Not if you're using
Responsive UI principles.

00:00:16.250 --> 00:00:18.660
You may have noticed that
I'm not Ian or Joanna.

00:00:18.660 --> 00:00:21.470
My name is Mike Denny, a Design
Advocate on the Google Design

00:00:21.470 --> 00:00:22.820
Team.

00:00:22.820 --> 00:00:24.050
First things first.

00:00:24.050 --> 00:00:26.280
Thinking about specific
phones and tablets

00:00:26.280 --> 00:00:28.480
is only going to get
you into trouble.

00:00:28.480 --> 00:00:30.200
There's a wide
spectrum of devices

00:00:30.200 --> 00:00:32.650
and not that much difference
between the largest

00:00:32.650 --> 00:00:35.020
phone and the smallest tablet.

00:00:35.020 --> 00:00:37.790
Instead, think more generally
about how much space

00:00:37.790 --> 00:00:39.040
you have to work with.

00:00:39.040 --> 00:00:40.990
This can come in three
different flavors--

00:00:40.990 --> 00:00:43.785
width, height, and
smallest width.

00:00:43.785 --> 00:00:45.840
Width is super
important and should

00:00:45.840 --> 00:00:49.500
be the basis for breakpoints in
designing and building your UI.

00:00:49.500 --> 00:00:52.610
For example, 600 dp in
width is the first point

00:00:52.610 --> 00:00:55.270
where you could consider
having a side-by-side summary

00:00:55.270 --> 00:00:57.020
and detail level view.

00:00:57.020 --> 00:00:58.950
Any lower and you won't
be giving each level

00:00:58.950 --> 00:01:01.290
the full attention it deserves.

00:01:01.290 --> 00:01:03.932
Height is less common when
designing Responsive UI.

00:01:03.932 --> 00:01:06.390
But keep in mind that something
like a vertically scrolling

00:01:06.390 --> 00:01:08.600
container is going to
be difficult to use

00:01:08.600 --> 00:01:11.020
if you can only see one
or two elements at a time

00:01:11.020 --> 00:01:12.940
due to a constrained height.

00:01:12.940 --> 00:01:15.640
Smallest width, unlike
height or width,

00:01:15.640 --> 00:01:18.950
is designed to be rotation
insensitive, as it's just

00:01:18.950 --> 00:01:21.050
the smaller of the two values.

00:01:21.050 --> 00:01:23.567
This gives you a better idea
of how much space is available

00:01:23.567 --> 00:01:25.650
and is an easy way to
ensure that your app remains

00:01:25.650 --> 00:01:28.420
consistent as the
device is rotated.

00:01:28.420 --> 00:01:29.830
You don't want to
force your user

00:01:29.830 --> 00:01:32.230
to relearn your navigation
structure every time they

00:01:32.230 --> 00:01:33.940
rotate their device.

00:01:33.940 --> 00:01:37.150
This is particularly important
in the multi-window world.

00:01:37.150 --> 00:01:40.100
When your app is resized, your
width, height, and smallest

00:01:40.100 --> 00:01:42.180
width are going to be updated.

00:01:42.180 --> 00:01:44.320
You might be going from
full screen on a tablet

00:01:44.320 --> 00:01:47.710
down to what amounts to
a portrait-oriented phone

00:01:47.710 --> 00:01:49.230
worth of space.

00:01:49.230 --> 00:01:50.950
Here's where a good
Responsive UI can

00:01:50.950 --> 00:01:52.932
make for a smooth transition.

00:01:52.932 --> 00:01:54.390
There are number
of common patterns

00:01:54.390 --> 00:01:56.389
you might consider when
building that Responsive

00:01:56.389 --> 00:02:00.120
UI, such as revealing previously
hidden content as the screen

00:02:00.120 --> 00:02:03.050
size grows, transforming
your navigation pattern

00:02:03.050 --> 00:02:05.190
or switching from
a list to a grid,

00:02:05.190 --> 00:02:08.190
dividing your screen into
multiple sections side by side,

00:02:08.190 --> 00:02:11.470
reflowing specific
elements, expanding the size

00:02:11.470 --> 00:02:13.640
or margins of
individual elements,

00:02:13.640 --> 00:02:16.150
or even changing the
position of specific elements

00:02:16.150 --> 00:02:18.060
like a floating action button.

00:02:18.060 --> 00:02:20.350
Check out the blog post for
more details on designing

00:02:20.350 --> 00:02:22.840
a Responsive UI and
specific patterns

00:02:22.840 --> 00:02:25.710
you can use to
build better apps.

