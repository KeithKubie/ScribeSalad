WEBVTT
Kind: captions
Language: en-GB

00:00:00.000 --> 00:00:07.200
&gt;&gt; Sean: we've been wandering down the the 
by-roads of HTML, XML, SGML all 

00:00:07.200 --> 00:00:11.830
sorts of MLs and various non-MLs 
And last time, I think, we spoke some

00:00:11.830 --> 00:00:15.240
people had wandered off to the pub and
sorted everything out over a point so

00:00:15.240 --> 00:00:18.320
what happened about that then -- what 
happened next?

00:00:18.320 --> 00:00:25.130
&gt;&gt; DFB: well after about 18 months the draft
XML specification was published and

00:00:25.130 --> 00:00:33.469
everybody agreed: "Great job! Didn't we
learn a lot from the decisions in HTML

00:00:33.469 --> 00:00:38.610
that caused so much difficulty and, of course,
the major thing --

00:00:39.120 --> 00:00:46.870
not by any means the only one -- but a big major thing,
was that you must not omit your end-tags in XML. They

00:00:46.870 --> 00:00:50.989
will be there. That being said, of course,
a lot of browsers still have to be

00:00:50.989 --> 00:00:56.070
tolerant about it. Some people, y'know,
maybe -- I dunno -- Dreamweaver, or something,

00:00:56.070 --> 00:01:00.809
might produce a very, very good XML-compliant 
Web page but a lot of people

00:01:00.809 --> 00:01:06.790
still hand-code. A lot of people, particularly with
paragraphs, go straight &lt;p&gt; &lt;p&gt; &lt;p&gt; &lt;p&gt; and

00:01:06.790 --> 00:01:11.140
don't see the need to close off the paragraphs. 
You've got to be a bit tolerant but nevertheless

00:01:11.140 --> 00:01:16.659
the idea was you do not omit your end-tags
and there were about seven or eight

00:01:16.659 --> 00:01:22.369
other, rather more technical, things had
to be cleaned up from SGML but it made a

00:01:22.369 --> 00:01:26.119
lot of difference to people implementing that 
they were cleaned up. One

00:01:26.119 --> 00:01:32.619
of the first ones I'm aware of -- because I
tend to forget it -- is that in SGML,

00:01:32.619 --> 00:01:36.869
because it was the days of punch cards,
upper case and lower case were treated as

00:01:36.869 --> 00:01:40.900
the same. So if you called it  &lt;PARA&gt; in
capitals it was the same

00:01:41.730 --> 00:01:47.080
as &lt;para&gt; in lower case. Or even you could 
have capital 'P' little 'a' capital 'R' little 'a' 
again and that

00:01:47.080 --> 00:01:53.150
was the same as &lt;para&gt; ! That had to be 
cleaned up. So what this made possible

00:01:53.150 --> 00:02:02.560
was for the browser implementers they loved
it, because it meant that if all the end

00:02:02.560 --> 00:02:07.790
tags were there you could do a brackets 
matching operation, essentially, a bit like in a

00:02:07.790 --> 00:02:12.380
compiler where you match open curly brace [{] with 
close curly brace [}]. You could tick everything 
off and you could

00:02:12.380 --> 00:02:17.640
say "That is a tree, I may not understand
what all the tags mean but, boy, they match

00:02:17.640 --> 00:02:23.700
all right". Now that's very useful to know
about so what it also meant was that

00:02:23.700 --> 00:02:29.310
there was a clean target for front-end
software to aim at. The idea is that your

00:02:29.310 --> 00:02:30.860
Dreamweaver(s), or whatever,

00:02:30.860 --> 00:02:35.630
probably still aren't totally compliant, I don't 
know, but they could say "We will try and produce really

00:02:35.630 --> 00:02:46.910
good, nice, XML".  Yeah, XML-notated
Web page stuff [XHTML]. So what this really means

00:02:46.910 --> 00:02:52.100
is that a diagram that we had in the
previous video can now be extended. You

00:02:52.100 --> 00:02:56.209
will recall that I described SGML as
being the enabling technology, the

00:02:56.209 --> 00:03:00.400
foundations of the building in a way, and
we built these applications on top of

00:03:00.400 --> 00:03:05.450
them.  I did a memo. I  referred to the DoD's
CALS I referred to the Text Encoding

00:03:05.450 --> 00:03:11.040
Initiative and I referred to HTML and
saying,  y'know, sad  it had the ML at the

00:03:11.040 --> 00:03:17.130
end [of the acronym] -- it caused so much 
misunderstanding. But anyway let's just extend this a bit

00:03:17.130 --> 00:03:26.200
more now, over to the right, and let's just say 
that what the XML committee did was to

00:03:26.200 --> 00:03:35.570
enable, as it were, inside this SGML
universe, as a proper subset, like that, and

00:03:35.570 --> 00:03:38.130
that one is labelled

00:03:38.130 --> 00:03:43.260
XML and I've tried to draw it wholly
within the SGML boundary to emphasize

00:03:43.260 --> 00:03:51.130
that, yes, it really is a genuine subset.
The theologians will say "Ah! yes but it's a 
subset of the extended

00:03:51.130 --> 00:03:58.320
SGML that included several options that
Charles [Goldfarb] specified way back 
and you had to have those in order for

00:03:58.320 --> 00:04:03.060
it to work".  But nevertheless, yes, it is in
spirit a proper subset and that meant

00:04:03.060 --> 00:04:11.420
you could generate on top of that new
tagsets, or cleaned up versions of existing ones. 
So, one of the first things they did,

00:04:11.420 --> 00:04:18.989
of course, was to clean up HTML and
its spec. into XML format. Now remember

00:04:18.989 --> 00:04:26.190
XML is a subset of SGML because they're the same
things -- they're meta-syntaxes -- built now on

00:04:26.190 --> 00:04:41.210
top of XML notation is XHTML cleaned up
HTML, all tags matching, defined, wonderful.

00:04:41.210 --> 00:04:46.920
And of course several other people -- tens
of thousands of other people now -- have

00:04:46.920 --> 00:04:51.440
been able to build their own tagsets on
top of XML technology. Just to take one

00:04:51.440 --> 00:04:59.300
that's very familiar to me and to some of my academic 
colleagues, for mathematics mark up.

00:04:59.300 --> 00:05:03.150
Again one wishes thay hadn't put the 'ML' on the end 
but they did: MathML

00:05:05.550 --> 00:05:09.140
Ah! here's a good one

00:05:09.140 --> 00:05:14.920
Adobe know what they're doing. You don't put 'ML'
on the end of things unless it's a meta-language, perhaps. 
They took their

00:05:14.920 --> 00:05:21.620
PDF technology and they made it so that it
could be expressed in XML tagset form. And that

00:05:21.620 --> 00:05:26.770
of course is called Scalable Vector
Graphics, SVG, and I'll put the dots here

00:05:26.770 --> 00:05:30.750
to show that there are now literally, I
would guess, thousands, if not tens of

00:05:30.750 --> 00:05:36.440
thousands. Remember all of these the way
you refer to them is you say "SVG is

00:05:36.440 --> 00:05:42.470
an *application* of XML"  
&gt;&gt; Sean: Can we just be absolutely clear then, 
just to throw this in one more time:

00:05:42.470 --> 00:05:45.700
What was the big problem with putting a 'L'
on the end of these?"

00:05:46.640 --> 00:05:54.320
&gt;&gt; DFB:  Because unfortunately the two enabling
technologies end with 'ML'. And the in-crowd 

00:05:54.320 --> 00:06:01.350
sort of says: "We know it says 'markup language' it's
actually 'markup mete-language'" But of course if you

00:06:01.350 --> 00:06:07.970
start using it for something that is a
fixed tagset -- not a tagset

00:06:07.970 --> 00:06:14.860
technology -- the punctuation rules so to speak -- 
then people start saying things like: "Oh! they're just

00:06:14.860 --> 00:06:21.730
y' know "HTML is a subset of SGML". No! it's not a 
subset of SGML it's an application, you see.
And people start to make

00:06:21.730 --> 00:06:27.230
those mistakes, between 'applications
and 'subsets' motivated by the fact that they

00:06:27.230 --> 00:06:34.020
all end in "ML" so thay all must mean the same 
sort of thing -- and they don't!  So, peace 

00:06:34.020 --> 00:06:38.410
broke out.  I think we should say that
alongside all of this, in the

00:06:38.410 --> 00:06:43.240
mid 1990s and equally important. It wasn't just getting XML

00:06:43.240 --> 00:06:49.310
sorted out and thereby being able to do
HTML as XHTML, properly. It was also

00:06:49.310 --> 00:06:55.260
the fact, I think, in that era,  Tim Berners-Lee
moved from CERN. He moved to MIT

00:06:55.260 --> 00:07:03.860
and all credit to him. Exactly the right
thing.  I think MIT made him an offer to

00:07:03.860 --> 00:07:10.750
host basically a sort of academic-like
institution concerned entirely with setting

00:07:10.750 --> 00:07:12.030
standards for the Web

00:07:12.030 --> 00:07:17.270
and being vendor-neutral in everything
it did. And as I say,  all credit to Tim. He

00:07:17.270 --> 00:07:21.530
could have made millions out of the Web -- there's no
question. But he opted to say: "No I would

00:07:21.530 --> 00:07:28.150
sooner make a smaller amount of money and
be respected and to have mine be the

00:07:28.150 --> 00:07:34.770
standard way of doing things. So in a way
the vendors can meet on vendor-neutral

00:07:34.770 --> 00:07:39.500
territory - still have shouting matches,
still have bust-ups - but its all under

00:07:39.500 --> 00:07:45.710
the aegis of the W3C, the World
Wide Web Consortium, which is in charge

00:07:45.710 --> 00:07:50.430
of all this.  I've never actually been to one of their
meetings but I've talked to one or two people

00:07:50.430 --> 00:07:56.770
who've been there and I said: "How do you cope
with the fact that people still get 

00:07:56.770 --> 00:08:05.090
subsets and applications confused? Is XHTML a cut-down 
version of XML ?  No! no! no! no!  "

00:08:05.090 --> 00:08:12.050
And one said: " I'm weary, I'm going bald,
I've got a grey beard,  All we try

00:08:12.050 --> 00:08:18.810
and ensure is it everything we say on
our Web site is absolutely accurate and

00:08:18.810 --> 00:08:23.860
correct. But to try and get everybody in
the whole world to understand and to get it right?

00:08:23.860 --> 00:08:26.860
Life's too short ! "

