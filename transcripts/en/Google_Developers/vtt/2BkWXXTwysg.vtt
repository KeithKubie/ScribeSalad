WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.800
CHRIS BROADFOOT: Hi, everyone.

00:00:01.800 --> 00:00:05.040
We're live today from the
Sydney hangout office.

00:00:05.040 --> 00:00:07.910
We have here today Thor to my
left, who is the product

00:00:07.910 --> 00:00:10.330
manager for Google Maps API.

00:00:10.330 --> 00:00:14.430
And joining us through Google+
Hangouts, Mano Marks, a

00:00:14.430 --> 00:00:18.440
developer advocate for
Google Maps API.

00:00:18.440 --> 00:00:22.450
So today, the topic of our
conversation will be the v2 to

00:00:22.450 --> 00:00:24.280
v3 transition.

00:00:24.280 --> 00:00:27.516
So it's great that we have Thor
here to talk about some

00:00:27.516 --> 00:00:34.670
of the history of v2 and what it
means for v3 going forward.

00:00:34.670 --> 00:00:37.640
So first of all, Thor
what does it mean to

00:00:37.640 --> 00:00:40.760
be a product manager?

00:00:40.760 --> 00:00:42.860
MANO MARKS: Yes, tell us a
little about yourself, Thor.

00:00:45.680 --> 00:00:48.230
THOR MITCHELL: So a Google
product manager is essentially

00:00:48.230 --> 00:00:52.910
someone who owns the strategy
and roadmap and overall

00:00:52.910 --> 00:00:54.780
success of a product.

00:00:54.780 --> 00:01:01.360
So there are normally around one
product manager for every

00:01:01.360 --> 00:01:04.620
10 to 15 engineers that you
have working on a product.

00:01:04.620 --> 00:01:09.020
And the job of a product
manager, a variety of things,

00:01:09.020 --> 00:01:12.960
but in large part, it's to
shield the engineering team

00:01:12.960 --> 00:01:16.100
from all of the other issues
that have to be resolved in

00:01:16.100 --> 00:01:19.630
order to manage the launches
of a product and the life

00:01:19.630 --> 00:01:21.290
cycle of a product.

00:01:21.290 --> 00:01:24.350
So on a day to day basis, I
could be talking to the legal

00:01:24.350 --> 00:01:27.910
team or the marketing team, or
reviewing documentation, or

00:01:27.910 --> 00:01:30.810
doing roadmap planning, or all
manner of things, speaking at

00:01:30.810 --> 00:01:32.270
conferences, et cetera.

00:01:32.270 --> 00:01:34.220
So a wide variety of stuff.

00:01:34.220 --> 00:01:34.500
CHRIS BROADFOOT: Cool.

00:01:34.500 --> 00:01:37.180
And so how long have you
been product manager

00:01:37.180 --> 00:01:39.400
for Google Maps API?

00:01:39.400 --> 00:01:41.280
THOR MITCHELL: For Google Maps
API, I think, two and

00:01:41.280 --> 00:01:42.630
a half years now.

00:01:42.630 --> 00:01:46.105
This will be my, yes, my
third Google IO coming

00:01:46.105 --> 00:01:49.440
up as product manager.

00:01:49.440 --> 00:01:51.930
CHRIS BROADFOOT: So you
mentioned product managers

00:01:51.930 --> 00:01:55.650
sort of develop strategy
for the product.

00:01:55.650 --> 00:01:59.220
What's the strategy for
the Google Maps API?

00:01:59.220 --> 00:02:02.600
THOR MITCHELL: Well I think
that for the last--

00:02:02.600 --> 00:02:04.790
you mentioned the v2 to
the v3 transition.

00:02:04.790 --> 00:02:07.970
For the last couple of years,
a lot of the roadmap and the

00:02:07.970 --> 00:02:10.350
features that we've been
developing have been driven by

00:02:10.350 --> 00:02:13.385
the need to provide the
solutions that people need in

00:02:13.385 --> 00:02:15.040
order to move from v2 to v3.

00:02:15.040 --> 00:02:18.120
So that has been a theme that's
sort of run underneath

00:02:18.120 --> 00:02:19.460
a lot of what we're doing.

00:02:19.460 --> 00:02:22.900
We obviously want developers who
are coming from v2 to feel

00:02:22.900 --> 00:02:25.320
comfortable that v3 can offer
them what they need for their

00:02:25.320 --> 00:02:26.430
applications.

00:02:26.430 --> 00:02:31.440
At the same time, we do try and
take a broader perspective

00:02:31.440 --> 00:02:35.570
on what the role of
the Maps API is.

00:02:35.570 --> 00:02:39.080
And what is this product for
at its very basic level?

00:02:39.080 --> 00:02:46.450
Because back in the v2
timeframe, the Maps API had a

00:02:46.450 --> 00:02:48.690
lot in common at a 10-foot
level with

00:02:48.690 --> 00:02:49.575
Google Maps, the website.

00:02:49.575 --> 00:02:52.900
And as a consequence, you tended
to see that features

00:02:52.900 --> 00:02:54.630
would launch in Google Maps,
and then would trickle down

00:02:54.630 --> 00:02:55.000
into the API.

00:02:55.000 --> 00:02:58.040
And we would just naturally let
that flow happen and see

00:02:58.040 --> 00:03:00.540
how developers responded
to those features.

00:03:00.540 --> 00:03:04.660
But I think it's important
that we keep in mind that

00:03:04.660 --> 00:03:07.300
there is actually a fairly
important distinction between

00:03:07.300 --> 00:03:10.310
the purpose of Google Maps,
which is about letting people

00:03:10.310 --> 00:03:13.490
find directions, get to places,
search for businesses,

00:03:13.490 --> 00:03:14.500
and so forth.

00:03:14.500 --> 00:03:17.900
And the Maps API, which is
really much more about

00:03:17.900 --> 00:03:20.490
developers, developers' data.

00:03:20.490 --> 00:03:23.960
We are really just a platform
for data visualization that

00:03:23.960 --> 00:03:27.200
allows you, the developer, to
put your information in a

00:03:27.200 --> 00:03:28.300
geographical context.

00:03:28.300 --> 00:03:31.080
And so we have a responsibility
to provide

00:03:31.080 --> 00:03:34.730
developers with the tools they
need to better present their

00:03:34.730 --> 00:03:36.840
data to tell their stories.

00:03:36.840 --> 00:03:39.860
And so, I think, especially now
that we have wrapped up

00:03:39.860 --> 00:03:44.145
the migration from v2 to v3 in
terms of ensuring that the

00:03:44.145 --> 00:03:46.900
features from v2 that we feel
it's important to have in v3

00:03:46.900 --> 00:03:51.460
are there, that we're going to
approach it much more on

00:03:51.460 --> 00:03:56.580
enabling these kind of broader
visualizations.

00:03:56.580 --> 00:03:58.640
CHRIS BROADFOOT: Yeah, I mean
the use cases are quite

00:03:58.640 --> 00:04:00.020
different from what
our developers do

00:04:00.020 --> 00:04:02.300
and what's on Maps.

00:04:02.300 --> 00:04:06.640
For example, Google Maps doesn't
ever show more than,

00:04:06.640 --> 00:04:09.130
say, 10 markers at a time,
because that's what comes back

00:04:09.130 --> 00:04:11.510
in a search response.

00:04:11.510 --> 00:04:14.470
Whereas our developers regularly
add thousands or

00:04:14.470 --> 00:04:17.170
tens of thousands of markers.

00:04:17.170 --> 00:04:20.209
THOR MITCHELL: It's interesting
also that--

00:04:20.209 --> 00:04:22.936
I would say that in the early
days of the Maps API, a lot of

00:04:22.936 --> 00:04:25.960
what developers wanted to do
with the Maps API was informed

00:04:25.960 --> 00:04:27.750
by what they saw us doing
on Google Maps.

00:04:27.750 --> 00:04:30.460
So they would see a feature on
Google Maps and they would

00:04:30.460 --> 00:04:32.020
want to be able to bring that
into their own mapping

00:04:32.020 --> 00:04:33.170
applications.

00:04:33.170 --> 00:04:38.150
What we're increasingly seeing
now is developers who have a

00:04:38.150 --> 00:04:40.490
much clearer sense of the kinds
of applications they

00:04:40.490 --> 00:04:44.760
would like to build
independently and bring to us

00:04:44.760 --> 00:04:47.305
features that we don't have in
Google Maps that they would

00:04:47.305 --> 00:04:48.690
like to see in the Maps API.

00:04:48.690 --> 00:04:50.367
And we've started to see things
flowing back the other

00:04:50.367 --> 00:04:50.980
way as well.

00:04:50.980 --> 00:04:53.190
We've started to see Google
projects and properties

00:04:53.190 --> 00:04:56.930
adopting services and features
of the Maps API that we've

00:04:56.930 --> 00:04:59.470
built for development.

00:04:59.470 --> 00:05:02.390
CHRIS BROADFOOT: So there is a
Google Moderator question that

00:05:02.390 --> 00:05:07.050
says, from Nianwei saying, "Just
saw Mano Marks's new

00:05:07.050 --> 00:05:10.180
blog, 'Go v3, it's time to
upgrade.' So when will

00:05:10.180 --> 00:05:11.870
maps.google.com migrate?

00:05:11.870 --> 00:05:13.990
Why has it not after
two years?

00:05:13.990 --> 00:05:16.780
For us, it's less reliable to
support of non-Mercator map

00:05:16.780 --> 00:05:20.150
types in v3, and Flash-based
street view looks much

00:05:20.150 --> 00:05:21.310
better."

00:05:21.310 --> 00:05:23.700
THOR MITCHELL: So, it's an
interesting question.

00:05:23.700 --> 00:05:29.050
As I mentioned, back in v2 days,
there was a lot more

00:05:29.050 --> 00:05:32.580
commonality between the Maps API
and the Maps application.

00:05:32.580 --> 00:05:38.740
One of the reasons why this
changed was because the Maps

00:05:38.740 --> 00:05:42.530
API is generally used on
third-party websites.

00:05:42.530 --> 00:05:44.690
And those third-party websites
can be accessed on web

00:05:44.690 --> 00:05:46.630
browsers, on a wide variety
of devices.

00:05:46.630 --> 00:05:50.260
And we cannot, in a sense,
constrain the types of devices

00:05:50.260 --> 00:05:52.150
people use to browse the web.

00:05:52.150 --> 00:05:55.670
And so we need to make sure that
the Maps API works well

00:05:55.670 --> 00:05:58.240
across the full spectrum of
devices, across its full

00:05:58.240 --> 00:05:59.175
feature set.

00:05:59.175 --> 00:06:00.960
If you look at Google Maps,
they're in a slightly

00:06:00.960 --> 00:06:02.210
different position.

00:06:05.480 --> 00:06:09.100
The bulk of the mobile traffic,
for example, for

00:06:09.100 --> 00:06:12.430
Google Maps as a service comes
from native applications on

00:06:12.430 --> 00:06:16.060
mobile devices, rather than
loading a web-based version of

00:06:16.060 --> 00:06:16.600
Google Maps.

00:06:16.600 --> 00:06:18.836
And that allows them to make
technology decisions that

00:06:18.836 --> 00:06:22.780
differ between the web
and mobile devices.

00:06:22.780 --> 00:06:24.240
So Street View is
a great example.

00:06:24.240 --> 00:06:29.890
Street View in Google Maps for
many years was exclusively

00:06:29.890 --> 00:06:31.320
Flash-based.

00:06:31.320 --> 00:06:36.080
And that works well on desktop,
but not so well on

00:06:36.080 --> 00:06:36.690
mobile devices.

00:06:36.690 --> 00:06:38.895
But that wasn't an issue,
because the mobile devices had

00:06:38.895 --> 00:06:41.120
their own native Street
View communication.

00:06:41.120 --> 00:06:45.822
You'll see that in MapsGL, of
course, Street View is no

00:06:45.822 --> 00:06:46.370
longer Flash-based.

00:06:46.370 --> 00:06:52.390
It's now WebGL based and part
of a broader 3D experience.

00:06:52.390 --> 00:07:01.270
And I would expect that as the
adoption of WebGL and the

00:07:01.270 --> 00:07:04.690
number of browsers that support
WebGL improves, you'll

00:07:04.690 --> 00:07:06.267
see some of the same
improvements coming down into

00:07:06.267 --> 00:07:07.410
the Maps API.

00:07:07.410 --> 00:07:12.430
I don't currently expect that
maps.google.com itself will

00:07:12.430 --> 00:07:16.850
switch to use the Maps API.

00:07:16.850 --> 00:07:21.360
I think we've made a very
clear decision that it's

00:07:21.360 --> 00:07:24.500
important for Google Maps to be
able to rapidly iterate on

00:07:24.500 --> 00:07:28.330
features and also have the
freedom to add and remove

00:07:28.330 --> 00:07:30.610
features and take different
technology approaches across

00:07:30.610 --> 00:07:34.080
different browsers, which means
that its requirements in

00:07:34.080 --> 00:07:37.950
terms of the underlying
infrastructure are somewhat

00:07:37.950 --> 00:07:41.580
inconsistent with our needs as
not just a developer product,

00:07:41.580 --> 00:07:42.960
but also a paid developer
product.

00:07:42.960 --> 00:07:46.830
So we have a successful
enterprise business selling

00:07:46.830 --> 00:07:48.780
licensing for the
Google Maps API.

00:07:48.780 --> 00:07:52.240
And developers generally, and
particularly some of those at

00:07:52.240 --> 00:07:53.480
large commercial developers,
they have very, very high

00:07:53.480 --> 00:07:58.880
expectations on consistency and
stability and visibility

00:07:58.880 --> 00:07:59.700
into the roadmap and so forth.

00:07:59.700 --> 00:08:01.980
And there's something of a
conflict there between the

00:08:01.980 --> 00:08:05.440
very fast-moving, agile Google
development model for our own

00:08:05.440 --> 00:08:06.800
products and some of
the expectations

00:08:06.800 --> 00:08:07.790
of enterprise customers.

00:08:07.790 --> 00:08:09.830
So it's likely that Google
Maps will remain an

00:08:09.830 --> 00:08:11.768
independent code base,
I think, for

00:08:11.768 --> 00:08:12.110
the foreseeable future.

00:08:12.110 --> 00:08:14.020
CHRIS BROADFOOT: I guess there's
also the matter of

00:08:14.020 --> 00:08:17.650
customizing Maps for particular
users, which isn't

00:08:17.650 --> 00:08:21.240
possible with the API because
we serve cookie lists, so we

00:08:21.240 --> 00:08:25.000
have no idea about which Google
account is logged in.

00:08:25.000 --> 00:08:26.760
So there's practical differences
as well.

00:08:26.760 --> 00:08:27.105
THOR MITCHELL: Yes.

00:08:27.105 --> 00:08:29.250
So that's actually
very important

00:08:29.250 --> 00:08:31.190
to some of our customers.

00:08:31.190 --> 00:08:35.980
There are certain government
regulations, particularly

00:08:35.980 --> 00:08:39.360
around specific classes of
sites, which means they must

00:08:39.360 --> 00:08:41.370
not set cookies.

00:08:41.370 --> 00:08:45.490
And so we have re-architected
the API to be totally

00:08:45.490 --> 00:08:48.350
independent of cookies and
sessions in any way, which

00:08:48.350 --> 00:08:50.090
obviously is good in
some respects.

00:08:50.090 --> 00:08:52.680
It also helps has a side effect
that it helps with

00:08:52.680 --> 00:08:56.150
performance, because,
particularly for mobile

00:08:56.150 --> 00:09:00.350
devices on lower-bandwidth
networks, cookies can add

00:09:00.350 --> 00:09:03.010
fairly significantly to the
payload for some of the more

00:09:03.010 --> 00:09:06.200
lighter-weight requests we do,
such as with [INAUDIBLE].

00:09:06.200 --> 00:09:07.710
So it's actually a positive
thing in that respect.

00:09:07.710 --> 00:09:10.450
But it does sort of cut us
off from some of the

00:09:10.450 --> 00:09:14.720
user-specific, end user
authenticated features that

00:09:14.720 --> 00:09:18.536
Google Maps has [INAUDIBLE].

00:09:18.536 --> 00:09:19.490
MANO MARKS: Hey Thor?

00:09:19.490 --> 00:09:19.850
THOR MITCHELL: Yep?

00:09:19.850 --> 00:09:24.320
MANO MARKS: Can you just tell
us what's the feature that's

00:09:24.320 --> 00:09:27.210
most excited you in the last
year about the Maps API?

00:09:27.210 --> 00:09:30.140
The feature we've been
able to release?

00:09:30.140 --> 00:09:32.520
THOR MITCHELL: Oh, that's
a great question.

00:09:32.520 --> 00:09:38.730
So I think I'm going to cheat
slightly and broaden the

00:09:38.730 --> 00:09:41.310
question to the last few years,
like the time that I've

00:09:41.310 --> 00:09:43.450
been managing the product.

00:09:43.450 --> 00:09:45.940
There are a couple of features
that I really love.

00:09:49.020 --> 00:09:50.990
One which I often mention--

00:09:50.990 --> 00:09:55.860
which I realize isn't
necessarily as broadly

00:09:55.860 --> 00:09:57.090
valuable as others--

00:09:57.090 --> 00:09:58.340
is elevation.

00:10:00.170 --> 00:10:03.440
The extent to which I like a
feature is often a function of

00:10:03.440 --> 00:10:05.180
how much time I spend playing
with the demos

00:10:05.180 --> 00:10:06.050
we write for it.

00:10:06.050 --> 00:10:11.190
And I found elevation just
fascinating when we

00:10:11.190 --> 00:10:11.890
implemented it.

00:10:11.890 --> 00:10:17.170
Just being able to experiment
with the elevation profiles

00:10:17.170 --> 00:10:18.390
across different routes.

00:10:18.390 --> 00:10:19.640
Oops, excuse me.

00:10:25.670 --> 00:10:29.850
And also, being able to look at
the difference between, for

00:10:29.850 --> 00:10:32.170
example, driving routes and
walking routes across the same

00:10:32.170 --> 00:10:33.490
city, and things like that.

00:10:33.490 --> 00:10:37.200
And the fact that it does
underwater depth as well was a

00:10:37.200 --> 00:10:40.140
really interesting.

00:10:40.140 --> 00:10:42.090
So I'm a big fan of
that feature.

00:10:42.090 --> 00:10:43.232
And people have done some really
interesting things with

00:10:43.232 --> 00:10:49.080
it that we didn't expect, such
as figuring out the location

00:10:49.080 --> 00:10:52.330
that they need to put mobile
phone masts, based on the

00:10:52.330 --> 00:10:55.066
signal dissipation over
cities, based on the

00:10:55.066 --> 00:10:56.770
elevation, and so forth.

00:10:56.770 --> 00:11:01.265
Another feature that if any of
you follow our blog will know

00:11:01.265 --> 00:11:04.360
I'm a huge fan of
is autocomplete.

00:11:04.360 --> 00:11:07.860
So autocomplete, if you're not
aware of it, is a feature that

00:11:07.860 --> 00:11:12.550
you can attach to a text field
on any web page that will give

00:11:12.550 --> 00:11:18.130
that text field the ability to
predict places as users enter

00:11:18.130 --> 00:11:20.610
addresses or business names.

00:11:20.610 --> 00:11:25.200
And there are various controls
there in terms of you can

00:11:25.200 --> 00:11:27.720
control whether we just return
addresses, or just return

00:11:27.720 --> 00:11:29.570
businesses, or only return city
names, or only return

00:11:29.570 --> 00:11:32.220
results in specific countries.

00:11:32.220 --> 00:11:37.550
Essentially, every single text
field on the internet which

00:11:37.550 --> 00:11:39.010
asks you to enter an
address in any

00:11:39.010 --> 00:11:40.780
form needs this feature.

00:11:40.780 --> 00:11:44.410
Without it, I can only assume
you hate your users.

00:11:47.740 --> 00:11:50.210
And the thing is, once you've
seen that feature, and you

00:11:50.210 --> 00:11:52.630
understand what it can do, every
time you come across a

00:11:52.630 --> 00:11:55.520
text field that doesn't use
it, it drives you crazy.

00:11:55.520 --> 00:11:59.120
So I'm on a crusade to have
this feature rolled out

00:11:59.120 --> 00:11:59.610
everywhere.

00:11:59.610 --> 00:12:03.460
Because it's one of the little
details that just makes the

00:12:03.460 --> 00:12:07.249
web better for everybody.

00:12:07.249 --> 00:12:10.650
CHRIS BROADFOOT: Hey Tom,
welcome to the Hangout.

00:12:10.650 --> 00:12:12.795
Have you got any questions
for Thor or any of us?

00:12:15.330 --> 00:12:15.900
TOM HORN: No, no.

00:12:15.900 --> 00:12:17.926
Just thought I'd come in and
listen to what you guys were

00:12:17.926 --> 00:12:19.176
talking about.

00:12:22.750 --> 00:12:23.953
We use the--

00:12:23.953 --> 00:12:27.260
CHRIS BROADFOOT: Tom's with
goCatch, which is a great taxi

00:12:27.260 --> 00:12:30.460
application in, I guess,
in Australia, right?

00:12:30.460 --> 00:12:30.930
TOM HORN: Yes.

00:12:30.930 --> 00:12:31.920
Actually, globally.

00:12:31.920 --> 00:12:34.970
But yeah, mostly in Australia
We've got a couple of other

00:12:34.970 --> 00:12:38.300
centers, like Singapore
and Croatia.

00:12:38.300 --> 00:12:41.080
But yeah, mostly Australia.

00:12:41.080 --> 00:12:43.050
MANO MARKS: So all the
contiguous places that you can

00:12:43.050 --> 00:12:46.024
find, right?

00:12:46.024 --> 00:12:47.500
TOM HORN: Yeah.

00:12:47.500 --> 00:12:53.030
So I was just saying we use
autocomplete for when the user

00:12:53.030 --> 00:12:54.860
has to type in a suburb
for their destination.

00:12:54.860 --> 00:12:56.300
And yeah, it's great.

00:12:56.300 --> 00:12:57.810
Really improves the usability.

00:12:57.810 --> 00:13:01.900
So, yeah, it's cool.

00:13:01.900 --> 00:13:04.490
CHRIS BROADFOOT: So you guys
must be using v3, then.

00:13:07.430 --> 00:13:13.180
That's just the API, just
the auto complete API--

00:13:13.180 --> 00:13:14.160
THOR MITCHELL: For
the Web Service.

00:13:14.160 --> 00:13:15.410
TOM HORN: Yeah, the
Web Service.

00:13:17.170 --> 00:13:24.010
So we use Map Kit in the iOS app
and Map View in Android.

00:13:24.010 --> 00:13:29.030
So we do use v3 in the website

00:13:29.030 --> 00:13:30.800
MANO MARKS: And you also
have a Windows 7 app.

00:13:30.800 --> 00:13:33.148
What are you using for that?

00:13:33.148 --> 00:13:37.160
TOM HORN: Yeah, that's
Bing Maps, which you

00:13:37.160 --> 00:13:40.040
kind of have to use.

00:13:40.040 --> 00:13:43.060
I've done a little bit of stuff
with Bing Maps on the

00:13:43.060 --> 00:13:46.350
web as well, and it doesn't
really compare.

00:13:46.350 --> 00:13:47.600
Which you'd expect I guess.

00:13:50.136 --> 00:13:53.350
Well, given the majority
of Google Maps.

00:13:53.350 --> 00:13:57.410
It's my favorite API of
all the Google APIs.

00:13:57.410 --> 00:14:00.310
CHRIS BROADFOOT: Yeah, I think
it was-- was Google Maps the

00:14:00.310 --> 00:14:01.850
first API that we released?

00:14:01.850 --> 00:14:04.690
THOR MITCHELL: That's
a contention point.

00:14:04.690 --> 00:14:08.550
I think there was the Search API
that may have preceded us.

00:14:08.550 --> 00:14:09.850
Remember SOAP?

00:14:09.850 --> 00:14:10.810
CHRIS BROADFOOT: Yeah, I do.

00:14:10.810 --> 00:14:11.760
MANO MARKS: It definitely
preceded us.

00:14:11.760 --> 00:14:15.670
It was being deprecated by
the time we came around.

00:14:15.670 --> 00:14:20.830
But yeah, it was still pretty
popular with a small number of

00:14:20.830 --> 00:14:24.890
developers when I
started in 2006.

00:14:24.890 --> 00:14:27.520
TOM HORN: Yeah, I think I
started working on the Maps

00:14:27.520 --> 00:14:29.240
API in 2006.

00:14:29.240 --> 00:14:31.502
Working with the Maps
API, rather.

00:14:34.460 --> 00:14:37.380
MANO MARKS: Shall we grab
another Moderator question?

00:14:37.380 --> 00:14:38.830
CHRIS BROADFOOT: Yeah, sure.

00:14:38.830 --> 00:14:41.410
So what you were talking
about before sort of

00:14:41.410 --> 00:14:42.910
leads into this one.

00:14:42.910 --> 00:14:43.980
Actually, sort of two.

00:14:43.980 --> 00:14:45.890
Let's do them together.

00:14:45.890 --> 00:14:46.860
So, one more thing.

00:14:46.860 --> 00:14:48.160
How is MapsGL--

00:14:48.160 --> 00:14:52.010
how does that fit into Google's
geo API offering in

00:14:52.010 --> 00:14:54.070
the future?

00:14:54.070 --> 00:14:58.940
And that sort of leads into
"Google had a press event on

00:14:58.940 --> 00:15:01.260
June 5 and released new features
on Google Maps, 3D,

00:15:01.260 --> 00:15:02.850
offline, et cetera.

00:15:02.850 --> 00:15:05.271
When will those features come
to any flavor of the API, if

00:15:05.271 --> 00:15:06.426
ever?"

00:15:06.426 --> 00:15:07.350
THOR MITCHELL: OK.

00:15:07.350 --> 00:15:09.695
So the features that were
announced at the press event

00:15:09.695 --> 00:15:18.140
on June 5, I believe, the 3D
Maps were demoed on tablet, I

00:15:18.140 --> 00:15:21.800
believe, as part of
Google Earth.

00:15:21.800 --> 00:15:26.710
So that's actually quite
independent right now of

00:15:26.710 --> 00:15:31.650
Google Maps, both the desktop
product and the API.

00:15:31.650 --> 00:15:33.360
And similarly, offline, I
think it was part of the

00:15:33.360 --> 00:15:35.510
Android app too.

00:15:35.510 --> 00:15:37.030
These are actually--

00:15:37.030 --> 00:15:38.550
offline in particular is
something that does come up

00:15:38.550 --> 00:15:42.140
fairly frequently as an
ask for the Maps API.

00:15:42.140 --> 00:15:45.580
And it's something that, I
think, we're keeping a close

00:15:45.580 --> 00:15:47.430
eye on the various technologies
that could use to

00:15:47.430 --> 00:15:49.430
facilitate that.

00:15:49.430 --> 00:15:58.390
There are some security issues
in terms of how we manage

00:15:58.390 --> 00:16:02.680
storage of the data in such a
way that it's not easily bulk

00:16:02.680 --> 00:16:04.780
exportable, that we would
need to address.

00:16:04.780 --> 00:16:06.690
So it's not, unfortunately,
that simple.

00:16:06.690 --> 00:16:07.873
But it's something that
there is definitely a

00:16:07.873 --> 00:16:08.480
lot of demand for.

00:16:08.480 --> 00:16:12.350
So I hope we can address
that in future.

00:16:12.350 --> 00:16:14.690
The 3D Maps.

00:16:14.690 --> 00:16:19.850
So essentially the technology
that was demoed on June 5,

00:16:19.850 --> 00:16:23.500
takes the 3D environment that
you have in Earth and sort of

00:16:23.500 --> 00:16:28.100
steps it up a level in terms of
the quality of the building

00:16:28.100 --> 00:16:32.040
renderings, the amount
of detail.

00:16:32.040 --> 00:16:35.030
It's a really beautiful things
to behold when you see it.

00:16:35.030 --> 00:16:40.690
And that's being rolled out in
Earth initially for tablets.

00:16:40.690 --> 00:16:44.930
And then my expectation will be
that it will flow through

00:16:44.930 --> 00:16:47.470
to other products over time.

00:16:47.470 --> 00:16:49.440
And at some point, I
hope that we can be

00:16:49.440 --> 00:16:50.110
one of those products.

00:16:50.110 --> 00:16:52.630
But I think it's a little
bit of a way off yet.

00:16:52.630 --> 00:16:55.100
As far as the other question
with MapsGL.

00:16:55.100 --> 00:16:57.330
So MapsGL is something that we,
again, have been obviously

00:16:57.330 --> 00:17:00.280
watching closely, and we're in
close contact with that team.

00:17:00.280 --> 00:17:04.990
And we've sort of talked about
when we would want to start

00:17:04.990 --> 00:17:07.980
working on bringing MapsGL
into the API.

00:17:07.980 --> 00:17:10.170
There are, again, some
challenges there are somewhat

00:17:10.170 --> 00:17:12.490
peculiar to the API here.

00:17:12.490 --> 00:17:18.540
One of the big difficulties that
we've had is evaluating

00:17:18.540 --> 00:17:21.880
the devices on which we can
reliably use MapsGL and ensure

00:17:21.880 --> 00:17:25.700
that performance is what it
needs to be, and that it is

00:17:25.700 --> 00:17:27.206
stable and reliable enough.

00:17:27.206 --> 00:17:31.390
And we actually did some
experiments with MapsGL in the

00:17:31.390 --> 00:17:33.910
v3 Street View player
about a year ago.

00:17:33.910 --> 00:17:36.110
And we did run into
some problems with

00:17:36.110 --> 00:17:37.870
browsers at that time.

00:17:37.870 --> 00:17:40.140
The way that maps.google.com
addresses this is that they

00:17:40.140 --> 00:17:43.455
run a performance test within
your browser when you click

00:17:43.455 --> 00:17:45.040
the Enable MapsGL button.

00:17:45.040 --> 00:17:46.870
And it takes a few
seconds to run.

00:17:46.870 --> 00:17:49.640
And once it's completed, they
decide one or the other

00:17:49.640 --> 00:17:50.980
whether you are a MapsGL
capable browser.

00:17:50.980 --> 00:17:54.500
And if you are, they store a
cookie that allows them to

00:17:54.500 --> 00:17:56.580
load MapsGL from that
point onwards.

00:17:56.580 --> 00:17:59.170
Now, as we mentioned, the Maps
API is cookie-less, which

00:17:59.170 --> 00:18:01.900
means that we are not in a
position to do that as easily.

00:18:01.900 --> 00:18:05.520
And we would have to run that
detection, right now, while

00:18:05.520 --> 00:18:10.015
there's still this broad range
of performance and device

00:18:10.015 --> 00:18:11.730
support, and graphics card
issues, and so forth.

00:18:11.730 --> 00:18:16.815
We'd have to run that every
time, which would seriously

00:18:16.815 --> 00:18:18.890
impact the user experience.

00:18:18.890 --> 00:18:21.490
And so we have to--

00:18:21.490 --> 00:18:25.380
I think what we're really
looking to do is wait for

00:18:25.380 --> 00:18:28.760
adoption of WebGL as a
technology within browsers to

00:18:28.760 --> 00:18:32.080
really get a little bit
more ubiquitous.

00:18:32.080 --> 00:18:35.460
And before we feel like, not
only can we reliably use

00:18:35.460 --> 00:18:37.690
MapsGL in a way that won't
undermine the user experience,

00:18:37.690 --> 00:18:42.070
but also so that we can offer
features that MapsGL enables,

00:18:42.070 --> 00:18:45.090
which developers would feel
comfortable using, knowing

00:18:45.090 --> 00:18:46.930
that their userbase is likely
to be able to take

00:18:46.930 --> 00:18:48.070
the benefit of that.

00:18:48.070 --> 00:18:49.700
CHRIS BROADFOOT: I guess that
goes back to the differences

00:18:49.700 --> 00:18:51.030
in use cases between

00:18:51.030 --> 00:18:54.910
maps.google.com and our API sites.

00:18:54.910 --> 00:18:58.380
A lot of our sites just want to
serve maps really quickly.

00:18:58.380 --> 00:19:01.080
And if they have that lag
before they can do that,

00:19:01.080 --> 00:19:03.850
that's really detrimental
to them.

00:19:03.850 --> 00:19:05.590
THOR MITCHELL: I think it's also
very important that we--

00:19:05.590 --> 00:19:07.800
MANO MARKS: The things that I
get really excited about,

00:19:07.800 --> 00:19:15.270
though, is MapsGL and the GMM,
the Google Maps for Mobile and

00:19:15.270 --> 00:19:20.520
Android, and take advantage of
vector-based rendering, which

00:19:20.520 --> 00:19:22.480
we haven't really mentioned
that here.

00:19:22.480 --> 00:19:26.250
But it's one of the really
exciting new technologies that

00:19:26.250 --> 00:19:26.950
we're doing.

00:19:26.950 --> 00:19:29.560
Not just serving out map tiles,
but actually serving

00:19:29.560 --> 00:19:35.200
out data, and then letting the
applications render it in

00:19:35.200 --> 00:19:35.920
their clients.

00:19:35.920 --> 00:19:41.230
I think that is going to open
up a tremendous amount of

00:19:41.230 --> 00:19:45.910
capabilities once browsers
are capable of doing it.

00:19:45.910 --> 00:19:49.180
And we're already seeing that on
the native apps on Android.

00:19:53.960 --> 00:19:57.130
CHRIS BROADFOOT: Yeah, I mean,
does that tie into our

00:19:57.130 --> 00:19:58.180
strategy, do you think?

00:19:58.180 --> 00:20:00.480
Do you think 3D is the future?

00:20:00.480 --> 00:20:06.050
THOR MITCHELL: I think that it's
important that we focus

00:20:06.050 --> 00:20:07.470
on what I was saying earlier
about what is

00:20:07.470 --> 00:20:10.040
the Maps API for?

00:20:10.040 --> 00:20:13.170
It seems like a simple
and obvious question.

00:20:13.170 --> 00:20:16.380
But it's very easy to get swept
up in new features that

00:20:16.380 --> 00:20:18.670
come in from Google Maps and
just assume that we have to

00:20:18.670 --> 00:20:20.710
put them in the API as quickly
as possible, because people

00:20:20.710 --> 00:20:22.370
will expect to see them there,
because they've seen them on

00:20:22.370 --> 00:20:22.800
Google Maps.

00:20:22.800 --> 00:20:25.260
And not stop and think about
what is the utility of this

00:20:25.260 --> 00:20:26.090
feature to developers?

00:20:26.090 --> 00:20:28.850
What has it enabled them to do
that they couldn't do before?

00:20:28.850 --> 00:20:33.210
How do we ensure that this
feature will expand the

00:20:33.210 --> 00:20:37.270
potential of the API to offer
developers the opportunity to

00:20:37.270 --> 00:20:40.480
tell new stories, to visualize
data in more interesting ways,

00:20:40.480 --> 00:20:47.830
to convey information in a way
that achieves more for them,

00:20:47.830 --> 00:20:51.990
or that engages more
with their users?

00:20:51.990 --> 00:20:56.780
And I think that with MapsGL,
that's a very important

00:20:56.780 --> 00:20:57.390
consideration.

00:20:57.390 --> 00:21:01.272
We should not add MapsGL into
the Maps AP just because, in

00:21:01.272 --> 00:21:06.120
quotes, "3D is cool." Because
although 3D very visually

00:21:06.120 --> 00:21:09.450
attractive, just the 3D
implementation in and of

00:21:09.450 --> 00:21:12.870
itself, you tend to find that
people will navigate to their

00:21:12.870 --> 00:21:16.366
home, and check it out,
and fly around a bit.

00:21:16.366 --> 00:21:21.550
But actually making sure that
that feature can be applied to

00:21:21.550 --> 00:21:24.670
the presentation of information
in addition to

00:21:24.670 --> 00:21:26.385
just the imagery that we
provide, I think, is very,

00:21:26.385 --> 00:21:27.190
very important.

00:21:27.190 --> 00:21:28.510
And I think Mano is right.

00:21:28.510 --> 00:21:31.050
That in a sense, without meaning
to play down the

00:21:31.050 --> 00:21:35.640
importance of 3D, which I do
agree is an important part of

00:21:35.640 --> 00:21:39.070
the future, and we have a
responsibility to make it

00:21:39.070 --> 00:21:41.420
accessible, and make it easy
to use and not too

00:21:41.420 --> 00:21:42.040
disorienting--

00:21:42.040 --> 00:21:43.470
which is another
issue that 3D--

00:21:43.470 --> 00:21:44.960
has for users sometimes.

00:21:44.960 --> 00:21:49.860
But I think that in terms of
just the near term impact on

00:21:49.860 --> 00:21:51.950
the ability of the API to offer
developers interesting

00:21:51.950 --> 00:21:57.100
new visualization capabilities,
vectors have a

00:21:57.100 --> 00:22:00.990
lot of promise there that I
think is the first thing that

00:22:00.990 --> 00:22:01.873
we need to tackle.

00:22:01.873 --> 00:22:02.296
CHRIS BROADFOOT: Yeah.

00:22:02.296 --> 00:22:02.880
Because we can do something
like model---

00:22:02.880 --> 00:22:06.750
MANO MARKS: So Tom was actually
asking a question.

00:22:06.750 --> 00:22:07.830
Tom, do you want
to just ask it?

00:22:07.830 --> 00:22:10.110
I know you typed it
into the chat.

00:22:10.110 --> 00:22:11.625
TOM HORN: Yeah, that's OK.

00:22:11.625 --> 00:22:14.720
Yeah, so just talking about 3D
and delivering vector data to

00:22:14.720 --> 00:22:15.830
the client.

00:22:15.830 --> 00:22:19.000
I'm wondering if there are any
plans, or if you guys can talk

00:22:19.000 --> 00:22:22.930
about any plans to integrate
sort of a turn-by-turn mode in

00:22:22.930 --> 00:22:24.270
the Android Map View.

00:22:24.270 --> 00:22:28.370
Or indeed, anything you can
tell us about any plans to

00:22:28.370 --> 00:22:32.400
refresh the Android Map View.

00:22:32.400 --> 00:22:34.470
MANO MARKS: So just one
thing I'll note.

00:22:34.470 --> 00:22:38.260
I think currently navigation
on Android devices can be

00:22:38.260 --> 00:22:40.420
launched through an
intent on Android.

00:22:40.420 --> 00:22:43.346
That's my understanding.

00:22:43.346 --> 00:22:45.630
But yeah, The rest of your
question still stands.

00:22:45.630 --> 00:22:49.450
I'll let Thor address that.

00:22:49.450 --> 00:22:51.550
THOR MITCHELL: It's not
something that I'm personally

00:22:51.550 --> 00:22:53.230
involved in directly.

00:22:53.230 --> 00:22:57.265
So I'm not really qualified
to comment in detail.

00:23:06.700 --> 00:23:10.010
Even on Android, the
applications that we have.

00:23:10.010 --> 00:23:13.000
Sort of the vector based
rendering of the map is quite

00:23:13.000 --> 00:23:16.690
a distinct implementation from
the turn-by-turn navigation.

00:23:16.690 --> 00:23:20.690
Turn-by-turn navigation itself
is a very complex area

00:23:20.690 --> 00:23:27.380
contractually in terms of the
rights that we can offer third

00:23:27.380 --> 00:23:29.020
parties to offer turn-by-turn
navigation.

00:23:29.020 --> 00:23:33.270
So my expectation is that is not
something that we would be

00:23:33.270 --> 00:23:37.460
tackling in the immediate
future.

00:23:37.460 --> 00:23:43.970
I think that clearly there is
some utility to having an API

00:23:43.970 --> 00:23:44.860
around that.

00:23:44.860 --> 00:23:47.170
But I think, coming back to
what I said earlier about

00:23:47.170 --> 00:23:51.410
MapsGL, tackling the general
vector rendering within

00:23:51.410 --> 00:23:56.840
Android would probably have a
broader utility initially.

00:23:56.840 --> 00:24:02.810
So I can't comment right now on
the plans the Android team

00:24:02.810 --> 00:24:03.800
might have.

00:24:03.800 --> 00:24:07.180
Because the Maps API for Android
is currently part of

00:24:07.180 --> 00:24:09.460
Android SDK.

00:24:09.460 --> 00:24:14.130
But I have to assume that it's
something that they are

00:24:14.130 --> 00:24:18.270
conscious of and, I would
imagine, working on.

00:24:18.270 --> 00:24:18.670
TOM HORN: OK.

00:24:18.670 --> 00:24:19.710
Cool.

00:24:19.710 --> 00:24:24.780
I guess just bringing the Map
View in line with just the

00:24:24.780 --> 00:24:26.580
Maps application on Android.

00:24:26.580 --> 00:24:29.080
Because the Maps application
on Android is quite slick.

00:24:29.080 --> 00:24:32.720
Whereas Map View is sort
of getting a bit tired.

00:24:32.720 --> 00:24:36.540
It's still tile-based, and the
API itself has some problems.

00:24:36.540 --> 00:24:39.640
So yeah, it'd be interesting
to see what's

00:24:39.640 --> 00:24:40.700
coming up with that.

00:24:40.700 --> 00:24:42.920
THOR MITCHELL: Yeah, I've
certainly heard some concerns

00:24:42.920 --> 00:24:47.880
from developers about the way
that that API is structured.

00:24:47.880 --> 00:24:55.690
I actually think that, again,
it's important that we ensure

00:24:55.690 --> 00:25:02.300
that any changes we make to our
Maps API generally, such

00:25:02.300 --> 00:25:05.640
as a switch from tile-based to
vector-based rendering, that

00:25:05.640 --> 00:25:08.030
we bring more to the table than
just a different way of

00:25:08.030 --> 00:25:10.510
showing the same map.

00:25:10.510 --> 00:25:15.670
And also, I think we should be
conscious of the fact that

00:25:15.670 --> 00:25:18.560
those of us who are very close
to this technology, be it

00:25:18.560 --> 00:25:20.810
within Google or be it
developers externally, are

00:25:20.810 --> 00:25:24.840
very conscious of these
distinctions between raster

00:25:24.840 --> 00:25:26.850
maps and vector maps,
for example.

00:25:26.850 --> 00:25:29.580
But end users are much, much
less conscious of that than

00:25:29.580 --> 00:25:31.230
perhaps we realize.

00:25:31.230 --> 00:25:35.670
And so we need to make sure,
again, that we do something

00:25:35.670 --> 00:25:40.940
that really is compelling for
the end user, not just for

00:25:40.940 --> 00:25:42.680
ourselves, if you like.

00:25:42.680 --> 00:25:44.786
CHRIS BROADFOOT: I guess that's
sort of similar to the

00:25:44.786 --> 00:25:47.430
v2 to v3 transition.

00:25:47.430 --> 00:25:51.050
On the surface of it, it's just
another way of showing

00:25:51.050 --> 00:25:53.578
the same thing.

00:25:53.578 --> 00:25:56.200
But obviously, there's different
design principles

00:25:56.200 --> 00:25:58.560
around v3 and some advantages.

00:25:58.560 --> 00:26:00.770
But what sticks out for you?

00:26:00.770 --> 00:26:01.570
THOR MITCHELL: Well--

00:26:01.570 --> 00:26:04.800
MANO MARKS: Actually, sorry,
somebody actually commented on

00:26:04.800 --> 00:26:10.656
one of our posts earlier that
he smelled v4 coming.

00:26:10.656 --> 00:26:15.750
So I thought I'd get you to
comment on that publicly.

00:26:15.750 --> 00:26:21.910
THOR MITCHELL: Well I think that
given the amount of time

00:26:21.910 --> 00:26:29.580
we have invested in getting v3
to the point where any v2

00:26:29.580 --> 00:26:33.785
application can move to v3
comfortably, that's really not

00:26:33.785 --> 00:26:37.240
a process I'd like to
kick off again.

00:26:37.240 --> 00:26:40.110
I mean it is very refreshing,
from a product management

00:26:40.110 --> 00:26:43.150
perspective, to be at the point
now where we really can

00:26:43.150 --> 00:26:46.260
take a much more open-minded
view of where we can take this

00:26:46.260 --> 00:26:48.090
product and what we
can do with it.

00:26:48.090 --> 00:26:50.560
And really think about what
are the new and innovative

00:26:50.560 --> 00:26:54.030
things that we can do that will
step up the capabilities

00:26:54.030 --> 00:26:59.110
of the product without having to
worry so much about, well,

00:26:59.110 --> 00:27:01.020
we really need to make sure
that this constituency of

00:27:01.020 --> 00:27:07.340
developers on the v2 side are
also accommodated over here.

00:27:07.340 --> 00:27:10.030
That having been said, it's been
working through the v3's

00:27:10.030 --> 00:27:13.270
development we very consciously
tried to not just

00:27:13.270 --> 00:27:16.606
bring features over from v2, but
in doing so, also augment

00:27:16.606 --> 00:27:20.220
them and improve them and factor
in feedback that we had

00:27:20.220 --> 00:27:21.690
from v2 developers
at the time.

00:27:21.690 --> 00:27:24.880
So a good example of this is
the drawing tools that we

00:27:24.880 --> 00:27:26.100
announced last year.

00:27:26.100 --> 00:27:28.640
Maps API v2 did have the ability
to edit border lines

00:27:28.640 --> 00:27:29.750
and draw new border lines.

00:27:29.750 --> 00:27:34.240
When we brought it into v3, we
added the Toolbox, so there

00:27:34.240 --> 00:27:36.430
was actually a UI component you
could use for switching in

00:27:36.430 --> 00:27:38.960
and out of these
various modes.

00:27:38.960 --> 00:27:43.100
V3 also has explicit support for
circles and rectangles, so

00:27:43.100 --> 00:27:46.050
we made sure the drawing tools
would integrate cleanly there.

00:27:46.050 --> 00:27:51.090
And we have future plans as well
to flesh those drawing

00:27:51.090 --> 00:27:53.550
tools out more and give you more
flexibility in the way

00:27:53.550 --> 00:27:56.960
that things are rendered
and can be edited.

00:27:56.960 --> 00:28:04.420
So I think there's a lot of
benefits that have come with

00:28:04.420 --> 00:28:09.260
the v2 to v3 transition in terms
of the capabilities of

00:28:09.260 --> 00:28:10.670
the features that we
brought across.

00:28:10.670 --> 00:28:13.545
It's not as if we've just been
copying them over as is.

00:28:13.545 --> 00:28:20.290
But at the same time, I'm keen
that we can start work on some

00:28:20.290 --> 00:28:22.490
newer features that perhaps
haven't been seen before and

00:28:22.490 --> 00:28:25.020
have broad applicability.

00:28:25.020 --> 00:28:27.670
One of the issues that we
faced with the v2 to v3

00:28:27.670 --> 00:28:29.810
transition is, where do we draw
the line between features

00:28:29.810 --> 00:28:36.730
that were sufficiently popular
in v2 that we should bring

00:28:36.730 --> 00:28:39.790
them in to v3 and those that
perhaps were not that popular

00:28:39.790 --> 00:28:42.170
in v2, and bringing them into
v3 would require a certain

00:28:42.170 --> 00:28:45.380
amount of engineering effort,
plus ongoing maintenance?

00:28:45.380 --> 00:28:46.870
But obviously, if we don't
bring them over, we'd

00:28:46.870 --> 00:28:48.110
disappoint some developers.

00:28:48.110 --> 00:28:50.150
And so figuring out where to
draw that line was kind of

00:28:50.150 --> 00:28:50.660
challenging.

00:28:50.660 --> 00:28:53.240
But it did mean that towards
the end of the process, we

00:28:53.240 --> 00:28:56.820
were doing a lot of work
on relatively--

00:28:56.820 --> 00:28:57.730
I wouldn't say niche--

00:28:57.730 --> 00:29:01.110
but certainly features that we
were conscious had a smaller

00:29:01.110 --> 00:29:03.346
audience than some of the other
things that we have.

00:29:03.346 --> 00:29:07.910
And I think that it's very
important that we think about

00:29:07.910 --> 00:29:10.100
broadly accessible and broadly
valuable features

00:29:10.100 --> 00:29:11.510
that we can now bring.

00:29:11.510 --> 00:29:13.980
This is also, incidentally, a
reason why we spent quite a

00:29:13.980 --> 00:29:17.940
lot of time last year in
particular working on very,

00:29:17.940 --> 00:29:22.080
perhaps subtle, ways in which
we could finesse the product

00:29:22.080 --> 00:29:23.830
to make it better
for everybody.

00:29:23.830 --> 00:29:27.730
So, for example, if you load a
Maps API v3 map on a mobile

00:29:27.730 --> 00:29:30.260
device that has a
high-resolution screen such as

00:29:30.260 --> 00:29:33.820
Galaxy Nexus or an iPhone 4,
we automatically now switch

00:29:33.820 --> 00:29:36.170
into double resolution tiles
so that the imagery res is

00:29:36.170 --> 00:29:37.320
extremely crisp.

00:29:37.320 --> 00:29:39.625
This will also benefit
us with the new

00:29:39.625 --> 00:29:41.300
MacBook Pro, for example.

00:29:41.300 --> 00:29:44.060
We did work on smoothing the
transitions, particularly in

00:29:44.060 --> 00:29:46.090
and out of obliques.

00:29:46.090 --> 00:29:49.910
A lot of little fine details
that we thought just made the

00:29:49.910 --> 00:29:53.820
product a better experience and
which everybody benefited

00:29:53.820 --> 00:29:55.760
from automatically.

00:29:55.760 --> 00:29:57.470
CHRIS BROADFOOT: I guess going
back to design principles,

00:29:57.470 --> 00:30:00.460
that's something that I've
seen a lot in v3.

00:30:00.460 --> 00:30:02.630
So that we add these
improvements, and everyone

00:30:02.630 --> 00:30:05.640
gets them straight away, because
we automatically

00:30:05.640 --> 00:30:07.190
upgrade the API.

00:30:07.190 --> 00:30:10.050
Whereas in v2, these
improvements were often hidden

00:30:10.050 --> 00:30:13.300
behind flags that defaulted
to false.

00:30:13.300 --> 00:30:15.840
So that's a big difference
in v3.

00:30:15.840 --> 00:30:18.990
THOR MITCHELL: I think one of
the more significant changes

00:30:18.990 --> 00:30:22.060
we made very early on in the
v3 development process was

00:30:22.060 --> 00:30:27.390
deciding that we would default
to providing you with an

00:30:27.390 --> 00:30:31.580
experience as close to that of
Google Maps as we could, and

00:30:31.580 --> 00:30:33.490
then allow you to tailor
it from there.

00:30:33.490 --> 00:30:37.080
Whereas in v2, you really had
to build that up yourself.

00:30:37.080 --> 00:30:37.960
You had to add each control.

00:30:37.960 --> 00:30:40.410
You had to determine what the
zoom behavior was on scroll

00:30:40.410 --> 00:30:45.450
wheel zoom, and various
other things.

00:30:45.450 --> 00:30:47.890
We noticed that the vast
majority of sites were just

00:30:47.890 --> 00:30:48.960
reimplementing the same
code over, and

00:30:48.960 --> 00:30:49.580
over, and over again.

00:30:49.580 --> 00:30:53.780
And we really wanted to make
sure that, particularly if we

00:30:53.780 --> 00:30:58.420
launch a new feature that we do
believe is broadly useful,

00:30:58.420 --> 00:31:00.290
that developers have to do a
minimal amount of work to

00:31:00.290 --> 00:31:01.620
benefit from that.

00:31:01.620 --> 00:31:04.510
Because it is obviously
frustrating to us if we invest

00:31:04.510 --> 00:31:06.730
a lot of time in something that
we think has a lot of

00:31:06.730 --> 00:31:10.580
potential, but then we cannot
get enough awareness of that

00:31:10.580 --> 00:31:12.420
feature out there for it to
really get broad adoption.

00:31:12.420 --> 00:31:16.840
And v3 has done a much better
job of bringing new features

00:31:16.840 --> 00:31:18.880
to developers easily, I think.

00:31:18.880 --> 00:31:22.640
CHRIS BROADFOOT: I think on
the v4 topic as well.

00:31:22.640 --> 00:31:26.000
In the way that I've seen v3
designed it's designed in such

00:31:26.000 --> 00:31:30.530
a way that it's easy to add
new features without--

00:31:30.530 --> 00:31:34.600
keeping a consistent interface
and a sort of--

00:31:34.600 --> 00:31:34.880
MANO MARKS: And keeping
performance.

00:31:34.880 --> 00:31:35.500
CHRIS BROADFOOT: --comprehensive
developer

00:31:35.500 --> 00:31:36.290
experience.

00:31:36.290 --> 00:31:37.220
THOR MITCHELL: Yeah.

00:31:37.220 --> 00:31:40.010
This is something we were
very, very conscious.

00:31:43.200 --> 00:31:46.520
We talked a little bit earlier
about some of the motivations

00:31:46.520 --> 00:31:52.330
behind v3 terms of broader
device support.

00:31:52.330 --> 00:31:57.940
But another motivation was our
increasing awareness that we

00:31:57.940 --> 00:31:59.765
had a lot of things that we
wanted to do with the API, a

00:31:59.765 --> 00:32:00.650
lot of new features we
wanted to bring.

00:32:00.650 --> 00:32:05.070
But every new feature we
brought to the API only

00:32:05.070 --> 00:32:07.190
increased its size, only
increased the overhead

00:32:07.190 --> 00:32:08.540
associated with using it.

00:32:08.540 --> 00:32:12.360
So something we worked very
hard on in v3 was a very

00:32:12.360 --> 00:32:16.180
deeply modular structure right
through the product that

00:32:16.180 --> 00:32:19.215
allows us to load features on
demand without the developers

00:32:19.215 --> 00:32:21.340
needing to be conscious
of that.

00:32:23.950 --> 00:32:28.730
About a year or two into v3, we
layered on top of that an

00:32:28.730 --> 00:32:31.860
explicit libraries model where
there are larger-scale

00:32:31.860 --> 00:32:33.820
features, and developers
can actually

00:32:33.820 --> 00:32:35.080
explicitly opt into them.

00:32:35.080 --> 00:32:39.160
And that's proved to be
very, very valuable.

00:32:39.160 --> 00:32:40.810
And I think it's something that
you'll see us continue to

00:32:40.810 --> 00:32:43.330
exploit, to ensure that the core
of the product remains

00:32:43.330 --> 00:32:46.880
very lightweight, and yet
we can expand the

00:32:46.880 --> 00:32:47.890
capabilities easily.

00:32:47.890 --> 00:32:49.520
CHRIS BROADFOOT: It's actually
a really nice example of a

00:32:49.520 --> 00:32:52.580
large JavaScript code base.

00:32:52.580 --> 00:32:56.642
Do you ever see us open
sourcing some of the

00:32:56.642 --> 00:32:59.340
API or all of it?

00:32:59.340 --> 00:33:03.490
THOR MITCHELL: I think that it's
not something that's on

00:33:03.490 --> 00:33:04.820
the roadmap right now.

00:33:04.820 --> 00:33:07.350
I think that it's something
that we could--

00:33:07.350 --> 00:33:08.710
it's not inconceivable.

00:33:08.710 --> 00:33:13.480
I think that in the past, one
of the biggest challenges we

00:33:13.480 --> 00:33:21.840
faced is that Google in general
sources mapping data

00:33:21.840 --> 00:33:24.210
from a very wide variety
of places.

00:33:24.210 --> 00:33:28.400
And for a long time, we had
relationships with a couple of

00:33:28.400 --> 00:33:32.390
large data providers
for map data.

00:33:32.390 --> 00:33:33.930
And obviously, many of
these relationship

00:33:33.930 --> 00:33:34.730
all over the world.

00:33:34.730 --> 00:33:37.940
And also for local business
listings data as

00:33:37.940 --> 00:33:39.450
well, that's another.

00:33:39.450 --> 00:33:41.790
We have an even bigger
set of partners and

00:33:41.790 --> 00:33:43.500
data providers there.

00:33:43.500 --> 00:33:49.040
And obviously, a lot of these
partners that we work with,

00:33:49.040 --> 00:33:52.320
they have certain concerns and
sensitivities about exposing

00:33:52.320 --> 00:33:55.090
the data that they offer, and
that they've built their

00:33:55.090 --> 00:33:58.610
business on offering through
a product that is freely

00:33:58.610 --> 00:33:59.736
accessible globally.

00:33:59.736 --> 00:34:03.180
And we had an obligation to them
in terms of maintaining a

00:34:03.180 --> 00:34:05.200
relationship with them and
having continued access to

00:34:05.200 --> 00:34:07.670
that data, which is very
important to have the coverage

00:34:07.670 --> 00:34:11.679
and the quality that
we're known for.

00:34:11.679 --> 00:34:13.949
We had an obligation to them
to put some protections in

00:34:13.949 --> 00:34:18.270
place to ensure that the data
was used only in the manner in

00:34:18.270 --> 00:34:20.990
which they expected it to be
used and that we intended it

00:34:20.990 --> 00:34:21.440
to be used.

00:34:21.440 --> 00:34:23.679
It wasn't available for
bulk download or

00:34:23.679 --> 00:34:25.010
aggregation or so forth.

00:34:25.010 --> 00:34:27.960
And some of those protections
are built into the JavaScript

00:34:27.960 --> 00:34:29.989
themselves.

00:34:29.989 --> 00:34:34.460
And it would be very, very
difficult for us to maintain

00:34:34.460 --> 00:34:35.850
that degree of protection
around that

00:34:35.850 --> 00:34:39.360
data if we open sourced.

00:34:39.360 --> 00:34:45.050
However, for any of you who may

00:34:45.050 --> 00:34:45.929
have been at the [? Ware ?]

00:34:45.929 --> 00:34:49.040
Conference this year, Brian
McClendon, who's the VP of

00:34:49.040 --> 00:34:53.170
Maps and Earth at Google, talked
about how we have been,

00:34:53.170 --> 00:34:57.940
over the last few years, working
to build up a broader

00:34:57.940 --> 00:35:00.445
corpus of data that we have
actually collected ourselves,

00:35:00.445 --> 00:35:03.670
or for which we have
full rights.

00:35:03.670 --> 00:35:08.850
And as that continues to happen,
and the corpus of data

00:35:08.850 --> 00:35:13.500
that we have expands, I expect
that those kinds of

00:35:13.500 --> 00:35:15.210
sensitivities will
begin to relax.

00:35:15.210 --> 00:35:16.670
And then we can consider
looking into

00:35:16.670 --> 00:35:17.920
options like open sourcing.

00:35:21.380 --> 00:35:22.430
CHRIS BROADFOOT: Should
we take one

00:35:22.430 --> 00:35:25.620
more from the Moderator?

00:35:25.620 --> 00:35:28.310
So "Currently the Google
Earth API only works

00:35:28.310 --> 00:35:30.070
for desktop web browsers.

00:35:30.070 --> 00:35:33.160
How will we develop dynamic
Earth apps for mobile?

00:35:33.160 --> 00:35:36.090
Will there be a separate API,
or will we be able to reuse

00:35:36.090 --> 00:35:38.730
the existing JavaScript
libraries, perhaps using

00:35:38.730 --> 00:35:40.770
GWT-Earth?"

00:35:40.770 --> 00:35:43.890
THOR MITCHELL: I think what
you're going to see--

00:35:43.890 --> 00:35:49.550
and MapsGL is sort of the tip
of this ice berg-- is that

00:35:49.550 --> 00:35:52.520
this longstanding separation
that has existed between Maps

00:35:52.520 --> 00:35:54.770
and Earth will increasingly
blur.

00:35:58.170 --> 00:36:00.140
Currently, they're treated
as two distinct brands.

00:36:00.140 --> 00:36:02.500
Earth is the 3D globe.

00:36:02.500 --> 00:36:07.420
Maps is the 2D Mercator
projected flat map.

00:36:07.420 --> 00:36:11.210
And as browser technology
improves, the need for that

00:36:11.210 --> 00:36:15.520
distinction will, I think,
decrease over time.

00:36:15.520 --> 00:36:17.860
And I think that it's actually
quite important that from a

00:36:17.860 --> 00:36:20.880
user perspective, we don't
need to expose

00:36:20.880 --> 00:36:21.780
that split to users.

00:36:21.780 --> 00:36:23.520
And we shouldn't have to expose
that split to users.

00:36:23.520 --> 00:36:27.070
It should be easy for them to
seamlessly flip from a 2D to a

00:36:27.070 --> 00:36:30.310
3D environment as they wish.

00:36:30.310 --> 00:36:37.260
So I don't actually manage
the Earth API.

00:36:37.260 --> 00:36:40.625
That's part of the Earth
Desktop product.

00:36:40.625 --> 00:36:44.810
But my expectation would be
that over time, you'll see

00:36:44.810 --> 00:36:48.650
more and more 3D features coming
up in the Maps APIs.

00:36:48.650 --> 00:36:50.950
And a lot of the
earth imagery--

00:36:50.950 --> 00:36:52.270
obviously we already have
satellite, and we already have

00:36:52.270 --> 00:36:53.430
oblique view in the Maps API.

00:36:53.430 --> 00:36:57.490
But some of the technology that
we demonstrated on June 5

00:36:57.490 --> 00:37:00.080
flowing down through into the
mapping products and making

00:37:00.080 --> 00:37:01.480
this distinction unnecessary.

00:37:01.480 --> 00:37:04.630
Which means that the kind of
applications that you can

00:37:04.630 --> 00:37:08.290
build using the Earth API right
now will be equally

00:37:08.290 --> 00:37:10.270
possible to build using the
Maps API in the future.

00:37:10.270 --> 00:37:11.970
That would be my hope.

00:37:11.970 --> 00:37:12.705
CHRIS BROADFOOT: I guess
we've started to

00:37:12.705 --> 00:37:13.520
see that trend already.

00:37:13.520 --> 00:37:16.690
The press event was a Google
Maps event as opposed to a

00:37:16.690 --> 00:37:17.786
Google Earth event.

00:37:17.786 --> 00:37:19.590
But it still had
Google Earth--

00:37:19.590 --> 00:37:22.160
MANO MARKS: Just to note for
developers developing

00:37:22.160 --> 00:37:24.940
currently, you can launch
Google Earth with

00:37:24.940 --> 00:37:26.990
an intent on Android.

00:37:26.990 --> 00:37:32.280
So you can send a KML file to
Google Earth and then have it

00:37:32.280 --> 00:37:36.730
be rendered within Google Earth
on your Android device.

00:37:36.730 --> 00:37:39.570
So I think that's an
important step.

00:37:39.570 --> 00:37:44.350
And with network links, you
can do a certain amount of

00:37:44.350 --> 00:37:48.260
dynamic interactions as well.

00:37:48.260 --> 00:37:54.060
Also, you can load in Google
Maps engine layers into Google

00:37:54.060 --> 00:37:57.430
Earth on the Android devices,
which I think is another

00:37:57.430 --> 00:37:59.840
important distinction.

00:37:59.840 --> 00:38:01.540
CHRIS BROADFOOT: And those can
be reused on the desktop

00:38:01.540 --> 00:38:02.830
browsers as well, right?

00:38:02.830 --> 00:38:04.130
MANO MARKS: That's right.

00:38:04.130 --> 00:38:06.850
It can be used in Maps API
applications, Earth API

00:38:06.850 --> 00:38:11.450
applications, and Desktop Google
Earth, as well as WMS

00:38:11.450 --> 00:38:12.940
servers anyway.

00:38:12.940 --> 00:38:17.280
A whole mess of things
you can do with it.

00:38:17.280 --> 00:38:17.390
CHRIS BROADFOOT: OK.

00:38:17.390 --> 00:38:21.970
So for the USA, it's possible to
search street intersections

00:38:21.970 --> 00:38:24.280
with queries like ampersand.

00:38:24.280 --> 00:38:29.050
Will it be available for other
countries in the near future?

00:38:29.050 --> 00:38:30.110
THOR MITCHELL: OK.

00:38:30.110 --> 00:38:35.530
So the short answer to this
question for me is, I'm

00:38:35.530 --> 00:38:38.000
afraid, I don't know.

00:38:38.000 --> 00:38:43.086
The reason for that is that the
geocoding capabilities of

00:38:43.086 --> 00:38:45.575
the Maps API are not something
that we manage separately or

00:38:45.575 --> 00:38:46.620
maintain or develop
separately.

00:38:46.620 --> 00:38:49.330
That's something that we share
common infrastructure with

00:38:49.330 --> 00:38:50.040
Google Maps.

00:38:50.040 --> 00:38:53.560
And there's actually a team
of engineers in Zurich in

00:38:53.560 --> 00:38:56.630
Switzerland who manage our
geocoding infrastructure.

00:38:56.630 --> 00:39:01.370
And they obviously have a team
of engineers there and a

00:39:01.370 --> 00:39:05.320
product management team there
who own that roadmap and

00:39:05.320 --> 00:39:06.140
prioritize features.

00:39:06.140 --> 00:39:09.480
And I don't have sufficient
visibility into their roadmap

00:39:09.480 --> 00:39:11.030
to answer that question
exactly.

00:39:11.030 --> 00:39:15.920
What I would say is that the
goal of the geocoder,

00:39:15.920 --> 00:39:21.860
essentially, is to answer
the queries that users

00:39:21.860 --> 00:39:23.950
conventionally enter,
if you like.

00:39:23.950 --> 00:39:24.620
CHRIS BROADFOOT: Addresses.

00:39:24.620 --> 00:39:25.350
THOR MITCHELL: Yes, exactly.

00:39:25.350 --> 00:39:33.140
So any format which is kind
of the cultural norm for

00:39:33.140 --> 00:39:35.720
verbalizing or documenting an
address in any different

00:39:35.720 --> 00:39:37.490
country is the format that
we want to support.

00:39:37.490 --> 00:39:41.940
And the concept of cross streets
is pretty important in

00:39:41.940 --> 00:39:46.590
the US, and particularly where
you have your fairly common

00:39:46.590 --> 00:39:48.670
grid-like, city layout.

00:39:48.670 --> 00:39:51.420
As you probably may
have gathered, I'm

00:39:51.420 --> 00:39:52.640
originally from the UK.

00:39:52.640 --> 00:39:55.170
And cross streets are
simply not a common

00:39:55.170 --> 00:39:56.610
concept in the UK.

00:39:56.610 --> 00:39:59.690
And this is partly because the
road network there is a crazy

00:39:59.690 --> 00:40:06.420
mess that, particularly in
cities like London, was laid

00:40:06.420 --> 00:40:09.270
out hundreds of years ago.

00:40:09.270 --> 00:40:13.730
And so there isn't really the
same kind of sense of

00:40:13.730 --> 00:40:18.610
navigation by intersection that
you have in the U.S. And

00:40:18.610 --> 00:40:23.200
I imagine that consequently,
the profile of address

00:40:23.200 --> 00:40:25.950
searches that we see on Google
Maps in London, for example,

00:40:25.950 --> 00:40:27.850
are quite different from those
that we would expect to see in

00:40:27.850 --> 00:40:30.380
New York, or San Francisco,
or something like that.

00:40:30.380 --> 00:40:34.530
So I can't speak specifically
to this particular feature

00:40:34.530 --> 00:40:37.740
request in a specific country.

00:40:37.740 --> 00:40:41.040
If there are countries where
this sort of technique, if you

00:40:41.040 --> 00:40:45.610
like, for referring to a
location is common, and the

00:40:45.610 --> 00:40:48.170
geocoding API does not support
that, then that's a very

00:40:48.170 --> 00:40:49.260
reasonable feature request.

00:40:49.260 --> 00:40:52.010
And I would encourage you to put
that on our issue tracker

00:40:52.010 --> 00:40:55.560
and we can pass it
on to that team.

00:40:55.560 --> 00:41:00.020
MANO MARKS: If I can just make
a comment, I think it's a

00:41:00.020 --> 00:41:04.470
little pat on our backs here
is that we are able to

00:41:04.470 --> 00:41:10.430
maintain this massive data
store, and also treat

00:41:10.430 --> 00:41:13.780
addresses on an individual
country-by-country basis how

00:41:13.780 --> 00:41:16.820
they would actually be
treated in that unit.

00:41:16.820 --> 00:41:21.490
We're able to take advantage
of our knowledge and our

00:41:21.490 --> 00:41:26.910
infrastructure, but also
localize the product for ways

00:41:26.910 --> 00:41:29.350
in which people use things
like addresses

00:41:29.350 --> 00:41:31.035
in different countries.

00:41:34.150 --> 00:41:34.620
CHRIS BROADFOOT: OK.

00:41:34.620 --> 00:41:37.680
So here's another one
from the Moderator.

00:41:37.680 --> 00:41:42.220
It says, "There some map layers
that are documented in

00:41:42.220 --> 00:41:45.100
the API and available in Google
Maps, but it seems to

00:41:45.100 --> 00:41:47.740
be disabled in the API
for some countries.

00:41:47.740 --> 00:41:50.910
For example the traffic layer
for Sao Paulo, Brazil.

00:41:50.910 --> 00:41:53.230
Any plans to enable it?"

00:41:53.230 --> 00:41:57.670
THOR MITCHELL: So in any
instance where that is the

00:41:57.670 --> 00:42:01.720
case, it's almost always some
form of licensing or

00:42:01.720 --> 00:42:06.310
contractual restriction that
prevents us from offering that

00:42:06.310 --> 00:42:10.000
layer in the API in
that country.

00:42:10.000 --> 00:42:13.980
We do not deliberately withhold
content from some

00:42:13.980 --> 00:42:17.320
developers unless we have to.

00:42:17.320 --> 00:42:25.290
The API is in some respects a
challenging concept to discuss

00:42:25.290 --> 00:42:29.330
with the organizations that we
licence a lot of data from,

00:42:29.330 --> 00:42:32.730
because many of them are nervous
about the consequences

00:42:32.730 --> 00:42:36.990
of broad, free access
to their data.

00:42:36.990 --> 00:42:42.717
And so we work very, very hard
to make organizations where we

00:42:42.717 --> 00:42:45.050
source this data comfortable
with this.

00:42:45.050 --> 00:42:52.250
But sometimes, we're unable to
do that, and decide that it

00:42:52.250 --> 00:42:57.490
would be better for us to offer
that data on Google Maps

00:42:57.490 --> 00:43:00.250
and not in the API than
not offer it at all.

00:43:00.250 --> 00:43:03.940
In all of these cases we
always revisit this

00:43:03.940 --> 00:43:05.480
regularly with them.

00:43:05.480 --> 00:43:09.400
And we talk to them about ways
in which this service is being

00:43:09.400 --> 00:43:11.957
used in other countries, ways in
which developers are making

00:43:11.957 --> 00:43:14.440
use of the layers, point out
interesting things that have

00:43:14.440 --> 00:43:15.050
been done with it.

00:43:15.050 --> 00:43:17.480
You know, highlight the ways
in which this increases the

00:43:17.480 --> 00:43:21.210
value of the services
they offer.

00:43:21.210 --> 00:43:24.780
And encourage them to provide
us with the necessary

00:43:24.780 --> 00:43:28.050
[? syndication ?] rights
that we need.

00:43:28.050 --> 00:43:32.960
But sometimes, it's still
an ongoing discussion.

00:43:32.960 --> 00:43:35.110
And so I can't give any
commitments as to when we

00:43:35.110 --> 00:43:38.010
would enable a specific layer
in a specific country.

00:43:38.010 --> 00:43:41.900
But just to say that every time
we have to restrict the

00:43:41.900 --> 00:43:44.210
API in this way, it sort of
pains us, and its something

00:43:44.210 --> 00:43:48.360
that we continue to try and
work on and improve.

00:43:48.360 --> 00:43:49.670
CHRIS BROADFOOT: And there's
a lot of code that sort of

00:43:49.670 --> 00:43:50.750
handles all of this stuff.

00:43:50.750 --> 00:43:54.050
So if we didn't have to deal
with that at all, it would be

00:43:54.050 --> 00:43:54.670
quite a relief, right?

00:43:54.670 --> 00:43:56.550
THOR MITCHELL: Yes.

00:43:56.550 --> 00:43:58.980
CHRIS BROADFOOT: Oh, and so
the other thing I might

00:43:58.980 --> 00:44:01.740
mention is there's a spreadsheet
that mentions all

00:44:01.740 --> 00:44:05.590
the coverage for map data,
directions, traffic, and all

00:44:05.590 --> 00:44:07.520
these kinds of things.

00:44:07.520 --> 00:44:10.270
I believe it's linked
in the Maps API FAQ?

00:44:10.270 --> 00:44:11.100
THOR MITCHELL: That's correct.

00:44:11.100 --> 00:44:14.970
CHRIS BROADFOOT: So if you go
over there, you can see if

00:44:14.970 --> 00:44:18.800
these features are available
in your country.

00:44:18.800 --> 00:44:21.730
MANO MARKS: So there's one more
question that actually

00:44:21.730 --> 00:44:27.220
got posted as a comment on
the office hours host.

00:44:27.220 --> 00:44:29.755
And it says, do you think Google
Maps offline is heavy

00:44:29.755 --> 00:44:32.020
and difficult to use on a--

00:44:32.020 --> 00:44:35.470
it says on a call
or a smartphone.

00:44:35.470 --> 00:44:37.710
I'm not sure what that means,
but we can address the

00:44:37.710 --> 00:44:40.700
smartphone issue.

00:44:43.600 --> 00:44:50.280
They're asking basically about
performance for offline on a

00:44:50.280 --> 00:44:51.950
smartphone.

00:44:51.950 --> 00:44:55.120
THOR MITCHELL: This is in
the native application?

00:44:55.120 --> 00:44:59.106
MANO MARKS: It's unclear
what it's referring to.

00:44:59.106 --> 00:45:00.356
But it says [INAUDIBLE]
when it's offline.

00:45:02.820 --> 00:45:05.880
CHRIS BROADFOOT: I guess offline
for the JavaScript API

00:45:05.880 --> 00:45:08.520
is quite a technical
challenge.

00:45:08.520 --> 00:45:14.540
Because the capabilities of
browsers for offline caching

00:45:14.540 --> 00:45:19.180
is only coming into effect
relatively recently.

00:45:19.180 --> 00:45:21.870
THOR MITCHELL: So my
understanding is that the

00:45:21.870 --> 00:45:24.520
Android Google Maps application
has a Labs feature

00:45:24.520 --> 00:45:30.050
that allows you to download a
certain amount of map data

00:45:30.050 --> 00:45:33.810
within a given area
for offline use.

00:45:33.810 --> 00:45:39.580
I am not aware of any specific
performance issues with that.

00:45:39.580 --> 00:45:42.400
But it's not really my area
of expertise, so I may be

00:45:42.400 --> 00:45:43.570
overlooking something.

00:45:43.570 --> 00:45:47.880
I do know, though, that offline
capabilities in that

00:45:47.880 --> 00:45:51.862
application were part of the
presentation that was

00:45:51.862 --> 00:45:53.360
done on June 5.

00:45:53.360 --> 00:45:56.230
I haven't had a chance to
evaluate the incremental

00:45:56.230 --> 00:45:58.930
changes that have been made and
the improvements that have

00:45:58.930 --> 00:46:03.980
been made in relation to
that announcement.

00:46:03.980 --> 00:46:08.120
So I think that's probably just
something that we should

00:46:08.120 --> 00:46:12.388
check out once that
launches publicly.

00:46:12.388 --> 00:46:13.042
CHRIS BROADFOOT: It'll
be launched

00:46:13.042 --> 00:46:14.410
soon as well, I believe.

00:46:14.410 --> 00:46:15.650
MANO MARKS: Oh, Sorry.

00:46:15.650 --> 00:46:19.075
Thor, I was just going to say we
probably should close this

00:46:19.075 --> 00:46:21.080
up now, since we don't have
any more questions.

00:46:21.080 --> 00:46:24.130
But any last thoughts
particularly as we're coming

00:46:24.130 --> 00:46:26.110
into IO in a couple weeks.

00:46:26.110 --> 00:46:28.220
THOR MITCHELL: I think
there's two things.

00:46:28.220 --> 00:46:35.730
The first is we've talked
a little bit about the

00:46:35.730 --> 00:46:40.440
JavaScript Maps API v2 and the
JavaScript Maps API v3 and

00:46:40.440 --> 00:46:45.440
about the migration from
one to the other.

00:46:45.440 --> 00:46:49.520
I think it's important to stress
that if you look back

00:46:49.520 --> 00:46:54.930
at sort of how this has played
out, the Maps API v3 was

00:46:54.930 --> 00:46:59.720
initially announced at Google
IO in 2009, and then was

00:46:59.720 --> 00:47:03.490
graduated from Code Labs at
Google IO in 2010, at which

00:47:03.490 --> 00:47:06.300
point the Maps API v2
was deprecated.

00:47:06.300 --> 00:47:10.280
And deprecation essentially
is our way of informing

00:47:10.280 --> 00:47:13.810
developers that this API is
no longer under active new

00:47:13.810 --> 00:47:19.040
feature development, and for
setting a schedule over which

00:47:19.040 --> 00:47:21.830
this API will be--

00:47:21.830 --> 00:47:24.230
to give you the time to
make these migrations.

00:47:24.230 --> 00:47:28.585
And to give you the notice that
you need before the API

00:47:28.585 --> 00:47:29.410
is wound down.

00:47:29.410 --> 00:47:36.810
Now, this means that the Maps
API v2 is subject to the

00:47:36.810 --> 00:47:38.520
deprecation policy that was in
place at the time it was

00:47:38.520 --> 00:47:40.900
deprecated, which was
a three-year policy.

00:47:40.900 --> 00:47:42.474
And consequently, the
deprecation period for the

00:47:42.474 --> 00:47:47.240
Maps API v2 ends around
this time next year.

00:47:47.240 --> 00:47:51.630
And so I suppose the message I
want to get across is that if

00:47:51.630 --> 00:47:55.770
you've been waiting,
essentially, to make that

00:47:55.770 --> 00:48:00.530
migration to see what new
features come to v3, to wait

00:48:00.530 --> 00:48:03.470
for the features that you need
to do that migration, that

00:48:03.470 --> 00:48:06.460
essentially we have now, as
far as we are concerned,

00:48:06.460 --> 00:48:10.150
completed the process of
bringing the features from v2

00:48:10.150 --> 00:48:14.350
into v3 that we feel had a
sufficient level of adoption

00:48:14.350 --> 00:48:18.060
of usage in v2 to merit
being included in v3.

00:48:18.060 --> 00:48:21.190
So now is the time to make
that transition.

00:48:21.190 --> 00:48:22.950
There's no excuse,
if you like, for

00:48:22.950 --> 00:48:24.310
holding back any longer.

00:48:24.310 --> 00:48:27.890
It's important to start actively
thinking about and

00:48:27.890 --> 00:48:29.640
working on making
that transition.

00:48:29.640 --> 00:48:34.020
And I encourage you to use Stack
Overflow and use the

00:48:34.020 --> 00:48:36.660
forums and the other support
channels that we have to get

00:48:36.660 --> 00:48:39.000
any help you need in making
that transition.

00:48:39.000 --> 00:48:41.160
MANO MARKS: And our regular
office hours.

00:48:41.160 --> 00:48:43.810
THOR MITCHELL: Absolutely,
yes.

00:48:43.810 --> 00:48:48.650
So the second thing I would say
is Google IO is, as you

00:48:48.650 --> 00:48:50.740
say, just around the corner.

00:48:50.740 --> 00:48:53.540
It's a big time of
year for us.

00:48:53.540 --> 00:48:56.060
You know we've got a lot
of exciting things

00:48:56.060 --> 00:48:57.610
happening at IO.

00:48:57.610 --> 00:48:59.030
I'm really looking
forward to it.

00:48:59.030 --> 00:49:00.960
I always enjoy IO.

00:49:00.960 --> 00:49:03.890
Just meeting developers
face-to-face, always have

00:49:03.890 --> 00:49:05.330
fascinating conversations.

00:49:05.330 --> 00:49:07.320
But, you know, we might have a
few things up our sleeve as

00:49:07.320 --> 00:49:10.850
well, so I would just say
watch this space.

00:49:10.850 --> 00:49:12.100
CHRIS BROADFOOT: Will there
be a one more thing?

00:49:14.510 --> 00:49:15.760
THOR MITCHELL: I couldn't
possibly comment.

00:49:18.830 --> 00:49:19.970
MANO MARKS: Well thank
you, Thor.

00:49:19.970 --> 00:49:22.446
And thank you, Chris.

00:49:22.446 --> 00:49:23.490
Thank you, Tom.

00:49:23.490 --> 00:49:24.070
THOR MITCHELL: No worries.

00:49:24.070 --> 00:49:25.320
Happy to be here.

