WEBVTT
Kind: captions
Language: en

00:00:06.680 --> 00:00:08.964
TIMOTHY: Let's now take a
quick look at Google Cloud.

00:00:08.964 --> 00:00:10.880
There are two things
that I want to check out,

00:00:10.880 --> 00:00:13.250
and Jen is here to
tell us all about them.

00:00:13.250 --> 00:00:14.060
Hi, Jen.

00:00:14.060 --> 00:00:14.801
JEN: Hi, Timothy.

00:00:14.801 --> 00:00:15.800
TIMOTHY: So what's this?

00:00:15.800 --> 00:00:17.760
Because I really
want to play with it.

00:00:17.760 --> 00:00:19.670
JEN: So this is
Kubernetes Whack-a-Pod,

00:00:19.670 --> 00:00:23.590
and it is a demo in which
you battle Kubernetes,

00:00:23.590 --> 00:00:26.210
where you are trying to
take down a service by being

00:00:26.210 --> 00:00:27.580
the cast monkey.

00:00:27.580 --> 00:00:29.504
While you're doing
that, Kubernetes,

00:00:29.504 --> 00:00:30.920
which is a container
orchestration

00:00:30.920 --> 00:00:32.720
framework and
open-source project,

00:00:32.720 --> 00:00:35.130
will try and keep
your web service up.

00:00:35.130 --> 00:00:36.380
TIMOTHY: That sounds like fun.

00:00:36.380 --> 00:00:38.105
I'm going to totally
try and take it down.

00:00:38.105 --> 00:00:38.605
JEN: Yeah.

00:00:38.605 --> 00:00:39.280
Give it a spin.

00:00:39.280 --> 00:00:40.905
You're gonna hit the
button, and you're

00:00:40.905 --> 00:00:42.250
going to battle for 30 seconds.

00:00:42.250 --> 00:00:44.030
Ready?

00:00:44.030 --> 00:00:44.840
Here you go.

00:00:48.270 --> 00:00:49.800
So you're doing great.

00:00:49.800 --> 00:00:54.521
Kubernetes is bringing those
containers right back up.

00:00:54.521 --> 00:00:55.645
The yellow mole is special.

00:00:55.645 --> 00:00:59.220
It will take out the
entire web app in one go.

00:00:59.220 --> 00:00:59.880
Oh!

00:00:59.880 --> 00:01:00.810
And it's down.

00:01:00.810 --> 00:01:03.330
But Kubernetes is already
bringing those containers

00:01:03.330 --> 00:01:06.349
right back up.

00:01:06.349 --> 00:01:07.140
You're doing great.

00:01:10.560 --> 00:01:16.170
Four, three, two,
one, and you are done.

00:01:16.170 --> 00:01:20.250
So during your 30-second
battle, you took out 58 pods

00:01:20.250 --> 00:01:22.260
and caused nine
seconds of downtime.

00:01:22.260 --> 00:01:25.320
But it seems Kubernetes is
victorious in getting about 70%

00:01:25.320 --> 00:01:25.990
up-time.

00:01:25.990 --> 00:01:28.612
But that's still a
very good attempt.

00:01:28.612 --> 00:01:29.320
TIMOTHY: Awesome.

00:01:29.320 --> 00:01:30.394
That was a lot of fun.

00:01:30.394 --> 00:01:30.894
JEN: Yeah.

00:01:30.894 --> 00:01:32.059
I love that demo.

00:01:32.059 --> 00:01:32.850
TIMOTHY: All right.

00:01:32.850 --> 00:01:35.220
So I'd also like to
check out Spanner,

00:01:35.220 --> 00:01:38.160
because I think Spanner's, like,
one of the coolest things ever

00:01:38.160 --> 00:01:39.310
created.

00:01:39.310 --> 00:01:41.020
JEN: Spanner is pretty amazing.

00:01:41.020 --> 00:01:43.669
TIMOTHY: So I want to check
out what this visualization is.

00:01:43.669 --> 00:01:45.210
Maybe you can give
us a quick rundown

00:01:45.210 --> 00:01:47.460
of what Spanner is, and then
tell us what's happening here.

00:01:47.460 --> 00:01:48.120
JEN: Sure.

00:01:48.120 --> 00:01:52.740
So Spanner is a
managed SQL database.

00:01:52.740 --> 00:01:55.560
What makes it special is, it
is massively, horizontally

00:01:55.560 --> 00:01:58.730
scalable, and can handle
huge amounts of traffic.

00:01:58.730 --> 00:02:00.510
And you still have
the wonderful features

00:02:00.510 --> 00:02:02.010
you would expect
from a SQL database

00:02:02.010 --> 00:02:06.960
like queries, transactions,
and other neat, shiny things

00:02:06.960 --> 00:02:09.905
like live migrations.

00:02:09.905 --> 00:02:12.030
Yeah, and it's fully managed,
which is pretty cool.

00:02:12.030 --> 00:02:14.380
Because who likes managing
your own database?

00:02:14.380 --> 00:02:17.520
This is a view of
the schema that

00:02:17.520 --> 00:02:20.580
is an example schema
on Spanner, which

00:02:20.580 --> 00:02:23.220
is the same thing being used
to power the demo on the screen

00:02:23.220 --> 00:02:24.879
next to us.

00:02:24.879 --> 00:02:27.420
TIMOTHY: If I can, I think one
of the things that I've always

00:02:27.420 --> 00:02:29.040
really liked about
Spanner is the fact

00:02:29.040 --> 00:02:34.260
that it stays in sync, even
though things are happening

00:02:34.260 --> 00:02:35.672
in different data centers.

00:02:35.672 --> 00:02:37.380
Can you tell me a
little more about that?

00:02:37.380 --> 00:02:37.485
JEN: Yeah.

00:02:37.485 --> 00:02:38.359
That's a great point.

00:02:38.359 --> 00:02:40.680
That's one of the special
features of Spanner.

00:02:40.680 --> 00:02:42.360
In this particular
demo, we have Spanner

00:02:42.360 --> 00:02:44.026
running on three
different data centers,

00:02:44.026 --> 00:02:46.530
on three different continents,
all over the world.

00:02:46.530 --> 00:02:49.290
And yet, due to some magic
involving atomic clocks

00:02:49.290 --> 00:02:51.480
and very precise
time keeping, we

00:02:51.480 --> 00:02:53.640
can still serialize
all those transactions

00:02:53.640 --> 00:02:54.985
and maintain that consistency.

00:02:54.985 --> 00:02:55.860
TIMOTHY: That's cool.

00:02:55.860 --> 00:02:58.554
So what is actually
happening on the screen here?

00:02:58.554 --> 00:02:59.970
JEN: So on this
screen right here,

00:02:59.970 --> 00:03:03.330
we are simulating a pretty
amazing ticket sales

00:03:03.330 --> 00:03:05.760
event, where apparently,
whatever this ticket sales

00:03:05.760 --> 00:03:11.760
event is, we are selling
137,000 tickets every minute.

00:03:11.760 --> 00:03:13.380
And so far, this
demo, which I believe

00:03:13.380 --> 00:03:17.190
we started this morning,
has sold 238 million tickets

00:03:17.190 --> 00:03:19.290
during its run-through.

00:03:19.290 --> 00:03:21.510
You can see they're
distributed across the world,

00:03:21.510 --> 00:03:24.690
and even despite all that
really high throughput,

00:03:24.690 --> 00:03:27.330
we're still maintaining
about a second of latency

00:03:27.330 --> 00:03:30.270
on those transactions.

00:03:30.270 --> 00:03:31.470
TIMOTHY: That's amazing.

00:03:31.470 --> 00:03:32.380
OK.

00:03:32.380 --> 00:03:34.671
Is there anything else you
want to tell us about what's

00:03:34.671 --> 00:03:35.702
happening here at I/O?

00:03:35.702 --> 00:03:36.660
JEN: It's a great show.

00:03:36.660 --> 00:03:39.050
But other than that, I think
you found the fun spots.

00:03:39.050 --> 00:03:40.330
TIMOTHY: (LAUGHING)
All right, thanks, Jen.

00:03:40.330 --> 00:03:41.538
JEN: Thanks so much, Timothy.

00:03:41.538 --> 00:03:42.525
See you later.

00:03:42.525 --> 00:03:43.950
TIMOTHY: OK, see ya.

00:03:49.180 --> 00:03:50.020
I'll be honest.

00:03:50.020 --> 00:03:52.690
It's not a party if
there's not a photobooth.

00:03:52.690 --> 00:03:55.019
So I found the
photobooth, and the guy

00:03:55.019 --> 00:03:56.560
who built the
photobooth, Alex, who's

00:03:56.560 --> 00:03:58.447
going to tell us all about it.

00:03:58.447 --> 00:03:59.240
ALEX: Hey, guys.

00:03:59.240 --> 00:04:01.560
So this is a talking photobooth.

00:04:01.560 --> 00:04:04.190
For an operating system,
it uses Android Things.

00:04:04.190 --> 00:04:06.430
And you talk to it using
the Google Assistant,

00:04:06.430 --> 00:04:10.082
and it uploads photos to
the Cloud using Firebase.

00:04:10.082 --> 00:04:10.790
TIMOTHY: Awesome.

00:04:10.790 --> 00:04:11.800
Should we try it out?

00:04:11.800 --> 00:04:13.230
ALEX: Yeah, let's do this.

00:04:17.782 --> 00:04:19.240
TIMOTHY: Where does
it talk out of?

00:04:19.240 --> 00:04:19.936
There?

00:04:19.936 --> 00:04:20.890
ALEX: [INAUDIBLE]

00:04:20.890 --> 00:04:22.684
TIMOTHY: What about the speaker?

00:04:22.684 --> 00:04:23.520
ALEX: Right here.

00:04:23.520 --> 00:04:25.400
TIMOTHY: OK.

00:04:25.400 --> 00:04:26.110
OK, Google.

00:04:26.110 --> 00:04:28.406
Let me talk to the
I/O Photobooth.

00:04:30.610 --> 00:04:32.110
WOMAN'S VOICE (ON
PHOTOBOOTH): Sure.

00:04:32.110 --> 00:04:33.026
Here's I/O Photobooth.

00:04:33.026 --> 00:04:34.087
Booth.

00:04:34.087 --> 00:04:35.420
MAN'S VOICE (ON PHOTOBOOTH): Hi.

00:04:35.420 --> 00:04:36.840
I'm the I/O Photobooth.

00:04:36.840 --> 00:04:37.790
OK.

00:04:37.790 --> 00:04:39.130
Taking a picture.

00:04:39.130 --> 00:04:42.350
Three, two-- don't
look so serious.

00:04:42.350 --> 00:04:44.290
You're in a talking photobooth--

00:04:44.290 --> 00:04:45.502
one.

00:04:45.502 --> 00:04:46.334
[SHUTTER SOUND]

00:04:46.334 --> 00:04:47.260
Do you like it?

00:04:50.199 --> 00:04:50.740
TIMOTHY: Yes.

00:04:50.740 --> 00:04:50.909
MAN'S VOICE (ON
PHOTOBOOTH): Do you

00:04:50.909 --> 00:04:52.739
want to add some
style to your photo?

00:04:52.739 --> 00:04:53.280
TIMOTHY: Yes.

00:04:55.879 --> 00:04:57.670
MAN'S VOICE (ON
PHOTOBOOTH): Just a minute.

00:04:57.670 --> 00:04:59.564
Downloading styles.

00:04:59.564 --> 00:05:01.949
[DIAL-UP SOUND]

00:05:01.949 --> 00:05:05.267
[LAUGHTER]

00:05:05.267 --> 00:05:06.100
TIMOTHY: That's 56K.

00:05:06.100 --> 00:05:08.552
I can tell.

00:05:08.552 --> 00:05:10.260
MAN'S VOICE (ON
PHOTOBOOTH): Here you go.

00:05:10.260 --> 00:05:12.210
I'm uploading your photo now.

00:05:12.210 --> 00:05:14.590
Can I show this on
my Twitter, too?

00:05:14.590 --> 00:05:15.540
TIMOTHY: Yeah.

00:05:15.540 --> 00:05:17.870
ALEX: Yeah, yeah.

00:05:17.870 --> 00:05:19.370
MAN'S VOICE (ON
PHOTOBOOTH): Got it.

00:05:19.370 --> 00:05:21.020
Uploading your photo.

00:05:21.020 --> 00:05:23.060
Printing a link
in the photo now.

00:05:23.060 --> 00:05:25.580
Don't forget to share
your photo with #io17,

00:05:25.580 --> 00:05:28.877
and have a great time at I/O.

00:05:28.877 --> 00:05:29.960
TIMOTHY: That was awesome.

00:05:29.960 --> 00:05:30.872
ALEX: Thanks.

00:05:30.872 --> 00:05:32.240
It was a lot of fun.

00:05:34.459 --> 00:05:35.250
TIMOTHY: All right.

00:05:35.250 --> 00:05:35.870
Thanks, Alex.

00:05:51.689 --> 00:05:52.480
TIMOTHY: All right.

00:05:52.480 --> 00:05:54.730
So I'm here with
Doug from Firebase,

00:05:54.730 --> 00:05:57.475
and there's a lot going
on in the Firebase area.

00:05:57.475 --> 00:05:59.440
A lot that developers
have already

00:05:59.440 --> 00:06:01.422
been able to play with
and know pretty well,

00:06:01.422 --> 00:06:03.130
but there's also some
new stuff, and I've

00:06:03.130 --> 00:06:05.570
asked Doug to show us
some of that new stuff.

00:06:05.570 --> 00:06:06.070
DOUG: Yeah.

00:06:06.070 --> 00:06:11.170
So announced today-- actually
yesterday at the keynote,

00:06:11.170 --> 00:06:13.492
we found out that Firebase
now has Firebase performance

00:06:13.492 --> 00:06:14.950
monitoring, which
is a set of tools

00:06:14.950 --> 00:06:16.494
you can use to
measure and monitor

00:06:16.494 --> 00:06:17.660
the performance of your app.

00:06:17.660 --> 00:06:19.850
So let's take a look at that.

00:06:19.850 --> 00:06:22.330
So this is the dashboard.

00:06:22.330 --> 00:06:24.716
What we have here is an
overview of the performance

00:06:24.716 --> 00:06:26.590
of your apps, so we have
traces by frequency.

00:06:26.590 --> 00:06:28.630
You could think of a trace
like a window of time

00:06:28.630 --> 00:06:30.560
that's of interest in your app.

00:06:30.560 --> 00:06:33.130
Also, we can look at the latency
of your network connections

00:06:33.130 --> 00:06:34.280
all over the world.

00:06:34.280 --> 00:06:37.090
You can also see the success
rate of your app over time,

00:06:37.090 --> 00:06:39.340
so it looks like things are
getting a little bit worse

00:06:39.340 --> 00:06:41.360
for this app as time goes on.

00:06:41.360 --> 00:06:43.330
So that may be something
to pay attention to.

00:06:43.330 --> 00:06:45.940
Now, if we drill into
traces a little bit,

00:06:45.940 --> 00:06:49.620
we can see that there are a
collection of automatic traces.

00:06:49.620 --> 00:06:52.271
So we capture these for
free, automatically,

00:06:52.271 --> 00:06:53.770
and here are some
custom traces that

00:06:53.770 --> 00:06:54.978
have been defined by the app.

00:06:54.978 --> 00:06:57.040
So you have the
flexibility to write code

00:06:57.040 --> 00:06:58.780
to get some performance,
or you can just

00:06:58.780 --> 00:07:00.730
let it do things automatically.

00:07:00.730 --> 00:07:02.440
Now, if we get a
network request,

00:07:02.440 --> 00:07:05.385
we can get a breakdown of all
the HTTP transactions that

00:07:05.385 --> 00:07:06.135
are going in here.

00:07:06.135 --> 00:07:08.176
And you'll notice that
there are some wild cards,

00:07:08.176 --> 00:07:11.170
so we're actually bundling up
different kinds of requests

00:07:11.170 --> 00:07:14.140
that look the same but actually
have different parameters.

00:07:14.140 --> 00:07:17.520
And you can see, for
this set of APIs,

00:07:17.520 --> 00:07:20.207
what's the average response
time, what's the success rate,

00:07:20.207 --> 00:07:22.540
and the number of requests
that have gone to the system.

00:07:22.540 --> 00:07:24.623
You can click through this
and see how it's going.

00:07:24.623 --> 00:07:27.320
So you know, you're probably
using a lot of different SDKs,

00:07:27.320 --> 00:07:28.600
you'd probably want to
know how they perform,

00:07:28.600 --> 00:07:30.570
you'd probably want to know
how the app is performing

00:07:30.570 --> 00:07:32.903
from your user's point of
view, and this is a great tool

00:07:32.903 --> 00:07:33.942
to get that done.

00:07:33.942 --> 00:07:34.900
TIMOTHY: Awesome, Doug.

00:07:34.900 --> 00:07:36.566
That's really cool,
and it's really neat

00:07:36.566 --> 00:07:38.300
to see all the data in this way.

00:07:38.300 --> 00:07:38.800
DOUG: Yeah.

00:07:38.800 --> 00:07:40.510
It's definitely very helpful.

00:07:40.510 --> 00:07:42.109
It's definitely also
very interactive.

00:07:42.109 --> 00:07:43.900
It's not just a dashboard
that you look at.

00:07:43.900 --> 00:07:45.790
It's a dashboard that
you interact with.

00:07:45.790 --> 00:07:47.998
TIMOTHY: That's actually
one of the really cool parts

00:07:47.998 --> 00:07:49.180
about being at I/O--

00:07:49.180 --> 00:07:51.910
that if I were to just set
this up on my app right away,

00:07:51.910 --> 00:07:54.050
I might not have all
this data right away,

00:07:54.050 --> 00:07:56.290
but we're showing
a demo here where

00:07:56.290 --> 00:07:57.860
we've collected a
bunch of that data

00:07:57.860 --> 00:07:59.590
so you can see what
it's like once you've

00:07:59.590 --> 00:08:00.520
invested for a while.

00:08:00.520 --> 00:08:01.120
DOUG: Yeah, definitely.

00:08:01.120 --> 00:08:02.800
There's nothing worse than
opening up the dashboard

00:08:02.800 --> 00:08:04.630
and having nothing
staring you in the face.

00:08:04.630 --> 00:08:05.250
Right?

00:08:05.250 --> 00:08:07.600
It's nice to be able to see what
you're getting into before you

00:08:07.600 --> 00:08:08.590
actually get into it.

00:08:08.590 --> 00:08:10.740
TIMOTHY: Absolutely.

